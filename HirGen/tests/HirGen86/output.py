import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_18 = relay.var("var_18", dtype = "uint16", shape = ())#candidate|18|()|var|uint16
const_19 = relay.const([[[-7,-8,-9,-9,-7,9,-10,3,-6,-5,-7],[-5,-6,-9,-6,-9,-9,4,-1,9,1,-4],[-3,-3,3,2,-6,-6,1,-7,10,-4,3],[8,-10,-2,5,4,-2,6,4,-5,8,1],[9,-8,6,-7,-9,-2,2,-4,9,6,4],[5,2,8,-3,1,9,-10,-1,-3,-10,3],[-9,8,6,9,7,-8,6,-9,7,3,-1],[-2,-10,5,1,1,-7,-10,-2,-3,-3,-8],[-10,-1,8,4,9,-2,-10,8,-8,-3,-7],[-10,-2,-9,-5,-5,5,2,2,-5,-2,9],[-7,-5,-5,10,1,-2,-4,-7,8,-3,-10],[8,-3,-4,-3,8,1,7,-10,-7,-8,2]],[[-7,-10,-5,-10,2,-8,3,9,-6,-8,-8],[2,-1,-9,-9,10,3,3,-2,2,10,-8],[-3,-1,-4,5,-3,2,-7,2,5,4,-9],[-6,9,-7,-8,-2,-2,10,-1,9,-2,-7],[-3,7,-2,-6,7,3,9,-4,5,-8,2],[-4,-2,8,-6,-5,5,-9,-2,-7,-6,-6],[10,-2,8,3,-7,-3,-8,3,8,-4,-9],[-10,-7,-1,-7,8,6,4,1,4,-4,6],[-9,-7,6,-10,4,7,6,4,2,-3,-3],[4,6,-9,6,4,4,-4,3,-5,-3,6],[-10,-3,2,1,-4,-9,-3,-1,-4,8,-6],[-8,6,4,8,9,10,-8,-7,-10,-6,-3]],[[7,-1,9,-9,-2,2,2,9,7,6,1],[4,7,-1,2,5,8,-2,-5,-1,-10,7],[10,4,6,-7,-5,7,4,6,-3,-9,7],[7,-4,9,3,8,3,-3,1,8,-10,10],[6,-3,-9,10,-4,7,9,-2,3,-8,-9],[7,-10,7,-3,-7,7,8,10,3,6,2],[10,-10,1,1,-8,3,5,-9,9,7,-3],[3,2,-9,-7,-6,2,-10,-3,-6,-1,-8],[-9,7,10,-3,9,-10,3,3,-10,-5,-6],[-7,7,-7,-2,-7,1,-8,-9,6,10,-1],[5,1,5,-10,-4,-10,-2,-9,2,-5,1],[-4,8,-8,-5,-1,7,8,9,-4,4,-4]]], dtype = "uint16")#candidate|19|(3, 12, 11)|const|uint16
bop_20 = relay.multiply(var_18.astype('uint16'), const_19.astype('uint16')) # shape=(3, 12, 11)
bop_24 = relay.greater_equal(const_19.astype('bool'), relay.reshape(bop_20.astype('bool'), relay.shape_of(const_19))) # shape=(3, 12, 11)
bop_29 = relay.power(bop_20.astype('float64'), relay.reshape(const_19.astype('float64'), relay.shape_of(bop_20))) # shape=(3, 12, 11)
uop_38 = relay.erf(bop_29.astype('float64')) # shape=(3, 12, 11)
uop_40 = relay.sinh(uop_38.astype('float32')) # shape=(3, 12, 11)
output = relay.Tuple([bop_24,uop_40,])
output2 = relay.Tuple([bop_24,uop_40,])
func_47 = relay.Function([var_18,], output)
mod['func_47'] = func_47
mod = relay.transform.InferType()(mod)
mutated_mod['func_47'] = func_47
mutated_mod = relay.transform.InferType()(mutated_mod)
var_48 = relay.var("var_48", dtype = "uint16", shape = ())#candidate|48|()|var|uint16
func_47_call = mutated_mod.get_global_var('func_47')
call_49 = func_47_call(var_48)
output = call_49
func_50 = relay.Function([var_48], output)
mutated_mod['func_50'] = func_50
mutated_mod = relay.transform.InferType()(mutated_mod)
var_162 = relay.var("var_162", dtype = "float64", shape = (8, 4, 13))#candidate|162|(8, 4, 13)|var|float64
uop_163 = relay.tan(var_162.astype('float64')) # shape=(8, 4, 13)
bop_167 = relay.equal(uop_163.astype('bool'), relay.reshape(var_162.astype('bool'), relay.shape_of(uop_163))) # shape=(8, 4, 13)
bop_172 = relay.not_equal(bop_167.astype('bool'), relay.reshape(var_162.astype('bool'), relay.shape_of(bop_167))) # shape=(8, 4, 13)
var_194 = relay.var("var_194", dtype = "float64", shape = (8, 4, 13))#candidate|194|(8, 4, 13)|var|float64
bop_195 = relay.floor_divide(var_162.astype('float32'), relay.reshape(var_194.astype('float32'), relay.shape_of(var_162))) # shape=(8, 4, 13)
bop_205 = relay.floor_mod(bop_167.astype('float64'), relay.reshape(bop_195.astype('float64'), relay.shape_of(bop_167))) # shape=(8, 4, 13)
output = relay.Tuple([bop_172,bop_205,])
output2 = relay.Tuple([bop_172,bop_205,])
func_208 = relay.Function([var_162,var_194,], output)
mod['func_208'] = func_208
mod = relay.transform.InferType()(mod)
var_209 = relay.var("var_209", dtype = "float64", shape = (8, 4, 13))#candidate|209|(8, 4, 13)|var|float64
var_210 = relay.var("var_210", dtype = "float64", shape = (8, 4, 13))#candidate|210|(8, 4, 13)|var|float64
output = func_208(var_209,var_210,)
func_211 = relay.Function([var_209,var_210,], output)
mutated_mod['func_211'] = func_211
mutated_mod = relay.transform.InferType()(mutated_mod)
var_303 = relay.var("var_303", dtype = "float64", shape = (15, 14, 15))#candidate|303|(15, 14, 15)|var|float64
uop_304 = relay.log10(var_303.astype('float64')) # shape=(15, 14, 15)
func_47_call = mod.get_global_var('func_47')
func_50_call = mutated_mod.get_global_var('func_50')
var_314 = relay.var("var_314", dtype = "uint16", shape = ())#candidate|314|()|var|uint16
call_313 = relay.TupleGetItem(func_47_call(relay.reshape(var_314.astype('uint16'), [])), 0)
call_315 = relay.TupleGetItem(func_50_call(relay.reshape(var_314.astype('uint16'), [])), 0)
output = relay.Tuple([uop_304,call_313,var_314,])
output2 = relay.Tuple([uop_304,call_315,var_314,])
func_318 = relay.Function([var_303,var_314,], output)
mod['func_318'] = func_318
mod = relay.transform.InferType()(mod)
var_319 = relay.var("var_319", dtype = "float64", shape = (15, 14, 15))#candidate|319|(15, 14, 15)|var|float64
var_320 = relay.var("var_320", dtype = "uint16", shape = ())#candidate|320|()|var|uint16
output = func_318(var_319,var_320,)
func_321 = relay.Function([var_319,var_320,], output)
mutated_mod['func_321'] = func_321
mutated_mod = relay.transform.InferType()(mutated_mod)
var_430 = relay.var("var_430", dtype = "float32", shape = (14, 8, 2))#candidate|430|(14, 8, 2)|var|float32
uop_431 = relay.log2(var_430.astype('float32')) # shape=(14, 8, 2)
bop_433 = relay.divide(uop_431.astype('float64'), relay.reshape(var_430.astype('float64'), relay.shape_of(uop_431))) # shape=(14, 8, 2)
func_47_call = mod.get_global_var('func_47')
func_50_call = mutated_mod.get_global_var('func_50')
const_437 = relay.const(3, dtype = "uint16")#candidate|437|()|const|uint16
call_436 = relay.TupleGetItem(func_47_call(relay.reshape(const_437.astype('uint16'), [])), 1)
call_438 = relay.TupleGetItem(func_50_call(relay.reshape(const_437.astype('uint16'), [])), 1)
output = relay.Tuple([bop_433,call_436,const_437,])
output2 = relay.Tuple([bop_433,call_438,const_437,])
func_440 = relay.Function([var_430,], output)
mod['func_440'] = func_440
mod = relay.transform.InferType()(mod)
mutated_mod['func_440'] = func_440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_441 = relay.var("var_441", dtype = "float32", shape = (14, 8, 2))#candidate|441|(14, 8, 2)|var|float32
func_440_call = mutated_mod.get_global_var('func_440')
call_442 = func_440_call(var_441)
output = call_442
func_443 = relay.Function([var_441], output)
mutated_mod['func_443'] = func_443
mutated_mod = relay.transform.InferType()(mutated_mod)
const_546 = relay.const(2, dtype = "uint64")#candidate|546|()|const|uint64
var_547 = relay.var("var_547", dtype = "uint64", shape = (10, 15, 12))#candidate|547|(10, 15, 12)|var|uint64
bop_548 = relay.right_shift(const_546.astype('uint64'), var_547.astype('uint64')) # shape=(10, 15, 12)
output = relay.Tuple([bop_548,])
output2 = relay.Tuple([bop_548,])
func_551 = relay.Function([var_547,], output)
mod['func_551'] = func_551
mod = relay.transform.InferType()(mod)
mutated_mod['func_551'] = func_551
mutated_mod = relay.transform.InferType()(mutated_mod)
var_552 = relay.var("var_552", dtype = "uint64", shape = (10, 15, 12))#candidate|552|(10, 15, 12)|var|uint64
func_551_call = mutated_mod.get_global_var('func_551')
call_553 = func_551_call(var_552)
output = call_553
func_554 = relay.Function([var_552], output)
mutated_mod['func_554'] = func_554
mutated_mod = relay.transform.InferType()(mutated_mod)
var_651 = relay.var("var_651", dtype = "int32", shape = (14, 12, 16))#candidate|651|(14, 12, 16)|var|int32
var_652 = relay.var("var_652", dtype = "int32", shape = (14, 12, 16))#candidate|652|(14, 12, 16)|var|int32
bop_653 = relay.maximum(var_651.astype('int32'), relay.reshape(var_652.astype('int32'), relay.shape_of(var_651))) # shape=(14, 12, 16)
output = relay.Tuple([bop_653,])
output2 = relay.Tuple([bop_653,])
func_657 = relay.Function([var_651,var_652,], output)
mod['func_657'] = func_657
mod = relay.transform.InferType()(mod)
mutated_mod['func_657'] = func_657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_657_call = mutated_mod.get_global_var('func_657')
var_659 = relay.var("var_659", dtype = "int32", shape = (14, 12, 16))#candidate|659|(14, 12, 16)|var|int32
var_660 = relay.var("var_660", dtype = "int32", shape = (14, 12, 16))#candidate|660|(14, 12, 16)|var|int32
call_658 = func_657_call(var_659,var_660,)
output = call_658
func_661 = relay.Function([var_659,var_660,], output)
mutated_mod['func_661'] = func_661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_851 = relay.var("var_851", dtype = "float32", shape = (10, 15, 8))#candidate|851|(10, 15, 8)|var|float32
uop_852 = relay.cosh(var_851.astype('float32')) # shape=(10, 15, 8)
func_208_call = mod.get_global_var('func_208')
func_211_call = mutated_mod.get_global_var('func_211')
const_858 = relay.const([9.003442,0.416760,0.063916,-9.863357,6.716851,6.497792,0.060945,-0.422491,2.865695,6.021916,-6.230611,9.319095,-6.560481,8.531687,1.550606,-0.980212,-7.561081,-6.836675,-7.295251,-7.544554,8.789769,-3.721413,7.912410,2.907515,-2.518804,-1.134681,9.944385,7.324900,4.723065,0.058798,-4.538453,4.517160,-6.371746,-4.538221,2.478328,-0.941070,-0.739630,6.623247,6.377145,-7.841655,-6.735606,2.258078,-9.193860,1.426229,5.309713,8.835827,-9.071795,-4.853614,-0.902317,8.446251,-6.080612,-0.607997,-0.221985,-8.851184,-7.992655,3.325892,6.611062,-0.715113,9.611251,5.614097,-0.132994,-2.356888,-1.657991,3.304400,2.617289,-0.910029,1.578583,-7.383272,-5.153558,6.308271,4.318283,3.516520,0.321625,0.215683,3.842767,9.837323,4.382540,-7.831183,2.245082,-7.233639,-4.327893,-4.562052,2.377300,4.812519,9.309827,-0.201636,8.763495,-8.413176,4.124821,-0.523931,-6.550793,-6.265910,2.204680,4.712883,0.278555,-3.595675,-4.327072,9.409360,4.171947,-5.123333,4.249402,-5.023630,-7.222402,-1.280551,-0.127258,0.349554,-6.728398,-0.451821,-9.548799,-2.060151,9.852519,-7.395628,2.094268,9.198032,-2.872854,-1.050402,-8.120659,8.346427,7.065172,-9.101279,-6.505528,-3.969774,3.674151,-7.350340,5.814794,2.983394,3.542393,-6.906762,1.699891,-1.933961,6.302663,-6.614011,7.581966,8.011863,4.418347,-3.227261,3.925905,-7.659454,5.102476,-9.179745,-0.780148,5.601007,1.797323,-3.669646,7.173105,9.438771,6.962010,-8.038334,0.709516,6.029843,8.755520,-7.953110,9.675836,0.069518,4.157218,9.718568,-1.190185,-2.844653,-9.216100,-1.031720,2.584848,7.698446,1.825274,0.749985,2.774107,9.439351,-3.282377,9.080151,1.491360,-3.666228,-1.581351,-5.141596,-7.450267,2.962985,1.742721,-5.474885,2.665228,-4.313916,3.662132,5.694811,-2.316086,7.804424,-6.217024,-0.509093,4.910910,-7.919743,-7.738454,-4.091649,1.095844,-2.531683,-3.591839,7.474331,-6.581015,-0.733894,3.324150,-4.258421,4.796756,-4.230355,-9.471004,5.093465,5.292805,7.601763,-7.427407,-5.737970,9.307505,-1.929127,9.471498,5.254826,1.925230,7.080081,2.282194,1.314681,1.872031,-0.069750,-6.980850,-2.696729,-1.209461,-8.336188,1.513751,-8.081499,7.863321,-8.567163,6.352762,-0.719237,-8.874328,4.691501,4.437430,-7.755711,9.968760,-3.157510,-3.484177,9.157942,-1.084833,6.162620,3.722167,5.217986,-6.971793,7.110353,8.343162,5.138335,-0.073816,-1.387274,8.831390,-0.516841,2.666025,-1.980847,1.857244,-9.075826,6.448441,-9.763128,-6.844141,1.296581,0.323542,-0.851232,-6.000048,-1.582823,-2.994897,-2.294881,1.157579,-8.054381,6.428807,-6.263171,5.357493,7.035532,-7.389972,5.288833,2.823815,-3.718468,9.867522,7.065666,-1.464956,-1.710013,-6.378658,-0.160294,-7.192291,8.476539,0.291395,-2.688537,-7.117273,-7.569214,5.780904,5.821186,-4.146947,-4.394358,-7.998452,-9.526532,8.098548,-0.445316,8.499722,-4.303867,0.583847,-4.752858,7.296976,8.358330,-7.381401,4.558527,9.579069,-1.080670,-3.315065,-4.794019,-1.017715,4.584991,1.596228,-4.419243,-3.061693,-2.255533,-9.299368,-5.587340,-8.201020,1.001691,1.662054,-4.689020,-6.093109,5.917346,8.195829,4.810269,-0.418605,-5.149432,-8.417109,-8.025493,1.351947,9.915507,3.829067,7.675186,4.657774,-0.113035,2.245179,-5.652898,0.336422,-6.953095,8.567899,8.446951,-7.671457,6.029775,-0.556813,2.590771,5.778473,8.691203,3.488373,-2.494836,7.922032,9.884602,9.150662,-6.997297,4.520657,-2.688207,9.744945,-9.040902,4.933656,-1.407882,-1.587659,3.629210,-4.991031,-4.279935,9.847120,0.943714,-7.867486,-4.605757,-3.196924,-1.644085,0.035952,-5.334435,-0.725002,0.589079,-3.447949,3.971235,6.352072,-9.739553,8.180330,2.500636,3.684664,-9.899852,-3.898505,-8.760715,3.745918,-2.953255,5.977358,8.889883,-4.584724,9.638192,2.559501,9.433579,9.645565,-8.841871,-9.141236,1.986675,-6.319418,9.326865,-4.267130,4.119648,0.973677,5.569448,-4.751675,-4.930070,0.612672,-7.729699,9.360260,0.399724,4.633199,9.529161,-4.212098,-2.436389,-7.904485,7.431877,3.991861,4.132856,-5.734229,2.882006,5.884574,0.468022,1.828335,8.084238,8.297591,6.110594,9.069460,7.195295], dtype = "float64")#candidate|858|(416,)|const|float64
call_857 = relay.TupleGetItem(func_208_call(relay.reshape(const_858.astype('float64'), [8, 4, 13]), relay.reshape(const_858.astype('float64'), [8, 4, 13]), ), 1)
call_859 = relay.TupleGetItem(func_211_call(relay.reshape(const_858.astype('float64'), [8, 4, 13]), relay.reshape(const_858.astype('float64'), [8, 4, 13]), ), 1)
func_208_call = mod.get_global_var('func_208')
func_211_call = mutated_mod.get_global_var('func_211')
call_883 = relay.TupleGetItem(func_208_call(relay.reshape(call_857.astype('float64'), [8, 4, 13]), relay.reshape(const_858.astype('float64'), [8, 4, 13]), ), 1)
call_884 = relay.TupleGetItem(func_211_call(relay.reshape(call_857.astype('float64'), [8, 4, 13]), relay.reshape(const_858.astype('float64'), [8, 4, 13]), ), 1)
func_551_call = mod.get_global_var('func_551')
func_554_call = mutated_mod.get_global_var('func_554')
var_897 = relay.var("var_897", dtype = "uint64", shape = (1800,))#candidate|897|(1800,)|var|uint64
call_896 = relay.TupleGetItem(func_551_call(relay.reshape(var_897.astype('uint64'), [10, 15, 12])), 0)
call_898 = relay.TupleGetItem(func_554_call(relay.reshape(var_897.astype('uint64'), [10, 15, 12])), 0)
output = relay.Tuple([uop_852,call_857,const_858,call_883,call_896,var_897,])
output2 = relay.Tuple([uop_852,call_859,const_858,call_884,call_898,var_897,])
func_914 = relay.Function([var_851,var_897,], output)
mod['func_914'] = func_914
mod = relay.transform.InferType()(mod)
var_915 = relay.var("var_915", dtype = "float32", shape = (10, 15, 8))#candidate|915|(10, 15, 8)|var|float32
var_916 = relay.var("var_916", dtype = "uint64", shape = (1800,))#candidate|916|(1800,)|var|uint64
output = func_914(var_915,var_916,)
func_917 = relay.Function([var_915,var_916,], output)
mutated_mod['func_917'] = func_917
mutated_mod = relay.transform.InferType()(mutated_mod)
var_967 = relay.var("var_967", dtype = "float64", shape = (7, 14, 13))#candidate|967|(7, 14, 13)|var|float64
uop_968 = relay.log(var_967.astype('float64')) # shape=(7, 14, 13)
uop_975 = relay.sqrt(var_967.astype('float32')) # shape=(7, 14, 13)
uop_979 = relay.rsqrt(var_967.astype('float32')) # shape=(7, 14, 13)
var_983 = relay.var("var_983", dtype = "float64", shape = (7, 14, 13))#candidate|983|(7, 14, 13)|var|float64
bop_984 = relay.mod(var_967.astype('float64'), relay.reshape(var_983.astype('float64'), relay.shape_of(var_967))) # shape=(7, 14, 13)
uop_1001 = relay.acos(var_967.astype('float32')) # shape=(7, 14, 13)
output = relay.Tuple([uop_968,uop_975,uop_979,bop_984,uop_1001,])
output2 = relay.Tuple([uop_968,uop_975,uop_979,bop_984,uop_1001,])
func_1003 = relay.Function([var_967,var_983,], output)
mod['func_1003'] = func_1003
mod = relay.transform.InferType()(mod)
var_1004 = relay.var("var_1004", dtype = "float64", shape = (7, 14, 13))#candidate|1004|(7, 14, 13)|var|float64
var_1005 = relay.var("var_1005", dtype = "float64", shape = (7, 14, 13))#candidate|1005|(7, 14, 13)|var|float64
output = func_1003(var_1004,var_1005,)
func_1006 = relay.Function([var_1004,var_1005,], output)
mutated_mod['func_1006'] = func_1006
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1015 = relay.var("var_1015", dtype = "uint8", shape = (1, 13, 11))#candidate|1015|(1, 13, 11)|var|uint8
var_1016 = relay.var("var_1016", dtype = "uint8", shape = (10, 13, 11))#candidate|1016|(10, 13, 11)|var|uint8
bop_1017 = relay.bitwise_xor(var_1015.astype('uint8'), var_1016.astype('uint8')) # shape=(10, 13, 11)
output = bop_1017
output2 = bop_1017
func_1020 = relay.Function([var_1015,var_1016,], output)
mod['func_1020'] = func_1020
mod = relay.transform.InferType()(mod)
mutated_mod['func_1020'] = func_1020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1020_call = mutated_mod.get_global_var('func_1020')
var_1022 = relay.var("var_1022", dtype = "uint8", shape = (1, 13, 11))#candidate|1022|(1, 13, 11)|var|uint8
var_1023 = relay.var("var_1023", dtype = "uint8", shape = (10, 13, 11))#candidate|1023|(10, 13, 11)|var|uint8
call_1021 = func_1020_call(var_1022,var_1023,)
output = call_1021
func_1024 = relay.Function([var_1022,var_1023,], output)
mutated_mod['func_1024'] = func_1024
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1411 = relay.var("var_1411", dtype = "float32", shape = (9, 14, 1))#candidate|1411|(9, 14, 1)|var|float32
uop_1412 = relay.log2(var_1411.astype('float32')) # shape=(9, 14, 1)
uop_1415 = relay.sinh(uop_1412.astype('float32')) # shape=(9, 14, 1)
func_551_call = mod.get_global_var('func_551')
func_554_call = mutated_mod.get_global_var('func_554')
var_1420 = relay.var("var_1420", dtype = "uint64", shape = (1800,))#candidate|1420|(1800,)|var|uint64
call_1419 = relay.TupleGetItem(func_551_call(relay.reshape(var_1420.astype('uint64'), [10, 15, 12])), 0)
call_1421 = relay.TupleGetItem(func_554_call(relay.reshape(var_1420.astype('uint64'), [10, 15, 12])), 0)
bop_1422 = relay.right_shift(var_1420.astype('uint32'), relay.reshape(call_1419.astype('uint32'), relay.shape_of(var_1420))) # shape=(1800,)
bop_1425 = relay.right_shift(var_1420.astype('uint32'), relay.reshape(call_1421.astype('uint32'), relay.shape_of(var_1420))) # shape=(1800,)
bop_1428 = relay.multiply(uop_1415.astype('int8'), var_1420.astype('int8')) # shape=(9, 14, 1800)
output = relay.Tuple([bop_1422,bop_1428,])
output2 = relay.Tuple([bop_1425,bop_1428,])
func_1433 = relay.Function([var_1411,var_1420,], output)
mod['func_1433'] = func_1433
mod = relay.transform.InferType()(mod)
var_1434 = relay.var("var_1434", dtype = "float32", shape = (9, 14, 1))#candidate|1434|(9, 14, 1)|var|float32
var_1435 = relay.var("var_1435", dtype = "uint64", shape = (1800,))#candidate|1435|(1800,)|var|uint64
output = func_1433(var_1434,var_1435,)
func_1436 = relay.Function([var_1434,var_1435,], output)
mutated_mod['func_1436'] = func_1436
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1469 = relay.const(-5, dtype = "uint64")#candidate|1469|()|const|uint64
var_1470 = relay.var("var_1470", dtype = "uint64", shape = (16, 4, 7))#candidate|1470|(16, 4, 7)|var|uint64
bop_1471 = relay.logical_xor(const_1469.astype('uint64'), var_1470.astype('uint64')) # shape=(16, 4, 7)
func_551_call = mod.get_global_var('func_551')
func_554_call = mutated_mod.get_global_var('func_554')
var_1488 = relay.var("var_1488", dtype = "uint64", shape = (1800,))#candidate|1488|(1800,)|var|uint64
call_1487 = relay.TupleGetItem(func_551_call(relay.reshape(var_1488.astype('uint64'), [10, 15, 12])), 0)
call_1489 = relay.TupleGetItem(func_554_call(relay.reshape(var_1488.astype('uint64'), [10, 15, 12])), 0)
func_914_call = mod.get_global_var('func_914')
func_917_call = mutated_mod.get_global_var('func_917')
var_1495 = relay.var("var_1495", dtype = "float32", shape = (1200,))#candidate|1495|(1200,)|var|float32
call_1494 = relay.TupleGetItem(func_914_call(relay.reshape(var_1495.astype('float32'), [10, 15, 8]), relay.reshape(call_1487.astype('uint64'), [1800,]), ), 1)
call_1496 = relay.TupleGetItem(func_917_call(relay.reshape(var_1495.astype('float32'), [10, 15, 8]), relay.reshape(call_1487.astype('uint64'), [1800,]), ), 1)
bop_1503 = relay.power(bop_1471.astype('float64'), relay.reshape(var_1470.astype('float64'), relay.shape_of(bop_1471))) # shape=(16, 4, 7)
uop_1506 = relay.acosh(var_1488.astype('float64')) # shape=(1800,)
output = relay.Tuple([call_1487,call_1494,var_1495,bop_1503,uop_1506,])
output2 = relay.Tuple([call_1489,call_1496,var_1495,bop_1503,uop_1506,])
func_1511 = relay.Function([var_1470,var_1488,var_1495,], output)
mod['func_1511'] = func_1511
mod = relay.transform.InferType()(mod)
mutated_mod['func_1511'] = func_1511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1511_call = mutated_mod.get_global_var('func_1511')
var_1513 = relay.var("var_1513", dtype = "uint64", shape = (16, 4, 7))#candidate|1513|(16, 4, 7)|var|uint64
var_1514 = relay.var("var_1514", dtype = "uint64", shape = (1800,))#candidate|1514|(1800,)|var|uint64
var_1515 = relay.var("var_1515", dtype = "float32", shape = (1200,))#candidate|1515|(1200,)|var|float32
call_1512 = func_1511_call(var_1513,var_1514,var_1515,)
output = call_1512
func_1516 = relay.Function([var_1513,var_1514,var_1515,], output)
mutated_mod['func_1516'] = func_1516
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1819 = relay.var("var_1819", dtype = "uint16", shape = (3, 16, 3))#candidate|1819|(3, 16, 3)|var|uint16
var_1820 = relay.var("var_1820", dtype = "uint16", shape = (3, 16, 3))#candidate|1820|(3, 16, 3)|var|uint16
bop_1821 = relay.less(var_1819.astype('bool'), relay.reshape(var_1820.astype('bool'), relay.shape_of(var_1819))) # shape=(3, 16, 3)
var_1825 = relay.var("var_1825", dtype = "bool", shape = (3, 16, 3))#candidate|1825|(3, 16, 3)|var|bool
bop_1826 = relay.left_shift(bop_1821.astype('int32'), relay.reshape(var_1825.astype('int32'), relay.shape_of(bop_1821))) # shape=(3, 16, 3)
uop_1835 = relay.sin(bop_1826.astype('float64')) # shape=(3, 16, 3)
bop_1839 = relay.less_equal(uop_1835.astype('bool'), relay.reshape(bop_1821.astype('bool'), relay.shape_of(uop_1835))) # shape=(3, 16, 3)
bop_1856 = relay.divide(uop_1835.astype('float64'), relay.reshape(var_1820.astype('float64'), relay.shape_of(uop_1835))) # shape=(3, 16, 3)
bop_1860 = relay.maximum(var_1819.astype('int64'), relay.reshape(bop_1821.astype('int64'), relay.shape_of(var_1819))) # shape=(3, 16, 3)
func_1020_call = mod.get_global_var('func_1020')
func_1024_call = mutated_mod.get_global_var('func_1024')
var_1872 = relay.var("var_1872", dtype = "uint8", shape = (143,))#candidate|1872|(143,)|var|uint8
const_1873 = relay.const([5,3,7,5,-5,-5,8,-2,-6,7,-1,-3,4,1,3,-1,1,6,3,6,-2,2,8,-2,-8,6,-4,8,-2,-1,8,-5,3,8,3,-3,-6,-4,-10,-1,-7,-8,5,-10,-8,3,-2,-4,2,-2,-6,1,-3,8,-3,-2,5,3,7,-8,4,-10,4,1,5,-2,-10,5,-9,-7,-2,-5,2,-9,-1,5,-10,4,-8,-9,-10,-6,-5,-4,-5,-7,3,-6,-7,-3,3,6,2,7,-4,-2,7,-7,-8,7,3,10,3,10,-10,2,10,7,7,1,-10,8,-9,-2,-5,10,-2,-5,-6,-6,-9,-2,-6,2,-2,-9,-5,2,1,3,-2,7,3,8,8,-8,4,-7,-8,6,-3,4,1,4,-7,-9,9,-2,7,-2,8,3,1,-2,10,-8,-2,-10,8,4,-8,6,-8,-10,2,1,3,10,5,-2,2,5,4,-5,-9,8,2,7,-4,-5,10,-6,8,-8,10,8,-1,5,10,8,9,-9,1,10,-2,2,9,-6,4,1,-5,7,4,1,-2,-5,6,3,-9,-5,-8,-2,4,5,3,3,5,-4,-10,4,4,4,-3,-9,9,-3,10,-3,5,-4,4,-8,7,-1,-5,-10,4,8,2,10,-1,10,10,6,1,-6,7,-7,4,-5,1,-9,-1,4,4,9,-1,-7,-2,8,4,10,8,8,-3,4,-8,1,-9,5,3,1,2,-4,-2,8,6,7,-5,-9,-8,4,-3,-5,2,-8,-5,8,8,10,6,-3,-7,-8,5,-9,-8,9,10,6,6,-8,2,8,9,9,7,-8,4,5,1,2,-8,3,-5,-9,-4,1,2,7,9,-7,-7,9,8,9,-1,-3,2,-7,6,9,3,-5,1,-6,-7,5,7,3,1,7,5,-10,-5,-7,3,10,-5,-8,-8,-5,7,-6,7,2,-3,9,-10,-8,-6,-7,-8,4,3,-10,-6,3,-8,-2,10,2,-4,5,1,-8,-8,-5,-1,2,1,-2,-10,4,5,2,9,-9,6,-6,7,4,-8,-4,10,-2,1,-9,10,8,9,-1,5,-1,5,-7,-3,2,4,2,-3,4,-10,-6,6,8,-5,6,-2,-10,-6,1,-2,3,-8,-7,-9,8,5,4,9,9,-2,3,-3,10,4,1,4,-1,8,3,10,-1,-5,-8,-4,8,1,-9,-6,6,-8,-5,10,5,5,-7,1,-10,2,1,-5,3,2,-2,9,-8,6,1,3,-6,-6,-3,-3,-5,3,3,7,-5,6,-7,7,5,-3,1,-4,2,2,-9,8,-1,10,-8,10,5,-3,2,-8,-3,-5,4,-1,-1,2,1,-4,3,-8,10,-8,-5,-7,-1,6,-5,8,10,8,6,1,-3,2,8,1,-10,-5,8,-2,9,2,-8,-5,-2,10,-4,7,-6,5,3,-4,-3,-7,-10,-9,-8,-5,3,-7,-5,-7,9,-8,5,1,-7,10,-3,-10,-10,4,-4,-4,-8,-6,-9,-2,6,-3,3,-10,8,-10,-9,-4,3,-8,-8,6,5,-9,-2,1,2,1,-8,6,1,5,-8,10,10,8,10,3,5,-10,-4,-7,4,4,10,-6,-5,2,3,-7,-2,8,-1,9,-5,-5,7,7,-1,-3,-10,4,1,1,2,6,2,-7,-5,9,3,-10,5,4,-10,-8,8,-6,-10,5,-4,3,5,9,6,1,-1,2,10,-1,-6,1,-1,-5,3,-10,-10,-4,-2,-6,-2,-8,10,6,-9,-10,-6,-7,7,7,-3,-8,-1,-8,7,3,-3,-10,-2,-4,-5,-4,-5,-9,6,-4,-2,-1,-7,6,-5,1,10,4,8,-5,-2,6,-1,-2,1,-5,10,-6,7,1,2,3,-3,-8,-2,-6,1,4,6,-10,-3,2,10,-10,-1,-10,-3,7,-9,9,-7,8,6,3,-9,1,-7,-5,10,-6,8,-7,1,9,10,-3,-2,6,-2,-3,1,3,6,7,-5,10,2,-4,-1,5,2,10,-9,-5,-5,-2,-2,-4,-2,4,-5,1,-2,-2,-10,4,-5,6,-1,2,9,2,-8,-8,1,-10,-8,6,5,-3,-5,7,-3,1,-5,-10,9,-6,2,1,-7,10,9,-7,3,1,1,7,4,8,3,4,1,10,5,5,-10,9,-2,-6,-10,-5,9,-7,-10,-2,2,-2,7,4,-3,4,-7,-7,-3,4,-1,6,-10,3,-7,-10,3,2,6,-2,9,6,-10,5,-5,-9,-9,-8,-8,-9,-6,-4,1,-8,3,9,5,8,-6,9,1,10,2,8,-9,-7,-6,-3,-8,-7,9,3,-9,9,3,9,-5,3,-6,-9,10,9,6,4,-3,5,4,5,-8,-1,2,4,-10,9,1,-3,4,6,6,-6,-10,-8,-10,10,-9,10,2,1,2,-1,7,-6,8,1,-4,10,9,-8,2,8,8,3,3,-3,-3,9,-8,1,7,-7,-10,-2,-4,-9,-8,-8,-6,-8,4,-3,4,8,-7,8,-4,4,2,4,-10,-4,9,-5,-4,3,4,6,-10,-2,5,2,4,3,3,4,10,2,-4,6,1,6,5,-5,-8,3,-8,-5,10,10,7,9,-4,9,-9,3,-2,7,-1,-4,1,2,-2,-2,7,10,-6,1,9,7,3,-9,-1,4,-1,10,-8,3,-1,4,9,-10,-2,-6,-1,2,4,-8,-10,-8,-5,-4,1,2,-4,-10,2,-9,-10,-9,7,4,-3,-6,-9,3,-3,4,6,-7,-6,-5,-6,-7,9,-9,5,6,8,-8,-8,-10,10,6,3,8,10,-10,-10,-5,10,5,-7,-3,5,-3,-6,6,6,2,7,9,-7,-4,-5,-8,-2,2,4,-6,9,-3,-2,-1,-3,10,-6,7,-7,2,9,6,-5,-3,-4,-7,10,-7,1,3,-2,-3,-9,4,1,-7,-8,-4,-9,-1,7,5,-1,10,-2,-7,-3,7,-3,9,8,6,8,10,-6,2,10,1,-2,5,-3,10,-5,9,7,3,5,-3,9,2,-4,-1,2,8,-2,-7,7,10,-6,1,-6,-9,6,-3,5,2,-10,6,4,5,8,8,9,5,-6,9,3,-2,1,-3,1,-8,10,-4,-7,-10,-8,10,6,-5,4,-4,-1,5,2,-8,7,7,-9,2,7,-1,-2,-6,-8,3,-2,-8,-5,-5,-1,1,9,5,-8,-6,-3,-2,7,5,9,-7,9,6,-6,-1,5,7,2,4,3,7,-6,-10,8,-10,7,8,3,-10,-4,-8,-4,5,-10,-10,-8,6,-7,-8,-4,-10,6,-5,-1,-7,-5,-3,3,9,-6,4,-5,7,9,-6,4,1,5,8,-2,-10,4,-8,-9,8,-7,9,-5,5,-10,6,-7,3,-5,-8,7,-4,9,-8,10,-6,-2,-10,-9,-10,3,2,-5,4,7,-6,7,-7,-3,-7,-5,-1,-7,-4,5,-7,4,-2,4,8,7,-8,-6,-3,2,-4,-4,-3,-8,-9,-5,-5,6,7,-3,-3,-8,3,8,5,-7,-8,-7,-1,-2,-2,-7,-5,4,4,6,6,-2,10,-8,-1,-7,5,2,1,-8,-10,-9,9,6,1,-5,-5,-9,-7,1,9,7,-2,-9,2,7,4,6,9,9,3,8,-10,-3,3,5,2,5,-10,8,-4,3,-8,3,2,-9,7,2,-4,4,-1,-9,-10,6,1,-1,6,4,4,3,-3,-10,-10,8,9,1,-3,-2,7,3,9,-2,8,1,7,-8,6,1,-4,2,-2,-3,5,8,-3,-9,-4,9,9,6,6,6,-3,10,5,1], dtype = "uint8")#candidate|1873|(1430,)|const|uint8
call_1871 = func_1020_call(relay.reshape(var_1872.astype('uint8'), [1, 13, 11]), relay.reshape(const_1873.astype('uint8'), [10, 13, 11]), )
call_1874 = func_1020_call(relay.reshape(var_1872.astype('uint8'), [1, 13, 11]), relay.reshape(const_1873.astype('uint8'), [10, 13, 11]), )
func_657_call = mod.get_global_var('func_657')
func_661_call = mutated_mod.get_global_var('func_661')
const_1876 = relay.const([3,-6,4,10,-9,-5,-7,5,9,4,-6,-1,2,-6,-5,9,-4,1,-2,-6,-3,-1,3,-10,2,8,-6,7,-9,5,1,-1,8,3,-2,2,1,-6,7,-9,-2,7,7,8,-6,-9,-8,9,2,-7,-2,2,10,8,-3,-8,-5,3,-10,6,-5,-10,7,8,-3,8,3,9,-5,3,-5,3,8,9,-8,-4,4,-5,-3,-2,7,4,-9,3,3,2,-9,-7,2,6,5,-10,-4,-1,7,5,-5,-3,-3,6,4,-3,4,1,10,-5,-9,-3,1,2,-9,-1,-8,-7,-1,-5,5,-8,-10,5,10,4,-5,6,2,4,-7,-6,-9,5,7,3,-10,1,1,7,-3,3,-9,-4,7,2,2,8,-2,9,3,-1,4,2,-7,-1,1,10,2,-10,-1,4,2,-5,7,2,-10,4,7,1,6,-4,-7,8,8,10,-10,-5,8,-7,-7,-4,3,1,1,-4,6,-5,-4,-2,-1,-6,-7,-5,2,-8,10,6,-10,-5,-10,10,-9,-9,-8,-9,-3,9,-7,-7,-6,-10,6,10,-4,9,-4,-10,-3,-9,-1,-9,-5,-6,-5,-1,-7,5,-8,9,10,6,6,10,-6,-2,7,-3,10,-5,10,5,-9,-1,7,-1,-10,4,6,7,3,10,1,-2,-1,-7,5,10,-4,2,-3,-10,-1,-10,6,-8,-5,9,-10,-8,-10,-3,6,-8,4,-10,3,1,4,-9,-9,1,3,-1,-5,-5,-1,-9,-4,7,-6,-7,9,-3,9,5,-8,1,8,-6,10,-7,4,10,-2,-5,4,-9,10,-7,-3,7,1,-3,-10,4,-2,1,-9,-5,-7,-1,-4,3,-10,5,3,3,9,-2,6,-9,9,8,2,-8,4,8,-8,2,-3,3,8,-9,3,8,-9,10,8,3,9,-6,1,-1,-7,8,9,-6,-7,-5,-8,2,9,-5,-9,-4,-2,-3,6,-9,-8,-5,-8,5,-7,6,3,-3,9,7,8,8,4,10,-7,5,8,4,10,-1,-4,-2,-2,-9,-7,-9,-10,5,-10,5,6,7,-9,-9,-4,8,7,3,7,10,-10,8,-8,3,-8,9,8,9,7,-6,10,9,6,-9,-3,6,2,3,-9,-9,-7,-10,-4,-4,-8,-6,-6,8,-4,-4,7,-2,6,-8,4,-9,-8,9,1,-7,-4,9,-5,-10,7,-9,4,3,9,-4,-1,-5,5,4,-5,-4,3,1,-4,10,6,6,-3,1,-10,-4,-9,3,2,7,8,8,-7,-1,1,2,1,7,-5,-3,-5,-10,-5,-6,8,-4,-5,8,-3,-2,-8,-10,-10,-10,-9,-2,1,7,-4,-3,-6,-9,-1,-4,-3,7,-3,-10,-7,-2,5,-1,7,-10,-2,-1,2,-1,6,5,6,-9,-2,3,-1,-6,-8,-1,-6,4,-6,8,7,-8,7,-2,-7,1,2,-1,-9,-7,5,-2,1,-2,-2,-6,2,-4,9,-3,7,-8,-7,1,-5,3,-8,-4,10,7,-4,3,-7,6,-2,-4,2,9,-2,-7,9,-8,4,6,-8,8,-8,-8,9,-2,-3,-2,-10,-6,9,1,3,5,-1,-3,-5,-1,-3,7,4,-5,-8,4,5,-4,1,-2,-5,4,-7,-7,8,-7,-8,5,6,3,-4,-5,6,3,5,4,2,5,4,6,-9,-3,7,-1,7,-10,10,9,-5,5,-8,9,6,-3,-6,-4,-2,-2,-6,-4,8,3,-1,3,-5,-7,9,4,10,8,6,2,9,-7,-8,8,-8,5,-3,7,-9,2,-10,5,-4,9,7,8,-7,2,7,-3,-3,4,9,6,6,7,-2,8,-7,6,10,1,8,-3,5,7,4,-6,3,-2,9,4,2,-7,-1,-5,6,8,-1,-8,7,-6,9,6,3,-10,5,-4,-6,-8,-6,9,10,8,8,-8,3,6,6,-3,-9,-9,-5,-3,-6,1,3,3,-7,5,-7,10,6,2,-7,-1,8,-1,5,-5,5,2,-7,-3,8,-10,10,-6,6,-2,-5,-1,5,5,8,-2,7,2,10,8,3,4,-10,2,8,-10,7,5,5,-3,-9,5,8,10,1,6,8,7,-10,-3,-5,3,-4,5,6,2,10,1,-3,5,-1,-7,-3,-6,-5,3,-1,1,5,-7,-3,-8,6,-2,10,-2,8,-9,-6,-6,-3,-1,5,10,-8,-1,-5,6,8,-10,-5,1,-4,6,5,-10,-1,3,-3,-8,-1,3,-9,9,9,8,-4,1,1,-7,-1,5,8,-10,10,-3,8,-6,7,4,7,-1,-5,8,-10,-2,-3,-3,-4,3,10,4,-2,-4,-8,-4,-2,-5,-7,-3,-9,10,-4,7,7,-4,6,6,10,6,10,-4,-4,1,3,10,1,-8,-4,-4,4,9,-8,5,-5,-8,10,-7,-5,8,4,-2,10,1,4,5,5,-8,-1,1,-6,10,4,-2,8,9,-10,7,2,5,5,-5,-6,-3,10,2,6,-1,3,-1,3,-5,2,4,3,-1,-1,-9,1,-3,-10,4,1,8,9,7,1,5,-7,7,-8,6,-7,6,9,-9,-8,-4,-10,-3,4,-1,5,8,4,-1,4,-2,4,-8,-9,3,2,6,-2,1,2,-10,-7,-8,4,3,-7,-10,5,6,-7,-1,8,10,-10,-5,4,-9,4,4,-9,9,-4,-8,8,-4,7,-5,5,-3,8,-7,-3,-5,-8,-8,-8,4,5,2,8,-10,1,9,1,-1,2,-5,-8,4,1,-10,9,2,8,9,8,-2,-5,5,3,-8,5,1,-4,-9,9,8,3,-1,-2,8,8,-10,-1,10,10,8,-9,-1,6,-2,9,-2,-7,-5,3,-2,-3,3,-7,7,-1,5,6,7,-5,-6,8,-9,10,8,7,-4,2,4,2,-7,8,5,9,5,-8,10,-10,-2,3,4,10,4,-9,9,2,4,-9,2,-10,6,10,5,5,10,7,-1,6,-7,4,6,-6,-5,-1,5,-6,1,-6,-5,6,-2,1,-10,-9,-2,6,10,-8,7,4,1,4,5,8,5,-5,-7,-10,-5,-7,-5,-3,-3,2,10,-3,-5,3,-10,-9,-7,2,3,4,-3,5,1,7,-10,-5,4,-3,6,-10,-9,1,-3,3,-5,4,-5,9,8,10,-4,8,5,-8,9,7,-7,5,1,6,2,-5,-2,3,-8,-7,9,2,-9,5,10,-8,-4,7,-1,-1,-4,2,-9,-5,9,1,7,4,-8,6,2,-5,6,-2,-4,2,9,3,2,-7,9,-10,5,-6,2,-1,5,3,-7,-8,7,-8,-7,-6,-2,-1,5,9,5,3,7,-4,-9,4,1,4,6,-4,-6,2,-3,8,4,8,-5,9,-4,-6,7,6,6,5,5,-4,10,-8,1,-3,-7,6,-1,-6,7,7,-4,3,-4,-1,-10,9,-3,6,-4,10,-9,3,-3,-6,-1,-6,5,-6,-10,5,1,1,-10,-7,6,-6,-8,-7,-8,-3,4,-7,-9,-8,-7,10,-7,-4,-9,-3,-10,2,-10,9,1,-8,-1,4,7,10,4,-5,-4,2,-10,10,6,10,-10,3,-2,6,7,5,3,1,9,2,3,-7,-9,-4,7,-8,-4,-8,-3,10,-6,7,2,1,-3,3,5,10,-6,-8,10,-2,8,-1,-6,-2,-5,4,-8,-9,7,9,-3,-7,-5,4,10,10,-7,8,1,8,10,3,6,-1,5,7,6,9,-9,-7,-10,-7,-5,10,7,-1,-9,-7,10,10,-5,-5,2,-4,-8,10,-7,5,-1,9,-5,7,9,-1,-1,4,9,-8,-5,4,5,-1,10,-6,3,1,8,-3,1,3,6,-7,-9,8,9,-5,-5,-9,-4,-7,10,4,7,4,1,7,7,2,9,7,-1,4,-1,-10,6,2,7,-6,5,-10,9,4,3,1,-6,-2,5,3,-7,-10,10,2,10,-10,10,-1,-9,-5,1,-6,6,-3,4,-8,-9,-5,-2,6,5,-7,6,-3,3,7,6,10,-1,-7,-9,5,3,6,-7,9,10,8,-4,-3,1,-10,5,-2,-2,-1,-2,-10,-6,-2,1,-6,7,-7,7,9,-1,-6,8,-1,7,-3,8,-5,2,-1,7,3,3,5,1,-7,-3,-9,3,1,-3,10,-8,10,-4,-2,-8,7,7,1,-7,2,-3,1,4,5,-8,1,-2,5,-1,7,4,-1,5,10,-10,2,-7,9,-6,-7,9,-2,8,-7,6,8,-7,2,-1,-3,-7,4,9,3,10,-2,9,-2,-3,6,4,-1,3,4,-6,-4,-4,-6,6,10,1,-4,8,-9,-6,2,9,2,9,-5,-5,-9,-9,-3,6,8,-7,-10,-10,-6,4,-6,-3,4,-4,-8,-7,-9,-4,1,10,-1,-4,2,2,10,-9,-10,7,-4,-4,-2,-1,-7,-5,-7,10,4,9,-5,5,8,4,-6,-3,-1,-5,7,-4,-1,3,-8,3,6,-5,4,8,3,9,10,2,-8,4,2,-10,-1,-10,7,-8,-9,3,4,-5,-1,10,8,-5,-8,-10,9,3,4,-8,9,1,10,1,-3,-4,-3,-8,-4,-7,-3,5,8,3,-3,10,-8,10,-5,3,7,6,10,3,8,8,-9,-5,-3,7,-9,8,10,-5,-10,4,-6,9,4,-1,2,-4,-4,-7,7,-3,-3,-4,-8,7,-7,-5,-1,8,8,8,1,-10,2,2,-3,6,5,-10,-8,2,10,-10,-6,8,10,-4,1,7,-3,-1,-3,4,-6,4,-5,-1,6,8,2,5,-4,-4,-3,6,-10,-4,-3,-3,-7,3,3,-7,-7,-2,10,4,6,-1,-9,-7,-6,-1,3,10,-1,2,-8,5,-3,-8,-4,-9,10,-9,8,9,-9,5,-6,-4,9,-1,2,-4,-2,-9,5,-7,9,6,-4,-5,5,6,6,-8,-3,-2,6,-1,-6,-7,8,6,9,-7,6,5,4,3,-1,-3,-4,3,-10,-2,-5,-7,-2,2,-4,-4,3,-4,-3,6,-1,-10,5,7,-8,-2,-8,7,4,1,2,-2,5,3,2,1,10,8,-3,-1,-2,3,3,-9,-9,9,-6,-6,7,-10,-9,-10,-2,-4,-3,-7,9,-4,2,-3,6,4,-5,4,2,-8,-6,-1,7,5,-2,5,-6,6,-6,1,-3,3,-5,-9,-10,-9,-7,5,6,4,-6,-1,-1,2,-10,-7,-6,-2,-7,10,-7,-6,-9,-8,2,-5,4,3,-5,-3,6,7,-2,6,9,9,-7,8,-5,-3,10,-9,3,10,-7,-4,-2,-8,1,4,-10,-6,9,2,-2,-2,2,7,-3,5,7,-4,2,5,-6,3,-3,4,5,-5,1,-7,1,10,10,-6,7,-8,-4,4,4,-9,-8,-9,10,-8,-3,6,1,-8,1,8,3,-9,-10,8,-2,-3,9,3,-7,-10,6,-6,10,-7,-7,-3,2,-9,6,-8,-4,9,2,1,-3,-2,7,-7,2,-9,9,-1,-5,3,10,2,-2,-7,4,-6,1,5,3,-4,-6,-6,-7,5,-9,-5,-2,5,7,10,4,-6,1,-2,5,-1,-10,-7,-6,-1,3,-6,-3,2,-4,9,8,2,1,6,-9,1,8,10,-10,-10,9,1,6,-1,-6,10,-8,-5,-6,8,-2,9,-5,-3,-10,-2,-9,-10,-8,7,3,-10,-2,1,8,5,6,-9,3,-10,4,-1,-6,-8,-3,-8,4,7,-3,-6,-10,10,-5,9,-10,10,-2,7,-3,2,-1,2,10,-1,-10,5,-10,-5,3,-4,4,9,6,-4,8,-6,-8,-4,10,3,-4,9,5,-10,8,3,7,-8,5,-5,9,4,2,6,-7,1,9,-7,3,-3,1,-3,-8,-3,-2,-10,2,8,3,-7,3,4,-7,4,-10,1,5,-10,-2,5,-3,-6,-10,2,-8,-6,6,-3,-2,-5,6,-2,7,-3,6,6,5,-6,-6,-6,7,5,1,8,-7,-4,8,-5,9,-5,-5,4,-3,-3,-1,1,-3,1,4,-9,-4,-5,10,-7,-7,-4,3,2,-10,-5,6,-1,4,-4,3,3,-6,-8,-8,7,-7,-10,9,-8,-9,-2,-3,-7,-6,7,-4,-7,-9,-9,9,-4,7,9,-8,-8,2,-5,4,-1,-2,-10,-9,9,1,6,-7,10,-6,1,6,2,-9,2,-8,-4,1,9,10,-7,7,4,-4,8,-3,-6,8,6,5,-3,-1,3,10,2,-1,10,4,4,8,10,2,-10,-1,10,-6,-9,9,-9,-6,-6,1,7,-1,3,-2,1,-8,4,9,5,8,-2,-10,3,-1,-2,-8,6,-9,-9,2,5,-2,9,-5,-5,-2,10,-8,-7,6,1,-10,3,8,10,-3,9,-6,-7,7,-3,-8,1,6,5,9,5,-3,-1,-2,2,-8,3,1,4,-3,-7,10,9,5,-9,9,6,-4,-4,9,-4,-7,10,8,-6,-1,-3,2,-8,-5,-3,-2,-6,-9,-3,-6,-5,5,-1,-1,5,3,-4,10,-1,-8,-7,7,-7,6,5,6,-5,7,-7,6,-10,-9,-3,6,-2,-10,7,4,4,-3,-4,-8,1,8,6,9,4,-10,-7,-2,-5,1,2,3,7,-2,6,-3,-7,-4,-6,9,-4,-6,-9,1,-1,-3,10,-8,3,-2,-1,-5,-6,3,3,10,5,8,4,-8,-6,7,-9,4,6,1,9,-10,-5,4,7,7,10,7,-9,-1,8,-8,5,-10,-6,-10,5,9,-3,9,-7,-3,2,-2,-5,-5,-1,9,-4,6,-10,-6,-6,-4,-10,-8,-9,-5,-1,3,8,-8,-10,-4,7,-6,-6,-9,-9,-1,10,-7,2,-2,-9,-10,5,-7,-6,3,2,-8,4,-1,4,4,-3,3,-3,2,-3,10,-10,-7,7,-10,1,-7,7,10,2,-5,6,-4,-4,10,9,-7,6,-7,-4,-2,-7,10,9,-7,-5,-7,2,-2,8,-6,-2,7,-7,-1,-3,7,-3,8,-8,-4,9,6,3,-10,1,-9,8,-1,2,9,-8,-7,-3,3,-2,-4,8,-4,9,-3,9,3,8,6,9,-5,-10,-8,-9,-4,-7,4,2,8,2,-4,-1,-10,-5,9,2,9,-8,6,-7,2,3,-3,2,8,3,4,-1], dtype = "int32")#candidate|1876|(2688,)|const|int32
call_1875 = relay.TupleGetItem(func_657_call(relay.reshape(const_1876.astype('int32'), [14, 12, 16]), relay.reshape(const_1876.astype('int32'), [14, 12, 16]), ), 0)
call_1877 = relay.TupleGetItem(func_661_call(relay.reshape(const_1876.astype('int32'), [14, 12, 16]), relay.reshape(const_1876.astype('int32'), [14, 12, 16]), ), 0)
output = relay.Tuple([bop_1839,bop_1856,bop_1860,call_1871,var_1872,const_1873,call_1875,const_1876,])
output2 = relay.Tuple([bop_1839,bop_1856,bop_1860,call_1874,var_1872,const_1873,call_1877,const_1876,])
func_1888 = relay.Function([var_1819,var_1820,var_1825,var_1872,], output)
mod['func_1888'] = func_1888
mod = relay.transform.InferType()(mod)
var_1889 = relay.var("var_1889", dtype = "uint16", shape = (3, 16, 3))#candidate|1889|(3, 16, 3)|var|uint16
var_1890 = relay.var("var_1890", dtype = "uint16", shape = (3, 16, 3))#candidate|1890|(3, 16, 3)|var|uint16
var_1891 = relay.var("var_1891", dtype = "bool", shape = (3, 16, 3))#candidate|1891|(3, 16, 3)|var|bool
var_1892 = relay.var("var_1892", dtype = "uint8", shape = (143,))#candidate|1892|(143,)|var|uint8
output = func_1888(var_1889,var_1890,var_1891,var_1892,)
func_1893 = relay.Function([var_1889,var_1890,var_1891,var_1892,], output)
mutated_mod['func_1893'] = func_1893
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1900 = relay.const([[[1.406064,3.169461,-7.104692,-5.719697,-6.572831,-7.559154,-9.874261,-2.100214,0.815949,-3.915925],[-6.235897,8.621498,3.883110,-1.087678,-3.557678,0.021937,-3.233710,0.202356,3.076446,-5.712706],[-2.980999,-3.530064,5.600809,7.003701,2.637764,9.968420,0.083239,-3.271748,9.665399,-5.708486],[-2.372687,2.362347,-4.642381,2.082800,-7.810652,7.500038,5.973997,-6.126328,-0.715468,0.073293],[8.865105,0.554663,3.845039,-9.233976,7.229482,-5.695207,-8.630057,-8.961642,-4.146614,6.789579],[-6.506574,8.371115,-2.254988,-0.196291,-0.588870,-5.751459,-1.987276,-3.827648,-6.382359,-1.801038],[0.596931,4.376171,8.018231,-0.654013,-7.730364,-9.369714,-4.422089,-2.824245,4.058870,6.153399],[-7.104279,-8.536151,-0.919226,-0.559426,2.466762,-8.591266,9.749217,-1.587679,1.479030,-8.570076],[-0.861654,-4.940631,-9.937308,-2.387812,4.243655,7.280819,8.251057,-7.395516,-5.671880,-5.243086]],[[-9.336484,-3.137018,1.482071,-2.324747,6.240867,-1.499097,2.202888,-0.442439,1.148389,-3.166719],[4.059238,-3.621452,7.042307,-1.748533,5.927870,1.296789,0.177403,4.087469,-8.720634,0.464147],[-2.118993,-7.424611,8.196872,8.679757,2.691044,1.192394,-6.577831,3.172316,7.802463,3.063550],[7.959142,-1.323489,8.470786,7.200160,9.489403,0.004257,-0.990084,4.682653,2.199485,-2.805046],[-6.980865,6.484844,2.563658,-7.360085,-2.656437,9.932212,-5.371106,-8.585766,1.763206,-5.054187],[-8.119270,-5.021500,8.141291,-5.255567,-3.918021,4.690608,9.690684,0.861537,2.258533,3.888926],[-3.345324,1.852220,-2.845121,-0.895362,1.648156,-0.898215,-1.654763,-4.310400,-5.055395,-7.258709],[5.140505,-4.058306,-9.634842,5.202403,5.279748,1.539044,7.367812,9.410242,-4.507533,6.811285],[-0.493366,-6.759239,-3.596459,-9.407849,3.035770,-1.804371,-6.676183,9.962373,-9.415098,-8.966231]]], dtype = "float64")#candidate|1900|(2, 9, 10)|const|float64
uop_1901 = relay.cos(const_1900.astype('float64')) # shape=(2, 9, 10)
func_47_call = mod.get_global_var('func_47')
func_50_call = mutated_mod.get_global_var('func_50')
var_1912 = relay.var("var_1912", dtype = "uint16", shape = ())#candidate|1912|()|var|uint16
call_1911 = relay.TupleGetItem(func_47_call(relay.reshape(var_1912.astype('uint16'), [])), 1)
call_1913 = relay.TupleGetItem(func_50_call(relay.reshape(var_1912.astype('uint16'), [])), 1)
bop_1915 = relay.minimum(uop_1901.astype('float64'), relay.reshape(const_1900.astype('float64'), relay.shape_of(uop_1901))) # shape=(2, 9, 10)
func_318_call = mod.get_global_var('func_318')
func_321_call = mutated_mod.get_global_var('func_321')
const_1931 = relay.const([-5.625271,-5.023795,-2.069610,7.175519,-7.636892,-3.212512,2.760168,-2.357407,-6.653861,8.482918,-3.018674,6.438696,-1.443041,-1.106607,-3.942463,4.094430,-1.256963,-8.946627,2.028770,5.960748,8.548762,4.956966,-1.244861,4.469720,1.750710,-8.975493,-3.081127,5.130302,-9.073977,-0.764831,-5.949595,2.009030,-4.727032,8.556510,3.630131,2.684987,6.672082,1.635522,-0.805212,-0.117867,-3.100071,7.776158,-5.273009,5.953471,-9.665070,-1.992914,8.158410,-7.891855,4.847973,-2.852049,-0.250179,-8.243576,-9.957928,5.716382,-9.016906,-2.786168,-9.441167,-2.349959,0.901907,9.808195,3.957325,-3.422920,-6.264672,-1.238085,-8.267501,-9.894207,-7.882262,-3.704313,2.870036,-3.558092,0.203663,-2.347732,-8.799265,0.168055,-2.634231,-2.390374,-3.544591,6.028733,1.141045,-7.681705,-0.810557,-5.115590,6.651228,4.169439,-4.137699,0.711646,-6.749321,-2.772231,-2.868398,-4.983893,-2.581462,-9.583437,0.118315,8.816833,-7.923496,3.165660,2.231013,2.520446,-6.750874,0.090699,-6.949639,1.573035,-9.658552,-0.321945,9.542834,1.831375,4.865831,-6.471918,8.975727,1.461230,1.644619,-1.984258,-7.320763,-3.468520,-5.038651,5.932983,-2.706424,-9.102713,-8.796449,6.050424,8.168859,-5.104407,-2.055529,-6.498186,-4.203139,2.873994,-8.838221,-1.942587,-7.574204,4.272257,-7.565204,2.753972,2.966206,2.677495,-7.252839,1.428839,-4.342695,-6.268937,-2.043827,-2.596424,-1.961737,8.355185,-8.065669,5.692334,-1.034036,9.544803,-6.685108,7.178355,-4.831044,5.959157,8.845102,3.384471,-0.644539,-9.216926,-8.892388,-7.953874,3.876837,2.475658,7.637470,-8.067817,4.258729,3.399401,-8.142434,-3.976766,7.713793,-0.812482,-5.232142,-6.982790,1.060119,-2.078829,-7.147439,7.043375,-6.642617,7.984669,0.780079,1.243958,4.006040,-1.446348,7.499691,6.985720,7.872315,0.533583,9.765932,-4.980261,-9.809575,-8.657978,4.447572,-0.818625,-6.217768,-1.526218,7.214406,-7.619503,-9.943392,5.836693,9.188098,-4.639658,-1.863326,6.772836,-8.653320,-2.379829,-2.172868,9.118786,-9.121188,2.108290,3.735030,8.913421,3.727348,2.479271,-0.710329,8.471361,3.622912,-3.869024,2.747259,6.169892,-6.931327,-6.919773,-1.010298,-9.862211,-7.982353,9.534985,5.856251,-8.174836,9.187504,-6.681562,-3.677199,7.294459,-0.072931,1.465112,8.591649,3.540901,1.725210,-9.191794,1.139595,-1.285573,-2.079140,2.553904,-9.518294,-2.741861,5.760172,-3.539502,-9.716274,-1.434306,5.776076,-5.817757,-1.526645,-2.327817,-1.070817,-0.627019,-6.110110,1.062099,-8.414894,-7.503632,-9.089391,-8.412906,-0.385140,-5.877660,1.910505,2.921415,-2.811469,6.941794,8.934011,-3.602115,1.512146,8.054897,-1.174638,-0.519537,4.753848,7.997737,-1.705926,0.766870,-8.218664,7.729756,-7.825281,4.468270,3.733782,-3.129545,-5.780524,-3.324130,1.651045,5.662688,-1.743487,-0.880445,6.864665,4.730476,-1.732259,-7.837479,-4.694168,-0.670221,-2.701112,-9.309092,-2.014487,-9.772927,5.842894,-1.898623,-4.695490,-7.966689,-9.684670,-6.475200,4.045196,3.249421,-3.895462,-8.135363,5.288748,-2.831007,-6.312101,5.573414,5.155720,-9.832786,-4.700377,2.560376,-5.076507,8.928305,-8.216832,-1.506401,-8.738896,4.316017,0.225406,8.056636,-1.144873,-7.957667,-5.810768,-8.503698,6.546225,4.990904,0.444506,-0.623053,-6.420976,-8.215404,6.139877,-2.932469,-3.945477,0.155030,-9.832912,7.019039,-9.016295,6.434580,7.549202,-3.143536,-8.843336,6.789736,-1.339300,-8.529588,7.611362,2.671513,0.770305,-2.736357,-2.550707,-2.519687,0.682776,0.396419,5.672651,-8.325482,-1.278705,-9.443888,-6.350640,8.409850,3.379802,-0.978330,-5.189750,-1.932342,9.698268,-9.747931,-5.800287,-8.009728,-2.819977,1.522891,5.196503,-8.381725,-5.796914,-4.010777,-3.429072,5.592428,4.380177,2.368271,0.700240,-1.400105,-0.352829,-1.813318,7.695005,-8.546773,4.314602,5.342389,-7.965554,-2.421445,-7.807595,9.981007,-7.744472,3.184112,-6.742729,-3.151384,-2.452471,2.099773,4.213302,7.687030,-4.950750,-5.080798,0.823423,-1.408749,5.088552,-2.055866,-9.281353,5.306179,-6.399480,-2.297984,2.042200,-2.440307,3.247405,-3.741864,-0.751370,4.318511,-3.719389,-5.753161,-7.261000,6.488383,1.954669,4.169923,2.799673,9.573579,8.049975,4.201628,-4.728857,-3.448916,1.749020,-4.658091,-5.593142,-6.030831,7.049181,-6.090788,-5.303247,8.468562,1.992584,7.901967,0.468998,-9.742360,-5.328841,2.704583,-7.000137,7.419445,7.706965,5.380661,3.101470,-7.270105,-3.719521,-9.607976,-2.527614,-8.041169,1.464522,-2.515332,-0.399599,7.772379,-8.367774,2.293298,1.010247,-9.531031,-1.813485,-9.069124,-7.498554,-8.718148,-5.828615,1.580616,5.550266,-1.500441,8.583040,3.466786,-4.033533,-7.840299,-1.526487,2.170238,-0.213468,-0.892674,3.932443,3.875855,1.639226,-0.398376,-3.703918,-0.326988,9.070458,-4.941861,8.858265,4.308705,0.432755,1.930405,3.643924,0.341359,-1.413624,8.941881,-9.013326,8.448371,-9.992163,0.286933,7.044984,-3.694978,7.166553,1.759339,2.886153,-5.963873,0.898383,-5.787706,-5.705051,-6.724161,3.441711,-9.041159,-2.730433,4.033190,5.675420,-8.263576,-8.525515,7.337437,3.553677,-7.568384,1.282623,3.900149,-8.404022,-0.499090,6.048976,-2.393517,-6.231506,7.637690,-2.071573,8.280867,5.052843,6.914410,0.503914,8.962683,8.745235,1.990786,-5.508341,9.012394,-1.541109,4.533699,0.877940,-0.176225,-9.103862,-6.567860,-6.715730,-6.080570,9.997399,8.692024,7.965257,-6.403113,-9.315474,9.700365,-5.579240,-5.468985,-8.012376,2.475984,9.974266,4.715782,8.544936,-5.418085,-6.801170,5.155858,-0.773696,-1.195186,-4.802190,5.954623,-6.758345,1.378302,8.836085,8.605943,-4.016380,9.905329,-8.053920,8.541000,8.915761,2.654441,1.401197,8.079483,6.807977,3.509115,-7.198296,-0.752700,2.044605,-8.199468,0.824054,8.377973,-6.238655,9.902618,2.458247,-4.854960,3.926369,-7.543272,-4.297093,-9.661519,6.318385,8.545764,-8.802743,-1.204121,-7.319481,5.835743,-3.076210,5.949812,1.346250,9.101418,1.186244,2.201723,1.379266,8.770321,-0.312028,5.071444,3.395673,7.570807,7.989438,-5.991522,-6.558271,2.814003,-7.413389,6.219142,-2.650101,-2.422582,-6.972888,-8.959994,-7.831348,-3.230777,5.106059,-4.216057,-5.128094,8.149111,-1.347566,1.972226,4.941168,2.084726,4.409173,8.013209,-7.002946,-0.750309,-3.168034,-3.538293,-8.394469,6.344870,5.529697,0.096107,8.607513,5.418446,-0.975088,2.030658,2.805341,6.426727,5.449698,-0.873516,-5.944811,2.330269,0.610330,0.049681,-1.732962,-1.913921,7.089308,1.167843,-3.411805,-5.998643,-4.041609,-7.555395,-1.314041,-1.411838,-3.481111,6.868906,5.785755,7.806915,0.144750,6.223409,3.395833,5.540240,5.660092,-3.750848,0.241237,-0.709708,-4.177720,5.247689,-4.102737,-5.880537,8.495017,4.295179,-6.543982,6.454705,-6.852968,4.142691,-9.496650,-3.145960,-2.419494,5.489077,1.567007,9.440296,-7.343354,-1.098490,-1.241951,-3.365781,3.197059,9.694353,-3.487924,3.666498,1.234686,3.968903,2.075264,4.824719,-0.541991,0.512355,-4.823260,6.817495,7.637995,3.160056,-4.235029,0.660912,3.657684,-0.038959,-6.719997,-8.633125,-5.524092,9.205512,7.882689,6.465516,-0.526497,9.805133,8.950503,0.355707,9.037143,2.431907,-1.254174,1.700466,3.954261,-5.533176,3.614352,8.317388,-2.065684,7.835277,1.666979,8.208855,8.433532,-9.813919,8.971803,3.017894,-4.485455,-4.061216,-5.289933,-1.452191,6.633850,2.995711,-2.946126,8.733624,4.485870,-5.928034,8.295612,-6.147391,4.809695,-4.799077,7.218207,2.517645,-2.611682,-9.957141,5.620081,-7.749721,5.623863,0.128454,-9.522747,-4.831841,8.588597,-7.181137,-9.780901,3.782478,0.163558,-8.551941,7.407443,-8.506372,-1.616404,-5.087854,8.019230,-3.382108,-9.887440,-5.901466,-6.601981,4.301080,-0.581343,2.402877,-4.302685,-7.830493,-3.254300,-2.486050,-5.348642,7.507767,-9.563989,-1.263487,-3.865580,-2.972162,-6.190933,9.709580,-0.459785,-7.588987,-9.819442,9.546256,-2.525997,-0.993513,3.598005,-5.527192,6.592929,-6.411539,-1.954848,4.862835,3.050671,8.156688,6.708240,7.642496,0.973258,-8.291224,0.983415,0.260125,4.766551,-5.644766,-6.298515,-8.989412,-7.921133,6.447735,0.817376,7.560234,0.506052,-1.257904,9.304952,-9.181248,5.055965,-0.660706,-7.710836,-7.743597,3.349788,-3.770063,3.454137,6.833523,7.464204,-6.514849,7.046228,-7.467320,1.817914,9.165775,-7.580253,4.021733,-3.678021,-8.406026,4.016083,-0.898862,0.010285,8.481250,8.224646,-3.770372,0.314054,6.600622,-7.941146,2.903502,-0.674867,-6.010309,-8.233748,-6.410594,2.454089,-4.885208,3.711143,6.922654,3.897897,-0.281792,1.895278,-3.816350,8.725519,4.338055,6.011163,5.351926,-8.082057,-2.683601,-9.980221,6.425054,8.495430,-2.283145,1.578766,2.990028,-0.102452,0.673565,-8.648758,4.724748,-5.509374,2.968057,5.447074,8.541434,-4.592732,8.880179,9.207984,-5.606326,-5.626131,5.220701,-0.088188,-0.165947,-9.617305,-7.963097,6.848311,2.941387,-2.453929,2.406824,4.844052,3.753426,-9.935727,-8.241634,-3.742734,-3.302969,-9.836258,-7.769818,-3.051890,9.946788,-2.472039,8.297418,8.917754,7.385897,2.332507,-1.682039,-5.032067,-5.985160,-8.304475,-8.489751,3.964195,2.749195,-7.338309,-7.910056,-3.682118,-0.761406,0.988861,5.329996,-1.164889,8.907964,6.698979,-2.079339,6.478044,4.085820,-8.776870,-1.406310,-5.678597,6.590781,3.006969,-9.953678,1.223826,5.942354,-9.992963,-0.297252,4.646710,5.027120,5.394484,-1.959345,-6.707749,-3.975777,7.893453,9.828400,-2.680928,1.036435,-7.903360,4.502207,-4.452074,6.353133,3.213627,8.555092,0.799261,-0.369416,-4.849432,4.880329,-6.950244,3.479192,6.928497,1.254684,2.816700,5.760260,-4.130293,-2.470658,7.952748,-3.958943,7.451766,-4.731816,-3.027369,5.104586,8.024880,8.540958,-0.536406,-8.957476,2.879050,3.144291,-6.645686,0.066699,7.144944,1.839605,3.862403,-9.173863,6.341322,0.852270,5.597775,-7.028257,4.684925,-3.485948,3.592934,7.377985,-1.413164,1.402897,-3.090195,-0.039150,-1.831715,-2.274737,1.939646,-8.600457,7.835445,-6.310063,-7.465624,-1.678293,-9.414731,3.083257,9.267302,5.897765,0.098895,-5.937666,8.716265,-2.051385,-4.875393,5.468687,6.365932,-1.617708,0.773665,1.625723,3.899730,1.477458,-5.254538,2.097613,-7.914906,7.387874,-6.288032,5.107016,-2.474633,1.342083,-1.074677,-1.479946,3.888673,6.533498,8.919377,-3.368494,-9.247258,6.765226,2.875075,-7.886524,1.985116,1.491554,3.244216,4.524640,-3.164714,-7.166912,5.602949,-3.810253,3.218128,3.628950,-5.837142,4.543523,8.829558,1.237942,-4.639831,-8.638610,-6.564111,0.057603,-7.433706,7.938457,9.689465,-5.315486,3.926096,1.698441,-9.967449,3.971816,7.861476,6.480327,4.671933,7.003844,-0.942343,5.706265,5.146640,-3.409516,3.677461,7.488547,4.424370,1.627498,-1.463993,4.694828,6.749751,-6.884706,7.707867,-3.975754,-5.730305,-2.654817,6.301680,1.772182,-8.448747,7.475182,-7.109464,6.524111,-5.717445,-7.220109,9.011278,5.582655,-8.814899,3.980172,8.247333,2.090939,3.408787,-5.988235,7.382878,-6.538234,9.111372,-2.577479,-6.098783,2.967890,-6.612592,9.464582,6.509245,5.796646,-7.535958,2.238829,-3.315603,-7.924293,0.262646,-4.361148,-0.695413,-2.786501,-3.932222,6.674372,-4.367487,0.726803,-2.649147,2.709593,2.716459,-9.544466,2.625270,2.545915,-4.010978,-4.784122,-0.466712,-2.627123,7.172537,-5.697491,7.553445,-8.317181,-9.365082,1.894464,-8.208189,-1.557430,2.126104,-5.038285,0.305295,-9.616015,4.581726,0.042767,4.466733,-3.484315,-7.947620,3.399670,0.674354,-6.875997,9.286863,-9.581032,-8.087573,-0.094194,2.695454,-9.205248,-2.927051,-2.431892,5.947350,-3.910887,-6.713582,5.975392,4.227086,-5.138596,-7.947051,0.590413,-7.628205,-5.259705,-9.557762,-0.663342,1.603344,-7.386005,5.966116,5.988391,-8.714147,-9.748867,-9.831419,-7.021181,-8.558572,-4.139526,2.616720,-0.396933,-2.750606,-5.090810,9.832089,-4.021147,0.331050,1.354713,-8.139062,-3.961941,-8.361699,2.533392,-1.601912,-6.636399,-3.179338,-1.390046,-6.545544,-2.018408,4.077148,-6.123305,4.035016,7.269269,4.537942,-8.854667,2.163458,8.601960,7.995812,-1.658168,-8.335606,-0.395485,-5.993459,-4.740422,8.231770,4.683690,5.310002,-0.227792,-6.563092,5.696009,-6.976146,5.051538,-6.902981,4.009261,5.510529,-0.321004,-8.432030,1.563199,4.529726,-6.817533,-7.812853,5.511214,9.622186,-2.025620,4.761935,6.355915,9.955429,7.823068,7.049459,7.803121,-0.329818,-7.963446,-9.164158,2.193695,2.939574,8.356147,0.533072,9.757869,-4.825331,3.768926,-1.484020,7.984449,6.095145,2.656636,4.388438,-3.675144,-1.368023,-6.861863,-4.067471,-6.271766,2.647245,0.440002,-5.237198,2.362245,-3.062927,-5.156795,-8.599268,8.259353,-6.545163,-6.880042,3.172016,-4.265797,-7.083275,0.821796,-3.736139,-1.108075,0.933645,3.836650,0.729036,-6.338330,6.470162,-1.726833,-3.784818,6.595622,-2.158617,-4.634210,-3.359560,-2.247628,7.338630,9.828425,8.147954,-2.988828,3.775970,6.024801,-6.006445,9.362669,-4.588636,2.243743,3.108874,-2.729645,6.250627,8.627820,7.634481,-9.597061,2.687212,-9.418113,1.953738,1.803665,-5.419081,7.772464,-9.085789,-3.390686,-1.682155,5.325625,6.694216,-2.461936,-6.694465,-8.263057,2.554399,8.614378,4.681801,3.687257,-2.826080,0.530853,5.433664,5.585351,2.427924,5.119895,-2.594835,6.393860,-2.336368,-9.983297,-0.163550,-4.584423,1.995792,-5.066260,7.154955,5.195756,1.881251,8.266479,-6.995550,-0.858952,-2.375212,1.543250,7.295070,-8.934128,-4.038593,-5.744978,-0.580016,-7.339568,-6.885434,-2.294941,4.388022,9.448314,-5.050641,0.419251,-7.820513,8.713450,3.683762,8.636694,0.475290,-0.142631,-2.389845,-9.746187,0.266821,-3.965467,-5.543944,-3.245971,-4.566952,-9.250553,-3.993328,8.632840,5.045244,6.591395,-9.629906,6.212689,5.327184,7.520916,8.996841,-5.422880,9.540546,-5.905733,3.460668,8.902463,9.255999,-6.386682,5.610080,-7.578977,-9.734513,-7.001966,-0.819443,4.179103,8.965251,0.855479,-9.103306,-7.377539,-1.895862,1.462750,8.924968,2.039353,-7.031451,-8.051112,-5.561343,0.422764,-2.214517,0.412177,5.502060,-9.534394,7.163087,9.187390,5.332047,1.661651,8.649693,8.097205,9.530866,0.084830,2.750618,-8.365887,-7.114421,-2.290099,0.403005,6.099029,-2.212910,7.532167,6.438036,-5.017764,-5.637549,-1.197469,-1.612422,-4.168866,-0.815522,-8.847145,7.960002,1.733741,-3.598346,2.730494,6.363056,-6.677972,-9.380557,-9.172114,3.829531,9.194690,-8.311811,2.175978,3.059361,7.533857,1.389087,5.026894,-3.165664,-4.631713,6.854507,-2.638011,-0.746347,-3.921911,-4.236340,-7.435514,0.251721,-0.795491,3.870923,5.317500,9.981903,-7.620654,-2.233607,-9.239875,1.215884,2.505162,-6.507906,0.324030,-7.916272,4.106951,-7.830570,-5.694775,0.396309,-4.498339,-3.196355,-7.319210,-4.782104,-1.099097,-4.207970,6.029426,8.828357,-6.075456,-5.663361,-3.171659,-5.247615,1.695864,9.099764,-1.526385,-4.301085,1.822648,-3.441810,9.184969,2.186913,1.164129,-2.530628,0.435379,8.121980,5.303702,4.160124,5.177847,6.900423,6.870748,-1.098329,-4.283973,-6.495976,-0.072600,8.445880,7.599413,4.264645,-9.225606,9.129150,-4.946277,-1.580895,-0.313062,6.611022,3.825345,-2.542237,-8.043536,-6.955066,-1.390672,-6.524145,-1.205926,-1.193898,-5.911378,-8.115459,8.192694,-4.704135,5.511474,4.888777,5.752428,7.871319,9.395714,4.813077,-7.991878,-6.420284,-9.355860,8.425668,-3.414492,-1.276718,-0.839819,-2.712468,-0.627186,9.829090,8.644462,1.441731,5.917344,5.576038,-5.646189,-5.122474,-1.925045,6.488212,-1.669307,4.822520,-0.014546,6.701689,9.954030,-4.848871,0.878529,0.726514,-6.780062,5.121733,7.492734,2.054135,2.216453,-5.706480,-7.100690,-1.392489,2.731353,-3.043107,3.539677,-9.206781,2.774974,-3.458500,-2.342593,5.252411,-1.227867,-2.083262,0.467967,1.600653,-4.851031,-7.735424,-5.605428,4.490563,1.925577,0.939957,2.883702,7.778397,0.254232,7.438173,6.506072,-5.857887,8.999101,2.660423,-6.814349,8.342852,-7.270157,-5.461693,-4.809639,-9.294818,9.140954,-8.109718,1.103778,0.514668,7.745350,-7.503938,9.979056,-7.218251,-5.851972,3.429990,8.106942,6.784008,-9.127671,-5.391974,6.409183,-7.101882,-3.843224,7.460166,-5.881148,-6.232921,-2.457538,-8.458367,-1.984499,-1.889337,-3.301924,0.728141,2.785977,-4.014882,-6.396996,-4.356584,1.597255,-2.049554,-7.718524,-9.977368,-0.447423,-2.733064,7.300931,-3.385740,-1.009480,-9.450608,-9.065388,-1.974392,-5.496215,-9.296054,4.236813,-3.076483,7.506786,-3.958629,2.862023,7.524568,-5.031848,-9.706588,-9.886201,7.492178,6.604136,-3.923397,6.167927,1.290392,4.789303,6.899844,2.459412,4.290407,-8.948427,-5.784706,-0.969969,-5.441459,7.607038,3.753029,9.666407,-2.103656,-2.826584,3.972184,0.024989,-2.702666,-6.153302,8.028556,4.818866,-9.856194,6.026119,9.036234,-5.968907,-3.230412,-0.214681,-4.606748,-5.595194,7.367522,9.282872,-1.415793,5.537221,3.597096,-0.033261,3.809680,8.788245,-5.824317,-7.959947,4.163778,3.117018,4.359577,7.448106,1.341361,-1.837777,-8.217230,9.632980,8.970542,0.228387,-4.919931,1.228823,-5.652569,-2.910255,0.032057,-1.648381,6.385751,-5.335621,-7.108196,-8.748908,0.378085,-6.416788,-6.789328,4.581236,-5.027220,-2.770711,-2.987779,8.780025,1.003451,8.717906,-5.059610,5.091319,9.814455,-1.118971,1.927000,-7.968559,-5.264055,-5.547298,-1.398864,-7.864748,4.234061,-7.532351,-2.238450,-3.208429,3.914722,1.046789,1.131497,4.967883,-3.760938,-9.333255,7.307741,8.207512,2.629659,-5.552943,7.035041,0.475377,-8.015211,-4.020434,0.683447,-7.786191,0.720348,-4.418021,-5.469163,8.454448,-7.965927,-0.106657,-2.452767,3.999136,2.976396,-2.616478,-9.952980,5.865445,9.689654,4.468352,-1.718866,1.279626,0.263406,2.095911,9.676754,3.827732,-9.778876,8.682613,9.871417,6.540645,2.676894,1.596118,4.675460,-2.934086,-4.657946,4.842381,5.266744,-1.555228,-5.515103,-8.822518,9.930506,6.670466,1.940549,-2.569484,9.215555,7.938449,7.257639,-4.827917,-4.423737,4.227953,5.006048,4.748352,5.372963,3.375524,3.908595,-1.473058,8.972554,2.950788,-4.241454,6.371177,6.239171,-0.633794,6.302439,4.947571,6.676371,2.803122,6.320511,7.848141,-1.495710,-2.673263,-5.677661,-5.301253,8.391459,-5.415694,-1.656691,5.639034,1.063550,-2.285145,5.332921,-0.083325,1.488528,4.204511,-5.024700,3.825908,8.776662,5.733520,-1.087485,-1.045855,6.385851,-4.929815,-3.366968,3.872915,4.063886,7.710605,2.865633,-3.081345,7.782609,5.879577,-1.342894,-7.794888,-8.358547,-6.780586,-0.407680,-0.446720,5.489790,7.637961,0.839984,2.296043,-5.948010,0.097974,-4.206555,-9.665918,6.412930,-2.115163,3.868744,6.701892,-0.123130,-0.883547,-1.277158,-2.120107,2.552573,-7.473351,-0.631018,-1.659565,-2.953334,-0.780898,8.140565,-4.917394,-4.731884,-1.354553,0.276800,3.097547,3.900985,-1.313982,8.756958,-0.046299,-7.438640,3.687086,-4.123278,-0.949788,0.206031,-5.572368,3.916672,7.418141,1.226379,8.856563,3.935816,-8.888577,5.557848,1.267526,6.083275,2.333693,-2.607748,-1.331631,-2.575523,7.669015,4.961944,-4.608468,-5.447983,-0.228391,-9.080448,-7.578808,-4.571015,-7.822321,-0.530226,-3.226394,8.765249,2.186071,-7.629089,1.807381,-1.720883,-7.374686,-3.626413,7.089512,-7.068306,-4.739415,3.796614,9.758555,6.977242,0.672230,1.110766,7.290214,-3.412531,-9.276296,-5.705560,9.241642,-5.514795,-8.083613,2.356927,3.667653,3.489499,-9.909902,-2.759455,-6.302335,1.872991,7.331316,-5.984560,-8.032449,-9.783961,6.085052,-8.704882,2.553924,5.242411,2.024758,3.204914,-4.763559,-2.926215,-4.229174,-5.090615,-9.664715,-9.681541,-8.070303,-5.344405,2.491803,8.155924,5.384338,-7.238919,-7.168081,-1.127012,-7.801666,-1.321822,-0.596337,7.275097,-8.110623,5.051496,1.941829,-5.156428,-3.580047,-6.605276,8.753564,1.360803,9.505368,-7.886812,8.796609,6.238186,-4.070654,-2.921115,-9.251071,9.957500,-8.640355,8.701158,2.659978,4.709554,-7.832117,9.346977,-8.572507,-1.569908,-0.244543,4.030812,1.497431,8.694830,9.150659,-3.387528,4.698602,-1.759389,0.520337,-4.660711,1.215663,-6.967311,0.442280,-7.029116,-4.413858,-0.360945,6.496225,-2.111638,-2.846135,-2.497784,-7.730939,-2.666688,5.700230,0.509951,-4.208775,8.968136,4.800394,-8.736367,9.574179,-8.443084,4.385284,6.240844,2.901743,-9.862688,4.835529,5.153334,1.885942,-2.847751,-5.107435,2.990863,3.262642,-1.795626,8.641536,2.819389,8.663286,-1.808963,-6.391449,8.941714,-6.731068,-7.389006,4.684745,4.788044,8.877668,0.369025,7.778705,-5.582965,6.366437,4.742727,1.862615,2.268717,8.277993,-9.668482,2.329325,8.846922,4.679242,-0.585043,1.886565,8.467040,3.922977,-4.323207,-0.439384,0.067523,8.030997,-4.271780,5.615792,-1.243835,3.427430,1.267453,-4.213408,-5.823213,-0.908284,-0.086772,-1.600898,-2.305019,-0.413647,-5.317244,6.034295,-3.683958,4.996412,-1.863352,1.899681,4.405653,5.775659,7.087653,8.352594,5.000124,-4.494363,6.890551,3.521815,-0.157482,-3.377717,-1.155379,-4.814281,-7.777694,2.771067,8.528230,3.511757,-4.850983,5.449759,0.244135,6.017413,-9.750423,-1.766610,5.051377,5.986112,-8.277195,-2.519832,6.368087,5.680248,-0.188568,-0.124098,2.740314,-8.615869,-7.168064,-0.475302,-6.402996,-8.702694,8.210740,-3.300837,1.760676,6.756990,6.437358,-0.308915,-2.038276,3.407400,5.137744,-4.992073,6.626410,-3.039969,-9.961959,7.062754,-0.167999,7.855305,9.939884,-6.816491,7.655096,-6.615833,-2.540406,-2.677885,-9.615806,7.278931,1.842839,2.046438,0.957053,8.186996,-4.151675,-8.651941,-6.400678,-8.544159,-2.594191,-7.792453,-2.030525,-2.320044,-4.072166,-3.041124,-2.899808,-0.394613,2.431358,9.041291,5.542202,6.751226,4.580511,-2.448028,4.276811,5.127397,-8.079554,-9.675203,-3.265945,4.805131,6.810704,-0.966710,1.415633,8.959173,-6.216887,2.275023,2.248734,5.730982,1.021053,9.013822,-1.624572,-7.993589,-8.723438,-6.361201,8.475066,6.089781,4.810272,1.685816,-8.994410,8.007601,7.191226,-7.508722,9.040553,8.528060,-2.475863,-5.029760,-2.374874,2.702406,7.293180,7.514154,3.835779,8.989120,-1.559532,9.662637,1.641719,9.123314,-3.930846,-7.081147,5.783731,-4.978159,-5.602477,0.403526,5.485700,0.417380,-5.057991,0.816276,-0.219471,-0.651029,5.685049,3.487072,-7.725892,5.916303,4.717539,5.605979,-7.240984,-1.036531,-3.284617,3.931804,-3.685087,-7.602028,5.910838,-4.901541,-2.178194,7.769822,-9.348425,-4.773413,8.985049,1.341429,9.004092,-4.312763,-7.902914,-9.183985,-2.719763,-5.842201,3.731598,7.899713,1.769540,-5.330409,-1.342949,9.444658,-7.608308,0.356432,-5.961876,-0.355117,9.010594,4.329545,7.484666,-1.795894,6.678340,-2.534482,0.646730,5.346466,1.441313,-5.120752,4.271110,0.762758,-0.565795,-4.978359,9.712729,-8.251650,8.665699,1.115097,-6.353247,-8.924353,-3.473693,-9.158723,-2.141717,-1.204229,6.562950,4.408820,1.278150,-9.735915,2.302652,-9.652579,-0.863461,-2.873820,-5.258278,-2.266407,8.220256,-8.307353,-6.085576,-4.202098,-7.694337,-8.775373,2.089027,8.334902,-8.827380,-2.054806,-3.233053,2.728638,-8.227086,-6.627947,5.855792,9.180448,7.840189,-1.267415,-8.454018,-4.305875,-8.157420,-6.500642,-6.554894,-5.103492,1.518568,-7.653408,8.631230,-3.980304,3.216785,-3.801331,-5.155343,-7.997013,0.109399,5.738529,2.488797,-1.117122,-8.527760,5.655388,-8.476494,-2.457597,1.711951,3.100532,-8.824522,-6.227799,-0.214534,-5.964927,-2.054773,-9.913787,7.742486,5.278246,3.384594,-0.037664,-2.821977,-6.251643,5.464569,-1.245587,-0.526995,3.851186,-1.715244,-2.169656,-7.811480,9.139530,8.823673,-0.851752,8.989064,6.827264,-6.163118,-1.465482,-6.736447,9.296031,7.626070,-4.914796,-7.195348,-2.217842,6.673389,6.076172,0.536786,-4.007880,5.296918,-6.184353,-4.605793,1.623102,3.717775,4.680596,6.333725,-3.591103,-7.543133,-6.533200,-3.994878,7.110770,3.560734,-5.168904,3.412607,-9.127594,6.290096,2.545015,-9.354012,-7.578004,6.748604,7.687624,0.451400,3.881882,-9.903717,-8.464697,3.970151,-8.626848,-9.281977,9.470794,8.392048,-6.788192,-4.099315,-2.443268,3.394913,6.292835,-6.279869,2.629652,-9.105250,-9.903555,-9.981203,6.373248,-1.063179,-5.519410,-3.782123,5.749842,8.215545,6.450401,6.587372,0.682950,-2.198938,5.076275,6.804966,-7.076714,-4.205521,2.592247,1.757909,-1.131258,-6.602743,1.719883,-9.646968,5.466124,-5.240753,-9.250644,-8.480080,-2.109289,-1.240601,-6.205862,-5.242310,4.042449,3.186368,4.025653,0.580979,-0.515663,1.260611,9.748526,-6.577428,3.350574,2.421156,7.884136,2.004262,-4.756183,1.687669,-9.442771,-4.694373,-8.959013,-5.249871,-5.727031,9.420299,9.702990,-9.524718,4.738615,3.327568,-6.811986,-0.276167,2.236166,9.417549,8.875215,-2.098847,1.800034,6.334653,-6.240219,6.986810,6.946394,3.692164,9.110053,2.744599,7.599824,-8.632528,4.923302,8.486377,-5.704698,4.473357,8.874202,0.586944,-7.846681,3.089050,-3.016634,1.518564,9.429481,6.912848,0.512828,6.761379,0.505576,-2.701720,-8.766799,9.044392,-3.961476,-7.353700,-0.195924,-6.278206,-5.274527,9.777336,7.988948,8.486000,-9.262656,4.033785,2.983964,-5.295501,-6.035241,-5.374540,-8.299167,-1.805422,-8.474280,-2.539448,-2.378220,6.188571,-4.922140,-0.647586,6.180450,8.617585,-0.749911,9.572554,2.372320,-6.372419,-2.918201,0.424275,8.025291,-7.670129,-7.065956,-5.470830,3.780979,-2.467563,5.846304,6.114384,-4.996043,-4.264994,-7.633735,-5.656777,7.059712,7.040945,9.804430,-9.025484,-0.395276,-0.888049,6.546280,-2.297067,-5.722874,2.526785,8.203599,4.057069,8.920487,-7.539842,4.482440,8.820023,8.970623,5.777269,8.822538,7.394844,-3.057079,9.832835,9.453729,-6.041631,-0.686213,5.530503,2.690245,1.321573,-3.614265,-0.921898,-3.596873,-5.255729,-9.801442,5.672318,6.297724,-0.989775,-1.199560,1.844988,9.145837,-2.959686,2.279086,1.213317,-7.366364,8.143080,-9.052449,-4.061523,-8.020839,-3.527565,-4.747349,-0.496208,1.996337,1.224347,-0.698148,6.415477,4.800894,1.677938,6.185977,7.123494,3.035172,-6.459708,-3.627400,7.034874,2.149574,5.440943,8.663833,1.854872,-9.396532,-6.740666,7.726166,-2.628317,0.914639,-3.535497,-4.130372,-5.191427,-3.598910,4.155493,-3.091058,4.836160,4.367185,8.687988,3.929726,6.671933,-8.755917,-8.911002,1.000799,-8.969728,4.697174,8.527513,-0.753689,3.316356,-9.392358,3.235181,8.661426,-4.254541,0.899584,1.098514,-3.484218,9.377024,9.620006,-3.269325,-9.352694,6.486167,0.624393,-7.852105,9.674372,1.494919,-1.557867,-3.271419,5.930294,-8.608769,-8.772876,4.912123,-7.202966,2.096345,2.989985,-3.240495,-2.275033,3.229056,-7.896358,2.354944,7.218426,8.071660,2.864476,-5.088243,-3.956586,-3.456975,-5.826879,6.976892,-2.532666,-1.318113,6.626081,3.351584,1.289505,4.488917,-8.513299,9.871781,2.246078,-6.524280,-6.491217,-7.705129,9.717357,4.622725,-8.491197,0.768564,-9.300947,-7.598929,-4.269523,5.061886,-9.869659,-7.739987,-7.467955,4.288926,-6.125824,-7.584391,-7.591671,-8.941903,5.815522,6.946211,-6.883070,-4.481257,4.092202,-2.808508,8.462720,0.848390,2.268030,-7.811519,8.059618,2.440914,6.838102,-0.259683,-5.769648,-5.515337,-2.382112,-1.646684,-7.243046,2.456262,8.737920,4.703174,-5.650490,0.234898,-7.502301,2.028783,4.135561,-5.342203,-1.112574,-2.770649,8.399921,1.003732,-8.847774,-3.211012,-4.529191,-8.127273,-1.353721,-0.491545,-2.277213,-6.952319,-0.089762,-2.721378,-5.942090,-4.400623,9.079817,-0.146361,9.259864,8.856027,5.823791,-3.561763,2.431341,3.130417,9.470681,-4.836724,7.239257,-8.999425,-7.759883,2.544825,2.622305,-8.861411,-1.536264,5.556815,-1.223095,-6.912912,0.777691,1.797248,5.391892,-8.698050,7.879829,8.869165,0.718320,-2.905084,-3.904591,-1.766385,8.236198,6.126853,6.833403,-7.745446,1.233365,2.265559,5.122189,0.526210,-1.248639,2.004067,4.980411,-3.091320,5.729257,-2.545583,2.893852,0.575733,2.776964,-5.747348,-0.659073,-6.506584,9.639602,-9.458357,3.983598,-6.671294,7.715197,8.383326,-7.435081,6.248387,-1.757224,4.739350,-5.024949,-1.895965,8.009655,9.110715,2.923312,9.950701,5.113792,-9.885166,-8.737307,-6.479085,-2.369411,-3.164822,-9.279476,-0.372611,5.052300,-2.986130,4.829164,-9.464547,0.065769,-3.592129,7.951443,-9.024574,4.389973,7.234414,9.440826,3.355736,2.908363,-3.893190,8.106314,-3.477754,-8.033904,-7.873905,-3.170883,6.824207,-3.907649,-7.416119,3.167119,9.953167,6.238142,-3.589484,-1.456123,4.509650,8.630311,8.406904,-4.924383,-3.587491,-6.089375,-9.867279,0.929845,6.845250,3.216573,6.976080,-6.001935,9.104982,-9.921378,-0.941959,4.372022,-0.870600,2.757457,7.994140,-8.075285,-8.836845,4.809599,8.226377,-4.761557,-5.238253,-4.778976,0.652738,-5.214841,1.373613,-8.479322,-3.549190,4.185239,0.001762,-8.367353,-4.626449,-0.979439,-9.402765,-7.790734,-8.363874,-2.028863,-2.073472,-7.925052,7.897100,0.396301,5.895354,-2.896275,8.395604,7.344908,-5.397159,-9.229923,-9.037600,6.954116,-8.001877,-5.551664,5.434803,1.960107,3.786275,9.083319,2.745594,5.669346,-0.964924,-9.226888,2.649021,-2.903764,1.871286,1.202581,6.417395,-9.996948,-9.058233,-7.394459,1.075244,0.446149,-3.429778,1.374187,9.632945,-7.112634,-6.068862,-1.835010,-1.707827,8.935062,1.938230,7.982958,-5.165404,-8.891816,-4.566479,-0.265206,-9.607883,5.145625,-9.561760,-5.883025,0.493682,7.207169,0.530721,-7.375478,6.421121,-0.968899,-7.843767,7.557634,9.146437,5.337570,4.207976,-9.657258,8.614454,-7.136722,-8.069246,-0.646250,1.732550,-1.403131,1.600850,8.930452,-6.465094,4.400379,3.774851,4.505920,-3.426218,2.714505,-2.476821,4.094758,3.866099,1.539024,4.860410,3.853194,-5.420490,5.024509,-1.112012,-1.861639,-4.145562,7.329189,-5.147075,5.776785,1.614556,-3.078145,-5.217117,-6.686514,1.498604,0.224505,4.238951,-4.360817,-5.536479,0.608699,-4.217890,-9.829628,7.037822,-4.518377,-5.107179,-7.897145,-1.773054,-2.962281,-0.908136,-9.628789,-0.273457,-5.423869,4.765477,9.317494,8.621478,-3.857257,-7.652478,-7.286664,9.674096,-7.268628,-6.747188,4.227836,7.075065,3.549637,-0.157094,-0.655252,-2.126464,-6.233702,9.979097,5.360118,-1.459994,-9.662063,-1.955696,-0.145311,5.293370,-0.451443,7.463615,1.404203,7.852546,2.103268,-1.178652,-7.171903,-4.110479,-8.249391,6.295369,-6.786945,-5.261233,-6.560169,-2.215617,-2.852337,0.712551,4.568593,-3.928529,-9.807912,-0.956970,-5.265722,5.647236,1.690821,2.704577,0.521220,5.553199,8.948438,-8.304142,2.031206,-2.102978,-5.878805,-4.170382,6.984626,-8.547482,-0.311613,9.303466,-7.830878,4.383059,-9.295144,9.038923,4.010496,-6.317849,-4.524390,9.207946,6.581040,0.793577,3.211252,7.519663,3.164015,-4.289398,-3.450450,-4.587147,-1.812406,-1.910790,-1.833130,-0.393365,8.947297,-4.785503,5.869893,0.950337,-8.636555,0.023398,-3.573872,-4.914676,-9.015877,6.043155,-0.797064,3.848553,4.812824,9.772492,-9.516686,-8.010602,-9.706230,6.350591,-5.008095,-7.245030,-4.722447,-7.480974,9.327714,-2.781294,-4.793610,-6.619168,1.262031,4.405419,-2.768512,-0.285099,3.365889,-6.572373,-6.315373,1.349890,-3.990463,2.493162,1.809988,6.755524,-9.612856,1.740592,0.943859,8.687983,3.778832,3.076527,5.758816,-9.841891,-2.007910,2.180157,9.861487,6.003970,-3.778661,-6.061008,3.607964,-8.433903,8.448184,-0.466526,-5.486374,9.402671,-9.942469,9.756605,-6.642089,-8.116706,-7.390402,5.183901,1.331654,4.882481,5.164104,6.069784,6.060076,-3.833395,8.112512,4.956581,-2.614032,-1.941807,1.768439,3.767672,6.338074,0.829624,8.291718,1.833051,4.034974,-9.997782,-4.490336], dtype = "float64")#candidate|1931|(3150,)|const|float64
call_1930 = relay.TupleGetItem(func_318_call(relay.reshape(const_1931.astype('float64'), [15, 14, 15]), relay.reshape(var_1912.astype('uint16'), []), ), 2)
call_1932 = relay.TupleGetItem(func_321_call(relay.reshape(const_1931.astype('float64'), [15, 14, 15]), relay.reshape(var_1912.astype('uint16'), []), ), 2)
func_1888_call = mod.get_global_var('func_1888')
func_1893_call = mutated_mod.get_global_var('func_1893')
var_1939 = relay.var("var_1939", dtype = "uint16", shape = (2, 72))#candidate|1939|(2, 72)|var|uint16
const_1940 = relay.const([1,10,-6,-6,5,-9,-9,7,-7,-10,8,5,-4,-5,-1,-8,4,10,7,2,-3,-5,1,-8,1,-1,9,-8,4,9,-4,8,5,7,-5,3,10,-2,8,-1,7,1,-9,10,4,9,-6,-5,6,-2,1,-8,-3,-3,-2,1,10,7,3,-3,7,-5,8,4,2,-6,3,-5,6,-7,-6,-10,-4,-8,-2,-6,-2,2,10,5,-3,-6,-6,-3,3,-3,-2,-5,-9,5,-3,-10,1,4,-9,-3,1,1,2,-2,-5,4,-9,6,-4,-9,2,-2,3,-4,7,7,9,-7,-1,8,5,5,-4,10,-4,5,-8,8,-4,-6,-2,-9,8,-5,-5,6,6,-4,4,8,-2,-3,1,2,6,8,-10], dtype = "uint8")#candidate|1940|(143,)|const|uint8
call_1938 = relay.TupleGetItem(func_1888_call(relay.reshape(var_1939.astype('uint16'), [3, 16, 3]), relay.reshape(var_1939.astype('uint16'), [3, 16, 3]), relay.reshape(var_1939.astype('bool'), [3, 16, 3]), relay.reshape(const_1940.astype('uint8'), [143,]), ), 7)
call_1941 = relay.TupleGetItem(func_1893_call(relay.reshape(var_1939.astype('uint16'), [3, 16, 3]), relay.reshape(var_1939.astype('uint16'), [3, 16, 3]), relay.reshape(var_1939.astype('bool'), [3, 16, 3]), relay.reshape(const_1940.astype('uint8'), [143,]), ), 7)
var_1948 = relay.var("var_1948", dtype = "float64", shape = (2, 9, 10))#candidate|1948|(2, 9, 10)|var|float64
bop_1949 = relay.mod(bop_1915.astype('float64'), relay.reshape(var_1948.astype('float64'), relay.shape_of(bop_1915))) # shape=(2, 9, 10)
var_1952 = relay.var("var_1952", dtype = "float64", shape = (2, 9, 10))#candidate|1952|(2, 9, 10)|var|float64
bop_1953 = relay.multiply(bop_1915.astype('uint32'), relay.reshape(var_1952.astype('uint32'), relay.shape_of(bop_1915))) # shape=(2, 9, 10)
uop_1961 = relay.acosh(bop_1953.astype('float64')) # shape=(2, 9, 10)
func_914_call = mod.get_global_var('func_914')
func_917_call = mutated_mod.get_global_var('func_917')
const_1973 = relay.const([6.833025,8.715344,-6.036085,-8.615805,5.637115,-7.484483,2.298561,-3.576447,5.845901,-4.289473,-4.575048,1.050674,-4.391278,6.125619,-2.924202,4.271423,-3.791918,-3.869519,-9.235092,5.059315,-5.216915,-1.879432,2.886125,-2.672924,-6.737309,-4.193638,-1.080249,-2.150631,-7.127193,6.241609,6.562150,7.987348,4.980786,-9.164255,-6.696343,1.272434,7.533457,2.148022,-5.997808,4.979424,-6.421436,3.156403,7.791484,1.730791,-4.513950,-1.050845,5.432579,6.061995,6.494521,8.616361,6.095802,-1.105503,-3.122762,9.006755,4.014763,0.827605,-5.565970,6.038997,0.779754,-0.719721,6.875870,4.813702,-7.595106,7.412943,-4.227212,1.498539,-5.782979,-9.358792,6.889227,1.970980,-4.845390,4.189167,-0.516648,-2.710906,2.028889,5.016024,6.298023,-8.041733,8.663774,-9.915087,-6.532983,9.156113,1.471385,9.541553,-0.824272,-5.561082,-3.568459,7.960036,-0.964086,-5.485756,-3.673988,-9.194830,-9.783287,1.041443,-0.483189,7.792654,-1.960449,8.920391,-5.207126,-0.886075,-5.427663,3.042319,-4.475571,0.842813,-9.198752,4.475307,2.493896,-2.732820,-0.681276,6.562797,3.870749,0.289373,1.360323,-0.546400,3.823318,-7.554549,9.286461,-1.077012,5.892028,-2.717547,8.796466,-1.978229,0.148874,-9.936245,6.000318,-2.971977,-3.249651,-4.883907,0.883050,9.874603,6.386240,-7.024513,2.302128,1.847396,-6.953396,-7.055245,1.405709,-7.445057,-9.623802,-0.167840,-5.828897,-0.535312,-6.156841,-2.707465,7.663666,-1.972159,-0.855497,3.810974,-2.975868,-8.842538,-5.981099,-0.831362,6.094702,-2.520416,-9.368670,1.860560,-9.035066,8.786157,-4.423793,-7.681421,-7.566017,8.949830,7.835163,-7.577563,6.370172,-7.065565,-5.710209,4.999055,3.006428,3.540240,-6.239967,-7.954440,-2.441947,8.201441,9.248069,1.478092,-8.065758,-9.775827,4.505914,8.857036,7.432399,8.323491,5.241595,-9.903833,-7.449012,-3.999949,-7.146598,4.932227,-8.235908,-3.073894,-3.281695,5.415467,-0.903429,-4.602767,8.749773,-1.648485,6.647579,-0.081273,-4.787540,2.811199,-9.100725,6.393803,-1.924279,4.643869,7.678762,4.363891,1.179563,-6.486675,-4.916289,-7.219244,6.588375,6.959982,-6.179549,2.447899,-0.971224,1.325293,-3.308947,8.254321,-0.595126,5.877624,-2.896286,7.114193,-4.103490,5.069044,5.405742,-0.544440,-1.093309,4.218565,0.864802,2.315708,-8.167820,-9.771355,2.463640,0.811629,-3.510245,3.251908,8.428558,0.877775,8.275070,9.805369,-5.356847,3.014121,1.995809,6.694917,1.664021,-1.424562,8.674620,-1.855010,-3.206365,-8.147408,-1.810194,-0.722295,1.932675,4.493084,-8.223266,2.200683,-6.608949,-3.037573,2.286519,-9.288844,-5.692548,-0.097975,2.083239,3.644456,5.416491,0.295193,3.089425,6.884936,7.486592,8.218576,2.896612,-1.929770,1.420827,5.903679,-2.730143,7.830665,-2.973581,-5.574335,-2.749612,-8.110648,-9.740942,-0.841830,0.106272,-9.483762,-5.076655,-2.518549,-8.801260,-3.566524,4.834449,-5.308199,8.318608,9.692149,-1.701085,-2.554260,4.082269,-5.563550,-9.628679,0.549220,-8.717720,-6.807314,-4.561518,0.346377,5.230308,-1.428165,4.751648,-4.845199,3.292310,3.865594,2.654374,-4.304200,-5.741084,-7.670954,5.064786,-8.445182,2.967228,1.626996,6.238775,-9.439465,-5.127743,-2.379399,-9.161793,-3.716891,-8.469135,8.539390,2.475329,-9.265527,-7.231252,-4.102492,-5.490050,8.435158,7.793098,7.522206,2.283926,1.629676,0.390634,-8.053030,-3.320119,1.800910,-1.563784,8.532453,-0.397889,1.776624,-1.633755,3.696959,-5.007390,0.676799,3.758193,-3.438452,-0.044702,-0.383433,7.022828,6.929832,8.245798,-8.746295,6.015325,-2.836448,9.661600,-3.019212,7.896292,1.891375,3.806764,-8.474672,9.801936,5.880416,-7.459470,0.718985,-3.068933,-7.129863,8.350744,5.865882,-3.756781,1.215384,2.430493,8.013421,1.065413,-6.930906,6.179382,6.283334,-3.546512,1.539811,-5.868175,-6.672847,8.670153,-3.677906,-2.081977,-6.314131,7.536442,-9.704643,5.982380,-6.365920,-3.128168,8.615575,0.136252,9.144868,-3.709941,-4.972485,8.521832,4.516657,8.162221,-2.359456,-5.218700,-4.738864,-9.885157,-8.522986,3.881913,-7.202859,-4.112661,6.673251,-8.881944,5.965846,1.442810,5.315553,-1.625298,-3.426271,-9.866822,2.330828,1.222054,2.463825,4.645720,3.670741,-8.466646,-8.710120,-2.365475,-5.971392,-8.472228,2.029873,7.752995,7.044393,5.397131,-1.089759,-4.056858,-1.582687,7.064725,5.063877,-4.777860,7.229484,-7.430549,0.307167,-6.026641,1.217478,8.896304,-8.151276,4.347029,-9.509576,8.041847,-2.275610,4.305929,7.696052,-4.967148,4.916142,-4.719055,7.490061,-6.188952,0.765715,-7.074206,-7.990387,6.004444,5.701181,-6.498022,2.107808,-1.134142,7.367822,3.326470,-3.787108,2.345142,-4.998710,4.754055,-8.873295,-8.421632,-8.461891,-3.089179,-4.538758,8.270983,-0.838429,2.351864,-3.478908,0.298914,2.351252,-9.705250,5.665846,7.786285,6.074591,7.369791,2.701009,0.767286,8.266673,-4.398243,5.150949,8.726473,6.517569,-0.900876,-2.476195,7.696856,-6.020704,1.345012,5.552169,6.522132,6.707723,-1.040573,-5.124341,-3.177476,9.853198,6.510355,4.141639,-4.832138,3.996691,-8.967610,-7.761970,-3.432595,1.295376,-7.593313,-6.093058,-9.183952,9.126892,-3.916206,-9.590802,5.731910,0.596981,5.438274,9.710682,3.999533,-5.741073,-1.280519,4.586692,6.124564,-9.775590,8.961129,2.036687,9.976016,-5.926790,-8.109398,-0.763857,-7.246511,-5.579819,-3.838458,7.570504,-3.778551,2.319055,1.781687,9.179242,-7.777360,-4.553306,1.840198,6.583672,-8.278606,-0.286393,-0.676337,-0.629280,7.085817,-6.162135,-4.537969,2.713359,5.858846,0.771614,-1.644303,4.366082,9.176862,-1.847122,5.025329,0.343949,-0.413373,-7.698618,-0.705976,7.916856,5.497802,-9.525135,-0.437459,7.447617,-6.050573,-0.791629,6.214599,2.664713,6.680142,3.840112,6.916200,1.419122,4.220792,0.896710,-7.879300,3.151983,-9.622528,-8.506589,8.674843,5.197689,-1.387498,-2.258610,1.724826,-0.289556,-6.926695,-2.371485,-1.304998,9.627172,4.363515,-3.309025,6.845124,-4.829425,3.606851,-5.232770,-5.297901,-5.417769,0.545936,-7.695095,9.401002,-2.550562,9.788139,6.044527,-0.497689,2.384534,5.691050,3.960500,6.716594,4.550592,-6.111842,8.386523,0.651989,-2.176616,8.650718,2.196970,8.124084,-9.236654,-7.637954,0.277575,-6.902310,5.261773,-3.110818,-5.234305,-6.268083,-8.984399,-9.425518,9.600826,9.025765,-6.167853,-4.863085,0.874509,6.915497,-2.516483,-6.826371,-9.515977,-0.028537,-9.572818,6.120969,-3.197315,-7.691836,-1.725253,5.756748,-3.353498,3.771995,7.220948,4.303137,-9.286822,-8.825975,-0.494638,-9.497904,4.953965,-6.048048,1.440167,-4.483874,6.134306,-8.572202,1.468612,8.529019,-8.467824,5.583672,3.119930,4.479623,7.752962,-3.386508,-8.041305,4.831808,-0.258241,6.332791,0.208543,1.127832,4.599131,-6.202656,8.496899,-5.956549,0.870936,8.428821,-1.676399,-8.484426,-2.296929,-5.199032,0.657616,-6.982725,9.433722,8.314965,-5.939317,-7.519222,-5.805414,-2.111237,-5.664934,5.055293,-7.648963,-7.530938,2.809279,4.885794,-9.957330,-4.614977,1.994545,1.486511,9.299534,8.381853,3.317552,7.484455,-6.044249,-7.311734,-9.401003,-7.842098,-1.268011,-2.572238,1.685317,-7.461345,2.533728,8.174262,2.337839,9.943786,2.403151,-7.231755,-7.056308,-7.759795,-5.790983,-1.523395,6.345670,7.331960,6.862203,5.646049,3.212991,-6.183299,2.584784,4.597193,-4.689552,5.887694,8.577403,2.013065,8.594849,8.503085,-5.231192,-5.693677,-6.913955,6.062926,6.801331,6.707691,-1.319612,3.950601,3.351848,9.346035,-6.825074,-2.927660,-7.456370,1.027950,9.139894,4.666252,-6.525045,3.227630,-6.566970,1.832878,-9.058755,-0.102260,-7.434212,-9.572628,3.422402,-9.653937,-6.472686,6.798153,-3.219015,-5.416004,3.694715,3.130158,2.696913,4.784747,1.420230,-5.489763,0.154351,9.759772,-6.055788,7.152635,3.672947,6.126727,-9.326383,-9.495663,-0.206443,7.938332,2.138166,1.737088,9.203433,-5.869302,9.521675,-5.038102,5.374132,5.175072,8.983439,9.931158,-0.700357,-7.030237,-9.587653,4.795792,2.081797,-2.348553,4.585847,-0.173303,-2.638746,7.826387,0.726474,-5.096277,3.663286,-4.387173,9.902863,7.651376,5.934334,-9.381679,7.272070,-8.723508,-3.506950,1.228239,-4.927099,4.546367,-9.008365,7.698682,-4.186030,-9.387619,5.947604,9.357110,6.329586,-8.178786,-0.588670,-4.947538,-0.658640,3.870656,6.220924,-8.050176,-5.717848,7.883815,-0.815639,-8.399248,-1.267812,9.096130,0.164220,-9.260390,6.032010,2.416575,-1.058641,3.124618,-1.816745,4.504784,1.739535,-0.779826,4.275106,-8.870406,-4.956733,0.093380,-2.304040,-6.594670,7.307133,-7.026220,0.315599,-0.138709,3.949928,-5.329864,-0.929808,3.237298,0.585013,5.228579,4.444090,-8.580460,-5.180352,3.361528,-1.881357,7.856649,-5.669387,6.948052,0.638978,1.404792,7.346073,2.101539,-3.559927,-4.684878,-2.739395,-6.277071,7.982189,5.275694,-3.221256,-6.180444,-1.068005,-3.995956,7.510670,-7.411773,-2.149990,3.716965,9.562944,9.258277,-5.793476,0.629667,-9.752065,-3.363498,-4.597714,7.724270,-5.473816,-2.285399,0.548420,-6.957386,-5.268683,-4.864813,-1.886879,-5.581209,-6.312963,5.738477,5.062758,2.621286,5.162018,-4.180973,6.548649,-6.809304,7.801595,-5.906931,-3.044022,-5.375779,2.220364,3.681693,-1.140114,6.182656,9.444871,6.029547,8.633879,-9.575756,4.722924,-3.609321,9.003013,-2.916535,0.284822,7.620030,2.133261,-7.201792,-4.066156,1.923469,-1.695165,0.172461,5.408915,-9.059236,4.507550,0.684291,9.879761,5.008750,3.316110,-9.925363,-3.497634,-3.074189,7.492913,-6.557402,-5.807200,-3.099778,-8.600148,-4.651121,4.794204,-6.893687,-8.546436,5.798618,-7.172025,-8.735652,-6.454789,-7.699532,-2.669233,2.773954,-7.775253,-5.787122,4.916274,2.801709,-9.501429,4.759072,-2.270588,5.999109,-2.002785,1.454335,8.032302,-1.105208,-2.110114,4.273571,7.715916,-5.736003,-7.632039,-4.827554,1.524951,-7.286769,5.506758,0.868814,9.961183,-6.514948,2.945369,-1.173897,9.034908,3.094507,-3.709201,9.051309,5.707968,2.457008,-1.430179,8.333063,0.483662,6.743320,4.904928,-2.717412,1.188701,-0.132744,-0.363226,-7.656837,5.600874,3.823405,-9.170898,5.872669,-9.754795,2.667849,-3.812030,7.428470,-6.875325,4.154374,1.963587,4.464490,-5.406217,-8.772307,-6.439830,7.269867,-5.132140,2.668639,1.405551,-9.574161,5.562291,-7.271009,-2.291888,6.008247,-8.828480,-5.411444,9.266690,3.568844,-6.938684,-7.457046,-7.050178,-6.058656,3.287048,7.666515,7.510912,-9.220559,4.293800,-4.880107,-3.624147,3.582700,-9.510837,1.026700,4.436387,-1.066632,-3.542398,-8.640062,-1.327097,4.564867,6.707789,-8.192775,-1.183794,5.014967,2.133267,0.304797,-1.688266,-1.166077,-0.657836,-9.783568,-4.985693,9.273797,8.564100,7.784125,3.676305,7.375149,3.940244,0.463785,3.462273,-4.432653,-8.495374,-0.215011,-6.712034,-6.748447,-1.073393,-8.237356,4.005159,0.079840,8.193066,-2.476947,6.665278,5.047178,1.615855,-2.893122,-1.574094,3.538000,-2.207477,7.653850,-2.672069,-4.867084,-6.747627,-9.112223,-2.347185,-7.592799,-9.816985,-0.177666,6.774239,2.781867,-9.026421,4.817060,-0.975641,-1.727821,-0.412205,9.571770,9.814802,-5.607780,-3.251392,4.875860,-1.740510,-5.796555,-0.229836,9.781965,1.930593,-6.277041,-6.911371,-7.090846,-0.193668,-8.128824,-8.065830,3.913708,1.831847,0.620541,-5.258787,-5.095502,-5.900698,-0.372796,-9.446683,-8.841596,-7.889792,3.497111,-3.450984,7.772077,-4.705485,-6.346880,0.689501,-2.898773,5.170901,-0.434204,-9.554671,-6.661214,8.842721,8.299009,-0.415930,1.738962,-2.050012,-8.899536,-6.588706,9.410859,2.952030,7.109937,-8.726482,2.454846,3.207400,7.623577,-5.195124,1.566858,-7.401821,4.865485,-8.252893,7.988588,-7.032530,-1.604377,7.527617,5.617685,5.751308,8.048066,8.968735,9.110342,-6.317782,-9.905864,-7.008004,6.332837,5.723418,-0.943741,0.638718,-8.712860,3.801814,7.423373,0.986440,7.105419,2.679987,-0.034838,0.753954,-9.380651,-3.114966,-5.009361,-3.034612,-9.426073,3.534409,3.897911,-2.061113,-5.838425,-9.019011,3.220102,-2.402829,-1.559918,0.499740], dtype = "float32")#candidate|1973|(1200,)|const|float32
var_1974 = relay.var("var_1974", dtype = "uint64", shape = (1800,))#candidate|1974|(1800,)|var|uint64
call_1972 = relay.TupleGetItem(func_914_call(relay.reshape(const_1973.astype('float32'), [10, 15, 8]), relay.reshape(var_1974.astype('uint64'), [1800,]), ), 2)
call_1975 = relay.TupleGetItem(func_917_call(relay.reshape(const_1973.astype('float32'), [10, 15, 8]), relay.reshape(var_1974.astype('uint64'), [1800,]), ), 2)
output = relay.Tuple([call_1911,var_1912,call_1930,const_1931,call_1938,var_1939,const_1940,bop_1949,uop_1961,call_1972,const_1973,var_1974,])
output2 = relay.Tuple([call_1913,var_1912,call_1932,const_1931,call_1941,var_1939,const_1940,bop_1949,uop_1961,call_1975,const_1973,var_1974,])
func_1990 = relay.Function([var_1912,var_1939,var_1948,var_1952,var_1974,], output)
mod['func_1990'] = func_1990
mod = relay.transform.InferType()(mod)
mutated_mod['func_1990'] = func_1990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1990_call = mutated_mod.get_global_var('func_1990')
var_1992 = relay.var("var_1992", dtype = "uint16", shape = ())#candidate|1992|()|var|uint16
var_1993 = relay.var("var_1993", dtype = "uint16", shape = (2, 72))#candidate|1993|(2, 72)|var|uint16
var_1994 = relay.var("var_1994", dtype = "float64", shape = (2, 9, 10))#candidate|1994|(2, 9, 10)|var|float64
var_1995 = relay.var("var_1995", dtype = "float64", shape = (2, 9, 10))#candidate|1995|(2, 9, 10)|var|float64
var_1996 = relay.var("var_1996", dtype = "uint64", shape = (1800,))#candidate|1996|(1800,)|var|uint64
call_1991 = func_1990_call(var_1992,var_1993,var_1994,var_1995,var_1996,)
output = call_1991
func_1997 = relay.Function([var_1992,var_1993,var_1994,var_1995,var_1996,], output)
mutated_mod['func_1997'] = func_1997
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2072 = relay.var("var_2072", dtype = "float32", shape = (4, 10, 5))#candidate|2072|(4, 10, 5)|var|float32
const_2073 = relay.const([[[-2.260469,4.222139,-4.702076,9.256088,-3.619689],[-0.817810,1.965334,-4.989191,1.741234,-3.948749],[8.032639,-6.671372,3.431362,4.799501,-6.353410],[-4.696027,6.499775,2.922873,7.953543,9.599135],[4.285255,-0.089300,1.684089,-9.664611,4.331493],[-6.524525,4.752476,-9.273411,-6.472396,-6.954581],[2.381975,6.826427,3.331317,-7.474968,3.911350],[-9.189939,7.142799,6.384305,9.540913,-6.442212],[-2.126009,3.845785,3.530522,-5.867820,7.383802],[3.578299,-7.687128,-3.711224,4.756444,-4.818708]],[[-5.794950,4.322714,0.685010,-8.950006,-4.226473],[-1.712939,6.943166,-4.413766,0.658991,-4.919732],[-1.894653,7.520771,-4.180873,-8.513511,4.120544],[-2.017247,7.183960,9.945797,-5.957386,7.196463],[-6.842839,-8.416319,-1.084869,9.687675,7.204535],[-1.178046,8.757063,-8.796580,4.783235,3.916158],[9.646331,8.900804,2.561211,-3.487840,-8.775358],[-1.703484,5.584610,4.915655,6.271433,5.034274],[-6.199131,-3.224268,-7.136837,-8.760763,2.384591],[-9.362784,3.626073,8.803104,-9.262498,3.564205]],[[-2.595652,-0.626169,-2.529421,8.396182,-2.099440],[-2.294367,-3.925142,-0.176332,-5.688785,1.617664],[-9.903624,-0.388367,5.199911,-9.818546,9.651069],[-0.650638,1.803732,3.827288,-9.574033,7.675939],[-8.005135,-9.716882,5.652653,6.213873,4.743844],[1.119844,-9.545334,0.026316,-5.231393,4.308769],[7.545727,6.743066,-9.147689,-5.752357,1.466501],[2.239057,-0.954347,-1.407229,-1.111688,0.678817],[-9.372131,7.875399,-5.982942,-0.673718,-1.262360],[7.241204,-4.524227,-3.439679,9.831874,6.490801]],[[4.103577,-3.491125,-8.868804,1.166439,-3.993446],[-6.606462,3.679117,4.431502,8.173515,-1.066609],[-6.215482,5.564215,-0.908604,6.056839,6.170688],[-1.018074,-8.117406,-9.798235,-8.138315,6.676739],[-9.869475,8.755455,-0.460877,7.775422,3.471281],[9.575756,8.081998,-7.207641,1.757408,-3.791084],[-3.522336,9.359091,2.483143,-0.413174,1.877213],[7.172815,6.389431,6.163834,2.743123,8.945983],[5.585964,-7.837591,-0.702925,-3.959966,1.620438],[-5.503100,-5.928842,-2.399779,6.602419,0.409775]]], dtype = "float32")#candidate|2073|(4, 10, 5)|const|float32
bop_2074 = relay.subtract(var_2072.astype('float32'), relay.reshape(const_2073.astype('float32'), relay.shape_of(var_2072))) # shape=(4, 10, 5)
output = relay.Tuple([bop_2074,])
output2 = relay.Tuple([bop_2074,])
func_2102 = relay.Function([var_2072,], output)
mod['func_2102'] = func_2102
mod = relay.transform.InferType()(mod)
var_2103 = relay.var("var_2103", dtype = "float32", shape = (4, 10, 5))#candidate|2103|(4, 10, 5)|var|float32
output = func_2102(var_2103)
func_2104 = relay.Function([var_2103], output)
mutated_mod['func_2104'] = func_2104
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2165 = relay.const(-3.895557, dtype = "float64")#candidate|2165|()|const|float64
var_2166 = relay.var("var_2166", dtype = "float64", shape = (7, 12, 13))#candidate|2166|(7, 12, 13)|var|float64
bop_2167 = relay.floor_divide(const_2165.astype('float64'), var_2166.astype('float64')) # shape=(7, 12, 13)
output = relay.Tuple([bop_2167,])
output2 = relay.Tuple([bop_2167,])
func_2182 = relay.Function([var_2166,], output)
mod['func_2182'] = func_2182
mod = relay.transform.InferType()(mod)
mutated_mod['func_2182'] = func_2182
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2183 = relay.var("var_2183", dtype = "float64", shape = (7, 12, 13))#candidate|2183|(7, 12, 13)|var|float64
func_2182_call = mutated_mod.get_global_var('func_2182')
call_2184 = func_2182_call(var_2183)
output = call_2184
func_2185 = relay.Function([var_2183], output)
mutated_mod['func_2185'] = func_2185
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2219 = relay.const([[[7.382998,0.161591,0.532156],[7.075071,7.131508,6.113956],[6.104401,0.810606,4.913884],[8.372296,7.297651,-4.328058],[1.961925,0.355106,-1.701471],[-6.808084,5.466109,-4.173253],[-2.199100,1.108384,-3.689881]],[[-9.562467,-8.880484,-3.315180],[-1.426102,7.907103,-3.424477],[-1.980062,-8.614580,-1.320618],[-4.011194,-9.552396,-1.898038],[-5.873842,-5.822500,-2.691205],[-0.829984,-5.074413,-1.586530],[-4.441243,-7.632061,-1.816178]]], dtype = "float32")#candidate|2219|(2, 7, 3)|const|float32
uop_2220 = relay.acos(const_2219.astype('float32')) # shape=(2, 7, 3)
output = relay.Tuple([uop_2220,])
output2 = relay.Tuple([uop_2220,])
func_2230 = relay.Function([], output)
mod['func_2230'] = func_2230
mod = relay.transform.InferType()(mod)
output = func_2230()
func_2231 = relay.Function([], output)
mutated_mod['func_2231'] = func_2231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2230_call = mod.get_global_var('func_2230')
func_2231_call = mutated_mod.get_global_var('func_2231')
call_2333 = relay.TupleGetItem(func_2230_call(), 0)
call_2334 = relay.TupleGetItem(func_2231_call(), 0)
output = relay.Tuple([call_2333,])
output2 = relay.Tuple([call_2334,])
func_2346 = relay.Function([], output)
mod['func_2346'] = func_2346
mod = relay.transform.InferType()(mod)
mutated_mod['func_2346'] = func_2346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2346_call = mutated_mod.get_global_var('func_2346')
call_2347 = func_2346_call()
output = call_2347
func_2348 = relay.Function([], output)
mutated_mod['func_2348'] = func_2348
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2394 = relay.var("var_2394", dtype = "bool", shape = (2, 12, 11))#candidate|2394|(2, 12, 11)|var|bool
const_2395 = relay.const([[[True,False,True,False,False,False,True,True,True,True,True],[False,True,True,True,True,True,False,True,True,True,False],[True,True,False,False,False,True,True,False,True,False,False],[True,False,True,True,True,False,False,False,True,True,False],[False,False,True,True,False,False,True,True,False,False,True],[False,True,True,False,False,True,True,False,False,False,False],[True,False,True,True,False,False,True,True,False,True,True],[True,True,True,True,False,True,True,False,False,True,True],[True,True,True,True,True,True,True,True,True,False,True],[True,True,False,True,False,True,True,False,True,False,True],[False,True,True,True,False,True,True,True,True,True,True],[False,False,False,False,True,True,True,True,True,False,False]],[[True,True,True,False,False,True,True,False,False,False,True],[True,True,True,False,True,True,True,False,False,False,False],[False,False,True,True,True,False,False,False,False,True,True],[True,False,False,False,True,False,False,True,False,True,True],[True,False,False,False,True,False,False,True,False,False,True],[True,False,True,True,False,True,True,False,False,True,False],[False,True,True,True,False,True,True,True,False,False,True],[False,True,True,False,True,False,False,False,False,True,False],[True,False,False,False,True,False,False,False,False,True,False],[False,False,False,True,True,True,True,True,True,True,False],[False,True,False,False,True,False,False,False,False,True,False],[False,True,True,True,False,False,True,True,False,True,True]]], dtype = "bool")#candidate|2395|(2, 12, 11)|const|bool
bop_2396 = relay.logical_and(var_2394.astype('bool'), relay.reshape(const_2395.astype('bool'), relay.shape_of(var_2394))) # shape=(2, 12, 11)
bop_2401 = relay.power(bop_2396.astype('float64'), relay.reshape(var_2394.astype('float64'), relay.shape_of(bop_2396))) # shape=(2, 12, 11)
output = bop_2401
output2 = bop_2401
func_2406 = relay.Function([var_2394,], output)
mod['func_2406'] = func_2406
mod = relay.transform.InferType()(mod)
var_2407 = relay.var("var_2407", dtype = "bool", shape = (2, 12, 11))#candidate|2407|(2, 12, 11)|var|bool
output = func_2406(var_2407)
func_2408 = relay.Function([var_2407], output)
mutated_mod['func_2408'] = func_2408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2346_call = mod.get_global_var('func_2346')
func_2348_call = mutated_mod.get_global_var('func_2348')
call_2457 = relay.TupleGetItem(func_2346_call(), 0)
call_2458 = relay.TupleGetItem(func_2348_call(), 0)
func_47_call = mod.get_global_var('func_47')
func_50_call = mutated_mod.get_global_var('func_50')
var_2479 = relay.var("var_2479", dtype = "uint16", shape = ())#candidate|2479|()|var|uint16
call_2478 = relay.TupleGetItem(func_47_call(relay.reshape(var_2479.astype('uint16'), [])), 1)
call_2480 = relay.TupleGetItem(func_50_call(relay.reshape(var_2479.astype('uint16'), [])), 1)
output = relay.Tuple([call_2457,call_2478,var_2479,])
output2 = relay.Tuple([call_2458,call_2480,var_2479,])
func_2485 = relay.Function([var_2479,], output)
mod['func_2485'] = func_2485
mod = relay.transform.InferType()(mod)
var_2486 = relay.var("var_2486", dtype = "uint16", shape = ())#candidate|2486|()|var|uint16
output = func_2485(var_2486)
func_2487 = relay.Function([var_2486], output)
mutated_mod['func_2487'] = func_2487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2346_call = mod.get_global_var('func_2346')
func_2348_call = mutated_mod.get_global_var('func_2348')
call_2500 = relay.TupleGetItem(func_2346_call(), 0)
call_2501 = relay.TupleGetItem(func_2348_call(), 0)
func_440_call = mod.get_global_var('func_440')
func_443_call = mutated_mod.get_global_var('func_443')
var_2505 = relay.var("var_2505", dtype = "float32", shape = (224,))#candidate|2505|(224,)|var|float32
call_2504 = relay.TupleGetItem(func_440_call(relay.reshape(var_2505.astype('float32'), [14, 8, 2])), 2)
call_2506 = relay.TupleGetItem(func_443_call(relay.reshape(var_2505.astype('float32'), [14, 8, 2])), 2)
output = relay.Tuple([call_2500,call_2504,var_2505,])
output2 = relay.Tuple([call_2501,call_2506,var_2505,])
func_2510 = relay.Function([var_2505,], output)
mod['func_2510'] = func_2510
mod = relay.transform.InferType()(mod)
var_2511 = relay.var("var_2511", dtype = "float32", shape = (224,))#candidate|2511|(224,)|var|float32
output = func_2510(var_2511)
func_2512 = relay.Function([var_2511], output)
mutated_mod['func_2512'] = func_2512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2230_call = mod.get_global_var('func_2230')
func_2231_call = mutated_mod.get_global_var('func_2231')
call_2517 = relay.TupleGetItem(func_2230_call(), 0)
call_2518 = relay.TupleGetItem(func_2231_call(), 0)
output = call_2517
output2 = call_2518
func_2521 = relay.Function([], output)
mod['func_2521'] = func_2521
mod = relay.transform.InferType()(mod)
output = func_2521()
func_2522 = relay.Function([], output)
mutated_mod['func_2522'] = func_2522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2346_call = mod.get_global_var('func_2346')
func_2348_call = mutated_mod.get_global_var('func_2348')
call_2528 = relay.TupleGetItem(func_2346_call(), 0)
call_2529 = relay.TupleGetItem(func_2348_call(), 0)
output = relay.Tuple([call_2528,])
output2 = relay.Tuple([call_2529,])
func_2532 = relay.Function([], output)
mod['func_2532'] = func_2532
mod = relay.transform.InferType()(mod)
mutated_mod['func_2532'] = func_2532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2532_call = mutated_mod.get_global_var('func_2532')
call_2533 = func_2532_call()
output = call_2533
func_2534 = relay.Function([], output)
mutated_mod['func_2534'] = func_2534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2230_call = mod.get_global_var('func_2230')
func_2231_call = mutated_mod.get_global_var('func_2231')
call_2545 = relay.TupleGetItem(func_2230_call(), 0)
call_2546 = relay.TupleGetItem(func_2231_call(), 0)
output = call_2545
output2 = call_2546
func_2547 = relay.Function([], output)
mod['func_2547'] = func_2547
mod = relay.transform.InferType()(mod)
mutated_mod['func_2547'] = func_2547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2547_call = mutated_mod.get_global_var('func_2547')
call_2548 = func_2547_call()
output = call_2548
func_2549 = relay.Function([], output)
mutated_mod['func_2549'] = func_2549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2346_call = mod.get_global_var('func_2346')
func_2348_call = mutated_mod.get_global_var('func_2348')
call_2577 = relay.TupleGetItem(func_2346_call(), 0)
call_2578 = relay.TupleGetItem(func_2348_call(), 0)
output = relay.Tuple([call_2577,])
output2 = relay.Tuple([call_2578,])
func_2588 = relay.Function([], output)
mod['func_2588'] = func_2588
mod = relay.transform.InferType()(mod)
output = func_2588()
func_2589 = relay.Function([], output)
mutated_mod['func_2589'] = func_2589
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2605 = relay.var("var_2605", dtype = "float32", shape = (15, 2, 16))#candidate|2605|(15, 2, 16)|var|float32
const_2606 = relay.const([[[-5.206772,4.357418,6.145587,-1.282388,-8.390721,-6.540895,-4.673935,-9.346387,-2.367000,3.539694,9.020443,5.327081,-7.714936,8.720487,6.139814,-7.243528],[8.867487,3.906069,-1.447523,-0.455081,1.051091,9.629777,-6.888555,-3.393429,7.076852,3.506056,-8.366875,-8.438649,8.461856,-5.063858,-6.637158,-5.624659]],[[-3.318637,-0.699768,-5.960664,-1.451670,9.006334,3.146597,9.440028,-9.684292,7.734349,-3.842656,-3.747442,-0.406148,-0.100775,-8.603517,-5.209714,-0.747163],[-2.454725,2.630991,-6.471265,8.835449,7.357233,9.682356,-9.254980,6.341971,4.066514,7.172396,-2.716530,7.584302,3.027262,5.247749,7.614860,-7.944856]],[[-8.431587,-7.409087,8.433056,-0.944118,-0.454389,-5.312813,7.796812,-4.872823,2.744358,2.841325,-2.507508,-0.780380,-5.393271,7.697025,-2.660512,-9.944764],[1.151711,6.781588,-4.102274,9.227705,2.345508,2.233931,-3.712578,0.818866,0.630074,0.205649,-2.902610,9.846413,-7.953497,-0.734201,9.086157,9.539546]],[[7.296314,7.817396,7.252996,-3.528029,-2.361357,0.492210,8.136966,-0.106781,1.182438,-9.899884,-9.225567,7.241241,-1.237699,8.956932,-3.602529,-1.296721],[7.871710,5.685679,3.149446,9.935693,0.316537,-5.935894,6.357434,3.643714,-1.012651,-2.148565,-3.356129,8.279571,8.398380,-4.067398,-4.494070,3.130550]],[[-9.093503,-0.950666,-6.761818,-9.217271,-4.695088,1.733801,0.363152,3.015599,-1.513566,-7.785116,4.366995,-4.942591,-4.809557,-5.134913,9.745688,-8.479469],[-6.535523,7.874728,-8.212337,-1.532768,-1.983115,7.921376,-4.668534,-5.090604,-2.077360,8.422575,-1.985021,7.310183,-5.105430,1.625419,8.505911,-0.712141]],[[-5.301991,8.411451,6.614867,-1.170500,5.843505,6.761709,-0.829714,-0.301116,3.745666,-7.493638,3.387871,-1.503916,3.266711,-2.862400,-3.498665,-5.296245],[-3.439993,1.292257,5.702158,-3.951160,7.795861,-5.970856,6.300859,9.251849,5.738038,-1.551814,7.059810,-1.711469,6.006727,7.805776,0.622411,-7.346832]],[[3.616195,3.707010,7.915345,0.013731,-0.977335,-8.190215,4.313799,-0.869468,6.719626,0.365634,9.595386,2.957041,-4.194136,-8.246068,-8.261392,-2.731321],[2.617038,-0.589211,8.524102,5.808431,-6.892556,8.961956,7.798863,-5.801584,-1.097245,3.765605,3.352252,-7.466255,-3.231468,-7.425871,-0.035201,-6.485237]],[[-2.969439,-4.210618,4.530362,1.657211,-4.513879,0.028557,-0.751528,-2.109132,1.151862,2.577134,4.497243,8.947668,-8.205679,-0.186174,-7.489234,-3.874419],[-0.812393,-6.875658,0.826033,7.407739,-6.037978,5.938317,-4.273334,7.900246,-4.113862,-8.826509,8.216894,7.446436,0.661106,-0.683276,-0.327554,5.098198]],[[2.242595,-3.772010,3.633422,-1.624718,-8.843491,5.906312,-7.062556,1.677114,4.497456,-0.552686,6.169686,-3.026445,7.572763,-5.611001,-9.091309,-0.857369],[3.841451,-9.259285,-1.188671,-6.742538,-1.514605,5.320909,-5.488918,3.637865,9.340746,-4.315015,4.397994,9.155562,9.036259,7.141942,4.223448,-9.569550]],[[-9.096375,-3.480605,2.711325,-6.826030,-1.180237,-5.045163,-1.951956,-6.622873,9.493325,-8.361951,9.230936,-0.524048,0.891731,-7.360795,0.028753,8.971547],[0.500786,2.747788,-4.106055,2.040050,8.690655,7.958786,1.543558,5.789414,6.207661,-8.944296,-2.101385,6.706384,-3.549232,-9.799388,-0.823741,0.375192]],[[9.535160,4.537047,-4.444059,-8.365503,-8.668613,0.637931,3.355938,5.572898,-4.105554,-2.057977,-6.663762,-6.646759,0.849570,-4.108010,-6.946016,-6.215664],[-8.943363,4.269857,-4.473609,4.346644,-7.401986,-1.410706,5.178568,-5.415130,5.570195,-9.028460,-0.405700,-0.767206,-8.404397,-4.712318,1.135225,-8.146325]],[[-8.997185,-1.353922,-3.772588,8.751785,5.116719,-6.861850,2.361436,-3.123507,8.256284,-1.852360,-4.974528,-1.685300,-6.468616,2.821344,8.912019,2.502122],[-7.506953,-4.578655,0.087815,2.327188,1.405299,-4.350377,-0.152448,-0.170726,2.562368,5.316827,9.764663,-1.550281,-3.034147,4.587062,-8.095473,4.584234]],[[3.481425,2.843809,-3.724174,7.490781,-3.646849,-7.257808,-8.629269,8.303964,-5.193515,6.407025,-7.975595,2.089916,-8.727487,-5.359233,3.016832,8.035028],[8.939185,-5.992227,6.202643,8.328660,4.553647,-5.031113,-6.194151,0.121500,-6.181989,1.244960,8.302175,-2.067908,6.565635,-6.442294,-6.220158,6.833664]],[[-2.193457,8.875268,5.774914,1.081979,2.510509,0.273000,1.019649,-8.107326,6.994763,-0.385747,-1.092603,-4.548994,1.364822,-9.629897,-4.036845,8.091132],[8.201767,-3.836924,-5.201071,0.785715,8.338081,4.448931,-7.326178,8.751985,3.429345,-3.979690,-1.906825,-3.215699,5.382123,8.477872,-8.284824,-5.270498]],[[-3.543256,4.552665,-8.614907,-2.586325,4.110876,5.809395,1.576304,7.677814,-4.124341,-1.206996,1.627576,7.354211,9.736314,-5.650213,7.283892,-3.385776],[-8.363975,-4.717854,-6.652969,-1.373285,5.674936,5.738794,-1.407018,0.674792,-0.765947,1.307420,-3.607800,-6.836767,-5.507204,-0.588184,0.509560,9.180469]]], dtype = "float32")#candidate|2606|(15, 2, 16)|const|float32
bop_2607 = relay.multiply(var_2605.astype('float32'), relay.reshape(const_2606.astype('float32'), relay.shape_of(var_2605))) # shape=(15, 2, 16)
bop_2610 = relay.bitwise_xor(bop_2607.astype('uint64'), relay.reshape(const_2606.astype('uint64'), relay.shape_of(bop_2607))) # shape=(15, 2, 16)
func_1003_call = mod.get_global_var('func_1003')
func_1006_call = mutated_mod.get_global_var('func_1006')
var_2615 = relay.var("var_2615", dtype = "float64", shape = (637, 2))#candidate|2615|(637, 2)|var|float64
call_2614 = relay.TupleGetItem(func_1003_call(relay.reshape(var_2615.astype('float64'), [7, 14, 13]), relay.reshape(var_2615.astype('float64'), [7, 14, 13]), ), 0)
call_2616 = relay.TupleGetItem(func_1006_call(relay.reshape(var_2615.astype('float64'), [7, 14, 13]), relay.reshape(var_2615.astype('float64'), [7, 14, 13]), ), 0)
func_1990_call = mod.get_global_var('func_1990')
func_1997_call = mutated_mod.get_global_var('func_1997')
var_2622 = relay.var("var_2622", dtype = "uint16", shape = ())#candidate|2622|()|var|uint16
const_2623 = relay.const([[5,-3,6,-10,-4,3],[1,-8,-4,5,-10,-6],[10,1,-3,4,-8,-8],[6,5,4,4,5,6],[-10,1,7,-7,1,9],[-4,3,-1,6,-9,-7],[-6,8,2,-3,5,4],[-3,7,8,7,8,-4],[3,6,1,-6,-4,-2],[-8,-1,-9,3,8,6],[-5,-8,7,3,3,3],[-3,-3,-3,5,10,-4],[-1,-10,6,-4,1,3],[-5,-7,6,-2,-10,7],[-10,7,-8,-10,8,7],[8,-5,5,-6,-4,9],[-4,10,8,9,8,7],[-9,-5,8,10,-5,-4],[5,-5,4,1,-6,2],[-8,1,9,2,-6,-4],[10,10,-1,8,-4,-6],[-8,6,10,8,-1,4],[7,-7,-4,7,6,-1],[-2,2,-3,-4,-7,-3]], dtype = "uint16")#candidate|2623|(24, 6)|const|uint16
var_2624 = relay.var("var_2624", dtype = "float64", shape = (6, 30))#candidate|2624|(6, 30)|var|float64
const_2625 = relay.const([[-7,8,1,9,7,-6,10,6,10,2,5,3,-1,-9,-5,4,7,3,-4,-3,-10,-5,-7,-6,8,6,10,-7,6,-5,-6,-3,3,-10,-8,-9,4,-9,-7,-9,-2,10,-6,-6,2,3,10,-10,4,1,7,-10,-8,-3,3,1,6,-1,6,-7,9,-6,-8,4,-10,-3,9,-7,4,1,9,7,1,10,-5,6,8,5,-10,-9,-7,7,-8,2,-2,1,3,1,-6,-3,-9,-5,3,-3,2,-5,-6,5,-5,-8],[-10,-2,-7,-10,3,1,2,-7,9,-2,-5,10,-7,7,-3,-3,-4,-7,6,-3,1,-9,4,-2,9,4,8,5,-8,-1,7,-4,-7,-5,10,-1,4,8,9,10,3,-4,-7,-10,3,-4,5,3,-2,-6,6,5,-9,-9,2,-8,5,-8,3,7,-9,-6,10,-8,-10,5,2,-8,-5,-3,6,4,5,4,-9,-4,2,3,-1,-4,-3,-7,-1,10,-9,4,4,9,-9,-7,-3,-7,1,9,-8,1,4,-10,10,-2],[3,-6,-2,-6,7,-9,4,-5,3,7,9,-5,-5,-7,-5,5,4,4,-6,7,6,6,-2,-5,7,8,-9,8,-10,-10,-5,-2,6,-5,6,8,9,-2,-6,-8,10,-8,3,-4,2,-9,-6,-6,-6,-5,-2,-4,6,10,4,5,-5,2,1,-10,-9,10,9,10,-4,10,9,-4,2,8,-5,-10,8,-8,-10,-1,-9,-6,8,8,2,-7,1,-7,9,-9,-8,5,-10,6,3,-9,-10,-3,-3,-10,8,-8,-1,4],[-2,-2,-1,-8,-10,-3,4,7,8,-2,-2,10,10,-1,-4,-10,-9,9,-9,-2,-3,-4,-10,-1,-3,-1,-3,-7,8,-3,2,-1,6,-2,6,6,1,-6,-4,-9,-8,-4,-3,6,-8,6,-2,2,8,7,-7,5,4,9,6,5,-10,7,-9,-7,-3,6,1,-7,1,2,6,6,-7,-8,-4,-1,3,10,-2,-8,9,2,3,8,1,1,-7,7,-3,9,1,6,9,-7,-2,-5,10,-10,7,8,7,-5,-8,8],[-1,-1,-8,-6,2,7,-8,-4,10,-1,3,4,9,-4,-6,-8,-1,7,5,-8,7,-8,6,3,-7,4,6,-10,9,-1,8,2,-8,1,-4,-10,-2,6,-10,7,-3,-7,-9,3,-1,-5,-4,8,-5,7,8,10,6,2,-5,5,-8,-7,9,6,-4,7,-7,-4,-6,4,10,7,-10,-6,-8,2,-5,-4,9,-4,-3,5,-8,4,1,9,2,9,-7,-8,6,-2,9,5,7,2,-2,10,7,-5,2,2,-2,-5],[-6,5,-2,-4,2,-8,-1,-9,-9,-3,10,5,-6,5,7,-8,-4,-6,-7,-7,2,-9,8,-7,4,-3,10,8,6,3,-7,8,-1,10,-7,-8,-4,3,5,-9,10,5,2,5,9,3,8,-9,-6,-10,4,3,4,-2,-7,-10,-4,6,-10,-6,-8,7,10,6,3,-10,-3,6,2,8,8,-6,-3,-8,3,4,-3,-1,6,-1,-3,-7,6,6,3,7,4,-4,6,-1,-8,-2,7,3,1,6,5,-10,9,8],[2,3,-9,-2,-1,-5,10,-7,3,4,-4,-7,4,-9,-5,-6,4,-2,8,-7,-9,-7,2,-9,6,8,-2,8,-4,10,3,8,-7,10,8,-6,10,7,-9,-6,8,8,8,-9,-10,2,4,1,-2,-9,-8,7,-8,1,-1,-6,-10,-2,-8,-9,-9,-6,-2,-6,-7,7,8,5,-10,-5,5,3,-6,2,-5,4,3,-9,-6,1,8,1,4,3,-4,9,2,3,-5,1,7,4,-3,4,7,-3,5,-4,1,7],[8,5,5,7,4,-2,1,-10,10,-6,-1,-4,6,-9,5,-2,-1,-2,-6,8,7,10,9,-4,6,-8,2,5,-7,-5,-8,7,2,8,8,-8,8,-5,-2,8,3,-4,5,5,2,8,4,1,-5,-6,5,-10,-3,-1,-3,2,-2,-3,4,1,-5,-7,-4,-7,-9,2,6,-8,6,-6,6,-5,4,5,3,7,-7,-6,-5,10,5,-8,3,-2,3,7,5,8,-9,1,-3,1,3,2,2,9,-3,8,3,4],[9,-5,-3,-6,-8,-8,5,2,9,-5,-6,-8,-3,7,-8,10,-4,2,10,2,6,8,1,9,-3,-1,-9,10,-7,6,9,5,-2,1,-6,9,-4,1,-6,5,5,2,5,5,-10,9,8,-1,10,2,6,8,-8,-5,-1,8,4,-9,-2,5,7,1,10,6,5,-8,9,1,4,4,4,-1,-1,-1,5,5,2,7,-10,-1,-3,6,-4,-9,-10,-4,-6,5,7,2,-2,6,-5,-5,6,-9,-7,-10,9,1],[-6,-6,-2,-2,8,3,-3,3,1,-2,-8,-7,6,-5,-9,-6,3,-7,-4,-4,-3,2,3,3,-5,-3,5,-7,-7,8,1,3,8,7,-1,4,-7,9,2,-5,6,-10,-8,-4,1,3,5,-6,-7,5,-5,3,3,-1,3,-4,4,2,2,8,-7,5,-10,7,5,7,-8,1,10,8,10,2,9,7,-9,7,10,8,-5,7,-6,10,-3,-7,5,-8,-1,-10,-4,2,-3,-9,-10,-3,3,-5,-4,-3,5,2],[9,-4,8,-9,-10,8,-9,-10,-8,-6,-3,-10,-7,6,6,4,5,4,-4,10,5,1,6,4,4,-5,-2,-6,1,-5,-9,2,8,9,-10,-6,-6,-10,-8,-6,-4,-9,-7,7,6,-5,-10,-9,5,-10,5,-10,5,-3,4,-3,-10,5,7,5,6,8,-9,4,-3,8,2,-10,8,8,-3,-10,-5,-2,1,-6,9,2,-9,1,1,-1,-5,-10,6,-7,-2,6,6,-10,7,-3,-7,4,1,7,3,7,-3,-5],[6,10,10,5,-1,-2,-8,5,-10,-1,-4,-3,8,-7,6,10,3,-9,-3,1,-7,4,-10,1,8,2,-10,-1,4,9,-9,1,-8,-6,-3,7,-2,5,2,3,-8,3,10,8,1,4,-8,-1,5,7,4,10,-7,-9,3,-10,-7,-8,-7,10,6,8,-7,8,8,-10,1,10,6,-8,1,9,9,4,-6,3,-6,-3,2,7,-9,2,-6,10,10,-1,6,-1,-9,-10,-9,6,8,10,-5,7,3,-5,-2,1],[5,-4,-3,-5,-10,-9,9,-6,-7,6,1,-5,5,-5,7,10,9,-10,-3,-7,9,1,1,7,-4,-1,8,-1,-8,-1,-2,6,9,6,-10,-2,-8,8,-2,1,-8,3,10,9,10,-2,3,6,5,-1,-6,3,9,7,-6,9,1,-10,-6,9,-10,-10,3,4,-1,-1,7,-3,5,10,-6,-5,-1,-10,-5,2,-1,8,-10,10,-5,-8,-6,1,-1,-3,9,8,3,4,-4,-3,1,-1,-4,-2,-3,-5,3,10],[-8,3,-1,5,8,3,-10,-8,-10,1,9,4,6,-9,-7,3,2,-1,8,6,-7,-7,-5,-7,-4,-8,-2,5,4,-6,-2,4,-8,6,3,3,1,7,5,-1,-2,3,5,-3,9,10,10,-7,1,6,5,3,9,2,-4,4,5,-2,-5,-9,-4,-8,-5,5,-8,9,10,9,-2,5,3,-3,-9,1,10,8,1,10,-3,-1,6,4,1,-7,-4,10,2,-8,-10,4,-8,-6,10,-6,-1,-4,6,4,3,2],[-4,5,-8,8,3,-8,4,-2,9,7,-3,-8,-1,10,-4,1,7,-3,-10,-4,2,-4,5,-3,1,4,-3,7,-7,-7,-1,8,-4,-4,-3,-7,-10,1,8,2,4,-5,10,-10,-1,9,-3,10,9,2,-2,-7,2,2,2,1,-1,2,10,-10,6,3,-8,1,-8,-9,3,-5,-4,7,10,-1,-4,-2,-2,7,4,1,4,-9,-4,3,4,4,-2,3,7,-2,-4,7,-1,-6,-6,-6,7,-3,4,10,-1,-8],[-3,6,3,-5,6,-5,-8,-3,7,5,7,-7,-1,10,1,-8,9,6,-5,10,-3,-8,7,-5,1,10,-7,10,6,-1,-8,-1,4,10,6,-9,-9,10,-10,-10,-3,10,9,-8,-10,2,-10,6,10,-1,9,7,-1,-4,10,-2,4,2,2,10,3,-1,-7,-6,4,-5,-9,1,-7,-1,-6,-1,6,8,7,1,2,-2,-10,7,-6,-7,5,7,10,1,2,10,7,-8,-8,4,-3,-10,-3,-9,1,3,3,-8],[-9,-2,-2,9,-10,4,7,7,-2,-3,6,-3,-7,3,-8,6,1,-8,-10,-2,3,-10,4,8,-6,1,4,-9,4,-2,4,-10,6,7,5,8,-5,-8,-8,5,9,6,-3,4,-8,10,6,6,-7,10,2,10,8,6,-4,10,8,9,-4,9,-1,3,-8,-9,-3,7,-9,-3,-6,-5,-2,6,-2,3,5,-9,10,4,-2,-3,2,-10,-8,9,2,4,10,5,-2,9,10,-6,9,-10,-2,8,4,4,9,-6],[7,6,-2,9,-9,3,-6,4,8,-10,7,-4,-4,-3,-4,-5,-10,8,3,-6,-10,4,10,3,1,10,-1,-7,3,-9,10,7,6,4,7,-2,10,2,5,10,9,4,-4,-5,2,1,-8,3,-6,-3,-6,-9,-4,-8,8,-7,-8,7,5,-7,5,-8,-8,9,8,8,-1,-2,-10,6,-6,3,7,6,-3,8,2,-3,8,6,-5,2,1,-1,-2,-7,1,4,3,9,-2,-3,2,5,-9,-8,5,-2,-1,9]], dtype = "uint64")#candidate|2625|(18, 100)|const|uint64
call_2621 = relay.TupleGetItem(func_1990_call(relay.reshape(var_2622.astype('uint16'), []), relay.reshape(const_2623.astype('uint16'), [2, 72]), relay.reshape(var_2624.astype('float64'), [2, 9, 10]), relay.reshape(var_2624.astype('float64'), [2, 9, 10]), relay.reshape(const_2625.astype('uint64'), [1800,]), ), 2)
call_2626 = relay.TupleGetItem(func_1997_call(relay.reshape(var_2622.astype('uint16'), []), relay.reshape(const_2623.astype('uint16'), [2, 72]), relay.reshape(var_2624.astype('float64'), [2, 9, 10]), relay.reshape(var_2624.astype('float64'), [2, 9, 10]), relay.reshape(const_2625.astype('uint64'), [1800,]), ), 2)
output = relay.Tuple([bop_2610,call_2614,var_2615,call_2621,var_2622,const_2623,var_2624,const_2625,])
output2 = relay.Tuple([bop_2610,call_2616,var_2615,call_2626,var_2622,const_2623,var_2624,const_2625,])
func_2642 = relay.Function([var_2605,var_2615,var_2622,var_2624,], output)
mod['func_2642'] = func_2642
mod = relay.transform.InferType()(mod)
mutated_mod['func_2642'] = func_2642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2642_call = mutated_mod.get_global_var('func_2642')
var_2644 = relay.var("var_2644", dtype = "float32", shape = (15, 2, 16))#candidate|2644|(15, 2, 16)|var|float32
var_2645 = relay.var("var_2645", dtype = "float64", shape = (637, 2))#candidate|2645|(637, 2)|var|float64
var_2646 = relay.var("var_2646", dtype = "uint16", shape = ())#candidate|2646|()|var|uint16
var_2647 = relay.var("var_2647", dtype = "float64", shape = (6, 30))#candidate|2647|(6, 30)|var|float64
call_2643 = func_2642_call(var_2644,var_2645,var_2646,var_2647,)
output = call_2643
func_2648 = relay.Function([var_2644,var_2645,var_2646,var_2647,], output)
mutated_mod['func_2648'] = func_2648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2346_call = mod.get_global_var('func_2346')
func_2348_call = mutated_mod.get_global_var('func_2348')
call_2683 = relay.TupleGetItem(func_2346_call(), 0)
call_2684 = relay.TupleGetItem(func_2348_call(), 0)
func_2642_call = mod.get_global_var('func_2642')
func_2648_call = mutated_mod.get_global_var('func_2648')
var_2697 = relay.var("var_2697", dtype = "float32", shape = (480,))#candidate|2697|(480,)|var|float32
const_2698 = relay.const([-5.633490,2.475296,4.786435,-0.854357,-9.075968,5.328288,5.137148,-2.908443,-8.287359,7.115269,-1.843664,1.490467,3.026767,-6.185038,-0.196092,8.116040,0.009546,0.290528,5.375661,-8.826871,-5.675135,-5.189457,4.889610,-9.873066,6.816920,-6.569714,3.236143,7.350696,6.000757,3.173479,7.530771,-0.244434,8.551577,3.889675,0.290483,-5.032657,-7.286212,2.736258,7.878229,7.925623,3.600797,0.033368,-1.262440,4.561673,-8.017238,8.579347,1.989484,-4.429359,-6.422616,3.681837,3.471693,1.776529,-6.318949,-3.379427,3.528717,0.349091,3.578105,7.484532,7.793742,6.072049,0.221985,3.719022,-7.208683,5.487200,-2.736382,-6.260759,2.291660,5.036097,1.120714,5.486342,0.226794,5.611697,5.328477,-5.355462,-7.600870,-2.009683,3.075650,-8.636067,-3.035904,-2.843069,2.689762,-1.048000,-7.561285,-5.042857,2.571704,-8.667105,-0.442342,5.233131,-7.339399,-4.983572,1.163738,-4.325877,2.111427,-8.949193,3.027094,-6.708736,-2.880332,3.800944,-1.008278,-3.701256,4.030835,-2.589375,-1.072032,-8.357729,-6.684334,5.646074,3.257431,-7.203142,4.432807,-4.619672,2.332909,1.938086,-5.160520,-6.190833,-9.246690,-9.821501,-5.515829,-3.186499,2.821063,2.533735,8.733754,1.259139,8.074052,2.333781,2.578984,2.113104,-2.553950,-4.041990,0.467006,4.926580,1.670109,9.129880,2.875820,-2.428664,-6.553093,-5.462205,8.808524,7.669043,7.716662,9.042055,-5.792547,2.640749,5.249675,3.155977,-1.895640,-6.706805,0.053378,8.415533,2.212511,8.367484,-4.277444,-8.108895,8.699921,-2.917759,-2.477657,2.998557,-8.049417,-2.433417,-8.275216,-5.248376,-4.512825,-1.429251,-4.717358,-4.518524,-2.196219,-9.374981,6.367228,-1.645487,-1.114169,8.867699,-3.068959,8.150022,5.291766,-9.371025,-4.325902,8.753114,3.097626,-7.012199,0.070983,-4.068517,-2.045556,-8.213753,7.577905,-4.235820,6.769898,-1.835643,1.743328,-3.108663,7.190370,-1.802274,8.672409,8.004536,-8.888184,9.264104,-5.080807,4.652332,-9.942593,1.398078,-9.007255,0.685019,5.867535,8.417060,8.666474,-8.381012,-5.435160,-6.879822,-3.825852,-9.142342,4.784787,-0.800604,2.507519,-7.673552,-0.629525,6.028580,-2.744635,-1.035705,3.377136,-2.687284,-3.748586,9.762052,9.575924,-9.031445,2.402136,-2.549583,-9.315060,9.535999,-4.834807,3.968760,3.141339,8.028834,3.375786,7.674867,2.233043,-3.026150,-9.259144,-3.482446,1.531018,2.636660,-8.105744,-4.999845,8.022915,-6.039362,1.559938,-8.945474,9.790266,-7.107718,4.979720,8.473027,2.449474,-9.232666,1.703823,-4.701401,-8.641457,-7.879821,5.980853,8.345660,-0.527893,4.703098,-1.314935,-7.170863,6.936434,-6.121475,-7.236924,-2.775160,7.317768,-8.857463,9.016405,-9.414313,-3.792339,-3.270130,4.700624,-7.291517,-1.807412,5.827735,6.963055,-3.087009,6.382737,-1.898892,-8.718292,6.896414,3.501443,-2.085350,-1.676484,-9.289351,8.373830,0.960772,1.547957,-7.354730,9.667446,-0.050259,9.319380,9.899916,8.804183,2.132194,-5.881875,-2.545979,-9.990468,3.049776,6.101776,4.359654,-6.038119,5.363879,6.241014,3.466763,5.229182,5.622493,-9.292860,2.684134,-6.948507,6.824140,-4.143187,0.642013,6.236070,3.430492,-6.079416,8.242007,4.728583,-7.758136,9.086850,9.051192,8.428810,9.077487,-3.026619,-8.937887,8.555784,8.020480,1.005041,-2.144723,1.778119,6.941292,6.093259,0.936315,4.841449,6.264090,2.763251,3.295737,3.829466,8.085633,-8.022765,0.091831,4.620685,8.757812,8.941993,9.616172,3.722624,-4.999782,-8.047738,-7.542581,-9.266306,-2.997016,-5.282091,-8.162530,-1.546760,1.907334,1.819350,1.794835,-4.433195,0.544825,-3.925084,-8.698874,2.909396,-1.481440,-0.417339,2.164642,-7.757747,8.442475,-9.141972,9.687143,9.878827,0.046973,0.101164,5.139909,6.795168,3.990070,-0.600364,8.984607,-8.309139,0.353995,-8.717814,3.652033,-6.604700,-7.624541,7.424632,8.180724,-7.105134,5.133837,8.308250,0.709353,-3.152309,4.981258,0.176185,-3.201525,-8.026086,-2.790342,0.767988,-0.220054,-3.703194,-7.700434,-6.513868,-8.413739,-7.552133,-4.655937,7.958340,-5.919704,-2.765080,-4.499153,-3.368750,1.190195,-1.413509,-0.220675,-9.487476,0.012458,2.522346,-9.584798,9.352836,-4.804303,-3.985847,-4.571105,4.404785,2.474358,-2.199132,2.466178,9.873958,4.975773,-5.393865,4.626410,-0.074976,-6.881562,-3.684542,8.344246,5.314035,5.741751,-9.172906,2.886812,-7.448864,9.122931,-4.880573,8.555020,-1.897364,7.591957,-3.462011,7.742082,5.579403,-4.779737,-8.959564,-8.244114,-6.097302,7.011744,7.313536,-6.303416,-6.003116,-8.773584,-5.169328,-4.643685,-6.974247,4.491999,-6.470536,-0.584596,-7.912509,0.337690,-1.274193,9.533296,2.929007,-6.869219,0.722412,-3.177359,-2.611258,2.707496,-5.538306,9.509344,7.598044,-4.673368,4.397592,-4.216436,5.058698,-1.435095,3.695666,-7.709870,5.035521,3.310774,6.972236,-0.295786,-6.327678,-8.549795,5.456804,1.097401,1.352942,-9.776177,-3.712245,-3.061003,-1.227477,-0.718149,-2.229724,-6.566252,5.858481,1.652974,4.934221,-9.673265,5.771797,-2.881199,9.975382,5.195611,4.146202,6.017038,-6.907768,-4.584186,2.877857,-8.123612,5.311235,4.552824,-8.902421,-7.286606,-9.254641,3.414622,3.721188,-1.434023,-7.514974,1.621431,2.640233,0.797283,8.666057,-8.985506,-1.495443,-7.428768,9.191521,-6.523759,-0.051590,3.996953,-7.589294,-3.469316,-7.979037,-8.712090,3.038120,5.281867,-5.865854,-4.121748,-9.202708,-7.507364,-1.502264,-8.849126,-0.768314,2.616981,0.792408,9.274469,-5.931970,-0.466133,-1.731801,6.123277,-7.572006,-2.858393,0.988182,-4.145131,5.539443,5.635579,-0.177048,1.650804,-2.768136,8.848261,4.447266,1.934640,5.899285,8.985090,-5.078140,7.411345,3.419680,-3.626346,-3.092055,-6.935508,3.263639,2.256723,8.350487,1.158306,-6.497845,-1.727595,8.680502,9.564707,8.012080,5.347608,0.787462,-9.757921,-6.652175,0.717815,-4.221450,8.612946,6.754084,5.269014,7.726066,9.621091,8.906853,-0.450815,2.255909,9.833839,-5.206804,7.976724,0.972056,-8.902404,-1.676330,5.574823,3.159052,-4.392990,9.681060,3.059384,-9.627113,-8.515961,-4.997608,7.755767,-3.629117,-3.309813,8.328908,-2.090986,-1.460173,-4.528175,4.888520,6.673774,-2.938101,4.806352,2.670257,4.561502,1.721842,9.844171,-5.556378,-7.947257,-9.186376,8.129622,-3.008258,-0.125653,-4.032267,2.901196,-8.011483,-5.288286,-3.020109,4.296454,-9.196586,-9.106244,-8.900444,-6.720965,-4.200327,-8.430894,7.234825,-0.758046,2.695841,-7.873434,8.004148,5.646507,-8.804734,1.793451,-9.074861,-6.159325,4.579531,-9.095916,4.420766,-2.903430,9.409804,-2.707844,-0.643359,-7.274355,8.968645,1.638663,-3.906600,1.540373,-1.005964,-3.738011,5.221756,0.880497,4.819354,-9.853337,-7.229028,-6.744256,9.913084,9.959072,2.258618,-5.257564,-9.242378,9.411851,-7.969305,-4.637862,3.530267,1.174469,0.679771,0.549725,5.428041,0.717209,-7.523670,3.335362,-5.515456,6.030429,3.523388,1.460328,0.842881,-1.874170,0.758972,-7.878241,4.751619,4.577028,4.560676,0.750258,-0.117186,-5.521172,-1.673105,5.091036,-3.751826,-5.344938,-1.542703,-4.774134,1.306339,1.900621,7.237934,4.536379,-4.463775,1.963818,-0.149690,-0.981020,-9.378265,4.401797,-9.817447,6.762416,-2.967178,-3.637308,1.604922,-2.739215,-9.749537,2.715408,-0.527273,-1.113719,9.007175,-1.329082,1.765105,8.247446,0.189396,-1.180743,1.861222,8.765833,-4.089086,-6.820853,-2.257417,-9.301340,-2.459318,-1.376019,-4.437532,7.602422,-4.323661,0.430148,-3.710619,0.572624,-4.872099,-0.037780,-2.426504,8.019915,9.160952,-4.409468,-6.731884,-1.075455,3.418179,9.735479,-5.055376,5.731133,-7.710757,-8.390546,6.078640,2.528189,3.013600,5.835658,0.328737,-5.568977,-1.818490,-4.771060,6.985886,-2.538227,0.885761,0.689826,-6.952651,-6.779931,9.986386,-1.075732,2.445509,-1.059070,0.043234,-8.560966,-3.718057,1.455328,1.143837,-7.169331,4.706826,7.409388,-7.329832,-2.927371,-5.453081,-6.134051,8.269420,-4.883327,-1.740864,6.187211,6.945239,-0.481396,6.045396,-5.631974,6.989157,0.985290,3.018606,3.317012,0.902457,2.400449,-8.471071,-4.122488,-4.112740,-8.694190,1.129017,-0.405178,2.434727,3.840578,-7.402572,-4.834009,-5.889032,-9.119200,-4.245922,6.037975,9.854183,4.179357,-7.715042,8.588079,4.472783,4.644754,-9.497689,6.146208,-2.486087,-0.450764,-0.678919,-4.278808,-5.871207,1.064959,-1.826257,6.548147,2.161754,-2.054709,-0.921518,-5.145535,5.677879,-6.872447,6.413935,-1.887646,-9.065559,-7.985393,2.872051,6.149046,-4.569624,-0.836162,-5.766477,-6.840763,9.654884,9.337357,1.469953,7.223422,-6.776458,-0.900366,5.831738,6.615917,7.843043,-2.769914,3.107951,-3.374834,-2.841521,-0.160510,-0.569690,-0.820157,7.971906,0.814368,8.568226,-3.908628,8.666426,8.239354,3.046863,-3.242255,5.295268,1.346218,1.067168,-8.207138,-5.231187,-5.430897,2.047901,-4.269496,-4.051217,3.104211,-4.762038,2.246937,-8.437090,-7.283183,-9.453300,-2.659765,-3.143602,-5.834607,-7.454851,8.444011,5.681066,7.870485,4.572415,-0.220035,-8.616116,0.333328,4.068755,-1.307788,-7.688715,4.981077,4.021652,-4.364291,2.119154,7.061579,3.596832,-0.628786,-4.482189,2.965723,-4.367981,-8.002879,-3.738739,9.533729,-3.475098,8.163346,5.651484,0.537142,8.350212,-2.679266,-5.325162,-0.315631,-8.185238,1.162437,-2.240928,-7.904865,-0.713806,8.492845,4.768265,-4.718873,-9.434272,-0.364922,-8.829179,9.091360,0.495974,-6.179850,8.288307,1.774171,9.189482,0.757392,1.313317,-0.393899,-7.225448,-0.938962,8.096349,7.271099,9.796566,0.788900,-4.953053,9.490664,-8.333089,4.083121,-9.685700,1.709945,3.855956,3.225256,5.979634,-6.006468,-5.226419,5.748027,7.770614,7.538545,-9.085453,-9.312120,6.214954,-9.999382,1.069755,-3.702932,-0.971267,-1.398428,-4.864190,-4.717872,2.542765,5.091411,-0.497157,9.067740,0.123899,-7.944752,4.370138,-7.321826,-1.162646,-3.968496,4.888394,4.664871,5.379563,1.481507,5.154692,5.276393,6.267449,-4.067440,6.616844,4.909783,7.358073,-4.944907,0.528910,7.570674,4.826433,0.524160,-2.928392,-6.589638,-5.973251,9.228829,4.875432,4.266456,1.080374,-0.638863,4.390640,-8.797985,8.847208,-4.889719,7.281022,-6.697010,0.319350,8.365026,-2.033686,9.573679,-0.290085,6.251608,3.159516,-2.568962,-7.447004,3.170808,-9.474229,-8.696076,-6.110595,-4.489293,0.197747,-4.885166,7.604271,-7.901842,7.903475,-6.509501,8.209622,-2.840586,-5.076483,1.130888,9.080497,9.870863,-7.984115,-1.905674,-0.748226,0.344942,4.608069,-0.653012,8.628140,1.177840,3.863288,-7.437499,8.306256,8.565587,9.197952,-2.731649,-7.181055,2.973950,-0.783025,0.903069,-0.574542,-7.194786,4.282815,-1.708329,3.902756,1.370258,-5.840210,5.494711,-9.146688,3.429735,-7.635119,5.265902,8.487139,1.619542,-9.899602,-9.310966,2.187977,-9.023710,-0.609861,-4.806003,-2.139434,-8.264465,3.981986,-0.962210,-8.142251,-2.169239,-0.216301,3.742037,-7.410268,2.451949,-4.452666,5.968190,-7.242840,-4.206346,6.913967,-3.092783,-3.430877,-6.728921,9.224168,-4.355508,-1.181118,-8.370845,-2.246701,4.488225,-8.659347,0.340456,-2.761635,8.047869,-8.916634,5.887952,-7.956474,-9.474233,-4.094715,-2.315423,1.548379,-1.381608,4.604180,-4.089937,-5.110969,-1.407170,-3.168896,8.025619,3.611521,7.016962,-2.607632,5.060047,8.852234,-6.636237,-0.272488,6.979832,1.587788,9.505617,-7.233841,-9.462515,5.347879,5.951193,-2.299956,8.159507,0.006156,7.326037,6.609908,-0.271920,-8.224360,2.424896,-3.018645,3.326588,-8.135525,-9.813286,-5.567896,4.759138,-7.337496,-1.014386,-0.162012,-8.749841,-2.991034,9.779447,-3.633069,-4.316109,-3.734136,7.337948,-8.798427,-8.584669,5.745702,7.614337,7.605330,-2.533938,-1.451621,-5.498224,-7.993231,-5.280152,8.088934,-4.650536,-1.161990,-7.402150,-9.641780,5.962855,-5.808648,1.174427,-4.366625,-5.680649,-1.052490,0.562588,8.926962,5.015478,-6.345156,-7.378401,6.483118,0.421669,-9.900379,0.418545,1.517790,3.992555,-4.083784,-1.330348,-9.949181,6.605077,9.192439,9.176888,-8.197327,-2.584928,-7.622812,-2.735465,5.421149,8.962052,-0.522664,8.832898,0.869462,6.312358,6.295167,3.125700,-3.594768,-5.339117,2.323380,-9.671454,-7.540065,5.385616,-4.244757,1.265259,2.725130,5.809190,0.046906,-9.347842,5.228968,-9.559353,1.346643,-2.543911,-7.859755,3.706694,-3.071883,-8.134493,-3.127082,-0.073374,9.818699,-7.294598,-2.661324,-8.674765,-3.826816,2.611247,1.674658,0.329952,2.467363,-6.784300,-7.473929,2.701321,-2.912097,-0.002588,9.688770,1.352553,-7.365861,-4.407861,0.474264,-1.383801,7.706932,6.487050,3.262354,5.036253,5.789127,7.205349,9.781327,-3.700192,-8.907122,-4.318169,9.008379,-5.255177,0.391231,5.841121,-6.326186,4.081915,8.659713,-1.236188,8.254640,6.533304,4.465103,-1.499990,1.619527,-6.551047,2.465805,-0.120418], dtype = "float64")#candidate|2698|(1274,)|const|float64
var_2699 = relay.var("var_2699", dtype = "uint16", shape = ())#candidate|2699|()|var|uint16
var_2700 = relay.var("var_2700", dtype = "float64", shape = (180,))#candidate|2700|(180,)|var|float64
call_2696 = relay.TupleGetItem(func_2642_call(relay.reshape(var_2697.astype('float32'), [15, 2, 16]), relay.reshape(const_2698.astype('float64'), [637, 2]), relay.reshape(var_2699.astype('uint16'), []), relay.reshape(var_2700.astype('float64'), [6, 30]), ), 2)
call_2701 = relay.TupleGetItem(func_2648_call(relay.reshape(var_2697.astype('float32'), [15, 2, 16]), relay.reshape(const_2698.astype('float64'), [637, 2]), relay.reshape(var_2699.astype('uint16'), []), relay.reshape(var_2700.astype('float64'), [6, 30]), ), 2)
func_1003_call = mod.get_global_var('func_1003')
func_1006_call = mutated_mod.get_global_var('func_1006')
call_2726 = relay.TupleGetItem(func_1003_call(relay.reshape(const_2698.astype('float64'), [7, 14, 13]), relay.reshape(call_2696.astype('float64'), [7, 14, 13]), ), 3)
call_2727 = relay.TupleGetItem(func_1006_call(relay.reshape(const_2698.astype('float64'), [7, 14, 13]), relay.reshape(call_2696.astype('float64'), [7, 14, 13]), ), 3)
bop_2733 = relay.subtract(call_2726.astype('float32'), var_2699.astype('float32')) # shape=(7, 14, 13)
bop_2736 = relay.subtract(call_2727.astype('float32'), var_2699.astype('float32')) # shape=(7, 14, 13)
output = relay.Tuple([call_2683,call_2696,var_2697,const_2698,var_2700,bop_2733,])
output2 = relay.Tuple([call_2684,call_2701,var_2697,const_2698,var_2700,bop_2736,])
func_2747 = relay.Function([var_2697,var_2699,var_2700,], output)
mod['func_2747'] = func_2747
mod = relay.transform.InferType()(mod)
var_2748 = relay.var("var_2748", dtype = "float32", shape = (480,))#candidate|2748|(480,)|var|float32
var_2749 = relay.var("var_2749", dtype = "uint16", shape = ())#candidate|2749|()|var|uint16
var_2750 = relay.var("var_2750", dtype = "float64", shape = (180,))#candidate|2750|(180,)|var|float64
output = func_2747(var_2748,var_2749,var_2750,)
func_2751 = relay.Function([var_2748,var_2749,var_2750,], output)
mutated_mod['func_2751'] = func_2751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2547_call = mod.get_global_var('func_2547')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_2796 = func_2547_call()
call_2797 = func_2547_call()
uop_2807 = relay.atan(call_2796.astype('float32')) # shape=(2, 7, 3)
uop_2809 = relay.atan(call_2797.astype('float32')) # shape=(2, 7, 3)
func_2406_call = mod.get_global_var('func_2406')
func_2408_call = mutated_mod.get_global_var('func_2408')
var_2811 = relay.var("var_2811", dtype = "bool", shape = (264,))#candidate|2811|(264,)|var|bool
call_2810 = func_2406_call(relay.reshape(var_2811.astype('bool'), [2, 12, 11]))
call_2812 = func_2406_call(relay.reshape(var_2811.astype('bool'), [2, 12, 11]))
output = relay.Tuple([uop_2807,call_2810,var_2811,])
output2 = relay.Tuple([uop_2809,call_2812,var_2811,])
func_2813 = relay.Function([var_2811,], output)
mod['func_2813'] = func_2813
mod = relay.transform.InferType()(mod)
var_2814 = relay.var("var_2814", dtype = "bool", shape = (264,))#candidate|2814|(264,)|var|bool
output = func_2813(var_2814)
func_2815 = relay.Function([var_2814], output)
mutated_mod['func_2815'] = func_2815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2230_call = mod.get_global_var('func_2230')
func_2231_call = mutated_mod.get_global_var('func_2231')
call_2839 = relay.TupleGetItem(func_2230_call(), 0)
call_2840 = relay.TupleGetItem(func_2231_call(), 0)
func_208_call = mod.get_global_var('func_208')
func_211_call = mutated_mod.get_global_var('func_211')
const_2846 = relay.const([[-8.370461,1.677874,-4.592690,4.120637,-9.381157,-3.081217,0.005561,-8.640905,-3.443348,2.606760,0.123119,6.835288,-6.316013,1.126858,-1.191388,4.277139,2.474268,8.553516,5.904201,8.182035,8.141768,8.810842,-4.942054,-9.176559,-6.590806,-0.478570,5.256635,1.389742,-1.559853,6.300980,-0.920894,-9.373041,4.961643,-6.513250,-7.777065,-3.751688,5.383100,-0.578780,4.760319,-8.188569,0.953670,-0.161980,-5.394166,-6.629108,-5.677963,0.984347,-9.377996,5.461733,6.071270,2.956305,2.384973,1.602961,7.565497,6.466051,9.140328,-9.854168,-4.663539,0.623847,9.717679,-0.767425,0.271694,-9.319758,1.233987,-1.059607,0.260606,-4.332331,7.804841,-5.979431,8.182139,-7.723346,3.541146,3.364694,8.542670,4.503239,2.350227,-4.502488,2.022782,-9.498017,-6.757090,-9.531542,-9.879734,9.257578,-2.238586,-6.117245,1.909148,-3.355819,-8.132311,-0.749797,7.545995,-2.566625,6.515580,6.584253,6.213090,4.292161,-3.834848,-9.291334,-2.291744,3.137441,9.038907,6.885502,-4.864197,4.671351,9.808712,-9.094606,1.385945,2.983657,7.025227,-1.468126,9.998883,8.870440,8.424809,-9.260325,1.727057,-4.429955,-4.335086,0.732570,-2.123880,3.619542,-3.513660,-3.879118,-1.783101,5.271263,-5.653432,-5.500467,0.662207,-0.974976,7.646614,9.248119,-4.235056,4.590955,0.435059,1.558512,-3.405341,2.784119,-6.966614,-3.800889,-4.201608,-9.312092,5.626088,-6.540887,-9.815731,6.508530,0.109728,-3.215208,8.761566,-6.598801,-9.172872,-1.394120,-0.183406,-0.631021,9.547994,9.203337,-7.842337,-0.958390,5.379042,-8.589439,9.010567,3.818614,-4.615479,-5.854205,-3.597001,-7.386345,-7.241405,1.465177,7.506819,2.546614,-8.618872,-6.640436,3.620662,9.626547,6.702377,-0.942320,3.163152,6.606200,-0.886648,3.195786,6.097467,4.735540,-3.883433,-3.412526,-4.166401,-3.846027,8.200977,9.790827,-7.396130,7.696328,8.859976,-2.629260,8.790504,-8.141745,-2.679515,-8.356538,-6.844528,8.659198,-3.792356,-3.210788,-8.768043,-8.465777,6.573208,-6.799714,-4.743309,8.608851,3.440604,-2.063731,7.798080,-7.985309,4.008901,5.193283,9.056581,-5.276264,7.539097,-0.589884,-7.538307,3.153440,5.939136,8.250706,5.910545,7.601489,-9.278518,7.086832,-0.805191,0.998196,2.742108,7.102463,-9.198303,-3.173101,-7.135180,6.736524,9.688568,-9.585258,-9.134560,-6.671744,-0.019386,-0.232051,-9.823767,4.762869,-4.939615,-8.369106,8.080905,-8.393205,5.539112,0.356166,7.750939,-7.990293,8.966785,0.834821,-9.803271,9.340593,9.027633,-5.092338,-3.357191,1.052057,-4.662208,-4.530736,2.415703,1.505534,3.999478,0.218858,0.166934,-7.260459,-9.412036,-1.392973,8.025158,-3.914963,-8.487972,-1.586945,-6.758360,8.653572,5.916747,-8.292856,-2.110075,-1.663197,3.784368,-3.480828,3.453857,3.297594,1.870736,5.126589,-7.744763,6.292683,-2.559709,6.514059,7.314687,7.094282,-2.122554,-0.574545,-0.721220,-4.516561,-8.020132,-7.997881,7.587073,2.127024,-9.664713,-9.452736,-8.904010,9.663332,5.830384,0.640088,0.876610,-0.881736,1.509856,-4.506889,7.748250,8.255587,5.007185,4.667625,4.337483,9.619046,2.178279,-6.232473,-2.611532,-1.314803,-8.637936,-6.499836,6.787061,8.878615,2.565372,-4.698688,9.729319,-1.492864,8.631496,7.839698,0.620328,-2.888929,-0.182234,-3.716516,-8.080382,0.134512,3.931140,-8.515528,-2.098121,5.318771,5.257014,-0.705635,9.552117,-2.320787,-8.635017,6.470262,-4.765340,2.645659,7.196203,1.932066,-7.638249,-9.590779,0.894173,-9.449068,8.180675,7.320505,1.750821,1.276039,1.729896,-6.377005,3.687203,1.041998,2.968654,2.703233,-7.622983,8.312644,0.161954,-8.992675,-7.798846,-5.559983,-3.285579,8.663950,5.668048,-7.616058,-1.109442,-9.087635,7.364061,3.921927,-7.716076,9.392460,-1.874265,-9.189088,-3.489009,-1.702278,3.043743,-9.239777,-8.933252,-7.869358,-9.881553,-5.601788,2.455162,2.599785,-4.180965,2.325380,7.591868,-2.958494,5.049549,1.170719,2.822032,8.625691,-3.309147,3.472532,5.825109,-4.298354,-1.961327,-4.756745,2.999158,-6.341326,-8.112137,8.352497,-7.142339,1.646020,-5.996018,-1.704307,-1.584303,-9.606739,4.734507,-9.951675,4.549908,5.090112,3.285120,5.302136,5.983079,0.623714]], dtype = "float64")#candidate|2846|(1, 416)|const|float64
call_2845 = relay.TupleGetItem(func_208_call(relay.reshape(const_2846.astype('float64'), [8, 4, 13]), relay.reshape(const_2846.astype('float64'), [8, 4, 13]), ), 1)
call_2847 = relay.TupleGetItem(func_211_call(relay.reshape(const_2846.astype('float64'), [8, 4, 13]), relay.reshape(const_2846.astype('float64'), [8, 4, 13]), ), 1)
func_47_call = mod.get_global_var('func_47')
func_50_call = mutated_mod.get_global_var('func_50')
const_2851 = relay.const(9, dtype = "uint16")#candidate|2851|()|const|uint16
call_2850 = relay.TupleGetItem(func_47_call(relay.reshape(const_2851.astype('uint16'), [])), 0)
call_2852 = relay.TupleGetItem(func_50_call(relay.reshape(const_2851.astype('uint16'), [])), 0)
func_318_call = mod.get_global_var('func_318')
func_321_call = mutated_mod.get_global_var('func_321')
const_2860 = relay.const([7.934763,-9.976358,8.004684,-2.043128,3.589633,-9.431923,-5.532576,-9.497178,2.333128,4.146029,4.034308,2.861388,-6.230185,2.404301,-0.438522,5.734713,-0.110293,5.923386,3.605664,6.443666,-8.181492,2.072958,9.219064,3.775215,8.295634,6.064058,0.230268,-7.813814,8.758691,-6.334709,7.474995,1.715567,7.671061,-1.178557,-7.262349,-5.763835,4.249626,-8.070852,7.412037,2.310188,-4.208215,7.296085,-1.299868,5.237158,1.182502,8.514643,-2.283430,-3.054903,9.417566,-7.484248,-6.847492,-5.968834,1.163814,-3.618647,8.725128,6.041806,-7.929105,7.990146,-6.117953,-6.803994,-0.145177,-5.839216,-6.365680,5.759397,2.380982,-0.952788,-9.524932,-3.110467,2.058313,-8.041693,-6.623617,-9.734334,-1.596111,9.782013,-2.081575,-4.405986,0.743914,7.574704,8.872916,2.270445,2.919437,-3.751414,9.154351,8.414488,5.514924,5.536489,1.593807,5.319215,6.526853,-7.472920,-9.514002,9.363211,7.045188,-8.588568,0.456037,-7.460762,6.638856,-7.118397,7.503099,6.071546,0.259321,-4.832383,-8.946261,-8.624770,7.527027,0.166387,1.459844,7.877141,-3.547630,7.614367,-8.354426,-2.961057,-7.228332,-3.849844,-5.779738,-7.855875,-5.116044,-7.404346,-3.582827,-0.683871,5.608756,-4.222526,-4.741319,3.383875,6.922241,-3.878598,-9.258988,0.134205,8.235291,-0.483226,1.868375,6.695478,-5.502824,-7.020477,-3.063743,-7.666399,-2.505137,-9.390305,-0.091841,5.847378,-7.545952,2.389445,-6.174014,0.478664,-3.698759,2.957385,8.542334,1.826197,-7.202613,-2.332761,0.695820,-6.147762,2.653373,-7.038820,8.239568,8.686786,-3.876196,-2.995813,7.253820,-7.407872,-4.213523,2.918171,8.057481,9.455113,-4.148307,-1.679871,-2.571842,-2.696960,-5.742161,3.973939,-3.939506,4.897096,-1.448124,-6.066298,-5.492639,8.510012,-2.775994,-9.316224,-5.851774,-1.521591,8.902248,-1.927081,7.755082,-9.541104,0.299185,2.595143,-0.893431,-8.722936,0.207824,1.799612,-6.306316,-6.448170,2.873129,-8.020266,-0.094208,7.411905,2.625730,8.520933,-0.667646,-2.177423,5.953509,4.884955,6.044572,-0.284718,-9.111991,-3.198089,4.825270,-0.783527,1.881197,-0.861506,8.999700,5.969296,8.040501,5.830031,-4.540223,5.443352,-6.893556,-8.963909,4.210423,-1.717117,-0.034702,-6.990002,5.035685,-1.756049,1.714637,-0.085413,-7.347335,2.339062,-9.005016,2.531909,9.902761,-5.493188,-5.804693,7.464748,-6.413456,6.951070,-1.628474,-7.272012,-4.534756,-7.023337,0.050915,-5.065873,-4.331836,4.895381,8.634501,-0.275511,5.704315,-9.670768,5.480327,9.463634,5.861867,-5.805935,-0.335160,3.958674,6.091665,-6.890555,-1.138515,2.239377,9.448121,9.245399,0.483927,1.494076,-0.717961,-6.169327,9.184807,2.238969,4.618087,-7.052127,-1.035379,-7.015628,6.716655,-6.042985,-7.012543,-4.197012,-4.415094,-4.398499,2.766730,5.948991,5.808194,8.848305,3.390636,1.571683,-8.448863,1.687128,3.081209,3.490617,-9.787074,-0.973231,7.502429,-9.264507,-8.026026,4.442313,-6.842085,9.364669,2.198061,-4.618182,-9.667600,6.627206,2.543888,4.494514,-1.335855,0.513197,5.522649,8.314768,9.248742,-9.087276,-6.678799,0.306764,-5.439621,-2.711958,-6.003161,4.503387,-8.584270,8.328980,7.869631,-3.888419,5.638555,-6.768383,5.654684,4.092298,-5.649584,-9.738153,-7.235330,9.988759,9.956014,-7.724558,1.791280,-1.402787,-8.991987,9.763567,-1.455874,4.082943,-7.723948,-1.387314,-2.639258,-8.592646,-6.052036,6.493091,-6.278312,2.933599,7.840357,3.258923,7.645776,-1.877094,-2.258683,9.918379,-6.801797,-6.692148,1.419445,-3.824635,6.893039,-0.819370,-0.156051,-9.309035,-9.767616,-4.348021,1.981945,-5.110287,3.609128,-2.525001,7.046076,-4.949442,-8.923318,-7.740739,-1.262786,3.058097,0.182917,1.099795,-0.674104,-7.585914,0.955285,-6.503934,3.241090,-0.315846,7.530544,-1.779187,-0.960254,-3.795446,4.190286,-1.271899,-1.884547,3.940603,0.345738,9.796867,-3.018263,7.981545,-9.929437,-9.506535,-7.903872,-0.685968,0.580033,-0.372107,4.850385,6.445156,1.341588,-4.194550,4.033329,8.350115,-6.141687,-4.195191,3.932626,3.919477,7.304006,2.973504,-9.297460,-3.226286,-0.299215,1.115021,5.852322,-4.180958,7.155156,-4.173503,8.913715,4.918892,-7.818339,-3.901290,7.428875,1.320894,-3.725763,1.292390,-1.986684,-4.957036,-5.768641,9.635856,-7.492688,3.044395,-6.609784,7.555049,8.716431,-6.172979,-3.482511,9.467315,-7.415058,8.992463,4.423924,4.492903,-5.061821,-4.001274,7.538703,-6.154398,-4.215542,4.604617,-3.548788,-2.055565,-8.301483,2.677407,4.094680,-3.365726,-1.919500,-8.020140,-9.040530,4.661347,-5.932005,-5.957827,3.891253,2.516425,-4.535838,1.438630,2.023522,-2.100413,-8.653057,3.852221,2.959755,5.725646,8.421228,1.301467,9.479627,-4.104171,7.784899,5.004899,8.068391,-1.604325,-5.047694,-0.425297,2.506094,1.281746,1.038071,7.651035,-9.619585,-4.651904,7.195275,-6.938314,-6.205234,-2.730931,2.743538,9.366051,-2.815462,-2.692186,4.147398,2.266977,4.850427,-3.140890,9.225018,0.609151,-6.575498,5.279286,-3.723092,-0.028024,-2.148949,-0.779145,-1.937925,-5.326932,7.456892,2.429841,-9.139607,9.631152,4.736813,-0.791529,9.729366,5.779224,6.857418,4.793395,-1.489085,-0.581607,-4.484120,-1.090892,-6.545782,-3.879469,6.695697,-8.389615,-3.580865,9.868938,0.777930,-0.337111,-8.039748,-5.916458,-9.010077,9.198870,5.961145,3.336722,-2.279555,6.232986,-8.499256,-7.518751,7.802631,4.575235,-9.619123,-5.991165,-3.212693,-5.598811,-2.350903,-1.600489,9.768751,6.839230,-5.669823,-2.478455,-7.337365,7.260768,0.399990,-5.268668,2.439089,-8.401864,-2.595058,5.981151,5.397917,5.093593,2.157347,-5.884076,7.124432,2.023819,-3.851902,-7.060038,8.483223,-6.356839,0.324584,-1.127249,-4.815332,-2.158324,3.491685,-6.474973,-6.817071,-4.363575,4.849433,-4.708181,-2.344664,-0.783491,4.422027,5.613535,6.141504,-7.814129,-9.972155,6.174858,1.748473,7.182268,4.406512,-7.606938,-4.206543,8.472763,8.740517,-5.411004,-7.829447,8.338353,-6.826942,-4.479039,-2.534734,-0.124659,9.278599,7.836439,-7.318474,2.066558,-3.735468,8.159217,-1.342907,7.878303,-7.007243,3.406086,-9.414543,-6.553200,7.488159,-0.745263,6.946543,-3.928669,-6.270490,-3.174930,2.685609,6.366545,7.215027,-3.802561,0.634468,2.371102,4.227593,-3.509922,6.126234,-6.402011,-4.110456,-5.141270,-4.643647,-4.494800,1.601101,0.248913,6.785030,-4.145948,6.075794,-0.343341,-3.647657,-6.631568,5.543177,-1.204776,5.097827,6.395702,8.834771,-8.235318,5.157784,4.966060,3.462175,8.056402,5.000304,8.379701,-1.101915,0.581659,4.507986,-2.847147,2.758944,-9.487233,-0.659017,-3.626513,2.188892,3.590975,8.716246,9.054304,2.906274,4.216478,5.984616,3.773313,0.246237,-3.198424,-1.620359,8.858648,6.933826,-8.017055,0.547059,-4.733128,6.571576,4.063907,-4.406256,0.803542,6.236628,-4.505428,1.549467,-1.304195,-5.420606,-6.669652,-6.728874,-6.407294,1.625362,8.660819,9.167747,7.195261,6.831423,-8.175541,-4.939502,7.961137,-3.884822,-7.871712,4.577393,-8.930588,7.108008,-8.393640,-8.784111,-4.045612,9.652463,5.761938,0.753267,-7.179820,4.903605,-1.552288,-7.872267,-9.914752,8.087558,1.841846,3.356286,-3.489262,-0.777746,-2.125633,-0.752759,-6.030181,-3.790198,-0.874820,-7.543657,-3.979947,5.317564,1.109342,-6.884235,1.642042,-6.256642,-3.206797,-6.086846,2.353813,4.145328,-3.459693,-2.691171,-2.064792,-9.398843,-3.299750,5.039690,-8.416438,1.206419,-2.176774,0.689702,4.847375,-2.344994,-4.290596,-5.700173,7.892686,2.885650,6.807938,-2.839086,1.467400,4.286271,-3.276227,-4.740871,5.112408,-1.040472,-8.112675,9.059812,-0.299725,9.805162,3.709371,-6.094693,-1.251105,-5.261746,7.852657,2.827411,3.516311,-9.225325,0.721160,-3.876971,-2.489317,-5.217041,2.643966,-5.298641,-2.991510,-8.992813,3.962213,-5.544142,-3.422413,-1.893886,-6.817528,-9.031296,-3.727830,1.181781,-2.525565,-1.617582,-8.653234,7.077577,5.552480,8.144995,7.749676,3.319404,-1.925993,-6.048180,-1.836723,-8.535720,-1.859422,-0.969983,0.693787,-3.331793,2.729357,-8.850974,-3.934059,8.023333,2.128168,9.432799,-2.691353,-6.184161,-0.761607,-8.094185,9.415233,3.789254,8.208662,-3.409440,1.072882,-6.617076,6.730360,3.201924,-9.458844,5.823696,1.169032,9.085141,6.745301,8.930096,-9.288675,-2.255311,-1.988053,-1.385803,7.728759,8.473163,2.386992,-9.280928,-0.407098,-8.219452,-6.703511,9.116470,-0.563479,-1.932952,-9.727292,-5.517506,5.376633,-2.013204,-8.864281,4.733142,7.482749,1.852858,6.129175,1.886936,6.715484,-4.335941,-8.733135,6.935672,-8.746311,-0.166265,8.400488,-8.487155,-3.779110,8.509388,9.308546,-5.728229,0.390392,6.661475,6.217220,-2.594007,1.303097,2.562230,-1.145383,-0.284151,-1.682527,2.838530,9.975414,-0.519604,-8.467678,2.179454,-2.136404,-1.238790,7.782437,-7.327214,1.996380,2.785962,-4.981666,-9.261683,9.693723,0.312766,0.742334,-9.883575,-4.117944,-9.189019,-8.331405,-7.486339,-6.696674,-8.758236,6.852206,-1.096049,7.107551,3.526164,-0.883124,2.334548,-5.509217,3.186166,3.603642,3.023646,-0.672220,3.493449,0.904820,-0.974759,-6.302495,9.070458,2.472004,-6.085104,1.688891,-0.030760,6.874081,3.593172,8.038799,-0.681032,-4.756340,-8.700972,8.065292,6.805115,-5.160753,-1.568406,-0.446877,-7.856111,-7.981021,2.867661,-8.865117,3.118898,6.038587,4.461638,-9.267818,1.636303,5.350371,6.091420,9.323703,2.482454,-3.252162,7.922160,7.666817,8.086596,-8.095817,8.713194,-0.151775,0.386609,-9.242642,-5.319956,-0.726778,5.960589,-6.321803,-8.997371,-1.198456,2.233927,-5.229531,2.030781,-8.791102,6.177251,1.567737,7.864426,0.373144,5.582507,2.282963,-8.444560,-9.194541,-5.496331,7.080344,-0.373498,-4.894031,-9.134184,-7.438701,0.354196,-4.431528,-2.949759,2.297344,-7.934104,-7.341794,-9.403487,5.105553,0.340604,4.977567,-0.816786,-3.010184,-6.981946,-9.110876,9.244508,-2.337838,3.549237,0.135741,8.766506,7.238761,-8.619246,6.627147,-8.552971,4.265954,-0.017835,7.843656,7.616128,-2.643643,-8.162101,9.581273,9.762219,-0.697026,-9.138254,-5.039003,5.447759,9.764465,1.981235,-5.543829,-0.734385,0.585224,-8.676641,6.375532,3.425611,7.730137,4.688692,3.047797,0.054934,3.297313,-3.972795,0.247041,-8.208192,8.089102,5.565905,7.490094,3.543187,1.163613,4.811873,-8.593608,-3.740098,-8.851405,-8.424861,-5.555127,-3.450525,9.229036,-4.788292,-5.428464,-9.704032,-2.021705,8.467752,9.339663,7.870374,6.441456,2.909873,7.465543,3.547628,7.631602,7.924923,2.214053,-5.629429,-6.365007,0.642229,2.054355,-8.288242,-3.106262,0.776572,2.924386,-6.027437,9.088448,-2.211905,8.735694,-2.169488,1.852313,-9.406925,9.198177,3.432967,9.040779,-0.727820,-5.053819,5.491197,0.543511,-7.516991,2.055453,4.011135,1.405150,0.183608,1.292185,5.345456,5.795966,-8.572564,-8.488731,7.477351,-1.659208,-8.582211,-5.505113,9.102367,-3.527174,-3.826841,-9.776697,-4.486070,9.386254,-8.903771,-9.394258,3.624695,-2.640894,-6.761127,-6.493341,-1.171556,-0.855594,4.633828,-1.768942,-2.694375,3.477640,-0.425068,-6.861155,9.675925,-1.898974,-2.256379,6.413340,1.796786,4.316729,3.222825,2.103600,4.016463,-6.784210,-6.796134,0.055180,-1.317751,-5.926456,9.091497,7.420815,-0.418383,-4.969305,-9.126847,1.199933,3.548573,-8.702429,-1.141255,3.721608,4.746553,-4.637439,-7.774411,-1.853411,-0.310183,-9.184718,1.626575,-2.046513,2.546934,-1.382768,4.956421,2.227417,6.848007,8.697675,3.291694,5.900327,-3.105646,3.477640,6.060314,0.044556,-7.250171,1.856216,-4.335311,9.389313,4.206481,9.131227,3.520978,2.129905,-3.651349,-8.250390,1.917029,-7.997111,-7.141228,6.771702,5.082332,6.124956,-1.758067,7.846881,9.831580,-9.471725,1.015154,5.656744,0.382450,8.365035,9.021025,8.465347,7.180139,-5.624640,8.038457,7.982097,7.753132,-9.794151,-5.661907,-0.566396,0.881195,-9.125937,-8.847808,5.074423,-5.546520,-6.397364,0.587591,1.212160,8.262836,-3.459901,7.620088,-5.337188,-5.727040,-1.038352,-3.986354,-8.634837,5.739621,-9.999394,-2.815913,0.460347,-9.163433,-9.781389,-4.115543,-3.204983,-2.024791,-1.060425,4.154277,-6.262728,-0.344597,-1.424323,9.952070,-4.141198,1.191754,-9.891454,-7.134596,-2.624326,8.363138,-8.545727,-0.413693,-8.077051,3.505257,-4.079797,3.496049,7.404016,6.191276,-9.199251,-5.215877,-0.468458,-1.604438,-3.094600,-7.493692,3.160497,5.290134,2.872299,3.964939,-6.959606,6.571507,8.174912,5.928146,-7.757139,-6.932781,5.866269,6.049908,-9.345122,6.157475,-8.752832,2.116804,0.697301,-9.106886,4.059434,-2.711980,-5.430503,-1.120584,-1.934399,-0.820110,4.990958,-8.624750,-2.252355,-3.478527,1.712409,2.039129,2.117550,9.423880,6.022399,-5.595990,7.408903,6.911525,-0.371895,2.804125,2.803868,6.448089,-8.434129,-9.972012,7.521050,9.305410,-8.368417,-2.342026,-4.329334,-5.949233,5.453079,-6.183528,-1.817562,7.433623,8.379877,7.060499,-3.720877,9.179231,-1.003447,5.161654,-8.066449,-3.207669,8.118359,8.538934,1.519202,-8.676062,-6.852234,9.437860,-0.367993,0.437101,-7.315240,-7.432449,9.576849,3.250740,9.778393,1.796067,-9.616679,-3.064746,-7.463357,7.913274,-6.089879,4.930595,-6.581190,4.932194,3.183352,-9.154431,4.084818,-3.151885,6.952192,3.024862,9.044276,-6.026485,-8.222777,0.741189,-9.685028,-4.649721,-8.886524,2.634339,6.469531,2.779846,3.113075,-3.714669,7.251240,3.536794,-4.136304,2.478391,7.052534,2.207498,2.874770,9.310070,1.139157,-6.139338,8.552527,-8.183494,-0.872067,5.295699,-8.311111,-7.736355,-0.421293,-8.671550,-5.095755,-7.922974,6.853965,-7.523736,6.374027,5.365752,1.382245,-6.669793,7.637084,1.517911,7.190576,-1.073059,-7.705983,2.289013,-4.677095,-8.618955,0.347963,3.890455,-3.293771,9.015976,9.039754,4.583669,-2.044085,4.674085,-3.479000,5.195118,1.264735,0.988682,7.072937,-4.409114,-0.815504,-8.902307,-1.494906,3.635892,9.005180,-2.470452,0.835103,-4.035687,1.103424,9.004865,-9.797510,1.194329,-5.607493,-2.215894,5.651505,-6.537001,5.800604,-2.876098,-1.686855,-0.862304,-6.497319,-6.830705,-7.122261,-0.521481,-0.275960,-3.033002,-8.085673,-6.324857,-1.920396,-9.589479,4.508380,-9.360725,-1.649619,-1.642252,-3.638914,-5.837331,2.320853,-3.511723,4.259636,-4.559485,-4.597915,2.471294,-6.890898,-0.762208,-2.485184,8.057849,1.128320,-4.925028,-6.529099,-1.196358,6.017216,8.466702,7.095102,4.774006,-5.376346,-8.459244,-5.304986,-3.242788,5.374517,3.429259,4.221005,1.672948,-3.641708,-3.243613,8.318769,9.061306,-8.077002,4.452707,-5.929169,-8.608601,-0.953110,-1.440906,-8.610100,-0.451815,0.638402,2.628104,-6.817066,1.859422,-3.197427,1.786709,-7.096751,7.646779,4.183352,-3.952032,3.087181,0.940890,6.891397,-1.625674,-5.614249,1.518755,-9.933090,-1.897606,1.117331,-6.740029,-4.340194,3.888426,-3.729842,0.213859,-4.154299,-3.295169,-6.551728,9.779712,2.637444,-5.433679,-6.081011,2.528923,-5.172443,5.189644,5.624479,-1.701982,1.545139,-1.033365,-1.408665,-4.427572,3.311651,-4.211164,-2.425037,4.568518,1.994410,1.859437,7.051960,-0.758239,-2.846099,1.588411,5.257097,8.361466,-9.975926,3.124312,6.659510,0.189994,-8.081316,4.887559,9.963747,-6.344889,-9.135126,6.624606,-0.394308,4.271389,6.779397,-9.262750,-5.863404,-7.795945,9.226657,8.513867,6.174942,7.425676,-4.261385,-8.269774,2.080657,-6.653312,-6.164103,1.155335,-9.948932,4.381690,9.884443,-0.753747,-1.331483,-8.733530,-4.483977,-0.484367,-7.975684,9.382407,-6.156794,9.552756,-7.061062,9.652618,7.078801,2.872206,-4.092034,9.709483,-4.977864,5.850606,-5.857224,-5.668678,-9.617363,-6.219451,-9.791484,1.641383,0.883649,-4.749730,0.605814,-1.845235,-9.634965,-3.897578,7.176387,4.403725,3.501919,-8.946146,-8.817695,4.776322,6.210911,-1.455624,9.950487,2.139061,-9.644825,2.295469,7.179592,-2.962917,6.523628,-4.101378,-0.041279,9.003318,7.611176,-3.200569,-6.202491,-7.218695,3.360707,-0.712737,-3.500338,-9.637201,3.521599,-6.858100,9.572305,2.160955,3.672505,6.008974,2.025275,-5.714434,-0.501858,-9.044575,-6.381040,2.837159,9.109122,-6.850251,6.864912,-8.657736,-8.152077,9.734067,3.986797,5.600863,8.574455,2.767210,8.140555,8.461863,-2.863798,-2.403820,-9.266337,-2.781290,4.254681,9.179581,5.419924,-0.788364,1.967181,-8.098819,-2.981716,3.850470,-7.879570,-3.467884,-7.865590,-2.524651,2.337754,8.569205,-4.286210,-5.805390,6.863411,-6.588681,1.640617,-9.658533,-5.146352,-5.300572,-2.703918,-2.000429,-1.881958,-4.699849,-8.314234,7.444294,-4.781576,2.654203,-6.776401,-7.243209,-3.421107,1.056039,0.500068,-2.284916,-2.349410,-9.063808,-9.801490,7.673929,9.994826,-4.746435,-1.741551,-7.727305,-1.734582,2.555705,5.630135,-3.255660,-5.225870,2.059198,-4.955497,-1.296237,-6.384287,4.962337,6.060292,1.906034,4.160453,9.033951,6.801959,-6.792733,0.950736,0.382835,8.331158,-3.467573,8.440357,-2.845674,0.035179,-8.429672,4.099523,5.808305,-6.679161,-8.872653,-1.469675,-5.307105,8.504948,7.306358,-6.430638,3.053320,7.824156,-6.024562,7.778244,-1.758469,2.412845,1.219224,-2.987414,7.591741,7.275299,-3.366704,6.171332,-2.919011,1.351592,-1.505891,-6.346731,-4.293366,2.169558,-8.998907,3.963016,-6.084314,0.220565,9.695505,-0.579849,-2.054958,-5.789486,5.944514,6.092643,-2.941026,1.303865,4.295644,-7.541545,5.821000,-1.410470,5.600820,-1.468269,-1.319963,9.433277,-8.043579,-0.871846,0.115532,2.274181,6.145004,-6.737982,-2.367070,-3.802101,3.984437,3.799360,-5.360329,-9.512058,7.874182,5.384047,-2.731330,4.783668,-2.401525,-6.654324,7.026969,-1.416066,-6.430084,-0.330338,7.369553,-4.484504,-9.523047,7.424071,5.604803,-9.361875,0.064098,-2.016541,-6.899648,-2.706719,-7.303186,-5.893073,-0.286638,-8.759426,-6.644346,0.397056,4.655182,-4.007799,3.741166,-1.005611,-7.615104,9.459346,4.226248,6.176821,-2.471141,-6.426040,-6.162164,-6.086554,-2.383743,-7.705735,9.360706,-6.348813,2.086495,-6.046840,-4.070687,-0.893181,4.256779,-2.098934,8.149818,-0.319667,8.015488,-4.663998,-3.730660,1.343158,2.780104,4.503636,1.155067,5.882699,-4.402927,-7.150721,2.262865,4.646977,-4.172126,0.576310,-9.409198,9.314170,-8.816900,8.746977,-5.784297,1.951588,-1.824042,2.361962,-6.979990,1.196853,-2.020539,-5.074269,-6.650418,9.602475,7.041170,-1.616170,-5.118486,-4.755829,-3.718005,8.138927,-7.180176,-6.319686,1.901875,-4.981541,1.461625,4.691576,2.524896,2.257070,2.581393,5.680756,8.222598,-8.200238,1.890307,-4.760445,3.701262,9.879764,9.094075,-3.311218,8.337555,-6.827596,-8.770864,-8.343399,4.681566,8.863897,-5.838257,-9.545315,2.405598,-0.156422,9.421114,-3.001276,-4.152856,-3.973176,1.149916,1.115075,8.395641,7.629313,7.657563,-3.374862,2.992700,0.399768,-6.001658,2.842442,8.011374,-5.379661,0.277469,3.471246,-8.326173,5.357608,-1.207214,-4.689533,-3.118815,-5.982480,-4.105398,5.208973,-4.644254,1.899999,-3.416845,-8.346818,-3.254484,-2.488130,7.671809,-7.409377,6.606267,-4.428374,-7.653525,1.771887,-8.122708,-0.489803,-8.304773,4.716930,-7.403095,5.455843,9.024020,-2.609318,9.027316,6.909796,-8.148302,-1.260785,7.661096,-4.754772,-0.553631,0.819539,9.737251,9.028986,9.681154,-2.712346,7.238458,-8.879165,-5.879078,6.765717,3.758123,-1.032119,-3.041738,6.858164,2.789089,6.341361,9.172622,8.090665,-7.534866,2.665251,4.809085,8.253937,6.091088,7.549636,5.946431,2.393363,-3.505410,-5.047668,9.256935,-0.646180,0.148670,-9.424942,-6.930516,7.729924,-5.611098,-5.682286,2.463280,-3.094506,8.149302,-6.555550,-4.922106,1.823061,7.252353,7.012763,0.575259,-9.099829,7.574754,-0.157430,-2.503555,-0.609371,-1.702773,-7.604182,0.084267,-0.754818,-5.935210,6.778951,2.673236,1.858162,-0.412829,9.669982,8.286966,4.389129,-1.058789,-5.810116,2.835510,6.544976,-9.065873,9.547504,-1.270463,-8.770278,-9.023320,-1.298154,1.709166,4.836923,-2.130905,0.261705,-3.119089,1.012051,-7.074439,8.721139,-4.047539,1.020398,-9.402239,-9.140410,5.949196,2.299946,-7.183306,2.953683,-6.556625,-0.728197,5.278567,-9.442598,-4.689111,-6.466793,6.827376,-1.072125,-5.771053,-2.320847,2.642024,8.046560,-9.916447,-8.455546,-2.629610,-6.872475,-2.473551,-3.708283,-7.851627,1.061869,-8.547505,-6.944156,2.330397,8.101711,-6.803867,-6.712019,9.532073,-1.455430,8.260323,-3.952252,-1.628273,-6.139776,8.277467,-0.647867,1.144398,-4.618847,8.859244,4.983094,-7.379141,-9.659079,3.231903,-5.429254,6.306363,-0.853835,8.139364,-0.248462,4.598549,7.883550,6.661552,-8.430455,3.167158,-5.564942,3.295058,-4.815918,9.030991,3.516048,1.976497,2.009025,-9.053536,6.592853,-7.195859,-2.974785,-7.495611,8.688347,0.694606,-2.772816,-3.343721,-0.095966,4.945122,6.311690,5.827284,8.266712,-8.800564,6.531505,-5.073623,2.500623,2.574913,-1.396192,7.894045,0.165472,6.153768,3.519937,4.275053,-3.384242,-3.143176,7.656324,-4.979201,1.806258,4.495679,1.550623,0.257191,-3.044133,-8.710722,6.268438,-3.744883,5.259464,-1.566009,-8.776069,-1.283221,-8.030862,-6.285537,-0.337441,-2.387654,-7.817674,3.607178,9.611098,-1.103474,0.231651,-0.530256,-8.174335,8.162328,5.597033,-9.060300,1.991894,-7.512653,-4.571082,3.994554,1.497644,-9.667660,6.975319,8.727524,-4.223071,4.896917,5.840621,-6.414608,-4.745469,5.938261,-9.465288,1.862423,-2.751620,5.377156,0.879144,4.337561,8.985246,-0.617543,1.725617,9.038546,1.697085,3.121788,3.295457,-6.658371,-2.904089,1.852836,6.080330,-6.559513,-0.504515,-8.902298,7.581682,-5.401435,2.341904,5.654310,-1.978644,0.651460,1.899913,-7.397908,-5.574234,5.880601,-8.200852,9.872735,0.577857,5.372831,-0.645446,9.989594,-3.773938,-9.340955,-8.337933,-1.031672,-1.411701,-2.275603,4.387397,-7.669785,6.069219,-8.519484,-4.174568,-8.087413,3.320506,2.308597,7.123895,1.055797,-9.702474,-7.197948,-5.920255,-9.655056,-5.126755,-0.842534,8.087170,0.406058,-9.656340,3.198888,-8.954813,5.545509,0.921553,3.995560,5.036485,-5.271795,-1.236021,3.379378,-4.920230,9.584383,-7.710527,-9.095110,6.226722,1.052356,5.989629,-8.954861,-7.890874,7.263602,7.942225,-4.092320,-7.064921,-7.426087,3.095746,5.666918,9.331946,-6.400104,-3.512384,-4.027316,4.289189,-9.933409,-4.419905,-9.885257,-2.226313,-9.389567,-7.580512,-7.118402,-2.628870,4.712610,-8.235438,1.857512,6.673601,-7.423842,-1.734256,1.789294,-1.091610,-9.112637,9.678816,1.268557,-4.867966,3.707471,-1.217248,9.770418,-4.514537,5.525838,6.273185,5.990796,-9.004330,3.199370,-3.485413,-4.063286,-9.562423,8.546793,5.814648,2.538371,-9.695797,-4.119657,-9.050499,7.286360,-0.996624,-9.923325,8.767780,8.480415,4.844271,-4.525808,3.789715,-1.673130,7.263679,9.684869,-9.634279,4.487017,7.655282,8.746571,6.974531,6.967329,9.243419,-3.173001,0.715168,2.801272,-5.877713,-0.351369,-9.055541,8.044468,-5.161065,7.399679,0.524144,6.844736,-6.528113,-0.806148,-3.702720,-7.507911,6.515458,-5.813410,-1.893009,5.863735,-6.941143,-3.290217,-0.447057,-6.086129,3.446632,3.076025,-6.846181,5.993446,-1.359388,9.470130,9.451060,-4.614214,-3.494097,9.171350,-3.755532,7.733564,-0.303020,-9.857189,3.617619,8.800176,-2.906468,9.428427,-0.713683,3.741734,-9.055530,5.882143,-4.507775,6.084062,-8.144015,5.232508,8.692512,0.931540,1.414399,7.283274,2.833515,1.931986,2.390386,-2.311776,8.731248,-3.184620,-1.839149,-1.778978,-5.018062,6.685431,-4.127080,5.263241,8.158026,-0.151930,-7.009089,3.853768,-8.907516,0.399615,2.049665,2.237560,-7.057926,2.808194,9.374600,0.520764,9.982352,3.796355,-0.437751,9.372619,1.381166,-3.503761,0.109306,8.507136,-0.912844,-5.516979,6.416967,-6.861362,9.931725,-3.540106,7.602170,-4.866344,6.256058,0.421408,5.511198,9.034418,-6.295427,-4.527339,-3.428597,4.018107,8.581218,-2.070220,-1.758504,-7.483393,-7.423513,-4.025836,-9.670912,-9.611494,-3.191559,1.390324,5.763211,3.162596,-1.997848,3.368825,4.109336,2.481886,-7.842118,7.114135,1.596983,4.251840,5.457294,6.112764,-2.026984,8.710140,4.438143,-4.499190,6.678643,-9.683994,-1.246637,-2.564699,6.726006,-6.880496,-9.168620,-2.440630,8.307886,5.621205,4.098366,-3.588818,5.202624,4.181188,8.281055,9.387715,4.987790,-5.643808,1.999260,8.906435,0.697391,7.713618,-8.960959,1.895963,3.720670,-8.741991,5.046445,-8.653970,-8.548946,-1.026686,-8.579164,-3.991473,7.077295,8.482462,-1.900300,1.037590,-5.302212,4.582639,-6.617632,-7.018422,8.687334,3.921591,4.385777,8.269036,3.498929,2.021953,4.396478,6.521246,9.393187,-7.977300,1.211840,3.859477,-5.629299,-3.948533,3.045072,-8.970654,5.637892,4.210552,9.582268,-0.230554,-1.240560,-8.588212,-8.192233,2.477832,-2.072001,8.803578,5.512692,4.705999,2.654497,0.208828,-1.349552,9.014433,3.092604,9.219180,-2.027274,3.505335,9.696757,-5.297729,6.606078,8.661168,6.021831,5.605108,8.886188,-8.989444,5.205593,5.489437,7.352359,9.647779,-4.922078,-3.941434,3.130705,0.160255,0.972918,-7.991951,9.885902,6.917990,-4.256568,-8.165297,0.506625,-0.497589,-9.538310,4.211373,-2.859555,-8.801442,1.000270,4.301101,-9.212165,7.865004,4.831116,-5.607159,-3.780293,8.414200,-9.594761,-4.790317,9.177188,-7.855126,5.118157,0.394943,3.947421,-3.194544,-2.142643,2.440343,-8.795479,1.462292,-3.983308,6.403208,2.481584,5.005462,-5.588550,0.100195,-2.495031,1.329871,3.917060,4.584969,-4.548988,6.071799,-4.641528,8.238143,-9.710994,-2.305525,-8.454750,1.790989,-2.176564,7.329857,-0.643706,-9.577485,3.860776,-6.704855,5.006105,9.876820,6.736155,-7.527566,0.856922,2.272879,-2.548810,-0.038980,7.704894,-7.796385,-8.770377,-0.455373,9.181950,7.747620,-3.624712,2.058725,8.948765,5.720147,-5.595822,-6.023976,4.984719,6.707370,4.455759,-9.013094,9.271914,2.810531,-7.358818,-8.703600,-9.911591,-4.663335,-4.211020,-7.597086,-1.815214,-6.391574,-6.698386,-3.378390,-0.055389,4.588984,8.534517,-9.511181,2.034221,-4.022284,6.322789,2.409532,-7.674199,-5.546643,4.922247,6.472866,-0.893031,-4.132587,-3.918599,-1.069777,-2.165880,1.175890,6.901988,-3.784435,4.438571,0.735822,-7.123625,-0.608732,-3.853465,1.555942,-3.301217,-8.051088,-4.357960,2.630396,1.503093,-5.675697,8.513580,-3.382884,8.283884,8.019812,0.488128,-0.960034,9.037617,4.365889,1.722895,-3.415296,1.728439,5.131901,2.424397,-1.072834,-5.113111,6.606296,-7.058376,9.893850,-0.564472,-7.984473,0.583234,6.032093,-1.593109,-6.721076,2.645985,6.323443,2.668565,5.639898,0.337002,-5.712907,-1.322028,9.111331,7.398764,-3.191275,-7.825321,6.637818,3.188012,-2.251749,1.552469,-7.849162,8.640013,0.197603,-3.436624,-2.645095,4.430973,9.179286,-5.642166,-3.789448,6.492608,2.026148,-7.166934,7.811143,-2.572582,9.884953,4.920110,-0.363344,3.410454,0.035779,-3.392108,4.242972,-1.246750,5.551366,2.288639,-0.921193,9.246636,-6.309026,4.453880,2.290714,-2.240047,0.656043,-7.774412,-2.648086,-4.425025,5.752801,9.262838,-2.073254,-9.172179,-7.193687,8.495472,-2.946796,2.707600,-6.328722,9.604943,-8.446782,-8.306245,4.106819,6.182823,-0.881585,7.393239,3.197807,-8.961379,3.677248,2.270260,5.552942,-3.655848,0.830559,-2.155315,-2.207301,-8.933420,9.982756,7.198353,3.841424,8.530251,-9.172739,-5.946377,1.376210,1.534929,8.480236,6.832390,7.308584,-2.617712,3.762725,5.258007,-1.517628,-9.301449,-5.560041,-8.386006,-0.231827,-1.197953,2.923118,-3.985125,4.047653,0.160892,2.395863,9.293796,-5.201186,8.392674,2.777309,-3.260306,-9.521794,6.419945,-4.424298,0.915843,2.627978,0.407683,-1.412366,-6.768051,7.351446,-0.294550,-2.124470,4.036611,7.931179,-8.532454,2.376066,7.234772,2.781582,0.964818,-7.811221,-5.947341,-8.645128,-5.400134,-6.708032,-1.571948,-8.304096,-6.588323,3.897743,-9.938006,-5.191886,6.417215,2.734090,-5.389977,1.586087,-5.856303,-3.972017,-3.897867,-1.178072,1.216321,8.598472,-2.135536,-5.180271,-5.320507,-4.224652,-3.033868,6.957013,2.039555,-6.074434,1.852284,6.523343,-4.131106,-6.830922,-3.403333,2.378053,3.202981,0.734280,3.331701,-0.103901,8.078232,-8.162837,-4.720343,7.426016,-7.873445,0.393680,-0.298209,8.608064,-2.663727,4.986798,-3.839165,-2.151166,1.807315,9.710718,8.974968,-0.957433,-9.388408,-1.691608,-1.506304,-3.024402,-1.172542,-3.346287,-6.001634,9.046948,7.751618,7.186931,3.516850,-6.383068,-5.969608,0.692139,4.041081,-4.660443,-5.517131,-0.099010,6.239793,8.200689,-2.168863,-3.361340,0.899548,8.002194,-6.815497,-0.268466,-8.149723,-1.298478,-6.420177,-3.846800,6.635615,-9.945001,-6.038163,-2.483606,9.042785,0.361217,9.267215,6.134488,2.467174,5.057852,5.109315,3.660300,-4.700024,-4.496950,-8.730629,3.188419,-4.147319,9.334964,-9.177624,-5.114483,-7.976392,-2.978602,6.379560,-4.059296,-7.231967,-1.476554,-3.983435,-8.489519,8.039151,1.919545,9.887264,1.562111,-2.878387,-6.738564,-4.364719,1.499951,-9.496339,-9.813889,9.910434,-0.701590,-9.425659,4.148364,2.408323,-4.143324,5.453609,-3.979052,-5.016575,-4.501912,-8.589641,7.607961,9.318259,3.803020,-7.629597,4.921477,7.490832,-3.697621,-5.568964,-1.696403,0.650205,-3.787854,-3.164841,2.586776,-3.272711,-0.126640,4.584028,7.894103,-4.434948,-8.726581,-5.192246,-3.557734,-9.853407,3.182021,-6.962424,-8.289974,-3.967983,-3.735805,6.454148,4.992213,5.117478,-7.105848,-6.190693,5.390381,6.148774,2.854929,1.729565,5.771516,-5.728087,-6.086348,-4.647238,-1.766078,1.024776,2.334664,9.035430,-2.508293,-9.076935,2.219890,-9.383032,3.237763,-1.177385,7.629257,-8.442000,0.917701,-1.281258,-3.560578,-1.948439,9.257012,3.087669,-8.013407,-5.098155,-9.694294,-3.259175,6.332212,-1.106947,-4.574506,1.776057,8.265311,-4.263368,1.242162,-0.525186,9.380796,-6.550831,8.731523,3.028725,-7.946661,-9.081892,6.439527,-7.805554,-3.860114,9.897833,-4.591054,-2.293143,2.188984,-4.182143,7.591840,-5.917069,-7.376977,-9.840721,-6.772354,9.507032,8.239680,9.200690,-4.035925,0.516019,9.442692,7.290081,7.686161,0.462680,-3.459340,4.961858,-9.601082,-5.886891,7.817187,-3.947929,9.139066,-4.030808,-4.268503,1.301204,-7.107634,4.975463,5.891058,1.415742,-6.949913,9.697476,-1.817827,8.285106,-9.621190,4.211074,-2.140870,-7.704694,-1.124483,-5.316266,-3.807277,7.432940,-3.523184,-3.053673,-1.576783,-6.459713,-6.267356,7.383247,9.958389,-8.801705,9.133502,2.713636,4.913066,4.282477,-1.173940,-7.159514,1.243856,0.835634,-6.250395,5.243835,7.712281,-3.729975,-6.558456,0.799901,-1.450297,6.067081,7.113277,5.043203,-4.256725,-4.929989,-0.759399,-2.708506,2.833860,2.915405,5.934530,-5.771052,-4.136194,6.671963,-1.625117,-4.311032,-3.848133,-0.248929,-1.971770,-2.769352,-1.913553,-9.228412,-4.498889,-7.480672,-1.204079,6.732661,2.284237,9.583832,-0.884922,-1.793405,4.505270,3.883956,-6.824099,3.786998,9.351936,-1.451538,9.956379,-2.286808,8.441984,8.251578,-3.170613,5.217956,-7.748747,-8.035720,7.338407,8.126196,8.362232,-4.547248,9.258566,3.428158,-8.873556,-6.350724,-0.148989,0.478268,-4.309839,3.335599,8.189738,-4.922615,9.848494,5.966416,8.564939,5.329803,6.444874,-8.374599,-2.606119,-1.709497,7.800781,-4.172528,0.305950,6.034442,-4.523568,0.603122,-2.718676,2.555848,-8.159606,-7.953377,4.753291,-2.792747,-2.274818,9.595340,-1.206851,0.658627,0.690251,7.076188,8.623962,-8.953975,-4.177323,9.326264,9.676554,-9.521568,1.998323,3.446628,6.548489,-8.054756,-1.821227,-1.792441,7.269111,5.899143,9.418583,5.886973,1.287660,-8.960805,4.345302,-2.822211,-3.526828,-0.926776,-2.397537,-3.038787,-2.365781,4.756463,1.455068,3.331368], dtype = "float64")#candidate|2860|(3150,)|const|float64
call_2859 = relay.TupleGetItem(func_318_call(relay.reshape(const_2860.astype('float64'), [15, 14, 15]), relay.reshape(const_2851.astype('uint16'), []), ), 0)
call_2861 = relay.TupleGetItem(func_321_call(relay.reshape(const_2860.astype('float64'), [15, 14, 15]), relay.reshape(const_2851.astype('uint16'), []), ), 0)
func_318_call = mod.get_global_var('func_318')
func_321_call = mutated_mod.get_global_var('func_321')
call_2866 = relay.TupleGetItem(func_318_call(relay.reshape(const_2860.astype('float64'), [15, 14, 15]), relay.reshape(const_2851.astype('uint16'), []), ), 2)
call_2867 = relay.TupleGetItem(func_321_call(relay.reshape(const_2860.astype('float64'), [15, 14, 15]), relay.reshape(const_2851.astype('uint16'), []), ), 2)
output = relay.Tuple([call_2839,call_2845,const_2846,call_2850,const_2851,call_2859,const_2860,call_2866,])
output2 = relay.Tuple([call_2840,call_2847,const_2846,call_2852,const_2851,call_2861,const_2860,call_2867,])
func_2871 = relay.Function([], output)
mod['func_2871'] = func_2871
mod = relay.transform.InferType()(mod)
output = func_2871()
func_2872 = relay.Function([], output)
mutated_mod['func_2872'] = func_2872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2532_call = mod.get_global_var('func_2532')
func_2534_call = mutated_mod.get_global_var('func_2534')
call_2888 = relay.TupleGetItem(func_2532_call(), 0)
call_2889 = relay.TupleGetItem(func_2534_call(), 0)
output = call_2888
output2 = call_2889
func_2913 = relay.Function([], output)
mod['func_2913'] = func_2913
mod = relay.transform.InferType()(mod)
output = func_2913()
func_2914 = relay.Function([], output)
mutated_mod['func_2914'] = func_2914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2346_call = mod.get_global_var('func_2346')
func_2348_call = mutated_mod.get_global_var('func_2348')
call_2937 = relay.TupleGetItem(func_2346_call(), 0)
call_2938 = relay.TupleGetItem(func_2348_call(), 0)
uop_2963 = relay.sqrt(call_2937.astype('float32')) # shape=(2, 7, 3)
uop_2965 = relay.sqrt(call_2938.astype('float32')) # shape=(2, 7, 3)
output = uop_2963
output2 = uop_2965
func_2972 = relay.Function([], output)
mod['func_2972'] = func_2972
mod = relay.transform.InferType()(mod)
output = func_2972()
func_2973 = relay.Function([], output)
mutated_mod['func_2973'] = func_2973
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2988 = relay.var("var_2988", dtype = "float32", shape = (5, 7, 13))#candidate|2988|(5, 7, 13)|var|float32
uop_2989 = relay.erf(var_2988.astype('float32')) # shape=(5, 7, 13)
func_440_call = mod.get_global_var('func_440')
func_443_call = mutated_mod.get_global_var('func_443')
const_2995 = relay.const([5.036752,-0.981022,1.882961,-8.964611,4.028460,1.866774,9.004473,-4.162479,-6.833431,6.954410,-6.430094,-8.235763,-1.529943,6.454234,-0.852668,8.704483,-2.040772,9.838127,2.566552,-6.943236,0.427620,1.771018,-5.484381,1.698016,-5.981332,7.086613,-1.449738,6.060944,2.588101,0.109098,-9.563142,4.279986,-3.646834,-3.593008,-0.468529,-7.153033,-5.409280,-5.587617,-5.363393,-7.056668,-5.174221,2.119014,2.688421,8.467180,8.380200,3.224916,2.342241,-8.820797,2.190155,-3.597296,-6.083232,3.221639,-0.200666,1.714888,7.399701,4.293113,7.183074,8.365115,-4.393121,6.266220,0.240666,6.545743,-7.027556,-8.412888,-3.416975,7.817366,1.360352,-4.427007,3.690373,-8.255052,8.610579,-5.482535,9.629332,9.788296,4.831813,1.037043,4.912583,7.231775,5.687855,2.566234,-8.762952,-8.108816,-7.178189,8.311422,-3.795586,-0.576973,-9.823022,0.250875,-2.313089,4.522973,9.971189,-0.123566,9.872571,-2.793987,2.886152,-8.664815,1.271027,-5.323368,8.074122,2.168327,5.338308,5.527339,-1.594130,0.285154,-5.797586,-1.706679,-1.989832,-8.147339,0.074609,-9.851724,7.677630,-1.644482,0.718378,-1.318830,7.375268,-3.552586,3.206331,-8.433202,-3.188086,5.171624,-3.706688,0.323652,-9.033769,-7.623668,-6.222554,7.253173,5.137432,-4.611880,-6.437005,-0.751365,-6.222435,-1.831055,-6.599125,-8.327356,6.333215,3.447265,6.488126,-2.250900,1.725245,0.976941,5.913073,1.900504,6.588106,3.357391,-5.588177,3.641470,-4.929242,-1.477246,-1.642635,-7.604627,-2.405985,8.894203,-2.060674,-3.879304,-0.481186,1.792320,-7.117606,-3.452780,3.118041,1.256498,2.970065,-0.475789,-5.411728,0.589382,7.642317,-2.730022,6.401218,-0.756358,8.892787,8.631434,-4.605381,9.187635,6.500641,-0.747578,2.094448,-4.510684,-3.443924,3.667324,-4.899443,0.778626,-3.300099,4.620041,8.179514,1.377065,-0.025195,-7.777013,7.842862,7.986196,-4.471611,6.273067,6.896022,-1.475868,4.811580,8.378787,-1.032557,6.356204,-5.643478,6.982403,-3.189868,4.377271,0.346650,-9.362477,3.180298,-7.007765,8.785956,-8.220465,4.983931,0.189991,-4.122840,-3.566817,8.342880,2.377178,4.529139,-7.484125,0.833317,-2.093293,6.068604,5.477935,8.446504,-3.966738,-4.149505,0.106660,-5.960650,-9.484573], dtype = "float32")#candidate|2995|(224,)|const|float32
call_2994 = relay.TupleGetItem(func_440_call(relay.reshape(const_2995.astype('float32'), [14, 8, 2])), 1)
call_2996 = relay.TupleGetItem(func_443_call(relay.reshape(const_2995.astype('float32'), [14, 8, 2])), 1)
output = relay.Tuple([uop_2989,call_2994,const_2995,])
output2 = relay.Tuple([uop_2989,call_2996,const_2995,])
func_3012 = relay.Function([var_2988,], output)
mod['func_3012'] = func_3012
mod = relay.transform.InferType()(mod)
mutated_mod['func_3012'] = func_3012
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3013 = relay.var("var_3013", dtype = "float32", shape = (5, 7, 13))#candidate|3013|(5, 7, 13)|var|float32
func_3012_call = mutated_mod.get_global_var('func_3012')
call_3014 = func_3012_call(var_3013)
output = call_3014
func_3015 = relay.Function([var_3013], output)
mutated_mod['func_3015'] = func_3015
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3024 = relay.var("var_3024", dtype = "int8", shape = (4, 13, 8))#candidate|3024|(4, 13, 8)|var|int8
var_3025 = relay.var("var_3025", dtype = "int8", shape = (4, 13, 8))#candidate|3025|(4, 13, 8)|var|int8
bop_3026 = relay.less(var_3024.astype('bool'), relay.reshape(var_3025.astype('bool'), relay.shape_of(var_3024))) # shape=(4, 13, 8)
uop_3032 = relay.atanh(var_3025.astype('float32')) # shape=(4, 13, 8)
uop_3040 = relay.asinh(var_3024.astype('float32')) # shape=(4, 13, 8)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
const_3053 = relay.const([-6.665146,1.909332,-8.090025,-8.102278,7.080461,5.044689,-2.771559,-3.208924,8.450592,1.145165,-7.615313,-8.914813,5.062464,-4.628975,-0.767300,-0.442022,-0.978287,-6.620088,3.271521,4.869645,-5.445461,7.156859,-5.206080,3.540279,9.278193,-5.139484,-5.216049,4.973125,-8.640172,9.397313,0.664535,-8.120240,6.892149,3.162485,0.049843,7.617631,8.091691,7.808058,2.881649,7.077708,8.764309,-5.354272,-0.213766,3.183394,1.876377,4.509352,-0.495826,-5.731602,-4.239487,-1.563433,6.028042,-1.342351,-9.681544,-7.791255,-7.651575,5.160134,3.931727,-3.645792,9.647985,-0.654829,-6.032248,-3.949757,3.392613,-5.695318,-5.754375,-5.839498,-5.465453,-6.569868,-6.783661,-1.424233,1.253788,-9.237498,1.684274,-5.457598,-7.733057,1.316484,1.562130,2.214812,7.510712,-2.192631,-7.769446,0.541970,3.502331,-5.757019,-7.342558,9.209500,-9.741313,-6.863154,-4.886360,-7.374986,4.539411,9.795024,2.385010,-8.132176,-9.415095,-4.334603,4.072282,9.904269,-7.070036,-8.487725,9.991010,-3.250143,1.604300,6.136390,8.122855,-8.749684,-8.370111,6.642136,-6.448932,-3.070452,8.486507,6.608544,-6.088920,7.068750,-0.477692,6.725611,8.092503,4.402011,-3.398990,-7.566372,6.325959,-6.758784,-5.637132,5.749788,3.453116,1.038053,0.410581,2.496273,-7.221450,-9.612885,-7.246567,-3.193903,8.429931,-7.771474,-5.588746,6.847663,0.136766,0.980303,-1.611044,-3.235233,-0.178825,-8.602321,0.115190,1.565013,-0.705309,-1.287686,1.611454,6.854232,8.666957,-2.224949,-8.196203,1.172686,-0.466491,-0.949708,8.811767,-5.315605,-8.116943,0.659799,3.800525,5.079890,-6.552222,-9.672529,-0.649066,-0.063552,-0.918187,-1.887581,7.578125,-9.985511,-6.883285,-8.505722,-5.699542,-6.427316,5.286376,-8.944664,-3.757632,-9.068126,0.027135,2.602392,-9.563558,6.331087,-9.634995,-9.223818,8.134361,8.528995,2.457545,-0.273893,6.239893,-6.465801,-3.780230,6.570793,3.061689,-1.951964,-1.381142,-0.141605,3.272210,8.356026,7.702450,5.211529,8.513515,6.837605,-3.873161,-9.388362,-0.092417,-7.385516,6.633423,7.155178,-6.111438,0.460847,4.355234,4.390906,-2.325352,0.247994,-6.962214,-5.111776,8.164032,-6.883433,9.159087,3.443302,-3.490682,9.680735,5.928299,-6.092307,-4.130318,6.988498], dtype = "float32")#candidate|3053|(224,)|const|float32
call_3052 = relay.TupleGetItem(func_2510_call(relay.reshape(const_3053.astype('float32'), [224,])), 0)
call_3054 = relay.TupleGetItem(func_2512_call(relay.reshape(const_3053.astype('float32'), [224,])), 0)
func_2547_call = mod.get_global_var('func_2547')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_3070 = func_2547_call()
call_3071 = func_2547_call()
func_2406_call = mod.get_global_var('func_2406')
func_2408_call = mutated_mod.get_global_var('func_2408')
var_3077 = relay.var("var_3077", dtype = "bool", shape = (264,))#candidate|3077|(264,)|var|bool
call_3076 = func_2406_call(relay.reshape(var_3077.astype('bool'), [2, 12, 11]))
call_3078 = func_2406_call(relay.reshape(var_3077.astype('bool'), [2, 12, 11]))
func_2747_call = mod.get_global_var('func_2747')
func_2751_call = mutated_mod.get_global_var('func_2751')
const_3085 = relay.const([[-7.155023,-0.092183,-8.357103,7.272098,-4.570885,1.464494,-5.819873,7.470046,-1.407744,6.494689,8.379578,-4.806203,1.585870,-4.958492,7.459253,-4.612181,0.251737,-9.202857,-1.345890,0.711125,0.279527,-6.073976,-3.242006,4.891317,-0.839791,-8.313643,-8.640813,1.787255,-9.758991,-2.304804,-5.669549,-4.989094,0.395923,5.072734,-8.367580,-6.733272,1.990091,5.491960,-0.538234,-4.025651,6.735122,6.839231,8.310471,9.411476,-6.287127,-9.050270,-9.235071,-3.469546,1.233139,-4.733989,-2.209735,1.795614,1.816587,9.219918,5.670988,-3.144897,-8.580251,4.344597,7.884306,-8.125910,-6.186086,-6.547316,6.729101,-9.609907,-8.046204,-3.153244,1.419694,2.569911,-8.238305,1.091093,-4.414111,0.213221,7.315026,1.301632,7.449743,-9.316525,-2.663900,6.361619,1.545981,-4.519032,-9.675701,-6.224948,-2.633223,-4.748283,-9.245407,2.685116,-2.489375,6.441146,4.721782,-8.503555,-2.838794,-8.302864,0.896659,-1.595260,9.941623,-6.996123,7.460773,6.707508,-7.216653,4.952798,4.405954,-6.870038,6.370921,7.591541,-3.698117,4.210644,-8.996200,2.623874,3.996142,-0.487770,-9.714304,-6.205247,7.263837,6.275394,-3.059954,-6.621243,2.719136,2.613770,7.920163,5.665795],[-8.940315,-9.413641,-4.107527,-9.739677,-2.201415,-6.922218,1.328259,-7.033640,7.448680,3.990359,-5.566129,9.189248,-2.622479,-8.382726,-5.323187,9.022167,4.782851,9.197469,8.083847,0.669498,0.355210,-1.737141,8.044919,0.974902,-2.219403,-4.523857,3.512637,5.615790,-7.373559,8.483573,9.692099,5.106468,-3.340355,3.040765,-7.976880,4.026431,-4.943052,-8.699212,4.616909,-7.861077,-6.054499,-4.562254,3.346113,1.026700,-1.692325,-1.702129,1.504145,-2.802456,-4.511154,9.690368,-0.162199,-1.529192,-7.944289,-1.958712,8.762000,-5.939088,2.189024,9.628324,-1.775879,-6.472760,5.755415,-7.242200,-4.444897,-8.002894,-2.340715,3.856101,9.067021,-1.392472,6.976828,5.562575,5.815866,-3.996153,-9.744369,4.814543,0.524606,2.505195,-3.755550,4.315740,-4.350913,-6.221554,-2.956738,-1.864599,1.888897,2.896124,4.542629,8.949391,-7.980668,-7.820802,9.268256,5.900307,7.060339,9.403309,2.875197,9.704965,0.416876,-0.087986,1.627245,8.338881,5.948401,3.082074,8.611922,-6.873380,8.459834,-2.603496,-5.558356,1.524473,9.818983,-3.825619,2.682918,-2.626280,9.062213,-6.098442,3.400950,3.621796,2.434733,-2.761751,-7.149630,-8.125594,8.726917,-4.513675],[7.454061,4.865046,4.685183,8.622236,4.618595,6.614202,-5.030182,-0.563902,7.409093,5.295288,-7.983653,0.216612,-1.922967,-7.748221,-6.289226,1.165079,-8.161389,-0.842336,-1.177296,7.152744,-1.700219,-3.186088,-0.212767,-7.856848,7.546131,-9.581382,0.723490,-9.405377,-5.006940,8.600341,5.699247,-8.210392,-9.790651,5.480570,-4.821517,-0.221561,8.084711,1.645243,8.789254,0.656181,0.075472,1.548386,5.150871,-1.747924,-0.626582,2.074550,1.171695,-8.378080,-9.893952,-3.830764,-1.979620,2.870997,-6.584304,4.274244,9.377415,-9.105124,4.836592,6.449560,6.952902,-0.571210,-0.558822,8.637158,4.603172,5.063946,-0.830960,-0.411234,-8.796603,-7.343148,-0.513916,9.568669,6.624946,0.415485,1.443033,2.778278,-0.802296,-9.681222,5.530314,-2.017551,5.921113,0.689773,-5.009330,-9.564845,6.347653,1.090854,3.923551,6.762227,-5.424986,8.206679,-9.569021,-8.574584,-5.643531,3.106961,-1.553433,-6.414079,2.764488,6.344588,0.780901,-5.472400,5.585123,-9.793937,-5.993865,1.424362,-8.067572,-1.122771,6.098957,-4.280875,-7.181636,-5.803692,1.691409,-3.219334,-3.992715,-1.417544,-3.914688,-6.001403,-6.028190,-6.753082,1.726490,9.003529,-5.475325,-9.937517],[-6.883903,4.449289,-7.689024,-1.183945,-1.734231,-8.137314,-7.304080,-0.400181,8.368274,-2.248875,8.591306,5.253575,-7.134037,4.921595,-1.816692,7.670961,-2.733452,8.588907,-2.019234,-9.707523,7.977583,4.564228,-7.663089,-1.706856,-1.295331,1.381376,8.213736,-4.777237,-7.165973,-5.070200,4.186634,2.688265,-2.783242,-1.705480,-2.164968,4.065103,2.228690,-5.012382,-9.351668,-9.689797,7.551244,-1.179494,-9.960342,3.676780,-9.873940,1.799002,9.422137,2.316253,-1.877878,-6.876102,3.413259,-9.738347,-3.166401,-6.273015,6.265359,8.405888,-6.539195,7.732998,8.031457,9.198513,-3.232346,7.907483,-6.326558,4.269344,3.143204,2.870333,0.849776,6.069678,-9.536449,-8.837227,-0.065238,3.540442,2.101171,0.181053,6.480600,0.942467,-0.688542,0.649520,0.450895,1.227832,-0.632508,8.676227,-3.655775,0.368062,-8.814906,-5.871047,9.103675,-8.210641,-8.337692,7.141352,-8.489004,0.204264,-1.035045,3.942352,0.249453,-4.092875,-9.025873,5.651629,-9.579762,3.968026,-9.484452,-9.486707,4.851549,-7.193882,-0.794496,4.595201,-4.637965,0.795245,9.997851,2.342614,2.259587,-9.351477,0.740339,-8.707391,-5.715264,8.368390,5.686371,6.723448,-6.690582,-2.379081]], dtype = "float32")#candidate|3085|(4, 120)|const|float32
const_3086 = relay.const(-9, dtype = "uint16")#candidate|3086|()|const|uint16
var_3087 = relay.var("var_3087", dtype = "float64", shape = (3, 60))#candidate|3087|(3, 60)|var|float64
call_3084 = relay.TupleGetItem(func_2747_call(relay.reshape(const_3085.astype('float32'), [480,]), relay.reshape(const_3086.astype('uint16'), []), relay.reshape(var_3087.astype('float64'), [180,]), ), 1)
call_3088 = relay.TupleGetItem(func_2751_call(relay.reshape(const_3085.astype('float32'), [480,]), relay.reshape(const_3086.astype('uint16'), []), relay.reshape(var_3087.astype('float64'), [180,]), ), 1)
output = relay.Tuple([bop_3026,uop_3032,uop_3040,call_3052,const_3053,call_3070,call_3076,var_3077,call_3084,const_3085,const_3086,var_3087,])
output2 = relay.Tuple([bop_3026,uop_3032,uop_3040,call_3054,const_3053,call_3071,call_3078,var_3077,call_3088,const_3085,const_3086,var_3087,])
func_3090 = relay.Function([var_3024,var_3025,var_3077,var_3087,], output)
mod['func_3090'] = func_3090
mod = relay.transform.InferType()(mod)
var_3091 = relay.var("var_3091", dtype = "int8", shape = (4, 13, 8))#candidate|3091|(4, 13, 8)|var|int8
var_3092 = relay.var("var_3092", dtype = "int8", shape = (4, 13, 8))#candidate|3092|(4, 13, 8)|var|int8
var_3093 = relay.var("var_3093", dtype = "bool", shape = (264,))#candidate|3093|(264,)|var|bool
var_3094 = relay.var("var_3094", dtype = "float64", shape = (3, 60))#candidate|3094|(3, 60)|var|float64
output = func_3090(var_3091,var_3092,var_3093,var_3094,)
func_3095 = relay.Function([var_3091,var_3092,var_3093,var_3094,], output)
mutated_mod['func_3095'] = func_3095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2547_call = mod.get_global_var('func_2547')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_3100 = func_2547_call()
call_3101 = func_2547_call()
uop_3106 = relay.log2(call_3100.astype('float64')) # shape=(2, 7, 3)
uop_3108 = relay.log2(call_3101.astype('float64')) # shape=(2, 7, 3)
func_2547_call = mod.get_global_var('func_2547')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_3118 = func_2547_call()
call_3119 = func_2547_call()
bop_3145 = relay.mod(call_3100.astype('float64'), relay.reshape(uop_3106.astype('float64'), relay.shape_of(call_3100))) # shape=(2, 7, 3)
bop_3148 = relay.mod(call_3101.astype('float64'), relay.reshape(uop_3108.astype('float64'), relay.shape_of(call_3101))) # shape=(2, 7, 3)
output = relay.Tuple([call_3118,bop_3145,])
output2 = relay.Tuple([call_3119,bop_3148,])
func_3152 = relay.Function([], output)
mod['func_3152'] = func_3152
mod = relay.transform.InferType()(mod)
mutated_mod['func_3152'] = func_3152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3152_call = mutated_mod.get_global_var('func_3152')
call_3153 = func_3152_call()
output = call_3153
func_3154 = relay.Function([], output)
mutated_mod['func_3154'] = func_3154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2521_call = mod.get_global_var('func_2521')
func_2522_call = mutated_mod.get_global_var('func_2522')
call_3157 = func_2521_call()
call_3158 = func_2521_call()
func_2913_call = mod.get_global_var('func_2913')
func_2914_call = mutated_mod.get_global_var('func_2914')
call_3159 = func_2913_call()
call_3160 = func_2913_call()
func_3152_call = mod.get_global_var('func_3152')
func_3154_call = mutated_mod.get_global_var('func_3154')
call_3163 = relay.TupleGetItem(func_3152_call(), 0)
call_3164 = relay.TupleGetItem(func_3154_call(), 0)
bop_3173 = relay.minimum(call_3159.astype('int16'), relay.reshape(call_3157.astype('int16'), relay.shape_of(call_3159))) # shape=(2, 7, 3)
bop_3176 = relay.minimum(call_3160.astype('int16'), relay.reshape(call_3158.astype('int16'), relay.shape_of(call_3160))) # shape=(2, 7, 3)
func_2230_call = mod.get_global_var('func_2230')
func_2231_call = mutated_mod.get_global_var('func_2231')
call_3180 = relay.TupleGetItem(func_2230_call(), 0)
call_3181 = relay.TupleGetItem(func_2231_call(), 0)
output = relay.Tuple([call_3163,bop_3173,call_3180,])
output2 = relay.Tuple([call_3164,bop_3176,call_3181,])
func_3186 = relay.Function([], output)
mod['func_3186'] = func_3186
mod = relay.transform.InferType()(mod)
output = func_3186()
func_3187 = relay.Function([], output)
mutated_mod['func_3187'] = func_3187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3186_call = mod.get_global_var('func_3186')
func_3187_call = mutated_mod.get_global_var('func_3187')
call_3254 = relay.TupleGetItem(func_3186_call(), 1)
call_3255 = relay.TupleGetItem(func_3187_call(), 1)
var_3256 = relay.var("var_3256", dtype = "int16", shape = (2, 7, 3))#candidate|3256|(2, 7, 3)|var|int16
bop_3257 = relay.logical_and(call_3254.astype('bool'), relay.reshape(var_3256.astype('bool'), relay.shape_of(call_3254))) # shape=(2, 7, 3)
bop_3260 = relay.logical_and(call_3255.astype('bool'), relay.reshape(var_3256.astype('bool'), relay.shape_of(call_3255))) # shape=(2, 7, 3)
bop_3265 = relay.left_shift(var_3256.astype('uint8'), relay.reshape(call_3254.astype('uint8'), relay.shape_of(var_3256))) # shape=(2, 7, 3)
bop_3268 = relay.left_shift(var_3256.astype('uint8'), relay.reshape(call_3255.astype('uint8'), relay.shape_of(var_3256))) # shape=(2, 7, 3)
output = relay.Tuple([bop_3257,bop_3265,])
output2 = relay.Tuple([bop_3260,bop_3268,])
func_3275 = relay.Function([var_3256,], output)
mod['func_3275'] = func_3275
mod = relay.transform.InferType()(mod)
mutated_mod['func_3275'] = func_3275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3276 = relay.var("var_3276", dtype = "int16", shape = (2, 7, 3))#candidate|3276|(2, 7, 3)|var|int16
func_3275_call = mutated_mod.get_global_var('func_3275')
call_3277 = func_3275_call(var_3276)
output = call_3277
func_3278 = relay.Function([var_3276], output)
mutated_mod['func_3278'] = func_3278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2913_call = mod.get_global_var('func_2913')
func_2914_call = mutated_mod.get_global_var('func_2914')
call_3280 = func_2913_call()
call_3281 = func_2913_call()
uop_3284 = relay.sin(call_3280.astype('float32')) # shape=(2, 7, 3)
uop_3286 = relay.sin(call_3281.astype('float32')) # shape=(2, 7, 3)
func_2913_call = mod.get_global_var('func_2913')
func_2914_call = mutated_mod.get_global_var('func_2914')
call_3288 = func_2913_call()
call_3289 = func_2913_call()
output = relay.Tuple([uop_3284,call_3288,])
output2 = relay.Tuple([uop_3286,call_3289,])
func_3291 = relay.Function([], output)
mod['func_3291'] = func_3291
mod = relay.transform.InferType()(mod)
output = func_3291()
func_3292 = relay.Function([], output)
mutated_mod['func_3292'] = func_3292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2521_call = mod.get_global_var('func_2521')
func_2522_call = mutated_mod.get_global_var('func_2522')
call_3299 = func_2521_call()
call_3300 = func_2521_call()
var_3321 = relay.var("var_3321", dtype = "float32", shape = (2, 7, 3))#candidate|3321|(2, 7, 3)|var|float32
bop_3322 = relay.floor_mod(call_3299.astype('float32'), relay.reshape(var_3321.astype('float32'), relay.shape_of(call_3299))) # shape=(2, 7, 3)
bop_3325 = relay.floor_mod(call_3300.astype('float32'), relay.reshape(var_3321.astype('float32'), relay.shape_of(call_3300))) # shape=(2, 7, 3)
output = bop_3322
output2 = bop_3325
func_3328 = relay.Function([var_3321,], output)
mod['func_3328'] = func_3328
mod = relay.transform.InferType()(mod)
mutated_mod['func_3328'] = func_3328
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3329 = relay.var("var_3329", dtype = "float32", shape = (2, 7, 3))#candidate|3329|(2, 7, 3)|var|float32
func_3328_call = mutated_mod.get_global_var('func_3328')
call_3330 = func_3328_call(var_3329)
output = call_3330
func_3331 = relay.Function([var_3329], output)
mutated_mod['func_3331'] = func_3331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2230_call = mod.get_global_var('func_2230')
func_2231_call = mutated_mod.get_global_var('func_2231')
call_3344 = relay.TupleGetItem(func_2230_call(), 0)
call_3345 = relay.TupleGetItem(func_2231_call(), 0)
var_3372 = relay.var("var_3372", dtype = "float32", shape = (2, 7, 3))#candidate|3372|(2, 7, 3)|var|float32
bop_3373 = relay.greater_equal(call_3344.astype('bool'), relay.reshape(var_3372.astype('bool'), relay.shape_of(call_3344))) # shape=(2, 7, 3)
bop_3376 = relay.greater_equal(call_3345.astype('bool'), relay.reshape(var_3372.astype('bool'), relay.shape_of(call_3345))) # shape=(2, 7, 3)
func_1020_call = mod.get_global_var('func_1020')
func_1024_call = mutated_mod.get_global_var('func_1024')
var_3378 = relay.var("var_3378", dtype = "uint8", shape = (143,))#candidate|3378|(143,)|var|uint8
const_3379 = relay.const([[-5,5,2,-1,-9,-9,9,-3,-2,-4,8,-1,-9,9,-10,-3,3,-3,10,-7,-8,-5,8,4,10,6,-9,-5,7,-2,3,3,5,-1,10,5,-8,7,-8,-3,-8,-6,-7,9,3,2,9,3,1,-9,4,9,2,-6,-8,9,-2,-4,6,-5,-7,8,-2,7,5,-2,-8,10,10,2,-9,-5,8,9,5,4,1,-5,2,-6,-10,5,1,9,5,9,-4,2,6,-5,-7,2,-2,-1,-2,1,-5,-9,-4,-8,-2,3,-3,-6,-8,1,-4,1,1,8,7,5,-8,8,5,-2,-5,2,10,9,1,-1,-5,8,-4,-1,-8,5,-3,9,-1,6,4,5,6,-1,-6,-1,-7,-6,9,-4,-6,-4,-5,8,4,1,-1,-3,2,5,6,-8,-7,4,4,3,-10,-10,10,1,3,3,2,-3,7,2,-4,-8,7,-6,-1,-10,8,8,-9,3,2,-7,9,9,-8,3,3,10,3,-10,7,-9,-1,2,-5,3,-10,-4,-10,6,5,-7,-1,8,-5,10,10,6,4,1,-4,1,-5,-2,9,3,7,4,-7,10,3,-5,-9,2,10,5,10,-7,-2,-1,6,8,-2,-9,-7,4,-1,10,-1,-5,10,6,-7,-8,-1,-1,3,-10,2,-5,-10,-8,7,1,4,8,6,-5,-6,-4,-2,-5,4,1,5,-6,6,-8,-4,10,4,4,-3,-7,-4,7,5,10,-7,5,6,7,-5,-6,3,-9,-5,1,1,-8,-6,-10,4,10,10,3,7,9,-6,-1,10,-10,-2,-4,8,8,6,-4,-8,2,-10,-6,-9,-8,-10,6,8,7,-6,3,-1,-9,-8,7,-7,-4,8,-3,4,1,-10,-6,-2,10,-1,3,5,1,5,9,-1,-1,2,-3,7,2,1,-8,10,5,3,5,10,-9,-6,-8,-1,3,5,2,1,1,-4,7,9,7,-9,-9,-10,5,9,10,-4,-5,-10,3,3,-5,3,2,3,-3,4,3,-2,-10,4,1,5,-9,3,8,5,4,3,-7,9,-1,2,7,-2,5,6,-8,-3,8,10,-3,-9,-1,7,1,10,9,3,7,2,5,-9,-9,-1,-10,2,6,-4,-6,-8,7,6,-1,-1,-8,10,10,-6,6,7,10,3,3,-4,-8,-3,-8,2,-1,8,3,3,-1,-4,8,-5,1,4,-5,2,-9,-10,-5,6,5,-5,4,-4,9,-2,-7,3,2,1,-6,-1,-7,1,3,-10,-5,-9,-5,4,8,8,4,3,-1,-3,5,-1,9,6,3,-2,-1,9,-1,7,-10,5,8,-10,-2,7,1,2,4,-1,2,-7,-4,8,-9,5,9,3,-9,10,8,-9,-7,-6,-8,10,-2,-4,3,-2,-6,4,-8,-5,-10,8,-2,6,7,2,2,-9,1,1,-5,8,1,-5,1,-5,4,-10,10,6,1,-7,10,-7,7,-6,-10,-4,-8,-1,-10,1,-2,10,8,-1,4,2,-2,-8,5,-3,-8,-10,-7,-7,-9,-9,-1,3,7,-10,10,8,9,2,7,10,2,6,-1,6,-3,-9,6,-8,5,-5,-10,-8,-6,-4,8,2,4,-1,3,6,-4,4,8,2,-10,10,-9,-8,1,-10,5,-10,10,-5,9,-10,-8,-3,-4,10,4,-3,-8,-8,10,7,9,-6,7,1,5,-10,-6,9,-8,4,-1,-4,10,8,-9,-5,2,-7,-3,6,-10,10,9,-5,-8,-10,-10,8,4,9,-2,-2,-6,-3,7,-8,6,-2,7,4,8,6,6,-5,-3,6,9,-10,-6,7,-4,8,-2,7,-8,9,-2,-4,-3,1,-3,1,-4,8,-4,3,9,8,-4,5,3,-9,-10,-5,2,-9,4,5,-1,-8,-8,-2,4,10,-4,-9,-8,-6,-1,-1,7,-6,-8,-9,-5,-3,-9,2,5,-1,-7,-8,1,3,-4,-3,-2,4,-3,2,-1,3,-10,-5,-4,-7,-7,8,-8,-9,3,5,-2,-9,1,3,6,4,-10,4,5,7,-6,-9,-3,-1,10,-6,-5,9,6,-10,7,-2,-2,1,8,9,-2,-10,-9,-3,-7,3,-6,9,-4,6,-2,-8,-5,-2,-8,6,-1,5,9,1,9,-9,-8,-6,-9,6,3,8,5,-8,2,3,2,5,7,9,-2,10,-9,4,1,9,-4,-1,-8,-1,4,-8,-1,-10,-1,-6,-9,4,-5,6,-6,1,4,8,2,4,3,-4,7,5,-7,2,7,2,4,-1,4,2,-3,-10,10,-3,-8,-7,3,2,3,5,-1,6,-6,-8,9,8,10,7,6,3,8,-8,4,-10,5,10,4,-1,-3,1,-9,-3,1,-1,1,10,5,-10,-9,7,8,9,-1,2,-9,5,-4,-9,8,9,-3,9,-8,-7,1,-10,-1,-1,-7,-6,6,4,-10,4,-4,-7,3,-5,7,7,-7,-5,3,-1,-8,9,-8,3,-8,8,-1,9,3,6,-7,7,9,-4,-7,5,2,9,-6,10,3,-6,-4,-10,-8,-6,1,-2,-5,-3,9,-10,-1,-3,-3,-1,-2,1,-1,-3,-9,-5,-4,3,3,-4,5,5,2,2,-2,4,-9,10,-7,-8,-1,9,4,-5,-9,1,-2,9,-6,-1,-4,-4,9,-3,-4,3,8,1,5,6,6,7,6,3,-6,4,-7,-5,10,-3,10,2,-1,7,2,1,3,-5,3,-4,-2,1,5,-8,-3,-3,-10,-9,1,-8,-1,10,-6,-2,-5,-9,5,8,7,8,8,5,6,10,1,-10,-4,6,-5,10,7,7,-3,-1,-1,-2,-10,-9,-2,6,7,-8,6,3,-4,-3,4,10,-5,8,2,8,-9,-10,6,-8,2,3,10,9,-9,-5,-2,-8,10,4,-10,-3,1,-3,9,-7,-7,-7,6,-3,8,-8,4,9,4,5,-8,-2,-4,-6,-6,4,-5,2,-8,-8,4,-9,2,4,3,-9,-2,10,7,10,8,7,-6,-7,-6,3,9,-2,-1,-6,-10,5,-7,9,-2,-7,3,-6,-5,-3,5,2,-7,-6,3,-3,8,-6,-5,-1,1,7,-4,-3,3,-9,-2,-4,-9,7,4,-6,8,-1,4,9,-2,1,9,-4,-10,5,-7,-10,1,10,-9,-10,-8,-1,-5,-10,-9,4,3,-4,-2,-6,8,-7,5,-6,2,5,-1,2,9,2,1,9,3,-8,2,5,-9,-1,-8,3,7,9,4,-1,-5,2,10,-1,-7,-7,4,9,2,2,-8,-1,-10,-10,-4,-7,5,-5,3,7,9,-8,-8,8,8,-2,-4,-1,3,-9,4,6,-5,6,8,-7,9,-10,2,-7,-8,7,9,-4,-1,9,-9,5,-3,4,-4,8,8,-8,-4,3,3,-3,7,-3,2,-4,-7,5,-1,3,1,9,-7,-2,-4,-4,6,-9,7,-3,-6,-10,-7,-4,7,4,-7,9,-3,-9,-7,-8,-2,-8,-1,-10,8,-1,-6,-5,-10,-2,5,-3,4,7,-4,-6,2,-7,-5,-1,6,1,-4,-4,-5,-1,8,9,7,5,3,-10,-7,7,2,8,7,-10,4,-5,-2,9,10,2,-6,-9,-10,1,5,-1,5,5,-7,-4,10,-1,-4,2,8,3,3,-2,-4,2,2,-6,-1,10,-7,10,-2,10,1,3,-8,-5,2,-5,10,-4,1,9,3,1,-6,7,-1,-5,9,-2,-6,-9,4,-5,-1,5,10,-3,7,-1,4,8,-5,8,3,-2,-8,-9,6,5,4,-9,-7,-7,6,-5,8,-6,10,-6,5,-2,-10]], dtype = "uint8")#candidate|3379|(1, 1430)|const|uint8
call_3377 = func_1020_call(relay.reshape(var_3378.astype('uint8'), [1, 13, 11]), relay.reshape(const_3379.astype('uint8'), [10, 13, 11]), )
call_3380 = func_1020_call(relay.reshape(var_3378.astype('uint8'), [1, 13, 11]), relay.reshape(const_3379.astype('uint8'), [10, 13, 11]), )
bop_3404 = relay.bitwise_and(call_3344.astype('uint64'), relay.reshape(var_3372.astype('uint64'), relay.shape_of(call_3344))) # shape=(2, 7, 3)
bop_3407 = relay.bitwise_and(call_3345.astype('uint64'), relay.reshape(var_3372.astype('uint64'), relay.shape_of(call_3345))) # shape=(2, 7, 3)
output = relay.Tuple([bop_3373,call_3377,var_3378,const_3379,bop_3404,])
output2 = relay.Tuple([bop_3376,call_3380,var_3378,const_3379,bop_3407,])
func_3426 = relay.Function([var_3372,var_3378,], output)
mod['func_3426'] = func_3426
mod = relay.transform.InferType()(mod)
mutated_mod['func_3426'] = func_3426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3426_call = mutated_mod.get_global_var('func_3426')
var_3428 = relay.var("var_3428", dtype = "float32", shape = (2, 7, 3))#candidate|3428|(2, 7, 3)|var|float32
var_3429 = relay.var("var_3429", dtype = "uint8", shape = (143,))#candidate|3429|(143,)|var|uint8
call_3427 = func_3426_call(var_3428,var_3429,)
output = call_3427
func_3430 = relay.Function([var_3428,var_3429,], output)
mutated_mod['func_3430'] = func_3430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3186_call = mod.get_global_var('func_3186')
func_3187_call = mutated_mod.get_global_var('func_3187')
call_3438 = relay.TupleGetItem(func_3186_call(), 1)
call_3439 = relay.TupleGetItem(func_3187_call(), 1)
func_2813_call = mod.get_global_var('func_2813')
func_2815_call = mutated_mod.get_global_var('func_2815')
var_3451 = relay.var("var_3451", dtype = "bool", shape = (264,))#candidate|3451|(264,)|var|bool
call_3450 = relay.TupleGetItem(func_2813_call(relay.reshape(var_3451.astype('bool'), [264,])), 2)
call_3452 = relay.TupleGetItem(func_2815_call(relay.reshape(var_3451.astype('bool'), [264,])), 2)
output = relay.Tuple([call_3438,call_3450,var_3451,])
output2 = relay.Tuple([call_3439,call_3452,var_3451,])
func_3455 = relay.Function([var_3451,], output)
mod['func_3455'] = func_3455
mod = relay.transform.InferType()(mod)
mutated_mod['func_3455'] = func_3455
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3456 = relay.var("var_3456", dtype = "bool", shape = (264,))#candidate|3456|(264,)|var|bool
func_3455_call = mutated_mod.get_global_var('func_3455')
call_3457 = func_3455_call(var_3456)
output = call_3457
func_3458 = relay.Function([var_3456], output)
mutated_mod['func_3458'] = func_3458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2913_call = mod.get_global_var('func_2913')
func_2914_call = mutated_mod.get_global_var('func_2914')
call_3674 = func_2913_call()
call_3675 = func_2913_call()
func_551_call = mod.get_global_var('func_551')
func_554_call = mutated_mod.get_global_var('func_554')
var_3694 = relay.var("var_3694", dtype = "uint64", shape = (1800,))#candidate|3694|(1800,)|var|uint64
call_3693 = relay.TupleGetItem(func_551_call(relay.reshape(var_3694.astype('uint64'), [10, 15, 12])), 0)
call_3695 = relay.TupleGetItem(func_554_call(relay.reshape(var_3694.astype('uint64'), [10, 15, 12])), 0)
output = relay.Tuple([call_3674,call_3693,var_3694,])
output2 = relay.Tuple([call_3675,call_3695,var_3694,])
func_3701 = relay.Function([var_3694,], output)
mod['func_3701'] = func_3701
mod = relay.transform.InferType()(mod)
var_3702 = relay.var("var_3702", dtype = "uint64", shape = (1800,))#candidate|3702|(1800,)|var|uint64
output = func_3701(var_3702)
func_3703 = relay.Function([var_3702], output)
mutated_mod['func_3703'] = func_3703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2913_call = mod.get_global_var('func_2913')
func_2914_call = mutated_mod.get_global_var('func_2914')
call_3723 = func_2913_call()
call_3724 = func_2913_call()
func_2588_call = mod.get_global_var('func_2588')
func_2589_call = mutated_mod.get_global_var('func_2589')
call_3729 = relay.TupleGetItem(func_2588_call(), 0)
call_3730 = relay.TupleGetItem(func_2589_call(), 0)
uop_3747 = relay.asin(call_3723.astype('float64')) # shape=(2, 7, 3)
uop_3749 = relay.asin(call_3724.astype('float64')) # shape=(2, 7, 3)
bop_3753 = relay.greater(call_3723.astype('bool'), relay.reshape(uop_3747.astype('bool'), relay.shape_of(call_3723))) # shape=(2, 7, 3)
bop_3756 = relay.greater(call_3724.astype('bool'), relay.reshape(uop_3749.astype('bool'), relay.shape_of(call_3724))) # shape=(2, 7, 3)
bop_3766 = relay.subtract(call_3723.astype('int8'), relay.reshape(uop_3747.astype('int8'), relay.shape_of(call_3723))) # shape=(2, 7, 3)
bop_3769 = relay.subtract(call_3724.astype('int8'), relay.reshape(uop_3749.astype('int8'), relay.shape_of(call_3724))) # shape=(2, 7, 3)
output = relay.Tuple([call_3729,bop_3753,bop_3766,])
output2 = relay.Tuple([call_3730,bop_3756,bop_3769,])
func_3782 = relay.Function([], output)
mod['func_3782'] = func_3782
mod = relay.transform.InferType()(mod)
mutated_mod['func_3782'] = func_3782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3782_call = mutated_mod.get_global_var('func_3782')
call_3783 = func_3782_call()
output = call_3783
func_3784 = relay.Function([], output)
mutated_mod['func_3784'] = func_3784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3152_call = mod.get_global_var('func_3152')
func_3154_call = mutated_mod.get_global_var('func_3154')
call_3828 = relay.TupleGetItem(func_3152_call(), 1)
call_3829 = relay.TupleGetItem(func_3154_call(), 1)
func_3186_call = mod.get_global_var('func_3186')
func_3187_call = mutated_mod.get_global_var('func_3187')
call_3833 = relay.TupleGetItem(func_3186_call(), 2)
call_3834 = relay.TupleGetItem(func_3187_call(), 2)
output = relay.Tuple([call_3828,call_3833,])
output2 = relay.Tuple([call_3829,call_3834,])
func_3842 = relay.Function([], output)
mod['func_3842'] = func_3842
mod = relay.transform.InferType()(mod)
mutated_mod['func_3842'] = func_3842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3842_call = mutated_mod.get_global_var('func_3842')
call_3843 = func_3842_call()
output = call_3843
func_3844 = relay.Function([], output)
mutated_mod['func_3844'] = func_3844
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3845 = relay.var("var_3845", dtype = "float64", shape = (12, 2))#candidate|3845|(12, 2)|var|float64
const_3846 = relay.const([[7.332112,-1.494363],[8.072246,-2.978622],[0.054775,3.514986],[0.905193,4.173179],[1.483832,1.825638],[-6.793124,-1.871721],[-0.124303,1.015704],[8.166040,3.993805],[-1.517140,-5.797642],[2.136435,-7.252678],[2.248660,-4.606902],[7.819243,1.179141]], dtype = "float64")#candidate|3846|(12, 2)|const|float64
bop_3847 = relay.power(var_3845.astype('float64'), relay.reshape(const_3846.astype('float64'), relay.shape_of(var_3845))) # shape=(12, 2)
output = relay.Tuple([bop_3847,])
output2 = relay.Tuple([bop_3847,])
func_3862 = relay.Function([var_3845,], output)
mod['func_3862'] = func_3862
mod = relay.transform.InferType()(mod)
mutated_mod['func_3862'] = func_3862
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3863 = relay.var("var_3863", dtype = "float64", shape = (12, 2))#candidate|3863|(12, 2)|var|float64
func_3862_call = mutated_mod.get_global_var('func_3862')
call_3864 = func_3862_call(var_3863)
output = call_3864
func_3865 = relay.Function([var_3863], output)
mutated_mod['func_3865'] = func_3865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2547_call = mod.get_global_var('func_2547')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_3914 = func_2547_call()
call_3915 = func_2547_call()
func_2182_call = mod.get_global_var('func_2182')
func_2185_call = mutated_mod.get_global_var('func_2185')
const_3934 = relay.const([[-8.063328,8.921892],[-3.088969,-0.448442],[-9.485139,-6.054665],[0.640308,-9.806663],[7.281088,5.701569],[-7.483194,-5.233759],[1.753722,7.268089],[-4.493111,-7.495594],[-3.750487,9.482656],[9.103207,4.979997],[6.852493,4.315753],[-8.017845,7.229265],[5.234987,-3.748561],[3.469515,0.631576],[-5.002090,6.207755],[-4.515743,-5.239702],[2.701927,9.036122],[0.328751,8.335279],[6.070571,0.026424],[-6.337700,6.757651],[3.591376,4.883804],[-2.799242,4.044579],[-8.955049,6.798442],[-9.287680,9.621326],[-8.366057,-1.145554],[5.587512,-7.373535],[-0.658907,-7.173191],[-0.158423,-2.654105],[-1.858606,4.005206],[2.231607,6.164783],[3.116599,-1.428490],[-3.884054,7.250460],[-8.614511,-1.162570],[3.016315,-6.112709],[-2.920191,-5.640496],[-0.965461,-1.412300],[1.209317,5.553957],[-9.606881,-4.583256],[-4.332545,-2.077263],[-0.257277,2.390605],[8.832920,-9.288398],[-8.853214,0.112850],[-8.348489,-4.589109],[-4.325022,6.049250],[-8.943925,-5.441285],[6.841901,-8.065791],[0.851728,5.521864],[-9.281388,9.716600],[-1.340524,2.373680],[-4.253676,-8.877020],[-1.963244,-7.850996],[0.440903,-3.175659],[-2.577537,6.337944],[3.092017,9.423410],[-5.041809,-7.388601],[4.999236,-8.742733],[-5.133293,6.382534],[-4.716601,3.450261],[-0.846119,-2.879479],[7.970153,9.496561],[1.969747,3.300490],[-0.278815,-5.631917],[7.993960,3.894679],[-6.287574,8.053927],[2.114385,7.383616],[-7.252655,8.848027],[-0.818206,-9.662935],[-4.423391,-8.232867],[-4.609376,0.968035],[-8.040611,7.104924],[-3.111165,3.599135],[9.519108,4.454597],[2.682914,-3.166682],[5.890962,-9.867827],[3.707289,1.861862],[-3.625926,-7.446979],[-4.452191,8.500708],[8.782560,-8.843478],[4.477698,-5.345861],[-5.384126,-3.517308],[-6.300134,3.661929],[-9.889713,-2.939883],[1.822000,3.228987],[2.022069,-3.947402],[7.687946,-3.048607],[9.975316,1.552648],[-6.108966,8.869492],[8.513612,-8.103594],[-6.802168,-8.619188],[1.185290,6.486331],[-7.043562,-7.542345],[-3.984683,9.233087],[-2.968227,-3.268983],[3.651784,0.968922],[0.758827,-7.540039],[-4.341931,-7.613743],[0.820481,3.659448],[1.346100,3.857014],[6.546771,4.388415],[-4.776502,-3.579078],[2.858149,-1.204108],[-2.687035,-1.005403],[-3.595545,-9.679810],[-8.978361,-5.201500],[2.297495,-5.208975],[-5.513262,4.075768],[-3.665013,7.060555],[4.574347,9.723871],[-4.935092,5.483175],[6.808539,-1.443069],[3.844758,-7.295484],[4.530729,8.306750],[-6.731813,-3.298534],[2.501519,3.147875],[-1.757807,-8.014546],[-0.150734,-7.002472],[-3.394857,4.546641],[-8.114509,1.108146],[-5.501846,8.189690],[-6.808830,0.567929],[-0.612727,0.997935],[7.657712,0.393405],[1.389853,6.074731],[-6.984489,-3.725713],[-7.160023,-3.002634],[0.751551,-8.778757],[-1.800958,-7.285478],[-7.303329,8.972929],[5.861630,-8.970866],[0.593345,-4.886135],[0.319333,-5.326710],[-4.731316,-2.164974],[-5.106540,4.787308],[8.998493,-3.637603],[1.512110,-9.928148],[-3.092849,-2.592514],[5.434737,-1.509951],[8.536216,7.067287],[-3.486709,-0.968351],[3.645589,7.156147],[9.024577,9.344747],[-4.645460,-1.314443],[-8.784711,0.728225],[7.169715,-1.694121],[-6.735389,2.586404],[-7.924510,7.506532],[7.334967,7.234242],[-0.593775,-1.650082],[4.866221,-0.988343],[3.602023,4.056326],[-5.916544,-4.553539],[-5.988865,-4.205510],[8.195060,-9.525985],[-9.664186,5.960755],[0.101559,-5.131833],[3.157193,-3.183125],[9.044390,7.951605],[0.432920,-4.982954],[4.735264,1.992125],[-5.291303,1.250869],[-5.035020,9.669180],[7.505593,-6.559524],[7.964197,-6.756242],[6.808776,6.049568],[-5.839204,-7.006815],[9.703288,7.145198],[4.769025,-2.095477],[-7.786211,-9.338763],[-0.917928,2.507684],[-1.240098,-9.425720],[4.076143,-2.572466],[0.599392,2.994851],[-4.263962,-9.330344],[-2.869130,5.215804],[-0.894203,3.194431],[7.653541,3.668522],[2.172584,6.745646],[-0.224294,8.847577],[-8.428593,0.525567],[9.613379,4.571413],[-4.202576,4.148882],[4.568343,-1.681299],[0.107327,-1.490316],[7.200924,-7.350272],[4.733787,-3.211330],[8.055824,1.499092],[-6.806039,-4.086757],[9.530605,8.810733],[1.820015,-1.641849],[9.745975,-9.313192],[5.952581,2.773835],[5.187791,8.046085],[3.799751,-1.319613],[-1.389451,8.582041],[-3.265983,-1.203638],[0.112415,2.877524],[1.549065,-1.511583],[3.409844,0.735339],[7.355317,9.842706],[-9.045773,1.135643],[8.135179,-7.068599],[8.229056,-3.108834],[3.894495,9.784150],[-0.724572,8.486280],[1.433173,1.621991],[0.934317,1.473465],[4.375251,7.205627],[5.379622,-5.993911],[-8.937826,-6.997582],[-3.433711,-4.957735],[-6.406663,-6.677332],[-5.622104,-7.588171],[8.394602,-2.842431],[-9.049708,-5.570809],[1.167040,7.756642],[-6.622113,8.131775],[-3.945089,6.545459],[-8.411751,1.644323],[3.771479,4.731653],[6.895246,3.659544],[0.961642,8.138256],[2.625313,-6.562274],[7.703118,-1.457281],[1.768654,8.621278],[4.008802,-8.170382],[-2.244774,-0.627495],[0.246632,2.058143],[6.825302,-0.690732],[1.405750,-7.596102],[9.400370,2.033343],[-9.479995,-5.093192],[9.065273,-6.829581],[-2.754249,-4.156619],[-2.338179,2.070921],[-9.580018,-3.287856],[9.774826,3.030018],[5.643153,-5.904373],[-0.793281,9.807815],[2.398255,-2.807780],[7.857707,4.176656],[5.367007,-8.938210],[5.747554,3.576246],[8.660510,9.021623],[-8.007889,1.785098],[1.432904,-6.543162],[6.290366,-4.763132],[-9.241017,8.709268],[6.199800,1.167189],[-7.256768,-2.203198],[5.609098,3.178109],[-4.900178,-0.011696],[4.239410,-7.173728],[4.243392,-1.436593],[-4.377117,1.505219],[8.561387,8.239132],[9.204688,0.703583],[-3.326867,8.729293],[-5.813072,-7.666140],[-7.543759,7.752695],[-3.906871,-0.318656],[5.519187,-3.399085],[1.929726,-6.535789],[-5.641233,-8.145237],[-3.898145,3.006775],[1.931135,5.974671],[-1.933608,-7.569555],[-6.391008,-5.911147],[1.761405,-0.460695],[-1.313271,8.065918],[-6.273428,-4.693792],[9.998019,-9.989358],[4.007551,-8.098692],[6.492159,-0.743083],[-3.076600,-1.270912],[-5.922604,8.471393],[4.500358,-5.724865],[8.544928,2.544268],[6.358371,-3.533496],[-3.783926,7.284940],[7.694936,1.553856],[6.405373,-3.947962],[-1.368062,-1.341023],[5.730655,4.259966],[9.529604,-0.144383],[2.181968,-3.948442],[-3.315419,6.555461],[6.446035,-4.756372],[-6.793615,3.214430],[5.682380,0.193255],[-4.201616,-4.118666],[-5.716562,-5.659550],[-5.782253,-8.715484],[6.841523,-0.768199],[5.568186,-5.166671],[-6.327187,2.044538],[-5.017581,-9.298029],[-2.980501,-9.707165],[1.463164,4.902234],[-7.316652,1.704304],[-5.019534,-2.402881],[-7.078443,4.707710],[-0.898268,2.033693],[-3.222634,7.588752],[7.927977,-7.300076],[-1.689651,4.994188],[-4.546955,2.558292],[-4.643658,1.188985],[-9.263274,-6.883733],[-5.640177,-7.446456],[-4.564297,-6.587666],[2.073596,4.678726],[0.898342,-2.931763],[-7.198226,-7.789418],[-3.257518,3.581222],[-7.880743,-4.900945],[-1.620923,-0.156760],[-8.737012,3.732246],[-7.626841,-1.685362],[-5.659747,-2.337956],[5.453525,8.109844],[-7.923333,-1.859015],[1.297920,-8.494041],[-9.786492,-6.129529],[8.899995,-3.741189],[6.139022,-3.479618],[3.037638,2.682495],[5.575844,6.477550],[4.978899,-2.116476],[-1.918507,-8.377406],[1.726062,-2.876442],[7.016201,-1.823752],[4.765741,7.938903],[3.436871,-6.086766],[-4.473226,-9.794474],[1.441934,-5.497877],[-6.750145,7.421204],[-9.128872,-6.423904],[-8.877255,6.661564],[7.980277,-8.290493],[-1.600844,3.632237],[-9.467529,-7.618995],[-8.714832,-0.502644],[6.304630,-4.182393],[9.675017,-3.063983],[4.283135,5.431688],[8.703257,-3.061402],[2.652925,5.127113],[-3.564262,1.485927],[-4.661735,1.634062],[-9.632681,2.125664],[-0.939364,5.926362],[2.663298,2.166950],[-2.592086,-4.614194],[-9.325792,-5.647435],[3.050702,9.706474],[-3.217757,-6.682409],[3.168886,0.731808],[7.769537,9.415949],[-5.688143,-5.554498],[-3.260658,0.221363],[-4.012437,4.622791],[-3.062623,-5.561208],[9.905938,8.578456],[-3.429229,3.170074],[5.544710,0.973114],[2.265206,-1.499728],[0.016417,0.120345],[0.583222,-3.552303],[-9.854549,-9.384359],[4.819828,-0.288319],[-7.785389,2.857447],[-9.546307,-1.956176],[5.095226,-2.420517],[-3.141397,9.410830],[7.668329,-9.589343],[7.093418,9.265197],[-3.440592,-0.647483],[-5.470166,-9.607490],[-1.461323,-2.550582],[-5.431112,-7.402399],[-1.165575,-3.323844],[4.576836,6.792137],[-1.904783,9.140433],[-4.653879,7.398014],[-8.652997,0.379351],[4.809132,-7.669126],[6.586917,-5.215344],[2.978647,1.477191],[1.564263,0.001221],[2.301083,-3.497203],[-5.858510,2.825157],[-1.153817,8.846653],[-7.193998,3.544228],[-6.020357,6.329508],[-2.569352,-0.342341],[-7.821497,-4.430079],[4.626214,6.688951],[-9.522819,4.548589],[3.316448,1.448662],[3.915789,9.339410],[7.946198,5.015283],[-0.290536,2.188591],[-7.973255,-6.765494],[-6.671987,7.047553],[-2.806476,-9.569357],[-7.153452,0.285221],[2.110239,6.982254],[7.002823,-8.744041],[9.500516,2.153643],[6.164007,9.021002],[-1.654043,-8.709823],[-4.676681,-0.234602],[-9.309905,5.574707],[-9.848399,0.160860],[2.797448,8.920669],[3.051610,-4.415497],[0.768566,-0.664673],[-8.927257,7.092187],[4.660990,7.342525],[3.908023,5.882430],[3.767136,-0.214760],[2.864309,4.450080],[-9.015293,-4.891694],[-8.773230,-2.350441],[-5.717697,-3.191919],[-1.553098,3.534150],[-1.075091,5.177068],[-6.219993,8.545194],[6.760186,-8.612606],[9.624537,-5.968810],[-8.953137,0.969700],[3.791691,-9.181310],[-5.384314,-2.210214],[-3.533953,0.499369],[2.653288,-6.666349],[0.106548,2.923930],[0.837064,1.923654],[5.512156,-6.096163],[-8.416327,-3.563600],[-4.740676,4.860665],[-3.598757,9.482531],[9.717769,8.830090],[-0.855630,2.389527],[8.616165,-3.770825],[-0.358082,-5.699169],[6.569088,6.742189],[-3.260190,1.433542],[-6.335512,-8.833722],[4.105831,-2.501920],[-4.279631,8.498153],[5.672332,-3.690748],[9.287709,-2.810003],[-2.328631,2.691799],[7.168556,-8.275021],[-8.524132,-4.833095],[-5.130188,1.156614],[4.477586,7.206947],[4.910861,-6.063566],[5.294188,-6.777710],[2.083827,-8.698088],[2.669770,-8.694450],[-6.329278,-7.970289],[-2.926118,2.724937],[1.587228,-3.815132],[-9.959067,-6.149158],[-7.232877,9.201393],[6.734537,-0.786999],[-1.344398,2.532690],[-9.806148,-6.454274],[-4.044690,-4.874770],[-8.915187,8.702796],[-8.836306,-4.569099],[1.822128,0.664979],[4.579119,1.823520],[-1.400706,2.569129],[-0.791988,-9.334932],[-4.850665,1.085720],[2.475751,-9.431921],[-3.088438,-7.623678],[7.202316,3.720738],[5.874963,9.319885],[2.864948,-9.862458],[-3.825782,-2.180973],[-9.081925,-5.641150],[-7.409574,2.320222],[5.697036,5.958310],[4.610399,-9.545546],[-6.353928,-6.624341],[-0.602366,-7.280988],[-4.865824,1.236369],[-3.774369,-1.003663],[-0.822457,-6.761247],[-5.639862,5.639996],[7.119510,4.440943],[-3.081268,9.564950],[-4.140068,-8.487387],[1.104659,-7.291100],[9.177865,7.012091],[-0.634108,-2.451065],[-4.799359,9.282601],[-8.373980,-7.694948],[5.862944,2.910893],[3.886383,-1.026602],[-8.679160,1.038318],[2.997764,2.114829],[3.632451,-9.726597],[-1.841876,5.312580],[2.309150,-1.007524],[1.226700,1.890642],[-9.824873,-3.365574],[-4.427954,7.368665],[4.439953,-7.886052],[3.703996,-7.983394],[-6.915730,-8.823089],[5.404055,3.225991],[-6.486282,8.856492],[-3.473020,-2.268059],[3.939476,6.663400],[0.556672,-2.377450],[1.928908,8.990248],[-0.954464,0.904690],[-4.196842,-0.140254],[1.595664,2.585101],[6.632011,0.811254],[0.450266,-4.270672],[-0.942333,-2.100499],[7.767308,8.476626],[-0.037020,5.675566],[-9.016889,4.538451],[-1.738408,-9.147855],[-9.125952,0.148001],[-7.147400,6.842382],[-7.619116,-6.042298],[8.932939,-0.802692],[5.580558,5.229990],[-6.229877,6.296848],[-9.508050,1.330962],[-4.476886,-4.831430],[4.788325,-6.101606],[6.562629,-2.301889],[8.552107,-7.382808],[1.919234,0.552911],[-3.642192,-5.402966],[3.559273,7.866055],[3.827545,-5.306636],[9.422236,-5.579822]], dtype = "float64")#candidate|3934|(546, 2)|const|float64
call_3933 = relay.TupleGetItem(func_2182_call(relay.reshape(const_3934.astype('float64'), [7, 12, 13])), 0)
call_3935 = relay.TupleGetItem(func_2185_call(relay.reshape(const_3934.astype('float64'), [7, 12, 13])), 0)
bop_3936 = relay.less_equal(call_3933.astype('bool'), relay.reshape(const_3934.astype('bool'), relay.shape_of(call_3933))) # shape=(7, 12, 13)
bop_3939 = relay.less_equal(call_3935.astype('bool'), relay.reshape(const_3934.astype('bool'), relay.shape_of(call_3935))) # shape=(7, 12, 13)
func_3186_call = mod.get_global_var('func_3186')
func_3187_call = mutated_mod.get_global_var('func_3187')
call_3951 = relay.TupleGetItem(func_3186_call(), 1)
call_3952 = relay.TupleGetItem(func_3187_call(), 1)
func_3012_call = mod.get_global_var('func_3012')
func_3015_call = mutated_mod.get_global_var('func_3015')
const_3958 = relay.const([2.754710,-5.568954,-7.381092,4.949857,3.518337,2.178542,-2.391110,7.260876,-9.667101,-4.705522,4.721048,8.049765,-8.300703,-8.110881,-2.352325,-0.442792,4.075500,9.577833,2.444744,2.743624,-6.138030,-2.826382,3.852894,-5.064633,4.136606,9.005543,6.781280,5.140229,-4.247337,-0.914982,-7.341961,-5.371316,1.437327,-2.261961,-6.765828,5.515445,-8.684697,-5.327964,6.399424,3.521595,8.419925,6.200959,9.045269,6.219245,-2.471791,-3.150569,-3.146078,8.373452,-6.072424,-8.804637,2.973686,-1.654601,0.330288,2.906104,9.698453,5.953529,0.744686,-0.024781,6.185820,8.437915,6.536966,1.258675,-0.402681,6.250932,-9.297623,-5.449656,8.701300,9.251521,4.949869,9.654859,5.730843,2.593800,-2.826355,5.545341,7.745592,7.610546,7.856319,-9.135049,8.186737,-6.583231,0.183702,8.186830,4.154501,1.544644,-5.958609,-2.636017,-6.222166,-5.203702,2.474499,-2.379248,-5.095298,6.957172,-9.705921,-9.640911,4.326129,2.555226,3.689385,6.330438,2.118921,1.627872,6.918966,7.468889,0.044507,-7.316528,-3.554515,-4.113952,7.765304,-7.350314,3.128829,4.601330,0.181046,-5.333112,-7.412096,-8.717047,-4.195124,6.937485,7.044879,4.485277,-9.112834,0.045324,7.682505,-1.996175,4.562425,-8.198703,8.104272,9.964111,1.353278,8.678837,9.150556,2.933063,2.660029,5.314460,-8.691667,6.264265,7.607507,4.477134,-5.602302,7.417311,-0.603623,7.590198,1.712235,-0.682194,-3.300085,-9.530287,4.243636,9.937245,-4.458921,6.132026,-9.528452,-7.451712,8.361071,-7.912845,1.764670,3.180526,4.134899,9.806196,7.017888,5.842760,7.409926,3.316721,-7.616286,1.811307,-1.321793,5.778982,0.400092,-0.554432,7.209399,9.196060,-5.190126,-6.342970,8.387167,-4.115582,7.646107,-1.487573,-6.282485,-9.937430,-1.991065,8.845092,-2.375110,4.710514,-6.567690,0.375112,-0.379847,-1.010418,8.648990,8.841941,-2.230535,-4.802054,7.336062,-4.173302,-3.204005,-0.075439,-4.316266,4.526861,-7.300461,5.545131,-2.103178,-5.433234,7.209055,4.574942,2.571687,6.071530,5.027252,-5.304916,-8.487415,-3.190171,9.509198,4.472259,-3.471348,-2.539535,-2.389065,-1.513288,-4.395130,8.927178,5.497904,3.735632,1.161530,8.011775,-7.659312,-6.457557,-3.005180,6.463266,7.276658,-0.567023,-5.512997,8.675403,-3.823700,0.874131,-2.598980,-4.997589,-1.240440,5.052231,-9.893367,-3.797147,-7.578926,1.202695,1.694270,-2.044552,4.556530,-2.028894,6.522039,-8.134836,1.982192,4.599141,7.250304,-0.125185,9.231204,7.838131,-0.449194,-5.583794,-3.803193,4.335140,-0.227161,3.482421,-9.771663,3.363005,8.275681,4.791970,-7.257501,-4.802530,-8.932791,3.656766,-7.102079,6.213157,-4.460381,2.530827,6.876462,-4.097364,-3.903167,-5.765532,6.394799,5.192237,6.476070,-1.143544,6.541941,5.061872,9.053235,5.875389,-5.962061,-9.900399,-3.702256,5.846132,-8.003728,6.380358,8.041075,-4.970350,-8.154629,0.851444,-0.734740,1.522650,5.271983,-5.865291,3.066647,-5.754991,-4.988704,-8.005135,7.806838,7.945545,0.564453,-6.427588,-9.297683,0.353239,-2.872909,-1.349465,-8.687784,-8.779236,5.646339,-5.810412,-8.509599,-8.951037,7.252938,1.763428,-8.200608,8.689882,-8.282317,9.877346,-4.781224,7.126755,1.249061,2.144190,5.062994,0.642183,-3.654575,1.848183,8.469664,-7.351688,-4.512095,8.521453,-2.588763,-5.442650,-4.007329,0.832084,-1.174869,-1.262277,-9.100149,-8.766822,6.422741,-5.030988,2.975230,3.761691,6.179675,-7.365055,7.947021,6.369216,-8.343644,-4.264769,2.360493,4.089935,-3.598772,7.705736,6.150596,-7.607029,-4.584223,9.441436,-9.000441,-7.733352,-6.224507,8.904045,-4.453213,6.190055,-5.630987,5.814128,1.854249,-2.961546,-4.119389,-2.606916,8.025988,0.210773,-0.966787,9.617101,2.417574,-1.344119,-3.911564,5.466640,-5.366553,0.516743,6.812813,-6.022021,2.792404,-1.360991,7.524581,-8.838403,-2.031807,-2.467477,-3.887326,1.234182,9.250079,3.417236,-1.197131,-1.282033,0.136776,8.580619,-5.231941,5.356747,-3.745406,-6.820577,-5.279029,-7.042062,-4.731083,5.390823,0.377015,-5.604097,9.757889,-1.546966,-9.738555,-0.487190,1.755857,-3.501084,-1.926434,3.390140,-8.212377,-5.527186,-3.871441,9.408407,3.134070,2.293935,6.184972,7.373267,2.557005,-3.514979,-6.204153,2.496976,0.081820,2.388528,9.731368,-1.972691,-8.513559,7.597683,-6.078279,4.233790,4.252225,-4.261737,-2.099526,3.018882,3.103826,-9.448646,7.926283,2.344185,9.866118,-8.045285,-9.568495,-5.361224,2.113120,4.124327,-3.279163,3.657390,-4.264570,9.437607,5.604351,-6.727350,-8.917698,-8.319150,5.017615,-6.849143,-9.337654], dtype = "float32")#candidate|3958|(455,)|const|float32
call_3957 = relay.TupleGetItem(func_3012_call(relay.reshape(const_3958.astype('float32'), [5, 7, 13])), 1)
call_3959 = relay.TupleGetItem(func_3015_call(relay.reshape(const_3958.astype('float32'), [5, 7, 13])), 1)
func_3090_call = mod.get_global_var('func_3090')
func_3095_call = mutated_mod.get_global_var('func_3095')
const_3961 = relay.const([-4,-10,-10,-5,5,-1,3,-4,5,4,-7,6,-3,-1,-1,-4,9,-1,7,8,-8,-6,5,5,8,-10,4,-10,-4,-4,5,10,-4,-3,-7,-10,3,7,7,-10,1,-1,-5,4,2,-4,5,-1,5,7,-6,-10,-4,9,-8,8,8,-6,10,10,-7,-1,8,-1,-7,-8,7,3,6,-5,-10,6,10,-9,-2,-4,-5,9,-8,-10,-9,9,-8,-7,4,-9,-5,-10,-6,7,10,-7,10,-10,-8,-3,-1,-3,5,-3,4,-3,6,-5,-4,2,-6,1,-7,-4,3,10,-10,-5,6,5,-10,8,4,10,-8,2,-3,9,5,-3,-3,-4,-7,-7,5,-3,-10,2,-6,2,9,7,-8,-10,-4,-1,5,7,2,-6,-7,5,2,1,-2,-4,-8,2,1,-9,2,-9,3,10,-1,-6,7,-6,-9,-1,-2,3,-5,-6,-5,-9,-2,6,4,5,-6,4,10,-4,-6,1,9,-8,7,1,6,10,10,-7,4,2,3,-3,5,-4,-2,9,-7,6,-10,7,-10,-5,-5,-7,-4,-10,6,-2,3,-3,8,-8,10,10,-2,-5,-8,-3,5,-3,-10,8,8,-8,-3,-6,7,-8,10,9,7,-4,-8,-9,6,2,4,-3,-7,3,-4,-10,5,-1,8,-6,-6,9,9,5,-9,-3,-6,-5,-9,-4,9,5,-4,8,-6,6,-7,6,-4,-1,-9,-5,-3,9,-9,5,6,2,6,-1,-6,-4,1,-9,2,-5,-6,-5,3,1,4,-1,-5,2,5,-4,8,6,-10,4,8,-3,2,-5,2,6,-9,-8,-2,-6,4,9,-9,-1,1,5,5,-6,-5,-1,-5,5,-5,-10,5,-5,-5,-1,1,-7,7,4,9,-8,-8,-3,7,-9,-3,9,-5,7,1,8,9,-4,7,-8,-7,1,7,-10,-6,-9,10,-6,-4,-6,-2,5,-10,-10,9,3,6,1,10,10,-10,4,8,-6,-7,-5,7,-10,3,5,-10,5,-4,1,-8,9,-1,10,7,2,-8,-2,-9,5,-2,3,9,-10,-4,7,4,-2,1,6,7,1,-5,4,5,5,10,-1,-7,1,2,3,-8,-4,-6,8], dtype = "int8")#candidate|3961|(416,)|const|int8
var_3962 = relay.var("var_3962", dtype = "bool", shape = (264,))#candidate|3962|(264,)|var|bool
var_3963 = relay.var("var_3963", dtype = "float64", shape = (180,))#candidate|3963|(180,)|var|float64
call_3960 = relay.TupleGetItem(func_3090_call(relay.reshape(const_3961.astype('int8'), [4, 13, 8]), relay.reshape(const_3961.astype('int8'), [4, 13, 8]), relay.reshape(var_3962.astype('bool'), [264,]), relay.reshape(var_3963.astype('float64'), [3, 60]), ), 7)
call_3964 = relay.TupleGetItem(func_3095_call(relay.reshape(const_3961.astype('int8'), [4, 13, 8]), relay.reshape(const_3961.astype('int8'), [4, 13, 8]), relay.reshape(var_3962.astype('bool'), [264,]), relay.reshape(var_3963.astype('float64'), [3, 60]), ), 7)
output = relay.Tuple([call_3914,bop_3936,call_3951,call_3957,const_3958,call_3960,const_3961,var_3962,var_3963,])
output2 = relay.Tuple([call_3915,bop_3939,call_3952,call_3959,const_3958,call_3964,const_3961,var_3962,var_3963,])
func_3967 = relay.Function([var_3962,var_3963,], output)
mod['func_3967'] = func_3967
mod = relay.transform.InferType()(mod)
mutated_mod['func_3967'] = func_3967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3967_call = mutated_mod.get_global_var('func_3967')
var_3969 = relay.var("var_3969", dtype = "bool", shape = (264,))#candidate|3969|(264,)|var|bool
var_3970 = relay.var("var_3970", dtype = "float64", shape = (180,))#candidate|3970|(180,)|var|float64
call_3968 = func_3967_call(var_3969,var_3970,)
output = call_3968
func_3971 = relay.Function([var_3969,var_3970,], output)
mutated_mod['func_3971'] = func_3971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2972_call = mod.get_global_var('func_2972')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_3973 = func_2972_call()
call_3974 = func_2972_call()
output = call_3973
output2 = call_3974
func_3976 = relay.Function([], output)
mod['func_3976'] = func_3976
mod = relay.transform.InferType()(mod)
output = func_3976()
func_3977 = relay.Function([], output)
mutated_mod['func_3977'] = func_3977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3782_call = mod.get_global_var('func_3782')
func_3784_call = mutated_mod.get_global_var('func_3784')
call_4027 = relay.TupleGetItem(func_3782_call(), 1)
call_4028 = relay.TupleGetItem(func_3784_call(), 1)
func_2182_call = mod.get_global_var('func_2182')
func_2185_call = mutated_mod.get_global_var('func_2185')
const_4072 = relay.const([9.976287,-5.371576,1.045950,6.236115,7.845853,9.479977,-7.638621,-2.859738,-8.799171,3.187700,-7.726703,-9.440503,-6.654297,2.286153,3.274686,9.322320,9.951437,1.901016,4.371997,-8.442355,-9.708534,2.574883,4.813656,4.288941,-6.941067,6.343633,-6.853206,-6.423897,-1.873567,9.126439,-7.250204,4.384919,-9.674921,8.901979,4.447781,4.705164,9.169387,-9.227542,-3.594553,8.249780,-4.321074,5.902665,-3.737235,7.756443,-5.393582,-8.957950,-8.875634,-7.332399,-9.844195,-0.845714,8.282801,9.737891,-4.379558,8.231136,8.983353,8.548362,-9.974432,2.110579,-9.514427,6.770171,3.909257,-7.391965,9.203652,-2.770134,-6.754099,-9.143603,-5.569225,-6.139950,9.736245,6.942770,-5.777956,1.036024,-1.477095,1.788685,7.602980,9.794844,-9.944229,-1.232109,-8.215291,4.142002,4.140353,-0.246255,-0.166766,-2.009564,-8.903845,-8.932502,-4.057767,7.693686,-9.899212,-6.192172,-0.120161,-9.988225,5.392155,-2.592425,-7.160841,-8.268780,9.913972,3.587987,6.170792,-3.147677,-2.342120,1.035569,-3.764724,9.014163,4.098870,-0.710484,2.166497,8.309545,-1.287037,-3.990379,4.430626,-6.650646,1.747585,-3.788821,-6.761135,-1.541743,-1.942727,4.085881,9.703576,1.317218,-7.233820,-0.320033,4.229696,-4.255887,7.648277,-2.456527,7.467039,-1.325688,-3.209928,-4.133455,6.835520,4.167514,-0.514753,-7.125170,7.959084,-0.138241,0.199879,9.921492,-7.515223,-1.882551,-1.503994,5.827722,-8.854537,-1.697942,-6.806089,1.152387,-1.242066,0.442432,2.510660,-3.750493,-6.917728,2.687359,6.763673,-5.513406,-0.273814,0.933403,2.779537,0.186584,-3.818739,-5.241258,-6.058306,-5.479575,8.141528,1.796801,1.173930,9.695025,-9.103811,-7.256168,-6.081994,-5.643068,6.605513,9.751079,-1.333727,-1.873689,3.529296,5.176167,-4.263049,-9.546482,-2.008088,4.335136,7.099101,0.300897,3.065775,8.270577,-9.156303,-0.338049,8.654412,-0.841047,-1.324140,3.566839,8.736420,4.556313,-6.995378,4.263539,4.350153,3.980775,-5.625914,0.511485,-3.866272,3.652037,-5.252183,-8.541809,3.660218,6.084126,-1.461063,0.241158,9.822178,7.860580,-4.368574,-4.398706,4.261072,-5.471928,-2.349465,4.017589,-5.439098,8.916277,4.577238,9.634887,-5.575585,-1.506045,8.226386,5.361997,8.754173,-3.981765,4.740128,3.053664,-9.064479,-0.315328,5.284022,1.369216,-6.719147,-1.142344,3.966382,9.428533,-8.946985,-3.881439,3.040698,7.601433,-9.626898,8.633365,-8.318563,4.657220,-1.737571,-2.327158,0.878108,-8.111798,-3.993905,8.948968,-4.552778,-2.712829,8.673707,-2.428605,-5.418239,8.817491,4.463257,-1.571495,0.941661,5.139789,-4.949206,-1.305233,6.472671,6.015445,8.395109,4.209762,0.677108,3.839138,-7.341232,-1.898891,1.672646,-8.538069,-7.552288,-0.875765,-6.853604,3.794544,6.830824,-6.591887,-8.475124,7.193706,2.414407,4.406149,-2.266193,8.140354,-1.187368,7.618475,6.931147,4.037386,-1.604070,4.379980,3.185963,4.388650,-8.707676,8.816339,-2.282424,4.193292,-7.963085,-2.554365,4.043084,5.631518,7.770020,3.118413,-2.286241,-2.305646,-1.836205,4.865359,0.839435,7.603124,3.094208,-9.765588,4.058892,6.249447,3.411109,-9.223755,3.819345,-2.860755,-2.882515,1.070387,-5.168348,6.613474,7.589762,-5.477711,-9.994307,1.685142,5.654803,1.746952,1.795553,-5.399183,-5.565317,4.645311,-0.322590,0.813832,4.747222,-7.058723,-3.010290,-4.761618,-8.828837,-4.442795,-3.472007,-9.884076,-0.946885,-1.230868,-4.005331,-8.502657,4.608527,-1.151233,3.441850,-8.330209,-1.788061,4.820260,3.366034,6.890742,-7.382579,-4.832655,6.354631,-8.998700,-6.409514,3.992800,8.262275,9.740084,1.075636,0.058384,8.674374,7.385190,-8.238387,3.079898,-1.748894,2.822933,-5.932200,-8.503781,2.786038,8.655139,2.430466,-7.694977,-1.801758,-7.162748,-7.836119,9.904452,6.445926,2.815513,3.523150,3.289158,1.311082,-0.490223,-0.993023,5.166049,-0.376052,1.712728,6.682471,-0.822942,-8.911415,9.397747,-7.808349,-2.957937,8.509119,4.809718,-3.788564,2.391792,-2.794041,-3.898009,-7.063468,-7.101962,-0.152824,-4.721435,9.259328,-2.466483,5.672946,-0.359053,-1.584266,-6.185034,6.460789,-0.432355,-2.616652,7.788326,9.751580,-6.723147,-2.204498,-4.361030,-4.557286,-4.796930,-9.614030,1.985271,4.861579,5.607839,5.633860,9.266947,-0.098661,-9.763267,2.205442,7.935937,2.275725,-1.624441,-0.317365,2.328255,-0.355564,-0.703325,-3.675022,-5.487647,-8.347299,9.982389,8.819955,-0.871995,-1.915640,9.030703,-0.448923,-2.492071,-1.713019,9.241620,-7.957786,3.191924,6.748284,4.835296,-2.727291,3.073242,4.512634,-2.699647,3.752165,-1.516698,9.278061,-6.428689,-2.311665,-8.065853,7.273452,5.891923,-6.341657,-3.947071,2.109314,1.990541,-8.275235,-5.727952,2.490929,-3.666657,8.170541,-3.385585,-6.046612,-4.976896,3.699863,7.873985,5.221361,-3.549922,-8.326991,5.407031,-7.865420,1.359577,0.064147,3.292649,-2.457202,5.154730,-9.803161,-1.056351,-0.568914,-6.953857,4.157741,1.061382,-6.546527,-6.478027,-9.379690,-1.966576,-1.631442,0.525765,0.297986,-8.550137,7.109486,8.759543,0.817759,-5.352666,0.476186,-1.136116,3.361671,1.616309,2.354261,-1.042684,1.682064,6.081709,-2.918056,3.328999,9.224924,3.777216,8.161957,-0.845968,-2.370945,8.220706,3.355445,9.415395,7.971138,9.129420,-3.195486,-0.429549,-6.038173,-0.444754,6.245202,9.591785,3.913282,5.771217,7.899376,-4.454823,-3.183970,8.303160,0.573269,-5.873058,4.812994,8.213409,7.718063,7.277712,3.589596,-5.037478,5.749373,2.172937,-7.286508,-3.634483,3.743264,-4.520853,-7.471967,0.784582,-7.379970,-6.620895,4.375064,4.495464,3.894669,2.893839,-7.591857,5.525920,8.582659,6.672569,1.973811,4.208877,-2.002183,5.428767,-9.501078,-2.679998,-1.807907,-3.495082,-0.940642,5.615806,0.846372,2.832778,-1.028174,7.904337,9.158224,-0.514314,-3.747939,5.456792,9.702572,9.831980,-1.247533,-7.379117,-6.164198,-3.708855,-8.641513,9.256082,-2.545454,-2.053127,9.717460,-5.535489,-7.916567,-8.237783,6.966516,5.510148,-3.365706,-9.849094,-7.889479,7.006975,9.205515,8.492846,7.312528,7.935483,6.986474,5.258630,-7.272209,-8.180558,-2.816777,4.193989,-5.786513,-8.114119,-2.818318,6.465709,1.960898,6.999891,2.749321,-0.087540,7.643487,-2.934873,1.450462,-7.898686,-8.822449,-9.735195,2.712033,-9.708719,-8.429595,-4.866629,7.130301,5.965022,-1.026829,8.390647,-9.980055,3.564854,-2.757270,-3.565939,7.292434,0.636706,7.376011,-2.841318,3.656327,4.327924,8.918396,-5.040232,8.127870,8.029969,9.330136,7.211251,-9.346944,6.538330,5.675130,4.324756,-7.357710,-0.338945,-0.498303,-1.355802,2.632635,-7.519028,9.520965,7.032772,-9.269789,3.330296,9.954366,1.956674,5.019676,-1.590949,9.256789,2.665160,-9.773930,5.246573,-8.678065,9.294289,1.934699,-6.914659,-1.490163,-8.200427,-6.139984,-8.408060,-0.110596,0.635125,0.286211,-7.492887,0.304435,-5.322863,3.567686,2.866626,-2.100716,2.702563,-8.915649,-4.942708,1.471368,5.871209,-0.141096,-1.870101,-1.766139,-4.592979,6.247201,-9.024057,-4.113215,3.574235,-3.720482,9.451145,8.089423,8.863681,-2.605988,-3.877270,-8.534507,7.161238,-7.557731,0.704439,-8.611863,-6.655284,6.171140,-2.494139,7.990775,4.831268,-8.779906,-4.892816,-1.041810,7.122495,-3.013279,-8.699422,-0.535836,5.619809,2.945869,5.425135,4.193818,-1.571390,-0.856714,-9.428060,-4.205236,6.046853,6.475253,-5.292828,3.149502,-3.846403,9.363738,-5.997340,6.648977,-2.167392,9.389636,-4.619706,3.049863,1.219256,8.274895,-4.625762,7.963529,5.274416,8.476344,-7.822497,6.264182,-0.021463,-0.932724,-1.932947,3.514455,-0.912259,-9.942213,6.572976,6.408424,3.111041,-4.271375,-2.774844,-1.693847,-3.177220,5.494737,-1.180262,-3.174478,-7.392814,-7.662952,-2.500165,0.359130,-7.013610,1.282309,-7.660999,-2.785980,6.911339,3.030683,-2.503146,0.461835,6.458005,-0.006600,-8.361978,3.885535,1.447544,4.426996,3.690657,-0.280869,3.193694,6.715121,2.803983,7.158151,-7.655106,-2.028639,-0.049588,-0.135080,2.460907,-0.738270,2.854429,-8.728954,4.270690,-1.256311,-9.763680,-0.985862,-8.182983,7.828077,4.015061,-2.664948,0.685480,-9.638403,0.162426,-0.106535,2.013471,-5.911916,-9.462782,5.251578,-3.978651,-3.061999,2.463305,-2.015962,-5.979034,5.158944,8.487332,5.003027,-9.117855,-2.921297,-0.582063,-1.873820,4.185775,-6.567870,7.191191,4.855304,0.582857,2.125230,-1.736790,-0.777804,2.591768,-9.954854,-4.619500,-5.168963,-8.447427,-4.761577,5.734263,-6.795818,5.011695,-2.553797,8.503087,-3.911390,2.875464,4.971758,-8.134147,-6.068043,0.443089,-5.465960,-0.782682,-6.947586,5.923530,-9.588983,-1.174779,-7.546323,9.273531,-0.500896,-8.638482,-1.690383,-0.038962,-4.225770,8.587595,9.073888,0.789781,-4.192651,-6.657060,-0.620807,2.226493,-0.456914,-5.696935,1.020143,7.521887,-0.271089,9.851451,0.045092,-6.862947,-3.532387,-9.811627,-6.725955,8.552428,2.203270,6.562701,4.469526,-0.887982,-0.727537,-8.229961,7.277004,-7.005975,-4.225866,-4.497045,3.936377,2.580370,-8.293087,1.602933,6.050941,-5.213912,-9.244360,6.701647,-9.478572,0.948261,-2.020239,4.235524,3.163526,7.614067,5.998385,6.508606,-6.919535,-6.338223,-0.205307,0.195094,-3.649902,9.350196,6.661955,-9.274160,-3.949527,3.712923,-9.104474,-6.639938,-2.392849,1.147884,1.527176,-6.407221,1.218716,3.740704,2.390304,8.314535,-6.994549,-5.388236,7.483061,0.340704,2.792887,-8.021163,6.729625,4.086006,-2.307358,5.313029,-5.843170,8.780621,-6.463443,6.051742,7.859421,1.696906,8.256899,-5.482564,7.010348,7.271530,-3.902429,-8.638760,-5.141130,1.622496,-9.573045,4.352681,-3.015064,-2.140255,4.975574,-9.629105,-6.239973,-7.791890,-8.594700,0.497038,-9.093034,-2.710251,-7.568444,6.237246,-6.258868,-4.783055,7.613243,2.235050,-1.023609,7.161420,-9.842408,3.947360,9.922393,-3.328799,-6.987771,6.423229,-6.519732,0.536212,-8.268032,-1.018049,4.934370,9.442337,-6.717853,-6.143998,-5.364916,-4.147854,-6.433204,-1.239907,4.754284,7.096875,-3.101004,-1.149700,-3.799134,5.592209,-7.986985,1.869167,-3.271207,2.779192,-8.651104,-7.813040,1.603160,4.000851,-9.065425,3.111123,-4.705920,6.694551,-6.989802,-8.860991,4.455920,4.764661,1.493822,6.541706,-6.185454,-3.311440,-1.183373,9.302198,8.254557,0.511840,-1.874563,0.699138,7.752742,3.026105,-3.367458,-9.111558,-7.135275,-0.744194,6.676263,8.649558,-5.710138,-0.208539,-8.626444,-4.571339,-5.246407,5.893683,-5.805628,3.513359,1.751794,2.984118,-0.904644,8.268001,-0.832861,-1.326041,1.330580,5.173616,0.443703,5.537166,7.093849,4.033859,4.027088,8.799240,6.511024,-6.439071,6.185579,8.723168,5.024599,-3.863948,-3.498770,3.330384,5.671784,0.630256,-8.838208,-4.166151,-7.818958,9.236039,1.212499,1.779899,-4.238588,9.614881,-5.911084,3.976232,-6.484165,3.172510,4.180633,-4.139573,7.407809,9.546759,-0.961151,9.595441,-2.651027,1.741103,2.233275,-9.658017,-3.727493,-1.133387,-4.789915,-4.379112,6.646931,0.605764], dtype = "float64")#candidate|4072|(1092,)|const|float64
call_4071 = relay.TupleGetItem(func_2182_call(relay.reshape(const_4072.astype('float64'), [7, 12, 13])), 0)
call_4073 = relay.TupleGetItem(func_2185_call(relay.reshape(const_4072.astype('float64'), [7, 12, 13])), 0)
output = relay.Tuple([call_4027,call_4071,const_4072,])
output2 = relay.Tuple([call_4028,call_4073,const_4072,])
func_4076 = relay.Function([], output)
mod['func_4076'] = func_4076
mod = relay.transform.InferType()(mod)
output = func_4076()
func_4077 = relay.Function([], output)
mutated_mod['func_4077'] = func_4077
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4132 = relay.var("var_4132", dtype = "float64", shape = (7, 8, 12))#candidate|4132|(7, 8, 12)|var|float64
uop_4133 = relay.exp(var_4132.astype('float64')) # shape=(7, 8, 12)
func_3455_call = mod.get_global_var('func_3455')
func_3458_call = mutated_mod.get_global_var('func_3458')
const_4137 = relay.const([False,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,False,False,True,True,True,False,False,True,True,False,False,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,True,True,False,True,True,False,True,True,True,True,False,False,False,True,True,False,True,False,True,True,False,True,False,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,True,False,False,True,False,True,False,False,False,True,False,True,False,True,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,False,True,False,False], dtype = "bool")#candidate|4137|(264,)|const|bool
call_4136 = relay.TupleGetItem(func_3455_call(relay.reshape(const_4137.astype('bool'), [264,])), 0)
call_4138 = relay.TupleGetItem(func_3458_call(relay.reshape(const_4137.astype('bool'), [264,])), 0)
output = relay.Tuple([uop_4133,call_4136,const_4137,])
output2 = relay.Tuple([uop_4133,call_4138,const_4137,])
func_4140 = relay.Function([var_4132,], output)
mod['func_4140'] = func_4140
mod = relay.transform.InferType()(mod)
mutated_mod['func_4140'] = func_4140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4141 = relay.var("var_4141", dtype = "float64", shape = (7, 8, 12))#candidate|4141|(7, 8, 12)|var|float64
func_4140_call = mutated_mod.get_global_var('func_4140')
call_4142 = func_4140_call(var_4141)
output = call_4142
func_4143 = relay.Function([var_4141], output)
mutated_mod['func_4143'] = func_4143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2230_call = mod.get_global_var('func_2230')
func_2231_call = mutated_mod.get_global_var('func_2231')
call_4195 = relay.TupleGetItem(func_2230_call(), 0)
call_4196 = relay.TupleGetItem(func_2231_call(), 0)
func_2813_call = mod.get_global_var('func_2813')
func_2815_call = mutated_mod.get_global_var('func_2815')
var_4211 = relay.var("var_4211", dtype = "bool", shape = (1, 264))#candidate|4211|(1, 264)|var|bool
call_4210 = relay.TupleGetItem(func_2813_call(relay.reshape(var_4211.astype('bool'), [264,])), 0)
call_4212 = relay.TupleGetItem(func_2815_call(relay.reshape(var_4211.astype('bool'), [264,])), 0)
var_4232 = relay.var("var_4232", dtype = "bool", shape = (10, 264))#candidate|4232|(10, 264)|var|bool
bop_4233 = relay.subtract(var_4211.astype('int8'), var_4232.astype('int8')) # shape=(10, 264)
func_3455_call = mod.get_global_var('func_3455')
func_3458_call = mutated_mod.get_global_var('func_3458')
call_4241 = relay.TupleGetItem(func_3455_call(relay.reshape(var_4211.astype('bool'), [264,])), 0)
call_4242 = relay.TupleGetItem(func_3458_call(relay.reshape(var_4211.astype('bool'), [264,])), 0)
output = relay.Tuple([call_4195,call_4210,bop_4233,call_4241,])
output2 = relay.Tuple([call_4196,call_4212,bop_4233,call_4242,])
func_4247 = relay.Function([var_4211,var_4232,], output)
mod['func_4247'] = func_4247
mod = relay.transform.InferType()(mod)
var_4248 = relay.var("var_4248", dtype = "bool", shape = (1, 264))#candidate|4248|(1, 264)|var|bool
var_4249 = relay.var("var_4249", dtype = "bool", shape = (10, 264))#candidate|4249|(10, 264)|var|bool
output = func_4247(var_4248,var_4249,)
func_4250 = relay.Function([var_4248,var_4249,], output)
mutated_mod['func_4250'] = func_4250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2521_call = mod.get_global_var('func_2521')
func_2522_call = mutated_mod.get_global_var('func_2522')
call_4282 = func_2521_call()
call_4283 = func_2521_call()
output = relay.Tuple([call_4282,])
output2 = relay.Tuple([call_4283,])
func_4288 = relay.Function([], output)
mod['func_4288'] = func_4288
mod = relay.transform.InferType()(mod)
output = func_4288()
func_4289 = relay.Function([], output)
mutated_mod['func_4289'] = func_4289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4288_call = mod.get_global_var('func_4288')
func_4289_call = mutated_mod.get_global_var('func_4289')
call_4309 = relay.TupleGetItem(func_4288_call(), 0)
call_4310 = relay.TupleGetItem(func_4289_call(), 0)
output = call_4309
output2 = call_4310
func_4335 = relay.Function([], output)
mod['func_4335'] = func_4335
mod = relay.transform.InferType()(mod)
mutated_mod['func_4335'] = func_4335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4335_call = mutated_mod.get_global_var('func_4335')
call_4336 = func_4335_call()
output = call_4336
func_4337 = relay.Function([], output)
mutated_mod['func_4337'] = func_4337
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4351 = relay.var("var_4351", dtype = "float32", shape = (3, 7, 12))#candidate|4351|(3, 7, 12)|var|float32
uop_4352 = relay.erf(var_4351.astype('float32')) # shape=(3, 7, 12)
func_4140_call = mod.get_global_var('func_4140')
func_4143_call = mutated_mod.get_global_var('func_4143')
const_4363 = relay.const([-7.284775,0.494844,8.350251,7.625254,6.769561,-0.440398,-1.187044,5.209913,-1.354833,8.710643,5.475881,1.471524,8.147112,-6.396388,-8.009683,8.330550,2.098123,-5.828940,3.082908,0.297975,-9.148038,-0.400365,-8.912919,-0.058753,-0.380034,-4.128306,-9.552504,-9.670246,7.790315,-4.563068,-9.109037,-2.721211,4.249561,2.432794,-2.824692,7.835731,-8.160075,-6.880883,5.633121,4.789588,-4.704195,0.019794,-3.644706,-1.845624,-9.001635,0.752563,-6.744401,-9.463968,-2.523949,-7.129024,-7.482938,6.673556,6.015144,5.895163,-9.365908,-1.912933,2.158061,-1.390457,-1.629632,2.915495,1.862655,3.386318,-5.395460,3.309891,7.601106,-1.720540,7.140125,2.519243,3.046414,3.866859,6.933473,-6.266693,0.297405,-0.637033,3.573883,-1.110829,-5.047223,-1.986475,5.186293,9.640355,1.174023,-9.227855,3.130147,4.110480,2.480492,6.249091,6.802168,6.228270,-3.508407,-9.224930,8.970047,-4.433754,-9.818346,-2.509763,8.876967,7.573556,4.756562,6.720705,3.013806,4.855370,-6.782784,9.342261,-1.106769,-7.289371,9.623603,-9.587209,-2.546571,-7.076633,1.058421,-4.798700,7.554812,9.173655,-9.368977,4.947422,-3.508211,-6.574006,6.979629,-0.101777,-8.026065,-1.493398,4.312686,-1.556007,-7.990619,-4.397239,6.835383,-5.427679,-4.790758,-5.652808,-7.796101,-2.360622,-1.107548,4.541010,6.986756,-8.358071,4.835233,7.937533,9.628921,-7.761448,-9.702918,-3.860028,8.871167,-9.913304,-6.164439,-5.855698,5.003042,5.579416,4.844360,0.094524,-3.562638,-9.294780,8.174955,-2.403144,5.623343,-4.194603,-8.846632,-3.070912,9.480414,4.697381,6.267910,-5.082834,2.691215,-8.829861,0.969809,6.161973,1.247863,2.330414,0.630600,-5.424802,-8.837917,-4.966246,3.725826,-0.881495,-1.156933,-9.662095,-3.749750,-7.225878,0.221499,-6.114677,-3.037752,-7.754361,-3.723376,-6.938048,-3.862481,-4.284650,0.252322,5.960264,9.281132,3.397012,0.182191,7.949111,3.667936,1.963125,1.156944,9.539622,2.196370,5.270223,5.075080,3.277386,-1.894713,-5.825221,5.997946,-7.295780,9.884284,-1.306677,-5.319072,-1.079687,7.962554,-7.545521,-1.336372,-6.648683,9.297175,0.884872,-6.930566,-9.854434,-8.683380,-2.819488,-4.072682,0.088517,4.987553,3.628665,8.464667,3.847862,3.936628,3.405832,4.228718,-0.512934,-8.826276,0.869740,-0.207301,5.366927,-0.119389,-2.378077,1.351206,-0.789118,8.639469,-7.155506,-5.788661,9.135329,3.259634,1.065825,2.611124,5.874939,7.889295,-6.791382,0.808604,-1.949298,8.148155,-1.549586,-5.080071,4.169203,-5.583616,2.509248,0.210880,7.578215,2.448523,6.931467,-7.367906,-6.797506,8.924821,3.059342,9.392075,-6.225815,6.363933,9.458734,-0.846139,3.137544,-4.986937,7.967510,-5.153374,-5.532652,1.842032,-2.809124,-7.847840,5.314662,5.023968,-0.984043,-8.772722,1.004887,-8.849180,-7.171777,-6.815259,4.083465,-4.942085,-8.918858,1.366886,-1.222803,7.862169,-5.533624,-5.270510,3.801830,4.229248,-6.178718,0.544300,0.062816,-3.315099,-7.825094,5.377764,1.463426,-5.041430,-7.627738,-5.326214,-2.115507,5.979878,3.723911,-3.119196,5.806375,7.855711,8.977418,-3.246328,-5.793147,-6.708132,9.605268,-8.517283,6.957513,-0.560172,0.583281,3.693337,-5.253216,-1.942812,-1.557658,7.216529,-9.222539,1.914295,7.313664,-6.941023,-1.268403,-1.328275,8.253381,-2.730607,9.385407,-7.642999,8.875948,-7.408603,4.959658,5.188515,1.268600,4.604629,1.405448,7.536521,-2.010147,-5.652201,7.289000,-8.247675,-8.599377,1.751198,-9.172364,-9.644816,5.881454,2.962705,8.561842,-4.788193,6.146258,7.250483,-0.168937,1.599126,-0.117374,8.470134,-9.580907,-5.834022,-4.032300,-1.056762,-7.647733,-3.721708,9.656966,-5.437705,1.394359,4.527235,-7.284310,0.868680,-1.768275,-6.223422,7.250136,-3.876144,9.189898,-1.003680,-6.217413,-5.535687,5.327344,7.904683,2.735686,9.657281,-7.214488,0.390262,6.820083,-0.448710,-7.848825,9.562916,-6.679040,9.173510,-2.853808,-4.535690,2.485415,9.677383,7.986778,6.916248,-6.247748,2.672983,-8.160186,-8.004069,-7.121461,7.375037,1.105166,-7.645382,-2.070278,5.702798,1.695666,0.378876,7.953152,6.527588,4.278107,5.691292,7.051241,6.278229,4.972754,-9.840280,-3.706765,-3.609858,-5.411958,1.661098,8.777756,1.055220,-4.759414,0.296501,-1.600348,2.164431,2.420579,9.165957,3.431166,-7.723798,-2.394508,-6.301328,-6.915417,-7.728904,7.525385,7.119731,2.879744,0.195624,-9.565079,3.004932,5.797117,-6.378545,7.936385,-9.476523,-5.697274,6.011994,0.937323,5.945212,5.315826,-3.775263,-2.244696,4.415571,-7.390502,1.232842,5.253978,5.893101,3.471275,5.831560,-8.931631,-6.229205,2.321542,7.917629,0.893233,-3.041723,4.353899,-4.937410,8.806697,4.925865,-4.956105,-8.127332,7.373811,7.512504,9.302599,4.895286,-6.855801,2.619700,4.216844,-1.482253,5.838703,2.830457,6.237440,-6.049982,1.844617,-0.359502,6.900136,7.106353,0.123820,2.401438,-5.038340,-1.195799,-1.099466,-0.489785,-5.310770,0.643764,4.154422,-9.976318,-5.665973,5.876909,-2.619494,8.325953,-8.046685,-6.868225,2.358589,1.817942,-8.495460,-7.616936,3.205817,0.167674,7.865228,0.666817,5.365691,5.193252,1.858567,-8.021663,0.804110,6.272784,-0.442943,4.934524,2.289982,6.364507,-7.315919,7.508538,-3.668161,7.276021,6.154460,8.110855,2.222807,-4.624732,1.879805,-5.709021,-3.298622,9.158490,-2.788945,0.214118,1.357831,5.601012,-7.416887,7.102228,1.408061,3.217695,2.919712,-2.858390,7.847476,3.471773,5.800640,4.724099,0.101347,-2.893630,5.125921,-1.575313,4.098942,-1.614699,-8.266545,-2.219938,9.834967,-7.732270,-7.763662,3.929008,5.811296,3.897359,-3.457337,-9.381934,8.432515,2.215831,-0.192141,8.553765,-6.117249,-5.279347,6.401921,-8.068010,-3.755967,1.256141,1.907963,-8.386499,-4.739950,1.320486,1.309407,-6.770251,1.363035,9.660050,2.716589,5.173709,6.768178,-6.812592,-6.597780,8.260238,9.907026,-7.929400,1.815333,8.252429,-2.045895,-9.045958,0.411452,-9.100744,1.373373,-4.028988,-3.457591,-8.136814,6.694270,-0.947339,7.949391,-5.921991,-0.143999,-7.467169,-7.587398,3.285349,-0.391518,-3.919217,6.017022,-5.084795,-5.619704,3.935094,-4.881289,-7.191294,1.857624,-5.287332,-4.278193,3.588664,8.109900,-7.001354,-6.881313,-8.040433,-1.974601,-8.014435,2.900997,-1.618423,0.365268,-8.935672,2.993788,-2.986997,4.353931,6.698132,7.583752,-1.440854,-5.639577,-3.140122,7.112479,-9.133278,8.757629,5.828289,0.325477,3.598528,8.076892,6.802643,-7.430762,4.016462,-7.929950,-9.662942,-7.493065,-7.962313,9.498641,7.787553,6.620889,-0.554223,-4.092336,8.311850,4.299219,-3.766889,-3.112787,8.323756,3.929845,-9.928335,-6.793532,-4.653198,3.567206,0.415902,4.238016,0.892137,-4.765938,-8.869313,3.738373,2.671338,-5.734546], dtype = "float64")#candidate|4363|(672,)|const|float64
call_4362 = relay.TupleGetItem(func_4140_call(relay.reshape(const_4363.astype('float64'), [7, 8, 12])), 0)
call_4364 = relay.TupleGetItem(func_4143_call(relay.reshape(const_4363.astype('float64'), [7, 8, 12])), 0)
output = relay.Tuple([uop_4352,call_4362,const_4363,])
output2 = relay.Tuple([uop_4352,call_4364,const_4363,])
func_4367 = relay.Function([var_4351,], output)
mod['func_4367'] = func_4367
mod = relay.transform.InferType()(mod)
mutated_mod['func_4367'] = func_4367
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4368 = relay.var("var_4368", dtype = "float32", shape = (3, 7, 12))#candidate|4368|(3, 7, 12)|var|float32
func_4367_call = mutated_mod.get_global_var('func_4367')
call_4369 = func_4367_call(var_4368)
output = call_4369
func_4370 = relay.Function([var_4368], output)
mutated_mod['func_4370'] = func_4370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3782_call = mod.get_global_var('func_3782')
func_3784_call = mutated_mod.get_global_var('func_3784')
call_4386 = relay.TupleGetItem(func_3782_call(), 2)
call_4387 = relay.TupleGetItem(func_3784_call(), 2)
const_4389 = relay.const([[[-7,-10,8],[6,8,10],[-1,1,-4],[3,-3,-6],[3,9,-7],[9,-1,-3],[-4,6,-4]],[[-9,-1,-3],[1,-10,6],[3,5,1],[6,-10,-8],[-7,3,4],[10,-4,-6],[-3,4,-9]]], dtype = "int8")#candidate|4389|(2, 7, 3)|const|int8
bop_4390 = relay.maximum(call_4386.astype('uint8'), relay.reshape(const_4389.astype('uint8'), relay.shape_of(call_4386))) # shape=(2, 7, 3)
bop_4393 = relay.maximum(call_4387.astype('uint8'), relay.reshape(const_4389.astype('uint8'), relay.shape_of(call_4387))) # shape=(2, 7, 3)
func_3862_call = mod.get_global_var('func_3862')
func_3865_call = mutated_mod.get_global_var('func_3865')
var_4397 = relay.var("var_4397", dtype = "float64", shape = (24,))#candidate|4397|(24,)|var|float64
call_4396 = relay.TupleGetItem(func_3862_call(relay.reshape(var_4397.astype('float64'), [12, 2])), 0)
call_4398 = relay.TupleGetItem(func_3865_call(relay.reshape(var_4397.astype('float64'), [12, 2])), 0)
output = relay.Tuple([bop_4390,call_4396,var_4397,])
output2 = relay.Tuple([bop_4393,call_4398,var_4397,])
func_4403 = relay.Function([var_4397,], output)
mod['func_4403'] = func_4403
mod = relay.transform.InferType()(mod)
mutated_mod['func_4403'] = func_4403
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4404 = relay.var("var_4404", dtype = "float64", shape = (24,))#candidate|4404|(24,)|var|float64
func_4403_call = mutated_mod.get_global_var('func_4403')
call_4405 = func_4403_call(var_4404)
output = call_4405
func_4406 = relay.Function([var_4404], output)
mutated_mod['func_4406'] = func_4406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4076_call = mod.get_global_var('func_4076')
func_4077_call = mutated_mod.get_global_var('func_4077')
call_4479 = relay.TupleGetItem(func_4076_call(), 1)
call_4480 = relay.TupleGetItem(func_4077_call(), 1)
var_4483 = relay.var("var_4483", dtype = "float64", shape = (7, 12, 13))#candidate|4483|(7, 12, 13)|var|float64
bop_4484 = relay.divide(call_4479.astype('float32'), relay.reshape(var_4483.astype('float32'), relay.shape_of(call_4479))) # shape=(7, 12, 13)
bop_4487 = relay.divide(call_4480.astype('float32'), relay.reshape(var_4483.astype('float32'), relay.shape_of(call_4480))) # shape=(7, 12, 13)
bop_4493 = relay.maximum(call_4479.astype('int32'), relay.reshape(var_4483.astype('int32'), relay.shape_of(call_4479))) # shape=(7, 12, 13)
bop_4496 = relay.maximum(call_4480.astype('int32'), relay.reshape(var_4483.astype('int32'), relay.shape_of(call_4480))) # shape=(7, 12, 13)
func_1511_call = mod.get_global_var('func_1511')
func_1516_call = mutated_mod.get_global_var('func_1516')
const_4505 = relay.const([-10,-4,-8,-5,3,10,6,5,4,-9,9,-6,3,2,-2,5,-1,-6,-3,3,-7,-4,-6,4,-2,-1,-2,-9,-5,-4,-1,6,-10,-10,-5,9,-5,3,-1,-5,2,5,-1,1,-7,-2,6,10,-2,8,-3,-7,9,2,-9,-4,3,4,-6,-1,-2,1,10,-5,-2,-8,-8,-5,-7,9,-6,-6,4,2,-7,-5,5,-8,-9,-7,-5,-8,-10,-2,-2,2,5,6,7,3,10,-6,6,-1,-6,8,3,-4,8,1,-8,9,-10,5,2,5,6,10,3,6,8,-3,-9,6,-5,-9,-2,8,-3,1,-1,-1,6,-8,3,-10,-10,-3,-2,-8,8,1,8,-1,-2,-8,7,-9,-3,3,5,-6,-8,7,10,6,5,-7,7,-5,10,-2,-5,1,-2,-3,-10,3,9,-8,5,8,-3,4,3,-7,-5,4,-1,-7,1,-9,10,-9,-4,-10,2,1,-1,5,4,-10,2,8,-9,6,6,3,9,-7,-10,2,-4,-7,-7,2,-4,-10,-6,-10,5,7,3,-9,1,-5,-4,-2,9,-3,2,8,8,2,6,9,10,-3,5,3,-10,6,5,-4,9,-9,-3,-9,-4,-4,-3,-10,-10,-3,-6,10,7,4,8,-6,-5,8,-3,8,-7,8,7,2,2,2,-6,-6,10,6,-7,-5,-1,-8,-9,4,3,8,9,-5,7,-2,10,9,9,-10,-10,-7,-7,7,-3,3,-10,-6,-1,3,10,5,3,-2,9,-7,6,-10,-10,8,-8,1,-2,-9,8,2,-7,-8,9,3,1,-7,-3,-9,-5,-6,7,-1,2,1,3,-10,10,-1,9,7,1,8,-4,-6,-3,2,-10,1,4,-4,5,7,1,6,-9,1,-8,5,3,3,-4,7,9,-7,-10,-1,-6,-10,-6,8,-9,5,-5,1,2,5,-8,-1,10,1,-3,-5,-3,-6,3,-4,3,2,-2,6,-9,-1,5,8,-3,5,3,3,-7,5,-4,-4,10,5,-3,7,3,-10,3,-4,-7,2,-9,6,-5,7,1,8,-9,5,-3,-3,2,5,-9,2,5,8,9,3,-6,-7,2,-8,8,1,8,10,-7,-5,-3,4,1,4,-5,-7,-7,-8,10,10,-1,-9,-6,9,3,10,1,6,6,-3,6,2,4,4,9,-2,-6,-9,2,-6,2,-3], dtype = "uint64")#candidate|4505|(448,)|const|uint64
const_4506 = relay.const([[-4],[-8],[-3],[1],[10],[-3],[9],[-5],[5],[-1],[8],[3],[10],[5],[-7],[6],[9],[-10],[-1],[-2],[-2],[-5],[-5],[2],[-8],[8],[-10],[-9],[-8],[-2],[-7],[-6],[2],[-1],[-6],[5],[-10],[-9],[-3],[-6],[3],[-8],[-4],[5],[3],[-6],[-6],[9],[10],[-3],[6],[6],[-10],[-2],[7],[3],[-1],[-5],[8],[-6],[-7],[-3],[9],[-3],[5],[7],[5],[5],[10],[8],[5],[-9],[4],[1],[4],[-5],[2],[-6],[-2],[-1],[-6],[-8],[4],[8],[-3],[1],[-2],[4],[4],[10],[-7],[-9],[-6],[9],[5],[-7],[-8],[3],[8],[-6],[-2],[9],[-7],[1],[-10],[-9],[7],[5],[4],[-3],[6],[9],[-3],[-6],[6],[2],[-10],[1],[1],[9],[5],[8],[8],[7],[-9],[-1],[8],[-1],[-2],[4],[10],[5],[4],[-7],[8],[-8],[-8],[4],[2],[-7],[2],[8],[-8],[3],[-5],[-6],[-2],[4],[9],[-2],[-9],[-1],[-1],[-2],[8],[5],[-9],[-10],[-9],[7],[-1],[-8],[-5],[10],[6],[-2],[-4],[-4],[8],[7],[-7],[-6],[5],[-5],[10],[-8],[-6],[3],[-1],[-7],[6],[-3],[-2],[5],[-5],[6],[7],[10],[9],[-6],[-9],[9],[3],[1],[8],[2],[-9],[4],[4],[-1],[-2],[-10],[-10],[-10],[-8],[-7],[1],[6],[-1],[-9],[-7],[1],[-5],[-5],[-4],[7],[5],[6],[-10],[4],[3],[8],[-9],[-9],[1],[7],[8],[-4],[-3],[-4],[-7],[-5],[-10],[6],[5],[1],[1],[-1],[4],[-1],[7],[-3],[-6],[-8],[5],[-7],[2],[-3],[-1],[4],[10],[6],[-5],[-4],[-9],[5],[2],[9],[-4],[10],[6],[2],[-9],[2],[-7],[-10],[4],[-2],[2],[-9],[10],[-7],[2],[2],[-2],[5],[-2],[-7],[5],[3],[-6],[9],[-8],[10],[-7],[-1],[10],[1],[3],[-10],[-8],[2],[-4],[-10],[-8],[1],[5],[-5],[-10],[-3],[1],[6],[-3],[5],[-2],[10],[10],[1],[2],[-4],[-4],[8],[4],[-2],[-8],[3],[-8],[-5],[8],[6],[7],[-2],[-9],[2],[4],[-4],[9],[-10],[5],[7],[-5],[-7],[9],[-4],[1],[7],[-6],[-6],[1],[8],[4],[-6],[6],[-5],[-5],[8],[-3],[5],[-4],[1],[8],[5],[8],[-1],[-7],[-6],[5],[-3],[-7],[-3],[3],[6],[-6],[-9],[7],[8],[-7],[-1],[4],[4],[5],[4],[2],[-10],[-6],[-5],[6],[-4],[-10],[3],[-3],[5],[3],[5],[-10],[-1],[-8],[2],[2],[3],[8],[-6],[7],[9],[5],[9],[2],[-5],[9],[-4],[-8],[-3],[-10],[10],[-10],[-10],[9],[5],[10],[-7],[3],[-10],[-7],[-1],[7],[-7],[-2],[5],[7],[2],[6],[-6],[-9],[-3],[4],[-3],[-4],[-3],[10],[-1],[-1],[5],[-1],[5],[-4],[5],[-10],[5],[3],[-10],[7],[-3],[6],[4],[-2],[-6],[3],[6],[2],[2],[-8],[-5],[10],[-10],[7],[-2],[-3],[7],[-3],[-7],[6],[-7],[7],[-3],[-7],[-2],[-1],[-5],[-9],[8],[3],[2],[6],[-5],[-10],[3],[-8],[-5],[8],[-3],[-2],[-9],[-3],[6],[9],[8],[3],[-8],[-9],[8],[-9],[-5],[1],[-1],[7],[-3],[-10],[2],[9],[5],[-3],[10],[3],[4],[2],[1],[-3],[8],[6],[5],[5],[2],[2],[-1],[3],[9],[-9],[1],[8],[5],[-5],[1],[3],[-4],[-3],[10],[-6],[-5],[6],[9],[2],[-5],[-8],[4],[-10],[-6],[-5],[5],[-10],[-7],[-5],[-1],[1],[9],[-2],[7],[6],[-4],[6],[10],[6],[3],[7],[-9],[4],[-10],[-3],[1],[-6],[1],[9],[-9],[-10],[1],[10],[-2],[-9],[10],[-2],[3],[-3],[8],[-3],[-9],[-9],[7],[8],[3],[1],[-6],[5],[-9],[-4],[10],[-6],[-5],[-7],[6],[-1],[-1],[7],[6],[-5],[5],[-3],[7],[10],[2],[-3],[-1],[5],[-9],[-8],[2],[-3],[-10],[10],[8],[-7],[9],[6],[7],[2],[-10],[-10],[-3],[5],[-7],[8],[-2],[2],[-1],[-10],[-8],[-4],[6],[-5],[-5],[-10],[1],[6],[-7],[7],[-5],[3],[7],[-9],[-10],[9],[-5],[-4],[-2],[4],[5],[2],[6],[-1],[10],[8],[6],[3],[9],[-4],[-3],[6],[6],[1],[-1],[7],[10],[4],[-9],[10],[-7],[-5],[10],[-8],[9],[9],[-5],[-2],[-6],[-10],[7],[-5],[-9],[5],[-5],[9],[3],[-7],[-9],[-3],[7],[2],[6],[-6],[4],[-9],[5],[10],[-4],[4],[-7],[-3],[5],[3],[-7],[4],[-8],[-7],[-8],[-5],[8],[5],[-10],[7],[-9],[-3],[-4],[-9],[6],[-2],[-10],[-6],[-3],[-1],[7],[3],[-1],[-1],[3],[-3],[1],[-9],[2],[-3],[-9],[3],[3],[8],[-6],[7],[6],[-1],[10],[10],[-3],[8],[-10],[-10],[-4],[-3],[2],[-4],[9],[3],[2],[9],[1],[5],[-5],[7],[-7],[-4],[1],[-1],[9],[-1],[2],[-7],[9],[6],[-9],[-7],[6],[-2],[-8],[-9],[-3],[4],[-6],[-10],[-9],[-7],[-8],[3],[4],[9],[4],[-4],[2],[3],[4],[-7],[-4],[-2],[7],[7],[-4],[-8],[1],[-2],[-1],[-8],[8],[7],[-7],[-10],[-2],[-1],[-9],[9],[6],[-4],[2],[-5],[-3],[6],[9],[-1],[6],[-7],[-8],[-8],[-7],[7],[2],[1],[-3],[8],[-7],[8],[1],[6],[-10],[9],[6],[-2],[4],[-5],[9],[-6],[-1],[10],[-2],[-9],[1],[-8],[1],[-4],[-2],[-6],[-8],[3],[8],[-2],[3],[9],[7],[-7],[-6],[-7],[-2],[-1],[3],[-4],[8],[-3],[8],[-8],[-5],[3],[-10],[-1],[-2],[5],[5],[-6],[1],[9],[-5],[-8],[3],[-9],[7],[-9],[-8],[10],[5],[-5],[10],[-6],[6],[-1],[3],[10],[5],[1],[7],[-10],[7],[-9],[-2],[-5],[2],[5],[-1],[-8],[-4],[1],[-1],[3],[9],[3],[-6],[-2],[-2],[10],[-2],[2],[-4],[-6],[7],[2],[-3],[7],[4],[-9],[8],[10],[-6],[-8],[3],[-4],[-2],[9],[-5],[-3],[-10],[-4],[-7],[-8],[-2],[3],[8],[-5],[6],[-5],[-3],[6],[-7],[-3],[9],[-5],[-8],[2],[1],[-6],[7],[-5],[5],[-1],[5],[-3],[-5],[6],[-1],[6],[-7],[-1],[-1],[2],[-2],[-5],[2],[-4],[-1],[-9],[1],[7],[-9],[9],[5],[4],[-6],[7],[-7],[-9],[9],[-10],[3],[-7],[10],[-3],[8],[-8],[4],[-10],[5],[-1],[8],[-10],[6],[6],[3],[-6],[9],[-3],[9],[-2],[7],[-3],[9],[9],[7],[7],[-7],[10],[6],[1],[-9],[6],[-8],[1],[-6],[-4],[2],[5],[3],[5],[4],[-5],[7],[-6],[-1],[-2],[2],[10],[-8],[9],[3],[8],[-3],[7],[7],[-7],[-4],[-3],[10],[-3],[4],[1],[5],[8],[-2],[7],[2],[-1],[10],[-2],[1],[-9],[-4],[7],[-2],[2],[8],[-4],[5],[-4],[2],[-4],[-1],[-9],[6],[10],[-3],[-2],[1],[-8],[10],[1],[-5],[8],[-8],[1],[-8],[-4],[2],[1],[-7],[3],[8],[-6],[5],[-4],[-5],[-4],[1],[-2],[-6],[8],[-8],[4],[6],[-5],[-4],[2],[8],[-5],[-1],[9],[-5],[6],[-4],[-4],[1],[-8],[-2],[8],[8],[10],[6],[8],[-9],[8],[-3],[8],[1],[-3],[-4],[7],[6],[-6],[-8],[8],[-10],[1],[-4],[1],[-1],[5],[-5],[1],[9],[-10],[10],[-10],[-5],[-7],[-3],[-2],[-7],[10],[-10],[-5],[7],[7],[5],[7],[-4],[8],[-6],[-10],[-7],[5],[-6],[-2],[8],[4],[-10],[-10],[-1],[8],[-7],[-9],[-1],[4],[-7],[10],[5],[-1],[-2],[2],[2],[9],[5],[8],[10],[-3],[10],[7],[10],[9],[-10],[-9],[-4],[-4],[3],[6],[3],[9],[9],[-3],[3],[4],[-7],[5],[6],[5],[4],[-1],[-4],[5],[-10],[-5],[8],[-1],[1],[-6],[2],[-8],[-2],[-8],[-8],[6],[-9],[-8],[-9],[-2],[-6],[4],[-9],[3],[-2],[4],[8],[5],[-6],[10],[-8],[-6],[3],[-9],[9],[-5],[-8],[-10],[-5],[7],[-9],[-1],[7],[-9],[-9],[-9],[-9],[-3],[8],[-5],[5],[1],[9],[8],[-4],[1],[-10],[-2],[-10],[-1],[4],[-7],[2],[-3],[4],[-9],[-10],[-10],[-4],[4],[7],[-3],[10],[5],[-8],[9],[6],[-3],[8],[1],[6],[10],[-2],[6],[1],[6],[-7],[-7],[4],[-7],[10],[-2],[-3],[-7],[3],[-2],[-9],[6],[3],[9],[-1],[-1],[4],[5],[2],[10],[-9],[-10],[-9],[5],[4],[2],[10],[-7],[1],[-6],[-3],[-1],[7],[-6],[-8],[-10],[-9],[3],[-7],[2],[6],[5],[4],[-6],[9],[7],[8],[-10],[-4],[3],[5],[2],[4],[-3],[-2],[2],[-1],[-1],[-10],[9],[-10],[3],[4],[3],[2],[-3],[9],[-2],[-9],[-6],[2],[-8],[-5],[-9],[7],[-4],[4],[-4],[-1],[-10],[3],[1],[-7],[7],[-7],[-8],[10],[-3],[6],[-10],[10],[1],[-1],[6],[-4],[-6],[-10],[-10],[-9],[-4],[9],[7],[-9],[-6],[4],[7],[2],[-10],[4],[7],[-4],[4],[-2],[-2],[1],[-9],[-9],[2],[9],[-2],[-6],[7],[-8],[-2],[-4],[-10],[-4],[4],[-1],[4],[4],[4],[10],[-3],[6],[3],[4],[-9],[-8],[-5],[-10],[3],[-1],[9],[-3],[4],[6],[3],[4],[8],[1],[1],[1],[8],[-2],[2],[-1],[-5],[1],[-4],[7],[-2],[-8],[3],[-2],[1],[10],[9],[-5],[-3],[-1],[9],[1],[4],[-10],[-6],[8],[1],[4],[-7],[7],[-8],[-3],[10],[-3],[5],[7],[5],[1],[-10],[10],[9],[-4],[6],[-6],[-2],[3],[10],[8],[-6],[-3],[6],[8],[-10],[3],[-10],[-3],[-4],[1],[5],[-5],[10],[1],[-5],[-2],[-10],[3],[-6],[9],[8],[5],[-8],[-8],[7],[4],[-7],[-3],[6],[9],[-2],[4],[7],[-10],[-6],[1],[3],[-5],[8],[5],[3],[1],[8],[-6],[-7],[8],[7],[1],[-9],[9],[10],[-3],[-9],[3],[-4],[-5],[8],[6],[8],[-2],[9],[2],[4],[-2],[-4],[10],[2],[-6],[4],[6],[-8],[4],[7],[-1],[1],[9],[3],[-8],[7],[-10],[10],[5],[-5],[-10],[-10],[6],[9],[5],[-7],[-10],[10],[-10],[3],[10],[7],[-10],[-1],[-8],[-6],[7],[9],[6],[-3],[-4],[7],[-1],[-3],[2],[1],[5],[5],[7],[-2],[2],[5],[6],[3],[2],[2],[8],[-1],[-8],[2],[-10],[5],[4],[-3],[-6],[8],[-3],[-9],[9],[-10],[8],[8],[-1],[7],[-3],[3],[-3],[-1],[10],[8],[10],[-8],[-8],[-1],[-9],[-9],[-3],[4],[-6],[-7],[-9],[2],[-1],[-9],[-8],[-9],[-10],[1],[-1],[9],[3],[10],[-5],[-2],[-5],[-9],[9],[8],[-6],[-1],[1],[-3],[6],[-3],[6],[9],[-7],[5],[-3],[-2],[6],[-7],[-5],[-7],[10],[-5],[9],[-4],[-2],[1],[6],[-9],[-9],[5],[-3],[-4],[-10],[-6],[-4],[6],[-2],[-4],[7],[-3],[4],[8],[4],[-3],[2],[-8],[-8],[-6],[1],[-3],[-8],[10],[-8],[-10],[-4],[-7],[-8],[8],[-2],[6],[-10],[-1],[-7],[7],[10],[7],[-7],[-7],[-3],[3],[9],[-8],[2],[-1],[-7],[-10],[-3],[3],[7],[-10],[-10],[-6],[-3],[-3],[9],[6],[5],[-7],[7],[3],[6],[1],[4],[9],[-4],[2],[-5],[-10],[-1],[-3],[-8],[-2],[-2],[-9],[-8],[-5],[6],[4],[-9],[-3],[4],[-4],[6],[-7],[8],[9],[10],[8],[10],[-1],[2],[3],[-1],[9],[-3],[-3],[-10],[8],[-3],[-2],[5],[-5],[-5],[-7],[2],[3],[5],[1],[-4],[3],[5],[-6],[3],[2],[9],[6],[-9]], dtype = "uint64")#candidate|4506|(1800, 1)|const|uint64
var_4507 = relay.var("var_4507", dtype = "float32", shape = (1200,))#candidate|4507|(1200,)|var|float32
call_4504 = relay.TupleGetItem(func_1511_call(relay.reshape(const_4505.astype('uint64'), [16, 4, 7]), relay.reshape(const_4506.astype('uint64'), [1800,]), relay.reshape(var_4507.astype('float32'), [1200,]), ), 2)
call_4508 = relay.TupleGetItem(func_1516_call(relay.reshape(const_4505.astype('uint64'), [16, 4, 7]), relay.reshape(const_4506.astype('uint64'), [1800,]), relay.reshape(var_4507.astype('float32'), [1200,]), ), 2)
bop_4512 = relay.not_equal(bop_4484.astype('bool'), relay.reshape(call_4479.astype('bool'), relay.shape_of(bop_4484))) # shape=(7, 12, 13)
bop_4515 = relay.not_equal(bop_4487.astype('bool'), relay.reshape(call_4480.astype('bool'), relay.shape_of(bop_4487))) # shape=(7, 12, 13)
func_2532_call = mod.get_global_var('func_2532')
func_2534_call = mutated_mod.get_global_var('func_2534')
call_4520 = relay.TupleGetItem(func_2532_call(), 0)
call_4521 = relay.TupleGetItem(func_2534_call(), 0)
func_3152_call = mod.get_global_var('func_3152')
func_3154_call = mutated_mod.get_global_var('func_3154')
call_4532 = relay.TupleGetItem(func_3152_call(), 1)
call_4533 = relay.TupleGetItem(func_3154_call(), 1)
output = relay.Tuple([bop_4493,call_4504,const_4505,const_4506,var_4507,bop_4512,call_4520,call_4532,])
output2 = relay.Tuple([bop_4496,call_4508,const_4505,const_4506,var_4507,bop_4515,call_4521,call_4533,])
func_4542 = relay.Function([var_4483,var_4507,], output)
mod['func_4542'] = func_4542
mod = relay.transform.InferType()(mod)
var_4543 = relay.var("var_4543", dtype = "float64", shape = (7, 12, 13))#candidate|4543|(7, 12, 13)|var|float64
var_4544 = relay.var("var_4544", dtype = "float32", shape = (1200,))#candidate|4544|(1200,)|var|float32
output = func_4542(var_4543,var_4544,)
func_4545 = relay.Function([var_4543,var_4544,], output)
mutated_mod['func_4545'] = func_4545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4076_call = mod.get_global_var('func_4076')
func_4077_call = mutated_mod.get_global_var('func_4077')
call_4547 = relay.TupleGetItem(func_4076_call(), 2)
call_4548 = relay.TupleGetItem(func_4077_call(), 2)
var_4553 = relay.var("var_4553", dtype = "float64", shape = (1092,))#candidate|4553|(1092,)|var|float64
bop_4554 = relay.left_shift(call_4547.astype('uint16'), relay.reshape(var_4553.astype('uint16'), relay.shape_of(call_4547))) # shape=(1092,)
bop_4557 = relay.left_shift(call_4548.astype('uint16'), relay.reshape(var_4553.astype('uint16'), relay.shape_of(call_4548))) # shape=(1092,)
uop_4559 = relay.log10(call_4547.astype('float64')) # shape=(1092,)
uop_4561 = relay.log10(call_4548.astype('float64')) # shape=(1092,)
func_2532_call = mod.get_global_var('func_2532')
func_2534_call = mutated_mod.get_global_var('func_2534')
call_4567 = relay.TupleGetItem(func_2532_call(), 0)
call_4568 = relay.TupleGetItem(func_2534_call(), 0)
func_1020_call = mod.get_global_var('func_1020')
func_1024_call = mutated_mod.get_global_var('func_1024')
var_4575 = relay.var("var_4575", dtype = "uint8", shape = (143, 1))#candidate|4575|(143, 1)|var|uint8
const_4576 = relay.const([-10,5,5,-5,-4,-10,1,-7,9,4,5,-9,-4,1,7,-4,-3,6,-7,-4,9,-3,1,1,-5,9,8,1,4,-1,10,-10,6,-10,-5,6,-10,6,9,1,-2,-8,-10,-10,8,3,-9,-2,-9,8,9,-9,4,-10,5,-9,-4,5,5,-6,7,3,-4,-10,1,8,3,9,-5,10,-2,6,5,10,9,3,7,3,-2,4,-3,5,2,-3,5,-8,2,5,-7,7,10,1,7,1,-9,5,9,-7,-4,-7,-6,5,9,7,-4,-2,-6,4,-9,3,1,-9,5,-3,-8,7,-5,6,-2,-10,9,3,-4,-7,3,10,-7,6,7,-3,8,-1,-2,-9,-1,-1,2,4,-10,-1,-10,-6,-2,-10,-2,3,5,-4,-2,3,5,-2,7,-7,8,1,10,6,2,10,1,5,-9,2,4,-7,-9,-8,-6,7,-4,1,-10,6,4,-5,9,-10,-10,2,-8,-3,-7,-5,-7,-4,-1,-4,1,-2,-6,-10,8,5,-2,2,-5,7,7,4,4,-4,4,-5,-8,2,5,-8,1,3,-2,5,1,1,6,3,-7,5,6,10,9,5,3,-9,1,-2,-8,-2,9,-8,-1,4,-9,-1,9,9,3,-1,9,3,-3,-3,-1,1,-8,-6,-1,9,9,5,3,-5,-9,-3,8,8,-2,-4,8,7,-4,9,5,-5,9,-2,5,-9,4,3,-9,-3,4,7,3,-1,7,2,7,-6,-7,-1,6,7,1,1,-10,4,-2,-7,-3,1,8,3,9,6,-10,10,-4,-5,4,-6,2,10,8,-8,8,4,1,3,-7,-5,5,-2,-2,-3,-4,-3,-10,-8,-10,1,4,-4,-3,4,-6,-6,6,-10,-4,7,4,4,-10,-2,9,-6,1,9,-7,-5,-3,5,-8,10,-8,1,8,7,8,-8,-5,1,6,-1,2,-9,-6,6,9,-9,4,2,5,-10,9,1,6,-1,3,-9,-7,-10,5,6,-4,3,-4,10,4,-6,1,8,-1,-4,-2,-9,-3,1,-5,-2,-3,8,9,9,-9,-6,-2,2,7,8,-8,8,6,-9,-10,1,-5,-1,7,8,4,-10,10,2,5,7,-8,7,8,-6,-9,2,-8,-8,2,2,-2,2,2,1,7,5,5,-1,7,1,-6,10,3,-8,-8,1,-3,-3,-9,6,-2,-3,-2,2,-2,7,-6,-4,7,-6,-4,-4,-1,4,3,8,-1,-4,5,-4,9,-7,-8,-7,-4,-9,-9,-7,-4,-4,3,2,-3,8,-4,-7,2,9,-6,7,9,-8,3,-1,-6,-1,7,2,-2,1,3,-9,1,-6,-4,7,-1,4,-8,-8,-1,1,4,1,-4,-10,-8,1,-6,-8,-2,-6,8,6,6,-10,4,-7,5,-2,8,-7,10,-10,6,9,-1,-10,4,4,-1,8,-6,-4,3,-3,10,1,-7,-8,-9,3,-1,-8,1,6,-8,7,-1,6,-9,-7,8,-10,-1,8,-5,-9,-3,1,10,-6,-4,-6,-6,-9,1,3,-5,6,9,-3,6,1,8,-5,-9,-9,-4,6,-9,-2,-2,-2,7,-1,2,3,6,7,-5,-4,-3,-9,-10,-6,1,-9,-4,8,-9,-2,-2,8,8,-4,8,-9,-1,-8,3,-9,-4,5,-9,1,-3,6,-7,-5,-2,8,-5,2,5,-8,-6,3,5,-7,-3,10,-1,-1,-3,-1,-5,6,8,-7,-8,9,2,-1,10,-1,8,8,10,-8,-8,-9,-10,3,2,10,5,-3,1,-3,-4,5,8,3,-7,-2,-2,7,7,-1,-10,-9,10,3,8,4,10,5,-7,5,-9,-8,-9,4,-7,-5,6,3,7,-7,1,4,3,1,-8,-5,-5,-10,9,2,-9,-2,-2,8,8,2,-9,3,6,3,10,2,10,-2,6,-5,-1,-7,-2,10,-2,-1,9,-4,-6,10,4,3,-6,5,9,4,-6,2,-7,8,-3,10,-3,-8,1,6,1,-1,6,-8,5,6,-4,9,-9,9,-8,-5,-5,-9,-10,-4,-6,-8,1,9,8,7,-2,-3,5,-4,-3,3,3,-6,9,-5,-5,9,-9,-1,-4,10,5,8,7,1,2,-10,6,-7,6,-1,-5,4,-9,-4,3,10,9,-6,-1,-8,10,9,4,2,9,8,4,-9,-8,7,-7,7,-4,-2,-9,9,8,9,3,9,-5,-6,-2,-3,6,-10,-6,10,-10,-4,-3,-10,10,-3,3,4,3,-8,-3,-3,-10,5,-2,5,-7,2,-3,-3,4,-5,-9,4,7,5,2,10,-3,-7,9,-6,4,-8,-10,7,8,10,10,-9,3,-6,4,-6,-2,3,-6,10,8,-4,-1,-4,-4,-6,8,1,9,-6,-5,3,7,7,-6,-3,4,-5,-2,-4,3,3,5,-3,-3,-9,-3,-4,-10,-6,-9,-1,8,-10,6,9,5,-1,5,-5,4,5,-8,-10,1,5,4,-6,5,-3,1,-10,-1,7,4,-4,-7,8,9,6,-3,-1,8,-9,3,-1,3,1,2,-4,9,7,-7,3,-2,-8,-1,-1,-8,1,-4,8,-4,3,-6,-4,-5,2,3,-9,-6,9,-8,6,3,-9,-10,4,3,-1,6,-5,6,4,5,-6,2,10,-6,-8,-4,5,2,-9,9,-6,-7,8,8,-5,-5,6,8,7,-4,4,2,1,1,10,2,-6,7,-4,-4,-10,2,6,3,4,10,3,-7,5,4,7,1,7,-7,-5,-2,10,10,-1,-3,10,3,5,-8,8,-6,-10,-8,7,9,-6,6,2,6,-8,-10,-10,2,5,-6,5,-7,2,-3,-1,-10,1,5,-3,9,-7,10,4,-5,-3,1,6,3,3,7,-8,1,3,5,6,-9,-4,4,-2,-6,-1,-3,5,5,3,2,-6,-3,10,7,1,-10,-5,-3,-3,-4,-6,-1,4,-10,7,2,-6,4,-2,-3,9,10,-8,-2,3,-7,-2,3,6,7,-5,7,-4,1,-4,-3,-10,8,7,10,6,3,8,6,-9,-7,3,-8,-5,-5,3,-3,-10,-10,-2,8,-10,6,9,3,-6,-2,4,-6,-9,9,8,5,-6,-6,9,-4,7,8,5,-3,4,2,5,7,8,8,-2,5,-1,-4,-4,-1,10,6,3,-8,5,4,-5,-4,1,-2,-6,-10,-5,7,-5,-2,-10,-2,-10,-9,-8,4,6,-10,-9,-9,-7,-2,-3,4,9,-5,-6,1,7,10,-5,-1,-10,9,1,-8,8,3,-1,1,4,-9,5,8,-2,-7,1,-1,9,4,-9,-2,-2,-10,1,3,9,8,1,-6,-4,-3,3,6,3,5,2,-1,-2,7,2,1,-1,-3,-6,-9,-4,-3,-6,10,-1,-3,2,-9,-5,-8,-6,6,9,-2,-2,3,-3,2,9,9,9,-5,8,-5,-8,-9,9,4,9,-3,6,7,-4,7,5,1,1,-4,10,1,-10,4,10,-9,3,9,8,7,7,3,-1,5,-2,1,8,-2,6,2,-6,-4,5,-8,-1,4,10,-1,4,5,5,-2,9,5,-1,-1,8,-6,9,5,-1,-10,-8,4,-7,10,6,-6,7,10,8,5,-7,10,-6,-7,-4,10,6,-4,4,4,7,6,-3,1,10,-7,10,-4,-2,5,-8,10,8,8,9,1,3,-9,6,8,-8,2,4,-6,6,4,6,-9,-7,8,10,1,9,-2,2,8,8,-9,7,-1,-7,-9,9,7,7,-4,-5,2,7,-8,5,2,-9,6,-6,-8,-3,6,-7,10,10,-2,-10,-10,8], dtype = "uint8")#candidate|4576|(1430,)|const|uint8
call_4574 = func_1020_call(relay.reshape(var_4575.astype('uint8'), [1, 13, 11]), relay.reshape(const_4576.astype('uint8'), [10, 13, 11]), )
call_4577 = func_1020_call(relay.reshape(var_4575.astype('uint8'), [1, 13, 11]), relay.reshape(const_4576.astype('uint8'), [10, 13, 11]), )
var_4583 = relay.var("var_4583", dtype = "float64", shape = (1092,))#candidate|4583|(1092,)|var|float64
bop_4584 = relay.greater(uop_4559.astype('bool'), relay.reshape(var_4583.astype('bool'), relay.shape_of(uop_4559))) # shape=(1092,)
bop_4587 = relay.greater(uop_4561.astype('bool'), relay.reshape(var_4583.astype('bool'), relay.shape_of(uop_4561))) # shape=(1092,)
func_1990_call = mod.get_global_var('func_1990')
func_1997_call = mutated_mod.get_global_var('func_1997')
const_4591 = relay.const(-9, dtype = "uint16")#candidate|4591|()|const|uint16
var_4592 = relay.var("var_4592", dtype = "uint16", shape = (144,))#candidate|4592|(144,)|var|uint16
const_4593 = relay.const([7.858265,1.116826,1.095233,-6.576955,4.822956,-6.667645,-9.760570,5.041248,-4.663964,-3.309102,-5.947144,-6.770337,8.014264,4.725342,6.458615,-7.808139,-3.607831,-9.329610,-0.320553,-0.277864,-8.810286,-4.373178,1.299423,-3.607513,-0.621792,-9.483753,-1.701370,0.216331,-6.384662,-4.172985,-3.008139,-2.800393,-8.211959,-0.838421,-0.109491,-7.746188,3.123000,0.863786,1.469776,-3.392857,-0.770615,-6.079062,5.163771,-4.427732,4.767992,7.000793,8.923353,-9.515500,6.934281,-3.978052,6.113654,-3.272596,9.078705,6.729825,-8.053987,-6.363413,-1.001521,0.207964,9.417365,-8.790571,-7.331636,-4.071863,1.756430,-3.831614,5.466817,-7.094936,3.938288,6.157079,-7.865245,2.974770,-5.642606,-1.297307,7.126817,-3.784742,7.830141,1.260935,7.760139,-6.985321,-9.309828,1.248268,7.550391,-9.483824,-0.119093,-7.208732,-9.989031,3.195411,4.697204,-9.021327,2.187078,7.880320,7.497887,9.351166,-6.404344,7.596692,-0.472060,-3.275489,0.977633,-1.500151,-5.120477,-9.981962,0.198344,1.397105,6.771531,2.326844,2.391126,-5.439057,6.368418,0.168078,2.638771,-7.698585,8.239198,7.447236,2.611596,-5.404852,-3.420988,-2.769630,1.552029,2.000862,6.274728,4.055394,1.038902,2.770845,9.616632,5.362462,-1.434023,-8.690292,-3.910047,-2.770380,-6.150584,-7.149279,9.902343,-4.466888,-7.943901,-8.935518,-5.786488,-4.111391,7.552860,-3.609481,-7.161641,3.193635,5.574069,-0.576060,6.421464,6.868233,-6.536080,0.942458,-7.593186,-3.811775,0.163264,2.061221,-7.360261,4.107591,4.374408,6.920827,3.596497,-4.507208,-1.638555,6.367553,7.106731,9.877588,-0.496176,-2.391810,-5.537933,0.109525,6.555964,5.605404,6.245872,3.090105,-0.205852,-3.635028,1.295101,-0.616167,-3.214304,7.603928,-0.292101,4.678871,4.572894,-3.904412,-0.904989,9.010941], dtype = "float64")#candidate|4593|(180,)|const|float64
const_4594 = relay.const([[-9,10,-2,9,9,8,-7,9,3,-10,-8,-6,1,-9,-8,-7,-7,8,8,-5,-3,1,9,-5,2,7,8,-8,-3,-7,5,-10,1,-2,-5,7,10,-10,-10,3,-2,3,-4,-2,-2,-8,3,9,-5,-4,-10,10,3,-10,7,-4,-4,1,-9,-4,2,-8,-1,-8,8,9,-4,-7,-1,9,-10,8,-3,-1,2,5,-7,-8,10,5,7,-7,6,-2,-2,-6,-6,-8,3,-3,-5,10,1,-10,-1,10,-10,-3,-2,-5,5,-9,-6,-2,-6,-8,1,-3,-4,-3,8,5,10,-6,2,-7,5,-10,2,-1,-4,1,7,-8,-5,-5,4,-2,-9,-5,4,-8,9,-9,7,-1,-1,8,6,-8,-5,-5,3,3,8,3,-1,10,-8,-1,10,-7,4,-8,1,1,-9,7,4,5,8,-3,-10,9,1,-4,1,4,9,6,-8,-8,-3,-10,-4,8,-3,-1,5,1,-9,1,-8,-5,-6,7,-8,-2,9,-10,7,5,1,10,-7,6,-6,7,-1,-1,5,-3,-2,-6,7,3,3,3,-5,4,6,7,-8,-5,9,5,5,-7,-5,7,-10,-7,8,9,-4,5,-4,9,-9,10,-2,1,5,6,2,3,6,5,1,-7,-8,3,7,5,-10,-5,1,2,6,9,3,-10,-3,3,10,9,6,-1,7,10,-10,-10,3,-9,9,-6,2,-1,2,9,6,9,1,5,-5,-5,-4,-6,-6,5,-4,8,-7,-1,3,-1,9,2,-10,-9,-4,8,7,4,-2,9,-9,4,-5,5,6,-10,-5,-6,-9,-8,7,-2,3,-10,-4,2,7,9,10,2,1,-10,4,1,-3,10,-8,-6,2,-5,4,-10,-3,3,-5,1,10,-4,9,10,6,-2,6,-5,-4,5,-8,-1,5,6,2,8,9,6,9,8,10,2,-7,-4,-7,-3,5,-8,9,-10,1,2,-2,-6,6,6,5,2,7,5,7,1,-1,2,-4,2,2,3,-4,-7,-4,-6,3,1,4,-3,5,2,-2,-7,-9,-2,-4,-7,6,9,-6,-1,3,-6,9,1,-3,9,7,2,8,9,8,2,-7,-6,-8,-10,8,-1,7,-10,-4,6,8,9,3,-7,1,7,-2,1,-7,-2,-10,1,-4,-6,1,-10,-3,2,-7,8,-2,-6,-9,4,-9,-10,-1,6,3,2,5,2,2,-5,7,-5,-10,3,9,5,6,-6,-8,2,6,5,7,9,-1,6,-8,7,3,5,-7,-1,6,10,2,5,-6,-9,-10,-2,-3,-1,1,-8,5,-8,6,5,-9,-5,-5,-8,3,-3,6,-5,6,-1,-1,-3,4,9,1,1,-7,10,9,4,-5,-6,-2,1,5,5,3,-2,-9,7,3,1,-6,-3,-9,8,3,5,5,3,8,-5,6,-7,8,-7,6,2,-9,7,-1,-3,1,10,-6,3,3,-4,-5,7,9,-4,-2,-6,-1,-2,-10,-5,-7,-4,-9,8,6,4,4,-5,-5,-7,5,-9,-6,7,8,-6,10,-7,-10,-3,-6,10,-10,5,3,-2,5,3,4,9,5,-6,-7,3,5,-6,5,-5],[10,-10,-3,-1,8,2,-5,4,6,4,1,3,-3,1,4,3,-7,6,7,-8,1,-7,-1,-6,-10,-2,-8,-1,5,-9,7,2,-8,3,6,-10,-3,3,7,1,-10,10,-10,-8,-10,-4,2,-2,4,6,9,5,3,4,-9,-9,9,-8,-8,-2,7,9,1,8,7,3,9,7,-8,-4,-7,-8,10,-5,-4,9,4,9,-7,1,2,-1,-4,3,-9,-10,7,3,4,8,-5,-9,2,4,-6,7,-9,-7,5,8,8,-10,-8,4,1,1,-8,-4,-8,-2,-3,10,-7,6,8,8,2,3,-1,1,9,-7,-2,-7,-1,-3,-10,-6,-10,9,-6,4,-6,-7,5,8,-2,1,10,-2,-9,-3,8,5,2,5,-2,-6,-7,-5,1,-6,-10,6,-7,1,3,-6,-3,-8,7,-3,-4,9,-9,6,10,4,-1,2,-9,5,-6,3,-3,4,-6,-3,5,-2,6,6,-1,6,3,9,8,5,6,3,1,-3,4,7,-6,4,8,8,2,-9,-9,-6,4,-8,1,2,-9,-1,1,-10,9,-10,4,6,9,1,-6,2,-10,10,4,-5,7,5,2,-4,1,-7,10,-1,3,-7,-10,-8,-3,-2,-2,-1,-3,-6,4,-7,4,10,-9,4,-4,10,-2,-4,9,-4,-5,10,1,-2,-6,10,4,5,-10,7,10,7,8,-8,9,9,-5,1,-7,-1,-3,4,-2,3,9,-5,7,-10,-5,-5,-10,-8,5,1,6,8,6,9,2,7,1,-10,-5,-5,-1,-5,-5,4,-6,-6,10,2,-6,3,4,-9,3,3,-10,-8,-1,1,-8,7,-3,-6,7,-8,-10,2,2,-9,1,-5,-2,-3,8,10,1,1,2,-7,-7,1,8,1,7,7,2,10,-4,9,-8,-9,-6,-5,10,-7,-8,4,4,-8,-7,-10,6,5,6,4,-4,-5,5,-1,1,-2,6,7,-3,-4,9,-9,3,-6,1,5,5,6,-9,7,-4,-10,-4,4,-1,8,-10,6,-5,4,-4,-9,-10,-1,3,2,-6,8,9,-7,-8,-4,-6,-6,5,-6,1,-10,-2,2,8,3,-6,3,-4,-8,9,-3,-4,-5,10,-10,7,-4,2,6,-1,5,1,5,-10,10,-6,-4,3,-9,-1,6,10,8,-9,5,3,-7,10,2,4,-9,6,-1,3,1,-1,-1,-10,-5,3,-1,2,3,-2,1,-8,6,-6,-2,-7,4,-2,8,-1,-5,5,-3,3,-10,-2,1,-3,-3,-6,-9,-7,-10,7,-5,5,5,3,8,3,-1,10,6,-10,6,5,8,10,5,10,-8,-9,4,10,-9,1,-1,-3,8,-7,9,2,5,7,-9,-9,9,-9,-1,-6,-3,10,2,10,-9,4,8,5,-8,-3,-9,-4,-10,3,10,-2,8,7,-9,2,2,6,-4,5,-5,-8,3,-3,3,-6,5,7,2,-5,-1,-9,-7,-4,5,-2,10,-5,2,-9,3,-9,3,-4,-2,-8,-8,-5,-1,5,-10,8,-6,6,10,4,-9,2,1,-9,-4,5,3,8,-10,-9,7,4,-10,-3,4,-4,8,-6,-1],[-3,3,9,-7,9,-8,-10,6,10,4,6,1,-2,-7,10,-7,-3,1,6,8,7,-4,5,-3,-5,10,-7,-1,-10,1,-6,-2,-9,-2,-1,2,8,-7,7,-8,8,-4,-9,-6,-3,10,5,10,-7,1,-3,-7,3,2,3,10,7,6,1,4,9,5,6,-10,-8,-10,-7,1,-1,8,4,5,6,-9,3,2,9,-8,5,-9,-2,-5,8,-9,-1,-2,8,10,9,8,-7,4,10,-3,3,-9,5,-5,9,1,-10,-9,-2,-2,-10,-1,-3,-3,8,-7,9,7,9,6,-6,2,-2,6,-9,3,9,6,-10,6,-4,10,-10,-9,8,10,2,10,2,8,-4,-3,-6,6,6,5,-6,5,-3,-8,-10,7,-10,-6,2,-8,-8,1,7,-1,1,5,2,-5,4,7,2,8,2,-6,9,-3,4,10,-3,-4,-6,2,-9,-4,-10,1,-7,-6,2,-3,8,9,-2,-1,9,-9,-4,-4,8,10,-10,-2,9,-6,-9,-1,9,-9,8,-3,-7,3,-3,-8,4,1,-8,-1,-2,-7,7,10,-7,-6,10,3,4,-9,-2,10,-5,-10,-5,-10,-9,9,-5,4,7,1,1,-3,2,2,10,-2,4,-8,2,-7,6,-6,5,7,10,-7,3,-6,5,9,-1,-10,2,5,7,4,7,6,-2,2,-10,2,3,8,-7,3,7,-2,-1,-4,8,4,10,5,-3,-3,-8,-6,-5,8,1,-8,3,1,9,-4,5,-10,10,-8,-2,7,8,-10,-10,-4,8,-1,-4,-6,-8,-7,8,8,5,-10,9,-7,-1,-9,-7,-3,-5,-5,9,-1,2,9,-7,8,5,9,5,10,-6,10,1,8,8,-4,-5,-3,5,8,1,6,-6,-1,-4,1,-9,3,4,6,3,8,-7,8,5,7,-4,3,1,-10,-6,-5,2,6,7,8,4,-1,-7,6,-3,-7,8,-6,5,-4,-9,-9,-6,8,7,-3,-2,-3,-3,2,-1,-4,10,-10,6,-7,2,7,-10,-1,-3,-9,9,5,-10,10,5,-2,2,1,3,-6,-5,-3,9,2,-10,-6,-3,-3,-9,4,-4,10,-8,7,-8,-8,-5,-8,7,-6,-10,-6,-7,-6,1,-2,-6,-3,1,8,1,4,9,2,-3,10,5,8,4,-8,-6,10,-3,8,2,-5,2,-3,-5,-4,5,4,2,2,8,3,-2,-5,7,-9,9,-6,-5,-9,-5,-9,-9,-10,6,8,-6,7,-5,3,8,-3,-7,-8,-7,3,4,-2,-6,5,-6,8,-4,-10,-1,-1,4,-8,2,-3,4,2,-1,-2,-9,-1,-10,7,-5,-2,-9,-5,-6,3,-8,-10,-6,4,-7,4,-3,-10,-5,-8,-3,9,5,6,9,-3,10,3,6,-1,4,-8,2,4,5,10,-4,4,4,-5,1,-2,-1,-5,2,9,-3,7,-5,5,-2,-1,-5,-8,-3,6,2,5,2,-10,7,-4,-4,-8,-9,10,7,8,4,-2,10,3,5,5,7,6,5,-4,9,10,4,-1,-1,4,-8,4,-6,2,-6,-1,-4,-7,-6,-8,3,-5,7,-10,7,-6]], dtype = "uint64")#candidate|4594|(3, 600)|const|uint64
call_4590 = relay.TupleGetItem(func_1990_call(relay.reshape(const_4591.astype('uint16'), []), relay.reshape(var_4592.astype('uint16'), [2, 72]), relay.reshape(const_4593.astype('float64'), [2, 9, 10]), relay.reshape(const_4593.astype('float64'), [2, 9, 10]), relay.reshape(const_4594.astype('uint64'), [1800,]), ), 6)
call_4595 = relay.TupleGetItem(func_1997_call(relay.reshape(const_4591.astype('uint16'), []), relay.reshape(var_4592.astype('uint16'), [2, 72]), relay.reshape(const_4593.astype('float64'), [2, 9, 10]), relay.reshape(const_4593.astype('float64'), [2, 9, 10]), relay.reshape(const_4594.astype('uint64'), [1800,]), ), 6)
const_4610 = relay.const([[10,9,-4,-5,6,-9,-7,5,-6,-7,-10,-3,-8,-5,3,10,9,-7,-10,3,4,-9,5,-3,6,10,-4,8,-3,-6,-6,10,-8,8,1,3,3,6,-5,-3,-8,10,7,-4,10,-5,-6,2,5,-1,-1,-10,6,6,-5,-4,-1,-5,-2,-9,8,-9,-10,-10,2,1,-6,10,9,5,5,8,-4,6,-3,10,-8,8,1,5,9,-7,-9,9,4,-3,-3,-7,-4,-7,-8,8,6,-6,-4,-2,-8,-2,-7,4,-6,2,-8,8,-2,10,-2,5,-4,6,-3,3,-7,-8,-7,-8,1,-2,-9,-2,-5,-8,-3,-4,-4,-7,9,8,-6,-2,1,5,10,-3,-8,-7,-1,10,7,-1,6,-8,1,-5,-4,-9,7,-9,3,-3,10,6,6,-3,3,6,3,8,-3,2,-8,-2,-7,1,2,-3,-5,-2,-6,-5,-1,8,-8,2,9,-9,-5,3,10,1,9,4,10,8,5,5,-8,-3,-1,-8,-7,7,-7,-1,6,9,-6,3,1,4,-7,-3,5,-1,-9,7,7,-5,6,-1,9,-8,-5,3,-4,-3,9,4,-9,10,-8,-3,3,-1,-7,-1,-4,-5,2,6,-6,-5,-4,1,-7,-3,-10,-2,-8,1,-7,4,-1,-10,-7,-9,5,10,-4,-5,1,-8,6,-3,-2,10,9,1,-10,-5,9,-2,9,-6,-2,-5,-8,-6,-2,-9,-5,8,-2,4,-1,-1,-2,-5,-6,5,1,-2,5,-3,9,3,-10,8,9,-4,-2,1,9,-6,-6,-4,10,-5,-6,-2,-2,-8,8,-4,1,-9,6,-8,5,-9,-4,-9,-9,-1,-5,-9,-2,9,5,8,5,9,-7,-6,9,-5,-10,-9,-9,5,5,-8,1,6,-3,3,2,-7,7,1,-1,-2,1,2,-4,-1,-1,4,6,-1,4,7,6,-5,7,2,4,-1,-5,-2,-1,6,4,5,9,9,10,9,9,-10,10,8,-3,-7,-1,-9,-4,4,6,7,7,-9,3,-2,10,1,-3,-3,8,-9,1,-3,1,-4,-9,2,-9,3,-9,-4,-9,10,-4,10,-1,10,5,8,3,4,-2,-7,9,3,-9,8,4,1,1,1,-2,-5,-6,-4,-2,8,9,5,7,8,6,3,-6,-1,8,8,-3,-7,-5,-8,1,10,-3,-10,4,-6,3,-2,6,3,-5,1,5,7,-1,8,-10,4,5,4,9,10,1,-1,5,-10,7,8,-1,6,1,4,2,7,-1,7,-4,3,8,2,-8,-4,6,-10,9,9,-8,3,2,-9,2,-4,-4,-2,1,-4,8,5,-9,3,1,-8,-8,10,1,-2,9,9,-2,-4,7,-3,7,3,3,4,1,-2,4,-8,5,-10,-7,-6,4,-4,-1,7,5,3,-7,3,-10,-4,10,1,-1,10,2,7,-7,6,-9,5,3,3,5,-6,2,-9,-2,-8,1,-3,3,8,2,-9,7,5,9,9,-4,1,7,-8,2,3,3,8,-7,-7,2,-10,-7,-8,2,2,-4,-4,5,-1,-10,-2,-2,1,7,-8,4,-8,2,-9,5,10,6,-10,8,10,6,4],[-2,-7,3,-10,1,5,-3,-8,8,6,4,7,-9,-3,-10,-3,10,-5,-5,-7,10,2,8,2,7,-2,-5,-4,-9,-9,2,3,-4,-4,-3,7,-6,-9,-8,2,10,-8,-4,-1,-1,-2,-4,6,3,-9,2,-10,-7,-5,-9,-4,-3,-3,-7,2,5,-3,-8,9,9,-10,5,1,10,-1,-5,7,7,4,6,-4,-9,2,-5,3,-8,-7,4,7,4,-2,-10,6,8,-5,-6,-5,-5,-4,-7,-6,-9,-8,-1,-6,10,5,-6,-9,-10,9,5,-5,-3,3,-6,-3,-2,-10,5,-9,4,8,4,4,-4,-2,-9,9,5,-1,1,-8,6,-7,5,-7,9,-9,-5,-6,6,-7,-6,6,-8,-6,1,-3,3,-10,-5,7,4,-6,-7,-7,-4,-9,-1,-4,3,10,-4,-3,-3,5,-9,2,6,-2,10,-7,4,-5,-10,5,-10,9,8,-3,4,8,10,-9,-8,3,-2,4,-6,-2,9,2,-2,3,3,-10,-6,2,-8,4,4,4,10,2,9,4,1,7,-9,3,8,10,-4,10,5,-8,3,-3,-1,7,-8,6,-9,5,5,9,-3,-5,-1,-1,-1,3,10,-5,2,-9,-4,-10,-9,-10,-4,10,-8,-6,-2,-5,-5,-4,-6,-6,-4,-9,-3,1,5,-8,10,6,-5,-5,7,-7,-10,-7,-4,7,1,4,8,-6,9,-1,4,-5,10,-3,1,1,-2,2,-3,-2,6,6,5,6,-8,1,4,8,-7,3,2,1,-2,10,3,-10,1,-2,10,10,-5,-1,-8,-5,1,-5,9,8,1,9,-1,-3,-6,1,-5,7,4,10,-6,-1,10,1,3,3,7,-8,-2,5,7,6,-8,1,1,-8,-6,-6,-4,-10,-8,1,-4,6,-9,5,-6,8,-4,-8,2,-3,-4,7,-10,4,-9,-3,-1,10,-9,-6,6,1,-4,-6,-6,5,2,7,-10,-7,-4,-3,-9,-5,-7,-5,6,4,8,6,-3,-3,4,6,-9,-2,-5,-9,5,-5,6,7,8,2,5,10,-9,-2,1,7,-3,4,-2,-2,-7,-1,-7,-5,-2,-2,4,-5,-3,8,-5,5,-3,-5,1,4,-4,-1,7,-7,4,6,-1,3,-9,9,7,1,-2,7,-6,3,9,-3,1,-5,-1,-3,3,-8,6,-6,1,2,-6,9,9,-1,6,-5,6,-10,-1,1,6,4,-7,4,8,1,5,5,10,4,-10,10,7,2,2,1,3,1,-8,5,-9,1,6,7,9,-1,10,-4,-1,6,10,-3,-7,-2,-9,2,-3,1,-8,-5,-2,8,8,-1,-10,4,6,-4,2,-7,-5,9,3,-7,-10,8,9,-6,-9,7,5,1,1,-4,3,3,4,6,-4,8,7,8,3,-2,2,-4,-1,10,-2,4,-10,5,-1,-1,6,-10,5,-9,-3,-1,-10,-6,1,4,10,1,7,4,-7,-2,2,5,2,-8,-5,-4,5,10,3,9,4,-3,-6,-8,2,5,3,-3,-4,-2,9,5,-5,8,-9,-1,-7,-3,-3,-5,2,-1,9,-10,5,1,-7,8,1,9,-4,-4,-9,3],[9,-9,7,-4,3,9,-7,2,5,7,5,-8,8,-2,-9,1,3,9,-9,8,8,-10,6,-10,-3,8,4,-8,8,-1,5,6,-1,9,9,-4,5,-1,-9,3,-9,9,-7,-6,-9,5,-9,1,6,-2,9,2,-3,4,-8,-1,8,-10,10,-3,3,2,-8,3,-5,1,-2,-10,9,-4,-3,-4,8,-7,8,-7,5,-2,-2,-1,10,3,-6,-7,-6,-10,10,9,7,-6,3,5,-1,-5,2,10,-7,-5,5,-7,-5,-8,-10,2,-1,2,10,-6,-4,5,-6,-9,-7,5,8,-3,-9,-7,5,8,-6,2,10,8,-8,4,-8,-8,-7,9,4,-8,10,-6,5,-3,-6,6,4,4,4,7,-8,7,7,-1,-7,-6,4,-1,7,9,-8,3,-8,-3,2,-6,-4,-8,-10,-10,9,1,-9,4,8,-1,-8,-8,1,1,-3,4,2,8,10,-9,5,2,-4,-2,-10,9,-9,-6,-2,4,4,5,-7,-9,1,5,8,10,6,2,-6,3,10,8,6,9,7,7,-5,2,-4,1,-6,2,4,-7,-9,-8,10,2,5,8,-3,7,-3,3,-3,9,-5,1,-7,10,1,-4,3,8,7,-9,5,10,2,-7,-8,-6,7,4,8,-9,-3,9,-1,3,5,8,-9,-9,-2,10,1,6,-5,-2,-6,3,6,-5,-1,4,-2,7,1,-4,2,-4,2,-1,-8,-4,-7,-4,-1,9,9,1,6,-5,-3,9,-7,-8,-10,-7,-3,-5,-8,-5,-7,-2,-10,10,-10,-2,-5,10,-3,-10,9,-3,8,5,6,4,4,2,8,9,-6,-3,-5,5,-3,-3,2,-7,6,4,-3,7,-6,-3,-8,4,-5,-7,2,-8,-6,-9,9,-7,-1,-8,1,2,-2,-2,7,-6,-3,-5,-4,-1,-6,-7,8,3,-6,2,4,-5,-10,1,-2,-2,-2,1,-1,-6,-3,-5,10,-10,7,-6,-7,1,9,-7,-1,-8,-7,10,-3,7,1,9,-8,-10,1,7,-6,-5,10,-5,-2,-3,2,-7,10,-1,5,-4,8,-9,-9,-7,5,-7,-6,6,-5,-7,10,2,-9,3,-2,7,3,1,2,-7,1,-10,6,5,4,-8,5,8,-2,7,10,-6,-2,4,-4,-1,-5,-2,-8,2,-10,-8,-10,-10,-7,-8,5,-9,2,2,-4,-1,-5,-2,1,-5,-4,-5,-1,-9,-3,7,-3,-4,-10,1,9,-5,-6,-5,10,-7,7,1,8,-6,10,-9,-10,10,-7,-5,4,1,6,-8,-8,-3,8,2,-5,-6,-2,10,8,-3,10,3,10,5,-10,4,-7,-2,10,-10,4,10,3,-9,9,-7,-4,2,-4,1,7,3,-10,-8,1,-5,-3,3,6,-6,8,3,-4,5,1,4,-1,3,-4,-4,-8,3,6,9,10,9,1,-9,9,6,1,-2,-9,-6,6,1,8,9,-8,10,-6,-5,2,-3,-9,5,-9,4,1,-2,-9,3,6,3,-10,3,1,2,-3,6,-6,-2,5,-4,6,-5,10,2,2,2,-8,10,5,3,-9,-10,10,-9,-7,-5,-8,8,10,3]], dtype = "uint64")#candidate|4610|(3, 600)|const|uint64
bop_4611 = relay.bitwise_xor(const_4594.astype('uint8'), relay.reshape(const_4610.astype('uint8'), relay.shape_of(const_4594))) # shape=(3, 600)
output = relay.Tuple([bop_4554,call_4567,call_4574,var_4575,const_4576,bop_4584,call_4590,const_4591,var_4592,const_4593,bop_4611,])
output2 = relay.Tuple([bop_4557,call_4568,call_4577,var_4575,const_4576,bop_4587,call_4595,const_4591,var_4592,const_4593,bop_4611,])
func_4627 = relay.Function([var_4553,var_4575,var_4583,var_4592,], output)
mod['func_4627'] = func_4627
mod = relay.transform.InferType()(mod)
var_4628 = relay.var("var_4628", dtype = "float64", shape = (1092,))#candidate|4628|(1092,)|var|float64
var_4629 = relay.var("var_4629", dtype = "uint8", shape = (143, 1))#candidate|4629|(143, 1)|var|uint8
var_4630 = relay.var("var_4630", dtype = "float64", shape = (1092,))#candidate|4630|(1092,)|var|float64
var_4631 = relay.var("var_4631", dtype = "uint16", shape = (144,))#candidate|4631|(144,)|var|uint16
output = func_4627(var_4628,var_4629,var_4630,var_4631,)
func_4632 = relay.Function([var_4628,var_4629,var_4630,var_4631,], output)
mutated_mod['func_4632'] = func_4632
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4653 = relay.var("var_4653", dtype = "float64", shape = (5, 4, 14))#candidate|4653|(5, 4, 14)|var|float64
uop_4654 = relay.atanh(var_4653.astype('float64')) # shape=(5, 4, 14)
const_4656 = relay.const([[[2.904885,9.240975,2.407544,4.645481,-8.257652,1.849110,9.483102,-9.975204,1.078915,-1.135464,-9.551032,7.864056,8.523718,9.452372],[8.518023,-7.562829,-1.098472,-4.026629,0.272292,-5.037880,-1.580304,-0.131440,2.273504,-7.060904,-3.395116,-3.719970,7.294250,0.151540],[5.448801,-6.348412,1.445918,-1.566081,-7.627631,9.851860,-3.493927,-1.329202,7.154456,9.931279,5.441454,-4.396441,-5.385320,3.376390],[-2.774128,-4.546024,8.542521,-6.861308,5.713882,9.075804,-5.154920,9.679648,-9.240628,0.882753,-9.879609,-7.463491,2.529798,9.765548]],[[4.715806,1.679746,6.639183,-8.446194,-6.657649,5.174729,7.799122,-2.597739,8.475242,-5.805279,1.853801,-9.912949,-6.383718,5.546576],[5.243518,9.044327,7.069452,-6.364024,-4.442676,-5.908549,1.095812,0.028945,-9.216494,-7.934314,8.580246,1.737379,2.431154,9.666264],[-9.565345,8.947451,0.147157,-8.952299,1.544473,-8.985739,2.001079,-6.021219,-9.614351,1.712149,5.230791,0.292159,1.133080,6.178635],[-5.457402,-7.232756,-5.541332,-0.568528,2.718785,-4.279700,3.401233,-2.319527,7.565717,6.146519,-5.255171,-8.504217,4.819227,7.737235]],[[-4.948219,3.193309,5.633537,3.746183,1.087361,3.051549,4.386034,7.436080,-3.436401,9.975018,-4.262641,-3.268437,-2.410998,8.531602],[-3.954239,-1.290215,5.270929,2.904406,6.660236,-1.318295,-4.684546,4.837038,-9.589538,-2.486990,2.693370,-1.475578,-5.674437,-0.359299],[-4.392469,-9.824321,-3.386241,5.603707,-9.734830,-0.057605,-8.574182,-2.678289,0.841456,-9.780793,-9.645761,-8.020175,-8.692207,-9.300321],[4.541332,3.684344,-0.717488,-3.573166,-9.183553,-1.205822,-9.064697,8.072162,-8.395220,9.907560,5.652797,6.797879,-6.216645,1.871201]],[[-7.030880,-7.392646,1.053645,0.523162,8.951872,-3.962336,-8.849721,1.288482,-8.970259,4.332061,-2.681580,-6.326310,-8.795468,-7.076310],[5.096366,0.719817,4.384513,-8.335481,-8.403788,-8.747099,9.151775,9.846893,4.271519,0.777605,7.197685,-8.829668,3.747431,-2.341462],[-5.839242,7.938295,-7.362529,-3.925936,-4.620703,-0.409294,-3.770740,-9.134721,-0.403414,1.419899,-7.011332,7.473201,9.967410,-7.040763],[-2.067670,-4.563724,0.474125,-1.381397,5.004897,6.593231,5.702574,-4.365268,-1.993686,-3.282772,-1.277400,-3.732714,-3.264908,4.874863]],[[-4.092715,-4.091497,-9.725154,9.954947,-7.949819,3.560116,-8.017546,6.695765,5.955308,-3.283222,8.471987,-6.069488,-2.556612,-6.134581],[-7.175736,4.711781,8.721784,4.069142,-4.792216,8.604768,-5.091086,-4.826843,8.905112,5.078941,8.477416,-7.484254,-3.087964,9.725946],[-1.805543,8.322733,2.180751,4.077106,-6.592427,-9.585504,7.463672,-2.685521,-4.032366,3.116250,-6.816955,-9.635427,-6.973944,-9.995375],[0.924241,9.485673,-3.423146,-6.737491,1.354948,-4.504828,-6.955498,1.620653,7.874368,-3.715603,-0.210215,9.148723,-6.796102,3.254772]]], dtype = "float64")#candidate|4656|(5, 4, 14)|const|float64
bop_4657 = relay.not_equal(var_4653.astype('bool'), relay.reshape(const_4656.astype('bool'), relay.shape_of(var_4653))) # shape=(5, 4, 14)
output = relay.Tuple([uop_4654,bop_4657,])
output2 = relay.Tuple([uop_4654,bop_4657,])
func_4661 = relay.Function([var_4653,], output)
mod['func_4661'] = func_4661
mod = relay.transform.InferType()(mod)
var_4662 = relay.var("var_4662", dtype = "float64", shape = (5, 4, 14))#candidate|4662|(5, 4, 14)|var|float64
output = func_4661(var_4662)
func_4663 = relay.Function([var_4662], output)
mutated_mod['func_4663'] = func_4663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2230_call = mod.get_global_var('func_2230')
func_2231_call = mutated_mod.get_global_var('func_2231')
call_4680 = relay.TupleGetItem(func_2230_call(), 0)
call_4681 = relay.TupleGetItem(func_2231_call(), 0)
func_3275_call = mod.get_global_var('func_3275')
func_3278_call = mutated_mod.get_global_var('func_3278')
call_4685 = relay.TupleGetItem(func_3275_call(relay.reshape(call_4680.astype('int16'), [2, 7, 3])), 0)
call_4686 = relay.TupleGetItem(func_3278_call(relay.reshape(call_4680.astype('int16'), [2, 7, 3])), 0)
output = relay.Tuple([call_4680,call_4685,])
output2 = relay.Tuple([call_4681,call_4686,])
func_4694 = relay.Function([], output)
mod['func_4694'] = func_4694
mod = relay.transform.InferType()(mod)
mutated_mod['func_4694'] = func_4694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4694_call = mutated_mod.get_global_var('func_4694')
call_4695 = func_4694_call()
output = call_4695
func_4696 = relay.Function([], output)
mutated_mod['func_4696'] = func_4696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2913_call = mod.get_global_var('func_2913')
func_2914_call = mutated_mod.get_global_var('func_2914')
call_4708 = func_2913_call()
call_4709 = func_2913_call()
func_4335_call = mod.get_global_var('func_4335')
func_4337_call = mutated_mod.get_global_var('func_4337')
call_4710 = func_4335_call()
call_4711 = func_4335_call()
output = relay.Tuple([call_4708,call_4710,])
output2 = relay.Tuple([call_4709,call_4711,])
func_4714 = relay.Function([], output)
mod['func_4714'] = func_4714
mod = relay.transform.InferType()(mod)
mutated_mod['func_4714'] = func_4714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4714_call = mutated_mod.get_global_var('func_4714')
call_4715 = func_4714_call()
output = call_4715
func_4716 = relay.Function([], output)
mutated_mod['func_4716'] = func_4716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2521_call = mod.get_global_var('func_2521')
func_2522_call = mutated_mod.get_global_var('func_2522')
call_4724 = func_2521_call()
call_4725 = func_2521_call()
output = call_4724
output2 = call_4725
func_4730 = relay.Function([], output)
mod['func_4730'] = func_4730
mod = relay.transform.InferType()(mod)
mutated_mod['func_4730'] = func_4730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4730_call = mutated_mod.get_global_var('func_4730')
call_4731 = func_4730_call()
output = call_4731
func_4732 = relay.Function([], output)
mutated_mod['func_4732'] = func_4732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2913_call = mod.get_global_var('func_2913')
func_2914_call = mutated_mod.get_global_var('func_2914')
call_4780 = func_2913_call()
call_4781 = func_2913_call()
func_1003_call = mod.get_global_var('func_1003')
func_1006_call = mutated_mod.get_global_var('func_1006')
var_4785 = relay.var("var_4785", dtype = "float64", shape = (1274,))#candidate|4785|(1274,)|var|float64
call_4784 = relay.TupleGetItem(func_1003_call(relay.reshape(var_4785.astype('float64'), [7, 14, 13]), relay.reshape(var_4785.astype('float64'), [7, 14, 13]), ), 3)
call_4786 = relay.TupleGetItem(func_1006_call(relay.reshape(var_4785.astype('float64'), [7, 14, 13]), relay.reshape(var_4785.astype('float64'), [7, 14, 13]), ), 3)
output = relay.Tuple([call_4780,call_4784,var_4785,])
output2 = relay.Tuple([call_4781,call_4786,var_4785,])
func_4787 = relay.Function([var_4785,], output)
mod['func_4787'] = func_4787
mod = relay.transform.InferType()(mod)
var_4788 = relay.var("var_4788", dtype = "float64", shape = (1274,))#candidate|4788|(1274,)|var|float64
output = func_4787(var_4788)
func_4789 = relay.Function([var_4788], output)
mutated_mod['func_4789'] = func_4789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_4812 = func_3976_call()
call_4813 = func_3976_call()
output = relay.Tuple([call_4812,])
output2 = relay.Tuple([call_4813,])
func_4816 = relay.Function([], output)
mod['func_4816'] = func_4816
mod = relay.transform.InferType()(mod)
mutated_mod['func_4816'] = func_4816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4816_call = mutated_mod.get_global_var('func_4816')
call_4817 = func_4816_call()
output = call_4817
func_4818 = relay.Function([], output)
mutated_mod['func_4818'] = func_4818
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4862 = relay.var("var_4862", dtype = "float64", shape = (1, 2, 9))#candidate|4862|(1, 2, 9)|var|float64
uop_4863 = relay.erf(var_4862.astype('float64')) # shape=(1, 2, 9)
bop_4865 = relay.maximum(uop_4863.astype('int16'), relay.reshape(var_4862.astype('int16'), relay.shape_of(uop_4863))) # shape=(1, 2, 9)
uop_4872 = relay.asin(uop_4863.astype('float64')) # shape=(1, 2, 9)
func_3186_call = mod.get_global_var('func_3186')
func_3187_call = mutated_mod.get_global_var('func_3187')
call_4875 = relay.TupleGetItem(func_3186_call(), 2)
call_4876 = relay.TupleGetItem(func_3187_call(), 2)
output = relay.Tuple([bop_4865,uop_4872,call_4875,])
output2 = relay.Tuple([bop_4865,uop_4872,call_4876,])
func_4877 = relay.Function([var_4862,], output)
mod['func_4877'] = func_4877
mod = relay.transform.InferType()(mod)
mutated_mod['func_4877'] = func_4877
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4878 = relay.var("var_4878", dtype = "float64", shape = (1, 2, 9))#candidate|4878|(1, 2, 9)|var|float64
func_4877_call = mutated_mod.get_global_var('func_4877')
call_4879 = func_4877_call(var_4878)
output = call_4879
func_4880 = relay.Function([var_4878], output)
mutated_mod['func_4880'] = func_4880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3186_call = mod.get_global_var('func_3186')
func_3187_call = mutated_mod.get_global_var('func_3187')
call_4897 = relay.TupleGetItem(func_3186_call(), 0)
call_4898 = relay.TupleGetItem(func_3187_call(), 0)
output = call_4897
output2 = call_4898
func_4905 = relay.Function([], output)
mod['func_4905'] = func_4905
mod = relay.transform.InferType()(mod)
output = func_4905()
func_4906 = relay.Function([], output)
mutated_mod['func_4906'] = func_4906
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4915 = relay.var("var_4915", dtype = "float32", shape = (10, 13, 5))#candidate|4915|(10, 13, 5)|var|float32
uop_4916 = relay.log10(var_4915.astype('float32')) # shape=(10, 13, 5)
func_3862_call = mod.get_global_var('func_3862')
func_3865_call = mutated_mod.get_global_var('func_3865')
var_4924 = relay.var("var_4924", dtype = "float64", shape = (24,))#candidate|4924|(24,)|var|float64
call_4923 = relay.TupleGetItem(func_3862_call(relay.reshape(var_4924.astype('float64'), [12, 2])), 0)
call_4925 = relay.TupleGetItem(func_3865_call(relay.reshape(var_4924.astype('float64'), [12, 2])), 0)
func_2406_call = mod.get_global_var('func_2406')
func_2408_call = mutated_mod.get_global_var('func_2408')
const_4931 = relay.const([False,False,False,False,True,True,True,False,False,False,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,True,False,True,True,True,False,False,True,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,False,True,True,False,True,False,True,True,False,False,True,False,False,False,False,True,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,False,True,False], dtype = "bool")#candidate|4931|(264,)|const|bool
call_4930 = func_2406_call(relay.reshape(const_4931.astype('bool'), [2, 12, 11]))
call_4932 = func_2406_call(relay.reshape(const_4931.astype('bool'), [2, 12, 11]))
func_3842_call = mod.get_global_var('func_3842')
func_3844_call = mutated_mod.get_global_var('func_3844')
call_4936 = relay.TupleGetItem(func_3842_call(), 0)
call_4937 = relay.TupleGetItem(func_3844_call(), 0)
func_318_call = mod.get_global_var('func_318')
func_321_call = mutated_mod.get_global_var('func_321')
var_4941 = relay.var("var_4941", dtype = "float64", shape = (3150, 1))#candidate|4941|(3150, 1)|var|float64
const_4942 = relay.const(6, dtype = "uint16")#candidate|4942|()|const|uint16
call_4940 = relay.TupleGetItem(func_318_call(relay.reshape(var_4941.astype('float64'), [15, 14, 15]), relay.reshape(const_4942.astype('uint16'), []), ), 0)
call_4943 = relay.TupleGetItem(func_321_call(relay.reshape(var_4941.astype('float64'), [15, 14, 15]), relay.reshape(const_4942.astype('uint16'), []), ), 0)
func_2913_call = mod.get_global_var('func_2913')
func_2914_call = mutated_mod.get_global_var('func_2914')
call_4946 = func_2913_call()
call_4947 = func_2913_call()
output = relay.Tuple([uop_4916,call_4923,var_4924,call_4930,const_4931,call_4936,call_4940,var_4941,const_4942,call_4946,])
output2 = relay.Tuple([uop_4916,call_4925,var_4924,call_4932,const_4931,call_4937,call_4943,var_4941,const_4942,call_4947,])
func_4957 = relay.Function([var_4915,var_4924,var_4941,], output)
mod['func_4957'] = func_4957
mod = relay.transform.InferType()(mod)
var_4958 = relay.var("var_4958", dtype = "float32", shape = (10, 13, 5))#candidate|4958|(10, 13, 5)|var|float32
var_4959 = relay.var("var_4959", dtype = "float64", shape = (24,))#candidate|4959|(24,)|var|float64
var_4960 = relay.var("var_4960", dtype = "float64", shape = (3150, 1))#candidate|4960|(3150, 1)|var|float64
output = func_4957(var_4958,var_4959,var_4960,)
func_4961 = relay.Function([var_4958,var_4959,var_4960,], output)
mutated_mod['func_4961'] = func_4961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3842_call = mod.get_global_var('func_3842')
func_3844_call = mutated_mod.get_global_var('func_3844')
call_4984 = relay.TupleGetItem(func_3842_call(), 0)
call_4985 = relay.TupleGetItem(func_3844_call(), 0)
output = relay.Tuple([call_4984,])
output2 = relay.Tuple([call_4985,])
func_4992 = relay.Function([], output)
mod['func_4992'] = func_4992
mod = relay.transform.InferType()(mod)
mutated_mod['func_4992'] = func_4992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4992_call = mutated_mod.get_global_var('func_4992')
call_4993 = func_4992_call()
output = call_4993
func_4994 = relay.Function([], output)
mutated_mod['func_4994'] = func_4994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4694_call = mod.get_global_var('func_4694')
func_4696_call = mutated_mod.get_global_var('func_4696')
call_5016 = relay.TupleGetItem(func_4694_call(), 0)
call_5017 = relay.TupleGetItem(func_4696_call(), 0)
output = call_5016
output2 = call_5017
func_5023 = relay.Function([], output)
mod['func_5023'] = func_5023
mod = relay.transform.InferType()(mod)
output = func_5023()
func_5024 = relay.Function([], output)
mutated_mod['func_5024'] = func_5024
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5080 = relay.const([[[-9.789495,5.008118,-1.448434,-0.611080,7.279712],[-8.099759,-2.463878,-4.249573,9.034838,-4.371545],[-4.526141,4.597463,-7.712801,3.073202,-0.395093]],[[-0.460324,5.649855,0.301034,-5.790130,2.112598],[2.586235,-2.630557,-8.881832,4.275303,-5.946889],[-9.708760,-3.981423,3.521337,-9.519148,-5.280954]]], dtype = "float64")#candidate|5080|(2, 3, 5)|const|float64
uop_5081 = relay.acos(const_5080.astype('float64')) # shape=(2, 3, 5)
func_3701_call = mod.get_global_var('func_3701')
func_3703_call = mutated_mod.get_global_var('func_3703')
var_5086 = relay.var("var_5086", dtype = "uint64", shape = (1800,))#candidate|5086|(1800,)|var|uint64
call_5085 = relay.TupleGetItem(func_3701_call(relay.reshape(var_5086.astype('uint64'), [1800,])), 2)
call_5087 = relay.TupleGetItem(func_3703_call(relay.reshape(var_5086.astype('uint64'), [1800,])), 2)
bop_5089 = relay.equal(var_5086.astype('bool'), relay.reshape(call_5085.astype('bool'), relay.shape_of(var_5086))) # shape=(1800,)
bop_5092 = relay.equal(var_5086.astype('bool'), relay.reshape(call_5087.astype('bool'), relay.shape_of(var_5086))) # shape=(1800,)
output = relay.Tuple([uop_5081,bop_5089,])
output2 = relay.Tuple([uop_5081,bop_5092,])
func_5101 = relay.Function([var_5086,], output)
mod['func_5101'] = func_5101
mod = relay.transform.InferType()(mod)
var_5102 = relay.var("var_5102", dtype = "uint64", shape = (1800,))#candidate|5102|(1800,)|var|uint64
output = func_5101(var_5102)
func_5103 = relay.Function([var_5102], output)
mutated_mod['func_5103'] = func_5103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2871_call = mod.get_global_var('func_2871')
func_2872_call = mutated_mod.get_global_var('func_2872')
call_5153 = relay.TupleGetItem(func_2871_call(), 6)
call_5154 = relay.TupleGetItem(func_2872_call(), 6)
output = relay.Tuple([call_5153,])
output2 = relay.Tuple([call_5154,])
func_5161 = relay.Function([], output)
mod['func_5161'] = func_5161
mod = relay.transform.InferType()(mod)
output = func_5161()
func_5162 = relay.Function([], output)
mutated_mod['func_5162'] = func_5162
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5169 = relay.var("var_5169", dtype = "int32", shape = ())#candidate|5169|()|var|int32
var_5170 = relay.var("var_5170", dtype = "int32", shape = (15, 12, 13))#candidate|5170|(15, 12, 13)|var|int32
bop_5171 = relay.bitwise_or(var_5169.astype('int32'), var_5170.astype('int32')) # shape=(15, 12, 13)
var_5181 = relay.var("var_5181", dtype = "int32", shape = (15, 12, 13))#candidate|5181|(15, 12, 13)|var|int32
bop_5182 = relay.power(bop_5171.astype('float32'), relay.reshape(var_5181.astype('float32'), relay.shape_of(bop_5171))) # shape=(15, 12, 13)
var_5186 = relay.var("var_5186", dtype = "float32", shape = (15, 12, 13))#candidate|5186|(15, 12, 13)|var|float32
bop_5187 = relay.maximum(bop_5182.astype('uint8'), relay.reshape(var_5186.astype('uint8'), relay.shape_of(bop_5182))) # shape=(15, 12, 13)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_5192 = relay.TupleGetItem(func_3291_call(), 0)
call_5193 = relay.TupleGetItem(func_3292_call(), 0)
bop_5198 = relay.mod(bop_5182.astype('float64'), relay.reshape(bop_5171.astype('float64'), relay.shape_of(bop_5182))) # shape=(15, 12, 13)
output = relay.Tuple([bop_5187,call_5192,bop_5198,])
output2 = relay.Tuple([bop_5187,call_5193,bop_5198,])
func_5226 = relay.Function([var_5169,var_5170,var_5181,var_5186,], output)
mod['func_5226'] = func_5226
mod = relay.transform.InferType()(mod)
var_5227 = relay.var("var_5227", dtype = "int32", shape = ())#candidate|5227|()|var|int32
var_5228 = relay.var("var_5228", dtype = "int32", shape = (15, 12, 13))#candidate|5228|(15, 12, 13)|var|int32
var_5229 = relay.var("var_5229", dtype = "int32", shape = (15, 12, 13))#candidate|5229|(15, 12, 13)|var|int32
var_5230 = relay.var("var_5230", dtype = "float32", shape = (15, 12, 13))#candidate|5230|(15, 12, 13)|var|float32
output = func_5226(var_5227,var_5228,var_5229,var_5230,)
func_5231 = relay.Function([var_5227,var_5228,var_5229,var_5230,], output)
mutated_mod['func_5231'] = func_5231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5161_call = mod.get_global_var('func_5161')
func_5162_call = mutated_mod.get_global_var('func_5162')
call_5236 = relay.TupleGetItem(func_5161_call(), 0)
call_5237 = relay.TupleGetItem(func_5162_call(), 0)
output = call_5236
output2 = call_5237
func_5238 = relay.Function([], output)
mod['func_5238'] = func_5238
mod = relay.transform.InferType()(mod)
mutated_mod['func_5238'] = func_5238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5238_call = mutated_mod.get_global_var('func_5238')
call_5239 = func_5238_call()
output = call_5239
func_5240 = relay.Function([], output)
mutated_mod['func_5240'] = func_5240
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5241 = relay.const([[[7.282766,-4.860497,-3.342004,8.244186,-4.727204,7.609713,6.412272,4.109604,-6.712170,4.570190,6.830955,-2.249162,-2.375239,5.909500],[-7.380782,1.753189,7.692717,-4.162675,0.721581,-0.442784,7.209195,-6.713969,-6.012820,6.164452,-7.239550,-2.592673,-3.480097,6.649766],[-5.021147,8.796631,-0.983620,4.029202,-9.872623,6.190258,0.268471,5.068154,8.936926,-2.555268,-7.840400,8.537231,-1.525076,-7.940964],[-0.963677,-2.961837,-5.072179,1.458964,-1.444721,-4.129410,8.607643,-4.378703,-4.392432,1.090506,-4.617556,6.826128,1.182121,6.417951],[-8.104893,-2.255207,4.575697,-6.933035,6.349325,-1.558289,-5.718869,-4.832887,-8.948192,-9.759109,2.553172,5.216886,1.145505,-3.768922],[1.316359,7.397733,3.628155,-0.463478,-3.659186,-5.157617,4.411845,4.262352,-8.518767,6.837218,7.035334,9.984236,5.664234,-0.716497],[2.973539,0.075782,-7.229410,7.359468,-5.775795,-9.057746,-2.034913,-6.117575,-6.373995,3.006173,-5.335196,0.928047,-4.114473,-2.233449],[2.739822,9.239836,7.803351,3.819338,5.478262,5.626825,1.198153,-3.418097,-2.623741,7.191459,-1.094968,7.183177,5.892149,-4.134372],[8.996996,2.803718,8.832938,-0.719929,6.857578,-5.459764,-1.295218,-4.031385,-8.703939,5.576546,-3.031356,6.648744,3.622110,7.244472],[0.418498,-8.566395,-4.015558,-0.563605,-2.157138,-9.653306,-8.932002,-1.530906,-1.814350,-4.382031,4.181149,2.837357,-9.158595,4.033015],[-6.462960,-9.493408,-4.366906,-4.112226,-2.262730,1.200087,3.184267,-8.939406,-1.358751,-1.434153,-7.876190,9.021094,-6.703337,0.336105],[0.507883,-2.962735,2.484696,-6.982899,-9.766248,-5.115513,4.793654,9.867700,6.903530,-5.744802,3.113905,-2.586407,-4.111409,4.189271],[-9.582663,5.833551,8.165604,4.725254,5.382452,4.689680,0.689743,-5.004994,8.710382,8.647144,-5.438197,-1.003291,8.922969,7.869482],[3.108954,-0.527362,4.779820,0.997767,-4.819334,9.824707,-6.840963,1.061397,-0.284613,-0.913587,9.597308,-2.733638,-5.051978,4.094467],[1.325846,4.807851,-4.533029,-8.613988,8.712350,-4.917193,6.607039,5.700011,-2.261006,7.013938,3.970817,-9.943755,3.736130,-3.028975]],[[-4.622009,1.683061,-6.164313,-3.072076,2.987765,-7.786784,-2.593605,-3.501458,-3.890867,-9.062623,-2.343818,7.292150,8.633648,-7.535758],[-1.866313,-6.346104,3.983631,-9.833994,-0.175784,-4.412094,4.464332,3.237858,1.134539,0.974946,2.846922,8.635232,0.831792,5.979018],[-3.800599,-7.732942,-7.364894,9.753383,-1.792687,8.765470,-2.880575,-6.928363,-5.404951,-7.087822,9.295469,4.105990,0.141722,-2.845825],[5.207488,8.324982,-6.004794,-0.061489,8.832003,-8.958313,9.255192,-1.044057,6.089806,-8.625071,-5.559361,9.846392,-0.005353,6.139969],[7.225089,2.998417,7.859272,4.622549,-5.223239,4.028115,9.118571,8.217144,3.210420,1.597395,1.898587,1.896899,-7.508905,4.274685],[6.046254,-7.852008,7.970167,-3.371678,-6.158260,-1.246793,7.670322,-9.649521,9.976354,-5.813705,-3.957016,0.552360,8.567882,3.677786],[7.752372,-8.771425,6.535019,-8.787468,-4.662720,-5.209244,-0.564181,7.766446,-4.898779,-9.755678,-2.159849,-9.618762,-0.997911,-6.515523],[-9.349442,8.482067,-3.512186,3.664491,-6.782043,-6.775189,-0.394716,-3.950566,5.451179,-1.992249,3.671937,5.670812,9.736079,-7.627975],[6.315348,9.315554,8.933708,-2.618344,6.617175,1.573073,2.200418,-9.647471,-0.903339,-6.237760,5.810486,8.378295,2.901366,-0.283632],[1.569627,0.181750,6.775141,-5.985041,3.064809,-9.928759,-3.823277,5.598411,-1.500346,8.855216,-2.344126,-2.149094,6.948394,-5.973910],[1.692855,7.916416,-4.612869,3.392407,-1.557244,-8.270018,-1.510514,-3.782140,-6.400660,-5.223104,8.373419,-0.018973,9.919917,1.478130],[-6.483825,-1.705196,-0.561489,-6.236826,-0.273726,-8.844796,-2.947296,-9.488888,-1.274855,3.887093,-9.785314,7.095983,-9.161665,3.998108],[-3.648951,-3.146938,5.900142,-1.213219,-6.144956,-1.285701,7.550002,0.389301,7.974196,-1.059392,-7.641670,-5.051536,-8.020291,3.886550],[3.038715,-6.579465,5.352740,0.088326,3.590054,2.716081,-4.526075,-3.700497,-4.209131,4.978311,-3.177444,5.438157,-6.567295,0.471872],[0.756900,0.871900,-5.427982,7.705004,-3.251690,-5.761455,-6.887219,3.804842,4.184071,-5.310285,-1.954195,9.083763,-5.678843,4.233008]],[[-4.847776,2.419242,2.386428,9.685404,-3.370338,-0.974489,0.949221,6.408925,-2.242003,-7.755860,-3.046638,1.385252,3.829324,9.140605],[-7.580939,-5.121242,-9.742159,-6.332517,-2.685560,3.022962,-8.087094,6.329220,-7.358248,-6.598612,4.196061,-0.245680,0.324890,-8.566765],[-5.692954,-3.406267,8.523606,5.211809,-1.409473,6.907162,5.339262,-4.614841,-3.664995,6.624179,-4.311173,9.921465,2.172424,5.105076],[-3.071087,0.416743,-0.316401,3.107958,-2.524659,4.749853,-6.612516,9.240576,7.372275,-2.477206,5.327914,-4.053479,1.152020,4.718007],[4.691708,5.941205,4.934445,-3.633729,6.305481,3.353527,-7.478755,-3.111876,2.679818,7.065841,5.477428,0.195769,5.554635,-3.459891],[3.124871,8.378813,6.432565,-0.460269,0.028614,-9.289929,-7.512509,-9.199680,-4.159203,-9.579666,-5.617417,-2.665673,4.291916,-6.017563],[3.516587,1.728087,4.321312,7.081754,7.724438,8.247072,-4.405094,3.255921,8.817766,3.374132,1.809211,0.665664,1.625643,9.561994],[0.071395,-5.531114,9.702286,-1.986720,-4.305458,9.686839,4.336972,0.183604,-1.971629,5.456547,-2.201161,9.817938,-0.604368,-3.885316],[-6.939175,-3.282262,1.088722,-2.817054,-6.304265,1.974847,-5.698024,-0.180292,0.606126,4.856451,0.227424,7.487261,2.763240,1.882289],[-3.970918,-9.571951,5.525751,-5.268514,1.732240,5.038669,3.914651,-7.569720,9.465173,-0.008920,-4.550986,-8.057967,-0.040386,-6.171794],[-6.712950,3.872168,8.948581,2.279479,-4.561204,5.860551,-6.089138,8.931543,-1.429321,7.887931,-7.546371,-1.107994,1.352590,-9.460589],[5.859111,-8.680369,-7.595744,-3.314376,2.456075,6.645652,4.334482,6.639372,6.505589,-3.087083,-6.756105,-1.158809,4.593406,-5.653285],[1.544561,-6.128405,4.154253,2.139991,-0.002502,7.537250,0.425726,8.343641,4.201257,8.558126,8.680494,-1.303746,1.696745,-0.138672],[-7.483971,-4.098080,-5.408818,-0.131031,9.546225,1.201944,0.681989,6.996618,0.471290,9.554964,0.980761,-5.189471,-2.777847,-8.551852],[8.798683,-2.871797,2.423180,4.486052,7.725600,7.009577,5.555073,-6.025288,3.178285,-2.159891,-4.960518,-5.546270,-2.390349,-7.239659]],[[8.331821,-5.219204,-9.397351,-9.629176,2.128729,8.186946,5.631929,1.916895,5.868873,3.822486,9.737839,-1.622876,-8.374402,7.131280],[0.983475,0.629364,1.125309,1.636608,9.362335,6.265993,7.137271,2.924307,-8.618343,-4.831194,7.961917,-0.222802,6.370345,-7.929751],[7.281541,-9.499356,-5.224351,-2.505457,4.944778,8.455818,5.489061,-4.007780,6.453642,-1.332934,-7.898240,1.013968,-5.009624,1.018716],[-3.957931,6.542361,6.138229,-2.092912,-1.171796,7.225395,-3.870553,-9.052948,-2.898149,6.635338,-4.723013,5.542994,-3.487918,-9.902525],[-0.154513,-3.003387,-6.971828,2.632963,2.138242,0.073298,-7.085189,6.674592,1.546906,-0.907716,-5.639686,8.034457,2.074692,-0.046004],[1.027285,9.068237,-5.964301,8.789714,9.357804,-9.304580,-9.868199,-5.904561,2.712660,-6.584842,3.429750,-4.155319,-8.000100,0.433849],[-6.149200,4.768763,-5.163928,7.887315,-9.333514,5.696004,8.216023,-8.315020,1.864614,-5.259049,-0.605413,6.819235,-7.048112,-0.691344],[6.592071,-1.729719,5.785766,-8.382837,-3.592129,-2.379801,-1.740589,2.155179,2.663268,4.915959,-0.813120,5.183651,-1.347834,3.585469],[-8.968688,2.699581,3.543786,8.394823,5.853323,-4.740472,-9.538262,-7.469158,9.497821,-9.007501,2.434074,9.169521,-2.317594,4.317806],[-2.293240,7.521314,-1.096046,-2.767309,-4.057649,-7.288798,8.132631,-2.392469,1.397685,-5.546366,-1.934357,3.535620,2.822259,4.958955],[-5.234466,-7.604716,6.846309,9.620289,1.966232,1.553673,-0.168508,1.437023,4.982696,1.816379,6.719486,5.608736,-8.707018,1.050833],[4.321748,4.603232,4.799129,-2.387608,5.254229,-8.901429,-5.850363,2.289676,4.060379,-2.046805,-0.576378,3.204405,-9.235815,1.422566],[-4.217077,-9.680485,1.993264,4.271564,6.868933,-1.049650,3.938525,3.070105,-6.983434,-9.029154,-2.050717,-4.941924,-3.524483,-7.344073],[-0.135519,-4.232025,-2.486193,6.663118,-8.092643,7.441898,-7.102086,5.596106,-2.485519,9.239188,2.052533,7.385924,7.361106,-5.371102],[8.003661,-6.627228,-2.940267,-3.199708,5.226397,-0.099191,-7.683970,5.224304,9.712095,6.245119,-1.746316,8.081499,-1.024360,4.120619]],[[-5.751305,-0.710318,-3.326095,-8.990549,7.426082,3.461751,-7.796063,-9.038416,1.976804,9.417700,-3.670098,6.800116,-9.506535,-3.082320],[6.401698,-8.792734,5.513826,6.092131,3.323005,-5.200935,6.721096,4.413250,-9.705211,-7.814553,8.082243,-8.423693,-6.950195,-4.130981],[-9.143223,-9.064581,-3.261516,-2.562249,6.897126,5.136703,9.810353,1.084057,-3.135761,-1.513136,-6.297870,-0.097167,-1.515937,-0.828492],[-3.333015,9.301795,0.897249,-7.158111,-2.539939,-9.471138,9.957024,-2.517979,1.485440,7.493867,-8.354333,-8.491087,-7.180094,3.300292],[-7.279989,-4.850039,-0.291143,5.044934,4.565904,-3.699420,-6.857781,2.504181,-7.345286,-4.968875,5.056739,2.665900,6.916934,-4.779050],[9.896201,7.667687,4.713272,-7.163131,8.972831,-4.853174,-5.526852,9.952916,7.676276,-6.251151,-0.880244,6.138345,-7.663371,-5.489740],[0.107534,2.579199,-3.298458,-8.156002,-5.506322,6.799087,-7.954381,-6.295813,-2.235769,-2.308966,-9.801511,-7.267520,6.150365,-2.595917],[-8.762718,-2.068509,-6.952620,-3.830820,-1.582144,-5.477583,-7.027646,-4.675373,8.440815,4.331120,-3.951010,2.892978,-8.575376,-5.215677],[-2.032578,0.631038,4.126948,-0.003774,4.799538,-6.286295,3.276397,1.893246,-4.965982,-3.182408,-4.751112,-3.912246,6.521889,-3.251413],[5.390616,-5.413511,7.475085,-2.769132,1.970159,-8.471190,-2.046688,-3.923810,-7.968532,9.225135,0.364364,-6.909373,6.232100,4.857972],[2.118355,-4.442023,-7.711083,-6.174240,-5.017621,-2.403871,6.434052,-8.969593,9.475816,0.219997,-6.434163,-5.564758,-5.837361,-4.853509],[5.838323,8.508878,6.152291,2.191848,-9.855033,2.216821,4.404748,-6.547947,9.132224,-1.008228,2.550640,-6.639885,-3.249934,3.438132],[2.193468,-1.663260,1.392187,8.400368,2.112583,-6.438726,-7.748379,-5.706868,4.675139,-7.335578,3.956359,8.506660,-3.547331,9.303796],[1.573351,-7.304913,-5.095661,9.243524,-5.035661,-7.717652,-1.030825,7.382204,-5.892876,-0.155285,-9.572391,-4.235205,0.294737,-1.423057],[1.080993,-9.571801,-4.149695,-1.224239,3.528521,7.840310,-7.385794,8.866291,-5.264264,-7.863077,-5.251632,1.237544,1.461796,-2.087175]],[[3.376099,6.506418,-9.781611,4.521486,-7.503231,4.766813,-4.271565,5.320600,-0.852485,3.426203,2.937219,-4.045476,-6.413519,-0.024202],[7.455298,-3.833265,5.833695,-4.714708,6.869755,-0.587428,2.348066,0.199789,-6.976772,-9.868625,3.690531,-7.256150,4.008696,-3.979321],[-1.452662,-1.144761,5.345820,-5.024069,-5.284528,6.490548,8.084172,4.822171,0.807016,-2.898678,3.577771,4.750836,-8.321073,5.920710],[-5.106799,7.245549,-9.943861,-3.622913,-9.155594,-0.507059,7.468339,-3.138658,1.252746,0.245894,-2.735406,5.934869,6.984795,-8.870811],[-9.789921,9.019061,4.042924,5.925059,-8.176003,1.551836,-7.939173,8.658943,7.025690,-5.826457,3.380273,-6.501920,2.817191,0.351744],[-4.015729,-3.718198,0.535763,7.357281,-8.252223,-4.458783,-1.018166,3.895023,0.165735,0.255254,-7.868796,-0.034580,8.369177,3.735945],[-9.866491,2.289600,-0.821373,0.793086,-3.279896,-0.264688,4.926931,7.416979,2.647464,-4.992991,-7.836743,1.287674,-9.860629,-2.132471],[-7.032665,-4.807812,5.482214,6.537242,-5.319957,2.136129,5.722146,1.069433,4.855156,3.876945,-9.107870,5.975431,2.271189,6.475757],[-3.068576,7.332520,-3.916344,0.547090,-3.883156,9.607476,5.471004,7.507292,3.012867,3.200056,8.079495,4.614975,0.155775,-7.329054],[5.537746,-7.034844,-2.558792,3.659791,2.637115,-2.955606,8.370953,-8.089402,-6.998387,-9.055493,0.332958,-4.662052,-1.400094,-5.329569],[5.959280,-1.954306,-8.462993,-8.983617,-9.800784,7.883081,9.197080,8.460397,-2.313449,9.758860,7.899431,-0.189511,-0.611198,-8.549095],[-6.764938,-1.274049,9.824924,-3.103764,8.552505,-5.930396,-6.469301,1.380369,8.111032,8.133836,0.381356,0.662202,-4.965699,0.613871],[-4.206200,5.446969,-2.381161,-7.003000,-7.175469,4.254438,-4.148421,9.516540,-6.824318,-9.903685,-0.481992,0.308269,-1.622987,-1.553882],[-7.859927,0.821460,9.543743,0.940376,-2.298175,-5.970241,-7.158366,-5.531286,5.355198,-5.626482,3.562375,-9.978214,-4.662346,9.915932],[-4.266158,3.801827,1.734782,6.032897,8.058010,-1.412881,9.131882,-7.447107,-4.279592,-5.324618,-1.718130,4.563427,4.918857,2.165953]],[[2.598033,-7.470281,3.747379,-8.691346,4.043872,3.892933,-7.288584,-6.392617,-0.639444,-1.939385,-5.860687,2.229556,6.330604,-5.976330],[-8.169644,-9.407529,-5.463756,3.738794,-6.533610,-3.210863,7.816743,-1.626255,7.001981,5.458994,1.063111,-2.449088,-5.753377,-2.151654],[2.341050,-6.813460,3.263682,2.009697,-6.922147,0.949919,4.421065,-4.180823,7.342093,-7.733279,0.572497,3.502911,7.750369,-9.491009],[7.124213,4.564738,9.171122,-1.479085,-8.560619,-7.591691,-0.968075,6.208541,7.869901,-4.393215,-4.317408,8.499937,9.009593,-7.953440],[6.167837,-5.261569,-9.309853,7.021371,-7.299975,-4.162154,3.434679,7.996785,-6.723754,5.182973,-1.509651,-5.692332,6.914375,-2.163727],[-9.062330,9.155323,-6.447880,-1.826615,-0.992431,-3.890348,3.349430,5.332126,-7.790871,-7.094397,-5.087701,-4.601906,-5.010722,3.299963],[4.653463,-6.827523,3.221919,0.379227,4.816927,-6.696158,1.590081,-8.226594,9.167740,6.034827,-9.838190,-2.067259,-0.889502,1.582971],[0.473628,-5.208847,0.468184,8.942896,-6.082303,-5.666205,-0.327446,1.289978,9.901640,3.605391,-8.413978,-1.613905,-7.129857,7.598276],[-6.328286,8.959243,6.330690,-4.250434,-8.647361,5.615727,-3.715477,2.926322,-6.538768,-0.889928,-6.224397,-5.857815,-8.286131,-3.270072],[7.318090,2.702848,-3.533869,-8.602048,-9.519628,-5.301032,-0.743175,-5.416484,9.618967,8.456081,-5.231520,-0.784112,6.837599,8.974741],[7.351986,5.734663,7.212233,-5.319265,7.162293,-6.488299,4.543815,8.713923,-5.066669,-7.250394,9.737418,-6.142128,7.068001,-5.809464],[3.624009,6.889365,3.790118,-3.841334,5.085851,4.888421,0.308836,2.677831,-8.088226,-1.216424,-0.454167,9.665188,-6.131434,7.758484],[-6.516658,2.227426,-7.953725,-1.107241,6.416272,-2.531843,-1.655868,1.642648,9.533726,-2.922595,8.868494,4.851468,-6.057570,8.332207],[-1.157271,-6.603220,6.598949,-3.954618,-1.342854,7.333236,6.268638,9.385504,4.093483,5.594334,0.839192,3.775839,-4.978524,-6.910667],[9.064379,-2.685209,-3.469230,-5.440246,-0.548971,2.574586,6.460267,-8.813945,5.473834,-5.184449,-5.747203,9.332162,-1.398095,6.349997]],[[8.673149,6.051023,0.596174,-2.061095,-8.455221,9.474109,-1.403941,-7.520421,-3.938250,-3.912801,-5.887575,-2.222181,5.860149,-7.284406],[-9.261994,-8.695049,3.440143,-9.418917,7.734461,-0.633945,8.604117,-1.712907,1.032288,-6.662305,1.464253,9.384756,7.884569,0.705617],[1.177988,-6.593296,7.158285,-7.894393,-3.437109,5.669982,4.322018,-8.559618,-9.855164,-7.651153,6.028358,5.672097,-0.268563,-4.447040],[-0.231853,-0.301109,0.096676,-8.082382,8.431156,5.541001,5.477918,-6.052789,-9.262578,-3.774299,4.826205,-6.509292,7.717305,-4.140235],[-0.516908,4.217830,-4.015177,5.580005,8.850720,-2.559676,-1.977629,-7.533568,-9.372367,-7.495104,7.305255,1.204532,-9.687963,7.559782],[9.426258,9.045103,-1.376858,1.519795,-1.622203,-3.594116,-2.792852,-3.660697,-2.186855,-3.780255,6.022145,-8.345984,9.146244,-6.073212],[3.739739,9.727997,3.989670,8.826560,-2.586653,-9.860780,0.345701,-8.511948,0.136067,-4.340230,2.363500,-9.099017,0.305692,-0.810873],[7.564875,-5.279704,-9.313502,6.193506,-8.336149,-1.925255,2.915639,9.992591,6.156730,-5.923905,6.760654,7.405737,-1.287941,4.472060],[-2.703677,-2.725550,-9.755899,-0.020703,4.720287,-2.425832,-9.014507,-6.823783,0.836463,-9.458185,9.969994,3.284850,3.177704,4.592788],[4.556214,-7.446394,-4.763950,5.287969,7.455910,-7.191453,7.952758,8.902648,9.193345,-0.225155,4.618549,9.293898,0.571635,1.519169],[7.035923,-9.022002,-5.775858,-3.420133,-4.817027,5.441921,-1.951635,-7.310612,8.463645,6.792175,5.378274,0.773319,5.540020,4.095912],[-6.433860,9.075104,6.105611,-6.566347,-5.969267,3.816704,-7.386559,6.793544,-8.337497,-0.223301,4.021393,-3.543803,4.997359,4.294997],[-6.973222,-6.786275,-4.065428,7.316892,1.463755,4.090088,-5.485208,-6.496253,4.828724,5.342659,7.177145,1.519670,-3.801442,5.463639],[-5.845193,-5.562395,6.937384,0.072390,-9.566828,-9.849356,-4.940499,-5.713688,-2.431584,1.692153,-5.283744,5.274082,-0.495582,-4.968908],[-6.760481,0.433831,-7.621182,6.579153,-6.180279,9.017018,8.345680,-1.191639,8.674650,3.467565,-8.991693,-5.978305,2.500479,-5.213822]],[[-5.735732,-9.691500,1.110613,4.791207,3.894687,8.398260,1.335733,7.631018,-0.144017,-0.189944,-9.413563,8.060335,-1.235813,3.027916],[6.189574,-8.314230,-1.510660,-8.706995,-0.109372,9.965905,6.662382,0.587256,-0.862427,3.942148,-0.678326,-1.785939,6.562010,4.903986],[8.594229,-8.979623,2.984295,5.318309,5.740460,1.890270,6.244826,-3.045817,0.561733,-8.013696,-7.101475,7.265407,5.565044,8.795218],[9.557261,6.371567,6.589411,-8.625520,-8.258217,-0.184421,0.581652,9.777549,-8.912992,9.364704,5.492254,1.560066,-7.245258,-1.384695],[3.610732,-0.746868,7.713079,0.250054,2.957979,2.665623,2.400982,-4.056113,0.028770,-8.851789,2.268192,7.907395,2.478596,-6.534269],[7.524541,9.487194,-8.841778,-5.602304,9.678939,-8.286485,7.758474,-6.747379,8.131803,3.283208,-1.140261,-3.084638,-8.141853,-4.045970],[2.072688,1.706908,-3.823710,2.333695,-6.970492,-4.374515,6.605026,5.655576,-8.518121,-3.080757,-1.045011,-0.538985,3.939470,-3.743475],[-9.295526,2.821746,2.294329,9.531175,5.939205,-1.019193,-6.038003,-7.779973,6.806573,-9.216540,2.597324,7.848566,-0.902342,9.210212],[-3.973480,9.588365,-2.128768,-3.457231,6.239963,9.972875,-5.668883,2.029553,-3.112528,0.865001,6.294794,6.727945,-3.597795,-1.663515],[-5.213286,-7.742775,6.465559,-2.764568,-2.392237,8.335176,-6.499562,-5.614795,-4.357084,0.042186,0.688743,-1.043291,-5.304060,-8.220736],[-5.067207,7.358343,-5.334326,8.356674,-7.256242,7.891023,3.517691,-6.123094,-4.456985,-7.972961,-9.730749,4.356453,-4.519716,-9.080234],[-0.675639,8.297218,3.253902,3.603391,-5.907357,5.936385,-7.516491,3.558275,0.126501,7.570824,8.704307,-6.190379,1.292111,4.963723],[2.649726,-7.295764,-8.158158,-5.221805,7.812193,1.561929,3.701350,-1.962647,-1.745008,3.280832,3.273957,5.209929,-9.227760,6.596158],[7.194025,-7.692245,-8.208917,-5.102502,-1.607034,9.549983,3.100156,-0.304718,1.335459,-5.468460,-9.687682,-7.503398,7.930478,-4.072561],[7.130004,8.867119,2.937516,-7.371268,9.114087,-2.477966,2.763397,2.320886,3.434043,3.463416,-2.658820,-2.112868,3.456419,-6.678807]],[[-8.692991,1.600816,-9.510219,-0.498208,-7.505400,-8.708416,-5.390952,3.852858,-8.963261,-2.888544,-8.025178,-3.329620,4.409569,-6.117973],[4.664704,6.642611,5.151466,-9.090348,-4.672220,4.061606,2.041648,-0.861004,3.059224,3.967662,-5.146812,9.769690,-6.743568,4.487737],[-2.160903,-6.714365,-8.488861,6.380994,-0.597206,-4.844947,-4.525859,4.498370,2.312752,5.685230,-2.491803,-4.511807,-7.201720,1.063162],[3.063885,6.854157,-2.472325,-2.876657,8.920065,5.143108,9.153868,-8.417235,6.262605,8.139647,0.497176,8.508627,5.935758,-4.670758],[3.867566,-8.314812,-4.322784,-0.266053,-5.535491,-0.827159,-0.630916,0.278060,2.800495,-5.835004,-4.872613,2.090384,-3.886310,8.987313],[-0.764072,-9.816711,7.636995,-5.039622,-6.752833,2.137370,5.921023,-6.297069,9.594760,8.686180,-8.357294,3.125466,3.490734,-2.795129],[-8.768936,-0.749673,-6.907817,-7.753713,9.034601,0.370772,-6.575022,-1.795169,-1.781739,1.937257,7.779401,-5.341196,-7.184085,-0.346349],[-5.950301,-3.323169,-4.024056,3.415148,3.610731,-7.649520,6.942118,-2.853409,-2.965455,9.683742,8.810705,-2.245733,-3.438553,-9.261369],[6.226065,-6.814834,-1.349427,-4.363038,1.291577,0.135869,5.141443,-7.851912,6.356630,-5.640548,5.357640,0.594667,6.547393,5.343988],[-1.832396,-6.084618,-3.764900,-6.341001,1.342555,5.643272,-8.185620,7.594158,2.358515,-8.254742,-3.296384,-6.408601,0.696831,7.217948],[-1.342721,-5.835489,-1.644590,-0.435722,0.926956,6.435866,6.938572,-4.456584,2.424541,2.304503,0.824969,-6.516787,3.444888,3.910194],[-4.733721,0.178713,-4.662548,0.543466,-4.116086,8.718053,-8.839226,5.002180,-8.638578,-1.579836,5.081542,-4.098511,7.102082,0.075338],[3.794326,2.251521,1.892047,-6.560225,-8.690867,-9.643267,4.631023,3.688243,3.297739,5.210423,-8.155118,2.770269,-9.646050,-7.199122],[-7.735260,-2.508312,-6.445496,2.006914,-3.559917,6.472715,-4.629580,3.754480,-4.473584,1.657454,9.113325,7.584952,-6.467905,-7.689882],[-5.728596,1.700204,-6.710296,-8.529705,0.346278,-6.610337,-3.728605,4.199231,0.556826,-7.269361,5.698393,6.686978,5.376754,-6.130680]],[[-0.246297,-1.397883,3.840495,5.391685,6.020913,-4.931884,-1.012561,-1.938476,2.402460,9.464848,-4.869462,-5.510401,8.033039,8.761830],[-1.394832,3.008571,-7.719042,8.854482,6.199328,0.607689,-1.998609,2.077774,-2.250806,0.025932,0.455424,-9.278378,0.406690,7.522563],[2.766360,8.883507,-6.774328,-9.750487,-3.973674,-3.278979,-4.825452,-6.798249,-9.915967,3.116302,0.098570,-4.327590,8.916969,-8.334173],[7.543222,-2.287667,-3.318749,-9.541634,-8.612534,6.815595,-0.468739,-3.076675,7.264441,1.341567,-6.141356,-5.816316,-5.161193,4.077143],[-0.213431,-3.753012,3.743065,-9.835420,-1.987470,0.322134,6.654060,1.959587,-8.062924,-3.822498,-5.723534,9.436641,0.816956,-4.760375],[-9.890991,4.865324,1.711469,-4.347149,-7.565057,4.059220,8.164544,3.895295,5.295004,-8.248257,-8.482898,-4.274820,3.901846,-8.078508],[2.455378,-1.629676,-5.919126,-2.908838,1.781650,-7.504767,6.839381,-5.043696,-1.524753,9.703046,-4.104222,-0.062425,7.471888,1.027725],[-4.237059,7.786153,-0.053950,-3.464352,1.516239,-7.251941,4.868729,9.132669,-6.786952,-5.770721,2.899717,8.103569,8.737128,6.595209],[-5.224880,5.230840,-6.841214,-6.100061,-7.722051,7.468468,-7.252425,-1.413058,-7.222793,-5.050364,9.711748,-4.654447,6.820773,-7.628524],[1.108802,5.954984,-9.490373,-0.255446,1.820822,5.133985,4.991892,3.951165,2.171929,-3.903385,5.335063,-1.056636,8.086449,-4.612074],[-5.607221,5.441767,-0.080256,3.653681,-8.495180,5.706413,7.983451,7.764550,9.513526,-7.316260,4.044650,-4.441597,3.057741,5.708069],[8.574916,5.029906,5.793261,7.218223,5.364808,-6.153540,5.960903,7.511060,7.331959,3.406599,-8.189029,3.768006,-6.996523,-3.534938],[-1.689720,-4.010036,2.010422,-4.808517,9.932596,-9.424329,-4.649870,-0.841821,-9.948759,-2.436156,-9.465232,-8.010681,3.119554,-6.568742],[-8.915619,-9.851993,5.843219,-8.435516,-8.277271,9.037715,7.845167,3.943411,-9.829207,9.302056,6.854459,-5.966218,6.821025,-4.790452],[-1.738164,3.331157,-7.029465,-4.334165,-7.412774,-9.271816,0.145780,-1.618656,-9.209652,-5.750274,2.086887,9.942639,-0.347785,7.204952]],[[6.544546,-8.694428,-8.394348,-5.897129,5.330502,-8.392033,9.688754,2.617514,-2.289495,0.379312,6.477863,-8.182923,3.533036,8.100204],[7.322922,-6.662873,5.158857,9.974003,-7.796232,-0.583783,-8.033460,7.870796,4.472228,-2.371219,6.579876,-9.334666,9.955301,4.460440],[9.579629,-7.403105,4.298320,3.235647,-8.864858,8.914820,-0.177299,-3.676467,-9.291002,-2.825745,-1.066024,-0.111273,5.944439,-6.962951],[7.141334,6.749722,9.295636,2.782819,-9.214503,0.815176,7.918240,2.390277,-8.227399,-3.727976,-1.591903,-8.275355,0.399179,-1.343626],[-3.496271,-9.383009,-9.587166,-3.040601,7.382669,1.154210,-5.729712,-2.601293,8.863913,7.085136,-3.023910,-1.561389,-9.430602,1.746765],[2.234009,-1.417351,2.671715,0.705850,7.220075,8.530235,-5.510038,-1.866033,2.165974,-1.713937,6.422295,-6.215866,-9.302816,-6.743473],[7.175081,-4.002175,6.316337,-8.181779,4.718758,-2.107773,1.079879,-5.352902,-1.835625,-4.460096,2.948394,-1.223969,-6.500125,-0.220113],[-6.605510,-3.887067,4.201277,-0.602219,8.864163,3.196963,5.032248,9.380198,0.968368,-8.470093,5.505156,5.392096,4.291384,6.025989],[-2.835051,-3.846796,-6.178602,-5.697237,-8.075993,-6.989492,-6.930525,-6.740521,9.247139,-8.545999,4.976778,2.833165,-5.632192,-6.175958],[-6.022553,2.860307,4.925675,7.787102,-3.860462,2.283404,3.132665,1.921713,7.630798,6.841058,7.610764,6.329366,-9.537091,9.026729],[0.293368,-7.275214,7.848733,-6.430699,-2.000712,-7.824151,-5.668575,7.861114,5.999565,1.457975,-6.352294,-7.490683,-1.015545,8.692025],[-5.306615,3.651613,-1.617445,5.096126,-8.047003,-0.924114,-3.393846,9.965684,5.055954,-5.467019,9.983162,8.366156,-7.856739,-8.146243],[-3.009001,4.945750,-6.216546,-3.770704,-7.982339,8.913513,-3.324935,0.302681,-3.814991,8.503733,5.048865,0.057392,8.433201,9.842066],[-3.550795,-3.253348,0.101077,2.549704,7.883498,-5.937532,1.311236,-9.655119,5.248784,-5.944471,-4.486659,5.697553,0.787739,2.959467],[-3.146056,-2.694544,-7.436199,4.071478,-5.435284,1.456116,-1.885976,-2.577961,3.635931,4.669093,-7.795776,1.238364,5.340958,4.331203]],[[9.622086,2.532259,5.520429,-5.897991,9.905090,5.378648,-5.678944,3.723732,-8.469180,-2.171294,-3.931136,-5.859824,-7.522626,4.374514],[7.666356,-8.398471,2.293639,-7.027586,-0.879825,-7.231872,-4.639359,0.625956,3.373295,3.678038,-5.541086,4.155819,-6.413960,-4.459344],[1.599614,-4.468251,-1.248244,7.981371,9.429539,-1.610622,-5.461007,4.748133,-4.371253,9.258307,9.197465,1.999684,0.303944,-4.338981],[-0.732264,-8.161928,-9.452125,-1.237912,3.730557,7.797512,0.309776,-3.838791,-8.529862,-4.875681,5.026243,-4.253533,3.543126,-0.862376],[6.240283,-4.420759,7.795339,0.942388,0.721754,-7.894356,-5.857348,7.603556,8.867096,7.732873,7.335473,-1.588814,-4.969760,7.148930],[-1.941690,-3.378370,-9.500094,-5.756709,0.244618,-7.844673,2.053230,2.995312,-7.346508,-2.575697,2.380340,0.718769,1.514877,9.351740],[9.782973,9.052543,-1.828359,5.963187,-0.371102,7.691428,5.349616,1.474370,-8.216897,-3.899101,2.907383,6.324251,8.893000,-7.000021],[-6.010362,-6.151939,-7.309837,-0.549851,0.584922,-0.341132,3.680541,8.264059,9.785387,9.882731,3.234128,-6.315746,-7.589321,5.351896],[-5.967844,4.494472,7.131413,-3.337267,7.055415,4.377155,-0.804482,0.698862,3.354498,5.282347,9.070511,-4.544618,-4.510756,8.162151],[-5.579047,-9.104737,-7.011218,-9.039610,5.078877,-3.536939,9.725177,8.610253,6.708606,1.364133,2.623364,5.748170,1.644181,-1.098638],[-5.576724,9.339507,-7.496457,1.779576,5.623845,7.896081,1.892225,2.937437,9.493708,-6.046907,1.535041,9.726132,-0.881046,9.796109],[-1.516063,-5.594598,-8.630949,-9.180049,4.674357,1.693811,6.404057,-0.890454,-4.341988,4.340107,-3.686554,-9.036228,6.196949,8.930077],[-2.945308,9.930105,-1.951011,0.300276,9.967985,7.248396,-2.650475,4.478087,1.795688,-5.916393,-2.729535,8.190736,4.152851,-8.688112],[3.175016,2.101739,9.732245,5.703045,-4.981071,-5.279571,-5.873550,-1.993300,-1.013406,-1.019027,3.476475,-7.375101,-7.323339,9.476497],[9.423976,-2.370359,4.957654,1.726587,-0.371052,-9.652651,7.609826,3.350397,-0.366045,-3.779031,8.829925,3.442010,5.634780,-0.156956]],[[1.361927,-1.879671,-8.194315,-1.907780,-3.874883,-4.258153,-7.760688,8.799704,0.582806,0.320525,-4.630039,-3.692906,-9.566517,2.492004],[9.163318,7.138595,6.501518,-2.099354,-5.442568,0.732595,-0.668331,5.200263,-2.323106,-0.589467,5.234217,9.080212,-4.172579,-9.837819],[5.805616,-8.435072,0.979852,-1.607605,3.549626,-5.351516,6.385170,-8.175391,3.553224,-4.051019,-5.836380,0.843197,-3.969401,-8.194996],[1.796925,0.564908,-7.001252,1.234146,9.907880,-2.602889,-5.213638,-0.564368,-2.255574,9.127675,-1.404656,4.795315,8.502058,3.122301],[2.663465,-7.969856,-4.460988,-8.565817,7.094909,-9.809882,9.974722,-0.731864,-0.154113,4.433876,7.404432,-2.419833,-6.221243,8.533563],[2.011028,0.426391,-6.689383,1.438446,8.362022,7.359518,7.764581,7.098342,-3.318883,2.120679,-2.569958,8.348466,9.846855,4.009316],[2.909307,0.767302,2.908319,9.002956,-1.699612,-9.245012,-0.308098,9.289584,-8.556252,-6.434506,-8.242635,6.737261,-7.614841,-5.446573],[-1.511284,3.512496,-0.382271,-8.705996,4.738439,9.522392,-2.067612,7.130775,4.290416,4.881748,6.948849,-6.188815,2.873001,-1.783471],[-5.466948,4.881252,4.432157,-3.202870,-3.450408,5.879501,7.275643,4.552090,0.520022,-0.990331,3.135850,-6.740680,-0.369499,-4.776669],[-4.654039,9.462946,-3.761172,4.690254,-4.425244,4.124481,6.880399,-1.817116,-8.036199,-7.982670,3.991971,-6.498617,-9.622967,3.204889],[-4.384553,-7.102485,7.664848,1.618089,5.572422,2.885366,5.967394,-2.490868,3.338961,9.936772,-2.493996,4.858672,-1.303524,1.986568],[-0.598524,3.123085,-3.326537,5.835712,-7.043572,8.108942,-7.573589,3.547753,-7.286131,-0.797381,-5.891651,1.668369,5.851622,-0.335667],[-9.336307,2.990885,7.148925,1.433625,-5.764052,7.333090,-3.051687,-8.436065,0.246031,-7.867967,6.766339,3.897252,-3.785050,1.092535],[-1.303185,4.704741,0.845739,5.959444,-4.060424,-3.898993,-7.790628,9.554266,2.174647,4.199850,1.190532,-4.469637,-3.844380,-8.304359],[-9.817633,-0.390138,-7.614911,7.780509,-4.439542,-8.854048,-6.733163,-1.667566,-6.565898,3.300045,4.506731,-1.533088,-6.032309,-6.819555]]], dtype = "float32")#candidate|5241|(14, 15, 14)|const|float32
var_5242 = relay.var("var_5242", dtype = "float32", shape = (14, 15, 14))#candidate|5242|(14, 15, 14)|var|float32
bop_5243 = relay.mod(const_5241.astype('float32'), relay.reshape(var_5242.astype('float32'), relay.shape_of(const_5241))) # shape=(14, 15, 14)
output = bop_5243
output2 = bop_5243
func_5246 = relay.Function([var_5242,], output)
mod['func_5246'] = func_5246
mod = relay.transform.InferType()(mod)
mutated_mod['func_5246'] = func_5246
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5247 = relay.var("var_5247", dtype = "float32", shape = (14, 15, 14))#candidate|5247|(14, 15, 14)|var|float32
func_5246_call = mutated_mod.get_global_var('func_5246')
call_5248 = func_5246_call(var_5247)
output = call_5248
func_5249 = relay.Function([var_5247], output)
mutated_mod['func_5249'] = func_5249
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5262 = relay.const([[2.166551,-9.084737,5.754359,-3.040115,6.611429,3.724723,-2.421072,-5.576242],[-2.703119,-3.487757,-4.862374,-5.949633,-6.342580,-0.605746,-2.831767,-6.366153],[7.424315,4.286867,9.996420,6.830822,0.189601,-1.954569,-7.881287,-2.496881],[7.262208,4.644937,-1.142566,8.626641,1.458764,6.795774,1.229533,3.293840],[-2.165781,-8.542444,-0.492835,-7.564260,-2.658094,-0.681122,9.887231,8.858952],[6.864140,-0.856260,-1.143024,-1.819485,-7.886417,-9.439492,2.530982,-0.783372],[-5.989961,-6.533051,-7.806240,-2.308252,8.002861,-3.047154,2.563484,8.230714]], dtype = "float64")#candidate|5262|(7, 8)|const|float64
uop_5263 = relay.sigmoid(const_5262.astype('float64')) # shape=(7, 8)
output = uop_5263
output2 = uop_5263
func_5280 = relay.Function([], output)
mod['func_5280'] = func_5280
mod = relay.transform.InferType()(mod)
output = func_5280()
func_5281 = relay.Function([], output)
mutated_mod['func_5281'] = func_5281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4076_call = mod.get_global_var('func_4076')
func_4077_call = mutated_mod.get_global_var('func_4077')
call_5310 = relay.TupleGetItem(func_4076_call(), 0)
call_5311 = relay.TupleGetItem(func_4077_call(), 0)
output = call_5310
output2 = call_5311
func_5342 = relay.Function([], output)
mod['func_5342'] = func_5342
mod = relay.transform.InferType()(mod)
mutated_mod['func_5342'] = func_5342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5342_call = mutated_mod.get_global_var('func_5342')
call_5343 = func_5342_call()
output = call_5343
func_5344 = relay.Function([], output)
mutated_mod['func_5344'] = func_5344
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5366 = relay.var("var_5366", dtype = "float32", shape = (11, 8, 1))#candidate|5366|(11, 8, 1)|var|float32
uop_5367 = relay.exp(var_5366.astype('float32')) # shape=(11, 8, 1)
output = relay.Tuple([uop_5367,])
output2 = relay.Tuple([uop_5367,])
func_5381 = relay.Function([var_5366,], output)
mod['func_5381'] = func_5381
mod = relay.transform.InferType()(mod)
var_5382 = relay.var("var_5382", dtype = "float32", shape = (11, 8, 1))#candidate|5382|(11, 8, 1)|var|float32
output = func_5381(var_5382)
func_5383 = relay.Function([var_5382], output)
mutated_mod['func_5383'] = func_5383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2346_call = mod.get_global_var('func_2346')
func_2348_call = mutated_mod.get_global_var('func_2348')
call_5460 = relay.TupleGetItem(func_2346_call(), 0)
call_5461 = relay.TupleGetItem(func_2348_call(), 0)
func_2871_call = mod.get_global_var('func_2871')
func_2872_call = mutated_mod.get_global_var('func_2872')
call_5474 = relay.TupleGetItem(func_2871_call(), 7)
call_5475 = relay.TupleGetItem(func_2872_call(), 7)
func_2972_call = mod.get_global_var('func_2972')
func_2973_call = mutated_mod.get_global_var('func_2973')
call_5486 = func_2972_call()
call_5487 = func_2972_call()
func_4787_call = mod.get_global_var('func_4787')
func_4789_call = mutated_mod.get_global_var('func_4789')
var_5499 = relay.var("var_5499", dtype = "float64", shape = (1274,))#candidate|5499|(1274,)|var|float64
call_5498 = relay.TupleGetItem(func_4787_call(relay.reshape(var_5499.astype('float64'), [1274,])), 1)
call_5500 = relay.TupleGetItem(func_4789_call(relay.reshape(var_5499.astype('float64'), [1274,])), 1)
func_2588_call = mod.get_global_var('func_2588')
func_2589_call = mutated_mod.get_global_var('func_2589')
call_5506 = relay.TupleGetItem(func_2588_call(), 0)
call_5507 = relay.TupleGetItem(func_2589_call(), 0)
func_1511_call = mod.get_global_var('func_1511')
func_1516_call = mutated_mod.get_global_var('func_1516')
const_5516 = relay.const([[-10,9,-5,-2,-2,1,8,-8,-10,-4,1,-4,-6,8,10,-4,-4,-8,-3,-6,-7,-9,-1,-3,-3,5,-9,-2,1,8,3,6,5,8,2,-3,1,5,10,-2,-3,7,-6,-8,9,10,8,-9,10,10,-1,3,6,5,-6,-9,6,4,6,-10,-7,-7,6,9,3,-8,-4,-10,8,10,-2,4,6,-9,9,-5,10,3,-8,-2,4,7,2,2,-3,-6,1,5,8,-8,-5,-3,-7,-3,-1,-5,-6,2,-2,-9,-7,1,5,-3,-2,-7,-8,-2,-9,9,1,-4,8,4,-2,-8,8,-7,7,-3,3,-6,4,-5,4,-4,7,3,-6,9,9,-7,7,9,5,5,-4,10,-10,3,-8,10,-5,-1,1,8,-7,9,10,10,-10,7,7,-3,2,-2,3,6,-6,-8,8,6,-3,-1,-1,-2,5,6,-5,-8,5,9,-1,-5,-3,1,10,-9,2,-8,9,5,-7,8,10,-3,4,-4,-7,2,-1,-3,2,-6,10,-9,-5,-4,3,-6,-8,9,-1,8,3,9,-5,-7,-6,3,-6,-6,-5,3,4,5,10,-3,9,10,3,6,-4,7,5,-6,4,-3,-4,-9,10,10,9,1,-7,10,2,8,-10,-8,6,-7,7,1,10,2,5,-10,-7,4,3,4,3,-1,-8,7,2,6,8,3,-7,-6,8,9,-8,-1,-9,4,8,5,6,-4,10,10,-7,-5,-7,-9,8,2,2,-5,-10,-5,6,-6,1,-3,-2,-8,3,5,4,-4,-3,6,-10,8,-2,8,-10,2,-6,4,-5,7,4,7,6,-10,-10,4,-7,-7,5,9,-2,9,-6,-4,-5,-9,10,7,-1,-5,-3,-8,3,-1,1,-6,-3,-10,9,-7,4,-3,6,-2,-9,6,8,-6,9,1,-9,4,-3,-10,8,-9,5,-7,-4,-6,8,8,-5,-8,4,-6,-8,7,-7,-6,-4,7,6,8,5,-6,-7,-8,1,-7,-5,9,7,5,-3,-7,5,-4,-8,-3,-10,5,-5,10,-8,10,1,-9,5,2,-4,-3,-3,-1,3,5,5,9,-4,4,5,7,5,-6,-9,-6,-7,1,-8,-2,-6,-2,-8,9,-1,6,-10,4,7,4,8,9,1,-7,2,-9,8,-9,6,10,2,-3,-7,8,7,-1,3,2,10,2,1,-10]], dtype = "uint64")#candidate|5516|(1, 448)|const|uint64
const_5517 = relay.const([-7,9,10,3,6,10,-7,-5,4,8,2,5,2,7,5,3,-7,-1,-4,2,-6,3,1,-2,5,-9,10,1,8,-5,-2,-6,1,-9,2,4,-4,-3,-4,-8,-7,-6,-10,8,-4,2,-3,6,6,8,7,-7,-8,5,-5,1,-1,8,3,-1,1,3,-2,8,4,-7,8,9,-4,10,-9,-9,9,4,-5,8,-10,10,10,1,3,-3,2,9,-8,5,-9,2,2,-9,-2,-3,-8,4,10,-9,5,-6,-4,3,1,3,-4,7,10,-3,4,5,-10,7,-6,4,8,8,-2,-8,-1,-4,-6,1,8,-8,-3,-2,4,4,8,1,10,8,2,-7,-6,8,-4,8,6,-4,-3,-3,-8,4,6,1,-5,-10,-6,-10,1,-4,10,7,-2,-4,-9,-1,-5,-2,10,-9,-2,-2,9,3,-1,-5,1,-6,2,9,8,-8,-4,-5,4,1,-6,-6,-6,-5,8,-7,-1,-3,4,6,-9,-4,7,-7,-5,10,-1,6,-7,-6,2,-3,6,-8,5,4,-2,-7,10,-1,10,8,-10,-1,-7,2,-8,-2,9,9,-8,10,-1,-9,8,-6,3,-2,-10,10,7,7,-6,-4,-3,-1,-5,-10,-5,-7,-9,3,-9,-5,-9,-4,-6,4,4,-7,2,-7,-8,-1,-4,-7,-1,6,-7,-9,-7,-3,-6,5,8,6,-1,-4,9,-1,6,-7,8,7,4,2,-10,4,-3,-5,-2,-10,5,-1,9,-7,-10,2,-8,1,-6,3,9,2,-8,-4,10,-5,-8,-9,-10,4,1,-6,-6,10,2,-9,-1,-3,-10,1,-1,-6,5,-5,-2,-3,-4,9,-7,-3,-2,-8,-3,-2,-9,4,-9,8,6,9,2,-8,-2,-8,5,6,4,-2,6,-2,9,5,-8,4,-6,-1,-4,5,-9,-4,6,4,5,-9,-10,-6,-8,-8,5,2,4,2,-4,5,1,8,9,-7,7,-5,-6,-5,5,-3,-5,2,8,-9,-10,-6,6,-8,5,1,-9,1,9,-2,-1,-5,-9,8,-2,10,3,-4,-9,4,-8,-7,1,-4,6,-7,2,5,-2,9,-2,-7,-2,-4,5,-8,-2,10,5,-4,-2,9,-4,3,9,-9,10,8,6,4,9,-4,7,4,8,4,-10,3,-9,-1,8,-1,-5,10,-10,-3,-6,-10,1,-6,6,8,-3,2,-7,10,1,4,8,-7,10,-7,-9,1,5,-8,7,6,8,2,1,3,-1,9,-2,-10,-8,-1,6,-6,1,-1,-1,10,5,5,4,-7,4,4,4,-8,-1,-9,3,9,9,-4,-6,-10,-6,8,-4,5,-3,-3,5,9,-2,-4,-4,-7,-4,1,-5,5,-7,-3,8,-8,9,7,-5,-1,-5,-10,-1,-1,-9,-6,-5,-8,-2,3,1,2,-3,5,9,4,2,-2,2,7,-8,-8,2,5,-10,-7,-8,-10,-9,-8,2,2,-8,6,-10,3,-6,10,8,-5,2,9,10,-2,6,-7,3,-10,-6,3,9,-5,-7,-4,-2,3,-8,5,-2,7,8,6,-5,-4,-5,8,-1,1,-10,2,4,6,-8,2,-10,7,4,1,10,-10,-2,-10,-3,-2,-8,7,-10,5,-5,-7,7,5,7,-9,-1,1,7,-8,-4,3,3,-1,-4,10,-5,-4,-10,4,-5,4,9,-1,9,-7,10,-3,2,7,-2,3,3,-2,10,-10,-6,-3,10,-3,5,-1,2,7,8,7,-2,-1,-2,10,6,7,4,9,5,-4,4,5,-9,-7,8,-1,8,9,-3,-2,-9,-3,8,-1,-5,-5,-10,2,-5,-10,-7,-7,-1,5,-5,4,-3,-9,10,7,-6,-2,-3,8,5,2,9,7,4,-7,-6,-3,10,3,3,-3,10,-7,-2,-2,-5,9,4,5,7,-6,-2,5,4,-10,-5,8,-10,10,-10,-9,9,-8,-5,10,4,8,-9,-8,8,-10,2,-10,-2,2,-5,6,8,-4,6,6,1,6,4,3,-1,-5,-2,3,5,6,6,-1,-6,7,10,10,7,3,9,3,10,10,1,6,9,-6,-3,-9,-4,9,-10,-9,-6,-8,10,-4,7,4,9,6,1,-5,8,1,2,8,-2,1,-9,4,8,2,4,-7,-6,-1,4,-9,-9,4,2,-3,9,4,-3,-9,-6,8,9,-3,8,-1,-7,7,-3,-7,-5,3,6,-3,-6,2,7,4,-5,2,10,-8,-6,-4,7,7,-6,5,-6,3,-5,7,-4,8,7,-5,-3,-3,9,1,-1,-8,-7,-8,-5,8,-5,2,6,-9,9,-10,-10,-3,-2,-6,3,9,1,4,10,6,6,3,9,5,-7,-2,9,7,-10,-4,9,4,5,-5,-1,-10,-10,-9,6,-7,-10,-3,4,10,-3,8,10,-9,9,1,7,-7,6,-8,-1,-9,-3,7,2,-3,4,4,-3,-10,-9,2,-4,-4,6,-5,6,5,-6,-7,2,3,3,-9,-2,-1,-9,10,-4,6,-8,-5,6,-4,-4,3,2,1,3,4,-8,6,-7,-5,-3,-9,1,-3,-5,9,9,7,-6,-9,-10,-4,-7,10,-9,5,3,10,9,8,2,5,-9,-5,3,-6,6,-3,-2,-6,-5,4,-4,-9,2,9,7,7,8,-5,-7,-6,-2,-7,10,-7,6,-3,8,5,1,5,-2,6,-6,3,-1,-10,7,-9,-3,-2,-10,1,-6,9,2,7,-8,-4,-3,10,7,9,7,1,-4,1,9,-5,8,-4,10,6,4,2,8,-1,2,-9,8,1,6,-8,-1,9,7,-2,5,-4,-8,4,10,1,7,-3,1,-5,-3,1,5,5,-5,8,-5,-7,-9,-10,-8,3,10,-8,-7,7,7,-5,-8,-6,-9,3,7,8,-2,-6,-9,6,2,-10,1,10,5,-2,-6,-6,-3,1,-8,5,-7,-10,10,8,4,-1,-5,-4,-6,5,-7,7,9,-9,8,9,-6,4,7,-8,-9,-5,-9,5,7,7,1,3,3,9,9,9,-8,-1,-4,-5,9,-5,9,4,-2,-10,-9,4,-7,5,10,-3,-6,3,-5,-1,8,-3,-10,3,-1,2,7,2,-9,-2,-1,-9,-1,-5,1,-3,3,-6,-4,-2,3,5,-2,-4,3,3,-10,1,7,10,-3,6,8,9,-2,-6,-9,-5,-9,-5,4,8,-10,-7,-6,-6,-9,-5,6,-8,-6,-5,7,-5,10,1,-8,2,-10,7,-6,-3,5,2,1,-4,-6,2,-1,-2,-7,-7,-3,-4,-7,-7,6,-10,9,4,5,8,7,7,-7,10,-3,10,5,-9,9,-9,-9,5,2,9,-7,9,7,1,8,-9,-10,6,-6,-10,-2,-7,-10,8,-2,-9,4,-3,7,-4,-7,3,1,-3,-8,-2,-1,-1,1,-3,6,2,-4,-10,8,4,-4,-1,10,-4,6,-9,2,10,-1,8,6,9,2,-1,-3,4,-3,4,10,2,-3,4,2,1,-6,-1,9,-2,-9,-1,-7,-10,9,-6,4,-4,-10,6,-2,-3,6,-3,-4,-5,-8,-5,-1,-7,-3,-1,2,5,6,2,-8,8,-1,-2,6,9,-4,-10,3,9,-2,-4,8,4,3,-3,3,7,-2,10,-6,9,5,-9,7,-6,-8,3,2,-1,-3,5,6,9,-3,-4,-8,-3,4,-3,7,2,-10,3,-2,4,-7,-1,-5,10,9,-8,-9,-10,-2,6,10,7,2,-1,-4,-10,-6,-5,1,-8,1,7,-9,-3,-8,2,-6,10,-9,-4,6,4,-5,2,4,8,9,5,2,9,-8,10,2,-4,8,5,-2,-5,-10,6,-8,9,-10,5,6,-4,7,-10,3,-9,4,5,5,-4,9,-8,6,6,4,10,7,4,-7,2,-8,8,-5,9,-7,4,5,-6,-9,-9,-4,-1,-2,-5,-9,6,8,-1,-1,4,5,3,-7,-1,1,-9,8,8,-7,8,9,-5,-7,9,-9,5,10,4,-9,6,-6,7,-7,5,-7,1,-6,-1,3,3,5,-5,-6,-6,5,-4,-9,6,-5,1,5,-6,-6,-4,-8,-2,4,2,8,6,-2,-6,-1,-6,-3,-8,6,-9,-2,-5,1,5,-7,-7,5,-10,-2,-7,-9,3,9,-2,5,1,-6,10,-4,-5,2,-7,3,-1,4,-2,-2,-4,-4,7,-10,1,-5,-5,3,-3,10,-9,7,-10,1,-5,6,-3,-8,4,-9,3,-3,6,-6,1,6,1,-4,-8,4,6,-3,-4,1,6,-10,-5,-7,1,7,1,3,-1,-4,2,2,-10,8,5,-2,9,-10,-7,5,-10,9,10,-3,9,-9,7,-8,8,1,-5,-4,4,-9,3,-8,-8,6,9,8,7,10,1,-1,3,-2,-4,3,4,-1,-5,2,8,-1,7,6,7,6,-3,8,-8,6,-9,-1,10,10,1,-1,1,-5,-1,10,6,-9,4,6,-8,-5,-1,9,-6,-9,2,5,1,-2,10,4,2,4,-1,-10,-3,5,1,5,5,-6,3,-2,9,1,-8,5,8,-5,-2,-7,10,-8,8,-8,-1,-9,4,-1,5,-4,8,-2,1,-7,-10,7,-8,1,-2,8,3,-8,-1,2,2,1,-7,8,10,-10,-10,2,-6,4,2,-1,-1,2,1,-2,-9,-5,-5,6,-8,8,5,-6,1,-1,3,-7,-5,8,10,1,4,8,8,-5,-10,4,2,-10,-9,-7,-3,7,-3,5,7,-5,-1,10,-6,-6,9,4,10,-4,5,9,6,-7,1,2,-8,-8,-9,8,5], dtype = "uint64")#candidate|5517|(1800,)|const|uint64
var_5518 = relay.var("var_5518", dtype = "float32", shape = (1200,))#candidate|5518|(1200,)|var|float32
call_5515 = relay.TupleGetItem(func_1511_call(relay.reshape(const_5516.astype('uint64'), [16, 4, 7]), relay.reshape(const_5517.astype('uint64'), [1800,]), relay.reshape(var_5518.astype('float32'), [1200,]), ), 2)
call_5519 = relay.TupleGetItem(func_1516_call(relay.reshape(const_5516.astype('uint64'), [16, 4, 7]), relay.reshape(const_5517.astype('uint64'), [1800,]), relay.reshape(var_5518.astype('float32'), [1200,]), ), 2)
output = relay.Tuple([call_5460,call_5474,call_5486,call_5498,var_5499,call_5506,call_5515,const_5516,const_5517,var_5518,])
output2 = relay.Tuple([call_5461,call_5475,call_5487,call_5500,var_5499,call_5507,call_5519,const_5516,const_5517,var_5518,])
func_5520 = relay.Function([var_5499,var_5518,], output)
mod['func_5520'] = func_5520
mod = relay.transform.InferType()(mod)
mutated_mod['func_5520'] = func_5520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5520_call = mutated_mod.get_global_var('func_5520')
var_5522 = relay.var("var_5522", dtype = "float64", shape = (1274,))#candidate|5522|(1274,)|var|float64
var_5523 = relay.var("var_5523", dtype = "float32", shape = (1200,))#candidate|5523|(1200,)|var|float32
call_5521 = func_5520_call(var_5522,var_5523,)
output = call_5521
func_5524 = relay.Function([var_5522,var_5523,], output)
mutated_mod['func_5524'] = func_5524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2532_call = mod.get_global_var('func_2532')
func_2534_call = mutated_mod.get_global_var('func_2534')
call_5532 = relay.TupleGetItem(func_2532_call(), 0)
call_5533 = relay.TupleGetItem(func_2534_call(), 0)
output = call_5532
output2 = call_5533
func_5537 = relay.Function([], output)
mod['func_5537'] = func_5537
mod = relay.transform.InferType()(mod)
mutated_mod['func_5537'] = func_5537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5537_call = mutated_mod.get_global_var('func_5537')
call_5538 = func_5537_call()
output = call_5538
func_5539 = relay.Function([], output)
mutated_mod['func_5539'] = func_5539
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5629 = relay.var("var_5629", dtype = "float64", shape = (16, 7, 9))#candidate|5629|(16, 7, 9)|var|float64
uop_5630 = relay.erf(var_5629.astype('float64')) # shape=(16, 7, 9)
func_2547_call = mod.get_global_var('func_2547')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_5634 = func_2547_call()
call_5635 = func_2547_call()
func_2182_call = mod.get_global_var('func_2182')
func_2185_call = mutated_mod.get_global_var('func_2185')
var_5641 = relay.var("var_5641", dtype = "float64", shape = (7, 156))#candidate|5641|(7, 156)|var|float64
call_5640 = relay.TupleGetItem(func_2182_call(relay.reshape(var_5641.astype('float64'), [7, 12, 13])), 0)
call_5642 = relay.TupleGetItem(func_2185_call(relay.reshape(var_5641.astype('float64'), [7, 12, 13])), 0)
bop_5645 = relay.less(uop_5630.astype('bool'), relay.reshape(var_5629.astype('bool'), relay.shape_of(uop_5630))) # shape=(16, 7, 9)
var_5649 = relay.var("var_5649", dtype = "float64", shape = (16, 7, 9))#candidate|5649|(16, 7, 9)|var|float64
bop_5650 = relay.not_equal(uop_5630.astype('bool'), relay.reshape(var_5649.astype('bool'), relay.shape_of(uop_5630))) # shape=(16, 7, 9)
output = relay.Tuple([call_5634,call_5640,var_5641,bop_5645,bop_5650,])
output2 = relay.Tuple([call_5635,call_5642,var_5641,bop_5645,bop_5650,])
func_5658 = relay.Function([var_5629,var_5641,var_5649,], output)
mod['func_5658'] = func_5658
mod = relay.transform.InferType()(mod)
mutated_mod['func_5658'] = func_5658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5658_call = mutated_mod.get_global_var('func_5658')
var_5660 = relay.var("var_5660", dtype = "float64", shape = (16, 7, 9))#candidate|5660|(16, 7, 9)|var|float64
var_5661 = relay.var("var_5661", dtype = "float64", shape = (7, 156))#candidate|5661|(7, 156)|var|float64
var_5662 = relay.var("var_5662", dtype = "float64", shape = (16, 7, 9))#candidate|5662|(16, 7, 9)|var|float64
call_5659 = func_5658_call(var_5660,var_5661,var_5662,)
output = call_5659
func_5663 = relay.Function([var_5660,var_5661,var_5662,], output)
mutated_mod['func_5663'] = func_5663
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5695 = relay.var("var_5695", dtype = "float64", shape = (12, 6, 12))#candidate|5695|(12, 6, 12)|var|float64
uop_5696 = relay.erf(var_5695.astype('float64')) # shape=(12, 6, 12)
uop_5703 = relay.asinh(var_5695.astype('float32')) # shape=(12, 6, 12)
bop_5707 = relay.logical_xor(uop_5703.astype('uint64'), relay.reshape(var_5695.astype('uint64'), relay.shape_of(uop_5703))) # shape=(12, 6, 12)
output = relay.Tuple([uop_5696,bop_5707,])
output2 = relay.Tuple([uop_5696,bop_5707,])
F = relay.Function([var_5695,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_5695,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

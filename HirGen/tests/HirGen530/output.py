import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_263 = relay.var("var_263", dtype = "int8", shape = ())#candidate|263|()|var|int8
var_264 = relay.var("var_264", dtype = "int8", shape = (7, 14, 13))#candidate|264|(7, 14, 13)|var|int8
bop_265 = relay.bitwise_or(var_263.astype('int8'), var_264.astype('int8')) # shape=(7, 14, 13)
bop_268 = relay.logical_or(bop_265.astype('bool'), relay.reshape(var_264.astype('bool'), relay.shape_of(bop_265))) # shape=(7, 14, 13)
const_272 = relay.const([[[-8,9,2,-1,9,4,5,3,-6,-8,-8,3,-8],[4,5,-3,-4,-2,-6,-9,-7,10,2,-9,-10,7],[10,9,-8,1,-6,-6,-5,-7,1,6,9,-3,9],[-3,-9,-6,-2,-6,10,6,4,-6,-10,1,-9,3],[-3,2,8,-3,-8,5,6,2,1,-9,10,5,8],[-3,-3,6,-3,-9,4,8,-3,-1,4,-2,-3,-9],[8,-5,10,-5,6,-8,-2,10,9,7,10,-10,1],[-1,-2,-7,6,9,2,8,9,-9,-3,4,-8,5],[-9,4,6,4,8,10,-7,-10,5,9,2,-5,-6],[10,-10,-3,9,-8,-5,-2,-8,-6,1,4,-2,2],[-8,10,3,-9,4,-3,9,5,-6,6,-7,-6,6],[6,2,3,-4,5,4,2,6,-8,-9,-1,-10,-8],[9,9,6,5,-5,10,-1,7,-3,-3,6,-5,6],[1,-3,7,7,-9,-1,-2,1,6,-1,9,-5,2]],[[-6,8,5,10,-2,-9,-2,1,3,4,9,7,-4],[-3,-1,-10,-4,-8,10,6,-6,-9,3,6,7,-9],[-7,-6,5,9,6,10,8,8,8,9,7,4,2],[-8,-7,5,3,6,1,-1,-5,-7,-1,-2,-7,4],[-9,-5,-8,7,-10,-1,4,-1,5,3,7,4,5],[8,6,-7,10,-5,-5,-6,-5,-9,6,-5,4,-4],[8,-10,5,4,-9,4,2,-10,2,-3,-2,-9,4],[3,3,-10,7,-3,-7,-4,5,8,7,-6,3,-9],[4,5,-3,-8,8,-5,-10,-7,-3,-5,-1,8,10],[-9,3,-8,-8,-5,-1,-5,-2,6,-9,9,6,-4],[7,-4,-6,-8,3,-8,-8,9,-7,-10,7,1,1],[-1,3,1,-9,-5,-8,-6,8,1,8,-5,6,-3],[1,10,3,-8,-7,6,-4,3,-3,-2,-2,5,2],[-6,-5,-3,5,10,-5,6,-5,-9,3,-10,10,5]],[[4,-5,-2,-7,2,-5,1,8,-2,-9,-7,8,2],[-4,10,6,1,-2,-10,10,-7,2,-10,6,-3,3],[-7,9,8,10,3,4,5,7,-5,1,3,1,-2],[-7,6,-6,-8,-10,8,-8,8,-9,10,-2,2,-8],[-7,-8,10,7,-3,8,-9,2,10,10,-2,1,-4],[6,6,-3,-4,3,8,7,2,5,-4,9,-6,2],[-10,7,-5,2,-6,-4,9,2,5,9,7,-9,2],[4,8,6,-8,4,6,5,-4,-2,-6,8,-8,-9],[4,5,-7,-4,5,-5,-2,6,-6,2,10,10,-10],[9,9,2,-7,9,-8,-1,2,-7,4,6,6,9],[-4,4,-9,-4,1,10,-5,-2,-2,9,8,2,-1],[1,6,5,-8,4,2,-4,5,10,4,4,-6,2],[9,5,10,-9,-5,4,3,-9,-7,-7,8,2,-3],[10,1,1,-3,2,-2,10,5,-1,4,-3,-4,3]],[[2,-5,-4,-2,4,7,-2,3,-9,-3,6,3,3],[-3,8,10,1,-3,-10,-10,-2,4,-5,10,-9,-8],[-9,7,9,-9,-5,-7,4,-1,-8,-9,-7,4,1],[6,1,6,-5,1,4,10,-1,-6,-8,-1,8,-5],[-4,-7,-7,4,-6,-5,5,4,-8,-9,-3,5,-9],[-8,-6,-2,-5,7,3,-7,4,-2,10,8,-2,8],[-1,-9,-9,9,-1,8,-1,8,-8,3,-9,-1,-10],[-8,8,-8,-8,1,-3,5,-3,-1,-1,8,-4,-1],[3,9,-5,-6,2,3,-2,-9,7,2,-10,4,-10],[9,1,-4,-4,-8,1,-1,1,-4,10,-9,-9,7],[-3,-9,3,-6,1,-9,-4,-3,4,-9,10,7,9],[9,6,-7,8,2,7,-8,-10,3,-7,-1,4,5],[5,6,-7,-4,-4,3,-1,5,-5,-8,1,8,-10],[8,-1,8,4,-2,10,5,-8,-7,-7,9,-5,-6]],[[-8,4,-3,2,3,10,5,-10,9,-10,-6,-8,-9],[-5,-3,3,-3,-1,-9,-10,4,-2,3,7,-7,-9],[-4,-6,-5,1,1,-1,-3,3,-7,4,5,2,6],[-10,-6,6,9,7,4,-3,-2,-1,9,6,-9,7],[6,3,-1,-5,-5,9,6,7,-3,-4,7,1,1],[1,-8,7,-10,-6,-5,-7,5,-2,3,-8,2,-3],[-1,-4,-10,4,5,-1,-2,-7,-9,5,2,4,1],[-2,-8,-3,-7,-1,3,-4,7,-7,-4,5,-9,-9],[2,-6,7,-7,1,2,-8,-7,-10,-1,-8,-5,-3],[6,-3,-4,-8,9,8,-8,5,-9,5,-3,-8,-2],[-5,9,-1,9,-9,10,-3,3,-2,-2,-5,9,-8],[-4,7,5,7,9,8,-2,2,6,-9,-1,-2,-10],[-6,6,1,2,-8,-1,10,10,1,7,-4,-1,10],[5,-6,8,6,-8,3,-9,9,-5,2,-9,7,-6]],[[-6,3,-10,-7,-5,-8,8,2,-8,-2,10,5,3],[5,-9,1,10,1,-4,8,-5,4,6,5,-4,-10],[4,-8,-1,-9,6,4,-5,7,5,-3,-6,4,-3],[-4,3,3,3,-4,-4,5,-2,5,-5,-9,10,1],[-8,-7,-1,10,-7,3,4,-6,-10,-10,9,-2,-10],[7,4,7,2,-5,-7,8,5,5,7,-10,2,1],[-7,-8,-3,-8,-2,1,1,6,8,-3,3,6,1],[9,6,-5,-3,2,9,-5,9,6,1,-9,5,-5],[1,-10,-7,-6,-9,8,5,9,1,4,7,9,1],[8,1,-6,-5,5,-7,5,-1,1,-2,-9,-2,3],[4,-9,2,-2,-3,7,9,9,4,-6,-6,10,-5],[3,5,-7,7,-3,7,4,-8,-7,-5,-2,10,-4],[3,6,-5,5,4,7,2,-2,9,-9,9,1,2],[-10,1,1,-8,-4,-8,2,-3,-3,3,3,1,7]],[[8,1,3,-4,-7,-10,4,7,3,1,-10,-2,-10],[-3,5,-1,1,-2,-5,-1,-1,-7,-5,8,6,3],[-6,9,9,6,-3,6,-1,8,-5,10,10,-5,-4],[2,-2,5,9,3,5,2,6,-2,8,-5,-1,-1],[2,5,-8,-5,-1,8,4,7,-1,-7,-9,-4,-3],[10,-3,6,-8,1,-7,6,-7,-9,6,-10,7,3],[-8,-2,5,-4,4,6,-10,-8,7,8,-10,5,-3],[2,4,-5,-2,1,9,-10,7,3,-6,8,-6,-7],[1,4,-9,-5,4,5,-7,7,-4,-6,-4,-10,-3],[2,-3,6,1,10,-8,2,3,8,-4,5,-2,8],[-4,-4,7,6,5,3,-4,7,-6,-4,6,10,-8],[9,7,-6,8,-8,8,-4,-6,2,-10,1,-7,6],[8,-7,-2,-8,6,2,6,8,1,-10,10,6,10],[-5,-4,-2,8,1,-6,9,-5,-7,-8,-8,8,8]]], dtype = "int8")#candidate|272|(7, 14, 13)|const|int8
bop_273 = relay.right_shift(var_264.astype('uint16'), relay.reshape(const_272.astype('uint16'), relay.shape_of(var_264))) # shape=(7, 14, 13)
uop_298 = relay.exp(bop_268.astype('float32')) # shape=(7, 14, 13)
output = relay.Tuple([bop_273,uop_298,])
output2 = relay.Tuple([bop_273,uop_298,])
func_316 = relay.Function([var_263,var_264,], output)
mod['func_316'] = func_316
mod = relay.transform.InferType()(mod)
var_317 = relay.var("var_317", dtype = "int8", shape = ())#candidate|317|()|var|int8
var_318 = relay.var("var_318", dtype = "int8", shape = (7, 14, 13))#candidate|318|(7, 14, 13)|var|int8
output = func_316(var_317,var_318,)
func_319 = relay.Function([var_317,var_318,], output)
mutated_mod['func_319'] = func_319
mutated_mod = relay.transform.InferType()(mutated_mod)
const_347 = relay.const(-2, dtype = "int8")#candidate|347|()|const|int8
const_348 = relay.const([[[-8,-10,-6,3,5],[2,-1,-8,-10,6],[-2,1,10,8,6],[5,6,7,2,-9],[-8,-4,-5,2,7],[-9,7,-2,-7,4],[-6,7,6,6,-6],[2,-8,-6,1,8],[-8,-6,-7,9,-9],[-9,-1,6,2,5],[7,-3,4,-7,7],[-2,4,-9,6,-5]],[[2,9,2,-1,7],[4,5,-8,7,5],[-3,-1,5,-8,-10],[8,-6,-5,6,3],[-4,-7,4,-8,-3],[7,10,-10,9,-7],[-10,-3,6,5,4],[5,-2,-6,10,-7],[5,-6,3,-1,6],[5,5,-2,-4,4],[4,-7,-2,3,7],[2,6,-8,-7,-5]],[[-6,-9,-6,3,10],[9,7,-2,-1,10],[7,-1,-1,5,-9],[-1,9,-6,-4,7],[8,-10,4,-3,-7],[4,-4,-8,-5,5],[1,8,7,-5,7],[-5,-9,-8,-4,-9],[-4,4,9,7,5],[9,9,6,-3,8],[-4,-5,-7,6,-5],[-4,-8,-9,2,-1]],[[9,3,-7,-5,-1],[-10,-8,-7,-7,-8],[-6,9,3,-10,-5],[2,-1,1,1,8],[-9,-6,-1,-1,6],[9,2,-7,-10,-9],[-8,-7,3,4,-6],[-7,-9,3,8,10],[-3,-7,9,-1,-8],[3,1,-2,-10,2],[1,10,-4,1,6],[5,10,-6,3,9]]], dtype = "int8")#candidate|348|(4, 12, 5)|const|int8
bop_349 = relay.greater_equal(const_347.astype('bool'), const_348.astype('bool')) # shape=(4, 12, 5)
func_316_call = mod.get_global_var('func_316')
func_319_call = mutated_mod.get_global_var('func_319')
const_353 = relay.const([-3,1,10,-6,4,10,-5,3,-4,2,-8,-4,1,9,2,3,10,3,3,8,9,5,1,-9,2,-8,2,1,1,7,3,-9,2,-2,1,-4,-8,-4,9,-5,-5,-3,-7,8,-6,3,3,-2,-4,-1,4,7,8,-2,-5,8,-10,-4,-7,6,9,3,-3,-8,1,2,-9,-7,10,-2,8,4,-2,6,-3,3,4,-4,4,4,3,9,6,-7,-9,1,2,7,4,-3,8,8,5,10,4,-3,1,9,9,-4,-6,6,-8,1,-6,8,-2,7,8,5,5,-1,1,4,7,-8,2,-10,-5,-4,-7,7,1,-5,5,-3,9,7,-5,9,10,4,1,4,-4,9,3,1,1,-6,-7,7,4,-7,4,8,3,-7,5,2,-2,-3,8,10,1,6,-5,-7,4,8,9,-3,8,-7,-1,-6,-2,9,-4,-7,-5,4,-5,-10,4,8,-4,6,-3,6,-1,-9,3,1,7,4,-5,3,-9,1,-1,-7,-2,-8,5,8,-8,9,5,9,-1,3,1,-6,-10,-8,-5,-7,-7,1,9,-9,8,-8,-1,-4,-10,-8,2,-3,-10,3,-5,2,5,5,-5,-1,-4,6,6,6,7,-6,8,3,-2,3,9,9,-1,10,-1,-10,9,-8,6,-2,-10,3,-10,5,-3,9,-4,-7,-5,10,5,-8,-6,3,2,6,-6,1,-5,7,-5,-1,-7,5,-3,-7,-6,7,5,5,-5,-1,-2,-8,1,7,4,-6,-8,4,-7,-4,-9,-5,2,4,-1,-10,-9,9,4,5,-6,8,1,7,-6,-1,3,9,-5,3,-8,-8,1,-7,5,-10,3,9,3,-4,-7,2,-2,-5,4,3,-1,8,-10,5,-7,10,-7,3,-5,9,-1,-3,-1,-10,-4,-8,-5,7,1,3,-8,-5,-2,-5,5,-10,-4,-1,-1,2,3,-2,-8,6,-2,-7,-1,-7,3,3,-7,-8,6,-8,10,4,-1,4,7,9,8,-4,-10,-4,-5,3,-10,3,-10,-4,-2,-4,9,4,-5,-9,-1,-1,-2,-4,-2,8,-7,9,-3,-8,3,2,7,10,-9,6,-10,10,4,10,2,7,1,9,-8,3,-6,-5,-2,-8,6,2,-10,1,-6,-9,8,-10,-1,7,5,-3,6,5,-5,-9,-8,8,-3,2,-9,-10,7,8,-8,-9,6,5,10,-9,2,7,-9,7,-5,3,-2,-10,4,8,4,6,-9,-1,-10,7,8,-3,-2,-9,1,-8,-7,-3,10,-3,-1,4,10,3,6,4,-6,9,7,-3,-1,1,-3,9,8,-8,4,2,-7,-6,5,-5,4,8,-5,10,-6,-6,-7,-10,10,7,2,-8,2,-2,-1,-7,2,-8,8,4,9,3,-4,3,3,-8,7,3,-9,8,3,-8,-3,-1,2,-7,5,9,4,-5,-3,-1,-10,-2,9,-2,-7,7,-5,-5,6,-10,-3,-2,4,-4,-2,-7,-9,-3,1,3,4,-2,-10,7,-10,-9,-9,-7,-10,-8,-6,-5,6,-7,3,-6,2,7,-4,8,-5,-4,9,7,-4,2,-2,9,6,4,8,10,6,1,-4,-6,7,-5,-3,6,9,-1,6,8,6,5,2,3,3,-9,-3,7,-5,6,7,9,-1,-7,-10,3,5,-9,3,4,-4,-4,8,-6,-6,-4,6,6,-2,4,-8,-8,-5,9,-1,-4,7,-1,-9,-1,1,5,7,-5,-6,10,6,-6,-7,8,1,-2,-10,-5,-3,-4,-2,-2,-2,-7,-5,-2,-9,3,5,-3,-5,-5,9,4,6,6,6,-6,-2,7,-4,-8,7,-8,-5,9,7,5,-3,7,6,9,1,10,-2,3,-6,-8,4,-5,8,-9,5,-10,2,10,-3,9,4,-1,4,2,-9,-3,8,-4,-2,-3,6,7,-5,7,6,3,-5,8,-2,-1,5,-6,4,1,-2,4,10,-9,10,2,-1,-10,3,8,-10,-6,5,-8,-3,-6,5,-6,-3,9,-10,3,-8,-10,1,-6,-6,-8,6,9,-8,4,-7,8,5,5,-8,7,-1,7,-4,7,-3,3,2,9,-9,3,5,-5,-9,-6,-1,5,9,-6,-2,4,-9,-7,1,10,10,5,5,6,10,-2,-2,-3,-8,-5,-3,8,-8,-2,2,8,-3,7,-2,-1,2,5,2,-8,-10,-1,-4,4,3,-8,8,-4,8,1,6,-6,7,6,-1,8,-7,-4,-5,10,6,2,5,-7,9,5,-9,-4,2,4,2,5,-10,-10,-9,4,10,9,1,-10,-3,-6,6,7,-9,1,2,3,-7,10,7,1,-9,3,-6,2,8,10,-7,-1,-7,-10,-10,-2,7,-3,5,2,-4,-5,9,-10,5,-2,8,-9,-6,5,-1,3,10,-4,9,10,-2,6,2,10,-7,-8,-6,3,7,7,6,7,7,-2,9,10,6,-5,-3,6,7,-8,-2,-4,8,6,-5,-1,-6,9,-6,7,6,-2,6,10,3,-8,-8,5,-6,-9,8,5,4,9,4,3,7,10,3,-9,-7,-5,-1,-10,-5,-10,-10,5,7,-3,-10,-3,-10,-2,-3,3,-10,-7,-1,8,6,9,10,-8,-7,-2,-7,-6,7,4,-9,-2,-7,9,-5,-6,-4,-5,-6,-3,-3,-2,9,-9,-3,8,8,-2,10,5,-8,-4,-3,-7,1,-5,-7,7,2,2,-7,-9,2,-3,3,-8,8,-3,1,3,-2,-10,-3,2,-3,3,7,-8,-3,1,-9,-7,9,10,-2,5,9,-2,2,-10,-2,-4,2,8,-3,3,6,-8,2,8,-9,9,-6,-2,8,-3,4,-7,-1,2,-4,5,7,-4,1,4,-4,-2,5,-9,6,3,-1,-6,5,-8,5,8,9,10,5,2,6,-10,-7,-3,-4,5,-7,10,9,3,-1,5,-5,2,8,9,-9,4,-1,1,3,1,-6,-2,-8,10,-5,1,-1,-10,-8,-2,10,-5,5,6,-1,-8,9,4,6,-9,9,3,-5,-9,-1,-4,-9,2,4,-1,-5,3,-10,1,1,9,10,-1,4,-9,-3,6,1,-7,3,3,-7,-2,-3,5,1,-7,-5,-7,8,-5,-1,6,-8,9,9,9,-8,4,-4,-7,-2,-5,3,-5,-9,6,1,2,-3,1,2,-9,-3,-4,-10,1,7,9,7,3,-6,8,10,-9,10,4,-1,4,6,10,-1,7,6,-10,-10,1,-1,-5,8,4,3,-1,3,-8,-5,2,-1,6,5,-10,-8,-2,9,-9,-1,-6,3,9,-5,4,7,-8,6,-6,9,-7,9,5,9,7,-9,4,-2,-9,-2,-9,-8,9,-10,-7,3,5,5,3,5,4,5,-5,1,-6,-6,3,-3,-10,-1,3,2,7], dtype = "int8")#candidate|353|(1274,)|const|int8
call_352 = relay.TupleGetItem(func_316_call(relay.reshape(const_347.astype('int8'), []), relay.reshape(const_353.astype('int8'), [7, 14, 13]), ), 1)
call_354 = relay.TupleGetItem(func_319_call(relay.reshape(const_347.astype('int8'), []), relay.reshape(const_353.astype('int8'), [7, 14, 13]), ), 1)
output = relay.Tuple([bop_349,call_352,const_353,])
output2 = relay.Tuple([bop_349,call_354,const_353,])
func_356 = relay.Function([], output)
mod['func_356'] = func_356
mod = relay.transform.InferType()(mod)
output = func_356()
func_357 = relay.Function([], output)
mutated_mod['func_357'] = func_357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_356_call = mod.get_global_var('func_356')
func_357_call = mutated_mod.get_global_var('func_357')
call_358 = relay.TupleGetItem(func_356_call(), 2)
call_359 = relay.TupleGetItem(func_357_call(), 2)
uop_373 = relay.erf(call_358.astype('float64')) # shape=(1274,)
uop_375 = relay.erf(call_359.astype('float64')) # shape=(1274,)
output = uop_373
output2 = uop_375
func_384 = relay.Function([], output)
mod['func_384'] = func_384
mod = relay.transform.InferType()(mod)
mutated_mod['func_384'] = func_384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_384_call = mutated_mod.get_global_var('func_384')
call_385 = func_384_call()
output = call_385
func_386 = relay.Function([], output)
mutated_mod['func_386'] = func_386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_384_call = mod.get_global_var('func_384')
func_386_call = mutated_mod.get_global_var('func_386')
call_387 = func_384_call()
call_388 = func_384_call()
output = call_387
output2 = call_388
func_397 = relay.Function([], output)
mod['func_397'] = func_397
mod = relay.transform.InferType()(mod)
output = func_397()
func_398 = relay.Function([], output)
mutated_mod['func_398'] = func_398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_356_call = mod.get_global_var('func_356')
func_357_call = mutated_mod.get_global_var('func_357')
call_403 = relay.TupleGetItem(func_356_call(), 2)
call_404 = relay.TupleGetItem(func_357_call(), 2)
output = relay.Tuple([call_403,])
output2 = relay.Tuple([call_404,])
func_415 = relay.Function([], output)
mod['func_415'] = func_415
mod = relay.transform.InferType()(mod)
output = func_415()
func_416 = relay.Function([], output)
mutated_mod['func_416'] = func_416
mutated_mod = relay.transform.InferType()(mutated_mod)
var_425 = relay.var("var_425", dtype = "float64", shape = (7, 13, 16))#candidate|425|(7, 13, 16)|var|float64
var_426 = relay.var("var_426", dtype = "float64", shape = (7, 13, 16))#candidate|426|(7, 13, 16)|var|float64
bop_427 = relay.floor_divide(var_425.astype('float64'), relay.reshape(var_426.astype('float64'), relay.shape_of(var_425))) # shape=(7, 13, 16)
output = bop_427
output2 = bop_427
func_435 = relay.Function([var_425,var_426,], output)
mod['func_435'] = func_435
mod = relay.transform.InferType()(mod)
var_436 = relay.var("var_436", dtype = "float64", shape = (7, 13, 16))#candidate|436|(7, 13, 16)|var|float64
var_437 = relay.var("var_437", dtype = "float64", shape = (7, 13, 16))#candidate|437|(7, 13, 16)|var|float64
output = func_435(var_436,var_437,)
func_438 = relay.Function([var_436,var_437,], output)
mutated_mod['func_438'] = func_438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_356_call = mod.get_global_var('func_356')
func_357_call = mutated_mod.get_global_var('func_357')
call_548 = relay.TupleGetItem(func_356_call(), 0)
call_549 = relay.TupleGetItem(func_357_call(), 0)
output = call_548
output2 = call_549
func_555 = relay.Function([], output)
mod['func_555'] = func_555
mod = relay.transform.InferType()(mod)
mutated_mod['func_555'] = func_555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_555_call = mutated_mod.get_global_var('func_555')
call_556 = func_555_call()
output = call_556
func_557 = relay.Function([], output)
mutated_mod['func_557'] = func_557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_415_call = mod.get_global_var('func_415')
func_416_call = mutated_mod.get_global_var('func_416')
call_558 = relay.TupleGetItem(func_415_call(), 0)
call_559 = relay.TupleGetItem(func_416_call(), 0)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_563 = func_555_call()
call_564 = func_555_call()
output = relay.Tuple([call_558,call_563,])
output2 = relay.Tuple([call_559,call_564,])
func_568 = relay.Function([], output)
mod['func_568'] = func_568
mod = relay.transform.InferType()(mod)
output = func_568()
func_569 = relay.Function([], output)
mutated_mod['func_569'] = func_569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_384_call = mod.get_global_var('func_384')
func_386_call = mutated_mod.get_global_var('func_386')
call_588 = func_384_call()
call_589 = func_384_call()
func_397_call = mod.get_global_var('func_397')
func_398_call = mutated_mod.get_global_var('func_398')
call_616 = func_397_call()
call_617 = func_397_call()
bop_638 = relay.floor_mod(call_616.astype('float64'), relay.reshape(call_588.astype('float64'), relay.shape_of(call_616))) # shape=(1274,)
bop_641 = relay.floor_mod(call_617.astype('float64'), relay.reshape(call_589.astype('float64'), relay.shape_of(call_617))) # shape=(1274,)
output = relay.Tuple([bop_638,])
output2 = relay.Tuple([bop_641,])
func_643 = relay.Function([], output)
mod['func_643'] = func_643
mod = relay.transform.InferType()(mod)
mutated_mod['func_643'] = func_643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_643_call = mutated_mod.get_global_var('func_643')
call_644 = func_643_call()
output = call_644
func_645 = relay.Function([], output)
mutated_mod['func_645'] = func_645
mutated_mod = relay.transform.InferType()(mutated_mod)
const_660 = relay.const([[[-8,10,-1,-2,7,2,-3,-3,-9,-7,1,9,9,4],[9,-4,4,10,-2,2,2,3,8,-10,4,-1,1,10],[10,-8,9,-6,7,-10,8,-10,-7,-6,10,9,5,8],[2,6,3,10,5,5,-2,10,-7,10,5,9,4,-9],[10,5,-7,-3,-4,-2,-7,-2,4,-8,-4,6,-6,5],[5,-9,3,-6,-4,1,-9,8,4,6,-3,8,7,-7],[1,5,7,-10,9,-1,2,-10,6,1,-7,7,-5,7],[1,7,9,-7,-7,7,10,8,1,-4,-7,9,4,-5],[-3,1,8,7,9,4,-8,3,-10,-3,-2,-7,4,4],[-4,-6,-1,2,-4,-9,-10,10,-3,-7,7,-3,8,7],[-8,9,10,-10,10,-2,-8,9,1,7,4,8,-5,-10]],[[3,-3,6,4,7,7,-3,-4,-10,-10,-4,-7,-10,-2],[8,-7,7,1,-4,-1,8,-8,9,-3,-7,-9,7,-1],[-3,-3,3,9,2,7,-6,6,-8,-6,-8,-7,-9,8],[-4,-6,-10,-5,10,6,7,-7,4,6,8,1,10,-3],[-6,-6,9,-5,-2,-3,8,4,3,-8,-5,-8,-8,-10],[-9,-7,5,-3,-7,3,-3,-10,6,-8,-5,5,-3,-2],[-4,-1,-7,-5,-4,-7,1,10,8,6,-6,-4,-1,3],[-4,6,9,-8,-6,1,3,2,-9,7,6,3,6,-5],[8,2,2,7,-5,-10,-10,-2,-10,-7,9,-10,7,-9],[3,-1,-1,-3,9,6,5,-7,-8,7,5,9,-8,-3],[2,-10,-3,6,-2,-6,-8,-6,-8,-9,-4,-4,-10,7]],[[4,7,-9,1,-7,-7,-7,-1,7,10,-2,4,5,7],[3,-5,3,2,-8,7,1,4,6,5,-3,-9,-3,-1],[2,-4,-3,1,5,-9,6,8,-9,-7,8,-8,-6,5],[1,8,5,8,4,-5,1,-2,1,4,2,5,-3,2],[2,-1,-5,-6,-2,10,4,-5,-9,-3,6,-10,-1,10],[-8,5,2,-4,-4,1,7,-2,-7,9,1,-8,-1,7],[3,-10,-2,2,-1,-2,9,3,-5,10,-1,7,2,10],[4,-7,-5,-10,4,-10,10,-1,5,8,8,-9,-8,-10],[-4,4,-8,-8,10,9,-2,10,-10,3,-5,-5,-9,-4],[3,-7,-4,8,6,4,-4,9,-1,7,1,9,9,1],[-10,-4,8,-3,-4,4,-7,-5,1,-6,-4,6,-1,1]],[[10,-9,-6,-5,-6,-7,-7,10,9,-4,1,3,-3,3],[7,-5,8,7,-6,-8,-1,5,-4,-4,2,3,10,-1],[6,-8,-7,-10,-4,9,-1,4,-10,2,6,8,7,-1],[7,1,-7,-8,1,-1,7,7,-5,-2,2,2,3,5],[-1,-7,10,4,7,4,-10,-3,3,4,2,6,1,3],[-9,-4,-5,-1,-8,-4,8,3,3,6,-7,-7,-8,5],[2,-3,-6,-3,7,6,10,-10,-10,-8,-6,-8,-7,-4],[-7,-4,6,-1,-6,3,-8,-7,-1,-9,-8,1,-3,9],[-5,5,-1,-4,-8,-9,-7,8,-1,6,-1,-10,-3,-7],[3,8,-8,-1,-4,7,-10,-6,7,4,8,8,6,10],[-1,8,4,4,-1,-2,2,6,-4,-10,-8,-8,6,-8]],[[8,-2,7,-4,7,3,-5,-4,-2,10,5,-8,-4,-1],[-6,3,-7,2,-8,-4,-6,-5,-2,9,-9,2,7,-9],[8,-3,9,8,-2,1,-1,-5,4,8,-10,7,-6,-5],[1,-5,-6,-3,6,-4,-4,-8,-1,-1,-4,-10,8,4],[-8,-6,-5,-8,-9,9,-2,4,9,2,5,-7,-2,3],[-4,-3,-8,-1,-10,-5,10,4,8,-10,10,-8,-5,3],[-2,9,-3,-10,1,-3,2,10,3,-8,2,7,1,-4],[-10,6,-3,-2,5,-7,-7,7,-10,3,-9,-2,10,2],[7,-8,2,1,-6,4,-6,10,-1,3,2,-5,-7,-3],[-8,-8,10,2,-9,9,-7,-9,-4,-4,-5,-6,-3,9],[10,8,-6,3,-2,8,-9,7,10,6,-4,-8,-7,8]],[[-7,-9,1,-5,6,3,-4,-9,7,-8,3,-10,-4,8],[5,1,-4,-9,10,2,-1,-3,-5,7,-10,1,-8,-10],[9,4,-5,6,-9,-2,6,-4,8,-1,2,7,10,5],[6,10,5,-9,-3,8,7,-1,-6,1,4,7,9,-8],[-1,-9,-2,4,7,8,10,1,9,-2,7,-9,5,-9],[-1,5,1,2,-5,1,-2,9,8,-9,2,-2,-5,3],[8,-6,8,2,5,3,10,9,4,2,-2,8,2,-4],[-10,9,-9,-6,6,6,-2,1,-2,2,2,7,6,-7],[-5,7,10,-3,3,-5,9,-2,10,-1,-6,8,10,4],[-3,4,4,5,-9,6,-10,-3,-2,-10,-8,3,-7,-4],[8,-2,-10,9,10,-9,-4,3,6,5,-10,-10,-9,4]],[[6,2,7,5,10,3,-7,9,7,-9,9,-3,-10,-9],[10,6,3,-9,10,10,-7,-10,-5,-8,-2,-9,3,-9],[-7,-4,4,-10,-8,9,-3,9,-4,-6,9,-3,-3,5],[-4,-8,5,-7,-4,5,-8,-9,7,-2,-9,2,-2,-3],[7,8,-2,-4,2,5,-8,5,7,6,-4,-5,-7,-2],[-3,-4,5,-4,2,-4,-7,8,1,1,9,-2,-6,-7],[5,3,-6,-8,1,-8,10,-5,2,2,9,1,-9,-1],[1,9,7,4,9,4,6,2,5,2,-3,9,6,-7],[3,3,8,-10,5,10,-9,-3,8,10,-5,9,7,-9],[7,9,6,4,5,8,-9,4,-5,-5,-4,-8,-7,8],[-6,8,-3,-3,-10,-4,10,-3,-2,-9,3,2,8,8]],[[-9,-1,3,8,8,-8,8,-3,4,9,4,5,-3,9],[-8,-7,5,-2,9,6,-1,8,-6,8,-9,-8,-9,2],[-3,-3,8,-10,10,-3,1,-8,6,2,7,4,8,-8],[-8,-9,3,-3,-4,6,-4,2,-8,10,6,-6,3,-8],[-3,-8,-9,1,10,5,-7,-7,7,8,2,1,-9,1],[-8,-3,-5,3,1,-6,-10,-5,1,7,1,-5,-3,-1],[5,6,-10,6,1,7,-5,-5,3,1,-9,-2,-4,-7],[5,-1,1,2,6,5,9,-1,7,9,-5,-6,9,-9],[6,9,-4,-10,10,6,-1,-5,-5,5,4,1,-2,-4],[-4,-3,-8,2,5,-9,-5,10,6,-6,-4,2,-5,-5],[-2,10,-3,8,7,5,3,8,-9,-6,4,5,-5,5]],[[-1,-6,1,-1,-9,6,-1,10,5,2,6,8,-9,9],[-9,3,5,5,7,10,4,-2,9,9,-1,5,-10,-9],[-5,5,5,5,9,-7,5,2,5,6,-7,-7,7,-6],[-4,-6,-5,4,8,9,-9,-2,4,-4,8,-3,7,3],[-2,9,-6,-9,-7,-1,2,2,6,8,8,1,3,4],[3,-2,-8,5,9,5,6,-10,-5,2,8,3,1,3],[7,-4,7,-7,10,-9,5,4,1,10,6,-9,-3,2],[8,9,-5,6,-8,6,-5,6,10,-1,-4,9,4,-6],[-2,-10,4,-6,2,-10,4,-10,-9,-1,4,10,-7,-10],[6,-8,6,9,-9,8,6,2,2,-3,6,-1,-7,2],[1,7,-10,8,-4,6,3,-3,-2,10,-6,-6,-8,7]]], dtype = "int8")#candidate|660|(9, 11, 14)|const|int8
var_661 = relay.var("var_661", dtype = "int8", shape = (9, 11, 14))#candidate|661|(9, 11, 14)|var|int8
bop_662 = relay.less(const_660.astype('bool'), relay.reshape(var_661.astype('bool'), relay.shape_of(const_660))) # shape=(9, 11, 14)
func_384_call = mod.get_global_var('func_384')
func_386_call = mutated_mod.get_global_var('func_386')
call_676 = func_384_call()
call_677 = func_384_call()
output = relay.Tuple([bop_662,call_676,])
output2 = relay.Tuple([bop_662,call_677,])
func_736 = relay.Function([var_661,], output)
mod['func_736'] = func_736
mod = relay.transform.InferType()(mod)
mutated_mod['func_736'] = func_736
mutated_mod = relay.transform.InferType()(mutated_mod)
var_737 = relay.var("var_737", dtype = "int8", shape = (9, 11, 14))#candidate|737|(9, 11, 14)|var|int8
func_736_call = mutated_mod.get_global_var('func_736')
call_738 = func_736_call(var_737)
output = call_738
func_739 = relay.Function([var_737], output)
mutated_mod['func_739'] = func_739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_643_call = mod.get_global_var('func_643')
func_645_call = mutated_mod.get_global_var('func_645')
call_781 = relay.TupleGetItem(func_643_call(), 0)
call_782 = relay.TupleGetItem(func_645_call(), 0)
output = relay.Tuple([call_781,])
output2 = relay.Tuple([call_782,])
func_785 = relay.Function([], output)
mod['func_785'] = func_785
mod = relay.transform.InferType()(mod)
mutated_mod['func_785'] = func_785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_785_call = mutated_mod.get_global_var('func_785')
call_786 = func_785_call()
output = call_786
func_787 = relay.Function([], output)
mutated_mod['func_787'] = func_787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_384_call = mod.get_global_var('func_384')
func_386_call = mutated_mod.get_global_var('func_386')
call_791 = func_384_call()
call_792 = func_384_call()
func_415_call = mod.get_global_var('func_415')
func_416_call = mutated_mod.get_global_var('func_416')
call_814 = relay.TupleGetItem(func_415_call(), 0)
call_815 = relay.TupleGetItem(func_416_call(), 0)
func_785_call = mod.get_global_var('func_785')
func_787_call = mutated_mod.get_global_var('func_787')
call_821 = relay.TupleGetItem(func_785_call(), 0)
call_822 = relay.TupleGetItem(func_787_call(), 0)
output = relay.Tuple([call_791,call_814,call_821,])
output2 = relay.Tuple([call_792,call_815,call_822,])
func_827 = relay.Function([], output)
mod['func_827'] = func_827
mod = relay.transform.InferType()(mod)
output = func_827()
func_828 = relay.Function([], output)
mutated_mod['func_828'] = func_828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_785_call = mod.get_global_var('func_785')
func_787_call = mutated_mod.get_global_var('func_787')
call_850 = relay.TupleGetItem(func_785_call(), 0)
call_851 = relay.TupleGetItem(func_787_call(), 0)
func_384_call = mod.get_global_var('func_384')
func_386_call = mutated_mod.get_global_var('func_386')
call_853 = func_384_call()
call_854 = func_384_call()
output = relay.Tuple([call_850,call_853,])
output2 = relay.Tuple([call_851,call_854,])
func_874 = relay.Function([], output)
mod['func_874'] = func_874
mod = relay.transform.InferType()(mod)
output = func_874()
func_875 = relay.Function([], output)
mutated_mod['func_875'] = func_875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_827_call = mod.get_global_var('func_827')
func_828_call = mutated_mod.get_global_var('func_828')
call_933 = relay.TupleGetItem(func_827_call(), 2)
call_934 = relay.TupleGetItem(func_828_call(), 2)
func_785_call = mod.get_global_var('func_785')
func_787_call = mutated_mod.get_global_var('func_787')
call_945 = relay.TupleGetItem(func_785_call(), 0)
call_946 = relay.TupleGetItem(func_787_call(), 0)
uop_947 = relay.cosh(call_945.astype('float32')) # shape=(1274,)
uop_949 = relay.cosh(call_946.astype('float32')) # shape=(1274,)
bop_960 = relay.not_equal(uop_947.astype('bool'), relay.reshape(call_933.astype('bool'), relay.shape_of(uop_947))) # shape=(1274,)
bop_963 = relay.not_equal(uop_949.astype('bool'), relay.reshape(call_934.astype('bool'), relay.shape_of(uop_949))) # shape=(1274,)
func_415_call = mod.get_global_var('func_415')
func_416_call = mutated_mod.get_global_var('func_416')
call_974 = relay.TupleGetItem(func_415_call(), 0)
call_975 = relay.TupleGetItem(func_416_call(), 0)
func_415_call = mod.get_global_var('func_415')
func_416_call = mutated_mod.get_global_var('func_416')
call_998 = relay.TupleGetItem(func_415_call(), 0)
call_999 = relay.TupleGetItem(func_416_call(), 0)
output = relay.Tuple([bop_960,call_974,call_998,])
output2 = relay.Tuple([bop_963,call_975,call_999,])
func_1004 = relay.Function([], output)
mod['func_1004'] = func_1004
mod = relay.transform.InferType()(mod)
output = func_1004()
func_1005 = relay.Function([], output)
mutated_mod['func_1005'] = func_1005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_1034 = func_555_call()
call_1035 = func_555_call()
func_643_call = mod.get_global_var('func_643')
func_645_call = mutated_mod.get_global_var('func_645')
call_1041 = relay.TupleGetItem(func_643_call(), 0)
call_1042 = relay.TupleGetItem(func_645_call(), 0)
uop_1051 = relay.tan(call_1034.astype('float64')) # shape=(4, 12, 5)
uop_1053 = relay.tan(call_1035.astype('float64')) # shape=(4, 12, 5)
func_435_call = mod.get_global_var('func_435')
func_438_call = mutated_mod.get_global_var('func_438')
var_1056 = relay.var("var_1056", dtype = "float64", shape = (1456,))#candidate|1056|(1456,)|var|float64
call_1055 = func_435_call(relay.reshape(var_1056.astype('float64'), [7, 13, 16]), relay.reshape(var_1056.astype('float64'), [7, 13, 16]), )
call_1057 = func_435_call(relay.reshape(var_1056.astype('float64'), [7, 13, 16]), relay.reshape(var_1056.astype('float64'), [7, 13, 16]), )
output = relay.Tuple([call_1041,uop_1051,call_1055,var_1056,])
output2 = relay.Tuple([call_1042,uop_1053,call_1057,var_1056,])
func_1067 = relay.Function([var_1056,], output)
mod['func_1067'] = func_1067
mod = relay.transform.InferType()(mod)
var_1068 = relay.var("var_1068", dtype = "float64", shape = (1456,))#candidate|1068|(1456,)|var|float64
output = func_1067(var_1068)
func_1069 = relay.Function([var_1068], output)
mutated_mod['func_1069'] = func_1069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_874_call = mod.get_global_var('func_874')
func_875_call = mutated_mod.get_global_var('func_875')
call_1132 = relay.TupleGetItem(func_874_call(), 1)
call_1133 = relay.TupleGetItem(func_875_call(), 1)
output = call_1132
output2 = call_1133
func_1146 = relay.Function([], output)
mod['func_1146'] = func_1146
mod = relay.transform.InferType()(mod)
output = func_1146()
func_1147 = relay.Function([], output)
mutated_mod['func_1147'] = func_1147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_568_call = mod.get_global_var('func_568')
func_569_call = mutated_mod.get_global_var('func_569')
call_1179 = relay.TupleGetItem(func_568_call(), 0)
call_1180 = relay.TupleGetItem(func_569_call(), 0)
func_435_call = mod.get_global_var('func_435')
func_438_call = mutated_mod.get_global_var('func_438')
const_1188 = relay.const([9.572785,-9.782046,-3.793828,6.478415,7.148183,5.492479,-8.133460,9.320803,9.825299,0.284929,-4.781018,-9.383430,-4.061607,4.787992,-3.129833,-9.420014,4.645896,7.358320,1.253148,7.373201,-5.262718,5.326162,-3.468531,-5.822863,-7.029478,-6.646419,-8.832535,9.427252,1.397204,-4.076783,6.846701,-0.064027,9.303566,-7.871230,-2.458337,1.804906,-3.060016,1.330057,0.461944,9.980871,5.493177,-4.875303,-7.796380,-7.737954,8.446191,7.036076,-6.244184,9.465008,7.617496,-2.568557,6.184907,2.427793,7.337924,-3.118375,-8.274802,-7.019534,8.091443,-1.254201,-8.996911,3.227119,2.759784,-0.142182,-6.728616,-7.597312,-0.649592,7.407346,-0.945211,2.729220,-8.068260,0.364419,2.135099,-8.454723,-9.513622,-5.065615,-0.367458,-9.047811,2.018387,5.894593,-5.486520,9.368431,-5.645997,-3.887990,0.171661,-5.573449,0.148268,6.607325,3.654667,8.678244,-9.499842,-0.787564,-5.900024,-0.954525,-2.697095,7.597769,1.735338,2.191983,-6.832157,1.176530,7.279885,3.993631,2.053009,-4.062639,-7.288176,-4.451787,7.973450,9.209299,-3.684009,0.598843,6.335330,8.158443,-5.965659,7.398071,9.692561,-0.857816,-6.164684,8.985114,-0.989453,4.311100,-9.705723,1.064445,-4.815870,1.514159,4.703087,2.879477,3.544071,5.876452,1.484745,-7.428186,1.662867,-5.796224,-9.964985,5.618566,5.674843,-4.055238,2.849286,8.950963,-7.124683,-2.375050,-9.182301,4.728918,-0.426559,1.616286,4.715728,-8.887781,-4.337956,-6.606914,0.248189,-5.737449,-5.696532,-3.356727,-0.463853,-1.316100,-7.535007,-2.894737,-2.478726,-0.581049,5.860451,8.458353,-0.013649,4.786850,-5.296777,8.560358,-8.213965,-5.189001,-6.085332,-7.347571,-9.608535,-6.852114,3.579488,5.764962,-8.433655,-6.824605,2.664849,-7.120488,-2.174976,3.959838,6.684877,-8.079235,-2.983344,9.979089,6.671869,6.803351,-5.537359,-9.531732,6.485380,3.642157,6.742316,9.695216,0.164432,-3.052186,4.975606,-2.138276,9.989105,-9.962842,9.131389,-2.007524,3.344651,3.431135,2.469091,6.528430,1.022267,-3.328357,7.315859,-6.921393,1.952456,-5.542649,-5.646812,-2.596074,4.595387,9.475378,-1.839835,1.109757,0.033690,9.280651,-1.159370,9.856982,7.420357,-8.454161,9.608662,-6.623176,-5.270226,-5.071419,6.692917,-5.619171,1.909211,-4.035456,2.041493,-8.322815,-5.414177,-2.845047,-1.737741,-3.111399,1.667746,-0.328894,9.857548,-8.350338,4.244979,-2.930934,4.664126,5.807581,-1.451938,-5.210456,6.129244,0.209153,-4.149772,-9.149120,6.131273,-6.770825,-8.363478,-7.548447,3.033946,7.576700,3.251768,-5.215731,-1.791263,7.207838,1.928096,-9.182396,-3.273343,-8.987209,6.446499,-4.079250,7.418275,-0.536599,9.520386,-6.094517,0.427639,-1.418902,5.429065,1.748947,-4.613299,6.714271,-7.175636,1.814499,0.343859,4.069061,-4.692801,5.100081,-6.940337,0.531986,-5.631904,0.518158,5.308798,-4.578307,-7.240909,-1.109103,7.391323,-5.851002,-0.576269,-8.878607,7.961545,-2.097443,0.238377,0.032842,1.122690,-7.603246,-4.327884,2.599921,1.774255,6.384557,2.299964,-3.263670,5.191816,-4.962131,-8.082037,2.473516,-8.854314,-3.731983,2.031091,-9.787386,-2.988108,4.958820,-6.285787,3.025612,-5.521967,4.640836,-9.739502,-8.994202,-3.746693,9.320989,-0.648274,-7.498087,1.783144,-4.691226,-9.005071,7.089376,4.791305,-2.482640,-3.436361,4.444888,-2.077666,-2.132768,0.655020,-1.451752,-8.702906,-7.295816,-2.435996,9.249024,9.406690,-3.661935,-1.546794,2.731037,-7.662965,1.839924,8.671117,-6.899698,4.225849,-4.442951,3.046271,-3.583754,7.417633,-0.897283,5.192917,9.813999,-1.078549,8.166455,6.905391,-7.225594,-3.446048,-8.394722,7.873933,7.291172,-8.312815,9.296721,-5.131880,6.231365,-2.957769,5.478989,9.246374,9.137467,-6.310036,5.966816,7.499544,-6.865290,5.188726,4.446211,5.563185,-4.103448,-5.017607,3.108315,3.524194,-0.024960,4.828619,-5.422497,-7.024593,-7.679766,-3.455878,6.093326,5.173955,3.825180,-2.208822,9.808068,6.966032,1.186815,2.615319,-8.663758,4.138663,3.191835,-5.245557,-5.139178,0.628068,5.698759,-8.529956,3.341358,-9.940905,-5.546367,9.083306,-3.129757,1.598241,-2.380875,6.469010,-3.577257,-4.760186,2.623749,8.194138,0.464252,-4.895535,-7.697422,0.372896,-8.068135,-8.456798,7.036679,2.322455,-0.606403,3.930251,3.810157,4.352658,-4.436386,7.937076,-3.258190,5.201541,0.753216,-3.897441,-1.715356,3.533036,-0.391777,6.379114,3.303318,6.142413,-7.458775,2.154255,3.055157,2.814921,-5.328684,0.525010,6.338138,-5.477615,-0.422131,-0.499490,8.018186,-2.127129,1.831659,0.364377,-0.261514,-6.346064,3.433433,-4.445456,-9.285888,-8.069675,1.687511,4.563616,-7.897209,1.765303,-5.382624,2.474515,-7.347277,0.287885,-0.203364,-6.992847,-7.597272,4.773677,-8.512470,-7.720486,9.901212,4.079856,5.306056,4.738491,5.147868,-7.097906,-1.931031,6.947513,7.331974,-6.655799,2.156816,-1.817153,1.532230,9.487999,-4.514966,-2.551669,6.129499,-2.974711,-9.090804,-0.001587,-4.529363,9.773019,1.466650,8.681402,-4.317816,-4.735729,5.279777,7.556840,-5.382545,-2.608552,-6.820304,-1.255544,8.130582,-6.197359,-6.493100,2.084023,-1.352028,5.583914,5.477712,-3.384734,-2.497794,7.534160,-4.018156,-1.710520,6.170655,7.733729,1.113136,8.918271,-7.263277,-3.647145,7.703969,8.437700,-8.905663,7.545929,-0.978526,5.893158,-7.746856,-6.990522,6.378528,0.312504,7.684992,5.651538,-5.893703,0.321098,-4.653899,8.074787,2.663459,0.580043,8.723225,3.501723,2.265497,-9.998455,3.873380,-5.452040,8.780600,-2.537508,-4.218327,2.106979,-2.628342,4.789764,-9.346714,-0.873499,4.715026,4.613978,-9.438022,-9.128042,-5.272753,9.976175,4.946822,-9.941742,6.880008,-9.280681,-9.317058,-4.655350,-0.822891,-2.653685,-5.868730,8.830862,-3.764534,-7.134861,3.884281,-0.397717,8.605511,-2.199368,4.053849,0.014819,6.260947,-5.144938,6.689228,-5.461778,-3.365861,-5.324165,-1.064624,7.772906,3.741614,1.680709,-7.066108,-3.304505,-7.021936,7.770823,6.949479,-3.824591,-9.436860,5.393040,-3.348179,3.646725,-7.146140,2.236135,9.359715,3.158675,8.497030,-4.805122,6.931449,1.732370,2.785456,5.020181,-3.925433,0.470084,2.507895,-5.888630,-8.411618,-8.945587,-9.232483,5.772317,-7.705527,-6.403844,-9.657326,-1.389046,3.494991,5.797441,-6.475098,0.651633,-8.405938,1.507404,9.911009,5.077629,8.993976,-3.027256,-0.444964,-4.859653,5.128503,-0.462594,2.637219,9.985629,-4.714812,8.209141,5.776180,4.873897,4.080010,3.703112,5.210704,-8.636908,8.647003,-2.958651,1.397238,-1.664544,3.679146,-7.760754,4.769024,1.398671,-8.380974,-2.767085,3.186074,9.191564,-3.086847,-1.705274,-4.539188,8.381060,2.625454,3.519263,-6.310347,9.634690,-2.783765,-4.730079,3.601647,1.688808,-6.708463,-3.047709,-0.957705,-0.549041,-6.610102,-3.884510,4.440196,-9.512648,8.145361,0.655086,-3.012415,6.093822,-2.353682,-4.944018,3.560340,9.717406,-4.147117,4.715702,-9.495362,2.816478,-5.148052,3.615494,8.876221,3.994955,1.738201,-4.759637,2.572054,-6.756253,5.680210,-7.360992,-3.904539,-0.463071,3.798268,4.389127,8.141778,-6.783996,-8.255686,-7.577744,-6.397581,-8.442628,-5.401703,0.319961,-2.350494,-8.902322,-1.549762,-7.920824,-5.541176,8.334107,8.773822,6.118710,-0.470905,-6.470590,8.211676,-8.272349,-5.640943,0.154874,-1.633690,2.125427,-7.154118,-3.593247,-8.387147,-5.094889,-6.358333,-0.490444,-2.425453,-4.847331,2.646641,-5.700927,3.998837,-4.667806,8.700760,2.810524,-4.433444,6.894874,-2.121174,-8.393584,-0.594386,4.225642,-4.539604,-2.942928,-1.730155,9.246182,-3.491819,-6.278806,3.467336,5.637499,9.310053,-1.572001,2.243391,-2.000645,5.961485,-6.595506,7.943388,-0.037195,3.275391,0.911945,-9.997382,-6.533010,-5.348810,-3.549789,7.329223,-1.768013,-4.419675,8.076626,-3.246619,8.908465,-7.606086,-0.087425,-3.333607,8.409438,1.318254,6.032553,-6.406334,-4.971619,-3.165236,-8.282125,8.845047,-1.847548,2.726485,2.653913,-5.131474,2.989028,1.216022,-2.750639,2.261051,2.762772,-7.032825,-7.679135,-4.761524,3.886953,7.614491,6.143661,4.095884,8.227741,4.671026,-5.951736,7.381963,-9.671822,9.899277,-6.381352,-8.387512,-7.317528,-4.751211,0.403908,1.543512,-5.368187,-2.549694,7.438175,6.892991,-4.211440,-0.195738,-5.987772,0.801956,-8.219992,-2.962584,7.414320,-7.199061,7.342773,-8.516130,-9.513310,-2.496081,-6.573612,-4.805471,-3.186102,-0.444862,-1.252569,5.597889,8.080559,3.165928,-7.256193,-5.319395,-8.718613,0.324078,-4.360499,7.424303,8.147428,2.539808,-7.598400,-4.173001,5.135238,-2.029222,0.773475,8.438224,-2.834088,-8.558767,-8.426814,-8.922210,4.712814,-1.429214,2.427903,-7.405361,4.822686,-4.734364,7.818814,-0.683773,-0.443790,-5.535635,0.008259,-8.894918,-2.451740,-2.433087,8.637511,-3.912681,-4.239003,-1.192597,-8.289324,-5.971021,-3.285900,2.869767,0.016806,5.346506,-4.964097,8.884219,2.036146,7.782982,-1.287047,-0.128441,-3.308112,5.319763,4.589548,-3.478136,-2.849847,-0.942791,-8.768556,6.126565,3.606841,2.847134,-0.344331,2.581055,-0.527474,-3.716020,-7.212126,-1.448670,3.188046,6.129667,-7.450570,-6.348478,9.396844,7.032446,-1.453481,0.383912,1.437869,-5.355818,-1.657969,9.001372,-2.213834,1.447924,-7.989679,-8.592995,0.618133,4.296550,7.642694,9.233624,-6.523019,-5.294888,7.619751,-4.596289,-1.241082,-0.200641,0.724836,5.867586,9.638697,-7.234182,8.046722,4.297017,9.708198,-5.545985,-3.302216,9.919048,-1.105924,-9.468701,4.118735,1.909927,0.486701,-0.089778,8.902031,-9.763729,6.298491,5.416997,7.558302,8.019501,4.850982,-9.592284,7.484103,-5.158285,3.383457,5.065359,5.851984,5.955175,0.114564,1.923843,5.715605,7.517686,5.862408,6.022109,-7.117415,9.619522,-0.271124,4.056856,9.742487,-4.539379,-8.842319,7.689575,-6.588913,-5.585253,0.833729,-1.159917,-9.258003,6.287509,-8.256873,-2.780580,1.874451,-8.495925,6.513851,-0.034847,5.175443,-1.653744,-9.848274,-7.770715,-3.037563,-7.688950,-8.136160,-4.522884,9.799591,-1.751856,7.647705,-9.904112,-3.314641,-9.121589,-3.873184,-6.408115,6.051127,-6.563722,0.786788,-1.276222,3.275551,3.249780,-0.708925,-6.075070,5.210468,1.261165,-9.459498,3.723923,1.067878,-5.988165,-3.783800,5.405246,4.678506,-6.014788,-2.855124,-0.049711,2.560064,-7.460273,-0.172570,0.572857,1.056995,-2.428741,-8.027196,5.410237,6.465401,-0.182917,-0.901875,-0.362975,0.076132,-1.499339,0.894950,7.130395,-1.725523,-7.235391,1.034291,-9.256392,9.233602,-0.440791,9.805099,9.498409,3.022276,-5.459225,0.715333,-1.498292,9.100703,3.484475,4.191517,-0.771613,-4.636620,-3.302348,-5.720670,-4.792291,1.311054,-7.519931,-2.805506,-2.659275,4.637357,-7.972640,3.124989,5.819106,0.555288,6.943118,8.892710,4.312696,5.929981,8.897392,-3.501818,6.273396,-5.199356,-6.484206,5.783760,3.807868,-6.087602,9.501167,-8.661066,-5.566455,2.891536,-5.125389,9.556966,-1.688121,-9.608646,6.896047,-3.218189,-6.767723,-1.338054,3.047912,3.371061,-8.958204,-8.857553,7.574511,-3.601987,5.416727,-1.552907,-5.183412,3.533353,-2.045445,6.591611,-3.403700,-9.783342,-8.085216,-7.634842,-5.506623,-0.257457,6.130305,-2.435971,8.501026,-1.654617,7.894775,3.134175,0.893132,-6.660726,-0.244003,4.279123,8.540753,3.665016,-9.847123,-6.802252,-8.818619,9.698222,8.869606,-9.929778,-3.437733,6.524927,2.189409,4.206047,1.387411,-3.652460,2.136081,5.436875,4.127683,4.519681,-5.104085,-9.127099,-8.582453,-8.517406,-6.100399,0.538351,8.910252,-2.573452,4.491000,8.508844,5.320432,-4.155382,8.519186,-9.346406,-9.088374,-4.653727,0.548123,4.748311,-3.649569,8.752458,7.905337,9.367454,-5.332819,1.159090,-8.240392,-6.315888,8.713347,-0.968547,-8.169241,4.159396,-7.008095,2.462978,3.680590,-3.575553,-5.820218,-2.105042,-2.289049,8.853084,1.341456,-7.736065,3.187615,6.292084,9.397577,-3.088525,-3.560493,-1.577094,4.139535,-1.670267,6.562788,6.452768,6.448479,1.993333,3.999238,-7.087876,3.548213,-7.230117,1.361601,9.688153,-9.698966,2.293452,-2.715932,3.154095,1.908962,-0.954932,-3.807730,5.765179,6.399232,6.263243,2.181345,7.651632,-8.857761,9.742693,2.054259,-6.935964,-4.455440,3.759611,-3.785310,1.561517,-3.109877,-8.206648,9.765908,-8.344505,-7.823290,9.384205,2.324173,-3.515475,4.275678,-9.211676,3.925655,-6.969002,-1.454637,-9.093796,-2.983751,-0.568204,4.691020,-7.102416,-5.426784,3.208401,-4.834956,-5.888963,6.098266,-4.782236,1.157850,9.161166,4.822681,-1.251241,1.319115,-1.341617,-3.741897,6.243806,9.214992,-7.100971,-3.975043,-3.923868,4.308232,1.878016,-2.885288,8.304427,-9.074483,-4.368028,-1.407287,6.861192,2.292123,4.703632,-1.308312,3.897620,-4.749268,-5.541350,3.256767,-5.945720,5.944691,7.633170,8.965701,8.511498,7.042030,6.827840,3.165799,-3.916096,0.296894,-5.400118,-4.781611,7.965467,-6.625125,0.700953,2.865641,-8.710526,7.877742,-9.196084,-8.333653,-4.009364,2.548163,1.246924,-2.694337,4.498872,5.688256,-4.625544,8.170389,8.102570,2.911263,5.681049,-8.003034,0.187549,2.709821,-7.130485,-4.234229,8.276206,-4.561059,-4.500229,-0.756608,-3.541987,0.094514,8.874665,4.844170,-1.813648,-2.756858,0.162105,9.321417,-2.539597,-0.941620,-4.805903,-7.524810,-8.221486,-5.798112,1.989195,-4.958222,6.860641,-1.231287,-6.551303,2.285542,-5.686426,-9.271777,-8.725698,2.961934,-8.537601,5.013164,-5.168138,-9.904319,-3.290119,1.996381,-3.180895,-8.314020,8.849570,-6.643818,-8.678935,4.190306,4.129858,-0.544665,6.450978,7.778490,0.048450,6.025377,-4.030372,-1.665864,-8.069571,-1.373502,8.417474,-7.311710,-3.468931,-2.268136,-2.827674,9.814167,6.115260,4.859741,3.220793,-6.833568,0.881573,-5.558245,7.147465,2.953475,-9.835952,-7.166726,-1.470166,7.958026,-5.099914,0.563097,1.142650,-3.629924,-4.526321,4.022096,-5.651909,-3.621917,2.700290,4.994914,9.086257,0.242516,9.818818,7.823823,-9.316581,-1.629728,-1.328433,-1.036323,-4.686141,-3.127202,-2.502978,7.741331,7.380964,9.121440,-4.161943,6.673782,5.703577,-2.106475,5.430251,-5.827997,-5.067454,-1.308580,-8.505125,-1.457842,7.958500,4.487401,-2.286038,8.320056,-1.759371,4.837429,0.917695,-3.687145,1.536116,3.500583,-0.545166,-3.453938,-3.061060,3.196625,1.087396,-5.201072,-5.370213,5.732971,-2.244712,-5.162116,1.700311,7.542172,-4.159014,2.421789,-1.010121,-9.086113,-5.759877,6.982266,4.347243,7.223206,-3.170698,-7.946555,6.020793,-2.180928,-1.967641,-2.764865,-4.504448,-0.745439,0.381241,-5.161020,4.905871,-3.222499,5.957822,-0.091049,-3.428527,-6.435941,2.385636,2.789492,-7.849197,-5.202155,-2.494973,-4.280470,9.909541,2.841627], dtype = "float64")#candidate|1188|(1456,)|const|float64
call_1187 = func_435_call(relay.reshape(const_1188.astype('float64'), [7, 13, 16]), relay.reshape(const_1188.astype('float64'), [7, 13, 16]), )
call_1189 = func_435_call(relay.reshape(const_1188.astype('float64'), [7, 13, 16]), relay.reshape(const_1188.astype('float64'), [7, 13, 16]), )
func_874_call = mod.get_global_var('func_874')
func_875_call = mutated_mod.get_global_var('func_875')
call_1190 = relay.TupleGetItem(func_874_call(), 0)
call_1191 = relay.TupleGetItem(func_875_call(), 0)
output = relay.Tuple([call_1179,call_1187,const_1188,call_1190,])
output2 = relay.Tuple([call_1180,call_1189,const_1188,call_1191,])
func_1199 = relay.Function([], output)
mod['func_1199'] = func_1199
mod = relay.transform.InferType()(mod)
output = func_1199()
func_1200 = relay.Function([], output)
mutated_mod['func_1200'] = func_1200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_1214 = func_555_call()
call_1215 = func_555_call()
output = relay.Tuple([call_1214,])
output2 = relay.Tuple([call_1215,])
func_1229 = relay.Function([], output)
mod['func_1229'] = func_1229
mod = relay.transform.InferType()(mod)
mutated_mod['func_1229'] = func_1229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1229_call = mutated_mod.get_global_var('func_1229')
call_1230 = func_1229_call()
output = call_1230
func_1231 = relay.Function([], output)
mutated_mod['func_1231'] = func_1231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1229_call = mod.get_global_var('func_1229')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_1365 = relay.TupleGetItem(func_1229_call(), 0)
call_1366 = relay.TupleGetItem(func_1231_call(), 0)
func_643_call = mod.get_global_var('func_643')
func_645_call = mutated_mod.get_global_var('func_645')
call_1372 = relay.TupleGetItem(func_643_call(), 0)
call_1373 = relay.TupleGetItem(func_645_call(), 0)
var_1376 = relay.var("var_1376", dtype = "float64", shape = (1274,))#candidate|1376|(1274,)|var|float64
bop_1377 = relay.greater(call_1372.astype('bool'), relay.reshape(var_1376.astype('bool'), relay.shape_of(call_1372))) # shape=(1274,)
bop_1380 = relay.greater(call_1373.astype('bool'), relay.reshape(var_1376.astype('bool'), relay.shape_of(call_1373))) # shape=(1274,)
const_1387 = relay.const([[[False,False,False,True,False],[False,True,False,True,True],[False,False,True,False,False],[True,False,True,True,False],[True,False,False,True,True],[False,False,False,False,False],[False,True,False,True,False],[True,True,True,True,True],[False,True,True,False,False],[True,True,False,False,False],[False,True,True,False,False],[False,False,True,True,False]],[[True,True,True,True,False],[True,False,False,False,False],[True,True,True,False,True],[True,True,False,True,True],[False,True,False,True,True],[True,False,True,False,True],[False,True,False,True,False],[True,True,True,True,True],[True,False,False,False,False],[True,False,True,True,True],[False,False,True,False,True],[False,True,True,False,True]],[[False,False,False,True,True],[True,False,False,False,True],[False,True,True,False,True],[True,False,True,False,True],[True,False,True,False,False],[True,False,False,False,False],[True,True,False,False,False],[False,True,False,False,True],[True,False,False,False,True],[True,True,True,True,True],[False,False,True,False,False],[True,True,False,True,True]],[[True,True,False,True,True],[False,True,False,False,False],[True,True,False,True,True],[True,False,False,False,True],[True,True,True,False,True],[True,False,False,False,True],[True,True,False,False,False],[True,False,False,True,True],[False,False,False,False,True],[False,False,False,False,False],[True,False,True,True,False],[False,False,False,False,False]]], dtype = "bool")#candidate|1387|(4, 12, 5)|const|bool
bop_1388 = relay.bitwise_and(call_1365.astype('uint8'), relay.reshape(const_1387.astype('uint8'), relay.shape_of(call_1365))) # shape=(4, 12, 5)
bop_1391 = relay.bitwise_and(call_1366.astype('uint8'), relay.reshape(const_1387.astype('uint8'), relay.shape_of(call_1366))) # shape=(4, 12, 5)
uop_1393 = relay.atan(call_1372.astype('float64')) # shape=(1274,)
uop_1395 = relay.atan(call_1373.astype('float64')) # shape=(1274,)
bop_1399 = relay.floor_divide(uop_1393.astype('float64'), relay.reshape(var_1376.astype('float64'), relay.shape_of(uop_1393))) # shape=(1274,)
bop_1402 = relay.floor_divide(uop_1395.astype('float64'), relay.reshape(var_1376.astype('float64'), relay.shape_of(uop_1395))) # shape=(1274,)
func_1004_call = mod.get_global_var('func_1004')
func_1005_call = mutated_mod.get_global_var('func_1005')
call_1409 = relay.TupleGetItem(func_1004_call(), 0)
call_1410 = relay.TupleGetItem(func_1005_call(), 0)
output = relay.Tuple([bop_1377,bop_1388,bop_1399,call_1409,])
output2 = relay.Tuple([bop_1380,bop_1391,bop_1402,call_1410,])
func_1423 = relay.Function([var_1376,], output)
mod['func_1423'] = func_1423
mod = relay.transform.InferType()(mod)
mutated_mod['func_1423'] = func_1423
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1424 = relay.var("var_1424", dtype = "float64", shape = (1274,))#candidate|1424|(1274,)|var|float64
func_1423_call = mutated_mod.get_global_var('func_1423')
call_1425 = func_1423_call(var_1424)
output = call_1425
func_1426 = relay.Function([var_1424], output)
mutated_mod['func_1426'] = func_1426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_568_call = mod.get_global_var('func_568')
func_569_call = mutated_mod.get_global_var('func_569')
call_1431 = relay.TupleGetItem(func_568_call(), 0)
call_1432 = relay.TupleGetItem(func_569_call(), 0)
output = relay.Tuple([call_1431,])
output2 = relay.Tuple([call_1432,])
func_1440 = relay.Function([], output)
mod['func_1440'] = func_1440
mod = relay.transform.InferType()(mod)
mutated_mod['func_1440'] = func_1440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1440_call = mutated_mod.get_global_var('func_1440')
call_1441 = func_1440_call()
output = call_1441
func_1442 = relay.Function([], output)
mutated_mod['func_1442'] = func_1442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_643_call = mod.get_global_var('func_643')
func_645_call = mutated_mod.get_global_var('func_645')
call_1611 = relay.TupleGetItem(func_643_call(), 0)
call_1612 = relay.TupleGetItem(func_645_call(), 0)
output = call_1611
output2 = call_1612
func_1613 = relay.Function([], output)
mod['func_1613'] = func_1613
mod = relay.transform.InferType()(mod)
output = func_1613()
func_1614 = relay.Function([], output)
mutated_mod['func_1614'] = func_1614
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1630 = relay.var("var_1630", dtype = "bool", shape = (8, 14, 14))#candidate|1630|(8, 14, 14)|var|bool
var_1631 = relay.var("var_1631", dtype = "bool", shape = (8, 14, 14))#candidate|1631|(8, 14, 14)|var|bool
bop_1632 = relay.logical_and(var_1630.astype('bool'), relay.reshape(var_1631.astype('bool'), relay.shape_of(var_1630))) # shape=(8, 14, 14)
func_643_call = mod.get_global_var('func_643')
func_645_call = mutated_mod.get_global_var('func_645')
call_1635 = relay.TupleGetItem(func_643_call(), 0)
call_1636 = relay.TupleGetItem(func_645_call(), 0)
func_397_call = mod.get_global_var('func_397')
func_398_call = mutated_mod.get_global_var('func_398')
call_1658 = func_397_call()
call_1659 = func_397_call()
output = relay.Tuple([bop_1632,call_1635,call_1658,])
output2 = relay.Tuple([bop_1632,call_1636,call_1659,])
func_1661 = relay.Function([var_1630,var_1631,], output)
mod['func_1661'] = func_1661
mod = relay.transform.InferType()(mod)
mutated_mod['func_1661'] = func_1661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1661_call = mutated_mod.get_global_var('func_1661')
var_1663 = relay.var("var_1663", dtype = "bool", shape = (8, 14, 14))#candidate|1663|(8, 14, 14)|var|bool
var_1664 = relay.var("var_1664", dtype = "bool", shape = (8, 14, 14))#candidate|1664|(8, 14, 14)|var|bool
call_1662 = func_1661_call(var_1663,var_1664,)
output = call_1662
func_1665 = relay.Function([var_1663,var_1664,], output)
mutated_mod['func_1665'] = func_1665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_568_call = mod.get_global_var('func_568')
func_569_call = mutated_mod.get_global_var('func_569')
call_1670 = relay.TupleGetItem(func_568_call(), 1)
call_1671 = relay.TupleGetItem(func_569_call(), 1)
output = call_1670
output2 = call_1671
func_1692 = relay.Function([], output)
mod['func_1692'] = func_1692
mod = relay.transform.InferType()(mod)
output = func_1692()
func_1693 = relay.Function([], output)
mutated_mod['func_1693'] = func_1693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1199_call = mod.get_global_var('func_1199')
func_1200_call = mutated_mod.get_global_var('func_1200')
call_1694 = relay.TupleGetItem(func_1199_call(), 3)
call_1695 = relay.TupleGetItem(func_1200_call(), 3)
output = relay.Tuple([call_1694,])
output2 = relay.Tuple([call_1695,])
func_1699 = relay.Function([], output)
mod['func_1699'] = func_1699
mod = relay.transform.InferType()(mod)
mutated_mod['func_1699'] = func_1699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1699_call = mutated_mod.get_global_var('func_1699')
call_1700 = func_1699_call()
output = call_1700
func_1701 = relay.Function([], output)
mutated_mod['func_1701'] = func_1701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1229_call = mod.get_global_var('func_1229')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_1702 = relay.TupleGetItem(func_1229_call(), 0)
call_1703 = relay.TupleGetItem(func_1231_call(), 0)
func_568_call = mod.get_global_var('func_568')
func_569_call = mutated_mod.get_global_var('func_569')
call_1706 = relay.TupleGetItem(func_568_call(), 1)
call_1707 = relay.TupleGetItem(func_569_call(), 1)
func_568_call = mod.get_global_var('func_568')
func_569_call = mutated_mod.get_global_var('func_569')
call_1727 = relay.TupleGetItem(func_568_call(), 0)
call_1728 = relay.TupleGetItem(func_569_call(), 0)
bop_1731 = relay.greater(call_1706.astype('bool'), relay.reshape(call_1702.astype('bool'), relay.shape_of(call_1706))) # shape=(4, 12, 5)
bop_1734 = relay.greater(call_1707.astype('bool'), relay.reshape(call_1703.astype('bool'), relay.shape_of(call_1707))) # shape=(4, 12, 5)
output = relay.Tuple([call_1727,bop_1731,])
output2 = relay.Tuple([call_1728,bop_1734,])
func_1740 = relay.Function([], output)
mod['func_1740'] = func_1740
mod = relay.transform.InferType()(mod)
output = func_1740()
func_1741 = relay.Function([], output)
mutated_mod['func_1741'] = func_1741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_397_call = mod.get_global_var('func_397')
func_398_call = mutated_mod.get_global_var('func_398')
call_1762 = func_397_call()
call_1763 = func_397_call()
func_1229_call = mod.get_global_var('func_1229')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_1767 = relay.TupleGetItem(func_1229_call(), 0)
call_1768 = relay.TupleGetItem(func_1231_call(), 0)
func_1423_call = mod.get_global_var('func_1423')
func_1426_call = mutated_mod.get_global_var('func_1426')
call_1773 = relay.TupleGetItem(func_1423_call(relay.reshape(call_1762.astype('float64'), [1274,])), 0)
call_1774 = relay.TupleGetItem(func_1426_call(relay.reshape(call_1762.astype('float64'), [1274,])), 0)
func_1067_call = mod.get_global_var('func_1067')
func_1069_call = mutated_mod.get_global_var('func_1069')
var_1786 = relay.var("var_1786", dtype = "float64", shape = (1456,))#candidate|1786|(1456,)|var|float64
call_1785 = relay.TupleGetItem(func_1067_call(relay.reshape(var_1786.astype('float64'), [1456,])), 3)
call_1787 = relay.TupleGetItem(func_1069_call(relay.reshape(var_1786.astype('float64'), [1456,])), 3)
uop_1788 = relay.asinh(call_1762.astype('float64')) # shape=(1274,)
uop_1790 = relay.asinh(call_1763.astype('float64')) # shape=(1274,)
uop_1793 = relay.exp(call_1773.astype('float64')) # shape=(1274,)
uop_1795 = relay.exp(call_1774.astype('float64')) # shape=(1274,)
output = relay.Tuple([call_1767,call_1785,var_1786,uop_1788,uop_1793,])
output2 = relay.Tuple([call_1768,call_1787,var_1786,uop_1790,uop_1795,])
func_1796 = relay.Function([var_1786,], output)
mod['func_1796'] = func_1796
mod = relay.transform.InferType()(mod)
var_1797 = relay.var("var_1797", dtype = "float64", shape = (1456,))#candidate|1797|(1456,)|var|float64
output = func_1796(var_1797)
func_1798 = relay.Function([var_1797], output)
mutated_mod['func_1798'] = func_1798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_827_call = mod.get_global_var('func_827')
func_828_call = mutated_mod.get_global_var('func_828')
call_1809 = relay.TupleGetItem(func_827_call(), 1)
call_1810 = relay.TupleGetItem(func_828_call(), 1)
func_1067_call = mod.get_global_var('func_1067')
func_1069_call = mutated_mod.get_global_var('func_1069')
const_1812 = relay.const([-9.460970,0.773510,-1.111326,-1.395022,-0.081348,-0.593265,0.120763,-3.521625,2.978865,2.864187,-6.027230,6.843072,0.933242,9.974264,-5.918067,-3.897422,-9.519058,7.491460,-0.722007,-2.785117,4.992460,-6.061358,8.933739,-9.630421,-8.118071,1.117019,6.804823,-0.765884,-7.448690,-3.620200,5.862870,1.618393,-7.491801,-9.617087,8.432150,0.804702,7.066630,1.299110,-9.064364,9.426901,-5.174004,5.647774,2.237256,-9.640685,1.536818,-9.334228,-7.384245,-1.692372,-1.841956,1.415278,9.754092,-6.124096,-8.801436,1.835410,-5.874283,5.600737,-0.080904,-0.174663,7.824523,1.720174,6.133638,2.451506,-3.391608,-1.744334,-3.133804,-7.660062,-6.114696,5.675748,-0.116999,1.790225,5.734337,6.480346,7.019541,-9.078361,3.656223,5.649776,3.089994,-7.437798,5.344333,9.298650,-5.121824,5.613278,-2.112378,5.298798,-6.505505,4.530036,-0.080507,5.182279,0.824137,-2.549025,6.481698,1.190557,-3.065429,-5.603847,8.737927,8.224055,1.543579,-2.627998,7.403600,9.175584,6.872061,-8.257218,6.736613,6.965924,2.202341,2.380773,-9.107792,9.602846,-2.286752,-4.316835,0.266551,8.436278,-4.635169,2.860788,-9.016020,6.444244,9.892373,8.674737,4.532627,3.653749,-2.169435,-8.638156,-1.560172,5.199092,0.451774,-4.517124,3.560209,-2.018744,6.309399,-6.254004,-6.884625,4.510424,2.542761,-0.461800,-8.083934,0.978802,1.659703,0.369763,5.462133,-8.135120,-3.729194,-4.971610,0.108792,9.459971,-0.080070,-4.674358,-1.167451,-3.737327,-5.128741,-3.245170,0.426638,6.657885,9.729695,-1.737954,6.140771,-8.932961,5.373632,7.724485,8.153706,3.809998,-6.761920,-5.792452,-1.229445,-3.320845,0.891481,1.071435,-5.838379,2.469108,4.904708,2.039214,9.284720,-0.059135,-9.765347,4.964358,-9.717252,8.228999,-7.328486,2.924483,-8.096748,0.926733,8.918266,-0.495191,0.125439,1.187235,6.114590,1.841188,-3.866704,3.024104,8.445425,-2.533932,-6.961030,9.284737,4.237620,8.605615,-6.823769,-6.927367,5.916042,-3.367125,-3.184515,1.345745,-6.099184,-4.508159,-7.474613,5.339427,-0.468646,0.162579,4.008726,8.090821,-7.051409,-9.959163,1.485143,-6.591688,-0.896288,6.423663,-2.128521,-5.701086,9.717902,-4.434940,5.319156,-6.132620,5.407264,-0.553416,-9.750079,-9.456060,-8.854651,1.065441,4.745842,-5.328631,-6.972840,-3.030379,-0.699788,0.201523,-2.950115,8.847063,5.986479,2.124834,7.831622,4.444110,-6.775689,-6.887401,4.637658,-0.649891,6.412990,-5.119229,4.889203,6.086200,4.526651,8.300000,-4.477814,2.497454,-1.288741,-9.125960,-2.303750,6.628761,5.591455,0.963618,-0.761805,8.606409,-3.946718,1.542586,8.086549,6.699586,-5.234583,-8.617473,8.235971,-2.669588,-0.487163,-4.607549,0.204005,8.881628,1.073503,6.411085,6.665783,-7.461704,-7.118013,9.655889,-4.659297,-0.910541,5.417767,2.757580,5.154269,5.003411,-0.572347,-9.297688,2.159855,7.238558,6.542536,-3.456435,7.414288,-8.741436,3.975024,7.393741,7.264689,-3.120948,-9.183513,6.539626,7.429733,-0.594709,-3.655933,5.986416,-8.345578,3.205567,7.500434,-1.435243,-5.747757,-3.979868,-2.455214,8.290664,-5.140209,2.545983,2.063713,-4.043487,3.251324,-5.117446,0.541482,9.071034,-1.627613,7.817027,6.503877,9.705223,2.543712,7.999354,3.641400,5.112242,-6.686425,4.243743,7.767994,-6.483064,-1.616411,7.120778,9.691713,6.800214,3.182173,3.934334,8.658796,-1.226742,2.785430,-2.760691,-8.446718,-1.536085,-6.062508,-4.220644,2.040324,-0.052152,0.792652,1.637931,7.126822,2.171522,-8.441865,4.222322,0.207074,-5.195274,9.196143,8.337280,-0.957014,-7.895423,5.470951,-5.167758,7.402789,-9.929968,-1.367255,3.230624,1.020534,-2.562620,-7.525596,7.436982,7.067568,-1.880257,-9.257733,-8.167308,9.654379,-9.580103,9.574029,5.006539,8.753509,-5.819189,8.324771,8.638302,-7.495143,-6.350128,2.478179,-8.959149,4.271606,2.902592,-9.575515,-6.686962,-2.600303,0.899339,-1.168099,7.858983,-3.207548,3.579496,6.547232,-5.410184,3.229835,-3.304395,-6.208529,7.748915,7.674821,-2.620671,9.818657,1.399658,9.205572,2.799543,8.126567,9.679431,-1.499657,-7.068428,-0.524998,5.342580,2.477500,-0.027121,-1.485161,-7.209154,3.206806,-9.831259,1.439708,-0.769719,-2.905190,-5.609379,-1.174263,1.459882,1.642095,8.471059,9.982970,6.941176,-0.058175,-9.805761,0.113878,6.340740,2.272539,9.896790,3.008675,2.895324,-8.961648,-2.187330,-2.949356,3.570098,3.891247,2.701791,-8.068854,2.360019,-8.616479,8.857508,-4.634703,-5.418070,-0.323545,9.889726,-5.028316,1.861987,-0.806283,6.307904,-1.151830,-4.060900,5.234379,-0.155269,-0.931139,6.904915,3.851928,1.639956,0.698305,-8.524063,0.921842,4.843193,-0.284935,-4.285414,-8.026004,5.028475,8.683108,-3.789958,9.816733,-6.387516,6.209588,1.037882,-6.386316,-7.042613,-9.783528,-1.001427,-5.899455,1.157692,-0.395864,-0.988496,-9.864496,9.387079,2.647739,-1.001744,-1.668755,9.989440,-7.243864,2.826410,8.286153,-2.589995,-2.021895,6.063395,3.188571,9.355193,4.882043,-4.681652,-3.639484,9.712365,-3.184718,-1.117210,-2.043852,-9.624827,-7.737894,8.573739,2.327816,-1.022746,-9.175265,0.912525,-4.495409,-0.741957,-9.508640,6.698165,-9.955072,-8.267215,8.163365,-5.235615,-8.475628,-6.145731,-1.843267,-0.768010,-7.847225,2.676697,8.475855,-8.483587,9.450419,6.950592,9.761210,-1.321058,0.426489,-5.408168,-4.555165,-9.888258,9.154648,5.249573,-8.993182,-9.767870,-1.172054,-9.718192,-0.123006,-0.231585,7.647534,9.968850,-0.259006,-9.924190,-5.850217,-7.590273,2.590517,-9.659676,-6.405194,-3.817157,4.046561,1.874463,-6.324312,2.722697,-6.100955,6.823412,7.060370,-0.468752,-4.196641,4.009044,-1.976731,5.494183,-4.544264,-9.651055,-8.396963,-2.352256,3.470547,0.149278,6.105753,-1.139375,-8.965955,7.656766,-8.156798,-5.533628,-8.905383,-9.092973,9.986107,4.663814,0.789256,-1.218192,-2.301533,6.769734,-5.209919,-0.177847,-1.434086,1.857096,-7.964176,-9.155197,8.678531,4.698848,1.067408,-0.825321,-5.480101,-8.357343,5.308432,9.581155,7.705271,-8.044046,9.045285,3.756003,2.744050,5.818957,8.414323,5.739150,-9.400739,4.100137,-9.292270,-2.529330,4.546582,-3.129963,-4.726280,-6.833047,-7.300646,4.564322,3.488246,8.572607,-0.833952,-2.737280,5.844845,-5.086193,5.426826,9.608630,3.137203,-2.771767,-5.149837,7.556286,-0.474885,5.105490,-0.859619,-6.749155,2.017413,1.383661,-8.922524,-9.954783,7.465038,3.929292,-6.826727,-4.800316,2.245399,-4.368418,0.379318,-1.364902,6.129651,-5.885251,-0.901605,-8.548251,0.031971,8.627134,8.767190,4.363699,-8.821698,2.774276,2.343675,-0.799760,-5.856849,-5.307672,0.277620,3.697064,-6.791997,-4.911068,1.393226,9.143164,-4.589599,-5.589425,-3.554037,-9.374460,4.988417,6.291638,7.842065,9.778142,-5.968769,2.997887,-1.518019,-9.553970,9.105878,6.494433,7.434891,0.402172,-7.347176,-5.010765,3.557586,9.609448,-1.467816,1.471439,9.283420,-2.352067,-7.330444,2.701666,-9.388831,-2.351824,-9.712476,-6.604149,-1.260749,-8.649051,-3.577698,3.359469,3.919103,-2.717457,7.266255,-4.591819,-0.916669,-2.915416,-2.730567,0.085253,9.194560,-2.190267,9.997600,-4.100133,-5.920641,-4.107157,6.277935,-1.207130,1.405374,-1.989506,-9.650732,5.811627,2.866552,-8.502894,8.014448,1.291636,9.506420,-8.236096,-8.422047,-3.092550,5.356880,1.783893,-7.724739,-5.842049,-3.360612,-6.699246,3.919168,7.004432,7.031104,-6.691877,9.259326,5.821526,-7.242399,-2.572035,-4.661126,6.842329,3.885982,-3.616118,5.371215,9.730860,-1.744387,-7.364422,5.345542,-5.545623,5.212750,0.677218,-9.848399,0.397699,7.223015,-1.590874,-4.588807,1.214259,-8.955801,1.655333,-7.308361,-8.573364,-3.310181,-6.830162,-9.990078,-9.595190,-0.289648,6.061714,7.133316,5.626848,-5.686517,-5.629796,3.957600,-6.910407,-8.900340,7.203347,1.713570,6.142079,7.774044,7.211889,-2.031512,2.937642,-8.395208,-8.868636,-2.635886,-3.858756,0.849656,5.597348,-5.497721,-6.646977,-7.623976,-1.859684,8.393465,6.133735,3.010843,4.597160,4.262342,-0.269033,5.680064,1.382625,-9.534008,-8.900354,-5.280614,1.537828,3.530522,4.598758,4.652920,0.531860,9.209335,1.857118,-5.565844,6.696485,-9.799237,2.034848,-8.927950,0.572312,-0.154442,-6.979862,4.559777,7.841161,3.516101,-0.710618,-1.020177,-1.799292,7.644591,0.600616,-7.236667,0.237631,-8.119838,-0.796865,5.677554,-9.661438,4.299945,-2.263065,-0.125799,7.592382,6.671143,-2.302044,-4.262126,3.519693,6.185095,8.284569,7.361065,-2.191944,9.386497,-6.603501,-1.854170,-1.138915,9.586508,-0.281263,-5.272576,-2.832256,-3.875508,-1.100250,4.889679,-7.358599,-6.178727,-4.927281,-2.217261,0.771101,5.147479,-4.993252,-9.375099,6.832115,6.280332,6.749314,6.237654,8.541596,3.636810,-9.372818,-4.583725,3.425027,-2.511926,-6.650438,-1.143445,-3.345887,-1.351585,0.708519,3.668396,-6.509859,-9.333423,6.860980,6.765058,5.692993,-4.747554,8.634266,-0.096276,1.556958,-6.096351,7.297561,5.255398,-4.264348,-3.360137,4.771571,-5.446199,0.600457,7.882822,1.577371,2.521616,1.725122,-1.539272,-6.965415,2.469252,-7.481243,-1.032680,-8.419403,9.584130,6.032138,-9.377526,-6.285319,-3.410445,-1.827564,-0.681654,3.430453,-2.127804,8.821894,1.893402,-5.158188,0.817805,1.839670,-4.675854,6.948915,-6.274890,-5.941162,6.044578,-3.293599,-4.315472,-2.621468,-0.448866,-9.650445,-1.115995,6.574016,-8.645457,9.057706,-4.627980,2.960222,-6.350976,3.525920,6.623903,-0.554668,-0.512100,-7.352382,5.834587,0.185074,-1.525583,-7.073399,6.561184,7.876315,0.953101,9.422900,2.235640,8.276012,5.483274,-8.593860,-1.714957,-0.246858,3.028814,3.047934,2.749446,-2.588748,-2.888035,-5.510789,7.038419,6.239478,-5.344748,-6.364223,7.474530,-5.102246,-9.666641,9.696186,4.483528,8.678415,5.091667,1.125855,9.485164,-7.235573,-3.046221,3.217366,-8.366949,6.745570,7.843864,-8.513795,0.319890,-5.401979,-2.046640,-2.009987,0.160562,-1.273498,-6.004623,8.843876,-7.108504,9.497678,-2.208286,-2.837417,-2.369978,-7.906781,3.621146,-1.642488,2.623161,4.588266,5.256992,4.778878,2.210831,0.301747,6.569817,-0.371205,-3.646912,-1.262732,-8.203353,-8.797688,-5.190674,3.047920,8.537666,-8.019197,-2.099389,-1.138650,5.515288,-8.076706,-6.962720,-5.922719,-0.575685,1.579461,5.517555,0.499532,-3.654364,-3.933862,-0.886995,-7.246504,3.687371,-8.993640,-4.580461,1.268314,-7.841334,5.787172,8.085638,-6.057762,-2.591013,2.557591,-4.251369,9.979617,-2.763773,8.196115,7.168907,-5.443556,3.884873,-7.530769,-2.046165,6.572071,7.336679,7.297338,4.630535,-6.388167,6.230639,0.052322,5.542076,-3.380891,-8.016153,-6.155599,2.200132,-7.941075,-1.225330,5.158610,7.497635,2.418205,8.613191,4.608404,0.621148,-8.350146,9.094380,-6.950702,-0.505560,-8.103104,-2.804293,1.166570,-6.618726,-1.496703,-1.006640,5.173854,5.666419,9.719875,3.548250,6.705615,-2.002987,8.093154,1.551148,-9.443505,-0.215094,-7.621913,-5.795211,-2.391482,5.237574,1.381505,-8.194304,9.414240,0.618638,-4.194078,-1.619073,7.434579,1.757643,-8.568314,-3.846102,9.062475,-1.549363,-1.660724,5.608753,8.717205,3.104057,-3.544095,8.874842,3.937453,-2.812174,1.854462,8.862608,-4.212757,9.300742,4.018703,0.945949,-0.766325,-1.035453,-9.238219,8.986818,1.172251,-4.269333,8.284543,5.356058,5.831159,-9.306363,-0.748124,0.892796,3.465943,-6.239465,7.003511,6.249732,9.021577,-9.218374,2.706712,1.290711,-5.685879,-7.100862,0.161531,9.713606,-2.124764,7.009547,4.606062,3.614262,0.972511,-1.257094,8.011287,-3.034537,1.223411,4.638833,-9.435936,7.878758,-5.326795,-1.488552,-1.443546,-7.322539,-4.399269,8.785068,4.860705,-5.471688,-4.597943,5.223600,-9.870239,-0.797344,-8.281287,-5.684948,-4.443115,5.391965,4.274128,-3.430466,9.311145,-1.905283,-2.862665,-3.404509,-9.616142,-1.018202,3.141973,7.571569,8.070881,7.317855,5.841456,2.828004,-7.116901,-9.833020,-0.800037,5.449877,-6.996574,5.257866,0.556137,-1.338140,-0.732538,2.984462,-0.586853,5.712570,-1.193224,3.229856,-8.229968,-9.450734,3.491869,3.557726,9.213930,-4.685968,-5.286288,4.177621,8.709728,-7.134305,-6.719850,4.096395,-8.553517,7.860530,9.884080,-7.834520,7.584145,-4.821825,7.602892,-3.362394,-8.107703,-1.992835,8.773922,7.293740,5.590310,-4.028442,8.601981,-4.620601,6.546064,-4.038748,-3.561597,-9.553639,8.006180,5.113144,-2.777752,-7.753152,-6.930511,-6.810527,-7.010023,-3.341574,3.458879,5.945777,-0.232284,-9.949188,7.948504,-1.771612,5.574122,7.885413,-3.625228,6.996141,4.597831,6.208165,3.352039,6.142023,2.270081,9.025685,-4.344709,7.451068,5.770157,-5.112373,2.988059,-5.947212,-8.159170,4.663394,-9.745952,9.671177,-1.329464,4.092658,-6.148788,5.746854,-7.261599,-3.973073,-2.973959,7.979134,6.293143,-0.890753,9.047140,1.176249,6.166039,-6.119717,-6.879540,6.295626,-1.310310,-0.997087,8.268700,6.985630,-5.713451,-0.395454,3.280228,-8.742226,-0.230571,0.745367,-8.680468,7.972589,-7.472106,8.298281,9.480718,1.672164,-2.607778,5.923122,-0.271888,1.848081,-5.971931,7.240012,-2.590147,1.842300,-4.084503,-5.953783,8.065331,-3.586622,5.566737,-7.327524,-1.240641,-5.858152,9.119476,-0.182417,-0.793012,0.917340,-6.315390,7.505471,-1.340218,2.852616,6.827483,2.608803,4.567724,-9.383101,-6.308387,3.750018,9.884381,9.657254,3.237794,-7.966493,2.466841,4.442553,-4.496366,-7.727325,2.681091,6.709949,8.913683,2.238660,6.589599,1.181981,4.210015,-1.872198,4.178253,5.104329,-0.049595,-4.706958,9.493856,2.591303,-8.988643,4.604604,1.422606,1.287812,3.553817,5.317328,-6.267375,-6.870170,5.162050,-0.361889,-1.560602,-2.640823,5.225374,7.280899,-4.806626,-6.414281,-6.398789,-0.479474,8.476212,2.411129,-7.040634,7.701986,1.449512,-9.642586,-3.770949,1.623635,4.028062,2.652040,3.135240,7.416719,9.019823,-9.148607,7.317541,8.028326,-5.228620,-9.388460,7.999375,-2.819357,2.235100,-2.795432,3.815385,6.027123,0.934301,-8.075969,1.429316,-0.249941,5.660743,-7.072207,8.746373,8.152390,-6.668292,-7.196164,5.215330,1.872565,-6.108275,4.502640,9.087980,-3.395601,7.864710,6.471161,-8.252697,-4.028752,8.115044,6.518559,-7.696270,-0.951010,-9.803728,0.001845,4.800281,-6.034229,-2.438078,-6.809408,-2.856373,-1.033866,7.628338,-0.018962,1.948672,7.659056,-5.493238,5.878539,-6.081835,5.142933,-3.937512,-3.226609,8.145824,9.664408,-9.457717,-4.715840,-8.627000,0.940255,-6.856230,-0.382015,-1.654536,-1.673855,-4.692481,9.722483,-1.859917,7.407987,0.638012,-3.423613,-5.012134,-4.142630,2.611256,-9.810539,1.775174,4.278336,4.641671,8.563431,-5.572894], dtype = "float64")#candidate|1812|(1456,)|const|float64
call_1811 = relay.TupleGetItem(func_1067_call(relay.reshape(const_1812.astype('float64'), [1456,])), 1)
call_1813 = relay.TupleGetItem(func_1069_call(relay.reshape(const_1812.astype('float64'), [1456,])), 1)
output = relay.Tuple([call_1809,call_1811,const_1812,])
output2 = relay.Tuple([call_1810,call_1813,const_1812,])
func_1823 = relay.Function([], output)
mod['func_1823'] = func_1823
mod = relay.transform.InferType()(mod)
mutated_mod['func_1823'] = func_1823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1823_call = mutated_mod.get_global_var('func_1823')
call_1824 = func_1823_call()
output = call_1824
func_1825 = relay.Function([], output)
mutated_mod['func_1825'] = func_1825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_643_call = mod.get_global_var('func_643')
func_645_call = mutated_mod.get_global_var('func_645')
call_1837 = relay.TupleGetItem(func_643_call(), 0)
call_1838 = relay.TupleGetItem(func_645_call(), 0)
output = call_1837
output2 = call_1838
func_1841 = relay.Function([], output)
mod['func_1841'] = func_1841
mod = relay.transform.InferType()(mod)
mutated_mod['func_1841'] = func_1841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1841_call = mutated_mod.get_global_var('func_1841')
call_1842 = func_1841_call()
output = call_1842
func_1843 = relay.Function([], output)
mutated_mod['func_1843'] = func_1843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1841_call = mod.get_global_var('func_1841')
func_1843_call = mutated_mod.get_global_var('func_1843')
call_1878 = func_1841_call()
call_1879 = func_1841_call()
func_1199_call = mod.get_global_var('func_1199')
func_1200_call = mutated_mod.get_global_var('func_1200')
call_1880 = relay.TupleGetItem(func_1199_call(), 1)
call_1881 = relay.TupleGetItem(func_1200_call(), 1)
output = relay.Tuple([call_1878,call_1880,])
output2 = relay.Tuple([call_1879,call_1881,])
func_1884 = relay.Function([], output)
mod['func_1884'] = func_1884
mod = relay.transform.InferType()(mod)
output = func_1884()
func_1885 = relay.Function([], output)
mutated_mod['func_1885'] = func_1885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1004_call = mod.get_global_var('func_1004')
func_1005_call = mutated_mod.get_global_var('func_1005')
call_1902 = relay.TupleGetItem(func_1004_call(), 1)
call_1903 = relay.TupleGetItem(func_1005_call(), 1)
output = relay.Tuple([call_1902,])
output2 = relay.Tuple([call_1903,])
func_1906 = relay.Function([], output)
mod['func_1906'] = func_1906
mod = relay.transform.InferType()(mod)
mutated_mod['func_1906'] = func_1906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1906_call = mutated_mod.get_global_var('func_1906')
call_1907 = func_1906_call()
output = call_1907
func_1908 = relay.Function([], output)
mutated_mod['func_1908'] = func_1908
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1946 = relay.const([[[1,4,-10,5,-6],[5,6,-4,-5,8],[-1,-6,7,3,-7],[9,-2,4,-1,6],[-7,-3,1,6,2],[-8,5,10,-3,3],[9,-7,-7,3,-9],[-5,-1,9,-8,10],[9,3,-5,5,-5]],[[-9,4,-7,7,7],[10,2,2,7,-8],[-2,-6,-2,5,8],[-10,4,3,3,3],[7,3,7,3,-7],[-9,-8,1,6,7],[-8,3,1,5,-7],[5,2,-3,5,-10],[-7,-9,-6,6,10]],[[9,2,-10,-7,6],[-3,-6,-3,3,7],[10,4,10,4,5],[-9,10,4,4,-4],[3,-5,2,10,-6],[1,-10,7,-7,5],[-3,-4,-8,2,10],[-4,3,6,7,-3],[4,9,8,-5,5]],[[7,-8,10,3,-10],[7,-10,5,-8,-3],[-3,6,10,-8,-3],[6,-8,2,2,9],[8,6,-8,3,3],[-10,10,8,2,-6],[-8,4,9,-5,1],[3,-2,9,-1,-8],[8,-1,-4,2,-7]]], dtype = "int32")#candidate|1946|(4, 9, 5)|const|int32
var_1947 = relay.var("var_1947", dtype = "int32", shape = (4, 9, 5))#candidate|1947|(4, 9, 5)|var|int32
bop_1948 = relay.equal(const_1946.astype('bool'), relay.reshape(var_1947.astype('bool'), relay.shape_of(const_1946))) # shape=(4, 9, 5)
output = relay.Tuple([bop_1948,])
output2 = relay.Tuple([bop_1948,])
func_1966 = relay.Function([var_1947,], output)
mod['func_1966'] = func_1966
mod = relay.transform.InferType()(mod)
var_1967 = relay.var("var_1967", dtype = "int32", shape = (4, 9, 5))#candidate|1967|(4, 9, 5)|var|int32
output = func_1966(var_1967)
func_1968 = relay.Function([var_1967], output)
mutated_mod['func_1968'] = func_1968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_356_call = mod.get_global_var('func_356')
func_357_call = mutated_mod.get_global_var('func_357')
call_1975 = relay.TupleGetItem(func_356_call(), 0)
call_1976 = relay.TupleGetItem(func_357_call(), 0)
func_384_call = mod.get_global_var('func_384')
func_386_call = mutated_mod.get_global_var('func_386')
call_1985 = func_384_call()
call_1986 = func_384_call()
func_1906_call = mod.get_global_var('func_1906')
func_1908_call = mutated_mod.get_global_var('func_1908')
call_1990 = relay.TupleGetItem(func_1906_call(), 0)
call_1991 = relay.TupleGetItem(func_1908_call(), 0)
output = relay.Tuple([call_1975,call_1985,call_1990,])
output2 = relay.Tuple([call_1976,call_1986,call_1991,])
func_2003 = relay.Function([], output)
mod['func_2003'] = func_2003
mod = relay.transform.InferType()(mod)
mutated_mod['func_2003'] = func_2003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2003_call = mutated_mod.get_global_var('func_2003')
call_2004 = func_2003_call()
output = call_2004
func_2005 = relay.Function([], output)
mutated_mod['func_2005'] = func_2005
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2112 = relay.const([[[-0.072623,0.256663,7.717958,-4.183994,-3.158211,-5.841251],[-1.907814,-3.224537,3.910865,9.155802,3.202855,7.322181],[3.247132,1.486092,-2.567177,4.785769,8.776746,7.323282],[-5.884820,-6.346799,-6.980724,-4.140461,-0.202918,9.302532],[6.818454,7.667288,9.982991,-7.591609,-7.800883,-2.276088],[-0.066054,2.019366,-4.745933,9.841425,-5.594070,-3.489198],[-5.861209,8.314743,5.360954,-8.209951,-9.576727,0.119551],[1.306375,-9.098108,0.235348,-1.368181,-6.896019,4.242576],[-7.586988,9.106438,9.030459,-5.057048,-9.104788,-2.657487],[-7.085012,-6.611946,-6.400572,-1.971472,-0.175324,-0.062380],[1.726123,5.199501,-4.595532,4.510886,5.665461,-0.221220],[-0.627668,4.693308,-6.084568,-8.553076,-4.044003,2.272936],[8.286251,-3.195117,9.169670,3.580881,-3.616917,-1.997076],[-0.583440,9.521159,3.351735,-9.069994,-7.970547,-6.589862],[5.253884,-0.467902,-5.310045,-4.409517,1.016326,5.220081],[5.880926,-4.741109,6.808872,9.415389,-7.012286,-5.587735]],[[-6.258363,6.696572,-3.849934,8.531171,-6.801178,2.144064],[-7.112250,-0.800518,4.369947,-2.576586,1.421766,-3.769764],[7.439638,-9.455669,-0.025492,6.304303,5.455409,-5.838131],[9.978040,3.111363,4.844777,-0.909892,-0.481696,6.825871],[-5.649239,8.928091,-9.215171,-6.901565,7.224711,7.804708],[2.089387,-8.075495,6.944410,-9.092059,-3.526513,7.643998],[9.560034,2.018345,-5.125406,7.005463,-1.363725,-4.779107],[-4.212096,2.071307,4.623191,5.542169,3.372568,4.318995],[-2.674027,0.862690,2.840600,-3.173733,-6.150068,7.768080],[2.453779,5.512918,9.976997,-0.566619,2.392772,6.367911],[2.325440,0.420577,-9.279627,7.688351,8.044995,9.471827],[8.390761,7.238794,-6.310683,7.430785,0.177612,1.741688],[-9.991498,-9.874950,3.064226,1.434230,-8.850954,-4.532225],[7.150838,-3.577387,-0.835898,-4.010727,2.267823,-0.720267],[-7.501498,1.952586,-2.891799,-8.647241,9.538156,-6.226629],[-4.990485,9.443431,8.813280,8.687781,4.698174,4.730054]],[[3.518747,-0.433112,6.672866,-1.992994,-8.283566,8.827376],[0.061184,2.726547,-7.873441,8.164406,2.871769,2.762722],[-8.786232,-5.856811,-9.765645,-1.211367,8.845582,9.360183],[4.943956,-0.615414,7.708794,-9.181673,7.645060,9.857319],[-6.389962,-6.915757,2.915465,-4.162959,-9.402222,-7.166576],[-6.096983,-6.841225,3.919546,-6.391494,-0.130728,-7.181611],[-3.760638,-6.647069,-6.246149,9.368012,-8.602074,3.793808],[2.514722,-5.143420,-2.362532,8.663181,3.161187,-5.254782],[3.374131,9.906186,7.028292,0.946009,-8.119777,7.854597],[-5.804711,4.573865,-1.068652,-7.409583,-2.459081,5.171353],[0.768625,7.418224,-4.437872,5.357382,-6.595737,3.907997],[-0.974926,2.690478,-5.607948,-1.914023,4.420719,-5.114406],[-3.063334,-4.458768,1.945136,3.392147,-7.722865,4.414774],[-7.499432,-1.910291,2.557889,-5.206142,-5.739783,-1.403454],[-9.279338,6.917786,8.964224,0.736244,2.929183,-7.313420],[7.605304,4.087969,4.159305,-0.875598,-3.416379,-7.490038]],[[5.439303,1.327661,6.483352,-1.214252,-7.940873,6.534466],[0.691290,0.670954,-8.694502,7.719884,1.728652,5.140352],[0.559059,-2.618699,-0.288623,9.814847,6.444928,-1.250918],[7.363631,-2.838769,-0.978317,3.477462,-5.061725,-9.956932],[-4.560910,-5.512783,0.761330,-3.180584,-3.039726,-0.452611],[-9.103398,-1.680820,-1.786119,-3.438286,4.314736,-5.128066],[-9.936768,-2.470230,-7.040367,-4.511559,-8.859074,2.831237],[-5.928542,1.518540,-1.034405,-4.458843,7.537847,5.838876],[8.977945,3.879463,-6.538610,-3.802657,3.794282,-6.215344],[-5.092213,1.069952,2.440243,-6.621197,-4.815062,-8.085232],[1.703222,7.917172,0.991879,-2.913708,-9.835020,-8.124293],[5.000233,-4.959004,0.453127,9.437040,3.192639,-4.379103],[0.272348,-5.301681,-8.259934,-8.630048,4.836926,2.550375],[-6.187107,6.009222,7.692653,-4.474443,8.623697,-3.214445],[1.055314,-9.127458,-4.052010,1.733517,9.013010,1.519006],[3.371007,0.869248,-0.089830,1.173468,-7.318267,7.078493]],[[-0.532682,7.434841,-4.853292,-5.672816,5.931486,-5.716849],[-6.937774,3.853002,-4.182645,7.497671,-9.399014,-5.405816],[0.061864,-5.257239,2.190419,-5.726691,0.504636,4.325059],[9.092554,0.962782,-2.834249,-2.556000,5.128494,-2.886380],[-9.227375,2.732274,-3.788514,7.884144,-9.909938,2.044797],[-6.762876,3.537406,1.411161,0.842322,0.191725,3.213857],[9.043566,-2.326060,1.909622,-4.783982,-5.845145,9.733191],[3.356194,3.150905,-8.149241,2.830411,-4.437306,-4.385498],[2.824979,-4.519912,-3.014858,-5.832775,0.659652,-8.324781],[5.821937,-9.511663,9.120605,-3.123496,1.531825,-5.217954],[0.579088,-9.301229,-4.003449,0.095153,-1.840038,-6.251149],[-7.878366,-3.364952,3.704325,-8.466818,5.498836,3.373040],[-6.572997,-3.161548,2.460487,0.282077,-6.445818,-3.400225],[-6.841503,6.820929,0.270770,0.079889,-7.607908,1.655410],[8.379888,9.880178,-1.784961,9.637561,-0.631036,-2.211807],[-3.310435,-9.244760,0.911732,6.535194,9.684228,3.271712]],[[7.333636,-0.166791,-9.101068,5.742880,7.517775,2.014428],[4.087471,0.310160,-7.037522,8.047100,3.889092,1.808662],[-3.899923,8.440798,9.795026,-7.717363,2.581632,5.233903],[-0.078037,8.422771,7.179359,-8.722345,5.584503,-8.900771],[1.137884,-6.572381,-2.686820,-1.940666,0.177905,-1.562973],[-2.537571,9.922467,7.509054,6.148455,0.150958,4.944506],[2.680427,-9.891258,6.427954,-2.004542,-8.990455,-8.148010],[1.833448,-1.438410,-4.926968,8.636663,9.405682,-9.261625],[1.250882,1.116270,7.984746,5.791231,-9.641634,1.453634],[7.581965,-9.453483,1.291379,-1.007578,9.409114,2.191194],[9.031194,-5.243675,8.159032,1.413180,7.151490,8.888758],[1.224358,8.177726,-9.005703,-2.000806,2.142230,-7.133031],[2.629108,9.835475,4.791399,-4.222829,9.226694,1.566419],[1.307518,-3.530414,2.577149,9.391362,-8.657684,-8.700726],[-1.982194,-3.178811,-8.013003,-3.163075,1.989645,-5.671275],[-4.414710,4.688783,-8.639363,-8.790147,8.810878,-0.735571]],[[-8.599966,-0.861576,-4.297687,-3.835725,4.993946,-1.623977],[2.411731,2.053307,-4.794867,0.385864,-7.913596,0.720699],[7.321652,-0.416623,-3.330899,-7.749157,9.938518,1.893738],[9.975044,-3.051392,0.437643,-1.394904,1.284054,2.697603],[-9.507923,-3.395741,-3.595105,2.391809,0.521963,-2.928063],[-5.827081,-7.462952,3.328238,2.547770,6.937181,8.318705],[6.370334,4.473966,2.526839,-1.304526,0.845252,-4.541346],[-1.388040,-9.142340,-3.073342,2.750449,3.122220,-2.029974],[-6.203645,7.455266,2.393515,-9.915862,3.236566,6.868630],[-2.114503,-9.364822,-9.908151,5.618933,-0.155626,-6.575753],[8.789396,0.299206,0.392949,4.401458,9.412975,-7.486687],[-6.723217,6.573802,-9.625737,-2.220595,8.464319,4.211973],[-1.225243,-0.407606,-9.643543,0.663002,2.520939,-3.850091],[-9.808985,-5.866426,-2.721817,-6.709112,6.279339,-4.590979],[-2.368695,-7.133443,1.399555,4.026290,2.441038,-3.408691],[-8.820876,1.973720,-1.138881,-2.290571,5.651475,9.394358]],[[1.817175,-4.913645,4.451855,3.419595,-1.807597,8.583012],[2.229923,9.001899,3.724121,-2.246084,5.462603,2.640946],[7.538091,-0.948155,-7.122904,-1.126060,5.508548,-7.465555],[-1.106160,-3.190714,7.663809,-3.411265,-3.284232,3.230576],[-8.497378,4.991582,5.632893,9.702265,-4.433721,-6.696578],[4.003111,1.181154,3.110098,-2.783612,6.546595,-4.995230],[-9.246513,6.074875,-5.309646,-1.429510,-2.184253,-3.102875],[-9.758399,-1.040380,0.486130,1.744200,4.716951,1.946094],[-7.769543,-9.323593,-8.952577,3.122849,-7.801151,1.664305],[6.242716,2.606508,8.023728,-3.383399,2.456386,4.520760],[4.012823,-2.407767,7.433459,6.842840,9.031807,3.047122],[4.309179,-2.555983,6.379149,-4.917096,-0.926993,-1.709860],[-5.215646,9.723615,8.835362,-7.319963,-1.736420,2.359603],[1.444547,0.036575,0.422207,-7.598732,2.673356,-4.914130],[4.590852,-5.233659,-7.772353,8.384118,5.037927,-8.423497],[6.489270,7.674433,5.971502,7.100458,5.125154,1.947771]],[[8.213308,0.938321,7.348079,9.747942,0.674263,-0.759637],[-6.808532,-0.428869,-7.185765,-0.018643,4.141525,2.207376],[9.430915,4.603780,-7.384425,7.934921,2.772932,-0.352096],[-8.189304,7.043825,6.673912,1.496056,2.100543,3.982407],[-2.988115,-5.414331,1.800898,9.878664,-7.090141,-7.654501],[4.319441,0.299971,-2.258837,2.109990,3.691065,-4.660837],[-6.516479,3.320580,5.218013,-8.150065,-2.664990,-0.221621],[-4.658980,-4.736737,-8.499415,7.938974,-6.314949,-7.572047],[6.485631,7.968388,-9.671860,5.627317,3.585370,3.198451],[-0.621035,9.214347,-2.771727,-1.485591,2.582227,1.449158],[7.936918,5.410061,8.302596,2.067929,-7.320301,-5.531803],[-7.854482,2.555154,-9.377650,7.717960,-8.668196,6.299990],[-6.051880,-0.383172,2.428971,4.677742,-2.771269,-7.495744],[6.404148,-6.795802,2.298545,-9.300464,1.059383,3.323684],[-9.891727,-3.193303,2.459498,4.573797,5.419155,2.849553],[-3.984245,-6.298622,-0.833161,-4.437075,-9.569586,0.933776]],[[7.473283,9.952361,8.159530,-5.454301,4.796542,9.875843],[0.240881,-2.699233,-5.386214,4.629204,9.704489,8.251362],[-0.874990,7.144513,9.326410,-7.384329,-9.951507,2.332349],[1.897629,-4.658907,-7.978574,9.931243,-9.652966,-4.253056],[-8.796849,5.204615,3.104884,6.864277,9.354204,-0.063139],[2.584050,2.278890,6.460869,9.993273,6.285829,5.789460],[3.119658,8.250303,3.652145,-3.496799,9.593550,0.831774],[6.327101,-0.920488,1.615002,7.509462,-1.007769,-2.208562],[0.411144,-2.825828,3.241292,-7.021647,-6.544514,5.922445],[3.172310,0.210896,0.433130,-2.999529,6.908016,7.420067],[7.935116,2.683718,-7.291026,2.228993,-6.087543,-2.800713],[-7.360844,-1.890725,-2.634978,-2.712934,-9.874958,-9.597051],[-1.123195,-3.105577,4.812585,-5.870493,-1.260407,-6.407908],[9.724934,-9.914466,5.480610,-8.964901,5.884936,9.235315],[-3.402724,0.197611,0.751570,-6.639616,-1.890764,-3.899587],[9.370768,4.353308,-3.226896,-0.320904,2.471304,9.427474]],[[3.722785,-2.558060,7.944162,-2.629297,8.396132,-1.468764],[1.553516,-7.786513,5.159435,7.571792,3.025129,-7.996430],[6.595035,-5.148104,8.554739,0.986875,8.883548,6.007386],[2.879684,-3.172432,6.996302,-6.486597,9.421091,3.401020],[2.191522,9.967632,6.154668,-1.494301,-0.599822,7.454506],[8.626712,-3.345609,6.481471,9.508187,0.635160,5.532449],[-7.505464,1.208257,0.974371,-0.520314,-7.352312,4.181035],[7.371868,-5.843816,-4.544128,6.609244,-3.506290,-1.509112],[3.612724,2.396604,2.082306,7.906555,-4.601841,-9.798096],[9.141157,-3.605064,-6.756619,7.597796,2.104595,-5.985922],[-4.723454,0.820956,5.663686,-8.916057,0.993583,-7.775274],[-9.738766,-8.391888,-9.930057,-2.921183,4.767566,2.340023],[8.210181,1.759805,-8.120927,-0.417590,5.322514,-9.551022],[-5.727057,4.439143,-6.540454,-5.150230,-9.845393,2.304545],[2.357276,-3.450410,-7.992466,2.205131,0.786305,-2.811557],[-0.280126,-6.528776,2.725311,-6.796558,9.191862,2.096397]],[[1.630182,-6.211133,1.488127,0.577556,-3.624120,9.137983],[8.072550,-2.862282,-0.696865,9.052704,1.599556,-1.033341],[-4.597871,-4.510303,6.012840,7.309528,-2.630531,-7.584995],[9.746444,-9.707244,8.087430,-6.606255,-4.589820,7.204990],[1.872081,0.932329,-5.522126,8.097940,6.331619,-5.431926],[-7.004272,6.406230,-2.641020,-7.642545,6.922663,7.734028],[-4.376254,-8.952180,-9.304189,2.704691,-8.109664,-9.781116],[5.290963,6.816363,-1.192402,5.005295,1.472846,5.474870],[-2.477566,5.510600,-7.344703,-4.622455,-8.709826,-1.740180],[0.131353,-4.029769,-6.133374,-1.325647,0.929762,-5.079405],[-1.848415,-8.907061,8.946763,1.343751,5.533715,1.838943],[4.967424,-3.488625,-0.856527,-9.947496,4.032023,4.151370],[4.467970,7.979821,6.028748,-4.112748,7.541228,9.238786],[-5.795540,-4.820734,7.661005,-8.716131,9.361307,-1.146417],[6.496422,1.220690,-8.681927,-1.907165,8.277209,-2.612459],[-1.957999,-5.732714,4.320733,-1.144920,-7.706390,2.717950]],[[-3.041750,-8.665999,-5.762808,-9.911153,4.368950,-2.852128],[-5.487538,4.462324,-5.258543,3.970166,0.908369,-5.066612],[8.067607,-2.282996,2.037345,-5.452041,3.431706,-3.921886],[8.140354,6.128990,-0.595066,-3.476678,3.027699,-3.692430],[5.545341,-7.080346,8.669729,9.056871,8.808282,-6.673124],[6.915790,-6.577331,8.544654,1.864080,0.705270,8.835657],[-2.609367,7.569827,-2.225903,-9.636061,3.608549,-8.707094],[8.907011,0.502988,0.343896,-0.721997,-8.729690,-6.174481],[3.617927,8.703059,-0.474966,-9.747416,-9.915454,-7.189584],[-6.411985,3.581511,6.356243,-5.142944,7.126721,1.245021],[-2.529897,-4.045454,1.657889,-2.750601,-7.668812,2.201375],[7.018501,3.627079,4.233334,-4.460361,-0.167802,3.641968],[2.065034,3.393328,-9.359001,5.098428,-3.143386,3.179279],[-4.913495,-7.674000,7.514754,-7.577820,4.769287,4.877261],[1.917428,-5.604447,4.754786,-3.268902,-1.394127,3.499955],[-2.804361,5.017473,-0.136757,-7.530177,-8.421522,3.946017]],[[4.115792,-1.325462,-6.267877,0.726601,6.622195,4.520099],[-0.358984,3.379554,0.208504,1.675838,-0.115733,-4.350284],[2.215562,4.061471,6.259831,-5.077715,-5.388565,-5.411991],[-6.706466,7.543929,8.773072,-7.052474,-2.855345,-7.055334],[-1.534700,9.865804,-8.673099,-7.461411,4.070477,-1.112746],[-0.268748,4.114856,0.076750,8.484598,2.781838,-1.295725],[-0.715326,-0.037159,-0.308206,-3.109261,-4.743845,9.231502],[-9.778815,9.612681,-1.199957,-6.167456,-0.032540,2.473080],[1.199126,7.882266,8.672920,-6.528668,-5.379276,-8.332297],[2.242947,3.908493,9.578800,3.726906,-5.492874,9.720343],[-6.891556,-5.768987,5.201372,-1.977566,-6.160808,7.027149],[0.544791,2.136447,8.035054,8.520644,3.243536,-3.532644],[9.773560,-9.767892,-9.119535,-8.221330,3.600418,4.352195],[5.663484,-6.800669,5.715492,1.538757,3.151255,-0.385471],[5.393275,8.343929,4.086793,4.788785,0.297617,-4.081935],[9.916136,-4.060668,3.786004,5.810680,-3.298263,6.787336]]], dtype = "float32")#candidate|2112|(14, 16, 6)|const|float32
uop_2113 = relay.sigmoid(const_2112.astype('float32')) # shape=(14, 16, 6)
uop_2123 = relay.sin(const_2112.astype('float32')) # shape=(14, 16, 6)
output = relay.Tuple([uop_2113,uop_2123,])
output2 = relay.Tuple([uop_2113,uop_2123,])
func_2125 = relay.Function([], output)
mod['func_2125'] = func_2125
mod = relay.transform.InferType()(mod)
mutated_mod['func_2125'] = func_2125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2125_call = mutated_mod.get_global_var('func_2125')
call_2126 = func_2125_call()
output = call_2126
func_2127 = relay.Function([], output)
mutated_mod['func_2127'] = func_2127
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2284 = relay.var("var_2284", dtype = "uint16", shape = (9, 13, 13))#candidate|2284|(9, 13, 13)|var|uint16
var_2285 = relay.var("var_2285", dtype = "uint16", shape = (9, 13, 13))#candidate|2285|(9, 13, 13)|var|uint16
bop_2286 = relay.less_equal(var_2284.astype('bool'), relay.reshape(var_2285.astype('bool'), relay.shape_of(var_2284))) # shape=(9, 13, 13)
func_316_call = mod.get_global_var('func_316')
func_319_call = mutated_mod.get_global_var('func_319')
const_2292 = relay.const(8, dtype = "int8")#candidate|2292|()|const|int8
var_2293 = relay.var("var_2293", dtype = "int8", shape = (637, 2))#candidate|2293|(637, 2)|var|int8
call_2291 = relay.TupleGetItem(func_316_call(relay.reshape(const_2292.astype('int8'), []), relay.reshape(var_2293.astype('int8'), [7, 14, 13]), ), 1)
call_2294 = relay.TupleGetItem(func_319_call(relay.reshape(const_2292.astype('int8'), []), relay.reshape(var_2293.astype('int8'), [7, 14, 13]), ), 1)
output = relay.Tuple([bop_2286,call_2291,const_2292,var_2293,])
output2 = relay.Tuple([bop_2286,call_2294,const_2292,var_2293,])
func_2308 = relay.Function([var_2284,var_2285,var_2293,], output)
mod['func_2308'] = func_2308
mod = relay.transform.InferType()(mod)
mutated_mod['func_2308'] = func_2308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2308_call = mutated_mod.get_global_var('func_2308')
var_2310 = relay.var("var_2310", dtype = "uint16", shape = (9, 13, 13))#candidate|2310|(9, 13, 13)|var|uint16
var_2311 = relay.var("var_2311", dtype = "uint16", shape = (9, 13, 13))#candidate|2311|(9, 13, 13)|var|uint16
var_2312 = relay.var("var_2312", dtype = "int8", shape = (637, 2))#candidate|2312|(637, 2)|var|int8
call_2309 = func_2308_call(var_2310,var_2311,var_2312,)
output = call_2309
func_2313 = relay.Function([var_2310,var_2311,var_2312,], output)
mutated_mod['func_2313'] = func_2313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1884_call = mod.get_global_var('func_1884')
func_1885_call = mutated_mod.get_global_var('func_1885')
call_2317 = relay.TupleGetItem(func_1884_call(), 0)
call_2318 = relay.TupleGetItem(func_1885_call(), 0)
output = relay.Tuple([call_2317,])
output2 = relay.Tuple([call_2318,])
func_2319 = relay.Function([], output)
mod['func_2319'] = func_2319
mod = relay.transform.InferType()(mod)
output = func_2319()
func_2320 = relay.Function([], output)
mutated_mod['func_2320'] = func_2320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1841_call = mod.get_global_var('func_1841')
func_1843_call = mutated_mod.get_global_var('func_1843')
call_2378 = func_1841_call()
call_2379 = func_1841_call()
func_2308_call = mod.get_global_var('func_2308')
func_2313_call = mutated_mod.get_global_var('func_2313')
const_2387 = relay.const([[-9,4,8,9,-6,-10,10,7,-9],[3,5,4,8,-4,5,6,5,-6],[-3,4,7,-10,-6,-8,-1,2,6],[-8,4,-7,-2,-7,-4,1,-9,9],[-9,-1,-3,9,2,4,9,-2,-3],[-4,-3,1,3,5,9,7,10,-6],[-9,-8,8,8,-3,-10,1,-1,-4],[-2,-6,-8,8,6,5,10,7,-4],[-2,-4,-3,1,-10,-10,5,-1,6],[10,7,1,-10,-6,1,-3,2,-7],[-2,1,-1,6,1,-10,1,1,8],[9,-5,4,-5,-8,-4,4,-3,10],[5,1,5,3,9,-5,-7,6,1],[7,-9,-5,-10,-1,-3,7,6,4],[-7,-9,-4,-7,9,3,3,6,-7],[-3,9,9,4,7,-4,-1,-9,-1],[-5,4,-10,-3,-8,-3,1,1,-9],[-9,-8,2,7,-5,8,-9,-2,8],[-1,5,2,-6,3,1,8,6,8],[8,-3,-4,-8,-3,-6,-2,-2,8],[-2,-6,-10,8,9,-5,-4,-2,7],[8,-1,-4,2,5,1,-9,-6,10],[4,-5,4,1,5,2,1,5,-3],[-8,5,2,-5,-2,7,-6,-2,5],[-2,-1,-2,-7,5,5,-3,6,6],[-5,-8,-1,-1,-6,-9,6,-9,-8],[-1,6,-9,7,-3,1,8,2,4],[-1,-2,7,-1,-5,-1,-3,-10,-10],[9,-2,-10,-4,10,6,-9,9,5],[-7,9,9,6,2,-3,6,2,6],[4,2,-6,-8,-5,-10,-2,-1,8],[-1,-3,10,-7,-2,8,-1,-10,4],[1,-4,-8,-9,1,1,1,4,5],[2,2,-1,3,-1,-2,8,-7,-10],[-7,7,-10,-5,-10,-4,3,-9,1],[-3,9,-7,1,6,10,-4,8,4],[2,8,-8,-9,2,6,-5,10,-7],[8,-4,5,-2,-10,-10,8,-4,4],[-1,-5,-10,-8,3,2,5,-5,4],[-3,-9,-7,-9,-1,-1,7,9,-7],[-4,-7,-1,7,6,-6,-2,-7,6],[-9,8,8,-4,-3,4,3,5,4],[-8,-3,-3,-7,10,3,9,-8,2],[6,10,1,1,3,4,1,8,-8],[-3,-3,8,-8,10,4,4,9,1],[-8,-4,8,8,-1,5,5,-4,-2],[8,9,-8,1,-5,5,-2,10,-6],[5,-10,-10,6,3,-6,4,7,-4],[-6,-8,-7,7,-8,5,-5,-7,7],[-10,-5,-4,-9,6,2,10,7,9],[3,-3,-4,6,-9,6,10,-10,8],[5,2,3,1,4,-5,2,-10,8],[3,5,7,-7,-5,2,-1,-3,10],[9,-3,-1,-5,-4,-8,-10,6,-3],[7,8,5,9,10,-10,-10,-4,-9],[1,8,10,-8,8,-8,-5,-1,10],[6,3,-3,-4,10,-6,-3,-5,-2],[10,7,-4,-1,3,3,-9,5,2],[-2,9,-6,-3,1,1,-2,3,-3],[6,5,7,5,6,-7,-5,7,-1],[10,2,-1,-7,6,-4,-9,2,-4],[-4,4,-6,-8,-9,7,-6,5,10],[-2,1,-9,6,7,-1,-8,7,-5],[-2,8,-6,1,-3,1,-2,-2,-1],[-6,-8,7,-4,-6,-5,-8,2,8],[10,-1,4,10,-4,-7,-5,2,-9],[-5,-3,6,2,7,-9,-3,2,5],[5,-4,-8,-4,7,10,-4,-7,-8],[5,6,-3,4,-5,9,4,5,-4],[10,-10,1,-1,5,-2,-2,2,-8],[4,-2,-10,-10,6,2,-8,6,-7],[8,-4,7,-5,-4,6,3,-3,2],[-5,-6,6,10,2,4,5,-9,-2],[-6,5,3,1,5,10,-5,-8,5],[-1,-9,-1,4,2,6,10,-10,-3],[10,10,5,-1,-4,-3,2,-2,-9],[-2,2,8,8,1,5,-5,-7,8],[-5,-4,7,-6,3,2,2,7,-9],[-1,5,9,7,4,-6,-7,3,-10],[1,3,-3,-8,-8,10,-1,6,-6],[-5,8,-8,-4,-7,-8,-1,-2,-5],[-9,1,-9,7,-5,-6,-10,3,-2],[4,6,3,6,-3,8,3,-2,-7],[9,-2,8,5,-1,-8,7,-9,3],[7,7,10,-9,-5,9,-3,-7,-3],[5,5,-6,10,-4,6,-2,7,-2],[-7,9,-1,5,9,9,6,-1,3],[-3,1,-4,5,10,9,8,-5,9],[9,10,-5,1,-4,-2,2,-1,-5],[9,-5,1,-3,10,-7,-3,-5,4],[1,-3,2,3,-3,6,-3,5,6],[-2,6,-8,-2,-9,4,-7,1,-2],[-5,6,1,-5,6,4,7,-2,7],[6,-1,-6,-8,-9,-3,3,-8,-6],[-2,-5,3,2,-7,-3,-4,-6,3],[1,-5,10,3,-5,-4,-2,-2,-5],[-8,4,-3,10,5,-4,7,10,6],[-9,-5,10,7,-8,-10,-5,1,-2],[8,2,7,4,1,-6,-3,-8,1],[-2,1,-9,-2,-9,-4,7,-4,-5],[-9,7,-2,7,-9,-8,4,-1,7],[-5,-4,1,-7,10,-1,4,-6,10],[-3,-5,-3,-5,10,-3,5,7,-4],[7,-9,5,-4,2,10,-5,-10,-5],[3,1,5,-10,3,10,-8,-9,6],[8,4,7,3,-7,4,7,4,-1],[-1,-1,-10,2,-2,4,-6,5,4],[4,-5,10,4,9,5,-9,2,-3],[-3,-10,-7,-2,-9,-2,10,-10,-8],[-8,-10,-10,-4,-3,1,9,-10,-10],[3,1,10,5,-1,8,-7,-10,1],[4,-1,4,-5,-5,-1,-4,-6,6],[-8,5,-6,-7,-9,-2,8,-8,4],[-8,-4,-4,7,-7,10,-10,-4,8],[-10,-5,-1,-9,-4,8,6,7,-1],[3,8,3,-5,8,8,1,10,-6],[4,2,10,-10,-7,6,-9,-6,-3],[8,-1,-9,-2,-6,-8,-5,-8,4],[8,4,-10,-3,-3,7,9,-6,-10],[9,7,6,10,10,2,-5,8,8],[-4,-7,2,-5,-7,-1,-5,-1,-10],[2,2,-7,7,-7,-5,-1,9,-6],[-1,-4,-1,5,7,-10,7,-6,-5],[-3,7,5,8,1,-5,-10,7,5],[9,5,8,-3,-7,-1,-4,-5,8],[-4,-10,-6,3,3,2,-9,-8,10],[-10,-10,-4,1,9,10,8,8,9],[4,1,-4,-5,-7,7,-10,8,4],[-5,9,-9,-3,-3,4,4,5,-5],[-10,4,-5,3,-6,7,5,2,-6],[-5,9,-10,1,3,1,9,-8,9],[3,-1,4,-8,-2,7,3,-8,9],[7,4,-7,6,6,-6,9,8,-8],[-8,3,9,7,-1,6,3,-1,-3],[-9,4,-5,10,-2,4,1,8,-9],[6,-1,-8,-9,10,7,-8,-4,-4],[5,-5,-4,-6,-8,-1,-3,2,5],[1,-3,6,6,-8,8,-1,8,9],[4,9,2,-8,8,-1,2,-9,-4],[-6,-10,-3,8,1,-2,8,-6,10],[6,4,-10,8,-8,-8,1,3,8],[-8,-1,-2,9,-1,-8,6,-8,9],[7,9,-4,8,-1,-7,-8,-5,3],[-4,-9,1,5,-5,-8,-3,4,10],[1,3,6,8,4,5,-3,2,-3],[1,-10,2,-3,-3,-7,4,9,-9],[-7,1,2,-1,-4,-9,7,4,8],[-5,1,9,1,7,3,6,-2,-3],[4,9,8,4,10,3,6,-9,6],[-6,-1,6,6,4,-1,-4,1,-5],[-3,-4,-7,-1,3,-9,-9,-5,-7],[-4,2,-2,-7,2,-10,-6,-3,6],[-5,4,-8,-6,-7,7,1,6,-1],[8,7,-3,4,1,-10,-9,3,-3],[-6,8,-10,-7,6,4,-4,-5,-2],[-7,10,6,-7,4,-8,-3,-8,10],[-5,10,-10,1,9,-4,-4,9,-1],[5,10,7,8,6,10,5,1,-7],[10,-7,-3,9,-6,-3,-3,-6,-8],[3,-5,-2,-5,10,-2,8,-6,10],[8,9,8,-10,10,4,-10,-6,7],[10,4,-7,9,-6,-2,6,-8,3],[-7,-6,10,-7,-10,3,-10,9,-3],[10,-4,8,-5,-4,-9,8,2,5],[6,2,6,3,-10,-1,1,-4,-10],[-8,7,7,-9,-4,-10,2,-2,4],[-2,5,1,5,-9,-4,-3,3,6],[-8,6,-7,10,4,6,1,7,9],[3,-10,3,1,-8,-8,4,-9,-7]], dtype = "uint16")#candidate|2387|(169, 9)|const|uint16
call_2386 = relay.TupleGetItem(func_2308_call(relay.reshape(const_2387.astype('uint16'), [9, 13, 13]), relay.reshape(const_2387.astype('uint16'), [9, 13, 13]), relay.reshape(call_2378.astype('int8'), [637, 2]), ), 1)
call_2388 = relay.TupleGetItem(func_2313_call(relay.reshape(const_2387.astype('uint16'), [9, 13, 13]), relay.reshape(const_2387.astype('uint16'), [9, 13, 13]), relay.reshape(call_2378.astype('int8'), [637, 2]), ), 1)
func_2003_call = mod.get_global_var('func_2003')
func_2005_call = mutated_mod.get_global_var('func_2005')
call_2392 = relay.TupleGetItem(func_2003_call(), 1)
call_2393 = relay.TupleGetItem(func_2005_call(), 1)
func_1906_call = mod.get_global_var('func_1906')
func_1908_call = mutated_mod.get_global_var('func_1908')
call_2408 = relay.TupleGetItem(func_1906_call(), 0)
call_2409 = relay.TupleGetItem(func_1908_call(), 0)
output = relay.Tuple([call_2378,call_2386,const_2387,call_2392,call_2408,])
output2 = relay.Tuple([call_2379,call_2388,const_2387,call_2393,call_2409,])
func_2410 = relay.Function([], output)
mod['func_2410'] = func_2410
mod = relay.transform.InferType()(mod)
mutated_mod['func_2410'] = func_2410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2410_call = mutated_mod.get_global_var('func_2410')
call_2411 = func_2410_call()
output = call_2411
func_2412 = relay.Function([], output)
mutated_mod['func_2412'] = func_2412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
call_2437 = relay.TupleGetItem(func_1823_call(), 2)
call_2438 = relay.TupleGetItem(func_1825_call(), 2)
func_1884_call = mod.get_global_var('func_1884')
func_1885_call = mutated_mod.get_global_var('func_1885')
call_2439 = relay.TupleGetItem(func_1884_call(), 1)
call_2440 = relay.TupleGetItem(func_1885_call(), 1)
output = relay.Tuple([call_2437,call_2439,])
output2 = relay.Tuple([call_2438,call_2440,])
func_2458 = relay.Function([], output)
mod['func_2458'] = func_2458
mod = relay.transform.InferType()(mod)
output = func_2458()
func_2459 = relay.Function([], output)
mutated_mod['func_2459'] = func_2459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1004_call = mod.get_global_var('func_1004')
func_1005_call = mutated_mod.get_global_var('func_1005')
call_2505 = relay.TupleGetItem(func_1004_call(), 1)
call_2506 = relay.TupleGetItem(func_1005_call(), 1)
output = call_2505
output2 = call_2506
func_2510 = relay.Function([], output)
mod['func_2510'] = func_2510
mod = relay.transform.InferType()(mod)
mutated_mod['func_2510'] = func_2510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mutated_mod.get_global_var('func_2510')
call_2511 = func_2510_call()
output = call_2511
func_2512 = relay.Function([], output)
mutated_mod['func_2512'] = func_2512
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2527 = relay.var("var_2527", dtype = "bool", shape = (10, 7, 5))#candidate|2527|(10, 7, 5)|var|bool
var_2528 = relay.var("var_2528", dtype = "bool", shape = (10, 7, 5))#candidate|2528|(10, 7, 5)|var|bool
bop_2529 = relay.logical_and(var_2527.astype('bool'), relay.reshape(var_2528.astype('bool'), relay.shape_of(var_2527))) # shape=(10, 7, 5)
output = relay.Tuple([bop_2529,])
output2 = relay.Tuple([bop_2529,])
func_2539 = relay.Function([var_2527,var_2528,], output)
mod['func_2539'] = func_2539
mod = relay.transform.InferType()(mod)
mutated_mod['func_2539'] = func_2539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2539_call = mutated_mod.get_global_var('func_2539')
var_2541 = relay.var("var_2541", dtype = "bool", shape = (10, 7, 5))#candidate|2541|(10, 7, 5)|var|bool
var_2542 = relay.var("var_2542", dtype = "bool", shape = (10, 7, 5))#candidate|2542|(10, 7, 5)|var|bool
call_2540 = func_2539_call(var_2541,var_2542,)
output = call_2540
func_2543 = relay.Function([var_2541,var_2542,], output)
mutated_mod['func_2543'] = func_2543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1146_call = mod.get_global_var('func_1146')
func_1147_call = mutated_mod.get_global_var('func_1147')
call_2589 = func_1146_call()
call_2590 = func_1146_call()
const_2591 = relay.const([-1.034029,9.812714,2.682551,6.465194,6.924840,5.820772,7.385731,-9.267531,9.111112,5.621381,-2.972550,5.079872,3.827006,2.553037,3.238279,3.572275,2.293945,7.392221,5.839991,4.878476,-7.029343,7.920436,0.606211,1.761876,7.425666,5.440184,-9.874925,2.239526,7.202630,-1.732142,7.259886,-9.145474,-7.804906,-8.615133,-3.994629,7.432563,-4.301334,6.231779,-9.865556,3.025098,1.926298,6.789670,1.188572,6.415643,7.696727,5.770324,5.956859,9.852117,-6.554391,1.465863,-8.710297,5.786508,-1.635399,-5.390947,-9.413855,-1.850469,-6.603407,4.475117,-5.971507,-4.967743,-5.534372,2.212701,2.419104,-6.277052,-7.226619,-4.554112,-8.411433,5.435082,-3.719312,1.360968,4.540132,3.247375,6.848595,5.877333,3.912195,1.092779,-7.116958,-0.268620,-2.702534,8.377140,-6.753115,7.259988,5.644468,8.797728,-1.099985,-6.191943,-4.847218,9.011311,-4.741535,-2.824474,-1.622658,-8.194828,-4.217305,-0.872547,4.941557,1.724989,4.849142,-2.773937,5.953354,3.227664,-5.189216,-3.450091,3.055660,-3.904860,-3.450770,3.861525,-4.260670,3.974843,-2.149680,1.342505,8.540000,-8.919265,4.095823,-2.011957,-6.748608,-0.441409,7.747972,-5.897854,-6.825672,5.791754,5.984805,2.675885,-3.582269,-0.410091,-6.644504,-9.170647,-9.127832,4.282812,7.804039,-9.441761,9.141027,-6.948674,9.162221,4.447237,8.746513,1.420132,0.100511,-8.580705,2.876305,0.104189,3.320113,-4.945710,-4.463770,8.102430,6.895485,5.859923,5.073142,1.547098,-2.842494,-3.425331,4.898141,-3.374201,3.284645,-7.381910,7.853304,-4.971065,4.087464,-7.700362,-3.355889,7.516511,-5.724323,-4.373699,-2.097095,-7.458877,-0.129009,-7.081789,-7.114139,9.174233,-0.036918,8.030358,7.186382,-3.891920,-8.594752,-9.344400,-5.135174,-7.780962,-9.479300,-8.784650,-4.627762,-9.352657,-0.030353,9.074145,5.335581,-3.771332,-4.049384,-7.896730,9.639125,5.215658,1.256024,2.731440,9.829405,-4.861289,-9.109051,3.239268,-3.040542,-7.421433,-9.804987,9.823316,-9.003445,8.871840,9.984314,-9.600878,-9.068522,-5.075951,6.140765,-7.117040,3.867143,-9.142310,6.791160,0.736771,2.954323,-5.042538,8.526569,-1.200333,2.417255,-5.010740,8.908648,-9.226918,-4.338622,0.247928,-5.033026,1.706954,0.910404,2.911676,9.698272,-0.686251,-7.624260,-3.890591,-7.913205,5.253514,6.784507,8.239897,-3.547924,-0.642907,-9.890904,-8.651953,9.800710,2.332102,-2.684692,-4.366687,6.032851,-9.170079,1.525694,2.112803,1.417065,-9.603766,-0.589275,9.444502,6.262713,-9.329506,-4.717286,-1.114360,-7.192616,-9.045196,-6.708992,-0.665073,8.591345,-6.783439,4.031797,-7.423302,-2.763568,2.318642,-5.397373,-5.983762,0.743896,-3.008710,2.143707,5.005782,-1.542549,-0.720292,-4.594559,-8.396821,-0.765749,2.948447,-7.665099,-4.857947,-7.999792,9.889574,4.503233,-5.391457,-0.983853,-5.526955,8.424592,0.294731,2.429469,-6.785783,-3.549711,7.103767,4.834604,2.288649,-0.309131,0.325561,3.278664,-3.123444,-3.763820,0.367565,3.743014,-4.104972,-2.653250,-6.513668,-2.090009,0.814802,2.325609,1.810964,7.213898,-8.019245,-4.168295,-2.039952,-9.709956,-6.233340,7.126526,-3.533551,9.696717,3.376431,-5.699614,3.884491,2.846744,-6.592130,2.142973,7.776789,-9.266712,4.776918,1.692179,-7.534261,-0.750505,-4.478781,6.363519,-8.635168,-9.869378,-4.010517,1.989106,9.577777,-7.922021,9.475287,2.236595,2.396358,-4.338211,-5.738719,-9.093629,1.163877,-7.870692,7.796715,-5.733463,-9.978487,1.732944,-6.861491,8.676175,3.705723,6.278842,5.335758,-3.989539,-5.337195,0.003854,-8.159081,7.820960,-4.791402,-9.555421,5.668867,9.877468,0.501389,-5.217553,6.376048,4.673672,-8.063724,4.296511,0.896237,-6.007962,-2.905125,-3.201400,5.618701,4.490584,7.429286,0.997947,-8.925048,9.427834,-2.197650,1.021691,4.479276,-0.522480,5.576877,9.689059,0.089015,-7.444090,-4.907165,9.214826,3.127217,2.765349,-9.771734,4.927454,-5.864555,-5.138248,1.229561,-6.538875,-1.962628,-8.528173,8.117284,-9.707657,2.318579,-3.714634,8.817894,1.470252,-8.860371,-5.299522,-7.740806,-8.048015,-2.626375,8.297775,-2.304221,-0.763489,-3.224145,0.511439,-5.983179,2.854033,-4.389378,5.748734,0.351133,-3.169003,-6.011467,-8.732566,5.419687,0.775986,6.918825,2.958017,-2.922445,-4.720430,-1.142286,-4.694581,2.820008,-4.691720,-0.739301,4.619015,-2.157556,0.931019,-5.285265,5.815160,-1.768307,8.103751,9.800106,-8.173795,-9.977681,4.967622,-0.775380,-3.269407,4.366811,5.996898,-8.946305,5.466494,9.613306,8.775211,-9.255639,3.555431,3.069989,-4.708256,0.306470,8.317859,3.308164,-6.007206,-4.446344,0.424952,4.320676,1.280018,9.457040,-0.246816,-5.697251,8.347971,3.459655,5.001494,2.062622,8.384731,-3.346145,4.539508,5.318933,1.523324,-5.819286,8.756120,-4.859295,8.282211,4.414271,-8.706048,-7.550151,-4.700055,-7.757073,-4.124096,5.265780,-5.808563,-6.306036,7.346768,9.043856,-1.716805,2.113211,3.991138,-9.155403,-4.496333,-7.108267,5.409885,-7.971209,-7.320300,-9.969288,-9.478536,0.254923,6.024552,-8.652732,0.074209,-4.319365,2.509067,-3.423653,1.196528,-4.301547,-4.353606,-8.200471,9.293835,-4.938978,9.891437,-8.629257,-7.001623,-9.928978,-9.705585,4.698217,-0.523584,1.423082,4.755638,-0.760590,-4.690520,-5.657855,6.226244,9.085948,2.268096,2.029909,-1.612516,4.570221,8.810681,-5.764014,-2.231130,0.492150,6.432788,0.782355,-1.031136,0.023928,-3.539408,-3.004834,-6.723522,-4.256168,7.450860,-6.728073,2.553535,-8.464363,2.470327,-8.178868,-3.773214,-4.402138,-3.667327,5.037473,3.271248,-3.373082,-5.223808,-0.922658,-6.306878,2.427600,-2.384500,9.401122,2.004312,-1.238934,-0.796737,-1.655224,-0.291539,9.925012,-7.936688,-1.245009,2.356151,7.233218,7.082833,8.631757,-2.544280,1.408027,-2.767778,5.567285,-8.168283,6.024909,-9.081530,-4.360392,-0.521384,-4.991064,-8.146706,6.159914,6.030682,4.000075,-1.079879,-3.637136,1.827841,2.053337,-0.847422,3.097759,-6.768006,8.894704,9.179313,9.677962,9.422376,-8.074702,-4.428942,-5.062712,3.402237,-8.673296,-7.321888,-9.374798,-7.985644,7.465246,-9.216462,-4.299311,5.858631,-4.802223,3.128128,5.329525,5.554122,-8.126205,7.181873,8.950973,-9.064753,-7.774730,-2.896141,1.238828,-2.640134,4.166083,9.337752,6.132111,6.714359,3.339738,0.838451,-2.817959,6.065949,1.825476,9.770014,3.620646,-3.850420,-4.000412,-9.980721,-2.267706,-2.627854,-0.940003,3.484822,2.451197,8.095063,3.968750,5.177426,9.196661,-0.346499,9.892861,8.305987,7.124004,-0.107092,-7.687187,0.498507,7.151486,-9.005030,-4.093928,3.993605,-6.348994,-5.254684,3.134032,9.152614,-4.130841,4.889820,9.845578,-2.531874,1.682761,-2.668430,-1.783516,-6.022177,-8.316078,8.459217,-5.682498,-2.154885,7.497902,-0.314411,-0.042543,9.410384,9.140317,-8.208149,9.889505,5.089494,4.687293,-6.026214,-9.279141,9.522653,7.749270,6.264192,2.963557,-5.379193,-7.037574,7.653767,3.120952,-7.424070,-7.488257,3.129520,9.938021,-6.384036,4.399726,-1.608441,7.253256,-5.169404,-7.576812,-3.994413,4.693879,-6.455808,3.547305,-4.491162,-2.996797,6.897223,5.594393,-7.792269,7.239662,8.025812,6.927980,-7.696626,0.630870,5.406853,-9.328149,1.990131,9.985056,-2.239636,8.564930,6.621355,8.124329,-9.205661,4.799785,2.477669,4.866826,3.183084,5.250733,7.184613,-8.063627,-1.931307,-5.975328,-2.854729,-2.754490,-0.134270,3.088665,8.058392,-8.535513,7.445457,5.684941,8.126478,7.557200,2.318985,-5.480216,0.790657,-4.373080,-5.095875,4.004628,-6.619832,2.367321,-2.930295,-6.582152,9.403390,2.682432,-5.350742,2.829361,-7.397533,3.501933,3.616940,-3.862639,-4.724095,6.453153,-3.275959,-2.581345,-4.373789,3.368679,-1.537541,-0.771382,0.491226,3.508521,-9.434921,5.826263,5.942237,4.294492,-8.103402,-9.217468,-0.214510,5.160569,-1.293996,7.929123,2.368122,3.162757,-0.274076,7.874365,-9.692145,7.386594,-6.802165,6.812111,7.374757,-1.748910,-4.001695,9.792838,-3.970576,7.736065,-3.042899,7.384874,-8.151061,8.020223,6.711728,-0.818386,9.221849,-8.620405,-8.434346,-1.037202,-4.535626,2.621422,4.945282,8.450253,-3.605170,-9.816363,9.469978,-3.337569,2.361617,-4.118521,4.712663,-4.749043,2.939052,-6.599951,-8.068244,0.261419,8.463812,1.550928,0.954283,0.719904,-2.880199,-8.314252,0.994841,8.702864,6.225056,7.043908,-8.639384,0.071423,1.187946,9.071955,-4.528842,-5.225744,0.370513,-5.853047,0.265455,-0.777210,-2.583395,9.223748,-0.129650,-6.520385,9.736743,-4.487544,4.005887,0.710497,3.378019,-7.978907,5.679721,2.153177,-3.376631,-8.036803,5.935223,0.840996,0.164861,-1.984435,1.655541,8.072614,-0.955735,-0.953908,-2.544171,-6.076506,-6.121322,8.112042,-2.338488,1.493120,7.324883,-8.759327,-7.530667,-6.509576,-4.683753,0.962611,5.824045,-1.590450,-7.359497,7.836043,-5.318789,-3.469228,-1.254817,1.957776,8.856610,9.836851,-1.232993,4.961230,-8.253988,-4.903722,-5.844461,-4.776644,8.099695,-3.513561,-0.992074,-1.979782,8.775405,6.610733,-7.435978,-5.891705,9.430474,-2.704783,9.976185,8.152140,7.303284,3.371922,5.312097,6.533049,-2.210857,5.918787,2.857930,-5.103031,-4.929540,-7.706568,-0.470221,-7.998037,5.163302,0.393918,0.190419,-9.105104,-3.657946,-0.564813,0.342790,-6.290526,7.050316,-2.656421,7.300380,-6.740306,3.611178,3.036054,1.680254,9.701612,-4.317266,-9.784404,9.723229,4.734381,-8.119928,-6.164498,2.958678,3.747253,-7.251718,-1.952901,-2.662324,4.585177,8.423806,4.194104,9.922019,9.393538,9.191252,4.916219,-0.474067,8.407781,-4.361729,1.302860,-7.849120,0.775222,-8.453886,3.589889,-3.679606,-0.694108,8.897562,-1.683228,7.532420,-9.871664,7.379024,0.018441,-4.517670,-8.133509,-5.665913,5.864924,7.591310,5.218133,-3.878222,-6.944556,-5.792422,-4.403009,0.400453,-3.983912,9.458497,6.046029,-8.084043,-9.058813,5.651060,6.891438,-6.534199,7.806540,8.275784,-5.703689,9.354738,-6.567445,5.101771,1.350824,-6.757933,5.286402,-6.112209,-2.190857,-4.046788,-3.816613,-3.087144,1.602734,-9.435705,-7.328398,-6.112131,0.868127,9.934752,6.652472,-6.904152,8.335927,-4.272127,-9.402283,-5.277693,9.859195,-0.342671,-7.921355,1.216031,1.697202,-6.080564,-5.400168,-7.845630,-0.061923,3.823580,5.093951,-2.700903,-7.471546,4.278102,-5.603065,-8.499977,-5.639490,7.812361,3.347998,9.473798,-7.644985,-2.631727,-6.007683,-9.609622,-6.088621,-4.683745,9.359701,9.555270,5.276363,2.858348,-2.519758,6.613993,-2.806584,9.409268,5.620765,-6.612817,0.978678,-5.182212,-2.172903,-7.200923,5.177057,-2.812549,-8.865966,-0.542611,-6.780958,6.567814,7.962029,-8.125708,2.519047,3.407499,-8.543612,-3.905148,-4.295729,1.261120,8.064606,-1.552171,-2.624387,4.173683,-3.640952,-8.210419,9.004981,0.766864,-1.977162,-5.471783,6.740264,-8.199545,-7.764798,5.682520,-4.140710,9.213953,3.789492,-9.283696,-2.760448,-1.073491,3.700505,9.493884,-8.792737,-6.943060,-0.093660,-7.870515,-4.941357,9.022700,9.642656,-5.955325,8.038453,0.332549,0.254340,-5.696205,8.963400,-9.684531,0.969355,-4.999958,-0.772681,-0.307508,7.942582,-3.723310,-6.691912,-5.751739,2.658848,4.107383,-9.879478,4.315695,-0.434504,8.093349,-8.702136,-2.989421,-8.544488,0.799567,9.049789,1.524061,-1.353917,6.441633,-1.960047,-1.892171,-8.344732,-9.792056,-9.416986,-5.097519,-8.793552,-1.293383,2.173748,-6.966429,0.027159,-2.357164,-8.214713,-8.692142,5.012239,8.939576,0.559469,3.575081,7.657609,4.184825,9.730386,-4.147471,4.432707,-4.689977,9.658464,-0.525694,-8.218501,-7.617242,7.710177,6.529896,-1.119370,-9.880516,-9.791414,0.013727,8.515736,9.328321,-1.065932,-3.159613,3.673126,-6.088628,-7.842318,8.559512,3.771277,3.766833,-3.993625,1.323894,5.592327,2.839672,-8.800990,6.837980,8.745531,-8.220575,-7.412051,5.331315,-3.932805,-7.443240,3.585531,2.034512,5.384260,0.988488,-4.226128,-3.371821,-4.560776,9.957923,-2.529362,-8.835869,-6.422329,7.934933,-6.248763,-9.012341,-9.567742,7.488981,-0.602498,-5.792516,3.047941,-5.047964,4.130934,5.629493,-7.313396,-2.613657,7.078786,-2.408684,0.394858,-5.367322,-9.692732,-2.427532,7.595047,-3.775583,8.604672,-9.148962,-0.748627,-1.742166,1.647239,0.663290,-2.579922,6.096643,6.640822,2.785236,8.723684,-4.333416,-7.411136,6.878394,-3.544272,-6.567590,-7.958016,-4.759369,1.118494,-5.483084,-7.649173,-3.377256,1.483357,-1.142029,2.315911,-7.849409,3.190935,-0.378509,1.624254,3.955340,-3.346771,3.993560,-6.215481,6.091505,-4.275270,8.505912,-1.952017,-5.820572,1.386682,-5.535503,-0.754925,1.760550,1.545634,-1.356069,7.154382,-3.154501,3.531886,7.897283,1.889357,9.531413,-0.650299,-6.033661,-7.356858,8.062454,9.415107,-3.422535,-2.340438,2.950992,9.476493,-3.050709,3.809715,-4.562731,1.848072,8.933435,9.433673], dtype = "float64")#candidate|2591|(1274,)|const|float64
bop_2592 = relay.bitwise_xor(call_2589.astype('int64'), relay.reshape(const_2591.astype('int64'), relay.shape_of(call_2589))) # shape=(1274,)
bop_2595 = relay.bitwise_xor(call_2590.astype('int64'), relay.reshape(const_2591.astype('int64'), relay.shape_of(call_2590))) # shape=(1274,)
func_435_call = mod.get_global_var('func_435')
func_438_call = mutated_mod.get_global_var('func_438')
var_2600 = relay.var("var_2600", dtype = "float64", shape = (1456,))#candidate|2600|(1456,)|var|float64
call_2599 = func_435_call(relay.reshape(var_2600.astype('float64'), [7, 13, 16]), relay.reshape(var_2600.astype('float64'), [7, 13, 16]), )
call_2601 = func_435_call(relay.reshape(var_2600.astype('float64'), [7, 13, 16]), relay.reshape(var_2600.astype('float64'), [7, 13, 16]), )
output = relay.Tuple([bop_2592,call_2599,var_2600,])
output2 = relay.Tuple([bop_2595,call_2601,var_2600,])
func_2604 = relay.Function([var_2600,], output)
mod['func_2604'] = func_2604
mod = relay.transform.InferType()(mod)
mutated_mod['func_2604'] = func_2604
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2605 = relay.var("var_2605", dtype = "float64", shape = (1456,))#candidate|2605|(1456,)|var|float64
func_2604_call = mutated_mod.get_global_var('func_2604')
call_2606 = func_2604_call(var_2605)
output = call_2606
func_2607 = relay.Function([var_2605], output)
mutated_mod['func_2607'] = func_2607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_2625 = func_555_call()
call_2626 = func_555_call()
var_2628 = relay.var("var_2628", dtype = "bool", shape = (4, 12, 5))#candidate|2628|(4, 12, 5)|var|bool
bop_2629 = relay.not_equal(call_2625.astype('bool'), relay.reshape(var_2628.astype('bool'), relay.shape_of(call_2625))) # shape=(4, 12, 5)
bop_2632 = relay.not_equal(call_2626.astype('bool'), relay.reshape(var_2628.astype('bool'), relay.shape_of(call_2626))) # shape=(4, 12, 5)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_2638 = func_2510_call()
call_2639 = func_2510_call()
output = relay.Tuple([bop_2629,call_2638,])
output2 = relay.Tuple([bop_2632,call_2639,])
func_2643 = relay.Function([var_2628,], output)
mod['func_2643'] = func_2643
mod = relay.transform.InferType()(mod)
mutated_mod['func_2643'] = func_2643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2644 = relay.var("var_2644", dtype = "bool", shape = (4, 12, 5))#candidate|2644|(4, 12, 5)|var|bool
func_2643_call = mutated_mod.get_global_var('func_2643')
call_2645 = func_2643_call(var_2644)
output = call_2645
func_2646 = relay.Function([var_2644], output)
mutated_mod['func_2646'] = func_2646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_2648 = func_555_call()
call_2649 = func_555_call()
func_356_call = mod.get_global_var('func_356')
func_357_call = mutated_mod.get_global_var('func_357')
call_2658 = relay.TupleGetItem(func_356_call(), 1)
call_2659 = relay.TupleGetItem(func_357_call(), 1)
func_1699_call = mod.get_global_var('func_1699')
func_1701_call = mutated_mod.get_global_var('func_1701')
call_2665 = relay.TupleGetItem(func_1699_call(), 0)
call_2666 = relay.TupleGetItem(func_1701_call(), 0)
func_2125_call = mod.get_global_var('func_2125')
func_2127_call = mutated_mod.get_global_var('func_2127')
call_2670 = relay.TupleGetItem(func_2125_call(), 1)
call_2671 = relay.TupleGetItem(func_2127_call(), 1)
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
call_2674 = relay.TupleGetItem(func_1823_call(), 2)
call_2675 = relay.TupleGetItem(func_1825_call(), 2)
output = relay.Tuple([call_2648,call_2658,call_2665,call_2670,call_2674,])
output2 = relay.Tuple([call_2649,call_2659,call_2666,call_2671,call_2675,])
func_2679 = relay.Function([], output)
mod['func_2679'] = func_2679
mod = relay.transform.InferType()(mod)
mutated_mod['func_2679'] = func_2679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2679_call = mutated_mod.get_global_var('func_2679')
call_2680 = func_2679_call()
output = call_2680
func_2681 = relay.Function([], output)
mutated_mod['func_2681'] = func_2681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1004_call = mod.get_global_var('func_1004')
func_1005_call = mutated_mod.get_global_var('func_1005')
call_2685 = relay.TupleGetItem(func_1004_call(), 0)
call_2686 = relay.TupleGetItem(func_1005_call(), 0)
output = call_2685
output2 = call_2686
func_2697 = relay.Function([], output)
mod['func_2697'] = func_2697
mod = relay.transform.InferType()(mod)
mutated_mod['func_2697'] = func_2697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2697_call = mutated_mod.get_global_var('func_2697')
call_2698 = func_2697_call()
output = call_2698
func_2699 = relay.Function([], output)
mutated_mod['func_2699'] = func_2699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1146_call = mod.get_global_var('func_1146')
func_1147_call = mutated_mod.get_global_var('func_1147')
call_2722 = func_1146_call()
call_2723 = func_1146_call()
func_2410_call = mod.get_global_var('func_2410')
func_2412_call = mutated_mod.get_global_var('func_2412')
call_2732 = relay.TupleGetItem(func_2410_call(), 3)
call_2733 = relay.TupleGetItem(func_2412_call(), 3)
output = relay.Tuple([call_2722,call_2732,])
output2 = relay.Tuple([call_2723,call_2733,])
func_2747 = relay.Function([], output)
mod['func_2747'] = func_2747
mod = relay.transform.InferType()(mod)
output = func_2747()
func_2748 = relay.Function([], output)
mutated_mod['func_2748'] = func_2748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_415_call = mod.get_global_var('func_415')
func_416_call = mutated_mod.get_global_var('func_416')
call_2788 = relay.TupleGetItem(func_415_call(), 0)
call_2789 = relay.TupleGetItem(func_416_call(), 0)
func_1004_call = mod.get_global_var('func_1004')
func_1005_call = mutated_mod.get_global_var('func_1005')
call_2792 = relay.TupleGetItem(func_1004_call(), 0)
call_2793 = relay.TupleGetItem(func_1005_call(), 0)
output = relay.Tuple([call_2788,call_2792,])
output2 = relay.Tuple([call_2789,call_2793,])
func_2796 = relay.Function([], output)
mod['func_2796'] = func_2796
mod = relay.transform.InferType()(mod)
output = func_2796()
func_2797 = relay.Function([], output)
mutated_mod['func_2797'] = func_2797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_356_call = mod.get_global_var('func_356')
func_357_call = mutated_mod.get_global_var('func_357')
call_2802 = relay.TupleGetItem(func_356_call(), 1)
call_2803 = relay.TupleGetItem(func_357_call(), 1)
output = call_2802
output2 = call_2803
func_2804 = relay.Function([], output)
mod['func_2804'] = func_2804
mod = relay.transform.InferType()(mod)
mutated_mod['func_2804'] = func_2804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2804_call = mutated_mod.get_global_var('func_2804')
call_2805 = func_2804_call()
output = call_2805
func_2806 = relay.Function([], output)
mutated_mod['func_2806'] = func_2806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2846 = relay.var("var_2846", dtype = "int64", shape = (10, 15, 4))#candidate|2846|(10, 15, 4)|var|int64
const_2847 = relay.const([[[1,4,-6,1],[-3,-3,8,7],[1,-4,-4,-7],[-8,5,9,9],[5,-6,-8,4],[1,10,3,-3],[-9,5,5,4],[-8,3,6,-9],[-7,3,-9,-9],[-4,10,-6,2],[-3,9,-10,1],[1,-7,-8,-9],[9,-2,-10,-1],[-10,2,7,3],[2,5,-6,-1]],[[-2,5,5,7],[-7,6,-2,2],[9,1,-9,-3],[-8,-6,-7,-3],[-7,9,4,8],[6,9,-1,3],[-6,-6,-9,-9],[-9,1,-1,-7],[5,-8,3,-10],[-10,-1,3,-10],[6,-5,9,2],[-8,6,-9,6],[8,-3,-2,1],[6,-2,4,10],[-2,-7,-9,-8]],[[3,-6,6,8],[-8,4,6,3],[-7,-2,10,3],[9,2,-8,-6],[-4,-5,4,2],[-4,5,2,-3],[4,-2,-9,6],[-4,7,9,-2],[6,3,1,-4],[-4,7,7,-6],[7,-5,2,6],[10,-5,5,-3],[-7,2,4,2],[-5,5,-7,2],[9,-2,-9,-7]],[[10,-7,1,7],[-6,5,5,9],[4,-1,-5,7],[-10,-6,-5,-7],[7,3,6,6],[-1,4,-6,-7],[7,3,10,-9],[-9,1,-10,-1],[4,4,6,-4],[1,-2,-10,-9],[-6,2,-10,-10],[8,3,10,4],[9,-4,8,-9],[-5,-7,-1,-4],[9,-7,-9,-8]],[[-8,6,6,-2],[7,-8,-3,7],[-2,-4,3,2],[-6,-8,3,3],[-8,9,-8,-7],[-6,-2,-3,-8],[-5,8,10,7],[6,-10,-3,2],[1,-5,2,-4],[8,9,6,8],[8,7,-5,-4],[2,-4,7,6],[7,5,-5,10],[-6,7,-6,1],[-9,2,5,-7]],[[-1,1,4,6],[-1,3,-1,-1],[1,6,1,9],[-8,-5,8,9],[10,-9,-9,10],[-7,8,-5,4],[-7,1,-10,9],[5,10,-6,5],[8,2,9,7],[-4,-4,6,-5],[10,10,-8,9],[-2,7,7,4],[5,1,8,10],[5,-3,3,3],[-3,5,-3,-5]],[[1,-3,-5,4],[-2,6,6,-4],[-1,1,2,-7],[-8,-6,-5,6],[-4,-6,3,-1],[-6,-7,-4,-3],[-7,-6,2,-5],[6,-1,-4,-8],[-7,7,6,-7],[6,5,4,-2],[-4,-1,4,7],[7,2,9,10],[-6,-6,-7,-5],[4,1,-7,10],[-1,-10,-6,6]],[[6,-7,-8,1],[-3,6,-7,-3],[10,10,4,1],[-10,2,-7,-9],[4,10,-2,8],[5,7,3,-6],[3,10,-5,-3],[-1,8,3,3],[-5,1,-1,7],[1,1,-6,-8],[-2,-6,-1,-9],[-6,-2,-8,6],[5,5,4,-5],[7,-10,-2,2],[9,10,-7,-2]],[[-10,9,9,-3],[1,-4,9,-2],[5,9,-2,-3],[9,1,-2,6],[-9,-2,-10,-5],[-3,10,8,10],[3,3,10,-6],[-9,4,2,-5],[-5,-9,2,-8],[3,-8,-9,4],[-8,7,5,9],[-10,7,-3,3],[9,-4,8,-7],[1,1,2,4],[-4,-9,6,-3]],[[1,10,-4,3],[-7,-4,1,5],[7,-4,3,8],[-8,-8,-5,3],[-3,-9,8,-10],[-8,-9,6,-3],[-1,-1,-4,4],[5,8,-3,5],[6,10,-7,10],[-5,-6,-4,-5],[7,-3,-6,-5],[-9,3,6,7],[-4,-9,-9,8],[-7,-8,-5,-9],[-10,5,9,9]]], dtype = "int64")#candidate|2847|(10, 15, 4)|const|int64
bop_2848 = relay.maximum(var_2846.astype('int64'), relay.reshape(const_2847.astype('int64'), relay.shape_of(var_2846))) # shape=(10, 15, 4)
func_2458_call = mod.get_global_var('func_2458')
func_2459_call = mutated_mod.get_global_var('func_2459')
call_2855 = relay.TupleGetItem(func_2458_call(), 1)
call_2856 = relay.TupleGetItem(func_2459_call(), 1)
output = relay.Tuple([bop_2848,call_2855,])
output2 = relay.Tuple([bop_2848,call_2856,])
func_2857 = relay.Function([var_2846,], output)
mod['func_2857'] = func_2857
mod = relay.transform.InferType()(mod)
var_2858 = relay.var("var_2858", dtype = "int64", shape = (10, 15, 4))#candidate|2858|(10, 15, 4)|var|int64
output = func_2857(var_2858)
func_2859 = relay.Function([var_2858], output)
mutated_mod['func_2859'] = func_2859
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2884 = relay.const([[-5.101413,-5.945847,4.064851,-0.783739,-1.024340],[-6.182104,9.477002,8.479385,-5.838169,-7.874080],[5.034922,3.514213,3.103414,-9.304342,9.441866],[9.556980,7.623238,8.871859,-3.996212,4.351943],[9.529981,-7.289387,-7.039767,6.038725,-9.505598],[-8.408983,3.314813,1.145232,-1.599287,-4.216265],[7.128099,9.896635,6.183751,8.431433,5.268036],[-0.646377,3.147077,3.875412,-6.903136,-5.002061],[9.249003,0.181640,0.814436,8.589279,-1.742971]], dtype = "float64")#candidate|2884|(9, 5)|const|float64
uop_2885 = relay.sinh(const_2884.astype('float64')) # shape=(9, 5)
func_316_call = mod.get_global_var('func_316')
func_319_call = mutated_mod.get_global_var('func_319')
const_2888 = relay.const(-2, dtype = "int8")#candidate|2888|()|const|int8
var_2889 = relay.var("var_2889", dtype = "int8", shape = (1274,))#candidate|2889|(1274,)|var|int8
call_2887 = relay.TupleGetItem(func_316_call(relay.reshape(const_2888.astype('int8'), []), relay.reshape(var_2889.astype('int8'), [7, 14, 13]), ), 1)
call_2890 = relay.TupleGetItem(func_319_call(relay.reshape(const_2888.astype('int8'), []), relay.reshape(var_2889.astype('int8'), [7, 14, 13]), ), 1)
func_1199_call = mod.get_global_var('func_1199')
func_1200_call = mutated_mod.get_global_var('func_1200')
call_2898 = relay.TupleGetItem(func_1199_call(), 1)
call_2899 = relay.TupleGetItem(func_1200_call(), 1)
func_2604_call = mod.get_global_var('func_2604')
func_2607_call = mutated_mod.get_global_var('func_2607')
call_2905 = relay.TupleGetItem(func_2604_call(relay.reshape(call_2898.astype('float64'), [1456,])), 2)
call_2906 = relay.TupleGetItem(func_2607_call(relay.reshape(call_2898.astype('float64'), [1456,])), 2)
uop_2914 = relay.cosh(call_2905.astype('float32')) # shape=(1456,)
uop_2916 = relay.cosh(call_2906.astype('float32')) # shape=(1456,)
bop_2932 = relay.left_shift(uop_2914.astype('int32'), const_2888.astype('int32')) # shape=(1456,)
bop_2935 = relay.left_shift(uop_2916.astype('int32'), const_2888.astype('int32')) # shape=(1456,)
output = relay.Tuple([uop_2885,call_2887,var_2889,call_2898,bop_2932,])
output2 = relay.Tuple([uop_2885,call_2890,var_2889,call_2899,bop_2935,])
func_2938 = relay.Function([var_2889,], output)
mod['func_2938'] = func_2938
mod = relay.transform.InferType()(mod)
mutated_mod['func_2938'] = func_2938
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2939 = relay.var("var_2939", dtype = "int8", shape = (1274,))#candidate|2939|(1274,)|var|int8
func_2938_call = mutated_mod.get_global_var('func_2938')
call_2940 = func_2938_call(var_2939)
output = call_2940
func_2941 = relay.Function([var_2939], output)
mutated_mod['func_2941'] = func_2941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2679_call = mod.get_global_var('func_2679')
func_2681_call = mutated_mod.get_global_var('func_2681')
call_2949 = relay.TupleGetItem(func_2679_call(), 1)
call_2950 = relay.TupleGetItem(func_2681_call(), 1)
func_736_call = mod.get_global_var('func_736')
func_739_call = mutated_mod.get_global_var('func_739')
var_2959 = relay.var("var_2959", dtype = "int8", shape = (1386,))#candidate|2959|(1386,)|var|int8
call_2958 = relay.TupleGetItem(func_736_call(relay.reshape(var_2959.astype('int8'), [9, 11, 14])), 0)
call_2960 = relay.TupleGetItem(func_739_call(relay.reshape(var_2959.astype('int8'), [9, 11, 14])), 0)
output = relay.Tuple([call_2949,call_2958,var_2959,])
output2 = relay.Tuple([call_2950,call_2960,var_2959,])
func_2978 = relay.Function([var_2959,], output)
mod['func_2978'] = func_2978
mod = relay.transform.InferType()(mod)
mutated_mod['func_2978'] = func_2978
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2979 = relay.var("var_2979", dtype = "int8", shape = (1386,))#candidate|2979|(1386,)|var|int8
func_2978_call = mutated_mod.get_global_var('func_2978')
call_2980 = func_2978_call(var_2979)
output = call_2980
func_2981 = relay.Function([var_2979], output)
mutated_mod['func_2981'] = func_2981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2125_call = mod.get_global_var('func_2125')
func_2127_call = mutated_mod.get_global_var('func_2127')
call_3047 = relay.TupleGetItem(func_2125_call(), 0)
call_3048 = relay.TupleGetItem(func_2127_call(), 0)
output = relay.Tuple([call_3047,])
output2 = relay.Tuple([call_3048,])
func_3049 = relay.Function([], output)
mod['func_3049'] = func_3049
mod = relay.transform.InferType()(mod)
mutated_mod['func_3049'] = func_3049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3049_call = mutated_mod.get_global_var('func_3049')
call_3050 = func_3049_call()
output = call_3050
func_3051 = relay.Function([], output)
mutated_mod['func_3051'] = func_3051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_3076 = func_2510_call()
call_3077 = func_2510_call()
func_2308_call = mod.get_global_var('func_2308')
func_2313_call = mutated_mod.get_global_var('func_2313')
const_3079 = relay.const([[-7,-7,5,-7,-1,-1,-7,10,-7,-4,1,-8,1,-3,-9,3,7,4,9,-2,-4,-3,9,8,-10,-2,-4,9,2,-6,-6,-8,-8,-5,-6,9,-2,-2,-8,5,-1,-9,7,-10,2,9,6,1,2,5,2,7,-6,5,7,4,-6,5,-2,2,3,-2,-1,-5,8,10,-1,6,-5,-3,-10,2,-1,1,2,-9,-7,3,5,-10,7,-7,-6,-8,-3,-3,10,-2,4,6,1,2,8,7,-5,-8,-6,3,-9,2,3,-8,-5,-8,4,-7,-1,4,-6,5,-5,-8,-10,-2,3,1,-1],[1,-9,-5,2,9,-2,-5,1,2,2,8,2,-1,6,-10,-2,3,9,6,9,-7,8,9,-1,-7,2,7,7,-6,-3,-2,-9,-6,-2,-2,-8,1,-10,-7,-1,3,10,-7,9,2,2,-7,-8,9,-5,-10,-1,-1,9,-3,-10,6,-8,1,-6,7,6,9,7,3,-1,7,3,-5,3,3,-6,-7,1,10,-2,5,1,3,2,-1,8,6,-3,-4,-9,-2,-7,9,-9,-7,-6,-9,6,8,-8,2,-5,9,-9,6,1,3,9,8,-1,-8,-7,7,-7,-3,1,2,2,-6,6,9],[10,-7,-5,6,10,-4,-1,10,5,-4,9,-4,9,3,10,1,7,-10,3,-10,-1,9,7,-1,-3,9,-3,4,-3,-5,1,4,6,-10,-9,1,7,4,-9,6,-2,-3,-10,-4,4,-5,-7,-2,-10,-1,3,2,10,-1,3,-1,4,7,-3,-6,-2,1,-7,-2,5,9,5,-7,-7,6,-8,4,-2,-6,4,1,3,5,7,1,3,10,-1,-5,-5,-10,-7,-5,-5,-6,-4,-7,1,1,3,1,-1,-4,-10,-5,-7,8,-1,-4,7,-7,7,10,-8,-7,4,-5,-1,-9,7,5,-1],[7,-7,8,1,7,-9,-7,9,-8,-3,7,-3,4,10,-3,2,1,-2,-5,4,2,-10,-2,4,1,-6,-1,5,-10,-3,-8,-4,-6,9,3,1,9,-4,-10,5,-6,-10,-4,10,-3,-9,-8,9,-1,-5,-4,-10,8,5,4,1,-3,-5,-7,-10,-8,1,-4,-1,-1,-9,-3,-7,5,-10,4,-7,4,5,-6,4,-6,3,-5,4,9,8,-4,-4,9,-8,-7,1,8,5,-2,10,-1,-7,7,2,-9,-9,-7,4,9,8,-6,7,6,-9,-8,6,2,-8,7,7,10,8,9,3,3],[-3,-2,-4,10,-7,-2,2,6,-5,7,8,-7,7,8,3,-3,10,-7,-6,-8,7,-7,6,-6,8,-2,-5,5,-5,1,-4,-4,-2,1,-8,-2,-10,4,6,-6,7,1,7,3,-8,-9,9,-7,4,10,6,9,-2,-4,4,3,8,-3,-1,-6,-1,9,10,-10,5,-6,-1,-9,-7,3,2,5,9,6,4,-9,9,-6,6,-1,5,4,-4,3,5,-3,2,-9,-7,1,7,8,-9,-4,10,6,5,-3,2,-10,-10,5,10,2,-9,1,-4,3,-1,8,2,-7,5,-6,4,5,-9],[-5,-4,-8,-2,2,-8,-1,2,2,-5,-3,-9,-9,-6,-8,-5,-6,1,-4,5,-3,1,-1,5,-8,-2,-3,1,5,-4,-2,5,-10,4,-9,9,1,6,-4,-5,3,3,-10,8,2,6,3,-2,8,-6,-6,-1,-7,-6,7,-3,-1,-6,1,-6,-8,-6,4,1,-5,-8,-3,7,7,-1,7,7,-2,-10,-9,-5,9,-5,1,-4,4,-7,-3,7,10,-4,-5,6,6,-2,2,-9,1,3,-3,-6,1,3,10,5,1,-6,2,6,7,2,-5,2,6,-6,2,-7,-9,-10,2,8,5],[-2,7,-7,-3,-6,10,6,3,7,6,-10,-4,-4,6,-2,8,-9,9,1,-5,-4,-7,2,-2,7,5,-3,-10,7,-10,8,-2,-5,5,5,-5,4,7,3,-9,7,10,2,8,-7,-8,-8,-5,1,9,9,-3,9,1,1,-4,3,-10,-5,4,-9,-10,3,10,-5,-10,-4,-9,6,4,-1,6,4,9,-8,-3,5,4,9,4,4,10,10,10,1,-3,-2,-4,-7,-8,-6,-2,4,-3,-1,-1,-4,4,10,7,-9,4,9,10,1,-3,-8,-9,2,-7,10,9,-9,-7,-8,-2,5],[10,4,-4,-7,3,9,-10,-6,3,7,10,-6,6,-1,10,-2,4,2,10,-2,-5,-7,-3,3,8,9,-3,7,10,6,6,2,-6,7,-4,-9,1,5,8,9,6,-6,-2,10,2,1,6,7,8,7,4,-4,-3,-6,-8,9,-2,5,-9,-5,-3,-9,10,2,-2,1,-9,9,-5,-5,2,9,10,-6,-10,-9,7,-3,-6,4,-6,-3,3,6,-1,-3,6,4,7,-6,1,2,-5,-5,-2,10,8,-2,7,9,1,-8,-3,3,-2,-6,6,3,3,-4,-8,2,8,-7,1,3,-7],[9,3,9,-10,-10,-5,10,10,-2,8,4,-9,1,4,-4,-6,2,-4,5,-10,-2,8,2,8,6,-9,4,-9,9,-10,6,-3,-5,1,-1,-7,-5,-7,-2,-10,-10,9,8,8,3,10,2,-10,-10,-7,4,-4,-8,6,5,-10,-7,-7,-7,2,-3,-1,-6,1,6,7,-3,-8,3,3,-10,-10,-10,-1,4,-10,4,9,4,5,2,-9,2,-6,-3,-2,-1,-1,-3,-9,4,1,1,-9,4,7,6,10,5,-5,-6,3,-3,-8,7,-1,-7,10,-4,4,-2,3,7,6,-1,2,9],[-3,-2,-7,8,-9,-2,-4,-9,-4,9,7,-3,10,5,9,1,-6,-7,-1,3,-2,2,-3,6,10,-7,3,-1,1,-9,9,6,-3,8,-8,8,8,-7,9,-10,-1,7,6,9,3,2,7,7,1,-6,6,10,-1,7,-2,-10,-2,9,4,-7,-5,9,7,2,1,8,9,3,6,-4,5,-3,1,-6,9,2,-10,-6,6,4,3,5,9,5,-8,-8,-1,1,-5,6,10,-8,8,-7,9,2,-3,-5,6,2,9,8,-10,-3,-8,9,-7,-8,10,-9,-5,2,-7,2,8,-7,3],[6,-6,10,-8,-10,5,-1,-3,5,-1,-8,7,2,-4,-2,-6,-2,-7,-6,1,-1,-6,-3,-5,7,-7,-4,6,10,7,-9,-10,3,3,-2,7,-1,8,-10,-2,8,-5,-4,8,-3,5,8,-4,1,-2,2,-8,10,4,-8,-10,-6,9,-6,-3,4,2,3,2,-3,-9,-2,5,5,-4,8,1,9,-5,9,-3,-7,-4,10,4,-8,6,2,-4,3,-3,-1,6,-4,-4,-6,-5,-1,3,5,-3,-2,3,-2,-4,4,-5,-10,3,-9,-9,4,-10,-5,8,-2,-10,-2,2,-1,-9,4],[8,-5,9,9,-3,-4,-2,7,6,1,-6,1,6,-4,7,-1,1,-9,1,10,5,-8,10,4,-7,-4,-9,2,-8,-2,-6,1,8,10,10,-7,4,9,-3,2,2,-6,10,8,-6,-3,3,4,6,5,5,-10,-7,3,-3,-1,-10,6,5,-7,6,7,-4,5,4,5,-1,-8,-5,8,7,-3,-6,-4,4,-4,-1,-2,-10,6,-6,-5,9,5,6,10,-3,-10,-3,-10,8,-9,-4,6,7,-10,-7,2,-8,-8,2,-8,2,-6,4,1,-1,-1,-1,-1,-10,-5,-7,1,-6,2,8],[7,-9,2,-10,-5,5,-7,2,-5,8,9,7,-3,-10,2,-6,-5,-1,-10,4,-3,-3,3,8,-8,-10,-4,-9,-1,-1,-7,4,-5,1,-8,-3,3,-1,1,-6,6,8,-4,-6,-7,10,7,6,-10,9,5,1,8,-4,-3,-8,8,-10,4,-9,-6,-5,-2,-7,1,2,-8,1,5,4,8,9,-9,-10,7,-6,-8,-6,-3,5,-8,9,8,-3,7,-2,-1,-1,-2,-5,-10,-1,-1,9,9,9,8,5,-8,-2,-6,-10,-7,-7,-1,7,-3,-8,-5,-10,10,4,-7,-8,7,-8,4]], dtype = "uint16")#candidate|3079|(13, 117)|const|uint16
call_3078 = relay.TupleGetItem(func_2308_call(relay.reshape(const_3079.astype('uint16'), [9, 13, 13]), relay.reshape(const_3079.astype('uint16'), [9, 13, 13]), relay.reshape(call_3076.astype('int8'), [637, 2]), ), 0)
call_3080 = relay.TupleGetItem(func_2313_call(relay.reshape(const_3079.astype('uint16'), [9, 13, 13]), relay.reshape(const_3079.astype('uint16'), [9, 13, 13]), relay.reshape(call_3076.astype('int8'), [637, 2]), ), 0)
func_643_call = mod.get_global_var('func_643')
func_645_call = mutated_mod.get_global_var('func_645')
call_3103 = relay.TupleGetItem(func_643_call(), 0)
call_3104 = relay.TupleGetItem(func_645_call(), 0)
output = relay.Tuple([call_3076,call_3078,const_3079,call_3103,])
output2 = relay.Tuple([call_3077,call_3080,const_3079,call_3104,])
func_3112 = relay.Function([], output)
mod['func_3112'] = func_3112
mod = relay.transform.InferType()(mod)
mutated_mod['func_3112'] = func_3112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3112_call = mutated_mod.get_global_var('func_3112')
call_3113 = func_3112_call()
output = call_3113
func_3114 = relay.Function([], output)
mutated_mod['func_3114'] = func_3114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
call_3115 = relay.TupleGetItem(func_1823_call(), 1)
call_3116 = relay.TupleGetItem(func_1825_call(), 1)
uop_3117 = relay.rsqrt(call_3115.astype('float64')) # shape=(4, 12, 5)
uop_3119 = relay.rsqrt(call_3116.astype('float64')) # shape=(4, 12, 5)
output = uop_3117
output2 = uop_3119
func_3124 = relay.Function([], output)
mod['func_3124'] = func_3124
mod = relay.transform.InferType()(mod)
output = func_3124()
func_3125 = relay.Function([], output)
mutated_mod['func_3125'] = func_3125
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3155 = relay.var("var_3155", dtype = "uint8", shape = (3, 2, 5))#candidate|3155|(3, 2, 5)|var|uint8
var_3156 = relay.var("var_3156", dtype = "uint8", shape = (3, 2, 5))#candidate|3156|(3, 2, 5)|var|uint8
bop_3157 = relay.greater(var_3155.astype('bool'), relay.reshape(var_3156.astype('bool'), relay.shape_of(var_3155))) # shape=(3, 2, 5)
bop_3160 = relay.less(var_3155.astype('bool'), relay.reshape(var_3156.astype('bool'), relay.shape_of(var_3155))) # shape=(3, 2, 5)
output = relay.Tuple([bop_3157,bop_3160,])
output2 = relay.Tuple([bop_3157,bop_3160,])
func_3170 = relay.Function([var_3155,var_3156,], output)
mod['func_3170'] = func_3170
mod = relay.transform.InferType()(mod)
mutated_mod['func_3170'] = func_3170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3170_call = mutated_mod.get_global_var('func_3170')
var_3172 = relay.var("var_3172", dtype = "uint8", shape = (3, 2, 5))#candidate|3172|(3, 2, 5)|var|uint8
var_3173 = relay.var("var_3173", dtype = "uint8", shape = (3, 2, 5))#candidate|3173|(3, 2, 5)|var|uint8
call_3171 = func_3170_call(var_3172,var_3173,)
output = call_3171
func_3174 = relay.Function([var_3172,var_3173,], output)
mutated_mod['func_3174'] = func_3174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_3193 = func_555_call()
call_3194 = func_555_call()
uop_3205 = relay.sigmoid(call_3193.astype('float64')) # shape=(4, 12, 5)
uop_3207 = relay.sigmoid(call_3194.astype('float64')) # shape=(4, 12, 5)
uop_3215 = relay.erf(uop_3205.astype('float64')) # shape=(4, 12, 5)
uop_3217 = relay.erf(uop_3207.astype('float64')) # shape=(4, 12, 5)
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
call_3219 = relay.TupleGetItem(func_1823_call(), 1)
call_3220 = relay.TupleGetItem(func_1825_call(), 1)
bop_3221 = relay.right_shift(call_3219.astype('uint8'), relay.reshape(uop_3205.astype('uint8'), relay.shape_of(call_3219))) # shape=(4, 12, 5)
bop_3224 = relay.right_shift(call_3220.astype('uint8'), relay.reshape(uop_3207.astype('uint8'), relay.shape_of(call_3220))) # shape=(4, 12, 5)
output = relay.Tuple([uop_3215,bop_3221,])
output2 = relay.Tuple([uop_3217,bop_3224,])
func_3227 = relay.Function([], output)
mod['func_3227'] = func_3227
mod = relay.transform.InferType()(mod)
output = func_3227()
func_3228 = relay.Function([], output)
mutated_mod['func_3228'] = func_3228
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3266 = relay.var("var_3266", dtype = "float32", shape = (9, 7, 13))#candidate|3266|(9, 7, 13)|var|float32
uop_3267 = relay.sigmoid(var_3266.astype('float32')) # shape=(9, 7, 13)
output = relay.Tuple([uop_3267,])
output2 = relay.Tuple([uop_3267,])
func_3274 = relay.Function([var_3266,], output)
mod['func_3274'] = func_3274
mod = relay.transform.InferType()(mod)
mutated_mod['func_3274'] = func_3274
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3275 = relay.var("var_3275", dtype = "float32", shape = (9, 7, 13))#candidate|3275|(9, 7, 13)|var|float32
func_3274_call = mutated_mod.get_global_var('func_3274')
call_3276 = func_3274_call(var_3275)
output = call_3276
func_3277 = relay.Function([var_3275], output)
mutated_mod['func_3277'] = func_3277
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3292 = relay.var("var_3292", dtype = "int32", shape = (8, 13, 13))#candidate|3292|(8, 13, 13)|var|int32
const_3293 = relay.const([[[-3,-6,-2,-2,-10,8,1,-7,8,6,-9,-1,-10],[-5,-10,8,-2,6,1,-10,-1,5,2,6,-9,-3],[9,-7,9,-5,4,4,8,-1,10,-1,10,4,-10],[-3,5,9,2,-7,1,9,5,-1,-5,-1,-4,5],[10,9,10,-1,1,-10,-8,-3,-1,4,6,-1,8],[6,-4,-7,8,4,-9,4,-7,-3,3,3,8,10],[-3,-5,-2,-2,-1,3,-6,-9,4,-6,-10,-7,5],[-9,-9,7,9,-10,4,-9,2,6,3,-2,-3,-9],[7,7,5,-5,4,-4,-5,-6,-8,-5,1,8,-9],[10,-1,6,-4,-2,-9,-3,8,-8,4,1,10,-4],[-7,4,5,9,-2,5,-8,-5,1,-9,-5,-1,10],[-3,-8,-3,7,3,1,9,-7,-9,9,-1,2,-1],[-9,-8,-6,1,-5,-9,2,-6,5,6,10,-6,-1]],[[-1,-9,2,7,-6,10,-7,4,9,9,6,-1,-6],[10,-7,-1,6,3,7,-9,-10,-4,3,-4,-1,8],[-7,-10,7,4,-10,4,-4,-5,6,-8,4,5,8],[-10,2,-6,6,-9,7,8,-10,-7,-1,7,-8,-6],[-5,-10,10,-3,7,-1,-7,-3,-6,4,-5,-10,3],[4,2,-4,10,-9,-1,3,2,-10,-6,3,-5,-8],[8,-7,-5,2,2,4,9,2,-8,9,-1,-8,3],[-9,-10,9,4,1,-8,5,-9,1,2,8,-2,-9],[6,-2,-1,-7,7,-9,3,-10,-2,-2,4,9,-9],[-6,-5,-6,2,-2,-10,-6,-9,9,6,5,-2,9],[2,-2,8,-4,4,-8,1,-1,-10,-9,1,-1,5],[5,4,-3,-5,-9,-6,-5,-4,-7,2,-5,7,1],[10,-7,9,2,7,10,-4,-2,-2,1,2,3,7]],[[8,2,4,-3,-8,-10,-6,8,6,6,4,-8,6],[-4,8,6,7,-7,-1,9,-5,-2,5,-8,3,2],[-2,4,-2,8,2,-6,-4,-8,-5,6,6,-2,7],[-6,4,10,8,-7,-4,10,8,5,-1,9,-9,-10],[3,10,2,2,3,5,8,4,6,8,-2,-8,-5],[10,3,1,-2,6,6,-3,2,10,1,-1,-8,2],[9,4,8,10,-4,9,-3,-3,5,-7,5,4,-3],[-2,4,-2,6,9,-10,7,-9,3,3,10,-1,2],[6,3,-3,-4,-10,1,2,10,-8,-7,5,-10,5],[6,-9,-3,6,-6,-10,-7,-7,-6,8,-1,5,5],[10,-8,-5,3,3,-9,-4,10,-7,4,-5,3,8],[-10,-3,-5,-8,10,-9,9,10,3,-5,8,1,-6],[-2,-10,2,-5,2,-8,5,6,-10,8,-3,4,5]],[[9,-1,2,1,-4,-1,8,9,4,3,-7,-4,-4],[7,6,7,-8,10,4,4,-6,8,-6,1,2,1],[10,-6,2,-10,5,-6,8,5,-1,9,-1,3,-6],[9,-2,-7,6,5,-7,8,4,5,10,-1,6,-8],[9,-6,10,2,8,2,-5,3,2,3,5,-6,-7],[-8,9,4,9,-2,7,-9,-3,8,8,1,-3,7],[-4,5,-2,-6,8,10,10,-8,-7,-2,8,10,3],[7,6,8,-7,-1,5,-1,-9,-2,-4,-8,7,-3],[1,-4,-5,-4,5,10,6,-2,-1,4,5,-9,-8],[3,-6,-2,-10,-5,7,7,-3,5,-10,-10,3,1],[2,8,6,7,8,2,6,-6,-9,7,9,1,1],[2,-7,-4,2,1,3,-3,5,-2,3,6,-8,3],[-4,-9,-8,-9,-4,6,-4,6,-2,2,-2,-10,10]],[[-8,6,-10,-8,5,1,-2,6,-1,-2,-2,5,4],[6,-4,-8,9,-4,4,7,1,-5,3,1,-4,2],[-7,-9,6,-5,-6,-5,-8,-1,4,-4,-5,7,10],[1,-1,1,-10,1,8,6,-8,6,-1,-8,6,-7],[-1,-9,2,-7,1,-1,2,6,-7,-3,-5,-2,-7],[-9,-2,-4,-3,-4,-10,-6,-2,-3,2,-4,2,-5],[-8,1,-7,10,1,2,8,-8,10,-1,-4,7,-4],[4,-10,-10,6,-6,6,-2,-4,10,10,-10,2,3],[8,2,10,-7,-3,-9,-2,1,2,4,8,8,2],[10,-3,-1,-2,-4,-7,3,10,10,-8,10,6,8],[8,4,7,-5,9,-3,7,5,10,5,-1,-2,7],[1,-5,-7,-6,-10,-7,3,-1,6,4,1,9,-4],[2,-1,7,2,10,3,-2,-9,10,-4,-8,8,-2]],[[-6,6,3,-5,6,-6,-1,8,4,-9,-9,-3,-9],[-5,-3,-7,-10,-8,-10,1,2,-4,4,9,2,-1],[8,-5,-6,-3,9,-9,-2,6,-9,-7,2,6,-3],[-6,-4,7,-2,8,-3,7,2,1,-3,7,3,5],[-7,-3,-7,-5,-7,-4,5,5,6,9,9,1,8],[6,-1,-7,3,9,1,2,8,-5,1,-2,3,2],[-3,6,10,-5,4,-1,3,6,6,10,-5,7,-6],[-2,10,2,8,9,1,-10,5,9,-1,-2,4,-9],[8,6,4,-2,1,-10,-2,-8,-10,-8,-10,-4,4],[8,-7,-9,-4,8,3,2,4,5,-8,10,1,-6],[-7,-2,6,10,-6,10,-6,-7,10,4,-1,1,10],[-1,9,2,6,6,-3,-7,7,-10,-6,1,6,10],[-4,9,2,7,-5,-9,2,-5,2,-3,-9,-2,-9]],[[9,-8,-3,9,6,-1,-5,1,-9,9,-7,8,-2],[4,10,-6,-9,9,7,-5,1,6,-4,10,-10,-9],[-4,9,-4,9,-8,-6,-1,2,-2,1,-5,-7,-7],[-4,10,6,-2,9,9,3,-4,6,-1,5,5,5],[4,9,-3,-8,8,-6,-10,8,2,9,-10,5,-1],[-7,6,-8,-5,2,2,10,6,2,-10,7,6,10],[-9,7,3,10,-5,-2,7,-10,-7,-1,-6,-1,7],[-8,4,-7,3,6,-10,-7,-5,7,2,1,8,2],[-6,8,-1,-4,-4,-9,-9,-3,9,3,-7,-6,-8],[8,-8,7,3,5,2,10,-4,-1,4,-1,-3,7],[-5,-1,-9,-8,-9,-8,2,10,-5,-10,-9,-2,-6],[-6,-7,9,7,4,8,10,9,-2,3,7,-2,7],[-9,-6,1,-3,6,-2,-3,6,10,-9,-4,-2,-2]],[[-5,3,10,4,-6,-8,5,3,7,-4,5,1,-5],[-6,-3,3,7,-3,-9,-10,2,-3,4,-4,10,-5],[2,-1,-2,3,7,5,-3,8,-5,-6,-8,6,7],[-4,8,3,5,6,-3,7,2,-4,2,8,2,-6],[4,-2,-2,9,-6,-7,-8,-10,-1,-1,-9,-9,-6],[-10,-2,9,-8,9,9,-9,10,-6,10,-7,5,3],[2,-6,-10,7,5,-8,-8,5,4,-10,2,3,6],[-3,10,6,10,10,-10,-4,4,-8,-10,8,4,10],[-8,8,-5,-4,8,8,-3,10,7,8,5,-4,8],[-10,-1,-10,5,2,8,-6,-7,-4,3,4,9,1],[-8,10,-8,8,-3,8,-6,-10,8,3,-2,-6,3],[7,1,-8,5,-5,-10,-10,-3,3,-3,-6,-10,-6],[5,7,3,-10,4,-3,5,9,3,10,-2,-7,-7]]], dtype = "int32")#candidate|3293|(8, 13, 13)|const|int32
bop_3294 = relay.equal(var_3292.astype('bool'), relay.reshape(const_3293.astype('bool'), relay.shape_of(var_3292))) # shape=(8, 13, 13)
bop_3298 = relay.subtract(const_3293.astype('uint16'), relay.reshape(bop_3294.astype('uint16'), relay.shape_of(const_3293))) # shape=(8, 13, 13)
output = relay.Tuple([bop_3298,])
output2 = relay.Tuple([bop_3298,])
func_3307 = relay.Function([var_3292,], output)
mod['func_3307'] = func_3307
mod = relay.transform.InferType()(mod)
var_3308 = relay.var("var_3308", dtype = "int32", shape = (8, 13, 13))#candidate|3308|(8, 13, 13)|var|int32
output = func_3307(var_3308)
func_3309 = relay.Function([var_3308], output)
mutated_mod['func_3309'] = func_3309
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3331 = relay.var("var_3331", dtype = "float32", shape = (4, 1, 4))#candidate|3331|(4, 1, 4)|var|float32
var_3332 = relay.var("var_3332", dtype = "float32", shape = (4, 12, 4))#candidate|3332|(4, 12, 4)|var|float32
bop_3333 = relay.floor_divide(var_3331.astype('float32'), var_3332.astype('float32')) # shape=(4, 12, 4)
func_1423_call = mod.get_global_var('func_1423')
func_1426_call = mutated_mod.get_global_var('func_1426')
var_3337 = relay.var("var_3337", dtype = "float64", shape = (1274,))#candidate|3337|(1274,)|var|float64
call_3336 = relay.TupleGetItem(func_1423_call(relay.reshape(var_3337.astype('float64'), [1274,])), 2)
call_3338 = relay.TupleGetItem(func_1426_call(relay.reshape(var_3337.astype('float64'), [1274,])), 2)
func_785_call = mod.get_global_var('func_785')
func_787_call = mutated_mod.get_global_var('func_787')
call_3339 = relay.TupleGetItem(func_785_call(), 0)
call_3340 = relay.TupleGetItem(func_787_call(), 0)
func_3049_call = mod.get_global_var('func_3049')
func_3051_call = mutated_mod.get_global_var('func_3051')
call_3353 = relay.TupleGetItem(func_3049_call(), 0)
call_3354 = relay.TupleGetItem(func_3051_call(), 0)
func_3124_call = mod.get_global_var('func_3124')
func_3125_call = mutated_mod.get_global_var('func_3125')
call_3360 = func_3124_call()
call_3361 = func_3124_call()
output = relay.Tuple([bop_3333,call_3336,var_3337,call_3339,call_3353,call_3360,])
output2 = relay.Tuple([bop_3333,call_3338,var_3337,call_3340,call_3354,call_3361,])
func_3372 = relay.Function([var_3331,var_3332,var_3337,], output)
mod['func_3372'] = func_3372
mod = relay.transform.InferType()(mod)
mutated_mod['func_3372'] = func_3372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3372_call = mutated_mod.get_global_var('func_3372')
var_3374 = relay.var("var_3374", dtype = "float32", shape = (4, 1, 4))#candidate|3374|(4, 1, 4)|var|float32
var_3375 = relay.var("var_3375", dtype = "float32", shape = (4, 12, 4))#candidate|3375|(4, 12, 4)|var|float32
var_3376 = relay.var("var_3376", dtype = "float64", shape = (1274,))#candidate|3376|(1274,)|var|float64
call_3373 = func_3372_call(var_3374,var_3375,var_3376,)
output = call_3373
func_3377 = relay.Function([var_3374,var_3375,var_3376,], output)
mutated_mod['func_3377'] = func_3377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_568_call = mod.get_global_var('func_568')
func_569_call = mutated_mod.get_global_var('func_569')
call_3396 = relay.TupleGetItem(func_568_call(), 1)
call_3397 = relay.TupleGetItem(func_569_call(), 1)
func_736_call = mod.get_global_var('func_736')
func_739_call = mutated_mod.get_global_var('func_739')
var_3403 = relay.var("var_3403", dtype = "int8", shape = (154, 9))#candidate|3403|(154, 9)|var|int8
call_3402 = relay.TupleGetItem(func_736_call(relay.reshape(var_3403.astype('int8'), [9, 11, 14])), 0)
call_3404 = relay.TupleGetItem(func_739_call(relay.reshape(var_3403.astype('int8'), [9, 11, 14])), 0)
output = relay.Tuple([call_3396,call_3402,var_3403,])
output2 = relay.Tuple([call_3397,call_3404,var_3403,])
func_3406 = relay.Function([var_3403,], output)
mod['func_3406'] = func_3406
mod = relay.transform.InferType()(mod)
var_3407 = relay.var("var_3407", dtype = "int8", shape = (154, 9))#candidate|3407|(154, 9)|var|int8
output = func_3406(var_3407)
func_3408 = relay.Function([var_3407], output)
mutated_mod['func_3408'] = func_3408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2003_call = mod.get_global_var('func_2003')
func_2005_call = mutated_mod.get_global_var('func_2005')
call_3441 = relay.TupleGetItem(func_2003_call(), 1)
call_3442 = relay.TupleGetItem(func_2005_call(), 1)
output = relay.Tuple([call_3441,])
output2 = relay.Tuple([call_3442,])
func_3450 = relay.Function([], output)
mod['func_3450'] = func_3450
mod = relay.transform.InferType()(mod)
output = func_3450()
func_3451 = relay.Function([], output)
mutated_mod['func_3451'] = func_3451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2796_call = mod.get_global_var('func_2796')
func_2797_call = mutated_mod.get_global_var('func_2797')
call_3458 = relay.TupleGetItem(func_2796_call(), 1)
call_3459 = relay.TupleGetItem(func_2797_call(), 1)
var_3460 = relay.var("var_3460", dtype = "bool", shape = (1274,))#candidate|3460|(1274,)|var|bool
bop_3461 = relay.divide(call_3458.astype('float64'), relay.reshape(var_3460.astype('float64'), relay.shape_of(call_3458))) # shape=(1274,)
bop_3464 = relay.divide(call_3459.astype('float64'), relay.reshape(var_3460.astype('float64'), relay.shape_of(call_3459))) # shape=(1274,)
func_568_call = mod.get_global_var('func_568')
func_569_call = mutated_mod.get_global_var('func_569')
call_3471 = relay.TupleGetItem(func_568_call(), 1)
call_3472 = relay.TupleGetItem(func_569_call(), 1)
func_3227_call = mod.get_global_var('func_3227')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_3477 = relay.TupleGetItem(func_3227_call(), 1)
call_3478 = relay.TupleGetItem(func_3228_call(), 1)
func_2319_call = mod.get_global_var('func_2319')
func_2320_call = mutated_mod.get_global_var('func_2320')
call_3495 = relay.TupleGetItem(func_2319_call(), 0)
call_3496 = relay.TupleGetItem(func_2320_call(), 0)
output = relay.Tuple([bop_3461,call_3471,call_3477,call_3495,])
output2 = relay.Tuple([bop_3464,call_3472,call_3478,call_3496,])
func_3498 = relay.Function([var_3460,], output)
mod['func_3498'] = func_3498
mod = relay.transform.InferType()(mod)
var_3499 = relay.var("var_3499", dtype = "bool", shape = (1274,))#candidate|3499|(1274,)|var|bool
output = func_3498(var_3499)
func_3500 = relay.Function([var_3499], output)
mutated_mod['func_3500'] = func_3500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1613_call = mod.get_global_var('func_1613')
func_1614_call = mutated_mod.get_global_var('func_1614')
call_3510 = func_1613_call()
call_3511 = func_1613_call()
func_2308_call = mod.get_global_var('func_2308')
func_2313_call = mutated_mod.get_global_var('func_2313')
const_3517 = relay.const([5,-9,-9,-9,2,-10,-2,-4,-5,3,7,-5,6,2,-7,-5,-6,3,-9,2,2,2,2,-2,-4,-8,2,2,3,-8,-2,5,7,-5,-2,10,6,9,9,6,-6,-4,10,-6,9,-5,7,1,8,10,3,-6,-3,-1,-6,-6,5,-1,-6,-8,-1,8,-1,-9,6,-10,1,-2,-9,-5,-3,-9,2,3,-7,5,-4,-3,5,-5,-3,-2,9,7,10,-6,4,1,-5,6,-5,-1,5,3,8,-10,3,5,7,-1,-5,-8,-2,7,-3,-1,-3,7,-6,7,-10,-5,9,4,-4,-1,-4,2,-1,-5,-1,3,1,-3,2,-3,6,-5,9,-1,6,4,2,-10,-4,-7,3,2,-4,3,4,10,7,5,7,-9,-7,-5,-10,3,-9,-2,4,10,-8,4,10,-3,9,3,5,9,8,2,10,-1,-10,3,6,10,6,-7,7,-5,10,-2,-1,-7,-6,6,-8,5,9,-10,3,10,-5,8,-7,-10,-3,3,3,5,-1,-5,8,-7,-10,-4,8,-2,9,6,-5,4,-9,3,7,1,-7,-6,-6,1,-9,-7,-9,1,3,5,-4,-7,7,2,8,-1,8,9,2,10,-7,10,7,3,9,-7,6,-3,-4,9,8,6,-9,2,6,-5,-8,-8,-4,-5,8,5,6,9,3,-1,-7,-9,-1,-10,-4,10,7,6,-9,-6,5,-5,9,4,-1,5,1,6,6,8,10,1,-6,-1,-2,-5,8,1,-3,9,9,4,9,-1,-6,4,-7,-5,4,1,3,-4,-4,-8,7,1,-3,-5,4,9,6,-8,-10,9,9,1,-6,2,-7,8,-10,-1,3,9,-5,1,-2,6,2,-6,-5,-2,10,-10,-4,5,7,-1,4,-10,-8,10,-8,10,2,-2,2,6,7,3,4,9,3,-2,10,6,10,8,4,9,-5,-5,-6,1,8,-5,1,4,6,9,-5,-3,-4,-5,8,-6,-7,-2,-3,6,-8,-6,7,-2,-5,8,-7,6,-4,2,7,7,-1,8,-3,-7,-7,1,-2,-6,4,-6,-7,-4,5,2,-4,-7,9,10,2,-4,-10,-5,-10,9,7,4,-8,-4,4,5,7,2,-9,-8,2,2,-9,-4,7,2,9,-7,-6,-1,9,8,-10,-9,-5,-10,1,8,-6,-8,6,-7,5,1,9,10,8,1,8,-6,7,9,7,-7,-8,8,-4,-8,-2,-10,2,6,-10,9,9,3,3,-5,9,-5,-6,2,9,10,-10,-2,-10,6,7,8,-3,1,2,8,7,-8,-6,4,-2,-9,-3,-7,-9,-5,-10,-2,5,-9,-9,-8,-10,-1,9,-4,-8,-3,3,-7,5,-1,-4,-8,-8,6,3,4,-2,-10,10,2,-6,-10,7,5,9,4,3,-2,8,8,6,3,-7,-1,-8,5,-9,4,2,5,9,5,-1,3,-9,-1,3,2,-10,6,-7,-1,-8,10,8,1,7,9,5,9,3,8,5,-5,-3,10,-4,6,-8,1,-2,-1,-8,-6,2,-6,3,-10,-6,-3,8,8,-6,5,1,-8,-8,-9,-1,1,8,10,-3,-4,-7,-7,2,-10,-2,-2,1,-5,1,7,-8,-9,10,-2,2,-4,-2,-8,8,3,-3,4,-7,2,4,-1,-10,1,-2,4,10,4,9,-8,-2,-1,-8,-6,4,10,-7,-10,-3,-6,-5,-8,-8,-9,-6,6,-8,10,1,-10,4,-3,-2,8,4,-8,-6,-6,-9,-3,-1,-3,-5,-6,9,-3,7,3,-9,-5,-5,-3,-9,5,-5,-5,7,-9,2,-1,1,-3,-10,-8,-5,1,5,-1,7,6,-4,10,10,-6,-5,3,-2,6,1,8,-8,6,-5,10,4,-3,9,-4,3,3,-8,7,3,2,1,1,-1,3,-5,7,10,-2,5,2,-7,-9,-3,4,2,-9,-6,-2,-7,-2,-9,6,10,10,3,3,-9,6,9,-8,-8,5,7,-2,2,1,-4,3,-4,-9,-7,8,7,9,-5,-8,-4,-6,10,-9,1,-6,-4,9,5,6,2,-9,-9,-4,5,-5,5,-10,-9,-1,-9,-5,7,-3,-4,6,5,5,-4,-8,3,6,7,4,6,-8,2,10,-9,-4,3,9,5,-4,6,-6,7,6,-1,-10,8,4,1,-1,-6,-3,5,7,-9,9,-2,4,-8,-1,-5,-7,-1,2,2,4,10,-5,1,-7,2,6,2,1,-2,-8,-7,9,4,2,7,-4,-1,-6,-2,5,-8,7,-2,-9,-5,3,-3,-10,6,-5,-5,-9,-9,-1,7,-6,-8,6,-3,8,3,-8,6,3,7,2,-6,-10,-8,-5,-8,4,4,-8,5,5,-7,-2,10,-4,1,10,-9,-2,3,3,-8,7,-7,1,1,7,8,3,-5,6,3,5,8,8,-7,-3,10,-9,5,6,-5,-5,2,-10,5,3,3,9,-7,5,9,-9,9,5,-9,1,-4,6,8,-3,1,2,-5,-7,9,-4,-1,-9,-2,-4,5,-4,6,5,5,7,-3,2,-10,-10,-1,9,-7,2,-3,10,-4,7,4,1,9,7,-7,-1,6,-3,-6,-10,-1,2,-9,-1,9,-2,-9,4,1,1,-8,2,-4,4,-9,2,-7,5,-9,10,2,4,-4,-1,-10,2,7,-6,1,2,4,-2,-10,-8,3,8,-9,9,1,-8,-4,-10,4,-3,-6,7,-9,-3,-7,-8,1,6,-8,-3,6,-9,10,3,-5,-9,3,3,6,-1,-8,-3,-6,-9,5,1,-3,-4,-10,-9,7,-8,-3,-2,-4,1,-3,1,3,-2,-3,-2,5,-3,4,4,7,2,10,10,7,7,6,-7,-9,-7,-4,-1,4,-6,6,-10,9,-5,-5,4,-6,10,-9,9,6,2,-5,-8,9,-7,-5,7,10,4,7,-7,-9,5,4,7,1,9,-4,-5,3,9,-1,-2,8,-6,4,-10,-10,2,-10,-3,10,-7,9,1,-3,9,-5,-5,-7,-2,4,-5,-6,8,5,8,-1,2,-6,1,-3,3,1,3,-9,-8,-6,7,9,-1,-5,2,6,8,-8,1,-9,-1,2,-8,-10,2,-1,-1,4,-7,-1,-7,-6,8,3,-7,-6,5,-4,-9,-1,-2,1,5,5,6,-10,4,-7,-1,-4,5,7,-9,2,3,8,8,-7,5,-2,10,4,-9,6,1,8,-1,-3,4,-8,-1,-2,-8,-9,-3,-3,-4,-6,-8,-2,-4,5,5,-8,3,8,4,2,-1,4,1,-8,6,7,8,-3,2,-10,5,-8,3,4,-7,7,7,-3,-9,-3,-7,-1,2,7,-3,4,4,10,-9,-5,1,4,3,6,8,-9,10,10,-5,5,-4,7,1,5,2,-6,-2,-2,-6,9,8,1,-9,7,9,-3,2,-3,7,-3,-10,3,7,-6,-4,1,4,-7,4,-10,-5,-8,-3,10,-2,9,1,-3,7,-3,4,-10,-5,-5,8,-2,8,-2,4,1,4,-8,-3,-5,-10,-9,2,5,4,-4,7,9,-9,-6,-4,9,-8,5,7,2,-8,-2,-8,-6,8,9,8,-1,-9,-10,-8,1,5,9,-5,7,-10,4,5,4,-1,-1,1,8,2,4,-6,-6,-4,2,4,5,-8,3,10,-9,2,-2,3,-4,-7,-3,-5,5,-3,-9,6,-2,4,2,-5,-4,2,-10,7,9,4,10,-2,1,2,6,-5,-4,6,-2,6,7,-4,-4,3,-7,-7,8,-2,7,-10,-3,3,-5,-3,1,-5,-9,7,1,7,7,-7,-3,6,4,-5,3,4,9,5,9,8,2,-3,5,5,4,-1,-2,9,2,-2,-3,5,4,-2,1,-2,5,-7,5,-4,-3,-8,-1,10,-2,-10,-9,-9,-4,-5,-10,9,-2,8,8,6,9,6,-10,7,9,9,4,-10,-10,5,-1,7,-3,-9,-7,10,-9,-7,-3,3,2,9,-1,-6,3,10,8,-7,10,-9,3,4,8,-10,-6,2,-4,-5,1,3,3,-9,-1,-1,4,-10,1,-8,-7,-9,-3], dtype = "uint16")#candidate|3517|(1521,)|const|uint16
call_3516 = relay.TupleGetItem(func_2308_call(relay.reshape(const_3517.astype('uint16'), [9, 13, 13]), relay.reshape(const_3517.astype('uint16'), [9, 13, 13]), relay.reshape(call_3510.astype('int8'), [637, 2]), ), 0)
call_3518 = relay.TupleGetItem(func_2313_call(relay.reshape(const_3517.astype('uint16'), [9, 13, 13]), relay.reshape(const_3517.astype('uint16'), [9, 13, 13]), relay.reshape(call_3510.astype('int8'), [637, 2]), ), 0)
func_643_call = mod.get_global_var('func_643')
func_645_call = mutated_mod.get_global_var('func_645')
call_3519 = relay.TupleGetItem(func_643_call(), 0)
call_3520 = relay.TupleGetItem(func_645_call(), 0)
output = relay.Tuple([call_3510,call_3516,const_3517,call_3519,])
output2 = relay.Tuple([call_3511,call_3518,const_3517,call_3520,])
func_3521 = relay.Function([], output)
mod['func_3521'] = func_3521
mod = relay.transform.InferType()(mod)
mutated_mod['func_3521'] = func_3521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3521_call = mutated_mod.get_global_var('func_3521')
call_3522 = func_3521_call()
output = call_3522
func_3523 = relay.Function([], output)
mutated_mod['func_3523'] = func_3523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_397_call = mod.get_global_var('func_397')
func_398_call = mutated_mod.get_global_var('func_398')
call_3540 = func_397_call()
call_3541 = func_397_call()
uop_3560 = relay.sinh(call_3540.astype('float32')) # shape=(1274,)
uop_3562 = relay.sinh(call_3541.astype('float32')) # shape=(1274,)
output = uop_3560
output2 = uop_3562
func_3574 = relay.Function([], output)
mod['func_3574'] = func_3574
mod = relay.transform.InferType()(mod)
mutated_mod['func_3574'] = func_3574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3574_call = mutated_mod.get_global_var('func_3574')
call_3575 = func_3574_call()
output = call_3575
func_3576 = relay.Function([], output)
mutated_mod['func_3576'] = func_3576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_568_call = mod.get_global_var('func_568')
func_569_call = mutated_mod.get_global_var('func_569')
call_3584 = relay.TupleGetItem(func_568_call(), 1)
call_3585 = relay.TupleGetItem(func_569_call(), 1)
output = relay.Tuple([call_3584,])
output2 = relay.Tuple([call_3585,])
func_3598 = relay.Function([], output)
mod['func_3598'] = func_3598
mod = relay.transform.InferType()(mod)
mutated_mod['func_3598'] = func_3598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3598_call = mutated_mod.get_global_var('func_3598')
call_3599 = func_3598_call()
output = call_3599
func_3600 = relay.Function([], output)
mutated_mod['func_3600'] = func_3600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3049_call = mod.get_global_var('func_3049')
func_3051_call = mutated_mod.get_global_var('func_3051')
call_3609 = relay.TupleGetItem(func_3049_call(), 0)
call_3610 = relay.TupleGetItem(func_3051_call(), 0)
output = relay.Tuple([call_3609,])
output2 = relay.Tuple([call_3610,])
func_3611 = relay.Function([], output)
mod['func_3611'] = func_3611
mod = relay.transform.InferType()(mod)
mutated_mod['func_3611'] = func_3611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3611_call = mutated_mod.get_global_var('func_3611')
call_3612 = func_3611_call()
output = call_3612
func_3613 = relay.Function([], output)
mutated_mod['func_3613'] = func_3613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_384_call = mod.get_global_var('func_384')
func_386_call = mutated_mod.get_global_var('func_386')
call_3648 = func_384_call()
call_3649 = func_384_call()
func_397_call = mod.get_global_var('func_397')
func_398_call = mutated_mod.get_global_var('func_398')
call_3669 = func_397_call()
call_3670 = func_397_call()
output = relay.Tuple([call_3648,call_3669,])
output2 = relay.Tuple([call_3649,call_3670,])
func_3690 = relay.Function([], output)
mod['func_3690'] = func_3690
mod = relay.transform.InferType()(mod)
output = func_3690()
func_3691 = relay.Function([], output)
mutated_mod['func_3691'] = func_3691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2410_call = mod.get_global_var('func_2410')
func_2412_call = mutated_mod.get_global_var('func_2412')
call_3697 = relay.TupleGetItem(func_2410_call(), 1)
call_3698 = relay.TupleGetItem(func_2412_call(), 1)
output = relay.Tuple([call_3697,])
output2 = relay.Tuple([call_3698,])
func_3703 = relay.Function([], output)
mod['func_3703'] = func_3703
mod = relay.transform.InferType()(mod)
output = func_3703()
func_3704 = relay.Function([], output)
mutated_mod['func_3704'] = func_3704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1199_call = mod.get_global_var('func_1199')
func_1200_call = mutated_mod.get_global_var('func_1200')
call_3725 = relay.TupleGetItem(func_1199_call(), 0)
call_3726 = relay.TupleGetItem(func_1200_call(), 0)
output = call_3725
output2 = call_3726
func_3734 = relay.Function([], output)
mod['func_3734'] = func_3734
mod = relay.transform.InferType()(mod)
output = func_3734()
func_3735 = relay.Function([], output)
mutated_mod['func_3735'] = func_3735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2747_call = mod.get_global_var('func_2747')
func_2748_call = mutated_mod.get_global_var('func_2748')
call_3787 = relay.TupleGetItem(func_2747_call(), 1)
call_3788 = relay.TupleGetItem(func_2748_call(), 1)
func_2308_call = mod.get_global_var('func_2308')
func_2313_call = mutated_mod.get_global_var('func_2313')
const_3792 = relay.const([-8,10,2,1,-5,1,-9,-4,-1,-3,-10,-1,2,-3,9,8,6,5,-3,8,-3,6,9,7,6,4,-5,-6,-4,1,-5,-3,8,9,-4,-9,-5,9,7,-5,7,9,-2,-9,6,-2,-9,-3,2,-8,10,-5,2,-8,1,-4,-3,-10,-9,-3,-9,7,-9,6,-6,-10,-10,1,1,3,-5,2,-9,2,5,3,10,3,2,-3,-2,3,7,7,3,4,6,-5,2,3,3,-1,-5,4,-2,4,-9,-7,2,8,4,3,-10,5,6,-9,-3,5,5,-5,-6,4,-9,4,4,7,4,10,-8,5,-4,-4,7,6,9,-10,4,2,4,5,10,8,3,9,4,5,10,-6,9,8,7,2,-1,-5,2,5,-3,7,2,7,-4,5,-2,-1,-6,8,9,5,6,-7,3,2,6,9,-9,-3,9,-5,10,1,-6,-1,8,-5,7,5,-3,-5,-8,8,-3,8,-10,2,-10,-7,-1,-9,4,5,7,3,-5,-10,5,10,-8,9,-3,9,-5,10,-5,-8,5,4,1,2,6,-1,-10,8,-1,-6,-9,8,1,3,-6,-9,-2,5,-8,1,8,6,7,4,10,-2,4,4,-7,5,6,6,-5,-3,-7,9,-10,-1,-9,-3,-6,-10,5,10,-1,-5,9,6,4,8,-6,7,2,-1,5,-9,-10,-3,-1,7,8,-10,5,10,5,-1,3,-7,5,5,3,-1,1,8,-9,-7,-6,3,-2,1,10,-10,-7,9,8,-2,-8,-4,8,-2,-4,3,5,-1,6,-6,-5,9,-7,6,2,6,10,8,1,-5,10,-7,2,4,4,-6,10,1,-6,3,-4,10,9,5,10,7,8,9,-3,-1,4,-6,-5,-4,-5,-2,3,6,-10,4,-1,-3,6,-8,-4,-8,8,-5,-10,-5,3,5,-9,-10,9,10,6,8,3,10,7,-6,-1,-10,-7,7,4,7,-2,2,-4,3,6,-1,7,8,9,-1,-4,-3,-7,2,4,-5,-10,-10,-1,-2,4,8,7,9,2,8,10,9,-4,9,4,-6,2,7,-1,-2,4,-8,8,7,-7,5,8,5,7,-10,7,-5,4,-10,-5,-7,2,2,-3,9,-5,7,8,-5,-5,8,-1,-9,-9,9,3,4,3,5,-4,8,-7,-3,9,2,3,6,-4,-10,-5,-6,-4,4,-4,-5,-3,10,-10,-7,-10,-2,10,8,2,7,-6,-4,3,10,-6,8,10,1,10,8,8,5,-8,4,-1,-7,-5,-9,-10,-8,6,6,-3,-5,-7,-4,-4,5,-2,-2,-3,3,-2,8,3,-8,9,6,-3,8,-5,4,-1,-3,-9,7,-6,10,3,9,4,-7,-1,7,-6,-1,7,-2,6,3,-10,7,-3,5,-5,-3,2,-3,5,-7,5,5,5,2,3,-7,6,-3,1,4,-10,6,-9,5,9,8,-1,-7,10,-8,-5,-10,-6,-9,-8,-2,1,2,-7,5,-8,1,8,6,7,3,-6,4,-7,-9,-5,-5,1,8,4,-5,10,2,3,-6,-1,-4,-5,8,-1,-6,8,-5,-1,-6,-10,-9,-6,-8,10,-1,4,-7,4,-10,-2,3,2,-10,3,-9,-8,3,3,3,5,6,1,-10,-1,-2,-9,-7,-5,3,3,-2,2,5,7,1,-3,-3,4,-1,-6,-10,-10,-7,3,4,3,9,1,3,1,10,-4,-10,8,3,-4,8,-9,-10,6,8,-10,-7,10,-7,-7,-5,-3,9,-6,-5,7,-6,-10,-9,-2,6,-4,1,2,-3,8,-9,-4,-2,1,3,-3,-4,-7,9,-10,1,7,-5,1,-7,-9,2,5,4,-1,5,5,-7,2,4,-1,5,-7,7,2,1,-2,-5,-6,4,5,9,9,-6,2,-5,5,2,-10,-3,5,-4,-6,-6,7,10,-1,5,7,-3,1,3,-7,9,-6,-2,8,-9,-4,-7,-7,4,-5,8,-8,10,-8,-7,-2,2,9,-10,-9,-1,4,-3,-4,8,6,1,6,5,-8,7,-9,7,-5,6,6,7,7,2,9,-3,6,10,7,4,-6,-7,-1,2,9,-2,-5,-4,10,-6,-6,5,2,1,-9,-7,7,-1,-8,4,2,4,-4,-2,6,5,-4,3,-6,-5,1,-3,6,7,-8,1,9,-7,-6,9,-4,4,-7,-4,-3,-1,1,-5,9,-10,6,-4,9,-8,-10,-6,1,2,7,2,-5,6,-8,-2,6,-1,5,5,-9,-10,-8,-1,4,-9,-9,1,-6,9,-10,1,3,8,9,4,6,7,10,-5,3,-5,6,8,5,-8,-8,-2,-2,9,-4,9,8,-4,-6,-3,4,3,6,-2,9,-7,-8,8,-1,-1,-3,-5,-8,9,9,-1,10,2,5,6,-5,-3,-3,-5,9,9,8,-2,4,-8,-1,-5,5,6,3,-6,-6,5,1,4,-6,3,-9,-10,-6,4,-9,10,-8,6,10,-2,-4,-8,5,-4,-6,-4,-1,6,3,5,-10,-10,3,10,9,-10,8,-7,-1,-5,7,2,6,-5,9,-4,5,9,-9,1,-2,-2,-10,-3,-9,6,2,6,-7,8,1,6,6,-5,-4,-3,-9,7,6,-10,2,3,-5,1,-1,7,1,-9,-1,-1,3,3,1,-1,2,3,9,-6,-6,6,6,-1,-9,5,7,4,10,-1,-7,-9,6,-3,-8,9,7,-3,-9,1,7,7,-10,5,10,2,-10,6,-10,1,9,-4,-5,9,-5,1,6,7,1,-7,-8,8,-9,6,-5,-9,-8,1,4,-7,-2,-1,6,-8,8,6,4,7,-10,5,1,10,-9,-3,4,-9,8,-7,-8,1,-10,-3,3,-10,-3,10,8,-3,2,-7,-4,3,8,6,4,-1,8,-9,-4,-6,3,-10,6,8,-7,-4,-5,5,-6,-9,-10,-3,4,1,-2,-6,-3,-9,-10,-8,-4,-10,-7,4,5,4,-4,6,-2,8,4,-10,-10,7,-6,9,-5,-2,-3,8,10,5,-10,3,-8,5,-7,-2,-5,-9,3,-4,-6,-5,-3,-6,4,8,-4,5,6,-7,-6,-9,7,-2,5,-1,2,-1,8,9,-1,-7,10,9,3,-8,-5,9,-7,4,-9,-7,10,8,-5,1,4,3,1,9,-9,4,5,8,8,-8,-7,-8,2,5,2,5,4,-9,1,-1,-6,8,10,-5,-8,-3,-9,1,8,-9,2,6,4,-2,-3,9,8,1,1,-4,1,5,-10,-9,2,9,-2,1,8,2,6,1,7,10,9,1,3,8,-2,-2,-5,-10,5,6,7,-9,9,7,-1,6,-2,10,2,-9,-4,-1,-3,7,-4,-5,1,4,-3,6,1,-4,10,10,-1,-6,-1,2,-8,4,-4,-5,-3,2,1,8,1,-6,-7,3,-5,-10,8,2,3,-7,7,1,-10,-3,-3,4,-6,-7,5,10,-10,8,-4,-1,-8,-5,2,-4,9,7,8,-7,2,-7,3,8,-8,9,-9,-1,3,-4,2,-1,-5,2,-10,10,-3,8,6,9,-4,-8,-1,2,4,10,5,-4,10,8,7,1,-6,-5,-4,-6,5,3,-10,-1,-2,10,-2,10,2,-3,5,-10,2,-1,2,-7,1,2,-5,-6,3,4,10,-9,-1,3,6,-5,3,-7,5,-1,-3,8,7,5,-9,7,-5,4,-1,-2,-2,-7,4,9,9,-4,4,-10,-5,3,6,-5,-6,-4,6,4,-2,-5,7,6,6,8,-1,3,3,-1,-3,7,5,-6,9,1,3,8,7,-5,3,5,2,-3,3,4,-2,7,6,8,-5,7,-2,7,-10,-4,-6,10,-6,-2,6,-5,9,-6,5,-10,-5,-8,5,-8,-8,9,-3,9,-9,8,-9,6,5,4,-9,10,-3,-1,-6,5,-3,-9,1,-6,10,-8,7,6,-9,1,5,10,-4,8,1,-5,6,-3,-1,-9,-4,-10,2,-2,6,-7,-7,-1,-9,10,-4,4,-10,-9,5,3,-5,-2,-1,-8,-8,-10,-3,5,-3,9,3], dtype = "uint16")#candidate|3792|(1521,)|const|uint16
call_3791 = relay.TupleGetItem(func_2308_call(relay.reshape(const_3792.astype('uint16'), [9, 13, 13]), relay.reshape(const_3792.astype('uint16'), [9, 13, 13]), relay.reshape(call_3787.astype('int8'), [637, 2]), ), 2)
call_3793 = relay.TupleGetItem(func_2313_call(relay.reshape(const_3792.astype('uint16'), [9, 13, 13]), relay.reshape(const_3792.astype('uint16'), [9, 13, 13]), relay.reshape(call_3787.astype('int8'), [637, 2]), ), 2)
bop_3796 = relay.less_equal(const_3792.astype('bool'), call_3791.astype('bool')) # shape=(1521,)
bop_3799 = relay.less_equal(const_3792.astype('bool'), call_3793.astype('bool')) # shape=(1521,)
output = relay.Tuple([call_3787,bop_3796,])
output2 = relay.Tuple([call_3788,bop_3799,])
func_3801 = relay.Function([], output)
mod['func_3801'] = func_3801
mod = relay.transform.InferType()(mod)
mutated_mod['func_3801'] = func_3801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3801_call = mutated_mod.get_global_var('func_3801')
call_3802 = func_3801_call()
output = call_3802
func_3803 = relay.Function([], output)
mutated_mod['func_3803'] = func_3803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_874_call = mod.get_global_var('func_874')
func_875_call = mutated_mod.get_global_var('func_875')
call_3817 = relay.TupleGetItem(func_874_call(), 0)
call_3818 = relay.TupleGetItem(func_875_call(), 0)
func_2319_call = mod.get_global_var('func_2319')
func_2320_call = mutated_mod.get_global_var('func_2320')
call_3854 = relay.TupleGetItem(func_2319_call(), 0)
call_3855 = relay.TupleGetItem(func_2320_call(), 0)
func_3690_call = mod.get_global_var('func_3690')
func_3691_call = mutated_mod.get_global_var('func_3691')
call_3864 = relay.TupleGetItem(func_3690_call(), 1)
call_3865 = relay.TupleGetItem(func_3691_call(), 1)
func_2410_call = mod.get_global_var('func_2410')
func_2412_call = mutated_mod.get_global_var('func_2412')
call_3870 = relay.TupleGetItem(func_2410_call(), 2)
call_3871 = relay.TupleGetItem(func_2412_call(), 2)
uop_3874 = relay.cos(call_3854.astype('float64')) # shape=(1274,)
uop_3876 = relay.cos(call_3855.astype('float64')) # shape=(1274,)
func_1796_call = mod.get_global_var('func_1796')
func_1798_call = mutated_mod.get_global_var('func_1798')
var_3892 = relay.var("var_3892", dtype = "float64", shape = (1456,))#candidate|3892|(1456,)|var|float64
call_3891 = relay.TupleGetItem(func_1796_call(relay.reshape(var_3892.astype('float64'), [1456,])), 3)
call_3893 = relay.TupleGetItem(func_1798_call(relay.reshape(var_3892.astype('float64'), [1456,])), 3)
var_3904 = relay.var("var_3904", dtype = "uint16", shape = (169, 9))#candidate|3904|(169, 9)|var|uint16
bop_3905 = relay.add(call_3870.astype('uint8'), relay.reshape(var_3904.astype('uint8'), relay.shape_of(call_3870))) # shape=(169, 9)
bop_3908 = relay.add(call_3871.astype('uint8'), relay.reshape(var_3904.astype('uint8'), relay.shape_of(call_3871))) # shape=(169, 9)
func_3307_call = mod.get_global_var('func_3307')
func_3309_call = mutated_mod.get_global_var('func_3309')
const_3919 = relay.const([-3,-3,9,8,-10,10,7,-8,1,-6,-5,-1,-6,5,-3,5,9,8,-4,9,7,9,9,-6,-5,7,7,-4,9,10,-10,-9,-2,8,3,10,-7,4,8,-8,4,-4,-3,5,-8,7,1,8,5,9,-3,8,10,8,3,3,-1,-10,5,-8,2,10,3,7,4,-6,7,-9,-7,6,-2,9,6,-8,7,-4,5,-2,-2,8,9,6,-9,4,1,6,-9,-7,-8,-5,-4,6,3,-8,9,2,10,-3,-5,5,-6,-1,9,7,-6,-2,1,10,6,-10,5,-2,-2,-6,-1,-2,3,10,-3,9,1,-8,9,-8,-7,1,-2,9,-9,8,-5,9,-6,-9,-7,-6,10,-3,-3,6,-9,4,-2,-5,7,3,6,9,2,-10,-4,9,10,3,-3,5,-5,-3,-3,8,-2,1,4,1,-8,6,7,6,-7,3,7,4,-1,9,-7,-4,-9,-8,-5,-6,10,-4,7,-4,-8,-8,9,9,1,1,-4,-7,-2,-5,-4,1,-2,10,-7,-8,5,2,-8,-3,-8,4,-1,-4,-6,9,9,-5,-5,4,1,-6,8,10,8,2,10,-9,-7,-4,-3,4,-3,5,-3,-1,-3,-3,-7,-4,8,3,3,9,-7,4,5,2,-6,7,7,6,-9,10,3,2,-1,-9,9,6,-10,3,-10,-3,-3,-8,10,-2,-4,-4,-6,10,3,2,9,7,-10,-3,5,-9,-8,-1,-2,7,5,4,-8,-9,-4,-3,10,-10,-10,3,1,-6,-10,7,-9,-9,-6,4,-5,-4,-7,-2,9,-9,7,6,5,-6,8,6,-8,10,6,-7,-8,-2,2,-1,-3,9,4,7,7,2,-9,-1,-3,-10,-4,2,1,-8,-7,3,-1,2,-10,-5,-4,-2,-7,-9,-3,-1,-7,-10,6,-1,-9,3,-7,-5,3,3,9,10,6,6,8,8,-2,-2,-10,-1,7,9,10,10,6,-3,-9,-10,-10,-6,-6,2,7,-6,8,6,-5,9,8,1,5,8,-4,-10,-7,-3,-5,10,-2,10,8,-5,-10,-8,-8,-2,-2,-8,9,1,8,-8,8,6,-8,9,-2,-9,-3,-1,-6,3,-3,4,-10,-9,-8,3,7,-7,-6,9,3,2,-6,6,-6,-10,1,-3,9,-9,-9,3,2,8,-6,-9,6,-4,2,4,10,-9,10,-10,-3,7,3,-7,10,4,4,-7,-3,-5,-3,-7,5,-2,7,5,2,2,-4,2,-4,-1,10,-1,1,1,4,-8,3,5,3,10,4,3,-10,-1,1,-3,10,-7,-9,-6,4,2,-4,-7,-9,-4,-10,-2,-4,-5,4,8,-3,6,3,4,4,7,5,6,-3,-8,9,-3,2,8,7,2,2,1,8,3,1,1,-5,1,-9,-1,8,9,-2,-8,4,-7,5,-2,-3,-6,-6,-2,6,-9,2,-1,-3,-10,9,2,-7,-10,8,7,6,8,2,4,-1,3,4,4,8,10,6,-1,-4,-5,-2,4,6,3,-1,-8,-2,6,6,-1,7,-2,-7,6,-5,-2,3,-8,-7,9,-7,-10,7,-5,9,-7,-9,-9,-1,8,6,-2,5,10,-10,1,5,6,-9,-4,7,7,2,4,3,-9,9,1,-3,9,-1,3,-2,-7,10,-3,7,-4,-8,-2,8,3,7,3,-5,5,3,-2,-7,-9,-2,-5,-2,8,5,2,-3,1,7,2,-8,-7,-5,7,-10,10,-7,-3,-1,-9,-10,2,-6,-5,-8,-6,-4,-7,-2,2,9,3,6,-6,-6,-7,-8,4,-1,8,6,6,-6,2,7,1,-7,-1,2,-1,-2,7,-7,-3,-9,-8,4,-8,8,8,3,1,-6,2,2,6,-4,-6,-3,-1,-2,1,4,-6,-7,-8,-6,8,-3,-7,6,9,-6,2,5,-6,-2,-3,-4,1,-5,-2,7,-2,2,5,5,-1,10,2,7,-2,-3,-9,6,-10,8,4,4,8,-9,6,-7,-5,-10,-4,-5,10,-1,-6,-9,-10,10,2,1,-10,3,4,-4,-8,-6,-3,-9,8,10,-9,-2,-5,4,-6,9,5,3,3,8,2,-2,-4,6,2,-8,6,-9,-2,-10,8,-6,3,-4,-5,-6,6,-1,-10,2,6,3,2,7,-7,-4,-8,9,10,-6,6,3,1,-2,-3,-4,-6,3,1,4,6,-2,-8,6,6,4,-3,6,1,8,4,-4,-1,10,6,-9,-2,7,-5,8,4,-5,-9,2,1,-5,-1,7,6,3,9,-6,-4,3,-7,-1,4,-7,-7,4,-10,4,10,5,-9,9,2,-1,8,4,-4,6,10,-1,-6,-6,-4,10,-10,-9,5,6,-3,2,10,9,-2,10,-10,-1,-5,-3,-5,-2,-9,-3,9,2,10,-5,3,-4,9,-6,-6,5,2,-10,-4,4,-1,8,10,-4,-5,9,-1,2,9,-10,7,-4,-7,7,-5,5,-10,8,4,-8,-10,-6,2,-2,-7,3,10,-2,2,-8,-10,4,7,-10,5,9,-9,-6,-4,1,3,-3,3,-1,7,-3,4,9,-3,-10,8,-6,6,-9,2,-10,-6,-9,-2,-6,-2,6,-10,7,5,-4,9,-2,-1,3,-1,-2,10,7,-4,9,-4,3,-1,7,-10,-8,10,5,-1,9,-3,-8,-2,5,8,3,-10,-5,-9,-8,5,9,8,-9,2,10,8,-10,-2,6,8,3,-8,-8,3,7,4,5,9,8,1,1,-5,-10,4,9,7,-10,10,-1,6,3,3,-9,-2,-8,-4,-2,7,-7,8,-3,-6,2,-2,3,3,7,3,-10,4,8,4,8,2,4,-1,-6,1,5,3,3,-3,1,10,-1,-9,4,-8,7,-10,-9,10,-8,-3,8,10,-9,-6,10,-4,-10,-1,10,-9,-1,-10,9,-6,-4,-9,-5,6,3,6,7,4,5,-2,-7,2,1,8,3,-7,5,9,-5,5,6,1,5,1,-1,5,-5,5,2,-5,1,3,-8,-7,-9,10,6,-9,7,1,2,-5,6,4,-7,-4,-3,-4,9,-3,-6,4,-6,-2,-4,10,-2,4,9,5,-8,-4,-6,-1,2,3,-9,-1,-1,-6,8,2,3,8,-3,5,2,2,10,2,7,9,4,9,-4,2,-2,-4,10,4,6,7,-1,-5,2,2,-5,-5,2,6,-10,-10,5,-7,3,-8,-3,9,4,4,3,7,-10,9,-8,-9,-5,1,10,-5,-9,4,-8,3,-6,9,-6,7,9,-7,-3,5,3,8,-4,-8,7,-5,2,-8,7,-8,-6,-9,3,1,-2,3,-2,3,-5,-9,1,-9,1,3,-9,-3,8,-7,9,8,-4,-1,4,-4,-2,-5,-6,10,-4,-9,6,5,3,-6,1,6,-6,4,8,1,3,-5,-10,8,7,-6,-9,-8,4,9,-9,3,-9,-5,6,-8,-2,8,9,-4,5,-1,3,-1,5,-4,-2,-10,-5,1,-3,-2,4,-4,8,-1,-10,-9,4,-7,7,-5,-10,1,2,-1,-3,-7,-3,-1,-9,-5,-7,-9,2,9,-9,10,9,-7,3,5,10,-4,3,3,-8,-2,-3,-3,10,6,-6,1], dtype = "int32")#candidate|3919|(1352,)|const|int32
call_3918 = relay.TupleGetItem(func_3307_call(relay.reshape(const_3919.astype('int32'), [8, 13, 13])), 0)
call_3920 = relay.TupleGetItem(func_3309_call(relay.reshape(const_3919.astype('int32'), [8, 13, 13])), 0)
func_3598_call = mod.get_global_var('func_3598')
func_3600_call = mutated_mod.get_global_var('func_3600')
call_3922 = relay.TupleGetItem(func_3598_call(), 0)
call_3923 = relay.TupleGetItem(func_3600_call(), 0)
output = relay.Tuple([call_3817,call_3864,uop_3874,call_3891,var_3892,bop_3905,call_3918,const_3919,call_3922,])
output2 = relay.Tuple([call_3818,call_3865,uop_3876,call_3893,var_3892,bop_3908,call_3920,const_3919,call_3923,])
func_3928 = relay.Function([var_3892,var_3904,], output)
mod['func_3928'] = func_3928
mod = relay.transform.InferType()(mod)
var_3929 = relay.var("var_3929", dtype = "float64", shape = (1456,))#candidate|3929|(1456,)|var|float64
var_3930 = relay.var("var_3930", dtype = "uint16", shape = (169, 9))#candidate|3930|(169, 9)|var|uint16
output = func_3928(var_3929,var_3930,)
func_3931 = relay.Function([var_3929,var_3930,], output)
mutated_mod['func_3931'] = func_3931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1692_call = mod.get_global_var('func_1692')
func_1693_call = mutated_mod.get_global_var('func_1693')
call_3954 = func_1692_call()
call_3955 = func_1692_call()
func_1423_call = mod.get_global_var('func_1423')
func_1426_call = mutated_mod.get_global_var('func_1426')
const_3969 = relay.const([-6.949587,-9.661642,7.401829,8.915529,0.567717,4.165787,-4.927423,8.912735,-8.734727,-8.713600,8.065114,8.392971,-4.284549,9.311249,-4.446413,7.014480,2.475566,-6.615120,3.996945,3.121433,-3.481518,0.617890,-1.491310,8.429101,7.202133,4.823044,-4.697344,-9.574820,7.107108,-0.189102,-4.373697,-2.457051,6.507946,4.335925,-4.574898,6.651878,4.018804,2.365625,-7.754126,3.679255,1.732233,-9.851474,5.774131,-7.979942,6.460707,-8.727557,4.681186,2.580659,-0.266858,9.890646,9.603975,9.716763,6.443527,2.234227,2.563189,-5.019975,5.957273,-7.011634,0.905406,4.638960,3.199376,4.039646,-2.629251,-6.258241,9.650159,6.030904,-8.897881,9.635007,-5.587266,6.588575,0.532140,-9.498120,2.824183,2.679227,8.322070,2.160926,2.372070,6.985183,1.526573,-9.957106,3.062825,5.717245,-1.508764,-1.297175,9.574018,-0.044352,4.591057,3.012328,1.840790,9.144227,0.077612,2.209408,1.958204,-3.375412,-9.743314,5.218269,8.503327,-3.122915,-1.487611,-8.067928,-8.403722,-4.184046,8.584094,-0.329801,6.757246,8.106325,-2.582143,7.212400,-8.281118,-3.130008,-8.960136,-8.846002,2.495757,7.822824,8.797410,5.351534,-7.993243,0.760220,-9.161752,-4.903912,-7.495270,-3.104316,-9.641172,-9.232455,-2.258593,-1.777708,2.109844,-8.653755,8.323709,-5.400872,1.365248,-3.565356,6.335504,3.139784,-2.339453,2.809876,0.638442,3.783477,2.331998,-1.818454,1.573816,-9.922877,-1.461338,8.128945,-8.339526,-8.709459,9.665101,7.745468,4.752297,-5.774298,-3.714899,-9.008502,-2.772009,-0.163915,8.389487,8.397985,0.326059,5.515971,-9.140403,5.805052,-3.256313,-1.244740,-4.412237,8.935854,-4.363261,9.155144,3.561725,-0.225631,-9.802884,-7.785975,-8.303539,-0.827841,9.483369,1.492777,-9.572025,3.451637,-5.041578,-4.207610,5.909133,-5.762466,-0.845442,0.111336,3.311561,5.586091,-3.694796,-7.804743,9.557007,-7.351167,-9.108441,-8.712518,-6.448445,-4.488385,9.733686,1.650186,-3.240618,-2.319524,-4.129985,-6.488107,8.060531,0.450980,4.172269,-6.028026,-8.551674,-1.451080,-6.513031,5.496821,-0.040431,-6.047581,-1.386900,-9.614629,0.295044,5.970559,-5.366366,-3.802354,6.317370,8.058933,5.232789,9.516230,-8.468212,-2.037215,-8.164915,4.006271,0.042196,-1.729941,-0.383559,-2.402392,6.590856,8.539285,-5.118002,-8.320334,9.781156,-3.813679,7.342285,-2.421485,9.047911,6.738978,-8.404763,-8.339463,-9.666108,9.635293,-8.308243,-7.081396,-9.720199,6.727684,2.699384,-4.925543,-2.080465,5.818986,3.402399,7.045579,8.479666,-0.719174,-2.310324,2.415514,-1.795858,6.655059,3.437997,-9.781108,5.916094,-5.122161,0.137925,5.880918,2.236546,-9.373676,-0.409977,-3.886326,-3.817252,9.768521,3.242575,3.908602,3.797754,-2.308344,-8.844289,-7.623744,2.673885,2.066493,-2.057437,-0.032286,9.374900,-1.293872,-7.982555,4.443830,8.773644,8.055285,-8.247958,-4.156970,2.658819,-6.877288,-3.206289,5.384974,5.692902,-1.618476,6.394398,6.858397,6.693006,-9.579268,-7.763664,-0.709923,-8.613055,8.154981,-3.628149,2.745822,-3.796556,-4.366500,-6.843780,-1.618174,-6.147637,6.310159,2.807500,-0.391721,-2.729515,2.273033,7.968193,5.074325,7.415448,-4.570798,-4.736974,-9.125035,0.817020,4.271961,-6.621780,7.233524,0.695475,3.248887,9.205988,2.639393,-4.533876,8.616117,5.133073,-0.714200,4.343780,-8.372561,-9.904921,-8.225772,2.674958,3.420277,-8.627081,-8.706708,-9.907613,-6.075804,-4.374294,1.398520,-2.223467,-5.999159,5.747199,9.306828,9.282648,6.911359,-5.744038,8.119113,5.814284,9.953289,5.883654,2.837673,3.690549,6.554538,-8.406198,9.025920,7.823198,-9.783446,-3.386272,3.669759,1.583158,1.069368,1.132288,-2.979158,8.393131,-2.424898,1.641675,-7.710330,3.909393,-2.393657,1.402143,2.498943,2.010632,7.370600,9.924048,8.274260,3.065472,-9.468914,6.857508,-8.070177,-3.700148,0.348233,-9.621794,5.942278,-0.394036,2.832384,6.616261,-8.229674,-4.656096,-6.905215,5.669213,2.047895,-8.184323,1.024486,-2.093456,-3.323215,-9.602403,-2.330599,-9.929643,-6.438361,-9.839474,-6.742968,-5.113674,-6.086519,-1.918187,-7.934239,2.439282,6.784093,6.881727,0.541322,-9.990048,6.646556,-3.615793,2.725717,4.549794,1.772908,-6.459541,0.837838,-3.218636,4.233345,-4.564301,-6.649111,8.401544,2.283362,-3.192099,-9.642240,-9.335444,2.142596,-7.997179,5.105173,0.325239,8.259886,-0.371301,-8.215818,-4.261947,-7.246055,-2.433945,-9.717177,-4.539750,-2.584971,3.661697,4.581591,-2.546271,-0.848873,2.208445,-1.903836,-3.908672,-8.797802,-8.637582,5.156554,8.027585,6.239297,4.052790,3.895043,2.626582,-5.998377,0.904084,5.791335,7.794086,-8.754382,0.390374,6.207675,-6.408550,6.741981,-5.133574,6.301679,-4.491079,8.404990,2.756024,5.947319,9.087705,1.695792,7.113647,-7.400473,-4.704131,1.703880,-6.650788,6.850677,3.654358,1.284173,4.452086,7.031649,-4.890676,2.285460,7.012431,-6.139624,7.505513,0.137252,-2.181956,9.445077,-5.933403,7.485186,4.067822,1.249243,3.544207,-0.935145,-1.008549,-0.690763,8.246766,-0.492369,-9.729605,7.787918,-2.626215,-1.922214,-2.108931,3.005871,-0.102032,0.935703,4.161737,-0.001186,-8.220062,6.376796,-9.165067,9.802779,-2.580874,8.981672,-1.120597,-9.395923,4.628752,-6.999679,-6.940849,5.452314,-8.661741,-0.588043,8.903629,-8.754178,5.634753,-2.851721,3.799367,8.358965,7.095955,-8.751833,2.674743,-0.456303,2.095250,3.374235,-4.192372,-0.936684,6.522613,-0.867282,-1.776437,-1.912454,6.865036,1.040873,-8.185752,-9.605335,1.223831,-7.662056,2.815919,-9.347563,4.635443,-3.224352,-8.363972,-3.587398,4.620748,-0.411647,0.500509,0.798993,-4.272321,1.186307,-8.074483,-1.268738,-1.949238,-5.275778,-6.968255,-9.561238,-4.439987,6.414156,0.147674,9.739394,4.429264,-8.341490,-2.318210,9.586902,2.167121,-2.691501,-6.299183,1.206378,0.202518,-9.969641,-8.973358,1.135245,5.067385,1.304781,-9.822129,7.191775,4.317839,-4.670623,0.621592,-8.216401,-4.079081,-3.452820,9.302096,4.871473,-6.879062,-0.253303,-0.210019,0.641405,0.018766,-1.567164,2.484770,5.906360,-3.246977,1.333745,2.747509,-9.326641,-6.536561,-8.484642,-5.985366,-9.155689,4.980919,-1.053117,-7.519673,5.007778,-5.639090,6.326485,3.236781,-0.814297,-4.212875,5.612550,3.754872,8.814350,6.096267,-2.717958,6.749194,-8.643510,0.492800,-9.154113,-7.805079,8.711271,7.518458,2.806619,4.633488,-4.048689,9.133172,8.979894,6.900421,-7.744486,-8.963222,5.602488,2.092114,-2.690686,-1.920129,-1.077387,-8.811744,8.652896,-1.428932,-3.258873,9.742467,4.752219,6.473348,0.940456,3.616006,9.023441,-1.515170,8.329478,-9.853595,8.146725,-7.678938,6.277523,6.894156,-0.891727,1.237542,-2.856746,-4.056531,3.095766,-7.120153,-9.641008,-3.411001,-6.311094,-6.115633,-0.833930,0.823674,2.112067,0.372370,7.060914,-6.713919,-9.298914,-1.254011,-8.350381,-3.711430,-7.182355,-5.394492,-8.567188,-9.619239,-3.214363,-3.490066,9.672987,-8.876775,7.116533,-6.816001,-6.005684,2.888905,-6.238678,3.665635,-0.552982,4.478625,5.504985,5.605841,-4.009002,-9.675433,4.188548,-8.660886,-2.241544,7.951604,-2.003481,-6.500891,-0.983156,-8.064721,-7.485904,9.077402,6.307213,1.963911,6.606211,1.340718,2.932681,-2.865834,-0.703422,4.378937,2.340080,7.382342,-0.851626,-3.976867,7.007850,-2.813913,9.218896,-4.566706,-6.130800,5.955722,-5.226925,0.564434,-1.455470,-7.700416,-1.316097,5.414975,5.482950,-0.020053,8.736865,-0.822185,2.452018,-3.791214,4.831007,1.143326,-4.148763,6.064099,9.155128,-8.350061,-5.022945,7.912073,5.694243,-4.343962,6.599105,-2.112807,3.288762,8.205531,2.128199,9.753702,-8.853836,-8.949267,0.492125,1.234843,2.663753,-0.555085,1.131275,-8.728128,4.427186,9.885082,4.160656,6.479916,-2.850699,8.205385,-4.306598,-4.179837,-5.419376,5.235982,-4.916660,-4.854470,7.719725,3.779093,-8.030128,5.888288,-5.265346,-1.611806,-4.417285,0.308781,-3.659671,0.351588,8.843202,2.300054,-4.745198,-4.488130,-0.510230,-1.084491,2.364474,-3.403715,-3.706696,6.893442,-5.177007,-5.563776,8.730797,5.452827,3.316150,-9.450380,7.377800,-8.524739,9.914235,-5.484557,8.404650,0.093250,8.776339,0.942915,7.663575,-0.927497,-5.884387,-2.199370,-3.260072,-6.820497,-0.591223,7.589371,-8.891951,-1.486991,-3.958676,9.713492,8.133779,-7.108762,-8.683658,-3.734323,5.937586,3.971773,-7.425391,0.756583,-5.592115,-6.803036,4.226453,-7.469237,3.237293,2.473513,4.895293,8.615842,8.867766,6.348388,4.471062,5.629952,7.819746,9.340789,-6.546548,-6.525824,-9.330362,-9.973482,-6.721276,8.216531,7.336099,2.410999,-1.540613,6.915252,5.615563,6.714846,9.167441,4.041890,-3.947966,-5.547051,3.425547,4.330670,4.295370,6.240549,-2.128371,3.569890,9.309780,-5.179767,0.159828,3.372353,6.954402,-0.310912,9.069101,7.228428,-4.896962,9.005269,-6.077882,5.013463,-6.586711,-8.207634,9.723252,-6.158080,-2.715498,-6.310069,-3.067169,-1.018147,6.301906,-4.832683,-9.176860,-5.934437,7.611559,2.362213,-4.208090,0.177679,3.958717,9.321961,0.885024,-1.091340,-3.967727,-5.167514,-5.967590,-1.802070,8.372723,6.932736,-5.489212,-6.487926,7.890040,-3.638197,-3.348835,-5.373907,2.868906,-3.831632,5.546965,-8.485582,-2.246399,-2.258967,-4.564291,-8.121533,-7.335841,9.592211,8.280422,-3.770495,8.903884,-4.656174,7.369540,-4.094366,-2.761012,5.764949,0.783962,4.066575,-8.811711,-8.410570,4.813566,-6.890017,-2.425904,-0.103504,2.183220,-2.422027,5.681040,-8.112918,0.990087,9.142675,-2.050827,6.947744,6.143926,9.593057,2.197368,-0.939517,-1.727804,-4.569750,-6.814934,-0.251307,3.036690,4.455272,8.371397,8.008569,-1.669404,-3.770777,-4.167760,-6.832525,-8.109450,1.851973,1.493406,-2.961750,5.021357,9.885331,-2.889359,6.853650,-8.035987,-3.116203,0.518488,8.152977,2.290524,-1.634996,9.523729,1.441329,-2.707215,6.215626,-8.438346,6.530209,-0.420888,4.665157,-8.580670,4.305662,9.067286,-5.722817,7.566617,-8.972274,6.177750,-8.479012,7.406722,-1.881768,4.740488,-2.697130,-5.619398,4.945992,-8.649557,1.822689,0.448735,7.951458,-6.715139,0.755615,2.564745,-6.231271,-6.390188,-5.763750,-5.721973,5.789651,-7.372325,3.037114,2.729588,-7.202962,-6.829846,-3.895197,-3.903562,-6.475861,9.583499,-0.641463,-9.482130,2.306064,-1.834001,-3.935074,0.787649,-5.003393,7.070756,-5.126204,-3.672863,-5.338514,-8.244717,-2.884581,6.655505,3.288839,3.596794,6.973392,6.698936,-3.639438,-8.209171,-2.551612,9.194718,-7.807857,0.844709,3.241347,9.630996,-4.643339,3.849831,-8.558896,2.365777,9.519819,0.829559,-8.067279,-4.476920,-2.472301,-5.756600,-7.808475,9.141231,-5.835326,7.224895,-5.215245,-4.250420,-2.401986,-8.067788,-7.929859,-4.629248,-1.597521,-8.808546,-1.575605,0.186059,-4.534312,-6.094451,5.170227,4.168906,-2.316070,-8.467529,5.875424,0.368457,-4.026787,-0.810019,4.780969,-3.988209,-8.423380,1.096045,0.606096,-0.615606,-0.342808,-3.952157,-4.838236,8.093038,-8.924746,-0.313571,-4.261298,7.842414,1.901727,7.975249,1.482875,-5.358791,8.928245,-7.386829,-6.179369,-0.238796,0.461833,3.199490,-0.826906,-2.270657,-8.277745,-7.908787,-1.560312,6.135812,9.812859,0.325020,-1.856163,-9.158988,3.732521,0.038506,4.830606,-7.344444,-2.448851,4.469638,-2.069261,-2.389647,-9.029275,-5.967346,-5.646618,-8.941530,-0.464514,-0.828402,3.049147,-2.164738,-7.350901,-6.788814,1.227977,-3.328280,-1.091973,-5.998939,-4.598432,1.543063,6.112920,5.734314,3.488254,3.191225,1.845814,1.869685,6.843541,6.010355,8.277486,6.707916,-2.294597,-9.481217,2.673404,-3.801620,1.751233,-4.915518,6.110400,1.089381,6.307862,-9.222476,-2.121783,3.123625,-8.475215,1.101911,1.095910,-3.262770,2.425726,-8.891620,-5.208236,-7.275979,8.827072,-3.588779,-7.065668,8.328858,9.849239,7.949537,9.436715,4.431284,9.707190,2.270998,6.248396,2.662745,5.732283,-5.989688,-0.880038,9.772615,4.537580,-1.743479,6.864703,-6.243861,6.600217,6.671558,-6.552337,-8.996691,8.706913,-7.938489,-0.566558,4.677644,-4.832470,3.907322,-0.617898,-2.734842,-3.211433,-9.310360,-7.359587,-1.195819,-3.442866,9.271274,-5.457655,-7.837089,4.637358,1.268991,-4.445138,3.701021,-5.792266,0.562685,-5.165354,-9.503762,-0.455714,-3.481174,9.749076,9.301729,-3.189523,5.258528,-5.050197,7.825275,-7.675414,7.907094,4.319023,4.156905,7.892929,4.475304,-9.555326,1.082783,-6.827754,-5.512498,-2.238671,4.581928,-9.616578,-9.908519,-4.408445,-0.510293,-4.483473,-8.895739,8.907360,0.795166,-9.790295,-0.751416,-0.956402,-7.993947,1.781862,7.566542,-7.519892,0.805851,1.132587,6.263407,3.762400,-2.992710,-7.901446,3.301249,0.281637,-2.342091,9.216078,-7.470346,-6.112604,-1.889488,3.304572,-1.149723,-6.658290,-2.463984,5.038473,-8.837836,-3.011780,-7.642671,8.186130,-3.428849], dtype = "float64")#candidate|3969|(1274,)|const|float64
call_3968 = relay.TupleGetItem(func_1423_call(relay.reshape(const_3969.astype('float64'), [1274,])), 0)
call_3970 = relay.TupleGetItem(func_1426_call(relay.reshape(const_3969.astype('float64'), [1274,])), 0)
output = relay.Tuple([call_3954,call_3968,const_3969,])
output2 = relay.Tuple([call_3955,call_3970,const_3969,])
func_3989 = relay.Function([], output)
mod['func_3989'] = func_3989
mod = relay.transform.InferType()(mod)
mutated_mod['func_3989'] = func_3989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3989_call = mutated_mod.get_global_var('func_3989')
call_3990 = func_3989_call()
output = call_3990
func_3991 = relay.Function([], output)
mutated_mod['func_3991'] = func_3991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1229_call = mod.get_global_var('func_1229')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_4026 = relay.TupleGetItem(func_1229_call(), 0)
call_4027 = relay.TupleGetItem(func_1231_call(), 0)
uop_4030 = relay.cos(call_4026.astype('float64')) # shape=(4, 12, 5)
uop_4032 = relay.cos(call_4027.astype('float64')) # shape=(4, 12, 5)
output = relay.Tuple([uop_4030,])
output2 = relay.Tuple([uop_4032,])
func_4039 = relay.Function([], output)
mod['func_4039'] = func_4039
mod = relay.transform.InferType()(mod)
output = func_4039()
func_4040 = relay.Function([], output)
mutated_mod['func_4040'] = func_4040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_356_call = mod.get_global_var('func_356')
func_357_call = mutated_mod.get_global_var('func_357')
call_4132 = relay.TupleGetItem(func_356_call(), 2)
call_4133 = relay.TupleGetItem(func_357_call(), 2)
func_1884_call = mod.get_global_var('func_1884')
func_1885_call = mutated_mod.get_global_var('func_1885')
call_4134 = relay.TupleGetItem(func_1884_call(), 0)
call_4135 = relay.TupleGetItem(func_1885_call(), 0)
func_3112_call = mod.get_global_var('func_3112')
func_3114_call = mutated_mod.get_global_var('func_3114')
call_4138 = relay.TupleGetItem(func_3112_call(), 3)
call_4139 = relay.TupleGetItem(func_3114_call(), 3)
func_3703_call = mod.get_global_var('func_3703')
func_3704_call = mutated_mod.get_global_var('func_3704')
call_4141 = relay.TupleGetItem(func_3703_call(), 0)
call_4142 = relay.TupleGetItem(func_3704_call(), 0)
func_435_call = mod.get_global_var('func_435')
func_438_call = mutated_mod.get_global_var('func_438')
const_4147 = relay.const([3.403072,-3.038254,-1.734127,-8.296160,-1.017317,1.642537,2.187910,-0.722413,7.682363,-4.699244,-8.189982,5.939241,-1.941190,-6.062294,6.722748,-1.429532,-0.220478,0.564097,-1.800392,7.192401,8.541385,-4.501808,0.266781,-9.921360,9.155873,4.624733,0.056187,6.107736,-5.101602,9.408709,-9.290055,-9.708798,-3.580993,0.103745,3.356670,7.913613,7.229613,-0.304450,-3.937190,1.993741,7.859452,-3.271119,6.680851,-4.200306,7.868200,2.534677,4.363471,-4.671855,9.257261,-2.028059,-0.644748,-8.046953,-9.120369,-9.223829,3.557893,-4.400582,-5.167982,2.393134,-1.998093,-5.292890,0.620631,0.511957,1.549889,-8.188062,7.265413,-0.380574,-8.075146,7.590064,9.153126,1.577058,9.042870,5.897084,-0.883357,8.135852,-2.990177,-3.512043,-6.164336,-7.980352,1.855332,-2.394118,-7.850162,9.873754,8.843706,8.479369,-9.959693,5.175310,-1.457129,-7.059378,7.878253,-4.053782,5.775486,5.016351,-4.085991,4.313368,-7.604149,8.089186,-3.771539,0.936322,9.742910,-0.166918,-3.782165,-3.239315,-0.934947,6.194584,-8.694340,6.502057,7.103519,0.960423,5.499726,8.051752,2.815798,-3.211288,5.233910,3.965071,-2.334428,6.192276,-4.644486,5.688377,-7.687126,-6.819289,-1.862947,-9.050074,4.835491,-3.516135,-3.442188,-3.655709,-8.472624,-4.145655,6.243426,-1.170014,7.851174,-5.578361,0.538650,5.151123,-8.023442,7.579280,7.281762,-1.997842,2.688291,5.677850,1.650037,7.181694,-1.585915,0.022149,-9.281092,2.605500,9.248827,5.829845,-5.327316,-0.117327,-4.987487,3.457119,0.632371,-1.279696,-9.175529,3.834133,-0.384596,0.931242,-2.488288,-3.597826,4.730535,-0.743709,6.257637,1.701245,-6.891651,-4.227809,3.858908,7.412421,-4.100544,-7.213293,6.368081,-1.861963,-4.820325,2.539672,-4.256877,5.861541,9.437896,3.875015,6.182999,-7.407649,-0.644905,2.437887,2.196008,0.970653,-3.836931,-1.178376,0.172105,0.144188,9.391659,-7.270553,-4.759490,5.952315,6.850195,-1.380713,5.735375,3.019473,-0.799322,-8.221605,6.517416,7.479648,6.830647,7.394957,-3.779786,-1.660342,2.684438,2.832834,5.839353,-1.407171,9.262297,6.566490,5.864416,6.181261,6.453093,8.280017,7.315582,4.469777,9.541008,2.758168,4.408427,5.996211,-7.175480,6.434054,1.170522,-3.414742,-8.239132,8.188946,-5.688927,3.745337,-5.371089,-5.602208,5.674475,-9.992425,6.767003,-7.562578,-0.339950,5.741779,4.639957,-5.104305,-9.626844,2.680181,-0.030253,8.728677,6.252219,4.935730,4.290810,6.183644,7.162280,7.717503,6.336494,8.170713,2.132724,-7.722564,7.706412,8.016937,-3.488066,9.314669,-0.648946,5.867603,1.519080,0.230192,6.492807,-8.006945,0.184329,8.785303,6.519072,-1.555605,7.427288,6.202398,2.076825,0.667750,-7.359803,-0.980225,9.403245,-9.362248,-9.199142,1.534260,1.743946,-1.487053,-5.889239,9.567586,5.040431,-0.584043,5.917270,2.276435,3.095804,-0.158845,9.068461,-4.414491,-5.803690,-7.697868,-7.689421,-7.278651,6.609130,-3.166024,-1.539261,0.054157,8.127850,8.600452,-5.630257,7.308627,4.353747,8.262878,8.807197,9.190055,-1.075439,-9.449168,5.294946,-0.096139,-7.431007,-0.863843,4.454248,-7.342442,-4.185587,2.881665,-1.371376,-7.282554,-6.608888,8.657316,9.591436,6.095161,-1.360339,-6.533369,8.397588,-3.606116,-9.983768,-9.546411,-9.547622,-7.078818,-7.871161,3.377619,9.170347,-6.318240,8.825564,7.624105,-2.961936,3.324024,-0.855795,2.468595,-8.160049,3.623833,-9.520879,-1.810240,-2.128047,9.656753,-0.392169,-0.665617,-0.550956,6.222973,-6.087825,-8.812296,-1.716325,2.313308,-9.004930,-7.342698,-4.120442,7.561815,8.144897,9.626432,-9.658624,0.119983,-8.720020,-4.518250,-4.946446,-6.010154,-4.976457,-3.052412,-7.118520,-9.178820,-0.150663,-5.264509,-9.626083,1.194126,5.894058,-7.763599,-5.133885,1.022193,5.472881,9.913039,8.539067,-6.275114,3.841321,-6.351574,-3.548187,-2.294475,4.416418,7.583535,-1.796280,-6.684728,3.124954,7.384630,-5.125736,-9.792000,6.494741,5.393509,-7.190806,-7.922963,-0.695540,6.126533,0.125680,9.521926,-0.348659,3.309784,-0.012306,2.654233,-8.134010,2.326805,0.528585,-0.399162,7.825835,8.788804,1.806895,3.060785,5.674670,-5.794867,-9.009985,8.848358,-0.313242,4.583129,-8.467308,-1.468553,-1.842864,3.308797,-3.639009,-5.592465,-2.030571,4.409641,9.157008,6.125419,7.718652,-1.908288,-8.316782,6.315810,-4.986591,1.461762,8.472332,5.181848,4.598360,6.997585,-1.993852,7.976184,9.082310,-9.669305,-2.756330,0.542876,0.505645,3.220780,-2.642906,-8.250443,-2.833391,6.397388,1.534540,8.859219,-5.255863,-4.369303,-7.060555,8.869903,-5.345014,-3.193035,6.519586,8.548571,0.827644,-6.188648,8.623607,-9.757713,-5.305589,5.959794,-0.817277,-3.493633,1.074614,4.491582,5.315184,0.372517,-8.736749,-5.991421,-4.296468,-7.732264,-4.414636,0.881161,1.842041,7.470229,8.066127,-9.743189,5.762251,-6.133716,5.712232,-0.696964,-2.274277,3.640036,-9.175759,4.580419,2.656779,-3.882365,-8.086828,3.486773,-9.515974,-9.180739,9.215971,3.834770,1.662644,9.067323,-3.130947,7.763432,4.714298,5.940759,-6.081836,-1.711818,6.028731,-9.289563,-0.830216,6.630124,-0.075092,8.167075,-2.536054,6.343704,-0.169639,3.699313,-1.654097,-6.314174,1.534390,7.269499,-0.099163,6.675710,2.954863,9.971537,2.704821,-4.639416,-5.558756,9.466974,-8.885430,4.391872,9.517079,3.934429,6.575863,5.498021,-9.717281,9.696750,5.496727,-5.990919,-8.429634,-5.290370,-2.069846,3.836955,-1.659272,-3.879261,4.340253,-8.800225,-4.224319,0.371327,2.862381,-7.996107,1.347262,-0.319388,-4.243511,8.700591,-3.942861,-7.259187,-5.969917,-9.587073,-5.965874,-7.114912,-3.184035,-6.865983,-3.336395,-8.173655,-6.210476,8.350744,-7.085573,-3.482260,-9.125639,2.965043,-6.556397,-0.268695,-5.562898,2.796406,9.926418,-1.715503,-2.264701,-2.583431,-2.936857,-2.378401,8.720444,6.655271,9.039796,-1.436863,2.277420,3.252600,2.264052,6.777357,-6.911896,-8.136646,-3.110627,7.098812,8.804921,0.456358,-8.978391,-2.771483,-9.659578,-7.146801,-1.698732,0.911130,-2.405923,0.819750,-7.186086,1.720735,5.605696,-7.975615,6.147956,2.120015,6.789068,-0.066705,-3.543522,8.262725,-9.395692,8.111456,-3.306321,4.331638,1.752895,-4.559282,2.048896,-0.338143,3.660352,-0.572862,-1.108882,1.958067,-4.592464,5.922574,0.269330,4.331367,-3.920884,-7.602992,-3.180377,-7.056507,-8.737080,3.317155,-9.420138,-3.887015,5.333432,-7.630538,-9.604250,6.360063,-1.516513,-2.179084,-9.857442,9.426830,-1.966078,0.244408,1.069106,-6.089620,4.395477,0.626965,0.752006,4.257753,-2.688534,-9.557784,-3.223902,-5.497032,-3.758072,-2.651535,-0.150025,-5.628892,0.781542,5.163672,4.161735,-4.253356,-4.260734,-0.371422,9.785012,-9.435573,-2.463353,4.781077,-1.143348,1.696731,-3.341705,7.427109,5.521576,4.587392,-6.174574,-0.683668,-7.462832,-6.496928,-9.059257,-2.020574,-5.292227,-4.318099,4.213724,0.315109,0.376147,-9.897362,-7.781749,-7.315282,4.410904,-7.918552,6.645974,4.844294,6.841851,-9.948132,1.080678,-3.909494,5.345086,-0.571830,-7.606184,-6.792707,-1.061697,0.383917,8.743379,-6.489160,4.516402,-3.735395,1.481831,-4.047337,2.918422,8.663724,6.729791,-6.284529,-7.044556,2.879412,2.570267,-8.857183,-4.843822,-1.656860,5.284922,0.066292,-6.824912,0.842452,0.371439,-5.948454,-3.638917,2.394784,3.889639,-7.591635,-6.016139,-9.644069,-1.463437,7.383050,-7.826637,-8.575713,5.369657,-0.698222,4.362915,7.442997,7.566153,6.524650,9.369086,5.602719,-5.489699,-0.580907,8.320877,-1.614166,8.508166,9.965743,-2.172145,-9.316182,9.346282,8.375029,-0.533059,5.318594,-5.862570,-0.959651,-2.249957,6.755999,7.066137,8.003685,-3.379602,-3.866105,-5.855996,-3.404911,7.960599,-5.019516,1.304870,8.611483,-2.792182,-3.888358,6.179440,1.154139,-2.479258,1.440171,-5.602735,9.158794,-0.237576,5.777459,6.013004,3.896508,-4.987256,4.809564,7.748314,2.344147,9.339593,4.638298,-1.478356,-3.297028,7.490370,4.683714,6.006141,-5.705707,-6.856110,-7.090733,9.812205,4.983308,5.791376,-0.353200,0.904056,-5.606384,0.924621,-1.180772,-2.236367,-9.953446,-2.325306,-0.699341,-6.391250,7.938972,-4.484869,-2.940387,-8.272596,6.533621,-3.583136,-1.306062,7.278784,7.622726,-9.014640,2.276160,-7.307502,-0.441661,3.631346,-9.765085,-1.437235,-2.367829,1.558286,-3.499391,-4.531542,9.405120,6.434464,2.333145,3.917548,3.254130,-1.918785,-9.101055,2.728161,4.513925,7.456169,-0.103858,5.293862,-4.615904,-5.933955,-0.828042,-2.268577,4.237475,-9.556072,3.252459,5.134997,2.755028,9.043632,7.163147,3.643744,9.415299,-3.009661,-5.240812,-2.448508,8.108994,1.824218,-4.483127,3.588988,-1.644416,-4.484283,0.231417,-4.334836,1.836398,3.243681,-7.801556,8.088827,9.888976,-5.564977,0.642545,8.578223,9.654884,8.693667,-4.893334,8.347150,-1.920389,-1.652021,-9.301897,-5.606032,-2.906844,-3.418019,-3.394047,-2.625747,3.938687,9.213333,-6.165584,2.325778,-0.252928,2.287176,-2.911826,3.842552,-8.783987,-9.204056,-0.989757,-3.468553,-9.861615,-0.821611,-7.214277,8.948060,9.399224,-0.294882,3.690020,2.417842,-4.051627,-9.119170,8.463759,8.863053,-1.119245,-5.669218,5.658006,9.813239,1.522366,-4.897160,9.475441,-5.907073,9.616795,-2.002830,-3.836643,-6.526368,-6.878930,3.839296,-2.235373,1.907415,6.009080,9.777232,-8.623573,-6.749712,-0.697637,6.066882,-4.071944,-3.329890,-9.022581,-9.090793,-9.062009,-8.495058,-4.791263,3.044204,-0.627206,4.340714,-3.937786,-6.567343,0.427481,7.967850,-8.650220,6.943289,-2.415810,-7.957875,-8.951549,2.212471,6.128233,5.871475,-9.819683,-4.269780,6.793488,-3.381911,-4.809721,-9.112515,0.356186,-2.912932,-3.277571,2.851543,4.193439,-5.597364,-8.726845,9.687362,3.212443,1.350396,7.127254,-7.671799,8.527314,-0.059342,-4.815568,-6.256464,-2.378181,3.960743,-5.480586,8.148304,-4.219367,-5.304249,-1.835947,-6.475891,-0.310757,0.669560,9.469147,7.506325,-5.969600,-3.426095,-3.766557,-5.913451,0.794681,-1.975381,-9.337313,-9.461048,0.696551,-9.210867,-7.096406,2.150411,-2.351635,-9.979513,-9.636463,4.662404,2.523710,8.017142,-9.800912,5.106256,0.981215,1.137384,3.681821,-8.965828,-1.225517,-5.354968,1.558189,-0.154398,-1.439943,3.398585,-7.350537,0.102978,8.817479,5.270438,8.666704,7.056686,-9.769148,-7.177114,-4.798193,-6.295689,1.083120,4.517316,-0.250536,2.510786,-0.844044,-4.847327,7.119721,7.922645,-7.676496,-9.768232,2.836774,4.263808,-9.661576,2.132805,-9.803920,-6.386527,1.580960,7.770380,3.408575,-3.819056,2.625670,-2.220263,4.459644,1.191903,-7.229414,6.738158,-5.835298,-0.058286,-1.810832,6.191527,4.776308,3.473153,-8.233587,1.821171,0.707048,8.389775,-8.618530,2.428987,1.247024,7.457920,-2.789616,0.653995,2.673999,7.481380,-6.845447,8.859974,-0.587843,-3.138825,1.491221,-2.088010,6.600977,7.487138,1.935177,9.369006,-9.790104,0.817099,9.996542,0.362362,-2.139064,7.089709,5.031759,-4.211999,2.000803,-1.509464,-4.854267,5.149372,0.441190,0.746886,0.629611,5.990454,-1.596992,-6.088360,-9.020024,-4.016431,-3.865786,8.671056,-9.875529,-7.343279,-2.834943,-0.991455,6.002953,-1.903110,5.510635,-9.559714,7.335509,-3.372395,-4.443070,3.093411,-5.258263,6.569681,8.926113,-6.683603,-3.737110,5.674448,-6.907628,-3.684930,9.934363,-6.391380,-6.454338,9.887857,-0.611950,0.858289,-2.665060,0.984273,0.299605,-6.275888,5.179620,-7.013668,7.058033,-5.546810,-5.465034,8.651798,-4.674952,-8.721531,-6.154419,-6.385250,2.073385,2.429149,-7.240520,-2.958745,5.855002,1.523943,5.325172,3.187981,3.387700,-6.781169,-2.379553,-2.306619,3.123920,4.818369,-7.173163,3.609396,-8.162784,-5.632465,4.610374,-4.825205,9.779025,-9.098620,1.281780,3.819135,4.059950,-4.047372,6.490653,-0.236561,0.957184,6.492597,0.345175,1.167876,5.186464,9.120729,-8.455815,-5.007698,4.950185,0.647315,-2.828799,5.855529,-1.782188,4.206272,-4.100170,8.556120,1.024357,-1.960066,7.702864,-5.791472,2.639530,9.564350,5.200151,6.703463,-4.736444,-7.745458,9.259614,3.486182,8.547434,2.945656,-3.312545,-5.877613,9.025767,6.635181,-1.040674,-2.390988,2.575486,-0.848575,0.734877,8.360113,-8.856337,-1.628869,3.390967,7.309539,-8.675155,4.506484,0.074184,-5.304492,-9.169452,0.863331,-6.411816,-5.328296,-6.361209,-3.310287,-2.333398,6.008693,8.223439,-5.538851,4.435693,-0.366601,-4.255313,4.828213,1.266518,6.580567,8.261176,-2.573178,-5.304376,4.769582,3.790860,-9.771242,5.563734,-9.113070,1.573489,9.438077,2.324344,-0.819177,0.692250,9.370125,1.837657,-7.037019,-2.323903,-7.032042,9.688391,1.319051,-3.616924,-2.809213,8.583631,-7.653732,6.718293,-6.922479,3.223208,7.618215,-2.068954,2.318202,0.902409,-6.404424,7.200046,-9.915863,-8.016729,2.544201,8.228376,-8.987746,8.898809,5.067742,-1.163953,3.405518,-7.457386,4.639265,3.816364,-7.186542,-5.284861,-1.893949,-7.199485,3.666289,-7.427505,2.767466,-4.213497,7.825673,-3.609254,9.903822,-3.884871,5.833308,8.599541,7.589517,3.563513,8.873579,-6.281903,7.676720,-4.943236,8.601463,-8.745570,-2.969943,-6.770704,-7.286436,-9.355071,6.711158,-3.298162,1.640815,0.433844,-6.131685,-4.662304,2.790433,-8.516032,1.314249,5.330375,6.419926,4.292071,-5.820459,4.236254,5.514077,-1.694349,-7.596658,6.051224,-7.256081,-0.523659,9.069898,-0.002855,7.274141,-6.260145,0.720302,2.140474,3.716198,-8.587415,-4.348393,-6.245941,1.366955,0.986078,6.995740,4.000710,3.152949,-7.559848,9.553058,5.076354,7.080960,5.477285,6.960976,-9.984657,-7.389395,4.380470,-1.480412,-7.605307,-0.964094,-0.085732,-8.067494,-9.107086,9.199583,-6.081211,5.902734,-7.881650,6.178477,-6.045016,-9.865154,6.253118,8.082704,-4.242597,-3.620098,-0.060973,-2.543474,-5.826798,-5.317411,-9.220933,-7.495626,-1.383555,0.894247,-0.187414,0.170386,6.354629,9.134208,-6.488239,8.538798,0.446429,8.760306,2.742595,-6.666951,-6.263770,-4.072710,-8.740635,3.508220,-7.002672,7.477888,-3.021037,5.038288,2.391202,-2.216975,-2.000472,-9.952723,-7.477120,5.492317,2.948947,9.671785,-0.031703,-2.150380,-8.850800,-8.127084,-7.130255,-9.353109,-4.698128,6.524587,-8.382879,7.266099,1.839013,-9.124600,8.312794,9.309613,0.206120,-9.135876,-9.000654,9.104333,-5.113149,-3.278391,6.416580,4.665828,-2.542359,4.559377,5.230716,1.908627,-8.988036,-9.488828,4.925646,-6.519288,-7.550433,7.557667,-2.696005,-4.817937,-5.799437,6.417437,6.065534,8.439981,2.023524,-9.446621,2.299661,-5.311715,-7.080891,7.403788,-2.930674,-3.083188,-9.927621,-0.968678,-1.171605,0.676646,0.836729,7.810959,-6.568114,-9.706874,6.379057], dtype = "float64")#candidate|4147|(1456,)|const|float64
call_4146 = func_435_call(relay.reshape(const_4147.astype('float64'), [7, 13, 16]), relay.reshape(const_4147.astype('float64'), [7, 13, 16]), )
call_4148 = func_435_call(relay.reshape(const_4147.astype('float64'), [7, 13, 16]), relay.reshape(const_4147.astype('float64'), [7, 13, 16]), )
output = relay.Tuple([call_4132,call_4134,call_4138,call_4141,call_4146,const_4147,])
output2 = relay.Tuple([call_4133,call_4135,call_4139,call_4142,call_4148,const_4147,])
func_4149 = relay.Function([], output)
mod['func_4149'] = func_4149
mod = relay.transform.InferType()(mod)
mutated_mod['func_4149'] = func_4149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4149_call = mutated_mod.get_global_var('func_4149')
call_4150 = func_4149_call()
output = call_4150
func_4151 = relay.Function([], output)
mutated_mod['func_4151'] = func_4151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3521_call = mod.get_global_var('func_3521')
func_3523_call = mutated_mod.get_global_var('func_3523')
call_4182 = relay.TupleGetItem(func_3521_call(), 3)
call_4183 = relay.TupleGetItem(func_3523_call(), 3)
func_1440_call = mod.get_global_var('func_1440')
func_1442_call = mutated_mod.get_global_var('func_1442')
call_4195 = relay.TupleGetItem(func_1440_call(), 0)
call_4196 = relay.TupleGetItem(func_1442_call(), 0)
output = relay.Tuple([call_4182,call_4195,])
output2 = relay.Tuple([call_4183,call_4196,])
func_4204 = relay.Function([], output)
mod['func_4204'] = func_4204
mod = relay.transform.InferType()(mod)
output = func_4204()
func_4205 = relay.Function([], output)
mutated_mod['func_4205'] = func_4205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1146_call = mod.get_global_var('func_1146')
func_1147_call = mutated_mod.get_global_var('func_1147')
call_4260 = func_1146_call()
call_4261 = func_1146_call()
output = call_4260
output2 = call_4261
func_4262 = relay.Function([], output)
mod['func_4262'] = func_4262
mod = relay.transform.InferType()(mod)
output = func_4262()
func_4263 = relay.Function([], output)
mutated_mod['func_4263'] = func_4263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1740_call = mod.get_global_var('func_1740')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_4301 = relay.TupleGetItem(func_1740_call(), 1)
call_4302 = relay.TupleGetItem(func_1741_call(), 1)
func_643_call = mod.get_global_var('func_643')
func_645_call = mutated_mod.get_global_var('func_645')
call_4310 = relay.TupleGetItem(func_643_call(), 0)
call_4311 = relay.TupleGetItem(func_645_call(), 0)
func_1423_call = mod.get_global_var('func_1423')
func_1426_call = mutated_mod.get_global_var('func_1426')
call_4312 = relay.TupleGetItem(func_1423_call(relay.reshape(call_4310.astype('float64'), [1274,])), 3)
call_4313 = relay.TupleGetItem(func_1426_call(relay.reshape(call_4310.astype('float64'), [1274,])), 3)
output = relay.Tuple([call_4301,call_4310,call_4312,])
output2 = relay.Tuple([call_4302,call_4311,call_4313,])
func_4332 = relay.Function([], output)
mod['func_4332'] = func_4332
mod = relay.transform.InferType()(mod)
mutated_mod['func_4332'] = func_4332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4332_call = mutated_mod.get_global_var('func_4332')
call_4333 = func_4332_call()
output = call_4333
func_4334 = relay.Function([], output)
mutated_mod['func_4334'] = func_4334
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4354 = relay.var("var_4354", dtype = "float32", shape = (4, 16, 7))#candidate|4354|(4, 16, 7)|var|float32
uop_4355 = relay.cosh(var_4354.astype('float32')) # shape=(4, 16, 7)
bop_4358 = relay.subtract(uop_4355.astype('uint32'), relay.reshape(var_4354.astype('uint32'), relay.shape_of(uop_4355))) # shape=(4, 16, 7)
bop_4368 = relay.greater_equal(uop_4355.astype('bool'), relay.reshape(bop_4358.astype('bool'), relay.shape_of(uop_4355))) # shape=(4, 16, 7)
func_2857_call = mod.get_global_var('func_2857')
func_2859_call = mutated_mod.get_global_var('func_2859')
var_4374 = relay.var("var_4374", dtype = "int64", shape = (600,))#candidate|4374|(600,)|var|int64
call_4373 = relay.TupleGetItem(func_2857_call(relay.reshape(var_4374.astype('int64'), [10, 15, 4])), 1)
call_4375 = relay.TupleGetItem(func_2859_call(relay.reshape(var_4374.astype('int64'), [10, 15, 4])), 1)
func_316_call = mod.get_global_var('func_316')
func_319_call = mutated_mod.get_global_var('func_319')
const_4440 = relay.const(-3, dtype = "int8")#candidate|4440|()|const|int8
var_4441 = relay.var("var_4441", dtype = "int8", shape = (1274,))#candidate|4441|(1274,)|var|int8
call_4439 = relay.TupleGetItem(func_316_call(relay.reshape(const_4440.astype('int8'), []), relay.reshape(var_4441.astype('int8'), [7, 14, 13]), ), 1)
call_4442 = relay.TupleGetItem(func_319_call(relay.reshape(const_4440.astype('int8'), []), relay.reshape(var_4441.astype('int8'), [7, 14, 13]), ), 1)
bop_4445 = relay.multiply(bop_4368.astype('int32'), relay.reshape(bop_4358.astype('int32'), relay.shape_of(bop_4368))) # shape=(4, 16, 7)
output = relay.Tuple([call_4373,var_4374,call_4439,const_4440,var_4441,bop_4445,])
output2 = relay.Tuple([call_4375,var_4374,call_4442,const_4440,var_4441,bop_4445,])
func_4455 = relay.Function([var_4354,var_4374,var_4441,], output)
mod['func_4455'] = func_4455
mod = relay.transform.InferType()(mod)
mutated_mod['func_4455'] = func_4455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4455_call = mutated_mod.get_global_var('func_4455')
var_4457 = relay.var("var_4457", dtype = "float32", shape = (4, 16, 7))#candidate|4457|(4, 16, 7)|var|float32
var_4458 = relay.var("var_4458", dtype = "int64", shape = (600,))#candidate|4458|(600,)|var|int64
var_4459 = relay.var("var_4459", dtype = "int8", shape = (1274,))#candidate|4459|(1274,)|var|int8
call_4456 = func_4455_call(var_4457,var_4458,var_4459,)
output = call_4456
func_4460 = relay.Function([var_4457,var_4458,var_4459,], output)
mutated_mod['func_4460'] = func_4460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3734_call = mod.get_global_var('func_3734')
func_3735_call = mutated_mod.get_global_var('func_3735')
call_4486 = func_3734_call()
call_4487 = func_3734_call()
output = call_4486
output2 = call_4487
func_4504 = relay.Function([], output)
mod['func_4504'] = func_4504
mod = relay.transform.InferType()(mod)
mutated_mod['func_4504'] = func_4504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4504_call = mutated_mod.get_global_var('func_4504')
call_4505 = func_4504_call()
output = call_4505
func_4506 = relay.Function([], output)
mutated_mod['func_4506'] = func_4506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2804_call = mod.get_global_var('func_2804')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_4572 = func_2804_call()
call_4573 = func_2804_call()
const_4578 = relay.const([[[5.353593,-0.432611,-3.272228,4.616756,2.469037,8.361051,-5.593702,0.577671,8.320121,8.527798,-5.937160,-3.577658,5.705532],[9.908419,-2.681899,-6.333189,5.305731,6.417830,-2.310414,2.011345,3.093870,3.109612,3.038427,6.009909,1.365128,-0.188548],[-2.631683,2.116248,3.956522,4.109189,3.743899,-1.523143,-7.292426,2.239551,-4.482680,6.719628,8.363798,6.436563,8.985742],[3.606417,-5.231098,-2.229783,-9.424155,-2.762075,-2.342215,5.309308,9.003179,4.754237,-7.219017,-8.276419,5.036266,-4.841077],[3.013648,7.280835,-8.112828,2.917851,1.037868,1.507423,3.459116,4.757029,-6.465978,-6.449269,-1.639449,6.951762,-3.897517],[-1.661280,8.330948,-5.777999,-9.507362,2.300256,6.344481,0.262399,2.706817,-0.046909,-6.371963,-6.440286,3.437502,-7.569066],[-9.416379,-6.880818,-1.569263,1.592922,1.796317,-6.037391,6.036114,9.317985,-1.051523,2.589747,6.268977,6.817508,-1.481551],[-4.358132,-5.827873,4.280627,1.826985,0.815398,-6.967597,6.306813,-5.123896,-7.042434,-6.770213,-7.243575,-5.964972,-3.495339],[-2.300044,-1.639922,0.470033,-5.436735,4.493354,3.902275,1.612964,-2.949511,1.588261,3.875986,1.338323,5.806569,5.423778],[7.159729,-7.773285,-2.669286,6.888754,2.544832,7.472540,-7.263127,7.390838,6.784080,-7.137670,6.624050,-9.095907,4.725657],[-9.789479,9.629554,2.093925,2.767527,-2.543198,-3.707566,-1.421172,-6.849534,7.701892,2.987080,-7.482904,9.157555,-1.964945],[-6.957496,5.834904,3.792205,0.894261,-8.971564,1.348383,-9.189413,0.621344,4.000553,-9.291293,0.329348,-0.304897,-9.496412],[-4.926419,6.654307,-6.967499,7.095849,5.089361,1.378699,7.427049,2.444740,-7.009412,-1.854517,-6.853984,7.350917,0.591932],[-6.810260,9.891609,0.630615,-5.658538,1.301936,-4.141732,3.885339,2.137750,-5.948770,-5.209742,7.007779,2.713626,-0.331577]],[[6.590856,-0.533666,-3.184982,-9.667976,-1.844738,0.851491,-1.996763,2.937699,5.675703,-6.476917,-9.077586,9.161456,2.935282],[1.683219,-3.066276,-5.223541,1.978804,9.624785,-0.817696,-9.498403,0.288685,9.126577,-6.857850,-0.385313,4.226533,-0.190373],[-0.682194,-0.542170,-6.724148,-5.243298,3.852112,-2.762785,-4.099445,1.329824,8.313992,2.178961,1.738974,-5.310946,9.658057],[-9.023434,0.855852,-9.544670,-8.322067,4.258459,-3.506945,-8.174885,3.691484,2.613642,-0.972926,-1.495863,-8.744198,-4.714744],[-0.192445,9.280951,8.450914,4.972648,-3.891502,-6.087443,-4.354341,4.012037,-0.724343,7.034457,-8.600127,4.149287,9.533961],[-5.232898,4.339600,9.699375,0.138457,8.212577,-7.318879,9.026948,9.567056,-9.101735,-7.469108,-7.919822,6.989973,-7.788500],[-8.698573,-4.329639,5.205101,3.811488,7.132493,-5.746498,5.817092,4.903382,-2.232688,-0.994933,6.060764,-2.303320,-8.140792],[-2.809657,-5.348966,8.045615,-9.823548,-7.141302,-9.013117,-0.810328,-7.913470,-3.760382,-1.316640,-5.754162,1.538259,-4.289579],[0.639366,-1.406793,-7.179531,7.987219,0.609548,1.641055,-5.643929,7.003983,-2.927813,-9.057563,-9.948921,-6.990177,-1.055061],[-1.379837,-0.744036,-5.278007,8.060793,0.894532,0.345377,-1.158232,-0.789905,-2.791535,5.700625,2.215233,4.066438,-4.661971],[9.557516,8.518441,4.372532,5.910798,-7.481187,1.148982,-6.410523,9.732370,6.960575,-1.664403,-5.281508,-1.397347,-0.752489],[9.871988,3.764189,1.676382,-9.901425,9.573002,-9.987005,5.989383,-7.700984,-9.270966,-2.929265,3.152084,7.780659,9.586985],[-5.959385,2.153895,2.378442,2.366716,7.787172,0.675407,5.857844,5.899569,5.873490,-6.282407,-6.204548,-2.989632,2.002297],[-7.238724,6.300604,-8.607996,-7.227139,-3.626995,-8.076040,-0.161372,7.900608,0.446277,-8.214263,-8.243599,-1.909849,-1.395473]],[[-7.427933,5.898299,-0.196976,-5.597161,7.452759,8.943627,9.225379,3.015676,2.384106,8.324298,-7.781798,2.268421,1.737302],[-4.711121,3.398455,-2.468420,-6.709043,7.970613,-3.515649,-9.631785,-9.172289,5.218905,-3.694937,8.825800,-9.163030,-3.928732],[0.230104,-5.742226,5.484103,-8.239008,6.755572,-5.640763,-0.276575,-1.452202,-6.718485,-7.803388,-9.885716,-5.393591,4.310283],[0.520737,-7.273844,-8.732728,1.748515,-0.925022,0.940555,8.928596,-4.113352,-7.590955,2.522384,0.005114,-5.982455,-1.483267],[1.256639,3.309293,-6.592162,-4.866265,-1.869436,3.969765,0.922863,-9.278559,-6.325097,2.150650,-5.864384,-4.854311,-8.155856],[3.295212,4.912200,-0.274806,-3.054273,0.768289,-5.322175,6.258588,-1.096715,-0.033901,-7.735410,4.515562,5.913583,3.257124],[-4.342822,0.242959,8.535338,6.040141,1.956414,8.538101,6.941879,-6.188357,8.742019,-8.890477,-0.456624,3.976538,-1.381595],[-7.550694,-3.358306,4.731000,8.596561,0.801366,2.548090,8.941108,-7.979269,-1.254609,-6.514354,2.326478,-0.441863,3.670933],[5.589489,6.515337,1.437665,9.906123,-3.993777,9.675491,8.140479,-5.072595,9.248531,2.646717,7.437911,-1.471688,0.763654],[9.412473,8.775151,-3.116013,7.354660,-6.157826,6.236525,-1.984800,-0.678943,2.864137,7.821162,-4.541261,-1.867334,-4.608409],[5.985726,5.792755,7.106996,-5.206413,7.301605,5.765853,1.903072,-9.221542,9.430219,-6.299463,-8.122025,6.936198,0.635093],[-2.180284,-1.530072,7.911118,4.568401,-4.824753,3.763813,-7.986090,4.998233,-9.944351,9.905956,-6.994876,6.920257,8.825146],[-5.107462,5.627267,-5.830375,4.308461,7.960760,2.674006,3.072664,3.289626,-2.234893,-3.520034,7.997390,-9.392606,8.172335],[3.339338,9.589195,-9.652518,6.331157,-3.730518,6.219234,-7.057314,-6.028872,-2.596425,2.196987,6.490333,2.921061,-7.576735]],[[-0.565677,4.311990,9.057600,-0.069299,8.225004,-7.250819,6.118234,0.677758,9.259313,8.929833,8.862217,1.050806,6.147462],[-4.679953,-0.129341,4.949978,-7.858518,-0.833311,9.792615,-1.919123,8.567777,1.569988,4.595826,-2.047522,4.432374,5.220026],[6.628504,4.372056,6.036491,4.969274,-8.846813,-1.622214,6.087454,-9.393405,2.554155,-1.834853,-6.824457,6.480906,-1.644385],[-7.630431,0.459739,-8.407171,-8.608347,7.616646,9.838658,-7.456004,5.182645,-4.678346,0.543078,3.063860,-7.292187,-7.082059],[-4.659871,-1.745331,2.200120,-4.019394,-1.631455,7.745531,-2.503795,-7.712453,9.248565,-2.146140,2.632284,8.099194,0.999741],[-4.644820,-2.191547,-1.565121,-4.674335,6.913934,6.363677,2.027328,-1.426994,2.467230,9.995601,9.052812,-2.801552,-6.188546],[-3.985687,-7.109022,-8.480450,7.568768,8.026187,8.712086,2.725695,7.667465,-1.033277,-1.966624,6.593376,-7.721802,-1.338395],[0.766984,9.421941,-4.438365,-6.044604,5.514412,0.058481,5.166504,8.559044,9.134852,-1.812003,0.213485,9.018759,5.115587],[6.102276,9.442546,0.291802,-0.065575,-3.493558,3.152543,-2.734922,-0.181088,1.541695,-1.862919,-1.678398,2.581788,8.140601],[-8.836841,7.051636,8.313307,2.284969,-7.282720,-1.568619,8.191352,0.656907,7.361617,4.157478,-7.602506,6.834967,9.527733],[-2.210820,-1.792211,-7.216133,-5.205364,6.926214,-9.301560,-5.981174,0.475311,-8.307278,-4.235696,0.624007,7.078850,2.597374],[-1.447579,-2.451224,-3.944888,-3.734096,-4.581626,1.820348,-7.148364,0.424475,6.187850,4.613420,-5.759066,5.208510,-8.329432],[-4.532675,-1.845889,5.616812,-2.705106,-1.589040,-7.249257,-5.259370,1.521775,6.853186,-9.283002,3.869912,-0.545616,-0.724832],[-0.503413,2.277767,7.644558,-9.080735,1.298282,-6.545428,4.063191,9.952442,9.266670,4.941280,1.686947,7.250623,5.810683]],[[-8.310031,6.846609,-1.713153,-3.427810,-5.569964,8.082931,1.306052,-6.992939,-4.804988,7.472793,3.860424,2.739584,3.624683],[7.439123,-1.724661,0.508473,2.505428,-8.966098,-7.170289,6.120062,-7.252615,0.339286,-5.727391,4.725111,-6.895541,-1.604166],[0.410871,-4.604284,-3.157724,4.280668,-0.786196,2.446450,-6.034162,2.953706,1.062286,8.643654,3.283185,8.440221,2.774029],[-8.684732,0.594179,8.803802,9.153791,-7.113205,-6.461155,-3.522353,-2.760696,-9.957619,0.523337,-3.087546,-9.058952,-5.675423],[-9.246701,2.825154,-5.940898,5.175594,-2.730909,9.179581,-1.191917,-4.437367,7.573319,7.920414,-7.173086,-0.906297,7.369446],[-1.606258,7.050781,9.061091,9.716015,6.650457,9.010960,5.881615,8.588227,4.591911,-0.363795,-8.865076,-3.917527,-0.211052],[9.397784,8.222717,1.841016,2.383537,-8.528221,-1.332456,2.595554,-9.194903,7.511860,3.703012,-7.963451,-9.594339,-3.705327],[-7.525840,3.811968,4.732025,-1.692132,4.975222,2.906845,-1.184197,-7.949522,6.212457,-8.685630,-0.604420,6.172609,-5.698307],[-7.122010,9.295036,-2.948330,5.877179,-1.114489,-6.631716,6.885326,-9.869807,-4.036776,0.272386,8.655719,5.085487,-3.268696],[1.815887,3.045557,0.908339,0.336428,-8.418019,-2.712591,7.458285,-8.651755,6.230911,5.530700,-8.292890,-0.155033,-6.024074],[-9.028075,8.058815,4.001528,8.856241,2.617226,-6.114091,5.233992,-1.433842,8.852780,-3.615757,1.575971,3.054617,2.554210],[0.798818,6.879281,7.550420,6.994783,-7.441151,-0.858679,2.467187,-9.245277,-0.774895,-9.366902,-8.989218,-3.491238,5.111081],[-5.652625,-2.837808,5.807870,-0.878268,-4.889269,-7.678406,-3.263370,-6.547526,-7.888080,-8.374969,-9.004553,-8.307162,5.766825],[-7.090310,1.730978,-0.485828,-1.769270,5.895015,-4.780791,7.978221,-8.401230,-5.685575,-3.395505,0.138110,-6.209448,-0.742113]],[[-4.287057,3.301701,4.454247,3.442997,5.933272,-0.204566,-6.185884,9.297666,8.958599,7.147318,3.477855,7.943918,9.874652],[-5.106635,-0.668907,-6.468338,-4.303976,0.444647,6.172440,-3.006884,-1.908377,-7.197903,1.555437,2.168213,-9.659570,-0.463134],[-7.576922,-0.331169,-4.037162,6.726455,1.700570,0.777088,5.482240,1.234067,0.881554,8.407642,-2.359703,-3.886204,-3.511285],[0.362133,3.368678,-7.323341,6.352949,1.448520,7.670514,-9.727189,-9.720829,-1.533890,-0.845824,-4.545048,-8.048683,6.292876],[3.787071,-0.042776,5.550899,0.429264,0.574472,-3.086615,-5.610890,-2.028745,-4.038140,-3.233185,-1.457217,-6.075663,-2.325999],[-1.854619,3.686553,3.878741,8.284817,-6.006956,6.081415,0.764376,3.846351,5.921693,9.733660,5.999756,4.260632,-1.075140],[2.460030,-6.816710,1.395952,-7.662494,1.477368,-2.832531,6.669118,7.726104,-2.601098,2.169686,4.412777,9.386643,-3.337195],[-4.409517,-1.279095,1.782158,-1.619547,2.092649,-5.674458,-8.829867,4.229374,-8.592780,6.875832,-3.787545,7.439492,9.508324],[-0.667201,3.351638,1.579158,-3.003856,1.120838,1.016582,-2.067572,0.768811,-7.350165,-8.154568,-7.389356,-8.193713,-5.963912],[8.413436,-2.847272,-7.414942,6.056469,9.910688,-3.374834,-9.399119,7.034908,1.224543,-7.025366,-3.777581,-5.963298,0.496861],[-6.485279,-6.646006,-1.290247,-9.832330,-0.297037,5.308357,-3.606598,-0.215499,8.341671,-4.713159,0.632473,-2.071098,2.432882],[-5.229732,7.661640,-4.767219,-5.117984,-7.881592,8.078812,5.481639,-3.521687,6.460294,-3.554494,4.437005,2.128520,-9.047772],[7.017675,-9.852338,-2.682865,-3.756608,-7.819685,3.763454,0.531754,4.546517,-1.245641,-6.814974,-5.107098,3.385752,1.456200],[-1.725648,6.697096,2.310398,8.200276,0.262436,3.385989,5.951248,-8.218990,-7.326059,-6.276362,-0.817418,-7.550824,9.995028]],[[8.071032,7.917501,0.980109,1.806492,1.224554,1.801734,-6.414658,-9.831445,-4.980491,-1.825224,-9.308679,-1.675390,-4.761940],[3.059735,0.910623,5.790091,2.113058,-3.727790,-3.210498,8.771056,-9.598867,-4.177556,6.988816,-2.784245,-1.825927,8.900186],[5.223830,-8.991907,-0.733702,4.637022,-3.871121,-0.209712,6.052888,3.369454,-2.726323,2.310129,5.593347,-2.158778,-4.751755],[5.689307,0.547178,9.930304,-9.841573,-5.808631,9.266799,8.764442,4.694906,-8.209215,-6.435764,-2.795678,-7.001052,6.902427],[-5.754465,6.633262,8.722186,6.853808,9.661904,2.501882,-9.779047,-7.122540,5.632322,-8.853755,-7.381337,-3.977730,-7.772758],[7.021484,-3.393610,-0.976457,-5.902189,-8.837909,-4.216749,-0.276474,-6.952256,-9.665199,-5.312069,7.677111,-1.419445,-8.227695],[-6.384193,1.245175,6.999487,8.389441,9.385894,-6.788553,4.683699,7.046799,6.269667,9.274587,-9.061212,-3.542611,1.061257],[-9.705452,9.865352,-8.304883,9.995247,-9.710648,-2.387295,8.907197,-1.935105,-6.389701,-0.551762,4.988426,6.836773,4.337976],[-7.951780,-6.163535,8.684281,5.261929,7.286899,-9.910660,8.300061,-7.717970,0.940364,-7.933469,4.401660,8.992065,-4.954572],[0.563058,-5.059277,4.903314,2.887286,-7.677482,2.304740,3.780937,1.016710,6.446485,2.214352,-9.165561,1.489567,-6.681429],[1.662505,-6.160280,-3.540727,-7.648240,2.724913,-5.878417,4.477616,4.416305,-3.677965,-6.422606,3.707022,9.882148,0.345071],[5.810051,-1.429151,9.947503,9.919727,8.197678,-2.482057,-9.641188,-5.330457,-2.494471,1.536776,-0.914485,-3.313820,7.602457],[-0.761742,-0.733593,7.907491,7.113477,2.023621,3.126291,-8.100975,7.114957,-0.964803,-0.844495,-8.743801,8.558037,7.968555],[9.391478,-0.458040,6.053369,4.381709,-4.263127,5.339053,-9.832218,-7.206586,3.230371,2.176989,8.179626,2.760987,-2.888699]]], dtype = "float32")#candidate|4578|(7, 14, 13)|const|float32
bop_4579 = relay.bitwise_and(call_4572.astype('uint32'), relay.reshape(const_4578.astype('uint32'), relay.shape_of(call_4572))) # shape=(7, 14, 13)
bop_4582 = relay.bitwise_and(call_4573.astype('uint32'), relay.reshape(const_4578.astype('uint32'), relay.shape_of(call_4573))) # shape=(7, 14, 13)
var_4586 = relay.var("var_4586", dtype = "uint32", shape = (7, 14, 13))#candidate|4586|(7, 14, 13)|var|uint32
bop_4587 = relay.floor_mod(bop_4579.astype('float64'), relay.reshape(var_4586.astype('float64'), relay.shape_of(bop_4579))) # shape=(7, 14, 13)
bop_4590 = relay.floor_mod(bop_4582.astype('float64'), relay.reshape(var_4586.astype('float64'), relay.shape_of(bop_4582))) # shape=(7, 14, 13)
uop_4593 = relay.sigmoid(const_4578.astype('float32')) # shape=(7, 14, 13)
func_3574_call = mod.get_global_var('func_3574')
func_3576_call = mutated_mod.get_global_var('func_3576')
call_4598 = func_3574_call()
call_4599 = func_3574_call()
bop_4612 = relay.maximum(bop_4579.astype('uint32'), relay.reshape(var_4586.astype('uint32'), relay.shape_of(bop_4579))) # shape=(7, 14, 13)
bop_4615 = relay.maximum(bop_4582.astype('uint32'), relay.reshape(var_4586.astype('uint32'), relay.shape_of(bop_4582))) # shape=(7, 14, 13)
output = relay.Tuple([bop_4587,uop_4593,call_4598,bop_4612,])
output2 = relay.Tuple([bop_4590,uop_4593,call_4599,bop_4615,])
func_4623 = relay.Function([var_4586,], output)
mod['func_4623'] = func_4623
mod = relay.transform.InferType()(mod)
mutated_mod['func_4623'] = func_4623
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4624 = relay.var("var_4624", dtype = "uint32", shape = (7, 14, 13))#candidate|4624|(7, 14, 13)|var|uint32
func_4623_call = mutated_mod.get_global_var('func_4623')
call_4625 = func_4623_call(var_4624)
output = call_4625
func_4626 = relay.Function([var_4624], output)
mutated_mod['func_4626'] = func_4626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3521_call = mod.get_global_var('func_3521')
func_3523_call = mutated_mod.get_global_var('func_3523')
call_4644 = relay.TupleGetItem(func_3521_call(), 0)
call_4645 = relay.TupleGetItem(func_3523_call(), 0)
output = call_4644
output2 = call_4645
func_4646 = relay.Function([], output)
mod['func_4646'] = func_4646
mod = relay.transform.InferType()(mod)
output = func_4646()
func_4647 = relay.Function([], output)
mutated_mod['func_4647'] = func_4647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4736 = relay.var("var_4736", dtype = "float32", shape = (1, 16, 5))#candidate|4736|(1, 16, 5)|var|float32
uop_4737 = relay.cos(var_4736.astype('float32')) # shape=(1, 16, 5)
bop_4747 = relay.subtract(uop_4737.astype('uint8'), relay.reshape(var_4736.astype('uint8'), relay.shape_of(uop_4737))) # shape=(1, 16, 5)
func_2938_call = mod.get_global_var('func_2938')
func_2941_call = mutated_mod.get_global_var('func_2941')
var_4752 = relay.var("var_4752", dtype = "int8", shape = (1274,))#candidate|4752|(1274,)|var|int8
call_4751 = relay.TupleGetItem(func_2938_call(relay.reshape(var_4752.astype('int8'), [1274,])), 0)
call_4753 = relay.TupleGetItem(func_2941_call(relay.reshape(var_4752.astype('int8'), [1274,])), 0)
output = relay.Tuple([bop_4747,call_4751,var_4752,])
output2 = relay.Tuple([bop_4747,call_4753,var_4752,])
func_4760 = relay.Function([var_4736,var_4752,], output)
mod['func_4760'] = func_4760
mod = relay.transform.InferType()(mod)
mutated_mod['func_4760'] = func_4760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4760_call = mutated_mod.get_global_var('func_4760')
var_4762 = relay.var("var_4762", dtype = "float32", shape = (1, 16, 5))#candidate|4762|(1, 16, 5)|var|float32
var_4763 = relay.var("var_4763", dtype = "int8", shape = (1274,))#candidate|4763|(1274,)|var|int8
call_4761 = func_4760_call(var_4762,var_4763,)
output = call_4761
func_4764 = relay.Function([var_4762,var_4763,], output)
mutated_mod['func_4764'] = func_4764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_4778 = func_2510_call()
call_4779 = func_2510_call()
output = call_4778
output2 = call_4779
func_4785 = relay.Function([], output)
mod['func_4785'] = func_4785
mod = relay.transform.InferType()(mod)
output = func_4785()
func_4786 = relay.Function([], output)
mutated_mod['func_4786'] = func_4786
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4811 = relay.var("var_4811", dtype = "float32", shape = (6, 7, 2))#candidate|4811|(6, 7, 2)|var|float32
uop_4812 = relay.acos(var_4811.astype('float32')) # shape=(6, 7, 2)
output = uop_4812
output2 = uop_4812
func_4825 = relay.Function([var_4811,], output)
mod['func_4825'] = func_4825
mod = relay.transform.InferType()(mod)
var_4826 = relay.var("var_4826", dtype = "float32", shape = (6, 7, 2))#candidate|4826|(6, 7, 2)|var|float32
output = func_4825(var_4826)
func_4827 = relay.Function([var_4826], output)
mutated_mod['func_4827'] = func_4827
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4900 = relay.var("var_4900", dtype = "float32", shape = ())#candidate|4900|()|var|float32
var_4901 = relay.var("var_4901", dtype = "float32", shape = (1, 4, 13))#candidate|4901|(1, 4, 13)|var|float32
bop_4902 = relay.mod(var_4900.astype('float32'), var_4901.astype('float32')) # shape=(1, 4, 13)
output = relay.Tuple([bop_4902,])
output2 = relay.Tuple([bop_4902,])
func_4905 = relay.Function([var_4900,var_4901,], output)
mod['func_4905'] = func_4905
mod = relay.transform.InferType()(mod)
mutated_mod['func_4905'] = func_4905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4905_call = mutated_mod.get_global_var('func_4905')
var_4907 = relay.var("var_4907", dtype = "float32", shape = ())#candidate|4907|()|var|float32
var_4908 = relay.var("var_4908", dtype = "float32", shape = (1, 4, 13))#candidate|4908|(1, 4, 13)|var|float32
call_4906 = func_4905_call(var_4907,var_4908,)
output = call_4906
func_4909 = relay.Function([var_4907,var_4908,], output)
mutated_mod['func_4909'] = func_4909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3112_call = mod.get_global_var('func_3112')
func_3114_call = mutated_mod.get_global_var('func_3114')
call_4930 = relay.TupleGetItem(func_3112_call(), 1)
call_4931 = relay.TupleGetItem(func_3114_call(), 1)
func_1423_call = mod.get_global_var('func_1423')
func_1426_call = mutated_mod.get_global_var('func_1426')
const_4947 = relay.const([3.871126,-4.380808,-4.166512,0.931682,1.655089,-4.525787,9.089717,9.719215,-5.326529,6.341407,-1.397158,-3.573824,4.743031,-0.676565,2.636772,-1.812098,-7.912776,1.107251,-5.289141,0.991882,5.932532,2.670375,-4.910088,3.398420,8.552731,6.466514,3.703276,0.999679,5.281160,5.991298,-4.955683,1.884350,-5.537655,0.504240,9.177990,-7.865781,-5.925543,-5.264985,-2.292615,-9.439471,-0.153047,-5.867514,8.143663,-4.414574,4.461363,-2.685221,-0.951797,-4.213496,-4.107646,8.333298,9.954064,-8.584552,4.928524,-0.510751,-0.216776,4.370768,-8.221061,-9.379970,6.635933,-6.970951,-4.138988,2.151243,1.006670,4.091705,4.593815,7.927207,-0.006997,4.467197,-9.434821,-1.490820,-6.436291,-3.390855,5.093650,-7.513257,1.038741,1.990040,2.471612,-4.796419,-7.408759,-7.289160,-4.654179,-8.527041,2.467466,-4.929591,7.878512,-7.722131,-1.954740,1.597757,9.466846,8.093432,-9.856375,-4.677382,4.292421,-0.523904,-5.094707,9.738717,4.309325,-1.381243,6.482927,-9.744628,0.549525,-9.335165,8.122800,7.070725,-8.958827,-7.672054,0.965980,-8.853748,9.553301,-9.164292,-0.019018,4.672336,-1.671904,-7.675354,-5.777628,-3.813875,-5.532363,-4.323542,-6.103861,-4.703794,-9.167773,-2.791206,-6.507950,-7.140961,8.378505,1.238248,-1.336010,0.057023,-7.291201,4.896124,0.462854,-1.314160,-4.443051,1.657982,-6.063769,1.899583,-1.592568,-8.448205,5.913170,2.300559,-1.130342,-2.696249,8.489876,3.470549,0.510917,-6.747247,-6.696019,-7.058159,7.648156,-6.632697,-6.043496,-3.671771,1.208368,4.412255,1.702624,4.686318,7.933753,1.065438,-8.805222,1.679074,0.725108,-1.816743,-0.396466,-4.729391,-9.086685,-8.261877,5.870915,-1.923316,5.149360,1.301924,-9.851374,-0.882052,-2.848067,-2.762804,-6.981119,-8.929277,7.645940,-0.533419,-6.966397,-6.950008,6.454160,4.066751,2.071047,2.066626,9.093657,-5.849065,7.034875,3.434495,-8.370377,-7.692390,0.160821,-2.967519,5.286762,8.239276,4.973211,2.254966,-9.022043,0.350579,-2.625345,-5.252974,2.335218,8.152988,-3.816830,-1.688450,-9.530390,9.215444,-5.743348,-3.137901,-5.531020,7.161501,2.904957,-3.541625,6.037429,-1.067624,-3.142314,0.316100,9.210260,3.718037,2.229016,-7.541455,-4.304600,-9.592951,1.596437,7.610155,-3.284580,6.011624,9.167676,8.191753,-3.377874,-3.025403,-2.163073,-6.965254,-6.747376,3.378297,-2.919435,3.871658,-1.534069,0.286634,-1.726424,0.082033,2.714098,4.308822,7.319443,2.239014,-6.108453,-7.445297,0.383466,-1.582459,-6.624199,8.474372,8.207896,-5.500438,-3.413928,3.615456,-9.732623,6.201103,1.667963,-6.092736,7.084412,-8.957584,0.781745,0.805176,-0.459994,-4.150741,5.291019,1.831243,-4.390097,-5.811060,3.450011,9.247887,8.082644,4.639911,0.847878,5.314304,2.460786,-0.001826,-4.706215,1.924902,0.529257,-0.964611,7.106330,3.575197,0.615022,2.964775,6.938396,-1.046866,6.248275,-5.290335,1.191290,-3.259848,1.605291,9.169465,-9.334146,-2.615673,-9.194394,-8.490521,-9.179616,7.391172,-0.336440,-1.703263,6.596371,-8.972477,-3.422286,-1.814456,-8.570750,-8.079299,8.444413,7.197670,-0.116276,-4.260585,-5.630790,7.545631,-5.620805,-9.222049,0.961749,3.348294,5.446499,5.004019,-9.285980,2.957029,-3.572266,-2.422126,1.497332,2.604612,-0.034901,-5.796071,3.523873,1.178451,-0.567939,-4.557078,2.125594,3.038123,4.745074,-7.109132,-0.324777,-7.913736,-7.599072,-4.358404,-1.554355,8.354855,8.647031,-5.051662,8.425948,1.203638,2.047316,5.361525,5.960789,-0.275634,-5.147232,-3.899492,-7.270229,9.253239,6.167367,7.170170,-7.199703,-2.555672,-0.319643,-7.884269,6.088872,-4.283149,1.924719,5.529092,-2.387227,6.539626,-0.233298,1.187946,-3.820128,9.848518,-2.131499,9.362240,-8.051646,9.893939,-4.914656,-9.187840,2.650318,0.473396,4.411836,9.134388,-6.650956,-8.944611,-3.237439,9.985686,-8.512256,-3.666790,9.732399,5.115994,-6.683529,3.961903,-8.143775,-5.004900,-2.520886,-4.062294,-3.032450,2.800032,-7.554057,6.241782,2.905620,5.204049,-0.307377,-9.814613,-4.248528,4.838465,-3.853739,8.551153,-2.028706,-7.052687,6.125943,-5.913372,-7.226348,-8.745864,0.502317,0.573877,3.540272,7.522372,4.204134,9.184285,6.209712,-5.193062,7.046653,5.993758,0.619201,-0.003641,-6.787219,-6.125653,-9.684078,-4.115577,-8.153667,-9.725812,-0.629952,5.395007,-2.288187,5.998968,6.911826,2.099834,-6.350459,5.529666,0.395740,-7.230820,-3.926507,-9.876954,-9.087892,6.057149,6.173883,-9.989228,5.226151,8.305476,-2.487400,1.098657,-9.618950,1.654682,0.536633,-2.696646,-9.312470,3.425060,1.180690,-5.916091,-5.237695,-5.139703,2.347533,2.288456,1.493596,-3.465548,-2.155408,6.722763,8.948800,8.045812,5.935889,2.016247,-1.634779,6.187158,-2.809221,5.376563,7.760185,-1.890531,-3.111658,0.380218,-4.006498,-5.574723,2.057851,1.433683,-8.360194,-9.023857,-1.416537,9.287162,-5.726598,-0.686158,-1.168159,6.890425,-2.208780,0.121268,5.416624,-2.048999,-7.013933,-6.062108,-8.159701,-0.607064,-1.184774,7.004386,-4.735768,-2.739906,6.778294,-0.108986,-3.566147,4.708624,0.072333,-4.240643,3.503204,4.362432,2.712544,1.755571,0.211237,-1.758976,-2.462007,4.114540,-4.278987,3.992743,-8.648758,-6.233305,5.344340,5.606984,-0.409265,-6.460568,-9.447706,8.979283,2.228362,-6.337772,0.913582,1.582986,-6.740852,-7.227300,-0.680228,-7.620451,4.953779,2.574543,-3.545202,-1.154540,-3.446914,-2.673842,-1.509635,-7.364640,-2.939213,-7.120877,8.947221,-1.873051,-0.595826,4.140329,-8.510925,-8.435445,-6.988845,8.783696,-2.900462,7.074030,-9.961660,-8.802734,2.275302,-8.158913,0.256600,0.690595,-1.025062,-4.916495,5.409472,3.155599,0.763248,6.550588,-2.557806,-1.364260,-4.205700,6.845866,0.118329,5.474981,9.787883,-9.979529,7.715239,8.140888,6.767590,-1.851461,6.287274,7.473327,8.096456,-2.231480,1.109206,7.865153,-1.663701,-2.398707,-4.112075,8.428304,7.999354,-2.531192,7.465806,1.860808,8.723013,0.050312,7.394224,0.874839,-5.970300,-0.852725,-9.199935,9.070572,0.132308,-1.045484,-9.135994,8.397427,3.015782,-4.914908,9.560227,-0.886574,3.349463,-2.693137,-8.262168,-6.769914,5.622631,-7.483954,-4.014473,5.986289,4.814298,8.162818,4.984123,4.058427,-5.310816,1.102640,7.965301,-7.965256,-6.506205,-2.383420,-2.884034,6.665751,7.437101,0.019345,2.425993,9.724980,-5.031165,-3.350304,4.843405,-6.891874,8.281697,-3.318226,6.333341,-9.024835,0.002503,-2.781279,0.858567,2.097583,9.410302,-1.444785,7.561047,3.296064,-9.749057,1.042557,-4.854178,6.390957,-1.122282,-6.607032,-6.556007,9.156805,6.607866,7.227066,9.265539,-0.623627,7.248704,8.683591,-4.062033,-1.576696,5.072580,0.036406,4.673745,6.589776,-9.194104,-6.528664,-8.635085,-4.262482,6.850370,-6.604673,-8.775984,-3.024282,0.249440,6.184033,-8.752223,-5.610707,5.963664,3.976126,-2.318918,-5.369762,2.977639,4.684217,-3.233244,8.132101,2.686875,-6.304354,-2.182517,7.883489,5.308818,-7.041955,-2.953663,1.197128,-5.466039,3.173450,4.758495,6.267119,-1.770219,8.716716,-5.278646,-7.276219,-7.183486,0.933705,7.818493,9.371750,9.831864,1.513694,-6.850654,-0.733789,2.357720,-6.630922,3.266446,4.804380,-7.998013,1.227360,-9.723096,4.403407,-9.194769,5.698663,6.832555,-3.604776,-0.676272,1.673150,-8.731680,1.571979,7.492663,8.209443,7.482707,-2.959510,7.129574,-6.472148,8.079089,-1.476756,7.300278,-9.147212,-1.056091,3.855141,-3.176176,-0.937727,-9.204141,-0.390082,6.127716,3.900209,2.106907,-7.512636,2.718759,-3.397643,-1.965618,-1.457933,-2.782376,3.391787,-2.427981,-5.732477,6.049980,3.830235,-6.548575,7.411057,6.007544,7.842545,-7.586808,1.979339,-9.136475,-3.643947,5.181651,-5.628925,0.339523,-5.095288,4.495997,-3.878679,6.548901,-2.744678,-2.679965,0.130133,-8.232669,-0.237513,1.903983,-2.600352,0.349137,-2.014172,-7.790513,-4.857979,-4.267569,0.690940,1.258540,-6.453514,1.445343,5.356622,-3.544285,-8.510928,6.088533,0.496920,-5.955551,-8.849180,1.544336,-9.022976,-3.116406,2.168881,-0.739576,-2.178009,1.570583,-4.664870,2.837237,-3.878107,1.702944,3.625981,8.481466,6.804673,-6.479794,1.528721,-4.453122,1.792654,-9.437243,-1.012405,6.274585,1.260797,3.911944,-7.288514,9.609926,3.856938,2.496327,9.498763,5.489483,-1.258010,-1.680832,5.131617,-1.471384,1.596544,-6.438688,8.119556,-7.005830,-8.870339,-9.723676,8.116115,1.374717,-7.240257,5.978809,3.708324,-0.506744,-7.137195,5.830320,-5.850233,1.938622,-1.000945,3.045458,1.486065,-6.992462,1.251448,-8.237251,-0.897194,5.741392,-5.856657,-9.161451,-8.505177,-8.433147,-2.423952,-2.376235,5.939489,-3.569859,9.624894,9.641922,-5.014300,-2.935211,-3.651866,-1.704515,-8.560646,-4.243970,-3.085719,-9.802753,5.797467,1.959764,-8.311744,-2.460332,8.531717,-2.049450,-5.343554,-8.386085,3.546379,5.306340,9.214159,1.275109,3.932349,3.197566,-3.349047,-0.971862,-6.426745,0.134721,-7.614032,-9.562761,5.492304,-7.570070,-3.206389,-6.124292,-1.655897,5.411221,4.525364,6.415285,-1.104234,-0.995323,4.526262,3.310669,-0.447485,-3.316003,-6.872666,6.623530,0.949308,-2.165289,-8.893571,-7.429319,-3.513497,-8.881754,-6.115864,-3.943194,-4.669983,3.988409,-4.746604,7.921155,-2.874178,7.637897,-1.269086,-2.662261,-6.031808,3.058332,1.604107,2.926287,-4.860731,1.257379,-7.656604,6.521819,-4.694802,-2.610764,8.450054,9.911410,8.350741,9.908744,0.958588,-9.637968,-3.515074,-5.383272,8.456380,7.109855,-5.123025,-7.396400,-6.327911,6.043622,-1.296555,2.392794,-4.875825,5.187684,2.218309,2.374625,-5.499943,1.126115,-3.751414,-7.936750,3.078073,0.702045,-5.613088,-3.145832,8.241596,1.374481,8.657993,-5.190761,-1.489501,-8.482934,-0.193063,-5.491809,2.854897,1.213840,-9.531244,7.632844,6.252908,5.132156,-0.690117,-6.009799,0.615823,1.055087,0.270678,-5.416657,-4.525421,6.859564,5.773672,1.318875,6.222372,-6.971190,9.363439,-1.999071,-3.149306,-9.490692,5.344300,-4.577096,7.425626,-4.439526,6.205249,-3.618737,6.730815,-6.222573,8.117887,4.730056,-9.002411,-9.457848,8.513302,-7.182188,-3.929361,-0.756087,-5.375215,2.560742,-9.595089,-8.435460,-8.776598,3.233362,-8.742559,-4.568046,-0.725435,8.811043,5.979560,-0.460215,-2.545944,-2.454099,1.176048,-9.340063,-7.052591,4.268882,9.460798,-1.472254,-4.602729,7.347872,-8.271920,6.388940,6.290237,7.240050,-3.813621,7.851155,5.873376,-6.726511,-8.589999,-1.491478,-6.845509,-2.108771,1.134056,3.625344,-7.721953,-2.101857,8.748155,8.730676,-7.344822,4.668649,-6.626621,9.473058,4.510146,2.888553,2.863547,-4.575308,6.938975,5.834363,1.268704,2.743252,-9.996094,-0.813064,5.476259,-4.709738,9.431323,-9.467659,5.516442,8.696196,8.962354,-2.105705,-4.437103,-5.899737,4.200871,-7.913232,8.291198,4.050629,5.000760,7.790773,3.763388,1.426590,4.233999,2.872223,4.087314,1.946653,9.693298,1.134162,-2.361254,1.298557,-4.620158,8.407231,8.409492,1.371927,-3.568950,3.154011,-4.762992,-5.473133,7.294088,-6.177387,-9.399408,5.402593,-7.102159,8.945085,5.279271,-1.036871,-1.959294,5.133626,-3.908751,1.520443,3.556389,8.170380,8.508563,6.716179,5.757236,8.196007,-3.938168,1.694311,-0.747870,2.849628,5.603339,9.509597,7.329480,-1.245403,5.110531,1.799296,-3.718505,-8.978090,-5.933102,-4.260489,-0.363838,-7.087365,0.390020,1.469213,-9.567050,5.083201,-1.152703,-0.498241,0.116523,-4.178315,-2.285703,2.139592,-8.027731,-8.979507,3.981735,-6.469107,-1.872535,-1.422744,-7.194897,3.557242,4.091533,-1.794344,6.623873,3.997351,4.421346,7.763666,3.233646,4.424098,8.921086,5.111519,-7.002871,-8.214803,-9.574569,-9.181465,-2.232158,2.009071,-5.096283,3.008720,-0.562644,-3.120107,-0.230859,0.982507,-1.813960,4.206813,-7.553749,0.026579,-6.981569,-7.939563,-3.034760,8.547288,-6.455397,-3.217044,0.743858,8.156155,2.191888,6.608376,1.017731,3.658788,4.819817,4.722385,3.869328,0.836165,-9.510412,-4.036489,-2.017460,3.796622,2.943653,-1.652046,-9.914749,-8.596020,6.255547,2.334895,6.137580,5.230087,-7.463997,-9.330598,5.014304,4.923702,5.273476,-3.616909,-1.804047,7.191547,-0.364731,-9.083698,0.714652,-1.220561,-4.936054,2.409883,-4.471251,6.024822,-6.780683,2.123134,0.686475,3.820898,-3.298460,-7.044047,-4.174616,-9.734587,3.477651,0.493544,-6.300140,-9.933272,7.252607,-9.811182,-0.326283,-0.397658,6.232488,-4.653631,2.868149,-8.677267,4.818253,-4.178676,-5.373624,-6.334595,8.721589,-7.427657,6.426209,-6.761451,-9.839437,4.345949,-2.038144,3.482003,8.076203,-7.483588,-8.299471,-0.334796,-4.388058,0.855633,-1.719321,-4.726906,8.997745,5.572555,6.005167,7.414256,-3.392335,-9.784147,7.859143,-6.745534,1.942814,4.828533,8.752326,-0.087044,-1.817019,-7.561504,4.840213,-9.541478,5.838810,-3.673605,6.806045], dtype = "float64")#candidate|4947|(1274,)|const|float64
call_4946 = relay.TupleGetItem(func_1423_call(relay.reshape(const_4947.astype('float64'), [1274,])), 1)
call_4948 = relay.TupleGetItem(func_1426_call(relay.reshape(const_4947.astype('float64'), [1274,])), 1)
func_4204_call = mod.get_global_var('func_4204')
func_4205_call = mutated_mod.get_global_var('func_4205')
call_4957 = relay.TupleGetItem(func_4204_call(), 1)
call_4958 = relay.TupleGetItem(func_4205_call(), 1)
func_785_call = mod.get_global_var('func_785')
func_787_call = mutated_mod.get_global_var('func_787')
call_4959 = relay.TupleGetItem(func_785_call(), 0)
call_4960 = relay.TupleGetItem(func_787_call(), 0)
output = relay.Tuple([call_4930,call_4946,const_4947,call_4957,call_4959,])
output2 = relay.Tuple([call_4931,call_4948,const_4947,call_4958,call_4960,])
func_4962 = relay.Function([], output)
mod['func_4962'] = func_4962
mod = relay.transform.InferType()(mod)
mutated_mod['func_4962'] = func_4962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4962_call = mutated_mod.get_global_var('func_4962')
call_4963 = func_4962_call()
output = call_4963
func_4964 = relay.Function([], output)
mutated_mod['func_4964'] = func_4964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3690_call = mod.get_global_var('func_3690')
func_3691_call = mutated_mod.get_global_var('func_3691')
call_5017 = relay.TupleGetItem(func_3690_call(), 1)
call_5018 = relay.TupleGetItem(func_3691_call(), 1)
func_1841_call = mod.get_global_var('func_1841')
func_1843_call = mutated_mod.get_global_var('func_1843')
call_5020 = func_1841_call()
call_5021 = func_1841_call()
bop_5033 = relay.equal(call_5020.astype('bool'), relay.reshape(call_5017.astype('bool'), relay.shape_of(call_5020))) # shape=(1274,)
bop_5036 = relay.equal(call_5021.astype('bool'), relay.reshape(call_5018.astype('bool'), relay.shape_of(call_5021))) # shape=(1274,)
func_2679_call = mod.get_global_var('func_2679')
func_2681_call = mutated_mod.get_global_var('func_2681')
call_5047 = relay.TupleGetItem(func_2679_call(), 4)
call_5048 = relay.TupleGetItem(func_2681_call(), 4)
func_4332_call = mod.get_global_var('func_4332')
func_4334_call = mutated_mod.get_global_var('func_4334')
call_5049 = relay.TupleGetItem(func_4332_call(), 2)
call_5050 = relay.TupleGetItem(func_4334_call(), 2)
output = relay.Tuple([bop_5033,call_5047,call_5049,])
output2 = relay.Tuple([bop_5036,call_5048,call_5050,])
func_5066 = relay.Function([], output)
mod['func_5066'] = func_5066
mod = relay.transform.InferType()(mod)
output = func_5066()
func_5067 = relay.Function([], output)
mutated_mod['func_5067'] = func_5067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1692_call = mod.get_global_var('func_1692')
func_1693_call = mutated_mod.get_global_var('func_1693')
call_5100 = func_1692_call()
call_5101 = func_1692_call()
func_4262_call = mod.get_global_var('func_4262')
func_4263_call = mutated_mod.get_global_var('func_4263')
call_5102 = func_4262_call()
call_5103 = func_4262_call()
output = relay.Tuple([call_5100,call_5102,])
output2 = relay.Tuple([call_5101,call_5103,])
func_5105 = relay.Function([], output)
mod['func_5105'] = func_5105
mod = relay.transform.InferType()(mod)
mutated_mod['func_5105'] = func_5105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5105_call = mutated_mod.get_global_var('func_5105')
call_5106 = func_5105_call()
output = call_5106
func_5107 = relay.Function([], output)
mutated_mod['func_5107'] = func_5107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3450_call = mod.get_global_var('func_3450')
func_3451_call = mutated_mod.get_global_var('func_3451')
call_5186 = relay.TupleGetItem(func_3450_call(), 0)
call_5187 = relay.TupleGetItem(func_3451_call(), 0)
var_5197 = relay.var("var_5197", dtype = "float64", shape = (1274,))#candidate|5197|(1274,)|var|float64
bop_5198 = relay.mod(call_5186.astype('float32'), relay.reshape(var_5197.astype('float32'), relay.shape_of(call_5186))) # shape=(1274,)
bop_5201 = relay.mod(call_5187.astype('float32'), relay.reshape(var_5197.astype('float32'), relay.shape_of(call_5187))) # shape=(1274,)
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
call_5202 = relay.TupleGetItem(func_1823_call(), 1)
call_5203 = relay.TupleGetItem(func_1825_call(), 1)
func_1740_call = mod.get_global_var('func_1740')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_5225 = relay.TupleGetItem(func_1740_call(), 0)
call_5226 = relay.TupleGetItem(func_1741_call(), 0)
output = relay.Tuple([bop_5198,call_5202,call_5225,])
output2 = relay.Tuple([bop_5201,call_5203,call_5226,])
func_5232 = relay.Function([var_5197,], output)
mod['func_5232'] = func_5232
mod = relay.transform.InferType()(mod)
var_5233 = relay.var("var_5233", dtype = "float64", shape = (1274,))#candidate|5233|(1274,)|var|float64
output = func_5232(var_5233)
func_5234 = relay.Function([var_5233], output)
mutated_mod['func_5234'] = func_5234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_356_call = mod.get_global_var('func_356')
func_357_call = mutated_mod.get_global_var('func_357')
call_5317 = relay.TupleGetItem(func_356_call(), 1)
call_5318 = relay.TupleGetItem(func_357_call(), 1)
output = call_5317
output2 = call_5318
func_5355 = relay.Function([], output)
mod['func_5355'] = func_5355
mod = relay.transform.InferType()(mod)
mutated_mod['func_5355'] = func_5355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5355_call = mutated_mod.get_global_var('func_5355')
call_5356 = func_5355_call()
output = call_5356
func_5357 = relay.Function([], output)
mutated_mod['func_5357'] = func_5357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_415_call = mod.get_global_var('func_415')
func_416_call = mutated_mod.get_global_var('func_416')
call_5374 = relay.TupleGetItem(func_415_call(), 0)
call_5375 = relay.TupleGetItem(func_416_call(), 0)
output = relay.Tuple([call_5374,])
output2 = relay.Tuple([call_5375,])
func_5385 = relay.Function([], output)
mod['func_5385'] = func_5385
mod = relay.transform.InferType()(mod)
output = func_5385()
func_5386 = relay.Function([], output)
mutated_mod['func_5386'] = func_5386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4646_call = mod.get_global_var('func_4646')
func_4647_call = mutated_mod.get_global_var('func_4647')
call_5392 = func_4646_call()
call_5393 = func_4646_call()
var_5394 = relay.var("var_5394", dtype = "float64", shape = (1274,))#candidate|5394|(1274,)|var|float64
bop_5395 = relay.logical_or(call_5392.astype('bool'), relay.reshape(var_5394.astype('bool'), relay.shape_of(call_5392))) # shape=(1274,)
bop_5398 = relay.logical_or(call_5393.astype('bool'), relay.reshape(var_5394.astype('bool'), relay.shape_of(call_5393))) # shape=(1274,)
func_2697_call = mod.get_global_var('func_2697')
func_2699_call = mutated_mod.get_global_var('func_2699')
call_5403 = func_2697_call()
call_5404 = func_2697_call()
func_2938_call = mod.get_global_var('func_2938')
func_2941_call = mutated_mod.get_global_var('func_2941')
call_5415 = relay.TupleGetItem(func_2938_call(relay.reshape(bop_5395.astype('int8'), [1274,])), 3)
call_5416 = relay.TupleGetItem(func_2941_call(relay.reshape(bop_5395.astype('int8'), [1274,])), 3)
output = relay.Tuple([bop_5395,call_5403,call_5415,])
output2 = relay.Tuple([bop_5398,call_5404,call_5416,])
func_5424 = relay.Function([var_5394,], output)
mod['func_5424'] = func_5424
mod = relay.transform.InferType()(mod)
mutated_mod['func_5424'] = func_5424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5425 = relay.var("var_5425", dtype = "float64", shape = (1274,))#candidate|5425|(1274,)|var|float64
func_5424_call = mutated_mod.get_global_var('func_5424')
call_5426 = func_5424_call(var_5425)
output = call_5426
func_5427 = relay.Function([var_5425], output)
mutated_mod['func_5427'] = func_5427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4039_call = mod.get_global_var('func_4039')
func_4040_call = mutated_mod.get_global_var('func_4040')
call_5431 = relay.TupleGetItem(func_4039_call(), 0)
call_5432 = relay.TupleGetItem(func_4040_call(), 0)
const_5448 = relay.const([[[-6.858077,-7.697555,-0.015713,4.916105,-1.474093],[3.842896,4.007859,-4.261522,4.030652,4.328277],[1.875603,6.399157,-8.161603,8.997598,1.054658],[1.400894,1.354728,-1.205397,-2.699779,-2.530450],[3.375777,-4.563143,1.642227,0.002642,-3.484486],[0.942856,1.080351,-2.791644,3.142194,9.805492],[-0.524703,-9.130668,5.067995,2.932296,9.189649],[-0.119280,5.962586,4.352935,3.549319,1.466148],[6.210923,-5.657006,9.521737,-8.069267,-2.908241],[2.230922,-6.319275,-1.339930,-8.188769,-7.578664],[8.142744,0.550980,7.736031,-2.954808,9.205291],[-9.716099,-7.850996,-5.738610,9.916627,-1.601740]],[[-6.372017,-4.026507,8.263634,-9.202051,-9.640092],[9.228864,9.031429,4.327888,-3.811654,-6.965998],[2.182460,-8.475840,4.157090,-6.556161,-1.536167],[-0.073629,-5.567462,4.431479,-6.552531,-3.260568],[-8.224419,-7.156215,-7.261541,-6.548897,7.246850],[-4.371074,-2.519282,-1.695789,6.740078,-0.070445],[7.577383,4.925326,-2.341997,-8.706657,-6.004792],[9.751523,-3.896891,1.262732,0.485629,6.656918],[-7.937038,-1.620474,9.555914,-3.328180,8.331317],[-8.183156,4.817948,-8.594846,-2.443005,-9.372085],[0.179397,-0.791976,-8.359401,-1.985305,1.734924],[-8.476636,-7.914541,-0.869568,-9.456599,-0.393364]],[[-4.921403,-8.929740,-5.487957,3.724350,1.025994],[-4.262579,1.388860,1.152330,-3.683537,-2.325029],[6.141695,3.616237,2.913123,8.041332,-5.417954],[2.736899,-5.912471,-9.010127,-8.644287,-9.769837],[-4.940812,4.677239,2.285676,4.586180,-8.504412],[1.796514,-6.426962,8.897460,1.294550,2.364331],[9.265313,-0.899335,8.742352,-9.602089,-0.608392],[2.943167,1.709480,-6.394155,8.064323,-9.348165],[1.113126,-3.076397,-1.791628,1.443184,-5.784415],[3.084151,4.785486,-0.448899,0.477382,0.145556],[7.423944,-7.284569,8.744127,0.338212,-3.498028],[-1.946314,2.483112,8.815402,4.200629,6.298307]],[[-1.830126,6.447224,-0.649842,-4.001105,-3.513624],[4.498463,-3.614320,0.973901,8.987056,2.018164],[-4.707995,2.245822,-6.972292,-1.292317,-7.579499],[9.249667,-1.235100,-4.305596,-1.077741,-1.342268],[-7.793429,-4.340803,7.012230,-8.424570,-9.094882],[-1.455447,-9.871590,0.878128,7.789472,-5.449658],[4.613963,-9.857318,-9.719992,5.207750,8.820808],[5.520334,0.103886,-0.503144,3.623914,8.686314],[-9.508637,6.939464,-7.380104,7.249312,-6.049854],[4.657508,-3.373524,5.199868,-2.518109,9.167601],[9.610752,-2.465024,2.594524,3.299699,8.782856],[-1.242850,5.024812,-0.013566,-0.102717,6.241737]]], dtype = "float64")#candidate|5448|(4, 12, 5)|const|float64
bop_5449 = relay.equal(call_5431.astype('bool'), relay.reshape(const_5448.astype('bool'), relay.shape_of(call_5431))) # shape=(4, 12, 5)
bop_5452 = relay.equal(call_5432.astype('bool'), relay.reshape(const_5448.astype('bool'), relay.shape_of(call_5432))) # shape=(4, 12, 5)
output = relay.Tuple([bop_5449,])
output2 = relay.Tuple([bop_5452,])
func_5462 = relay.Function([], output)
mod['func_5462'] = func_5462
mod = relay.transform.InferType()(mod)
mutated_mod['func_5462'] = func_5462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5462_call = mutated_mod.get_global_var('func_5462')
call_5463 = func_5462_call()
output = call_5463
func_5464 = relay.Function([], output)
mutated_mod['func_5464'] = func_5464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3734_call = mod.get_global_var('func_3734')
func_3735_call = mutated_mod.get_global_var('func_3735')
call_5520 = func_3734_call()
call_5521 = func_3734_call()
func_2747_call = mod.get_global_var('func_2747')
func_2748_call = mutated_mod.get_global_var('func_2748')
call_5539 = relay.TupleGetItem(func_2747_call(), 1)
call_5540 = relay.TupleGetItem(func_2748_call(), 1)
func_1740_call = mod.get_global_var('func_1740')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_5552 = relay.TupleGetItem(func_1740_call(), 0)
call_5553 = relay.TupleGetItem(func_1741_call(), 0)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_5556 = func_2510_call()
call_5557 = func_2510_call()
output = relay.Tuple([call_5520,call_5539,call_5552,call_5556,])
output2 = relay.Tuple([call_5521,call_5540,call_5553,call_5557,])
func_5561 = relay.Function([], output)
mod['func_5561'] = func_5561
mod = relay.transform.InferType()(mod)
output = func_5561()
func_5562 = relay.Function([], output)
mutated_mod['func_5562'] = func_5562
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5573 = relay.var("var_5573", dtype = "uint8", shape = (12, 12, 16))#candidate|5573|(12, 12, 16)|var|uint8
var_5574 = relay.var("var_5574", dtype = "uint8", shape = (12, 12, 16))#candidate|5574|(12, 12, 16)|var|uint8
bop_5575 = relay.less(var_5573.astype('bool'), relay.reshape(var_5574.astype('bool'), relay.shape_of(var_5573))) # shape=(12, 12, 16)
uop_5582 = relay.erf(var_5573.astype('float32')) # shape=(12, 12, 16)
func_1796_call = mod.get_global_var('func_1796')
func_1798_call = mutated_mod.get_global_var('func_1798')
const_5585 = relay.const([-7.245485,-9.993257,7.644183,6.638979,7.359773,5.772217,-2.066390,-5.208466,4.282737,-4.909782,-9.102175,5.928447,-8.746331,4.580949,-5.844667,5.607274,-5.129458,-3.429424,8.054051,-8.358023,-5.311110,-9.897088,2.832709,5.387401,4.205608,4.546871,4.868237,-8.083579,-7.564222,6.683433,7.462501,-2.874373,1.955326,0.685495,-2.722019,2.961641,-0.702780,4.253506,5.211231,-5.628168,3.950531,-1.210843,-2.351729,-4.142975,-6.711948,9.904553,-2.830677,-6.337821,-0.193662,1.629108,7.772200,9.002874,-8.822685,-7.707703,4.597191,-9.987561,-6.222533,8.412272,9.144835,-5.350265,-6.387424,-4.924108,0.512891,-6.207224,-6.755476,-8.972393,-4.018098,1.203563,0.812304,-4.995773,9.496708,6.979808,-7.826070,-6.360958,-1.922524,7.955786,5.255070,9.133234,-8.153427,-0.715060,1.932712,3.568893,2.515261,6.105481,-2.227607,8.031195,-7.790943,9.116131,-6.351081,0.739720,-4.969989,5.353605,-8.489258,-8.439678,-7.672018,5.915579,-1.110196,9.114983,-8.007376,-3.508777,1.687934,-1.964271,-3.360098,-2.043421,1.494949,8.704596,-0.490510,3.693732,1.724808,-9.168560,2.422056,-1.008165,-9.787826,9.442034,-0.794058,5.531733,4.634303,6.120832,6.376880,-5.368417,6.810853,0.483479,-7.390980,-8.735732,-0.376459,8.356316,5.229526,9.982172,-2.796264,-7.993123,-7.461552,-9.296563,2.676779,0.046689,6.370131,9.801263,6.612730,-6.185263,-0.553830,-3.777701,7.358538,-9.619567,8.128632,-6.310022,-6.614691,-2.681791,-9.376983,-6.030381,-3.680304,4.699659,-0.834842,7.412702,6.025212,3.916468,-4.017968,-6.152597,-4.560559,-6.669675,0.857402,2.668119,8.352909,-4.431363,-0.180117,2.675736,9.232379,-0.928767,-6.945207,7.336500,3.685122,3.282948,-2.154240,-4.009707,-0.600809,-4.782774,2.318355,3.851030,5.447071,2.315368,-0.933165,8.040635,3.862162,9.305529,6.771752,9.334323,-8.302890,-7.917468,-0.064401,0.874986,-6.724562,-9.327379,8.926743,-5.397671,-6.377373,-3.996810,3.370323,-0.338840,9.073602,-4.842275,-4.335450,3.067566,-0.742947,-0.039276,-3.885327,6.379944,2.671692,9.392026,2.442096,-5.805131,0.112190,-3.879324,-6.075031,1.018768,9.647390,-4.674507,9.689501,-5.867695,0.668041,-9.301694,-3.440220,-3.535739,-2.777238,-8.701973,-6.166013,4.445734,2.973281,-7.431627,-0.914665,6.154896,5.748560,5.797148,8.694589,-8.980705,-5.935121,0.058183,-9.455583,6.848849,9.717578,-3.629952,-6.174673,9.123781,9.230279,1.606195,0.430326,4.195623,-0.441958,9.391897,-5.834875,-1.654620,-5.097601,0.202191,-7.475426,7.538179,-2.966073,6.431799,0.428753,-3.713774,-4.735528,-5.204149,-6.418696,-4.963891,7.592590,2.237100,8.976980,-5.148828,1.282324,-5.937749,-4.912865,7.281372,4.976072,6.223205,2.287773,8.736466,7.992308,0.040609,-6.894164,-1.615427,5.810904,4.612245,-0.204581,-9.098148,-6.783628,6.481255,4.632573,2.238250,1.336192,7.704388,6.092770,-2.553019,3.744608,-1.568942,5.883340,2.282846,-5.513635,1.726765,-5.903143,-2.472370,-5.060615,-1.292323,-8.866053,-4.513529,-2.421177,-8.815474,-3.484585,4.216964,-6.631670,3.627659,-9.483219,-0.710726,-2.935924,0.206048,-1.595659,1.279591,0.322134,-1.076026,1.213441,6.752028,-6.127222,3.676639,-5.406795,-7.663869,5.368064,-8.458767,-8.962432,-5.298327,-3.145845,-0.812950,-1.042916,2.567694,5.557529,7.194874,-7.499949,-6.510103,5.748852,-3.140314,-7.015316,-0.030233,-8.387442,-4.438557,-6.315769,1.104215,-0.593757,4.420276,8.684237,3.394237,-1.731355,-5.536716,3.660673,2.732844,-5.516358,9.789417,1.064946,-0.717927,-2.037027,-3.341963,-8.216166,-2.304396,6.417851,8.236187,-4.282764,4.412598,1.105027,-2.057300,0.234395,7.899234,5.942453,-3.839058,5.704539,-7.812345,2.070495,-8.628919,0.786294,9.924448,-7.305701,3.052097,2.237921,7.984682,-6.412087,8.332489,8.218132,-5.513078,0.880649,1.023690,2.216224,8.417982,5.139668,-9.372483,-0.170017,1.365619,-9.574680,6.676015,-3.662118,6.452091,-1.523950,-0.388060,9.477176,-4.031641,0.095320,7.298335,-8.993942,-2.093581,-5.095181,-5.520734,-8.398583,9.902880,-4.092011,-3.606845,4.557612,-7.331335,-2.668324,-0.306023,4.801099,8.613525,-0.989804,9.665958,3.668237,-4.719290,7.681928,-0.612916,4.915071,-4.502829,-8.357716,-7.139995,-5.894168,-5.188741,2.006632,6.056798,2.487556,6.736999,0.642206,-2.094226,-0.365458,4.541279,5.103913,6.204511,7.022890,6.489871,-9.600942,-4.874850,-1.662924,-3.225886,5.916200,-8.128712,-8.261623,-9.897150,-1.352825,-3.381019,-3.411840,-7.245125,3.705895,-7.815492,-2.493249,-9.966941,1.828056,8.907391,7.038462,1.891822,6.270216,-5.847819,6.736935,-7.143287,0.581015,7.216900,-6.026070,-0.088947,6.452785,-9.071317,-5.629044,1.310495,7.556804,5.877617,-0.218283,4.341472,-2.909116,5.826064,0.413591,2.159368,-5.394659,-6.221923,2.987703,-4.127222,5.969537,-9.250859,4.723005,5.777875,-0.759402,-7.250185,5.849074,9.629952,7.677316,1.879036,-1.111072,3.138260,4.333750,7.783838,-6.649423,-1.333769,-1.951575,2.907334,-3.547595,9.099091,2.168670,5.702359,9.082275,-1.115219,3.203812,4.506072,0.618077,-7.812695,-0.422293,2.248456,2.031648,-1.835102,-1.406126,2.543972,-4.324686,4.515428,-6.902283,-8.109074,4.467849,-3.773070,8.657472,-3.840453,9.339515,2.423529,-7.995717,-4.411770,-0.771915,-0.673090,7.156130,4.803597,-3.346105,5.917184,5.066460,-4.389461,6.226240,2.237479,6.327629,2.868694,-1.672322,-6.559788,0.497094,-3.073200,-2.663960,-8.943542,7.774739,6.706053,-3.761439,-9.621930,6.796223,3.826808,-7.630686,5.643232,-7.204254,-6.427037,5.630747,-3.179355,9.085546,0.556773,6.767629,7.492946,5.920036,-8.569341,-0.996061,-5.766150,9.059384,-6.551563,-3.306160,4.427965,-0.012544,-5.839064,9.275567,-9.381244,7.523091,-8.778480,2.493251,1.734046,-9.955393,-2.495268,0.262696,-5.529318,-4.707120,-0.332805,-2.660911,-4.033772,1.373798,2.066189,9.628360,0.177844,0.427982,3.326700,-1.657391,4.104815,-7.062666,7.886550,-4.827672,-5.778412,-5.699405,-5.207550,3.137532,8.533599,4.416955,1.783027,-7.858349,6.795906,-5.020691,-2.392458,-8.047611,2.646423,0.982598,-0.101390,2.089621,7.849676,9.205906,-1.506259,-3.560776,7.826746,-1.416563,-9.571319,7.677006,-1.955273,-8.390661,-3.091984,5.485742,9.269439,-6.859839,-1.164756,-0.804813,7.691460,2.655283,-3.057066,3.869039,0.350664,-1.670326,-9.896378,-3.348316,1.296142,6.760919,0.050024,-4.325643,-4.661230,-4.588569,-9.046588,-1.146457,-0.596817,3.011701,7.988855,-7.800293,3.900336,-9.533607,-0.069662,-6.935834,0.749693,-2.795085,-8.069311,8.630313,2.910579,-9.724740,-1.613703,-2.492185,-0.928460,-7.598154,-2.980581,0.429086,0.265704,-7.776778,-6.613136,-2.054202,-4.924236,-2.081889,0.606875,1.859354,9.525977,-0.777436,-6.190698,-4.378707,-1.500843,-9.459408,2.281405,-3.321828,7.036282,-0.349217,-2.176739,5.823859,9.456681,9.117983,9.365508,-0.043303,-0.677450,2.809791,7.778578,-3.206745,-8.791357,-7.319638,-5.843583,-6.731961,3.888119,9.928504,4.731933,3.490094,-2.916903,9.051243,6.192271,-0.342894,-4.639726,2.509085,3.120870,-2.880422,-0.766443,9.452482,8.257793,3.512324,-8.031261,-3.899402,0.813495,5.471469,7.121820,-7.696671,-4.447422,-3.139606,-2.475303,-9.190888,7.431794,9.078657,9.677833,-7.249568,-9.676313,-8.704833,-3.402008,0.934374,-0.739422,2.665663,2.856296,-2.906502,-4.962842,8.086750,-2.967506,-5.863072,-3.258168,-3.214450,-7.030430,-1.918061,-2.407597,-3.405313,-7.781534,-0.506508,-0.572622,-0.086476,3.544982,0.108974,7.395585,-4.910490,-5.467246,-5.488430,-5.515273,-6.735536,0.049640,-7.960186,3.052701,1.820874,-3.710645,-4.066835,2.467075,-0.092843,-7.054252,2.101614,-1.154176,0.076049,-6.570719,4.504849,-2.700474,-6.645072,0.515696,4.749413,9.534517,-8.699769,9.739291,-2.013444,9.598973,3.123803,-6.567862,3.010910,7.289341,4.943264,-0.329172,-3.319382,-5.789574,9.394195,1.738272,0.674616,2.779383,-4.823298,-8.504108,6.524573,-9.516528,4.757636,9.227852,9.763737,-6.786275,5.065980,-8.684616,2.241427,-6.098143,-1.557430,-1.339700,-5.550336,5.576971,-9.966963,7.729568,2.407487,-0.294771,-0.189247,9.528892,-4.058853,-3.073725,0.016798,-0.684630,2.859389,8.707732,-7.279566,9.856981,4.160477,-3.327477,1.507818,0.747840,6.836625,1.192679,-1.474505,6.200121,-0.646114,-7.975055,-8.269824,6.894004,6.221679,2.689123,-3.136963,-2.859896,2.991561,9.873104,-2.103984,3.479727,-2.348737,0.020485,-8.154416,-3.067901,-9.306617,-0.773155,1.752418,-2.099643,-8.337984,-4.193309,1.530501,-1.814125,8.652534,9.848714,-3.912100,0.185414,8.209611,5.612963,-9.435236,4.978527,-2.319588,8.512458,3.510471,-9.745814,-2.283997,-8.844601,0.584386,-3.175320,-9.380546,-3.716482,5.077334,4.958202,-2.731443,-4.084722,-9.314973,0.957893,0.472047,-7.634943,0.852510,-1.211901,-8.793036,6.936411,3.112979,-9.930813,1.890123,-7.507482,7.300065,7.766490,2.608103,-7.931167,6.110351,-1.520376,-7.770239,5.302726,-5.510085,5.507930,-7.037087,-1.092624,4.621483,3.548633,-7.322861,1.260320,-2.704458,1.704741,-6.406446,3.239832,-6.250292,-4.199749,3.717586,-0.055536,4.377798,-7.115746,-4.948014,6.940224,8.814419,-6.416299,-3.749893,4.329947,-9.499867,-4.919748,-3.195960,4.452187,-2.708506,-6.791470,2.328653,7.827091,-2.433954,0.769701,-5.589083,-2.015806,2.885292,5.909579,-3.360963,-8.033265,-1.039673,6.547263,0.952533,2.760047,-4.616904,1.577180,-5.342558,-4.539404,-7.918269,8.289122,-4.959127,-4.010740,-1.670986,-6.097501,8.066134,1.316573,8.089016,-6.705702,5.259347,-7.630762,1.388097,-9.966867,-3.376100,9.641570,-8.166526,-4.508632,-3.093622,-9.806261,-6.567136,-6.884675,-9.693519,5.761188,-8.197005,-9.128531,4.837740,-9.238630,-3.235371,-0.092706,9.846757,8.658873,-2.257246,8.171054,-8.596184,0.573211,-7.681115,-6.297173,-5.115637,-6.597103,-9.135668,-1.293730,-6.581911,-0.366979,9.134488,7.221699,-5.167423,-7.107278,-4.396675,-0.520484,-1.185948,-1.132135,2.171128,6.270835,-9.748226,-8.394602,-5.339154,8.763213,3.287743,9.912534,-4.442689,-6.074995,9.478201,-2.529811,-8.396629,-3.184313,-1.842632,2.540378,-8.688592,4.836653,-9.546660,5.834453,8.720977,7.429931,-1.092098,4.402189,-5.330526,-3.098761,7.693404,9.167978,5.217332,-5.465542,-1.870134,4.717127,-0.297933,-9.324383,-9.557399,3.080596,-8.597939,9.201170,3.604873,7.832546,-4.097517,0.042282,-7.437314,5.078771,-4.200007,-5.676670,8.423176,1.102614,-8.830942,-2.955888,9.633996,-0.055386,2.390697,3.514214,0.760442,-0.335912,-2.843441,8.016300,-8.563745,-3.526558,-0.455116,-7.183160,-1.116118,0.755859,4.039947,5.979651,8.620148,-3.752592,5.683864,4.775142,-2.056059,-1.661511,2.860415,-2.589806,-1.586984,-0.009041,1.671105,-4.632125,0.158071,-7.520475,-9.459626,8.747223,-3.668951,-4.882126,1.003900,-6.174095,5.766157,-6.679316,-6.702973,-5.805557,4.754331,3.537022,2.099085,-0.045289,2.101183,1.286313,5.017432,9.872421,-2.214303,5.722445,3.260607,-3.931856,5.150144,8.180227,9.103478,-7.298497,-2.728124,0.443441,-7.635225,-6.568690,-5.858216,3.682407,5.679797,0.847954,-5.310674,4.606820,-7.558256,-3.808466,3.983518,1.987167,6.443495,0.136541,8.826155,-2.795792,3.378790,9.237908,-3.482422,3.470855,8.431545,-9.842654,4.982258,4.365573,3.436708,7.602147,3.508644,2.744027,5.642633,0.051431,6.028564,-1.882402,-1.851182,-0.254482,-8.401527,-2.897205,3.831021,6.010199,7.185993,-0.432113,-9.193077,5.902388,3.858706,-0.773346,7.026541,7.321063,2.307632,8.441260,-1.894965,7.296853,8.607720,-6.751256,-3.025258,-8.969079,0.158810,-6.885960,-7.963882,5.616013,-9.206633,-0.354115,2.519614,-6.821300,5.540977,9.705854,3.969471,-3.915956,-9.468017,5.339744,-7.038102,-9.413113,3.507154,5.944820,-6.597166,0.844736,2.325243,2.346337,1.384943,0.577892,2.963340,-6.161987,0.523552,-3.544122,-1.752106,-7.428219,9.380070,-0.386238,0.767541,-0.233208,-7.468884,-2.306948,-1.234762,1.215080,3.433495,-2.244021,8.081444,-7.498541,-4.514080,-9.105903,-3.612567,6.458794,-1.161372,-2.064395,-2.702500,1.000358,-8.943725,-4.181325,3.865941,9.601372,-9.350032,-0.814078,-8.590452,6.003382,0.816749,5.364968,-6.260009,4.314987,-5.949894,5.054906,-4.637506,-2.316551,-4.047584,6.190303,-3.283789,0.107366,5.528840,-0.523076,-5.439722,-9.938375,5.696018,7.356061,-5.466188,-8.056499,9.367144,2.291726,1.230523,-2.503735,-2.437893,0.427890,-7.800548,-1.583102,-7.846680,-6.411598,-7.570091,-3.260209,-2.439281,1.206104,-6.586666,-6.897818,8.090717,-0.127435,5.519987,3.990318,-5.706470,-0.201764,6.665799,-2.244545,6.422789,-1.733290,6.126762,7.761567,-6.828282,3.429961,7.726539,-8.767447,0.850337,7.918063,-0.449105,8.216797,9.518313,0.497207,-3.526283,9.527480,-7.293949,8.195303,-9.930487,-3.882729,8.348965,-7.775210,5.519711,-9.950634,0.452806,0.787511,-2.686568,-8.477519,-5.481774,-5.800558,-7.546806,-5.594783,2.812360,-9.857618,-2.888429,-0.257079,-6.403274,-7.093597,-9.768633,3.665919,-4.002779,6.384814,2.678958,5.329681,1.911397,-8.832133,1.610747,6.485599,-9.602143,-3.879125,-6.861445,-3.974033,6.678886,-5.721298,6.683695,5.358533,-7.364623,-5.061445,0.876333,7.861750,2.071220,-3.500775,-4.593296,2.421339,5.731806,1.760166,8.095265,8.484199,6.497789,-4.252559,2.115133,-8.054165,-3.358518,0.151217,-2.638694,-0.422851,-2.123842,-2.481581,-8.171942,4.164618,-9.945417,6.323940,-3.077534,-8.772399,-8.930460,5.891678,5.684549,4.458876,-2.050833,5.199583,5.810792,3.625748,-7.101421,-4.046902,5.510248,-2.031687,2.446849,1.130961,-0.046796,0.487112,-7.351798,-4.636904,-4.056681,9.836952,-6.678987,-5.323404,7.050669,7.360237,3.229238,-8.570832,8.486087,-3.545538,3.078066,4.308644,-4.165304,-4.200512,2.093956,-3.842401,6.567323,-6.874054,-7.828012,1.937425,-0.120536,2.955964,9.767159,3.423338,-4.041372,7.444375,3.492124,-7.525056,6.403402,3.096505,2.570965,-7.935009,5.436676,9.974758,1.903570,0.118606,5.108487,-2.388377,5.796109,-1.060662,0.377750,4.111848,-0.579134,-3.649352,-8.804796,-3.183892,0.422595,-0.323060,2.302866,-2.174904,6.893662,0.235461,-4.228401,5.518042,7.722716,-3.518078,7.661702,1.490356,4.750844,1.330605,3.076444,6.572321,-0.962599,-9.461049,7.595903,0.049565,-4.698625,-2.205887,-2.611873,-6.217257,5.713174,-1.642608,-3.108259,-3.122104,-1.175278,-1.917620,0.643277,-6.892025,2.993443,3.722706,-2.684263,5.632394,2.100576,8.863951,2.041928,5.387552,-3.723650,4.227658,-8.596747,-5.893513,0.945623,-2.459737,5.547195,5.938058,1.363200,4.049696], dtype = "float64")#candidate|5585|(1456,)|const|float64
call_5584 = relay.TupleGetItem(func_1796_call(relay.reshape(const_5585.astype('float64'), [1456,])), 1)
call_5586 = relay.TupleGetItem(func_1798_call(relay.reshape(const_5585.astype('float64'), [1456,])), 1)
output = relay.Tuple([bop_5575,uop_5582,call_5584,const_5585,])
output2 = relay.Tuple([bop_5575,uop_5582,call_5586,const_5585,])
func_5587 = relay.Function([var_5573,var_5574,], output)
mod['func_5587'] = func_5587
mod = relay.transform.InferType()(mod)
mutated_mod['func_5587'] = func_5587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5587_call = mutated_mod.get_global_var('func_5587')
var_5589 = relay.var("var_5589", dtype = "uint8", shape = (12, 12, 16))#candidate|5589|(12, 12, 16)|var|uint8
var_5590 = relay.var("var_5590", dtype = "uint8", shape = (12, 12, 16))#candidate|5590|(12, 12, 16)|var|uint8
call_5588 = func_5587_call(var_5589,var_5590,)
output = call_5588
func_5591 = relay.Function([var_5589,var_5590,], output)
mutated_mod['func_5591'] = func_5591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_874_call = mod.get_global_var('func_874')
func_875_call = mutated_mod.get_global_var('func_875')
call_5642 = relay.TupleGetItem(func_874_call(), 1)
call_5643 = relay.TupleGetItem(func_875_call(), 1)
func_3498_call = mod.get_global_var('func_3498')
func_3500_call = mutated_mod.get_global_var('func_3500')
call_5663 = relay.TupleGetItem(func_3498_call(relay.reshape(call_5642.astype('bool'), [1274,])), 1)
call_5664 = relay.TupleGetItem(func_3500_call(relay.reshape(call_5642.astype('bool'), [1274,])), 1)
func_415_call = mod.get_global_var('func_415')
func_416_call = mutated_mod.get_global_var('func_416')
call_5678 = relay.TupleGetItem(func_415_call(), 0)
call_5679 = relay.TupleGetItem(func_416_call(), 0)
output = relay.Tuple([call_5642,call_5663,call_5678,])
output2 = relay.Tuple([call_5643,call_5664,call_5679,])
func_5682 = relay.Function([], output)
mod['func_5682'] = func_5682
mod = relay.transform.InferType()(mod)
output = func_5682()
func_5683 = relay.Function([], output)
mutated_mod['func_5683'] = func_5683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5385_call = mod.get_global_var('func_5385')
func_5386_call = mutated_mod.get_global_var('func_5386')
call_5692 = relay.TupleGetItem(func_5385_call(), 0)
call_5693 = relay.TupleGetItem(func_5386_call(), 0)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_5697 = func_2510_call()
call_5698 = func_2510_call()
func_2938_call = mod.get_global_var('func_2938')
func_2941_call = mutated_mod.get_global_var('func_2941')
call_5704 = relay.TupleGetItem(func_2938_call(relay.reshape(call_5692.astype('int8'), [1274,])), 2)
call_5705 = relay.TupleGetItem(func_2941_call(relay.reshape(call_5692.astype('int8'), [1274,])), 2)
output = relay.Tuple([call_5692,call_5697,call_5704,])
output2 = relay.Tuple([call_5693,call_5698,call_5705,])
func_5729 = relay.Function([], output)
mod['func_5729'] = func_5729
mod = relay.transform.InferType()(mod)
mutated_mod['func_5729'] = func_5729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5729_call = mutated_mod.get_global_var('func_5729')
call_5730 = func_5729_call()
output = call_5730
func_5731 = relay.Function([], output)
mutated_mod['func_5731'] = func_5731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_5749 = func_555_call()
call_5750 = func_555_call()
output = call_5749
output2 = call_5750
func_5752 = relay.Function([], output)
mod['func_5752'] = func_5752
mod = relay.transform.InferType()(mod)
mutated_mod['func_5752'] = func_5752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5752_call = mutated_mod.get_global_var('func_5752')
call_5753 = func_5752_call()
output = call_5753
func_5754 = relay.Function([], output)
mutated_mod['func_5754'] = func_5754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1613_call = mod.get_global_var('func_1613')
func_1614_call = mutated_mod.get_global_var('func_1614')
call_5778 = func_1613_call()
call_5779 = func_1613_call()
uop_5791 = relay.sigmoid(call_5778.astype('float64')) # shape=(1274,)
uop_5793 = relay.sigmoid(call_5779.astype('float64')) # shape=(1274,)
output = relay.Tuple([uop_5791,])
output2 = relay.Tuple([uop_5793,])
func_5799 = relay.Function([], output)
mod['func_5799'] = func_5799
mod = relay.transform.InferType()(mod)
mutated_mod['func_5799'] = func_5799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5799_call = mutated_mod.get_global_var('func_5799')
call_5800 = func_5799_call()
output = call_5800
func_5801 = relay.Function([], output)
mutated_mod['func_5801'] = func_5801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1229_call = mod.get_global_var('func_1229')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_5917 = relay.TupleGetItem(func_1229_call(), 0)
call_5918 = relay.TupleGetItem(func_1231_call(), 0)
output = relay.Tuple([call_5917,])
output2 = relay.Tuple([call_5918,])
func_5921 = relay.Function([], output)
mod['func_5921'] = func_5921
mod = relay.transform.InferType()(mod)
mutated_mod['func_5921'] = func_5921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5921_call = mutated_mod.get_global_var('func_5921')
call_5922 = func_5921_call()
output = call_5922
func_5923 = relay.Function([], output)
mutated_mod['func_5923'] = func_5923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1229_call = mod.get_global_var('func_1229')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_5924 = relay.TupleGetItem(func_1229_call(), 0)
call_5925 = relay.TupleGetItem(func_1231_call(), 0)
output = call_5924
output2 = call_5925
func_5932 = relay.Function([], output)
mod['func_5932'] = func_5932
mod = relay.transform.InferType()(mod)
mutated_mod['func_5932'] = func_5932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5932_call = mutated_mod.get_global_var('func_5932')
call_5933 = func_5932_call()
output = call_5933
func_5934 = relay.Function([], output)
mutated_mod['func_5934'] = func_5934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4646_call = mod.get_global_var('func_4646')
func_4647_call = mutated_mod.get_global_var('func_4647')
call_6052 = func_4646_call()
call_6053 = func_4646_call()
output = call_6052
output2 = call_6053
func_6063 = relay.Function([], output)
mod['func_6063'] = func_6063
mod = relay.transform.InferType()(mod)
output = func_6063()
func_6064 = relay.Function([], output)
mutated_mod['func_6064'] = func_6064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
call_6077 = relay.TupleGetItem(func_1823_call(), 0)
call_6078 = relay.TupleGetItem(func_1825_call(), 0)
uop_6092 = relay.asin(call_6077.astype('float64')) # shape=(1274,)
uop_6094 = relay.asin(call_6078.astype('float64')) # shape=(1274,)
uop_6097 = relay.atanh(uop_6092.astype('float64')) # shape=(1274,)
uop_6099 = relay.atanh(uop_6094.astype('float64')) # shape=(1274,)
output = relay.Tuple([uop_6097,])
output2 = relay.Tuple([uop_6099,])
func_6115 = relay.Function([], output)
mod['func_6115'] = func_6115
mod = relay.transform.InferType()(mod)
output = func_6115()
func_6116 = relay.Function([], output)
mutated_mod['func_6116'] = func_6116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5355_call = mod.get_global_var('func_5355')
func_5357_call = mutated_mod.get_global_var('func_5357')
call_6132 = func_5355_call()
call_6133 = func_5355_call()
output = relay.Tuple([call_6132,])
output2 = relay.Tuple([call_6133,])
func_6142 = relay.Function([], output)
mod['func_6142'] = func_6142
mod = relay.transform.InferType()(mod)
output = func_6142()
func_6143 = relay.Function([], output)
mutated_mod['func_6143'] = func_6143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3049_call = mod.get_global_var('func_3049')
func_3051_call = mutated_mod.get_global_var('func_3051')
call_6154 = relay.TupleGetItem(func_3049_call(), 0)
call_6155 = relay.TupleGetItem(func_3051_call(), 0)
func_643_call = mod.get_global_var('func_643')
func_645_call = mutated_mod.get_global_var('func_645')
call_6167 = relay.TupleGetItem(func_643_call(), 0)
call_6168 = relay.TupleGetItem(func_645_call(), 0)
output = relay.Tuple([call_6154,call_6167,])
output2 = relay.Tuple([call_6155,call_6168,])
func_6172 = relay.Function([], output)
mod['func_6172'] = func_6172
mod = relay.transform.InferType()(mod)
output = func_6172()
func_6173 = relay.Function([], output)
mutated_mod['func_6173'] = func_6173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3450_call = mod.get_global_var('func_3450')
func_3451_call = mutated_mod.get_global_var('func_3451')
call_6174 = relay.TupleGetItem(func_3450_call(), 0)
call_6175 = relay.TupleGetItem(func_3451_call(), 0)
output = call_6174
output2 = call_6175
func_6236 = relay.Function([], output)
mod['func_6236'] = func_6236
mod = relay.transform.InferType()(mod)
output = func_6236()
func_6237 = relay.Function([], output)
mutated_mod['func_6237'] = func_6237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4204_call = mod.get_global_var('func_4204')
func_4205_call = mutated_mod.get_global_var('func_4205')
call_6297 = relay.TupleGetItem(func_4204_call(), 1)
call_6298 = relay.TupleGetItem(func_4205_call(), 1)
func_2319_call = mod.get_global_var('func_2319')
func_2320_call = mutated_mod.get_global_var('func_2320')
call_6355 = relay.TupleGetItem(func_2319_call(), 0)
call_6356 = relay.TupleGetItem(func_2320_call(), 0)
output = relay.Tuple([call_6297,call_6355,])
output2 = relay.Tuple([call_6298,call_6356,])
func_6359 = relay.Function([], output)
mod['func_6359'] = func_6359
mod = relay.transform.InferType()(mod)
output = func_6359()
func_6360 = relay.Function([], output)
mutated_mod['func_6360'] = func_6360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3112_call = mod.get_global_var('func_3112')
func_3114_call = mutated_mod.get_global_var('func_3114')
call_6442 = relay.TupleGetItem(func_3112_call(), 2)
call_6443 = relay.TupleGetItem(func_3114_call(), 2)
uop_6456 = relay.atan(call_6442.astype('float32')) # shape=(13, 117)
uop_6458 = relay.atan(call_6443.astype('float32')) # shape=(13, 117)
output = uop_6456
output2 = uop_6458
func_6470 = relay.Function([], output)
mod['func_6470'] = func_6470
mod = relay.transform.InferType()(mod)
output = func_6470()
func_6471 = relay.Function([], output)
mutated_mod['func_6471'] = func_6471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3703_call = mod.get_global_var('func_3703')
func_3704_call = mutated_mod.get_global_var('func_3704')
call_6485 = relay.TupleGetItem(func_3703_call(), 0)
call_6486 = relay.TupleGetItem(func_3704_call(), 0)
uop_6488 = relay.atan(call_6485.astype('float64')) # shape=(7, 14, 13)
uop_6490 = relay.atan(call_6486.astype('float64')) # shape=(7, 14, 13)
output = relay.Tuple([uop_6488,])
output2 = relay.Tuple([uop_6490,])
func_6491 = relay.Function([], output)
mod['func_6491'] = func_6491
mod = relay.transform.InferType()(mod)
mutated_mod['func_6491'] = func_6491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6491_call = mutated_mod.get_global_var('func_6491')
call_6492 = func_6491_call()
output = call_6492
func_6493 = relay.Function([], output)
mutated_mod['func_6493'] = func_6493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3112_call = mod.get_global_var('func_3112')
func_3114_call = mutated_mod.get_global_var('func_3114')
call_6505 = relay.TupleGetItem(func_3112_call(), 3)
call_6506 = relay.TupleGetItem(func_3114_call(), 3)
output = call_6505
output2 = call_6506
func_6507 = relay.Function([], output)
mod['func_6507'] = func_6507
mod = relay.transform.InferType()(mod)
output = func_6507()
func_6508 = relay.Function([], output)
mutated_mod['func_6508'] = func_6508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_568_call = mod.get_global_var('func_568')
func_569_call = mutated_mod.get_global_var('func_569')
call_6516 = relay.TupleGetItem(func_568_call(), 0)
call_6517 = relay.TupleGetItem(func_569_call(), 0)
uop_6535 = relay.sqrt(call_6516.astype('float32')) # shape=(1274,)
uop_6537 = relay.sqrt(call_6517.astype('float32')) # shape=(1274,)
output = uop_6535
output2 = uop_6537
func_6552 = relay.Function([], output)
mod['func_6552'] = func_6552
mod = relay.transform.InferType()(mod)
output = func_6552()
func_6553 = relay.Function([], output)
mutated_mod['func_6553'] = func_6553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3598_call = mod.get_global_var('func_3598')
func_3600_call = mutated_mod.get_global_var('func_3600')
call_6583 = relay.TupleGetItem(func_3598_call(), 0)
call_6584 = relay.TupleGetItem(func_3600_call(), 0)
func_5232_call = mod.get_global_var('func_5232')
func_5234_call = mutated_mod.get_global_var('func_5234')
const_6616 = relay.const([[-4.000618,3.721220,1.045618,2.992063,6.977810,-1.758926,1.250363,7.738844,8.088988,-1.687328,-5.551386,-3.774318,0.466433,-2.405694],[-1.689255,-2.135491,-3.252679,8.448950,6.588260,7.487040,-5.609874,-8.337971,5.385504,-2.810943,0.300924,6.524954,-7.233444,-6.539186],[-1.358602,7.172938,7.067140,1.179861,-9.489441,8.041010,1.981188,-7.916347,-5.028643,9.207112,-3.447007,-6.064202,-0.860742,8.875860],[1.092324,1.144183,-0.789857,-4.126397,-6.159064,-2.116761,-7.361994,-7.851571,-6.163310,9.411515,-3.312851,-4.590700,6.495587,-5.692913],[-7.655726,-9.734427,3.614877,7.174184,1.471499,3.634442,7.093889,-1.899597,7.901614,-3.381478,0.909201,-8.168067,-9.376742,-9.362032],[0.580774,-2.925745,-0.384429,4.946746,-1.808882,6.113542,0.382185,2.870173,-5.158336,-9.713869,-3.727888,5.354783,7.369546,4.279669],[-1.130744,4.552594,6.872125,-5.420363,-9.558098,7.543053,-0.155033,-8.532555,-0.810350,7.387855,5.180120,-6.471783,-6.662148,6.170588],[-5.629087,5.923638,-7.012426,-1.241047,-1.955458,6.246967,9.390872,2.906977,-8.194308,4.801868,6.311368,2.193109,-2.279424,1.127539],[-1.617300,-0.546813,7.586321,2.720116,-9.982631,4.418391,-6.599804,-7.400277,-0.684484,-9.699511,0.876491,7.550520,-1.179503,-3.343077],[-7.655175,3.962024,-2.383724,9.919032,9.627250,-2.128925,7.145517,8.700802,-5.721972,7.066840,7.733909,2.565940,8.574970,-7.914460],[-2.555055,-5.840006,-1.591928,4.662455,-0.460330,-6.375641,4.383015,2.666403,8.477036,6.122217,-6.300924,-8.741092,-2.387485,6.160705],[-7.904702,4.930098,-7.942526,6.966167,5.008823,6.971289,-0.572130,0.616036,-4.189277,-3.102460,0.331791,-1.043853,-0.548150,-2.452388],[-1.395075,-3.794907,9.075195,0.599781,9.497396,-4.656619,6.425973,-4.128873,9.943183,-6.161068,3.116175,4.303594,-8.681144,-7.111942],[-3.925676,0.007025,-9.760620,0.804726,3.657082,0.384239,-6.990048,4.665900,-4.600009,2.208281,6.818161,6.645826,-8.903792,-4.929046],[-8.760058,8.918275,8.208597,-0.948052,-9.826955,7.529511,-1.648324,-5.135985,-3.964516,4.425693,-8.058243,-1.873212,-2.494214,-2.824199],[5.052294,1.738319,4.682193,-6.939867,1.176979,3.795945,7.675467,5.126811,2.079993,-0.681883,6.099419,-5.407680,-2.758351,2.433787],[5.622312,1.689580,-6.854048,-4.351943,1.855262,-8.736509,9.348963,-4.346158,-1.682820,1.940905,2.370221,9.532784,6.089178,-7.383173],[8.108027,-6.106862,2.442447,8.712692,-8.770967,-5.279980,-2.327561,-2.864059,-2.841363,-5.974629,-9.669714,-8.628560,1.201249,-2.113756],[-8.092669,-2.037546,-6.904943,-6.334503,-0.006921,-4.386268,6.219397,-6.542639,1.757543,-8.285682,3.013153,3.330343,-7.809477,-9.359058],[5.116858,-4.768022,8.497084,2.948569,2.267968,-4.058612,2.694966,-0.268725,5.986708,4.660849,7.064409,-0.069250,-4.923818,-0.606846],[0.590954,2.871697,0.977801,-3.562877,-5.241467,-8.030765,4.512816,-1.424252,4.798596,-4.266509,5.690667,-4.298184,5.189603,-7.686521],[-9.183750,-5.927140,6.511062,-7.101125,7.842134,8.269675,4.583493,3.067094,-7.682581,1.764522,-8.796402,-2.052940,7.472188,-0.914589],[4.978885,8.472507,6.848105,-1.950023,4.670870,1.267716,1.269110,-6.722724,-1.115638,-8.903776,3.255374,9.742856,8.684843,-0.844457],[-0.928885,6.222606,5.104814,8.803815,-9.811680,2.042201,-1.532584,-3.324186,0.662127,-7.111878,-4.935499,5.442437,0.467014,5.405234],[-0.132257,9.029876,-5.564773,1.808718,4.532880,-5.019150,-5.450170,4.041683,-4.264582,-0.555946,4.632006,5.772361,9.782597,3.880322],[3.693699,3.216215,-3.564938,-0.548896,0.424106,-4.816679,-7.218010,-3.708442,-6.780014,-4.185474,1.570268,2.817361,7.381863,-4.816642],[9.418849,4.059116,-5.594124,-2.709567,-7.144767,0.268939,-2.900965,-8.263413,-5.094757,5.745672,4.227944,3.676539,5.347417,9.634605],[-8.757514,2.180086,1.121977,-0.909215,-1.451790,2.805273,-8.937609,-6.754267,-3.597234,3.660193,-8.047712,-1.054102,-7.223510,-5.282656],[-9.665195,4.541395,-0.326859,-0.547181,8.963866,0.317784,2.900584,-1.620905,-4.016675,1.490498,-4.947424,2.459507,4.509010,-4.052516],[-6.049862,2.344261,-7.546552,0.964251,-9.006627,-7.648992,-1.433081,4.718676,-5.320323,0.467337,-6.651780,-5.536304,-3.646526,0.979787],[2.114560,3.835473,4.801201,-3.921814,7.657814,-7.486683,6.612042,-2.564274,-7.200540,9.051522,5.099230,7.232088,5.621461,-5.265933],[-9.971332,-9.412266,4.263423,6.012342,-7.552441,-0.854211,2.084112,3.640651,-1.528914,-6.894669,5.718473,4.993504,3.392568,6.074537],[-9.167326,-8.684019,0.790348,-1.172582,-8.860574,1.037793,2.249102,0.175057,-0.819937,4.758908,-0.469552,-7.741710,-4.613918,-9.365353],[-7.100022,-1.915403,-6.629376,7.984742,1.466715,-9.171388,1.727385,5.940303,-4.312211,7.938543,3.401307,4.808229,2.327995,-6.491458],[6.194279,0.594322,-7.944718,9.712535,-0.209139,-1.319847,-9.984983,3.033126,8.192272,0.478681,9.014267,-2.350354,8.342034,-1.653998],[6.245776,-0.813872,-6.268646,7.985420,-4.448573,8.527716,7.401613,-6.450958,-8.337007,-5.529547,-4.614955,9.519468,-9.606685,1.482832],[7.507821,-0.476631,-7.208017,-3.938920,-1.601436,9.818345,-4.717915,5.069560,-3.286909,7.747105,-6.979234,-5.170795,4.183739,-2.944220],[-0.728911,-4.647145,-5.161211,-6.623973,0.535574,6.830297,-6.098313,-6.815136,0.069333,4.838314,-0.124627,-1.455246,-6.646538,9.592085],[3.714515,7.628468,2.256506,1.734461,2.870520,-1.416924,-9.995101,-5.317111,-8.871288,3.709089,6.725776,-7.284337,-9.116717,-5.286461],[2.989118,-1.696534,2.481753,-7.351430,5.025934,-9.534282,-0.078472,-5.310332,-2.017968,7.530865,2.858583,-9.750607,4.713058,-2.807648],[-6.224623,-6.617641,2.020129,-0.713425,8.052232,0.519442,-4.974943,8.829405,6.799733,-0.675510,-2.819971,-4.526441,-3.456482,-2.099464],[0.171217,5.158868,2.545288,-7.621827,0.670372,-1.866177,5.029318,3.788658,5.555147,-8.889383,-0.453011,0.993023,7.987481,1.407662],[-9.656897,4.885074,-3.584517,2.732952,3.498478,-3.248977,-4.440549,5.244976,1.222300,-8.837634,5.141375,2.577871,5.919085,-6.725631],[-6.568216,-9.014338,-9.701225,1.173254,4.912221,-5.082907,-0.049086,0.705215,3.575642,-4.092544,3.578409,-1.726773,-0.630486,1.897953],[-1.183576,-5.864088,4.298308,8.828680,-8.167745,-6.341979,-7.715661,-9.874183,-7.216818,1.630368,-0.879310,-7.975470,-7.232811,-5.316267],[-5.619996,-0.098146,-2.587660,3.391344,-6.320817,6.229162,7.026478,-3.897381,-2.039211,-4.514926,-4.094120,8.178996,-3.411344,-4.321153],[-8.225322,4.149209,-3.138160,0.288372,-3.974678,-9.770864,6.375854,1.607242,-1.875130,-7.944958,4.498377,4.559462,3.172065,-7.753085],[-4.816880,-0.425751,-2.314240,6.671066,-6.879171,8.489614,8.204383,5.192763,9.468308,-4.462351,-2.837368,-6.439021,8.677408,4.660677],[-2.321462,-1.235250,-4.911285,0.604315,-7.277567,-4.010116,3.785539,2.732713,5.642186,-6.154306,-8.052064,-5.102648,6.527632,-1.540708],[-7.346859,3.080899,5.034371,2.955837,3.267813,-6.945200,8.323240,-6.475031,-3.995742,-2.655263,-9.237448,-2.057593,2.779819,2.426553],[-6.294164,9.123586,4.246715,3.713859,2.352927,-2.498443,-9.454537,-1.756042,1.666814,-4.072562,4.332715,-1.801379,1.434399,-0.204347],[7.971677,-3.926193,3.375762,8.408298,-6.223877,1.825665,0.406344,-2.433056,2.180966,-4.519741,0.527067,-0.329950,1.335536,-9.708320],[-7.043686,1.415875,-0.309550,8.428576,0.288469,-2.150013,9.548991,4.642035,-3.342161,-6.689873,3.415462,-5.757386,-1.665470,8.393374],[7.084980,-6.329965,-8.492321,-9.822173,1.544345,-6.976189,-2.853410,9.233420,-4.253486,-8.754548,-3.446997,-3.530889,7.357817,8.445338],[-9.670012,7.658667,-2.207664,0.246441,8.106047,-1.904310,2.478310,-3.530849,9.407248,4.048398,-4.963662,-4.625859,8.290819,-6.595229],[-9.887534,-8.824717,-0.477976,-3.690264,1.290678,9.199702,3.025482,-0.660514,-1.448721,-9.594521,-2.918060,-1.107993,-2.597446,7.157262],[3.314337,-1.333607,0.674289,-6.857057,0.270534,4.594925,-4.537272,7.679423,-2.319629,-8.299370,-9.662809,-1.141635,4.476324,-8.254684],[-9.227708,3.165052,2.575075,0.305442,-0.772396,8.015188,-5.161409,-2.256125,0.970731,6.671503,5.518109,9.667958,-8.135900,-6.413103],[-3.194508,2.751001,9.549092,-0.060762,1.324105,5.043516,-3.962582,3.239724,4.028205,1.301412,8.346776,-3.294542,2.230433,7.449027],[-6.342890,4.176819,-9.003727,8.606298,0.417905,-7.123231,5.788130,-5.785283,-4.171601,-1.139480,9.745775,2.175380,-6.707145,-2.551066],[5.846089,-8.275745,4.340902,-9.408905,-5.652062,9.338014,1.209110,-4.240722,-8.213412,-7.910845,-8.273191,-6.284587,7.336529,6.375819],[-8.637850,3.524468,4.721306,3.635438,3.839378,-0.588305,4.170535,7.460383,3.099028,3.742576,-1.007906,2.516518,-9.810611,-3.106738],[8.378882,-8.219857,9.869681,4.175988,0.478208,-1.151782,-6.171346,-1.328680,-7.014932,-8.745751,-4.113776,1.705508,-2.722084,1.606248],[5.770860,-9.483188,8.192985,-1.288246,-3.132780,8.195547,-2.137255,-9.814770,-7.189359,-2.841816,-9.055670,6.215008,-0.311040,1.156065],[6.445111,3.610889,-9.300306,5.056233,-1.528319,0.672405,6.705823,-8.934240,-3.767570,-4.332672,-2.309115,7.542607,9.612749,4.604294],[-1.168396,-3.884219,1.546539,-1.862458,9.330586,-6.800015,2.059088,-8.631230,-2.126938,-4.289764,0.140265,-5.390673,7.505569,-3.035906],[-3.773012,-8.156974,-2.680626,-8.198647,-4.563220,-4.464955,-5.878801,-8.199550,-7.308009,-4.650695,7.849932,0.781480,3.921911,-3.453004],[7.118720,7.312200,-6.187910,-3.347363,9.898033,1.780077,6.128510,7.857510,-6.539669,9.472646,2.357015,3.465493,-5.645333,3.369396],[-8.914973,-9.490481,7.823168,2.172304,6.563624,-3.892708,-4.104713,9.630882,8.504353,6.043356,-2.630563,-8.989910,-8.620203,-8.027298],[-4.222153,-2.317192,-2.432609,3.582083,1.579398,3.134991,-1.527462,4.472676,9.796550,3.024737,8.399992,-5.476978,6.601420,3.485818],[0.741037,9.124711,-3.187778,-8.717838,-4.727230,-0.813540,5.515509,1.675334,5.386793,-3.034878,6.283010,-0.398175,7.153803,-3.913168],[5.870458,-2.981991,5.728772,0.151126,-5.558003,-4.919939,3.378629,-0.050156,1.876188,-8.868435,-2.521134,4.437593,-1.920519,-8.570850],[2.382668,7.752909,8.049355,4.744611,9.690868,-8.051640,-9.201367,-5.556371,7.005302,-8.294547,-1.555758,9.594961,-3.572042,-1.419543],[-3.472122,-3.640684,5.540478,3.646396,7.665469,-2.564622,3.211165,-2.607291,0.094819,0.419988,2.874283,2.448347,-4.669160,-3.062500],[-7.914856,-2.511817,-1.992206,-0.849053,-2.554313,-5.470961,-2.353313,-3.968801,7.208016,9.815855,6.687622,6.017214,2.598724,0.350967],[3.082499,-5.423611,-5.916008,0.786682,8.514324,1.674090,7.862394,8.431442,-1.800610,8.306602,6.730662,-6.363165,6.272675,8.693844],[6.086221,-7.427219,2.400041,-4.532076,1.376882,-3.108357,0.203607,-3.000951,2.960112,-5.538476,3.798982,7.736550,-5.950958,-3.496471],[9.584677,-7.430187,-1.882696,8.626000,6.057764,9.280397,8.384476,2.945108,0.814461,2.102681,-5.008742,-1.466602,0.376595,-8.008333],[-7.404209,2.177393,-3.604990,-9.895941,4.305018,-3.674499,0.311724,3.330785,1.647719,9.451268,5.351752,2.958175,-5.067416,1.815820],[8.800583,6.195039,-9.751832,5.471852,9.148190,1.122368,-1.140909,1.750537,-6.159072,-7.626110,-1.572941,-3.882047,7.778018,8.960952],[-6.225570,0.486423,-0.155037,0.359555,-6.405085,9.245718,-0.426666,-9.668195,2.438757,-6.428499,-2.357397,3.781879,-8.270547,-9.713093],[-3.602152,3.061985,0.305553,-3.914871,3.639315,-8.071864,0.279155,6.337918,0.075357,-1.274009,-3.843738,-4.162448,6.704526,7.727604],[3.165222,4.554238,0.786078,-2.466364,-8.203733,-4.130310,-8.069242,2.357439,-7.136010,0.407424,-4.402245,-8.804836,-8.338353,5.682459],[6.616234,6.661587,3.788276,-9.576760,6.358556,4.127503,0.127858,-9.512230,-6.097396,4.925926,-4.279071,-9.776378,-1.597694,3.010703],[8.409932,8.858882,6.727847,-3.801392,1.618484,2.069380,9.340691,-8.960330,-1.786035,8.876862,-1.124815,-3.537147,0.166939,9.891688],[5.486105,3.619902,-8.061412,5.245014,1.899267,-4.260661,-1.466178,-0.489905,-0.788008,3.192172,9.481786,7.721105,5.963511,-3.775499],[6.197094,4.145668,3.412858,4.857841,6.677692,8.994721,-8.213061,7.327900,-1.517069,6.577761,3.317400,2.017279,9.430315,-7.224029],[-1.299236,8.048779,1.354755,0.696097,0.817976,-2.977296,1.901048,-8.167013,4.347702,1.555038,4.785110,-0.697776,7.422843,0.604926],[-6.196302,6.125219,-0.543787,-6.080953,7.684463,-8.084504,6.213762,0.094243,1.668675,-4.051277,-8.087417,-1.839977,-0.505016,-6.417962],[-3.775518,-8.986799,5.305516,-8.993704,6.603529,0.362204,-9.872531,0.224537,-4.043911,-4.385882,-8.260865,-1.953567,-5.841405,-0.075123],[0.090443,-7.134313,-4.513552,5.600291,0.008986,-1.955791,-8.372947,5.408806,0.795259,-3.247609,-1.704399,4.876740,-9.691541,2.277830]], dtype = "float64")#candidate|6616|(91, 14)|const|float64
call_6615 = relay.TupleGetItem(func_5232_call(relay.reshape(const_6616.astype('float64'), [1274,])), 0)
call_6617 = relay.TupleGetItem(func_5234_call(relay.reshape(const_6616.astype('float64'), [1274,])), 0)
var_6620 = relay.var("var_6620", dtype = "float64", shape = (91, 14))#candidate|6620|(91, 14)|var|float64
bop_6621 = relay.power(const_6616.astype('float64'), relay.reshape(var_6620.astype('float64'), relay.shape_of(const_6616))) # shape=(91, 14)
bop_6627 = relay.mod(const_6616.astype('float32'), relay.reshape(var_6620.astype('float32'), relay.shape_of(const_6616))) # shape=(91, 14)
bop_6639 = relay.logical_and(call_6615.astype('bool'), relay.reshape(bop_6627.astype('bool'), relay.shape_of(call_6615))) # shape=(1274,)
bop_6642 = relay.logical_and(call_6617.astype('bool'), relay.reshape(bop_6627.astype('bool'), relay.shape_of(call_6617))) # shape=(1274,)
bop_6645 = relay.logical_or(var_6620.astype('bool'), relay.reshape(bop_6627.astype('bool'), relay.shape_of(var_6620))) # shape=(91, 14)
bop_6656 = relay.floor_divide(bop_6645.astype('float32'), relay.reshape(var_6620.astype('float32'), relay.shape_of(bop_6645))) # shape=(91, 14)
output = relay.Tuple([call_6583,bop_6621,bop_6639,bop_6656,])
output2 = relay.Tuple([call_6584,bop_6621,bop_6642,bop_6656,])
func_6667 = relay.Function([var_6620,], output)
mod['func_6667'] = func_6667
mod = relay.transform.InferType()(mod)
mutated_mod['func_6667'] = func_6667
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6668 = relay.var("var_6668", dtype = "float64", shape = (91, 14))#candidate|6668|(91, 14)|var|float64
func_6667_call = mutated_mod.get_global_var('func_6667')
call_6669 = func_6667_call(var_6668)
output = call_6669
func_6670 = relay.Function([var_6668], output)
mutated_mod['func_6670'] = func_6670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2804_call = mod.get_global_var('func_2804')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_6691 = func_2804_call()
call_6692 = func_2804_call()
func_4262_call = mod.get_global_var('func_4262')
func_4263_call = mutated_mod.get_global_var('func_4263')
call_6699 = func_4262_call()
call_6700 = func_4262_call()
output = relay.Tuple([call_6691,call_6699,])
output2 = relay.Tuple([call_6692,call_6700,])
func_6706 = relay.Function([], output)
mod['func_6706'] = func_6706
mod = relay.transform.InferType()(mod)
mutated_mod['func_6706'] = func_6706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6706_call = mutated_mod.get_global_var('func_6706')
call_6707 = func_6706_call()
output = call_6707
func_6708 = relay.Function([], output)
mutated_mod['func_6708'] = func_6708
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6765 = relay.var("var_6765", dtype = "uint16", shape = (16, 16, 1))#candidate|6765|(16, 16, 1)|var|uint16
var_6766 = relay.var("var_6766", dtype = "uint16", shape = (16, 16, 14))#candidate|6766|(16, 16, 14)|var|uint16
bop_6767 = relay.minimum(var_6765.astype('uint16'), var_6766.astype('uint16')) # shape=(16, 16, 14)
output = bop_6767
output2 = bop_6767
func_6775 = relay.Function([var_6765,var_6766,], output)
mod['func_6775'] = func_6775
mod = relay.transform.InferType()(mod)
var_6776 = relay.var("var_6776", dtype = "uint16", shape = (16, 16, 1))#candidate|6776|(16, 16, 1)|var|uint16
var_6777 = relay.var("var_6777", dtype = "uint16", shape = (16, 16, 14))#candidate|6777|(16, 16, 14)|var|uint16
output = func_6775(var_6776,var_6777,)
func_6778 = relay.Function([var_6776,var_6777,], output)
mutated_mod['func_6778'] = func_6778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1199_call = mod.get_global_var('func_1199')
func_1200_call = mutated_mod.get_global_var('func_1200')
call_6815 = relay.TupleGetItem(func_1199_call(), 1)
call_6816 = relay.TupleGetItem(func_1200_call(), 1)
output = relay.Tuple([call_6815,])
output2 = relay.Tuple([call_6816,])
func_6829 = relay.Function([], output)
mod['func_6829'] = func_6829
mod = relay.transform.InferType()(mod)
mutated_mod['func_6829'] = func_6829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6829_call = mutated_mod.get_global_var('func_6829')
call_6830 = func_6829_call()
output = call_6830
func_6831 = relay.Function([], output)
mutated_mod['func_6831'] = func_6831
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6934 = relay.const([[[7,3,-9,-4,9,-9,1],[8,-4,-8,-3,6,5,-10]],[[-8,9,8,-1,4,-7,-5],[4,8,5,4,-3,-10,6]],[[-2,10,-7,5,-1,-4,4],[-8,8,4,3,-9,5,-7]],[[-10,2,-9,-2,-1,4,3],[-7,-9,-7,6,-4,3,7]],[[7,2,-6,9,-7,2,10],[-10,-3,-2,-1,-1,2,-9]],[[9,2,-9,-3,-1,10,7],[-7,-9,-2,5,7,4,-6]],[[-3,9,10,-10,-8,-6,9],[-8,-10,-3,-6,-1,10,-9]],[[-6,-9,10,1,-3,-1,-5],[-1,-2,1,6,1,9,-2]],[[-10,3,8,2,-4,-9,7],[-8,-8,-9,10,4,-3,9]],[[-9,-3,6,2,10,1,1],[8,2,2,-7,-2,-10,4]]], dtype = "uint16")#candidate|6934|(10, 2, 7)|const|uint16
var_6935 = relay.var("var_6935", dtype = "uint16", shape = (10, 2, 7))#candidate|6935|(10, 2, 7)|var|uint16
bop_6936 = relay.minimum(const_6934.astype('uint16'), relay.reshape(var_6935.astype('uint16'), relay.shape_of(const_6934))) # shape=(10, 2, 7)
func_2604_call = mod.get_global_var('func_2604')
func_2607_call = mutated_mod.get_global_var('func_2607')
var_6941 = relay.var("var_6941", dtype = "float64", shape = (1456,))#candidate|6941|(1456,)|var|float64
call_6940 = relay.TupleGetItem(func_2604_call(relay.reshape(var_6941.astype('float64'), [1456,])), 2)
call_6942 = relay.TupleGetItem(func_2607_call(relay.reshape(var_6941.astype('float64'), [1456,])), 2)
uop_6945 = relay.sinh(bop_6936.astype('float64')) # shape=(10, 2, 7)
func_2679_call = mod.get_global_var('func_2679')
func_2681_call = mutated_mod.get_global_var('func_2681')
call_6947 = relay.TupleGetItem(func_2679_call(), 2)
call_6948 = relay.TupleGetItem(func_2681_call(), 2)
output = relay.Tuple([call_6940,var_6941,uop_6945,call_6947,])
output2 = relay.Tuple([call_6942,var_6941,uop_6945,call_6948,])
func_6964 = relay.Function([var_6935,var_6941,], output)
mod['func_6964'] = func_6964
mod = relay.transform.InferType()(mod)
mutated_mod['func_6964'] = func_6964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6964_call = mutated_mod.get_global_var('func_6964')
var_6966 = relay.var("var_6966", dtype = "uint16", shape = (10, 2, 7))#candidate|6966|(10, 2, 7)|var|uint16
var_6967 = relay.var("var_6967", dtype = "float64", shape = (1456,))#candidate|6967|(1456,)|var|float64
call_6965 = func_6964_call(var_6966,var_6967,)
output = call_6965
func_6968 = relay.Function([var_6966,var_6967,], output)
mutated_mod['func_6968'] = func_6968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4039_call = mod.get_global_var('func_4039')
func_4040_call = mutated_mod.get_global_var('func_4040')
call_7006 = relay.TupleGetItem(func_4039_call(), 0)
call_7007 = relay.TupleGetItem(func_4040_call(), 0)
func_5682_call = mod.get_global_var('func_5682')
func_5683_call = mutated_mod.get_global_var('func_5683')
call_7012 = relay.TupleGetItem(func_5682_call(), 1)
call_7013 = relay.TupleGetItem(func_5683_call(), 1)
uop_7015 = relay.log2(call_7006.astype('float32')) # shape=(4, 12, 5)
uop_7017 = relay.log2(call_7007.astype('float32')) # shape=(4, 12, 5)
output = relay.Tuple([call_7012,uop_7015,])
output2 = relay.Tuple([call_7013,uop_7017,])
func_7018 = relay.Function([], output)
mod['func_7018'] = func_7018
mod = relay.transform.InferType()(mod)
mutated_mod['func_7018'] = func_7018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7018_call = mutated_mod.get_global_var('func_7018')
call_7019 = func_7018_call()
output = call_7019
func_7020 = relay.Function([], output)
mutated_mod['func_7020'] = func_7020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_827_call = mod.get_global_var('func_827')
func_828_call = mutated_mod.get_global_var('func_828')
call_7041 = relay.TupleGetItem(func_827_call(), 0)
call_7042 = relay.TupleGetItem(func_828_call(), 0)
output = relay.Tuple([call_7041,])
output2 = relay.Tuple([call_7042,])
func_7062 = relay.Function([], output)
mod['func_7062'] = func_7062
mod = relay.transform.InferType()(mod)
output = func_7062()
func_7063 = relay.Function([], output)
mutated_mod['func_7063'] = func_7063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6470_call = mod.get_global_var('func_6470')
func_6471_call = mutated_mod.get_global_var('func_6471')
call_7158 = func_6470_call()
call_7159 = func_6470_call()
uop_7160 = relay.asinh(call_7158.astype('float32')) # shape=(13, 117)
uop_7162 = relay.asinh(call_7159.astype('float32')) # shape=(13, 117)
output = uop_7160
output2 = uop_7162
func_7167 = relay.Function([], output)
mod['func_7167'] = func_7167
mod = relay.transform.InferType()(mod)
mutated_mod['func_7167'] = func_7167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7167_call = mutated_mod.get_global_var('func_7167')
call_7168 = func_7167_call()
output = call_7168
func_7169 = relay.Function([], output)
mutated_mod['func_7169'] = func_7169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4332_call = mod.get_global_var('func_4332')
func_4334_call = mutated_mod.get_global_var('func_4334')
call_7244 = relay.TupleGetItem(func_4332_call(), 0)
call_7245 = relay.TupleGetItem(func_4334_call(), 0)
func_5462_call = mod.get_global_var('func_5462')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_7249 = relay.TupleGetItem(func_5462_call(), 0)
call_7250 = relay.TupleGetItem(func_5464_call(), 0)
output = relay.Tuple([call_7244,call_7249,])
output2 = relay.Tuple([call_7245,call_7250,])
func_7256 = relay.Function([], output)
mod['func_7256'] = func_7256
mod = relay.transform.InferType()(mod)
mutated_mod['func_7256'] = func_7256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7256_call = mutated_mod.get_global_var('func_7256')
call_7257 = func_7256_call()
output = call_7257
func_7258 = relay.Function([], output)
mutated_mod['func_7258'] = func_7258
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7287 = relay.var("var_7287", dtype = "uint16", shape = ())#candidate|7287|()|var|uint16
var_7288 = relay.var("var_7288", dtype = "uint16", shape = (15, 14, 10))#candidate|7288|(15, 14, 10)|var|uint16
bop_7289 = relay.left_shift(var_7287.astype('uint16'), var_7288.astype('uint16')) # shape=(15, 14, 10)
output = relay.Tuple([bop_7289,])
output2 = relay.Tuple([bop_7289,])
func_7305 = relay.Function([var_7287,var_7288,], output)
mod['func_7305'] = func_7305
mod = relay.transform.InferType()(mod)
var_7306 = relay.var("var_7306", dtype = "uint16", shape = ())#candidate|7306|()|var|uint16
var_7307 = relay.var("var_7307", dtype = "uint16", shape = (15, 14, 10))#candidate|7307|(15, 14, 10)|var|uint16
output = func_7305(var_7306,var_7307,)
func_7308 = relay.Function([var_7306,var_7307,], output)
mutated_mod['func_7308'] = func_7308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4962_call = mod.get_global_var('func_4962')
func_4964_call = mutated_mod.get_global_var('func_4964')
call_7325 = relay.TupleGetItem(func_4962_call(), 0)
call_7326 = relay.TupleGetItem(func_4964_call(), 0)
output = relay.Tuple([call_7325,])
output2 = relay.Tuple([call_7326,])
func_7354 = relay.Function([], output)
mod['func_7354'] = func_7354
mod = relay.transform.InferType()(mod)
output = func_7354()
func_7355 = relay.Function([], output)
mutated_mod['func_7355'] = func_7355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5921_call = mod.get_global_var('func_5921')
func_5923_call = mutated_mod.get_global_var('func_5923')
call_7374 = relay.TupleGetItem(func_5921_call(), 0)
call_7375 = relay.TupleGetItem(func_5923_call(), 0)
func_3989_call = mod.get_global_var('func_3989')
func_3991_call = mutated_mod.get_global_var('func_3991')
call_7376 = relay.TupleGetItem(func_3989_call(), 0)
call_7377 = relay.TupleGetItem(func_3991_call(), 0)
output = relay.Tuple([call_7374,call_7376,])
output2 = relay.Tuple([call_7375,call_7377,])
func_7388 = relay.Function([], output)
mod['func_7388'] = func_7388
mod = relay.transform.InferType()(mod)
mutated_mod['func_7388'] = func_7388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7388_call = mutated_mod.get_global_var('func_7388')
call_7389 = func_7388_call()
output = call_7389
func_7390 = relay.Function([], output)
mutated_mod['func_7390'] = func_7390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4504_call = mod.get_global_var('func_4504')
func_4506_call = mutated_mod.get_global_var('func_4506')
call_7396 = func_4504_call()
call_7397 = func_4504_call()
func_3928_call = mod.get_global_var('func_3928')
func_3931_call = mutated_mod.get_global_var('func_3931')
var_7402 = relay.var("var_7402", dtype = "float64", shape = (1456,))#candidate|7402|(1456,)|var|float64
var_7403 = relay.var("var_7403", dtype = "uint16", shape = (1, 1521))#candidate|7403|(1, 1521)|var|uint16
call_7401 = relay.TupleGetItem(func_3928_call(relay.reshape(var_7402.astype('float64'), [1456,]), relay.reshape(var_7403.astype('uint16'), [169, 9]), ), 4)
call_7404 = relay.TupleGetItem(func_3931_call(relay.reshape(var_7402.astype('float64'), [1456,]), relay.reshape(var_7403.astype('uint16'), [169, 9]), ), 4)
uop_7417 = relay.log10(call_7401.astype('float64')) # shape=(1456,)
uop_7419 = relay.log10(call_7404.astype('float64')) # shape=(1456,)
uop_7420 = relay.acosh(uop_7417.astype('float64')) # shape=(1456,)
uop_7422 = relay.acosh(uop_7419.astype('float64')) # shape=(1456,)
output = relay.Tuple([call_7396,var_7402,var_7403,uop_7420,])
output2 = relay.Tuple([call_7397,var_7402,var_7403,uop_7422,])
func_7426 = relay.Function([var_7402,var_7403,], output)
mod['func_7426'] = func_7426
mod = relay.transform.InferType()(mod)
var_7427 = relay.var("var_7427", dtype = "float64", shape = (1456,))#candidate|7427|(1456,)|var|float64
var_7428 = relay.var("var_7428", dtype = "uint16", shape = (1, 1521))#candidate|7428|(1, 1521)|var|uint16
output = func_7426(var_7427,var_7428,)
func_7429 = relay.Function([var_7427,var_7428,], output)
mutated_mod['func_7429'] = func_7429
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7436 = relay.var("var_7436", dtype = "float64", shape = (6, 8, 12))#candidate|7436|(6, 8, 12)|var|float64
uop_7437 = relay.asinh(var_7436.astype('float64')) # shape=(6, 8, 12)
output = uop_7437
output2 = uop_7437
func_7456 = relay.Function([var_7436,], output)
mod['func_7456'] = func_7456
mod = relay.transform.InferType()(mod)
mutated_mod['func_7456'] = func_7456
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7457 = relay.var("var_7457", dtype = "float64", shape = (6, 8, 12))#candidate|7457|(6, 8, 12)|var|float64
func_7456_call = mutated_mod.get_global_var('func_7456')
call_7458 = func_7456_call(var_7457)
output = call_7458
func_7459 = relay.Function([var_7457], output)
mutated_mod['func_7459'] = func_7459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5462_call = mod.get_global_var('func_5462')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_7566 = relay.TupleGetItem(func_5462_call(), 0)
call_7567 = relay.TupleGetItem(func_5464_call(), 0)
output = relay.Tuple([call_7566,])
output2 = relay.Tuple([call_7567,])
func_7568 = relay.Function([], output)
mod['func_7568'] = func_7568
mod = relay.transform.InferType()(mod)
output = func_7568()
func_7569 = relay.Function([], output)
mutated_mod['func_7569'] = func_7569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7388_call = mod.get_global_var('func_7388')
func_7390_call = mutated_mod.get_global_var('func_7390')
call_7595 = relay.TupleGetItem(func_7388_call(), 1)
call_7596 = relay.TupleGetItem(func_7390_call(), 1)
func_5682_call = mod.get_global_var('func_5682')
func_5683_call = mutated_mod.get_global_var('func_5683')
call_7650 = relay.TupleGetItem(func_5682_call(), 0)
call_7651 = relay.TupleGetItem(func_5683_call(), 0)
output = relay.Tuple([call_7595,call_7650,])
output2 = relay.Tuple([call_7596,call_7651,])
func_7663 = relay.Function([], output)
mod['func_7663'] = func_7663
mod = relay.transform.InferType()(mod)
output = func_7663()
func_7664 = relay.Function([], output)
mutated_mod['func_7664'] = func_7664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7568_call = mod.get_global_var('func_7568')
func_7569_call = mutated_mod.get_global_var('func_7569')
call_7709 = relay.TupleGetItem(func_7568_call(), 0)
call_7710 = relay.TupleGetItem(func_7569_call(), 0)
func_1661_call = mod.get_global_var('func_1661')
func_1665_call = mutated_mod.get_global_var('func_1665')
var_7719 = relay.var("var_7719", dtype = "bool", shape = (1, 1568))#candidate|7719|(1, 1568)|var|bool
call_7718 = relay.TupleGetItem(func_1661_call(relay.reshape(var_7719.astype('bool'), [8, 14, 14]), relay.reshape(var_7719.astype('bool'), [8, 14, 14]), ), 1)
call_7720 = relay.TupleGetItem(func_1665_call(relay.reshape(var_7719.astype('bool'), [8, 14, 14]), relay.reshape(var_7719.astype('bool'), [8, 14, 14]), ), 1)
output = relay.Tuple([call_7709,call_7718,var_7719,])
output2 = relay.Tuple([call_7710,call_7720,var_7719,])
func_7721 = relay.Function([var_7719,], output)
mod['func_7721'] = func_7721
mod = relay.transform.InferType()(mod)
var_7722 = relay.var("var_7722", dtype = "bool", shape = (1, 1568))#candidate|7722|(1, 1568)|var|bool
output = func_7721(var_7722)
func_7723 = relay.Function([var_7722], output)
mutated_mod['func_7723'] = func_7723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_397_call = mod.get_global_var('func_397')
func_398_call = mutated_mod.get_global_var('func_398')
call_7790 = func_397_call()
call_7791 = func_397_call()
output = relay.Tuple([call_7790,])
output2 = relay.Tuple([call_7791,])
func_7794 = relay.Function([], output)
mod['func_7794'] = func_7794
mod = relay.transform.InferType()(mod)
mutated_mod['func_7794'] = func_7794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7794_call = mutated_mod.get_global_var('func_7794')
call_7795 = func_7794_call()
output = call_7795
func_7796 = relay.Function([], output)
mutated_mod['func_7796'] = func_7796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1146_call = mod.get_global_var('func_1146')
func_1147_call = mutated_mod.get_global_var('func_1147')
call_7805 = func_1146_call()
call_7806 = func_1146_call()
output = relay.Tuple([call_7805,])
output2 = relay.Tuple([call_7806,])
func_7820 = relay.Function([], output)
mod['func_7820'] = func_7820
mod = relay.transform.InferType()(mod)
mutated_mod['func_7820'] = func_7820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7820_call = mutated_mod.get_global_var('func_7820')
call_7821 = func_7820_call()
output = call_7821
func_7822 = relay.Function([], output)
mutated_mod['func_7822'] = func_7822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4262_call = mod.get_global_var('func_4262')
func_4263_call = mutated_mod.get_global_var('func_4263')
call_7839 = func_4262_call()
call_7840 = func_4262_call()
output = relay.Tuple([call_7839,])
output2 = relay.Tuple([call_7840,])
func_7858 = relay.Function([], output)
mod['func_7858'] = func_7858
mod = relay.transform.InferType()(mod)
mutated_mod['func_7858'] = func_7858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7858_call = mutated_mod.get_global_var('func_7858')
call_7859 = func_7858_call()
output = call_7859
func_7860 = relay.Function([], output)
mutated_mod['func_7860'] = func_7860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2804_call = mod.get_global_var('func_2804')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_7861 = func_2804_call()
call_7862 = func_2804_call()
func_3124_call = mod.get_global_var('func_3124')
func_3125_call = mutated_mod.get_global_var('func_3125')
call_7864 = func_3124_call()
call_7865 = func_3124_call()
func_5232_call = mod.get_global_var('func_5232')
func_5234_call = mutated_mod.get_global_var('func_5234')
call_7881 = relay.TupleGetItem(func_5232_call(relay.reshape(call_7861.astype('float64'), [1274,])), 2)
call_7882 = relay.TupleGetItem(func_5234_call(relay.reshape(call_7861.astype('float64'), [1274,])), 2)
func_7721_call = mod.get_global_var('func_7721')
func_7723_call = mutated_mod.get_global_var('func_7723')
var_7888 = relay.var("var_7888", dtype = "bool", shape = (784, 2))#candidate|7888|(784, 2)|var|bool
call_7887 = relay.TupleGetItem(func_7721_call(relay.reshape(var_7888.astype('bool'), [1, 1568])), 2)
call_7889 = relay.TupleGetItem(func_7723_call(relay.reshape(var_7888.astype('bool'), [1, 1568])), 2)
func_5932_call = mod.get_global_var('func_5932')
func_5934_call = mutated_mod.get_global_var('func_5934')
call_7891 = func_5932_call()
call_7892 = func_5932_call()
output = relay.Tuple([call_7861,call_7864,call_7881,call_7887,var_7888,call_7891,])
output2 = relay.Tuple([call_7862,call_7865,call_7882,call_7889,var_7888,call_7892,])
func_7896 = relay.Function([var_7888,], output)
mod['func_7896'] = func_7896
mod = relay.transform.InferType()(mod)
mutated_mod['func_7896'] = func_7896
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7897 = relay.var("var_7897", dtype = "bool", shape = (784, 2))#candidate|7897|(784, 2)|var|bool
func_7896_call = mutated_mod.get_global_var('func_7896')
call_7898 = func_7896_call(var_7897)
output = call_7898
func_7899 = relay.Function([var_7897], output)
mutated_mod['func_7899'] = func_7899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6552_call = mod.get_global_var('func_6552')
func_6553_call = mutated_mod.get_global_var('func_6553')
call_7944 = func_6552_call()
call_7945 = func_6552_call()
output = call_7944
output2 = call_7945
func_7964 = relay.Function([], output)
mod['func_7964'] = func_7964
mod = relay.transform.InferType()(mod)
output = func_7964()
func_7965 = relay.Function([], output)
mutated_mod['func_7965'] = func_7965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7167_call = mod.get_global_var('func_7167')
func_7169_call = mutated_mod.get_global_var('func_7169')
call_8067 = func_7167_call()
call_8068 = func_7167_call()
const_8071 = relay.const([[-0.342723,-7.491027,-2.530577,7.633424,-3.849582,1.786282,-1.253590,-1.505327,-9.788786,5.410604,-0.088555,-5.838998,-4.128100,-2.061592,0.884751,-2.619924,7.593497,-5.960894,-2.593763,-3.311080,8.523903,8.664179,6.792000,0.543199,-3.947228,-2.733614,-3.867676,6.068056,-4.929494,-7.730095,6.150083,6.824725,-4.424193,-7.632239,-5.072071,6.490590,-1.652782,7.506180,-7.265388,6.377855,6.941116,5.548234,5.243126,-5.157607,4.335368,6.947686,-6.441412,0.183714,-8.869917,7.300767,6.458398,3.492506,6.897491,1.901813,3.462098,-8.165859,-5.774925,4.536960,-6.302864,9.949770,-2.465630,-0.039969,-1.668322,9.902265,-8.067263,7.594901,5.773047,9.056144,2.945097,-4.882300,-2.735384,-4.056269,9.950224,-1.466641,4.017144,3.844821,-9.268094,-9.810926,6.153023,5.354259,-1.400383,0.686297,9.548225,-8.767091,1.507947,-7.891696,-9.037270,-2.438386,-2.225328,6.925228,6.650042,8.341039,5.805382,-0.241551,-9.106409,-5.735477,-9.572425,-6.475809,-9.578545,-4.915929,-2.695788,4.250236,4.991131,-1.761512,-6.362565,-7.018513,-1.252076,3.463922,6.705246,-5.497649,-5.969023,3.068843,7.117682,-3.948368,-5.479118,9.619544,3.087574],[7.977746,2.447294,-6.409986,-5.429274,3.289717,6.726292,-8.222196,-1.925368,-1.216414,1.160048,2.437581,6.599862,-3.244731,-8.274584,-7.725580,1.350217,1.399756,3.396136,-8.621095,-2.792440,-0.769028,6.286032,-6.319032,-0.500910,-3.036951,-7.841761,-3.355777,1.279504,-8.515972,-9.390214,-6.966997,-9.467819,-7.960548,1.119606,3.434489,-3.600653,2.303859,-0.792248,7.010238,-2.037309,-4.632786,1.512456,6.658190,-0.108838,1.605993,-4.813919,-7.437428,9.738041,7.907209,0.017128,-4.646022,-7.387676,5.307347,5.381892,2.964668,-7.615522,3.984031,-5.761291,5.399205,-6.872584,-6.726181,-7.571154,3.663081,5.557662,-6.692430,-2.326677,7.852508,5.332716,7.031690,0.474801,-9.080216,1.297476,-3.317280,-3.276505,-0.055156,-0.385341,-9.938998,7.730725,-1.506627,-2.114025,9.295756,9.474761,9.999633,-2.060557,1.765373,-0.172495,2.221720,8.256103,7.231583,8.340612,-7.718464,-8.747994,-7.529015,4.269543,8.469791,-1.817264,-8.296741,4.723122,-7.006655,-2.321823,2.188377,2.299528,-4.900679,-4.892052,6.726719,9.296010,2.869233,-0.168449,2.807436,-8.508577,8.981962,-8.902413,-4.681526,7.622454,7.434072,5.566833,-2.806403],[0.725078,8.768493,4.659023,-9.927715,1.697758,-1.539873,9.785976,8.179225,-2.401318,-9.558258,-2.914530,-7.899035,5.462989,2.401861,3.412350,-4.134627,9.875458,-5.673384,-8.562413,5.921487,0.132715,2.128755,-6.634306,-2.646439,5.930059,8.082288,-9.728049,1.905013,6.637965,-0.667636,4.538701,9.117378,-1.009672,3.896529,-9.226817,-4.173809,-1.239089,5.442666,-8.120632,-1.546081,-9.897744,3.977402,4.335001,4.112946,-5.967239,3.730960,-7.455804,-6.928719,6.167979,1.010957,-3.958253,5.789641,2.173271,7.758815,-0.989283,0.700978,4.264013,7.826721,6.571761,4.673038,-7.184412,3.683246,-5.941579,-8.900613,2.797163,4.845131,2.420219,2.394475,3.813064,8.858240,-3.389538,7.681248,6.778990,-9.380396,1.108253,-2.509031,9.875269,-8.381750,9.634418,5.667768,-6.811056,4.326038,2.822502,-3.566730,5.817682,-0.249921,-0.159364,-3.902690,8.300769,-4.310273,-5.375603,-3.238639,7.274178,5.403159,1.588323,0.269439,-6.943738,-4.807053,9.080278,-4.068616,-7.298573,-4.407929,-9.649907,-8.001338,-3.666603,-7.170644,-1.371284,-4.500596,4.587608,-4.364845,-2.650505,-2.878453,-2.605803,-5.634550,9.662924,4.921591,5.356729],[-9.548153,-8.471867,6.879647,-8.974309,5.710357,3.689731,-6.687890,-3.074180,1.456159,-0.632292,6.339350,-7.374629,0.630377,-7.479482,0.503786,-1.348063,-1.968111,1.927971,9.263679,9.800437,-8.322779,-0.240321,-7.366804,7.171077,6.660889,8.272589,8.778837,-6.254148,-1.387344,8.514198,6.849952,5.492016,-8.005114,9.122832,-4.654447,-3.445139,3.409031,2.309945,4.512718,-4.397279,6.049249,0.498318,7.772222,1.859690,7.458924,-9.124478,-9.480761,-6.680743,-5.545954,6.598772,-7.341484,8.292027,-3.257990,6.731454,5.892426,6.395932,-8.080526,7.362390,-2.532125,5.153296,2.924005,-0.188058,9.187765,-1.329606,2.168359,4.250817,-7.838771,6.880590,3.272102,-8.664204,-9.853098,1.622143,2.263453,8.298958,8.130417,0.640115,-2.330183,1.535732,-8.166959,0.655575,1.633680,9.888787,2.742217,-7.761754,-7.363447,2.978615,-7.307233,9.792146,-9.959777,-2.515249,4.564380,-2.021666,6.331666,7.290526,-3.912181,2.591437,8.744533,3.566427,-8.142605,-6.205691,-8.078559,0.874986,-0.939336,-8.257975,7.135393,7.319014,-0.337004,-2.822623,9.258607,4.894536,-9.989761,9.029319,-7.334126,-8.383578,-5.986945,9.123026,1.564813],[-9.545039,6.389862,-8.417416,9.753691,2.780646,9.095821,7.824069,1.221360,-3.658394,-2.749903,-2.370526,-7.610392,2.141654,4.899258,-5.643972,2.223633,-4.324862,6.881532,-4.694271,-0.558178,0.936042,6.602432,-7.870385,8.284505,9.839433,-1.037091,-9.176545,-6.284508,-3.688591,-2.904229,-5.275946,4.557887,-0.534780,3.158666,0.611395,-2.516093,-0.526596,2.446692,0.715134,5.846633,-7.045103,-3.770475,6.998145,-5.526672,-9.754038,-7.373625,3.724947,3.472300,-5.000720,-6.303504,8.210480,-1.189149,-6.624723,-2.281965,8.547333,-3.724468,-0.207586,-3.559575,-5.798581,6.346189,-3.880556,3.302953,0.882279,1.498288,-7.247210,8.822650,5.496686,2.647677,7.274979,4.632683,8.658488,1.414562,-3.834319,2.587995,-7.206580,2.490430,-3.759487,-2.056067,6.899385,-1.275390,9.182444,4.507395,7.677308,8.670418,5.218258,9.958234,-6.908526,-3.344314,8.285881,3.391574,-1.747162,-8.602963,-2.574452,-1.939351,-5.494890,1.737332,-2.274801,-7.668301,9.048993,-0.608783,-2.558554,0.958839,-6.518717,0.939649,-5.430360,-8.409465,9.350558,8.458337,8.921866,-1.174725,-9.870700,-2.410768,-9.771103,4.394105,-1.443009,-8.654040,8.040278],[2.861469,8.002259,7.458736,-0.744063,-5.367401,-2.572888,0.472950,7.091518,-2.266650,8.436633,-8.093367,3.769453,4.472859,-1.347526,7.568969,4.998365,7.178589,7.487962,-4.298071,-0.583313,-6.963824,4.347320,0.978524,5.598272,-8.219883,-4.422707,-7.493968,-6.310846,4.914119,-2.352671,7.718213,4.069269,-3.020901,6.019444,-8.064065,-6.923210,7.653621,-5.142171,-0.712383,-4.473680,-8.037986,-4.838153,-7.649196,-0.017876,6.363909,-8.113643,8.586195,1.718752,1.504436,-6.548535,7.520494,-8.579459,-3.612264,5.695725,-3.362081,-0.626470,-3.329367,1.965449,4.597776,-2.351471,-8.125215,4.262424,-7.262454,-8.150476,-9.714971,-7.731144,6.946729,-0.630633,0.498628,-2.819653,9.617481,6.926289,6.327039,-1.487959,-7.899585,2.947411,-2.890066,-8.032289,-2.747148,-9.592266,-2.400503,-4.167032,5.530896,2.262870,-7.115217,-1.978574,-7.574323,5.990323,-1.822283,4.342508,-2.774170,-0.114147,3.899945,6.496628,2.404817,-3.174483,-7.355148,7.447893,2.089020,9.910382,-9.768972,2.928107,4.076900,5.444954,7.909729,-6.821766,5.047965,-4.735343,-4.753380,-1.592899,2.171911,3.610832,3.320103,8.721157,7.221947,-4.940985,-8.570871],[7.442791,-2.307871,7.689786,5.292243,5.157509,-8.161807,2.639543,-6.222062,-4.063853,6.933018,5.224185,-3.097207,5.336369,0.617486,-9.841995,-5.719053,3.469843,-5.222271,-3.792368,3.196819,-1.451984,9.078831,-5.677498,-8.440149,3.616399,-8.730053,-5.842893,5.767402,-0.039743,-0.175431,-6.961488,-4.787963,6.813643,-9.097199,-3.147746,-9.651406,-1.959714,1.308688,3.806820,3.953572,7.855463,1.297448,6.980654,1.311958,-9.156316,-8.110929,-1.125699,-0.355612,5.701782,4.287414,-1.282468,-4.560796,8.950128,4.538698,7.054412,4.732069,-2.896023,3.984577,2.211006,-9.186605,-1.248664,-7.935393,0.085506,-0.219436,-2.099316,0.544737,1.734965,6.214683,5.416232,5.472400,5.356714,3.527253,-3.365888,7.113983,6.138534,3.812832,-9.055832,7.153310,-2.271953,-0.652618,3.960213,-4.399231,-7.413492,-4.179072,-5.852165,-3.703074,-0.942494,-0.433501,-8.953972,3.679920,0.077354,5.206855,-8.674469,4.595905,5.792743,6.592776,8.601216,1.144132,7.363996,0.825481,-6.453304,-8.920078,4.565825,2.455324,-0.175769,-0.181786,5.713945,-1.835151,-1.740529,-6.724525,5.537711,-9.893493,3.444634,-8.920839,6.058896,5.210469,-8.775940],[7.745189,-8.773081,0.710326,3.380576,-4.383138,-4.507183,-8.370655,-1.916800,-9.621773,1.098423,9.813942,-2.698593,7.227776,9.593332,0.612676,-8.249048,-0.342752,2.375824,-1.233738,8.436442,4.833299,6.960708,-9.634105,6.422483,2.439468,2.209977,0.545974,5.923438,-7.968578,3.160040,-7.832191,-4.866797,-3.071934,-1.851169,-2.633397,1.355296,1.573443,5.590504,7.490344,-0.244880,9.063775,1.790323,-2.069290,-4.007407,9.597727,-9.292067,3.964187,-8.859507,1.718187,-2.703511,-2.817024,3.872158,-0.257930,1.396936,2.011116,1.857772,-5.507967,-5.399859,9.419628,7.496040,-7.758769,-3.628976,-9.846811,-5.150189,7.780885,5.738652,-6.477758,-5.258446,5.513584,-1.079456,2.391932,-9.438094,-1.467094,-0.415893,3.638840,4.886617,-1.370699,0.684881,-3.542015,-1.229056,8.947847,-3.567187,-9.961236,-6.929582,-5.380946,3.856580,-0.039385,4.861359,-9.318598,-3.359865,6.604546,5.439621,0.371449,-0.150609,-8.563343,-1.602655,-2.553556,-2.409629,2.005220,3.901149,5.032499,4.781260,-7.411595,2.738216,0.881793,-5.918685,0.119020,-4.628597,-6.214430,-6.397044,0.983845,-0.590159,1.458293,-9.195338,-9.162420,3.234327,-9.261003],[3.808536,3.689035,5.673020,7.085666,-1.688416,-4.342628,0.825115,1.377641,3.381178,-4.476249,3.104625,-9.773993,-4.103358,1.907481,5.912466,8.974555,-8.901038,5.091580,7.550852,7.087563,2.275376,-6.639723,-2.727510,-3.965129,-7.505312,-5.528716,3.086507,9.389757,7.421732,8.140556,0.297821,2.541829,0.429675,6.829737,4.838868,-3.146375,-5.317015,-4.933978,3.528781,0.819599,8.236545,9.895841,-5.465865,7.172702,4.198429,-1.072244,9.531073,-0.807827,-1.221197,6.670021,-8.316085,-0.161283,-4.573787,2.576799,-2.009621,1.942560,-7.964164,-8.010798,3.705639,-2.902242,-8.157872,5.612909,0.588703,-0.995418,-3.375120,6.567962,-6.203467,7.180491,-8.270142,-6.732251,4.623042,8.888800,-9.212554,3.186907,6.141494,-0.578305,-9.455343,1.235713,7.549127,-4.772008,5.256588,-4.780051,7.647870,-0.032174,-1.490357,-9.422985,-9.314060,-8.770579,9.100354,-4.732529,4.751895,-3.253382,1.322471,9.704767,-5.532121,-7.817963,-8.563304,3.163239,-8.187801,6.994847,-4.440245,6.494177,0.860920,4.898457,3.444310,3.175133,-8.459887,-6.174381,9.035851,-5.804675,3.318036,2.504871,2.253302,-4.026610,-2.604504,-3.972179,2.512055],[0.948342,5.499396,-1.298390,7.443684,-7.519293,5.105482,1.430654,-2.627733,-3.850462,-9.322574,6.419714,-1.906889,3.576846,-4.584633,1.250753,8.274421,-9.843942,1.264947,4.324949,9.345841,-2.720589,9.845456,2.674954,7.979061,8.395537,-8.061981,1.534165,-6.453105,3.880842,8.334405,8.902330,-5.281084,1.408819,-9.795141,-6.343722,-1.326335,-9.224651,-7.115986,-7.326617,-2.724532,3.248974,-8.254477,6.568203,0.760727,7.217792,-1.331773,-6.630509,0.362853,-6.394519,-9.120438,6.967388,-3.599319,-9.246872,8.985450,-0.450184,0.543009,-4.614799,4.931398,-1.317506,1.019995,6.765487,-6.292560,-1.049559,3.672366,4.081893,3.507821,0.316936,9.346533,-4.926828,-9.746728,-6.699194,-0.076441,1.199564,-7.477613,-3.274084,-6.633091,7.871832,6.097042,-8.806204,1.446979,9.399914,-4.179520,-8.625284,-9.056929,-3.557068,0.360231,-8.941552,-4.125053,0.803919,-3.305804,-7.851367,6.515116,7.093628,7.080657,-0.491889,-8.681695,0.633539,-2.768372,-7.714427,-7.391914,3.107487,1.595633,3.729100,4.994999,-0.371097,-5.834495,-0.952936,0.525970,9.584901,1.070450,9.640513,3.195995,-2.795101,-6.683485,-6.670538,-6.772186,-3.336337],[-6.079688,0.065658,9.407186,7.027737,-5.549677,5.330652,1.325737,-8.846666,-0.544474,-2.251060,-3.960676,8.740370,6.536921,6.262954,7.800309,9.214696,3.737599,-9.978123,1.689378,-0.965818,4.006555,6.015587,-3.824675,-8.835891,2.879087,-2.476316,7.529615,-7.759872,-6.207847,-3.688103,2.039101,5.808948,-0.514286,5.777818,0.446390,0.616757,-2.138194,9.682890,-2.938798,3.863818,2.798414,9.788575,-5.270362,5.260013,7.017283,-5.864030,-8.854450,6.850481,1.908646,-7.053340,3.203788,-8.500431,-5.281248,-6.727758,7.442039,-7.654212,-6.406088,6.060837,2.734462,1.939064,8.002818,6.086978,4.246059,-4.933090,-7.539779,4.002966,8.473190,8.965179,7.045461,-0.774144,9.688470,3.019508,1.069982,-8.361274,-9.805764,0.803190,-0.494862,8.955987,-3.989424,-3.732667,-0.259106,-8.445670,5.316524,9.609251,3.780885,2.241973,-0.203384,-2.239494,-5.456318,-5.390151,-6.514061,-6.712170,-0.218668,-5.564666,6.512382,7.751797,-1.442572,1.141215,9.934443,6.232485,9.694712,-0.483539,2.511669,6.815051,5.627350,-1.537769,5.890259,-4.900050,-1.163433,-8.705906,-7.738670,8.241113,1.173116,-9.576661,7.656822,-6.911402,3.461328],[-3.064490,6.023654,-3.808658,8.982088,7.969985,1.010567,3.512123,-3.486634,5.715162,7.163324,-3.496174,-7.142911,-7.026581,-1.577534,-1.321769,6.178810,-6.401377,-4.699034,0.366139,-6.419992,-2.974661,2.355902,5.923069,-8.630558,-3.414840,-4.361703,-4.013042,1.887915,-6.555240,1.461309,0.251043,-5.240698,-7.652385,-4.206784,-9.879989,-4.248854,-7.191371,-3.478906,0.020602,8.135692,4.384390,-8.962980,-9.826926,-5.219829,9.460582,8.854120,-4.938319,7.866563,-6.834942,-3.758447,-7.716701,5.079403,-7.594500,-5.605446,-0.391058,9.008729,8.259356,-5.335844,-0.737565,1.190864,-4.492652,-8.783795,-0.960819,0.789663,-3.966869,2.704592,-8.667827,6.588764,2.240434,9.241148,6.109687,5.097882,-5.836897,-0.666323,-4.292525,2.052118,-9.018936,0.901947,4.369607,5.732098,-0.464766,-4.443070,-9.480322,-5.623564,6.039427,5.934314,-2.103552,-7.375456,-7.567966,7.214888,-7.373507,-4.246953,9.476279,8.171842,-4.803201,-5.942222,5.234583,-0.299543,-2.804863,0.110638,-2.823531,0.839134,1.096769,7.508931,-9.325868,-1.588434,6.649870,-4.495054,-8.118985,9.416457,-2.905249,-3.061967,-6.245747,1.735082,7.138040,6.790019,-0.282085],[-2.275706,-8.373605,7.411396,2.841574,3.367257,-3.510562,9.977123,8.171384,-4.924148,-1.294777,5.957863,2.066145,2.744798,-7.970681,-3.229100,0.760291,-8.413744,-2.720568,8.102499,-5.447285,6.829890,-3.509372,6.956759,4.239109,6.523883,-9.630763,8.478269,-1.145429,-7.293837,7.742558,6.108868,-0.184237,-6.994167,6.448175,-6.373768,-7.985866,9.508300,-0.920996,-3.723048,-8.800494,3.706383,-5.495560,-0.650934,3.985163,1.248685,4.660291,-1.783577,2.692646,-0.628571,-0.192068,-0.549813,-8.558216,1.877515,-0.926338,2.588059,6.151275,-1.227718,8.764724,-7.471762,5.931531,1.879534,-6.807169,-5.156256,-5.955639,4.029802,2.942910,5.224198,3.691190,-2.330190,-8.185634,-4.080801,-4.321519,1.273091,7.806515,3.025683,-8.074848,9.480025,-2.133930,-7.444437,-4.628742,6.444149,6.635944,-7.413226,1.441290,-3.202068,-5.456272,3.176477,9.000086,-8.651363,1.426849,-3.533752,-1.013264,-4.291506,1.947562,8.136328,-1.617767,-4.294340,8.880204,-4.350774,8.179622,-8.892632,3.429814,5.934216,-2.142627,0.762979,8.370427,3.629199,1.019177,-5.982545,-3.739711,3.789090,-0.903185,-5.020857,-5.526132,-4.269567,-2.201766,3.284627]], dtype = "float32")#candidate|8071|(13, 117)|const|float32
bop_8072 = relay.equal(call_8067.astype('bool'), relay.reshape(const_8071.astype('bool'), relay.shape_of(call_8067))) # shape=(13, 117)
bop_8075 = relay.equal(call_8068.astype('bool'), relay.reshape(const_8071.astype('bool'), relay.shape_of(call_8068))) # shape=(13, 117)
func_2643_call = mod.get_global_var('func_2643')
func_2646_call = mutated_mod.get_global_var('func_2646')
const_8080 = relay.const([False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,True,True,True,False,True,True,False,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,True,True,False,True,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,True,False,True,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,False,False,False,True,False,False,False,False,False,True,True,True,True,False,True,True,False,False,True,False,False,True,False,True,True,True,False,False,True,True,False,False,True,False,True,True,False,False,True,False,True,False,False,False,False,True,False,False,True,True,False,True,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,True,True,True,True,True,True,True,True,False,True,False,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True], dtype = "bool")#candidate|8080|(240,)|const|bool
call_8079 = relay.TupleGetItem(func_2643_call(relay.reshape(const_8080.astype('bool'), [4, 12, 5])), 1)
call_8081 = relay.TupleGetItem(func_2646_call(relay.reshape(const_8080.astype('bool'), [4, 12, 5])), 1)
bop_8086 = relay.divide(call_8067.astype('float64'), relay.reshape(const_8071.astype('float64'), relay.shape_of(call_8067))) # shape=(13, 117)
bop_8089 = relay.divide(call_8068.astype('float64'), relay.reshape(const_8071.astype('float64'), relay.shape_of(call_8068))) # shape=(13, 117)
uop_8092 = relay.sin(bop_8086.astype('float64')) # shape=(13, 117)
uop_8094 = relay.sin(bop_8089.astype('float64')) # shape=(13, 117)
func_5921_call = mod.get_global_var('func_5921')
func_5923_call = mutated_mod.get_global_var('func_5923')
call_8096 = relay.TupleGetItem(func_5921_call(), 0)
call_8097 = relay.TupleGetItem(func_5923_call(), 0)
bop_8114 = relay.bitwise_or(bop_8072.astype('uint16'), relay.reshape(bop_8086.astype('uint16'), relay.shape_of(bop_8072))) # shape=(13, 117)
bop_8117 = relay.bitwise_or(bop_8075.astype('uint16'), relay.reshape(bop_8089.astype('uint16'), relay.shape_of(bop_8075))) # shape=(13, 117)
uop_8133 = relay.asin(bop_8086.astype('float64')) # shape=(13, 117)
uop_8135 = relay.asin(bop_8089.astype('float64')) # shape=(13, 117)
func_3928_call = mod.get_global_var('func_3928')
func_3931_call = mutated_mod.get_global_var('func_3931')
const_8143 = relay.const([[-1.265242,-0.739955,5.822593,-8.159027,-8.437007,1.440459,6.466544,5.591519,-0.753271,7.730682,-6.200892,-8.957690,-5.939116,3.216463,-4.724061,6.758230,-4.817345,-8.789856,-9.910168,-9.960139,3.973267,-3.200719,-1.999543,5.009198,9.367937,5.598571,2.792886,3.973429,9.790962,-9.218840,-3.788298,-0.960924,7.200217,-7.447475,7.774032,-3.574503,7.451397,6.165201,-8.451307,-3.605814,-0.140034,1.527327,4.429174,4.579943,9.518111,3.945609,-4.918615,-6.162600,-9.257902,3.836998,9.865137,-2.262211,-0.874283,3.994944,-6.904295,5.749530,6.535500,-0.652737,0.864357,1.207353,8.882652,-7.959013,-5.991634,6.719405,-9.847285,-8.491737,-7.096355,-1.038955,9.705405,1.509826,7.777936,-6.306266,5.055219,-1.079980,-6.752865,-0.847885,-2.214489,0.293255,4.671083,9.443053,4.205257,-6.395212,5.820019,3.386207,-0.921579,-4.109124,2.372249,-3.783636,-8.089271,3.005057,-8.182122,-8.123084,-0.595537,8.328942,0.684795,5.943300,-0.046849,-8.053215,-2.272961,-9.599867,2.050228,9.209442,5.026743,2.277705,-5.476960,3.545197,-3.037704,3.072266,3.194037,0.315022,6.841100,-8.869488,-2.322711,6.289531,-8.572245,7.558328,2.533347,-8.228025,-4.568388,-8.194172,-6.258372,5.058707,7.869151,9.116673,5.803073,0.833147,-5.139319,-6.723284,7.542460,6.228742,-8.716532,1.922324,1.592091,-3.753799,9.610806,-5.818453,-2.096273,3.391581,-6.014393,9.869804,6.521076,6.933003,-5.588413,-5.562553,2.854693,4.794255,-6.835887,7.343788,-5.283577,2.061463,-9.160548,3.620789,3.084001,7.505017,6.963193,4.167552,0.849503,-3.096552,-7.032452,5.903659,3.921017,0.708177,4.614738,8.800462,1.661757,-7.540329,3.040848,-6.714281,-8.925734,-5.890501,-3.195685,-8.389465,-2.720977,3.591027,8.803343,7.498206,0.930997,-4.067135,4.872502,-9.269729,-4.693179,8.534963,-9.778660,-6.779399,6.878970,0.158296,-2.471041,5.118862,-6.383124,4.135383,-8.364015,-8.793197,-2.962850,-9.486643,7.248672,-7.304348,8.748735,2.272227,3.827540,-6.316918,-3.363072,4.153230,3.882349,-2.225554,2.492210,7.199336,-0.874708,-6.163560,-2.164286,-6.126123,4.999457,9.586406,-2.285902,9.550547,-6.788476,-3.622025,5.659394,2.088409,6.233279,-9.300572,-6.441472,-5.908196,-0.331872,7.650392,3.314391,-0.333471,-7.828970,-4.755925,-2.378749,-5.532073,2.246681,3.634973,-8.624120,-2.461258,-3.562977,0.106466,-0.086768,3.829103,-3.647708,-1.418979,1.537965,-1.456538,-5.717773,-9.624719,-7.407946,-9.628714,-0.208809,-8.876705,-3.465561,-5.159860,-8.517264,3.044675,1.731284,6.291303,5.651517,7.557914,-0.827581,-9.180137,-6.076132,1.506124,-8.483211,7.364481,9.724424,3.174464,-1.735891,9.866258,7.100780,1.330239,3.448977,-9.994018,-6.748993,0.373929,-5.433163,-9.563894,6.618036,7.823997,0.996744,-2.960255,3.483068,-7.872298,0.406707,-3.786933,0.394557,8.357287,-4.786394,6.434044,4.029878,3.533193,0.930479,5.858581,3.442646,-0.597088,2.862301,1.128744,-0.704013,-6.797875,1.341823,9.154474,-9.305959,-4.679539,-6.468066,-6.401561,-2.066020,7.104462,0.206117,-0.516728,-9.599599,3.018251,0.366115,-6.831798,-0.015945,1.453071,6.234910,-5.700690,1.610294,-2.404899,8.037006,-7.684166,-8.290756,2.363322,-1.789802,-8.460757,-9.774458,-3.584737,-5.868742,7.790721,1.315418,2.414095,7.173409,-7.805196,-9.408630,1.841874,6.998332,8.180495,9.487652,5.117240,0.083340,-9.886600,4.551636,2.531570,6.698253,1.063500,-5.015093,2.880506,-7.339663,-3.090712,-3.178164,-4.713336,8.713883,2.880246,-5.365791,-6.413195,-9.808915,3.442205,8.296200,-4.290201,-3.475585,9.076530,-6.728769,-9.429964,4.689144,4.119947,-6.825345,6.174082],[2.776670,6.243889,-6.932851,5.973586,-3.995738,-2.871307,-5.233749,6.660153,-9.153766,7.073957,0.121699,-3.500267,-6.459162,0.069181,6.642345,5.539060,2.335983,2.871914,-6.811521,4.055100,3.740486,9.077605,-4.323687,-7.824806,5.845460,5.068805,-2.769449,5.285296,0.108377,2.196448,-1.406591,6.555132,6.737738,1.228031,-4.594970,7.780180,-7.952613,5.494179,7.418108,-8.716628,3.152027,2.558444,5.037674,-0.236173,7.204576,7.289551,-0.042110,-0.894155,1.018640,-9.097078,-3.395288,-6.775100,-3.794092,7.012605,8.598067,-1.710051,1.209195,-2.969510,8.859038,5.530437,8.591029,-5.519376,4.819941,0.724019,-9.135344,-2.662537,1.255586,0.105440,-9.043868,1.340629,-5.410737,-4.345698,-8.390595,-9.250318,-2.715499,-9.676467,3.096219,9.419516,6.518220,5.533405,-3.635284,-0.275818,-7.773650,6.700486,-7.137914,9.241287,3.542915,-0.412684,-1.994441,1.225447,-5.826765,-7.289047,-8.229927,4.054582,4.514973,1.684668,-3.197171,4.274729,1.732715,-3.738447,-7.974538,1.484579,9.174299,7.306397,-8.574802,-3.297367,-5.861226,-3.354972,1.032806,7.591680,3.287783,-1.219652,-7.172843,-9.172590,7.440040,-6.339403,-2.808104,1.090282,5.566015,-7.254924,3.280419,8.324892,9.114324,-5.595684,7.504601,7.904226,-4.951089,-8.683415,-6.326458,-7.804172,6.743894,4.045917,-7.495385,-9.301368,3.982022,-2.355126,2.383361,-0.990594,2.886030,9.312367,-0.738991,4.689731,5.258256,-1.541819,0.978459,9.743350,6.468799,-0.139878,1.238919,1.684372,7.106157,0.876091,9.790202,-3.952968,-1.924953,9.960809,-2.900655,3.581791,8.584003,5.505713,-3.870126,2.733149,5.595595,-7.543280,-0.089480,6.051535,4.007809,0.378301,1.249230,9.426020,6.470169,-9.880544,-8.489256,3.229040,6.914674,-7.647516,4.804229,6.327990,9.236219,9.715831,-1.498220,-1.028387,9.097648,-1.118981,7.625992,-5.804990,1.540151,-1.455228,-3.093118,7.771454,8.566661,-6.322416,8.209064,3.571558,8.854135,4.561554,-8.822318,9.118625,9.764957,-5.440956,1.243501,7.279410,6.333849,-9.784352,-7.559773,-8.354681,8.969290,-3.555184,-7.856580,-6.739105,6.731711,7.349683,9.665067,7.803335,2.178478,3.661965,7.172960,9.996696,-9.047159,-7.685409,7.526742,-1.615068,5.401495,2.061251,8.993994,8.635094,5.099222,-6.521787,0.588582,6.538487,8.417938,-1.967895,-9.432663,3.135937,3.190639,0.371148,-9.146988,-3.509758,-6.653374,-1.589653,4.216782,-1.677840,-6.121922,3.809602,8.063153,-8.178850,3.153228,2.437339,-5.474267,-5.875199,-7.640316,-2.001084,-2.796822,0.359351,4.184987,-3.838372,6.065843,6.464205,9.852207,-5.837606,-9.667946,6.950284,8.311587,8.311234,5.717620,7.435394,6.327028,8.575103,-6.203207,-1.922536,-5.502999,-4.872498,-0.866782,2.903296,-7.885663,-5.797601,6.980941,-8.667560,-6.754140,-1.670672,-6.133332,4.822627,-3.092670,3.247097,4.386115,-1.125355,-3.375196,-0.060924,-1.817183,-8.715709,7.698924,4.440072,-8.307470,3.724722,7.820628,-1.704990,8.795574,1.831881,-7.098817,6.249235,2.001335,2.158517,-4.515213,-8.663831,-3.445614,-3.452198,4.341741,-5.087651,7.877211,-9.980554,7.137019,-7.449669,-9.170865,-4.859253,-0.563256,8.600433,1.924183,4.849607,-0.251182,5.496249,-9.727994,-8.605635,5.599631,3.303515,-2.569575,-2.772601,3.061760,-6.404587,-0.887645,-1.982056,-7.461015,-3.642913,6.155116,-9.067310,3.717106,-1.766161,8.365678,5.657522,8.240418,5.333805,-6.177076,3.900736,8.477311,-2.477794,4.736054,-6.069971,-6.947881,0.501636,5.991569,2.441599,0.376444,-8.607296,-1.646371,-4.413093,1.871006,5.413426,9.083869,1.721964,-5.661956,-9.910460,-3.753389,-9.348714,-3.287151,-7.530569],[0.726523,-0.120765,0.160923,0.988022,5.540295,9.800575,0.459203,-8.556016,-4.412057,1.492193,1.048250,-3.869144,2.999013,-1.787983,-8.680135,0.914345,-3.333607,1.224215,-5.981892,1.695354,-2.703372,-5.026007,6.248237,-2.770147,-0.867194,1.243257,7.505311,-0.573538,-3.364482,-1.858037,6.534103,-8.561878,-1.585518,-0.365536,-6.686027,-9.967485,-4.172348,-7.813369,1.395627,3.881330,2.553787,-7.974882,-4.970504,6.781080,2.884329,-4.650440,6.925581,1.529102,-9.961624,-0.777533,6.152027,5.539669,-2.597106,-0.420217,-9.059891,0.829161,-3.670433,-8.220275,-8.298782,6.588691,-1.862895,5.912718,-5.644691,4.656076,-2.012496,0.972512,-1.424326,8.071599,-1.423584,-1.168868,-6.566195,-8.689917,3.875497,2.185804,-1.693387,-0.646627,-3.964756,-6.126387,-5.094344,6.421620,-3.038514,-5.106120,4.009852,2.950084,6.578404,-4.074190,5.245494,-0.170997,-4.942621,2.967911,-8.191811,1.463860,8.129602,6.564162,2.486612,-8.633133,2.326175,-1.157683,-6.697716,0.546421,1.570784,9.374101,-6.750397,-1.359760,-4.426936,-3.997495,0.251066,2.351485,1.401065,-8.811149,-4.968114,-8.848971,4.906732,-9.345560,-3.785638,-1.003471,-3.907302,0.813251,1.251327,5.722799,1.457332,5.942222,6.461920,6.116297,1.340963,5.243479,-6.878541,-7.454126,-2.149310,5.740644,-7.016728,-2.490238,-7.767088,4.378214,5.061840,8.004220,-7.887115,2.514882,1.022626,1.567759,-8.072495,-5.188913,-5.346204,4.498693,-7.106102,-5.409314,-2.268126,6.446768,-2.993210,-0.206231,1.749997,-0.201294,-4.837357,4.794836,-0.556009,5.056969,9.580268,2.362511,-7.450983,-2.113243,5.173414,7.582586,2.524407,-4.902068,6.547787,-4.824742,-0.315268,5.852409,-4.062013,6.097468,3.912648,-9.067583,-9.842221,-2.019763,-8.483809,4.928708,7.172373,8.806939,8.046293,-5.940706,-7.663273,7.839608,5.028028,-2.662379,6.173067,-9.379244,-7.054622,8.208259,-6.628088,0.919048,-5.101336,9.120188,4.580033,9.342387,-6.758184,3.738058,-3.111387,-3.902188,2.333357,3.705640,-2.001559,2.885685,-5.933476,8.983614,2.668671,4.038064,-6.931033,1.337231,0.989778,-6.857999,1.015250,8.005428,8.729993,4.493583,-8.727462,2.104087,9.102357,4.037345,-1.708480,-5.082921,5.637287,0.489788,-6.088229,8.707746,1.196016,-0.783170,0.191256,-2.933681,3.337492,-9.844764,7.814504,-4.407864,-0.346136,-9.222648,-7.672605,-0.311693,2.410310,3.982422,7.998191,9.115646,5.470413,8.221036,0.806440,9.645635,4.661071,-8.377436,6.998382,5.642481,-4.537313,-1.368697,5.475869,-8.612728,2.698000,-0.537742,-1.382893,0.965060,6.250016,5.678460,3.643510,9.093955,-9.451104,0.158342,-7.254980,2.677183,-9.117346,-7.843904,8.039878,-7.207886,-0.657794,6.223248,4.140428,-9.469866,8.561075,0.908445,-2.638819,1.824184,5.875494,3.314464,-9.802682,-4.152750,-5.962701,-4.472094,-5.889641,-7.262065,2.777942,0.051709,4.243234,-9.810108,9.254761,6.021872,-9.134713,-0.836581,0.124700,-1.004985,0.463053,-6.090510,1.134598,0.586031,-4.155776,-3.528506,3.509696,-4.199648,-4.159212,9.249229,-9.377200,2.293264,8.072156,-3.162346,4.686396,-5.154687,-8.356924,2.403130,9.002285,9.908964,-0.278111,-1.319969,6.032710,-4.857218,9.369036,-0.970316,-6.319479,-4.089867,2.095999,-6.790768,7.853257,4.420870,-0.031473,0.362522,2.487661,3.219767,5.138047,2.557285,-1.451962,-6.658869,7.120014,4.907483,-2.455250,-2.285181,4.778354,4.142061,6.170948,-6.881606,9.838429,-1.166420,-2.349740,-7.380820,1.983939,-9.714861,-3.784852,4.615605,4.180205,5.373468,-2.408911,-4.121853,9.099611,0.594089,-4.629433,-7.188131,5.349858,3.032737,-4.642675,1.110795,5.334269,0.980304],[-2.507986,-3.369895,8.985678,-3.304167,1.401999,1.888788,-4.219834,6.127230,-9.595347,-5.176098,-8.888551,5.568231,8.957580,-7.571536,1.218697,-9.044785,-7.757374,0.286726,2.272453,-4.670663,-9.210682,5.631607,-1.365561,-2.545894,-5.336552,-3.121127,-6.854811,2.803197,3.161833,-0.987668,7.101848,-4.023432,0.589965,1.778937,0.926998,9.651904,-1.452080,-7.633064,-5.467924,4.105959,8.969678,6.625719,-6.750003,-3.540752,1.456579,-3.681139,8.263864,-8.242954,-3.613620,2.773386,6.565571,-6.569546,4.974078,-3.986434,3.896959,-0.441277,-6.748403,-2.594536,-0.068423,-7.605253,8.356187,-7.488631,4.601789,-3.192299,5.056564,-0.807178,-8.940910,-9.075173,5.704948,0.782684,-8.972085,-0.050387,-2.275669,1.001677,0.657174,-9.798827,-3.017317,0.949424,6.841424,-3.585273,-7.244161,-3.055018,0.751441,-6.023837,1.755220,0.834979,-9.902624,-1.693063,-2.911471,7.430569,3.989205,-6.991643,8.317527,-0.160939,4.527159,3.064296,5.512098,3.377158,-6.337032,8.368810,0.571759,6.104587,-9.005180,-8.351691,-3.047632,-2.676841,4.909540,9.680270,0.735131,-6.436627,-2.128672,-9.097661,4.124778,-2.451578,3.356577,1.344250,-3.474617,-5.295153,7.248915,9.290589,1.955361,1.834163,3.305199,9.631613,-2.091582,0.847764,0.375122,-7.774090,5.572217,-0.536989,3.305081,-2.915819,-5.252440,-6.703447,0.135775,3.187389,-6.031598,-4.128919,-2.854700,-6.158301,7.612817,7.756853,3.274377,9.624943,5.494528,1.065077,4.488689,-9.247286,2.793845,5.314006,2.747202,6.503472,-3.393666,0.690213,1.713936,9.966293,9.877515,4.698335,9.046160,-5.468013,-2.792679,9.875093,8.507906,8.774569,-0.674652,4.697638,-1.581607,3.912110,-1.982612,8.543438,-6.208145,-4.121308,7.878889,-0.767802,-4.556432,4.528980,9.121618,4.155115,5.522755,0.903006,2.101759,4.508513,8.127534,-6.080849,7.475451,4.241892,3.652751,3.308913,9.373902,3.155186,-7.540834,-9.621584,5.572036,-5.306604,-2.659017,-5.358657,2.492308,5.192433,1.930479,-0.376360,9.413274,-6.302492,-2.024725,-3.547523,-4.825989,9.692218,-5.291026,-2.287293,0.930362,-8.016521,-7.195563,-7.767272,-4.554671,-9.362254,2.653528,-1.479250,-1.439639,8.157902,4.911565,-0.489341,5.424456,-8.182660,5.520564,9.468304,-5.892445,-1.654354,3.928674,-7.677782,8.873767,1.310172,7.787467,0.198063,-8.970621,-0.951235,-0.694047,7.682792,1.772465,-9.839032,-6.038843,5.638669,0.214345,9.565616,-0.779809,6.540675,-9.540259,0.463619,-4.509942,2.321686,0.381152,-1.588363,-4.940633,-0.237984,-1.038637,-4.793509,-5.543948,0.847553,-7.650990,-5.235898,-9.256860,-0.403108,-3.902937,-7.172763,-4.496622,-4.210035,-7.842093,-7.868338,-6.404644,-4.139919,7.144019,-2.024458,-4.806034,1.455528,-4.512914,-0.078163,7.699121,-9.424576,-7.430099,8.889343,-7.524501,-6.676767,-2.259045,-6.919129,7.418246,5.949712,0.528788,4.355347,7.025743,-7.107614,-9.516949,-5.719069,1.303597,-1.612590,-3.371262,3.787522,6.091181,1.359353,-9.039142,-4.517510,-2.694111,-8.611447,6.210497,7.355964,-6.462718,5.550562,-0.357317,1.847928,-9.075002,5.042237,2.041106,7.575528,2.703302,-1.183052,-0.372871,3.161283,1.649988,5.933134,8.746701,6.863872,-2.522845,2.108013,6.795509,9.780205,-6.879461,-6.678439,3.430902,-7.470059,-0.573634,-2.907747,6.758860,6.682522,2.895641,-8.358140,2.774205,-7.071322,-0.996259,1.045219,-8.797688,2.464448,2.776962,-4.492071,1.429185,9.585606,-9.157653,0.285017,-3.169080,-5.854237,7.806422,-9.840003,-0.506405,-8.578399,-9.211000,-7.465504,-2.666280,9.909116,9.665617,-0.617143,-5.874413,-8.989241,9.342350,7.364504,-3.106772,8.280822,-7.254444,1.945069]], dtype = "float64")#candidate|8143|(4, 364)|const|float64
call_8142 = relay.TupleGetItem(func_3928_call(relay.reshape(const_8143.astype('float64'), [1456,]), relay.reshape(call_8067.astype('uint16'), [169, 9]), ), 2)
call_8144 = relay.TupleGetItem(func_3931_call(relay.reshape(const_8143.astype('float64'), [1456,]), relay.reshape(call_8067.astype('uint16'), [169, 9]), ), 2)
func_3598_call = mod.get_global_var('func_3598')
func_3600_call = mutated_mod.get_global_var('func_3600')
call_8152 = relay.TupleGetItem(func_3598_call(), 0)
call_8153 = relay.TupleGetItem(func_3600_call(), 0)
func_5385_call = mod.get_global_var('func_5385')
func_5386_call = mutated_mod.get_global_var('func_5386')
call_8154 = relay.TupleGetItem(func_5385_call(), 0)
call_8155 = relay.TupleGetItem(func_5386_call(), 0)
output = relay.Tuple([call_8079,const_8080,uop_8092,call_8096,bop_8114,uop_8133,call_8142,const_8143,call_8152,call_8154,])
output2 = relay.Tuple([call_8081,const_8080,uop_8094,call_8097,bop_8117,uop_8135,call_8144,const_8143,call_8153,call_8155,])
func_8164 = relay.Function([], output)
mod['func_8164'] = func_8164
mod = relay.transform.InferType()(mod)
output = func_8164()
func_8165 = relay.Function([], output)
mutated_mod['func_8165'] = func_8165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6115_call = mod.get_global_var('func_6115')
func_6116_call = mutated_mod.get_global_var('func_6116')
call_8174 = relay.TupleGetItem(func_6115_call(), 0)
call_8175 = relay.TupleGetItem(func_6116_call(), 0)
output = relay.Tuple([call_8174,])
output2 = relay.Tuple([call_8175,])
func_8177 = relay.Function([], output)
mod['func_8177'] = func_8177
mod = relay.transform.InferType()(mod)
mutated_mod['func_8177'] = func_8177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8177_call = mutated_mod.get_global_var('func_8177')
call_8178 = func_8177_call()
output = call_8178
func_8179 = relay.Function([], output)
mutated_mod['func_8179'] = func_8179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4785_call = mod.get_global_var('func_4785')
func_4786_call = mutated_mod.get_global_var('func_4786')
call_8188 = func_4785_call()
call_8189 = func_4785_call()
output = relay.Tuple([call_8188,])
output2 = relay.Tuple([call_8189,])
func_8197 = relay.Function([], output)
mod['func_8197'] = func_8197
mod = relay.transform.InferType()(mod)
output = func_8197()
func_8198 = relay.Function([], output)
mutated_mod['func_8198'] = func_8198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6706_call = mod.get_global_var('func_6706')
func_6708_call = mutated_mod.get_global_var('func_6708')
call_8228 = relay.TupleGetItem(func_6706_call(), 1)
call_8229 = relay.TupleGetItem(func_6708_call(), 1)
output = relay.Tuple([call_8228,])
output2 = relay.Tuple([call_8229,])
func_8251 = relay.Function([], output)
mod['func_8251'] = func_8251
mod = relay.transform.InferType()(mod)
output = func_8251()
func_8252 = relay.Function([], output)
mutated_mod['func_8252'] = func_8252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4039_call = mod.get_global_var('func_4039')
func_4040_call = mutated_mod.get_global_var('func_4040')
call_8255 = relay.TupleGetItem(func_4039_call(), 0)
call_8256 = relay.TupleGetItem(func_4040_call(), 0)
func_3989_call = mod.get_global_var('func_3989')
func_3991_call = mutated_mod.get_global_var('func_3991')
call_8261 = relay.TupleGetItem(func_3989_call(), 2)
call_8262 = relay.TupleGetItem(func_3991_call(), 2)
output = relay.Tuple([call_8255,call_8261,])
output2 = relay.Tuple([call_8256,call_8262,])
func_8266 = relay.Function([], output)
mod['func_8266'] = func_8266
mod = relay.transform.InferType()(mod)
mutated_mod['func_8266'] = func_8266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8266_call = mutated_mod.get_global_var('func_8266')
call_8267 = func_8266_call()
output = call_8267
func_8268 = relay.Function([], output)
mutated_mod['func_8268'] = func_8268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2804_call = mod.get_global_var('func_2804')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_8336 = func_2804_call()
call_8337 = func_2804_call()
func_1796_call = mod.get_global_var('func_1796')
func_1798_call = mutated_mod.get_global_var('func_1798')
var_8347 = relay.var("var_8347", dtype = "float64", shape = (1456,))#candidate|8347|(1456,)|var|float64
call_8346 = relay.TupleGetItem(func_1796_call(relay.reshape(var_8347.astype('float64'), [1456,])), 1)
call_8348 = relay.TupleGetItem(func_1798_call(relay.reshape(var_8347.astype('float64'), [1456,])), 1)
output = relay.Tuple([call_8336,call_8346,var_8347,])
output2 = relay.Tuple([call_8337,call_8348,var_8347,])
func_8349 = relay.Function([var_8347,], output)
mod['func_8349'] = func_8349
mod = relay.transform.InferType()(mod)
var_8350 = relay.var("var_8350", dtype = "float64", shape = (1456,))#candidate|8350|(1456,)|var|float64
output = func_8349(var_8350)
func_8351 = relay.Function([var_8350], output)
mutated_mod['func_8351'] = func_8351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1884_call = mod.get_global_var('func_1884')
func_1885_call = mutated_mod.get_global_var('func_1885')
call_8355 = relay.TupleGetItem(func_1884_call(), 0)
call_8356 = relay.TupleGetItem(func_1885_call(), 0)
output = relay.Tuple([call_8355,])
output2 = relay.Tuple([call_8356,])
func_8377 = relay.Function([], output)
mod['func_8377'] = func_8377
mod = relay.transform.InferType()(mod)
mutated_mod['func_8377'] = func_8377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8377_call = mutated_mod.get_global_var('func_8377')
call_8378 = func_8377_call()
output = call_8378
func_8379 = relay.Function([], output)
mutated_mod['func_8379'] = func_8379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1199_call = mod.get_global_var('func_1199')
func_1200_call = mutated_mod.get_global_var('func_1200')
call_8389 = relay.TupleGetItem(func_1199_call(), 2)
call_8390 = relay.TupleGetItem(func_1200_call(), 2)
output = call_8389
output2 = call_8390
func_8407 = relay.Function([], output)
mod['func_8407'] = func_8407
mod = relay.transform.InferType()(mod)
output = func_8407()
func_8408 = relay.Function([], output)
mutated_mod['func_8408'] = func_8408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2319_call = mod.get_global_var('func_2319')
func_2320_call = mutated_mod.get_global_var('func_2320')
call_8452 = relay.TupleGetItem(func_2319_call(), 0)
call_8453 = relay.TupleGetItem(func_2320_call(), 0)
output = call_8452
output2 = call_8453
func_8456 = relay.Function([], output)
mod['func_8456'] = func_8456
mod = relay.transform.InferType()(mod)
mutated_mod['func_8456'] = func_8456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8456_call = mutated_mod.get_global_var('func_8456')
call_8457 = func_8456_call()
output = call_8457
func_8458 = relay.Function([], output)
mutated_mod['func_8458'] = func_8458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1740_call = mod.get_global_var('func_1740')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_8541 = relay.TupleGetItem(func_1740_call(), 0)
call_8542 = relay.TupleGetItem(func_1741_call(), 0)
var_8547 = relay.var("var_8547", dtype = "int8", shape = (1274,))#candidate|8547|(1274,)|var|int8
bop_8548 = relay.right_shift(call_8541.astype('uint64'), relay.reshape(var_8547.astype('uint64'), relay.shape_of(call_8541))) # shape=(1274,)
bop_8551 = relay.right_shift(call_8542.astype('uint64'), relay.reshape(var_8547.astype('uint64'), relay.shape_of(call_8542))) # shape=(1274,)
func_3498_call = mod.get_global_var('func_3498')
func_3500_call = mutated_mod.get_global_var('func_3500')
call_8555 = relay.TupleGetItem(func_3498_call(relay.reshape(bop_8548.astype('bool'), [1274,])), 2)
call_8556 = relay.TupleGetItem(func_3500_call(relay.reshape(bop_8548.astype('bool'), [1274,])), 2)
func_7820_call = mod.get_global_var('func_7820')
func_7822_call = mutated_mod.get_global_var('func_7822')
call_8562 = relay.TupleGetItem(func_7820_call(), 0)
call_8563 = relay.TupleGetItem(func_7822_call(), 0)
func_8407_call = mod.get_global_var('func_8407')
func_8408_call = mutated_mod.get_global_var('func_8408')
call_8576 = func_8407_call()
call_8577 = func_8407_call()
func_568_call = mod.get_global_var('func_568')
func_569_call = mutated_mod.get_global_var('func_569')
call_8585 = relay.TupleGetItem(func_568_call(), 0)
call_8586 = relay.TupleGetItem(func_569_call(), 0)
func_6142_call = mod.get_global_var('func_6142')
func_6143_call = mutated_mod.get_global_var('func_6143')
call_8594 = relay.TupleGetItem(func_6142_call(), 0)
call_8595 = relay.TupleGetItem(func_6143_call(), 0)
func_736_call = mod.get_global_var('func_736')
func_739_call = mutated_mod.get_global_var('func_739')
var_8600 = relay.var("var_8600", dtype = "int8", shape = (1386,))#candidate|8600|(1386,)|var|int8
call_8599 = relay.TupleGetItem(func_736_call(relay.reshape(var_8600.astype('int8'), [9, 11, 14])), 0)
call_8601 = relay.TupleGetItem(func_739_call(relay.reshape(var_8600.astype('int8'), [9, 11, 14])), 0)
func_1004_call = mod.get_global_var('func_1004')
func_1005_call = mutated_mod.get_global_var('func_1005')
call_8607 = relay.TupleGetItem(func_1004_call(), 1)
call_8608 = relay.TupleGetItem(func_1005_call(), 1)
uop_8621 = relay.atan(call_8599.astype('float64')) # shape=(9, 11, 14)
uop_8623 = relay.atan(call_8601.astype('float64')) # shape=(9, 11, 14)
func_1906_call = mod.get_global_var('func_1906')
func_1908_call = mutated_mod.get_global_var('func_1908')
call_8624 = relay.TupleGetItem(func_1906_call(), 0)
call_8625 = relay.TupleGetItem(func_1908_call(), 0)
func_1423_call = mod.get_global_var('func_1423')
func_1426_call = mutated_mod.get_global_var('func_1426')
call_8629 = relay.TupleGetItem(func_1423_call(relay.reshape(call_8585.astype('float64'), [1274,])), 0)
call_8630 = relay.TupleGetItem(func_1426_call(relay.reshape(call_8585.astype('float64'), [1274,])), 0)
func_3521_call = mod.get_global_var('func_3521')
func_3523_call = mutated_mod.get_global_var('func_3523')
call_8639 = relay.TupleGetItem(func_3521_call(), 2)
call_8640 = relay.TupleGetItem(func_3523_call(), 2)
func_6359_call = mod.get_global_var('func_6359')
func_6360_call = mutated_mod.get_global_var('func_6360')
call_8644 = relay.TupleGetItem(func_6359_call(), 0)
call_8645 = relay.TupleGetItem(func_6360_call(), 0)
var_8650 = relay.var("var_8650", dtype = "float64", shape = (9, 11, 14))#candidate|8650|(9, 11, 14)|var|float64
bop_8651 = relay.floor_divide(uop_8621.astype('float64'), relay.reshape(var_8650.astype('float64'), relay.shape_of(uop_8621))) # shape=(9, 11, 14)
bop_8654 = relay.floor_divide(uop_8623.astype('float64'), relay.reshape(var_8650.astype('float64'), relay.shape_of(uop_8623))) # shape=(9, 11, 14)
output = relay.Tuple([bop_8548,call_8555,call_8562,call_8576,call_8585,call_8594,var_8600,call_8607,call_8624,call_8629,call_8639,call_8644,bop_8651,])
output2 = relay.Tuple([bop_8551,call_8556,call_8563,call_8577,call_8586,call_8595,var_8600,call_8608,call_8625,call_8630,call_8640,call_8645,bop_8654,])
func_8657 = relay.Function([var_8547,var_8600,var_8650,], output)
mod['func_8657'] = func_8657
mod = relay.transform.InferType()(mod)
mutated_mod['func_8657'] = func_8657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8657_call = mutated_mod.get_global_var('func_8657')
var_8659 = relay.var("var_8659", dtype = "int8", shape = (1274,))#candidate|8659|(1274,)|var|int8
var_8660 = relay.var("var_8660", dtype = "int8", shape = (1386,))#candidate|8660|(1386,)|var|int8
var_8661 = relay.var("var_8661", dtype = "float64", shape = (9, 11, 14))#candidate|8661|(9, 11, 14)|var|float64
call_8658 = func_8657_call(var_8659,var_8660,var_8661,)
output = call_8658
func_8662 = relay.Function([var_8659,var_8660,var_8661,], output)
mutated_mod['func_8662'] = func_8662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1440_call = mod.get_global_var('func_1440')
func_1442_call = mutated_mod.get_global_var('func_1442')
call_8667 = relay.TupleGetItem(func_1440_call(), 0)
call_8668 = relay.TupleGetItem(func_1442_call(), 0)
output = call_8667
output2 = call_8668
func_8677 = relay.Function([], output)
mod['func_8677'] = func_8677
mod = relay.transform.InferType()(mod)
mutated_mod['func_8677'] = func_8677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8677_call = mutated_mod.get_global_var('func_8677')
call_8678 = func_8677_call()
output = call_8678
func_8679 = relay.Function([], output)
mutated_mod['func_8679'] = func_8679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5462_call = mod.get_global_var('func_5462')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_8715 = relay.TupleGetItem(func_5462_call(), 0)
call_8716 = relay.TupleGetItem(func_5464_call(), 0)
output = call_8715
output2 = call_8716
func_8727 = relay.Function([], output)
mod['func_8727'] = func_8727
mod = relay.transform.InferType()(mod)
output = func_8727()
func_8728 = relay.Function([], output)
mutated_mod['func_8728'] = func_8728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6359_call = mod.get_global_var('func_6359')
func_6360_call = mutated_mod.get_global_var('func_6360')
call_8763 = relay.TupleGetItem(func_6359_call(), 0)
call_8764 = relay.TupleGetItem(func_6360_call(), 0)
output = relay.Tuple([call_8763,])
output2 = relay.Tuple([call_8764,])
func_8766 = relay.Function([], output)
mod['func_8766'] = func_8766
mod = relay.transform.InferType()(mod)
mutated_mod['func_8766'] = func_8766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8766_call = mutated_mod.get_global_var('func_8766')
call_8767 = func_8766_call()
output = call_8767
func_8768 = relay.Function([], output)
mutated_mod['func_8768'] = func_8768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8377_call = mod.get_global_var('func_8377')
func_8379_call = mutated_mod.get_global_var('func_8379')
call_8876 = relay.TupleGetItem(func_8377_call(), 0)
call_8877 = relay.TupleGetItem(func_8379_call(), 0)
func_3801_call = mod.get_global_var('func_3801')
func_3803_call = mutated_mod.get_global_var('func_3803')
call_8885 = relay.TupleGetItem(func_3801_call(), 0)
call_8886 = relay.TupleGetItem(func_3803_call(), 0)
func_6829_call = mod.get_global_var('func_6829')
func_6831_call = mutated_mod.get_global_var('func_6831')
call_8895 = relay.TupleGetItem(func_6829_call(), 0)
call_8896 = relay.TupleGetItem(func_6831_call(), 0)
output = relay.Tuple([call_8876,call_8885,call_8895,])
output2 = relay.Tuple([call_8877,call_8886,call_8896,])
func_8905 = relay.Function([], output)
mod['func_8905'] = func_8905
mod = relay.transform.InferType()(mod)
mutated_mod['func_8905'] = func_8905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8905_call = mutated_mod.get_global_var('func_8905')
call_8906 = func_8905_call()
output = call_8906
func_8907 = relay.Function([], output)
mutated_mod['func_8907'] = func_8907
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8921 = relay.var("var_8921", dtype = "float32", shape = (4, 14, 1))#candidate|8921|(4, 14, 1)|var|float32
uop_8922 = relay.cos(var_8921.astype('float32')) # shape=(4, 14, 1)
bop_8928 = relay.less(uop_8922.astype('bool'), relay.reshape(var_8921.astype('bool'), relay.shape_of(uop_8922))) # shape=(4, 14, 1)
output = relay.Tuple([bop_8928,])
output2 = relay.Tuple([bop_8928,])
func_8951 = relay.Function([var_8921,], output)
mod['func_8951'] = func_8951
mod = relay.transform.InferType()(mod)
var_8952 = relay.var("var_8952", dtype = "float32", shape = (4, 14, 1))#candidate|8952|(4, 14, 1)|var|float32
output = func_8951(var_8952)
func_8953 = relay.Function([var_8952], output)
mutated_mod['func_8953'] = func_8953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3124_call = mod.get_global_var('func_3124')
func_3125_call = mutated_mod.get_global_var('func_3125')
call_8961 = func_3124_call()
call_8962 = func_3124_call()
func_6470_call = mod.get_global_var('func_6470')
func_6471_call = mutated_mod.get_global_var('func_6471')
call_8964 = func_6470_call()
call_8965 = func_6470_call()
output = relay.Tuple([call_8961,call_8964,])
output2 = relay.Tuple([call_8962,call_8965,])
func_8972 = relay.Function([], output)
mod['func_8972'] = func_8972
mod = relay.transform.InferType()(mod)
mutated_mod['func_8972'] = func_8972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8972_call = mutated_mod.get_global_var('func_8972')
call_8973 = func_8972_call()
output = call_8973
func_8974 = relay.Function([], output)
mutated_mod['func_8974'] = func_8974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3989_call = mod.get_global_var('func_3989')
func_3991_call = mutated_mod.get_global_var('func_3991')
call_8988 = relay.TupleGetItem(func_3989_call(), 1)
call_8989 = relay.TupleGetItem(func_3991_call(), 1)
output = relay.Tuple([call_8988,])
output2 = relay.Tuple([call_8989,])
func_9047 = relay.Function([], output)
mod['func_9047'] = func_9047
mod = relay.transform.InferType()(mod)
output = func_9047()
func_9048 = relay.Function([], output)
mutated_mod['func_9048'] = func_9048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3124_call = mod.get_global_var('func_3124')
func_3125_call = mutated_mod.get_global_var('func_3125')
call_9054 = func_3124_call()
call_9055 = func_3124_call()
output = relay.Tuple([call_9054,])
output2 = relay.Tuple([call_9055,])
func_9059 = relay.Function([], output)
mod['func_9059'] = func_9059
mod = relay.transform.InferType()(mod)
mutated_mod['func_9059'] = func_9059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9059_call = mutated_mod.get_global_var('func_9059')
call_9060 = func_9059_call()
output = call_9060
func_9061 = relay.Function([], output)
mutated_mod['func_9061'] = func_9061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2804_call = mod.get_global_var('func_2804')
func_2806_call = mutated_mod.get_global_var('func_2806')
call_9072 = func_2804_call()
call_9073 = func_2804_call()
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_9075 = func_555_call()
call_9076 = func_555_call()
func_3049_call = mod.get_global_var('func_3049')
func_3051_call = mutated_mod.get_global_var('func_3051')
call_9100 = relay.TupleGetItem(func_3049_call(), 0)
call_9101 = relay.TupleGetItem(func_3051_call(), 0)
output = relay.Tuple([call_9072,call_9075,call_9100,])
output2 = relay.Tuple([call_9073,call_9076,call_9101,])
func_9104 = relay.Function([], output)
mod['func_9104'] = func_9104
mod = relay.transform.InferType()(mod)
output = func_9104()
func_9105 = relay.Function([], output)
mutated_mod['func_9105'] = func_9105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1740_call = mod.get_global_var('func_1740')
func_1741_call = mutated_mod.get_global_var('func_1741')
call_9119 = relay.TupleGetItem(func_1740_call(), 1)
call_9120 = relay.TupleGetItem(func_1741_call(), 1)
func_1613_call = mod.get_global_var('func_1613')
func_1614_call = mutated_mod.get_global_var('func_1614')
call_9128 = func_1613_call()
call_9129 = func_1613_call()
func_7256_call = mod.get_global_var('func_7256')
func_7258_call = mutated_mod.get_global_var('func_7258')
call_9130 = relay.TupleGetItem(func_7256_call(), 1)
call_9131 = relay.TupleGetItem(func_7258_call(), 1)
output = relay.Tuple([call_9119,call_9128,call_9130,])
output2 = relay.Tuple([call_9120,call_9129,call_9131,])
func_9134 = relay.Function([], output)
mod['func_9134'] = func_9134
mod = relay.transform.InferType()(mod)
mutated_mod['func_9134'] = func_9134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9134_call = mutated_mod.get_global_var('func_9134')
call_9135 = func_9134_call()
output = call_9135
func_9136 = relay.Function([], output)
mutated_mod['func_9136'] = func_9136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8251_call = mod.get_global_var('func_8251')
func_8252_call = mutated_mod.get_global_var('func_8252')
call_9140 = relay.TupleGetItem(func_8251_call(), 0)
call_9141 = relay.TupleGetItem(func_8252_call(), 0)
func_7964_call = mod.get_global_var('func_7964')
func_7965_call = mutated_mod.get_global_var('func_7965')
call_9148 = func_7964_call()
call_9149 = func_7964_call()
func_7354_call = mod.get_global_var('func_7354')
func_7355_call = mutated_mod.get_global_var('func_7355')
call_9152 = relay.TupleGetItem(func_7354_call(), 0)
call_9153 = relay.TupleGetItem(func_7355_call(), 0)
func_3170_call = mod.get_global_var('func_3170')
func_3174_call = mutated_mod.get_global_var('func_3174')
const_9157 = relay.const([8,8,-1,6,1,-10,-7,2,-5,-6,-3,10,-8,-1,9,-1,-3,-1,-2,-2,6,3,-4,7,1,10,8,4,-8,6], dtype = "uint8")#candidate|9157|(30,)|const|uint8
call_9156 = relay.TupleGetItem(func_3170_call(relay.reshape(const_9157.astype('uint8'), [3, 2, 5]), relay.reshape(const_9157.astype('uint8'), [3, 2, 5]), ), 1)
call_9158 = relay.TupleGetItem(func_3174_call(relay.reshape(const_9157.astype('uint8'), [3, 2, 5]), relay.reshape(const_9157.astype('uint8'), [3, 2, 5]), ), 1)
output = relay.Tuple([call_9140,call_9148,call_9152,call_9156,const_9157,])
output2 = relay.Tuple([call_9141,call_9149,call_9153,call_9158,const_9157,])
func_9170 = relay.Function([], output)
mod['func_9170'] = func_9170
mod = relay.transform.InferType()(mod)
mutated_mod['func_9170'] = func_9170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9170_call = mutated_mod.get_global_var('func_9170')
call_9171 = func_9170_call()
output = call_9171
func_9172 = relay.Function([], output)
mutated_mod['func_9172'] = func_9172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7568_call = mod.get_global_var('func_7568')
func_7569_call = mutated_mod.get_global_var('func_7569')
call_9200 = relay.TupleGetItem(func_7568_call(), 0)
call_9201 = relay.TupleGetItem(func_7569_call(), 0)
output = call_9200
output2 = call_9201
func_9207 = relay.Function([], output)
mod['func_9207'] = func_9207
mod = relay.transform.InferType()(mod)
output = func_9207()
func_9208 = relay.Function([], output)
mutated_mod['func_9208'] = func_9208
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9222 = relay.var("var_9222", dtype = "int8", shape = (6, 10, 10))#candidate|9222|(6, 10, 10)|var|int8
var_9223 = relay.var("var_9223", dtype = "int8", shape = (6, 10, 10))#candidate|9223|(6, 10, 10)|var|int8
bop_9224 = relay.maximum(var_9222.astype('int8'), relay.reshape(var_9223.astype('int8'), relay.shape_of(var_9222))) # shape=(6, 10, 10)
output = relay.Tuple([bop_9224,])
output2 = relay.Tuple([bop_9224,])
func_9229 = relay.Function([var_9222,var_9223,], output)
mod['func_9229'] = func_9229
mod = relay.transform.InferType()(mod)
var_9230 = relay.var("var_9230", dtype = "int8", shape = (6, 10, 10))#candidate|9230|(6, 10, 10)|var|int8
var_9231 = relay.var("var_9231", dtype = "int8", shape = (6, 10, 10))#candidate|9231|(6, 10, 10)|var|int8
output = func_9229(var_9230,var_9231,)
func_9232 = relay.Function([var_9230,var_9231,], output)
mutated_mod['func_9232'] = func_9232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3521_call = mod.get_global_var('func_3521')
func_3523_call = mutated_mod.get_global_var('func_3523')
call_9269 = relay.TupleGetItem(func_3521_call(), 2)
call_9270 = relay.TupleGetItem(func_3523_call(), 2)
output = relay.Tuple([call_9269,])
output2 = relay.Tuple([call_9270,])
func_9274 = relay.Function([], output)
mod['func_9274'] = func_9274
mod = relay.transform.InferType()(mod)
output = func_9274()
func_9275 = relay.Function([], output)
mutated_mod['func_9275'] = func_9275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9207_call = mod.get_global_var('func_9207')
func_9208_call = mutated_mod.get_global_var('func_9208')
call_9321 = func_9207_call()
call_9322 = func_9207_call()
output = call_9321
output2 = call_9322
func_9336 = relay.Function([], output)
mod['func_9336'] = func_9336
mod = relay.transform.InferType()(mod)
mutated_mod['func_9336'] = func_9336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9336_call = mutated_mod.get_global_var('func_9336')
call_9337 = func_9336_call()
output = call_9337
func_9338 = relay.Function([], output)
mutated_mod['func_9338'] = func_9338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3112_call = mod.get_global_var('func_3112')
func_3114_call = mutated_mod.get_global_var('func_3114')
call_9349 = relay.TupleGetItem(func_3112_call(), 1)
call_9350 = relay.TupleGetItem(func_3114_call(), 1)
uop_9353 = relay.cosh(call_9349.astype('float64')) # shape=(9, 13, 13)
uop_9355 = relay.cosh(call_9350.astype('float64')) # shape=(9, 13, 13)
output = uop_9353
output2 = uop_9355
func_9371 = relay.Function([], output)
mod['func_9371'] = func_9371
mod = relay.transform.InferType()(mod)
output = func_9371()
func_9372 = relay.Function([], output)
mutated_mod['func_9372'] = func_9372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8266_call = mod.get_global_var('func_8266')
func_8268_call = mutated_mod.get_global_var('func_8268')
call_9380 = relay.TupleGetItem(func_8266_call(), 0)
call_9381 = relay.TupleGetItem(func_8268_call(), 0)
func_2643_call = mod.get_global_var('func_2643')
func_2646_call = mutated_mod.get_global_var('func_2646')
call_9384 = relay.TupleGetItem(func_2643_call(relay.reshape(call_9380.astype('bool'), [4, 12, 5])), 1)
call_9385 = relay.TupleGetItem(func_2646_call(relay.reshape(call_9380.astype('bool'), [4, 12, 5])), 1)
func_4785_call = mod.get_global_var('func_4785')
func_4786_call = mutated_mod.get_global_var('func_4786')
call_9387 = func_4785_call()
call_9388 = func_4785_call()
output = relay.Tuple([call_9380,call_9384,call_9387,])
output2 = relay.Tuple([call_9381,call_9385,call_9388,])
func_9392 = relay.Function([], output)
mod['func_9392'] = func_9392
mod = relay.transform.InferType()(mod)
mutated_mod['func_9392'] = func_9392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9392_call = mutated_mod.get_global_var('func_9392')
call_9393 = func_9392_call()
output = call_9393
func_9394 = relay.Function([], output)
mutated_mod['func_9394'] = func_9394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9104_call = mod.get_global_var('func_9104')
func_9105_call = mutated_mod.get_global_var('func_9105')
call_9395 = relay.TupleGetItem(func_9104_call(), 1)
call_9396 = relay.TupleGetItem(func_9105_call(), 1)
func_4149_call = mod.get_global_var('func_4149')
func_4151_call = mutated_mod.get_global_var('func_4151')
call_9408 = relay.TupleGetItem(func_4149_call(), 2)
call_9409 = relay.TupleGetItem(func_4151_call(), 2)
uop_9430 = relay.sqrt(call_9395.astype('float64')) # shape=(4, 12, 5)
uop_9432 = relay.sqrt(call_9396.astype('float64')) # shape=(4, 12, 5)
func_6507_call = mod.get_global_var('func_6507')
func_6508_call = mutated_mod.get_global_var('func_6508')
call_9435 = func_6507_call()
call_9436 = func_6507_call()
func_785_call = mod.get_global_var('func_785')
func_787_call = mutated_mod.get_global_var('func_787')
call_9449 = relay.TupleGetItem(func_785_call(), 0)
call_9450 = relay.TupleGetItem(func_787_call(), 0)
func_3703_call = mod.get_global_var('func_3703')
func_3704_call = mutated_mod.get_global_var('func_3704')
call_9456 = relay.TupleGetItem(func_3703_call(), 0)
call_9457 = relay.TupleGetItem(func_3704_call(), 0)
output = relay.Tuple([call_9408,uop_9430,call_9435,call_9449,call_9456,])
output2 = relay.Tuple([call_9409,uop_9432,call_9436,call_9450,call_9457,])
func_9458 = relay.Function([], output)
mod['func_9458'] = func_9458
mod = relay.transform.InferType()(mod)
mutated_mod['func_9458'] = func_9458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9458_call = mutated_mod.get_global_var('func_9458')
call_9459 = func_9458_call()
output = call_9459
func_9460 = relay.Function([], output)
mutated_mod['func_9460'] = func_9460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_785_call = mod.get_global_var('func_785')
func_787_call = mutated_mod.get_global_var('func_787')
call_9463 = relay.TupleGetItem(func_785_call(), 0)
call_9464 = relay.TupleGetItem(func_787_call(), 0)
func_7018_call = mod.get_global_var('func_7018')
func_7020_call = mutated_mod.get_global_var('func_7020')
call_9476 = relay.TupleGetItem(func_7018_call(), 0)
call_9477 = relay.TupleGetItem(func_7020_call(), 0)
func_8407_call = mod.get_global_var('func_8407')
func_8408_call = mutated_mod.get_global_var('func_8408')
call_9480 = func_8407_call()
call_9481 = func_8407_call()
output = relay.Tuple([call_9463,call_9476,call_9480,])
output2 = relay.Tuple([call_9464,call_9477,call_9481,])
func_9527 = relay.Function([], output)
mod['func_9527'] = func_9527
mod = relay.transform.InferType()(mod)
output = func_9527()
func_9528 = relay.Function([], output)
mutated_mod['func_9528'] = func_9528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_397_call = mod.get_global_var('func_397')
func_398_call = mutated_mod.get_global_var('func_398')
call_9534 = func_397_call()
call_9535 = func_397_call()
output = call_9534
output2 = call_9535
func_9548 = relay.Function([], output)
mod['func_9548'] = func_9548
mod = relay.transform.InferType()(mod)
mutated_mod['func_9548'] = func_9548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9548_call = mutated_mod.get_global_var('func_9548')
call_9549 = func_9548_call()
output = call_9549
func_9550 = relay.Function([], output)
mutated_mod['func_9550'] = func_9550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3227_call = mod.get_global_var('func_3227')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_9551 = relay.TupleGetItem(func_3227_call(), 1)
call_9552 = relay.TupleGetItem(func_3228_call(), 1)
func_9104_call = mod.get_global_var('func_9104')
func_9105_call = mutated_mod.get_global_var('func_9105')
call_9562 = relay.TupleGetItem(func_9104_call(), 0)
call_9563 = relay.TupleGetItem(func_9105_call(), 0)
func_6470_call = mod.get_global_var('func_6470')
func_6471_call = mutated_mod.get_global_var('func_6471')
call_9570 = func_6470_call()
call_9571 = func_6470_call()
var_9575 = relay.var("var_9575", dtype = "float32", shape = (13, 117))#candidate|9575|(13, 117)|var|float32
bop_9576 = relay.floor_divide(call_9570.astype('float32'), relay.reshape(var_9575.astype('float32'), relay.shape_of(call_9570))) # shape=(13, 117)
bop_9579 = relay.floor_divide(call_9571.astype('float32'), relay.reshape(var_9575.astype('float32'), relay.shape_of(call_9571))) # shape=(13, 117)
output = relay.Tuple([call_9551,call_9562,bop_9576,])
output2 = relay.Tuple([call_9552,call_9563,bop_9579,])
func_9603 = relay.Function([var_9575,], output)
mod['func_9603'] = func_9603
mod = relay.transform.InferType()(mod)
var_9604 = relay.var("var_9604", dtype = "float32", shape = (13, 117))#candidate|9604|(13, 117)|var|float32
output = func_9603(var_9604)
func_9605 = relay.Function([var_9604], output)
mutated_mod['func_9605'] = func_9605
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9667 = relay.var("var_9667", dtype = "float64", shape = (8, 1, 5))#candidate|9667|(8, 1, 5)|var|float64
var_9668 = relay.var("var_9668", dtype = "float64", shape = (8, 14, 5))#candidate|9668|(8, 14, 5)|var|float64
bop_9669 = relay.maximum(var_9667.astype('float64'), var_9668.astype('float64')) # shape=(8, 14, 5)
output = bop_9669
output2 = bop_9669
F = relay.Function([var_9667,var_9668,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_9667,var_9668,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

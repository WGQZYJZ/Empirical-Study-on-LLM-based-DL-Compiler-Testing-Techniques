==========mod==========
#[version = "0.0.5"]
def @func_273(%var_263: Tensor[(10, 4, 16), float64]) -> Tensor[(10, 4, 16), int8] {
  %0 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %1 = cast(%var_263, dtype="int8") /* ty=Tensor[(10, 4, 16), int8] */;
  %2 = shape_of(%0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %3 = cast(%0, dtype="int8") /* ty=Tensor[(10, 4, 16), int8] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_and(%3, %4) /* ty=Tensor[(10, 4, 16), int8] */
}

def @func_6858(%var_6821: Tensor[(9, 11, 15), uint8], %var_6822: Tensor[(9, 11, 15), uint8]) -> (Tensor[(9, 11, 15), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %5 = cast(%var_6822, dtype="bool") /* ty=Tensor[(9, 11, 15), bool] */;
  %6 = shape_of(%var_6821, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%var_6821, dtype="bool") /* ty=Tensor[(9, 11, 15), bool] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %9 = less(%7, %8) /* ty=Tensor[(9, 11, 15), bool] */;
  %10 = cast(%9, dtype="float64") /* ty=Tensor[(9, 11, 15), float64] */;
  %11 = shape_of(%var_6822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %12 = cast(%var_6822, dtype="float64") /* ty=Tensor[(9, 11, 15), float64] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %14 = @func_1423() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %15 = floor_divide(%12, %13) /* ty=Tensor[(9, 11, 15), float64] */;
  %16 = @func_4433() /* ty=Tensor[(10, 4, 16), float64] */;
  %17 = %14.0;
  (%15, %16, %17)
}

def @func_7225() -> (Tensor[(10, 4, 16), float64],) {
  %18 = @func_3062() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %19 = %18.0;
  (%19,)
}

def @func_758() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), bool]) {
  %20 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %21 = cast(%20, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %22 = reshape(%21, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %23 = cast(%20, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %24 = reshape(%23, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %25 = @func_551(%24) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %26 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %27 = @func_273(%22) /* ty=Tensor[(10, 4, 16), int8] */;
  %28 = %25.0;
  (%26, %20, %27, %28)
}

def @func_1508() -> (Tensor[(10, 4, 16), float64],) {
  %29 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %30 = %29.0;
  (%30,)
}

def @func_1459(%var_1449: Tensor[(1, 9, 9), float64]) -> Tensor[(1, 9, 9), float64] {
  %31 = cast(%var_1449, dtype="float64") /* ty=Tensor[(1, 9, 9), float64] */;
  tan(%31) /* ty=Tensor[(1, 9, 9), float64] */
}

def @func_11177(%var_11149: Tensor[(81), float64]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(81), bool], Tensor[(10, 4, 16), int64], Tensor[(90, 10), float64], Tensor[(5, 13, 13), int64], Tensor[(845), int64], Tensor[(10, 4, 16), int64], Tensor[(2, 504), int16], int16) {
  %32 = @func_9037() /* ty=(Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64], Tensor[(6, 18), float32]) */;
  %33 = @func_4596() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), int64]) */;
  %34 = @func_3174() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) */;
  %35 = %34.2;
  %36 = cast(%var_11149, dtype="bool") /* ty=Tensor[(81), bool] */;
  %37 = shape_of(%35, dtype="int32") /* ty=Tensor[(1), int32] */;
  %38 = cast(%35, dtype="bool") /* ty=Tensor[(81), bool] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?), bool] */;
  %40 = cast(meta[relay.Constant][0] /* ty=Tensor[(90, 10), float64] */, dtype="float64") /* ty=Tensor[(90, 10), float64] */;
  %41 = reshape(%40, newshape=[900]) /* ty=Tensor[(900), float64] */;
  %42 = @func_8198(%41) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(900), float64]) */;
  %43 = cast(meta[relay.Constant][1] /* ty=Tensor[(845), int64] */, dtype="int64") /* ty=Tensor[(845), int64] */;
  %44 = reshape(%43, newshape=[5, 13, 13]) /* ty=Tensor[(5, 13, 13), int64] */;
  %45 = @func_5356(%44) /* ty=(Tensor[(5, 13, 13), int64],) */;
  %46 = @func_2213() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(10, 4, 16), float64]) */;
  %47 = cast(meta[relay.Constant][2] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %48 = reshape(%47, newshape=[]) /* ty=int16 */;
  %49 = @func_9970(%48) /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(9, 9), float64], Tensor[(2, 504), int16], Tensor[(1, 9, 9), int64]) */;
  %50 = %32.1;
  %51 = %33.1;
  %52 = equal(%38, %39) /* ty=Tensor[(81), bool] */;
  %53 = %42.1;
  %54 = %45.0;
  %55 = %46.1;
  %56 = %49.2;
  (%50, %51, %52, %53, meta[relay.Constant][0] /* ty=Tensor[(90, 10), float64] */, %54, meta[relay.Constant][1] /* ty=Tensor[(845), int64] */, %55, %56, meta[relay.Constant][2] /* ty=int16 */)
}

def @func_11365() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %57 = @func_11225() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %58 = @func_4922() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %59 = @func_7225() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %60 = %57.1;
  %61 = %58.0;
  %62 = %59.0;
  (%60, %61, %62)
}

def @func_1285() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %63 = @func_758() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), bool]) */;
  %64 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %65 = %63.0;
  (%64, %65)
}

def @func_8162() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) {
  %66 = @func_8030() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %67 = @func_4596() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), int64]) */;
  %68 = @func_5306() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %69 = @func_6691() /* ty=(Tensor[(10, 4, 16), uint16],) */;
  %70 = %66.0;
  %71 = %67.0;
  %72 = %68.0;
  %73 = %69.0;
  (%70, %71, %72, %73)
}

def @func_11751() -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) {
  %74 = @func_7672() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %75 = %74.1;
  %76 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
  (%75, %76)
}

def @func_2231() -> Tensor[(10, 4, 16), bool] {
  %77 = @func_1247() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %77.0
}

def @func_1247() -> (Tensor[(10, 4, 16), bool],) {
  %78 = @func_1165() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
  %79 = %78.2;
  %80 = @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %81 = %80.1;
  %82 = cast(%81, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %83 = shape_of(%79, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%79, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %86 = equal(%84, %85) /* ty=Tensor[(10, 4, 16), bool] */;
  (%86,)
}

def @func_4328(%var_4316: Tensor[(16, 8, 9), uint64]) -> (Tensor[(16, 8, 9), bool],) {
  %87 = cast(meta[relay.Constant][3] /* ty=Tensor[(16, 8, 9), uint64] */, dtype="bool") /* ty=Tensor[(16, 8, 9), bool] */;
  %88 = shape_of(%var_4316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%var_4316, dtype="bool") /* ty=Tensor[(16, 8, 9), bool] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %91 = less(%89, %90) /* ty=Tensor[(16, 8, 9), bool] */;
  (%91,)
}

def @func_4252() -> Tensor[(10, 4, 16), float32] {
  %92 = @func_2715() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %93 = %92.0;
  %94 = cast(%93, dtype="float32") /* ty=Tensor[(10, 4, 16), float32] */;
  sinh(%94) /* ty=Tensor[(10, 4, 16), float32] */
}

def @func_4891() -> (Tensor[(10, 4, 16), float64],) {
  %95 = @func_3174() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) */;
  %96 = %95.0;
  (%96,)
}

def @func_6115(%var_6092: Tensor[(81), float64]) -> (Tensor[(10, 4, 16), float64], Tensor[(81), bool], Tensor[(81), float32]) {
  %97 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %98 = @func_3174() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) */;
  %99 = %98.2;
  %100 = cast(%var_6092, dtype="bool") /* ty=Tensor[(81), bool] */;
  %101 = shape_of(%99, dtype="int32") /* ty=Tensor[(1), int32] */;
  %102 = cast(%99, dtype="bool") /* ty=Tensor[(81), bool] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?), bool] */;
  %104 = logical_or(%102, %103) /* ty=Tensor[(81), bool] */;
  %105 = cast(%104, dtype="bool") /* ty=Tensor[(81), bool] */;
  %106 = shape_of(%99, dtype="int32") /* ty=Tensor[(1), int32] */;
  %107 = cast(%99, dtype="bool") /* ty=Tensor[(81), bool] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?), bool] */;
  %109 = cast(%99, dtype="float32") /* ty=Tensor[(81), float32] */;
  %110 = %97.0;
  %111 = logical_and(%107, %108) /* ty=Tensor[(81), bool] */;
  %112 = sigmoid(%109) /* ty=Tensor[(81), float32] */;
  (%110, %111, %112)
}

def @func_3806(%var_3800: Tensor[(16, 5, 4), int64], %var_3801: Tensor[(16, 5, 4), int64]) -> (Tensor[(16, 5, 4), int64],) {
  %113 = cast(%var_3801, dtype="int64") /* ty=Tensor[(16, 5, 4), int64] */;
  %114 = shape_of(%var_3800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%var_3800, dtype="int64") /* ty=Tensor[(16, 5, 4), int64] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %117 = bitwise_or(%115, %116) /* ty=Tensor[(16, 5, 4), int64] */;
  (%117,)
}

def @func_2213() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(10, 4, 16), float64]) {
  %118 = @func_2156() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %119 = %118.0;
  %120 = cast(%119, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %121 = reshape(%120, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), bool] */;
  %122 = @func_663(%121) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64]) */;
  %123 = cast(meta[relay.Constant][4] /* ty=Tensor[(81), float64] */, dtype="float64") /* ty=Tensor[(81), float64] */;
  %124 = reshape(%123, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float64] */;
  %125 = cast(%119, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %126 = reshape(%125, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), bool] */;
  %127 = @func_663(%126) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64]) */;
  %128 = %122.1;
  %129 = @func_1459(%124) /* ty=Tensor[(1, 9, 9), float64] */;
  %130 = %127.0;
  (%119, %128, %129, meta[relay.Constant][4] /* ty=Tensor[(81), float64] */, %130)
}

def @func_7501(%var_7368: Tensor[(1, 320), int64], %var_7440: Tensor[(1680), int8], %var_7468: Tensor[(72), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(16, 5, 4), int64], Tensor[(1, 320), int64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(5, 13, 13), int64], Tensor[(845), int64], Tensor[(10, 4, 16), float64], Tensor[(1680), int64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1008), int16], Tensor[(72), float32]) {
  %131 = cast(%var_7368, dtype="int64") /* ty=Tensor[(1, 320), int64] */;
  %132 = cast(%var_7368, dtype="int64") /* ty=Tensor[(1, 320), int64] */;
  %133 = reshape(%131, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), int64] */;
  %134 = reshape(%132, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), int64] */;
  %135 = @func_3806(%133, %134) /* ty=(Tensor[(16, 5, 4), int64],) */;
  %136 = cast(meta[relay.Constant][5] /* ty=Tensor[(1680), int8] */, dtype="int8") /* ty=Tensor[(1680), int8] */;
  %137 = @func_3859() /* ty=Tensor[(10, 4, 16), float64] */;
  %138 = cast(%137, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %139 = reshape(%136, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), int8] */;
  %140 = reshape(%138, newshape=[160, 4]) /* ty=Tensor[(160, 4), float64] */;
  %141 = @func_4311(%139, %140) /* ty=(Tensor[(12, 10, 14), float32], Tensor[(10, 4, 16), bool], Tensor[(160, 4), float64], Tensor[(10, 4, 16), float64]) */;
  %142 = @func_6277() /* ty=(Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %143 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %144 = @func_6004() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %145 = cast(meta[relay.Constant][6] /* ty=Tensor[(845), int64] */, dtype="int64") /* ty=Tensor[(845), int64] */;
  %146 = reshape(%145, newshape=[5, 13, 13]) /* ty=Tensor[(5, 13, 13), int64] */;
  %147 = @func_5356(%146) /* ty=(Tensor[(5, 13, 13), int64],) */;
  %148 = cast(%var_7440, dtype="bool") /* ty=Tensor[(1680), bool] */;
  %149 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(1680), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %150 = cast(meta[relay.Constant][5] /* ty=Tensor[(1680), int8] */, dtype="bool") /* ty=Tensor[(1680), bool] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?), bool] */;
  %152 = equal(%150, %151) /* ty=Tensor[(1680), bool] */;
  %153 = cast(%var_7440, dtype="int64") /* ty=Tensor[(1680), int64] */;
  %154 = shape_of(%152, dtype="int32") /* ty=Tensor[(1), int32] */;
  %155 = cast(%152, dtype="int64") /* ty=Tensor[(1680), int64] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?), int64] */;
  %157 = @func_2864() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %158 = cast(meta[relay.Constant][7] /* ty=Tensor[(1008), int16] */, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %159 = cast(%var_7468, dtype="float32") /* ty=Tensor[(72), float32] */;
  %160 = reshape(%158, newshape=[1008]) /* ty=Tensor[(1008), int16] */;
  %161 = reshape(%159, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %162 = @func_2762(%160, %161) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(72), float32]) */;
  %163 = %135.0;
  %164 = %141.3;
  %165 = %142.1;
  %166 = %143.0;
  %167 = %144.0;
  %168 = %147.0;
  %169 = @func_4216() /* ty=Tensor[(10, 4, 16), float64] */;
  %170 = add(%155, %156) /* ty=Tensor[(1680), int64] */;
  %171 = %157.0;
  %172 = %162.1;
  (%137, %163, %var_7368, %164, %165, %166, %167, %168, meta[relay.Constant][6] /* ty=Tensor[(845), int64] */, %169, %170, %171, %172, meta[relay.Constant][7] /* ty=Tensor[(1008), int16] */, %var_7468)
}

def @func_7340() -> Tensor[(10, 4, 16), float64] {
  @func_3859() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_3140() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) {
  %173 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %174 = %173.0;
  %175 = cast(%174, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %176 = cast(%174, dtype="float32") /* ty=Tensor[(10, 4, 16), float32] */;
  %177 = reshape(%175, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), bool] */;
  %178 = reshape(%176, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float32] */;
  %179 = @func_1116(%177, %178) /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %180 = @func_2213() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(10, 4, 16), float64]) */;
  %181 = %180.3;
  %182 = cast(%181, dtype="float64") /* ty=Tensor[(81), float64] */;
  %183 = reshape(%182, newshape=[81]) /* ty=Tensor[(81), float64] */;
  %184 = @func_2956(%183) /* ty=(Tensor[(10, 4, 16), bool], Tensor[(81), uint16], Tensor[(81), float64]) */;
  %185 = cast(%174, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %186 = reshape(%185, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %187 = @func_1423() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %188 = %179.5;
  %189 = %184.1;
  %190 = @func_273(%186) /* ty=Tensor[(10, 4, 16), int8] */;
  %191 = %187.0;
  (%174, %188, %181, %189, %190, %191)
}

def @func_3883() -> Tensor[(10, 4, 16), float64] {
  %192 = @func_2634() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) */;
  %192.4
}

def @func_5486() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %193 = @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %194 = @func_4928() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %195 = @func_4846() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %196 = %193.0;
  %197 = cast(%196, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %198 = reshape(%197, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %199 = @func_551(%198) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %200 = %194.0;
  %201 = %195.0;
  %202 = %199.0;
  (%196, %200, %201, %202)
}

def @func_1954(%var_1940: Tensor[(81), float64]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) {
  %203 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %204 = @func_182() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %205 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %206 = cast(%var_1940, dtype="float64") /* ty=Tensor[(81), float64] */;
  %207 = reshape(%206, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float64] */;
  %208 = %203.0;
  %209 = %204.0;
  %210 = %205.0;
  %211 = @func_1459(%207) /* ty=Tensor[(1, 9, 9), float64] */;
  (%208, %209, %210, %211, %var_1940)
}

def @func_3174() -> (Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) {
  %212 = @func_2156() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %213 = cast(meta[relay.Constant][8] /* ty=Tensor[(81), float64] */, dtype="float64") /* ty=Tensor[(81), float64] */;
  %214 = reshape(%213, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float64] */;
  %215 = %212.0;
  %216 = @func_1459(%214) /* ty=Tensor[(1, 9, 9), float64] */;
  (%215, %216, meta[relay.Constant][8] /* ty=Tensor[(81), float64] */)
}

def @func_6480() -> (Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), bool], Tensor[(4, 10, 5), uint32], Tensor[(200), float32]) {
  %217 = @func_4261() /* ty=(Tensor[(10, 4, 16), float32],) */;
  %218 = cast(meta[relay.Constant][9] /* ty=Tensor[(200), float32] */, dtype="float32") /* ty=Tensor[(200), float32] */;
  %219 = reshape(%218, newshape=[4, 10, 5]) /* ty=Tensor[(4, 10, 5), float32] */;
  %220 = @func_4636(%219) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(4, 10, 5), uint32]) */;
  %221 = %217.0;
  %222 = @func_2231() /* ty=Tensor[(10, 4, 16), bool] */;
  %223 = %220.1;
  (%221, %222, %223, meta[relay.Constant][9] /* ty=Tensor[(200), float32] */)
}

def @func_10787(%var_10749: Tensor[(567), int64]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(567), float32], Tensor[(567), float64]) {
  %224 = @func_3140() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %225 = @func_4596() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), int64]) */;
  %226 = cast(%var_10749, dtype="int64") /* ty=Tensor[(567), int64] */;
  %227 = cast(%var_10749, dtype="int64") /* ty=Tensor[(567), int64] */;
  %228 = reshape(%226, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), int64] */;
  %229 = reshape(%227, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), int64] */;
  %230 = @func_4100(%228, %229) /* ty=(Tensor[(7, 9, 9), bool], Tensor[(7, 9, 9), float64]) */;
  %231 = %230.1;
  %232 = cast(%231, dtype="float32") /* ty=Tensor[(7, 9, 9), float32] */;
  %233 = shape_of(%var_10749, dtype="int32") /* ty=Tensor[(1), int32] */;
  %234 = cast(%var_10749, dtype="float32") /* ty=Tensor[(567), float32] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?), float32] */;
  %236 = cast(%var_10749, dtype="float32") /* ty=Tensor[(567), float32] */;
  %237 = log(%236) /* ty=Tensor[(567), float32] */;
  %238 = cast(%237, dtype="float64") /* ty=Tensor[(567), float64] */;
  %239 = %224.0;
  %240 = %225.0;
  %241 = floor_mod(%234, %235) /* ty=Tensor[(567), float32] */;
  %242 = atan(%238) /* ty=Tensor[(567), float64] */;
  (%239, %240, %241, %242)
}

def @func_3202() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %243 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %244 = @func_1581() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %245 = %243.0;
  %246 = %244.6;
  (%245, %246)
}

def @func_4573() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) {
  %247 = @func_2864() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %248 = @func_3305() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
  %249 = @func_3305() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
  %250 = %247.2;
  %251 = %248.1;
  %252 = %249.0;
  (%250, %251, %252)
}

def @func_6460() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %253 = @func_2634() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) */;
  %254 = @func_3062() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %255 = %253.0;
  %256 = %254.0;
  (%255, %256)
}

def @func_6543() -> Tensor[(10, 4, 16), float64] {
  @func_4216() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_5356(%var_5332: Tensor[(5, 13, 13), int64]) -> (Tensor[(5, 13, 13), int64],) {
  %257 = cast(%var_5332, dtype="int64") /* ty=Tensor[(5, 13, 13), int64] */;
  %258 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(5, 13, 13), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(meta[relay.Constant][10] /* ty=Tensor[(5, 13, 13), int64] */, dtype="int64") /* ty=Tensor[(5, 13, 13), int64] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %261 = add(%259, %260) /* ty=Tensor[(5, 13, 13), int64] */;
  (%261,)
}

def @func_7286(%var_7276: Tensor[(81), float64], %var_7284: Tensor[(900), float64]) -> (Tensor[(81), int32], Tensor[(10, 4, 16), int64], Tensor[(900), float64]) {
  %262 = @func_3140() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %263 = %262.2;
  %264 = cast(%var_7276, dtype="int32") /* ty=Tensor[(81), int32] */;
  %265 = shape_of(%263, dtype="int32") /* ty=Tensor[(1), int32] */;
  %266 = cast(%263, dtype="int32") /* ty=Tensor[(81), int32] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?), int32] */;
  %268 = cast(%var_7284, dtype="float64") /* ty=Tensor[(900), float64] */;
  %269 = reshape(%268, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), float64] */;
  %270 = @func_7184(%269) /* ty=(Tensor[(10, 6, 15), float64], Tensor[(10, 4, 16), int64]) */;
  %271 = right_shift(%266, %267) /* ty=Tensor[(81), int32] */;
  %272 = %270.1;
  (%271, %272, %var_7284)
}

def @func_2715() -> (Tensor[(10, 4, 16), float64],) {
  %273 = @func_182() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %274 = %273.1;
  (%274,)
}

def @func_4146(%var_4138: Tensor[(13, 9, 5), float32]) -> Tensor[(13, 9, 5), uint16] {
  %275 = cast(%var_4138, dtype="float32") /* ty=Tensor[(13, 9, 5), float32] */;
  %276 = log(%275) /* ty=Tensor[(13, 9, 5), float32] */;
  %277 = cast(%var_4138, dtype="uint16") /* ty=Tensor[(13, 9, 5), uint16] */;
  %278 = shape_of(%276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %279 = cast(%276, dtype="uint16") /* ty=Tensor[(13, 9, 5), uint16] */;
  %280 = dyn.reshape(%277, %278, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%279, %280) /* ty=Tensor[(13, 9, 5), uint16] */
}

def @func_4261() -> (Tensor[(10, 4, 16), float32],) {
  %281 = @func_4252() /* ty=Tensor[(10, 4, 16), float32] */;
  (%281,)
}

def @func_7126(%var_7096: Tensor[(81), float32]) -> (Tensor[(81), bool], Tensor[(10, 4, 16), float64], Tensor[(81), float64]) {
  %282 = @func_3174() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) */;
  %283 = %282.2;
  %284 = cast(%283, dtype="float32") /* ty=Tensor[(81), float32] */;
  %285 = sin(%284) /* ty=Tensor[(81), float32] */;
  %286 = cast(%var_7096, dtype="bool") /* ty=Tensor[(81), bool] */;
  %287 = shape_of(%285, dtype="int32") /* ty=Tensor[(1), int32] */;
  %288 = cast(%285, dtype="bool") /* ty=Tensor[(81), bool] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?), bool] */;
  %290 = @func_3305() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
  %291 = cast(%285, dtype="float64") /* ty=Tensor[(81), float64] */;
  %292 = greater(%288, %289) /* ty=Tensor[(81), bool] */;
  %293 = %290.0;
  %294 = cosh(%291) /* ty=Tensor[(81), float64] */;
  (%292, %293, %294)
}

def @func_11282() -> (Tensor[(10, 4, 16), float64],) {
  %295 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %296 = %295.1;
  (%296,)
}

def @func_4948() -> (Tensor[(10, 4, 16), float64],) {
  %297 = @func_4573() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) */;
  %298 = %297.0;
  (%298,)
}

def @func_11409() -> Tensor[(10, 4, 16), float64] {
  %299 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %299.0
}

def @func_11666(%var_11653: Tensor[(5, 10, 5), uint32], %var_11654: Tensor[(5, 10, 5), uint32], %var_11663: Tensor[(12, 84), int16]) -> (Tensor[(5, 10, 5), uint32], Tensor[(10, 4, 16), float64], int16, Tensor[(12, 84), int16]) {
  %300 = cast(%var_11654, dtype="uint32") /* ty=Tensor[(5, 10, 5), uint32] */;
  %301 = shape_of(%var_11653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %302 = cast(%var_11653, dtype="uint32") /* ty=Tensor[(5, 10, 5), uint32] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %304 = cast(meta[relay.Constant][11] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %305 = cast(%var_11663, dtype="int16") /* ty=Tensor[(12, 84), int16] */;
  %306 = reshape(%304, newshape=[]) /* ty=int16 */;
  %307 = reshape(%305, newshape=[1008]) /* ty=Tensor[(1008), int16] */;
  %308 = @func_8876(%306, %307) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16]) */;
  %309 = multiply(%302, %303) /* ty=Tensor[(5, 10, 5), uint32] */;
  %310 = %308.2;
  (%309, %310, meta[relay.Constant][11] /* ty=int16 */, %var_11663)
}

def @func_12015() -> (Tensor[(10, 4, 16), float64], Tensor[(6, 2, 6), float32], Tensor[(72), float32]) {
  %311 = @func_11225() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %312 = cast(meta[relay.Constant][12] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %313 = reshape(%312, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %314 = @func_8679(%313) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(6, 2, 6), float32], Tensor[(72), float32]) */;
  %315 = %311.0;
  %316 = %314.3;
  (%315, %316, meta[relay.Constant][12] /* ty=Tensor[(72), float32] */)
}

def @func_2115() -> (Tensor[(10, 4, 16), float64], Tensor[(1008), int16], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) {
  %317 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %318 = cast(meta[relay.Constant][13] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %319 = cast(meta[relay.Constant][14] /* ty=Tensor[(1008), int16] */, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %320 = reshape(%318, newshape=[]) /* ty=int16 */;
  %321 = reshape(%319, newshape=[1008]) /* ty=Tensor[(1008), int16] */;
  %322 = @func_1903(%320, %321) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64]) */;
  %323 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %324 = %323.0;
  %325 = cast(%324, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %326 = reshape(%325, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %327 = @func_551(%326) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %328 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %329 = @func_1165() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
  %330 = %317.1;
  %331 = %322.3;
  %332 = %327.0;
  %333 = %328.0;
  %334 = %329.0;
  (%330, %331, meta[relay.Constant][13] /* ty=int16 */, meta[relay.Constant][14] /* ty=Tensor[(1008), int16] */, %324, %332, %333, %334)
}

def @func_4413() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %335 = @func_3978() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %336 = @func_3914() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %337 = @func_3202() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %338 = %335.0;
  %339 = %336.1;
  %340 = %337.1;
  (%338, %339, %340)
}

def @func_5671() -> (Tensor[(10, 4, 16), float64], Tensor[(5, 12, ?), bool], Tensor[(5, 12, 1), float32], Tensor[(10, 4, 16), bool]) {
  %341 = @func_3375() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %342 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 12, 1), float64] */, dtype="float64") /* ty=Tensor[(5, 12, 1), float64] */;
  %343 = sinh(%342) /* ty=Tensor[(5, 12, 1), float64] */;
  %344 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 12, 1), float64] */, dtype="float32") /* ty=Tensor[(5, 12, 1), float32] */;
  %345 = asinh(%344) /* ty=Tensor[(5, 12, 1), float32] */;
  %346 = cast(%345, dtype="bool") /* ty=Tensor[(5, 12, 1), bool] */;
  %347 = shape_of(%343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(%343, dtype="bool") /* ty=Tensor[(5, 12, 1), bool] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %350 = cast(%343, dtype="float32") /* ty=Tensor[(5, 12, 1), float32] */;
  %351 = acos(%350) /* ty=Tensor[(5, 12, 1), float32] */;
  %352 = cast(%351, dtype="float32") /* ty=Tensor[(5, 12, 1), float32] */;
  %353 = %341.1;
  %354 = cast(%353, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %355 = reshape(%354, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %356 = @func_3593(%355) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %357 = equal(%348, %349) /* ty=Tensor[(5, 12, ?), bool] */;
  %358 = rsqrt(%352) /* ty=Tensor[(5, 12, 1), float32] */;
  %359 = %356.0;
  (%353, %357, %358, %359)
}

def @func_7510() -> Tensor[(10, 4, 16), float64] {
  @func_971() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_10239() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(480), bool]) {
  %360 = @func_5631() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) */;
  %361 = cast(meta[relay.Constant][16] /* ty=Tensor[(480), bool] */, dtype="bool") /* ty=Tensor[(480), bool] */;
  %362 = reshape(%361, newshape=[5, 12, 8]) /* ty=Tensor[(5, 12, 8), bool] */;
  %363 = @func_7947(%362) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(5, 12, 8), bool]) */;
  %364 = %360.1;
  %365 = %363.0;
  (%364, %365, meta[relay.Constant][16] /* ty=Tensor[(480), bool] */)
}

def @func_12245() -> Tensor[(10, 4, 16), float64] {
  %366 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %366.1
}

def @func_856() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %367 = @func_182() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %368 = %367.1;
  %369 = cast(%368, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %370 = cast(%368, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %371 = reshape(%370, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %372 = @func_551(%371) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %373 = sigmoid(%369) /* ty=Tensor[(10, 4, 16), float64] */;
  %374 = %372.0;
  (%373, %374)
}

def @func_182() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %375 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %376 = cast(%375, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %377 = tan(%376) /* ty=Tensor[(10, 4, 16), float64] */;
  %378 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  (%377, %378)
}

def @func_9037() -> (Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64], Tensor[(6, 18), float32]) {
  %379 = @func_7582() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
  %380 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 18), float32] */, dtype="float32") /* ty=Tensor[(6, 18), float32] */;
  %381 = reshape(%380, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %382 = @func_3794(%381) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(10, 4, 16), float64]) */;
  %383 = %379.2;
  %384 = %382.1;
  (%383, %384, meta[relay.Constant][17] /* ty=Tensor[(6, 18), float32] */)
}

def @func_663(%var_658: Tensor[(10, 4, 16), bool]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64]) {
  %385 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %386 = %385.0;
  %387 = cast(%386, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %388 = reshape(%387, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %389 = @func_551(%388) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %390 = %389.0;
  %391 = cast(%var_658, dtype="int64") /* ty=Tensor[(10, 4, 16), int64] */;
  %392 = shape_of(%390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%390, dtype="int64") /* ty=Tensor[(10, 4, 16), int64] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %395 = right_shift(%393, %394) /* ty=Tensor[(10, 4, 16), int64] */;
  (%386, %395)
}

def @func_11774(%var_11771: Tensor[(2, 2, 11), float64]) -> Tensor[(2, 2, 11), float64] {
  %396 = cast(%var_11771, dtype="float64") /* ty=Tensor[(2, 2, 11), float64] */;
  cos(%396) /* ty=Tensor[(2, 2, 11), float64] */
}

def @func_4596() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), int64]) {
  %397 = @func_4573() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) */;
  %398 = @func_3850() /* ty=(Tensor[(10, 4, 16), int64],) */;
  %399 = %397.0;
  %400 = @func_3408() /* ty=Tensor[(10, 4, 16), bool] */;
  %401 = %398.0;
  (%399, %400, %401)
}

def @func_10629(%var_10588: Tensor[(8, 4, 7), int64], %var_10593: Tensor[(54, 2), float32]) -> (Tensor[(8, 4, 7), int64], Tensor[(10, 4, 16), float64], Tensor[(54, 2), float32], Tensor[(10, 4, 16), bool]) {
  %402 = cast(%var_10588, dtype="int64") /* ty=Tensor[(8, 4, 7), int64] */;
  %403 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(8, 4, 7), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %404 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 4, 7), int64] */, dtype="int64") /* ty=Tensor[(8, 4, 7), int64] */;
  %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %406 = cast(%var_10593, dtype="float32") /* ty=Tensor[(54, 2), float32] */;
  %407 = reshape(%406, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %408 = @func_9824(%407) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(108), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
  %409 = %408.1;
  %410 = cast(%409, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %411 = reshape(%410, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %412 = @func_3593(%411) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %413 = minimum(%404, %405) /* ty=Tensor[(8, 4, 7), int64] */;
  %414 = %412.0;
  (%413, %409, %var_10593, %414)
}

def @func_7582() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) {
  %415 = @func_4726() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %416 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %417 = @func_3140() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %418 = %415.0;
  %419 = %416.0;
  %420 = %417.4;
  (%418, %419, %420)
}

def @func_10400() -> (Tensor[(10, 4, 16), int64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) {
  %421 = @func_3202() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %422 = @func_6277() /* ty=(Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %423 = @func_7582() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
  %424 = @func_9617() /* ty=Tensor[(10, 4, 16), int64] */;
  %425 = %421.1;
  %426 = %422.0;
  %427 = %423.0;
  (%424, %425, %426, %427)
}

def @func_6410(%var_6374: Tensor[(10, 4, 16), float64]) -> Tensor[(10, 4, 16), uint64] {
  %428 = @func_2156() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %429 = %428.2;
  %430 = cast(%var_6374, dtype="uint64") /* ty=Tensor[(10, 4, 16), uint64] */;
  %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%429, dtype="uint64") /* ty=Tensor[(10, 4, 16), uint64] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%432, %433) /* ty=Tensor[(10, 4, 16), uint64] */
}

def @func_12215() -> (Tensor[(10, 4, 16), float64],) {
  %434 = @func_11043() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %435 = %434.0;
  (%435,)
}

def @func_4100(%var_4062: Tensor[(7, 9, 9), int64], %var_4063: Tensor[(7, 9, 9), int64]) -> (Tensor[(7, 9, 9), bool], Tensor[(7, 9, 9), float64]) {
  %436 = cast(%var_4063, dtype="bool") /* ty=Tensor[(7, 9, 9), bool] */;
  %437 = shape_of(%var_4062, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%var_4062, dtype="bool") /* ty=Tensor[(7, 9, 9), bool] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %440 = cast(%var_4062, dtype="float64") /* ty=Tensor[(7, 9, 9), float64] */;
  %441 = less_equal(%438, %439) /* ty=Tensor[(7, 9, 9), bool] */;
  %442 = asin(%440) /* ty=Tensor[(7, 9, 9), float64] */;
  (%441, %442)
}

def @func_3305() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) {
  %443 = @func_2115() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1008), int16], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
  %444 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %445 = %443.7;
  (%444, %445)
}

def @func_1165() -> (Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) {
  %446 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %447 = %446.0;
  %448 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 4, 16), float64] */, dtype="uint16") /* ty=Tensor[(10, 4, 16), uint16] */;
  %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%447, dtype="uint16") /* ty=Tensor[(10, 4, 16), uint16] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %452 = @func_758() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), bool]) */;
  %453 = bitwise_xor(%450, %451) /* ty=Tensor[(10, 4, 16), uint16] */;
  %454 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %455 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
  %456 = %452.2;
  (%453, %454, %455, %456)
}

def @func_10457() -> Tensor[(10, 4, 16), float64] {
  %457 = @func_6004() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %457.0
}

def @func_12260() -> (Tensor[(81), float64],) {
  %458 = @func_3140() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %459 = %458.2;
  (%459,)
}

def @func_1616(%var_1593: Tensor[(6, 2, 6), float32]) -> (Tensor[(6, 2, 6), float32], Tensor[(10, 4, 16), float64]) {
  %460 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 2, 6), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 6), float32] */;
  %461 = shape_of(%var_1593, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(%var_1593, dtype="float32") /* ty=Tensor[(6, 2, 6), float32] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %464 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %465 = divide(%462, %463) /* ty=Tensor[(6, 2, 6), float32] */;
  %466 = %464.0;
  (%465, %466)
}

def @func_2364(%var_2287: Tensor[(7, 3, 1), uint16], %var_2298: Tensor[(81), float64], %var_2359: int16, %var_2360: Tensor[(1008), int16]) -> (Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(7, 3, 12), int32], Tensor[(10, 4, 16), float64], Tensor[(7, 3, 12), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16]) {
  %467 = cast(%var_2298, dtype="float64") /* ty=Tensor[(81), float64] */;
  %468 = reshape(%467, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float64] */;
  %469 = cast(%var_2287, dtype="uint16") /* ty=Tensor[(7, 3, 1), uint16] */;
  %470 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 3, 12), uint16] */, dtype="uint16") /* ty=Tensor[(7, 3, 12), uint16] */;
  %471 = subtract(%469, %470) /* ty=Tensor[(7, 3, 12), uint16] */;
  %472 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 3, 12), uint16] */, dtype="uint64") /* ty=Tensor[(7, 3, 12), uint64] */;
  %473 = cast(%var_2287, dtype="uint64") /* ty=Tensor[(7, 3, 1), uint64] */;
  %474 = bitwise_xor(%472, %473) /* ty=Tensor[(7, 3, 12), uint64] */;
  %475 = cast(%474, dtype="int32") /* ty=Tensor[(7, 3, 12), int32] */;
  %476 = shape_of(%471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%471, dtype="int32") /* ty=Tensor[(7, 3, 12), int32] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %479 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %480 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 3, 12), uint16] */, dtype="float32") /* ty=Tensor[(7, 3, 12), float32] */;
  %481 = acos(%480) /* ty=Tensor[(7, 3, 12), float32] */;
  %482 = cast(%481, dtype="float32") /* ty=Tensor[(7, 3, 12), float32] */;
  %483 = asin(%482) /* ty=Tensor[(7, 3, 12), float32] */;
  %484 = cast(%483, dtype="float32") /* ty=Tensor[(7, 3, 12), float32] */;
  %485 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %486 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %487 = cast(%var_2359, dtype="int16") /* ty=int16 */;
  %488 = cast(%var_2360, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %489 = reshape(%487, newshape=[]) /* ty=int16 */;
  %490 = reshape(%488, newshape=[1008]) /* ty=Tensor[(1008), int16] */;
  %491 = @func_1903(%489, %490) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64]) */;
  %492 = @func_1459(%468) /* ty=Tensor[(1, 9, 9), float64] */;
  %493 = multiply(%477, %478) /* ty=Tensor[(7, 3, 12), int32] */;
  %494 = %479.0;
  %495 = log(%484) /* ty=Tensor[(7, 3, 12), float32] */;
  %496 = %485.0;
  %497 = %486.0;
  %498 = %491.0;
  (%492, %var_2298, %493, %494, %495, %496, %497, %498, %var_2359, %var_2360)
}

def @func_7886(%var_7883: Tensor[(320), int64]) -> (Tensor[(10, 4, 16), float64], Tensor[(16, 5, 4), int64], Tensor[(320), int64]) {
  %499 = @func_3978() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %500 = cast(%var_7883, dtype="int64") /* ty=Tensor[(320), int64] */;
  %501 = cast(%var_7883, dtype="int64") /* ty=Tensor[(320), int64] */;
  %502 = reshape(%500, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), int64] */;
  %503 = reshape(%501, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), int64] */;
  %504 = @func_3806(%502, %503) /* ty=(Tensor[(16, 5, 4), int64],) */;
  %505 = %499.0;
  %506 = %504.0;
  (%505, %506, %var_7883)
}

def @func_10868(%var_10861: Tensor[(132), int32], %var_10862: Tensor[(18, 4), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(1, 72), float32], int32, Tensor[(132), int32], Tensor[(18, 4), float32]) {
  %507 = cast(-1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %508 = cast(%var_10861, dtype="int32") /* ty=Tensor[(132), int32] */;
  %509 = cast(%var_10862, dtype="float32") /* ty=Tensor[(18, 4), float32] */;
  %510 = reshape(%507, newshape=[]) /* ty=int32 */;
  %511 = reshape(%508, newshape=[12, 11, 1]) /* ty=Tensor[(12, 11, 1), int32] */;
  %512 = reshape(%509, newshape=[1, 72]) /* ty=Tensor[(1, 72), float32] */;
  %513 = @func_4054(%510, %511, %512) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(12, 11, ?), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(6, 2, 6), float32], Tensor[(1, 72), float32], Tensor[(10, 4, 16), bool], Tensor[(12, 11, 1), float32]) */;
  %514 = @func_4216() /* ty=Tensor[(10, 4, 16), float64] */;
  %515 = @func_2231() /* ty=Tensor[(10, 4, 16), bool] */;
  %516 = %513.5;
  (%514, %515, %516, -1 /* ty=int32 */, %var_10861, %var_10862)
}

def @func_4433() -> Tensor[(10, 4, 16), float64] {
  %517 = @func_3305() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
  %517.0
}

def @func_12146() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %518 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %519 = @func_6004() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %520 = %518.1;
  %521 = %519.0;
  (%520, %521)
}

def @func_5306() -> (Tensor[(10, 4, 16), float64],) {
  %522 = @func_3140() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %523 = %522.0;
  (%523,)
}

def @func_4726() -> (Tensor[(10, 4, 16), float64],) {
  %524 = @func_3293() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %525 = %524.0;
  (%525,)
}

def @func_11562() -> (Tensor[(10, 4, 16), float64],) {
  %526 = @func_10087() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %527 = %526.0;
  (%527,)
}

def @func_9368() -> Tensor[(10, 4, 16), float64] {
  %528 = @func_7582() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
  %528.1
}

def @func_8005() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %529 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %530 = @func_4846() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %531 = %529.0;
  %532 = %530.1;
  (%531, %532)
}

def @func_1432() -> (Tensor[(10, 4, 16), float64],) {
  %533 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %534 = %533.0;
  (%534,)
}

def @func_4928() -> (Tensor[(10, 4, 16), bool],) {
  %535 = @func_3408() /* ty=Tensor[(10, 4, 16), bool] */;
  (%535,)
}

def @func_8052() -> (Tensor[(10, 4, 16), bool],) {
  %536 = @func_4928() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %537 = %536.0;
  (%537,)
}

def @func_4216() -> Tensor[(10, 4, 16), float64] {
  @func_3859() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_2956(%var_2927: Tensor[(81), float64]) -> (Tensor[(10, 4, 16), bool], Tensor[(81), uint16], Tensor[(81), float64]) {
  %538 = cast(%var_2927, dtype="float64") /* ty=Tensor[(81), float64] */;
  %539 = reshape(%538, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float64] */;
  %540 = @func_1459(%539) /* ty=Tensor[(1, 9, 9), float64] */;
  %541 = cast(%540, dtype="uint16") /* ty=Tensor[(1, 9, 9), uint16] */;
  %542 = shape_of(%var_2927, dtype="int32") /* ty=Tensor[(1), int32] */;
  %543 = cast(%var_2927, dtype="uint16") /* ty=Tensor[(81), uint16] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %545 = cast(%var_2927, dtype="float64") /* ty=Tensor[(81), float64] */;
  %546 = @func_2231() /* ty=Tensor[(10, 4, 16), bool] */;
  %547 = bitwise_xor(%543, %544) /* ty=Tensor[(81), uint16] */;
  %548 = sinh(%545) /* ty=Tensor[(81), float64] */;
  (%546, %547, %548)
}

def @func_2014(%var_1978: bool, %var_1979: Tensor[(16, 10, 3), bool], %var_2006: Tensor[(81, 1), float64]) -> (Tensor[(10, 4, 16), float64], Tensor[(16, 10, 3), int32], Tensor[(81, 1), float64], Tensor[(1, 9, 9), uint64]) {
  %549 = @func_1423() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %550 = cast(%var_1979, dtype="float32") /* ty=Tensor[(16, 10, 3), float32] */;
  %551 = rsqrt(%550) /* ty=Tensor[(16, 10, 3), float32] */;
  %552 = cast(%var_1978, dtype="bool") /* ty=bool */;
  %553 = cast(%var_1979, dtype="bool") /* ty=Tensor[(16, 10, 3), bool] */;
  %554 = logical_and(%552, %553) /* ty=Tensor[(16, 10, 3), bool] */;
  %555 = cast(%554, dtype="int32") /* ty=Tensor[(16, 10, 3), int32] */;
  %556 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%551, dtype="int32") /* ty=Tensor[(16, 10, 3), int32] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %559 = cast(%var_2006, dtype="float64") /* ty=Tensor[(81, 1), float64] */;
  %560 = reshape(%559, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float64] */;
  %561 = @func_1459(%560) /* ty=Tensor[(1, 9, 9), float64] */;
  %562 = cast(%561, dtype="uint64") /* ty=Tensor[(1, 9, 9), uint64] */;
  %563 = cast(%var_1978, dtype="uint64") /* ty=uint64 */;
  %564 = %549.0;
  %565 = maximum(%557, %558) /* ty=Tensor[(16, 10, 3), int32] */;
  %566 = bitwise_and(%562, %563) /* ty=Tensor[(1, 9, 9), uint64] */;
  (%564, %565, %var_2006, %566)
}

def @func_4922() -> (Tensor[(10, 4, 16), float64],) {
  %567 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %568 = %567.0;
  (%568,)
}

def @func_8780(%var_8724: Tensor[(12, 5, 13), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(12, 5, 13), bool], Tensor[(12, 5, 13), float32]) {
  %569 = @func_3914() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %570 = cast(%var_8724, dtype="float32") /* ty=Tensor[(12, 5, 13), float32] */;
  %571 = log2(%570) /* ty=Tensor[(12, 5, 13), float32] */;
  %572 = cast(%571, dtype="float32") /* ty=Tensor[(12, 5, 13), float32] */;
  %573 = rsqrt(%572) /* ty=Tensor[(12, 5, 13), float32] */;
  %574 = cast(%573, dtype="bool") /* ty=Tensor[(12, 5, 13), bool] */;
  %575 = shape_of(%571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%571, dtype="bool") /* ty=Tensor[(12, 5, 13), bool] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %578 = cast(%573, dtype="float32") /* ty=Tensor[(12, 5, 13), float32] */;
  %579 = %569.1;
  %580 = greater(%576, %577) /* ty=Tensor[(12, 5, 13), bool] */;
  %581 = asin(%578) /* ty=Tensor[(12, 5, 13), float32] */;
  (%579, %580, %581)
}

def @func_2864() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %582 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %583 = @func_2156() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %584 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %585 = %582.0;
  %586 = %583.2;
  %587 = %584.0;
  (%585, %586, %587)
}

def @func_1349() -> (Tensor[(10, 4, 16), float64],) {
  %588 = @func_182() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %589 = %588.1;
  (%589,)
}

def @func_10917(%var_10905: Tensor[(50), float32], %var_10906: Tensor[(108), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(5, 1, 10), float32], Tensor[(50), float32], Tensor[(108), float32]) {
  %590 = @func_10400() /* ty=(Tensor[(10, 4, 16), int64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %591 = cast(%var_10905, dtype="float32") /* ty=Tensor[(50), float32] */;
  %592 = cast(%var_10906, dtype="float32") /* ty=Tensor[(108), float32] */;
  %593 = reshape(%591, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), float32] */;
  %594 = reshape(%592, newshape=[1, 108]) /* ty=Tensor[(1, 108), float32] */;
  %595 = @func_6192(%593, %594) /* ty=(Tensor[(5, 1, 10), float32], Tensor[(4, 9, 3), float32], Tensor[(1, 108), float32]) */;
  %596 = %590.3;
  %597 = %595.0;
  (%596, %597, %var_10905, %var_10906)
}

def @func_6004() -> (Tensor[(10, 4, 16), float64],) {
  %598 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
  (%598,)
}

def @func_11293() -> (Tensor[(10, 4, 16), float64],) {
  %599 = @func_6460() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %600 = %599.1;
  (%600,)
}

def @func_11606(%var_11596: Tensor[(640), bool]) -> (Tensor[(14, 11, 7), float64], Tensor[(10, 4, 16), bool], Tensor[(640), bool]) {
  %601 = cast(meta[relay.Constant][22] /* ty=Tensor[(14, 11, 7), float64] */, dtype="float64") /* ty=Tensor[(14, 11, 7), float64] */;
  %602 = cast(%var_11596, dtype="bool") /* ty=Tensor[(640), bool] */;
  %603 = cast(%var_11596, dtype="float32") /* ty=Tensor[(640), float32] */;
  %604 = reshape(%602, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), bool] */;
  %605 = reshape(%603, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float32] */;
  %606 = @func_1116(%604, %605) /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %607 = cosh(%601) /* ty=Tensor[(14, 11, 7), float64] */;
  %608 = %606.1;
  (%607, %608, %var_11596)
}

def @func_5053(%var_5048: int16) -> (Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], int16, Tensor[(2, 504), int16]) {
  %609 = @func_2523() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %610 = cast(%var_5048, dtype="int16") /* ty=int16 */;
  %611 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 504), int16] */, dtype="int16") /* ty=Tensor[(2, 504), int16] */;
  %612 = reshape(%610, newshape=[]) /* ty=int16 */;
  %613 = reshape(%611, newshape=[7, 16, 9]) /* ty=Tensor[(7, 16, 9), int16] */;
  %614 = @func_1679(%612, %613) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %615 = %609.0;
  %616 = %614.1;
  (%615, %616, %var_5048, meta[relay.Constant][23] /* ty=Tensor[(2, 504), int16] */)
}

def @func_8976() -> (Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), bool], Tensor[(900), float64], Tensor[(900), float64]) {
  %617 = @func_4261() /* ty=(Tensor[(10, 4, 16), float32],) */;
  %618 = %617.0;
  %619 = cast(%618, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %620 = cast(%618, dtype="float32") /* ty=Tensor[(10, 4, 16), float32] */;
  %621 = reshape(%619, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), bool] */;
  %622 = reshape(%620, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float32] */;
  %623 = @func_1116(%621, %622) /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %624 = cast(meta[relay.Constant][24] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
  %625 = reshape(%624, newshape=[900]) /* ty=Tensor[(900), float64] */;
  %626 = @func_8198(%625) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(900), float64]) */;
  %627 = %623.0;
  %628 = %626.2;
  (%618, %627, %628, meta[relay.Constant][24] /* ty=Tensor[(900), float64] */)
}

def @func_2523() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %629 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %630 = @func_182() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %631 = %629.1;
  %632 = %630.0;
  (%631, %632)
}

def @func_9936(%var_9929: Tensor[(845), int64]) -> (Tensor[(10, 4, 16), float64], Tensor[(5, 13, 13), int64], Tensor[(845), int64]) {
  %633 = @func_1581() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %634 = cast(%var_9929, dtype="int64") /* ty=Tensor[(845), int64] */;
  %635 = reshape(%634, newshape=[5, 13, 13]) /* ty=Tensor[(5, 13, 13), int64] */;
  %636 = @func_5356(%635) /* ty=(Tensor[(5, 13, 13), int64],) */;
  %637 = %633.2;
  %638 = %636.0;
  (%637, %638, %var_9929)
}

def @func_11628() -> Tensor[(10, 4, 16), bool] {
  %639 = @func_8052() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %639.0
}

def @func_8198(%var_8192: Tensor[(900), float64]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(900), float64]) {
  %640 = cast(%var_8192, dtype="float64") /* ty=Tensor[(900), float64] */;
  %641 = reshape(%640, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), float64] */;
  %642 = @func_7184(%641) /* ty=(Tensor[(10, 6, 15), float64], Tensor[(10, 4, 16), int64]) */;
  %643 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
  %644 = %642.1;
  (%643, %644, %var_8192)
}

def @func_5782() -> Tensor[(10, 4, 16), float64] {
  %645 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %645.0
}

def @func_4311(%var_4286: Tensor[(12, 10, 14), int8], %var_4300: Tensor[(160, 4), float64]) -> (Tensor[(12, 10, 14), float32], Tensor[(10, 4, 16), bool], Tensor[(160, 4), float64], Tensor[(10, 4, 16), float64]) {
  %646 = cast(meta[relay.Constant][25] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %647 = cast(%var_4286, dtype="bool") /* ty=Tensor[(12, 10, 14), bool] */;
  %648 = not_equal(%646, %647) /* ty=Tensor[(12, 10, 14), bool] */;
  %649 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 10, 14), bool] */, dtype="float32") /* ty=Tensor[(12, 10, 14), float32] */;
  %650 = shape_of(%648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %651 = cast(%648, dtype="float32") /* ty=Tensor[(12, 10, 14), float32] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %653 = cast(%var_4300, dtype="float64") /* ty=Tensor[(160, 4), float64] */;
  %654 = reshape(%653, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %655 = @func_551(%654) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %656 = @func_2115() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1008), int16], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
  %657 = power(%651, %652) /* ty=Tensor[(12, 10, 14), float32] */;
  %658 = %655.0;
  %659 = %656.6;
  (%657, %658, %var_4300, %659)
}

def @func_6691() -> (Tensor[(10, 4, 16), uint16],) {
  %660 = @func_5631() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) */;
  %661 = %660.0;
  (%661,)
}

def @func_10801() -> (Tensor[(10, 4, 16), float64],) {
  %662 = @func_4494() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %663 = %662.0;
  (%663,)
}

def @func_9824(%var_9790: Tensor[(108), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(108), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) {
  %664 = @func_4846() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %665 = cast(%var_9790, dtype="float32") /* ty=Tensor[(108), float32] */;
  %666 = reshape(%665, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %667 = @func_3794(%666) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(10, 4, 16), float64]) */;
  %668 = @func_4846() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %669 = @func_2998() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), bool]) */;
  %670 = %664.0;
  %671 = %667.1;
  %672 = %668.2;
  %673 = %669.0;
  (%670, %671, %var_9790, %672, %673)
}

def @func_12097() -> (Tensor[(10, 4, 16), float64], Tensor[(16, 8, 9), bool], Tensor[(1152), uint64]) {
  %674 = cast(meta[relay.Constant][27] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %675 = reshape(%674, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), uint64] */;
  %676 = @func_4328(%675) /* ty=(Tensor[(16, 8, 9), bool],) */;
  %677 = @func_7340() /* ty=Tensor[(10, 4, 16), float64] */;
  %678 = %676.0;
  (%677, %678, meta[relay.Constant][27] /* ty=Tensor[(1152), uint64] */)
}

def @main(%var_12304: Tensor[(10, 7, 9), float64]) -> (Tensor[(10, 7, 9), float64], Tensor[(10, 4, 16), float32], Tensor[(10, 7, 9), int32]) {
  %679 = cast(%var_12304, dtype="float64") /* ty=Tensor[(10, 7, 9), float64] */;
  %680 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(10, 7, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(10, 7, 9), float64] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %683 = @func_4261() /* ty=(Tensor[(10, 4, 16), float32],) */;
  %684 = cast(%var_12304, dtype="int32") /* ty=Tensor[(10, 7, 9), int32] */;
  %685 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(10, 7, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 7, 9), float64] */, dtype="int32") /* ty=Tensor[(10, 7, 9), int32] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %688 = power(%681, %682) /* ty=Tensor[(10, 7, 9), float64] */;
  %689 = %683.0;
  %690 = bitwise_or(%686, %687) /* ty=Tensor[(10, 7, 9), int32] */;
  (%688, %689, %690)
}

def @func_3651() -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %691 = @func_2115() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1008), int16], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
  %692 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %693 = @func_1247() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %694 = %691.5;
  %695 = %692.1;
  %696 = %693.0;
  (%694, %695, %696)
}

def @func_5156(%var_5152: int16) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(7, 16, 9), int8], int16) {
  %697 = @func_3850() /* ty=(Tensor[(10, 4, 16), int64],) */;
  %698 = cast(%var_5152, dtype="int16") /* ty=int16 */;
  %699 = reshape(%698, newshape=[]) /* ty=int16 */;
  %700 = @func_5053(%699) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], int16, Tensor[(2, 504), int16]) */;
  %701 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
  %702 = %697.0;
  %703 = %700.1;
  (%701, %702, %703, %var_5152)
}

def @func_6192(%var_6177: Tensor[(5, 1, 10), float32], %var_6186: Tensor[(1, 108), float32]) -> (Tensor[(5, 1, 10), float32], Tensor[(4, 9, 3), float32], Tensor[(1, 108), float32]) {
  %704 = cast(%var_6177, dtype="float32") /* ty=Tensor[(5, 1, 10), float32] */;
  %705 = cast(%var_6186, dtype="float32") /* ty=Tensor[(1, 108), float32] */;
  %706 = reshape(%705, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %707 = @func_3794(%706) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(10, 4, 16), float64]) */;
  %708 = asin(%704) /* ty=Tensor[(5, 1, 10), float32] */;
  %709 = %707.0;
  (%708, %709, %var_6186)
}

def @func_5945() -> (Tensor[(10, 4, 16), bool],) {
  %710 = @func_4928() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %711 = %710.0;
  (%711,)
}

def @func_10025() -> Tensor[(10, 4, 16), float64] {
  @func_971() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_10668(%var_10651: Tensor[(1680), int8]) -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), bool], Tensor[(1680), int8]) {
  %712 = @func_7672() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %713 = cast(%var_10651, dtype="int8") /* ty=Tensor[(1680), int8] */;
  %714 = %712.1;
  %715 = cast(%714, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %716 = reshape(%713, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), int8] */;
  %717 = reshape(%715, newshape=[160, 4]) /* ty=Tensor[(160, 4), float64] */;
  %718 = @func_4311(%716, %717) /* ty=(Tensor[(12, 10, 14), float32], Tensor[(10, 4, 16), bool], Tensor[(160, 4), float64], Tensor[(10, 4, 16), float64]) */;
  %719 = %718.1;
  (%714, %719, %var_10651)
}

def @func_6813() -> Tensor[(10, 4, 16), float64] {
  %720 = @func_182() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %720.1
}

def @func_9970(%var_9961: int16) -> (Tensor[(10, 4, 16), uint16], Tensor[(9, 9), float64], Tensor[(2, 504), int16], Tensor[(1, 9, 9), int64]) {
  %721 = @func_5631() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) */;
  %722 = cast(%var_9961, dtype="int16") /* ty=int16 */;
  %723 = reshape(%722, newshape=[]) /* ty=int16 */;
  %724 = @func_5053(%723) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], int16, Tensor[(2, 504), int16]) */;
  %725 = cast(meta[relay.Constant][29] /* ty=Tensor[(9, 9), float64] */, dtype="float64") /* ty=Tensor[(9, 9), float64] */;
  %726 = reshape(%725, newshape=[81]) /* ty=Tensor[(81), float64] */;
  %727 = @func_1954(%726) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) */;
  %728 = %727.3;
  %729 = cast(%var_9961, dtype="int64") /* ty=int64 */;
  %730 = cast(%728, dtype="int64") /* ty=Tensor[(1, 9, 9), int64] */;
  %731 = %721.0;
  %732 = %724.3;
  %733 = right_shift(%729, %730) /* ty=Tensor[(1, 9, 9), int64] */;
  (%731, meta[relay.Constant][29] /* ty=Tensor[(9, 9), float64] */, %732, %733)
}

def @func_10087() -> (Tensor[(10, 4, 16), float64],) {
  %734 = @func_4216() /* ty=Tensor[(10, 4, 16), float64] */;
  (%734,)
}

def @func_401() -> (Tensor[(10, 4, 16), float64],) {
  %735 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  (%735,)
}

def @func_6932(%var_6912: Tensor[(108), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(4, 9, 3), float32], Tensor[(108), float32]) {
  %736 = cast(%var_6912, dtype="float32") /* ty=Tensor[(108), float32] */;
  %737 = reshape(%736, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %738 = @func_3794(%737) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(10, 4, 16), float64]) */;
  %739 = @func_3706() /* ty=Tensor[(10, 4, 16), float64] */;
  %740 = %738.0;
  (%739, %740, %var_6912)
}

def @func_551(%var_529: Tensor[(10, 4, 16), float64]) -> (Tensor[(10, 4, 16), bool],) {
  %741 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %742 = cast(%741, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %743 = atanh(%742) /* ty=Tensor[(10, 4, 16), float64] */;
  %744 = cast(%var_529, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %745 = shape_of(%743, dtype="int32") /* ty=Tensor[(3), int32] */;
  %746 = cast(%743, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %748 = greater(%746, %747) /* ty=Tensor[(10, 4, 16), bool] */;
  (%748,)
}

def @func_7751() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float32]) {
  %749 = @func_4494() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %750 = @func_4261() /* ty=(Tensor[(10, 4, 16), float32],) */;
  %751 = %749.0;
  %752 = %750.0;
  (%751, %752)
}

def @func_3914() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %753 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %754 = @func_3883() /* ty=Tensor[(10, 4, 16), float64] */;
  %755 = %753.0;
  (%754, %755)
}

def @func_6432() -> Tensor[(10, 4, 16), float64] {
  %756 = @func_1165() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
  %756.2
}

def @func_5408() -> Tensor[(10, 4, 16), float64] {
  %757 = @func_2634() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) */;
  %757.0
}

def @func_9113() -> (Tensor[(10, 4, 16), float64],) {
  %758 = @func_3883() /* ty=Tensor[(10, 4, 16), float64] */;
  (%758,)
}

def @func_10519() -> (Tensor[(10, 4, 16), float64],) {
  %759 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %760 = %759.1;
  (%760,)
}

def @func_1679(%var_1634: int16, %var_1635: Tensor[(7, 16, 9), int16]) -> (Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) {
  %761 = @func_1581() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %762 = cast(%var_1634, dtype="int16") /* ty=int16 */;
  %763 = cast(%var_1635, dtype="int16") /* ty=Tensor[(7, 16, 9), int16] */;
  %764 = multiply(%762, %763) /* ty=Tensor[(7, 16, 9), int16] */;
  %765 = cast(%var_1635, dtype="int8") /* ty=Tensor[(7, 16, 9), int8] */;
  %766 = shape_of(%764, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(%764, dtype="int8") /* ty=Tensor[(7, 16, 9), int8] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %769 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %770 = %769.0;
  %771 = cast(%770, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %772 = reshape(%771, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %773 = @func_1581() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %774 = %761.0;
  %775 = left_shift(%767, %768) /* ty=Tensor[(7, 16, 9), int8] */;
  %776 = @func_273(%772) /* ty=Tensor[(10, 4, 16), int8] */;
  %777 = %773.1;
  (%774, %775, %770, %776, %777)
}

def @func_4774(%var_4743: Tensor[(12, 14, 8), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(12, 14, 8), float64]) {
  %778 = @func_4726() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %779 = cast(meta[relay.Constant][30] /* ty=Tensor[(12, 14, 8), float32] */, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
  %780 = shape_of(%var_4743, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%var_4743, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %783 = subtract(%781, %782) /* ty=Tensor[(12, 14, 8), float32] */;
  %784 = cast(%var_4743, dtype="float64") /* ty=Tensor[(12, 14, 8), float64] */;
  %785 = shape_of(%783, dtype="int32") /* ty=Tensor[(3), int32] */;
  %786 = cast(%783, dtype="float64") /* ty=Tensor[(12, 14, 8), float64] */;
  %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %788 = %778.0;
  %789 = divide(%786, %787) /* ty=Tensor[(12, 14, 8), float64] */;
  (%788, %789)
}

def @func_9089(%var_9084: Tensor[(11, 4, 12), float32]) -> (Tensor[(11, 4, 12), float32],) {
  %790 = cast(%var_9084, dtype="float32") /* ty=Tensor[(11, 4, 12), float32] */;
  %791 = sigmoid(%790) /* ty=Tensor[(11, 4, 12), float32] */;
  (%791,)
}

def @func_2156() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %792 = @func_1423() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %793 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %794 = %792.0;
  %795 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %796 = %793.0;
  (%794, %795, %796)
}

def @func_10108() -> (Tensor[(10, 4, 16), float64],) {
  %797 = @func_6004() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %798 = %797.0;
  (%798,)
}

def @func_3375() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %799 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %800 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %801 = %800.0;
  %802 = cast(%801, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %803 = reshape(%802, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), bool] */;
  %804 = @func_663(%803) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64]) */;
  %805 = cast(%801, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %806 = %804.0;
  %807 = cast(%806, dtype="float32") /* ty=Tensor[(10, 4, 16), float32] */;
  %808 = reshape(%805, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), bool] */;
  %809 = reshape(%807, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float32] */;
  %810 = @func_1116(%808, %809) /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %811 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %812 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %813 = %799.1;
  %814 = %810.2;
  %815 = %811.1;
  %816 = %812.0;
  (%813, %801, %806, %814, %815, %816)
}

def @func_5512() -> (Tensor[(10, 4, 16), int64], Tensor[(10, 4, 16), float64]) {
  %817 = @func_4596() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), int64]) */;
  %818 = %817.2;
  %819 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
  (%818, %819)
}

def @func_3978() -> (Tensor[(10, 4, 16), float64],) {
  %820 = @func_3706() /* ty=Tensor[(10, 4, 16), float64] */;
  (%820,)
}

def @func_11441(%var_11437: Tensor[(72), float32]) -> (Tensor[(10, 4, 16), float32], Tensor[(132), int32], Tensor[(66, 2), int32], Tensor[(72), float32]) {
  %821 = @func_4261() /* ty=(Tensor[(10, 4, 16), float32],) */;
  %822 = cast(meta[relay.Constant][31] /* ty=Tensor[(66, 2), int32] */, dtype="int32") /* ty=Tensor[(66, 2), int32] */;
  %823 = cast(%var_11437, dtype="float32") /* ty=Tensor[(72), float32] */;
  %824 = reshape(%822, newshape=[132]) /* ty=Tensor[(132), int32] */;
  %825 = reshape(%823, newshape=[18, 4]) /* ty=Tensor[(18, 4), float32] */;
  %826 = @func_10868(%824, %825) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(1, 72), float32], int32, Tensor[(132), int32], Tensor[(18, 4), float32]) */;
  %827 = %821.0;
  %828 = %826.4;
  (%827, %828, meta[relay.Constant][31] /* ty=Tensor[(66, 2), int32] */, %var_11437)
}

def @func_2762(%var_2733: Tensor[(1008), int16], %var_2749: Tensor[(72), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(72), float32]) {
  %829 = @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %830 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %831 = cast(meta[relay.Constant][32] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %832 = cast(%var_2733, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %833 = reshape(%831, newshape=[]) /* ty=int16 */;
  %834 = reshape(%832, newshape=[1008]) /* ty=Tensor[(1008), int16] */;
  %835 = @func_1903(%833, %834) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64]) */;
  %836 = @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %837 = cast(%var_2749, dtype="float32") /* ty=Tensor[(72), float32] */;
  %838 = reshape(%837, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float32] */;
  %839 = @func_1616(%838) /* ty=(Tensor[(6, 2, 6), float32], Tensor[(10, 4, 16), float64]) */;
  %840 = %829.0;
  %841 = %830.0;
  %842 = %835.1;
  %843 = %836.0;
  %844 = %839.1;
  (%840, %841, %842, meta[relay.Constant][32] /* ty=int16 */, %var_2733, %843, %844, %var_2749)
}

def @func_10571(%var_10546: Tensor[(8, 4, 5), uint8], %var_10547: Tensor[(8, 4, 5), uint8]) -> (Tensor[(8, 4, 5), uint8], Tensor[(10, 4, 16), float64]) {
  %845 = cast(%var_10547, dtype="uint8") /* ty=Tensor[(8, 4, 5), uint8] */;
  %846 = shape_of(%var_10546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %847 = cast(%var_10546, dtype="uint8") /* ty=Tensor[(8, 4, 5), uint8] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %849 = @func_4846() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %850 = subtract(%847, %848) /* ty=Tensor[(8, 4, 5), uint8] */;
  %851 = %849.2;
  (%850, %851)
}

def @func_9646() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %852 = @func_2523() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %853 = @func_6277() /* ty=(Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %854 = @func_8030() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %855 = %852.0;
  %856 = %853.1;
  %857 = %854.0;
  (%855, %856, %857)
}

def @func_6749() -> Tensor[(10, 4, 16), int64] {
  %858 = @func_3850() /* ty=(Tensor[(10, 4, 16), int64],) */;
  %858.0
}

def @func_11537() -> (Tensor[(10, 4, 16), float64],) {
  %859 = @func_3499() /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) */;
  %860 = %859.3;
  (%860,)
}

def @func_8463(%var_8343: Tensor[(1, 7, 5), bool], %var_8344: Tensor[(2, 7, 5), bool], %var_8372: Tensor[(1344), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1344), float32], Tensor[(10, 4, 16), float64], Tensor[(2, 7, 5), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %861 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %862 = cast(%var_8372, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %863 = reshape(%862, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), float32] */;
  %864 = @func_4774(%863) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(12, 14, 8), float64]) */;
  %865 = @func_7672() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %866 = cast(%var_8343, dtype="bool") /* ty=Tensor[(1, 7, 5), bool] */;
  %867 = cast(%var_8344, dtype="bool") /* ty=Tensor[(2, 7, 5), bool] */;
  %868 = logical_and(%866, %867) /* ty=Tensor[(2, 7, 5), bool] */;
  %869 = cast(%868, dtype="float32") /* ty=Tensor[(2, 7, 5), float32] */;
  %870 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %871 = @func_4494() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %872 = %861.0;
  %873 = %864.0;
  %874 = %865.0;
  %875 = erf(%869) /* ty=Tensor[(2, 7, 5), float32] */;
  %876 = @func_3859() /* ty=Tensor[(10, 4, 16), float64] */;
  %877 = %870.0;
  %878 = %871.0;
  (%872, %873, %var_8372, %874, %875, %876, %877, %878)
}

def @func_11225() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %879 = @func_4928() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %880 = @func_10457() /* ty=Tensor[(10, 4, 16), float64] */;
  %881 = @func_3706() /* ty=Tensor[(10, 4, 16), float64] */;
  %882 = %879.0;
  (%880, %881, %882)
}

def @func_6153() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %883 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %884 = @func_2213() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(10, 4, 16), float64]) */;
  %885 = %883.0;
  %886 = %884.0;
  (%885, %886)
}

def @func_11517(%var_11500: Tensor[(4, 5, 10), uint8], %var_11501: Tensor[(4, 5, 10), uint8]) -> Tensor[(4, 5, 10), bool] {
  %887 = cast(%var_11501, dtype="bool") /* ty=Tensor[(4, 5, 10), bool] */;
  %888 = shape_of(%var_11500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %889 = cast(%var_11500, dtype="bool") /* ty=Tensor[(4, 5, 10), bool] */;
  %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%889, %890) /* ty=Tensor[(4, 5, 10), bool] */
}

def @func_11942() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %891 = @func_10108() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %892 = @func_8030() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %893 = %891.0;
  %894 = %892.0;
  (%893, %894)
}

def @func_1116(%var_994: Tensor[(10, 4, 16), bool], %var_1074: Tensor[(10, 4, 16), float32]) -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %895 = @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %896 = %895.1;
  %897 = cast(%var_994, dtype="float32") /* ty=Tensor[(10, 4, 16), float32] */;
  %898 = shape_of(%896, dtype="int32") /* ty=Tensor[(3), int32] */;
  %899 = cast(%896, dtype="float32") /* ty=Tensor[(10, 4, 16), float32] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %901 = divide(%899, %900) /* ty=Tensor[(10, 4, 16), float32] */;
  %902 = cast(%901, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %903 = shape_of(%896, dtype="int32") /* ty=Tensor[(3), int32] */;
  %904 = cast(%896, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %906 = mod(%904, %905) /* ty=Tensor[(10, 4, 16), float64] */;
  %907 = cast(%906, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %908 = shape_of(%var_994, dtype="int32") /* ty=Tensor[(3), int32] */;
  %909 = cast(%var_994, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %911 = cast(%901, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %912 = reshape(%911, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %913 = @func_551(%912) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %914 = @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %915 = cast(%var_1074, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %916 = shape_of(%901, dtype="int32") /* ty=Tensor[(3), int32] */;
  %917 = cast(%901, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %919 = @func_758() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), bool]) */;
  %920 = @func_758() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), bool]) */;
  %921 = logical_and(%909, %910) /* ty=Tensor[(10, 4, 16), bool] */;
  %922 = %913.0;
  %923 = %914.0;
  %924 = less(%917, %918) /* ty=Tensor[(10, 4, 16), bool] */;
  %925 = %919.1;
  %926 = %920.1;
  (%921, %922, %923, %924, %925, %926)
}

def @func_5631() -> (Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) {
  %927 = @func_2998() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), bool]) */;
  %928 = @func_3978() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %929 = %927.0;
  %930 = %928.0;
  (%929, %930)
}

def @func_8679(%var_8654: Tensor[(72), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(6, 2, 6), float32], Tensor[(72), float32]) {
  %931 = @func_7582() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
  %932 = @func_5258() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %933 = @func_6460() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %934 = cast(%var_8654, dtype="float32") /* ty=Tensor[(72), float32] */;
  %935 = reshape(%934, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float32] */;
  %936 = @func_1616(%935) /* ty=(Tensor[(6, 2, 6), float32], Tensor[(10, 4, 16), float64]) */;
  %937 = %931.1;
  %938 = %932.0;
  %939 = %933.1;
  %940 = %936.0;
  (%937, %938, %939, %940, %var_8654)
}

def @func_5874() -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) {
  %941 = @func_3499() /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) */;
  %942 = @func_3914() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %943 = %941.0;
  %944 = %942.1;
  (%943, %944)
}

def @func_11043() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %945 = @func_8162() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
  %946 = @func_10519() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %947 = %945.1;
  %948 = %946.0;
  (%947, %948)
}

def @func_9302(%var_9247: Tensor[(528), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(11, 4, 12), float32], Tensor[(528), float32], Tensor[(10, 4, 16), bool]) {
  %949 = @func_4494() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %950 = cast(%var_9247, dtype="float32") /* ty=Tensor[(528), float32] */;
  %951 = reshape(%950, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %952 = @func_9089(%951) /* ty=(Tensor[(11, 4, 12), float32],) */;
  %953 = @func_6575() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %954 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %955 = %949.0;
  %956 = %952.0;
  %957 = %953.1;
  (%954, %955, %956, %var_9247, %957)
}

def @func_4636(%var_4607: Tensor[(4, 10, 5), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(4, 10, 5), uint32]) {
  %958 = @func_1581() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %959 = cast(%var_4607, dtype="float32") /* ty=Tensor[(4, 10, 5), float32] */;
  %960 = erf(%959) /* ty=Tensor[(4, 10, 5), float32] */;
  %961 = cast(%var_4607, dtype="float64") /* ty=Tensor[(4, 10, 5), float64] */;
  %962 = tan(%961) /* ty=Tensor[(4, 10, 5), float64] */;
  %963 = cast(%962, dtype="uint32") /* ty=Tensor[(4, 10, 5), uint32] */;
  %964 = shape_of(%960, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%960, dtype="uint32") /* ty=Tensor[(4, 10, 5), uint32] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %967 = %958.7;
  %968 = maximum(%965, %966) /* ty=Tensor[(4, 10, 5), uint32] */;
  (%967, %968)
}

def @func_9702() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64]) {
  %969 = @func_3978() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %970 = @func_4948() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %971 = @func_3850() /* ty=(Tensor[(10, 4, 16), int64],) */;
  %972 = %969.0;
  %973 = %970.0;
  %974 = %971.0;
  (%972, %973, %974)
}

def @func_7322(%var_7312: Tensor[(12, 15, 11), float32], %var_7313: Tensor[(12, 15, 11), float32]) -> (Tensor[(12, 15, 11), bool], Tensor[(12, 15, 11), float64]) {
  %975 = cast(%var_7313, dtype="bool") /* ty=Tensor[(12, 15, 11), bool] */;
  %976 = shape_of(%var_7312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %977 = cast(%var_7312, dtype="bool") /* ty=Tensor[(12, 15, 11), bool] */;
  %978 = dyn.reshape(%975, %976, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %979 = cast(%var_7313, dtype="float64") /* ty=Tensor[(12, 15, 11), float64] */;
  %980 = greater(%977, %978) /* ty=Tensor[(12, 15, 11), bool] */;
  %981 = sinh(%979) /* ty=Tensor[(12, 15, 11), float64] */;
  (%980, %981)
}

def @func_1903(%var_1882: int16, %var_1883: Tensor[(1008), int16]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64]) {
  %982 = cast(%var_1882, dtype="int16") /* ty=int16 */;
  %983 = cast(%var_1883, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %984 = reshape(%982, newshape=[]) /* ty=int16 */;
  %985 = reshape(%983, newshape=[7, 16, 9]) /* ty=Tensor[(7, 16, 9), int16] */;
  %986 = @func_1679(%984, %985) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %987 = cast(%var_1882, dtype="int16") /* ty=int16 */;
  %988 = cast(%var_1883, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %989 = reshape(%987, newshape=[]) /* ty=int16 */;
  %990 = reshape(%988, newshape=[7, 16, 9]) /* ty=Tensor[(7, 16, 9), int16] */;
  %991 = @func_1679(%989, %990) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %992 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %993 = %986.2;
  %994 = %991.2;
  (%992, %993, %var_1882, %var_1883, %994)
}

def @func_3850() -> (Tensor[(10, 4, 16), int64],) {
  %995 = @func_2213() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(10, 4, 16), float64]) */;
  %996 = %995.1;
  (%996,)
}

def @func_4494() -> (Tensor[(10, 4, 16), float64],) {
  %997 = @func_3914() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %998 = %997.1;
  (%998,)
}

def @func_8537() -> Tensor[(10, 4, 16), float64] {
  %999 = @func_7582() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
  %999.1
}

def @func_11578(%var_11572: Tensor[(2, 1, 9), float32], %var_11573: Tensor[(2, 13, 9), float32]) -> (Tensor[(2, 13, 9), bool],) {
  %1000 = cast(%var_11572, dtype="bool") /* ty=Tensor[(2, 1, 9), bool] */;
  %1001 = cast(%var_11573, dtype="bool") /* ty=Tensor[(2, 13, 9), bool] */;
  %1002 = greater(%1000, %1001) /* ty=Tensor[(2, 13, 9), bool] */;
  (%1002,)
}

def @func_3859() -> Tensor[(10, 4, 16), float64] {
  %1003 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1003.0
}

def @func_3062() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %1004 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1005 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
  %1006 = %1004.0;
  (%1005, %1006)
}

def @func_8927() -> (Tensor[(10, 4, 16), float64],) {
  %1007 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1008 = %1007.0;
  (%1008,)
}

def @func_4846() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %1009 = @func_3293() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1010 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1011 = @func_3202() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1012 = %1009.0;
  %1013 = %1010.0;
  %1014 = %1011.0;
  (%1012, %1013, %1014)
}

def @func_8030() -> (Tensor[(10, 4, 16), float64],) {
  %1015 = @func_4433() /* ty=Tensor[(10, 4, 16), float64] */;
  (%1015,)
}

def @func_3293() -> (Tensor[(10, 4, 16), float64],) {
  %1016 = @func_2156() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1017 = %1016.1;
  (%1017,)
}

def @func_3794(%var_3788: Tensor[(4, 9, 3), float32]) -> (Tensor[(4, 9, 3), float32], Tensor[(10, 4, 16), float64]) {
  %1018 = cast(%var_3788, dtype="float32") /* ty=Tensor[(4, 9, 3), float32] */;
  %1019 = @func_3140() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %1020 = atan(%1018) /* ty=Tensor[(4, 9, 3), float32] */;
  %1021 = %1019.5;
  (%1020, %1021)
}

def @func_9518() -> (Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(108), float32]) {
  %1022 = @func_6004() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1023 = @func_2213() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(10, 4, 16), float64]) */;
  %1024 = cast(meta[relay.Constant][33] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1025 = reshape(%1024, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %1026 = @func_3794(%1025) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(10, 4, 16), float64]) */;
  %1027 = %1022.0;
  %1028 = %1023.2;
  %1029 = %1026.1;
  (%1027, %1028, %1029, meta[relay.Constant][33] /* ty=Tensor[(108), float32] */)
}

def @func_3758() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %1030 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
  %1031 = @func_2231() /* ty=Tensor[(10, 4, 16), bool] */;
  (%1030, %1031)
}

def @func_971() -> Tensor[(10, 4, 16), float64] {
  %1032 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1032.0
}

def @func_9346() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %1033 = @func_8162() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
  %1034 = @func_5631() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) */;
  %1035 = %1033.1;
  %1036 = %1034.1;
  (%1035, %1036)
}

def @func_4054(%var_3996: int32, %var_3997: Tensor[(12, 11, 1), int32], %var_4035: Tensor[(1, 72), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(12, 11, ?), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(6, 2, 6), float32], Tensor[(1, 72), float32], Tensor[(10, 4, 16), bool], Tensor[(12, 11, 1), float32]) {
  %1037 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1038 = cast(%var_3996, dtype="int32") /* ty=int32 */;
  %1039 = cast(%var_3997, dtype="int32") /* ty=Tensor[(12, 11, 1), int32] */;
  %1040 = bitwise_or(%1038, %1039) /* ty=Tensor[(12, 11, 1), int32] */;
  %1041 = cast(%1040, dtype="float32") /* ty=Tensor[(12, 11, 1), float32] */;
  %1042 = shape_of(%var_3997, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1043 = cast(%var_3997, dtype="float32") /* ty=Tensor[(12, 11, 1), float32] */;
  %1044 = dyn.reshape(%1041, %1042, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1045 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1046 = @func_1165() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
  %1047 = cast(%var_4035, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
  %1048 = reshape(%1047, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float32] */;
  %1049 = @func_1616(%1048) /* ty=(Tensor[(6, 2, 6), float32], Tensor[(10, 4, 16), float64]) */;
  %1050 = %1037.0;
  %1051 = cast(%1050, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %1052 = reshape(%1051, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %1053 = @func_3593(%1052) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %1054 = cast(%var_3997, dtype="float32") /* ty=Tensor[(12, 11, 1), float32] */;
  %1055 = floor_divide(%1043, %1044) /* ty=Tensor[(12, 11, ?), float32] */;
  %1056 = %1045.1;
  %1057 = %1046.3;
  %1058 = %1049.0;
  %1059 = %1053.0;
  %1060 = sin(%1054) /* ty=Tensor[(12, 11, 1), float32] */;
  (%1050, %1055, %1056, %1057, %1058, %var_4035, %1059, %1060)
}

def @func_2634() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) {
  %1061 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1062 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1063 = @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %1064 = @func_2115() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1008), int16], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
  %1065 = @func_758() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), bool]) */;
  %1066 = %1061.0;
  %1067 = %1062.0;
  %1068 = %1063.0;
  %1069 = %1064.5;
  %1070 = %1065.1;
  (%1066, %1067, %1068, %1069, %1070)
}

def @func_5103(%var_5066: Tensor[(108), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), float64]) {
  %1071 = @func_3293() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1072 = cast(%var_5066, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1073 = reshape(%1072, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %1074 = @func_3794(%1073) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(10, 4, 16), float64]) */;
  %1075 = @func_182() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1076 = @func_4261() /* ty=(Tensor[(10, 4, 16), float32],) */;
  %1077 = %1071.0;
  %1078 = %1074.0;
  %1079 = %1075.0;
  %1080 = %1076.0;
  %1081 = @func_4433() /* ty=Tensor[(10, 4, 16), float64] */;
  (%1077, %1078, %var_5066, %1079, %1080, %1081)
}

def @func_3706() -> Tensor[(10, 4, 16), float64] {
  %1082 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1082.0
}

def @func_3593(%var_3586: Tensor[(10, 4, 16), float64]) -> (Tensor[(10, 4, 16), bool],) {
  %1083 = @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %1084 = %1083.0;
  %1085 = cast(%var_3586, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %1086 = shape_of(%1084, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1087 = cast(%1084, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %1088 = dyn.reshape(%1085, %1086, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1089 = not_equal(%1087, %1088) /* ty=Tensor[(10, 4, 16), bool] */;
  (%1089,)
}

def @func_10190(%var_10164: Tensor[(1344), float32]) -> (Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), float64], Tensor[(12, 14, 8), float64], Tensor[(1344), float32], Tensor[(10, 4, 16), float64], Tensor[(108), float32]) {
  %1090 = @func_4261() /* ty=(Tensor[(10, 4, 16), float32],) */;
  %1091 = @func_1581() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1092 = cast(%var_10164, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %1093 = reshape(%1092, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), float32] */;
  %1094 = @func_4774(%1093) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(12, 14, 8), float64]) */;
  %1095 = cast(meta[relay.Constant][34] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1096 = reshape(%1095, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %1097 = @func_9824(%1096) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(108), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
  %1098 = %1090.0;
  %1099 = %1091.0;
  %1100 = %1094.1;
  %1101 = %1097.3;
  (%1098, %1099, %1100, %var_10164, %1101, meta[relay.Constant][34] /* ty=Tensor[(108), float32] */)
}

def @func_3499() -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) {
  %1102 = @func_1247() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %1103 = @func_3293() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1104 = @func_2998() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), bool]) */;
  %1105 = @func_1165() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
  %1106 = %1102.0;
  %1107 = %1103.0;
  %1108 = %1104.1;
  %1109 = %1105.1;
  (%1106, %1107, %1108, %1109)
}

def @func_6277() -> (Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) {
  %1110 = @func_3140() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %1111 = %1110.4;
  %1112 = @func_5782() /* ty=Tensor[(10, 4, 16), float64] */;
  (%1111, %1112)
}

def @func_7947(%var_7922: Tensor[(5, 12, 8), bool]) -> (Tensor[(10, 4, 16), float64], Tensor[(5, 12, 8), bool]) {
  %1113 = @func_4891() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1114 = @func_5671() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(5, 12, ?), bool], Tensor[(5, 12, 1), float32], Tensor[(10, 4, 16), bool]) */;
  %1115 = %1114.1;
  %1116 = cast(%1115, dtype="bool") /* ty=Tensor[(5, 12, ?), bool] */;
  %1117 = cast(%var_7922, dtype="bool") /* ty=Tensor[(5, 12, 8), bool] */;
  %1118 = %1113.0;
  %1119 = greater(%1116, %1117) /* ty=Tensor[(5, 12, 8), bool] */;
  (%1118, %1119)
}

def @func_2998() -> (Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), bool]) {
  %1120 = @func_2115() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1008), int16], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
  %1121 = %1120.7;
  %1122 = cast(%1121, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %1123 = reshape(%1122, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %1124 = @func_551(%1123) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %1125 = %1124.0;
  (%1121, %1125)
}

def @func_5834(%var_5821: Tensor[(5, 9, 1), float32], %var_5822: Tensor[(5, 9, 14), float32]) -> (Tensor[(5, 9, 14), bool], Tensor[(10, 4, 16), float64]) {
  %1126 = cast(%var_5821, dtype="bool") /* ty=Tensor[(5, 9, 1), bool] */;
  %1127 = cast(%var_5822, dtype="bool") /* ty=Tensor[(5, 9, 14), bool] */;
  %1128 = @func_4891() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1129 = less(%1126, %1127) /* ty=Tensor[(5, 9, 14), bool] */;
  %1130 = %1128.0;
  (%1129, %1130)
}

def @func_8260() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %1131 = @func_7751() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float32]) */;
  %1132 = @func_5945() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %1133 = %1131.0;
  %1134 = %1132.0;
  (%1133, %1134)
}

def @func_9617() -> Tensor[(10, 4, 16), int64] {
  %1135 = @func_4494() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1136 = %1135.0;
  %1137 = @func_9113() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1138 = %1137.0;
  %1139 = cast(%1138, dtype="int64") /* ty=Tensor[(10, 4, 16), int64] */;
  %1140 = shape_of(%1136, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1141 = cast(%1136, dtype="int64") /* ty=Tensor[(10, 4, 16), int64] */;
  %1142 = dyn.reshape(%1139, %1140, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  multiply(%1141, %1142) /* ty=Tensor[(10, 4, 16), int64] */
}

def @func_9193() -> (Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %1143 = @func_8976() /* ty=(Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), bool], Tensor[(900), float64], Tensor[(900), float64]) */;
  %1144 = @func_3978() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1145 = @func_6277() /* ty=(Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %1146 = %1143.0;
  %1147 = %1144.0;
  %1148 = %1145.1;
  (%1146, %1147, %1148)
}

def @func_1832() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %1149 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1150 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1151 = %1149.0;
  %1152 = %1150.0;
  (%1151, %1152)
}

def @func_1581() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %1153 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1154 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1155 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1156 = cast(meta[relay.Constant][35] /* ty=Tensor[(9, 9), float64] */, dtype="float64") /* ty=Tensor[(9, 9), float64] */;
  %1157 = reshape(%1156, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float64] */;
  %1158 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1159 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1160 = %1153.0;
  %1161 = %1154.0;
  %1162 = %1155.0;
  %1163 = @func_1459(%1157) /* ty=Tensor[(1, 9, 9), float64] */;
  %1164 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
  %1165 = %1158.0;
  %1166 = %1159.0;
  (%1160, %1161, %1162, %1163, meta[relay.Constant][35] /* ty=Tensor[(9, 9), float64] */, %1164, %1165, %1166)
}

def @func_8692() -> Tensor[(10, 4, 16), float64] {
  %1167 = @func_3978() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1167.0
}

def @func_3408() -> Tensor[(10, 4, 16), bool] {
  %1168 = @func_1247() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %1168.0
}

def @func_6896() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %1169 = @func_3202() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1170 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1171 = %1169.0;
  %1172 = %1170.1;
  (%1171, %1172)
}

def @func_7035(%var_6993: Tensor[(7, 7, 7), float32], %var_7025: Tensor[(7, 7, 7), uint64]) -> (Tensor[(7, 7, 7), int16], Tensor[(10, 4, 16), float64], Tensor[(7, 7, 7), float64]) {
  %1173 = cast(%var_6993, dtype="float32") /* ty=Tensor[(7, 7, 7), float32] */;
  %1174 = exp(%1173) /* ty=Tensor[(7, 7, 7), float32] */;
  %1175 = cast(%var_6993, dtype="uint64") /* ty=Tensor[(7, 7, 7), uint64] */;
  %1176 = shape_of(%1174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1177 = cast(%1174, dtype="uint64") /* ty=Tensor[(7, 7, 7), uint64] */;
  %1178 = dyn.reshape(%1175, %1176, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1179 = maximum(%1177, %1178) /* ty=Tensor[(7, 7, 7), uint64] */;
  %1180 = cast(%1179, dtype="int16") /* ty=Tensor[(7, 7, 7), int16] */;
  %1181 = shape_of(%1174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1182 = cast(%1174, dtype="int16") /* ty=Tensor[(7, 7, 7), int16] */;
  %1183 = dyn.reshape(%1180, %1181, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1184 = @func_3375() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1185 = cast(%var_7025, dtype="float64") /* ty=Tensor[(7, 7, 7), float64] */;
  %1186 = shape_of(%1179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1187 = cast(%1179, dtype="float64") /* ty=Tensor[(7, 7, 7), float64] */;
  %1188 = dyn.reshape(%1185, %1186, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1189 = right_shift(%1182, %1183) /* ty=Tensor[(7, 7, 7), int16] */;
  %1190 = %1184.3;
  %1191 = divide(%1187, %1188) /* ty=Tensor[(7, 7, 7), float64] */;
  (%1189, %1190, %1191)
}

def @func_8897(%var_8885: Tensor[(7, 49), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(7, 7, 7), int16], Tensor[(7, 49), float32], Tensor[(10, 4, 16), bool]) {
  %1192 = @func_3293() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1193 = cast(%var_8885, dtype="float32") /* ty=Tensor[(7, 49), float32] */;
  %1194 = cast(%var_8885, dtype="uint64") /* ty=Tensor[(7, 49), uint64] */;
  %1195 = reshape(%1193, newshape=[7, 7, 7]) /* ty=Tensor[(7, 7, 7), float32] */;
  %1196 = reshape(%1194, newshape=[7, 7, 7]) /* ty=Tensor[(7, 7, 7), uint64] */;
  %1197 = @func_7035(%1195, %1196) /* ty=(Tensor[(7, 7, 7), int16], Tensor[(10, 4, 16), float64], Tensor[(7, 7, 7), float64]) */;
  %1198 = @func_1247() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %1199 = %1192.0;
  %1200 = %1197.0;
  %1201 = %1198.0;
  (%1199, %1200, %var_8885, %1201)
}

def @func_72() -> Tensor[(10, 4, 16), float64] {
  %1202 = cast(meta[relay.Constant][36] /* ty=Tensor[(10, 4, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  sqrt(%1202) /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_9558(%var_9540: Tensor[(2, 15, 15), int8], %var_9541: Tensor[(2, 15, 15), int8]) -> Tensor[(2, 15, 15), bool] {
  %1203 = cast(%var_9541, dtype="bool") /* ty=Tensor[(2, 15, 15), bool] */;
  %1204 = shape_of(%var_9540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1205 = cast(%var_9540, dtype="bool") /* ty=Tensor[(2, 15, 15), bool] */;
  %1206 = dyn.reshape(%1203, %1204, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1205, %1206) /* ty=Tensor[(2, 15, 15), bool] */
}

def @func_10044() -> (Tensor[(10, 4, 16), bool],) {
  %1207 = @func_8052() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %1208 = %1207.0;
  (%1208,)
}

def @func_7672() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %1209 = @func_2864() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1210 = %1209.0;
  %1211 = cast(%1210, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %1212 = reshape(%1211, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %1213 = @func_3593(%1212) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %1214 = %1213.0;
  (%1210, %1214)
}

def @func_6575() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %1215 = @func_5945() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %1216 = @func_5408() /* ty=Tensor[(10, 4, 16), float64] */;
  %1217 = %1215.0;
  (%1216, %1217)
}

def @func_11866() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %1218 = @func_10519() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1219 = @func_4948() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1220 = @func_4413() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1221 = @func_7672() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %1222 = @func_11409() /* ty=Tensor[(10, 4, 16), float64] */;
  %1223 = %1218.0;
  %1224 = %1219.0;
  %1225 = %1220.0;
  %1226 = %1221.1;
  (%1222, %1223, %1224, %1225, %1226)
}

def @func_5563() -> (Tensor[(2, 11, 16), float32], Tensor[(10, 4, 16), bool], Tensor[(80, 8), float64], Tensor[(10, 4, 16), float64]) {
  %1227 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 11, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 11, 16), float32] */;
  %1228 = cast(meta[relay.Constant][38] /* ty=Tensor[(80, 8), float64] */, dtype="float64") /* ty=Tensor[(80, 8), float64] */;
  %1229 = reshape(%1228, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %1230 = @func_551(%1229) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %1231 = rsqrt(%1227) /* ty=Tensor[(2, 11, 16), float32] */;
  %1232 = %1230.0;
  %1233 = @func_3706() /* ty=Tensor[(10, 4, 16), float64] */;
  (%1231, %1232, meta[relay.Constant][38] /* ty=Tensor[(80, 8), float64] */, %1233)
}

def @func_8212() -> Tensor[(81), float64] {
  %1234 = @func_2213() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(10, 4, 16), float64]) */;
  %1234.3
}

def @func_8876(%var_8864: int16, %var_8865: Tensor[(1008), int16]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16]) {
  %1235 = @func_6153() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1236 = @func_6004() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1237 = cast(%var_8864, dtype="int16") /* ty=int16 */;
  %1238 = cast(%var_8865, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %1239 = reshape(%1237, newshape=[]) /* ty=int16 */;
  %1240 = reshape(%1238, newshape=[1008]) /* ty=Tensor[(1008), int16] */;
  %1241 = @func_1903(%1239, %1240) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64]) */;
  %1242 = %1235.0;
  %1243 = %1236.0;
  %1244 = %1241.1;
  (%1242, %1243, %1244, %var_8864, %var_8865)
}

def @func_7184(%var_7145: Tensor[(10, 6, 15), float64]) -> (Tensor[(10, 6, 15), float64], Tensor[(10, 4, 16), int64]) {
  %1245 = cast(%var_7145, dtype="float64") /* ty=Tensor[(10, 6, 15), float64] */;
  %1246 = sqrt(%1245) /* ty=Tensor[(10, 6, 15), float64] */;
  %1247 = @func_6749() /* ty=Tensor[(10, 4, 16), int64] */;
  (%1246, %1247)
}

def @func_10279(%var_10269: Tensor[(2, 672), float32]) -> (Tensor[(10, 4, 16), float32], Tensor[(12, 14, 8), float64], Tensor[(2, 672), float32]) {
  %1248 = cast(%var_10269, dtype="float32") /* ty=Tensor[(2, 672), float32] */;
  %1249 = reshape(%1248, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), float32] */;
  %1250 = @func_4774(%1249) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(12, 14, 8), float64]) */;
  %1251 = @func_4252() /* ty=Tensor[(10, 4, 16), float32] */;
  %1252 = %1250.1;
  (%1251, %1252, %var_10269)
}

def @func_1423() -> (Tensor[(10, 4, 16), float64],) {
  %1253 = @func_1165() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
  %1254 = %1253.1;
  (%1254,)
}

def @func_5258() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %1255 = @func_4846() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1256 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1257 = %1255.1;
  %1258 = %1256.0;
  (%1257, %1258)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3796(%var_3795: Tensor[(4, 9, 3), float32]) -> (Tensor[(4, 9, 3), float32], Tensor[(10, 4, 16), float64]) {
  %4 = fn (%var_3788: Tensor[(4, 9, 3), float32]) -> (Tensor[(4, 9, 3), float32], Tensor[(10, 4, 16), float64]) {
    %0 = cast(%var_3788, dtype="float32") /* ty=Tensor[(4, 9, 3), float32] */;
    %1 = @func_3140() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
    %2 = atan(%0) /* ty=Tensor[(4, 9, 3), float32] */;
    %3 = %1.5;
    (%2, %3)
  };
  %4(%var_3795) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(10, 4, 16), float64]) */
}

def @func_11226() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %9 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
    %5 = @func_4928() /* ty=(Tensor[(10, 4, 16), bool],) */;
    %6 = @func_10457() /* ty=Tensor[(10, 4, 16), float64] */;
    %7 = @func_3706() /* ty=Tensor[(10, 4, 16), float64] */;
    %8 = %5.0;
    (%6, %7, %8)
  };
  %9() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */
}

def @func_10872(%var_10870: Tensor[(132), int32], %var_10871: Tensor[(18, 4), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(1, 72), float32], int32, Tensor[(132), int32], Tensor[(18, 4), float32]) {
  @func_10868(%var_10870, %var_10871) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(1, 72), float32], int32, Tensor[(132), int32], Tensor[(18, 4), float32]) */
}

def @func_6277() -> (Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) {
  %10 = @func_3140() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %11 = %10.4;
  %12 = @func_5782() /* ty=Tensor[(10, 4, 16), float64] */;
  (%11, %12)
}

def @func_4638(%var_4637: Tensor[(4, 10, 5), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(4, 10, 5), uint32]) {
  %24 = fn (%var_4607: Tensor[(4, 10, 5), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(4, 10, 5), uint32]) {
    %13 = @func_1581() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %14 = cast(%var_4607, dtype="float32") /* ty=Tensor[(4, 10, 5), float32] */;
    %15 = erf(%14) /* ty=Tensor[(4, 10, 5), float32] */;
    %16 = cast(%var_4607, dtype="float64") /* ty=Tensor[(4, 10, 5), float64] */;
    %17 = tan(%16) /* ty=Tensor[(4, 10, 5), float64] */;
    %18 = cast(%17, dtype="uint32") /* ty=Tensor[(4, 10, 5), uint32] */;
    %19 = shape_of(%15, dtype="int32") /* ty=Tensor[(3), int32] */;
    %20 = cast(%15, dtype="uint32") /* ty=Tensor[(4, 10, 5), uint32] */;
    %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %22 = %13.7;
    %23 = maximum(%20, %21) /* ty=Tensor[(4, 10, 5), uint32] */;
    (%22, %23)
  };
  %24(%var_4637) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(4, 10, 5), uint32]) */
}

def @func_1247() -> (Tensor[(10, 4, 16), bool],) {
  %25 = @func_1165() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
  %26 = %25.2;
  %27 = @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %28 = %27.1;
  %29 = cast(%28, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %30 = shape_of(%26, dtype="int32") /* ty=Tensor[(3), int32] */;
  %31 = cast(%26, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %33 = equal(%31, %32) /* ty=Tensor[(10, 4, 16), bool] */;
  (%33,)
}

def @func_273(%var_263: Tensor[(10, 4, 16), float64]) -> Tensor[(10, 4, 16), int8] {
  %34 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %35 = cast(%var_263, dtype="int8") /* ty=Tensor[(10, 4, 16), int8] */;
  %36 = shape_of(%34, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(%34, dtype="int8") /* ty=Tensor[(10, 4, 16), int8] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_and(%37, %38) /* ty=Tensor[(10, 4, 16), int8] */
}

def @func_4597() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), int64]) {
  %44 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), int64]) {
    %39 = @func_4573() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) */;
    %40 = @func_3850() /* ty=(Tensor[(10, 4, 16), int64],) */;
    %41 = %39.0;
    %42 = @func_3408() /* ty=Tensor[(10, 4, 16), bool] */;
    %43 = %40.0;
    (%41, %42, %43)
  };
  %44() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), int64]) */
}

def @func_2116() -> (Tensor[(10, 4, 16), float64], Tensor[(1008), int16], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) {
  %63 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(1008), int16], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) {
    %45 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %46 = cast(meta[relay.Constant][0] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %47 = cast(meta[relay.Constant][1] /* ty=Tensor[(1008), int16] */, dtype="int16") /* ty=Tensor[(1008), int16] */;
    %48 = reshape(%46, newshape=[]) /* ty=int16 */;
    %49 = reshape(%47, newshape=[1008]) /* ty=Tensor[(1008), int16] */;
    %50 = @func_1903(%48, %49) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64]) */;
    %51 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %52 = %51.0;
    %53 = cast(%52, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
    %54 = reshape(%53, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
    %55 = @func_551(%54) /* ty=(Tensor[(10, 4, 16), bool],) */;
    %56 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %57 = @func_1165() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
    %58 = %45.1;
    %59 = %50.3;
    %60 = %55.0;
    %61 = %56.0;
    %62 = %57.0;
    (%58, %59, meta[relay.Constant][0] /* ty=int16 */, meta[relay.Constant][1] /* ty=Tensor[(1008), int16] */, %52, %60, %61, %62)
  };
  %63() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1008), int16], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */
}

def @func_1351() -> (Tensor[(10, 4, 16), float64],) {
  @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_2766(%var_2764: Tensor[(1008), int16], %var_2765: Tensor[(72), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(72), float32]) {
  @func_2762(%var_2764, %var_2765) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(72), float32]) */
}

def @func_5565() -> (Tensor[(2, 11, 16), float32], Tensor[(10, 4, 16), bool], Tensor[(80, 8), float64], Tensor[(10, 4, 16), float64]) {
  @func_5563() /* ty=(Tensor[(2, 11, 16), float32], Tensor[(10, 4, 16), bool], Tensor[(80, 8), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_6575() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %64 = @func_5945() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %65 = @func_5408() /* ty=Tensor[(10, 4, 16), float64] */;
  %66 = %64.0;
  (%65, %66)
}

def @func_11666(%var_11653: Tensor[(5, 10, 5), uint32], %var_11654: Tensor[(5, 10, 5), uint32], %var_11663: Tensor[(12, 84), int16]) -> (Tensor[(5, 10, 5), uint32], Tensor[(10, 4, 16), float64], int16, Tensor[(12, 84), int16]) {
  %67 = cast(%var_11654, dtype="uint32") /* ty=Tensor[(5, 10, 5), uint32] */;
  %68 = shape_of(%var_11653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%var_11653, dtype="uint32") /* ty=Tensor[(5, 10, 5), uint32] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %71 = cast(meta[relay.Constant][2] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %72 = cast(%var_11663, dtype="int16") /* ty=Tensor[(12, 84), int16] */;
  %73 = reshape(%71, newshape=[]) /* ty=int16 */;
  %74 = reshape(%72, newshape=[1008]) /* ty=Tensor[(1008), int16] */;
  %75 = @func_8876(%73, %74) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16]) */;
  %76 = multiply(%69, %70) /* ty=Tensor[(5, 10, 5), uint32] */;
  %77 = %75.2;
  (%76, %77, meta[relay.Constant][2] /* ty=int16 */, %var_11663)
}

def @func_4728() -> (Tensor[(10, 4, 16), float64],) {
  @func_4726() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_7187(%var_7185: Tensor[(10, 6, 15), float64]) -> (Tensor[(10, 6, 15), float64], Tensor[(10, 4, 16), int64]) {
  @func_7184(%var_7185) /* ty=(Tensor[(10, 6, 15), float64], Tensor[(10, 4, 16), int64]) */
}

def @func_5784() -> Tensor[(10, 4, 16), float64] {
  @func_5782() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_3809(%var_3807: Tensor[(16, 5, 4), int64], %var_3808: Tensor[(16, 5, 4), int64]) -> (Tensor[(16, 5, 4), int64],) {
  %83 = fn (%var_3800: Tensor[(16, 5, 4), int64], %var_3801: Tensor[(16, 5, 4), int64]) -> (Tensor[(16, 5, 4), int64],) {
    %78 = cast(%var_3801, dtype="int64") /* ty=Tensor[(16, 5, 4), int64] */;
    %79 = shape_of(%var_3800, dtype="int32") /* ty=Tensor[(3), int32] */;
    %80 = cast(%var_3800, dtype="int64") /* ty=Tensor[(16, 5, 4), int64] */;
    %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %82 = bitwise_or(%80, %81) /* ty=Tensor[(16, 5, 4), int64] */;
    (%82,)
  };
  %83(%var_3807, %var_3808) /* ty=(Tensor[(16, 5, 4), int64],) */
}

def @func_11177(%var_11149: Tensor[(81), float64]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(81), bool], Tensor[(10, 4, 16), int64], Tensor[(90, 10), float64], Tensor[(5, 13, 13), int64], Tensor[(845), int64], Tensor[(10, 4, 16), int64], Tensor[(2, 504), int16], int16) {
  %84 = @func_9037() /* ty=(Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64], Tensor[(6, 18), float32]) */;
  %85 = @func_4596() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), int64]) */;
  %86 = @func_3174() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) */;
  %87 = %86.2;
  %88 = cast(%var_11149, dtype="bool") /* ty=Tensor[(81), bool] */;
  %89 = shape_of(%87, dtype="int32") /* ty=Tensor[(1), int32] */;
  %90 = cast(%87, dtype="bool") /* ty=Tensor[(81), bool] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?), bool] */;
  %92 = cast(meta[relay.Constant][3] /* ty=Tensor[(90, 10), float64] */, dtype="float64") /* ty=Tensor[(90, 10), float64] */;
  %93 = reshape(%92, newshape=[900]) /* ty=Tensor[(900), float64] */;
  %94 = @func_8198(%93) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(900), float64]) */;
  %95 = cast(meta[relay.Constant][4] /* ty=Tensor[(845), int64] */, dtype="int64") /* ty=Tensor[(845), int64] */;
  %96 = reshape(%95, newshape=[5, 13, 13]) /* ty=Tensor[(5, 13, 13), int64] */;
  %97 = @func_5356(%96) /* ty=(Tensor[(5, 13, 13), int64],) */;
  %98 = @func_2213() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(10, 4, 16), float64]) */;
  %99 = cast(meta[relay.Constant][5] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %100 = reshape(%99, newshape=[]) /* ty=int16 */;
  %101 = @func_9970(%100) /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(9, 9), float64], Tensor[(2, 504), int16], Tensor[(1, 9, 9), int64]) */;
  %102 = %84.1;
  %103 = %85.1;
  %104 = equal(%90, %91) /* ty=Tensor[(81), bool] */;
  %105 = %94.1;
  %106 = %97.0;
  %107 = %98.1;
  %108 = %101.2;
  (%102, %103, %104, %105, meta[relay.Constant][3] /* ty=Tensor[(90, 10), float64] */, %106, meta[relay.Constant][4] /* ty=Tensor[(845), int64] */, %107, %108, meta[relay.Constant][5] /* ty=int16 */)
}

def @func_1583() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  @func_1581() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_402() -> (Tensor[(10, 4, 16), float64],) {
  %110 = fn () -> (Tensor[(10, 4, 16), float64],) {
    %109 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
    (%109,)
  };
  %110() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_7322(%var_7312: Tensor[(12, 15, 11), float32], %var_7313: Tensor[(12, 15, 11), float32]) -> (Tensor[(12, 15, 11), bool], Tensor[(12, 15, 11), float64]) {
  %111 = cast(%var_7313, dtype="bool") /* ty=Tensor[(12, 15, 11), bool] */;
  %112 = shape_of(%var_7312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%var_7312, dtype="bool") /* ty=Tensor[(12, 15, 11), bool] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %115 = cast(%var_7313, dtype="float64") /* ty=Tensor[(12, 15, 11), float64] */;
  %116 = greater(%113, %114) /* ty=Tensor[(12, 15, 11), bool] */;
  %117 = sinh(%115) /* ty=Tensor[(12, 15, 11), float64] */;
  (%116, %117)
}

def @func_12148() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  @func_12146() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_4950() -> (Tensor[(10, 4, 16), float64],) {
  @func_4948() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_4103(%var_4101: Tensor[(7, 9, 9), int64], %var_4102: Tensor[(7, 9, 9), int64]) -> (Tensor[(7, 9, 9), bool], Tensor[(7, 9, 9), float64]) {
  %125 = fn (%var_4062: Tensor[(7, 9, 9), int64], %var_4063: Tensor[(7, 9, 9), int64]) -> (Tensor[(7, 9, 9), bool], Tensor[(7, 9, 9), float64]) {
    %118 = cast(%var_4063, dtype="bool") /* ty=Tensor[(7, 9, 9), bool] */;
    %119 = shape_of(%var_4062, dtype="int32") /* ty=Tensor[(3), int32] */;
    %120 = cast(%var_4062, dtype="bool") /* ty=Tensor[(7, 9, 9), bool] */;
    %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %122 = cast(%var_4062, dtype="float64") /* ty=Tensor[(7, 9, 9), float64] */;
    %123 = less_equal(%120, %121) /* ty=Tensor[(7, 9, 9), bool] */;
    %124 = asin(%122) /* ty=Tensor[(7, 9, 9), float64] */;
    (%123, %124)
  };
  %125(%var_4101, %var_4102) /* ty=(Tensor[(7, 9, 9), bool], Tensor[(7, 9, 9), float64]) */
}

def @func_11944() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  @func_11942() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_11366() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %132 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
    %126 = @func_11225() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
    %127 = @func_4922() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %128 = @func_7225() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %129 = %126.1;
    %130 = %127.0;
    %131 = %128.0;
    (%129, %130, %131)
  };
  %132() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_3652() -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %139 = fn () -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
    %133 = @func_2115() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1008), int16], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
    %134 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %135 = @func_1247() /* ty=(Tensor[(10, 4, 16), bool],) */;
    %136 = %133.5;
    %137 = %134.1;
    %138 = %135.0;
    (%136, %137, %138)
  };
  %139() /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */
}

def @func_2958(%var_2957: Tensor[(81), float64]) -> (Tensor[(10, 4, 16), bool], Tensor[(81), uint16], Tensor[(81), float64]) {
  %151 = fn (%var_2927: Tensor[(81), float64]) -> (Tensor[(10, 4, 16), bool], Tensor[(81), uint16], Tensor[(81), float64]) {
    %140 = cast(%var_2927, dtype="float64") /* ty=Tensor[(81), float64] */;
    %141 = reshape(%140, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float64] */;
    %142 = @func_1459(%141) /* ty=Tensor[(1, 9, 9), float64] */;
    %143 = cast(%142, dtype="uint16") /* ty=Tensor[(1, 9, 9), uint16] */;
    %144 = shape_of(%var_2927, dtype="int32") /* ty=Tensor[(1), int32] */;
    %145 = cast(%var_2927, dtype="uint16") /* ty=Tensor[(81), uint16] */;
    %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %147 = cast(%var_2927, dtype="float64") /* ty=Tensor[(81), float64] */;
    %148 = @func_2231() /* ty=Tensor[(10, 4, 16), bool] */;
    %149 = bitwise_xor(%145, %146) /* ty=Tensor[(81), uint16] */;
    %150 = sinh(%147) /* ty=Tensor[(81), float64] */;
    (%148, %149, %150)
  };
  %151(%var_2957) /* ty=(Tensor[(10, 4, 16), bool], Tensor[(81), uint16], Tensor[(81), float64]) */
}

def @func_3499() -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) {
  %152 = @func_1247() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %153 = @func_3293() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %154 = @func_2998() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), bool]) */;
  %155 = @func_1165() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
  %156 = %152.0;
  %157 = %153.0;
  %158 = %154.1;
  %159 = %155.1;
  (%156, %157, %158, %159)
}

def @func_9089(%var_9084: Tensor[(11, 4, 12), float32]) -> (Tensor[(11, 4, 12), float32],) {
  %160 = cast(%var_9084, dtype="float32") /* ty=Tensor[(11, 4, 12), float32] */;
  %161 = sigmoid(%160) /* ty=Tensor[(11, 4, 12), float32] */;
  (%161,)
}

def @func_6932(%var_6912: Tensor[(108), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(4, 9, 3), float32], Tensor[(108), float32]) {
  %162 = cast(%var_6912, dtype="float32") /* ty=Tensor[(108), float32] */;
  %163 = reshape(%162, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %164 = @func_3794(%163) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(10, 4, 16), float64]) */;
  %165 = @func_3706() /* ty=Tensor[(10, 4, 16), float64] */;
  %166 = %164.0;
  (%165, %166, %var_6912)
}

def @func_6861(%var_6859: Tensor[(9, 11, 15), uint8], %var_6860: Tensor[(9, 11, 15), uint8]) -> (Tensor[(9, 11, 15), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %180 = fn (%var_6821: Tensor[(9, 11, 15), uint8], %var_6822: Tensor[(9, 11, 15), uint8]) -> (Tensor[(9, 11, 15), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
    %167 = cast(%var_6822, dtype="bool") /* ty=Tensor[(9, 11, 15), bool] */;
    %168 = shape_of(%var_6821, dtype="int32") /* ty=Tensor[(3), int32] */;
    %169 = cast(%var_6821, dtype="bool") /* ty=Tensor[(9, 11, 15), bool] */;
    %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %171 = less(%169, %170) /* ty=Tensor[(9, 11, 15), bool] */;
    %172 = cast(%171, dtype="float64") /* ty=Tensor[(9, 11, 15), float64] */;
    %173 = shape_of(%var_6822, dtype="int32") /* ty=Tensor[(3), int32] */;
    %174 = cast(%var_6822, dtype="float64") /* ty=Tensor[(9, 11, 15), float64] */;
    %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %176 = @func_1423() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %177 = floor_divide(%174, %175) /* ty=Tensor[(9, 11, 15), float64] */;
    %178 = @func_4433() /* ty=Tensor[(10, 4, 16), float64] */;
    %179 = %176.0;
    (%177, %178, %179)
  };
  %180(%var_6859, %var_6860) /* ty=(Tensor[(9, 11, 15), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_7501(%var_7368: Tensor[(1, 320), int64], %var_7440: Tensor[(1680), int8], %var_7468: Tensor[(72), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(16, 5, 4), int64], Tensor[(1, 320), int64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(5, 13, 13), int64], Tensor[(845), int64], Tensor[(10, 4, 16), float64], Tensor[(1680), int64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1008), int16], Tensor[(72), float32]) {
  %181 = cast(%var_7368, dtype="int64") /* ty=Tensor[(1, 320), int64] */;
  %182 = cast(%var_7368, dtype="int64") /* ty=Tensor[(1, 320), int64] */;
  %183 = reshape(%181, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), int64] */;
  %184 = reshape(%182, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), int64] */;
  %185 = @func_3806(%183, %184) /* ty=(Tensor[(16, 5, 4), int64],) */;
  %186 = cast(meta[relay.Constant][6] /* ty=Tensor[(1680), int8] */, dtype="int8") /* ty=Tensor[(1680), int8] */;
  %187 = @func_3859() /* ty=Tensor[(10, 4, 16), float64] */;
  %188 = cast(%187, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %189 = reshape(%186, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), int8] */;
  %190 = reshape(%188, newshape=[160, 4]) /* ty=Tensor[(160, 4), float64] */;
  %191 = @func_4311(%189, %190) /* ty=(Tensor[(12, 10, 14), float32], Tensor[(10, 4, 16), bool], Tensor[(160, 4), float64], Tensor[(10, 4, 16), float64]) */;
  %192 = @func_6277() /* ty=(Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %193 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %194 = @func_6004() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %195 = cast(meta[relay.Constant][7] /* ty=Tensor[(845), int64] */, dtype="int64") /* ty=Tensor[(845), int64] */;
  %196 = reshape(%195, newshape=[5, 13, 13]) /* ty=Tensor[(5, 13, 13), int64] */;
  %197 = @func_5356(%196) /* ty=(Tensor[(5, 13, 13), int64],) */;
  %198 = cast(%var_7440, dtype="bool") /* ty=Tensor[(1680), bool] */;
  %199 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(1680), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %200 = cast(meta[relay.Constant][6] /* ty=Tensor[(1680), int8] */, dtype="bool") /* ty=Tensor[(1680), bool] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?), bool] */;
  %202 = equal(%200, %201) /* ty=Tensor[(1680), bool] */;
  %203 = cast(%var_7440, dtype="int64") /* ty=Tensor[(1680), int64] */;
  %204 = shape_of(%202, dtype="int32") /* ty=Tensor[(1), int32] */;
  %205 = cast(%202, dtype="int64") /* ty=Tensor[(1680), int64] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?), int64] */;
  %207 = @func_2864() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %208 = cast(meta[relay.Constant][8] /* ty=Tensor[(1008), int16] */, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %209 = cast(%var_7468, dtype="float32") /* ty=Tensor[(72), float32] */;
  %210 = reshape(%208, newshape=[1008]) /* ty=Tensor[(1008), int16] */;
  %211 = reshape(%209, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %212 = @func_2762(%210, %211) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(72), float32]) */;
  %213 = %185.0;
  %214 = %191.3;
  %215 = %192.1;
  %216 = %193.0;
  %217 = %194.0;
  %218 = %197.0;
  %219 = @func_4216() /* ty=Tensor[(10, 4, 16), float64] */;
  %220 = add(%205, %206) /* ty=Tensor[(1680), int64] */;
  %221 = %207.0;
  %222 = %212.1;
  (%187, %213, %var_7368, %214, %215, %216, %217, %218, meta[relay.Constant][7] /* ty=Tensor[(845), int64] */, %219, %220, %221, %222, meta[relay.Constant][8] /* ty=Tensor[(1008), int16] */, %var_7468)
}

def @func_11776(%var_11775: Tensor[(2, 2, 11), float64]) -> Tensor[(2, 2, 11), float64] {
  %224 = fn (%var_11771: Tensor[(2, 2, 11), float64]) -> Tensor[(2, 2, 11), float64] {
    %223 = cast(%var_11771, dtype="float64") /* ty=Tensor[(2, 2, 11), float64] */;
    cos(%223) /* ty=Tensor[(2, 2, 11), float64] */
  };
  %224(%var_11775) /* ty=Tensor[(2, 2, 11), float64] */
}

def @func_7582() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) {
  %225 = @func_4726() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %226 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %227 = @func_3140() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %228 = %225.0;
  %229 = %226.0;
  %230 = %227.4;
  (%228, %229, %230)
}

def @func_7584() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) {
  @func_7582() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */
}

def @func_1510() -> (Tensor[(10, 4, 16), float64],) {
  @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_8978() -> (Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), bool], Tensor[(900), float64], Tensor[(900), float64]) {
  @func_8976() /* ty=(Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), bool], Tensor[(900), float64], Tensor[(900), float64]) */
}

def @func_2018(%var_2015: bool, %var_2016: Tensor[(16, 10, 3), bool], %var_2017: Tensor[(81, 1), float64]) -> (Tensor[(10, 4, 16), float64], Tensor[(16, 10, 3), int32], Tensor[(81, 1), float64], Tensor[(1, 9, 9), uint64]) {
  %249 = fn (%var_1978: bool, %var_1979: Tensor[(16, 10, 3), bool], %var_2006: Tensor[(81, 1), float64]) -> (Tensor[(10, 4, 16), float64], Tensor[(16, 10, 3), int32], Tensor[(81, 1), float64], Tensor[(1, 9, 9), uint64]) {
    %231 = @func_1423() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %232 = cast(%var_1979, dtype="float32") /* ty=Tensor[(16, 10, 3), float32] */;
    %233 = rsqrt(%232) /* ty=Tensor[(16, 10, 3), float32] */;
    %234 = cast(%var_1978, dtype="bool") /* ty=bool */;
    %235 = cast(%var_1979, dtype="bool") /* ty=Tensor[(16, 10, 3), bool] */;
    %236 = logical_and(%234, %235) /* ty=Tensor[(16, 10, 3), bool] */;
    %237 = cast(%236, dtype="int32") /* ty=Tensor[(16, 10, 3), int32] */;
    %238 = shape_of(%233, dtype="int32") /* ty=Tensor[(3), int32] */;
    %239 = cast(%233, dtype="int32") /* ty=Tensor[(16, 10, 3), int32] */;
    %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %241 = cast(%var_2006, dtype="float64") /* ty=Tensor[(81, 1), float64] */;
    %242 = reshape(%241, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float64] */;
    %243 = @func_1459(%242) /* ty=Tensor[(1, 9, 9), float64] */;
    %244 = cast(%243, dtype="uint64") /* ty=Tensor[(1, 9, 9), uint64] */;
    %245 = cast(%var_1978, dtype="uint64") /* ty=uint64 */;
    %246 = %231.0;
    %247 = maximum(%239, %240) /* ty=Tensor[(16, 10, 3), int32] */;
    %248 = bitwise_and(%244, %245) /* ty=Tensor[(1, 9, 9), uint64] */;
    (%246, %247, %var_2006, %248)
  };
  %249(%var_2015, %var_2016, %var_2017) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(16, 10, 3), int32], Tensor[(81, 1), float64], Tensor[(1, 9, 9), uint64]) */
}

def @func_10574(%var_10572: Tensor[(8, 4, 5), uint8], %var_10573: Tensor[(8, 4, 5), uint8]) -> (Tensor[(8, 4, 5), uint8], Tensor[(10, 4, 16), float64]) {
  %257 = fn (%var_10546: Tensor[(8, 4, 5), uint8], %var_10547: Tensor[(8, 4, 5), uint8]) -> (Tensor[(8, 4, 5), uint8], Tensor[(10, 4, 16), float64]) {
    %250 = cast(%var_10547, dtype="uint8") /* ty=Tensor[(8, 4, 5), uint8] */;
    %251 = shape_of(%var_10546, dtype="int32") /* ty=Tensor[(3), int32] */;
    %252 = cast(%var_10546, dtype="uint8") /* ty=Tensor[(8, 4, 5), uint8] */;
    %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %254 = @func_4846() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %255 = subtract(%252, %253) /* ty=Tensor[(8, 4, 5), uint8] */;
    %256 = %254.2;
    (%255, %256)
  };
  %257(%var_10572, %var_10573) /* ty=(Tensor[(8, 4, 5), uint8], Tensor[(10, 4, 16), float64]) */
}

def @func_1119(%var_1117: Tensor[(10, 4, 16), bool], %var_1118: Tensor[(10, 4, 16), float32]) -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %290 = fn (%var_994: Tensor[(10, 4, 16), bool], %var_1074: Tensor[(10, 4, 16), float32]) -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
    %258 = @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
    %259 = %258.1;
    %260 = cast(%var_994, dtype="float32") /* ty=Tensor[(10, 4, 16), float32] */;
    %261 = shape_of(%259, dtype="int32") /* ty=Tensor[(3), int32] */;
    %262 = cast(%259, dtype="float32") /* ty=Tensor[(10, 4, 16), float32] */;
    %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %264 = divide(%262, %263) /* ty=Tensor[(10, 4, 16), float32] */;
    %265 = cast(%264, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
    %266 = shape_of(%259, dtype="int32") /* ty=Tensor[(3), int32] */;
    %267 = cast(%259, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
    %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %269 = mod(%267, %268) /* ty=Tensor[(10, 4, 16), float64] */;
    %270 = cast(%269, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
    %271 = shape_of(%var_994, dtype="int32") /* ty=Tensor[(3), int32] */;
    %272 = cast(%var_994, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
    %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %274 = cast(%264, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
    %275 = reshape(%274, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
    %276 = @func_551(%275) /* ty=(Tensor[(10, 4, 16), bool],) */;
    %277 = @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
    %278 = cast(%var_1074, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
    %279 = shape_of(%264, dtype="int32") /* ty=Tensor[(3), int32] */;
    %280 = cast(%264, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
    %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %282 = @func_758() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), bool]) */;
    %283 = @func_758() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), bool]) */;
    %284 = logical_and(%272, %273) /* ty=Tensor[(10, 4, 16), bool] */;
    %285 = %276.0;
    %286 = %277.0;
    %287 = less(%280, %281) /* ty=Tensor[(10, 4, 16), bool] */;
    %288 = %282.1;
    %289 = %283.1;
    (%284, %285, %286, %287, %288, %289)
  };
  %290(%var_1117, %var_1118) /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_1903(%var_1882: int16, %var_1883: Tensor[(1008), int16]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64]) {
  %291 = cast(%var_1882, dtype="int16") /* ty=int16 */;
  %292 = cast(%var_1883, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %293 = reshape(%291, newshape=[]) /* ty=int16 */;
  %294 = reshape(%292, newshape=[7, 16, 9]) /* ty=Tensor[(7, 16, 9), int16] */;
  %295 = @func_1679(%293, %294) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %296 = cast(%var_1882, dtype="int16") /* ty=int16 */;
  %297 = cast(%var_1883, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %298 = reshape(%296, newshape=[]) /* ty=int16 */;
  %299 = reshape(%297, newshape=[7, 16, 9]) /* ty=Tensor[(7, 16, 9), int16] */;
  %300 = @func_1679(%298, %299) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %301 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %302 = %295.2;
  %303 = %300.2;
  (%301, %302, %var_1882, %var_1883, %303)
}

def @func_4496() -> (Tensor[(10, 4, 16), float64],) {
  @func_4494() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_5838(%var_5836: Tensor[(5, 9, 1), float32], %var_5837: Tensor[(5, 9, 14), float32]) -> (Tensor[(5, 9, 14), bool], Tensor[(10, 4, 16), float64]) {
  @func_5834(%var_5836, %var_5837) /* ty=(Tensor[(5, 9, 14), bool], Tensor[(10, 4, 16), float64]) */
}

def @func_7753() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float32]) {
  @func_7751() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float32]) */
}

def @func_6154() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %308 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
    %304 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %305 = @func_2213() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(10, 4, 16), float64]) */;
    %306 = %304.0;
    %307 = %305.0;
    (%306, %307)
  };
  %308() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_5672() -> (Tensor[(10, 4, 16), float64], Tensor[(5, 12, ?), bool], Tensor[(5, 12, 1), float32], Tensor[(10, 4, 16), bool]) {
  %328 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(5, 12, ?), bool], Tensor[(5, 12, 1), float32], Tensor[(10, 4, 16), bool]) {
    %309 = @func_3375() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %310 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 12, 1), float64] */, dtype="float64") /* ty=Tensor[(5, 12, 1), float64] */;
    %311 = sinh(%310) /* ty=Tensor[(5, 12, 1), float64] */;
    %312 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 12, 1), float64] */, dtype="float32") /* ty=Tensor[(5, 12, 1), float32] */;
    %313 = asinh(%312) /* ty=Tensor[(5, 12, 1), float32] */;
    %314 = cast(%313, dtype="bool") /* ty=Tensor[(5, 12, 1), bool] */;
    %315 = shape_of(%311, dtype="int32") /* ty=Tensor[(3), int32] */;
    %316 = cast(%311, dtype="bool") /* ty=Tensor[(5, 12, 1), bool] */;
    %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %318 = cast(%311, dtype="float32") /* ty=Tensor[(5, 12, 1), float32] */;
    %319 = acos(%318) /* ty=Tensor[(5, 12, 1), float32] */;
    %320 = cast(%319, dtype="float32") /* ty=Tensor[(5, 12, 1), float32] */;
    %321 = %309.1;
    %322 = cast(%321, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
    %323 = reshape(%322, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
    %324 = @func_3593(%323) /* ty=(Tensor[(10, 4, 16), bool],) */;
    %325 = equal(%316, %317) /* ty=Tensor[(5, 12, ?), bool] */;
    %326 = rsqrt(%320) /* ty=Tensor[(5, 12, 1), float32] */;
    %327 = %324.0;
    (%321, %325, %326, %327)
  };
  %328() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(5, 12, ?), bool], Tensor[(5, 12, 1), float32], Tensor[(10, 4, 16), bool]) */
}

def @func_10087() -> (Tensor[(10, 4, 16), float64],) {
  %329 = @func_4216() /* ty=Tensor[(10, 4, 16), float64] */;
  (%329,)
}

def @func_9703() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64]) {
  %336 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64]) {
    %330 = @func_3978() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %331 = @func_4948() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %332 = @func_3850() /* ty=(Tensor[(10, 4, 16), int64],) */;
    %333 = %330.0;
    %334 = %331.0;
    %335 = %332.0;
    (%333, %334, %335)
  };
  %336() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64]) */
}

def @func_4414() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %343 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
    %337 = @func_3978() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %338 = @func_3914() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %339 = @func_3202() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %340 = %337.0;
    %341 = %338.1;
    %342 = %339.1;
    (%340, %341, %342)
  };
  %343() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_6462() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  @func_6460() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_4847() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %350 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
    %344 = @func_3293() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %345 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %346 = @func_3202() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %347 = %344.0;
    %348 = %345.0;
    %349 = %346.0;
    (%347, %348, %349)
  };
  %350() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_11180(%var_11178: Tensor[(81), float64]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(81), bool], Tensor[(10, 4, 16), int64], Tensor[(90, 10), float64], Tensor[(5, 13, 13), int64], Tensor[(845), int64], Tensor[(10, 4, 16), int64], Tensor[(2, 504), int16], int16) {
  @func_11177(%var_11178) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(81), bool], Tensor[(10, 4, 16), int64], Tensor[(90, 10), float64], Tensor[(5, 13, 13), int64], Tensor[(845), int64], Tensor[(10, 4, 16), int64], Tensor[(2, 504), int16], int16) */
}

def @func_12146() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %351 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %352 = @func_6004() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %353 = %351.1;
  %354 = %352.0;
  (%353, %354)
}

def @func_3861() -> Tensor[(10, 4, 16), float64] {
  @func_3859() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_9973(%var_9971: int16) -> (Tensor[(10, 4, 16), uint16], Tensor[(9, 9), float64], Tensor[(2, 504), int16], Tensor[(1, 9, 9), int64]) {
  @func_9970(%var_9971) /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(9, 9), float64], Tensor[(2, 504), int16], Tensor[(1, 9, 9), int64]) */
}

def @func_7888(%var_7887: Tensor[(320), int64]) -> (Tensor[(10, 4, 16), float64], Tensor[(16, 5, 4), int64], Tensor[(320), int64]) {
  %363 = fn (%var_7883: Tensor[(320), int64]) -> (Tensor[(10, 4, 16), float64], Tensor[(16, 5, 4), int64], Tensor[(320), int64]) {
    %355 = @func_3978() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %356 = cast(%var_7883, dtype="int64") /* ty=Tensor[(320), int64] */;
    %357 = cast(%var_7883, dtype="int64") /* ty=Tensor[(320), int64] */;
    %358 = reshape(%356, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), int64] */;
    %359 = reshape(%357, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), int64] */;
    %360 = @func_3806(%358, %359) /* ty=(Tensor[(16, 5, 4), int64],) */;
    %361 = %355.0;
    %362 = %360.0;
    (%361, %362, %var_7883)
  };
  %363(%var_7887) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(16, 5, 4), int64], Tensor[(320), int64]) */
}

def @func_10046() -> (Tensor[(10, 4, 16), bool],) {
  @func_10044() /* ty=(Tensor[(10, 4, 16), bool],) */
}

def @func_1679(%var_1634: int16, %var_1635: Tensor[(7, 16, 9), int16]) -> (Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) {
  %364 = @func_1581() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %365 = cast(%var_1634, dtype="int16") /* ty=int16 */;
  %366 = cast(%var_1635, dtype="int16") /* ty=Tensor[(7, 16, 9), int16] */;
  %367 = multiply(%365, %366) /* ty=Tensor[(7, 16, 9), int16] */;
  %368 = cast(%var_1635, dtype="int8") /* ty=Tensor[(7, 16, 9), int8] */;
  %369 = shape_of(%367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%367, dtype="int8") /* ty=Tensor[(7, 16, 9), int8] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %372 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %373 = %372.0;
  %374 = cast(%373, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %375 = reshape(%374, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %376 = @func_1581() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %377 = %364.0;
  %378 = left_shift(%370, %371) /* ty=Tensor[(7, 16, 9), int8] */;
  %379 = @func_273(%375) /* ty=Tensor[(10, 4, 16), int8] */;
  %380 = %376.1;
  (%377, %378, %373, %379, %380)
}

def @func_9648() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  @func_9646() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_10629(%var_10588: Tensor[(8, 4, 7), int64], %var_10593: Tensor[(54, 2), float32]) -> (Tensor[(8, 4, 7), int64], Tensor[(10, 4, 16), float64], Tensor[(54, 2), float32], Tensor[(10, 4, 16), bool]) {
  %381 = cast(%var_10588, dtype="int64") /* ty=Tensor[(8, 4, 7), int64] */;
  %382 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(8, 4, 7), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %383 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 4, 7), int64] */, dtype="int64") /* ty=Tensor[(8, 4, 7), int64] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %385 = cast(%var_10593, dtype="float32") /* ty=Tensor[(54, 2), float32] */;
  %386 = reshape(%385, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %387 = @func_9824(%386) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(108), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
  %388 = %387.1;
  %389 = cast(%388, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %390 = reshape(%389, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %391 = @func_3593(%390) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %392 = minimum(%383, %384) /* ty=Tensor[(8, 4, 7), int64] */;
  %393 = %391.0;
  (%392, %388, %var_10593, %393)
}

def @func_8976() -> (Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), bool], Tensor[(900), float64], Tensor[(900), float64]) {
  %394 = @func_4261() /* ty=(Tensor[(10, 4, 16), float32],) */;
  %395 = %394.0;
  %396 = cast(%395, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %397 = cast(%395, dtype="float32") /* ty=Tensor[(10, 4, 16), float32] */;
  %398 = reshape(%396, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), bool] */;
  %399 = reshape(%397, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float32] */;
  %400 = @func_1116(%398, %399) /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %401 = cast(meta[relay.Constant][11] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
  %402 = reshape(%401, newshape=[900]) /* ty=Tensor[(900), float64] */;
  %403 = @func_8198(%402) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(900), float64]) */;
  %404 = %400.0;
  %405 = %403.2;
  (%395, %404, %405, meta[relay.Constant][11] /* ty=Tensor[(900), float64] */)
}

def @func_3759() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %408 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
    %406 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
    %407 = @func_2231() /* ty=Tensor[(10, 4, 16), bool] */;
    (%406, %407)
  };
  %408() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */
}

def @func_8467(%var_8464: Tensor[(1, 7, 5), bool], %var_8465: Tensor[(2, 7, 5), bool], %var_8466: Tensor[(1344), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1344), float32], Tensor[(10, 4, 16), float64], Tensor[(2, 7, 5), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %427 = fn (%var_8343: Tensor[(1, 7, 5), bool], %var_8344: Tensor[(2, 7, 5), bool], %var_8372: Tensor[(1344), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1344), float32], Tensor[(10, 4, 16), float64], Tensor[(2, 7, 5), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
    %409 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %410 = cast(%var_8372, dtype="float32") /* ty=Tensor[(1344), float32] */;
    %411 = reshape(%410, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), float32] */;
    %412 = @func_4774(%411) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(12, 14, 8), float64]) */;
    %413 = @func_7672() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
    %414 = cast(%var_8343, dtype="bool") /* ty=Tensor[(1, 7, 5), bool] */;
    %415 = cast(%var_8344, dtype="bool") /* ty=Tensor[(2, 7, 5), bool] */;
    %416 = logical_and(%414, %415) /* ty=Tensor[(2, 7, 5), bool] */;
    %417 = cast(%416, dtype="float32") /* ty=Tensor[(2, 7, 5), float32] */;
    %418 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %419 = @func_4494() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %420 = %409.0;
    %421 = %412.0;
    %422 = %413.0;
    %423 = erf(%417) /* ty=Tensor[(2, 7, 5), float32] */;
    %424 = @func_3859() /* ty=Tensor[(10, 4, 16), float64] */;
    %425 = %418.0;
    %426 = %419.0;
    (%420, %421, %var_8372, %422, %423, %424, %425, %426)
  };
  %427(%var_8464, %var_8465, %var_8466) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1344), float32], Tensor[(10, 4, 16), float64], Tensor[(2, 7, 5), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_7035(%var_6993: Tensor[(7, 7, 7), float32], %var_7025: Tensor[(7, 7, 7), uint64]) -> (Tensor[(7, 7, 7), int16], Tensor[(10, 4, 16), float64], Tensor[(7, 7, 7), float64]) {
  %428 = cast(%var_6993, dtype="float32") /* ty=Tensor[(7, 7, 7), float32] */;
  %429 = exp(%428) /* ty=Tensor[(7, 7, 7), float32] */;
  %430 = cast(%var_6993, dtype="uint64") /* ty=Tensor[(7, 7, 7), uint64] */;
  %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%429, dtype="uint64") /* ty=Tensor[(7, 7, 7), uint64] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %434 = maximum(%432, %433) /* ty=Tensor[(7, 7, 7), uint64] */;
  %435 = cast(%434, dtype="int16") /* ty=Tensor[(7, 7, 7), int16] */;
  %436 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %437 = cast(%429, dtype="int16") /* ty=Tensor[(7, 7, 7), int16] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %439 = @func_3375() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %440 = cast(%var_7025, dtype="float64") /* ty=Tensor[(7, 7, 7), float64] */;
  %441 = shape_of(%434, dtype="int32") /* ty=Tensor[(3), int32] */;
  %442 = cast(%434, dtype="float64") /* ty=Tensor[(7, 7, 7), float64] */;
  %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %444 = right_shift(%437, %438) /* ty=Tensor[(7, 7, 7), int16] */;
  %445 = %439.3;
  %446 = divide(%442, %443) /* ty=Tensor[(7, 7, 7), float64] */;
  (%444, %445, %446)
}

def @func_5259() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %451 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
    %447 = @func_4846() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %448 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %449 = %447.1;
    %450 = %448.0;
    (%449, %450)
  };
  %451() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_10520() -> (Tensor[(10, 4, 16), float64],) {
  %454 = fn () -> (Tensor[(10, 4, 16), float64],) {
    %452 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %453 = %452.1;
    (%453,)
  };
  %454() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_1618(%var_1617: Tensor[(6, 2, 6), float32]) -> (Tensor[(6, 2, 6), float32], Tensor[(10, 4, 16), float64]) {
  %462 = fn (%var_1593: Tensor[(6, 2, 6), float32]) -> (Tensor[(6, 2, 6), float32], Tensor[(10, 4, 16), float64]) {
    %455 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 2, 6), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 6), float32] */;
    %456 = shape_of(%var_1593, dtype="int32") /* ty=Tensor[(3), int32] */;
    %457 = cast(%var_1593, dtype="float32") /* ty=Tensor[(6, 2, 6), float32] */;
    %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %459 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %460 = divide(%457, %458) /* ty=Tensor[(6, 2, 6), float32] */;
    %461 = %459.0;
    (%460, %461)
  };
  %462(%var_1617) /* ty=(Tensor[(6, 2, 6), float32], Tensor[(10, 4, 16), float64]) */
}

def @func_5358(%var_5357: Tensor[(5, 13, 13), int64]) -> (Tensor[(5, 13, 13), int64],) {
  %468 = fn (%var_5332: Tensor[(5, 13, 13), int64]) -> (Tensor[(5, 13, 13), int64],) {
    %463 = cast(%var_5332, dtype="int64") /* ty=Tensor[(5, 13, 13), int64] */;
    %464 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(5, 13, 13), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %465 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 13, 13), int64] */, dtype="int64") /* ty=Tensor[(5, 13, 13), int64] */;
    %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %467 = add(%465, %466) /* ty=Tensor[(5, 13, 13), int64] */;
    (%467,)
  };
  %468(%var_5357) /* ty=(Tensor[(5, 13, 13), int64],) */
}

def @func_9939(%var_9937: Tensor[(845), int64]) -> (Tensor[(10, 4, 16), float64], Tensor[(5, 13, 13), int64], Tensor[(845), int64]) {
  @func_9936(%var_9937) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(5, 13, 13), int64], Tensor[(845), int64]) */
}

def @func_7326(%var_7324: Tensor[(12, 15, 11), float32], %var_7325: Tensor[(12, 15, 11), float32]) -> (Tensor[(12, 15, 11), bool], Tensor[(12, 15, 11), float64]) {
  @func_7322(%var_7324, %var_7325) /* ty=(Tensor[(12, 15, 11), bool], Tensor[(12, 15, 11), float64]) */
}

def @func_4217() -> Tensor[(10, 4, 16), float64] {
  %469 = fn () -> Tensor[(10, 4, 16), float64] {
    @func_3859() /* ty=Tensor[(10, 4, 16), float64] */
  };
  %469() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_3593(%var_3586: Tensor[(10, 4, 16), float64]) -> (Tensor[(10, 4, 16), bool],) {
  %470 = @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %471 = %470.0;
  %472 = cast(%var_3586, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %473 = shape_of(%471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%471, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %476 = not_equal(%474, %475) /* ty=Tensor[(10, 4, 16), bool] */;
  (%476,)
}

def @func_8537() -> Tensor[(10, 4, 16), float64] {
  %477 = @func_7582() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
  %477.1
}

def @func_9114() -> (Tensor[(10, 4, 16), float64],) {
  %479 = fn () -> (Tensor[(10, 4, 16), float64],) {
    %478 = @func_3883() /* ty=Tensor[(10, 4, 16), float64] */;
    (%478,)
  };
  %479() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_11562() -> (Tensor[(10, 4, 16), float64],) {
  %480 = @func_10087() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %481 = %480.0;
  (%481,)
}

def @func_11283() -> (Tensor[(10, 4, 16), float64],) {
  %484 = fn () -> (Tensor[(10, 4, 16), float64],) {
    %482 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %483 = %482.1;
    (%483,)
  };
  %484() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_6006() -> (Tensor[(10, 4, 16), float64],) {
  @func_6004() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_6693() -> (Tensor[(10, 4, 16), uint16],) {
  @func_6691() /* ty=(Tensor[(10, 4, 16), uint16],) */
}

def @func_11942() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %485 = @func_10108() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %486 = @func_8030() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %487 = %485.0;
  %488 = %486.0;
  (%487, %488)
}

def @func_6750() -> Tensor[(10, 4, 16), int64] {
  %490 = fn () -> Tensor[(10, 4, 16), int64] {
    %489 = @func_3850() /* ty=(Tensor[(10, 4, 16), int64],) */;
    %489.0
  };
  %490() /* ty=Tensor[(10, 4, 16), int64] */
}

def @func_11539() -> (Tensor[(10, 4, 16), float64],) {
  @func_11537() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_5632() -> (Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) {
  %495 = fn () -> (Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) {
    %491 = @func_2998() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), bool]) */;
    %492 = @func_3978() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %493 = %491.0;
    %494 = %492.0;
    (%493, %494)
  };
  %495() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) */
}

def @func_4433() -> Tensor[(10, 4, 16), float64] {
  %496 = @func_3305() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
  %496.0
}

def @func_10459() -> Tensor[(10, 4, 16), float64] {
  @func_10457() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_12016() -> (Tensor[(10, 4, 16), float64], Tensor[(6, 2, 6), float32], Tensor[(72), float32]) {
  %503 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(6, 2, 6), float32], Tensor[(72), float32]) {
    %497 = @func_11225() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
    %498 = cast(meta[relay.Constant][14] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %499 = reshape(%498, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %500 = @func_8679(%499) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(6, 2, 6), float32], Tensor[(72), float32]) */;
    %501 = %497.0;
    %502 = %500.3;
    (%501, %502, meta[relay.Constant][14] /* ty=Tensor[(72), float32] */)
  };
  %503() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(6, 2, 6), float32], Tensor[(72), float32]) */
}

def @func_11751() -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) {
  %504 = @func_7672() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %505 = %504.1;
  %506 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
  (%505, %506)
}

def @func_3915() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %510 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
    %507 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %508 = @func_3883() /* ty=Tensor[(10, 4, 16), float64] */;
    %509 = %507.0;
    (%508, %509)
  };
  %510() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_3294() -> (Tensor[(10, 4, 16), float64],) {
  %513 = fn () -> (Tensor[(10, 4, 16), float64],) {
    %511 = @func_2156() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %512 = %511.1;
    (%512,)
  };
  %513() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_6279() -> (Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) {
  @func_6277() /* ty=(Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */
}

def @func_2215() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(10, 4, 16), float64]) {
  @func_2213() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_1433() -> (Tensor[(10, 4, 16), float64],) {
  %516 = fn () -> (Tensor[(10, 4, 16), float64],) {
    %514 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %515 = %514.0;
    (%515,)
  };
  %516() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_12217() -> (Tensor[(10, 4, 16), float64],) {
  @func_12215() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_7673() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %523 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
    %517 = @func_2864() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %518 = %517.0;
    %519 = cast(%518, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
    %520 = reshape(%519, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
    %521 = @func_3593(%520) /* ty=(Tensor[(10, 4, 16), bool],) */;
    %522 = %521.0;
    (%518, %522)
  };
  %523() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */
}

def @func_11044() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %528 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
    %524 = @func_8162() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
    %525 = @func_10519() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %526 = %524.1;
    %527 = %525.0;
    (%526, %527)
  };
  %528() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_4252() -> Tensor[(10, 4, 16), float32] {
  %529 = @func_2715() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %530 = %529.0;
  %531 = cast(%530, dtype="float32") /* ty=Tensor[(10, 4, 16), float32] */;
  sinh(%531) /* ty=Tensor[(10, 4, 16), float32] */
}

def @func_8261() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %536 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
    %532 = @func_7751() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float32]) */;
    %533 = @func_5945() /* ty=(Tensor[(10, 4, 16), bool],) */;
    %534 = %532.0;
    %535 = %533.0;
    (%534, %535)
  };
  %536() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */
}

def @func_11294() -> (Tensor[(10, 4, 16), float64],) {
  %539 = fn () -> (Tensor[(10, 4, 16), float64],) {
    %537 = @func_6460() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %538 = %537.1;
    (%538,)
  };
  %539() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_11867() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %549 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
    %540 = @func_10519() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %541 = @func_4948() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %542 = @func_4413() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %543 = @func_7672() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
    %544 = @func_11409() /* ty=Tensor[(10, 4, 16), float64] */;
    %545 = %540.0;
    %546 = %541.0;
    %547 = %542.0;
    %548 = %543.1;
    (%544, %545, %546, %547, %548)
  };
  %549() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */
}

def @func_10025() -> Tensor[(10, 4, 16), float64] {
  @func_971() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_9646() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %550 = @func_2523() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %551 = @func_6277() /* ty=(Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %552 = @func_8030() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %553 = %550.0;
  %554 = %551.1;
  %555 = %552.0;
  (%553, %554, %555)
}

def @func_7949(%var_7948: Tensor[(5, 12, 8), bool]) -> (Tensor[(10, 4, 16), float64], Tensor[(5, 12, 8), bool]) {
  %563 = fn (%var_7922: Tensor[(5, 12, 8), bool]) -> (Tensor[(10, 4, 16), float64], Tensor[(5, 12, 8), bool]) {
    %556 = @func_4891() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %557 = @func_5671() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(5, 12, ?), bool], Tensor[(5, 12, 1), float32], Tensor[(10, 4, 16), bool]) */;
    %558 = %557.1;
    %559 = cast(%558, dtype="bool") /* ty=Tensor[(5, 12, ?), bool] */;
    %560 = cast(%var_7922, dtype="bool") /* ty=Tensor[(5, 12, 8), bool] */;
    %561 = %556.0;
    %562 = greater(%559, %560) /* ty=Tensor[(5, 12, 8), bool] */;
    (%561, %562)
  };
  %563(%var_7948) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(5, 12, 8), bool]) */
}

def @func_2634() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) {
  %564 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %565 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %566 = @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %567 = @func_2115() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1008), int16], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
  %568 = @func_758() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), bool]) */;
  %569 = %564.0;
  %570 = %565.0;
  %571 = %566.0;
  %572 = %567.5;
  %573 = %568.1;
  (%569, %570, %571, %572, %573)
}

def @func_6117(%var_6116: Tensor[(81), float64]) -> (Tensor[(10, 4, 16), float64], Tensor[(81), bool], Tensor[(81), float32]) {
  %590 = fn (%var_6092: Tensor[(81), float64]) -> (Tensor[(10, 4, 16), float64], Tensor[(81), bool], Tensor[(81), float32]) {
    %574 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %575 = @func_3174() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) */;
    %576 = %575.2;
    %577 = cast(%var_6092, dtype="bool") /* ty=Tensor[(81), bool] */;
    %578 = shape_of(%576, dtype="int32") /* ty=Tensor[(1), int32] */;
    %579 = cast(%576, dtype="bool") /* ty=Tensor[(81), bool] */;
    %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?), bool] */;
    %581 = logical_or(%579, %580) /* ty=Tensor[(81), bool] */;
    %582 = cast(%581, dtype="bool") /* ty=Tensor[(81), bool] */;
    %583 = shape_of(%576, dtype="int32") /* ty=Tensor[(1), int32] */;
    %584 = cast(%576, dtype="bool") /* ty=Tensor[(81), bool] */;
    %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?), bool] */;
    %586 = cast(%576, dtype="float32") /* ty=Tensor[(81), float32] */;
    %587 = %574.0;
    %588 = logical_and(%584, %585) /* ty=Tensor[(81), bool] */;
    %589 = sigmoid(%586) /* ty=Tensor[(81), float32] */;
    (%587, %588, %589)
  };
  %590(%var_6116) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(81), bool], Tensor[(81), float32]) */
}

def @func_4893() -> (Tensor[(10, 4, 16), float64],) {
  @func_4891() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_11671(%var_11668: Tensor[(5, 10, 5), uint32], %var_11669: Tensor[(5, 10, 5), uint32], %var_11670: Tensor[(12, 84), int16]) -> (Tensor[(5, 10, 5), uint32], Tensor[(10, 4, 16), float64], int16, Tensor[(12, 84), int16]) {
  @func_11666(%var_11668, %var_11669, %var_11670) /* ty=(Tensor[(5, 10, 5), uint32], Tensor[(10, 4, 16), float64], int16, Tensor[(12, 84), int16]) */
}

def @func_6480() -> (Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), bool], Tensor[(4, 10, 5), uint32], Tensor[(200), float32]) {
  %591 = @func_4261() /* ty=(Tensor[(10, 4, 16), float32],) */;
  %592 = cast(meta[relay.Constant][15] /* ty=Tensor[(200), float32] */, dtype="float32") /* ty=Tensor[(200), float32] */;
  %593 = reshape(%592, newshape=[4, 10, 5]) /* ty=Tensor[(4, 10, 5), float32] */;
  %594 = @func_4636(%593) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(4, 10, 5), uint32]) */;
  %595 = %591.0;
  %596 = @func_2231() /* ty=Tensor[(10, 4, 16), bool] */;
  %597 = %594.1;
  (%595, %596, %597, meta[relay.Constant][15] /* ty=Tensor[(200), float32] */)
}

def @func_1956(%var_1955: Tensor[(81), float64]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) {
  %607 = fn (%var_1940: Tensor[(81), float64]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) {
    %598 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %599 = @func_182() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %600 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %601 = cast(%var_1940, dtype="float64") /* ty=Tensor[(81), float64] */;
    %602 = reshape(%601, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float64] */;
    %603 = %598.0;
    %604 = %599.0;
    %605 = %600.0;
    %606 = @func_1459(%602) /* ty=Tensor[(1, 9, 9), float64] */;
    (%603, %604, %605, %606, %var_1940)
  };
  %607(%var_1955) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) */
}

def @func_6482() -> (Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), bool], Tensor[(4, 10, 5), uint32], Tensor[(200), float32]) {
  @func_6480() /* ty=(Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), bool], Tensor[(4, 10, 5), uint32], Tensor[(200), float32]) */
}

def @func_2636() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) {
  @func_2634() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) */
}

def @func_6815() -> Tensor[(10, 4, 16), float64] {
  @func_6813() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_3883() -> Tensor[(10, 4, 16), float64] {
  %608 = @func_2634() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) */;
  %608.4
}

def @func_8200(%var_8199: Tensor[(900), float64]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(900), float64]) {
  %614 = fn (%var_8192: Tensor[(900), float64]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(900), float64]) {
    %609 = cast(%var_8192, dtype="float64") /* ty=Tensor[(900), float64] */;
    %610 = reshape(%609, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), float64] */;
    %611 = @func_7184(%610) /* ty=(Tensor[(10, 6, 15), float64], Tensor[(10, 4, 16), int64]) */;
    %612 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
    %613 = %611.1;
    (%612, %613, %var_8192)
  };
  %614(%var_8199) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(900), float64]) */
}

def @func_11753() -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) {
  @func_11751() /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) */
}

def @func_551(%var_529: Tensor[(10, 4, 16), float64]) -> (Tensor[(10, 4, 16), bool],) {
  %615 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %616 = cast(%615, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %617 = atanh(%616) /* ty=Tensor[(10, 4, 16), float64] */;
  %618 = cast(%var_529, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %619 = shape_of(%617, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%617, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %622 = greater(%620, %621) /* ty=Tensor[(10, 4, 16), bool] */;
  (%622,)
}

def @func_8539() -> Tensor[(10, 4, 16), float64] {
  @func_8537() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_1459(%var_1449: Tensor[(1, 9, 9), float64]) -> Tensor[(1, 9, 9), float64] {
  %623 = cast(%var_1449, dtype="float64") /* ty=Tensor[(1, 9, 9), float64] */;
  tan(%623) /* ty=Tensor[(1, 9, 9), float64] */
}

def @func_5409() -> Tensor[(10, 4, 16), float64] {
  %625 = fn () -> Tensor[(10, 4, 16), float64] {
    %624 = @func_2634() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) */;
    %624.0
  };
  %625() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_4314(%var_4312: Tensor[(12, 10, 14), int8], %var_4313: Tensor[(160, 4), float64]) -> (Tensor[(12, 10, 14), float32], Tensor[(10, 4, 16), bool], Tensor[(160, 4), float64], Tensor[(10, 4, 16), float64]) {
  %640 = fn (%var_4286: Tensor[(12, 10, 14), int8], %var_4300: Tensor[(160, 4), float64]) -> (Tensor[(12, 10, 14), float32], Tensor[(10, 4, 16), bool], Tensor[(160, 4), float64], Tensor[(10, 4, 16), float64]) {
    %626 = cast(meta[relay.Constant][16] /* ty=int8 */, dtype="bool") /* ty=bool */;
    %627 = cast(%var_4286, dtype="bool") /* ty=Tensor[(12, 10, 14), bool] */;
    %628 = not_equal(%626, %627) /* ty=Tensor[(12, 10, 14), bool] */;
    %629 = cast(meta[relay.Constant][17] /* ty=Tensor[(12, 10, 14), bool] */, dtype="float32") /* ty=Tensor[(12, 10, 14), float32] */;
    %630 = shape_of(%628, dtype="int32") /* ty=Tensor[(3), int32] */;
    %631 = cast(%628, dtype="float32") /* ty=Tensor[(12, 10, 14), float32] */;
    %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %633 = cast(%var_4300, dtype="float64") /* ty=Tensor[(160, 4), float64] */;
    %634 = reshape(%633, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
    %635 = @func_551(%634) /* ty=(Tensor[(10, 4, 16), bool],) */;
    %636 = @func_2115() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1008), int16], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
    %637 = power(%631, %632) /* ty=Tensor[(12, 10, 14), float32] */;
    %638 = %635.0;
    %639 = %636.6;
    (%637, %638, %var_4300, %639)
  };
  %640(%var_4312, %var_4313) /* ty=(Tensor[(12, 10, 14), float32], Tensor[(10, 4, 16), bool], Tensor[(160, 4), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_7039(%var_7037: Tensor[(7, 7, 7), float32], %var_7038: Tensor[(7, 7, 7), uint64]) -> (Tensor[(7, 7, 7), int16], Tensor[(10, 4, 16), float64], Tensor[(7, 7, 7), float64]) {
  @func_7035(%var_7037, %var_7038) /* ty=(Tensor[(7, 7, 7), int16], Tensor[(10, 4, 16), float64], Tensor[(7, 7, 7), float64]) */
}

def @func_1285() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %641 = @func_758() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), bool]) */;
  %642 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %643 = %641.0;
  (%642, %643)
}

def @func_8005() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %644 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %645 = @func_4846() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %646 = %644.0;
  %647 = %645.1;
  (%646, %647)
}

def @func_9347() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %652 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
    %648 = @func_8162() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
    %649 = @func_5631() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) */;
    %650 = %648.1;
    %651 = %649.1;
    (%650, %651)
  };
  %652() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_10457() -> Tensor[(10, 4, 16), float64] {
  %653 = @func_6004() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %653.0
}

def @func_972() -> Tensor[(10, 4, 16), float64] {
  %655 = fn () -> Tensor[(10, 4, 16), float64] {
    %654 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %654.0
  };
  %655() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_760() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), bool]) {
  @func_758() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), bool]) */
}

def @func_4058(%var_4055: int32, %var_4056: Tensor[(12, 11, 1), int32], %var_4057: Tensor[(1, 72), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(12, 11, ?), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(6, 2, 6), float32], Tensor[(1, 72), float32], Tensor[(10, 4, 16), bool], Tensor[(12, 11, 1), float32]) {
  %680 = fn (%var_3996: int32, %var_3997: Tensor[(12, 11, 1), int32], %var_4035: Tensor[(1, 72), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(12, 11, ?), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(6, 2, 6), float32], Tensor[(1, 72), float32], Tensor[(10, 4, 16), bool], Tensor[(12, 11, 1), float32]) {
    %656 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %657 = cast(%var_3996, dtype="int32") /* ty=int32 */;
    %658 = cast(%var_3997, dtype="int32") /* ty=Tensor[(12, 11, 1), int32] */;
    %659 = bitwise_or(%657, %658) /* ty=Tensor[(12, 11, 1), int32] */;
    %660 = cast(%659, dtype="float32") /* ty=Tensor[(12, 11, 1), float32] */;
    %661 = shape_of(%var_3997, dtype="int32") /* ty=Tensor[(3), int32] */;
    %662 = cast(%var_3997, dtype="float32") /* ty=Tensor[(12, 11, 1), float32] */;
    %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %664 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %665 = @func_1165() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
    %666 = cast(%var_4035, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
    %667 = reshape(%666, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float32] */;
    %668 = @func_1616(%667) /* ty=(Tensor[(6, 2, 6), float32], Tensor[(10, 4, 16), float64]) */;
    %669 = %656.0;
    %670 = cast(%669, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
    %671 = reshape(%670, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
    %672 = @func_3593(%671) /* ty=(Tensor[(10, 4, 16), bool],) */;
    %673 = cast(%var_3997, dtype="float32") /* ty=Tensor[(12, 11, 1), float32] */;
    %674 = floor_divide(%662, %663) /* ty=Tensor[(12, 11, ?), float32] */;
    %675 = %664.1;
    %676 = %665.3;
    %677 = %668.0;
    %678 = %672.0;
    %679 = sin(%673) /* ty=Tensor[(12, 11, 1), float32] */;
    (%669, %674, %675, %676, %677, %var_4035, %678, %679)
  };
  %680(%var_4055, %var_4056, %var_4057) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(12, 11, ?), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(6, 2, 6), float32], Tensor[(1, 72), float32], Tensor[(10, 4, 16), bool], Tensor[(12, 11, 1), float32]) */
}

def @func_8213() -> Tensor[(81), float64] {
  %682 = fn () -> Tensor[(81), float64] {
    %681 = @func_2213() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(10, 4, 16), float64]) */;
    %681.3
  };
  %682() /* ty=Tensor[(81), float64] */
}

def @func_8692() -> Tensor[(10, 4, 16), float64] {
  %683 = @func_3978() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %683.0
}

def @func_8163() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) {
  %692 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) {
    %684 = @func_8030() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %685 = @func_4596() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), int64]) */;
    %686 = @func_5306() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %687 = @func_6691() /* ty=(Tensor[(10, 4, 16), uint16],) */;
    %688 = %684.0;
    %689 = %685.0;
    %690 = %686.0;
    %691 = %687.0;
    (%688, %689, %690, %691)
  };
  %692() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */
}

def @func_6196(%var_6194: Tensor[(5, 1, 10), float32], %var_6195: Tensor[(1, 108), float32]) -> (Tensor[(5, 1, 10), float32], Tensor[(4, 9, 3), float32], Tensor[(1, 108), float32]) {
  @func_6192(%var_6194, %var_6195) /* ty=(Tensor[(5, 1, 10), float32], Tensor[(4, 9, 3), float32], Tensor[(1, 108), float32]) */
}

def @func_10044() -> (Tensor[(10, 4, 16), bool],) {
  %693 = @func_8052() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %694 = %693.0;
  (%694,)
}

def @func_11517(%var_11500: Tensor[(4, 5, 10), uint8], %var_11501: Tensor[(4, 5, 10), uint8]) -> Tensor[(4, 5, 10), bool] {
  %695 = cast(%var_11501, dtype="bool") /* ty=Tensor[(4, 5, 10), bool] */;
  %696 = shape_of(%var_11500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %697 = cast(%var_11500, dtype="bool") /* ty=Tensor[(4, 5, 10), bool] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%697, %698) /* ty=Tensor[(4, 5, 10), bool] */
}

def @func_5946() -> (Tensor[(10, 4, 16), bool],) {
  %701 = fn () -> (Tensor[(10, 4, 16), bool],) {
    %699 = @func_4928() /* ty=(Tensor[(10, 4, 16), bool],) */;
    %700 = %699.0;
    (%700,)
  };
  %701() /* ty=(Tensor[(10, 4, 16), bool],) */
}

def @func_8694() -> Tensor[(10, 4, 16), float64] {
  @func_8692() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_11521(%var_11519: Tensor[(4, 5, 10), uint8], %var_11520: Tensor[(4, 5, 10), uint8]) -> Tensor[(4, 5, 10), bool] {
  @func_11517(%var_11519, %var_11520) /* ty=Tensor[(4, 5, 10), bool] */
}

def @func_3306() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) {
  %705 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) {
    %702 = @func_2115() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1008), int16], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
    %703 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
    %704 = %702.7;
    (%703, %704)
  };
  %705() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */
}

def @func_10802() -> (Tensor[(10, 4, 16), float64],) {
  %708 = fn () -> (Tensor[(10, 4, 16), float64],) {
    %706 = @func_4494() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %707 = %706.0;
    (%707,)
  };
  %708() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_5563() -> (Tensor[(2, 11, 16), float32], Tensor[(10, 4, 16), bool], Tensor[(80, 8), float64], Tensor[(10, 4, 16), float64]) {
  %709 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 11, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 11, 16), float32] */;
  %710 = cast(meta[relay.Constant][19] /* ty=Tensor[(80, 8), float64] */, dtype="float64") /* ty=Tensor[(80, 8), float64] */;
  %711 = reshape(%710, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %712 = @func_551(%711) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %713 = rsqrt(%709) /* ty=Tensor[(2, 11, 16), float32] */;
  %714 = %712.0;
  %715 = @func_3706() /* ty=Tensor[(10, 4, 16), float64] */;
  (%713, %714, meta[relay.Constant][19] /* ty=Tensor[(80, 8), float64] */, %715)
}

def @func_3204() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  @func_3202() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_8928() -> (Tensor[(10, 4, 16), float64],) {
  %718 = fn () -> (Tensor[(10, 4, 16), float64],) {
    %716 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %717 = %716.0;
    (%717,)
  };
  %718() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_6577() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  @func_6575() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */
}

def @func_11444(%var_11442: Tensor[(72), float32]) -> (Tensor[(10, 4, 16), float32], Tensor[(132), int32], Tensor[(66, 2), int32], Tensor[(72), float32]) {
  @func_11441(%var_11442) /* ty=(Tensor[(10, 4, 16), float32], Tensor[(132), int32], Tensor[(66, 2), int32], Tensor[(72), float32]) */
}

def @func_554(%var_552: Tensor[(10, 4, 16), float64]) -> (Tensor[(10, 4, 16), bool],) {
  @func_551(%var_552) /* ty=(Tensor[(10, 4, 16), bool],) */
}

def @func_7128(%var_7127: Tensor[(81), float32]) -> (Tensor[(81), bool], Tensor[(10, 4, 16), float64], Tensor[(81), float64]) {
  %732 = fn (%var_7096: Tensor[(81), float32]) -> (Tensor[(81), bool], Tensor[(10, 4, 16), float64], Tensor[(81), float64]) {
    %719 = @func_3174() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) */;
    %720 = %719.2;
    %721 = cast(%720, dtype="float32") /* ty=Tensor[(81), float32] */;
    %722 = sin(%721) /* ty=Tensor[(81), float32] */;
    %723 = cast(%var_7096, dtype="bool") /* ty=Tensor[(81), bool] */;
    %724 = shape_of(%722, dtype="int32") /* ty=Tensor[(1), int32] */;
    %725 = cast(%722, dtype="bool") /* ty=Tensor[(81), bool] */;
    %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?), bool] */;
    %727 = @func_3305() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
    %728 = cast(%722, dtype="float64") /* ty=Tensor[(81), float64] */;
    %729 = greater(%725, %726) /* ty=Tensor[(81), bool] */;
    %730 = %727.0;
    %731 = cosh(%728) /* ty=Tensor[(81), float64] */;
    (%729, %730, %731)
  };
  %732(%var_7127) /* ty=(Tensor[(81), bool], Tensor[(10, 4, 16), float64], Tensor[(81), float64]) */
}

def @func_9304(%var_9303: Tensor[(528), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(11, 4, 12), float32], Tensor[(528), float32], Tensor[(10, 4, 16), bool]) {
  %742 = fn (%var_9247: Tensor[(528), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(11, 4, 12), float32], Tensor[(528), float32], Tensor[(10, 4, 16), bool]) {
    %733 = @func_4494() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %734 = cast(%var_9247, dtype="float32") /* ty=Tensor[(528), float32] */;
    %735 = reshape(%734, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
    %736 = @func_9089(%735) /* ty=(Tensor[(11, 4, 12), float32],) */;
    %737 = @func_6575() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
    %738 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
    %739 = %733.0;
    %740 = %736.0;
    %741 = %737.1;
    (%738, %739, %740, %var_9247, %741)
  };
  %742(%var_9303) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(11, 4, 12), float32], Tensor[(528), float32], Tensor[(10, 4, 16), bool]) */
}

def @func_5105(%var_5104: Tensor[(108), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), float64]) {
  %754 = fn (%var_5066: Tensor[(108), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), float64]) {
    %743 = @func_3293() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %744 = cast(%var_5066, dtype="float32") /* ty=Tensor[(108), float32] */;
    %745 = reshape(%744, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
    %746 = @func_3794(%745) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(10, 4, 16), float64]) */;
    %747 = @func_182() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %748 = @func_4261() /* ty=(Tensor[(10, 4, 16), float32],) */;
    %749 = %743.0;
    %750 = %746.0;
    %751 = %747.0;
    %752 = %748.0;
    %753 = @func_4433() /* ty=Tensor[(10, 4, 16), float64] */;
    (%749, %750, %var_5066, %751, %752, %753)
  };
  %754(%var_5104) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), float64]) */
}

def @func_2369(%var_2365: Tensor[(7, 3, 1), uint16], %var_2366: Tensor[(81), float64], %var_2367: int16, %var_2368: Tensor[(1008), int16]) -> (Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(7, 3, 12), int32], Tensor[(10, 4, 16), float64], Tensor[(7, 3, 12), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16]) {
  %787 = fn (%var_2287: Tensor[(7, 3, 1), uint16], %var_2298: Tensor[(81), float64], %var_2359: int16, %var_2360: Tensor[(1008), int16]) -> (Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(7, 3, 12), int32], Tensor[(10, 4, 16), float64], Tensor[(7, 3, 12), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16]) {
    %755 = cast(%var_2298, dtype="float64") /* ty=Tensor[(81), float64] */;
    %756 = reshape(%755, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float64] */;
    %757 = cast(%var_2287, dtype="uint16") /* ty=Tensor[(7, 3, 1), uint16] */;
    %758 = cast(meta[relay.Constant][20] /* ty=Tensor[(7, 3, 12), uint16] */, dtype="uint16") /* ty=Tensor[(7, 3, 12), uint16] */;
    %759 = subtract(%757, %758) /* ty=Tensor[(7, 3, 12), uint16] */;
    %760 = cast(meta[relay.Constant][20] /* ty=Tensor[(7, 3, 12), uint16] */, dtype="uint64") /* ty=Tensor[(7, 3, 12), uint64] */;
    %761 = cast(%var_2287, dtype="uint64") /* ty=Tensor[(7, 3, 1), uint64] */;
    %762 = bitwise_xor(%760, %761) /* ty=Tensor[(7, 3, 12), uint64] */;
    %763 = cast(%762, dtype="int32") /* ty=Tensor[(7, 3, 12), int32] */;
    %764 = shape_of(%759, dtype="int32") /* ty=Tensor[(3), int32] */;
    %765 = cast(%759, dtype="int32") /* ty=Tensor[(7, 3, 12), int32] */;
    %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %767 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %768 = cast(meta[relay.Constant][20] /* ty=Tensor[(7, 3, 12), uint16] */, dtype="float32") /* ty=Tensor[(7, 3, 12), float32] */;
    %769 = acos(%768) /* ty=Tensor[(7, 3, 12), float32] */;
    %770 = cast(%769, dtype="float32") /* ty=Tensor[(7, 3, 12), float32] */;
    %771 = asin(%770) /* ty=Tensor[(7, 3, 12), float32] */;
    %772 = cast(%771, dtype="float32") /* ty=Tensor[(7, 3, 12), float32] */;
    %773 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %774 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %775 = cast(%var_2359, dtype="int16") /* ty=int16 */;
    %776 = cast(%var_2360, dtype="int16") /* ty=Tensor[(1008), int16] */;
    %777 = reshape(%775, newshape=[]) /* ty=int16 */;
    %778 = reshape(%776, newshape=[1008]) /* ty=Tensor[(1008), int16] */;
    %779 = @func_1903(%777, %778) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64]) */;
    %780 = @func_1459(%756) /* ty=Tensor[(1, 9, 9), float64] */;
    %781 = multiply(%765, %766) /* ty=Tensor[(7, 3, 12), int32] */;
    %782 = %767.0;
    %783 = log(%772) /* ty=Tensor[(7, 3, 12), float32] */;
    %784 = %773.0;
    %785 = %774.0;
    %786 = %779.0;
    (%780, %var_2298, %781, %782, %783, %784, %785, %786, %var_2359, %var_2360)
  };
  %787(%var_2365, %var_2366, %var_2367, %var_2368) /* ty=(Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(7, 3, 12), int32], Tensor[(10, 4, 16), float64], Tensor[(7, 3, 12), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16]) */
}

def @func_7184(%var_7145: Tensor[(10, 6, 15), float64]) -> (Tensor[(10, 6, 15), float64], Tensor[(10, 4, 16), int64]) {
  %788 = cast(%var_7145, dtype="float64") /* ty=Tensor[(10, 6, 15), float64] */;
  %789 = sqrt(%788) /* ty=Tensor[(10, 6, 15), float64] */;
  %790 = @func_6749() /* ty=Tensor[(10, 4, 16), int64] */;
  (%789, %790)
}

def @func_856() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %791 = @func_182() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %792 = %791.1;
  %793 = cast(%792, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %794 = cast(%792, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %795 = reshape(%794, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %796 = @func_551(%795) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %797 = sigmoid(%793) /* ty=Tensor[(10, 4, 16), float64] */;
  %798 = %796.0;
  (%797, %798)
}

def @func_4726() -> (Tensor[(10, 4, 16), float64],) {
  %799 = @func_3293() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %800 = %799.0;
  (%800,)
}

def @func_6004() -> (Tensor[(10, 4, 16), float64],) {
  %801 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
  (%801,)
}

def @func_758() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), bool]) {
  %802 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %803 = cast(%802, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %804 = reshape(%803, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %805 = cast(%802, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %806 = reshape(%805, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %807 = @func_551(%806) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %808 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %809 = @func_273(%804) /* ty=Tensor[(10, 4, 16), int8] */;
  %810 = %807.0;
  (%808, %802, %809, %810)
}

def @func_1165() -> (Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) {
  %811 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %812 = %811.0;
  %813 = cast(meta[relay.Constant][21] /* ty=Tensor[(10, 4, 16), float64] */, dtype="uint16") /* ty=Tensor[(10, 4, 16), uint16] */;
  %814 = shape_of(%812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(%812, dtype="uint16") /* ty=Tensor[(10, 4, 16), uint16] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %817 = @func_758() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), bool]) */;
  %818 = bitwise_xor(%815, %816) /* ty=Tensor[(10, 4, 16), uint16] */;
  %819 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %820 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
  %821 = %817.2;
  (%818, %819, %820, %821)
}

def @func_2865() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %828 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
    %822 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %823 = @func_2156() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %824 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %825 = %822.0;
    %826 = %823.2;
    %827 = %824.0;
    (%825, %826, %827)
  };
  %828() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_665(%var_664: Tensor[(10, 4, 16), bool]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64]) {
  %840 = fn (%var_658: Tensor[(10, 4, 16), bool]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64]) {
    %829 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %830 = %829.0;
    %831 = cast(%830, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
    %832 = reshape(%831, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
    %833 = @func_551(%832) /* ty=(Tensor[(10, 4, 16), bool],) */;
    %834 = %833.0;
    %835 = cast(%var_658, dtype="int64") /* ty=Tensor[(10, 4, 16), int64] */;
    %836 = shape_of(%834, dtype="int32") /* ty=Tensor[(3), int32] */;
    %837 = cast(%834, dtype="int64") /* ty=Tensor[(10, 4, 16), int64] */;
    %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %839 = right_shift(%837, %838) /* ty=Tensor[(10, 4, 16), int64] */;
    (%830, %839)
  };
  %840(%var_664) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64]) */
}

def @func_1167() -> (Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) {
  @func_1165() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */
}

def @func_6412(%var_6411: Tensor[(10, 4, 16), float64]) -> Tensor[(10, 4, 16), uint64] {
  %847 = fn (%var_6374: Tensor[(10, 4, 16), float64]) -> Tensor[(10, 4, 16), uint64] {
    %841 = @func_2156() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %842 = %841.2;
    %843 = cast(%var_6374, dtype="uint64") /* ty=Tensor[(10, 4, 16), uint64] */;
    %844 = shape_of(%842, dtype="int32") /* ty=Tensor[(3), int32] */;
    %845 = cast(%842, dtype="uint64") /* ty=Tensor[(10, 4, 16), uint64] */;
    %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    bitwise_or(%845, %846) /* ty=Tensor[(10, 4, 16), uint64] */
  };
  %847(%var_6411) /* ty=Tensor[(10, 4, 16), uint64] */
}

def @func_1424() -> (Tensor[(10, 4, 16), float64],) {
  %850 = fn () -> (Tensor[(10, 4, 16), float64],) {
    %848 = @func_1165() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
    %849 = %848.1;
    (%849,)
  };
  %850() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_5306() -> (Tensor[(10, 4, 16), float64],) {
  %851 = @func_3140() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %852 = %851.0;
  (%852,)
}

def @func_4891() -> (Tensor[(10, 4, 16), float64],) {
  %853 = @func_3174() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) */;
  %854 = %853.0;
  (%854,)
}

def @func_8679(%var_8654: Tensor[(72), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(6, 2, 6), float32], Tensor[(72), float32]) {
  %855 = @func_7582() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
  %856 = @func_5258() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %857 = @func_6460() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %858 = cast(%var_8654, dtype="float32") /* ty=Tensor[(72), float32] */;
  %859 = reshape(%858, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float32] */;
  %860 = @func_1616(%859) /* ty=(Tensor[(6, 2, 6), float32], Tensor[(10, 4, 16), float64]) */;
  %861 = %855.1;
  %862 = %856.0;
  %863 = %857.1;
  %864 = %860.0;
  (%861, %862, %863, %864, %var_8654)
}

def @func_10281(%var_10280: Tensor[(2, 672), float32]) -> (Tensor[(10, 4, 16), float32], Tensor[(12, 14, 8), float64], Tensor[(2, 672), float32]) {
  %870 = fn (%var_10269: Tensor[(2, 672), float32]) -> (Tensor[(10, 4, 16), float32], Tensor[(12, 14, 8), float64], Tensor[(2, 672), float32]) {
    %865 = cast(%var_10269, dtype="float32") /* ty=Tensor[(2, 672), float32] */;
    %866 = reshape(%865, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), float32] */;
    %867 = @func_4774(%866) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(12, 14, 8), float64]) */;
    %868 = @func_4252() /* ty=Tensor[(10, 4, 16), float32] */;
    %869 = %867.1;
    (%868, %869, %var_10269)
  };
  %870(%var_10280) /* ty=(Tensor[(10, 4, 16), float32], Tensor[(12, 14, 8), float64], Tensor[(2, 672), float32]) */
}

def @func_2158() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  @func_2156() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_12260() -> (Tensor[(81), float64],) {
  %871 = @func_3140() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %872 = %871.2;
  (%872,)
}

def @func_8899(%var_8898: Tensor[(7, 49), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(7, 7, 7), int16], Tensor[(7, 49), float32], Tensor[(10, 4, 16), bool]) {
  %883 = fn (%var_8885: Tensor[(7, 49), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(7, 7, 7), int16], Tensor[(7, 49), float32], Tensor[(10, 4, 16), bool]) {
    %873 = @func_3293() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %874 = cast(%var_8885, dtype="float32") /* ty=Tensor[(7, 49), float32] */;
    %875 = cast(%var_8885, dtype="uint64") /* ty=Tensor[(7, 49), uint64] */;
    %876 = reshape(%874, newshape=[7, 7, 7]) /* ty=Tensor[(7, 7, 7), float32] */;
    %877 = reshape(%875, newshape=[7, 7, 7]) /* ty=Tensor[(7, 7, 7), uint64] */;
    %878 = @func_7035(%876, %877) /* ty=(Tensor[(7, 7, 7), int16], Tensor[(10, 4, 16), float64], Tensor[(7, 7, 7), float64]) */;
    %879 = @func_1247() /* ty=(Tensor[(10, 4, 16), bool],) */;
    %880 = %873.0;
    %881 = %878.0;
    %882 = %879.0;
    (%880, %881, %var_8885, %882)
  };
  %883(%var_8898) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(7, 7, 7), int16], Tensor[(7, 49), float32], Tensor[(10, 4, 16), bool]) */
}

def @func_9193() -> (Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %884 = @func_8976() /* ty=(Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), bool], Tensor[(900), float64], Tensor[(900), float64]) */;
  %885 = @func_3978() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %886 = @func_6277() /* ty=(Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %887 = %884.0;
  %888 = %885.0;
  %889 = %886.1;
  (%887, %888, %889)
}

def @func_6432() -> Tensor[(10, 4, 16), float64] {
  %890 = @func_1165() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
  %890.2
}

def @func_11537() -> (Tensor[(10, 4, 16), float64],) {
  %891 = @func_3499() /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) */;
  %892 = %891.3;
  (%892,)
}

def @func_8782(%var_8781: Tensor[(12, 5, 13), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(12, 5, 13), bool], Tensor[(12, 5, 13), float32]) {
  %906 = fn (%var_8724: Tensor[(12, 5, 13), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(12, 5, 13), bool], Tensor[(12, 5, 13), float32]) {
    %893 = @func_3914() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %894 = cast(%var_8724, dtype="float32") /* ty=Tensor[(12, 5, 13), float32] */;
    %895 = log2(%894) /* ty=Tensor[(12, 5, 13), float32] */;
    %896 = cast(%895, dtype="float32") /* ty=Tensor[(12, 5, 13), float32] */;
    %897 = rsqrt(%896) /* ty=Tensor[(12, 5, 13), float32] */;
    %898 = cast(%897, dtype="bool") /* ty=Tensor[(12, 5, 13), bool] */;
    %899 = shape_of(%895, dtype="int32") /* ty=Tensor[(3), int32] */;
    %900 = cast(%895, dtype="bool") /* ty=Tensor[(12, 5, 13), bool] */;
    %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %902 = cast(%897, dtype="float32") /* ty=Tensor[(12, 5, 13), float32] */;
    %903 = %893.1;
    %904 = greater(%900, %901) /* ty=Tensor[(12, 5, 13), bool] */;
    %905 = asin(%902) /* ty=Tensor[(12, 5, 13), float32] */;
    (%903, %904, %905)
  };
  %906(%var_8781) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(12, 5, 13), bool], Tensor[(12, 5, 13), float32]) */
}

def @func_4948() -> (Tensor[(10, 4, 16), float64],) {
  %907 = @func_4573() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) */;
  %908 = %907.0;
  (%908,)
}

def @func_3174() -> (Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) {
  %909 = @func_2156() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %910 = cast(meta[relay.Constant][22] /* ty=Tensor[(81), float64] */, dtype="float64") /* ty=Tensor[(81), float64] */;
  %911 = reshape(%910, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float64] */;
  %912 = %909.0;
  %913 = @func_1459(%911) /* ty=Tensor[(1, 9, 9), float64] */;
  (%912, %913, meta[relay.Constant][22] /* ty=Tensor[(81), float64] */)
}

def @func_12215() -> (Tensor[(10, 4, 16), float64],) {
  %914 = @func_11043() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %915 = %914.0;
  (%915,)
}

def @func_4776(%var_4775: Tensor[(12, 14, 8), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(12, 14, 8), float64]) {
  %928 = fn (%var_4743: Tensor[(12, 14, 8), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(12, 14, 8), float64]) {
    %916 = @func_4726() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %917 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 14, 8), float32] */, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
    %918 = shape_of(%var_4743, dtype="int32") /* ty=Tensor[(3), int32] */;
    %919 = cast(%var_4743, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
    %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %921 = subtract(%919, %920) /* ty=Tensor[(12, 14, 8), float32] */;
    %922 = cast(%var_4743, dtype="float64") /* ty=Tensor[(12, 14, 8), float64] */;
    %923 = shape_of(%921, dtype="int32") /* ty=Tensor[(3), int32] */;
    %924 = cast(%921, dtype="float64") /* ty=Tensor[(12, 14, 8), float64] */;
    %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %926 = %916.0;
    %927 = divide(%924, %925) /* ty=Tensor[(12, 14, 8), float64] */;
    (%926, %927)
  };
  %928(%var_4775) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(12, 14, 8), float64]) */
}

def @func_10027() -> Tensor[(10, 4, 16), float64] {
  @func_10025() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_3409() -> Tensor[(10, 4, 16), bool] {
  %930 = fn () -> Tensor[(10, 4, 16), bool] {
    %929 = @func_1247() /* ty=(Tensor[(10, 4, 16), bool],) */;
    %929.0
  };
  %930() /* ty=Tensor[(10, 4, 16), bool] */
}

def @func_6460() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %931 = @func_2634() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) */;
  %932 = @func_3062() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %933 = %931.0;
  %934 = %932.0;
  (%933, %934)
}

def @func_5156(%var_5152: int16) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(7, 16, 9), int8], int16) {
  %935 = @func_3850() /* ty=(Tensor[(10, 4, 16), int64],) */;
  %936 = cast(%var_5152, dtype="int16") /* ty=int16 */;
  %937 = reshape(%936, newshape=[]) /* ty=int16 */;
  %938 = @func_5053(%937) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], int16, Tensor[(2, 504), int16]) */;
  %939 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
  %940 = %935.0;
  %941 = %938.1;
  (%939, %940, %941, %var_5152)
}

def @func_8682(%var_8680: Tensor[(72), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(6, 2, 6), float32], Tensor[(72), float32]) {
  @func_8679(%var_8680) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(6, 2, 6), float32], Tensor[(72), float32]) */
}

def @func_6896() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %942 = @func_3202() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %943 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %944 = %942.0;
  %945 = %943.1;
  (%944, %945)
}

def @func_7227() -> (Tensor[(10, 4, 16), float64],) {
  @func_7225() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_73() -> Tensor[(10, 4, 16), float64] {
  %947 = fn () -> Tensor[(10, 4, 16), float64] {
    %946 = cast(meta[relay.Constant][24] /* ty=Tensor[(10, 4, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
    sqrt(%946) /* ty=Tensor[(10, 4, 16), float64] */
  };
  %947() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_6544() -> Tensor[(10, 4, 16), float64] {
  %948 = fn () -> Tensor[(10, 4, 16), float64] {
    @func_4216() /* ty=Tensor[(10, 4, 16), float64] */
  };
  %948() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_8879(%var_8877: int16, %var_8878: Tensor[(1008), int16]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16]) {
  %959 = fn (%var_8864: int16, %var_8865: Tensor[(1008), int16]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16]) {
    %949 = @func_6153() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %950 = @func_6004() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %951 = cast(%var_8864, dtype="int16") /* ty=int16 */;
    %952 = cast(%var_8865, dtype="int16") /* ty=Tensor[(1008), int16] */;
    %953 = reshape(%951, newshape=[]) /* ty=int16 */;
    %954 = reshape(%952, newshape=[1008]) /* ty=Tensor[(1008), int16] */;
    %955 = @func_1903(%953, %954) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64]) */;
    %956 = %949.0;
    %957 = %950.0;
    %958 = %955.1;
    (%956, %957, %958, %var_8864, %var_8865)
  };
  %959(%var_8877, %var_8878) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16]) */
}

def @func_10241() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(480), bool]) {
  @func_10239() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(480), bool]) */
}

def @func_9520() -> (Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(108), float32]) {
  @func_9518() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(108), float32]) */
}

def @func_3501() -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) {
  @func_3499() /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) */
}

def @func_3708() -> Tensor[(10, 4, 16), float64] {
  @func_3706() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_5513() -> (Tensor[(10, 4, 16), int64], Tensor[(10, 4, 16), float64]) {
  %963 = fn () -> (Tensor[(10, 4, 16), int64], Tensor[(10, 4, 16), float64]) {
    %960 = @func_4596() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), int64]) */;
    %961 = %960.2;
    %962 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
    (%961, %962)
  };
  %963() /* ty=(Tensor[(10, 4, 16), int64], Tensor[(10, 4, 16), float64]) */
}

def @func_4929() -> (Tensor[(10, 4, 16), bool],) {
  %965 = fn () -> (Tensor[(10, 4, 16), bool],) {
    %964 = @func_3408() /* ty=Tensor[(10, 4, 16), bool] */;
    (%964,)
  };
  %965() /* ty=(Tensor[(10, 4, 16), bool],) */
}

def @func_11441(%var_11437: Tensor[(72), float32]) -> (Tensor[(10, 4, 16), float32], Tensor[(132), int32], Tensor[(66, 2), int32], Tensor[(72), float32]) {
  %966 = @func_4261() /* ty=(Tensor[(10, 4, 16), float32],) */;
  %967 = cast(meta[relay.Constant][25] /* ty=Tensor[(66, 2), int32] */, dtype="int32") /* ty=Tensor[(66, 2), int32] */;
  %968 = cast(%var_11437, dtype="float32") /* ty=Tensor[(72), float32] */;
  %969 = reshape(%967, newshape=[132]) /* ty=Tensor[(132), int32] */;
  %970 = reshape(%968, newshape=[18, 4]) /* ty=Tensor[(18, 4), float32] */;
  %971 = @func_10868(%969, %970) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(1, 72), float32], int32, Tensor[(132), int32], Tensor[(18, 4), float32]) */;
  %972 = %966.0;
  %973 = %971.4;
  (%972, %973, meta[relay.Constant][25] /* ty=Tensor[(66, 2), int32] */, %var_11437)
}

def @func_9936(%var_9929: Tensor[(845), int64]) -> (Tensor[(10, 4, 16), float64], Tensor[(5, 13, 13), int64], Tensor[(845), int64]) {
  %974 = @func_1581() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %975 = cast(%var_9929, dtype="int64") /* ty=Tensor[(845), int64] */;
  %976 = reshape(%975, newshape=[5, 13, 13]) /* ty=Tensor[(5, 13, 13), int64] */;
  %977 = @func_5356(%976) /* ty=(Tensor[(5, 13, 13), int64],) */;
  %978 = %974.2;
  %979 = %977.0;
  (%978, %979, %var_9929)
}

def @func_10633(%var_10631: Tensor[(8, 4, 7), int64], %var_10632: Tensor[(54, 2), float32]) -> (Tensor[(8, 4, 7), int64], Tensor[(10, 4, 16), float64], Tensor[(54, 2), float32], Tensor[(10, 4, 16), bool]) {
  @func_10629(%var_10631, %var_10632) /* ty=(Tensor[(8, 4, 7), int64], Tensor[(10, 4, 16), float64], Tensor[(54, 2), float32], Tensor[(10, 4, 16), bool]) */
}

def @func_10192(%var_10191: Tensor[(1344), float32]) -> (Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), float64], Tensor[(12, 14, 8), float64], Tensor[(1344), float32], Tensor[(10, 4, 16), float64], Tensor[(108), float32]) {
  %992 = fn (%var_10164: Tensor[(1344), float32]) -> (Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), float64], Tensor[(12, 14, 8), float64], Tensor[(1344), float32], Tensor[(10, 4, 16), float64], Tensor[(108), float32]) {
    %980 = @func_4261() /* ty=(Tensor[(10, 4, 16), float32],) */;
    %981 = @func_1581() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %982 = cast(%var_10164, dtype="float32") /* ty=Tensor[(1344), float32] */;
    %983 = reshape(%982, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), float32] */;
    %984 = @func_4774(%983) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(12, 14, 8), float64]) */;
    %985 = cast(meta[relay.Constant][26] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
    %986 = reshape(%985, newshape=[108]) /* ty=Tensor[(108), float32] */;
    %987 = @func_9824(%986) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(108), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
    %988 = %980.0;
    %989 = %981.0;
    %990 = %984.1;
    %991 = %987.3;
    (%988, %989, %990, %var_10164, %991, meta[relay.Constant][26] /* ty=Tensor[(108), float32] */)
  };
  %992(%var_10191) /* ty=(Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), float64], Tensor[(12, 14, 8), float64], Tensor[(1344), float32], Tensor[(10, 4, 16), float64], Tensor[(108), float32]) */
}

def @func_3063() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %996 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
    %993 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %994 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
    %995 = %993.0;
    (%994, %995)
  };
  %996() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_5488() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  @func_5486() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */
}

def @func_11629() -> Tensor[(10, 4, 16), bool] {
  %998 = fn () -> Tensor[(10, 4, 16), bool] {
    %997 = @func_8052() /* ty=(Tensor[(10, 4, 16), bool],) */;
    %997.0
  };
  %998() /* ty=Tensor[(10, 4, 16), bool] */
}

def @func_4435() -> Tensor[(10, 4, 16), float64] {
  @func_4433() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_3140() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) {
  %999 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1000 = %999.0;
  %1001 = cast(%1000, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %1002 = cast(%1000, dtype="float32") /* ty=Tensor[(10, 4, 16), float32] */;
  %1003 = reshape(%1001, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), bool] */;
  %1004 = reshape(%1002, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float32] */;
  %1005 = @func_1116(%1003, %1004) /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1006 = @func_2213() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(10, 4, 16), float64]) */;
  %1007 = %1006.3;
  %1008 = cast(%1007, dtype="float64") /* ty=Tensor[(81), float64] */;
  %1009 = reshape(%1008, newshape=[81]) /* ty=Tensor[(81), float64] */;
  %1010 = @func_2956(%1009) /* ty=(Tensor[(10, 4, 16), bool], Tensor[(81), uint16], Tensor[(81), float64]) */;
  %1011 = cast(%1000, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %1012 = reshape(%1011, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %1013 = @func_1423() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1014 = %1005.5;
  %1015 = %1010.1;
  %1016 = @func_273(%1012) /* ty=Tensor[(10, 4, 16), int8] */;
  %1017 = %1013.0;
  (%1000, %1014, %1007, %1015, %1016, %1017)
}

def @func_5486() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  %1018 = @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %1019 = @func_4928() /* ty=(Tensor[(10, 4, 16), bool],) */;
  %1020 = @func_4846() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1021 = %1018.0;
  %1022 = cast(%1021, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %1023 = reshape(%1022, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
  %1024 = @func_551(%1023) /* ty=(Tensor[(10, 4, 16), bool],) */;
  %1025 = %1019.0;
  %1026 = %1020.0;
  %1027 = %1024.0;
  (%1021, %1025, %1026, %1027)
}

def @func_9518() -> (Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(108), float32]) {
  %1028 = @func_6004() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1029 = @func_2213() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(10, 4, 16), float64]) */;
  %1030 = cast(meta[relay.Constant][27] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1031 = reshape(%1030, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %1032 = @func_3794(%1031) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(10, 4, 16), float64]) */;
  %1033 = %1028.0;
  %1034 = %1029.2;
  %1035 = %1032.1;
  (%1033, %1034, %1035, meta[relay.Constant][27] /* ty=Tensor[(108), float32] */)
}

def @func_6434() -> Tensor[(10, 4, 16), float64] {
  @func_6432() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_3852() -> (Tensor[(10, 4, 16), int64],) {
  @func_3850() /* ty=(Tensor[(10, 4, 16), int64],) */
}

def @func_1832() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %1036 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1037 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1038 = %1036.0;
  %1039 = %1037.0;
  (%1038, %1039)
}

def @func_3202() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %1040 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1041 = @func_1581() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1042 = %1040.0;
  %1043 = %1041.6;
  (%1042, %1043)
}

def @func_7341() -> Tensor[(10, 4, 16), float64] {
  %1044 = fn () -> Tensor[(10, 4, 16), float64] {
    @func_3859() /* ty=Tensor[(10, 4, 16), float64] */
  };
  %1044() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_6898() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  @func_6896() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_12262() -> (Tensor[(81), float64],) {
  @func_12260() /* ty=(Tensor[(81), float64],) */
}

def @func_7225() -> (Tensor[(10, 4, 16), float64],) {
  %1045 = @func_3062() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1046 = %1045.0;
  (%1046,)
}

def @func_6691() -> (Tensor[(10, 4, 16), uint16],) {
  %1047 = @func_5631() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) */;
  %1048 = %1047.0;
  (%1048,)
}

def @func_7286(%var_7276: Tensor[(81), float64], %var_7284: Tensor[(900), float64]) -> (Tensor[(81), int32], Tensor[(10, 4, 16), int64], Tensor[(900), float64]) {
  %1049 = @func_3140() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %1050 = %1049.2;
  %1051 = cast(%var_7276, dtype="int32") /* ty=Tensor[(81), int32] */;
  %1052 = shape_of(%1050, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1053 = cast(%1050, dtype="int32") /* ty=Tensor[(81), int32] */;
  %1054 = dyn.reshape(%1051, %1052, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1055 = cast(%var_7284, dtype="float64") /* ty=Tensor[(900), float64] */;
  %1056 = reshape(%1055, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), float64] */;
  %1057 = @func_7184(%1056) /* ty=(Tensor[(10, 6, 15), float64], Tensor[(10, 4, 16), int64]) */;
  %1058 = right_shift(%1053, %1054) /* ty=Tensor[(81), int32] */;
  %1059 = %1057.1;
  (%1058, %1059, %var_7284)
}

def @func_4574() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) {
  %1066 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) {
    %1060 = @func_2864() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %1061 = @func_3305() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
    %1062 = @func_3305() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
    %1063 = %1060.2;
    %1064 = %1061.1;
    %1065 = %1062.0;
    (%1063, %1064, %1065)
  };
  %1066() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) */
}

def @func_184() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  @func_182() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_1249() -> (Tensor[(10, 4, 16), bool],) {
  @func_1247() /* ty=(Tensor[(10, 4, 16), bool],) */
}

def @func_276(%var_274: Tensor[(10, 4, 16), float64]) -> Tensor[(10, 4, 16), int8] {
  @func_273(%var_274) /* ty=Tensor[(10, 4, 16), int8] */
}

def @func_10401() -> (Tensor[(10, 4, 16), int64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) {
  %1074 = fn () -> (Tensor[(10, 4, 16), int64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) {
    %1067 = @func_3202() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %1068 = @func_6277() /* ty=(Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
    %1069 = @func_7582() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
    %1070 = @func_9617() /* ty=Tensor[(10, 4, 16), int64] */;
    %1071 = %1067.1;
    %1072 = %1068.0;
    %1073 = %1069.0;
    (%1070, %1071, %1072, %1073)
  };
  %1074() /* ty=(Tensor[(10, 4, 16), int64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */
}

def @func_3176() -> (Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) {
  @func_3174() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) */
}

def @func_5782() -> Tensor[(10, 4, 16), float64] {
  %1075 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1075.0
}

def @func_2716() -> (Tensor[(10, 4, 16), float64],) {
  %1078 = fn () -> (Tensor[(10, 4, 16), float64],) {
    %1076 = @func_182() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %1077 = %1076.1;
    (%1077,)
  };
  %1078() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_11410() -> Tensor[(10, 4, 16), float64] {
  %1080 = fn () -> Tensor[(10, 4, 16), float64] {
    %1079 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %1079.0
  };
  %1080() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_858() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) {
  @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */
}

def @func_4923() -> (Tensor[(10, 4, 16), float64],) {
  %1083 = fn () -> (Tensor[(10, 4, 16), float64],) {
    %1081 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %1082 = %1081.0;
    (%1082,)
  };
  %1083() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_9195() -> (Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  @func_9193() /* ty=(Tensor[(10, 4, 16), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_9369() -> Tensor[(10, 4, 16), float64] {
  %1085 = fn () -> Tensor[(10, 4, 16), float64] {
    %1084 = @func_7582() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
    %1084.1
  };
  %1085() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_2524() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %1090 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
    %1086 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %1087 = @func_182() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %1088 = %1086.1;
    %1089 = %1087.0;
    (%1088, %1089)
  };
  %1090() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_7506(%var_7503: Tensor[(1, 320), int64], %var_7504: Tensor[(1680), int8], %var_7505: Tensor[(72), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(16, 5, 4), int64], Tensor[(1, 320), int64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(5, 13, 13), int64], Tensor[(845), int64], Tensor[(10, 4, 16), float64], Tensor[(1680), int64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1008), int16], Tensor[(72), float32]) {
  @func_7501(%var_7503, %var_7504, %var_7505) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(16, 5, 4), int64], Tensor[(1, 320), int64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(5, 13, 13), int64], Tensor[(845), int64], Tensor[(10, 4, 16), float64], Tensor[(1680), int64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1008), int16], Tensor[(72), float32]) */
}

def @func_1907(%var_1905: int16, %var_1906: Tensor[(1008), int16]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64]) {
  @func_1903(%var_1905, %var_1906) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64]) */
}

def @func_5834(%var_5821: Tensor[(5, 9, 1), float32], %var_5822: Tensor[(5, 9, 14), float32]) -> (Tensor[(5, 9, 14), bool], Tensor[(10, 4, 16), float64]) {
  %1091 = cast(%var_5821, dtype="bool") /* ty=Tensor[(5, 9, 1), bool] */;
  %1092 = cast(%var_5822, dtype="bool") /* ty=Tensor[(5, 9, 14), bool] */;
  %1093 = @func_4891() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1094 = less(%1091, %1092) /* ty=Tensor[(5, 9, 14), bool] */;
  %1095 = %1093.0;
  (%1094, %1095)
}

def @func_12246() -> Tensor[(10, 4, 16), float64] {
  %1097 = fn () -> Tensor[(10, 4, 16), float64] {
    %1096 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %1096.1
  };
  %1097() /* ty=Tensor[(10, 4, 16), float64] */
}

def @main(%var_12304: Tensor[(10, 7, 9), float64]) -> (Tensor[(10, 7, 9), float64], Tensor[(10, 4, 16), float32], Tensor[(10, 7, 9), int32]) {
  %1098 = cast(%var_12304, dtype="float64") /* ty=Tensor[(10, 7, 9), float64] */;
  %1099 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(10, 7, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1100 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(10, 7, 9), float64] */;
  %1101 = dyn.reshape(%1098, %1099, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1102 = @func_4262() /* ty=(Tensor[(10, 4, 16), float32],) */;
  %1103 = cast(%var_12304, dtype="int32") /* ty=Tensor[(10, 7, 9), int32] */;
  %1104 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(10, 7, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1105 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 7, 9), float64] */, dtype="int32") /* ty=Tensor[(10, 7, 9), int32] */;
  %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1107 = power(%1100, %1101) /* ty=Tensor[(10, 7, 9), float64] */;
  %1108 = %1102.0;
  %1109 = bitwise_or(%1105, %1106) /* ty=Tensor[(10, 7, 9), int32] */;
  (%1107, %1108, %1109)
}

def @func_9826(%var_9825: Tensor[(108), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(108), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) {
  %1120 = fn (%var_9790: Tensor[(108), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(108), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) {
    %1110 = @func_4846() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %1111 = cast(%var_9790, dtype="float32") /* ty=Tensor[(108), float32] */;
    %1112 = reshape(%1111, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
    %1113 = @func_3794(%1112) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(10, 4, 16), float64]) */;
    %1114 = @func_4846() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %1115 = @func_2998() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), bool]) */;
    %1116 = %1110.0;
    %1117 = %1113.1;
    %1118 = %1114.2;
    %1119 = %1115.0;
    (%1116, %1117, %var_9790, %1118, %1119)
  };
  %1120(%var_9825) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(108), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */
}

def @func_4262() -> (Tensor[(10, 4, 16), float32],) {
  %1122 = fn () -> (Tensor[(10, 4, 16), float32],) {
    %1121 = @func_4252() /* ty=Tensor[(10, 4, 16), float32] */;
    (%1121,)
  };
  %1122() /* ty=(Tensor[(10, 4, 16), float32],) */
}

def @func_9561(%var_9559: Tensor[(2, 15, 15), int8], %var_9560: Tensor[(2, 15, 15), int8]) -> Tensor[(2, 15, 15), bool] {
  %1127 = fn (%var_9540: Tensor[(2, 15, 15), int8], %var_9541: Tensor[(2, 15, 15), int8]) -> Tensor[(2, 15, 15), bool] {
    %1123 = cast(%var_9541, dtype="bool") /* ty=Tensor[(2, 15, 15), bool] */;
    %1124 = shape_of(%var_9540, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1125 = cast(%var_9540, dtype="bool") /* ty=Tensor[(2, 15, 15), bool] */;
    %1126 = dyn.reshape(%1123, %1124, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%1125, %1126) /* ty=Tensor[(2, 15, 15), bool] */
  };
  %1127(%var_9559, %var_9560) /* ty=Tensor[(2, 15, 15), bool] */
}

def @func_4148(%var_4147: Tensor[(13, 9, 5), float32]) -> Tensor[(13, 9, 5), uint16] {
  %1134 = fn (%var_4138: Tensor[(13, 9, 5), float32]) -> Tensor[(13, 9, 5), uint16] {
    %1128 = cast(%var_4138, dtype="float32") /* ty=Tensor[(13, 9, 5), float32] */;
    %1129 = log(%1128) /* ty=Tensor[(13, 9, 5), float32] */;
    %1130 = cast(%var_4138, dtype="uint16") /* ty=Tensor[(13, 9, 5), uint16] */;
    %1131 = shape_of(%1129, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1132 = cast(%1129, dtype="uint16") /* ty=Tensor[(13, 9, 5), uint16] */;
    %1133 = dyn.reshape(%1130, %1131, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    bitwise_and(%1132, %1133) /* ty=Tensor[(13, 9, 5), uint16] */
  };
  %1134(%var_4147) /* ty=Tensor[(13, 9, 5), uint16] */
}

def @func_3850() -> (Tensor[(10, 4, 16), int64],) {
  %1135 = @func_2213() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(10, 4, 16), float64]) */;
  %1136 = %1135.1;
  (%1136,)
}

def @func_2999() -> (Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), bool]) {
  %1143 = fn () -> (Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), bool]) {
    %1137 = @func_2115() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(1008), int16], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), uint16]) */;
    %1138 = %1137.7;
    %1139 = cast(%1138, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
    %1140 = reshape(%1139, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float64] */;
    %1141 = @func_551(%1140) /* ty=(Tensor[(10, 4, 16), bool],) */;
    %1142 = %1141.0;
    (%1138, %1142)
  };
  %1143() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), bool]) */
}

def @func_1834() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_2213() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(1, 9, 9), float64], Tensor[(81), float64], Tensor[(10, 4, 16), float64]) {
  %1144 = @func_2156() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1145 = %1144.0;
  %1146 = cast(%1145, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %1147 = reshape(%1146, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), bool] */;
  %1148 = @func_663(%1147) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64]) */;
  %1149 = cast(meta[relay.Constant][29] /* ty=Tensor[(81), float64] */, dtype="float64") /* ty=Tensor[(81), float64] */;
  %1150 = reshape(%1149, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float64] */;
  %1151 = cast(%1145, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
  %1152 = reshape(%1151, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), bool] */;
  %1153 = @func_663(%1152) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64]) */;
  %1154 = %1148.1;
  %1155 = @func_1459(%1150) /* ty=Tensor[(1, 9, 9), float64] */;
  %1156 = %1153.0;
  (%1145, %1154, %1155, meta[relay.Constant][29] /* ty=Tensor[(81), float64] */, %1156)
}

def @func_7512() -> Tensor[(10, 4, 16), float64] {
  @func_7510() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_7751() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float32]) {
  %1157 = @func_4494() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1158 = @func_4261() /* ty=(Tensor[(10, 4, 16), float32],) */;
  %1159 = %1157.0;
  %1160 = %1158.0;
  (%1159, %1160)
}

def @func_3859() -> Tensor[(10, 4, 16), float64] {
  %1161 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1161.0
}

def @func_6935(%var_6933: Tensor[(108), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(4, 9, 3), float32], Tensor[(108), float32]) {
  @func_6932(%var_6933) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(4, 9, 3), float32], Tensor[(108), float32]) */
}

def @func_10670(%var_10669: Tensor[(1680), int8]) -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), bool], Tensor[(1680), int8]) {
  %1170 = fn (%var_10651: Tensor[(1680), int8]) -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), bool], Tensor[(1680), int8]) {
    %1162 = @func_7672() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
    %1163 = cast(%var_10651, dtype="int8") /* ty=Tensor[(1680), int8] */;
    %1164 = %1162.1;
    %1165 = cast(%1164, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
    %1166 = reshape(%1163, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), int8] */;
    %1167 = reshape(%1165, newshape=[160, 4]) /* ty=Tensor[(160, 4), float64] */;
    %1168 = @func_4311(%1166, %1167) /* ty=(Tensor[(12, 10, 14), float32], Tensor[(10, 4, 16), bool], Tensor[(160, 4), float64], Tensor[(10, 4, 16), float64]) */;
    %1169 = %1168.1;
    (%1164, %1169, %var_10651)
  };
  %1170(%var_10669) /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), bool], Tensor[(1680), int8]) */
}

def @func_5055(%var_5054: int16) -> (Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], int16, Tensor[(2, 504), int16]) {
  %1179 = fn (%var_5048: int16) -> (Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], int16, Tensor[(2, 504), int16]) {
    %1171 = @func_2523() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %1172 = cast(%var_5048, dtype="int16") /* ty=int16 */;
    %1173 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 504), int16] */, dtype="int16") /* ty=Tensor[(2, 504), int16] */;
    %1174 = reshape(%1172, newshape=[]) /* ty=int16 */;
    %1175 = reshape(%1173, newshape=[7, 16, 9]) /* ty=Tensor[(7, 16, 9), int16] */;
    %1176 = @func_1679(%1174, %1175) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
    %1177 = %1171.0;
    %1178 = %1176.1;
    (%1177, %1178, %var_5048, meta[relay.Constant][30] /* ty=Tensor[(2, 504), int16] */)
  };
  %1179(%var_5054) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], int16, Tensor[(2, 504), int16]) */
}

def @func_10921(%var_10919: Tensor[(50), float32], %var_10920: Tensor[(108), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(5, 1, 10), float32], Tensor[(50), float32], Tensor[(108), float32]) {
  @func_10917(%var_10919, %var_10920) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(5, 1, 10), float32], Tensor[(50), float32], Tensor[(108), float32]) */
}

def @func_4254() -> Tensor[(10, 4, 16), float32] {
  @func_4252() /* ty=Tensor[(10, 4, 16), float32] */
}

def @func_1508() -> (Tensor[(10, 4, 16), float64],) {
  %1180 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1181 = %1180.0;
  (%1181,)
}

def @func_2762(%var_2733: Tensor[(1008), int16], %var_2749: Tensor[(72), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(72), float32]) {
  %1182 = @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %1183 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1184 = cast(meta[relay.Constant][31] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1185 = cast(%var_2733, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %1186 = reshape(%1184, newshape=[]) /* ty=int16 */;
  %1187 = reshape(%1185, newshape=[1008]) /* ty=Tensor[(1008), int16] */;
  %1188 = @func_1903(%1186, %1187) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], int16, Tensor[(1008), int16], Tensor[(10, 4, 16), float64]) */;
  %1189 = @func_856() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool]) */;
  %1190 = cast(%var_2749, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1191 = reshape(%1190, newshape=[6, 2, 6]) /* ty=Tensor[(6, 2, 6), float32] */;
  %1192 = @func_1616(%1191) /* ty=(Tensor[(6, 2, 6), float32], Tensor[(10, 4, 16), float64]) */;
  %1193 = %1182.0;
  %1194 = %1183.0;
  %1195 = %1188.1;
  %1196 = %1189.0;
  %1197 = %1192.1;
  (%1193, %1194, %1195, meta[relay.Constant][31] /* ty=int16 */, %var_2733, %1196, %1197, %var_2749)
}

def @func_6813() -> Tensor[(10, 4, 16), float64] {
  %1198 = @func_182() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1198.1
}

def @func_10917(%var_10905: Tensor[(50), float32], %var_10906: Tensor[(108), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(5, 1, 10), float32], Tensor[(50), float32], Tensor[(108), float32]) {
  %1199 = @func_10400() /* ty=(Tensor[(10, 4, 16), int64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
  %1200 = cast(%var_10905, dtype="float32") /* ty=Tensor[(50), float32] */;
  %1201 = cast(%var_10906, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1202 = reshape(%1200, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), float32] */;
  %1203 = reshape(%1201, newshape=[1, 108]) /* ty=Tensor[(1, 108), float32] */;
  %1204 = @func_6192(%1202, %1203) /* ty=(Tensor[(5, 1, 10), float32], Tensor[(4, 9, 3), float32], Tensor[(1, 108), float32]) */;
  %1205 = %1199.3;
  %1206 = %1204.0;
  (%1205, %1206, %var_10905, %var_10906)
}

def @func_9038() -> (Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64], Tensor[(6, 18), float32]) {
  %1213 = fn () -> (Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64], Tensor[(6, 18), float32]) {
    %1207 = @func_7582() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8]) */;
    %1208 = cast(meta[relay.Constant][32] /* ty=Tensor[(6, 18), float32] */, dtype="float32") /* ty=Tensor[(6, 18), float32] */;
    %1209 = reshape(%1208, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
    %1210 = @func_3794(%1209) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(10, 4, 16), float64]) */;
    %1211 = %1207.2;
    %1212 = %1210.1;
    (%1211, %1212, meta[relay.Constant][32] /* ty=Tensor[(6, 18), float32] */)
  };
  %1213() /* ty=(Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64], Tensor[(6, 18), float32]) */
}

def @func_2232() -> Tensor[(10, 4, 16), bool] {
  %1215 = fn () -> Tensor[(10, 4, 16), bool] {
    %1214 = @func_1247() /* ty=(Tensor[(10, 4, 16), bool],) */;
    %1214.0
  };
  %1215() /* ty=Tensor[(10, 4, 16), bool] */
}

def @func_9970(%var_9961: int16) -> (Tensor[(10, 4, 16), uint16], Tensor[(9, 9), float64], Tensor[(2, 504), int16], Tensor[(1, 9, 9), int64]) {
  %1216 = @func_5631() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) */;
  %1217 = cast(%var_9961, dtype="int16") /* ty=int16 */;
  %1218 = reshape(%1217, newshape=[]) /* ty=int16 */;
  %1219 = @func_5053(%1218) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], int16, Tensor[(2, 504), int16]) */;
  %1220 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 9), float64] */, dtype="float64") /* ty=Tensor[(9, 9), float64] */;
  %1221 = reshape(%1220, newshape=[81]) /* ty=Tensor[(81), float64] */;
  %1222 = @func_1954(%1221) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(81), float64]) */;
  %1223 = %1222.3;
  %1224 = cast(%var_9961, dtype="int64") /* ty=int64 */;
  %1225 = cast(%1223, dtype="int64") /* ty=Tensor[(1, 9, 9), int64] */;
  %1226 = %1216.0;
  %1227 = %1219.3;
  %1228 = right_shift(%1224, %1225) /* ty=Tensor[(1, 9, 9), int64] */;
  (%1226, meta[relay.Constant][33] /* ty=Tensor[(9, 9), float64] */, %1227, %1228)
}

def @func_5875() -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) {
  %1233 = fn () -> (Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) {
    %1229 = @func_3499() /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) */;
    %1230 = @func_3914() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %1231 = %1229.0;
    %1232 = %1230.1;
    (%1231, %1232)
  };
  %1233() /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64]) */
}

def @func_4494() -> (Tensor[(10, 4, 16), float64],) {
  %1234 = @func_3914() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1235 = %1234.1;
  (%1235,)
}

def @func_8031() -> (Tensor[(10, 4, 16), float64],) {
  %1237 = fn () -> (Tensor[(10, 4, 16), float64],) {
    %1236 = @func_4433() /* ty=Tensor[(10, 4, 16), float64] */;
    (%1236,)
  };
  %1237() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_1287() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_11581(%var_11579: Tensor[(2, 1, 9), float32], %var_11580: Tensor[(2, 13, 9), float32]) -> (Tensor[(2, 13, 9), bool],) {
  %1241 = fn (%var_11572: Tensor[(2, 1, 9), float32], %var_11573: Tensor[(2, 13, 9), float32]) -> (Tensor[(2, 13, 9), bool],) {
    %1238 = cast(%var_11572, dtype="bool") /* ty=Tensor[(2, 1, 9), bool] */;
    %1239 = cast(%var_11573, dtype="bool") /* ty=Tensor[(2, 13, 9), bool] */;
    %1240 = greater(%1238, %1239) /* ty=Tensor[(2, 13, 9), bool] */;
    (%1240,)
  };
  %1241(%var_11579, %var_11580) /* ty=(Tensor[(2, 13, 9), bool],) */
}

def @func_12098() -> (Tensor[(10, 4, 16), float64], Tensor[(16, 8, 9), bool], Tensor[(1152), uint64]) {
  %1247 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(16, 8, 9), bool], Tensor[(1152), uint64]) {
    %1242 = cast(meta[relay.Constant][34] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
    %1243 = reshape(%1242, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), uint64] */;
    %1244 = @func_4328(%1243) /* ty=(Tensor[(16, 8, 9), bool],) */;
    %1245 = @func_7340() /* ty=Tensor[(10, 4, 16), float64] */;
    %1246 = %1244.0;
    (%1245, %1246, meta[relay.Constant][34] /* ty=Tensor[(1152), uint64] */)
  };
  %1247() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(16, 8, 9), bool], Tensor[(1152), uint64]) */
}

def @func_10109() -> (Tensor[(10, 4, 16), float64],) {
  %1250 = fn () -> (Tensor[(10, 4, 16), float64],) {
    %1248 = @func_6004() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %1249 = %1248.0;
    (%1249,)
  };
  %1250() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_5308() -> (Tensor[(10, 4, 16), float64],) {
  @func_5306() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_8053() -> (Tensor[(10, 4, 16), bool],) {
  %1253 = fn () -> (Tensor[(10, 4, 16), bool],) {
    %1251 = @func_4928() /* ty=(Tensor[(10, 4, 16), bool],) */;
    %1252 = %1251.0;
    (%1252,)
  };
  %1253() /* ty=(Tensor[(10, 4, 16), bool],) */
}

def @func_2156() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %1254 = @func_1423() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1255 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1256 = %1254.0;
  %1257 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %1258 = %1255.0;
  (%1256, %1257, %1258)
}

def @func_1349() -> (Tensor[(10, 4, 16), float64],) {
  %1259 = @func_182() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1260 = %1259.1;
  (%1260,)
}

def @func_1581() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(1, 9, 9), float64], Tensor[(9, 9), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %1261 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1262 = @func_1349() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1263 = @func_1508() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1264 = cast(meta[relay.Constant][35] /* ty=Tensor[(9, 9), float64] */, dtype="float64") /* ty=Tensor[(9, 9), float64] */;
  %1265 = reshape(%1264, newshape=[1, 9, 9]) /* ty=Tensor[(1, 9, 9), float64] */;
  %1266 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1267 = @func_401() /* ty=(Tensor[(10, 4, 16), float64],) */;
  %1268 = %1261.0;
  %1269 = %1262.0;
  %1270 = %1263.0;
  %1271 = @func_1459(%1265) /* ty=Tensor[(1, 9, 9), float64] */;
  %1272 = @func_971() /* ty=Tensor[(10, 4, 16), float64] */;
  %1273 = %1266.0;
  %1274 = %1267.0;
  (%1268, %1269, %1270, %1271, meta[relay.Constant][35] /* ty=Tensor[(9, 9), float64] */, %1272, %1273, %1274)
}

def @func_10239() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(480), bool]) {
  %1275 = @func_5631() /* ty=(Tensor[(10, 4, 16), uint16], Tensor[(10, 4, 16), float64]) */;
  %1276 = cast(meta[relay.Constant][36] /* ty=Tensor[(480), bool] */, dtype="bool") /* ty=Tensor[(480), bool] */;
  %1277 = reshape(%1276, newshape=[5, 12, 8]) /* ty=Tensor[(5, 12, 8), bool] */;
  %1278 = @func_7947(%1277) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(5, 12, 8), bool]) */;
  %1279 = %1275.1;
  %1280 = %1278.0;
  (%1279, %1280, meta[relay.Constant][36] /* ty=Tensor[(480), bool] */)
}

def @func_3706() -> Tensor[(10, 4, 16), float64] {
  %1281 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
  %1281.0
}

def @func_3979() -> (Tensor[(10, 4, 16), float64],) {
  %1283 = fn () -> (Tensor[(10, 4, 16), float64],) {
    %1282 = @func_3706() /* ty=Tensor[(10, 4, 16), float64] */;
    (%1282,)
  };
  %1283() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_182() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %1284 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  %1285 = cast(%1284, dtype="float64") /* ty=Tensor[(10, 4, 16), float64] */;
  %1286 = tan(%1285) /* ty=Tensor[(10, 4, 16), float64] */;
  %1287 = @func_72() /* ty=Tensor[(10, 4, 16), float64] */;
  (%1286, %1287)
}

def @func_9092(%var_9090: Tensor[(11, 4, 12), float32]) -> (Tensor[(11, 4, 12), float32],) {
  @func_9089(%var_9090) /* ty=(Tensor[(11, 4, 12), float32],) */
}

def @func_9618() -> Tensor[(10, 4, 16), int64] {
  %1296 = fn () -> Tensor[(10, 4, 16), int64] {
    %1288 = @func_4494() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %1289 = %1288.0;
    %1290 = @func_9113() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %1291 = %1290.0;
    %1292 = cast(%1291, dtype="int64") /* ty=Tensor[(10, 4, 16), int64] */;
    %1293 = shape_of(%1289, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1294 = cast(%1289, dtype="int64") /* ty=Tensor[(10, 4, 16), int64] */;
    %1295 = dyn.reshape(%1292, %1293, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    multiply(%1294, %1295) /* ty=Tensor[(10, 4, 16), int64] */
  };
  %1296() /* ty=Tensor[(10, 4, 16), int64] */
}

def @func_3885() -> Tensor[(10, 4, 16), float64] {
  @func_3883() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_4330(%var_4329: Tensor[(16, 8, 9), uint64]) -> (Tensor[(16, 8, 9), bool],) {
  %1302 = fn (%var_4316: Tensor[(16, 8, 9), uint64]) -> (Tensor[(16, 8, 9), bool],) {
    %1297 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 8, 9), uint64] */, dtype="bool") /* ty=Tensor[(16, 8, 9), bool] */;
    %1298 = shape_of(%var_4316, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1299 = cast(%var_4316, dtype="bool") /* ty=Tensor[(16, 8, 9), bool] */;
    %1300 = dyn.reshape(%1297, %1298, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1301 = less(%1299, %1300) /* ty=Tensor[(16, 8, 9), bool] */;
    (%1301,)
  };
  %1302(%var_4329) /* ty=(Tensor[(16, 8, 9), bool],) */
}

def @func_6192(%var_6177: Tensor[(5, 1, 10), float32], %var_6186: Tensor[(1, 108), float32]) -> (Tensor[(5, 1, 10), float32], Tensor[(4, 9, 3), float32], Tensor[(1, 108), float32]) {
  %1303 = cast(%var_6177, dtype="float32") /* ty=Tensor[(5, 1, 10), float32] */;
  %1304 = cast(%var_6186, dtype="float32") /* ty=Tensor[(1, 108), float32] */;
  %1305 = reshape(%1304, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %1306 = @func_3794(%1305) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(10, 4, 16), float64]) */;
  %1307 = asin(%1303) /* ty=Tensor[(5, 1, 10), float32] */;
  %1308 = %1306.0;
  (%1307, %1308, %var_6186)
}

def @func_7510() -> Tensor[(10, 4, 16), float64] {
  @func_971() /* ty=Tensor[(10, 4, 16), float64] */
}

def @func_10789(%var_10788: Tensor[(567), int64]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(567), float32], Tensor[(567), float64]) {
  %1328 = fn (%var_10749: Tensor[(567), int64]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(567), float32], Tensor[(567), float64]) {
    %1309 = @func_3140() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */;
    %1310 = @func_4596() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), int64]) */;
    %1311 = cast(%var_10749, dtype="int64") /* ty=Tensor[(567), int64] */;
    %1312 = cast(%var_10749, dtype="int64") /* ty=Tensor[(567), int64] */;
    %1313 = reshape(%1311, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), int64] */;
    %1314 = reshape(%1312, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), int64] */;
    %1315 = @func_4100(%1313, %1314) /* ty=(Tensor[(7, 9, 9), bool], Tensor[(7, 9, 9), float64]) */;
    %1316 = %1315.1;
    %1317 = cast(%1316, dtype="float32") /* ty=Tensor[(7, 9, 9), float32] */;
    %1318 = shape_of(%var_10749, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1319 = cast(%var_10749, dtype="float32") /* ty=Tensor[(567), float32] */;
    %1320 = dyn.reshape(%1317, %1318, newshape=[]) /* ty=Tensor[(?), float32] */;
    %1321 = cast(%var_10749, dtype="float32") /* ty=Tensor[(567), float32] */;
    %1322 = log(%1321) /* ty=Tensor[(567), float32] */;
    %1323 = cast(%1322, dtype="float64") /* ty=Tensor[(567), float64] */;
    %1324 = %1309.0;
    %1325 = %1310.0;
    %1326 = floor_mod(%1319, %1320) /* ty=Tensor[(567), float32] */;
    %1327 = atan(%1323) /* ty=Tensor[(567), float64] */;
    (%1324, %1325, %1326, %1327)
  };
  %1328(%var_10788) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(567), float32], Tensor[(567), float64]) */
}

def @func_10089() -> (Tensor[(10, 4, 16), float64],) {
  @func_10087() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_11608(%var_11607: Tensor[(640), bool]) -> (Tensor[(14, 11, 7), float64], Tensor[(10, 4, 16), bool], Tensor[(640), bool]) {
  %1337 = fn (%var_11596: Tensor[(640), bool]) -> (Tensor[(14, 11, 7), float64], Tensor[(10, 4, 16), bool], Tensor[(640), bool]) {
    %1329 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 11, 7), float64] */, dtype="float64") /* ty=Tensor[(14, 11, 7), float64] */;
    %1330 = cast(%var_11596, dtype="bool") /* ty=Tensor[(640), bool] */;
    %1331 = cast(%var_11596, dtype="float32") /* ty=Tensor[(640), float32] */;
    %1332 = reshape(%1330, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), bool] */;
    %1333 = reshape(%1331, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float32] */;
    %1334 = @func_1116(%1332, %1333) /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %1335 = cosh(%1329) /* ty=Tensor[(14, 11, 7), float64] */;
    %1336 = %1334.1;
    (%1335, %1336, %var_11596)
  };
  %1337(%var_11607) /* ty=(Tensor[(14, 11, 7), float64], Tensor[(10, 4, 16), bool], Tensor[(640), bool]) */
}

def @func_7290(%var_7288: Tensor[(81), float64], %var_7289: Tensor[(900), float64]) -> (Tensor[(81), int32], Tensor[(10, 4, 16), int64], Tensor[(900), float64]) {
  @func_7286(%var_7288, %var_7289) /* ty=(Tensor[(81), int32], Tensor[(10, 4, 16), int64], Tensor[(900), float64]) */
}

def @func_10868(%var_10861: Tensor[(132), int32], %var_10862: Tensor[(18, 4), float32]) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(1, 72), float32], int32, Tensor[(132), int32], Tensor[(18, 4), float32]) {
  %1338 = cast(-1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1339 = cast(%var_10861, dtype="int32") /* ty=Tensor[(132), int32] */;
  %1340 = cast(%var_10862, dtype="float32") /* ty=Tensor[(18, 4), float32] */;
  %1341 = reshape(%1338, newshape=[]) /* ty=int32 */;
  %1342 = reshape(%1339, newshape=[12, 11, 1]) /* ty=Tensor[(12, 11, 1), int32] */;
  %1343 = reshape(%1340, newshape=[1, 72]) /* ty=Tensor[(1, 72), float32] */;
  %1344 = @func_4054(%1341, %1342, %1343) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(12, 11, ?), float32], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(6, 2, 6), float32], Tensor[(1, 72), float32], Tensor[(10, 4, 16), bool], Tensor[(12, 11, 1), float32]) */;
  %1345 = @func_4216() /* ty=Tensor[(10, 4, 16), float64] */;
  %1346 = @func_2231() /* ty=Tensor[(10, 4, 16), bool] */;
  %1347 = %1344.5;
  (%1345, %1346, %1347, -1 /* ty=int32 */, %var_10861, %var_10862)
}

def @func_3596(%var_3594: Tensor[(10, 4, 16), float64]) -> (Tensor[(10, 4, 16), bool],) {
  @func_3593(%var_3594) /* ty=(Tensor[(10, 4, 16), bool],) */
}

def @func_8007() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  @func_8005() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

def @func_1462(%var_1460: Tensor[(1, 9, 9), float64]) -> Tensor[(1, 9, 9), float64] {
  @func_1459(%var_1460) /* ty=Tensor[(1, 9, 9), float64] */
}

def @func_1683(%var_1681: int16, %var_1682: Tensor[(7, 16, 9), int16]) -> (Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) {
  @func_1679(%var_1681, %var_1682) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(7, 16, 9), int8], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */
}

def @func_3142() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) {
  @func_3140() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(81), float64], Tensor[(81), uint16], Tensor[(10, 4, 16), int8], Tensor[(10, 4, 16), float64]) */
}

def @func_5159(%var_5157: int16) -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(7, 16, 9), int8], int16) {
  @func_5156(%var_5157) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64], Tensor[(7, 16, 9), int8], int16) */
}

def @func_11564() -> (Tensor[(10, 4, 16), float64],) {
  @func_11562() /* ty=(Tensor[(10, 4, 16), float64],) */
}

def @func_3376() -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
  %1366 = fn () -> (Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) {
    %1348 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %1349 = @func_1432() /* ty=(Tensor[(10, 4, 16), float64],) */;
    %1350 = %1349.0;
    %1351 = cast(%1350, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
    %1352 = reshape(%1351, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), bool] */;
    %1353 = @func_663(%1352) /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), int64]) */;
    %1354 = cast(%1350, dtype="bool") /* ty=Tensor[(10, 4, 16), bool] */;
    %1355 = %1353.0;
    %1356 = cast(%1355, dtype="float32") /* ty=Tensor[(10, 4, 16), float32] */;
    %1357 = reshape(%1354, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), bool] */;
    %1358 = reshape(%1356, newshape=[10, 4, 16]) /* ty=Tensor[(10, 4, 16), float32] */;
    %1359 = @func_1116(%1357, %1358) /* ty=(Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), bool], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %1360 = @func_1832() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %1361 = @func_1285() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */;
    %1362 = %1348.1;
    %1363 = %1359.2;
    %1364 = %1360.1;
    %1365 = %1361.0;
    (%1362, %1350, %1355, %1363, %1364, %1365)
  };
  %1366() /* ty=(Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64], Tensor[(10, 4, 16), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_5589(%var_5574: Tensor[(12, 15, 5), float64]) -> Tensor[(12, 15, 5), float64] {
  %0 = cast(%var_5574, dtype="float64") /* ty=Tensor[(12, 15, 5), float64] */;
  cos(%0) /* ty=Tensor[(12, 15, 5), float64] */
}

def @func_5874(%var_5846: Tensor[(14, 4, 13), float64], %var_5869: Tensor[(1620), int32]) -> (Tensor[(14, 4, 13), float64], Tensor[(1620), int32], Tensor[(2, 800), uint32], Tensor[(1620), int32]) {
  %1 = cast(%var_5846, dtype="float64") /* ty=Tensor[(14, 4, 13), float64] */;
  %2 = erf(%1) /* ty=Tensor[(14, 4, 13), float64] */;
  %3 = cast(%2, dtype="float64") /* ty=Tensor[(14, 4, 13), float64] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 800), uint32] */, dtype="uint32") /* ty=Tensor[(2, 800), uint32] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 800), uint32] */, dtype="uint32") /* ty=Tensor[(2, 800), uint32] */;
  %6 = cast(%var_5869, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %7 = reshape(%4, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %8 = reshape(%5, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %9 = reshape(%6, newshape=[1620]) /* ty=Tensor[(1620), int32] */;
  %10 = @func_136(%7, %8, %9) /* ty=(Tensor[(10, 16, 10), bool], Tensor[(15, 9, 12), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(15, 9, 12), float32]) */;
  %11 = asin(%3) /* ty=Tensor[(14, 4, 13), float64] */;
  %12 = %10.2;
  (%11, %12, meta[relay.Constant][0] /* ty=Tensor[(2, 800), uint32] */, %var_5869)
}

def @func_4624() -> float64 {
  %13 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
  %13.2
}

def @func_5252() -> (Tensor[(2, 120), float64],) {
  %14 = @func_4108() /* ty=Tensor[(2, 120), float64] */;
  (%14,)
}

def @func_5098() -> Tensor[(2, 120), float64] {
  @func_4108() /* ty=Tensor[(2, 120), float64] */
}

def @func_3775(%var_3748: Tensor[(585, 3), uint32], %var_3771: Tensor[(48), float32]) -> (Tensor[(585, 3), uint16], Tensor[(585, 3), float64], Tensor[(8, 6, 1), float32], Tensor[(48), float32]) {
  %15 = @func_3566() /* ty=(Tensor[(585, 1), uint32],) */;
  %16 = %15.0;
  %17 = cast(%16, dtype="uint16") /* ty=Tensor[(585, 1), uint16] */;
  %18 = cast(%var_3748, dtype="uint16") /* ty=Tensor[(585, 3), uint16] */;
  %19 = cast(%var_3748, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
  %20 = cos(%19) /* ty=Tensor[(585, 3), float32] */;
  %21 = cast(%16, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
  %22 = cast(%20, dtype="float64") /* ty=Tensor[(585, 3), float64] */;
  %23 = cast(%var_3771, dtype="float32") /* ty=Tensor[(48), float32] */;
  %24 = reshape(%23, newshape=[8, 6, 1]) /* ty=Tensor[(8, 6, 1), float32] */;
  %25 = @func_2808(%24) /* ty=(Tensor[(8, 1, 1), float64], Tensor[(8, 6, 1), float32]) */;
  %26 = bitwise_and(%17, %18) /* ty=Tensor[(585, 3), uint16] */;
  %27 = mod(%21, %22) /* ty=Tensor[(585, 3), float64] */;
  %28 = %25.1;
  (%26, %27, %28, %var_3771)
}

def @func_5063(%var_5043: Tensor[(240), float32]) -> (Tensor[(15, 13, 3), float64], Tensor[(2, 10, 12), float32], Tensor[(240), float32], Tensor[(2, 120), float64]) {
  %29 = @func_3830() /* ty=(Tensor[(15, 13, 3), float64],) */;
  %30 = cast(%var_5043, dtype="float32") /* ty=Tensor[(240), float32] */;
  %31 = reshape(%30, newshape=[2, 10, 12]) /* ty=Tensor[(2, 10, 12), float32] */;
  %32 = @func_4704() /* ty=(Tensor[(2, 120), float64],) */;
  %33 = %29.0;
  %34 = @func_2843(%31) /* ty=Tensor[(2, 10, 12), float32] */;
  %35 = %32.0;
  (%33, %34, %var_5043, %35)
}

def @func_6134() -> (Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), int32], Tensor[(2925), uint32]) {
  %36 = @func_4135() /* ty=(Tensor[(16, 8, 9), float64],) */;
  %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(2925), uint32] */, dtype="uint32") /* ty=Tensor[(2925), uint32] */;
  %38 = reshape(%37, newshape=[585, 5]) /* ty=Tensor[(585, 5), uint32] */;
  %39 = @func_4824(%38) /* ty=(Tensor[(585, 5), uint8], Tensor[(15, 9, 12), int32], Tensor[(1620), int32]) */;
  %40 = %36.0;
  %41 = %39.1;
  (%40, %41, meta[relay.Constant][1] /* ty=Tensor[(2925), uint32] */)
}

def @func_5161() -> (Tensor[(2, 120), float64],) {
  %42 = @func_5098() /* ty=Tensor[(2, 120), float64] */;
  (%42,)
}

def @func_5410(%var_5398: Tensor[(1, 11), float32]) -> (Tensor[(1, 11), float32],) {
  %43 = cast(-7.00791f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %44 = cast(%var_5398, dtype="float32") /* ty=Tensor[(1, 11), float32] */;
  %45 = multiply(%43, %44) /* ty=Tensor[(1, 11), float32] */;
  (%45,)
}

def @func_5377() -> Tensor[(585, 1), uint32] {
  %46 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
  %46.0
}

def @func_3566() -> (Tensor[(585, 1), uint32],) {
  %47 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
  %48 = %47.5;
  (%48,)
}

def @func_362(%var_353: Tensor[(2, 12, 10), float32]) -> (Tensor[(2, 12, 10), float32], Tensor[(1620), int32], Tensor[(1600), uint32], Tensor[(6, 270), int32]) {
  %49 = cast(%var_353, dtype="float32") /* ty=Tensor[(2, 12, 10), float32] */;
  %50 = cast(meta[relay.Constant][2] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
  %51 = cast(meta[relay.Constant][2] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
  %52 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 270), int32] */, dtype="int32") /* ty=Tensor[(6, 270), int32] */;
  %53 = reshape(%50, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %54 = reshape(%51, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %55 = reshape(%52, newshape=[1620]) /* ty=Tensor[(1620), int32] */;
  %56 = @func_136(%53, %54, %55) /* ty=(Tensor[(10, 16, 10), bool], Tensor[(15, 9, 12), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(15, 9, 12), float32]) */;
  %57 = rsqrt(%49) /* ty=Tensor[(2, 12, 10), float32] */;
  %58 = %56.2;
  (%57, %58, meta[relay.Constant][2] /* ty=Tensor[(1600), uint32] */, meta[relay.Constant][3] /* ty=Tensor[(6, 270), int32] */)
}

def @func_529(%var_517: Tensor[(5, 10, 3), float32]) -> Tensor[(5, 10, 3), float32] {
  %59 = cast(%var_517, dtype="float32") /* ty=Tensor[(5, 10, 3), float32] */;
  log10(%59) /* ty=Tensor[(5, 10, 3), float32] */
}

def @func_5226(%var_5186: Tensor[(1, 10, 2), float32], %var_5201: Tensor[(150), float32], %var_5221: Tensor[(5, 10, 3), float32]) -> (Tensor[(1, 10, 2), float32], Tensor[(150), float32], Tensor[(5, 10, 3), bool]) {
  %60 = cast(%var_5186, dtype="float32") /* ty=Tensor[(1, 10, 2), float32] */;
  %61 = cast(%var_5201, dtype="float32") /* ty=Tensor[(150), float32] */;
  %62 = reshape(%61, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), float32] */;
  %63 = @func_529(%62) /* ty=Tensor[(5, 10, 3), float32] */;
  %64 = cast(%var_5221, dtype="bool") /* ty=Tensor[(5, 10, 3), bool] */;
  %65 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%63, dtype="bool") /* ty=Tensor[(5, 10, 3), bool] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %68 = atanh(%60) /* ty=Tensor[(1, 10, 2), float32] */;
  %69 = not_equal(%66, %67) /* ty=Tensor[(5, 10, 3), bool] */;
  (%68, %var_5201, %69)
}

def @func_4904(%var_4852: Tensor[(1, 352), float64]) -> (Tensor[(1056), int32], Tensor[(10, 352), bool], Tensor[(15, 13, 3), uint16]) {
  %70 = @func_4551() /* ty=(Tensor[(15, 13, 3), float64], Tensor[(1, 6), float64]) */;
  %71 = %70.0;
  %72 = cast(%71, dtype="float64") /* ty=Tensor[(15, 13, 3), float64] */;
  %73 = cast(%var_4852, dtype="float64") /* ty=Tensor[(1, 352), float64] */;
  %74 = reshape(%72, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), float64] */;
  %75 = reshape(%73, newshape=[1, 352]) /* ty=Tensor[(1, 352), float64] */;
  %76 = @func_4486(%74, %75) /* ty=(Tensor[(15, 13, 3), int64], Tensor[(352), float64], int32, Tensor[(560), int32], Tensor[(1056), int32], Tensor[(1, 352), float64]) */;
  %77 = cast(%var_4852, dtype="bool") /* ty=Tensor[(1, 352), bool] */;
  %78 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 352), float64] */, dtype="bool") /* ty=Tensor[(10, 352), bool] */;
  %79 = cast(%71, dtype="float64") /* ty=Tensor[(15, 13, 3), float64] */;
  %80 = tan(%79) /* ty=Tensor[(15, 13, 3), float64] */;
  %81 = cast(%71, dtype="uint16") /* ty=Tensor[(15, 13, 3), uint16] */;
  %82 = shape_of(%80, dtype="int32") /* ty=Tensor[(3), int32] */;
  %83 = cast(%80, dtype="uint16") /* ty=Tensor[(15, 13, 3), uint16] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %85 = %76.4;
  %86 = less_equal(%77, %78) /* ty=Tensor[(10, 352), bool] */;
  %87 = right_shift(%83, %84) /* ty=Tensor[(15, 13, 3), uint16] */;
  (%85, %86, %87)
}

def @func_7116() -> (Tensor[(15, 9, 12), float32],) {
  %88 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
  %89 = %88.6;
  (%89,)
}

def @func_7080(%var_7044: Tensor[(75, 2), float32], %var_7067: Tensor[(2, 120), bool]) -> (Tensor[(2, 120), float64], Tensor[(5, 10, 3), float32], Tensor[(75, 2), float32], Tensor[(2, 120), int8]) {
  %90 = cast(%var_7044, dtype="float32") /* ty=Tensor[(75, 2), float32] */;
  %91 = reshape(%90, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), float32] */;
  %92 = @func_5098() /* ty=Tensor[(2, 120), float64] */;
  %93 = cast(%92, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %94 = reshape(%93, newshape=[2, 120]) /* ty=Tensor[(2, 120), float64] */;
  %95 = @func_6594(%94) /* ty=Tensor[(2, 120), bool] */;
  %96 = cast(%var_7067, dtype="int8") /* ty=Tensor[(2, 120), int8] */;
  %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(2), int32] */;
  %98 = cast(%95, dtype="int8") /* ty=Tensor[(2, 120), int8] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %100 = @func_529(%91) /* ty=Tensor[(5, 10, 3), float32] */;
  %101 = left_shift(%98, %99) /* ty=Tensor[(2, 120), int8] */;
  (%92, %100, %var_7044, %101)
}

def @func_3881(%var_3846: Tensor[(9, 7, 16), uint16], %var_3847: Tensor[(9, 7, 16), uint16], %var_3853: float64, %var_3877: Tensor[(352), float64]) -> (Tensor[(9, 7, 16), uint16], Tensor[(1, 6), float64], float64, Tensor[(9, 7, 16), float32], Tensor[(16, 8, 9), float64], Tensor[(1600), uint32], Tensor[(352), float64], Tensor[(240), float32]) {
  %102 = cast(%var_3847, dtype="uint16") /* ty=Tensor[(9, 7, 16), uint16] */;
  %103 = shape_of(%var_3846, dtype="int32") /* ty=Tensor[(3), int32] */;
  %104 = cast(%var_3846, dtype="uint16") /* ty=Tensor[(9, 7, 16), uint16] */;
  %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %106 = cast(%var_3853, dtype="float64") /* ty=float64 */;
  %107 = reshape(%106, newshape=[]) /* ty=float64 */;
  %108 = @func_1569(%107) /* ty=(Tensor[(1, 6), float64],) */;
  %109 = cast(%var_3847, dtype="float32") /* ty=Tensor[(9, 7, 16), float32] */;
  %110 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
  %111 = cast(%var_3877, dtype="float64") /* ty=Tensor[(352), float64] */;
  %112 = cast(meta[relay.Constant][5] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %113 = reshape(%111, newshape=[11, 16, 2]) /* ty=Tensor[(11, 16, 2), float64] */;
  %114 = reshape(%112, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %115 = @func_1170(%113, %114) /* ty=(Tensor[(11, 16, 2), float64], Tensor[(1600), uint32], Tensor[(240), float32]) */;
  %116 = left_shift(%104, %105) /* ty=Tensor[(9, 7, 16), uint16] */;
  %117 = %108.0;
  %118 = rsqrt(%109) /* ty=Tensor[(9, 7, 16), float32] */;
  %119 = %110.0;
  %120 = %115.1;
  (%116, %117, %var_3853, %118, %119, %120, %var_3877, meta[relay.Constant][5] /* ty=Tensor[(240), float32] */)
}

def @func_4486(%var_4456: Tensor[(15, 13, 3), float64], %var_4475: Tensor[(1, 352), float64]) -> (Tensor[(15, 13, 3), int64], Tensor[(352), float64], int32, Tensor[(560), int32], Tensor[(1056), int32], Tensor[(1, 352), float64]) {
  %121 = @func_3830() /* ty=(Tensor[(15, 13, 3), float64],) */;
  %122 = %121.0;
  %123 = cast(%var_4456, dtype="int64") /* ty=Tensor[(15, 13, 3), int64] */;
  %124 = shape_of(%122, dtype="int32") /* ty=Tensor[(3), int32] */;
  %125 = cast(%122, dtype="int64") /* ty=Tensor[(15, 13, 3), int64] */;
  %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %127 = cast(8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %128 = cast(meta[relay.Constant][6] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
  %129 = cast(meta[relay.Constant][7] /* ty=Tensor[(1056), int32] */, dtype="int32") /* ty=Tensor[(1056), int32] */;
  %130 = cast(%var_4475, dtype="float64") /* ty=Tensor[(1, 352), float64] */;
  %131 = reshape(%127, newshape=[]) /* ty=int32 */;
  %132 = reshape(%128, newshape=[16, 7, 5]) /* ty=Tensor[(16, 7, 5), int32] */;
  %133 = reshape(%129, newshape=[1056]) /* ty=Tensor[(1056), int32] */;
  %134 = reshape(%130, newshape=[352]) /* ty=Tensor[(352), float64] */;
  %135 = @func_4248(%131, %132, %133, %134) /* ty=(Tensor[(16, 7, 5), bool], Tensor[(1600), uint32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(2, 120), bool]) */;
  %136 = maximum(%125, %126) /* ty=Tensor[(15, 13, 3), int64] */;
  %137 = %135.3;
  (%136, %137, 8 /* ty=int32 */, meta[relay.Constant][6] /* ty=Tensor[(560), int32] */, meta[relay.Constant][7] /* ty=Tensor[(1056), int32] */, %var_4475)
}

def @func_2048(%var_2027: Tensor[(11, 12, 8), int32], %var_2028: Tensor[(11, 12, 8), int32], %var_2033: Tensor[(8, 44), float64], %var_2034: Tensor[(120, 2), float32]) -> (Tensor[(11, 12, 8), int32], Tensor[(1600), uint32], Tensor[(8, 44), float64], Tensor[(120, 2), float32]) {
  %138 = cast(%var_2028, dtype="int32") /* ty=Tensor[(11, 12, 8), int32] */;
  %139 = shape_of(%var_2027, dtype="int32") /* ty=Tensor[(3), int32] */;
  %140 = cast(%var_2027, dtype="int32") /* ty=Tensor[(11, 12, 8), int32] */;
  %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %142 = cast(%var_2033, dtype="float64") /* ty=Tensor[(8, 44), float64] */;
  %143 = cast(%var_2034, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
  %144 = reshape(%142, newshape=[11, 16, 2]) /* ty=Tensor[(11, 16, 2), float64] */;
  %145 = reshape(%143, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %146 = @func_1170(%144, %145) /* ty=(Tensor[(11, 16, 2), float64], Tensor[(1600), uint32], Tensor[(240), float32]) */;
  %147 = add(%140, %141) /* ty=Tensor[(11, 12, 8), int32] */;
  %148 = %146.1;
  (%147, %148, %var_2033, %var_2034)
}

def @func_3990() -> (Tensor[(15, 13, 3), float32], Tensor[(1620), int32], Tensor[(2, 120), float32]) {
  %149 = @func_3830() /* ty=(Tensor[(15, 13, 3), float64],) */;
  %150 = %149.0;
  %151 = cast(%150, dtype="float64") /* ty=Tensor[(15, 13, 3), float64] */;
  %152 = exp(%151) /* ty=Tensor[(15, 13, 3), float64] */;
  %153 = cast(%152, dtype="float32") /* ty=Tensor[(15, 13, 3), float32] */;
  %154 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 120), float32] */, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %155 = reshape(%154, newshape=[2, 12, 10]) /* ty=Tensor[(2, 12, 10), float32] */;
  %156 = @func_362(%155) /* ty=(Tensor[(2, 12, 10), float32], Tensor[(1620), int32], Tensor[(1600), uint32], Tensor[(6, 270), int32]) */;
  %157 = log(%153) /* ty=Tensor[(15, 13, 3), float32] */;
  %158 = %156.1;
  (%157, %158, meta[relay.Constant][8] /* ty=Tensor[(2, 120), float32] */)
}

def @func_4199(%var_4170: Tensor[(1620), int32], %var_4187: Tensor[(240), float32]) -> (Tensor[(1620), float64], Tensor[(48), float32], Tensor[(1755), uint32], Tensor[(48), float32], Tensor[(1600), uint32], Tensor[(352), float64], Tensor[(240), float32]) {
  %159 = @func_3990() /* ty=(Tensor[(15, 13, 3), float32], Tensor[(1620), int32], Tensor[(2, 120), float32]) */;
  %160 = %159.1;
  %161 = cast(%var_4170, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %162 = shape_of(%160, dtype="int32") /* ty=Tensor[(1), int32] */;
  %163 = cast(%160, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?), float64] */;
  %165 = cast(meta[relay.Constant][9] /* ty=Tensor[(1755), uint32] */, dtype="uint32") /* ty=Tensor[(1755), uint32] */;
  %166 = cast(meta[relay.Constant][10] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %167 = reshape(%165, newshape=[585, 3]) /* ty=Tensor[(585, 3), uint32] */;
  %168 = reshape(%166, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %169 = @func_3775(%167, %168) /* ty=(Tensor[(585, 3), uint16], Tensor[(585, 3), float64], Tensor[(8, 6, 1), float32], Tensor[(48), float32]) */;
  %170 = cast(meta[relay.Constant][11] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
  %171 = cast(%var_4187, dtype="float32") /* ty=Tensor[(240), float32] */;
  %172 = reshape(%170, newshape=[11, 16, 2]) /* ty=Tensor[(11, 16, 2), float64] */;
  %173 = reshape(%171, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %174 = @func_1170(%172, %173) /* ty=(Tensor[(11, 16, 2), float64], Tensor[(1600), uint32], Tensor[(240), float32]) */;
  %175 = subtract(%163, %164) /* ty=Tensor[(1620), float64] */;
  %176 = %169.3;
  %177 = %174.1;
  (%175, %176, meta[relay.Constant][9] /* ty=Tensor[(1755), uint32] */, meta[relay.Constant][10] /* ty=Tensor[(48), float32] */, %177, meta[relay.Constant][11] /* ty=Tensor[(352), float64] */, %var_4187)
}

def @func_4049(%var_4019: Tensor[(585), uint32], %var_4033: Tensor[(1056), int32], %var_4046: float64) -> (Tensor[(15, 13, 3), bool], Tensor[(585), uint32], Tensor[(1600), float64], Tensor[(120, 2), float32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(120, 2), float32], Tensor[(8, 6, 1), float32], Tensor[(48), float32], Tensor[(1, 6), float64], float64) {
  %178 = cast(%var_4019, dtype="uint32") /* ty=Tensor[(585), uint32] */;
  %179 = cast(%var_4019, dtype="uint32") /* ty=Tensor[(585), uint32] */;
  %180 = reshape(%178, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), uint32] */;
  %181 = reshape(%179, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), uint32] */;
  %182 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
  %183 = %182.2;
  %184 = cast(%183, dtype="float64") /* ty=Tensor[(1600), float64] */;
  %185 = cast(%var_4033, dtype="int32") /* ty=Tensor[(1056), int32] */;
  %186 = cast(%var_4033, dtype="int32") /* ty=Tensor[(1056), int32] */;
  %187 = cast(meta[relay.Constant][12] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
  %188 = cast(meta[relay.Constant][13] /* ty=Tensor[(120, 2), float32] */, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
  %189 = reshape(%185, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), int32] */;
  %190 = reshape(%186, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), int32] */;
  %191 = reshape(%187, newshape=[8, 44]) /* ty=Tensor[(8, 44), float64] */;
  %192 = reshape(%188, newshape=[120, 2]) /* ty=Tensor[(120, 2), float32] */;
  %193 = @func_2048(%189, %190, %191, %192) /* ty=(Tensor[(11, 12, 8), int32], Tensor[(1600), uint32], Tensor[(8, 44), float64], Tensor[(120, 2), float32]) */;
  %194 = cast(meta[relay.Constant][14] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %195 = reshape(%194, newshape=[8, 6, 1]) /* ty=Tensor[(8, 6, 1), float32] */;
  %196 = @func_2808(%195) /* ty=(Tensor[(8, 1, 1), float64], Tensor[(8, 6, 1), float32]) */;
  %197 = cast(%var_4046, dtype="float64") /* ty=float64 */;
  %198 = reshape(%197, newshape=[]) /* ty=float64 */;
  %199 = @func_3682(%198) /* ty=(float64, Tensor[(585, 6), bool], Tensor[(15, 13, 3), bool], Tensor[(1, 6), float64], Tensor[(585, ?), int8]) */;
  %200 = @func_3251(%180, %181) /* ty=Tensor[(15, 13, 3), bool] */;
  %201 = log2(%184) /* ty=Tensor[(1600), float64] */;
  %202 = %193.3;
  %203 = %196.1;
  %204 = %199.3;
  (%200, %var_4019, %201, %202, %var_4033, meta[relay.Constant][12] /* ty=Tensor[(352), float64] */, meta[relay.Constant][13] /* ty=Tensor[(120, 2), float32] */, %203, meta[relay.Constant][14] /* ty=Tensor[(48), float32] */, %204, %var_4046)
}

def @func_4704() -> (Tensor[(2, 120), float64],) {
  %205 = @func_4108() /* ty=Tensor[(2, 120), float64] */;
  (%205,)
}

def @func_3830() -> (Tensor[(15, 13, 3), float64],) {
  %206 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
  %207 = %206.4;
  %208 = cast(%207, dtype="float64") /* ty=Tensor[(15, 13, 3), float64] */;
  %209 = asinh(%208) /* ty=Tensor[(15, 13, 3), float64] */;
  (%209,)
}

def @func_5660(%var_5634: Tensor[(1248), float32]) -> (Tensor[(2, 120), float64], Tensor[(1620), int32], Tensor[(1248), float32]) {
  %210 = @func_5252() /* ty=(Tensor[(2, 120), float64],) */;
  %211 = cast(%var_5634, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %212 = reshape(%211, newshape=[6, 16, 13]) /* ty=Tensor[(6, 16, 13), float32] */;
  %213 = @func_2344(%212) /* ty=(Tensor[(6, 16, 13), float32], Tensor[(10, 16, 10), bool], Tensor[(1600), uint32], Tensor[(1620), int32]) */;
  %214 = %210.0;
  %215 = %213.3;
  (%214, %215, %var_5634)
}

def @func_6508() -> (Tensor[(2, 120), float64], Tensor[(1, 11), float32], Tensor[(11), float32]) {
  %216 = @func_5161() /* ty=(Tensor[(2, 120), float64],) */;
  %217 = cast(meta[relay.Constant][15] /* ty=Tensor[(11), float32] */, dtype="float32") /* ty=Tensor[(11), float32] */;
  %218 = reshape(%217, newshape=[1, 11]) /* ty=Tensor[(1, 11), float32] */;
  %219 = @func_5410(%218) /* ty=(Tensor[(1, 11), float32],) */;
  %220 = %216.0;
  %221 = %219.0;
  (%220, %221, meta[relay.Constant][15] /* ty=Tensor[(11), float32] */)
}

def @func_6341(%var_6252: Tensor[(9, 9, 8), float64], %var_6266: Tensor[(9, 9, 8), uint32], %var_6305: Tensor[(576), float32], %var_6316: Tensor[(1620), int32], %var_6319: Tensor[(1920), int8], %var_6320: Tensor[(15, 117), uint32]) -> (Tensor[(1056), int32], Tensor[(9, 9, 8), uint16], Tensor[(16, 8, 9), float64], Tensor[(1600), float64], Tensor[(585), uint32], Tensor[(2925), uint32], Tensor[(585, 240), int16], Tensor[(576), float32], Tensor[(240), float32], Tensor[(8, 70), float32], Tensor[(15, 9, 12), int32], Tensor[(1620), int32], Tensor[(585, 3), float64], Tensor[(1920), int8], Tensor[(15, 117), uint32], Tensor[(15, 13, 3), uint16], Tensor[(352), float64], Tensor[(15, 13, 3), bool]) {
  %222 = @func_4624() /* ty=float64 */;
  %223 = cast(%222, dtype="uint32") /* ty=uint32 */;
  %224 = cast(%var_6252, dtype="uint32") /* ty=Tensor[(9, 9, 8), uint32] */;
  %225 = bitwise_and(%223, %224) /* ty=Tensor[(9, 9, 8), uint32] */;
  %226 = cast(%var_6266, dtype="uint16") /* ty=Tensor[(9, 9, 8), uint16] */;
  %227 = shape_of(%225, dtype="int32") /* ty=Tensor[(3), int32] */;
  %228 = cast(%225, dtype="uint16") /* ty=Tensor[(9, 9, 8), uint16] */;
  %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %230 = @func_4135() /* ty=(Tensor[(16, 8, 9), float64],) */;
  %231 = cast(meta[relay.Constant][17] /* ty=Tensor[(585), uint32] */, dtype="uint32") /* ty=Tensor[(585), uint32] */;
  %232 = cast(meta[relay.Constant][16] /* ty=Tensor[(1056), int32] */, dtype="int32") /* ty=Tensor[(1056), int32] */;
  %233 = cast(%222, dtype="float64") /* ty=float64 */;
  %234 = reshape(%231, newshape=[585]) /* ty=Tensor[(585), uint32] */;
  %235 = reshape(%232, newshape=[1056]) /* ty=Tensor[(1056), int32] */;
  %236 = reshape(%233, newshape=[]) /* ty=float64 */;
  %237 = @func_4049(%234, %235, %236) /* ty=(Tensor[(15, 13, 3), bool], Tensor[(585), uint32], Tensor[(1600), float64], Tensor[(120, 2), float32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(120, 2), float32], Tensor[(8, 6, 1), float32], Tensor[(48), float32], Tensor[(1, 6), float64], float64) */;
  %238 = @func_6134() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), int32], Tensor[(2925), uint32]) */;
  %239 = cast(%var_6305, dtype="float32") /* ty=Tensor[(576), float32] */;
  %240 = cast(meta[relay.Constant][18] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %241 = reshape(%239, newshape=[9, 4, 16]) /* ty=Tensor[(9, 4, 16), float32] */;
  %242 = reshape(%240, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %243 = @func_4423(%241, %242) /* ty=(Tensor[(9, 4, 16), float64], Tensor[(1620), int32], Tensor[(1620), int32], Tensor[(1620), int32], Tensor[(9, 4, 16), bool], Tensor[(1, 6), float64], Tensor[(585, 240), int16], Tensor[(1, 6), float64], Tensor[(5, 10, 3), float32], Tensor[(25, 6), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32]) */;
  %244 = cast(meta[relay.Constant][16] /* ty=Tensor[(1056), int32] */, dtype="int32") /* ty=Tensor[(1056), int32] */;
  %245 = reshape(%244, newshape=[1056]) /* ty=Tensor[(1056), int32] */;
  %246 = @func_6051(%245) /* ty=(float64, Tensor[(352), float64], Tensor[(8, 70), int32], Tensor[(1056), int32], Tensor[(352), float64]) */;
  %247 = %246.2;
  %248 = cast(%247, dtype="float64") /* ty=Tensor[(8, 70), float64] */;
  %249 = log2(%248) /* ty=Tensor[(8, 70), float64] */;
  %250 = cast(%249, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %251 = cast(%var_6316, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %252 = cast(%var_6316, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %253 = reshape(%251, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
  %254 = reshape(%252, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
  %255 = @func_39(%253, %254) /* ty=(Tensor[(15, 9, 12), int32], Tensor[(15, 9, 12), float32]) */;
  %256 = cast(%var_6319, dtype="int8") /* ty=Tensor[(1920), int8] */;
  %257 = cast(%var_6319, dtype="int8") /* ty=Tensor[(1920), int8] */;
  %258 = cast(%var_6320, dtype="uint32") /* ty=Tensor[(15, 117), uint32] */;
  %259 = reshape(%256, newshape=[8, 16, 15]) /* ty=Tensor[(8, 16, 15), int8] */;
  %260 = reshape(%257, newshape=[8, 16, 15]) /* ty=Tensor[(8, 16, 15), int8] */;
  %261 = reshape(%258, newshape=[1755]) /* ty=Tensor[(1755), uint32] */;
  %262 = @func_5614(%259, %260, %261) /* ty=(Tensor[(8, 16, 15), int8], Tensor[(585, 3), float64], Tensor[(1755), uint32], Tensor[(48), float32], Tensor[(15, 9, 12), float64]) */;
  %263 = cast(meta[relay.Constant][19] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
  %264 = reshape(%263, newshape=[1, 352]) /* ty=Tensor[(1, 352), float64] */;
  %265 = @func_4904(%264) /* ty=(Tensor[(1056), int32], Tensor[(10, 352), bool], Tensor[(15, 13, 3), uint16]) */;
  %266 = %265.2;
  %267 = cast(%266, dtype="uint32") /* ty=Tensor[(15, 13, 3), uint32] */;
  %268 = cast(%266, dtype="uint32") /* ty=Tensor[(15, 13, 3), uint32] */;
  %269 = reshape(%267, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), uint32] */;
  %270 = reshape(%268, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), uint32] */;
  %271 = right_shift(%228, %229) /* ty=Tensor[(9, 9, 8), uint16] */;
  %272 = %230.0;
  %273 = %237.2;
  %274 = %238.2;
  %275 = %243.6;
  %276 = tan(%250) /* ty=Tensor[(8, 70), float32] */;
  %277 = %255.0;
  %278 = %262.1;
  %279 = @func_3251(%269, %270) /* ty=Tensor[(15, 13, 3), bool] */;
  (meta[relay.Constant][16] /* ty=Tensor[(1056), int32] */, %271, %272, %273, meta[relay.Constant][17] /* ty=Tensor[(585), uint32] */, %274, %275, %var_6305, meta[relay.Constant][18] /* ty=Tensor[(240), float32] */, %276, %277, %var_6316, %278, %var_6319, %var_6320, %266, meta[relay.Constant][19] /* ty=Tensor[(352), float64] */, %279)
}

def @func_7107() -> (Tensor[(2, 120), uint64],) {
  %280 = @func_6170() /* ty=Tensor[(2, 120), float64] */;
  %281 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 120), float64] */, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
  %282 = shape_of(%280, dtype="int32") /* ty=Tensor[(2), int32] */;
  %283 = cast(%280, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %285 = multiply(%283, %284) /* ty=Tensor[(2, 120), uint64] */;
  (%285,)
}

def @func_4069() -> (Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) {
  %286 = @func_3566() /* ty=(Tensor[(585, 1), uint32],) */;
  %287 = cast(-0.490265f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %288 = reshape(%287, newshape=[]) /* ty=float64 */;
  %289 = @func_1569(%288) /* ty=(Tensor[(1, 6), float64],) */;
  %290 = %286.0;
  %291 = %289.0;
  (%290, %291, -0.490265f64 /* ty=float64 */)
}

def @func_7277() -> (Tensor[(2, 120), uint64],) {
  %292 = @func_7107() /* ty=(Tensor[(2, 120), uint64],) */;
  %293 = %292.0;
  (%293,)
}

def @func_2344(%var_2322: Tensor[(6, 16, 13), float32]) -> (Tensor[(6, 16, 13), float32], Tensor[(10, 16, 10), bool], Tensor[(1600), uint32], Tensor[(1620), int32]) {
  %294 = cast(%var_2322, dtype="float32") /* ty=Tensor[(6, 16, 13), float32] */;
  %295 = cast(meta[relay.Constant][21] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
  %296 = cast(meta[relay.Constant][21] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
  %297 = cast(meta[relay.Constant][22] /* ty=Tensor[(1620), int32] */, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %298 = reshape(%295, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %299 = reshape(%296, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %300 = reshape(%297, newshape=[1620]) /* ty=Tensor[(1620), int32] */;
  %301 = @func_136(%298, %299, %300) /* ty=(Tensor[(10, 16, 10), bool], Tensor[(15, 9, 12), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(15, 9, 12), float32]) */;
  %302 = asin(%294) /* ty=Tensor[(6, 16, 13), float32] */;
  %303 = %301.0;
  (%302, %303, meta[relay.Constant][21] /* ty=Tensor[(1600), uint32] */, meta[relay.Constant][22] /* ty=Tensor[(1620), int32] */)
}

def @func_4551() -> (Tensor[(15, 13, 3), float64], Tensor[(1, 6), float64]) {
  %304 = @func_3830() /* ty=(Tensor[(15, 13, 3), float64],) */;
  %305 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
  %306 = %304.0;
  %307 = %305.1;
  (%306, %307)
}

def @func_6384(%var_6363: Tensor[(16, 8, 9), float64]) -> Tensor[(16, 8, 9), int16] {
  %308 = @func_6134() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), int32], Tensor[(2925), uint32]) */;
  %309 = %308.0;
  %310 = cast(%var_6363, dtype="int16") /* ty=Tensor[(16, 8, 9), int16] */;
  %311 = shape_of(%309, dtype="int32") /* ty=Tensor[(3), int32] */;
  %312 = cast(%309, dtype="int16") /* ty=Tensor[(16, 8, 9), int16] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  right_shift(%312, %313) /* ty=Tensor[(16, 8, 9), int16] */
}

def @func_7395(%var_7392: Tensor[(528, 2), int32]) -> (Tensor[(2, 120), float64], Tensor[(8, 44), float64], Tensor[(528, 2), int32], Tensor[(352), float64]) {
  %314 = cast(%var_7392, dtype="int32") /* ty=Tensor[(528, 2), int32] */;
  %315 = cast(%var_7392, dtype="int32") /* ty=Tensor[(528, 2), int32] */;
  %316 = cast(meta[relay.Constant][23] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
  %317 = @func_4108() /* ty=Tensor[(2, 120), float64] */;
  %318 = cast(%317, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %319 = reshape(%314, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), int32] */;
  %320 = reshape(%315, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), int32] */;
  %321 = reshape(%316, newshape=[8, 44]) /* ty=Tensor[(8, 44), float64] */;
  %322 = reshape(%318, newshape=[120, 2]) /* ty=Tensor[(120, 2), float32] */;
  %323 = @func_2048(%319, %320, %321, %322) /* ty=(Tensor[(11, 12, 8), int32], Tensor[(1600), uint32], Tensor[(8, 44), float64], Tensor[(120, 2), float32]) */;
  %324 = %323.2;
  (%317, %324, %var_7392, meta[relay.Constant][23] /* ty=Tensor[(352), float64] */)
}

def @func_4248(%var_4211: int32, %var_4212: Tensor[(16, 7, 5), int32], %var_4219: Tensor[(1056), int32], %var_4220: Tensor[(352), float64]) -> (Tensor[(16, 7, 5), bool], Tensor[(1600), uint32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(2, 120), bool]) {
  %325 = cast(%var_4211, dtype="bool") /* ty=bool */;
  %326 = cast(%var_4212, dtype="bool") /* ty=Tensor[(16, 7, 5), bool] */;
  %327 = cast(%var_4219, dtype="int32") /* ty=Tensor[(1056), int32] */;
  %328 = cast(%var_4219, dtype="int32") /* ty=Tensor[(1056), int32] */;
  %329 = cast(%var_4220, dtype="float64") /* ty=Tensor[(352), float64] */;
  %330 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 120), float32] */, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %331 = reshape(%327, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), int32] */;
  %332 = reshape(%328, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), int32] */;
  %333 = reshape(%329, newshape=[8, 44]) /* ty=Tensor[(8, 44), float64] */;
  %334 = reshape(%330, newshape=[120, 2]) /* ty=Tensor[(120, 2), float32] */;
  %335 = @func_2048(%331, %332, %333, %334) /* ty=(Tensor[(11, 12, 8), int32], Tensor[(1600), uint32], Tensor[(8, 44), float64], Tensor[(120, 2), float32]) */;
  %336 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 120), float32] */, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %337 = cast(%var_4211, dtype="bool") /* ty=bool */;
  %338 = greater_equal(%325, %326) /* ty=Tensor[(16, 7, 5), bool] */;
  %339 = %335.1;
  %340 = logical_and(%336, %337) /* ty=Tensor[(2, 120), bool] */;
  (%338, %339, %var_4219, %var_4220, %340)
}

def @func_2808(%var_2749: Tensor[(8, 6, 1), float32]) -> (Tensor[(8, 1, 1), float64], Tensor[(8, 6, 1), float32]) {
  %341 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 1, 1), float32] */, dtype="float64") /* ty=Tensor[(8, 1, 1), float64] */;
  %342 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 1, 1), float32] */, dtype="float32") /* ty=Tensor[(8, 1, 1), float32] */;
  %343 = cosh(%342) /* ty=Tensor[(8, 1, 1), float32] */;
  %344 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 1, 1), float32] */, dtype="uint8") /* ty=Tensor[(8, 1, 1), uint8] */;
  %345 = cast(%var_2749, dtype="uint8") /* ty=Tensor[(8, 6, 1), uint8] */;
  %346 = subtract(%344, %345) /* ty=Tensor[(8, 6, 1), uint8] */;
  %347 = cast(%343, dtype="int64") /* ty=Tensor[(8, 1, 1), int64] */;
  %348 = cast(%346, dtype="int64") /* ty=Tensor[(8, 6, 1), int64] */;
  %349 = add(%347, %348) /* ty=Tensor[(8, 6, 1), int64] */;
  %350 = cast(%349, dtype="float64") /* ty=Tensor[(8, 6, 1), float64] */;
  %351 = rsqrt(%350) /* ty=Tensor[(8, 6, 1), float64] */;
  %352 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 1, 1), float32] */, dtype="float32") /* ty=Tensor[(8, 1, 1), float32] */;
  %353 = cast(%351, dtype="float32") /* ty=Tensor[(8, 6, 1), float32] */;
  %354 = cos(%341) /* ty=Tensor[(8, 1, 1), float64] */;
  %355 = floor_divide(%352, %353) /* ty=Tensor[(8, 6, 1), float32] */;
  (%354, %355)
}

def @func_4983(%var_4957: Tensor[(13, 1, 1), float32], %var_4972: Tensor[(352), float64]) -> (Tensor[(13, ?, ?), int32], Tensor[(15, 13, 3), uint16], Tensor[(352), float64]) {
  %356 = cast(%var_4957, dtype="float32") /* ty=Tensor[(13, 1, 1), float32] */;
  %357 = acos(%356) /* ty=Tensor[(13, 1, 1), float32] */;
  %358 = cast(%var_4957, dtype="int32") /* ty=Tensor[(13, 1, 1), int32] */;
  %359 = shape_of(%357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%357, dtype="int32") /* ty=Tensor[(13, 1, 1), int32] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %362 = cast(%var_4972, dtype="float64") /* ty=Tensor[(352), float64] */;
  %363 = reshape(%362, newshape=[1, 352]) /* ty=Tensor[(1, 352), float64] */;
  %364 = @func_4904(%363) /* ty=(Tensor[(1056), int32], Tensor[(10, 352), bool], Tensor[(15, 13, 3), uint16]) */;
  %365 = minimum(%360, %361) /* ty=Tensor[(13, ?, ?), int32] */;
  %366 = %364.2;
  (%365, %366, %var_4972)
}

def @func_3251(%var_3245: Tensor[(15, 13, 3), uint32], %var_3246: Tensor[(15, 13, 3), uint32]) -> Tensor[(15, 13, 3), bool] {
  %367 = cast(%var_3246, dtype="bool") /* ty=Tensor[(15, 13, 3), bool] */;
  %368 = shape_of(%var_3245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %369 = cast(%var_3245, dtype="bool") /* ty=Tensor[(15, 13, 3), bool] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%369, %370) /* ty=Tensor[(15, 13, 3), bool] */
}

def @func_6912(%var_6895: Tensor[(2, 120), float64]) -> (Tensor[(2, 120), int16], Tensor[(585, 1), float64]) {
  %371 = @func_4704() /* ty=(Tensor[(2, 120), float64],) */;
  %372 = %371.0;
  %373 = cast(%var_6895, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
  %374 = shape_of(%372, dtype="int32") /* ty=Tensor[(2), int32] */;
  %375 = cast(%372, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %377 = add(%375, %376) /* ty=Tensor[(2, 120), uint64] */;
  %378 = cast(%372, dtype="int16") /* ty=Tensor[(2, 120), int16] */;
  %379 = shape_of(%377, dtype="int32") /* ty=Tensor[(2), int32] */;
  %380 = cast(%377, dtype="int16") /* ty=Tensor[(2, 120), int16] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %382 = @func_3566() /* ty=(Tensor[(585, 1), uint32],) */;
  %383 = %382.0;
  %384 = cast(%383, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
  %385 = right_shift(%380, %381) /* ty=Tensor[(2, 120), int16] */;
  %386 = cosh(%384) /* ty=Tensor[(585, 1), float64] */;
  (%385, %386)
}

def @func_136(%var_82: Tensor[(10, 16, 10), uint32], %var_83: Tensor[(10, 16, 10), uint32], %var_91: Tensor[(1620), int32]) -> (Tensor[(10, 16, 10), bool], Tensor[(15, 9, 12), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(15, 9, 12), float32]) {
  %387 = cast(%var_83, dtype="bool") /* ty=Tensor[(10, 16, 10), bool] */;
  %388 = shape_of(%var_82, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%var_82, dtype="bool") /* ty=Tensor[(10, 16, 10), bool] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %391 = cast(%var_91, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %392 = cast(%var_91, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %393 = reshape(%391, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
  %394 = reshape(%392, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
  %395 = @func_39(%393, %394) /* ty=(Tensor[(15, 9, 12), int32], Tensor[(15, 9, 12), float32]) */;
  %396 = cast(%var_91, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %397 = cast(%var_91, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %398 = reshape(%396, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
  %399 = reshape(%397, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
  %400 = @func_39(%398, %399) /* ty=(Tensor[(15, 9, 12), int32], Tensor[(15, 9, 12), float32]) */;
  %401 = %400.1;
  %402 = cast(%401, dtype="int32") /* ty=Tensor[(15, 9, 12), int32] */;
  %403 = cast(%var_91, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %404 = reshape(%402, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
  %405 = reshape(%403, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
  %406 = @func_39(%404, %405) /* ty=(Tensor[(15, 9, 12), int32], Tensor[(15, 9, 12), float32]) */;
  %407 = equal(%389, %390) /* ty=Tensor[(10, 16, 10), bool] */;
  %408 = %395.1;
  %409 = %406.1;
  (%407, %408, %var_91, %401, %409)
}

def @func_3682(%var_3637: float64) -> (float64, Tensor[(585, 6), bool], Tensor[(15, 13, 3), bool], Tensor[(1, 6), float64], Tensor[(585, ?), int8]) {
  %410 = @func_3566() /* ty=(Tensor[(585, 1), uint32],) */;
  %411 = %410.0;
  %412 = cast(%411, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
  %413 = atan(%412) /* ty=Tensor[(585, 1), float64] */;
  %414 = cast(%var_3637, dtype="float64") /* ty=float64 */;
  %415 = reshape(%414, newshape=[]) /* ty=float64 */;
  %416 = @func_1569(%415) /* ty=(Tensor[(1, 6), float64],) */;
  %417 = %416.0;
  %418 = cast(%413, dtype="bool") /* ty=Tensor[(585, 1), bool] */;
  %419 = cast(%417, dtype="bool") /* ty=Tensor[(1, 6), bool] */;
  %420 = cast(%413, dtype="uint32") /* ty=Tensor[(585, 1), uint32] */;
  %421 = cast(%411, dtype="uint32") /* ty=Tensor[(585, 1), uint32] */;
  %422 = reshape(%420, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), uint32] */;
  %423 = reshape(%421, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), uint32] */;
  %424 = @func_3251(%422, %423) /* ty=Tensor[(15, 13, 3), bool] */;
  %425 = cast(%413, dtype="bool") /* ty=Tensor[(585, 1), bool] */;
  %426 = shape_of(%424, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(%424, dtype="bool") /* ty=Tensor[(15, 13, 3), bool] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %429 = cast(%var_3637, dtype="float64") /* ty=float64 */;
  %430 = reshape(%429, newshape=[]) /* ty=float64 */;
  %431 = @func_1569(%430) /* ty=(Tensor[(1, 6), float64],) */;
  %432 = cast(%424, dtype="int8") /* ty=Tensor[(15, 13, 3), int8] */;
  %433 = shape_of(%411, dtype="int32") /* ty=Tensor[(2), int32] */;
  %434 = cast(%411, dtype="int8") /* ty=Tensor[(585, 1), int8] */;
  %435 = dyn.reshape(%432, %433, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %436 = greater_equal(%418, %419) /* ty=Tensor[(585, 6), bool] */;
  %437 = less(%427, %428) /* ty=Tensor[(15, 13, 3), bool] */;
  %438 = %431.0;
  %439 = bitwise_xor(%434, %435) /* ty=Tensor[(585, ?), int8] */;
  (%var_3637, %436, %437, %438, %439)
}

def @func_4108() -> Tensor[(2, 120), float64] {
  %440 = @func_3990() /* ty=(Tensor[(15, 13, 3), float32], Tensor[(1620), int32], Tensor[(2, 120), float32]) */;
  %441 = %440.2;
  %442 = cast(%441, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  log2(%442) /* ty=Tensor[(2, 120), float64] */
}

def @func_6170() -> Tensor[(2, 120), float64] {
  @func_4108() /* ty=Tensor[(2, 120), float64] */
}

def @func_5931() -> Tensor[(15, 13, 3), float64] {
  %443 = @func_4551() /* ty=(Tensor[(15, 13, 3), float64], Tensor[(1, 6), float64]) */;
  %443.0
}

def @func_6715(%var_6675: Tensor[(25, 6), float32], %var_6686: float64) -> (Tensor[(585, 1), uint32], Tensor[(20), float32], Tensor[(9, 7, 16), uint16], Tensor[(1008), uint16], float64, Tensor[(4, 88), float64], Tensor[(1600), uint32], Tensor[(240), float32], Tensor[(5, 10, 3), uint32], Tensor[(11, 16, 2), float64]) {
  %444 = cast(meta[relay.Constant][27] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %445 = cast(meta[relay.Constant][27] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %446 = cast(%var_6686, dtype="float64") /* ty=float64 */;
  %447 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 88), float64] */, dtype="float64") /* ty=Tensor[(4, 88), float64] */;
  %448 = reshape(%444, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), uint16] */;
  %449 = reshape(%445, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), uint16] */;
  %450 = reshape(%446, newshape=[]) /* ty=float64 */;
  %451 = reshape(%447, newshape=[352]) /* ty=Tensor[(352), float64] */;
  %452 = @func_3881(%448, %449, %450, %451) /* ty=(Tensor[(9, 7, 16), uint16], Tensor[(1, 6), float64], float64, Tensor[(9, 7, 16), float32], Tensor[(16, 8, 9), float64], Tensor[(1600), uint32], Tensor[(352), float64], Tensor[(240), float32]) */;
  %453 = cast(meta[relay.Constant][29] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %454 = reshape(%453, newshape=[2, 12, 10]) /* ty=Tensor[(2, 12, 10), float32] */;
  %455 = @func_362(%454) /* ty=(Tensor[(2, 12, 10), float32], Tensor[(1620), int32], Tensor[(1600), uint32], Tensor[(6, 270), int32]) */;
  %456 = cast(meta[relay.Constant][26] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %457 = cast(%var_6675, dtype="float32") /* ty=Tensor[(25, 6), float32] */;
  %458 = cast(%var_6675, dtype="float32") /* ty=Tensor[(25, 6), float32] */;
  %459 = reshape(%456, newshape=[1, 10, 2]) /* ty=Tensor[(1, 10, 2), float32] */;
  %460 = reshape(%457, newshape=[150]) /* ty=Tensor[(150), float32] */;
  %461 = reshape(%458, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), float32] */;
  %462 = @func_5226(%459, %460, %461) /* ty=(Tensor[(1, 10, 2), float32], Tensor[(150), float32], Tensor[(5, 10, 3), bool]) */;
  %463 = %462.2;
  %464 = cast(%var_6675, dtype="uint32") /* ty=Tensor[(25, 6), uint32] */;
  %465 = shape_of(%463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %466 = cast(%463, dtype="uint32") /* ty=Tensor[(5, 10, 3), uint32] */;
  %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %468 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 88), float64] */, dtype="float64") /* ty=Tensor[(4, 88), float64] */;
  %469 = cast(meta[relay.Constant][29] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %470 = reshape(%468, newshape=[11, 16, 2]) /* ty=Tensor[(11, 16, 2), float64] */;
  %471 = reshape(%469, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %472 = @func_1170(%470, %471) /* ty=(Tensor[(11, 16, 2), float64], Tensor[(1600), uint32], Tensor[(240), float32]) */;
  %473 = @func_5377() /* ty=Tensor[(585, 1), uint32] */;
  %474 = %452.0;
  %475 = %455.2;
  %476 = maximum(%466, %467) /* ty=Tensor[(5, 10, 3), uint32] */;
  %477 = %472.0;
  (%473, meta[relay.Constant][26] /* ty=Tensor[(20), float32] */, %474, meta[relay.Constant][27] /* ty=Tensor[(1008), uint16] */, %var_6686, meta[relay.Constant][28] /* ty=Tensor[(4, 88), float64] */, %475, meta[relay.Constant][29] /* ty=Tensor[(240), float32] */, %476, %477)
}

def @func_4135() -> (Tensor[(16, 8, 9), float64],) {
  %478 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
  %479 = %478.0;
  %480 = cast(%479, dtype="float64") /* ty=Tensor[(16, 8, 9), float64] */;
  %481 = sqrt(%480) /* ty=Tensor[(16, 8, 9), float64] */;
  (%481,)
}

def @func_4778(%var_4764: Tensor[(11, 9, 16), float64], %var_4765: Tensor[(11, 9, 16), float64], %var_4771: Tensor[(11, 9, 16), float64]) -> (Tensor[(11, 9, 16), float64], Tensor[(11, 9, 16), float32]) {
  %482 = cast(%var_4765, dtype="float64") /* ty=Tensor[(11, 9, 16), float64] */;
  %483 = shape_of(%var_4764, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(%var_4764, dtype="float64") /* ty=Tensor[(11, 9, 16), float64] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %486 = cast(%var_4771, dtype="float32") /* ty=Tensor[(11, 9, 16), float32] */;
  %487 = shape_of(%var_4765, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%var_4765, dtype="float32") /* ty=Tensor[(11, 9, 16), float32] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %490 = mod(%484, %485) /* ty=Tensor[(11, 9, 16), float64] */;
  %491 = divide(%488, %489) /* ty=Tensor[(11, 9, 16), float32] */;
  (%490, %491)
}

def @func_3937(%var_3917: Tensor[(15, 9, 12), float32]) -> (Tensor[(15, 9, 12), float32],) {
  %492 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
  %493 = %492.1;
  %494 = cast(%var_3917, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
  %495 = shape_of(%493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%493, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %498 = greater_equal(%496, %497) /* ty=Tensor[(15, 9, 12), bool] */;
  %499 = cast(%498, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
  %500 = shape_of(%493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%493, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %503 = less_equal(%501, %502) /* ty=Tensor[(15, 9, 12), bool] */;
  %504 = cast(%503, dtype="float32") /* ty=Tensor[(15, 9, 12), float32] */;
  %505 = sqrt(%504) /* ty=Tensor[(15, 9, 12), float32] */;
  (%505,)
}

def @func_6051(%var_6045: Tensor[(1056), int32]) -> (float64, Tensor[(352), float64], Tensor[(8, 70), int32], Tensor[(1056), int32], Tensor[(352), float64]) {
  %506 = @func_4155() /* ty=(float64,) */;
  %507 = %506.0;
  %508 = cast(%507, dtype="int32") /* ty=int32 */;
  %509 = cast(meta[relay.Constant][30] /* ty=Tensor[(8, 70), int32] */, dtype="int32") /* ty=Tensor[(8, 70), int32] */;
  %510 = cast(%var_6045, dtype="int32") /* ty=Tensor[(1056), int32] */;
  %511 = cast(meta[relay.Constant][31] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
  %512 = reshape(%508, newshape=[]) /* ty=int32 */;
  %513 = reshape(%509, newshape=[16, 7, 5]) /* ty=Tensor[(16, 7, 5), int32] */;
  %514 = reshape(%510, newshape=[1056]) /* ty=Tensor[(1056), int32] */;
  %515 = reshape(%511, newshape=[352]) /* ty=Tensor[(352), float64] */;
  %516 = @func_4248(%512, %513, %514, %515) /* ty=(Tensor[(16, 7, 5), bool], Tensor[(1600), uint32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(2, 120), bool]) */;
  %517 = %516.3;
  (%507, %517, meta[relay.Constant][30] /* ty=Tensor[(8, 70), int32] */, %var_6045, meta[relay.Constant][31] /* ty=Tensor[(352), float64] */)
}

def @func_5984() -> (Tensor[(2, 120), float32],) {
  %518 = @func_5252() /* ty=(Tensor[(2, 120), float64],) */;
  %519 = %518.0;
  %520 = cast(%519, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %521 = cos(%520) /* ty=Tensor[(2, 120), float32] */;
  (%521,)
}

def @func_1569(%var_1559: float64) -> (Tensor[(1, 6), float64],) {
  %522 = cast(%var_1559, dtype="float64") /* ty=float64 */;
  %523 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 6), float64] */, dtype="float64") /* ty=Tensor[(1, 6), float64] */;
  %524 = floor_mod(%522, %523) /* ty=Tensor[(1, 6), float64] */;
  (%524,)
}

def @func_4155() -> (float64,) {
  %525 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
  %526 = %525.2;
  (%526,)
}

def @func_6594(%var_6585: Tensor[(2, 120), float64]) -> Tensor[(2, 120), bool] {
  %527 = @func_5098() /* ty=Tensor[(2, 120), float64] */;
  %528 = cast(%var_6585, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %529 = shape_of(%527, dtype="int32") /* ty=Tensor[(2), int32] */;
  %530 = cast(%527, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  equal(%530, %531) /* ty=Tensor[(2, 120), bool] */
}

def @func_4911() -> Tensor[(585, 1), uint32] {
  %532 = @func_3566() /* ty=(Tensor[(585, 1), uint32],) */;
  %532.0
}

def @func_7020(%var_7016: Tensor[(352), float64]) -> (Tensor[(1, 6), float64], Tensor[(2, 10, 12), float32], Tensor[(24, 10), float32], Tensor[(2, 120), float64], Tensor[(352), float64], Tensor[(900), float64]) {
  %533 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
  %534 = cast(meta[relay.Constant][33] /* ty=Tensor[(24, 10), float32] */, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
  %535 = reshape(%534, newshape=[2, 10, 12]) /* ty=Tensor[(2, 10, 12), float32] */;
  %536 = cast(meta[relay.Constant][33] /* ty=Tensor[(24, 10), float32] */, dtype="float64") /* ty=Tensor[(24, 10), float64] */;
  %537 = cast(%var_7016, dtype="float64") /* ty=Tensor[(352), float64] */;
  %538 = cast(meta[relay.Constant][34] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
  %539 = @func_2843(%535) /* ty=Tensor[(2, 10, 12), float32] */;
  %540 = cast(%539, dtype="float32") /* ty=Tensor[(2, 10, 12), float32] */;
  %541 = reshape(%536, newshape=[2, 120]) /* ty=Tensor[(2, 120), float64] */;
  %542 = reshape(%537, newshape=[352]) /* ty=Tensor[(352), float64] */;
  %543 = reshape(%538, newshape=[900]) /* ty=Tensor[(900), float64] */;
  %544 = reshape(%540, newshape=[2, 120]) /* ty=Tensor[(2, 120), float32] */;
  %545 = @func_5817(%541, %542, %543, %544) /* ty=(Tensor[(2, 120), bool], Tensor[(15, 13, 3), uint16], Tensor[(352), float64], Tensor[(1, 6), float64], Tensor[(12, 15, 5), float64], Tensor[(900), float64], Tensor[(2, 120), int8], Tensor[(2, 120), float64]) */;
  %546 = %533.1;
  %547 = %545.7;
  (%546, %539, meta[relay.Constant][33] /* ty=Tensor[(24, 10), float32] */, %547, %var_7016, meta[relay.Constant][34] /* ty=Tensor[(900), float64] */)
}

def @main() -> (Tensor[(15, 13, 3), float32],) {
  %548 = @func_5931() /* ty=Tensor[(15, 13, 3), float64] */;
  %549 = cast(%548, dtype="float32") /* ty=Tensor[(15, 13, 3), float32] */;
  %550 = sin(%549) /* ty=Tensor[(15, 13, 3), float32] */;
  (%550,)
}

def @func_4692(%var_4660: Tensor[(40, 14), int32], %var_4662: Tensor[(352), float64]) -> (Tensor[(1600), uint32], Tensor[(40, 14), int32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(585, 1), float64], Tensor[(585, ?), uint64]) {
  %551 = @func_4624() /* ty=float64 */;
  %552 = cast(%551, dtype="int32") /* ty=int32 */;
  %553 = cast(%var_4660, dtype="int32") /* ty=Tensor[(40, 14), int32] */;
  %554 = cast(meta[relay.Constant][35] /* ty=Tensor[(1056), int32] */, dtype="int32") /* ty=Tensor[(1056), int32] */;
  %555 = cast(%var_4662, dtype="float64") /* ty=Tensor[(352), float64] */;
  %556 = reshape(%552, newshape=[]) /* ty=int32 */;
  %557 = reshape(%553, newshape=[16, 7, 5]) /* ty=Tensor[(16, 7, 5), int32] */;
  %558 = reshape(%554, newshape=[1056]) /* ty=Tensor[(1056), int32] */;
  %559 = reshape(%555, newshape=[352]) /* ty=Tensor[(352), float64] */;
  %560 = @func_4248(%556, %557, %558, %559) /* ty=(Tensor[(16, 7, 5), bool], Tensor[(1600), uint32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(2, 120), bool]) */;
  %561 = @func_3566() /* ty=(Tensor[(585, 1), uint32],) */;
  %562 = %561.0;
  %563 = cast(%562, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
  %564 = asin(%563) /* ty=Tensor[(585, 1), float64] */;
  %565 = cast(%564, dtype="bool") /* ty=Tensor[(585, 1), bool] */;
  %566 = cast(%551, dtype="bool") /* ty=bool */;
  %567 = greater(%565, %566) /* ty=Tensor[(585, 1), bool] */;
  %568 = cast(%567, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
  %569 = cast(%567, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
  %570 = log10(%569) /* ty=Tensor[(585, 1), float64] */;
  %571 = cast(%567, dtype="uint64") /* ty=Tensor[(585, 1), uint64] */;
  %572 = shape_of(%570, dtype="int32") /* ty=Tensor[(2), int32] */;
  %573 = cast(%570, dtype="uint64") /* ty=Tensor[(585, 1), uint64] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %575 = %560.1;
  %576 = sqrt(%568) /* ty=Tensor[(585, 1), float64] */;
  %577 = left_shift(%573, %574) /* ty=Tensor[(585, ?), uint64] */;
  (%575, %var_4660, meta[relay.Constant][35] /* ty=Tensor[(1056), int32] */, %var_4662, %576, %577)
}

def @func_4824(%var_4804: Tensor[(585, 5), uint32]) -> (Tensor[(585, 5), uint8], Tensor[(15, 9, 12), int32], Tensor[(1620), int32]) {
  %578 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
  %579 = %578.0;
  %580 = cast(%579, dtype="uint8") /* ty=Tensor[(585, 1), uint8] */;
  %581 = cast(%var_4804, dtype="uint8") /* ty=Tensor[(585, 5), uint8] */;
  %582 = cast(meta[relay.Constant][36] /* ty=Tensor[(1620), int32] */, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %583 = cast(meta[relay.Constant][36] /* ty=Tensor[(1620), int32] */, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %584 = reshape(%582, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
  %585 = reshape(%583, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
  %586 = @func_39(%584, %585) /* ty=(Tensor[(15, 9, 12), int32], Tensor[(15, 9, 12), float32]) */;
  %587 = bitwise_or(%580, %581) /* ty=Tensor[(585, 5), uint8] */;
  %588 = %586.0;
  (%587, %588, meta[relay.Constant][36] /* ty=Tensor[(1620), int32] */)
}

def @func_6546() -> (Tensor[(16, 8, 9), float64], Tensor[(2, 10, 12), float32], Tensor[(240), float32]) {
  %589 = @func_4135() /* ty=(Tensor[(16, 8, 9), float64],) */;
  %590 = cast(meta[relay.Constant][37] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %591 = reshape(%590, newshape=[2, 10, 12]) /* ty=Tensor[(2, 10, 12), float32] */;
  %592 = %589.0;
  %593 = @func_2843(%591) /* ty=Tensor[(2, 10, 12), float32] */;
  (%592, %593, meta[relay.Constant][37] /* ty=Tensor[(240), float32] */)
}

def @func_3560() -> (Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) {
  %594 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 8, 9), float64] */, dtype="float64") /* ty=Tensor[(16, 8, 9), float64] */;
  %595 = cast(meta[relay.Constant][39] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
  %596 = cast(meta[relay.Constant][39] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
  %597 = cast(meta[relay.Constant][40] /* ty=Tensor[(1620), int32] */, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %598 = reshape(%595, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %599 = reshape(%596, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %600 = reshape(%597, newshape=[1620]) /* ty=Tensor[(1620), int32] */;
  %601 = @func_136(%598, %599, %600) /* ty=(Tensor[(10, 16, 10), bool], Tensor[(15, 9, 12), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(15, 9, 12), float32]) */;
  %602 = cast(meta[relay.Constant][41] /* ty=Tensor[(585, 1), uint32] */, dtype="uint32") /* ty=Tensor[(585, 1), uint32] */;
  %603 = cast(meta[relay.Constant][41] /* ty=Tensor[(585, 1), uint32] */, dtype="uint32") /* ty=Tensor[(585, 1), uint32] */;
  %604 = reshape(%602, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), uint32] */;
  %605 = reshape(%603, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), uint32] */;
  %606 = cast(meta[relay.Constant][40] /* ty=Tensor[(1620), int32] */, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %607 = %601.4;
  %608 = cast(%607, dtype="int32") /* ty=Tensor[(15, 9, 12), int32] */;
  %609 = reshape(%606, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
  %610 = reshape(%608, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
  %611 = @func_39(%609, %610) /* ty=(Tensor[(15, 9, 12), int32], Tensor[(15, 9, 12), float32]) */;
  %612 = exp(%594) /* ty=Tensor[(16, 8, 9), float64] */;
  %613 = @func_3251(%604, %605) /* ty=Tensor[(15, 13, 3), bool] */;
  %614 = %611.1;
  (%612, %607, meta[relay.Constant][39] /* ty=Tensor[(1600), uint32] */, meta[relay.Constant][40] /* ty=Tensor[(1620), int32] */, %613, meta[relay.Constant][41] /* ty=Tensor[(585, 1), uint32] */, %614)
}

def @func_4423(%var_4335: Tensor[(9, 4, 16), float32], %var_4364: Tensor[(240), float32]) -> (Tensor[(9, 4, 16), float64], Tensor[(1620), int32], Tensor[(1620), int32], Tensor[(1620), int32], Tensor[(9, 4, 16), bool], Tensor[(1, 6), float64], Tensor[(585, 240), int16], Tensor[(1, 6), float64], Tensor[(5, 10, 3), float32], Tensor[(25, 6), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32]) {
  %615 = cast(%var_4335, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %616 = @func_3990() /* ty=(Tensor[(15, 13, 3), float32], Tensor[(1620), int32], Tensor[(2, 120), float32]) */;
  %617 = cast(%var_4364, dtype="float32") /* ty=Tensor[(240), float32] */;
  %618 = reshape(%617, newshape=[2, 12, 10]) /* ty=Tensor[(2, 12, 10), float32] */;
  %619 = @func_362(%618) /* ty=(Tensor[(2, 12, 10), float32], Tensor[(1620), int32], Tensor[(1600), uint32], Tensor[(6, 270), int32]) */;
  %620 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
  %621 = cast(%var_4335, dtype="float32") /* ty=Tensor[(9, 4, 16), float32] */;
  %622 = exp(%621) /* ty=Tensor[(9, 4, 16), float32] */;
  %623 = cast(%var_4335, dtype="bool") /* ty=Tensor[(9, 4, 16), bool] */;
  %624 = shape_of(%622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%622, dtype="bool") /* ty=Tensor[(9, 4, 16), bool] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %627 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
  %628 = @func_3566() /* ty=(Tensor[(585, 1), uint32],) */;
  %629 = %628.0;
  %630 = cast(%var_4364, dtype="int16") /* ty=Tensor[(240), int16] */;
  %631 = cast(%629, dtype="int16") /* ty=Tensor[(585, 1), int16] */;
  %632 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
  %633 = cast(meta[relay.Constant][42] /* ty=Tensor[(25, 6), float32] */, dtype="float32") /* ty=Tensor[(25, 6), float32] */;
  %634 = reshape(%633, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), float32] */;
  %635 = @func_3990() /* ty=(Tensor[(15, 13, 3), float32], Tensor[(1620), int32], Tensor[(2, 120), float32]) */;
  %636 = cast(meta[relay.Constant][43] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
  %637 = cast(meta[relay.Constant][43] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
  %638 = %616.1;
  %639 = cast(%638, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %640 = reshape(%636, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %641 = reshape(%637, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %642 = reshape(%639, newshape=[1620]) /* ty=Tensor[(1620), int32] */;
  %643 = @func_136(%640, %641, %642) /* ty=(Tensor[(10, 16, 10), bool], Tensor[(15, 9, 12), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(15, 9, 12), float32]) */;
  %644 = acos(%615) /* ty=Tensor[(9, 4, 16), float64] */;
  %645 = %619.1;
  %646 = %620.3;
  %647 = greater_equal(%625, %626) /* ty=Tensor[(9, 4, 16), bool] */;
  %648 = %627.1;
  %649 = logical_xor(%630, %631) /* ty=Tensor[(585, 240), int16] */;
  %650 = %632.1;
  %651 = @func_529(%634) /* ty=Tensor[(5, 10, 3), float32] */;
  %652 = %635.1;
  %653 = %643.3;
  (%644, %638, %645, %646, %647, %648, %649, %650, %651, meta[relay.Constant][42] /* ty=Tensor[(25, 6), float32] */, %652, %653, meta[relay.Constant][43] /* ty=Tensor[(1600), uint32] */)
}

def @func_5614(%var_5599: Tensor[(8, 16, 15), int8], %var_5600: Tensor[(8, 16, 15), int8], %var_5607: Tensor[(1755), uint32]) -> (Tensor[(8, 16, 15), int8], Tensor[(585, 3), float64], Tensor[(1755), uint32], Tensor[(48), float32], Tensor[(15, 9, 12), float64]) {
  %654 = cast(%var_5600, dtype="int8") /* ty=Tensor[(8, 16, 15), int8] */;
  %655 = shape_of(%var_5599, dtype="int32") /* ty=Tensor[(3), int32] */;
  %656 = cast(%var_5599, dtype="int8") /* ty=Tensor[(8, 16, 15), int8] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %658 = cast(%var_5607, dtype="uint32") /* ty=Tensor[(1755), uint32] */;
  %659 = cast(meta[relay.Constant][44] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %660 = reshape(%658, newshape=[585, 3]) /* ty=Tensor[(585, 3), uint32] */;
  %661 = reshape(%659, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %662 = @func_3775(%660, %661) /* ty=(Tensor[(585, 3), uint16], Tensor[(585, 3), float64], Tensor[(8, 6, 1), float32], Tensor[(48), float32]) */;
  %663 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
  %664 = %663.6;
  %665 = cast(%664, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
  %666 = maximum(%656, %657) /* ty=Tensor[(8, 16, 15), int8] */;
  %667 = %662.1;
  %668 = acos(%665) /* ty=Tensor[(15, 9, 12), float64] */;
  (%666, %667, %var_5607, meta[relay.Constant][44] /* ty=Tensor[(48), float32] */, %668)
}

def @func_7219(%var_7157: Tensor[(2288), int64], %var_7180: Tensor[(900), float64], %var_7185: Tensor[(16, 8, 9), float64], %var_7201: Tensor[(585), float64]) -> (Tensor[(16, 13, 11), bool], Tensor[(2288), int64], Tensor[(1620), int32], Tensor[(12, 15, 5), float64], Tensor[(900), float64], Tensor[(16, 8, 9), bool], Tensor[(1056), int32], Tensor[(585), float64], Tensor[(352), float64], Tensor[(560), int32], Tensor[(2, 120), uint64]) {
  %669 = cast(%var_7157, dtype="int64") /* ty=Tensor[(2288), int64] */;
  %670 = cast(%var_7157, dtype="int64") /* ty=Tensor[(2288), int64] */;
  %671 = reshape(%669, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), int64] */;
  %672 = reshape(%670, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), int64] */;
  %673 = @func_6085(%671, %672) /* ty=(Tensor[(16, 13, 11), bool], Tensor[(16, 13, 11), float64]) */;
  %674 = @func_3990() /* ty=(Tensor[(15, 13, 3), float32], Tensor[(1620), int32], Tensor[(2, 120), float32]) */;
  %675 = cast(%var_7180, dtype="float64") /* ty=Tensor[(900), float64] */;
  %676 = reshape(%675, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float64] */;
  %677 = @func_4135() /* ty=(Tensor[(16, 8, 9), float64],) */;
  %678 = %677.0;
  %679 = cast(%var_7185, dtype="bool") /* ty=Tensor[(16, 8, 9), bool] */;
  %680 = shape_of(%678, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(%678, dtype="bool") /* ty=Tensor[(16, 8, 9), bool] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %683 = cast(%var_7201, dtype="float64") /* ty=Tensor[(585), float64] */;
  %684 = cast(meta[relay.Constant][45] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
  %685 = reshape(%683, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), float64] */;
  %686 = reshape(%684, newshape=[1, 352]) /* ty=Tensor[(1, 352), float64] */;
  %687 = @func_4486(%685, %686) /* ty=(Tensor[(15, 13, 3), int64], Tensor[(352), float64], int32, Tensor[(560), int32], Tensor[(1056), int32], Tensor[(1, 352), float64]) */;
  %688 = cast(%var_7201, dtype="float64") /* ty=Tensor[(585), float64] */;
  %689 = cast(meta[relay.Constant][45] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
  %690 = reshape(%688, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), float64] */;
  %691 = reshape(%689, newshape=[1, 352]) /* ty=Tensor[(1, 352), float64] */;
  %692 = @func_4486(%690, %691) /* ty=(Tensor[(15, 13, 3), int64], Tensor[(352), float64], int32, Tensor[(560), int32], Tensor[(1056), int32], Tensor[(1, 352), float64]) */;
  %693 = @func_4704() /* ty=(Tensor[(2, 120), float64],) */;
  %694 = %693.0;
  %695 = cast(%694, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %696 = sqrt(%695) /* ty=Tensor[(2, 120), float32] */;
  %697 = cast(%694, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %698 = shape_of(%696, dtype="int32") /* ty=Tensor[(2), int32] */;
  %699 = cast(%696, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %701 = logical_or(%699, %700) /* ty=Tensor[(2, 120), bool] */;
  %702 = cast(%701, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %703 = cosh(%702) /* ty=Tensor[(2, 120), float32] */;
  %704 = cast(%696, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
  %705 = shape_of(%703, dtype="int32") /* ty=Tensor[(2), int32] */;
  %706 = cast(%703, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %708 = %673.0;
  %709 = %674.1;
  %710 = @func_5589(%676) /* ty=Tensor[(12, 15, 5), float64] */;
  %711 = logical_and(%681, %682) /* ty=Tensor[(16, 8, 9), bool] */;
  %712 = %687.4;
  %713 = %692.3;
  %714 = maximum(%706, %707) /* ty=Tensor[(2, 120), uint64] */;
  (%708, %var_7157, %709, %710, %var_7180, %711, %712, %var_7201, meta[relay.Constant][45] /* ty=Tensor[(352), float64] */, %713, %714)
}

def @func_1170(%var_1131: Tensor[(11, 16, 2), float64], %var_1138: Tensor[(240), float32]) -> (Tensor[(11, 16, 2), float64], Tensor[(1600), uint32], Tensor[(240), float32]) {
  %715 = cast(%var_1131, dtype="float64") /* ty=Tensor[(11, 16, 2), float64] */;
  %716 = cast(%var_1138, dtype="float32") /* ty=Tensor[(240), float32] */;
  %717 = reshape(%716, newshape=[2, 12, 10]) /* ty=Tensor[(2, 12, 10), float32] */;
  %718 = @func_362(%717) /* ty=(Tensor[(2, 12, 10), float32], Tensor[(1620), int32], Tensor[(1600), uint32], Tensor[(6, 270), int32]) */;
  %719 = sinh(%715) /* ty=Tensor[(11, 16, 2), float64] */;
  %720 = %718.2;
  (%719, %720, %var_1138)
}

def @func_6777(%var_6740: Tensor[(2, 120), float64]) -> Tensor[(2, 120), int16] {
  %721 = @func_5252() /* ty=(Tensor[(2, 120), float64],) */;
  %722 = %721.0;
  %723 = cast(%var_6740, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %724 = shape_of(%722, dtype="int32") /* ty=Tensor[(2), int32] */;
  %725 = cast(%722, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %727 = mod(%725, %726) /* ty=Tensor[(2, 120), float64] */;
  %728 = cast(%727, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %729 = shape_of(%722, dtype="int32") /* ty=Tensor[(2), int32] */;
  %730 = cast(%722, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %732 = less(%730, %731) /* ty=Tensor[(2, 120), bool] */;
  %733 = cast(%var_6740, dtype="int16") /* ty=Tensor[(2, 120), int16] */;
  %734 = shape_of(%732, dtype="int32") /* ty=Tensor[(2), int32] */;
  %735 = cast(%732, dtype="int16") /* ty=Tensor[(2, 120), int16] */;
  %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  bitwise_and(%735, %736) /* ty=Tensor[(2, 120), int16] */
}

def @func_6085(%var_6069: Tensor[(16, 13, 11), int64], %var_6070: Tensor[(16, 13, 11), int64]) -> (Tensor[(16, 13, 11), bool], Tensor[(16, 13, 11), float64]) {
  %737 = cast(%var_6070, dtype="bool") /* ty=Tensor[(16, 13, 11), bool] */;
  %738 = shape_of(%var_6069, dtype="int32") /* ty=Tensor[(3), int32] */;
  %739 = cast(%var_6069, dtype="bool") /* ty=Tensor[(16, 13, 11), bool] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %741 = cast(%var_6069, dtype="float64") /* ty=Tensor[(16, 13, 11), float64] */;
  %742 = less(%739, %740) /* ty=Tensor[(16, 13, 11), bool] */;
  %743 = asin(%741) /* ty=Tensor[(16, 13, 11), float64] */;
  (%742, %743)
}

def @func_2843(%var_2834: Tensor[(2, 10, 12), float32]) -> Tensor[(2, 10, 12), float32] {
  %744 = cast(%var_2834, dtype="float32") /* ty=Tensor[(2, 10, 12), float32] */;
  log10(%744) /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_5530(%var_5473: Tensor[(352), float64]) -> (float64, Tensor[(240), float32], Tensor[(240), float32], Tensor[(585, 352), bool], Tensor[(2, 120), float64], Tensor[(585, 6), float32]) {
  %745 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
  %746 = cast(%var_5473, dtype="float64") /* ty=Tensor[(352), float64] */;
  %747 = cast(meta[relay.Constant][46] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %748 = reshape(%746, newshape=[11, 16, 2]) /* ty=Tensor[(11, 16, 2), float64] */;
  %749 = reshape(%747, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %750 = @func_1170(%748, %749) /* ty=(Tensor[(11, 16, 2), float64], Tensor[(1600), uint32], Tensor[(240), float32]) */;
  %751 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
  %752 = %751.5;
  %753 = cast(%752, dtype="bool") /* ty=Tensor[(585, 1), bool] */;
  %754 = cast(%var_5473, dtype="bool") /* ty=Tensor[(352), bool] */;
  %755 = @func_5161() /* ty=(Tensor[(2, 120), float64],) */;
  %756 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
  %757 = %756.1;
  %758 = cast(%757, dtype="float32") /* ty=Tensor[(1, 6), float32] */;
  %759 = cast(%752, dtype="float32") /* ty=Tensor[(585, 1), float32] */;
  %760 = %745.2;
  %761 = %750.2;
  %762 = less(%753, %754) /* ty=Tensor[(585, 352), bool] */;
  %763 = %755.0;
  %764 = floor_divide(%758, %759) /* ty=Tensor[(585, 6), float32] */;
  (%760, %761, meta[relay.Constant][46] /* ty=Tensor[(240), float32] */, %762, %763, %764)
}

def @func_39(%var_24: Tensor[(15, 9, 12), int32], %var_25: Tensor[(15, 9, 12), int32]) -> (Tensor[(15, 9, 12), int32], Tensor[(15, 9, 12), float32]) {
  %765 = cast(%var_25, dtype="int32") /* ty=Tensor[(15, 9, 12), int32] */;
  %766 = shape_of(%var_24, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(%var_24, dtype="int32") /* ty=Tensor[(15, 9, 12), int32] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %769 = cast(%var_24, dtype="float32") /* ty=Tensor[(15, 9, 12), float32] */;
  %770 = multiply(%767, %768) /* ty=Tensor[(15, 9, 12), int32] */;
  %771 = acosh(%769) /* ty=Tensor[(15, 9, 12), float32] */;
  (%770, %771)
}

def @func_4306(%var_4297: float64) -> (Tensor[(1620), int32], Tensor[(540, 3), int32], Tensor[(585, 1600), bool], Tensor[(1755), uint32], Tensor[(240), float32], Tensor[(1, 6), float64], float64) {
  %772 = cast(meta[relay.Constant][47] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
  %773 = cast(meta[relay.Constant][47] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
  %774 = cast(meta[relay.Constant][48] /* ty=Tensor[(540, 3), int32] */, dtype="int32") /* ty=Tensor[(540, 3), int32] */;
  %775 = reshape(%772, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %776 = reshape(%773, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %777 = reshape(%774, newshape=[1620]) /* ty=Tensor[(1620), int32] */;
  %778 = @func_136(%775, %776, %777) /* ty=(Tensor[(10, 16, 10), bool], Tensor[(15, 9, 12), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(15, 9, 12), float32]) */;
  %779 = @func_3566() /* ty=(Tensor[(585, 1), uint32],) */;
  %780 = %779.0;
  %781 = cast(meta[relay.Constant][47] /* ty=Tensor[(1600), uint32] */, dtype="bool") /* ty=Tensor[(1600), bool] */;
  %782 = cast(%780, dtype="bool") /* ty=Tensor[(585, 1), bool] */;
  %783 = %778.2;
  %784 = cast(%783, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %785 = cast(meta[relay.Constant][49] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %786 = reshape(%784, newshape=[1620]) /* ty=Tensor[(1620), int32] */;
  %787 = reshape(%785, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %788 = @func_4199(%786, %787) /* ty=(Tensor[(1620), float64], Tensor[(48), float32], Tensor[(1755), uint32], Tensor[(48), float32], Tensor[(1600), uint32], Tensor[(352), float64], Tensor[(240), float32]) */;
  %789 = cast(%var_4297, dtype="float64") /* ty=float64 */;
  %790 = reshape(%789, newshape=[]) /* ty=float64 */;
  %791 = @func_1569(%790) /* ty=(Tensor[(1, 6), float64],) */;
  %792 = logical_and(%781, %782) /* ty=Tensor[(585, 1600), bool] */;
  %793 = %788.2;
  %794 = %791.0;
  (%783, meta[relay.Constant][48] /* ty=Tensor[(540, 3), int32] */, %792, %793, meta[relay.Constant][49] /* ty=Tensor[(240), float32] */, %794, %var_4297)
}

def @func_5817(%var_5719: Tensor[(2, 120), float64], %var_5749: Tensor[(352), float64], %var_5803: Tensor[(900), float64], %var_5807: Tensor[(2, 120), float32]) -> (Tensor[(2, 120), bool], Tensor[(15, 13, 3), uint16], Tensor[(352), float64], Tensor[(1, 6), float64], Tensor[(12, 15, 5), float64], Tensor[(900), float64], Tensor[(2, 120), int8], Tensor[(2, 120), float64]) {
  %795 = @func_5161() /* ty=(Tensor[(2, 120), float64],) */;
  %796 = %795.0;
  %797 = cast(%var_5719, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(2), int32] */;
  %799 = cast(%796, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %801 = cast(%var_5749, dtype="float64") /* ty=Tensor[(352), float64] */;
  %802 = reshape(%801, newshape=[1, 352]) /* ty=Tensor[(1, 352), float64] */;
  %803 = @func_4904(%802) /* ty=(Tensor[(1056), int32], Tensor[(10, 352), bool], Tensor[(15, 13, 3), uint16]) */;
  %804 = @func_4551() /* ty=(Tensor[(15, 13, 3), float64], Tensor[(1, 6), float64]) */;
  %805 = cast(%var_5803, dtype="float64") /* ty=Tensor[(900), float64] */;
  %806 = reshape(%805, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float64] */;
  %807 = cast(%796, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %808 = shape_of(%var_5719, dtype="int32") /* ty=Tensor[(2), int32] */;
  %809 = cast(%var_5719, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %811 = greater_equal(%809, %810) /* ty=Tensor[(2, 120), bool] */;
  %812 = cast(%811, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %813 = asinh(%812) /* ty=Tensor[(2, 120), float32] */;
  %814 = cast(%var_5807, dtype="int8") /* ty=Tensor[(2, 120), int8] */;
  %815 = shape_of(%813, dtype="int32") /* ty=Tensor[(2), int32] */;
  %816 = cast(%813, dtype="int8") /* ty=Tensor[(2, 120), int8] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %818 = cast(%813, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %819 = less_equal(%799, %800) /* ty=Tensor[(2, 120), bool] */;
  %820 = %803.2;
  %821 = %804.1;
  %822 = @func_5589(%806) /* ty=Tensor[(12, 15, 5), float64] */;
  %823 = logical_xor(%816, %817) /* ty=Tensor[(2, 120), int8] */;
  %824 = erf(%818) /* ty=Tensor[(2, 120), float64] */;
  (%819, %820, %var_5749, %821, %822, %var_5803, %823, %824)
}

def @func_696(%var_682: Tensor[(14, 5, 3), int32], %var_683: Tensor[(14, 5, 3), int32]) -> (Tensor[(14, 5, 3), bool], Tensor[(14, 5, 3), float32]) {
  %825 = cast(%var_683, dtype="bool") /* ty=Tensor[(14, 5, 3), bool] */;
  %826 = shape_of(%var_682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(%var_682, dtype="bool") /* ty=Tensor[(14, 5, 3), bool] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %829 = cast(%var_682, dtype="float32") /* ty=Tensor[(14, 5, 3), float32] */;
  %830 = less_equal(%827, %828) /* ty=Tensor[(14, 5, 3), bool] */;
  %831 = rsqrt(%829) /* ty=Tensor[(14, 5, 3), float32] */;
  (%830, %831)
}

def @func_6863(%var_6848: Tensor[(14, 7, 1), float32]) -> Tensor[(14, 7, 16), float32] {
  %832 = cast(%var_6848, dtype="float32") /* ty=Tensor[(14, 7, 1), float32] */;
  %833 = cast(meta[relay.Constant][50] /* ty=Tensor[(14, 7, 16), float32] */, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
  add(%832, %833) /* ty=Tensor[(14, 7, 16), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6088(%var_6086: Tensor[(16, 13, 11), int64], %var_6087: Tensor[(16, 13, 11), int64]) -> (Tensor[(16, 13, 11), bool], Tensor[(16, 13, 11), float64]) {
  %7 = fn (%var_6069: Tensor[(16, 13, 11), int64], %var_6070: Tensor[(16, 13, 11), int64]) -> (Tensor[(16, 13, 11), bool], Tensor[(16, 13, 11), float64]) {
    %0 = cast(%var_6070, dtype="bool") /* ty=Tensor[(16, 13, 11), bool] */;
    %1 = shape_of(%var_6069, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(%var_6069, dtype="bool") /* ty=Tensor[(16, 13, 11), bool] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %4 = cast(%var_6069, dtype="float64") /* ty=Tensor[(16, 13, 11), float64] */;
    %5 = less(%2, %3) /* ty=Tensor[(16, 13, 11), bool] */;
    %6 = asin(%4) /* ty=Tensor[(16, 13, 11), float64] */;
    (%5, %6)
  };
  %7(%var_6086, %var_6087) /* ty=(Tensor[(16, 13, 11), bool], Tensor[(16, 13, 11), float64]) */
}

def @func_6384(%var_6363: Tensor[(16, 8, 9), float64]) -> Tensor[(16, 8, 9), int16] {
  %8 = @func_6134() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), int32], Tensor[(2925), uint32]) */;
  %9 = %8.0;
  %10 = cast(%var_6363, dtype="int16") /* ty=Tensor[(16, 8, 9), int16] */;
  %11 = shape_of(%9, dtype="int32") /* ty=Tensor[(3), int32] */;
  %12 = cast(%9, dtype="int16") /* ty=Tensor[(16, 8, 9), int16] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  right_shift(%12, %13) /* ty=Tensor[(16, 8, 9), int16] */
}

def @func_2054(%var_2050: Tensor[(11, 12, 8), int32], %var_2051: Tensor[(11, 12, 8), int32], %var_2052: Tensor[(8, 44), float64], %var_2053: Tensor[(120, 2), float32]) -> (Tensor[(11, 12, 8), int32], Tensor[(1600), uint32], Tensor[(8, 44), float64], Tensor[(120, 2), float32]) {
  @func_2048(%var_2050, %var_2051, %var_2052, %var_2053) /* ty=(Tensor[(11, 12, 8), int32], Tensor[(1600), uint32], Tensor[(8, 44), float64], Tensor[(120, 2), float32]) */
}

def @func_7398(%var_7396: Tensor[(528, 2), int32]) -> (Tensor[(2, 120), float64], Tensor[(8, 44), float64], Tensor[(528, 2), int32], Tensor[(352), float64]) {
  @func_7395(%var_7396) /* ty=(Tensor[(2, 120), float64], Tensor[(8, 44), float64], Tensor[(528, 2), int32], Tensor[(352), float64]) */
}

def @func_6546() -> (Tensor[(16, 8, 9), float64], Tensor[(2, 10, 12), float32], Tensor[(240), float32]) {
  %14 = @func_4135() /* ty=(Tensor[(16, 8, 9), float64],) */;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %16 = reshape(%15, newshape=[2, 10, 12]) /* ty=Tensor[(2, 10, 12), float32] */;
  %17 = %14.0;
  %18 = @func_2843(%16) /* ty=Tensor[(2, 10, 12), float32] */;
  (%17, %18, meta[relay.Constant][0] /* ty=Tensor[(240), float32] */)
}

def @func_3991() -> (Tensor[(15, 13, 3), float32], Tensor[(1620), int32], Tensor[(2, 120), float32]) {
  %29 = fn () -> (Tensor[(15, 13, 3), float32], Tensor[(1620), int32], Tensor[(2, 120), float32]) {
    %19 = @func_3830() /* ty=(Tensor[(15, 13, 3), float64],) */;
    %20 = %19.0;
    %21 = cast(%20, dtype="float64") /* ty=Tensor[(15, 13, 3), float64] */;
    %22 = exp(%21) /* ty=Tensor[(15, 13, 3), float64] */;
    %23 = cast(%22, dtype="float32") /* ty=Tensor[(15, 13, 3), float32] */;
    %24 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 120), float32] */, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
    %25 = reshape(%24, newshape=[2, 12, 10]) /* ty=Tensor[(2, 12, 10), float32] */;
    %26 = @func_362(%25) /* ty=(Tensor[(2, 12, 10), float32], Tensor[(1620), int32], Tensor[(1600), uint32], Tensor[(6, 270), int32]) */;
    %27 = log(%23) /* ty=Tensor[(15, 13, 3), float32] */;
    %28 = %26.1;
    (%27, %28, meta[relay.Constant][1] /* ty=Tensor[(2, 120), float32] */)
  };
  %29() /* ty=(Tensor[(15, 13, 3), float32], Tensor[(1620), int32], Tensor[(2, 120), float32]) */
}

def @func_2048(%var_2027: Tensor[(11, 12, 8), int32], %var_2028: Tensor[(11, 12, 8), int32], %var_2033: Tensor[(8, 44), float64], %var_2034: Tensor[(120, 2), float32]) -> (Tensor[(11, 12, 8), int32], Tensor[(1600), uint32], Tensor[(8, 44), float64], Tensor[(120, 2), float32]) {
  %30 = cast(%var_2028, dtype="int32") /* ty=Tensor[(11, 12, 8), int32] */;
  %31 = shape_of(%var_2027, dtype="int32") /* ty=Tensor[(3), int32] */;
  %32 = cast(%var_2027, dtype="int32") /* ty=Tensor[(11, 12, 8), int32] */;
  %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %34 = cast(%var_2033, dtype="float64") /* ty=Tensor[(8, 44), float64] */;
  %35 = cast(%var_2034, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
  %36 = reshape(%34, newshape=[11, 16, 2]) /* ty=Tensor[(11, 16, 2), float64] */;
  %37 = reshape(%35, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %38 = @func_1170(%36, %37) /* ty=(Tensor[(11, 16, 2), float64], Tensor[(1600), uint32], Tensor[(240), float32]) */;
  %39 = add(%32, %33) /* ty=Tensor[(11, 12, 8), int32] */;
  %40 = %38.1;
  (%39, %40, %var_2033, %var_2034)
}

def @func_6170() -> Tensor[(2, 120), float64] {
  @func_4108() /* ty=Tensor[(2, 120), float64] */
}

def @func_6135() -> (Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), int32], Tensor[(2925), uint32]) {
  %47 = fn () -> (Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), int32], Tensor[(2925), uint32]) {
    %41 = @func_4135() /* ty=(Tensor[(16, 8, 9), float64],) */;
    %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(2925), uint32] */, dtype="uint32") /* ty=Tensor[(2925), uint32] */;
    %43 = reshape(%42, newshape=[585, 5]) /* ty=Tensor[(585, 5), uint32] */;
    %44 = @func_4824(%43) /* ty=(Tensor[(585, 5), uint8], Tensor[(15, 9, 12), int32], Tensor[(1620), int32]) */;
    %45 = %41.0;
    %46 = %44.1;
    (%45, %46, meta[relay.Constant][2] /* ty=Tensor[(2925), uint32] */)
  };
  %47() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), int32], Tensor[(2925), uint32]) */
}

def @func_5614(%var_5599: Tensor[(8, 16, 15), int8], %var_5600: Tensor[(8, 16, 15), int8], %var_5607: Tensor[(1755), uint32]) -> (Tensor[(8, 16, 15), int8], Tensor[(585, 3), float64], Tensor[(1755), uint32], Tensor[(48), float32], Tensor[(15, 9, 12), float64]) {
  %48 = cast(%var_5600, dtype="int8") /* ty=Tensor[(8, 16, 15), int8] */;
  %49 = shape_of(%var_5599, dtype="int32") /* ty=Tensor[(3), int32] */;
  %50 = cast(%var_5599, dtype="int8") /* ty=Tensor[(8, 16, 15), int8] */;
  %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %52 = cast(%var_5607, dtype="uint32") /* ty=Tensor[(1755), uint32] */;
  %53 = cast(meta[relay.Constant][3] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %54 = reshape(%52, newshape=[585, 3]) /* ty=Tensor[(585, 3), uint32] */;
  %55 = reshape(%53, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %56 = @func_3775(%54, %55) /* ty=(Tensor[(585, 3), uint16], Tensor[(585, 3), float64], Tensor[(8, 6, 1), float32], Tensor[(48), float32]) */;
  %57 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
  %58 = %57.6;
  %59 = cast(%58, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
  %60 = maximum(%50, %51) /* ty=Tensor[(8, 16, 15), int8] */;
  %61 = %56.1;
  %62 = acos(%59) /* ty=Tensor[(15, 9, 12), float64] */;
  (%60, %61, %var_5607, meta[relay.Constant][3] /* ty=Tensor[(48), float32] */, %62)
}

def @func_140(%var_137: Tensor[(10, 16, 10), uint32], %var_138: Tensor[(10, 16, 10), uint32], %var_139: Tensor[(1620), int32]) -> (Tensor[(10, 16, 10), bool], Tensor[(15, 9, 12), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(15, 9, 12), float32]) {
  %86 = fn (%var_82: Tensor[(10, 16, 10), uint32], %var_83: Tensor[(10, 16, 10), uint32], %var_91: Tensor[(1620), int32]) -> (Tensor[(10, 16, 10), bool], Tensor[(15, 9, 12), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(15, 9, 12), float32]) {
    %63 = cast(%var_83, dtype="bool") /* ty=Tensor[(10, 16, 10), bool] */;
    %64 = shape_of(%var_82, dtype="int32") /* ty=Tensor[(3), int32] */;
    %65 = cast(%var_82, dtype="bool") /* ty=Tensor[(10, 16, 10), bool] */;
    %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %67 = cast(%var_91, dtype="int32") /* ty=Tensor[(1620), int32] */;
    %68 = cast(%var_91, dtype="int32") /* ty=Tensor[(1620), int32] */;
    %69 = reshape(%67, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
    %70 = reshape(%68, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
    %71 = @func_39(%69, %70) /* ty=(Tensor[(15, 9, 12), int32], Tensor[(15, 9, 12), float32]) */;
    %72 = cast(%var_91, dtype="int32") /* ty=Tensor[(1620), int32] */;
    %73 = cast(%var_91, dtype="int32") /* ty=Tensor[(1620), int32] */;
    %74 = reshape(%72, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
    %75 = reshape(%73, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
    %76 = @func_39(%74, %75) /* ty=(Tensor[(15, 9, 12), int32], Tensor[(15, 9, 12), float32]) */;
    %77 = %76.1;
    %78 = cast(%77, dtype="int32") /* ty=Tensor[(15, 9, 12), int32] */;
    %79 = cast(%var_91, dtype="int32") /* ty=Tensor[(1620), int32] */;
    %80 = reshape(%78, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
    %81 = reshape(%79, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
    %82 = @func_39(%80, %81) /* ty=(Tensor[(15, 9, 12), int32], Tensor[(15, 9, 12), float32]) */;
    %83 = equal(%65, %66) /* ty=Tensor[(10, 16, 10), bool] */;
    %84 = %71.1;
    %85 = %82.1;
    (%83, %84, %var_91, %77, %85)
  };
  %86(%var_137, %var_138, %var_139) /* ty=(Tensor[(10, 16, 10), bool], Tensor[(15, 9, 12), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(15, 9, 12), float32]) */
}

def @func_2810(%var_2809: Tensor[(8, 6, 1), float32]) -> (Tensor[(8, 1, 1), float64], Tensor[(8, 6, 1), float32]) {
  %102 = fn (%var_2749: Tensor[(8, 6, 1), float32]) -> (Tensor[(8, 1, 1), float64], Tensor[(8, 6, 1), float32]) {
    %87 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 1, 1), float32] */, dtype="float64") /* ty=Tensor[(8, 1, 1), float64] */;
    %88 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 1, 1), float32] */, dtype="float32") /* ty=Tensor[(8, 1, 1), float32] */;
    %89 = cosh(%88) /* ty=Tensor[(8, 1, 1), float32] */;
    %90 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 1, 1), float32] */, dtype="uint8") /* ty=Tensor[(8, 1, 1), uint8] */;
    %91 = cast(%var_2749, dtype="uint8") /* ty=Tensor[(8, 6, 1), uint8] */;
    %92 = subtract(%90, %91) /* ty=Tensor[(8, 6, 1), uint8] */;
    %93 = cast(%89, dtype="int64") /* ty=Tensor[(8, 1, 1), int64] */;
    %94 = cast(%92, dtype="int64") /* ty=Tensor[(8, 6, 1), int64] */;
    %95 = add(%93, %94) /* ty=Tensor[(8, 6, 1), int64] */;
    %96 = cast(%95, dtype="float64") /* ty=Tensor[(8, 6, 1), float64] */;
    %97 = rsqrt(%96) /* ty=Tensor[(8, 6, 1), float64] */;
    %98 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 1, 1), float32] */, dtype="float32") /* ty=Tensor[(8, 1, 1), float32] */;
    %99 = cast(%97, dtype="float32") /* ty=Tensor[(8, 6, 1), float32] */;
    %100 = cos(%87) /* ty=Tensor[(8, 1, 1), float64] */;
    %101 = floor_divide(%98, %99) /* ty=Tensor[(8, 6, 1), float32] */;
    (%100, %101)
  };
  %102(%var_2809) /* ty=(Tensor[(8, 1, 1), float64], Tensor[(8, 6, 1), float32]) */
}

def @func_4135() -> (Tensor[(16, 8, 9), float64],) {
  %103 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
  %104 = %103.0;
  %105 = cast(%104, dtype="float64") /* ty=Tensor[(16, 8, 9), float64] */;
  %106 = sqrt(%105) /* ty=Tensor[(16, 8, 9), float64] */;
  (%106,)
}

def @func_4692(%var_4660: Tensor[(40, 14), int32], %var_4662: Tensor[(352), float64]) -> (Tensor[(1600), uint32], Tensor[(40, 14), int32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(585, 1), float64], Tensor[(585, ?), uint64]) {
  %107 = @func_4624() /* ty=float64 */;
  %108 = cast(%107, dtype="int32") /* ty=int32 */;
  %109 = cast(%var_4660, dtype="int32") /* ty=Tensor[(40, 14), int32] */;
  %110 = cast(meta[relay.Constant][5] /* ty=Tensor[(1056), int32] */, dtype="int32") /* ty=Tensor[(1056), int32] */;
  %111 = cast(%var_4662, dtype="float64") /* ty=Tensor[(352), float64] */;
  %112 = reshape(%108, newshape=[]) /* ty=int32 */;
  %113 = reshape(%109, newshape=[16, 7, 5]) /* ty=Tensor[(16, 7, 5), int32] */;
  %114 = reshape(%110, newshape=[1056]) /* ty=Tensor[(1056), int32] */;
  %115 = reshape(%111, newshape=[352]) /* ty=Tensor[(352), float64] */;
  %116 = @func_4248(%112, %113, %114, %115) /* ty=(Tensor[(16, 7, 5), bool], Tensor[(1600), uint32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(2, 120), bool]) */;
  %117 = @func_3566() /* ty=(Tensor[(585, 1), uint32],) */;
  %118 = %117.0;
  %119 = cast(%118, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
  %120 = asin(%119) /* ty=Tensor[(585, 1), float64] */;
  %121 = cast(%120, dtype="bool") /* ty=Tensor[(585, 1), bool] */;
  %122 = cast(%107, dtype="bool") /* ty=bool */;
  %123 = greater(%121, %122) /* ty=Tensor[(585, 1), bool] */;
  %124 = cast(%123, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
  %125 = cast(%123, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
  %126 = log10(%125) /* ty=Tensor[(585, 1), float64] */;
  %127 = cast(%123, dtype="uint64") /* ty=Tensor[(585, 1), uint64] */;
  %128 = shape_of(%126, dtype="int32") /* ty=Tensor[(2), int32] */;
  %129 = cast(%126, dtype="uint64") /* ty=Tensor[(585, 1), uint64] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %131 = %116.1;
  %132 = sqrt(%124) /* ty=Tensor[(585, 1), float64] */;
  %133 = left_shift(%129, %130) /* ty=Tensor[(585, ?), uint64] */;
  (%131, %var_4660, meta[relay.Constant][5] /* ty=Tensor[(1056), int32] */, %var_4662, %132, %133)
}

def @func_3561() -> (Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) {
  %155 = fn () -> (Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) {
    %134 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 8, 9), float64] */, dtype="float64") /* ty=Tensor[(16, 8, 9), float64] */;
    %135 = cast(meta[relay.Constant][7] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
    %136 = cast(meta[relay.Constant][7] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
    %137 = cast(meta[relay.Constant][8] /* ty=Tensor[(1620), int32] */, dtype="int32") /* ty=Tensor[(1620), int32] */;
    %138 = reshape(%135, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
    %139 = reshape(%136, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
    %140 = reshape(%137, newshape=[1620]) /* ty=Tensor[(1620), int32] */;
    %141 = @func_136(%138, %139, %140) /* ty=(Tensor[(10, 16, 10), bool], Tensor[(15, 9, 12), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(15, 9, 12), float32]) */;
    %142 = cast(meta[relay.Constant][9] /* ty=Tensor[(585, 1), uint32] */, dtype="uint32") /* ty=Tensor[(585, 1), uint32] */;
    %143 = cast(meta[relay.Constant][9] /* ty=Tensor[(585, 1), uint32] */, dtype="uint32") /* ty=Tensor[(585, 1), uint32] */;
    %144 = reshape(%142, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), uint32] */;
    %145 = reshape(%143, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), uint32] */;
    %146 = cast(meta[relay.Constant][8] /* ty=Tensor[(1620), int32] */, dtype="int32") /* ty=Tensor[(1620), int32] */;
    %147 = %141.4;
    %148 = cast(%147, dtype="int32") /* ty=Tensor[(15, 9, 12), int32] */;
    %149 = reshape(%146, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
    %150 = reshape(%148, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
    %151 = @func_39(%149, %150) /* ty=(Tensor[(15, 9, 12), int32], Tensor[(15, 9, 12), float32]) */;
    %152 = exp(%134) /* ty=Tensor[(16, 8, 9), float64] */;
    %153 = @func_3251(%144, %145) /* ty=Tensor[(15, 13, 3), bool] */;
    %154 = %151.1;
    (%152, %147, meta[relay.Constant][7] /* ty=Tensor[(1600), uint32] */, meta[relay.Constant][8] /* ty=Tensor[(1620), int32] */, %153, meta[relay.Constant][9] /* ty=Tensor[(585, 1), uint32] */, %154)
  };
  %155() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */
}

def @func_3568() -> (Tensor[(585, 1), uint32],) {
  @func_3566() /* ty=(Tensor[(585, 1), uint32],) */
}

def @func_5532(%var_5531: Tensor[(352), float64]) -> (float64, Tensor[(240), float32], Tensor[(240), float32], Tensor[(585, 352), bool], Tensor[(2, 120), float64], Tensor[(585, 6), float32]) {
  %176 = fn (%var_5473: Tensor[(352), float64]) -> (float64, Tensor[(240), float32], Tensor[(240), float32], Tensor[(585, 352), bool], Tensor[(2, 120), float64], Tensor[(585, 6), float32]) {
    %156 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
    %157 = cast(%var_5473, dtype="float64") /* ty=Tensor[(352), float64] */;
    %158 = cast(meta[relay.Constant][10] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %159 = reshape(%157, newshape=[11, 16, 2]) /* ty=Tensor[(11, 16, 2), float64] */;
    %160 = reshape(%158, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %161 = @func_1170(%159, %160) /* ty=(Tensor[(11, 16, 2), float64], Tensor[(1600), uint32], Tensor[(240), float32]) */;
    %162 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
    %163 = %162.5;
    %164 = cast(%163, dtype="bool") /* ty=Tensor[(585, 1), bool] */;
    %165 = cast(%var_5473, dtype="bool") /* ty=Tensor[(352), bool] */;
    %166 = @func_5161() /* ty=(Tensor[(2, 120), float64],) */;
    %167 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
    %168 = %167.1;
    %169 = cast(%168, dtype="float32") /* ty=Tensor[(1, 6), float32] */;
    %170 = cast(%163, dtype="float32") /* ty=Tensor[(585, 1), float32] */;
    %171 = %156.2;
    %172 = %161.2;
    %173 = less(%164, %165) /* ty=Tensor[(585, 352), bool] */;
    %174 = %166.0;
    %175 = floor_divide(%169, %170) /* ty=Tensor[(585, 6), float32] */;
    (%171, %172, meta[relay.Constant][10] /* ty=Tensor[(240), float32] */, %173, %174, %175)
  };
  %176(%var_5531) /* ty=(float64, Tensor[(240), float32], Tensor[(240), float32], Tensor[(585, 352), bool], Tensor[(2, 120), float64], Tensor[(585, 6), float32]) */
}

def @func_1572(%var_1570: float64) -> (Tensor[(1, 6), float64],) {
  @func_1569(%var_1570) /* ty=(Tensor[(1, 6), float64],) */
}

def @func_4704() -> (Tensor[(2, 120), float64],) {
  %177 = @func_4108() /* ty=Tensor[(2, 120), float64] */;
  (%177,)
}

def @func_6051(%var_6045: Tensor[(1056), int32]) -> (float64, Tensor[(352), float64], Tensor[(8, 70), int32], Tensor[(1056), int32], Tensor[(352), float64]) {
  %178 = @func_4155() /* ty=(float64,) */;
  %179 = %178.0;
  %180 = cast(%179, dtype="int32") /* ty=int32 */;
  %181 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 70), int32] */, dtype="int32") /* ty=Tensor[(8, 70), int32] */;
  %182 = cast(%var_6045, dtype="int32") /* ty=Tensor[(1056), int32] */;
  %183 = cast(meta[relay.Constant][12] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
  %184 = reshape(%180, newshape=[]) /* ty=int32 */;
  %185 = reshape(%181, newshape=[16, 7, 5]) /* ty=Tensor[(16, 7, 5), int32] */;
  %186 = reshape(%182, newshape=[1056]) /* ty=Tensor[(1056), int32] */;
  %187 = reshape(%183, newshape=[352]) /* ty=Tensor[(352), float64] */;
  %188 = @func_4248(%184, %185, %186, %187) /* ty=(Tensor[(16, 7, 5), bool], Tensor[(1600), uint32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(2, 120), bool]) */;
  %189 = %188.3;
  (%179, %189, meta[relay.Constant][11] /* ty=Tensor[(8, 70), int32] */, %var_6045, meta[relay.Constant][12] /* ty=Tensor[(352), float64] */)
}

def @func_6719(%var_6717: Tensor[(25, 6), float32], %var_6718: float64) -> (Tensor[(585, 1), uint32], Tensor[(20), float32], Tensor[(9, 7, 16), uint16], Tensor[(1008), uint16], float64, Tensor[(4, 88), float64], Tensor[(1600), uint32], Tensor[(240), float32], Tensor[(5, 10, 3), uint32], Tensor[(11, 16, 2), float64]) {
  @func_6715(%var_6717, %var_6718) /* ty=(Tensor[(585, 1), uint32], Tensor[(20), float32], Tensor[(9, 7, 16), uint16], Tensor[(1008), uint16], float64, Tensor[(4, 88), float64], Tensor[(1600), uint32], Tensor[(240), float32], Tensor[(5, 10, 3), uint32], Tensor[(11, 16, 2), float64]) */
}

def @func_5874(%var_5846: Tensor[(14, 4, 13), float64], %var_5869: Tensor[(1620), int32]) -> (Tensor[(14, 4, 13), float64], Tensor[(1620), int32], Tensor[(2, 800), uint32], Tensor[(1620), int32]) {
  %190 = cast(%var_5846, dtype="float64") /* ty=Tensor[(14, 4, 13), float64] */;
  %191 = erf(%190) /* ty=Tensor[(14, 4, 13), float64] */;
  %192 = cast(%191, dtype="float64") /* ty=Tensor[(14, 4, 13), float64] */;
  %193 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 800), uint32] */, dtype="uint32") /* ty=Tensor[(2, 800), uint32] */;
  %194 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 800), uint32] */, dtype="uint32") /* ty=Tensor[(2, 800), uint32] */;
  %195 = cast(%var_5869, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %196 = reshape(%193, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %197 = reshape(%194, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %198 = reshape(%195, newshape=[1620]) /* ty=Tensor[(1620), int32] */;
  %199 = @func_136(%196, %197, %198) /* ty=(Tensor[(10, 16, 10), bool], Tensor[(15, 9, 12), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(15, 9, 12), float32]) */;
  %200 = asin(%192) /* ty=Tensor[(14, 4, 13), float64] */;
  %201 = %199.2;
  (%200, %201, meta[relay.Constant][13] /* ty=Tensor[(2, 800), uint32] */, %var_5869)
}

def @func_4423(%var_4335: Tensor[(9, 4, 16), float32], %var_4364: Tensor[(240), float32]) -> (Tensor[(9, 4, 16), float64], Tensor[(1620), int32], Tensor[(1620), int32], Tensor[(1620), int32], Tensor[(9, 4, 16), bool], Tensor[(1, 6), float64], Tensor[(585, 240), int16], Tensor[(1, 6), float64], Tensor[(5, 10, 3), float32], Tensor[(25, 6), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32]) {
  %202 = cast(%var_4335, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %203 = @func_3990() /* ty=(Tensor[(15, 13, 3), float32], Tensor[(1620), int32], Tensor[(2, 120), float32]) */;
  %204 = cast(%var_4364, dtype="float32") /* ty=Tensor[(240), float32] */;
  %205 = reshape(%204, newshape=[2, 12, 10]) /* ty=Tensor[(2, 12, 10), float32] */;
  %206 = @func_362(%205) /* ty=(Tensor[(2, 12, 10), float32], Tensor[(1620), int32], Tensor[(1600), uint32], Tensor[(6, 270), int32]) */;
  %207 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
  %208 = cast(%var_4335, dtype="float32") /* ty=Tensor[(9, 4, 16), float32] */;
  %209 = exp(%208) /* ty=Tensor[(9, 4, 16), float32] */;
  %210 = cast(%var_4335, dtype="bool") /* ty=Tensor[(9, 4, 16), bool] */;
  %211 = shape_of(%209, dtype="int32") /* ty=Tensor[(3), int32] */;
  %212 = cast(%209, dtype="bool") /* ty=Tensor[(9, 4, 16), bool] */;
  %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %214 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
  %215 = @func_3566() /* ty=(Tensor[(585, 1), uint32],) */;
  %216 = %215.0;
  %217 = cast(%var_4364, dtype="int16") /* ty=Tensor[(240), int16] */;
  %218 = cast(%216, dtype="int16") /* ty=Tensor[(585, 1), int16] */;
  %219 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
  %220 = cast(meta[relay.Constant][14] /* ty=Tensor[(25, 6), float32] */, dtype="float32") /* ty=Tensor[(25, 6), float32] */;
  %221 = reshape(%220, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), float32] */;
  %222 = @func_3990() /* ty=(Tensor[(15, 13, 3), float32], Tensor[(1620), int32], Tensor[(2, 120), float32]) */;
  %223 = cast(meta[relay.Constant][15] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
  %224 = cast(meta[relay.Constant][15] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
  %225 = %203.1;
  %226 = cast(%225, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %227 = reshape(%223, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %228 = reshape(%224, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %229 = reshape(%226, newshape=[1620]) /* ty=Tensor[(1620), int32] */;
  %230 = @func_136(%227, %228, %229) /* ty=(Tensor[(10, 16, 10), bool], Tensor[(15, 9, 12), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(15, 9, 12), float32]) */;
  %231 = acos(%202) /* ty=Tensor[(9, 4, 16), float64] */;
  %232 = %206.1;
  %233 = %207.3;
  %234 = greater_equal(%212, %213) /* ty=Tensor[(9, 4, 16), bool] */;
  %235 = %214.1;
  %236 = logical_xor(%217, %218) /* ty=Tensor[(585, 240), int16] */;
  %237 = %219.1;
  %238 = @func_529(%221) /* ty=Tensor[(5, 10, 3), float32] */;
  %239 = %222.1;
  %240 = %230.3;
  (%231, %225, %232, %233, %234, %235, %236, %237, %238, meta[relay.Constant][14] /* ty=Tensor[(25, 6), float32] */, %239, %240, meta[relay.Constant][15] /* ty=Tensor[(1600), uint32] */)
}

def @func_6777(%var_6740: Tensor[(2, 120), float64]) -> Tensor[(2, 120), int16] {
  %241 = @func_5252() /* ty=(Tensor[(2, 120), float64],) */;
  %242 = %241.0;
  %243 = cast(%var_6740, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(2), int32] */;
  %245 = cast(%242, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %247 = mod(%245, %246) /* ty=Tensor[(2, 120), float64] */;
  %248 = cast(%247, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %249 = shape_of(%242, dtype="int32") /* ty=Tensor[(2), int32] */;
  %250 = cast(%242, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %252 = less(%250, %251) /* ty=Tensor[(2, 120), bool] */;
  %253 = cast(%var_6740, dtype="int16") /* ty=Tensor[(2, 120), int16] */;
  %254 = shape_of(%252, dtype="int32") /* ty=Tensor[(2), int32] */;
  %255 = cast(%252, dtype="int16") /* ty=Tensor[(2, 120), int16] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  bitwise_and(%255, %256) /* ty=Tensor[(2, 120), int16] */
}

def @func_4110() -> Tensor[(2, 120), float64] {
  @func_4108() /* ty=Tensor[(2, 120), float64] */
}

def @func_6866(%var_6864: Tensor[(14, 7, 1), float32]) -> Tensor[(14, 7, 16), float32] {
  @func_6863(%var_6864) /* ty=Tensor[(14, 7, 16), float32] */
}

def @func_2346(%var_2345: Tensor[(6, 16, 13), float32]) -> (Tensor[(6, 16, 13), float32], Tensor[(10, 16, 10), bool], Tensor[(1600), uint32], Tensor[(1620), int32]) {
  %267 = fn (%var_2322: Tensor[(6, 16, 13), float32]) -> (Tensor[(6, 16, 13), float32], Tensor[(10, 16, 10), bool], Tensor[(1600), uint32], Tensor[(1620), int32]) {
    %257 = cast(%var_2322, dtype="float32") /* ty=Tensor[(6, 16, 13), float32] */;
    %258 = cast(meta[relay.Constant][16] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
    %259 = cast(meta[relay.Constant][16] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
    %260 = cast(meta[relay.Constant][17] /* ty=Tensor[(1620), int32] */, dtype="int32") /* ty=Tensor[(1620), int32] */;
    %261 = reshape(%258, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
    %262 = reshape(%259, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
    %263 = reshape(%260, newshape=[1620]) /* ty=Tensor[(1620), int32] */;
    %264 = @func_136(%261, %262, %263) /* ty=(Tensor[(10, 16, 10), bool], Tensor[(15, 9, 12), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(15, 9, 12), float32]) */;
    %265 = asin(%257) /* ty=Tensor[(6, 16, 13), float32] */;
    %266 = %264.0;
    (%265, %266, meta[relay.Constant][16] /* ty=Tensor[(1600), uint32] */, meta[relay.Constant][17] /* ty=Tensor[(1620), int32] */)
  };
  %267(%var_2345) /* ty=(Tensor[(6, 16, 13), float32], Tensor[(10, 16, 10), bool], Tensor[(1600), uint32], Tensor[(1620), int32]) */
}

def @func_4782(%var_4779: Tensor[(11, 9, 16), float64], %var_4780: Tensor[(11, 9, 16), float64], %var_4781: Tensor[(11, 9, 16), float64]) -> (Tensor[(11, 9, 16), float64], Tensor[(11, 9, 16), float32]) {
  %278 = fn (%var_4764: Tensor[(11, 9, 16), float64], %var_4765: Tensor[(11, 9, 16), float64], %var_4771: Tensor[(11, 9, 16), float64]) -> (Tensor[(11, 9, 16), float64], Tensor[(11, 9, 16), float32]) {
    %268 = cast(%var_4765, dtype="float64") /* ty=Tensor[(11, 9, 16), float64] */;
    %269 = shape_of(%var_4764, dtype="int32") /* ty=Tensor[(3), int32] */;
    %270 = cast(%var_4764, dtype="float64") /* ty=Tensor[(11, 9, 16), float64] */;
    %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %272 = cast(%var_4771, dtype="float32") /* ty=Tensor[(11, 9, 16), float32] */;
    %273 = shape_of(%var_4765, dtype="int32") /* ty=Tensor[(3), int32] */;
    %274 = cast(%var_4765, dtype="float32") /* ty=Tensor[(11, 9, 16), float32] */;
    %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %276 = mod(%270, %271) /* ty=Tensor[(11, 9, 16), float64] */;
    %277 = divide(%274, %275) /* ty=Tensor[(11, 9, 16), float32] */;
    (%276, %277)
  };
  %278(%var_4779, %var_4780, %var_4781) /* ty=(Tensor[(11, 9, 16), float64], Tensor[(11, 9, 16), float32]) */
}

def @func_3778(%var_3776: Tensor[(585, 3), uint32], %var_3777: Tensor[(48), float32]) -> (Tensor[(585, 3), uint16], Tensor[(585, 3), float64], Tensor[(8, 6, 1), float32], Tensor[(48), float32]) {
  %293 = fn (%var_3748: Tensor[(585, 3), uint32], %var_3771: Tensor[(48), float32]) -> (Tensor[(585, 3), uint16], Tensor[(585, 3), float64], Tensor[(8, 6, 1), float32], Tensor[(48), float32]) {
    %279 = @func_3566() /* ty=(Tensor[(585, 1), uint32],) */;
    %280 = %279.0;
    %281 = cast(%280, dtype="uint16") /* ty=Tensor[(585, 1), uint16] */;
    %282 = cast(%var_3748, dtype="uint16") /* ty=Tensor[(585, 3), uint16] */;
    %283 = cast(%var_3748, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
    %284 = cos(%283) /* ty=Tensor[(585, 3), float32] */;
    %285 = cast(%280, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
    %286 = cast(%284, dtype="float64") /* ty=Tensor[(585, 3), float64] */;
    %287 = cast(%var_3771, dtype="float32") /* ty=Tensor[(48), float32] */;
    %288 = reshape(%287, newshape=[8, 6, 1]) /* ty=Tensor[(8, 6, 1), float32] */;
    %289 = @func_2808(%288) /* ty=(Tensor[(8, 1, 1), float64], Tensor[(8, 6, 1), float32]) */;
    %290 = bitwise_and(%281, %282) /* ty=Tensor[(585, 3), uint16] */;
    %291 = mod(%285, %286) /* ty=Tensor[(585, 3), float64] */;
    %292 = %289.1;
    (%290, %291, %292, %var_3771)
  };
  %293(%var_3776, %var_3777) /* ty=(Tensor[(585, 3), uint16], Tensor[(585, 3), float64], Tensor[(8, 6, 1), float32], Tensor[(48), float32]) */
}

def @func_5592(%var_5590: Tensor[(12, 15, 5), float64]) -> Tensor[(12, 15, 5), float64] {
  @func_5589(%var_5590) /* ty=Tensor[(12, 15, 5), float64] */
}

def @func_3255(%var_3253: Tensor[(15, 13, 3), uint32], %var_3254: Tensor[(15, 13, 3), uint32]) -> Tensor[(15, 13, 3), bool] {
  @func_3251(%var_3253, %var_3254) /* ty=Tensor[(15, 13, 3), bool] */
}

def @func_5162() -> (Tensor[(2, 120), float64],) {
  %295 = fn () -> (Tensor[(2, 120), float64],) {
    %294 = @func_5098() /* ty=Tensor[(2, 120), float64] */;
    (%294,)
  };
  %295() /* ty=(Tensor[(2, 120), float64],) */
}

def @func_5932() -> Tensor[(15, 13, 3), float64] {
  %297 = fn () -> Tensor[(15, 13, 3), float64] {
    %296 = @func_4551() /* ty=(Tensor[(15, 13, 3), float64], Tensor[(1, 6), float64]) */;
    %296.0
  };
  %297() /* ty=Tensor[(15, 13, 3), float64] */
}

def @func_4202(%var_4200: Tensor[(1620), int32], %var_4201: Tensor[(240), float32]) -> (Tensor[(1620), float64], Tensor[(48), float32], Tensor[(1755), uint32], Tensor[(48), float32], Tensor[(1600), uint32], Tensor[(352), float64], Tensor[(240), float32]) {
  %317 = fn (%var_4170: Tensor[(1620), int32], %var_4187: Tensor[(240), float32]) -> (Tensor[(1620), float64], Tensor[(48), float32], Tensor[(1755), uint32], Tensor[(48), float32], Tensor[(1600), uint32], Tensor[(352), float64], Tensor[(240), float32]) {
    %298 = @func_3990() /* ty=(Tensor[(15, 13, 3), float32], Tensor[(1620), int32], Tensor[(2, 120), float32]) */;
    %299 = %298.1;
    %300 = cast(%var_4170, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %301 = shape_of(%299, dtype="int32") /* ty=Tensor[(1), int32] */;
    %302 = cast(%299, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?), float64] */;
    %304 = cast(meta[relay.Constant][18] /* ty=Tensor[(1755), uint32] */, dtype="uint32") /* ty=Tensor[(1755), uint32] */;
    %305 = cast(meta[relay.Constant][19] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %306 = reshape(%304, newshape=[585, 3]) /* ty=Tensor[(585, 3), uint32] */;
    %307 = reshape(%305, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %308 = @func_3775(%306, %307) /* ty=(Tensor[(585, 3), uint16], Tensor[(585, 3), float64], Tensor[(8, 6, 1), float32], Tensor[(48), float32]) */;
    %309 = cast(meta[relay.Constant][20] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
    %310 = cast(%var_4187, dtype="float32") /* ty=Tensor[(240), float32] */;
    %311 = reshape(%309, newshape=[11, 16, 2]) /* ty=Tensor[(11, 16, 2), float64] */;
    %312 = reshape(%310, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %313 = @func_1170(%311, %312) /* ty=(Tensor[(11, 16, 2), float64], Tensor[(1600), uint32], Tensor[(240), float32]) */;
    %314 = subtract(%302, %303) /* ty=Tensor[(1620), float64] */;
    %315 = %308.3;
    %316 = %313.1;
    (%314, %315, meta[relay.Constant][18] /* ty=Tensor[(1755), uint32] */, meta[relay.Constant][19] /* ty=Tensor[(48), float32] */, %316, meta[relay.Constant][20] /* ty=Tensor[(352), float64] */, %var_4187)
  };
  %317(%var_4200, %var_4201) /* ty=(Tensor[(1620), float64], Tensor[(48), float32], Tensor[(1755), uint32], Tensor[(48), float32], Tensor[(1600), uint32], Tensor[(352), float64], Tensor[(240), float32]) */
}

def @func_6510() -> (Tensor[(2, 120), float64], Tensor[(1, 11), float32], Tensor[(11), float32]) {
  @func_6508() /* ty=(Tensor[(2, 120), float64], Tensor[(1, 11), float32], Tensor[(11), float32]) */
}

def @func_3937(%var_3917: Tensor[(15, 9, 12), float32]) -> (Tensor[(15, 9, 12), float32],) {
  %318 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
  %319 = %318.1;
  %320 = cast(%var_3917, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
  %321 = shape_of(%319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %322 = cast(%319, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %324 = greater_equal(%322, %323) /* ty=Tensor[(15, 9, 12), bool] */;
  %325 = cast(%324, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
  %326 = shape_of(%319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %327 = cast(%319, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
  %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %329 = less_equal(%327, %328) /* ty=Tensor[(15, 9, 12), bool] */;
  %330 = cast(%329, dtype="float32") /* ty=Tensor[(15, 9, 12), float32] */;
  %331 = sqrt(%330) /* ty=Tensor[(15, 9, 12), float32] */;
  (%331,)
}

def @func_5099() -> Tensor[(2, 120), float64] {
  %332 = fn () -> Tensor[(2, 120), float64] {
    @func_4108() /* ty=Tensor[(2, 120), float64] */
  };
  %332() /* ty=Tensor[(2, 120), float64] */
}

def @func_3886(%var_3882: Tensor[(9, 7, 16), uint16], %var_3883: Tensor[(9, 7, 16), uint16], %var_3884: float64, %var_3885: Tensor[(352), float64]) -> (Tensor[(9, 7, 16), uint16], Tensor[(1, 6), float64], float64, Tensor[(9, 7, 16), float32], Tensor[(16, 8, 9), float64], Tensor[(1600), uint32], Tensor[(352), float64], Tensor[(240), float32]) {
  %352 = fn (%var_3846: Tensor[(9, 7, 16), uint16], %var_3847: Tensor[(9, 7, 16), uint16], %var_3853: float64, %var_3877: Tensor[(352), float64]) -> (Tensor[(9, 7, 16), uint16], Tensor[(1, 6), float64], float64, Tensor[(9, 7, 16), float32], Tensor[(16, 8, 9), float64], Tensor[(1600), uint32], Tensor[(352), float64], Tensor[(240), float32]) {
    %333 = cast(%var_3847, dtype="uint16") /* ty=Tensor[(9, 7, 16), uint16] */;
    %334 = shape_of(%var_3846, dtype="int32") /* ty=Tensor[(3), int32] */;
    %335 = cast(%var_3846, dtype="uint16") /* ty=Tensor[(9, 7, 16), uint16] */;
    %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %337 = cast(%var_3853, dtype="float64") /* ty=float64 */;
    %338 = reshape(%337, newshape=[]) /* ty=float64 */;
    %339 = @func_1569(%338) /* ty=(Tensor[(1, 6), float64],) */;
    %340 = cast(%var_3847, dtype="float32") /* ty=Tensor[(9, 7, 16), float32] */;
    %341 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
    %342 = cast(%var_3877, dtype="float64") /* ty=Tensor[(352), float64] */;
    %343 = cast(meta[relay.Constant][21] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %344 = reshape(%342, newshape=[11, 16, 2]) /* ty=Tensor[(11, 16, 2), float64] */;
    %345 = reshape(%343, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %346 = @func_1170(%344, %345) /* ty=(Tensor[(11, 16, 2), float64], Tensor[(1600), uint32], Tensor[(240), float32]) */;
    %347 = left_shift(%335, %336) /* ty=Tensor[(9, 7, 16), uint16] */;
    %348 = %339.0;
    %349 = rsqrt(%340) /* ty=Tensor[(9, 7, 16), float32] */;
    %350 = %341.0;
    %351 = %346.1;
    (%347, %348, %var_3853, %349, %350, %351, %var_3877, meta[relay.Constant][21] /* ty=Tensor[(240), float32] */)
  };
  %352(%var_3882, %var_3883, %var_3884, %var_3885) /* ty=(Tensor[(9, 7, 16), uint16], Tensor[(1, 6), float64], float64, Tensor[(9, 7, 16), float32], Tensor[(16, 8, 9), float64], Tensor[(1600), uint32], Tensor[(352), float64], Tensor[(240), float32]) */
}

def @func_4427(%var_4425: Tensor[(9, 4, 16), float32], %var_4426: Tensor[(240), float32]) -> (Tensor[(9, 4, 16), float64], Tensor[(1620), int32], Tensor[(1620), int32], Tensor[(1620), int32], Tensor[(9, 4, 16), bool], Tensor[(1, 6), float64], Tensor[(585, 240), int16], Tensor[(1, 6), float64], Tensor[(5, 10, 3), float32], Tensor[(25, 6), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32]) {
  @func_4423(%var_4425, %var_4426) /* ty=(Tensor[(9, 4, 16), float64], Tensor[(1620), int32], Tensor[(1620), int32], Tensor[(1620), int32], Tensor[(9, 4, 16), bool], Tensor[(1, 6), float64], Tensor[(585, 240), int16], Tensor[(1, 6), float64], Tensor[(5, 10, 3), float32], Tensor[(25, 6), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32]) */
}

def @func_1569(%var_1559: float64) -> (Tensor[(1, 6), float64],) {
  %353 = cast(%var_1559, dtype="float64") /* ty=float64 */;
  %354 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 6), float64] */, dtype="float64") /* ty=Tensor[(1, 6), float64] */;
  %355 = floor_mod(%353, %354) /* ty=Tensor[(1, 6), float64] */;
  (%355,)
}

def @func_3831() -> (Tensor[(15, 13, 3), float64],) {
  %360 = fn () -> (Tensor[(15, 13, 3), float64],) {
    %356 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
    %357 = %356.4;
    %358 = cast(%357, dtype="float64") /* ty=Tensor[(15, 13, 3), float64] */;
    %359 = asinh(%358) /* ty=Tensor[(15, 13, 3), float64] */;
    (%359,)
  };
  %360() /* ty=(Tensor[(15, 13, 3), float64],) */
}

def @func_5378() -> Tensor[(585, 1), uint32] {
  %362 = fn () -> Tensor[(585, 1), uint32] {
    %361 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
    %361.0
  };
  %362() /* ty=Tensor[(585, 1), uint32] */
}

def @func_4108() -> Tensor[(2, 120), float64] {
  %363 = @func_3990() /* ty=(Tensor[(15, 13, 3), float32], Tensor[(1620), int32], Tensor[(2, 120), float32]) */;
  %364 = %363.2;
  %365 = cast(%364, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  log2(%365) /* ty=Tensor[(2, 120), float64] */
}

def @func_5823(%var_5819: Tensor[(2, 120), float64], %var_5820: Tensor[(352), float64], %var_5821: Tensor[(900), float64], %var_5822: Tensor[(2, 120), float32]) -> (Tensor[(2, 120), bool], Tensor[(15, 13, 3), uint16], Tensor[(352), float64], Tensor[(1, 6), float64], Tensor[(12, 15, 5), float64], Tensor[(900), float64], Tensor[(2, 120), int8], Tensor[(2, 120), float64]) {
  @func_5817(%var_5819, %var_5820, %var_5821, %var_5822) /* ty=(Tensor[(2, 120), bool], Tensor[(15, 13, 3), uint16], Tensor[(352), float64], Tensor[(1, 6), float64], Tensor[(12, 15, 5), float64], Tensor[(900), float64], Tensor[(2, 120), int8], Tensor[(2, 120), float64]) */
}

def @main() -> (Tensor[(15, 13, 3), float32],) {
  %366 = @func_5931() /* ty=Tensor[(15, 13, 3), float64] */;
  %367 = cast(%366, dtype="float32") /* ty=Tensor[(15, 13, 3), float32] */;
  %368 = sin(%367) /* ty=Tensor[(15, 13, 3), float32] */;
  (%368,)
}

def @func_3684(%var_3683: float64) -> (float64, Tensor[(585, 6), bool], Tensor[(15, 13, 3), bool], Tensor[(1, 6), float64], Tensor[(585, ?), int8]) {
  %399 = fn (%var_3637: float64) -> (float64, Tensor[(585, 6), bool], Tensor[(15, 13, 3), bool], Tensor[(1, 6), float64], Tensor[(585, ?), int8]) {
    %369 = @func_3566() /* ty=(Tensor[(585, 1), uint32],) */;
    %370 = %369.0;
    %371 = cast(%370, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
    %372 = atan(%371) /* ty=Tensor[(585, 1), float64] */;
    %373 = cast(%var_3637, dtype="float64") /* ty=float64 */;
    %374 = reshape(%373, newshape=[]) /* ty=float64 */;
    %375 = @func_1569(%374) /* ty=(Tensor[(1, 6), float64],) */;
    %376 = %375.0;
    %377 = cast(%372, dtype="bool") /* ty=Tensor[(585, 1), bool] */;
    %378 = cast(%376, dtype="bool") /* ty=Tensor[(1, 6), bool] */;
    %379 = cast(%372, dtype="uint32") /* ty=Tensor[(585, 1), uint32] */;
    %380 = cast(%370, dtype="uint32") /* ty=Tensor[(585, 1), uint32] */;
    %381 = reshape(%379, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), uint32] */;
    %382 = reshape(%380, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), uint32] */;
    %383 = @func_3251(%381, %382) /* ty=Tensor[(15, 13, 3), bool] */;
    %384 = cast(%372, dtype="bool") /* ty=Tensor[(585, 1), bool] */;
    %385 = shape_of(%383, dtype="int32") /* ty=Tensor[(3), int32] */;
    %386 = cast(%383, dtype="bool") /* ty=Tensor[(15, 13, 3), bool] */;
    %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %388 = cast(%var_3637, dtype="float64") /* ty=float64 */;
    %389 = reshape(%388, newshape=[]) /* ty=float64 */;
    %390 = @func_1569(%389) /* ty=(Tensor[(1, 6), float64],) */;
    %391 = cast(%383, dtype="int8") /* ty=Tensor[(15, 13, 3), int8] */;
    %392 = shape_of(%370, dtype="int32") /* ty=Tensor[(2), int32] */;
    %393 = cast(%370, dtype="int8") /* ty=Tensor[(585, 1), int8] */;
    %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %395 = greater_equal(%377, %378) /* ty=Tensor[(585, 6), bool] */;
    %396 = less(%386, %387) /* ty=Tensor[(15, 13, 3), bool] */;
    %397 = %390.0;
    %398 = bitwise_xor(%393, %394) /* ty=Tensor[(585, ?), int8] */;
    (%var_3637, %395, %396, %397, %398)
  };
  %399(%var_3683) /* ty=(float64, Tensor[(585, 6), bool], Tensor[(15, 13, 3), bool], Tensor[(1, 6), float64], Tensor[(585, ?), int8]) */
}

def @func_5230(%var_5227: Tensor[(1, 10, 2), float32], %var_5228: Tensor[(150), float32], %var_5229: Tensor[(5, 10, 3), float32]) -> (Tensor[(1, 10, 2), float32], Tensor[(150), float32], Tensor[(5, 10, 3), bool]) {
  %410 = fn (%var_5186: Tensor[(1, 10, 2), float32], %var_5201: Tensor[(150), float32], %var_5221: Tensor[(5, 10, 3), float32]) -> (Tensor[(1, 10, 2), float32], Tensor[(150), float32], Tensor[(5, 10, 3), bool]) {
    %400 = cast(%var_5186, dtype="float32") /* ty=Tensor[(1, 10, 2), float32] */;
    %401 = cast(%var_5201, dtype="float32") /* ty=Tensor[(150), float32] */;
    %402 = reshape(%401, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), float32] */;
    %403 = @func_529(%402) /* ty=Tensor[(5, 10, 3), float32] */;
    %404 = cast(%var_5221, dtype="bool") /* ty=Tensor[(5, 10, 3), bool] */;
    %405 = shape_of(%403, dtype="int32") /* ty=Tensor[(3), int32] */;
    %406 = cast(%403, dtype="bool") /* ty=Tensor[(5, 10, 3), bool] */;
    %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %408 = atanh(%400) /* ty=Tensor[(1, 10, 2), float32] */;
    %409 = not_equal(%406, %407) /* ty=Tensor[(5, 10, 3), bool] */;
    (%408, %var_5201, %409)
  };
  %410(%var_5227, %var_5228, %var_5229) /* ty=(Tensor[(1, 10, 2), float32], Tensor[(150), float32], Tensor[(5, 10, 3), bool]) */
}

def @func_6172() -> Tensor[(2, 120), float64] {
  @func_6170() /* ty=Tensor[(2, 120), float64] */
}

def @func_1170(%var_1131: Tensor[(11, 16, 2), float64], %var_1138: Tensor[(240), float32]) -> (Tensor[(11, 16, 2), float64], Tensor[(1600), uint32], Tensor[(240), float32]) {
  %411 = cast(%var_1131, dtype="float64") /* ty=Tensor[(11, 16, 2), float64] */;
  %412 = cast(%var_1138, dtype="float32") /* ty=Tensor[(240), float32] */;
  %413 = reshape(%412, newshape=[2, 12, 10]) /* ty=Tensor[(2, 12, 10), float32] */;
  %414 = @func_362(%413) /* ty=(Tensor[(2, 12, 10), float32], Tensor[(1620), int32], Tensor[(1600), uint32], Tensor[(6, 270), int32]) */;
  %415 = sinh(%411) /* ty=Tensor[(11, 16, 2), float64] */;
  %416 = %414.2;
  (%415, %416, %var_1138)
}

def @func_365(%var_363: Tensor[(2, 12, 10), float32]) -> (Tensor[(2, 12, 10), float32], Tensor[(1620), int32], Tensor[(1600), uint32], Tensor[(6, 270), int32]) {
  @func_362(%var_363) /* ty=(Tensor[(2, 12, 10), float32], Tensor[(1620), int32], Tensor[(1600), uint32], Tensor[(6, 270), int32]) */
}

def @func_5254() -> (Tensor[(2, 120), float64],) {
  @func_5252() /* ty=(Tensor[(2, 120), float64],) */
}

def @func_2845(%var_2844: Tensor[(2, 10, 12), float32]) -> Tensor[(2, 10, 12), float32] {
  %418 = fn (%var_2834: Tensor[(2, 10, 12), float32]) -> Tensor[(2, 10, 12), float32] {
    %417 = cast(%var_2834, dtype="float32") /* ty=Tensor[(2, 10, 12), float32] */;
    log10(%417) /* ty=Tensor[(2, 10, 12), float32] */
  };
  %418(%var_2844) /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_6508() -> (Tensor[(2, 120), float64], Tensor[(1, 11), float32], Tensor[(11), float32]) {
  %419 = @func_5161() /* ty=(Tensor[(2, 120), float64],) */;
  %420 = cast(meta[relay.Constant][23] /* ty=Tensor[(11), float32] */, dtype="float32") /* ty=Tensor[(11), float32] */;
  %421 = reshape(%420, newshape=[1, 11]) /* ty=Tensor[(1, 11), float32] */;
  %422 = @func_5410(%421) /* ty=(Tensor[(1, 11), float32],) */;
  %423 = %419.0;
  %424 = %422.0;
  (%423, %424, meta[relay.Constant][23] /* ty=Tensor[(11), float32] */)
}

def @func_362(%var_353: Tensor[(2, 12, 10), float32]) -> (Tensor[(2, 12, 10), float32], Tensor[(1620), int32], Tensor[(1600), uint32], Tensor[(6, 270), int32]) {
  %425 = cast(%var_353, dtype="float32") /* ty=Tensor[(2, 12, 10), float32] */;
  %426 = cast(meta[relay.Constant][24] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
  %427 = cast(meta[relay.Constant][24] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
  %428 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 270), int32] */, dtype="int32") /* ty=Tensor[(6, 270), int32] */;
  %429 = reshape(%426, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %430 = reshape(%427, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
  %431 = reshape(%428, newshape=[1620]) /* ty=Tensor[(1620), int32] */;
  %432 = @func_136(%429, %430, %431) /* ty=(Tensor[(10, 16, 10), bool], Tensor[(15, 9, 12), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(15, 9, 12), float32]) */;
  %433 = rsqrt(%425) /* ty=Tensor[(2, 12, 10), float32] */;
  %434 = %432.2;
  (%433, %434, meta[relay.Constant][24] /* ty=Tensor[(1600), uint32] */, meta[relay.Constant][25] /* ty=Tensor[(6, 270), int32] */)
}

def @func_5817(%var_5719: Tensor[(2, 120), float64], %var_5749: Tensor[(352), float64], %var_5803: Tensor[(900), float64], %var_5807: Tensor[(2, 120), float32]) -> (Tensor[(2, 120), bool], Tensor[(15, 13, 3), uint16], Tensor[(352), float64], Tensor[(1, 6), float64], Tensor[(12, 15, 5), float64], Tensor[(900), float64], Tensor[(2, 120), int8], Tensor[(2, 120), float64]) {
  %435 = @func_5161() /* ty=(Tensor[(2, 120), float64],) */;
  %436 = %435.0;
  %437 = cast(%var_5719, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %438 = shape_of(%436, dtype="int32") /* ty=Tensor[(2), int32] */;
  %439 = cast(%436, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %441 = cast(%var_5749, dtype="float64") /* ty=Tensor[(352), float64] */;
  %442 = reshape(%441, newshape=[1, 352]) /* ty=Tensor[(1, 352), float64] */;
  %443 = @func_4904(%442) /* ty=(Tensor[(1056), int32], Tensor[(10, 352), bool], Tensor[(15, 13, 3), uint16]) */;
  %444 = @func_4551() /* ty=(Tensor[(15, 13, 3), float64], Tensor[(1, 6), float64]) */;
  %445 = cast(%var_5803, dtype="float64") /* ty=Tensor[(900), float64] */;
  %446 = reshape(%445, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float64] */;
  %447 = cast(%436, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %448 = shape_of(%var_5719, dtype="int32") /* ty=Tensor[(2), int32] */;
  %449 = cast(%var_5719, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %451 = greater_equal(%449, %450) /* ty=Tensor[(2, 120), bool] */;
  %452 = cast(%451, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %453 = asinh(%452) /* ty=Tensor[(2, 120), float32] */;
  %454 = cast(%var_5807, dtype="int8") /* ty=Tensor[(2, 120), int8] */;
  %455 = shape_of(%453, dtype="int32") /* ty=Tensor[(2), int32] */;
  %456 = cast(%453, dtype="int8") /* ty=Tensor[(2, 120), int8] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %458 = cast(%453, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %459 = less_equal(%439, %440) /* ty=Tensor[(2, 120), bool] */;
  %460 = %443.2;
  %461 = %444.1;
  %462 = @func_5589(%446) /* ty=Tensor[(12, 15, 5), float64] */;
  %463 = logical_xor(%456, %457) /* ty=Tensor[(2, 120), int8] */;
  %464 = erf(%458) /* ty=Tensor[(2, 120), float64] */;
  (%459, %460, %var_5749, %461, %462, %var_5803, %463, %464)
}

def @func_6863(%var_6848: Tensor[(14, 7, 1), float32]) -> Tensor[(14, 7, 16), float32] {
  %465 = cast(%var_6848, dtype="float32") /* ty=Tensor[(14, 7, 1), float32] */;
  %466 = cast(meta[relay.Constant][26] /* ty=Tensor[(14, 7, 16), float32] */, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
  add(%465, %466) /* ty=Tensor[(14, 7, 16), float32] */
}

def @func_43(%var_41: Tensor[(15, 9, 12), int32], %var_42: Tensor[(15, 9, 12), int32]) -> (Tensor[(15, 9, 12), int32], Tensor[(15, 9, 12), float32]) {
  @func_39(%var_41, %var_42) /* ty=(Tensor[(15, 9, 12), int32], Tensor[(15, 9, 12), float32]) */
}

def @func_4308(%var_4307: float64) -> (Tensor[(1620), int32], Tensor[(540, 3), int32], Tensor[(585, 1600), bool], Tensor[(1755), uint32], Tensor[(240), float32], Tensor[(1, 6), float64], float64) {
  %490 = fn (%var_4297: float64) -> (Tensor[(1620), int32], Tensor[(540, 3), int32], Tensor[(585, 1600), bool], Tensor[(1755), uint32], Tensor[(240), float32], Tensor[(1, 6), float64], float64) {
    %467 = cast(meta[relay.Constant][27] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
    %468 = cast(meta[relay.Constant][27] /* ty=Tensor[(1600), uint32] */, dtype="uint32") /* ty=Tensor[(1600), uint32] */;
    %469 = cast(meta[relay.Constant][28] /* ty=Tensor[(540, 3), int32] */, dtype="int32") /* ty=Tensor[(540, 3), int32] */;
    %470 = reshape(%467, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
    %471 = reshape(%468, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint32] */;
    %472 = reshape(%469, newshape=[1620]) /* ty=Tensor[(1620), int32] */;
    %473 = @func_136(%470, %471, %472) /* ty=(Tensor[(10, 16, 10), bool], Tensor[(15, 9, 12), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(15, 9, 12), float32]) */;
    %474 = @func_3566() /* ty=(Tensor[(585, 1), uint32],) */;
    %475 = %474.0;
    %476 = cast(meta[relay.Constant][27] /* ty=Tensor[(1600), uint32] */, dtype="bool") /* ty=Tensor[(1600), bool] */;
    %477 = cast(%475, dtype="bool") /* ty=Tensor[(585, 1), bool] */;
    %478 = %473.2;
    %479 = cast(%478, dtype="int32") /* ty=Tensor[(1620), int32] */;
    %480 = cast(meta[relay.Constant][29] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %481 = reshape(%479, newshape=[1620]) /* ty=Tensor[(1620), int32] */;
    %482 = reshape(%480, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %483 = @func_4199(%481, %482) /* ty=(Tensor[(1620), float64], Tensor[(48), float32], Tensor[(1755), uint32], Tensor[(48), float32], Tensor[(1600), uint32], Tensor[(352), float64], Tensor[(240), float32]) */;
    %484 = cast(%var_4297, dtype="float64") /* ty=float64 */;
    %485 = reshape(%484, newshape=[]) /* ty=float64 */;
    %486 = @func_1569(%485) /* ty=(Tensor[(1, 6), float64],) */;
    %487 = logical_and(%476, %477) /* ty=Tensor[(585, 1600), bool] */;
    %488 = %483.2;
    %489 = %486.0;
    (%478, meta[relay.Constant][28] /* ty=Tensor[(540, 3), int32] */, %487, %488, meta[relay.Constant][29] /* ty=Tensor[(240), float32] */, %489, %var_4297)
  };
  %490(%var_4307) /* ty=(Tensor[(1620), int32], Tensor[(540, 3), int32], Tensor[(585, 1600), bool], Tensor[(1755), uint32], Tensor[(240), float32], Tensor[(1, 6), float64], float64) */
}

def @func_39(%var_24: Tensor[(15, 9, 12), int32], %var_25: Tensor[(15, 9, 12), int32]) -> (Tensor[(15, 9, 12), int32], Tensor[(15, 9, 12), float32]) {
  %491 = cast(%var_25, dtype="int32") /* ty=Tensor[(15, 9, 12), int32] */;
  %492 = shape_of(%var_24, dtype="int32") /* ty=Tensor[(3), int32] */;
  %493 = cast(%var_24, dtype="int32") /* ty=Tensor[(15, 9, 12), int32] */;
  %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %495 = cast(%var_24, dtype="float32") /* ty=Tensor[(15, 9, 12), float32] */;
  %496 = multiply(%493, %494) /* ty=Tensor[(15, 9, 12), int32] */;
  %497 = acosh(%495) /* ty=Tensor[(15, 9, 12), float32] */;
  (%496, %497)
}

def @func_5619(%var_5616: Tensor[(8, 16, 15), int8], %var_5617: Tensor[(8, 16, 15), int8], %var_5618: Tensor[(1755), uint32]) -> (Tensor[(8, 16, 15), int8], Tensor[(585, 3), float64], Tensor[(1755), uint32], Tensor[(48), float32], Tensor[(15, 9, 12), float64]) {
  @func_5614(%var_5616, %var_5617, %var_5618) /* ty=(Tensor[(8, 16, 15), int8], Tensor[(585, 3), float64], Tensor[(1755), uint32], Tensor[(48), float32], Tensor[(15, 9, 12), float64]) */
}

def @func_4987(%var_4985: Tensor[(13, 1, 1), float32], %var_4986: Tensor[(352), float64]) -> (Tensor[(13, ?, ?), int32], Tensor[(15, 13, 3), uint16], Tensor[(352), float64]) {
  @func_4983(%var_4985, %var_4986) /* ty=(Tensor[(13, ?, ?), int32], Tensor[(15, 13, 3), uint16], Tensor[(352), float64]) */
}

def @func_4706() -> (Tensor[(2, 120), float64],) {
  @func_4704() /* ty=(Tensor[(2, 120), float64],) */
}

def @func_6596(%var_6595: Tensor[(2, 120), float64]) -> Tensor[(2, 120), bool] {
  %503 = fn (%var_6585: Tensor[(2, 120), float64]) -> Tensor[(2, 120), bool] {
    %498 = @func_5098() /* ty=Tensor[(2, 120), float64] */;
    %499 = cast(%var_6585, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
    %500 = shape_of(%498, dtype="int32") /* ty=Tensor[(2), int32] */;
    %501 = cast(%498, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
    %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    equal(%501, %502) /* ty=Tensor[(2, 120), bool] */
  };
  %503(%var_6595) /* ty=Tensor[(2, 120), bool] */
}

def @func_6915(%var_6913: Tensor[(2, 120), float64]) -> (Tensor[(2, 120), int16], Tensor[(585, 1), float64]) {
  @func_6912(%var_6913) /* ty=(Tensor[(2, 120), int16], Tensor[(585, 1), float64]) */
}

def @func_7080(%var_7044: Tensor[(75, 2), float32], %var_7067: Tensor[(2, 120), bool]) -> (Tensor[(2, 120), float64], Tensor[(5, 10, 3), float32], Tensor[(75, 2), float32], Tensor[(2, 120), int8]) {
  %504 = cast(%var_7044, dtype="float32") /* ty=Tensor[(75, 2), float32] */;
  %505 = reshape(%504, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), float32] */;
  %506 = @func_5098() /* ty=Tensor[(2, 120), float64] */;
  %507 = cast(%506, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %508 = reshape(%507, newshape=[2, 120]) /* ty=Tensor[(2, 120), float64] */;
  %509 = @func_6594(%508) /* ty=Tensor[(2, 120), bool] */;
  %510 = cast(%var_7067, dtype="int8") /* ty=Tensor[(2, 120), int8] */;
  %511 = shape_of(%509, dtype="int32") /* ty=Tensor[(2), int32] */;
  %512 = cast(%509, dtype="int8") /* ty=Tensor[(2, 120), int8] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %514 = @func_529(%505) /* ty=Tensor[(5, 10, 3), float32] */;
  %515 = left_shift(%512, %513) /* ty=Tensor[(2, 120), int8] */;
  (%506, %514, %var_7044, %515)
}

def @func_7084(%var_7082: Tensor[(75, 2), float32], %var_7083: Tensor[(2, 120), bool]) -> (Tensor[(2, 120), float64], Tensor[(5, 10, 3), float32], Tensor[(75, 2), float32], Tensor[(2, 120), int8]) {
  @func_7080(%var_7082, %var_7083) /* ty=(Tensor[(2, 120), float64], Tensor[(5, 10, 3), float32], Tensor[(75, 2), float32], Tensor[(2, 120), int8]) */
}

def @func_4253(%var_4249: int32, %var_4250: Tensor[(16, 7, 5), int32], %var_4251: Tensor[(1056), int32], %var_4252: Tensor[(352), float64]) -> (Tensor[(16, 7, 5), bool], Tensor[(1600), uint32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(2, 120), bool]) {
  %532 = fn (%var_4211: int32, %var_4212: Tensor[(16, 7, 5), int32], %var_4219: Tensor[(1056), int32], %var_4220: Tensor[(352), float64]) -> (Tensor[(16, 7, 5), bool], Tensor[(1600), uint32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(2, 120), bool]) {
    %516 = cast(%var_4211, dtype="bool") /* ty=bool */;
    %517 = cast(%var_4212, dtype="bool") /* ty=Tensor[(16, 7, 5), bool] */;
    %518 = cast(%var_4219, dtype="int32") /* ty=Tensor[(1056), int32] */;
    %519 = cast(%var_4219, dtype="int32") /* ty=Tensor[(1056), int32] */;
    %520 = cast(%var_4220, dtype="float64") /* ty=Tensor[(352), float64] */;
    %521 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 120), float32] */, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
    %522 = reshape(%518, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), int32] */;
    %523 = reshape(%519, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), int32] */;
    %524 = reshape(%520, newshape=[8, 44]) /* ty=Tensor[(8, 44), float64] */;
    %525 = reshape(%521, newshape=[120, 2]) /* ty=Tensor[(120, 2), float32] */;
    %526 = @func_2048(%522, %523, %524, %525) /* ty=(Tensor[(11, 12, 8), int32], Tensor[(1600), uint32], Tensor[(8, 44), float64], Tensor[(120, 2), float32]) */;
    %527 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 120), float32] */, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
    %528 = cast(%var_4211, dtype="bool") /* ty=bool */;
    %529 = greater_equal(%516, %517) /* ty=Tensor[(16, 7, 5), bool] */;
    %530 = %526.1;
    %531 = logical_and(%527, %528) /* ty=Tensor[(2, 120), bool] */;
    (%529, %530, %var_4219, %var_4220, %531)
  };
  %532(%var_4249, %var_4250, %var_4251, %var_4252) /* ty=(Tensor[(16, 7, 5), bool], Tensor[(1600), uint32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(2, 120), bool]) */
}

def @func_531(%var_530: Tensor[(5, 10, 3), float32]) -> Tensor[(5, 10, 3), float32] {
  %534 = fn (%var_517: Tensor[(5, 10, 3), float32]) -> Tensor[(5, 10, 3), float32] {
    %533 = cast(%var_517, dtype="float32") /* ty=Tensor[(5, 10, 3), float32] */;
    log10(%533) /* ty=Tensor[(5, 10, 3), float32] */
  };
  %534(%var_530) /* ty=Tensor[(5, 10, 3), float32] */
}

def @func_4049(%var_4019: Tensor[(585), uint32], %var_4033: Tensor[(1056), int32], %var_4046: float64) -> (Tensor[(15, 13, 3), bool], Tensor[(585), uint32], Tensor[(1600), float64], Tensor[(120, 2), float32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(120, 2), float32], Tensor[(8, 6, 1), float32], Tensor[(48), float32], Tensor[(1, 6), float64], float64) {
  %535 = cast(%var_4019, dtype="uint32") /* ty=Tensor[(585), uint32] */;
  %536 = cast(%var_4019, dtype="uint32") /* ty=Tensor[(585), uint32] */;
  %537 = reshape(%535, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), uint32] */;
  %538 = reshape(%536, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), uint32] */;
  %539 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
  %540 = %539.2;
  %541 = cast(%540, dtype="float64") /* ty=Tensor[(1600), float64] */;
  %542 = cast(%var_4033, dtype="int32") /* ty=Tensor[(1056), int32] */;
  %543 = cast(%var_4033, dtype="int32") /* ty=Tensor[(1056), int32] */;
  %544 = cast(meta[relay.Constant][31] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
  %545 = cast(meta[relay.Constant][32] /* ty=Tensor[(120, 2), float32] */, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
  %546 = reshape(%542, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), int32] */;
  %547 = reshape(%543, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), int32] */;
  %548 = reshape(%544, newshape=[8, 44]) /* ty=Tensor[(8, 44), float64] */;
  %549 = reshape(%545, newshape=[120, 2]) /* ty=Tensor[(120, 2), float32] */;
  %550 = @func_2048(%546, %547, %548, %549) /* ty=(Tensor[(11, 12, 8), int32], Tensor[(1600), uint32], Tensor[(8, 44), float64], Tensor[(120, 2), float32]) */;
  %551 = cast(meta[relay.Constant][33] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %552 = reshape(%551, newshape=[8, 6, 1]) /* ty=Tensor[(8, 6, 1), float32] */;
  %553 = @func_2808(%552) /* ty=(Tensor[(8, 1, 1), float64], Tensor[(8, 6, 1), float32]) */;
  %554 = cast(%var_4046, dtype="float64") /* ty=float64 */;
  %555 = reshape(%554, newshape=[]) /* ty=float64 */;
  %556 = @func_3682(%555) /* ty=(float64, Tensor[(585, 6), bool], Tensor[(15, 13, 3), bool], Tensor[(1, 6), float64], Tensor[(585, ?), int8]) */;
  %557 = @func_3251(%537, %538) /* ty=Tensor[(15, 13, 3), bool] */;
  %558 = log2(%541) /* ty=Tensor[(1600), float64] */;
  %559 = %550.3;
  %560 = %553.1;
  %561 = %556.3;
  (%557, %var_4019, %558, %559, %var_4033, meta[relay.Constant][31] /* ty=Tensor[(352), float64] */, meta[relay.Constant][32] /* ty=Tensor[(120, 2), float32] */, %560, meta[relay.Constant][33] /* ty=Tensor[(48), float32] */, %561, %var_4046)
}

def @func_4625() -> float64 {
  %563 = fn () -> float64 {
    %562 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
    %562.2
  };
  %563() /* ty=float64 */
}

def @func_5063(%var_5043: Tensor[(240), float32]) -> (Tensor[(15, 13, 3), float64], Tensor[(2, 10, 12), float32], Tensor[(240), float32], Tensor[(2, 120), float64]) {
  %564 = @func_3830() /* ty=(Tensor[(15, 13, 3), float64],) */;
  %565 = cast(%var_5043, dtype="float32") /* ty=Tensor[(240), float32] */;
  %566 = reshape(%565, newshape=[2, 10, 12]) /* ty=Tensor[(2, 10, 12), float32] */;
  %567 = @func_4704() /* ty=(Tensor[(2, 120), float64],) */;
  %568 = %564.0;
  %569 = @func_2843(%566) /* ty=Tensor[(2, 10, 12), float32] */;
  %570 = %567.0;
  (%568, %569, %var_5043, %570)
}

def @func_5252() -> (Tensor[(2, 120), float64],) {
  %571 = @func_4108() /* ty=Tensor[(2, 120), float64] */;
  (%571,)
}

def @func_3251(%var_3245: Tensor[(15, 13, 3), uint32], %var_3246: Tensor[(15, 13, 3), uint32]) -> Tensor[(15, 13, 3), bool] {
  %572 = cast(%var_3246, dtype="bool") /* ty=Tensor[(15, 13, 3), bool] */;
  %573 = shape_of(%var_3245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%var_3245, dtype="bool") /* ty=Tensor[(15, 13, 3), bool] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%574, %575) /* ty=Tensor[(15, 13, 3), bool] */
}

def @func_5412(%var_5411: Tensor[(1, 11), float32]) -> (Tensor[(1, 11), float32],) {
  %579 = fn (%var_5398: Tensor[(1, 11), float32]) -> (Tensor[(1, 11), float32],) {
    %576 = cast(-7.00791f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %577 = cast(%var_5398, dtype="float32") /* ty=Tensor[(1, 11), float32] */;
    %578 = multiply(%576, %577) /* ty=Tensor[(1, 11), float32] */;
    (%578,)
  };
  %579(%var_5411) /* ty=(Tensor[(1, 11), float32],) */
}

def @func_7395(%var_7392: Tensor[(528, 2), int32]) -> (Tensor[(2, 120), float64], Tensor[(8, 44), float64], Tensor[(528, 2), int32], Tensor[(352), float64]) {
  %580 = cast(%var_7392, dtype="int32") /* ty=Tensor[(528, 2), int32] */;
  %581 = cast(%var_7392, dtype="int32") /* ty=Tensor[(528, 2), int32] */;
  %582 = cast(meta[relay.Constant][34] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
  %583 = @func_4108() /* ty=Tensor[(2, 120), float64] */;
  %584 = cast(%583, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %585 = reshape(%580, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), int32] */;
  %586 = reshape(%581, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), int32] */;
  %587 = reshape(%582, newshape=[8, 44]) /* ty=Tensor[(8, 44), float64] */;
  %588 = reshape(%584, newshape=[120, 2]) /* ty=Tensor[(120, 2), float32] */;
  %589 = @func_2048(%585, %586, %587, %588) /* ty=(Tensor[(11, 12, 8), int32], Tensor[(1600), uint32], Tensor[(8, 44), float64], Tensor[(120, 2), float32]) */;
  %590 = %589.2;
  (%583, %590, %var_7392, meta[relay.Constant][34] /* ty=Tensor[(352), float64] */)
}

def @func_7022(%var_7021: Tensor[(352), float64]) -> (Tensor[(1, 6), float64], Tensor[(2, 10, 12), float32], Tensor[(24, 10), float32], Tensor[(2, 120), float64], Tensor[(352), float64], Tensor[(900), float64]) {
  %606 = fn (%var_7016: Tensor[(352), float64]) -> (Tensor[(1, 6), float64], Tensor[(2, 10, 12), float32], Tensor[(24, 10), float32], Tensor[(2, 120), float64], Tensor[(352), float64], Tensor[(900), float64]) {
    %591 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
    %592 = cast(meta[relay.Constant][35] /* ty=Tensor[(24, 10), float32] */, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
    %593 = reshape(%592, newshape=[2, 10, 12]) /* ty=Tensor[(2, 10, 12), float32] */;
    %594 = cast(meta[relay.Constant][35] /* ty=Tensor[(24, 10), float32] */, dtype="float64") /* ty=Tensor[(24, 10), float64] */;
    %595 = cast(%var_7016, dtype="float64") /* ty=Tensor[(352), float64] */;
    %596 = cast(meta[relay.Constant][36] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
    %597 = @func_2843(%593) /* ty=Tensor[(2, 10, 12), float32] */;
    %598 = cast(%597, dtype="float32") /* ty=Tensor[(2, 10, 12), float32] */;
    %599 = reshape(%594, newshape=[2, 120]) /* ty=Tensor[(2, 120), float64] */;
    %600 = reshape(%595, newshape=[352]) /* ty=Tensor[(352), float64] */;
    %601 = reshape(%596, newshape=[900]) /* ty=Tensor[(900), float64] */;
    %602 = reshape(%598, newshape=[2, 120]) /* ty=Tensor[(2, 120), float32] */;
    %603 = @func_5817(%599, %600, %601, %602) /* ty=(Tensor[(2, 120), bool], Tensor[(15, 13, 3), uint16], Tensor[(352), float64], Tensor[(1, 6), float64], Tensor[(12, 15, 5), float64], Tensor[(900), float64], Tensor[(2, 120), int8], Tensor[(2, 120), float64]) */;
    %604 = %591.1;
    %605 = %603.7;
    (%604, %597, meta[relay.Constant][35] /* ty=Tensor[(24, 10), float32] */, %605, %var_7016, meta[relay.Constant][36] /* ty=Tensor[(900), float64] */)
  };
  %606(%var_7021) /* ty=(Tensor[(1, 6), float64], Tensor[(2, 10, 12), float32], Tensor[(24, 10), float32], Tensor[(2, 120), float64], Tensor[(352), float64], Tensor[(900), float64]) */
}

def @func_4156() -> (float64,) {
  %609 = fn () -> (float64,) {
    %607 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
    %608 = %607.2;
    (%608,)
  };
  %609() /* ty=(float64,) */
}

def @func_6912(%var_6895: Tensor[(2, 120), float64]) -> (Tensor[(2, 120), int16], Tensor[(585, 1), float64]) {
  %610 = @func_4704() /* ty=(Tensor[(2, 120), float64],) */;
  %611 = %610.0;
  %612 = cast(%var_6895, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
  %613 = shape_of(%611, dtype="int32") /* ty=Tensor[(2), int32] */;
  %614 = cast(%611, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %616 = add(%614, %615) /* ty=Tensor[(2, 120), uint64] */;
  %617 = cast(%611, dtype="int16") /* ty=Tensor[(2, 120), int16] */;
  %618 = shape_of(%616, dtype="int32") /* ty=Tensor[(2), int32] */;
  %619 = cast(%616, dtype="int16") /* ty=Tensor[(2, 120), int16] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %621 = @func_3566() /* ty=(Tensor[(585, 1), uint32],) */;
  %622 = %621.0;
  %623 = cast(%622, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
  %624 = right_shift(%619, %620) /* ty=Tensor[(2, 120), int16] */;
  %625 = cosh(%623) /* ty=Tensor[(585, 1), float64] */;
  (%624, %625)
}

def @func_7279() -> (Tensor[(2, 120), uint64],) {
  @func_7277() /* ty=(Tensor[(2, 120), uint64],) */
}

def @func_4696(%var_4694: Tensor[(40, 14), int32], %var_4695: Tensor[(352), float64]) -> (Tensor[(1600), uint32], Tensor[(40, 14), int32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(585, 1), float64], Tensor[(585, ?), uint64]) {
  @func_4692(%var_4694, %var_4695) /* ty=(Tensor[(1600), uint32], Tensor[(40, 14), int32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(585, 1), float64], Tensor[(585, ?), uint64]) */
}

def @func_7277() -> (Tensor[(2, 120), uint64],) {
  %626 = @func_7107() /* ty=(Tensor[(2, 120), uint64],) */;
  %627 = %626.0;
  (%627,)
}

def @func_1174(%var_1172: Tensor[(11, 16, 2), float64], %var_1173: Tensor[(240), float32]) -> (Tensor[(11, 16, 2), float64], Tensor[(1600), uint32], Tensor[(240), float32]) {
  @func_1170(%var_1172, %var_1173) /* ty=(Tensor[(11, 16, 2), float64], Tensor[(1600), uint32], Tensor[(240), float32]) */
}

def @func_4912() -> Tensor[(585, 1), uint32] {
  %629 = fn () -> Tensor[(585, 1), uint32] {
    %628 = @func_3566() /* ty=(Tensor[(585, 1), uint32],) */;
    %628.0
  };
  %629() /* ty=Tensor[(585, 1), uint32] */
}

def @func_4906(%var_4905: Tensor[(1, 352), float64]) -> (Tensor[(1056), int32], Tensor[(10, 352), bool], Tensor[(15, 13, 3), uint16]) {
  %648 = fn (%var_4852: Tensor[(1, 352), float64]) -> (Tensor[(1056), int32], Tensor[(10, 352), bool], Tensor[(15, 13, 3), uint16]) {
    %630 = @func_4551() /* ty=(Tensor[(15, 13, 3), float64], Tensor[(1, 6), float64]) */;
    %631 = %630.0;
    %632 = cast(%631, dtype="float64") /* ty=Tensor[(15, 13, 3), float64] */;
    %633 = cast(%var_4852, dtype="float64") /* ty=Tensor[(1, 352), float64] */;
    %634 = reshape(%632, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), float64] */;
    %635 = reshape(%633, newshape=[1, 352]) /* ty=Tensor[(1, 352), float64] */;
    %636 = @func_4486(%634, %635) /* ty=(Tensor[(15, 13, 3), int64], Tensor[(352), float64], int32, Tensor[(560), int32], Tensor[(1056), int32], Tensor[(1, 352), float64]) */;
    %637 = cast(%var_4852, dtype="bool") /* ty=Tensor[(1, 352), bool] */;
    %638 = cast(meta[relay.Constant][37] /* ty=Tensor[(10, 352), float64] */, dtype="bool") /* ty=Tensor[(10, 352), bool] */;
    %639 = cast(%631, dtype="float64") /* ty=Tensor[(15, 13, 3), float64] */;
    %640 = tan(%639) /* ty=Tensor[(15, 13, 3), float64] */;
    %641 = cast(%631, dtype="uint16") /* ty=Tensor[(15, 13, 3), uint16] */;
    %642 = shape_of(%640, dtype="int32") /* ty=Tensor[(3), int32] */;
    %643 = cast(%640, dtype="uint16") /* ty=Tensor[(15, 13, 3), uint16] */;
    %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %645 = %636.4;
    %646 = less_equal(%637, %638) /* ty=Tensor[(10, 352), bool] */;
    %647 = right_shift(%643, %644) /* ty=Tensor[(15, 13, 3), uint16] */;
    (%645, %646, %647)
  };
  %648(%var_4905) /* ty=(Tensor[(1056), int32], Tensor[(10, 352), bool], Tensor[(15, 13, 3), uint16]) */
}

def @func_4983(%var_4957: Tensor[(13, 1, 1), float32], %var_4972: Tensor[(352), float64]) -> (Tensor[(13, ?, ?), int32], Tensor[(15, 13, 3), uint16], Tensor[(352), float64]) {
  %649 = cast(%var_4957, dtype="float32") /* ty=Tensor[(13, 1, 1), float32] */;
  %650 = acos(%649) /* ty=Tensor[(13, 1, 1), float32] */;
  %651 = cast(%var_4957, dtype="int32") /* ty=Tensor[(13, 1, 1), int32] */;
  %652 = shape_of(%650, dtype="int32") /* ty=Tensor[(3), int32] */;
  %653 = cast(%650, dtype="int32") /* ty=Tensor[(13, 1, 1), int32] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %655 = cast(%var_4972, dtype="float64") /* ty=Tensor[(352), float64] */;
  %656 = reshape(%655, newshape=[1, 352]) /* ty=Tensor[(1, 352), float64] */;
  %657 = @func_4904(%656) /* ty=(Tensor[(1056), int32], Tensor[(10, 352), bool], Tensor[(15, 13, 3), uint16]) */;
  %658 = minimum(%653, %654) /* ty=Tensor[(13, ?, ?), int32] */;
  %659 = %657.2;
  (%658, %659, %var_4972)
}

def @func_5589(%var_5574: Tensor[(12, 15, 5), float64]) -> Tensor[(12, 15, 5), float64] {
  %660 = cast(%var_5574, dtype="float64") /* ty=Tensor[(12, 15, 5), float64] */;
  cos(%660) /* ty=Tensor[(12, 15, 5), float64] */
}

def @func_5662(%var_5661: Tensor[(1248), float32]) -> (Tensor[(2, 120), float64], Tensor[(1620), int32], Tensor[(1248), float32]) {
  %667 = fn (%var_5634: Tensor[(1248), float32]) -> (Tensor[(2, 120), float64], Tensor[(1620), int32], Tensor[(1248), float32]) {
    %661 = @func_5252() /* ty=(Tensor[(2, 120), float64],) */;
    %662 = cast(%var_5634, dtype="float32") /* ty=Tensor[(1248), float32] */;
    %663 = reshape(%662, newshape=[6, 16, 13]) /* ty=Tensor[(6, 16, 13), float32] */;
    %664 = @func_2344(%663) /* ty=(Tensor[(6, 16, 13), float32], Tensor[(10, 16, 10), bool], Tensor[(1600), uint32], Tensor[(1620), int32]) */;
    %665 = %661.0;
    %666 = %664.3;
    (%665, %666, %var_5634)
  };
  %667(%var_5661) /* ty=(Tensor[(2, 120), float64], Tensor[(1620), int32], Tensor[(1248), float32]) */
}

def @func_5985() -> (Tensor[(2, 120), float32],) {
  %672 = fn () -> (Tensor[(2, 120), float32],) {
    %668 = @func_5252() /* ty=(Tensor[(2, 120), float64],) */;
    %669 = %668.0;
    %670 = cast(%669, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
    %671 = cos(%670) /* ty=Tensor[(2, 120), float32] */;
    (%671,)
  };
  %672() /* ty=(Tensor[(2, 120), float32],) */
}

def @func_7224(%var_7220: Tensor[(2288), int64], %var_7221: Tensor[(900), float64], %var_7222: Tensor[(16, 8, 9), float64], %var_7223: Tensor[(585), float64]) -> (Tensor[(16, 13, 11), bool], Tensor[(2288), int64], Tensor[(1620), int32], Tensor[(12, 15, 5), float64], Tensor[(900), float64], Tensor[(16, 8, 9), bool], Tensor[(1056), int32], Tensor[(585), float64], Tensor[(352), float64], Tensor[(560), int32], Tensor[(2, 120), uint64]) {
  %719 = fn (%var_7157: Tensor[(2288), int64], %var_7180: Tensor[(900), float64], %var_7185: Tensor[(16, 8, 9), float64], %var_7201: Tensor[(585), float64]) -> (Tensor[(16, 13, 11), bool], Tensor[(2288), int64], Tensor[(1620), int32], Tensor[(12, 15, 5), float64], Tensor[(900), float64], Tensor[(16, 8, 9), bool], Tensor[(1056), int32], Tensor[(585), float64], Tensor[(352), float64], Tensor[(560), int32], Tensor[(2, 120), uint64]) {
    %673 = cast(%var_7157, dtype="int64") /* ty=Tensor[(2288), int64] */;
    %674 = cast(%var_7157, dtype="int64") /* ty=Tensor[(2288), int64] */;
    %675 = reshape(%673, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), int64] */;
    %676 = reshape(%674, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), int64] */;
    %677 = @func_6085(%675, %676) /* ty=(Tensor[(16, 13, 11), bool], Tensor[(16, 13, 11), float64]) */;
    %678 = @func_3990() /* ty=(Tensor[(15, 13, 3), float32], Tensor[(1620), int32], Tensor[(2, 120), float32]) */;
    %679 = cast(%var_7180, dtype="float64") /* ty=Tensor[(900), float64] */;
    %680 = reshape(%679, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float64] */;
    %681 = @func_4135() /* ty=(Tensor[(16, 8, 9), float64],) */;
    %682 = %681.0;
    %683 = cast(%var_7185, dtype="bool") /* ty=Tensor[(16, 8, 9), bool] */;
    %684 = shape_of(%682, dtype="int32") /* ty=Tensor[(3), int32] */;
    %685 = cast(%682, dtype="bool") /* ty=Tensor[(16, 8, 9), bool] */;
    %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %687 = cast(%var_7201, dtype="float64") /* ty=Tensor[(585), float64] */;
    %688 = cast(meta[relay.Constant][38] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
    %689 = reshape(%687, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), float64] */;
    %690 = reshape(%688, newshape=[1, 352]) /* ty=Tensor[(1, 352), float64] */;
    %691 = @func_4486(%689, %690) /* ty=(Tensor[(15, 13, 3), int64], Tensor[(352), float64], int32, Tensor[(560), int32], Tensor[(1056), int32], Tensor[(1, 352), float64]) */;
    %692 = cast(%var_7201, dtype="float64") /* ty=Tensor[(585), float64] */;
    %693 = cast(meta[relay.Constant][38] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
    %694 = reshape(%692, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), float64] */;
    %695 = reshape(%693, newshape=[1, 352]) /* ty=Tensor[(1, 352), float64] */;
    %696 = @func_4486(%694, %695) /* ty=(Tensor[(15, 13, 3), int64], Tensor[(352), float64], int32, Tensor[(560), int32], Tensor[(1056), int32], Tensor[(1, 352), float64]) */;
    %697 = @func_4704() /* ty=(Tensor[(2, 120), float64],) */;
    %698 = %697.0;
    %699 = cast(%698, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
    %700 = sqrt(%699) /* ty=Tensor[(2, 120), float32] */;
    %701 = cast(%698, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
    %702 = shape_of(%700, dtype="int32") /* ty=Tensor[(2), int32] */;
    %703 = cast(%700, dtype="bool") /* ty=Tensor[(2, 120), bool] */;
    %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %705 = logical_or(%703, %704) /* ty=Tensor[(2, 120), bool] */;
    %706 = cast(%705, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
    %707 = cosh(%706) /* ty=Tensor[(2, 120), float32] */;
    %708 = cast(%700, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
    %709 = shape_of(%707, dtype="int32") /* ty=Tensor[(2), int32] */;
    %710 = cast(%707, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
    %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %712 = %677.0;
    %713 = %678.1;
    %714 = @func_5589(%680) /* ty=Tensor[(12, 15, 5), float64] */;
    %715 = logical_and(%685, %686) /* ty=Tensor[(16, 8, 9), bool] */;
    %716 = %691.4;
    %717 = %696.3;
    %718 = maximum(%710, %711) /* ty=Tensor[(2, 120), uint64] */;
    (%712, %var_7157, %713, %714, %var_7180, %715, %716, %var_7201, meta[relay.Constant][38] /* ty=Tensor[(352), float64] */, %717, %718)
  };
  %719(%var_7220, %var_7221, %var_7222, %var_7223) /* ty=(Tensor[(16, 13, 11), bool], Tensor[(2288), int64], Tensor[(1620), int32], Tensor[(12, 15, 5), float64], Tensor[(900), float64], Tensor[(16, 8, 9), bool], Tensor[(1056), int32], Tensor[(585), float64], Tensor[(352), float64], Tensor[(560), int32], Tensor[(2, 120), uint64]) */
}

def @func_3566() -> (Tensor[(585, 1), uint32],) {
  %720 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
  %721 = %720.5;
  (%721,)
}

def @func_6387(%var_6385: Tensor[(16, 8, 9), float64]) -> Tensor[(16, 8, 9), int16] {
  @func_6384(%var_6385) /* ty=Tensor[(16, 8, 9), int16] */
}

def @func_699(%var_697: Tensor[(14, 5, 3), int32], %var_698: Tensor[(14, 5, 3), int32]) -> (Tensor[(14, 5, 3), bool], Tensor[(14, 5, 3), float32]) {
  %729 = fn (%var_682: Tensor[(14, 5, 3), int32], %var_683: Tensor[(14, 5, 3), int32]) -> (Tensor[(14, 5, 3), bool], Tensor[(14, 5, 3), float32]) {
    %722 = cast(%var_683, dtype="bool") /* ty=Tensor[(14, 5, 3), bool] */;
    %723 = shape_of(%var_682, dtype="int32") /* ty=Tensor[(3), int32] */;
    %724 = cast(%var_682, dtype="bool") /* ty=Tensor[(14, 5, 3), bool] */;
    %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %726 = cast(%var_682, dtype="float32") /* ty=Tensor[(14, 5, 3), float32] */;
    %727 = less_equal(%724, %725) /* ty=Tensor[(14, 5, 3), bool] */;
    %728 = rsqrt(%726) /* ty=Tensor[(14, 5, 3), float32] */;
    (%727, %728)
  };
  %729(%var_697, %var_698) /* ty=(Tensor[(14, 5, 3), bool], Tensor[(14, 5, 3), float32]) */
}

def @func_4552() -> (Tensor[(15, 13, 3), float64], Tensor[(1, 6), float64]) {
  %734 = fn () -> (Tensor[(15, 13, 3), float64], Tensor[(1, 6), float64]) {
    %730 = @func_3830() /* ty=(Tensor[(15, 13, 3), float64],) */;
    %731 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
    %732 = %730.0;
    %733 = %731.1;
    (%732, %733)
  };
  %734() /* ty=(Tensor[(15, 13, 3), float64], Tensor[(1, 6), float64]) */
}

def @func_4486(%var_4456: Tensor[(15, 13, 3), float64], %var_4475: Tensor[(1, 352), float64]) -> (Tensor[(15, 13, 3), int64], Tensor[(352), float64], int32, Tensor[(560), int32], Tensor[(1056), int32], Tensor[(1, 352), float64]) {
  %735 = @func_3830() /* ty=(Tensor[(15, 13, 3), float64],) */;
  %736 = %735.0;
  %737 = cast(%var_4456, dtype="int64") /* ty=Tensor[(15, 13, 3), int64] */;
  %738 = shape_of(%736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %739 = cast(%736, dtype="int64") /* ty=Tensor[(15, 13, 3), int64] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %741 = cast(8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %742 = cast(meta[relay.Constant][39] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
  %743 = cast(meta[relay.Constant][40] /* ty=Tensor[(1056), int32] */, dtype="int32") /* ty=Tensor[(1056), int32] */;
  %744 = cast(%var_4475, dtype="float64") /* ty=Tensor[(1, 352), float64] */;
  %745 = reshape(%741, newshape=[]) /* ty=int32 */;
  %746 = reshape(%742, newshape=[16, 7, 5]) /* ty=Tensor[(16, 7, 5), int32] */;
  %747 = reshape(%743, newshape=[1056]) /* ty=Tensor[(1056), int32] */;
  %748 = reshape(%744, newshape=[352]) /* ty=Tensor[(352), float64] */;
  %749 = @func_4248(%745, %746, %747, %748) /* ty=(Tensor[(16, 7, 5), bool], Tensor[(1600), uint32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(2, 120), bool]) */;
  %750 = maximum(%739, %740) /* ty=Tensor[(15, 13, 3), int64] */;
  %751 = %749.3;
  (%750, %751, 8 /* ty=int32 */, meta[relay.Constant][39] /* ty=Tensor[(560), int32] */, meta[relay.Constant][40] /* ty=Tensor[(1056), int32] */, %var_4475)
}

def @func_5878(%var_5876: Tensor[(14, 4, 13), float64], %var_5877: Tensor[(1620), int32]) -> (Tensor[(14, 4, 13), float64], Tensor[(1620), int32], Tensor[(2, 800), uint32], Tensor[(1620), int32]) {
  @func_5874(%var_5876, %var_5877) /* ty=(Tensor[(14, 4, 13), float64], Tensor[(1620), int32], Tensor[(2, 800), uint32], Tensor[(1620), int32]) */
}

def @func_7117() -> (Tensor[(15, 9, 12), float32],) {
  %754 = fn () -> (Tensor[(15, 9, 12), float32],) {
    %752 = @func_3560() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32], Tensor[(1620), int32], Tensor[(15, 13, 3), bool], Tensor[(585, 1), uint32], Tensor[(15, 9, 12), float32]) */;
    %753 = %752.6;
    (%753,)
  };
  %754() /* ty=(Tensor[(15, 9, 12), float32],) */
}

def @func_6548() -> (Tensor[(16, 8, 9), float64], Tensor[(2, 10, 12), float32], Tensor[(240), float32]) {
  @func_6546() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(2, 10, 12), float32], Tensor[(240), float32]) */
}

def @func_4826(%var_4825: Tensor[(585, 5), uint32]) -> (Tensor[(585, 5), uint8], Tensor[(15, 9, 12), int32], Tensor[(1620), int32]) {
  %766 = fn (%var_4804: Tensor[(585, 5), uint32]) -> (Tensor[(585, 5), uint8], Tensor[(15, 9, 12), int32], Tensor[(1620), int32]) {
    %755 = @func_4069() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */;
    %756 = %755.0;
    %757 = cast(%756, dtype="uint8") /* ty=Tensor[(585, 1), uint8] */;
    %758 = cast(%var_4804, dtype="uint8") /* ty=Tensor[(585, 5), uint8] */;
    %759 = cast(meta[relay.Constant][41] /* ty=Tensor[(1620), int32] */, dtype="int32") /* ty=Tensor[(1620), int32] */;
    %760 = cast(meta[relay.Constant][41] /* ty=Tensor[(1620), int32] */, dtype="int32") /* ty=Tensor[(1620), int32] */;
    %761 = reshape(%759, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
    %762 = reshape(%760, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
    %763 = @func_39(%761, %762) /* ty=(Tensor[(15, 9, 12), int32], Tensor[(15, 9, 12), float32]) */;
    %764 = bitwise_or(%757, %758) /* ty=Tensor[(585, 5), uint8] */;
    %765 = %763.0;
    (%764, %765, meta[relay.Constant][41] /* ty=Tensor[(1620), int32] */)
  };
  %766(%var_4825) /* ty=(Tensor[(585, 5), uint8], Tensor[(15, 9, 12), int32], Tensor[(1620), int32]) */
}

def @func_3940(%var_3938: Tensor[(15, 9, 12), float32]) -> (Tensor[(15, 9, 12), float32],) {
  @func_3937(%var_3938) /* ty=(Tensor[(15, 9, 12), float32],) */
}

def @func_7108() -> (Tensor[(2, 120), uint64],) {
  %773 = fn () -> (Tensor[(2, 120), uint64],) {
    %767 = @func_6170() /* ty=Tensor[(2, 120), float64] */;
    %768 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 120), float64] */, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
    %769 = shape_of(%767, dtype="int32") /* ty=Tensor[(2), int32] */;
    %770 = cast(%767, dtype="uint64") /* ty=Tensor[(2, 120), uint64] */;
    %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %772 = multiply(%770, %771) /* ty=Tensor[(2, 120), uint64] */;
    (%772,)
  };
  %773() /* ty=(Tensor[(2, 120), uint64],) */
}

def @func_6715(%var_6675: Tensor[(25, 6), float32], %var_6686: float64) -> (Tensor[(585, 1), uint32], Tensor[(20), float32], Tensor[(9, 7, 16), uint16], Tensor[(1008), uint16], float64, Tensor[(4, 88), float64], Tensor[(1600), uint32], Tensor[(240), float32], Tensor[(5, 10, 3), uint32], Tensor[(11, 16, 2), float64]) {
  %774 = cast(meta[relay.Constant][44] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %775 = cast(meta[relay.Constant][44] /* ty=Tensor[(1008), uint16] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %776 = cast(%var_6686, dtype="float64") /* ty=float64 */;
  %777 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 88), float64] */, dtype="float64") /* ty=Tensor[(4, 88), float64] */;
  %778 = reshape(%774, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), uint16] */;
  %779 = reshape(%775, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), uint16] */;
  %780 = reshape(%776, newshape=[]) /* ty=float64 */;
  %781 = reshape(%777, newshape=[352]) /* ty=Tensor[(352), float64] */;
  %782 = @func_3881(%778, %779, %780, %781) /* ty=(Tensor[(9, 7, 16), uint16], Tensor[(1, 6), float64], float64, Tensor[(9, 7, 16), float32], Tensor[(16, 8, 9), float64], Tensor[(1600), uint32], Tensor[(352), float64], Tensor[(240), float32]) */;
  %783 = cast(meta[relay.Constant][46] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %784 = reshape(%783, newshape=[2, 12, 10]) /* ty=Tensor[(2, 12, 10), float32] */;
  %785 = @func_362(%784) /* ty=(Tensor[(2, 12, 10), float32], Tensor[(1620), int32], Tensor[(1600), uint32], Tensor[(6, 270), int32]) */;
  %786 = cast(meta[relay.Constant][43] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %787 = cast(%var_6675, dtype="float32") /* ty=Tensor[(25, 6), float32] */;
  %788 = cast(%var_6675, dtype="float32") /* ty=Tensor[(25, 6), float32] */;
  %789 = reshape(%786, newshape=[1, 10, 2]) /* ty=Tensor[(1, 10, 2), float32] */;
  %790 = reshape(%787, newshape=[150]) /* ty=Tensor[(150), float32] */;
  %791 = reshape(%788, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), float32] */;
  %792 = @func_5226(%789, %790, %791) /* ty=(Tensor[(1, 10, 2), float32], Tensor[(150), float32], Tensor[(5, 10, 3), bool]) */;
  %793 = %792.2;
  %794 = cast(%var_6675, dtype="uint32") /* ty=Tensor[(25, 6), uint32] */;
  %795 = shape_of(%793, dtype="int32") /* ty=Tensor[(3), int32] */;
  %796 = cast(%793, dtype="uint32") /* ty=Tensor[(5, 10, 3), uint32] */;
  %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %798 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 88), float64] */, dtype="float64") /* ty=Tensor[(4, 88), float64] */;
  %799 = cast(meta[relay.Constant][46] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %800 = reshape(%798, newshape=[11, 16, 2]) /* ty=Tensor[(11, 16, 2), float64] */;
  %801 = reshape(%799, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %802 = @func_1170(%800, %801) /* ty=(Tensor[(11, 16, 2), float64], Tensor[(1600), uint32], Tensor[(240), float32]) */;
  %803 = @func_5377() /* ty=Tensor[(585, 1), uint32] */;
  %804 = %782.0;
  %805 = %785.2;
  %806 = maximum(%796, %797) /* ty=Tensor[(5, 10, 3), uint32] */;
  %807 = %802.0;
  (%803, meta[relay.Constant][43] /* ty=Tensor[(20), float32] */, %804, meta[relay.Constant][44] /* ty=Tensor[(1008), uint16] */, %var_6686, meta[relay.Constant][45] /* ty=Tensor[(4, 88), float64] */, %805, meta[relay.Constant][46] /* ty=Tensor[(240), float32] */, %806, %807)
}

def @func_4054(%var_4051: Tensor[(585), uint32], %var_4052: Tensor[(1056), int32], %var_4053: float64) -> (Tensor[(15, 13, 3), bool], Tensor[(585), uint32], Tensor[(1600), float64], Tensor[(120, 2), float32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(120, 2), float32], Tensor[(8, 6, 1), float32], Tensor[(48), float32], Tensor[(1, 6), float64], float64) {
  @func_4049(%var_4051, %var_4052, %var_4053) /* ty=(Tensor[(15, 13, 3), bool], Tensor[(585), uint32], Tensor[(1600), float64], Tensor[(120, 2), float32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(120, 2), float32], Tensor[(8, 6, 1), float32], Tensor[(48), float32], Tensor[(1, 6), float64], float64) */
}

def @func_4070() -> (Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) {
  %814 = fn () -> (Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) {
    %808 = @func_3566() /* ty=(Tensor[(585, 1), uint32],) */;
    %809 = cast(-0.490265f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %810 = reshape(%809, newshape=[]) /* ty=float64 */;
    %811 = @func_1569(%810) /* ty=(Tensor[(1, 6), float64],) */;
    %812 = %808.0;
    %813 = %811.0;
    (%812, %813, -0.490265f64 /* ty=float64 */)
  };
  %814() /* ty=(Tensor[(585, 1), uint32], Tensor[(1, 6), float64], float64) */
}

def @func_4137() -> (Tensor[(16, 8, 9), float64],) {
  @func_4135() /* ty=(Tensor[(16, 8, 9), float64],) */
}

def @func_6780(%var_6778: Tensor[(2, 120), float64]) -> Tensor[(2, 120), int16] {
  @func_6777(%var_6778) /* ty=Tensor[(2, 120), int16] */
}

def @func_4490(%var_4488: Tensor[(15, 13, 3), float64], %var_4489: Tensor[(1, 352), float64]) -> (Tensor[(15, 13, 3), int64], Tensor[(352), float64], int32, Tensor[(560), int32], Tensor[(1056), int32], Tensor[(1, 352), float64]) {
  @func_4486(%var_4488, %var_4489) /* ty=(Tensor[(15, 13, 3), int64], Tensor[(352), float64], int32, Tensor[(560), int32], Tensor[(1056), int32], Tensor[(1, 352), float64]) */
}

def @func_6348(%var_6342: Tensor[(9, 9, 8), float64], %var_6343: Tensor[(9, 9, 8), uint32], %var_6344: Tensor[(576), float32], %var_6345: Tensor[(1620), int32], %var_6346: Tensor[(1920), int8], %var_6347: Tensor[(15, 117), uint32]) -> (Tensor[(1056), int32], Tensor[(9, 9, 8), uint16], Tensor[(16, 8, 9), float64], Tensor[(1600), float64], Tensor[(585), uint32], Tensor[(2925), uint32], Tensor[(585, 240), int16], Tensor[(576), float32], Tensor[(240), float32], Tensor[(8, 70), float32], Tensor[(15, 9, 12), int32], Tensor[(1620), int32], Tensor[(585, 3), float64], Tensor[(1920), int8], Tensor[(15, 117), uint32], Tensor[(15, 13, 3), uint16], Tensor[(352), float64], Tensor[(15, 13, 3), bool]) {
  %873 = fn (%var_6252: Tensor[(9, 9, 8), float64], %var_6266: Tensor[(9, 9, 8), uint32], %var_6305: Tensor[(576), float32], %var_6316: Tensor[(1620), int32], %var_6319: Tensor[(1920), int8], %var_6320: Tensor[(15, 117), uint32]) -> (Tensor[(1056), int32], Tensor[(9, 9, 8), uint16], Tensor[(16, 8, 9), float64], Tensor[(1600), float64], Tensor[(585), uint32], Tensor[(2925), uint32], Tensor[(585, 240), int16], Tensor[(576), float32], Tensor[(240), float32], Tensor[(8, 70), float32], Tensor[(15, 9, 12), int32], Tensor[(1620), int32], Tensor[(585, 3), float64], Tensor[(1920), int8], Tensor[(15, 117), uint32], Tensor[(15, 13, 3), uint16], Tensor[(352), float64], Tensor[(15, 13, 3), bool]) {
    %815 = @func_4624() /* ty=float64 */;
    %816 = cast(%815, dtype="uint32") /* ty=uint32 */;
    %817 = cast(%var_6252, dtype="uint32") /* ty=Tensor[(9, 9, 8), uint32] */;
    %818 = bitwise_and(%816, %817) /* ty=Tensor[(9, 9, 8), uint32] */;
    %819 = cast(%var_6266, dtype="uint16") /* ty=Tensor[(9, 9, 8), uint16] */;
    %820 = shape_of(%818, dtype="int32") /* ty=Tensor[(3), int32] */;
    %821 = cast(%818, dtype="uint16") /* ty=Tensor[(9, 9, 8), uint16] */;
    %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %823 = @func_4135() /* ty=(Tensor[(16, 8, 9), float64],) */;
    %824 = cast(meta[relay.Constant][48] /* ty=Tensor[(585), uint32] */, dtype="uint32") /* ty=Tensor[(585), uint32] */;
    %825 = cast(meta[relay.Constant][47] /* ty=Tensor[(1056), int32] */, dtype="int32") /* ty=Tensor[(1056), int32] */;
    %826 = cast(%815, dtype="float64") /* ty=float64 */;
    %827 = reshape(%824, newshape=[585]) /* ty=Tensor[(585), uint32] */;
    %828 = reshape(%825, newshape=[1056]) /* ty=Tensor[(1056), int32] */;
    %829 = reshape(%826, newshape=[]) /* ty=float64 */;
    %830 = @func_4049(%827, %828, %829) /* ty=(Tensor[(15, 13, 3), bool], Tensor[(585), uint32], Tensor[(1600), float64], Tensor[(120, 2), float32], Tensor[(1056), int32], Tensor[(352), float64], Tensor[(120, 2), float32], Tensor[(8, 6, 1), float32], Tensor[(48), float32], Tensor[(1, 6), float64], float64) */;
    %831 = @func_6134() /* ty=(Tensor[(16, 8, 9), float64], Tensor[(15, 9, 12), int32], Tensor[(2925), uint32]) */;
    %832 = cast(%var_6305, dtype="float32") /* ty=Tensor[(576), float32] */;
    %833 = cast(meta[relay.Constant][49] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %834 = reshape(%832, newshape=[9, 4, 16]) /* ty=Tensor[(9, 4, 16), float32] */;
    %835 = reshape(%833, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %836 = @func_4423(%834, %835) /* ty=(Tensor[(9, 4, 16), float64], Tensor[(1620), int32], Tensor[(1620), int32], Tensor[(1620), int32], Tensor[(9, 4, 16), bool], Tensor[(1, 6), float64], Tensor[(585, 240), int16], Tensor[(1, 6), float64], Tensor[(5, 10, 3), float32], Tensor[(25, 6), float32], Tensor[(1620), int32], Tensor[(15, 9, 12), float32], Tensor[(1600), uint32]) */;
    %837 = cast(meta[relay.Constant][47] /* ty=Tensor[(1056), int32] */, dtype="int32") /* ty=Tensor[(1056), int32] */;
    %838 = reshape(%837, newshape=[1056]) /* ty=Tensor[(1056), int32] */;
    %839 = @func_6051(%838) /* ty=(float64, Tensor[(352), float64], Tensor[(8, 70), int32], Tensor[(1056), int32], Tensor[(352), float64]) */;
    %840 = %839.2;
    %841 = cast(%840, dtype="float64") /* ty=Tensor[(8, 70), float64] */;
    %842 = log2(%841) /* ty=Tensor[(8, 70), float64] */;
    %843 = cast(%842, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
    %844 = cast(%var_6316, dtype="int32") /* ty=Tensor[(1620), int32] */;
    %845 = cast(%var_6316, dtype="int32") /* ty=Tensor[(1620), int32] */;
    %846 = reshape(%844, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
    %847 = reshape(%845, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), int32] */;
    %848 = @func_39(%846, %847) /* ty=(Tensor[(15, 9, 12), int32], Tensor[(15, 9, 12), float32]) */;
    %849 = cast(%var_6319, dtype="int8") /* ty=Tensor[(1920), int8] */;
    %850 = cast(%var_6319, dtype="int8") /* ty=Tensor[(1920), int8] */;
    %851 = cast(%var_6320, dtype="uint32") /* ty=Tensor[(15, 117), uint32] */;
    %852 = reshape(%849, newshape=[8, 16, 15]) /* ty=Tensor[(8, 16, 15), int8] */;
    %853 = reshape(%850, newshape=[8, 16, 15]) /* ty=Tensor[(8, 16, 15), int8] */;
    %854 = reshape(%851, newshape=[1755]) /* ty=Tensor[(1755), uint32] */;
    %855 = @func_5614(%852, %853, %854) /* ty=(Tensor[(8, 16, 15), int8], Tensor[(585, 3), float64], Tensor[(1755), uint32], Tensor[(48), float32], Tensor[(15, 9, 12), float64]) */;
    %856 = cast(meta[relay.Constant][50] /* ty=Tensor[(352), float64] */, dtype="float64") /* ty=Tensor[(352), float64] */;
    %857 = reshape(%856, newshape=[1, 352]) /* ty=Tensor[(1, 352), float64] */;
    %858 = @func_4904(%857) /* ty=(Tensor[(1056), int32], Tensor[(10, 352), bool], Tensor[(15, 13, 3), uint16]) */;
    %859 = %858.2;
    %860 = cast(%859, dtype="uint32") /* ty=Tensor[(15, 13, 3), uint32] */;
    %861 = cast(%859, dtype="uint32") /* ty=Tensor[(15, 13, 3), uint32] */;
    %862 = reshape(%860, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), uint32] */;
    %863 = reshape(%861, newshape=[15, 13, 3]) /* ty=Tensor[(15, 13, 3), uint32] */;
    %864 = right_shift(%821, %822) /* ty=Tensor[(9, 9, 8), uint16] */;
    %865 = %823.0;
    %866 = %830.2;
    %867 = %831.2;
    %868 = %836.6;
    %869 = tan(%843) /* ty=Tensor[(8, 70), float32] */;
    %870 = %848.0;
    %871 = %855.1;
    %872 = @func_3251(%862, %863) /* ty=Tensor[(15, 13, 3), bool] */;
    (meta[relay.Constant][47] /* ty=Tensor[(1056), int32] */, %864, %865, %866, meta[relay.Constant][48] /* ty=Tensor[(585), uint32] */, %867, %868, %var_6305, meta[relay.Constant][49] /* ty=Tensor[(240), float32] */, %869, %870, %var_6316, %871, %var_6319, %var_6320, %859, meta[relay.Constant][50] /* ty=Tensor[(352), float64] */, %872)
  };
  %873(%var_6342, %var_6343, %var_6344, %var_6345, %var_6346, %var_6347) /* ty=(Tensor[(1056), int32], Tensor[(9, 9, 8), uint16], Tensor[(16, 8, 9), float64], Tensor[(1600), float64], Tensor[(585), uint32], Tensor[(2925), uint32], Tensor[(585, 240), int16], Tensor[(576), float32], Tensor[(240), float32], Tensor[(8, 70), float32], Tensor[(15, 9, 12), int32], Tensor[(1620), int32], Tensor[(585, 3), float64], Tensor[(1920), int8], Tensor[(15, 117), uint32], Tensor[(15, 13, 3), uint16], Tensor[(352), float64], Tensor[(15, 13, 3), bool]) */
}

def @func_5066(%var_5064: Tensor[(240), float32]) -> (Tensor[(15, 13, 3), float64], Tensor[(2, 10, 12), float32], Tensor[(240), float32], Tensor[(2, 120), float64]) {
  @func_5063(%var_5064) /* ty=(Tensor[(15, 13, 3), float64], Tensor[(2, 10, 12), float32], Tensor[(240), float32], Tensor[(2, 120), float64]) */
}

def @func_6054(%var_6052: Tensor[(1056), int32]) -> (float64, Tensor[(352), float64], Tensor[(8, 70), int32], Tensor[(1056), int32], Tensor[(352), float64]) {
  @func_6051(%var_6052) /* ty=(float64, Tensor[(352), float64], Tensor[(8, 70), int32], Tensor[(1056), int32], Tensor[(352), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_10953() -> Tensor[(4, 5, 16), float32] {
  %0 = @func_4353() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %0.0
}

def @func_2999() -> (Tensor[(4, 5, 16), float32],) {
  %1 = @func_2833() /* ty=Tensor[(4, 5, 16), float32] */;
  (%1,)
}

def @func_4477() -> (Tensor[(4, 5, 16), float32],) {
  %2 = @func_3808() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %3 = %2.1;
  (%3,)
}

def @func_8004() -> Tensor[(4, 5, 16), float64] {
  %4 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %4.0
}

def @func_3339() -> (Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(144), float64]) {
  %5 = @func_3119() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %7 = reshape(%6, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), float64] */;
  %8 = %5.0;
  %9 = @func_205(%7) /* ty=Tensor[(12, 6, 2), float64] */;
  (%8, %9, meta[relay.Constant][0] /* ty=Tensor[(144), float64] */)
}

def @func_9678(%var_9672: Tensor[(1008), float64]) -> (Tensor[(4, 5, 16), float64], Tensor[(2, 72), float64], Tensor[(1008), float64], Tensor[(144), float64], int32) {
  %10 = @func_8554() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %11 = cast(%var_9672, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %13 = cast(9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %14 = reshape(%11, newshape=[12, 14, 6]) /* ty=Tensor[(12, 14, 6), float64] */;
  %15 = reshape(%12, newshape=[2, 72]) /* ty=Tensor[(2, 72), float64] */;
  %16 = reshape(%13, newshape=[]) /* ty=int32 */;
  %17 = @func_1478(%14, %15, %16) /* ty=(Tensor[(12, 14, 6), float64], Tensor[(12, 6, 2), float64], Tensor[(2, 72), float64], Tensor[(15, 11, 14), bool], int32) */;
  %18 = %10.0;
  %19 = %17.2;
  (%18, %19, %var_9672, meta[relay.Constant][1] /* ty=Tensor[(144), float64] */, 9 /* ty=int32 */)
}

def @func_10500() -> (Tensor[(4, 5, 16), float32],) {
  %20 = @func_5540() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %21 = %20.0;
  (%21,)
}

def @func_3941() -> (Tensor[(4, 5, 16), float32], Tensor[(11, 13, 9), uint16]) {
  %22 = @func_3119() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %23 = cast(meta[relay.Constant][2] /* ty=Tensor[(1287), uint8] */, dtype="uint8") /* ty=Tensor[(1287), uint8] */;
  %24 = reshape(%23, newshape=[11, 13, 9]) /* ty=Tensor[(11, 13, 9), uint8] */;
  %25 = @func_1655(%24) /* ty=Tensor[(11, 13, 9), uint8] */;
  %26 = cast(%25, dtype="float32") /* ty=Tensor[(11, 13, 9), float32] */;
  %27 = sinh(%26) /* ty=Tensor[(11, 13, 9), float32] */;
  %28 = cast(meta[relay.Constant][2] /* ty=Tensor[(1287), uint8] */, dtype="uint16") /* ty=Tensor[(1287), uint16] */;
  %29 = shape_of(%27, dtype="int32") /* ty=Tensor[(3), int32] */;
  %30 = cast(%27, dtype="uint16") /* ty=Tensor[(11, 13, 9), uint16] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %32 = %22.0;
  %33 = right_shift(%30, %31) /* ty=Tensor[(11, 13, 9), uint16] */;
  (%32, %33)
}

def @func_8289(%var_8237: Tensor[(27), float32], %var_8249: Tensor[(196), int8], %var_8274: Tensor[(1215), float64], %var_8276: Tensor[(363), int32]) -> (Tensor[(4, 5, 16), float64], Tensor[(27), float32], Tensor[(924), uint16], Tensor[(4, 5, 16), float32], Tensor[(196), int8], Tensor[(1, 3, 7), int8], Tensor[(21), int8], Tensor[(194040), bool], Tensor[(194040), bool], Tensor[(363), int32], Tensor[(1001), uint16], Tensor[(70), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(363), int32]) {
  %34 = @func_8197() /* ty=(Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32], Tensor[(1, 147), uint64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %35 = cast(%var_8249, dtype="int8") /* ty=Tensor[(196), int8] */;
  %36 = reshape(%35, newshape=[196]) /* ty=Tensor[(196), int8] */;
  %37 = @func_5611(%36) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(144), float64], int8, Tensor[(196), int8], Tensor[(144), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %38 = cast(%var_8237, dtype="float32") /* ty=Tensor[(27), float32] */;
  %39 = cast(meta[relay.Constant][4] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %40 = cast(meta[relay.Constant][3] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %41 = cast(meta[relay.Constant][5] /* ty=Tensor[(194040), uint16] */, dtype="uint16") /* ty=Tensor[(194040), uint16] */;
  %42 = reshape(%38, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float32] */;
  %43 = reshape(%39, newshape=[]) /* ty=int8 */;
  %44 = reshape(%40, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %45 = reshape(%41, newshape=[14, 924, 15]) /* ty=Tensor[(14, 924, 15), uint16] */;
  %46 = @func_1713(%42, %43, %44, %45) /* ty=(Tensor[(9, 1, 3), float32], int8, Tensor[(35, 6), int8], Tensor[(924), uint16], Tensor[(14, 924, 15), int64], Tensor[(14, 6, 10), float32], Tensor[(12, 70), bool]) */;
  %47 = %46.1;
  %48 = cast(%47, dtype="int8") /* ty=int8 */;
  %49 = cast(meta[relay.Constant][6] /* ty=Tensor[(21), int8] */, dtype="int8") /* ty=Tensor[(21), int8] */;
  %50 = reshape(%48, newshape=[]) /* ty=int8 */;
  %51 = reshape(%49, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), int8] */;
  %52 = cast(meta[relay.Constant][5] /* ty=Tensor[(194040), uint16] */, dtype="bool") /* ty=Tensor[(194040), bool] */;
  %53 = cast(meta[relay.Constant][4] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %54 = cast(%47, dtype="bool") /* ty=bool */;
  %55 = cast(meta[relay.Constant][5] /* ty=Tensor[(194040), uint16] */, dtype="bool") /* ty=Tensor[(194040), bool] */;
  %56 = cast(meta[relay.Constant][7] /* ty=Tensor[(1001), uint16] */, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %57 = cast(meta[relay.Constant][7] /* ty=Tensor[(1001), uint16] */, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %58 = cast(meta[relay.Constant][8] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
  %59 = cast(%var_8274, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %60 = cast(meta[relay.Constant][9] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %61 = cast(%var_8276, dtype="int32") /* ty=Tensor[(363), int32] */;
  %62 = cast(meta[relay.Constant][7] /* ty=Tensor[(1001), uint16] */, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %63 = reshape(%56, newshape=[7, 13, 11]) /* ty=Tensor[(7, 13, 11), uint16] */;
  %64 = reshape(%57, newshape=[7, 13, 11]) /* ty=Tensor[(7, 13, 11), uint16] */;
  %65 = reshape(%58, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %66 = reshape(%59, newshape=[3, 405]) /* ty=Tensor[(3, 405), float64] */;
  %67 = reshape(%60, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %68 = reshape(%61, newshape=[363]) /* ty=Tensor[(363), int32] */;
  %69 = reshape(%62, newshape=[7, 13, 11]) /* ty=Tensor[(7, 13, 11), uint16] */;
  %70 = @func_2484(%63, %64, %65, %66, %67, %68, %69) /* ty=(Tensor[(7, 13, 11), uint16], Tensor[(1215), float64], Tensor[(70), int32], Tensor[(10, 70), int32], Tensor[(3, 405), float64], Tensor[(144), float64], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(7, 13, 11), bool]) */;
  %71 = %34.0;
  %72 = %37.0;
  %73 = @func_5910(%50, %51) /* ty=Tensor[(1, 3, 7), int8] */;
  %74 = logical_or(%52, %53) /* ty=Tensor[(194040), bool] */;
  %75 = less(%54, %55) /* ty=Tensor[(194040), bool] */;
  %76 = %70.7;
  (%71, %var_8237, meta[relay.Constant][3] /* ty=Tensor[(924), uint16] */, %72, %var_8249, %73, meta[relay.Constant][6] /* ty=Tensor[(21), int8] */, %74, %75, %76, meta[relay.Constant][7] /* ty=Tensor[(1001), uint16] */, meta[relay.Constant][8] /* ty=Tensor[(70), int32] */, %var_8274, meta[relay.Constant][9] /* ty=Tensor[(144), float64] */, %var_8276)
}

def @func_5579(%var_5569: Tensor[(27), float32], %var_5570: int8) -> (Tensor[(11, 11, 3), float64], Tensor[(4, 5, 16), float32], Tensor[(14, 924, 15), int64], Tensor[(27), float32], int8, Tensor[(924), uint16], Tensor[(194040), uint16]) {
  %77 = @func_5358() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(4, 5, 16), float32]) */;
  %78 = cast(%var_5569, dtype="float32") /* ty=Tensor[(27), float32] */;
  %79 = cast(%var_5570, dtype="int8") /* ty=int8 */;
  %80 = cast(meta[relay.Constant][10] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %81 = cast(meta[relay.Constant][11] /* ty=Tensor[(194040), uint16] */, dtype="uint16") /* ty=Tensor[(194040), uint16] */;
  %82 = reshape(%78, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float32] */;
  %83 = reshape(%79, newshape=[]) /* ty=int8 */;
  %84 = reshape(%80, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %85 = reshape(%81, newshape=[14, 924, 15]) /* ty=Tensor[(14, 924, 15), uint16] */;
  %86 = @func_1713(%82, %83, %84, %85) /* ty=(Tensor[(9, 1, 3), float32], int8, Tensor[(35, 6), int8], Tensor[(924), uint16], Tensor[(14, 924, 15), int64], Tensor[(14, 6, 10), float32], Tensor[(12, 70), bool]) */;
  %87 = %77.1;
  %88 = @func_4412() /* ty=Tensor[(4, 5, 16), float32] */;
  %89 = %86.4;
  (%87, %88, %89, %var_5569, %var_5570, meta[relay.Constant][10] /* ty=Tensor[(924), uint16] */, meta[relay.Constant][11] /* ty=Tensor[(194040), uint16] */)
}

def @func_9438() -> Tensor[(4, 5, 16), float32] {
  %90 = @func_7877() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %90.0
}

def @func_5996() -> (Tensor[(11, 13, 9), uint16],) {
  %91 = @func_3941() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 13, 9), uint16]) */;
  %92 = %91.1;
  (%92,)
}

def @func_9768() -> Tensor[(4, 5, 16), float32] {
  %93 = @func_8197() /* ty=(Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32], Tensor[(1, 147), uint64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %93.3
}

def @func_7611() -> (Tensor[(4, 5, 16), float32],) {
  %94 = @func_6470() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %95 = %94.0;
  (%95,)
}

def @func_10081() -> Tensor[(4, 5, 16), float32] {
  %96 = @func_6785() /* ty=(Tensor[(4, 5, 16), float64], Tensor[(9, 7, 10), float64], Tensor[(4, 5, 16), float32], Tensor[(630), float64]) */;
  %96.2
}

def @func_10861(%var_10855: Tensor[(1, 945), int8]) -> (Tensor[(4, 5, 16), float32], Tensor[(7, 15, 9), int8], Tensor[(1, 945), int8]) {
  %97 = cast(%var_10855, dtype="int8") /* ty=Tensor[(1, 945), int8] */;
  %98 = reshape(%97, newshape=[7, 15, 9]) /* ty=Tensor[(7, 15, 9), int8] */;
  %99 = @func_5060() /* ty=Tensor[(4, 5, 16), float32] */;
  %100 = @func_529(%98) /* ty=Tensor[(7, 15, 9), int8] */;
  (%99, %100, %var_10855)
}

def @func_2756(%var_2743: Tensor[(9, 3), float32], %var_2745: Tensor[(924), uint16], %var_2746: Tensor[(194040), uint16]) -> (Tensor[(4, 5, 16), float64], int8, Tensor[(9, 3), float32], Tensor[(924), uint16], Tensor[(194040), uint16]) {
  %101 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %102 = cast(%var_2743, dtype="float32") /* ty=Tensor[(9, 3), float32] */;
  %103 = cast(meta[relay.Constant][12] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %104 = cast(%var_2745, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %105 = cast(%var_2746, dtype="uint16") /* ty=Tensor[(194040), uint16] */;
  %106 = reshape(%102, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float32] */;
  %107 = reshape(%103, newshape=[]) /* ty=int8 */;
  %108 = reshape(%104, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %109 = reshape(%105, newshape=[14, 924, 15]) /* ty=Tensor[(14, 924, 15), uint16] */;
  %110 = @func_1713(%106, %107, %108, %109) /* ty=(Tensor[(9, 1, 3), float32], int8, Tensor[(35, 6), int8], Tensor[(924), uint16], Tensor[(14, 924, 15), int64], Tensor[(14, 6, 10), float32], Tensor[(12, 70), bool]) */;
  %111 = cast(%var_2746, dtype="uint16") /* ty=Tensor[(194040), uint16] */;
  %112 = cast(meta[relay.Constant][12] /* ty=int8 */, dtype="uint16") /* ty=uint16 */;
  %113 = %101.0;
  %114 = %110.1;
  %115 = maximum(%111, %112) /* ty=Tensor[(194040), uint16] */;
  (%113, %114, %var_2743, %var_2745, %115)
}

def @func_5706(%var_5697: Tensor[(9, 7, 10), bool]) -> (Tensor[(9, 7, 10), bool], Tensor[(9, 7, 10), float64]) {
  %116 = cast(%var_5697, dtype="bool") /* ty=Tensor[(9, 7, 10), bool] */;
  %117 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(9, 7, 10), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %118 = cast(meta[relay.Constant][13] /* ty=Tensor[(9, 7, 10), bool] */, dtype="bool") /* ty=Tensor[(9, 7, 10), bool] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %120 = cast(%var_5697, dtype="float64") /* ty=Tensor[(9, 7, 10), float64] */;
  %121 = logical_or(%118, %119) /* ty=Tensor[(9, 7, 10), bool] */;
  %122 = sin(%120) /* ty=Tensor[(9, 7, 10), float64] */;
  (%121, %122)
}

def @main(%var_10964: Tensor[(5, 7, 9), float32]) -> Tensor[(5, 7, 9), float32] {
  %123 = cast(%var_10964, dtype="float32") /* ty=Tensor[(5, 7, 9), float32] */;
  sigmoid(%123) /* ty=Tensor[(5, 7, 9), float32] */
}

def @func_5611(%var_5596: Tensor[(196), int8]) -> (Tensor[(4, 5, 16), float32], Tensor[(144), float64], int8, Tensor[(196), int8], Tensor[(144), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %124 = @func_5188() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %125 = cast(meta[relay.Constant][14] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %126 = cast(%var_5596, dtype="int8") /* ty=Tensor[(196), int8] */;
  %127 = cast(meta[relay.Constant][15] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %128 = reshape(%125, newshape=[]) /* ty=int8 */;
  %129 = reshape(%126, newshape=[1, 14, 14]) /* ty=Tensor[(1, 14, 14), int8] */;
  %130 = reshape(%127, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %131 = @func_3634(%128, %129, %130) /* ty=(Tensor[(?, 14, 14), uint8], Tensor[(144), float64], Tensor[(70), int32], Tensor[(700), int32], Tensor[(1215), float64], Tensor[(144), float64]) */;
  %132 = %124.1;
  %133 = %131.1;
  %134 = @func_3414() /* ty=Tensor[(4, 5, 16), float32] */;
  %135 = @func_3414() /* ty=Tensor[(4, 5, 16), float32] */;
  (%132, %133, meta[relay.Constant][14] /* ty=int8 */, %var_5596, meta[relay.Constant][15] /* ty=Tensor[(144), float64] */, %134, %135)
}

def @func_1805(%var_1798: Tensor[(14, 8, 4), int16], %var_1799: Tensor[(14, 8, 4), int16]) -> (Tensor[(14, 8, 4), bool],) {
  %136 = cast(%var_1799, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %137 = shape_of(%var_1798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%var_1798, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %140 = greater(%138, %139) /* ty=Tensor[(14, 8, 4), bool] */;
  (%140,)
}

def @func_6181() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) {
  %141 = @func_6056() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %142 = @func_3608() /* ty=Tensor[(4, 5, 16), float32] */;
  %143 = cast(%142, dtype="float64") /* ty=Tensor[(4, 5, 16), float64] */;
  %144 = %141.1;
  %145 = log10(%143) /* ty=Tensor[(4, 5, 16), float64] */;
  (%144, %145)
}

def @func_10529() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) {
  %146 = @func_6785() /* ty=(Tensor[(4, 5, 16), float64], Tensor[(9, 7, 10), float64], Tensor[(4, 5, 16), float32], Tensor[(630), float64]) */;
  %147 = @func_9298() /* ty=Tensor[(4, 5, 16), float32] */;
  %148 = %146.0;
  (%147, %148)
}

def @func_7659() -> (Tensor[(4, 5, 16), float32],) {
  %149 = @func_4537() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), bool]) */;
  %150 = %149.0;
  (%150,)
}

def @func_6828(%var_6802: Tensor[(70), int32], %var_6803: Tensor[(700), int32], %var_6804: Tensor[(1215), float64], %var_6805: Tensor[(2, 72), float64]) -> (Tensor[(4, 5, 16), float32], Tensor[(70), int32], Tensor[(1215), float64], Tensor[(2, 72), float64], Tensor[(10, 5, 14), float64], Tensor[(700), float32]) {
  %151 = @func_6305() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %152 = cast(%var_6802, dtype="int32") /* ty=Tensor[(70), int32] */;
  %153 = cast(%var_6803, dtype="int32") /* ty=Tensor[(700), int32] */;
  %154 = cast(%var_6804, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %155 = cast(%var_6805, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %156 = reshape(%152, newshape=[1, 5, 14]) /* ty=Tensor[(1, 5, 14), int32] */;
  %157 = reshape(%153, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int32] */;
  %158 = reshape(%154, newshape=[1215]) /* ty=Tensor[(1215), float64] */;
  %159 = reshape(%155, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %160 = @func_1168(%156, %157, %158, %159) /* ty=(Tensor[(10, 5, 14), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(15, 9, 9), float64]) */;
  %161 = %160.0;
  %162 = cast(%161, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %163 = cast(%var_6803, dtype="float32") /* ty=Tensor[(700), float32] */;
  %164 = %151.0;
  %165 = log2(%162) /* ty=Tensor[(10, 5, 14), float64] */;
  %166 = asinh(%163) /* ty=Tensor[(700), float32] */;
  (%164, %var_6802, %var_6804, %var_6805, %165, %166)
}

def @func_7968() -> Tensor[(4, 5, 16), float32] {
  @func_3608() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_10423() -> (Tensor[(4, 5, 16), float64],) {
  %167 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %168 = %167.0;
  (%168,)
}

def @func_7672(%var_7667: Tensor[(4, 3, 10), float32]) -> Tensor[(4, 3, 10), float32] {
  %169 = cast(meta[relay.Constant][16] /* ty=Tensor[(4, 3, 10), float32] */, dtype="float32") /* ty=Tensor[(4, 3, 10), float32] */;
  %170 = shape_of(%var_7667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %171 = cast(%var_7667, dtype="float32") /* ty=Tensor[(4, 3, 10), float32] */;
  %172 = dyn.reshape(%169, %170, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%171, %172) /* ty=Tensor[(4, 3, 10), float32] */
}

def @func_6553() -> Tensor[(11, 13, 9), uint16] {
  %173 = @func_5996() /* ty=(Tensor[(11, 13, 9), uint16],) */;
  %173.0
}

def @func_7927() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %174 = @func_3339() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(144), float64]) */;
  %175 = @func_6616() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */;
  %176 = @func_6305() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %177 = %174.0;
  %178 = %175.0;
  %179 = %176.0;
  (%177, %178, %179)
}

def @func_6931(%var_6914: Tensor[(27, 1), float32], %var_6915: int8, %var_6916: Tensor[(924), uint16], %var_6917: Tensor[(194040), uint16]) -> (Tensor[(4, 5, 16), float64], Tensor[(12, 6, 2), float64], Tensor[(144), float64], Tensor[(924), uint16], Tensor[(27, 1), float32], int8, Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(4, 5, 16), float32]) {
  %180 = @func_4114() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %181 = cast(meta[relay.Constant][17] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %182 = reshape(%181, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), float64] */;
  %183 = cast(%var_6914, dtype="float32") /* ty=Tensor[(27, 1), float32] */;
  %184 = cast(%var_6915, dtype="int8") /* ty=int8 */;
  %185 = cast(%var_6916, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %186 = cast(%var_6917, dtype="uint16") /* ty=Tensor[(194040), uint16] */;
  %187 = reshape(%183, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float32] */;
  %188 = reshape(%184, newshape=[]) /* ty=int8 */;
  %189 = reshape(%185, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %190 = reshape(%186, newshape=[14, 924, 15]) /* ty=Tensor[(14, 924, 15), uint16] */;
  %191 = @func_1713(%187, %188, %189, %190) /* ty=(Tensor[(9, 1, 3), float32], int8, Tensor[(35, 6), int8], Tensor[(924), uint16], Tensor[(14, 924, 15), int64], Tensor[(14, 6, 10), float32], Tensor[(12, 70), bool]) */;
  %192 = %180.0;
  %193 = @func_205(%182) /* ty=Tensor[(12, 6, 2), float64] */;
  %194 = %191.3;
  %195 = @func_3608() /* ty=Tensor[(4, 5, 16), float32] */;
  (%192, %193, meta[relay.Constant][17] /* ty=Tensor[(144), float64] */, %194, %var_6914, %var_6915, %var_6916, %var_6917, %195)
}

def @func_8554() -> (Tensor[(4, 5, 16), float64],) {
  %196 = @func_2999() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %197 = %196.0;
  %198 = cast(%197, dtype="float64") /* ty=Tensor[(4, 5, 16), float64] */;
  %199 = sqrt(%198) /* ty=Tensor[(4, 5, 16), float64] */;
  (%199,)
}

def @func_5358() -> (Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(4, 5, 16), float32]) {
  %200 = cast(meta[relay.Constant][18] /* ty=Tensor[(363), int32] */, dtype="int32") /* ty=Tensor[(363), int32] */;
  %201 = cast(meta[relay.Constant][18] /* ty=Tensor[(363), int32] */, dtype="int32") /* ty=Tensor[(363), int32] */;
  %202 = reshape(%200, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), int32] */;
  %203 = reshape(%201, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), int32] */;
  %204 = @func_2066(%202, %203) /* ty=(Tensor[(11, 11, 3), float64],) */;
  %205 = @func_4937() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */;
  %206 = @func_2833() /* ty=Tensor[(4, 5, 16), float32] */;
  %207 = %204.0;
  %208 = %205.0;
  (%206, %207, meta[relay.Constant][18] /* ty=Tensor[(363), int32] */, %208)
}

def @func_5188() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %209 = @func_3447() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %210 = @func_4537() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), bool]) */;
  %211 = %209.0;
  %212 = %210.0;
  (%211, %212)
}

def @func_5315() -> (Tensor[(4, 5, 16), float32],) {
  %213 = @func_4265() /* ty=Tensor[(4, 5, 16), float32] */;
  (%213,)
}

def @func_5060() -> Tensor[(4, 5, 16), float32] {
  @func_4412() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_7551() -> Tensor[(4, 5, 16), float32] {
  %214 = @func_3447() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %214.0
}

def @func_2484(%var_2402: Tensor[(7, 13, 11), uint16], %var_2403: Tensor[(7, 13, 11), uint16], %var_2422: Tensor[(70), int32], %var_2424: Tensor[(3, 405), float64], %var_2425: Tensor[(144), float64], %var_2434: Tensor[(363), int32], %var_2476: Tensor[(7, 13, 11), uint16]) -> (Tensor[(7, 13, 11), uint16], Tensor[(1215), float64], Tensor[(70), int32], Tensor[(10, 70), int32], Tensor[(3, 405), float64], Tensor[(144), float64], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(7, 13, 11), bool]) {
  %215 = cast(%var_2403, dtype="uint16") /* ty=Tensor[(7, 13, 11), uint16] */;
  %216 = shape_of(%var_2402, dtype="int32") /* ty=Tensor[(3), int32] */;
  %217 = cast(%var_2402, dtype="uint16") /* ty=Tensor[(7, 13, 11), uint16] */;
  %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %219 = cast(%var_2422, dtype="int32") /* ty=Tensor[(70), int32] */;
  %220 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 70), int32] */, dtype="int32") /* ty=Tensor[(10, 70), int32] */;
  %221 = cast(%var_2424, dtype="float64") /* ty=Tensor[(3, 405), float64] */;
  %222 = cast(%var_2425, dtype="float64") /* ty=Tensor[(144), float64] */;
  %223 = reshape(%219, newshape=[1, 5, 14]) /* ty=Tensor[(1, 5, 14), int32] */;
  %224 = reshape(%220, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int32] */;
  %225 = reshape(%221, newshape=[1215]) /* ty=Tensor[(1215), float64] */;
  %226 = reshape(%222, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %227 = @func_1168(%223, %224, %225, %226) /* ty=(Tensor[(10, 5, 14), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(15, 9, 9), float64]) */;
  %228 = cast(%var_2434, dtype="int32") /* ty=Tensor[(363), int32] */;
  %229 = cast(%var_2434, dtype="int32") /* ty=Tensor[(363), int32] */;
  %230 = reshape(%228, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), int32] */;
  %231 = reshape(%229, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), int32] */;
  %232 = @func_2066(%230, %231) /* ty=(Tensor[(11, 11, 3), float64],) */;
  %233 = cast(%var_2476, dtype="bool") /* ty=Tensor[(7, 13, 11), bool] */;
  %234 = shape_of(%var_2403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%var_2403, dtype="bool") /* ty=Tensor[(7, 13, 11), bool] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %237 = logical_xor(%217, %218) /* ty=Tensor[(7, 13, 11), uint16] */;
  %238 = %227.1;
  %239 = %232.0;
  %240 = logical_or(%235, %236) /* ty=Tensor[(7, 13, 11), bool] */;
  (%237, %238, %var_2422, meta[relay.Constant][19] /* ty=Tensor[(10, 70), int32] */, %var_2424, %var_2425, %239, %var_2434, %240)
}

def @func_6579() -> Tensor[(4, 5, 16), float32] {
  %241 = @func_4477() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %241.0
}

def @func_4034(%var_3989: Tensor[(4, 5, 16), float32]) -> (Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64]) {
  %242 = @func_2999() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %243 = %242.0;
  %244 = cast(%var_3989, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
  %245 = shape_of(%243, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%243, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %248 = @func_3339() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(144), float64]) */;
  %249 = floor_mod(%246, %247) /* ty=Tensor[(4, 5, 16), float32] */;
  %250 = %248.1;
  (%249, %250)
}

def @func_10882() -> Tensor[(4, 5, 16), float32] {
  %251 = @func_4537() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), bool]) */;
  %251.0
}

def @func_10751() -> Tensor[(11, 13, 9), uint16] {
  %252 = @func_3941() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 13, 9), uint16]) */;
  %252.1
}

def @func_10639(%var_10600: Tensor[(4, 16, 4), float32], %var_10610: Tensor[(924), uint16]) -> (Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(924), uint16], Tensor[(4, 16, 4), uint64]) {
  %253 = cast(%var_10610, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %254 = reshape(%253, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %255 = @func_4732(%254) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(11, 12, 7), uint16], Tensor[(924), uint16], Tensor[(12, 6, 2), float64]) */;
  %256 = cast(%var_10600, dtype="float32") /* ty=Tensor[(4, 16, 4), float32] */;
  %257 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(4, 16, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %258 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 16, 4), float32] */, dtype="float32") /* ty=Tensor[(4, 16, 4), float32] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %260 = divide(%258, %259) /* ty=Tensor[(4, 16, 4), float32] */;
  %261 = cast(%var_10600, dtype="uint64") /* ty=Tensor[(4, 16, 4), uint64] */;
  %262 = shape_of(%260, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(%260, dtype="uint64") /* ty=Tensor[(4, 16, 4), uint64] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %265 = @func_9298() /* ty=Tensor[(4, 5, 16), float32] */;
  %266 = %255.3;
  %267 = left_shift(%263, %264) /* ty=Tensor[(4, 16, 4), uint64] */;
  (%265, %266, %var_10610, %267)
}

def @func_5505() -> Tensor[(4, 5, 16), float32] {
  %268 = @func_4353() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %268.0
}

def @func_7476(%var_7416: Tensor[(144), float64], %var_7417: int32, %var_7420: Tensor[(210), int8], %var_7444: Tensor[(210), int8]) -> (Tensor[(4, 5, 16), float32], Tensor[(1008), float64], Tensor[(1008), float64], Tensor[(144), float64], Tensor[(195), float64], Tensor[(363), int32], Tensor[(210), float32], Tensor[(4, 5, 16), float32], Tensor[(3, 7, 7), uint64], Tensor[(7, 21), uint64], Tensor[(924, 1), float64], Tensor[(4, 5, 16), float32]) {
  %269 = cast(meta[relay.Constant][21] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %270 = cast(%var_7416, dtype="float64") /* ty=Tensor[(144), float64] */;
  %271 = cast(%var_7417, dtype="int32") /* ty=int32 */;
  %272 = cast(meta[relay.Constant][22] /* ty=Tensor[(924, 1), uint16] */, dtype="uint16") /* ty=Tensor[(924, 1), uint16] */;
  %273 = cast(meta[relay.Constant][23] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
  %274 = cast(%var_7420, dtype="int8") /* ty=Tensor[(210), int8] */;
  %275 = cast(meta[relay.Constant][24] /* ty=Tensor[(363), int32] */, dtype="int32") /* ty=Tensor[(363), int32] */;
  %276 = reshape(%269, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %277 = reshape(%270, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %278 = reshape(%271, newshape=[]) /* ty=int32 */;
  %279 = reshape(%272, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %280 = reshape(%273, newshape=[195]) /* ty=Tensor[(195), float64] */;
  %281 = reshape(%274, newshape=[35, 6]) /* ty=Tensor[(35, 6), int8] */;
  %282 = reshape(%275, newshape=[363]) /* ty=Tensor[(363), int32] */;
  %283 = @func_2942(%276, %277, %278, %279, %280, %281, %282) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(12, 14, 6), float64], Tensor[(1008), float64], Tensor[(144), float64], int32, int8, Tensor[(27), float32], Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(13, 11, 3), float32], Tensor[(429), float32], Tensor[(15, 11, 14), bool], Tensor[(15, 1, 13), float64], Tensor[(195), float64], Tensor[(11, 12, 7), uint16], Tensor[(35, 6), int8], Tensor[(14, 6, 10), float32], Tensor[(840), bool], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */;
  %284 = cast(%var_7444, dtype="float32") /* ty=Tensor[(210), float32] */;
  %285 = shape_of(%var_7420, dtype="int32") /* ty=Tensor[(1), int32] */;
  %286 = cast(%var_7420, dtype="float32") /* ty=Tensor[(210), float32] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?), float32] */;
  %288 = @func_5188() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %289 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 21), uint64] */, dtype="uint64") /* ty=Tensor[(7, 21), uint64] */;
  %290 = reshape(%289, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), uint64] */;
  %291 = @func_5480(%290) /* ty=(Tensor[(3, 7, 7), uint64], Tensor[(4, 5, 16), float32]) */;
  %292 = cast(meta[relay.Constant][22] /* ty=Tensor[(924, 1), uint16] */, dtype="float64") /* ty=Tensor[(924, 1), float64] */;
  %293 = sigmoid(%292) /* ty=Tensor[(924, 1), float64] */;
  %294 = cast(%293, dtype="float64") /* ty=Tensor[(924, 1), float64] */;
  %295 = cast(%var_7417, dtype="float64") /* ty=float64 */;
  %296 = @func_6181() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */;
  %297 = @func_4265() /* ty=Tensor[(4, 5, 16), float32] */;
  %298 = %283.2;
  %299 = floor_divide(%286, %287) /* ty=Tensor[(210), float32] */;
  %300 = %288.0;
  %301 = %291.0;
  %302 = divide(%294, %295) /* ty=Tensor[(924, 1), float64] */;
  %303 = %296.0;
  (%297, %298, meta[relay.Constant][21] /* ty=Tensor[(1008), float64] */, %var_7416, meta[relay.Constant][23] /* ty=Tensor[(195), float64] */, meta[relay.Constant][24] /* ty=Tensor[(363), int32] */, %299, %300, %301, meta[relay.Constant][25] /* ty=Tensor[(7, 21), uint64] */, %302, %303)
}

def @func_4245(%var_4240: Tensor[(11, 13, 9), uint16]) -> Tensor[(11, 13, 9), uint32] {
  %304 = @func_3941() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 13, 9), uint16]) */;
  %305 = %304.1;
  %306 = cast(%var_4240, dtype="uint32") /* ty=Tensor[(11, 13, 9), uint32] */;
  %307 = shape_of(%305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%305, dtype="uint32") /* ty=Tensor[(11, 13, 9), uint32] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%308, %309) /* ty=Tensor[(11, 13, 9), uint32] */
}

def @func_4353() -> (Tensor[(4, 5, 16), float32],) {
  %310 = @func_3168() /* ty=Tensor[(4, 5, 16), float32] */;
  (%310,)
}

def @func_6785() -> (Tensor[(4, 5, 16), float64], Tensor[(9, 7, 10), float64], Tensor[(4, 5, 16), float32], Tensor[(630), float64]) {
  %311 = cast(meta[relay.Constant][26] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %312 = reshape(%311, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), bool] */;
  %313 = @func_5706(%312) /* ty=(Tensor[(9, 7, 10), bool], Tensor[(9, 7, 10), float64]) */;
  %314 = @func_6181() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */;
  %315 = cast(meta[relay.Constant][26] /* ty=Tensor[(630), bool] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %316 = @func_5214() /* ty=Tensor[(4, 5, 16), float64] */;
  %317 = %313.1;
  %318 = %314.0;
  %319 = sigmoid(%315) /* ty=Tensor[(630), float64] */;
  (%316, %317, %318, %319)
}

def @func_1168(%var_1125: Tensor[(1, 5, 14), int32], %var_1126: Tensor[(10, 5, 14), int32], %var_1131: Tensor[(1215), float64], %var_1132: Tensor[(144), float64]) -> (Tensor[(10, 5, 14), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(15, 9, 9), float64]) {
  %320 = cast(%var_1125, dtype="int32") /* ty=Tensor[(1, 5, 14), int32] */;
  %321 = cast(%var_1126, dtype="int32") /* ty=Tensor[(10, 5, 14), int32] */;
  %322 = cast(%var_1131, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %323 = cast(%var_1132, dtype="float64") /* ty=Tensor[(144), float64] */;
  %324 = reshape(%322, newshape=[15, 9, 9]) /* ty=Tensor[(15, 9, 9), float64] */;
  %325 = reshape(%323, newshape=[72, 2]) /* ty=Tensor[(72, 2), float64] */;
  %326 = @func_315(%324, %325) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(72, 2), float64], Tensor[(12, 6, 2), float32]) */;
  %327 = %326.0;
  %328 = cast(%327, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %329 = multiply(%320, %321) /* ty=Tensor[(10, 5, 14), int32] */;
  %330 = asin(%328) /* ty=Tensor[(15, 9, 9), float64] */;
  (%329, %var_1131, %var_1132, %330)
}

def @func_1655(%var_1649: Tensor[(11, 13, 9), uint8]) -> Tensor[(11, 13, 9), uint8] {
  %331 = cast(%var_1649, dtype="uint8") /* ty=Tensor[(11, 13, 9), uint8] */;
  %332 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(11, 13, 9), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 13, 9), uint8] */, dtype="uint8") /* ty=Tensor[(11, 13, 9), uint8] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%333, %334) /* ty=Tensor[(11, 13, 9), uint8] */
}

def @func_3560() -> Tensor[(4, 5, 16), float32] {
  %335 = @func_3447() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %335.0
}

def @func_1305(%var_1302: Tensor[(15, 1, 13), float64]) -> Tensor[(15, 1, 13), float64] {
  %336 = cast(%var_1302, dtype="float64") /* ty=Tensor[(15, 1, 13), float64] */;
  sigmoid(%336) /* ty=Tensor[(15, 1, 13), float64] */
}

def @func_6724() -> Tensor[(4, 5, 16), float32] {
  %337 = @func_3808() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %337.1
}

def @func_5948(%var_5924: Tensor[(15, 2, 16), float64]) -> Tensor[(15, 2, 16), float32] {
  %338 = cast(%var_5924, dtype="float64") /* ty=Tensor[(15, 2, 16), float64] */;
  %339 = rsqrt(%338) /* ty=Tensor[(15, 2, 16), float64] */;
  %340 = cast(%var_5924, dtype="float32") /* ty=Tensor[(15, 2, 16), float32] */;
  %341 = shape_of(%339, dtype="int32") /* ty=Tensor[(3), int32] */;
  %342 = cast(%339, dtype="float32") /* ty=Tensor[(15, 2, 16), float32] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%342, %343) /* ty=Tensor[(15, 2, 16), float32] */
}

def @func_7989() -> (Tensor[(4, 5, 16), float32],) {
  %344 = @func_3608() /* ty=Tensor[(4, 5, 16), float32] */;
  (%344,)
}

def @func_3119() -> (Tensor[(4, 5, 16), float32],) {
  %345 = @func_2999() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %346 = %345.0;
  (%346,)
}

def @func_4839(%var_4802: Tensor[(12, 1, 15), uint32], %var_4803: Tensor[(12, 13, 15), uint32]) -> (Tensor[(12, 13, 15), float64],) {
  %347 = cast(%var_4802, dtype="uint32") /* ty=Tensor[(12, 1, 15), uint32] */;
  %348 = cast(%var_4803, dtype="uint32") /* ty=Tensor[(12, 13, 15), uint32] */;
  %349 = logical_xor(%347, %348) /* ty=Tensor[(12, 13, 15), uint32] */;
  %350 = cast(%349, dtype="float64") /* ty=Tensor[(12, 13, 15), float64] */;
  %351 = asin(%350) /* ty=Tensor[(12, 13, 15), float64] */;
  (%351,)
}

def @func_9222(%var_9149: Tensor[(108), float64], %var_9183: Tensor[(27), float32], %var_9184: Tensor[(924), uint16], %var_9185: Tensor[(194040), uint16]) -> (Tensor[(4, 5, 16), float32], Tensor[(144), float64], Tensor[(108), float64], Tensor[(196), int8], Tensor[(194040), uint16], Tensor[(27), float32], Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(21), int8], Tensor[(27, 45), float64], Tensor[(363, 1), int32]) {
  %352 = @func_4477() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %353 = cast(%var_9149, dtype="float64") /* ty=Tensor[(108), float64] */;
  %354 = cast(meta[relay.Constant][28] /* ty=Tensor[(196), int8] */, dtype="int8") /* ty=Tensor[(196), int8] */;
  %355 = reshape(%353, newshape=[3, 4, 9]) /* ty=Tensor[(3, 4, 9), float64] */;
  %356 = reshape(%354, newshape=[196]) /* ty=Tensor[(196), int8] */;
  %357 = @func_4083(%355, %356) /* ty=(Tensor[(3, 4, 9), float64], Tensor[(144), float64], int8, Tensor[(196), int8], Tensor[(144), float64]) */;
  %358 = cast(%var_9183, dtype="float32") /* ty=Tensor[(27), float32] */;
  %359 = cast(%var_9184, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %360 = cast(%var_9185, dtype="uint16") /* ty=Tensor[(194040), uint16] */;
  %361 = reshape(%358, newshape=[9, 3]) /* ty=Tensor[(9, 3), float32] */;
  %362 = reshape(%359, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %363 = reshape(%360, newshape=[194040]) /* ty=Tensor[(194040), uint16] */;
  %364 = @func_2756(%361, %362, %363) /* ty=(Tensor[(4, 5, 16), float64], int8, Tensor[(9, 3), float32], Tensor[(924), uint16], Tensor[(194040), uint16]) */;
  %365 = cast(%var_9183, dtype="float32") /* ty=Tensor[(27), float32] */;
  %366 = cast(meta[relay.Constant][28] /* ty=Tensor[(196), int8] */, dtype="int8") /* ty=Tensor[(196), int8] */;
  %367 = cast(meta[relay.Constant][29] /* ty=Tensor[(27, 45), float64] */, dtype="float64") /* ty=Tensor[(27, 45), float64] */;
  %368 = cast(meta[relay.Constant][30] /* ty=Tensor[(363, 1), int32] */, dtype="int32") /* ty=Tensor[(363, 1), int32] */;
  %369 = reshape(%365, newshape=[27]) /* ty=Tensor[(27), float32] */;
  %370 = reshape(%366, newshape=[196]) /* ty=Tensor[(196), int8] */;
  %371 = reshape(%367, newshape=[1215]) /* ty=Tensor[(1215), float64] */;
  %372 = reshape(%368, newshape=[363]) /* ty=Tensor[(363), int32] */;
  %373 = @func_8289(%369, %370, %371, %372) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(27), float32], Tensor[(924), uint16], Tensor[(4, 5, 16), float32], Tensor[(196), int8], Tensor[(1, 3, 7), int8], Tensor[(21), int8], Tensor[(194040), bool], Tensor[(194040), bool], Tensor[(363), int32], Tensor[(1001), uint16], Tensor[(70), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(363), int32]) */;
  %374 = %352.0;
  %375 = %357.1;
  %376 = %364.4;
  %377 = %373.6;
  (%374, %375, %var_9149, meta[relay.Constant][28] /* ty=Tensor[(196), int8] */, %376, %var_9183, %var_9184, %var_9185, %377, meta[relay.Constant][29] /* ty=Tensor[(27, 45), float64] */, meta[relay.Constant][30] /* ty=Tensor[(363, 1), int32] */)
}

def @func_802(%var_797: Tensor[(13, 11, 3), float32], %var_798: Tensor[(13, 11, 3), float32]) -> (Tensor[(13, 11, 3), float32],) {
  %378 = cast(%var_798, dtype="float32") /* ty=Tensor[(13, 11, 3), float32] */;
  %379 = shape_of(%var_797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %380 = cast(%var_797, dtype="float32") /* ty=Tensor[(13, 11, 3), float32] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %382 = floor_divide(%380, %381) /* ty=Tensor[(13, 11, 3), float32] */;
  (%382,)
}

def @func_10566() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %383 = @func_6056() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %384 = @func_7245() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %385 = %383.0;
  %386 = %384.0;
  (%385, %386)
}

def @func_8367() -> Tensor[(11, 13, 9), uint16] {
  @func_6553() /* ty=Tensor[(11, 13, 9), uint16] */
}

def @func_9118() -> Tensor[(4, 5, 16), float32] {
  %387 = @func_4477() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %387.0
}

def @func_5828() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) {
  %388 = @func_3119() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %389 = @func_4114() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %390 = %388.0;
  %391 = %389.0;
  (%390, %391)
}

def @func_2669() -> (Tensor[(4, 5, 16), float64],) {
  %392 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(4, 5, 16), float64] */;
  %393 = sigmoid(%392) /* ty=Tensor[(4, 5, 16), float64] */;
  (%393,)
}

def @func_6668() -> (Tensor[(4, 5, 16), float32], Tensor[(15, 2, 16), float32], Tensor[(40, 12), float64]) {
  %394 = @func_4537() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), bool]) */;
  %395 = cast(meta[relay.Constant][32] /* ty=Tensor[(40, 12), float64] */, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %396 = reshape(%395, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %397 = %394.0;
  %398 = @func_5948(%396) /* ty=Tensor[(15, 2, 16), float32] */;
  (%397, %398, meta[relay.Constant][32] /* ty=Tensor[(40, 12), float64] */)
}

def @func_7245() -> (Tensor[(4, 5, 16), float32],) {
  %399 = @func_6579() /* ty=Tensor[(4, 5, 16), float32] */;
  (%399,)
}

def @func_8757(%var_8743: int32) -> (Tensor[(15, 11, 14), bool], int32, Tensor[(16, 7, 3), float64], Tensor[(4, 5, 16), float32]) {
  %400 = cast(%var_8743, dtype="int32") /* ty=int32 */;
  %401 = reshape(%400, newshape=[]) /* ty=int32 */;
  %402 = @func_938(%401) /* ty=(Tensor[(15, 11, 14), bool],) */;
  %403 = cast(meta[relay.Constant][33] /* ty=Tensor[(16, 7, 3), float64] */, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %404 = tan(%403) /* ty=Tensor[(16, 7, 3), float64] */;
  %405 = cast(meta[relay.Constant][33] /* ty=Tensor[(16, 7, 3), float64] */, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %406 = shape_of(%404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %407 = cast(%404, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %409 = %402.0;
  %410 = power(%407, %408) /* ty=Tensor[(16, 7, 3), float64] */;
  %411 = @func_3414() /* ty=Tensor[(4, 5, 16), float32] */;
  (%409, %var_8743, %410, %411)
}

def @func_4561() -> (Tensor[(4, 5, 16), float32],) {
  %412 = @func_4412() /* ty=Tensor[(4, 5, 16), float32] */;
  (%412,)
}

def @func_8465() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) {
  %413 = @func_6668() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(15, 2, 16), float32], Tensor[(40, 12), float64]) */;
  %414 = @func_6568() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %415 = @func_3168() /* ty=Tensor[(4, 5, 16), float32] */;
  %416 = %413.0;
  %417 = %414.0;
  (%415, %416, %417)
}

def @func_7063() -> Tensor[(4, 5, 16), float32] {
  %418 = @func_6668() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(15, 2, 16), float32], Tensor[(40, 12), float64]) */;
  %418.0
}

def @func_9298() -> Tensor[(4, 5, 16), float32] {
  %419 = @func_4937() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */;
  %419.0
}

def @func_10145(%var_10099: Tensor[(1287, 1), uint8], %var_10141: Tensor[(1008), float64]) -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(1287, 144), uint32], Tensor[(144), float64], Tensor[(1008), float64]) {
  %420 = cast(%var_10099, dtype="float64") /* ty=Tensor[(1287, 1), float64] */;
  %421 = tan(%420) /* ty=Tensor[(1287, 1), float64] */;
  %422 = cast(%var_10099, dtype="uint8") /* ty=Tensor[(1287, 1), uint8] */;
  %423 = reshape(%422, newshape=[1287]) /* ty=Tensor[(1287), uint8] */;
  %424 = @func_4619(%423) /* ty=(Tensor[(144), float64], Tensor[(11, 13, 9), uint8], Tensor[(1287), uint8]) */;
  %425 = %424.0;
  %426 = cast(%421, dtype="uint32") /* ty=Tensor[(1287, 1), uint32] */;
  %427 = cast(%425, dtype="uint32") /* ty=Tensor[(144), uint32] */;
  %428 = cast(%var_10141, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %429 = reshape(%428, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %430 = @func_9678(%429) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(2, 72), float64], Tensor[(1008), float64], Tensor[(144), float64], int32) */;
  %431 = @func_3608() /* ty=Tensor[(4, 5, 16), float32] */;
  %432 = @func_9768() /* ty=Tensor[(4, 5, 16), float32] */;
  %433 = bitwise_and(%426, %427) /* ty=Tensor[(1287, 144), uint32] */;
  %434 = %430.3;
  (%431, %432, %433, %434, %var_10141)
}

def @func_5540() -> (Tensor[(4, 5, 16), float32],) {
  %435 = @func_3119() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %436 = %435.0;
  (%436,)
}

def @func_4918(%var_4910: Tensor[(3, 15, 12), int32], %var_4911: Tensor[(3, 15, 12), int32]) -> Tensor[(3, 15, 12), int32] {
  %437 = cast(%var_4911, dtype="int32") /* ty=Tensor[(3, 15, 12), int32] */;
  %438 = shape_of(%var_4910, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%var_4910, dtype="int32") /* ty=Tensor[(3, 15, 12), int32] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_and(%439, %440) /* ty=Tensor[(3, 15, 12), int32] */
}

def @func_8129() -> (Tensor[(4, 5, 16), float32],) {
  %441 = @func_5315() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %442 = %441.0;
  (%442,)
}

def @func_4906(%var_4899: Tensor[(2340), uint32]) -> (Tensor[(4, 5, 16), float32], Tensor[(12, 13, 15), float64], Tensor[(180), uint32], Tensor[(2340), uint32], Tensor[(4, 5, 16), float64]) {
  %443 = cast(meta[relay.Constant][34] /* ty=Tensor[(180), uint32] */, dtype="uint32") /* ty=Tensor[(180), uint32] */;
  %444 = cast(%var_4899, dtype="uint32") /* ty=Tensor[(2340), uint32] */;
  %445 = reshape(%443, newshape=[12, 1, 15]) /* ty=Tensor[(12, 1, 15), uint32] */;
  %446 = reshape(%444, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), uint32] */;
  %447 = @func_4839(%445, %446) /* ty=(Tensor[(12, 13, 15), float64],) */;
  %448 = @func_4114() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %449 = @func_3414() /* ty=Tensor[(4, 5, 16), float32] */;
  %450 = %447.0;
  %451 = %448.0;
  (%449, %450, meta[relay.Constant][34] /* ty=Tensor[(180), uint32] */, %var_4899, %451)
}

def @func_9420(%var_9391: Tensor[(144), float64]) -> (Tensor[(4, 5, 16), float32], Tensor[(70), int32], int8, Tensor[(1, 196), int8], Tensor[(144), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %452 = @func_7245() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %453 = cast(meta[relay.Constant][35] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %454 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 196), int8] */, dtype="int8") /* ty=Tensor[(1, 196), int8] */;
  %455 = cast(%var_9391, dtype="float64") /* ty=Tensor[(144), float64] */;
  %456 = reshape(%453, newshape=[]) /* ty=int8 */;
  %457 = reshape(%454, newshape=[1, 14, 14]) /* ty=Tensor[(1, 14, 14), int8] */;
  %458 = reshape(%455, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %459 = @func_3634(%456, %457, %458) /* ty=(Tensor[(?, 14, 14), uint8], Tensor[(144), float64], Tensor[(70), int32], Tensor[(700), int32], Tensor[(1215), float64], Tensor[(144), float64]) */;
  %460 = @func_7927() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %461 = @func_5540() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %462 = %452.0;
  %463 = %459.2;
  %464 = %460.2;
  %465 = %461.0;
  (%462, %463, meta[relay.Constant][35] /* ty=int8 */, meta[relay.Constant][36] /* ty=Tensor[(1, 196), int8] */, %var_9391, %464, %465)
}

def @func_6521(%var_6509: Tensor[(1440), uint16], %var_6512: Tensor[(429, 3), uint8]) -> (Tensor[(4, 5, 16), float32], Tensor[(1001), uint16], Tensor[(1440), uint16], Tensor[(11, 13, 9), uint8], Tensor[(429, 3), uint8], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %466 = @func_3447() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %467 = cast(%var_6509, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
  %468 = reshape(%467, newshape=[16, 10, 9]) /* ty=Tensor[(16, 10, 9), uint16] */;
  %469 = @func_6207(%468) /* ty=(Tensor[(16, 10, 9), bool], Tensor[(7, 13, 11), uint16], Tensor[(1001), uint16]) */;
  %470 = cast(%var_6512, dtype="uint8") /* ty=Tensor[(429, 3), uint8] */;
  %471 = reshape(%470, newshape=[11, 13, 9]) /* ty=Tensor[(11, 13, 9), uint8] */;
  %472 = @func_5448() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %473 = %466.0;
  %474 = %469.2;
  %475 = @func_1655(%471) /* ty=Tensor[(11, 13, 9), uint8] */;
  %476 = @func_3168() /* ty=Tensor[(4, 5, 16), float32] */;
  %477 = %472.0;
  (%473, %474, %var_6509, %475, %var_6512, %476, %477)
}

def @func_2942(%var_2864: Tensor[(1008), float64], %var_2865: Tensor[(144), float64], %var_2866: int32, %var_2877: Tensor[(924), uint16], %var_2905: Tensor[(195), float64], %var_2913: Tensor[(35, 6), int8], %var_2933: Tensor[(363), int32]) -> (Tensor[(4, 5, 16), float64], Tensor[(12, 14, 6), float64], Tensor[(1008), float64], Tensor[(144), float64], int32, int8, Tensor[(27), float32], Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(13, 11, 3), float32], Tensor[(429), float32], Tensor[(15, 11, 14), bool], Tensor[(15, 1, 13), float64], Tensor[(195), float64], Tensor[(11, 12, 7), uint16], Tensor[(35, 6), int8], Tensor[(14, 6, 10), float32], Tensor[(840), bool], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) {
  %478 = @func_2833() /* ty=Tensor[(4, 5, 16), float32] */;
  %479 = cast(%478, dtype="float64") /* ty=Tensor[(4, 5, 16), float64] */;
  %480 = cast(%var_2864, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %481 = cast(%var_2865, dtype="float64") /* ty=Tensor[(144), float64] */;
  %482 = cast(%var_2866, dtype="int32") /* ty=int32 */;
  %483 = reshape(%480, newshape=[12, 14, 6]) /* ty=Tensor[(12, 14, 6), float64] */;
  %484 = reshape(%481, newshape=[2, 72]) /* ty=Tensor[(2, 72), float64] */;
  %485 = reshape(%482, newshape=[]) /* ty=int32 */;
  %486 = @func_1478(%483, %484, %485) /* ty=(Tensor[(12, 14, 6), float64], Tensor[(12, 6, 2), float64], Tensor[(2, 72), float64], Tensor[(15, 11, 14), bool], int32) */;
  %487 = cast(meta[relay.Constant][37] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
  %488 = cast(%var_2877, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %489 = cast(meta[relay.Constant][38] /* ty=Tensor[(194040), uint16] */, dtype="uint16") /* ty=Tensor[(194040), uint16] */;
  %490 = reshape(%487, newshape=[9, 3]) /* ty=Tensor[(9, 3), float32] */;
  %491 = reshape(%488, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %492 = reshape(%489, newshape=[194040]) /* ty=Tensor[(194040), uint16] */;
  %493 = @func_2756(%490, %491, %492) /* ty=(Tensor[(4, 5, 16), float64], int8, Tensor[(9, 3), float32], Tensor[(924), uint16], Tensor[(194040), uint16]) */;
  %494 = cast(meta[relay.Constant][39] /* ty=Tensor[(429), float32] */, dtype="float32") /* ty=Tensor[(429), float32] */;
  %495 = cast(meta[relay.Constant][39] /* ty=Tensor[(429), float32] */, dtype="float32") /* ty=Tensor[(429), float32] */;
  %496 = reshape(%494, newshape=[13, 11, 3]) /* ty=Tensor[(13, 11, 3), float32] */;
  %497 = reshape(%495, newshape=[13, 11, 3]) /* ty=Tensor[(13, 11, 3), float32] */;
  %498 = @func_802(%496, %497) /* ty=(Tensor[(13, 11, 3), float32],) */;
  %499 = cast(%var_2866, dtype="int32") /* ty=int32 */;
  %500 = reshape(%499, newshape=[]) /* ty=int32 */;
  %501 = @func_938(%500) /* ty=(Tensor[(15, 11, 14), bool],) */;
  %502 = cast(%var_2905, dtype="float64") /* ty=Tensor[(195), float64] */;
  %503 = reshape(%502, newshape=[15, 1, 13]) /* ty=Tensor[(15, 1, 13), float64] */;
  %504 = cast(%var_2866, dtype="int8") /* ty=int8 */;
  %505 = cast(%var_2913, dtype="int8") /* ty=Tensor[(35, 6), int8] */;
  %506 = cast(%var_2877, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %507 = reshape(%504, newshape=[]) /* ty=int8 */;
  %508 = reshape(%505, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), int8] */;
  %509 = reshape(%506, newshape=[924, 1]) /* ty=Tensor[(924, 1), uint16] */;
  %510 = @func_626(%507, %508, %509) /* ty=(Tensor[(14, 1, 15), int8], Tensor[(11, 12, 7), uint16], Tensor[(14, 924, 15), uint16]) */;
  %511 = cast(meta[relay.Constant][40] /* ty=Tensor[(840), bool] */, dtype="bool") /* ty=Tensor[(840), bool] */;
  %512 = reshape(%511, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), bool] */;
  %513 = @func_1382(%512) /* ty=(Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float32]) */;
  %514 = cast(%var_2933, dtype="int32") /* ty=Tensor[(363), int32] */;
  %515 = cast(%var_2933, dtype="int32") /* ty=Tensor[(363), int32] */;
  %516 = reshape(%514, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), int32] */;
  %517 = reshape(%515, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), int32] */;
  %518 = @func_2066(%516, %517) /* ty=(Tensor[(11, 11, 3), float64],) */;
  %519 = tan(%479) /* ty=Tensor[(4, 5, 16), float64] */;
  %520 = %486.0;
  %521 = %493.1;
  %522 = %498.0;
  %523 = %501.0;
  %524 = @func_1305(%503) /* ty=Tensor[(15, 1, 13), float64] */;
  %525 = %510.1;
  %526 = %513.1;
  %527 = %518.0;
  (%519, %520, %var_2864, %var_2865, %var_2866, %521, meta[relay.Constant][37] /* ty=Tensor[(27), float32] */, %var_2877, meta[relay.Constant][38] /* ty=Tensor[(194040), uint16] */, %522, meta[relay.Constant][39] /* ty=Tensor[(429), float32] */, %523, %524, %var_2905, %525, %var_2913, %526, meta[relay.Constant][40] /* ty=Tensor[(840), bool] */, %527, %var_2933)
}

def @func_4114() -> (Tensor[(4, 5, 16), float64],) {
  %528 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %529 = %528.0;
  (%529,)
}

def @func_6869(%var_6864: Tensor[(12, 12, 10), float64], %var_6865: Tensor[(12, 12, 10), float64]) -> Tensor[(12, 12, 10), float64] {
  %530 = cast(%var_6865, dtype="float64") /* ty=Tensor[(12, 12, 10), float64] */;
  %531 = shape_of(%var_6864, dtype="int32") /* ty=Tensor[(3), int32] */;
  %532 = cast(%var_6864, dtype="float64") /* ty=Tensor[(12, 12, 10), float64] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%532, %533) /* ty=Tensor[(12, 12, 10), float64] */
}

def @func_5668(%var_5656: int8, %var_5657: Tensor[(5, 42), int8], %var_5658: Tensor[(7, 132), uint16]) -> (Tensor[(4, 5, 16), float64], Tensor[(11, 13, 9), uint8], Tensor[(1287), uint8], Tensor[(14, 924, 15), uint16], Tensor[(5, 42), int8], Tensor[(7, 132), int32]) {
  %534 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %535 = cast(meta[relay.Constant][41] /* ty=Tensor[(1287), uint8] */, dtype="uint8") /* ty=Tensor[(1287), uint8] */;
  %536 = reshape(%535, newshape=[1287]) /* ty=Tensor[(1287), uint8] */;
  %537 = @func_4619(%536) /* ty=(Tensor[(144), float64], Tensor[(11, 13, 9), uint8], Tensor[(1287), uint8]) */;
  %538 = cast(%var_5656, dtype="int8") /* ty=int8 */;
  %539 = cast(%var_5657, dtype="int8") /* ty=Tensor[(5, 42), int8] */;
  %540 = cast(%var_5658, dtype="uint16") /* ty=Tensor[(7, 132), uint16] */;
  %541 = reshape(%538, newshape=[]) /* ty=int8 */;
  %542 = reshape(%539, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), int8] */;
  %543 = reshape(%540, newshape=[924, 1]) /* ty=Tensor[(924, 1), uint16] */;
  %544 = @func_626(%541, %542, %543) /* ty=(Tensor[(14, 1, 15), int8], Tensor[(11, 12, 7), uint16], Tensor[(14, 924, 15), uint16]) */;
  %545 = cast(%var_5658, dtype="int32") /* ty=Tensor[(7, 132), int32] */;
  %546 = cast(%var_5656, dtype="int32") /* ty=int32 */;
  %547 = %534.0;
  %548 = %537.1;
  %549 = %544.2;
  %550 = multiply(%545, %546) /* ty=Tensor[(7, 132), int32] */;
  (%547, %548, meta[relay.Constant][41] /* ty=Tensor[(1287), uint8] */, %549, %var_5657, %550)
}

def @func_3414() -> Tensor[(4, 5, 16), float32] {
  %551 = @func_3190() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %551.0
}

def @func_7163(%var_7129: Tensor[(363), int32], %var_7141: Tensor[(363), float64]) -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(363), int8], Tensor[(363), int16], Tensor[(363), int32], Tensor[(363), float64]) {
  %552 = @func_5358() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(4, 5, 16), float32]) */;
  %553 = %552.2;
  %554 = cast(%var_7129, dtype="int8") /* ty=Tensor[(363), int8] */;
  %555 = shape_of(%553, dtype="int32") /* ty=Tensor[(1), int32] */;
  %556 = cast(%553, dtype="int8") /* ty=Tensor[(363), int8] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?), int8] */;
  %558 = cast(%553, dtype="float64") /* ty=Tensor[(363), float64] */;
  %559 = sinh(%558) /* ty=Tensor[(363), float64] */;
  %560 = cast(%var_7141, dtype="int16") /* ty=Tensor[(363), int16] */;
  %561 = shape_of(%559, dtype="int32") /* ty=Tensor[(1), int32] */;
  %562 = cast(%559, dtype="int16") /* ty=Tensor[(363), int16] */;
  %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?), int16] */;
  %564 = @func_4937() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */;
  %565 = cast(%559, dtype="float64") /* ty=Tensor[(363), float64] */;
  %566 = @func_5505() /* ty=Tensor[(4, 5, 16), float32] */;
  %567 = @func_3608() /* ty=Tensor[(4, 5, 16), float32] */;
  %568 = maximum(%556, %557) /* ty=Tensor[(363), int8] */;
  %569 = multiply(%562, %563) /* ty=Tensor[(363), int16] */;
  %570 = %564.2;
  %571 = erf(%565) /* ty=Tensor[(363), float64] */;
  (%566, %567, %568, %569, %570, %571)
}

def @func_626(%var_597: int8, %var_598: Tensor[(14, 1, 15), int8], %var_619: Tensor[(924, 1), uint16]) -> (Tensor[(14, 1, 15), int8], Tensor[(11, 12, 7), uint16], Tensor[(14, 924, 15), uint16]) {
  %572 = cast(%var_597, dtype="int8") /* ty=int8 */;
  %573 = cast(%var_598, dtype="int8") /* ty=Tensor[(14, 1, 15), int8] */;
  %574 = cast(%var_619, dtype="uint16") /* ty=Tensor[(924, 1), uint16] */;
  %575 = cast(%var_619, dtype="uint16") /* ty=Tensor[(924, 1), uint16] */;
  %576 = reshape(%574, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), uint16] */;
  %577 = reshape(%575, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), uint16] */;
  %578 = cast(%var_619, dtype="uint16") /* ty=Tensor[(924, 1), uint16] */;
  %579 = cast(%var_598, dtype="uint16") /* ty=Tensor[(14, 1, 15), uint16] */;
  %580 = multiply(%572, %573) /* ty=Tensor[(14, 1, 15), int8] */;
  %581 = @func_498(%576, %577) /* ty=Tensor[(11, 12, 7), uint16] */;
  %582 = left_shift(%578, %579) /* ty=Tensor[(14, 924, 15), uint16] */;
  (%580, %581, %582)
}

def @func_6470() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %583 = @func_3119() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %584 = @func_3608() /* ty=Tensor[(4, 5, 16), float32] */;
  %585 = %583.0;
  (%584, %585)
}

def @func_10272(%var_10241: Tensor[(27), float32]) -> (Tensor[(4, 5, 16), float32], int8, Tensor[(1, 924), uint16], Tensor[(3, 64680), uint16], Tensor[(4, 5, 16), float32], Tensor[(27), bool], Tensor[(2340), uint32], Tensor[(2340), uint32]) {
  %586 = cast(%var_10241, dtype="float32") /* ty=Tensor[(27), float32] */;
  %587 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 924), uint16] */, dtype="uint16") /* ty=Tensor[(1, 924), uint16] */;
  %588 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 64680), uint16] */, dtype="uint16") /* ty=Tensor[(3, 64680), uint16] */;
  %589 = reshape(%586, newshape=[9, 3]) /* ty=Tensor[(9, 3), float32] */;
  %590 = reshape(%587, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %591 = reshape(%588, newshape=[194040]) /* ty=Tensor[(194040), uint16] */;
  %592 = @func_2756(%589, %590, %591) /* ty=(Tensor[(4, 5, 16), float64], int8, Tensor[(9, 3), float32], Tensor[(924), uint16], Tensor[(194040), uint16]) */;
  %593 = @func_7989() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %594 = cast(meta[relay.Constant][44] /* ty=Tensor[(27), float32] */, dtype="bool") /* ty=Tensor[(27), bool] */;
  %595 = shape_of(%var_10241, dtype="int32") /* ty=Tensor[(1), int32] */;
  %596 = cast(%var_10241, dtype="bool") /* ty=Tensor[(27), bool] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?), bool] */;
  %598 = cast(meta[relay.Constant][45] /* ty=Tensor[(2340), uint32] */, dtype="uint32") /* ty=Tensor[(2340), uint32] */;
  %599 = reshape(%598, newshape=[2340]) /* ty=Tensor[(2340), uint32] */;
  %600 = @func_4906(%599) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 13, 15), float64], Tensor[(180), uint32], Tensor[(2340), uint32], Tensor[(4, 5, 16), float64]) */;
  %601 = @func_3168() /* ty=Tensor[(4, 5, 16), float32] */;
  %602 = %592.1;
  %603 = %593.0;
  %604 = not_equal(%596, %597) /* ty=Tensor[(27), bool] */;
  %605 = %600.3;
  (%601, %602, meta[relay.Constant][42] /* ty=Tensor[(1, 924), uint16] */, meta[relay.Constant][43] /* ty=Tensor[(3, 64680), uint16] */, %603, %604, %605, meta[relay.Constant][45] /* ty=Tensor[(2340), uint32] */)
}

def @func_5279(%var_5228: Tensor[(1001), uint16]) -> (Tensor[(4, 5, 16), float32], Tensor[(7, 13, 11), uint16], Tensor[(70), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(363), int32], Tensor[(1001), float64]) {
  %606 = @func_4937() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */;
  %607 = cast(%var_5228, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %608 = cast(%var_5228, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %609 = cast(meta[relay.Constant][46] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
  %610 = cast(meta[relay.Constant][47] /* ty=Tensor[(81, 15), float64] */, dtype="float64") /* ty=Tensor[(81, 15), float64] */;
  %611 = cast(meta[relay.Constant][48] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %612 = cast(meta[relay.Constant][49] /* ty=Tensor[(363), int32] */, dtype="int32") /* ty=Tensor[(363), int32] */;
  %613 = cast(%var_5228, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %614 = reshape(%607, newshape=[7, 13, 11]) /* ty=Tensor[(7, 13, 11), uint16] */;
  %615 = reshape(%608, newshape=[7, 13, 11]) /* ty=Tensor[(7, 13, 11), uint16] */;
  %616 = reshape(%609, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %617 = reshape(%610, newshape=[3, 405]) /* ty=Tensor[(3, 405), float64] */;
  %618 = reshape(%611, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %619 = reshape(%612, newshape=[363]) /* ty=Tensor[(363), int32] */;
  %620 = reshape(%613, newshape=[7, 13, 11]) /* ty=Tensor[(7, 13, 11), uint16] */;
  %621 = @func_2484(%614, %615, %616, %617, %618, %619, %620) /* ty=(Tensor[(7, 13, 11), uint16], Tensor[(1215), float64], Tensor[(70), int32], Tensor[(10, 70), int32], Tensor[(3, 405), float64], Tensor[(144), float64], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(7, 13, 11), bool]) */;
  %622 = cast(%var_5228, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %623 = cos(%622) /* ty=Tensor[(1001), float32] */;
  %624 = cast(%var_5228, dtype="float64") /* ty=Tensor[(1001), float64] */;
  %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(1), int32] */;
  %626 = cast(%623, dtype="float64") /* ty=Tensor[(1001), float64] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?), float64] */;
  %628 = %606.0;
  %629 = %621.0;
  %630 = divide(%626, %627) /* ty=Tensor[(1001), float64] */;
  (%628, %629, meta[relay.Constant][46] /* ty=Tensor[(70), int32] */, meta[relay.Constant][47] /* ty=Tensor[(81, 15), float64] */, meta[relay.Constant][48] /* ty=Tensor[(144), float64] */, meta[relay.Constant][49] /* ty=Tensor[(363), int32] */, %630)
}

def @func_3808() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %631 = @func_3190() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %632 = %631.0;
  %633 = @func_2833() /* ty=Tensor[(4, 5, 16), float32] */;
  (%632, %633)
}

def @func_4537() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), bool]) {
  %634 = @func_2833() /* ty=Tensor[(4, 5, 16), float32] */;
  %635 = cast(%634, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
  %636 = reshape(%635, newshape=[4, 5, 16]) /* ty=Tensor[(4, 5, 16), float32] */;
  %637 = @func_3152(%636) /* ty=Tensor[(4, 5, 16), uint32] */;
  %638 = @func_4412() /* ty=Tensor[(4, 5, 16), float32] */;
  %639 = cast(%638, dtype="bool") /* ty=Tensor[(4, 5, 16), bool] */;
  %640 = shape_of(%637, dtype="int32") /* ty=Tensor[(3), int32] */;
  %641 = cast(%637, dtype="bool") /* ty=Tensor[(4, 5, 16), bool] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %643 = greater(%641, %642) /* ty=Tensor[(4, 5, 16), bool] */;
  (%634, %643)
}

def @func_10844() -> Tensor[(4, 5, 16), float32] {
  %644 = @func_7877() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %644.0
}

def @func_8979() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %645 = @func_8465() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */;
  %646 = @func_7519() /* ty=Tensor[(4, 5, 16), float32] */;
  %647 = %645.0;
  (%646, %647)
}

def @func_498(%var_490: Tensor[(11, 12, 7), uint16], %var_491: Tensor[(11, 12, 7), uint16]) -> Tensor[(11, 12, 7), uint16] {
  %648 = cast(%var_491, dtype="uint16") /* ty=Tensor[(11, 12, 7), uint16] */;
  %649 = shape_of(%var_490, dtype="int32") /* ty=Tensor[(3), int32] */;
  %650 = cast(%var_490, dtype="uint16") /* ty=Tensor[(11, 12, 7), uint16] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  logical_xor(%650, %651) /* ty=Tensor[(11, 12, 7), uint16] */
}

def @func_5214() -> Tensor[(4, 5, 16), float64] {
  %652 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %652.0
}

def @func_7764(%var_7735: Tensor[(363), int32]) -> (Tensor[(4, 5, 16), float32], Tensor[(363), uint32], Tensor[(363), bool], Tensor[(4, 5, 16), float32]) {
  %653 = @func_5540() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %654 = @func_4937() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */;
  %655 = %654.2;
  %656 = cast(%var_7735, dtype="uint32") /* ty=Tensor[(363), uint32] */;
  %657 = shape_of(%655, dtype="int32") /* ty=Tensor[(1), int32] */;
  %658 = cast(%655, dtype="uint32") /* ty=Tensor[(363), uint32] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %660 = cast(%var_7735, dtype="float32") /* ty=Tensor[(363), float32] */;
  %661 = acos(%660) /* ty=Tensor[(363), float32] */;
  %662 = cast(%661, dtype="float64") /* ty=Tensor[(363), float64] */;
  %663 = rsqrt(%662) /* ty=Tensor[(363), float64] */;
  %664 = cast(%663, dtype="bool") /* ty=Tensor[(363), bool] */;
  %665 = shape_of(%661, dtype="int32") /* ty=Tensor[(1), int32] */;
  %666 = cast(%661, dtype="bool") /* ty=Tensor[(363), bool] */;
  %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?), bool] */;
  %668 = %653.0;
  %669 = cast(%668, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
  %670 = reshape(%669, newshape=[4, 5, 16]) /* ty=Tensor[(4, 5, 16), float32] */;
  %671 = @func_4034(%670) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64]) */;
  %672 = left_shift(%658, %659) /* ty=Tensor[(363), uint32] */;
  %673 = logical_and(%666, %667) /* ty=Tensor[(363), bool] */;
  %674 = %671.0;
  (%668, %672, %673, %674)
}

def @func_7335() -> (Tensor[(4, 5, 16), float32], Tensor[(363), int8], Tensor[(363), int32]) {
  %675 = @func_5448() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %676 = cast(meta[relay.Constant][50] /* ty=Tensor[(363), int32] */, dtype="int32") /* ty=Tensor[(363), int32] */;
  %677 = cast(meta[relay.Constant][50] /* ty=Tensor[(363), int32] */, dtype="float64") /* ty=Tensor[(363), float64] */;
  %678 = reshape(%676, newshape=[363]) /* ty=Tensor[(363), int32] */;
  %679 = reshape(%677, newshape=[363]) /* ty=Tensor[(363), float64] */;
  %680 = @func_7163(%678, %679) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(363), int8], Tensor[(363), int16], Tensor[(363), int32], Tensor[(363), float64]) */;
  %681 = %675.0;
  %682 = %680.2;
  (%681, %682, meta[relay.Constant][50] /* ty=Tensor[(363), int32] */)
}

def @func_6616() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) {
  %683 = @func_3339() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(144), float64]) */;
  %684 = @func_6181() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */;
  %685 = %683.0;
  %686 = %684.1;
  (%685, %686)
}

def @func_315(%var_259: Tensor[(15, 9, 9), float64], %var_282: Tensor[(72, 2), float64]) -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(72, 2), float64], Tensor[(12, 6, 2), float32]) {
  %687 = cast(%var_259, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %688 = exp(%687) /* ty=Tensor[(15, 9, 9), float64] */;
  %689 = cast(%var_259, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %690 = shape_of(%688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%688, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %693 = cast(%var_259, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
  %694 = cast(%var_282, dtype="float64") /* ty=Tensor[(72, 2), float64] */;
  %695 = reshape(%694, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), float64] */;
  %696 = @func_205(%695) /* ty=Tensor[(12, 6, 2), float64] */;
  %697 = cast(%696, dtype="float32") /* ty=Tensor[(12, 6, 2), float32] */;
  %698 = divide(%691, %692) /* ty=Tensor[(15, 9, 9), float64] */;
  %699 = tan(%693) /* ty=Tensor[(15, 9, 9), float32] */;
  %700 = erf(%697) /* ty=Tensor[(12, 6, 2), float32] */;
  (%698, %699, %var_282, %700)
}

def @func_2833() -> Tensor[(4, 5, 16), float32] {
  %701 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %702 = %701.0;
  %703 = cast(%702, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
  %704 = erf(%703) /* ty=Tensor[(4, 5, 16), float32] */;
  %705 = cast(meta[relay.Constant][51] /* ty=Tensor[(4, 5, 16), float32] */, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
  %706 = shape_of(%704, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(%704, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%707, %708) /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_3152(%var_3130: Tensor[(4, 5, 16), float32]) -> Tensor[(4, 5, 16), uint32] {
  %709 = @func_2833() /* ty=Tensor[(4, 5, 16), float32] */;
  %710 = cast(%var_3130, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
  %711 = shape_of(%709, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%709, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %714 = maximum(%712, %713) /* ty=Tensor[(4, 5, 16), float32] */;
  %715 = cast(%714, dtype="uint32") /* ty=Tensor[(4, 5, 16), uint32] */;
  %716 = shape_of(%709, dtype="int32") /* ty=Tensor[(3), int32] */;
  %717 = cast(%709, dtype="uint32") /* ty=Tensor[(4, 5, 16), uint32] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%717, %718) /* ty=Tensor[(4, 5, 16), uint32] */
}

def @func_10385(%var_10369: Tensor[(7, 14, 15), float32]) -> (Tensor[(7, 14, 15), float32],) {
  %719 = cast(%var_10369, dtype="float32") /* ty=Tensor[(7, 14, 15), float32] */;
  %720 = log2(%719) /* ty=Tensor[(7, 14, 15), float32] */;
  (%720,)
}

def @func_7211() -> (Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32]) {
  %721 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %722 = %721.0;
  %723 = @func_6579() /* ty=Tensor[(4, 5, 16), float32] */;
  (%722, %723)
}

def @func_10735() -> (Tensor[(4, 5, 16), float32],) {
  %724 = @func_7877() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %725 = %724.0;
  (%725,)
}

def @func_529(%var_512: Tensor[(7, 15, 9), int8]) -> Tensor[(7, 15, 9), int8] {
  %726 = cast(meta[relay.Constant][52] /* ty=Tensor[(7, 15, 9), int8] */, dtype="int8") /* ty=Tensor[(7, 15, 9), int8] */;
  %727 = shape_of(%var_512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %728 = cast(%var_512, dtype="int8") /* ty=Tensor[(7, 15, 9), int8] */;
  %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_and(%728, %729) /* ty=Tensor[(7, 15, 9), int8] */
}

def @func_5448() -> (Tensor[(4, 5, 16), float32],) {
  %730 = @func_3447() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %731 = %730.0;
  (%731,)
}

def @func_2066(%var_2052: Tensor[(11, 11, 3), int32], %var_2053: Tensor[(11, 11, 3), int32]) -> (Tensor[(11, 11, 3), float64],) {
  %732 = cast(%var_2053, dtype="bool") /* ty=Tensor[(11, 11, 3), bool] */;
  %733 = shape_of(%var_2052, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%var_2052, dtype="bool") /* ty=Tensor[(11, 11, 3), bool] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %736 = greater(%734, %735) /* ty=Tensor[(11, 11, 3), bool] */;
  %737 = cast(%736, dtype="float64") /* ty=Tensor[(11, 11, 3), float64] */;
  %738 = log(%737) /* ty=Tensor[(11, 11, 3), float64] */;
  (%738,)
}

def @func_6083() -> (Tensor[(4, 5, 16), float32],) {
  %739 = @func_2833() /* ty=Tensor[(4, 5, 16), float32] */;
  (%739,)
}

def @func_4265() -> Tensor[(4, 5, 16), float32] {
  @func_3414() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_4732(%var_4720: Tensor[(924), uint16]) -> (Tensor[(4, 5, 16), float64], Tensor[(11, 12, 7), uint16], Tensor[(924), uint16], Tensor[(12, 6, 2), float64]) {
  %740 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %741 = cast(%var_4720, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %742 = cast(%var_4720, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %743 = reshape(%741, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), uint16] */;
  %744 = reshape(%742, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), uint16] */;
  %745 = @func_3339() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(144), float64]) */;
  %746 = %740.0;
  %747 = @func_498(%743, %744) /* ty=Tensor[(11, 12, 7), uint16] */;
  %748 = %745.1;
  (%746, %747, %var_4720, %748)
}

def @func_9077() -> (Tensor[(14, 10, 2), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %749 = cast(meta[relay.Constant][53] /* ty=Tensor[(14, 10, 2), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 2), float32] */;
  %750 = @func_7877() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %751 = sinh(%749) /* ty=Tensor[(14, 10, 2), float32] */;
  %752 = @func_6724() /* ty=Tensor[(4, 5, 16), float32] */;
  %753 = %750.0;
  (%751, %752, %753)
}

def @func_1382(%var_1363: Tensor[(14, 6, 10), bool]) -> (Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float32]) {
  %754 = cast(%var_1363, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
  %755 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(14, 6, 10), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %756 = cast(meta[relay.Constant][54] /* ty=Tensor[(14, 6, 10), bool] */, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %758 = cast(%var_1363, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
  %759 = logical_and(%756, %757) /* ty=Tensor[(14, 6, 10), bool] */;
  %760 = atan(%758) /* ty=Tensor[(14, 6, 10), float32] */;
  (%759, %760)
}

def @func_8675(%var_8644: int8, %var_8645: Tensor[(21), int8], %var_8654: Tensor[(1, 140), float32], %var_8657: Tensor[(81, 15), float64], %var_8658: Tensor[(144), float64], %var_8662: Tensor[(27, 9), float32]) -> (Tensor[(4, 5, 16), float32], Tensor[(1, 3, 7), int8], int8, Tensor[(21), int8], Tensor[(4, 5, 7), float64], Tensor[(1, 140), float32], Tensor[(70, 1), int32], Tensor[(700, 1), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(27, 9), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %761 = @func_7335() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(363), int8], Tensor[(363), int32]) */;
  %762 = cast(%var_8644, dtype="int8") /* ty=int8 */;
  %763 = cast(%var_8645, dtype="int8") /* ty=Tensor[(21), int8] */;
  %764 = reshape(%762, newshape=[]) /* ty=int8 */;
  %765 = reshape(%763, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), int8] */;
  %766 = cast(%var_8654, dtype="float32") /* ty=Tensor[(1, 140), float32] */;
  %767 = cast(meta[relay.Constant][55] /* ty=Tensor[(70, 1), int32] */, dtype="int32") /* ty=Tensor[(70, 1), int32] */;
  %768 = cast(meta[relay.Constant][56] /* ty=Tensor[(700, 1), int32] */, dtype="int32") /* ty=Tensor[(700, 1), int32] */;
  %769 = cast(%var_8657, dtype="float64") /* ty=Tensor[(81, 15), float64] */;
  %770 = cast(%var_8658, dtype="float64") /* ty=Tensor[(144), float64] */;
  %771 = cast(meta[relay.Constant][57] /* ty=Tensor[(27, 1), float32] */, dtype="float32") /* ty=Tensor[(27, 1), float32] */;
  %772 = reshape(%766, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
  %773 = reshape(%767, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %774 = reshape(%768, newshape=[5, 140]) /* ty=Tensor[(5, 140), int32] */;
  %775 = reshape(%769, newshape=[81, 15]) /* ty=Tensor[(81, 15), float64] */;
  %776 = reshape(%770, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %777 = reshape(%771, newshape=[27]) /* ty=Tensor[(27), float32] */;
  %778 = @func_1999(%772, %773, %774, %775, %776, %777) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(70), int32], Tensor[(5, 140), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(14, 6, 10), float32], Tensor[(27), float32], int8, Tensor[(924), uint16], Tensor[(194040, 1), uint16], Tensor[(4, 5, 7), float64]) */;
  %779 = cast(meta[relay.Constant][57] /* ty=Tensor[(27, 1), float32] */, dtype="float64") /* ty=Tensor[(27, 1), float64] */;
  %780 = cast(%var_8662, dtype="float64") /* ty=Tensor[(27, 9), float64] */;
  %781 = @func_8074() /* ty=(Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %782 = @func_7989() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %783 = %761.0;
  %784 = @func_5910(%764, %765) /* ty=Tensor[(1, 3, 7), int8] */;
  %785 = %778.10;
  %786 = mod(%779, %780) /* ty=Tensor[(27, 9), float64] */;
  %787 = %781.2;
  %788 = %782.0;
  (%783, %784, %var_8644, %var_8645, %785, %var_8654, meta[relay.Constant][55] /* ty=Tensor[(70, 1), int32] */, meta[relay.Constant][56] /* ty=Tensor[(700, 1), int32] */, %var_8657, %var_8658, %786, %787, %788)
}

def @func_4204(%var_4155: Tensor[(140), float32], %var_4195: Tensor[(54, 2), float64], %var_4196: Tensor[(196), int8]) -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 7), float64], Tensor[(140), float32], Tensor[(70), int32], Tensor[(700), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(27), float32], Tensor[(4, 5, 16), float32], Tensor[(196), int8], Tensor[(54, 2), float64], Tensor[(196), int8]) {
  %789 = cast(%var_4155, dtype="float32") /* ty=Tensor[(140), float32] */;
  %790 = cast(meta[relay.Constant][58] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
  %791 = cast(meta[relay.Constant][59] /* ty=Tensor[(700), int32] */, dtype="int32") /* ty=Tensor[(700), int32] */;
  %792 = cast(meta[relay.Constant][60] /* ty=Tensor[(1215), float64] */, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %793 = cast(meta[relay.Constant][61] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %794 = cast(meta[relay.Constant][62] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
  %795 = reshape(%789, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
  %796 = reshape(%790, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %797 = reshape(%791, newshape=[5, 140]) /* ty=Tensor[(5, 140), int32] */;
  %798 = reshape(%792, newshape=[81, 15]) /* ty=Tensor[(81, 15), float64] */;
  %799 = reshape(%793, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %800 = reshape(%794, newshape=[27]) /* ty=Tensor[(27), float32] */;
  %801 = @func_1999(%795, %796, %797, %798, %799, %800) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(70), int32], Tensor[(5, 140), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(14, 6, 10), float32], Tensor[(27), float32], int8, Tensor[(924), uint16], Tensor[(194040, 1), uint16], Tensor[(4, 5, 7), float64]) */;
  %802 = @func_3808() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %803 = cast(%var_4195, dtype="float64") /* ty=Tensor[(54, 2), float64] */;
  %804 = cast(%var_4196, dtype="int8") /* ty=Tensor[(196), int8] */;
  %805 = reshape(%803, newshape=[3, 4, 9]) /* ty=Tensor[(3, 4, 9), float64] */;
  %806 = reshape(%804, newshape=[196]) /* ty=Tensor[(196), int8] */;
  %807 = @func_4083(%805, %806) /* ty=(Tensor[(3, 4, 9), float64], Tensor[(144), float64], int8, Tensor[(196), int8], Tensor[(144), float64]) */;
  %808 = @func_3168() /* ty=Tensor[(4, 5, 16), float32] */;
  %809 = @func_3414() /* ty=Tensor[(4, 5, 16), float32] */;
  %810 = %801.10;
  %811 = %802.0;
  %812 = %807.3;
  (%808, %809, %810, %var_4155, meta[relay.Constant][58] /* ty=Tensor[(70), int32] */, meta[relay.Constant][59] /* ty=Tensor[(700), int32] */, meta[relay.Constant][60] /* ty=Tensor[(1215), float64] */, meta[relay.Constant][61] /* ty=Tensor[(144), float64] */, meta[relay.Constant][62] /* ty=Tensor[(27), float32] */, %811, %812, %var_4195, %var_4196)
}

def @func_5966() -> (Tensor[(4, 5, 16), float32],) {
  %813 = @func_5008() /* ty=(Tensor[(11, 11, 3), float64], Tensor[(4, 5, 16), float32]) */;
  %814 = %813.1;
  (%814,)
}

def @func_5480(%var_5468: Tensor[(3, 7, 7), uint64]) -> (Tensor[(3, 7, 7), uint64], Tensor[(4, 5, 16), float32]) {
  %815 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 7, 7), uint64] */, dtype="uint64") /* ty=Tensor[(3, 7, 7), uint64] */;
  %816 = shape_of(%var_5468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %817 = cast(%var_5468, dtype="uint64") /* ty=Tensor[(3, 7, 7), uint64] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %819 = add(%817, %818) /* ty=Tensor[(3, 7, 7), uint64] */;
  %820 = @func_3414() /* ty=Tensor[(4, 5, 16), float32] */;
  (%819, %820)
}

def @func_7021(%var_6969: Tensor[(70, 1), int32], %var_6971: Tensor[(3, 405), float64], %var_6972: Tensor[(144), float64], %var_7016: Tensor[(15, 9, 9), float64]) -> (Tensor[(4, 5, 16), float32], Tensor[(70, 1), int32], Tensor[(700), int32], Tensor[(3, 405), float64], Tensor[(144), float64], Tensor[(4, 5, 16), float64], Tensor[(363), int32], Tensor[(4, 5, 16), float32], Tensor[(11, 12, 7), uint16], Tensor[(924), uint16], Tensor[(15, 9, 9), int64]) {
  %821 = @func_6305() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %822 = @func_5828() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */;
  %823 = @func_4937() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */;
  %824 = cast(meta[relay.Constant][65] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %825 = cast(meta[relay.Constant][65] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %826 = reshape(%824, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), uint16] */;
  %827 = reshape(%825, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), uint16] */;
  %828 = cast(%var_6969, dtype="int32") /* ty=Tensor[(70, 1), int32] */;
  %829 = cast(meta[relay.Constant][64] /* ty=Tensor[(700), int32] */, dtype="int32") /* ty=Tensor[(700), int32] */;
  %830 = cast(%var_6971, dtype="float64") /* ty=Tensor[(3, 405), float64] */;
  %831 = cast(%var_6972, dtype="float64") /* ty=Tensor[(144), float64] */;
  %832 = reshape(%828, newshape=[1, 5, 14]) /* ty=Tensor[(1, 5, 14), int32] */;
  %833 = reshape(%829, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int32] */;
  %834 = reshape(%830, newshape=[1215]) /* ty=Tensor[(1215), float64] */;
  %835 = reshape(%831, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %836 = @func_1168(%832, %833, %834, %835) /* ty=(Tensor[(10, 5, 14), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(15, 9, 9), float64]) */;
  %837 = %836.3;
  %838 = cast(%var_7016, dtype="int64") /* ty=Tensor[(15, 9, 9), int64] */;
  %839 = shape_of(%837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %840 = cast(%837, dtype="int64") /* ty=Tensor[(15, 9, 9), int64] */;
  %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %842 = %821.0;
  %843 = %822.1;
  %844 = %823.2;
  %845 = @func_5060() /* ty=Tensor[(4, 5, 16), float32] */;
  %846 = @func_498(%826, %827) /* ty=Tensor[(11, 12, 7), uint16] */;
  %847 = bitwise_or(%840, %841) /* ty=Tensor[(15, 9, 9), int64] */;
  (%842, %var_6969, meta[relay.Constant][64] /* ty=Tensor[(700), int32] */, %var_6971, %var_6972, %843, %844, %845, %846, meta[relay.Constant][65] /* ty=Tensor[(924), uint16] */, %847)
}

def @func_8871(%var_8847: Tensor[(16, 3, 6), bool], %var_8848: Tensor[(16, 3, 6), bool], %var_8866: Tensor[(1, 1440), float64]) -> (Tensor[(16, 3, 6), bool], Tensor[(16, 3, 6), float64], Tensor[(12, 12, 10), float64], Tensor[(1, 1440), float64], Tensor[(4, 5, 16), float64]) {
  %848 = cast(%var_8848, dtype="bool") /* ty=Tensor[(16, 3, 6), bool] */;
  %849 = shape_of(%var_8847, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(%var_8847, dtype="bool") /* ty=Tensor[(16, 3, 6), bool] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %852 = cast(%var_8848, dtype="float64") /* ty=Tensor[(16, 3, 6), float64] */;
  %853 = shape_of(%var_8847, dtype="int32") /* ty=Tensor[(3), int32] */;
  %854 = cast(%var_8847, dtype="float64") /* ty=Tensor[(16, 3, 6), float64] */;
  %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %856 = cast(%var_8866, dtype="float64") /* ty=Tensor[(1, 1440), float64] */;
  %857 = cast(%var_8866, dtype="float64") /* ty=Tensor[(1, 1440), float64] */;
  %858 = reshape(%856, newshape=[12, 12, 10]) /* ty=Tensor[(12, 12, 10), float64] */;
  %859 = reshape(%857, newshape=[12, 12, 10]) /* ty=Tensor[(12, 12, 10), float64] */;
  %860 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %861 = logical_or(%850, %851) /* ty=Tensor[(16, 3, 6), bool] */;
  %862 = divide(%854, %855) /* ty=Tensor[(16, 3, 6), float64] */;
  %863 = @func_6869(%858, %859) /* ty=Tensor[(12, 12, 10), float64] */;
  %864 = %860.0;
  (%861, %862, %863, %var_8866, %864)
}

def @func_9488() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %865 = @func_7877() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %866 = @func_5540() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %867 = %865.0;
  %868 = %866.0;
  (%867, %868)
}

def @func_9653(%var_9521: Tensor[(27), float32], %var_9582: Tensor[(196), int8]) -> (Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(27), float32], Tensor[(194040), uint16], Tensor[(11, 13, 9), uint32], Tensor[(4, 5, 16), float32], Tensor[(144), float64], Tensor[(1001), uint16], Tensor[(27), float32], Tensor[(196), int8], Tensor[(1215), float64], Tensor[(33, 11), int32], Tensor[(81, 15), float64], Tensor[(11, 13, 9), uint16], Tensor[(143, 9), int64], Tensor[(143, 9), float64], Tensor[(143, 9), float64]) {
  %869 = @func_5358() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(4, 5, 16), float32]) */;
  %870 = cast(meta[relay.Constant][66] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %871 = reshape(%870, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %872 = @func_4732(%871) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(11, 12, 7), uint16], Tensor[(924), uint16], Tensor[(12, 6, 2), float64]) */;
  %873 = cast(%var_9521, dtype="float32") /* ty=Tensor[(27), float32] */;
  %874 = cast(meta[relay.Constant][66] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %875 = cast(meta[relay.Constant][67] /* ty=Tensor[(194040), uint16] */, dtype="uint16") /* ty=Tensor[(194040), uint16] */;
  %876 = reshape(%873, newshape=[9, 3]) /* ty=Tensor[(9, 3), float32] */;
  %877 = reshape(%874, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %878 = reshape(%875, newshape=[194040]) /* ty=Tensor[(194040), uint16] */;
  %879 = @func_2756(%876, %877, %878) /* ty=(Tensor[(4, 5, 16), float64], int8, Tensor[(9, 3), float32], Tensor[(924), uint16], Tensor[(194040), uint16]) */;
  %880 = cast(meta[relay.Constant][68] /* ty=Tensor[(143, 9), uint16] */, dtype="uint16") /* ty=Tensor[(143, 9), uint16] */;
  %881 = reshape(%880, newshape=[11, 13, 9]) /* ty=Tensor[(11, 13, 9), uint16] */;
  %882 = @func_7245() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %883 = cast(meta[relay.Constant][69] /* ty=Tensor[(1001), uint16] */, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %884 = reshape(%883, newshape=[1001]) /* ty=Tensor[(1001), uint16] */;
  %885 = @func_5279(%884) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(7, 13, 11), uint16], Tensor[(70), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(363), int32], Tensor[(1001), float64]) */;
  %886 = cast(%var_9521, dtype="float32") /* ty=Tensor[(27), float32] */;
  %887 = cast(%var_9582, dtype="int8") /* ty=Tensor[(196), int8] */;
  %888 = cast(meta[relay.Constant][70] /* ty=Tensor[(1215), float64] */, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %889 = cast(meta[relay.Constant][71] /* ty=Tensor[(33, 11), int32] */, dtype="int32") /* ty=Tensor[(33, 11), int32] */;
  %890 = reshape(%886, newshape=[27]) /* ty=Tensor[(27), float32] */;
  %891 = reshape(%887, newshape=[196]) /* ty=Tensor[(196), int8] */;
  %892 = reshape(%888, newshape=[1215]) /* ty=Tensor[(1215), float64] */;
  %893 = reshape(%889, newshape=[363]) /* ty=Tensor[(363), int32] */;
  %894 = @func_8289(%890, %891, %892, %893) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(27), float32], Tensor[(924), uint16], Tensor[(4, 5, 16), float32], Tensor[(196), int8], Tensor[(1, 3, 7), int8], Tensor[(21), int8], Tensor[(194040), bool], Tensor[(194040), bool], Tensor[(363), int32], Tensor[(1001), uint16], Tensor[(70), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(363), int32]) */;
  %895 = cast(meta[relay.Constant][69] /* ty=Tensor[(1001), uint16] */, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %896 = reshape(%895, newshape=[1001]) /* ty=Tensor[(1001), uint16] */;
  %897 = @func_5279(%896) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(7, 13, 11), uint16], Tensor[(70), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(363), int32], Tensor[(1001), float64]) */;
  %898 = cast(meta[relay.Constant][68] /* ty=Tensor[(143, 9), uint16] */, dtype="float32") /* ty=Tensor[(143, 9), float32] */;
  %899 = log10(%898) /* ty=Tensor[(143, 9), float32] */;
  %900 = cast(meta[relay.Constant][68] /* ty=Tensor[(143, 9), uint16] */, dtype="int64") /* ty=Tensor[(143, 9), int64] */;
  %901 = shape_of(%899, dtype="int32") /* ty=Tensor[(2), int32] */;
  %902 = cast(%899, dtype="int64") /* ty=Tensor[(143, 9), int64] */;
  %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %904 = cast(%899, dtype="float64") /* ty=Tensor[(143, 9), float64] */;
  %905 = cast(%899, dtype="float64") /* ty=Tensor[(143, 9), float64] */;
  %906 = %869.0;
  %907 = %872.3;
  %908 = %879.4;
  %909 = @func_4245(%881) /* ty=Tensor[(11, 13, 9), uint32] */;
  %910 = %882.0;
  %911 = %885.4;
  %912 = %894.1;
  %913 = %897.3;
  %914 = @func_6553() /* ty=Tensor[(11, 13, 9), uint16] */;
  %915 = add(%902, %903) /* ty=Tensor[(143, 9), int64] */;
  %916 = log(%904) /* ty=Tensor[(143, 9), float64] */;
  %917 = sinh(%905) /* ty=Tensor[(143, 9), float64] */;
  (%906, %907, meta[relay.Constant][66] /* ty=Tensor[(924), uint16] */, %908, %var_9521, meta[relay.Constant][67] /* ty=Tensor[(194040), uint16] */, %909, %910, %911, meta[relay.Constant][69] /* ty=Tensor[(1001), uint16] */, %912, %var_9582, meta[relay.Constant][70] /* ty=Tensor[(1215), float64] */, meta[relay.Constant][71] /* ty=Tensor[(33, 11), int32] */, %913, %914, %915, %916, %917)
}

def @func_10812(%var_10759: Tensor[(16, 8, 6), uint8]) -> (Tensor[(16, 8, 6), bool], Tensor[(4, 5, 16), float32]) {
  %918 = cast(%var_10759, dtype="bool") /* ty=Tensor[(16, 8, 6), bool] */;
  %919 = shape_of(meta[relay.Constant][72] /* ty=Tensor[(16, 8, 6), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %920 = cast(meta[relay.Constant][72] /* ty=Tensor[(16, 8, 6), uint8] */, dtype="bool") /* ty=Tensor[(16, 8, 6), bool] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %922 = @func_5448() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %923 = less(%920, %921) /* ty=Tensor[(16, 8, 6), bool] */;
  %924 = %922.0;
  (%923, %924)
}

def @func_4083(%var_4065: Tensor[(3, 4, 9), float64], %var_4080: Tensor[(196), int8]) -> (Tensor[(3, 4, 9), float64], Tensor[(144), float64], int8, Tensor[(196), int8], Tensor[(144), float64]) {
  %925 = cast(%var_4065, dtype="float64") /* ty=Tensor[(3, 4, 9), float64] */;
  %926 = exp(%925) /* ty=Tensor[(3, 4, 9), float64] */;
  %927 = cast(%var_4065, dtype="float64") /* ty=Tensor[(3, 4, 9), float64] */;
  %928 = shape_of(%926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %929 = cast(%926, dtype="float64") /* ty=Tensor[(3, 4, 9), float64] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %931 = cast(meta[relay.Constant][73] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %932 = cast(%var_4080, dtype="int8") /* ty=Tensor[(196), int8] */;
  %933 = cast(meta[relay.Constant][74] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %934 = reshape(%931, newshape=[]) /* ty=int8 */;
  %935 = reshape(%932, newshape=[1, 14, 14]) /* ty=Tensor[(1, 14, 14), int8] */;
  %936 = reshape(%933, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %937 = @func_3634(%934, %935, %936) /* ty=(Tensor[(?, 14, 14), uint8], Tensor[(144), float64], Tensor[(70), int32], Tensor[(700), int32], Tensor[(1215), float64], Tensor[(144), float64]) */;
  %938 = floor_divide(%929, %930) /* ty=Tensor[(3, 4, 9), float64] */;
  %939 = %937.5;
  (%938, %939, meta[relay.Constant][73] /* ty=int8 */, %var_4080, meta[relay.Constant][74] /* ty=Tensor[(144), float64] */)
}

def @func_3238(%var_3214: Tensor[(700), int32], %var_3215: Tensor[(3, 405), float64], %var_3216: Tensor[(144), float64], %var_3217: Tensor[(27, 1), float32], %var_3229: Tensor[(1287), uint8]) -> (Tensor[(4, 5, 16), float32], Tensor[(140), float32], Tensor[(7, 10), int32], Tensor[(700), int32], Tensor[(144), float64], Tensor[(27, 1), float32], Tensor[(3, 405), bool], Tensor[(11, 13, 9), uint8], Tensor[(1287), uint8], Tensor[(15, 11, 14), bool], int32) {
  %940 = @func_3119() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %941 = cast(meta[relay.Constant][75] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %942 = cast(meta[relay.Constant][76] /* ty=Tensor[(7, 10), int32] */, dtype="int32") /* ty=Tensor[(7, 10), int32] */;
  %943 = cast(%var_3214, dtype="int32") /* ty=Tensor[(700), int32] */;
  %944 = cast(%var_3215, dtype="float64") /* ty=Tensor[(3, 405), float64] */;
  %945 = cast(%var_3216, dtype="float64") /* ty=Tensor[(144), float64] */;
  %946 = cast(%var_3217, dtype="float32") /* ty=Tensor[(27, 1), float32] */;
  %947 = reshape(%941, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
  %948 = reshape(%942, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %949 = reshape(%943, newshape=[5, 140]) /* ty=Tensor[(5, 140), int32] */;
  %950 = reshape(%944, newshape=[81, 15]) /* ty=Tensor[(81, 15), float64] */;
  %951 = reshape(%945, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %952 = reshape(%946, newshape=[27]) /* ty=Tensor[(27), float32] */;
  %953 = @func_1999(%947, %948, %949, %950, %951, %952) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(70), int32], Tensor[(5, 140), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(14, 6, 10), float32], Tensor[(27), float32], int8, Tensor[(924), uint16], Tensor[(194040, 1), uint16], Tensor[(4, 5, 7), float64]) */;
  %954 = %953.0;
  %955 = cast(%954, dtype="bool") /* ty=Tensor[(15, 9, 9), bool] */;
  %956 = shape_of(%var_3215, dtype="int32") /* ty=Tensor[(2), int32] */;
  %957 = cast(%var_3215, dtype="bool") /* ty=Tensor[(3, 405), bool] */;
  %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %959 = cast(%var_3229, dtype="uint8") /* ty=Tensor[(1287), uint8] */;
  %960 = reshape(%959, newshape=[11, 13, 9]) /* ty=Tensor[(11, 13, 9), uint8] */;
  %961 = cast(-1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %962 = reshape(%961, newshape=[]) /* ty=int32 */;
  %963 = @func_938(%962) /* ty=(Tensor[(15, 11, 14), bool],) */;
  %964 = %940.0;
  %965 = equal(%957, %958) /* ty=Tensor[(3, 405), bool] */;
  %966 = @func_1655(%960) /* ty=Tensor[(11, 13, 9), uint8] */;
  %967 = %963.0;
  (%964, meta[relay.Constant][75] /* ty=Tensor[(140), float32] */, meta[relay.Constant][76] /* ty=Tensor[(7, 10), int32] */, %var_3214, %var_3216, %var_3217, %965, %966, %var_3229, %967, -1 /* ty=int32 */)
}

def @func_1713(%var_1685: Tensor[(9, 1, 3), float32], %var_1692: int8, %var_1694: Tensor[(924), uint16], %var_1696: Tensor[(14, 924, 15), uint16]) -> (Tensor[(9, 1, 3), float32], int8, Tensor[(35, 6), int8], Tensor[(924), uint16], Tensor[(14, 924, 15), int64], Tensor[(14, 6, 10), float32], Tensor[(12, 70), bool]) {
  %968 = cast(%var_1685, dtype="float32") /* ty=Tensor[(9, 1, 3), float32] */;
  %969 = cast(%var_1692, dtype="int8") /* ty=int8 */;
  %970 = cast(meta[relay.Constant][77] /* ty=Tensor[(35, 6), int8] */, dtype="int8") /* ty=Tensor[(35, 6), int8] */;
  %971 = cast(%var_1694, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %972 = reshape(%969, newshape=[]) /* ty=int8 */;
  %973 = reshape(%970, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), int8] */;
  %974 = reshape(%971, newshape=[924, 1]) /* ty=Tensor[(924, 1), uint16] */;
  %975 = @func_626(%972, %973, %974) /* ty=(Tensor[(14, 1, 15), int8], Tensor[(11, 12, 7), uint16], Tensor[(14, 924, 15), uint16]) */;
  %976 = %975.2;
  %977 = cast(%var_1696, dtype="int64") /* ty=Tensor[(14, 924, 15), int64] */;
  %978 = shape_of(%976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %979 = cast(%976, dtype="int64") /* ty=Tensor[(14, 924, 15), int64] */;
  %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %981 = cast(meta[relay.Constant][78] /* ty=Tensor[(12, 70), bool] */, dtype="bool") /* ty=Tensor[(12, 70), bool] */;
  %982 = reshape(%981, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), bool] */;
  %983 = @func_1382(%982) /* ty=(Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float32]) */;
  %984 = log10(%968) /* ty=Tensor[(9, 1, 3), float32] */;
  %985 = subtract(%979, %980) /* ty=Tensor[(14, 924, 15), int64] */;
  %986 = %983.1;
  (%984, %var_1692, meta[relay.Constant][77] /* ty=Tensor[(35, 6), int8] */, %var_1694, %985, %986, meta[relay.Constant][78] /* ty=Tensor[(12, 70), bool] */)
}

def @func_6207(%var_6200: Tensor[(16, 10, 9), uint16]) -> (Tensor[(16, 10, 9), bool], Tensor[(7, 13, 11), uint16], Tensor[(1001), uint16]) {
  %987 = cast(%var_6200, dtype="bool") /* ty=Tensor[(16, 10, 9), bool] */;
  %988 = shape_of(meta[relay.Constant][79] /* ty=Tensor[(16, 10, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %989 = cast(meta[relay.Constant][79] /* ty=Tensor[(16, 10, 9), uint16] */, dtype="bool") /* ty=Tensor[(16, 10, 9), bool] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %991 = cast(meta[relay.Constant][80] /* ty=Tensor[(1001), uint16] */, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %992 = reshape(%991, newshape=[1001]) /* ty=Tensor[(1001), uint16] */;
  %993 = @func_5279(%992) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(7, 13, 11), uint16], Tensor[(70), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(363), int32], Tensor[(1001), float64]) */;
  %994 = less_equal(%989, %990) /* ty=Tensor[(16, 10, 9), bool] */;
  %995 = %993.1;
  (%994, %995, meta[relay.Constant][80] /* ty=Tensor[(1001), uint16] */)
}

def @func_8935(%var_8928: Tensor[(27, 1), float32], %var_8930: Tensor[(194040, 1), uint16]) -> (Tensor[(4, 5, 16), float32], Tensor[(9, 3), float32], Tensor[(27, 1), float32], Tensor[(924), uint16], Tensor[(194040, 1), uint16]) {
  %996 = @func_7989() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %997 = cast(%var_8928, dtype="float32") /* ty=Tensor[(27, 1), float32] */;
  %998 = cast(meta[relay.Constant][81] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %999 = cast(%var_8930, dtype="uint16") /* ty=Tensor[(194040, 1), uint16] */;
  %1000 = reshape(%997, newshape=[9, 3]) /* ty=Tensor[(9, 3), float32] */;
  %1001 = reshape(%998, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %1002 = reshape(%999, newshape=[194040]) /* ty=Tensor[(194040), uint16] */;
  %1003 = @func_2756(%1000, %1001, %1002) /* ty=(Tensor[(4, 5, 16), float64], int8, Tensor[(9, 3), float32], Tensor[(924), uint16], Tensor[(194040), uint16]) */;
  %1004 = %996.0;
  %1005 = %1003.2;
  (%1004, %1005, %var_8928, meta[relay.Constant][81] /* ty=Tensor[(924), uint16] */, %var_8930)
}

def @func_4619(%var_4617: Tensor[(1287), uint8]) -> (Tensor[(144), float64], Tensor[(11, 13, 9), uint8], Tensor[(1287), uint8]) {
  %1006 = @func_3339() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(144), float64]) */;
  %1007 = cast(%var_4617, dtype="uint8") /* ty=Tensor[(1287), uint8] */;
  %1008 = reshape(%1007, newshape=[11, 13, 9]) /* ty=Tensor[(11, 13, 9), uint8] */;
  %1009 = %1006.2;
  %1010 = @func_1655(%1008) /* ty=Tensor[(11, 13, 9), uint8] */;
  (%1009, %1010, %var_4617)
}

def @func_7891(%var_7883: Tensor[(10, 13, 4), float32]) -> Tensor[(10, 13, 4), float32] {
  %1011 = cast(%var_7883, dtype="float32") /* ty=Tensor[(10, 13, 4), float32] */;
  erf(%1011) /* ty=Tensor[(10, 13, 4), float32] */
}

def @func_3190() -> (Tensor[(4, 5, 16), float32],) {
  %1012 = @func_3168() /* ty=Tensor[(4, 5, 16), float32] */;
  (%1012,)
}

def @func_5008() -> (Tensor[(11, 11, 3), float64], Tensor[(4, 5, 16), float32]) {
  %1013 = @func_4937() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */;
  %1014 = %1013.1;
  %1015 = @func_4412() /* ty=Tensor[(4, 5, 16), float32] */;
  (%1014, %1015)
}

def @func_6305() -> (Tensor[(4, 5, 16), float32],) {
  %1016 = @func_5540() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %1017 = %1016.0;
  (%1017,)
}

def @func_9262() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %1018 = @func_6470() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %1019 = @func_3168() /* ty=Tensor[(4, 5, 16), float32] */;
  %1020 = %1018.0;
  (%1019, %1020)
}

def @func_8197() -> (Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32], Tensor[(1, 147), uint64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %1021 = @func_6181() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */;
  %1022 = cast(meta[relay.Constant][82] /* ty=Tensor[(1, 147), uint64] */, dtype="uint64") /* ty=Tensor[(1, 147), uint64] */;
  %1023 = reshape(%1022, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), uint64] */;
  %1024 = @func_5480(%1023) /* ty=(Tensor[(3, 7, 7), uint64], Tensor[(4, 5, 16), float32]) */;
  %1025 = %1021.1;
  %1026 = %1024.1;
  %1027 = @func_4265() /* ty=Tensor[(4, 5, 16), float32] */;
  %1028 = @func_3414() /* ty=Tensor[(4, 5, 16), float32] */;
  (%1025, %1026, meta[relay.Constant][82] /* ty=Tensor[(1, 147), uint64] */, %1027, %1028)
}

def @func_6568() -> (Tensor[(4, 5, 16), float64],) {
  %1029 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %1030 = %1029.0;
  (%1030,)
}

def @func_8074() -> (Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %1031 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %1032 = @func_2999() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %1033 = @func_4477() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %1034 = %1031.0;
  %1035 = %1032.0;
  %1036 = %1033.0;
  (%1034, %1035, %1036)
}

def @func_10035() -> (Tensor[(4, 5, 16), float32], Tensor[(11, 13, 9), float32]) {
  %1037 = @func_2999() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %1038 = @func_8367() /* ty=Tensor[(11, 13, 9), uint16] */;
  %1039 = cast(%1038, dtype="float64") /* ty=Tensor[(11, 13, 9), float64] */;
  %1040 = cosh(%1039) /* ty=Tensor[(11, 13, 9), float64] */;
  %1041 = cast(%1038, dtype="bool") /* ty=Tensor[(11, 13, 9), bool] */;
  %1042 = shape_of(%1040, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1043 = cast(%1040, dtype="bool") /* ty=Tensor[(11, 13, 9), bool] */;
  %1044 = dyn.reshape(%1041, %1042, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1045 = not_equal(%1043, %1044) /* ty=Tensor[(11, 13, 9), bool] */;
  %1046 = cast(%1045, dtype="float32") /* ty=Tensor[(11, 13, 9), float32] */;
  %1047 = %1037.0;
  %1048 = log2(%1046) /* ty=Tensor[(11, 13, 9), float32] */;
  (%1047, %1048)
}

def @func_6056() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %1049 = @func_5315() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %1050 = @func_5358() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(4, 5, 16), float32]) */;
  %1051 = %1049.0;
  %1052 = %1050.3;
  (%1051, %1052)
}

def @func_5910(%var_5866: int8, %var_5867: Tensor[(1, 3, 7), int8]) -> Tensor[(1, 3, 7), int8] {
  %1053 = cast(%var_5866, dtype="int8") /* ty=int8 */;
  %1054 = cast(%var_5867, dtype="int8") /* ty=Tensor[(1, 3, 7), int8] */;
  left_shift(%1053, %1054) /* ty=Tensor[(1, 3, 7), int8] */
}

def @func_3634(%var_3612: int8, %var_3613: Tensor[(1, 14, 14), int8], %var_3629: Tensor[(144), float64]) -> (Tensor[(?, 14, 14), uint8], Tensor[(144), float64], Tensor[(70), int32], Tensor[(700), int32], Tensor[(1215), float64], Tensor[(144), float64]) {
  %1055 = cast(%var_3612, dtype="int8") /* ty=int8 */;
  %1056 = cast(%var_3613, dtype="int8") /* ty=Tensor[(1, 14, 14), int8] */;
  %1057 = right_shift(%1055, %1056) /* ty=Tensor[(1, 14, 14), int8] */;
  %1058 = cast(%1057, dtype="uint8") /* ty=Tensor[(1, 14, 14), uint8] */;
  %1059 = shape_of(%var_3613, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1060 = cast(%var_3613, dtype="uint8") /* ty=Tensor[(1, 14, 14), uint8] */;
  %1061 = dyn.reshape(%1058, %1059, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1062 = cast(meta[relay.Constant][83] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
  %1063 = cast(meta[relay.Constant][84] /* ty=Tensor[(700), int32] */, dtype="int32") /* ty=Tensor[(700), int32] */;
  %1064 = cast(meta[relay.Constant][85] /* ty=Tensor[(1215), float64] */, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %1065 = cast(%var_3629, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1066 = reshape(%1062, newshape=[1, 5, 14]) /* ty=Tensor[(1, 5, 14), int32] */;
  %1067 = reshape(%1063, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int32] */;
  %1068 = reshape(%1064, newshape=[1215]) /* ty=Tensor[(1215), float64] */;
  %1069 = reshape(%1065, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %1070 = @func_1168(%1066, %1067, %1068, %1069) /* ty=(Tensor[(10, 5, 14), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(15, 9, 9), float64]) */;
  %1071 = bitwise_xor(%1060, %1061) /* ty=Tensor[(?, 14, 14), uint8] */;
  %1072 = %1070.2;
  (%1071, %1072, meta[relay.Constant][83] /* ty=Tensor[(70), int32] */, meta[relay.Constant][84] /* ty=Tensor[(700), int32] */, meta[relay.Constant][85] /* ty=Tensor[(1215), float64] */, %var_3629)
}

def @func_7877() -> (Tensor[(4, 5, 16), float32],) {
  %1073 = @func_4412() /* ty=Tensor[(4, 5, 16), float32] */;
  (%1073,)
}

def @func_7519() -> Tensor[(4, 5, 16), float32] {
  @func_5060() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_3608() -> Tensor[(4, 5, 16), float32] {
  %1074 = @func_3119() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %1074.0
}

def @func_8087() -> (Tensor[(4, 5, 16), float32],) {
  %1075 = @func_7551() /* ty=Tensor[(4, 5, 16), float32] */;
  (%1075,)
}

def @func_3447() -> (Tensor[(4, 5, 16), float32],) {
  %1076 = @func_3119() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %1077 = %1076.0;
  (%1077,)
}

def @func_1478(%var_1440: Tensor[(12, 14, 6), float64], %var_1450: Tensor[(2, 72), float64], %var_1468: int32) -> (Tensor[(12, 14, 6), float64], Tensor[(12, 6, 2), float64], Tensor[(2, 72), float64], Tensor[(15, 11, 14), bool], int32) {
  %1078 = cast(%var_1440, dtype="float64") /* ty=Tensor[(12, 14, 6), float64] */;
  %1079 = cast(%var_1450, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %1080 = reshape(%1079, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), float64] */;
  %1081 = cast(%var_1468, dtype="int32") /* ty=int32 */;
  %1082 = reshape(%1081, newshape=[]) /* ty=int32 */;
  %1083 = @func_938(%1082) /* ty=(Tensor[(15, 11, 14), bool],) */;
  %1084 = log2(%1078) /* ty=Tensor[(12, 14, 6), float64] */;
  %1085 = @func_205(%1080) /* ty=Tensor[(12, 6, 2), float64] */;
  %1086 = %1083.0;
  (%1084, %1085, %var_1450, %1086, %var_1468)
}

def @func_1999(%var_1955: Tensor[(4, 5, 7), float32], %var_1961: Tensor[(70), int32], %var_1962: Tensor[(5, 140), int32], %var_1963: Tensor[(81, 15), float64], %var_1964: Tensor[(144), float64], %var_1972: Tensor[(27), float32]) -> (Tensor[(15, 9, 9), float64], Tensor[(70), int32], Tensor[(5, 140), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(14, 6, 10), float32], Tensor[(27), float32], int8, Tensor[(924), uint16], Tensor[(194040, 1), uint16], Tensor[(4, 5, 7), float64]) {
  %1087 = cast(%var_1961, dtype="int32") /* ty=Tensor[(70), int32] */;
  %1088 = cast(%var_1962, dtype="int32") /* ty=Tensor[(5, 140), int32] */;
  %1089 = cast(%var_1963, dtype="float64") /* ty=Tensor[(81, 15), float64] */;
  %1090 = cast(%var_1964, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1091 = reshape(%1087, newshape=[1, 5, 14]) /* ty=Tensor[(1, 5, 14), int32] */;
  %1092 = reshape(%1088, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int32] */;
  %1093 = reshape(%1089, newshape=[1215]) /* ty=Tensor[(1215), float64] */;
  %1094 = reshape(%1090, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %1095 = @func_1168(%1091, %1092, %1093, %1094) /* ty=(Tensor[(10, 5, 14), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(15, 9, 9), float64]) */;
  %1096 = cast(%var_1972, dtype="float32") /* ty=Tensor[(27), float32] */;
  %1097 = cast(meta[relay.Constant][86] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1098 = cast(meta[relay.Constant][87] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %1099 = cast(meta[relay.Constant][88] /* ty=Tensor[(194040, 1), uint16] */, dtype="uint16") /* ty=Tensor[(194040, 1), uint16] */;
  %1100 = reshape(%1096, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float32] */;
  %1101 = reshape(%1097, newshape=[]) /* ty=int8 */;
  %1102 = reshape(%1098, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %1103 = reshape(%1099, newshape=[14, 924, 15]) /* ty=Tensor[(14, 924, 15), uint16] */;
  %1104 = @func_1713(%1100, %1101, %1102, %1103) /* ty=(Tensor[(9, 1, 3), float32], int8, Tensor[(35, 6), int8], Tensor[(924), uint16], Tensor[(14, 924, 15), int64], Tensor[(14, 6, 10), float32], Tensor[(12, 70), bool]) */;
  %1105 = cast(%var_1955, dtype="float32") /* ty=Tensor[(4, 5, 7), float32] */;
  %1106 = exp(%1105) /* ty=Tensor[(4, 5, 7), float32] */;
  %1107 = cast(%var_1955, dtype="float64") /* ty=Tensor[(4, 5, 7), float64] */;
  %1108 = shape_of(%1106, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1109 = cast(%1106, dtype="float64") /* ty=Tensor[(4, 5, 7), float64] */;
  %1110 = dyn.reshape(%1107, %1108, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1111 = %1095.3;
  %1112 = %1104.5;
  %1113 = floor_divide(%1109, %1110) /* ty=Tensor[(4, 5, 7), float64] */;
  (%1111, %var_1961, %var_1962, %var_1963, %var_1964, %1112, %var_1972, meta[relay.Constant][86] /* ty=int8 */, meta[relay.Constant][87] /* ty=Tensor[(924), uint16] */, meta[relay.Constant][88] /* ty=Tensor[(194040, 1), uint16] */, %1113)
}

def @func_8337() -> (Tensor[(4, 5, 16), bool], Tensor[(10, 13, 4), float32], Tensor[(260, 2), float32]) {
  %1114 = @func_4537() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), bool]) */;
  %1115 = cast(meta[relay.Constant][89] /* ty=Tensor[(260, 2), float32] */, dtype="float32") /* ty=Tensor[(260, 2), float32] */;
  %1116 = reshape(%1115, newshape=[10, 13, 4]) /* ty=Tensor[(10, 13, 4), float32] */;
  %1117 = %1114.1;
  %1118 = @func_7891(%1116) /* ty=Tensor[(10, 13, 4), float32] */;
  (%1117, %1118, meta[relay.Constant][89] /* ty=Tensor[(260, 2), float32] */)
}

def @func_205(%var_196: Tensor[(12, 6, 2), float64]) -> Tensor[(12, 6, 2), float64] {
  %1119 = cast(%var_196, dtype="float64") /* ty=Tensor[(12, 6, 2), float64] */;
  atanh(%1119) /* ty=Tensor[(12, 6, 2), float64] */
}

def @func_4937() -> (Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) {
  %1120 = cast(meta[relay.Constant][90] /* ty=Tensor[(363), int32] */, dtype="int32") /* ty=Tensor[(363), int32] */;
  %1121 = cast(meta[relay.Constant][90] /* ty=Tensor[(363), int32] */, dtype="int32") /* ty=Tensor[(363), int32] */;
  %1122 = reshape(%1120, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), int32] */;
  %1123 = reshape(%1121, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), int32] */;
  %1124 = @func_2066(%1122, %1123) /* ty=(Tensor[(11, 11, 3), float64],) */;
  %1125 = @func_2833() /* ty=Tensor[(4, 5, 16), float32] */;
  %1126 = %1124.0;
  (%1125, %1126, meta[relay.Constant][90] /* ty=Tensor[(363), int32] */)
}

def @func_4412() -> Tensor[(4, 5, 16), float32] {
  @func_3560() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_3168() -> Tensor[(4, 5, 16), float32] {
  %1127 = @func_2999() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %1127.0
}

def @func_938(%var_927: int32) -> (Tensor[(15, 11, 14), bool],) {
  %1128 = cast(%var_927, dtype="bool") /* ty=bool */;
  %1129 = cast(meta[relay.Constant][91] /* ty=Tensor[(15, 11, 14), int32] */, dtype="bool") /* ty=Tensor[(15, 11, 14), bool] */;
  %1130 = greater(%1128, %1129) /* ty=Tensor[(15, 11, 14), bool] */;
  (%1130,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1482(%var_1479: Tensor[(12, 14, 6), float64], %var_1480: Tensor[(2, 72), float64], %var_1481: int32) -> (Tensor[(12, 14, 6), float64], Tensor[(12, 6, 2), float64], Tensor[(2, 72), float64], Tensor[(15, 11, 14), bool], int32) {
  %9 = fn (%var_1440: Tensor[(12, 14, 6), float64], %var_1450: Tensor[(2, 72), float64], %var_1468: int32) -> (Tensor[(12, 14, 6), float64], Tensor[(12, 6, 2), float64], Tensor[(2, 72), float64], Tensor[(15, 11, 14), bool], int32) {
    %0 = cast(%var_1440, dtype="float64") /* ty=Tensor[(12, 14, 6), float64] */;
    %1 = cast(%var_1450, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
    %2 = reshape(%1, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), float64] */;
    %3 = cast(%var_1468, dtype="int32") /* ty=int32 */;
    %4 = reshape(%3, newshape=[]) /* ty=int32 */;
    %5 = @func_938(%4) /* ty=(Tensor[(15, 11, 14), bool],) */;
    %6 = log2(%0) /* ty=Tensor[(12, 14, 6), float64] */;
    %7 = @func_205(%2) /* ty=Tensor[(12, 6, 2), float64] */;
    %8 = %5.0;
    (%6, %7, %var_1450, %8, %var_1468)
  };
  %9(%var_1479, %var_1480, %var_1481) /* ty=(Tensor[(12, 14, 6), float64], Tensor[(12, 6, 2), float64], Tensor[(2, 72), float64], Tensor[(15, 11, 14), bool], int32) */
}

def @func_5913(%var_5911: int8, %var_5912: Tensor[(1, 3, 7), int8]) -> Tensor[(1, 3, 7), int8] {
  %12 = fn (%var_5866: int8, %var_5867: Tensor[(1, 3, 7), int8]) -> Tensor[(1, 3, 7), int8] {
    %10 = cast(%var_5866, dtype="int8") /* ty=int8 */;
    %11 = cast(%var_5867, dtype="int8") /* ty=Tensor[(1, 3, 7), int8] */;
    left_shift(%10, %11) /* ty=Tensor[(1, 3, 7), int8] */
  };
  %12(%var_5911, %var_5912) /* ty=Tensor[(1, 3, 7), int8] */
}

def @func_8556() -> (Tensor[(4, 5, 16), float64],) {
  @func_8554() /* ty=(Tensor[(4, 5, 16), float64],) */
}

def @func_529(%var_512: Tensor[(7, 15, 9), int8]) -> Tensor[(7, 15, 9), int8] {
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(7, 15, 9), int8] */, dtype="int8") /* ty=Tensor[(7, 15, 9), int8] */;
  %14 = shape_of(%var_512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%var_512, dtype="int8") /* ty=Tensor[(7, 15, 9), int8] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_and(%15, %16) /* ty=Tensor[(7, 15, 9), int8] */
}

def @func_1805(%var_1798: Tensor[(14, 8, 4), int16], %var_1799: Tensor[(14, 8, 4), int16]) -> (Tensor[(14, 8, 4), bool],) {
  %17 = cast(%var_1799, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %18 = shape_of(%var_1798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %19 = cast(%var_1798, dtype="bool") /* ty=Tensor[(14, 8, 4), bool] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %21 = greater(%19, %20) /* ty=Tensor[(14, 8, 4), bool] */;
  (%21,)
}

def @func_6617() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) {
  %26 = fn () -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) {
    %22 = @func_3339() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(144), float64]) */;
    %23 = @func_6181() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */;
    %24 = %22.0;
    %25 = %23.1;
    (%24, %25)
  };
  %26() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */
}

def @func_9298() -> Tensor[(4, 5, 16), float32] {
  %27 = @func_4937() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */;
  %27.0
}

def @func_4245(%var_4240: Tensor[(11, 13, 9), uint16]) -> Tensor[(11, 13, 9), uint32] {
  %28 = @func_3941() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 13, 9), uint16]) */;
  %29 = %28.1;
  %30 = cast(%var_4240, dtype="uint32") /* ty=Tensor[(11, 13, 9), uint32] */;
  %31 = shape_of(%29, dtype="int32") /* ty=Tensor[(3), int32] */;
  %32 = cast(%29, dtype="uint32") /* ty=Tensor[(11, 13, 9), uint32] */;
  %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%32, %33) /* ty=Tensor[(11, 13, 9), uint32] */
}

def @func_4538() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), bool]) {
  %44 = fn () -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), bool]) {
    %34 = @func_2833() /* ty=Tensor[(4, 5, 16), float32] */;
    %35 = cast(%34, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
    %36 = reshape(%35, newshape=[4, 5, 16]) /* ty=Tensor[(4, 5, 16), float32] */;
    %37 = @func_3152(%36) /* ty=Tensor[(4, 5, 16), uint32] */;
    %38 = @func_4412() /* ty=Tensor[(4, 5, 16), float32] */;
    %39 = cast(%38, dtype="bool") /* ty=Tensor[(4, 5, 16), bool] */;
    %40 = shape_of(%37, dtype="int32") /* ty=Tensor[(3), int32] */;
    %41 = cast(%37, dtype="bool") /* ty=Tensor[(4, 5, 16), bool] */;
    %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %43 = greater(%41, %42) /* ty=Tensor[(4, 5, 16), bool] */;
    (%34, %43)
  };
  %44() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), bool]) */
}

def @func_8004() -> Tensor[(4, 5, 16), float64] {
  %45 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %45.0
}

def @func_6521(%var_6509: Tensor[(1440), uint16], %var_6512: Tensor[(429, 3), uint8]) -> (Tensor[(4, 5, 16), float32], Tensor[(1001), uint16], Tensor[(1440), uint16], Tensor[(11, 13, 9), uint8], Tensor[(429, 3), uint8], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %46 = @func_3447() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %47 = cast(%var_6509, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
  %48 = reshape(%47, newshape=[16, 10, 9]) /* ty=Tensor[(16, 10, 9), uint16] */;
  %49 = @func_6207(%48) /* ty=(Tensor[(16, 10, 9), bool], Tensor[(7, 13, 11), uint16], Tensor[(1001), uint16]) */;
  %50 = cast(%var_6512, dtype="uint8") /* ty=Tensor[(429, 3), uint8] */;
  %51 = reshape(%50, newshape=[11, 13, 9]) /* ty=Tensor[(11, 13, 9), uint8] */;
  %52 = @func_5448() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %53 = %46.0;
  %54 = %49.2;
  %55 = @func_1655(%51) /* ty=Tensor[(11, 13, 9), uint8] */;
  %56 = @func_3168() /* ty=Tensor[(4, 5, 16), float32] */;
  %57 = %52.0;
  (%53, %54, %var_6509, %55, %var_6512, %56, %57)
}

def @func_10815(%var_10813: Tensor[(16, 8, 6), uint8]) -> (Tensor[(16, 8, 6), bool], Tensor[(4, 5, 16), float32]) {
  @func_10812(%var_10813) /* ty=(Tensor[(16, 8, 6), bool], Tensor[(4, 5, 16), float32]) */
}

def @func_6056() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %58 = @func_5315() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %59 = @func_5358() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(4, 5, 16), float32]) */;
  %60 = %58.0;
  %61 = %59.3;
  (%60, %61)
}

def @func_2950(%var_2943: Tensor[(1008), float64], %var_2944: Tensor[(144), float64], %var_2945: int32, %var_2946: Tensor[(924), uint16], %var_2947: Tensor[(195), float64], %var_2948: Tensor[(35, 6), int8], %var_2949: Tensor[(363), int32]) -> (Tensor[(4, 5, 16), float64], Tensor[(12, 14, 6), float64], Tensor[(1008), float64], Tensor[(144), float64], int32, int8, Tensor[(27), float32], Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(13, 11, 3), float32], Tensor[(429), float32], Tensor[(15, 11, 14), bool], Tensor[(15, 1, 13), float64], Tensor[(195), float64], Tensor[(11, 12, 7), uint16], Tensor[(35, 6), int8], Tensor[(14, 6, 10), float32], Tensor[(840), bool], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) {
  %112 = fn (%var_2864: Tensor[(1008), float64], %var_2865: Tensor[(144), float64], %var_2866: int32, %var_2877: Tensor[(924), uint16], %var_2905: Tensor[(195), float64], %var_2913: Tensor[(35, 6), int8], %var_2933: Tensor[(363), int32]) -> (Tensor[(4, 5, 16), float64], Tensor[(12, 14, 6), float64], Tensor[(1008), float64], Tensor[(144), float64], int32, int8, Tensor[(27), float32], Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(13, 11, 3), float32], Tensor[(429), float32], Tensor[(15, 11, 14), bool], Tensor[(15, 1, 13), float64], Tensor[(195), float64], Tensor[(11, 12, 7), uint16], Tensor[(35, 6), int8], Tensor[(14, 6, 10), float32], Tensor[(840), bool], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) {
    %62 = @func_2833() /* ty=Tensor[(4, 5, 16), float32] */;
    %63 = cast(%62, dtype="float64") /* ty=Tensor[(4, 5, 16), float64] */;
    %64 = cast(%var_2864, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %65 = cast(%var_2865, dtype="float64") /* ty=Tensor[(144), float64] */;
    %66 = cast(%var_2866, dtype="int32") /* ty=int32 */;
    %67 = reshape(%64, newshape=[12, 14, 6]) /* ty=Tensor[(12, 14, 6), float64] */;
    %68 = reshape(%65, newshape=[2, 72]) /* ty=Tensor[(2, 72), float64] */;
    %69 = reshape(%66, newshape=[]) /* ty=int32 */;
    %70 = @func_1478(%67, %68, %69) /* ty=(Tensor[(12, 14, 6), float64], Tensor[(12, 6, 2), float64], Tensor[(2, 72), float64], Tensor[(15, 11, 14), bool], int32) */;
    %71 = cast(meta[relay.Constant][1] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
    %72 = cast(%var_2877, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %73 = cast(meta[relay.Constant][2] /* ty=Tensor[(194040), uint16] */, dtype="uint16") /* ty=Tensor[(194040), uint16] */;
    %74 = reshape(%71, newshape=[9, 3]) /* ty=Tensor[(9, 3), float32] */;
    %75 = reshape(%72, newshape=[924]) /* ty=Tensor[(924), uint16] */;
    %76 = reshape(%73, newshape=[194040]) /* ty=Tensor[(194040), uint16] */;
    %77 = @func_2756(%74, %75, %76) /* ty=(Tensor[(4, 5, 16), float64], int8, Tensor[(9, 3), float32], Tensor[(924), uint16], Tensor[(194040), uint16]) */;
    %78 = cast(meta[relay.Constant][3] /* ty=Tensor[(429), float32] */, dtype="float32") /* ty=Tensor[(429), float32] */;
    %79 = cast(meta[relay.Constant][3] /* ty=Tensor[(429), float32] */, dtype="float32") /* ty=Tensor[(429), float32] */;
    %80 = reshape(%78, newshape=[13, 11, 3]) /* ty=Tensor[(13, 11, 3), float32] */;
    %81 = reshape(%79, newshape=[13, 11, 3]) /* ty=Tensor[(13, 11, 3), float32] */;
    %82 = @func_802(%80, %81) /* ty=(Tensor[(13, 11, 3), float32],) */;
    %83 = cast(%var_2866, dtype="int32") /* ty=int32 */;
    %84 = reshape(%83, newshape=[]) /* ty=int32 */;
    %85 = @func_938(%84) /* ty=(Tensor[(15, 11, 14), bool],) */;
    %86 = cast(%var_2905, dtype="float64") /* ty=Tensor[(195), float64] */;
    %87 = reshape(%86, newshape=[15, 1, 13]) /* ty=Tensor[(15, 1, 13), float64] */;
    %88 = cast(%var_2866, dtype="int8") /* ty=int8 */;
    %89 = cast(%var_2913, dtype="int8") /* ty=Tensor[(35, 6), int8] */;
    %90 = cast(%var_2877, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %91 = reshape(%88, newshape=[]) /* ty=int8 */;
    %92 = reshape(%89, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), int8] */;
    %93 = reshape(%90, newshape=[924, 1]) /* ty=Tensor[(924, 1), uint16] */;
    %94 = @func_626(%91, %92, %93) /* ty=(Tensor[(14, 1, 15), int8], Tensor[(11, 12, 7), uint16], Tensor[(14, 924, 15), uint16]) */;
    %95 = cast(meta[relay.Constant][4] /* ty=Tensor[(840), bool] */, dtype="bool") /* ty=Tensor[(840), bool] */;
    %96 = reshape(%95, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), bool] */;
    %97 = @func_1382(%96) /* ty=(Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float32]) */;
    %98 = cast(%var_2933, dtype="int32") /* ty=Tensor[(363), int32] */;
    %99 = cast(%var_2933, dtype="int32") /* ty=Tensor[(363), int32] */;
    %100 = reshape(%98, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), int32] */;
    %101 = reshape(%99, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), int32] */;
    %102 = @func_2066(%100, %101) /* ty=(Tensor[(11, 11, 3), float64],) */;
    %103 = tan(%63) /* ty=Tensor[(4, 5, 16), float64] */;
    %104 = %70.0;
    %105 = %77.1;
    %106 = %82.0;
    %107 = %85.0;
    %108 = @func_1305(%87) /* ty=Tensor[(15, 1, 13), float64] */;
    %109 = %94.1;
    %110 = %97.1;
    %111 = %102.0;
    (%103, %104, %var_2864, %var_2865, %var_2866, %105, meta[relay.Constant][1] /* ty=Tensor[(27), float32] */, %var_2877, meta[relay.Constant][2] /* ty=Tensor[(194040), uint16] */, %106, meta[relay.Constant][3] /* ty=Tensor[(429), float32] */, %107, %108, %var_2905, %109, %var_2913, %110, meta[relay.Constant][4] /* ty=Tensor[(840), bool] */, %111, %var_2933)
  };
  %112(%var_2943, %var_2944, %var_2945, %var_2946, %var_2947, %var_2948, %var_2949) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(12, 14, 6), float64], Tensor[(1008), float64], Tensor[(144), float64], int32, int8, Tensor[(27), float32], Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(13, 11, 3), float32], Tensor[(429), float32], Tensor[(15, 11, 14), bool], Tensor[(15, 1, 13), float64], Tensor[(195), float64], Tensor[(11, 12, 7), uint16], Tensor[(35, 6), int8], Tensor[(14, 6, 10), float32], Tensor[(840), bool], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */
}

def @func_5008() -> (Tensor[(11, 11, 3), float64], Tensor[(4, 5, 16), float32]) {
  %113 = @func_4937() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */;
  %114 = %113.1;
  %115 = @func_4412() /* ty=Tensor[(4, 5, 16), float32] */;
  (%114, %115)
}

def @func_6937(%var_6933: Tensor[(27, 1), float32], %var_6934: int8, %var_6935: Tensor[(924), uint16], %var_6936: Tensor[(194040), uint16]) -> (Tensor[(4, 5, 16), float64], Tensor[(12, 6, 2), float64], Tensor[(144), float64], Tensor[(924), uint16], Tensor[(27, 1), float32], int8, Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(4, 5, 16), float32]) {
  @func_6931(%var_6933, %var_6934, %var_6935, %var_6936) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(12, 6, 2), float64], Tensor[(144), float64], Tensor[(924), uint16], Tensor[(27, 1), float32], int8, Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(4, 5, 16), float32]) */
}

def @func_7213() -> (Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32]) {
  @func_7211() /* ty=(Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32]) */
}

def @func_7211() -> (Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32]) {
  %116 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %117 = %116.0;
  %118 = @func_6579() /* ty=Tensor[(4, 5, 16), float32] */;
  (%117, %118)
}

def @func_5829() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) {
  %123 = fn () -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) {
    %119 = @func_3119() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %120 = @func_4114() /* ty=(Tensor[(4, 5, 16), float64],) */;
    %121 = %119.0;
    %122 = %120.0;
    (%121, %122)
  };
  %123() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */
}

def @func_6579() -> Tensor[(4, 5, 16), float32] {
  %124 = @func_4477() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %124.0
}

def @func_9118() -> Tensor[(4, 5, 16), float32] {
  %125 = @func_4477() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %125.0
}

def @func_4248(%var_4246: Tensor[(11, 13, 9), uint16]) -> Tensor[(11, 13, 9), uint32] {
  @func_4245(%var_4246) /* ty=Tensor[(11, 13, 9), uint32] */
}

def @func_8871(%var_8847: Tensor[(16, 3, 6), bool], %var_8848: Tensor[(16, 3, 6), bool], %var_8866: Tensor[(1, 1440), float64]) -> (Tensor[(16, 3, 6), bool], Tensor[(16, 3, 6), float64], Tensor[(12, 12, 10), float64], Tensor[(1, 1440), float64], Tensor[(4, 5, 16), float64]) {
  %126 = cast(%var_8848, dtype="bool") /* ty=Tensor[(16, 3, 6), bool] */;
  %127 = shape_of(%var_8847, dtype="int32") /* ty=Tensor[(3), int32] */;
  %128 = cast(%var_8847, dtype="bool") /* ty=Tensor[(16, 3, 6), bool] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %130 = cast(%var_8848, dtype="float64") /* ty=Tensor[(16, 3, 6), float64] */;
  %131 = shape_of(%var_8847, dtype="int32") /* ty=Tensor[(3), int32] */;
  %132 = cast(%var_8847, dtype="float64") /* ty=Tensor[(16, 3, 6), float64] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %134 = cast(%var_8866, dtype="float64") /* ty=Tensor[(1, 1440), float64] */;
  %135 = cast(%var_8866, dtype="float64") /* ty=Tensor[(1, 1440), float64] */;
  %136 = reshape(%134, newshape=[12, 12, 10]) /* ty=Tensor[(12, 12, 10), float64] */;
  %137 = reshape(%135, newshape=[12, 12, 10]) /* ty=Tensor[(12, 12, 10), float64] */;
  %138 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %139 = logical_or(%128, %129) /* ty=Tensor[(16, 3, 6), bool] */;
  %140 = divide(%132, %133) /* ty=Tensor[(16, 3, 6), float64] */;
  %141 = @func_6869(%136, %137) /* ty=Tensor[(12, 12, 10), float64] */;
  %142 = %138.0;
  (%139, %140, %141, %var_8866, %142)
}

def @func_5189() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %147 = fn () -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
    %143 = @func_3447() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %144 = @func_4537() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), bool]) */;
    %145 = %143.0;
    %146 = %144.0;
    (%145, %146)
  };
  %147() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */
}

def @func_7481(%var_7477: Tensor[(144), float64], %var_7478: int32, %var_7479: Tensor[(210), int8], %var_7480: Tensor[(210), int8]) -> (Tensor[(4, 5, 16), float32], Tensor[(1008), float64], Tensor[(1008), float64], Tensor[(144), float64], Tensor[(195), float64], Tensor[(363), int32], Tensor[(210), float32], Tensor[(4, 5, 16), float32], Tensor[(3, 7, 7), uint64], Tensor[(7, 21), uint64], Tensor[(924, 1), float64], Tensor[(4, 5, 16), float32]) {
  %183 = fn (%var_7416: Tensor[(144), float64], %var_7417: int32, %var_7420: Tensor[(210), int8], %var_7444: Tensor[(210), int8]) -> (Tensor[(4, 5, 16), float32], Tensor[(1008), float64], Tensor[(1008), float64], Tensor[(144), float64], Tensor[(195), float64], Tensor[(363), int32], Tensor[(210), float32], Tensor[(4, 5, 16), float32], Tensor[(3, 7, 7), uint64], Tensor[(7, 21), uint64], Tensor[(924, 1), float64], Tensor[(4, 5, 16), float32]) {
    %148 = cast(meta[relay.Constant][5] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %149 = cast(%var_7416, dtype="float64") /* ty=Tensor[(144), float64] */;
    %150 = cast(%var_7417, dtype="int32") /* ty=int32 */;
    %151 = cast(meta[relay.Constant][6] /* ty=Tensor[(924, 1), uint16] */, dtype="uint16") /* ty=Tensor[(924, 1), uint16] */;
    %152 = cast(meta[relay.Constant][7] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
    %153 = cast(%var_7420, dtype="int8") /* ty=Tensor[(210), int8] */;
    %154 = cast(meta[relay.Constant][8] /* ty=Tensor[(363), int32] */, dtype="int32") /* ty=Tensor[(363), int32] */;
    %155 = reshape(%148, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
    %156 = reshape(%149, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %157 = reshape(%150, newshape=[]) /* ty=int32 */;
    %158 = reshape(%151, newshape=[924]) /* ty=Tensor[(924), uint16] */;
    %159 = reshape(%152, newshape=[195]) /* ty=Tensor[(195), float64] */;
    %160 = reshape(%153, newshape=[35, 6]) /* ty=Tensor[(35, 6), int8] */;
    %161 = reshape(%154, newshape=[363]) /* ty=Tensor[(363), int32] */;
    %162 = @func_2942(%155, %156, %157, %158, %159, %160, %161) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(12, 14, 6), float64], Tensor[(1008), float64], Tensor[(144), float64], int32, int8, Tensor[(27), float32], Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(13, 11, 3), float32], Tensor[(429), float32], Tensor[(15, 11, 14), bool], Tensor[(15, 1, 13), float64], Tensor[(195), float64], Tensor[(11, 12, 7), uint16], Tensor[(35, 6), int8], Tensor[(14, 6, 10), float32], Tensor[(840), bool], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */;
    %163 = cast(%var_7444, dtype="float32") /* ty=Tensor[(210), float32] */;
    %164 = shape_of(%var_7420, dtype="int32") /* ty=Tensor[(1), int32] */;
    %165 = cast(%var_7420, dtype="float32") /* ty=Tensor[(210), float32] */;
    %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?), float32] */;
    %167 = @func_5188() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
    %168 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 21), uint64] */, dtype="uint64") /* ty=Tensor[(7, 21), uint64] */;
    %169 = reshape(%168, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), uint64] */;
    %170 = @func_5480(%169) /* ty=(Tensor[(3, 7, 7), uint64], Tensor[(4, 5, 16), float32]) */;
    %171 = cast(meta[relay.Constant][6] /* ty=Tensor[(924, 1), uint16] */, dtype="float64") /* ty=Tensor[(924, 1), float64] */;
    %172 = sigmoid(%171) /* ty=Tensor[(924, 1), float64] */;
    %173 = cast(%172, dtype="float64") /* ty=Tensor[(924, 1), float64] */;
    %174 = cast(%var_7417, dtype="float64") /* ty=float64 */;
    %175 = @func_6181() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */;
    %176 = @func_4265() /* ty=Tensor[(4, 5, 16), float32] */;
    %177 = %162.2;
    %178 = floor_divide(%165, %166) /* ty=Tensor[(210), float32] */;
    %179 = %167.0;
    %180 = %170.0;
    %181 = divide(%173, %174) /* ty=Tensor[(924, 1), float64] */;
    %182 = %175.0;
    (%176, %177, meta[relay.Constant][5] /* ty=Tensor[(1008), float64] */, %var_7416, meta[relay.Constant][7] /* ty=Tensor[(195), float64] */, meta[relay.Constant][8] /* ty=Tensor[(363), int32] */, %178, %179, %180, meta[relay.Constant][9] /* ty=Tensor[(7, 21), uint64] */, %181, %182)
  };
  %183(%var_7477, %var_7478, %var_7479, %var_7480) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(1008), float64], Tensor[(1008), float64], Tensor[(144), float64], Tensor[(195), float64], Tensor[(363), int32], Tensor[(210), float32], Tensor[(4, 5, 16), float32], Tensor[(3, 7, 7), uint64], Tensor[(7, 21), uint64], Tensor[(924, 1), float64], Tensor[(4, 5, 16), float32]) */
}

def @func_1174(%var_1170: Tensor[(1, 5, 14), int32], %var_1171: Tensor[(10, 5, 14), int32], %var_1172: Tensor[(1215), float64], %var_1173: Tensor[(144), float64]) -> (Tensor[(10, 5, 14), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(15, 9, 9), float64]) {
  @func_1168(%var_1170, %var_1171, %var_1172, %var_1173) /* ty=(Tensor[(10, 5, 14), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(15, 9, 9), float64]) */
}

def @func_2069(%var_2067: Tensor[(11, 11, 3), int32], %var_2068: Tensor[(11, 11, 3), int32]) -> (Tensor[(11, 11, 3), float64],) {
  %191 = fn (%var_2052: Tensor[(11, 11, 3), int32], %var_2053: Tensor[(11, 11, 3), int32]) -> (Tensor[(11, 11, 3), float64],) {
    %184 = cast(%var_2053, dtype="bool") /* ty=Tensor[(11, 11, 3), bool] */;
    %185 = shape_of(%var_2052, dtype="int32") /* ty=Tensor[(3), int32] */;
    %186 = cast(%var_2052, dtype="bool") /* ty=Tensor[(11, 11, 3), bool] */;
    %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %188 = greater(%186, %187) /* ty=Tensor[(11, 11, 3), bool] */;
    %189 = cast(%188, dtype="float64") /* ty=Tensor[(11, 11, 3), float64] */;
    %190 = log(%189) /* ty=Tensor[(11, 11, 3), float64] */;
    (%190,)
  };
  %191(%var_2067, %var_2068) /* ty=(Tensor[(11, 11, 3), float64],) */
}

def @func_10145(%var_10099: Tensor[(1287, 1), uint8], %var_10141: Tensor[(1008), float64]) -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(1287, 144), uint32], Tensor[(144), float64], Tensor[(1008), float64]) {
  %192 = cast(%var_10099, dtype="float64") /* ty=Tensor[(1287, 1), float64] */;
  %193 = tan(%192) /* ty=Tensor[(1287, 1), float64] */;
  %194 = cast(%var_10099, dtype="uint8") /* ty=Tensor[(1287, 1), uint8] */;
  %195 = reshape(%194, newshape=[1287]) /* ty=Tensor[(1287), uint8] */;
  %196 = @func_4619(%195) /* ty=(Tensor[(144), float64], Tensor[(11, 13, 9), uint8], Tensor[(1287), uint8]) */;
  %197 = %196.0;
  %198 = cast(%193, dtype="uint32") /* ty=Tensor[(1287, 1), uint32] */;
  %199 = cast(%197, dtype="uint32") /* ty=Tensor[(144), uint32] */;
  %200 = cast(%var_10141, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %201 = reshape(%200, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %202 = @func_9678(%201) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(2, 72), float64], Tensor[(1008), float64], Tensor[(144), float64], int32) */;
  %203 = @func_3608() /* ty=Tensor[(4, 5, 16), float32] */;
  %204 = @func_9768() /* ty=Tensor[(4, 5, 16), float32] */;
  %205 = bitwise_and(%198, %199) /* ty=Tensor[(1287, 144), uint32] */;
  %206 = %202.3;
  (%203, %204, %205, %206, %var_10141)
}

def @func_4937() -> (Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) {
  %207 = cast(meta[relay.Constant][10] /* ty=Tensor[(363), int32] */, dtype="int32") /* ty=Tensor[(363), int32] */;
  %208 = cast(meta[relay.Constant][10] /* ty=Tensor[(363), int32] */, dtype="int32") /* ty=Tensor[(363), int32] */;
  %209 = reshape(%207, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), int32] */;
  %210 = reshape(%208, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), int32] */;
  %211 = @func_2066(%209, %210) /* ty=(Tensor[(11, 11, 3), float64],) */;
  %212 = @func_2833() /* ty=Tensor[(4, 5, 16), float32] */;
  %213 = %211.0;
  (%212, %213, meta[relay.Constant][10] /* ty=Tensor[(363), int32] */)
}

def @func_10388(%var_10386: Tensor[(7, 14, 15), float32]) -> (Tensor[(7, 14, 15), float32],) {
  @func_10385(%var_10386) /* ty=(Tensor[(7, 14, 15), float32],) */
}

def @func_6834(%var_6830: Tensor[(70), int32], %var_6831: Tensor[(700), int32], %var_6832: Tensor[(1215), float64], %var_6833: Tensor[(2, 72), float64]) -> (Tensor[(4, 5, 16), float32], Tensor[(70), int32], Tensor[(1215), float64], Tensor[(2, 72), float64], Tensor[(10, 5, 14), float64], Tensor[(700), float32]) {
  @func_6828(%var_6830, %var_6831, %var_6832, %var_6833) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(70), int32], Tensor[(1215), float64], Tensor[(2, 72), float64], Tensor[(10, 5, 14), float64], Tensor[(700), float32]) */
}

def @func_10812(%var_10759: Tensor[(16, 8, 6), uint8]) -> (Tensor[(16, 8, 6), bool], Tensor[(4, 5, 16), float32]) {
  %214 = cast(%var_10759, dtype="bool") /* ty=Tensor[(16, 8, 6), bool] */;
  %215 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(16, 8, 6), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 8, 6), uint8] */, dtype="bool") /* ty=Tensor[(16, 8, 6), bool] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %218 = @func_5448() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %219 = less(%216, %217) /* ty=Tensor[(16, 8, 6), bool] */;
  %220 = %218.0;
  (%219, %220)
}

def @func_626(%var_597: int8, %var_598: Tensor[(14, 1, 15), int8], %var_619: Tensor[(924, 1), uint16]) -> (Tensor[(14, 1, 15), int8], Tensor[(11, 12, 7), uint16], Tensor[(14, 924, 15), uint16]) {
  %221 = cast(%var_597, dtype="int8") /* ty=int8 */;
  %222 = cast(%var_598, dtype="int8") /* ty=Tensor[(14, 1, 15), int8] */;
  %223 = cast(%var_619, dtype="uint16") /* ty=Tensor[(924, 1), uint16] */;
  %224 = cast(%var_619, dtype="uint16") /* ty=Tensor[(924, 1), uint16] */;
  %225 = reshape(%223, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), uint16] */;
  %226 = reshape(%224, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), uint16] */;
  %227 = cast(%var_619, dtype="uint16") /* ty=Tensor[(924, 1), uint16] */;
  %228 = cast(%var_598, dtype="uint16") /* ty=Tensor[(14, 1, 15), uint16] */;
  %229 = multiply(%221, %222) /* ty=Tensor[(14, 1, 15), int8] */;
  %230 = @func_498(%225, %226) /* ty=Tensor[(11, 12, 7), uint16] */;
  %231 = left_shift(%227, %228) /* ty=Tensor[(14, 924, 15), uint16] */;
  (%229, %230, %231)
}

def @func_631(%var_628: int8, %var_629: Tensor[(14, 1, 15), int8], %var_630: Tensor[(924, 1), uint16]) -> (Tensor[(14, 1, 15), int8], Tensor[(11, 12, 7), uint16], Tensor[(14, 924, 15), uint16]) {
  @func_626(%var_628, %var_629, %var_630) /* ty=(Tensor[(14, 1, 15), int8], Tensor[(11, 12, 7), uint16], Tensor[(14, 924, 15), uint16]) */
}

def @func_7612() -> (Tensor[(4, 5, 16), float32],) {
  %234 = fn () -> (Tensor[(4, 5, 16), float32],) {
    %232 = @func_6470() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
    %233 = %232.0;
    (%233,)
  };
  %234() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_6058() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  @func_6056() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */
}

def @func_8294(%var_8290: Tensor[(27), float32], %var_8291: Tensor[(196), int8], %var_8292: Tensor[(1215), float64], %var_8293: Tensor[(363), int32]) -> (Tensor[(4, 5, 16), float64], Tensor[(27), float32], Tensor[(924), uint16], Tensor[(4, 5, 16), float32], Tensor[(196), int8], Tensor[(1, 3, 7), int8], Tensor[(21), int8], Tensor[(194040), bool], Tensor[(194040), bool], Tensor[(363), int32], Tensor[(1001), uint16], Tensor[(70), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(363), int32]) {
  %278 = fn (%var_8237: Tensor[(27), float32], %var_8249: Tensor[(196), int8], %var_8274: Tensor[(1215), float64], %var_8276: Tensor[(363), int32]) -> (Tensor[(4, 5, 16), float64], Tensor[(27), float32], Tensor[(924), uint16], Tensor[(4, 5, 16), float32], Tensor[(196), int8], Tensor[(1, 3, 7), int8], Tensor[(21), int8], Tensor[(194040), bool], Tensor[(194040), bool], Tensor[(363), int32], Tensor[(1001), uint16], Tensor[(70), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(363), int32]) {
    %235 = @func_8197() /* ty=(Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32], Tensor[(1, 147), uint64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
    %236 = cast(%var_8249, dtype="int8") /* ty=Tensor[(196), int8] */;
    %237 = reshape(%236, newshape=[196]) /* ty=Tensor[(196), int8] */;
    %238 = @func_5611(%237) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(144), float64], int8, Tensor[(196), int8], Tensor[(144), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
    %239 = cast(%var_8237, dtype="float32") /* ty=Tensor[(27), float32] */;
    %240 = cast(meta[relay.Constant][13] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %241 = cast(meta[relay.Constant][12] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %242 = cast(meta[relay.Constant][14] /* ty=Tensor[(194040), uint16] */, dtype="uint16") /* ty=Tensor[(194040), uint16] */;
    %243 = reshape(%239, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float32] */;
    %244 = reshape(%240, newshape=[]) /* ty=int8 */;
    %245 = reshape(%241, newshape=[924]) /* ty=Tensor[(924), uint16] */;
    %246 = reshape(%242, newshape=[14, 924, 15]) /* ty=Tensor[(14, 924, 15), uint16] */;
    %247 = @func_1713(%243, %244, %245, %246) /* ty=(Tensor[(9, 1, 3), float32], int8, Tensor[(35, 6), int8], Tensor[(924), uint16], Tensor[(14, 924, 15), int64], Tensor[(14, 6, 10), float32], Tensor[(12, 70), bool]) */;
    %248 = %247.1;
    %249 = cast(%248, dtype="int8") /* ty=int8 */;
    %250 = cast(meta[relay.Constant][15] /* ty=Tensor[(21), int8] */, dtype="int8") /* ty=Tensor[(21), int8] */;
    %251 = reshape(%249, newshape=[]) /* ty=int8 */;
    %252 = reshape(%250, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), int8] */;
    %253 = cast(meta[relay.Constant][14] /* ty=Tensor[(194040), uint16] */, dtype="bool") /* ty=Tensor[(194040), bool] */;
    %254 = cast(meta[relay.Constant][13] /* ty=int8 */, dtype="bool") /* ty=bool */;
    %255 = cast(%248, dtype="bool") /* ty=bool */;
    %256 = cast(meta[relay.Constant][14] /* ty=Tensor[(194040), uint16] */, dtype="bool") /* ty=Tensor[(194040), bool] */;
    %257 = cast(meta[relay.Constant][16] /* ty=Tensor[(1001), uint16] */, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
    %258 = cast(meta[relay.Constant][16] /* ty=Tensor[(1001), uint16] */, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
    %259 = cast(meta[relay.Constant][17] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
    %260 = cast(%var_8274, dtype="float64") /* ty=Tensor[(1215), float64] */;
    %261 = cast(meta[relay.Constant][18] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %262 = cast(%var_8276, dtype="int32") /* ty=Tensor[(363), int32] */;
    %263 = cast(meta[relay.Constant][16] /* ty=Tensor[(1001), uint16] */, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
    %264 = reshape(%257, newshape=[7, 13, 11]) /* ty=Tensor[(7, 13, 11), uint16] */;
    %265 = reshape(%258, newshape=[7, 13, 11]) /* ty=Tensor[(7, 13, 11), uint16] */;
    %266 = reshape(%259, newshape=[70]) /* ty=Tensor[(70), int32] */;
    %267 = reshape(%260, newshape=[3, 405]) /* ty=Tensor[(3, 405), float64] */;
    %268 = reshape(%261, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %269 = reshape(%262, newshape=[363]) /* ty=Tensor[(363), int32] */;
    %270 = reshape(%263, newshape=[7, 13, 11]) /* ty=Tensor[(7, 13, 11), uint16] */;
    %271 = @func_2484(%264, %265, %266, %267, %268, %269, %270) /* ty=(Tensor[(7, 13, 11), uint16], Tensor[(1215), float64], Tensor[(70), int32], Tensor[(10, 70), int32], Tensor[(3, 405), float64], Tensor[(144), float64], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(7, 13, 11), bool]) */;
    %272 = %235.0;
    %273 = %238.0;
    %274 = @func_5910(%251, %252) /* ty=Tensor[(1, 3, 7), int8] */;
    %275 = logical_or(%253, %254) /* ty=Tensor[(194040), bool] */;
    %276 = less(%255, %256) /* ty=Tensor[(194040), bool] */;
    %277 = %271.7;
    (%272, %var_8237, meta[relay.Constant][12] /* ty=Tensor[(924), uint16] */, %273, %var_8249, %274, meta[relay.Constant][15] /* ty=Tensor[(21), int8] */, %275, %276, %277, meta[relay.Constant][16] /* ty=Tensor[(1001), uint16] */, meta[relay.Constant][17] /* ty=Tensor[(70), int32] */, %var_8274, meta[relay.Constant][18] /* ty=Tensor[(144), float64] */, %var_8276)
  };
  %278(%var_8290, %var_8291, %var_8292, %var_8293) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(27), float32], Tensor[(924), uint16], Tensor[(4, 5, 16), float32], Tensor[(196), int8], Tensor[(1, 3, 7), int8], Tensor[(21), int8], Tensor[(194040), bool], Tensor[(194040), bool], Tensor[(363), int32], Tensor[(1001), uint16], Tensor[(70), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(363), int32]) */
}

def @func_3943() -> (Tensor[(4, 5, 16), float32], Tensor[(11, 13, 9), uint16]) {
  @func_3941() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 13, 9), uint16]) */
}

def @func_10953() -> Tensor[(4, 5, 16), float32] {
  %279 = @func_4353() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %279.0
}

def @func_9120() -> Tensor[(4, 5, 16), float32] {
  @func_9118() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_5540() -> (Tensor[(4, 5, 16), float32],) {
  %280 = @func_3119() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %281 = %280.0;
  (%281,)
}

def @func_502(%var_500: Tensor[(11, 12, 7), uint16], %var_501: Tensor[(11, 12, 7), uint16]) -> Tensor[(11, 12, 7), uint16] {
  @func_498(%var_500, %var_501) /* ty=Tensor[(11, 12, 7), uint16] */
}

def @func_5967() -> (Tensor[(4, 5, 16), float32],) {
  %284 = fn () -> (Tensor[(4, 5, 16), float32],) {
    %282 = @func_5008() /* ty=(Tensor[(11, 11, 3), float64], Tensor[(4, 5, 16), float32]) */;
    %283 = %282.1;
    (%283,)
  };
  %284() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_7521() -> Tensor[(4, 5, 16), float32] {
  @func_7519() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_3810() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  @func_3808() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */
}

def @func_10884() -> Tensor[(4, 5, 16), float32] {
  @func_10882() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_4479() -> (Tensor[(4, 5, 16), float32],) {
  @func_4477() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_1384(%var_1383: Tensor[(14, 6, 10), bool]) -> (Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float32]) {
  %292 = fn (%var_1363: Tensor[(14, 6, 10), bool]) -> (Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float32]) {
    %285 = cast(%var_1363, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
    %286 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(14, 6, 10), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %287 = cast(meta[relay.Constant][19] /* ty=Tensor[(14, 6, 10), bool] */, dtype="bool") /* ty=Tensor[(14, 6, 10), bool] */;
    %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %289 = cast(%var_1363, dtype="float32") /* ty=Tensor[(14, 6, 10), float32] */;
    %290 = logical_and(%287, %288) /* ty=Tensor[(14, 6, 10), bool] */;
    %291 = atan(%289) /* ty=Tensor[(14, 6, 10), float32] */;
    (%290, %291)
  };
  %292(%var_1383) /* ty=(Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float32]) */
}

def @func_5483(%var_5481: Tensor[(3, 7, 7), uint64]) -> (Tensor[(3, 7, 7), uint64], Tensor[(4, 5, 16), float32]) {
  @func_5480(%var_5481) /* ty=(Tensor[(3, 7, 7), uint64], Tensor[(4, 5, 16), float32]) */
}

def @func_6668() -> (Tensor[(4, 5, 16), float32], Tensor[(15, 2, 16), float32], Tensor[(40, 12), float64]) {
  %293 = @func_4537() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), bool]) */;
  %294 = cast(meta[relay.Constant][20] /* ty=Tensor[(40, 12), float64] */, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %295 = reshape(%294, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %296 = %293.0;
  %297 = @func_5948(%295) /* ty=Tensor[(15, 2, 16), float32] */;
  (%296, %297, meta[relay.Constant][20] /* ty=Tensor[(40, 12), float64] */)
}

def @func_5506() -> Tensor[(4, 5, 16), float32] {
  %299 = fn () -> Tensor[(4, 5, 16), float32] {
    %298 = @func_4353() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %298.0
  };
  %299() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_7661() -> (Tensor[(4, 5, 16), float32],) {
  @func_7659() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_8981() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  @func_8979() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */
}

def @func_6568() -> (Tensor[(4, 5, 16), float64],) {
  %300 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %301 = %300.0;
  (%301,)
}

def @func_3560() -> Tensor[(4, 5, 16), float32] {
  %302 = @func_3447() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %302.0
}

def @func_5542() -> (Tensor[(4, 5, 16), float32],) {
  @func_5540() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_8979() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %303 = @func_8465() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */;
  %304 = @func_7519() /* ty=Tensor[(4, 5, 16), float32] */;
  %305 = %303.0;
  (%304, %305)
}

def @func_10423() -> (Tensor[(4, 5, 16), float64],) {
  %306 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %307 = %306.0;
  (%307,)
}

def @func_8675(%var_8644: int8, %var_8645: Tensor[(21), int8], %var_8654: Tensor[(1, 140), float32], %var_8657: Tensor[(81, 15), float64], %var_8658: Tensor[(144), float64], %var_8662: Tensor[(27, 9), float32]) -> (Tensor[(4, 5, 16), float32], Tensor[(1, 3, 7), int8], int8, Tensor[(21), int8], Tensor[(4, 5, 7), float64], Tensor[(1, 140), float32], Tensor[(70, 1), int32], Tensor[(700, 1), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(27, 9), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %308 = @func_7335() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(363), int8], Tensor[(363), int32]) */;
  %309 = cast(%var_8644, dtype="int8") /* ty=int8 */;
  %310 = cast(%var_8645, dtype="int8") /* ty=Tensor[(21), int8] */;
  %311 = reshape(%309, newshape=[]) /* ty=int8 */;
  %312 = reshape(%310, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), int8] */;
  %313 = cast(%var_8654, dtype="float32") /* ty=Tensor[(1, 140), float32] */;
  %314 = cast(meta[relay.Constant][21] /* ty=Tensor[(70, 1), int32] */, dtype="int32") /* ty=Tensor[(70, 1), int32] */;
  %315 = cast(meta[relay.Constant][22] /* ty=Tensor[(700, 1), int32] */, dtype="int32") /* ty=Tensor[(700, 1), int32] */;
  %316 = cast(%var_8657, dtype="float64") /* ty=Tensor[(81, 15), float64] */;
  %317 = cast(%var_8658, dtype="float64") /* ty=Tensor[(144), float64] */;
  %318 = cast(meta[relay.Constant][23] /* ty=Tensor[(27, 1), float32] */, dtype="float32") /* ty=Tensor[(27, 1), float32] */;
  %319 = reshape(%313, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
  %320 = reshape(%314, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %321 = reshape(%315, newshape=[5, 140]) /* ty=Tensor[(5, 140), int32] */;
  %322 = reshape(%316, newshape=[81, 15]) /* ty=Tensor[(81, 15), float64] */;
  %323 = reshape(%317, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %324 = reshape(%318, newshape=[27]) /* ty=Tensor[(27), float32] */;
  %325 = @func_1999(%319, %320, %321, %322, %323, %324) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(70), int32], Tensor[(5, 140), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(14, 6, 10), float32], Tensor[(27), float32], int8, Tensor[(924), uint16], Tensor[(194040, 1), uint16], Tensor[(4, 5, 7), float64]) */;
  %326 = cast(meta[relay.Constant][23] /* ty=Tensor[(27, 1), float32] */, dtype="float64") /* ty=Tensor[(27, 1), float64] */;
  %327 = cast(%var_8662, dtype="float64") /* ty=Tensor[(27, 9), float64] */;
  %328 = @func_8074() /* ty=(Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %329 = @func_7989() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %330 = %308.0;
  %331 = @func_5910(%311, %312) /* ty=Tensor[(1, 3, 7), int8] */;
  %332 = %325.10;
  %333 = mod(%326, %327) /* ty=Tensor[(27, 9), float64] */;
  %334 = %328.2;
  %335 = %329.0;
  (%330, %331, %var_8644, %var_8645, %332, %var_8654, meta[relay.Constant][21] /* ty=Tensor[(70, 1), int32] */, meta[relay.Constant][22] /* ty=Tensor[(700, 1), int32] */, %var_8657, %var_8658, %333, %334, %335)
}

def @func_6182() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) {
  %341 = fn () -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) {
    %336 = @func_6056() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
    %337 = @func_3608() /* ty=Tensor[(4, 5, 16), float32] */;
    %338 = cast(%337, dtype="float64") /* ty=Tensor[(4, 5, 16), float64] */;
    %339 = %336.1;
    %340 = log10(%338) /* ty=Tensor[(4, 5, 16), float64] */;
    (%339, %340)
  };
  %341() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */
}

def @func_315(%var_259: Tensor[(15, 9, 9), float64], %var_282: Tensor[(72, 2), float64]) -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(72, 2), float64], Tensor[(12, 6, 2), float32]) {
  %342 = cast(%var_259, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %343 = exp(%342) /* ty=Tensor[(15, 9, 9), float64] */;
  %344 = cast(%var_259, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %345 = shape_of(%343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %346 = cast(%343, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %348 = cast(%var_259, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
  %349 = cast(%var_282, dtype="float64") /* ty=Tensor[(72, 2), float64] */;
  %350 = reshape(%349, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), float64] */;
  %351 = @func_205(%350) /* ty=Tensor[(12, 6, 2), float64] */;
  %352 = cast(%351, dtype="float32") /* ty=Tensor[(12, 6, 2), float32] */;
  %353 = divide(%346, %347) /* ty=Tensor[(15, 9, 9), float64] */;
  %354 = tan(%348) /* ty=Tensor[(15, 9, 9), float32] */;
  %355 = erf(%352) /* ty=Tensor[(12, 6, 2), float32] */;
  (%353, %354, %var_282, %355)
}

def @func_8938(%var_8936: Tensor[(27, 1), float32], %var_8937: Tensor[(194040, 1), uint16]) -> (Tensor[(4, 5, 16), float32], Tensor[(9, 3), float32], Tensor[(27, 1), float32], Tensor[(924), uint16], Tensor[(194040, 1), uint16]) {
  %366 = fn (%var_8928: Tensor[(27, 1), float32], %var_8930: Tensor[(194040, 1), uint16]) -> (Tensor[(4, 5, 16), float32], Tensor[(9, 3), float32], Tensor[(27, 1), float32], Tensor[(924), uint16], Tensor[(194040, 1), uint16]) {
    %356 = @func_7989() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %357 = cast(%var_8928, dtype="float32") /* ty=Tensor[(27, 1), float32] */;
    %358 = cast(meta[relay.Constant][24] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %359 = cast(%var_8930, dtype="uint16") /* ty=Tensor[(194040, 1), uint16] */;
    %360 = reshape(%357, newshape=[9, 3]) /* ty=Tensor[(9, 3), float32] */;
    %361 = reshape(%358, newshape=[924]) /* ty=Tensor[(924), uint16] */;
    %362 = reshape(%359, newshape=[194040]) /* ty=Tensor[(194040), uint16] */;
    %363 = @func_2756(%360, %361, %362) /* ty=(Tensor[(4, 5, 16), float64], int8, Tensor[(9, 3), float32], Tensor[(924), uint16], Tensor[(194040), uint16]) */;
    %364 = %356.0;
    %365 = %363.2;
    (%364, %365, %var_8928, meta[relay.Constant][24] /* ty=Tensor[(924), uint16] */, %var_8930)
  };
  %366(%var_8936, %var_8937) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(9, 3), float32], Tensor[(27, 1), float32], Tensor[(924), uint16], Tensor[(194040, 1), uint16]) */
}

def @func_3120() -> (Tensor[(4, 5, 16), float32],) {
  %369 = fn () -> (Tensor[(4, 5, 16), float32],) {
    %367 = @func_2999() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %368 = %367.0;
    (%368,)
  };
  %369() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_3245(%var_3240: Tensor[(700), int32], %var_3241: Tensor[(3, 405), float64], %var_3242: Tensor[(144), float64], %var_3243: Tensor[(27, 1), float32], %var_3244: Tensor[(1287), uint8]) -> (Tensor[(4, 5, 16), float32], Tensor[(140), float32], Tensor[(7, 10), int32], Tensor[(700), int32], Tensor[(144), float64], Tensor[(27, 1), float32], Tensor[(3, 405), bool], Tensor[(11, 13, 9), uint8], Tensor[(1287), uint8], Tensor[(15, 11, 14), bool], int32) {
  @func_3238(%var_3240, %var_3241, %var_3242, %var_3243, %var_3244) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(140), float32], Tensor[(7, 10), int32], Tensor[(700), int32], Tensor[(144), float64], Tensor[(27, 1), float32], Tensor[(3, 405), bool], Tensor[(11, 13, 9), uint8], Tensor[(1287), uint8], Tensor[(15, 11, 14), bool], int32) */
}

def @func_3341() -> (Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(144), float64]) {
  @func_3339() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(144), float64]) */
}

def @func_7894(%var_7892: Tensor[(10, 13, 4), float32]) -> Tensor[(10, 13, 4), float32] {
  @func_7891(%var_7892) /* ty=Tensor[(10, 13, 4), float32] */
}

def @func_9263() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %373 = fn () -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
    %370 = @func_6470() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
    %371 = @func_3168() /* ty=Tensor[(4, 5, 16), float32] */;
    %372 = %370.0;
    (%371, %372)
  };
  %373() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */
}

def @func_10642(%var_10640: Tensor[(4, 16, 4), float32], %var_10641: Tensor[(924), uint16]) -> (Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(924), uint16], Tensor[(4, 16, 4), uint64]) {
  %389 = fn (%var_10600: Tensor[(4, 16, 4), float32], %var_10610: Tensor[(924), uint16]) -> (Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(924), uint16], Tensor[(4, 16, 4), uint64]) {
    %374 = cast(%var_10610, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %375 = reshape(%374, newshape=[924]) /* ty=Tensor[(924), uint16] */;
    %376 = @func_4732(%375) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(11, 12, 7), uint16], Tensor[(924), uint16], Tensor[(12, 6, 2), float64]) */;
    %377 = cast(%var_10600, dtype="float32") /* ty=Tensor[(4, 16, 4), float32] */;
    %378 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(4, 16, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %379 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 16, 4), float32] */, dtype="float32") /* ty=Tensor[(4, 16, 4), float32] */;
    %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %381 = divide(%379, %380) /* ty=Tensor[(4, 16, 4), float32] */;
    %382 = cast(%var_10600, dtype="uint64") /* ty=Tensor[(4, 16, 4), uint64] */;
    %383 = shape_of(%381, dtype="int32") /* ty=Tensor[(3), int32] */;
    %384 = cast(%381, dtype="uint64") /* ty=Tensor[(4, 16, 4), uint64] */;
    %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %386 = @func_9298() /* ty=Tensor[(4, 5, 16), float32] */;
    %387 = %376.3;
    %388 = left_shift(%384, %385) /* ty=Tensor[(4, 16, 4), uint64] */;
    (%386, %387, %var_10610, %388)
  };
  %389(%var_10640, %var_10641) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(924), uint16], Tensor[(4, 16, 4), uint64]) */
}

def @func_5668(%var_5656: int8, %var_5657: Tensor[(5, 42), int8], %var_5658: Tensor[(7, 132), uint16]) -> (Tensor[(4, 5, 16), float64], Tensor[(11, 13, 9), uint8], Tensor[(1287), uint8], Tensor[(14, 924, 15), uint16], Tensor[(5, 42), int8], Tensor[(7, 132), int32]) {
  %390 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %391 = cast(meta[relay.Constant][26] /* ty=Tensor[(1287), uint8] */, dtype="uint8") /* ty=Tensor[(1287), uint8] */;
  %392 = reshape(%391, newshape=[1287]) /* ty=Tensor[(1287), uint8] */;
  %393 = @func_4619(%392) /* ty=(Tensor[(144), float64], Tensor[(11, 13, 9), uint8], Tensor[(1287), uint8]) */;
  %394 = cast(%var_5656, dtype="int8") /* ty=int8 */;
  %395 = cast(%var_5657, dtype="int8") /* ty=Tensor[(5, 42), int8] */;
  %396 = cast(%var_5658, dtype="uint16") /* ty=Tensor[(7, 132), uint16] */;
  %397 = reshape(%394, newshape=[]) /* ty=int8 */;
  %398 = reshape(%395, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), int8] */;
  %399 = reshape(%396, newshape=[924, 1]) /* ty=Tensor[(924, 1), uint16] */;
  %400 = @func_626(%397, %398, %399) /* ty=(Tensor[(14, 1, 15), int8], Tensor[(11, 12, 7), uint16], Tensor[(14, 924, 15), uint16]) */;
  %401 = cast(%var_5658, dtype="int32") /* ty=Tensor[(7, 132), int32] */;
  %402 = cast(%var_5656, dtype="int32") /* ty=int32 */;
  %403 = %390.0;
  %404 = %393.1;
  %405 = %400.2;
  %406 = multiply(%401, %402) /* ty=Tensor[(7, 132), int32] */;
  (%403, %404, meta[relay.Constant][26] /* ty=Tensor[(1287), uint8] */, %405, %var_5657, %406)
}

def @func_10737() -> (Tensor[(4, 5, 16), float32],) {
  @func_10735() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_7337() -> (Tensor[(4, 5, 16), float32], Tensor[(363), int8], Tensor[(363), int32]) {
  @func_7335() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(363), int8], Tensor[(363), int32]) */
}

def @func_7767(%var_7765: Tensor[(363), int32]) -> (Tensor[(4, 5, 16), float32], Tensor[(363), uint32], Tensor[(363), bool], Tensor[(4, 5, 16), float32]) {
  @func_7764(%var_7765) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(363), uint32], Tensor[(363), bool], Tensor[(4, 5, 16), float32]) */
}

def @func_9227(%var_9223: Tensor[(108), float64], %var_9224: Tensor[(27), float32], %var_9225: Tensor[(924), uint16], %var_9226: Tensor[(194040), uint16]) -> (Tensor[(4, 5, 16), float32], Tensor[(144), float64], Tensor[(108), float64], Tensor[(196), int8], Tensor[(194040), uint16], Tensor[(27), float32], Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(21), int8], Tensor[(27, 45), float64], Tensor[(363, 1), int32]) {
  %433 = fn (%var_9149: Tensor[(108), float64], %var_9183: Tensor[(27), float32], %var_9184: Tensor[(924), uint16], %var_9185: Tensor[(194040), uint16]) -> (Tensor[(4, 5, 16), float32], Tensor[(144), float64], Tensor[(108), float64], Tensor[(196), int8], Tensor[(194040), uint16], Tensor[(27), float32], Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(21), int8], Tensor[(27, 45), float64], Tensor[(363, 1), int32]) {
    %407 = @func_4477() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %408 = cast(%var_9149, dtype="float64") /* ty=Tensor[(108), float64] */;
    %409 = cast(meta[relay.Constant][27] /* ty=Tensor[(196), int8] */, dtype="int8") /* ty=Tensor[(196), int8] */;
    %410 = reshape(%408, newshape=[3, 4, 9]) /* ty=Tensor[(3, 4, 9), float64] */;
    %411 = reshape(%409, newshape=[196]) /* ty=Tensor[(196), int8] */;
    %412 = @func_4083(%410, %411) /* ty=(Tensor[(3, 4, 9), float64], Tensor[(144), float64], int8, Tensor[(196), int8], Tensor[(144), float64]) */;
    %413 = cast(%var_9183, dtype="float32") /* ty=Tensor[(27), float32] */;
    %414 = cast(%var_9184, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %415 = cast(%var_9185, dtype="uint16") /* ty=Tensor[(194040), uint16] */;
    %416 = reshape(%413, newshape=[9, 3]) /* ty=Tensor[(9, 3), float32] */;
    %417 = reshape(%414, newshape=[924]) /* ty=Tensor[(924), uint16] */;
    %418 = reshape(%415, newshape=[194040]) /* ty=Tensor[(194040), uint16] */;
    %419 = @func_2756(%416, %417, %418) /* ty=(Tensor[(4, 5, 16), float64], int8, Tensor[(9, 3), float32], Tensor[(924), uint16], Tensor[(194040), uint16]) */;
    %420 = cast(%var_9183, dtype="float32") /* ty=Tensor[(27), float32] */;
    %421 = cast(meta[relay.Constant][27] /* ty=Tensor[(196), int8] */, dtype="int8") /* ty=Tensor[(196), int8] */;
    %422 = cast(meta[relay.Constant][28] /* ty=Tensor[(27, 45), float64] */, dtype="float64") /* ty=Tensor[(27, 45), float64] */;
    %423 = cast(meta[relay.Constant][29] /* ty=Tensor[(363, 1), int32] */, dtype="int32") /* ty=Tensor[(363, 1), int32] */;
    %424 = reshape(%420, newshape=[27]) /* ty=Tensor[(27), float32] */;
    %425 = reshape(%421, newshape=[196]) /* ty=Tensor[(196), int8] */;
    %426 = reshape(%422, newshape=[1215]) /* ty=Tensor[(1215), float64] */;
    %427 = reshape(%423, newshape=[363]) /* ty=Tensor[(363), int32] */;
    %428 = @func_8289(%424, %425, %426, %427) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(27), float32], Tensor[(924), uint16], Tensor[(4, 5, 16), float32], Tensor[(196), int8], Tensor[(1, 3, 7), int8], Tensor[(21), int8], Tensor[(194040), bool], Tensor[(194040), bool], Tensor[(363), int32], Tensor[(1001), uint16], Tensor[(70), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(363), int32]) */;
    %429 = %407.0;
    %430 = %412.1;
    %431 = %419.4;
    %432 = %428.6;
    (%429, %430, %var_9149, meta[relay.Constant][27] /* ty=Tensor[(196), int8] */, %431, %var_9183, %var_9184, %var_9185, %432, meta[relay.Constant][28] /* ty=Tensor[(27, 45), float64] */, meta[relay.Constant][29] /* ty=Tensor[(363, 1), int32] */)
  };
  %433(%var_9223, %var_9224, %var_9225, %var_9226) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(144), float64], Tensor[(108), float64], Tensor[(196), int8], Tensor[(194040), uint16], Tensor[(27), float32], Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(21), int8], Tensor[(27, 45), float64], Tensor[(363, 1), int32]) */
}

def @func_7245() -> (Tensor[(4, 5, 16), float32],) {
  %434 = @func_6579() /* ty=Tensor[(4, 5, 16), float32] */;
  (%434,)
}

def @func_3447() -> (Tensor[(4, 5, 16), float32],) {
  %435 = @func_3119() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %436 = %435.0;
  (%436,)
}

def @func_9681(%var_9679: Tensor[(1008), float64]) -> (Tensor[(4, 5, 16), float64], Tensor[(2, 72), float64], Tensor[(1008), float64], Tensor[(144), float64], int32) {
  @func_9678(%var_9679) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(2, 72), float64], Tensor[(1008), float64], Tensor[(144), float64], int32) */
}

def @func_10567() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %441 = fn () -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
    %437 = @func_6056() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
    %438 = @func_7245() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %439 = %437.0;
    %440 = %438.0;
    (%439, %440)
  };
  %441() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */
}

def @func_4621(%var_4620: Tensor[(1287), uint8]) -> (Tensor[(144), float64], Tensor[(11, 13, 9), uint8], Tensor[(1287), uint8]) {
  %447 = fn (%var_4617: Tensor[(1287), uint8]) -> (Tensor[(144), float64], Tensor[(11, 13, 9), uint8], Tensor[(1287), uint8]) {
    %442 = @func_3339() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(144), float64]) */;
    %443 = cast(%var_4617, dtype="uint8") /* ty=Tensor[(1287), uint8] */;
    %444 = reshape(%443, newshape=[11, 13, 9]) /* ty=Tensor[(11, 13, 9), uint8] */;
    %445 = %442.2;
    %446 = @func_1655(%444) /* ty=Tensor[(11, 13, 9), uint8] */;
    (%445, %446, %var_4617)
  };
  %447(%var_4620) /* ty=(Tensor[(144), float64], Tensor[(11, 13, 9), uint8], Tensor[(1287), uint8]) */
}

def @func_9300() -> Tensor[(4, 5, 16), float32] {
  @func_9298() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_10846() -> Tensor[(4, 5, 16), float32] {
  @func_10844() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_6210(%var_6208: Tensor[(16, 10, 9), uint16]) -> (Tensor[(16, 10, 9), bool], Tensor[(7, 13, 11), uint16], Tensor[(1001), uint16]) {
  @func_6207(%var_6208) /* ty=(Tensor[(16, 10, 9), bool], Tensor[(7, 13, 11), uint16], Tensor[(1001), uint16]) */
}

def @func_6581() -> Tensor[(4, 5, 16), float32] {
  @func_6579() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_3191() -> (Tensor[(4, 5, 16), float32],) {
  %449 = fn () -> (Tensor[(4, 5, 16), float32],) {
    %448 = @func_3168() /* ty=Tensor[(4, 5, 16), float32] */;
    (%448,)
  };
  %449() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_2834() -> Tensor[(4, 5, 16), float32] {
  %458 = fn () -> Tensor[(4, 5, 16), float32] {
    %450 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
    %451 = %450.0;
    %452 = cast(%451, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
    %453 = erf(%452) /* ty=Tensor[(4, 5, 16), float32] */;
    %454 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 5, 16), float32] */, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
    %455 = shape_of(%453, dtype="int32") /* ty=Tensor[(3), int32] */;
    %456 = cast(%453, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
    %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%456, %457) /* ty=Tensor[(4, 5, 16), float32] */
  };
  %458() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_3562() -> Tensor[(4, 5, 16), float32] {
  @func_3560() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_7026(%var_7022: Tensor[(70, 1), int32], %var_7023: Tensor[(3, 405), float64], %var_7024: Tensor[(144), float64], %var_7025: Tensor[(15, 9, 9), float64]) -> (Tensor[(4, 5, 16), float32], Tensor[(70, 1), int32], Tensor[(700), int32], Tensor[(3, 405), float64], Tensor[(144), float64], Tensor[(4, 5, 16), float64], Tensor[(363), int32], Tensor[(4, 5, 16), float32], Tensor[(11, 12, 7), uint16], Tensor[(924), uint16], Tensor[(15, 9, 9), int64]) {
  %486 = fn (%var_6969: Tensor[(70, 1), int32], %var_6971: Tensor[(3, 405), float64], %var_6972: Tensor[(144), float64], %var_7016: Tensor[(15, 9, 9), float64]) -> (Tensor[(4, 5, 16), float32], Tensor[(70, 1), int32], Tensor[(700), int32], Tensor[(3, 405), float64], Tensor[(144), float64], Tensor[(4, 5, 16), float64], Tensor[(363), int32], Tensor[(4, 5, 16), float32], Tensor[(11, 12, 7), uint16], Tensor[(924), uint16], Tensor[(15, 9, 9), int64]) {
    %459 = @func_6305() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %460 = @func_5828() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */;
    %461 = @func_4937() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */;
    %462 = cast(meta[relay.Constant][32] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %463 = cast(meta[relay.Constant][32] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %464 = reshape(%462, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), uint16] */;
    %465 = reshape(%463, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), uint16] */;
    %466 = cast(%var_6969, dtype="int32") /* ty=Tensor[(70, 1), int32] */;
    %467 = cast(meta[relay.Constant][31] /* ty=Tensor[(700), int32] */, dtype="int32") /* ty=Tensor[(700), int32] */;
    %468 = cast(%var_6971, dtype="float64") /* ty=Tensor[(3, 405), float64] */;
    %469 = cast(%var_6972, dtype="float64") /* ty=Tensor[(144), float64] */;
    %470 = reshape(%466, newshape=[1, 5, 14]) /* ty=Tensor[(1, 5, 14), int32] */;
    %471 = reshape(%467, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int32] */;
    %472 = reshape(%468, newshape=[1215]) /* ty=Tensor[(1215), float64] */;
    %473 = reshape(%469, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %474 = @func_1168(%470, %471, %472, %473) /* ty=(Tensor[(10, 5, 14), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(15, 9, 9), float64]) */;
    %475 = %474.3;
    %476 = cast(%var_7016, dtype="int64") /* ty=Tensor[(15, 9, 9), int64] */;
    %477 = shape_of(%475, dtype="int32") /* ty=Tensor[(3), int32] */;
    %478 = cast(%475, dtype="int64") /* ty=Tensor[(15, 9, 9), int64] */;
    %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %480 = %459.0;
    %481 = %460.1;
    %482 = %461.2;
    %483 = @func_5060() /* ty=Tensor[(4, 5, 16), float32] */;
    %484 = @func_498(%464, %465) /* ty=Tensor[(11, 12, 7), uint16] */;
    %485 = bitwise_or(%478, %479) /* ty=Tensor[(15, 9, 9), int64] */;
    (%480, %var_6969, meta[relay.Constant][31] /* ty=Tensor[(700), int32] */, %var_6971, %var_6972, %481, %482, %483, %484, meta[relay.Constant][32] /* ty=Tensor[(924), uint16] */, %485)
  };
  %486(%var_7022, %var_7023, %var_7024, %var_7025) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(70, 1), int32], Tensor[(700), int32], Tensor[(3, 405), float64], Tensor[(144), float64], Tensor[(4, 5, 16), float64], Tensor[(363), int32], Tensor[(4, 5, 16), float32], Tensor[(11, 12, 7), uint16], Tensor[(924), uint16], Tensor[(15, 9, 9), int64]) */
}

def @func_4477() -> (Tensor[(4, 5, 16), float32],) {
  %487 = @func_3808() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %488 = %487.1;
  (%488,)
}

def @func_1168(%var_1125: Tensor[(1, 5, 14), int32], %var_1126: Tensor[(10, 5, 14), int32], %var_1131: Tensor[(1215), float64], %var_1132: Tensor[(144), float64]) -> (Tensor[(10, 5, 14), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(15, 9, 9), float64]) {
  %489 = cast(%var_1125, dtype="int32") /* ty=Tensor[(1, 5, 14), int32] */;
  %490 = cast(%var_1126, dtype="int32") /* ty=Tensor[(10, 5, 14), int32] */;
  %491 = cast(%var_1131, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %492 = cast(%var_1132, dtype="float64") /* ty=Tensor[(144), float64] */;
  %493 = reshape(%491, newshape=[15, 9, 9]) /* ty=Tensor[(15, 9, 9), float64] */;
  %494 = reshape(%492, newshape=[72, 2]) /* ty=Tensor[(72, 2), float64] */;
  %495 = @func_315(%493, %494) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(72, 2), float64], Tensor[(12, 6, 2), float32]) */;
  %496 = %495.0;
  %497 = cast(%496, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %498 = multiply(%489, %490) /* ty=Tensor[(10, 5, 14), int32] */;
  %499 = asin(%497) /* ty=Tensor[(15, 9, 9), float64] */;
  (%498, %var_1131, %var_1132, %499)
}

def @func_4908(%var_4907: Tensor[(2340), uint32]) -> (Tensor[(4, 5, 16), float32], Tensor[(12, 13, 15), float64], Tensor[(180), uint32], Tensor[(2340), uint32], Tensor[(4, 5, 16), float64]) {
  %509 = fn (%var_4899: Tensor[(2340), uint32]) -> (Tensor[(4, 5, 16), float32], Tensor[(12, 13, 15), float64], Tensor[(180), uint32], Tensor[(2340), uint32], Tensor[(4, 5, 16), float64]) {
    %500 = cast(meta[relay.Constant][33] /* ty=Tensor[(180), uint32] */, dtype="uint32") /* ty=Tensor[(180), uint32] */;
    %501 = cast(%var_4899, dtype="uint32") /* ty=Tensor[(2340), uint32] */;
    %502 = reshape(%500, newshape=[12, 1, 15]) /* ty=Tensor[(12, 1, 15), uint32] */;
    %503 = reshape(%501, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), uint32] */;
    %504 = @func_4839(%502, %503) /* ty=(Tensor[(12, 13, 15), float64],) */;
    %505 = @func_4114() /* ty=(Tensor[(4, 5, 16), float64],) */;
    %506 = @func_3414() /* ty=Tensor[(4, 5, 16), float32] */;
    %507 = %504.0;
    %508 = %505.0;
    (%506, %507, meta[relay.Constant][33] /* ty=Tensor[(180), uint32] */, %var_4899, %508)
  };
  %509(%var_4907) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 13, 15), float64], Tensor[(180), uint32], Tensor[(2340), uint32], Tensor[(4, 5, 16), float64]) */
}

def @func_1308(%var_1306: Tensor[(15, 1, 13), float64]) -> Tensor[(15, 1, 13), float64] {
  @func_1305(%var_1306) /* ty=Tensor[(15, 1, 13), float64] */
}

def @func_6207(%var_6200: Tensor[(16, 10, 9), uint16]) -> (Tensor[(16, 10, 9), bool], Tensor[(7, 13, 11), uint16], Tensor[(1001), uint16]) {
  %510 = cast(%var_6200, dtype="bool") /* ty=Tensor[(16, 10, 9), bool] */;
  %511 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(16, 10, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(meta[relay.Constant][34] /* ty=Tensor[(16, 10, 9), uint16] */, dtype="bool") /* ty=Tensor[(16, 10, 9), bool] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %514 = cast(meta[relay.Constant][35] /* ty=Tensor[(1001), uint16] */, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %515 = reshape(%514, newshape=[1001]) /* ty=Tensor[(1001), uint16] */;
  %516 = @func_5279(%515) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(7, 13, 11), uint16], Tensor[(70), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(363), int32], Tensor[(1001), float64]) */;
  %517 = less_equal(%512, %513) /* ty=Tensor[(16, 10, 9), bool] */;
  %518 = %516.1;
  (%517, %518, meta[relay.Constant][35] /* ty=Tensor[(1001), uint16] */)
}

def @func_10502() -> (Tensor[(4, 5, 16), float32],) {
  @func_10500() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_7659() -> (Tensor[(4, 5, 16), float32],) {
  %519 = @func_4537() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), bool]) */;
  %520 = %519.0;
  (%520,)
}

def @func_7928() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %527 = fn () -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
    %521 = @func_3339() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(144), float64]) */;
    %522 = @func_6616() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */;
    %523 = @func_6305() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %524 = %521.0;
    %525 = %522.0;
    %526 = %523.0;
    (%524, %525, %526)
  };
  %527() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */
}

def @func_319(%var_317: Tensor[(15, 9, 9), float64], %var_318: Tensor[(72, 2), float64]) -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(72, 2), float64], Tensor[(12, 6, 2), float32]) {
  @func_315(%var_317, %var_318) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(72, 2), float64], Tensor[(12, 6, 2), float32]) */
}

def @func_7764(%var_7735: Tensor[(363), int32]) -> (Tensor[(4, 5, 16), float32], Tensor[(363), uint32], Tensor[(363), bool], Tensor[(4, 5, 16), float32]) {
  %528 = @func_5540() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %529 = @func_4937() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */;
  %530 = %529.2;
  %531 = cast(%var_7735, dtype="uint32") /* ty=Tensor[(363), uint32] */;
  %532 = shape_of(%530, dtype="int32") /* ty=Tensor[(1), int32] */;
  %533 = cast(%530, dtype="uint32") /* ty=Tensor[(363), uint32] */;
  %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %535 = cast(%var_7735, dtype="float32") /* ty=Tensor[(363), float32] */;
  %536 = acos(%535) /* ty=Tensor[(363), float32] */;
  %537 = cast(%536, dtype="float64") /* ty=Tensor[(363), float64] */;
  %538 = rsqrt(%537) /* ty=Tensor[(363), float64] */;
  %539 = cast(%538, dtype="bool") /* ty=Tensor[(363), bool] */;
  %540 = shape_of(%536, dtype="int32") /* ty=Tensor[(1), int32] */;
  %541 = cast(%536, dtype="bool") /* ty=Tensor[(363), bool] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?), bool] */;
  %543 = %528.0;
  %544 = cast(%543, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
  %545 = reshape(%544, newshape=[4, 5, 16]) /* ty=Tensor[(4, 5, 16), float32] */;
  %546 = @func_4034(%545) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64]) */;
  %547 = left_shift(%533, %534) /* ty=Tensor[(363), uint32] */;
  %548 = logical_and(%541, %542) /* ty=Tensor[(363), bool] */;
  %549 = %546.0;
  (%543, %547, %548, %549)
}

def @func_532(%var_530: Tensor[(7, 15, 9), int8]) -> Tensor[(7, 15, 9), int8] {
  @func_529(%var_530) /* ty=Tensor[(7, 15, 9), int8] */
}

def @func_5996() -> (Tensor[(11, 13, 9), uint16],) {
  %550 = @func_3941() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 13, 9), uint16]) */;
  %551 = %550.1;
  (%551,)
}

def @func_3000() -> (Tensor[(4, 5, 16), float32],) {
  %553 = fn () -> (Tensor[(4, 5, 16), float32],) {
    %552 = @func_2833() /* ty=Tensor[(4, 5, 16), float32] */;
    (%552,)
  };
  %553() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_10385(%var_10369: Tensor[(7, 14, 15), float32]) -> (Tensor[(7, 14, 15), float32],) {
  %554 = cast(%var_10369, dtype="float32") /* ty=Tensor[(7, 14, 15), float32] */;
  %555 = log2(%554) /* ty=Tensor[(7, 14, 15), float32] */;
  (%555,)
}

def @func_4036(%var_4035: Tensor[(4, 5, 16), float32]) -> (Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64]) {
  %565 = fn (%var_3989: Tensor[(4, 5, 16), float32]) -> (Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64]) {
    %556 = @func_2999() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %557 = %556.0;
    %558 = cast(%var_3989, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
    %559 = shape_of(%557, dtype="int32") /* ty=Tensor[(3), int32] */;
    %560 = cast(%557, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
    %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %562 = @func_3339() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(144), float64]) */;
    %563 = floor_mod(%560, %561) /* ty=Tensor[(4, 5, 16), float32] */;
    %564 = %562.1;
    (%563, %564)
  };
  %565(%var_4035) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64]) */
}

def @func_8368() -> Tensor[(11, 13, 9), uint16] {
  %566 = fn () -> Tensor[(11, 13, 9), uint16] {
    @func_6553() /* ty=Tensor[(11, 13, 9), uint16] */
  };
  %566() /* ty=Tensor[(11, 13, 9), uint16] */
}

def @func_7247() -> (Tensor[(4, 5, 16), float32],) {
  @func_7245() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_3416() -> Tensor[(4, 5, 16), float32] {
  @func_3414() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_4116() -> (Tensor[(4, 5, 16), float64],) {
  @func_4114() /* ty=(Tensor[(4, 5, 16), float64],) */
}

def @func_3155(%var_3153: Tensor[(4, 5, 16), float32]) -> Tensor[(4, 5, 16), uint32] {
  @func_3152(%var_3153) /* ty=Tensor[(4, 5, 16), uint32] */
}

def @func_4208(%var_4205: Tensor[(140), float32], %var_4206: Tensor[(54, 2), float64], %var_4207: Tensor[(196), int8]) -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 7), float64], Tensor[(140), float32], Tensor[(70), int32], Tensor[(700), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(27), float32], Tensor[(4, 5, 16), float32], Tensor[(196), int8], Tensor[(54, 2), float64], Tensor[(196), int8]) {
  %591 = fn (%var_4155: Tensor[(140), float32], %var_4195: Tensor[(54, 2), float64], %var_4196: Tensor[(196), int8]) -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 7), float64], Tensor[(140), float32], Tensor[(70), int32], Tensor[(700), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(27), float32], Tensor[(4, 5, 16), float32], Tensor[(196), int8], Tensor[(54, 2), float64], Tensor[(196), int8]) {
    %567 = cast(%var_4155, dtype="float32") /* ty=Tensor[(140), float32] */;
    %568 = cast(meta[relay.Constant][36] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
    %569 = cast(meta[relay.Constant][37] /* ty=Tensor[(700), int32] */, dtype="int32") /* ty=Tensor[(700), int32] */;
    %570 = cast(meta[relay.Constant][38] /* ty=Tensor[(1215), float64] */, dtype="float64") /* ty=Tensor[(1215), float64] */;
    %571 = cast(meta[relay.Constant][39] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %572 = cast(meta[relay.Constant][40] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
    %573 = reshape(%567, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
    %574 = reshape(%568, newshape=[70]) /* ty=Tensor[(70), int32] */;
    %575 = reshape(%569, newshape=[5, 140]) /* ty=Tensor[(5, 140), int32] */;
    %576 = reshape(%570, newshape=[81, 15]) /* ty=Tensor[(81, 15), float64] */;
    %577 = reshape(%571, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %578 = reshape(%572, newshape=[27]) /* ty=Tensor[(27), float32] */;
    %579 = @func_1999(%573, %574, %575, %576, %577, %578) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(70), int32], Tensor[(5, 140), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(14, 6, 10), float32], Tensor[(27), float32], int8, Tensor[(924), uint16], Tensor[(194040, 1), uint16], Tensor[(4, 5, 7), float64]) */;
    %580 = @func_3808() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
    %581 = cast(%var_4195, dtype="float64") /* ty=Tensor[(54, 2), float64] */;
    %582 = cast(%var_4196, dtype="int8") /* ty=Tensor[(196), int8] */;
    %583 = reshape(%581, newshape=[3, 4, 9]) /* ty=Tensor[(3, 4, 9), float64] */;
    %584 = reshape(%582, newshape=[196]) /* ty=Tensor[(196), int8] */;
    %585 = @func_4083(%583, %584) /* ty=(Tensor[(3, 4, 9), float64], Tensor[(144), float64], int8, Tensor[(196), int8], Tensor[(144), float64]) */;
    %586 = @func_3168() /* ty=Tensor[(4, 5, 16), float32] */;
    %587 = @func_3414() /* ty=Tensor[(4, 5, 16), float32] */;
    %588 = %579.10;
    %589 = %580.0;
    %590 = %585.3;
    (%586, %587, %588, %var_4155, meta[relay.Constant][36] /* ty=Tensor[(70), int32] */, meta[relay.Constant][37] /* ty=Tensor[(700), int32] */, meta[relay.Constant][38] /* ty=Tensor[(1215), float64] */, meta[relay.Constant][39] /* ty=Tensor[(144), float64] */, meta[relay.Constant][40] /* ty=Tensor[(27), float32] */, %589, %590, %var_4195, %var_4196)
  };
  %591(%var_4205, %var_4206, %var_4207) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 7), float64], Tensor[(140), float32], Tensor[(70), int32], Tensor[(700), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(27), float32], Tensor[(4, 5, 16), float32], Tensor[(196), int8], Tensor[(54, 2), float64], Tensor[(196), int8]) */
}

def @func_2006(%var_2000: Tensor[(4, 5, 7), float32], %var_2001: Tensor[(70), int32], %var_2002: Tensor[(5, 140), int32], %var_2003: Tensor[(81, 15), float64], %var_2004: Tensor[(144), float64], %var_2005: Tensor[(27), float32]) -> (Tensor[(15, 9, 9), float64], Tensor[(70), int32], Tensor[(5, 140), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(14, 6, 10), float32], Tensor[(27), float32], int8, Tensor[(924), uint16], Tensor[(194040, 1), uint16], Tensor[(4, 5, 7), float64]) {
  %619 = fn (%var_1955: Tensor[(4, 5, 7), float32], %var_1961: Tensor[(70), int32], %var_1962: Tensor[(5, 140), int32], %var_1963: Tensor[(81, 15), float64], %var_1964: Tensor[(144), float64], %var_1972: Tensor[(27), float32]) -> (Tensor[(15, 9, 9), float64], Tensor[(70), int32], Tensor[(5, 140), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(14, 6, 10), float32], Tensor[(27), float32], int8, Tensor[(924), uint16], Tensor[(194040, 1), uint16], Tensor[(4, 5, 7), float64]) {
    %592 = cast(%var_1961, dtype="int32") /* ty=Tensor[(70), int32] */;
    %593 = cast(%var_1962, dtype="int32") /* ty=Tensor[(5, 140), int32] */;
    %594 = cast(%var_1963, dtype="float64") /* ty=Tensor[(81, 15), float64] */;
    %595 = cast(%var_1964, dtype="float64") /* ty=Tensor[(144), float64] */;
    %596 = reshape(%592, newshape=[1, 5, 14]) /* ty=Tensor[(1, 5, 14), int32] */;
    %597 = reshape(%593, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int32] */;
    %598 = reshape(%594, newshape=[1215]) /* ty=Tensor[(1215), float64] */;
    %599 = reshape(%595, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %600 = @func_1168(%596, %597, %598, %599) /* ty=(Tensor[(10, 5, 14), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(15, 9, 9), float64]) */;
    %601 = cast(%var_1972, dtype="float32") /* ty=Tensor[(27), float32] */;
    %602 = cast(meta[relay.Constant][41] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %603 = cast(meta[relay.Constant][42] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %604 = cast(meta[relay.Constant][43] /* ty=Tensor[(194040, 1), uint16] */, dtype="uint16") /* ty=Tensor[(194040, 1), uint16] */;
    %605 = reshape(%601, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float32] */;
    %606 = reshape(%602, newshape=[]) /* ty=int8 */;
    %607 = reshape(%603, newshape=[924]) /* ty=Tensor[(924), uint16] */;
    %608 = reshape(%604, newshape=[14, 924, 15]) /* ty=Tensor[(14, 924, 15), uint16] */;
    %609 = @func_1713(%605, %606, %607, %608) /* ty=(Tensor[(9, 1, 3), float32], int8, Tensor[(35, 6), int8], Tensor[(924), uint16], Tensor[(14, 924, 15), int64], Tensor[(14, 6, 10), float32], Tensor[(12, 70), bool]) */;
    %610 = cast(%var_1955, dtype="float32") /* ty=Tensor[(4, 5, 7), float32] */;
    %611 = exp(%610) /* ty=Tensor[(4, 5, 7), float32] */;
    %612 = cast(%var_1955, dtype="float64") /* ty=Tensor[(4, 5, 7), float64] */;
    %613 = shape_of(%611, dtype="int32") /* ty=Tensor[(3), int32] */;
    %614 = cast(%611, dtype="float64") /* ty=Tensor[(4, 5, 7), float64] */;
    %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %616 = %600.3;
    %617 = %609.5;
    %618 = floor_divide(%614, %615) /* ty=Tensor[(4, 5, 7), float64] */;
    (%616, %var_1961, %var_1962, %var_1963, %var_1964, %617, %var_1972, meta[relay.Constant][41] /* ty=int8 */, meta[relay.Constant][42] /* ty=Tensor[(924), uint16] */, meta[relay.Constant][43] /* ty=Tensor[(194040, 1), uint16] */, %618)
  };
  %619(%var_2000, %var_2001, %var_2002, %var_2003, %var_2004, %var_2005) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(70), int32], Tensor[(5, 140), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(14, 6, 10), float32], Tensor[(27), float32], int8, Tensor[(924), uint16], Tensor[(194040, 1), uint16], Tensor[(4, 5, 7), float64]) */
}

def @func_5316() -> (Tensor[(4, 5, 16), float32],) {
  %621 = fn () -> (Tensor[(4, 5, 16), float32],) {
    %620 = @func_4265() /* ty=Tensor[(4, 5, 16), float32] */;
    (%620,)
  };
  %621() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_1305(%var_1302: Tensor[(15, 1, 13), float64]) -> Tensor[(15, 1, 13), float64] {
  %622 = cast(%var_1302, dtype="float64") /* ty=Tensor[(15, 1, 13), float64] */;
  sigmoid(%622) /* ty=Tensor[(15, 1, 13), float64] */
}

def @func_7877() -> (Tensor[(4, 5, 16), float32],) {
  %623 = @func_4412() /* ty=Tensor[(4, 5, 16), float32] */;
  (%623,)
}

def @func_3638(%var_3635: int8, %var_3636: Tensor[(1, 14, 14), int8], %var_3637: Tensor[(144), float64]) -> (Tensor[(?, 14, 14), uint8], Tensor[(144), float64], Tensor[(70), int32], Tensor[(700), int32], Tensor[(1215), float64], Tensor[(144), float64]) {
  %642 = fn (%var_3612: int8, %var_3613: Tensor[(1, 14, 14), int8], %var_3629: Tensor[(144), float64]) -> (Tensor[(?, 14, 14), uint8], Tensor[(144), float64], Tensor[(70), int32], Tensor[(700), int32], Tensor[(1215), float64], Tensor[(144), float64]) {
    %624 = cast(%var_3612, dtype="int8") /* ty=int8 */;
    %625 = cast(%var_3613, dtype="int8") /* ty=Tensor[(1, 14, 14), int8] */;
    %626 = right_shift(%624, %625) /* ty=Tensor[(1, 14, 14), int8] */;
    %627 = cast(%626, dtype="uint8") /* ty=Tensor[(1, 14, 14), uint8] */;
    %628 = shape_of(%var_3613, dtype="int32") /* ty=Tensor[(3), int32] */;
    %629 = cast(%var_3613, dtype="uint8") /* ty=Tensor[(1, 14, 14), uint8] */;
    %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %631 = cast(meta[relay.Constant][44] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
    %632 = cast(meta[relay.Constant][45] /* ty=Tensor[(700), int32] */, dtype="int32") /* ty=Tensor[(700), int32] */;
    %633 = cast(meta[relay.Constant][46] /* ty=Tensor[(1215), float64] */, dtype="float64") /* ty=Tensor[(1215), float64] */;
    %634 = cast(%var_3629, dtype="float64") /* ty=Tensor[(144), float64] */;
    %635 = reshape(%631, newshape=[1, 5, 14]) /* ty=Tensor[(1, 5, 14), int32] */;
    %636 = reshape(%632, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int32] */;
    %637 = reshape(%633, newshape=[1215]) /* ty=Tensor[(1215), float64] */;
    %638 = reshape(%634, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %639 = @func_1168(%635, %636, %637, %638) /* ty=(Tensor[(10, 5, 14), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(15, 9, 9), float64]) */;
    %640 = bitwise_xor(%629, %630) /* ty=Tensor[(?, 14, 14), uint8] */;
    %641 = %639.2;
    (%640, %641, meta[relay.Constant][44] /* ty=Tensor[(70), int32] */, meta[relay.Constant][45] /* ty=Tensor[(700), int32] */, meta[relay.Constant][46] /* ty=Tensor[(1215), float64] */, %var_3629)
  };
  %642(%var_3635, %var_3636, %var_3637) /* ty=(Tensor[(?, 14, 14), uint8], Tensor[(144), float64], Tensor[(70), int32], Tensor[(700), int32], Tensor[(1215), float64], Tensor[(144), float64]) */
}

def @func_8198() -> (Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32], Tensor[(1, 147), uint64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %651 = fn () -> (Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32], Tensor[(1, 147), uint64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
    %643 = @func_6181() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */;
    %644 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 147), uint64] */, dtype="uint64") /* ty=Tensor[(1, 147), uint64] */;
    %645 = reshape(%644, newshape=[3, 7, 7]) /* ty=Tensor[(3, 7, 7), uint64] */;
    %646 = @func_5480(%645) /* ty=(Tensor[(3, 7, 7), uint64], Tensor[(4, 5, 16), float32]) */;
    %647 = %643.1;
    %648 = %646.1;
    %649 = @func_4265() /* ty=Tensor[(4, 5, 16), float32] */;
    %650 = @func_3414() /* ty=Tensor[(4, 5, 16), float32] */;
    (%647, %648, meta[relay.Constant][47] /* ty=Tensor[(1, 147), uint64] */, %649, %650)
  };
  %651() /* ty=(Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32], Tensor[(1, 147), uint64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */
}

def @func_5614(%var_5612: Tensor[(196), int8]) -> (Tensor[(4, 5, 16), float32], Tensor[(144), float64], int8, Tensor[(196), int8], Tensor[(144), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  @func_5611(%var_5612) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(144), float64], int8, Tensor[(196), int8], Tensor[(144), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */
}

def @func_7064() -> Tensor[(4, 5, 16), float32] {
  %653 = fn () -> Tensor[(4, 5, 16), float32] {
    %652 = @func_6668() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(15, 2, 16), float32], Tensor[(40, 12), float64]) */;
    %652.0
  };
  %653() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_4842(%var_4840: Tensor[(12, 1, 15), uint32], %var_4841: Tensor[(12, 13, 15), uint32]) -> (Tensor[(12, 13, 15), float64],) {
  %659 = fn (%var_4802: Tensor[(12, 1, 15), uint32], %var_4803: Tensor[(12, 13, 15), uint32]) -> (Tensor[(12, 13, 15), float64],) {
    %654 = cast(%var_4802, dtype="uint32") /* ty=Tensor[(12, 1, 15), uint32] */;
    %655 = cast(%var_4803, dtype="uint32") /* ty=Tensor[(12, 13, 15), uint32] */;
    %656 = logical_xor(%654, %655) /* ty=Tensor[(12, 13, 15), uint32] */;
    %657 = cast(%656, dtype="float64") /* ty=Tensor[(12, 13, 15), float64] */;
    %658 = asin(%657) /* ty=Tensor[(12, 13, 15), float64] */;
    (%658,)
  };
  %659(%var_4840, %var_4841) /* ty=(Tensor[(12, 13, 15), float64],) */
}

def @func_3152(%var_3130: Tensor[(4, 5, 16), float32]) -> Tensor[(4, 5, 16), uint32] {
  %660 = @func_2833() /* ty=Tensor[(4, 5, 16), float32] */;
  %661 = cast(%var_3130, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
  %662 = shape_of(%660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%660, dtype="float32") /* ty=Tensor[(4, 5, 16), float32] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %665 = maximum(%663, %664) /* ty=Tensor[(4, 5, 16), float32] */;
  %666 = cast(%665, dtype="uint32") /* ty=Tensor[(4, 5, 16), uint32] */;
  %667 = shape_of(%660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%660, dtype="uint32") /* ty=Tensor[(4, 5, 16), uint32] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%668, %669) /* ty=Tensor[(4, 5, 16), uint32] */
}

def @func_9489() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %674 = fn () -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
    %670 = @func_7877() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %671 = @func_5540() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %672 = %670.0;
    %673 = %671.0;
    (%672, %673)
  };
  %674() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */
}

def @func_8074() -> (Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %675 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %676 = @func_2999() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %677 = @func_4477() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %678 = %675.0;
  %679 = %676.0;
  %680 = %677.0;
  (%678, %679, %680)
}

def @func_8760(%var_8758: int32) -> (Tensor[(15, 11, 14), bool], int32, Tensor[(16, 7, 3), float64], Tensor[(4, 5, 16), float32]) {
  @func_8757(%var_8758) /* ty=(Tensor[(15, 11, 14), bool], int32, Tensor[(16, 7, 3), float64], Tensor[(4, 5, 16), float32]) */
}

def @func_5709(%var_5707: Tensor[(9, 7, 10), bool]) -> (Tensor[(9, 7, 10), bool], Tensor[(9, 7, 10), float64]) {
  @func_5706(%var_5707) /* ty=(Tensor[(9, 7, 10), bool], Tensor[(9, 7, 10), float64]) */
}

def @func_3339() -> (Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(144), float64]) {
  %681 = @func_3119() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %682 = cast(meta[relay.Constant][48] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %683 = reshape(%682, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), float64] */;
  %684 = %681.0;
  %685 = @func_205(%683) /* ty=Tensor[(12, 6, 2), float64] */;
  (%684, %685, meta[relay.Constant][48] /* ty=Tensor[(144), float64] */)
}

def @func_9653(%var_9521: Tensor[(27), float32], %var_9582: Tensor[(196), int8]) -> (Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(27), float32], Tensor[(194040), uint16], Tensor[(11, 13, 9), uint32], Tensor[(4, 5, 16), float32], Tensor[(144), float64], Tensor[(1001), uint16], Tensor[(27), float32], Tensor[(196), int8], Tensor[(1215), float64], Tensor[(33, 11), int32], Tensor[(81, 15), float64], Tensor[(11, 13, 9), uint16], Tensor[(143, 9), int64], Tensor[(143, 9), float64], Tensor[(143, 9), float64]) {
  %686 = @func_5358() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(4, 5, 16), float32]) */;
  %687 = cast(meta[relay.Constant][49] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %688 = reshape(%687, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %689 = @func_4732(%688) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(11, 12, 7), uint16], Tensor[(924), uint16], Tensor[(12, 6, 2), float64]) */;
  %690 = cast(%var_9521, dtype="float32") /* ty=Tensor[(27), float32] */;
  %691 = cast(meta[relay.Constant][49] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %692 = cast(meta[relay.Constant][50] /* ty=Tensor[(194040), uint16] */, dtype="uint16") /* ty=Tensor[(194040), uint16] */;
  %693 = reshape(%690, newshape=[9, 3]) /* ty=Tensor[(9, 3), float32] */;
  %694 = reshape(%691, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %695 = reshape(%692, newshape=[194040]) /* ty=Tensor[(194040), uint16] */;
  %696 = @func_2756(%693, %694, %695) /* ty=(Tensor[(4, 5, 16), float64], int8, Tensor[(9, 3), float32], Tensor[(924), uint16], Tensor[(194040), uint16]) */;
  %697 = cast(meta[relay.Constant][51] /* ty=Tensor[(143, 9), uint16] */, dtype="uint16") /* ty=Tensor[(143, 9), uint16] */;
  %698 = reshape(%697, newshape=[11, 13, 9]) /* ty=Tensor[(11, 13, 9), uint16] */;
  %699 = @func_7245() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %700 = cast(meta[relay.Constant][52] /* ty=Tensor[(1001), uint16] */, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %701 = reshape(%700, newshape=[1001]) /* ty=Tensor[(1001), uint16] */;
  %702 = @func_5279(%701) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(7, 13, 11), uint16], Tensor[(70), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(363), int32], Tensor[(1001), float64]) */;
  %703 = cast(%var_9521, dtype="float32") /* ty=Tensor[(27), float32] */;
  %704 = cast(%var_9582, dtype="int8") /* ty=Tensor[(196), int8] */;
  %705 = cast(meta[relay.Constant][53] /* ty=Tensor[(1215), float64] */, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %706 = cast(meta[relay.Constant][54] /* ty=Tensor[(33, 11), int32] */, dtype="int32") /* ty=Tensor[(33, 11), int32] */;
  %707 = reshape(%703, newshape=[27]) /* ty=Tensor[(27), float32] */;
  %708 = reshape(%704, newshape=[196]) /* ty=Tensor[(196), int8] */;
  %709 = reshape(%705, newshape=[1215]) /* ty=Tensor[(1215), float64] */;
  %710 = reshape(%706, newshape=[363]) /* ty=Tensor[(363), int32] */;
  %711 = @func_8289(%707, %708, %709, %710) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(27), float32], Tensor[(924), uint16], Tensor[(4, 5, 16), float32], Tensor[(196), int8], Tensor[(1, 3, 7), int8], Tensor[(21), int8], Tensor[(194040), bool], Tensor[(194040), bool], Tensor[(363), int32], Tensor[(1001), uint16], Tensor[(70), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(363), int32]) */;
  %712 = cast(meta[relay.Constant][52] /* ty=Tensor[(1001), uint16] */, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %713 = reshape(%712, newshape=[1001]) /* ty=Tensor[(1001), uint16] */;
  %714 = @func_5279(%713) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(7, 13, 11), uint16], Tensor[(70), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(363), int32], Tensor[(1001), float64]) */;
  %715 = cast(meta[relay.Constant][51] /* ty=Tensor[(143, 9), uint16] */, dtype="float32") /* ty=Tensor[(143, 9), float32] */;
  %716 = log10(%715) /* ty=Tensor[(143, 9), float32] */;
  %717 = cast(meta[relay.Constant][51] /* ty=Tensor[(143, 9), uint16] */, dtype="int64") /* ty=Tensor[(143, 9), int64] */;
  %718 = shape_of(%716, dtype="int32") /* ty=Tensor[(2), int32] */;
  %719 = cast(%716, dtype="int64") /* ty=Tensor[(143, 9), int64] */;
  %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %721 = cast(%716, dtype="float64") /* ty=Tensor[(143, 9), float64] */;
  %722 = cast(%716, dtype="float64") /* ty=Tensor[(143, 9), float64] */;
  %723 = %686.0;
  %724 = %689.3;
  %725 = %696.4;
  %726 = @func_4245(%698) /* ty=Tensor[(11, 13, 9), uint32] */;
  %727 = %699.0;
  %728 = %702.4;
  %729 = %711.1;
  %730 = %714.3;
  %731 = @func_6553() /* ty=Tensor[(11, 13, 9), uint16] */;
  %732 = add(%719, %720) /* ty=Tensor[(143, 9), int64] */;
  %733 = log(%721) /* ty=Tensor[(143, 9), float64] */;
  %734 = sinh(%722) /* ty=Tensor[(143, 9), float64] */;
  (%723, %724, meta[relay.Constant][49] /* ty=Tensor[(924), uint16] */, %725, %var_9521, meta[relay.Constant][50] /* ty=Tensor[(194040), uint16] */, %726, %727, %728, meta[relay.Constant][52] /* ty=Tensor[(1001), uint16] */, %729, %var_9582, meta[relay.Constant][53] /* ty=Tensor[(1215), float64] */, meta[relay.Constant][54] /* ty=Tensor[(33, 11), int32] */, %730, %731, %732, %733, %734)
}

def @func_5480(%var_5468: Tensor[(3, 7, 7), uint64]) -> (Tensor[(3, 7, 7), uint64], Tensor[(4, 5, 16), float32]) {
  %735 = cast(meta[relay.Constant][55] /* ty=Tensor[(3, 7, 7), uint64] */, dtype="uint64") /* ty=Tensor[(3, 7, 7), uint64] */;
  %736 = shape_of(%var_5468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %737 = cast(%var_5468, dtype="uint64") /* ty=Tensor[(3, 7, 7), uint64] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %739 = add(%737, %738) /* ty=Tensor[(3, 7, 7), uint64] */;
  %740 = @func_3414() /* ty=Tensor[(4, 5, 16), float32] */;
  (%739, %740)
}

def @func_3449() -> (Tensor[(4, 5, 16), float32],) {
  @func_3447() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_2493(%var_2486: Tensor[(7, 13, 11), uint16], %var_2487: Tensor[(7, 13, 11), uint16], %var_2488: Tensor[(70), int32], %var_2489: Tensor[(3, 405), float64], %var_2490: Tensor[(144), float64], %var_2491: Tensor[(363), int32], %var_2492: Tensor[(7, 13, 11), uint16]) -> (Tensor[(7, 13, 11), uint16], Tensor[(1215), float64], Tensor[(70), int32], Tensor[(10, 70), int32], Tensor[(3, 405), float64], Tensor[(144), float64], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(7, 13, 11), bool]) {
  @func_2484(%var_2486, %var_2487, %var_2488, %var_2489, %var_2490, %var_2491, %var_2492) /* ty=(Tensor[(7, 13, 11), uint16], Tensor[(1215), float64], Tensor[(70), int32], Tensor[(10, 70), int32], Tensor[(3, 405), float64], Tensor[(144), float64], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(7, 13, 11), bool]) */
}

def @func_3941() -> (Tensor[(4, 5, 16), float32], Tensor[(11, 13, 9), uint16]) {
  %741 = @func_3119() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %742 = cast(meta[relay.Constant][56] /* ty=Tensor[(1287), uint8] */, dtype="uint8") /* ty=Tensor[(1287), uint8] */;
  %743 = reshape(%742, newshape=[11, 13, 9]) /* ty=Tensor[(11, 13, 9), uint8] */;
  %744 = @func_1655(%743) /* ty=Tensor[(11, 13, 9), uint8] */;
  %745 = cast(%744, dtype="float32") /* ty=Tensor[(11, 13, 9), float32] */;
  %746 = sinh(%745) /* ty=Tensor[(11, 13, 9), float32] */;
  %747 = cast(meta[relay.Constant][56] /* ty=Tensor[(1287), uint8] */, dtype="uint16") /* ty=Tensor[(1287), uint16] */;
  %748 = shape_of(%746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %749 = cast(%746, dtype="uint16") /* ty=Tensor[(11, 13, 9), uint16] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %751 = %741.0;
  %752 = right_shift(%749, %750) /* ty=Tensor[(11, 13, 9), uint16] */;
  (%751, %752)
}

def @func_10081() -> Tensor[(4, 5, 16), float32] {
  %753 = @func_6785() /* ty=(Tensor[(4, 5, 16), float64], Tensor[(9, 7, 10), float64], Tensor[(4, 5, 16), float32], Tensor[(630), float64]) */;
  %753.2
}

def @func_7989() -> (Tensor[(4, 5, 16), float32],) {
  %754 = @func_3608() /* ty=Tensor[(4, 5, 16), float32] */;
  (%754,)
}

def @func_8338() -> (Tensor[(4, 5, 16), bool], Tensor[(10, 13, 4), float32], Tensor[(260, 2), float32]) {
  %760 = fn () -> (Tensor[(4, 5, 16), bool], Tensor[(10, 13, 4), float32], Tensor[(260, 2), float32]) {
    %755 = @func_4537() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), bool]) */;
    %756 = cast(meta[relay.Constant][57] /* ty=Tensor[(260, 2), float32] */, dtype="float32") /* ty=Tensor[(260, 2), float32] */;
    %757 = reshape(%756, newshape=[10, 13, 4]) /* ty=Tensor[(10, 13, 4), float32] */;
    %758 = %755.1;
    %759 = @func_7891(%757) /* ty=Tensor[(10, 13, 4), float32] */;
    (%758, %759, meta[relay.Constant][57] /* ty=Tensor[(260, 2), float32] */)
  };
  %760() /* ty=(Tensor[(4, 5, 16), bool], Tensor[(10, 13, 4), float32], Tensor[(260, 2), float32]) */
}

def @func_10752() -> Tensor[(11, 13, 9), uint16] {
  %762 = fn () -> Tensor[(11, 13, 9), uint16] {
    %761 = @func_3941() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 13, 9), uint16]) */;
    %761.1
  };
  %762() /* ty=Tensor[(11, 13, 9), uint16] */
}

def @func_9678(%var_9672: Tensor[(1008), float64]) -> (Tensor[(4, 5, 16), float64], Tensor[(2, 72), float64], Tensor[(1008), float64], Tensor[(144), float64], int32) {
  %763 = @func_8554() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %764 = cast(%var_9672, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %765 = cast(meta[relay.Constant][58] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %766 = cast(9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %767 = reshape(%764, newshape=[12, 14, 6]) /* ty=Tensor[(12, 14, 6), float64] */;
  %768 = reshape(%765, newshape=[2, 72]) /* ty=Tensor[(2, 72), float64] */;
  %769 = reshape(%766, newshape=[]) /* ty=int32 */;
  %770 = @func_1478(%767, %768, %769) /* ty=(Tensor[(12, 14, 6), float64], Tensor[(12, 6, 2), float64], Tensor[(2, 72), float64], Tensor[(15, 11, 14), bool], int32) */;
  %771 = %763.0;
  %772 = %770.2;
  (%771, %772, %var_9672, meta[relay.Constant][58] /* ty=Tensor[(144), float64] */, 9 /* ty=int32 */)
}

def @func_7519() -> Tensor[(4, 5, 16), float32] {
  @func_5060() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_8683(%var_8677: int8, %var_8678: Tensor[(21), int8], %var_8679: Tensor[(1, 140), float32], %var_8680: Tensor[(81, 15), float64], %var_8681: Tensor[(144), float64], %var_8682: Tensor[(27, 9), float32]) -> (Tensor[(4, 5, 16), float32], Tensor[(1, 3, 7), int8], int8, Tensor[(21), int8], Tensor[(4, 5, 7), float64], Tensor[(1, 140), float32], Tensor[(70, 1), int32], Tensor[(700, 1), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(27, 9), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  @func_8675(%var_8677, %var_8678, %var_8679, %var_8680, %var_8681, %var_8682) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(1, 3, 7), int8], int8, Tensor[(21), int8], Tensor[(4, 5, 7), float64], Tensor[(1, 140), float32], Tensor[(70, 1), int32], Tensor[(700, 1), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(27, 9), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */
}

def @func_9440() -> Tensor[(4, 5, 16), float32] {
  @func_9438() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_7991() -> (Tensor[(4, 5, 16), float32],) {
  @func_7989() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_5673(%var_5670: int8, %var_5671: Tensor[(5, 42), int8], %var_5672: Tensor[(7, 132), uint16]) -> (Tensor[(4, 5, 16), float64], Tensor[(11, 13, 9), uint8], Tensor[(1287), uint8], Tensor[(14, 924, 15), uint16], Tensor[(5, 42), int8], Tensor[(7, 132), int32]) {
  @func_5668(%var_5670, %var_5671, %var_5672) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(11, 13, 9), uint8], Tensor[(1287), uint8], Tensor[(14, 924, 15), uint16], Tensor[(5, 42), int8], Tensor[(7, 132), int32]) */
}

def @func_3414() -> Tensor[(4, 5, 16), float32] {
  %773 = @func_3190() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %773.0
}

def @func_4922(%var_4920: Tensor[(3, 15, 12), int32], %var_4921: Tensor[(3, 15, 12), int32]) -> Tensor[(3, 15, 12), int32] {
  @func_4918(%var_4920, %var_4921) /* ty=Tensor[(3, 15, 12), int32] */
}

def @func_5948(%var_5924: Tensor[(15, 2, 16), float64]) -> Tensor[(15, 2, 16), float32] {
  %774 = cast(%var_5924, dtype="float64") /* ty=Tensor[(15, 2, 16), float64] */;
  %775 = rsqrt(%774) /* ty=Tensor[(15, 2, 16), float64] */;
  %776 = cast(%var_5924, dtype="float32") /* ty=Tensor[(15, 2, 16), float32] */;
  %777 = shape_of(%775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %778 = cast(%775, dtype="float32") /* ty=Tensor[(15, 2, 16), float32] */;
  %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%778, %779) /* ty=Tensor[(15, 2, 16), float32] */
}

def @func_4734(%var_4733: Tensor[(924), uint16]) -> (Tensor[(4, 5, 16), float64], Tensor[(11, 12, 7), uint16], Tensor[(924), uint16], Tensor[(12, 6, 2), float64]) {
  %789 = fn (%var_4720: Tensor[(924), uint16]) -> (Tensor[(4, 5, 16), float64], Tensor[(11, 12, 7), uint16], Tensor[(924), uint16], Tensor[(12, 6, 2), float64]) {
    %780 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
    %781 = cast(%var_4720, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %782 = cast(%var_4720, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %783 = reshape(%781, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), uint16] */;
    %784 = reshape(%782, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), uint16] */;
    %785 = @func_3339() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(144), float64]) */;
    %786 = %780.0;
    %787 = @func_498(%783, %784) /* ty=Tensor[(11, 12, 7), uint16] */;
    %788 = %785.1;
    (%786, %787, %var_4720, %788)
  };
  %789(%var_4733) /* ty=(Tensor[(4, 5, 16), float64], Tensor[(11, 12, 7), uint16], Tensor[(924), uint16], Tensor[(12, 6, 2), float64]) */
}

def @func_7335() -> (Tensor[(4, 5, 16), float32], Tensor[(363), int8], Tensor[(363), int32]) {
  %790 = @func_5448() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %791 = cast(meta[relay.Constant][59] /* ty=Tensor[(363), int32] */, dtype="int32") /* ty=Tensor[(363), int32] */;
  %792 = cast(meta[relay.Constant][59] /* ty=Tensor[(363), int32] */, dtype="float64") /* ty=Tensor[(363), float64] */;
  %793 = reshape(%791, newshape=[363]) /* ty=Tensor[(363), int32] */;
  %794 = reshape(%792, newshape=[363]) /* ty=Tensor[(363), float64] */;
  %795 = @func_7163(%793, %794) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(363), int8], Tensor[(363), int16], Tensor[(363), int32], Tensor[(363), float64]) */;
  %796 = %790.0;
  %797 = %795.2;
  (%796, %797, meta[relay.Constant][59] /* ty=Tensor[(363), int32] */)
}

def @func_6872(%var_6870: Tensor[(12, 12, 10), float64], %var_6871: Tensor[(12, 12, 10), float64]) -> Tensor[(12, 12, 10), float64] {
  %802 = fn (%var_6864: Tensor[(12, 12, 10), float64], %var_6865: Tensor[(12, 12, 10), float64]) -> Tensor[(12, 12, 10), float64] {
    %798 = cast(%var_6865, dtype="float64") /* ty=Tensor[(12, 12, 10), float64] */;
    %799 = shape_of(%var_6864, dtype="int32") /* ty=Tensor[(3), int32] */;
    %800 = cast(%var_6864, dtype="float64") /* ty=Tensor[(12, 12, 10), float64] */;
    %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_mod(%800, %801) /* ty=Tensor[(12, 12, 10), float64] */
  };
  %802(%var_6870, %var_6871) /* ty=Tensor[(12, 12, 10), float64] */
}

def @func_9422(%var_9421: Tensor[(144), float64]) -> (Tensor[(4, 5, 16), float32], Tensor[(70), int32], int8, Tensor[(1, 196), int8], Tensor[(144), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %817 = fn (%var_9391: Tensor[(144), float64]) -> (Tensor[(4, 5, 16), float32], Tensor[(70), int32], int8, Tensor[(1, 196), int8], Tensor[(144), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
    %803 = @func_7245() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %804 = cast(meta[relay.Constant][60] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %805 = cast(meta[relay.Constant][61] /* ty=Tensor[(1, 196), int8] */, dtype="int8") /* ty=Tensor[(1, 196), int8] */;
    %806 = cast(%var_9391, dtype="float64") /* ty=Tensor[(144), float64] */;
    %807 = reshape(%804, newshape=[]) /* ty=int8 */;
    %808 = reshape(%805, newshape=[1, 14, 14]) /* ty=Tensor[(1, 14, 14), int8] */;
    %809 = reshape(%806, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %810 = @func_3634(%807, %808, %809) /* ty=(Tensor[(?, 14, 14), uint8], Tensor[(144), float64], Tensor[(70), int32], Tensor[(700), int32], Tensor[(1215), float64], Tensor[(144), float64]) */;
    %811 = @func_7927() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
    %812 = @func_5540() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %813 = %803.0;
    %814 = %810.2;
    %815 = %811.2;
    %816 = %812.0;
    (%813, %814, meta[relay.Constant][60] /* ty=int8 */, meta[relay.Constant][61] /* ty=Tensor[(1, 196), int8] */, %var_9391, %815, %816)
  };
  %817(%var_9421) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(70), int32], int8, Tensor[(1, 196), int8], Tensor[(144), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */
}

def @func_8554() -> (Tensor[(4, 5, 16), float64],) {
  %818 = @func_2999() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %819 = %818.0;
  %820 = cast(%819, dtype="float64") /* ty=Tensor[(4, 5, 16), float64] */;
  %821 = sqrt(%820) /* ty=Tensor[(4, 5, 16), float64] */;
  (%821,)
}

def @func_8466() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) {
  %827 = fn () -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) {
    %822 = @func_6668() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(15, 2, 16), float32], Tensor[(40, 12), float64]) */;
    %823 = @func_6568() /* ty=(Tensor[(4, 5, 16), float64],) */;
    %824 = @func_3168() /* ty=Tensor[(4, 5, 16), float32] */;
    %825 = %822.0;
    %826 = %823.0;
    (%824, %825, %826)
  };
  %827() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */
}

def @func_9438() -> Tensor[(4, 5, 16), float32] {
  %828 = @func_7877() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %828.0
}

def @func_2484(%var_2402: Tensor[(7, 13, 11), uint16], %var_2403: Tensor[(7, 13, 11), uint16], %var_2422: Tensor[(70), int32], %var_2424: Tensor[(3, 405), float64], %var_2425: Tensor[(144), float64], %var_2434: Tensor[(363), int32], %var_2476: Tensor[(7, 13, 11), uint16]) -> (Tensor[(7, 13, 11), uint16], Tensor[(1215), float64], Tensor[(70), int32], Tensor[(10, 70), int32], Tensor[(3, 405), float64], Tensor[(144), float64], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(7, 13, 11), bool]) {
  %829 = cast(%var_2403, dtype="uint16") /* ty=Tensor[(7, 13, 11), uint16] */;
  %830 = shape_of(%var_2402, dtype="int32") /* ty=Tensor[(3), int32] */;
  %831 = cast(%var_2402, dtype="uint16") /* ty=Tensor[(7, 13, 11), uint16] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %833 = cast(%var_2422, dtype="int32") /* ty=Tensor[(70), int32] */;
  %834 = cast(meta[relay.Constant][62] /* ty=Tensor[(10, 70), int32] */, dtype="int32") /* ty=Tensor[(10, 70), int32] */;
  %835 = cast(%var_2424, dtype="float64") /* ty=Tensor[(3, 405), float64] */;
  %836 = cast(%var_2425, dtype="float64") /* ty=Tensor[(144), float64] */;
  %837 = reshape(%833, newshape=[1, 5, 14]) /* ty=Tensor[(1, 5, 14), int32] */;
  %838 = reshape(%834, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int32] */;
  %839 = reshape(%835, newshape=[1215]) /* ty=Tensor[(1215), float64] */;
  %840 = reshape(%836, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %841 = @func_1168(%837, %838, %839, %840) /* ty=(Tensor[(10, 5, 14), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(15, 9, 9), float64]) */;
  %842 = cast(%var_2434, dtype="int32") /* ty=Tensor[(363), int32] */;
  %843 = cast(%var_2434, dtype="int32") /* ty=Tensor[(363), int32] */;
  %844 = reshape(%842, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), int32] */;
  %845 = reshape(%843, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), int32] */;
  %846 = @func_2066(%844, %845) /* ty=(Tensor[(11, 11, 3), float64],) */;
  %847 = cast(%var_2476, dtype="bool") /* ty=Tensor[(7, 13, 11), bool] */;
  %848 = shape_of(%var_2403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %849 = cast(%var_2403, dtype="bool") /* ty=Tensor[(7, 13, 11), bool] */;
  %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %851 = logical_xor(%831, %832) /* ty=Tensor[(7, 13, 11), uint16] */;
  %852 = %841.1;
  %853 = %846.0;
  %854 = logical_or(%849, %850) /* ty=Tensor[(7, 13, 11), bool] */;
  (%851, %852, %var_2422, meta[relay.Constant][62] /* ty=Tensor[(10, 70), int32] */, %var_2424, %var_2425, %853, %var_2434, %854)
}

def @func_4412() -> Tensor[(4, 5, 16), float32] {
  @func_3560() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_5951(%var_5949: Tensor[(15, 2, 16), float64]) -> Tensor[(15, 2, 16), float32] {
  @func_5948(%var_5949) /* ty=Tensor[(15, 2, 16), float32] */
}

def @func_4562() -> (Tensor[(4, 5, 16), float32],) {
  %856 = fn () -> (Tensor[(4, 5, 16), float32],) {
    %855 = @func_4412() /* ty=Tensor[(4, 5, 16), float32] */;
    (%855,)
  };
  %856() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_5706(%var_5697: Tensor[(9, 7, 10), bool]) -> (Tensor[(9, 7, 10), bool], Tensor[(9, 7, 10), float64]) {
  %857 = cast(%var_5697, dtype="bool") /* ty=Tensor[(9, 7, 10), bool] */;
  %858 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(9, 7, 10), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %859 = cast(meta[relay.Constant][63] /* ty=Tensor[(9, 7, 10), bool] */, dtype="bool") /* ty=Tensor[(9, 7, 10), bool] */;
  %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %861 = cast(%var_5697, dtype="float64") /* ty=Tensor[(9, 7, 10), float64] */;
  %862 = logical_or(%859, %860) /* ty=Tensor[(9, 7, 10), bool] */;
  %863 = sin(%861) /* ty=Tensor[(9, 7, 10), float64] */;
  (%862, %863)
}

def @func_6084() -> (Tensor[(4, 5, 16), float32],) {
  %865 = fn () -> (Tensor[(4, 5, 16), float32],) {
    %864 = @func_2833() /* ty=Tensor[(4, 5, 16), float32] */;
    (%864,)
  };
  %865() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_7166(%var_7164: Tensor[(363), int32], %var_7165: Tensor[(363), float64]) -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(363), int8], Tensor[(363), int16], Tensor[(363), int32], Tensor[(363), float64]) {
  %886 = fn (%var_7129: Tensor[(363), int32], %var_7141: Tensor[(363), float64]) -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(363), int8], Tensor[(363), int16], Tensor[(363), int32], Tensor[(363), float64]) {
    %866 = @func_5358() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(4, 5, 16), float32]) */;
    %867 = %866.2;
    %868 = cast(%var_7129, dtype="int8") /* ty=Tensor[(363), int8] */;
    %869 = shape_of(%867, dtype="int32") /* ty=Tensor[(1), int32] */;
    %870 = cast(%867, dtype="int8") /* ty=Tensor[(363), int8] */;
    %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?), int8] */;
    %872 = cast(%867, dtype="float64") /* ty=Tensor[(363), float64] */;
    %873 = sinh(%872) /* ty=Tensor[(363), float64] */;
    %874 = cast(%var_7141, dtype="int16") /* ty=Tensor[(363), int16] */;
    %875 = shape_of(%873, dtype="int32") /* ty=Tensor[(1), int32] */;
    %876 = cast(%873, dtype="int16") /* ty=Tensor[(363), int16] */;
    %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?), int16] */;
    %878 = @func_4937() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */;
    %879 = cast(%873, dtype="float64") /* ty=Tensor[(363), float64] */;
    %880 = @func_5505() /* ty=Tensor[(4, 5, 16), float32] */;
    %881 = @func_3608() /* ty=Tensor[(4, 5, 16), float32] */;
    %882 = maximum(%870, %871) /* ty=Tensor[(363), int8] */;
    %883 = multiply(%876, %877) /* ty=Tensor[(363), int16] */;
    %884 = %878.2;
    %885 = erf(%879) /* ty=Tensor[(363), float64] */;
    (%880, %881, %882, %883, %884, %885)
  };
  %886(%var_7164, %var_7165) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(363), int8], Tensor[(363), int16], Tensor[(363), int32], Tensor[(363), float64]) */
}

def @func_4354() -> (Tensor[(4, 5, 16), float32],) {
  %888 = fn () -> (Tensor[(4, 5, 16), float32],) {
    %887 = @func_3168() /* ty=Tensor[(4, 5, 16), float32] */;
    (%887,)
  };
  %888() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_6554() -> Tensor[(11, 13, 9), uint16] {
  %890 = fn () -> Tensor[(11, 13, 9), uint16] {
    %889 = @func_5996() /* ty=(Tensor[(11, 13, 9), uint16],) */;
    %889.0
  };
  %890() /* ty=Tensor[(11, 13, 9), uint16] */
}

def @func_498(%var_490: Tensor[(11, 12, 7), uint16], %var_491: Tensor[(11, 12, 7), uint16]) -> Tensor[(11, 12, 7), uint16] {
  %891 = cast(%var_491, dtype="uint16") /* ty=Tensor[(11, 12, 7), uint16] */;
  %892 = shape_of(%var_490, dtype="int32") /* ty=Tensor[(3), int32] */;
  %893 = cast(%var_490, dtype="uint16") /* ty=Tensor[(11, 12, 7), uint16] */;
  %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  logical_xor(%893, %894) /* ty=Tensor[(11, 12, 7), uint16] */
}

def @func_7879() -> (Tensor[(4, 5, 16), float32],) {
  @func_7877() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_8129() -> (Tensor[(4, 5, 16), float32],) {
  %895 = @func_5315() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %896 = %895.0;
  (%896,)
}

def @func_805(%var_803: Tensor[(13, 11, 3), float32], %var_804: Tensor[(13, 11, 3), float32]) -> (Tensor[(13, 11, 3), float32],) {
  %902 = fn (%var_797: Tensor[(13, 11, 3), float32], %var_798: Tensor[(13, 11, 3), float32]) -> (Tensor[(13, 11, 3), float32],) {
    %897 = cast(%var_798, dtype="float32") /* ty=Tensor[(13, 11, 3), float32] */;
    %898 = shape_of(%var_797, dtype="int32") /* ty=Tensor[(3), int32] */;
    %899 = cast(%var_797, dtype="float32") /* ty=Tensor[(13, 11, 3), float32] */;
    %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %901 = floor_divide(%899, %900) /* ty=Tensor[(13, 11, 3), float32] */;
    (%901,)
  };
  %902(%var_803, %var_804) /* ty=(Tensor[(13, 11, 3), float32],) */
}

def @func_2760(%var_2757: Tensor[(9, 3), float32], %var_2758: Tensor[(924), uint16], %var_2759: Tensor[(194040), uint16]) -> (Tensor[(4, 5, 16), float64], int8, Tensor[(9, 3), float32], Tensor[(924), uint16], Tensor[(194040), uint16]) {
  %918 = fn (%var_2743: Tensor[(9, 3), float32], %var_2745: Tensor[(924), uint16], %var_2746: Tensor[(194040), uint16]) -> (Tensor[(4, 5, 16), float64], int8, Tensor[(9, 3), float32], Tensor[(924), uint16], Tensor[(194040), uint16]) {
    %903 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
    %904 = cast(%var_2743, dtype="float32") /* ty=Tensor[(9, 3), float32] */;
    %905 = cast(meta[relay.Constant][64] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %906 = cast(%var_2745, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %907 = cast(%var_2746, dtype="uint16") /* ty=Tensor[(194040), uint16] */;
    %908 = reshape(%904, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float32] */;
    %909 = reshape(%905, newshape=[]) /* ty=int8 */;
    %910 = reshape(%906, newshape=[924]) /* ty=Tensor[(924), uint16] */;
    %911 = reshape(%907, newshape=[14, 924, 15]) /* ty=Tensor[(14, 924, 15), uint16] */;
    %912 = @func_1713(%908, %909, %910, %911) /* ty=(Tensor[(9, 1, 3), float32], int8, Tensor[(35, 6), int8], Tensor[(924), uint16], Tensor[(14, 924, 15), int64], Tensor[(14, 6, 10), float32], Tensor[(12, 70), bool]) */;
    %913 = cast(%var_2746, dtype="uint16") /* ty=Tensor[(194040), uint16] */;
    %914 = cast(meta[relay.Constant][64] /* ty=int8 */, dtype="uint16") /* ty=uint16 */;
    %915 = %903.0;
    %916 = %912.1;
    %917 = maximum(%913, %914) /* ty=Tensor[(194040), uint16] */;
    (%915, %916, %var_2743, %var_2745, %917)
  };
  %918(%var_2757, %var_2758, %var_2759) /* ty=(Tensor[(4, 5, 16), float64], int8, Tensor[(9, 3), float32], Tensor[(924), uint16], Tensor[(194040), uint16]) */
}

def @func_6828(%var_6802: Tensor[(70), int32], %var_6803: Tensor[(700), int32], %var_6804: Tensor[(1215), float64], %var_6805: Tensor[(2, 72), float64]) -> (Tensor[(4, 5, 16), float32], Tensor[(70), int32], Tensor[(1215), float64], Tensor[(2, 72), float64], Tensor[(10, 5, 14), float64], Tensor[(700), float32]) {
  %919 = @func_6305() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %920 = cast(%var_6802, dtype="int32") /* ty=Tensor[(70), int32] */;
  %921 = cast(%var_6803, dtype="int32") /* ty=Tensor[(700), int32] */;
  %922 = cast(%var_6804, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %923 = cast(%var_6805, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %924 = reshape(%920, newshape=[1, 5, 14]) /* ty=Tensor[(1, 5, 14), int32] */;
  %925 = reshape(%921, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int32] */;
  %926 = reshape(%922, newshape=[1215]) /* ty=Tensor[(1215), float64] */;
  %927 = reshape(%923, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %928 = @func_1168(%924, %925, %926, %927) /* ty=(Tensor[(10, 5, 14), int32], Tensor[(1215), float64], Tensor[(144), float64], Tensor[(15, 9, 9), float64]) */;
  %929 = %928.0;
  %930 = cast(%929, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %931 = cast(%var_6803, dtype="float32") /* ty=Tensor[(700), float32] */;
  %932 = %919.0;
  %933 = log2(%930) /* ty=Tensor[(10, 5, 14), float64] */;
  %934 = asinh(%931) /* ty=Tensor[(700), float32] */;
  (%932, %var_6802, %var_6804, %var_6805, %933, %934)
}

def @func_5279(%var_5228: Tensor[(1001), uint16]) -> (Tensor[(4, 5, 16), float32], Tensor[(7, 13, 11), uint16], Tensor[(70), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(363), int32], Tensor[(1001), float64]) {
  %935 = @func_4937() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */;
  %936 = cast(%var_5228, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %937 = cast(%var_5228, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %938 = cast(meta[relay.Constant][65] /* ty=Tensor[(70), int32] */, dtype="int32") /* ty=Tensor[(70), int32] */;
  %939 = cast(meta[relay.Constant][66] /* ty=Tensor[(81, 15), float64] */, dtype="float64") /* ty=Tensor[(81, 15), float64] */;
  %940 = cast(meta[relay.Constant][67] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %941 = cast(meta[relay.Constant][68] /* ty=Tensor[(363), int32] */, dtype="int32") /* ty=Tensor[(363), int32] */;
  %942 = cast(%var_5228, dtype="uint16") /* ty=Tensor[(1001), uint16] */;
  %943 = reshape(%936, newshape=[7, 13, 11]) /* ty=Tensor[(7, 13, 11), uint16] */;
  %944 = reshape(%937, newshape=[7, 13, 11]) /* ty=Tensor[(7, 13, 11), uint16] */;
  %945 = reshape(%938, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %946 = reshape(%939, newshape=[3, 405]) /* ty=Tensor[(3, 405), float64] */;
  %947 = reshape(%940, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %948 = reshape(%941, newshape=[363]) /* ty=Tensor[(363), int32] */;
  %949 = reshape(%942, newshape=[7, 13, 11]) /* ty=Tensor[(7, 13, 11), uint16] */;
  %950 = @func_2484(%943, %944, %945, %946, %947, %948, %949) /* ty=(Tensor[(7, 13, 11), uint16], Tensor[(1215), float64], Tensor[(70), int32], Tensor[(10, 70), int32], Tensor[(3, 405), float64], Tensor[(144), float64], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(7, 13, 11), bool]) */;
  %951 = cast(%var_5228, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %952 = cos(%951) /* ty=Tensor[(1001), float32] */;
  %953 = cast(%var_5228, dtype="float64") /* ty=Tensor[(1001), float64] */;
  %954 = shape_of(%952, dtype="int32") /* ty=Tensor[(1), int32] */;
  %955 = cast(%952, dtype="float64") /* ty=Tensor[(1001), float64] */;
  %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?), float64] */;
  %957 = %935.0;
  %958 = %950.0;
  %959 = divide(%955, %956) /* ty=Tensor[(1001), float64] */;
  (%957, %958, meta[relay.Constant][65] /* ty=Tensor[(70), int32] */, meta[relay.Constant][66] /* ty=Tensor[(81, 15), float64] */, meta[relay.Constant][67] /* ty=Tensor[(144), float64] */, meta[relay.Constant][68] /* ty=Tensor[(363), int32] */, %959)
}

def @func_207(%var_206: Tensor[(12, 6, 2), float64]) -> Tensor[(12, 6, 2), float64] {
  %961 = fn (%var_196: Tensor[(12, 6, 2), float64]) -> Tensor[(12, 6, 2), float64] {
    %960 = cast(%var_196, dtype="float64") /* ty=Tensor[(12, 6, 2), float64] */;
    atanh(%960) /* ty=Tensor[(12, 6, 2), float64] */
  };
  %961(%var_206) /* ty=Tensor[(12, 6, 2), float64] */
}

def @func_7552() -> Tensor[(4, 5, 16), float32] {
  %963 = fn () -> Tensor[(4, 5, 16), float32] {
    %962 = @func_3447() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %962.0
  };
  %963() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_4414() -> Tensor[(4, 5, 16), float32] {
  @func_4412() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_5060() -> Tensor[(4, 5, 16), float32] {
  @func_4412() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_7891(%var_7883: Tensor[(10, 13, 4), float32]) -> Tensor[(10, 13, 4), float32] {
  %964 = cast(%var_7883, dtype="float32") /* ty=Tensor[(10, 13, 4), float32] */;
  erf(%964) /* ty=Tensor[(10, 13, 4), float32] */
}

def @func_10275(%var_10273: Tensor[(27), float32]) -> (Tensor[(4, 5, 16), float32], int8, Tensor[(1, 924), uint16], Tensor[(3, 64680), uint16], Tensor[(4, 5, 16), float32], Tensor[(27), bool], Tensor[(2340), uint32], Tensor[(2340), uint32]) {
  @func_10272(%var_10273) /* ty=(Tensor[(4, 5, 16), float32], int8, Tensor[(1, 924), uint16], Tensor[(3, 64680), uint16], Tensor[(4, 5, 16), float32], Tensor[(27), bool], Tensor[(2340), uint32], Tensor[(2340), uint32]) */
}

def @func_10882() -> Tensor[(4, 5, 16), float32] {
  %965 = @func_4537() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), bool]) */;
  %965.0
}

def @func_8876(%var_8873: Tensor[(16, 3, 6), bool], %var_8874: Tensor[(16, 3, 6), bool], %var_8875: Tensor[(1, 1440), float64]) -> (Tensor[(16, 3, 6), bool], Tensor[(16, 3, 6), float64], Tensor[(12, 12, 10), float64], Tensor[(1, 1440), float64], Tensor[(4, 5, 16), float64]) {
  @func_8871(%var_8873, %var_8874, %var_8875) /* ty=(Tensor[(16, 3, 6), bool], Tensor[(16, 3, 6), float64], Tensor[(12, 12, 10), float64], Tensor[(1, 1440), float64], Tensor[(4, 5, 16), float64]) */
}

def @func_5611(%var_5596: Tensor[(196), int8]) -> (Tensor[(4, 5, 16), float32], Tensor[(144), float64], int8, Tensor[(196), int8], Tensor[(144), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %966 = @func_5188() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
  %967 = cast(meta[relay.Constant][69] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %968 = cast(%var_5596, dtype="int8") /* ty=Tensor[(196), int8] */;
  %969 = cast(meta[relay.Constant][70] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %970 = reshape(%967, newshape=[]) /* ty=int8 */;
  %971 = reshape(%968, newshape=[1, 14, 14]) /* ty=Tensor[(1, 14, 14), int8] */;
  %972 = reshape(%969, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %973 = @func_3634(%970, %971, %972) /* ty=(Tensor[(?, 14, 14), uint8], Tensor[(144), float64], Tensor[(70), int32], Tensor[(700), int32], Tensor[(1215), float64], Tensor[(144), float64]) */;
  %974 = %966.1;
  %975 = %973.1;
  %976 = @func_3414() /* ty=Tensor[(4, 5, 16), float32] */;
  %977 = @func_3414() /* ty=Tensor[(4, 5, 16), float32] */;
  (%974, %975, meta[relay.Constant][69] /* ty=int8 */, %var_5596, meta[relay.Constant][70] /* ty=Tensor[(144), float64] */, %976, %977)
}

def @func_5450() -> (Tensor[(4, 5, 16), float32],) {
  @func_5448() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_6931(%var_6914: Tensor[(27, 1), float32], %var_6915: int8, %var_6916: Tensor[(924), uint16], %var_6917: Tensor[(194040), uint16]) -> (Tensor[(4, 5, 16), float64], Tensor[(12, 6, 2), float64], Tensor[(144), float64], Tensor[(924), uint16], Tensor[(27, 1), float32], int8, Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(4, 5, 16), float32]) {
  %978 = @func_4114() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %979 = cast(meta[relay.Constant][71] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %980 = reshape(%979, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), float64] */;
  %981 = cast(%var_6914, dtype="float32") /* ty=Tensor[(27, 1), float32] */;
  %982 = cast(%var_6915, dtype="int8") /* ty=int8 */;
  %983 = cast(%var_6916, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %984 = cast(%var_6917, dtype="uint16") /* ty=Tensor[(194040), uint16] */;
  %985 = reshape(%981, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float32] */;
  %986 = reshape(%982, newshape=[]) /* ty=int8 */;
  %987 = reshape(%983, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %988 = reshape(%984, newshape=[14, 924, 15]) /* ty=Tensor[(14, 924, 15), uint16] */;
  %989 = @func_1713(%985, %986, %987, %988) /* ty=(Tensor[(9, 1, 3), float32], int8, Tensor[(35, 6), int8], Tensor[(924), uint16], Tensor[(14, 924, 15), int64], Tensor[(14, 6, 10), float32], Tensor[(12, 70), bool]) */;
  %990 = %978.0;
  %991 = @func_205(%980) /* ty=Tensor[(12, 6, 2), float64] */;
  %992 = %989.3;
  %993 = @func_3608() /* ty=Tensor[(4, 5, 16), float32] */;
  (%990, %991, meta[relay.Constant][71] /* ty=Tensor[(144), float64] */, %992, %var_6914, %var_6915, %var_6916, %var_6917, %993)
}

def @func_9769() -> Tensor[(4, 5, 16), float32] {
  %995 = fn () -> Tensor[(4, 5, 16), float32] {
    %994 = @func_8197() /* ty=(Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32], Tensor[(1, 147), uint64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
    %994.3
  };
  %995() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_5010() -> (Tensor[(11, 11, 3), float64], Tensor[(4, 5, 16), float32]) {
  @func_5008() /* ty=(Tensor[(11, 11, 3), float64], Tensor[(4, 5, 16), float32]) */
}

def @func_10735() -> (Tensor[(4, 5, 16), float32],) {
  %996 = @func_7877() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %997 = %996.0;
  (%997,)
}

def @func_8757(%var_8743: int32) -> (Tensor[(15, 11, 14), bool], int32, Tensor[(16, 7, 3), float64], Tensor[(4, 5, 16), float32]) {
  %998 = cast(%var_8743, dtype="int32") /* ty=int32 */;
  %999 = reshape(%998, newshape=[]) /* ty=int32 */;
  %1000 = @func_938(%999) /* ty=(Tensor[(15, 11, 14), bool],) */;
  %1001 = cast(meta[relay.Constant][72] /* ty=Tensor[(16, 7, 3), float64] */, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %1002 = tan(%1001) /* ty=Tensor[(16, 7, 3), float64] */;
  %1003 = cast(meta[relay.Constant][72] /* ty=Tensor[(16, 7, 3), float64] */, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %1004 = shape_of(%1002, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1005 = cast(%1002, dtype="float64") /* ty=Tensor[(16, 7, 3), float64] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1007 = %1000.0;
  %1008 = power(%1005, %1006) /* ty=Tensor[(16, 7, 3), float64] */;
  %1009 = @func_3414() /* ty=Tensor[(4, 5, 16), float32] */;
  (%1007, %var_8743, %1008, %1009)
}

def @func_1718(%var_1714: Tensor[(9, 1, 3), float32], %var_1715: int8, %var_1716: Tensor[(924), uint16], %var_1717: Tensor[(14, 924, 15), uint16]) -> (Tensor[(9, 1, 3), float32], int8, Tensor[(35, 6), int8], Tensor[(924), uint16], Tensor[(14, 924, 15), int64], Tensor[(14, 6, 10), float32], Tensor[(12, 70), bool]) {
  %1029 = fn (%var_1685: Tensor[(9, 1, 3), float32], %var_1692: int8, %var_1694: Tensor[(924), uint16], %var_1696: Tensor[(14, 924, 15), uint16]) -> (Tensor[(9, 1, 3), float32], int8, Tensor[(35, 6), int8], Tensor[(924), uint16], Tensor[(14, 924, 15), int64], Tensor[(14, 6, 10), float32], Tensor[(12, 70), bool]) {
    %1010 = cast(%var_1685, dtype="float32") /* ty=Tensor[(9, 1, 3), float32] */;
    %1011 = cast(%var_1692, dtype="int8") /* ty=int8 */;
    %1012 = cast(meta[relay.Constant][73] /* ty=Tensor[(35, 6), int8] */, dtype="int8") /* ty=Tensor[(35, 6), int8] */;
    %1013 = cast(%var_1694, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %1014 = reshape(%1011, newshape=[]) /* ty=int8 */;
    %1015 = reshape(%1012, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), int8] */;
    %1016 = reshape(%1013, newshape=[924, 1]) /* ty=Tensor[(924, 1), uint16] */;
    %1017 = @func_626(%1014, %1015, %1016) /* ty=(Tensor[(14, 1, 15), int8], Tensor[(11, 12, 7), uint16], Tensor[(14, 924, 15), uint16]) */;
    %1018 = %1017.2;
    %1019 = cast(%var_1696, dtype="int64") /* ty=Tensor[(14, 924, 15), int64] */;
    %1020 = shape_of(%1018, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1021 = cast(%1018, dtype="int64") /* ty=Tensor[(14, 924, 15), int64] */;
    %1022 = dyn.reshape(%1019, %1020, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1023 = cast(meta[relay.Constant][74] /* ty=Tensor[(12, 70), bool] */, dtype="bool") /* ty=Tensor[(12, 70), bool] */;
    %1024 = reshape(%1023, newshape=[14, 6, 10]) /* ty=Tensor[(14, 6, 10), bool] */;
    %1025 = @func_1382(%1024) /* ty=(Tensor[(14, 6, 10), bool], Tensor[(14, 6, 10), float32]) */;
    %1026 = log10(%1010) /* ty=Tensor[(9, 1, 3), float32] */;
    %1027 = subtract(%1021, %1022) /* ty=Tensor[(14, 924, 15), int64] */;
    %1028 = %1025.1;
    (%1026, %var_1692, meta[relay.Constant][73] /* ty=Tensor[(35, 6), int8] */, %var_1694, %1027, %1028, meta[relay.Constant][74] /* ty=Tensor[(12, 70), bool] */)
  };
  %1029(%var_1714, %var_1715, %var_1716, %var_1717) /* ty=(Tensor[(9, 1, 3), float32], int8, Tensor[(35, 6), int8], Tensor[(924), uint16], Tensor[(14, 924, 15), int64], Tensor[(14, 6, 10), float32], Tensor[(12, 70), bool]) */
}

def @main(%var_10964: Tensor[(5, 7, 9), float32]) -> Tensor[(5, 7, 9), float32] {
  %1030 = cast(%var_10964, dtype="float32") /* ty=Tensor[(5, 7, 9), float32] */;
  sigmoid(%1030) /* ty=Tensor[(5, 7, 9), float32] */
}

def @func_9078() -> (Tensor[(14, 10, 2), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %1036 = fn () -> (Tensor[(14, 10, 2), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
    %1031 = cast(meta[relay.Constant][75] /* ty=Tensor[(14, 10, 2), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 2), float32] */;
    %1032 = @func_7877() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %1033 = sinh(%1031) /* ty=Tensor[(14, 10, 2), float32] */;
    %1034 = @func_6724() /* ty=Tensor[(4, 5, 16), float32] */;
    %1035 = %1032.0;
    (%1033, %1034, %1035)
  };
  %1036() /* ty=(Tensor[(14, 10, 2), float32], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */
}

def @func_3808() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %1037 = @func_3190() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %1038 = %1037.0;
  %1039 = @func_2833() /* ty=Tensor[(4, 5, 16), float32] */;
  (%1038, %1039)
}

def @func_4086(%var_4084: Tensor[(3, 4, 9), float64], %var_4085: Tensor[(196), int8]) -> (Tensor[(3, 4, 9), float64], Tensor[(144), float64], int8, Tensor[(196), int8], Tensor[(144), float64]) {
  %1055 = fn (%var_4065: Tensor[(3, 4, 9), float64], %var_4080: Tensor[(196), int8]) -> (Tensor[(3, 4, 9), float64], Tensor[(144), float64], int8, Tensor[(196), int8], Tensor[(144), float64]) {
    %1040 = cast(%var_4065, dtype="float64") /* ty=Tensor[(3, 4, 9), float64] */;
    %1041 = exp(%1040) /* ty=Tensor[(3, 4, 9), float64] */;
    %1042 = cast(%var_4065, dtype="float64") /* ty=Tensor[(3, 4, 9), float64] */;
    %1043 = shape_of(%1041, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1044 = cast(%1041, dtype="float64") /* ty=Tensor[(3, 4, 9), float64] */;
    %1045 = dyn.reshape(%1042, %1043, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1046 = cast(meta[relay.Constant][76] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %1047 = cast(%var_4080, dtype="int8") /* ty=Tensor[(196), int8] */;
    %1048 = cast(meta[relay.Constant][77] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %1049 = reshape(%1046, newshape=[]) /* ty=int8 */;
    %1050 = reshape(%1047, newshape=[1, 14, 14]) /* ty=Tensor[(1, 14, 14), int8] */;
    %1051 = reshape(%1048, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %1052 = @func_3634(%1049, %1050, %1051) /* ty=(Tensor[(?, 14, 14), uint8], Tensor[(144), float64], Tensor[(70), int32], Tensor[(700), int32], Tensor[(1215), float64], Tensor[(144), float64]) */;
    %1053 = floor_divide(%1044, %1045) /* ty=Tensor[(3, 4, 9), float64] */;
    %1054 = %1052.5;
    (%1053, %1054, meta[relay.Constant][76] /* ty=int8 */, %var_4080, meta[relay.Constant][77] /* ty=Tensor[(144), float64] */)
  };
  %1055(%var_4084, %var_4085) /* ty=(Tensor[(3, 4, 9), float64], Tensor[(144), float64], int8, Tensor[(196), int8], Tensor[(144), float64]) */
}

def @func_10149(%var_10147: Tensor[(1287, 1), uint8], %var_10148: Tensor[(1008), float64]) -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(1287, 144), uint32], Tensor[(144), float64], Tensor[(1008), float64]) {
  @func_10145(%var_10147, %var_10148) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32], Tensor[(1287, 144), uint32], Tensor[(144), float64], Tensor[(1008), float64]) */
}

def @func_3609() -> Tensor[(4, 5, 16), float32] {
  %1057 = fn () -> Tensor[(4, 5, 16), float32] {
    %1056 = @func_3119() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %1056.0
  };
  %1057() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_7968() -> Tensor[(4, 5, 16), float32] {
  @func_3608() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_5216() -> Tensor[(4, 5, 16), float64] {
  @func_5214() /* ty=Tensor[(4, 5, 16), float64] */
}

def @func_5360() -> (Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(4, 5, 16), float32]) {
  @func_5358() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(4, 5, 16), float32]) */
}

def @func_8006() -> Tensor[(4, 5, 16), float64] {
  @func_8004() /* ty=Tensor[(4, 5, 16), float64] */
}

def @func_7674(%var_7673: Tensor[(4, 3, 10), float32]) -> Tensor[(4, 3, 10), float32] {
  %1062 = fn (%var_7667: Tensor[(4, 3, 10), float32]) -> Tensor[(4, 3, 10), float32] {
    %1058 = cast(meta[relay.Constant][78] /* ty=Tensor[(4, 3, 10), float32] */, dtype="float32") /* ty=Tensor[(4, 3, 10), float32] */;
    %1059 = shape_of(%var_7667, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1060 = cast(%var_7667, dtype="float32") /* ty=Tensor[(4, 3, 10), float32] */;
    %1061 = dyn.reshape(%1058, %1059, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%1060, %1061) /* ty=Tensor[(4, 3, 10), float32] */
  };
  %1062(%var_7673) /* ty=Tensor[(4, 3, 10), float32] */
}

def @func_1657(%var_1656: Tensor[(11, 13, 9), uint8]) -> Tensor[(11, 13, 9), uint8] {
  %1067 = fn (%var_1649: Tensor[(11, 13, 9), uint8]) -> Tensor[(11, 13, 9), uint8] {
    %1063 = cast(%var_1649, dtype="uint8") /* ty=Tensor[(11, 13, 9), uint8] */;
    %1064 = shape_of(meta[relay.Constant][79] /* ty=Tensor[(11, 13, 9), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1065 = cast(meta[relay.Constant][79] /* ty=Tensor[(11, 13, 9), uint8] */, dtype="uint8") /* ty=Tensor[(11, 13, 9), uint8] */;
    %1066 = dyn.reshape(%1063, %1064, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    bitwise_xor(%1065, %1066) /* ty=Tensor[(11, 13, 9), uint8] */
  };
  %1067(%var_1656) /* ty=Tensor[(11, 13, 9), uint8] */
}

def @func_6525(%var_6523: Tensor[(1440), uint16], %var_6524: Tensor[(429, 3), uint8]) -> (Tensor[(4, 5, 16), float32], Tensor[(1001), uint16], Tensor[(1440), uint16], Tensor[(11, 13, 9), uint8], Tensor[(429, 3), uint8], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  @func_6521(%var_6523, %var_6524) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(1001), uint16], Tensor[(1440), uint16], Tensor[(11, 13, 9), uint8], Tensor[(429, 3), uint8], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */
}

def @func_1809(%var_1807: Tensor[(14, 8, 4), int16], %var_1808: Tensor[(14, 8, 4), int16]) -> (Tensor[(14, 8, 4), bool],) {
  @func_1805(%var_1807, %var_1808) /* ty=(Tensor[(14, 8, 4), bool],) */
}

def @func_5214() -> Tensor[(4, 5, 16), float64] {
  %1068 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %1068.0
}

def @func_8088() -> (Tensor[(4, 5, 16), float32],) {
  %1070 = fn () -> (Tensor[(4, 5, 16), float32],) {
    %1069 = @func_7551() /* ty=Tensor[(4, 5, 16), float32] */;
    (%1069,)
  };
  %1070() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_8076() -> (Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  @func_8074() /* ty=(Tensor[(4, 5, 16), float64], Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */
}

def @func_3168() -> Tensor[(4, 5, 16), float32] {
  %1071 = @func_2999() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %1071.0
}

def @func_6570() -> (Tensor[(4, 5, 16), float64],) {
  @func_6568() /* ty=(Tensor[(4, 5, 16), float64],) */
}

def @func_4939() -> (Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) {
  @func_4937() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */
}

def @func_9657(%var_9655: Tensor[(27), float32], %var_9656: Tensor[(196), int8]) -> (Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(27), float32], Tensor[(194040), uint16], Tensor[(11, 13, 9), uint32], Tensor[(4, 5, 16), float32], Tensor[(144), float64], Tensor[(1001), uint16], Tensor[(27), float32], Tensor[(196), int8], Tensor[(1215), float64], Tensor[(33, 11), int32], Tensor[(81, 15), float64], Tensor[(11, 13, 9), uint16], Tensor[(143, 9), int64], Tensor[(143, 9), float64], Tensor[(143, 9), float64]) {
  @func_9653(%var_9655, %var_9656) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 6, 2), float64], Tensor[(924), uint16], Tensor[(194040), uint16], Tensor[(27), float32], Tensor[(194040), uint16], Tensor[(11, 13, 9), uint32], Tensor[(4, 5, 16), float32], Tensor[(144), float64], Tensor[(1001), uint16], Tensor[(27), float32], Tensor[(196), int8], Tensor[(1215), float64], Tensor[(33, 11), int32], Tensor[(81, 15), float64], Tensor[(11, 13, 9), uint16], Tensor[(143, 9), int64], Tensor[(143, 9), float64], Tensor[(143, 9), float64]) */
}

def @func_10037() -> (Tensor[(4, 5, 16), float32], Tensor[(11, 13, 9), float32]) {
  @func_10035() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 13, 9), float32]) */
}

def @func_10500() -> (Tensor[(4, 5, 16), float32],) {
  %1072 = @func_5540() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %1073 = %1072.0;
  (%1073,)
}

def @func_4918(%var_4910: Tensor[(3, 15, 12), int32], %var_4911: Tensor[(3, 15, 12), int32]) -> Tensor[(3, 15, 12), int32] {
  %1074 = cast(%var_4911, dtype="int32") /* ty=Tensor[(3, 15, 12), int32] */;
  %1075 = shape_of(%var_4910, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1076 = cast(%var_4910, dtype="int32") /* ty=Tensor[(3, 15, 12), int32] */;
  %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_and(%1076, %1077) /* ty=Tensor[(3, 15, 12), int32] */
}

def @func_10083() -> Tensor[(4, 5, 16), float32] {
  @func_10081() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_6306() -> (Tensor[(4, 5, 16), float32],) {
  %1080 = fn () -> (Tensor[(4, 5, 16), float32],) {
    %1078 = @func_5540() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %1079 = %1078.0;
    (%1079,)
  };
  %1080() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_6786() -> (Tensor[(4, 5, 16), float64], Tensor[(9, 7, 10), float64], Tensor[(4, 5, 16), float32], Tensor[(630), float64]) {
  %1090 = fn () -> (Tensor[(4, 5, 16), float64], Tensor[(9, 7, 10), float64], Tensor[(4, 5, 16), float32], Tensor[(630), float64]) {
    %1081 = cast(meta[relay.Constant][80] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
    %1082 = reshape(%1081, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), bool] */;
    %1083 = @func_5706(%1082) /* ty=(Tensor[(9, 7, 10), bool], Tensor[(9, 7, 10), float64]) */;
    %1084 = @func_6181() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */;
    %1085 = cast(meta[relay.Constant][80] /* ty=Tensor[(630), bool] */, dtype="float64") /* ty=Tensor[(630), float64] */;
    %1086 = @func_5214() /* ty=Tensor[(4, 5, 16), float64] */;
    %1087 = %1083.1;
    %1088 = %1084.0;
    %1089 = sigmoid(%1085) /* ty=Tensor[(630), float64] */;
    (%1086, %1087, %1088, %1089)
  };
  %1090() /* ty=(Tensor[(4, 5, 16), float64], Tensor[(9, 7, 10), float64], Tensor[(4, 5, 16), float32], Tensor[(630), float64]) */
}

def @func_8131() -> (Tensor[(4, 5, 16), float32],) {
  @func_8129() /* ty=(Tensor[(4, 5, 16), float32],) */
}

def @func_10272(%var_10241: Tensor[(27), float32]) -> (Tensor[(4, 5, 16), float32], int8, Tensor[(1, 924), uint16], Tensor[(3, 64680), uint16], Tensor[(4, 5, 16), float32], Tensor[(27), bool], Tensor[(2340), uint32], Tensor[(2340), uint32]) {
  %1091 = cast(%var_10241, dtype="float32") /* ty=Tensor[(27), float32] */;
  %1092 = cast(meta[relay.Constant][81] /* ty=Tensor[(1, 924), uint16] */, dtype="uint16") /* ty=Tensor[(1, 924), uint16] */;
  %1093 = cast(meta[relay.Constant][82] /* ty=Tensor[(3, 64680), uint16] */, dtype="uint16") /* ty=Tensor[(3, 64680), uint16] */;
  %1094 = reshape(%1091, newshape=[9, 3]) /* ty=Tensor[(9, 3), float32] */;
  %1095 = reshape(%1092, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %1096 = reshape(%1093, newshape=[194040]) /* ty=Tensor[(194040), uint16] */;
  %1097 = @func_2756(%1094, %1095, %1096) /* ty=(Tensor[(4, 5, 16), float64], int8, Tensor[(9, 3), float32], Tensor[(924), uint16], Tensor[(194040), uint16]) */;
  %1098 = @func_7989() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %1099 = cast(meta[relay.Constant][83] /* ty=Tensor[(27), float32] */, dtype="bool") /* ty=Tensor[(27), bool] */;
  %1100 = shape_of(%var_10241, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1101 = cast(%var_10241, dtype="bool") /* ty=Tensor[(27), bool] */;
  %1102 = dyn.reshape(%1099, %1100, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1103 = cast(meta[relay.Constant][84] /* ty=Tensor[(2340), uint32] */, dtype="uint32") /* ty=Tensor[(2340), uint32] */;
  %1104 = reshape(%1103, newshape=[2340]) /* ty=Tensor[(2340), uint32] */;
  %1105 = @func_4906(%1104) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(12, 13, 15), float64], Tensor[(180), uint32], Tensor[(2340), uint32], Tensor[(4, 5, 16), float64]) */;
  %1106 = @func_3168() /* ty=Tensor[(4, 5, 16), float32] */;
  %1107 = %1097.1;
  %1108 = %1098.0;
  %1109 = not_equal(%1101, %1102) /* ty=Tensor[(27), bool] */;
  %1110 = %1105.3;
  (%1106, %1107, meta[relay.Constant][81] /* ty=Tensor[(1, 924), uint16] */, meta[relay.Constant][82] /* ty=Tensor[(3, 64680), uint16] */, %1108, %1109, %1110, meta[relay.Constant][84] /* ty=Tensor[(2340), uint32] */)
}

def @func_10425() -> (Tensor[(4, 5, 16), float64],) {
  @func_10423() /* ty=(Tensor[(4, 5, 16), float64],) */
}

def @func_10844() -> Tensor[(4, 5, 16), float32] {
  %1111 = @func_7877() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %1111.0
}

def @func_10955() -> Tensor[(4, 5, 16), float32] {
  @func_10953() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_10863(%var_10862: Tensor[(1, 945), int8]) -> (Tensor[(4, 5, 16), float32], Tensor[(7, 15, 9), int8], Tensor[(1, 945), int8]) {
  %1116 = fn (%var_10855: Tensor[(1, 945), int8]) -> (Tensor[(4, 5, 16), float32], Tensor[(7, 15, 9), int8], Tensor[(1, 945), int8]) {
    %1112 = cast(%var_10855, dtype="int8") /* ty=Tensor[(1, 945), int8] */;
    %1113 = reshape(%1112, newshape=[7, 15, 9]) /* ty=Tensor[(7, 15, 9), int8] */;
    %1114 = @func_5060() /* ty=Tensor[(4, 5, 16), float32] */;
    %1115 = @func_529(%1113) /* ty=Tensor[(7, 15, 9), int8] */;
    (%1114, %1115, %var_10855)
  };
  %1116(%var_10862) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(7, 15, 9), int8], Tensor[(1, 945), int8]) */
}

def @func_6670() -> (Tensor[(4, 5, 16), float32], Tensor[(15, 2, 16), float32], Tensor[(40, 12), float64]) {
  @func_6668() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(15, 2, 16), float32], Tensor[(40, 12), float64]) */
}

def @func_5448() -> (Tensor[(4, 5, 16), float32],) {
  %1117 = @func_3447() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %1118 = %1117.0;
  (%1118,)
}

def @func_6725() -> Tensor[(4, 5, 16), float32] {
  %1120 = fn () -> Tensor[(4, 5, 16), float32] {
    %1119 = @func_3808() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */;
    %1119.1
  };
  %1120() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_7970() -> Tensor[(4, 5, 16), float32] {
  @func_7968() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_10035() -> (Tensor[(4, 5, 16), float32], Tensor[(11, 13, 9), float32]) {
  %1121 = @func_2999() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %1122 = @func_8367() /* ty=Tensor[(11, 13, 9), uint16] */;
  %1123 = cast(%1122, dtype="float64") /* ty=Tensor[(11, 13, 9), float64] */;
  %1124 = cosh(%1123) /* ty=Tensor[(11, 13, 9), float64] */;
  %1125 = cast(%1122, dtype="bool") /* ty=Tensor[(11, 13, 9), bool] */;
  %1126 = shape_of(%1124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1127 = cast(%1124, dtype="bool") /* ty=Tensor[(11, 13, 9), bool] */;
  %1128 = dyn.reshape(%1125, %1126, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1129 = not_equal(%1127, %1128) /* ty=Tensor[(11, 13, 9), bool] */;
  %1130 = cast(%1129, dtype="float32") /* ty=Tensor[(11, 13, 9), float32] */;
  %1131 = %1121.0;
  %1132 = log2(%1130) /* ty=Tensor[(11, 13, 9), float32] */;
  (%1131, %1132)
}

def @func_4114() -> (Tensor[(4, 5, 16), float64],) {
  %1133 = @func_2669() /* ty=(Tensor[(4, 5, 16), float64],) */;
  %1134 = %1133.0;
  (%1134,)
}

def @func_3238(%var_3214: Tensor[(700), int32], %var_3215: Tensor[(3, 405), float64], %var_3216: Tensor[(144), float64], %var_3217: Tensor[(27, 1), float32], %var_3229: Tensor[(1287), uint8]) -> (Tensor[(4, 5, 16), float32], Tensor[(140), float32], Tensor[(7, 10), int32], Tensor[(700), int32], Tensor[(144), float64], Tensor[(27, 1), float32], Tensor[(3, 405), bool], Tensor[(11, 13, 9), uint8], Tensor[(1287), uint8], Tensor[(15, 11, 14), bool], int32) {
  %1135 = @func_3119() /* ty=(Tensor[(4, 5, 16), float32],) */;
  %1136 = cast(meta[relay.Constant][85] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %1137 = cast(meta[relay.Constant][86] /* ty=Tensor[(7, 10), int32] */, dtype="int32") /* ty=Tensor[(7, 10), int32] */;
  %1138 = cast(%var_3214, dtype="int32") /* ty=Tensor[(700), int32] */;
  %1139 = cast(%var_3215, dtype="float64") /* ty=Tensor[(3, 405), float64] */;
  %1140 = cast(%var_3216, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1141 = cast(%var_3217, dtype="float32") /* ty=Tensor[(27, 1), float32] */;
  %1142 = reshape(%1136, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
  %1143 = reshape(%1137, newshape=[70]) /* ty=Tensor[(70), int32] */;
  %1144 = reshape(%1138, newshape=[5, 140]) /* ty=Tensor[(5, 140), int32] */;
  %1145 = reshape(%1139, newshape=[81, 15]) /* ty=Tensor[(81, 15), float64] */;
  %1146 = reshape(%1140, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %1147 = reshape(%1141, newshape=[27]) /* ty=Tensor[(27), float32] */;
  %1148 = @func_1999(%1142, %1143, %1144, %1145, %1146, %1147) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(70), int32], Tensor[(5, 140), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(14, 6, 10), float32], Tensor[(27), float32], int8, Tensor[(924), uint16], Tensor[(194040, 1), uint16], Tensor[(4, 5, 7), float64]) */;
  %1149 = %1148.0;
  %1150 = cast(%1149, dtype="bool") /* ty=Tensor[(15, 9, 9), bool] */;
  %1151 = shape_of(%var_3215, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1152 = cast(%var_3215, dtype="bool") /* ty=Tensor[(3, 405), bool] */;
  %1153 = dyn.reshape(%1150, %1151, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1154 = cast(%var_3229, dtype="uint8") /* ty=Tensor[(1287), uint8] */;
  %1155 = reshape(%1154, newshape=[11, 13, 9]) /* ty=Tensor[(11, 13, 9), uint8] */;
  %1156 = cast(-1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1157 = reshape(%1156, newshape=[]) /* ty=int32 */;
  %1158 = @func_938(%1157) /* ty=(Tensor[(15, 11, 14), bool],) */;
  %1159 = %1135.0;
  %1160 = equal(%1152, %1153) /* ty=Tensor[(3, 405), bool] */;
  %1161 = @func_1655(%1155) /* ty=Tensor[(11, 13, 9), uint8] */;
  %1162 = %1158.0;
  (%1159, meta[relay.Constant][85] /* ty=Tensor[(140), float32] */, meta[relay.Constant][86] /* ty=Tensor[(7, 10), int32] */, %var_3214, %var_3216, %var_3217, %1160, %1161, %var_3229, %1162, -1 /* ty=int32 */)
}

def @func_4266() -> Tensor[(4, 5, 16), float32] {
  %1163 = fn () -> Tensor[(4, 5, 16), float32] {
    @func_3414() /* ty=Tensor[(4, 5, 16), float32] */
  };
  %1163() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_10530() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) {
  %1167 = fn () -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) {
    %1164 = @func_6785() /* ty=(Tensor[(4, 5, 16), float64], Tensor[(9, 7, 10), float64], Tensor[(4, 5, 16), float32], Tensor[(630), float64]) */;
    %1165 = @func_9298() /* ty=Tensor[(4, 5, 16), float32] */;
    %1166 = %1164.0;
    (%1165, %1166)
  };
  %1167() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float64]) */
}

def @func_5062() -> Tensor[(4, 5, 16), float32] {
  @func_5060() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_3170() -> Tensor[(4, 5, 16), float32] {
  @func_3168() /* ty=Tensor[(4, 5, 16), float32] */
}

def @func_940(%var_939: int32) -> (Tensor[(15, 11, 14), bool],) {
  %1171 = fn (%var_927: int32) -> (Tensor[(15, 11, 14), bool],) {
    %1168 = cast(%var_927, dtype="bool") /* ty=bool */;
    %1169 = cast(meta[relay.Constant][87] /* ty=Tensor[(15, 11, 14), int32] */, dtype="bool") /* ty=Tensor[(15, 11, 14), bool] */;
    %1170 = greater(%1168, %1169) /* ty=Tensor[(15, 11, 14), bool] */;
    (%1170,)
  };
  %1171(%var_939) /* ty=(Tensor[(15, 11, 14), bool],) */
}

def @func_5358() -> (Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(4, 5, 16), float32]) {
  %1172 = cast(meta[relay.Constant][88] /* ty=Tensor[(363), int32] */, dtype="int32") /* ty=Tensor[(363), int32] */;
  %1173 = cast(meta[relay.Constant][88] /* ty=Tensor[(363), int32] */, dtype="int32") /* ty=Tensor[(363), int32] */;
  %1174 = reshape(%1172, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), int32] */;
  %1175 = reshape(%1173, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), int32] */;
  %1176 = @func_2066(%1174, %1175) /* ty=(Tensor[(11, 11, 3), float64],) */;
  %1177 = @func_4937() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32]) */;
  %1178 = @func_2833() /* ty=Tensor[(4, 5, 16), float32] */;
  %1179 = %1176.0;
  %1180 = %1177.0;
  (%1178, %1179, meta[relay.Constant][88] /* ty=Tensor[(363), int32] */, %1180)
}

def @func_5282(%var_5280: Tensor[(1001), uint16]) -> (Tensor[(4, 5, 16), float32], Tensor[(7, 13, 11), uint16], Tensor[(70), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(363), int32], Tensor[(1001), float64]) {
  @func_5279(%var_5280) /* ty=(Tensor[(4, 5, 16), float32], Tensor[(7, 13, 11), uint16], Tensor[(70), int32], Tensor[(81, 15), float64], Tensor[(144), float64], Tensor[(363), int32], Tensor[(1001), float64]) */
}

def @func_6471() -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
  %1184 = fn () -> (Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) {
    %1181 = @func_3119() /* ty=(Tensor[(4, 5, 16), float32],) */;
    %1182 = @func_3608() /* ty=Tensor[(4, 5, 16), float32] */;
    %1183 = %1181.0;
    (%1182, %1183)
  };
  %1184() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(4, 5, 16), float32]) */
}

def @func_5582(%var_5580: Tensor[(27), float32], %var_5581: int8) -> (Tensor[(11, 11, 3), float64], Tensor[(4, 5, 16), float32], Tensor[(14, 924, 15), int64], Tensor[(27), float32], int8, Tensor[(924), uint16], Tensor[(194040), uint16]) {
  %1198 = fn (%var_5569: Tensor[(27), float32], %var_5570: int8) -> (Tensor[(11, 11, 3), float64], Tensor[(4, 5, 16), float32], Tensor[(14, 924, 15), int64], Tensor[(27), float32], int8, Tensor[(924), uint16], Tensor[(194040), uint16]) {
    %1185 = @func_5358() /* ty=(Tensor[(4, 5, 16), float32], Tensor[(11, 11, 3), float64], Tensor[(363), int32], Tensor[(4, 5, 16), float32]) */;
    %1186 = cast(%var_5569, dtype="float32") /* ty=Tensor[(27), float32] */;
    %1187 = cast(%var_5570, dtype="int8") /* ty=int8 */;
    %1188 = cast(meta[relay.Constant][89] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %1189 = cast(meta[relay.Constant][90] /* ty=Tensor[(194040), uint16] */, dtype="uint16") /* ty=Tensor[(194040), uint16] */;
    %1190 = reshape(%1186, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float32] */;
    %1191 = reshape(%1187, newshape=[]) /* ty=int8 */;
    %1192 = reshape(%1188, newshape=[924]) /* ty=Tensor[(924), uint16] */;
    %1193 = reshape(%1189, newshape=[14, 924, 15]) /* ty=Tensor[(14, 924, 15), uint16] */;
    %1194 = @func_1713(%1190, %1191, %1192, %1193) /* ty=(Tensor[(9, 1, 3), float32], int8, Tensor[(35, 6), int8], Tensor[(924), uint16], Tensor[(14, 924, 15), int64], Tensor[(14, 6, 10), float32], Tensor[(12, 70), bool]) */;
    %1195 = %1185.1;
    %1196 = @func_4412() /* ty=Tensor[(4, 5, 16), float32] */;
    %1197 = %1194.4;
    (%1195, %1196, %1197, %var_5569, %var_5570, meta[relay.Constant][89] /* ty=Tensor[(924), uint16] */, meta[relay.Constant][90] /* ty=Tensor[(194040), uint16] */)
  };
  %1198(%var_5580, %var_5581) /* ty=(Tensor[(11, 11, 3), float64], Tensor[(4, 5, 16), float32], Tensor[(14, 924, 15), int64], Tensor[(27), float32], int8, Tensor[(924), uint16], Tensor[(194040), uint16]) */
}

def @func_2670() -> (Tensor[(4, 5, 16), float64],) {
  %1201 = fn () -> (Tensor[(4, 5, 16), float64],) {
    %1199 = cast(meta[relay.Constant][91] /* ty=Tensor[(4, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(4, 5, 16), float64] */;
    %1200 = sigmoid(%1199) /* ty=Tensor[(4, 5, 16), float64] */;
    (%1200,)
  };
  %1201() /* ty=(Tensor[(4, 5, 16), float64],) */
}

def @func_5998() -> (Tensor[(11, 13, 9), uint16],) {
  @func_5996() /* ty=(Tensor[(11, 13, 9), uint16],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen322/build/output.py:3231: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen322/build/output.py", line 3236, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(315) tvmgen_default_fused_sigmoid_kernel0(float* __restrict__ T_sigmoid, float* __restrict__ placeholder) {
  T_sigmoid[(((int)threadIdx.x))] = (1.000000e+00f / (1.000000e+00f + __expf((0.000000e+00f - placeholder[(((int)threadIdx.x))]))));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_14597() -> (int64,) {
  %0 = @func_9035() /* ty=(int64,) */;
  %1 = %0.0;
  (%1,)
}

def @func_12215(%var_12210: Tensor[(8, 7, 12), float64], %var_12211: Tensor[(8, 7, 12), float64]) -> Tensor[(8, 7, 12), float64] {
  %2 = cast(%var_12211, dtype="float64") /* ty=Tensor[(8, 7, 12), float64] */;
  %3 = shape_of(%var_12210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%var_12210, dtype="float64") /* ty=Tensor[(8, 7, 12), float64] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%4, %5) /* ty=Tensor[(8, 7, 12), float64] */
}

def @func_14729() -> Tensor[(10, 10, 7), int64] {
  @func_14117() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_14864() -> (Tensor[(8, 2, 8), float32], Tensor[(8, 2, 8), float64]) {
  %6 = @func_13202() /* ty=(int64, int64, Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16]) */;
  %7 = %6.3;
  %8 = cast(%7, dtype="float32") /* ty=Tensor[(8, 2, 8), float32] */;
  %9 = cast(%7, dtype="float64") /* ty=Tensor[(8, 2, 8), float64] */;
  %10 = sqrt(%8) /* ty=Tensor[(8, 2, 8), float32] */;
  %11 = acos(%9) /* ty=Tensor[(8, 2, 8), float64] */;
  (%10, %11)
}

def @func_15937() -> Tensor[(10, 10, 7), float32] {
  %12 = @func_11396() /* ty=(Tensor[(10, 10, 7), float32],) */;
  %12.0
}

def @func_8202() -> (Tensor[(10, 10, 7), int64],) {
  %13 = @func_6558() /* ty=Tensor[(10, 10, 7), int64] */;
  (%13,)
}

def @func_11939() -> (Tensor[(975), uint32], Tensor[(143, 14), float64]) {
  %14 = @func_11835() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(975), uint32]) */;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(143, 14), uint16] */, dtype="uint16") /* ty=Tensor[(143, 14), uint16] */;
  %16 = reshape(%15, newshape=[2002]) /* ty=Tensor[(2002), uint16] */;
  %17 = @func_8568(%16) /* ty=(int64, Tensor[(2002), float32], Tensor[(2002), uint16], Tensor[(12, 7, 2), uint8], Tensor[(168), uint8]) */;
  %18 = %17.0;
  %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(143, 14), uint16] */, dtype="float64") /* ty=Tensor[(143, 14), float64] */;
  %20 = cast(%18, dtype="float64") /* ty=float64 */;
  %21 = %14.1;
  %22 = floor_divide(%19, %20) /* ty=Tensor[(143, 14), float64] */;
  (%21, %22)
}

def @func_10171(%var_10150: float64, %var_10151: Tensor[(15, 3, 1), float64]) -> (Tensor[(10, 10, 7), int64], Tensor[(15, 3, ?), bool]) {
  %23 = @func_8732() /* ty=(Tensor[(10, 10, 7), int64], int64) */;
  %24 = cast(%var_10150, dtype="bool") /* ty=bool */;
  %25 = cast(%var_10151, dtype="bool") /* ty=Tensor[(15, 3, 1), bool] */;
  %26 = equal(%24, %25) /* ty=Tensor[(15, 3, 1), bool] */;
  %27 = cast(%var_10151, dtype="bool") /* ty=Tensor[(15, 3, 1), bool] */;
  %28 = shape_of(%26, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(%26, dtype="bool") /* ty=Tensor[(15, 3, 1), bool] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %31 = %23.0;
  %32 = logical_or(%29, %30) /* ty=Tensor[(15, 3, ?), bool] */;
  (%31, %32)
}

def @func_16288() -> (Tensor[(10, 10, 7), int64],) {
  %33 = @func_9515() /* ty=Tensor[(10, 10, 7), int64] */;
  (%33,)
}

def @func_9314(%var_9305: Tensor[(33), float64], %var_9311: Tensor[(180), uint8]) -> (int64, Tensor[(10, 10, 7), int64], Tensor[(11, 3, 1), float64], Tensor[(33), float64], Tensor[(10, 10, 7), int64], Tensor[(180), uint8]) {
  %34 = cast(%var_9305, dtype="float64") /* ty=Tensor[(33), float64] */;
  %35 = reshape(%34, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %36 = cast(%var_9311, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %37 = reshape(%36, newshape=[30, 6]) /* ty=Tensor[(30, 6), uint8] */;
  %38 = @func_6476(%37) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(11, 3, 1), float64], Tensor[(1, 33), float64], Tensor[(4, 16, 16), float64], Tensor[(30, 6), uint8], Tensor[(1024), float64]) */;
  %39 = @func_6845() /* ty=int64 */;
  %40 = @func_6558() /* ty=Tensor[(10, 10, 7), int64] */;
  %41 = @func_908(%35) /* ty=Tensor[(11, 3, 1), float64] */;
  %42 = %38.0;
  (%39, %40, %41, %var_9305, %42, %var_9311)
}

def @func_16036(%var_16018: Tensor[(128), int16]) -> (Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), float64]) {
  %43 = @func_11606() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(3, 12, 3), int16], Tensor[(108), uint64]) */;
  %44 = @func_15683() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %45 = cast(%var_16018, dtype="int16") /* ty=Tensor[(128), int16] */;
  %46 = cast(%var_16018, dtype="int16") /* ty=Tensor[(128), int16] */;
  %47 = reshape(%45, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), int16] */;
  %48 = reshape(%46, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), int16] */;
  %49 = @func_2205(%47, %48) /* ty=Tensor[(8, 2, 8), int16] */;
  %50 = cast(%var_16018, dtype="float64") /* ty=Tensor[(128), float64] */;
  %51 = shape_of(%49, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(%49, dtype="float64") /* ty=Tensor[(8, 2, 8), float64] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %54 = %43.0;
  %55 = %44.0;
  %56 = mod(%52, %53) /* ty=Tensor[(8, 2, 8), float64] */;
  (%54, %55, %56)
}

def @func_15032(%var_15023: Tensor[(975), float32]) -> (Tensor[(975), float64],) {
  %57 = @func_8014() /* ty=(Tensor[(975), float32],) */;
  %58 = %57.0;
  %59 = cast(%var_15023, dtype="float64") /* ty=Tensor[(975), float64] */;
  %60 = shape_of(%58, dtype="int32") /* ty=Tensor[(1), int32] */;
  %61 = cast(%58, dtype="float64") /* ty=Tensor[(975), float64] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?), float64] */;
  %63 = power(%61, %62) /* ty=Tensor[(975), float64] */;
  (%63,)
}

def @func_12196(%var_12193: Tensor[(1694), float64]) -> (int64, Tensor[(6, 1, 3), int64], Tensor[(18, 1), int64], Tensor[(1694), float64]) {
  %64 = cast(meta[relay.Constant][1] /* ty=Tensor[(18, 1), int64] */, dtype="int64") /* ty=Tensor[(18, 1), int64] */;
  %65 = cast(%var_12193, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %66 = reshape(%64, newshape=[6, 1, 3]) /* ty=Tensor[(6, 1, 3), int64] */;
  %67 = reshape(%65, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %68 = @func_10855(%66, %67) /* ty=(Tensor[(6, 1, 3), int64], int64, Tensor[(84), int8], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(1694), float64], int64, Tensor[(1, 4, 9), uint32], Tensor[(36), uint32]) */;
  %69 = @func_10052() /* ty=int64 */;
  %70 = %68.0;
  (%69, %70, meta[relay.Constant][1] /* ty=Tensor[(18, 1), int64] */, %var_12193)
}

def @func_7553() -> (Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) {
  %71 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %72 = %71.1;
  %73 = cast(%72, dtype="float64") /* ty=Tensor[(10, 10, 7), float64] */;
  %74 = cast(%72, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
  %75 = cast(meta[relay.Constant][2] /* ty=Tensor[(975), float32] */, dtype="float32") /* ty=Tensor[(975), float32] */;
  %76 = reshape(%75, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float32] */;
  %77 = @func_2112(%76) /* ty=(Tensor[(15, 5, 13), float32],) */;
  %78 = tan(%73) /* ty=Tensor[(10, 10, 7), float64] */;
  %79 = rsqrt(%74) /* ty=Tensor[(10, 10, 7), float32] */;
  %80 = %77.0;
  (%78, %79, %80, meta[relay.Constant][2] /* ty=Tensor[(975), float32] */)
}

def @func_13081(%var_13020: Tensor[(84), int8], %var_13022: Tensor[(512, 2), float64], %var_13040: Tensor[(180), uint8], %var_13060: Tensor[(512, 2), float32]) -> (Tensor[(15, 5, 13), float32], Tensor[(10, 10, 7), int64], Tensor[(975), float32], Tensor[(1694), float64], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(11, 154), float64], Tensor[(1024), float64], Tensor[(180), uint8], Tensor[(512, 2), bool], Tensor[(10, 10, 7), int64], Tensor[(512, 2), uint32], int64, Tensor[(2, 8, 8), uint8], Tensor[(128), float64], Tensor[(10, 10, 7), int64], Tensor[(3, 6, 10), float64]) {
  %81 = @func_9128() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %82 = @func_10930() /* ty=(Tensor[(975), float32], Tensor[(13, 2, 4), float64]) */;
  %83 = cast(meta[relay.Constant][3] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %84 = cast(%var_13020, dtype="int8") /* ty=Tensor[(84), int8] */;
  %85 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 154), float64] */, dtype="float64") /* ty=Tensor[(11, 154), float64] */;
  %86 = cast(%var_13022, dtype="float64") /* ty=Tensor[(512, 2), float64] */;
  %87 = reshape(%83, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), float32] */;
  %88 = reshape(%84, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %89 = reshape(%85, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %90 = reshape(%86, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %91 = @func_5524(%87, %88, %89, %90) /* ty=(Tensor[(12, 14, 8), float32], Tensor[(15, 5, 13), float32], Tensor[(325, 3), float32], Tensor[(12, 14, 8), float32], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(12, 7, 2), uint8], Tensor[(1, 168), uint8], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) */;
  %92 = cast(%var_13040, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %93 = reshape(%92, newshape=[30, 6]) /* ty=Tensor[(30, 6), uint8] */;
  %94 = @func_6476(%93) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(11, 3, 1), float64], Tensor[(1, 33), float64], Tensor[(4, 16, 16), float64], Tensor[(30, 6), uint8], Tensor[(1024), float64]) */;
  %95 = cast(%var_13022, dtype="float64") /* ty=Tensor[(512, 2), float64] */;
  %96 = acos(%95) /* ty=Tensor[(512, 2), float64] */;
  %97 = cast(%var_13022, dtype="bool") /* ty=Tensor[(512, 2), bool] */;
  %98 = shape_of(%96, dtype="int32") /* ty=Tensor[(2), int32] */;
  %99 = cast(%96, dtype="bool") /* ty=Tensor[(512, 2), bool] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %101 = @func_8800() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %102 = cast(%96, dtype="float32") /* ty=Tensor[(512, 2), float32] */;
  %103 = sin(%102) /* ty=Tensor[(512, 2), float32] */;
  %104 = cast(%var_13060, dtype="uint32") /* ty=Tensor[(512, 2), uint32] */;
  %105 = shape_of(%103, dtype="int32") /* ty=Tensor[(2), int32] */;
  %106 = cast(%103, dtype="uint32") /* ty=Tensor[(512, 2), uint32] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %108 = @func_11233() /* ty=(int64, int64) */;
  %109 = cast(meta[relay.Constant][5] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %110 = reshape(%109, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
  %111 = @func_4288(%110) /* ty=(Tensor[(2, 8, 8), uint8],) */;
  %112 = %108.0;
  %113 = cast(%112, dtype="int64") /* ty=int64 */;
  %114 = reshape(%113, newshape=[]) /* ty=int64 */;
  %115 = @func_543(%114) /* ty=(Tensor[(10, 10, 7), int64],) */;
  %116 = cast(%var_13040, dtype="float64") /* ty=Tensor[(180), float64] */;
  %117 = reshape(%116, newshape=[3, 6, 10]) /* ty=Tensor[(3, 6, 10), float64] */;
  %118 = @func_12564(%117) /* ty=(Tensor[(3, 6, 10), float64],) */;
  %119 = @func_11133() /* ty=Tensor[(15, 5, 13), float32] */;
  %120 = %81.0;
  %121 = %82.0;
  %122 = %91.6;
  %123 = %94.5;
  %124 = greater(%99, %100) /* ty=Tensor[(512, 2), bool] */;
  %125 = %101.0;
  %126 = subtract(%106, %107) /* ty=Tensor[(512, 2), uint32] */;
  %127 = %111.0;
  %128 = %115.0;
  %129 = %118.0;
  (%119, %120, %121, %122, meta[relay.Constant][3] /* ty=Tensor[(1344), float32] */, %var_13020, meta[relay.Constant][4] /* ty=Tensor[(11, 154), float64] */, %123, %var_13040, %124, %125, %126, %112, %127, meta[relay.Constant][5] /* ty=Tensor[(128), float64] */, %128, %129)
}

def @func_11133() -> Tensor[(15, 5, 13), float32] {
  %130 = @func_7553() /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %130.2
}

def @func_11835() -> (Tensor[(10, 10, 7), int64], Tensor[(975), uint32]) {
  %131 = @func_8014() /* ty=(Tensor[(975), float32],) */;
  %132 = %131.0;
  %133 = @func_8174() /* ty=Tensor[(975), float32] */;
  %134 = cast(%133, dtype="uint32") /* ty=Tensor[(975), uint32] */;
  %135 = shape_of(%132, dtype="int32") /* ty=Tensor[(1), int32] */;
  %136 = cast(%132, dtype="uint32") /* ty=Tensor[(975), uint32] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %138 = @func_9820() /* ty=Tensor[(10, 10, 7), int64] */;
  %139 = maximum(%136, %137) /* ty=Tensor[(975), uint32] */;
  (%138, %139)
}

def @func_5104(%var_5088: Tensor[(14, 3, 7), float64], %var_5098: Tensor[(84), int8], %var_5099: Tensor[(847, 2), float64]) -> (Tensor[(14, 3, 7), float64], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(847, 2), float64]) {
  %140 = cast(%var_5088, dtype="float64") /* ty=Tensor[(14, 3, 7), float64] */;
  %141 = cast(%var_5098, dtype="int8") /* ty=Tensor[(84), int8] */;
  %142 = cast(%var_5099, dtype="float64") /* ty=Tensor[(847, 2), float64] */;
  %143 = reshape(%141, newshape=[1, 7, 12]) /* ty=Tensor[(1, 7, 12), int8] */;
  %144 = reshape(%142, newshape=[11, 154]) /* ty=Tensor[(11, 154), float64] */;
  %145 = @func_2403(%143, %144) /* ty=(Tensor[(12, 7, 12), int8], Tensor[(11, 154), float64], int64, Tensor[(12, 7, 12), bool], Tensor[(10, 10, 7), int64]) */;
  %146 = sigmoid(%140) /* ty=Tensor[(14, 3, 7), float64] */;
  %147 = %145.4;
  (%146, %147, %var_5098, %var_5099)
}

def @func_8781() -> Tensor[(10, 10, 7), int64] {
  %148 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %148.0
}

def @func_5690(%var_5683: Tensor[(15, 5, 10), uint16], %var_5684: Tensor[(15, 5, 10), uint16]) -> Tensor[(15, 5, 10), uint16] {
  %149 = cast(%var_5684, dtype="uint16") /* ty=Tensor[(15, 5, 10), uint16] */;
  %150 = shape_of(%var_5683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(%var_5683, dtype="uint16") /* ty=Tensor[(15, 5, 10), uint16] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  right_shift(%151, %152) /* ty=Tensor[(15, 5, 10), uint16] */
}

def @func_15872() -> Tensor[(10, 10, 7), int64] {
  %153 = @func_12339() /* ty=(Tensor[(975), float32], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(1, 36), uint32], Tensor[(180), uint8]) */;
  %153.1
}

def @func_9552() -> (int64,) {
  %154 = @func_9054() /* ty=(int64,) */;
  %155 = %154.0;
  (%155,)
}

def @func_11606() -> (Tensor[(10, 10, 7), int64], Tensor[(3, 12, 3), int16], Tensor[(108), uint64]) {
  %156 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %157 = cast(meta[relay.Constant][6] /* ty=Tensor[(108), uint64] */, dtype="uint64") /* ty=Tensor[(108), uint64] */;
  %158 = reshape(%157, newshape=[3, 12, 3]) /* ty=Tensor[(3, 12, 3), uint64] */;
  %159 = @func_9095(%158) /* ty=(Tensor[(3, 12, 3), int16],) */;
  %160 = %156.0;
  %161 = %159.0;
  (%160, %161, meta[relay.Constant][6] /* ty=Tensor[(108), uint64] */)
}

def @func_14267() -> int64 {
  %162 = @func_9356() /* ty=(int64, Tensor[(975), float32], int64) */;
  %162.0
}

def @func_11456() -> int64 {
  %163 = @func_9552() /* ty=(int64,) */;
  %163.0
}

def @func_6558() -> Tensor[(10, 10, 7), int64] {
  %164 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %164.0
}

def @func_12339() -> (Tensor[(975), float32], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(1, 36), uint32], Tensor[(180), uint8]) {
  %165 = @func_9356() /* ty=(int64, Tensor[(975), float32], int64) */;
  %166 = @func_8202() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %167 = @func_10982() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %168 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %169 = %168.0;
  %170 = cast(%169, dtype="float64") /* ty=Tensor[(10, 10, 7), float64] */;
  %171 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 36), uint32] */, dtype="uint32") /* ty=Tensor[(1, 36), uint32] */;
  %172 = cast(meta[relay.Constant][8] /* ty=Tensor[(180), uint8] */, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %173 = cast(%169, dtype="int64") /* ty=Tensor[(10, 10, 7), int64] */;
  %174 = reshape(%171, newshape=[36]) /* ty=Tensor[(36), uint32] */;
  %175 = reshape(%172, newshape=[180]) /* ty=Tensor[(180), uint8] */;
  %176 = reshape(%173, newshape=[700]) /* ty=Tensor[(700), int64] */;
  %177 = @func_9800(%174, %175, %176) /* ty=(int64, int64, Tensor[(1, 4, 9), uint32], Tensor[(36), uint32], Tensor[(2, 8, 8), uint8], Tensor[(1, 128), float64], int64, Tensor[(10, 10, 7), float32], Tensor[(180), uint8], Tensor[(1024), float64], Tensor[(700), int64]) */;
  %178 = %165.1;
  %179 = %166.0;
  %180 = %167.0;
  %181 = asinh(%170) /* ty=Tensor[(10, 10, 7), float64] */;
  %182 = %177.7;
  (%178, %179, %180, %181, %182, meta[relay.Constant][7] /* ty=Tensor[(1, 36), uint32] */, meta[relay.Constant][8] /* ty=Tensor[(180), uint8] */)
}

def @func_15747() -> (Tensor[(10, 10, 7), int64],) {
  %183 = @func_14117() /* ty=Tensor[(10, 10, 7), int64] */;
  (%183,)
}

def @func_15770() -> (int64,) {
  %184 = @func_6528() /* ty=(int64,) */;
  %185 = %184.0;
  (%185,)
}

def @func_10341() -> (int64,) {
  %186 = @func_8714() /* ty=(int64,) */;
  %187 = %186.0;
  (%187,)
}

def @func_14105() -> int64 {
  %188 = @func_9552() /* ty=(int64,) */;
  %188.0
}

def @func_16238() -> (Tensor[(10, 10, 7), int64],) {
  %189 = @func_11793() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %190 = %189.0;
  (%190,)
}

def @func_11163(%var_11147: Tensor[(1, 14, 9), float64], %var_11158: Tensor[(2, 512), float64], %var_11159: Tensor[(1694), float64]) -> (Tensor[(1, 14, 9), float64], int64, Tensor[(10, 10, 7), int64], Tensor[(12, 14, 8), float32], Tensor[(2, 512), float64], Tensor[(1694), float64]) {
  %191 = cast(%var_11147, dtype="float64") /* ty=Tensor[(1, 14, 9), float64] */;
  %192 = @func_10707() /* ty=(int64,) */;
  %193 = @func_9128() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %194 = cast(%var_11158, dtype="float64") /* ty=Tensor[(2, 512), float64] */;
  %195 = cast(%var_11159, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %196 = reshape(%194, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %197 = reshape(%195, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %198 = @func_8430(%196, %197) /* ty=(Tensor[(975), float32], Tensor[(9, 14, 15), float32], Tensor[(12, 14, 8), float32], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(1024), float64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(1694), bool], Tensor[(84), int8]) */;
  %199 = sigmoid(%191) /* ty=Tensor[(1, 14, 9), float64] */;
  %200 = %192.0;
  %201 = %193.0;
  %202 = %198.2;
  (%199, %200, %201, %202, %var_11158, %var_11159)
}

def @func_14196() -> Tensor[(10, 10, 7), int64] {
  @func_11448() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_15173() -> (Tensor[(10, 10, 7), int64], int64) {
  %203 = @func_9356() /* ty=(int64, Tensor[(975), float32], int64) */;
  %204 = @func_10887() /* ty=Tensor[(10, 10, 7), int64] */;
  %205 = %203.0;
  (%204, %205)
}

def @func_16184(%var_16159: Tensor[(10, 10, 7), int64]) -> (Tensor[(10, 10, 7), bool], int64) {
  %206 = @func_14729() /* ty=Tensor[(10, 10, 7), int64] */;
  %207 = cast(%var_16159, dtype="bool") /* ty=Tensor[(10, 10, 7), bool] */;
  %208 = shape_of(%206, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%206, dtype="bool") /* ty=Tensor[(10, 10, 7), bool] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %211 = @func_12014() /* ty=(int64, Tensor[(10, 10, 7), int64]) */;
  %212 = equal(%209, %210) /* ty=Tensor[(10, 10, 7), bool] */;
  %213 = %211.0;
  (%212, %213)
}

def @func_14117() -> Tensor[(10, 10, 7), int64] {
  @func_8545() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_10707() -> (int64,) {
  %214 = @func_8714() /* ty=(int64,) */;
  %215 = %214.0;
  (%215,)
}

def @func_11019(%var_10987: int32, %var_10988: Tensor[(16, 5, 3), int32], %var_11002: Tensor[(33), float64]) -> (Tensor[(16, 5, 3), int32], Tensor[(11, 3, 1), float64], Tensor[(33), float64], int64) {
  %216 = cast(%var_10987, dtype="int32") /* ty=int32 */;
  %217 = cast(%var_10988, dtype="int32") /* ty=Tensor[(16, 5, 3), int32] */;
  %218 = cast(%var_11002, dtype="float64") /* ty=Tensor[(33), float64] */;
  %219 = reshape(%218, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %220 = @func_9575() /* ty=(int64,) */;
  %221 = multiply(%216, %217) /* ty=Tensor[(16, 5, 3), int32] */;
  %222 = @func_908(%219) /* ty=Tensor[(11, 3, 1), float64] */;
  %223 = %220.0;
  (%221, %222, %var_11002, %223)
}

def @func_10965(%var_10961: Tensor[(84, 1), int8]) -> (Tensor[(10, 10, 7), int64], Tensor[(847, 2), float64], Tensor[(294), float64], Tensor[(84, 1), int8], Tensor[(1694), float64]) {
  %224 = @func_7391() /* ty=(int64, Tensor[(10, 10, 7), int64]) */;
  %225 = cast(meta[relay.Constant][9] /* ty=Tensor[(294), float64] */, dtype="float64") /* ty=Tensor[(294), float64] */;
  %226 = cast(%var_10961, dtype="int8") /* ty=Tensor[(84, 1), int8] */;
  %227 = cast(meta[relay.Constant][10] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %228 = reshape(%225, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float64] */;
  %229 = reshape(%226, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %230 = reshape(%227, newshape=[847, 2]) /* ty=Tensor[(847, 2), float64] */;
  %231 = @func_5104(%228, %229, %230) /* ty=(Tensor[(14, 3, 7), float64], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(847, 2), float64]) */;
  %232 = %224.1;
  %233 = %231.3;
  (%232, %233, meta[relay.Constant][9] /* ty=Tensor[(294), float64] */, %var_10961, meta[relay.Constant][10] /* ty=Tensor[(1694), float64] */)
}

def @func_9724(%var_9719: Tensor[(3, 7, 11), bool], %var_9720: Tensor[(3, 7, 11), bool]) -> Tensor[(3, 7, 11), bool] {
  %234 = cast(%var_9720, dtype="bool") /* ty=Tensor[(3, 7, 11), bool] */;
  %235 = shape_of(%var_9719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(%var_9719, dtype="bool") /* ty=Tensor[(3, 7, 11), bool] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%236, %237) /* ty=Tensor[(3, 7, 11), bool] */
}

def @func_15221(%var_15216: Tensor[(3, 12, 3), uint64]) -> (Tensor[(3, 12, 3), bool],) {
  %238 = @func_8350() /* ty=(Tensor[(3, 12, 3), uint64],) */;
  %239 = %238.0;
  %240 = cast(%var_15216, dtype="bool") /* ty=Tensor[(3, 12, 3), bool] */;
  %241 = shape_of(%239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(%239, dtype="bool") /* ty=Tensor[(3, 12, 3), bool] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %244 = not_equal(%242, %243) /* ty=Tensor[(3, 12, 3), bool] */;
  (%244,)
}

def @func_5998(%var_5980: Tensor[(4, 15, 3), uint8], %var_5994: Tensor[(1024), float64]) -> (Tensor[(4, 15, 3), bool], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) {
  %245 = cast(%var_5980, dtype="bool") /* ty=Tensor[(4, 15, 3), bool] */;
  %246 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(4, 15, 3), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 15, 3), uint8] */, dtype="bool") /* ty=Tensor[(4, 15, 3), bool] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %249 = cast(%var_5994, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %250 = cast(%var_5994, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %251 = reshape(%249, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
  %252 = reshape(%250, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
  %253 = @func_934(%251, %252) /* ty=(Tensor[(4, 16, 16), float64],) */;
  %254 = less(%247, %248) /* ty=Tensor[(4, 15, 3), bool] */;
  %255 = %253.0;
  (%254, %255, %var_5994)
}

def @func_10052() -> int64 {
  @func_6707() /* ty=int64 */
}

def @func_13398() -> int64 {
  %256 = @func_9575() /* ty=(int64,) */;
  %256.0
}

def @func_7906() -> Tensor[(10, 10, 7), int64] {
  %257 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
  %257.1
}

def @func_12564(%var_12560: Tensor[(3, 6, 10), float64]) -> (Tensor[(3, 6, 10), float64],) {
  %258 = cast(%var_12560, dtype="float64") /* ty=Tensor[(3, 6, 10), float64] */;
  %259 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(3, 6, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 6, 10), float64] */, dtype="float64") /* ty=Tensor[(3, 6, 10), float64] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %262 = divide(%260, %261) /* ty=Tensor[(3, 6, 10), float64] */;
  (%262,)
}

def @func_8136() -> (Tensor[(15, 5, 13), float32],) {
  %263 = @func_7553() /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %264 = %263.2;
  (%264,)
}

def @func_2403(%var_2333: Tensor[(1, 7, 12), int8], %var_2353: Tensor[(11, 154), float64]) -> (Tensor[(12, 7, 12), int8], Tensor[(11, 154), float64], int64, Tensor[(12, 7, 12), bool], Tensor[(10, 10, 7), int64]) {
  %265 = cast(%var_2333, dtype="int8") /* ty=Tensor[(1, 7, 12), int8] */;
  %266 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 7, 12), int8] */, dtype="int8") /* ty=Tensor[(12, 7, 12), int8] */;
  %267 = cast(%var_2353, dtype="float64") /* ty=Tensor[(11, 154), float64] */;
  %268 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %269 = reshape(%267, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float64] */;
  %270 = reshape(%268, newshape=[]) /* ty=int64 */;
  %271 = @func_1548(%269, %270) /* ty=(Tensor[(11, 11, 14), float64], Tensor[(10, 10, 7), int64], int64) */;
  %272 = %271.2;
  %273 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 7, 12), int8] */, dtype="bool") /* ty=Tensor[(12, 7, 12), bool] */;
  %274 = cast(%272, dtype="bool") /* ty=bool */;
  %275 = cast(%var_2353, dtype="float64") /* ty=Tensor[(11, 154), float64] */;
  %276 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %277 = reshape(%275, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float64] */;
  %278 = reshape(%276, newshape=[]) /* ty=int64 */;
  %279 = @func_1548(%277, %278) /* ty=(Tensor[(11, 11, 14), float64], Tensor[(10, 10, 7), int64], int64) */;
  %280 = logical_xor(%265, %266) /* ty=Tensor[(12, 7, 12), int8] */;
  %281 = logical_or(%273, %274) /* ty=Tensor[(12, 7, 12), bool] */;
  %282 = %279.1;
  (%280, %var_2353, -10 /* ty=int64 */, %281, %282)
}

def @func_543(%var_538: int64) -> (Tensor[(10, 10, 7), int64],) {
  %283 = cast(%var_538, dtype="int64") /* ty=int64 */;
  %284 = cast(meta[relay.Constant][14] /* ty=Tensor[(10, 10, 7), int64] */, dtype="int64") /* ty=Tensor[(10, 10, 7), int64] */;
  %285 = multiply(%283, %284) /* ty=Tensor[(10, 10, 7), int64] */;
  (%285,)
}

def @func_2112(%var_2101: Tensor[(15, 5, 13), float32]) -> (Tensor[(15, 5, 13), float32],) {
  %286 = cast(%var_2101, dtype="float32") /* ty=Tensor[(15, 5, 13), float32] */;
  %287 = sqrt(%286) /* ty=Tensor[(15, 5, 13), float32] */;
  (%287,)
}

def @func_12946(%var_12938: Tensor[(10, 10, 7), int64]) -> Tensor[(10, 10, 7), float32] {
  %288 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %289 = %288.0;
  %290 = cast(%var_12938, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
  %291 = shape_of(%289, dtype="int32") /* ty=Tensor[(3), int32] */;
  %292 = cast(%289, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%292, %293) /* ty=Tensor[(10, 10, 7), float32] */
}

def @func_8014() -> (Tensor[(975), float32],) {
  %294 = @func_6884() /* ty=(Tensor[(9, 14, 15), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %295 = %294.2;
  (%295,)
}

def @func_14813() -> (int64, Tensor[(10, 10, 7), float32]) {
  %296 = @func_13258() /* ty=(int64,) */;
  %297 = @func_11396() /* ty=(Tensor[(10, 10, 7), float32],) */;
  %298 = %296.0;
  %299 = %297.0;
  (%298, %299)
}

def @func_10354() -> Tensor[(975), float32] {
  %300 = @func_8323() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16], Tensor[(128), int16], Tensor[(975), float32]) */;
  %300.3
}

def @func_8350() -> (Tensor[(3, 12, 3), uint64],) {
  %301 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 12, 3), float64] */, dtype="float64") /* ty=Tensor[(3, 12, 3), float64] */;
  %302 = tan(%301) /* ty=Tensor[(3, 12, 3), float64] */;
  %303 = cast(%302, dtype="uint64") /* ty=Tensor[(3, 12, 3), uint64] */;
  %304 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(3, 12, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %305 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 12, 3), float64] */, dtype="uint64") /* ty=Tensor[(3, 12, 3), uint64] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %307 = add(%305, %306) /* ty=Tensor[(3, 12, 3), uint64] */;
  (%307,)
}

def @func_11448() -> Tensor[(10, 10, 7), int64] {
  @func_9820() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_15634() -> (int64, Tensor[(13, 2, 4), float64]) {
  %308 = @func_10052() /* ty=int64 */;
  %309 = @func_8869() /* ty=Tensor[(13, 2, 4), float64] */;
  (%308, %309)
}

def @func_9515() -> Tensor[(10, 10, 7), int64] {
  %310 = @func_9128() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %310.0
}

def @func_12879(%var_12875: Tensor[(84), int8], %var_12876: Tensor[(1694), float64]) -> (Tensor[(975), float32], Tensor[(1694), float64], Tensor[(84), int8], Tensor[(1694), float64]) {
  %311 = @func_10930() /* ty=(Tensor[(975), float32], Tensor[(13, 2, 4), float64]) */;
  %312 = cast(%var_12875, dtype="int8") /* ty=Tensor[(84), int8] */;
  %313 = cast(%var_12876, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %314 = reshape(%312, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %315 = reshape(%313, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %316 = @func_9494(%314, %315) /* ty=(int64, Tensor[(12, 7, 12), bool], Tensor[(84), int8], Tensor[(1694), float64]) */;
  %317 = %311.0;
  %318 = %316.3;
  (%317, %318, %var_12875, %var_12876)
}

def @func_13202() -> (int64, int64, Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16]) {
  %319 = @func_9575() /* ty=(int64,) */;
  %320 = @func_9035() /* ty=(int64,) */;
  %321 = @func_9148() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %322 = @func_8323() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16], Tensor[(128), int16], Tensor[(975), float32]) */;
  %323 = %319.0;
  %324 = %320.0;
  %325 = %321.0;
  %326 = %322.1;
  (%323, %324, %325, %326)
}

def @func_10106() -> (Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(3, 28), int8], Tensor[(1, 4, 9), uint32], Tensor[(36), uint32]) {
  %327 = @func_7391() /* ty=(int64, Tensor[(10, 10, 7), int64]) */;
  %328 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 28), int8] */, dtype="int8") /* ty=Tensor[(3, 28), int8] */;
  %329 = reshape(%328, newshape=[1, 84]) /* ty=Tensor[(1, 84), int8] */;
  %330 = @func_8280(%329) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1, 84), int8]) */;
  %331 = cast(meta[relay.Constant][17] /* ty=Tensor[(36), uint32] */, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %332 = reshape(%331, newshape=[1, 4, 9]) /* ty=Tensor[(1, 4, 9), uint32] */;
  %333 = @func_4840(%332) /* ty=(Tensor[(1, 4, 9), uint32],) */;
  %334 = %327.1;
  %335 = %330.0;
  %336 = %333.0;
  (%334, %335, meta[relay.Constant][16] /* ty=Tensor[(3, 28), int8] */, %336, meta[relay.Constant][17] /* ty=Tensor[(36), uint32] */)
}

def @func_9264() -> (int64, int64) {
  %337 = @func_8714() /* ty=(int64,) */;
  %338 = @func_8622() /* ty=int64 */;
  %339 = %337.0;
  (%338, %339)
}

def @func_16568() -> Tensor[(10, 10, 7), int64] {
  %340 = @func_6903() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %340.0
}

def @func_10982() -> (Tensor[(10, 10, 7), int64],) {
  %341 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
  %342 = %341.1;
  (%342,)
}

def @func_1548(%var_1531: Tensor[(11, 11, 14), float64], %var_1536: int64) -> (Tensor[(11, 11, 14), float64], Tensor[(10, 10, 7), int64], int64) {
  %343 = cast(%var_1531, dtype="float64") /* ty=Tensor[(11, 11, 14), float64] */;
  %344 = cast(%var_1536, dtype="int64") /* ty=int64 */;
  %345 = reshape(%344, newshape=[]) /* ty=int64 */;
  %346 = @func_543(%345) /* ty=(Tensor[(10, 10, 7), int64],) */;
  %347 = exp(%343) /* ty=Tensor[(11, 11, 14), float64] */;
  %348 = %346.0;
  (%347, %348, %var_1536)
}

def @func_9800(%var_9781: Tensor[(36), uint32], %var_9795: Tensor[(180), uint8], %var_9797: Tensor[(700), int64]) -> (int64, int64, Tensor[(1, 4, 9), uint32], Tensor[(36), uint32], Tensor[(2, 8, 8), uint8], Tensor[(1, 128), float64], int64, Tensor[(10, 10, 7), float32], Tensor[(180), uint8], Tensor[(1024), float64], Tensor[(700), int64]) {
  %349 = @func_9741() /* ty=(int64,) */;
  %350 = cast(%var_9781, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %351 = reshape(%350, newshape=[1, 4, 9]) /* ty=Tensor[(1, 4, 9), uint32] */;
  %352 = @func_4840(%351) /* ty=(Tensor[(1, 4, 9), uint32],) */;
  %353 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 128), float64] */, dtype="float64") /* ty=Tensor[(1, 128), float64] */;
  %354 = reshape(%353, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
  %355 = @func_4288(%354) /* ty=(Tensor[(2, 8, 8), uint8],) */;
  %356 = @func_9575() /* ty=(int64,) */;
  %357 = cast(%var_9795, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %358 = cast(meta[relay.Constant][19] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %359 = cast(%var_9797, dtype="int64") /* ty=Tensor[(700), int64] */;
  %360 = reshape(%357, newshape=[180]) /* ty=Tensor[(180), uint8] */;
  %361 = reshape(%358, newshape=[512, 2]) /* ty=Tensor[(512, 2), float64] */;
  %362 = reshape(%359, newshape=[10, 10, 7]) /* ty=Tensor[(10, 10, 7), int64] */;
  %363 = @func_7166(%360, %361, %362) /* ty=(Tensor[(13, 2, 4), float64], Tensor[(4, 15, 3), bool], Tensor[(180), uint8], Tensor[(10, 10, 7), float32], Tensor[(512, 2), float32]) */;
  %364 = %349.0;
  %365 = @func_6707() /* ty=int64 */;
  %366 = %352.0;
  %367 = %355.0;
  %368 = %356.0;
  %369 = %363.3;
  (%364, %365, %366, %var_9781, %367, meta[relay.Constant][18] /* ty=Tensor[(1, 128), float64] */, %368, %369, %var_9795, meta[relay.Constant][19] /* ty=Tensor[(1024), float64] */, %var_9797)
}

def @func_8280(%var_8276: Tensor[(1, 84), int8]) -> (Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1, 84), int8]) {
  %370 = cast(%var_8276, dtype="int8") /* ty=Tensor[(1, 84), int8] */;
  %371 = reshape(%370, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %372 = @func_5945(%371) /* ty=(Tensor[(5, 5, 10), bool], Tensor[(84), int8], Tensor[(1, 294), float64], Tensor[(84), int8], Tensor[(847, 2), float64]) */;
  %373 = @func_6558() /* ty=Tensor[(10, 10, 7), int64] */;
  %374 = %372.1;
  (%373, %374, %var_8276)
}

def @func_9575() -> (int64,) {
  %375 = @func_6707() /* ty=int64 */;
  (%375,)
}

def @func_6528() -> (int64,) {
  %376 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %377 = %376.2;
  (%377,)
}

def @func_15456() -> (Tensor[(10, 10, 7), int64], int64, Tensor[(10, 10, 7), uint32], int64) {
  %378 = @func_8545() /* ty=Tensor[(10, 10, 7), int64] */;
  %379 = cast(meta[relay.Constant][20] /* ty=Tensor[(10, 10, 7), int64] */, dtype="uint32") /* ty=Tensor[(10, 10, 7), uint32] */;
  %380 = shape_of(%378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %381 = cast(%378, dtype="uint32") /* ty=Tensor[(10, 10, 7), uint32] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %383 = @func_13202() /* ty=(int64, int64, Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16]) */;
  %384 = @func_6558() /* ty=Tensor[(10, 10, 7), int64] */;
  %385 = @func_11456() /* ty=int64 */;
  %386 = left_shift(%381, %382) /* ty=Tensor[(10, 10, 7), uint32] */;
  %387 = %383.1;
  (%384, %385, %386, %387)
}

def @func_12484(%var_12433: Tensor[(1694, 1), float64]) -> (Tensor[(975), float32], int64, Tensor[(15, 5, 13), float32], Tensor[(10, 10, 7), float64], Tensor[(975), float32], Tensor[(10, 10, 7), int64], int64, Tensor[(1694, 1), float64], int64, Tensor[(10, 10, 7), int64]) {
  %388 = @func_6884() /* ty=(Tensor[(9, 14, 15), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %389 = @func_12339() /* ty=(Tensor[(975), float32], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(1, 36), uint32], Tensor[(180), uint8]) */;
  %390 = @func_8014() /* ty=(Tensor[(975), float32],) */;
  %391 = cast(%var_12433, dtype="float64") /* ty=Tensor[(1694, 1), float64] */;
  %392 = reshape(%391, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %393 = @func_12196(%392) /* ty=(int64, Tensor[(6, 1, 3), int64], Tensor[(18, 1), int64], Tensor[(1694), float64]) */;
  %394 = @func_8714() /* ty=(int64,) */;
  %395 = @func_8202() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %396 = @func_10354() /* ty=Tensor[(975), float32] */;
  %397 = @func_9406() /* ty=int64 */;
  %398 = %388.1;
  %399 = %389.3;
  %400 = %390.0;
  %401 = @func_9515() /* ty=Tensor[(10, 10, 7), int64] */;
  %402 = %393.0;
  %403 = %394.0;
  %404 = %395.0;
  (%396, %397, %398, %399, %400, %401, %402, %var_12433, %403, %404)
}

def @func_15971(%var_15968: Tensor[(84), int8]) -> (Tensor[(975), float32], Tensor[(3, 12, 3), int16], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(84), int8], Tensor[(1694), float64]) {
  %405 = @func_13672() /* ty=(Tensor[(975), float32],) */;
  %406 = @func_11606() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(3, 12, 3), int16], Tensor[(108), uint64]) */;
  %407 = @func_11501() /* ty=(Tensor[(975), float32], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(847, 2), bool], Tensor[(847, 2), float32]) */;
  %408 = cast(%var_15968, dtype="int8") /* ty=Tensor[(84), int8] */;
  %409 = cast(meta[relay.Constant][21] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %410 = reshape(%408, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %411 = reshape(%409, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %412 = @func_12879(%410, %411) /* ty=(Tensor[(975), float32], Tensor[(1694), float64], Tensor[(84), int8], Tensor[(1694), float64]) */;
  %413 = %405.0;
  %414 = %406.1;
  %415 = %407.1;
  %416 = %412.2;
  (%413, %414, %415, %416, %var_15968, meta[relay.Constant][21] /* ty=Tensor[(1694), float64] */)
}

def @func_4288(%var_4271: Tensor[(2, 8, 8), float64]) -> (Tensor[(2, 8, 8), uint8],) {
  %417 = cast(%var_4271, dtype="float64") /* ty=Tensor[(2, 8, 8), float64] */;
  %418 = sinh(%417) /* ty=Tensor[(2, 8, 8), float64] */;
  %419 = cast(%418, dtype="uint8") /* ty=Tensor[(2, 8, 8), uint8] */;
  %420 = shape_of(%var_4271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %421 = cast(%var_4271, dtype="uint8") /* ty=Tensor[(2, 8, 8), uint8] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %423 = minimum(%421, %422) /* ty=Tensor[(2, 8, 8), uint8] */;
  (%423,)
}

def @func_7391() -> (int64, Tensor[(10, 10, 7), int64]) {
  %424 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %425 = @func_6751() /* ty=int64 */;
  %426 = %424.0;
  (%425, %426)
}

def @func_16459() -> (Tensor[(10, 10, 7), int64], int64, Tensor[(10, 10, 7), int64]) {
  %427 = @func_15683() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %428 = @func_6903() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %429 = %427.0;
  %430 = @func_14105() /* ty=int64 */;
  %431 = %428.0;
  (%429, %430, %431)
}

def @func_9997(%var_9912: Tensor[(33), float64], %var_9935: Tensor[(847, 2), float64], %var_9960: Tensor[(231), bool], %var_9979: Tensor[(11, 182), uint16], %var_9989: Tensor[(168), uint8]) -> (Tensor[(15, 5, 13), float32], Tensor[(10, 10, 7), int64], Tensor[(11, 3, 1), float64], Tensor[(33), float64], int64, Tensor[(1344), float32], Tensor[(1024), float64], Tensor[(847, 2), float64], Tensor[(15, 5, 13), float32], Tensor[(10, 10, 7), int64], Tensor[(3, 7, 11), bool], Tensor[(231), bool], Tensor[(2002), uint16], Tensor[(11, 182), uint16], Tensor[(10, 10, 7), float32], Tensor[(8, 2, 8), float32], Tensor[(168), uint8], Tensor[(128), int16]) {
  %432 = @func_6884() /* ty=(Tensor[(9, 14, 15), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %433 = @func_9128() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %434 = cast(%var_9912, dtype="float64") /* ty=Tensor[(33), float64] */;
  %435 = reshape(%434, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %436 = @func_9264() /* ty=(int64, int64) */;
  %437 = cast(meta[relay.Constant][22] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %438 = cast(%var_9935, dtype="float64") /* ty=Tensor[(847, 2), float64] */;
  %439 = reshape(%437, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %440 = reshape(%438, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %441 = @func_8430(%439, %440) /* ty=(Tensor[(975), float32], Tensor[(9, 14, 15), float32], Tensor[(12, 14, 8), float32], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(1024), float64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(1694), bool], Tensor[(84), int8]) */;
  %442 = %432.1;
  %443 = cast(%442, dtype="float32") /* ty=Tensor[(15, 5, 13), float32] */;
  %444 = reshape(%443, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float32] */;
  %445 = @func_2112(%444) /* ty=(Tensor[(15, 5, 13), float32],) */;
  %446 = cast(meta[relay.Constant][22] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %447 = cast(%var_9935, dtype="float64") /* ty=Tensor[(847, 2), float64] */;
  %448 = reshape(%446, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %449 = reshape(%447, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %450 = @func_8430(%448, %449) /* ty=(Tensor[(975), float32], Tensor[(9, 14, 15), float32], Tensor[(12, 14, 8), float32], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(1024), float64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(1694), bool], Tensor[(84), int8]) */;
  %451 = cast(%var_9960, dtype="bool") /* ty=Tensor[(231), bool] */;
  %452 = cast(%var_9960, dtype="bool") /* ty=Tensor[(231), bool] */;
  %453 = reshape(%451, newshape=[3, 7, 11]) /* ty=Tensor[(3, 7, 11), bool] */;
  %454 = reshape(%452, newshape=[3, 7, 11]) /* ty=Tensor[(3, 7, 11), bool] */;
  %455 = cast(%var_9979, dtype="uint16") /* ty=Tensor[(11, 182), uint16] */;
  %456 = reshape(%455, newshape=[2002]) /* ty=Tensor[(2002), uint16] */;
  %457 = @func_8568(%456) /* ty=(int64, Tensor[(2002), float32], Tensor[(2002), uint16], Tensor[(12, 7, 2), uint8], Tensor[(168), uint8]) */;
  %458 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
  %459 = %458.1;
  %460 = cast(%459, dtype="float64") /* ty=Tensor[(10, 10, 7), float64] */;
  %461 = atanh(%460) /* ty=Tensor[(10, 10, 7), float64] */;
  %462 = cast(%461, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
  %463 = cast(%var_9989, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %464 = cast(meta[relay.Constant][23] /* ty=Tensor[(128), int16] */, dtype="int16") /* ty=Tensor[(128), int16] */;
  %465 = reshape(%463, newshape=[168]) /* ty=Tensor[(168), uint8] */;
  %466 = reshape(%464, newshape=[128]) /* ty=Tensor[(128), int16] */;
  %467 = @func_6624(%465, %466) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(128), int16], Tensor[(8, 2, 8), float32], Tensor[(13, 2, 4), float64]) */;
  %468 = %433.0;
  %469 = @func_908(%435) /* ty=Tensor[(11, 3, 1), float64] */;
  %470 = %436.1;
  %471 = %441.3;
  %472 = %445.0;
  %473 = %450.6;
  %474 = @func_9724(%453, %454) /* ty=Tensor[(3, 7, 11), bool] */;
  %475 = %457.2;
  %476 = sinh(%462) /* ty=Tensor[(10, 10, 7), float32] */;
  %477 = %467.4;
  (%442, %468, %469, %var_9912, %470, %471, meta[relay.Constant][22] /* ty=Tensor[(1024), float64] */, %var_9935, %472, %473, %474, %var_9960, %475, %var_9979, %476, %477, %var_9989, meta[relay.Constant][23] /* ty=Tensor[(128), int16] */)
}

def @func_15123(%var_15113: Tensor[(84), int8]) -> (Tensor[(10, 10, 7), int64], int64, Tensor[(975), float32], Tensor[(84), int8], Tensor[(1, 294), float32], Tensor[(10, 10, 7), int64]) {
  %478 = @func_9552() /* ty=(int64,) */;
  %479 = @func_14536() /* ty=(Tensor[(975), float32],) */;
  %480 = cast(%var_15113, dtype="int8") /* ty=Tensor[(84), int8] */;
  %481 = reshape(%480, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %482 = @func_5945(%481) /* ty=(Tensor[(5, 5, 10), bool], Tensor[(84), int8], Tensor[(1, 294), float64], Tensor[(84), int8], Tensor[(847, 2), float64]) */;
  %483 = %482.2;
  %484 = cast(%483, dtype="float32") /* ty=Tensor[(1, 294), float32] */;
  %485 = @func_8732() /* ty=(Tensor[(10, 10, 7), int64], int64) */;
  %486 = @func_11448() /* ty=Tensor[(10, 10, 7), int64] */;
  %487 = %478.0;
  %488 = %479.0;
  %489 = asinh(%484) /* ty=Tensor[(1, 294), float32] */;
  %490 = %485.0;
  (%486, %487, %488, %var_15113, %489, %490)
}

def @func_4840(%var_4835: Tensor[(1, 4, 9), uint32]) -> (Tensor[(1, 4, 9), uint32],) {
  %491 = cast(meta[relay.Constant][24] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %492 = cast(%var_4835, dtype="uint32") /* ty=Tensor[(1, 4, 9), uint32] */;
  %493 = bitwise_xor(%491, %492) /* ty=Tensor[(1, 4, 9), uint32] */;
  (%493,)
}

def @func_7653(%var_7610: Tensor[(7, 42), float64], %var_7611: Tensor[(84), int8], %var_7612: Tensor[(1694), float64], %var_7632: Tensor[(3, 56), bool], %var_7644: int64) -> (Tensor[(10, 10, 7), int64], Tensor[(847, 2), float64], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(3, 56), int64], Tensor[(10, 10, 7), int64], Tensor[(33), float64], int64) {
  %494 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %495 = cast(%var_7610, dtype="float64") /* ty=Tensor[(7, 42), float64] */;
  %496 = cast(%var_7611, dtype="int8") /* ty=Tensor[(84), int8] */;
  %497 = cast(%var_7612, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %498 = reshape(%495, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float64] */;
  %499 = reshape(%496, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %500 = reshape(%497, newshape=[847, 2]) /* ty=Tensor[(847, 2), float64] */;
  %501 = @func_5104(%498, %499, %500) /* ty=(Tensor[(14, 3, 7), float64], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(847, 2), float64]) */;
  %502 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 56), uint8] */, dtype="uint8") /* ty=Tensor[(3, 56), uint8] */;
  %503 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 56), uint8] */, dtype="uint8") /* ty=Tensor[(3, 56), uint8] */;
  %504 = reshape(%502, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
  %505 = reshape(%503, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
  %506 = @func_1575(%504, %505) /* ty=Tensor[(12, 7, 2), uint8] */;
  %507 = cast(%506, dtype="bool") /* ty=Tensor[(12, 7, 2), bool] */;
  %508 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(3, 56), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %509 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 56), uint8] */, dtype="bool") /* ty=Tensor[(3, 56), bool] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %511 = greater(%509, %510) /* ty=Tensor[(3, 56), bool] */;
  %512 = cast(%var_7632, dtype="int64") /* ty=Tensor[(3, 56), int64] */;
  %513 = shape_of(%511, dtype="int32") /* ty=Tensor[(2), int32] */;
  %514 = cast(%511, dtype="int64") /* ty=Tensor[(3, 56), int64] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %516 = cast(meta[relay.Constant][26] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %517 = cast(%var_7632, dtype="uint8") /* ty=Tensor[(3, 56), uint8] */;
  %518 = cast(%var_7644, dtype="int64") /* ty=int64 */;
  %519 = reshape(%516, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %520 = reshape(%517, newshape=[42, 4]) /* ty=Tensor[(42, 4), uint8] */;
  %521 = reshape(%518, newshape=[]) /* ty=int64 */;
  %522 = @func_4140(%519, %520, %521) /* ty=(Tensor[(11, 11, 3), float64], Tensor[(11, 3, 1), float64], Tensor[(33), float64], Tensor[(12, 7, 2), uint8], Tensor[(42, 4), uint8], Tensor[(10, 10, 7), int64], Tensor[(1694), float64], int64) */;
  %523 = %494.1;
  %524 = %501.3;
  %525 = maximum(%514, %515) /* ty=Tensor[(3, 56), int64] */;
  %526 = %522.5;
  (%523, %524, %var_7610, %var_7611, %var_7612, %525, %526, meta[relay.Constant][26] /* ty=Tensor[(33), float64] */, %var_7644)
}

def @func_10887() -> Tensor[(10, 10, 7), int64] {
  %527 = @func_6903() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %527.0
}

def @func_6884() -> (Tensor[(9, 14, 15), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) {
  %528 = cast(meta[relay.Constant][27] /* ty=Tensor[(9, 14, 15), float32] */, dtype="float32") /* ty=Tensor[(9, 14, 15), float32] */;
  %529 = cast(meta[relay.Constant][28] /* ty=Tensor[(975), float32] */, dtype="float32") /* ty=Tensor[(975), float32] */;
  %530 = reshape(%529, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float32] */;
  %531 = @func_2112(%530) /* ty=(Tensor[(15, 5, 13), float32],) */;
  %532 = cos(%528) /* ty=Tensor[(9, 14, 15), float32] */;
  %533 = %531.0;
  (%532, %533, meta[relay.Constant][28] /* ty=Tensor[(975), float32] */)
}

def @func_14282() -> int64 {
  %534 = @func_13792() /* ty=(Tensor[(10, 10, 7), int64], int64, Tensor[(10, 10, 7), int64]) */;
  %534.1
}

def @func_15255(%var_15246: Tensor[(3, 3, 1), float64]) -> (Tensor[(3, 3, 1), float64],) {
  %535 = cast(%var_15246, dtype="float64") /* ty=Tensor[(3, 3, 1), float64] */;
  %536 = sinh(%535) /* ty=Tensor[(3, 3, 1), float64] */;
  (%536,)
}

def @main(%var_16643: Tensor[(1, 12, 7), int32], %var_16644: Tensor[(1, 12, 7), int32]) -> Tensor[(?, 12, 7), int32] {
  %537 = cast(%var_16644, dtype="int32") /* ty=Tensor[(1, 12, 7), int32] */;
  %538 = shape_of(%var_16643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %539 = cast(%var_16643, dtype="int32") /* ty=Tensor[(1, 12, 7), int32] */;
  %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  right_shift(%539, %540) /* ty=Tensor[(?, 12, 7), int32] */
}

def @func_15350() -> (Tensor[(10, 10, 7), int64],) {
  %541 = @func_11835() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(975), uint32]) */;
  %542 = %541.0;
  (%542,)
}

def @func_14163() -> (int64, Tensor[(13, 2, 4), float64]) {
  %543 = @func_10341() /* ty=(int64,) */;
  %544 = @func_13870() /* ty=(Tensor[(13, 2, 4), float64],) */;
  %545 = %543.0;
  %546 = %544.0;
  (%545, %546)
}

def @func_15727(%var_15710: Tensor[(1694), float64], %var_15711: Tensor[(168), bool], %var_15712: int64) -> (Tensor[(10, 10, 7), int64], int64, Tensor[(42, 2), int8], Tensor[(1694), float64], Tensor[(168), bool], int64, Tensor[(294), float32], int64) {
  %547 = cast(meta[relay.Constant][29] /* ty=Tensor[(294), float64] */, dtype="float64") /* ty=Tensor[(294), float64] */;
  %548 = cast(meta[relay.Constant][30] /* ty=Tensor[(42, 2), int8] */, dtype="int8") /* ty=Tensor[(42, 2), int8] */;
  %549 = cast(%var_15710, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %550 = cast(%var_15711, dtype="bool") /* ty=Tensor[(168), bool] */;
  %551 = cast(%var_15712, dtype="int64") /* ty=int64 */;
  %552 = reshape(%547, newshape=[7, 42]) /* ty=Tensor[(7, 42), float64] */;
  %553 = reshape(%548, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %554 = reshape(%549, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %555 = reshape(%550, newshape=[3, 56]) /* ty=Tensor[(3, 56), bool] */;
  %556 = reshape(%551, newshape=[]) /* ty=int64 */;
  %557 = @func_7653(%552, %553, %554, %555, %556) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(847, 2), float64], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(3, 56), int64], Tensor[(10, 10, 7), int64], Tensor[(33), float64], int64) */;
  %558 = cast(meta[relay.Constant][29] /* ty=Tensor[(294), float64] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %559 = @func_9515() /* ty=Tensor[(10, 10, 7), int64] */;
  %560 = %557.8;
  %561 = log2(%558) /* ty=Tensor[(294), float32] */;
  %562 = @func_10052() /* ty=int64 */;
  (%559, %560, meta[relay.Constant][30] /* ty=Tensor[(42, 2), int8] */, %var_15710, %var_15711, %var_15712, %561, %562)
}

def @func_10254() -> (Tensor[(975), float32], Tensor[(1, 294), float64], Tensor[(84), int8]) {
  %563 = @func_6884() /* ty=(Tensor[(9, 14, 15), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %564 = cast(meta[relay.Constant][31] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %565 = reshape(%564, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %566 = @func_5945(%565) /* ty=(Tensor[(5, 5, 10), bool], Tensor[(84), int8], Tensor[(1, 294), float64], Tensor[(84), int8], Tensor[(847, 2), float64]) */;
  %567 = %563.2;
  %568 = %566.2;
  (%567, %568, meta[relay.Constant][31] /* ty=Tensor[(84), int8] */)
}

def @func_15683() -> (Tensor[(10, 10, 7), int64],) {
  %569 = @func_13792() /* ty=(Tensor[(10, 10, 7), int64], int64, Tensor[(10, 10, 7), int64]) */;
  %570 = %569.2;
  (%570,)
}

def @func_6254() -> (Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) {
  %571 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(13, 2, 4), float64] */;
  %572 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %573 = reshape(%572, newshape=[]) /* ty=int64 */;
  %574 = @func_543(%573) /* ty=(Tensor[(10, 10, 7), int64],) */;
  %575 = log(%571) /* ty=Tensor[(13, 2, 4), float64] */;
  %576 = %574.0;
  (%575, %576, -7 /* ty=int64 */)
}

def @func_12745(%var_12718: Tensor[(1024), float64], %var_12739: Tensor[(84), int8], %var_12740: Tensor[(168), bool]) -> (int64, Tensor[(10, 10, 7), int64], Tensor[(126), float64], Tensor[(1024), float64], Tensor[(11, 154), float64], Tensor[(10, 10, 7), int64], Tensor[(3, 56), int64], Tensor[(294), float64], Tensor[(84), int8], Tensor[(168), bool]) {
  %577 = cast(meta[relay.Constant][33] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %578 = cast(%var_12718, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %579 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 154), float64] */, dtype="float64") /* ty=Tensor[(11, 154), float64] */;
  %580 = reshape(%577, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
  %581 = reshape(%578, newshape=[2, 512]) /* ty=Tensor[(2, 512), float64] */;
  %582 = reshape(%579, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %583 = @func_11163(%580, %581, %582) /* ty=(Tensor[(1, 14, 9), float64], int64, Tensor[(10, 10, 7), int64], Tensor[(12, 14, 8), float32], Tensor[(2, 512), float64], Tensor[(1694), float64]) */;
  %584 = cast(meta[relay.Constant][35] /* ty=Tensor[(294), float64] */, dtype="float64") /* ty=Tensor[(294), float64] */;
  %585 = cast(%var_12739, dtype="int8") /* ty=Tensor[(84), int8] */;
  %586 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 154), float64] */, dtype="float64") /* ty=Tensor[(11, 154), float64] */;
  %587 = cast(%var_12740, dtype="bool") /* ty=Tensor[(168), bool] */;
  %588 = @func_6707() /* ty=int64 */;
  %589 = cast(%588, dtype="int64") /* ty=int64 */;
  %590 = reshape(%584, newshape=[7, 42]) /* ty=Tensor[(7, 42), float64] */;
  %591 = reshape(%585, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %592 = reshape(%586, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %593 = reshape(%587, newshape=[3, 56]) /* ty=Tensor[(3, 56), bool] */;
  %594 = reshape(%589, newshape=[]) /* ty=int64 */;
  %595 = @func_7653(%590, %591, %592, %593, %594) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(847, 2), float64], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(3, 56), int64], Tensor[(10, 10, 7), int64], Tensor[(33), float64], int64) */;
  %596 = %583.2;
  %597 = @func_9515() /* ty=Tensor[(10, 10, 7), int64] */;
  %598 = %595.5;
  (%588, %596, meta[relay.Constant][33] /* ty=Tensor[(126), float64] */, %var_12718, meta[relay.Constant][34] /* ty=Tensor[(11, 154), float64] */, %597, %598, meta[relay.Constant][35] /* ty=Tensor[(294), float64] */, %var_12739, %var_12740)
}

def @func_11501() -> (Tensor[(975), float32], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(847, 2), bool], Tensor[(847, 2), float32]) {
  %599 = @func_8014() /* ty=(Tensor[(975), float32],) */;
  %600 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 42), float64] */, dtype="float64") /* ty=Tensor[(7, 42), float64] */;
  %601 = cast(meta[relay.Constant][37] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %602 = cast(meta[relay.Constant][38] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %603 = reshape(%600, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float64] */;
  %604 = reshape(%601, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %605 = reshape(%602, newshape=[847, 2]) /* ty=Tensor[(847, 2), float64] */;
  %606 = @func_5104(%603, %604, %605) /* ty=(Tensor[(14, 3, 7), float64], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(847, 2), float64]) */;
  %607 = %606.3;
  %608 = cast(meta[relay.Constant][38] /* ty=Tensor[(1694), float64] */, dtype="bool") /* ty=Tensor[(1694), bool] */;
  %609 = shape_of(%607, dtype="int32") /* ty=Tensor[(2), int32] */;
  %610 = cast(%607, dtype="bool") /* ty=Tensor[(847, 2), bool] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %612 = cast(%607, dtype="float32") /* ty=Tensor[(847, 2), float32] */;
  %613 = %599.0;
  %614 = logical_and(%610, %611) /* ty=Tensor[(847, 2), bool] */;
  %615 = atanh(%612) /* ty=Tensor[(847, 2), float32] */;
  (%613, meta[relay.Constant][36] /* ty=Tensor[(7, 42), float64] */, meta[relay.Constant][37] /* ty=Tensor[(84), int8] */, %614, %615)
}

def @func_15400(%var_15383: Tensor[(16, 5, 16), float32]) -> (Tensor[(16, 5, 16), float32], Tensor[(16, 5, 16), float64], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) {
  %616 = cast(%var_15383, dtype="float32") /* ty=Tensor[(16, 5, 16), float32] */;
  %617 = cast(%var_15383, dtype="float32") /* ty=Tensor[(16, 5, 16), float32] */;
  %618 = log10(%617) /* ty=Tensor[(16, 5, 16), float32] */;
  %619 = cast(%618, dtype="float64") /* ty=Tensor[(16, 5, 16), float64] */;
  %620 = shape_of(%var_15383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %621 = cast(%var_15383, dtype="float64") /* ty=Tensor[(16, 5, 16), float64] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %623 = cast(meta[relay.Constant][39] /* ty=Tensor[(975), float32] */, dtype="float32") /* ty=Tensor[(975), float32] */;
  %624 = reshape(%623, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float32] */;
  %625 = @func_2112(%624) /* ty=(Tensor[(15, 5, 13), float32],) */;
  %626 = atan(%616) /* ty=Tensor[(16, 5, 16), float32] */;
  %627 = divide(%621, %622) /* ty=Tensor[(16, 5, 16), float64] */;
  %628 = %625.0;
  (%626, %627, %628, meta[relay.Constant][39] /* ty=Tensor[(975), float32] */)
}

def @func_6693(%var_6675: Tensor[(14, 12, 7), float32]) -> (Tensor[(14, 12, 7), float32],) {
  %629 = cast(%var_6675, dtype="float32") /* ty=Tensor[(14, 12, 7), float32] */;
  %630 = sin(%629) /* ty=Tensor[(14, 12, 7), float32] */;
  (%630,)
}

def @func_4140(%var_4091: Tensor[(33), float64], %var_4105: Tensor[(42, 4), uint8], %var_4118: int64) -> (Tensor[(11, 11, 3), float64], Tensor[(11, 3, 1), float64], Tensor[(33), float64], Tensor[(12, 7, 2), uint8], Tensor[(42, 4), uint8], Tensor[(10, 10, 7), int64], Tensor[(1694), float64], int64) {
  %631 = cast(meta[relay.Constant][40] /* ty=Tensor[(11, 11, 3), float64] */, dtype="float64") /* ty=Tensor[(11, 11, 3), float64] */;
  %632 = cast(%var_4091, dtype="float64") /* ty=Tensor[(33), float64] */;
  %633 = reshape(%632, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %634 = cast(%var_4105, dtype="uint8") /* ty=Tensor[(42, 4), uint8] */;
  %635 = cast(%var_4105, dtype="uint8") /* ty=Tensor[(42, 4), uint8] */;
  %636 = reshape(%634, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
  %637 = reshape(%635, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
  %638 = cast(meta[relay.Constant][41] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %639 = cast(%var_4118, dtype="int64") /* ty=int64 */;
  %640 = reshape(%638, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float64] */;
  %641 = reshape(%639, newshape=[]) /* ty=int64 */;
  %642 = @func_1548(%640, %641) /* ty=(Tensor[(11, 11, 14), float64], Tensor[(10, 10, 7), int64], int64) */;
  %643 = cos(%631) /* ty=Tensor[(11, 11, 3), float64] */;
  %644 = @func_908(%633) /* ty=Tensor[(11, 3, 1), float64] */;
  %645 = @func_1575(%636, %637) /* ty=Tensor[(12, 7, 2), uint8] */;
  %646 = %642.1;
  (%643, %644, %var_4091, %645, %var_4105, %646, meta[relay.Constant][41] /* ty=Tensor[(1694), float64] */, %var_4118)
}

def @func_5524(%var_5473: Tensor[(12, 14, 8), float32], %var_5485: Tensor[(84), int8], %var_5486: Tensor[(1694), float64], %var_5522: Tensor[(1024), float64]) -> (Tensor[(12, 14, 8), float32], Tensor[(15, 5, 13), float32], Tensor[(325, 3), float32], Tensor[(12, 14, 8), float32], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(12, 7, 2), uint8], Tensor[(1, 168), uint8], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) {
  %647 = cast(%var_5473, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
  %648 = cast(meta[relay.Constant][42] /* ty=Tensor[(325, 3), float32] */, dtype="float32") /* ty=Tensor[(325, 3), float32] */;
  %649 = reshape(%648, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float32] */;
  %650 = @func_2112(%649) /* ty=(Tensor[(15, 5, 13), float32],) */;
  %651 = cast(%var_5473, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
  %652 = cast(%var_5485, dtype="int8") /* ty=Tensor[(84), int8] */;
  %653 = cast(%var_5486, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %654 = reshape(%652, newshape=[1, 7, 12]) /* ty=Tensor[(1, 7, 12), int8] */;
  %655 = reshape(%653, newshape=[11, 154]) /* ty=Tensor[(11, 154), float64] */;
  %656 = @func_2403(%654, %655) /* ty=(Tensor[(12, 7, 12), int8], Tensor[(11, 154), float64], int64, Tensor[(12, 7, 12), bool], Tensor[(10, 10, 7), int64]) */;
  %657 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 168), uint8] */, dtype="uint8") /* ty=Tensor[(1, 168), uint8] */;
  %658 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 168), uint8] */, dtype="uint8") /* ty=Tensor[(1, 168), uint8] */;
  %659 = reshape(%657, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
  %660 = reshape(%658, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
  %661 = cast(%var_5522, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %662 = cast(%var_5522, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %663 = reshape(%661, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
  %664 = reshape(%662, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
  %665 = @func_934(%663, %664) /* ty=(Tensor[(4, 16, 16), float64],) */;
  %666 = sinh(%647) /* ty=Tensor[(12, 14, 8), float32] */;
  %667 = %650.0;
  %668 = cos(%651) /* ty=Tensor[(12, 14, 8), float32] */;
  %669 = %656.4;
  %670 = @func_1575(%659, %660) /* ty=Tensor[(12, 7, 2), uint8] */;
  %671 = %665.0;
  (%666, %667, meta[relay.Constant][42] /* ty=Tensor[(325, 3), float32] */, %668, %669, %var_5485, %var_5486, %670, meta[relay.Constant][43] /* ty=Tensor[(1, 168), uint8] */, %671, %var_5522)
}

def @func_12521() -> (Tensor[(975), float32],) {
  %672 = @func_10354() /* ty=Tensor[(975), float32] */;
  (%672,)
}

def @func_14016() -> (int64, Tensor[(10, 10, 7), int64]) {
  %673 = @func_9741() /* ty=(int64,) */;
  %674 = @func_11793() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %675 = %673.0;
  %676 = %674.0;
  (%675, %676)
}

def @func_9035() -> (int64,) {
  %677 = @func_7391() /* ty=(int64, Tensor[(10, 10, 7), int64]) */;
  %678 = %677.0;
  (%678,)
}

def @func_14086(%var_14032: Tensor[(21, 4), int8], %var_14039: int32) -> (Tensor[(84), int8], Tensor[(21, 4), int8], Tensor[(700), int64], Tensor[(33), float64], int32, Tensor[(240), int32], Tensor[(33), float64], int64, Tensor[(735), int64], Tensor[(168), uint8], int64, Tensor[(8, 5, 12), float32]) {
  %679 = cast(%var_14032, dtype="int8") /* ty=Tensor[(21, 4), int8] */;
  %680 = cast(meta[relay.Constant][44] /* ty=Tensor[(700), int64] */, dtype="int64") /* ty=Tensor[(700), int64] */;
  %681 = reshape(%679, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %682 = reshape(%680, newshape=[10, 10, 7]) /* ty=Tensor[(10, 10, 7), int64] */;
  %683 = @func_12101(%681, %682) /* ty=(Tensor[(975), float32], Tensor[(84), int8], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), uint64]) */;
  %684 = cast(%var_14039, dtype="int32") /* ty=int32 */;
  %685 = cast(meta[relay.Constant][45] /* ty=Tensor[(240), int32] */, dtype="int32") /* ty=Tensor[(240), int32] */;
  %686 = cast(meta[relay.Constant][46] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %687 = reshape(%684, newshape=[]) /* ty=int32 */;
  %688 = reshape(%685, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), int32] */;
  %689 = reshape(%686, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %690 = @func_11019(%687, %688, %689) /* ty=(Tensor[(16, 5, 3), int32], Tensor[(11, 3, 1), float64], Tensor[(33), float64], int64) */;
  %691 = cast(meta[relay.Constant][47] /* ty=Tensor[(735), int64] */, dtype="int64") /* ty=Tensor[(735), int64] */;
  %692 = cast(meta[relay.Constant][47] /* ty=Tensor[(735), int64] */, dtype="int64") /* ty=Tensor[(735), int64] */;
  %693 = cast(meta[relay.Constant][48] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %694 = reshape(%691, newshape=[7, 7, 15]) /* ty=Tensor[(7, 7, 15), int64] */;
  %695 = reshape(%692, newshape=[7, 7, 15]) /* ty=Tensor[(7, 7, 15), int64] */;
  %696 = reshape(%693, newshape=[168]) /* ty=Tensor[(168), uint8] */;
  %697 = @func_11692(%694, %695, %696) /* ty=(int64, Tensor[(7, 7, 15), bool], Tensor[(10, 10, 7), int64], int64, Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(10, 10, 7), int64], Tensor[(84, 1), int8]) */;
  %698 = cast(meta[relay.Constant][49] /* ty=Tensor[(8, 5, 12), float32] */, dtype="float32") /* ty=Tensor[(8, 5, 12), float32] */;
  %699 = exp(%698) /* ty=Tensor[(8, 5, 12), float32] */;
  %700 = @func_8622() /* ty=int64 */;
  %701 = cast(%699, dtype="float32") /* ty=Tensor[(8, 5, 12), float32] */;
  %702 = cast(%700, dtype="float32") /* ty=float32 */;
  %703 = %683.1;
  %704 = %690.2;
  %705 = %697.3;
  %706 = @func_6751() /* ty=int64 */;
  %707 = subtract(%701, %702) /* ty=Tensor[(8, 5, 12), float32] */;
  (%703, %var_14032, meta[relay.Constant][44] /* ty=Tensor[(700), int64] */, %704, %var_14039, meta[relay.Constant][45] /* ty=Tensor[(240), int32] */, meta[relay.Constant][46] /* ty=Tensor[(33), float64] */, %705, meta[relay.Constant][47] /* ty=Tensor[(735), int64] */, meta[relay.Constant][48] /* ty=Tensor[(168), uint8] */, %706, %707)
}

def @func_6658() -> (Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) {
  %708 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %709 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %710 = %708.0;
  %711 = %709.0;
  (%710, %711)
}

def @func_2205(%var_2188: Tensor[(8, 2, 8), int16], %var_2189: Tensor[(8, 2, 8), int16]) -> Tensor[(8, 2, 8), int16] {
  %712 = cast(%var_2189, dtype="int16") /* ty=Tensor[(8, 2, 8), int16] */;
  %713 = shape_of(%var_2188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %714 = cast(%var_2188, dtype="int16") /* ty=Tensor[(8, 2, 8), int16] */;
  %715 = dyn.reshape(%712, %713, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_or(%714, %715) /* ty=Tensor[(8, 2, 8), int16] */
}

def @func_9054() -> (int64,) {
  %716 = @func_6751() /* ty=int64 */;
  (%716,)
}

def @func_12666() -> (Tensor[(13, 8, 14), bool], Tensor[(13, 8, 14), float32]) {
  %717 = @func_6751() /* ty=int64 */;
  %718 = cast(%717, dtype="uint64") /* ty=uint64 */;
  %719 = cast(meta[relay.Constant][50] /* ty=Tensor[(13, 8, 14), int64] */, dtype="uint64") /* ty=Tensor[(13, 8, 14), uint64] */;
  %720 = maximum(%718, %719) /* ty=Tensor[(13, 8, 14), uint64] */;
  %721 = cast(%720, dtype="bool") /* ty=Tensor[(13, 8, 14), bool] */;
  %722 = cast(%717, dtype="bool") /* ty=bool */;
  %723 = cast(meta[relay.Constant][50] /* ty=Tensor[(13, 8, 14), int64] */, dtype="float32") /* ty=Tensor[(13, 8, 14), float32] */;
  %724 = not_equal(%721, %722) /* ty=Tensor[(13, 8, 14), bool] */;
  %725 = rsqrt(%723) /* ty=Tensor[(13, 8, 14), float32] */;
  (%724, %725)
}

def @func_6903() -> (Tensor[(10, 10, 7), int64],) {
  %726 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %727 = %726.1;
  (%727,)
}

def @func_8497(%var_8472: Tensor[(2002), uint16]) -> (int64, Tensor[(13, 11, 14), float32], Tensor[(2002), float32]) {
  %728 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %729 = cast(%var_8472, dtype="uint16") /* ty=Tensor[(2002), uint16] */;
  %730 = reshape(%729, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), uint16] */;
  %731 = @func_2448(%730) /* ty=(Tensor[(13, 11, 14), float32],) */;
  %732 = cast(meta[relay.Constant][51] /* ty=Tensor[(2002), uint16] */, dtype="uint16") /* ty=Tensor[(2002), uint16] */;
  %733 = shape_of(%var_8472, dtype="int32") /* ty=Tensor[(1), int32] */;
  %734 = cast(%var_8472, dtype="uint16") /* ty=Tensor[(2002), uint16] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %736 = right_shift(%734, %735) /* ty=Tensor[(2002), uint16] */;
  %737 = cast(%736, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %738 = %728.2;
  %739 = %731.0;
  %740 = cosh(%737) /* ty=Tensor[(2002), float32] */;
  (%738, %739, %740)
}

def @func_8622() -> int64 {
  @func_6751() /* ty=int64 */
}

def @func_13449() -> (Tensor[(975), float32], Tensor[(15, 5, 10), uint16], Tensor[(750), float64]) {
  %741 = cast(meta[relay.Constant][52] /* ty=Tensor[(750), uint16] */, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %742 = cast(meta[relay.Constant][52] /* ty=Tensor[(750), uint16] */, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %743 = reshape(%741, newshape=[15, 5, 10]) /* ty=Tensor[(15, 5, 10), uint16] */;
  %744 = reshape(%742, newshape=[15, 5, 10]) /* ty=Tensor[(15, 5, 10), uint16] */;
  %745 = cast(meta[relay.Constant][53] /* ty=Tensor[(750), uint16] */, dtype="float64") /* ty=Tensor[(750), float64] */;
  %746 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(750), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %747 = cast(meta[relay.Constant][52] /* ty=Tensor[(750), uint16] */, dtype="float64") /* ty=Tensor[(750), float64] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?), float64] */;
  %749 = @func_11857() /* ty=Tensor[(975), float32] */;
  %750 = @func_5690(%743, %744) /* ty=Tensor[(15, 5, 10), uint16] */;
  %751 = divide(%747, %748) /* ty=Tensor[(750), float64] */;
  (%749, %750, %751)
}

def @func_10449(%var_10435: Tensor[(13, 2, 4), float64]) -> (Tensor[(10, 10, 7), float64], int64, int64, Tensor[(13, 2, 4), uint32]) {
  %752 = @func_7553() /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %753 = @func_9741() /* ty=(int64,) */;
  %754 = @func_8869() /* ty=Tensor[(13, 2, 4), float64] */;
  %755 = cast(%var_10435, dtype="uint32") /* ty=Tensor[(13, 2, 4), uint32] */;
  %756 = shape_of(%754, dtype="int32") /* ty=Tensor[(3), int32] */;
  %757 = cast(%754, dtype="uint32") /* ty=Tensor[(13, 2, 4), uint32] */;
  %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %759 = %752.0;
  %760 = @func_6707() /* ty=int64 */;
  %761 = %753.0;
  %762 = bitwise_xor(%757, %758) /* ty=Tensor[(13, 2, 4), uint32] */;
  (%759, %760, %761, %762)
}

def @func_16320() -> Tensor[(10, 10, 7), int64] {
  %763 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %763.0
}

def @func_11233() -> (int64, int64) {
  %764 = @func_9552() /* ty=(int64,) */;
  %765 = @func_9264() /* ty=(int64, int64) */;
  %766 = %764.0;
  %767 = %765.1;
  (%766, %767)
}

def @func_14321(%var_14289: Tensor[(13, 3, 7), int32]) -> (Tensor[(13, 3, 7), bool], Tensor[(1, 4, 9), uint32], Tensor[(36), uint32], Tensor[(10, 10, 7), int64]) {
  %768 = cast(meta[relay.Constant][54] /* ty=Tensor[(13, 3, 7), int32] */, dtype="bool") /* ty=Tensor[(13, 3, 7), bool] */;
  %769 = shape_of(%var_14289, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(%var_14289, dtype="bool") /* ty=Tensor[(13, 3, 7), bool] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %772 = cast(meta[relay.Constant][55] /* ty=Tensor[(36), uint32] */, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %773 = reshape(%772, newshape=[1, 4, 9]) /* ty=Tensor[(1, 4, 9), uint32] */;
  %774 = @func_4840(%773) /* ty=(Tensor[(1, 4, 9), uint32],) */;
  %775 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
  %776 = less_equal(%770, %771) /* ty=Tensor[(13, 3, 7), bool] */;
  %777 = %774.0;
  %778 = %775.1;
  (%776, %777, meta[relay.Constant][55] /* ty=Tensor[(36), uint32] */, %778)
}

def @func_908(%var_905: Tensor[(11, 3, 1), float64]) -> Tensor[(11, 3, 1), float64] {
  %779 = cast(%var_905, dtype="float64") /* ty=Tensor[(11, 3, 1), float64] */;
  log2(%779) /* ty=Tensor[(11, 3, 1), float64] */
}

def @func_15231() -> (Tensor[(10, 10, 7), int64],) {
  %780 = @func_8781() /* ty=Tensor[(10, 10, 7), int64] */;
  (%780,)
}

def @func_8545() -> Tensor[(10, 10, 7), int64] {
  @func_6558() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_8975(%var_8956: Tensor[(84), int8], %var_8958: Tensor[(168), bool], %var_8959: int64) -> (Tensor[(10, 10, 7), float32], Tensor[(84), int8], Tensor[(294, 1), float64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(168), bool], int64) {
  %781 = @func_6558() /* ty=Tensor[(10, 10, 7), int64] */;
  %782 = cast(%781, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
  %783 = cast(meta[relay.Constant][56] /* ty=Tensor[(294, 1), float64] */, dtype="float64") /* ty=Tensor[(294, 1), float64] */;
  %784 = cast(%var_8956, dtype="int8") /* ty=Tensor[(84), int8] */;
  %785 = cast(meta[relay.Constant][57] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %786 = cast(%var_8958, dtype="bool") /* ty=Tensor[(168), bool] */;
  %787 = cast(%var_8959, dtype="int64") /* ty=int64 */;
  %788 = reshape(%783, newshape=[7, 42]) /* ty=Tensor[(7, 42), float64] */;
  %789 = reshape(%784, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %790 = reshape(%785, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %791 = reshape(%786, newshape=[3, 56]) /* ty=Tensor[(3, 56), bool] */;
  %792 = reshape(%787, newshape=[]) /* ty=int64 */;
  %793 = @func_7653(%788, %789, %790, %791, %792) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(847, 2), float64], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(3, 56), int64], Tensor[(10, 10, 7), int64], Tensor[(33), float64], int64) */;
  %794 = log(%782) /* ty=Tensor[(10, 10, 7), float32] */;
  %795 = %793.3;
  (%794, %795, meta[relay.Constant][56] /* ty=Tensor[(294, 1), float64] */, %var_8956, meta[relay.Constant][57] /* ty=Tensor[(1694), float64] */, %var_8958, %var_8959)
}

def @func_9820() -> Tensor[(10, 10, 7), int64] {
  %796 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %796.0
}

def @func_11692(%var_11637: Tensor[(7, 7, 15), int64], %var_11638: Tensor[(7, 7, 15), int64], %var_11674: Tensor[(168), uint8]) -> (int64, Tensor[(7, 7, 15), bool], Tensor[(10, 10, 7), int64], int64, Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(10, 10, 7), int64], Tensor[(84, 1), int8]) {
  %797 = cast(%var_11638, dtype="bool") /* ty=Tensor[(7, 7, 15), bool] */;
  %798 = shape_of(%var_11637, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%var_11637, dtype="bool") /* ty=Tensor[(7, 7, 15), bool] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %801 = equal(%799, %800) /* ty=Tensor[(7, 7, 15), bool] */;
  %802 = cast(%801, dtype="float32") /* ty=Tensor[(7, 7, 15), float32] */;
  %803 = cos(%802) /* ty=Tensor[(7, 7, 15), float32] */;
  %804 = cast(%var_11637, dtype="bool") /* ty=Tensor[(7, 7, 15), bool] */;
  %805 = shape_of(%803, dtype="int32") /* ty=Tensor[(3), int32] */;
  %806 = cast(%803, dtype="bool") /* ty=Tensor[(7, 7, 15), bool] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %808 = @func_9356() /* ty=(int64, Tensor[(975), float32], int64) */;
  %809 = cast(%var_11674, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %810 = reshape(%809, newshape=[168]) /* ty=Tensor[(168), uint8] */;
  %811 = @func_6392(%810) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(12, 7, 2), bool]) */;
  %812 = cast(meta[relay.Constant][58] /* ty=Tensor[(84, 1), int8] */, dtype="int8") /* ty=Tensor[(84, 1), int8] */;
  %813 = reshape(%812, newshape=[3, 28]) /* ty=Tensor[(3, 28), int8] */;
  %814 = @func_8914(%813) /* ty=(Tensor[(975), float32], Tensor[(10, 10, 7), int64], Tensor[(3, 28), int8]) */;
  %815 = @func_11456() /* ty=int64 */;
  %816 = logical_or(%806, %807) /* ty=Tensor[(7, 7, 15), bool] */;
  %817 = @func_8781() /* ty=Tensor[(10, 10, 7), int64] */;
  %818 = %808.0;
  %819 = %811.1;
  %820 = %814.1;
  (%815, %816, %817, %818, %819, %var_11674, %820, meta[relay.Constant][58] /* ty=Tensor[(84, 1), int8] */)
}

def @func_11857() -> Tensor[(975), float32] {
  @func_8174() /* ty=Tensor[(975), float32] */
}

def @func_15947() -> (int64, int64) {
  %821 = @func_11233() /* ty=(int64, int64) */;
  %822 = %821.1;
  %823 = @func_14105() /* ty=int64 */;
  (%822, %823)
}

def @func_8869() -> Tensor[(13, 2, 4), float64] {
  %824 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %825 = %824.0;
  %826 = cast(%825, dtype="float64") /* ty=Tensor[(13, 2, 4), float64] */;
  log2(%826) /* ty=Tensor[(13, 2, 4), float64] */
}

def @func_9582() -> (int64,) {
  %827 = @func_9054() /* ty=(int64,) */;
  %828 = %827.0;
  (%828,)
}

def @func_15288(%var_15282: Tensor[(1024), float64]) -> (Tensor[(15, 5, 13), float32], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) {
  %829 = @func_7553() /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %830 = cast(%var_15282, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %831 = cast(%var_15282, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %832 = reshape(%830, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
  %833 = reshape(%831, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
  %834 = @func_934(%832, %833) /* ty=(Tensor[(4, 16, 16), float64],) */;
  %835 = %829.2;
  %836 = %834.0;
  (%835, %836, %var_15282)
}

def @func_16341(%var_16339: Tensor[(750), uint16]) -> (Tensor[(10, 10, 7), int64], Tensor[(15, 5, 10), uint16], Tensor[(750), uint16]) {
  %837 = @func_15747() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %838 = cast(%var_16339, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %839 = cast(%var_16339, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %840 = reshape(%838, newshape=[15, 5, 10]) /* ty=Tensor[(15, 5, 10), uint16] */;
  %841 = reshape(%839, newshape=[15, 5, 10]) /* ty=Tensor[(15, 5, 10), uint16] */;
  %842 = %837.0;
  %843 = @func_5690(%840, %841) /* ty=Tensor[(15, 5, 10), uint16] */;
  (%842, %843, %var_16339)
}

def @func_9356() -> (int64, Tensor[(975), float32], int64) {
  %844 = @func_6528() /* ty=(int64,) */;
  %845 = %844.0;
  %846 = @func_8174() /* ty=Tensor[(975), float32] */;
  %847 = @func_6751() /* ty=int64 */;
  (%845, %846, %847)
}

def @func_13672() -> (Tensor[(975), float32],) {
  %848 = @func_12521() /* ty=(Tensor[(975), float32],) */;
  %849 = %848.0;
  (%849,)
}

def @func_6302() -> (Tensor[(10, 10, 7), int64],) {
  %850 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %851 = %850.1;
  (%851,)
}

def @func_6392(%var_6350: Tensor[(168), uint8]) -> (Tensor[(10, 10, 7), int64], Tensor[(12, 7, 2), bool]) {
  %852 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %853 = cast(%var_6350, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %854 = cast(%var_6350, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %855 = reshape(%853, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
  %856 = reshape(%854, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
  %857 = @func_1575(%855, %856) /* ty=Tensor[(12, 7, 2), uint8] */;
  %858 = cast(%var_6350, dtype="bool") /* ty=Tensor[(168), bool] */;
  %859 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %860 = cast(%857, dtype="bool") /* ty=Tensor[(12, 7, 2), bool] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %862 = %852.0;
  %863 = greater(%860, %861) /* ty=Tensor[(12, 7, 2), bool] */;
  (%862, %863)
}

def @func_9128() -> (Tensor[(10, 10, 7), int64],) {
  %864 = @func_8800() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %865 = %864.0;
  (%865,)
}

def @func_7041(%var_6999: int64) -> (Tensor[(975), float32], int64, Tensor[(33), float64], Tensor[(168), uint8], int64, Tensor[(10, 10, 7), int64], Tensor[(15, 5, 10), uint16], Tensor[(10, 75), uint16], Tensor[(11, 3, 1), float64]) {
  %866 = @func_6884() /* ty=(Tensor[(9, 14, 15), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %867 = cast(meta[relay.Constant][59] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %868 = cast(meta[relay.Constant][60] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %869 = cast(%var_6999, dtype="int64") /* ty=int64 */;
  %870 = reshape(%867, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %871 = reshape(%868, newshape=[42, 4]) /* ty=Tensor[(42, 4), uint8] */;
  %872 = reshape(%869, newshape=[]) /* ty=int64 */;
  %873 = @func_4140(%870, %871, %872) /* ty=(Tensor[(11, 11, 3), float64], Tensor[(11, 3, 1), float64], Tensor[(33), float64], Tensor[(12, 7, 2), uint8], Tensor[(42, 4), uint8], Tensor[(10, 10, 7), int64], Tensor[(1694), float64], int64) */;
  %874 = %873.7;
  %875 = cast(%874, dtype="int64") /* ty=int64 */;
  %876 = reshape(%875, newshape=[]) /* ty=int64 */;
  %877 = @func_543(%876) /* ty=(Tensor[(10, 10, 7), int64],) */;
  %878 = cast(meta[relay.Constant][61] /* ty=Tensor[(10, 75), uint16] */, dtype="uint16") /* ty=Tensor[(10, 75), uint16] */;
  %879 = cast(meta[relay.Constant][61] /* ty=Tensor[(10, 75), uint16] */, dtype="uint16") /* ty=Tensor[(10, 75), uint16] */;
  %880 = reshape(%878, newshape=[15, 5, 10]) /* ty=Tensor[(15, 5, 10), uint16] */;
  %881 = reshape(%879, newshape=[15, 5, 10]) /* ty=Tensor[(15, 5, 10), uint16] */;
  %882 = cast(meta[relay.Constant][59] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %883 = reshape(%882, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %884 = @func_908(%883) /* ty=Tensor[(11, 3, 1), float64] */;
  %885 = cast(%884, dtype="float32") /* ty=Tensor[(11, 3, 1), float32] */;
  %886 = sqrt(%885) /* ty=Tensor[(11, 3, 1), float32] */;
  %887 = cast(%886, dtype="float64") /* ty=Tensor[(11, 3, 1), float64] */;
  %888 = %866.2;
  %889 = %877.0;
  %890 = @func_5690(%880, %881) /* ty=Tensor[(15, 5, 10), uint16] */;
  %891 = acos(%887) /* ty=Tensor[(11, 3, 1), float64] */;
  (%888, %874, meta[relay.Constant][59] /* ty=Tensor[(33), float64] */, meta[relay.Constant][60] /* ty=Tensor[(168), uint8] */, %var_6999, %889, %890, meta[relay.Constant][61] /* ty=Tensor[(10, 75), uint16] */, %891)
}

def @func_8174() -> Tensor[(975), float32] {
  %892 = @func_7553() /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %892.3
}

def @func_6845() -> int64 {
  @func_6707() /* ty=int64 */
}

def @func_13258() -> (int64,) {
  %893 = @func_9582() /* ty=(int64,) */;
  %894 = %893.0;
  (%894,)
}

def @func_11117() -> (Tensor[(975), float32], int64, Tensor[(84), int8]) {
  %895 = @func_8014() /* ty=(Tensor[(975), float32],) */;
  %896 = @func_9035() /* ty=(int64,) */;
  %897 = @func_10254() /* ty=(Tensor[(975), float32], Tensor[(1, 294), float64], Tensor[(84), int8]) */;
  %898 = %895.0;
  %899 = %896.0;
  %900 = %897.2;
  (%898, %899, %900)
}

def @func_14420() -> int64 {
  %901 = @func_9054() /* ty=(int64,) */;
  %901.0
}

def @func_13692() -> (Tensor[(10, 10, 7), int64], int64) {
  %902 = @func_8714() /* ty=(int64,) */;
  %903 = @func_9820() /* ty=Tensor[(10, 10, 7), int64] */;
  %904 = %902.0;
  (%903, %904)
}

def @func_8430(%var_8394: Tensor[(1024), float64], %var_8413: Tensor[(1694), float64]) -> (Tensor[(975), float32], Tensor[(9, 14, 15), float32], Tensor[(12, 14, 8), float32], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(1024), float64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(1694), bool], Tensor[(84), int8]) {
  %905 = @func_8323() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16], Tensor[(128), int16], Tensor[(975), float32]) */;
  %906 = @func_6884() /* ty=(Tensor[(9, 14, 15), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %907 = cast(meta[relay.Constant][62] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %908 = cast(meta[relay.Constant][63] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %909 = cast(meta[relay.Constant][64] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %910 = cast(%var_8394, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %911 = reshape(%907, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), float32] */;
  %912 = reshape(%908, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %913 = reshape(%909, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %914 = reshape(%910, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %915 = @func_5524(%911, %912, %913, %914) /* ty=(Tensor[(12, 14, 8), float32], Tensor[(15, 5, 13), float32], Tensor[(325, 3), float32], Tensor[(12, 14, 8), float32], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(12, 7, 2), uint8], Tensor[(1, 168), uint8], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) */;
  %916 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
  %917 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
  %918 = cast(%var_8413, dtype="bool") /* ty=Tensor[(1694), bool] */;
  %919 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(1694), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %920 = cast(meta[relay.Constant][64] /* ty=Tensor[(1694), float64] */, dtype="bool") /* ty=Tensor[(1694), bool] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?), bool] */;
  %922 = cast(meta[relay.Constant][62] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %923 = cast(meta[relay.Constant][63] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %924 = cast(%var_8394, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %925 = reshape(%922, newshape=[1, 1344]) /* ty=Tensor[(1, 1344), float32] */;
  %926 = reshape(%923, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %927 = reshape(%924, newshape=[4, 256]) /* ty=Tensor[(4, 256), float64] */;
  %928 = @func_7254(%925, %926, %927) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(12, 14, 8), float32], Tensor[(1, 1344), float32], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(4, 256), float64]) */;
  %929 = %905.3;
  %930 = %906.0;
  %931 = %915.3;
  %932 = %916.1;
  %933 = %917.1;
  %934 = less_equal(%920, %921) /* ty=Tensor[(1694), bool] */;
  %935 = %928.3;
  (%929, %930, %931, meta[relay.Constant][62] /* ty=Tensor[(1344), float32] */, meta[relay.Constant][63] /* ty=Tensor[(84), int8] */, %var_8394, %932, %933, %934, %935)
}

def @func_14536() -> (Tensor[(975), float32],) {
  %936 = @func_8174() /* ty=Tensor[(975), float32] */;
  (%936,)
}

def @func_13108() -> (Tensor[(975), float32], Tensor[(10, 10, 7), int64]) {
  %937 = @func_9356() /* ty=(int64, Tensor[(975), float32], int64) */;
  %938 = %937.1;
  %939 = @func_11448() /* ty=Tensor[(10, 10, 7), int64] */;
  (%938, %939)
}

def @func_14579(%var_14574: bool, %var_14575: Tensor[(16, 14, 15), bool]) -> Tensor[(16, 14, 15), bool] {
  %940 = cast(%var_14574, dtype="bool") /* ty=bool */;
  %941 = cast(%var_14575, dtype="bool") /* ty=Tensor[(16, 14, 15), bool] */;
  logical_or(%940, %941) /* ty=Tensor[(16, 14, 15), bool] */
}

def @func_5945(%var_5931: Tensor[(84), int8]) -> (Tensor[(5, 5, 10), bool], Tensor[(84), int8], Tensor[(1, 294), float64], Tensor[(84), int8], Tensor[(847, 2), float64]) {
  %942 = cast(meta[relay.Constant][66] /* ty=Tensor[(5, 5, 10), int32] */, dtype="bool") /* ty=Tensor[(5, 5, 10), bool] */;
  %943 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(5, 5, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %944 = cast(meta[relay.Constant][65] /* ty=Tensor[(5, 5, 10), int32] */, dtype="bool") /* ty=Tensor[(5, 5, 10), bool] */;
  %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %946 = cast(meta[relay.Constant][67] /* ty=Tensor[(1, 294), float64] */, dtype="float64") /* ty=Tensor[(1, 294), float64] */;
  %947 = cast(%var_5931, dtype="int8") /* ty=Tensor[(84), int8] */;
  %948 = cast(meta[relay.Constant][68] /* ty=Tensor[(847, 2), float64] */, dtype="float64") /* ty=Tensor[(847, 2), float64] */;
  %949 = reshape(%946, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float64] */;
  %950 = reshape(%947, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %951 = reshape(%948, newshape=[847, 2]) /* ty=Tensor[(847, 2), float64] */;
  %952 = @func_5104(%949, %950, %951) /* ty=(Tensor[(14, 3, 7), float64], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(847, 2), float64]) */;
  %953 = greater(%944, %945) /* ty=Tensor[(5, 5, 10), bool] */;
  %954 = %952.2;
  (%953, %954, meta[relay.Constant][67] /* ty=Tensor[(1, 294), float64] */, %var_5931, meta[relay.Constant][68] /* ty=Tensor[(847, 2), float64] */)
}

def @func_11874() -> Tensor[(975), float32] {
  @func_8174() /* ty=Tensor[(975), float32] */
}

def @func_14411() -> Tensor[(975), float32] {
  %955 = @func_12612() /* ty=(Tensor[(975), float32],) */;
  %955.0
}

def @func_6822(%var_6785: Tensor[(1694), float64]) -> (int64, Tensor[(10, 10, 7), int64], Tensor[(294), float64], Tensor[(84), int8], Tensor[(1694), float64]) {
  %956 = @func_6528() /* ty=(int64,) */;
  %957 = cast(meta[relay.Constant][69] /* ty=Tensor[(294), float64] */, dtype="float64") /* ty=Tensor[(294), float64] */;
  %958 = cast(meta[relay.Constant][70] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %959 = cast(%var_6785, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %960 = reshape(%957, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float64] */;
  %961 = reshape(%958, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %962 = reshape(%959, newshape=[847, 2]) /* ty=Tensor[(847, 2), float64] */;
  %963 = @func_5104(%960, %961, %962) /* ty=(Tensor[(14, 3, 7), float64], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(847, 2), float64]) */;
  %964 = %956.0;
  %965 = %963.1;
  (%964, %965, meta[relay.Constant][69] /* ty=Tensor[(294), float64] */, meta[relay.Constant][70] /* ty=Tensor[(84), int8] */, %var_6785)
}

def @func_10590(%var_10588: Tensor[(108), uint64]) -> (int64, Tensor[(3, 12, 3), int16], Tensor[(108), uint64]) {
  %966 = cast(%var_10588, dtype="uint64") /* ty=Tensor[(108), uint64] */;
  %967 = reshape(%966, newshape=[3, 12, 3]) /* ty=Tensor[(3, 12, 3), uint64] */;
  %968 = @func_9095(%967) /* ty=(Tensor[(3, 12, 3), int16],) */;
  %969 = @func_6845() /* ty=int64 */;
  %970 = %968.0;
  (%969, %970, %var_10588)
}

def @func_11793() -> (Tensor[(10, 10, 7), int64],) {
  %971 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %972 = %971.0;
  (%972,)
}

def @func_9148() -> (Tensor[(10, 10, 7), int64],) {
  %973 = @func_6903() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %974 = %973.0;
  (%974,)
}

def @func_14929() -> (int64, Tensor[(975), float32]) {
  %975 = @func_9663() /* ty=int64 */;
  %976 = @func_14411() /* ty=Tensor[(975), float32] */;
  (%975, %976)
}

def @func_8323() -> (Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16], Tensor[(128), int16], Tensor[(975), float32]) {
  %977 = @func_8202() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %978 = cast(meta[relay.Constant][71] /* ty=Tensor[(128), int16] */, dtype="int16") /* ty=Tensor[(128), int16] */;
  %979 = cast(meta[relay.Constant][71] /* ty=Tensor[(128), int16] */, dtype="int16") /* ty=Tensor[(128), int16] */;
  %980 = reshape(%978, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), int16] */;
  %981 = reshape(%979, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), int16] */;
  %982 = @func_8014() /* ty=(Tensor[(975), float32],) */;
  %983 = %977.0;
  %984 = @func_2205(%980, %981) /* ty=Tensor[(8, 2, 8), int16] */;
  %985 = %982.0;
  (%983, %984, meta[relay.Constant][71] /* ty=Tensor[(128), int16] */, %985)
}

def @func_7088() -> (int64,) {
  %986 = @func_6845() /* ty=int64 */;
  (%986,)
}

def @func_10604() -> (Tensor[(10, 10, 7), int64],) {
  %987 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %988 = %987.1;
  (%988,)
}

def @func_12101(%var_12048: Tensor[(84), int8], %var_12091: Tensor[(10, 10, 7), int64]) -> (Tensor[(975), float32], Tensor[(84), int8], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), uint64]) {
  %989 = @func_6903() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %990 = cast(%var_12048, dtype="int8") /* ty=Tensor[(84), int8] */;
  %991 = reshape(%990, newshape=[84, 1]) /* ty=Tensor[(84, 1), int8] */;
  %992 = @func_10965(%991) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(847, 2), float64], Tensor[(294), float64], Tensor[(84, 1), int8], Tensor[(1694), float64]) */;
  %993 = %992.0;
  %994 = cast(%var_12091, dtype="uint64") /* ty=Tensor[(10, 10, 7), uint64] */;
  %995 = shape_of(%993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %996 = cast(%993, dtype="uint64") /* ty=Tensor[(10, 10, 7), uint64] */;
  %997 = dyn.reshape(%994, %995, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %998 = @func_11857() /* ty=Tensor[(975), float32] */;
  %999 = %989.0;
  %1000 = maximum(%996, %997) /* ty=Tensor[(10, 10, 7), uint64] */;
  (%998, %var_12048, %999, %1000)
}

def @func_8714() -> (int64,) {
  %1001 = @func_6707() /* ty=int64 */;
  (%1001,)
}

def @func_8568(%var_8559: Tensor[(2002), uint16]) -> (int64, Tensor[(2002), float32], Tensor[(2002), uint16], Tensor[(12, 7, 2), uint8], Tensor[(168), uint8]) {
  %1002 = @func_7088() /* ty=(int64,) */;
  %1003 = cast(%var_8559, dtype="uint16") /* ty=Tensor[(2002), uint16] */;
  %1004 = reshape(%1003, newshape=[2002]) /* ty=Tensor[(2002), uint16] */;
  %1005 = @func_8497(%1004) /* ty=(int64, Tensor[(13, 11, 14), float32], Tensor[(2002), float32]) */;
  %1006 = cast(meta[relay.Constant][72] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %1007 = cast(meta[relay.Constant][72] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %1008 = reshape(%1006, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
  %1009 = reshape(%1007, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
  %1010 = %1002.0;
  %1011 = %1005.2;
  %1012 = @func_1575(%1008, %1009) /* ty=Tensor[(12, 7, 2), uint8] */;
  (%1010, %1011, %var_8559, %1012, meta[relay.Constant][72] /* ty=Tensor[(168), uint8] */)
}

def @func_14243(%var_14227: Tensor[(1024), float64]) -> (int64, int64, Tensor[(1024), float64]) {
  %1013 = @func_14016() /* ty=(int64, Tensor[(10, 10, 7), int64]) */;
  %1014 = cast(%var_14227, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %1015 = reshape(%1014, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %1016 = @func_7856(%1015) /* ty=(int64, Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(16, 8), int16], Tensor[(8, 2, 8), int16], Tensor[(4, 16, 16), float64], Tensor[(1024), float32]) */;
  %1017 = %1013.0;
  %1018 = %1016.0;
  (%1017, %1018, %var_14227)
}

def @func_8732() -> (Tensor[(10, 10, 7), int64], int64) {
  %1019 = @func_8714() /* ty=(int64,) */;
  %1020 = @func_8545() /* ty=Tensor[(10, 10, 7), int64] */;
  %1021 = %1019.0;
  (%1020, %1021)
}

def @func_13792() -> (Tensor[(10, 10, 7), int64], int64, Tensor[(10, 10, 7), int64]) {
  %1022 = @func_8732() /* ty=(Tensor[(10, 10, 7), int64], int64) */;
  %1023 = @func_7391() /* ty=(int64, Tensor[(10, 10, 7), int64]) */;
  %1024 = %1022.0;
  %1025 = %1023.0;
  %1026 = @func_6558() /* ty=Tensor[(10, 10, 7), int64] */;
  (%1024, %1025, %1026)
}

def @func_7254(%var_7243: Tensor[(1, 1344), float32], %var_7244: Tensor[(84), int8], %var_7246: Tensor[(4, 256), float64]) -> (Tensor[(10, 10, 7), int64], Tensor[(12, 14, 8), float32], Tensor[(1, 1344), float32], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(4, 256), float64]) {
  %1027 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
  %1028 = cast(%var_7243, dtype="float32") /* ty=Tensor[(1, 1344), float32] */;
  %1029 = cast(%var_7244, dtype="int8") /* ty=Tensor[(84), int8] */;
  %1030 = cast(meta[relay.Constant][73] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %1031 = cast(%var_7246, dtype="float64") /* ty=Tensor[(4, 256), float64] */;
  %1032 = reshape(%1028, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), float32] */;
  %1033 = reshape(%1029, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %1034 = reshape(%1030, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %1035 = reshape(%1031, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %1036 = @func_5524(%1032, %1033, %1034, %1035) /* ty=(Tensor[(12, 14, 8), float32], Tensor[(15, 5, 13), float32], Tensor[(325, 3), float32], Tensor[(12, 14, 8), float32], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(12, 7, 2), uint8], Tensor[(1, 168), uint8], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) */;
  %1037 = %1027.1;
  %1038 = %1036.3;
  (%1037, %1038, %var_7243, %var_7244, meta[relay.Constant][73] /* ty=Tensor[(1694), float64] */, %var_7246)
}

def @func_14950() -> int64 {
  %1039 = @func_9264() /* ty=(int64, int64) */;
  %1039.0
}

def @func_11396() -> (Tensor[(10, 10, 7), float32],) {
  %1040 = @func_9582() /* ty=(int64,) */;
  %1041 = %1040.0;
  %1042 = cast(%1041, dtype="int64") /* ty=int64 */;
  %1043 = reshape(%1042, newshape=[]) /* ty=int64 */;
  %1044 = @func_543(%1043) /* ty=(Tensor[(10, 10, 7), int64],) */;
  %1045 = %1044.0;
  %1046 = cast(%1045, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
  %1047 = cast(%1041, dtype="float32") /* ty=float32 */;
  %1048 = floor_mod(%1046, %1047) /* ty=Tensor[(10, 10, 7), float32] */;
  (%1048,)
}

def @func_12361() -> (int64, Tensor[(975), float32]) {
  %1049 = @func_9054() /* ty=(int64,) */;
  %1050 = @func_10930() /* ty=(Tensor[(975), float32], Tensor[(13, 2, 4), float64]) */;
  %1051 = %1049.0;
  %1052 = %1050.0;
  (%1051, %1052)
}

def @func_7166(%var_7125: Tensor[(180), uint8], %var_7126: Tensor[(512, 2), float64], %var_7132: Tensor[(10, 10, 7), int64]) -> (Tensor[(13, 2, 4), float64], Tensor[(4, 15, 3), bool], Tensor[(180), uint8], Tensor[(10, 10, 7), float32], Tensor[(512, 2), float32]) {
  %1053 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
  %1054 = cast(%var_7125, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %1055 = cast(%var_7126, dtype="float64") /* ty=Tensor[(512, 2), float64] */;
  %1056 = reshape(%1054, newshape=[4, 15, 3]) /* ty=Tensor[(4, 15, 3), uint8] */;
  %1057 = reshape(%1055, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %1058 = @func_5998(%1056, %1057) /* ty=(Tensor[(4, 15, 3), bool], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) */;
  %1059 = @func_6558() /* ty=Tensor[(10, 10, 7), int64] */;
  %1060 = cast(%var_7132, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
  %1061 = shape_of(%1059, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1062 = cast(%1059, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
  %1063 = dyn.reshape(%1060, %1061, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1064 = cast(%var_7126, dtype="float32") /* ty=Tensor[(512, 2), float32] */;
  %1065 = log10(%1064) /* ty=Tensor[(512, 2), float32] */;
  %1066 = cast(%1065, dtype="float32") /* ty=Tensor[(512, 2), float32] */;
  %1067 = %1053.0;
  %1068 = %1058.0;
  %1069 = minimum(%1062, %1063) /* ty=Tensor[(10, 10, 7), float32] */;
  %1070 = log(%1066) /* ty=Tensor[(512, 2), float32] */;
  (%1067, %1068, %var_7125, %1069, %1070)
}

def @func_934(%var_917: Tensor[(4, 16, 16), float64], %var_918: Tensor[(4, 16, 16), float64]) -> (Tensor[(4, 16, 16), float64],) {
  %1071 = cast(%var_918, dtype="float64") /* ty=Tensor[(4, 16, 16), float64] */;
  %1072 = shape_of(%var_917, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1073 = cast(%var_917, dtype="float64") /* ty=Tensor[(4, 16, 16), float64] */;
  %1074 = dyn.reshape(%1071, %1072, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1075 = power(%1073, %1074) /* ty=Tensor[(4, 16, 16), float64] */;
  (%1075,)
}

def @func_12014() -> (int64, Tensor[(10, 10, 7), int64]) {
  %1076 = @func_9054() /* ty=(int64,) */;
  %1077 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
  %1078 = %1076.0;
  %1079 = %1077.1;
  (%1078, %1079)
}

def @func_13651(%var_13577: Tensor[(84), int8]) -> (Tensor[(84), int8], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(10, 10, 7), int64], Tensor[(975), float32], Tensor[(975), uint16], Tensor[(1694), float32], Tensor[(1024), float32]) {
  %1080 = cast(meta[relay.Constant][74] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %1081 = cast(%var_13577, dtype="int8") /* ty=Tensor[(84), int8] */;
  %1082 = cast(meta[relay.Constant][75] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %1083 = cast(meta[relay.Constant][76] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %1084 = reshape(%1080, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), float32] */;
  %1085 = reshape(%1081, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %1086 = reshape(%1082, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %1087 = reshape(%1083, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %1088 = @func_5524(%1084, %1085, %1086, %1087) /* ty=(Tensor[(12, 14, 8), float32], Tensor[(15, 5, 13), float32], Tensor[(325, 3), float32], Tensor[(12, 14, 8), float32], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(12, 7, 2), uint8], Tensor[(1, 168), uint8], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) */;
  %1089 = @func_8202() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %1090 = @func_10930() /* ty=(Tensor[(975), float32], Tensor[(13, 2, 4), float64]) */;
  %1091 = @func_11874() /* ty=Tensor[(975), float32] */;
  %1092 = cast(meta[relay.Constant][77] /* ty=Tensor[(975), float32] */, dtype="uint16") /* ty=Tensor[(975), uint16] */;
  %1093 = shape_of(%1091, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1094 = cast(%1091, dtype="uint16") /* ty=Tensor[(975), uint16] */;
  %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %1096 = cast(meta[relay.Constant][75] /* ty=Tensor[(1694), float64] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %1097 = @func_7088() /* ty=(int64,) */;
  %1098 = %1097.0;
  %1099 = cast(meta[relay.Constant][76] /* ty=Tensor[(1024), float64] */, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %1100 = cast(%1098, dtype="float32") /* ty=float32 */;
  %1101 = floor_mod(%1099, %1100) /* ty=Tensor[(1024), float32] */;
  %1102 = cast(%1101, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %1103 = %1088.5;
  %1104 = %1089.0;
  %1105 = %1090.0;
  %1106 = add(%1094, %1095) /* ty=Tensor[(975), uint16] */;
  %1107 = cosh(%1096) /* ty=Tensor[(1694), float32] */;
  %1108 = asin(%1102) /* ty=Tensor[(1024), float32] */;
  (%1103, meta[relay.Constant][74] /* ty=Tensor[(1344), float32] */, %var_13577, %1104, %1105, %1106, %1107, %1108)
}

def @func_12968() -> (int64, Tensor[(10, 10, 7), int64]) {
  %1109 = @func_11793() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %1110 = @func_6707() /* ty=int64 */;
  %1111 = %1109.0;
  (%1110, %1111)
}

def @func_16273() -> (int64, Tensor[(10, 10, 7), int64], int64) {
  %1112 = @func_15173() /* ty=(Tensor[(10, 10, 7), int64], int64) */;
  %1113 = @func_13202() /* ty=(int64, int64, Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16]) */;
  %1114 = @func_7088() /* ty=(int64,) */;
  %1115 = %1112.1;
  %1116 = %1113.2;
  %1117 = %1114.0;
  (%1115, %1116, %1117)
}

def @func_6476(%var_6469: Tensor[(30, 6), uint8]) -> (Tensor[(10, 10, 7), int64], Tensor[(11, 3, 1), float64], Tensor[(1, 33), float64], Tensor[(4, 16, 16), float64], Tensor[(30, 6), uint8], Tensor[(1024), float64]) {
  %1118 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %1119 = cast(meta[relay.Constant][78] /* ty=Tensor[(1, 33), float64] */, dtype="float64") /* ty=Tensor[(1, 33), float64] */;
  %1120 = reshape(%1119, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %1121 = cast(%var_6469, dtype="uint8") /* ty=Tensor[(30, 6), uint8] */;
  %1122 = cast(meta[relay.Constant][79] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %1123 = reshape(%1121, newshape=[4, 15, 3]) /* ty=Tensor[(4, 15, 3), uint8] */;
  %1124 = reshape(%1122, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %1125 = @func_5998(%1123, %1124) /* ty=(Tensor[(4, 15, 3), bool], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) */;
  %1126 = %1118.1;
  %1127 = @func_908(%1120) /* ty=Tensor[(11, 3, 1), float64] */;
  %1128 = %1125.1;
  (%1126, %1127, meta[relay.Constant][78] /* ty=Tensor[(1, 33), float64] */, %1128, %var_6469, meta[relay.Constant][79] /* ty=Tensor[(1024), float64] */)
}

def @func_9406() -> int64 {
  @func_6751() /* ty=int64 */
}

def @func_12612() -> (Tensor[(975), float32],) {
  %1129 = @func_12521() /* ty=(Tensor[(975), float32],) */;
  %1130 = %1129.0;
  %1131 = cast(%1130, dtype="float32") /* ty=Tensor[(975), float32] */;
  %1132 = rsqrt(%1131) /* ty=Tensor[(975), float32] */;
  (%1132,)
}

def @func_6707() -> int64 {
  %1133 = @func_6528() /* ty=(int64,) */;
  %1133.0
}

def @func_11557(%var_11529: Tensor[(104), float64]) -> (int64, Tensor[(13, 2, 4), uint32], Tensor[(104), float64], Tensor[(10, 10, 7), int64]) {
  %1134 = cast(%var_11529, dtype="float64") /* ty=Tensor[(104), float64] */;
  %1135 = reshape(%1134, newshape=[13, 2, 4]) /* ty=Tensor[(13, 2, 4), float64] */;
  %1136 = @func_10449(%1135) /* ty=(Tensor[(10, 10, 7), float64], int64, int64, Tensor[(13, 2, 4), uint32]) */;
  %1137 = @func_8800() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %1138 = @func_9663() /* ty=int64 */;
  %1139 = %1136.3;
  %1140 = %1137.0;
  (%1138, %1139, %var_11529, %1140)
}

def @func_16580() -> int64 {
  %1141 = @func_15173() /* ty=(Tensor[(10, 10, 7), int64], int64) */;
  %1141.1
}

def @func_9663() -> int64 {
  %1142 = @func_9575() /* ty=(int64,) */;
  %1142.0
}

def @func_9095(%var_9077: Tensor[(3, 12, 3), uint64]) -> (Tensor[(3, 12, 3), int16],) {
  %1143 = @func_8350() /* ty=(Tensor[(3, 12, 3), uint64],) */;
  %1144 = %1143.0;
  %1145 = cast(%var_9077, dtype="int16") /* ty=Tensor[(3, 12, 3), int16] */;
  %1146 = shape_of(%1144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1147 = cast(%1144, dtype="int16") /* ty=Tensor[(3, 12, 3), int16] */;
  %1148 = dyn.reshape(%1145, %1146, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1149 = subtract(%1147, %1148) /* ty=Tensor[(3, 12, 3), int16] */;
  (%1149,)
}

def @func_6624(%var_6584: Tensor[(168), uint8], %var_6600: Tensor[(128), int16]) -> (Tensor[(10, 10, 7), int64], Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(128), int16], Tensor[(8, 2, 8), float32], Tensor[(13, 2, 4), float64]) {
  %1150 = cast(%var_6584, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %1151 = reshape(%1150, newshape=[168]) /* ty=Tensor[(168), uint8] */;
  %1152 = @func_6392(%1151) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(12, 7, 2), bool]) */;
  %1153 = cast(%var_6600, dtype="int16") /* ty=Tensor[(128), int16] */;
  %1154 = cast(%var_6600, dtype="int16") /* ty=Tensor[(128), int16] */;
  %1155 = reshape(%1153, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), int16] */;
  %1156 = reshape(%1154, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), int16] */;
  %1157 = @func_2205(%1155, %1156) /* ty=Tensor[(8, 2, 8), int16] */;
  %1158 = cast(%1157, dtype="float32") /* ty=Tensor[(8, 2, 8), float32] */;
  %1159 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %1160 = @func_6558() /* ty=Tensor[(10, 10, 7), int64] */;
  %1161 = %1152.1;
  %1162 = sinh(%1158) /* ty=Tensor[(8, 2, 8), float32] */;
  %1163 = %1159.0;
  (%1160, %1161, %var_6584, %var_6600, %1162, %1163)
}

def @func_8800() -> (Tensor[(10, 10, 7), int64],) {
  %1164 = @func_6903() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %1165 = %1164.0;
  (%1165,)
}

def @func_9494(%var_9476: Tensor[(84), int8], %var_9477: Tensor[(1694), float64]) -> (int64, Tensor[(12, 7, 12), bool], Tensor[(84), int8], Tensor[(1694), float64]) {
  %1166 = cast(%var_9476, dtype="int8") /* ty=Tensor[(84), int8] */;
  %1167 = cast(%var_9477, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %1168 = reshape(%1166, newshape=[1, 7, 12]) /* ty=Tensor[(1, 7, 12), int8] */;
  %1169 = reshape(%1167, newshape=[11, 154]) /* ty=Tensor[(11, 154), float64] */;
  %1170 = @func_2403(%1168, %1169) /* ty=(Tensor[(12, 7, 12), int8], Tensor[(11, 154), float64], int64, Tensor[(12, 7, 12), bool], Tensor[(10, 10, 7), int64]) */;
  %1171 = @func_6751() /* ty=int64 */;
  %1172 = %1170.3;
  (%1171, %1172, %var_9476, %var_9477)
}

def @func_8914(%var_8894: Tensor[(3, 28), int8]) -> (Tensor[(975), float32], Tensor[(10, 10, 7), int64], Tensor[(3, 28), int8]) {
  %1173 = cast(%var_8894, dtype="int8") /* ty=Tensor[(3, 28), int8] */;
  %1174 = reshape(%1173, newshape=[1, 84]) /* ty=Tensor[(1, 84), int8] */;
  %1175 = @func_8280(%1174) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1, 84), int8]) */;
  %1176 = @func_8174() /* ty=Tensor[(975), float32] */;
  %1177 = %1175.0;
  (%1176, %1177, %var_8894)
}

def @func_1575(%var_1569: Tensor[(12, 7, 2), uint8], %var_1570: Tensor[(12, 7, 2), uint8]) -> Tensor[(12, 7, 2), uint8] {
  %1178 = cast(%var_1570, dtype="uint8") /* ty=Tensor[(12, 7, 2), uint8] */;
  %1179 = shape_of(%var_1569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1180 = cast(%var_1569, dtype="uint8") /* ty=Tensor[(12, 7, 2), uint8] */;
  %1181 = dyn.reshape(%1178, %1179, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_and(%1180, %1181) /* ty=Tensor[(12, 7, 2), uint8] */
}

def @func_10930() -> (Tensor[(975), float32], Tensor[(13, 2, 4), float64]) {
  %1182 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
  %1183 = @func_8174() /* ty=Tensor[(975), float32] */;
  %1184 = %1182.0;
  (%1183, %1184)
}

def @func_6751() -> int64 {
  %1185 = @func_6528() /* ty=(int64,) */;
  %1185.0
}

def @func_15143() -> (Tensor[(2, 3, 14), float32], Tensor[(975), float32]) {
  %1186 = cast(meta[relay.Constant][80] /* ty=Tensor[(2, 3, 14), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 14), float32] */;
  %1187 = sqrt(%1186) /* ty=Tensor[(2, 3, 14), float32] */;
  %1188 = @func_11857() /* ty=Tensor[(975), float32] */;
  (%1187, %1188)
}

def @func_9741() -> (int64,) {
  %1189 = @func_9054() /* ty=(int64,) */;
  %1190 = %1189.0;
  (%1190,)
}

def @func_2448(%var_2412: Tensor[(13, 11, 14), uint16]) -> (Tensor[(13, 11, 14), float32],) {
  %1191 = cast(meta[relay.Constant][81] /* ty=Tensor[(13, 11, 14), uint16] */, dtype="uint16") /* ty=Tensor[(13, 11, 14), uint16] */;
  %1192 = shape_of(%var_2412, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1193 = cast(%var_2412, dtype="uint16") /* ty=Tensor[(13, 11, 14), uint16] */;
  %1194 = dyn.reshape(%1191, %1192, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1195 = bitwise_and(%1193, %1194) /* ty=Tensor[(13, 11, 14), uint16] */;
  %1196 = cast(%1195, dtype="float32") /* ty=Tensor[(13, 11, 14), float32] */;
  %1197 = asin(%1196) /* ty=Tensor[(13, 11, 14), float32] */;
  (%1197,)
}

def @func_12831() -> (int64, Tensor[(3, 28), int8], Tensor[(15, 5, 13), float32]) {
  %1198 = @func_11233() /* ty=(int64, int64) */;
  %1199 = @func_10106() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(3, 28), int8], Tensor[(1, 4, 9), uint32], Tensor[(36), uint32]) */;
  %1200 = @func_8136() /* ty=(Tensor[(15, 5, 13), float32],) */;
  %1201 = %1198.0;
  %1202 = %1199.2;
  %1203 = %1200.0;
  (%1201, %1202, %1203)
}

def @func_7856(%var_7818: Tensor[(1024), float64]) -> (int64, Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(16, 8), int16], Tensor[(8, 2, 8), int16], Tensor[(4, 16, 16), float64], Tensor[(1024), float32]) {
  %1204 = cast(meta[relay.Constant][82] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %1205 = cast(meta[relay.Constant][83] /* ty=Tensor[(16, 8), int16] */, dtype="int16") /* ty=Tensor[(16, 8), int16] */;
  %1206 = reshape(%1204, newshape=[168]) /* ty=Tensor[(168), uint8] */;
  %1207 = reshape(%1205, newshape=[128]) /* ty=Tensor[(128), int16] */;
  %1208 = @func_6624(%1206, %1207) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(128), int16], Tensor[(8, 2, 8), float32], Tensor[(13, 2, 4), float64]) */;
  %1209 = cast(meta[relay.Constant][83] /* ty=Tensor[(16, 8), int16] */, dtype="int16") /* ty=Tensor[(16, 8), int16] */;
  %1210 = cast(meta[relay.Constant][83] /* ty=Tensor[(16, 8), int16] */, dtype="int16") /* ty=Tensor[(16, 8), int16] */;
  %1211 = reshape(%1209, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), int16] */;
  %1212 = reshape(%1210, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), int16] */;
  %1213 = cast(%var_7818, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %1214 = cast(%var_7818, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %1215 = reshape(%1213, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
  %1216 = reshape(%1214, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
  %1217 = @func_934(%1215, %1216) /* ty=(Tensor[(4, 16, 16), float64],) */;
  %1218 = cast(%var_7818, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %1219 = sin(%1218) /* ty=Tensor[(1024), float64] */;
  %1220 = cast(%1219, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %1221 = @func_6845() /* ty=int64 */;
  %1222 = %1208.1;
  %1223 = @func_2205(%1211, %1212) /* ty=Tensor[(8, 2, 8), int16] */;
  %1224 = %1217.0;
  %1225 = sqrt(%1220) /* ty=Tensor[(1024), float32] */;
  (%1221, %1222, meta[relay.Constant][82] /* ty=Tensor[(168), uint8] */, meta[relay.Constant][83] /* ty=Tensor[(16, 8), int16] */, %1223, %1224, %1225)
}

def @func_10855(%var_10786: Tensor[(6, 1, 3), int64], %var_10801: Tensor[(1694), float64]) -> (Tensor[(6, 1, 3), int64], int64, Tensor[(84), int8], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(1694), float64], int64, Tensor[(1, 4, 9), uint32], Tensor[(36), uint32]) {
  %1226 = @func_10707() /* ty=(int64,) */;
  %1227 = %1226.0;
  %1228 = cast(%1227, dtype="int64") /* ty=int64 */;
  %1229 = cast(%var_10786, dtype="int64") /* ty=Tensor[(6, 1, 3), int64] */;
  %1230 = cast(meta[relay.Constant][84] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %1231 = cast(%var_10801, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %1232 = reshape(%1230, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %1233 = reshape(%1231, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %1234 = @func_9494(%1232, %1233) /* ty=(int64, Tensor[(12, 7, 12), bool], Tensor[(84), int8], Tensor[(1694), float64]) */;
  %1235 = @func_8800() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %1236 = @func_8800() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %1237 = cast(%var_10801, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %1238 = cast(meta[relay.Constant][85] /* ty=Tensor[(36), uint32] */, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %1239 = reshape(%1238, newshape=[1, 4, 9]) /* ty=Tensor[(1, 4, 9), uint32] */;
  %1240 = @func_4840(%1239) /* ty=(Tensor[(1, 4, 9), uint32],) */;
  %1241 = left_shift(%1228, %1229) /* ty=Tensor[(6, 1, 3), int64] */;
  %1242 = %1234.0;
  %1243 = %1235.0;
  %1244 = %1236.0;
  %1245 = asinh(%1237) /* ty=Tensor[(1694), float64] */;
  %1246 = @func_6707() /* ty=int64 */;
  %1247 = %1240.0;
  (%1241, %1242, meta[relay.Constant][84] /* ty=Tensor[(84), int8] */, %1243, %1244, %1245, %1246, %1247, meta[relay.Constant][85] /* ty=Tensor[(36), uint32] */)
}

def @func_13870() -> (Tensor[(13, 2, 4), float64],) {
  %1248 = @func_10930() /* ty=(Tensor[(975), float32], Tensor[(13, 2, 4), float64]) */;
  %1249 = %1248.1;
  (%1249,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6528() -> (int64,) {
  %0 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %1 = %0.2;
  (%1,)
}

def @func_12105(%var_12103: Tensor[(84), int8], %var_12104: Tensor[(10, 10, 7), int64]) -> (Tensor[(975), float32], Tensor[(84), int8], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), uint64]) {
  @func_12101(%var_12103, %var_12104) /* ty=(Tensor[(975), float32], Tensor[(84), int8], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), uint64]) */
}

def @func_6530() -> (int64,) {
  @func_6528() /* ty=(int64,) */
}

def @func_9665() -> int64 {
  @func_9663() /* ty=int64 */
}

def @func_6303() -> (Tensor[(10, 10, 7), int64],) {
  %4 = fn () -> (Tensor[(10, 10, 7), int64],) {
    %2 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
    %3 = %2.1;
    (%3,)
  };
  %4() /* ty=(Tensor[(10, 10, 7), int64],) */
}

def @func_12484(%var_12433: Tensor[(1694, 1), float64]) -> (Tensor[(975), float32], int64, Tensor[(15, 5, 13), float32], Tensor[(10, 10, 7), float64], Tensor[(975), float32], Tensor[(10, 10, 7), int64], int64, Tensor[(1694, 1), float64], int64, Tensor[(10, 10, 7), int64]) {
  %5 = @func_6884() /* ty=(Tensor[(9, 14, 15), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %6 = @func_12339() /* ty=(Tensor[(975), float32], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(1, 36), uint32], Tensor[(180), uint8]) */;
  %7 = @func_8014() /* ty=(Tensor[(975), float32],) */;
  %8 = cast(%var_12433, dtype="float64") /* ty=Tensor[(1694, 1), float64] */;
  %9 = reshape(%8, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %10 = @func_12196(%9) /* ty=(int64, Tensor[(6, 1, 3), int64], Tensor[(18, 1), int64], Tensor[(1694), float64]) */;
  %11 = @func_8714() /* ty=(int64,) */;
  %12 = @func_8202() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %13 = @func_10354() /* ty=Tensor[(975), float32] */;
  %14 = @func_9406() /* ty=int64 */;
  %15 = %5.1;
  %16 = %6.3;
  %17 = %7.0;
  %18 = @func_9515() /* ty=Tensor[(10, 10, 7), int64] */;
  %19 = %10.0;
  %20 = %11.0;
  %21 = %12.0;
  (%13, %14, %15, %16, %17, %18, %19, %var_12433, %20, %21)
}

def @func_15727(%var_15710: Tensor[(1694), float64], %var_15711: Tensor[(168), bool], %var_15712: int64) -> (Tensor[(10, 10, 7), int64], int64, Tensor[(42, 2), int8], Tensor[(1694), float64], Tensor[(168), bool], int64, Tensor[(294), float32], int64) {
  %22 = cast(meta[relay.Constant][0] /* ty=Tensor[(294), float64] */, dtype="float64") /* ty=Tensor[(294), float64] */;
  %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(42, 2), int8] */, dtype="int8") /* ty=Tensor[(42, 2), int8] */;
  %24 = cast(%var_15710, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %25 = cast(%var_15711, dtype="bool") /* ty=Tensor[(168), bool] */;
  %26 = cast(%var_15712, dtype="int64") /* ty=int64 */;
  %27 = reshape(%22, newshape=[7, 42]) /* ty=Tensor[(7, 42), float64] */;
  %28 = reshape(%23, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %29 = reshape(%24, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %30 = reshape(%25, newshape=[3, 56]) /* ty=Tensor[(3, 56), bool] */;
  %31 = reshape(%26, newshape=[]) /* ty=int64 */;
  %32 = @func_7653(%27, %28, %29, %30, %31) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(847, 2), float64], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(3, 56), int64], Tensor[(10, 10, 7), int64], Tensor[(33), float64], int64) */;
  %33 = cast(meta[relay.Constant][0] /* ty=Tensor[(294), float64] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %34 = @func_9515() /* ty=Tensor[(10, 10, 7), int64] */;
  %35 = %32.8;
  %36 = log2(%33) /* ty=Tensor[(294), float32] */;
  %37 = @func_10052() /* ty=int64 */;
  (%34, %35, meta[relay.Constant][1] /* ty=Tensor[(42, 2), int8] */, %var_15710, %var_15711, %var_15712, %36, %37)
}

def @func_13399() -> int64 {
  %39 = fn () -> int64 {
    %38 = @func_9575() /* ty=(int64,) */;
    %38.0
  };
  %39() /* ty=int64 */
}

def @func_5108(%var_5105: Tensor[(14, 3, 7), float64], %var_5106: Tensor[(84), int8], %var_5107: Tensor[(847, 2), float64]) -> (Tensor[(14, 3, 7), float64], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(847, 2), float64]) {
  %48 = fn (%var_5088: Tensor[(14, 3, 7), float64], %var_5098: Tensor[(84), int8], %var_5099: Tensor[(847, 2), float64]) -> (Tensor[(14, 3, 7), float64], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(847, 2), float64]) {
    %40 = cast(%var_5088, dtype="float64") /* ty=Tensor[(14, 3, 7), float64] */;
    %41 = cast(%var_5098, dtype="int8") /* ty=Tensor[(84), int8] */;
    %42 = cast(%var_5099, dtype="float64") /* ty=Tensor[(847, 2), float64] */;
    %43 = reshape(%41, newshape=[1, 7, 12]) /* ty=Tensor[(1, 7, 12), int8] */;
    %44 = reshape(%42, newshape=[11, 154]) /* ty=Tensor[(11, 154), float64] */;
    %45 = @func_2403(%43, %44) /* ty=(Tensor[(12, 7, 12), int8], Tensor[(11, 154), float64], int64, Tensor[(12, 7, 12), bool], Tensor[(10, 10, 7), int64]) */;
    %46 = sigmoid(%40) /* ty=Tensor[(14, 3, 7), float64] */;
    %47 = %45.4;
    (%46, %47, %var_5098, %var_5099)
  };
  %48(%var_5105, %var_5106, %var_5107) /* ty=(Tensor[(14, 3, 7), float64], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(847, 2), float64]) */
}

def @func_10341() -> (int64,) {
  %49 = @func_8714() /* ty=(int64,) */;
  %50 = %49.0;
  (%50,)
}

def @func_5948(%var_5946: Tensor[(84), int8]) -> (Tensor[(5, 5, 10), bool], Tensor[(84), int8], Tensor[(1, 294), float64], Tensor[(84), int8], Tensor[(847, 2), float64]) {
  @func_5945(%var_5946) /* ty=(Tensor[(5, 5, 10), bool], Tensor[(84), int8], Tensor[(1, 294), float64], Tensor[(84), int8], Tensor[(847, 2), float64]) */
}

def @func_16580() -> int64 {
  %51 = @func_15173() /* ty=(Tensor[(10, 10, 7), int64], int64) */;
  %51.1
}

def @func_4144(%var_4141: Tensor[(33), float64], %var_4142: Tensor[(42, 4), uint8], %var_4143: int64) -> (Tensor[(11, 11, 3), float64], Tensor[(11, 3, 1), float64], Tensor[(33), float64], Tensor[(12, 7, 2), uint8], Tensor[(42, 4), uint8], Tensor[(10, 10, 7), int64], Tensor[(1694), float64], int64) {
  %68 = fn (%var_4091: Tensor[(33), float64], %var_4105: Tensor[(42, 4), uint8], %var_4118: int64) -> (Tensor[(11, 11, 3), float64], Tensor[(11, 3, 1), float64], Tensor[(33), float64], Tensor[(12, 7, 2), uint8], Tensor[(42, 4), uint8], Tensor[(10, 10, 7), int64], Tensor[(1694), float64], int64) {
    %52 = cast(meta[relay.Constant][2] /* ty=Tensor[(11, 11, 3), float64] */, dtype="float64") /* ty=Tensor[(11, 11, 3), float64] */;
    %53 = cast(%var_4091, dtype="float64") /* ty=Tensor[(33), float64] */;
    %54 = reshape(%53, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
    %55 = cast(%var_4105, dtype="uint8") /* ty=Tensor[(42, 4), uint8] */;
    %56 = cast(%var_4105, dtype="uint8") /* ty=Tensor[(42, 4), uint8] */;
    %57 = reshape(%55, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
    %58 = reshape(%56, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
    %59 = cast(meta[relay.Constant][3] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %60 = cast(%var_4118, dtype="int64") /* ty=int64 */;
    %61 = reshape(%59, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float64] */;
    %62 = reshape(%60, newshape=[]) /* ty=int64 */;
    %63 = @func_1548(%61, %62) /* ty=(Tensor[(11, 11, 14), float64], Tensor[(10, 10, 7), int64], int64) */;
    %64 = cos(%52) /* ty=Tensor[(11, 11, 3), float64] */;
    %65 = @func_908(%54) /* ty=Tensor[(11, 3, 1), float64] */;
    %66 = @func_1575(%57, %58) /* ty=Tensor[(12, 7, 2), uint8] */;
    %67 = %63.1;
    (%64, %65, %var_4091, %66, %var_4105, %67, meta[relay.Constant][3] /* ty=Tensor[(1694), float64] */, %var_4118)
  };
  %68(%var_4141, %var_4142, %var_4143) /* ty=(Tensor[(11, 11, 3), float64], Tensor[(11, 3, 1), float64], Tensor[(33), float64], Tensor[(12, 7, 2), uint8], Tensor[(42, 4), uint8], Tensor[(10, 10, 7), int64], Tensor[(1694), float64], int64) */
}

def @func_15290(%var_15289: Tensor[(1024), float64]) -> (Tensor[(15, 5, 13), float32], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) {
  %77 = fn (%var_15282: Tensor[(1024), float64]) -> (Tensor[(15, 5, 13), float32], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) {
    %69 = @func_7553() /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
    %70 = cast(%var_15282, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %71 = cast(%var_15282, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %72 = reshape(%70, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
    %73 = reshape(%71, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
    %74 = @func_934(%72, %73) /* ty=(Tensor[(4, 16, 16), float64],) */;
    %75 = %69.2;
    %76 = %74.0;
    (%75, %76, %var_15282)
  };
  %77(%var_15289) /* ty=(Tensor[(15, 5, 13), float32], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) */
}

def @func_10855(%var_10786: Tensor[(6, 1, 3), int64], %var_10801: Tensor[(1694), float64]) -> (Tensor[(6, 1, 3), int64], int64, Tensor[(84), int8], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(1694), float64], int64, Tensor[(1, 4, 9), uint32], Tensor[(36), uint32]) {
  %78 = @func_10707() /* ty=(int64,) */;
  %79 = %78.0;
  %80 = cast(%79, dtype="int64") /* ty=int64 */;
  %81 = cast(%var_10786, dtype="int64") /* ty=Tensor[(6, 1, 3), int64] */;
  %82 = cast(meta[relay.Constant][4] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %83 = cast(%var_10801, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %84 = reshape(%82, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %85 = reshape(%83, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %86 = @func_9494(%84, %85) /* ty=(int64, Tensor[(12, 7, 12), bool], Tensor[(84), int8], Tensor[(1694), float64]) */;
  %87 = @func_8800() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %88 = @func_8800() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %89 = cast(%var_10801, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %90 = cast(meta[relay.Constant][5] /* ty=Tensor[(36), uint32] */, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %91 = reshape(%90, newshape=[1, 4, 9]) /* ty=Tensor[(1, 4, 9), uint32] */;
  %92 = @func_4840(%91) /* ty=(Tensor[(1, 4, 9), uint32],) */;
  %93 = left_shift(%80, %81) /* ty=Tensor[(6, 1, 3), int64] */;
  %94 = %86.0;
  %95 = %87.0;
  %96 = %88.0;
  %97 = asinh(%89) /* ty=Tensor[(1694), float64] */;
  %98 = @func_6707() /* ty=int64 */;
  %99 = %92.0;
  (%93, %94, meta[relay.Constant][4] /* ty=Tensor[(84), int8] */, %95, %96, %97, %98, %99, meta[relay.Constant][5] /* ty=Tensor[(36), uint32] */)
}

def @func_9098(%var_9096: Tensor[(3, 12, 3), uint64]) -> (Tensor[(3, 12, 3), int16],) {
  @func_9095(%var_9096) /* ty=(Tensor[(3, 12, 3), int16],) */
}

def @func_9728(%var_9726: Tensor[(3, 7, 11), bool], %var_9727: Tensor[(3, 7, 11), bool]) -> Tensor[(3, 7, 11), bool] {
  @func_9724(%var_9726, %var_9727) /* ty=Tensor[(3, 7, 11), bool] */
}

def @func_7391() -> (int64, Tensor[(10, 10, 7), int64]) {
  %100 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %101 = @func_6751() /* ty=int64 */;
  %102 = %100.0;
  (%101, %102)
}

def @func_7393() -> (int64, Tensor[(10, 10, 7), int64]) {
  @func_7391() /* ty=(int64, Tensor[(10, 10, 7), int64]) */
}

def @func_10606() -> (Tensor[(10, 10, 7), int64],) {
  @func_10604() /* ty=(Tensor[(10, 10, 7), int64],) */
}

def @func_16038(%var_16037: Tensor[(128), int16]) -> (Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), float64]) {
  %117 = fn (%var_16018: Tensor[(128), int16]) -> (Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), float64]) {
    %103 = @func_11606() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(3, 12, 3), int16], Tensor[(108), uint64]) */;
    %104 = @func_15683() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %105 = cast(%var_16018, dtype="int16") /* ty=Tensor[(128), int16] */;
    %106 = cast(%var_16018, dtype="int16") /* ty=Tensor[(128), int16] */;
    %107 = reshape(%105, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), int16] */;
    %108 = reshape(%106, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), int16] */;
    %109 = @func_2205(%107, %108) /* ty=Tensor[(8, 2, 8), int16] */;
    %110 = cast(%var_16018, dtype="float64") /* ty=Tensor[(128), float64] */;
    %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
    %112 = cast(%109, dtype="float64") /* ty=Tensor[(8, 2, 8), float64] */;
    %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %114 = %103.0;
    %115 = %104.0;
    %116 = mod(%112, %113) /* ty=Tensor[(8, 2, 8), float64] */;
    (%114, %115, %116)
  };
  %117(%var_16037) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), float64]) */
}

def @func_12970() -> (int64, Tensor[(10, 10, 7), int64]) {
  @func_12968() /* ty=(int64, Tensor[(10, 10, 7), int64]) */
}

def @func_7859(%var_7857: Tensor[(1024), float64]) -> (int64, Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(16, 8), int16], Tensor[(8, 2, 8), int16], Tensor[(4, 16, 16), float64], Tensor[(1024), float32]) {
  @func_7856(%var_7857) /* ty=(int64, Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(16, 8), int16], Tensor[(8, 2, 8), int16], Tensor[(4, 16, 16), float64], Tensor[(1024), float32]) */
}

def @func_11163(%var_11147: Tensor[(1, 14, 9), float64], %var_11158: Tensor[(2, 512), float64], %var_11159: Tensor[(1694), float64]) -> (Tensor[(1, 14, 9), float64], int64, Tensor[(10, 10, 7), int64], Tensor[(12, 14, 8), float32], Tensor[(2, 512), float64], Tensor[(1694), float64]) {
  %118 = cast(%var_11147, dtype="float64") /* ty=Tensor[(1, 14, 9), float64] */;
  %119 = @func_10707() /* ty=(int64,) */;
  %120 = @func_9128() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %121 = cast(%var_11158, dtype="float64") /* ty=Tensor[(2, 512), float64] */;
  %122 = cast(%var_11159, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %123 = reshape(%121, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %124 = reshape(%122, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %125 = @func_8430(%123, %124) /* ty=(Tensor[(975), float32], Tensor[(9, 14, 15), float32], Tensor[(12, 14, 8), float32], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(1024), float64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(1694), bool], Tensor[(84), int8]) */;
  %126 = sigmoid(%118) /* ty=Tensor[(1, 14, 9), float64] */;
  %127 = %119.0;
  %128 = %120.0;
  %129 = %125.2;
  (%126, %127, %128, %129, %var_11158, %var_11159)
}

def @func_11793() -> (Tensor[(10, 10, 7), int64],) {
  %130 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %131 = %130.0;
  (%131,)
}

def @func_14245(%var_14244: Tensor[(1024), float64]) -> (int64, int64, Tensor[(1024), float64]) {
  %138 = fn (%var_14227: Tensor[(1024), float64]) -> (int64, int64, Tensor[(1024), float64]) {
    %132 = @func_14016() /* ty=(int64, Tensor[(10, 10, 7), int64]) */;
    %133 = cast(%var_14227, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %134 = reshape(%133, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
    %135 = @func_7856(%134) /* ty=(int64, Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(16, 8), int16], Tensor[(8, 2, 8), int16], Tensor[(4, 16, 16), float64], Tensor[(1024), float32]) */;
    %136 = %132.0;
    %137 = %135.0;
    (%136, %137, %var_14227)
  };
  %138(%var_14244) /* ty=(int64, int64, Tensor[(1024), float64]) */
}

def @func_14284() -> int64 {
  @func_14282() /* ty=int64 */
}

def @func_10451(%var_10450: Tensor[(13, 2, 4), float64]) -> (Tensor[(10, 10, 7), float64], int64, int64, Tensor[(13, 2, 4), uint32]) {
  %150 = fn (%var_10435: Tensor[(13, 2, 4), float64]) -> (Tensor[(10, 10, 7), float64], int64, int64, Tensor[(13, 2, 4), uint32]) {
    %139 = @func_7553() /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
    %140 = @func_9741() /* ty=(int64,) */;
    %141 = @func_8869() /* ty=Tensor[(13, 2, 4), float64] */;
    %142 = cast(%var_10435, dtype="uint32") /* ty=Tensor[(13, 2, 4), uint32] */;
    %143 = shape_of(%141, dtype="int32") /* ty=Tensor[(3), int32] */;
    %144 = cast(%141, dtype="uint32") /* ty=Tensor[(13, 2, 4), uint32] */;
    %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %146 = %139.0;
    %147 = @func_6707() /* ty=int64 */;
    %148 = %140.0;
    %149 = bitwise_xor(%144, %145) /* ty=Tensor[(13, 2, 4), uint32] */;
    (%146, %147, %148, %149)
  };
  %150(%var_10450) /* ty=(Tensor[(10, 10, 7), float64], int64, int64, Tensor[(13, 2, 4), uint32]) */
}

def @func_11874() -> Tensor[(975), float32] {
  @func_8174() /* ty=Tensor[(975), float32] */
}

def @func_8715() -> (int64,) {
  %152 = fn () -> (int64,) {
    %151 = @func_6707() /* ty=int64 */;
    (%151,)
  };
  %152() /* ty=(int64,) */
}

def @func_8282(%var_8281: Tensor[(1, 84), int8]) -> (Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1, 84), int8]) {
  %158 = fn (%var_8276: Tensor[(1, 84), int8]) -> (Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1, 84), int8]) {
    %153 = cast(%var_8276, dtype="int8") /* ty=Tensor[(1, 84), int8] */;
    %154 = reshape(%153, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %155 = @func_5945(%154) /* ty=(Tensor[(5, 5, 10), bool], Tensor[(84), int8], Tensor[(1, 294), float64], Tensor[(84), int8], Tensor[(847, 2), float64]) */;
    %156 = @func_6558() /* ty=Tensor[(10, 10, 7), int64] */;
    %157 = %155.1;
    (%156, %157, %var_8276)
  };
  %158(%var_8281) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1, 84), int8]) */
}

def @func_7553() -> (Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) {
  %159 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %160 = %159.1;
  %161 = cast(%160, dtype="float64") /* ty=Tensor[(10, 10, 7), float64] */;
  %162 = cast(%160, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
  %163 = cast(meta[relay.Constant][6] /* ty=Tensor[(975), float32] */, dtype="float32") /* ty=Tensor[(975), float32] */;
  %164 = reshape(%163, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float32] */;
  %165 = @func_2112(%164) /* ty=(Tensor[(15, 5, 13), float32],) */;
  %166 = tan(%161) /* ty=Tensor[(10, 10, 7), float64] */;
  %167 = rsqrt(%162) /* ty=Tensor[(10, 10, 7), float32] */;
  %168 = %165.0;
  (%166, %167, %168, meta[relay.Constant][6] /* ty=Tensor[(975), float32] */)
}

def @func_11795() -> (Tensor[(10, 10, 7), int64],) {
  @func_11793() /* ty=(Tensor[(10, 10, 7), int64],) */
}

def @func_16239() -> (Tensor[(10, 10, 7), int64],) {
  %171 = fn () -> (Tensor[(10, 10, 7), int64],) {
    %169 = @func_11793() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %170 = %169.0;
    (%170,)
  };
  %171() /* ty=(Tensor[(10, 10, 7), int64],) */
}

def @func_1575(%var_1569: Tensor[(12, 7, 2), uint8], %var_1570: Tensor[(12, 7, 2), uint8]) -> Tensor[(12, 7, 2), uint8] {
  %172 = cast(%var_1570, dtype="uint8") /* ty=Tensor[(12, 7, 2), uint8] */;
  %173 = shape_of(%var_1569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%var_1569, dtype="uint8") /* ty=Tensor[(12, 7, 2), uint8] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_and(%174, %175) /* ty=Tensor[(12, 7, 2), uint8] */
}

def @func_15748() -> (Tensor[(10, 10, 7), int64],) {
  %177 = fn () -> (Tensor[(10, 10, 7), int64],) {
    %176 = @func_14117() /* ty=Tensor[(10, 10, 7), int64] */;
    (%176,)
  };
  %177() /* ty=(Tensor[(10, 10, 7), int64],) */
}

def @func_12362() -> (int64, Tensor[(975), float32]) {
  %182 = fn () -> (int64, Tensor[(975), float32]) {
    %178 = @func_9054() /* ty=(int64,) */;
    %179 = @func_10930() /* ty=(Tensor[(975), float32], Tensor[(13, 2, 4), float64]) */;
    %180 = %178.0;
    %181 = %179.0;
    (%180, %181)
  };
  %182() /* ty=(int64, Tensor[(975), float32]) */
}

def @func_13203() -> (int64, int64, Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16]) {
  %191 = fn () -> (int64, int64, Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16]) {
    %183 = @func_9575() /* ty=(int64,) */;
    %184 = @func_9035() /* ty=(int64,) */;
    %185 = @func_9148() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %186 = @func_8323() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16], Tensor[(128), int16], Tensor[(975), float32]) */;
    %187 = %183.0;
    %188 = %184.0;
    %189 = %185.0;
    %190 = %186.1;
    (%187, %188, %189, %190)
  };
  %191() /* ty=(int64, int64, Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16]) */
}

def @func_14017() -> (int64, Tensor[(10, 10, 7), int64]) {
  %196 = fn () -> (int64, Tensor[(10, 10, 7), int64]) {
    %192 = @func_9741() /* ty=(int64,) */;
    %193 = @func_11793() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %194 = %192.0;
    %195 = %193.0;
    (%194, %195)
  };
  %196() /* ty=(int64, Tensor[(10, 10, 7), int64]) */
}

def @func_12667() -> (Tensor[(13, 8, 14), bool], Tensor[(13, 8, 14), float32]) {
  %206 = fn () -> (Tensor[(13, 8, 14), bool], Tensor[(13, 8, 14), float32]) {
    %197 = @func_6751() /* ty=int64 */;
    %198 = cast(%197, dtype="uint64") /* ty=uint64 */;
    %199 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 8, 14), int64] */, dtype="uint64") /* ty=Tensor[(13, 8, 14), uint64] */;
    %200 = maximum(%198, %199) /* ty=Tensor[(13, 8, 14), uint64] */;
    %201 = cast(%200, dtype="bool") /* ty=Tensor[(13, 8, 14), bool] */;
    %202 = cast(%197, dtype="bool") /* ty=bool */;
    %203 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 8, 14), int64] */, dtype="float32") /* ty=Tensor[(13, 8, 14), float32] */;
    %204 = not_equal(%201, %202) /* ty=Tensor[(13, 8, 14), bool] */;
    %205 = rsqrt(%203) /* ty=Tensor[(13, 8, 14), float32] */;
    (%204, %205)
  };
  %206() /* ty=(Tensor[(13, 8, 14), bool], Tensor[(13, 8, 14), float32]) */
}

def @func_8497(%var_8472: Tensor[(2002), uint16]) -> (int64, Tensor[(13, 11, 14), float32], Tensor[(2002), float32]) {
  %207 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %208 = cast(%var_8472, dtype="uint16") /* ty=Tensor[(2002), uint16] */;
  %209 = reshape(%208, newshape=[13, 11, 14]) /* ty=Tensor[(13, 11, 14), uint16] */;
  %210 = @func_2448(%209) /* ty=(Tensor[(13, 11, 14), float32],) */;
  %211 = cast(meta[relay.Constant][8] /* ty=Tensor[(2002), uint16] */, dtype="uint16") /* ty=Tensor[(2002), uint16] */;
  %212 = shape_of(%var_8472, dtype="int32") /* ty=Tensor[(1), int32] */;
  %213 = cast(%var_8472, dtype="uint16") /* ty=Tensor[(2002), uint16] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %215 = right_shift(%213, %214) /* ty=Tensor[(2002), uint16] */;
  %216 = cast(%215, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %217 = %207.2;
  %218 = %210.0;
  %219 = cosh(%216) /* ty=Tensor[(2002), float32] */;
  (%217, %218, %219)
}

def @func_5998(%var_5980: Tensor[(4, 15, 3), uint8], %var_5994: Tensor[(1024), float64]) -> (Tensor[(4, 15, 3), bool], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) {
  %220 = cast(%var_5980, dtype="bool") /* ty=Tensor[(4, 15, 3), bool] */;
  %221 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(4, 15, 3), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %222 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 15, 3), uint8] */, dtype="bool") /* ty=Tensor[(4, 15, 3), bool] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %224 = cast(%var_5994, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %225 = cast(%var_5994, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %226 = reshape(%224, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
  %227 = reshape(%225, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
  %228 = @func_934(%226, %227) /* ty=(Tensor[(4, 16, 16), float64],) */;
  %229 = less(%222, %223) /* ty=Tensor[(4, 15, 3), bool] */;
  %230 = %228.0;
  (%229, %230, %var_5994)
}

def @func_4288(%var_4271: Tensor[(2, 8, 8), float64]) -> (Tensor[(2, 8, 8), uint8],) {
  %231 = cast(%var_4271, dtype="float64") /* ty=Tensor[(2, 8, 8), float64] */;
  %232 = sinh(%231) /* ty=Tensor[(2, 8, 8), float64] */;
  %233 = cast(%232, dtype="uint8") /* ty=Tensor[(2, 8, 8), uint8] */;
  %234 = shape_of(%var_4271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%var_4271, dtype="uint8") /* ty=Tensor[(2, 8, 8), uint8] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %237 = minimum(%235, %236) /* ty=Tensor[(2, 8, 8), uint8] */;
  (%237,)
}

def @func_8800() -> (Tensor[(10, 10, 7), int64],) {
  %238 = @func_6903() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %239 = %238.0;
  (%239,)
}

def @func_7258(%var_7255: Tensor[(1, 1344), float32], %var_7256: Tensor[(84), int8], %var_7257: Tensor[(4, 256), float64]) -> (Tensor[(10, 10, 7), int64], Tensor[(12, 14, 8), float32], Tensor[(1, 1344), float32], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(4, 256), float64]) {
  %252 = fn (%var_7243: Tensor[(1, 1344), float32], %var_7244: Tensor[(84), int8], %var_7246: Tensor[(4, 256), float64]) -> (Tensor[(10, 10, 7), int64], Tensor[(12, 14, 8), float32], Tensor[(1, 1344), float32], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(4, 256), float64]) {
    %240 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
    %241 = cast(%var_7243, dtype="float32") /* ty=Tensor[(1, 1344), float32] */;
    %242 = cast(%var_7244, dtype="int8") /* ty=Tensor[(84), int8] */;
    %243 = cast(meta[relay.Constant][10] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %244 = cast(%var_7246, dtype="float64") /* ty=Tensor[(4, 256), float64] */;
    %245 = reshape(%241, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), float32] */;
    %246 = reshape(%242, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %247 = reshape(%243, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
    %248 = reshape(%244, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
    %249 = @func_5524(%245, %246, %247, %248) /* ty=(Tensor[(12, 14, 8), float32], Tensor[(15, 5, 13), float32], Tensor[(325, 3), float32], Tensor[(12, 14, 8), float32], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(12, 7, 2), uint8], Tensor[(1, 168), uint8], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) */;
    %250 = %240.1;
    %251 = %249.3;
    (%250, %251, %var_7243, %var_7244, meta[relay.Constant][10] /* ty=Tensor[(1694), float64] */, %var_7246)
  };
  %252(%var_7255, %var_7256, %var_7257) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(12, 14, 8), float32], Tensor[(1, 1344), float32], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(4, 256), float64]) */
}

def @func_14412() -> Tensor[(975), float32] {
  %254 = fn () -> Tensor[(975), float32] {
    %253 = @func_12612() /* ty=(Tensor[(975), float32],) */;
    %253.0
  };
  %254() /* ty=Tensor[(975), float32] */
}

def @func_8917(%var_8915: Tensor[(3, 28), int8]) -> (Tensor[(975), float32], Tensor[(10, 10, 7), int64], Tensor[(3, 28), int8]) {
  @func_8914(%var_8915) /* ty=(Tensor[(975), float32], Tensor[(10, 10, 7), int64], Tensor[(3, 28), int8]) */
}

def @func_9055() -> (int64,) {
  %256 = fn () -> (int64,) {
    %255 = @func_6751() /* ty=int64 */;
    (%255,)
  };
  %256() /* ty=(int64,) */
}

def @func_10984() -> (Tensor[(10, 10, 7), int64],) {
  @func_10982() /* ty=(Tensor[(10, 10, 7), int64],) */
}

def @func_12340() -> (Tensor[(975), float32], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(1, 36), uint32], Tensor[(180), uint8]) {
  %275 = fn () -> (Tensor[(975), float32], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(1, 36), uint32], Tensor[(180), uint8]) {
    %257 = @func_9356() /* ty=(int64, Tensor[(975), float32], int64) */;
    %258 = @func_8202() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %259 = @func_10982() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %260 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %261 = %260.0;
    %262 = cast(%261, dtype="float64") /* ty=Tensor[(10, 10, 7), float64] */;
    %263 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 36), uint32] */, dtype="uint32") /* ty=Tensor[(1, 36), uint32] */;
    %264 = cast(meta[relay.Constant][12] /* ty=Tensor[(180), uint8] */, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %265 = cast(%261, dtype="int64") /* ty=Tensor[(10, 10, 7), int64] */;
    %266 = reshape(%263, newshape=[36]) /* ty=Tensor[(36), uint32] */;
    %267 = reshape(%264, newshape=[180]) /* ty=Tensor[(180), uint8] */;
    %268 = reshape(%265, newshape=[700]) /* ty=Tensor[(700), int64] */;
    %269 = @func_9800(%266, %267, %268) /* ty=(int64, int64, Tensor[(1, 4, 9), uint32], Tensor[(36), uint32], Tensor[(2, 8, 8), uint8], Tensor[(1, 128), float64], int64, Tensor[(10, 10, 7), float32], Tensor[(180), uint8], Tensor[(1024), float64], Tensor[(700), int64]) */;
    %270 = %257.1;
    %271 = %258.0;
    %272 = %259.0;
    %273 = asinh(%262) /* ty=Tensor[(10, 10, 7), float64] */;
    %274 = %269.7;
    (%270, %271, %272, %273, %274, meta[relay.Constant][11] /* ty=Tensor[(1, 36), uint32] */, meta[relay.Constant][12] /* ty=Tensor[(180), uint8] */)
  };
  %275() /* ty=(Tensor[(975), float32], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(1, 36), uint32], Tensor[(180), uint8]) */
}

def @func_15126(%var_15124: Tensor[(84), int8]) -> (Tensor[(10, 10, 7), int64], int64, Tensor[(975), float32], Tensor[(84), int8], Tensor[(1, 294), float32], Tensor[(10, 10, 7), int64]) {
  @func_15123(%var_15124) /* ty=(Tensor[(10, 10, 7), int64], int64, Tensor[(975), float32], Tensor[(84), int8], Tensor[(1, 294), float32], Tensor[(10, 10, 7), int64]) */
}

def @func_6560() -> Tensor[(10, 10, 7), int64] {
  @func_6558() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_7044(%var_7042: int64) -> (Tensor[(975), float32], int64, Tensor[(33), float64], Tensor[(168), uint8], int64, Tensor[(10, 10, 7), int64], Tensor[(15, 5, 10), uint16], Tensor[(10, 75), uint16], Tensor[(11, 3, 1), float64]) {
  @func_7041(%var_7042) /* ty=(Tensor[(975), float32], int64, Tensor[(33), float64], Tensor[(168), uint8], int64, Tensor[(10, 10, 7), int64], Tensor[(15, 5, 10), uint16], Tensor[(10, 75), uint16], Tensor[(11, 3, 1), float64]) */
}

def @func_9800(%var_9781: Tensor[(36), uint32], %var_9795: Tensor[(180), uint8], %var_9797: Tensor[(700), int64]) -> (int64, int64, Tensor[(1, 4, 9), uint32], Tensor[(36), uint32], Tensor[(2, 8, 8), uint8], Tensor[(1, 128), float64], int64, Tensor[(10, 10, 7), float32], Tensor[(180), uint8], Tensor[(1024), float64], Tensor[(700), int64]) {
  %276 = @func_9741() /* ty=(int64,) */;
  %277 = cast(%var_9781, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %278 = reshape(%277, newshape=[1, 4, 9]) /* ty=Tensor[(1, 4, 9), uint32] */;
  %279 = @func_4840(%278) /* ty=(Tensor[(1, 4, 9), uint32],) */;
  %280 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 128), float64] */, dtype="float64") /* ty=Tensor[(1, 128), float64] */;
  %281 = reshape(%280, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
  %282 = @func_4288(%281) /* ty=(Tensor[(2, 8, 8), uint8],) */;
  %283 = @func_9575() /* ty=(int64,) */;
  %284 = cast(%var_9795, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %285 = cast(meta[relay.Constant][14] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %286 = cast(%var_9797, dtype="int64") /* ty=Tensor[(700), int64] */;
  %287 = reshape(%284, newshape=[180]) /* ty=Tensor[(180), uint8] */;
  %288 = reshape(%285, newshape=[512, 2]) /* ty=Tensor[(512, 2), float64] */;
  %289 = reshape(%286, newshape=[10, 10, 7]) /* ty=Tensor[(10, 10, 7), int64] */;
  %290 = @func_7166(%287, %288, %289) /* ty=(Tensor[(13, 2, 4), float64], Tensor[(4, 15, 3), bool], Tensor[(180), uint8], Tensor[(10, 10, 7), float32], Tensor[(512, 2), float32]) */;
  %291 = %276.0;
  %292 = @func_6707() /* ty=int64 */;
  %293 = %279.0;
  %294 = %282.0;
  %295 = %283.0;
  %296 = %290.3;
  (%291, %292, %293, %var_9781, %294, meta[relay.Constant][13] /* ty=Tensor[(1, 128), float64] */, %295, %296, %var_9795, meta[relay.Constant][14] /* ty=Tensor[(1024), float64] */, %var_9797)
}

def @func_11024(%var_11021: int32, %var_11022: Tensor[(16, 5, 3), int32], %var_11023: Tensor[(33), float64]) -> (Tensor[(16, 5, 3), int32], Tensor[(11, 3, 1), float64], Tensor[(33), float64], int64) {
  @func_11019(%var_11021, %var_11022, %var_11023) /* ty=(Tensor[(16, 5, 3), int32], Tensor[(11, 3, 1), float64], Tensor[(33), float64], int64) */
}

def @func_12014() -> (int64, Tensor[(10, 10, 7), int64]) {
  %297 = @func_9054() /* ty=(int64,) */;
  %298 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
  %299 = %297.0;
  %300 = %298.1;
  (%299, %300)
}

def @func_11939() -> (Tensor[(975), uint32], Tensor[(143, 14), float64]) {
  %301 = @func_11835() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(975), uint32]) */;
  %302 = cast(meta[relay.Constant][15] /* ty=Tensor[(143, 14), uint16] */, dtype="uint16") /* ty=Tensor[(143, 14), uint16] */;
  %303 = reshape(%302, newshape=[2002]) /* ty=Tensor[(2002), uint16] */;
  %304 = @func_8568(%303) /* ty=(int64, Tensor[(2002), float32], Tensor[(2002), uint16], Tensor[(12, 7, 2), uint8], Tensor[(168), uint8]) */;
  %305 = %304.0;
  %306 = cast(meta[relay.Constant][15] /* ty=Tensor[(143, 14), uint16] */, dtype="float64") /* ty=Tensor[(143, 14), float64] */;
  %307 = cast(%305, dtype="float64") /* ty=float64 */;
  %308 = %301.1;
  %309 = floor_divide(%306, %307) /* ty=Tensor[(143, 14), float64] */;
  (%308, %309)
}

def @func_15770() -> (int64,) {
  %310 = @func_6528() /* ty=(int64,) */;
  %311 = %310.0;
  (%311,)
}

def @func_16274() -> (int64, Tensor[(10, 10, 7), int64], int64) {
  %318 = fn () -> (int64, Tensor[(10, 10, 7), int64], int64) {
    %312 = @func_15173() /* ty=(Tensor[(10, 10, 7), int64], int64) */;
    %313 = @func_13202() /* ty=(int64, int64, Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16]) */;
    %314 = @func_7088() /* ty=(int64,) */;
    %315 = %312.1;
    %316 = %313.2;
    %317 = %314.0;
    (%315, %316, %317)
  };
  %318() /* ty=(int64, Tensor[(10, 10, 7), int64], int64) */
}

def @func_10354() -> Tensor[(975), float32] {
  %319 = @func_8323() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16], Tensor[(128), int16], Tensor[(975), float32]) */;
  %319.3
}

def @func_8734() -> (Tensor[(10, 10, 7), int64], int64) {
  @func_8732() /* ty=(Tensor[(10, 10, 7), int64], int64) */
}

def @func_9997(%var_9912: Tensor[(33), float64], %var_9935: Tensor[(847, 2), float64], %var_9960: Tensor[(231), bool], %var_9979: Tensor[(11, 182), uint16], %var_9989: Tensor[(168), uint8]) -> (Tensor[(15, 5, 13), float32], Tensor[(10, 10, 7), int64], Tensor[(11, 3, 1), float64], Tensor[(33), float64], int64, Tensor[(1344), float32], Tensor[(1024), float64], Tensor[(847, 2), float64], Tensor[(15, 5, 13), float32], Tensor[(10, 10, 7), int64], Tensor[(3, 7, 11), bool], Tensor[(231), bool], Tensor[(2002), uint16], Tensor[(11, 182), uint16], Tensor[(10, 10, 7), float32], Tensor[(8, 2, 8), float32], Tensor[(168), uint8], Tensor[(128), int16]) {
  %320 = @func_6884() /* ty=(Tensor[(9, 14, 15), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %321 = @func_9128() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %322 = cast(%var_9912, dtype="float64") /* ty=Tensor[(33), float64] */;
  %323 = reshape(%322, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %324 = @func_9264() /* ty=(int64, int64) */;
  %325 = cast(meta[relay.Constant][16] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %326 = cast(%var_9935, dtype="float64") /* ty=Tensor[(847, 2), float64] */;
  %327 = reshape(%325, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %328 = reshape(%326, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %329 = @func_8430(%327, %328) /* ty=(Tensor[(975), float32], Tensor[(9, 14, 15), float32], Tensor[(12, 14, 8), float32], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(1024), float64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(1694), bool], Tensor[(84), int8]) */;
  %330 = %320.1;
  %331 = cast(%330, dtype="float32") /* ty=Tensor[(15, 5, 13), float32] */;
  %332 = reshape(%331, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float32] */;
  %333 = @func_2112(%332) /* ty=(Tensor[(15, 5, 13), float32],) */;
  %334 = cast(meta[relay.Constant][16] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %335 = cast(%var_9935, dtype="float64") /* ty=Tensor[(847, 2), float64] */;
  %336 = reshape(%334, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %337 = reshape(%335, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %338 = @func_8430(%336, %337) /* ty=(Tensor[(975), float32], Tensor[(9, 14, 15), float32], Tensor[(12, 14, 8), float32], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(1024), float64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(1694), bool], Tensor[(84), int8]) */;
  %339 = cast(%var_9960, dtype="bool") /* ty=Tensor[(231), bool] */;
  %340 = cast(%var_9960, dtype="bool") /* ty=Tensor[(231), bool] */;
  %341 = reshape(%339, newshape=[3, 7, 11]) /* ty=Tensor[(3, 7, 11), bool] */;
  %342 = reshape(%340, newshape=[3, 7, 11]) /* ty=Tensor[(3, 7, 11), bool] */;
  %343 = cast(%var_9979, dtype="uint16") /* ty=Tensor[(11, 182), uint16] */;
  %344 = reshape(%343, newshape=[2002]) /* ty=Tensor[(2002), uint16] */;
  %345 = @func_8568(%344) /* ty=(int64, Tensor[(2002), float32], Tensor[(2002), uint16], Tensor[(12, 7, 2), uint8], Tensor[(168), uint8]) */;
  %346 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
  %347 = %346.1;
  %348 = cast(%347, dtype="float64") /* ty=Tensor[(10, 10, 7), float64] */;
  %349 = atanh(%348) /* ty=Tensor[(10, 10, 7), float64] */;
  %350 = cast(%349, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
  %351 = cast(%var_9989, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %352 = cast(meta[relay.Constant][17] /* ty=Tensor[(128), int16] */, dtype="int16") /* ty=Tensor[(128), int16] */;
  %353 = reshape(%351, newshape=[168]) /* ty=Tensor[(168), uint8] */;
  %354 = reshape(%352, newshape=[128]) /* ty=Tensor[(128), int16] */;
  %355 = @func_6624(%353, %354) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(128), int16], Tensor[(8, 2, 8), float32], Tensor[(13, 2, 4), float64]) */;
  %356 = %321.0;
  %357 = @func_908(%323) /* ty=Tensor[(11, 3, 1), float64] */;
  %358 = %324.1;
  %359 = %329.3;
  %360 = %333.0;
  %361 = %338.6;
  %362 = @func_9724(%341, %342) /* ty=Tensor[(3, 7, 11), bool] */;
  %363 = %345.2;
  %364 = sinh(%350) /* ty=Tensor[(10, 10, 7), float32] */;
  %365 = %355.4;
  (%330, %356, %357, %var_9912, %358, %359, meta[relay.Constant][16] /* ty=Tensor[(1024), float64] */, %var_9935, %360, %361, %362, %var_9960, %363, %var_9979, %364, %365, %var_9989, meta[relay.Constant][17] /* ty=Tensor[(128), int16] */)
}

def @func_10982() -> (Tensor[(10, 10, 7), int64],) {
  %366 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
  %367 = %366.1;
  (%367,)
}

def @func_8351() -> (Tensor[(3, 12, 3), uint64],) {
  %375 = fn () -> (Tensor[(3, 12, 3), uint64],) {
    %368 = cast(meta[relay.Constant][18] /* ty=Tensor[(3, 12, 3), float64] */, dtype="float64") /* ty=Tensor[(3, 12, 3), float64] */;
    %369 = tan(%368) /* ty=Tensor[(3, 12, 3), float64] */;
    %370 = cast(%369, dtype="uint64") /* ty=Tensor[(3, 12, 3), uint64] */;
    %371 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(3, 12, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %372 = cast(meta[relay.Constant][18] /* ty=Tensor[(3, 12, 3), float64] */, dtype="uint64") /* ty=Tensor[(3, 12, 3), uint64] */;
    %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %374 = add(%372, %373) /* ty=Tensor[(3, 12, 3), uint64] */;
    (%374,)
  };
  %375() /* ty=(Tensor[(3, 12, 3), uint64],) */
}

def @func_12968() -> (int64, Tensor[(10, 10, 7), int64]) {
  %376 = @func_11793() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %377 = @func_6707() /* ty=int64 */;
  %378 = %376.0;
  (%377, %378)
}

def @func_14729() -> Tensor[(10, 10, 7), int64] {
  @func_14117() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_8500(%var_8498: Tensor[(2002), uint16]) -> (int64, Tensor[(13, 11, 14), float32], Tensor[(2002), float32]) {
  @func_8497(%var_8498) /* ty=(int64, Tensor[(13, 11, 14), float32], Tensor[(2002), float32]) */
}

def @func_8869() -> Tensor[(13, 2, 4), float64] {
  %379 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %380 = %379.0;
  %381 = cast(%380, dtype="float64") /* ty=Tensor[(13, 2, 4), float64] */;
  log2(%381) /* ty=Tensor[(13, 2, 4), float64] */
}

def @func_9516() -> Tensor[(10, 10, 7), int64] {
  %383 = fn () -> Tensor[(10, 10, 7), int64] {
    %382 = @func_9128() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %382.0
  };
  %383() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_9805(%var_9802: Tensor[(36), uint32], %var_9803: Tensor[(180), uint8], %var_9804: Tensor[(700), int64]) -> (int64, int64, Tensor[(1, 4, 9), uint32], Tensor[(36), uint32], Tensor[(2, 8, 8), uint8], Tensor[(1, 128), float64], int64, Tensor[(10, 10, 7), float32], Tensor[(180), uint8], Tensor[(1024), float64], Tensor[(700), int64]) {
  @func_9800(%var_9802, %var_9803, %var_9804) /* ty=(int64, int64, Tensor[(1, 4, 9), uint32], Tensor[(36), uint32], Tensor[(2, 8, 8), uint8], Tensor[(1, 128), float64], int64, Tensor[(10, 10, 7), float32], Tensor[(180), uint8], Tensor[(1024), float64], Tensor[(700), int64]) */
}

def @func_12218(%var_12216: Tensor[(8, 7, 12), float64], %var_12217: Tensor[(8, 7, 12), float64]) -> Tensor[(8, 7, 12), float64] {
  %388 = fn (%var_12210: Tensor[(8, 7, 12), float64], %var_12211: Tensor[(8, 7, 12), float64]) -> Tensor[(8, 7, 12), float64] {
    %384 = cast(%var_12211, dtype="float64") /* ty=Tensor[(8, 7, 12), float64] */;
    %385 = shape_of(%var_12210, dtype="int32") /* ty=Tensor[(3), int32] */;
    %386 = cast(%var_12210, dtype="float64") /* ty=Tensor[(8, 7, 12), float64] */;
    %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%386, %387) /* ty=Tensor[(8, 7, 12), float64] */
  };
  %388(%var_12216, %var_12217) /* ty=Tensor[(8, 7, 12), float64] */
}

def @func_14321(%var_14289: Tensor[(13, 3, 7), int32]) -> (Tensor[(13, 3, 7), bool], Tensor[(1, 4, 9), uint32], Tensor[(36), uint32], Tensor[(10, 10, 7), int64]) {
  %389 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 3, 7), int32] */, dtype="bool") /* ty=Tensor[(13, 3, 7), bool] */;
  %390 = shape_of(%var_14289, dtype="int32") /* ty=Tensor[(3), int32] */;
  %391 = cast(%var_14289, dtype="bool") /* ty=Tensor[(13, 3, 7), bool] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %393 = cast(meta[relay.Constant][20] /* ty=Tensor[(36), uint32] */, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %394 = reshape(%393, newshape=[1, 4, 9]) /* ty=Tensor[(1, 4, 9), uint32] */;
  %395 = @func_4840(%394) /* ty=(Tensor[(1, 4, 9), uint32],) */;
  %396 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
  %397 = less_equal(%391, %392) /* ty=Tensor[(13, 3, 7), bool] */;
  %398 = %395.0;
  %399 = %396.1;
  (%397, %398, meta[relay.Constant][20] /* ty=Tensor[(36), uint32] */, %399)
}

def @func_9575() -> (int64,) {
  %400 = @func_6707() /* ty=int64 */;
  (%400,)
}

def @func_11168(%var_11165: Tensor[(1, 14, 9), float64], %var_11166: Tensor[(2, 512), float64], %var_11167: Tensor[(1694), float64]) -> (Tensor[(1, 14, 9), float64], int64, Tensor[(10, 10, 7), int64], Tensor[(12, 14, 8), float32], Tensor[(2, 512), float64], Tensor[(1694), float64]) {
  @func_11163(%var_11165, %var_11166, %var_11167) /* ty=(Tensor[(1, 14, 9), float64], int64, Tensor[(10, 10, 7), int64], Tensor[(12, 14, 8), float32], Tensor[(2, 512), float64], Tensor[(1694), float64]) */
}

def @func_11457() -> int64 {
  %402 = fn () -> int64 {
    %401 = @func_9552() /* ty=(int64,) */;
    %401.0
  };
  %402() /* ty=int64 */
}

def @func_15457() -> (Tensor[(10, 10, 7), int64], int64, Tensor[(10, 10, 7), uint32], int64) {
  %413 = fn () -> (Tensor[(10, 10, 7), int64], int64, Tensor[(10, 10, 7), uint32], int64) {
    %403 = @func_8545() /* ty=Tensor[(10, 10, 7), int64] */;
    %404 = cast(meta[relay.Constant][21] /* ty=Tensor[(10, 10, 7), int64] */, dtype="uint32") /* ty=Tensor[(10, 10, 7), uint32] */;
    %405 = shape_of(%403, dtype="int32") /* ty=Tensor[(3), int32] */;
    %406 = cast(%403, dtype="uint32") /* ty=Tensor[(10, 10, 7), uint32] */;
    %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %408 = @func_13202() /* ty=(int64, int64, Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16]) */;
    %409 = @func_6558() /* ty=Tensor[(10, 10, 7), int64] */;
    %410 = @func_11456() /* ty=int64 */;
    %411 = left_shift(%406, %407) /* ty=Tensor[(10, 10, 7), uint32] */;
    %412 = %408.1;
    (%409, %410, %411, %412)
  };
  %413() /* ty=(Tensor[(10, 10, 7), int64], int64, Tensor[(10, 10, 7), uint32], int64) */
}

def @func_9552() -> (int64,) {
  %414 = @func_9054() /* ty=(int64,) */;
  %415 = %414.0;
  (%415,)
}

def @func_6558() -> Tensor[(10, 10, 7), int64] {
  %416 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %416.0
}

def @func_15143() -> (Tensor[(2, 3, 14), float32], Tensor[(975), float32]) {
  %417 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 3, 14), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 14), float32] */;
  %418 = sqrt(%417) /* ty=Tensor[(2, 3, 14), float32] */;
  %419 = @func_11857() /* ty=Tensor[(975), float32] */;
  (%418, %419)
}

def @func_15231() -> (Tensor[(10, 10, 7), int64],) {
  %420 = @func_8781() /* ty=Tensor[(10, 10, 7), int64] */;
  (%420,)
}

def @func_11692(%var_11637: Tensor[(7, 7, 15), int64], %var_11638: Tensor[(7, 7, 15), int64], %var_11674: Tensor[(168), uint8]) -> (int64, Tensor[(7, 7, 15), bool], Tensor[(10, 10, 7), int64], int64, Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(10, 10, 7), int64], Tensor[(84, 1), int8]) {
  %421 = cast(%var_11638, dtype="bool") /* ty=Tensor[(7, 7, 15), bool] */;
  %422 = shape_of(%var_11637, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%var_11637, dtype="bool") /* ty=Tensor[(7, 7, 15), bool] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %425 = equal(%423, %424) /* ty=Tensor[(7, 7, 15), bool] */;
  %426 = cast(%425, dtype="float32") /* ty=Tensor[(7, 7, 15), float32] */;
  %427 = cos(%426) /* ty=Tensor[(7, 7, 15), float32] */;
  %428 = cast(%var_11637, dtype="bool") /* ty=Tensor[(7, 7, 15), bool] */;
  %429 = shape_of(%427, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(%427, dtype="bool") /* ty=Tensor[(7, 7, 15), bool] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %432 = @func_9356() /* ty=(int64, Tensor[(975), float32], int64) */;
  %433 = cast(%var_11674, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %434 = reshape(%433, newshape=[168]) /* ty=Tensor[(168), uint8] */;
  %435 = @func_6392(%434) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(12, 7, 2), bool]) */;
  %436 = cast(meta[relay.Constant][23] /* ty=Tensor[(84, 1), int8] */, dtype="int8") /* ty=Tensor[(84, 1), int8] */;
  %437 = reshape(%436, newshape=[3, 28]) /* ty=Tensor[(3, 28), int8] */;
  %438 = @func_8914(%437) /* ty=(Tensor[(975), float32], Tensor[(10, 10, 7), int64], Tensor[(3, 28), int8]) */;
  %439 = @func_11456() /* ty=int64 */;
  %440 = logical_or(%430, %431) /* ty=Tensor[(7, 7, 15), bool] */;
  %441 = @func_8781() /* ty=Tensor[(10, 10, 7), int64] */;
  %442 = %432.0;
  %443 = %435.1;
  %444 = %438.1;
  (%439, %440, %441, %442, %443, %var_11674, %444, meta[relay.Constant][23] /* ty=Tensor[(84, 1), int8] */)
}

def @func_15403(%var_15401: Tensor[(16, 5, 16), float32]) -> (Tensor[(16, 5, 16), float32], Tensor[(16, 5, 16), float64], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) {
  @func_15400(%var_15401) /* ty=(Tensor[(16, 5, 16), float32], Tensor[(16, 5, 16), float64], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */
}

def @func_8014() -> (Tensor[(975), float32],) {
  %445 = @func_6884() /* ty=(Tensor[(9, 14, 15), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %446 = %445.2;
  (%446,)
}

def @func_14583(%var_14581: bool, %var_14582: Tensor[(16, 14, 15), bool]) -> Tensor[(16, 14, 15), bool] {
  @func_14579(%var_14581, %var_14582) /* ty=Tensor[(16, 14, 15), bool] */
}

def @func_10932() -> (Tensor[(975), float32], Tensor[(13, 2, 4), float64]) {
  @func_10930() /* ty=(Tensor[(975), float32], Tensor[(13, 2, 4), float64]) */
}

def @func_15350() -> (Tensor[(10, 10, 7), int64],) {
  %447 = @func_11835() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(975), uint32]) */;
  %448 = %447.0;
  (%448,)
}

def @func_13086(%var_13082: Tensor[(84), int8], %var_13083: Tensor[(512, 2), float64], %var_13084: Tensor[(180), uint8], %var_13085: Tensor[(512, 2), float32]) -> (Tensor[(15, 5, 13), float32], Tensor[(10, 10, 7), int64], Tensor[(975), float32], Tensor[(1694), float64], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(11, 154), float64], Tensor[(1024), float64], Tensor[(180), uint8], Tensor[(512, 2), bool], Tensor[(10, 10, 7), int64], Tensor[(512, 2), uint32], int64, Tensor[(2, 8, 8), uint8], Tensor[(128), float64], Tensor[(10, 10, 7), int64], Tensor[(3, 6, 10), float64]) {
  %498 = fn (%var_13020: Tensor[(84), int8], %var_13022: Tensor[(512, 2), float64], %var_13040: Tensor[(180), uint8], %var_13060: Tensor[(512, 2), float32]) -> (Tensor[(15, 5, 13), float32], Tensor[(10, 10, 7), int64], Tensor[(975), float32], Tensor[(1694), float64], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(11, 154), float64], Tensor[(1024), float64], Tensor[(180), uint8], Tensor[(512, 2), bool], Tensor[(10, 10, 7), int64], Tensor[(512, 2), uint32], int64, Tensor[(2, 8, 8), uint8], Tensor[(128), float64], Tensor[(10, 10, 7), int64], Tensor[(3, 6, 10), float64]) {
    %449 = @func_9128() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %450 = @func_10930() /* ty=(Tensor[(975), float32], Tensor[(13, 2, 4), float64]) */;
    %451 = cast(meta[relay.Constant][24] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
    %452 = cast(%var_13020, dtype="int8") /* ty=Tensor[(84), int8] */;
    %453 = cast(meta[relay.Constant][25] /* ty=Tensor[(11, 154), float64] */, dtype="float64") /* ty=Tensor[(11, 154), float64] */;
    %454 = cast(%var_13022, dtype="float64") /* ty=Tensor[(512, 2), float64] */;
    %455 = reshape(%451, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), float32] */;
    %456 = reshape(%452, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %457 = reshape(%453, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
    %458 = reshape(%454, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
    %459 = @func_5524(%455, %456, %457, %458) /* ty=(Tensor[(12, 14, 8), float32], Tensor[(15, 5, 13), float32], Tensor[(325, 3), float32], Tensor[(12, 14, 8), float32], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(12, 7, 2), uint8], Tensor[(1, 168), uint8], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) */;
    %460 = cast(%var_13040, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %461 = reshape(%460, newshape=[30, 6]) /* ty=Tensor[(30, 6), uint8] */;
    %462 = @func_6476(%461) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(11, 3, 1), float64], Tensor[(1, 33), float64], Tensor[(4, 16, 16), float64], Tensor[(30, 6), uint8], Tensor[(1024), float64]) */;
    %463 = cast(%var_13022, dtype="float64") /* ty=Tensor[(512, 2), float64] */;
    %464 = acos(%463) /* ty=Tensor[(512, 2), float64] */;
    %465 = cast(%var_13022, dtype="bool") /* ty=Tensor[(512, 2), bool] */;
    %466 = shape_of(%464, dtype="int32") /* ty=Tensor[(2), int32] */;
    %467 = cast(%464, dtype="bool") /* ty=Tensor[(512, 2), bool] */;
    %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %469 = @func_8800() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %470 = cast(%464, dtype="float32") /* ty=Tensor[(512, 2), float32] */;
    %471 = sin(%470) /* ty=Tensor[(512, 2), float32] */;
    %472 = cast(%var_13060, dtype="uint32") /* ty=Tensor[(512, 2), uint32] */;
    %473 = shape_of(%471, dtype="int32") /* ty=Tensor[(2), int32] */;
    %474 = cast(%471, dtype="uint32") /* ty=Tensor[(512, 2), uint32] */;
    %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %476 = @func_11233() /* ty=(int64, int64) */;
    %477 = cast(meta[relay.Constant][26] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
    %478 = reshape(%477, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), float64] */;
    %479 = @func_4288(%478) /* ty=(Tensor[(2, 8, 8), uint8],) */;
    %480 = %476.0;
    %481 = cast(%480, dtype="int64") /* ty=int64 */;
    %482 = reshape(%481, newshape=[]) /* ty=int64 */;
    %483 = @func_543(%482) /* ty=(Tensor[(10, 10, 7), int64],) */;
    %484 = cast(%var_13040, dtype="float64") /* ty=Tensor[(180), float64] */;
    %485 = reshape(%484, newshape=[3, 6, 10]) /* ty=Tensor[(3, 6, 10), float64] */;
    %486 = @func_12564(%485) /* ty=(Tensor[(3, 6, 10), float64],) */;
    %487 = @func_11133() /* ty=Tensor[(15, 5, 13), float32] */;
    %488 = %449.0;
    %489 = %450.0;
    %490 = %459.6;
    %491 = %462.5;
    %492 = greater(%467, %468) /* ty=Tensor[(512, 2), bool] */;
    %493 = %469.0;
    %494 = subtract(%474, %475) /* ty=Tensor[(512, 2), uint32] */;
    %495 = %479.0;
    %496 = %483.0;
    %497 = %486.0;
    (%487, %488, %489, %490, meta[relay.Constant][24] /* ty=Tensor[(1344), float32] */, %var_13020, meta[relay.Constant][25] /* ty=Tensor[(11, 154), float64] */, %491, %var_13040, %492, %493, %494, %480, %495, meta[relay.Constant][26] /* ty=Tensor[(128), float64] */, %496, %497)
  };
  %498(%var_13082, %var_13083, %var_13084, %var_13085) /* ty=(Tensor[(15, 5, 13), float32], Tensor[(10, 10, 7), int64], Tensor[(975), float32], Tensor[(1694), float64], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(11, 154), float64], Tensor[(1024), float64], Tensor[(180), uint8], Tensor[(512, 2), bool], Tensor[(10, 10, 7), int64], Tensor[(512, 2), uint32], int64, Tensor[(2, 8, 8), uint8], Tensor[(128), float64], Tensor[(10, 10, 7), int64], Tensor[(3, 6, 10), float64]) */
}

def @func_8571(%var_8569: Tensor[(2002), uint16]) -> (int64, Tensor[(2002), float32], Tensor[(2002), uint16], Tensor[(12, 7, 2), uint8], Tensor[(168), uint8]) {
  @func_8568(%var_8569) /* ty=(int64, Tensor[(2002), float32], Tensor[(2002), uint16], Tensor[(12, 7, 2), uint8], Tensor[(168), uint8]) */
}

def @func_16321() -> Tensor[(10, 10, 7), int64] {
  %500 = fn () -> Tensor[(10, 10, 7), int64] {
    %499 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %499.0
  };
  %500() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_10107() -> (Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(3, 28), int8], Tensor[(1, 4, 9), uint32], Tensor[(36), uint32]) {
  %511 = fn () -> (Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(3, 28), int8], Tensor[(1, 4, 9), uint32], Tensor[(36), uint32]) {
    %501 = @func_7391() /* ty=(int64, Tensor[(10, 10, 7), int64]) */;
    %502 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 28), int8] */, dtype="int8") /* ty=Tensor[(3, 28), int8] */;
    %503 = reshape(%502, newshape=[1, 84]) /* ty=Tensor[(1, 84), int8] */;
    %504 = @func_8280(%503) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1, 84), int8]) */;
    %505 = cast(meta[relay.Constant][28] /* ty=Tensor[(36), uint32] */, dtype="uint32") /* ty=Tensor[(36), uint32] */;
    %506 = reshape(%505, newshape=[1, 4, 9]) /* ty=Tensor[(1, 4, 9), uint32] */;
    %507 = @func_4840(%506) /* ty=(Tensor[(1, 4, 9), uint32],) */;
    %508 = %501.1;
    %509 = %504.0;
    %510 = %507.0;
    (%508, %509, meta[relay.Constant][27] /* ty=Tensor[(3, 28), int8] */, %510, meta[relay.Constant][28] /* ty=Tensor[(36), uint32] */)
  };
  %511() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(3, 28), int8], Tensor[(1, 4, 9), uint32], Tensor[(36), uint32]) */
}

def @func_2451(%var_2449: Tensor[(13, 11, 14), uint16]) -> (Tensor[(13, 11, 14), float32],) {
  @func_2448(%var_2449) /* ty=(Tensor[(13, 11, 14), float32],) */
}

def @func_8136() -> (Tensor[(15, 5, 13), float32],) {
  %512 = @func_7553() /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %513 = %512.2;
  (%513,)
}

def @func_15772() -> (int64,) {
  @func_15770() /* ty=(int64,) */
}

def @func_14864() -> (Tensor[(8, 2, 8), float32], Tensor[(8, 2, 8), float64]) {
  %514 = @func_13202() /* ty=(int64, int64, Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16]) */;
  %515 = %514.3;
  %516 = cast(%515, dtype="float32") /* ty=Tensor[(8, 2, 8), float32] */;
  %517 = cast(%515, dtype="float64") /* ty=Tensor[(8, 2, 8), float64] */;
  %518 = sqrt(%516) /* ty=Tensor[(8, 2, 8), float32] */;
  %519 = acos(%517) /* ty=Tensor[(8, 2, 8), float64] */;
  (%518, %519)
}

def @func_6395(%var_6393: Tensor[(168), uint8]) -> (Tensor[(10, 10, 7), int64], Tensor[(12, 7, 2), bool]) {
  @func_6392(%var_6393) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(12, 7, 2), bool]) */
}

def @func_7555() -> (Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) {
  @func_7553() /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */
}

def @func_6627(%var_6625: Tensor[(168), uint8], %var_6626: Tensor[(128), int16]) -> (Tensor[(10, 10, 7), int64], Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(128), int16], Tensor[(8, 2, 8), float32], Tensor[(13, 2, 4), float64]) {
  %534 = fn (%var_6584: Tensor[(168), uint8], %var_6600: Tensor[(128), int16]) -> (Tensor[(10, 10, 7), int64], Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(128), int16], Tensor[(8, 2, 8), float32], Tensor[(13, 2, 4), float64]) {
    %520 = cast(%var_6584, dtype="uint8") /* ty=Tensor[(168), uint8] */;
    %521 = reshape(%520, newshape=[168]) /* ty=Tensor[(168), uint8] */;
    %522 = @func_6392(%521) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(12, 7, 2), bool]) */;
    %523 = cast(%var_6600, dtype="int16") /* ty=Tensor[(128), int16] */;
    %524 = cast(%var_6600, dtype="int16") /* ty=Tensor[(128), int16] */;
    %525 = reshape(%523, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), int16] */;
    %526 = reshape(%524, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), int16] */;
    %527 = @func_2205(%525, %526) /* ty=Tensor[(8, 2, 8), int16] */;
    %528 = cast(%527, dtype="float32") /* ty=Tensor[(8, 2, 8), float32] */;
    %529 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
    %530 = @func_6558() /* ty=Tensor[(10, 10, 7), int64] */;
    %531 = %522.1;
    %532 = sinh(%528) /* ty=Tensor[(8, 2, 8), float32] */;
    %533 = %529.0;
    (%530, %531, %var_6584, %var_6600, %532, %533)
  };
  %534(%var_6625, %var_6626) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(128), int16], Tensor[(8, 2, 8), float32], Tensor[(13, 2, 4), float64]) */
}

def @func_7089() -> (int64,) {
  %536 = fn () -> (int64,) {
    %535 = @func_6845() /* ty=int64 */;
    (%535,)
  };
  %536() /* ty=(int64,) */
}

def @func_9129() -> (Tensor[(10, 10, 7), int64],) {
  %539 = fn () -> (Tensor[(10, 10, 7), int64],) {
    %537 = @func_8800() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %538 = %537.0;
    (%538,)
  };
  %539() /* ty=(Tensor[(10, 10, 7), int64],) */
}

def @func_6751() -> int64 {
  %540 = @func_6528() /* ty=(int64,) */;
  %540.0
}

def @func_10888() -> Tensor[(10, 10, 7), int64] {
  %542 = fn () -> Tensor[(10, 10, 7), int64] {
    %541 = @func_6903() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %541.0
  };
  %542() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_11606() -> (Tensor[(10, 10, 7), int64], Tensor[(3, 12, 3), int16], Tensor[(108), uint64]) {
  %543 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %544 = cast(meta[relay.Constant][29] /* ty=Tensor[(108), uint64] */, dtype="uint64") /* ty=Tensor[(108), uint64] */;
  %545 = reshape(%544, newshape=[3, 12, 3]) /* ty=Tensor[(3, 12, 3), uint64] */;
  %546 = @func_9095(%545) /* ty=(Tensor[(3, 12, 3), int16],) */;
  %547 = %543.0;
  %548 = %546.0;
  (%547, %548, meta[relay.Constant][29] /* ty=Tensor[(108), uint64] */)
}

def @func_13673() -> (Tensor[(975), float32],) {
  %551 = fn () -> (Tensor[(975), float32],) {
    %549 = @func_12521() /* ty=(Tensor[(975), float32],) */;
    %550 = %549.0;
    (%550,)
  };
  %551() /* ty=(Tensor[(975), float32],) */
}

def @func_2208(%var_2206: Tensor[(8, 2, 8), int16], %var_2207: Tensor[(8, 2, 8), int16]) -> Tensor[(8, 2, 8), int16] {
  %556 = fn (%var_2188: Tensor[(8, 2, 8), int16], %var_2189: Tensor[(8, 2, 8), int16]) -> Tensor[(8, 2, 8), int16] {
    %552 = cast(%var_2189, dtype="int16") /* ty=Tensor[(8, 2, 8), int16] */;
    %553 = shape_of(%var_2188, dtype="int32") /* ty=Tensor[(3), int32] */;
    %554 = cast(%var_2188, dtype="int16") /* ty=Tensor[(8, 2, 8), int16] */;
    %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_or(%554, %555) /* ty=Tensor[(8, 2, 8), int16] */
  };
  %556(%var_2206, %var_2207) /* ty=Tensor[(8, 2, 8), int16] */
}

def @func_15732(%var_15729: Tensor[(1694), float64], %var_15730: Tensor[(168), bool], %var_15731: int64) -> (Tensor[(10, 10, 7), int64], int64, Tensor[(42, 2), int8], Tensor[(1694), float64], Tensor[(168), bool], int64, Tensor[(294), float32], int64) {
  @func_15727(%var_15729, %var_15730, %var_15731) /* ty=(Tensor[(10, 10, 7), int64], int64, Tensor[(42, 2), int8], Tensor[(1694), float64], Tensor[(168), bool], int64, Tensor[(294), float32], int64) */
}

def @func_8782() -> Tensor[(10, 10, 7), int64] {
  %558 = fn () -> Tensor[(10, 10, 7), int64] {
    %557 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %557.0
  };
  %558() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_9318(%var_9316: Tensor[(33), float64], %var_9317: Tensor[(180), uint8]) -> (int64, Tensor[(10, 10, 7), int64], Tensor[(11, 3, 1), float64], Tensor[(33), float64], Tensor[(10, 10, 7), int64], Tensor[(180), uint8]) {
  @func_9314(%var_9316, %var_9317) /* ty=(int64, Tensor[(10, 10, 7), int64], Tensor[(11, 3, 1), float64], Tensor[(33), float64], Tensor[(10, 10, 7), int64], Tensor[(180), uint8]) */
}

def @func_15400(%var_15383: Tensor[(16, 5, 16), float32]) -> (Tensor[(16, 5, 16), float32], Tensor[(16, 5, 16), float64], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) {
  %559 = cast(%var_15383, dtype="float32") /* ty=Tensor[(16, 5, 16), float32] */;
  %560 = cast(%var_15383, dtype="float32") /* ty=Tensor[(16, 5, 16), float32] */;
  %561 = log10(%560) /* ty=Tensor[(16, 5, 16), float32] */;
  %562 = cast(%561, dtype="float64") /* ty=Tensor[(16, 5, 16), float64] */;
  %563 = shape_of(%var_15383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%var_15383, dtype="float64") /* ty=Tensor[(16, 5, 16), float64] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %566 = cast(meta[relay.Constant][30] /* ty=Tensor[(975), float32] */, dtype="float32") /* ty=Tensor[(975), float32] */;
  %567 = reshape(%566, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float32] */;
  %568 = @func_2112(%567) /* ty=(Tensor[(15, 5, 13), float32],) */;
  %569 = atan(%559) /* ty=Tensor[(16, 5, 16), float32] */;
  %570 = divide(%564, %565) /* ty=Tensor[(16, 5, 16), float64] */;
  %571 = %568.0;
  (%569, %570, %571, meta[relay.Constant][30] /* ty=Tensor[(975), float32] */)
}

def @func_13792() -> (Tensor[(10, 10, 7), int64], int64, Tensor[(10, 10, 7), int64]) {
  %572 = @func_8732() /* ty=(Tensor[(10, 10, 7), int64], int64) */;
  %573 = @func_7391() /* ty=(int64, Tensor[(10, 10, 7), int64]) */;
  %574 = %572.0;
  %575 = %573.0;
  %576 = @func_6558() /* ty=Tensor[(10, 10, 7), int64] */;
  (%574, %575, %576)
}

def @func_13871() -> (Tensor[(13, 2, 4), float64],) {
  %579 = fn () -> (Tensor[(13, 2, 4), float64],) {
    %577 = @func_10930() /* ty=(Tensor[(975), float32], Tensor[(13, 2, 4), float64]) */;
    %578 = %577.1;
    (%578,)
  };
  %579() /* ty=(Tensor[(13, 2, 4), float64],) */
}

def @func_9036() -> (int64,) {
  %582 = fn () -> (int64,) {
    %580 = @func_7391() /* ty=(int64, Tensor[(10, 10, 7), int64]) */;
    %581 = %580.0;
    (%581,)
  };
  %582() /* ty=(int64,) */
}

def @func_9498(%var_9496: Tensor[(84), int8], %var_9497: Tensor[(1694), float64]) -> (int64, Tensor[(12, 7, 12), bool], Tensor[(84), int8], Tensor[(1694), float64]) {
  @func_9494(%var_9496, %var_9497) /* ty=(int64, Tensor[(12, 7, 12), bool], Tensor[(84), int8], Tensor[(1694), float64]) */
}

def @func_15174() -> (Tensor[(10, 10, 7), int64], int64) {
  %586 = fn () -> (Tensor[(10, 10, 7), int64], int64) {
    %583 = @func_9356() /* ty=(int64, Tensor[(975), float32], int64) */;
    %584 = @func_10887() /* ty=Tensor[(10, 10, 7), int64] */;
    %585 = %583.0;
    (%584, %585)
  };
  %586() /* ty=(Tensor[(10, 10, 7), int64], int64) */
}

def @func_6753() -> int64 {
  @func_6751() /* ty=int64 */
}

def @func_15034(%var_15033: Tensor[(975), float32]) -> (Tensor[(975), float64],) {
  %594 = fn (%var_15023: Tensor[(975), float32]) -> (Tensor[(975), float64],) {
    %587 = @func_8014() /* ty=(Tensor[(975), float32],) */;
    %588 = %587.0;
    %589 = cast(%var_15023, dtype="float64") /* ty=Tensor[(975), float64] */;
    %590 = shape_of(%588, dtype="int32") /* ty=Tensor[(1), int32] */;
    %591 = cast(%588, dtype="float64") /* ty=Tensor[(975), float64] */;
    %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?), float64] */;
    %593 = power(%591, %592) /* ty=Tensor[(975), float64] */;
    (%593,)
  };
  %594(%var_15033) /* ty=(Tensor[(975), float64],) */
}

def @func_11134() -> Tensor[(15, 5, 13), float32] {
  %596 = fn () -> Tensor[(15, 5, 13), float32] {
    %595 = @func_7553() /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
    %595.2
  };
  %596() /* ty=Tensor[(15, 5, 13), float32] */
}

def @func_7907() -> Tensor[(10, 10, 7), int64] {
  %598 = fn () -> Tensor[(10, 10, 7), int64] {
    %597 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
    %597.1
  };
  %598() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_8203() -> (Tensor[(10, 10, 7), int64],) {
  %600 = fn () -> (Tensor[(10, 10, 7), int64],) {
    %599 = @func_6558() /* ty=Tensor[(10, 10, 7), int64] */;
    (%599,)
  };
  %600() /* ty=(Tensor[(10, 10, 7), int64],) */
}

def @func_16459() -> (Tensor[(10, 10, 7), int64], int64, Tensor[(10, 10, 7), int64]) {
  %601 = @func_15683() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %602 = @func_6903() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %603 = %601.0;
  %604 = @func_14105() /* ty=int64 */;
  %605 = %602.0;
  (%603, %604, %605)
}

def @func_16461() -> (Tensor[(10, 10, 7), int64], int64, Tensor[(10, 10, 7), int64]) {
  @func_16459() /* ty=(Tensor[(10, 10, 7), int64], int64, Tensor[(10, 10, 7), int64]) */
}

def @func_15123(%var_15113: Tensor[(84), int8]) -> (Tensor[(10, 10, 7), int64], int64, Tensor[(975), float32], Tensor[(84), int8], Tensor[(1, 294), float32], Tensor[(10, 10, 7), int64]) {
  %606 = @func_9552() /* ty=(int64,) */;
  %607 = @func_14536() /* ty=(Tensor[(975), float32],) */;
  %608 = cast(%var_15113, dtype="int8") /* ty=Tensor[(84), int8] */;
  %609 = reshape(%608, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %610 = @func_5945(%609) /* ty=(Tensor[(5, 5, 10), bool], Tensor[(84), int8], Tensor[(1, 294), float64], Tensor[(84), int8], Tensor[(847, 2), float64]) */;
  %611 = %610.2;
  %612 = cast(%611, dtype="float32") /* ty=Tensor[(1, 294), float32] */;
  %613 = @func_8732() /* ty=(Tensor[(10, 10, 7), int64], int64) */;
  %614 = @func_11448() /* ty=Tensor[(10, 10, 7), int64] */;
  %615 = %606.0;
  %616 = %607.0;
  %617 = asinh(%612) /* ty=Tensor[(1, 294), float32] */;
  %618 = %613.0;
  (%614, %615, %616, %var_15113, %617, %618)
}

def @func_6822(%var_6785: Tensor[(1694), float64]) -> (int64, Tensor[(10, 10, 7), int64], Tensor[(294), float64], Tensor[(84), int8], Tensor[(1694), float64]) {
  %619 = @func_6528() /* ty=(int64,) */;
  %620 = cast(meta[relay.Constant][31] /* ty=Tensor[(294), float64] */, dtype="float64") /* ty=Tensor[(294), float64] */;
  %621 = cast(meta[relay.Constant][32] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %622 = cast(%var_6785, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %623 = reshape(%620, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float64] */;
  %624 = reshape(%621, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %625 = reshape(%622, newshape=[847, 2]) /* ty=Tensor[(847, 2), float64] */;
  %626 = @func_5104(%623, %624, %625) /* ty=(Tensor[(14, 3, 7), float64], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(847, 2), float64]) */;
  %627 = %619.0;
  %628 = %626.1;
  (%627, %628, meta[relay.Constant][31] /* ty=Tensor[(294), float64] */, meta[relay.Constant][32] /* ty=Tensor[(84), int8] */, %var_6785)
}

def @func_8979(%var_8976: Tensor[(84), int8], %var_8977: Tensor[(168), bool], %var_8978: int64) -> (Tensor[(10, 10, 7), float32], Tensor[(84), int8], Tensor[(294, 1), float64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(168), bool], int64) {
  %644 = fn (%var_8956: Tensor[(84), int8], %var_8958: Tensor[(168), bool], %var_8959: int64) -> (Tensor[(10, 10, 7), float32], Tensor[(84), int8], Tensor[(294, 1), float64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(168), bool], int64) {
    %629 = @func_6558() /* ty=Tensor[(10, 10, 7), int64] */;
    %630 = cast(%629, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
    %631 = cast(meta[relay.Constant][33] /* ty=Tensor[(294, 1), float64] */, dtype="float64") /* ty=Tensor[(294, 1), float64] */;
    %632 = cast(%var_8956, dtype="int8") /* ty=Tensor[(84), int8] */;
    %633 = cast(meta[relay.Constant][34] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %634 = cast(%var_8958, dtype="bool") /* ty=Tensor[(168), bool] */;
    %635 = cast(%var_8959, dtype="int64") /* ty=int64 */;
    %636 = reshape(%631, newshape=[7, 42]) /* ty=Tensor[(7, 42), float64] */;
    %637 = reshape(%632, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %638 = reshape(%633, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
    %639 = reshape(%634, newshape=[3, 56]) /* ty=Tensor[(3, 56), bool] */;
    %640 = reshape(%635, newshape=[]) /* ty=int64 */;
    %641 = @func_7653(%636, %637, %638, %639, %640) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(847, 2), float64], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(3, 56), int64], Tensor[(10, 10, 7), int64], Tensor[(33), float64], int64) */;
    %642 = log(%630) /* ty=Tensor[(10, 10, 7), float32] */;
    %643 = %641.3;
    (%642, %643, meta[relay.Constant][33] /* ty=Tensor[(294, 1), float64] */, %var_8956, meta[relay.Constant][34] /* ty=Tensor[(1694), float64] */, %var_8958, %var_8959)
  };
  %644(%var_8976, %var_8977, %var_8978) /* ty=(Tensor[(10, 10, 7), float32], Tensor[(84), int8], Tensor[(294, 1), float64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(168), bool], int64) */
}

def @func_11117() -> (Tensor[(975), float32], int64, Tensor[(84), int8]) {
  %645 = @func_8014() /* ty=(Tensor[(975), float32],) */;
  %646 = @func_9035() /* ty=(int64,) */;
  %647 = @func_10254() /* ty=(Tensor[(975), float32], Tensor[(1, 294), float64], Tensor[(84), int8]) */;
  %648 = %645.0;
  %649 = %646.0;
  %650 = %647.2;
  (%648, %649, %650)
}

def @func_8622() -> int64 {
  @func_6751() /* ty=int64 */
}

def @func_12523() -> (Tensor[(975), float32],) {
  @func_12521() /* ty=(Tensor[(975), float32],) */
}

def @func_14196() -> Tensor[(10, 10, 7), int64] {
  @func_11448() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_14866() -> (Tensor[(8, 2, 8), float32], Tensor[(8, 2, 8), float64]) {
  @func_14864() /* ty=(Tensor[(8, 2, 8), float32], Tensor[(8, 2, 8), float64]) */
}

def @func_5529(%var_5525: Tensor[(12, 14, 8), float32], %var_5526: Tensor[(84), int8], %var_5527: Tensor[(1694), float64], %var_5528: Tensor[(1024), float64]) -> (Tensor[(12, 14, 8), float32], Tensor[(15, 5, 13), float32], Tensor[(325, 3), float32], Tensor[(12, 14, 8), float32], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(12, 7, 2), uint8], Tensor[(1, 168), uint8], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) {
  %676 = fn (%var_5473: Tensor[(12, 14, 8), float32], %var_5485: Tensor[(84), int8], %var_5486: Tensor[(1694), float64], %var_5522: Tensor[(1024), float64]) -> (Tensor[(12, 14, 8), float32], Tensor[(15, 5, 13), float32], Tensor[(325, 3), float32], Tensor[(12, 14, 8), float32], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(12, 7, 2), uint8], Tensor[(1, 168), uint8], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) {
    %651 = cast(%var_5473, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
    %652 = cast(meta[relay.Constant][35] /* ty=Tensor[(325, 3), float32] */, dtype="float32") /* ty=Tensor[(325, 3), float32] */;
    %653 = reshape(%652, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float32] */;
    %654 = @func_2112(%653) /* ty=(Tensor[(15, 5, 13), float32],) */;
    %655 = cast(%var_5473, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
    %656 = cast(%var_5485, dtype="int8") /* ty=Tensor[(84), int8] */;
    %657 = cast(%var_5486, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %658 = reshape(%656, newshape=[1, 7, 12]) /* ty=Tensor[(1, 7, 12), int8] */;
    %659 = reshape(%657, newshape=[11, 154]) /* ty=Tensor[(11, 154), float64] */;
    %660 = @func_2403(%658, %659) /* ty=(Tensor[(12, 7, 12), int8], Tensor[(11, 154), float64], int64, Tensor[(12, 7, 12), bool], Tensor[(10, 10, 7), int64]) */;
    %661 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 168), uint8] */, dtype="uint8") /* ty=Tensor[(1, 168), uint8] */;
    %662 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 168), uint8] */, dtype="uint8") /* ty=Tensor[(1, 168), uint8] */;
    %663 = reshape(%661, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
    %664 = reshape(%662, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
    %665 = cast(%var_5522, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %666 = cast(%var_5522, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %667 = reshape(%665, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
    %668 = reshape(%666, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
    %669 = @func_934(%667, %668) /* ty=(Tensor[(4, 16, 16), float64],) */;
    %670 = sinh(%651) /* ty=Tensor[(12, 14, 8), float32] */;
    %671 = %654.0;
    %672 = cos(%655) /* ty=Tensor[(12, 14, 8), float32] */;
    %673 = %660.4;
    %674 = @func_1575(%663, %664) /* ty=Tensor[(12, 7, 2), uint8] */;
    %675 = %669.0;
    (%670, %671, meta[relay.Constant][35] /* ty=Tensor[(325, 3), float32] */, %672, %673, %var_5485, %var_5486, %674, meta[relay.Constant][36] /* ty=Tensor[(1, 168), uint8] */, %675, %var_5522)
  };
  %676(%var_5525, %var_5526, %var_5527, %var_5528) /* ty=(Tensor[(12, 14, 8), float32], Tensor[(15, 5, 13), float32], Tensor[(325, 3), float32], Tensor[(12, 14, 8), float32], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(12, 7, 2), uint8], Tensor[(1, 168), uint8], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) */
}

def @func_15255(%var_15246: Tensor[(3, 3, 1), float64]) -> (Tensor[(3, 3, 1), float64],) {
  %677 = cast(%var_15246, dtype="float64") /* ty=Tensor[(3, 3, 1), float64] */;
  %678 = sinh(%677) /* ty=Tensor[(3, 3, 1), float64] */;
  (%678,)
}

def @func_10968(%var_10966: Tensor[(84, 1), int8]) -> (Tensor[(10, 10, 7), int64], Tensor[(847, 2), float64], Tensor[(294), float64], Tensor[(84, 1), int8], Tensor[(1694), float64]) {
  @func_10965(%var_10966) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(847, 2), float64], Tensor[(294), float64], Tensor[(84, 1), int8], Tensor[(1694), float64]) */
}

def @func_9577() -> (int64,) {
  @func_9575() /* ty=(int64,) */
}

def @func_14324(%var_14322: Tensor[(13, 3, 7), int32]) -> (Tensor[(13, 3, 7), bool], Tensor[(1, 4, 9), uint32], Tensor[(36), uint32], Tensor[(10, 10, 7), int64]) {
  @func_14321(%var_14322) /* ty=(Tensor[(13, 3, 7), bool], Tensor[(1, 4, 9), uint32], Tensor[(36), uint32], Tensor[(10, 10, 7), int64]) */
}

def @func_15684() -> (Tensor[(10, 10, 7), int64],) {
  %681 = fn () -> (Tensor[(10, 10, 7), int64],) {
    %679 = @func_13792() /* ty=(Tensor[(10, 10, 7), int64], int64, Tensor[(10, 10, 7), int64]) */;
    %680 = %679.2;
    (%680,)
  };
  %681() /* ty=(Tensor[(10, 10, 7), int64],) */
}

def @func_8547() -> Tensor[(10, 10, 7), int64] {
  @func_8545() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_8016() -> (Tensor[(975), float32],) {
  @func_8014() /* ty=(Tensor[(975), float32],) */
}

def @func_2403(%var_2333: Tensor[(1, 7, 12), int8], %var_2353: Tensor[(11, 154), float64]) -> (Tensor[(12, 7, 12), int8], Tensor[(11, 154), float64], int64, Tensor[(12, 7, 12), bool], Tensor[(10, 10, 7), int64]) {
  %682 = cast(%var_2333, dtype="int8") /* ty=Tensor[(1, 7, 12), int8] */;
  %683 = cast(meta[relay.Constant][37] /* ty=Tensor[(12, 7, 12), int8] */, dtype="int8") /* ty=Tensor[(12, 7, 12), int8] */;
  %684 = cast(%var_2353, dtype="float64") /* ty=Tensor[(11, 154), float64] */;
  %685 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %686 = reshape(%684, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float64] */;
  %687 = reshape(%685, newshape=[]) /* ty=int64 */;
  %688 = @func_1548(%686, %687) /* ty=(Tensor[(11, 11, 14), float64], Tensor[(10, 10, 7), int64], int64) */;
  %689 = %688.2;
  %690 = cast(meta[relay.Constant][37] /* ty=Tensor[(12, 7, 12), int8] */, dtype="bool") /* ty=Tensor[(12, 7, 12), bool] */;
  %691 = cast(%689, dtype="bool") /* ty=bool */;
  %692 = cast(%var_2353, dtype="float64") /* ty=Tensor[(11, 154), float64] */;
  %693 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %694 = reshape(%692, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float64] */;
  %695 = reshape(%693, newshape=[]) /* ty=int64 */;
  %696 = @func_1548(%694, %695) /* ty=(Tensor[(11, 11, 14), float64], Tensor[(10, 10, 7), int64], int64) */;
  %697 = logical_xor(%682, %683) /* ty=Tensor[(12, 7, 12), int8] */;
  %698 = logical_or(%690, %691) /* ty=Tensor[(12, 7, 12), bool] */;
  %699 = %696.1;
  (%697, %var_2353, -10 /* ty=int64 */, %698, %699)
}

def @func_11449() -> Tensor[(10, 10, 7), int64] {
  %700 = fn () -> Tensor[(10, 10, 7), int64] {
    @func_9820() /* ty=Tensor[(10, 10, 7), int64] */
  };
  %700() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_12521() -> (Tensor[(975), float32],) {
  %701 = @func_10354() /* ty=Tensor[(975), float32] */;
  (%701,)
}

def @func_16289() -> (Tensor[(10, 10, 7), int64],) {
  %703 = fn () -> (Tensor[(10, 10, 7), int64],) {
    %702 = @func_9515() /* ty=Tensor[(10, 10, 7), int64] */;
    (%702,)
  };
  %703() /* ty=(Tensor[(10, 10, 7), int64],) */
}

def @func_14268() -> int64 {
  %705 = fn () -> int64 {
    %704 = @func_9356() /* ty=(int64, Tensor[(975), float32], int64) */;
    %704.0
  };
  %705() /* ty=int64 */
}

def @func_14086(%var_14032: Tensor[(21, 4), int8], %var_14039: int32) -> (Tensor[(84), int8], Tensor[(21, 4), int8], Tensor[(700), int64], Tensor[(33), float64], int32, Tensor[(240), int32], Tensor[(33), float64], int64, Tensor[(735), int64], Tensor[(168), uint8], int64, Tensor[(8, 5, 12), float32]) {
  %706 = cast(%var_14032, dtype="int8") /* ty=Tensor[(21, 4), int8] */;
  %707 = cast(meta[relay.Constant][38] /* ty=Tensor[(700), int64] */, dtype="int64") /* ty=Tensor[(700), int64] */;
  %708 = reshape(%706, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %709 = reshape(%707, newshape=[10, 10, 7]) /* ty=Tensor[(10, 10, 7), int64] */;
  %710 = @func_12101(%708, %709) /* ty=(Tensor[(975), float32], Tensor[(84), int8], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), uint64]) */;
  %711 = cast(%var_14039, dtype="int32") /* ty=int32 */;
  %712 = cast(meta[relay.Constant][39] /* ty=Tensor[(240), int32] */, dtype="int32") /* ty=Tensor[(240), int32] */;
  %713 = cast(meta[relay.Constant][40] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %714 = reshape(%711, newshape=[]) /* ty=int32 */;
  %715 = reshape(%712, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), int32] */;
  %716 = reshape(%713, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %717 = @func_11019(%714, %715, %716) /* ty=(Tensor[(16, 5, 3), int32], Tensor[(11, 3, 1), float64], Tensor[(33), float64], int64) */;
  %718 = cast(meta[relay.Constant][41] /* ty=Tensor[(735), int64] */, dtype="int64") /* ty=Tensor[(735), int64] */;
  %719 = cast(meta[relay.Constant][41] /* ty=Tensor[(735), int64] */, dtype="int64") /* ty=Tensor[(735), int64] */;
  %720 = cast(meta[relay.Constant][42] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %721 = reshape(%718, newshape=[7, 7, 15]) /* ty=Tensor[(7, 7, 15), int64] */;
  %722 = reshape(%719, newshape=[7, 7, 15]) /* ty=Tensor[(7, 7, 15), int64] */;
  %723 = reshape(%720, newshape=[168]) /* ty=Tensor[(168), uint8] */;
  %724 = @func_11692(%721, %722, %723) /* ty=(int64, Tensor[(7, 7, 15), bool], Tensor[(10, 10, 7), int64], int64, Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(10, 10, 7), int64], Tensor[(84, 1), int8]) */;
  %725 = cast(meta[relay.Constant][43] /* ty=Tensor[(8, 5, 12), float32] */, dtype="float32") /* ty=Tensor[(8, 5, 12), float32] */;
  %726 = exp(%725) /* ty=Tensor[(8, 5, 12), float32] */;
  %727 = @func_8622() /* ty=int64 */;
  %728 = cast(%726, dtype="float32") /* ty=Tensor[(8, 5, 12), float32] */;
  %729 = cast(%727, dtype="float32") /* ty=float32 */;
  %730 = %710.1;
  %731 = %717.2;
  %732 = %724.3;
  %733 = @func_6751() /* ty=int64 */;
  %734 = subtract(%728, %729) /* ty=Tensor[(8, 5, 12), float32] */;
  (%730, %var_14032, meta[relay.Constant][38] /* ty=Tensor[(700), int64] */, %731, %var_14039, meta[relay.Constant][39] /* ty=Tensor[(240), int32] */, meta[relay.Constant][40] /* ty=Tensor[(33), float64] */, %732, meta[relay.Constant][41] /* ty=Tensor[(735), int64] */, meta[relay.Constant][42] /* ty=Tensor[(168), uint8] */, %733, %734)
}

def @main(%var_16643: Tensor[(1, 12, 7), int32], %var_16644: Tensor[(1, 12, 7), int32]) -> Tensor[(?, 12, 7), int32] {
  %735 = cast(%var_16644, dtype="int32") /* ty=Tensor[(1, 12, 7), int32] */;
  %736 = shape_of(%var_16643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %737 = cast(%var_16643, dtype="int32") /* ty=Tensor[(1, 12, 7), int32] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  right_shift(%737, %738) /* ty=Tensor[(?, 12, 7), int32] */
}

def @func_14537() -> (Tensor[(975), float32],) {
  %740 = fn () -> (Tensor[(975), float32],) {
    %739 = @func_8174() /* ty=Tensor[(975), float32] */;
    (%739,)
  };
  %740() /* ty=(Tensor[(975), float32],) */
}

def @func_938(%var_936: Tensor[(4, 16, 16), float64], %var_937: Tensor[(4, 16, 16), float64]) -> (Tensor[(4, 16, 16), float64],) {
  @func_934(%var_936, %var_937) /* ty=(Tensor[(4, 16, 16), float64],) */
}

def @func_14422() -> int64 {
  @func_14420() /* ty=int64 */
}

def @func_8433(%var_8431: Tensor[(1024), float64], %var_8432: Tensor[(1694), float64]) -> (Tensor[(975), float32], Tensor[(9, 14, 15), float32], Tensor[(12, 14, 8), float32], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(1024), float64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(1694), bool], Tensor[(84), int8]) {
  %772 = fn (%var_8394: Tensor[(1024), float64], %var_8413: Tensor[(1694), float64]) -> (Tensor[(975), float32], Tensor[(9, 14, 15), float32], Tensor[(12, 14, 8), float32], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(1024), float64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(1694), bool], Tensor[(84), int8]) {
    %741 = @func_8323() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16], Tensor[(128), int16], Tensor[(975), float32]) */;
    %742 = @func_6884() /* ty=(Tensor[(9, 14, 15), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
    %743 = cast(meta[relay.Constant][44] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
    %744 = cast(meta[relay.Constant][45] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
    %745 = cast(meta[relay.Constant][46] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %746 = cast(%var_8394, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %747 = reshape(%743, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), float32] */;
    %748 = reshape(%744, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %749 = reshape(%745, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
    %750 = reshape(%746, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
    %751 = @func_5524(%747, %748, %749, %750) /* ty=(Tensor[(12, 14, 8), float32], Tensor[(15, 5, 13), float32], Tensor[(325, 3), float32], Tensor[(12, 14, 8), float32], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(12, 7, 2), uint8], Tensor[(1, 168), uint8], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) */;
    %752 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
    %753 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
    %754 = cast(%var_8413, dtype="bool") /* ty=Tensor[(1694), bool] */;
    %755 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(1694), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %756 = cast(meta[relay.Constant][46] /* ty=Tensor[(1694), float64] */, dtype="bool") /* ty=Tensor[(1694), bool] */;
    %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?), bool] */;
    %758 = cast(meta[relay.Constant][44] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
    %759 = cast(meta[relay.Constant][45] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
    %760 = cast(%var_8394, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %761 = reshape(%758, newshape=[1, 1344]) /* ty=Tensor[(1, 1344), float32] */;
    %762 = reshape(%759, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %763 = reshape(%760, newshape=[4, 256]) /* ty=Tensor[(4, 256), float64] */;
    %764 = @func_7254(%761, %762, %763) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(12, 14, 8), float32], Tensor[(1, 1344), float32], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(4, 256), float64]) */;
    %765 = %741.3;
    %766 = %742.0;
    %767 = %751.3;
    %768 = %752.1;
    %769 = %753.1;
    %770 = less_equal(%756, %757) /* ty=Tensor[(1694), bool] */;
    %771 = %764.3;
    (%765, %766, %767, meta[relay.Constant][44] /* ty=Tensor[(1344), float32] */, meta[relay.Constant][45] /* ty=Tensor[(84), int8] */, %var_8394, %768, %769, %770, %771)
  };
  %772(%var_8431, %var_8432) /* ty=(Tensor[(975), float32], Tensor[(9, 14, 15), float32], Tensor[(12, 14, 8), float32], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(1024), float64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(1694), bool], Tensor[(84), int8]) */
}

def @func_9265() -> (int64, int64) {
  %776 = fn () -> (int64, int64) {
    %773 = @func_8714() /* ty=(int64,) */;
    %774 = @func_8622() /* ty=int64 */;
    %775 = %773.0;
    (%774, %775)
  };
  %776() /* ty=(int64, int64) */
}

def @func_1551(%var_1549: Tensor[(11, 11, 14), float64], %var_1550: int64) -> (Tensor[(11, 11, 14), float64], Tensor[(10, 10, 7), int64], int64) {
  %783 = fn (%var_1531: Tensor[(11, 11, 14), float64], %var_1536: int64) -> (Tensor[(11, 11, 14), float64], Tensor[(10, 10, 7), int64], int64) {
    %777 = cast(%var_1531, dtype="float64") /* ty=Tensor[(11, 11, 14), float64] */;
    %778 = cast(%var_1536, dtype="int64") /* ty=int64 */;
    %779 = reshape(%778, newshape=[]) /* ty=int64 */;
    %780 = @func_543(%779) /* ty=(Tensor[(10, 10, 7), int64],) */;
    %781 = exp(%777) /* ty=Tensor[(11, 11, 14), float64] */;
    %782 = %780.0;
    (%781, %782, %var_1536)
  };
  %783(%var_1549, %var_1550) /* ty=(Tensor[(11, 11, 14), float64], Tensor[(10, 10, 7), int64], int64) */
}

def @func_12199(%var_12197: Tensor[(1694), float64]) -> (int64, Tensor[(6, 1, 3), int64], Tensor[(18, 1), int64], Tensor[(1694), float64]) {
  @func_12196(%var_12197) /* ty=(int64, Tensor[(6, 1, 3), int64], Tensor[(18, 1), int64], Tensor[(1694), float64]) */
}

def @func_9724(%var_9719: Tensor[(3, 7, 11), bool], %var_9720: Tensor[(3, 7, 11), bool]) -> Tensor[(3, 7, 11), bool] {
  %784 = cast(%var_9720, dtype="bool") /* ty=Tensor[(3, 7, 11), bool] */;
  %785 = shape_of(%var_9719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %786 = cast(%var_9719, dtype="bool") /* ty=Tensor[(3, 7, 11), bool] */;
  %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%786, %787) /* ty=Tensor[(3, 7, 11), bool] */
}

def @func_6825(%var_6823: Tensor[(1694), float64]) -> (int64, Tensor[(10, 10, 7), int64], Tensor[(294), float64], Tensor[(84), int8], Tensor[(1694), float64]) {
  @func_6822(%var_6823) /* ty=(int64, Tensor[(10, 10, 7), int64], Tensor[(294), float64], Tensor[(84), int8], Tensor[(1694), float64]) */
}

def @func_2407(%var_2405: Tensor[(1, 7, 12), int8], %var_2406: Tensor[(11, 154), float64]) -> (Tensor[(12, 7, 12), int8], Tensor[(11, 154), float64], int64, Tensor[(12, 7, 12), bool], Tensor[(10, 10, 7), int64]) {
  @func_2403(%var_2405, %var_2406) /* ty=(Tensor[(12, 7, 12), int8], Tensor[(11, 154), float64], int64, Tensor[(12, 7, 12), bool], Tensor[(10, 10, 7), int64]) */
}

def @func_6693(%var_6675: Tensor[(14, 12, 7), float32]) -> (Tensor[(14, 12, 7), float32],) {
  %788 = cast(%var_6675, dtype="float32") /* ty=Tensor[(14, 12, 7), float32] */;
  %789 = sin(%788) /* ty=Tensor[(14, 12, 7), float32] */;
  (%789,)
}

def @func_10255() -> (Tensor[(975), float32], Tensor[(1, 294), float64], Tensor[(84), int8]) {
  %796 = fn () -> (Tensor[(975), float32], Tensor[(1, 294), float64], Tensor[(84), int8]) {
    %790 = @func_6884() /* ty=(Tensor[(9, 14, 15), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
    %791 = cast(meta[relay.Constant][47] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
    %792 = reshape(%791, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %793 = @func_5945(%792) /* ty=(Tensor[(5, 5, 10), bool], Tensor[(84), int8], Tensor[(1, 294), float64], Tensor[(84), int8], Tensor[(847, 2), float64]) */;
    %794 = %790.2;
    %795 = %793.2;
    (%794, %795, meta[relay.Constant][47] /* ty=Tensor[(84), int8] */)
  };
  %796() /* ty=(Tensor[(975), float32], Tensor[(1, 294), float64], Tensor[(84), int8]) */
}

def @func_14090(%var_14088: Tensor[(21, 4), int8], %var_14089: int32) -> (Tensor[(84), int8], Tensor[(21, 4), int8], Tensor[(700), int64], Tensor[(33), float64], int32, Tensor[(240), int32], Tensor[(33), float64], int64, Tensor[(735), int64], Tensor[(168), uint8], int64, Tensor[(8, 5, 12), float32]) {
  @func_14086(%var_14088, %var_14089) /* ty=(Tensor[(84), int8], Tensor[(21, 4), int8], Tensor[(700), int64], Tensor[(33), float64], int32, Tensor[(240), int32], Tensor[(33), float64], int64, Tensor[(735), int64], Tensor[(168), uint8], int64, Tensor[(8, 5, 12), float32]) */
}

def @func_11019(%var_10987: int32, %var_10988: Tensor[(16, 5, 3), int32], %var_11002: Tensor[(33), float64]) -> (Tensor[(16, 5, 3), int32], Tensor[(11, 3, 1), float64], Tensor[(33), float64], int64) {
  %797 = cast(%var_10987, dtype="int32") /* ty=int32 */;
  %798 = cast(%var_10988, dtype="int32") /* ty=Tensor[(16, 5, 3), int32] */;
  %799 = cast(%var_11002, dtype="float64") /* ty=Tensor[(33), float64] */;
  %800 = reshape(%799, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %801 = @func_9575() /* ty=(int64,) */;
  %802 = multiply(%797, %798) /* ty=Tensor[(16, 5, 3), int32] */;
  %803 = @func_908(%800) /* ty=Tensor[(11, 3, 1), float64] */;
  %804 = %801.0;
  (%802, %803, %var_11002, %804)
}

def @func_10709() -> (int64,) {
  @func_10707() /* ty=(int64,) */
}

def @func_6886() -> (Tensor[(9, 14, 15), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) {
  @func_6884() /* ty=(Tensor[(9, 14, 15), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */
}

def @func_13654(%var_13652: Tensor[(84), int8]) -> (Tensor[(84), int8], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(10, 10, 7), int64], Tensor[(975), float32], Tensor[(975), uint16], Tensor[(1694), float32], Tensor[(1024), float32]) {
  @func_13651(%var_13652) /* ty=(Tensor[(84), int8], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(10, 10, 7), int64], Tensor[(975), float32], Tensor[(975), uint16], Tensor[(1694), float32], Tensor[(1024), float32]) */
}

def @func_6256() -> (Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) {
  @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */
}

def @func_14198() -> Tensor[(10, 10, 7), int64] {
  @func_14196() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_9357() -> (int64, Tensor[(975), float32], int64) {
  %809 = fn () -> (int64, Tensor[(975), float32], int64) {
    %805 = @func_6528() /* ty=(int64,) */;
    %806 = %805.0;
    %807 = @func_8174() /* ty=Tensor[(975), float32] */;
    %808 = @func_6751() /* ty=int64 */;
    (%806, %807, %808)
  };
  %809() /* ty=(int64, Tensor[(975), float32], int64) */
}

def @func_10053() -> int64 {
  %810 = fn () -> int64 {
    @func_6707() /* ty=int64 */
  };
  %810() /* ty=int64 */
}

def @func_6696(%var_6694: Tensor[(14, 12, 7), float32]) -> (Tensor[(14, 12, 7), float32],) {
  @func_6693(%var_6694) /* ty=(Tensor[(14, 12, 7), float32],) */
}

def @func_8732() -> (Tensor[(10, 10, 7), int64], int64) {
  %811 = @func_8714() /* ty=(int64,) */;
  %812 = @func_8545() /* ty=Tensor[(10, 10, 7), int64] */;
  %813 = %811.0;
  (%812, %813)
}

def @func_14164() -> (int64, Tensor[(13, 2, 4), float64]) {
  %818 = fn () -> (int64, Tensor[(13, 2, 4), float64]) {
    %814 = @func_10341() /* ty=(int64,) */;
    %815 = @func_13870() /* ty=(Tensor[(13, 2, 4), float64],) */;
    %816 = %814.0;
    %817 = %815.0;
    (%816, %817)
  };
  %818() /* ty=(int64, Tensor[(13, 2, 4), float64]) */
}

def @func_9149() -> (Tensor[(10, 10, 7), int64],) {
  %821 = fn () -> (Tensor[(10, 10, 7), int64],) {
    %819 = @func_6903() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %820 = %819.0;
    (%820,)
  };
  %821() /* ty=(Tensor[(10, 10, 7), int64],) */
}

def @func_2114(%var_2113: Tensor[(15, 5, 13), float32]) -> (Tensor[(15, 5, 13), float32],) {
  %824 = fn (%var_2101: Tensor[(15, 5, 13), float32]) -> (Tensor[(15, 5, 13), float32],) {
    %822 = cast(%var_2101, dtype="float32") /* ty=Tensor[(15, 5, 13), float32] */;
    %823 = sqrt(%822) /* ty=Tensor[(15, 5, 13), float32] */;
    (%823,)
  };
  %824(%var_2113) /* ty=(Tensor[(15, 5, 13), float32],) */
}

def @func_6845() -> int64 {
  @func_6707() /* ty=int64 */
}

def @func_9663() -> int64 {
  %825 = @func_9575() /* ty=(int64,) */;
  %825.0
}

def @func_11559(%var_11558: Tensor[(104), float64]) -> (int64, Tensor[(13, 2, 4), uint32], Tensor[(104), float64], Tensor[(10, 10, 7), int64]) {
  %833 = fn (%var_11529: Tensor[(104), float64]) -> (int64, Tensor[(13, 2, 4), uint32], Tensor[(104), float64], Tensor[(10, 10, 7), int64]) {
    %826 = cast(%var_11529, dtype="float64") /* ty=Tensor[(104), float64] */;
    %827 = reshape(%826, newshape=[13, 2, 4]) /* ty=Tensor[(13, 2, 4), float64] */;
    %828 = @func_10449(%827) /* ty=(Tensor[(10, 10, 7), float64], int64, int64, Tensor[(13, 2, 4), uint32]) */;
    %829 = @func_8800() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %830 = @func_9663() /* ty=int64 */;
    %831 = %828.3;
    %832 = %829.0;
    (%830, %831, %var_11529, %832)
  };
  %833(%var_11558) /* ty=(int64, Tensor[(13, 2, 4), uint32], Tensor[(104), float64], Tensor[(10, 10, 7), int64]) */
}

def @func_14579(%var_14574: bool, %var_14575: Tensor[(16, 14, 15), bool]) -> Tensor[(16, 14, 15), bool] {
  %834 = cast(%var_14574, dtype="bool") /* ty=bool */;
  %835 = cast(%var_14575, dtype="bool") /* ty=Tensor[(16, 14, 15), bool] */;
  logical_or(%834, %835) /* ty=Tensor[(16, 14, 15), bool] */
}

def @func_14731() -> Tensor[(10, 10, 7), int64] {
  @func_14729() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_2448(%var_2412: Tensor[(13, 11, 14), uint16]) -> (Tensor[(13, 11, 14), float32],) {
  %836 = cast(meta[relay.Constant][48] /* ty=Tensor[(13, 11, 14), uint16] */, dtype="uint16") /* ty=Tensor[(13, 11, 14), uint16] */;
  %837 = shape_of(%var_2412, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(%var_2412, dtype="uint16") /* ty=Tensor[(13, 11, 14), uint16] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %840 = bitwise_and(%838, %839) /* ty=Tensor[(13, 11, 14), uint16] */;
  %841 = cast(%840, dtype="float32") /* ty=Tensor[(13, 11, 14), float32] */;
  %842 = asin(%841) /* ty=Tensor[(13, 11, 14), float32] */;
  (%842,)
}

def @func_10707() -> (int64,) {
  %843 = @func_8714() /* ty=(int64,) */;
  %844 = %843.0;
  (%844,)
}

def @func_16582() -> int64 {
  @func_16580() /* ty=int64 */
}

def @func_11608() -> (Tensor[(10, 10, 7), int64], Tensor[(3, 12, 3), int16], Tensor[(108), uint64]) {
  @func_11606() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(3, 12, 3), int16], Tensor[(108), uint64]) */
}

def @func_9822() -> Tensor[(10, 10, 7), int64] {
  @func_9820() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_14420() -> int64 {
  %845 = @func_9054() /* ty=(int64,) */;
  %845.0
}

def @func_16343(%var_16342: Tensor[(750), uint16]) -> (Tensor[(10, 10, 7), int64], Tensor[(15, 5, 10), uint16], Tensor[(750), uint16]) {
  %853 = fn (%var_16339: Tensor[(750), uint16]) -> (Tensor[(10, 10, 7), int64], Tensor[(15, 5, 10), uint16], Tensor[(750), uint16]) {
    %846 = @func_15747() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %847 = cast(%var_16339, dtype="uint16") /* ty=Tensor[(750), uint16] */;
    %848 = cast(%var_16339, dtype="uint16") /* ty=Tensor[(750), uint16] */;
    %849 = reshape(%847, newshape=[15, 5, 10]) /* ty=Tensor[(15, 5, 10), uint16] */;
    %850 = reshape(%848, newshape=[15, 5, 10]) /* ty=Tensor[(15, 5, 10), uint16] */;
    %851 = %846.0;
    %852 = @func_5690(%849, %850) /* ty=Tensor[(15, 5, 10), uint16] */;
    (%851, %852, %var_16339)
  };
  %853(%var_16342) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(15, 5, 10), uint16], Tensor[(750), uint16]) */
}

def @func_9314(%var_9305: Tensor[(33), float64], %var_9311: Tensor[(180), uint8]) -> (int64, Tensor[(10, 10, 7), int64], Tensor[(11, 3, 1), float64], Tensor[(33), float64], Tensor[(10, 10, 7), int64], Tensor[(180), uint8]) {
  %854 = cast(%var_9305, dtype="float64") /* ty=Tensor[(33), float64] */;
  %855 = reshape(%854, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %856 = cast(%var_9311, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %857 = reshape(%856, newshape=[30, 6]) /* ty=Tensor[(30, 6), uint8] */;
  %858 = @func_6476(%857) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(11, 3, 1), float64], Tensor[(1, 33), float64], Tensor[(4, 16, 16), float64], Tensor[(30, 6), uint8], Tensor[(1024), float64]) */;
  %859 = @func_6845() /* ty=int64 */;
  %860 = @func_6558() /* ty=Tensor[(10, 10, 7), int64] */;
  %861 = @func_908(%855) /* ty=Tensor[(11, 3, 1), float64] */;
  %862 = %858.0;
  (%859, %860, %861, %var_9305, %862, %var_9311)
}

def @func_6904() -> (Tensor[(10, 10, 7), int64],) {
  %865 = fn () -> (Tensor[(10, 10, 7), int64],) {
    %863 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
    %864 = %863.1;
    (%864,)
  };
  %865() /* ty=(Tensor[(10, 10, 7), int64],) */
}

def @func_15973(%var_15972: Tensor[(84), int8]) -> (Tensor[(975), float32], Tensor[(3, 12, 3), int16], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(84), int8], Tensor[(1694), float64]) {
  %878 = fn (%var_15968: Tensor[(84), int8]) -> (Tensor[(975), float32], Tensor[(3, 12, 3), int16], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(84), int8], Tensor[(1694), float64]) {
    %866 = @func_13672() /* ty=(Tensor[(975), float32],) */;
    %867 = @func_11606() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(3, 12, 3), int16], Tensor[(108), uint64]) */;
    %868 = @func_11501() /* ty=(Tensor[(975), float32], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(847, 2), bool], Tensor[(847, 2), float32]) */;
    %869 = cast(%var_15968, dtype="int8") /* ty=Tensor[(84), int8] */;
    %870 = cast(meta[relay.Constant][49] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %871 = reshape(%869, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %872 = reshape(%870, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
    %873 = @func_12879(%871, %872) /* ty=(Tensor[(975), float32], Tensor[(1694), float64], Tensor[(84), int8], Tensor[(1694), float64]) */;
    %874 = %866.0;
    %875 = %867.1;
    %876 = %868.1;
    %877 = %873.2;
    (%874, %875, %876, %877, %var_15968, meta[relay.Constant][49] /* ty=Tensor[(1694), float64] */)
  };
  %878(%var_15972) /* ty=(Tensor[(975), float32], Tensor[(3, 12, 3), int16], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(84), int8], Tensor[(1694), float64]) */
}

def @func_12614() -> (Tensor[(975), float32],) {
  @func_12612() /* ty=(Tensor[(975), float32],) */
}

def @func_15352() -> (Tensor[(10, 10, 7), int64],) {
  @func_15350() /* ty=(Tensor[(10, 10, 7), int64],) */
}

def @func_15635() -> (int64, Tensor[(13, 2, 4), float64]) {
  %881 = fn () -> (int64, Tensor[(13, 2, 4), float64]) {
    %879 = @func_10052() /* ty=int64 */;
    %880 = @func_8869() /* ty=Tensor[(13, 2, 4), float64] */;
    (%879, %880)
  };
  %881() /* ty=(int64, Tensor[(13, 2, 4), float64]) */
}

def @func_14598() -> (int64,) {
  %884 = fn () -> (int64,) {
    %882 = @func_9035() /* ty=(int64,) */;
    %883 = %882.0;
    (%883,)
  };
  %884() /* ty=(int64,) */
}

def @func_9741() -> (int64,) {
  %885 = @func_9054() /* ty=(int64,) */;
  %886 = %885.0;
  (%886,)
}

def @func_10174(%var_10172: float64, %var_10173: Tensor[(15, 3, 1), float64]) -> (Tensor[(10, 10, 7), int64], Tensor[(15, 3, ?), bool]) {
  %897 = fn (%var_10150: float64, %var_10151: Tensor[(15, 3, 1), float64]) -> (Tensor[(10, 10, 7), int64], Tensor[(15, 3, ?), bool]) {
    %887 = @func_8732() /* ty=(Tensor[(10, 10, 7), int64], int64) */;
    %888 = cast(%var_10150, dtype="bool") /* ty=bool */;
    %889 = cast(%var_10151, dtype="bool") /* ty=Tensor[(15, 3, 1), bool] */;
    %890 = equal(%888, %889) /* ty=Tensor[(15, 3, 1), bool] */;
    %891 = cast(%var_10151, dtype="bool") /* ty=Tensor[(15, 3, 1), bool] */;
    %892 = shape_of(%890, dtype="int32") /* ty=Tensor[(3), int32] */;
    %893 = cast(%890, dtype="bool") /* ty=Tensor[(15, 3, 1), bool] */;
    %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %895 = %887.0;
    %896 = logical_or(%893, %894) /* ty=Tensor[(15, 3, ?), bool] */;
    (%895, %896)
  };
  %897(%var_10172, %var_10173) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(15, 3, ?), bool]) */
}

def @func_8324() -> (Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16], Tensor[(128), int16], Tensor[(975), float32]) {
  %907 = fn () -> (Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16], Tensor[(128), int16], Tensor[(975), float32]) {
    %898 = @func_8202() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %899 = cast(meta[relay.Constant][50] /* ty=Tensor[(128), int16] */, dtype="int16") /* ty=Tensor[(128), int16] */;
    %900 = cast(meta[relay.Constant][50] /* ty=Tensor[(128), int16] */, dtype="int16") /* ty=Tensor[(128), int16] */;
    %901 = reshape(%899, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), int16] */;
    %902 = reshape(%900, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), int16] */;
    %903 = @func_8014() /* ty=(Tensor[(975), float32],) */;
    %904 = %898.0;
    %905 = @func_2205(%901, %902) /* ty=Tensor[(8, 2, 8), int16] */;
    %906 = %903.0;
    (%904, %905, meta[relay.Constant][50] /* ty=Tensor[(128), int16] */, %906)
  };
  %907() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(8, 2, 8), int16], Tensor[(128), int16], Tensor[(975), float32]) */
}

def @func_10965(%var_10961: Tensor[(84, 1), int8]) -> (Tensor[(10, 10, 7), int64], Tensor[(847, 2), float64], Tensor[(294), float64], Tensor[(84, 1), int8], Tensor[(1694), float64]) {
  %908 = @func_7391() /* ty=(int64, Tensor[(10, 10, 7), int64]) */;
  %909 = cast(meta[relay.Constant][51] /* ty=Tensor[(294), float64] */, dtype="float64") /* ty=Tensor[(294), float64] */;
  %910 = cast(%var_10961, dtype="int8") /* ty=Tensor[(84, 1), int8] */;
  %911 = cast(meta[relay.Constant][52] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %912 = reshape(%909, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float64] */;
  %913 = reshape(%910, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %914 = reshape(%911, newshape=[847, 2]) /* ty=Tensor[(847, 2), float64] */;
  %915 = @func_5104(%912, %913, %914) /* ty=(Tensor[(14, 3, 7), float64], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(847, 2), float64]) */;
  %916 = %908.1;
  %917 = %915.3;
  (%916, %917, meta[relay.Constant][51] /* ty=Tensor[(294), float64] */, %var_10961, meta[relay.Constant][52] /* ty=Tensor[(1694), float64] */)
}

def @func_13259() -> (int64,) {
  %920 = fn () -> (int64,) {
    %918 = @func_9582() /* ty=(int64,) */;
    %919 = %918.0;
    (%919,)
  };
  %920() /* ty=(int64,) */
}

def @func_12949(%var_12947: Tensor[(10, 10, 7), int64]) -> Tensor[(10, 10, 7), float32] {
  @func_12946(%var_12947) /* ty=Tensor[(10, 10, 7), float32] */
}

def @func_12101(%var_12048: Tensor[(84), int8], %var_12091: Tensor[(10, 10, 7), int64]) -> (Tensor[(975), float32], Tensor[(84), int8], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), uint64]) {
  %921 = @func_6903() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %922 = cast(%var_12048, dtype="int8") /* ty=Tensor[(84), int8] */;
  %923 = reshape(%922, newshape=[84, 1]) /* ty=Tensor[(84, 1), int8] */;
  %924 = @func_10965(%923) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(847, 2), float64], Tensor[(294), float64], Tensor[(84, 1), int8], Tensor[(1694), float64]) */;
  %925 = %924.0;
  %926 = cast(%var_12091, dtype="uint64") /* ty=Tensor[(10, 10, 7), uint64] */;
  %927 = shape_of(%925, dtype="int32") /* ty=Tensor[(3), int32] */;
  %928 = cast(%925, dtype="uint64") /* ty=Tensor[(10, 10, 7), uint64] */;
  %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %930 = @func_11857() /* ty=Tensor[(975), float32] */;
  %931 = %921.0;
  %932 = maximum(%928, %929) /* ty=Tensor[(10, 10, 7), uint64] */;
  (%930, %var_12048, %931, %932)
}

def @func_10930() -> (Tensor[(975), float32], Tensor[(13, 2, 4), float64]) {
  %933 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
  %934 = @func_8174() /* ty=Tensor[(975), float32] */;
  %935 = %933.0;
  (%934, %935)
}

def @func_13794() -> (Tensor[(10, 10, 7), int64], int64, Tensor[(10, 10, 7), int64]) {
  @func_13792() /* ty=(Tensor[(10, 10, 7), int64], int64, Tensor[(10, 10, 7), int64]) */
}

def @func_12946(%var_12938: Tensor[(10, 10, 7), int64]) -> Tensor[(10, 10, 7), float32] {
  %936 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %937 = %936.0;
  %938 = cast(%var_12938, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
  %939 = shape_of(%937, dtype="int32") /* ty=Tensor[(3), int32] */;
  %940 = cast(%937, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
  %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%940, %941) /* ty=Tensor[(10, 10, 7), float32] */
}

def @func_12612() -> (Tensor[(975), float32],) {
  %942 = @func_12521() /* ty=(Tensor[(975), float32],) */;
  %943 = %942.0;
  %944 = cast(%943, dtype="float32") /* ty=Tensor[(975), float32] */;
  %945 = rsqrt(%944) /* ty=Tensor[(975), float32] */;
  (%945,)
}

def @func_4842(%var_4841: Tensor[(1, 4, 9), uint32]) -> (Tensor[(1, 4, 9), uint32],) {
  %949 = fn (%var_4835: Tensor[(1, 4, 9), uint32]) -> (Tensor[(1, 4, 9), uint32],) {
    %946 = cast(meta[relay.Constant][53] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %947 = cast(%var_4835, dtype="uint32") /* ty=Tensor[(1, 4, 9), uint32] */;
    %948 = bitwise_xor(%946, %947) /* ty=Tensor[(1, 4, 9), uint32] */;
    (%948,)
  };
  %949(%var_4841) /* ty=(Tensor[(1, 4, 9), uint32],) */
}

def @func_8568(%var_8559: Tensor[(2002), uint16]) -> (int64, Tensor[(2002), float32], Tensor[(2002), uint16], Tensor[(12, 7, 2), uint8], Tensor[(168), uint8]) {
  %950 = @func_7088() /* ty=(int64,) */;
  %951 = cast(%var_8559, dtype="uint16") /* ty=Tensor[(2002), uint16] */;
  %952 = reshape(%951, newshape=[2002]) /* ty=Tensor[(2002), uint16] */;
  %953 = @func_8497(%952) /* ty=(int64, Tensor[(13, 11, 14), float32], Tensor[(2002), float32]) */;
  %954 = cast(meta[relay.Constant][54] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %955 = cast(meta[relay.Constant][54] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %956 = reshape(%954, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
  %957 = reshape(%955, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
  %958 = %950.0;
  %959 = %953.2;
  %960 = @func_1575(%956, %957) /* ty=Tensor[(12, 7, 2), uint8] */;
  (%958, %959, %var_8559, %960, meta[relay.Constant][54] /* ty=Tensor[(168), uint8] */)
}

def @func_934(%var_917: Tensor[(4, 16, 16), float64], %var_918: Tensor[(4, 16, 16), float64]) -> (Tensor[(4, 16, 16), float64],) {
  %961 = cast(%var_918, dtype="float64") /* ty=Tensor[(4, 16, 16), float64] */;
  %962 = shape_of(%var_917, dtype="int32") /* ty=Tensor[(3), int32] */;
  %963 = cast(%var_917, dtype="float64") /* ty=Tensor[(4, 16, 16), float64] */;
  %964 = dyn.reshape(%961, %962, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %965 = power(%963, %964) /* ty=Tensor[(4, 16, 16), float64] */;
  (%965,)
}

def @func_4291(%var_4289: Tensor[(2, 8, 8), float64]) -> (Tensor[(2, 8, 8), uint8],) {
  @func_4288(%var_4289) /* ty=(Tensor[(2, 8, 8), uint8],) */
}

def @func_11235() -> (int64, int64) {
  @func_11233() /* ty=(int64, int64) */
}

def @func_8138() -> (Tensor[(15, 5, 13), float32],) {
  @func_8136() /* ty=(Tensor[(15, 5, 13), float32],) */
}

def @func_12882(%var_12880: Tensor[(84), int8], %var_12881: Tensor[(1694), float64]) -> (Tensor[(975), float32], Tensor[(1694), float64], Tensor[(84), int8], Tensor[(1694), float64]) {
  %974 = fn (%var_12875: Tensor[(84), int8], %var_12876: Tensor[(1694), float64]) -> (Tensor[(975), float32], Tensor[(1694), float64], Tensor[(84), int8], Tensor[(1694), float64]) {
    %966 = @func_10930() /* ty=(Tensor[(975), float32], Tensor[(13, 2, 4), float64]) */;
    %967 = cast(%var_12875, dtype="int8") /* ty=Tensor[(84), int8] */;
    %968 = cast(%var_12876, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %969 = reshape(%967, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %970 = reshape(%968, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
    %971 = @func_9494(%969, %970) /* ty=(int64, Tensor[(12, 7, 12), bool], Tensor[(84), int8], Tensor[(1694), float64]) */;
    %972 = %966.0;
    %973 = %971.3;
    (%972, %973, %var_12875, %var_12876)
  };
  %974(%var_12880, %var_12881) /* ty=(Tensor[(975), float32], Tensor[(1694), float64], Tensor[(84), int8], Tensor[(1694), float64]) */
}

def @func_13651(%var_13577: Tensor[(84), int8]) -> (Tensor[(84), int8], Tensor[(1344), float32], Tensor[(84), int8], Tensor[(10, 10, 7), int64], Tensor[(975), float32], Tensor[(975), uint16], Tensor[(1694), float32], Tensor[(1024), float32]) {
  %975 = cast(meta[relay.Constant][55] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %976 = cast(%var_13577, dtype="int8") /* ty=Tensor[(84), int8] */;
  %977 = cast(meta[relay.Constant][56] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %978 = cast(meta[relay.Constant][57] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %979 = reshape(%975, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), float32] */;
  %980 = reshape(%976, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %981 = reshape(%977, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %982 = reshape(%978, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %983 = @func_5524(%979, %980, %981, %982) /* ty=(Tensor[(12, 14, 8), float32], Tensor[(15, 5, 13), float32], Tensor[(325, 3), float32], Tensor[(12, 14, 8), float32], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(12, 7, 2), uint8], Tensor[(1, 168), uint8], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) */;
  %984 = @func_8202() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %985 = @func_10930() /* ty=(Tensor[(975), float32], Tensor[(13, 2, 4), float64]) */;
  %986 = @func_11874() /* ty=Tensor[(975), float32] */;
  %987 = cast(meta[relay.Constant][58] /* ty=Tensor[(975), float32] */, dtype="uint16") /* ty=Tensor[(975), uint16] */;
  %988 = shape_of(%986, dtype="int32") /* ty=Tensor[(1), int32] */;
  %989 = cast(%986, dtype="uint16") /* ty=Tensor[(975), uint16] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %991 = cast(meta[relay.Constant][56] /* ty=Tensor[(1694), float64] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %992 = @func_7088() /* ty=(int64,) */;
  %993 = %992.0;
  %994 = cast(meta[relay.Constant][57] /* ty=Tensor[(1024), float64] */, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %995 = cast(%993, dtype="float32") /* ty=float32 */;
  %996 = floor_mod(%994, %995) /* ty=Tensor[(1024), float32] */;
  %997 = cast(%996, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %998 = %983.5;
  %999 = %984.0;
  %1000 = %985.0;
  %1001 = add(%989, %990) /* ty=Tensor[(975), uint16] */;
  %1002 = cosh(%991) /* ty=Tensor[(1694), float32] */;
  %1003 = asin(%997) /* ty=Tensor[(1024), float32] */;
  (%998, meta[relay.Constant][55] /* ty=Tensor[(1344), float32] */, %var_13577, %999, %1000, %1001, %1002, %1003)
}

def @func_8624() -> int64 {
  @func_8622() /* ty=int64 */
}

def @func_16569() -> Tensor[(10, 10, 7), int64] {
  %1005 = fn () -> Tensor[(10, 10, 7), int64] {
    %1004 = @func_6903() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %1004.0
  };
  %1005() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_14814() -> (int64, Tensor[(10, 10, 7), float32]) {
  %1010 = fn () -> (int64, Tensor[(10, 10, 7), float32]) {
    %1006 = @func_13258() /* ty=(int64,) */;
    %1007 = @func_11396() /* ty=(Tensor[(10, 10, 7), float32],) */;
    %1008 = %1006.0;
    %1009 = %1007.0;
    (%1008, %1009)
  };
  %1010() /* ty=(int64, Tensor[(10, 10, 7), float32]) */
}

def @func_14929() -> (int64, Tensor[(975), float32]) {
  %1011 = @func_9663() /* ty=int64 */;
  %1012 = @func_14411() /* ty=Tensor[(975), float32] */;
  (%1011, %1012)
}

def @func_11119() -> (Tensor[(975), float32], int64, Tensor[(84), int8]) {
  @func_11117() /* ty=(Tensor[(975), float32], int64, Tensor[(84), int8]) */
}

def @func_15258(%var_15256: Tensor[(3, 3, 1), float64]) -> (Tensor[(3, 3, 1), float64],) {
  @func_15255(%var_15256) /* ty=(Tensor[(3, 3, 1), float64],) */
}

def @func_6659() -> (Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) {
  %1017 = fn () -> (Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) {
    %1013 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
    %1014 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
    %1015 = %1013.0;
    %1016 = %1014.0;
    (%1015, %1016)
  };
  %1017() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */
}

def @func_12487(%var_12485: Tensor[(1694, 1), float64]) -> (Tensor[(975), float32], int64, Tensor[(15, 5, 13), float32], Tensor[(10, 10, 7), float64], Tensor[(975), float32], Tensor[(10, 10, 7), int64], int64, Tensor[(1694, 1), float64], int64, Tensor[(10, 10, 7), int64]) {
  @func_12484(%var_12485) /* ty=(Tensor[(975), float32], int64, Tensor[(15, 5, 13), float32], Tensor[(10, 10, 7), float64], Tensor[(975), float32], Tensor[(10, 10, 7), int64], int64, Tensor[(1694, 1), float64], int64, Tensor[(10, 10, 7), int64]) */
}

def @func_11836() -> (Tensor[(10, 10, 7), int64], Tensor[(975), uint32]) {
  %1027 = fn () -> (Tensor[(10, 10, 7), int64], Tensor[(975), uint32]) {
    %1018 = @func_8014() /* ty=(Tensor[(975), float32],) */;
    %1019 = %1018.0;
    %1020 = @func_8174() /* ty=Tensor[(975), float32] */;
    %1021 = cast(%1020, dtype="uint32") /* ty=Tensor[(975), uint32] */;
    %1022 = shape_of(%1019, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1023 = cast(%1019, dtype="uint32") /* ty=Tensor[(975), uint32] */;
    %1024 = dyn.reshape(%1021, %1022, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %1025 = @func_9820() /* ty=Tensor[(10, 10, 7), int64] */;
    %1026 = maximum(%1023, %1024) /* ty=Tensor[(975), uint32] */;
    (%1025, %1026)
  };
  %1027() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(975), uint32]) */
}

def @func_15224(%var_15222: Tensor[(3, 12, 3), uint64]) -> (Tensor[(3, 12, 3), bool],) {
  @func_15221(%var_15222) /* ty=(Tensor[(3, 12, 3), bool],) */
}

def @func_15145() -> (Tensor[(2, 3, 14), float32], Tensor[(975), float32]) {
  @func_15143() /* ty=(Tensor[(2, 3, 14), float32], Tensor[(975), float32]) */
}

def @func_14118() -> Tensor[(10, 10, 7), int64] {
  %1028 = fn () -> Tensor[(10, 10, 7), int64] {
    @func_8545() /* ty=Tensor[(10, 10, 7), int64] */
  };
  %1028() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_15233() -> (Tensor[(10, 10, 7), int64],) {
  @func_15231() /* ty=(Tensor[(10, 10, 7), int64],) */
}

def @func_11397() -> (Tensor[(10, 10, 7), float32],) {
  %1038 = fn () -> (Tensor[(10, 10, 7), float32],) {
    %1029 = @func_9582() /* ty=(int64,) */;
    %1030 = %1029.0;
    %1031 = cast(%1030, dtype="int64") /* ty=int64 */;
    %1032 = reshape(%1031, newshape=[]) /* ty=int64 */;
    %1033 = @func_543(%1032) /* ty=(Tensor[(10, 10, 7), int64],) */;
    %1034 = %1033.0;
    %1035 = cast(%1034, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
    %1036 = cast(%1030, dtype="float32") /* ty=float32 */;
    %1037 = floor_mod(%1035, %1036) /* ty=Tensor[(10, 10, 7), float32] */;
    (%1037,)
  };
  %1038() /* ty=(Tensor[(10, 10, 7), float32],) */
}

def @func_10592(%var_10591: Tensor[(108), uint64]) -> (int64, Tensor[(3, 12, 3), int16], Tensor[(108), uint64]) {
  %1044 = fn (%var_10588: Tensor[(108), uint64]) -> (int64, Tensor[(3, 12, 3), int16], Tensor[(108), uint64]) {
    %1039 = cast(%var_10588, dtype="uint64") /* ty=Tensor[(108), uint64] */;
    %1040 = reshape(%1039, newshape=[3, 12, 3]) /* ty=Tensor[(3, 12, 3), uint64] */;
    %1041 = @func_9095(%1040) /* ty=(Tensor[(3, 12, 3), int16],) */;
    %1042 = @func_6845() /* ty=int64 */;
    %1043 = %1041.0;
    (%1042, %1043, %var_10588)
  };
  %1044(%var_10591) /* ty=(int64, Tensor[(3, 12, 3), int16], Tensor[(108), uint64]) */
}

def @func_12833() -> (int64, Tensor[(3, 28), int8], Tensor[(15, 5, 13), float32]) {
  @func_12831() /* ty=(int64, Tensor[(3, 28), int8], Tensor[(15, 5, 13), float32]) */
}

def @func_8174() -> Tensor[(975), float32] {
  %1045 = @func_7553() /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %1045.3
}

def @func_6392(%var_6350: Tensor[(168), uint8]) -> (Tensor[(10, 10, 7), int64], Tensor[(12, 7, 2), bool]) {
  %1046 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %1047 = cast(%var_6350, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %1048 = cast(%var_6350, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %1049 = reshape(%1047, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
  %1050 = reshape(%1048, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
  %1051 = @func_1575(%1049, %1050) /* ty=Tensor[(12, 7, 2), uint8] */;
  %1052 = cast(%var_6350, dtype="bool") /* ty=Tensor[(168), bool] */;
  %1053 = shape_of(%1051, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1054 = cast(%1051, dtype="bool") /* ty=Tensor[(12, 7, 2), bool] */;
  %1055 = dyn.reshape(%1052, %1053, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1056 = %1046.0;
  %1057 = greater(%1054, %1055) /* ty=Tensor[(12, 7, 2), bool] */;
  (%1056, %1057)
}

def @func_9406() -> int64 {
  @func_6751() /* ty=int64 */
}

def @func_13693() -> (Tensor[(10, 10, 7), int64], int64) {
  %1061 = fn () -> (Tensor[(10, 10, 7), int64], int64) {
    %1058 = @func_8714() /* ty=(int64,) */;
    %1059 = @func_9820() /* ty=Tensor[(10, 10, 7), int64] */;
    %1060 = %1058.0;
    (%1059, %1060)
  };
  %1061() /* ty=(Tensor[(10, 10, 7), int64], int64) */
}

def @func_6847() -> int64 {
  @func_6845() /* ty=int64 */
}

def @func_8914(%var_8894: Tensor[(3, 28), int8]) -> (Tensor[(975), float32], Tensor[(10, 10, 7), int64], Tensor[(3, 28), int8]) {
  %1062 = cast(%var_8894, dtype="int8") /* ty=Tensor[(3, 28), int8] */;
  %1063 = reshape(%1062, newshape=[1, 84]) /* ty=Tensor[(1, 84), int8] */;
  %1064 = @func_8280(%1063) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(1, 84), int8]) */;
  %1065 = @func_8174() /* ty=Tensor[(975), float32] */;
  %1066 = %1064.0;
  (%1065, %1066, %var_8894)
}

def @func_9408() -> int64 {
  @func_9406() /* ty=int64 */
}

def @func_14931() -> (int64, Tensor[(975), float32]) {
  @func_14929() /* ty=(int64, Tensor[(975), float32]) */
}

def @func_8176() -> Tensor[(975), float32] {
  @func_8174() /* ty=Tensor[(975), float32] */
}

def @func_8545() -> Tensor[(10, 10, 7), int64] {
  @func_6558() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_6476(%var_6469: Tensor[(30, 6), uint8]) -> (Tensor[(10, 10, 7), int64], Tensor[(11, 3, 1), float64], Tensor[(1, 33), float64], Tensor[(4, 16, 16), float64], Tensor[(30, 6), uint8], Tensor[(1024), float64]) {
  %1067 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %1068 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 33), float64] */, dtype="float64") /* ty=Tensor[(1, 33), float64] */;
  %1069 = reshape(%1068, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %1070 = cast(%var_6469, dtype="uint8") /* ty=Tensor[(30, 6), uint8] */;
  %1071 = cast(meta[relay.Constant][60] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %1072 = reshape(%1070, newshape=[4, 15, 3]) /* ty=Tensor[(4, 15, 3), uint8] */;
  %1073 = reshape(%1071, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %1074 = @func_5998(%1072, %1073) /* ty=(Tensor[(4, 15, 3), bool], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) */;
  %1075 = %1067.1;
  %1076 = @func_908(%1069) /* ty=Tensor[(11, 3, 1), float64] */;
  %1077 = %1074.1;
  (%1075, %1076, meta[relay.Constant][59] /* ty=Tensor[(1, 33), float64] */, %1077, %var_6469, meta[relay.Constant][60] /* ty=Tensor[(1024), float64] */)
}

def @func_9095(%var_9077: Tensor[(3, 12, 3), uint64]) -> (Tensor[(3, 12, 3), int16],) {
  %1078 = @func_8350() /* ty=(Tensor[(3, 12, 3), uint64],) */;
  %1079 = %1078.0;
  %1080 = cast(%var_9077, dtype="int16") /* ty=Tensor[(3, 12, 3), int16] */;
  %1081 = shape_of(%1079, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1082 = cast(%1079, dtype="int16") /* ty=Tensor[(3, 12, 3), int16] */;
  %1083 = dyn.reshape(%1080, %1081, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1084 = subtract(%1082, %1083) /* ty=Tensor[(3, 12, 3), int16] */;
  (%1084,)
}

def @func_7659(%var_7654: Tensor[(7, 42), float64], %var_7655: Tensor[(84), int8], %var_7656: Tensor[(1694), float64], %var_7657: Tensor[(3, 56), bool], %var_7658: int64) -> (Tensor[(10, 10, 7), int64], Tensor[(847, 2), float64], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(3, 56), int64], Tensor[(10, 10, 7), int64], Tensor[(33), float64], int64) {
  %1118 = fn (%var_7610: Tensor[(7, 42), float64], %var_7611: Tensor[(84), int8], %var_7612: Tensor[(1694), float64], %var_7632: Tensor[(3, 56), bool], %var_7644: int64) -> (Tensor[(10, 10, 7), int64], Tensor[(847, 2), float64], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(3, 56), int64], Tensor[(10, 10, 7), int64], Tensor[(33), float64], int64) {
    %1085 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
    %1086 = cast(%var_7610, dtype="float64") /* ty=Tensor[(7, 42), float64] */;
    %1087 = cast(%var_7611, dtype="int8") /* ty=Tensor[(84), int8] */;
    %1088 = cast(%var_7612, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %1089 = reshape(%1086, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float64] */;
    %1090 = reshape(%1087, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %1091 = reshape(%1088, newshape=[847, 2]) /* ty=Tensor[(847, 2), float64] */;
    %1092 = @func_5104(%1089, %1090, %1091) /* ty=(Tensor[(14, 3, 7), float64], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(847, 2), float64]) */;
    %1093 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 56), uint8] */, dtype="uint8") /* ty=Tensor[(3, 56), uint8] */;
    %1094 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 56), uint8] */, dtype="uint8") /* ty=Tensor[(3, 56), uint8] */;
    %1095 = reshape(%1093, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
    %1096 = reshape(%1094, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint8] */;
    %1097 = @func_1575(%1095, %1096) /* ty=Tensor[(12, 7, 2), uint8] */;
    %1098 = cast(%1097, dtype="bool") /* ty=Tensor[(12, 7, 2), bool] */;
    %1099 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(3, 56), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1100 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 56), uint8] */, dtype="bool") /* ty=Tensor[(3, 56), bool] */;
    %1101 = dyn.reshape(%1098, %1099, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1102 = greater(%1100, %1101) /* ty=Tensor[(3, 56), bool] */;
    %1103 = cast(%var_7632, dtype="int64") /* ty=Tensor[(3, 56), int64] */;
    %1104 = shape_of(%1102, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1105 = cast(%1102, dtype="int64") /* ty=Tensor[(3, 56), int64] */;
    %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %1107 = cast(meta[relay.Constant][62] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
    %1108 = cast(%var_7632, dtype="uint8") /* ty=Tensor[(3, 56), uint8] */;
    %1109 = cast(%var_7644, dtype="int64") /* ty=int64 */;
    %1110 = reshape(%1107, newshape=[33]) /* ty=Tensor[(33), float64] */;
    %1111 = reshape(%1108, newshape=[42, 4]) /* ty=Tensor[(42, 4), uint8] */;
    %1112 = reshape(%1109, newshape=[]) /* ty=int64 */;
    %1113 = @func_4140(%1110, %1111, %1112) /* ty=(Tensor[(11, 11, 3), float64], Tensor[(11, 3, 1), float64], Tensor[(33), float64], Tensor[(12, 7, 2), uint8], Tensor[(42, 4), uint8], Tensor[(10, 10, 7), int64], Tensor[(1694), float64], int64) */;
    %1114 = %1085.1;
    %1115 = %1092.3;
    %1116 = maximum(%1105, %1106) /* ty=Tensor[(3, 56), int64] */;
    %1117 = %1113.5;
    (%1114, %1115, %var_7610, %var_7611, %var_7612, %1116, %1117, meta[relay.Constant][62] /* ty=Tensor[(33), float64] */, %var_7644)
  };
  %1118(%var_7654, %var_7655, %var_7656, %var_7657, %var_7658) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(847, 2), float64], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(3, 56), int64], Tensor[(10, 10, 7), int64], Tensor[(33), float64], int64) */
}

def @func_9554() -> (int64,) {
  @func_9552() /* ty=(int64,) */
}

def @func_12566(%var_12565: Tensor[(3, 6, 10), float64]) -> (Tensor[(3, 6, 10), float64],) {
  %1124 = fn (%var_12560: Tensor[(3, 6, 10), float64]) -> (Tensor[(3, 6, 10), float64],) {
    %1119 = cast(%var_12560, dtype="float64") /* ty=Tensor[(3, 6, 10), float64] */;
    %1120 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(3, 6, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1121 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 6, 10), float64] */, dtype="float64") /* ty=Tensor[(3, 6, 10), float64] */;
    %1122 = dyn.reshape(%1119, %1120, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1123 = divide(%1121, %1122) /* ty=Tensor[(3, 6, 10), float64] */;
    (%1123,)
  };
  %1124(%var_12565) /* ty=(Tensor[(3, 6, 10), float64],) */
}

def @func_15938() -> Tensor[(10, 10, 7), float32] {
  %1126 = fn () -> Tensor[(10, 10, 7), float32] {
    %1125 = @func_11396() /* ty=(Tensor[(10, 10, 7), float32],) */;
    %1125.0
  };
  %1126() /* ty=Tensor[(10, 10, 7), float32] */
}

def @func_7856(%var_7818: Tensor[(1024), float64]) -> (int64, Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(16, 8), int16], Tensor[(8, 2, 8), int16], Tensor[(4, 16, 16), float64], Tensor[(1024), float32]) {
  %1127 = cast(meta[relay.Constant][64] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %1128 = cast(meta[relay.Constant][65] /* ty=Tensor[(16, 8), int16] */, dtype="int16") /* ty=Tensor[(16, 8), int16] */;
  %1129 = reshape(%1127, newshape=[168]) /* ty=Tensor[(168), uint8] */;
  %1130 = reshape(%1128, newshape=[128]) /* ty=Tensor[(128), int16] */;
  %1131 = @func_6624(%1129, %1130) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(128), int16], Tensor[(8, 2, 8), float32], Tensor[(13, 2, 4), float64]) */;
  %1132 = cast(meta[relay.Constant][65] /* ty=Tensor[(16, 8), int16] */, dtype="int16") /* ty=Tensor[(16, 8), int16] */;
  %1133 = cast(meta[relay.Constant][65] /* ty=Tensor[(16, 8), int16] */, dtype="int16") /* ty=Tensor[(16, 8), int16] */;
  %1134 = reshape(%1132, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), int16] */;
  %1135 = reshape(%1133, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), int16] */;
  %1136 = cast(%var_7818, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %1137 = cast(%var_7818, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %1138 = reshape(%1136, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
  %1139 = reshape(%1137, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float64] */;
  %1140 = @func_934(%1138, %1139) /* ty=(Tensor[(4, 16, 16), float64],) */;
  %1141 = cast(%var_7818, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %1142 = sin(%1141) /* ty=Tensor[(1024), float64] */;
  %1143 = cast(%1142, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %1144 = @func_6845() /* ty=int64 */;
  %1145 = %1131.1;
  %1146 = @func_2205(%1134, %1135) /* ty=Tensor[(8, 2, 8), int16] */;
  %1147 = %1140.0;
  %1148 = sqrt(%1143) /* ty=Tensor[(1024), float32] */;
  (%1144, %1145, meta[relay.Constant][64] /* ty=Tensor[(168), uint8] */, meta[relay.Constant][65] /* ty=Tensor[(16, 8), int16] */, %1146, %1147, %1148)
}

def @func_7041(%var_6999: int64) -> (Tensor[(975), float32], int64, Tensor[(33), float64], Tensor[(168), uint8], int64, Tensor[(10, 10, 7), int64], Tensor[(15, 5, 10), uint16], Tensor[(10, 75), uint16], Tensor[(11, 3, 1), float64]) {
  %1149 = @func_6884() /* ty=(Tensor[(9, 14, 15), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) */;
  %1150 = cast(meta[relay.Constant][66] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %1151 = cast(meta[relay.Constant][67] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %1152 = cast(%var_6999, dtype="int64") /* ty=int64 */;
  %1153 = reshape(%1150, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %1154 = reshape(%1151, newshape=[42, 4]) /* ty=Tensor[(42, 4), uint8] */;
  %1155 = reshape(%1152, newshape=[]) /* ty=int64 */;
  %1156 = @func_4140(%1153, %1154, %1155) /* ty=(Tensor[(11, 11, 3), float64], Tensor[(11, 3, 1), float64], Tensor[(33), float64], Tensor[(12, 7, 2), uint8], Tensor[(42, 4), uint8], Tensor[(10, 10, 7), int64], Tensor[(1694), float64], int64) */;
  %1157 = %1156.7;
  %1158 = cast(%1157, dtype="int64") /* ty=int64 */;
  %1159 = reshape(%1158, newshape=[]) /* ty=int64 */;
  %1160 = @func_543(%1159) /* ty=(Tensor[(10, 10, 7), int64],) */;
  %1161 = cast(meta[relay.Constant][68] /* ty=Tensor[(10, 75), uint16] */, dtype="uint16") /* ty=Tensor[(10, 75), uint16] */;
  %1162 = cast(meta[relay.Constant][68] /* ty=Tensor[(10, 75), uint16] */, dtype="uint16") /* ty=Tensor[(10, 75), uint16] */;
  %1163 = reshape(%1161, newshape=[15, 5, 10]) /* ty=Tensor[(15, 5, 10), uint16] */;
  %1164 = reshape(%1162, newshape=[15, 5, 10]) /* ty=Tensor[(15, 5, 10), uint16] */;
  %1165 = cast(meta[relay.Constant][66] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %1166 = reshape(%1165, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %1167 = @func_908(%1166) /* ty=Tensor[(11, 3, 1), float64] */;
  %1168 = cast(%1167, dtype="float32") /* ty=Tensor[(11, 3, 1), float32] */;
  %1169 = sqrt(%1168) /* ty=Tensor[(11, 3, 1), float32] */;
  %1170 = cast(%1169, dtype="float64") /* ty=Tensor[(11, 3, 1), float64] */;
  %1171 = %1149.2;
  %1172 = %1160.0;
  %1173 = @func_5690(%1163, %1164) /* ty=Tensor[(15, 5, 10), uint16] */;
  %1174 = acos(%1170) /* ty=Tensor[(11, 3, 1), float64] */;
  (%1171, %1157, meta[relay.Constant][66] /* ty=Tensor[(33), float64] */, meta[relay.Constant][67] /* ty=Tensor[(168), uint8] */, %var_6999, %1172, %1173, meta[relay.Constant][68] /* ty=Tensor[(10, 75), uint16] */, %1174)
}

def @func_15221(%var_15216: Tensor[(3, 12, 3), uint64]) -> (Tensor[(3, 12, 3), bool],) {
  %1175 = @func_8350() /* ty=(Tensor[(3, 12, 3), uint64],) */;
  %1176 = %1175.0;
  %1177 = cast(%var_15216, dtype="bool") /* ty=Tensor[(3, 12, 3), bool] */;
  %1178 = shape_of(%1176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1179 = cast(%1176, dtype="bool") /* ty=Tensor[(3, 12, 3), bool] */;
  %1180 = dyn.reshape(%1177, %1178, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1181 = not_equal(%1179, %1180) /* ty=Tensor[(3, 12, 3), bool] */;
  (%1181,)
}

def @func_10343() -> (int64,) {
  @func_10341() /* ty=(int64,) */
}

def @func_11941() -> (Tensor[(975), uint32], Tensor[(143, 14), float64]) {
  @func_11939() /* ty=(Tensor[(975), uint32], Tensor[(143, 14), float64]) */
}

def @func_910(%var_909: Tensor[(11, 3, 1), float64]) -> Tensor[(11, 3, 1), float64] {
  %1183 = fn (%var_905: Tensor[(11, 3, 1), float64]) -> Tensor[(11, 3, 1), float64] {
    %1182 = cast(%var_905, dtype="float64") /* ty=Tensor[(11, 3, 1), float64] */;
    log2(%1182) /* ty=Tensor[(11, 3, 1), float64] */
  };
  %1183(%var_909) /* ty=Tensor[(11, 3, 1), float64] */
}

def @func_1579(%var_1577: Tensor[(12, 7, 2), uint8], %var_1578: Tensor[(12, 7, 2), uint8]) -> Tensor[(12, 7, 2), uint8] {
  @func_1575(%var_1577, %var_1578) /* ty=Tensor[(12, 7, 2), uint8] */
}

def @func_10859(%var_10857: Tensor[(6, 1, 3), int64], %var_10858: Tensor[(1694), float64]) -> (Tensor[(6, 1, 3), int64], int64, Tensor[(84), int8], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(1694), float64], int64, Tensor[(1, 4, 9), uint32], Tensor[(36), uint32]) {
  @func_10855(%var_10857, %var_10858) /* ty=(Tensor[(6, 1, 3), int64], int64, Tensor[(84), int8], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(1694), float64], int64, Tensor[(1, 4, 9), uint32], Tensor[(36), uint32]) */
}

def @func_8871() -> Tensor[(13, 2, 4), float64] {
  @func_8869() /* ty=Tensor[(13, 2, 4), float64] */
}

def @func_9494(%var_9476: Tensor[(84), int8], %var_9477: Tensor[(1694), float64]) -> (int64, Tensor[(12, 7, 12), bool], Tensor[(84), int8], Tensor[(1694), float64]) {
  %1184 = cast(%var_9476, dtype="int8") /* ty=Tensor[(84), int8] */;
  %1185 = cast(%var_9477, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %1186 = reshape(%1184, newshape=[1, 7, 12]) /* ty=Tensor[(1, 7, 12), int8] */;
  %1187 = reshape(%1185, newshape=[11, 154]) /* ty=Tensor[(11, 154), float64] */;
  %1188 = @func_2403(%1186, %1187) /* ty=(Tensor[(12, 7, 12), int8], Tensor[(11, 154), float64], int64, Tensor[(12, 7, 12), bool], Tensor[(10, 10, 7), int64]) */;
  %1189 = @func_6751() /* ty=int64 */;
  %1190 = %1188.3;
  (%1189, %1190, %var_9476, %var_9477)
}

def @func_6479(%var_6477: Tensor[(30, 6), uint8]) -> (Tensor[(10, 10, 7), int64], Tensor[(11, 3, 1), float64], Tensor[(1, 33), float64], Tensor[(4, 16, 16), float64], Tensor[(30, 6), uint8], Tensor[(1024), float64]) {
  @func_6476(%var_6477) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(11, 3, 1), float64], Tensor[(1, 33), float64], Tensor[(4, 16, 16), float64], Tensor[(30, 6), uint8], Tensor[(1024), float64]) */
}

def @func_12749(%var_12746: Tensor[(1024), float64], %var_12747: Tensor[(84), int8], %var_12748: Tensor[(168), bool]) -> (int64, Tensor[(10, 10, 7), int64], Tensor[(126), float64], Tensor[(1024), float64], Tensor[(11, 154), float64], Tensor[(10, 10, 7), int64], Tensor[(3, 56), int64], Tensor[(294), float64], Tensor[(84), int8], Tensor[(168), bool]) {
  %1213 = fn (%var_12718: Tensor[(1024), float64], %var_12739: Tensor[(84), int8], %var_12740: Tensor[(168), bool]) -> (int64, Tensor[(10, 10, 7), int64], Tensor[(126), float64], Tensor[(1024), float64], Tensor[(11, 154), float64], Tensor[(10, 10, 7), int64], Tensor[(3, 56), int64], Tensor[(294), float64], Tensor[(84), int8], Tensor[(168), bool]) {
    %1191 = cast(meta[relay.Constant][69] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %1192 = cast(%var_12718, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %1193 = cast(meta[relay.Constant][70] /* ty=Tensor[(11, 154), float64] */, dtype="float64") /* ty=Tensor[(11, 154), float64] */;
    %1194 = reshape(%1191, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
    %1195 = reshape(%1192, newshape=[2, 512]) /* ty=Tensor[(2, 512), float64] */;
    %1196 = reshape(%1193, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
    %1197 = @func_11163(%1194, %1195, %1196) /* ty=(Tensor[(1, 14, 9), float64], int64, Tensor[(10, 10, 7), int64], Tensor[(12, 14, 8), float32], Tensor[(2, 512), float64], Tensor[(1694), float64]) */;
    %1198 = cast(meta[relay.Constant][71] /* ty=Tensor[(294), float64] */, dtype="float64") /* ty=Tensor[(294), float64] */;
    %1199 = cast(%var_12739, dtype="int8") /* ty=Tensor[(84), int8] */;
    %1200 = cast(meta[relay.Constant][70] /* ty=Tensor[(11, 154), float64] */, dtype="float64") /* ty=Tensor[(11, 154), float64] */;
    %1201 = cast(%var_12740, dtype="bool") /* ty=Tensor[(168), bool] */;
    %1202 = @func_6707() /* ty=int64 */;
    %1203 = cast(%1202, dtype="int64") /* ty=int64 */;
    %1204 = reshape(%1198, newshape=[7, 42]) /* ty=Tensor[(7, 42), float64] */;
    %1205 = reshape(%1199, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %1206 = reshape(%1200, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
    %1207 = reshape(%1201, newshape=[3, 56]) /* ty=Tensor[(3, 56), bool] */;
    %1208 = reshape(%1203, newshape=[]) /* ty=int64 */;
    %1209 = @func_7653(%1204, %1205, %1206, %1207, %1208) /* ty=(Tensor[(10, 10, 7), int64], Tensor[(847, 2), float64], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(1694), float64], Tensor[(3, 56), int64], Tensor[(10, 10, 7), int64], Tensor[(33), float64], int64) */;
    %1210 = %1197.2;
    %1211 = @func_9515() /* ty=Tensor[(10, 10, 7), int64] */;
    %1212 = %1209.5;
    (%1202, %1210, meta[relay.Constant][69] /* ty=Tensor[(126), float64] */, %var_12718, meta[relay.Constant][70] /* ty=Tensor[(11, 154), float64] */, %1211, %1212, meta[relay.Constant][71] /* ty=Tensor[(294), float64] */, %var_12739, %var_12740)
  };
  %1213(%var_12746, %var_12747, %var_12748) /* ty=(int64, Tensor[(10, 10, 7), int64], Tensor[(126), float64], Tensor[(1024), float64], Tensor[(11, 154), float64], Tensor[(10, 10, 7), int64], Tensor[(3, 56), int64], Tensor[(294), float64], Tensor[(84), int8], Tensor[(168), bool]) */
}

def @func_11233() -> (int64, int64) {
  %1214 = @func_9552() /* ty=(int64,) */;
  %1215 = @func_9264() /* ty=(int64, int64) */;
  %1216 = %1214.0;
  %1217 = %1215.1;
  (%1216, %1217)
}

def @func_10004(%var_9999: Tensor[(33), float64], %var_10000: Tensor[(847, 2), float64], %var_10001: Tensor[(231), bool], %var_10002: Tensor[(11, 182), uint16], %var_10003: Tensor[(168), uint8]) -> (Tensor[(15, 5, 13), float32], Tensor[(10, 10, 7), int64], Tensor[(11, 3, 1), float64], Tensor[(33), float64], int64, Tensor[(1344), float32], Tensor[(1024), float64], Tensor[(847, 2), float64], Tensor[(15, 5, 13), float32], Tensor[(10, 10, 7), int64], Tensor[(3, 7, 11), bool], Tensor[(231), bool], Tensor[(2002), uint16], Tensor[(11, 182), uint16], Tensor[(10, 10, 7), float32], Tensor[(8, 2, 8), float32], Tensor[(168), uint8], Tensor[(128), int16]) {
  @func_9997(%var_9999, %var_10000, %var_10001, %var_10002, %var_10003) /* ty=(Tensor[(15, 5, 13), float32], Tensor[(10, 10, 7), int64], Tensor[(11, 3, 1), float64], Tensor[(33), float64], int64, Tensor[(1344), float32], Tensor[(1024), float64], Tensor[(847, 2), float64], Tensor[(15, 5, 13), float32], Tensor[(10, 10, 7), int64], Tensor[(3, 7, 11), bool], Tensor[(231), bool], Tensor[(2002), uint16], Tensor[(11, 182), uint16], Tensor[(10, 10, 7), float32], Tensor[(8, 2, 8), float32], Tensor[(168), uint8], Tensor[(128), int16]) */
}

def @func_13450() -> (Tensor[(975), float32], Tensor[(15, 5, 10), uint16], Tensor[(750), float64]) {
  %1229 = fn () -> (Tensor[(975), float32], Tensor[(15, 5, 10), uint16], Tensor[(750), float64]) {
    %1218 = cast(meta[relay.Constant][72] /* ty=Tensor[(750), uint16] */, dtype="uint16") /* ty=Tensor[(750), uint16] */;
    %1219 = cast(meta[relay.Constant][72] /* ty=Tensor[(750), uint16] */, dtype="uint16") /* ty=Tensor[(750), uint16] */;
    %1220 = reshape(%1218, newshape=[15, 5, 10]) /* ty=Tensor[(15, 5, 10), uint16] */;
    %1221 = reshape(%1219, newshape=[15, 5, 10]) /* ty=Tensor[(15, 5, 10), uint16] */;
    %1222 = cast(meta[relay.Constant][73] /* ty=Tensor[(750), uint16] */, dtype="float64") /* ty=Tensor[(750), float64] */;
    %1223 = shape_of(meta[relay.Constant][72] /* ty=Tensor[(750), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1224 = cast(meta[relay.Constant][72] /* ty=Tensor[(750), uint16] */, dtype="float64") /* ty=Tensor[(750), float64] */;
    %1225 = dyn.reshape(%1222, %1223, newshape=[]) /* ty=Tensor[(?), float64] */;
    %1226 = @func_11857() /* ty=Tensor[(975), float32] */;
    %1227 = @func_5690(%1220, %1221) /* ty=Tensor[(15, 5, 10), uint16] */;
    %1228 = divide(%1224, %1225) /* ty=Tensor[(750), float64] */;
    (%1226, %1227, %1228)
  };
  %1229() /* ty=(Tensor[(975), float32], Tensor[(15, 5, 10), uint16], Tensor[(750), float64]) */
}

def @func_9582() -> (int64,) {
  %1230 = @func_9054() /* ty=(int64,) */;
  %1231 = %1230.0;
  (%1231,)
}

def @func_9584() -> (int64,) {
  @func_9582() /* ty=(int64,) */
}

def @func_6254() -> (Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) {
  %1232 = cast(meta[relay.Constant][74] /* ty=Tensor[(13, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(13, 2, 4), float64] */;
  %1233 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1234 = reshape(%1233, newshape=[]) /* ty=int64 */;
  %1235 = @func_543(%1234) /* ty=(Tensor[(10, 10, 7), int64],) */;
  %1236 = log(%1232) /* ty=Tensor[(13, 2, 4), float64] */;
  %1237 = %1235.0;
  (%1236, %1237, -7 /* ty=int64 */)
}

def @func_7170(%var_7167: Tensor[(180), uint8], %var_7168: Tensor[(512, 2), float64], %var_7169: Tensor[(10, 10, 7), int64]) -> (Tensor[(13, 2, 4), float64], Tensor[(4, 15, 3), bool], Tensor[(180), uint8], Tensor[(10, 10, 7), float32], Tensor[(512, 2), float32]) {
  %1256 = fn (%var_7125: Tensor[(180), uint8], %var_7126: Tensor[(512, 2), float64], %var_7132: Tensor[(10, 10, 7), int64]) -> (Tensor[(13, 2, 4), float64], Tensor[(4, 15, 3), bool], Tensor[(180), uint8], Tensor[(10, 10, 7), float32], Tensor[(512, 2), float32]) {
    %1238 = @func_6658() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64]) */;
    %1239 = cast(%var_7125, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %1240 = cast(%var_7126, dtype="float64") /* ty=Tensor[(512, 2), float64] */;
    %1241 = reshape(%1239, newshape=[4, 15, 3]) /* ty=Tensor[(4, 15, 3), uint8] */;
    %1242 = reshape(%1240, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
    %1243 = @func_5998(%1241, %1242) /* ty=(Tensor[(4, 15, 3), bool], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) */;
    %1244 = @func_6558() /* ty=Tensor[(10, 10, 7), int64] */;
    %1245 = cast(%var_7132, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
    %1246 = shape_of(%1244, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1247 = cast(%1244, dtype="float32") /* ty=Tensor[(10, 10, 7), float32] */;
    %1248 = dyn.reshape(%1245, %1246, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1249 = cast(%var_7126, dtype="float32") /* ty=Tensor[(512, 2), float32] */;
    %1250 = log10(%1249) /* ty=Tensor[(512, 2), float32] */;
    %1251 = cast(%1250, dtype="float32") /* ty=Tensor[(512, 2), float32] */;
    %1252 = %1238.0;
    %1253 = %1243.0;
    %1254 = minimum(%1247, %1248) /* ty=Tensor[(10, 10, 7), float32] */;
    %1255 = log(%1251) /* ty=Tensor[(512, 2), float32] */;
    (%1252, %1253, %var_7125, %1254, %1255)
  };
  %1256(%var_7167, %var_7168, %var_7169) /* ty=(Tensor[(13, 2, 4), float64], Tensor[(4, 15, 3), bool], Tensor[(180), uint8], Tensor[(10, 10, 7), float32], Tensor[(512, 2), float32]) */
}

def @func_9820() -> Tensor[(10, 10, 7), int64] {
  %1257 = @func_6302() /* ty=(Tensor[(10, 10, 7), int64],) */;
  %1257.0
}

def @func_11858() -> Tensor[(975), float32] {
  %1258 = fn () -> Tensor[(975), float32] {
    @func_8174() /* ty=Tensor[(975), float32] */
  };
  %1258() /* ty=Tensor[(975), float32] */
}

def @func_9743() -> (int64,) {
  @func_9741() /* ty=(int64,) */
}

def @func_6002(%var_6000: Tensor[(4, 15, 3), uint8], %var_6001: Tensor[(1024), float64]) -> (Tensor[(4, 15, 3), bool], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) {
  @func_5998(%var_6000, %var_6001) /* ty=(Tensor[(4, 15, 3), bool], Tensor[(4, 16, 16), float64], Tensor[(1024), float64]) */
}

def @func_13109() -> (Tensor[(975), float32], Tensor[(10, 10, 7), int64]) {
  %1262 = fn () -> (Tensor[(975), float32], Tensor[(10, 10, 7), int64]) {
    %1259 = @func_9356() /* ty=(int64, Tensor[(975), float32], int64) */;
    %1260 = %1259.1;
    %1261 = @func_11448() /* ty=Tensor[(10, 10, 7), int64] */;
    (%1260, %1261)
  };
  %1262() /* ty=(Tensor[(975), float32], Tensor[(10, 10, 7), int64]) */
}

def @func_545(%var_544: int64) -> (Tensor[(10, 10, 7), int64],) {
  %1266 = fn (%var_538: int64) -> (Tensor[(10, 10, 7), int64],) {
    %1263 = cast(%var_538, dtype="int64") /* ty=int64 */;
    %1264 = cast(meta[relay.Constant][75] /* ty=Tensor[(10, 10, 7), int64] */, dtype="int64") /* ty=Tensor[(10, 10, 7), int64] */;
    %1265 = multiply(%1263, %1264) /* ty=Tensor[(10, 10, 7), int64] */;
    (%1265,)
  };
  %1266(%var_544) /* ty=(Tensor[(10, 10, 7), int64],) */
}

def @func_14106() -> int64 {
  %1268 = fn () -> int64 {
    %1267 = @func_9552() /* ty=(int64,) */;
    %1267.0
  };
  %1268() /* ty=int64 */
}

def @func_8802() -> (Tensor[(10, 10, 7), int64],) {
  @func_8800() /* ty=(Tensor[(10, 10, 7), int64],) */
}

def @func_11502() -> (Tensor[(975), float32], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(847, 2), bool], Tensor[(847, 2), float32]) {
  %1286 = fn () -> (Tensor[(975), float32], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(847, 2), bool], Tensor[(847, 2), float32]) {
    %1269 = @func_8014() /* ty=(Tensor[(975), float32],) */;
    %1270 = cast(meta[relay.Constant][76] /* ty=Tensor[(7, 42), float64] */, dtype="float64") /* ty=Tensor[(7, 42), float64] */;
    %1271 = cast(meta[relay.Constant][77] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
    %1272 = cast(meta[relay.Constant][78] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %1273 = reshape(%1270, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float64] */;
    %1274 = reshape(%1271, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %1275 = reshape(%1272, newshape=[847, 2]) /* ty=Tensor[(847, 2), float64] */;
    %1276 = @func_5104(%1273, %1274, %1275) /* ty=(Tensor[(14, 3, 7), float64], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(847, 2), float64]) */;
    %1277 = %1276.3;
    %1278 = cast(meta[relay.Constant][78] /* ty=Tensor[(1694), float64] */, dtype="bool") /* ty=Tensor[(1694), bool] */;
    %1279 = shape_of(%1277, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1280 = cast(%1277, dtype="bool") /* ty=Tensor[(847, 2), bool] */;
    %1281 = dyn.reshape(%1278, %1279, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1282 = cast(%1277, dtype="float32") /* ty=Tensor[(847, 2), float32] */;
    %1283 = %1269.0;
    %1284 = logical_and(%1280, %1281) /* ty=Tensor[(847, 2), bool] */;
    %1285 = atanh(%1282) /* ty=Tensor[(847, 2), float32] */;
    (%1283, meta[relay.Constant][76] /* ty=Tensor[(7, 42), float64] */, meta[relay.Constant][77] /* ty=Tensor[(84), int8] */, %1284, %1285)
  };
  %1286() /* ty=(Tensor[(975), float32], Tensor[(7, 42), float64], Tensor[(84), int8], Tensor[(847, 2), bool], Tensor[(847, 2), float32]) */
}

def @func_10604() -> (Tensor[(10, 10, 7), int64],) {
  %1287 = @func_6254() /* ty=(Tensor[(13, 2, 4), float64], Tensor[(10, 10, 7), int64], int64) */;
  %1288 = %1287.1;
  (%1288,)
}

def @func_11876() -> Tensor[(975), float32] {
  @func_11874() /* ty=Tensor[(975), float32] */
}

def @func_5945(%var_5931: Tensor[(84), int8]) -> (Tensor[(5, 5, 10), bool], Tensor[(84), int8], Tensor[(1, 294), float64], Tensor[(84), int8], Tensor[(847, 2), float64]) {
  %1289 = cast(meta[relay.Constant][80] /* ty=Tensor[(5, 5, 10), int32] */, dtype="bool") /* ty=Tensor[(5, 5, 10), bool] */;
  %1290 = shape_of(meta[relay.Constant][79] /* ty=Tensor[(5, 5, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1291 = cast(meta[relay.Constant][79] /* ty=Tensor[(5, 5, 10), int32] */, dtype="bool") /* ty=Tensor[(5, 5, 10), bool] */;
  %1292 = dyn.reshape(%1289, %1290, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1293 = cast(meta[relay.Constant][81] /* ty=Tensor[(1, 294), float64] */, dtype="float64") /* ty=Tensor[(1, 294), float64] */;
  %1294 = cast(%var_5931, dtype="int8") /* ty=Tensor[(84), int8] */;
  %1295 = cast(meta[relay.Constant][82] /* ty=Tensor[(847, 2), float64] */, dtype="float64") /* ty=Tensor[(847, 2), float64] */;
  %1296 = reshape(%1293, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float64] */;
  %1297 = reshape(%1294, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %1298 = reshape(%1295, newshape=[847, 2]) /* ty=Tensor[(847, 2), float64] */;
  %1299 = @func_5104(%1296, %1297, %1298) /* ty=(Tensor[(14, 3, 7), float64], Tensor[(10, 10, 7), int64], Tensor[(84), int8], Tensor[(847, 2), float64]) */;
  %1300 = greater(%1291, %1292) /* ty=Tensor[(5, 5, 10), bool] */;
  %1301 = %1299.2;
  (%1300, %1301, meta[relay.Constant][81] /* ty=Tensor[(1, 294), float64] */, %var_5931, meta[relay.Constant][82] /* ty=Tensor[(847, 2), float64] */)
}

def @func_15873() -> Tensor[(10, 10, 7), int64] {
  %1303 = fn () -> Tensor[(10, 10, 7), int64] {
    %1302 = @func_12339() /* ty=(Tensor[(975), float32], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), float64], Tensor[(10, 10, 7), float32], Tensor[(1, 36), uint32], Tensor[(180), uint8]) */;
    %1302.1
  };
  %1303() /* ty=Tensor[(10, 10, 7), int64] */
}

def @func_11697(%var_11694: Tensor[(7, 7, 15), int64], %var_11695: Tensor[(7, 7, 15), int64], %var_11696: Tensor[(168), uint8]) -> (int64, Tensor[(7, 7, 15), bool], Tensor[(10, 10, 7), int64], int64, Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(10, 10, 7), int64], Tensor[(84, 1), int8]) {
  @func_11692(%var_11694, %var_11695, %var_11696) /* ty=(int64, Tensor[(7, 7, 15), bool], Tensor[(10, 10, 7), int64], int64, Tensor[(12, 7, 2), bool], Tensor[(168), uint8], Tensor[(10, 10, 7), int64], Tensor[(84, 1), int8]) */
}

def @func_5693(%var_5691: Tensor[(15, 5, 10), uint16], %var_5692: Tensor[(15, 5, 10), uint16]) -> Tensor[(15, 5, 10), uint16] {
  %1308 = fn (%var_5683: Tensor[(15, 5, 10), uint16], %var_5684: Tensor[(15, 5, 10), uint16]) -> Tensor[(15, 5, 10), uint16] {
    %1304 = cast(%var_5684, dtype="uint16") /* ty=Tensor[(15, 5, 10), uint16] */;
    %1305 = shape_of(%var_5683, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1306 = cast(%var_5683, dtype="uint16") /* ty=Tensor[(15, 5, 10), uint16] */;
    %1307 = dyn.reshape(%1304, %1305, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    right_shift(%1306, %1307) /* ty=Tensor[(15, 5, 10), uint16] */
  };
  %1308(%var_5691, %var_5692) /* ty=Tensor[(15, 5, 10), uint16] */
}

def @func_12196(%var_12193: Tensor[(1694), float64]) -> (int64, Tensor[(6, 1, 3), int64], Tensor[(18, 1), int64], Tensor[(1694), float64]) {
  %1309 = cast(meta[relay.Constant][83] /* ty=Tensor[(18, 1), int64] */, dtype="int64") /* ty=Tensor[(18, 1), int64] */;
  %1310 = cast(%var_12193, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %1311 = reshape(%1309, newshape=[6, 1, 3]) /* ty=Tensor[(6, 1, 3), int64] */;
  %1312 = reshape(%1310, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %1313 = @func_10855(%1311, %1312) /* ty=(Tensor[(6, 1, 3), int64], int64, Tensor[(84), int8], Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(1694), float64], int64, Tensor[(1, 4, 9), uint32], Tensor[(36), uint32]) */;
  %1314 = @func_10052() /* ty=int64 */;
  %1315 = %1313.0;
  (%1314, %1315, meta[relay.Constant][83] /* ty=Tensor[(18, 1), int64] */, %var_12193)
}

def @func_14282() -> int64 {
  %1316 = @func_13792() /* ty=(Tensor[(10, 10, 7), int64], int64, Tensor[(10, 10, 7), int64]) */;
  %1316.1
}

def @func_16186(%var_16185: Tensor[(10, 10, 7), int64]) -> (Tensor[(10, 10, 7), bool], int64) {
  %1325 = fn (%var_16159: Tensor[(10, 10, 7), int64]) -> (Tensor[(10, 10, 7), bool], int64) {
    %1317 = @func_14729() /* ty=Tensor[(10, 10, 7), int64] */;
    %1318 = cast(%var_16159, dtype="bool") /* ty=Tensor[(10, 10, 7), bool] */;
    %1319 = shape_of(%1317, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1320 = cast(%1317, dtype="bool") /* ty=Tensor[(10, 10, 7), bool] */;
    %1321 = dyn.reshape(%1318, %1319, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1322 = @func_12014() /* ty=(int64, Tensor[(10, 10, 7), int64]) */;
    %1323 = equal(%1320, %1321) /* ty=Tensor[(10, 10, 7), bool] */;
    %1324 = %1322.0;
    (%1323, %1324)
  };
  %1325(%var_16185) /* ty=(Tensor[(10, 10, 7), bool], int64) */
}

def @func_10356() -> Tensor[(975), float32] {
  @func_10354() /* ty=Tensor[(975), float32] */
}

def @func_14951() -> int64 {
  %1327 = fn () -> int64 {
    %1326 = @func_9264() /* ty=(int64, int64) */;
    %1326.0
  };
  %1327() /* ty=int64 */
}

def @func_6708() -> int64 {
  %1329 = fn () -> int64 {
    %1328 = @func_6528() /* ty=(int64,) */;
    %1328.0
  };
  %1329() /* ty=int64 */
}

def @func_6884() -> (Tensor[(9, 14, 15), float32], Tensor[(15, 5, 13), float32], Tensor[(975), float32]) {
  %1330 = cast(meta[relay.Constant][84] /* ty=Tensor[(9, 14, 15), float32] */, dtype="float32") /* ty=Tensor[(9, 14, 15), float32] */;
  %1331 = cast(meta[relay.Constant][85] /* ty=Tensor[(975), float32] */, dtype="float32") /* ty=Tensor[(975), float32] */;
  %1332 = reshape(%1331, newshape=[15, 5, 13]) /* ty=Tensor[(15, 5, 13), float32] */;
  %1333 = @func_2112(%1332) /* ty=(Tensor[(15, 5, 13), float32],) */;
  %1334 = cos(%1330) /* ty=Tensor[(9, 14, 15), float32] */;
  %1335 = %1333.0;
  (%1334, %1335, meta[relay.Constant][85] /* ty=Tensor[(975), float32] */)
}

def @func_15948() -> (int64, int64) {
  %1339 = fn () -> (int64, int64) {
    %1336 = @func_11233() /* ty=(int64, int64) */;
    %1337 = %1336.1;
    %1338 = @func_14105() /* ty=int64 */;
    (%1337, %1338)
  };
  %1339() /* ty=(int64, int64) */
}

def @func_12831() -> (int64, Tensor[(3, 28), int8], Tensor[(15, 5, 13), float32]) {
  %1340 = @func_11233() /* ty=(int64, int64) */;
  %1341 = @func_10106() /* ty=(Tensor[(10, 10, 7), int64], Tensor[(10, 10, 7), int64], Tensor[(3, 28), int8], Tensor[(1, 4, 9), uint32], Tensor[(36), uint32]) */;
  %1342 = @func_8136() /* ty=(Tensor[(15, 5, 13), float32],) */;
  %1343 = %1340.0;
  %1344 = %1341.2;
  %1345 = %1342.0;
  (%1343, %1344, %1345)
}

def @func_12016() -> (int64, Tensor[(10, 10, 7), int64]) {
  @func_12014() /* ty=(int64, Tensor[(10, 10, 7), int64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen936/build/output.py:3973: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen936/build/output.py", line 3978, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(84) tvmgen_default_fused_reshape_right_shift_kernel0(int* __restrict__ T_right_shift, int* __restrict__ placeholder, int* __restrict__ placeholder1) {
  T_right_shift[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] >> placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


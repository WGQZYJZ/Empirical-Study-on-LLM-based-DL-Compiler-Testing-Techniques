import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_17 = relay.var("var_17", dtype = "float32", shape = (8, 1, 9))#candidate|17|(8, 1, 9)|var|float32
uop_18 = relay.log(var_17.astype('float32')) # shape=(8, 1, 9)
bop_31 = relay.greater_equal(uop_18.astype('bool'), relay.reshape(var_17.astype('bool'), relay.shape_of(uop_18))) # shape=(8, 1, 9)
output = bop_31
output2 = bop_31
func_42 = relay.Function([var_17,], output)
mod['func_42'] = func_42
mod = relay.transform.InferType()(mod)
mutated_mod['func_42'] = func_42
mutated_mod = relay.transform.InferType()(mutated_mod)
var_43 = relay.var("var_43", dtype = "float32", shape = (8, 1, 9))#candidate|43|(8, 1, 9)|var|float32
func_42_call = mutated_mod.get_global_var('func_42')
call_44 = func_42_call(var_43)
output = call_44
func_45 = relay.Function([var_43], output)
mutated_mod['func_45'] = func_45
mutated_mod = relay.transform.InferType()(mutated_mod)
var_79 = relay.var("var_79", dtype = "float32", shape = (10, 6, 16))#candidate|79|(10, 6, 16)|var|float32
uop_80 = relay.atan(var_79.astype('float32')) # shape=(10, 6, 16)
func_42_call = mod.get_global_var('func_42')
func_45_call = mutated_mod.get_global_var('func_45')
var_83 = relay.var("var_83", dtype = "float32", shape = (1, 72))#candidate|83|(1, 72)|var|float32
call_82 = func_42_call(relay.reshape(var_83.astype('float32'), [8, 1, 9]))
call_84 = func_42_call(relay.reshape(var_83.astype('float32'), [8, 1, 9]))
output = relay.Tuple([uop_80,call_82,var_83,])
output2 = relay.Tuple([uop_80,call_84,var_83,])
func_91 = relay.Function([var_79,var_83,], output)
mod['func_91'] = func_91
mod = relay.transform.InferType()(mod)
mutated_mod['func_91'] = func_91
mutated_mod = relay.transform.InferType()(mutated_mod)
func_91_call = mutated_mod.get_global_var('func_91')
var_93 = relay.var("var_93", dtype = "float32", shape = (10, 6, 16))#candidate|93|(10, 6, 16)|var|float32
var_94 = relay.var("var_94", dtype = "float32", shape = (1, 72))#candidate|94|(1, 72)|var|float32
call_92 = func_91_call(var_93,var_94,)
output = call_92
func_95 = relay.Function([var_93,var_94,], output)
mutated_mod['func_95'] = func_95
mutated_mod = relay.transform.InferType()(mutated_mod)
const_271 = relay.const([[[6.826359,-3.934006],[-4.360852,-9.062237],[7.435631,1.947647],[3.843978,-1.764338],[0.940840,9.009157],[-3.152642,2.058914],[-4.916453,8.438425],[1.851958,-8.755718],[5.518945,7.551047]],[[1.847461,-9.079084],[-2.924055,-4.483172],[4.567458,-3.280815],[1.570703,7.828626],[0.211394,-7.408229],[-8.284676,7.445921],[6.533575,-9.112849],[-4.020744,-4.709950],[5.522003,-0.917357]],[[-8.469153,2.652217],[1.023149,-7.318768],[8.692942,1.300406],[-2.417177,-5.182799],[9.277887,8.725462],[-6.243800,5.241497],[4.534196,-4.692566],[2.670983,8.883584],[6.679418,3.684891]],[[-6.948301,-9.790583],[4.896700,4.259309],[3.801430,-0.834044],[0.308766,3.505331],[4.654921,-4.770611],[-2.575854,0.720760],[6.662846,-1.614780],[9.750594,-3.446020],[5.900328,6.850903]],[[-6.825611,7.338373],[5.145615,-4.776762],[9.856058,-7.633416],[0.865767,9.521215],[8.706051,4.630479],[4.881457,4.518136],[2.682426,8.596184],[-5.210413,3.225655],[2.541069,8.635685]],[[8.369604,7.879005],[1.052967,3.452318],[-6.949194,5.558052],[-6.108771,-7.083006],[-2.989344,-7.525515],[9.831165,-9.105345],[1.072743,-2.162381],[-8.497907,3.611802],[-2.183304,-6.143670]],[[-6.080818,-9.691234],[6.762869,-5.064132],[-2.113483,2.286053],[-5.493573,-3.536932],[0.989976,-3.136868],[-5.743003,8.358734],[-1.525698,-6.548421],[4.286428,-3.186890],[7.784577,-7.453362]],[[-1.951869,-6.228356],[-7.020186,7.394084],[9.934149,-4.819421],[6.094741,7.289438],[-1.524008,-4.257450],[2.585569,2.041834],[-7.600758,-6.208240],[-9.728861,-6.763506],[9.782331,2.647714]],[[-3.604558,0.626264],[-3.075417,6.206632],[-7.704005,8.459533],[1.288100,9.003976],[6.800791,-7.825883],[-0.436966,0.738147],[7.963204,-2.541718],[-0.607335,-5.711900],[-9.793189,-6.168655]],[[-8.723514,-2.709693],[2.644246,0.241738],[-0.981558,3.067981],[8.769246,9.198180],[9.978812,-8.378675],[-9.490303,4.116052],[-9.696010,7.947745],[3.637681,0.943328],[7.584196,-6.321420]]], dtype = "float64")#candidate|271|(10, 9, 2)|const|float64
uop_272 = relay.cosh(const_271.astype('float64')) # shape=(10, 9, 2)
func_91_call = mod.get_global_var('func_91')
func_95_call = mutated_mod.get_global_var('func_95')
var_279 = relay.var("var_279", dtype = "float32", shape = (960,))#candidate|279|(960,)|var|float32
const_280 = relay.const([[-2.031796,5.667536,-8.743269,7.617917,6.041343,-2.977083,6.430283,9.606994,-7.759074,4.630187,-7.302087,7.344439,-1.245783,7.272273,-7.584164,-3.439024,-4.542259,2.942521,-3.309070,-4.544367,0.228556,8.563713,-6.400819,-0.777398],[-6.636177,-7.914817,1.838845,-5.225324,-3.477881,9.716327,6.607147,-3.172447,5.911349,-9.912808,-3.667095,4.340195,-5.859915,0.083584,9.907269,7.422985,0.670744,-7.016245,-4.739897,-2.165403,-3.884297,3.311008,6.469358,-0.733569],[-8.334188,-4.079839,6.264849,-0.056658,-8.902318,-4.925403,-0.583158,7.939320,9.195193,-4.332601,1.046736,6.077622,-4.992021,6.673558,-9.184640,-8.143356,3.533004,0.424763,4.406054,-4.821253,4.889639,2.966967,-5.491534,0.879363]], dtype = "float32")#candidate|280|(3, 24)|const|float32
call_278 = relay.TupleGetItem(func_91_call(relay.reshape(var_279.astype('float32'), [10, 6, 16]), relay.reshape(const_280.astype('float32'), [1, 72]), ), 1)
call_281 = relay.TupleGetItem(func_95_call(relay.reshape(var_279.astype('float32'), [10, 6, 16]), relay.reshape(const_280.astype('float32'), [1, 72]), ), 1)
bop_293 = relay.right_shift(const_280.astype('int16'), relay.reshape(call_278.astype('int16'), relay.shape_of(const_280))) # shape=(3, 24)
bop_296 = relay.right_shift(const_280.astype('int16'), relay.reshape(call_281.astype('int16'), relay.shape_of(const_280))) # shape=(3, 24)
var_315 = relay.var("var_315", dtype = "float64", shape = (10, 9, 2))#candidate|315|(10, 9, 2)|var|float64
bop_316 = relay.less(uop_272.astype('bool'), relay.reshape(var_315.astype('bool'), relay.shape_of(uop_272))) # shape=(10, 9, 2)
uop_319 = relay.tan(call_278.astype('float32')) # shape=(8, 1, 9)
uop_321 = relay.tan(call_281.astype('float32')) # shape=(8, 1, 9)
output = relay.Tuple([var_279,bop_293,bop_316,uop_319,])
output2 = relay.Tuple([var_279,bop_296,bop_316,uop_321,])
func_327 = relay.Function([var_279,var_315,], output)
mod['func_327'] = func_327
mod = relay.transform.InferType()(mod)
mutated_mod['func_327'] = func_327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_327_call = mutated_mod.get_global_var('func_327')
var_329 = relay.var("var_329", dtype = "float32", shape = (960,))#candidate|329|(960,)|var|float32
var_330 = relay.var("var_330", dtype = "float64", shape = (10, 9, 2))#candidate|330|(10, 9, 2)|var|float64
call_328 = func_327_call(var_329,var_330,)
output = call_328
func_331 = relay.Function([var_329,var_330,], output)
mutated_mod['func_331'] = func_331
mutated_mod = relay.transform.InferType()(mutated_mod)
var_617 = relay.var("var_617", dtype = "uint32", shape = ())#candidate|617|()|var|uint32
var_618 = relay.var("var_618", dtype = "uint32", shape = (15, 4, 10))#candidate|618|(15, 4, 10)|var|uint32
bop_619 = relay.add(var_617.astype('uint32'), var_618.astype('uint32')) # shape=(15, 4, 10)
output = bop_619
output2 = bop_619
func_634 = relay.Function([var_617,var_618,], output)
mod['func_634'] = func_634
mod = relay.transform.InferType()(mod)
var_635 = relay.var("var_635", dtype = "uint32", shape = ())#candidate|635|()|var|uint32
var_636 = relay.var("var_636", dtype = "uint32", shape = (15, 4, 10))#candidate|636|(15, 4, 10)|var|uint32
output = func_634(var_635,var_636,)
func_637 = relay.Function([var_635,var_636,], output)
mutated_mod['func_637'] = func_637
mutated_mod = relay.transform.InferType()(mutated_mod)
var_696 = relay.var("var_696", dtype = "int8", shape = (15, 8, 16))#candidate|696|(15, 8, 16)|var|int8
const_697 = relay.const([[[10,-1,10,1,7,6,-10,-6,6,-5,-7,-2,6,4,2,6],[-7,-4,-8,-2,-1,-8,9,7,-7,10,5,-1,-5,7,-4,-1],[7,-9,2,-1,-2,-4,-4,-8,7,6,-1,-3,6,8,-2,-1],[6,-5,1,-3,-6,6,10,-10,4,-9,5,-5,-3,-10,-2,7],[1,8,9,-5,-10,2,4,9,7,5,1,4,-1,-10,-5,2],[-8,-6,-6,9,-9,-8,-4,-1,6,-5,-5,2,1,-10,-8,2],[7,-4,-10,-8,5,-4,-6,7,10,-2,1,3,-7,-10,-7,2],[2,-8,-8,-3,-6,-9,-1,-6,-10,-8,-2,5,-5,-4,-9,8]],[[-2,-6,-5,-1,-6,-3,7,-2,6,8,-10,-7,7,-9,8,8],[4,-8,4,9,-2,-9,-10,7,-10,5,-7,-6,6,3,-3,-3],[6,7,5,-10,-6,5,1,-3,-7,2,3,-10,-5,4,-5,-6],[-2,-3,-9,-1,3,1,6,-6,2,-6,-7,-7,-3,-2,-10,1],[3,7,8,-5,6,6,9,4,9,-8,10,9,-6,2,-1,-8],[-9,-6,-6,10,6,1,-6,-9,-9,-1,4,-2,3,8,7,10],[-2,-2,7,10,8,9,8,-10,6,-6,3,3,-10,-10,9,-4],[6,1,10,7,3,-1,-5,-8,2,3,1,-1,-7,9,-3,-6]],[[3,-4,-9,10,-8,-2,3,6,-5,-3,5,7,-7,7,-1,10],[-2,-6,5,2,-8,8,4,9,5,6,-5,3,9,-3,6,-4],[-10,-9,8,-10,-6,8,-4,-9,-8,-10,-8,-5,4,-9,1,-1],[6,8,1,-2,6,-7,6,7,3,-5,2,-9,-7,-9,4,1],[-9,-7,7,-7,7,1,-4,-7,8,9,3,-8,-8,1,6,3],[-3,6,-8,-10,1,-2,2,9,3,-9,5,9,4,-5,-3,6],[1,-5,6,-5,9,-9,7,10,-7,-8,-8,-8,-8,1,-5,1],[-10,2,2,-3,5,1,-4,-3,1,5,-10,-10,-10,-4,-9,-9]],[[-1,-4,-10,-5,1,-8,8,5,-7,-9,-5,-7,-3,10,-8,-10],[1,4,-3,10,-7,-10,-2,-6,-7,-5,-5,7,-5,-9,-7,-2],[7,2,4,-5,-10,6,1,-2,7,1,2,-10,-7,2,10,-2],[1,-6,-4,6,9,8,3,8,-9,-2,9,10,10,1,7,6],[7,-2,6,-9,-9,-5,-8,4,2,-8,7,10,-9,9,6,1],[9,6,-3,-2,-3,7,-8,7,-7,4,3,3,-4,-8,-10,-4],[4,6,-5,10,-5,-9,7,4,3,10,-1,7,-9,-6,4,8],[1,5,-4,6,-1,-2,-1,4,4,9,1,3,-3,-9,-8,-6]],[[2,-7,-8,6,5,10,4,-1,2,-6,-8,-2,-7,-7,-9,3],[6,-10,10,6,3,3,-1,-10,4,7,4,-2,-10,5,2,1],[-10,2,6,-7,-3,-10,7,-9,-5,-3,-6,9,6,5,4,5],[8,5,-5,-7,-5,5,9,2,-2,5,2,6,-10,5,1,-9],[9,-5,8,-5,10,-4,-5,3,3,-7,-1,-4,-6,-4,-1,5],[7,-4,-1,8,10,8,-10,5,8,8,-7,-8,-1,9,5,10],[4,-7,-5,-6,-8,-10,-7,2,9,3,-2,10,-3,-5,-2,2],[-1,1,-7,10,-3,-4,9,6,-5,5,-9,-3,3,5,-5,1]],[[8,-3,-1,10,7,-6,9,-4,8,4,-6,4,-4,-5,5,-6],[-10,-10,6,-4,-6,-9,2,-1,-5,-10,3,10,-10,-8,-3,-10],[5,-3,-1,-4,-9,4,-8,-2,2,-4,5,-2,-1,1,-7,6],[-2,3,-5,-10,1,4,1,-2,9,9,2,-10,-4,-6,2,2],[-10,-7,3,-7,-1,2,8,-8,10,10,3,-4,1,-7,-1,-8],[6,-5,-3,3,-5,10,9,-2,-5,10,2,-4,-5,7,2,6],[-1,8,3,-9,-6,-4,5,5,-10,-10,8,-7,-7,-8,10,-8],[5,4,-7,10,10,-8,2,6,8,-6,10,-1,8,7,-5,10]],[[2,10,8,3,-4,4,-6,-9,8,5,9,-6,-5,-6,7,2],[1,-1,2,9,-6,-3,5,1,7,3,1,-2,2,9,-5,3],[1,-5,7,-10,-6,7,6,7,3,-1,1,3,1,-7,10,-2],[-1,5,-10,-10,1,10,-7,-1,8,5,5,-5,7,-3,-1,2],[-2,9,-4,-10,8,2,-6,-6,-5,6,-8,-8,-2,-5,-8,4],[-4,3,5,2,-3,9,-7,6,7,-4,10,3,7,-6,3,-8],[-4,-4,4,2,-8,9,-9,9,-4,2,-7,7,-1,10,4,2],[8,-6,-9,2,-3,-5,3,-10,-7,10,-7,9,-1,-5,-6,2]],[[10,6,10,1,6,-10,1,5,-2,3,5,1,-2,10,3,2],[4,7,4,9,-5,9,9,-4,-1,4,3,-2,4,-3,-8,10],[-10,7,-6,-6,-5,7,-2,-7,-1,1,-8,7,6,9,-4,5],[-8,2,9,5,6,10,-2,-1,9,7,4,9,5,-4,-9,-4],[1,10,-5,-6,4,9,4,-1,1,-4,1,6,1,6,9,6],[-8,-2,9,4,-5,-3,4,-3,1,9,-1,9,-5,4,5,-7],[-6,7,-8,-1,5,-1,-8,-3,4,-1,9,8,5,1,2,4],[-9,-3,4,-10,-8,10,-7,-4,-7,5,5,3,5,-9,-3,5]],[[3,-9,-4,10,1,-7,-2,-7,-6,-6,-6,-10,-2,10,-1,7],[2,3,-4,9,2,4,-7,-5,-5,-5,-10,4,1,9,-8,7],[4,-8,-4,4,3,10,-10,4,-5,-8,1,9,5,-7,6,-3],[-6,9,-7,6,2,9,-10,-9,9,2,-1,-5,2,-7,6,9],[2,1,-10,7,-2,5,-7,-1,-4,-8,5,-1,-5,-5,10,-2],[1,-2,-10,-4,3,-6,-8,9,-1,6,2,5,8,10,-4,-2],[8,8,1,10,-3,-6,-5,-2,-4,2,-8,7,7,-7,4,7],[-3,9,9,10,8,-5,-5,-7,7,-8,8,-4,5,-7,-1,10]],[[-3,10,8,6,-9,7,7,-2,-7,1,6,-10,7,1,-6,-1],[-9,1,-2,1,5,3,4,-8,8,4,-5,6,-6,9,7,10],[-1,-3,-7,4,2,6,3,-7,-3,6,7,-9,10,-4,-10,-4],[7,-5,2,8,5,10,-10,-2,9,-1,9,-1,2,7,-2,-4],[-6,3,6,-2,5,-2,2,-8,-1,9,-2,10,-6,5,-8,6],[6,4,1,5,-9,-1,-1,1,-7,-4,1,-3,1,-6,5,-2],[1,4,-3,8,-8,-4,5,2,6,-2,-8,-5,-3,7,-4,10],[7,7,-5,-2,3,3,-1,-3,9,-5,2,-7,10,-4,4,-10]],[[-10,-1,-6,-9,8,9,4,-4,9,1,9,6,-3,6,6,8],[-6,4,-1,1,4,-9,-3,-3,-4,4,4,5,-4,-5,-6,10],[-4,-4,-7,6,-6,-10,-10,1,-7,7,9,-9,2,3,10,2],[6,-3,-10,4,6,4,7,9,-2,-9,10,-2,-3,10,8,7],[9,-9,-9,-6,-7,2,-8,1,-7,1,-8,10,9,7,4,-3],[6,-2,7,1,-8,9,3,-6,-2,-8,1,4,-9,-9,-6,6],[6,-6,-5,8,-9,-1,-9,-3,-7,3,-10,-8,-9,2,1,5],[5,2,-8,5,-7,8,-7,-7,1,-10,7,9,-7,1,-8,-7]],[[8,3,10,-1,-6,3,9,6,1,2,6,-6,-2,-4,3,-3],[3,-5,4,1,7,3,-7,-8,7,-8,9,9,-3,4,-4,-5],[3,-1,-9,10,8,4,4,-2,9,-7,6,-4,9,-4,-4,-2],[-10,5,5,7,-1,-9,-10,8,-2,10,1,6,-1,-4,9,2],[-1,3,6,-1,9,-2,10,-10,6,-2,-3,8,-1,9,-8,-3],[1,7,4,-4,8,3,5,2,-3,-8,-7,2,-9,-9,-3,-8],[-6,4,2,4,4,-8,1,10,-8,-10,-7,2,5,-4,4,5],[-6,-2,6,10,1,9,-10,6,9,3,-10,3,8,4,-9,2]],[[7,-6,7,-3,6,2,2,3,6,9,-3,-3,-10,-3,-5,6],[6,-7,10,3,3,-9,5,-10,2,-7,2,7,7,2,-4,8],[-10,5,8,-5,5,-7,10,1,7,-8,-10,-2,5,-10,2,-1],[6,4,5,-4,3,-3,9,4,4,6,7,2,3,4,-2,8],[2,10,3,-2,-7,1,8,3,-7,5,-8,9,9,-7,-10,-8],[10,2,4,-10,-8,9,4,6,-3,-9,-8,-4,-4,9,-7,6],[7,-9,-1,-1,9,3,-2,-9,1,-7,6,7,4,4,3,9],[8,-10,-8,-6,-3,-2,-9,1,7,-1,1,5,-4,-7,8,8]],[[5,-5,-2,-1,9,1,2,-7,4,-6,-6,10,-1,-8,2,-7],[5,-1,-2,-4,-6,6,-1,-1,-1,-9,1,6,6,-2,-1,7],[-10,4,3,-2,5,10,-1,8,-9,8,6,-1,7,3,4,-3],[-8,-8,-5,3,10,-5,-6,4,1,5,-5,2,-2,7,4,-4],[-9,5,-3,-3,2,6,2,-3,-2,-2,7,-7,6,-6,-8,-5],[3,10,-8,10,2,10,-6,8,-5,4,-2,-2,-7,-1,9,1],[-5,1,-5,-5,-9,-2,10,-4,8,-7,-9,1,7,10,-7,1],[1,5,-5,2,7,-10,1,4,-9,10,-9,-5,-4,-4,7,2]],[[7,3,-10,-5,-8,4,6,9,-8,-5,-1,-3,5,-5,-5,10],[6,4,-8,-3,-2,8,-4,3,-7,10,9,4,-3,8,-7,9],[-4,7,10,8,6,9,-2,-3,3,10,9,7,2,9,6,3],[9,-1,10,10,-7,8,-1,10,-6,-7,-4,-4,-2,6,-9,9],[8,8,1,-6,6,8,4,-3,-10,-5,7,-1,-4,-8,-7,-2],[6,5,-7,6,4,3,5,10,6,-10,-7,-3,-9,6,7,4],[-8,-3,-9,-8,-6,-3,-7,-6,10,-8,-8,-10,2,-4,-3,-6],[-7,-6,1,-1,7,8,7,-10,2,6,9,-9,-1,1,1,-3]]], dtype = "int8")#candidate|697|(15, 8, 16)|const|int8
bop_698 = relay.right_shift(var_696.astype('int8'), relay.reshape(const_697.astype('int8'), relay.shape_of(var_696))) # shape=(15, 8, 16)
func_42_call = mod.get_global_var('func_42')
func_45_call = mutated_mod.get_global_var('func_45')
const_702 = relay.const([1.642224,-8.961800,-7.277742,-8.803684,3.221905,-2.585994,-9.018794,-8.686304,-8.426208,1.832341,9.677988,-9.196805,-7.894809,5.484192,-3.883792,-0.610497,9.293108,4.775230,-9.710511,1.559695,-0.137957,9.269680,5.182077,-8.333615,4.135685,-0.724120,0.823654,-4.133345,-6.548943,7.268227,8.103439,9.725556,1.694762,1.911537,-6.260464,9.639548,-2.437519,4.313031,-0.919520,7.133899,1.414943,-4.839606,2.823546,1.523235,7.783260,-3.832596,-8.111007,4.405088,3.610852,-2.538195,0.502426,-2.188655,-4.031910,-0.931694,5.308707,-8.790402,9.015228,2.516675,0.092478,2.234373,-4.258135,4.370471,0.659766,-1.057158,3.900777,-7.389819,-9.868464,8.896966,-6.576696,-7.672437,0.748522,-7.436960], dtype = "float32")#candidate|702|(72,)|const|float32
call_701 = func_42_call(relay.reshape(const_702.astype('float32'), [8, 1, 9]))
call_703 = func_42_call(relay.reshape(const_702.astype('float32'), [8, 1, 9]))
uop_714 = relay.exp(bop_698.astype('float32')) # shape=(15, 8, 16)
output = relay.Tuple([call_701,const_702,uop_714,])
output2 = relay.Tuple([call_703,const_702,uop_714,])
func_718 = relay.Function([var_696,], output)
mod['func_718'] = func_718
mod = relay.transform.InferType()(mod)
mutated_mod['func_718'] = func_718
mutated_mod = relay.transform.InferType()(mutated_mod)
var_719 = relay.var("var_719", dtype = "int8", shape = (15, 8, 16))#candidate|719|(15, 8, 16)|var|int8
func_718_call = mutated_mod.get_global_var('func_718')
call_720 = func_718_call(var_719)
output = call_720
func_721 = relay.Function([var_719], output)
mutated_mod['func_721'] = func_721
mutated_mod = relay.transform.InferType()(mutated_mod)
var_867 = relay.var("var_867", dtype = "float64", shape = (3, 14, 2))#candidate|867|(3, 14, 2)|var|float64
uop_868 = relay.atan(var_867.astype('float64')) # shape=(3, 14, 2)
output = relay.Tuple([uop_868,])
output2 = relay.Tuple([uop_868,])
func_873 = relay.Function([var_867,], output)
mod['func_873'] = func_873
mod = relay.transform.InferType()(mod)
var_874 = relay.var("var_874", dtype = "float64", shape = (3, 14, 2))#candidate|874|(3, 14, 2)|var|float64
output = func_873(var_874)
func_875 = relay.Function([var_874], output)
mutated_mod['func_875'] = func_875
mutated_mod = relay.transform.InferType()(mutated_mod)
const_913 = relay.const([[[9,-6,-6,-8,4,4,4,5,1,4,2],[7,-1,-3,5,2,-3,-4,-5,1,-6,9],[3,8,7,6,-5,1,1,4,-5,9,-7],[6,-5,-3,2,-1,-8,-8,10,-6,6,-4],[-1,-2,-7,6,-4,-5,-1,-10,-2,7,9],[-5,-9,7,-8,2,-1,8,7,-3,-10,8],[9,-2,8,-1,5,5,4,-1,4,4,10],[-5,-9,6,7,1,-3,-6,-4,-5,10,-3]],[[5,-9,-7,-4,6,-4,6,-6,-5,8,2],[8,-1,-3,4,-5,1,-7,8,7,-9,-1],[-2,-9,-6,4,10,-1,4,2,-1,-8,3],[-3,7,9,1,-10,-8,2,5,-9,-8,8],[6,2,6,-2,-5,4,-4,-7,-4,10,9],[4,-5,-1,-5,5,-8,9,-6,7,-3,-7],[-3,-4,3,-6,3,6,-7,1,7,-3,4],[9,2,-5,-6,-4,7,7,-9,4,-5,9]],[[9,-3,-7,-1,8,-3,7,-7,-10,-3,8],[-9,-3,8,3,-3,9,-9,2,-1,10,-1],[4,2,-9,-1,5,6,2,9,3,-8,-7],[1,8,2,-8,7,-2,-5,3,10,5,9],[9,-3,-1,-5,9,-10,9,-5,4,8,10],[-9,-9,-5,4,-4,-4,-3,1,5,-5,-6],[-4,1,4,4,-3,7,1,-8,5,-7,-2],[-6,-10,2,-4,10,-1,6,2,-7,4,-7]],[[-7,-9,9,-3,-8,-6,8,4,6,9,-6],[-3,8,1,6,-6,-5,7,-3,-8,9,-7],[-10,8,6,-5,4,-1,10,4,-2,-10,7],[4,8,-1,4,2,1,-3,-7,9,6,6],[6,1,2,6,7,-1,1,-1,-2,-8,5],[9,-10,5,-10,2,-1,-5,-4,-4,10,7],[-9,-6,-3,3,-8,10,-3,-3,-4,-1,10],[9,7,-7,1,10,-2,3,1,-3,-2,-6]],[[-6,10,-6,6,-8,-1,10,-6,2,5,2],[-1,-5,3,-7,-2,10,4,4,-3,7,-9],[-2,2,-1,-1,-4,-6,-7,6,-8,9,-2],[-5,5,1,5,-10,5,2,8,8,6,-3],[-3,-8,-9,2,-2,-10,-6,-8,2,-10,2],[4,-5,-4,-6,-3,7,-1,-10,10,9,-8],[4,8,6,3,-9,-7,-7,5,-9,-2,2],[5,-8,4,6,6,8,5,3,-1,5,7]],[[1,7,10,4,-5,-4,5,-2,-9,-10,2],[10,-5,8,-9,4,-6,-7,2,-8,2,4],[9,-8,-4,-3,6,-2,2,-1,-4,10,7],[6,-1,-10,6,10,-10,4,-9,-10,10,-5],[1,-5,2,7,-5,1,-9,10,-7,-3,-1],[10,-3,4,-2,6,-5,-10,-6,-6,-2,-8],[-2,-8,-9,5,-7,-9,-5,2,9,1,-10],[-1,-8,7,8,10,-4,-8,-1,-2,-9,-9]],[[-1,4,-10,6,-5,-6,5,-4,-9,-2,5],[5,-4,4,-5,10,3,-7,-8,-3,-9,-8],[2,-7,8,-3,9,1,-4,-1,-10,-6,4],[8,-4,6,1,8,-10,4,2,3,7,9],[10,10,-10,5,-10,7,-5,9,-1,-9,10],[10,-3,7,8,-1,3,-10,-8,8,-7,3],[-10,-8,-7,-1,-10,-1,4,5,4,-2,-9],[-2,7,-6,5,-8,2,-3,1,-8,-4,4]],[[-6,10,4,7,-4,10,-8,-8,6,7,10],[-6,5,1,-4,-7,-5,10,-7,-3,-7,2],[1,-2,4,4,-1,-4,-8,-6,-10,-3,-10],[-4,-2,-7,2,-8,-9,-10,10,-6,8,-7],[-5,-9,8,1,4,6,-4,9,-4,9,-7],[-8,-6,-8,-6,-1,10,7,-1,-7,-4,5],[7,4,-2,7,-3,-8,1,3,5,-8,5],[4,-4,5,5,9,-3,-7,7,4,-9,1]],[[2,-7,2,-1,-3,-5,7,8,-9,6,-10],[-6,-7,9,5,-7,-5,-4,-2,-4,-10,-3],[-10,-9,-5,-8,9,4,-4,-3,-2,-8,7],[-6,4,5,10,1,6,-6,6,-8,7,3],[2,4,10,-2,3,7,9,-1,9,-8,3],[-8,1,-6,-5,-2,6,-4,8,-5,-6,-8],[6,4,3,-2,10,-5,-5,9,-9,10,9],[-4,-2,7,5,2,7,9,-2,6,5,2]],[[2,2,4,-9,-8,1,-3,-7,-6,-2,-5],[-4,-5,8,4,10,3,7,7,-2,10,4],[-4,4,10,-6,8,-1,-2,3,-10,2,-6],[-1,-7,-6,8,10,1,-3,-1,-5,1,-4],[-4,9,-9,-7,1,5,-3,-3,-3,7,9],[6,-1,1,-6,4,-9,5,-5,-2,-2,-4],[-8,-8,-2,-6,6,-4,-2,8,-9,9,7],[-5,-8,-9,-4,5,-2,4,9,6,9,-10]],[[-5,10,-1,2,-4,-10,-6,1,4,3,-1],[1,-6,-3,8,-7,-4,-7,-5,-2,-9,-9],[3,-6,-8,-4,-7,-6,3,9,5,-4,-2],[-3,-3,-6,-9,-7,7,-1,6,3,-2,6],[10,-7,-1,3,2,-2,1,7,-7,2,2],[10,-1,-1,1,10,-5,6,6,1,5,4],[3,6,10,3,-1,9,-3,-7,-10,-6,2],[10,1,-9,-7,4,8,8,-8,-7,-4,-3]],[[7,-3,-8,1,-1,1,4,-2,-5,-9,-6],[1,9,-5,4,-2,-1,-9,4,-9,3,-10],[-10,-6,-1,-7,3,3,6,7,-9,5,5],[-8,-6,-5,9,-3,-8,-3,5,7,10,2],[-9,9,9,7,10,1,2,-2,-1,-9,6],[-9,-6,7,-6,5,9,3,-10,9,8,5],[-10,-1,3,-2,-6,10,-9,9,7,3,7],[-3,8,6,-6,6,-1,-6,8,5,-1,5]],[[3,7,7,-5,4,3,2,8,2,3,-10],[10,-9,2,-10,-9,-1,3,6,4,8,4],[9,-9,3,-6,2,-10,9,-8,9,1,6],[9,2,2,5,1,7,6,-1,-2,6,-2],[4,-5,-1,-4,-10,1,-10,-1,8,-8,-1],[4,5,-7,-7,-10,-2,3,-1,2,-2,5],[-5,-5,-8,7,-5,3,6,5,-10,-4,9],[-6,6,4,-1,8,-5,1,5,-5,1,-4]]], dtype = "uint64")#candidate|913|(13, 8, 11)|const|uint64
var_914 = relay.var("var_914", dtype = "uint64", shape = (13, 8, 11))#candidate|914|(13, 8, 11)|var|uint64
bop_915 = relay.add(const_913.astype('uint64'), relay.reshape(var_914.astype('uint64'), relay.shape_of(const_913))) # shape=(13, 8, 11)
uop_930 = relay.log(bop_915.astype('float64')) # shape=(13, 8, 11)
uop_941 = relay.cos(uop_930.astype('float64')) # shape=(13, 8, 11)
uop_948 = relay.acosh(uop_941.astype('float64')) # shape=(13, 8, 11)
output = relay.Tuple([uop_948,])
output2 = relay.Tuple([uop_948,])
func_950 = relay.Function([var_914,], output)
mod['func_950'] = func_950
mod = relay.transform.InferType()(mod)
var_951 = relay.var("var_951", dtype = "uint64", shape = (13, 8, 11))#candidate|951|(13, 8, 11)|var|uint64
output = func_950(var_951)
func_952 = relay.Function([var_951], output)
mutated_mod['func_952'] = func_952
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1057 = relay.var("var_1057", dtype = "uint32", shape = (7, 11, 13))#candidate|1057|(7, 11, 13)|var|uint32
var_1058 = relay.var("var_1058", dtype = "uint32", shape = (7, 11, 13))#candidate|1058|(7, 11, 13)|var|uint32
bop_1059 = relay.maximum(var_1057.astype('uint32'), relay.reshape(var_1058.astype('uint32'), relay.shape_of(var_1057))) # shape=(7, 11, 13)
bop_1064 = relay.divide(bop_1059.astype('float32'), relay.reshape(var_1058.astype('float32'), relay.shape_of(bop_1059))) # shape=(7, 11, 13)
output = bop_1064
output2 = bop_1064
func_1078 = relay.Function([var_1057,var_1058,], output)
mod['func_1078'] = func_1078
mod = relay.transform.InferType()(mod)
var_1079 = relay.var("var_1079", dtype = "uint32", shape = (7, 11, 13))#candidate|1079|(7, 11, 13)|var|uint32
var_1080 = relay.var("var_1080", dtype = "uint32", shape = (7, 11, 13))#candidate|1080|(7, 11, 13)|var|uint32
output = func_1078(var_1079,var_1080,)
func_1081 = relay.Function([var_1079,var_1080,], output)
mutated_mod['func_1081'] = func_1081
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1365 = relay.var("var_1365", dtype = "uint16", shape = (1, 2, 4))#candidate|1365|(1, 2, 4)|var|uint16
var_1366 = relay.var("var_1366", dtype = "uint16", shape = (3, 2, 4))#candidate|1366|(3, 2, 4)|var|uint16
bop_1367 = relay.bitwise_xor(var_1365.astype('uint16'), var_1366.astype('uint16')) # shape=(3, 2, 4)
uop_1372 = relay.rsqrt(bop_1367.astype('float32')) # shape=(3, 2, 4)
bop_1376 = relay.less(uop_1372.astype('bool'), var_1365.astype('bool')) # shape=(3, 2, 4)
uop_1382 = relay.atan(bop_1367.astype('float32')) # shape=(3, 2, 4)
output = relay.Tuple([bop_1376,uop_1382,])
output2 = relay.Tuple([bop_1376,uop_1382,])
func_1384 = relay.Function([var_1365,var_1366,], output)
mod['func_1384'] = func_1384
mod = relay.transform.InferType()(mod)
mutated_mod['func_1384'] = func_1384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1384_call = mutated_mod.get_global_var('func_1384')
var_1386 = relay.var("var_1386", dtype = "uint16", shape = (1, 2, 4))#candidate|1386|(1, 2, 4)|var|uint16
var_1387 = relay.var("var_1387", dtype = "uint16", shape = (3, 2, 4))#candidate|1387|(3, 2, 4)|var|uint16
call_1385 = func_1384_call(var_1386,var_1387,)
output = call_1385
func_1388 = relay.Function([var_1386,var_1387,], output)
mutated_mod['func_1388'] = func_1388
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1595 = relay.constdtype = "float32")#candidate|1595|(14, 12, 14)|const|float32
uop_1596 = relay.tan(const_1595.astype('float32')) # shape=(14, 12, 14)
output = uop_1596
output2 = uop_1596
func_1598 = relay.Function([], output)
mod['func_1598'] = func_1598
mod = relay.transform.InferType()(mod)
mutated_mod['func_1598'] = func_1598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1598_call = mutated_mod.get_global_var('func_1598')
call_1599 = func_1598_call()
output = call_1599
func_1600 = relay.Function([], output)
mutated_mod['func_1600'] = func_1600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
call_1601 = func_1598_call()
call_1602 = func_1598_call()
func_634_call = mod.get_global_var('func_634')
func_637_call = mutated_mod.get_global_var('func_637')
var_1605 = relay.var("var_1605", dtype = "uint32", shape = ())#candidate|1605|()|var|uint32
var_1606 = relay.var("var_1606", dtype = "uint32", shape = (600,))#candidate|1606|(600,)|var|uint32
call_1604 = func_634_call(relay.reshape(var_1605.astype('uint32'), []), relay.reshape(var_1606.astype('uint32'), [15, 4, 10]), )
call_1607 = func_634_call(relay.reshape(var_1605.astype('uint32'), []), relay.reshape(var_1606.astype('uint32'), [15, 4, 10]), )
output = relay.Tuple([call_1601,call_1604,var_1605,var_1606,])
output2 = relay.Tuple([call_1602,call_1607,var_1605,var_1606,])
func_1612 = relay.Function([var_1605,var_1606,], output)
mod['func_1612'] = func_1612
mod = relay.transform.InferType()(mod)
var_1613 = relay.var("var_1613", dtype = "uint32", shape = ())#candidate|1613|()|var|uint32
var_1614 = relay.var("var_1614", dtype = "uint32", shape = (600,))#candidate|1614|(600,)|var|uint32
output = func_1612(var_1613,var_1614,)
func_1615 = relay.Function([var_1613,var_1614,], output)
mutated_mod['func_1615'] = func_1615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
call_1640 = func_1598_call()
call_1641 = func_1598_call()
output = call_1640
output2 = call_1641
func_1646 = relay.Function([], output)
mod['func_1646'] = func_1646
mod = relay.transform.InferType()(mod)
output = func_1646()
func_1647 = relay.Function([], output)
mutated_mod['func_1647'] = func_1647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
call_1720 = func_1598_call()
call_1721 = func_1598_call()
var_1730 = relay.var("var_1730", dtype = "float32", shape = (14, 12, 14))#candidate|1730|(14, 12, 14)|var|float32
bop_1731 = relay.bitwise_or(call_1720.astype('uint8'), relay.reshape(var_1730.astype('uint8'), relay.shape_of(call_1720))) # shape=(14, 12, 14)
bop_1734 = relay.bitwise_or(call_1721.astype('uint8'), relay.reshape(var_1730.astype('uint8'), relay.shape_of(call_1721))) # shape=(14, 12, 14)
output = bop_1731
output2 = bop_1734
func_1737 = relay.Function([var_1730,], output)
mod['func_1737'] = func_1737
mod = relay.transform.InferType()(mod)
var_1738 = relay.var("var_1738", dtype = "float32", shape = (14, 12, 14))#candidate|1738|(14, 12, 14)|var|float32
output = func_1737(var_1738)
func_1739 = relay.Function([var_1738], output)
mutated_mod['func_1739'] = func_1739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
call_1838 = func_1598_call()
call_1839 = func_1598_call()
output = relay.Tuple([call_1838,])
output2 = relay.Tuple([call_1839,])
func_1856 = relay.Function([], output)
mod['func_1856'] = func_1856
mod = relay.transform.InferType()(mod)
output = func_1856()
func_1857 = relay.Function([], output)
mutated_mod['func_1857'] = func_1857
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1894 = relay.var("var_1894", dtype = "uint32", shape = (6, 3, 6))#candidate|1894|(6, 3, 6)|var|uint32
var_1895 = relay.var("var_1895", dtype = "uint32", shape = (6, 3, 6))#candidate|1895|(6, 3, 6)|var|uint32
bop_1896 = relay.right_shift(var_1894.astype('uint32'), relay.reshape(var_1895.astype('uint32'), relay.shape_of(var_1894))) # shape=(6, 3, 6)
func_634_call = mod.get_global_var('func_634')
func_637_call = mutated_mod.get_global_var('func_637')
var_1900 = relay.var("var_1900", dtype = "uint32", shape = ())#candidate|1900|()|var|uint32
const_1901 = relay.const([[6,4],[6,-5],[3,-4],[1,5],[-4,10],[2,-4],[7,-1],[9,1],[-1,5],[9,8],[4,-8],[-6,6],[9,-10],[9,3],[6,-10],[3,-10],[6,-4],[7,-4],[5,-6],[6,-9],[-10,-7],[4,5],[-2,-7],[-6,-1],[-4,5],[8,10],[5,4],[-10,8],[1,8],[-5,-7],[8,4],[-3,-6],[2,6],[-5,3],[4,1],[8,3],[5,7],[6,9],[-10,-10],[7,-7],[9,9],[2,4],[-7,10],[-4,-7],[4,-1],[7,-4],[2,-7],[-10,-10],[-10,3],[-8,7],[-1,3],[10,4],[-3,2],[-6,9],[2,9],[-2,1],[5,-3],[-10,-2],[-7,-6],[-4,-1],[-7,9],[1,1],[3,5],[8,-7],[-1,-10],[1,6],[5,-7],[4,8],[-10,7],[4,-7],[8,4],[10,-1],[-4,-6],[10,-4],[-3,6],[8,-9],[2,2],[-3,-4],[-10,9],[2,3],[-10,2],[10,-7],[-9,-8],[-8,5],[-4,5],[-7,10],[-7,-9],[10,2],[10,2],[-2,-3],[-5,-7],[-10,2],[-1,-1],[5,-6],[-2,-9],[5,-4],[7,-7],[6,-7],[-2,3],[-7,8],[-3,-6],[2,-1],[5,7],[-3,-6],[-9,-9],[-4,-6],[-1,10],[6,-7],[9,-9],[3,7],[2,-7],[7,7],[-8,-10],[3,1],[-7,-5],[1,3],[-5,-2],[2,8],[3,9],[1,-5],[10,-1],[1,10],[-3,10],[7,7],[-6,10],[-8,10],[-4,-3],[-4,-3],[-4,-9],[8,-3],[-4,-8],[-8,5],[-4,2],[5,-5],[-2,5],[-9,-8],[5,-9],[9,-6],[7,-6],[-9,-1],[-5,-4],[4,9],[-10,-1],[3,3],[9,2],[4,-10],[4,-7],[6,3],[-10,10],[-8,1],[-3,8],[-2,-7],[5,-8],[9,-1],[6,3],[4,3],[-5,-10],[-4,-1],[-1,-5],[4,-5],[-1,-7],[5,-3],[-3,-2],[4,-3],[-8,4],[-3,-9],[5,-9],[-5,-7],[7,7],[1,-2],[-8,-3],[10,3],[-10,10],[-1,-10],[-4,-5],[-1,-5],[6,2],[-4,2],[-1,-4],[5,-10],[4,10],[10,2],[-7,5],[1,10],[-4,7],[-9,9],[5,2],[3,-5],[-2,2],[5,10],[-5,1],[4,5],[6,-7],[-10,4],[2,-5],[7,-3],[5,5],[-1,1],[7,-4],[-5,-9],[1,-5],[-4,6],[6,10],[9,2],[-9,3],[1,8],[8,-9],[10,-4],[-5,2],[10,5],[7,-9],[9,2],[10,9],[-3,-9],[6,-4],[7,-7],[-6,4],[-5,4],[-4,-10],[-6,-2],[2,-10],[-8,-6],[7,3],[5,-10],[9,9],[-5,-9],[7,4],[4,2],[9,10],[8,-4],[-5,3],[-8,-3],[9,4],[6,-4],[3,-8],[6,-4],[9,4],[2,-6],[-6,-7],[4,-3],[3,-8],[9,3],[10,10],[1,-10],[-7,-10],[4,-6],[-7,-7],[2,-7],[-9,5],[6,1],[-9,-3],[2,1],[-10,10],[8,-4],[-8,7],[3,4],[-10,-10],[-7,4],[2,4],[-1,-5],[5,4],[-9,8],[9,7],[9,6],[10,-6],[8,3],[-7,4],[-2,-8],[-2,2],[-1,1],[6,-4],[9,6],[5,-8],[-4,-3],[-6,9],[-5,8],[-7,1],[9,-8],[9,-1],[3,10],[1,-2],[-9,-4],[-1,-4],[9,-6],[-2,-4],[8,-5],[-5,9],[-6,-5],[9,2],[2,2],[8,-2],[9,3],[4,10],[1,-2],[6,4],[10,-8],[7,-6],[5,-4],[3,-10],[-5,-4]], dtype = "uint32")#candidate|1901|(300, 2)|const|uint32
call_1899 = func_634_call(relay.reshape(var_1900.astype('uint32'), []), relay.reshape(const_1901.astype('uint32'), [15, 4, 10]), )
call_1902 = func_634_call(relay.reshape(var_1900.astype('uint32'), []), relay.reshape(const_1901.astype('uint32'), [15, 4, 10]), )
output = relay.Tuple([bop_1896,call_1899,var_1900,const_1901,])
output2 = relay.Tuple([bop_1896,call_1902,var_1900,const_1901,])
func_1905 = relay.Function([var_1894,var_1895,var_1900,], output)
mod['func_1905'] = func_1905
mod = relay.transform.InferType()(mod)
mutated_mod['func_1905'] = func_1905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1905_call = mutated_mod.get_global_var('func_1905')
var_1907 = relay.var("var_1907", dtype = "uint32", shape = (6, 3, 6))#candidate|1907|(6, 3, 6)|var|uint32
var_1908 = relay.var("var_1908", dtype = "uint32", shape = (6, 3, 6))#candidate|1908|(6, 3, 6)|var|uint32
var_1909 = relay.var("var_1909", dtype = "uint32", shape = ())#candidate|1909|()|var|uint32
call_1906 = func_1905_call(var_1907,var_1908,var_1909,)
output = call_1906
func_1910 = relay.Function([var_1907,var_1908,var_1909,], output)
mutated_mod['func_1910'] = func_1910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1646_call = mod.get_global_var('func_1646')
func_1647_call = mutated_mod.get_global_var('func_1647')
call_1920 = func_1646_call()
call_1921 = func_1646_call()
output = call_1920
output2 = call_1921
func_1929 = relay.Function([], output)
mod['func_1929'] = func_1929
mod = relay.transform.InferType()(mod)
output = func_1929()
func_1930 = relay.Function([], output)
mutated_mod['func_1930'] = func_1930
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1973 = relay.const([[[-7.683122,-2.615059,8.102017,9.379374,2.429539,-9.943097,-3.783031,9.791624,-7.298097],[9.704857,1.894359,-2.660165,-7.698746,5.727502,-7.682342,0.283756,-8.793105,9.837157],[-3.378103,0.831321,7.082961,-2.680539,-8.694936,-1.347118,4.516110,9.588307,0.975016],[5.650270,8.839070,5.874951,6.742212,-2.377663,-7.496360,-2.532957,-4.215995,-9.173570],[6.115812,-7.638545,9.961024,7.179504,-7.352100,5.480936,-7.902963,-5.420775,2.514645],[-0.467786,-8.203804,7.679399,-4.019332,-2.299430,4.814962,-3.710975,5.694819,-8.494805],[7.490050,-9.413507,-1.787832,-4.189757,-2.580749,-3.448984,-8.770122,5.463837,-6.541831]],[[-0.477118,-3.090826,1.520894,5.396664,-9.430848,-9.780803,4.753582,-8.155516,-3.590246],[8.087579,-8.854322,2.724507,-7.229063,9.864106,-2.136295,-8.611901,-9.387088,7.239309],[-4.968764,3.373741,-0.697021,-2.671714,-8.941997,5.863725,3.121653,0.830993,-8.384624],[9.486284,-4.102220,-4.962680,-5.058214,5.314862,0.670255,-0.325749,-2.060377,0.650901],[-7.787578,-1.126418,-8.029101,9.324701,8.674180,4.869893,7.082224,-2.266495,2.075094],[-5.796880,2.087491,-5.366294,7.810195,-7.053404,6.834123,-0.292479,1.221575,-5.053096],[-1.884354,-9.146815,-0.022681,8.425638,-0.953313,3.930392,0.310625,6.242332,-7.443654]],[[2.537337,-2.390144,1.855546,1.054930,0.622920,-3.252353,9.561591,4.235277,-7.731135],[1.141835,6.610533,9.176974,-5.428275,0.935575,9.956615,5.180135,9.672325,5.404130],[1.246382,-4.484986,6.033416,-5.204491,8.862120,-1.535524,5.354652,0.791024,7.717511],[-2.780004,1.124094,7.445805,9.261127,-2.774952,0.486941,8.892823,-0.823475,3.409083],[-3.263139,-1.101528,-1.343024,-3.961781,4.790831,-2.356060,-7.434426,-5.422741,-3.596053],[7.748014,-3.320288,-9.850456,2.057587,1.743669,3.971243,5.328133,-7.457607,0.508336],[7.596615,7.464082,-4.104340,8.003823,-0.538666,-3.195975,-8.926144,-1.257984,0.288426]],[[-5.462917,-4.622276,7.069438,-0.496325,2.754116,-6.053064,5.932104,-6.189649,-2.492860],[4.157749,-0.168950,2.059917,-3.521549,-8.045860,8.677559,-7.588729,-1.058358,2.870509],[-2.960468,-0.284526,-3.831735,3.364228,-1.070808,-9.762982,-2.274835,1.664702,2.468735],[1.142133,-6.470601,-9.997327,-8.669416,3.962410,3.363906,-6.189298,-1.003527,-9.792978],[4.821093,3.866744,6.064055,1.617088,1.225334,-6.237608,8.709817,-0.827038,2.737599],[9.424352,1.405662,-7.740961,8.502026,0.193307,-6.879116,1.840759,1.559089,4.738408],[-6.104866,-7.037996,1.660215,0.031672,-6.845560,-9.086303,-2.867435,6.209962,-7.583428]],[[8.564118,-8.166651,-8.439061,-9.792443,0.402301,-1.026697,-2.409204,5.524681,-9.208680],[-4.836925,6.685948,3.649259,-9.369515,-8.016764,-0.314127,-4.222243,-2.802619,-8.584057],[2.789701,-8.602238,-6.784794,4.026535,-5.751058,8.430621,-5.507382,-2.516618,-2.316226],[4.536750,3.044113,4.966732,8.517986,1.372825,-0.970296,-3.472226,-8.054925,-9.734547],[1.906670,-7.227729,-7.478675,-4.482388,2.918345,1.660376,-2.964098,-5.897893,-6.078890],[1.540168,9.511557,4.650298,-4.924640,9.640115,1.040692,8.143636,-5.572563,-5.472170],[2.864286,2.699575,4.628578,9.238082,8.042876,3.182860,0.522331,7.114917,-5.168801]]], dtype = "float32")#candidate|1973|(5, 7, 9)|const|float32
uop_1974 = relay.sqrt(const_1973.astype('float32')) # shape=(5, 7, 9)
output = uop_1974
output2 = uop_1974
func_1979 = relay.Function([], output)
mod['func_1979'] = func_1979
mod = relay.transform.InferType()(mod)
output = func_1979()
func_1980 = relay.Function([], output)
mutated_mod['func_1980'] = func_1980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1979_call = mod.get_global_var('func_1979')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_2052 = func_1979_call()
call_2053 = func_1979_call()
output = call_2052
output2 = call_2053
func_2054 = relay.Function([], output)
mod['func_2054'] = func_2054
mod = relay.transform.InferType()(mod)
mutated_mod['func_2054'] = func_2054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2054_call = mutated_mod.get_global_var('func_2054')
call_2055 = func_2054_call()
output = call_2055
func_2056 = relay.Function([], output)
mutated_mod['func_2056'] = func_2056
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2099 = relay.var("var_2099", dtype = "uint64", shape = (8, 3))#candidate|2099|(8, 3)|var|uint64
var_2100 = relay.var("var_2100", dtype = "uint64", shape = (8, 3))#candidate|2100|(8, 3)|var|uint64
bop_2101 = relay.minimum(var_2099.astype('uint64'), relay.reshape(var_2100.astype('uint64'), relay.shape_of(var_2099))) # shape=(8, 3)
output = relay.Tuple([bop_2101,])
output2 = relay.Tuple([bop_2101,])
func_2116 = relay.Function([var_2099,var_2100,], output)
mod['func_2116'] = func_2116
mod = relay.transform.InferType()(mod)
mutated_mod['func_2116'] = func_2116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2116_call = mutated_mod.get_global_var('func_2116')
var_2118 = relay.var("var_2118", dtype = "uint64", shape = (8, 3))#candidate|2118|(8, 3)|var|uint64
var_2119 = relay.var("var_2119", dtype = "uint64", shape = (8, 3))#candidate|2119|(8, 3)|var|uint64
call_2117 = func_2116_call(var_2118,var_2119,)
output = call_2117
func_2120 = relay.Function([var_2118,var_2119,], output)
mutated_mod['func_2120'] = func_2120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1979_call = mod.get_global_var('func_1979')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_2122 = func_1979_call()
call_2123 = func_1979_call()
output = call_2122
output2 = call_2123
func_2127 = relay.Function([], output)
mod['func_2127'] = func_2127
mod = relay.transform.InferType()(mod)
output = func_2127()
func_2128 = relay.Function([], output)
mutated_mod['func_2128'] = func_2128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_2166 = func_2127_call()
call_2167 = func_2127_call()
func_1929_call = mod.get_global_var('func_1929')
func_1930_call = mutated_mod.get_global_var('func_1930')
call_2168 = func_1929_call()
call_2169 = func_1929_call()
output = relay.Tuple([call_2166,call_2168,])
output2 = relay.Tuple([call_2167,call_2169,])
func_2178 = relay.Function([], output)
mod['func_2178'] = func_2178
mod = relay.transform.InferType()(mod)
output = func_2178()
func_2179 = relay.Function([], output)
mutated_mod['func_2179'] = func_2179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_2180 = func_2127_call()
call_2181 = func_2127_call()
func_950_call = mod.get_global_var('func_950')
func_952_call = mutated_mod.get_global_var('func_952')
const_2185 = relay.const([[3],[7],[-6],[-1],[-10],[5],[-9],[-9],[-3],[4],[-5],[4],[-10],[8],[8],[-4],[-5],[-10],[-4],[4],[-4],[-3],[-7],[-4],[3],[4],[7],[-7],[-2],[5],[-7],[1],[-2],[3],[-2],[1],[9],[-2],[6],[9],[-4],[-5],[-2],[-7],[9],[6],[-3],[-8],[-10],[10],[-1],[1],[-4],[-6],[-7],[-8],[-9],[1],[7],[-6],[4],[-2],[1],[-1],[-4],[-2],[-3],[-3],[-5],[7],[-6],[-4],[-10],[-4],[5],[-5],[4],[-5],[9],[3],[-6],[-10],[-9],[5],[-4],[6],[7],[-4],[-5],[6],[-10],[8],[-8],[6],[-8],[3],[-5],[4],[-6],[8],[3],[-9],[-5],[9],[-1],[1],[-4],[5],[1],[-1],[2],[4],[7],[-1],[-9],[4],[-4],[2],[7],[-9],[-6],[2],[-1],[-4],[-8],[-1],[1],[8],[-3],[2],[8],[4],[2],[-3],[-7],[9],[-5],[5],[-8],[8],[4],[-6],[7],[2],[1],[-2],[3],[-4],[1],[-5],[-10],[-2],[-5],[-2],[-4],[1],[-10],[-4],[9],[8],[3],[2],[5],[-2],[-3],[-5],[-1],[-9],[3],[-3],[2],[6],[9],[10],[7],[1],[-8],[-5],[-8],[1],[4],[-4],[4],[5],[-7],[-6],[-10],[-2],[6],[8],[-9],[-3],[-1],[4],[-5],[-1],[-5],[-6],[-10],[-8],[-7],[7],[-1],[-8],[-10],[10],[5],[-8],[2],[-6],[-9],[8],[3],[2],[-2],[2],[7],[9],[-8],[-4],[-3],[-8],[10],[7],[-8],[-10],[1],[10],[9],[1],[4],[-3],[3],[-8],[-10],[9],[-9],[-4],[-3],[-10],[7],[7],[-6],[-5],[-10],[-8],[-10],[-5],[4],[-5],[-8],[-10],[1],[5],[-6],[-4],[-6],[2],[-9],[9],[-1],[-4],[-2],[5],[-4],[10],[5],[8],[-3],[-8],[9],[3],[-3],[9],[4],[-3],[-7],[-8],[-8],[4],[-1],[2],[6],[2],[5],[10],[1],[1],[-2],[8],[-10],[-1],[-10],[5],[1],[-9],[-6],[10],[3],[1],[9],[-5],[-7],[-4],[9],[-5],[5],[-6],[-4],[-4],[-2],[9],[6],[-8],[-9],[-10],[-10],[-1],[-3],[6],[-9],[3],[-8],[2],[3],[8],[10],[1],[-7],[8],[8],[6],[-5],[7],[-2],[-2],[-5],[-8],[7],[6],[5],[-5],[-1],[5],[-7],[-4],[1],[7],[7],[-3],[-6],[-9],[-3],[5],[-6],[-2],[-6],[7],[5],[-7],[-5],[1],[3],[1],[9],[-6],[-1],[7],[3],[-6],[4],[-1],[4],[10],[-2],[-4],[-8],[-4],[-1],[10],[10],[-7],[2],[-7],[-8],[5],[10],[4],[5],[-3],[-3],[-3],[-10],[-3],[-1],[10],[-8],[2],[-1],[-8],[-1],[-2],[-8],[-5],[4],[-10],[-5],[-7],[2],[-7],[-2],[4],[-4],[-1],[-9],[-5],[-1],[-3],[7],[2],[6],[-8],[8],[7],[5],[3],[-10],[7],[-7],[-10],[-7],[-7],[4],[-7],[-6],[2],[-4],[-6],[-6],[-10],[-6],[10],[2],[-2],[6],[-3],[9],[-3],[-10],[5],[1],[1],[-8],[8],[7],[-6],[-5],[-8],[2],[5],[-2],[-4],[10],[5],[8],[-5],[7],[-6],[10],[-8],[-6],[-1],[9],[-7],[1],[-2],[10],[-5],[3],[-10],[8],[-2],[1],[10],[6],[10],[4],[-2],[-3],[5],[-10],[-1],[3],[1],[-6],[7],[-6],[10],[8],[1],[-10],[7],[-2],[-5],[7],[3],[9],[10],[-7],[-9],[3],[8],[-6],[-9],[6],[10],[8],[-8],[-4],[9],[6],[-1],[-5],[-8],[3],[7],[1],[7],[2],[4],[3],[6],[9],[6],[-10],[7],[9],[1],[-2],[-6],[4],[2],[9],[-5],[-5],[-10],[10],[2],[1],[-5],[4],[-7],[3],[-7],[-6],[-9],[-8],[-8],[-10],[9],[3],[-6],[7],[-4],[-7],[-7],[2],[-4],[-3],[9],[5],[10],[9],[-2],[4],[-6],[3],[9],[9],[6],[4],[-7],[-9],[-1],[-3],[2],[8],[-5],[3],[-8],[1],[1],[6],[-3],[7],[1],[5],[8],[-10],[-8],[1],[4],[3],[6],[9],[10],[-10],[3],[5],[4],[-5],[3],[-4],[6],[2],[-8],[-6],[-2],[-4],[-3],[-4],[10],[-8],[-3],[8],[4],[2],[-3],[-8],[2],[-3],[-3],[-5],[-7],[3],[1],[-7],[-5],[-5],[-7],[-6],[6],[8],[-6],[-8],[-8],[-9],[9],[-6],[-4],[-8],[-8],[7],[9],[4],[6],[-7],[-9],[10],[3],[2],[-9],[2],[4],[6],[-9],[-4],[-1],[-2],[4],[6],[-5],[-10],[10],[-10],[10],[-2],[-2],[8],[-4],[-5],[-1],[8],[9],[-2],[-6],[-2],[-1],[-7],[-2],[4],[8],[10],[-2],[-9],[5],[7],[-4],[-7],[7],[-5],[8],[-5],[-10],[10],[9],[6],[9],[9],[-6],[-8],[-2],[-6],[10],[-9],[-3],[-1],[2],[1],[-8],[5],[-6],[5],[7],[-9],[-2],[-4],[9],[-3],[1],[7],[6],[6],[4],[1],[-8],[-9],[5],[10],[-2],[5],[-5],[10],[-8],[5],[5],[-5],[10],[1],[9],[-5],[-6],[1],[-2],[3],[1],[10],[8],[-2],[-3],[6],[-8],[10],[-2],[-3],[-1],[-10],[-7],[-10],[4],[-5],[-3],[3],[-4],[-8],[1],[-4],[-4],[-1],[3],[1],[-4],[-3],[-2],[2],[-8],[2],[-9],[-3],[-9],[10],[4],[1],[10],[8],[5],[9],[10],[10],[7],[-7],[8],[-4],[-6],[10],[9],[-7],[7],[3],[-1],[-1],[2],[-6],[4],[-2],[8],[5],[1],[-3],[-8],[4],[4],[-2],[-1],[-8],[-8],[9],[-9],[-10],[-10],[3],[6],[-2],[-7],[5],[9],[-5],[-1],[5],[2],[4],[-2],[-9],[5],[5],[6],[3],[-8],[-8],[-1],[2],[-2],[-4],[4],[7],[-3],[-7],[4],[-8],[-9],[-6],[5],[-6],[6],[7],[9],[-7],[8],[6],[-1],[1],[5],[-2],[6],[-2],[5],[2],[9],[2],[-6],[-5],[10],[-7],[-5],[2],[7],[-1],[1],[-1],[-3],[4],[1],[7],[-7],[-5],[8],[7],[-4],[-8],[-7],[-5],[4],[-7],[1],[-4],[1],[4],[5],[3],[-2],[5],[10],[10],[8],[3],[8],[10],[-7],[-7],[-4],[-5],[-8],[-10],[2],[-4],[-4],[8],[3],[-10],[-8],[6],[2],[-8],[-4],[-9],[3],[-5],[3],[-5],[-1],[-3],[10],[-10],[9],[-5],[2],[3],[-9],[5],[5],[2],[-8],[-10],[-4],[-9],[-5],[-9],[4],[-9],[-9],[2],[-8],[-7],[5],[8],[8],[9],[-9],[-8],[-5],[8],[-7],[-7],[6],[6],[10],[7],[10],[-5],[-8],[6],[-7],[1],[-5],[8],[3],[-9],[5],[-3],[-2],[8],[-4],[2],[-3],[-10],[1],[6],[-2],[-3],[5],[4],[1],[10],[9],[-1],[-2],[-5],[-8],[-4],[-5],[1],[-2],[-6],[-3],[9],[4],[5],[9],[3],[1],[-1],[5],[-1],[2],[-3],[2],[2],[10],[-6],[9],[-10],[-1],[6],[10],[-9],[3],[6],[-5],[-10],[-4],[5],[6],[10],[7],[6],[3],[7],[-1],[-3],[-4],[4],[2],[7],[8],[-8],[2],[-10],[3],[4],[-8],[-6],[-8],[-5],[5],[2],[2],[-9],[7],[-6],[5],[9],[7],[6],[1],[-2],[10],[-10],[-10],[-7],[-4],[-6],[-4],[-3],[-1],[4],[-2],[3],[-4],[3],[-7],[-4],[10],[5],[-10],[-5],[-9],[3],[6],[-2],[4],[4],[3],[-9],[-6],[-2],[-5],[10],[-2],[-5],[7],[-7],[3],[-10],[7],[-7],[-2],[-8],[8],[-9],[10],[-7],[-10],[4],[2],[-4],[-1],[7],[-2],[-2],[-3],[-9],[10],[7],[7],[-10],[9],[-5],[4],[1],[-9],[7],[8],[4],[5]], dtype = "uint64")#candidate|2185|(1144, 1)|const|uint64
call_2184 = relay.TupleGetItem(func_950_call(relay.reshape(const_2185.astype('uint64'), [13, 8, 11])), 0)
call_2186 = relay.TupleGetItem(func_952_call(relay.reshape(const_2185.astype('uint64'), [13, 8, 11])), 0)
func_1612_call = mod.get_global_var('func_1612')
func_1615_call = mutated_mod.get_global_var('func_1615')
const_2199 = relay.const(-5, dtype = "uint32")#candidate|2199|()|const|uint32
var_2200 = relay.var("var_2200", dtype = "uint32", shape = (6, 100))#candidate|2200|(6, 100)|var|uint32
call_2198 = relay.TupleGetItem(func_1612_call(relay.reshape(const_2199.astype('uint32'), []), relay.reshape(var_2200.astype('uint32'), [600,]), ), 1)
call_2201 = relay.TupleGetItem(func_1615_call(relay.reshape(const_2199.astype('uint32'), []), relay.reshape(var_2200.astype('uint32'), [600,]), ), 1)
func_1737_call = mod.get_global_var('func_1737')
func_1739_call = mutated_mod.get_global_var('func_1739')
const_2210 = relay.const([-1.929714,-0.506841,-8.576748,-0.067922,-1.015320,6.359410,-8.101003,-0.953761,-2.161783,4.239440,3.212325,-0.757589,-0.231787,-8.175044,-8.828869,2.269414,4.227127,-0.900567,9.357379,5.215904,7.101891,0.980966,5.335021,7.228188,-6.808356,-4.231754,-3.812066,-8.631890,0.420040,-0.768600,-6.345740,0.460076,6.610070,7.035229,-8.163308,-6.864219,-4.088392,9.478394,-2.631308,9.227579,0.752759,-2.419957,-9.409051,-0.269719,6.086539,-6.015447,2.152002,9.355687,7.367002,5.120490,5.218682,4.810804,-7.526107,7.546544,3.442869,8.608252,-7.861641,-2.190737,0.220544,4.022990,8.598175,-1.216113,7.787328,-4.267483,-3.197194,-9.733577,6.525267,0.667277,-5.572737,-5.986150,9.155407,-5.615094,-8.722389,6.083418,-8.795964,-9.683289,-3.472193,-3.225543,4.412307,-7.042198,-2.988389,0.573504,-0.962277,7.740193,-0.950539,-4.183694,-4.655821,2.636654,-4.637078,-3.230107,6.148014,-9.038022,2.288915,6.144609,5.240796,-4.476000,-9.097694,-3.969434,9.285629,6.205566,6.539873,4.414351,6.321984,-0.700754,0.929292,-1.233675,-8.860359,-3.176503,7.628732,-3.793514,8.372775,-1.614533,-2.287188,-7.850948,4.759600,1.047290,-6.201642,-6.812936,-1.922245,3.949793,6.374878,-0.183562,-4.174133,4.142397,4.633263,3.606669,-5.257226,-3.822266,-2.376854,-2.000163,7.632612,-5.103879,4.903812,2.232978,-9.891516,8.970015,-7.728127,2.061107,3.292124,-5.897448,-2.436702,3.189134,5.149022,6.560024,9.273410,6.454611,-7.153518,-4.576858,-0.815575,0.972881,-0.139215,-4.083514,-3.785226,0.143865,-1.016028,-3.997401,0.043778,-0.003749,-0.914676,-4.504858,8.254681,-6.464439,-2.891530,6.005241,-3.895927,0.140139,-1.736353,0.939503,0.237734,-0.146047,-0.429159,-5.514405,-7.745196,-0.455731,-5.319392,-3.693548,3.207721,1.893602,6.817664,-3.819659,4.781267,-2.962259,-0.133688,9.472298,7.171648,6.060577,-2.198740,2.407366,-9.850493,0.569490,7.157543,0.712209,-8.118480,-3.367744,7.423006,0.490904,-0.750124,-9.640671,6.562922,-5.928694,5.236070,-8.028626,9.625315,4.156103,-9.862986,-8.405458,-4.220236,-1.749884,2.986176,8.273959,4.217889,7.812751,-9.537699,-9.011959,2.564723,-6.741056,7.588587,2.257620,8.714629,-2.395644,9.626108,4.901841,-4.880767,7.402169,-6.539882,9.910194,8.081839,5.677610,-2.802571,-6.255962,-5.123205,2.421593,1.030135,-6.724240,0.610843,-3.237727,8.772530,-4.990361,1.744955,3.951628,-2.487223,-8.735302,-4.540639,-9.856531,6.781879,-3.959207,5.259523,9.154840,-1.030201,9.377174,1.669002,0.317615,5.876120,-6.680546,0.585703,-5.153375,-4.427335,4.034712,-0.808022,-1.203397,-0.261502,2.839491,-0.024123,2.343100,-6.298067,-1.566034,-6.397559,6.422257,7.266798,6.569159,2.365272,9.152368,-3.718486,-0.645528,-4.439836,-3.087233,-5.539395,-1.368771,6.674036,4.131562,6.853909,2.373470,7.147393,1.601879,-3.573598,4.699678,6.096394,-6.919887,-6.484999,-9.377279,7.771019,8.725634,3.543455,-4.273151,2.164910,-4.955173,2.569507,9.704218,-5.518164,9.101146,0.155289,9.390972,7.438917,-6.049241,-7.644868,-0.462033,0.713627,3.644665,-1.089653,9.770761,-1.796217,-9.494624,5.093205,-1.599841,-5.576757,3.956132,2.683010,-2.279835,-8.660194,-5.600443,-1.240328,-9.675003,-6.721743,-2.945764,2.119982,9.805278,7.697426,6.851767,2.594833,5.160862,5.872579,2.529121,5.376918,-0.521686,-3.675286,-4.353715,5.560838,-1.794545,3.668484,-2.630972,4.051657,-6.246220,7.113351,3.055304,7.532581,5.914922,2.279043,6.966151,-9.980960,-9.906921,-7.891579,6.463088,0.919446,-5.922275,-9.046300,1.566114,-2.573220,8.855254,0.933089,-4.184023,0.558797,-2.008674,-5.094382,9.194784,5.740396,6.451731,-5.271891,4.140932,-5.792029,-9.505951,0.271762,-2.230193,9.620143,5.578369,9.055135,-9.115888,8.927532,6.921426,-6.228967,5.588258,8.570158,-0.993447,7.405696,8.560571,1.311428,2.791044,-5.352271,-2.184238,4.652730,-4.771254,8.634011,8.529848,2.971471,-6.537640,4.838958,8.314092,-9.937963,-3.384766,-1.839750,3.136822,-2.869104,-1.527210,6.253655,-7.036844,-6.427338,6.308140,7.028733,5.520249,2.818022,1.198218,9.993839,9.046533,-5.955545,4.543045,-6.162399,-6.446968,8.879286,9.220563,0.912347,0.057835,-3.879360,7.351896,9.957001,8.172633,-2.878378,3.647858,1.533453,6.394080,1.142058,-5.286357,9.971119,-0.064109,5.621011,9.059417,0.063150,1.323258,4.029169,-8.867408,1.321055,-9.259370,-6.323390,7.788346,-7.879349,1.452536,2.860773,2.029720,-8.048978,-7.535080,6.936173,-0.014833,-8.638695,0.148869,-7.290257,5.462834,7.054700,9.411463,0.413035,1.295828,9.691930,1.912312,6.395228,8.144401,-7.879713,1.995898,-6.410636,5.798323,5.275641,-8.326080,-7.097996,9.179952,3.669203,3.663811,6.238760,4.280819,5.966837,-3.199432,9.126436,-4.910264,1.828522,-8.791519,2.194389,-6.803128,-4.800202,-9.922719,-1.775475,-9.909651,-1.177856,2.618381,-0.927496,-1.334261,4.346455,-5.232243,-4.099244,5.573644,1.312289,7.771848,7.906758,1.319298,1.611503,-9.707705,-9.500309,3.979850,-2.991852,-9.610691,1.007684,-4.676843,9.901416,-2.655378,9.020350,4.104814,1.884886,7.372864,2.513369,-4.256973,-4.689344,-2.843073,2.752340,2.623851,-3.398608,-3.648826,-0.240621,8.344079,-3.616196,1.381978,4.436610,-8.460401,-3.375270,4.795437,-5.015309,-1.701701,-9.343770,4.601825,-3.714018,7.117989,4.082418,8.342256,-1.647736,5.302313,-1.580286,-2.400274,-2.660621,-5.354651,-3.289650,-3.559098,0.388833,2.152256,8.716508,5.315862,5.292853,0.107874,-7.130878,-8.842715,3.799942,9.346240,-1.097043,0.557257,-4.438064,9.026494,4.975391,-9.976236,-0.656181,-6.829530,-1.159068,-6.139967,-2.663221,-7.178227,-3.145012,8.729103,5.568042,0.940768,-6.461508,-1.969893,-6.752101,4.226634,4.285974,-1.578594,4.890156,0.958227,-4.785183,2.199587,6.749660,6.779858,-8.245072,7.178084,-4.746383,6.974074,3.826185,4.916844,-0.436372,3.495492,-5.203954,4.441208,-9.381728,-9.117324,-4.764297,6.711790,2.218883,9.513190,4.746124,0.081614,2.773209,-1.294990,-3.084160,-6.756461,-9.358788,-8.736190,2.073088,-9.116053,8.390660,-1.462790,-6.323733,4.354001,5.128504,1.401180,-7.855621,-2.224877,-9.835263,-2.278514,-4.505166,2.795520,2.299354,-8.526992,1.773906,-7.199975,8.682687,8.029134,9.964525,0.851372,9.974080,7.480346,-2.087370,-2.957768,4.373278,9.799711,5.966465,-5.344122,1.583504,-3.945950,-1.813650,9.020503,5.926437,6.783318,1.699060,2.305438,-9.209416,-2.559686,-9.882536,3.824198,-8.079529,-0.523146,4.547917,-5.245170,6.780380,9.863259,7.199087,0.700858,7.064320,9.409765,0.828013,-7.032006,-7.141929,-6.987028,6.463451,-5.886462,1.569629,9.830690,5.657801,2.684772,-8.585181,-1.054940,1.970710,2.271522,8.792114,0.595173,4.774156,-6.696284,1.461067,7.624719,-0.161046,-1.417994,-5.167055,-5.044501,4.451824,-4.622099,-8.023729,3.900029,-0.136684,9.810773,-5.021779,-1.323624,-0.801560,7.293034,-7.032939,-3.727938,-7.949157,-5.002048,-3.666590,-9.559902,-6.111691,-1.076558,-4.906219,-0.252654,-0.454972,-7.621324,-3.025475,-7.629664,3.610128,-9.049269,-1.435427,-0.746810,8.591905,9.486053,0.605374,8.552760,-0.602128,-5.970148,-8.704927,4.898226,-1.547989,9.792252,4.326767,5.033016,9.098412,-0.205756,-0.867185,-5.427052,3.391201,-0.030311,9.805082,-6.073980,9.462937,-0.588040,5.327779,-7.232145,2.079680,-4.881403,3.330960,1.386282,-9.245309,0.945062,-1.176785,-6.745158,2.229374,-0.658775,1.014748,6.077651,-7.016801,-5.282531,2.590780,6.129551,-8.459868,6.027155,-0.787082,-1.512979,-3.875998,7.851985,1.239354,-2.707026,-1.612455,4.068511,1.540322,-0.300643,8.362566,9.341811,9.803836,4.628544,8.284304,-2.723306,-2.193694,-0.643816,-2.733407,8.438948,7.886377,-4.002609,8.353952,6.923577,-3.401098,-3.850690,-7.429533,8.249275,-1.622625,7.070711,6.881085,9.895226,-4.997750,7.794751,-6.606205,-2.742495,-6.068968,4.696029,9.618800,5.493252,8.845592,0.153204,6.003982,3.153193,4.126454,2.155345,-1.441171,-6.736835,-5.294413,3.485622,9.238298,1.101796,4.476838,7.242391,4.534466,-1.249646,-6.592300,3.480941,-2.602520,0.981291,5.277944,7.330571,-7.963434,0.610028,9.494652,2.196285,-2.744803,-2.765746,4.784888,-5.816769,-0.771032,5.334932,-6.784294,8.545256,-5.947385,8.961650,2.401084,6.371912,-0.641324,3.833880,-5.553320,-6.178957,7.550569,-9.330605,-2.929758,7.110153,8.405663,7.188629,7.008549,3.121040,-2.205302,-2.630742,3.879853,1.310065,-0.614702,8.527810,9.465539,1.330530,-5.675982,6.943609,0.455393,-6.665923,-0.749851,-3.000326,-5.473848,2.672904,-3.084465,-0.093165,3.469868,-1.477440,-2.718484,-4.129922,5.954183,-1.365664,2.099337,6.484201,6.886687,-0.862575,2.600511,1.948991,-2.532469,-0.557678,-2.074427,-4.857049,-3.254176,4.420527,-2.537866,-7.339135,-2.483439,5.824216,1.730282,-6.239301,-3.358728,-6.781402,3.865420,0.281906,-0.743719,5.698461,7.455457,-1.376539,-2.469891,-0.231370,-4.961390,-3.198958,-3.311862,-4.946294,-6.592825,-0.996827,5.897114,6.124043,-3.889318,-8.693262,-7.722412,-4.729456,7.296985,-4.425376,-5.927543,-5.416259,1.728562,8.645876,8.300916,6.948621,-1.481766,-3.496808,-9.741026,2.660105,2.421334,4.238582,8.508333,8.589562,0.384766,-1.523214,-0.145336,-6.612148,9.701874,8.210775,0.279073,7.169717,-8.927926,-9.601475,7.719848,-6.959116,1.470170,-1.999730,4.774389,-9.680461,8.752764,-6.857046,9.411116,-8.369767,1.688018,2.519383,-1.782112,-4.536032,8.989734,-4.459599,-2.743297,5.111170,-4.873729,-0.785285,2.090888,-1.996598,3.387061,-1.370255,8.040091,-6.892782,7.244662,-7.505666,-3.625896,-8.624785,6.053686,-2.610445,5.029188,3.958734,3.344206,2.651026,-9.576826,-6.349882,2.575897,2.388820,0.050887,0.364152,1.242250,-6.752516,-0.533211,6.084916,6.602054,-5.168391,0.303957,4.003307,0.964382,9.942075,-5.551956,-0.092069,2.560404,3.713699,5.977378,8.527067,-8.622563,-1.270233,-2.715144,-9.168530,0.134668,5.308088,-9.749234,3.535652,2.128292,-5.138857,-6.545087,8.883581,-9.741202,-4.725522,6.625040,-4.471660,-4.354959,1.039182,4.128460,-0.595413,-0.644077,5.369247,-1.460654,-5.905863,-0.571246,-2.697788,1.850526,-8.271626,-1.407780,6.362323,-0.320031,9.452410,-0.483765,1.201350,-8.146824,-3.693100,2.742954,9.782702,6.265014,-2.987224,-1.997874,-6.829493,-0.602308,8.201728,-5.393117,9.128504,4.360880,3.260626,4.026749,4.116938,-3.912037,-5.573192,9.777036,-0.376936,7.085918,-0.845339,1.022784,-9.550240,2.399551,-2.771961,-7.566325,-5.505643,-9.296411,-1.994561,2.479963,6.022137,6.002039,4.343363,0.158200,8.376104,-0.706111,9.880845,2.169428,-7.610021,3.608032,-5.422722,-4.975745,7.569780,-0.415834,-5.128369,3.575027,4.713732,8.891188,-4.516609,-8.419337,8.790298,4.117690,-3.341246,-0.669069,-2.964403,3.503438,-9.946428,6.790904,-5.185379,4.055516,3.469542,-8.738036,7.115129,-1.021498,0.138795,-1.422523,8.050750,5.331256,-0.574883,-9.581205,5.796545,8.859620,1.389056,-8.913926,-0.354090,-0.039505,-8.064681,-3.045692,-3.208016,3.994213,-0.432949,2.951812,-7.130003,6.457164,-8.641570,6.763600,-5.625670,0.030616,6.205144,9.846318,9.680678,-5.708512,7.829434,-1.512861,5.061250,0.093350,2.824407,0.634194,7.103856,-2.667572,8.539091,6.589141,-1.466265,4.844358,-5.342164,8.670469,2.335232,-5.324841,-4.594322,-1.356676,-5.692504,9.306116,-8.443774,3.586940,-3.793874,-1.241157,5.473538,1.178917,-3.084942,-0.321918,7.616252,8.897107,9.778281,5.914928,-7.303797,6.105138,7.632222,-2.409346,4.360200,1.572313,8.055263,8.298355,-1.516207,-0.580506,-4.598921,2.858548,-4.630550,-1.976577,-5.713016,5.918739,8.821289,-9.127399,-0.994768,4.978284,-7.373601,7.903887,-3.158870,1.084939,3.260711,0.615983,-3.710558,7.147453,0.263376,-3.106474,-0.291422,-2.044836,-3.580747,-0.840880,4.178176,-7.064887,6.785113,2.454891,8.264028,-0.129271,-2.021807,-7.797383,-2.148309,8.187120,2.670370,-6.715467,-9.934945,9.292604,2.596118,4.466453,9.859241,-7.814984,5.964334,-3.751487,-6.264714,2.511183,5.302876,7.884705,1.728502,3.854343,-2.882760,-5.808118,5.513519,9.753711,-3.512398,9.087114,9.420555,-8.921508,-0.842277,2.256939,2.348969,7.375470,-0.379914,-8.423031,-1.032984,-3.709234,9.863228,5.744598,-3.274562,4.462453,1.415839,0.717420,4.138521,8.361272,-2.102455,-1.586148,8.987968,-5.994987,2.680624,5.766139,5.668517,-7.482121,7.356981,8.094564,8.717106,-6.391407,0.367342,9.628438,2.875182,-5.714456,2.947331,6.103363,7.958316,-7.580550,-6.349138,-3.328421,9.379226,0.230216,-6.934178,-2.414707,7.591646,-4.401155,-4.681187,8.909562,-2.534227,-9.333311,3.583999,-0.129481,6.246466,3.925336,-5.182930,7.922098,-7.859746,-3.100047,3.836972,-2.091007,7.646891,-8.038850,-0.133170,2.611783,7.950211,-9.006019,6.750922,2.958296,2.905365,5.229361,-3.948151,8.945705,4.177216,1.729186,2.502312,3.032813,-3.450949,-3.579575,-1.644512,8.222008,9.656527,-1.143691,-9.410561,-3.074354,-1.822881,-4.607118,-8.900214,2.410211,1.036627,2.968673,1.573625,-8.501182,-0.818722,-6.007427,-6.564067,-9.805795,-2.586958,9.325992,4.780734,-8.560407,1.054574,-3.872443,3.727680,4.204774,7.170694,2.249416,1.483387,-9.501940,-3.627393,-6.646749,5.260664,8.995968,5.271720,-4.864404,-2.855942,-2.075147,9.694826,9.049128,4.145600,-7.776694,6.314645,5.518593,4.831697,-9.712111,-3.953838,-6.715771,-2.470238,1.117705,-2.288237,-0.333086,8.825416,-7.178251,1.763271,5.548792,-2.329064,0.639950,8.663372,3.611384,7.233181,-1.553902,-3.332189,4.884702,-4.390996,3.864721,-0.739527,3.318906,-7.379027,7.904812,-2.851939,-7.183616,-3.131399,-8.491275,-4.354171,-3.117960,-2.538985,-1.372294,8.836056,8.236382,-4.671095,5.214193,-2.504746,-7.443807,-7.343330,-2.129029,-4.969471,-5.897369,9.932995,-4.196359,-8.279489,5.738782,-3.640043,5.578380,0.145771,5.560576,5.890619,-4.979028,-3.445698,7.107189,-5.985781,7.649417,-4.784174,1.082680,-1.873686,-2.992995,-9.068350,9.347507,1.806019,2.521816,4.237286,-4.575507,4.417545,-9.661333,-3.155666,-9.594775,-1.855749,4.606263,3.512909,-6.573285,6.380650,-0.069305,-9.696797,-5.167009,8.515999,-8.846571,-2.572081,6.569396,1.617795,0.321448,7.568520,0.816428,7.230619,6.595661,0.182701,3.304423,-3.824101,4.183150,7.959162,-5.498978,3.996153,-0.798033,4.024964,2.395758,6.551512,-4.508089,-3.426818,-3.456891,5.948899,3.265784,9.487005,5.105621,-3.508223,-7.092170,-6.945476,-7.342233,5.420789,6.409536,8.213129,-5.532040,-6.044693,5.057958,-9.464069,-5.194929,6.347673,-3.114675,-9.882942,-5.972615,-4.382684,6.853525,1.340317,-5.504743,-3.337118,-1.240644,-4.826854,-6.546235,8.037578,-7.218720,-2.415538,1.472634,-4.653218,-0.161576,2.138438,1.482522,-6.167834,-7.700356,8.254042,-2.455956,2.095742,0.218237,7.763556,-9.548991,2.149961,-3.388946,2.704447,-2.256402,-0.599842,4.183524,8.450112,3.322755,3.090901,-6.955427,8.724318,-3.720619,8.507256,-5.134830,9.175757,4.522258,9.887690,-1.628513,-3.122296,-9.055670,-1.338196,-1.086239,4.651052,7.992079,-4.307884,3.848642,-0.465899,-2.572071,9.679241,7.478543,7.141945,7.189346,-4.267586,9.112253,-8.926570,1.216653,1.760166,6.484547,-4.332443,3.973885,-4.463165,-7.612641,-6.622590,-8.018557,0.919960,6.562039,-8.418532,-3.790952,-6.206462,6.964353,1.838468,9.690336,3.555694,4.252421,5.810931,-5.838824,3.248301,9.795680,5.556338,9.947215,3.211452,5.276158,-2.143519,-9.173363,5.918419,4.597774,9.795089,-7.391270,6.939139,-9.752477,-0.284934,-9.011353,4.038399,-3.470152,9.004187,1.529784,-7.008780,8.662703,-7.799904,4.521435,4.398241,3.152784,-2.894298,4.776720,0.473037,-7.723744,-1.643870,-4.805832,-6.102027,-7.193944,-7.883471,-3.783723,-0.858359,9.028365,-9.521663,3.858201,-4.653881,-4.523679,-8.665879,-4.178472,8.414388,2.986341,-7.283759,3.528209,-4.807425,-4.820090,3.804482,3.218976,-6.172044,5.425762,-2.190101,0.552291,5.553513,8.049192,5.536944,3.781577,-3.078680,2.601111,-3.976401,-4.078506,-8.109462,-1.335092,8.038202,-3.473259,-2.818384,-7.260664,-2.001422,7.530397,9.156553,8.214688,3.151747,9.101408,0.208261,-5.765260,3.695835,9.197631,9.041166,-8.261718,2.254107,9.406691,-2.541825,-7.356695,2.076122,-7.575232,-9.853462,7.099344,-6.006658,-9.493217,3.520948,-1.849549,6.833873,2.280699,3.784853,3.451951,-1.349903,-7.077018,4.821209,0.389784,1.927043,3.828464,8.904122,4.080423,-6.245621,1.158877,-0.215389,-7.235975,1.611726,-4.224774,1.900959,-8.179242,-7.524323,-2.151627,5.608247,-2.673416,4.518568,8.226331,7.411226,2.963455,-8.640890,5.608330,-3.050215,-8.482231,3.947084,-9.619727,-6.760953,-3.763875,7.805882,-2.976903,-5.729966,9.723955,6.824763,-0.368657,8.753917,-8.398575,8.551573,-3.876934,6.020719,0.594309,-9.737476,-2.250454,-5.539370,4.033843,7.356766,1.845461,6.593181,-7.991814,6.612815,2.818052,-3.646986,-5.321039,5.282901,0.467663,4.887308,-7.055101,-6.951772,-6.269271,4.792781,-7.593713,-7.261182,1.944101,3.715974,-3.235215,-1.687187,9.720147,0.132813,-8.078210,7.966227,0.355196,0.350676,-0.891289,-6.856024,-0.720987,-8.729666,4.578254,-7.549156,-5.097235,-9.933758,-1.943390,-1.841206,5.988932,1.185174,2.043207,0.546120,1.081780,-3.116644,-2.161265,3.252643,-8.784331,5.164420,-3.665494,-7.993851,5.538189,9.370497,-1.287935,-1.031294,8.945955,1.014979,-7.674059,9.796647,6.479987,7.179396,2.652136,1.899155,-5.483320,0.899942,-9.816102,-1.533434,-1.293805,-7.583909,5.113682,-8.662600,-0.060741,1.572616,-9.230263,4.222094,-3.637906,0.735925,0.336013,-5.516887,4.503723,-1.775967,4.333509,-9.577193,-2.784259,-1.913707,5.682489,-8.326708,6.015549,-8.127040,-7.590048,0.589584,-8.104423,-3.984703,0.858850,6.672913,-2.776453,7.219575,-9.016108,5.873110,-6.919376,5.423549,-2.430538,5.307061,2.124489,2.173069,0.194041,6.714649,4.653633,6.385460,-5.205931,-3.714353,-4.408576,-4.097512,7.312905,3.437128,-7.806698,6.722970,-7.058917,-4.116616,-9.763032,-5.304946,-8.217340,6.976026,6.775473,1.479977,1.423854,6.337405,0.326562,1.025706,3.734101,-6.242641,7.279040,9.092067,-3.235495,2.399366,2.057523,1.865319,3.804361,-3.402366,6.923933,-0.648463,2.859462,4.477352,-4.135965,6.541203,9.683568,6.846034,4.800080,1.424714,-8.825464,-2.127839,-9.926950,3.441835,-1.269045,-8.721364,1.018598,-1.835540,-4.273088,6.128129,-1.866828,9.111971,-6.634177,-0.549101,3.649105,-3.028187,8.266054,1.473022,-0.317537,5.354316,-6.980835,-9.032730,8.105479,-1.554743,-9.794017,-8.100072,-3.376407,3.129782,-9.015093,-7.356483,2.496611,2.258676,0.601038,-8.351843,8.097892,-5.438776,6.913013,-8.297300,-7.068064,5.543683,-0.073020,8.428602,5.587729,-5.880132,0.911160,4.141062,4.528385,8.175592,6.849089,-2.006962,8.080855,5.806758,5.779755,7.655230,-7.053861,9.892988,-7.393838,-2.663060,7.770929,4.611542,6.432175,9.110113,1.193561,-2.289667,-0.583831,-7.007441,9.555104,-5.054824,0.476073,-6.565648,-5.728598,-3.002330,6.135547,-5.207790,9.444790,7.556224,-1.084963,3.974347,9.580079,2.108140,-1.523526,4.910632,9.142743,7.834108,-3.649989,-4.772500,3.636549,1.118941,4.796600,2.312042,-6.984141,-1.575426,8.756108,-9.427368,7.757551,-1.875691,4.513009,4.111976,9.629790,2.844127,4.239638,8.555516,3.599829,9.775032,-5.609476,8.493723,4.276451,-8.073167,-8.821044,1.375844,-0.389909,6.811965,7.604997,-1.105175,8.206176,-9.565611,5.402171,8.770199,1.708897,-1.908849,7.937628,-2.863940,7.625212,7.410267,7.626275,4.942404,-3.526322,-4.279996,7.437123,7.366660,-3.420140,0.001277,7.440609,-5.569939,2.231818,-8.505626,3.000464,9.831863,5.287150,-2.516858,7.808194,-6.522806,-5.831518,-2.791703,9.792726,1.676086,1.321128,-1.276589,5.505236,0.533293,3.514697,-8.580126,-3.732487,6.344594,-5.822083,8.980917,9.314967,-4.782795,-8.603066,4.526682,-5.070151,7.940300,-5.309127,-7.459116,8.616394,-5.484254,0.287557,5.926904,8.557240,-4.283349,-1.542805,1.749120,4.420172,2.117136,-0.843661,-7.985033,6.100188,3.504601,6.472991,-8.027528,2.345908,7.772836,8.087729,9.464376,4.069380,-8.602481,3.116236,3.163511,8.807672,-0.973727,1.155750,-1.439315,-6.177340,-4.103386,1.912059,-6.495064,-9.783936,-9.220309,-5.896807,-6.397948,5.735286,7.640885,-8.758675,9.732048,-6.203114,-5.413750,-3.772977,-0.868270,-8.040532,-1.598872,8.168269,-1.466678,-6.092439,1.135401,-9.689980,-5.732045,7.452411,-2.536125,-3.736050,4.335454,7.886213,9.745543,2.944332,2.571005,-0.859984,6.061702,-9.659501,9.556770,-3.669056,-8.054948,-5.689077,-6.003986,-0.680737,-0.750689,1.511847,9.089374,0.156634,-2.546258,9.519196,-4.069372,-1.826050,1.458741,3.190343,7.209195,-1.277134,1.185673,6.027650,-1.446318,-0.062795,-8.703925,-5.910152,0.141000,-8.835684,-2.479277,4.394396,-6.166959,3.461425,-2.001050,-6.451658,-0.191799,0.756191,-7.787915,-0.104474,2.032178,6.606572,-1.259267,8.220151,9.352713,1.139780,8.519924,-4.727277,-5.270087,-5.458473,-5.853898,3.825804,3.711431,-1.821525,7.800118,-4.246355,-3.932595,-7.259719,9.552440,-9.610213,-5.666587,5.483707,-8.343145,5.960681,6.976000,6.254950,-1.100192,-5.999188,-8.231290,4.988100,3.615877,-9.627919,5.806265,-7.412016,-8.280857,0.173874,9.482714,3.747791,-9.167556,-4.459340,-3.929026,-0.542571,-8.219436,-4.147366,8.171179,-9.943231,8.313467,-4.008025,-5.250934,2.325842,1.701878,0.162526,8.829002,-4.159182,8.128667,7.257164,1.237773,-2.764488,6.083029,-9.824620,0.097255,8.184662,6.924569,1.059053,9.402735,-9.502149,-5.559067,5.346680,-8.118962,2.176402,-6.666306,1.544815,-3.620959,-7.303576,-7.625945,7.808077,0.347842,-3.671529,-2.100949,-2.001317,3.541253,9.497707,-5.678525,1.411889,-9.967504,-5.598520,-2.043758,-4.234754,-9.682869,-6.356021,5.791089,-2.655318,-9.900277,2.943307,-6.738787,-7.791615,8.106784,4.681388,-1.497224,-9.155791,-7.206805,-9.270327,2.854887,5.969829,2.188550,-7.227927,8.571389,0.263052,-7.460516,4.525536,7.523650,-1.087329,6.247298,-5.755049,-7.240077,-0.087137,-0.675707,1.832196,-3.819096,6.659370,-7.581896,-4.418449,-4.226390,-0.511914,3.616846,7.608102,0.563845,4.647481,-8.368115,7.684318,-4.343242,4.469187,-2.701178,-1.674728,3.268024,-4.774127,-1.532178,-1.835168,-9.353191,5.613145,-1.612628,-4.057597,-8.858848,-2.622516,-4.766403,2.599732,9.691480,5.641405,-5.945972,-5.522553,7.309524,4.354317,-9.969212,-5.480333,-4.597764,-1.197560,-6.868121,9.227323,-4.773892,8.670121,1.579565,9.114618,5.409024,-0.482814,3.779711,-2.420950,5.611130,-2.705868,1.545465,-9.030310,-4.740841,-8.352417,-5.027526,9.565067,2.080426,3.628249,8.723138,5.452742,5.725958,-6.667275,1.845972,7.587619,3.898630,-5.446418,-3.808088,-2.548993,9.528517,4.673731,-5.161652,-8.399466,-4.951591,-2.530110,-4.876213,-7.771869,6.084045,-1.023287,6.306005,3.798926,8.206539,6.318322,2.411784,-2.111562,-2.574302,-0.483915,-2.669200,-6.114283,-1.347800,3.406568,8.441554,-8.087663,-1.162028,0.670323,-1.676189,-6.295181,-1.944810,5.021386,-5.049209,-0.451804,3.644809,0.533034,5.497145,-1.617290,5.400024,-5.329364,-6.605640,8.495174,-4.201457,-2.525551,-4.691513,-3.949817,3.630189,-5.660862,-9.200868,-9.052193,2.105047,1.054637,-7.058231,-7.530250,7.009558,-0.508967,4.904882,3.191530,-7.229703,-4.525767,-4.526989,0.901215,-5.364205,6.776253,-4.961323,-6.920794,-3.963995,-5.167806,-5.330031,-3.058882,5.452726], dtype = "float32")#candidate|2210|(2352,)|const|float32
call_2209 = func_1737_call(relay.reshape(const_2210.astype('float32'), [14, 12, 14]))
call_2211 = func_1737_call(relay.reshape(const_2210.astype('float32'), [14, 12, 14]))
func_1078_call = mod.get_global_var('func_1078')
func_1081_call = mutated_mod.get_global_var('func_1081')
const_2223 = relay.const([6,7,8,9,-8,2,10,-10,6,10,-4,4,4,8,-7,-2,4,4,-1,10,8,1,1,4,7,9,-2,9,-6,-3,1,-7,-5,7,-1,-9,-10,10,2,-1,7,-10,-10,7,5,8,-5,3,3,10,-6,7,-7,-1,1,10,9,-7,1,4,3,-6,-4,-10,10,3,9,3,-6,-7,-6,5,8,-4,-5,9,-8,-6,-3,-3,6,-10,-5,3,9,10,-8,1,-6,-7,1,9,-10,-6,-1,7,-5,2,-9,-5,4,4,-10,-8,-9,-9,10,2,1,2,-6,-9,5,5,6,-4,5,2,2,2,-6,4,9,5,-3,-9,-5,4,-10,6,8,6,-10,7,-8,-5,-1,8,2,-9,-2,8,9,-9,-10,4,-7,-1,7,-10,10,9,2,-3,-3,-3,-3,4,4,10,10,-4,-2,-3,5,-6,-7,-8,6,-7,-4,-6,1,6,3,1,-9,10,10,-2,7,1,5,-4,9,-10,2,-9,-3,-10,2,-10,6,2,-1,2,2,-1,1,8,7,-4,-3,3,9,-4,3,-1,2,-7,-10,3,2,-1,-1,6,8,-8,2,-8,-5,1,-4,8,-8,3,4,1,1,-3,-2,2,-7,-10,-4,-10,-1,-4,5,-5,7,-2,3,8,-5,6,-10,-7,1,-5,-8,-1,-8,-5,8,-8,7,7,5,-2,8,8,-10,-2,4,5,4,2,4,-9,-9,-9,-8,4,4,4,8,8,8,-9,9,8,-4,9,2,-2,6,-7,8,8,9,-3,-5,-7,3,7,1,-9,-8,5,-6,-10,10,7,-9,1,-8,-7,5,5,-9,2,-2,7,9,9,-2,-10,-6,-2,3,-3,8,-3,1,3,-4,9,5,-5,1,2,5,-4,10,-6,-9,-1,8,-4,-3,8,-3,3,-5,4,2,-9,-9,-8,1,9,2,9,-5,-8,9,8,-6,-9,7,7,1,-6,1,9,-7,-1,10,8,4,-6,3,6,4,10,-1,3,-7,2,3,9,10,9,-2,5,-3,1,-6,-5,4,-4,-6,-7,-7,8,-10,2,-7,-10,-5,8,-8,4,-8,6,6,-7,6,3,4,-3,-10,-6,3,-7,3,-8,4,6,-3,-4,-2,-1,-4,10,-8,2,-8,-5,4,-3,7,9,3,3,-8,3,7,-8,8,9,-3,-4,-9,5,-10,2,8,-9,7,-7,1,6,-3,1,6,-9,-2,1,-1,7,-7,-7,10,-5,9,3,3,-10,-8,10,-4,3,2,-7,2,-2,-3,-3,-4,2,-2,5,-8,2,9,-8,-10,9,6,-3,-2,-7,-6,9,-1,-5,-6,10,9,-10,5,1,8,5,6,4,5,-4,-4,-10,4,9,8,-5,-3,-5,-2,4,-4,6,9,9,-1,-4,4,9,-1,-7,2,-6,-7,-3,-7,9,-8,-3,-4,2,3,-8,1,-4,-8,5,-5,4,4,-8,-6,10,3,10,6,-1,-7,-6,8,3,3,5,9,-9,-9,-3,6,-1,-9,-4,-3,1,-8,10,-9,4,-3,1,10,-6,-6,6,-2,-9,-7,3,-2,10,5,5,-5,7,10,9,-7,9,-3,3,1,6,7,-10,8,-8,-1,7,4,3,2,-1,6,2,6,-5,-7,9,-10,4,8,-1,7,-5,3,-4,-10,4,7,-7,1,-2,-3,-4,-9,-1,2,-5,9,1,-10,7,-2,-7,-8,3,-6,-8,5,2,-4,-10,4,-7,-7,-6,-5,-8,7,7,-2,7,-3,-7,-8,-2,-1,-9,8,-1,-6,4,4,-10,9,-8,-6,-9,9,9,2,-10,-6,9,8,-2,8,8,8,-3,-7,-8,-6,-4,-2,2,8,8,-4,-9,8,7,-7,-8,-4,2,1,-4,6,10,5,-1,-8,7,7,-2,-7,-10,5,9,-8,1,-10,6,5,3,10,2,-4,-9,5,7,2,6,5,7,8,-3,-4,-6,7,-10,-5,4,-1,4,4,-8,7,4,-3,7,10,2,1,5,-9,-4,7,-8,2,-6,1,5,-2,-2,-1,-6,9,2,-8,-7,-4,-3,-10,1,1,10,-3,-2,5,8,4,-4,-4,2,-5,-6,9,-2,-10,-1,-2,3,-8,-8,8,7,-2,5,-7,-7,-8,-3,-2,-8,-8,3,1,-5,10,10,-1,-10,-7,-10,-5,-9,8,2,7,-4,10,-6,1,2,7,9,-8,-3,-7,-1,8,5,-10,-7,10,3,-9,3,-10,-3,-6,7,3,-10,10,3,9,-5,-9,-7,6,-9,9,-6,4,8,-2,-5,-4,5,4,4,-8,-2,3,-5,1,5,3,-1,-9,-8,-3,-7,-8,10,2,5,3,8,9,7,5,-2,-1,7,1,2,10,10,2,10,-6,-4,4,-6,-5,-5,-5,9,7,8,3,1,-9,-1,-4,5,-6,2,-2,3,1,8,-4,-2,2,8,-9,-9,3,-1,1,-9,-8,-6,-9,-8,8,8,2,2,1,-1,10,-1,10,-10,-10,7,-1,-8,4,3,-3,-4,3,9,8,4,-10,1,-7,-10,-1,4,-3,-2,-10,1,-6,-8,-2,10,-9,-6,-1,10,9,6,-8,-3,7,-8,-10,2,-5,-6,-1,5,-3,10,9,4,1,-9,2,-2,9,6,10,-7,8,9,10,-1,6,-6,3,-2,-10], dtype = "uint32")#candidate|2223|(1001,)|const|uint32
call_2222 = func_1078_call(relay.reshape(const_2223.astype('uint32'), [7, 11, 13]), relay.reshape(const_2223.astype('uint32'), [7, 11, 13]), )
call_2224 = func_1078_call(relay.reshape(const_2223.astype('uint32'), [7, 11, 13]), relay.reshape(const_2223.astype('uint32'), [7, 11, 13]), )
var_2231 = relay.var("var_2231", dtype = "uint32", shape = (6, 100))#candidate|2231|(6, 100)|var|uint32
bop_2232 = relay.less_equal(var_2200.astype('bool'), relay.reshape(var_2231.astype('bool'), relay.shape_of(var_2200))) # shape=(6, 100)
output = relay.Tuple([call_2180,call_2184,const_2185,call_2198,const_2199,call_2209,const_2210,call_2222,const_2223,bop_2232,])
output2 = relay.Tuple([call_2181,call_2186,const_2185,call_2201,const_2199,call_2211,const_2210,call_2224,const_2223,bop_2232,])
func_2236 = relay.Function([var_2200,var_2231,], output)
mod['func_2236'] = func_2236
mod = relay.transform.InferType()(mod)
var_2237 = relay.var("var_2237", dtype = "uint32", shape = (6, 100))#candidate|2237|(6, 100)|var|uint32
var_2238 = relay.var("var_2238", dtype = "uint32", shape = (6, 100))#candidate|2238|(6, 100)|var|uint32
output = func_2236(var_2237,var_2238,)
func_2239 = relay.Function([var_2237,var_2238,], output)
mutated_mod['func_2239'] = func_2239
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2345 = relay.var("var_2345", dtype = "int16", shape = (7, 11, 12))#candidate|2345|(7, 11, 12)|var|int16
var_2346 = relay.var("var_2346", dtype = "int16", shape = (7, 11, 12))#candidate|2346|(7, 11, 12)|var|int16
bop_2347 = relay.bitwise_and(var_2345.astype('int16'), relay.reshape(var_2346.astype('int16'), relay.shape_of(var_2345))) # shape=(7, 11, 12)
output = relay.Tuple([bop_2347,])
output2 = relay.Tuple([bop_2347,])
func_2362 = relay.Function([var_2345,var_2346,], output)
mod['func_2362'] = func_2362
mod = relay.transform.InferType()(mod)
mutated_mod['func_2362'] = func_2362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2362_call = mutated_mod.get_global_var('func_2362')
var_2364 = relay.var("var_2364", dtype = "int16", shape = (7, 11, 12))#candidate|2364|(7, 11, 12)|var|int16
var_2365 = relay.var("var_2365", dtype = "int16", shape = (7, 11, 12))#candidate|2365|(7, 11, 12)|var|int16
call_2363 = func_2362_call(var_2364,var_2365,)
output = call_2363
func_2366 = relay.Function([var_2364,var_2365,], output)
mutated_mod['func_2366'] = func_2366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2178_call = mod.get_global_var('func_2178')
func_2179_call = mutated_mod.get_global_var('func_2179')
call_2368 = relay.TupleGetItem(func_2178_call(), 1)
call_2369 = relay.TupleGetItem(func_2179_call(), 1)
const_2370 = relay.constdtype = "float32")#candidate|2370|(14, 12, 14)|const|float32
bop_2371 = relay.right_shift(call_2368.astype('int64'), relay.reshape(const_2370.astype('int64'), relay.shape_of(call_2368))) # shape=(14, 12, 14)
bop_2374 = relay.right_shift(call_2369.astype('int64'), relay.reshape(const_2370.astype('int64'), relay.shape_of(call_2369))) # shape=(14, 12, 14)
output = relay.Tuple([bop_2371,])
output2 = relay.Tuple([bop_2374,])
func_2375 = relay.Function([], output)
mod['func_2375'] = func_2375
mod = relay.transform.InferType()(mod)
mutated_mod['func_2375'] = func_2375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2375_call = mutated_mod.get_global_var('func_2375')
call_2376 = func_2375_call()
output = call_2376
func_2377 = relay.Function([], output)
mutated_mod['func_2377'] = func_2377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2054_call = mod.get_global_var('func_2054')
func_2056_call = mutated_mod.get_global_var('func_2056')
call_2382 = func_2054_call()
call_2383 = func_2054_call()
output = relay.Tuple([call_2382,])
output2 = relay.Tuple([call_2383,])
func_2392 = relay.Function([], output)
mod['func_2392'] = func_2392
mod = relay.transform.InferType()(mod)
output = func_2392()
func_2393 = relay.Function([], output)
mutated_mod['func_2393'] = func_2393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1929_call = mod.get_global_var('func_1929')
func_1930_call = mutated_mod.get_global_var('func_1930')
call_2409 = func_1929_call()
call_2410 = func_1929_call()
var_2420 = relay.var("var_2420", dtype = "float32", shape = (14, 12, 14))#candidate|2420|(14, 12, 14)|var|float32
bop_2421 = relay.logical_or(call_2409.astype('bool'), relay.reshape(var_2420.astype('bool'), relay.shape_of(call_2409))) # shape=(14, 12, 14)
bop_2424 = relay.logical_or(call_2410.astype('bool'), relay.reshape(var_2420.astype('bool'), relay.shape_of(call_2410))) # shape=(14, 12, 14)
func_2392_call = mod.get_global_var('func_2392')
func_2393_call = mutated_mod.get_global_var('func_2393')
call_2437 = relay.TupleGetItem(func_2392_call(), 0)
call_2438 = relay.TupleGetItem(func_2393_call(), 0)
func_1078_call = mod.get_global_var('func_1078')
func_1081_call = mutated_mod.get_global_var('func_1081')
const_2444 = relay.const([-10,-6,-9,9,-2,-9,9,9,3,4,-5,1,-1,-6,9,-4,10,-5,6,-6,-1,7,1,1,6,-10,-2,-8,-1,-1,-8,3,-6,-6,-10,-3,7,4,6,2,9,-2,-10,-3,7,-5,-8,2,5,-8,-2,10,1,-7,-7,8,10,8,-2,-3,2,3,-6,-4,3,-10,3,6,1,-10,2,-6,-9,2,-5,8,5,-7,-6,-4,5,6,3,3,-5,4,-2,-10,5,2,-9,7,-4,6,7,9,-5,3,6,4,8,1,-10,-1,-4,-5,3,-10,-8,7,8,9,-2,5,-6,-1,7,-6,-2,-2,-2,-1,10,-4,-8,4,-6,1,-3,7,-5,8,10,-1,-3,-1,1,-9,-3,-9,-1,-9,6,-6,8,10,4,7,2,-6,-10,-9,1,2,-9,5,4,1,-5,8,-2,7,8,10,10,4,-5,3,-1,9,7,-1,1,-2,-9,-8,-1,-7,-8,1,-2,-10,-10,-4,9,10,-1,-9,-3,7,-3,4,-1,-5,9,7,-10,10,-9,10,10,-3,3,3,5,1,-6,-2,-8,-6,-2,8,-9,4,5,-3,6,-5,-8,-6,-8,-10,1,-3,-8,6,1,4,4,-7,5,-5,-6,1,-1,-6,3,-5,-6,5,-9,-8,7,-2,1,2,-7,-7,9,6,7,9,6,6,4,9,-4,-4,8,-4,3,-7,6,3,3,3,1,-10,6,2,9,1,-8,-6,1,7,9,6,7,-9,1,10,4,1,-6,-1,-6,-10,-9,3,8,6,4,-3,1,3,5,-4,-3,-2,7,6,6,-8,-2,-5,-2,10,-2,1,6,-7,-7,-2,7,-7,-5,-8,9,-6,-10,3,-1,-10,-7,-8,2,6,6,8,-1,-8,10,-9,-5,-1,-5,6,9,-1,-4,-9,-4,-8,2,6,4,4,-1,4,10,-2,10,-1,4,5,-10,-6,9,7,-1,7,-6,-9,3,-6,9,-8,-5,-7,-10,7,-7,6,-9,5,5,-5,-2,9,-8,-10,2,7,6,4,-8,-8,6,-1,7,2,10,3,4,9,9,-10,-5,8,-4,-9,-5,-7,1,5,6,9,7,-7,-6,-2,6,-7,10,4,10,-8,10,-6,-3,-8,10,-2,1,-5,-8,1,-10,4,-4,8,2,8,9,-3,-7,-3,10,4,-7,-6,8,8,8,2,2,7,-3,-8,-3,9,3,6,7,5,-1,-10,2,8,2,3,9,-10,5,9,10,-7,-9,-8,-5,2,-6,4,10,6,-2,-8,9,5,7,-3,1,-1,4,-9,-4,6,5,6,4,9,-2,-6,4,-4,-5,-9,-8,-9,2,5,8,6,1,-9,3,-10,-5,-6,10,-2,-9,-3,3,-9,-7,1,-6,-1,8,-4,7,5,-2,1,-1,7,3,-6,2,-1,2,6,-10,6,6,8,6,5,6,-10,-8,6,-8,10,-10,1,-7,-9,-6,5,-5,-7,-10,-10,8,-3,8,-2,4,8,-4,-5,8,8,-8,-5,-9,5,5,-6,-7,1,-10,4,4,-7,3,-9,-7,6,-1,-2,3,10,5,3,4,-7,-9,-8,7,3,-9,-2,1,-4,8,3,-5,1,6,10,-10,-4,-2,-3,-10,-8,1,7,-7,-2,-9,8,7,-2,5,-5,-2,3,-1,-2,3,10,-1,5,10,-7,-4,2,6,4,-9,8,6,-5,10,-10,1,-8,-6,2,-10,-6,-6,6,4,5,7,-5,5,-1,-9,-9,-10,-3,-9,6,-4,6,1,-1,-9,8,-10,-2,3,1,4,-2,-6,-5,-10,6,3,3,3,-1,-2,10,-2,-8,-6,6,-10,8,-3,-3,-4,-6,-3,3,7,-10,-4,1,-5,-10,-10,4,-7,8,-7,-3,-1,10,-10,-2,8,5,4,-10,7,-1,8,-8,10,-5,8,8,6,3,-2,4,9,-3,-7,2,-5,-2,-10,10,-10,-7,-4,8,-2,8,8,-3,1,-9,-1,4,-6,8,1,-6,-4,9,-7,-8,8,2,-7,-4,-4,-9,-6,8,-1,9,-6,-3,9,6,7,-4,1,-4,4,-9,10,1,2,9,-10,5,5,-6,-8,-10,-8,1,-2,-8,-2,5,8,2,-9,-5,-9,-3,-8,9,-3,4,-5,1,-1,-6,-9,-9,-8,6,9,-6,-4,5,10,-2,2,4,-1,5,-5,5,3,-10,-4,-10,-10,3,7,-7,-3,8,3,3,7,5,10,-6,5,-5,6,4,-4,-1,-7,6,9,5,5,7,-7,-6,6,1,-1,2,2,3,-5,6,5,3,-5,-6,-10,4,5,4,3,-3,-2,2,-1,1,-9,1,9,6,6,-4,-2,2,10,9,5,-10,8,-2,-6,6,-2,-7,-3,-4,-4,-3,-9,-6,-5,6,10,7,-9,7,-4,9,2,-6,1,-3,-10,-3,-3,2,7,-6,-6,-3,3,-8,-4,4,3,10,2,8,10,-1,-2,1,-10,6,-1,9,-8,-1,-4,-10,-5,-2,4,6,-5,6,-9,7,-3,5,2,6,-3,-4,-1,5,-5,-2,-10,2,7,-3,5,8,-2,10,9,6,4,-10,-4,-3,-5,-7,-5,-10,-7,1,-4,-7,-5,4,6,7,-2,9,3,5,8,5,-3,8,-10,9,9,4,-7,-8,-8,5,2,-6,-5,-5,4], dtype = "uint32")#candidate|2444|(1001,)|const|uint32
call_2443 = func_1078_call(relay.reshape(const_2444.astype('uint32'), [7, 11, 13]), relay.reshape(const_2444.astype('uint32'), [7, 11, 13]), )
call_2445 = func_1078_call(relay.reshape(const_2444.astype('uint32'), [7, 11, 13]), relay.reshape(const_2444.astype('uint32'), [7, 11, 13]), )
var_2446 = relay.var("var_2446", dtype = "float32", shape = (5, 7, 9))#candidate|2446|(5, 7, 9)|var|float32
bop_2447 = relay.maximum(call_2437.astype('float32'), relay.reshape(var_2446.astype('float32'), relay.shape_of(call_2437))) # shape=(5, 7, 9)
bop_2450 = relay.maximum(call_2438.astype('float32'), relay.reshape(var_2446.astype('float32'), relay.shape_of(call_2438))) # shape=(5, 7, 9)
output = relay.Tuple([bop_2421,call_2443,const_2444,bop_2447,])
output2 = relay.Tuple([bop_2424,call_2445,const_2444,bop_2450,])
func_2459 = relay.Function([var_2420,var_2446,], output)
mod['func_2459'] = func_2459
mod = relay.transform.InferType()(mod)
var_2460 = relay.var("var_2460", dtype = "float32", shape = (14, 12, 14))#candidate|2460|(14, 12, 14)|var|float32
var_2461 = relay.var("var_2461", dtype = "float32", shape = (5, 7, 9))#candidate|2461|(5, 7, 9)|var|float32
output = func_2459(var_2460,var_2461,)
func_2462 = relay.Function([var_2460,var_2461,], output)
mutated_mod['func_2462'] = func_2462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1929_call = mod.get_global_var('func_1929')
func_1930_call = mutated_mod.get_global_var('func_1930')
call_2464 = func_1929_call()
call_2465 = func_1929_call()
uop_2466 = relay.exp(call_2464.astype('float32')) # shape=(14, 12, 14)
uop_2468 = relay.exp(call_2465.astype('float32')) # shape=(14, 12, 14)
output = relay.Tuple([uop_2466,])
output2 = relay.Tuple([uop_2468,])
func_2472 = relay.Function([], output)
mod['func_2472'] = func_2472
mod = relay.transform.InferType()(mod)
output = func_2472()
func_2473 = relay.Function([], output)
mutated_mod['func_2473'] = func_2473
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2526 = relay.const([[[7.641827,0.552441,-7.321429,-4.759763],[7.092334,1.257843,7.871709,8.202811]],[[5.759397,-5.982285,3.826350,-7.207569],[5.942332,-4.490116,-9.210341,-6.454431]],[[-3.810777,4.660753,2.755273,-3.610887],[-6.261903,-4.963289,1.593442,-4.232620]],[[6.627770,-9.913474,7.565167,-5.636338],[5.337005,-2.198635,-3.223797,-4.248897]]], dtype = "float64")#candidate|2526|(4, 2, 4)|const|float64
var_2527 = relay.var("var_2527", dtype = "float64", shape = (4, 2, 4))#candidate|2527|(4, 2, 4)|var|float64
bop_2528 = relay.divide(const_2526.astype('float64'), relay.reshape(var_2527.astype('float64'), relay.shape_of(const_2526))) # shape=(4, 2, 4)
uop_2532 = relay.log10(bop_2528.astype('float64')) # shape=(4, 2, 4)
output = uop_2532
output2 = uop_2532
func_2536 = relay.Function([var_2527,], output)
mod['func_2536'] = func_2536
mod = relay.transform.InferType()(mod)
var_2537 = relay.var("var_2537", dtype = "float64", shape = (4, 2, 4))#candidate|2537|(4, 2, 4)|var|float64
output = func_2536(var_2537)
func_2538 = relay.Function([var_2537], output)
mutated_mod['func_2538'] = func_2538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_2554 = func_2127_call()
call_2555 = func_2127_call()
var_2556 = relay.var("var_2556", dtype = "float32", shape = (5, 7, 9))#candidate|2556|(5, 7, 9)|var|float32
bop_2557 = relay.add(call_2554.astype('int16'), relay.reshape(var_2556.astype('int16'), relay.shape_of(call_2554))) # shape=(5, 7, 9)
bop_2560 = relay.add(call_2555.astype('int16'), relay.reshape(var_2556.astype('int16'), relay.shape_of(call_2555))) # shape=(5, 7, 9)
uop_2564 = relay.cosh(var_2556.astype('float32')) # shape=(5, 7, 9)
func_2392_call = mod.get_global_var('func_2392')
func_2393_call = mutated_mod.get_global_var('func_2393')
call_2569 = relay.TupleGetItem(func_2392_call(), 0)
call_2570 = relay.TupleGetItem(func_2393_call(), 0)
func_2054_call = mod.get_global_var('func_2054')
func_2056_call = mutated_mod.get_global_var('func_2056')
call_2571 = func_2054_call()
call_2572 = func_2054_call()
func_718_call = mod.get_global_var('func_718')
func_721_call = mutated_mod.get_global_var('func_721')
var_2574 = relay.var("var_2574", dtype = "int8", shape = (1920,))#candidate|2574|(1920,)|var|int8
call_2573 = relay.TupleGetItem(func_718_call(relay.reshape(var_2574.astype('int8'), [15, 8, 16])), 2)
call_2575 = relay.TupleGetItem(func_721_call(relay.reshape(var_2574.astype('int8'), [15, 8, 16])), 2)
func_2178_call = mod.get_global_var('func_2178')
func_2179_call = mutated_mod.get_global_var('func_2179')
call_2592 = relay.TupleGetItem(func_2178_call(), 1)
call_2593 = relay.TupleGetItem(func_2179_call(), 1)
output = relay.Tuple([bop_2557,uop_2564,call_2569,call_2571,call_2573,var_2574,call_2592,])
output2 = relay.Tuple([bop_2560,uop_2564,call_2570,call_2572,call_2575,var_2574,call_2593,])
func_2600 = relay.Function([var_2556,var_2574,], output)
mod['func_2600'] = func_2600
mod = relay.transform.InferType()(mod)
mutated_mod['func_2600'] = func_2600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2600_call = mutated_mod.get_global_var('func_2600')
var_2602 = relay.var("var_2602", dtype = "float32", shape = (5, 7, 9))#candidate|2602|(5, 7, 9)|var|float32
var_2603 = relay.var("var_2603", dtype = "int8", shape = (1920,))#candidate|2603|(1920,)|var|int8
call_2601 = func_2600_call(var_2602,var_2603,)
output = call_2601
func_2604 = relay.Function([var_2602,var_2603,], output)
mutated_mod['func_2604'] = func_2604
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2628 = relay.var("var_2628", dtype = "int32", shape = (8, 1, 6))#candidate|2628|(8, 1, 6)|var|int32
var_2629 = relay.var("var_2629", dtype = "int32", shape = (8, 6, 6))#candidate|2629|(8, 6, 6)|var|int32
bop_2630 = relay.greater(var_2628.astype('bool'), var_2629.astype('bool')) # shape=(8, 6, 6)
uop_2637 = relay.sigmoid(var_2629.astype('float64')) # shape=(8, 6, 6)
var_2642 = relay.var("var_2642", dtype = "float64", shape = (8, 6, 6))#candidate|2642|(8, 6, 6)|var|float64
bop_2643 = relay.floor_divide(uop_2637.astype('float32'), relay.reshape(var_2642.astype('float32'), relay.shape_of(uop_2637))) # shape=(8, 6, 6)
output = relay.Tuple([bop_2630,bop_2643,])
output2 = relay.Tuple([bop_2630,bop_2643,])
func_2651 = relay.Function([var_2628,var_2629,var_2642,], output)
mod['func_2651'] = func_2651
mod = relay.transform.InferType()(mod)
var_2652 = relay.var("var_2652", dtype = "int32", shape = (8, 1, 6))#candidate|2652|(8, 1, 6)|var|int32
var_2653 = relay.var("var_2653", dtype = "int32", shape = (8, 6, 6))#candidate|2653|(8, 6, 6)|var|int32
var_2654 = relay.var("var_2654", dtype = "float64", shape = (8, 6, 6))#candidate|2654|(8, 6, 6)|var|float64
output = func_2651(var_2652,var_2653,var_2654,)
func_2655 = relay.Function([var_2652,var_2653,var_2654,], output)
mutated_mod['func_2655'] = func_2655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
call_2676 = func_1598_call()
call_2677 = func_1598_call()
func_2116_call = mod.get_global_var('func_2116')
func_2120_call = mutated_mod.get_global_var('func_2120')
var_2685 = relay.var("var_2685", dtype = "uint64", shape = (24,))#candidate|2685|(24,)|var|uint64
call_2684 = relay.TupleGetItem(func_2116_call(relay.reshape(var_2685.astype('uint64'), [8, 3]), relay.reshape(var_2685.astype('uint64'), [8, 3]), ), 0)
call_2686 = relay.TupleGetItem(func_2120_call(relay.reshape(var_2685.astype('uint64'), [8, 3]), relay.reshape(var_2685.astype('uint64'), [8, 3]), ), 0)
var_2693 = relay.var("var_2693", dtype = "float32", shape = (14, 12, 14))#candidate|2693|(14, 12, 14)|var|float32
bop_2694 = relay.greater_equal(call_2676.astype('bool'), relay.reshape(var_2693.astype('bool'), relay.shape_of(call_2676))) # shape=(14, 12, 14)
bop_2697 = relay.greater_equal(call_2677.astype('bool'), relay.reshape(var_2693.astype('bool'), relay.shape_of(call_2677))) # shape=(14, 12, 14)
uop_2699 = relay.acosh(var_2685.astype('float32')) # shape=(24,)
func_950_call = mod.get_global_var('func_950')
func_952_call = mutated_mod.get_global_var('func_952')
const_2704 = relay.const([-2,-7,4,-4,10,-9,-9,4,-7,6,7,10,6,-9,9,-4,-3,-8,3,-5,6,-8,3,10,-2,-9,6,-8,-1,-5,4,-1,-10,-3,-5,-8,2,-5,-9,-7,1,9,-5,-2,-3,-7,6,-4,-9,1,-7,4,-4,-8,-5,-1,1,6,6,-4,-6,-6,1,1,6,3,-1,-5,-7,8,-8,-8,1,-6,-3,6,3,4,-9,-3,6,-2,-4,-2,10,3,-8,-10,7,6,8,1,-3,5,-9,10,-6,-2,9,-1,5,8,5,4,4,3,-3,3,-9,-7,7,-2,10,-5,-10,-8,8,-10,-2,4,2,7,-2,-1,-9,7,-8,2,7,-4,2,3,8,3,-6,7,4,5,-6,-7,7,-2,-7,2,2,10,-10,5,6,1,5,-2,-3,5,5,6,-7,6,5,-7,-8,10,-2,7,3,10,5,6,-10,9,6,5,6,-7,-3,-7,-3,-10,-3,1,-6,-3,4,1,4,-7,-5,-4,-8,-1,7,-4,6,3,3,-5,-6,2,-2,4,-2,6,5,-8,1,6,9,8,3,5,7,5,-2,5,-9,-2,4,-8,-6,-4,8,-6,-9,2,-6,-6,-1,-8,7,7,-6,6,-6,9,-3,-10,-2,-1,1,-2,2,-9,10,-6,-5,-4,-3,-1,7,1,-4,2,-5,8,6,-2,8,3,-1,7,-3,6,-1,3,6,7,-2,7,-4,5,7,-10,1,4,-2,7,-4,-9,8,5,5,8,-3,-7,2,-8,-1,3,-2,1,10,9,-1,-10,-2,4,7,7,7,-8,7,-7,4,10,6,10,-1,9,9,10,-4,-3,8,-2,3,5,6,10,-3,6,4,-7,-4,7,-6,9,3,3,-1,10,7,-5,7,-2,8,10,-3,6,-5,-5,10,-3,5,8,-10,-1,2,-9,5,-1,-9,-2,-10,-10,-1,-8,-8,-6,6,2,-2,5,2,7,5,-10,-1,-9,-1,9,-5,-5,-7,-7,-6,-1,3,-4,-9,-10,-9,1,3,4,-10,-7,8,-7,4,-8,-4,-9,-2,-1,4,-7,2,-4,9,-2,-8,3,3,-3,-5,-9,7,-5,-3,-3,-10,9,-10,8,10,2,10,-6,-7,-4,-9,3,-3,6,-7,-4,-9,8,7,-3,-7,-6,10,4,2,-10,-2,-6,3,10,3,6,6,-3,1,9,1,-9,-1,10,10,4,-5,7,-6,-8,1,-3,8,-2,-4,-9,10,7,10,5,-9,3,1,2,7,6,-3,-8,5,-2,-3,-5,8,4,-1,-9,6,-2,2,-4,-3,-8,9,7,-6,-2,-9,-3,9,6,-4,10,-7,-9,-6,9,-3,-6,-4,6,-4,-10,5,2,1,-6,3,7,10,-10,-8,6,7,-4,6,1,-10,5,-6,-3,-4,-4,-7,-10,4,3,-10,-3,-2,-10,-9,-10,-3,4,3,8,6,-8,-2,10,-10,-8,-2,9,-10,-2,-9,-7,1,-6,1,-2,6,2,8,-4,2,9,4,8,7,10,4,2,1,8,2,8,1,5,-1,8,-2,-7,-6,-8,-5,-3,-8,-4,3,-10,3,-4,-8,-4,10,2,10,6,-4,-9,5,-6,6,-1,-4,-3,-10,3,-8,9,-10,9,10,-6,-2,-1,-6,9,9,-3,2,9,-5,-10,-9,2,-1,9,-6,6,-9,-4,-8,-9,2,1,7,6,4,6,6,-5,7,-8,9,3,-3,-7,10,9,7,8,1,8,1,-9,10,-3,7,3,7,8,-3,-2,-8,-8,10,10,1,7,2,10,9,10,-7,4,9,4,6,6,7,-10,10,-10,-8,5,-2,-3,-8,-7,-7,7,-4,9,-6,-3,-9,-2,2,3,9,-1,1,-10,-8,4,-1,-1,-3,-4,-5,6,9,-6,9,3,5,9,-10,7,-7,3,-3,2,7,8,10,-8,1,-1,1,-8,-8,4,-5,5,-3,1,-7,5,8,5,-7,-8,7,1,-1,-6,-6,-8,3,-7,6,-6,9,-6,-5,7,-4,-2,-4,10,-2,6,-7,2,-10,8,-5,8,6,-2,-4,2,-4,2,-7,-3,9,8,-6,7,7,1,-2,7,2,8,8,8,6,2,-2,-2,-6,6,1,7,1,-2,-6,10,8,-6,9,2,3,9,-9,-4,-3,7,4,-4,10,5,-4,-6,2,-3,-5,8,-7,3,10,-10,-8,9,-1,-6,-8,8,5,-4,-5,1,2,-8,-6,6,8,1,5,7,-2,6,3,1,8,-6,4,3,-7,-4,1,9,10,-5,-1,-8,3,-4,-9,-4,-2,-2,-10,-2,-7,1,8,7,-1,2,5,4,5,-4,-3,-5,-3,-1,3,1,10,10,-2,-8,1,5,-10,-6,9,3,-2,-6,5,-7,1,-2,10,2,1,2,-10,10,8,-6,7,8,8,-4,3,5,9,-6,-9,10,-8,2,1,-9,7,5,-7,-3,7,9,-9,4,10,-7,-10,-9,-9,-8,2,-1,-5,10,7,6,-1,6,9,-9,1,10,-5,2,9,-6,9,7,-2,-5,-4,-7,-6,-4,4,-8,1,8,6,-10,4,-5,3,-5,2,-8,-1,-1,7,-3,-1,7,8,10,9,-10,-7,-4,-10,-9,-10,-9,1,7,-7,10,1,2,5,5,3,7,-2,-2,1,-5,8,2,-5,-9,9,-2,9,2,-5,9,2,-8,8,-7,1,2,7,9,2,4,-7,4,10,1,-2,-3,-8,-1,1,7,-3,1,10,-1,6,-4,10,1,5,-5,-2,-5,1,7,5,6,-1,-7,-7,-3,-4,7,6,-5,-8,10,-1,8,-1,4,9,6,-6,-10,3,-5,-10,-2,10,9,-10,-8,6,-2,3,6,5,1,-7,6,4,-9,-4,3,2,2,3,-2,-5,9,-2,1,7,1,-3,-7,8,1,9,-6,6,-5,-7,1,1,4,-4,-3,7,6,10,-4,9,10,7,-1,5,5,2,8,5,7,6,-10,-3,-10,-8,-3,10,-7,1,-4,-1,-2,5,6,-3,9,4,-4,-6,2,-1,-2], dtype = "uint64")#candidate|2704|(1144,)|const|uint64
call_2703 = relay.TupleGetItem(func_950_call(relay.reshape(const_2704.astype('uint64'), [13, 8, 11])), 0)
call_2705 = relay.TupleGetItem(func_952_call(relay.reshape(const_2704.astype('uint64'), [13, 8, 11])), 0)
output = relay.Tuple([call_2684,bop_2694,uop_2699,call_2703,const_2704,])
output2 = relay.Tuple([call_2686,bop_2697,uop_2699,call_2705,const_2704,])
func_2713 = relay.Function([var_2685,var_2693,], output)
mod['func_2713'] = func_2713
mod = relay.transform.InferType()(mod)
var_2714 = relay.var("var_2714", dtype = "uint64", shape = (24,))#candidate|2714|(24,)|var|uint64
var_2715 = relay.var("var_2715", dtype = "float32", shape = (14, 12, 14))#candidate|2715|(14, 12, 14)|var|float32
output = func_2713(var_2714,var_2715,)
func_2716 = relay.Function([var_2714,var_2715,], output)
mutated_mod['func_2716'] = func_2716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1929_call = mod.get_global_var('func_1929')
func_1930_call = mutated_mod.get_global_var('func_1930')
call_2739 = func_1929_call()
call_2740 = func_1929_call()
output = relay.Tuple([call_2739,])
output2 = relay.Tuple([call_2740,])
func_2741 = relay.Function([], output)
mod['func_2741'] = func_2741
mod = relay.transform.InferType()(mod)
output = func_2741()
func_2742 = relay.Function([], output)
mutated_mod['func_2742'] = func_2742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1979_call = mod.get_global_var('func_1979')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_2796 = func_1979_call()
call_2797 = func_1979_call()
output = relay.Tuple([call_2796,])
output2 = relay.Tuple([call_2797,])
func_2798 = relay.Function([], output)
mod['func_2798'] = func_2798
mod = relay.transform.InferType()(mod)
output = func_2798()
func_2799 = relay.Function([], output)
mutated_mod['func_2799'] = func_2799
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2836 = relay.var("var_2836", dtype = "float32", shape = (13, 7, 3))#candidate|2836|(13, 7, 3)|var|float32
uop_2837 = relay.log2(var_2836.astype('float32')) # shape=(13, 7, 3)
output = relay.Tuple([uop_2837,])
output2 = relay.Tuple([uop_2837,])
func_2845 = relay.Function([var_2836,], output)
mod['func_2845'] = func_2845
mod = relay.transform.InferType()(mod)
mutated_mod['func_2845'] = func_2845
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2846 = relay.var("var_2846", dtype = "float32", shape = (13, 7, 3))#candidate|2846|(13, 7, 3)|var|float32
func_2845_call = mutated_mod.get_global_var('func_2845')
call_2847 = func_2845_call(var_2846)
output = call_2847
func_2848 = relay.Function([var_2846], output)
mutated_mod['func_2848'] = func_2848
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2922 = relay.var("var_2922", dtype = "uint16", shape = (14, 3, 1))#candidate|2922|(14, 3, 1)|var|uint16
const_2923 = relay.const([[[5,4,9,-8,10,-6,4,1,5,-4,-9,-6,9,5],[-2,-2,4,-9,-9,-3,2,-8,-9,4,10,-2,-7,7],[2,10,2,-3,7,-9,-8,-3,-4,-7,-9,-6,8,-9]],[[-6,-1,-8,-2,-2,-9,6,-3,-4,7,9,-8,6,9],[-2,9,7,-6,-2,7,5,10,6,8,-4,-6,8,3],[-10,7,3,9,9,-6,6,-2,-9,-2,10,3,-6,6]],[[4,7,-2,-5,-4,6,10,4,-5,-8,-3,-7,2,-4],[10,-2,9,-8,8,7,-8,7,7,5,-10,-6,5,3],[-5,6,6,2,9,-6,3,-1,10,-10,-9,-1,-10,-9]],[[10,2,10,-5,-10,-2,6,8,-5,10,-6,2,-5,-4],[10,10,7,9,4,4,8,-2,7,-4,8,-8,4,2],[5,-4,9,-6,8,4,9,3,-5,4,5,-4,3,9]],[[-4,-7,-5,3,-5,-2,6,2,-3,7,-9,2,10,-7],[8,10,-5,10,-6,-5,5,3,-3,-9,9,6,6,4],[-2,8,-6,-1,-3,-2,5,1,7,3,10,-6,-7,-9]],[[-10,10,-3,-1,5,2,6,-1,3,1,8,10,6,-7],[10,-10,10,-2,8,-1,-7,3,7,4,-5,-2,1,-1],[7,3,-7,-8,3,-7,1,-4,-1,4,10,-7,-5,8]],[[-10,4,-8,-7,-8,-1,2,1,-5,4,1,-3,-7,4],[1,7,-2,1,8,6,-10,8,-4,-5,-2,-7,8,4],[2,7,-1,-5,5,-6,3,-8,8,4,5,-4,-10,-9]],[[-3,-6,-2,-8,-9,-5,-10,-7,2,3,3,5,7,-6],[10,-9,-10,-8,8,-3,-1,-3,-1,2,-10,-5,-4,-1],[-2,10,-4,-7,-4,7,2,-10,10,4,6,7,2,-8]],[[-4,9,-8,10,-10,6,-3,-7,-3,-8,10,6,-9,-9],[7,-9,-6,7,-9,-6,3,2,-5,10,6,2,-1,2],[-1,3,10,-9,2,2,4,-10,-2,-4,1,-6,4,-5]],[[-8,5,7,9,9,6,5,-3,-6,7,-7,-6,7,-7],[3,3,8,1,7,-3,-8,-8,-6,4,-5,-9,-2,-3],[8,9,2,3,2,-5,5,-7,-8,-8,7,-6,10,7]],[[2,-2,-9,-4,-5,-1,2,-7,-4,2,9,-6,-9,-1],[8,3,-9,2,10,-3,4,3,9,-5,-6,5,-6,-4],[-3,-5,6,-3,-7,-4,-3,-1,10,5,3,2,-8,5]],[[-10,-10,-5,-6,-5,5,-3,8,-6,5,2,-5,1,-6],[-6,2,9,9,-8,-4,-1,6,10,2,-2,1,-6,-1],[-6,3,-8,-6,-10,3,-7,3,-8,3,-3,-3,9,-1]],[[2,1,6,8,10,3,8,-10,-4,4,-1,7,2,-1],[6,8,-1,-4,3,-3,7,-7,-1,-1,-9,5,5,-4],[-4,10,6,-5,-8,-5,2,-6,-1,5,9,5,4,7]],[[-3,-6,5,-6,5,7,-2,-4,8,5,-4,-3,10,-10],[9,-2,6,1,4,-4,1,-2,-4,9,-8,-3,-9,-5],[4,3,-1,-8,-3,-10,-6,-7,6,2,-6,1,-7,6]]], dtype = "uint16")#candidate|2923|(14, 3, 14)|const|uint16
bop_2924 = relay.equal(var_2922.astype('bool'), const_2923.astype('bool')) # shape=(14, 3, 14)
uop_2930 = relay.exp(bop_2924.astype('float64')) # shape=(14, 3, 14)
output = relay.Tuple([uop_2930,])
output2 = relay.Tuple([uop_2930,])
func_2938 = relay.Function([var_2922,], output)
mod['func_2938'] = func_2938
mod = relay.transform.InferType()(mod)
var_2939 = relay.var("var_2939", dtype = "uint16", shape = (14, 3, 1))#candidate|2939|(14, 3, 1)|var|uint16
output = func_2938(var_2939)
func_2940 = relay.Function([var_2939], output)
mutated_mod['func_2940'] = func_2940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1979_call = mod.get_global_var('func_1979')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_2945 = func_1979_call()
call_2946 = func_1979_call()
output = call_2945
output2 = call_2946
func_2948 = relay.Function([], output)
mod['func_2948'] = func_2948
mod = relay.transform.InferType()(mod)
output = func_2948()
func_2949 = relay.Function([], output)
mutated_mod['func_2949'] = func_2949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2375_call = mod.get_global_var('func_2375')
func_2377_call = mutated_mod.get_global_var('func_2377')
call_2969 = relay.TupleGetItem(func_2375_call(), 0)
call_2970 = relay.TupleGetItem(func_2377_call(), 0)
uop_2979 = relay.sqrt(call_2969.astype('float64')) # shape=(14, 12, 14)
uop_2981 = relay.sqrt(call_2970.astype('float64')) # shape=(14, 12, 14)
output = uop_2979
output2 = uop_2981
func_3012 = relay.Function([], output)
mod['func_3012'] = func_3012
mod = relay.transform.InferType()(mod)
mutated_mod['func_3012'] = func_3012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3012_call = mutated_mod.get_global_var('func_3012')
call_3013 = func_3012_call()
output = call_3013
func_3014 = relay.Function([], output)
mutated_mod['func_3014'] = func_3014
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3049 = relay.var("var_3049", dtype = "float64", shape = (3, 7, 14))#candidate|3049|(3, 7, 14)|var|float64
uop_3050 = relay.sigmoid(var_3049.astype('float64')) # shape=(3, 7, 14)
output = relay.Tuple([uop_3050,])
output2 = relay.Tuple([uop_3050,])
func_3052 = relay.Function([var_3049,], output)
mod['func_3052'] = func_3052
mod = relay.transform.InferType()(mod)
mutated_mod['func_3052'] = func_3052
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3053 = relay.var("var_3053", dtype = "float64", shape = (3, 7, 14))#candidate|3053|(3, 7, 14)|var|float64
func_3052_call = mutated_mod.get_global_var('func_3052')
call_3054 = func_3052_call(var_3053)
output = call_3054
func_3055 = relay.Function([var_3053], output)
mutated_mod['func_3055'] = func_3055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2178_call = mod.get_global_var('func_2178')
func_2179_call = mutated_mod.get_global_var('func_2179')
call_3072 = relay.TupleGetItem(func_2178_call(), 0)
call_3073 = relay.TupleGetItem(func_2179_call(), 0)
output = relay.Tuple([call_3072,])
output2 = relay.Tuple([call_3073,])
func_3078 = relay.Function([], output)
mod['func_3078'] = func_3078
mod = relay.transform.InferType()(mod)
mutated_mod['func_3078'] = func_3078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3078_call = mutated_mod.get_global_var('func_3078')
call_3079 = func_3078_call()
output = call_3079
func_3080 = relay.Function([], output)
mutated_mod['func_3080'] = func_3080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2178_call = mod.get_global_var('func_2178')
func_2179_call = mutated_mod.get_global_var('func_2179')
call_3097 = relay.TupleGetItem(func_2178_call(), 1)
call_3098 = relay.TupleGetItem(func_2179_call(), 1)
output = relay.Tuple([call_3097,])
output2 = relay.Tuple([call_3098,])
func_3103 = relay.Function([], output)
mod['func_3103'] = func_3103
mod = relay.transform.InferType()(mod)
output = func_3103()
func_3104 = relay.Function([], output)
mutated_mod['func_3104'] = func_3104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3078_call = mod.get_global_var('func_3078')
func_3080_call = mutated_mod.get_global_var('func_3080')
call_3135 = relay.TupleGetItem(func_3078_call(), 0)
call_3136 = relay.TupleGetItem(func_3080_call(), 0)
func_950_call = mod.get_global_var('func_950')
func_952_call = mutated_mod.get_global_var('func_952')
const_3146 = relay.const([[5],[-9],[6],[9],[5],[-5],[6],[2],[-3],[1],[-7],[-6],[-8],[2],[-8],[-4],[8],[7],[-3],[-9],[4],[9],[-4],[-5],[7],[10],[-2],[10],[-9],[7],[3],[-10],[7],[3],[6],[8],[-8],[9],[8],[-8],[3],[-9],[-8],[4],[1],[5],[-3],[3],[4],[1],[9],[-9],[6],[8],[3],[7],[8],[10],[-4],[5],[6],[-9],[7],[-2],[-7],[-9],[10],[-5],[6],[-10],[-1],[-7],[-2],[-7],[3],[-4],[-2],[-1],[-3],[7],[4],[8],[6],[2],[-7],[2],[-9],[9],[8],[-10],[5],[-2],[-6],[-3],[-6],[1],[-8],[5],[2],[-7],[2],[-9],[10],[6],[1],[1],[-1],[3],[5],[-6],[-8],[-10],[8],[2],[7],[-1],[9],[-1],[5],[9],[3],[-3],[2],[-2],[4],[10],[5],[-10],[-7],[2],[-10],[-4],[2],[-7],[3],[4],[5],[-2],[5],[-6],[10],[-5],[-5],[-9],[-7],[-6],[-4],[5],[-8],[-3],[-10],[8],[-6],[2],[4],[4],[-1],[-10],[-2],[-9],[-10],[6],[-7],[-9],[5],[5],[9],[-1],[-6],[8],[-9],[6],[1],[-8],[-7],[-2],[2],[-2],[-10],[2],[-5],[1],[2],[10],[-4],[-10],[1],[5],[-5],[5],[-10],[10],[6],[8],[5],[1],[1],[-5],[-5],[3],[-3],[2],[-10],[-8],[-10],[7],[-1],[-9],[-1],[4],[1],[7],[9],[-4],[-6],[2],[9],[-5],[-1],[-2],[-7],[8],[-5],[6],[-7],[1],[6],[-7],[7],[7],[-8],[3],[3],[6],[3],[2],[4],[8],[8],[-5],[-2],[3],[4],[3],[3],[7],[9],[9],[-9],[5],[-3],[-2],[8],[8],[5],[2],[-10],[5],[7],[7],[8],[-1],[3],[-10],[-7],[6],[3],[-8],[-7],[-8],[10],[10],[-7],[5],[-7],[-1],[-6],[3],[-4],[-4],[9],[2],[-8],[-2],[5],[-7],[-1],[6],[-6],[-9],[-3],[7],[5],[-1],[-2],[-10],[4],[2],[2],[-7],[5],[3],[-3],[-4],[-10],[-1],[3],[4],[-7],[-7],[-9],[1],[-10],[-5],[6],[-9],[-6],[-6],[3],[-7],[3],[8],[5],[6],[-7],[2],[-3],[-9],[-3],[-3],[-6],[1],[-7],[10],[-9],[3],[-6],[-1],[-4],[-2],[1],[7],[6],[-7],[2],[-9],[4],[-8],[-1],[1],[7],[3],[6],[6],[-1],[1],[2],[-8],[-5],[7],[-6],[-6],[10],[-3],[4],[10],[-9],[-7],[-5],[7],[1],[9],[-7],[2],[-3],[1],[-9],[10],[-1],[-10],[-7],[8],[-1],[3],[6],[-3],[-9],[10],[1],[-9],[-5],[4],[9],[5],[6],[-7],[-6],[-9],[8],[5],[1],[2],[-2],[7],[6],[-10],[8],[9],[5],[-9],[9],[-4],[-9],[-4],[-4],[-2],[8],[-6],[-8],[-6],[8],[-7],[9],[6],[-10],[-4],[9],[6],[10],[8],[10],[10],[3],[2],[8],[-8],[-5],[7],[-3],[-5],[7],[3],[-7],[5],[-2],[1],[2],[2],[7],[1],[-4],[-6],[-3],[1],[5],[8],[7],[-10],[-4],[-2],[-10],[8],[4],[1],[6],[9],[-8],[6],[-9],[7],[3],[7],[-9],[-4],[4],[7],[7],[-7],[-7],[-4],[-8],[-2],[-9],[10],[-5],[3],[-4],[-8],[9],[-6],[-6],[-6],[10],[5],[2],[10],[-2],[10],[1],[3],[-9],[-4],[9],[6],[3],[-3],[-4],[-5],[-4],[2],[10],[10],[4],[-7],[-10],[-3],[-7],[1],[-8],[-5],[8],[-2],[-9],[-9],[-9],[-3],[-2],[-5],[10],[3],[2],[-10],[2],[6],[10],[-3],[-1],[5],[3],[-7],[2],[3],[10],[2],[10],[4],[3],[3],[-7],[5],[2],[8],[-4],[5],[6],[10],[-1],[-3],[9],[-3],[-3],[10],[-10],[1],[-2],[7],[-6],[-7],[-9],[-8],[6],[2],[-8],[-10],[-2],[-5],[9],[1],[8],[7],[2],[-4],[-8],[-9],[-5],[1],[-2],[9],[-9],[9],[2],[-6],[-1],[2],[-1],[-1],[-2],[3],[6],[-8],[-8],[4],[-1],[-2],[-4],[2],[6],[8],[-7],[9],[9],[2],[5],[-3],[5],[3],[10],[5],[-2],[4],[7],[1],[3],[3],[10],[-7],[1],[10],[5],[8],[7],[-5],[-9],[-10],[7],[-5],[9],[-2],[-5],[-4],[4],[-4],[3],[1],[-9],[7],[-10],[-5],[-3],[10],[-1],[8],[2],[4],[-4],[2],[2],[-5],[2],[-2],[-6],[-1],[1],[5],[-10],[-8],[9],[3],[-8],[9],[-7],[-10],[-9],[-5],[-2],[3],[4],[-4],[9],[1],[-4],[2],[-6],[7],[4],[-4],[10],[-2],[-10],[1],[-2],[9],[10],[4],[-5],[-1],[-5],[6],[-2],[5],[-10],[-8],[4],[9],[-7],[-7],[-7],[-8],[2],[-6],[-9],[7],[4],[5],[-6],[-1],[-9],[7],[9],[9],[-8],[-8],[3],[-2],[7],[3],[7],[-10],[-1],[6],[-5],[-4],[-3],[8],[-6],[-9],[-3],[9],[-4],[2],[-1],[9],[-3],[8],[4],[-9],[-10],[-3],[-3],[7],[8],[-6],[-5],[-9],[-8],[-10],[4],[-8],[8],[2],[9],[-9],[4],[3],[3],[-9],[-6],[-3],[1],[-9],[3],[-9],[-9],[-5],[-2],[-7],[8],[-1],[-7],[2],[-4],[8],[7],[10],[3],[9],[9],[2],[-3],[-2],[-4],[8],[-4],[6],[3],[9],[10],[-5],[3],[7],[5],[2],[3],[9],[-1],[-3],[-2],[8],[-9],[-9],[-4],[-10],[-10],[-5],[2],[-6],[9],[-8],[-2],[-8],[-2],[9],[-1],[-1],[-3],[3],[-1],[-4],[-7],[3],[-3],[4],[-9],[-2],[-3],[-5],[3],[-8],[4],[5],[2],[-7],[-10],[-5],[1],[6],[-10],[-4],[7],[1],[10],[5],[-3],[10],[-4],[5],[4],[2],[-2],[-10],[-6],[-7],[-7],[7],[-10],[-3],[6],[6],[3],[-7],[2],[7],[-3],[-9],[-6],[9],[5],[2],[8],[-5],[-10],[9],[-8],[-7],[2],[10],[-7],[9],[5],[-6],[6],[5],[-3],[3],[-6],[10],[-1],[-2],[-5],[-10],[5],[2],[-6],[-4],[10],[2],[-9],[-9],[-3],[2],[3],[7],[-10],[-4],[10],[-3],[-3],[-8],[7],[-10],[6],[-2],[8],[-5],[-6],[-2],[8],[4],[10],[4],[-10],[-6],[-3],[4],[8],[6],[-5],[-7],[2],[5],[9],[-6],[9],[-7],[-7],[-9],[-10],[-2],[9],[3],[-9],[1],[9],[-6],[-10],[-8],[8],[-7],[5],[-6],[-5],[-9],[-1],[-7],[8],[-10],[-9],[2],[1],[-1],[-9],[-1],[5],[6],[2],[-2],[10],[-1],[4],[-3],[-8],[-1],[6],[-4],[-1],[7],[6],[-9],[-3],[-10],[-8],[3],[6],[8],[2],[2],[4],[8],[7],[6],[-9],[-8],[-10],[3],[-5],[-10],[7],[-10],[7],[-3],[-1],[10],[8],[-7],[2],[-3],[-6],[-3],[1],[2],[2],[8],[5],[-10],[-7],[-3],[10],[6],[-1],[-5],[6],[-1],[10],[-3],[-3],[6],[6],[5],[-1],[6],[-10],[8],[2],[7],[9],[-6],[9],[-9],[3],[-1],[-8],[-4],[-10],[-8],[5],[-1],[-4],[-4],[5],[10],[3],[-8],[3],[-3],[-1],[5],[-1],[6],[9],[2],[-9],[-9],[-4],[-7],[-4],[4],[1],[10],[-1],[-10],[-7],[-4],[7],[8],[3],[10],[-7],[-2],[3],[1],[-6],[-5],[-8],[3],[-7],[-4],[10],[-3],[-5],[3],[-2],[-9],[-1],[9],[2],[-1],[6],[-5],[2],[4],[1],[-4],[-3],[9],[7],[-9],[4],[-8],[-10],[-9],[1],[-9],[8],[1],[-4],[-9],[-2],[-7],[7],[4],[-8],[5],[-10],[-7],[9],[1],[5],[-7],[7],[-3],[3],[-5],[3],[10]], dtype = "uint64")#candidate|3146|(1144, 1)|const|uint64
call_3145 = relay.TupleGetItem(func_950_call(relay.reshape(const_3146.astype('uint64'), [13, 8, 11])), 0)
call_3147 = relay.TupleGetItem(func_952_call(relay.reshape(const_3146.astype('uint64'), [13, 8, 11])), 0)
uop_3153 = relay.log2(const_3146.astype('float32')) # shape=(1144, 1)
output = relay.Tuple([call_3135,call_3145,uop_3153,])
output2 = relay.Tuple([call_3136,call_3147,uop_3153,])
func_3159 = relay.Function([], output)
mod['func_3159'] = func_3159
mod = relay.transform.InferType()(mod)
mutated_mod['func_3159'] = func_3159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3159_call = mutated_mod.get_global_var('func_3159')
call_3160 = func_3159_call()
output = call_3160
func_3161 = relay.Function([], output)
mutated_mod['func_3161'] = func_3161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3159_call = mod.get_global_var('func_3159')
func_3161_call = mutated_mod.get_global_var('func_3161')
call_3190 = relay.TupleGetItem(func_3159_call(), 1)
call_3191 = relay.TupleGetItem(func_3161_call(), 1)
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_3199 = func_2127_call()
call_3200 = func_2127_call()
func_2948_call = mod.get_global_var('func_2948')
func_2949_call = mutated_mod.get_global_var('func_2949')
call_3228 = func_2948_call()
call_3229 = func_2948_call()
bop_3230 = relay.left_shift(call_3228.astype('int64'), relay.reshape(call_3199.astype('int64'), relay.shape_of(call_3228))) # shape=(5, 7, 9)
bop_3233 = relay.left_shift(call_3229.astype('int64'), relay.reshape(call_3200.astype('int64'), relay.shape_of(call_3229))) # shape=(5, 7, 9)
func_1737_call = mod.get_global_var('func_1737')
func_1739_call = mutated_mod.get_global_var('func_1739')
var_3236 = relay.var("var_3236", dtype = "float32", shape = (2352,))#candidate|3236|(2352,)|var|float32
call_3235 = func_1737_call(relay.reshape(var_3236.astype('float32'), [14, 12, 14]))
call_3237 = func_1737_call(relay.reshape(var_3236.astype('float32'), [14, 12, 14]))
uop_3243 = relay.atan(var_3236.astype('float64')) # shape=(2352,)
output = relay.Tuple([call_3190,bop_3230,call_3235,uop_3243,])
output2 = relay.Tuple([call_3191,bop_3233,call_3237,uop_3243,])
func_3248 = relay.Function([var_3236,], output)
mod['func_3248'] = func_3248
mod = relay.transform.InferType()(mod)
var_3249 = relay.var("var_3249", dtype = "float32", shape = (2352,))#candidate|3249|(2352,)|var|float32
output = func_3248(var_3249)
func_3250 = relay.Function([var_3249], output)
mutated_mod['func_3250'] = func_3250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3078_call = mod.get_global_var('func_3078')
func_3080_call = mutated_mod.get_global_var('func_3080')
call_3289 = relay.TupleGetItem(func_3078_call(), 0)
call_3290 = relay.TupleGetItem(func_3080_call(), 0)
uop_3295 = relay.tan(call_3289.astype('float64')) # shape=(5, 7, 9)
uop_3297 = relay.tan(call_3290.astype('float64')) # shape=(5, 7, 9)
func_718_call = mod.get_global_var('func_718')
func_721_call = mutated_mod.get_global_var('func_721')
var_3299 = relay.var("var_3299", dtype = "int8", shape = (1920,))#candidate|3299|(1920,)|var|int8
call_3298 = relay.TupleGetItem(func_718_call(relay.reshape(var_3299.astype('int8'), [15, 8, 16])), 0)
call_3300 = relay.TupleGetItem(func_721_call(relay.reshape(var_3299.astype('int8'), [15, 8, 16])), 0)
func_3052_call = mod.get_global_var('func_3052')
func_3055_call = mutated_mod.get_global_var('func_3055')
var_3304 = relay.var("var_3304", dtype = "float64", shape = (294,))#candidate|3304|(294,)|var|float64
call_3303 = relay.TupleGetItem(func_3052_call(relay.reshape(var_3304.astype('float64'), [3, 7, 14])), 0)
call_3305 = relay.TupleGetItem(func_3055_call(relay.reshape(var_3304.astype('float64'), [3, 7, 14])), 0)
output = relay.Tuple([uop_3295,call_3298,var_3299,call_3303,var_3304,])
output2 = relay.Tuple([uop_3297,call_3300,var_3299,call_3305,var_3304,])
func_3334 = relay.Function([var_3299,var_3304,], output)
mod['func_3334'] = func_3334
mod = relay.transform.InferType()(mod)
mutated_mod['func_3334'] = func_3334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3334_call = mutated_mod.get_global_var('func_3334')
var_3336 = relay.var("var_3336", dtype = "int8", shape = (1920,))#candidate|3336|(1920,)|var|int8
var_3337 = relay.var("var_3337", dtype = "float64", shape = (294,))#candidate|3337|(294,)|var|float64
call_3335 = func_3334_call(var_3336,var_3337,)
output = call_3335
func_3338 = relay.Function([var_3336,var_3337,], output)
mutated_mod['func_3338'] = func_3338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1929_call = mod.get_global_var('func_1929')
func_1930_call = mutated_mod.get_global_var('func_1930')
call_3409 = func_1929_call()
call_3410 = func_1929_call()
func_2054_call = mod.get_global_var('func_2054')
func_2056_call = mutated_mod.get_global_var('func_2056')
call_3424 = func_2054_call()
call_3425 = func_2054_call()
output = relay.Tuple([call_3409,call_3424,])
output2 = relay.Tuple([call_3410,call_3425,])
func_3428 = relay.Function([], output)
mod['func_3428'] = func_3428
mod = relay.transform.InferType()(mod)
output = func_3428()
func_3429 = relay.Function([], output)
mutated_mod['func_3429'] = func_3429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1929_call = mod.get_global_var('func_1929')
func_1930_call = mutated_mod.get_global_var('func_1930')
call_3430 = func_1929_call()
call_3431 = func_1929_call()
output = call_3430
output2 = call_3431
func_3432 = relay.Function([], output)
mod['func_3432'] = func_3432
mod = relay.transform.InferType()(mod)
output = func_3432()
func_3433 = relay.Function([], output)
mutated_mod['func_3433'] = func_3433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3103_call = mod.get_global_var('func_3103')
func_3104_call = mutated_mod.get_global_var('func_3104')
call_3434 = relay.TupleGetItem(func_3103_call(), 0)
call_3435 = relay.TupleGetItem(func_3104_call(), 0)
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_3464 = func_2127_call()
call_3465 = func_2127_call()
var_3466 = relay.var("var_3466", dtype = "float32", shape = (14, 12, 14))#candidate|3466|(14, 12, 14)|var|float32
bop_3467 = relay.logical_and(call_3434.astype('bool'), relay.reshape(var_3466.astype('bool'), relay.shape_of(call_3434))) # shape=(14, 12, 14)
bop_3470 = relay.logical_and(call_3435.astype('bool'), relay.reshape(var_3466.astype('bool'), relay.shape_of(call_3435))) # shape=(14, 12, 14)
uop_3472 = relay.cos(call_3464.astype('float32')) # shape=(5, 7, 9)
uop_3474 = relay.cos(call_3465.astype('float32')) # shape=(5, 7, 9)
output = relay.Tuple([bop_3467,uop_3472,])
output2 = relay.Tuple([bop_3470,uop_3474,])
func_3475 = relay.Function([var_3466,], output)
mod['func_3475'] = func_3475
mod = relay.transform.InferType()(mod)
mutated_mod['func_3475'] = func_3475
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3476 = relay.var("var_3476", dtype = "float32", shape = (14, 12, 14))#candidate|3476|(14, 12, 14)|var|float32
func_3475_call = mutated_mod.get_global_var('func_3475')
call_3477 = func_3475_call(var_3476)
output = call_3477
func_3478 = relay.Function([var_3476], output)
mutated_mod['func_3478'] = func_3478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2054_call = mod.get_global_var('func_2054')
func_2056_call = mutated_mod.get_global_var('func_2056')
call_3570 = func_2054_call()
call_3571 = func_2054_call()
uop_3573 = relay.atan(call_3570.astype('float64')) # shape=(5, 7, 9)
uop_3575 = relay.atan(call_3571.astype('float64')) # shape=(5, 7, 9)
output = uop_3573
output2 = uop_3575
func_3577 = relay.Function([], output)
mod['func_3577'] = func_3577
mod = relay.transform.InferType()(mod)
output = func_3577()
func_3578 = relay.Function([], output)
mutated_mod['func_3578'] = func_3578
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3581 = relay.var("var_3581", dtype = "int64", shape = (6, 7, 16))#candidate|3581|(6, 7, 16)|var|int64
var_3582 = relay.var("var_3582", dtype = "int64", shape = (6, 7, 16))#candidate|3582|(6, 7, 16)|var|int64
bop_3583 = relay.greater_equal(var_3581.astype('bool'), relay.reshape(var_3582.astype('bool'), relay.shape_of(var_3581))) # shape=(6, 7, 16)
func_3078_call = mod.get_global_var('func_3078')
func_3080_call = mutated_mod.get_global_var('func_3080')
call_3598 = relay.TupleGetItem(func_3078_call(), 0)
call_3599 = relay.TupleGetItem(func_3080_call(), 0)
bop_3609 = relay.bitwise_or(var_3582.astype('uint64'), relay.reshape(bop_3583.astype('uint64'), relay.shape_of(var_3582))) # shape=(6, 7, 16)
bop_3622 = relay.equal(var_3581.astype('bool'), relay.reshape(bop_3609.astype('bool'), relay.shape_of(var_3581))) # shape=(6, 7, 16)
func_42_call = mod.get_global_var('func_42')
func_45_call = mutated_mod.get_global_var('func_45')
var_3628 = relay.var("var_3628", dtype = "float32", shape = (72, 1))#candidate|3628|(72, 1)|var|float32
call_3627 = func_42_call(relay.reshape(var_3628.astype('float32'), [8, 1, 9]))
call_3629 = func_42_call(relay.reshape(var_3628.astype('float32'), [8, 1, 9]))
bop_3630 = relay.greater(call_3627.astype('bool'), relay.reshape(var_3628.astype('bool'), relay.shape_of(call_3627))) # shape=(8, 1, 9)
bop_3633 = relay.greater(call_3629.astype('bool'), relay.reshape(var_3628.astype('bool'), relay.shape_of(call_3629))) # shape=(8, 1, 9)
func_3248_call = mod.get_global_var('func_3248')
func_3250_call = mutated_mod.get_global_var('func_3250')
const_3635 = relay.const([-3.083189,5.768916,0.252229,-7.644612,-4.127120,-6.514664,-9.591399,-4.594820,3.016038,8.816835,8.360463,6.400543,3.886645,-1.019027,5.039542,9.213942,7.899892,-2.022954,-5.637039,8.358523,-9.708250,0.935593,1.964424,-4.520655,5.662420,-8.109326,-8.899080,-3.378108,-7.939172,-6.777280,-1.912712,1.801619,-9.820204,6.691609,-2.152964,4.371797,-7.916471,6.402623,-4.812696,-9.481245,-5.244092,-7.478305,-0.930347,-9.324845,-6.933392,4.996875,-0.166007,-2.510460,-7.559418,-5.201259,3.046443,1.226005,-1.444543,3.807075,2.372066,-5.320984,-1.545599,-2.641846,-1.682181,7.698464,-1.351624,1.987432,2.887846,8.038983,5.271405,-4.687309,-7.569172,-1.777647,-1.657454,0.523487,5.692883,1.496477,8.780256,8.039490,2.645593,-0.246135,3.121680,-2.360958,3.447837,-0.466094,3.090729,9.587834,2.310698,-5.104570,0.160198,4.558483,-3.248810,-5.704803,-1.034015,6.517321,-1.372875,9.832063,5.795262,-4.995599,-0.036686,-0.635138,4.127160,6.581313,8.883248,0.252890,6.103771,-4.807479,5.644113,5.735286,-5.731786,6.632759,-3.174249,-2.241241,4.824510,0.301382,1.063009,4.814402,0.423262,0.200563,8.299089,-6.416833,9.580754,-8.621466,7.705314,4.480490,-4.290737,2.274784,2.938799,-6.623179,-5.662022,-2.174553,6.120145,9.298471,-9.313798,-3.688562,7.069426,2.540909,4.483291,7.967815,2.069626,-0.342640,-8.655514,1.531609,9.292063,-7.225666,9.114220,7.078343,-8.808331,1.781066,-5.991599,-2.081570,-7.818800,-7.315591,0.511644,3.372779,-2.944452,-2.148360,4.046286,1.677988,-0.777029,-8.827769,-6.218063,-7.464948,-8.242686,-9.450556,1.316520,-4.630438,-9.437369,1.626685,9.698946,-6.632262,-1.159928,-0.264249,-3.075057,-2.599158,9.793950,-4.893092,6.768777,-2.834707,3.433040,-8.220949,-7.128354,-1.496305,7.279634,-4.567234,-7.443656,9.554130,-2.411465,-6.291841,2.946533,4.321070,-1.695937,-2.272687,-6.244915,3.864442,1.751398,1.755914,2.580338,-8.590848,2.798943,3.976562,-7.983095,9.766458,-2.722378,5.155490,-4.337204,-1.674814,5.508613,-6.822071,5.297913,4.448316,7.980349,-4.859960,-9.898546,-6.959004,-9.967873,-7.161501,-6.434187,4.521545,8.665454,-1.964200,1.212435,-7.362098,8.160655,-4.776184,4.594328,-6.494210,-9.925633,8.896661,1.119773,5.400496,5.514857,-5.520048,9.005809,-0.880397,3.049638,-1.226869,4.192822,5.501497,-5.072603,2.059182,7.013878,-9.901078,9.866861,-7.321084,0.300689,-3.749009,2.975646,-7.384525,-0.746765,-9.595144,8.931336,-0.151904,4.231726,-2.745719,2.971304,0.894980,0.551760,2.187742,0.155559,2.228671,9.176043,4.913423,2.623061,8.645334,-8.355605,6.111353,-9.763551,-0.010181,6.289852,2.005235,7.103325,0.982296,9.807450,7.909267,-2.436172,0.656836,-0.712632,2.832518,8.890370,7.711668,-7.164978,9.068427,-0.961482,-5.536814,-0.653846,-8.381659,3.555232,-3.596138,-0.640573,9.464445,7.605850,-3.216524,-8.306881,0.894350,-5.447023,4.027569,6.852404,-2.712530,5.303992,0.206000,-9.397941,1.005613,5.945333,-7.204999,6.468658,-6.841350,6.346672,-0.298904,-4.531553,1.009573,-1.257112,0.095397,3.536552,0.716180,3.739725,3.562476,-3.549060,1.581804,-3.235510,-6.565828,1.438956,-6.229224,1.214267,-9.312243,-5.037496,1.019199,9.419990,-7.573853,-5.845262,1.753943,-3.182630,9.477655,8.990391,-8.965216,2.236746,6.247839,-2.027113,4.140262,-7.064503,8.497826,8.933143,8.588423,-6.228874,1.329406,2.549374,-0.308141,0.381185,-2.723511,-3.686313,8.234719,8.483948,-5.911349,-9.695963,-7.645879,-3.460760,-7.464754,-4.930890,-4.749647,3.029964,0.253284,-6.782636,5.914971,5.120811,-2.500281,-1.931826,2.754644,-3.175655,4.958254,7.991833,9.184872,-8.693010,4.816532,6.442665,9.709780,-1.843006,8.974534,-1.581912,-8.142211,-8.794664,8.548755,-7.732653,5.748189,-6.686356,-8.430585,-0.759072,1.117066,5.791256,0.753499,-7.145853,2.081344,1.323945,0.974955,6.736723,0.527987,-7.051767,4.121186,-1.927084,0.760405,1.213950,-2.376174,4.917582,-5.753172,9.099151,5.103839,-1.046883,-0.959504,1.427329,5.692254,8.066505,8.288484,5.064346,4.963129,9.955748,5.564258,-1.215317,-2.929740,7.900555,-2.766378,-0.191629,6.824582,-0.116404,-6.311898,4.057010,0.627750,-5.075772,0.097234,0.860700,9.357867,7.726242,5.234335,1.778263,-7.121482,0.286123,4.690665,-7.517919,-8.286841,-8.608352,7.776883,6.339727,-2.764215,4.435432,2.671439,-3.229227,5.894262,1.729029,5.637669,-6.085576,-3.210001,-2.320292,9.685781,-5.514259,-6.676669,-2.385720,-0.981695,-1.625611,3.619604,-7.072758,-8.133346,-3.343752,3.300029,-0.684660,-9.709674,-5.127418,-4.604232,-7.999295,4.574993,-7.661843,8.933094,1.671212,-4.489613,-7.856994,9.269115,-3.775710,-6.541042,7.072603,0.118787,-7.430015,-2.349574,-8.247315,-0.860477,-8.778661,1.727634,1.353296,0.959539,-2.099993,-0.755482,-0.213052,-8.762018,8.778882,7.135784,-1.195095,-8.561883,-2.911005,8.948188,-3.205862,8.333656,1.629524,2.922089,8.506415,-5.464897,-1.527021,-5.236778,-8.317969,6.500647,3.015241,8.209551,3.507192,8.841891,-7.621804,-7.924943,-4.797265,-4.886297,-9.100688,-0.715397,-1.325849,-3.841042,6.921826,5.221934,4.280098,4.475553,8.602343,-8.271521,-4.967791,-3.142229,-3.742444,9.041194,-0.764750,-0.498257,1.228801,-5.638129,4.940311,-7.596419,-7.097842,7.941423,5.305677,-9.935473,0.212978,1.804461,-6.300892,-6.673792,3.232282,2.837991,7.220653,-9.154740,-4.838729,0.625975,6.417750,-6.015417,6.547166,0.244399,-5.829686,-2.219876,-6.947030,-3.806746,9.879639,2.567170,-7.057897,2.522591,0.618844,4.930580,-6.280619,2.715636,-9.628996,0.600629,8.515791,-9.159686,4.090561,7.483733,0.991290,-2.523217,7.597230,7.705736,6.205445,5.531552,-0.380917,-7.733547,2.352933,5.576032,-7.708845,-5.359131,2.250651,0.181321,6.681002,4.994599,-1.523159,1.038458,0.575357,-3.595330,4.549030,6.077338,-4.348494,0.870358,-4.342055,1.369551,0.778686,-0.887526,7.087782,2.627453,3.426310,0.106643,9.841902,6.617908,9.251120,1.222930,9.884812,-1.486482,-3.146735,-0.396581,-3.926031,5.070710,7.327904,4.719393,-0.280635,8.835412,9.489524,8.886992,2.791775,6.842776,-7.568105,-3.548214,-1.308621,8.475125,-9.989809,7.332603,-8.369844,-4.013850,-1.508571,-5.946629,2.500801,-7.692390,-6.129016,2.927500,-8.486509,-3.368590,7.644046,8.543704,9.359964,-4.724911,-9.700237,6.649691,9.617176,-3.864479,5.913597,-1.036736,-6.588205,9.192126,-6.349713,-4.513023,5.118393,-1.873658,2.569856,-4.660939,-2.754851,-1.639664,-1.727715,6.905265,-9.828297,-7.132673,-0.802314,-4.773148,5.202880,7.306341,-5.480703,7.071879,-7.939153,-9.761957,5.439789,8.241598,0.503029,-3.311099,0.604408,2.161902,4.469900,0.601446,-2.481254,-5.842140,1.350984,-5.968567,1.734673,0.230615,6.867036,-2.925071,5.384490,-0.018854,8.105597,-5.134396,7.704637,-5.180221,1.929059,-9.357264,7.118211,-7.243576,0.381551,-6.385469,-5.222363,-4.263820,9.103439,-3.905809,-5.784074,-2.594296,6.998695,-5.385385,-9.403929,2.034465,-2.054352,-2.248030,-4.708504,-0.526017,8.765710,-4.517495,6.379016,2.466408,5.355066,8.433688,-3.741583,-0.463895,-9.276965,-0.439038,0.829111,3.359891,-6.939222,-6.240016,-8.880374,-4.625829,5.309493,4.783596,4.609638,-6.478022,-1.525426,4.664077,9.771663,-9.643527,-8.311069,-6.263749,-1.243585,-5.195582,2.309234,3.669232,1.040521,4.849259,-0.756869,7.862740,5.809187,6.968664,3.019672,6.223315,-8.925492,6.582266,-7.741705,-8.646457,3.193684,2.342322,7.429653,-1.752504,-0.334761,-8.065622,-5.448559,3.231763,5.454084,8.770247,2.834302,1.995612,-5.948043,-2.115908,-0.759814,0.206402,7.299317,9.019937,1.833824,-4.458164,8.154471,-6.350549,-0.887347,-2.754800,-4.051576,2.594363,-6.251888,2.081199,9.794591,5.748579,6.018345,3.068649,-7.179983,1.381116,-1.449256,6.866406,-6.847761,8.259957,9.568497,-1.046584,2.946421,7.594670,-1.192358,-8.220805,1.541705,-5.417157,-0.533997,8.655335,-5.273096,-2.938527,-4.979581,-7.337028,0.069782,-9.635027,9.299791,2.721349,-6.310039,-7.286367,3.150222,-0.156834,4.794482,8.374029,-4.369002,-1.055332,-7.472495,0.131691,-4.465683,3.175352,3.064431,7.076663,8.997605,9.101925,6.650890,-6.387061,-4.272278,9.977001,9.664382,0.425858,-5.503073,-6.894425,-6.165480,8.943111,-4.736310,-4.583915,-2.332381,-4.255111,-6.296922,8.098100,-9.318914,9.821891,-9.658354,-9.468462,2.224740,9.201719,2.560326,-9.749229,8.830222,-1.342688,7.819692,0.989460,-5.035564,3.479943,6.645615,0.183095,-7.036783,-9.063365,9.732259,4.276909,-8.569803,-0.227139,-4.449020,5.972102,9.650501,8.279351,3.730517,-5.423226,6.387129,-6.277059,2.277804,-2.363586,-8.759183,-2.367281,5.995688,9.222866,0.795444,8.552889,-9.312682,9.704430,-1.818918,-5.734234,-2.055844,-6.189235,-9.467039,-0.173701,-8.653471,-1.124989,-1.607515,-3.017572,-9.089981,0.238536,-5.926547,3.559135,-3.047516,-9.597580,-4.524096,-8.228544,5.297365,-0.502171,0.530399,9.766859,7.549668,1.054368,6.798227,2.179642,5.294809,3.507201,0.169767,-4.274997,9.685924,-0.288311,-7.500493,-9.985399,5.395099,6.515404,-0.465146,-0.205944,-7.632484,2.149654,-8.010113,8.363604,6.170912,2.369052,-6.278760,-1.886358,-0.446478,2.995677,9.459281,-7.266643,-1.819548,-0.777524,3.953540,-9.680650,-3.539035,8.389415,-1.243548,-8.395689,3.848180,-4.591326,1.580369,2.362308,9.034541,-8.982887,4.960738,-1.730163,3.710314,-1.058278,8.536392,-1.896639,-2.073396,-2.863030,1.356923,-9.959850,-1.522891,-1.614381,-0.406065,6.057560,-5.556500,-8.864311,6.710296,5.312318,5.425689,2.821217,-7.085573,-0.590651,6.764256,5.893957,9.470458,2.869718,-0.525961,-5.181270,3.001995,-3.488829,0.481390,7.987061,5.739113,0.277771,-0.712029,-2.264014,7.127642,5.061034,8.724213,2.362661,9.624693,6.251800,-2.689020,-7.108805,7.386777,1.324310,6.839135,2.445141,3.136380,-8.053249,8.397195,-6.513115,8.698253,1.544004,-3.514336,-9.649964,4.709412,0.750874,5.050898,-1.049686,-0.437255,7.455015,-6.147573,4.405689,-8.438823,-1.987536,-0.819715,-1.144258,-4.124020,-5.125563,-8.939945,-9.187830,-7.828257,2.151529,3.469324,2.876329,6.252153,-6.769894,6.147405,0.949187,4.756060,-4.120676,-5.726697,2.829982,-0.802868,9.790416,-1.839930,1.865641,1.618568,-1.919500,-1.537132,-2.018742,3.565710,2.682814,-8.633914,-8.401560,-8.966613,8.340024,9.251642,-4.894149,0.689921,-6.381391,9.680389,-6.824909,-9.862786,-8.518377,-2.128673,-1.878895,9.213034,1.814213,-0.415966,7.003473,-8.362404,9.747250,5.810151,5.740726,1.062982,9.414253,8.469555,4.585280,-8.554609,-5.910831,-0.486373,-2.682552,5.588429,-6.755553,2.327953,-8.907998,-5.199639,3.173865,8.216312,-0.837731,-2.715980,-7.723239,-2.475779,4.273849,6.058887,6.057989,-5.962773,1.709841,8.556814,1.240802,3.860126,-7.685597,4.419592,6.958057,2.081398,5.601835,3.503158,0.218519,4.416298,2.306008,3.990975,6.689594,-7.008612,1.646166,-6.854114,5.852403,-3.406028,4.941671,1.199443,0.673609,0.377072,4.843180,-2.232490,-1.417374,7.906641,-3.341619,-0.591155,1.018048,-4.647771,8.287768,1.198662,-1.475123,-8.999719,-0.730505,-2.363463,-7.858376,-1.917526,3.016473,6.155351,9.646495,7.178876,2.485256,1.716004,-9.965427,3.480635,-2.109569,-2.584733,-8.447817,-0.359730,9.108298,-7.893945,-9.396216,0.993492,7.590100,0.193252,5.128482,-6.680496,5.290086,6.319375,7.755239,4.811689,-9.138447,-4.041439,-9.966096,6.913776,-5.444293,-9.995433,-0.034579,-7.158364,-0.091898,-8.672848,-6.814488,-3.869249,-2.775257,9.383378,-1.397273,3.362334,2.134766,3.333851,6.097468,6.454318,2.345382,-4.494212,0.038019,7.379878,4.803684,0.905813,4.386889,4.771993,-6.374220,1.880901,0.372520,1.519674,7.144581,-3.718200,4.019837,-7.957109,2.626336,-7.037384,7.664173,-7.731106,-8.029743,-9.082708,2.586691,1.473203,-2.097250,-2.651816,-3.864328,-0.650930,1.838811,-0.860080,-9.813108,2.110455,5.083553,-1.451765,7.982937,8.605129,8.358254,1.604899,8.342010,-0.386934,-5.596693,5.186453,-4.334277,-8.538980,6.414304,-0.855718,9.455588,1.965149,8.669920,7.543726,2.782240,-2.679454,-3.523676,7.953668,7.294247,6.031164,5.695315,-5.599771,6.738288,8.536914,8.211072,-7.921496,4.308626,7.599252,-4.463575,1.272509,-8.878108,-1.199225,-0.634399,-0.498182,1.199574,7.853496,8.838468,-2.524548,-2.965390,7.132866,3.219614,-3.916189,5.791504,7.635323,-6.403158,6.079120,8.430187,6.742034,-4.599772,6.457702,5.228462,-6.307820,-3.729635,2.862398,-8.140941,-5.313916,7.246500,-2.906595,-8.769454,-9.746238,-1.302746,5.911037,8.485977,6.538354,2.824005,5.671457,9.791433,8.889280,-4.670513,-3.196375,8.021191,-4.516745,2.113588,7.518807,-5.299691,-9.250842,-8.621602,-2.391655,-2.343084,3.510311,-7.947004,6.306768,-5.289928,1.066256,5.082008,5.966015,-3.872220,4.880410,-8.122466,-4.554760,-7.597641,6.490827,-6.203809,-5.140238,-6.602624,-3.457210,-3.575665,-4.497344,-9.427440,8.487951,-6.671985,-7.487594,-9.920742,-6.656074,5.226834,-2.147038,-9.853842,-1.743298,9.081057,6.554801,-2.918420,6.080558,1.350730,0.405675,0.334963,-3.022339,6.503684,3.608383,-8.834782,-6.571596,-0.019422,-1.239920,-3.844687,1.944772,7.866619,7.904431,6.996808,0.861772,6.885846,-1.803550,5.439448,-4.537863,-6.192314,8.308708,0.569246,-0.188497,-5.438332,-6.303899,6.652115,-8.040528,4.409938,-3.536110,-9.490053,1.877343,-5.116837,9.289328,-5.347239,-0.255158,4.782237,-9.341414,3.561850,-9.294456,6.475374,-6.998951,-7.539213,9.612554,9.646990,-6.399166,6.232103,1.590766,-3.757996,-9.432655,-1.766952,4.031625,-1.200450,-5.555576,-1.990154,1.904408,-3.801478,-6.393729,-3.221397,-2.593469,9.020303,-7.789444,-5.451544,-1.827873,-4.052753,-3.146712,1.226347,-2.722507,4.994447,4.370974,6.020170,4.109975,-1.353241,-1.742433,6.332420,-7.707525,-8.518622,-6.409240,-8.146460,0.740203,1.384829,8.207423,9.229938,-7.835009,1.505332,-7.657704,-5.315162,-6.287358,5.246743,0.821913,8.435512,5.331609,-0.676721,-4.692298,-3.545572,2.136513,3.794903,-0.464869,-7.575556,2.213064,-0.279601,-8.263462,7.511893,6.538873,-2.784562,-9.584238,8.580231,4.946476,2.340689,-8.930363,7.742890,4.215281,7.480035,6.782442,-3.147514,4.103134,-3.036648,6.377387,-1.839317,-9.967056,2.591238,-5.283413,-4.107105,4.851212,0.658336,3.928918,8.282031,-9.897402,-0.071299,0.007726,-0.054901,4.947478,-6.574601,1.004062,5.878381,1.382348,-3.889988,5.178974,0.522274,-2.664823,0.035596,9.508402,-4.294573,8.518573,1.282881,4.185547,3.558941,-2.147394,5.795983,-9.285096,3.535859,4.681731,7.107847,-6.643586,8.652701,3.083071,-7.383470,-2.406159,-2.695441,5.727810,-8.075472,-9.272480,0.012057,9.838760,-9.539157,-0.377937,-9.418573,1.399758,-3.436052,-8.848496,-4.512601,-7.333788,5.620426,8.548421,-5.086007,5.618856,0.220515,-2.526569,0.879378,2.290490,4.089422,2.456181,0.935873,5.612545,1.656726,-8.212522,-5.984854,-8.850715,0.912919,2.181960,6.980734,-1.043372,-6.181703,0.168315,-7.191322,1.603296,-6.118904,5.715686,9.548922,-2.772816,9.373386,-5.603640,3.675264,2.177739,-4.749727,0.451918,6.342680,-4.250723,-1.699694,1.352593,-1.709504,1.771851,-1.502398,9.740076,8.194452,-9.634842,-7.439009,-5.436646,6.600570,-5.749765,5.789290,7.922300,3.837603,-4.662291,-1.040695,-6.200909,3.276229,7.242769,4.499310,7.283675,-2.809800,2.608232,3.910912,5.312964,9.108620,-6.898774,6.864916,6.145766,-5.853254,-3.832651,-7.012397,6.569607,-0.212166,4.324600,7.678885,5.981049,-9.439044,-5.947079,-1.036701,-9.027189,1.159827,-4.276773,9.821368,3.346117,-5.826622,-6.366313,2.382588,-9.265803,-3.865767,1.869583,-0.637451,-7.408314,4.288476,-3.791572,-6.494962,6.336896,-6.106832,-6.962146,0.478836,3.044185,5.827648,-0.293477,0.620576,0.082812,-5.694210,-5.563749,3.154812,7.231864,2.071022,-7.742117,3.037692,-6.087648,-5.983487,0.585278,-4.895708,6.210707,-9.356999,-3.394935,-0.928900,3.974750,-9.144054,2.838504,-6.774988,-4.526421,0.478253,8.245176,-6.333764,-7.132046,-3.499192,4.303558,-3.154551,4.934384,-7.376902,-7.379438,9.199149,-7.916263,6.833278,5.369610,-3.577549,-3.407593,-2.016850,-0.804874,0.043272,0.171411,-4.989492,-6.243709,5.568387,4.749853,-6.046280,-5.045836,-4.699792,7.342735,1.469213,6.726854,4.414200,3.557023,-3.372084,-2.370514,-8.866144,5.157370,-1.358394,1.786269,5.685522,-0.818878,-9.849634,2.306463,4.302699,7.557450,1.500698,-6.952765,-7.630381,5.629099,-4.695060,-7.087596,8.797750,4.768203,2.216560,-4.196311,-6.305086,-1.608291,8.142243,0.908666,4.146222,9.179277,0.796628,1.099533,4.320393,-1.113244,-4.324226,-6.463702,1.633276,-0.891858,-6.262513,9.807767,5.919796,-3.228058,-7.827327,5.475256,-3.357290,-9.901345,-6.666903,3.698941,-8.018833,3.472237,-1.771257,5.432762,-4.336011,-4.620497,-6.379592,1.007687,-8.137273,-1.006690,6.141960,-9.206623,4.599710,8.671488,-3.841194,1.575927,6.852798,0.092915,4.347018,7.313203,-0.103294,-3.271832,0.150054,-7.975805,2.306563,-3.015241,-8.956302,-0.507659,-2.783116,-2.180762,-1.641243,1.661780,-3.030114,0.696067,1.130768,8.524793,9.664647,-4.519180,2.300611,-8.071947,-5.775873,7.845395,9.551172,-5.182532,-9.832839,-9.509090,-2.350273,-2.879537,-5.964561,-7.118523,-5.281220,-6.132666,-1.330174,-7.341588,3.182723,-5.441832,-1.034304,0.510282,-0.590999,8.165317,-5.746351,9.502515,0.225906,5.644194,-1.717950,-5.250669,-5.354303,-1.988032,6.163029,-1.046659,3.573403,-4.015318,0.998899,2.322111,3.037522,-6.825786,-6.205419,7.139294,9.928281,8.894013,-8.178631,-1.824242,-8.623421,1.494341,1.069228,3.004182,0.915688,-2.277887,3.315626,-6.884099,-0.407956,-3.642068,-4.192230,0.369583,-3.406464,4.478093,-4.966058,1.913328,-3.417391,-9.064903,2.016088,-1.836795,-5.030520,6.183721,-7.351725,-3.965316,-9.774309,2.911941,-1.241593,-3.660639,-2.523189,-7.202143,6.305953,6.164367,-8.874925,5.071181,3.510960,-7.619067,8.631507,5.573084,6.012522,-9.586093,-5.898009,4.620948,-9.863217,-0.743715,4.236650,3.565561,-4.921162,5.295540,3.252079,-1.624627,-5.568042,-0.479313,-6.798345,-7.454733,8.910363,8.886567,-0.241433,6.767798,-1.466968,5.203491,-4.658542,-8.133853,-0.356208,2.977784,8.551216,-4.964353,7.223024,1.588490,1.678698,8.405802,-3.057089,-4.193345,3.028901,-3.776483,8.136331,-1.534937,-9.511399,9.068030,-7.636953,-7.211404,-1.552440,8.889344,6.647489,-2.872395,-0.122481,-9.366022,-8.622311,-8.275933,-2.345569,-4.258421,-1.081629,6.082005,0.157388,6.282601,0.221158,2.872605,5.160554,9.168584,4.154030,3.368800,-8.423666,2.072176,-2.900663,-8.488788,-4.465690,1.506666,0.568646,4.657751,8.460042,-6.560828,3.572126,-1.053323,4.842456,5.144994,1.241081,-9.369012,-0.563420,4.770594,2.440432,9.144533,-3.202041,1.439837,2.129339,-5.070334,7.520590,-7.028821,2.494639,8.155707,-1.810978,0.188611,8.964320,3.422130,3.157376,7.447916,1.213861,-5.188928,8.246181,2.979108,9.456264,5.600108,8.811347,0.285377,-7.423785,7.868485,5.923402,9.476122,-4.939425,6.398366,1.489457,6.448512,0.935648,-0.683490,9.907554,-9.596428,2.946894,5.107708,1.978346,1.692991,-1.770609,-0.643181,-2.668861,-9.233617,3.940306,-1.249598,-4.866671,5.628982,-5.786280,-9.865095,4.276454,-6.389131,-0.371413,7.940103,-2.517286,-6.479833,0.788769,-4.058503,-4.401052,2.840756,-0.660079,-7.359704,7.160590,1.562717,0.201737,6.212882,-6.096166,9.592091,6.682683,-3.071390,-7.634579,-0.029570,7.071555,3.258256,-3.458711,7.601281,-4.748915,3.703182,1.206232,7.049456,4.236011,-1.603841,-2.081987,-2.478554,-7.348746,1.778578,2.485831,5.947887,1.415526,-1.007981,4.343135,-3.932234,2.638663,5.331498,-7.166004,1.039339,9.383560,1.940136,-3.406837,7.368924,-1.976393,4.137330,1.123822,6.852527,7.823784,-0.955715,8.603261,-1.752552,-1.363188,-1.785774,3.587287,-7.375445,6.997549,-4.710214,-4.865674,-2.451040,0.543518,-7.322454,-6.610198,9.062882,-0.118106,-5.909808,-8.186767,-8.903971,-3.943516,-3.566531,5.170304,-1.643359,-4.656814,-7.180771,1.538698,-0.009438,-7.874369,3.399899,-0.487388,-4.723886,-1.296744,-3.616325,8.443500,8.401777,2.973959,2.646499,3.395356,9.423772,2.401107,-0.615637,1.049002,6.017042,5.339217,-3.191503,6.661862,-3.003960,-5.296358,-4.553728,-3.254014,1.837689,0.485260,-9.894537,2.177354,6.591094,2.842864,4.752798,-6.932205,-7.737575,6.460241,5.469338,9.199171,-0.957140,-8.696521,4.332678,-7.173468,6.265694,-5.412663,-7.779509,7.762703,-1.811074,1.784239,7.491935,-5.519795,-3.081041,2.525364,-5.942314,5.503565,-5.218701,0.351085,-9.457040,-2.075840,-7.668850,3.916473,-0.803912,-4.391549,0.244537,-6.045759,9.594988,-4.983786,-8.751316,2.356773,-4.362745,3.051443,-2.618079,1.859368,5.189812,-3.303649,-1.024436,-1.187593,6.560372,3.967434,7.257635,2.575436,-6.849467,-0.713274,8.785864,3.616543,-1.733158,-9.443290,0.749266,-9.429552,-9.739020,-0.878244,-1.711919,7.131206,3.297639,3.234512,9.004879,8.705778,-3.799359,-7.143486,6.404161,-8.388479,8.029066,6.980363,-1.471242,6.527793,-1.189000,1.333618,-7.437981,-7.052672,9.419577,-5.458075,4.000800,-2.634339,2.581829,0.690090,-7.813961,3.777114,8.707634,-6.415439,-7.260790,-1.120582,-0.286040,0.953956,-7.770535,-0.145187,5.871544,-0.512343,3.929565,8.033207,-8.331971,9.212510,-1.629981,-4.779092,2.943413,6.183294,-5.302125,2.863222,4.234931,7.597002,-7.963044,9.213003,3.254298,-4.435392,-3.459750,5.677318,6.660412,5.306737,4.365376,8.222229,-4.639200,-2.446873,-5.627181,0.831665,5.842909,7.396932,5.464402,5.277785,9.110973,6.428965,8.192067,-6.795958,8.928068,-2.313455,2.575814,-8.247209,-7.222811,-5.602325,-8.173952,-1.850673,-1.676976,7.800291,-5.689943,-7.234265,9.666866,1.326818,0.519740,2.869198,3.410863,0.995538,7.404696,3.209708,0.362379,-9.255558,1.914028,7.370961,-1.701708,4.160108,9.027369,-6.379278,7.816828,-0.596473,1.528923,-8.027106,9.138848,1.933524,6.247096,8.185062,-0.171252,-4.767843,-1.602703,-9.455641,-2.573768,-6.082184,7.366738,-1.163359,-1.934737,0.496307,-2.494082,0.810058,-1.336415,-0.066408,6.534529,-8.907095,9.125167,7.502979,-0.349786,8.441828,-6.265056,-5.716494,-6.924531,-5.947022,3.081253,7.607885,6.533820,-7.446193,1.119238,7.726022,-7.528886,1.491114,-2.575332,1.014213,-9.963292,-9.501311,-5.432807,-0.826860,5.306950,-2.815577,6.633232,6.831223,-9.681820,-5.412596,-8.976992,-4.843541,8.679674,1.925504,-2.899629,-3.164506,8.499384,3.392409,0.584293,-6.933716,9.727500,-5.579230,-2.529440,3.640555,3.980070,7.482920,-7.765648,-9.485908,7.898424,2.639024,-8.899199,-6.831886,-9.421422,-6.084110,2.454869,7.609411,5.296343,2.411423,7.466319,-6.153979,-6.348305,-1.866276,9.812058,-7.259628,-7.005704,-9.303430,5.808497,-1.897230,5.866478,-9.367008,-1.760717,7.117852,2.796484,4.462192,0.848322,0.267150,4.463488,-1.552354,-2.550314,9.997411,6.952295,6.846371,-9.910644,-1.554423,-0.093696,4.398090,-3.047319,-9.615701,5.780973,-5.502888,5.022407,3.261108,-8.356449,4.970194,-0.416975,2.408675,7.729011,2.202042,0.053745,5.867163,-7.337272,-2.451390,7.312584,-9.591381,-5.710841,7.763938,-5.300852,4.703885,1.217460,2.849736,5.244434,6.754225,5.060390,4.671744,-2.202592,9.739776,5.469044,-2.375372,-8.903365,2.806159,3.105951,9.467816,3.397149,-6.018705,6.101856,1.408863,5.461049,6.810882,9.415614,5.287585,5.822548,-5.581098], dtype = "float32")#candidate|3635|(2352,)|const|float32
call_3634 = relay.TupleGetItem(func_3248_call(relay.reshape(const_3635.astype('float32'), [2352,])), 2)
call_3636 = relay.TupleGetItem(func_3250_call(relay.reshape(const_3635.astype('float32'), [2352,])), 2)
bop_3641 = relay.greater(bop_3609.astype('bool'), relay.reshape(var_3581.astype('bool'), relay.shape_of(bop_3609))) # shape=(6, 7, 16)
output = relay.Tuple([call_3598,bop_3622,bop_3630,call_3634,const_3635,bop_3641,])
output2 = relay.Tuple([call_3599,bop_3622,bop_3633,call_3636,const_3635,bop_3641,])
func_3646 = relay.Function([var_3581,var_3582,var_3628,], output)
mod['func_3646'] = func_3646
mod = relay.transform.InferType()(mod)
mutated_mod['func_3646'] = func_3646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3646_call = mutated_mod.get_global_var('func_3646')
var_3648 = relay.var("var_3648", dtype = "int64", shape = (6, 7, 16))#candidate|3648|(6, 7, 16)|var|int64
var_3649 = relay.var("var_3649", dtype = "int64", shape = (6, 7, 16))#candidate|3649|(6, 7, 16)|var|int64
var_3650 = relay.var("var_3650", dtype = "float32", shape = (72, 1))#candidate|3650|(72, 1)|var|float32
call_3647 = func_3646_call(var_3648,var_3649,var_3650,)
output = call_3647
func_3651 = relay.Function([var_3648,var_3649,var_3650,], output)
mutated_mod['func_3651'] = func_3651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3012_call = mod.get_global_var('func_3012')
func_3014_call = mutated_mod.get_global_var('func_3014')
call_3653 = func_3012_call()
call_3654 = func_3012_call()
func_3012_call = mod.get_global_var('func_3012')
func_3014_call = mutated_mod.get_global_var('func_3014')
call_3664 = func_3012_call()
call_3665 = func_3012_call()
bop_3669 = relay.equal(call_3664.astype('bool'), relay.reshape(call_3653.astype('bool'), relay.shape_of(call_3664))) # shape=(14, 12, 14)
bop_3672 = relay.equal(call_3665.astype('bool'), relay.reshape(call_3654.astype('bool'), relay.shape_of(call_3665))) # shape=(14, 12, 14)
uop_3678 = relay.asinh(call_3664.astype('float32')) # shape=(14, 12, 14)
uop_3680 = relay.asinh(call_3665.astype('float32')) # shape=(14, 12, 14)
func_950_call = mod.get_global_var('func_950')
func_952_call = mutated_mod.get_global_var('func_952')
var_3685 = relay.var("var_3685", dtype = "uint64", shape = (1144,))#candidate|3685|(1144,)|var|uint64
call_3684 = relay.TupleGetItem(func_950_call(relay.reshape(var_3685.astype('uint64'), [13, 8, 11])), 0)
call_3686 = relay.TupleGetItem(func_952_call(relay.reshape(var_3685.astype('uint64'), [13, 8, 11])), 0)
func_1979_call = mod.get_global_var('func_1979')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_3688 = func_1979_call()
call_3689 = func_1979_call()
output = relay.Tuple([bop_3669,uop_3678,call_3684,var_3685,call_3688,])
output2 = relay.Tuple([bop_3672,uop_3680,call_3686,var_3685,call_3689,])
func_3693 = relay.Function([var_3685,], output)
mod['func_3693'] = func_3693
mod = relay.transform.InferType()(mod)
mutated_mod['func_3693'] = func_3693
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3694 = relay.var("var_3694", dtype = "uint64", shape = (1144,))#candidate|3694|(1144,)|var|uint64
func_3693_call = mutated_mod.get_global_var('func_3693')
call_3695 = func_3693_call(var_3694)
output = call_3695
func_3696 = relay.Function([var_3694], output)
mutated_mod['func_3696'] = func_3696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3012_call = mod.get_global_var('func_3012')
func_3014_call = mutated_mod.get_global_var('func_3014')
call_3710 = func_3012_call()
call_3711 = func_3012_call()
var_3718 = relay.var("var_3718", dtype = "float64", shape = (14, 12, 14))#candidate|3718|(14, 12, 14)|var|float64
bop_3719 = relay.divide(call_3710.astype('float32'), relay.reshape(var_3718.astype('float32'), relay.shape_of(call_3710))) # shape=(14, 12, 14)
bop_3722 = relay.divide(call_3711.astype('float32'), relay.reshape(var_3718.astype('float32'), relay.shape_of(call_3711))) # shape=(14, 12, 14)
func_2116_call = mod.get_global_var('func_2116')
func_2120_call = mutated_mod.get_global_var('func_2120')
var_3725 = relay.var("var_3725", dtype = "uint64", shape = (6, 4))#candidate|3725|(6, 4)|var|uint64
call_3724 = relay.TupleGetItem(func_2116_call(relay.reshape(var_3725.astype('uint64'), [8, 3]), relay.reshape(var_3725.astype('uint64'), [8, 3]), ), 0)
call_3726 = relay.TupleGetItem(func_2120_call(relay.reshape(var_3725.astype('uint64'), [8, 3]), relay.reshape(var_3725.astype('uint64'), [8, 3]), ), 0)
func_2459_call = mod.get_global_var('func_2459')
func_2462_call = mutated_mod.get_global_var('func_2462')
var_3732 = relay.var("var_3732", dtype = "float32", shape = (105, 3))#candidate|3732|(105, 3)|var|float32
call_3731 = relay.TupleGetItem(func_2459_call(relay.reshape(call_3710.astype('float32'), [14, 12, 14]), relay.reshape(var_3732.astype('float32'), [5, 7, 9]), ), 0)
call_3733 = relay.TupleGetItem(func_2462_call(relay.reshape(call_3710.astype('float32'), [14, 12, 14]), relay.reshape(var_3732.astype('float32'), [5, 7, 9]), ), 0)
func_3428_call = mod.get_global_var('func_3428')
func_3429_call = mutated_mod.get_global_var('func_3429')
call_3742 = relay.TupleGetItem(func_3428_call(), 1)
call_3743 = relay.TupleGetItem(func_3429_call(), 1)
func_1078_call = mod.get_global_var('func_1078')
func_1081_call = mutated_mod.get_global_var('func_1081')
const_3745 = relay.const([-8,5,3,-7,3,-4,-9,6,9,-3,4,8,-9,-8,3,-4,-4,8,6,-4,1,8,10,2,-5,2,10,7,10,-2,7,-5,2,10,9,10,4,2,4,-5,-10,-10,9,-8,3,2,-7,-4,-10,-8,8,1,-8,6,-8,2,-10,-8,10,-7,-7,6,6,2,2,-7,2,2,2,1,-3,-9,5,-3,5,-9,-1,-6,-3,-4,-2,7,10,3,9,1,-9,4,-10,-9,7,7,3,4,6,2,9,-2,-9,1,1,8,4,3,9,1,2,-3,-5,-2,4,-1,-3,4,-7,8,8,-7,-7,10,-2,9,9,10,8,-7,6,-7,-8,-1,-5,5,4,-10,4,-7,9,2,-8,3,2,8,7,-9,6,2,-8,9,-2,-2,-6,-3,-5,-4,5,10,-9,-9,6,3,-5,-5,3,4,-2,-2,-5,3,7,-2,-9,4,-1,-6,9,10,4,7,-9,5,-7,-10,-9,2,-2,-2,9,1,-7,6,6,-9,1,-8,-9,2,9,10,-4,-7,1,9,3,9,-7,-5,-10,3,-2,-4,5,9,-9,-3,-3,1,-8,-3,8,-3,6,-8,-4,-2,4,-7,3,5,7,4,8,6,-6,1,1,-1,-1,7,-3,-2,-2,-8,-5,6,-2,-3,-8,10,-8,-9,4,7,-2,1,-1,2,3,8,-4,-9,-7,-9,-1,-10,-10,5,-1,-9,7,10,-4,1,4,-5,-6,-7,9,9,-6,7,9,8,-6,-5,-9,-1,7,10,5,-4,-2,-5,8,8,-4,8,9,-3,2,-8,-3,4,2,5,-9,-10,9,-9,1,1,-2,-9,4,6,10,-9,-4,6,6,5,8,6,3,6,-5,-1,5,-10,2,7,1,-4,8,2,1,1,5,9,-5,3,-2,-6,2,6,-1,5,-10,8,-1,3,-8,-1,2,-2,-5,-6,9,3,-8,-7,-3,-3,-1,2,1,-4,-10,3,-7,8,10,-10,-5,-2,4,-6,-10,-2,1,-5,-9,-1,-5,2,1,-5,-5,-10,10,7,-9,-2,1,-4,-8,-5,9,8,4,8,-4,-6,8,1,-8,-1,-1,-10,7,-9,10,-1,-1,2,1,-9,-3,-3,-1,-10,-5,7,-5,2,-10,4,4,10,-6,-1,2,-1,-6,-7,-1,7,-9,-5,3,4,-8,-5,8,8,-8,1,10,7,8,-5,1,6,8,4,-9,-7,9,-9,-7,-10,-5,-7,5,-3,9,2,9,2,1,1,4,-7,9,-9,3,1,2,-5,1,-10,7,10,1,-5,8,2,-3,-5,5,9,3,7,10,-4,1,1,5,-6,-5,-1,-9,5,4,-4,-1,-10,-5,-4,9,5,-10,-2,2,-5,8,-10,-1,-9,-2,-7,-8,-1,-1,9,3,-4,2,9,-3,-3,-2,-10,-7,-9,1,-3,-2,5,1,7,-8,8,6,-6,-2,2,1,7,10,-6,-4,4,-5,-9,-1,-10,-9,10,6,6,4,-5,1,-2,10,4,7,9,-6,-8,-7,7,9,-1,5,6,-7,-4,-3,-1,-4,-6,-2,-3,-5,5,-3,10,-2,-10,10,6,-7,8,-9,-4,4,4,-6,6,9,-5,-6,6,-8,2,-2,-7,-1,8,4,2,1,7,2,1,5,-6,3,-8,8,-10,10,-1,2,10,-1,-7,-8,-2,-8,-4,10,-5,-1,3,4,-4,-1,-7,4,3,2,2,4,2,8,6,-5,-1,3,10,7,4,-6,-5,2,8,7,6,3,-5,4,-8,-2,9,-3,7,-2,-2,-3,1,-2,-1,-8,-4,5,-3,-1,-1,-8,-2,-7,2,9,-8,-8,8,-9,-3,-6,-9,6,-3,10,2,2,10,-1,9,-6,-2,7,8,-1,-4,-8,9,4,1,-3,6,6,-5,8,-9,-4,-3,-3,8,4,10,-4,5,8,-5,-10,-6,-7,-5,6,1,7,2,9,-3,-1,-4,-1,-4,9,-9,8,-7,-10,-10,-8,-8,-9,4,-8,8,9,6,-4,-8,8,4,-5,-3,-5,1,5,8,-10,1,-9,-9,2,-8,-4,1,-2,-1,6,-3,-6,4,-4,7,-7,3,-7,4,-8,8,-9,-7,4,9,2,2,-6,3,-9,5,-9,1,3,-7,-10,-4,-6,9,8,1,-1,10,-7,9,-3,3,-7,8,-4,2,2,4,-8,7,2,-8,8,10,8,3,-8,-5,-3,-4,10,2,3,-9,8,8,1,-2,-1,8,4,3,10,-4,3,-1,-5,4,-6,10,8,-3,-2,-9,7,-4,-9,-2,7,3,7,2,4,9,-6,5,7,-4,-4,1,10,-4,-2,-7,6,8,3,-5,-5,-8,-5,6,2,-8,1,-8,3,-10,-10,-8,7,8,-6,-7,-9,-2,2,4,-6,-10,2,-9,-2,3,-6,-8,7,-4,-1,3,-10,6,-3,-5,3,-9,5,-3,7,-1,-7,7,-7,6,-4,9,6,-5,6,-9,5,-7,5,7,5,2,-7,3,-2,5,10,1,1,-4,-5,-7,10,-1,3,-5,-8,-8,10,2,-2,9,10,5,-7,8,1,-2,-9,-8,-3,-1,-1,-9,-2,-4,-5,-6,2,-8,-2,1,-2,-8,6,-7,8,1,9,-10,-8,-7,7,1,7,-10,-4,6,-4,10,8,-10,-5,8,2,5,4], dtype = "uint32")#candidate|3745|(1001,)|const|uint32
call_3744 = func_1078_call(relay.reshape(const_3745.astype('uint32'), [7, 11, 13]), relay.reshape(const_3745.astype('uint32'), [7, 11, 13]), )
call_3746 = func_1078_call(relay.reshape(const_3745.astype('uint32'), [7, 11, 13]), relay.reshape(const_3745.astype('uint32'), [7, 11, 13]), )
func_2536_call = mod.get_global_var('func_2536')
func_2538_call = mutated_mod.get_global_var('func_2538')
const_3755 = relay.const([-6.125052,-9.340723,6.369065,-7.319113,0.050727,1.793311,1.262461,1.257531,2.572570,7.983474,1.087528,2.963347,0.425657,-1.356940,-5.722240,3.924263,-4.106018,-7.630144,-2.561745,5.766922,5.538891,8.020989,-2.648455,5.979544,5.821965,-9.196786,4.480691,2.071222,-2.447426,1.108270,7.930025,4.065497], dtype = "float64")#candidate|3755|(32,)|const|float64
call_3754 = func_2536_call(relay.reshape(const_3755.astype('float64'), [4, 2, 4]))
call_3756 = func_2536_call(relay.reshape(const_3755.astype('float64'), [4, 2, 4]))
output = relay.Tuple([bop_3719,call_3724,var_3725,call_3731,var_3732,call_3742,call_3744,const_3745,call_3754,const_3755,])
output2 = relay.Tuple([bop_3722,call_3726,var_3725,call_3733,var_3732,call_3743,call_3746,const_3745,call_3756,const_3755,])
func_3764 = relay.Function([var_3718,var_3725,var_3732,], output)
mod['func_3764'] = func_3764
mod = relay.transform.InferType()(mod)
var_3765 = relay.var("var_3765", dtype = "float64", shape = (14, 12, 14))#candidate|3765|(14, 12, 14)|var|float64
var_3766 = relay.var("var_3766", dtype = "uint64", shape = (6, 4))#candidate|3766|(6, 4)|var|uint64
var_3767 = relay.var("var_3767", dtype = "float32", shape = (105, 3))#candidate|3767|(105, 3)|var|float32
output = func_3764(var_3765,var_3766,var_3767,)
func_3768 = relay.Function([var_3765,var_3766,var_3767,], output)
mutated_mod['func_3768'] = func_3768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_3807 = relay.TupleGetItem(func_1856_call(), 0)
call_3808 = relay.TupleGetItem(func_1857_call(), 0)
func_2472_call = mod.get_global_var('func_2472')
func_2473_call = mutated_mod.get_global_var('func_2473')
call_3816 = relay.TupleGetItem(func_2472_call(), 0)
call_3817 = relay.TupleGetItem(func_2473_call(), 0)
bop_3818 = relay.left_shift(call_3807.astype('uint32'), relay.reshape(call_3816.astype('uint32'), relay.shape_of(call_3807))) # shape=(14, 12, 14)
bop_3821 = relay.left_shift(call_3808.astype('uint32'), relay.reshape(call_3817.astype('uint32'), relay.shape_of(call_3808))) # shape=(14, 12, 14)
func_1078_call = mod.get_global_var('func_1078')
func_1081_call = mutated_mod.get_global_var('func_1081')
var_3827 = relay.var("var_3827", dtype = "uint32", shape = (13, 77))#candidate|3827|(13, 77)|var|uint32
call_3826 = func_1078_call(relay.reshape(var_3827.astype('uint32'), [7, 11, 13]), relay.reshape(var_3827.astype('uint32'), [7, 11, 13]), )
call_3828 = func_1078_call(relay.reshape(var_3827.astype('uint32'), [7, 11, 13]), relay.reshape(var_3827.astype('uint32'), [7, 11, 13]), )
func_2651_call = mod.get_global_var('func_2651')
func_2655_call = mutated_mod.get_global_var('func_2655')
var_3840 = relay.var("var_3840", dtype = "int32", shape = (48,))#candidate|3840|(48,)|var|int32
const_3841 = relay.const([[1,1],[-5,-6],[5,10],[-5,-10],[3,-5],[3,1],[8,2],[7,2],[-6,-6],[6,-6],[4,-2],[1,9],[7,10],[-1,4],[3,1],[-2,10],[10,8],[7,-6],[2,-1],[1,6],[6,-8],[8,-8],[7,-1],[-6,6],[-4,-1],[-2,6],[-4,-6],[7,-3],[-7,1],[10,-4],[-3,-6],[5,-5],[10,-2],[1,-4],[-4,-10],[-2,5],[-3,-5],[-8,-1],[-6,-9],[1,-2],[10,-3],[3,-7],[-10,10],[-1,1],[3,-8],[5,-3],[-8,-3],[-8,10],[-8,-10],[2,8],[6,4],[-2,3],[3,6],[1,-10],[-4,10],[6,2],[4,-5],[-9,10],[8,3],[1,5],[7,3],[-5,-9],[-5,-10],[8,7],[4,-8],[-4,8],[-2,-3],[-7,6],[-2,-4],[-1,-5],[-9,-9],[9,-6],[-7,-5],[3,-2],[6,-8],[4,7],[-5,2],[-3,6],[3,6],[3,-4],[8,-1],[3,-8],[1,-2],[-1,2],[1,6],[2,-5],[-7,-7],[-4,-1],[10,-5],[-7,4],[8,2],[6,-7],[-9,-2],[-7,6],[-7,-4],[-5,3],[-9,10],[9,4],[9,-9],[10,-5],[-1,10],[3,1],[10,-1],[10,-2],[-4,5],[-6,3],[4,2],[9,3],[-4,7],[-10,9],[4,4],[-6,3],[9,-3],[6,2],[-7,-6],[-2,6],[3,-5],[-2,2],[4,9],[4,-10],[-3,-10],[1,1],[-6,4],[-7,6],[-4,2],[7,1],[3,3],[-6,-2],[6,-8],[-2,4],[-7,6],[1,-1],[-6,10],[-8,-7],[4,8],[-5,-1],[-2,7],[-9,2],[1,7],[3,-8],[2,4],[-10,-10],[-3,8],[-1,-8]], dtype = "int32")#candidate|3841|(144, 2)|const|int32
call_3839 = relay.TupleGetItem(func_2651_call(relay.reshape(var_3840.astype('int32'), [8, 1, 6]), relay.reshape(const_3841.astype('int32'), [8, 6, 6]), relay.reshape(const_3841.astype('float64'), [8, 6, 6]), ), 0)
call_3842 = relay.TupleGetItem(func_2655_call(relay.reshape(var_3840.astype('int32'), [8, 1, 6]), relay.reshape(const_3841.astype('int32'), [8, 6, 6]), relay.reshape(const_3841.astype('float64'), [8, 6, 6]), ), 0)
func_3159_call = mod.get_global_var('func_3159')
func_3161_call = mutated_mod.get_global_var('func_3161')
call_3844 = relay.TupleGetItem(func_3159_call(), 2)
call_3845 = relay.TupleGetItem(func_3161_call(), 2)
func_3432_call = mod.get_global_var('func_3432')
func_3433_call = mutated_mod.get_global_var('func_3433')
call_3847 = func_3432_call()
call_3848 = func_3432_call()
output = relay.Tuple([bop_3818,call_3826,var_3827,call_3839,var_3840,const_3841,call_3844,call_3847,])
output2 = relay.Tuple([bop_3821,call_3828,var_3827,call_3842,var_3840,const_3841,call_3845,call_3848,])
func_3851 = relay.Function([var_3827,var_3840,], output)
mod['func_3851'] = func_3851
mod = relay.transform.InferType()(mod)
var_3852 = relay.var("var_3852", dtype = "uint32", shape = (13, 77))#candidate|3852|(13, 77)|var|uint32
var_3853 = relay.var("var_3853", dtype = "int32", shape = (48,))#candidate|3853|(48,)|var|int32
output = func_3851(var_3852,var_3853,)
func_3854 = relay.Function([var_3852,var_3853,], output)
mutated_mod['func_3854'] = func_3854
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3872 = relay.const([[[0.367583,-0.690396,7.344813,-2.113032,0.361781,8.540702,1.670045,-6.116184],[-2.150357,-5.182821,2.326940,0.496361,-3.310777,7.355038,-9.679019,6.738447],[-5.098454,-6.490245,-9.588315,-5.124390,7.739456,-3.266749,1.737083,-0.676313],[8.521073,-3.294385,-8.475242,-9.196337,-5.746937,3.585296,-8.353260,4.650539],[7.731628,-0.782041,-6.439400,7.135937,7.468596,-0.605642,-0.100885,-4.128633]],[[9.700606,8.912392,-0.858799,-8.939472,2.182818,-9.023443,-6.664301,-5.008664],[5.345714,-2.559254,5.933452,0.496679,7.322142,-6.334973,1.552050,9.240512],[3.247822,-4.327958,-9.950247,4.469609,-2.528260,5.266285,8.059054,-3.503568],[2.111687,-6.578311,-8.680479,7.131350,-7.995057,-6.525717,-4.822959,-6.961736],[-1.495425,-8.067852,-4.286333,-2.327246,1.462767,6.309757,-6.425668,3.516116]],[[-4.908507,-3.716534,7.447047,-1.413396,0.106505,8.584446,-9.270840,-2.649429],[-1.433808,0.929055,-3.696153,-1.912136,-2.638274,-0.851686,9.445604,-2.260261],[8.659462,2.904509,-8.452418,-8.652478,-5.681482,3.981956,-8.633239,1.150133],[-5.348612,8.026275,-3.729634,-7.739730,1.293703,0.596695,-7.390026,9.828001],[7.494128,4.034404,-3.971681,5.015829,1.251379,-1.056091,-7.515823,5.415368]],[[-7.560100,6.610213,-2.255345,6.844729,-8.730948,-9.879359,-2.379040,3.011553],[-4.043392,8.884334,-3.664486,3.838000,-8.369730,8.877701,3.061368,4.069973],[4.015396,5.697001,9.663668,-3.089629,2.304794,-4.633664,-4.342015,0.811522],[-8.425604,7.009317,-0.023111,2.811481,-0.994928,9.170898,9.246712,-7.815447],[-6.216889,-8.345804,-4.006738,4.418947,8.501837,-0.986326,8.034871,2.410782]],[[-5.014990,6.020555,5.744235,1.767344,1.119325,-7.998932,-2.850911,-7.540257],[-3.518098,-0.037330,1.519219,-2.900881,9.575031,-2.481916,8.494133,1.641067],[-9.687703,-6.881865,6.758478,-3.113656,-4.590890,3.887999,6.484315,6.815362],[-7.741993,-3.186403,-6.810827,-0.656168,7.835835,-1.887979,-8.033772,6.175317],[-1.658931,7.059782,4.903406,1.022477,-1.381703,-1.821082,-9.334364,1.710292]],[[5.735336,-4.925804,-5.393098,-3.381709,9.193280,-8.093627,-8.350704,-5.443012],[8.866873,-8.938250,5.114709,8.216130,-8.645418,1.083042,6.003365,7.298752],[2.548020,-2.440258,-5.428049,1.632764,-7.183915,-3.105682,7.175405,7.650305],[-7.856572,-1.677166,1.898815,0.991340,5.525985,-6.111799,7.649549,-5.910680],[0.496220,-1.928497,7.817323,5.632515,-2.973667,-9.215304,0.543648,-8.090056]],[[1.504636,1.695287,-9.617886,-0.484772,-2.854517,1.830817,-4.705155,-5.612900],[-9.948478,8.270057,-5.231654,2.207130,-7.097736,9.942910,-5.576331,3.256703],[-9.383347,-5.089425,6.769528,-1.551014,-9.714806,6.637989,1.809151,-0.300313],[3.710763,0.553969,0.305888,-0.678885,-4.301075,2.055465,2.729899,-2.718714],[9.010972,2.805821,2.289881,-0.028180,4.309612,-3.116969,3.834525,-1.632220]],[[8.480539,4.599184,1.512392,-0.863707,5.309357,-5.151657,2.125595,-5.426921],[8.357297,8.411919,4.314632,-9.791592,-2.838904,-5.428911,-2.761533,-6.107915],[-6.616190,-2.447947,5.395473,-5.293892,-6.866785,8.193052,5.175719,-5.320032],[3.631427,-6.159331,-0.292314,9.430202,2.004502,-4.711777,1.059445,5.228990],[-5.613265,0.019346,1.139215,-7.597222,-4.886980,8.229362,7.182933,-4.757327]],[[3.402925,-2.285725,-2.945551,-9.576245,8.619031,2.367042,9.269141,-5.795311],[-8.443633,9.852871,9.331370,2.580742,-0.434567,-0.681071,-6.634616,-5.345753],[8.874086,7.888008,0.808955,7.742068,4.447058,5.334568,-3.545376,-5.274058],[4.081835,-5.953440,-2.737327,-4.275868,-2.607716,-9.327675,5.280316,-5.183344],[9.058880,-9.150957,-4.767310,0.720294,-0.788233,-8.089889,8.392061,8.530867]],[[0.161297,9.402975,5.938502,-5.750575,-7.638068,4.137646,8.427765,-2.965728],[2.025676,4.290750,2.563212,8.978975,9.093744,-1.460541,4.283573,7.574783],[1.151261,-0.849381,-0.354773,-5.968791,2.468615,5.235506,8.608902,-9.485731],[-7.136774,-6.691109,-7.017423,-0.420336,-9.905198,-6.881213,-8.111971,-4.716933],[1.930045,3.525163,0.224613,-4.814810,4.772529,8.018890,-5.291868,6.175806]],[[-0.966391,-7.294203,-1.600922,-5.502974,1.223429,-0.067109,4.831477,7.665973],[8.203962,-5.644174,-1.708126,7.575963,-3.163407,-5.183759,-3.091901,-8.626226],[-1.183096,-0.283196,3.823607,2.019710,8.145113,-0.949258,-0.474215,7.603676],[-7.172455,-5.161128,2.741363,-8.433100,-6.110651,-8.349147,7.283006,7.127560],[3.934799,-8.819103,9.245285,4.907788,2.190950,6.838177,1.219689,8.549430]],[[-2.153743,-4.979617,8.336041,-5.516264,6.677597,8.728606,7.188815,-9.733661],[-7.342953,3.718800,-2.922612,-0.063977,-5.211484,9.212502,1.591443,-8.355944],[-6.322069,3.987837,0.977687,-1.495276,-4.759050,6.135922,-2.111021,-2.354605],[-0.597954,-4.083197,-6.917260,-4.198230,-1.622602,-2.719380,-1.187602,-0.951697],[3.686120,1.816297,1.128359,6.540135,2.905191,4.390205,5.867750,-1.388288]],[[8.176860,-7.620658,5.622146,-4.111876,8.246350,5.044300,9.545327,-3.146540],[5.435755,-0.643105,4.259784,-9.026507,-5.000506,1.005471,8.196671,-1.145842],[-7.861763,-6.354919,9.936295,-5.611602,3.855921,4.371675,6.105111,4.740161],[4.318592,4.323882,-8.070192,3.769991,9.155421,-0.295335,-7.901655,2.560489],[3.929237,-3.553031,-9.681151,9.465868,4.901187,9.583067,5.765515,8.233419]],[[-6.648073,7.818409,4.739481,9.513818,5.490966,9.800143,-0.937766,1.924506],[0.798702,1.402902,-4.714176,8.824661,7.398862,-1.838196,-3.321991,6.624370],[-4.311653,5.271960,5.641991,-8.326856,-3.855586,-2.323482,-6.666684,-9.267197],[2.434754,9.336431,4.444150,5.909632,2.543145,6.763173,-2.979010,-5.541823],[2.860584,-9.009355,9.706178,-5.096626,-7.193656,-7.005989,-9.868433,-1.633756]]], dtype = "float32")#candidate|3872|(14, 5, 8)|const|float32
var_3873 = relay.var("var_3873", dtype = "float32", shape = (14, 5, 8))#candidate|3873|(14, 5, 8)|var|float32
bop_3874 = relay.divide(const_3872.astype('float32'), relay.reshape(var_3873.astype('float32'), relay.shape_of(const_3872))) # shape=(14, 5, 8)
output = bop_3874
output2 = bop_3874
func_3879 = relay.Function([var_3873,], output)
mod['func_3879'] = func_3879
mod = relay.transform.InferType()(mod)
var_3880 = relay.var("var_3880", dtype = "float32", shape = (14, 5, 8))#candidate|3880|(14, 5, 8)|var|float32
output = func_3879(var_3880)
func_3881 = relay.Function([var_3880], output)
mutated_mod['func_3881'] = func_3881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
call_3927 = func_1598_call()
call_3928 = func_1598_call()
func_3646_call = mod.get_global_var('func_3646')
func_3651_call = mutated_mod.get_global_var('func_3651')
const_3932 = relay.const([5,-5,-9,5,4,4,-8,-2,2,3,7,-7,-7,9,6,-7,-1,3,3,-10,10,1,-8,10,-5,4,-7,4,-6,5,-6,-4,5,9,-3,-5,4,2,-2,-3,-7,1,-10,10,-8,9,-7,1,8,4,-8,6,-6,5,1,7,7,-4,2,4,-8,2,-5,1,-2,7,-1,-1,1,7,3,4,3,-10,3,-5,-6,8,1,-7,2,2,-6,4,-8,-1,-6,-5,-4,-4,-9,-8,7,8,-5,2,8,-3,-6,2,-8,4,-10,3,-4,-1,-7,9,4,5,-2,-7,8,3,-6,7,-1,-10,-2,5,1,10,-4,5,6,-7,4,9,5,7,8,-7,-6,10,-9,5,-10,1,6,1,-3,-2,-6,2,-2,5,2,-1,-9,8,5,-2,-10,8,-7,2,1,1,-5,-9,2,1,7,2,-2,-6,4,1,-10,-10,9,-9,5,6,-2,1,10,-8,3,-3,-10,9,8,8,10,-5,1,9,-5,-10,-1,-3,-2,-6,-10,-9,9,-6,9,-4,-5,7,-4,-4,1,-8,-4,3,-1,-2,-9,3,8,-4,-7,-5,9,8,8,4,7,-10,-4,-10,2,-6,-4,9,-10,10,-3,-10,7,-8,4,-4,8,6,9,-5,-10,3,9,6,7,9,-1,4,6,4,-8,3,-2,-7,4,3,-2,6,8,-3,7,7,-10,7,7,-8,-8,10,-9,-3,9,-7,-2,-4,-6,-7,8,1,7,6,9,-8,4,-9,4,-5,9,4,4,6,-5,-3,7,3,-3,-7,-2,9,4,8,-1,-3,-5,-4,6,-1,2,-6,-9,4,-9,-2,7,-4,1,-9,4,-3,-8,8,-8,5,-2,-9,-1,2,-6,-10,8,-4,-7,-1,6,10,4,7,8,2,-6,-2,5,-6,10,6,1,9,4,9,-6,5,8,2,6,5,-4,-9,-10,-10,3,10,-5,-2,-9,-10,-9,-6,6,2,-9,-4,-3,-2,9,7,5,6,6,-10,8,-1,2,3,-5,-2,1,7,-2,-10,10,-5,-5,-6,10,6,-5,-6,-6,7,-5,6,-8,1,-2,10,-8,-9,-5,-4,1,2,8,-3,6,-6,10,8,-4,5,-10,8,-10,-3,-9,8,6,6,-8,8,8,7,-3,5,4,3,-6,3,7,-9,-2,8,6,2,2,10,-4,-9,1,-6,7,8,10,7,9,6,4,-9,-10,6,3,-2,-2,5,7,6,-1,-7,-8,-2,2,-6,4,9,-6,-3,-1,-7,-8,-4,-4,-10,7,-9,2,1,9,-2,-3,-4,6,-10,-4,9,9,-8,-6,-9,-6,9,8,-3,7,10,6,1,-1,10,7,-1,5,-1,-10,7,9,-3,5,-3,-1,4,-7,1,7,-7,-3,3,8,10,-4,-3,2,-9,-1,-9,7,10,-10,4,-2,-2,-9,-2,10,-4,-10,5,-10,1,9,6,5,2,6,-1,-6,5,1,-2,-1,5,-1,5,7,5,-6,-3,-6,6,-8,-2,1,2,5,3,8,9,-10,-3,2,4,8,1,-10,-5,4,-5,-5,9,10,-7,-1,10,-3,-10,-10,5,2,3,10,2,-7,1,5,9,-3,4,3,7,6,10,-2,5,10,-5,7,-6,-6,4,8,-7,-2,-5,6,2,9,-9,9,-4,3,9,7,-2,-4,-4,-4,1,5,-2,8,-4,-7,6,6,-5,9,9,-1,1,-1,-6,-10,-10,5,-6,5,-9,-3,-10,-7,10,-1,4,-1,-7,-1,-7,2,-6,9,-9,1,9,-5,7], dtype = "int64")#candidate|3932|(672,)|const|int64
var_3933 = relay.var("var_3933", dtype = "float32", shape = (72,))#candidate|3933|(72,)|var|float32
call_3931 = relay.TupleGetItem(func_3646_call(relay.reshape(const_3932.astype('int64'), [6, 7, 16]), relay.reshape(const_3932.astype('int64'), [6, 7, 16]), relay.reshape(var_3933.astype('float32'), [72, 1]), ), 1)
call_3934 = relay.TupleGetItem(func_3651_call(relay.reshape(const_3932.astype('int64'), [6, 7, 16]), relay.reshape(const_3932.astype('int64'), [6, 7, 16]), relay.reshape(var_3933.astype('float32'), [72, 1]), ), 1)
uop_3941 = relay.rsqrt(call_3927.astype('float64')) # shape=(14, 12, 14)
uop_3943 = relay.rsqrt(call_3928.astype('float64')) # shape=(14, 12, 14)
uop_3944 = relay.acos(uop_3941.astype('float32')) # shape=(14, 12, 14)
uop_3946 = relay.acos(uop_3943.astype('float32')) # shape=(14, 12, 14)
output = relay.Tuple([call_3931,const_3932,var_3933,uop_3944,])
output2 = relay.Tuple([call_3934,const_3932,var_3933,uop_3946,])
func_3947 = relay.Function([var_3933,], output)
mod['func_3947'] = func_3947
mod = relay.transform.InferType()(mod)
mutated_mod['func_3947'] = func_3947
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3948 = relay.var("var_3948", dtype = "float32", shape = (72,))#candidate|3948|(72,)|var|float32
func_3947_call = mutated_mod.get_global_var('func_3947')
call_3949 = func_3947_call(var_3948)
output = call_3949
func_3950 = relay.Function([var_3948], output)
mutated_mod['func_3950'] = func_3950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3432_call = mod.get_global_var('func_3432')
func_3433_call = mutated_mod.get_global_var('func_3433')
call_4014 = func_3432_call()
call_4015 = func_3432_call()
output = relay.Tuple([call_4014,])
output2 = relay.Tuple([call_4015,])
func_4029 = relay.Function([], output)
mod['func_4029'] = func_4029
mod = relay.transform.InferType()(mod)
mutated_mod['func_4029'] = func_4029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4029_call = mutated_mod.get_global_var('func_4029')
call_4030 = func_4029_call()
output = call_4030
func_4031 = relay.Function([], output)
mutated_mod['func_4031'] = func_4031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_4090 = relay.TupleGetItem(func_1856_call(), 0)
call_4091 = relay.TupleGetItem(func_1857_call(), 0)
func_1905_call = mod.get_global_var('func_1905')
func_1910_call = mutated_mod.get_global_var('func_1910')
var_4094 = relay.var("var_4094", dtype = "uint32", shape = (108,))#candidate|4094|(108,)|var|uint32
const_4095 = relay.const(7, dtype = "uint32")#candidate|4095|()|const|uint32
call_4093 = relay.TupleGetItem(func_1905_call(relay.reshape(var_4094.astype('uint32'), [6, 3, 6]), relay.reshape(var_4094.astype('uint32'), [6, 3, 6]), relay.reshape(const_4095.astype('uint32'), []), ), 0)
call_4096 = relay.TupleGetItem(func_1910_call(relay.reshape(var_4094.astype('uint32'), [6, 3, 6]), relay.reshape(var_4094.astype('uint32'), [6, 3, 6]), relay.reshape(const_4095.astype('uint32'), []), ), 0)
output = relay.Tuple([call_4090,call_4093,var_4094,const_4095,])
output2 = relay.Tuple([call_4091,call_4096,var_4094,const_4095,])
func_4104 = relay.Function([var_4094,], output)
mod['func_4104'] = func_4104
mod = relay.transform.InferType()(mod)
var_4105 = relay.var("var_4105", dtype = "uint32", shape = (108,))#candidate|4105|(108,)|var|uint32
output = func_4104(var_4105)
func_4106 = relay.Function([var_4105], output)
mutated_mod['func_4106'] = func_4106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4029_call = mod.get_global_var('func_4029')
func_4031_call = mutated_mod.get_global_var('func_4031')
call_4163 = relay.TupleGetItem(func_4029_call(), 0)
call_4164 = relay.TupleGetItem(func_4031_call(), 0)
func_3947_call = mod.get_global_var('func_3947')
func_3950_call = mutated_mod.get_global_var('func_3950')
var_4168 = relay.var("var_4168", dtype = "float32", shape = (72,))#candidate|4168|(72,)|var|float32
call_4167 = relay.TupleGetItem(func_3947_call(relay.reshape(var_4168.astype('float32'), [72,])), 2)
call_4169 = relay.TupleGetItem(func_3950_call(relay.reshape(var_4168.astype('float32'), [72,])), 2)
output = relay.Tuple([call_4163,call_4167,var_4168,])
output2 = relay.Tuple([call_4164,call_4169,var_4168,])
func_4182 = relay.Function([var_4168,], output)
mod['func_4182'] = func_4182
mod = relay.transform.InferType()(mod)
mutated_mod['func_4182'] = func_4182
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4183 = relay.var("var_4183", dtype = "float32", shape = (72,))#candidate|4183|(72,)|var|float32
func_4182_call = mutated_mod.get_global_var('func_4182')
call_4184 = func_4182_call(var_4183)
output = call_4184
func_4185 = relay.Function([var_4183], output)
mutated_mod['func_4185'] = func_4185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
call_4247 = func_1598_call()
call_4248 = func_1598_call()
func_1384_call = mod.get_global_var('func_1384')
func_1388_call = mutated_mod.get_global_var('func_1388')
const_4254 = relay.const([1,-3,-7,4,-1,-3,4,-7], dtype = "uint16")#candidate|4254|(8,)|const|uint16
const_4255 = relay.const([4,-9,9,-5,4,-7,6,-6,10,7,7,8,5,10,-10,-6,-8,3,7,-10,-8,3,6,-2], dtype = "uint16")#candidate|4255|(24,)|const|uint16
call_4253 = relay.TupleGetItem(func_1384_call(relay.reshape(const_4254.astype('uint16'), [1, 2, 4]), relay.reshape(const_4255.astype('uint16'), [3, 2, 4]), ), 1)
call_4256 = relay.TupleGetItem(func_1388_call(relay.reshape(const_4254.astype('uint16'), [1, 2, 4]), relay.reshape(const_4255.astype('uint16'), [3, 2, 4]), ), 1)
output = relay.Tuple([call_4247,call_4253,const_4254,const_4255,])
output2 = relay.Tuple([call_4248,call_4256,const_4254,const_4255,])
func_4258 = relay.Function([], output)
mod['func_4258'] = func_4258
mod = relay.transform.InferType()(mod)
output = func_4258()
func_4259 = relay.Function([], output)
mutated_mod['func_4259'] = func_4259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2472_call = mod.get_global_var('func_2472')
func_2473_call = mutated_mod.get_global_var('func_2473')
call_4316 = relay.TupleGetItem(func_2472_call(), 0)
call_4317 = relay.TupleGetItem(func_2473_call(), 0)
output = relay.Tuple([call_4316,])
output2 = relay.Tuple([call_4317,])
func_4323 = relay.Function([], output)
mod['func_4323'] = func_4323
mod = relay.transform.InferType()(mod)
mutated_mod['func_4323'] = func_4323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mutated_mod.get_global_var('func_4323')
call_4324 = func_4323_call()
output = call_4324
func_4325 = relay.Function([], output)
mutated_mod['func_4325'] = func_4325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_4334 = func_2127_call()
call_4335 = func_2127_call()
output = relay.Tuple([call_4334,])
output2 = relay.Tuple([call_4335,])
func_4342 = relay.Function([], output)
mod['func_4342'] = func_4342
mod = relay.transform.InferType()(mod)
output = func_4342()
func_4343 = relay.Function([], output)
mutated_mod['func_4343'] = func_4343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3078_call = mod.get_global_var('func_3078')
func_3080_call = mutated_mod.get_global_var('func_3080')
call_4347 = relay.TupleGetItem(func_3078_call(), 0)
call_4348 = relay.TupleGetItem(func_3080_call(), 0)
var_4364 = relay.var("var_4364", dtype = "float32", shape = (5, 7, 9))#candidate|4364|(5, 7, 9)|var|float32
bop_4365 = relay.equal(call_4347.astype('bool'), relay.reshape(var_4364.astype('bool'), relay.shape_of(call_4347))) # shape=(5, 7, 9)
bop_4368 = relay.equal(call_4348.astype('bool'), relay.reshape(var_4364.astype('bool'), relay.shape_of(call_4348))) # shape=(5, 7, 9)
output = bop_4365
output2 = bop_4368
func_4374 = relay.Function([var_4364,], output)
mod['func_4374'] = func_4374
mod = relay.transform.InferType()(mod)
var_4375 = relay.var("var_4375", dtype = "float32", shape = (5, 7, 9))#candidate|4375|(5, 7, 9)|var|float32
output = func_4374(var_4375)
func_4376 = relay.Function([var_4375], output)
mutated_mod['func_4376'] = func_4376
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4407 = relay.var("var_4407", dtype = "int64", shape = (4, 6, 8))#candidate|4407|(4, 6, 8)|var|int64
var_4408 = relay.var("var_4408", dtype = "int64", shape = (4, 6, 8))#candidate|4408|(4, 6, 8)|var|int64
bop_4409 = relay.not_equal(var_4407.astype('bool'), relay.reshape(var_4408.astype('bool'), relay.shape_of(var_4407))) # shape=(4, 6, 8)
uop_4415 = relay.sigmoid(var_4407.astype('float32')) # shape=(4, 6, 8)
output = relay.Tuple([bop_4409,uop_4415,])
output2 = relay.Tuple([bop_4409,uop_4415,])
func_4427 = relay.Function([var_4407,var_4408,], output)
mod['func_4427'] = func_4427
mod = relay.transform.InferType()(mod)
var_4428 = relay.var("var_4428", dtype = "int64", shape = (4, 6, 8))#candidate|4428|(4, 6, 8)|var|int64
var_4429 = relay.var("var_4429", dtype = "int64", shape = (4, 6, 8))#candidate|4429|(4, 6, 8)|var|int64
output = func_4427(var_4428,var_4429,)
func_4430 = relay.Function([var_4428,var_4429,], output)
mutated_mod['func_4430'] = func_4430
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4484 = relay.var("var_4484", dtype = "uint8", shape = (5, 10, 2))#candidate|4484|(5, 10, 2)|var|uint8
var_4485 = relay.var("var_4485", dtype = "uint8", shape = (5, 10, 2))#candidate|4485|(5, 10, 2)|var|uint8
bop_4486 = relay.logical_xor(var_4484.astype('uint8'), relay.reshape(var_4485.astype('uint8'), relay.shape_of(var_4484))) # shape=(5, 10, 2)
func_2938_call = mod.get_global_var('func_2938')
func_2940_call = mutated_mod.get_global_var('func_2940')
const_4494 = relay.const([-7,-7,1,-4,-4,1,5,-3,10,-8,-4,3,2,-1,7,-6,3,1,-1,6,-5,-3,-4,-9,-10,5,3,7,3,8,10,-4,-9,-8,-2,-6,-1,7,-7,-8,-3,-10], dtype = "uint16")#candidate|4494|(42,)|const|uint16
call_4493 = relay.TupleGetItem(func_2938_call(relay.reshape(const_4494.astype('uint16'), [14, 3, 1])), 0)
call_4495 = relay.TupleGetItem(func_2940_call(relay.reshape(const_4494.astype('uint16'), [14, 3, 1])), 0)
func_2236_call = mod.get_global_var('func_2236')
func_2239_call = mutated_mod.get_global_var('func_2239')
const_4500 = relay.const([-5,-2,-1,-2,3,-7,2,3,-6,-4,10,-3,4,1,7,2,10,10,3,2,-9,-2,-6,-2,3,-9,-2,10,-8,-3,9,-7,-1,2,9,10,3,-1,-9,5,-9,-5,-7,-8,5,8,-1,3,-3,6,9,2,-7,2,5,8,-10,-8,-7,1,-10,-6,-5,-4,3,2,5,-5,8,8,5,-9,10,-3,6,9,-3,8,3,10,-2,-10,-8,-9,2,-10,-7,1,8,4,-6,-1,-9,8,-3,-10,1,-1,-4,-5,-2,-3,-6,6,-8,8,-5,-4,-10,-8,1,7,7,2,10,10,-2,1,-5,2,9,-7,10,3,-4,-4,-9,8,1,-9,-7,5,10,-7,-4,10,8,-10,-1,-2,-3,1,-9,10,-8,5,8,5,5,-4,-1,-4,4,-1,8,9,10,-3,-8,3,2,3,7,9,-10,-2,-9,-1,-2,-9,6,2,-9,-6,-8,5,6,-1,6,6,-4,8,-7,-8,3,-1,-7,-6,-10,3,3,9,4,4,-1,-7,-3,10,-5,-10,8,-9,6,1,-10,-3,10,4,-3,5,3,1,-8,7,-3,-4,-10,-6,-8,10,1,3,-5,-5,-5,2,-4,-3,4,-6,7,-8,2,-1,2,10,-5,5,10,-8,-4,-3,3,-9,-6,-6,4,9,-1,-6,-2,-8,-9,-8,-5,-4,-9,7,4,1,-2,10,2,-2,10,5,4,2,6,-2,8,-2,-4,-9,9,-6,-6,7,-8,8,-4,-1,-6,-4,4,-5,-4,7,10,-4,-5,-7,1,-8,2,-6,-9,-7,-1,-9,-6,7,-3,-6,2,1,-2,-10,-4,-1,-4,-3,5,8,-10,1,1,-6,2,-7,-1,4,7,-8,10,-7,6,5,-1,-7,10,-7,-8,5,-4,-4,3,2,-10,10,10,4,7,-9,-4,1,6,7,2,4,6,-3,-8,8,-5,-9,6,-1,3,-3,-6,-3,2,-6,1,10,-10,6,-8,-5,3,-8,-7,3,-8,-9,1,-9,-3,9,5,-3,4,2,-6,-7,-2,9,5,-1,8,-9,3,4,-3,10,-4,-4,2,4,-4,8,-7,7,-9,-7,8,6,4,-5,-2,-4,8,5,-5,-10,10,-6,5,1,2,10,3,-1,-3,3,-3,-2,-6,-3,-7,-3,2,-4,-5,-10,-2,-6,6,2,-6,-5,-4,10,-5,3,7,-9,-7,6,9,-10,-8,-5,-4,4,-2,8,7,7,2,-3,8,-8,4,-9,-9,3,-7,-2,7,-2,-6,-6,8,-6,-5,-9,-1,-10,-8,10,-9,-5,-5,-9,2,3,2,2,3,10,4,-1,-4,-2,1,2,-8,6,5,-4,-7,-6,6,-10,-3,-9,10,4,10,-10,1,-10,-10,-10,4,-1,-3,-3,-2,-10,-1,-4,8,7,-5,8,9,-2,-6,4,-8,-4,-2,2,8,-9,-2,4,-10,-9,-9,10,6,-7,-4,-4,-5,-5,-5,-1,10,4,4,1,8,-8,6,-5,1,5,-2,-10,-7,-6,-2,7,-8,2,-8,5,-3,-3,4,-1,1,-10,5,1,-5,-6,3,-8,2,-2,-7,8,-1,-8,10,-10,5,3,-10,-2,1,-3,-9,7], dtype = "uint32")#candidate|4500|(600,)|const|uint32
call_4499 = relay.TupleGetItem(func_2236_call(relay.reshape(const_4500.astype('uint32'), [6, 100]), relay.reshape(const_4500.astype('uint32'), [6, 100]), ), 9)
call_4501 = relay.TupleGetItem(func_2239_call(relay.reshape(const_4500.astype('uint32'), [6, 100]), relay.reshape(const_4500.astype('uint32'), [6, 100]), ), 9)
func_2178_call = mod.get_global_var('func_2178')
func_2179_call = mutated_mod.get_global_var('func_2179')
call_4502 = relay.TupleGetItem(func_2178_call(), 0)
call_4503 = relay.TupleGetItem(func_2179_call(), 0)
func_4029_call = mod.get_global_var('func_4029')
func_4031_call = mutated_mod.get_global_var('func_4031')
call_4518 = relay.TupleGetItem(func_4029_call(), 0)
call_4519 = relay.TupleGetItem(func_4031_call(), 0)
output = relay.Tuple([bop_4486,call_4493,const_4494,call_4499,const_4500,call_4502,call_4518,])
output2 = relay.Tuple([bop_4486,call_4495,const_4494,call_4501,const_4500,call_4503,call_4519,])
func_4528 = relay.Function([var_4484,var_4485,], output)
mod['func_4528'] = func_4528
mod = relay.transform.InferType()(mod)
mutated_mod['func_4528'] = func_4528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4528_call = mutated_mod.get_global_var('func_4528')
var_4530 = relay.var("var_4530", dtype = "uint8", shape = (5, 10, 2))#candidate|4530|(5, 10, 2)|var|uint8
var_4531 = relay.var("var_4531", dtype = "uint8", shape = (5, 10, 2))#candidate|4531|(5, 10, 2)|var|uint8
call_4529 = func_4528_call(var_4530,var_4531,)
output = call_4529
func_4532 = relay.Function([var_4530,var_4531,], output)
mutated_mod['func_4532'] = func_4532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2375_call = mod.get_global_var('func_2375')
func_2377_call = mutated_mod.get_global_var('func_2377')
call_4573 = relay.TupleGetItem(func_2375_call(), 0)
call_4574 = relay.TupleGetItem(func_2377_call(), 0)
output = relay.Tuple([call_4573,])
output2 = relay.Tuple([call_4574,])
func_4595 = relay.Function([], output)
mod['func_4595'] = func_4595
mod = relay.transform.InferType()(mod)
mutated_mod['func_4595'] = func_4595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4595_call = mutated_mod.get_global_var('func_4595')
call_4596 = func_4595_call()
output = call_4596
func_4597 = relay.Function([], output)
mutated_mod['func_4597'] = func_4597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2472_call = mod.get_global_var('func_2472')
func_2473_call = mutated_mod.get_global_var('func_2473')
call_4630 = relay.TupleGetItem(func_2472_call(), 0)
call_4631 = relay.TupleGetItem(func_2473_call(), 0)
output = relay.Tuple([call_4630,])
output2 = relay.Tuple([call_4631,])
func_4645 = relay.Function([], output)
mod['func_4645'] = func_4645
mod = relay.transform.InferType()(mod)
mutated_mod['func_4645'] = func_4645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4645_call = mutated_mod.get_global_var('func_4645')
call_4646 = func_4645_call()
output = call_4646
func_4647 = relay.Function([], output)
mutated_mod['func_4647'] = func_4647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_4657 = relay.TupleGetItem(func_4323_call(), 0)
call_4658 = relay.TupleGetItem(func_4325_call(), 0)
var_4661 = relay.var("var_4661", dtype = "float32", shape = (14, 12, 14))#candidate|4661|(14, 12, 14)|var|float32
bop_4662 = relay.maximum(call_4657.astype('float32'), relay.reshape(var_4661.astype('float32'), relay.shape_of(call_4657))) # shape=(14, 12, 14)
bop_4665 = relay.maximum(call_4658.astype('float32'), relay.reshape(var_4661.astype('float32'), relay.shape_of(call_4658))) # shape=(14, 12, 14)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_4666 = relay.TupleGetItem(func_1856_call(), 0)
call_4667 = relay.TupleGetItem(func_1857_call(), 0)
output = relay.Tuple([bop_4662,call_4666,])
output2 = relay.Tuple([bop_4665,call_4667,])
func_4668 = relay.Function([var_4661,], output)
mod['func_4668'] = func_4668
mod = relay.transform.InferType()(mod)
var_4669 = relay.var("var_4669", dtype = "float32", shape = (14, 12, 14))#candidate|4669|(14, 12, 14)|var|float32
output = func_4668(var_4669)
func_4670 = relay.Function([var_4669], output)
mutated_mod['func_4670'] = func_4670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2798_call = mod.get_global_var('func_2798')
func_2799_call = mutated_mod.get_global_var('func_2799')
call_4687 = relay.TupleGetItem(func_2798_call(), 0)
call_4688 = relay.TupleGetItem(func_2799_call(), 0)
output = call_4687
output2 = call_4688
func_4710 = relay.Function([], output)
mod['func_4710'] = func_4710
mod = relay.transform.InferType()(mod)
output = func_4710()
func_4711 = relay.Function([], output)
mutated_mod['func_4711'] = func_4711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_4731 = relay.TupleGetItem(func_4323_call(), 0)
call_4732 = relay.TupleGetItem(func_4325_call(), 0)
var_4737 = relay.var("var_4737", dtype = "float32", shape = (14, 12, 14))#candidate|4737|(14, 12, 14)|var|float32
bop_4738 = relay.less_equal(call_4731.astype('bool'), relay.reshape(var_4737.astype('bool'), relay.shape_of(call_4731))) # shape=(14, 12, 14)
bop_4741 = relay.less_equal(call_4732.astype('bool'), relay.reshape(var_4737.astype('bool'), relay.shape_of(call_4732))) # shape=(14, 12, 14)
func_3052_call = mod.get_global_var('func_3052')
func_3055_call = mutated_mod.get_global_var('func_3055')
var_4745 = relay.var("var_4745", dtype = "float64", shape = (294,))#candidate|4745|(294,)|var|float64
call_4744 = relay.TupleGetItem(func_3052_call(relay.reshape(var_4745.astype('float64'), [3, 7, 14])), 0)
call_4746 = relay.TupleGetItem(func_3055_call(relay.reshape(var_4745.astype('float64'), [3, 7, 14])), 0)
func_2741_call = mod.get_global_var('func_2741')
func_2742_call = mutated_mod.get_global_var('func_2742')
call_4749 = relay.TupleGetItem(func_2741_call(), 0)
call_4750 = relay.TupleGetItem(func_2742_call(), 0)
func_873_call = mod.get_global_var('func_873')
func_875_call = mutated_mod.get_global_var('func_875')
var_4753 = relay.var("var_4753", dtype = "float64", shape = (84,))#candidate|4753|(84,)|var|float64
call_4752 = relay.TupleGetItem(func_873_call(relay.reshape(var_4753.astype('float64'), [3, 14, 2])), 0)
call_4754 = relay.TupleGetItem(func_875_call(relay.reshape(var_4753.astype('float64'), [3, 14, 2])), 0)
output = relay.Tuple([bop_4738,call_4744,var_4745,call_4749,call_4752,var_4753,])
output2 = relay.Tuple([bop_4741,call_4746,var_4745,call_4750,call_4754,var_4753,])
func_4778 = relay.Function([var_4737,var_4745,var_4753,], output)
mod['func_4778'] = func_4778
mod = relay.transform.InferType()(mod)
var_4779 = relay.var("var_4779", dtype = "float32", shape = (14, 12, 14))#candidate|4779|(14, 12, 14)|var|float32
var_4780 = relay.var("var_4780", dtype = "float64", shape = (294,))#candidate|4780|(294,)|var|float64
var_4781 = relay.var("var_4781", dtype = "float64", shape = (84,))#candidate|4781|(84,)|var|float64
output = func_4778(var_4779,var_4780,var_4781,)
func_4782 = relay.Function([var_4779,var_4780,var_4781,], output)
mutated_mod['func_4782'] = func_4782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_4793 = relay.TupleGetItem(func_1856_call(), 0)
call_4794 = relay.TupleGetItem(func_1857_call(), 0)
output = relay.Tuple([call_4793,])
output2 = relay.Tuple([call_4794,])
func_4817 = relay.Function([], output)
mod['func_4817'] = func_4817
mod = relay.transform.InferType()(mod)
output = func_4817()
func_4818 = relay.Function([], output)
mutated_mod['func_4818'] = func_4818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2948_call = mod.get_global_var('func_2948')
func_2949_call = mutated_mod.get_global_var('func_2949')
call_4819 = func_2948_call()
call_4820 = func_2948_call()
func_1646_call = mod.get_global_var('func_1646')
func_1647_call = mutated_mod.get_global_var('func_1647')
call_4824 = func_1646_call()
call_4825 = func_1646_call()
const_4834 = relay.constdtype = "float32")#candidate|4834|(14, 12, 14)|const|float32
bop_4835 = relay.power(call_4824.astype('float32'), relay.reshape(const_4834.astype('float32'), relay.shape_of(call_4824))) # shape=(14, 12, 14)
bop_4838 = relay.power(call_4825.astype('float32'), relay.reshape(const_4834.astype('float32'), relay.shape_of(call_4825))) # shape=(14, 12, 14)
const_4842 = relay.constdtype = "float32")#candidate|4842|(14, 12, 14)|const|float32
bop_4843 = relay.multiply(call_4824.astype('float32'), relay.reshape(const_4842.astype('float32'), relay.shape_of(call_4824))) # shape=(14, 12, 14)
bop_4846 = relay.multiply(call_4825.astype('float32'), relay.reshape(const_4842.astype('float32'), relay.shape_of(call_4825))) # shape=(14, 12, 14)
func_2713_call = mod.get_global_var('func_2713')
func_2716_call = mutated_mod.get_global_var('func_2716')
var_4852 = relay.var("var_4852", dtype = "uint64", shape = (24,))#candidate|4852|(24,)|var|uint64
call_4851 = relay.TupleGetItem(func_2713_call(relay.reshape(var_4852.astype('uint64'), [24,]), relay.reshape(const_4834.astype('float32'), [14, 12, 14]), ), 3)
call_4853 = relay.TupleGetItem(func_2716_call(relay.reshape(var_4852.astype('uint64'), [24,]), relay.reshape(const_4834.astype('float32'), [14, 12, 14]), ), 3)
var_4867 = relay.var("var_4867", dtype = "float32", shape = (14, 12, 14))#candidate|4867|(14, 12, 14)|var|float32
bop_4868 = relay.add(const_4842.astype('uint64'), relay.reshape(var_4867.astype('uint64'), relay.shape_of(const_4842))) # shape=(14, 12, 14)
output = relay.Tuple([call_4819,bop_4835,bop_4843,call_4851,var_4852,bop_4868,])
output2 = relay.Tuple([call_4820,bop_4838,bop_4846,call_4853,var_4852,bop_4868,])
func_4871 = relay.Function([var_4852,var_4867,], output)
mod['func_4871'] = func_4871
mod = relay.transform.InferType()(mod)
var_4872 = relay.var("var_4872", dtype = "uint64", shape = (24,))#candidate|4872|(24,)|var|uint64
var_4873 = relay.var("var_4873", dtype = "float32", shape = (14, 12, 14))#candidate|4873|(14, 12, 14)|var|float32
output = func_4871(var_4872,var_4873,)
func_4874 = relay.Function([var_4872,var_4873,], output)
mutated_mod['func_4874'] = func_4874
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4915 = relay.var("var_4915", dtype = "uint32", shape = (9, 12, 2))#candidate|4915|(9, 12, 2)|var|uint32
var_4916 = relay.var("var_4916", dtype = "uint32", shape = (9, 12, 2))#candidate|4916|(9, 12, 2)|var|uint32
bop_4917 = relay.add(var_4915.astype('uint32'), relay.reshape(var_4916.astype('uint32'), relay.shape_of(var_4915))) # shape=(9, 12, 2)
output = relay.Tuple([bop_4917,])
output2 = relay.Tuple([bop_4917,])
func_4930 = relay.Function([var_4915,var_4916,], output)
mod['func_4930'] = func_4930
mod = relay.transform.InferType()(mod)
var_4931 = relay.var("var_4931", dtype = "uint32", shape = (9, 12, 2))#candidate|4931|(9, 12, 2)|var|uint32
var_4932 = relay.var("var_4932", dtype = "uint32", shape = (9, 12, 2))#candidate|4932|(9, 12, 2)|var|uint32
output = func_4930(var_4931,var_4932,)
func_4933 = relay.Function([var_4931,var_4932,], output)
mutated_mod['func_4933'] = func_4933
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4935 = relay.var("var_4935", dtype = "float32", shape = (13, 1, 12))#candidate|4935|(13, 1, 12)|var|float32
var_4936 = relay.var("var_4936", dtype = "float32", shape = (13, 12, 12))#candidate|4936|(13, 12, 12)|var|float32
bop_4937 = relay.mod(var_4935.astype('float32'), var_4936.astype('float32')) # shape=(13, 12, 12)
func_4528_call = mod.get_global_var('func_4528')
func_4532_call = mutated_mod.get_global_var('func_4532')
const_4948 = relay.const([2,10,7,-8,-7,3,7,5,10,10,4,3,-3,-2,-10,9,-8,-8,2,10,-10,-7,-8,8,6,5,-6,-9,-1,-4,-7,-4,4,10,9,-5,-6,5,5,-2,-3,-10,3,8,10,4,-6,2,2,6,-5,-8,3,3,-9,8,-1,-3,-8,10,-6,9,5,-4,5,-6,-2,1,10,-3,8,2,-10,6,9,-9,-10,-9,-10,-10,4,7,-2,1,-2,-2,-6,2,3,-5,3,7,2,6,8,9,4,8,-4,-10], dtype = "uint8")#candidate|4948|(100,)|const|uint8
call_4947 = relay.TupleGetItem(func_4528_call(relay.reshape(const_4948.astype('uint8'), [5, 10, 2]), relay.reshape(const_4948.astype('uint8'), [5, 10, 2]), ), 0)
call_4949 = relay.TupleGetItem(func_4532_call(relay.reshape(const_4948.astype('uint8'), [5, 10, 2]), relay.reshape(const_4948.astype('uint8'), [5, 10, 2]), ), 0)
uop_4953 = relay.tan(call_4947.astype('float32')) # shape=(5, 10, 2)
uop_4955 = relay.tan(call_4949.astype('float32')) # shape=(5, 10, 2)
output = relay.Tuple([bop_4937,const_4948,uop_4953,])
output2 = relay.Tuple([bop_4937,const_4948,uop_4955,])
func_4961 = relay.Function([var_4935,var_4936,], output)
mod['func_4961'] = func_4961
mod = relay.transform.InferType()(mod)
mutated_mod['func_4961'] = func_4961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4961_call = mutated_mod.get_global_var('func_4961')
var_4963 = relay.var("var_4963", dtype = "float32", shape = (13, 1, 12))#candidate|4963|(13, 1, 12)|var|float32
var_4964 = relay.var("var_4964", dtype = "float32", shape = (13, 12, 12))#candidate|4964|(13, 12, 12)|var|float32
call_4962 = func_4961_call(var_4963,var_4964,)
output = call_4962
func_4965 = relay.Function([var_4963,var_4964,], output)
mutated_mod['func_4965'] = func_4965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4029_call = mod.get_global_var('func_4029')
func_4031_call = mutated_mod.get_global_var('func_4031')
call_5031 = relay.TupleGetItem(func_4029_call(), 0)
call_5032 = relay.TupleGetItem(func_4031_call(), 0)
uop_5033 = relay.erf(call_5031.astype('float32')) # shape=(14, 12, 14)
uop_5035 = relay.erf(call_5032.astype('float32')) # shape=(14, 12, 14)
func_3577_call = mod.get_global_var('func_3577')
func_3578_call = mutated_mod.get_global_var('func_3578')
call_5048 = func_3577_call()
call_5049 = func_3577_call()
output = relay.Tuple([uop_5033,call_5048,])
output2 = relay.Tuple([uop_5035,call_5049,])
func_5052 = relay.Function([], output)
mod['func_5052'] = func_5052
mod = relay.transform.InferType()(mod)
output = func_5052()
func_5053 = relay.Function([], output)
mutated_mod['func_5053'] = func_5053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3432_call = mod.get_global_var('func_3432')
func_3433_call = mutated_mod.get_global_var('func_3433')
call_5099 = func_3432_call()
call_5100 = func_3432_call()
func_4668_call = mod.get_global_var('func_4668')
func_4670_call = mutated_mod.get_global_var('func_4670')
call_5101 = relay.TupleGetItem(func_4668_call(relay.reshape(call_5099.astype('float32'), [14, 12, 14])), 0)
call_5102 = relay.TupleGetItem(func_4670_call(relay.reshape(call_5099.astype('float32'), [14, 12, 14])), 0)
output = relay.Tuple([call_5099,call_5101,])
output2 = relay.Tuple([call_5100,call_5102,])
func_5109 = relay.Function([], output)
mod['func_5109'] = func_5109
mod = relay.transform.InferType()(mod)
mutated_mod['func_5109'] = func_5109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5109_call = mutated_mod.get_global_var('func_5109')
call_5110 = func_5109_call()
output = call_5110
func_5111 = relay.Function([], output)
mutated_mod['func_5111'] = func_5111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2127_call = mod.get_global_var('func_2127')
func_2128_call = mutated_mod.get_global_var('func_2128')
call_5128 = func_2127_call()
call_5129 = func_2127_call()
func_4258_call = mod.get_global_var('func_4258')
func_4259_call = mutated_mod.get_global_var('func_4259')
call_5136 = relay.TupleGetItem(func_4258_call(), 3)
call_5137 = relay.TupleGetItem(func_4259_call(), 3)
output = relay.Tuple([call_5128,call_5136,])
output2 = relay.Tuple([call_5129,call_5137,])
func_5138 = relay.Function([], output)
mod['func_5138'] = func_5138
mod = relay.transform.InferType()(mod)
mutated_mod['func_5138'] = func_5138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5138_call = mutated_mod.get_global_var('func_5138')
call_5139 = func_5138_call()
output = call_5139
func_5140 = relay.Function([], output)
mutated_mod['func_5140'] = func_5140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5167 = relay.var("var_5167", dtype = "float32", shape = (5, 14, 8))#candidate|5167|(5, 14, 8)|var|float32
uop_5168 = relay.erf(var_5167.astype('float32')) # shape=(5, 14, 8)
output = relay.Tuple([uop_5168,])
output2 = relay.Tuple([uop_5168,])
func_5179 = relay.Function([var_5167,], output)
mod['func_5179'] = func_5179
mod = relay.transform.InferType()(mod)
var_5180 = relay.var("var_5180", dtype = "float32", shape = (5, 14, 8))#candidate|5180|(5, 14, 8)|var|float32
output = func_5179(var_5180)
func_5181 = relay.Function([var_5180], output)
mutated_mod['func_5181'] = func_5181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2054_call = mod.get_global_var('func_2054')
func_2056_call = mutated_mod.get_global_var('func_2056')
call_5219 = func_2054_call()
call_5220 = func_2054_call()
output = relay.Tuple([call_5219,])
output2 = relay.Tuple([call_5220,])
func_5223 = relay.Function([], output)
mod['func_5223'] = func_5223
mod = relay.transform.InferType()(mod)
output = func_5223()
func_5224 = relay.Function([], output)
mutated_mod['func_5224'] = func_5224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2741_call = mod.get_global_var('func_2741')
func_2742_call = mutated_mod.get_global_var('func_2742')
call_5284 = relay.TupleGetItem(func_2741_call(), 0)
call_5285 = relay.TupleGetItem(func_2742_call(), 0)
output = call_5284
output2 = call_5285
func_5290 = relay.Function([], output)
mod['func_5290'] = func_5290
mod = relay.transform.InferType()(mod)
mutated_mod['func_5290'] = func_5290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5290_call = mutated_mod.get_global_var('func_5290')
call_5291 = func_5290_call()
output = call_5291
func_5292 = relay.Function([], output)
mutated_mod['func_5292'] = func_5292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4258_call = mod.get_global_var('func_4258')
func_4259_call = mutated_mod.get_global_var('func_4259')
call_5293 = relay.TupleGetItem(func_4258_call(), 2)
call_5294 = relay.TupleGetItem(func_4259_call(), 2)
output = call_5293
output2 = call_5294
func_5295 = relay.Function([], output)
mod['func_5295'] = func_5295
mod = relay.transform.InferType()(mod)
output = func_5295()
func_5296 = relay.Function([], output)
mutated_mod['func_5296'] = func_5296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4817_call = mod.get_global_var('func_4817')
func_4818_call = mutated_mod.get_global_var('func_4818')
call_5297 = relay.TupleGetItem(func_4817_call(), 0)
call_5298 = relay.TupleGetItem(func_4818_call(), 0)
output = call_5297
output2 = call_5298
func_5317 = relay.Function([], output)
mod['func_5317'] = func_5317
mod = relay.transform.InferType()(mod)
mutated_mod['func_5317'] = func_5317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5317_call = mutated_mod.get_global_var('func_5317')
call_5318 = func_5317_call()
output = call_5318
func_5319 = relay.Function([], output)
mutated_mod['func_5319'] = func_5319
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5354 = relay.var("var_5354", dtype = "uint64", shape = (2, 10, 14))#candidate|5354|(2, 10, 14)|var|uint64
var_5355 = relay.var("var_5355", dtype = "uint64", shape = (2, 10, 14))#candidate|5355|(2, 10, 14)|var|uint64
bop_5356 = relay.add(var_5354.astype('uint64'), relay.reshape(var_5355.astype('uint64'), relay.shape_of(var_5354))) # shape=(2, 10, 14)
output = relay.Tuple([bop_5356,])
output2 = relay.Tuple([bop_5356,])
func_5366 = relay.Function([var_5354,var_5355,], output)
mod['func_5366'] = func_5366
mod = relay.transform.InferType()(mod)
mutated_mod['func_5366'] = func_5366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5366_call = mutated_mod.get_global_var('func_5366')
var_5368 = relay.var("var_5368", dtype = "uint64", shape = (2, 10, 14))#candidate|5368|(2, 10, 14)|var|uint64
var_5369 = relay.var("var_5369", dtype = "uint64", shape = (2, 10, 14))#candidate|5369|(2, 10, 14)|var|uint64
call_5367 = func_5366_call(var_5368,var_5369,)
output = call_5367
func_5370 = relay.Function([var_5368,var_5369,], output)
mutated_mod['func_5370'] = func_5370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5109_call = mod.get_global_var('func_5109')
func_5111_call = mutated_mod.get_global_var('func_5111')
call_5387 = relay.TupleGetItem(func_5109_call(), 0)
call_5388 = relay.TupleGetItem(func_5111_call(), 0)
output = call_5387
output2 = call_5388
func_5392 = relay.Function([], output)
mod['func_5392'] = func_5392
mod = relay.transform.InferType()(mod)
mutated_mod['func_5392'] = func_5392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5392_call = mutated_mod.get_global_var('func_5392')
call_5393 = func_5392_call()
output = call_5393
func_5394 = relay.Function([], output)
mutated_mod['func_5394'] = func_5394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5109_call = mod.get_global_var('func_5109')
func_5111_call = mutated_mod.get_global_var('func_5111')
call_5395 = relay.TupleGetItem(func_5109_call(), 1)
call_5396 = relay.TupleGetItem(func_5111_call(), 1)
output = relay.Tuple([call_5395,])
output2 = relay.Tuple([call_5396,])
func_5407 = relay.Function([], output)
mod['func_5407'] = func_5407
mod = relay.transform.InferType()(mod)
output = func_5407()
func_5408 = relay.Function([], output)
mutated_mod['func_5408'] = func_5408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
call_5428 = func_1598_call()
call_5429 = func_1598_call()
uop_5438 = relay.sinh(call_5428.astype('float32')) # shape=(14, 12, 14)
uop_5440 = relay.sinh(call_5429.astype('float32')) # shape=(14, 12, 14)
func_5392_call = mod.get_global_var('func_5392')
func_5394_call = mutated_mod.get_global_var('func_5394')
call_5441 = func_5392_call()
call_5442 = func_5392_call()
output = relay.Tuple([uop_5438,call_5441,])
output2 = relay.Tuple([uop_5440,call_5442,])
func_5444 = relay.Function([], output)
mod['func_5444'] = func_5444
mod = relay.transform.InferType()(mod)
output = func_5444()
func_5445 = relay.Function([], output)
mutated_mod['func_5445'] = func_5445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3012_call = mod.get_global_var('func_3012')
func_3014_call = mutated_mod.get_global_var('func_3014')
call_5449 = func_3012_call()
call_5450 = func_3012_call()
uop_5462 = relay.log2(call_5449.astype('float32')) # shape=(14, 12, 14)
uop_5464 = relay.log2(call_5450.astype('float32')) # shape=(14, 12, 14)
func_4182_call = mod.get_global_var('func_4182')
func_4185_call = mutated_mod.get_global_var('func_4185')
var_5467 = relay.var("var_5467", dtype = "float32", shape = (72,))#candidate|5467|(72,)|var|float32
call_5466 = relay.TupleGetItem(func_4182_call(relay.reshape(var_5467.astype('float32'), [72,])), 1)
call_5468 = relay.TupleGetItem(func_4185_call(relay.reshape(var_5467.astype('float32'), [72,])), 1)
bop_5472 = relay.less(uop_5462.astype('bool'), relay.reshape(call_5449.astype('bool'), relay.shape_of(uop_5462))) # shape=(14, 12, 14)
bop_5475 = relay.less(uop_5464.astype('bool'), relay.reshape(call_5450.astype('bool'), relay.shape_of(uop_5464))) # shape=(14, 12, 14)
output = relay.Tuple([call_5466,var_5467,bop_5472,])
output2 = relay.Tuple([call_5468,var_5467,bop_5475,])
func_5484 = relay.Function([var_5467,], output)
mod['func_5484'] = func_5484
mod = relay.transform.InferType()(mod)
mutated_mod['func_5484'] = func_5484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5485 = relay.var("var_5485", dtype = "float32", shape = (72,))#candidate|5485|(72,)|var|float32
func_5484_call = mutated_mod.get_global_var('func_5484')
call_5486 = func_5484_call(var_5485)
output = call_5486
func_5487 = relay.Function([var_5485], output)
mutated_mod['func_5487'] = func_5487
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5518 = relay.var("var_5518", dtype = "uint32", shape = (14, 9, 7))#candidate|5518|(14, 9, 7)|var|uint32
var_5519 = relay.var("var_5519", dtype = "uint32", shape = (14, 9, 7))#candidate|5519|(14, 9, 7)|var|uint32
bop_5520 = relay.not_equal(var_5518.astype('bool'), relay.reshape(var_5519.astype('bool'), relay.shape_of(var_5518))) # shape=(14, 9, 7)
output = relay.Tuple([bop_5520,])
output2 = relay.Tuple([bop_5520,])
func_5526 = relay.Function([var_5518,var_5519,], output)
mod['func_5526'] = func_5526
mod = relay.transform.InferType()(mod)
mutated_mod['func_5526'] = func_5526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5526_call = mutated_mod.get_global_var('func_5526')
var_5528 = relay.var("var_5528", dtype = "uint32", shape = (14, 9, 7))#candidate|5528|(14, 9, 7)|var|uint32
var_5529 = relay.var("var_5529", dtype = "uint32", shape = (14, 9, 7))#candidate|5529|(14, 9, 7)|var|uint32
call_5527 = func_5526_call(var_5528,var_5529,)
output = call_5527
func_5530 = relay.Function([var_5528,var_5529,], output)
mutated_mod['func_5530'] = func_5530
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5532 = relay.var("var_5532", dtype = "float32", shape = (7, 7))#candidate|5532|(7, 7)|var|float32
uop_5533 = relay.sin(var_5532.astype('float32')) # shape=(7, 7)
func_3693_call = mod.get_global_var('func_3693')
func_3696_call = mutated_mod.get_global_var('func_3696')
var_5562 = relay.var("var_5562", dtype = "uint64", shape = (1144, 1))#candidate|5562|(1144, 1)|var|uint64
call_5561 = relay.TupleGetItem(func_3693_call(relay.reshape(var_5562.astype('uint64'), [1144,])), 1)
call_5563 = relay.TupleGetItem(func_3696_call(relay.reshape(var_5562.astype('uint64'), [1144,])), 1)
func_4029_call = mod.get_global_var('func_4029')
func_4031_call = mutated_mod.get_global_var('func_4031')
call_5569 = relay.TupleGetItem(func_4029_call(), 0)
call_5570 = relay.TupleGetItem(func_4031_call(), 0)
func_4871_call = mod.get_global_var('func_4871')
func_4874_call = mutated_mod.get_global_var('func_4874')
const_5596 = relay.const([[4,-8],[6,1],[-10,-5],[2,-8],[7,-8],[-4,6],[10,-7],[-3,-2],[2,-6],[-10,4],[-10,8],[5,8]], dtype = "uint64")#candidate|5596|(12, 2)|const|uint64
call_5595 = relay.TupleGetItem(func_4871_call(relay.reshape(const_5596.astype('uint64'), [24,]), relay.reshape(call_5561.astype('float32'), [14, 12, 14]), ), 4)
call_5597 = relay.TupleGetItem(func_4874_call(relay.reshape(const_5596.astype('uint64'), [24,]), relay.reshape(call_5561.astype('float32'), [14, 12, 14]), ), 4)
uop_5611 = relay.rsqrt(var_5562.astype('float32')) # shape=(1144, 1)
output = relay.Tuple([uop_5533,call_5561,call_5569,call_5595,const_5596,uop_5611,])
output2 = relay.Tuple([uop_5533,call_5563,call_5570,call_5597,const_5596,uop_5611,])
func_5614 = relay.Function([var_5532,var_5562,], output)
mod['func_5614'] = func_5614
mod = relay.transform.InferType()(mod)
mutated_mod['func_5614'] = func_5614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5614_call = mutated_mod.get_global_var('func_5614')
var_5616 = relay.var("var_5616", dtype = "float32", shape = (7, 7))#candidate|5616|(7, 7)|var|float32
var_5617 = relay.var("var_5617", dtype = "uint64", shape = (1144, 1))#candidate|5617|(1144, 1)|var|uint64
call_5615 = func_5614_call(var_5616,var_5617,)
output = call_5615
func_5618 = relay.Function([var_5616,var_5617,], output)
mutated_mod['func_5618'] = func_5618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4595_call = mod.get_global_var('func_4595')
func_4597_call = mutated_mod.get_global_var('func_4597')
call_5623 = relay.TupleGetItem(func_4595_call(), 0)
call_5624 = relay.TupleGetItem(func_4597_call(), 0)
func_1078_call = mod.get_global_var('func_1078')
func_1081_call = mutated_mod.get_global_var('func_1081')
var_5640 = relay.var("var_5640", dtype = "uint32", shape = (1001,))#candidate|5640|(1001,)|var|uint32
call_5639 = func_1078_call(relay.reshape(var_5640.astype('uint32'), [7, 11, 13]), relay.reshape(var_5640.astype('uint32'), [7, 11, 13]), )
call_5641 = func_1078_call(relay.reshape(var_5640.astype('uint32'), [7, 11, 13]), relay.reshape(var_5640.astype('uint32'), [7, 11, 13]), )
func_5295_call = mod.get_global_var('func_5295')
func_5296_call = mutated_mod.get_global_var('func_5296')
call_5643 = func_5295_call()
call_5644 = func_5295_call()
var_5647 = relay.var("var_5647", dtype = "int64", shape = (14, 12, 14))#candidate|5647|(14, 12, 14)|var|int64
bop_5648 = relay.floor_divide(call_5623.astype('float32'), relay.reshape(var_5647.astype('float32'), relay.shape_of(call_5623))) # shape=(14, 12, 14)
bop_5651 = relay.floor_divide(call_5624.astype('float32'), relay.reshape(var_5647.astype('float32'), relay.shape_of(call_5624))) # shape=(14, 12, 14)
output = relay.Tuple([call_5639,var_5640,call_5643,bop_5648,])
output2 = relay.Tuple([call_5641,var_5640,call_5644,bop_5651,])
func_5652 = relay.Function([var_5640,var_5647,], output)
mod['func_5652'] = func_5652
mod = relay.transform.InferType()(mod)
var_5653 = relay.var("var_5653", dtype = "uint32", shape = (1001,))#candidate|5653|(1001,)|var|uint32
var_5654 = relay.var("var_5654", dtype = "int64", shape = (14, 12, 14))#candidate|5654|(14, 12, 14)|var|int64
output = func_5652(var_5653,var_5654,)
func_5655 = relay.Function([var_5653,var_5654,], output)
mutated_mod['func_5655'] = func_5655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3159_call = mod.get_global_var('func_3159')
func_3161_call = mutated_mod.get_global_var('func_3161')
call_5700 = relay.TupleGetItem(func_3159_call(), 0)
call_5701 = relay.TupleGetItem(func_3161_call(), 0)
output = relay.Tuple([call_5700,])
output2 = relay.Tuple([call_5701,])
func_5713 = relay.Function([], output)
mod['func_5713'] = func_5713
mod = relay.transform.InferType()(mod)
output = func_5713()
func_5714 = relay.Function([], output)
mutated_mod['func_5714'] = func_5714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4710_call = mod.get_global_var('func_4710')
func_4711_call = mutated_mod.get_global_var('func_4711')
call_5731 = func_4710_call()
call_5732 = func_4710_call()
output = call_5731
output2 = call_5732
func_5739 = relay.Function([], output)
mod['func_5739'] = func_5739
mod = relay.transform.InferType()(mod)
output = func_5739()
func_5740 = relay.Function([], output)
mutated_mod['func_5740'] = func_5740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5317_call = mod.get_global_var('func_5317')
func_5319_call = mutated_mod.get_global_var('func_5319')
call_5759 = func_5317_call()
call_5760 = func_5317_call()
func_5484_call = mod.get_global_var('func_5484')
func_5487_call = mutated_mod.get_global_var('func_5487')
var_5790 = relay.var("var_5790", dtype = "float32", shape = (72,))#candidate|5790|(72,)|var|float32
call_5789 = relay.TupleGetItem(func_5484_call(relay.reshape(var_5790.astype('float32'), [72,])), 1)
call_5791 = relay.TupleGetItem(func_5487_call(relay.reshape(var_5790.astype('float32'), [72,])), 1)
output = relay.Tuple([call_5759,call_5789,var_5790,])
output2 = relay.Tuple([call_5760,call_5791,var_5790,])
func_5796 = relay.Function([var_5790,], output)
mod['func_5796'] = func_5796
mod = relay.transform.InferType()(mod)
var_5797 = relay.var("var_5797", dtype = "float32", shape = (72,))#candidate|5797|(72,)|var|float32
output = func_5796(var_5797)
func_5798 = relay.Function([var_5797], output)
mutated_mod['func_5798'] = func_5798
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5808 = relay.var("var_5808", dtype = "float32", shape = (4, 2, 9))#candidate|5808|(4, 2, 9)|var|float32
uop_5809 = relay.log(var_5808.astype('float32')) # shape=(4, 2, 9)
uop_5833 = relay.log2(uop_5809.astype('float64')) # shape=(4, 2, 9)
func_3103_call = mod.get_global_var('func_3103')
func_3104_call = mutated_mod.get_global_var('func_3104')
call_5835 = relay.TupleGetItem(func_3103_call(), 0)
call_5836 = relay.TupleGetItem(func_3104_call(), 0)
uop_5837 = relay.cos(uop_5809.astype('float64')) # shape=(4, 2, 9)
output = relay.Tuple([uop_5833,call_5835,uop_5837,])
output2 = relay.Tuple([uop_5833,call_5836,uop_5837,])
func_5848 = relay.Function([var_5808,], output)
mod['func_5848'] = func_5848
mod = relay.transform.InferType()(mod)
var_5849 = relay.var("var_5849", dtype = "float32", shape = (4, 2, 9))#candidate|5849|(4, 2, 9)|var|float32
output = func_5848(var_5849)
func_5850 = relay.Function([var_5849], output)
mutated_mod['func_5850'] = func_5850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2472_call = mod.get_global_var('func_2472')
func_2473_call = mutated_mod.get_global_var('func_2473')
call_5882 = relay.TupleGetItem(func_2472_call(), 0)
call_5883 = relay.TupleGetItem(func_2473_call(), 0)
var_5890 = relay.var("var_5890", dtype = "float32", shape = (14, 12, 14))#candidate|5890|(14, 12, 14)|var|float32
bop_5891 = relay.bitwise_xor(call_5882.astype('int64'), relay.reshape(var_5890.astype('int64'), relay.shape_of(call_5882))) # shape=(14, 12, 14)
bop_5894 = relay.bitwise_xor(call_5883.astype('int64'), relay.reshape(var_5890.astype('int64'), relay.shape_of(call_5883))) # shape=(14, 12, 14)
uop_5911 = relay.asin(call_5882.astype('float64')) # shape=(14, 12, 14)
uop_5913 = relay.asin(call_5883.astype('float64')) # shape=(14, 12, 14)
output = relay.Tuple([bop_5891,uop_5911,])
output2 = relay.Tuple([bop_5894,uop_5913,])
func_5922 = relay.Function([var_5890,], output)
mod['func_5922'] = func_5922
mod = relay.transform.InferType()(mod)
mutated_mod['func_5922'] = func_5922
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5923 = relay.var("var_5923", dtype = "float32", shape = (14, 12, 14))#candidate|5923|(14, 12, 14)|var|float32
func_5922_call = mutated_mod.get_global_var('func_5922')
call_5924 = func_5922_call(var_5923)
output = call_5924
func_5925 = relay.Function([var_5923], output)
mutated_mod['func_5925'] = func_5925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5407_call = mod.get_global_var('func_5407')
func_5408_call = mutated_mod.get_global_var('func_5408')
call_6094 = relay.TupleGetItem(func_5407_call(), 0)
call_6095 = relay.TupleGetItem(func_5408_call(), 0)
func_5922_call = mod.get_global_var('func_5922')
func_5925_call = mutated_mod.get_global_var('func_5925')
call_6109 = relay.TupleGetItem(func_5922_call(relay.reshape(call_6094.astype('float32'), [14, 12, 14])), 1)
call_6110 = relay.TupleGetItem(func_5925_call(relay.reshape(call_6094.astype('float32'), [14, 12, 14])), 1)
func_4182_call = mod.get_global_var('func_4182')
func_4185_call = mutated_mod.get_global_var('func_4185')
var_6129 = relay.var("var_6129", dtype = "float32", shape = (72,))#candidate|6129|(72,)|var|float32
call_6128 = relay.TupleGetItem(func_4182_call(relay.reshape(var_6129.astype('float32'), [72,])), 1)
call_6130 = relay.TupleGetItem(func_4185_call(relay.reshape(var_6129.astype('float32'), [72,])), 1)
func_3851_call = mod.get_global_var('func_3851')
func_3854_call = mutated_mod.get_global_var('func_3854')
var_6133 = relay.var("var_6133", dtype = "uint32", shape = (1001,))#candidate|6133|(1001,)|var|uint32
const_6134 = relay.const([5,-10,-6,-8,-1,-2,10,-10,-9,-1,-7,5,9,-2,-2,-1,-6,10,1,2,8,1,-9,-4,3,-7,6,-4,7,-4,-10,6,4,-7,7,-7,1,-10,-8,9,2,4,7,2,5,-4,1,-8], dtype = "int32")#candidate|6134|(48,)|const|int32
call_6132 = relay.TupleGetItem(func_3851_call(relay.reshape(var_6133.astype('uint32'), [13, 77]), relay.reshape(const_6134.astype('int32'), [48,]), ), 5)
call_6135 = relay.TupleGetItem(func_3854_call(relay.reshape(var_6133.astype('uint32'), [13, 77]), relay.reshape(const_6134.astype('int32'), [48,]), ), 5)
func_5796_call = mod.get_global_var('func_5796')
func_5798_call = mutated_mod.get_global_var('func_5798')
call_6140 = relay.TupleGetItem(func_5796_call(relay.reshape(call_6128.astype('float32'), [72,])), 0)
call_6141 = relay.TupleGetItem(func_5798_call(relay.reshape(call_6128.astype('float32'), [72,])), 0)
func_2845_call = mod.get_global_var('func_2845')
func_2848_call = mutated_mod.get_global_var('func_2848')
const_6201 = relay.const([5.054976,4.991090,6.997741,5.712547,2.050392,-3.252632,-1.013641,0.101443,-2.479675,3.224748,9.512888,0.422586,0.147930,4.870665,6.493075,-3.124191,-3.811005,-0.635793,6.781041,-1.633585,-5.486965,7.853129,-7.336992,7.769657,5.767389,1.559768,6.103815,-7.284282,-6.634930,6.781927,-0.672662,-3.904675,-0.069900,-7.768770,-8.059660,-2.656261,8.420614,8.108890,1.191069,-4.650860,-2.495552,2.798296,-9.962851,-1.628958,2.137415,-8.105508,-6.991494,-4.381853,-5.967372,-8.109849,8.641530,5.115258,-8.681468,-3.130142,2.622200,1.451281,5.007420,-4.352478,-1.757674,-9.252983,-5.885637,3.545222,6.281846,1.811169,-9.156400,9.008600,4.338554,-2.538832,6.279805,4.175389,3.689981,-5.554024,8.106256,-4.921934,-4.446907,7.285682,-4.120736,2.576152,-1.628140,4.985402,-4.965836,8.327672,7.986737,7.793237,-3.980642,-5.048133,5.122724,-6.714128,4.485828,5.176446,7.507146,-2.898468,2.838953,-3.156243,2.650874,3.962668,-1.275793,3.627484,-0.492668,-3.417423,1.937049,4.310504,-9.182915,9.262376,-2.885689,6.643308,7.518635,8.799804,1.525151,-8.101782,3.603990,-0.277988,-1.282043,-1.527502,-2.534760,-3.425431,0.018399,8.631773,4.397698,3.365324,4.580515,-4.964989,-5.542346,8.214523,0.078664,-3.310110,6.736038,-8.806068,-9.674634,5.473060,8.860964,-1.171019,1.912169,-9.918891,-0.768492,-0.896609,-7.054460,-5.164358,4.897061,-8.392476,-8.842134,8.953323,0.733863,7.379060,-9.100170,5.557811,-8.889629,-3.549711,8.715168,3.771164,-1.191829,7.776725,-3.185522,-8.277362,3.553987,-9.604213,1.781020,-0.968859,7.153715,2.465409,-4.340258,1.553042,-3.985548,-7.582280,1.282236,-6.164943,4.677628,-0.260563,4.121966,2.422237,-5.163148,-3.888287,-8.113728,-5.353327,0.413111,3.604216,-3.534654,-1.652685,3.244853,-0.738166,-7.120506,-5.261373,-2.699546,6.370441,1.589089,2.996717,-7.946448,-5.624326,-0.275190,-6.312130,-0.304852,5.022303,7.014651,2.401343,-9.325177,3.971136,-8.317959,-4.459923,-4.758619,0.018237,9.274840,6.757715,-9.994632,-0.448374,2.239920,-5.081113,-6.823531,-5.309970,-4.582381,-5.620801,-1.071242,2.268293,-6.615295,2.088680,-2.475119,-8.234842,5.439418,6.624448,4.765865,-7.956290,7.751451,-7.502778,-4.614123,1.146637,9.983833,1.719151,1.537643,-4.700682,2.448731,-8.501424,-0.618654,7.630266,5.143705,-0.601042,-8.512225,2.108561,0.163379,2.387949,-6.319131,-9.451953,3.063537,8.889916,0.522548,-6.396982,-0.406267,-2.502857,6.060249,-3.572064,-7.207333,-1.405356,-0.366586,-1.746270,9.851398,0.628027,-3.577976,3.431452,-4.427870,-1.146696,1.993594,-1.042287,-3.152224,-1.702816,-2.803052,-2.683240,3.857984,3.519956,-1.189209,-4.897452,0.135150,1.080464,1.110559,5.182805,-0.403860], dtype = "float32")#candidate|6201|(273,)|const|float32
call_6200 = relay.TupleGetItem(func_2845_call(relay.reshape(const_6201.astype('float32'), [13, 7, 3])), 0)
call_6202 = relay.TupleGetItem(func_2848_call(relay.reshape(const_6201.astype('float32'), [13, 7, 3])), 0)
func_5290_call = mod.get_global_var('func_5290')
func_5292_call = mutated_mod.get_global_var('func_5292')
call_6206 = func_5290_call()
call_6207 = func_5290_call()
func_2054_call = mod.get_global_var('func_2054')
func_2056_call = mutated_mod.get_global_var('func_2056')
call_6218 = func_2054_call()
call_6219 = func_2054_call()
output = relay.Tuple([call_6094,call_6109,call_6128,var_6129,call_6132,var_6133,const_6134,call_6140,call_6200,const_6201,call_6206,call_6218,])
output2 = relay.Tuple([call_6095,call_6110,call_6130,var_6129,call_6135,var_6133,const_6134,call_6141,call_6202,const_6201,call_6207,call_6219,])
func_6220 = relay.Function([var_6129,var_6133,], output)
mod['func_6220'] = func_6220
mod = relay.transform.InferType()(mod)
mutated_mod['func_6220'] = func_6220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6220_call = mutated_mod.get_global_var('func_6220')
var_6222 = relay.var("var_6222", dtype = "float32", shape = (72,))#candidate|6222|(72,)|var|float32
var_6223 = relay.var("var_6223", dtype = "uint32", shape = (1001,))#candidate|6223|(1001,)|var|uint32
call_6221 = func_6220_call(var_6222,var_6223,)
output = call_6221
func_6224 = relay.Function([var_6222,var_6223,], output)
mutated_mod['func_6224'] = func_6224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3012_call = mod.get_global_var('func_3012')
func_3014_call = mutated_mod.get_global_var('func_3014')
call_6242 = func_3012_call()
call_6243 = func_3012_call()
func_5138_call = mod.get_global_var('func_5138')
func_5140_call = mutated_mod.get_global_var('func_5140')
call_6249 = relay.TupleGetItem(func_5138_call(), 0)
call_6250 = relay.TupleGetItem(func_5140_call(), 0)
output = relay.Tuple([call_6242,call_6249,])
output2 = relay.Tuple([call_6243,call_6250,])
func_6261 = relay.Function([], output)
mod['func_6261'] = func_6261
mod = relay.transform.InferType()(mod)
output = func_6261()
func_6262 = relay.Function([], output)
mutated_mod['func_6262'] = func_6262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4342_call = mod.get_global_var('func_4342')
func_4343_call = mutated_mod.get_global_var('func_4343')
call_6313 = relay.TupleGetItem(func_4342_call(), 0)
call_6314 = relay.TupleGetItem(func_4343_call(), 0)
func_4668_call = mod.get_global_var('func_4668')
func_4670_call = mutated_mod.get_global_var('func_4670')
var_6318 = relay.var("var_6318", dtype = "float32", shape = (2352,))#candidate|6318|(2352,)|var|float32
call_6317 = relay.TupleGetItem(func_4668_call(relay.reshape(var_6318.astype('float32'), [14, 12, 14])), 0)
call_6319 = relay.TupleGetItem(func_4670_call(relay.reshape(var_6318.astype('float32'), [14, 12, 14])), 0)
func_4258_call = mod.get_global_var('func_4258')
func_4259_call = mutated_mod.get_global_var('func_4259')
call_6331 = relay.TupleGetItem(func_4258_call(), 1)
call_6332 = relay.TupleGetItem(func_4259_call(), 1)
func_2536_call = mod.get_global_var('func_2536')
func_2538_call = mutated_mod.get_global_var('func_2538')
const_6339 = relay.const([[0.107146,-1.884168,4.566200,-9.493446,-3.440171,1.635724,-9.182674,1.332076,-0.646101,2.474319,-2.532081,-0.607792,8.679827,7.120423,0.129552,5.658450,2.997325,2.455341,-1.601154,9.748610,6.845912,-1.958007,-8.076472,3.237219,-1.631184,-9.734483,-1.983599,6.249829,6.133009,7.705557,1.138547,5.419659]], dtype = "float64")#candidate|6339|(1, 32)|const|float64
call_6338 = func_2536_call(relay.reshape(const_6339.astype('float64'), [4, 2, 4]))
call_6340 = func_2536_call(relay.reshape(const_6339.astype('float64'), [4, 2, 4]))
func_4778_call = mod.get_global_var('func_4778')
func_4782_call = mutated_mod.get_global_var('func_4782')
var_6342 = relay.var("var_6342", dtype = "float64", shape = (294,))#candidate|6342|(294,)|var|float64
const_6343 = relay.const([-1.804778,-3.012859,-9.549363,-8.088761,-7.744122,-5.749820,5.691565,5.650934,-9.686668,-8.764651,2.699961,3.263110,0.243176,-9.343888,5.371903,-4.661662,2.340607,-9.100317,-8.569165,8.474620,8.929541,-2.197849,-2.668030,-2.270505,3.572549,-4.457005,6.598571,-4.178195,7.920270,8.123192,-8.474511,7.761908,2.273994,8.080315,-6.611899,-4.399041,-3.665298,-2.040543,-6.015057,7.243908,2.081526,-2.662066,5.930780,-8.856938,8.994992,3.070473,6.491947,-4.234822,4.445746,0.744493,-1.892981,7.016490,-2.044235,1.772366,-9.695840,-1.381982,-0.312634,-4.881742,1.763356,3.704212,2.711076,-3.469434,0.506231,8.468319,-1.301376,-7.344904,-6.664661,5.408307,-9.029161,-3.996576,-0.439680,-8.657378,5.409413,-6.397210,0.537807,-5.099482,2.350190,-3.707325,7.888689,3.197277,-7.851373,-5.595933,8.331597,3.778327], dtype = "float64")#candidate|6343|(84,)|const|float64
call_6341 = relay.TupleGetItem(func_4778_call(relay.reshape(var_6318.astype('float32'), [14, 12, 14]), relay.reshape(var_6342.astype('float64'), [294,]), relay.reshape(const_6343.astype('float64'), [84,]), ), 2)
call_6344 = relay.TupleGetItem(func_4782_call(relay.reshape(var_6318.astype('float32'), [14, 12, 14]), relay.reshape(var_6342.astype('float64'), [294,]), relay.reshape(const_6343.astype('float64'), [84,]), ), 2)
func_2375_call = mod.get_global_var('func_2375')
func_2377_call = mutated_mod.get_global_var('func_2377')
call_6345 = relay.TupleGetItem(func_2375_call(), 0)
call_6346 = relay.TupleGetItem(func_2377_call(), 0)
output = relay.Tuple([call_6313,call_6317,var_6318,call_6331,call_6338,const_6339,call_6341,var_6342,const_6343,call_6345,])
output2 = relay.Tuple([call_6314,call_6319,var_6318,call_6332,call_6340,const_6339,call_6344,var_6342,const_6343,call_6346,])
func_6351 = relay.Function([var_6318,var_6342,], output)
mod['func_6351'] = func_6351
mod = relay.transform.InferType()(mod)
mutated_mod['func_6351'] = func_6351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6351_call = mutated_mod.get_global_var('func_6351')
var_6353 = relay.var("var_6353", dtype = "float32", shape = (2352,))#candidate|6353|(2352,)|var|float32
var_6354 = relay.var("var_6354", dtype = "float64", shape = (294,))#candidate|6354|(294,)|var|float64
call_6352 = func_6351_call(var_6353,var_6354,)
output = call_6352
func_6355 = relay.Function([var_6353,var_6354,], output)
mutated_mod['func_6355'] = func_6355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6261_call = mod.get_global_var('func_6261')
func_6262_call = mutated_mod.get_global_var('func_6262')
call_6448 = relay.TupleGetItem(func_6261_call(), 1)
call_6449 = relay.TupleGetItem(func_6262_call(), 1)
uop_6458 = relay.log2(call_6448.astype('float32')) # shape=(5, 7, 9)
uop_6460 = relay.log2(call_6449.astype('float32')) # shape=(5, 7, 9)
func_2375_call = mod.get_global_var('func_2375')
func_2377_call = mutated_mod.get_global_var('func_2377')
call_6475 = relay.TupleGetItem(func_2375_call(), 0)
call_6476 = relay.TupleGetItem(func_2377_call(), 0)
uop_6502 = relay.asin(uop_6458.astype('float64')) # shape=(5, 7, 9)
uop_6504 = relay.asin(uop_6460.astype('float64')) # shape=(5, 7, 9)
output = relay.Tuple([call_6475,uop_6502,])
output2 = relay.Tuple([call_6476,uop_6504,])
func_6505 = relay.Function([], output)
mod['func_6505'] = func_6505
mod = relay.transform.InferType()(mod)
output = func_6505()
func_6506 = relay.Function([], output)
mutated_mod['func_6506'] = func_6506
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6516 = relay.var("var_6516", dtype = "float64", shape = (6, 12, 9))#candidate|6516|(6, 12, 9)|var|float64
uop_6517 = relay.atan(var_6516.astype('float64')) # shape=(6, 12, 9)
func_950_call = mod.get_global_var('func_950')
func_952_call = mutated_mod.get_global_var('func_952')
var_6530 = relay.var("var_6530", dtype = "uint64", shape = (1144,))#candidate|6530|(1144,)|var|uint64
call_6529 = relay.TupleGetItem(func_950_call(relay.reshape(var_6530.astype('uint64'), [13, 8, 11])), 0)
call_6531 = relay.TupleGetItem(func_952_call(relay.reshape(var_6530.astype('uint64'), [13, 8, 11])), 0)
uop_6532 = relay.sin(uop_6517.astype('float64')) # shape=(6, 12, 9)
func_1979_call = mod.get_global_var('func_1979')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_6535 = func_1979_call()
call_6536 = func_1979_call()
const_6537 = relay.const([[[3.787294,-4.909620,1.306733,-2.813688,-3.262428,-4.484991,8.104262,5.448834,3.190373],[-6.846943,-7.211235,3.296246,-4.287016,5.731650,4.495433,-2.106032,-5.146674,6.181119],[-5.207481,-5.092361,4.752242,7.192096,2.583907,0.938918,-2.569038,-7.974522,3.710153],[3.195668,0.617191,2.628494,8.480802,6.223275,-5.168758,-1.919165,-2.560153,-2.322264],[4.723641,8.373960,-5.273224,9.186261,-7.864929,-2.025440,0.769447,6.880719,-1.848034],[4.790357,9.335108,1.763483,9.112534,-4.873066,-4.615675,6.569113,-4.566876,2.273611],[-1.110146,1.755247,-0.400861,-3.166912,-0.100510,-6.551011,-8.097622,-3.248064,9.650050],[-5.632876,9.523161,-7.635940,9.539871,-7.031635,-5.306113,-5.233043,-7.176656,-5.177902],[4.604901,6.127610,-1.910671,-5.653156,6.512002,-4.794556,3.257300,-0.971496,2.812065],[-3.522295,-5.321488,8.187219,-2.188385,0.486129,4.843088,-5.872385,-6.707009,-4.222687],[0.155516,-6.294667,-3.569408,0.250736,8.113030,-1.097853,2.307506,6.943703,9.093159],[-8.511041,-7.120338,8.726137,0.506586,4.457239,4.433914,4.482918,-7.359829,3.249369]],[[-1.901547,-2.623401,-9.973819,2.482338,-8.853538,-3.891247,6.046843,3.377378,-3.079981],[6.784261,-6.011452,-8.946072,7.405067,3.115440,0.789816,-6.817027,0.965655,7.174902],[6.114656,2.410542,8.820006,-9.234526,5.855753,-1.006256,-3.945713,4.205305,-4.030733],[-6.360527,4.920036,-1.121333,-9.072349,7.827063,2.540996,-4.876951,7.574851,-6.814365],[7.336189,2.071663,3.953489,-2.547990,4.082971,-1.984899,7.294803,8.851237,-1.139427],[5.379535,-3.240751,1.439517,6.636561,0.008866,8.382195,2.635600,-6.305057,6.571400],[0.505497,7.423065,-0.674241,-4.328266,-9.725609,-0.793556,3.754904,3.099053,-9.746115],[-5.876423,-6.412184,-3.659149,7.803344,-2.319458,-8.885300,4.078328,-2.072336,2.790830],[5.660282,-9.075137,1.686739,-7.612841,7.263790,9.683560,-2.822995,1.205750,7.159959],[1.649034,-1.003375,-1.025367,7.869823,-5.551819,-9.170299,-4.138507,5.210285,6.002507],[-3.344703,-7.244790,5.391097,7.144394,9.262085,2.653458,4.695554,5.754366,-3.858378],[-5.644629,-3.855855,6.839782,-5.676773,-8.696473,1.852832,4.715671,4.525336,9.312380]],[[5.499713,0.759946,2.792848,4.884446,3.569082,-5.760402,-5.361334,2.264708,1.586113],[4.491352,5.327464,-1.367706,2.168223,-5.656304,3.793107,4.665633,-4.128973,4.996485],[5.361357,-3.925883,0.679018,1.981749,-6.923014,-0.365153,8.382805,0.613647,1.700730],[5.195645,5.958892,-0.820576,9.669464,0.757056,-6.550889,-3.462850,7.540283,-1.796624],[4.497303,-0.387148,-3.533187,-9.626116,-9.276620,-1.140189,4.903816,-5.238036,9.369521],[5.218079,2.273222,2.412373,9.567576,6.804297,-9.354381,9.794043,1.745607,6.048949],[2.562528,-0.874898,-3.827836,6.579167,-2.605050,-1.790151,-9.737945,2.678884,6.442079],[1.262404,-0.302556,4.487344,-2.634494,-9.219140,8.481331,-7.046442,5.409061,-2.826736],[9.989742,6.259020,-0.084257,-2.362769,2.350120,-1.261510,-5.969552,8.545443,-7.958680],[5.403876,-5.299631,8.145258,-2.634781,-2.637816,-4.301643,6.374014,-2.939026,7.088485],[-8.679439,-0.948950,3.601097,-5.723468,-8.084225,-4.690393,2.600192,-1.956383,-2.561040],[7.300847,5.743282,-9.678381,-8.035856,9.663400,0.949923,2.386853,-5.716340,8.539520]],[[-2.511499,8.169491,-8.871106,-1.948492,-3.093133,7.805426,-6.800860,4.383893,-3.292503],[9.370110,0.369299,6.055053,9.413040,-9.037222,-9.888378,-2.949878,-8.583690,-3.892456],[0.729262,-1.944795,2.432311,-3.641562,-0.179986,3.802529,-7.352774,3.695286,4.734322],[-6.255998,-7.343159,6.880395,-7.530854,8.086435,0.279621,8.353678,-7.956178,-7.788056],[3.940947,6.768653,-5.868508,-9.230413,8.704948,-8.006980,9.782701,-6.815894,-2.437793],[-3.332450,0.550515,8.770855,3.782513,9.059446,-2.400882,0.508565,3.910461,2.903469],[9.022385,-3.269931,2.748993,-5.464144,0.293117,-4.961856,-5.433665,-4.776344,6.234582],[-5.086763,5.986858,-7.120495,-3.884700,0.267133,4.290623,5.427570,4.404228,7.805644],[2.242973,3.902375,-3.065042,-1.250862,-0.402349,-7.715163,-2.494727,8.163176,0.097799],[9.327931,1.996908,9.338090,4.605081,-2.894471,-7.148314,1.459106,8.901412,-2.585161],[7.758162,-1.782299,0.742126,1.223256,1.186128,5.413357,-9.661508,-7.756476,-6.836814],[-9.960931,2.853795,-0.364890,9.095948,0.519076,-0.043133,-3.607736,-3.779296,9.733640]],[[-9.056980,4.244771,1.130279,-0.189592,4.070089,-2.918037,-2.382251,2.409351,9.391114],[5.540297,9.415672,7.105920,-0.948135,4.342502,-1.922143,-2.729315,5.409218,-7.976788],[0.595704,3.746073,-9.609527,-3.206414,-9.560311,-9.791941,5.818628,-0.923020,-9.742699],[-0.280925,-8.346168,1.831288,-1.237625,7.210051,3.272156,8.292548,-4.458533,1.600872],[-7.615234,9.664559,9.062637,-1.012515,9.491120,9.828625,-6.155278,-6.423689,-6.149950],[3.664141,8.289613,-6.685312,-2.391586,8.591068,-3.965840,8.365721,-2.923576,-2.724187],[-8.919013,-4.089205,0.090264,3.963054,2.034122,-6.671983,1.030570,1.496702,-9.794184],[5.909530,5.291719,4.702768,8.666311,-2.001935,1.229605,8.586204,7.002553,3.630358],[-4.991481,-4.752234,-2.166463,5.524001,-1.406825,8.292284,-9.135139,5.178629,1.260483],[-1.860171,-8.805857,1.584750,3.498997,0.936314,-5.179918,9.018030,-2.786526,5.219751],[6.362417,-9.285373,2.590895,-9.794836,8.750898,4.857313,2.388346,9.382929,-9.020859],[7.938583,-0.373635,-7.139910,-5.802352,0.506961,1.853247,4.258897,8.612867,-5.685044]],[[2.437051,-9.207604,-6.541225,-4.349893,6.671453,5.086383,-2.645966,6.990653,-6.513739],[6.176103,-5.862435,7.681322,5.050614,-1.341566,-7.690820,0.692732,8.149750,-5.508356],[1.288450,1.480604,2.144389,-1.278529,-7.974581,-1.834848,3.940711,9.623558,-7.364214],[7.604781,5.646219,-8.942559,-6.562714,-0.246644,7.680005,-3.168356,7.826535,-0.097618],[-7.251767,-5.496756,-5.406743,3.647657,-5.583833,4.373619,2.949221,0.779368,-9.598658],[2.334933,5.567121,1.416640,-2.086481,-3.417790,7.091059,-1.876127,3.376637,-4.246820],[3.208708,-4.081566,-5.539117,-8.826190,-9.687942,4.539291,4.955735,-7.606158,-3.536159],[-7.838784,4.296058,-6.014324,5.134591,-6.074881,3.787950,-1.570831,2.093864,-7.635422],[2.784272,3.228422,-8.935396,-1.554242,2.330307,3.400327,-0.588011,2.007581,-1.941060],[2.818351,-4.904906,-6.336649,-2.821779,9.506660,7.589629,-6.878005,-7.203919,8.563073],[-7.262317,8.873811,-7.017842,8.604841,-1.684718,-4.546878,-8.569752,-2.784536,0.948825],[-4.608262,1.225280,0.383950,3.711902,6.695291,-0.108889,3.289139,8.355111,-2.495300]]], dtype = "float64")#candidate|6537|(6, 12, 9)|const|float64
bop_6538 = relay.minimum(uop_6532.astype('int32'), relay.reshape(const_6537.astype('int32'), relay.shape_of(uop_6532))) # shape=(6, 12, 9)
output = relay.Tuple([call_6529,var_6530,call_6535,bop_6538,])
output2 = relay.Tuple([call_6531,var_6530,call_6536,bop_6538,])
func_6541 = relay.Function([var_6516,var_6530,], output)
mod['func_6541'] = func_6541
mod = relay.transform.InferType()(mod)
var_6542 = relay.var("var_6542", dtype = "float64", shape = (6, 12, 9))#candidate|6542|(6, 12, 9)|var|float64
var_6543 = relay.var("var_6543", dtype = "uint64", shape = (1144,))#candidate|6543|(1144,)|var|uint64
output = func_6541(var_6542,var_6543,)
func_6544 = relay.Function([var_6542,var_6543,], output)
mutated_mod['func_6544'] = func_6544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2472_call = mod.get_global_var('func_2472')
func_2473_call = mutated_mod.get_global_var('func_2473')
call_6589 = relay.TupleGetItem(func_2472_call(), 0)
call_6590 = relay.TupleGetItem(func_2473_call(), 0)
output = call_6589
output2 = call_6590
func_6603 = relay.Function([], output)
mod['func_6603'] = func_6603
mod = relay.transform.InferType()(mod)
mutated_mod['func_6603'] = func_6603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6603_call = mutated_mod.get_global_var('func_6603')
call_6604 = func_6603_call()
output = call_6604
func_6605 = relay.Function([], output)
mutated_mod['func_6605'] = func_6605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_6613 = relay.TupleGetItem(func_1856_call(), 0)
call_6614 = relay.TupleGetItem(func_1857_call(), 0)
func_4668_call = mod.get_global_var('func_4668')
func_4670_call = mutated_mod.get_global_var('func_4670')
call_6622 = relay.TupleGetItem(func_4668_call(relay.reshape(call_6613.astype('float32'), [14, 12, 14])), 1)
call_6623 = relay.TupleGetItem(func_4670_call(relay.reshape(call_6613.astype('float32'), [14, 12, 14])), 1)
output = relay.Tuple([call_6613,call_6622,])
output2 = relay.Tuple([call_6614,call_6623,])
func_6631 = relay.Function([], output)
mod['func_6631'] = func_6631
mod = relay.transform.InferType()(mod)
mutated_mod['func_6631'] = func_6631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6631_call = mutated_mod.get_global_var('func_6631')
call_6632 = func_6631_call()
output = call_6632
func_6633 = relay.Function([], output)
mutated_mod['func_6633'] = func_6633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4258_call = mod.get_global_var('func_4258')
func_4259_call = mutated_mod.get_global_var('func_4259')
call_6634 = relay.TupleGetItem(func_4258_call(), 0)
call_6635 = relay.TupleGetItem(func_4259_call(), 0)
uop_6637 = relay.acosh(call_6634.astype('float64')) # shape=(14, 12, 14)
uop_6639 = relay.acosh(call_6635.astype('float64')) # shape=(14, 12, 14)
uop_6654 = relay.log(call_6634.astype('float32')) # shape=(14, 12, 14)
uop_6656 = relay.log(call_6635.astype('float32')) # shape=(14, 12, 14)
output = relay.Tuple([uop_6637,uop_6654,])
output2 = relay.Tuple([uop_6639,uop_6656,])
func_6667 = relay.Function([], output)
mod['func_6667'] = func_6667
mod = relay.transform.InferType()(mod)
output = func_6667()
func_6668 = relay.Function([], output)
mutated_mod['func_6668'] = func_6668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_6674 = relay.TupleGetItem(func_1856_call(), 0)
call_6675 = relay.TupleGetItem(func_1857_call(), 0)
func_5052_call = mod.get_global_var('func_5052')
func_5053_call = mutated_mod.get_global_var('func_5053')
call_6682 = relay.TupleGetItem(func_5052_call(), 1)
call_6683 = relay.TupleGetItem(func_5053_call(), 1)
output = relay.Tuple([call_6674,call_6682,])
output2 = relay.Tuple([call_6675,call_6683,])
func_6686 = relay.Function([], output)
mod['func_6686'] = func_6686
mod = relay.transform.InferType()(mod)
mutated_mod['func_6686'] = func_6686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6686_call = mutated_mod.get_global_var('func_6686')
call_6687 = func_6686_call()
output = call_6687
func_6688 = relay.Function([], output)
mutated_mod['func_6688'] = func_6688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5407_call = mod.get_global_var('func_5407')
func_5408_call = mutated_mod.get_global_var('func_5408')
call_6723 = relay.TupleGetItem(func_5407_call(), 0)
call_6724 = relay.TupleGetItem(func_5408_call(), 0)
output = call_6723
output2 = call_6724
func_6729 = relay.Function([], output)
mod['func_6729'] = func_6729
mod = relay.transform.InferType()(mod)
output = func_6729()
func_6730 = relay.Function([], output)
mutated_mod['func_6730'] = func_6730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
call_6777 = func_1598_call()
call_6778 = func_1598_call()
func_950_call = mod.get_global_var('func_950')
func_952_call = mutated_mod.get_global_var('func_952')
var_6799 = relay.var("var_6799", dtype = "uint64", shape = (1144,))#candidate|6799|(1144,)|var|uint64
call_6798 = relay.TupleGetItem(func_950_call(relay.reshape(var_6799.astype('uint64'), [13, 8, 11])), 0)
call_6800 = relay.TupleGetItem(func_952_call(relay.reshape(var_6799.astype('uint64'), [13, 8, 11])), 0)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_6813 = relay.TupleGetItem(func_4323_call(), 0)
call_6814 = relay.TupleGetItem(func_4325_call(), 0)
uop_6823 = relay.acos(call_6798.astype('float64')) # shape=(13, 8, 11)
uop_6825 = relay.acos(call_6800.astype('float64')) # shape=(13, 8, 11)
output = relay.Tuple([call_6777,var_6799,call_6813,uop_6823,])
output2 = relay.Tuple([call_6778,var_6799,call_6814,uop_6825,])
F = relay.Function([var_6799,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6799,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

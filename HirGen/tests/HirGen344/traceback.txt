==========mod==========
#[version = "0.0.5"]
def @func_357(%var_326: Tensor[(4, 13, 3), float32], %var_327: Tensor[(4, 13, 3), float32]) -> (Tensor[(4, 13, 3), float32],) {
  %0 = cast(%var_327, dtype="float32") /* ty=Tensor[(4, 13, 3), float32] */;
  %1 = shape_of(%var_326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_326, dtype="float32") /* ty=Tensor[(4, 13, 3), float32] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %4 = floor_divide(%2, %3) /* ty=Tensor[(4, 13, 3), float32] */;
  (%4,)
}

def @func_5764(%var_5749: Tensor[(2, 16, 14), uint16], %var_5750: Tensor[(2, 16, 14), uint16]) -> (Tensor[(2, 16, 14), uint16],) {
  %5 = cast(%var_5750, dtype="uint16") /* ty=Tensor[(2, 16, 14), uint16] */;
  %6 = shape_of(%var_5749, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%var_5749, dtype="uint16") /* ty=Tensor[(2, 16, 14), uint16] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %9 = left_shift(%7, %8) /* ty=Tensor[(2, 16, 14), uint16] */;
  (%9,)
}

def @func_1398(%var_1376: Tensor[(15, 14, 9), float32]) -> (Tensor[(15, 14, 9), float64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(4, 13, 3), float32], Tensor[(39, 4), float32]) {
  %10 = cast(%var_1376, dtype="float32") /* ty=Tensor[(15, 14, 9), float32] */;
  %11 = cosh(%10) /* ty=Tensor[(15, 14, 9), float32] */;
  %12 = cast(%11, dtype="float64") /* ty=Tensor[(15, 14, 9), float64] */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(65), float64] */, dtype="float64") /* ty=Tensor[(65), float64] */;
  %14 = reshape(%13, newshape=[1, 5, 13]) /* ty=Tensor[(1, 5, 13), float64] */;
  %15 = @func_972(%14) /* ty=(Tensor[(1, 5, 13), float64],) */;
  %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(39, 4), float32] */, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(39, 4), float32] */, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %18 = reshape(%16, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %19 = reshape(%17, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %20 = @func_357(%18, %19) /* ty=(Tensor[(4, 13, 3), float32],) */;
  %21 = tan(%12) /* ty=Tensor[(15, 14, 9), float64] */;
  %22 = %15.0;
  %23 = %20.0;
  (%21, %22, meta[relay.Constant][0] /* ty=Tensor[(65), float64] */, %23, meta[relay.Constant][1] /* ty=Tensor[(39, 4), float32] */)
}

def @func_4254(%var_4245: Tensor[(16, 15), uint64], %var_4246: Tensor[(16, 15), uint64]) -> (Tensor[(16, 15), uint64],) {
  %24 = cast(%var_4246, dtype="uint64") /* ty=Tensor[(16, 15), uint64] */;
  %25 = shape_of(%var_4245, dtype="int32") /* ty=Tensor[(2), int32] */;
  %26 = cast(%var_4245, dtype="uint64") /* ty=Tensor[(16, 15), uint64] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %28 = right_shift(%26, %27) /* ty=Tensor[(16, 15), uint64] */;
  (%28,)
}

def @func_4611(%var_4608: Tensor[(156), float32]) -> (Tensor[(11, ?, 9), int8], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) {
  %29 = cast(%var_4608, dtype="float32") /* ty=Tensor[(156), float32] */;
  %30 = cast(%var_4608, dtype="float32") /* ty=Tensor[(156), float32] */;
  %31 = reshape(%29, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %32 = reshape(%30, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %33 = @func_357(%31, %32) /* ty=(Tensor[(4, 13, 3), float32],) */;
  %34 = @func_3436() /* ty=Tensor[(11, ?, 9), int8] */;
  %35 = %33.0;
  (%34, %35, %var_4608)
}

def @func_6618(%var_6559: Tensor[(182), bool], %var_6574: Tensor[(144), float64], %var_6598: Tensor[(1300), int16]) -> (Tensor[(14, 3, 11), int16], Tensor[(5, 13, 14), bool], Tensor[(182), bool], Tensor[(910), bool], Tensor[(6, 8, 3), float64], Tensor[(144), float64], Tensor[(15, 8), float64], Tensor[(462), float32], Tensor[(1300), int16]) {
  %36 = cast(%var_6559, dtype="bool") /* ty=Tensor[(182), bool] */;
  %37 = cast(meta[relay.Constant][2] /* ty=Tensor[(910), bool] */, dtype="bool") /* ty=Tensor[(910), bool] */;
  %38 = reshape(%36, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), bool] */;
  %39 = reshape(%37, newshape=[5, 13, 14]) /* ty=Tensor[(5, 13, 14), bool] */;
  %40 = @func_660(%38, %39) /* ty=(Tensor[(5, 13, 14), bool], Tensor[(5, 13, 14), float32]) */;
  %41 = cast(%var_6574, dtype="float64") /* ty=Tensor[(144), float64] */;
  %42 = reshape(%41, newshape=[6, 8, 3]) /* ty=Tensor[(6, 8, 3), float64] */;
  %43 = @func_4297(%42) /* ty=(Tensor[(6, 8, 3), float64],) */;
  %44 = cast(%var_6598, dtype="int16") /* ty=Tensor[(1300), int16] */;
  %45 = @func_5241() /* ty=Tensor[(14, 3, 11), int16] */;
  %46 = cast(%45, dtype="float32") /* ty=Tensor[(14, 3, 11), float32] */;
  %47 = reshape(%44, newshape=[13, 10, 10]) /* ty=Tensor[(13, 10, 10), int16] */;
  %48 = reshape(%46, newshape=[462]) /* ty=Tensor[(462), float32] */;
  %49 = @func_2062(%47, %48) /* ty=(Tensor[(13, 10, 10), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) */;
  %50 = %40.0;
  %51 = %43.0;
  %52 = @func_5478() /* ty=Tensor[(15, 8), float64] */;
  %53 = %49.2;
  (%45, %50, %var_6559, meta[relay.Constant][2] /* ty=Tensor[(910), bool] */, %51, %var_6574, %52, %53, %var_6598)
}

def @func_3426() -> (Tensor[(1, 16, 1890), float64], Tensor[(99, 1), int8], Tensor[(99), int8]) {
  %54 = @func_1927() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %55 = cast(meta[relay.Constant][3] /* ty=Tensor[(99), int8] */, dtype="int8") /* ty=Tensor[(99), int8] */;
  %56 = reshape(%55, newshape=[99, 1]) /* ty=Tensor[(99, 1), int8] */;
  %57 = @func_3241(%56) /* ty=(Tensor[(1, 5, 13), float64], Tensor[(99, 1), int8], Tensor[(39, 4), float32], Tensor[(39, 4), float64]) */;
  %58 = %54.0;
  %59 = %57.1;
  (%58, %59, meta[relay.Constant][3] /* ty=Tensor[(99), int8] */)
}

def @func_1064(%var_1058: Tensor[(11, 1, 9), int8], %var_1059: Tensor[(11, 1, 9), int8]) -> Tensor[(11, ?, 9), int8] {
  %60 = cast(%var_1059, dtype="int8") /* ty=Tensor[(11, 1, 9), int8] */;
  %61 = shape_of(%var_1058, dtype="int32") /* ty=Tensor[(3), int32] */;
  %62 = cast(%var_1058, dtype="int8") /* ty=Tensor[(11, 1, 9), int8] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%62, %63) /* ty=Tensor[(11, ?, 9), int8] */
}

def @func_4496() -> (Tensor[(11, ?, 9), int8],) {
  %64 = @func_2192() /* ty=(Tensor[(11, ?, 9), int8], Tensor[(11, ?, 9), int8]) */;
  %65 = %64.0;
  (%65,)
}

def @func_4670(%var_4648: Tensor[(5, 8, 7), float32]) -> (Tensor[(5, 8, 7), float32], Tensor[(39, 4), float32], Tensor[(4, 13, 3), float32]) {
  %66 = cast(%var_4648, dtype="float32") /* ty=Tensor[(5, 8, 7), float32] */;
  %67 = @func_1866() /* ty=(Tensor[(39, 4), float32],) */;
  %68 = %67.0;
  %69 = cast(%68, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %70 = cast(%68, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %71 = reshape(%69, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %72 = reshape(%70, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %73 = @func_357(%71, %72) /* ty=(Tensor[(4, 13, 3), float32],) */;
  %74 = atanh(%66) /* ty=Tensor[(5, 8, 7), float32] */;
  %75 = %73.0;
  (%74, %68, %75)
}

def @func_5059() -> (Tensor[(11, ?, 9), int8],) {
  %76 = @func_3436() /* ty=Tensor[(11, ?, 9), int8] */;
  (%76,)
}

def @func_5182() -> (Tensor[(99), int8],) {
  %77 = @func_3426() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(99, 1), int8], Tensor[(99), int8]) */;
  %78 = %77.2;
  (%78,)
}

def @func_5384(%var_5369: Tensor[(1, 1, 16), uint32]) -> (Tensor[(1, 1, 16), uint32], Tensor[(11, ?, 9), int8], Tensor[(4, 13, 3), float32], Tensor[(1200), float32]) {
  %79 = cast(meta[relay.Constant][4] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %80 = cast(%var_5369, dtype="uint32") /* ty=Tensor[(1, 1, 16), uint32] */;
  %81 = cast(meta[relay.Constant][5] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %82 = reshape(%81, newshape=[16, 15, 5]) /* ty=Tensor[(16, 15, 5), float32] */;
  %83 = @func_626(%82) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(156), float32], Tensor[(4, 13, 3), float32], Tensor[(16, 15, 5), bool]) */;
  %84 = right_shift(%79, %80) /* ty=Tensor[(1, 1, 16), uint32] */;
  %85 = @func_3436() /* ty=Tensor[(11, ?, 9), int8] */;
  %86 = %83.2;
  (%84, %85, %86, meta[relay.Constant][5] /* ty=Tensor[(1200), float32] */)
}

def @func_2192() -> (Tensor[(11, ?, 9), int8], Tensor[(11, ?, 9), int8]) {
  %87 = @func_1905() /* ty=(Tensor[(39, 4), float32], Tensor[(11, ?, 9), int8], Tensor[(99), int8]) */;
  %88 = @func_1905() /* ty=(Tensor[(39, 4), float32], Tensor[(11, ?, 9), int8], Tensor[(99), int8]) */;
  %89 = %87.1;
  %90 = %88.1;
  (%89, %90)
}

def @func_3486() -> (Tensor[(4, 13, 3), float32], Tensor[(1200), float32], Tensor[(11, ?, 9), float64]) {
  %91 = cast(meta[relay.Constant][6] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %92 = reshape(%91, newshape=[16, 15, 5]) /* ty=Tensor[(16, 15, 5), float32] */;
  %93 = @func_626(%92) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(156), float32], Tensor[(4, 13, 3), float32], Tensor[(16, 15, 5), bool]) */;
  %94 = @func_2192() /* ty=(Tensor[(11, ?, 9), int8], Tensor[(11, ?, 9), int8]) */;
  %95 = %94.1;
  %96 = cast(%95, dtype="float64") /* ty=Tensor[(11, ?, 9), float64] */;
  %97 = %93.0;
  %98 = sigmoid(%96) /* ty=Tensor[(11, ?, 9), float64] */;
  (%97, meta[relay.Constant][6] /* ty=Tensor[(1200), float32] */, %98)
}

def @func_3567(%var_3558: Tensor[(4, 13, 3), float32]) -> (Tensor[(4, 13, 3), int8],) {
  %99 = @func_3007() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) */;
  %100 = %99.1;
  %101 = cast(%var_3558, dtype="int8") /* ty=Tensor[(4, 13, 3), int8] */;
  %102 = shape_of(%100, dtype="int32") /* ty=Tensor[(3), int32] */;
  %103 = cast(%100, dtype="int8") /* ty=Tensor[(4, 13, 3), int8] */;
  %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %105 = bitwise_xor(%103, %104) /* ty=Tensor[(4, 13, 3), int8] */;
  (%105,)
}

def @func_5138(%var_5113: Tensor[(11, 14, 9), float64], %var_5130: Tensor[(1200), float32]) -> (Tensor[(1, 16, 1890), float64], Tensor[(11, 14, 9), int8], Tensor[(156), float32], Tensor[(4, 13, 3), float32], Tensor[(1200), float32]) {
  %106 = @func_3007() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) */;
  %107 = @func_3486() /* ty=(Tensor[(4, 13, 3), float32], Tensor[(1200), float32], Tensor[(11, ?, 9), float64]) */;
  %108 = %107.2;
  %109 = cast(%108, dtype="float64") /* ty=Tensor[(11, ?, 9), float64] */;
  %110 = cosh(%109) /* ty=Tensor[(11, ?, 9), float64] */;
  %111 = cast(%110, dtype="int8") /* ty=Tensor[(11, ?, 9), int8] */;
  %112 = cast(%var_5113, dtype="int8") /* ty=Tensor[(11, 14, 9), int8] */;
  %113 = @func_4948() /* ty=(Tensor[(156), float32],) */;
  %114 = cast(%var_5130, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %115 = reshape(%114, newshape=[16, 15, 5]) /* ty=Tensor[(16, 15, 5), float32] */;
  %116 = @func_626(%115) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(156), float32], Tensor[(4, 13, 3), float32], Tensor[(16, 15, 5), bool]) */;
  %117 = %106.0;
  %118 = left_shift(%111, %112) /* ty=Tensor[(11, 14, 9), int8] */;
  %119 = %113.0;
  %120 = %116.2;
  (%117, %118, %119, %120, %var_5130)
}

def @func_2250(%var_2234: Tensor[(5, 1, 15), uint8], %var_2235: Tensor[(5, 8, 15), uint8]) -> (Tensor[(65), float64], Tensor[(11, ?, 9), int8], Tensor[(5, 8, 15), float64]) {
  %121 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
  %122 = @func_2192() /* ty=(Tensor[(11, ?, 9), int8], Tensor[(11, ?, 9), int8]) */;
  %123 = cast(%var_2234, dtype="uint8") /* ty=Tensor[(5, 1, 15), uint8] */;
  %124 = cast(%var_2235, dtype="uint8") /* ty=Tensor[(5, 8, 15), uint8] */;
  %125 = bitwise_or(%123, %124) /* ty=Tensor[(5, 8, 15), uint8] */;
  %126 = cast(%125, dtype="float64") /* ty=Tensor[(5, 8, 15), float64] */;
  %127 = shape_of(%var_2235, dtype="int32") /* ty=Tensor[(3), int32] */;
  %128 = cast(%var_2235, dtype="float64") /* ty=Tensor[(5, 8, 15), float64] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %130 = %121.2;
  %131 = %122.0;
  %132 = mod(%128, %129) /* ty=Tensor[(5, 8, 15), float64] */;
  (%130, %131, %132)
}

def @func_3991() -> (Tensor[(39, 4), float32],) {
  %133 = @func_1866() /* ty=(Tensor[(39, 4), float32],) */;
  %134 = %133.0;
  (%134,)
}

def @func_3007() -> (Tensor[(1, 16, 1890), float64], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) {
  %135 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
  %136 = cast(meta[relay.Constant][7] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %137 = cast(meta[relay.Constant][7] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %138 = reshape(%136, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %139 = reshape(%137, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %140 = @func_357(%138, %139) /* ty=(Tensor[(4, 13, 3), float32],) */;
  %141 = %135.3;
  %142 = %140.0;
  (%141, %142, meta[relay.Constant][7] /* ty=Tensor[(156), float32] */)
}

def @func_4306() -> (Tensor[(1, 16, 1890), float64], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) {
  %143 = @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %144 = cast(meta[relay.Constant][8] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %145 = reshape(%144, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), float32] */;
  %146 = %143.0;
  %147 = @func_989(%145) /* ty=Tensor[(14, 3, 11), float32] */;
  (%146, %147, meta[relay.Constant][8] /* ty=Tensor[(462), float32] */)
}

def @func_4879() -> Tensor[(14, 3, 11), int16] {
  %148 = @func_3840() /* ty=(Tensor[(11, ?, 9), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) */;
  %149 = %148.1;
  %150 = cast(meta[relay.Constant][9] /* ty=Tensor[(14, 3, 11), float32] */, dtype="int16") /* ty=Tensor[(14, 3, 11), int16] */;
  %151 = shape_of(%149, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(%149, dtype="int16") /* ty=Tensor[(14, 3, 11), int16] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  left_shift(%152, %153) /* ty=Tensor[(14, 3, 11), int16] */
}

def @func_4386() -> Tensor[(4, 13, 3), float32] {
  %154 = @func_3703() /* ty=(Tensor[(4, 13, 3), float32],) */;
  %154.0
}

def @func_5628() -> (Tensor[(1, 16, 1890), float64],) {
  %155 = @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %156 = %155.0;
  (%156,)
}

def @func_4297(%var_4292: Tensor[(6, 8, 3), float64]) -> (Tensor[(6, 8, 3), float64],) {
  %157 = cast(%var_4292, dtype="float64") /* ty=Tensor[(6, 8, 3), float64] */;
  %158 = erf(%157) /* ty=Tensor[(6, 8, 3), float64] */;
  (%158,)
}

def @func_3241(%var_3208: Tensor[(99, 1), int8]) -> (Tensor[(1, 5, 13), float64], Tensor[(99, 1), int8], Tensor[(39, 4), float32], Tensor[(39, 4), float64]) {
  %159 = cast(%var_3208, dtype="int8") /* ty=Tensor[(99, 1), int8] */;
  %160 = reshape(%159, newshape=[99, 1]) /* ty=Tensor[(99, 1), int8] */;
  %161 = @func_2580(%160) /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 5, 13), float64], Tensor[(1, 16, 1890), float32], Tensor[(11, ?, 9), int8], Tensor[(99, 1), int8]) */;
  %162 = @func_1866() /* ty=(Tensor[(39, 4), float32],) */;
  %163 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
  %164 = %163.0;
  %165 = cast(%164, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %166 = log2(%165) /* ty=Tensor[(39, 4), float32] */;
  %167 = cast(%166, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
  %168 = %161.1;
  %169 = %162.0;
  %170 = sqrt(%167) /* ty=Tensor[(39, 4), float64] */;
  (%168, %var_3208, %169, %170)
}

def @func_4896() -> Tensor[(39, 4), float32] {
  %171 = @func_1866() /* ty=(Tensor[(39, 4), float32],) */;
  %171.0
}

def @func_5241() -> Tensor[(14, 3, 11), int16] {
  @func_4879() /* ty=Tensor[(14, 3, 11), int16] */
}

def @func_1927() -> (Tensor[(1, 16, 1890), float64],) {
  %172 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
  %173 = %172.3;
  (%173,)
}

def @func_6443(%var_6436: Tensor[(7, 6), uint32], %var_6437: Tensor[(7, 6), uint32]) -> Tensor[(7, 6), bool] {
  %174 = cast(%var_6437, dtype="bool") /* ty=Tensor[(7, 6), bool] */;
  %175 = shape_of(%var_6436, dtype="int32") /* ty=Tensor[(2), int32] */;
  %176 = cast(%var_6436, dtype="bool") /* ty=Tensor[(7, 6), bool] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  greater(%176, %177) /* ty=Tensor[(7, 6), bool] */
}

def @func_5004(%var_4992: uint16, %var_4993: Tensor[(5, 1, 12), uint16], %var_5000: Tensor[(156), float32]) -> (Tensor[(5, 1, 12), uint16], Tensor[(156), float32], Tensor[(156), float32]) {
  %178 = cast(%var_4992, dtype="uint16") /* ty=uint16 */;
  %179 = cast(%var_4993, dtype="uint16") /* ty=Tensor[(5, 1, 12), uint16] */;
  %180 = cast(%var_5000, dtype="float32") /* ty=Tensor[(156), float32] */;
  %181 = reshape(%180, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %182 = @func_4340(%181) /* ty=(Tensor[(11, ?, 9), float32], Tensor[(4, 13, 3), int8], Tensor[(156), float32]) */;
  %183 = minimum(%178, %179) /* ty=Tensor[(5, 1, 12), uint16] */;
  %184 = %182.2;
  (%183, %184, %var_5000)
}

def @func_972(%var_967: Tensor[(1, 5, 13), float64]) -> (Tensor[(1, 5, 13), float64],) {
  %185 = cast(%var_967, dtype="float64") /* ty=Tensor[(1, 5, 13), float64] */;
  %186 = log(%185) /* ty=Tensor[(1, 5, 13), float64] */;
  (%186,)
}

def @func_3795(%var_3775: Tensor[(6, 15, 13), uint64]) -> (Tensor[(6, 15, 13), bool],) {
  %187 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 15, 13), uint64] */, dtype="bool") /* ty=Tensor[(6, 15, 13), bool] */;
  %188 = shape_of(%var_3775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(%var_3775, dtype="bool") /* ty=Tensor[(6, 15, 13), bool] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %191 = less_equal(%189, %190) /* ty=Tensor[(6, 15, 13), bool] */;
  (%191,)
}

def @func_3625(%var_3620: Tensor[(1820, 1), int16]) -> (Tensor[(4, 13, 3), float32], Tensor[(14, 13, 10), int16], Tensor[(1820, 1), int16]) {
  %192 = @func_3486() /* ty=(Tensor[(4, 13, 3), float32], Tensor[(1200), float32], Tensor[(11, ?, 9), float64]) */;
  %193 = cast(%var_3620, dtype="int16") /* ty=Tensor[(1820, 1), int16] */;
  %194 = reshape(%193, newshape=[14, 13, 10]) /* ty=Tensor[(14, 13, 10), int16] */;
  %195 = %192.0;
  %196 = @func_2501(%194) /* ty=Tensor[(14, 13, 10), int16] */;
  (%195, %196, %var_3620)
}

def @func_5558(%var_5523: Tensor[(3, 1, 14), int32], %var_5524: Tensor[(3, 10, 14), int32], %var_5535: Tensor[(182), bool]) -> (Tensor[(4, 13, 3), float32], Tensor[(182), bool], Tensor[(910), bool], Tensor[(3, 10, 14), bool], Tensor[(3, 10, 14), float32], Tensor[(3, 10, 14), float64]) {
  %197 = cast(%var_5535, dtype="bool") /* ty=Tensor[(182), bool] */;
  %198 = cast(meta[relay.Constant][11] /* ty=Tensor[(910), bool] */, dtype="bool") /* ty=Tensor[(910), bool] */;
  %199 = reshape(%197, newshape=[182]) /* ty=Tensor[(182), bool] */;
  %200 = reshape(%198, newshape=[910]) /* ty=Tensor[(910), bool] */;
  %201 = @func_4459(%199, %200) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(1, 5, 13), float64], Tensor[(4, 13, 3), float32], Tensor[(5, 13, 14), float32], Tensor[(182), bool], Tensor[(910), bool]) */;
  %202 = cast(%var_5524, dtype="bool") /* ty=Tensor[(3, 10, 14), bool] */;
  %203 = cast(%var_5523, dtype="bool") /* ty=Tensor[(3, 1, 14), bool] */;
  %204 = cast(%var_5523, dtype="bool") /* ty=Tensor[(3, 1, 14), bool] */;
  %205 = cast(%var_5524, dtype="bool") /* ty=Tensor[(3, 10, 14), bool] */;
  %206 = less_equal(%204, %205) /* ty=Tensor[(3, 10, 14), bool] */;
  %207 = cast(%206, dtype="float64") /* ty=Tensor[(3, 10, 14), float64] */;
  %208 = sqrt(%207) /* ty=Tensor[(3, 10, 14), float64] */;
  %209 = cast(%208, dtype="float32") /* ty=Tensor[(3, 10, 14), float32] */;
  %210 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 10, 14), int32] */, dtype="float64") /* ty=Tensor[(3, 10, 14), float64] */;
  %211 = shape_of(%var_5524, dtype="int32") /* ty=Tensor[(3), int32] */;
  %212 = cast(%var_5524, dtype="float64") /* ty=Tensor[(3, 10, 14), float64] */;
  %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %214 = %201.2;
  %215 = greater(%202, %203) /* ty=Tensor[(3, 10, 14), bool] */;
  %216 = asinh(%209) /* ty=Tensor[(3, 10, 14), float32] */;
  %217 = power(%212, %213) /* ty=Tensor[(3, 10, 14), float64] */;
  (%214, %var_5535, meta[relay.Constant][11] /* ty=Tensor[(910), bool] */, %215, %216, %217)
}

def @func_6403(%var_6390: Tensor[(4, 12, 16), int16], %var_6391: Tensor[(4, 12, 16), int16]) -> (Tensor[(4, 12, 16), bool], Tensor[(4, 12, 16), float32]) {
  %218 = cast(%var_6391, dtype="bool") /* ty=Tensor[(4, 12, 16), bool] */;
  %219 = shape_of(%var_6390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(%var_6390, dtype="bool") /* ty=Tensor[(4, 12, 16), bool] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %222 = cast(%var_6390, dtype="float64") /* ty=Tensor[(4, 12, 16), float64] */;
  %223 = sqrt(%222) /* ty=Tensor[(4, 12, 16), float64] */;
  %224 = cast(%223, dtype="float32") /* ty=Tensor[(4, 12, 16), float32] */;
  %225 = not_equal(%220, %221) /* ty=Tensor[(4, 12, 16), bool] */;
  %226 = asinh(%224) /* ty=Tensor[(4, 12, 16), float32] */;
  (%225, %226)
}

def @func_4967(%var_4962: Tensor[(11, 9), int8]) -> (Tensor[(4, 13, 3), float32], Tensor[(11, ?, 9), int8], Tensor[(11, 9), int8]) {
  %227 = @func_4724() /* ty=(Tensor[(4, 13, 3), float32],) */;
  %228 = cast(%var_4962, dtype="int8") /* ty=Tensor[(11, 9), int8] */;
  %229 = cast(%var_4962, dtype="int8") /* ty=Tensor[(11, 9), int8] */;
  %230 = reshape(%228, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %231 = reshape(%229, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %232 = %227.0;
  %233 = @func_1064(%230, %231) /* ty=Tensor[(11, ?, 9), int8] */;
  (%232, %233, %var_4962)
}

def @func_2616(%var_2613: Tensor[(75), uint8]) -> (Tensor[(1, 16, 1890), float64], Tensor[(65), float64], Tensor[(75), uint8], Tensor[(600), uint8]) {
  %234 = @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %235 = cast(%var_2613, dtype="uint8") /* ty=Tensor[(75), uint8] */;
  %236 = cast(meta[relay.Constant][13] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %237 = reshape(%235, newshape=[5, 1, 15]) /* ty=Tensor[(5, 1, 15), uint8] */;
  %238 = reshape(%236, newshape=[5, 8, 15]) /* ty=Tensor[(5, 8, 15), uint8] */;
  %239 = @func_2250(%237, %238) /* ty=(Tensor[(65), float64], Tensor[(11, ?, 9), int8], Tensor[(5, 8, 15), float64]) */;
  %240 = %234.0;
  %241 = %239.0;
  (%240, %241, %var_2613, meta[relay.Constant][13] /* ty=Tensor[(600), uint8] */)
}

def @func_6292(%var_6283: Tensor[(14, 3, 11), float64]) -> (Tensor[(14, 3, 11), float32], Tensor[(462), float32]) {
  %242 = @func_5241() /* ty=Tensor[(14, 3, 11), int16] */;
  %243 = cast(%242, dtype="float64") /* ty=Tensor[(14, 3, 11), float64] */;
  %244 = erf(%243) /* ty=Tensor[(14, 3, 11), float64] */;
  %245 = cast(%var_6283, dtype="float32") /* ty=Tensor[(14, 3, 11), float32] */;
  %246 = shape_of(%244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(%244, dtype="float32") /* ty=Tensor[(14, 3, 11), float32] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %249 = @func_5337() /* ty=(Tensor[(462), float32], Tensor[(1, 16, 1890), float64], Tensor[(1, 16, 1890), float64]) */;
  %250 = floor_divide(%247, %248) /* ty=Tensor[(14, 3, 11), float32] */;
  %251 = %249.0;
  (%250, %251)
}

def @func_6384() -> Tensor[(10, 16, 1890), float32] {
  %252 = @func_6366() /* ty=(Tensor[(10, 16, 1890), float32], Tensor[(1, 16, 1890), float64]) */;
  %252.0
}

def @func_5353() -> (Tensor[(39, 4), float32], Tensor[(99), int8]) {
  %253 = @func_5182() /* ty=(Tensor[(99), int8],) */;
  %254 = @func_4896() /* ty=Tensor[(39, 4), float32] */;
  %255 = %253.0;
  (%254, %255)
}

def @func_4340(%var_4337: Tensor[(156), float32]) -> (Tensor[(11, ?, 9), float32], Tensor[(4, 13, 3), int8], Tensor[(156), float32]) {
  %256 = @func_1905() /* ty=(Tensor[(39, 4), float32], Tensor[(11, ?, 9), int8], Tensor[(99), int8]) */;
  %257 = %256.1;
  %258 = cast(%257, dtype="float32") /* ty=Tensor[(11, ?, 9), float32] */;
  %259 = cast(%var_4337, dtype="float32") /* ty=Tensor[(156), float32] */;
  %260 = reshape(%259, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %261 = @func_3567(%260) /* ty=(Tensor[(4, 13, 3), int8],) */;
  %262 = exp(%258) /* ty=Tensor[(11, ?, 9), float32] */;
  %263 = %261.0;
  (%262, %263, %var_4337)
}

def @func_5944() -> Tensor[(4, 13, 3), float32] {
  %264 = @func_3703() /* ty=(Tensor[(4, 13, 3), float32],) */;
  %264.0
}

def @func_4974() -> Tensor[(39, 4), float32] {
  %265 = @func_3991() /* ty=(Tensor[(39, 4), float32],) */;
  %265.0
}

def @func_626(%var_581: Tensor[(16, 15, 5), float32]) -> (Tensor[(4, 13, 3), float32], Tensor[(156), float32], Tensor[(4, 13, 3), float32], Tensor[(16, 15, 5), bool]) {
  %266 = cast(meta[relay.Constant][14] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %267 = cast(meta[relay.Constant][14] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %268 = reshape(%266, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %269 = reshape(%267, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %270 = @func_357(%268, %269) /* ty=(Tensor[(4, 13, 3), float32],) */;
  %271 = %270.0;
  %272 = cast(%271, dtype="float32") /* ty=Tensor[(4, 13, 3), float32] */;
  %273 = cast(%271, dtype="float32") /* ty=Tensor[(4, 13, 3), float32] */;
  %274 = reshape(%272, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %275 = reshape(%273, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %276 = @func_357(%274, %275) /* ty=(Tensor[(4, 13, 3), float32],) */;
  %277 = cast(%var_581, dtype="float32") /* ty=Tensor[(16, 15, 5), float32] */;
  %278 = log(%277) /* ty=Tensor[(16, 15, 5), float32] */;
  %279 = cast(meta[relay.Constant][15] /* ty=Tensor[(16, 15, 5), float32] */, dtype="bool") /* ty=Tensor[(16, 15, 5), bool] */;
  %280 = shape_of(%278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %281 = cast(%278, dtype="bool") /* ty=Tensor[(16, 15, 5), bool] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %283 = %276.0;
  %284 = less_equal(%281, %282) /* ty=Tensor[(16, 15, 5), bool] */;
  (%271, meta[relay.Constant][14] /* ty=Tensor[(156), float32] */, %283, %284)
}

def @func_1866() -> (Tensor[(39, 4), float32],) {
  %285 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
  %286 = %285.0;
  (%286,)
}

def @func_1905() -> (Tensor[(39, 4), float32], Tensor[(11, ?, 9), int8], Tensor[(99), int8]) {
  %287 = @func_1866() /* ty=(Tensor[(39, 4), float32],) */;
  %288 = cast(meta[relay.Constant][16] /* ty=Tensor[(99), int8] */, dtype="int8") /* ty=Tensor[(99), int8] */;
  %289 = cast(meta[relay.Constant][16] /* ty=Tensor[(99), int8] */, dtype="int8") /* ty=Tensor[(99), int8] */;
  %290 = reshape(%288, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %291 = reshape(%289, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %292 = %287.0;
  %293 = @func_1064(%290, %291) /* ty=Tensor[(11, ?, 9), int8] */;
  (%292, %293, meta[relay.Constant][16] /* ty=Tensor[(99), int8] */)
}

def @func_2862(%var_2819: Tensor[(16, 16, 1890), float64], %var_2829: Tensor[(910), bool], %var_2843: Tensor[(13, 16, 1890), float64]) -> (Tensor[(16, 16, 1890), int64], Tensor[(5, 13, 14), float32], Tensor[(182), bool], Tensor[(910), bool], Tensor[(13, 16, 1890), bool], Tensor[(?, 16, 1890), float32], Tensor[(65), float64], Tensor[(75), uint8], Tensor[(16, 16, 1890), bool]) {
  %294 = @func_1927() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %295 = %294.0;
  %296 = cast(%295, dtype="int64") /* ty=Tensor[(1, 16, 1890), int64] */;
  %297 = cast(%var_2819, dtype="int64") /* ty=Tensor[(16, 16, 1890), int64] */;
  %298 = cast(meta[relay.Constant][17] /* ty=Tensor[(182), bool] */, dtype="bool") /* ty=Tensor[(182), bool] */;
  %299 = cast(%var_2829, dtype="bool") /* ty=Tensor[(910), bool] */;
  %300 = reshape(%298, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), bool] */;
  %301 = reshape(%299, newshape=[5, 13, 14]) /* ty=Tensor[(5, 13, 14), bool] */;
  %302 = @func_660(%300, %301) /* ty=(Tensor[(5, 13, 14), bool], Tensor[(5, 13, 14), float32]) */;
  %303 = cast(%295, dtype="float64") /* ty=Tensor[(1, 16, 1890), float64] */;
  %304 = rsqrt(%303) /* ty=Tensor[(1, 16, 1890), float64] */;
  %305 = cast(%304, dtype="bool") /* ty=Tensor[(1, 16, 1890), bool] */;
  %306 = cast(%var_2843, dtype="bool") /* ty=Tensor[(13, 16, 1890), bool] */;
  %307 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
  %308 = %307.3;
  %309 = cast(%308, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
  %310 = shape_of(%304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %311 = cast(%304, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %313 = cast(meta[relay.Constant][18] /* ty=Tensor[(75), uint8] */, dtype="uint8") /* ty=Tensor[(75), uint8] */;
  %314 = reshape(%313, newshape=[75]) /* ty=Tensor[(75), uint8] */;
  %315 = @func_2616(%314) /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(65), float64], Tensor[(75), uint8], Tensor[(600), uint8]) */;
  %316 = cast(%var_2819, dtype="bool") /* ty=Tensor[(16, 16, 1890), bool] */;
  %317 = cast(%295, dtype="bool") /* ty=Tensor[(1, 16, 1890), bool] */;
  %318 = subtract(%296, %297) /* ty=Tensor[(16, 16, 1890), int64] */;
  %319 = %302.1;
  %320 = less(%305, %306) /* ty=Tensor[(13, 16, 1890), bool] */;
  %321 = divide(%311, %312) /* ty=Tensor[(?, 16, 1890), float32] */;
  %322 = %315.1;
  %323 = not_equal(%316, %317) /* ty=Tensor[(16, 16, 1890), bool] */;
  (%318, %319, meta[relay.Constant][17] /* ty=Tensor[(182), bool] */, %var_2829, %320, %321, %322, meta[relay.Constant][18] /* ty=Tensor[(75), uint8] */, %323)
}

def @func_3042(%var_3040: Tensor[(99, 1), int8]) -> (Tensor[(3, 16, 1890), float32], Tensor[(11, ?, 9), int8], Tensor[(99, 1), int8]) {
  %324 = @func_2747() /* ty=(Tensor[(1, 16, 1890), float32],) */;
  %325 = %324.0;
  %326 = cast(%325, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
  %327 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 16, 1890), float32] */, dtype="float32") /* ty=Tensor[(3, 16, 1890), float32] */;
  %328 = cast(%var_3040, dtype="int8") /* ty=Tensor[(99, 1), int8] */;
  %329 = cast(%var_3040, dtype="int8") /* ty=Tensor[(99, 1), int8] */;
  %330 = reshape(%328, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %331 = reshape(%329, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %332 = floor_divide(%326, %327) /* ty=Tensor[(3, 16, 1890), float32] */;
  %333 = @func_1064(%330, %331) /* ty=Tensor[(11, ?, 9), int8] */;
  (%332, %333, %var_3040)
}

def @func_5478() -> Tensor[(15, 8), float64] {
  %334 = @func_5393() /* ty=(Tensor[(15, 8), float64],) */;
  %334.0
}

def @func_2421(%var_2294: Tensor[(462), float32], %var_2298: Tensor[(8, 16, 1890), float64], %var_2340: Tensor[(8, 16, 1890), float32], %var_2347: Tensor[(600), uint8], %var_2356: Tensor[(6, 16, 1890), float64], %var_2387: Tensor[(8, 16, 1890), uint8]) -> (Tensor[(14, 3, 11), float32], Tensor[(462), float32], Tensor[(8, 16, 1890), int64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(7, 7, 14), float32], Tensor[(686), float32], Tensor[(1, 16, 1890), float64], Tensor[(11, ?, 9), int8], Tensor[(75), uint8], Tensor[(600), uint8], Tensor[(6, 16, 1890), bool], Tensor[(8, 16, 1890), float32], Tensor[(8, 16, 1890), float32], Tensor[(1, 5, 13), float64]) {
  %335 = cast(%var_2294, dtype="float32") /* ty=Tensor[(462), float32] */;
  %336 = reshape(%335, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), float32] */;
  %337 = @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %338 = %337.0;
  %339 = cast(%338, dtype="int64") /* ty=Tensor[(1, 16, 1890), int64] */;
  %340 = cast(%var_2298, dtype="int64") /* ty=Tensor[(8, 16, 1890), int64] */;
  %341 = cast(meta[relay.Constant][20] /* ty=Tensor[(65), float64] */, dtype="float64") /* ty=Tensor[(65), float64] */;
  %342 = reshape(%341, newshape=[1, 5, 13]) /* ty=Tensor[(1, 5, 13), float64] */;
  %343 = @func_972(%342) /* ty=(Tensor[(1, 5, 13), float64],) */;
  %344 = cast(meta[relay.Constant][21] /* ty=Tensor[(686), float32] */, dtype="float32") /* ty=Tensor[(686), float32] */;
  %345 = reshape(%344, newshape=[7, 7, 14]) /* ty=Tensor[(7, 7, 14), float32] */;
  %346 = @func_1662(%345) /* ty=(Tensor[(7, 7, 14), float32],) */;
  %347 = @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %348 = cast(meta[relay.Constant][22] /* ty=Tensor[(75), uint8] */, dtype="uint8") /* ty=Tensor[(75), uint8] */;
  %349 = cast(%var_2347, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %350 = reshape(%348, newshape=[5, 1, 15]) /* ty=Tensor[(5, 1, 15), uint8] */;
  %351 = reshape(%349, newshape=[5, 8, 15]) /* ty=Tensor[(5, 8, 15), uint8] */;
  %352 = @func_2250(%350, %351) /* ty=(Tensor[(65), float64], Tensor[(11, ?, 9), int8], Tensor[(5, 8, 15), float64]) */;
  %353 = cast(%338, dtype="bool") /* ty=Tensor[(1, 16, 1890), bool] */;
  %354 = cast(%var_2356, dtype="bool") /* ty=Tensor[(6, 16, 1890), bool] */;
  %355 = cast(%var_2298, dtype="float64") /* ty=Tensor[(8, 16, 1890), float64] */;
  %356 = atanh(%355) /* ty=Tensor[(8, 16, 1890), float64] */;
  %357 = cast(%356, dtype="float32") /* ty=Tensor[(8, 16, 1890), float32] */;
  %358 = sinh(%357) /* ty=Tensor[(8, 16, 1890), float32] */;
  %359 = cast(%var_2298, dtype="float32") /* ty=Tensor[(8, 16, 1890), float32] */;
  %360 = shape_of(%358, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(%358, dtype="float32") /* ty=Tensor[(8, 16, 1890), float32] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %363 = cast(%var_2340, dtype="uint8") /* ty=Tensor[(8, 16, 1890), uint8] */;
  %364 = shape_of(%358, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%358, dtype="uint8") /* ty=Tensor[(8, 16, 1890), uint8] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %367 = add(%365, %366) /* ty=Tensor[(8, 16, 1890), uint8] */;
  %368 = cast(%var_2387, dtype="uint8") /* ty=Tensor[(8, 16, 1890), uint8] */;
  %369 = shape_of(%367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%367, dtype="uint8") /* ty=Tensor[(8, 16, 1890), uint8] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %372 = subtract(%370, %371) /* ty=Tensor[(8, 16, 1890), uint8] */;
  %373 = cast(%358, dtype="float32") /* ty=Tensor[(8, 16, 1890), float32] */;
  %374 = shape_of(%372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %375 = cast(%372, dtype="float32") /* ty=Tensor[(8, 16, 1890), float32] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %377 = cast(meta[relay.Constant][20] /* ty=Tensor[(65), float64] */, dtype="float64") /* ty=Tensor[(65), float64] */;
  %378 = reshape(%377, newshape=[1, 5, 13]) /* ty=Tensor[(1, 5, 13), float64] */;
  %379 = @func_972(%378) /* ty=(Tensor[(1, 5, 13), float64],) */;
  %380 = @func_989(%336) /* ty=Tensor[(14, 3, 11), float32] */;
  %381 = left_shift(%339, %340) /* ty=Tensor[(8, 16, 1890), int64] */;
  %382 = %343.0;
  %383 = %346.0;
  %384 = %347.0;
  %385 = %352.1;
  %386 = less(%353, %354) /* ty=Tensor[(6, 16, 1890), bool] */;
  %387 = mod(%361, %362) /* ty=Tensor[(8, 16, 1890), float32] */;
  %388 = floor_divide(%375, %376) /* ty=Tensor[(8, 16, 1890), float32] */;
  %389 = %379.0;
  (%380, %var_2294, %381, %382, meta[relay.Constant][20] /* ty=Tensor[(65), float64] */, %383, meta[relay.Constant][21] /* ty=Tensor[(686), float32] */, %384, %385, meta[relay.Constant][22] /* ty=Tensor[(75), uint8] */, %var_2347, %386, %387, %388, %389)
}

def @func_4822() -> (Tensor[(?, 16, 1890), bool], Tensor[(?, 16, 1890), uint16]) {
  %390 = @func_1927() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %391 = %390.0;
  %392 = cast(%391, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
  %393 = asin(%392) /* ty=Tensor[(1, 16, 1890), float32] */;
  %394 = cast(%391, dtype="bool") /* ty=Tensor[(1, 16, 1890), bool] */;
  %395 = shape_of(%393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%393, dtype="bool") /* ty=Tensor[(1, 16, 1890), bool] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %398 = cast(%391, dtype="uint16") /* ty=Tensor[(1, 16, 1890), uint16] */;
  %399 = shape_of(%393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %400 = cast(%393, dtype="uint16") /* ty=Tensor[(1, 16, 1890), uint16] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %402 = greater_equal(%396, %397) /* ty=Tensor[(?, 16, 1890), bool] */;
  %403 = bitwise_xor(%400, %401) /* ty=Tensor[(?, 16, 1890), uint16] */;
  (%402, %403)
}

def @func_5874(%var_5868: Tensor[(14, 3, 11), int16]) -> (Tensor[(14, 3, 11), bool],) {
  %404 = @func_4879() /* ty=Tensor[(14, 3, 11), int16] */;
  %405 = cast(%var_5868, dtype="bool") /* ty=Tensor[(14, 3, 11), bool] */;
  %406 = shape_of(%404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %407 = cast(%404, dtype="bool") /* ty=Tensor[(14, 3, 11), bool] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %409 = logical_or(%407, %408) /* ty=Tensor[(14, 3, 11), bool] */;
  (%409,)
}

def @func_6366() -> (Tensor[(10, 16, 1890), float32], Tensor[(1, 16, 1890), float64]) {
  %410 = @func_1927() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %411 = %410.0;
  %412 = cast(%411, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
  %413 = cast(meta[relay.Constant][23] /* ty=Tensor[(10, 16, 1890), float64] */, dtype="float32") /* ty=Tensor[(10, 16, 1890), float32] */;
  %414 = @func_1927() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %415 = floor_divide(%412, %413) /* ty=Tensor[(10, 16, 1890), float32] */;
  %416 = %414.0;
  (%415, %416)
}

def @func_6230(%var_6179: Tensor[(99), int8], %var_6182: Tensor[(15, 5, 13), float64], %var_6212: Tensor[(156), float32]) -> (Tensor[(?, 16, 1890), float32], Tensor[(99), int8], Tensor[(15, 5, 13), int64], Tensor[(99), int8], Tensor[(4, 13, 3), float32], Tensor[(156), float32], Tensor[(?, 16, 1890), int32]) {
  %417 = @func_5337() /* ty=(Tensor[(462), float32], Tensor[(1, 16, 1890), float64], Tensor[(1, 16, 1890), float64]) */;
  %418 = %417.2;
  %419 = @func_4822() /* ty=(Tensor[(?, 16, 1890), bool], Tensor[(?, 16, 1890), uint16]) */;
  %420 = %419.1;
  %421 = cast(%420, dtype="float32") /* ty=Tensor[(?, 16, 1890), float32] */;
  %422 = shape_of(%418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%418, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %425 = cast(%var_6179, dtype="int8") /* ty=Tensor[(99), int8] */;
  %426 = reshape(%425, newshape=[99, 1]) /* ty=Tensor[(99, 1), int8] */;
  %427 = @func_2580(%426) /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 5, 13), float64], Tensor[(1, 16, 1890), float32], Tensor[(11, ?, 9), int8], Tensor[(99, 1), int8]) */;
  %428 = %427.1;
  %429 = cast(%428, dtype="int64") /* ty=Tensor[(1, 5, 13), int64] */;
  %430 = cast(%var_6182, dtype="int64") /* ty=Tensor[(15, 5, 13), int64] */;
  %431 = @func_3426() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(99, 1), int8], Tensor[(99), int8]) */;
  %432 = cast(%var_6212, dtype="float32") /* ty=Tensor[(156), float32] */;
  %433 = reshape(%432, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %434 = @func_4611(%433) /* ty=(Tensor[(11, ?, 9), int8], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) */;
  %435 = cast(%420, dtype="int32") /* ty=Tensor[(?, 16, 1890), int32] */;
  %436 = shape_of(%418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %437 = cast(%418, dtype="int32") /* ty=Tensor[(1, 16, 1890), int32] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %439 = minimum(%423, %424) /* ty=Tensor[(?, 16, 1890), float32] */;
  %440 = bitwise_or(%429, %430) /* ty=Tensor[(15, 5, 13), int64] */;
  %441 = %431.2;
  %442 = %434.1;
  %443 = left_shift(%437, %438) /* ty=Tensor[(?, 16, 1890), int32] */;
  (%439, %var_6179, %440, %441, %442, %var_6212, %443)
}

def @func_3930() -> Tensor[(1, 16, 1890), float64] {
  %444 = @func_3426() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(99, 1), int8], Tensor[(99), int8]) */;
  %444.0
}

def @func_6070(%var_6047: Tensor[(39, 4), float32], %var_6055: Tensor[(144), float64]) -> (Tensor[(39, 4), bool], Tensor[(39, 4), int16], Tensor[(6, 8, 3), float64], Tensor[(144), float64], Tensor[(11, ?, 9), int8]) {
  %445 = @func_1905() /* ty=(Tensor[(39, 4), float32], Tensor[(11, ?, 9), int8], Tensor[(99), int8]) */;
  %446 = %445.0;
  %447 = cast(meta[relay.Constant][24] /* ty=Tensor[(39, 4), float32] */, dtype="bool") /* ty=Tensor[(39, 4), bool] */;
  %448 = shape_of(%446, dtype="int32") /* ty=Tensor[(2), int32] */;
  %449 = cast(%446, dtype="bool") /* ty=Tensor[(39, 4), bool] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %451 = logical_and(%449, %450) /* ty=Tensor[(39, 4), bool] */;
  %452 = @func_4386() /* ty=Tensor[(4, 13, 3), float32] */;
  %453 = cast(%452, dtype="float32") /* ty=Tensor[(4, 13, 3), float32] */;
  %454 = shape_of(%451, dtype="int32") /* ty=Tensor[(2), int32] */;
  %455 = cast(%451, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %457 = floor_divide(%455, %456) /* ty=Tensor[(39, 4), float32] */;
  %458 = cast(%457, dtype="bool") /* ty=Tensor[(39, 4), bool] */;
  %459 = shape_of(%451, dtype="int32") /* ty=Tensor[(2), int32] */;
  %460 = cast(%451, dtype="bool") /* ty=Tensor[(39, 4), bool] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %462 = cast(%451, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %463 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(39, 4), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %464 = cast(meta[relay.Constant][24] /* ty=Tensor[(39, 4), float32] */, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %466 = divide(%464, %465) /* ty=Tensor[(39, 4), float32] */;
  %467 = cast(%var_6047, dtype="int16") /* ty=Tensor[(39, 4), int16] */;
  %468 = shape_of(%466, dtype="int32") /* ty=Tensor[(2), int32] */;
  %469 = cast(%466, dtype="int16") /* ty=Tensor[(39, 4), int16] */;
  %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %471 = cast(%var_6055, dtype="float64") /* ty=Tensor[(144), float64] */;
  %472 = reshape(%471, newshape=[6, 8, 3]) /* ty=Tensor[(6, 8, 3), float64] */;
  %473 = @func_4297(%472) /* ty=(Tensor[(6, 8, 3), float64],) */;
  %474 = @func_3731() /* ty=(Tensor[(11, ?, 9), int8],) */;
  %475 = less(%460, %461) /* ty=Tensor[(39, 4), bool] */;
  %476 = bitwise_xor(%469, %470) /* ty=Tensor[(39, 4), int16] */;
  %477 = %473.0;
  %478 = %474.0;
  (%475, %476, %477, %var_6055, %478)
}

def @func_6514() -> (Tensor[(14, 3, 11), int16], Tensor[(1, 16, 1890), float64]) {
  %479 = @func_3426() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(99, 1), int8], Tensor[(99), int8]) */;
  %480 = @func_5241() /* ty=Tensor[(14, 3, 11), int16] */;
  %481 = %479.0;
  (%480, %481)
}

def @func_4172(%var_4143: Tensor[(13, 11, 4), float32], %var_4144: Tensor[(13, 11, 4), float32], %var_4148: Tensor[(13, 11, 4), bool]) -> (Tensor[(13, 11, 4), uint16],) {
  %482 = cast(%var_4144, dtype="bool") /* ty=Tensor[(13, 11, 4), bool] */;
  %483 = shape_of(%var_4143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(%var_4143, dtype="bool") /* ty=Tensor[(13, 11, 4), bool] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %486 = not_equal(%484, %485) /* ty=Tensor[(13, 11, 4), bool] */;
  %487 = cast(%var_4148, dtype="uint16") /* ty=Tensor[(13, 11, 4), uint16] */;
  %488 = shape_of(%486, dtype="int32") /* ty=Tensor[(3), int32] */;
  %489 = cast(%486, dtype="uint16") /* ty=Tensor[(13, 11, 4), uint16] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %491 = maximum(%489, %490) /* ty=Tensor[(13, 11, 4), uint16] */;
  %492 = cast(%486, dtype="uint16") /* ty=Tensor[(13, 11, 4), uint16] */;
  %493 = shape_of(%491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%491, dtype="uint16") /* ty=Tensor[(13, 11, 4), uint16] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %496 = bitwise_or(%494, %495) /* ty=Tensor[(13, 11, 4), uint16] */;
  (%496,)
}

def @func_4459(%var_4449: Tensor[(182), bool], %var_4450: Tensor[(910), bool]) -> (Tensor[(4, 13, 3), float32], Tensor[(1, 5, 13), float64], Tensor[(4, 13, 3), float32], Tensor[(5, 13, 14), float32], Tensor[(182), bool], Tensor[(910), bool]) {
  %497 = @func_3703() /* ty=(Tensor[(4, 13, 3), float32],) */;
  %498 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
  %499 = @func_3007() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) */;
  %500 = cast(%var_4449, dtype="bool") /* ty=Tensor[(182), bool] */;
  %501 = cast(%var_4450, dtype="bool") /* ty=Tensor[(910), bool] */;
  %502 = reshape(%500, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), bool] */;
  %503 = reshape(%501, newshape=[5, 13, 14]) /* ty=Tensor[(5, 13, 14), bool] */;
  %504 = @func_660(%502, %503) /* ty=(Tensor[(5, 13, 14), bool], Tensor[(5, 13, 14), float32]) */;
  %505 = %497.0;
  %506 = %498.1;
  %507 = %499.1;
  %508 = %504.1;
  (%505, %506, %507, %508, %var_4449, %var_4450)
}

def @func_2580(%var_2575: Tensor[(99, 1), int8]) -> (Tensor[(1, 16, 1890), float64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 5, 13), float64], Tensor[(1, 16, 1890), float32], Tensor[(11, ?, 9), int8], Tensor[(99, 1), int8]) {
  %509 = @func_1927() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %510 = %509.0;
  %511 = cast(%510, dtype="float64") /* ty=Tensor[(1, 16, 1890), float64] */;
  %512 = cast(meta[relay.Constant][25] /* ty=Tensor[(65), float64] */, dtype="float64") /* ty=Tensor[(65), float64] */;
  %513 = reshape(%512, newshape=[1, 5, 13]) /* ty=Tensor[(1, 5, 13), float64] */;
  %514 = @func_972(%513) /* ty=(Tensor[(1, 5, 13), float64],) */;
  %515 = %514.0;
  %516 = cast(%515, dtype="float64") /* ty=Tensor[(1, 5, 13), float64] */;
  %517 = reshape(%516, newshape=[1, 5, 13]) /* ty=Tensor[(1, 5, 13), float64] */;
  %518 = @func_972(%517) /* ty=(Tensor[(1, 5, 13), float64],) */;
  %519 = cast(%510, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
  %520 = cast(%var_2575, dtype="int8") /* ty=Tensor[(99, 1), int8] */;
  %521 = cast(%var_2575, dtype="int8") /* ty=Tensor[(99, 1), int8] */;
  %522 = reshape(%520, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %523 = reshape(%521, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %524 = acos(%511) /* ty=Tensor[(1, 16, 1890), float64] */;
  %525 = %518.0;
  %526 = exp(%519) /* ty=Tensor[(1, 16, 1890), float32] */;
  %527 = @func_1064(%522, %523) /* ty=Tensor[(11, ?, 9), int8] */;
  (%524, %515, meta[relay.Constant][25] /* ty=Tensor[(65), float64] */, %525, %526, %527, %var_2575)
}

def @func_3136() -> (Tensor[(1, 16, 1890), float64],) {
  %528 = @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %529 = %528.0;
  (%529,)
}

def @func_5337() -> (Tensor[(462), float32], Tensor[(1, 16, 1890), float64], Tensor[(1, 16, 1890), float64]) {
  %530 = @func_3840() /* ty=(Tensor[(11, ?, 9), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) */;
  %531 = @func_2747() /* ty=(Tensor[(1, 16, 1890), float32],) */;
  %532 = %531.0;
  %533 = cast(%532, dtype="float64") /* ty=Tensor[(1, 16, 1890), float64] */;
  %534 = cast(%532, dtype="float64") /* ty=Tensor[(1, 16, 1890), float64] */;
  %535 = %530.2;
  %536 = sin(%533) /* ty=Tensor[(1, 16, 1890), float64] */;
  %537 = erf(%534) /* ty=Tensor[(1, 16, 1890), float64] */;
  (%535, %536, %537)
}

def @func_6696(%var_6669: Tensor[(1890), float32]) -> (Tensor[(4, 13, 3), float32], Tensor[(1, 5, 13), float64], Tensor[(1890), int64], Tensor[(4, 13, 3), float32], Tensor[(4, 13, 3), float32], Tensor[(16, 15), uint64], Tensor[(240), uint64]) {
  %538 = cast(meta[relay.Constant][26] /* ty=Tensor[(1890), float32] */, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %539 = reshape(%538, newshape=[15, 14, 9]) /* ty=Tensor[(15, 14, 9), float32] */;
  %540 = @func_1398(%539) /* ty=(Tensor[(15, 14, 9), float64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(4, 13, 3), float32], Tensor[(39, 4), float32]) */;
  %541 = cast(%var_6669, dtype="int64") /* ty=Tensor[(1890), int64] */;
  %542 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(1890), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %543 = cast(meta[relay.Constant][26] /* ty=Tensor[(1890), float32] */, dtype="int64") /* ty=Tensor[(1890), int64] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?), int64] */;
  %545 = @func_5944() /* ty=Tensor[(4, 13, 3), float32] */;
  %546 = cast(%545, dtype="float32") /* ty=Tensor[(4, 13, 3), float32] */;
  %547 = @func_4386() /* ty=Tensor[(4, 13, 3), float32] */;
  %548 = cast(%547, dtype="float32") /* ty=Tensor[(4, 13, 3), float32] */;
  %549 = reshape(%546, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %550 = reshape(%548, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %551 = @func_357(%549, %550) /* ty=(Tensor[(4, 13, 3), float32],) */;
  %552 = cast(meta[relay.Constant][27] /* ty=Tensor[(240), uint64] */, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %553 = cast(meta[relay.Constant][27] /* ty=Tensor[(240), uint64] */, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %554 = reshape(%552, newshape=[16, 15]) /* ty=Tensor[(16, 15), uint64] */;
  %555 = reshape(%553, newshape=[16, 15]) /* ty=Tensor[(16, 15), uint64] */;
  %556 = @func_4254(%554, %555) /* ty=(Tensor[(16, 15), uint64],) */;
  %557 = %540.1;
  %558 = bitwise_or(%543, %544) /* ty=Tensor[(1890), int64] */;
  %559 = %551.0;
  %560 = %556.0;
  (%547, %557, %558, %545, %559, %560, meta[relay.Constant][27] /* ty=Tensor[(240), uint64] */)
}

def @func_6335() -> (Tensor[(11, ?, 9), int8],) {
  %561 = @func_3731() /* ty=(Tensor[(11, ?, 9), int8],) */;
  %562 = %561.0;
  (%562,)
}

def @func_3903() -> (Tensor[(4, 13, 3), float32], Tensor[(99), int8], Tensor[(1, 5, 13), float32], Tensor[(39, 4), float32], Tensor[(39, 4), float32]) {
  %563 = @func_3703() /* ty=(Tensor[(4, 13, 3), float32],) */;
  %564 = cast(meta[relay.Constant][28] /* ty=Tensor[(99), int8] */, dtype="int8") /* ty=Tensor[(99), int8] */;
  %565 = reshape(%564, newshape=[99, 1]) /* ty=Tensor[(99, 1), int8] */;
  %566 = @func_3241(%565) /* ty=(Tensor[(1, 5, 13), float64], Tensor[(99, 1), int8], Tensor[(39, 4), float32], Tensor[(39, 4), float64]) */;
  %567 = %566.0;
  %568 = cast(%567, dtype="float64") /* ty=Tensor[(1, 5, 13), float64] */;
  %569 = acosh(%568) /* ty=Tensor[(1, 5, 13), float64] */;
  %570 = cast(%569, dtype="float64") /* ty=Tensor[(1, 5, 13), float64] */;
  %571 = cosh(%570) /* ty=Tensor[(1, 5, 13), float64] */;
  %572 = cast(%571, dtype="float32") /* ty=Tensor[(1, 5, 13), float32] */;
  %573 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
  %574 = @func_1905() /* ty=(Tensor[(39, 4), float32], Tensor[(11, ?, 9), int8], Tensor[(99), int8]) */;
  %575 = %563.0;
  %576 = asinh(%572) /* ty=Tensor[(1, 5, 13), float32] */;
  %577 = %573.0;
  %578 = %574.0;
  (%575, meta[relay.Constant][28] /* ty=Tensor[(99), int8] */, %576, %577, %578)
}

def @func_660(%var_644: Tensor[(1, 13, 14), bool], %var_645: Tensor[(5, 13, 14), bool]) -> (Tensor[(5, 13, 14), bool], Tensor[(5, 13, 14), float32]) {
  %579 = cast(%var_644, dtype="bool") /* ty=Tensor[(1, 13, 14), bool] */;
  %580 = cast(%var_645, dtype="bool") /* ty=Tensor[(5, 13, 14), bool] */;
  %581 = cast(%var_645, dtype="float32") /* ty=Tensor[(5, 13, 14), float32] */;
  %582 = logical_or(%579, %580) /* ty=Tensor[(5, 13, 14), bool] */;
  %583 = log(%581) /* ty=Tensor[(5, 13, 14), float32] */;
  (%582, %583)
}

def @func_3670(%var_3661: uint64, %var_3662: Tensor[(2, 15, 15), uint64]) -> Tensor[(2, 15, 15), uint64] {
  %584 = cast(%var_3661, dtype="uint64") /* ty=uint64 */;
  %585 = cast(%var_3662, dtype="uint64") /* ty=Tensor[(2, 15, 15), uint64] */;
  right_shift(%584, %585) /* ty=Tensor[(2, 15, 15), uint64] */
}

def @func_3436() -> Tensor[(11, ?, 9), int8] {
  %586 = @func_2192() /* ty=(Tensor[(11, ?, 9), int8], Tensor[(11, ?, 9), int8]) */;
  %586.0
}

def @func_2919(%var_2901: Tensor[(1300, 1), int16], %var_2902: Tensor[(462), float32]) -> (Tensor[(1, 16, 1890), float32], Tensor[(14, 3, 11), float32], Tensor[(1300, 1), int16], Tensor[(462), float32]) {
  %587 = @func_2747() /* ty=(Tensor[(1, 16, 1890), float32],) */;
  %588 = cast(%var_2901, dtype="int16") /* ty=Tensor[(1300, 1), int16] */;
  %589 = cast(%var_2902, dtype="float32") /* ty=Tensor[(462), float32] */;
  %590 = reshape(%588, newshape=[13, 10, 10]) /* ty=Tensor[(13, 10, 10), int16] */;
  %591 = reshape(%589, newshape=[462]) /* ty=Tensor[(462), float32] */;
  %592 = @func_2062(%590, %591) /* ty=(Tensor[(13, 10, 10), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) */;
  %593 = %587.0;
  %594 = %592.1;
  (%593, %594, %var_2901, %var_2902)
}

def @func_3098(%var_3089: Tensor[(1080, 224), float64], %var_3090: Tensor[(2, 300), uint8], %var_3091: Tensor[(181440), float64]) -> (Tensor[(156), float32], Tensor[(1, 1200), float32], Tensor[(15, 6, 14), float64], Tensor[(1, 5, 13), float64], Tensor[(39, 4), float32], Tensor[(7, 7, 14), float32], Tensor[(462), float32], Tensor[(1080, 224), float64], Tensor[(2, 300), uint8], Tensor[(181440), float64]) {
  %595 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 1200), float32] */, dtype="float32") /* ty=Tensor[(1, 1200), float32] */;
  %596 = reshape(%595, newshape=[16, 15, 5]) /* ty=Tensor[(16, 15, 5), float32] */;
  %597 = @func_626(%596) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(156), float32], Tensor[(4, 13, 3), float32], Tensor[(16, 15, 5), bool]) */;
  %598 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 6, 14), float32] */, dtype="float32") /* ty=Tensor[(15, 6, 14), float32] */;
  %599 = log(%598) /* ty=Tensor[(15, 6, 14), float32] */;
  %600 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 6, 14), float32] */, dtype="uint32") /* ty=Tensor[(15, 6, 14), uint32] */;
  %601 = shape_of(%599, dtype="int32") /* ty=Tensor[(3), int32] */;
  %602 = cast(%599, dtype="uint32") /* ty=Tensor[(15, 6, 14), uint32] */;
  %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %604 = left_shift(%602, %603) /* ty=Tensor[(15, 6, 14), uint32] */;
  %605 = cast(%604, dtype="float64") /* ty=Tensor[(15, 6, 14), float64] */;
  %606 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
  %607 = @func_1866() /* ty=(Tensor[(39, 4), float32],) */;
  %608 = cast(meta[relay.Constant][31] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %609 = cast(%var_3089, dtype="float64") /* ty=Tensor[(1080, 224), float64] */;
  %610 = cast(%var_3089, dtype="float32") /* ty=Tensor[(1080, 224), float32] */;
  %611 = cast(%var_3090, dtype="uint8") /* ty=Tensor[(2, 300), uint8] */;
  %612 = cast(%var_3091, dtype="float64") /* ty=Tensor[(181440), float64] */;
  %613 = cast(%var_3089, dtype="uint8") /* ty=Tensor[(1080, 224), uint8] */;
  %614 = reshape(%608, newshape=[462]) /* ty=Tensor[(462), float32] */;
  %615 = reshape(%609, newshape=[8, 16, 1890]) /* ty=Tensor[(8, 16, 1890), float64] */;
  %616 = reshape(%610, newshape=[8, 16, 1890]) /* ty=Tensor[(8, 16, 1890), float32] */;
  %617 = reshape(%611, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %618 = reshape(%612, newshape=[6, 16, 1890]) /* ty=Tensor[(6, 16, 1890), float64] */;
  %619 = reshape(%613, newshape=[8, 16, 1890]) /* ty=Tensor[(8, 16, 1890), uint8] */;
  %620 = @func_2421(%614, %615, %616, %617, %618, %619) /* ty=(Tensor[(14, 3, 11), float32], Tensor[(462), float32], Tensor[(8, 16, 1890), int64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(7, 7, 14), float32], Tensor[(686), float32], Tensor[(1, 16, 1890), float64], Tensor[(11, ?, 9), int8], Tensor[(75), uint8], Tensor[(600), uint8], Tensor[(6, 16, 1890), bool], Tensor[(8, 16, 1890), float32], Tensor[(8, 16, 1890), float32], Tensor[(1, 5, 13), float64]) */;
  %621 = %597.1;
  %622 = sin(%605) /* ty=Tensor[(15, 6, 14), float64] */;
  %623 = %606.1;
  %624 = %607.0;
  %625 = %620.5;
  (%621, meta[relay.Constant][29] /* ty=Tensor[(1, 1200), float32] */, %622, %623, %624, %625, meta[relay.Constant][31] /* ty=Tensor[(462), float32] */, %var_3089, %var_3090, %var_3091)
}

def @func_2501(%var_2484: Tensor[(14, 13, 10), int16]) -> Tensor[(14, 13, 10), int16] {
  %626 = cast(%var_2484, dtype="int16") /* ty=Tensor[(14, 13, 10), int16] */;
  %627 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(14, 13, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %628 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 13, 10), int16] */, dtype="int16") /* ty=Tensor[(14, 13, 10), int16] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  multiply(%628, %629) /* ty=Tensor[(14, 13, 10), int16] */
}

def @func_6871() -> Tensor[(15, 8), float64] {
  %630 = @func_5393() /* ty=(Tensor[(15, 8), float64],) */;
  %630.0
}

def @func_7031() -> (Tensor[(14, 3, 11), int16],) {
  %631 = @func_5241() /* ty=Tensor[(14, 3, 11), int16] */;
  (%631,)
}

def @func_1662(%var_1659: Tensor[(7, 7, 14), float32]) -> (Tensor[(7, 7, 14), float32],) {
  %632 = cast(%var_1659, dtype="float32") /* ty=Tensor[(7, 7, 14), float32] */;
  %633 = asin(%632) /* ty=Tensor[(7, 7, 14), float32] */;
  (%633,)
}

def @func_6823(%var_6821: Tensor[(77, 6), float32]) -> (Tensor[(99), int8], Tensor[(14, 3, 11), float32], Tensor[(10, 130), int16], Tensor[(77, 6), float32]) {
  %634 = @func_5182() /* ty=(Tensor[(99), int8],) */;
  %635 = cast(meta[relay.Constant][33] /* ty=Tensor[(10, 130), int16] */, dtype="int16") /* ty=Tensor[(10, 130), int16] */;
  %636 = cast(%var_6821, dtype="float32") /* ty=Tensor[(77, 6), float32] */;
  %637 = reshape(%635, newshape=[1300, 1]) /* ty=Tensor[(1300, 1), int16] */;
  %638 = reshape(%636, newshape=[462]) /* ty=Tensor[(462), float32] */;
  %639 = @func_2919(%637, %638) /* ty=(Tensor[(1, 16, 1890), float32], Tensor[(14, 3, 11), float32], Tensor[(1300, 1), int16], Tensor[(462), float32]) */;
  %640 = %634.0;
  %641 = %639.1;
  (%640, %641, meta[relay.Constant][33] /* ty=Tensor[(10, 130), int16] */, %var_6821)
}

def @func_2747() -> (Tensor[(1, 16, 1890), float32],) {
  %642 = @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %643 = %642.0;
  %644 = cast(%643, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
  %645 = asinh(%644) /* ty=Tensor[(1, 16, 1890), float32] */;
  (%645,)
}

def @func_3703() -> (Tensor[(4, 13, 3), float32],) {
  %646 = @func_3007() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) */;
  %647 = %646.1;
  (%647,)
}

def @func_2173() -> (Tensor[(1, 16, 1890), float64],) {
  %648 = @func_1927() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %649 = %648.0;
  (%649,)
}

def @func_4948() -> (Tensor[(156), float32],) {
  %650 = @func_3007() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) */;
  %651 = %650.2;
  (%651,)
}

def @func_5434(%var_5414: Tensor[(1300), int16], %var_5415: Tensor[(462), float32]) -> (Tensor[(11, ?, 9), int8], Tensor[(14, 3, 11), float32], Tensor[(1300), int16], Tensor[(462), float32], Tensor[(11, ?, 9), int8]) {
  %652 = @func_3731() /* ty=(Tensor[(11, ?, 9), int8],) */;
  %653 = cast(%var_5414, dtype="int16") /* ty=Tensor[(1300), int16] */;
  %654 = cast(%var_5415, dtype="float32") /* ty=Tensor[(462), float32] */;
  %655 = reshape(%653, newshape=[13, 10, 10]) /* ty=Tensor[(13, 10, 10), int16] */;
  %656 = reshape(%654, newshape=[462]) /* ty=Tensor[(462), float32] */;
  %657 = @func_2062(%655, %656) /* ty=(Tensor[(13, 10, 10), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) */;
  %658 = %652.0;
  %659 = cast(%658, dtype="int8") /* ty=Tensor[(11, ?, 9), int8] */;
  %660 = reshape(%659, newshape=[11, 9]) /* ty=Tensor[(11, 9), int8] */;
  %661 = @func_4967(%660) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(11, ?, 9), int8], Tensor[(11, 9), int8]) */;
  %662 = %657.1;
  %663 = %661.1;
  (%658, %662, %var_5414, %var_5415, %663)
}

def @func_4559(%var_4504: float64, %var_4505: Tensor[(13, 1, 12), float64], %var_4509: Tensor[(13, 11, 12), float64], %var_4550: Tensor[(182), bool], %var_4557: Tensor[(7, 66), float32]) -> (Tensor[(1, 16, 1890), float64], Tensor[(13, 11, 12), float64], Tensor[(16, 15), uint64], Tensor[(240), uint64], Tensor[(5, 13, 14), bool], Tensor[(182), bool], Tensor[(910), bool], Tensor[(14, 3, 11), float32], Tensor[(7, 66), float32]) {
  %664 = @func_3136() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %665 = cast(%var_4504, dtype="float64") /* ty=float64 */;
  %666 = cast(%var_4505, dtype="float64") /* ty=Tensor[(13, 1, 12), float64] */;
  %667 = floor_mod(%665, %666) /* ty=Tensor[(13, 1, 12), float64] */;
  %668 = cast(%667, dtype="bool") /* ty=Tensor[(13, 1, 12), bool] */;
  %669 = cast(%var_4509, dtype="bool") /* ty=Tensor[(13, 11, 12), bool] */;
  %670 = equal(%668, %669) /* ty=Tensor[(13, 11, 12), bool] */;
  %671 = cast(%670, dtype="float64") /* ty=Tensor[(13, 11, 12), float64] */;
  %672 = cast(meta[relay.Constant][34] /* ty=Tensor[(240), uint64] */, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %673 = cast(meta[relay.Constant][34] /* ty=Tensor[(240), uint64] */, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %674 = reshape(%672, newshape=[16, 15]) /* ty=Tensor[(16, 15), uint64] */;
  %675 = reshape(%673, newshape=[16, 15]) /* ty=Tensor[(16, 15), uint64] */;
  %676 = @func_4254(%674, %675) /* ty=(Tensor[(16, 15), uint64],) */;
  %677 = cast(%var_4550, dtype="bool") /* ty=Tensor[(182), bool] */;
  %678 = cast(meta[relay.Constant][35] /* ty=Tensor[(910), bool] */, dtype="bool") /* ty=Tensor[(910), bool] */;
  %679 = reshape(%677, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), bool] */;
  %680 = reshape(%678, newshape=[5, 13, 14]) /* ty=Tensor[(5, 13, 14), bool] */;
  %681 = @func_660(%679, %680) /* ty=(Tensor[(5, 13, 14), bool], Tensor[(5, 13, 14), float32]) */;
  %682 = cast(%var_4557, dtype="float32") /* ty=Tensor[(7, 66), float32] */;
  %683 = reshape(%682, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), float32] */;
  %684 = %664.0;
  %685 = log(%671) /* ty=Tensor[(13, 11, 12), float64] */;
  %686 = %676.0;
  %687 = %681.0;
  %688 = @func_989(%683) /* ty=Tensor[(14, 3, 11), float32] */;
  (%684, %685, %686, meta[relay.Constant][34] /* ty=Tensor[(240), uint64] */, %687, %var_4550, meta[relay.Constant][35] /* ty=Tensor[(910), bool] */, %688, %var_4557)
}

def @func_4724() -> (Tensor[(4, 13, 3), float32],) {
  %689 = @func_4386() /* ty=Tensor[(4, 13, 3), float32] */;
  (%689,)
}

def @func_2455(%var_2451: Tensor[(686), float32]) -> (Tensor[(39, 4), float32], Tensor[(7, 7, 14), float32], Tensor[(686), float32]) {
  %690 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
  %691 = cast(%var_2451, dtype="float32") /* ty=Tensor[(686), float32] */;
  %692 = reshape(%691, newshape=[7, 7, 14]) /* ty=Tensor[(7, 7, 14), float32] */;
  %693 = @func_1662(%692) /* ty=(Tensor[(7, 7, 14), float32],) */;
  %694 = %690.0;
  %695 = %693.0;
  (%694, %695, %var_2451)
}

def @func_5465() -> (Tensor[(1, 5, 13), float32],) {
  %696 = @func_3903() /* ty=(Tensor[(4, 13, 3), float32], Tensor[(99), int8], Tensor[(1, 5, 13), float32], Tensor[(39, 4), float32], Tensor[(39, 4), float32]) */;
  %697 = %696.2;
  (%697,)
}

def @func_5611(%var_5593: Tensor[(1, 240), uint64]) -> (Tensor[(39, 4), float32], Tensor[(16, 15), uint64], Tensor[(1, 240), uint64], Tensor[(4, 13, 3), float32], Tensor[(99, 1), int8]) {
  %698 = @func_5353() /* ty=(Tensor[(39, 4), float32], Tensor[(99), int8]) */;
  %699 = cast(%var_5593, dtype="uint64") /* ty=Tensor[(1, 240), uint64] */;
  %700 = cast(%var_5593, dtype="uint64") /* ty=Tensor[(1, 240), uint64] */;
  %701 = reshape(%699, newshape=[16, 15]) /* ty=Tensor[(16, 15), uint64] */;
  %702 = reshape(%700, newshape=[16, 15]) /* ty=Tensor[(16, 15), uint64] */;
  %703 = @func_4254(%701, %702) /* ty=(Tensor[(16, 15), uint64],) */;
  %704 = %698.0;
  %705 = cast(%704, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %706 = cast(%704, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %707 = reshape(%705, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %708 = reshape(%706, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %709 = @func_357(%707, %708) /* ty=(Tensor[(4, 13, 3), float32],) */;
  %710 = @func_3426() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(99, 1), int8], Tensor[(99), int8]) */;
  %711 = %703.0;
  %712 = %709.0;
  %713 = %710.1;
  (%704, %711, %var_5593, %712, %713)
}

def @func_6986() -> (Tensor[(4, 13, 3), float32], Tensor[(99), int8]) {
  %714 = @func_3703() /* ty=(Tensor[(4, 13, 3), float32],) */;
  %715 = @func_5353() /* ty=(Tensor[(39, 4), float32], Tensor[(99), int8]) */;
  %716 = %714.0;
  %717 = %715.1;
  (%716, %717)
}

def @func_1781() -> (Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) {
  %718 = cast(meta[relay.Constant][36] /* ty=Tensor[(1890), float32] */, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %719 = reshape(%718, newshape=[15, 14, 9]) /* ty=Tensor[(15, 14, 9), float32] */;
  %720 = @func_1398(%719) /* ty=(Tensor[(15, 14, 9), float64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(4, 13, 3), float32], Tensor[(39, 4), float32]) */;
  %721 = cast(meta[relay.Constant][37] /* ty=Tensor[(65), float64] */, dtype="float64") /* ty=Tensor[(65), float64] */;
  %722 = reshape(%721, newshape=[1, 5, 13]) /* ty=Tensor[(1, 5, 13), float64] */;
  %723 = @func_972(%722) /* ty=(Tensor[(1, 5, 13), float64],) */;
  %724 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 16, 1), float64] */, dtype="float64") /* ty=Tensor[(1, 16, 1), float64] */;
  %725 = asin(%724) /* ty=Tensor[(1, 16, 1), float64] */;
  %726 = cast(meta[relay.Constant][36] /* ty=Tensor[(1890), float32] */, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %727 = cast(%725, dtype="float64") /* ty=Tensor[(1, 16, 1), float64] */;
  %728 = %720.4;
  %729 = %723.0;
  %730 = mod(%726, %727) /* ty=Tensor[(1, 16, 1890), float64] */;
  (%728, %729, meta[relay.Constant][37] /* ty=Tensor[(65), float64] */, %730)
}

def @func_2062(%var_2035: Tensor[(13, 10, 10), int16], %var_2058: Tensor[(462), float32]) -> (Tensor[(13, 10, 10), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) {
  %731 = cast(meta[relay.Constant][39] /* ty=Tensor[(13, 10, 10), int16] */, dtype="bool") /* ty=Tensor[(13, 10, 10), bool] */;
  %732 = shape_of(%var_2035, dtype="int32") /* ty=Tensor[(3), int32] */;
  %733 = cast(%var_2035, dtype="bool") /* ty=Tensor[(13, 10, 10), bool] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %735 = greater_equal(%733, %734) /* ty=Tensor[(13, 10, 10), bool] */;
  %736 = cast(%735, dtype="float32") /* ty=Tensor[(13, 10, 10), float32] */;
  %737 = shape_of(%var_2035, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%var_2035, dtype="float32") /* ty=Tensor[(13, 10, 10), float32] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %740 = cast(%var_2058, dtype="float32") /* ty=Tensor[(462), float32] */;
  %741 = reshape(%740, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), float32] */;
  %742 = floor_divide(%738, %739) /* ty=Tensor[(13, 10, 10), float32] */;
  %743 = @func_989(%741) /* ty=Tensor[(14, 3, 11), float32] */;
  (%742, %743, %var_2058)
}

def @func_3731() -> (Tensor[(11, ?, 9), int8],) {
  %744 = @func_3436() /* ty=Tensor[(11, ?, 9), int8] */;
  (%744,)
}

def @func_6129() -> Tensor[(39, 4), float32] {
  %745 = @func_3991() /* ty=(Tensor[(39, 4), float32],) */;
  %745.0
}

def @func_3840() -> (Tensor[(11, ?, 9), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) {
  %746 = @func_3731() /* ty=(Tensor[(11, ?, 9), int8],) */;
  %747 = %746.0;
  %748 = cast(%747, dtype="float32") /* ty=Tensor[(11, ?, 9), float32] */;
  %749 = cast(meta[relay.Constant][40] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %750 = reshape(%749, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), float32] */;
  %751 = acosh(%748) /* ty=Tensor[(11, ?, 9), float32] */;
  %752 = @func_989(%750) /* ty=Tensor[(14, 3, 11), float32] */;
  (%751, %752, meta[relay.Constant][40] /* ty=Tensor[(462), float32] */)
}

def @func_4742(%var_4732: Tensor[(3, 10, 11), float32], %var_4733: Tensor[(3, 10, 11), float32]) -> (Tensor[(3, 10, 11), float32], Tensor[(3, 10, 11), float64]) {
  %753 = cast(%var_4733, dtype="float32") /* ty=Tensor[(3, 10, 11), float32] */;
  %754 = shape_of(%var_4732, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(%var_4732, dtype="float32") /* ty=Tensor[(3, 10, 11), float32] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %757 = cast(%var_4732, dtype="float64") /* ty=Tensor[(3, 10, 11), float64] */;
  %758 = minimum(%755, %756) /* ty=Tensor[(3, 10, 11), float32] */;
  %759 = atan(%757) /* ty=Tensor[(3, 10, 11), float64] */;
  (%758, %759)
}

def @func_4909() -> Tensor[(1, 16, 1890), float64] {
  %760 = @func_3136() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %760.0
}

def @func_5280(%var_5257: Tensor[(182), bool]) -> (Tensor[(462), float32], Tensor[(5, 13, 14), bool], Tensor[(182), bool], Tensor[(455, 2), bool], Tensor[(1, 16, 1890), float64], Tensor[(14, 3, 11), int16]) {
  %761 = @func_3840() /* ty=(Tensor[(11, ?, 9), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) */;
  %762 = cast(%var_5257, dtype="bool") /* ty=Tensor[(182), bool] */;
  %763 = cast(meta[relay.Constant][41] /* ty=Tensor[(455, 2), bool] */, dtype="bool") /* ty=Tensor[(455, 2), bool] */;
  %764 = reshape(%762, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), bool] */;
  %765 = reshape(%763, newshape=[5, 13, 14]) /* ty=Tensor[(5, 13, 14), bool] */;
  %766 = @func_660(%764, %765) /* ty=(Tensor[(5, 13, 14), bool], Tensor[(5, 13, 14), float32]) */;
  %767 = @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %768 = %761.2;
  %769 = %766.0;
  %770 = %767.0;
  %771 = @func_5241() /* ty=Tensor[(14, 3, 11), int16] */;
  (%768, %769, %var_5257, meta[relay.Constant][41] /* ty=Tensor[(455, 2), bool] */, %770, %771)
}

def @func_3379(%var_3303: Tensor[(99, 1), int8], %var_3309: Tensor[(393120), float64], %var_3351: Tensor[(600), uint8], %var_3374: Tensor[(15, 16, 1890), float32]) -> (Tensor[(11, ?, 9), int8], Tensor[(99, 1), int8], Tensor[(13, 16, 1890), bool], Tensor[(483840), float64], Tensor[(910), bool], Tensor[(11, ?, 9), int8], Tensor[(39, 4), float32], Tensor[(393120), bool], Tensor[(1080, 224), float64], Tensor[(241920), float64], Tensor[(600), uint8], Tensor[(181440), float64], Tensor[(14, 3, 11), float32], Tensor[(77, 6), float32], Tensor[(15, 16, 1890), bool]) {
  %772 = cast(%var_3303, dtype="int8") /* ty=Tensor[(99, 1), int8] */;
  %773 = cast(%var_3303, dtype="int8") /* ty=Tensor[(99, 1), int8] */;
  %774 = reshape(%772, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %775 = reshape(%773, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %776 = cast(meta[relay.Constant][42] /* ty=Tensor[(483840), float64] */, dtype="float64") /* ty=Tensor[(483840), float64] */;
  %777 = cast(meta[relay.Constant][43] /* ty=Tensor[(910), bool] */, dtype="bool") /* ty=Tensor[(910), bool] */;
  %778 = cast(%var_3309, dtype="float64") /* ty=Tensor[(393120), float64] */;
  %779 = reshape(%776, newshape=[16, 16, 1890]) /* ty=Tensor[(16, 16, 1890), float64] */;
  %780 = reshape(%777, newshape=[910]) /* ty=Tensor[(910), bool] */;
  %781 = reshape(%778, newshape=[13, 16, 1890]) /* ty=Tensor[(13, 16, 1890), float64] */;
  %782 = @func_2862(%779, %780, %781) /* ty=(Tensor[(16, 16, 1890), int64], Tensor[(5, 13, 14), float32], Tensor[(182), bool], Tensor[(910), bool], Tensor[(13, 16, 1890), bool], Tensor[(?, 16, 1890), float32], Tensor[(65), float64], Tensor[(75), uint8], Tensor[(16, 16, 1890), bool]) */;
  %783 = cast(%var_3303, dtype="int8") /* ty=Tensor[(99, 1), int8] */;
  %784 = @func_1064(%774, %775) /* ty=Tensor[(11, ?, 9), int8] */;
  %785 = cast(%784, dtype="int8") /* ty=Tensor[(11, ?, 9), int8] */;
  %786 = reshape(%783, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %787 = reshape(%785, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %788 = @func_1866() /* ty=(Tensor[(39, 4), float32],) */;
  %789 = cast(%var_3309, dtype="float64") /* ty=Tensor[(393120), float64] */;
  %790 = rsqrt(%789) /* ty=Tensor[(393120), float64] */;
  %791 = cast(meta[relay.Constant][44] /* ty=Tensor[(393120), float64] */, dtype="bool") /* ty=Tensor[(393120), bool] */;
  %792 = shape_of(%790, dtype="int32") /* ty=Tensor[(1), int32] */;
  %793 = cast(%790, dtype="bool") /* ty=Tensor[(393120), bool] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?), bool] */;
  %795 = cast(meta[relay.Constant][45] /* ty=Tensor[(241920), float64] */, dtype="float64") /* ty=Tensor[(241920), float64] */;
  %796 = cast(%var_3351, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %797 = cast(meta[relay.Constant][46] /* ty=Tensor[(181440), float64] */, dtype="float64") /* ty=Tensor[(181440), float64] */;
  %798 = reshape(%795, newshape=[1080, 224]) /* ty=Tensor[(1080, 224), float64] */;
  %799 = reshape(%796, newshape=[2, 300]) /* ty=Tensor[(2, 300), uint8] */;
  %800 = reshape(%797, newshape=[181440]) /* ty=Tensor[(181440), float64] */;
  %801 = @func_3098(%798, %799, %800) /* ty=(Tensor[(156), float32], Tensor[(1, 1200), float32], Tensor[(15, 6, 14), float64], Tensor[(1, 5, 13), float64], Tensor[(39, 4), float32], Tensor[(7, 7, 14), float32], Tensor[(462), float32], Tensor[(1080, 224), float64], Tensor[(2, 300), uint8], Tensor[(181440), float64]) */;
  %802 = cast(meta[relay.Constant][47] /* ty=Tensor[(77, 6), float32] */, dtype="float32") /* ty=Tensor[(77, 6), float32] */;
  %803 = reshape(%802, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), float32] */;
  %804 = @func_3136() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %805 = %804.0;
  %806 = cast(%805, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
  %807 = cos(%806) /* ty=Tensor[(1, 16, 1890), float32] */;
  %808 = cast(%807, dtype="bool") /* ty=Tensor[(1, 16, 1890), bool] */;
  %809 = cast(%var_3374, dtype="bool") /* ty=Tensor[(15, 16, 1890), bool] */;
  %810 = %782.4;
  %811 = @func_1064(%786, %787) /* ty=Tensor[(11, ?, 9), int8] */;
  %812 = %788.0;
  %813 = less_equal(%793, %794) /* ty=Tensor[(393120), bool] */;
  %814 = %801.7;
  %815 = @func_989(%803) /* ty=Tensor[(14, 3, 11), float32] */;
  %816 = greater(%808, %809) /* ty=Tensor[(15, 16, 1890), bool] */;
  (%784, %var_3303, %810, meta[relay.Constant][42] /* ty=Tensor[(483840), float64] */, meta[relay.Constant][43] /* ty=Tensor[(910), bool] */, %811, %812, %813, %814, meta[relay.Constant][45] /* ty=Tensor[(241920), float64] */, %var_3351, meta[relay.Constant][46] /* ty=Tensor[(181440), float64] */, %815, meta[relay.Constant][47] /* ty=Tensor[(77, 6), float32] */, %816)
}

def @func_989(%var_984: Tensor[(14, 3, 11), float32]) -> Tensor[(14, 3, 11), float32] {
  %817 = cast(%var_984, dtype="float32") /* ty=Tensor[(14, 3, 11), float32] */;
  log10(%817) /* ty=Tensor[(14, 3, 11), float32] */
}

def @func_7081() -> (Tensor[(156), float32], Tensor[(11, ?, 9), int8]) {
  %818 = @func_3007() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) */;
  %819 = %818.2;
  %820 = @func_3436() /* ty=Tensor[(11, ?, 9), int8] */;
  (%819, %820)
}

def @main() -> (Tensor[(1, 5, 13), float32], Tensor[(1, 16, 1890), float64], Tensor[(1, 16, 1890), float64], Tensor[(5, 16, 1890), bool]) {
  %821 = @func_5465() /* ty=(Tensor[(1, 5, 13), float32],) */;
  %822 = @func_6366() /* ty=(Tensor[(10, 16, 1890), float32], Tensor[(1, 16, 1890), float64]) */;
  %823 = %822.1;
  %824 = cast(%823, dtype="float64") /* ty=Tensor[(1, 16, 1890), float64] */;
  %825 = cast(%823, dtype="bool") /* ty=Tensor[(1, 16, 1890), bool] */;
  %826 = cast(meta[relay.Constant][48] /* ty=Tensor[(5, 16, 1890), float64] */, dtype="bool") /* ty=Tensor[(5, 16, 1890), bool] */;
  %827 = %821.0;
  %828 = acosh(%824) /* ty=Tensor[(1, 16, 1890), float64] */;
  %829 = @func_4909() /* ty=Tensor[(1, 16, 1890), float64] */;
  %830 = less_equal(%825, %826) /* ty=Tensor[(5, 16, 1890), bool] */;
  (%827, %828, %829, %830)
}

def @func_5393() -> (Tensor[(15, 8), float64],) {
  %831 = cast(-1.43128f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %832 = cast(meta[relay.Constant][49] /* ty=Tensor[(15, 8), float64] */, dtype="float64") /* ty=Tensor[(15, 8), float64] */;
  %833 = floor_divide(%831, %832) /* ty=Tensor[(15, 8), float64] */;
  (%833,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7031() -> (Tensor[(14, 3, 11), int16],) {
  %0 = @func_5241() /* ty=Tensor[(14, 3, 11), int16] */;
  (%0,)
}

def @func_3384(%var_3380: Tensor[(99, 1), int8], %var_3381: Tensor[(393120), float64], %var_3382: Tensor[(600), uint8], %var_3383: Tensor[(15, 16, 1890), float32]) -> (Tensor[(11, ?, 9), int8], Tensor[(99, 1), int8], Tensor[(13, 16, 1890), bool], Tensor[(483840), float64], Tensor[(910), bool], Tensor[(11, ?, 9), int8], Tensor[(39, 4), float32], Tensor[(393120), bool], Tensor[(1080, 224), float64], Tensor[(241920), float64], Tensor[(600), uint8], Tensor[(181440), float64], Tensor[(14, 3, 11), float32], Tensor[(77, 6), float32], Tensor[(15, 16, 1890), bool]) {
  %46 = fn (%var_3303: Tensor[(99, 1), int8], %var_3309: Tensor[(393120), float64], %var_3351: Tensor[(600), uint8], %var_3374: Tensor[(15, 16, 1890), float32]) -> (Tensor[(11, ?, 9), int8], Tensor[(99, 1), int8], Tensor[(13, 16, 1890), bool], Tensor[(483840), float64], Tensor[(910), bool], Tensor[(11, ?, 9), int8], Tensor[(39, 4), float32], Tensor[(393120), bool], Tensor[(1080, 224), float64], Tensor[(241920), float64], Tensor[(600), uint8], Tensor[(181440), float64], Tensor[(14, 3, 11), float32], Tensor[(77, 6), float32], Tensor[(15, 16, 1890), bool]) {
    %1 = cast(%var_3303, dtype="int8") /* ty=Tensor[(99, 1), int8] */;
    %2 = cast(%var_3303, dtype="int8") /* ty=Tensor[(99, 1), int8] */;
    %3 = reshape(%1, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
    %4 = reshape(%2, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
    %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(483840), float64] */, dtype="float64") /* ty=Tensor[(483840), float64] */;
    %6 = cast(meta[relay.Constant][1] /* ty=Tensor[(910), bool] */, dtype="bool") /* ty=Tensor[(910), bool] */;
    %7 = cast(%var_3309, dtype="float64") /* ty=Tensor[(393120), float64] */;
    %8 = reshape(%5, newshape=[16, 16, 1890]) /* ty=Tensor[(16, 16, 1890), float64] */;
    %9 = reshape(%6, newshape=[910]) /* ty=Tensor[(910), bool] */;
    %10 = reshape(%7, newshape=[13, 16, 1890]) /* ty=Tensor[(13, 16, 1890), float64] */;
    %11 = @func_2862(%8, %9, %10) /* ty=(Tensor[(16, 16, 1890), int64], Tensor[(5, 13, 14), float32], Tensor[(182), bool], Tensor[(910), bool], Tensor[(13, 16, 1890), bool], Tensor[(?, 16, 1890), float32], Tensor[(65), float64], Tensor[(75), uint8], Tensor[(16, 16, 1890), bool]) */;
    %12 = cast(%var_3303, dtype="int8") /* ty=Tensor[(99, 1), int8] */;
    %13 = @func_1064(%3, %4) /* ty=Tensor[(11, ?, 9), int8] */;
    %14 = cast(%13, dtype="int8") /* ty=Tensor[(11, ?, 9), int8] */;
    %15 = reshape(%12, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
    %16 = reshape(%14, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
    %17 = @func_1866() /* ty=(Tensor[(39, 4), float32],) */;
    %18 = cast(%var_3309, dtype="float64") /* ty=Tensor[(393120), float64] */;
    %19 = rsqrt(%18) /* ty=Tensor[(393120), float64] */;
    %20 = cast(meta[relay.Constant][2] /* ty=Tensor[(393120), float64] */, dtype="bool") /* ty=Tensor[(393120), bool] */;
    %21 = shape_of(%19, dtype="int32") /* ty=Tensor[(1), int32] */;
    %22 = cast(%19, dtype="bool") /* ty=Tensor[(393120), bool] */;
    %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?), bool] */;
    %24 = cast(meta[relay.Constant][3] /* ty=Tensor[(241920), float64] */, dtype="float64") /* ty=Tensor[(241920), float64] */;
    %25 = cast(%var_3351, dtype="uint8") /* ty=Tensor[(600), uint8] */;
    %26 = cast(meta[relay.Constant][4] /* ty=Tensor[(181440), float64] */, dtype="float64") /* ty=Tensor[(181440), float64] */;
    %27 = reshape(%24, newshape=[1080, 224]) /* ty=Tensor[(1080, 224), float64] */;
    %28 = reshape(%25, newshape=[2, 300]) /* ty=Tensor[(2, 300), uint8] */;
    %29 = reshape(%26, newshape=[181440]) /* ty=Tensor[(181440), float64] */;
    %30 = @func_3098(%27, %28, %29) /* ty=(Tensor[(156), float32], Tensor[(1, 1200), float32], Tensor[(15, 6, 14), float64], Tensor[(1, 5, 13), float64], Tensor[(39, 4), float32], Tensor[(7, 7, 14), float32], Tensor[(462), float32], Tensor[(1080, 224), float64], Tensor[(2, 300), uint8], Tensor[(181440), float64]) */;
    %31 = cast(meta[relay.Constant][5] /* ty=Tensor[(77, 6), float32] */, dtype="float32") /* ty=Tensor[(77, 6), float32] */;
    %32 = reshape(%31, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), float32] */;
    %33 = @func_3136() /* ty=(Tensor[(1, 16, 1890), float64],) */;
    %34 = %33.0;
    %35 = cast(%34, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
    %36 = cos(%35) /* ty=Tensor[(1, 16, 1890), float32] */;
    %37 = cast(%36, dtype="bool") /* ty=Tensor[(1, 16, 1890), bool] */;
    %38 = cast(%var_3374, dtype="bool") /* ty=Tensor[(15, 16, 1890), bool] */;
    %39 = %11.4;
    %40 = @func_1064(%15, %16) /* ty=Tensor[(11, ?, 9), int8] */;
    %41 = %17.0;
    %42 = less_equal(%22, %23) /* ty=Tensor[(393120), bool] */;
    %43 = %30.7;
    %44 = @func_989(%32) /* ty=Tensor[(14, 3, 11), float32] */;
    %45 = greater(%37, %38) /* ty=Tensor[(15, 16, 1890), bool] */;
    (%13, %var_3303, %39, meta[relay.Constant][0] /* ty=Tensor[(483840), float64] */, meta[relay.Constant][1] /* ty=Tensor[(910), bool] */, %40, %41, %42, %43, meta[relay.Constant][3] /* ty=Tensor[(241920), float64] */, %var_3351, meta[relay.Constant][4] /* ty=Tensor[(181440), float64] */, %44, meta[relay.Constant][5] /* ty=Tensor[(77, 6), float32] */, %45)
  };
  %46(%var_3380, %var_3381, %var_3382, %var_3383) /* ty=(Tensor[(11, ?, 9), int8], Tensor[(99, 1), int8], Tensor[(13, 16, 1890), bool], Tensor[(483840), float64], Tensor[(910), bool], Tensor[(11, ?, 9), int8], Tensor[(39, 4), float32], Tensor[(393120), bool], Tensor[(1080, 224), float64], Tensor[(241920), float64], Tensor[(600), uint8], Tensor[(181440), float64], Tensor[(14, 3, 11), float32], Tensor[(77, 6), float32], Tensor[(15, 16, 1890), bool]) */
}

def @func_1064(%var_1058: Tensor[(11, 1, 9), int8], %var_1059: Tensor[(11, 1, 9), int8]) -> Tensor[(11, ?, 9), int8] {
  %47 = cast(%var_1059, dtype="int8") /* ty=Tensor[(11, 1, 9), int8] */;
  %48 = shape_of(%var_1058, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%var_1058, dtype="int8") /* ty=Tensor[(11, 1, 9), int8] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%49, %50) /* ty=Tensor[(11, ?, 9), int8] */
}

def @func_3704() -> (Tensor[(4, 13, 3), float32],) {
  %53 = fn () -> (Tensor[(4, 13, 3), float32],) {
    %51 = @func_3007() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) */;
    %52 = %51.1;
    (%52,)
  };
  %53() /* ty=(Tensor[(4, 13, 3), float32],) */
}

def @func_3427() -> (Tensor[(1, 16, 1890), float64], Tensor[(99, 1), int8], Tensor[(99), int8]) {
  %60 = fn () -> (Tensor[(1, 16, 1890), float64], Tensor[(99, 1), int8], Tensor[(99), int8]) {
    %54 = @func_1927() /* ty=(Tensor[(1, 16, 1890), float64],) */;
    %55 = cast(meta[relay.Constant][6] /* ty=Tensor[(99), int8] */, dtype="int8") /* ty=Tensor[(99), int8] */;
    %56 = reshape(%55, newshape=[99, 1]) /* ty=Tensor[(99, 1), int8] */;
    %57 = @func_3241(%56) /* ty=(Tensor[(1, 5, 13), float64], Tensor[(99, 1), int8], Tensor[(39, 4), float32], Tensor[(39, 4), float64]) */;
    %58 = %54.0;
    %59 = %57.1;
    (%58, %59, meta[relay.Constant][6] /* ty=Tensor[(99), int8] */)
  };
  %60() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(99, 1), int8], Tensor[(99), int8]) */
}

def @func_4387() -> Tensor[(4, 13, 3), float32] {
  %62 = fn () -> Tensor[(4, 13, 3), float32] {
    %61 = @func_3703() /* ty=(Tensor[(4, 13, 3), float32],) */;
    %61.0
  };
  %62() /* ty=Tensor[(4, 13, 3), float32] */
}

def @func_4745(%var_4743: Tensor[(3, 10, 11), float32], %var_4744: Tensor[(3, 10, 11), float32]) -> (Tensor[(3, 10, 11), float32], Tensor[(3, 10, 11), float64]) {
  %70 = fn (%var_4732: Tensor[(3, 10, 11), float32], %var_4733: Tensor[(3, 10, 11), float32]) -> (Tensor[(3, 10, 11), float32], Tensor[(3, 10, 11), float64]) {
    %63 = cast(%var_4733, dtype="float32") /* ty=Tensor[(3, 10, 11), float32] */;
    %64 = shape_of(%var_4732, dtype="int32") /* ty=Tensor[(3), int32] */;
    %65 = cast(%var_4732, dtype="float32") /* ty=Tensor[(3, 10, 11), float32] */;
    %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %67 = cast(%var_4732, dtype="float64") /* ty=Tensor[(3, 10, 11), float64] */;
    %68 = minimum(%65, %66) /* ty=Tensor[(3, 10, 11), float32] */;
    %69 = atan(%67) /* ty=Tensor[(3, 10, 11), float64] */;
    (%68, %69)
  };
  %70(%var_4743, %var_4744) /* ty=(Tensor[(3, 10, 11), float32], Tensor[(3, 10, 11), float64]) */
}

def @func_5241() -> Tensor[(14, 3, 11), int16] {
  @func_4879() /* ty=Tensor[(14, 3, 11), int16] */
}

def @func_6294(%var_6293: Tensor[(14, 3, 11), float64]) -> (Tensor[(14, 3, 11), float32], Tensor[(462), float32]) {
  %81 = fn (%var_6283: Tensor[(14, 3, 11), float64]) -> (Tensor[(14, 3, 11), float32], Tensor[(462), float32]) {
    %71 = @func_5241() /* ty=Tensor[(14, 3, 11), int16] */;
    %72 = cast(%71, dtype="float64") /* ty=Tensor[(14, 3, 11), float64] */;
    %73 = erf(%72) /* ty=Tensor[(14, 3, 11), float64] */;
    %74 = cast(%var_6283, dtype="float32") /* ty=Tensor[(14, 3, 11), float32] */;
    %75 = shape_of(%73, dtype="int32") /* ty=Tensor[(3), int32] */;
    %76 = cast(%73, dtype="float32") /* ty=Tensor[(14, 3, 11), float32] */;
    %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %78 = @func_5337() /* ty=(Tensor[(462), float32], Tensor[(1, 16, 1890), float64], Tensor[(1, 16, 1890), float64]) */;
    %79 = floor_divide(%76, %77) /* ty=Tensor[(14, 3, 11), float32] */;
    %80 = %78.0;
    (%79, %80)
  };
  %81(%var_6293) /* ty=(Tensor[(14, 3, 11), float32], Tensor[(462), float32]) */
}

def @func_5466() -> (Tensor[(1, 5, 13), float32],) {
  %84 = fn () -> (Tensor[(1, 5, 13), float32],) {
    %82 = @func_3903() /* ty=(Tensor[(4, 13, 3), float32], Tensor[(99), int8], Tensor[(1, 5, 13), float32], Tensor[(39, 4), float32], Tensor[(39, 4), float32]) */;
    %83 = %82.2;
    (%83,)
  };
  %84() /* ty=(Tensor[(1, 5, 13), float32],) */
}

def @func_6367() -> (Tensor[(10, 16, 1890), float32], Tensor[(1, 16, 1890), float64]) {
  %92 = fn () -> (Tensor[(10, 16, 1890), float32], Tensor[(1, 16, 1890), float64]) {
    %85 = @func_1927() /* ty=(Tensor[(1, 16, 1890), float64],) */;
    %86 = %85.0;
    %87 = cast(%86, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
    %88 = cast(meta[relay.Constant][7] /* ty=Tensor[(10, 16, 1890), float64] */, dtype="float32") /* ty=Tensor[(10, 16, 1890), float32] */;
    %89 = @func_1927() /* ty=(Tensor[(1, 16, 1890), float64],) */;
    %90 = floor_divide(%87, %88) /* ty=Tensor[(10, 16, 1890), float32] */;
    %91 = %89.0;
    (%90, %91)
  };
  %92() /* ty=(Tensor[(10, 16, 1890), float32], Tensor[(1, 16, 1890), float64]) */
}

def @func_4670(%var_4648: Tensor[(5, 8, 7), float32]) -> (Tensor[(5, 8, 7), float32], Tensor[(39, 4), float32], Tensor[(4, 13, 3), float32]) {
  %93 = cast(%var_4648, dtype="float32") /* ty=Tensor[(5, 8, 7), float32] */;
  %94 = @func_1866() /* ty=(Tensor[(39, 4), float32],) */;
  %95 = %94.0;
  %96 = cast(%95, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %97 = cast(%95, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %98 = reshape(%96, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %99 = reshape(%97, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %100 = @func_357(%98, %99) /* ty=(Tensor[(4, 13, 3), float32],) */;
  %101 = atanh(%93) /* ty=Tensor[(5, 8, 7), float32] */;
  %102 = %100.0;
  (%101, %95, %102)
}

def @func_4950() -> (Tensor[(156), float32],) {
  @func_4948() /* ty=(Tensor[(156), float32],) */
}

def @func_6131() -> Tensor[(39, 4), float32] {
  @func_6129() /* ty=Tensor[(39, 4), float32] */
}

def @func_5280(%var_5257: Tensor[(182), bool]) -> (Tensor[(462), float32], Tensor[(5, 13, 14), bool], Tensor[(182), bool], Tensor[(455, 2), bool], Tensor[(1, 16, 1890), float64], Tensor[(14, 3, 11), int16]) {
  %103 = @func_3840() /* ty=(Tensor[(11, ?, 9), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) */;
  %104 = cast(%var_5257, dtype="bool") /* ty=Tensor[(182), bool] */;
  %105 = cast(meta[relay.Constant][8] /* ty=Tensor[(455, 2), bool] */, dtype="bool") /* ty=Tensor[(455, 2), bool] */;
  %106 = reshape(%104, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), bool] */;
  %107 = reshape(%105, newshape=[5, 13, 14]) /* ty=Tensor[(5, 13, 14), bool] */;
  %108 = @func_660(%106, %107) /* ty=(Tensor[(5, 13, 14), bool], Tensor[(5, 13, 14), float32]) */;
  %109 = @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %110 = %103.2;
  %111 = %108.0;
  %112 = %109.0;
  %113 = @func_5241() /* ty=Tensor[(14, 3, 11), int16] */;
  (%110, %111, %var_5257, meta[relay.Constant][8] /* ty=Tensor[(455, 2), bool] */, %112, %113)
}

def @func_1927() -> (Tensor[(1, 16, 1890), float64],) {
  %114 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
  %115 = %114.3;
  (%115,)
}

def @func_2458(%var_2456: Tensor[(686), float32]) -> (Tensor[(39, 4), float32], Tensor[(7, 7, 14), float32], Tensor[(686), float32]) {
  @func_2455(%var_2456) /* ty=(Tensor[(39, 4), float32], Tensor[(7, 7, 14), float32], Tensor[(686), float32]) */
}

def @func_5438(%var_5436: Tensor[(1300), int16], %var_5437: Tensor[(462), float32]) -> (Tensor[(11, ?, 9), int8], Tensor[(14, 3, 11), float32], Tensor[(1300), int16], Tensor[(462), float32], Tensor[(11, ?, 9), int8]) {
  @func_5434(%var_5436, %var_5437) /* ty=(Tensor[(11, ?, 9), int8], Tensor[(14, 3, 11), float32], Tensor[(1300), int16], Tensor[(462), float32], Tensor[(11, ?, 9), int8]) */
}

def @func_5611(%var_5593: Tensor[(1, 240), uint64]) -> (Tensor[(39, 4), float32], Tensor[(16, 15), uint64], Tensor[(1, 240), uint64], Tensor[(4, 13, 3), float32], Tensor[(99, 1), int8]) {
  %116 = @func_5353() /* ty=(Tensor[(39, 4), float32], Tensor[(99), int8]) */;
  %117 = cast(%var_5593, dtype="uint64") /* ty=Tensor[(1, 240), uint64] */;
  %118 = cast(%var_5593, dtype="uint64") /* ty=Tensor[(1, 240), uint64] */;
  %119 = reshape(%117, newshape=[16, 15]) /* ty=Tensor[(16, 15), uint64] */;
  %120 = reshape(%118, newshape=[16, 15]) /* ty=Tensor[(16, 15), uint64] */;
  %121 = @func_4254(%119, %120) /* ty=(Tensor[(16, 15), uint64],) */;
  %122 = %116.0;
  %123 = cast(%122, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %124 = cast(%122, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %125 = reshape(%123, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %126 = reshape(%124, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %127 = @func_357(%125, %126) /* ty=(Tensor[(4, 13, 3), float32],) */;
  %128 = @func_3426() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(99, 1), int8], Tensor[(99), int8]) */;
  %129 = %121.0;
  %130 = %127.0;
  %131 = %128.1;
  (%122, %129, %var_5593, %130, %131)
}

def @func_7081() -> (Tensor[(156), float32], Tensor[(11, ?, 9), int8]) {
  %132 = @func_3007() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) */;
  %133 = %132.2;
  %134 = @func_3436() /* ty=Tensor[(11, ?, 9), int8] */;
  (%133, %134)
}

def @func_5876(%var_5875: Tensor[(14, 3, 11), int16]) -> (Tensor[(14, 3, 11), bool],) {
  %141 = fn (%var_5868: Tensor[(14, 3, 11), int16]) -> (Tensor[(14, 3, 11), bool],) {
    %135 = @func_4879() /* ty=Tensor[(14, 3, 11), int16] */;
    %136 = cast(%var_5868, dtype="bool") /* ty=Tensor[(14, 3, 11), bool] */;
    %137 = shape_of(%135, dtype="int32") /* ty=Tensor[(3), int32] */;
    %138 = cast(%135, dtype="bool") /* ty=Tensor[(14, 3, 11), bool] */;
    %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %140 = logical_or(%138, %139) /* ty=Tensor[(14, 3, 11), bool] */;
    (%140,)
  };
  %141(%var_5875) /* ty=(Tensor[(14, 3, 11), bool],) */
}

def @func_4559(%var_4504: float64, %var_4505: Tensor[(13, 1, 12), float64], %var_4509: Tensor[(13, 11, 12), float64], %var_4550: Tensor[(182), bool], %var_4557: Tensor[(7, 66), float32]) -> (Tensor[(1, 16, 1890), float64], Tensor[(13, 11, 12), float64], Tensor[(16, 15), uint64], Tensor[(240), uint64], Tensor[(5, 13, 14), bool], Tensor[(182), bool], Tensor[(910), bool], Tensor[(14, 3, 11), float32], Tensor[(7, 66), float32]) {
  %142 = @func_3136() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %143 = cast(%var_4504, dtype="float64") /* ty=float64 */;
  %144 = cast(%var_4505, dtype="float64") /* ty=Tensor[(13, 1, 12), float64] */;
  %145 = floor_mod(%143, %144) /* ty=Tensor[(13, 1, 12), float64] */;
  %146 = cast(%145, dtype="bool") /* ty=Tensor[(13, 1, 12), bool] */;
  %147 = cast(%var_4509, dtype="bool") /* ty=Tensor[(13, 11, 12), bool] */;
  %148 = equal(%146, %147) /* ty=Tensor[(13, 11, 12), bool] */;
  %149 = cast(%148, dtype="float64") /* ty=Tensor[(13, 11, 12), float64] */;
  %150 = cast(meta[relay.Constant][9] /* ty=Tensor[(240), uint64] */, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %151 = cast(meta[relay.Constant][9] /* ty=Tensor[(240), uint64] */, dtype="uint64") /* ty=Tensor[(240), uint64] */;
  %152 = reshape(%150, newshape=[16, 15]) /* ty=Tensor[(16, 15), uint64] */;
  %153 = reshape(%151, newshape=[16, 15]) /* ty=Tensor[(16, 15), uint64] */;
  %154 = @func_4254(%152, %153) /* ty=(Tensor[(16, 15), uint64],) */;
  %155 = cast(%var_4550, dtype="bool") /* ty=Tensor[(182), bool] */;
  %156 = cast(meta[relay.Constant][10] /* ty=Tensor[(910), bool] */, dtype="bool") /* ty=Tensor[(910), bool] */;
  %157 = reshape(%155, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), bool] */;
  %158 = reshape(%156, newshape=[5, 13, 14]) /* ty=Tensor[(5, 13, 14), bool] */;
  %159 = @func_660(%157, %158) /* ty=(Tensor[(5, 13, 14), bool], Tensor[(5, 13, 14), float32]) */;
  %160 = cast(%var_4557, dtype="float32") /* ty=Tensor[(7, 66), float32] */;
  %161 = reshape(%160, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), float32] */;
  %162 = %142.0;
  %163 = log(%149) /* ty=Tensor[(13, 11, 12), float64] */;
  %164 = %154.0;
  %165 = %159.0;
  %166 = @func_989(%161) /* ty=Tensor[(14, 3, 11), float32] */;
  (%162, %163, %164, meta[relay.Constant][9] /* ty=Tensor[(240), uint64] */, %165, %var_4550, meta[relay.Constant][10] /* ty=Tensor[(910), bool] */, %166, %var_4557)
}

def @func_4172(%var_4143: Tensor[(13, 11, 4), float32], %var_4144: Tensor[(13, 11, 4), float32], %var_4148: Tensor[(13, 11, 4), bool]) -> (Tensor[(13, 11, 4), uint16],) {
  %167 = cast(%var_4144, dtype="bool") /* ty=Tensor[(13, 11, 4), bool] */;
  %168 = shape_of(%var_4143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %169 = cast(%var_4143, dtype="bool") /* ty=Tensor[(13, 11, 4), bool] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %171 = not_equal(%169, %170) /* ty=Tensor[(13, 11, 4), bool] */;
  %172 = cast(%var_4148, dtype="uint16") /* ty=Tensor[(13, 11, 4), uint16] */;
  %173 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%171, dtype="uint16") /* ty=Tensor[(13, 11, 4), uint16] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %176 = maximum(%174, %175) /* ty=Tensor[(13, 11, 4), uint16] */;
  %177 = cast(%171, dtype="uint16") /* ty=Tensor[(13, 11, 4), uint16] */;
  %178 = shape_of(%176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%176, dtype="uint16") /* ty=Tensor[(13, 11, 4), uint16] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %181 = bitwise_or(%179, %180) /* ty=Tensor[(13, 11, 4), uint16] */;
  (%181,)
}

def @func_5138(%var_5113: Tensor[(11, 14, 9), float64], %var_5130: Tensor[(1200), float32]) -> (Tensor[(1, 16, 1890), float64], Tensor[(11, 14, 9), int8], Tensor[(156), float32], Tensor[(4, 13, 3), float32], Tensor[(1200), float32]) {
  %182 = @func_3007() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) */;
  %183 = @func_3486() /* ty=(Tensor[(4, 13, 3), float32], Tensor[(1200), float32], Tensor[(11, ?, 9), float64]) */;
  %184 = %183.2;
  %185 = cast(%184, dtype="float64") /* ty=Tensor[(11, ?, 9), float64] */;
  %186 = cosh(%185) /* ty=Tensor[(11, ?, 9), float64] */;
  %187 = cast(%186, dtype="int8") /* ty=Tensor[(11, ?, 9), int8] */;
  %188 = cast(%var_5113, dtype="int8") /* ty=Tensor[(11, 14, 9), int8] */;
  %189 = @func_4948() /* ty=(Tensor[(156), float32],) */;
  %190 = cast(%var_5130, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %191 = reshape(%190, newshape=[16, 15, 5]) /* ty=Tensor[(16, 15, 5), float32] */;
  %192 = @func_626(%191) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(156), float32], Tensor[(4, 13, 3), float32], Tensor[(16, 15, 5), bool]) */;
  %193 = %182.0;
  %194 = left_shift(%187, %188) /* ty=Tensor[(11, 14, 9), int8] */;
  %195 = %189.0;
  %196 = %192.2;
  (%193, %194, %195, %196, %var_5130)
}

def @func_2619(%var_2617: Tensor[(75), uint8]) -> (Tensor[(1, 16, 1890), float64], Tensor[(65), float64], Tensor[(75), uint8], Tensor[(600), uint8]) {
  @func_2616(%var_2617) /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(65), float64], Tensor[(75), uint8], Tensor[(600), uint8]) */
}

def @func_3674(%var_3672: uint64, %var_3673: Tensor[(2, 15, 15), uint64]) -> Tensor[(2, 15, 15), uint64] {
  @func_3670(%var_3672, %var_3673) /* ty=Tensor[(2, 15, 15), uint64] */
}

def @func_4566(%var_4561: float64, %var_4562: Tensor[(13, 1, 12), float64], %var_4563: Tensor[(13, 11, 12), float64], %var_4564: Tensor[(182), bool], %var_4565: Tensor[(7, 66), float32]) -> (Tensor[(1, 16, 1890), float64], Tensor[(13, 11, 12), float64], Tensor[(16, 15), uint64], Tensor[(240), uint64], Tensor[(5, 13, 14), bool], Tensor[(182), bool], Tensor[(910), bool], Tensor[(14, 3, 11), float32], Tensor[(7, 66), float32]) {
  @func_4559(%var_4561, %var_4562, %var_4563, %var_4564, %var_4565) /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(13, 11, 12), float64], Tensor[(16, 15), uint64], Tensor[(240), uint64], Tensor[(5, 13, 14), bool], Tensor[(182), bool], Tensor[(910), bool], Tensor[(14, 3, 11), float32], Tensor[(7, 66), float32]) */
}

def @func_3243(%var_3242: Tensor[(99, 1), int8]) -> (Tensor[(1, 5, 13), float64], Tensor[(99, 1), int8], Tensor[(39, 4), float32], Tensor[(39, 4), float64]) {
  %209 = fn (%var_3208: Tensor[(99, 1), int8]) -> (Tensor[(1, 5, 13), float64], Tensor[(99, 1), int8], Tensor[(39, 4), float32], Tensor[(39, 4), float64]) {
    %197 = cast(%var_3208, dtype="int8") /* ty=Tensor[(99, 1), int8] */;
    %198 = reshape(%197, newshape=[99, 1]) /* ty=Tensor[(99, 1), int8] */;
    %199 = @func_2580(%198) /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 5, 13), float64], Tensor[(1, 16, 1890), float32], Tensor[(11, ?, 9), int8], Tensor[(99, 1), int8]) */;
    %200 = @func_1866() /* ty=(Tensor[(39, 4), float32],) */;
    %201 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
    %202 = %201.0;
    %203 = cast(%202, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
    %204 = log2(%203) /* ty=Tensor[(39, 4), float32] */;
    %205 = cast(%204, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
    %206 = %199.1;
    %207 = %200.0;
    %208 = sqrt(%205) /* ty=Tensor[(39, 4), float64] */;
    (%206, %var_3208, %207, %208)
  };
  %209(%var_3242) /* ty=(Tensor[(1, 5, 13), float64], Tensor[(99, 1), int8], Tensor[(39, 4), float32], Tensor[(39, 4), float64]) */
}

def @func_6335() -> (Tensor[(11, ?, 9), int8],) {
  %210 = @func_3731() /* ty=(Tensor[(11, ?, 9), int8],) */;
  %211 = %210.0;
  (%211,)
}

def @func_4613(%var_4612: Tensor[(156), float32]) -> (Tensor[(11, ?, 9), int8], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) {
  %219 = fn (%var_4608: Tensor[(156), float32]) -> (Tensor[(11, ?, 9), int8], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) {
    %212 = cast(%var_4608, dtype="float32") /* ty=Tensor[(156), float32] */;
    %213 = cast(%var_4608, dtype="float32") /* ty=Tensor[(156), float32] */;
    %214 = reshape(%212, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
    %215 = reshape(%213, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
    %216 = @func_357(%214, %215) /* ty=(Tensor[(4, 13, 3), float32],) */;
    %217 = @func_3436() /* ty=Tensor[(11, ?, 9), int8] */;
    %218 = %216.0;
    (%217, %218, %var_4608)
  };
  %219(%var_4612) /* ty=(Tensor[(11, ?, 9), int8], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) */
}

def @func_2583(%var_2581: Tensor[(99, 1), int8]) -> (Tensor[(1, 16, 1890), float64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 5, 13), float64], Tensor[(1, 16, 1890), float32], Tensor[(11, ?, 9), int8], Tensor[(99, 1), int8]) {
  @func_2580(%var_2581) /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 5, 13), float64], Tensor[(1, 16, 1890), float32], Tensor[(11, ?, 9), int8], Tensor[(99, 1), int8]) */
}

def @func_5243() -> Tensor[(14, 3, 11), int16] {
  @func_5241() /* ty=Tensor[(14, 3, 11), int16] */
}

def @func_1401(%var_1399: Tensor[(15, 14, 9), float32]) -> (Tensor[(15, 14, 9), float64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(4, 13, 3), float32], Tensor[(39, 4), float32]) {
  @func_1398(%var_1399) /* ty=(Tensor[(15, 14, 9), float64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(4, 13, 3), float32], Tensor[(39, 4), float32]) */
}

def @func_6823(%var_6821: Tensor[(77, 6), float32]) -> (Tensor[(99), int8], Tensor[(14, 3, 11), float32], Tensor[(10, 130), int16], Tensor[(77, 6), float32]) {
  %220 = @func_5182() /* ty=(Tensor[(99), int8],) */;
  %221 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 130), int16] */, dtype="int16") /* ty=Tensor[(10, 130), int16] */;
  %222 = cast(%var_6821, dtype="float32") /* ty=Tensor[(77, 6), float32] */;
  %223 = reshape(%221, newshape=[1300, 1]) /* ty=Tensor[(1300, 1), int16] */;
  %224 = reshape(%222, newshape=[462]) /* ty=Tensor[(462), float32] */;
  %225 = @func_2919(%223, %224) /* ty=(Tensor[(1, 16, 1890), float32], Tensor[(14, 3, 11), float32], Tensor[(1300, 1), int16], Tensor[(462), float32]) */;
  %226 = %220.0;
  %227 = %225.1;
  (%226, %227, meta[relay.Constant][11] /* ty=Tensor[(10, 130), int16] */, %var_6821)
}

def @func_357(%var_326: Tensor[(4, 13, 3), float32], %var_327: Tensor[(4, 13, 3), float32]) -> (Tensor[(4, 13, 3), float32],) {
  %228 = cast(%var_327, dtype="float32") /* ty=Tensor[(4, 13, 3), float32] */;
  %229 = shape_of(%var_326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%var_326, dtype="float32") /* ty=Tensor[(4, 13, 3), float32] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %232 = floor_divide(%230, %231) /* ty=Tensor[(4, 13, 3), float32] */;
  (%232,)
}

def @func_5630() -> (Tensor[(1, 16, 1890), float64],) {
  @func_5628() /* ty=(Tensor[(1, 16, 1890), float64],) */
}

def @func_5339() -> (Tensor[(462), float32], Tensor[(1, 16, 1890), float64], Tensor[(1, 16, 1890), float64]) {
  @func_5337() /* ty=(Tensor[(462), float32], Tensor[(1, 16, 1890), float64], Tensor[(1, 16, 1890), float64]) */
}

def @func_5386(%var_5385: Tensor[(1, 1, 16), uint32]) -> (Tensor[(1, 1, 16), uint32], Tensor[(11, ?, 9), int8], Tensor[(4, 13, 3), float32], Tensor[(1200), float32]) {
  %241 = fn (%var_5369: Tensor[(1, 1, 16), uint32]) -> (Tensor[(1, 1, 16), uint32], Tensor[(11, ?, 9), int8], Tensor[(4, 13, 3), float32], Tensor[(1200), float32]) {
    %233 = cast(meta[relay.Constant][12] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %234 = cast(%var_5369, dtype="uint32") /* ty=Tensor[(1, 1, 16), uint32] */;
    %235 = cast(meta[relay.Constant][13] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
    %236 = reshape(%235, newshape=[16, 15, 5]) /* ty=Tensor[(16, 15, 5), float32] */;
    %237 = @func_626(%236) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(156), float32], Tensor[(4, 13, 3), float32], Tensor[(16, 15, 5), bool]) */;
    %238 = right_shift(%233, %234) /* ty=Tensor[(1, 1, 16), uint32] */;
    %239 = @func_3436() /* ty=Tensor[(11, ?, 9), int8] */;
    %240 = %237.2;
    (%238, %239, %240, meta[relay.Constant][13] /* ty=Tensor[(1200), float32] */)
  };
  %241(%var_5385) /* ty=(Tensor[(1, 1, 16), uint32], Tensor[(11, ?, 9), int8], Tensor[(4, 13, 3), float32], Tensor[(1200), float32]) */
}

def @func_6407(%var_6405: Tensor[(4, 12, 16), int16], %var_6406: Tensor[(4, 12, 16), int16]) -> (Tensor[(4, 12, 16), bool], Tensor[(4, 12, 16), float32]) {
  @func_6403(%var_6405, %var_6406) /* ty=(Tensor[(4, 12, 16), bool], Tensor[(4, 12, 16), float32]) */
}

def @func_3841() -> (Tensor[(11, ?, 9), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) {
  %249 = fn () -> (Tensor[(11, ?, 9), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) {
    %242 = @func_3731() /* ty=(Tensor[(11, ?, 9), int8],) */;
    %243 = %242.0;
    %244 = cast(%243, dtype="float32") /* ty=Tensor[(11, ?, 9), float32] */;
    %245 = cast(meta[relay.Constant][14] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
    %246 = reshape(%245, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), float32] */;
    %247 = acosh(%244) /* ty=Tensor[(11, ?, 9), float32] */;
    %248 = @func_989(%246) /* ty=Tensor[(14, 3, 11), float32] */;
    (%247, %248, meta[relay.Constant][14] /* ty=Tensor[(462), float32] */)
  };
  %249() /* ty=(Tensor[(11, ?, 9), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) */
}

def @func_6129() -> Tensor[(39, 4), float32] {
  %250 = @func_3991() /* ty=(Tensor[(39, 4), float32],) */;
  %250.0
}

def @func_6386() -> Tensor[(10, 16, 1890), float32] {
  @func_6384() /* ty=Tensor[(10, 16, 1890), float32] */
}

def @func_3567(%var_3558: Tensor[(4, 13, 3), float32]) -> (Tensor[(4, 13, 3), int8],) {
  %251 = @func_3007() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) */;
  %252 = %251.1;
  %253 = cast(%var_3558, dtype="int8") /* ty=Tensor[(4, 13, 3), int8] */;
  %254 = shape_of(%252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%252, dtype="int8") /* ty=Tensor[(4, 13, 3), int8] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %257 = bitwise_xor(%255, %256) /* ty=Tensor[(4, 13, 3), int8] */;
  (%257,)
}

def @func_4970(%var_4968: Tensor[(11, 9), int8]) -> (Tensor[(4, 13, 3), float32], Tensor[(11, ?, 9), int8], Tensor[(11, 9), int8]) {
  @func_4967(%var_4968) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(11, ?, 9), int8], Tensor[(11, 9), int8]) */
}

def @func_4463(%var_4461: Tensor[(182), bool], %var_4462: Tensor[(910), bool]) -> (Tensor[(4, 13, 3), float32], Tensor[(1, 5, 13), float64], Tensor[(4, 13, 3), float32], Tensor[(5, 13, 14), float32], Tensor[(182), bool], Tensor[(910), bool]) {
  @func_4459(%var_4461, %var_4462) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(1, 5, 13), float64], Tensor[(4, 13, 3), float32], Tensor[(5, 13, 14), float32], Tensor[(182), bool], Tensor[(910), bool]) */
}

def @func_4726() -> (Tensor[(4, 13, 3), float32],) {
  @func_4724() /* ty=(Tensor[(4, 13, 3), float32],) */
}

def @func_3436() -> Tensor[(11, ?, 9), int8] {
  %258 = @func_2192() /* ty=(Tensor[(11, ?, 9), int8], Tensor[(11, ?, 9), int8]) */;
  %258.0
}

def @func_5142(%var_5140: Tensor[(11, 14, 9), float64], %var_5141: Tensor[(1200), float32]) -> (Tensor[(1, 16, 1890), float64], Tensor[(11, 14, 9), int8], Tensor[(156), float32], Tensor[(4, 13, 3), float32], Tensor[(1200), float32]) {
  @func_5138(%var_5140, %var_5141) /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(11, 14, 9), int8], Tensor[(156), float32], Tensor[(4, 13, 3), float32], Tensor[(1200), float32]) */
}

def @func_4976() -> Tensor[(39, 4), float32] {
  @func_4974() /* ty=Tensor[(39, 4), float32] */
}

def @func_6235(%var_6232: Tensor[(99), int8], %var_6233: Tensor[(15, 5, 13), float64], %var_6234: Tensor[(156), float32]) -> (Tensor[(?, 16, 1890), float32], Tensor[(99), int8], Tensor[(15, 5, 13), int64], Tensor[(99), int8], Tensor[(4, 13, 3), float32], Tensor[(156), float32], Tensor[(?, 16, 1890), int32]) {
  @func_6230(%var_6232, %var_6233, %var_6234) /* ty=(Tensor[(?, 16, 1890), float32], Tensor[(99), int8], Tensor[(15, 5, 13), int64], Tensor[(99), int8], Tensor[(4, 13, 3), float32], Tensor[(156), float32], Tensor[(?, 16, 1890), int32]) */
}

def @func_6623(%var_6620: Tensor[(182), bool], %var_6621: Tensor[(144), float64], %var_6622: Tensor[(1300), int16]) -> (Tensor[(14, 3, 11), int16], Tensor[(5, 13, 14), bool], Tensor[(182), bool], Tensor[(910), bool], Tensor[(6, 8, 3), float64], Tensor[(144), float64], Tensor[(15, 8), float64], Tensor[(462), float32], Tensor[(1300), int16]) {
  @func_6618(%var_6620, %var_6621, %var_6622) /* ty=(Tensor[(14, 3, 11), int16], Tensor[(5, 13, 14), bool], Tensor[(182), bool], Tensor[(910), bool], Tensor[(6, 8, 3), float64], Tensor[(144), float64], Tensor[(15, 8), float64], Tensor[(462), float32], Tensor[(1300), int16]) */
}

def @func_2065(%var_2063: Tensor[(13, 10, 10), int16], %var_2064: Tensor[(462), float32]) -> (Tensor[(13, 10, 10), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) {
  %272 = fn (%var_2035: Tensor[(13, 10, 10), int16], %var_2058: Tensor[(462), float32]) -> (Tensor[(13, 10, 10), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) {
    %259 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 10, 10), int16] */, dtype="bool") /* ty=Tensor[(13, 10, 10), bool] */;
    %260 = shape_of(%var_2035, dtype="int32") /* ty=Tensor[(3), int32] */;
    %261 = cast(%var_2035, dtype="bool") /* ty=Tensor[(13, 10, 10), bool] */;
    %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %263 = greater_equal(%261, %262) /* ty=Tensor[(13, 10, 10), bool] */;
    %264 = cast(%263, dtype="float32") /* ty=Tensor[(13, 10, 10), float32] */;
    %265 = shape_of(%var_2035, dtype="int32") /* ty=Tensor[(3), int32] */;
    %266 = cast(%var_2035, dtype="float32") /* ty=Tensor[(13, 10, 10), float32] */;
    %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %268 = cast(%var_2058, dtype="float32") /* ty=Tensor[(462), float32] */;
    %269 = reshape(%268, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), float32] */;
    %270 = floor_divide(%266, %267) /* ty=Tensor[(13, 10, 10), float32] */;
    %271 = @func_989(%269) /* ty=Tensor[(14, 3, 11), float32] */;
    (%270, %271, %var_2058)
  };
  %272(%var_2063, %var_2064) /* ty=(Tensor[(13, 10, 10), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) */
}

def @func_4177(%var_4174: Tensor[(13, 11, 4), float32], %var_4175: Tensor[(13, 11, 4), float32], %var_4176: Tensor[(13, 11, 4), bool]) -> (Tensor[(13, 11, 4), uint16],) {
  @func_4172(%var_4174, %var_4175, %var_4176) /* ty=(Tensor[(13, 11, 4), uint16],) */
}

def @func_2175() -> (Tensor[(1, 16, 1890), float64],) {
  @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */
}

def @func_4306() -> (Tensor[(1, 16, 1890), float64], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) {
  %273 = @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %274 = cast(meta[relay.Constant][16] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %275 = reshape(%274, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), float32] */;
  %276 = %273.0;
  %277 = @func_989(%275) /* ty=Tensor[(14, 3, 11), float32] */;
  (%276, %277, meta[relay.Constant][16] /* ty=Tensor[(462), float32] */)
}

def @func_660(%var_644: Tensor[(1, 13, 14), bool], %var_645: Tensor[(5, 13, 14), bool]) -> (Tensor[(5, 13, 14), bool], Tensor[(5, 13, 14), float32]) {
  %278 = cast(%var_644, dtype="bool") /* ty=Tensor[(1, 13, 14), bool] */;
  %279 = cast(%var_645, dtype="bool") /* ty=Tensor[(5, 13, 14), bool] */;
  %280 = cast(%var_645, dtype="float32") /* ty=Tensor[(5, 13, 14), float32] */;
  %281 = logical_or(%278, %279) /* ty=Tensor[(5, 13, 14), bool] */;
  %282 = log(%280) /* ty=Tensor[(5, 13, 14), float32] */;
  (%281, %282)
}

def @func_5355() -> (Tensor[(39, 4), float32], Tensor[(99), int8]) {
  @func_5353() /* ty=(Tensor[(39, 4), float32], Tensor[(99), int8]) */
}

def @func_3670(%var_3661: uint64, %var_3662: Tensor[(2, 15, 15), uint64]) -> Tensor[(2, 15, 15), uint64] {
  %283 = cast(%var_3661, dtype="uint64") /* ty=uint64 */;
  %284 = cast(%var_3662, dtype="uint64") /* ty=Tensor[(2, 15, 15), uint64] */;
  right_shift(%283, %284) /* ty=Tensor[(2, 15, 15), uint64] */
}

def @func_5628() -> (Tensor[(1, 16, 1890), float64],) {
  %285 = @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %286 = %285.0;
  (%286,)
}

def @func_5614(%var_5612: Tensor[(1, 240), uint64]) -> (Tensor[(39, 4), float32], Tensor[(16, 15), uint64], Tensor[(1, 240), uint64], Tensor[(4, 13, 3), float32], Tensor[(99, 1), int8]) {
  @func_5611(%var_5612) /* ty=(Tensor[(39, 4), float32], Tensor[(16, 15), uint64], Tensor[(1, 240), uint64], Tensor[(4, 13, 3), float32], Tensor[(99, 1), int8]) */
}

def @func_2193() -> (Tensor[(11, ?, 9), int8], Tensor[(11, ?, 9), int8]) {
  %291 = fn () -> (Tensor[(11, ?, 9), int8], Tensor[(11, ?, 9), int8]) {
    %287 = @func_1905() /* ty=(Tensor[(39, 4), float32], Tensor[(11, ?, 9), int8], Tensor[(99), int8]) */;
    %288 = @func_1905() /* ty=(Tensor[(39, 4), float32], Tensor[(11, ?, 9), int8], Tensor[(99), int8]) */;
    %289 = %287.1;
    %290 = %288.1;
    (%289, %290)
  };
  %291() /* ty=(Tensor[(11, ?, 9), int8], Tensor[(11, ?, 9), int8]) */
}

def @func_2616(%var_2613: Tensor[(75), uint8]) -> (Tensor[(1, 16, 1890), float64], Tensor[(65), float64], Tensor[(75), uint8], Tensor[(600), uint8]) {
  %292 = @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %293 = cast(%var_2613, dtype="uint8") /* ty=Tensor[(75), uint8] */;
  %294 = cast(meta[relay.Constant][17] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %295 = reshape(%293, newshape=[5, 1, 15]) /* ty=Tensor[(5, 1, 15), uint8] */;
  %296 = reshape(%294, newshape=[5, 8, 15]) /* ty=Tensor[(5, 8, 15), uint8] */;
  %297 = @func_2250(%295, %296) /* ty=(Tensor[(65), float64], Tensor[(11, ?, 9), int8], Tensor[(5, 8, 15), float64]) */;
  %298 = %292.0;
  %299 = %297.0;
  (%298, %299, %var_2613, meta[relay.Constant][17] /* ty=Tensor[(600), uint8] */)
}

def @func_5562(%var_5559: Tensor[(3, 1, 14), int32], %var_5560: Tensor[(3, 10, 14), int32], %var_5561: Tensor[(182), bool]) -> (Tensor[(4, 13, 3), float32], Tensor[(182), bool], Tensor[(910), bool], Tensor[(3, 10, 14), bool], Tensor[(3, 10, 14), float32], Tensor[(3, 10, 14), float64]) {
  %321 = fn (%var_5523: Tensor[(3, 1, 14), int32], %var_5524: Tensor[(3, 10, 14), int32], %var_5535: Tensor[(182), bool]) -> (Tensor[(4, 13, 3), float32], Tensor[(182), bool], Tensor[(910), bool], Tensor[(3, 10, 14), bool], Tensor[(3, 10, 14), float32], Tensor[(3, 10, 14), float64]) {
    %300 = cast(%var_5535, dtype="bool") /* ty=Tensor[(182), bool] */;
    %301 = cast(meta[relay.Constant][18] /* ty=Tensor[(910), bool] */, dtype="bool") /* ty=Tensor[(910), bool] */;
    %302 = reshape(%300, newshape=[182]) /* ty=Tensor[(182), bool] */;
    %303 = reshape(%301, newshape=[910]) /* ty=Tensor[(910), bool] */;
    %304 = @func_4459(%302, %303) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(1, 5, 13), float64], Tensor[(4, 13, 3), float32], Tensor[(5, 13, 14), float32], Tensor[(182), bool], Tensor[(910), bool]) */;
    %305 = cast(%var_5524, dtype="bool") /* ty=Tensor[(3, 10, 14), bool] */;
    %306 = cast(%var_5523, dtype="bool") /* ty=Tensor[(3, 1, 14), bool] */;
    %307 = cast(%var_5523, dtype="bool") /* ty=Tensor[(3, 1, 14), bool] */;
    %308 = cast(%var_5524, dtype="bool") /* ty=Tensor[(3, 10, 14), bool] */;
    %309 = less_equal(%307, %308) /* ty=Tensor[(3, 10, 14), bool] */;
    %310 = cast(%309, dtype="float64") /* ty=Tensor[(3, 10, 14), float64] */;
    %311 = sqrt(%310) /* ty=Tensor[(3, 10, 14), float64] */;
    %312 = cast(%311, dtype="float32") /* ty=Tensor[(3, 10, 14), float32] */;
    %313 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 10, 14), int32] */, dtype="float64") /* ty=Tensor[(3, 10, 14), float64] */;
    %314 = shape_of(%var_5524, dtype="int32") /* ty=Tensor[(3), int32] */;
    %315 = cast(%var_5524, dtype="float64") /* ty=Tensor[(3, 10, 14), float64] */;
    %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %317 = %304.2;
    %318 = greater(%305, %306) /* ty=Tensor[(3, 10, 14), bool] */;
    %319 = asinh(%312) /* ty=Tensor[(3, 10, 14), float32] */;
    %320 = power(%315, %316) /* ty=Tensor[(3, 10, 14), float64] */;
    (%317, %var_5535, meta[relay.Constant][18] /* ty=Tensor[(910), bool] */, %318, %319, %320)
  };
  %321(%var_5559, %var_5560, %var_5561) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(182), bool], Tensor[(910), bool], Tensor[(3, 10, 14), bool], Tensor[(3, 10, 14), float32], Tensor[(3, 10, 14), float64]) */
}

def @func_992(%var_990: Tensor[(14, 3, 11), float32]) -> Tensor[(14, 3, 11), float32] {
  @func_989(%var_990) /* ty=Tensor[(14, 3, 11), float32] */
}

def @func_1907() -> (Tensor[(39, 4), float32], Tensor[(11, ?, 9), int8], Tensor[(99), int8]) {
  @func_1905() /* ty=(Tensor[(39, 4), float32], Tensor[(11, ?, 9), int8], Tensor[(99), int8]) */
}

def @func_5283(%var_5281: Tensor[(182), bool]) -> (Tensor[(462), float32], Tensor[(5, 13, 14), bool], Tensor[(182), bool], Tensor[(455, 2), bool], Tensor[(1, 16, 1890), float64], Tensor[(14, 3, 11), int16]) {
  @func_5280(%var_5281) /* ty=(Tensor[(462), float32], Tensor[(5, 13, 14), bool], Tensor[(182), bool], Tensor[(455, 2), bool], Tensor[(1, 16, 1890), float64], Tensor[(14, 3, 11), int16]) */
}

def @func_989(%var_984: Tensor[(14, 3, 11), float32]) -> Tensor[(14, 3, 11), float32] {
  %322 = cast(%var_984, dtype="float32") /* ty=Tensor[(14, 3, 11), float32] */;
  log10(%322) /* ty=Tensor[(14, 3, 11), float32] */
}

def @func_6698(%var_6697: Tensor[(1890), float32]) -> (Tensor[(4, 13, 3), float32], Tensor[(1, 5, 13), float64], Tensor[(1890), int64], Tensor[(4, 13, 3), float32], Tensor[(4, 13, 3), float32], Tensor[(16, 15), uint64], Tensor[(240), uint64]) {
  %346 = fn (%var_6669: Tensor[(1890), float32]) -> (Tensor[(4, 13, 3), float32], Tensor[(1, 5, 13), float64], Tensor[(1890), int64], Tensor[(4, 13, 3), float32], Tensor[(4, 13, 3), float32], Tensor[(16, 15), uint64], Tensor[(240), uint64]) {
    %323 = cast(meta[relay.Constant][20] /* ty=Tensor[(1890), float32] */, dtype="float32") /* ty=Tensor[(1890), float32] */;
    %324 = reshape(%323, newshape=[15, 14, 9]) /* ty=Tensor[(15, 14, 9), float32] */;
    %325 = @func_1398(%324) /* ty=(Tensor[(15, 14, 9), float64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(4, 13, 3), float32], Tensor[(39, 4), float32]) */;
    %326 = cast(%var_6669, dtype="int64") /* ty=Tensor[(1890), int64] */;
    %327 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(1890), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %328 = cast(meta[relay.Constant][20] /* ty=Tensor[(1890), float32] */, dtype="int64") /* ty=Tensor[(1890), int64] */;
    %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?), int64] */;
    %330 = @func_5944() /* ty=Tensor[(4, 13, 3), float32] */;
    %331 = cast(%330, dtype="float32") /* ty=Tensor[(4, 13, 3), float32] */;
    %332 = @func_4386() /* ty=Tensor[(4, 13, 3), float32] */;
    %333 = cast(%332, dtype="float32") /* ty=Tensor[(4, 13, 3), float32] */;
    %334 = reshape(%331, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
    %335 = reshape(%333, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
    %336 = @func_357(%334, %335) /* ty=(Tensor[(4, 13, 3), float32],) */;
    %337 = cast(meta[relay.Constant][21] /* ty=Tensor[(240), uint64] */, dtype="uint64") /* ty=Tensor[(240), uint64] */;
    %338 = cast(meta[relay.Constant][21] /* ty=Tensor[(240), uint64] */, dtype="uint64") /* ty=Tensor[(240), uint64] */;
    %339 = reshape(%337, newshape=[16, 15]) /* ty=Tensor[(16, 15), uint64] */;
    %340 = reshape(%338, newshape=[16, 15]) /* ty=Tensor[(16, 15), uint64] */;
    %341 = @func_4254(%339, %340) /* ty=(Tensor[(16, 15), uint64],) */;
    %342 = %325.1;
    %343 = bitwise_or(%328, %329) /* ty=Tensor[(1890), int64] */;
    %344 = %336.0;
    %345 = %341.0;
    (%332, %342, %343, %330, %344, %345, meta[relay.Constant][21] /* ty=Tensor[(240), uint64] */)
  };
  %346(%var_6697) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(1, 5, 13), float64], Tensor[(1890), int64], Tensor[(4, 13, 3), float32], Tensor[(4, 13, 3), float32], Tensor[(16, 15), uint64], Tensor[(240), uint64]) */
}

def @func_3731() -> (Tensor[(11, ?, 9), int8],) {
  %347 = @func_3436() /* ty=Tensor[(11, ?, 9), int8] */;
  (%347,)
}

def @func_4254(%var_4245: Tensor[(16, 15), uint64], %var_4246: Tensor[(16, 15), uint64]) -> (Tensor[(16, 15), uint64],) {
  %348 = cast(%var_4246, dtype="uint64") /* ty=Tensor[(16, 15), uint64] */;
  %349 = shape_of(%var_4245, dtype="int32") /* ty=Tensor[(2), int32] */;
  %350 = cast(%var_4245, dtype="uint64") /* ty=Tensor[(16, 15), uint64] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %352 = right_shift(%350, %351) /* ty=Tensor[(16, 15), uint64] */;
  (%352,)
}

def @func_2173() -> (Tensor[(1, 16, 1890), float64],) {
  %353 = @func_1927() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %354 = %353.0;
  (%354,)
}

def @func_3103(%var_3100: Tensor[(1080, 224), float64], %var_3101: Tensor[(2, 300), uint8], %var_3102: Tensor[(181440), float64]) -> (Tensor[(156), float32], Tensor[(1, 1200), float32], Tensor[(15, 6, 14), float64], Tensor[(1, 5, 13), float64], Tensor[(39, 4), float32], Tensor[(7, 7, 14), float32], Tensor[(462), float32], Tensor[(1080, 224), float64], Tensor[(2, 300), uint8], Tensor[(181440), float64]) {
  @func_3098(%var_3100, %var_3101, %var_3102) /* ty=(Tensor[(156), float32], Tensor[(1, 1200), float32], Tensor[(15, 6, 14), float64], Tensor[(1, 5, 13), float64], Tensor[(39, 4), float32], Tensor[(7, 7, 14), float32], Tensor[(462), float32], Tensor[(1080, 224), float64], Tensor[(2, 300), uint8], Tensor[(181440), float64]) */
}

def @func_2866(%var_2863: Tensor[(16, 16, 1890), float64], %var_2864: Tensor[(910), bool], %var_2865: Tensor[(13, 16, 1890), float64]) -> (Tensor[(16, 16, 1890), int64], Tensor[(5, 13, 14), float32], Tensor[(182), bool], Tensor[(910), bool], Tensor[(13, 16, 1890), bool], Tensor[(?, 16, 1890), float32], Tensor[(65), float64], Tensor[(75), uint8], Tensor[(16, 16, 1890), bool]) {
  %385 = fn (%var_2819: Tensor[(16, 16, 1890), float64], %var_2829: Tensor[(910), bool], %var_2843: Tensor[(13, 16, 1890), float64]) -> (Tensor[(16, 16, 1890), int64], Tensor[(5, 13, 14), float32], Tensor[(182), bool], Tensor[(910), bool], Tensor[(13, 16, 1890), bool], Tensor[(?, 16, 1890), float32], Tensor[(65), float64], Tensor[(75), uint8], Tensor[(16, 16, 1890), bool]) {
    %355 = @func_1927() /* ty=(Tensor[(1, 16, 1890), float64],) */;
    %356 = %355.0;
    %357 = cast(%356, dtype="int64") /* ty=Tensor[(1, 16, 1890), int64] */;
    %358 = cast(%var_2819, dtype="int64") /* ty=Tensor[(16, 16, 1890), int64] */;
    %359 = cast(meta[relay.Constant][22] /* ty=Tensor[(182), bool] */, dtype="bool") /* ty=Tensor[(182), bool] */;
    %360 = cast(%var_2829, dtype="bool") /* ty=Tensor[(910), bool] */;
    %361 = reshape(%359, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), bool] */;
    %362 = reshape(%360, newshape=[5, 13, 14]) /* ty=Tensor[(5, 13, 14), bool] */;
    %363 = @func_660(%361, %362) /* ty=(Tensor[(5, 13, 14), bool], Tensor[(5, 13, 14), float32]) */;
    %364 = cast(%356, dtype="float64") /* ty=Tensor[(1, 16, 1890), float64] */;
    %365 = rsqrt(%364) /* ty=Tensor[(1, 16, 1890), float64] */;
    %366 = cast(%365, dtype="bool") /* ty=Tensor[(1, 16, 1890), bool] */;
    %367 = cast(%var_2843, dtype="bool") /* ty=Tensor[(13, 16, 1890), bool] */;
    %368 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
    %369 = %368.3;
    %370 = cast(%369, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
    %371 = shape_of(%365, dtype="int32") /* ty=Tensor[(3), int32] */;
    %372 = cast(%365, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
    %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %374 = cast(meta[relay.Constant][23] /* ty=Tensor[(75), uint8] */, dtype="uint8") /* ty=Tensor[(75), uint8] */;
    %375 = reshape(%374, newshape=[75]) /* ty=Tensor[(75), uint8] */;
    %376 = @func_2616(%375) /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(65), float64], Tensor[(75), uint8], Tensor[(600), uint8]) */;
    %377 = cast(%var_2819, dtype="bool") /* ty=Tensor[(16, 16, 1890), bool] */;
    %378 = cast(%356, dtype="bool") /* ty=Tensor[(1, 16, 1890), bool] */;
    %379 = subtract(%357, %358) /* ty=Tensor[(16, 16, 1890), int64] */;
    %380 = %363.1;
    %381 = less(%366, %367) /* ty=Tensor[(13, 16, 1890), bool] */;
    %382 = divide(%372, %373) /* ty=Tensor[(?, 16, 1890), float32] */;
    %383 = %376.1;
    %384 = not_equal(%377, %378) /* ty=Tensor[(16, 16, 1890), bool] */;
    (%379, %380, meta[relay.Constant][22] /* ty=Tensor[(182), bool] */, %var_2829, %381, %382, %383, meta[relay.Constant][23] /* ty=Tensor[(75), uint8] */, %384)
  };
  %385(%var_2863, %var_2864, %var_2865) /* ty=(Tensor[(16, 16, 1890), int64], Tensor[(5, 13, 14), float32], Tensor[(182), bool], Tensor[(910), bool], Tensor[(13, 16, 1890), bool], Tensor[(?, 16, 1890), float32], Tensor[(65), float64], Tensor[(75), uint8], Tensor[(16, 16, 1890), bool]) */
}

def @func_4948() -> (Tensor[(156), float32],) {
  %386 = @func_3007() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) */;
  %387 = %386.2;
  (%387,)
}

def @func_5434(%var_5414: Tensor[(1300), int16], %var_5415: Tensor[(462), float32]) -> (Tensor[(11, ?, 9), int8], Tensor[(14, 3, 11), float32], Tensor[(1300), int16], Tensor[(462), float32], Tensor[(11, ?, 9), int8]) {
  %388 = @func_3731() /* ty=(Tensor[(11, ?, 9), int8],) */;
  %389 = cast(%var_5414, dtype="int16") /* ty=Tensor[(1300), int16] */;
  %390 = cast(%var_5415, dtype="float32") /* ty=Tensor[(462), float32] */;
  %391 = reshape(%389, newshape=[13, 10, 10]) /* ty=Tensor[(13, 10, 10), int16] */;
  %392 = reshape(%390, newshape=[462]) /* ty=Tensor[(462), float32] */;
  %393 = @func_2062(%391, %392) /* ty=(Tensor[(13, 10, 10), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) */;
  %394 = %388.0;
  %395 = cast(%394, dtype="int8") /* ty=Tensor[(11, ?, 9), int8] */;
  %396 = reshape(%395, newshape=[11, 9]) /* ty=Tensor[(11, 9), int8] */;
  %397 = @func_4967(%396) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(11, ?, 9), int8], Tensor[(11, 9), int8]) */;
  %398 = %393.1;
  %399 = %397.1;
  (%394, %398, %var_5414, %var_5415, %399)
}

def @func_6443(%var_6436: Tensor[(7, 6), uint32], %var_6437: Tensor[(7, 6), uint32]) -> Tensor[(7, 6), bool] {
  %400 = cast(%var_6437, dtype="bool") /* ty=Tensor[(7, 6), bool] */;
  %401 = shape_of(%var_6436, dtype="int32") /* ty=Tensor[(2), int32] */;
  %402 = cast(%var_6436, dtype="bool") /* ty=Tensor[(7, 6), bool] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  greater(%402, %403) /* ty=Tensor[(7, 6), bool] */
}

def @func_7083() -> (Tensor[(156), float32], Tensor[(11, ?, 9), int8]) {
  @func_7081() /* ty=(Tensor[(156), float32], Tensor[(11, ?, 9), int8]) */
}

def @func_3136() -> (Tensor[(1, 16, 1890), float64],) {
  %404 = @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %405 = %404.0;
  (%405,)
}

def @func_5059() -> (Tensor[(11, ?, 9), int8],) {
  %406 = @func_3436() /* ty=Tensor[(11, ?, 9), int8] */;
  (%406,)
}

def @func_2923(%var_2921: Tensor[(1300, 1), int16], %var_2922: Tensor[(462), float32]) -> (Tensor[(1, 16, 1890), float32], Tensor[(14, 3, 11), float32], Tensor[(1300, 1), int16], Tensor[(462), float32]) {
  @func_2919(%var_2921, %var_2922) /* ty=(Tensor[(1, 16, 1890), float32], Tensor[(14, 3, 11), float32], Tensor[(1300, 1), int16], Tensor[(462), float32]) */
}

def @func_6447(%var_6445: Tensor[(7, 6), uint32], %var_6446: Tensor[(7, 6), uint32]) -> Tensor[(7, 6), bool] {
  @func_6443(%var_6445, %var_6446) /* ty=Tensor[(7, 6), bool] */
}

def @func_1781() -> (Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) {
  %407 = cast(meta[relay.Constant][24] /* ty=Tensor[(1890), float32] */, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %408 = reshape(%407, newshape=[15, 14, 9]) /* ty=Tensor[(15, 14, 9), float32] */;
  %409 = @func_1398(%408) /* ty=(Tensor[(15, 14, 9), float64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(4, 13, 3), float32], Tensor[(39, 4), float32]) */;
  %410 = cast(meta[relay.Constant][25] /* ty=Tensor[(65), float64] */, dtype="float64") /* ty=Tensor[(65), float64] */;
  %411 = reshape(%410, newshape=[1, 5, 13]) /* ty=Tensor[(1, 5, 13), float64] */;
  %412 = @func_972(%411) /* ty=(Tensor[(1, 5, 13), float64],) */;
  %413 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 16, 1), float64] */, dtype="float64") /* ty=Tensor[(1, 16, 1), float64] */;
  %414 = asin(%413) /* ty=Tensor[(1, 16, 1), float64] */;
  %415 = cast(meta[relay.Constant][24] /* ty=Tensor[(1890), float32] */, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %416 = cast(%414, dtype="float64") /* ty=Tensor[(1, 16, 1), float64] */;
  %417 = %409.4;
  %418 = %412.0;
  %419 = mod(%415, %416) /* ty=Tensor[(1, 16, 1890), float64] */;
  (%417, %418, meta[relay.Constant][25] /* ty=Tensor[(65), float64] */, %419)
}

def @func_1664(%var_1663: Tensor[(7, 7, 14), float32]) -> (Tensor[(7, 7, 14), float32],) {
  %422 = fn (%var_1659: Tensor[(7, 7, 14), float32]) -> (Tensor[(7, 7, 14), float32],) {
    %420 = cast(%var_1659, dtype="float32") /* ty=Tensor[(7, 7, 14), float32] */;
    %421 = asin(%420) /* ty=Tensor[(7, 7, 14), float32] */;
    (%421,)
  };
  %422(%var_1663) /* ty=(Tensor[(7, 7, 14), float32],) */
}

def @func_3138() -> (Tensor[(1, 16, 1890), float64],) {
  @func_3136() /* ty=(Tensor[(1, 16, 1890), float64],) */
}

def @func_5480() -> Tensor[(15, 8), float64] {
  @func_5478() /* ty=Tensor[(15, 8), float64] */
}

def @func_6618(%var_6559: Tensor[(182), bool], %var_6574: Tensor[(144), float64], %var_6598: Tensor[(1300), int16]) -> (Tensor[(14, 3, 11), int16], Tensor[(5, 13, 14), bool], Tensor[(182), bool], Tensor[(910), bool], Tensor[(6, 8, 3), float64], Tensor[(144), float64], Tensor[(15, 8), float64], Tensor[(462), float32], Tensor[(1300), int16]) {
  %423 = cast(%var_6559, dtype="bool") /* ty=Tensor[(182), bool] */;
  %424 = cast(meta[relay.Constant][27] /* ty=Tensor[(910), bool] */, dtype="bool") /* ty=Tensor[(910), bool] */;
  %425 = reshape(%423, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), bool] */;
  %426 = reshape(%424, newshape=[5, 13, 14]) /* ty=Tensor[(5, 13, 14), bool] */;
  %427 = @func_660(%425, %426) /* ty=(Tensor[(5, 13, 14), bool], Tensor[(5, 13, 14), float32]) */;
  %428 = cast(%var_6574, dtype="float64") /* ty=Tensor[(144), float64] */;
  %429 = reshape(%428, newshape=[6, 8, 3]) /* ty=Tensor[(6, 8, 3), float64] */;
  %430 = @func_4297(%429) /* ty=(Tensor[(6, 8, 3), float64],) */;
  %431 = cast(%var_6598, dtype="int16") /* ty=Tensor[(1300), int16] */;
  %432 = @func_5241() /* ty=Tensor[(14, 3, 11), int16] */;
  %433 = cast(%432, dtype="float32") /* ty=Tensor[(14, 3, 11), float32] */;
  %434 = reshape(%431, newshape=[13, 10, 10]) /* ty=Tensor[(13, 10, 10), int16] */;
  %435 = reshape(%433, newshape=[462]) /* ty=Tensor[(462), float32] */;
  %436 = @func_2062(%434, %435) /* ty=(Tensor[(13, 10, 10), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) */;
  %437 = %427.0;
  %438 = %430.0;
  %439 = @func_5478() /* ty=Tensor[(15, 8), float64] */;
  %440 = %436.2;
  (%432, %437, %var_6559, meta[relay.Constant][27] /* ty=Tensor[(910), bool] */, %438, %var_6574, %439, %440, %var_6598)
}

def @func_2748() -> (Tensor[(1, 16, 1890), float32],) {
  %445 = fn () -> (Tensor[(1, 16, 1890), float32],) {
    %441 = @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */;
    %442 = %441.0;
    %443 = cast(%442, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
    %444 = asinh(%443) /* ty=Tensor[(1, 16, 1890), float32] */;
    (%444,)
  };
  %445() /* ty=(Tensor[(1, 16, 1890), float32],) */
}

def @func_2580(%var_2575: Tensor[(99, 1), int8]) -> (Tensor[(1, 16, 1890), float64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 5, 13), float64], Tensor[(1, 16, 1890), float32], Tensor[(11, ?, 9), int8], Tensor[(99, 1), int8]) {
  %446 = @func_1927() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %447 = %446.0;
  %448 = cast(%447, dtype="float64") /* ty=Tensor[(1, 16, 1890), float64] */;
  %449 = cast(meta[relay.Constant][28] /* ty=Tensor[(65), float64] */, dtype="float64") /* ty=Tensor[(65), float64] */;
  %450 = reshape(%449, newshape=[1, 5, 13]) /* ty=Tensor[(1, 5, 13), float64] */;
  %451 = @func_972(%450) /* ty=(Tensor[(1, 5, 13), float64],) */;
  %452 = %451.0;
  %453 = cast(%452, dtype="float64") /* ty=Tensor[(1, 5, 13), float64] */;
  %454 = reshape(%453, newshape=[1, 5, 13]) /* ty=Tensor[(1, 5, 13), float64] */;
  %455 = @func_972(%454) /* ty=(Tensor[(1, 5, 13), float64],) */;
  %456 = cast(%447, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
  %457 = cast(%var_2575, dtype="int8") /* ty=Tensor[(99, 1), int8] */;
  %458 = cast(%var_2575, dtype="int8") /* ty=Tensor[(99, 1), int8] */;
  %459 = reshape(%457, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %460 = reshape(%458, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %461 = acos(%448) /* ty=Tensor[(1, 16, 1890), float64] */;
  %462 = %455.0;
  %463 = exp(%456) /* ty=Tensor[(1, 16, 1890), float32] */;
  %464 = @func_1064(%459, %460) /* ty=Tensor[(11, ?, 9), int8] */;
  (%461, %452, meta[relay.Constant][28] /* ty=Tensor[(65), float64] */, %462, %463, %464, %var_2575)
}

def @func_4497() -> (Tensor[(11, ?, 9), int8],) {
  %467 = fn () -> (Tensor[(11, ?, 9), int8],) {
    %465 = @func_2192() /* ty=(Tensor[(11, ?, 9), int8], Tensor[(11, ?, 9), int8]) */;
    %466 = %465.0;
    (%466,)
  };
  %467() /* ty=(Tensor[(11, ?, 9), int8],) */
}

def @func_6871() -> Tensor[(15, 8), float64] {
  %468 = @func_5393() /* ty=(Tensor[(15, 8), float64],) */;
  %468.0
}

def @func_4880() -> Tensor[(14, 3, 11), int16] {
  %475 = fn () -> Tensor[(14, 3, 11), int16] {
    %469 = @func_3840() /* ty=(Tensor[(11, ?, 9), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) */;
    %470 = %469.1;
    %471 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 3, 11), float32] */, dtype="int16") /* ty=Tensor[(14, 3, 11), int16] */;
    %472 = shape_of(%470, dtype="int32") /* ty=Tensor[(3), int32] */;
    %473 = cast(%470, dtype="int16") /* ty=Tensor[(14, 3, 11), int16] */;
    %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    left_shift(%473, %474) /* ty=Tensor[(14, 3, 11), int16] */
  };
  %475() /* ty=Tensor[(14, 3, 11), int16] */
}

def @func_4258(%var_4256: Tensor[(16, 15), uint64], %var_4257: Tensor[(16, 15), uint64]) -> (Tensor[(16, 15), uint64],) {
  @func_4254(%var_4256, %var_4257) /* ty=(Tensor[(16, 15), uint64],) */
}

def @func_3733() -> (Tensor[(11, ?, 9), int8],) {
  @func_3731() /* ty=(Tensor[(11, ?, 9), int8],) */
}

def @func_3007() -> (Tensor[(1, 16, 1890), float64], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) {
  %476 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
  %477 = cast(meta[relay.Constant][30] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %478 = cast(meta[relay.Constant][30] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %479 = reshape(%477, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %480 = reshape(%478, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %481 = @func_357(%479, %480) /* ty=(Tensor[(4, 13, 3), float32],) */;
  %482 = %476.3;
  %483 = %481.0;
  (%482, %483, meta[relay.Constant][30] /* ty=Tensor[(156), float32] */)
}

def @func_5395() -> (Tensor[(15, 8), float64],) {
  @func_5393() /* ty=(Tensor[(15, 8), float64],) */
}

def @func_5478() -> Tensor[(15, 8), float64] {
  %484 = @func_5393() /* ty=(Tensor[(15, 8), float64],) */;
  %484.0
}

def @func_3098(%var_3089: Tensor[(1080, 224), float64], %var_3090: Tensor[(2, 300), uint8], %var_3091: Tensor[(181440), float64]) -> (Tensor[(156), float32], Tensor[(1, 1200), float32], Tensor[(15, 6, 14), float64], Tensor[(1, 5, 13), float64], Tensor[(39, 4), float32], Tensor[(7, 7, 14), float32], Tensor[(462), float32], Tensor[(1080, 224), float64], Tensor[(2, 300), uint8], Tensor[(181440), float64]) {
  %485 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 1200), float32] */, dtype="float32") /* ty=Tensor[(1, 1200), float32] */;
  %486 = reshape(%485, newshape=[16, 15, 5]) /* ty=Tensor[(16, 15, 5), float32] */;
  %487 = @func_626(%486) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(156), float32], Tensor[(4, 13, 3), float32], Tensor[(16, 15, 5), bool]) */;
  %488 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 6, 14), float32] */, dtype="float32") /* ty=Tensor[(15, 6, 14), float32] */;
  %489 = log(%488) /* ty=Tensor[(15, 6, 14), float32] */;
  %490 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 6, 14), float32] */, dtype="uint32") /* ty=Tensor[(15, 6, 14), uint32] */;
  %491 = shape_of(%489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%489, dtype="uint32") /* ty=Tensor[(15, 6, 14), uint32] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %494 = left_shift(%492, %493) /* ty=Tensor[(15, 6, 14), uint32] */;
  %495 = cast(%494, dtype="float64") /* ty=Tensor[(15, 6, 14), float64] */;
  %496 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
  %497 = @func_1866() /* ty=(Tensor[(39, 4), float32],) */;
  %498 = cast(meta[relay.Constant][33] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %499 = cast(%var_3089, dtype="float64") /* ty=Tensor[(1080, 224), float64] */;
  %500 = cast(%var_3089, dtype="float32") /* ty=Tensor[(1080, 224), float32] */;
  %501 = cast(%var_3090, dtype="uint8") /* ty=Tensor[(2, 300), uint8] */;
  %502 = cast(%var_3091, dtype="float64") /* ty=Tensor[(181440), float64] */;
  %503 = cast(%var_3089, dtype="uint8") /* ty=Tensor[(1080, 224), uint8] */;
  %504 = reshape(%498, newshape=[462]) /* ty=Tensor[(462), float32] */;
  %505 = reshape(%499, newshape=[8, 16, 1890]) /* ty=Tensor[(8, 16, 1890), float64] */;
  %506 = reshape(%500, newshape=[8, 16, 1890]) /* ty=Tensor[(8, 16, 1890), float32] */;
  %507 = reshape(%501, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %508 = reshape(%502, newshape=[6, 16, 1890]) /* ty=Tensor[(6, 16, 1890), float64] */;
  %509 = reshape(%503, newshape=[8, 16, 1890]) /* ty=Tensor[(8, 16, 1890), uint8] */;
  %510 = @func_2421(%504, %505, %506, %507, %508, %509) /* ty=(Tensor[(14, 3, 11), float32], Tensor[(462), float32], Tensor[(8, 16, 1890), int64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(7, 7, 14), float32], Tensor[(686), float32], Tensor[(1, 16, 1890), float64], Tensor[(11, ?, 9), int8], Tensor[(75), uint8], Tensor[(600), uint8], Tensor[(6, 16, 1890), bool], Tensor[(8, 16, 1890), float32], Tensor[(8, 16, 1890), float32], Tensor[(1, 5, 13), float64]) */;
  %511 = %487.1;
  %512 = sin(%495) /* ty=Tensor[(15, 6, 14), float64] */;
  %513 = %496.1;
  %514 = %497.0;
  %515 = %510.5;
  (%511, meta[relay.Constant][31] /* ty=Tensor[(1, 1200), float32] */, %512, %513, %514, %515, meta[relay.Constant][33] /* ty=Tensor[(462), float32] */, %var_3089, %var_3090, %var_3091)
}

def @func_6384() -> Tensor[(10, 16, 1890), float32] {
  %516 = @func_6366() /* ty=(Tensor[(10, 16, 1890), float32], Tensor[(1, 16, 1890), float64]) */;
  %516.0
}

def @func_4308() -> (Tensor[(1, 16, 1890), float64], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) {
  @func_4306() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) */
}

def @func_3903() -> (Tensor[(4, 13, 3), float32], Tensor[(99), int8], Tensor[(1, 5, 13), float32], Tensor[(39, 4), float32], Tensor[(39, 4), float32]) {
  %517 = @func_3703() /* ty=(Tensor[(4, 13, 3), float32],) */;
  %518 = cast(meta[relay.Constant][34] /* ty=Tensor[(99), int8] */, dtype="int8") /* ty=Tensor[(99), int8] */;
  %519 = reshape(%518, newshape=[99, 1]) /* ty=Tensor[(99, 1), int8] */;
  %520 = @func_3241(%519) /* ty=(Tensor[(1, 5, 13), float64], Tensor[(99, 1), int8], Tensor[(39, 4), float32], Tensor[(39, 4), float64]) */;
  %521 = %520.0;
  %522 = cast(%521, dtype="float64") /* ty=Tensor[(1, 5, 13), float64] */;
  %523 = acosh(%522) /* ty=Tensor[(1, 5, 13), float64] */;
  %524 = cast(%523, dtype="float64") /* ty=Tensor[(1, 5, 13), float64] */;
  %525 = cosh(%524) /* ty=Tensor[(1, 5, 13), float64] */;
  %526 = cast(%525, dtype="float32") /* ty=Tensor[(1, 5, 13), float32] */;
  %527 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
  %528 = @func_1905() /* ty=(Tensor[(39, 4), float32], Tensor[(11, ?, 9), int8], Tensor[(99), int8]) */;
  %529 = %517.0;
  %530 = asinh(%526) /* ty=Tensor[(1, 5, 13), float32] */;
  %531 = %527.0;
  %532 = %528.0;
  (%529, meta[relay.Constant][34] /* ty=Tensor[(99), int8] */, %530, %531, %532)
}

def @func_664(%var_662: Tensor[(1, 13, 14), bool], %var_663: Tensor[(5, 13, 14), bool]) -> (Tensor[(5, 13, 14), bool], Tensor[(5, 13, 14), float32]) {
  @func_660(%var_662, %var_663) /* ty=(Tensor[(5, 13, 14), bool], Tensor[(5, 13, 14), float32]) */
}

def @func_3487() -> (Tensor[(4, 13, 3), float32], Tensor[(1200), float32], Tensor[(11, ?, 9), float64]) {
  %541 = fn () -> (Tensor[(4, 13, 3), float32], Tensor[(1200), float32], Tensor[(11, ?, 9), float64]) {
    %533 = cast(meta[relay.Constant][35] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
    %534 = reshape(%533, newshape=[16, 15, 5]) /* ty=Tensor[(16, 15, 5), float32] */;
    %535 = @func_626(%534) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(156), float32], Tensor[(4, 13, 3), float32], Tensor[(16, 15, 5), bool]) */;
    %536 = @func_2192() /* ty=(Tensor[(11, ?, 9), int8], Tensor[(11, ?, 9), int8]) */;
    %537 = %536.1;
    %538 = cast(%537, dtype="float64") /* ty=Tensor[(11, ?, 9), float64] */;
    %539 = %535.0;
    %540 = sigmoid(%538) /* ty=Tensor[(11, ?, 9), float64] */;
    (%539, meta[relay.Constant][35] /* ty=Tensor[(1200), float32] */, %540)
  };
  %541() /* ty=(Tensor[(4, 13, 3), float32], Tensor[(1200), float32], Tensor[(11, ?, 9), float64]) */
}

def @func_4673(%var_4671: Tensor[(5, 8, 7), float32]) -> (Tensor[(5, 8, 7), float32], Tensor[(39, 4), float32], Tensor[(4, 13, 3), float32]) {
  @func_4670(%var_4671) /* ty=(Tensor[(5, 8, 7), float32], Tensor[(39, 4), float32], Tensor[(4, 13, 3), float32]) */
}

def @func_3931() -> Tensor[(1, 16, 1890), float64] {
  %543 = fn () -> Tensor[(1, 16, 1890), float64] {
    %542 = @func_3426() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(99, 1), int8], Tensor[(99), int8]) */;
    %542.0
  };
  %543() /* ty=Tensor[(1, 16, 1890), float64] */
}

def @func_5767(%var_5765: Tensor[(2, 16, 14), uint16], %var_5766: Tensor[(2, 16, 14), uint16]) -> (Tensor[(2, 16, 14), uint16],) {
  %549 = fn (%var_5749: Tensor[(2, 16, 14), uint16], %var_5750: Tensor[(2, 16, 14), uint16]) -> (Tensor[(2, 16, 14), uint16],) {
    %544 = cast(%var_5750, dtype="uint16") /* ty=Tensor[(2, 16, 14), uint16] */;
    %545 = shape_of(%var_5749, dtype="int32") /* ty=Tensor[(3), int32] */;
    %546 = cast(%var_5749, dtype="uint16") /* ty=Tensor[(2, 16, 14), uint16] */;
    %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %548 = left_shift(%546, %547) /* ty=Tensor[(2, 16, 14), uint16] */;
    (%548,)
  };
  %549(%var_5765, %var_5766) /* ty=(Tensor[(2, 16, 14), uint16],) */
}

def @func_6403(%var_6390: Tensor[(4, 12, 16), int16], %var_6391: Tensor[(4, 12, 16), int16]) -> (Tensor[(4, 12, 16), bool], Tensor[(4, 12, 16), float32]) {
  %550 = cast(%var_6391, dtype="bool") /* ty=Tensor[(4, 12, 16), bool] */;
  %551 = shape_of(%var_6390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %552 = cast(%var_6390, dtype="bool") /* ty=Tensor[(4, 12, 16), bool] */;
  %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %554 = cast(%var_6390, dtype="float64") /* ty=Tensor[(4, 12, 16), float64] */;
  %555 = sqrt(%554) /* ty=Tensor[(4, 12, 16), float64] */;
  %556 = cast(%555, dtype="float32") /* ty=Tensor[(4, 12, 16), float32] */;
  %557 = not_equal(%552, %553) /* ty=Tensor[(4, 12, 16), bool] */;
  %558 = asinh(%556) /* ty=Tensor[(4, 12, 16), float32] */;
  (%557, %558)
}

def @func_5393() -> (Tensor[(15, 8), float64],) {
  %559 = cast(-1.43128f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %560 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 8), float64] */, dtype="float64") /* ty=Tensor[(15, 8), float64] */;
  %561 = floor_divide(%559, %560) /* ty=Tensor[(15, 8), float64] */;
  (%561,)
}

def @func_2253(%var_2251: Tensor[(5, 1, 15), uint8], %var_2252: Tensor[(5, 8, 15), uint8]) -> (Tensor[(65), float64], Tensor[(11, ?, 9), int8], Tensor[(5, 8, 15), float64]) {
  %574 = fn (%var_2234: Tensor[(5, 1, 15), uint8], %var_2235: Tensor[(5, 8, 15), uint8]) -> (Tensor[(65), float64], Tensor[(11, ?, 9), int8], Tensor[(5, 8, 15), float64]) {
    %562 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
    %563 = @func_2192() /* ty=(Tensor[(11, ?, 9), int8], Tensor[(11, ?, 9), int8]) */;
    %564 = cast(%var_2234, dtype="uint8") /* ty=Tensor[(5, 1, 15), uint8] */;
    %565 = cast(%var_2235, dtype="uint8") /* ty=Tensor[(5, 8, 15), uint8] */;
    %566 = bitwise_or(%564, %565) /* ty=Tensor[(5, 8, 15), uint8] */;
    %567 = cast(%566, dtype="float64") /* ty=Tensor[(5, 8, 15), float64] */;
    %568 = shape_of(%var_2235, dtype="int32") /* ty=Tensor[(3), int32] */;
    %569 = cast(%var_2235, dtype="float64") /* ty=Tensor[(5, 8, 15), float64] */;
    %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %571 = %562.2;
    %572 = %563.0;
    %573 = mod(%569, %570) /* ty=Tensor[(5, 8, 15), float64] */;
    (%571, %572, %573)
  };
  %574(%var_2251, %var_2252) /* ty=(Tensor[(65), float64], Tensor[(11, ?, 9), int8], Tensor[(5, 8, 15), float64]) */
}

def @func_5182() -> (Tensor[(99), int8],) {
  %575 = @func_3426() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(99, 1), int8], Tensor[(99), int8]) */;
  %576 = %575.2;
  (%576,)
}

def @func_5184() -> (Tensor[(99), int8],) {
  @func_5182() /* ty=(Tensor[(99), int8],) */
}

def @func_5337() -> (Tensor[(462), float32], Tensor[(1, 16, 1890), float64], Tensor[(1, 16, 1890), float64]) {
  %577 = @func_3840() /* ty=(Tensor[(11, ?, 9), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) */;
  %578 = @func_2747() /* ty=(Tensor[(1, 16, 1890), float32],) */;
  %579 = %578.0;
  %580 = cast(%579, dtype="float64") /* ty=Tensor[(1, 16, 1890), float64] */;
  %581 = cast(%579, dtype="float64") /* ty=Tensor[(1, 16, 1890), float64] */;
  %582 = %577.2;
  %583 = sin(%580) /* ty=Tensor[(1, 16, 1890), float64] */;
  %584 = erf(%581) /* ty=Tensor[(1, 16, 1890), float64] */;
  (%582, %583, %584)
}

def @func_3798(%var_3796: Tensor[(6, 15, 13), uint64]) -> (Tensor[(6, 15, 13), bool],) {
  @func_3795(%var_3796) /* ty=(Tensor[(6, 15, 13), bool],) */
}

def @func_5945() -> Tensor[(4, 13, 3), float32] {
  %586 = fn () -> Tensor[(4, 13, 3), float32] {
    %585 = @func_3703() /* ty=(Tensor[(4, 13, 3), float32],) */;
    %585.0
  };
  %586() /* ty=Tensor[(4, 13, 3), float32] */
}

def @func_7033() -> (Tensor[(14, 3, 11), int16],) {
  @func_7031() /* ty=(Tensor[(14, 3, 11), int16],) */
}

def @func_3627(%var_3626: Tensor[(1820, 1), int16]) -> (Tensor[(4, 13, 3), float32], Tensor[(14, 13, 10), int16], Tensor[(1820, 1), int16]) {
  %592 = fn (%var_3620: Tensor[(1820, 1), int16]) -> (Tensor[(4, 13, 3), float32], Tensor[(14, 13, 10), int16], Tensor[(1820, 1), int16]) {
    %587 = @func_3486() /* ty=(Tensor[(4, 13, 3), float32], Tensor[(1200), float32], Tensor[(11, ?, 9), float64]) */;
    %588 = cast(%var_3620, dtype="int16") /* ty=Tensor[(1820, 1), int16] */;
    %589 = reshape(%588, newshape=[14, 13, 10]) /* ty=Tensor[(14, 13, 10), int16] */;
    %590 = %587.0;
    %591 = @func_2501(%589) /* ty=Tensor[(14, 13, 10), int16] */;
    (%590, %591, %var_3620)
  };
  %592(%var_3626) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(14, 13, 10), int16], Tensor[(1820, 1), int16]) */
}

def @func_6337() -> (Tensor[(11, ?, 9), int8],) {
  @func_6335() /* ty=(Tensor[(11, ?, 9), int8],) */
}

def @func_4898() -> Tensor[(39, 4), float32] {
  @func_4896() /* ty=Tensor[(39, 4), float32] */
}

def @func_6073(%var_6071: Tensor[(39, 4), float32], %var_6072: Tensor[(144), float64]) -> (Tensor[(39, 4), bool], Tensor[(39, 4), int16], Tensor[(6, 8, 3), float64], Tensor[(144), float64], Tensor[(11, ?, 9), int8]) {
  %627 = fn (%var_6047: Tensor[(39, 4), float32], %var_6055: Tensor[(144), float64]) -> (Tensor[(39, 4), bool], Tensor[(39, 4), int16], Tensor[(6, 8, 3), float64], Tensor[(144), float64], Tensor[(11, ?, 9), int8]) {
    %593 = @func_1905() /* ty=(Tensor[(39, 4), float32], Tensor[(11, ?, 9), int8], Tensor[(99), int8]) */;
    %594 = %593.0;
    %595 = cast(meta[relay.Constant][37] /* ty=Tensor[(39, 4), float32] */, dtype="bool") /* ty=Tensor[(39, 4), bool] */;
    %596 = shape_of(%594, dtype="int32") /* ty=Tensor[(2), int32] */;
    %597 = cast(%594, dtype="bool") /* ty=Tensor[(39, 4), bool] */;
    %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %599 = logical_and(%597, %598) /* ty=Tensor[(39, 4), bool] */;
    %600 = @func_4386() /* ty=Tensor[(4, 13, 3), float32] */;
    %601 = cast(%600, dtype="float32") /* ty=Tensor[(4, 13, 3), float32] */;
    %602 = shape_of(%599, dtype="int32") /* ty=Tensor[(2), int32] */;
    %603 = cast(%599, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
    %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %605 = floor_divide(%603, %604) /* ty=Tensor[(39, 4), float32] */;
    %606 = cast(%605, dtype="bool") /* ty=Tensor[(39, 4), bool] */;
    %607 = shape_of(%599, dtype="int32") /* ty=Tensor[(2), int32] */;
    %608 = cast(%599, dtype="bool") /* ty=Tensor[(39, 4), bool] */;
    %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %610 = cast(%599, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
    %611 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(39, 4), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %612 = cast(meta[relay.Constant][37] /* ty=Tensor[(39, 4), float32] */, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
    %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %614 = divide(%612, %613) /* ty=Tensor[(39, 4), float32] */;
    %615 = cast(%var_6047, dtype="int16") /* ty=Tensor[(39, 4), int16] */;
    %616 = shape_of(%614, dtype="int32") /* ty=Tensor[(2), int32] */;
    %617 = cast(%614, dtype="int16") /* ty=Tensor[(39, 4), int16] */;
    %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %619 = cast(%var_6055, dtype="float64") /* ty=Tensor[(144), float64] */;
    %620 = reshape(%619, newshape=[6, 8, 3]) /* ty=Tensor[(6, 8, 3), float64] */;
    %621 = @func_4297(%620) /* ty=(Tensor[(6, 8, 3), float64],) */;
    %622 = @func_3731() /* ty=(Tensor[(11, ?, 9), int8],) */;
    %623 = less(%608, %609) /* ty=Tensor[(39, 4), bool] */;
    %624 = bitwise_xor(%617, %618) /* ty=Tensor[(39, 4), int16] */;
    %625 = %621.0;
    %626 = %622.0;
    (%623, %624, %625, %var_6055, %626)
  };
  %627(%var_6071, %var_6072) /* ty=(Tensor[(39, 4), bool], Tensor[(39, 4), int16], Tensor[(6, 8, 3), float64], Tensor[(144), float64], Tensor[(11, ?, 9), int8]) */
}

def @func_4823() -> (Tensor[(?, 16, 1890), bool], Tensor[(?, 16, 1890), uint16]) {
  %642 = fn () -> (Tensor[(?, 16, 1890), bool], Tensor[(?, 16, 1890), uint16]) {
    %628 = @func_1927() /* ty=(Tensor[(1, 16, 1890), float64],) */;
    %629 = %628.0;
    %630 = cast(%629, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
    %631 = asin(%630) /* ty=Tensor[(1, 16, 1890), float32] */;
    %632 = cast(%629, dtype="bool") /* ty=Tensor[(1, 16, 1890), bool] */;
    %633 = shape_of(%631, dtype="int32") /* ty=Tensor[(3), int32] */;
    %634 = cast(%631, dtype="bool") /* ty=Tensor[(1, 16, 1890), bool] */;
    %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %636 = cast(%629, dtype="uint16") /* ty=Tensor[(1, 16, 1890), uint16] */;
    %637 = shape_of(%631, dtype="int32") /* ty=Tensor[(3), int32] */;
    %638 = cast(%631, dtype="uint16") /* ty=Tensor[(1, 16, 1890), uint16] */;
    %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %640 = greater_equal(%634, %635) /* ty=Tensor[(?, 16, 1890), bool] */;
    %641 = bitwise_xor(%638, %639) /* ty=Tensor[(?, 16, 1890), uint16] */;
    (%640, %641)
  };
  %642() /* ty=(Tensor[(?, 16, 1890), bool], Tensor[(?, 16, 1890), uint16]) */
}

def @func_2428(%var_2422: Tensor[(462), float32], %var_2423: Tensor[(8, 16, 1890), float64], %var_2424: Tensor[(8, 16, 1890), float32], %var_2425: Tensor[(600), uint8], %var_2426: Tensor[(6, 16, 1890), float64], %var_2427: Tensor[(8, 16, 1890), uint8]) -> (Tensor[(14, 3, 11), float32], Tensor[(462), float32], Tensor[(8, 16, 1890), int64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(7, 7, 14), float32], Tensor[(686), float32], Tensor[(1, 16, 1890), float64], Tensor[(11, ?, 9), int8], Tensor[(75), uint8], Tensor[(600), uint8], Tensor[(6, 16, 1890), bool], Tensor[(8, 16, 1890), float32], Tensor[(8, 16, 1890), float32], Tensor[(1, 5, 13), float64]) {
  %698 = fn (%var_2294: Tensor[(462), float32], %var_2298: Tensor[(8, 16, 1890), float64], %var_2340: Tensor[(8, 16, 1890), float32], %var_2347: Tensor[(600), uint8], %var_2356: Tensor[(6, 16, 1890), float64], %var_2387: Tensor[(8, 16, 1890), uint8]) -> (Tensor[(14, 3, 11), float32], Tensor[(462), float32], Tensor[(8, 16, 1890), int64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(7, 7, 14), float32], Tensor[(686), float32], Tensor[(1, 16, 1890), float64], Tensor[(11, ?, 9), int8], Tensor[(75), uint8], Tensor[(600), uint8], Tensor[(6, 16, 1890), bool], Tensor[(8, 16, 1890), float32], Tensor[(8, 16, 1890), float32], Tensor[(1, 5, 13), float64]) {
    %643 = cast(%var_2294, dtype="float32") /* ty=Tensor[(462), float32] */;
    %644 = reshape(%643, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), float32] */;
    %645 = @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */;
    %646 = %645.0;
    %647 = cast(%646, dtype="int64") /* ty=Tensor[(1, 16, 1890), int64] */;
    %648 = cast(%var_2298, dtype="int64") /* ty=Tensor[(8, 16, 1890), int64] */;
    %649 = cast(meta[relay.Constant][38] /* ty=Tensor[(65), float64] */, dtype="float64") /* ty=Tensor[(65), float64] */;
    %650 = reshape(%649, newshape=[1, 5, 13]) /* ty=Tensor[(1, 5, 13), float64] */;
    %651 = @func_972(%650) /* ty=(Tensor[(1, 5, 13), float64],) */;
    %652 = cast(meta[relay.Constant][39] /* ty=Tensor[(686), float32] */, dtype="float32") /* ty=Tensor[(686), float32] */;
    %653 = reshape(%652, newshape=[7, 7, 14]) /* ty=Tensor[(7, 7, 14), float32] */;
    %654 = @func_1662(%653) /* ty=(Tensor[(7, 7, 14), float32],) */;
    %655 = @func_2173() /* ty=(Tensor[(1, 16, 1890), float64],) */;
    %656 = cast(meta[relay.Constant][40] /* ty=Tensor[(75), uint8] */, dtype="uint8") /* ty=Tensor[(75), uint8] */;
    %657 = cast(%var_2347, dtype="uint8") /* ty=Tensor[(600), uint8] */;
    %658 = reshape(%656, newshape=[5, 1, 15]) /* ty=Tensor[(5, 1, 15), uint8] */;
    %659 = reshape(%657, newshape=[5, 8, 15]) /* ty=Tensor[(5, 8, 15), uint8] */;
    %660 = @func_2250(%658, %659) /* ty=(Tensor[(65), float64], Tensor[(11, ?, 9), int8], Tensor[(5, 8, 15), float64]) */;
    %661 = cast(%646, dtype="bool") /* ty=Tensor[(1, 16, 1890), bool] */;
    %662 = cast(%var_2356, dtype="bool") /* ty=Tensor[(6, 16, 1890), bool] */;
    %663 = cast(%var_2298, dtype="float64") /* ty=Tensor[(8, 16, 1890), float64] */;
    %664 = atanh(%663) /* ty=Tensor[(8, 16, 1890), float64] */;
    %665 = cast(%664, dtype="float32") /* ty=Tensor[(8, 16, 1890), float32] */;
    %666 = sinh(%665) /* ty=Tensor[(8, 16, 1890), float32] */;
    %667 = cast(%var_2298, dtype="float32") /* ty=Tensor[(8, 16, 1890), float32] */;
    %668 = shape_of(%666, dtype="int32") /* ty=Tensor[(3), int32] */;
    %669 = cast(%666, dtype="float32") /* ty=Tensor[(8, 16, 1890), float32] */;
    %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %671 = cast(%var_2340, dtype="uint8") /* ty=Tensor[(8, 16, 1890), uint8] */;
    %672 = shape_of(%666, dtype="int32") /* ty=Tensor[(3), int32] */;
    %673 = cast(%666, dtype="uint8") /* ty=Tensor[(8, 16, 1890), uint8] */;
    %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %675 = add(%673, %674) /* ty=Tensor[(8, 16, 1890), uint8] */;
    %676 = cast(%var_2387, dtype="uint8") /* ty=Tensor[(8, 16, 1890), uint8] */;
    %677 = shape_of(%675, dtype="int32") /* ty=Tensor[(3), int32] */;
    %678 = cast(%675, dtype="uint8") /* ty=Tensor[(8, 16, 1890), uint8] */;
    %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %680 = subtract(%678, %679) /* ty=Tensor[(8, 16, 1890), uint8] */;
    %681 = cast(%666, dtype="float32") /* ty=Tensor[(8, 16, 1890), float32] */;
    %682 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
    %683 = cast(%680, dtype="float32") /* ty=Tensor[(8, 16, 1890), float32] */;
    %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %685 = cast(meta[relay.Constant][38] /* ty=Tensor[(65), float64] */, dtype="float64") /* ty=Tensor[(65), float64] */;
    %686 = reshape(%685, newshape=[1, 5, 13]) /* ty=Tensor[(1, 5, 13), float64] */;
    %687 = @func_972(%686) /* ty=(Tensor[(1, 5, 13), float64],) */;
    %688 = @func_989(%644) /* ty=Tensor[(14, 3, 11), float32] */;
    %689 = left_shift(%647, %648) /* ty=Tensor[(8, 16, 1890), int64] */;
    %690 = %651.0;
    %691 = %654.0;
    %692 = %655.0;
    %693 = %660.1;
    %694 = less(%661, %662) /* ty=Tensor[(6, 16, 1890), bool] */;
    %695 = mod(%669, %670) /* ty=Tensor[(8, 16, 1890), float32] */;
    %696 = floor_divide(%683, %684) /* ty=Tensor[(8, 16, 1890), float32] */;
    %697 = %687.0;
    (%688, %var_2294, %689, %690, meta[relay.Constant][38] /* ty=Tensor[(65), float64] */, %691, meta[relay.Constant][39] /* ty=Tensor[(686), float32] */, %692, %693, meta[relay.Constant][40] /* ty=Tensor[(75), uint8] */, %var_2347, %694, %695, %696, %697)
  };
  %698(%var_2422, %var_2423, %var_2424, %var_2425, %var_2426, %var_2427) /* ty=(Tensor[(14, 3, 11), float32], Tensor[(462), float32], Tensor[(8, 16, 1890), int64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(7, 7, 14), float32], Tensor[(686), float32], Tensor[(1, 16, 1890), float64], Tensor[(11, ?, 9), int8], Tensor[(75), uint8], Tensor[(600), uint8], Tensor[(6, 16, 1890), bool], Tensor[(8, 16, 1890), float32], Tensor[(8, 16, 1890), float32], Tensor[(1, 5, 13), float64]) */
}

def @func_5061() -> (Tensor[(11, ?, 9), int8],) {
  @func_5059() /* ty=(Tensor[(11, ?, 9), int8],) */
}

def @func_4974() -> Tensor[(39, 4), float32] {
  %699 = @func_3991() /* ty=(Tensor[(39, 4), float32],) */;
  %699.0
}

def @func_6873() -> Tensor[(15, 8), float64] {
  @func_6871() /* ty=Tensor[(15, 8), float64] */
}

def @main() -> (Tensor[(1, 5, 13), float32], Tensor[(1, 16, 1890), float64], Tensor[(1, 16, 1890), float64], Tensor[(5, 16, 1890), bool]) {
  %700 = @func_5466() /* ty=(Tensor[(1, 5, 13), float32],) */;
  %701 = @func_6367() /* ty=(Tensor[(10, 16, 1890), float32], Tensor[(1, 16, 1890), float64]) */;
  %702 = %701.1;
  %703 = cast(%702, dtype="float64") /* ty=Tensor[(1, 16, 1890), float64] */;
  %704 = cast(%702, dtype="bool") /* ty=Tensor[(1, 16, 1890), bool] */;
  %705 = cast(meta[relay.Constant][41] /* ty=Tensor[(5, 16, 1890), float64] */, dtype="bool") /* ty=Tensor[(5, 16, 1890), bool] */;
  %706 = %700.0;
  %707 = acosh(%703) /* ty=Tensor[(1, 16, 1890), float64] */;
  %708 = @func_4909() /* ty=Tensor[(1, 16, 1890), float64] */;
  %709 = less_equal(%704, %705) /* ty=Tensor[(5, 16, 1890), bool] */;
  (%706, %707, %708, %709)
}

def @func_5008(%var_5005: uint16, %var_5006: Tensor[(5, 1, 12), uint16], %var_5007: Tensor[(156), float32]) -> (Tensor[(5, 1, 12), uint16], Tensor[(156), float32], Tensor[(156), float32]) {
  %717 = fn (%var_4992: uint16, %var_4993: Tensor[(5, 1, 12), uint16], %var_5000: Tensor[(156), float32]) -> (Tensor[(5, 1, 12), uint16], Tensor[(156), float32], Tensor[(156), float32]) {
    %710 = cast(%var_4992, dtype="uint16") /* ty=uint16 */;
    %711 = cast(%var_4993, dtype="uint16") /* ty=Tensor[(5, 1, 12), uint16] */;
    %712 = cast(%var_5000, dtype="float32") /* ty=Tensor[(156), float32] */;
    %713 = reshape(%712, newshape=[156]) /* ty=Tensor[(156), float32] */;
    %714 = @func_4340(%713) /* ty=(Tensor[(11, ?, 9), float32], Tensor[(4, 13, 3), int8], Tensor[(156), float32]) */;
    %715 = minimum(%710, %711) /* ty=Tensor[(5, 1, 12), uint16] */;
    %716 = %714.2;
    (%715, %716, %var_5000)
  };
  %717(%var_5005, %var_5006, %var_5007) /* ty=(Tensor[(5, 1, 12), uint16], Tensor[(156), float32], Tensor[(156), float32]) */
}

def @func_628(%var_627: Tensor[(16, 15, 5), float32]) -> (Tensor[(4, 13, 3), float32], Tensor[(156), float32], Tensor[(4, 13, 3), float32], Tensor[(16, 15, 5), bool]) {
  %737 = fn (%var_581: Tensor[(16, 15, 5), float32]) -> (Tensor[(4, 13, 3), float32], Tensor[(156), float32], Tensor[(4, 13, 3), float32], Tensor[(16, 15, 5), bool]) {
    %718 = cast(meta[relay.Constant][42] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %719 = cast(meta[relay.Constant][42] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %720 = reshape(%718, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
    %721 = reshape(%719, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
    %722 = @func_357(%720, %721) /* ty=(Tensor[(4, 13, 3), float32],) */;
    %723 = %722.0;
    %724 = cast(%723, dtype="float32") /* ty=Tensor[(4, 13, 3), float32] */;
    %725 = cast(%723, dtype="float32") /* ty=Tensor[(4, 13, 3), float32] */;
    %726 = reshape(%724, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
    %727 = reshape(%725, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
    %728 = @func_357(%726, %727) /* ty=(Tensor[(4, 13, 3), float32],) */;
    %729 = cast(%var_581, dtype="float32") /* ty=Tensor[(16, 15, 5), float32] */;
    %730 = log(%729) /* ty=Tensor[(16, 15, 5), float32] */;
    %731 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 15, 5), float32] */, dtype="bool") /* ty=Tensor[(16, 15, 5), bool] */;
    %732 = shape_of(%730, dtype="int32") /* ty=Tensor[(3), int32] */;
    %733 = cast(%730, dtype="bool") /* ty=Tensor[(16, 15, 5), bool] */;
    %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %735 = %728.0;
    %736 = less_equal(%733, %734) /* ty=Tensor[(16, 15, 5), bool] */;
    (%723, meta[relay.Constant][42] /* ty=Tensor[(156), float32] */, %735, %736)
  };
  %737(%var_627) /* ty=(Tensor[(4, 13, 3), float32], Tensor[(156), float32], Tensor[(4, 13, 3), float32], Tensor[(16, 15, 5), bool]) */
}

def @func_3009() -> (Tensor[(1, 16, 1890), float64], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) {
  @func_3007() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) */
}

def @func_2503(%var_2502: Tensor[(14, 13, 10), int16]) -> Tensor[(14, 13, 10), int16] {
  %742 = fn (%var_2484: Tensor[(14, 13, 10), int16]) -> Tensor[(14, 13, 10), int16] {
    %738 = cast(%var_2484, dtype="int16") /* ty=Tensor[(14, 13, 10), int16] */;
    %739 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(14, 13, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %740 = cast(meta[relay.Constant][44] /* ty=Tensor[(14, 13, 10), int16] */, dtype="int16") /* ty=Tensor[(14, 13, 10), int16] */;
    %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    multiply(%740, %741) /* ty=Tensor[(14, 13, 10), int16] */
  };
  %742(%var_2502) /* ty=Tensor[(14, 13, 10), int16] */
}

def @func_4896() -> Tensor[(39, 4), float32] {
  %743 = @func_1866() /* ty=(Tensor[(39, 4), float32],) */;
  %743.0
}

def @func_6230(%var_6179: Tensor[(99), int8], %var_6182: Tensor[(15, 5, 13), float64], %var_6212: Tensor[(156), float32]) -> (Tensor[(?, 16, 1890), float32], Tensor[(99), int8], Tensor[(15, 5, 13), int64], Tensor[(99), int8], Tensor[(4, 13, 3), float32], Tensor[(156), float32], Tensor[(?, 16, 1890), int32]) {
  %744 = @func_5337() /* ty=(Tensor[(462), float32], Tensor[(1, 16, 1890), float64], Tensor[(1, 16, 1890), float64]) */;
  %745 = %744.2;
  %746 = @func_4822() /* ty=(Tensor[(?, 16, 1890), bool], Tensor[(?, 16, 1890), uint16]) */;
  %747 = %746.1;
  %748 = cast(%747, dtype="float32") /* ty=Tensor[(?, 16, 1890), float32] */;
  %749 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%745, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %752 = cast(%var_6179, dtype="int8") /* ty=Tensor[(99), int8] */;
  %753 = reshape(%752, newshape=[99, 1]) /* ty=Tensor[(99, 1), int8] */;
  %754 = @func_2580(%753) /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 5, 13), float64], Tensor[(1, 16, 1890), float32], Tensor[(11, ?, 9), int8], Tensor[(99, 1), int8]) */;
  %755 = %754.1;
  %756 = cast(%755, dtype="int64") /* ty=Tensor[(1, 5, 13), int64] */;
  %757 = cast(%var_6182, dtype="int64") /* ty=Tensor[(15, 5, 13), int64] */;
  %758 = @func_3426() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(99, 1), int8], Tensor[(99), int8]) */;
  %759 = cast(%var_6212, dtype="float32") /* ty=Tensor[(156), float32] */;
  %760 = reshape(%759, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %761 = @func_4611(%760) /* ty=(Tensor[(11, ?, 9), int8], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) */;
  %762 = cast(%747, dtype="int32") /* ty=Tensor[(?, 16, 1890), int32] */;
  %763 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %764 = cast(%745, dtype="int32") /* ty=Tensor[(1, 16, 1890), int32] */;
  %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %766 = minimum(%750, %751) /* ty=Tensor[(?, 16, 1890), float32] */;
  %767 = bitwise_or(%756, %757) /* ty=Tensor[(15, 5, 13), int64] */;
  %768 = %758.2;
  %769 = %761.1;
  %770 = left_shift(%764, %765) /* ty=Tensor[(?, 16, 1890), int32] */;
  (%766, %var_6179, %767, %768, %769, %var_6212, %770)
}

def @func_6987() -> (Tensor[(4, 13, 3), float32], Tensor[(99), int8]) {
  %775 = fn () -> (Tensor[(4, 13, 3), float32], Tensor[(99), int8]) {
    %771 = @func_3703() /* ty=(Tensor[(4, 13, 3), float32],) */;
    %772 = @func_5353() /* ty=(Tensor[(39, 4), float32], Tensor[(99), int8]) */;
    %773 = %771.0;
    %774 = %772.1;
    (%773, %774)
  };
  %775() /* ty=(Tensor[(4, 13, 3), float32], Tensor[(99), int8]) */
}

def @func_974(%var_973: Tensor[(1, 5, 13), float64]) -> (Tensor[(1, 5, 13), float64],) {
  %778 = fn (%var_967: Tensor[(1, 5, 13), float64]) -> (Tensor[(1, 5, 13), float64],) {
    %776 = cast(%var_967, dtype="float64") /* ty=Tensor[(1, 5, 13), float64] */;
    %777 = log(%776) /* ty=Tensor[(1, 5, 13), float64] */;
    (%777,)
  };
  %778(%var_973) /* ty=(Tensor[(1, 5, 13), float64],) */
}

def @func_4909() -> Tensor[(1, 16, 1890), float64] {
  %779 = @func_3136() /* ty=(Tensor[(1, 16, 1890), float64],) */;
  %779.0
}

def @func_1905() -> (Tensor[(39, 4), float32], Tensor[(11, ?, 9), int8], Tensor[(99), int8]) {
  %780 = @func_1866() /* ty=(Tensor[(39, 4), float32],) */;
  %781 = cast(meta[relay.Constant][45] /* ty=Tensor[(99), int8] */, dtype="int8") /* ty=Tensor[(99), int8] */;
  %782 = cast(meta[relay.Constant][45] /* ty=Tensor[(99), int8] */, dtype="int8") /* ty=Tensor[(99), int8] */;
  %783 = reshape(%781, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %784 = reshape(%782, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %785 = %780.0;
  %786 = @func_1064(%783, %784) /* ty=Tensor[(11, ?, 9), int8] */;
  (%785, %786, meta[relay.Constant][45] /* ty=Tensor[(99), int8] */)
}

def @func_361(%var_359: Tensor[(4, 13, 3), float32], %var_360: Tensor[(4, 13, 3), float32]) -> (Tensor[(4, 13, 3), float32],) {
  @func_357(%var_359, %var_360) /* ty=(Tensor[(4, 13, 3), float32],) */
}

def @func_3570(%var_3568: Tensor[(4, 13, 3), float32]) -> (Tensor[(4, 13, 3), int8],) {
  @func_3567(%var_3568) /* ty=(Tensor[(4, 13, 3), int8],) */
}

def @func_4459(%var_4449: Tensor[(182), bool], %var_4450: Tensor[(910), bool]) -> (Tensor[(4, 13, 3), float32], Tensor[(1, 5, 13), float64], Tensor[(4, 13, 3), float32], Tensor[(5, 13, 14), float32], Tensor[(182), bool], Tensor[(910), bool]) {
  %787 = @func_3703() /* ty=(Tensor[(4, 13, 3), float32],) */;
  %788 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
  %789 = @func_3007() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(4, 13, 3), float32], Tensor[(156), float32]) */;
  %790 = cast(%var_4449, dtype="bool") /* ty=Tensor[(182), bool] */;
  %791 = cast(%var_4450, dtype="bool") /* ty=Tensor[(910), bool] */;
  %792 = reshape(%790, newshape=[1, 13, 14]) /* ty=Tensor[(1, 13, 14), bool] */;
  %793 = reshape(%791, newshape=[5, 13, 14]) /* ty=Tensor[(5, 13, 14), bool] */;
  %794 = @func_660(%792, %793) /* ty=(Tensor[(5, 13, 14), bool], Tensor[(5, 13, 14), float32]) */;
  %795 = %787.0;
  %796 = %788.1;
  %797 = %789.1;
  %798 = %794.1;
  (%795, %796, %797, %798, %var_4449, %var_4450)
}

def @func_6826(%var_6824: Tensor[(77, 6), float32]) -> (Tensor[(99), int8], Tensor[(14, 3, 11), float32], Tensor[(10, 130), int16], Tensor[(77, 6), float32]) {
  @func_6823(%var_6824) /* ty=(Tensor[(99), int8], Tensor[(14, 3, 11), float32], Tensor[(10, 130), int16], Tensor[(77, 6), float32]) */
}

def @func_3044(%var_3043: Tensor[(99, 1), int8]) -> (Tensor[(3, 16, 1890), float32], Tensor[(11, ?, 9), int8], Tensor[(99, 1), int8]) {
  %809 = fn (%var_3040: Tensor[(99, 1), int8]) -> (Tensor[(3, 16, 1890), float32], Tensor[(11, ?, 9), int8], Tensor[(99, 1), int8]) {
    %799 = @func_2747() /* ty=(Tensor[(1, 16, 1890), float32],) */;
    %800 = %799.0;
    %801 = cast(%800, dtype="float32") /* ty=Tensor[(1, 16, 1890), float32] */;
    %802 = cast(meta[relay.Constant][46] /* ty=Tensor[(3, 16, 1890), float32] */, dtype="float32") /* ty=Tensor[(3, 16, 1890), float32] */;
    %803 = cast(%var_3040, dtype="int8") /* ty=Tensor[(99, 1), int8] */;
    %804 = cast(%var_3040, dtype="int8") /* ty=Tensor[(99, 1), int8] */;
    %805 = reshape(%803, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
    %806 = reshape(%804, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
    %807 = floor_divide(%801, %802) /* ty=Tensor[(3, 16, 1890), float32] */;
    %808 = @func_1064(%805, %806) /* ty=Tensor[(11, ?, 9), int8] */;
    (%807, %808, %var_3040)
  };
  %809(%var_3043) /* ty=(Tensor[(3, 16, 1890), float32], Tensor[(11, ?, 9), int8], Tensor[(99, 1), int8]) */
}

def @func_1929() -> (Tensor[(1, 16, 1890), float64],) {
  @func_1927() /* ty=(Tensor[(1, 16, 1890), float64],) */
}

def @func_1867() -> (Tensor[(39, 4), float32],) {
  %812 = fn () -> (Tensor[(39, 4), float32],) {
    %810 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
    %811 = %810.0;
    (%811,)
  };
  %812() /* ty=(Tensor[(39, 4), float32],) */
}

def @func_4724() -> (Tensor[(4, 13, 3), float32],) {
  %813 = @func_4386() /* ty=Tensor[(4, 13, 3), float32] */;
  (%813,)
}

def @func_1398(%var_1376: Tensor[(15, 14, 9), float32]) -> (Tensor[(15, 14, 9), float64], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(4, 13, 3), float32], Tensor[(39, 4), float32]) {
  %814 = cast(%var_1376, dtype="float32") /* ty=Tensor[(15, 14, 9), float32] */;
  %815 = cosh(%814) /* ty=Tensor[(15, 14, 9), float32] */;
  %816 = cast(%815, dtype="float64") /* ty=Tensor[(15, 14, 9), float64] */;
  %817 = cast(meta[relay.Constant][47] /* ty=Tensor[(65), float64] */, dtype="float64") /* ty=Tensor[(65), float64] */;
  %818 = reshape(%817, newshape=[1, 5, 13]) /* ty=Tensor[(1, 5, 13), float64] */;
  %819 = @func_972(%818) /* ty=(Tensor[(1, 5, 13), float64],) */;
  %820 = cast(meta[relay.Constant][48] /* ty=Tensor[(39, 4), float32] */, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %821 = cast(meta[relay.Constant][48] /* ty=Tensor[(39, 4), float32] */, dtype="float32") /* ty=Tensor[(39, 4), float32] */;
  %822 = reshape(%820, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %823 = reshape(%821, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
  %824 = @func_357(%822, %823) /* ty=(Tensor[(4, 13, 3), float32],) */;
  %825 = tan(%816) /* ty=Tensor[(15, 14, 9), float64] */;
  %826 = %819.0;
  %827 = %824.0;
  (%825, %826, meta[relay.Constant][47] /* ty=Tensor[(65), float64] */, %827, meta[relay.Constant][48] /* ty=Tensor[(39, 4), float32] */)
}

def @func_2455(%var_2451: Tensor[(686), float32]) -> (Tensor[(39, 4), float32], Tensor[(7, 7, 14), float32], Tensor[(686), float32]) {
  %828 = @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */;
  %829 = cast(%var_2451, dtype="float32") /* ty=Tensor[(686), float32] */;
  %830 = reshape(%829, newshape=[7, 7, 14]) /* ty=Tensor[(7, 7, 14), float32] */;
  %831 = @func_1662(%830) /* ty=(Tensor[(7, 7, 14), float32],) */;
  %832 = %828.0;
  %833 = %831.0;
  (%832, %833, %var_2451)
}

def @func_6514() -> (Tensor[(14, 3, 11), int16], Tensor[(1, 16, 1890), float64]) {
  %834 = @func_3426() /* ty=(Tensor[(1, 16, 1890), float64], Tensor[(99, 1), int8], Tensor[(99), int8]) */;
  %835 = @func_5241() /* ty=Tensor[(14, 3, 11), int16] */;
  %836 = %834.0;
  (%835, %836)
}

def @func_2919(%var_2901: Tensor[(1300, 1), int16], %var_2902: Tensor[(462), float32]) -> (Tensor[(1, 16, 1890), float32], Tensor[(14, 3, 11), float32], Tensor[(1300, 1), int16], Tensor[(462), float32]) {
  %837 = @func_2747() /* ty=(Tensor[(1, 16, 1890), float32],) */;
  %838 = cast(%var_2901, dtype="int16") /* ty=Tensor[(1300, 1), int16] */;
  %839 = cast(%var_2902, dtype="float32") /* ty=Tensor[(462), float32] */;
  %840 = reshape(%838, newshape=[13, 10, 10]) /* ty=Tensor[(13, 10, 10), int16] */;
  %841 = reshape(%839, newshape=[462]) /* ty=Tensor[(462), float32] */;
  %842 = @func_2062(%840, %841) /* ty=(Tensor[(13, 10, 10), float32], Tensor[(14, 3, 11), float32], Tensor[(462), float32]) */;
  %843 = %837.0;
  %844 = %842.1;
  (%843, %844, %var_2901, %var_2902)
}

def @func_6516() -> (Tensor[(14, 3, 11), int16], Tensor[(1, 16, 1890), float64]) {
  @func_6514() /* ty=(Tensor[(14, 3, 11), int16], Tensor[(1, 16, 1890), float64]) */
}

def @func_3992() -> (Tensor[(39, 4), float32],) {
  %847 = fn () -> (Tensor[(39, 4), float32],) {
    %845 = @func_1866() /* ty=(Tensor[(39, 4), float32],) */;
    %846 = %845.0;
    (%846,)
  };
  %847() /* ty=(Tensor[(39, 4), float32],) */
}

def @func_1783() -> (Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) {
  @func_1781() /* ty=(Tensor[(39, 4), float32], Tensor[(1, 5, 13), float64], Tensor[(65), float64], Tensor[(1, 16, 1890), float64]) */
}

def @func_4911() -> Tensor[(1, 16, 1890), float64] {
  @func_4909() /* ty=Tensor[(1, 16, 1890), float64] */
}

def @func_3905() -> (Tensor[(4, 13, 3), float32], Tensor[(99), int8], Tensor[(1, 5, 13), float32], Tensor[(39, 4), float32], Tensor[(39, 4), float32]) {
  @func_3903() /* ty=(Tensor[(4, 13, 3), float32], Tensor[(99), int8], Tensor[(1, 5, 13), float32], Tensor[(39, 4), float32], Tensor[(39, 4), float32]) */
}

def @func_3438() -> Tensor[(11, ?, 9), int8] {
  @func_3436() /* ty=Tensor[(11, ?, 9), int8] */
}

def @func_4342(%var_4341: Tensor[(156), float32]) -> (Tensor[(11, ?, 9), float32], Tensor[(4, 13, 3), int8], Tensor[(156), float32]) {
  %856 = fn (%var_4337: Tensor[(156), float32]) -> (Tensor[(11, ?, 9), float32], Tensor[(4, 13, 3), int8], Tensor[(156), float32]) {
    %848 = @func_1905() /* ty=(Tensor[(39, 4), float32], Tensor[(11, ?, 9), int8], Tensor[(99), int8]) */;
    %849 = %848.1;
    %850 = cast(%849, dtype="float32") /* ty=Tensor[(11, ?, 9), float32] */;
    %851 = cast(%var_4337, dtype="float32") /* ty=Tensor[(156), float32] */;
    %852 = reshape(%851, newshape=[4, 13, 3]) /* ty=Tensor[(4, 13, 3), float32] */;
    %853 = @func_3567(%852) /* ty=(Tensor[(4, 13, 3), int8],) */;
    %854 = exp(%850) /* ty=Tensor[(11, ?, 9), float32] */;
    %855 = %853.0;
    (%854, %855, %var_4337)
  };
  %856(%var_4341) /* ty=(Tensor[(11, ?, 9), float32], Tensor[(4, 13, 3), int8], Tensor[(156), float32]) */
}

def @func_1068(%var_1066: Tensor[(11, 1, 9), int8], %var_1067: Tensor[(11, 1, 9), int8]) -> Tensor[(11, ?, 9), int8] {
  @func_1064(%var_1066, %var_1067) /* ty=Tensor[(11, ?, 9), int8] */
}

def @func_5353() -> (Tensor[(39, 4), float32], Tensor[(99), int8]) {
  %857 = @func_5182() /* ty=(Tensor[(99), int8],) */;
  %858 = @func_4896() /* ty=Tensor[(39, 4), float32] */;
  %859 = %857.0;
  (%858, %859)
}

def @func_4299(%var_4298: Tensor[(6, 8, 3), float64]) -> (Tensor[(6, 8, 3), float64],) {
  %862 = fn (%var_4292: Tensor[(6, 8, 3), float64]) -> (Tensor[(6, 8, 3), float64],) {
    %860 = cast(%var_4292, dtype="float64") /* ty=Tensor[(6, 8, 3), float64] */;
    %861 = erf(%860) /* ty=Tensor[(6, 8, 3), float64] */;
    (%861,)
  };
  %862(%var_4298) /* ty=(Tensor[(6, 8, 3), float64],) */
}

def @func_4967(%var_4962: Tensor[(11, 9), int8]) -> (Tensor[(4, 13, 3), float32], Tensor[(11, ?, 9), int8], Tensor[(11, 9), int8]) {
  %863 = @func_4724() /* ty=(Tensor[(4, 13, 3), float32],) */;
  %864 = cast(%var_4962, dtype="int8") /* ty=Tensor[(11, 9), int8] */;
  %865 = cast(%var_4962, dtype="int8") /* ty=Tensor[(11, 9), int8] */;
  %866 = reshape(%864, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %867 = reshape(%865, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %868 = %863.0;
  %869 = @func_1064(%866, %867) /* ty=Tensor[(11, ?, 9), int8] */;
  (%868, %869, %var_4962)
}

def @func_3795(%var_3775: Tensor[(6, 15, 13), uint64]) -> (Tensor[(6, 15, 13), bool],) {
  %870 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 15, 13), uint64] */, dtype="bool") /* ty=Tensor[(6, 15, 13), bool] */;
  %871 = shape_of(%var_3775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %872 = cast(%var_3775, dtype="bool") /* ty=Tensor[(6, 15, 13), bool] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %874 = less_equal(%872, %873) /* ty=Tensor[(6, 15, 13), bool] */;
  (%874,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */the function is provided too many arguments expected 1, found 2

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

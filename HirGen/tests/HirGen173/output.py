import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_48 = relay.var("var_48", dtype = "float64", shape = (5, 12, 14))#candidate|48|(5, 12, 14)|var|float64
uop_49 = relay.cosh(var_48.astype('float64')) # shape=(5, 12, 14)
bop_69 = relay.add(uop_49.astype('float64'), relay.reshape(var_48.astype('float64'), relay.shape_of(uop_49))) # shape=(5, 12, 14)
uop_72 = relay.sin(bop_69.astype('float64')) # shape=(5, 12, 14)
bop_91 = relay.divide(uop_72.astype('float64'), relay.reshape(uop_49.astype('float64'), relay.shape_of(uop_72))) # shape=(5, 12, 14)
uop_100 = relay.exp(bop_69.astype('float64')) # shape=(5, 12, 14)
bop_108 = relay.left_shift(uop_100.astype('int64'), relay.reshape(bop_69.astype('int64'), relay.shape_of(uop_100))) # shape=(5, 12, 14)
const_111 = relay.const([[[8.635226,6.723629,-2.569944,-2.530349,-1.111331,-4.850357,-9.615097,3.683825,5.356632,-6.425992,9.968834,3.372126,-7.559533,-7.445911],[-9.662705,-1.391544,6.576272,0.751349,-0.844209,-5.733926,9.310484,4.609613,-1.258841,0.383233,-9.427927,-3.795304,-2.218674,7.105065],[-6.730373,6.892821,-2.796004,-0.519324,8.661406,3.413377,-4.407447,5.673747,-2.389561,4.919883,2.207037,-4.920066,4.797493,9.591056],[2.434359,-4.637114,2.776584,-5.233241,3.291555,5.874094,-5.668155,9.298237,4.324516,-0.658768,4.758978,-6.051176,5.858679,-5.769328],[8.319274,-5.047311,9.519757,7.163883,-1.543017,-1.333460,-1.757098,-2.960298,-1.940410,9.364170,-5.461949,5.435628,-5.127485,4.214922],[-5.991202,-0.057170,3.108798,-1.520924,4.506160,3.275088,-3.036334,9.852497,-8.754840,7.496092,9.366195,-1.097513,6.391155,7.416128],[6.590813,2.603242,2.011762,-2.864874,-3.369865,8.984338,-0.915672,4.875160,-3.535054,3.798534,-4.753086,3.125106,-9.152884,-0.708166],[8.166277,7.028325,-2.795169,-4.180097,-3.386201,-7.565759,-2.877183,-0.445031,1.209735,4.636930,-4.523906,-4.231945,2.769365,3.879316],[3.403557,9.005355,8.973731,1.254523,8.135319,4.429156,-4.850784,-8.000998,2.306319,2.840240,-4.130810,-5.363140,-3.804032,-1.167353],[-7.924113,8.600490,9.377140,-2.401810,3.296571,-9.531995,-5.376164,-3.045740,6.879945,1.789509,5.157781,1.105343,3.805234,-4.821166],[-5.787496,2.075612,-5.079247,-3.495401,-3.650291,2.002428,0.618988,-5.579774,1.982742,-3.910496,-3.734269,-9.655281,9.970529,0.851865],[0.965625,-9.980154,-8.965236,9.752111,-0.962745,-0.638149,-5.285797,-5.776655,2.737914,2.021739,5.811743,-1.718680,1.820617,9.750233]],[[-9.174359,2.425694,-8.525676,-4.907119,-8.264349,-0.696745,6.542650,5.334630,-9.845656,9.042215,-6.283611,-3.782501,1.094049,2.688174],[5.895595,5.118504,-3.749475,-2.289704,-7.827907,6.473148,-7.609621,6.114770,5.299954,6.015612,-6.353640,1.550727,-8.481831,-4.459196],[-3.724787,-3.613296,-4.298349,-1.290884,2.170602,3.327850,9.115019,-3.799099,-4.048782,5.944146,-8.679455,1.100653,-6.882537,1.304370],[3.716273,-0.285322,-0.150080,5.149131,-1.220012,9.063200,-5.222584,7.744511,5.708165,8.758506,1.862399,2.005242,-9.548205,-3.198109],[-3.301916,4.357068,5.303178,5.076486,-0.882505,-6.967430,-6.916819,-8.388783,-6.350591,-3.102870,8.053454,-4.457174,1.797803,-0.555957],[-6.821252,-4.432523,9.119548,-1.865928,8.237281,-4.108444,1.804506,-3.703282,-3.315690,-1.348365,-0.624167,-1.793751,2.292104,-9.865996],[3.391301,-5.659572,3.170941,-5.481331,-8.339303,5.226932,-7.698341,3.995954,-7.491333,-6.261623,6.986504,9.011769,8.577599,3.135181],[-3.273815,6.271328,6.510057,-5.962206,-8.162434,5.569994,9.027961,-6.406814,-4.273051,2.770632,7.778378,4.980999,9.467213,-0.112759],[-8.140722,6.637712,4.551569,-4.441881,-0.782800,0.455141,5.091077,4.346474,4.246740,2.798907,9.520193,-8.557013,-9.907895,4.332978],[3.860355,-8.406424,-6.813119,-7.467030,2.125727,-3.936198,3.664003,-6.675310,-7.202020,-7.784327,-4.994581,7.754575,-8.646492,-2.166486],[9.230021,-3.157527,-1.338139,-5.576146,-6.750179,-3.834902,-0.486574,1.082863,9.357298,-7.434412,9.291731,5.112164,-1.010552,-3.632457],[2.339176,7.788366,-1.666303,1.572867,3.396037,9.956212,-3.369883,1.727245,-5.071496,7.883690,-4.881501,9.833156,-6.582615,1.078118]],[[7.511618,1.799695,3.595815,1.760825,7.074891,-3.604468,5.220436,-1.988902,5.764577,-8.194348,2.557909,9.150268,0.891251,6.726062],[-8.092582,7.653560,-7.984455,-7.105347,5.146904,-6.357111,-1.224486,1.221475,-5.325026,9.338414,4.054326,-7.997293,3.299761,1.153506],[-7.480168,-2.006538,4.233241,6.823137,5.751023,3.587264,5.113481,5.060583,-3.344605,2.285773,-5.337254,9.352917,-0.157830,-5.049143],[9.266774,8.853169,7.543976,-8.594603,2.986462,-4.187047,6.217741,4.724048,5.814398,-6.003981,-9.069361,2.465525,8.679677,-7.217047],[-7.378325,3.500434,-0.860308,0.269250,1.701232,2.354797,9.172730,6.751574,2.768032,-4.284705,4.744495,8.078335,-2.154598,-1.627067],[9.367994,-9.380831,-9.166455,6.864214,-1.392950,-2.990882,3.051233,-7.044602,6.640421,6.455669,-0.970931,-7.361629,9.890205,1.076399],[-1.537824,5.215028,8.489459,8.575547,7.433290,-2.204732,5.615151,2.527059,-1.786131,-9.341347,0.156062,8.760559,2.333957,0.569382],[9.679017,-6.711264,6.027011,7.839294,1.142129,-7.156630,4.396772,-7.418651,7.822451,7.079206,1.677437,5.838651,-2.780974,4.947031],[-7.308180,-8.012021,9.707275,4.836349,-6.251538,6.510381,5.876877,-0.064121,0.298210,-7.858087,7.930943,-8.418532,8.254088,6.041859],[-5.737067,3.149295,-8.654232,-6.632481,-8.717853,-6.715758,-2.331023,2.745270,2.368106,8.665322,-4.165806,2.435716,7.894937,8.038541],[8.874581,-4.169024,5.925468,2.302762,3.276906,1.238750,4.532343,-8.065671,-8.764251,-1.904136,-9.182079,-4.972056,6.152904,-4.329155],[9.642570,9.119000,-2.777192,2.317738,2.838140,7.421764,-3.373771,-2.704855,-8.135623,-6.899290,-6.074319,-0.283684,-0.138367,-6.416900]],[[-7.284380,-8.710880,-7.977093,0.047309,-6.625895,-7.979522,4.193302,-8.826482,-1.410443,4.693334,-1.103470,7.104757,-8.408787,5.247949],[-6.198266,-8.643055,-9.592539,2.211254,-7.541921,1.562192,6.273147,-6.194548,-0.889293,-8.052146,-1.055638,2.733894,8.305522,1.060891],[9.682506,-1.687116,-7.066766,-1.118373,-0.594587,3.912204,-6.504579,7.115591,-6.063377,-6.978248,-0.618380,-2.537119,4.522175,4.721532],[-2.322531,-9.756015,9.763069,-4.267717,-0.546034,-9.296185,-1.153401,6.360380,9.691555,-0.419814,6.019512,-5.104982,1.988201,-3.482375],[-4.073783,-5.610978,-4.891485,-5.686170,3.588541,-5.828473,-2.007590,-4.587956,-0.500024,9.053503,-5.334147,-9.079563,4.212423,-4.924620],[2.578172,0.889661,-8.019475,-5.306800,-7.593653,2.546236,6.233976,3.180894,-2.022303,-6.728597,-2.229295,-9.461649,8.717018,-0.613985],[0.216955,-2.992854,6.877291,0.781753,7.683693,-9.096537,-3.613567,0.035277,4.840946,0.157296,7.736389,4.123841,-0.025263,-1.929029],[-4.004464,-5.510142,4.780033,-0.649727,-8.654114,1.022464,1.834535,3.830002,6.549582,-5.506614,-7.588930,-2.750823,2.435799,2.208495],[-3.613242,-3.347674,-1.232375,-1.868726,7.239216,-7.020237,-4.011110,5.855111,4.043389,-4.400770,6.930818,-6.764616,-9.076491,8.118467],[-0.248897,7.337130,0.739093,3.779738,-7.335181,8.113131,-0.902886,4.075350,9.257134,-7.246301,-1.008632,4.825471,1.926068,0.429970],[8.345543,-6.510334,2.386984,-5.211653,5.422471,-2.714439,8.297982,9.493332,7.177503,8.552857,5.587766,1.719228,-6.801147,0.086750],[-0.236141,4.327697,-0.187088,4.676759,-2.568044,-4.861472,1.812512,6.207904,-9.512585,-3.340693,-7.425401,7.613883,-8.590367,7.075621]],[[3.474586,-4.470660,3.101731,6.053267,8.262373,5.117062,-7.649576,3.947000,-5.535712,9.319479,7.139717,-8.533457,9.759559,1.988694],[-4.322140,-2.734540,-3.297824,-0.366030,-6.675013,4.663893,-0.996954,6.545772,-3.221550,5.213417,-6.478088,3.011759,-5.608363,4.738963],[2.512261,7.884202,0.457407,-9.676393,0.399136,3.003789,-5.213249,7.913798,5.814468,-1.524414,-9.145490,-5.288161,-8.537398,-0.690955],[6.374299,-7.157229,2.209347,-2.018285,1.633187,-5.496354,7.214909,-7.771982,-5.101846,2.568687,9.273956,3.658082,1.822760,-2.910558],[6.023624,-4.639317,-5.003078,-9.911478,8.434870,-2.614727,2.319807,1.904244,-1.780409,-3.294900,7.205385,-1.456527,9.231234,-5.743559],[2.187968,-9.756826,-6.041398,3.180242,3.126859,-1.161949,-2.923016,7.242543,3.627214,3.687453,8.318330,-8.925876,5.591470,4.103619],[-9.206087,7.611214,-4.816324,-1.870988,-4.685361,8.010278,7.830767,-0.585405,-0.653335,4.503790,-0.979225,2.871506,9.748310,1.607254],[-8.341648,3.673128,-4.805481,-8.156228,8.458216,1.940837,-0.573769,9.256379,-0.306793,9.258599,-3.728690,-9.152810,1.798480,-3.391833],[3.527913,2.697454,-3.516227,-2.436411,3.272593,2.120787,-8.478771,2.251550,9.432184,-6.463127,-4.293537,-1.825728,2.695071,-6.126614],[-5.369515,7.755621,-7.370519,7.965546,9.243736,9.408252,-9.445296,8.384147,-5.228276,9.314593,-8.274436,2.277674,8.957201,6.375879],[8.680174,-5.053631,-6.371871,1.095547,-9.323478,7.735888,7.839419,4.906048,8.289284,-9.632967,7.068217,6.550454,8.170034,-0.537281],[-1.658934,6.903888,9.257421,6.082763,4.900975,-2.197099,5.613906,-0.414796,3.151797,-8.908751,-0.560060,-9.959422,-5.363128,6.286865]]], dtype = "float64")#candidate|111|(5, 12, 14)|const|float64
bop_112 = relay.right_shift(uop_49.astype('int8'), relay.reshape(const_111.astype('int8'), relay.shape_of(uop_49))) # shape=(5, 12, 14)
output = relay.Tuple([bop_91,bop_108,bop_112,])
output2 = relay.Tuple([bop_91,bop_108,bop_112,])
func_115 = relay.Function([var_48,], output)
mod['func_115'] = func_115
mod = relay.transform.InferType()(mod)
mutated_mod['func_115'] = func_115
mutated_mod = relay.transform.InferType()(mutated_mod)
var_116 = relay.var("var_116", dtype = "float64", shape = (5, 12, 14))#candidate|116|(5, 12, 14)|var|float64
func_115_call = mutated_mod.get_global_var('func_115')
call_117 = func_115_call(var_116)
output = call_117
func_118 = relay.Function([var_116], output)
mutated_mod['func_118'] = func_118
mutated_mod = relay.transform.InferType()(mutated_mod)
var_220 = relay.var("var_220", dtype = "float64", shape = (7, 1, 3))#candidate|220|(7, 1, 3)|var|float64
var_221 = relay.var("var_221", dtype = "float64", shape = (7, 15, 3))#candidate|221|(7, 15, 3)|var|float64
bop_222 = relay.maximum(var_220.astype('float64'), var_221.astype('float64')) # shape=(7, 15, 3)
var_226 = relay.var("var_226", dtype = "float64", shape = (7, 4, 3))#candidate|226|(7, 4, 3)|var|float64
bop_227 = relay.logical_or(var_220.astype('bool'), var_226.astype('bool')) # shape=(7, 4, 3)
func_115_call = mod.get_global_var('func_115')
func_118_call = mutated_mod.get_global_var('func_118')
var_249 = relay.var("var_249", dtype = "float64", shape = (840,))#candidate|249|(840,)|var|float64
call_248 = relay.TupleGetItem(func_115_call(relay.reshape(var_249.astype('float64'), [5, 12, 14])), 1)
call_250 = relay.TupleGetItem(func_118_call(relay.reshape(var_249.astype('float64'), [5, 12, 14])), 1)
output = relay.Tuple([bop_222,bop_227,call_248,var_249,])
output2 = relay.Tuple([bop_222,bop_227,call_250,var_249,])
func_254 = relay.Function([var_220,var_221,var_226,var_249,], output)
mod['func_254'] = func_254
mod = relay.transform.InferType()(mod)
mutated_mod['func_254'] = func_254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_254_call = mutated_mod.get_global_var('func_254')
var_256 = relay.var("var_256", dtype = "float64", shape = (7, 1, 3))#candidate|256|(7, 1, 3)|var|float64
var_257 = relay.var("var_257", dtype = "float64", shape = (7, 15, 3))#candidate|257|(7, 15, 3)|var|float64
var_258 = relay.var("var_258", dtype = "float64", shape = (7, 4, 3))#candidate|258|(7, 4, 3)|var|float64
var_259 = relay.var("var_259", dtype = "float64", shape = (840,))#candidate|259|(840,)|var|float64
call_255 = func_254_call(var_256,var_257,var_258,var_259,)
output = call_255
func_260 = relay.Function([var_256,var_257,var_258,var_259,], output)
mutated_mod['func_260'] = func_260
mutated_mod = relay.transform.InferType()(mutated_mod)
var_308 = relay.var("var_308", dtype = "float32", shape = (15, 5, 15))#candidate|308|(15, 5, 15)|var|float32
uop_309 = relay.sinh(var_308.astype('float32')) # shape=(15, 5, 15)
output = uop_309
output2 = uop_309
func_312 = relay.Function([var_308,], output)
mod['func_312'] = func_312
mod = relay.transform.InferType()(mod)
var_313 = relay.var("var_313", dtype = "float32", shape = (15, 5, 15))#candidate|313|(15, 5, 15)|var|float32
output = func_312(var_313)
func_314 = relay.Function([var_313], output)
mutated_mod['func_314'] = func_314
mutated_mod = relay.transform.InferType()(mutated_mod)
var_362 = relay.var("var_362", dtype = "int8", shape = (13, 4, 11))#candidate|362|(13, 4, 11)|var|int8
const_363 = relay.const([[[5,-2,1,8,-5,-6,-6,3,-9,6,7],[-2,1,6,-1,1,-10,-8,5,2,6,-4],[1,2,-2,-9,-10,1,2,-9,6,10,4],[-9,-5,8,-9,4,2,9,-4,-10,-9,8]],[[-2,6,-6,6,-6,1,-5,3,-3,-3,-2],[-6,3,1,-9,-5,5,-9,-8,4,-9,5],[6,-8,-4,-4,7,3,8,-4,-4,-7,10],[1,-10,-4,-10,5,-5,-4,7,-5,8,6]],[[3,-2,-9,-7,7,-9,-1,-8,-1,6,7],[7,8,6,-10,-1,-2,-2,-1,4,-5,7],[-5,8,9,4,-5,-9,2,6,-10,7,-9],[-7,-7,10,-3,1,-5,5,-4,1,-9,10]],[[-8,3,3,-3,8,3,-8,-9,-2,-10,9],[3,6,1,-4,5,7,-3,-8,3,4,-3],[-2,5,3,3,1,-5,7,2,-7,7,-7],[-6,-7,-4,8,-5,-10,-4,-6,-6,10,5]],[[7,3,6,-10,10,-9,7,-8,-1,-3,5],[-7,-6,-1,-4,8,-6,7,-10,-7,5,9],[-9,6,2,-2,-9,-10,-10,3,-7,-7,-1],[5,5,4,-7,-1,10,6,-9,8,5,-4]],[[7,3,8,9,6,3,-7,1,-9,-2,-2],[-10,-7,10,6,-1,3,1,3,3,3,1],[2,-3,4,8,4,-6,8,-4,-2,-9,8],[6,-9,1,4,1,-1,7,-10,3,6,-4]],[[7,-9,5,-2,10,-2,-9,-9,4,1,4],[3,4,7,-9,-2,-9,5,-1,-6,-7,9],[3,8,-10,5,6,8,-5,-10,6,-1,5],[10,3,8,-6,5,-5,-7,2,8,9,8]],[[3,-8,-1,5,-3,3,-2,-5,6,-8,-4],[7,-4,-4,5,8,-1,8,-5,8,-9,-5],[10,9,-1,10,-9,-1,-3,7,8,-7,-4],[-1,-7,7,9,-7,4,-6,1,2,4,5]],[[10,-7,-9,-9,7,-2,-8,2,-2,8,-5],[3,-2,-7,10,-6,-6,-1,9,-10,2,3],[-10,9,2,-8,-2,2,-7,2,1,-10,-1],[3,-2,6,-4,4,-4,6,10,2,6,-8]],[[4,-2,8,-1,-2,-8,-7,8,5,-5,-7],[-4,6,1,-1,7,-10,10,1,-6,-8,-7],[3,8,7,7,-6,-1,9,6,-2,7,4],[-10,3,-7,-2,-7,10,-1,9,-1,10,-7]],[[3,-3,8,6,9,8,10,2,10,7,5],[8,-7,-8,8,-6,-1,-5,8,3,-7,-9],[6,9,1,9,3,9,-6,-6,4,-7,-2],[-6,-6,-10,-1,10,-2,-5,-6,-10,-2,10]],[[6,4,8,5,-4,10,1,2,9,-9,-2],[6,1,-8,5,-2,-2,10,-8,1,7,3],[-1,10,-7,-3,-5,9,-2,-10,-3,-7,9],[-6,-4,8,-8,1,-5,1,10,-3,2,-1]],[[-10,-3,-1,9,-10,6,4,7,-4,5,-7],[-3,2,-2,-9,1,3,-2,4,6,-10,8],[-6,-8,-3,-10,-9,7,-9,6,-3,-7,8],[-3,-3,-6,1,9,-9,10,9,-2,2,-10]]], dtype = "int8")#candidate|363|(13, 4, 11)|const|int8
bop_364 = relay.right_shift(var_362.astype('int8'), relay.reshape(const_363.astype('int8'), relay.shape_of(var_362))) # shape=(13, 4, 11)
output = relay.Tuple([bop_364,])
output2 = relay.Tuple([bop_364,])
func_379 = relay.Function([var_362,], output)
mod['func_379'] = func_379
mod = relay.transform.InferType()(mod)
mutated_mod['func_379'] = func_379
mutated_mod = relay.transform.InferType()(mutated_mod)
var_380 = relay.var("var_380", dtype = "int8", shape = (13, 4, 11))#candidate|380|(13, 4, 11)|var|int8
func_379_call = mutated_mod.get_global_var('func_379')
call_381 = func_379_call(var_380)
output = call_381
func_382 = relay.Function([var_380], output)
mutated_mod['func_382'] = func_382
mutated_mod = relay.transform.InferType()(mutated_mod)
var_759 = relay.var("var_759", dtype = "float64", shape = (8, 3, 6))#candidate|759|(8, 3, 6)|var|float64
uop_760 = relay.sigmoid(var_759.astype('float64')) # shape=(8, 3, 6)
func_312_call = mod.get_global_var('func_312')
func_314_call = mutated_mod.get_global_var('func_314')
const_775 = relay.const([-4.719761,3.275683,-0.145539,-5.196992,7.050036,-8.196727,-0.664416,-3.257497,2.139242,6.555354,-6.002669,6.320549,1.343680,0.227021,-8.128823,9.396888,-0.880981,5.789922,-0.692753,-2.896285,1.863023,5.062856,3.175745,2.406474,8.416495,-4.207584,5.355843,-8.134833,-1.553933,0.913765,-4.696688,-4.086950,-4.357558,-1.826508,8.084324,-9.283331,4.336484,5.092752,4.964981,5.533365,9.986954,-6.435904,-8.135631,5.724232,2.258700,3.014459,2.721478,-6.331244,2.727960,-5.916434,-1.196601,-2.019533,5.048338,-9.531044,-8.416790,8.467957,-8.280885,-8.008292,-9.368499,2.257466,3.984604,-1.193053,-1.185837,-1.755877,3.776220,4.006376,7.698356,3.795557,7.963381,0.095113,-3.063848,7.339214,2.131266,5.449146,5.438089,2.321137,4.336371,0.435969,-1.088933,-8.464057,-3.920336,6.481137,5.157064,-4.518875,8.857680,-1.453919,7.144058,-6.843609,7.840191,-5.950971,-5.641952,7.937494,9.210513,-6.473343,-6.933134,5.647101,-0.787098,-6.291322,-8.204155,-7.767103,8.688521,5.265602,-1.901587,0.494874,2.992057,-4.613934,1.422051,3.830742,-4.002362,-2.176482,-9.020257,0.372905,2.414111,-9.468541,2.106320,5.106882,6.055325,3.159393,-0.945879,-4.814616,-9.757206,5.004408,-4.740597,4.286046,-4.361428,-2.332434,2.950063,8.879230,2.760483,-2.370172,-6.731860,6.396669,-0.774321,7.150815,1.058805,-1.493781,-5.194996,8.730582,1.531518,4.450475,7.922445,-7.939657,-0.584863,7.515353,-6.895167,-5.170239,7.886969,-8.313451,-5.626706,-5.519737,0.381414,6.117270,-9.098128,4.456619,2.890055,-8.122819,-0.611502,-3.203150,-5.770167,-9.892117,2.513308,-2.859344,0.866554,9.214431,-7.163523,9.333460,-0.056864,-7.246808,-3.061999,-6.011920,-1.061654,-1.006726,-9.059737,4.350714,-7.457111,5.727375,-7.723956,-5.206649,-8.922580,8.173332,0.104443,8.658062,-0.055266,-2.707482,3.668454,-2.940539,9.312542,-4.528044,3.354443,6.467569,2.122012,-9.483296,-0.098571,0.098545,-4.911842,7.128558,-1.075196,9.527473,-7.880704,6.715772,4.859646,-0.691339,-3.231916,-5.922663,-4.735598,2.266981,-6.858572,-4.317084,-9.492251,5.925166,-6.471987,-5.173149,9.991539,3.943070,8.165116,5.866739,3.311232,-4.660607,-3.054115,8.639974,-9.595678,3.876923,-4.755861,0.293784,3.154770,6.038791,3.233848,-0.946794,-2.173581,2.991076,-6.400253,-5.539496,-0.289967,9.128329,7.157047,2.494174,1.999975,-3.328652,-8.699088,-2.815852,-6.343239,-3.515530,0.620385,1.642889,-8.763376,-6.656582,4.129431,-7.033513,3.175433,2.997027,5.767466,-8.957673,4.892469,-9.488585,-4.253321,9.973579,0.135785,-8.731643,3.715622,-8.947096,-9.749198,-8.136653,0.102295,6.811585,3.725804,7.991982,-4.693563,7.531550,-4.571035,5.513942,4.664704,7.451515,-9.858267,4.710506,1.491827,-9.446434,-8.579231,-4.871452,5.734783,-2.188498,-3.251895,9.084012,9.254568,-6.870679,3.415894,-8.794419,-0.195841,3.258021,-2.534341,-7.146725,-7.626800,5.400579,-1.767311,-2.733349,-5.091385,-2.554834,-1.665674,8.589178,-6.396009,3.782403,3.618245,-8.535811,8.584352,0.742850,2.639040,-7.842730,-3.789158,-7.830357,0.150428,-1.915739,-5.053293,-9.585306,9.191807,-7.685923,0.824150,9.389767,-0.040272,-6.751221,0.153825,0.712578,-1.308578,-1.715526,7.098894,5.708467,9.222927,-9.214569,-9.055285,-0.037174,-2.214967,9.996014,-8.683891,2.328253,8.742740,-5.908733,6.547853,8.342449,3.388461,-4.764441,-9.749626,3.774689,3.023469,9.365484,-4.517325,5.783076,6.454790,-6.620093,4.514391,-7.451940,-7.331981,4.209278,-5.974215,4.308043,-9.571670,-2.086828,5.220674,-8.280807,-4.160672,-2.565089,2.287321,8.550089,-3.457915,-0.504114,9.543707,-5.739034,-6.782305,3.876297,-5.631664,-2.357001,-6.220955,-5.436327,9.127425,9.220008,-2.211472,-2.219240,2.563685,-8.882630,-7.108268,-8.369379,3.047770,1.228199,-9.467574,-7.362828,3.960040,-6.057317,-0.647131,1.998717,0.338219,6.615781,-9.635488,-3.607244,0.861184,1.206440,5.175678,-0.993420,5.061646,-4.999411,-4.408792,-0.984058,-1.871556,-2.122070,4.798348,-0.224246,-0.469645,2.792470,7.799263,-5.984931,-8.200998,-1.111818,3.508554,7.824529,-7.065725,1.063291,-8.973814,-0.497881,-4.513759,8.826926,-3.472005,-9.584736,0.804689,1.266138,1.553411,-7.507912,-1.464413,-3.089258,3.528710,-0.027397,6.703259,-8.706548,4.569267,-5.327528,5.867266,-1.273023,2.518333,-7.754787,-4.051925,-2.189002,-0.028114,4.351567,3.225193,-8.481078,2.763757,4.279528,-7.432808,9.541840,-7.821757,2.361490,3.289461,-6.771424,3.046524,-7.248309,-9.376065,3.962815,1.420957,9.863759,-8.349829,5.692386,-7.057345,8.269744,-0.077743,9.423925,-0.276558,6.358016,-5.132547,2.297606,-9.236512,3.094207,-8.333163,8.741508,0.929179,-5.894480,3.697184,-7.460280,-7.920615,-7.743939,-2.132513,-3.933770,4.198574,-3.053770,8.843035,1.259222,8.803828,-9.744938,9.863262,3.700512,4.932486,5.731287,6.841373,-1.271866,0.741121,4.696418,-9.711966,-9.382134,9.783002,6.067725,-5.986538,-2.736604,0.402193,1.785065,6.952068,-9.755650,1.559516,5.308474,8.465707,-2.783559,-2.360867,-8.287357,0.309326,-9.444205,4.892571,6.615769,-8.912251,-9.597294,5.808668,2.946475,-1.797357,7.173893,3.637399,4.776787,-7.785943,3.780942,4.311502,-5.436346,-1.017762,4.884210,-9.113319,-8.214265,-4.132445,4.184522,-9.517705,-7.669799,-3.271091,-3.535607,-3.907698,-1.347395,-7.114345,-3.434308,1.866436,-2.530346,9.062472,8.917611,8.061670,9.476542,-6.713147,2.934037,2.145017,-5.821068,5.039245,9.925599,-1.334157,-8.508775,8.835624,-2.815408,4.915850,-0.372217,-6.492588,8.642925,8.126374,4.934151,7.491940,1.070014,6.908104,-8.571664,-2.194981,-7.768792,9.953211,4.558763,8.521275,0.685966,8.229889,-0.821198,1.357701,8.277861,-0.541562,0.570539,2.928083,-4.002444,-7.353521,2.816479,-2.990128,0.339361,-1.228669,-2.676158,-1.119536,1.439796,2.103700,9.617792,4.896845,-8.632126,0.740083,8.111668,-6.112073,8.006210,-0.796115,1.194375,1.930729,-8.724832,-5.239206,9.897186,-7.355809,-0.669935,-4.748435,-0.991133,-1.556936,2.344639,-8.486154,-1.323680,-6.014017,4.588936,-4.390193,5.450885,3.581816,9.299220,-5.400462,-7.387558,4.721118,4.953654,-3.539656,6.476253,-8.466988,9.318196,0.798267,6.059491,9.130473,-0.248582,4.753957,5.742562,2.460746,-3.818081,-6.772042,-3.753864,1.234024,9.970456,-7.615119,-0.189202,-4.048389,5.685743,0.932259,3.300421,-5.994792,-0.088689,-6.830483,-3.259146,6.693910,3.313128,-5.828900,4.885181,6.644827,2.654217,-5.989934,-0.884619,1.046475,-4.815284,-2.790060,-6.986914,-3.620081,0.534843,-2.105891,-5.355423,-7.206941,2.748186,-7.115775,3.452166,-6.396680,9.451704,-7.774260,7.845348,2.502947,9.977307,7.913651,-0.848386,-4.455136,-8.684541,-5.206223,-0.799283,3.181513,2.731346,0.424330,4.653671,5.342753,-5.661288,4.520588,-2.716180,9.964126,-5.896659,3.171409,-3.519052,-1.288718,-8.706237,-5.917736,-4.579983,8.305607,8.727378,-5.004423,-5.563755,3.910275,7.966705,-1.162587,9.880778,2.574088,-5.987929,3.244556,9.168017,-7.416849,-9.296238,-0.588890,-5.219226,-6.818057,-2.192955,-2.035242,-5.847070,9.403510,-2.605838,6.877009,-6.729778,-8.494395,9.005536,2.446948,1.372773,4.550620,-2.625747,-7.760776,1.332874,-0.600435,8.565215,-0.455698,-0.749414,-7.406350,3.150801,6.989115,-1.389477,-4.070392,5.543544,-3.676552,6.310075,-7.572386,-0.914421,-2.636752,2.090159,8.720213,-1.898936,-6.304774,-6.412662,8.410624,8.503263,2.003593,-2.512025,7.708896,8.535619,0.529133,5.933556,9.523592,-0.740757,2.615804,-6.516250,5.544462,-3.908332,-5.638245,-8.465421,-3.157091,-4.971271,5.293509,-2.228559,-7.211466,8.351879,-9.285557,4.228732,-4.897326,-3.899185,3.325350,-7.235171,8.726273,-0.888378,0.989403,5.770293,-8.056055,8.767244,1.713484,8.158375,-7.494882,1.746961,8.763037,-3.381407,-5.442254,-0.414206,3.048180,-4.381311,8.314029,-4.838101,8.355925,1.787153,6.204099,-2.119505,-1.054084,-3.078744,-4.361147,2.771215,-2.258453,6.479140,-3.413289,-1.587156,-6.822656,-6.043956,-6.014364,1.845191,7.677406,2.984209,4.886697,9.060220,9.523137,-5.218981,1.847869,-0.671566,2.958838,-4.386428,3.900875,-7.530186,-6.140959,8.390543,7.325254,-7.725956,1.639534,-4.996940,3.800211,-5.905673,9.318628,-8.868411,4.358758,1.537293,-0.982183,-0.013372,-3.538809,-8.729790,-2.986592,1.519916,-1.327105,-3.966945,-9.591201,-3.333598,-8.405658,-2.973872,-7.225037,-8.400638,3.937927,-9.334855,4.785541,5.371773,0.106975,-0.259957,-0.060124,-6.069808,-3.479816,-0.326911,5.842984,-8.798489,-2.955676,5.064495,-5.275931,-2.442147,9.097902,7.851411,6.728381,4.227090,-6.028472,-5.047810,1.672392,5.351765,0.658013,-5.644879,9.203193,-5.120170,-9.702775,-0.568478,2.730068,-7.395255,6.364363,-2.414494,1.891375,-8.551843,4.301502,-0.631560,8.696337,-8.848401,3.998366,4.449690,-8.082490,-5.713784,1.254040,5.987667,5.405915,-5.976339,2.916687,-7.279107,-5.353931,5.404193,1.070713,-0.458946,6.932679,-9.406113,-7.239149,9.714509,7.622043,4.402089,-4.516042,-2.592543,-0.682137,3.893466,2.540423,-2.198621,-2.207338,6.642435,9.918199,-8.296096,5.302681,-7.986205,-4.248137,-8.861008,3.594453,-3.007700,-9.593956,-2.000074,1.041413,-4.122583,1.136152,-6.311069,-8.006050,6.765947,-2.046107,1.963489,-5.194540,9.820524,4.836113,8.835599,1.287642,1.968152,-1.742564,-1.927705,0.395310,-3.937818,-9.254029,-9.834888,-1.628256,-8.939126,6.172648,-9.739639,7.998331,-3.631843,1.531698,-4.889039,6.525492,-9.260282,7.975691,-4.754050,-3.910575,3.072231,5.677062,8.412117,2.032142,-2.982607,5.360565,7.559552,-1.269072,-9.211064,7.804951,-5.148207,-9.300382,-5.198959,-0.294377,-7.965125,7.577456,8.506696,2.003926,-9.932546,-0.656243,9.529769,-3.884229,6.876821,-1.895226,-3.048939,-8.398606,-0.838904,-8.103775,-3.694826,5.394191,2.306331,-7.064899,-6.889968,1.510390,-9.265408,4.231017,-3.041488,-3.583735,6.446458,9.167183,-8.955580,-3.139115,-6.941953,5.824664,1.772787,7.211897,2.649938,8.832878,9.268840,0.523321,7.356886,2.902286,-6.895540,2.055803,-1.948974,3.351810,-6.191608,8.873914,-1.659627,3.409525,-9.512679,-6.127819,-0.947900,2.834670,3.553472,1.332268,6.174435,-0.437763,4.544174,0.251696,-0.978001,-6.855590,4.706409,6.147151,9.394408,6.699208,7.699015,2.502751,-9.027131,4.670069,8.823129,-3.024061,7.029042,-1.625605,-1.080916,-5.841073,5.166988,8.182861,-5.306588,-8.645411,7.746620,7.964441,-5.392891,-8.229122,4.066524,-8.668339,-5.088493,-3.695279,7.401258,-9.422923,-3.043679,-7.089164,-8.181993,-5.705181,-6.287664,-9.140460,0.885307,-5.915037,-4.623720,-3.618522,-7.013029,4.815609,5.594649,-5.843445,-1.369243,-6.664718,3.633894,-7.742105,-6.061201,-5.972702,-6.012024,-8.267939,9.317482,9.051958,9.536869,4.793874,-4.374309,-0.150887,-3.154406,-4.499498,-9.135921,-6.528560,2.794450,3.257459,4.498416,-8.209991,-6.624700,6.688482,6.822155,2.244327,-1.703490,-0.121877,5.362939,-8.371061,8.525346,4.453121,4.385647,6.472288,-3.854314,-1.410141,-2.384013,1.295643,9.708362,-6.160928,4.442204,9.462846,1.094327,-3.590669,4.525067,-2.170803,4.197935,-5.443223,5.364334,9.893807,-3.293347,-5.293744,-0.959109,4.393551,-8.665984,-5.752741,8.675465,-1.409320], dtype = "float32")#candidate|775|(1125,)|const|float32
call_774 = func_312_call(relay.reshape(const_775.astype('float32'), [15, 5, 15]))
call_776 = func_312_call(relay.reshape(const_775.astype('float32'), [15, 5, 15]))
func_379_call = mod.get_global_var('func_379')
func_382_call = mutated_mod.get_global_var('func_382')
var_785 = relay.var("var_785", dtype = "int8", shape = (572,))#candidate|785|(572,)|var|int8
call_784 = relay.TupleGetItem(func_379_call(relay.reshape(var_785.astype('int8'), [13, 4, 11])), 0)
call_786 = relay.TupleGetItem(func_382_call(relay.reshape(var_785.astype('int8'), [13, 4, 11])), 0)
func_254_call = mod.get_global_var('func_254')
func_260_call = mutated_mod.get_global_var('func_260')
var_793 = relay.var("var_793", dtype = "float64", shape = (21, 1))#candidate|793|(21, 1)|var|float64
const_794 = relay.const([0.229793,-2.343730,5.527401,8.540632,2.223407,5.922266,5.017250,5.189184,-0.036538,9.774230,5.438856,8.289100,4.576003,-8.196952,-5.583470,-5.126480,1.892821,0.475240,-8.118753,9.548007,9.805224,-4.371319,9.236966,0.691967,6.100665,-2.897968,-6.373162,-2.703832,-3.863329,-9.810841,6.326609,7.488584,-5.081165,4.555818,8.873487,-2.004509,6.952055,5.534603,9.589304,-6.952961,-7.029324,8.004032,5.440688,-2.673515,-8.237204,-2.260699,4.177093,0.913580,-5.185902,7.267631,9.604836,3.530543,-8.291341,0.368991,7.390083,-7.732097,2.064505,-2.426756,2.740351,-9.392067,-2.400623,5.523841,-2.249494,8.932208,-1.973005,3.993496,-0.249375,-6.344825,1.205317,-4.371033,-9.464715,-3.938038,-5.019130,-1.019561,-7.035879,-3.195266,7.879297,-4.610868,-6.643349,0.778959,-7.816469,-2.556766,0.287772,8.625783,2.852338,4.045141,-9.722968,7.381566,-4.180400,9.769198,-5.979788,8.132844,5.760254,-7.741096,8.604326,-1.263004,-5.387155,0.388548,-8.314577,-9.303572,-2.849888,8.323313,-4.253727,-0.251926,-5.118485,7.668943,4.118432,-2.911827,-1.805127,-9.005723,-3.805994,-2.002002,6.530325,-7.968912,-2.730429,3.796278,-8.735578,-8.370121,0.905787,-5.687950,-8.547285,5.389428,-5.995308,-1.845741,-1.055558,8.739011,-3.378538,0.158758,4.871080,8.608794,-5.864588,-6.047663,5.766904,3.083572,9.488049,-0.309919,4.380139,2.101319,8.043430,4.946040,-9.549248,7.292138,-7.835241,6.546493,-3.684836,5.205328,0.747603,-3.644559,-6.668457,-3.672549,8.639277,1.675109,-7.459205,-3.538389,1.877348,6.251782,-8.741676,-9.680166,0.148880,-3.051519,-4.489048,-5.404992,-0.319680,-5.140385,8.752631,-1.467524,5.322934,5.333748,2.926138,5.506819,4.529392,-0.908304,6.646840,-0.105878,-1.565311,8.786733,4.814847,2.952249,-0.465943,-1.884315,-7.867992,-5.883697,8.731534,4.657714,4.323925,2.455795,1.462569,0.301913,-1.026915,2.157882,-6.337756,6.830610,-6.370730,3.633903,-8.934378,-9.522614,9.707474,-2.654662,2.338981,3.805164,-0.502426,3.260454,-8.828578,7.068030,5.562376,-4.591754,4.850728,1.534096,-2.946515,-9.765480,-9.277411,4.801152,3.960605,-4.774279,4.980006,4.405433,-0.268074,9.149537,8.922992,9.277055,8.454520,7.294817,7.790416,-5.683380,4.653668,-1.122807,-1.333777,0.337693,8.043951,-7.114197,9.483565,1.539309,-7.998656,1.126758,1.494301,-8.121416,-6.973130,2.722296,-2.058566,3.090827,-9.349947,-1.798494,3.492547,-4.669875,7.768896,6.261539,-5.186131,4.135009,6.447268,6.754223,6.579611,2.969689,8.336397,-6.890667,-8.377325,5.147071,4.449422,4.871880,-2.061665,-0.821482,-8.090856,-7.258731,-6.069028,-3.863322,-7.614596,-7.989571,4.736764,0.194728,-4.885942,2.902897,6.152801,2.987734,-8.510326,3.362252,-7.319638,-9.199123,6.725983,8.135230,-2.377593,8.685670,4.112633,8.025801,4.567951,1.147913,-3.498315,1.321108,-5.106349,-4.689890,6.893254,4.747184,2.581478,0.274414,-8.543758,-1.165716,-2.185882,-9.209705,8.384536,-8.610071,-0.223825,-0.926989,-2.239789,5.570782,-5.026746,8.052699,3.264410,5.361934,7.980522,-4.223149,-5.664532,-0.787122,-9.831861,-0.463926,-6.260778,1.624864,4.842059], dtype = "float64")#candidate|794|(315,)|const|float64
const_795 = relay.const([-4.787742,4.135692,0.364206,-0.502493,3.456772,2.453847,8.919537,2.478862,-1.574840,-0.021552,9.761644,-6.621930,-6.222098,7.564440,9.902061,-0.789639,-4.744193,-0.903411,-8.376393,1.560499,-9.320858,5.989061,-2.726452,0.525691,0.151570,5.533748,9.393173,9.146468,3.468153,4.493430,0.766777,-7.881129,0.157180,7.768677,9.842995,-5.551129,-2.345628,-6.839178,-2.442967,6.221405,1.747355,-2.881215,-1.779066,-9.235556,-9.201546,6.059878,5.055349,-2.466400,-8.974504,5.442467,-4.967720,0.460361,9.051687,0.081845,9.242897,8.326589,9.443633,3.141902,4.267554,-4.639387,-7.009972,0.874538,8.750436,-0.196896,-6.954697,-3.262643,0.163598,0.927819,1.782845,-1.320215,7.857875,3.463787,-1.007392,9.497843,4.596235,7.401325,9.158394,1.675894,-8.778918,-2.456657,6.722967,9.577196,-5.725887,-9.919186], dtype = "float64")#candidate|795|(84,)|const|float64
const_796 = relay.const([-5.982283,-3.925224,4.704519,0.888659,4.711854,-7.919737,8.296604,0.383759,3.835722,-7.345466,-4.955849,-0.275814,-2.334315,-8.393929,7.719585,5.054576,7.902891,-2.103172,4.393980,5.419137,3.866238,4.828292,1.728095,-7.605018,-9.496802,-7.213650,3.867891,2.652269,6.578063,4.488611,-2.804794,-5.101860,-7.539944,-7.941660,-6.871981,-7.785945,2.798502,2.758703,4.805604,-1.636600,-6.767322,-5.230418,6.683600,-1.421385,-7.249917,9.107256,-1.409519,-8.012897,8.496214,-8.128162,-6.976993,2.917091,-4.923661,-1.313435,-2.873385,8.523876,3.320365,-4.442280,0.105737,5.018751,9.872496,-8.163209,1.569320,-2.795077,-4.342651,-5.328318,-3.784855,-7.646000,-0.331942,-0.716260,1.513717,-0.520718,0.194848,3.702377,0.956350,-4.333908,-7.104625,-5.141996,0.830828,-6.636301,0.112457,-8.267591,-9.587411,-2.153005,-9.409817,6.309777,-9.970273,-1.932352,6.497010,-9.393449,6.853315,4.038499,6.805832,5.036693,-4.632637,-6.307108,-1.109858,1.908221,-8.854152,-0.208611,-6.622560,-3.541460,3.686428,0.893929,4.468819,2.661293,-9.887696,-6.432962,-9.790849,7.006780,0.320289,-6.453091,-2.013454,-1.538523,5.013732,1.113145,-5.529358,-3.522489,9.068753,-6.504861,7.755640,8.035915,-4.448358,8.587003,5.054707,-4.010874,8.551466,-4.645944,-3.752462,-9.681893,2.626730,-2.260388,6.725648,8.867187,-7.760271,8.227463,5.437522,2.305393,-0.853529,-1.130928,0.491879,-3.208436,5.738697,9.548290,9.090688,8.753449,8.156315,3.017078,-5.198843,4.476528,-4.082401,-2.085197,3.380540,-7.554547,3.744954,1.647939,1.527529,7.532727,2.973957,-9.205812,-9.030009,2.733759,3.152316,-9.861737,-1.971937,-3.788871,3.891011,-3.363394,8.978726,-7.649584,-6.836409,3.225861,-1.682095,-1.767767,1.055281,-3.881150,3.477368,-3.232667,-3.892183,-0.549346,-1.096708,-1.584446,-4.423756,0.900578,1.091196,-7.746411,2.039833,9.660134,-5.237992,8.605940,-2.788201,6.189378,-8.461772,0.193958,-1.216634,1.418320,-9.745606,-4.069532,-9.018833,-3.453280,-8.736761,2.964391,2.718127,7.105496,5.892829,5.948415,-8.316256,0.782060,-5.577848,-8.798717,-2.421241,-3.811175,2.335114,9.692957,-3.166254,0.517718,-3.351346,-0.206527,1.853552,9.456996,6.016101,-8.513362,4.469263,-8.811153,-1.705153,3.508854,-4.258514,-3.392549,-3.809680,6.107963,4.455126,8.083517,-0.617685,6.891853,1.018810,-2.486612,-6.041399,6.304714,-0.752007,5.347257,-7.183087,7.152052,-7.730987,-3.294944,-4.517289,3.795732,-3.355814,1.788778,6.876038,-3.460720,-6.794689,2.179857,2.981901,-5.611309,-8.022139,1.352492,-3.262788,1.742066,-3.410997,-3.476366,1.092371,-1.433049,-8.349164,-9.952682,5.012523,0.599681,4.542861,-8.770143,3.083868,-3.484749,-9.489276,-8.917559,2.955954,-0.393022,0.835835,-3.288662,-7.693772,-1.440430,-8.698182,-4.860200,3.928616,5.217603,-6.770322,4.860882,1.801281,6.124303,3.011241,-1.051279,0.776787,-7.791283,6.537953,-5.785533,-1.893252,8.422384,4.158518,-2.357932,6.546445,-3.684521,8.998975,8.370696,5.258482,-3.610635,-9.938078,3.186323,8.065693,-1.126265,-0.586850,0.407710,1.690340,-9.595320,-7.839822,9.891785,-0.524362,-5.939942,9.481390,-8.308953,-5.481487,-6.573449,-7.543186,0.620564,9.692817,-2.622954,-4.047754,-6.395009,-1.654059,-3.389937,4.012039,-1.567384,7.478182,4.110537,-5.235132,-2.623566,9.984071,3.500798,-0.843747,5.626676,-7.402744,-8.107555,1.746087,-0.846412,9.448074,1.944849,-5.754559,-4.617438,-2.296122,7.929281,-6.619509,4.243142,-8.131588,6.691162,4.136747,-1.110435,-0.281454,-3.821318,-4.948628,-3.323008,-2.686614,-2.459117,0.402376,-2.345386,4.218401,8.084458,3.204689,3.632920,5.660354,2.887520,1.959746,8.741220,-0.636738,-1.916143,-0.722150,-8.145944,-2.217835,-7.417014,1.389245,2.429701,-5.177151,-6.871939,5.089787,2.615251,-5.972396,-1.032814,-8.297883,-7.777751,8.324709,0.292434,8.415515,-4.586953,9.866811,2.563549,-7.358564,6.848683,0.821466,-8.914125,0.563124,-0.544450,-5.122702,1.621693,-5.360774,4.596514,-0.910233,9.091250,-2.788493,3.254457,-4.481266,4.397993,0.496126,7.687357,-0.066431,-3.514789,2.935183,-5.607267,7.181114,1.675840,3.548037,5.158003,9.148179,4.953795,8.359242,5.028935,8.994863,-2.091959,1.143841,-7.404614,7.038402,2.542160,1.131663,7.824856,-5.101171,-9.199111,7.964182,0.422195,-4.035036,4.143977,-0.832377,-8.258782,6.437378,-8.274168,-8.694034,-3.706397,4.178999,2.437630,8.495463,6.188670,9.401022,7.056334,-1.313987,6.318064,7.153187,-6.985107,-1.062254,-6.355262,5.626624,-8.330559,2.712611,4.835160,1.121553,9.542870,6.723038,-4.235874,-9.411592,-3.258519,-3.212884,1.437766,-7.936261,4.978050,-2.843330,-0.037941,6.231147,-5.724134,2.211835,1.637639,-7.402634,-1.448009,-7.805973,-0.078375,-3.862560,5.058533,-2.476201,2.456527,-9.309240,7.609522,-5.024988,-0.025793,2.569181,-7.566420,-0.256099,2.289911,-1.076323,1.361516,-2.285356,4.881533,-1.088124,5.408937,4.956270,3.320356,-0.659948,8.041564,-4.786258,-9.931126,-3.471976,-7.207439,-5.846971,3.444339,3.700821,6.791682,-7.609990,1.936787,5.691531,1.072990,4.602669,-1.799343,-8.066277,-3.902275,3.978174,-1.695957,4.108507,5.625643,-1.611241,-0.139831,3.907843,9.153807,-0.478533,-7.223108,6.164269,-0.130449,-7.651143,-1.468427,-6.323770,7.405414,6.755663,9.594478,-5.399898,5.943724,4.793668,6.701453,7.979245,-6.181073,9.945619,-7.606064,3.904179,0.151925,1.791377,-5.977114,-2.661094,-9.456083,2.744853,-0.862004,-5.831621,-4.629633,4.465450,-8.829591,-1.822334,-8.336795,5.649589,-0.509932,4.115959,-7.130824,-0.189760,5.477061,-2.936089,-8.083545,7.063955,9.807549,-8.683119,-6.896118,5.288908,6.639067,0.833501,5.966073,-3.976083,3.671515,2.110089,-9.779668,-4.685365,-9.949637,3.802343,-2.229771,5.182304,-0.464509,0.872719,1.063999,6.297950,-0.487205,-6.002746,7.435038,-3.889046,6.839995,-0.284028,1.791315,0.479368,3.995859,-6.455056,4.978054,-5.737502,-7.903080,-3.963797,-2.954192,-0.990322,3.485307,6.018139,0.860387,9.757538,8.487740,-3.069220,6.179782,4.911474,3.973408,-7.532929,8.389941,-8.476408,2.428779,-6.042469,4.675710,-4.392319,0.505831,1.561598,8.492053,0.447263,6.041585,1.201617,6.226513,2.518375,0.788287,-3.171638,-1.445828,-5.122334,6.026419,-2.117738,9.471741,2.584851,-8.664932,9.900009,-3.856353,-1.238488,-9.609790,-6.827714,-4.446663,-9.669562,6.357931,7.385842,-3.361461,6.011978,-9.206283,-6.550500,4.945806,-9.699275,-1.352500,8.847433,0.638499,-1.777163,-3.895285,6.994485,6.924251,-4.118424,-9.444911,-0.370217,6.201077,3.707802,2.844661,2.162813,7.470767,-7.583404,5.388259,-7.991510,-3.531194,-5.873151,3.867172,2.844976,-1.482829,-9.053249,2.007925,4.645166,-9.555629,-0.317502,-7.232000,-5.845645,-1.047107,9.246054,6.954578,-8.824653,0.288099,-5.193476,-0.485807,7.741131,9.956655,-6.869951,-7.123059,7.284662,-8.942605,5.834309,5.429648,-4.235857,-2.615845,4.763069,-5.899521,1.374595,-7.312415,-0.224424,-7.570746,0.745462,2.044269,-7.771762,8.661946,7.847178,-6.519088,-7.270025,-3.470754,8.573859,0.279192,-9.500712,-0.786836,8.791411,5.437477,9.204814,7.983417,5.764918,-6.508569,-2.665853,2.383950,1.533296,-8.371828,0.267745,0.298041,-4.003609,5.009972,-7.974789,-5.907343,1.330871,4.253963,3.504145,5.564418,-6.724673,9.386592,-4.680087,-9.498374,-9.050701,5.029987,0.828453,-5.579378,4.639741,3.358491,9.132171,8.589295,0.022771,8.972121,9.766943,-7.034985,0.966141,8.476229,-2.595038,7.596867,-0.189741,6.202452,1.566605,1.227694,4.000766,-9.167935,9.146877,7.920876,2.126242,0.841652,-0.267860,-3.706025,7.592238,3.928952,2.781502,-9.688462,4.157344,3.617830,1.154584,-9.227129,5.377329,9.521729,-1.397529,-3.620645,-2.943833,2.114630,7.290814,-9.433137,7.982320,-2.294480,-4.587787,-7.953066,-5.945069,4.016625,6.665556,9.503383,-7.144114,1.592035,8.049624,-0.892125,3.268880,-4.070285,3.935620,-9.894803,-8.448566,3.834384,4.020605,8.109282,-0.017955,-7.125538,-0.625256,-0.755522,-4.913228,2.012492,9.221824,2.889283,2.123435,7.643223,-8.697927,9.477095,0.293232,-8.110648,9.265481,-3.998468,-0.210436,8.259048,-2.091999,8.046021,1.288834,4.536932,5.956808,9.459223,-0.685015,7.466664,-1.218690,-6.809783,-4.488299,7.697451,-7.112019,1.575932,-5.860579,6.012865,-4.857705,0.085120,8.269438,3.494908,-8.521248,-3.681296], dtype = "float64")#candidate|796|(840,)|const|float64
call_792 = relay.TupleGetItem(func_254_call(relay.reshape(var_793.astype('float64'), [7, 1, 3]), relay.reshape(const_794.astype('float64'), [7, 15, 3]), relay.reshape(const_795.astype('float64'), [7, 4, 3]), relay.reshape(const_796.astype('float64'), [840,]), ), 1)
call_797 = relay.TupleGetItem(func_260_call(relay.reshape(var_793.astype('float64'), [7, 1, 3]), relay.reshape(const_794.astype('float64'), [7, 15, 3]), relay.reshape(const_795.astype('float64'), [7, 4, 3]), relay.reshape(const_796.astype('float64'), [840,]), ), 1)
uop_802 = relay.cosh(call_784.astype('float32')) # shape=(13, 4, 11)
uop_804 = relay.cosh(call_786.astype('float32')) # shape=(13, 4, 11)
var_806 = relay.var("var_806", dtype = "bool", shape = (7, 4, 3))#candidate|806|(7, 4, 3)|var|bool
bop_807 = relay.not_equal(call_792.astype('bool'), relay.reshape(var_806.astype('bool'), relay.shape_of(call_792))) # shape=(7, 4, 3)
bop_810 = relay.not_equal(call_797.astype('bool'), relay.reshape(var_806.astype('bool'), relay.shape_of(call_797))) # shape=(7, 4, 3)
func_379_call = mod.get_global_var('func_379')
func_382_call = mutated_mod.get_global_var('func_382')
call_824 = relay.TupleGetItem(func_379_call(relay.reshape(call_784.astype('int8'), [13, 4, 11])), 0)
call_825 = relay.TupleGetItem(func_382_call(relay.reshape(call_784.astype('int8'), [13, 4, 11])), 0)
func_312_call = mod.get_global_var('func_312')
func_314_call = mutated_mod.get_global_var('func_314')
call_829 = func_312_call(relay.reshape(const_775.astype('float32'), [15, 5, 15]))
call_830 = func_312_call(relay.reshape(const_775.astype('float32'), [15, 5, 15]))
output = relay.Tuple([uop_760,call_774,const_775,var_785,var_793,const_794,const_795,const_796,uop_802,bop_807,call_824,call_829,])
output2 = relay.Tuple([uop_760,call_776,const_775,var_785,var_793,const_794,const_795,const_796,uop_804,bop_810,call_825,call_830,])
func_834 = relay.Function([var_759,var_785,var_793,var_806,], output)
mod['func_834'] = func_834
mod = relay.transform.InferType()(mod)
mutated_mod['func_834'] = func_834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_834_call = mutated_mod.get_global_var('func_834')
var_836 = relay.var("var_836", dtype = "float64", shape = (8, 3, 6))#candidate|836|(8, 3, 6)|var|float64
var_837 = relay.var("var_837", dtype = "int8", shape = (572,))#candidate|837|(572,)|var|int8
var_838 = relay.var("var_838", dtype = "float64", shape = (21, 1))#candidate|838|(21, 1)|var|float64
var_839 = relay.var("var_839", dtype = "bool", shape = (7, 4, 3))#candidate|839|(7, 4, 3)|var|bool
call_835 = func_834_call(var_836,var_837,var_838,var_839,)
output = call_835
func_840 = relay.Function([var_836,var_837,var_838,var_839,], output)
mutated_mod['func_840'] = func_840
mutated_mod = relay.transform.InferType()(mutated_mod)
const_879 = relay.const([[[-8.744879,3.413885,5.920279,-8.007389,-3.991033,-0.884016,9.249188]],[[7.440131,-1.218227,-8.629708,-3.017022,7.805133,9.049619,-0.953912]],[[-0.936750,-0.516295,1.714457,-2.189991,9.270444,1.320075,4.755446]]], dtype = "float32")#candidate|879|(3, 1, 7)|const|float32
uop_880 = relay.sin(const_879.astype('float32')) # shape=(3, 1, 7)
bop_888 = relay.left_shift(const_879.astype('int8'), relay.reshape(uop_880.astype('int8'), relay.shape_of(const_879))) # shape=(3, 1, 7)
output = relay.Tuple([bop_888,])
output2 = relay.Tuple([bop_888,])
func_895 = relay.Function([], output)
mod['func_895'] = func_895
mod = relay.transform.InferType()(mod)
output = func_895()
func_896 = relay.Function([], output)
mutated_mod['func_896'] = func_896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_895_call = mod.get_global_var('func_895')
func_896_call = mutated_mod.get_global_var('func_896')
call_923 = relay.TupleGetItem(func_895_call(), 0)
call_924 = relay.TupleGetItem(func_896_call(), 0)
output = call_923
output2 = call_924
func_925 = relay.Function([], output)
mod['func_925'] = func_925
mod = relay.transform.InferType()(mod)
output = func_925()
func_926 = relay.Function([], output)
mutated_mod['func_926'] = func_926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_925_call = mod.get_global_var('func_925')
func_926_call = mutated_mod.get_global_var('func_926')
call_954 = func_925_call()
call_955 = func_925_call()
const_961 = relay.const([[[-1,-2,-1,6,-2,2,3],[9,-5,-3,-9,1,-8,10],[1,5,-2,4,-6,1,-1],[-1,10,6,8,-8,-6,-6]],[[1,-10,-10,6,-5,-7,3],[8,-1,-10,-8,-10,8,7],[8,2,9,-4,8,1,10],[-4,-6,-7,-5,1,3,-2]],[[-9,9,-2,9,-5,-10,-10],[-8,-9,-3,9,3,7,7],[-5,-3,8,4,-2,-1,3],[-10,4,-5,-2,-9,8,-3]]], dtype = "int8")#candidate|961|(3, 4, 7)|const|int8
bop_962 = relay.mod(call_954.astype('float32'), const_961.astype('float32')) # shape=(3, 4, 7)
bop_965 = relay.mod(call_955.astype('float32'), const_961.astype('float32')) # shape=(3, 4, 7)
output = bop_962
output2 = bop_965
func_995 = relay.Function([], output)
mod['func_995'] = func_995
mod = relay.transform.InferType()(mod)
mutated_mod['func_995'] = func_995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_995_call = mutated_mod.get_global_var('func_995')
call_996 = func_995_call()
output = call_996
func_997 = relay.Function([], output)
mutated_mod['func_997'] = func_997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_895_call = mod.get_global_var('func_895')
func_896_call = mutated_mod.get_global_var('func_896')
call_1033 = relay.TupleGetItem(func_895_call(), 0)
call_1034 = relay.TupleGetItem(func_896_call(), 0)
output = relay.Tuple([call_1033,])
output2 = relay.Tuple([call_1034,])
func_1047 = relay.Function([], output)
mod['func_1047'] = func_1047
mod = relay.transform.InferType()(mod)
mutated_mod['func_1047'] = func_1047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1047_call = mutated_mod.get_global_var('func_1047')
call_1048 = func_1047_call()
output = call_1048
func_1049 = relay.Function([], output)
mutated_mod['func_1049'] = func_1049
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1102 = relay.var("var_1102", dtype = "int16", shape = ())#candidate|1102|()|var|int16
var_1103 = relay.var("var_1103", dtype = "int16", shape = (8, 9, 15))#candidate|1103|(8, 9, 15)|var|int16
bop_1104 = relay.bitwise_or(var_1102.astype('int16'), var_1103.astype('int16')) # shape=(8, 9, 15)
output = bop_1104
output2 = bop_1104
func_1132 = relay.Function([var_1102,var_1103,], output)
mod['func_1132'] = func_1132
mod = relay.transform.InferType()(mod)
var_1133 = relay.var("var_1133", dtype = "int16", shape = ())#candidate|1133|()|var|int16
var_1134 = relay.var("var_1134", dtype = "int16", shape = (8, 9, 15))#candidate|1134|(8, 9, 15)|var|int16
output = func_1132(var_1133,var_1134,)
func_1135 = relay.Function([var_1133,var_1134,], output)
mutated_mod['func_1135'] = func_1135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1047_call = mod.get_global_var('func_1047')
func_1049_call = mutated_mod.get_global_var('func_1049')
call_1174 = relay.TupleGetItem(func_1047_call(), 0)
call_1175 = relay.TupleGetItem(func_1049_call(), 0)
output = relay.Tuple([call_1174,])
output2 = relay.Tuple([call_1175,])
func_1182 = relay.Function([], output)
mod['func_1182'] = func_1182
mod = relay.transform.InferType()(mod)
output = func_1182()
func_1183 = relay.Function([], output)
mutated_mod['func_1183'] = func_1183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1226 = relay.var("var_1226", dtype = "bool", shape = ())#candidate|1226|()|var|bool
var_1227 = relay.var("var_1227", dtype = "bool", shape = (4, 16, 8))#candidate|1227|(4, 16, 8)|var|bool
bop_1228 = relay.logical_and(var_1226.astype('bool'), var_1227.astype('bool')) # shape=(4, 16, 8)
func_1182_call = mod.get_global_var('func_1182')
func_1183_call = mutated_mod.get_global_var('func_1183')
call_1232 = relay.TupleGetItem(func_1182_call(), 0)
call_1233 = relay.TupleGetItem(func_1183_call(), 0)
output = relay.Tuple([bop_1228,call_1232,])
output2 = relay.Tuple([bop_1228,call_1233,])
func_1243 = relay.Function([var_1226,var_1227,], output)
mod['func_1243'] = func_1243
mod = relay.transform.InferType()(mod)
var_1244 = relay.var("var_1244", dtype = "bool", shape = ())#candidate|1244|()|var|bool
var_1245 = relay.var("var_1245", dtype = "bool", shape = (4, 16, 8))#candidate|1245|(4, 16, 8)|var|bool
output = func_1243(var_1244,var_1245,)
func_1246 = relay.Function([var_1244,var_1245,], output)
mutated_mod['func_1246'] = func_1246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_995_call = mod.get_global_var('func_995')
func_997_call = mutated_mod.get_global_var('func_997')
call_1299 = func_995_call()
call_1300 = func_995_call()
output = relay.Tuple([call_1299,])
output2 = relay.Tuple([call_1300,])
func_1311 = relay.Function([], output)
mod['func_1311'] = func_1311
mod = relay.transform.InferType()(mod)
output = func_1311()
func_1312 = relay.Function([], output)
mutated_mod['func_1312'] = func_1312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_995_call = mod.get_global_var('func_995')
func_997_call = mutated_mod.get_global_var('func_997')
call_1319 = func_995_call()
call_1320 = func_995_call()
var_1327 = relay.var("var_1327", dtype = "float32", shape = (3, 4, 7))#candidate|1327|(3, 4, 7)|var|float32
bop_1328 = relay.left_shift(call_1319.astype('uint16'), relay.reshape(var_1327.astype('uint16'), relay.shape_of(call_1319))) # shape=(3, 4, 7)
bop_1331 = relay.left_shift(call_1320.astype('uint16'), relay.reshape(var_1327.astype('uint16'), relay.shape_of(call_1320))) # shape=(3, 4, 7)
uop_1332 = relay.log2(var_1327.astype('float64')) # shape=(3, 4, 7)
func_1182_call = mod.get_global_var('func_1182')
func_1183_call = mutated_mod.get_global_var('func_1183')
call_1337 = relay.TupleGetItem(func_1182_call(), 0)
call_1338 = relay.TupleGetItem(func_1183_call(), 0)
output = relay.Tuple([bop_1328,uop_1332,call_1337,])
output2 = relay.Tuple([bop_1331,uop_1332,call_1338,])
func_1344 = relay.Function([var_1327,], output)
mod['func_1344'] = func_1344
mod = relay.transform.InferType()(mod)
mutated_mod['func_1344'] = func_1344
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1345 = relay.var("var_1345", dtype = "float32", shape = (3, 4, 7))#candidate|1345|(3, 4, 7)|var|float32
func_1344_call = mutated_mod.get_global_var('func_1344')
call_1346 = func_1344_call(var_1345)
output = call_1346
func_1347 = relay.Function([var_1345], output)
mutated_mod['func_1347'] = func_1347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_895_call = mod.get_global_var('func_895')
func_896_call = mutated_mod.get_global_var('func_896')
call_1425 = relay.TupleGetItem(func_895_call(), 0)
call_1426 = relay.TupleGetItem(func_896_call(), 0)
func_379_call = mod.get_global_var('func_379')
func_382_call = mutated_mod.get_global_var('func_382')
const_1431 = relay.const([-6,-2,-10,4,1,-1,4,-7,6,6,1,9,-1,-3,1,-4,-6,10,1,-9,3,-7,-8,9,-8,9,-6,-1,-3,7,4,-3,-8,-10,6,-9,-1,-8,-3,-4,2,10,2,-5,6,9,3,-4,-4,8,-6,-8,5,6,3,-9,-3,-4,-2,8,-1,10,8,3,-8,1,-9,-1,-7,2,-6,8,4,4,9,2,10,1,5,1,6,9,5,10,6,-3,-7,-2,10,-4,10,10,9,-2,-5,10,-9,7,-9,-5,10,-7,-10,5,7,-1,-7,-10,2,3,-5,3,1,7,8,5,3,-5,1,4,-1,-4,8,7,6,-9,4,-6,-1,-5,6,-7,1,9,-5,-7,-8,7,7,-5,-3,-5,-6,1,3,-8,-7,-7,8,10,8,10,-10,-3,-10,-1,7,-9,4,-2,-8,-5,5,5,7,9,-5,-5,-5,-4,-9,7,9,-8,-5,-2,-3,2,-9,3,4,-3,-10,-6,9,9,6,-5,-9,-10,7,1,-8,-8,-2,5,5,-7,-8,-10,-6,6,-5,7,-8,-2,8,3,-6,3,3,6,-7,3,-7,-4,-5,4,-3,-6,9,-6,-9,3,1,3,-5,2,-1,9,1,2,-4,-6,9,-10,7,-5,4,-4,-7,10,8,-6,-8,-9,-8,5,-9,-1,-2,-9,6,9,-6,-6,2,5,-8,10,-7,7,2,-9,2,1,2,4,6,1,-6,2,-5,-9,1,-10,-8,6,-6,1,9,-3,2,1,1,-7,-1,7,8,-8,5,7,-5,-5,10,-1,8,1,1,5,6,-1,10,4,5,-9,9,6,-1,-7,7,-1,9,-2,-4,2,-8,8,10,10,-3,6,4,-8,-4,-7,10,-3,-10,1,1,-7,-6,-1,-6,-2,9,-2,3,-8,-6,6,-5,-7,4,-2,-3,6,-3,-6,7,7,-9,8,1,-6,3,5,9,-4,1,-9,-2,-4,1,3,1,5,10,-1,-1,10,-7,1,-8,-10,-10,3,-4,-6,-8,-5,6,-8,-5,-9,-6,-10,3,-2,8,-10,-10,8,-2,1,3,1,-7,-8,-10,7,-6,-10,10,-10,3,-5,-2,9,9,-6,-9,4,5,-8,-8,10,4,3,-1,2,-4,7,2,-2,9,5,-2,-3,8,-4,6,10,-6,-4,7,-1,3,-9,-5,7,-6,1,9,8,5,6,8,3,-1,10,-3,1,8,-2,-8,8,-1,-5,-3,10,7,-1,-3,2,9,4,-3,-1,-4,6,4,-9,3,5,-8,-7,-4,3,-1,3,-7,4,-3,-10,8,10,-10,-6,4,-2,-10,-1,-5,2,-9,6,4,-5,4,4,1,-5,5,-7,-3,-3,-8,-7,-9,9,-4,6,-4,2,6,2,-4,-2,8,-9,-8,4,-9,7,10,7,-10,9,-4,1,-1,-1,10,5,3,-9,-8,-7,5,-6,9,-6,-6,2,-8,-2,-8,3,6,-3,1,10,-6,8,-2,-4,-8,1,-7,-6,7,-1,10,-10,1,-5,-7,2,3,-5], dtype = "int8")#candidate|1431|(572,)|const|int8
call_1430 = relay.TupleGetItem(func_379_call(relay.reshape(const_1431.astype('int8'), [13, 4, 11])), 0)
call_1432 = relay.TupleGetItem(func_382_call(relay.reshape(const_1431.astype('int8'), [13, 4, 11])), 0)
output = relay.Tuple([call_1425,call_1430,const_1431,])
output2 = relay.Tuple([call_1426,call_1432,const_1431,])
func_1434 = relay.Function([], output)
mod['func_1434'] = func_1434
mod = relay.transform.InferType()(mod)
output = func_1434()
func_1435 = relay.Function([], output)
mutated_mod['func_1435'] = func_1435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1182_call = mod.get_global_var('func_1182')
func_1183_call = mutated_mod.get_global_var('func_1183')
call_1459 = relay.TupleGetItem(func_1182_call(), 0)
call_1460 = relay.TupleGetItem(func_1183_call(), 0)
func_995_call = mod.get_global_var('func_995')
func_997_call = mutated_mod.get_global_var('func_997')
call_1468 = func_995_call()
call_1469 = func_995_call()
output = relay.Tuple([call_1459,call_1468,])
output2 = relay.Tuple([call_1460,call_1469,])
func_1475 = relay.Function([], output)
mod['func_1475'] = func_1475
mod = relay.transform.InferType()(mod)
output = func_1475()
func_1476 = relay.Function([], output)
mutated_mod['func_1476'] = func_1476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_925_call = mod.get_global_var('func_925')
func_926_call = mutated_mod.get_global_var('func_926')
call_1514 = func_925_call()
call_1515 = func_925_call()
output = relay.Tuple([call_1514,])
output2 = relay.Tuple([call_1515,])
func_1519 = relay.Function([], output)
mod['func_1519'] = func_1519
mod = relay.transform.InferType()(mod)
output = func_1519()
func_1520 = relay.Function([], output)
mutated_mod['func_1520'] = func_1520
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1543 = relay.var("var_1543", dtype = "float64", shape = (7, 3, 15))#candidate|1543|(7, 3, 15)|var|float64
var_1544 = relay.var("var_1544", dtype = "float64", shape = (7, 3, 15))#candidate|1544|(7, 3, 15)|var|float64
bop_1545 = relay.divide(var_1543.astype('float64'), relay.reshape(var_1544.astype('float64'), relay.shape_of(var_1543))) # shape=(7, 3, 15)
output = relay.Tuple([bop_1545,])
output2 = relay.Tuple([bop_1545,])
func_1561 = relay.Function([var_1543,var_1544,], output)
mod['func_1561'] = func_1561
mod = relay.transform.InferType()(mod)
mutated_mod['func_1561'] = func_1561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1561_call = mutated_mod.get_global_var('func_1561')
var_1563 = relay.var("var_1563", dtype = "float64", shape = (7, 3, 15))#candidate|1563|(7, 3, 15)|var|float64
var_1564 = relay.var("var_1564", dtype = "float64", shape = (7, 3, 15))#candidate|1564|(7, 3, 15)|var|float64
call_1562 = func_1561_call(var_1563,var_1564,)
output = call_1562
func_1565 = relay.Function([var_1563,var_1564,], output)
mutated_mod['func_1565'] = func_1565
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1571 = relay.const([[[-8,-3,-3,6,10,-10,8,6,10],[-6,-2,1,-5,4,-7,-9,10,-1],[-3,-1,-6,-3,-6,-8,5,-1,10],[-8,8,-2,-6,4,-5,1,4,2],[-6,4,4,-8,8,5,-1,3,-4],[8,4,-10,-7,-6,4,8,-10,9],[6,4,-7,10,-3,-9,7,-9,-9],[9,-7,-4,-2,-8,-9,-8,-6,-7]],[[-1,-3,1,1,9,-9,8,-4,-3],[-7,-3,7,4,6,-8,-3,3,5],[-7,-2,-8,-5,-10,-1,-7,10,-3],[-3,4,9,2,1,9,9,-4,-2],[-3,7,6,-8,8,5,7,-10,-7],[3,2,-5,9,7,-7,6,-8,7],[2,-10,-5,4,3,3,5,-9,9],[8,-10,-1,-5,-10,1,8,-3,6]],[[3,2,-7,6,-8,-9,-3,-4,1],[1,-6,9,-6,-1,-5,-9,-10,-4],[5,-9,9,9,-4,-4,-2,-2,-3],[6,-10,-10,-5,-3,9,1,1,6],[-7,-3,-2,7,1,-2,2,6,6],[-9,7,7,-3,-2,10,8,5,-10],[8,2,-9,-6,4,-7,9,3,-9],[-4,1,-9,-3,8,-6,-6,-8,-6]],[[3,-9,5,9,-1,-2,5,3,3],[6,-8,-6,5,-1,-10,-1,10,-4],[-6,-10,5,9,1,7,7,2,10],[-10,-1,9,1,-6,9,-7,-5,6],[-3,2,-1,8,2,3,-7,8,-7],[9,6,6,-9,4,2,-4,7,8],[4,-5,-5,10,-1,-2,-7,4,-8],[1,-7,-1,-5,3,10,-9,7,-3]],[[-2,6,3,-2,9,-4,-10,4,1],[6,10,-9,1,9,2,10,-6,7],[-6,-10,9,-4,2,-6,-5,1,2],[-8,-8,8,-10,3,-7,-7,-1,10],[2,9,-3,-7,7,-6,7,-1,2],[4,10,-7,-10,-1,-1,3,4,7],[6,6,3,-4,5,-5,7,-8,-7],[-5,1,-9,7,-6,-3,8,9,5]]], dtype = "uint16")#candidate|1571|(5, 8, 9)|const|uint16
const_1572 = relay.const([[[-10,-3,-7,4,9,3,-5,-7,-8],[8,7,1,7,1,7,8,-3,6],[-2,-5,2,6,8,8,4,7,-3],[1,2,2,3,9,-2,7,5,5],[-1,-3,-6,-7,6,-10,-2,-9,-4],[-4,-2,3,7,-10,-4,-8,-9,4],[-3,-6,4,-7,8,3,-8,6,-9],[6,3,-8,2,-9,-8,-6,3,7]],[[-7,-6,-2,-6,-5,8,3,1,9],[-2,5,2,4,2,10,-7,-8,2],[9,8,-10,9,2,9,7,-4,3],[-6,4,6,-1,-10,3,9,-8,7],[5,1,-4,-1,-4,-5,-3,-3,3],[10,4,5,10,1,-10,5,-4,5],[9,-3,2,-7,3,1,-3,1,1],[-3,9,10,-4,-7,1,10,-9,-2]],[[-3,6,-1,3,10,-9,10,-3,-10],[8,-7,-4,-6,-10,-9,4,1,9],[8,6,-4,6,-7,-2,-1,-10,-3],[9,-1,4,1,-2,-9,2,1,-5],[3,10,2,8,10,2,-4,-5,-1],[-3,-9,3,-5,7,-5,2,4,7],[-4,9,-4,-9,5,-1,5,7,10],[1,-6,-3,1,-6,-7,-2,9,5]],[[4,10,-10,-6,-7,-6,-2,4,5],[9,-3,10,-10,-3,4,2,3,-9],[-5,5,-9,-8,-10,-1,10,-3,-4],[2,-7,-5,-2,3,1,6,9,7],[-4,9,9,-3,9,-9,10,1,6],[-10,-4,-4,7,8,-3,3,2,-3],[3,8,-1,7,10,-1,-3,-7,-8],[-2,2,10,-5,-5,7,7,-6,-4]],[[-2,2,-8,-10,-6,9,-9,8,1],[9,4,-4,-5,-3,-6,10,7,-1],[5,-9,10,6,1,3,3,-9,-7],[8,-7,-3,-7,2,4,-10,-9,-1],[-6,-10,-10,-8,-4,-10,3,-3,8],[-3,10,8,3,7,8,10,-7,-1],[-1,2,10,-8,-1,-3,-10,3,-4],[-6,-2,6,10,-3,6,6,5,-5]]], dtype = "uint16")#candidate|1572|(5, 8, 9)|const|uint16
bop_1573 = relay.add(const_1571.astype('uint16'), relay.reshape(const_1572.astype('uint16'), relay.shape_of(const_1571))) # shape=(5, 8, 9)
output = relay.Tuple([bop_1573,])
output2 = relay.Tuple([bop_1573,])
func_1580 = relay.Function([], output)
mod['func_1580'] = func_1580
mod = relay.transform.InferType()(mod)
mutated_mod['func_1580'] = func_1580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1580_call = mutated_mod.get_global_var('func_1580')
call_1581 = func_1580_call()
output = call_1581
func_1582 = relay.Function([], output)
mutated_mod['func_1582'] = func_1582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1594 = relay.var("var_1594", dtype = "float32", shape = (13, 5, 5))#candidate|1594|(13, 5, 5)|var|float32
uop_1595 = relay.atan(var_1594.astype('float32')) # shape=(13, 5, 5)
bop_1604 = relay.multiply(uop_1595.astype('uint8'), relay.reshape(var_1594.astype('uint8'), relay.shape_of(uop_1595))) # shape=(13, 5, 5)
func_1047_call = mod.get_global_var('func_1047')
func_1049_call = mutated_mod.get_global_var('func_1049')
call_1619 = relay.TupleGetItem(func_1047_call(), 0)
call_1620 = relay.TupleGetItem(func_1049_call(), 0)
func_1561_call = mod.get_global_var('func_1561')
func_1565_call = mutated_mod.get_global_var('func_1565')
const_1645 = relay.const([-5.652970,-9.668256,6.072461,-3.977473,-9.974025,9.993579,1.343557,4.574984,-3.854289,3.053991,1.171774,-8.486618,3.222474,7.085268,6.800716,-8.950176,-7.370421,-0.483692,-8.227218,-1.620852,8.428640,-4.979115,-1.465133,-3.654140,-5.996580,8.368690,6.765581,2.941983,-9.761876,1.814340,4.516846,6.847332,-8.344791,-5.377922,2.399780,-2.428949,-0.160355,8.657420,-0.440914,7.957250,-0.748972,-6.253674,3.925112,-9.962610,-4.376188,9.734845,2.910820,-6.550420,-4.578900,-5.384613,2.345413,-6.552689,7.569210,-7.790975,-6.117533,4.968945,0.359165,-6.556155,3.232314,-6.411073,1.123582,0.669992,8.673521,-0.404710,-0.585880,8.787232,7.702382,-3.774712,9.661767,-6.431893,-4.787110,-6.466052,4.896224,-9.886173,5.876760,8.237902,9.374978,7.951922,-4.945726,-3.782623,4.379719,-5.005863,-5.394164,4.654255,1.169141,0.682852,2.819574,9.292088,-0.858337,2.400014,8.498926,-8.156492,-0.327098,3.257886,-5.188302,6.048055,5.708176,-3.651317,-7.405088,1.367658,-2.346192,-1.436941,3.551780,-6.475238,2.362886,6.217543,-2.360768,2.599737,-8.544428,9.420932,2.509139,-8.221380,-7.751632,-7.390956,-8.302135,3.435592,-9.695000,1.389248,2.765382,6.032227,5.210556,7.005934,4.563080,-0.435953,6.301485,-1.252105,0.107407,8.627977,0.456879,-2.020797,-5.660346,-3.270739,6.662697,-0.860889,-9.402140,-7.052573,-8.650445,2.551738,-0.750863,2.476835,-3.506154,-8.729201,-1.851969,8.751681,3.269104,-8.536445,3.005556,-0.566940,-4.872072,-4.014514,9.846894,-3.037666,-3.845593,9.254386,-1.274425,4.181170,-2.066137,-7.611594,0.550090,-4.910084,2.774118,-9.471725,-5.054243,-7.768709,8.199634,5.961054,0.907967,3.621601,1.876489,-7.487115,8.609577,-4.519482,-0.107921,9.946785,1.333192,-3.977714,-0.468980,1.372163,-3.861689,7.243463,-2.211816,-8.563865,-7.246924,-1.349316,-1.111614,7.346954,-4.593957,7.512468,-5.162076,-0.283571,-8.278701,8.895283,-6.024026,7.183230,-9.065366,-6.467036,6.414446,-6.728482,-7.159657,-9.680601,4.697213,0.378087,0.795188,-0.027088,9.895289,8.094072,-0.509523,-7.148240,-5.194094,5.351387,-3.238604,4.700919,-1.720496,2.447831,-1.584988,1.878515,-5.710588,1.733843,7.105555,0.882197,3.252279,-1.468557,8.924851,-8.162110,6.798039,-3.893483,2.397645,2.522001,3.431390,0.793525,-3.580445,-8.984025,5.717799,1.405659,7.407612,1.414642,7.275658,-3.500583,-6.246506,-8.053792,-9.868692,9.500637,8.120683,8.881082,0.888124,-4.525307,1.608175,-7.047724,0.830797,5.302693,2.448705,3.000516,1.210842,0.342131,-4.190064,5.649454,3.771167,-2.783682,6.882480,0.011460,-9.132964,8.876677,-6.351769,-3.666676,7.381846,9.318391,-2.314467,2.185648,-6.218954,1.559758,5.336860,-9.249216,8.550162,7.305116,-4.181281,-8.560447,-8.671018,8.307569,6.619623,-8.071714,7.872211,1.949217,-0.504259,4.011768,-9.699956,8.683142,0.377280,-4.561697,7.752252,-4.303139,-7.748680,-6.983428,-2.678531,-3.663769,-8.571925,-0.666405,-5.156354,9.894587,-4.363502,5.806420,-3.808217,-7.882348,-4.353879,-5.217679,-0.677339,-2.616637,2.261528,-3.679311,-5.820585,-1.596374,9.506785,-0.604903,-0.452558,8.893868,9.559867], dtype = "float64")#candidate|1645|(315,)|const|float64
call_1644 = relay.TupleGetItem(func_1561_call(relay.reshape(const_1645.astype('float64'), [7, 3, 15]), relay.reshape(const_1645.astype('float64'), [7, 3, 15]), ), 0)
call_1646 = relay.TupleGetItem(func_1565_call(relay.reshape(const_1645.astype('float64'), [7, 3, 15]), relay.reshape(const_1645.astype('float64'), [7, 3, 15]), ), 0)
output = relay.Tuple([bop_1604,call_1619,call_1644,const_1645,])
output2 = relay.Tuple([bop_1604,call_1620,call_1646,const_1645,])
func_1677 = relay.Function([var_1594,], output)
mod['func_1677'] = func_1677
mod = relay.transform.InferType()(mod)
mutated_mod['func_1677'] = func_1677
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1678 = relay.var("var_1678", dtype = "float32", shape = (13, 5, 5))#candidate|1678|(13, 5, 5)|var|float32
func_1677_call = mutated_mod.get_global_var('func_1677')
call_1679 = func_1677_call(var_1678)
output = call_1679
func_1680 = relay.Function([var_1678], output)
mutated_mod['func_1680'] = func_1680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_925_call = mod.get_global_var('func_925')
func_926_call = mutated_mod.get_global_var('func_926')
call_1693 = func_925_call()
call_1694 = func_925_call()
uop_1703 = relay.erf(call_1693.astype('float64')) # shape=(3, 1, 7)
uop_1705 = relay.erf(call_1694.astype('float64')) # shape=(3, 1, 7)
func_312_call = mod.get_global_var('func_312')
func_314_call = mutated_mod.get_global_var('func_314')
const_1714 = relay.const([8.372952,1.265824,-9.124045,3.243325,-1.230729,5.752532,-8.286764,3.707775,4.965307,0.962287,-6.408597,5.064732,-1.936084,8.046680,7.538457,-3.123891,7.322440,5.704119,7.383751,1.981270,-9.225012,6.573085,0.682354,0.535945,6.806364,-9.801627,2.312505,2.610489,0.957023,-3.841836,0.503733,4.746411,-7.850183,-5.195981,5.672641,6.877749,5.687591,-3.213528,-2.792309,7.059145,-3.142557,6.328540,4.195610,-3.293809,9.305815,5.171154,2.974500,-0.899020,3.081771,4.988282,-0.936590,-7.774391,4.821909,5.613343,-0.036007,-8.064568,-3.254220,3.580468,-5.081355,-1.515619,-4.178148,4.797863,-6.703582,8.785132,-2.685595,-6.024620,-8.649798,-9.803922,-4.160402,7.952560,-8.015330,3.786852,0.553169,-1.532814,-7.503026,-0.589301,-8.544422,7.683960,2.070824,3.707856,0.997863,-9.196227,-5.387499,-8.720125,-5.312267,-9.855845,6.004003,-3.097679,-9.077103,-7.804883,7.074718,7.805793,-7.564205,4.405669,5.942491,-9.264452,-3.314476,-5.088093,7.589686,0.648729,-9.106726,2.243500,-2.429366,7.779659,-4.813394,3.397880,-2.171502,-6.488386,5.388421,-3.514894,-3.835790,-7.797751,9.441547,9.274541,9.934749,6.518258,-6.543935,6.681736,-6.829340,1.774912,-6.628846,-2.890051,8.859572,-5.864950,-8.689812,-3.853005,3.482695,-9.725317,0.697333,3.810193,-1.245445,9.577715,9.376384,7.043262,5.039701,1.032098,-3.665663,-3.341237,-4.432820,-5.733781,7.757570,7.379436,3.331051,3.535340,5.796364,2.190820,2.984325,5.014776,2.899096,-7.380650,8.178557,6.202171,-4.693504,-2.164333,-6.488785,1.766950,5.319358,-9.672514,-5.191315,5.940551,-7.329712,-4.614645,0.370647,8.070514,-9.741429,3.783987,0.880007,8.511282,-9.971247,-0.135510,0.623961,-4.946399,-3.435073,9.714277,2.855853,-4.453667,-9.343301,6.307284,-8.575244,-1.268582,1.753639,2.765478,-3.820155,-4.028917,-3.466811,5.807123,-6.434912,-3.834666,-7.210185,-5.704806,-9.783643,-2.519478,7.955387,2.133745,-7.211643,-2.119245,9.297524,-2.833936,9.017963,8.093435,7.582217,3.682159,-9.493506,-5.367581,2.483562,-5.724659,2.074767,-5.550602,0.312260,6.631002,-3.508169,9.994768,0.740307,5.016555,-4.715350,-7.046988,-8.323847,6.713682,9.449048,4.065333,-0.356221,-7.255648,-2.423250,-3.935806,-3.648972,4.240057,-0.651296,1.457791,-9.832175,-3.871236,5.831200,-1.985566,-2.795988,-3.582030,2.195254,-5.648760,-7.289473,-4.891073,-5.756177,-5.760447,-0.348709,0.083057,-8.637357,-3.189686,5.909795,4.693648,2.326546,-1.256522,1.523059,7.101232,6.331284,4.149085,-4.176836,-6.736603,-0.249822,-7.797988,4.157536,7.844196,-1.577400,-3.158876,-9.145559,-1.464250,-8.851167,4.871729,3.669302,-4.712606,6.612110,-5.855533,4.169421,-3.005959,9.655742,-1.340705,-4.129717,-7.296800,6.523360,-0.724508,-8.837362,4.224042,-8.910452,0.385785,6.610446,-6.673055,9.548314,7.605991,9.558144,-8.858241,-8.174613,9.742837,5.264185,4.285667,1.176888,-5.736964,-5.765282,-0.518989,4.070891,-4.476381,6.117734,1.028884,-3.655612,-5.229127,-3.282129,-2.534113,3.977240,1.029363,-5.701481,-3.018344,-7.984649,0.321272,-0.981873,9.941031,0.898647,3.175321,-7.059593,9.433280,9.456987,3.845486,6.210793,-5.071296,8.195751,3.422809,-8.352236,1.208296,-7.353085,4.991160,-0.490260,-4.381465,-5.487376,0.281665,-4.051960,4.503700,-4.892563,7.941768,9.262880,-9.967963,2.540182,-2.838936,2.259805,8.231656,-0.009445,5.388288,8.958225,5.169269,3.720378,0.288561,2.288518,8.600554,7.932886,6.411299,-1.740970,9.154366,5.641131,9.623559,-1.077057,6.426106,6.239505,3.116233,-3.907601,-9.189024,6.828586,-5.505834,4.547305,-1.289402,-8.381359,5.575073,-2.946465,9.420892,-7.486635,-6.352066,7.887544,7.505929,-7.778943,0.602847,9.753667,-1.590046,4.870251,-1.607352,-8.770677,9.304041,-6.274466,8.019046,-7.838819,9.922050,5.686527,5.730758,6.891316,8.361068,3.190527,-8.355717,7.682175,-6.156430,6.071811,2.913729,7.010615,8.342092,5.691773,-0.208353,7.770510,-2.445142,-8.004544,1.400362,-8.298499,3.003306,7.157019,7.797583,1.584802,-7.907214,-0.759406,-6.989408,-5.665717,1.817415,8.777412,7.846941,2.653639,6.662675,8.633470,6.950385,-5.307994,-2.151188,4.474353,-2.468657,8.654855,4.652778,-2.295859,1.495806,5.379785,-1.241462,8.261339,8.878483,2.197438,-6.226732,6.072362,-1.903724,-6.275267,-4.058020,-8.936472,-3.727569,2.221614,8.457474,-9.248198,-4.956292,-1.438130,-9.392936,3.736095,-6.142503,-8.248247,2.001252,6.700347,9.519858,-2.013183,0.119694,-5.165537,-1.828322,2.173796,0.819003,4.534301,-1.627525,-5.572297,1.788856,-7.387668,-3.138874,-3.940982,4.473013,-1.127421,7.287752,-1.860264,7.288307,7.378599,-4.827928,-8.159814,-8.679090,7.017469,5.326450,8.101303,1.605848,-3.681850,-6.548602,-4.471632,-7.844606,5.374633,4.424156,-8.325531,-6.567140,2.377267,2.526188,7.528484,2.347644,-5.364731,-7.301156,8.232343,5.822872,-7.800919,-6.142383,8.404559,9.961503,-5.145785,-8.256234,7.296010,-1.235151,9.676338,-2.645732,3.472711,-8.346290,-2.328618,2.578570,-7.342950,-7.809123,8.026855,9.005654,9.049547,0.066039,-6.483687,0.497742,-0.102801,-6.162081,0.644914,-8.919404,-3.984585,-5.891292,-6.172066,-8.278354,-8.761810,0.139143,2.110623,0.224003,2.917326,-1.728245,-4.812522,8.998191,-0.076927,6.840107,5.400092,-3.862206,-8.106918,-9.248287,3.531824,3.053587,5.244958,3.427391,-6.729557,-1.666297,7.427873,9.606080,-3.743486,-4.165379,-2.647880,-4.425148,-3.701738,6.582779,7.665395,4.320803,-5.136048,-2.621331,1.057437,-0.862205,-2.177932,0.764303,3.111847,-0.606126,6.878527,-9.418960,-3.719421,5.869334,-5.951926,5.439127,1.250196,-0.936741,0.571760,9.077967,-6.673216,-6.658832,-9.677565,-0.269069,-6.726351,0.889671,4.653633,4.503240,-5.131562,-1.628366,6.047949,-7.055513,-9.926583,-0.912410,-9.219614,-6.651334,9.721535,5.988035,-4.585929,-3.367955,-8.797283,0.378354,3.947306,5.432701,4.529624,-6.506777,7.360320,0.876370,5.285300,-6.102522,-7.529513,-7.503341,4.969364,3.403866,7.307705,4.465071,-3.859636,-2.535414,9.244293,3.816236,9.754236,-5.903685,5.097913,3.894410,9.351567,-4.229540,-5.537085,-1.513801,-9.073544,-6.248553,6.660165,-6.841062,-7.483509,8.502396,-5.040930,-5.753132,8.380877,7.044861,8.464338,6.755995,-5.299738,-4.812818,2.217902,-7.163309,-2.285264,3.591907,-5.990280,2.644181,-5.778501,0.906968,-3.220924,7.265975,-3.056217,-3.793747,4.672873,-1.098891,2.671418,-2.634868,7.374673,-7.930999,8.917883,3.448127,8.347198,-5.756975,-3.295662,9.675928,-8.652937,-8.940685,8.522162,-6.836352,-6.919174,-6.401702,3.226914,-6.590368,6.682195,-7.271381,3.660845,3.104111,8.183894,-5.139556,0.152606,-5.800354,-0.119169,-8.357325,2.166172,-8.680018,2.712402,6.716325,-3.489073,-1.076227,-6.330850,-9.720488,-7.305553,8.159461,-8.231672,5.697019,7.030944,7.042129,-1.796801,0.576748,-4.797588,-3.045341,-6.927987,-9.692662,7.841566,-5.919136,5.851199,0.907051,-7.823687,7.080260,1.342961,-1.559536,-0.958030,-6.066366,4.554709,-5.070049,-5.934090,-3.632805,-9.481660,6.228883,3.726016,-2.675357,-4.608631,-1.312915,-9.681195,8.152589,3.072798,-1.189633,0.234640,-3.287962,-1.129567,-8.594500,2.197902,8.503902,1.847312,-3.494225,-2.676404,-9.742161,-3.108013,-7.865335,-5.426178,-9.093004,8.734461,-1.538792,-9.879790,-9.507489,0.973635,5.367775,4.299489,9.704986,1.922644,2.891400,-2.409191,-9.697337,-6.852467,0.289829,6.850378,-5.971180,-0.183639,5.377776,-0.767722,6.211329,5.828521,-8.888772,5.337428,0.966697,6.980995,-7.369775,-6.736811,0.641310,0.234064,-9.796859,-5.253320,-8.764653,2.352923,1.475587,2.216057,7.698852,1.940178,7.625422,9.985214,7.376640,7.051558,-1.157366,3.842094,-0.827009,-1.837182,5.052919,-5.322289,0.473041,7.339045,9.750068,6.475280,1.379909,-0.351594,5.822771,-9.821240,7.693833,9.446616,3.003349,7.402558,1.356692,-3.761501,-7.489326,-2.609472,-7.622742,7.025474,-2.427415,3.236087,5.562078,-4.417050,6.809546,-4.583662,-2.584268,4.747743,-1.061683,-1.386066,-8.963941,-7.298929,9.690556,2.783263,-0.231120,3.790498,5.991588,6.026364,-7.669123,-0.861268,-7.676472,-1.501631,-5.168013,-3.137723,-4.889495,-0.251269,-8.762192,-6.453122,-7.684390,4.747407,-1.715287,9.691986,5.800222,-5.460683,9.306063,-9.769200,7.048727,-3.177793,-0.391053,-4.513327,1.972178,1.903612,6.895897,4.738324,2.039168,0.419877,4.825021,-9.109587,5.440521,9.668299,4.488836,-9.287625,-8.771791,-6.797198,9.797491,-1.956589,5.453623,-9.938450,2.151228,-9.493634,7.537553,-7.242663,2.756205,1.786494,3.509616,6.016798,-5.268042,-4.876368,-6.813747,0.186917,6.246628,2.704370,-2.826711,-3.845813,9.198883,-1.155695,-7.958049,-5.797843,3.036663,-1.475517,-9.898611,0.897803,5.506653,6.422978,-8.295554,1.822161,-4.782483,1.897176,7.110426,-3.589251,-7.339889,2.579910,6.778951,-8.659156,9.057276,-4.625123,-0.560548,7.140766,5.839003,-6.223798,8.391781,7.252476,-2.022136,-3.206116,-1.530366,-4.465467,-1.428206,4.603542,5.096104,-1.593692,-2.985200,-3.638749,0.163909,-7.978123,2.944086,-0.024594,4.472790,-7.745780,-1.795336,0.257786,-0.385027,-1.098414,6.020038,-7.543769,2.619677,0.977528,1.891026,2.121357,9.218369,5.985710,-4.930388,-7.648833,-4.575294,3.140820,4.189759,0.365393,-0.249909,-5.943314,-0.001467,3.058058,-5.372124,9.140930,-2.437525,-9.894215,5.039895,-6.701355,5.647924,6.306884,-8.886954,2.413562,4.446842,8.944112,-9.971409,4.113868,-6.833211,-5.399660,4.448653,4.848852,-9.903585,-0.641968,3.356647,5.396408,4.255598,-2.993298,0.788363,4.365761,6.904500,0.123988,5.384077,-5.848872,6.040055,-2.568886,-9.142036,-5.961618,8.906017,-0.088295,-3.571993,5.739681,-2.414718,9.449752,0.669012,-9.844325,0.077315,-0.289514,-1.566277,-4.779546,-1.827436,2.801237,-3.044324,0.163886,-6.652720,1.954451,-4.384038,-9.703565,-3.731784,-2.569177,-7.116794,-9.945630,-3.206923,-0.936548,3.947760,-3.702376,2.013360,9.106309,-0.958281,6.023411,-3.450588,2.683964,-5.897189,-3.656678,2.019561,-5.201660,9.690599,1.004829,-7.758573,6.909990,-8.325557,9.015668,4.937113,-3.252166,4.942518,-8.801366,-4.689338,-4.107815,7.655926,3.324453,-5.581260,-6.003185,9.157372,5.680493,-1.117232,4.181434,8.283980,-8.160321,8.068832,-9.804516,3.536812,9.817282,-1.088937,-8.100780,-6.853757,-9.823440,0.389491,-3.006081,-5.122383,-4.725087,-0.237447,2.813727,-4.913372,-9.093568,-6.530113,0.379435,2.304301,0.315145,-4.816007,5.697201,-2.877980,9.893269,7.086257,-3.136216,-7.297031,-8.833231,-5.617980,-5.133356,3.706754,8.934038,6.812850,5.410595,3.930238,-6.946809,-9.064509,-5.700698,3.469573,0.280115,9.335552,-5.883701,-2.230933,0.168065,-3.630718,-0.180204,-0.673170,-0.990884,-1.089497,9.276751,-8.348701,7.668618,8.069964,4.639305,-4.250429,6.414890,-1.264484,4.063164,-6.274638,-8.577018,-1.624023,0.539118,-8.509116,-0.188898,5.314509,-8.576595,0.624106,8.390889,5.224928,5.766621,2.672141,5.670440,-9.299220,-3.470422,8.295303,9.682975,3.550432,0.461868,-6.548283,-6.435338,1.880063,-9.713933,5.931668,8.184049,-9.316486,-4.908782,-6.279032,-1.116213,-8.450318,3.214065,0.815016,2.602564,5.633495,-7.815159,-8.741554,-8.054588], dtype = "float32")#candidate|1714|(1125,)|const|float32
call_1713 = func_312_call(relay.reshape(const_1714.astype('float32'), [15, 5, 15]))
call_1715 = func_312_call(relay.reshape(const_1714.astype('float32'), [15, 5, 15]))
func_1561_call = mod.get_global_var('func_1561')
func_1565_call = mutated_mod.get_global_var('func_1565')
var_1723 = relay.var("var_1723", dtype = "float64", shape = (315,))#candidate|1723|(315,)|var|float64
call_1722 = relay.TupleGetItem(func_1561_call(relay.reshape(var_1723.astype('float64'), [7, 3, 15]), relay.reshape(var_1723.astype('float64'), [7, 3, 15]), ), 0)
call_1724 = relay.TupleGetItem(func_1565_call(relay.reshape(var_1723.astype('float64'), [7, 3, 15]), relay.reshape(var_1723.astype('float64'), [7, 3, 15]), ), 0)
bop_1725 = relay.less(uop_1703.astype('bool'), relay.reshape(call_1693.astype('bool'), relay.shape_of(uop_1703))) # shape=(3, 1, 7)
bop_1728 = relay.less(uop_1705.astype('bool'), relay.reshape(call_1694.astype('bool'), relay.shape_of(uop_1705))) # shape=(3, 1, 7)
output = relay.Tuple([call_1713,const_1714,call_1722,var_1723,bop_1725,])
output2 = relay.Tuple([call_1715,const_1714,call_1724,var_1723,bop_1728,])
func_1731 = relay.Function([var_1723,], output)
mod['func_1731'] = func_1731
mod = relay.transform.InferType()(mod)
mutated_mod['func_1731'] = func_1731
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1732 = relay.var("var_1732", dtype = "float64", shape = (315,))#candidate|1732|(315,)|var|float64
func_1731_call = mutated_mod.get_global_var('func_1731')
call_1733 = func_1731_call(var_1732)
output = call_1733
func_1734 = relay.Function([var_1732], output)
mutated_mod['func_1734'] = func_1734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_995_call = mod.get_global_var('func_995')
func_997_call = mutated_mod.get_global_var('func_997')
call_1741 = func_995_call()
call_1742 = func_995_call()
func_834_call = mod.get_global_var('func_834')
func_840_call = mutated_mod.get_global_var('func_840')
const_1744 = relay.const([1.402868,8.776093,5.271363,-7.997033,1.175663,-7.919046,-4.863902,1.546809,7.205000,-8.948382,8.744851,-9.419347,-3.264948,6.395156,6.379707,-5.218711,-2.939191,-4.595434,5.662287,-4.974989,0.778050,-6.543824,2.733968,-8.744863,-4.393499,1.369747,9.647465,0.706068,4.824009,6.751784,-7.959299,8.988106,4.495784,-9.839347,-3.636261,3.947112,-0.028132,8.051052,-6.420671,-4.160582,-3.537595,-5.996906,-9.487879,-1.518893,-9.415433,-9.828068,8.526061,9.401475,7.897220,9.497325,-4.699466,0.731091,1.548268,-1.864286,-5.836602,-1.511838,-8.197527,-4.798466,-5.828120,0.216052,-9.246788,8.292017,5.285950,4.740068,-8.638114,8.043533,5.902894,1.160314,0.989002,-5.702786,7.950219,7.393039,0.080649,-3.020971,-4.771399,-7.619260,2.086123,-9.491841,-3.140184,-9.869214,-7.570357,-1.324729,-8.082208,-4.893077,3.725853,-1.279200,1.816235,8.403318,1.485565,-5.407536,0.118543,6.372208,-7.468393,8.788334,2.512704,-8.713145,8.108381,7.577444,-8.276666,-3.081283,8.041786,-1.542493,-4.128872,7.814861,7.647289,8.587255,6.196984,-1.964241,-5.531642,-4.197154,1.116867,0.240178,5.722035,-0.682443,9.648990,-8.876530,0.279029,1.273265,-8.165436,-1.570879,4.705245,-6.201749,-2.375222,-6.746202,-5.394058,-5.283045,1.477815,8.339189,-3.375141,5.581181,-6.559385,-9.262742,-8.830338,4.499430,5.607355,5.292670,9.385271,6.579275,-8.755453,-8.946133,-2.495778,-3.211461,-6.589977,5.278071], dtype = "float64")#candidate|1744|(144,)|const|float64
const_1745 = relay.const([[10,9,-9,-10],[7,5,8,-8],[-4,-10,-8,1],[-1,7,-9,-10],[-6,-6,3,-4],[-7,-2,-4,3],[-9,9,9,-1],[3,4,-3,-2],[3,-8,3,7],[-2,8,1,-3],[4,8,-2,-8],[9,8,6,4],[9,6,-5,-5],[-3,-2,4,-7],[-7,-6,3,3],[-5,5,2,-9],[-3,-4,-9,5],[2,6,-3,6],[5,-9,5,-2],[3,-10,-9,8],[5,2,3,-5],[7,2,-6,3],[10,2,4,-4],[1,1,-6,-6],[1,6,-9,10],[4,-9,-10,-2],[2,4,9,-2],[1,-4,4,-9],[-10,-10,5,5],[2,8,6,-10],[7,6,-1,6],[-4,10,-10,3],[-1,-9,5,-6],[9,6,-7,4],[2,7,8,5],[6,8,-4,6],[-5,2,10,-6],[-1,2,1,-1],[6,6,3,-6],[7,-5,-8,-6],[7,-3,-5,3],[3,3,1,-9],[-2,-1,-4,-6],[-2,2,1,2],[-4,-4,-6,-7],[2,5,4,10],[-6,-2,9,-3],[-8,-2,-3,-8],[1,-7,7,-8],[-4,2,-8,3],[-3,-6,3,-5],[6,-10,4,-5],[-8,-4,6,5],[4,7,8,-5],[5,7,-3,-6],[2,8,-2,10],[7,6,-5,-3],[-8,2,2,-9],[1,4,-10,4],[6,5,7,9],[-9,-7,-8,5],[3,-2,-5,2],[8,-3,-6,-10],[1,10,3,3],[-6,8,3,10],[1,2,4,3],[10,10,-4,-6],[-8,-6,10,2],[-10,-10,4,-10],[1,-10,-6,8],[-2,9,1,-5],[-6,9,-8,1],[-3,-2,10,-1],[-6,9,7,-7],[8,-5,3,-9],[10,-4,10,8],[-6,-10,2,9],[-6,9,8,2],[-2,-6,-8,-6],[4,7,-5,7],[5,8,-1,-5],[-7,-10,-10,10],[1,9,-10,8],[-4,10,-9,-1],[-6,-4,-5,-6],[5,7,8,9],[3,9,-4,-9],[-1,10,-8,6],[9,3,-1,6],[4,-3,-1,4],[-4,-9,-9,9],[-9,-3,9,1],[1,1,10,2],[-3,8,9,7],[-2,-2,-7,4],[9,3,9,7],[7,-4,7,2],[-2,3,-10,-5],[-1,7,7,5],[9,5,3,7],[-9,-8,-8,-8],[1,-2,-6,-5],[-3,4,-2,-5],[7,8,-1,10],[8,10,-8,-8],[2,8,-6,-6],[5,-8,-8,-7],[-2,-7,-10,3],[-4,-7,1,-1],[-7,2,4,-2],[-7,6,-3,2],[-8,6,-7,7],[4,-6,-1,-10],[6,2,10,-8],[6,2,-7,-5],[-7,-4,-2,6],[6,4,8,6],[6,5,3,2],[-9,9,3,10],[4,4,4,-5],[3,8,3,-7],[-1,6,-8,-3],[5,3,-3,9],[9,-5,-5,-3],[-10,-2,-4,-2],[5,-9,6,-2],[-4,-10,1,6],[5,3,4,10],[7,-6,5,8],[-4,3,-10,3],[-1,1,-4,-2],[-2,1,-8,-9],[7,8,3,-1],[2,9,10,-6],[-4,-5,-7,1],[9,-3,-5,6],[10,-5,9,-10],[-2,4,10,5],[8,4,6,-5],[7,3,-2,7],[2,-5,-8,3],[3,-1,9,8],[-7,-5,10,-7]], dtype = "int8")#candidate|1745|(143, 4)|const|int8
const_1746 = relay.const([[9.581456,2.885136,2.860345,4.840957,4.729271,-8.535459,8.051486,-7.140780,1.152761,-4.765879,6.282720,3.748399,-9.967416,3.167312,0.363263,7.482401,6.687101,-6.094604,0.845909,9.019851,-9.921985]], dtype = "float64")#candidate|1746|(1, 21)|const|float64
call_1743 = relay.TupleGetItem(func_834_call(relay.reshape(const_1744.astype('float64'), [8, 3, 6]), relay.reshape(const_1745.astype('int8'), [572,]), relay.reshape(const_1746.astype('float64'), [21, 1]), relay.reshape(call_1741.astype('bool'), [7, 4, 3]), ), 2)
call_1747 = relay.TupleGetItem(func_840_call(relay.reshape(const_1744.astype('float64'), [8, 3, 6]), relay.reshape(const_1745.astype('int8'), [572,]), relay.reshape(const_1746.astype('float64'), [21, 1]), relay.reshape(call_1741.astype('bool'), [7, 4, 3]), ), 2)
output = relay.Tuple([call_1741,call_1743,const_1744,const_1745,const_1746,])
output2 = relay.Tuple([call_1742,call_1747,const_1744,const_1745,const_1746,])
func_1748 = relay.Function([], output)
mod['func_1748'] = func_1748
mod = relay.transform.InferType()(mod)
output = func_1748()
func_1749 = relay.Function([], output)
mutated_mod['func_1749'] = func_1749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_895_call = mod.get_global_var('func_895')
func_896_call = mutated_mod.get_global_var('func_896')
call_1761 = relay.TupleGetItem(func_895_call(), 0)
call_1762 = relay.TupleGetItem(func_896_call(), 0)
output = call_1761
output2 = call_1762
func_1790 = relay.Function([], output)
mod['func_1790'] = func_1790
mod = relay.transform.InferType()(mod)
output = func_1790()
func_1791 = relay.Function([], output)
mutated_mod['func_1791'] = func_1791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1434_call = mod.get_global_var('func_1434')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_1794 = relay.TupleGetItem(func_1434_call(), 2)
call_1795 = relay.TupleGetItem(func_1435_call(), 2)
func_379_call = mod.get_global_var('func_379')
func_382_call = mutated_mod.get_global_var('func_382')
call_1805 = relay.TupleGetItem(func_379_call(relay.reshape(call_1794.astype('int8'), [13, 4, 11])), 0)
call_1806 = relay.TupleGetItem(func_382_call(relay.reshape(call_1794.astype('int8'), [13, 4, 11])), 0)
func_1580_call = mod.get_global_var('func_1580')
func_1582_call = mutated_mod.get_global_var('func_1582')
call_1815 = relay.TupleGetItem(func_1580_call(), 0)
call_1816 = relay.TupleGetItem(func_1582_call(), 0)
uop_1825 = relay.sinh(call_1794.astype('float32')) # shape=(572,)
uop_1827 = relay.sinh(call_1795.astype('float32')) # shape=(572,)
func_1243_call = mod.get_global_var('func_1243')
func_1246_call = mutated_mod.get_global_var('func_1246')
var_1829 = relay.var("var_1829", dtype = "bool", shape = ())#candidate|1829|()|var|bool
var_1830 = relay.var("var_1830", dtype = "bool", shape = (512,))#candidate|1830|(512,)|var|bool
call_1828 = relay.TupleGetItem(func_1243_call(relay.reshape(var_1829.astype('bool'), []), relay.reshape(var_1830.astype('bool'), [4, 16, 8]), ), 0)
call_1831 = relay.TupleGetItem(func_1246_call(relay.reshape(var_1829.astype('bool'), []), relay.reshape(var_1830.astype('bool'), [4, 16, 8]), ), 0)
bop_1843 = relay.floor_divide(uop_1825.astype('float64'), var_1829.astype('float64')) # shape=(572,)
bop_1846 = relay.floor_divide(uop_1827.astype('float64'), var_1829.astype('float64')) # shape=(572,)
func_1519_call = mod.get_global_var('func_1519')
func_1520_call = mutated_mod.get_global_var('func_1520')
call_1847 = relay.TupleGetItem(func_1519_call(), 0)
call_1848 = relay.TupleGetItem(func_1520_call(), 0)
func_1677_call = mod.get_global_var('func_1677')
func_1680_call = mutated_mod.get_global_var('func_1680')
const_1850 = relay.const([-4.786655,6.286746,-9.159593,-6.176708,-2.484476,-8.122199,9.526913,-1.244162,9.359372,-9.910772,2.640724,2.641807,1.818099,0.101425,-8.339608,-4.173527,2.846793,-7.683955,-9.366859,-9.187207,-2.770712,9.373502,9.477983,7.095466,-0.538360,-6.868639,3.003191,-6.791309,-9.569663,-5.483488,8.924790,7.655116,-2.601798,-1.647238,-5.113950,3.906172,4.588167,-9.283855,-7.573742,-5.487326,0.343121,-8.891644,-1.773675,-7.040175,-3.267637,0.174913,2.205947,-6.455228,-1.505014,-3.127585,1.638340,2.839878,-8.276759,0.903735,2.894302,-3.881247,-1.825147,-7.166116,7.433187,3.496637,3.330872,0.931911,5.786791,-8.286272,-5.893026,-4.603245,-3.408322,6.126571,1.740101,5.558823,-4.715682,-9.352514,3.204286,9.646129,5.315635,-5.870536,2.966398,9.421439,-9.763232,-7.285860,3.632484,-4.198327,-6.688928,-3.461097,9.613255,-9.428721,5.862479,-2.483559,0.447245,-4.363375,6.779547,6.868213,-9.206248,1.182946,-5.493278,-1.260182,9.254097,8.332054,-4.161491,3.682307,-4.239676,4.101723,-0.972002,-3.025462,4.500372,-6.222998,2.418653,9.068226,9.564610,-1.322559,-9.979015,8.207595,-4.467913,4.188981,-6.876010,-0.612483,-8.958982,8.221526,8.363637,0.626327,-3.079075,5.027374,9.679253,3.439837,-7.674361,1.649802,-7.281998,-7.329408,9.064181,9.229003,-9.178618,-9.497410,6.372571,-4.698668,1.446703,9.043309,1.524856,-7.751576,4.896436,4.050650,6.859244,-3.407350,5.384523,-1.638311,-3.574833,7.343976,0.967437,-3.111146,4.663140,-2.272269,-6.013422,-4.237009,-7.762415,-1.348686,-7.915166,8.582021,-2.719816,-1.539253,-8.515291,1.818860,-4.936887,-1.331649,-4.612965,3.459645,8.524484,1.550297,4.301535,5.164720,-9.630514,-4.875939,-3.237556,-4.798137,2.928628,-3.907728,-9.942752,2.940510,-6.979363,-8.690660,-3.561977,-6.095644,2.936691,5.839408,0.230137,7.767473,-9.304449,2.444948,3.325591,-6.808651,-8.221189,7.674206,-9.973458,2.689620,-2.663891,1.588164,1.024010,-2.304655,6.620971,-5.164729,-0.498732,-9.948232,7.271216,4.953992,-4.375878,8.233834,8.614854,0.268511,3.114130,-6.089242,-8.108029,-7.282244,-3.290047,0.845536,-5.168037,-1.783356,8.162714,-2.417079,-3.926519,7.404499,9.293768,8.015534,0.476703,-5.075619,-9.589308,-3.766046,-9.803478,-5.410029,5.343654,2.077815,7.930527,4.472734,-6.981587,4.784417,3.352111,0.884207,-5.499287,3.074824,6.434012,-7.965066,7.852853,9.582381,-1.692772,-4.305930,9.070402,3.242324,3.349396,0.831777,-9.187942,8.555457,7.361676,-4.264747,7.454135,-3.260826,3.023453,-2.878908,3.414546,0.610449,-3.694787,-9.561900,5.216865,-5.495328,-9.015581,-9.047555,3.886493,-6.384248,3.425104,-2.438480,6.345327,2.074485,1.387995,8.073241,4.903682,-7.248315,-6.500039,2.864248,3.336411,-3.907521,4.710471,-1.014533,-9.758125,-2.660629,-2.212035,5.527219,3.722577,-9.852111,-5.469533,2.966207,-0.014478,5.648974,-0.370831,-8.824795,4.104542,0.566404,-9.050937,0.343869,0.678140,-6.840937,-4.276520,4.091806,-5.020018,-7.437960,4.968396,7.641236,-3.338929,-9.082320,6.380120,-4.751000,6.711140,-4.598829,6.342549,2.619500,6.498258,-8.713600,0.089110,3.461975,-3.236659,-6.561926,7.146092,5.224285,3.463491,7.093091,4.120925,9.093013,1.212524,-0.416385,0.890050], dtype = "float32")#candidate|1850|(325,)|const|float32
call_1849 = relay.TupleGetItem(func_1677_call(relay.reshape(const_1850.astype('float32'), [13, 5, 5])), 0)
call_1851 = relay.TupleGetItem(func_1680_call(relay.reshape(const_1850.astype('float32'), [13, 5, 5])), 0)
func_1344_call = mod.get_global_var('func_1344')
func_1347_call = mutated_mod.get_global_var('func_1347')
const_1861 = relay.const([0.489233,3.916679,-5.598677,6.754279,-0.391206,-3.833053,2.769786,8.536821,-0.019316,3.797730,5.094703,-6.494101,6.429054,8.047552,0.677890,-7.892786,-9.367672,3.167435,5.089688,8.488716,-3.174403,-4.240998,2.292491,-1.293683,-1.149227,-8.397706,-9.130550,-7.458296,2.024083,-0.414092,5.436400,8.850562,7.252232,-0.010400,8.877964,-9.373109,3.826674,8.954430,-7.854068,-1.936062,3.973322,-3.820640,-0.884159,-3.998830,7.900075,-9.710789,1.398949,-2.137218,-4.353140,5.002851,-5.165479,-5.997541,0.952467,9.535758,8.891868,-1.306827,-4.325770,-5.373519,0.937262,-2.635837,-7.181724,3.729755,-9.569359,-1.991202,4.167610,-2.752226,4.604417,1.734521,-2.400850,2.992580,2.758237,-9.548565,-9.543279,-9.302002,0.519115,-3.681340,4.188773,4.811741,4.591393,-2.042162,-9.426105,3.158690,8.308998,-1.513215], dtype = "float32")#candidate|1861|(84,)|const|float32
call_1860 = relay.TupleGetItem(func_1344_call(relay.reshape(const_1861.astype('float32'), [3, 4, 7])), 2)
call_1862 = relay.TupleGetItem(func_1347_call(relay.reshape(const_1861.astype('float32'), [3, 4, 7])), 2)
var_1871 = relay.var("var_1871", dtype = "float64", shape = (572,))#candidate|1871|(572,)|var|float64
bop_1872 = relay.floor_mod(bop_1843.astype('float64'), relay.reshape(var_1871.astype('float64'), relay.shape_of(bop_1843))) # shape=(572,)
bop_1875 = relay.floor_mod(bop_1846.astype('float64'), relay.reshape(var_1871.astype('float64'), relay.shape_of(bop_1846))) # shape=(572,)
output = relay.Tuple([call_1805,call_1815,call_1828,var_1830,call_1847,call_1849,const_1850,call_1860,const_1861,bop_1872,])
output2 = relay.Tuple([call_1806,call_1816,call_1831,var_1830,call_1848,call_1851,const_1850,call_1862,const_1861,bop_1875,])
func_1876 = relay.Function([var_1829,var_1830,var_1871,], output)
mod['func_1876'] = func_1876
mod = relay.transform.InferType()(mod)
mutated_mod['func_1876'] = func_1876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1876_call = mutated_mod.get_global_var('func_1876')
var_1878 = relay.var("var_1878", dtype = "bool", shape = ())#candidate|1878|()|var|bool
var_1879 = relay.var("var_1879", dtype = "bool", shape = (512,))#candidate|1879|(512,)|var|bool
var_1880 = relay.var("var_1880", dtype = "float64", shape = (572,))#candidate|1880|(572,)|var|float64
call_1877 = func_1876_call(var_1878,var_1879,var_1880,)
output = call_1877
func_1881 = relay.Function([var_1878,var_1879,var_1880,], output)
mutated_mod['func_1881'] = func_1881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1182_call = mod.get_global_var('func_1182')
func_1183_call = mutated_mod.get_global_var('func_1183')
call_1930 = relay.TupleGetItem(func_1182_call(), 0)
call_1931 = relay.TupleGetItem(func_1183_call(), 0)
func_254_call = mod.get_global_var('func_254')
func_260_call = mutated_mod.get_global_var('func_260')
var_1938 = relay.var("var_1938", dtype = "float64", shape = (1, 315))#candidate|1938|(1, 315)|var|float64
const_1939 = relay.const([6.549829,-1.839669,-3.875061,0.287904,6.193647,-4.356357,8.737072,-2.399636,9.654264,-7.706334,8.388706,-6.254140,-5.058959,6.377832,-4.829355,7.400119,6.149672,-6.440455,-8.661811,-7.139899,-5.214548,8.588261,-9.149950,4.896341,-2.256070,5.802576,-4.558981,6.609418,7.768506,-9.760780,5.452037,8.971869,4.838492,3.741439,3.616258,7.911313,-6.936152,3.904898,-4.785158,3.018275,-1.250535,-1.747219,-2.462900,-7.511878,-7.958831,7.605600,-1.016395,7.641393,-0.020772,-6.357460,-0.165346,6.121083,-3.589766,1.244556,7.530003,-3.954317,5.521332,-6.052856,-7.865894,9.447713,7.876309,2.565092,0.893078,7.770636,9.811651,-6.192571,-1.217711,-8.410883,-4.954408,4.020065,-3.659008,-8.440671,2.413400,8.205466,6.499718,-1.361329,1.425677,-7.249130,-9.867392,2.871900,6.437780,6.409082,9.162620,9.792105], dtype = "float64")#candidate|1939|(84,)|const|float64
const_1940 = relay.const([-5.600784,9.226739,5.956925,2.004452,3.627626,-8.290463,4.621242,-4.629918,-2.297049,2.244775,6.874285,6.865085,3.061577,-5.450214,-2.978266,-2.448752,4.558364,-9.771797,4.280714,0.058246,5.705479,0.702632,3.094781,9.298201,2.487502,0.320609,5.348240,-1.501543,7.280124,-3.856943,7.385791,-3.194868,-6.199194,2.665230,6.011360,9.627359,-8.363465,0.269674,-5.068104,-4.907653,-0.270864,-5.634169,-1.772074,-8.239163,2.080639,6.767165,5.445624,-0.354204,-8.372172,8.098012,-3.442771,8.751818,-3.181424,-0.305428,3.829433,-1.890811,8.950285,7.925064,8.952622,3.693363,-4.709933,9.176295,4.995507,-6.838565,-3.595236,8.886455,-6.905621,8.709587,6.763012,1.649504,-9.190331,-4.588441,-3.532544,-1.788581,2.867542,-0.097736,-8.176915,-8.801548,8.522781,-2.631416,-0.313178,8.654925,-8.479846,2.019315,-1.210527,-2.219598,5.248720,-5.633159,-6.399793,3.684046,5.099056,-5.887842,-6.727640,4.220273,0.162890,2.955850,9.685830,-0.844767,4.602328,2.618052,-3.390200,3.340122,0.610487,1.330714,-3.822593,3.605295,-0.632538,5.320734,-0.715557,3.115229,-2.787583,-6.806539,7.790065,8.355237,-6.271864,-7.044767,-1.020693,-4.526586,-0.474963,-3.491051,5.091115,-9.262934,4.738686,-0.796085,-5.001424,2.241344,-9.817366,-2.513067,-8.649288,-1.697082,-5.783794,9.631232,-1.184368,-6.430208,6.170590,7.161165,1.601256,-4.078840,-3.594147,-6.839146,-4.675467,4.357213,8.208260,-9.701837,-3.729521,2.378939,-3.121363,4.853365,-5.924749,2.594521,-1.981942,-0.548809,-3.456229,-6.216368,9.065989,5.148736,-3.580327,-7.521656,-5.583749,5.658275,-2.695186,8.840955,5.938136,2.885683,8.399001,4.459746,-6.016931,0.123498,1.200792,7.702638,-6.656768,-3.618327,5.511615,6.288759,-9.895844,-4.645900,7.853065,9.739802,9.755445,-9.475947,3.236408,-7.091971,-9.779750,-7.523805,-2.368786,-1.105400,-8.362491,2.720951,-5.343118,7.666285,-2.663982,9.847929,6.115515,-9.831281,8.795638,5.906438,9.010782,-5.738066,3.557800,5.118753,-1.660625,2.385398,-7.703085,6.487641,7.672921,4.621816,-5.876309,6.863366,2.893361,-9.794006,-9.601596,6.678731,-6.923210,0.647645,-4.244563,5.182696,3.578112,9.186722,4.691224,-3.140885,4.596346,-5.927694,-5.508459,-4.268331,-4.323396,-8.597092,-1.308492,-6.001403,-9.105103,0.225385,-4.199375,4.664343,5.113715,9.922897,0.222167,6.450848,-8.236467,7.781739,5.797363,-6.284486,-3.252122,-4.639834,8.823609,7.079889,2.436215,-6.422841,9.977116,8.510569,5.478828,-5.306591,-3.497313,9.932901,2.844161,6.477828,-0.282784,-3.445793,-8.661485,-2.610671,0.799270,5.148335,-2.758599,-3.278993,-0.502684,-4.992084,9.114958,-7.341295,-4.278618,-7.408306,-8.637423,-9.385503,3.393059,-3.305010,4.326650,1.423428,-3.994553,8.453174,8.398059,2.391454,6.186078,5.286845,-0.012690,-4.857247,5.011204,-6.709281,-5.455538,9.907759,-9.806324,-3.622491,-7.043802,-3.565825,-2.227871,1.246560,-3.330605,3.730997,-5.253293,-7.344809,5.811051,5.650607,2.509463,-3.689165,-4.051903,0.958091,1.992374,-4.842943,-7.626929,3.128740,8.013818,-7.295130,5.512814,0.058198,-9.358136,-8.657608,9.730167,-9.244616,7.670108,-9.583356,-8.695939,-6.908206,4.171290,7.643903,-8.735115,4.978265,8.487997,5.127253,3.528636,-7.515949,-2.364446,3.619849,-1.780271,-7.757144,6.467134,2.663070,-9.555648,3.636510,6.020022,8.126778,4.479227,3.634819,-8.039626,5.993609,2.791861,9.358213,-5.522541,6.070415,4.485145,5.226878,0.329729,-1.375710,-2.188008,1.552157,4.228205,1.315288,1.757079,7.471411,8.202453,-0.293404,0.091653,-3.885261,-8.577495,-4.762516,9.782439,-4.394134,7.179935,7.484150,6.098254,5.983994,4.748805,0.815937,5.663432,6.868594,-0.084855,6.735581,2.590644,1.147158,-9.885797,5.766419,5.050646,-0.149286,6.414749,5.864076,-4.496261,5.525269,4.688569,7.681472,5.480075,-0.442644,-9.383952,2.394819,1.947961,0.329391,7.851666,-2.786108,3.176835,8.111244,-1.541618,4.544038,2.584527,-1.043402,2.942001,0.727001,-2.977896,-6.235260,0.006412,0.834062,2.177218,-9.522685,6.525321,1.242150,5.998322,7.423459,6.293263,9.128915,3.564433,-5.793501,1.052967,-4.216100,6.617722,-7.070921,-2.366394,8.848259,-0.443801,-3.042304,-7.383259,-2.770454,-6.632708,8.843529,-1.748208,-0.509535,3.147146,9.451109,-8.469714,-8.547597,-8.917843,1.563019,-6.487997,-8.350114,-4.033983,3.063390,9.146832,8.669010,8.538595,3.605603,2.657748,-1.898221,-5.899474,9.719403,0.828848,-5.116076,-3.992357,-9.154773,9.523219,6.575341,-3.251696,-6.035105,5.812601,1.453209,6.385472,-3.239342,0.184810,4.407730,-6.934638,-0.798807,-4.321605,-5.537689,-1.566762,-8.777534,5.812745,-3.630672,-9.581951,9.664255,-4.209370,-2.935413,-8.320985,-7.441275,9.403739,7.721750,-6.109367,1.968078,7.814530,0.810210,3.356700,4.852108,8.365039,-9.270750,-5.380812,1.201138,-0.719147,-7.461297,0.760875,-1.633201,-0.392848,-4.861288,-4.391954,-7.911462,8.487787,5.827822,5.963301,-6.476056,-2.818625,-1.937926,-3.259568,5.804083,9.768681,3.649029,-5.291658,-0.456164,-6.163602,7.887176,-2.225265,-1.700222,6.818752,-4.475094,-4.554361,-9.983402,6.377713,8.772283,-4.028572,0.220085,5.652330,-7.847539,-4.271858,-2.904335,-6.920164,4.434364,8.525109,-7.847388,-5.839282,8.440698,0.566541,5.244162,-7.839987,9.039052,-0.526458,7.748758,2.058225,7.774545,-2.063949,-1.171540,-4.101219,9.990500,4.671020,-9.281442,5.558456,-3.345303,3.369862,1.554714,3.955551,2.331052,3.151037,6.863068,-1.361572,3.687370,-4.383216,9.730822,6.566214,1.638426,5.303511,-5.083388,3.534249,9.497614,9.795858,6.223879,9.075274,-7.244091,1.802462,-2.708708,-0.143623,-1.592308,4.887711,1.207007,-3.842934,-1.312517,7.702351,-8.995274,3.044219,2.662265,8.997668,5.128593,6.356693,1.770913,4.650650,6.569997,5.322524,7.564315,5.414088,-5.626575,6.562561,4.595354,9.068543,0.917270,-8.606231,4.590190,5.090832,-2.026067,-5.196797,0.445700,4.341632,-1.116386,-3.798716,-2.119269,-7.525631,-8.574876,3.204951,-1.840774,9.008916,2.887713,9.206862,5.226185,-0.791729,5.820580,-5.041406,-1.945998,6.971204,-7.975525,-4.133396,-7.381769,1.797417,-4.883031,-6.677793,-5.257466,8.295106,2.039855,-1.755156,8.265652,5.180967,-1.582672,-0.993988,9.957001,8.842171,6.111485,-8.818088,-0.766823,-8.370809,-8.673096,-5.868084,1.714862,9.912780,-5.117972,0.511267,-7.090815,-3.549429,-7.506443,0.586166,6.557098,-7.052635,5.846060,-5.410256,-8.235115,-0.106019,4.015000,7.954590,-8.795210,-8.749454,6.203472,4.743411,-6.267751,-8.492836,-2.288088,-1.609060,-5.512871,-6.091731,-3.386989,3.788354,-0.122882,7.399478,-7.233096,-5.818253,1.080453,2.671001,-4.919847,-3.303341,6.399298,-6.004526,2.091953,9.627127,1.263523,8.062074,-0.593852,-3.373374,-1.325019,-6.212393,3.634312,-5.201503,9.899211,0.595222,-1.994652,-7.925786,-1.865061,6.550373,-3.115595,6.033809,-5.620034,7.807938,3.283673,3.808166,7.559250,6.798215,-0.568993,-9.247675,1.403249,-6.071986,8.537824,3.573440,0.863939,6.567537,7.688401,4.863895,3.751010,-4.864967,-8.715957,4.287740,-3.545879,-7.503641,-4.458518,-6.769161,-7.111835,0.979366,-6.397101,7.692652,7.893465,6.609249,2.221512,-6.490755,3.267713,-2.728045,6.148073,9.687957,-0.425766,-9.422098,-8.241990,-5.775473,7.117531,8.851638,4.262546,4.972014,7.710371,4.340352,0.011672,-5.379915,0.509903,6.108951,-5.764398,-6.795790,-5.268659,8.010248,9.681688,-7.723994,3.101281,-9.610935,-6.325792,4.152948,-5.456764,3.754201,-4.014231,-4.470399,-1.154622,-2.974445,2.880107,0.542698,-4.206017,-7.198704,-1.648439,-0.061861,-0.427082,-9.414866,2.647915,5.534746,3.639280,6.595894,-6.696780,0.936535,4.579617,6.052426,-8.948037,7.564459,4.200466,-9.695223,-6.773620,8.152405,-8.314188,5.469657,3.396239,5.790929,3.848869,-2.452544,0.580332,-6.595365,-1.490661,9.079897,-2.480075,1.203764,-6.548869,-0.426700,-1.720517,-3.639100,9.783937,-8.623295,-8.781621,0.140102,3.491356,6.040317,5.938946,7.501769,4.727081,-0.956330,3.221405,0.282681,-1.627136,-6.759502,9.192354,6.757743,2.931826,0.813079,4.232324,1.377604,-5.400427,1.351500,5.818019,4.977936,0.614865,-3.136382,4.752877,0.222238,1.043373,0.763425,-0.781315,-6.361138,-0.542588,2.530083,-1.893906,-2.101144,3.052129,3.856319,2.590175,4.856711,-6.871323,9.816771,4.212434,9.532286,3.921897], dtype = "float64")#candidate|1940|(840,)|const|float64
call_1937 = relay.TupleGetItem(func_254_call(relay.reshape(call_1930.astype('float64'), [7, 1, 3]), relay.reshape(var_1938.astype('float64'), [7, 15, 3]), relay.reshape(const_1939.astype('float64'), [7, 4, 3]), relay.reshape(const_1940.astype('float64'), [840,]), ), 1)
call_1941 = relay.TupleGetItem(func_260_call(relay.reshape(call_1930.astype('float64'), [7, 1, 3]), relay.reshape(var_1938.astype('float64'), [7, 15, 3]), relay.reshape(const_1939.astype('float64'), [7, 4, 3]), relay.reshape(const_1940.astype('float64'), [840,]), ), 1)
output = relay.Tuple([call_1930,call_1937,var_1938,const_1939,const_1940,])
output2 = relay.Tuple([call_1931,call_1941,var_1938,const_1939,const_1940,])
func_1950 = relay.Function([var_1938,], output)
mod['func_1950'] = func_1950
mod = relay.transform.InferType()(mod)
var_1951 = relay.var("var_1951", dtype = "float64", shape = (1, 315))#candidate|1951|(1, 315)|var|float64
output = func_1950(var_1951)
func_1952 = relay.Function([var_1951], output)
mutated_mod['func_1952'] = func_1952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_895_call = mod.get_global_var('func_895')
func_896_call = mutated_mod.get_global_var('func_896')
call_2027 = relay.TupleGetItem(func_895_call(), 0)
call_2028 = relay.TupleGetItem(func_896_call(), 0)
func_1475_call = mod.get_global_var('func_1475')
func_1476_call = mutated_mod.get_global_var('func_1476')
call_2031 = relay.TupleGetItem(func_1475_call(), 0)
call_2032 = relay.TupleGetItem(func_1476_call(), 0)
func_1132_call = mod.get_global_var('func_1132')
func_1135_call = mutated_mod.get_global_var('func_1135')
const_2044 = relay.const(-5, dtype = "int16")#candidate|2044|()|const|int16
const_2045 = relay.const([9,-5,2,-2,-8,2,-6,-2,7,-7,1,-1,-6,-2,-3,6,7,-2,5,-10,9,-8,-10,-1,2,-1,3,-9,-4,-2,1,10,-1,7,-10,-7,-10,4,-7,-8,-5,3,5,-9,-2,6,8,1,10,-5,6,9,-7,5,-10,-5,4,-2,-10,7,-3,7,-1,-3,8,-1,-8,-2,5,-10,-2,9,3,-6,4,6,6,-9,2,10,-7,-6,-3,-3,8,1,-10,-8,2,5,5,3,5,-8,3,-6,-1,7,-1,-10,4,8,4,7,8,-3,-5,6,-8,8,-4,-4,-9,9,-3,-10,2,1,4,3,-1,-6,-3,-10,-1,-4,5,10,-1,5,-9,9,2,9,-9,7,1,10,-10,-6,-1,5,-8,-3,3,-1,2,4,-3,10,-9,3,2,5,8,-2,2,6,-2,9,6,10,1,1,-8,5,10,7,-3,-6,4,9,-5,5,3,-3,-3,6,6,5,8,3,-8,-10,3,-2,-3,-2,-6,-4,-1,8,1,-6,-3,2,3,-1,-8,-1,-6,9,-6,8,9,10,2,-4,6,-1,-4,-2,10,7,-4,-10,-3,-10,3,-10,-1,-4,2,5,9,7,-8,-10,10,-8,-6,-5,-9,-10,4,-7,-10,-9,9,10,-1,-3,6,9,1,-10,-8,-9,-1,-1,7,-1,7,1,5,5,-10,7,4,-4,5,-3,1,10,-1,7,7,6,10,-3,3,-3,8,1,-7,-6,-8,-5,-1,1,6,-9,-5,-8,-6,-2,-10,-2,-6,-10,-7,-5,-7,4,-7,-1,2,-7,-7,-4,5,2,2,4,6,-10,2,7,-8,-9,-7,-8,-10,-8,10,-2,9,-2,7,-10,2,3,7,-3,-3,2,1,-9,-4,10,10,-3,-5,1,-3,-4,-10,8,8,-4,4,-1,5,7,-10,5,10,-10,-5,6,9,-4,6,-6,-5,-5,6,3,-9,-1,9,10,6,-4,-10,-8,10,-10,5,-1,8,-9,-6,-6,-5,6,2,3,6,10,8,7,-9,-2,-4,-5,1,-7,-6,-3,-9,-5,7,-1,-3,-8,-9,9,-3,4,-6,-10,-1,-5,9,8,-9,8,-10,10,10,-4,-5,8,-6,5,-1,10,-3,1,-6,-9,1,-2,8,4,-10,-8,-3,-4,1,2,6,4,-8,-1,-3,1,8,4,-5,-6,7,1,2,-1,-5,-3,-5,-8,1,7,-10,7,-2,-5,-9,4,-7,-8,-10,-2,-1,4,3,1,3,-9,6,2,8,9,-2,-5,-7,8,3,-2,6,-2,-2,-2,-1,-10,6,9,1,3,-8,-4,3,-2,-3,-1,-2,5,-6,-9,-7,-3,2,9,7,-9,-10,2,5,10,-10,-5,5,-8,-7,5,-5,9,2,1,9,6,2,-5,-4,7,7,10,-3,3,5,-6,-8,-10,-2,-10,2,2,-6,3,5,5,1,4,-4,-6,4,-1,-4,3,-3,-6,-10,1,9,-5,-5,6,8,1,-8,-10,6,7,2,7,4,10,-4,-10,-6,-9,7,-6,7,4,-4,-8,-8,10,6,5,3,-3,-6,-1,-8,-3,6,-8,7,-8,8,1,2,6,-1,5,-6,-10,-1,-7,1,-2,9,2,3,7,8,7,-9,8,-2,3,-3,-2,-4,-3,-1,2,6,8,-5,-3,2,5,-1,-3,-7,-2,-9,-7,3,8,7,-4,7,2,-6,7,5,1,-6,-10,3,5,6,7,-2,-5,-8,-1,10,6,-10,-6,-4,10,3,5,10,10,-4,7,-3,-6,-1,7,-10,-9,-6,5,4,-2,-5,-5,-8,3,3,9,-2,8,-10,7,7,-2,3,-7,-7,3,7,-9,2,-9,1,2,1,-7,4,2,-9,8,-6,-6,5,4,-9,9,4,6,-3,9,8,-6,-7,8,5,-8,1,5,-5,-8,-2,6,4,-1,10,-1,-5,5,-5,10,10,-2,-1,-9,-8,1,-3,-5,-8,-3,8,1,3,5,-10,10,2,3,1,-2,-8,-8,-1,-7,3,1,6,-5,9,-6,5,-9,10,-2,3,-9,-6,-1,1,-8,-9,-6,-9,3,2,-7,5,-4,9,5,10,2,-2,5,-4,-10,9,10,-8,8,-4,7,-4,-4,8,6,5,6,-4,5,-1,10,2,10,7,-1,4,10,-10,-2,8,-6,7,-2,-2,-6,1,-5,-10,-4,4,5,3,7,-4,2,8,-4,-2,3,-3,-9,6,7,8,2,7,3,5,-3,-10,10,5,-2,-10,10,-3,-6,-2,5,-6,-3,6,-3,7,-9,-3,6,1,-4,10,-4,3,-4,-5,-7,7,4,-8,-4,2,-4,2,-2,6,6,10,-1,-10,-9,7,5,-8,9,3,2,7,-2,-6,4,10,9,7,-4,6,-1,-3,-9,5,-8,-9,6,8,7,-10,-3,-8,-10,-2,-4,-2,-3,1,-6,10,-5,-6,-7,6,-8,4,9,-6,8,5,-8,7,2,5,-6,-3,4,-3,4,4,8,-5,-9,-5,-1,-1,7,-2,9,6,2,8,9,-6,1,-8,9,3,6,-7,8,6,7,4,-7,1,10,-5,9,5,-5,-8,-6,-2,-8,-7,-8,-10,3,1,6,1,-1,6,-2,-1,-2,1,7,10,4,-2,2,-9,7,7,4,-9,6,9,6,5,7,8,9,1,-5,8,-6,2,-1,-7,7,-1,1,1,8,-5,-9,-2,1,2,6,-1,10,-6,-2,-3,-6,4,-4,7,10,-8,-7,9,-4,3,-4,-4,10,3,-10,-3,-3,-8,-1,-9,-6,-3,-9,-10,3,5,-8,10,-7,-1,1,7,-10,-9,9,5,-6,8,-9,8,-2,1,-10,-1,6,-7,-4,9,1,-7,7,-6,10,-10,-4,3,3], dtype = "int16")#candidate|2045|(1080,)|const|int16
call_2043 = func_1132_call(relay.reshape(const_2044.astype('int16'), []), relay.reshape(const_2045.astype('int16'), [8, 9, 15]), )
call_2046 = func_1132_call(relay.reshape(const_2044.astype('int16'), []), relay.reshape(const_2045.astype('int16'), [8, 9, 15]), )
uop_2054 = relay.log10(call_2027.astype('float32')) # shape=(3, 1, 7)
uop_2056 = relay.log10(call_2028.astype('float32')) # shape=(3, 1, 7)
var_2057 = relay.var("var_2057", dtype = "int16", shape = (8, 9, 15))#candidate|2057|(8, 9, 15)|var|int16
bop_2058 = relay.bitwise_and(call_2043.astype('int32'), relay.reshape(var_2057.astype('int32'), relay.shape_of(call_2043))) # shape=(8, 9, 15)
bop_2061 = relay.bitwise_and(call_2046.astype('int32'), relay.reshape(var_2057.astype('int32'), relay.shape_of(call_2046))) # shape=(8, 9, 15)
output = relay.Tuple([call_2031,const_2044,const_2045,uop_2054,bop_2058,])
output2 = relay.Tuple([call_2032,const_2044,const_2045,uop_2056,bop_2061,])
func_2065 = relay.Function([var_2057,], output)
mod['func_2065'] = func_2065
mod = relay.transform.InferType()(mod)
mutated_mod['func_2065'] = func_2065
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2066 = relay.var("var_2066", dtype = "int16", shape = (8, 9, 15))#candidate|2066|(8, 9, 15)|var|int16
func_2065_call = mutated_mod.get_global_var('func_2065')
call_2067 = func_2065_call(var_2066)
output = call_2067
func_2068 = relay.Function([var_2066], output)
mutated_mod['func_2068'] = func_2068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1434_call = mod.get_global_var('func_1434')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_2143 = relay.TupleGetItem(func_1434_call(), 2)
call_2144 = relay.TupleGetItem(func_1435_call(), 2)
uop_2145 = relay.sigmoid(call_2143.astype('float32')) # shape=(572,)
uop_2147 = relay.sigmoid(call_2144.astype('float32')) # shape=(572,)
output = relay.Tuple([uop_2145,])
output2 = relay.Tuple([uop_2147,])
func_2159 = relay.Function([], output)
mod['func_2159'] = func_2159
mod = relay.transform.InferType()(mod)
mutated_mod['func_2159'] = func_2159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2159_call = mutated_mod.get_global_var('func_2159')
call_2160 = func_2159_call()
output = call_2160
func_2161 = relay.Function([], output)
mutated_mod['func_2161'] = func_2161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_925_call = mod.get_global_var('func_925')
func_926_call = mutated_mod.get_global_var('func_926')
call_2162 = func_925_call()
call_2163 = func_925_call()
func_2159_call = mod.get_global_var('func_2159')
func_2161_call = mutated_mod.get_global_var('func_2161')
call_2192 = relay.TupleGetItem(func_2159_call(), 0)
call_2193 = relay.TupleGetItem(func_2161_call(), 0)
func_1580_call = mod.get_global_var('func_1580')
func_1582_call = mutated_mod.get_global_var('func_1582')
call_2196 = relay.TupleGetItem(func_1580_call(), 0)
call_2197 = relay.TupleGetItem(func_1582_call(), 0)
uop_2201 = relay.exp(call_2162.astype('float32')) # shape=(3, 1, 7)
uop_2203 = relay.exp(call_2163.astype('float32')) # shape=(3, 1, 7)
func_1519_call = mod.get_global_var('func_1519')
func_1520_call = mutated_mod.get_global_var('func_1520')
call_2215 = relay.TupleGetItem(func_1519_call(), 0)
call_2216 = relay.TupleGetItem(func_1520_call(), 0)
uop_2227 = relay.sigmoid(uop_2201.astype('float32')) # shape=(3, 1, 7)
uop_2229 = relay.sigmoid(uop_2203.astype('float32')) # shape=(3, 1, 7)
output = relay.Tuple([call_2192,call_2196,call_2215,uop_2227,])
output2 = relay.Tuple([call_2193,call_2197,call_2216,uop_2229,])
func_2234 = relay.Function([], output)
mod['func_2234'] = func_2234
mod = relay.transform.InferType()(mod)
mutated_mod['func_2234'] = func_2234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2234_call = mutated_mod.get_global_var('func_2234')
call_2235 = func_2234_call()
output = call_2235
func_2236 = relay.Function([], output)
mutated_mod['func_2236'] = func_2236
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2255 = relay.var("var_2255", dtype = "uint16", shape = (8, 4, 3))#candidate|2255|(8, 4, 3)|var|uint16
var_2256 = relay.var("var_2256", dtype = "uint16", shape = (8, 4, 3))#candidate|2256|(8, 4, 3)|var|uint16
bop_2257 = relay.minimum(var_2255.astype('uint16'), relay.reshape(var_2256.astype('uint16'), relay.shape_of(var_2255))) # shape=(8, 4, 3)
output = bop_2257
output2 = bop_2257
func_2260 = relay.Function([var_2255,var_2256,], output)
mod['func_2260'] = func_2260
mod = relay.transform.InferType()(mod)
mutated_mod['func_2260'] = func_2260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2260_call = mutated_mod.get_global_var('func_2260')
var_2262 = relay.var("var_2262", dtype = "uint16", shape = (8, 4, 3))#candidate|2262|(8, 4, 3)|var|uint16
var_2263 = relay.var("var_2263", dtype = "uint16", shape = (8, 4, 3))#candidate|2263|(8, 4, 3)|var|uint16
call_2261 = func_2260_call(var_2262,var_2263,)
output = call_2261
func_2264 = relay.Function([var_2262,var_2263,], output)
mutated_mod['func_2264'] = func_2264
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2292 = relay.var("var_2292", dtype = "uint8", shape = (1, 7, 13))#candidate|2292|(1, 7, 13)|var|uint8
const_2293 = relay.const([[[-6,6,2,8,-4,-6,7,6,-8,-10,-4,-7,1],[10,10,-1,-10,8,6,6,8,4,3,-1,-2,-1],[1,7,-3,3,-4,-2,1,8,6,9,5,1,-5],[10,5,-6,-9,-10,9,-8,8,-9,9,-8,1,-1],[3,8,-6,7,-10,-8,5,3,-1,-1,2,10,7],[-6,-7,7,-3,-10,-3,-10,2,-4,-6,-5,10,8],[5,-1,7,-3,6,-6,6,10,3,-4,8,3,5]],[[-4,1,-4,1,-9,5,-3,-1,-2,5,6,-1,-4],[-8,-6,-5,5,4,2,-7,4,-4,-4,5,4,7],[-9,-10,-1,2,-1,-8,2,-8,-5,-7,8,5,-8],[8,-2,4,7,-8,4,4,4,-2,5,-3,6,9],[-1,5,-7,-3,-10,-4,-1,-3,-10,-8,10,3,3],[-6,-7,-2,3,10,-10,1,-10,-5,7,5,7,-4],[-5,-4,4,-7,9,1,-7,-2,-4,7,7,-4,-1]],[[2,4,7,-6,10,-5,10,8,-3,-2,4,-9,-9],[-2,-1,-4,1,10,9,-10,-5,-8,8,8,-1,-8],[8,5,-4,-2,9,9,-6,-7,4,-4,2,-7,5],[4,8,2,-7,-5,5,-5,5,-2,2,4,9,-8],[9,3,-3,-2,7,8,5,7,1,2,-6,7,-6],[-6,10,-5,-9,2,5,2,-2,-8,-4,-6,-6,2],[-5,-10,1,-3,9,-9,8,10,-9,-5,-5,-7,9]],[[7,-2,-9,-10,-7,8,2,-9,6,4,9,2,-4],[1,7,5,-7,-5,-5,9,5,-3,5,-8,7,8],[-3,4,-7,-9,4,2,-2,-2,-1,-10,-6,-1,-2],[1,1,7,-2,-1,5,5,5,-3,-4,7,-3,2],[-9,2,2,-5,5,-8,5,5,-1,-9,8,5,-4],[9,-1,-1,-4,4,-8,-8,2,-1,-7,-5,9,-5],[6,10,4,1,10,6,5,-9,-10,8,-5,9,5]],[[10,-7,-2,-9,-5,2,8,8,-6,-7,-5,-4,-1],[4,-10,-5,5,-5,7,7,-7,-7,-3,-3,7,-3],[-9,9,-3,1,2,-4,-9,3,-3,9,-1,8,-3],[-2,3,7,2,3,9,-9,-1,7,3,8,-2,7],[5,-7,8,-1,5,-2,-3,2,-8,-10,-5,-9,-1],[-6,3,-6,1,-9,3,10,7,4,-7,-10,9,-4],[-1,3,-1,4,-4,-6,-2,-4,4,-2,5,1,-4]],[[7,-2,-8,-5,6,-1,3,9,-10,2,-5,-7,-9],[4,-2,-10,-2,9,9,4,-3,-4,-10,-4,5,4],[4,8,2,3,10,3,10,-1,-8,-4,10,5,-2],[-2,-9,-6,10,6,6,7,5,-8,-2,3,6,10],[5,9,8,-2,-10,10,2,1,7,6,8,6,4],[1,-7,7,-10,-9,10,3,-2,9,9,4,9,-8],[5,-8,-5,1,2,8,-6,10,10,3,6,-8,3]],[[-3,-5,9,8,8,-6,7,-7,-2,2,7,5,6],[4,-8,-9,9,-3,3,-4,5,8,-10,9,-5,3],[-4,4,10,5,4,3,9,10,7,1,-5,-8,-3],[6,9,-2,8,5,5,-7,6,-4,6,-5,9,-9],[-6,-1,5,6,7,-6,-7,2,-1,-3,-9,-1,3],[1,3,-8,8,-7,7,6,-3,-10,1,2,-10,-8],[4,-7,-7,-8,-2,-9,-6,-5,10,-8,4,-5,9]],[[-9,-4,10,-8,2,-7,6,-7,-10,-3,-7,-6,8],[-2,-5,10,-1,-2,-2,-8,-6,7,4,10,6,-1],[-6,7,-7,7,-1,7,-1,1,-9,-10,-5,8,-10],[5,2,8,-3,4,-5,3,9,-7,10,6,8,6],[-2,7,5,-5,-10,-8,9,4,-4,9,8,4,4],[7,5,-9,10,-8,-8,3,-5,10,5,-7,2,2],[1,-7,-7,1,8,10,4,4,-10,-9,-9,10,-4]],[[3,-4,3,1,2,-4,2,3,-1,-10,8,-3,-7],[-7,-6,-6,4,-4,-5,6,-4,10,-4,2,9,-2],[3,5,8,9,-10,3,-4,2,-3,-7,-1,-5,-10],[-10,-10,-8,-8,3,3,-9,6,9,-8,-9,1,8],[-5,-7,-9,-5,-9,-1,6,-2,7,-5,3,5,7],[10,10,-10,-10,-1,3,-9,-1,-9,4,9,3,6],[-8,-7,5,-2,5,1,6,8,9,2,-8,8,-4]],[[-5,1,-5,4,-5,-9,-5,9,-4,9,-6,9,-10],[-3,-1,5,6,-7,2,-2,10,4,-10,3,-9,5],[-3,-5,3,1,-5,-2,-10,-3,-2,-1,-10,10,-9],[-3,-5,6,-7,3,9,6,10,-6,-6,-5,7,1],[-1,7,-1,-10,1,8,-5,9,-3,-7,-10,-3,3],[5,4,-7,-4,-6,-7,3,10,-7,2,-10,-9,-10],[-1,7,1,-6,-5,-3,-9,6,-5,5,10,-10,-8]],[[-9,-9,-5,-2,-6,4,9,7,8,10,2,-3,-9],[-9,-7,-1,-3,3,-1,-2,-9,9,6,9,1,-8],[-5,4,-5,-6,1,1,8,-3,1,7,4,6,-1],[-3,-6,-9,-3,-4,-5,5,8,9,-9,8,-10,8],[1,3,2,-8,9,9,10,2,-6,1,-2,3,-5],[-1,-5,8,-4,-10,6,-5,5,7,-9,-3,8,10],[-6,-1,-5,-7,-1,6,5,4,-6,-6,-2,6,-2]],[[8,-5,-9,-5,-2,-3,9,-4,-1,-3,-10,-1,9],[7,-9,-6,-10,9,-2,2,-3,4,8,10,-7,-2],[1,-3,-1,6,1,8,5,-3,-2,-2,9,-8,6],[-6,-1,1,-4,-10,5,6,10,-9,1,-1,-6,-7],[-10,10,3,10,6,5,6,-6,3,-8,8,-5,9],[2,-8,-10,4,-4,-8,2,-8,6,2,6,6,6],[3,-2,9,8,1,-6,8,3,-6,9,-9,9,-7]]], dtype = "uint8")#candidate|2293|(12, 7, 13)|const|uint8
bop_2294 = relay.bitwise_and(var_2292.astype('uint8'), const_2293.astype('uint8')) # shape=(12, 7, 13)
func_2159_call = mod.get_global_var('func_2159')
func_2161_call = mutated_mod.get_global_var('func_2161')
call_2308 = relay.TupleGetItem(func_2159_call(), 0)
call_2309 = relay.TupleGetItem(func_2161_call(), 0)
uop_2327 = relay.rsqrt(var_2292.astype('float64')) # shape=(1, 7, 13)
output = relay.Tuple([bop_2294,call_2308,uop_2327,])
output2 = relay.Tuple([bop_2294,call_2309,uop_2327,])
func_2332 = relay.Function([var_2292,], output)
mod['func_2332'] = func_2332
mod = relay.transform.InferType()(mod)
mutated_mod['func_2332'] = func_2332
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2333 = relay.var("var_2333", dtype = "uint8", shape = (1, 7, 13))#candidate|2333|(1, 7, 13)|var|uint8
func_2332_call = mutated_mod.get_global_var('func_2332')
call_2334 = func_2332_call(var_2333)
output = call_2334
func_2335 = relay.Function([var_2333], output)
mutated_mod['func_2335'] = func_2335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1475_call = mod.get_global_var('func_1475')
func_1476_call = mutated_mod.get_global_var('func_1476')
call_2346 = relay.TupleGetItem(func_1475_call(), 0)
call_2347 = relay.TupleGetItem(func_1476_call(), 0)
output = relay.Tuple([call_2346,])
output2 = relay.Tuple([call_2347,])
func_2354 = relay.Function([], output)
mod['func_2354'] = func_2354
mod = relay.transform.InferType()(mod)
output = func_2354()
func_2355 = relay.Function([], output)
mutated_mod['func_2355'] = func_2355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1047_call = mod.get_global_var('func_1047')
func_1049_call = mutated_mod.get_global_var('func_1049')
call_2369 = relay.TupleGetItem(func_1047_call(), 0)
call_2370 = relay.TupleGetItem(func_1049_call(), 0)
output = call_2369
output2 = call_2370
func_2371 = relay.Function([], output)
mod['func_2371'] = func_2371
mod = relay.transform.InferType()(mod)
mutated_mod['func_2371'] = func_2371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2371_call = mutated_mod.get_global_var('func_2371')
call_2372 = func_2371_call()
output = call_2372
func_2373 = relay.Function([], output)
mutated_mod['func_2373'] = func_2373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1748_call = mod.get_global_var('func_1748')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_2386 = relay.TupleGetItem(func_1748_call(), 4)
call_2387 = relay.TupleGetItem(func_1749_call(), 4)
var_2388 = relay.var("var_2388", dtype = "float64", shape = (2, 21))#candidate|2388|(2, 21)|var|float64
bop_2389 = relay.bitwise_xor(call_2386.astype('uint16'), var_2388.astype('uint16')) # shape=(2, 21)
bop_2392 = relay.bitwise_xor(call_2387.astype('uint16'), var_2388.astype('uint16')) # shape=(2, 21)
output = relay.Tuple([bop_2389,])
output2 = relay.Tuple([bop_2392,])
func_2394 = relay.Function([var_2388,], output)
mod['func_2394'] = func_2394
mod = relay.transform.InferType()(mod)
var_2395 = relay.var("var_2395", dtype = "float64", shape = (2, 21))#candidate|2395|(2, 21)|var|float64
output = func_2394(var_2395)
func_2396 = relay.Function([var_2395], output)
mutated_mod['func_2396'] = func_2396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1182_call = mod.get_global_var('func_1182')
func_1183_call = mutated_mod.get_global_var('func_1183')
call_2404 = relay.TupleGetItem(func_1182_call(), 0)
call_2405 = relay.TupleGetItem(func_1183_call(), 0)
output = relay.Tuple([call_2404,])
output2 = relay.Tuple([call_2405,])
func_2409 = relay.Function([], output)
mod['func_2409'] = func_2409
mod = relay.transform.InferType()(mod)
mutated_mod['func_2409'] = func_2409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2409_call = mutated_mod.get_global_var('func_2409')
call_2410 = func_2409_call()
output = call_2410
func_2411 = relay.Function([], output)
mutated_mod['func_2411'] = func_2411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2371_call = mod.get_global_var('func_2371')
func_2373_call = mutated_mod.get_global_var('func_2373')
call_2451 = func_2371_call()
call_2452 = func_2371_call()
output = relay.Tuple([call_2451,])
output2 = relay.Tuple([call_2452,])
func_2457 = relay.Function([], output)
mod['func_2457'] = func_2457
mod = relay.transform.InferType()(mod)
mutated_mod['func_2457'] = func_2457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2457_call = mutated_mod.get_global_var('func_2457')
call_2458 = func_2457_call()
output = call_2458
func_2459 = relay.Function([], output)
mutated_mod['func_2459'] = func_2459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2409_call = mod.get_global_var('func_2409')
func_2411_call = mutated_mod.get_global_var('func_2411')
call_2460 = relay.TupleGetItem(func_2409_call(), 0)
call_2461 = relay.TupleGetItem(func_2411_call(), 0)
var_2463 = relay.var("var_2463", dtype = "int8", shape = (3, 15, 7))#candidate|2463|(3, 15, 7)|var|int8
bop_2464 = relay.maximum(call_2460.astype('uint16'), var_2463.astype('uint16')) # shape=(3, 15, 7)
bop_2467 = relay.maximum(call_2461.astype('uint16'), var_2463.astype('uint16')) # shape=(3, 15, 7)
output = bop_2464
output2 = bop_2467
func_2477 = relay.Function([var_2463,], output)
mod['func_2477'] = func_2477
mod = relay.transform.InferType()(mod)
mutated_mod['func_2477'] = func_2477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2478 = relay.var("var_2478", dtype = "int8", shape = (3, 15, 7))#candidate|2478|(3, 15, 7)|var|int8
func_2477_call = mutated_mod.get_global_var('func_2477')
call_2479 = func_2477_call(var_2478)
output = call_2479
func_2480 = relay.Function([var_2478], output)
mutated_mod['func_2480'] = func_2480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2159_call = mod.get_global_var('func_2159')
func_2161_call = mutated_mod.get_global_var('func_2161')
call_2545 = relay.TupleGetItem(func_2159_call(), 0)
call_2546 = relay.TupleGetItem(func_2161_call(), 0)
func_995_call = mod.get_global_var('func_995')
func_997_call = mutated_mod.get_global_var('func_997')
call_2550 = func_995_call()
call_2551 = func_995_call()
func_1876_call = mod.get_global_var('func_1876')
func_1881_call = mutated_mod.get_global_var('func_1881')
var_2553 = relay.var("var_2553", dtype = "bool", shape = ())#candidate|2553|()|var|bool
const_2554 = relay.const([[True,True,True,True,True,True,True,False,True,True,True,False,True,False,False,True,False,True,False,True,False,False,False,True,True,False,True,False,False,False,True,True],[True,False,False,True,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,True,False,False,False,False,False,True,False,True,True,True,False,True],[True,True,False,True,False,True,True,True,False,False,True,False,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,False,True,True],[True,True,False,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,False,True,True,False,True,False,True],[False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,False,True,False,True,True,True,False,False,False,False,True,True],[False,False,False,False,False,True,True,True,True,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,True],[False,False,True,False,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,True,False,True,False,True,True,True,True],[False,False,False,True,False,True,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,False,False,True,True,False,False,True,False],[False,True,True,False,False,True,False,False,False,True,False,False,True,False,False,True,False,False,False,False,False,True,True,False,True,False,False,True,False,True,True,False],[False,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False],[True,False,False,True,False,True,False,False,True,True,True,True,False,False,True,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,True,False],[False,True,False,False,True,False,True,False,True,False,True,True,False,False,False,True,False,True,True,False,True,False,True,False,True,True,True,True,True,False,True,True],[True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,False,False,False,True,False,True,True,True,False,False,True,False,False,False],[True,False,True,True,True,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,True,False,True,False,True,True,True,False,True,True,True,True],[True,False,False,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,True,False,False,False,True,True,True,False,False],[True,False,False,False,False,False,True,True,True,False,True,False,True,False,False,False,False,True,True,False,False,False,True,False,False,True,True,True,False,False,True,True]], dtype = "bool")#candidate|2554|(16, 32)|const|bool
call_2552 = relay.TupleGetItem(func_1876_call(relay.reshape(var_2553.astype('bool'), []), relay.reshape(const_2554.astype('bool'), [512,]), relay.reshape(call_2545.astype('float64'), [572,]), ), 9)
call_2555 = relay.TupleGetItem(func_1881_call(relay.reshape(var_2553.astype('bool'), []), relay.reshape(const_2554.astype('bool'), [512,]), relay.reshape(call_2545.astype('float64'), [572,]), ), 9)
func_834_call = mod.get_global_var('func_834')
func_840_call = mutated_mod.get_global_var('func_840')
const_2562 = relay.const([[-9.181646,5.450075],[-2.958694,-7.482024],[-0.426177,-4.678284],[2.079435,7.107383],[-3.216181,-3.955585],[-2.488354,5.780043],[5.850919,-4.052905],[2.799079,-8.774909],[-1.447975,3.481203],[8.162847,3.029900],[5.418276,9.605176],[0.452082,0.368372],[-3.225600,4.593371],[-2.631270,-5.731716],[-9.748407,9.379485],[-4.562146,5.363001],[-8.556546,-7.077009],[-6.971119,4.742325],[4.023590,-2.898325],[0.570469,-5.522737],[7.682522,-4.505668],[-1.751707,-8.775783],[7.204239,-9.372137],[1.313097,-8.327653],[1.698151,-3.166288],[-6.585173,6.698329],[-7.209461,-7.987670],[-9.748391,4.269193],[-6.547470,3.047968],[5.778036,9.692333],[7.912997,-5.280370],[-5.608932,-4.693851],[3.195283,2.540261],[-5.947030,2.298990],[6.918052,-5.698852],[2.682211,2.121694],[3.616270,-9.678770],[-6.846953,3.727504],[-6.947450,4.597746],[-1.962457,-3.357571],[-8.512230,7.382948],[-8.902102,3.354899],[-9.291362,4.362731],[8.561990,-9.355748],[3.341680,1.738170],[-4.962835,-1.951137],[3.752773,7.417103],[2.584051,3.373599],[-1.033360,5.090906],[-5.884718,-4.804133],[-5.313495,-3.482637],[-1.595222,7.510516],[7.206068,-3.822434],[6.863987,-6.875160],[-1.255766,4.187566],[4.905264,7.476860],[1.976125,8.798319],[0.353527,9.453297],[5.976531,8.101766],[-1.506900,-9.880793],[-4.388815,6.006720],[7.816109,-8.903132],[-0.055293,4.859105],[-7.489609,4.470644],[6.196500,9.224054],[-2.832649,6.956323],[-8.845809,1.471907],[8.023661,7.667154],[-4.457929,1.742135],[-0.514871,4.971842],[6.322793,2.607792],[6.180863,-9.259329]], dtype = "float64")#candidate|2562|(72, 2)|const|float64
const_2563 = relay.const([[-4.328099,0.421843,-1.609533],[2.402454,9.797920,-5.276043],[-2.838643,-6.706742,8.600910],[7.511434,-3.371719,8.966380],[-6.560840,5.443219,6.356377],[0.716692,-5.320205,4.222041],[1.437339,1.899940,-1.974868]], dtype = "float64")#candidate|2563|(7, 3)|const|float64
call_2561 = relay.TupleGetItem(func_834_call(relay.reshape(const_2562.astype('float64'), [8, 3, 6]), relay.reshape(call_2545.astype('int8'), [572,]), relay.reshape(const_2563.astype('float64'), [21, 1]), relay.reshape(call_2550.astype('bool'), [7, 4, 3]), ), 8)
call_2564 = relay.TupleGetItem(func_840_call(relay.reshape(const_2562.astype('float64'), [8, 3, 6]), relay.reshape(call_2545.astype('int8'), [572,]), relay.reshape(const_2563.astype('float64'), [21, 1]), relay.reshape(call_2550.astype('bool'), [7, 4, 3]), ), 8)
bop_2590 = relay.divide(call_2552.astype('float64'), var_2553.astype('float64')) # shape=(572,)
bop_2593 = relay.divide(call_2555.astype('float64'), var_2553.astype('float64')) # shape=(572,)
bop_2596 = relay.greater_equal(call_2552.astype('bool'), relay.reshape(bop_2590.astype('bool'), relay.shape_of(call_2552))) # shape=(572,)
bop_2599 = relay.greater_equal(call_2555.astype('bool'), relay.reshape(bop_2593.astype('bool'), relay.shape_of(call_2555))) # shape=(572,)
func_312_call = mod.get_global_var('func_312')
func_314_call = mutated_mod.get_global_var('func_314')
const_2607 = relay.const([[8.195099,-3.549088,7.524270,-4.428041,-9.489071,7.855630,1.688384,-5.870319,9.307750,4.893100,-9.583572,-3.644353,-6.501725,-2.259340,-1.375919,-6.154272,4.100122,2.712454,-1.744956,5.757693,8.820132,0.102314,7.531356,-8.406410,7.375281,8.707009,6.349292,4.898038,8.330679,-5.656820,6.046853,-6.133660,4.721848,4.378865,4.438837,-8.917185,-2.936378,-4.579491,-3.929142,-4.911171,-0.073969,6.906255,-2.814010,8.066111,-6.696341,8.901695,3.307495,-9.504041,-0.097425,-2.572115,6.696709,-2.084637,6.649466,1.987461,9.120369,2.544507,-9.000675,2.980820,8.540909,-1.079072,-2.113308,5.697431,4.154006,-5.064219,5.647755,-3.416896,6.609811,-2.020771,8.027090,-0.345769,-6.320450,-6.438665,-3.309948,2.207376,-0.470263],[8.252408,2.657045,-9.483432,8.064732,-0.445215,-3.599245,8.412922,2.966069,-4.632622,3.262925,3.632457,-3.533700,-6.104784,1.300292,-3.129356,-1.279110,-0.013527,-8.367805,-6.883910,1.123826,-1.255976,6.124534,-7.289426,-4.471382,6.351942,7.536308,4.779113,-4.164009,3.518452,4.923932,-6.482563,0.227249,3.050309,0.386589,5.461320,8.954366,-6.477060,0.322605,4.639869,8.467442,-9.589018,-9.559799,-0.915522,9.184265,-1.955110,2.517500,-4.023884,-2.163812,-2.486011,-0.360592,-9.993773,-2.818484,-2.893341,7.711550,4.285647,1.504294,-3.196800,8.063416,-5.484341,-1.239857,2.815725,1.189310,-1.995865,7.370457,-6.061134,9.038247,7.268136,6.685402,6.249121,-4.867683,-8.079551,-2.222777,7.304215,8.289616,4.616749],[-8.099300,-7.558338,-4.260742,4.591252,5.448521,4.790350,5.901298,-2.523161,8.499931,9.214289,-8.433372,2.818337,-7.266625,-5.187478,-8.161347,4.734826,-0.379013,6.798765,5.434807,1.690853,-0.701921,9.005891,2.411182,-6.348661,6.080664,-5.893203,7.018414,7.884808,-5.207409,-0.202546,2.082138,-2.797498,0.411308,-4.636869,-1.419182,1.454495,4.571118,-7.004305,2.914621,0.084806,2.105733,-5.242924,1.850818,-1.116598,-0.255034,-8.486436,9.831340,2.127909,-8.093977,4.099488,0.295641,4.802942,6.937764,-6.548332,7.089556,5.450257,2.443027,6.762605,3.620974,4.931307,-4.255614,6.732666,-3.152698,-8.700956,0.586815,9.357919,9.299598,4.693692,7.648634,4.511972,3.520157,0.552511,-0.225731,8.290082,-8.602027],[5.561749,-5.685940,-5.644007,-0.874350,-1.326677,-7.745658,-2.025495,-5.180330,-9.840628,7.080881,-9.469889,9.785482,-6.902242,7.674042,4.699798,-4.557876,-4.098033,-9.073446,7.835578,-5.784531,-1.487647,7.856476,-0.384451,-9.584277,7.051381,-4.364509,-4.244207,9.026458,3.102830,-6.551251,7.531067,-3.274413,8.422310,-6.155303,5.966708,-4.232823,-1.251498,-4.750452,-1.454692,9.149187,0.545703,7.896710,3.952829,-5.682551,8.732815,-7.604700,9.820918,3.946759,9.119485,7.623068,-1.919258,-0.629566,0.592163,9.922073,8.099787,-1.239255,-3.034584,-0.400623,-3.766979,-6.374901,0.473415,-3.538935,9.342989,5.363661,-1.180719,6.174413,5.293407,4.858429,3.320928,-3.331836,9.078495,6.739213,-2.505172,-7.059109,-0.157725],[8.162557,2.053859,-1.966320,2.116395,3.294825,-9.732653,-6.729011,-3.844475,-6.993292,-8.412376,-0.208315,6.805704,4.156858,4.508707,0.629666,-2.195001,6.150482,-4.275837,6.131414,9.109113,7.309427,4.967011,8.974493,8.732358,1.270638,-1.704633,-6.922876,1.507006,-3.899133,9.685475,-2.189259,-2.885336,3.036877,1.142566,-5.959305,2.726417,-7.360808,4.552448,-0.036373,-8.286291,-0.160622,0.260160,-4.202839,-3.787121,6.616985,-8.030881,0.309020,2.165555,-8.052860,3.554508,0.557915,-0.355590,-4.686579,-2.113425,5.422733,-0.617481,1.203673,-0.010837,5.747371,-2.370616,-0.442528,-3.615007,5.820467,-0.017508,6.263291,-8.850020,-5.858879,-2.518158,-1.389481,0.550814,2.608201,5.394824,3.506100,0.313880,-2.260740],[5.421209,-0.627335,9.832374,1.322875,5.839604,1.671494,4.132840,6.177476,-5.755271,-8.695031,8.948402,-8.701145,6.258781,-3.294001,-4.161850,-5.884649,0.718556,7.565932,0.854225,-2.502283,9.520270,-9.234100,3.284363,9.199606,-2.713216,9.710962,8.743624,-1.766457,5.860694,8.544329,-1.105109,6.164787,4.910166,-6.914194,1.502752,4.090686,-0.078528,0.549817,6.205248,-3.011142,3.275598,6.626630,3.911923,2.790940,-7.165708,-5.021132,-1.722507,-0.887971,-1.450947,-8.478227,2.972137,0.236791,-9.258049,1.344236,3.080836,7.840515,1.639204,0.440331,-9.001364,9.234758,-3.503485,0.498985,1.978430,-9.562681,-5.673103,0.911839,-6.446965,-9.097374,-2.552167,1.601740,3.064100,-0.444436,6.977522,3.954291,-2.996048],[7.734072,-9.396776,3.145244,-9.582679,7.551046,0.434325,7.353886,3.564629,-9.778173,7.641662,0.612003,-5.253359,-9.920838,-2.822316,9.106078,-5.119590,9.533032,-0.224624,2.063342,-2.604606,1.335631,8.061549,0.587209,-9.985419,-7.563670,6.284529,-4.847660,9.754403,-3.522691,-0.279390,-0.796589,-1.189023,5.485805,5.606310,3.620058,-9.185596,7.122266,0.402884,-7.383275,-0.951618,-7.604806,3.734359,6.130661,5.855901,-3.334407,1.970424,-3.415593,-6.679896,-4.070341,-9.552225,4.503955,0.410338,3.187766,7.681282,-1.114303,-0.546323,-9.566664,-0.971506,9.959542,2.898331,6.133433,-7.725532,-6.890293,-4.166390,-7.421001,-7.218706,0.739178,-8.974048,4.814480,-7.689516,7.800579,-8.645048,-5.760340,1.214881,-3.770699],[7.709848,-0.284278,5.092385,-6.125359,6.128931,1.230511,-5.566964,7.765711,2.106411,4.395492,3.247969,-1.458394,-8.770800,-8.530805,-3.150830,-5.330597,-7.512173,-2.645745,3.915197,9.138164,1.503169,-3.082744,5.721264,1.271068,-8.906605,7.735876,2.991751,5.676661,-8.529484,-5.901853,-8.687555,2.416467,1.090827,5.472695,-8.690036,7.768808,2.558626,-4.352641,-0.407373,0.804557,-3.843679,-7.557356,-8.762807,9.875447,4.509663,-6.000123,-1.086542,-5.885171,3.634104,-1.134061,0.762694,6.268446,9.834550,2.370981,8.190694,8.574094,4.058719,-3.104564,3.732706,9.196918,5.605433,0.165486,7.422209,2.796228,2.181462,-7.857628,2.898705,8.327678,5.358715,-6.987487,2.442108,-0.656385,5.013519,-6.111325,-8.926549],[5.699409,6.037491,1.540463,9.945319,7.552208,-7.805667,6.047627,-7.358240,9.339389,1.807194,-5.463759,4.421557,-6.364672,4.781978,5.336521,-1.625798,7.074525,6.679699,-6.642912,8.123162,4.742741,3.685594,-9.808300,6.422685,-8.202068,4.339928,9.426082,7.609957,-5.413358,1.100511,6.705469,-9.406533,5.138180,7.711271,-3.914081,-9.542591,9.119769,-0.420454,4.599596,7.147977,1.474515,-4.084408,9.083936,-4.398502,1.387662,9.462934,1.526642,3.814966,-9.813321,-4.886368,-2.530954,-7.917827,-2.148282,7.651619,1.906156,8.968925,9.489336,8.509493,-3.325325,-8.057316,5.724319,-5.310936,-2.217408,-8.864544,-9.702077,2.256362,9.643065,-4.601222,6.040072,7.489908,-1.380412,1.494088,-8.179402,-3.730478,-3.628116],[-7.752527,9.776916,-8.253089,5.523513,-4.733611,2.467866,-8.647819,8.088009,-0.148191,-3.940972,4.788522,6.539698,-8.285698,-9.317044,-9.284786,-7.954205,-5.153964,1.817745,6.486032,2.461769,-4.803437,6.798381,0.925557,-2.552242,5.733477,3.551708,8.029491,5.290470,3.042590,0.013435,-0.964142,-0.794063,3.339611,4.981225,-4.500608,-8.324824,5.662803,8.823494,-4.402554,5.100167,-3.057175,8.979579,5.861853,-1.270378,-7.049192,-7.422539,7.870659,3.055288,-2.138244,4.795433,-1.927745,0.097076,6.114434,-6.691281,-5.719779,-5.924245,7.018262,4.385980,-2.344952,1.748259,0.255193,-0.180411,-7.866943,1.262227,-4.684530,-7.137410,-8.838306,2.116113,-7.880204,4.524195,6.744392,-8.572189,5.037917,3.249528,3.985470],[-1.814163,-1.895098,3.704077,1.244636,5.024825,8.454405,-2.395504,8.512627,8.097620,5.767370,5.642092,-7.687667,3.955126,3.387321,-2.056350,4.017201,6.966408,9.549884,6.605984,8.478768,-5.538230,-0.548112,-0.130567,-7.053010,6.359978,-7.673536,-5.303402,-9.985878,9.347862,-9.483269,-6.167631,-2.401788,0.318902,-5.567899,-8.323007,2.280191,-1.933023,2.123407,-1.652590,4.907557,-6.639774,-4.452421,-0.551934,-0.142972,-7.227855,2.765124,8.850721,-8.224602,7.093620,4.785693,-9.595792,2.267972,-0.584492,5.717133,-6.961360,-5.660044,-8.737381,-1.322317,-4.427226,-1.530429,6.339215,1.849931,-0.365982,-5.002763,4.302173,3.708729,-5.301771,-8.992134,-9.679043,2.477230,-6.975633,0.778459,-2.767143,-0.169322,-8.011976],[9.214613,-3.554865,-1.357743,-2.304086,8.563453,-9.497356,9.093173,9.959943,8.240963,8.727208,-7.415300,2.653436,9.767871,1.286976,-5.251737,-4.421311,-5.652791,-9.779661,6.046175,5.849545,-9.938466,-9.739793,-0.983364,-8.881316,0.463356,0.508221,9.955025,0.897963,-5.537061,-4.543093,-5.517418,5.727879,-7.488275,-3.453255,-5.237971,-4.213338,9.048582,7.726834,-5.504146,-8.512682,2.828064,6.681642,-0.317744,8.540733,-8.352238,3.238945,5.235635,7.358746,-3.307492,7.680291,2.532792,-1.910461,-0.299735,-8.590409,3.703085,-4.408756,-1.566747,5.364596,-3.069706,-2.313470,3.584860,-5.068421,-2.221994,-2.263687,1.584241,1.301134,5.157895,9.802478,8.324475,-2.086330,-0.390028,-2.080345,-2.438637,3.047347,-9.796394],[2.964726,1.577596,-4.364352,9.682833,2.316835,6.727918,0.875721,-7.195104,-4.516420,9.027227,-7.554156,-0.804848,-1.449733,-2.010567,2.456511,9.812203,-1.814038,-1.936584,-9.930372,8.159691,-5.177741,4.613269,1.409801,4.815216,5.461800,-3.729776,-5.489052,-4.702324,-1.253800,8.319107,-5.978642,-6.985417,6.054722,6.702682,5.549013,2.071517,5.909125,2.696858,-9.654389,6.629991,0.350327,0.872378,-8.894411,3.380170,0.429379,-8.137723,3.905908,-4.336575,-7.558225,4.727468,9.355879,9.438157,6.340875,7.522809,2.363843,7.327608,2.309598,7.198642,7.132309,-5.631624,4.918599,-2.332429,0.779574,2.388010,-1.337493,8.542835,-3.353000,1.208736,-4.778083,5.519957,3.975707,-0.787138,-3.345779,-4.686682,-3.207854],[-0.671250,3.103828,2.808122,5.997826,-2.806687,6.771978,1.712840,7.010647,1.913842,-3.145690,5.919846,2.443391,-9.820218,6.530148,8.094116,8.842654,1.029352,-7.025588,3.338566,-0.742554,-0.957465,-7.636987,4.065946,-9.045766,2.412755,6.767183,-2.248311,-5.255636,-1.321791,5.275837,-3.725408,5.121179,5.545865,-2.992718,-7.572281,3.745144,-3.487056,-8.802595,9.816937,-8.304761,0.545295,7.748691,-7.449467,-0.686196,-0.709000,6.468594,-3.432293,-3.002869,-5.568565,4.939301,1.825132,8.618653,-7.818798,6.343316,-4.958543,-2.172976,-9.456184,9.415037,9.711638,5.110570,8.096181,-6.042044,-2.045422,-6.771559,0.713606,6.944326,-7.990657,-1.399248,-6.363068,-6.594851,0.189246,7.998195,-5.656474,8.769056,-7.785388],[4.361489,1.090542,-1.657255,0.815137,-5.654263,-0.561931,5.806215,6.339192,2.612939,-4.447892,-9.626986,-8.020128,8.922982,8.530034,-0.598019,0.243290,6.972702,-7.511823,-1.112681,-9.591201,-9.651447,-8.842280,6.454752,-5.296815,-4.373540,-6.798978,-9.897464,-9.005288,-7.762868,-0.014168,3.943844,-2.472671,-8.686069,-9.840735,-2.836645,-2.945786,2.735625,6.362441,-9.119937,2.327472,-7.939652,9.441736,-4.994186,-4.948647,0.881789,-5.015504,-4.517720,-4.700542,9.943068,-9.484560,0.298848,-8.038352,9.193288,-4.210094,6.551256,-7.403934,4.527915,3.079675,5.905195,-2.886575,-9.872338,-8.876172,-6.663972,-3.002835,1.296446,8.178794,5.388073,-7.806853,0.735126,-9.365752,-5.959834,-1.595859,-3.668850,-5.558100,4.655188]], dtype = "float32")#candidate|2607|(15, 75)|const|float32
call_2606 = func_312_call(relay.reshape(const_2607.astype('float32'), [15, 5, 15]))
call_2608 = func_312_call(relay.reshape(const_2607.astype('float32'), [15, 5, 15]))
func_1344_call = mod.get_global_var('func_1344')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_2611 = relay.TupleGetItem(func_1344_call(relay.reshape(call_2550.astype('float32'), [3, 4, 7])), 0)
call_2612 = relay.TupleGetItem(func_1347_call(relay.reshape(call_2550.astype('float32'), [3, 4, 7])), 0)
func_1132_call = mod.get_global_var('func_1132')
func_1135_call = mutated_mod.get_global_var('func_1135')
var_2615 = relay.var("var_2615", dtype = "int16", shape = (1080,))#candidate|2615|(1080,)|var|int16
call_2614 = func_1132_call(relay.reshape(var_2553.astype('int16'), []), relay.reshape(var_2615.astype('int16'), [8, 9, 15]), )
call_2616 = func_1132_call(relay.reshape(var_2553.astype('int16'), []), relay.reshape(var_2615.astype('int16'), [8, 9, 15]), )
output = relay.Tuple([call_2545,call_2550,const_2554,call_2561,const_2562,const_2563,bop_2596,call_2606,const_2607,call_2611,call_2614,var_2615,])
output2 = relay.Tuple([call_2546,call_2551,const_2554,call_2564,const_2562,const_2563,bop_2599,call_2608,const_2607,call_2612,call_2616,var_2615,])
func_2617 = relay.Function([var_2553,var_2615,], output)
mod['func_2617'] = func_2617
mod = relay.transform.InferType()(mod)
mutated_mod['func_2617'] = func_2617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2617_call = mutated_mod.get_global_var('func_2617')
var_2619 = relay.var("var_2619", dtype = "bool", shape = ())#candidate|2619|()|var|bool
var_2620 = relay.var("var_2620", dtype = "int16", shape = (1080,))#candidate|2620|(1080,)|var|int16
call_2618 = func_2617_call(var_2619,var_2620,)
output = call_2618
func_2621 = relay.Function([var_2619,var_2620,], output)
mutated_mod['func_2621'] = func_2621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1047_call = mod.get_global_var('func_1047')
func_1049_call = mutated_mod.get_global_var('func_1049')
call_2627 = relay.TupleGetItem(func_1047_call(), 0)
call_2628 = relay.TupleGetItem(func_1049_call(), 0)
func_834_call = mod.get_global_var('func_834')
func_840_call = mutated_mod.get_global_var('func_840')
const_2643 = relay.const([[-0.241145,-2.376679,8.942189,3.620943,6.811474,-1.523669,8.376235,3.566876,4.667205,9.786219,0.899757,-0.796244,3.834183,-3.670702,-6.829109,7.587489,-8.713529,1.639300,-7.007686,-7.202539,6.763015,3.554105,-0.507326,5.527327,8.428976,-2.587778,3.899689,-1.176703,-6.536269,-5.996817,5.227212,7.958785,0.824274,-1.127321,-0.837891,5.237024,7.014945,-6.448983,8.874770,-4.889372,-9.199434,7.282275,4.092348,-0.459537,0.439270,-7.824332,7.963221,-5.598990,-5.048162,-9.128003,7.135225,4.393961,3.739855,9.313637,1.052404,2.767846,-3.342081,9.136753,4.181285,3.208753,-3.625959,0.908342,8.342259,-3.126103,-8.895590,-5.358892,-0.022916,3.534624,8.574783,3.815037,-9.369534,1.167249],[5.826078,-7.871855,-8.621615,0.116921,6.438948,-7.167853,4.511944,-4.794313,-3.545272,2.863196,-9.576575,-7.413856,1.325962,8.824159,-9.563686,-8.949315,1.395363,-8.382254,-5.078325,2.485650,2.929920,9.618389,-3.803092,-7.871514,-3.086882,-8.046928,-9.961709,5.026908,-9.077313,6.196782,6.938485,-9.057637,-8.686276,-9.875214,2.035411,-9.108125,-8.318981,8.609598,-7.916589,6.019081,0.151988,6.554512,-6.615835,-9.901359,9.533430,4.944960,7.221484,-4.303401,6.965479,7.850036,-3.971089,9.678081,1.978648,4.046183,-2.956658,-5.990830,-7.817078,-6.210678,-6.671118,1.848317,-5.306378,-1.228789,3.070206,-5.586370,-4.925934,2.529275,3.603205,2.147899,5.710283,-6.060807,8.068866,0.963591]], dtype = "float64")#candidate|2643|(2, 72)|const|float64
const_2644 = relay.const([[-1,-3,6,-7,-7,-2,3,-6,8,2,-2,-8,4,-4,1,-10,-9,-3,-2,-8,1,1,-3,-2,9,-3,-4,6,4,5,-6,-10,-9,-1,-5,9,10,-2,7,4,-10,8,9,-4,-4,10,3,8,-5,2,-10,8],[8,-3,-5,-2,-3,1,-6,6,-3,1,-8,-7,-8,5,-7,-7,4,-4,4,-4,-6,-2,-9,4,7,-7,4,8,-2,-9,-7,-7,-6,-9,-7,-9,7,7,10,-9,7,-1,-1,-3,3,3,-10,-10,9,7,2,1],[7,-7,-9,5,-4,7,9,-8,5,4,-2,-2,-2,9,8,5,-7,-4,1,-4,-10,-2,-2,3,4,3,-2,6,-7,-9,-4,10,-7,2,8,2,-7,-8,7,-4,-9,-6,1,4,-9,-3,-7,6,7,-1,4,-4],[-10,-9,4,-7,-2,3,-6,-3,1,-8,9,2,2,3,-9,-8,-7,-7,4,-3,8,2,-4,7,-1,4,8,7,3,7,-7,2,-6,5,4,6,6,4,-3,3,-5,-5,7,3,2,-2,7,-2,-3,-2,-7,-7],[-6,-2,3,4,-6,-10,-1,-1,-5,9,-6,-4,10,-6,-4,-3,-5,1,2,-7,-4,-1,2,-7,4,-2,1,-1,-3,9,1,8,-8,-5,6,-9,1,-5,-2,1,-2,-6,8,-3,4,8,5,3,-7,-2,-2,-3],[-10,7,5,-8,10,8,-1,1,-3,5,9,1,-8,-8,5,3,-4,-9,-8,-3,-1,8,-2,-9,10,-4,2,4,2,10,7,-5,6,7,-9,4,-1,-1,-3,-9,6,3,-3,-10,1,2,-5,-9,1,5,-6,1],[3,-2,6,-1,-9,2,1,4,-2,-10,-5,10,-4,-7,5,-10,2,5,5,10,-10,3,4,3,-6,-7,-3,9,1,8,6,4,-9,-7,5,-8,2,6,3,-4,-6,1,7,7,-10,5,4,-5,10,-9,9,-2],[3,7,-9,6,-3,5,9,-9,6,4,-5,2,10,10,1,2,-10,-9,-3,4,-1,5,10,10,8,-5,4,-8,-1,6,10,7,1,9,-2,-10,-10,5,-9,-6,-9,-1,8,-7,-8,2,-5,6,-6,7,-7,-1],[2,-9,-10,-1,5,2,-3,-6,-6,-9,-7,6,-1,1,2,7,7,6,-10,-8,10,2,-1,-2,-7,9,-7,7,-7,-4,-10,2,6,7,-6,-2,-7,10,1,6,-5,1,-7,8,7,-3,-4,8,-3,-5,-2,-5],[-9,6,9,7,-6,-5,-7,8,-6,4,-4,-1,7,-7,-3,7,-1,4,-4,3,-1,2,-3,3,1,-1,-10,-3,-8,-6,-7,5,-6,8,-1,-10,9,-2,2,2,-3,-10,5,1,-6,-6,-10,10,9,-7,-9,5],[-9,-10,2,-6,-7,7,-10,5,5,-8,2,2,6,-4,-6,-2,-7,8,6,-4,8,5,10,-3,-1,4,1,-5,-5,3,-9,8,9,5,10,6,-3,-8,-1,9,-4,-5,9,3,10,-9,2,7,1,-5,-3,1]], dtype = "int8")#candidate|2644|(11, 52)|const|int8
var_2645 = relay.var("var_2645", dtype = "bool", shape = (84,))#candidate|2645|(84,)|var|bool
call_2642 = relay.TupleGetItem(func_834_call(relay.reshape(const_2643.astype('float64'), [8, 3, 6]), relay.reshape(const_2644.astype('int8'), [572,]), relay.reshape(call_2627.astype('float64'), [21, 1]), relay.reshape(var_2645.astype('bool'), [7, 4, 3]), ), 1)
call_2646 = relay.TupleGetItem(func_840_call(relay.reshape(const_2643.astype('float64'), [8, 3, 6]), relay.reshape(const_2644.astype('int8'), [572,]), relay.reshape(call_2627.astype('float64'), [21, 1]), relay.reshape(var_2645.astype('bool'), [7, 4, 3]), ), 1)
func_834_call = mod.get_global_var('func_834')
func_840_call = mutated_mod.get_global_var('func_840')
call_2669 = relay.TupleGetItem(func_834_call(relay.reshape(const_2643.astype('float64'), [8, 3, 6]), relay.reshape(const_2644.astype('int8'), [572,]), relay.reshape(call_2627.astype('float64'), [21, 1]), relay.reshape(var_2645.astype('bool'), [7, 4, 3]), ), 8)
call_2670 = relay.TupleGetItem(func_840_call(relay.reshape(const_2643.astype('float64'), [8, 3, 6]), relay.reshape(const_2644.astype('int8'), [572,]), relay.reshape(call_2627.astype('float64'), [21, 1]), relay.reshape(var_2645.astype('bool'), [7, 4, 3]), ), 8)
func_1561_call = mod.get_global_var('func_1561')
func_1565_call = mutated_mod.get_global_var('func_1565')
const_2673 = relay.const([3.770588,-1.141033,-7.411449,5.321094,7.910406,7.763709,-9.730967,6.597404,-1.776893,-6.805119,3.301938,7.018016,3.490928,-7.773830,-1.628378,-5.233721,-3.990384,-9.995633,-0.713553,-0.323015,4.773225,4.067513,1.069177,0.118930,-2.444210,-0.664663,-4.371677,5.176798,5.495402,-8.063964,6.616014,-9.085762,8.329106,-6.071721,-4.654695,-0.991866,6.039783,9.264125,-9.340604,-7.227225,-9.721403,-1.119133,-5.407686,9.078933,9.851204,2.212459,-1.498166,-8.934317,-5.349014,8.575213,1.182800,-0.356533,1.936562,8.210229,3.270225,-1.414890,-1.561384,-1.213396,-8.596988,5.863310,-0.001003,-4.258626,-8.981739,-2.004166,1.876945,6.450778,5.833039,5.250126,1.617388,-9.696529,-4.242015,6.341502,0.452321,-6.635592,4.876042,9.852869,-1.319247,-3.263483,-5.215538,-4.708484,-9.015215,-8.543212,0.195678,-8.430995,-5.754095,0.119664,7.455932,-7.301556,0.960692,-9.963188,-3.299506,-2.752336,0.783404,4.029799,1.363036,7.250250,9.773696,-4.934760,-9.839270,5.804269,4.617866,8.003451,3.056241,-1.368235,-7.259397,0.967371,-0.665314,-7.007218,-6.508608,-2.335141,6.662395,0.130412,3.473055,8.217971,-5.238717,2.731327,-8.018269,-7.858284,-1.127545,-3.447487,9.487775,4.253232,0.379373,6.223972,2.417731,2.053933,-9.125492,7.303533,-1.505648,0.588902,9.740295,6.106982,6.639000,-7.244284,-0.683407,7.520687,-5.704390,0.545979,-3.733630,-5.577737,-4.544864,-5.769003,-4.192222,9.545706,-6.956986,-3.013555,2.214747,8.985823,7.559321,-6.339413,-6.566043,-0.542522,-3.964229,-5.363874,-1.677035,-3.427032,9.993565,5.926415,-5.514899,-1.031142,6.928929,-4.526220,-5.481286,-8.035184,6.198857,4.054867,-1.687907,8.141648,-0.405523,5.210369,-8.416664,8.279175,-0.812566,1.292605,9.838447,4.949927,-3.290711,1.070359,-1.981668,6.408213,-3.574501,6.185636,-1.143103,3.669433,5.801325,3.631132,-5.918723,8.535128,-0.391827,3.939162,-3.053731,-3.948074,5.609605,-7.821045,1.505558,7.804382,-1.859159,-8.229070,1.083240,6.966946,-8.328167,-8.823250,-9.386681,6.612223,7.128553,-6.111389,-1.190797,-6.551365,7.903787,6.536081,-5.255412,-0.502685,8.915973,4.921037,8.477574,1.510354,-4.182775,-9.229755,7.552948,2.756961,7.410566,3.963805,-4.610535,0.289516,-1.192954,9.036178,6.819962,9.757839,-9.749393,-5.446775,-7.351601,-2.445271,0.535052,3.183926,-2.881399,0.348042,-8.077110,3.630109,0.332328,-6.253558,2.475917,-7.792333,-4.243238,-2.092026,9.016660,-0.065862,-1.522303,-7.929540,4.319547,1.182066,-7.583455,1.151248,5.081697,7.334527,8.443459,-5.891975,7.060233,-9.862996,-3.442845,2.082584,5.757024,4.171456,-1.702011,4.906816,6.670785,2.162206,-2.550376,4.263698,-9.731226,-1.229631,-8.277128,-2.614745,6.043716,6.194687,0.265105,5.173590,-6.538977,4.100593,-8.668947,7.566737,9.084697,8.366396,5.937519,1.297842,-0.616287,-5.001235,-9.418044,-5.633939,8.865373,0.783457,-2.626267,4.599650,-3.604862,6.725629,9.544104,-4.126137,-9.909235,-0.253380,-3.763637,7.077349,3.949549,-1.212142,-4.324398,-6.309784,-5.526617,8.273764,-0.932072,-3.106059,8.625526,-0.760125,-4.232377,5.777513,-6.744804,-4.042190,5.758735], dtype = "float64")#candidate|2673|(315,)|const|float64
call_2672 = relay.TupleGetItem(func_1561_call(relay.reshape(const_2673.astype('float64'), [7, 3, 15]), relay.reshape(const_2673.astype('float64'), [7, 3, 15]), ), 0)
call_2674 = relay.TupleGetItem(func_1565_call(relay.reshape(const_2673.astype('float64'), [7, 3, 15]), relay.reshape(const_2673.astype('float64'), [7, 3, 15]), ), 0)
func_1311_call = mod.get_global_var('func_1311')
func_1312_call = mutated_mod.get_global_var('func_1312')
call_2702 = relay.TupleGetItem(func_1311_call(), 0)
call_2703 = relay.TupleGetItem(func_1312_call(), 0)
func_1561_call = mod.get_global_var('func_1561')
func_1565_call = mutated_mod.get_global_var('func_1565')
call_2717 = relay.TupleGetItem(func_1561_call(relay.reshape(call_2672.astype('float64'), [7, 3, 15]), relay.reshape(call_2672.astype('float64'), [7, 3, 15]), ), 0)
call_2718 = relay.TupleGetItem(func_1565_call(relay.reshape(call_2672.astype('float64'), [7, 3, 15]), relay.reshape(call_2672.astype('float64'), [7, 3, 15]), ), 0)
func_2409_call = mod.get_global_var('func_2409')
func_2411_call = mutated_mod.get_global_var('func_2411')
call_2722 = relay.TupleGetItem(func_2409_call(), 0)
call_2723 = relay.TupleGetItem(func_2411_call(), 0)
output = relay.Tuple([call_2627,call_2642,const_2643,const_2644,var_2645,call_2669,call_2672,const_2673,call_2702,call_2717,call_2722,])
output2 = relay.Tuple([call_2628,call_2646,const_2643,const_2644,var_2645,call_2670,call_2674,const_2673,call_2703,call_2718,call_2723,])
func_2724 = relay.Function([var_2645,], output)
mod['func_2724'] = func_2724
mod = relay.transform.InferType()(mod)
var_2725 = relay.var("var_2725", dtype = "bool", shape = (84,))#candidate|2725|(84,)|var|bool
output = func_2724(var_2725)
func_2726 = relay.Function([var_2725], output)
mutated_mod['func_2726'] = func_2726
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2790 = relay.var("var_2790", dtype = "bool", shape = (4, 15, 7))#candidate|2790|(4, 15, 7)|var|bool
var_2791 = relay.var("var_2791", dtype = "bool", shape = (4, 15, 7))#candidate|2791|(4, 15, 7)|var|bool
bop_2792 = relay.logical_or(var_2790.astype('bool'), relay.reshape(var_2791.astype('bool'), relay.shape_of(var_2790))) # shape=(4, 15, 7)
var_2798 = relay.var("var_2798", dtype = "bool", shape = (4, 15, 7))#candidate|2798|(4, 15, 7)|var|bool
bop_2799 = relay.power(var_2791.astype('float32'), relay.reshape(var_2798.astype('float32'), relay.shape_of(var_2791))) # shape=(4, 15, 7)
func_2332_call = mod.get_global_var('func_2332')
func_2335_call = mutated_mod.get_global_var('func_2335')
const_2803 = relay.const([3,4,7,-4,6,-1,-5,-4,-5,2,5,-3,9,-9,8,-8,3,5,-9,9,10,2,1,4,-1,9,-10,-9,4,3,-2,-5,5,5,8,9,3,3,9,9,-6,8,-3,-9,6,1,5,3,5,-3,-1,10,6,-8,-1,-7,-5,6,-3,-7,7,7,3,1,5,8,10,9,-1,3,4,-2,-4,-9,3,5,3,1,1,1,-8,3,-8,2,-1,-5,4,6,-6,-6,-2], dtype = "uint8")#candidate|2803|(91,)|const|uint8
call_2802 = relay.TupleGetItem(func_2332_call(relay.reshape(const_2803.astype('uint8'), [1, 7, 13])), 1)
call_2804 = relay.TupleGetItem(func_2335_call(relay.reshape(const_2803.astype('uint8'), [1, 7, 13])), 1)
output = relay.Tuple([bop_2792,bop_2799,call_2802,const_2803,])
output2 = relay.Tuple([bop_2792,bop_2799,call_2804,const_2803,])
func_2824 = relay.Function([var_2790,var_2791,var_2798,], output)
mod['func_2824'] = func_2824
mod = relay.transform.InferType()(mod)
var_2825 = relay.var("var_2825", dtype = "bool", shape = (4, 15, 7))#candidate|2825|(4, 15, 7)|var|bool
var_2826 = relay.var("var_2826", dtype = "bool", shape = (4, 15, 7))#candidate|2826|(4, 15, 7)|var|bool
var_2827 = relay.var("var_2827", dtype = "bool", shape = (4, 15, 7))#candidate|2827|(4, 15, 7)|var|bool
output = func_2824(var_2825,var_2826,var_2827,)
func_2828 = relay.Function([var_2825,var_2826,var_2827,], output)
mutated_mod['func_2828'] = func_2828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1748_call = mod.get_global_var('func_1748')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_2860 = relay.TupleGetItem(func_1748_call(), 0)
call_2861 = relay.TupleGetItem(func_1749_call(), 0)
func_1561_call = mod.get_global_var('func_1561')
func_1565_call = mutated_mod.get_global_var('func_1565')
const_2864 = relay.const([-5.771549,-3.992944,8.212216,1.176562,3.686429,-0.762235,-5.912320,6.210096,5.977089,-7.032091,0.677919,-5.100466,1.726081,-8.743863,4.220965,-4.090105,5.796400,-9.609880,-1.703033,2.142896,-5.405304,-2.883604,0.763610,-9.778930,-6.976131,5.237951,-7.540864,-6.249909,-2.369002,6.346737,-5.001692,1.419508,-8.990101,-4.936841,-6.596338,-7.035914,4.535143,9.443664,-7.017012,5.701062,-3.359592,7.988497,-3.565646,2.855545,-0.198073,-1.498538,-7.138354,-7.550336,-9.290296,4.994475,8.740143,6.329923,-5.620812,0.765390,0.381770,-2.513640,-7.687814,-5.505314,6.083413,4.723839,-3.000494,-2.724402,3.033992,-1.207561,0.194695,-1.726801,1.522791,3.501122,4.526233,8.875318,9.098910,-0.869911,5.943043,2.271282,-3.349282,-9.600746,-6.041583,-3.251289,-2.190455,6.610441,-7.130475,-4.411063,-2.288402,-4.631783,-6.516367,-0.578893,2.557594,5.941832,4.385896,6.967955,0.580495,9.084601,0.859411,-7.505421,-8.693201,5.434624,3.238327,-9.478081,-9.170626,9.734016,-5.358758,-8.862089,4.026250,-0.047691,-7.578485,-7.030540,-0.061945,-7.713862,6.383941,3.132278,-5.954908,9.483784,-2.864091,1.871052,-4.341471,2.697107,-0.454927,-5.449739,-2.140118,4.938415,-4.825049,-2.670185,1.129544,-4.375984,7.697688,-5.360778,2.188369,-5.336505,9.065278,-0.891776,-5.819115,1.755467,5.619766,-8.990478,-9.880202,1.943058,-7.708743,7.094521,-6.294841,-5.836019,7.333114,2.493058,-9.224571,-8.989821,-9.160823,5.027293,5.669581,0.908349,-6.262590,-4.130718,9.496707,-1.322699,3.766762,4.104573,5.184481,-5.906928,-1.231109,7.444544,1.304380,2.718705,-0.663237,-3.812935,8.851219,1.009826,-7.581132,-1.159834,7.671589,9.541015,3.189523,-8.057379,-3.943795,5.266383,-1.183685,-6.378601,8.563607,5.957780,-8.640373,3.227992,-6.571442,-2.232464,-1.893545,-0.882653,7.563901,-4.001404,8.289257,0.587771,5.489971,-5.620089,-6.002174,8.311256,-9.119491,3.522097,8.793927,-0.091626,5.352920,-9.582080,-8.890308,6.378284,-5.846167,-8.299642,-9.346049,0.853594,-7.648992,-3.483114,-7.084972,-5.824228,-1.272625,-2.933600,-6.465860,2.310730,5.817706,3.949327,5.830378,3.462513,0.596926,3.191735,2.362997,6.835988,-2.478249,-9.222500,-4.447233,-4.137774,6.467843,-1.093929,5.666553,4.718313,6.421107,-8.349196,-5.196092,-9.611910,1.934224,2.920669,-6.686075,3.707463,-4.223133,-3.588808,-1.920173,-8.913589,9.519851,-1.102143,-2.366939,1.736593,-5.580448,-8.359953,5.823222,-7.551354,-3.804250,1.564844,2.601548,-3.480023,5.579298,-6.175498,6.349164,2.850962,9.995793,5.774209,7.331386,0.313613,0.811471,-7.161862,-3.858956,0.118657,4.066046,5.347843,5.851440,-0.418826,-3.191718,1.570937,6.774457,-3.940404,-3.222885,3.196069,-2.864380,4.106760,-5.474841,-4.937861,5.031354,-0.493112,4.102686,2.877895,5.409176,2.669045,-5.053728,4.446871,2.108889,-3.253651,9.739161,6.231573,-6.346085,5.563919,7.824433,2.166769,-7.587201,4.872928,9.752509,-9.695949,-7.572728,9.921642,-5.275238,2.028696,-0.210399,2.873985,8.601548,-4.223903,-8.648828,-8.672124,3.172336,-4.222984,8.687358,8.475930,-7.428497,6.454543,6.051612,0.575653,5.819643], dtype = "float64")#candidate|2864|(315,)|const|float64
call_2863 = relay.TupleGetItem(func_1561_call(relay.reshape(const_2864.astype('float64'), [7, 3, 15]), relay.reshape(const_2864.astype('float64'), [7, 3, 15]), ), 0)
call_2865 = relay.TupleGetItem(func_1565_call(relay.reshape(const_2864.astype('float64'), [7, 3, 15]), relay.reshape(const_2864.astype('float64'), [7, 3, 15]), ), 0)
output = relay.Tuple([call_2860,call_2863,const_2864,])
output2 = relay.Tuple([call_2861,call_2865,const_2864,])
func_2877 = relay.Function([], output)
mod['func_2877'] = func_2877
mod = relay.transform.InferType()(mod)
mutated_mod['func_2877'] = func_2877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2877_call = mutated_mod.get_global_var('func_2877')
call_2878 = func_2877_call()
output = call_2878
func_2879 = relay.Function([], output)
mutated_mod['func_2879'] = func_2879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2457_call = mod.get_global_var('func_2457')
func_2459_call = mutated_mod.get_global_var('func_2459')
call_2922 = relay.TupleGetItem(func_2457_call(), 0)
call_2923 = relay.TupleGetItem(func_2459_call(), 0)
uop_2957 = relay.atanh(call_2922.astype('float64')) # shape=(3, 1, 7)
uop_2959 = relay.atanh(call_2923.astype('float64')) # shape=(3, 1, 7)
bop_2962 = relay.bitwise_and(uop_2957.astype('uint16'), relay.reshape(call_2922.astype('uint16'), relay.shape_of(uop_2957))) # shape=(3, 1, 7)
bop_2965 = relay.bitwise_and(uop_2959.astype('uint16'), relay.reshape(call_2923.astype('uint16'), relay.shape_of(uop_2959))) # shape=(3, 1, 7)
bop_2966 = relay.greater_equal(uop_2957.astype('bool'), relay.reshape(bop_2962.astype('bool'), relay.shape_of(uop_2957))) # shape=(3, 1, 7)
bop_2969 = relay.greater_equal(uop_2959.astype('bool'), relay.reshape(bop_2965.astype('bool'), relay.shape_of(uop_2959))) # shape=(3, 1, 7)
bop_2989 = relay.logical_and(call_2922.astype('bool'), relay.reshape(uop_2957.astype('bool'), relay.shape_of(call_2922))) # shape=(3, 1, 7)
bop_2992 = relay.logical_and(call_2923.astype('bool'), relay.reshape(uop_2959.astype('bool'), relay.shape_of(call_2923))) # shape=(3, 1, 7)
output = relay.Tuple([bop_2966,bop_2989,])
output2 = relay.Tuple([bop_2969,bop_2992,])
func_2999 = relay.Function([], output)
mod['func_2999'] = func_2999
mod = relay.transform.InferType()(mod)
mutated_mod['func_2999'] = func_2999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2999_call = mutated_mod.get_global_var('func_2999')
call_3000 = func_2999_call()
output = call_3000
func_3001 = relay.Function([], output)
mutated_mod['func_3001'] = func_3001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1519_call = mod.get_global_var('func_1519')
func_1520_call = mutated_mod.get_global_var('func_1520')
call_3175 = relay.TupleGetItem(func_1519_call(), 0)
call_3176 = relay.TupleGetItem(func_1520_call(), 0)
func_2724_call = mod.get_global_var('func_2724')
func_2726_call = mutated_mod.get_global_var('func_2726')
var_3179 = relay.var("var_3179", dtype = "bool", shape = (84,))#candidate|3179|(84,)|var|bool
call_3178 = relay.TupleGetItem(func_2724_call(relay.reshape(var_3179.astype('bool'), [84,])), 3)
call_3180 = relay.TupleGetItem(func_2726_call(relay.reshape(var_3179.astype('bool'), [84,])), 3)
func_925_call = mod.get_global_var('func_925')
func_926_call = mutated_mod.get_global_var('func_926')
call_3181 = func_925_call()
call_3182 = func_925_call()
bop_3183 = relay.maximum(call_3175.astype('float32'), relay.reshape(call_3181.astype('float32'), relay.shape_of(call_3175))) # shape=(3, 1, 7)
bop_3186 = relay.maximum(call_3176.astype('float32'), relay.reshape(call_3182.astype('float32'), relay.shape_of(call_3176))) # shape=(3, 1, 7)
func_834_call = mod.get_global_var('func_834')
func_840_call = mutated_mod.get_global_var('func_840')
const_3200 = relay.const([[-4.069685,-2.654580,7.937316,-3.294083,6.914918,-3.380701,-7.876422,8.479941,8.070045,-3.179672,-5.533758,8.621643,4.089546,0.633543,2.497787,9.928648,-2.968202,-0.395407],[4.137212,-4.463536,3.599078,4.247723,-0.389223,-7.334134,4.293021,-8.373583,1.595643,-0.557083,9.072816,-1.488687,5.005644,-5.530314,6.295036,1.589351,6.315288,6.395058],[-4.511985,-1.248220,-6.380928,-8.068443,-3.060880,8.739757,3.914124,-4.656688,9.358358,5.147022,2.318390,-3.928080,-8.767636,1.338003,9.339242,-1.262553,0.480530,3.166030],[-1.353451,3.960243,-7.383360,-7.069978,-7.906703,-3.164586,-0.631285,7.658985,1.509213,-7.540561,5.908911,-6.990807,4.587531,2.452599,1.842491,-6.421807,-6.581542,-5.996866],[-6.750126,-2.019743,-4.044269,-3.548920,-9.589674,-2.905631,-2.014597,-1.780807,-8.939165,-6.281357,5.012365,-9.825608,-6.225575,-3.816573,8.569665,-0.169350,-3.836443,-0.989333],[0.698870,3.504739,-0.402266,-7.946110,-1.148869,7.079679,6.600896,-1.689147,8.176444,0.135949,9.732094,-9.343430,5.801265,-3.372024,-0.566992,-5.425557,-8.210583,0.014595],[3.209599,0.069117,-9.683184,-0.104274,-2.398359,7.583346,2.203524,-4.333784,-2.298899,9.767174,3.514319,9.417546,8.613921,9.853170,6.004649,-6.817617,-0.550415,9.803512],[-9.263556,-6.189795,-4.435895,-4.246568,8.758540,4.781106,-9.513000,8.763959,-4.233005,5.887952,-7.691973,7.733840,6.572906,-2.165907,7.594611,7.459798,1.601149,1.246784]], dtype = "float64")#candidate|3200|(8, 18)|const|float64
call_3199 = relay.TupleGetItem(func_834_call(relay.reshape(const_3200.astype('float64'), [8, 3, 6]), relay.reshape(call_3178.astype('int8'), [572,]), relay.reshape(call_3181.astype('float64'), [21, 1]), relay.reshape(var_3179.astype('bool'), [7, 4, 3]), ), 9)
call_3201 = relay.TupleGetItem(func_840_call(relay.reshape(const_3200.astype('float64'), [8, 3, 6]), relay.reshape(call_3178.astype('int8'), [572,]), relay.reshape(call_3181.astype('float64'), [21, 1]), relay.reshape(var_3179.astype('bool'), [7, 4, 3]), ), 9)
output = relay.Tuple([call_3178,var_3179,bop_3183,call_3199,const_3200,])
output2 = relay.Tuple([call_3180,var_3179,bop_3186,call_3201,const_3200,])
func_3217 = relay.Function([var_3179,], output)
mod['func_3217'] = func_3217
mod = relay.transform.InferType()(mod)
mutated_mod['func_3217'] = func_3217
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3218 = relay.var("var_3218", dtype = "bool", shape = (84,))#candidate|3218|(84,)|var|bool
func_3217_call = mutated_mod.get_global_var('func_3217')
call_3219 = func_3217_call(var_3218)
output = call_3219
func_3220 = relay.Function([var_3218], output)
mutated_mod['func_3220'] = func_3220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1519_call = mod.get_global_var('func_1519')
func_1520_call = mutated_mod.get_global_var('func_1520')
call_3225 = relay.TupleGetItem(func_1519_call(), 0)
call_3226 = relay.TupleGetItem(func_1520_call(), 0)
const_3244 = relay.const([[[-5,6,4,1,3,10,-5],[-8,9,-8,5,6,3,2],[-9,7,7,-7,5,-3,-1],[-6,5,3,-2,-6,9,4],[1,3,-3,3,6,-3,7],[-7,-10,-5,7,-10,8,-7],[9,1,9,2,-6,2,-5]],[[3,2,2,-5,6,6,-2],[-1,3,10,1,-8,3,-8],[-8,-1,-6,-10,-4,7,6],[3,8,-5,-5,-5,-6,9],[-8,6,9,6,-10,-4,-9],[2,4,3,3,-3,5,-7],[10,2,-3,6,6,9,-6]],[[10,-6,1,2,-2,-2,-5],[2,9,8,-3,-10,4,1],[-3,6,4,-8,2,9,-6],[8,9,3,-3,9,-3,5],[6,1,-2,-3,-9,-1,10],[4,4,-7,-3,1,3,-9],[1,-6,-9,6,-5,8,-7]]], dtype = "int8")#candidate|3244|(3, 7, 7)|const|int8
bop_3245 = relay.floor_divide(call_3225.astype('float32'), const_3244.astype('float32')) # shape=(3, 7, 7)
bop_3248 = relay.floor_divide(call_3226.astype('float32'), const_3244.astype('float32')) # shape=(3, 7, 7)
func_1311_call = mod.get_global_var('func_1311')
func_1312_call = mutated_mod.get_global_var('func_1312')
call_3255 = relay.TupleGetItem(func_1311_call(), 0)
call_3256 = relay.TupleGetItem(func_1312_call(), 0)
output = relay.Tuple([bop_3245,call_3255,])
output2 = relay.Tuple([bop_3248,call_3256,])
func_3260 = relay.Function([], output)
mod['func_3260'] = func_3260
mod = relay.transform.InferType()(mod)
mutated_mod['func_3260'] = func_3260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3260_call = mutated_mod.get_global_var('func_3260')
call_3261 = func_3260_call()
output = call_3261
func_3262 = relay.Function([], output)
mutated_mod['func_3262'] = func_3262
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3279 = relay.constdtype = "float32")#candidate|3279|(7, 2, 16)|const|float32
uop_3280 = relay.cos(const_3279.astype('float32')) # shape=(7, 2, 16)
output = uop_3280
output2 = uop_3280
func_3285 = relay.Function([], output)
mod['func_3285'] = func_3285
mod = relay.transform.InferType()(mod)
mutated_mod['func_3285'] = func_3285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3285_call = mutated_mod.get_global_var('func_3285')
call_3286 = func_3285_call()
output = call_3286
func_3287 = relay.Function([], output)
mutated_mod['func_3287'] = func_3287
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3383 = relay.const(8, dtype = "int32")#candidate|3383|()|const|int32
const_3384 = relay.const([[[-8],[-2],[8],[-2]],[[-3],[-4],[3],[-6]],[[-4],[10],[4],[-6]],[[-5],[-3],[10],[2]],[[6],[10],[9],[-5]],[[-6],[-3],[-3],[-2]]], dtype = "int32")#candidate|3384|(6, 4, 1)|const|int32
bop_3385 = relay.add(const_3383.astype('int32'), const_3384.astype('int32')) # shape=(6, 4, 1)
output = bop_3385
output2 = bop_3385
func_3395 = relay.Function([], output)
mod['func_3395'] = func_3395
mod = relay.transform.InferType()(mod)
mutated_mod['func_3395'] = func_3395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3395_call = mutated_mod.get_global_var('func_3395')
call_3396 = func_3395_call()
output = call_3396
func_3397 = relay.Function([], output)
mutated_mod['func_3397'] = func_3397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3260_call = mod.get_global_var('func_3260')
func_3262_call = mutated_mod.get_global_var('func_3262')
call_3410 = relay.TupleGetItem(func_3260_call(), 0)
call_3411 = relay.TupleGetItem(func_3262_call(), 0)
output = call_3410
output2 = call_3411
func_3412 = relay.Function([], output)
mod['func_3412'] = func_3412
mod = relay.transform.InferType()(mod)
output = func_3412()
func_3413 = relay.Function([], output)
mutated_mod['func_3413'] = func_3413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_895_call = mod.get_global_var('func_895')
func_896_call = mutated_mod.get_global_var('func_896')
call_3464 = relay.TupleGetItem(func_895_call(), 0)
call_3465 = relay.TupleGetItem(func_896_call(), 0)
func_925_call = mod.get_global_var('func_925')
func_926_call = mutated_mod.get_global_var('func_926')
call_3473 = func_925_call()
call_3474 = func_925_call()
bop_3483 = relay.minimum(call_3473.astype('float32'), relay.reshape(call_3464.astype('float32'), relay.shape_of(call_3473))) # shape=(3, 1, 7)
bop_3486 = relay.minimum(call_3474.astype('float32'), relay.reshape(call_3465.astype('float32'), relay.shape_of(call_3474))) # shape=(3, 1, 7)
output = relay.Tuple([bop_3483,])
output2 = relay.Tuple([bop_3486,])
func_3489 = relay.Function([], output)
mod['func_3489'] = func_3489
mod = relay.transform.InferType()(mod)
output = func_3489()
func_3490 = relay.Function([], output)
mutated_mod['func_3490'] = func_3490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1580_call = mod.get_global_var('func_1580')
func_1582_call = mutated_mod.get_global_var('func_1582')
call_3560 = relay.TupleGetItem(func_1580_call(), 0)
call_3561 = relay.TupleGetItem(func_1582_call(), 0)
func_3285_call = mod.get_global_var('func_3285')
func_3287_call = mutated_mod.get_global_var('func_3287')
call_3565 = func_3285_call()
call_3566 = func_3285_call()
output = relay.Tuple([call_3560,call_3565,])
output2 = relay.Tuple([call_3561,call_3566,])
func_3578 = relay.Function([], output)
mod['func_3578'] = func_3578
mod = relay.transform.InferType()(mod)
mutated_mod['func_3578'] = func_3578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3578_call = mutated_mod.get_global_var('func_3578')
call_3579 = func_3578_call()
output = call_3579
func_3580 = relay.Function([], output)
mutated_mod['func_3580'] = func_3580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1182_call = mod.get_global_var('func_1182')
func_1183_call = mutated_mod.get_global_var('func_1183')
call_3588 = relay.TupleGetItem(func_1182_call(), 0)
call_3589 = relay.TupleGetItem(func_1183_call(), 0)
func_2617_call = mod.get_global_var('func_2617')
func_2621_call = mutated_mod.get_global_var('func_2621')
var_3593 = relay.var("var_3593", dtype = "bool", shape = ())#candidate|3593|()|var|bool
const_3594 = relay.const([-5,3,2,-5,4,-10,9,-3,-7,-6,-3,9,1,-2,-1,3,2,3,-8,4,-2,-9,6,-3,-6,-4,-10,-9,-1,2,-5,-7,8,1,-8,8,-9,3,8,2,5,-5,9,3,-6,-1,7,8,-7,1,-3,-5,3,-10,6,-5,8,-3,3,-8,-1,1,-6,-5,-9,-6,5,-7,-1,-9,10,7,5,6,8,-8,2,10,10,9,-2,-2,-8,5,-7,-8,2,5,-5,-7,5,-5,7,-3,1,-6,6,-9,-6,-6,3,-10,-7,-4,7,9,-7,7,8,-10,-1,-1,6,-3,-8,-5,-3,8,1,-4,1,8,-8,5,6,-4,-4,6,-8,-2,8,-9,-4,2,-7,4,10,10,-9,-3,-10,2,3,-2,8,9,-1,8,-3,9,-7,-8,4,-4,-10,-8,5,4,9,-10,10,-3,-6,-6,-9,9,-9,2,4,8,4,-8,-7,8,-8,3,6,3,-6,2,-6,-3,7,-10,-5,9,-8,10,-7,3,7,-7,3,6,9,-7,9,1,7,-7,2,2,2,5,-10,-9,4,1,-6,-7,5,1,5,-7,5,-7,-1,9,2,-5,4,-9,-9,-6,-7,1,8,-5,-6,-7,10,10,-2,-9,2,-7,9,7,-8,5,7,-9,-2,9,-1,-8,10,-6,-6,-7,8,-7,1,7,6,-7,9,-9,4,-8,-4,-8,6,-7,9,-3,7,6,-5,-7,4,-5,2,4,3,3,-10,-2,-6,-1,2,-4,5,6,4,2,-1,-2,4,-1,10,6,6,6,-8,9,-10,-8,-4,8,2,-7,-10,6,-5,-1,-2,6,-5,-9,9,3,-2,8,-9,-5,8,-4,1,10,-6,2,8,-7,2,7,6,3,-5,6,-9,3,-5,4,6,3,-7,-1,4,-1,3,-8,-10,-7,-5,-8,-5,2,9,-5,3,8,-4,-8,-8,5,-7,-10,-7,3,-1,-4,4,-6,3,-6,1,6,-5,-6,-3,4,-7,10,-3,-3,6,1,-5,-10,10,7,-2,-9,-9,-9,7,4,-8,-7,7,-5,9,-2,-5,-3,8,6,-4,8,1,4,9,-3,2,7,-2,-4,-8,-3,7,-8,7,9,-3,5,-2,-6,-8,-9,-1,-2,9,-1,-2,-10,2,6,-5,3,1,4,6,6,8,-4,10,-9,-2,5,-7,-5,-4,10,-7,9,-10,1,10,-10,3,-7,-10,3,1,5,5,-6,-10,-10,1,5,2,-7,-3,3,9,-10,-10,-10,-3,6,-7,-8,-1,4,-10,3,-4,6,-5,5,1,-4,10,-10,1,10,-8,-4,9,-1,6,-10,-4,10,-5,7,2,-5,-7,7,10,-7,8,-9,9,3,-6,8,9,-1,-2,-10,-10,-9,1,5,5,-2,-3,-9,1,-8,9,6,3,-2,-4,3,9,-10,-10,-2,9,10,-4,-6,3,1,1,9,3,-1,8,-2,6,9,-1,10,4,-3,1,3,-5,-7,2,-2,-9,-5,-7,-4,-10,-10,6,2,2,-10,7,8,-10,10,-8,8,-5,6,9,-8,5,-2,10,10,-3,6,4,4,6,5,-8,3,5,7,9,6,5,-4,-4,-6,3,-9,-3,-10,-8,-5,7,2,-7,-7,-6,10,-1,-6,-9,3,4,10,6,-8,-2,-1,-3,10,-3,6,-9,9,-3,4,7,5,-9,1,-2,2,-4,-4,7,6,-2,-7,1,9,-3,7,2,3,6,9,-3,-5,-3,3,-4,7,-1,4,-2,-9,8,5,9,-1,2,-6,-10,-3,1,-2,6,10,-6,3,-9,-3,8,9,7,-4,-10,5,1,-5,-5,9,6,1,6,-2,-6,-6,-4,-2,4,10,-8,6,-1,2,-7,9,10,7,-4,3,-3,-4,3,-6,6,1,-10,-1,-7,9,6,7,-8,4,-3,-3,7,1,-5,-6,-4,-5,3,5,1,-4,-2,6,7,-3,8,-7,3,-6,-7,-1,9,-5,-2,-4,4,1,-3,7,7,-2,-6,-4,9,9,-4,6,4,10,4,10,-4,-6,-10,-8,-3,-5,-1,7,-1,-5,5,-10,5,-9,-4,6,2,6,7,10,-6,6,-4,-7,-9,1,6,-5,1,-1,-2,2,1,7,-2,7,-2,7,-7,-2,-9,-10,-4,7,8,-8,-4,-4,8,2,-8,2,-1,-5,-3,5,-10,8,-10,9,2,-8,-8,5,4,10,6,10,-10,8,-4,7,7,-7,-2,-5,-4,3,5,-9,-5,1,-10,-3,-7,-6,-5,4,10,-1,8,9,10,3,9,-6,-3,-10,-9,-5,-3,9,8,1,7,-2,-1,8,-2,9,-4,-10,4,-4,-2,-1,-2,4,-6,-9,9,1,-2,-1,9,-8,5,-4,7,-1,-6,5,-5,-7,-5,7,8,6,-6,-6,7,9,-3,10,-8,-10,-7,2,3,-4,-6,4,10,5,9,8,7,-9,-10,-10,-1,-1,-5,-10,-2,9,-9,5,-5,3,2,-9,1,-9,6,-9,10,-7,5,-5,4,-9,7,2,4,5,9,7,9,-10,7,-3,-1,4,-8,3,3,8,-5,3,6,-5,1,4,8,-6,-5,-4,9,-10,-6,-10,-6,2,-9,-1,4,-1,-10,4,10,4,9,10,3,5,-7,-10,-3,4,-9,8,-3,-8,-3,10,2,-9,-10,-9,10,-4,-8,2,9,5,3,1,10,8,2,5,1,-7,2,6,9,-1,-6,-10,10,-5,7,-8,7,-8,-3,-5,8,5,-9,4,-1,-4,-9,-4,-8,-2,4,1,8,-2,-4,-7,-10,-4,3,6,-6,-3,-5,-4,5,-9,5,-2,-9,4,-3,10,3,-2,-6,4,-1,5,-3,10,-4,-9,-8,2,7,-3,-8,4,8,10,6,-4], dtype = "int16")#candidate|3594|(1080,)|const|int16
call_3592 = relay.TupleGetItem(func_2617_call(relay.reshape(var_3593.astype('bool'), []), relay.reshape(const_3594.astype('int16'), [1080,]), ), 1)
call_3595 = relay.TupleGetItem(func_2621_call(relay.reshape(var_3593.astype('bool'), []), relay.reshape(const_3594.astype('int16'), [1080,]), ), 1)
func_1311_call = mod.get_global_var('func_1311')
func_1312_call = mutated_mod.get_global_var('func_1312')
call_3597 = relay.TupleGetItem(func_1311_call(), 0)
call_3598 = relay.TupleGetItem(func_1312_call(), 0)
uop_3605 = relay.erf(const_3594.astype('float64')) # shape=(1080,)
func_1182_call = mod.get_global_var('func_1182')
func_1183_call = mutated_mod.get_global_var('func_1183')
call_3616 = relay.TupleGetItem(func_1182_call(), 0)
call_3617 = relay.TupleGetItem(func_1183_call(), 0)
uop_3622 = relay.sqrt(uop_3605.astype('float32')) # shape=(1080,)
func_925_call = mod.get_global_var('func_925')
func_926_call = mutated_mod.get_global_var('func_926')
call_3624 = func_925_call()
call_3625 = func_925_call()
output = relay.Tuple([call_3588,call_3592,var_3593,call_3597,call_3616,uop_3622,call_3624,])
output2 = relay.Tuple([call_3589,call_3595,var_3593,call_3598,call_3617,uop_3622,call_3625,])
func_3628 = relay.Function([var_3593,], output)
mod['func_3628'] = func_3628
mod = relay.transform.InferType()(mod)
mutated_mod['func_3628'] = func_3628
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3629 = relay.var("var_3629", dtype = "bool", shape = ())#candidate|3629|()|var|bool
func_3628_call = mutated_mod.get_global_var('func_3628')
call_3630 = func_3628_call(var_3629)
output = call_3630
func_3631 = relay.Function([var_3629], output)
mutated_mod['func_3631'] = func_3631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1182_call = mod.get_global_var('func_1182')
func_1183_call = mutated_mod.get_global_var('func_1183')
call_3743 = relay.TupleGetItem(func_1182_call(), 0)
call_3744 = relay.TupleGetItem(func_1183_call(), 0)
func_115_call = mod.get_global_var('func_115')
func_118_call = mutated_mod.get_global_var('func_118')
const_3761 = relay.const([-9.610748,-5.096940,-3.119768,3.285958,-5.145895,0.422795,-8.361830,1.023226,-3.318951,2.919083,6.390932,1.750281,0.411759,6.521152,-2.855143,9.088042,-7.937592,-5.545344,0.796197,-9.960919,4.427436,6.610805,6.922730,5.595888,-4.537698,-4.665913,4.586722,-2.444556,0.035211,8.974567,-4.689468,-8.991478,9.932802,7.879580,-6.845146,-3.098467,-0.616345,1.509783,-1.217573,5.320421,-5.582412,-6.233009,-9.509791,-8.183604,-7.546770,2.566780,-1.745483,-5.665491,3.042301,-7.564188,4.654053,7.666585,-3.968699,0.295021,3.727649,0.280046,-3.191006,2.683792,2.433599,-2.082720,7.720489,-3.563217,1.852263,3.626769,-2.938177,-1.448583,-5.629637,2.562046,-4.790335,9.917570,-1.630030,6.470350,-7.018987,9.787707,-4.034301,-9.008778,5.542300,-1.458106,6.208418,1.603206,3.330783,9.338569,7.372477,4.683431,4.713348,1.270675,8.414654,-3.786665,0.752373,3.732436,6.157567,-5.038173,-6.233164,0.841856,-5.957704,-6.023897,-7.119539,-1.502734,-0.873207,9.196917,-4.116622,9.184483,-9.946810,-7.308992,4.899828,7.266855,4.645843,-0.901888,-1.179488,3.196413,-0.591579,7.477728,6.671135,3.444504,3.758279,5.322976,2.528490,0.019166,-0.143631,-8.703997,-7.335239,-0.325675,4.373920,3.670321,-8.885833,-1.232382,-4.242704,3.111390,4.371251,-8.294258,8.858991,8.359171,-9.486604,-3.415071,-4.528386,8.283582,8.191804,-6.585974,-8.258823,-2.476179,-6.293327,9.361304,-4.868586,-0.247922,5.553244,-7.224214,-2.496111,-2.293604,2.698069,0.723593,5.497548,-8.140386,-3.018762,4.556969,-6.811161,7.251221,-7.463677,-9.868319,9.956880,0.888772,0.008828,9.817102,3.664332,-8.734519,6.469033,-7.162683,-3.945226,4.969602,8.775511,8.374320,-6.986848,-0.491919,-5.332105,-6.280046,5.905010,-8.519342,9.195804,-8.830438,1.189523,4.603963,-4.773704,6.224009,-2.900069,7.600404,5.590631,-4.431669,0.667122,1.318883,1.566513,7.126699,9.728749,1.333870,6.254972,0.576853,-0.744755,8.896561,-4.763195,-6.743960,0.536479,-9.106173,-6.579246,0.762750,0.798783,9.974407,-3.675366,6.550645,4.778220,-6.026315,-2.523493,7.930643,1.948304,7.596696,-6.463587,-7.068429,2.702500,-2.879372,9.179329,8.847314,-9.431822,3.215144,1.683666,-9.861069,9.126601,3.523111,-3.580527,1.027417,-1.070876,1.396851,-6.168152,-5.581663,-1.557601,4.934609,-4.909733,-0.119690,-6.087126,8.163056,-8.661761,-1.535264,2.502573,1.031724,-2.337426,2.100675,5.054374,5.280276,-7.618830,2.344068,6.623108,6.518549,7.020428,-5.506758,7.964121,3.322188,-9.094733,-1.896922,-4.864707,1.787047,-2.552237,9.533039,-3.276434,0.085807,-4.432909,6.679176,8.226998,-3.849520,1.003739,-1.398651,-1.697185,-8.518877,9.207855,-4.405267,2.321872,6.134405,-4.319983,2.038376,1.574007,-3.655160,-9.981824,9.766278,-1.958212,-7.381141,2.803873,-8.573590,7.500819,-6.673257,6.950021,-1.904440,-7.405739,-0.250783,-5.659470,9.312029,-1.097111,3.880359,-8.341193,9.065204,-3.875294,-7.978944,-2.562547,-9.115956,3.593672,8.144412,8.473713,3.078416,8.479880,2.190102,-4.362612,5.920362,-5.745111,7.381168,-0.383843,0.867792,-5.052038,-5.628225,-6.028688,-4.326570,8.953732,1.725972,9.015006,-6.991693,-7.162435,-2.844422,0.496072,-2.816207,3.574079,-5.439815,-9.740078,-2.994867,5.503060,8.029399,8.772596,7.650693,1.374376,-6.808173,-2.975868,5.144483,-7.202801,4.605857,-4.337312,8.482993,3.281485,0.356604,3.655613,-9.048640,-4.519838,-8.485677,-1.380488,-4.643351,-4.638659,-6.518187,8.272748,-1.244690,-0.766180,6.068088,1.834107,-9.199389,-0.098199,-0.704791,0.869579,-4.721159,-7.527224,-8.244263,6.456083,5.326962,0.152655,-6.555307,9.455326,-1.328956,-1.952569,-0.511962,-5.778927,-2.318312,-3.095915,-0.299319,6.181857,9.747436,4.635797,-6.543980,-5.691761,8.123584,-6.080208,3.272651,-5.417502,9.686719,4.044372,-1.236713,-2.791167,7.401967,1.068165,-6.831399,-6.060216,-4.647724,0.400985,-8.171224,-9.634535,5.062408,3.663066,9.637921,-5.350577,-1.433599,-0.391322,2.770981,1.230865,-7.586684,-8.470911,-6.770059,-5.904277,2.480314,5.887937,-9.478995,4.347225,-8.586548,-1.738182,-0.843155,-3.904282,-1.621497,2.596571,7.629384,-3.648231,4.488551,9.467785,-8.059970,-7.153910,1.485913,8.323485,-8.228462,-2.004624,-0.898777,-2.537682,9.869782,9.860008,5.489998,-1.015291,-6.151403,-3.659254,5.929649,0.420647,-9.909059,5.008675,5.393971,6.261329,2.893920,2.158862,-3.159735,-0.011646,-3.246082,8.247365,-5.506035,4.542409,1.081369,-8.055148,2.428808,-4.190357,-1.358502,1.851148,-1.545757,6.424146,-4.948575,8.802690,-0.904467,7.840998,-1.426818,-5.450625,-4.885968,5.462926,-8.868600,-8.198192,3.056706,5.157056,9.819630,3.028318,5.029303,4.761052,1.304971,-5.822508,8.696482,2.586012,-2.443494,-7.819735,7.208312,-3.648565,-2.889208,1.543165,1.062264,4.503197,1.478735,1.628614,0.555706,0.396301,2.621887,-0.679801,1.262556,-4.823985,9.273860,-1.099642,-5.214640,-6.575621,3.271638,-9.519950,-8.164224,4.961352,7.744458,-6.562607,-6.155223,1.966188,8.765506,-4.288911,8.708452,7.784432,8.404701,0.035416,-9.136013,-1.873194,4.956287,2.344096,-0.964685,-0.119825,4.229970,-9.067140,-3.260248,8.084260,7.109404,-3.230595,5.891145,-8.685147,9.504012,-6.386834,2.920167,6.161326,-0.290469,8.906396,-4.456759,-7.423092,-9.533675,4.996702,-9.824958,5.701529,-1.705476,3.306488,8.952378,-4.551051,4.119814,-1.612331,-9.283092,-1.752340,-3.025004,3.434984,8.093894,-6.254291,4.512584,-2.833755,7.283098,5.015146,8.354892,3.086879,-2.392725,2.829655,-1.583121,3.852090,3.081347,0.750466,2.783585,-7.049422,-4.385785,-9.039463,-9.399029,-9.836704,-3.392785,5.788315,-9.820836,-8.147988,6.649078,-2.781616,-0.623450,-0.403346,2.029656,8.333667,-7.569984,2.989822,6.422843,-4.251057,-7.241152,4.531920,2.711964,-4.482372,1.033521,-1.140062,-4.403964,-1.310036,-3.086360,5.787062,2.848366,-6.079826,-9.618383,-2.231426,-3.744551,-8.232169,8.120449,8.971704,-6.429223,-5.062794,1.572193,-8.294255,-5.097064,-9.309308,3.038954,-8.249074,-3.802962,6.744002,8.540173,-8.054606,-5.213353,-4.864896,-1.866496,-5.206879,-2.928123,-2.581381,-4.173588,2.111501,-8.408488,0.532304,0.075301,-2.549766,3.738903,4.052383,7.685845,-6.835678,-8.381308,-9.441938,-9.787660,5.829701,1.314426,-6.997166,1.306065,-0.416914,8.619401,2.763637,-4.256958,0.018852,9.580768,-7.538158,-6.175793,1.313609,9.169044,-1.547456,-6.392417,-1.152726,7.875482,0.305818,3.893839,-6.828602,-6.633690,9.584688,6.884010,-1.380107,7.924245,-4.826132,9.927166,-6.113657,2.457773,-9.032393,9.424133,6.784546,-3.107916,0.967962,3.150659,-3.010254,0.571974,-6.781804,-6.517321,-1.185845,5.559308,-6.173932,-9.046089,3.662383,3.394628,7.140633,2.349177,1.686029,-1.676942,6.344070,2.899169,7.283089,1.819595,4.174213,-7.172850,-2.445027,-8.038447,-8.938627,3.862573,-2.147181,3.889298,7.312188,3.967305,-9.318757,1.244455,6.140418,-7.412766,-4.923436,-8.252118,6.005176,5.692699,-6.949840,-4.325826,-5.108260,-7.365217,-3.147122,-8.727721,-4.876349,5.295366,5.187390,-2.941124,2.017408,5.212710,7.714094,7.926600,-6.422776,-6.498814,9.037721,2.985526,-5.148342,-5.913659,-0.693619,2.914445,-5.572248,0.106769,6.990602,-8.953478,-7.451106,-4.974668,4.280657,4.671304,-7.477316,-5.798044,-0.749989,1.378785,-9.389026,-1.379377,7.259075,8.366264,-8.153849,1.338872,0.974812,-7.038446,-3.537064,3.356021,-8.297885,1.854853,-5.242882,-8.336411,-5.812312,7.512588,-8.786998,4.136155,1.488180,1.543351,6.426761,-3.958507,3.433600,5.235549,8.720994,0.493848,1.603772,5.923960,0.379785,-5.004016,0.728242,-6.320764,6.820078,4.779417,-8.381943,-9.354274,-5.757331,-6.605647,3.265265,2.129578,-3.806955,8.979948,5.881952,5.305130,-9.492892,-4.607129,-7.153176,1.142775,-5.983836,-6.110789,-2.703116,7.965445,5.948339,-0.657143,5.825076,-5.222497,-0.049638,5.663671,-1.471187,-0.580618,-2.483164,-0.467164,3.107179,8.672718,9.597503,6.254545,-8.641260,-6.656597,-0.139460,9.234535,-9.402040,-4.313497,1.833755,-0.300657,-5.396674,-1.788154,-7.844830,3.803785,4.412368,3.156660,7.952647,-0.521524,6.290517,5.362714,7.029602,4.728057,-0.838490,-2.159822,6.227407,9.837950,-0.586855,0.002580,1.856758,-2.782929,2.121751,7.287610,-6.845015,-4.455979,-2.552190,-5.958936,-6.379105,2.356271,7.600826,-6.575408,-1.024675,-0.739187], dtype = "float64")#candidate|3761|(840,)|const|float64
call_3760 = relay.TupleGetItem(func_115_call(relay.reshape(const_3761.astype('float64'), [5, 12, 14])), 0)
call_3762 = relay.TupleGetItem(func_118_call(relay.reshape(const_3761.astype('float64'), [5, 12, 14])), 0)
func_3285_call = mod.get_global_var('func_3285')
func_3287_call = mutated_mod.get_global_var('func_3287')
call_3770 = func_3285_call()
call_3771 = func_3285_call()
output = relay.Tuple([call_3743,call_3760,const_3761,call_3770,])
output2 = relay.Tuple([call_3744,call_3762,const_3761,call_3771,])
func_3782 = relay.Function([], output)
mod['func_3782'] = func_3782
mod = relay.transform.InferType()(mod)
mutated_mod['func_3782'] = func_3782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3782_call = mutated_mod.get_global_var('func_3782')
call_3783 = func_3782_call()
output = call_3783
func_3784 = relay.Function([], output)
mutated_mod['func_3784'] = func_3784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2457_call = mod.get_global_var('func_2457')
func_2459_call = mutated_mod.get_global_var('func_2459')
call_3811 = relay.TupleGetItem(func_2457_call(), 0)
call_3812 = relay.TupleGetItem(func_2459_call(), 0)
var_3814 = relay.var("var_3814", dtype = "int8", shape = (3, 8, 7))#candidate|3814|(3, 8, 7)|var|int8
bop_3815 = relay.power(call_3811.astype('float32'), var_3814.astype('float32')) # shape=(3, 8, 7)
bop_3818 = relay.power(call_3812.astype('float32'), var_3814.astype('float32')) # shape=(3, 8, 7)
var_3823 = relay.var("var_3823", dtype = "float32", shape = (3, 8, 7))#candidate|3823|(3, 8, 7)|var|float32
bop_3824 = relay.multiply(bop_3815.astype('float32'), relay.reshape(var_3823.astype('float32'), relay.shape_of(bop_3815))) # shape=(3, 8, 7)
bop_3827 = relay.multiply(bop_3818.astype('float32'), relay.reshape(var_3823.astype('float32'), relay.shape_of(bop_3818))) # shape=(3, 8, 7)
bop_3832 = relay.bitwise_and(bop_3815.astype('uint32'), relay.reshape(bop_3824.astype('uint32'), relay.shape_of(bop_3815))) # shape=(3, 8, 7)
bop_3835 = relay.bitwise_and(bop_3818.astype('uint32'), relay.reshape(bop_3827.astype('uint32'), relay.shape_of(bop_3818))) # shape=(3, 8, 7)
output = bop_3832
output2 = bop_3835
func_3843 = relay.Function([var_3814,var_3823,], output)
mod['func_3843'] = func_3843
mod = relay.transform.InferType()(mod)
mutated_mod['func_3843'] = func_3843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3843_call = mutated_mod.get_global_var('func_3843')
var_3845 = relay.var("var_3845", dtype = "int8", shape = (3, 8, 7))#candidate|3845|(3, 8, 7)|var|int8
var_3846 = relay.var("var_3846", dtype = "float32", shape = (3, 8, 7))#candidate|3846|(3, 8, 7)|var|float32
call_3844 = func_3843_call(var_3845,var_3846,)
output = call_3844
func_3847 = relay.Function([var_3845,var_3846,], output)
mutated_mod['func_3847'] = func_3847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3782_call = mod.get_global_var('func_3782')
func_3784_call = mutated_mod.get_global_var('func_3784')
call_3858 = relay.TupleGetItem(func_3782_call(), 1)
call_3859 = relay.TupleGetItem(func_3784_call(), 1)
uop_3876 = relay.sigmoid(call_3858.astype('float64')) # shape=(5, 12, 14)
uop_3878 = relay.sigmoid(call_3859.astype('float64')) # shape=(5, 12, 14)
output = relay.Tuple([uop_3876,])
output2 = relay.Tuple([uop_3878,])
func_3882 = relay.Function([], output)
mod['func_3882'] = func_3882
mod = relay.transform.InferType()(mod)
output = func_3882()
func_3883 = relay.Function([], output)
mutated_mod['func_3883'] = func_3883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_895_call = mod.get_global_var('func_895')
func_896_call = mutated_mod.get_global_var('func_896')
call_3897 = relay.TupleGetItem(func_895_call(), 0)
call_3898 = relay.TupleGetItem(func_896_call(), 0)
func_2332_call = mod.get_global_var('func_2332')
func_2335_call = mutated_mod.get_global_var('func_2335')
const_3902 = relay.const([[-8],[-2],[-2],[-1],[-2],[4],[-10],[-6],[2],[-10],[-6],[-4],[10],[-1],[-6],[2],[7],[-3],[2],[-2],[6],[-2],[7],[-7],[-7],[-5],[2],[2],[-9],[-7],[-6],[-9],[2],[4],[5],[-10],[1],[9],[-9],[7],[5],[-1],[-1],[-1],[5],[-5],[6],[4],[7],[3],[3],[7],[5],[-2],[-4],[2],[-10],[8],[-7],[-2],[-8],[5],[-1],[3],[-10],[-2],[-10],[-9],[-2],[-1],[1],[-6],[8],[4],[7],[-2],[-3],[1],[8],[1],[-10],[1],[9],[7],[10],[-10],[1],[3],[3],[7],[-3]], dtype = "uint8")#candidate|3902|(91, 1)|const|uint8
call_3901 = relay.TupleGetItem(func_2332_call(relay.reshape(const_3902.astype('uint8'), [1, 7, 13])), 2)
call_3903 = relay.TupleGetItem(func_2335_call(relay.reshape(const_3902.astype('uint8'), [1, 7, 13])), 2)
output = relay.Tuple([call_3897,call_3901,const_3902,])
output2 = relay.Tuple([call_3898,call_3903,const_3902,])
func_3911 = relay.Function([], output)
mod['func_3911'] = func_3911
mod = relay.transform.InferType()(mod)
output = func_3911()
func_3912 = relay.Function([], output)
mutated_mod['func_3912'] = func_3912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3578_call = mod.get_global_var('func_3578')
func_3580_call = mutated_mod.get_global_var('func_3580')
call_3917 = relay.TupleGetItem(func_3578_call(), 0)
call_3918 = relay.TupleGetItem(func_3580_call(), 0)
output = call_3917
output2 = call_3918
func_3919 = relay.Function([], output)
mod['func_3919'] = func_3919
mod = relay.transform.InferType()(mod)
mutated_mod['func_3919'] = func_3919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3919_call = mutated_mod.get_global_var('func_3919')
call_3920 = func_3919_call()
output = call_3920
func_3921 = relay.Function([], output)
mutated_mod['func_3921'] = func_3921
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3976 = relay.var("var_3976", dtype = "int16", shape = ())#candidate|3976|()|var|int16
var_3977 = relay.var("var_3977", dtype = "int16", shape = (12, 16, 8))#candidate|3977|(12, 16, 8)|var|int16
bop_3978 = relay.multiply(var_3976.astype('int16'), var_3977.astype('int16')) # shape=(12, 16, 8)
func_254_call = mod.get_global_var('func_254')
func_260_call = mutated_mod.get_global_var('func_260')
const_3983 = relay.const([4.172752,9.115498,-4.493837,-4.233544,8.867508,3.197404,-7.016584,-8.794239,-9.527127,-9.726087,7.006180,2.433884,4.992642,7.543841,-6.651154,-5.956289,-1.845519,7.849900,-0.570984,4.168516,-5.869708], dtype = "float64")#candidate|3983|(21,)|const|float64
var_3984 = relay.var("var_3984", dtype = "float64", shape = (315,))#candidate|3984|(315,)|var|float64
var_3985 = relay.var("var_3985", dtype = "float64", shape = (84,))#candidate|3985|(84,)|var|float64
var_3986 = relay.var("var_3986", dtype = "float64", shape = (60, 14))#candidate|3986|(60, 14)|var|float64
call_3982 = relay.TupleGetItem(func_254_call(relay.reshape(const_3983.astype('float64'), [7, 1, 3]), relay.reshape(var_3984.astype('float64'), [7, 15, 3]), relay.reshape(var_3985.astype('float64'), [7, 4, 3]), relay.reshape(var_3986.astype('float64'), [840,]), ), 3)
call_3987 = relay.TupleGetItem(func_260_call(relay.reshape(const_3983.astype('float64'), [7, 1, 3]), relay.reshape(var_3984.astype('float64'), [7, 15, 3]), relay.reshape(var_3985.astype('float64'), [7, 4, 3]), relay.reshape(var_3986.astype('float64'), [840,]), ), 3)
uop_3991 = relay.acos(bop_3978.astype('float64')) # shape=(12, 16, 8)
output = relay.Tuple([call_3982,const_3983,var_3984,var_3985,var_3986,uop_3991,])
output2 = relay.Tuple([call_3987,const_3983,var_3984,var_3985,var_3986,uop_3991,])
func_3998 = relay.Function([var_3976,var_3977,var_3984,var_3985,var_3986,], output)
mod['func_3998'] = func_3998
mod = relay.transform.InferType()(mod)
var_3999 = relay.var("var_3999", dtype = "int16", shape = ())#candidate|3999|()|var|int16
var_4000 = relay.var("var_4000", dtype = "int16", shape = (12, 16, 8))#candidate|4000|(12, 16, 8)|var|int16
var_4001 = relay.var("var_4001", dtype = "float64", shape = (315,))#candidate|4001|(315,)|var|float64
var_4002 = relay.var("var_4002", dtype = "float64", shape = (84,))#candidate|4002|(84,)|var|float64
var_4003 = relay.var("var_4003", dtype = "float64", shape = (60, 14))#candidate|4003|(60, 14)|var|float64
output = func_3998(var_3999,var_4000,var_4001,var_4002,var_4003,)
func_4004 = relay.Function([var_3999,var_4000,var_4001,var_4002,var_4003,], output)
mutated_mod['func_4004'] = func_4004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3919_call = mod.get_global_var('func_3919')
func_3921_call = mutated_mod.get_global_var('func_3921')
call_4022 = func_3919_call()
call_4023 = func_3919_call()
var_4027 = relay.var("var_4027", dtype = "uint16", shape = (5, 8, 9))#candidate|4027|(5, 8, 9)|var|uint16
bop_4028 = relay.mod(call_4022.astype('float64'), relay.reshape(var_4027.astype('float64'), relay.shape_of(call_4022))) # shape=(5, 8, 9)
bop_4031 = relay.mod(call_4023.astype('float64'), relay.reshape(var_4027.astype('float64'), relay.shape_of(call_4023))) # shape=(5, 8, 9)
uop_4066 = relay.erf(var_4027.astype('float32')) # shape=(5, 8, 9)
output = relay.Tuple([bop_4028,uop_4066,])
output2 = relay.Tuple([bop_4031,uop_4066,])
func_4070 = relay.Function([var_4027,], output)
mod['func_4070'] = func_4070
mod = relay.transform.InferType()(mod)
mutated_mod['func_4070'] = func_4070
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4071 = relay.var("var_4071", dtype = "uint16", shape = (5, 8, 9))#candidate|4071|(5, 8, 9)|var|uint16
func_4070_call = mutated_mod.get_global_var('func_4070')
call_4072 = func_4070_call(var_4071)
output = call_4072
func_4073 = relay.Function([var_4071], output)
mutated_mod['func_4073'] = func_4073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_995_call = mod.get_global_var('func_995')
func_997_call = mutated_mod.get_global_var('func_997')
call_4084 = func_995_call()
call_4085 = func_995_call()
func_2354_call = mod.get_global_var('func_2354')
func_2355_call = mutated_mod.get_global_var('func_2355')
call_4096 = relay.TupleGetItem(func_2354_call(), 0)
call_4097 = relay.TupleGetItem(func_2355_call(), 0)
uop_4124 = relay.log2(call_4096.astype('float64')) # shape=(3, 1, 7)
uop_4126 = relay.log2(call_4097.astype('float64')) # shape=(3, 1, 7)
output = relay.Tuple([call_4084,uop_4124,])
output2 = relay.Tuple([call_4085,uop_4126,])
func_4138 = relay.Function([], output)
mod['func_4138'] = func_4138
mod = relay.transform.InferType()(mod)
mutated_mod['func_4138'] = func_4138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4138_call = mutated_mod.get_global_var('func_4138')
call_4139 = func_4138_call()
output = call_4139
func_4140 = relay.Function([], output)
mutated_mod['func_4140'] = func_4140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4218 = relay.var("var_4218", dtype = "int8", shape = (10, 5, 7))#candidate|4218|(10, 5, 7)|var|int8
var_4219 = relay.var("var_4219", dtype = "int8", shape = (10, 5, 7))#candidate|4219|(10, 5, 7)|var|int8
bop_4220 = relay.greater_equal(var_4218.astype('bool'), relay.reshape(var_4219.astype('bool'), relay.shape_of(var_4218))) # shape=(10, 5, 7)
uop_4229 = relay.asinh(var_4219.astype('float32')) # shape=(10, 5, 7)
output = relay.Tuple([bop_4220,uop_4229,])
output2 = relay.Tuple([bop_4220,uop_4229,])
func_4235 = relay.Function([var_4218,var_4219,], output)
mod['func_4235'] = func_4235
mod = relay.transform.InferType()(mod)
var_4236 = relay.var("var_4236", dtype = "int8", shape = (10, 5, 7))#candidate|4236|(10, 5, 7)|var|int8
var_4237 = relay.var("var_4237", dtype = "int8", shape = (10, 5, 7))#candidate|4237|(10, 5, 7)|var|int8
output = func_4235(var_4236,var_4237,)
func_4238 = relay.Function([var_4236,var_4237,], output)
mutated_mod['func_4238'] = func_4238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2234_call = mod.get_global_var('func_2234')
func_2236_call = mutated_mod.get_global_var('func_2236')
call_4261 = relay.TupleGetItem(func_2234_call(), 2)
call_4262 = relay.TupleGetItem(func_2236_call(), 2)
output = relay.Tuple([call_4261,])
output2 = relay.Tuple([call_4262,])
func_4265 = relay.Function([], output)
mod['func_4265'] = func_4265
mod = relay.transform.InferType()(mod)
output = func_4265()
func_4266 = relay.Function([], output)
mutated_mod['func_4266'] = func_4266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4138_call = mod.get_global_var('func_4138')
func_4140_call = mutated_mod.get_global_var('func_4140')
call_4280 = relay.TupleGetItem(func_4138_call(), 1)
call_4281 = relay.TupleGetItem(func_4140_call(), 1)
output = call_4280
output2 = call_4281
func_4305 = relay.Function([], output)
mod['func_4305'] = func_4305
mod = relay.transform.InferType()(mod)
output = func_4305()
func_4306 = relay.Function([], output)
mutated_mod['func_4306'] = func_4306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1580_call = mod.get_global_var('func_1580')
func_1582_call = mutated_mod.get_global_var('func_1582')
call_4317 = relay.TupleGetItem(func_1580_call(), 0)
call_4318 = relay.TupleGetItem(func_1582_call(), 0)
output = relay.Tuple([call_4317,])
output2 = relay.Tuple([call_4318,])
func_4337 = relay.Function([], output)
mod['func_4337'] = func_4337
mod = relay.transform.InferType()(mod)
output = func_4337()
func_4338 = relay.Function([], output)
mutated_mod['func_4338'] = func_4338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4138_call = mod.get_global_var('func_4138')
func_4140_call = mutated_mod.get_global_var('func_4140')
call_4360 = relay.TupleGetItem(func_4138_call(), 0)
call_4361 = relay.TupleGetItem(func_4140_call(), 0)
output = relay.Tuple([call_4360,])
output2 = relay.Tuple([call_4361,])
func_4368 = relay.Function([], output)
mod['func_4368'] = func_4368
mod = relay.transform.InferType()(mod)
output = func_4368()
func_4369 = relay.Function([], output)
mutated_mod['func_4369'] = func_4369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3782_call = mod.get_global_var('func_3782')
func_3784_call = mutated_mod.get_global_var('func_3784')
call_4370 = relay.TupleGetItem(func_3782_call(), 0)
call_4371 = relay.TupleGetItem(func_3784_call(), 0)
output = call_4370
output2 = call_4371
func_4374 = relay.Function([], output)
mod['func_4374'] = func_4374
mod = relay.transform.InferType()(mod)
output = func_4374()
func_4375 = relay.Function([], output)
mutated_mod['func_4375'] = func_4375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1580_call = mod.get_global_var('func_1580')
func_1582_call = mutated_mod.get_global_var('func_1582')
call_4387 = relay.TupleGetItem(func_1580_call(), 0)
call_4388 = relay.TupleGetItem(func_1582_call(), 0)
func_115_call = mod.get_global_var('func_115')
func_118_call = mutated_mod.get_global_var('func_118')
const_4390 = relay.const([[-7.197843,2.080070,8.313068,7.257046,2.250068,-5.535514,-7.344576,0.543023,-8.669774,-8.367441,8.466121,-0.942127,2.624175,1.470683,6.980652,3.720123,5.485666,-4.567642,7.339491,5.483390,-5.561788,-8.922503,-5.654322,4.936230,-2.969891,6.694871,3.120543,-9.249763,8.623706,1.664043,1.315035,-7.582685,6.691100,-3.316288,-4.653868,-2.759933,0.918656,8.959091,-7.143754,-7.346223,-7.412435,-9.785891,2.216550,1.821335,-4.836770,0.079298,4.364746,3.935515,9.955714,9.285264,7.553219,-8.896151,8.035653,-0.084960,-6.268638,-1.185544,-7.923110,-0.819673,5.686977,-8.889350,-8.224630,-0.898433,-9.734105,1.289939,5.814457,0.428607,-7.411741,9.691879,-2.355631,3.123342],[8.930718,3.106487,-6.177848,7.953055,1.566934,-5.721048,-1.444957,2.896923,-5.674617,-2.748824,-5.199165,-2.709617,7.275103,-9.260981,2.916311,-0.037848,9.009220,5.337983,2.993890,0.413984,-4.011981,2.813717,-0.219709,6.193053,2.046249,-8.683183,-2.625589,-8.486422,6.722068,3.514311,-5.921015,5.587813,8.483393,5.967315,1.776180,-4.550986,-7.414437,-5.945026,-3.876955,3.759841,6.426783,7.160227,-5.068809,9.928731,-8.193450,6.740013,-1.188416,-6.208426,8.939439,0.519821,9.234326,-0.914295,3.896339,-5.334580,6.959384,1.661021,-2.289148,-0.134403,-5.463972,-3.802927,-8.276238,8.773666,-6.094157,-6.030880,5.551546,-4.335727,8.472866,1.667554,-2.092207,9.072115],[2.134323,-4.301865,4.643236,5.548493,4.427068,9.793885,4.250503,-3.457899,-4.383055,6.421754,-5.187033,-8.779258,-5.223147,-7.574382,-1.184005,-5.651505,-5.590578,7.211173,9.189607,5.047407,-2.238833,-1.935319,6.700065,0.311281,-3.072802,-8.595355,-3.001549,-3.100373,-7.694810,0.630322,-9.404737,-6.845323,1.438195,6.902135,-8.436948,8.391100,8.591138,-4.902096,-3.478973,-3.775500,-2.367413,-6.019907,-9.502911,-7.003975,6.114520,6.945446,4.754249,5.739123,4.690035,-1.026598,2.603666,-4.097729,3.704947,-1.703678,-0.528805,-4.162348,9.563019,4.987591,-6.713128,-0.867759,-9.265976,7.682073,9.397306,-6.713389,5.346787,6.600234,-8.152902,2.003133,-3.422392,8.224937],[8.894701,-1.625849,-0.282464,-3.852297,0.674909,8.079594,-8.676987,0.211667,7.981855,-7.953549,-7.903863,7.531140,9.502991,7.072654,-8.885288,-3.665686,-4.260896,-6.429733,-5.791548,5.786785,8.737078,8.654933,-7.357961,-1.856568,-7.311069,-3.568703,-7.509902,9.042204,9.175392,4.447651,-0.604318,8.355437,-5.378513,5.415749,-2.294294,-1.405579,8.648780,4.465565,8.391917,2.329552,-6.416261,-5.415806,-4.859437,-4.445780,-6.533166,9.444988,7.953346,-6.910815,3.178704,-3.466298,-9.239381,8.813380,8.299520,1.991283,-4.494867,-5.591587,3.129837,5.056720,9.091350,6.235425,-8.666542,-5.097849,6.606945,5.634948,-4.440396,-4.486467,8.275628,0.950516,-6.655062,5.605555],[4.538525,0.226264,-0.043230,-7.814782,-5.389917,-3.382011,6.213386,-5.613649,1.481319,6.979229,6.302733,-7.259812,4.620600,4.420616,1.643996,8.238633,3.413852,8.083318,1.001832,0.820541,0.985321,-3.724316,-0.067640,0.113088,3.131309,8.173184,-8.191624,5.692634,2.222626,7.492050,0.682231,-3.913672,4.182396,-0.523934,0.306608,-6.413485,9.073541,8.601569,4.716292,7.307121,2.257700,0.926704,7.217720,-0.763650,-2.310067,5.288754,-9.042307,-2.246513,9.948673,-4.200063,-4.300948,2.159965,-7.202489,7.661822,7.970906,-3.483160,9.116453,-0.370708,-1.782503,-5.199193,-8.076441,-2.488507,4.484971,-8.662691,9.755030,3.710032,8.995671,-8.301629,-0.521530,6.843941],[-7.608289,-4.820958,1.838852,-9.206258,1.757059,-1.768911,-2.879169,-4.675687,5.734630,-7.456307,-3.152343,-5.948599,-0.179026,7.857394,-7.765520,-4.100126,-4.790092,9.857019,4.069269,1.184670,-6.682041,-0.475016,-7.447382,-4.824310,3.163670,-4.364854,-2.478067,0.404990,8.820079,9.943617,3.702783,3.902803,6.617691,-3.220843,-9.382241,9.668043,6.792006,-4.785511,1.486330,-3.001506,1.554701,-0.860579,1.960519,6.954292,-4.847335,2.742302,-1.713686,0.024110,4.218644,2.868854,4.779388,-2.947642,-9.051490,-1.637870,5.578032,7.786297,4.320037,-2.284891,1.559000,-2.937596,0.668050,-9.081235,-8.797403,4.235704,5.728716,5.967894,0.575326,3.896470,-2.233605,9.217282],[-5.890670,3.792127,-5.676249,0.255322,5.904691,5.329378,4.375167,-0.814931,7.199932,3.241687,-5.623852,7.074748,-1.905698,-0.791729,-5.925516,-4.778732,-9.397676,7.114623,2.799923,-1.646955,-4.356063,7.412750,5.089445,2.532192,0.676761,1.867146,4.532688,-6.362732,-5.573787,8.505721,-2.571637,2.712038,7.179717,-8.648843,2.643182,2.532267,-3.048446,1.591839,-2.180337,1.893082,2.380624,-7.036118,0.887412,-9.122877,6.157552,1.033363,1.876194,-2.842622,3.320679,-7.211278,5.235968,-8.086740,-9.114030,-3.617071,-2.001311,9.382653,-8.200861,-6.136968,-7.653368,3.199205,-3.996520,3.704430,-5.876441,-2.475179,-1.535693,-5.975028,-9.541848,-8.566512,4.646813,-3.040678],[-6.615424,1.749179,9.140653,-5.356422,7.007064,2.985588,-1.172481,4.069027,-8.061844,-5.499740,-3.211268,-4.220585,1.443404,-2.300448,4.671582,-7.886192,-5.505431,9.071549,-3.134960,6.007201,7.309143,2.642106,1.720922,-6.727430,4.310463,1.265291,-1.961405,-8.182105,-4.714456,-5.854989,4.800126,1.840919,-8.214243,0.600105,-4.951440,-5.983570,7.091470,-9.586303,8.653314,-1.079334,9.765175,-9.119999,-1.826615,-5.894001,2.234228,-1.822419,3.200662,-9.088208,-2.090494,-2.278235,-0.205973,1.708154,3.836045,9.404372,-1.729808,6.061060,9.529527,1.123174,-4.860739,-7.617468,-2.366701,5.325531,-4.964379,-7.188252,0.142566,0.118355,3.022517,-3.734040,-6.695024,5.593690],[5.047939,8.515195,1.465643,-4.517054,-7.535528,3.713728,-3.768451,-4.575453,0.288549,3.307028,-1.114147,-7.405159,5.853541,-1.361918,-9.598079,9.936062,-9.301605,-8.392410,1.423242,7.230601,7.645644,2.591335,1.982760,-1.781158,-8.123063,-7.358986,9.620453,-1.609776,1.979736,-1.132403,1.314964,2.469232,-6.236149,7.387016,7.473840,2.278770,6.611799,-0.766855,8.960991,1.114583,-8.260506,-4.872803,7.535421,3.207002,5.162416,-5.171532,9.540777,-9.283964,-6.677804,8.132792,-4.140618,-9.053607,3.166063,4.204921,-3.268058,-9.844651,-9.624747,-5.789751,-3.514758,-5.691351,2.884481,-0.056379,-9.862956,1.033698,-7.179645,-9.452750,2.857082,-9.756818,4.966160,3.602196],[8.769239,3.385828,-1.450880,5.656337,3.840505,-6.646363,-7.552028,6.087868,6.883098,2.982817,4.781724,0.338840,8.121114,-6.486570,2.028831,-0.414012,2.224650,-8.931890,1.823286,-6.861276,8.534064,3.699676,3.223010,-0.527841,6.199722,-2.168973,-1.052923,-0.677951,-7.210336,-7.093186,-2.446663,-2.605705,-9.152320,-5.024775,-4.144231,-8.633936,2.731050,9.956101,-6.296156,-0.783399,-0.749916,7.687228,-5.659721,-2.397874,-0.807676,-0.796996,6.171742,-6.660028,9.748121,3.430228,-5.838530,7.246242,7.594577,-8.549903,-3.155382,-3.666839,-4.700018,7.888622,9.803256,3.978285,6.142065,-7.466198,-0.018582,-3.690348,9.585906,9.407119,-1.260775,-2.706612,9.680768,9.010019],[1.567685,-6.229103,2.843443,-9.897317,0.225486,-6.810311,9.997957,4.976716,-9.831261,5.554035,1.191266,4.469773,4.849773,-4.327637,-1.195293,-1.596205,2.594013,2.473483,4.772316,2.392485,2.389715,0.593055,-8.381399,-5.887471,-8.473589,2.793823,-7.026985,0.344199,-1.427438,9.585368,-3.901557,-4.027636,-8.584810,-7.929206,0.232920,4.452098,-7.161892,2.148268,2.569211,5.451860,4.693752,-7.782300,1.960771,3.573805,4.503242,-0.203688,-1.892364,8.526132,2.957150,-2.368884,1.047311,4.546852,-7.280457,-5.283466,2.457782,-9.824356,-3.636537,-8.817252,-5.505905,9.824394,-9.210597,0.285486,-7.945358,-5.356194,6.871554,-9.061032,-2.087381,-3.244759,-0.268445,-4.714340],[-5.690715,-9.730045,3.277463,-4.470996,-0.324328,2.946378,3.237736,-1.415915,5.058324,8.504550,4.719926,6.622060,-0.613405,8.361853,9.472346,-4.395054,-8.915245,-2.495423,4.436977,1.614667,0.605390,1.931489,-4.695970,-4.066051,-8.580384,-0.625437,-2.321092,4.897945,1.463872,4.837134,-2.952140,-7.830222,9.891202,9.429014,3.902340,-3.565785,6.358141,1.350101,3.570556,-0.912236,-1.012434,-7.688607,-1.275803,7.242620,-6.564523,-0.560931,-5.673436,2.854771,-8.807125,-6.294145,7.284377,-5.398495,-4.413441,-8.038463,6.856973,4.723940,2.511794,-8.631378,6.406389,2.413129,0.107970,7.252283,-8.515965,2.735982,3.378362,-3.913670,-9.290360,8.667195,8.805170,8.572329]], dtype = "float64")#candidate|4390|(12, 70)|const|float64
call_4389 = relay.TupleGetItem(func_115_call(relay.reshape(const_4390.astype('float64'), [5, 12, 14])), 0)
call_4391 = relay.TupleGetItem(func_118_call(relay.reshape(const_4390.astype('float64'), [5, 12, 14])), 0)
func_3217_call = mod.get_global_var('func_3217')
func_3220_call = mutated_mod.get_global_var('func_3220')
var_4396 = relay.var("var_4396", dtype = "bool", shape = (84,))#candidate|4396|(84,)|var|bool
call_4395 = relay.TupleGetItem(func_3217_call(relay.reshape(var_4396.astype('bool'), [84,])), 4)
call_4397 = relay.TupleGetItem(func_3220_call(relay.reshape(var_4396.astype('bool'), [84,])), 4)
output = relay.Tuple([call_4387,call_4389,const_4390,call_4395,var_4396,])
output2 = relay.Tuple([call_4388,call_4391,const_4390,call_4397,var_4396,])
func_4401 = relay.Function([var_4396,], output)
mod['func_4401'] = func_4401
mod = relay.transform.InferType()(mod)
mutated_mod['func_4401'] = func_4401
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4402 = relay.var("var_4402", dtype = "bool", shape = (84,))#candidate|4402|(84,)|var|bool
func_4401_call = mutated_mod.get_global_var('func_4401')
call_4403 = func_4401_call(var_4402)
output = call_4403
func_4404 = relay.Function([var_4402], output)
mutated_mod['func_4404'] = func_4404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3782_call = mod.get_global_var('func_3782')
func_3784_call = mutated_mod.get_global_var('func_3784')
call_4411 = relay.TupleGetItem(func_3782_call(), 1)
call_4412 = relay.TupleGetItem(func_3784_call(), 1)
output = relay.Tuple([call_4411,])
output2 = relay.Tuple([call_4412,])
func_4415 = relay.Function([], output)
mod['func_4415'] = func_4415
mod = relay.transform.InferType()(mod)
mutated_mod['func_4415'] = func_4415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4415_call = mutated_mod.get_global_var('func_4415')
call_4416 = func_4415_call()
output = call_4416
func_4417 = relay.Function([], output)
mutated_mod['func_4417'] = func_4417
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4435 = relay.var("var_4435", dtype = "float64", shape = (4, 15, 8))#candidate|4435|(4, 15, 8)|var|float64
uop_4436 = relay.cos(var_4435.astype('float64')) # shape=(4, 15, 8)
uop_4442 = relay.sin(uop_4436.astype('float32')) # shape=(4, 15, 8)
output = uop_4442
output2 = uop_4442
func_4445 = relay.Function([var_4435,], output)
mod['func_4445'] = func_4445
mod = relay.transform.InferType()(mod)
var_4446 = relay.var("var_4446", dtype = "float64", shape = (4, 15, 8))#candidate|4446|(4, 15, 8)|var|float64
output = func_4445(var_4446)
func_4447 = relay.Function([var_4446], output)
mutated_mod['func_4447'] = func_4447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3911_call = mod.get_global_var('func_3911')
func_3912_call = mutated_mod.get_global_var('func_3912')
call_4475 = relay.TupleGetItem(func_3911_call(), 0)
call_4476 = relay.TupleGetItem(func_3912_call(), 0)
uop_4482 = relay.asin(call_4475.astype('float32')) # shape=(3, 1, 7)
uop_4484 = relay.asin(call_4476.astype('float32')) # shape=(3, 1, 7)
func_1132_call = mod.get_global_var('func_1132')
func_1135_call = mutated_mod.get_global_var('func_1135')
const_4497 = relay.const(-3, dtype = "int16")#candidate|4497|()|const|int16
const_4498 = relay.const([-4,-1,-1,-7,2,1,3,-7,-8,-6,2,-5,-5,-8,-5,-6,-3,8,-9,-3,8,6,-3,-4,1,-3,7,-1,4,1,-4,10,5,1,2,-6,8,-2,4,-2,-8,-9,5,-7,9,8,-6,-9,6,-6,4,1,-3,-10,2,3,1,5,2,-4,-2,2,-3,-9,-1,-1,5,4,6,-5,10,-8,-10,4,7,-10,-4,-4,-3,8,-8,-8,1,-10,-8,5,5,-6,8,-6,9,3,10,2,2,7,7,2,-7,-4,9,2,5,-8,7,-10,-2,2,4,-7,-4,-6,-10,-8,5,4,1,8,4,-9,-4,9,-3,9,-5,-4,1,-9,-10,-1,-6,9,-1,-3,6,5,-2,5,-5,1,-3,10,-4,-6,-5,1,4,-9,10,-1,6,4,2,1,6,-9,8,-2,8,9,8,5,4,10,-7,-8,-9,-1,6,8,6,2,9,-8,-3,-8,-9,-5,-6,6,-6,-6,-1,-5,9,-10,3,10,-5,8,-5,2,-1,8,-2,1,-3,4,-4,-2,4,-7,-3,10,-5,-7,-7,4,-6,5,9,7,-7,-5,-9,3,8,-2,-8,8,-1,2,3,-7,-2,-6,-10,-4,-3,-7,7,-6,1,5,-10,-1,-7,-10,2,-1,10,5,10,9,10,6,6,-2,7,6,-10,10,-1,2,-10,8,-10,-3,4,-6,8,2,1,2,-3,7,5,-5,-10,2,7,1,2,-2,6,1,-9,9,-10,9,-1,-9,8,5,-8,-9,4,4,3,-4,-3,2,-9,1,-4,-3,1,-1,3,-8,-2,7,6,-6,9,-10,5,4,5,-5,10,-3,-1,1,-10,-8,5,-2,9,1,-6,-10,-5,8,2,8,-3,-4,-5,2,-3,10,6,-10,-8,10,-4,-8,5,-6,9,-10,4,9,-8,-5,-1,-8,6,9,8,9,-2,-8,3,5,-9,4,-10,1,6,-8,8,6,-3,-8,-6,3,-6,-4,-7,10,-5,-7,1,-2,3,-6,9,5,-8,-5,1,-10,-10,-5,3,-5,4,-3,10,-2,7,-4,-1,-10,-3,3,4,-3,8,-3,5,-9,-10,4,8,-2,7,1,6,-8,6,-5,5,-5,5,-1,-6,1,-3,-3,-2,-5,-3,-8,-10,10,-6,-6,-10,-3,9,-7,-6,-8,-5,9,-9,8,-1,-3,-1,-6,-5,-9,3,1,-5,6,1,10,6,5,4,-7,8,-5,-2,-7,5,-3,-7,10,-7,3,2,-3,-5,-6,-2,3,5,-10,-10,6,-4,-4,5,2,2,-9,-1,5,-3,-4,-5,6,6,7,-4,3,-1,-8,1,-8,7,9,2,-5,-4,3,-5,-7,4,7,6,7,-7,4,4,2,1,-3,-5,1,7,-9,2,3,2,5,2,-7,-6,-8,5,4,-3,-3,5,-10,-8,5,4,6,-2,6,-5,-4,4,-1,-3,-6,-4,-7,-3,-1,3,-8,8,7,-7,3,-3,-2,8,-5,10,7,10,-3,8,-1,4,2,-5,1,9,3,10,1,9,-6,9,5,7,10,3,-10,3,8,-10,-10,-2,5,10,-9,3,-10,-1,2,4,-5,3,6,9,4,5,-10,-10,-9,10,9,-5,6,5,-4,-7,-6,6,8,5,7,-9,7,2,8,-5,-5,-8,-6,6,2,9,-8,1,2,-10,-6,-6,6,2,-1,-3,-7,7,3,-3,1,-4,-9,-4,1,-2,3,-1,-9,3,9,-6,6,-10,-9,4,5,8,3,8,6,-10,-9,7,3,6,7,-10,7,2,5,5,-3,5,-5,-9,-3,9,9,10,8,-6,9,-6,8,-2,3,4,-8,-4,-1,3,4,-6,8,7,-3,8,10,6,-1,2,6,4,6,9,2,3,-4,9,6,-7,-10,9,-1,10,5,-10,10,7,1,-3,-7,-7,5,4,-3,-10,-10,-2,6,-6,6,4,-9,1,-6,-1,1,6,5,7,5,-10,6,5,-4,5,-9,7,9,-6,-4,-7,-6,-3,5,8,9,2,-9,-9,1,4,-2,-6,1,-5,-8,4,-5,4,8,7,-9,3,9,-1,-8,8,8,-3,5,-5,-8,6,5,3,-3,9,1,-10,-5,-1,-5,-7,1,1,-5,1,-5,-9,9,2,-4,4,4,-8,-4,-6,-5,10,-10,-4,-5,-10,-1,1,-1,-2,3,-2,9,-9,-8,9,-5,-1,-10,-2,9,-7,1,2,10,-8,-1,3,-2,-2,5,-2,-2,9,-10,-1,3,1,8,7,-9,-3,7,10,-8,8,4,6,-4,2,-6,-5,2,4,-9,-8,-7,-9,-8,-4,9,-10,3,-3,-2,3,7,-6,3,-9,-2,3,9,-4,10,3,-1,4,-8,-2,-1,8,-2,7,6,-8,-2,-10,2,7,-1,3,3,5,-6,4,4,7,8,-9,-7,-5,-7,-1,-8,-3,9,10,-3,5,-3,-7,9,-1,8,-3,9,6,-2,9,5,8,7,-6,-4,10,-10,-6,-2,7,-9,7,-8,-5,1,-2,-5,-10,2,-5,-9,-6,3,-7,1,7,4,-9,8,-5,-10,-3,9,9,1,10,8,-8,-9,8,-7,-1,10,3,6,4,7,4,5,9,-7,6,6,10,9,5,-2,8,8,9,1,1,3,6,-1,3,-6,5,5,7,-3,1,-1,-9,-2,3,2,-3,-9,2,-6,8,-6,-5,-10,6,-5,1,7,2,-6,5,9,2,7,-10,9,-6,-2,-7,-1,8,-1,3,8,-9,10,-2,-2,-9,-6,-1,-8,1,7,-4,10,-6,10,-3,5,-3,-8,6,-9,8,-5,-2,7,2,-1,2,-8,-6,-6,-9,1,-5,-8,8,7,5,-6,-2,-2,6,-1,-7,-7,-9,4], dtype = "int16")#candidate|4498|(1080,)|const|int16
call_4496 = func_1132_call(relay.reshape(const_4497.astype('int16'), []), relay.reshape(const_4498.astype('int16'), [8, 9, 15]), )
call_4499 = func_1132_call(relay.reshape(const_4497.astype('int16'), []), relay.reshape(const_4498.astype('int16'), [8, 9, 15]), )
bop_4500 = relay.right_shift(uop_4482.astype('uint64'), relay.reshape(call_4475.astype('uint64'), relay.shape_of(uop_4482))) # shape=(3, 1, 7)
bop_4503 = relay.right_shift(uop_4484.astype('uint64'), relay.reshape(call_4476.astype('uint64'), relay.shape_of(uop_4484))) # shape=(3, 1, 7)
output = relay.Tuple([call_4496,const_4497,const_4498,bop_4500,])
output2 = relay.Tuple([call_4499,const_4497,const_4498,bop_4503,])
func_4510 = relay.Function([], output)
mod['func_4510'] = func_4510
mod = relay.transform.InferType()(mod)
mutated_mod['func_4510'] = func_4510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4510_call = mutated_mod.get_global_var('func_4510')
call_4511 = func_4510_call()
output = call_4511
func_4512 = relay.Function([], output)
mutated_mod['func_4512'] = func_4512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2409_call = mod.get_global_var('func_2409')
func_2411_call = mutated_mod.get_global_var('func_2411')
call_4538 = relay.TupleGetItem(func_2409_call(), 0)
call_4539 = relay.TupleGetItem(func_2411_call(), 0)
func_3843_call = mod.get_global_var('func_3843')
func_3847_call = mutated_mod.get_global_var('func_3847')
var_4548 = relay.var("var_4548", dtype = "int8", shape = (168,))#candidate|4548|(168,)|var|int8
call_4547 = func_3843_call(relay.reshape(var_4548.astype('int8'), [3, 8, 7]), relay.reshape(var_4548.astype('float32'), [3, 8, 7]), )
call_4549 = func_3843_call(relay.reshape(var_4548.astype('int8'), [3, 8, 7]), relay.reshape(var_4548.astype('float32'), [3, 8, 7]), )
output = relay.Tuple([call_4538,call_4547,var_4548,])
output2 = relay.Tuple([call_4539,call_4549,var_4548,])
func_4554 = relay.Function([var_4548,], output)
mod['func_4554'] = func_4554
mod = relay.transform.InferType()(mod)
mutated_mod['func_4554'] = func_4554
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4555 = relay.var("var_4555", dtype = "int8", shape = (168,))#candidate|4555|(168,)|var|int8
func_4554_call = mutated_mod.get_global_var('func_4554')
call_4556 = func_4554_call(var_4555)
output = call_4556
func_4557 = relay.Function([var_4555], output)
mutated_mod['func_4557'] = func_4557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2354_call = mod.get_global_var('func_2354')
func_2355_call = mutated_mod.get_global_var('func_2355')
call_4622 = relay.TupleGetItem(func_2354_call(), 0)
call_4623 = relay.TupleGetItem(func_2355_call(), 0)
func_3578_call = mod.get_global_var('func_3578')
func_3580_call = mutated_mod.get_global_var('func_3580')
call_4628 = relay.TupleGetItem(func_3578_call(), 0)
call_4629 = relay.TupleGetItem(func_3580_call(), 0)
func_4235_call = mod.get_global_var('func_4235')
func_4238_call = mutated_mod.get_global_var('func_4238')
const_4643 = relay.const([2,10,-3,5,-8,-2,1,-10,-7,7,-2,-9,5,1,-1,4,10,-9,4,9,-6,-8,10,-7,2,-2,-6,7,7,3,-10,-1,2,-5,5,-8,-6,-7,6,-3,6,3,6,-7,5,3,8,-10,-6,-9,-1,-2,-5,1,-3,-10,-2,2,2,-1,9,6,9,-10,-1,8,3,-8,10,-10,4,1,4,3,3,4,-9,-1,-8,-5,-7,-10,-2,-1,-8,5,-4,9,4,-7,-8,-10,3,7,-2,10,-5,4,-1,-2,-7,-2,-5,-2,-4,7,7,-1,1,-2,2,4,4,-5,-2,-1,-3,-3,-5,9,-1,-3,4,-1,-4,7,6,-3,9,3,-4,4,1,-8,-2,6,-5,-2,-5,-3,-7,-6,4,-1,-9,8,-3,1,-2,8,7,-5,-7,1,-1,4,7,-1,1,-7,8,-4,-2,3,-5,5,-9,4,9,-7,-10,-8,-10,1,1,-2,7,-10,-10,-10,5,6,-8,-9,6,7,8,-4,-4,-2,4,4,1,-8,-6,-7,-6,7,3,-10,4,6,3,-10,6,-2,7,2,7,-8,-2,5,8,-1,10,2,1,5,10,2,9,-8,9,4,-2,10,5,-4,-9,-6,8,-2,7,-4,-3,3,-10,10,-3,-5,5,10,1,5,-9,-9,-8,-6,8,-2,-6,-5,-7,4,-9,6,-4,-4,-10,-7,9,-6,8,-1,-3,7,1,-4,9,10,-6,-2,3,-5,6,-4,9,1,5,2,-7,5,-5,6,-6,-1,-3,5,8,2,4,-10,-9,8,5,10,-3,1,6,9,6,-6,-3,-6,1,-7,-8,-7,8,-9,-9,4,-5,-9,2,5,-8,-8,2,-3,4,9,7,-8,-5,-7,-7,-6,7,5,3,-9,9,-5,-1,-5,10,-8,-1,-1,1,-1,-2,3,4,3,6,-2,9,-7], dtype = "int8")#candidate|4643|(350,)|const|int8
call_4642 = relay.TupleGetItem(func_4235_call(relay.reshape(const_4643.astype('int8'), [10, 5, 7]), relay.reshape(const_4643.astype('int8'), [10, 5, 7]), ), 0)
call_4644 = relay.TupleGetItem(func_4238_call(relay.reshape(const_4643.astype('int8'), [10, 5, 7]), relay.reshape(const_4643.astype('int8'), [10, 5, 7]), ), 0)
const_4648 = relay.const([[[-1,1,-9,-1,4,2,-4,-4,-2],[-10,3,-8,10,-9,2,5,8,-3],[10,-1,-3,-10,7,-6,4,-10,9],[-4,-5,8,-6,-3,10,-1,-4,-5],[-7,-4,9,-5,-3,-2,6,3,-8],[9,3,10,9,-6,-6,-8,5,1],[-1,1,-3,10,8,9,6,1,1],[5,-3,-1,-1,3,-2,-2,-1,10]],[[-5,-3,4,10,-1,9,10,-10,-4],[-3,-1,-1,-3,7,-5,7,-7,-4],[4,1,4,-7,-6,9,-9,5,1],[4,-8,-7,10,-2,8,-10,-7,-8],[-2,7,-6,-10,-1,7,-8,5,6],[8,9,2,3,10,4,-2,4,6],[6,-7,8,8,-6,1,-8,-7,8],[-4,3,2,-1,4,4,7,4,8]],[[7,10,-10,7,-2,6,-4,-1,-2],[4,7,-9,8,10,10,-5,-5,-2],[6,4,-4,7,1,-6,-1,6,-8],[7,-1,-7,-7,9,7,-9,-1,-10],[3,4,5,7,-8,-2,-8,-4,7],[1,6,-10,-1,6,1,-10,1,-10],[-2,2,8,10,-2,6,-8,7,-6],[6,3,-1,6,-1,-5,-5,6,9]],[[-1,1,-3,-3,3,-4,-7,6,2],[6,-1,7,6,5,1,-9,4,4],[-6,-10,-8,-7,5,-5,-3,5,6],[9,5,-7,9,7,-5,-1,-1,-1],[7,2,-1,9,7,-7,-7,6,-2],[8,-8,-5,9,5,8,7,-4,-7],[7,1,1,9,-8,-10,8,4,-5],[1,6,4,-2,9,-3,2,-6,5]],[[1,-5,-9,-1,-5,4,-1,-5,-3],[-1,9,10,10,-3,-5,4,-10,-6],[6,-7,10,2,-8,-10,-6,-5,-5],[-9,9,1,-8,-1,-8,9,-4,-6],[10,8,4,1,9,5,3,8,5],[5,6,4,-4,-7,-3,-3,-10,-3],[8,-2,-9,10,-2,3,8,3,-5],[10,-3,-8,-10,7,1,-4,-3,-6]]], dtype = "uint16")#candidate|4648|(5, 8, 9)|const|uint16
bop_4649 = relay.maximum(call_4628.astype('float64'), relay.reshape(const_4648.astype('float64'), relay.shape_of(call_4628))) # shape=(5, 8, 9)
bop_4652 = relay.maximum(call_4629.astype('float64'), relay.reshape(const_4648.astype('float64'), relay.shape_of(call_4629))) # shape=(5, 8, 9)
func_1876_call = mod.get_global_var('func_1876')
func_1881_call = mutated_mod.get_global_var('func_1881')
var_4656 = relay.var("var_4656", dtype = "bool", shape = ())#candidate|4656|()|var|bool
const_4657 = relay.const([[True],[False],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[False],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[True],[False],[False],[False],[True],[False],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[False],[True],[False],[False],[True],[True],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[False],[False],[False],[True],[True],[True],[False],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[False],[False],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[True],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[True],[False],[False],[True],[False],[False],[True],[False],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[True],[True],[True],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[False],[False],[False],[True],[False],[False],[True],[True],[False],[True],[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[False],[True],[False],[False],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[True],[True],[False],[True],[True],[False],[False],[True],[True],[False],[True],[True]], dtype = "bool")#candidate|4657|(512, 1)|const|bool
const_4658 = relay.const([-1.150606,4.543813,4.749629,-6.757149,5.171117,-3.301299,9.991745,8.533243,-0.108290,6.105320,-1.345905,8.461538,0.893063,9.548507,-3.439851,2.468118,7.815829,-1.372668,-0.301207,1.431151,8.244692,8.676408,-4.744838,0.571957,-7.694274,0.875319,4.214787,-1.132920,-0.769563,-9.977797,-6.422356,3.954214,-1.260158,-3.008730,-6.738913,-8.149583,2.583486,6.020473,-4.512873,9.096693,4.267840,-7.022354,1.618619,5.977861,-8.250830,-8.394216,1.392992,8.462520,9.432151,-0.781219,2.083473,0.128765,-5.075806,-0.702523,4.262047,1.478494,5.797036,-0.547489,-4.452744,-1.611103,7.539891,2.220783,9.574725,-8.279847,1.712549,-1.876387,-3.677134,6.178928,-1.455349,1.235047,9.555425,-5.159226,-9.889718,4.058015,-3.984307,-6.709332,4.112289,-4.361205,-2.594478,1.309134,8.627145,-5.624059,-0.929583,-2.152515,-0.534863,-0.916970,6.809740,-9.144711,8.402736,-1.201848,3.733029,1.768464,1.524808,1.020748,3.548307,0.459204,7.896909,-4.134163,1.732999,-4.813277,-9.768461,-0.023936,-2.761986,-1.203598,-2.491178,5.759797,1.987589,-7.028325,1.621347,-7.965005,3.122498,7.714765,8.128374,-3.099868,6.705489,-4.593526,7.864436,4.238823,0.374643,-2.420959,-7.293939,-7.683879,-9.408001,-4.939602,-7.235892,-6.186274,-9.241448,-2.830078,4.284920,2.883402,-1.283700,4.357879,-8.395237,7.484583,-8.735557,4.020467,9.223378,-3.936713,6.159347,1.732312,6.838679,5.167729,-3.710711,1.658126,-2.031240,-2.205619,3.069211,-9.849126,-1.979209,5.448499,3.925103,8.221241,-7.028172,2.698540,0.866281,-5.210057,-8.678728,-3.844551,7.691473,4.874434,-1.081124,-5.114516,0.018875,0.413128,-4.840506,-5.769922,-6.732220,3.242470,4.332438,-6.891407,6.596078,0.483018,-1.477885,-6.590953,0.046050,6.547662,1.777406,1.136600,-9.421854,-6.505752,-1.503956,9.494326,8.131610,3.867702,7.668264,2.529806,-0.673587,-1.510359,-8.490326,8.438792,-9.523471,-4.301650,-6.084653,-7.882380,-1.392310,-4.008891,0.704111,3.010629,-2.849449,5.930233,-7.859562,-3.812394,6.119498,6.336444,-0.330517,-7.370319,3.331615,-2.715856,-0.301621,5.784964,-7.982794,1.819566,7.405879,-0.412965,-0.879390,8.275603,-8.033664,0.891090,-3.774223,6.806244,3.484834,-7.016728,-9.330154,6.229269,3.601133,-1.429573,-4.120852,-6.120825,-4.593262,7.357372,-5.632774,-6.493378,-7.716118,1.927949,-2.059261,1.083368,-9.921838,6.136399,4.365176,7.594635,5.906855,-0.390912,-2.601232,8.669157,8.491455,1.015289,8.571326,-8.246771,2.954125,-3.022746,-1.525226,-2.362727,0.919084,-0.945955,-5.573143,-9.786242,2.115994,9.966901,5.247616,-6.203859,2.739174,-0.134258,4.134645,-8.203103,-5.216726,9.775053,7.571885,0.559165,8.588714,1.654956,-1.684519,4.145286,-1.213840,2.537370,2.280285,-1.402152,8.365030,1.513600,6.177314,0.581139,-2.136807,-2.746341,-5.937307,0.060794,3.319560,8.936935,-9.162539,3.853846,5.193794,-4.763982,5.042867,9.572315,5.741166,9.612196,0.926468,9.320620,3.480925,5.679744,2.978450,0.917227,4.752962,-8.586362,2.111809,-1.023602,-9.954108,0.733676,4.012014,-0.932437,4.834524,1.704160,0.963122,9.991952,-2.411932,-6.178765,1.910303,6.092421,2.464166,-2.385619,9.219530,0.753196,2.394110,7.002959,-7.660599,9.458978,-6.352535,-2.089930,6.548660,-5.775452,-3.910920,-9.113051,7.677154,-8.572297,8.399504,1.512696,9.381913,6.873848,-8.030654,6.951198,-3.265599,-3.254544,1.141779,-8.615330,-8.132574,-4.610173,-2.720961,-9.294928,-7.006335,-9.383351,0.889799,5.939514,-1.607119,4.472361,3.910473,5.410819,-9.560597,-7.302309,-3.507208,-6.956592,-2.050512,5.281200,8.541512,-6.863797,-7.077218,-9.194681,-9.250558,-7.454988,-4.675608,5.877104,-4.963582,9.410060,2.881488,-2.709034,1.245259,-6.104286,-7.297608,-4.875501,-4.768129,6.006108,5.678802,-5.140139,0.897052,-7.376757,8.384745,-1.592324,4.889692,-1.980724,0.903165,-3.149536,0.508081,-2.828392,5.038272,-4.400242,2.833839,-1.322457,9.776273,0.446092,-3.211014,-7.769528,7.313620,1.850767,-1.400246,9.377585,4.819513,-0.446875,2.979143,-3.332273,0.161618,-8.244152,-1.717455,5.415251,0.057956,2.551875,5.751889,8.673035,-9.947663,2.030566,-5.767786,-6.589637,-9.801334,9.993521,-4.506522,-5.203774,-2.805472,-9.442484,-5.362866,-0.213129,-5.717541,4.767156,5.826022,0.798875,5.912308,-9.922250,5.799122,4.838386,-7.452132,8.809383,-0.956070,-2.098474,-3.639354,-2.784880,2.388006,8.519901,-7.709581,4.335609,2.184244,0.405224,3.625369,4.780456,-6.574331,-0.035392,1.402511,4.820842,-6.581173,-6.920614,0.940837,9.119012,9.905360,-4.373048,7.045930,8.343184,-8.303392,9.935525,-0.300636,9.694991,-1.683100,0.325060,5.131811,2.599286,8.782393,1.691996,-1.767006,8.310904,9.884570,0.002126,7.132021,0.310007,7.771398,0.966455,9.891400,0.222050,-4.801675,5.302271,4.356919,5.015820,-2.978899,0.905422,1.714199,-3.978310,0.325649,9.506729,-3.045449,-8.423281,-0.039108,-9.210774,-4.005102,3.747473,-3.780067,0.451117,1.306264,-7.688625,4.145144,7.456823,-2.479789,4.373021,5.102281,-1.692231,9.988385,-3.053331,-8.100261,-9.297427,-6.876712,-5.513782,-8.862265,-3.788342,-8.600093,-4.617581,3.063649,4.610025,4.148363,4.878361,2.375972,8.941976,-0.822053,-0.606378,-7.655122,-4.089702,-3.009436,5.442657,-6.944793,1.282183,2.198778,-9.667153,9.349345,-2.186080,-2.959772,2.437542,-4.877706,-1.696115,-9.075018,8.934631,6.019029,0.530093,-3.167348,2.501980,0.287372,-0.679544,-6.882615,9.176775,-0.907687,-7.118933,0.730244,-6.874324,-3.222764,-4.468428,-3.262831,5.385877,7.912243,2.432869,-0.736219,-2.168094,1.236684,-5.147610,9.021446,6.925255,4.668146,-2.731886,-5.608818,-7.209938,-0.372170,5.321375,0.375249,-9.994247], dtype = "float64")#candidate|4658|(572,)|const|float64
call_4655 = relay.TupleGetItem(func_1876_call(relay.reshape(var_4656.astype('bool'), []), relay.reshape(const_4657.astype('bool'), [512,]), relay.reshape(const_4658.astype('float64'), [572,]), ), 3)
call_4659 = relay.TupleGetItem(func_1881_call(relay.reshape(var_4656.astype('bool'), []), relay.reshape(const_4657.astype('bool'), [512,]), relay.reshape(const_4658.astype('float64'), [572,]), ), 3)
bop_4665 = relay.maximum(call_4655.astype('float64'), var_4656.astype('float64')) # shape=(512,)
bop_4668 = relay.maximum(call_4659.astype('float64'), var_4656.astype('float64')) # shape=(512,)
output = relay.Tuple([call_4622,call_4642,const_4643,bop_4649,const_4657,const_4658,bop_4665,])
output2 = relay.Tuple([call_4623,call_4644,const_4643,bop_4652,const_4657,const_4658,bop_4668,])
func_4705 = relay.Function([var_4656,], output)
mod['func_4705'] = func_4705
mod = relay.transform.InferType()(mod)
mutated_mod['func_4705'] = func_4705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4706 = relay.var("var_4706", dtype = "bool", shape = ())#candidate|4706|()|var|bool
func_4705_call = mutated_mod.get_global_var('func_4705')
call_4707 = func_4705_call(var_4706)
output = call_4707
func_4708 = relay.Function([var_4706], output)
mutated_mod['func_4708'] = func_4708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1182_call = mod.get_global_var('func_1182')
func_1183_call = mutated_mod.get_global_var('func_1183')
call_4734 = relay.TupleGetItem(func_1182_call(), 0)
call_4735 = relay.TupleGetItem(func_1183_call(), 0)
func_3578_call = mod.get_global_var('func_3578')
func_3580_call = mutated_mod.get_global_var('func_3580')
call_4760 = relay.TupleGetItem(func_3578_call(), 0)
call_4761 = relay.TupleGetItem(func_3580_call(), 0)
uop_4765 = relay.acosh(call_4760.astype('float64')) # shape=(5, 8, 9)
uop_4767 = relay.acosh(call_4761.astype('float64')) # shape=(5, 8, 9)
output = relay.Tuple([call_4734,uop_4765,])
output2 = relay.Tuple([call_4735,uop_4767,])
func_4770 = relay.Function([], output)
mod['func_4770'] = func_4770
mod = relay.transform.InferType()(mod)
output = func_4770()
func_4771 = relay.Function([], output)
mutated_mod['func_4771'] = func_4771
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4778 = relay.var("var_4778", dtype = "float32", shape = ())#candidate|4778|()|var|float32
var_4779 = relay.var("var_4779", dtype = "float32", shape = (8, 1, 9))#candidate|4779|(8, 1, 9)|var|float32
bop_4780 = relay.floor_divide(var_4778.astype('float32'), var_4779.astype('float32')) # shape=(8, 1, 9)
output = bop_4780
output2 = bop_4780
func_4791 = relay.Function([var_4778,var_4779,], output)
mod['func_4791'] = func_4791
mod = relay.transform.InferType()(mod)
var_4792 = relay.var("var_4792", dtype = "float32", shape = ())#candidate|4792|()|var|float32
var_4793 = relay.var("var_4793", dtype = "float32", shape = (8, 1, 9))#candidate|4793|(8, 1, 9)|var|float32
output = func_4791(var_4792,var_4793,)
func_4794 = relay.Function([var_4792,var_4793,], output)
mutated_mod['func_4794'] = func_4794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2457_call = mod.get_global_var('func_2457')
func_2459_call = mutated_mod.get_global_var('func_2459')
call_4837 = relay.TupleGetItem(func_2457_call(), 0)
call_4838 = relay.TupleGetItem(func_2459_call(), 0)
output = relay.Tuple([call_4837,])
output2 = relay.Tuple([call_4838,])
func_4843 = relay.Function([], output)
mod['func_4843'] = func_4843
mod = relay.transform.InferType()(mod)
output = func_4843()
func_4844 = relay.Function([], output)
mutated_mod['func_4844'] = func_4844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4374_call = mod.get_global_var('func_4374')
func_4375_call = mutated_mod.get_global_var('func_4375')
call_4850 = func_4374_call()
call_4851 = func_4374_call()
func_2260_call = mod.get_global_var('func_2260')
func_2264_call = mutated_mod.get_global_var('func_2264')
const_4869 = relay.const([7,-10,-8,8,-2,5,10,-1,-3,-9,-4,5,-9,10,-3,3,-4,8,7,-8,-6,-9,4,-3,-8,8,-7,9,-10,-9,3,-4,-6,9,-10,-2,-1,1,4,2,6,-4,-5,-3,2,-9,-4,2,-7,5,9,4,-2,-7,10,-8,1,3,5,-2,-8,3,-4,-3,-9,10,10,10,-10,-8,-6,9,8,-3,10,1,-8,9,3,-5,-4,8,9,-8,5,-9,4,-10,4,7,-1,-9,5,1,3,10], dtype = "uint16")#candidate|4869|(96,)|const|uint16
call_4868 = func_2260_call(relay.reshape(const_4869.astype('uint16'), [8, 4, 3]), relay.reshape(const_4869.astype('uint16'), [8, 4, 3]), )
call_4870 = func_2260_call(relay.reshape(const_4869.astype('uint16'), [8, 4, 3]), relay.reshape(const_4869.astype('uint16'), [8, 4, 3]), )
const_4883 = relay.const([[[3,2,-2,-7,9,7,4],[-9,-7,-5,3,4,-5,3],[-4,9,2,9,-10,-4,-10],[1,3,4,-10,9,-6,5],[1,-9,8,-2,1,-6,-2]],[[8,-3,3,-10,8,-7,3],[7,7,8,4,-3,-8,-2],[3,-7,3,1,-8,4,-3],[10,-6,-6,8,8,9,8],[4,-2,-3,10,-10,3,-4]],[[-5,-10,2,3,-9,-1,-3],[-6,10,3,1,-2,2,-1],[-10,-2,3,10,-7,3,-6],[-3,-9,-9,1,10,10,2],[-3,-6,10,-10,9,-10,4]]], dtype = "int8")#candidate|4883|(3, 5, 7)|const|int8
bop_4884 = relay.logical_or(call_4850.astype('bool'), const_4883.astype('bool')) # shape=(3, 5, 7)
bop_4887 = relay.logical_or(call_4851.astype('bool'), const_4883.astype('bool')) # shape=(3, 5, 7)
func_2724_call = mod.get_global_var('func_2724')
func_2726_call = mutated_mod.get_global_var('func_2726')
var_4895 = relay.var("var_4895", dtype = "bool", shape = (21, 4))#candidate|4895|(21, 4)|var|bool
call_4894 = relay.TupleGetItem(func_2724_call(relay.reshape(var_4895.astype('bool'), [84,])), 3)
call_4896 = relay.TupleGetItem(func_2726_call(relay.reshape(var_4895.astype('bool'), [84,])), 3)
bop_4908 = relay.left_shift(call_4868.astype('int16'), relay.reshape(const_4869.astype('int16'), relay.shape_of(call_4868))) # shape=(8, 4, 3)
bop_4911 = relay.left_shift(call_4870.astype('int16'), relay.reshape(const_4869.astype('int16'), relay.shape_of(call_4870))) # shape=(8, 4, 3)
output = relay.Tuple([bop_4884,call_4894,var_4895,bop_4908,])
output2 = relay.Tuple([bop_4887,call_4896,var_4895,bop_4911,])
func_4913 = relay.Function([var_4895,], output)
mod['func_4913'] = func_4913
mod = relay.transform.InferType()(mod)
var_4914 = relay.var("var_4914", dtype = "bool", shape = (21, 4))#candidate|4914|(21, 4)|var|bool
output = func_4913(var_4914)
func_4915 = relay.Function([var_4914], output)
mutated_mod['func_4915'] = func_4915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3882_call = mod.get_global_var('func_3882')
func_3883_call = mutated_mod.get_global_var('func_3883')
call_4931 = relay.TupleGetItem(func_3882_call(), 0)
call_4932 = relay.TupleGetItem(func_3883_call(), 0)
var_4935 = relay.var("var_4935", dtype = "float64", shape = (5, 12, 14))#candidate|4935|(5, 12, 14)|var|float64
bop_4936 = relay.greater_equal(call_4931.astype('bool'), relay.reshape(var_4935.astype('bool'), relay.shape_of(call_4931))) # shape=(5, 12, 14)
bop_4939 = relay.greater_equal(call_4932.astype('bool'), relay.reshape(var_4935.astype('bool'), relay.shape_of(call_4932))) # shape=(5, 12, 14)
output = relay.Tuple([bop_4936,])
output2 = relay.Tuple([bop_4939,])
func_4947 = relay.Function([var_4935,], output)
mod['func_4947'] = func_4947
mod = relay.transform.InferType()(mod)
var_4948 = relay.var("var_4948", dtype = "float64", shape = (5, 12, 14))#candidate|4948|(5, 12, 14)|var|float64
output = func_4947(var_4948)
func_4949 = relay.Function([var_4948], output)
mutated_mod['func_4949'] = func_4949
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5001 = relay.const([[[-9,5,9],[4,-10,-8],[8,-8,10],[2,9,6],[-4,9,6],[-5,2,8],[1,-9,-1],[-7,-9,-5],[-5,5,-8],[2,-9,-1],[-4,4,8],[9,6,-2],[7,7,4],[-6,-6,-5],[-9,8,9]],[[-5,-8,2],[2,7,1],[2,-1,-5],[10,-4,-10],[3,-7,9],[2,10,4],[-6,-3,-2],[-2,-4,5],[8,9,-4],[-2,-8,7],[4,1,9],[-7,-2,8],[7,-10,3],[-8,-3,-4],[8,3,2]],[[5,-9,-3],[4,3,-2],[-1,9,10],[9,4,7],[-8,-3,-2],[10,2,-4],[8,-6,-5],[10,-7,-7],[4,9,9],[-7,2,7],[4,1,-7],[-2,2,-5],[-4,3,7],[-10,-6,-10],[-6,2,-4]],[[2,-6,-3],[-6,1,-3],[-7,3,-10],[-9,-3,1],[2,8,-5],[-4,-2,8],[5,-2,-5],[3,2,3],[-8,4,9],[-5,-3,6],[-7,5,-1],[7,-10,-2],[-4,9,3],[-9,6,4],[-7,8,-4]],[[-7,5,4],[-6,3,2],[3,2,-3],[3,8,3],[5,-3,-1],[-9,9,2],[-1,-4,6],[-10,1,10],[9,-6,-3],[10,-9,4],[9,-8,-7],[-2,9,-3],[-2,-4,4],[-9,-7,9],[3,9,2]],[[2,7,10],[2,-2,-7],[-8,7,4],[-5,-6,5],[4,7,-2],[9,10,5],[1,3,-10],[10,1,-1],[-3,-9,1],[-6,-4,2],[-4,9,8],[6,-1,3],[-1,-1,-2],[-9,-1,4],[2,8,-5]]], dtype = "uint32")#candidate|5001|(6, 15, 3)|const|uint32
var_5002 = relay.var("var_5002", dtype = "uint32", shape = (6, 15, 3))#candidate|5002|(6, 15, 3)|var|uint32
bop_5003 = relay.greater(const_5001.astype('bool'), relay.reshape(var_5002.astype('bool'), relay.shape_of(const_5001))) # shape=(6, 15, 3)
func_4770_call = mod.get_global_var('func_4770')
func_4771_call = mutated_mod.get_global_var('func_4771')
call_5007 = relay.TupleGetItem(func_4770_call(), 0)
call_5008 = relay.TupleGetItem(func_4771_call(), 0)
output = relay.Tuple([bop_5003,call_5007,])
output2 = relay.Tuple([bop_5003,call_5008,])
func_5018 = relay.Function([var_5002,], output)
mod['func_5018'] = func_5018
mod = relay.transform.InferType()(mod)
mutated_mod['func_5018'] = func_5018
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5019 = relay.var("var_5019", dtype = "uint32", shape = (6, 15, 3))#candidate|5019|(6, 15, 3)|var|uint32
func_5018_call = mutated_mod.get_global_var('func_5018')
call_5020 = func_5018_call(var_5019)
output = call_5020
func_5021 = relay.Function([var_5019], output)
mutated_mod['func_5021'] = func_5021
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5049 = relay.var("var_5049", dtype = "int16", shape = (3, 3, 15))#candidate|5049|(3, 3, 15)|var|int16
const_5050 = relay.const([[[5,-9,3,-3,8,-9,3,-1,-10,2,-1,-3,-7,1,-2],[-1,5,3,3,1,3,6,-1,1,-10,-7,4,-6,-2,4],[-1,10,-4,4,-2,-9,-6,1,1,-9,6,4,6,4,8]],[[-4,2,-7,-9,-4,-5,-6,-1,6,-10,5,-1,-8,8,6],[8,4,-4,-8,1,3,-6,-5,-7,-9,8,-3,-2,5,-2],[3,-9,-2,10,-7,4,7,1,7,4,7,1,-10,-2,10]],[[-8,-8,3,-1,1,-4,-7,5,2,6,-9,10,4,2,9],[-1,-6,-3,10,2,9,6,-6,4,4,-7,-4,4,9,3],[7,-4,-3,-2,10,-4,-1,-6,9,4,-1,-6,-8,-2,-6]]], dtype = "int16")#candidate|5050|(3, 3, 15)|const|int16
bop_5051 = relay.minimum(var_5049.astype('int16'), relay.reshape(const_5050.astype('int16'), relay.shape_of(var_5049))) # shape=(3, 3, 15)
bop_5057 = relay.right_shift(bop_5051.astype('int8'), relay.reshape(var_5049.astype('int8'), relay.shape_of(bop_5051))) # shape=(3, 3, 15)
output = bop_5057
output2 = bop_5057
func_5060 = relay.Function([var_5049,], output)
mod['func_5060'] = func_5060
mod = relay.transform.InferType()(mod)
var_5061 = relay.var("var_5061", dtype = "int16", shape = (3, 3, 15))#candidate|5061|(3, 3, 15)|var|int16
output = func_5060(var_5061)
func_5062 = relay.Function([var_5061], output)
mutated_mod['func_5062'] = func_5062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4337_call = mod.get_global_var('func_4337')
func_4338_call = mutated_mod.get_global_var('func_4338')
call_5074 = relay.TupleGetItem(func_4337_call(), 0)
call_5075 = relay.TupleGetItem(func_4338_call(), 0)
uop_5076 = relay.cos(call_5074.astype('float64')) # shape=(5, 8, 9)
uop_5078 = relay.cos(call_5075.astype('float64')) # shape=(5, 8, 9)
output = relay.Tuple([uop_5076,])
output2 = relay.Tuple([uop_5078,])
func_5088 = relay.Function([], output)
mod['func_5088'] = func_5088
mod = relay.transform.InferType()(mod)
mutated_mod['func_5088'] = func_5088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5088_call = mutated_mod.get_global_var('func_5088')
call_5089 = func_5088_call()
output = call_5089
func_5090 = relay.Function([], output)
mutated_mod['func_5090'] = func_5090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2354_call = mod.get_global_var('func_2354')
func_2355_call = mutated_mod.get_global_var('func_2355')
call_5129 = relay.TupleGetItem(func_2354_call(), 0)
call_5130 = relay.TupleGetItem(func_2355_call(), 0)
output = relay.Tuple([call_5129,])
output2 = relay.Tuple([call_5130,])
func_5131 = relay.Function([], output)
mod['func_5131'] = func_5131
mod = relay.transform.InferType()(mod)
output = func_5131()
func_5132 = relay.Function([], output)
mutated_mod['func_5132'] = func_5132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1748_call = mod.get_global_var('func_1748')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_5161 = relay.TupleGetItem(func_1748_call(), 3)
call_5162 = relay.TupleGetItem(func_1749_call(), 3)
func_2617_call = mod.get_global_var('func_2617')
func_2621_call = mutated_mod.get_global_var('func_2621')
var_5177 = relay.var("var_5177", dtype = "bool", shape = ())#candidate|5177|()|var|bool
const_5178 = relay.const([[-8],[6],[-6],[5],[-1],[-4],[-4],[-2],[9],[3],[9],[-9],[8],[3],[-3],[10],[7],[-7],[-1],[1],[-7],[-10],[9],[9],[-9],[8],[-2],[-7],[8],[-10],[-2],[-2],[6],[-9],[2],[-6],[8],[-9],[-10],[-5],[-3],[-9],[9],[-9],[5],[-7],[8],[3],[9],[-1],[-4],[1],[3],[-9],[10],[-1],[6],[-10],[-5],[3],[8],[6],[-9],[10],[-3],[-2],[-9],[10],[-5],[-4],[4],[10],[9],[-8],[-10],[-4],[-9],[4],[9],[8],[6],[8],[-5],[7],[9],[4],[9],[5],[7],[2],[-2],[-4],[5],[1],[-4],[6],[2],[-3],[-4],[4],[-2],[-9],[6],[8],[-7],[9],[-7],[4],[-2],[7],[-5],[6],[-1],[-4],[-9],[-10],[-9],[-1],[3],[6],[-2],[-1],[9],[2],[-2],[9],[-6],[-5],[-4],[-3],[7],[4],[-4],[-9],[-6],[9],[2],[-8],[5],[6],[3],[-5],[2],[7],[10],[9],[-5],[3],[7],[6],[-9],[-1],[5],[5],[1],[7],[9],[-2],[-5],[9],[9],[3],[10],[-5],[10],[-2],[6],[-3],[5],[1],[1],[8],[4],[-3],[9],[4],[-1],[-3],[-5],[-9],[8],[3],[7],[5],[5],[-5],[-7],[-8],[-5],[10],[6],[-1],[3],[7],[-10],[10],[-8],[-4],[-2],[-6],[-8],[-5],[6],[-8],[6],[-2],[-3],[9],[-6],[-3],[-1],[-8],[7],[-5],[-2],[8],[-1],[-7],[-6],[-7],[-2],[-7],[3],[1],[10],[-8],[7],[3],[8],[7],[-6],[10],[-5],[4],[1],[-4],[-10],[7],[6],[-3],[-4],[-1],[-6],[8],[-2],[-4],[7],[-8],[2],[-4],[3],[5],[2],[9],[2],[6],[2],[8],[2],[2],[1],[4],[1],[-2],[4],[-5],[5],[-2],[-5],[-5],[-2],[4],[10],[4],[10],[-8],[3],[8],[-4],[8],[-8],[4],[-4],[-2],[-5],[6],[10],[1],[-4],[4],[2],[-2],[3],[-8],[2],[-4],[-8],[4],[3],[1],[-3],[-7],[-6],[4],[5],[3],[-1],[-10],[-7],[-3],[4],[-1],[-4],[-4],[-1],[6],[1],[10],[2],[-9],[-4],[-2],[-9],[1],[-3],[-7],[2],[7],[3],[2],[6],[1],[-1],[-5],[4],[10],[6],[5],[8],[-1],[10],[6],[-6],[-5],[-6],[-6],[-7],[8],[-7],[-3],[-8],[-1],[6],[-10],[-1],[5],[-1],[-1],[-6],[7],[-7],[2],[9],[4],[-4],[-8],[-1],[-7],[-4],[3],[-9],[7],[1],[-6],[-6],[9],[-7],[9],[-3],[-3],[9],[9],[10],[-7],[4],[10],[-8],[3],[6],[-6],[-6],[6],[-8],[-1],[-8],[-9],[-8],[7],[6],[-4],[5],[4],[-2],[-5],[-8],[-1],[-8],[10],[-1],[-6],[-7],[-6],[-3],[3],[-8],[-2],[1],[-10],[-2],[-1],[8],[7],[-8],[1],[-7],[-8],[3],[-9],[8],[8],[1],[1],[-5],[-6],[8],[9],[9],[1],[2],[5],[-10],[-4],[-9],[-9],[-7],[3],[6],[-1],[-6],[10],[-4],[9],[5],[-9],[3],[-6],[8],[-6],[-5],[4],[-4],[1],[10],[3],[-10],[-10],[-1],[10],[-3],[3],[-4],[1],[-1],[1],[-3],[-1],[9],[-9],[5],[-4],[4],[-1],[-7],[1],[9],[-5],[4],[-7],[2],[2],[-10],[-4],[-4],[-9],[-6],[6],[-1],[7],[8],[-5],[1],[-10],[-6],[2],[4],[7],[9],[-4],[-6],[-4],[7],[4],[-6],[5],[8],[-1],[-10],[6],[7],[-5],[-3],[4],[6],[7],[-4],[-6],[-4],[9],[3],[6],[-6],[10],[5],[3],[3],[-2],[2],[10],[-7],[-10],[1],[-1],[8],[5],[-6],[1],[-5],[9],[7],[5],[-1],[6],[-4],[-1],[-3],[-1],[9],[-9],[4],[6],[-4],[-1],[10],[-10],[-1],[6],[-3],[-7],[-9],[9],[1],[6],[4],[9],[-9],[9],[4],[2],[-1],[10],[1],[-3],[-6],[-1],[-1],[7],[-4],[2],[-10],[7],[5],[-5],[-7],[4],[1],[-9],[-8],[7],[3],[1],[10],[-5],[-2],[-4],[9],[-6],[-7],[-5],[5],[-2],[3],[-1],[4],[-5],[5],[2],[-3],[-10],[6],[-1],[-5],[-1],[-5],[-9],[-8],[-1],[2],[2],[-7],[4],[2],[-7],[-5],[-3],[-3],[7],[-1],[-2],[-9],[-1],[2],[9],[-3],[10],[7],[-3],[-2],[-5],[-9],[9],[5],[8],[6],[-6],[-1],[-3],[-8],[-6],[3],[-2],[2],[9],[-6],[-10],[-5],[5],[-6],[-7],[4],[-9],[-8],[-7],[5],[9],[9],[-8],[5],[-4],[4],[-5],[4],[-8],[-2],[-5],[8],[-3],[-8],[-5],[4],[-3],[-5],[6],[8],[2],[6],[2],[5],[2],[-7],[-8],[-1],[-1],[1],[-2],[-10],[-10],[5],[5],[-5],[-7],[4],[3],[-1],[1],[-10],[-1],[7],[-9],[-8],[3],[-5],[-4],[-8],[6],[-8],[4],[-4],[3],[2],[1],[10],[2],[-4],[8],[-4],[-1],[-6],[9],[-6],[7],[8],[5],[-10],[7],[-10],[-5],[-10],[2],[10],[7],[10],[10],[3],[-10],[-6],[2],[-2],[-8],[-3],[6],[3],[8],[8],[9],[-9],[-1],[4],[-5],[-3],[-5],[-5],[3],[-4],[-2],[5],[-4],[1],[2],[-1],[7],[-7],[9],[2],[-8],[2],[-1],[2],[6],[4],[7],[-8],[-6],[3],[8],[10],[6],[-6],[7],[-2],[10],[-10],[-10],[-7],[-10],[-4],[8],[8],[-1],[-3],[6],[4],[1],[8],[9],[-4],[-1],[2],[-7],[-8],[7],[4],[4],[-1],[-2],[1],[10],[-2],[9],[-8],[8],[-7],[-6],[-2],[5],[-2],[2],[10],[-7],[-10],[-5],[-8],[8],[5],[-8],[6],[-5],[-6],[-10],[-4],[8],[9],[-1],[7],[-10],[-6],[8],[10],[-4],[3],[-8],[-9],[-2],[3],[-3],[8],[2],[-3],[-8],[10],[7],[-5],[-2],[1],[1],[-9],[5],[-1],[-4],[8],[3],[1],[7],[8],[-6],[5],[6],[8],[-4],[7],[5],[4],[5],[4],[4],[-9],[9],[-2],[-5],[2],[-3],[-7],[-7],[-9],[8],[-6],[-4],[-2],[10],[10],[-9],[10],[-8],[6],[5],[9],[5],[8],[-2],[2],[-5],[-2],[3],[-7],[1],[6],[6],[-10],[8],[-10],[-4],[-2],[-4],[2],[9],[8],[4],[-2],[6],[-1],[-9],[-9],[-3],[-9],[-4],[8],[9],[-8],[2],[1],[-4],[5],[2],[7],[7],[7],[5],[10],[4],[2],[10],[6],[2],[2],[-2],[3],[-5],[5],[6],[-7],[10],[-10],[1],[-4],[9],[3],[-6],[7],[-2],[1],[-4],[-1],[-3],[-6],[10],[3],[-7],[-6],[2],[3],[8],[9],[6],[-1],[4],[4],[8],[-7],[-4],[1],[4],[2],[6],[-2],[-8],[10],[-3],[-9],[4],[5],[5],[8],[-7],[-4],[5],[2],[1],[5],[-4],[8],[1],[9],[6],[1],[1],[9],[-7],[7],[1],[-4],[-9],[10],[-2],[7],[-9],[9],[10],[4],[-7],[5],[-2],[4],[-3],[-5],[4],[-3],[-6],[1],[7],[4],[-3],[-7],[-3],[1],[7],[10],[2],[3],[4],[-10],[-7],[-1],[5],[3],[-2],[-7],[1],[1],[7],[6],[8],[5],[9],[-5],[-6],[-3],[-7],[10],[-10],[3],[1]], dtype = "int16")#candidate|5178|(1080, 1)|const|int16
call_5176 = relay.TupleGetItem(func_2617_call(relay.reshape(var_5177.astype('bool'), []), relay.reshape(const_5178.astype('int16'), [1080,]), ), 10)
call_5179 = relay.TupleGetItem(func_2621_call(relay.reshape(var_5177.astype('bool'), []), relay.reshape(const_5178.astype('int16'), [1080,]), ), 10)
func_1047_call = mod.get_global_var('func_1047')
func_1049_call = mutated_mod.get_global_var('func_1049')
call_5187 = relay.TupleGetItem(func_1047_call(), 0)
call_5188 = relay.TupleGetItem(func_1049_call(), 0)
func_3919_call = mod.get_global_var('func_3919')
func_3921_call = mutated_mod.get_global_var('func_3921')
call_5192 = func_3919_call()
call_5193 = func_3919_call()
uop_5198 = relay.sigmoid(call_5161.astype('float32')) # shape=(143, 4)
uop_5200 = relay.sigmoid(call_5162.astype('float32')) # shape=(143, 4)
uop_5201 = relay.cos(uop_5198.astype('float32')) # shape=(143, 4)
uop_5203 = relay.cos(uop_5200.astype('float32')) # shape=(143, 4)
uop_5204 = relay.atan(uop_5201.astype('float32')) # shape=(143, 4)
uop_5206 = relay.atan(uop_5203.astype('float32')) # shape=(143, 4)
output = relay.Tuple([call_5176,var_5177,const_5178,call_5187,call_5192,uop_5204,])
output2 = relay.Tuple([call_5179,var_5177,const_5178,call_5188,call_5193,uop_5206,])
func_5207 = relay.Function([var_5177,], output)
mod['func_5207'] = func_5207
mod = relay.transform.InferType()(mod)
mutated_mod['func_5207'] = func_5207
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5208 = relay.var("var_5208", dtype = "bool", shape = ())#candidate|5208|()|var|bool
func_5207_call = mutated_mod.get_global_var('func_5207')
call_5209 = func_5207_call(var_5208)
output = call_5209
func_5210 = relay.Function([var_5208], output)
mutated_mod['func_5210'] = func_5210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3395_call = mod.get_global_var('func_3395')
func_3397_call = mutated_mod.get_global_var('func_3397')
call_5257 = func_3395_call()
call_5258 = func_3395_call()
func_4843_call = mod.get_global_var('func_4843')
func_4844_call = mutated_mod.get_global_var('func_4844')
call_5270 = relay.TupleGetItem(func_4843_call(), 0)
call_5271 = relay.TupleGetItem(func_4844_call(), 0)
const_5294 = relay.const([[[-9,-9,5,7,-10,10,1],[-5,-2,-9,-7,3,9,-2],[-4,-5,10,-9,1,-2,-6],[8,6,4,-8,-4,-3,4],[-7,-5,9,-5,-3,-4,10],[-7,10,2,9,-3,-2,-2],[8,-9,4,5,3,2,4],[-10,2,1,-3,8,-2,10],[10,8,-10,2,-10,-7,8]],[[-9,-3,-9,6,-7,-6,2],[-7,-1,-4,6,6,8,-6],[-7,2,9,4,-2,-7,-1],[5,-10,-6,1,9,-6,7],[1,8,-10,-5,-8,6,-1],[-3,5,-10,2,5,7,-5],[1,8,-7,-9,9,-7,-4],[8,-5,2,1,-4,-7,8],[-3,9,-5,5,3,1,9]],[[-10,-1,2,1,6,5,5],[-9,8,-4,-7,3,-2,-7],[10,-3,2,-1,9,-8,2],[-7,7,-9,-1,1,-3,9],[3,-10,-3,-5,8,9,8],[4,-3,6,-10,-5,10,-8],[-2,-2,-4,-10,-7,2,-1],[-5,-10,-8,2,5,10,3],[-7,7,-8,4,1,-9,-1]]], dtype = "int8")#candidate|5294|(3, 9, 7)|const|int8
bop_5295 = relay.bitwise_and(call_5270.astype('int32'), const_5294.astype('int32')) # shape=(3, 9, 7)
bop_5298 = relay.bitwise_and(call_5271.astype('int32'), const_5294.astype('int32')) # shape=(3, 9, 7)
output = relay.Tuple([call_5257,bop_5295,])
output2 = relay.Tuple([call_5258,bop_5298,])
func_5303 = relay.Function([], output)
mod['func_5303'] = func_5303
mod = relay.transform.InferType()(mod)
output = func_5303()
func_5304 = relay.Function([], output)
mutated_mod['func_5304'] = func_5304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1047_call = mod.get_global_var('func_1047')
func_1049_call = mutated_mod.get_global_var('func_1049')
call_5321 = relay.TupleGetItem(func_1047_call(), 0)
call_5322 = relay.TupleGetItem(func_1049_call(), 0)
func_2617_call = mod.get_global_var('func_2617')
func_2621_call = mutated_mod.get_global_var('func_2621')
const_5333 = relay.const(False, dtype = "bool")#candidate|5333|()|const|bool
const_5334 = relay.const([[7,2],[-9,-3],[8,8],[-10,-7],[-7,-4],[5,2],[-1,1],[9,8],[7,7],[8,4],[-9,-4],[-7,6],[7,9],[-5,8],[-4,-6],[2,-10],[-3,-6],[-6,6],[5,6],[10,9],[4,-1],[-1,-5],[-10,9],[-2,-3],[-5,-9],[-9,8],[-7,-7],[-6,6],[4,-1],[8,1],[4,2],[-8,-4],[-5,-4],[7,10],[6,-1],[-6,6],[-4,-9],[2,10],[8,3],[-8,9],[-9,-10],[6,-10],[-1,-9],[-8,9],[2,4],[-7,-10],[-8,-3],[2,-2],[4,9],[3,-4],[-2,1],[8,2],[9,-1],[-4,-1],[6,3],[-3,-8],[8,-9],[-9,-5],[-6,1],[-10,1],[10,-4],[-5,-9],[7,10],[6,1],[7,4],[4,5],[10,3],[10,7],[-8,-6],[-6,-7],[-8,6],[-4,7],[8,-7],[3,-2],[9,-2],[9,-1],[-10,3],[4,10],[-6,-6],[-3,2],[-8,-2],[5,5],[1,-5],[5,-9],[-10,1],[-2,-6],[7,-9],[-6,-10],[3,7],[-9,-2],[-8,-1],[10,9],[2,-6],[1,5],[3,-8],[8,-5],[-3,-9],[-3,-1],[7,-5],[1,10],[6,-10],[-7,4],[-8,1],[2,6],[-8,-6],[-5,3],[8,-10],[-4,2],[6,6],[6,5],[4,-9],[2,2],[10,1],[6,7],[4,4],[-10,5],[-8,-1],[-2,-8],[2,3],[-3,-6],[-6,8],[2,7],[-5,-3],[7,2],[10,-10],[10,7],[5,8],[8,3],[-4,5],[10,-4],[-4,1],[7,-9],[-7,-9],[6,8],[9,-3],[3,-8],[-1,-3],[-6,-6],[-3,4],[-10,-9],[3,-1],[4,-4],[9,-8],[5,9],[1,-5],[-8,9],[-9,1],[7,6],[8,3],[-9,4],[4,2],[2,-5],[1,1],[-2,1],[5,-1],[-4,4],[-6,-3],[-6,5],[-3,-9],[-6,7],[4,-7],[10,10],[-1,-8],[9,6],[-1,-2],[-8,-6],[4,5],[2,9],[3,4],[3,-7],[-8,9],[8,-5],[-4,5],[4,2],[-9,-7],[-2,6],[-2,9],[8,-2],[-10,4],[-8,-7],[5,-4],[-5,6],[7,6],[-2,7],[7,-1],[-1,-1],[-6,8],[-5,-6],[-1,9],[1,2],[1,-9],[2,-4],[1,4],[-8,2],[-10,-10],[9,3],[-8,-6],[10,-7],[7,1],[-4,-8],[2,-7],[-5,-6],[1,-9],[-2,8],[7,-9],[3,-5],[3,-10],[2,-2],[-8,-5],[-7,-9],[7,-9],[-10,-6],[-3,1],[10,4],[1,10],[2,8],[-8,4],[-3,6],[-10,-8],[-1,7],[-1,10],[6,7],[-8,3],[-7,-9],[-3,4],[7,-8],[4,9],[-4,1],[-7,-7],[3,-2],[-10,-10],[-5,4],[1,8],[8,4],[5,9],[-2,-5],[9,1],[5,-6],[8,2],[4,-5],[-3,-2],[-2,3],[4,5],[2,4],[-1,7],[10,-2],[7,4],[-1,-6],[-6,7],[9,-3],[4,6],[9,9],[-6,-7],[8,-5],[-5,-8],[-9,-3],[5,3],[4,6],[6,-3],[-3,-3],[9,-3],[9,-3],[6,3],[6,-2],[-7,-6],[1,-6],[3,1],[2,-4],[6,-7],[5,1],[1,-9],[-9,-9],[-8,-7],[6,-7],[5,-4],[-4,9],[6,-8],[7,-4],[-3,-7],[-6,1],[1,4],[-3,6],[-10,8],[-9,-7],[4,7],[5,2],[-4,2],[-7,-5],[-3,6],[1,6],[2,-7],[-3,-7],[-10,-2],[6,2],[-5,2],[-9,8],[8,-8],[6,2],[9,9],[4,1],[-10,8],[7,6],[6,1],[6,5],[-5,-3],[-6,1],[4,7],[7,3],[-9,3],[-3,-7],[6,-2],[9,-6],[-10,-7],[4,2],[-9,-10],[-7,6],[-6,-3],[8,5],[7,-4],[-5,-3],[9,-1],[-10,-3],[-4,-7],[-7,-8],[-10,9],[-10,-1],[4,-3],[8,-3],[-6,2],[-9,-4],[9,5],[-4,7],[5,-3],[-2,2],[-10,4],[3,-4],[2,-4],[10,-6],[-1,5],[6,-1],[-9,6],[9,-7],[4,-6],[9,-7],[-8,1],[-1,9],[10,7],[-5,6],[3,5],[-9,10],[4,-2],[7,-3],[10,-3],[3,-3],[5,8],[10,-5],[-6,-6],[5,-2],[-3,-1],[6,5],[9,7],[1,6],[9,9],[-10,2],[-5,2],[-4,8],[-9,-6],[-4,-8],[-1,7],[-4,2],[-9,-3],[-3,6],[3,7],[-10,-5],[-5,-1],[3,4],[-8,-8],[5,6],[-8,6],[5,-1],[-8,6],[-5,-7],[1,1],[-9,10],[7,-10],[7,-10],[-6,-8],[6,7],[-8,-10],[-3,5],[-6,10],[1,-5],[-7,3],[-10,10],[-9,6],[8,7],[-8,10],[5,7],[-2,-9],[6,-3],[6,8],[-1,3],[-9,-3],[-4,-4],[1,-4],[-1,-10],[-10,6],[-10,1],[-7,5],[9,7],[-8,-6],[5,5],[-6,-4],[9,-10],[4,7],[6,-1],[10,2],[5,7],[10,-6],[-5,-10],[-9,6],[10,-9],[3,-8],[5,-4],[7,-4],[3,-8],[7,7],[6,-1],[-2,4],[-6,-6],[-10,-7],[-6,-10],[7,7],[-7,5],[2,8],[-9,-4],[-7,-3],[-3,1],[3,-8],[1,2],[-6,-9],[8,9],[-6,-10],[5,6],[-4,6],[-7,-1],[-4,-1],[-1,-4],[6,9],[5,-5],[-4,-6],[3,-10],[10,-4],[-2,-9],[-8,-3],[3,-5],[1,2],[4,9],[-4,-5],[-4,4],[3,-2],[5,-3],[-10,-9],[4,-2],[9,-2],[-3,9],[5,-4],[10,-4],[-4,-8],[-6,1],[7,-2],[5,7],[10,-7],[2,10],[-1,-6],[-10,4],[5,-4],[-4,10],[4,-4],[6,3],[5,-8],[-3,4],[-1,-4],[1,7],[-3,10],[6,9],[-1,-9],[8,-2],[-9,10],[9,5],[-6,-4],[-9,4],[4,9],[3,-9],[5,-1],[7,6],[6,-7],[3,8],[5,6],[-3,-5],[-2,4],[-4,-10],[-1,2],[4,4],[-5,8],[7,7],[6,-5],[2,5],[-6,-9],[-3,9],[-10,2],[10,-6],[8,-3],[10,6],[-3,-4],[-1,-9],[9,7],[-9,-4],[9,2],[3,-4],[-2,8],[9,7],[-7,7],[1,4],[5,1],[-10,-2],[-2,-8],[-2,8],[9,5],[1,10],[-2,-5],[4,-2],[5,-5],[-8,-3],[1,7],[-4,-7],[-10,1],[-4,-1],[-7,-9],[10,-1]], dtype = "int16")#candidate|5334|(540, 2)|const|int16
call_5332 = relay.TupleGetItem(func_2617_call(relay.reshape(const_5333.astype('bool'), []), relay.reshape(const_5334.astype('int16'), [1080,]), ), 2)
call_5335 = relay.TupleGetItem(func_2621_call(relay.reshape(const_5333.astype('bool'), []), relay.reshape(const_5334.astype('int16'), [1080,]), ), 2)
func_1580_call = mod.get_global_var('func_1580')
func_1582_call = mutated_mod.get_global_var('func_1582')
call_5357 = relay.TupleGetItem(func_1580_call(), 0)
call_5358 = relay.TupleGetItem(func_1582_call(), 0)
bop_5367 = relay.floor_divide(call_5321.astype('float32'), const_5333.astype('float32')) # shape=(3, 1, 7)
bop_5370 = relay.floor_divide(call_5322.astype('float32'), const_5333.astype('float32')) # shape=(3, 1, 7)
func_2724_call = mod.get_global_var('func_2724')
func_2726_call = mutated_mod.get_global_var('func_2726')
const_5388 = relay.const([True,False,True,True,False,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,False,False,True,False,False,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False,False,False,True,False], dtype = "bool")#candidate|5388|(84,)|const|bool
call_5387 = relay.TupleGetItem(func_2724_call(relay.reshape(const_5388.astype('bool'), [84,])), 9)
call_5389 = relay.TupleGetItem(func_2726_call(relay.reshape(const_5388.astype('bool'), [84,])), 9)
func_3628_call = mod.get_global_var('func_3628')
func_3631_call = mutated_mod.get_global_var('func_3631')
call_5401 = relay.TupleGetItem(func_3628_call(relay.reshape(const_5333.astype('bool'), [])), 3)
call_5402 = relay.TupleGetItem(func_3631_call(relay.reshape(const_5333.astype('bool'), [])), 3)
output = relay.Tuple([call_5332,const_5334,call_5357,bop_5367,call_5387,const_5388,call_5401,])
output2 = relay.Tuple([call_5335,const_5334,call_5358,bop_5370,call_5389,const_5388,call_5402,])
func_5421 = relay.Function([], output)
mod['func_5421'] = func_5421
mod = relay.transform.InferType()(mod)
mutated_mod['func_5421'] = func_5421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5421_call = mutated_mod.get_global_var('func_5421')
call_5422 = func_5421_call()
output = call_5422
func_5423 = relay.Function([], output)
mutated_mod['func_5423'] = func_5423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4510_call = mod.get_global_var('func_4510')
func_4512_call = mutated_mod.get_global_var('func_4512')
call_5424 = relay.TupleGetItem(func_4510_call(), 1)
call_5425 = relay.TupleGetItem(func_4512_call(), 1)
output = relay.Tuple([call_5424,])
output2 = relay.Tuple([call_5425,])
func_5426 = relay.Function([], output)
mod['func_5426'] = func_5426
mod = relay.transform.InferType()(mod)
mutated_mod['func_5426'] = func_5426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5426_call = mutated_mod.get_global_var('func_5426')
call_5427 = func_5426_call()
output = call_5427
func_5428 = relay.Function([], output)
mutated_mod['func_5428'] = func_5428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2409_call = mod.get_global_var('func_2409')
func_2411_call = mutated_mod.get_global_var('func_2411')
call_5491 = relay.TupleGetItem(func_2409_call(), 0)
call_5492 = relay.TupleGetItem(func_2411_call(), 0)
func_1790_call = mod.get_global_var('func_1790')
func_1791_call = mutated_mod.get_global_var('func_1791')
call_5497 = func_1790_call()
call_5498 = func_1790_call()
output = relay.Tuple([call_5491,call_5497,])
output2 = relay.Tuple([call_5492,call_5498,])
func_5499 = relay.Function([], output)
mod['func_5499'] = func_5499
mod = relay.transform.InferType()(mod)
mutated_mod['func_5499'] = func_5499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5499_call = mutated_mod.get_global_var('func_5499')
call_5500 = func_5499_call()
output = call_5500
func_5501 = relay.Function([], output)
mutated_mod['func_5501'] = func_5501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5421_call = mod.get_global_var('func_5421')
func_5423_call = mutated_mod.get_global_var('func_5423')
call_5545 = relay.TupleGetItem(func_5421_call(), 1)
call_5546 = relay.TupleGetItem(func_5423_call(), 1)
const_5559 = relay.const([[6,1],[-8,-9],[-4,7],[-4,9],[7,10],[-1,6],[-7,-8],[5,-2],[-1,10],[-2,6],[-1,-1],[7,6],[8,-2],[10,2],[4,-10],[-2,-7],[-7,-4],[6,-5],[3,4],[8,2],[8,6],[-1,-7],[8,4],[-2,-5],[-10,8],[-9,4],[8,1],[-8,1],[8,-3],[-6,6],[10,8],[-4,10],[9,1],[10,-9],[-3,-4],[5,6],[3,-4],[2,6],[3,3],[-4,1],[-5,-3],[-8,-3],[7,2],[5,7],[7,-8],[3,-10],[-8,4],[-8,-7],[-7,-7],[-7,8],[10,-5],[-7,-2],[4,-3],[3,-3],[-8,3],[2,-8],[2,-6],[8,10],[5,2],[8,8],[3,8],[7,-7],[6,1],[-1,7],[-6,2],[-8,-1],[-8,4],[-4,-7],[-6,-3],[4,-9],[1,10],[-1,-7],[1,-1],[4,1],[5,-7],[10,6],[-8,-2],[-2,-5],[-9,6],[4,-6],[-3,-6],[-9,8],[-4,2],[10,3],[-10,2],[-4,-4],[-4,4],[4,-6],[7,5],[-9,-9],[-9,-9],[1,-8],[-5,-3],[-1,-3],[-9,-4],[-6,-1],[2,-8],[-8,-6],[-10,-7],[6,-3],[10,-9],[5,6],[8,-7],[2,-7],[4,5],[-2,3],[5,2],[7,-4],[1,8],[7,10],[-3,10],[-4,10],[-2,-2],[-8,-8],[-6,6],[-8,-2],[6,-5],[-3,-8],[1,-2],[7,-5],[-8,5],[1,-1],[-6,10],[-9,-4],[-2,8],[5,2],[6,-1],[9,-3],[-2,-5],[4,9],[4,3],[-4,6],[6,-1],[-2,7],[8,-10],[-3,-4],[-1,-9],[4,4],[-9,-9],[2,1],[1,-8],[-5,-10],[2,-10],[3,1],[2,9],[-8,-1],[-8,4],[-8,-9],[-4,-2],[4,2],[2,-3],[7,-8],[-4,2],[-10,2],[5,-1],[8,-2],[8,1],[-7,-2],[-6,-5],[10,1],[-2,7],[8,-3],[3,6],[3,4],[-5,5],[-10,3],[3,9],[3,7],[-3,-1],[-2,-3],[-6,8],[8,-3],[9,-5],[7,6],[-7,-1],[-5,10],[-1,-10],[-5,1],[2,3],[3,5],[3,4],[-9,8],[-5,8],[7,1],[-9,2],[4,7],[5,7],[5,-2],[1,8],[6,6],[7,3],[-2,-2],[5,-6],[9,2],[5,-10],[1,-1],[-9,10],[5,7],[10,5],[-6,4],[3,8],[-5,-4],[2,-5],[7,5],[2,-1],[1,-10],[10,2],[2,-7],[6,-5],[-8,5],[4,-4],[3,8],[3,6],[-7,-5],[-2,3],[1,-1],[7,-9],[-6,6],[-2,2],[10,-3],[-9,-8],[-5,-5],[10,-3],[10,-9],[1,-2],[4,-6],[8,4],[-7,-2],[-7,-3],[3,-9],[8,5],[7,4],[4,4],[6,4],[9,-4],[6,5],[6,6],[-7,-2],[9,10],[-3,-6],[2,5],[-2,-2],[9,-9],[1,8],[1,-7],[-9,1],[8,5],[-10,8],[-1,-8],[2,-3],[-7,3],[6,7],[5,8],[-7,-1],[-4,6],[-5,4],[7,-8],[3,7],[-8,9],[-4,-3],[-2,-1],[2,4],[8,8],[6,1],[5,2],[3,-9],[4,6],[6,-6],[-10,9],[-9,-8],[5,-2],[7,6],[-3,1],[2,8],[9,3],[-1,6],[-6,-5],[-10,-1],[8,-7],[7,8],[-4,5],[-8,1],[4,3],[-10,9],[5,-10],[9,-1],[-7,6],[6,1],[3,-5],[8,8],[-9,-7],[9,-5],[-4,-3],[-8,-1],[-5,-6],[-1,2],[-4,4],[-4,-2],[-1,-1],[7,-9],[1,-3],[6,-2],[1,3],[-9,-3],[-3,-3],[-9,-9],[-7,3],[4,-6],[-3,4],[3,2],[5,5],[10,7],[4,10],[6,-4],[-10,9],[-8,-1],[-4,-10],[-10,-10],[-8,9],[2,3],[5,-9],[-3,-5],[1,-6],[-9,-10],[1,-1],[-2,6],[-7,-10],[-2,-6],[8,-1],[10,5],[2,-10],[10,5],[2,2],[6,-6],[4,9],[-2,-4],[-2,-3],[-3,-4],[2,5],[6,1],[5,-1],[-1,1],[6,-3],[6,-1],[4,-9],[-2,3],[8,4],[-9,9],[-8,2],[-1,7],[2,-8],[-9,5],[2,-2],[8,8],[5,-10],[-7,-6],[-1,-6],[-1,2],[5,2],[-6,9],[2,2],[-9,7],[-2,-8],[-8,-6],[3,3],[-7,9],[-2,7],[-7,-8],[2,-2],[8,-4],[-10,1],[-7,7],[9,7],[-5,-9],[7,-7],[-4,7],[2,-6],[-1,-3],[5,9],[1,3],[5,7],[6,7],[3,10],[-6,3],[6,-2],[-2,-8],[-9,8],[-2,-1],[2,-7],[5,2],[5,-5],[-6,-10],[-8,9],[-7,4],[3,-7],[4,10],[-5,2],[10,-8],[-7,7],[-1,-6],[-1,-10],[2,-8],[7,-10],[3,-5],[-8,8],[3,4],[-9,3],[-9,-1],[-6,3],[-7,4],[6,3],[5,-10],[6,-2],[6,-1],[8,6],[-5,-2],[-10,-10],[5,10],[-2,-1],[-2,-2],[10,9],[2,10],[-4,-9],[-5,-3],[-7,-1],[8,4],[-4,-7],[-7,-5],[6,3],[-2,10],[-9,-8],[-2,-1],[-3,-1],[-4,3],[1,2],[-10,7],[1,-6],[10,2],[8,6],[-10,-9],[9,-5],[7,1],[-7,-8],[-2,-5],[-2,5],[-10,5],[-6,8],[-10,-8],[-8,-2],[-9,3],[-7,-3],[5,-9],[2,2],[2,7],[-8,1],[-1,9],[-10,-6],[-5,4],[-1,1],[8,2],[-6,9],[-2,6],[-3,-10],[-6,6],[1,6],[1,7],[1,-8],[8,9],[6,3],[-6,10],[6,4],[10,-1],[-1,6],[-8,-4],[1,-8],[-1,4],[-4,-5],[-6,10],[6,5],[3,4],[4,6],[3,3],[-1,2],[7,-1],[-2,5],[-1,9],[8,-3],[1,-5],[-7,7],[10,-5],[-10,-4],[2,-1],[-2,-2],[1,10],[5,-2],[-1,1],[9,-2],[-7,-1],[6,7],[-1,-2],[-7,5],[6,-9],[9,7],[-2,1],[-6,2],[2,4],[1,3],[2,-2],[-2,8],[2,-6],[3,-4],[2,6],[-10,5],[4,-7],[-3,-6],[10,5],[-6,-7],[-4,-1],[8,2],[3,-10],[-6,5],[6,-6],[4,3],[1,5],[3,-6],[-5,-6],[6,-5],[-5,2],[-1,3],[10,-6],[1,-10],[9,8],[7,1],[-2,-7],[2,-7],[-8,-10],[7,8],[-3,2],[4,-4],[7,-5]], dtype = "int16")#candidate|5559|(540, 2)|const|int16
bop_5560 = relay.mod(call_5545.astype('float32'), relay.reshape(const_5559.astype('float32'), relay.shape_of(call_5545))) # shape=(540, 2)
bop_5563 = relay.mod(call_5546.astype('float32'), relay.reshape(const_5559.astype('float32'), relay.shape_of(call_5546))) # shape=(540, 2)
bop_5568 = relay.minimum(const_5559.astype('uint8'), relay.reshape(bop_5560.astype('uint8'), relay.shape_of(const_5559))) # shape=(540, 2)
bop_5571 = relay.minimum(const_5559.astype('uint8'), relay.reshape(bop_5563.astype('uint8'), relay.shape_of(const_5559))) # shape=(540, 2)
func_1311_call = mod.get_global_var('func_1311')
func_1312_call = mutated_mod.get_global_var('func_1312')
call_5573 = relay.TupleGetItem(func_1311_call(), 0)
call_5574 = relay.TupleGetItem(func_1312_call(), 0)
output = relay.Tuple([bop_5568,call_5573,])
output2 = relay.Tuple([bop_5571,call_5574,])
func_5581 = relay.Function([], output)
mod['func_5581'] = func_5581
mod = relay.transform.InferType()(mod)
mutated_mod['func_5581'] = func_5581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5581_call = mutated_mod.get_global_var('func_5581')
call_5582 = func_5581_call()
output = call_5582
func_5583 = relay.Function([], output)
mutated_mod['func_5583'] = func_5583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3260_call = mod.get_global_var('func_3260')
func_3262_call = mutated_mod.get_global_var('func_3262')
call_5586 = relay.TupleGetItem(func_3260_call(), 0)
call_5587 = relay.TupleGetItem(func_3262_call(), 0)
var_5588 = relay.var("var_5588", dtype = "float32", shape = (3, 7, 7))#candidate|5588|(3, 7, 7)|var|float32
bop_5589 = relay.subtract(call_5586.astype('int8'), relay.reshape(var_5588.astype('int8'), relay.shape_of(call_5586))) # shape=(3, 7, 7)
bop_5592 = relay.subtract(call_5587.astype('int8'), relay.reshape(var_5588.astype('int8'), relay.shape_of(call_5587))) # shape=(3, 7, 7)
output = relay.Tuple([bop_5589,])
output2 = relay.Tuple([bop_5592,])
func_5597 = relay.Function([var_5588,], output)
mod['func_5597'] = func_5597
mod = relay.transform.InferType()(mod)
mutated_mod['func_5597'] = func_5597
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5598 = relay.var("var_5598", dtype = "float32", shape = (3, 7, 7))#candidate|5598|(3, 7, 7)|var|float32
func_5597_call = mutated_mod.get_global_var('func_5597')
call_5599 = func_5597_call(var_5598)
output = call_5599
func_5600 = relay.Function([var_5598], output)
mutated_mod['func_5600'] = func_5600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5426_call = mod.get_global_var('func_5426')
func_5428_call = mutated_mod.get_global_var('func_5428')
call_5655 = relay.TupleGetItem(func_5426_call(), 0)
call_5656 = relay.TupleGetItem(func_5428_call(), 0)
func_5421_call = mod.get_global_var('func_5421')
func_5423_call = mutated_mod.get_global_var('func_5423')
call_5664 = relay.TupleGetItem(func_5421_call(), 4)
call_5665 = relay.TupleGetItem(func_5423_call(), 4)
func_4445_call = mod.get_global_var('func_4445')
func_4447_call = mutated_mod.get_global_var('func_4447')
const_5667 = relay.const([7.056239,-0.085917,-6.179476,1.324707,-5.882072,3.948838,1.688911,-7.149905,-2.878814,1.727504,-8.099068,1.184136,-3.718292,1.888524,4.971719,6.845704,-1.732272,7.708381,-8.407000,-6.692670,9.214977,5.653917,-4.841545,7.934513,1.378287,5.421835,2.999691,0.912473,5.699669,9.895594,2.124328,8.521802,-7.247457,2.012429,-0.471234,-7.973470,9.346367,-5.287577,3.648283,-5.713364,7.314640,0.260103,-5.697922,-5.004810,1.787924,2.139307,-3.857301,-2.625100,1.646264,3.072291,7.819965,-2.197786,-5.394608,-5.157358,-3.115650,-5.614784,2.811637,-2.641913,-0.004308,7.296779,-0.839491,-5.425255,3.639739,-0.571953,-2.266687,-2.440411,2.366572,-7.764140,-1.861263,0.798550,9.120160,-7.570502,1.760866,8.697055,6.151569,-7.949275,1.607973,-1.759770,0.681287,5.631017,-2.236020,-3.375447,-7.705296,9.248973,4.702207,-9.736879,-0.901008,2.454253,1.571984,6.559235,3.704253,5.708827,2.990125,-2.391127,-8.425412,-4.580093,3.196125,-9.448800,-7.350470,-7.816677,-2.236553,-9.670193,8.666403,2.862234,-2.897944,9.402425,-9.880285,-6.645216,-5.146216,-4.698864,5.969303,-7.854386,8.081575,-5.826241,-3.512750,-3.174957,3.989823,-7.489827,-7.916591,-4.526634,-2.789077,4.924781,-9.097867,-6.651558,-7.241752,6.224514,-2.974699,-9.083111,-0.805123,8.545792,-0.485551,3.090663,-4.205762,-5.924549,6.136211,-5.899122,1.217890,-9.243781,2.546149,-3.382734,-9.633085,3.161835,2.540149,-7.554018,1.014161,8.971726,2.873675,7.253819,-1.429311,4.362705,-2.391640,6.687117,0.695120,7.865187,4.476943,-0.830625,5.653390,-1.783008,8.370772,-4.047644,-4.874117,-9.583922,7.797228,9.722336,-4.461325,6.057540,-5.345481,-3.396883,3.690637,5.497255,5.035146,-8.615761,1.671629,-4.827124,2.741545,6.484673,-6.787676,-6.595228,-9.110190,4.198021,-2.770014,7.946705,2.809226,-3.496022,-8.106192,3.050727,7.491188,-2.906946,-9.445816,1.498508,-2.722984,6.666049,5.907025,-5.246102,-1.786395,-9.265261,-1.708852,5.897911,3.024245,-6.004515,8.674816,0.374886,1.605224,-9.017927,-6.835182,-3.373984,-1.651306,6.182679,4.626150,5.887782,5.154033,-1.654196,-7.046372,-7.693221,3.374074,7.536083,-8.498369,1.311386,-5.971132,-5.797655,2.004057,2.515036,-5.195742,5.581825,-6.965536,6.144945,-6.255025,-4.078609,-4.473936,-1.520712,2.570783,-1.217256,0.422432,-2.111511,8.042492,-6.673245,4.925555,1.241933,9.996555,3.282324,7.370719,2.811790,-0.848985,-9.931207,-1.357451,-2.830212,-4.520671,-6.310584,-0.599289,-4.559628,1.298425,-9.621972,-3.484392,-1.655210,4.720787,-8.652098,1.488460,-2.081726,3.585133,-8.400100,-8.402095,6.033514,3.824151,-7.994858,-4.337605,-4.118325,1.966108,-8.191900,-6.406359,2.213176,-9.156377,-1.404564,-0.555010,0.316556,-0.526553,1.723692,-9.024085,5.119139,-6.309110,8.180564,-9.920465,-3.964974,4.412312,-7.611547,-3.137796,8.672033,8.845846,-1.457091,-6.119513,7.653523,4.566190,7.647878,2.232917,1.550529,-4.233449,2.501311,-4.259990,0.754083,-5.825596,9.298555,7.390035,-2.694826,6.610008,-6.089486,-8.251085,-4.762388,7.777110,-5.630040,-9.711913,-3.250196,-7.852173,-6.955984,-3.686472,-1.775099,5.896588,6.369941,-9.858602,7.757137,-1.666453,-0.755443,4.237083,-8.007497,-4.893544,2.000083,-2.026019,-1.482674,0.808604,-2.621429,-1.954916,1.322466,-1.402340,-5.070869,-7.337764,-7.588078,-6.058243,0.997689,1.326131,-4.469607,-9.190142,5.784190,7.321553,-7.316847,-9.087464,-7.031575,2.030212,-7.681988,-8.070558,3.446196,-0.925987,4.466812,-6.857196,-2.381989,-4.711098,0.957521,-6.492419,-9.440849,-2.871293,6.503546,5.098355,7.970684,2.084244,-6.163640,6.169041,-7.442534,-0.052582,-2.401232,-8.401623,-8.719389,3.471041,-4.483874,-9.849110,8.984469,6.417041,0.191294,7.721762,4.121835,-2.513077,-3.573709,0.426028,4.872569,3.180926,-0.936954,-8.324644,-4.111433,7.685326,-4.931111,1.268477,-4.785203,-3.662777,4.849362,0.858453,-1.518307,3.269494,1.215991,7.182070,-7.865830,-3.406379,-3.691209,0.564124,-2.957666,6.667398,8.877166,-4.419777,6.754794,7.044334,-5.768232,-3.638902,3.964453,-7.815617,-4.118626,1.513198,-7.318140,-9.584155,3.934830,5.411237,-2.105951,-9.289171,-0.989407,0.384766,5.901615,-3.915648,3.792814,-3.104118,-7.967263,3.820963,-1.511827,4.325931,-7.933723,8.338659,-9.049850,4.003348,-9.174567,-6.641301,5.311930,-3.566553,-9.949233,-5.872713,0.505507,-8.680265,1.108300,6.550367,2.225838,-3.360607,-9.181124,7.393653,6.187390,2.481764,-6.405274,-1.031551,3.340619,-6.127594,6.761505,-3.364206,5.440707,4.653828,-5.905980,-0.397513,8.110010,-1.124659,-8.172856,-3.755151,-6.407632,4.206997,8.291276,-6.260443,0.738208,3.692752,-4.983997,7.573308,-0.624607,-2.844279,1.093717,-7.998981,-6.586197,-7.062718,-2.247138,-3.935300,-5.863961,9.253082,0.136009], dtype = "float64")#candidate|5667|(480,)|const|float64
call_5666 = func_4445_call(relay.reshape(const_5667.astype('float64'), [4, 15, 8]))
call_5668 = func_4445_call(relay.reshape(const_5667.astype('float64'), [4, 15, 8]))
output = relay.Tuple([call_5655,call_5664,call_5666,const_5667,])
output2 = relay.Tuple([call_5656,call_5665,call_5668,const_5667,])
func_5679 = relay.Function([], output)
mod['func_5679'] = func_5679
mod = relay.transform.InferType()(mod)
mutated_mod['func_5679'] = func_5679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5679_call = mutated_mod.get_global_var('func_5679')
call_5680 = func_5679_call()
output = call_5680
func_5681 = relay.Function([], output)
mutated_mod['func_5681'] = func_5681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3882_call = mod.get_global_var('func_3882')
func_3883_call = mutated_mod.get_global_var('func_3883')
call_5735 = relay.TupleGetItem(func_3882_call(), 0)
call_5736 = relay.TupleGetItem(func_3883_call(), 0)
func_1311_call = mod.get_global_var('func_1311')
func_1312_call = mutated_mod.get_global_var('func_1312')
call_5748 = relay.TupleGetItem(func_1311_call(), 0)
call_5749 = relay.TupleGetItem(func_1312_call(), 0)
uop_5760 = relay.acosh(call_5748.astype('float32')) # shape=(3, 4, 7)
uop_5762 = relay.acosh(call_5749.astype('float32')) # shape=(3, 4, 7)
func_1580_call = mod.get_global_var('func_1580')
func_1582_call = mutated_mod.get_global_var('func_1582')
call_5765 = relay.TupleGetItem(func_1580_call(), 0)
call_5766 = relay.TupleGetItem(func_1582_call(), 0)
func_2371_call = mod.get_global_var('func_2371')
func_2373_call = mutated_mod.get_global_var('func_2373')
call_5767 = func_2371_call()
call_5768 = func_2371_call()
bop_5769 = relay.logical_or(uop_5760.astype('bool'), relay.reshape(call_5748.astype('bool'), relay.shape_of(uop_5760))) # shape=(3, 4, 7)
bop_5772 = relay.logical_or(uop_5762.astype('bool'), relay.reshape(call_5749.astype('bool'), relay.shape_of(uop_5762))) # shape=(3, 4, 7)
output = relay.Tuple([call_5735,call_5765,call_5767,bop_5769,])
output2 = relay.Tuple([call_5736,call_5766,call_5768,bop_5772,])
func_5777 = relay.Function([], output)
mod['func_5777'] = func_5777
mod = relay.transform.InferType()(mod)
output = func_5777()
func_5778 = relay.Function([], output)
mutated_mod['func_5778'] = func_5778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5303_call = mod.get_global_var('func_5303')
func_5304_call = mutated_mod.get_global_var('func_5304')
call_5840 = relay.TupleGetItem(func_5303_call(), 1)
call_5841 = relay.TupleGetItem(func_5304_call(), 1)
func_5018_call = mod.get_global_var('func_5018')
func_5021_call = mutated_mod.get_global_var('func_5021')
var_5857 = relay.var("var_5857", dtype = "uint32", shape = (270,))#candidate|5857|(270,)|var|uint32
call_5856 = relay.TupleGetItem(func_5018_call(relay.reshape(var_5857.astype('uint32'), [6, 15, 3])), 1)
call_5858 = relay.TupleGetItem(func_5021_call(relay.reshape(var_5857.astype('uint32'), [6, 15, 3])), 1)
output = relay.Tuple([call_5840,call_5856,var_5857,])
output2 = relay.Tuple([call_5841,call_5858,var_5857,])
func_5892 = relay.Function([var_5857,], output)
mod['func_5892'] = func_5892
mod = relay.transform.InferType()(mod)
mutated_mod['func_5892'] = func_5892
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5893 = relay.var("var_5893", dtype = "uint32", shape = (270,))#candidate|5893|(270,)|var|uint32
func_5892_call = mutated_mod.get_global_var('func_5892')
call_5894 = func_5892_call(var_5893)
output = call_5894
func_5895 = relay.Function([var_5893], output)
mutated_mod['func_5895'] = func_5895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3919_call = mod.get_global_var('func_3919')
func_3921_call = mutated_mod.get_global_var('func_3921')
call_5915 = func_3919_call()
call_5916 = func_3919_call()
output = relay.Tuple([call_5915,])
output2 = relay.Tuple([call_5916,])
func_5918 = relay.Function([], output)
mod['func_5918'] = func_5918
mod = relay.transform.InferType()(mod)
output = func_5918()
func_5919 = relay.Function([], output)
mutated_mod['func_5919'] = func_5919
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5978 = relay.const([[[-3,8,-2,2,2],[-5,-2,5,-10,4],[9,3,-10,-8,-4],[-10,-5,-1,-7,3],[4,6,-6,9,8]],[[-10,-3,-10,-3,7],[3,-4,-10,-7,9],[10,9,-9,-9,-1],[-2,-5,3,1,-4],[-5,6,9,-8,4]],[[-8,1,10,-2,-10],[7,-3,8,10,6],[-8,2,2,-1,-8],[8,-9,5,8,-10],[10,10,-10,3,-8]],[[5,-10,9,10,10],[6,6,-6,-7,-6],[-5,-4,4,-5,-3],[6,8,-5,-5,8],[-3,-3,10,-9,6]],[[-1,4,5,-9,-4],[3,10,-5,-10,-2],[-6,-3,-3,8,9],[9,-4,7,-2,-2],[-9,-8,8,-8,4]],[[9,4,-8,-4,-10],[10,-4,4,-4,8],[-5,-2,-7,-8,9],[4,3,1,-4,-10],[9,-4,4,2,6]],[[-5,8,6,8,-10],[-10,-6,-10,-6,3],[9,-6,4,-2,-10],[-8,-9,-10,2,3],[-4,6,-7,8,-3]],[[7,-2,-8,3,-3],[-8,7,7,-6,-7],[1,-1,-3,5,10],[-2,-1,-2,-1,7],[-9,6,4,-5,-4]]], dtype = "uint16")#candidate|5978|(8, 5, 5)|const|uint16
const_5979 = relay.const([[[-4,-10,2,-6,10],[6,5,10,3,1],[-5,-4,-2,10,2],[9,-10,-8,-8,7],[-10,-6,4,-8,-4]],[[-4,-6,3,7,-9],[5,5,-7,-10,-7],[-3,-10,2,4,3],[-1,-7,5,-6,-3],[-9,2,-6,9,6]],[[-2,5,-7,-8,-8],[-1,7,-7,-9,-5],[7,1,-10,-8,2],[8,-4,-8,3,4],[-8,-2,6,-7,2]],[[9,6,7,-8,8],[1,-6,1,6,1],[-5,8,5,-5,-10],[6,6,-9,9,-2],[-7,-3,7,-8,-5]],[[-6,9,-6,-5,9],[-9,5,7,2,1],[-3,6,5,7,10],[-4,2,8,10,-10],[1,3,7,-1,-8]],[[-3,-5,4,-4,-3],[4,-1,-1,-4,-4],[-1,6,-2,6,3],[8,-2,7,-2,10],[5,1,10,-5,-4]],[[-1,-6,8,3,3],[-7,-4,-3,6,1],[-1,10,2,-5,-6],[-8,3,-5,3,-5],[4,7,-1,-6,-8]],[[-3,-3,2,-2,-6],[9,7,-7,-2,-10],[7,1,1,-4,10],[-4,-2,5,6,-4],[-8,-6,2,-9,6]]], dtype = "uint16")#candidate|5979|(8, 5, 5)|const|uint16
bop_5980 = relay.less(const_5978.astype('bool'), relay.reshape(const_5979.astype('bool'), relay.shape_of(const_5978))) # shape=(8, 5, 5)
func_834_call = mod.get_global_var('func_834')
func_840_call = mutated_mod.get_global_var('func_840')
var_5984 = relay.var("var_5984", dtype = "float64", shape = (4, 36))#candidate|5984|(4, 36)|var|float64
var_5985 = relay.var("var_5985", dtype = "int8", shape = (572,))#candidate|5985|(572,)|var|int8
const_5986 = relay.const([-1.131385,-0.230794,-2.323235,-7.872466,7.088206,-6.356271,2.287875,2.841261,-6.811143,-9.236884,-0.245048,0.528961,-1.202091,1.426789,2.745121,-1.273164,-6.113181,-1.207648,0.881908,-5.365196,-7.016777], dtype = "float64")#candidate|5986|(21,)|const|float64
var_5987 = relay.var("var_5987", dtype = "bool", shape = (84,))#candidate|5987|(84,)|var|bool
call_5983 = relay.TupleGetItem(func_834_call(relay.reshape(var_5984.astype('float64'), [8, 3, 6]), relay.reshape(var_5985.astype('int8'), [572,]), relay.reshape(const_5986.astype('float64'), [21, 1]), relay.reshape(var_5987.astype('bool'), [7, 4, 3]), ), 8)
call_5988 = relay.TupleGetItem(func_840_call(relay.reshape(var_5984.astype('float64'), [8, 3, 6]), relay.reshape(var_5985.astype('int8'), [572,]), relay.reshape(const_5986.astype('float64'), [21, 1]), relay.reshape(var_5987.astype('bool'), [7, 4, 3]), ), 8)
func_4913_call = mod.get_global_var('func_4913')
func_4915_call = mutated_mod.get_global_var('func_4915')
call_6014 = relay.TupleGetItem(func_4913_call(relay.reshape(var_5987.astype('bool'), [21, 4])), 3)
call_6015 = relay.TupleGetItem(func_4915_call(relay.reshape(var_5987.astype('bool'), [21, 4])), 3)
output = relay.Tuple([bop_5980,call_5983,var_5984,var_5985,const_5986,var_5987,call_6014,])
output2 = relay.Tuple([bop_5980,call_5988,var_5984,var_5985,const_5986,var_5987,call_6015,])
func_6033 = relay.Function([var_5984,var_5985,var_5987,], output)
mod['func_6033'] = func_6033
mod = relay.transform.InferType()(mod)
var_6034 = relay.var("var_6034", dtype = "float64", shape = (4, 36))#candidate|6034|(4, 36)|var|float64
var_6035 = relay.var("var_6035", dtype = "int8", shape = (572,))#candidate|6035|(572,)|var|int8
var_6036 = relay.var("var_6036", dtype = "bool", shape = (84,))#candidate|6036|(84,)|var|bool
output = func_6033(var_6034,var_6035,var_6036,)
func_6037 = relay.Function([var_6034,var_6035,var_6036,], output)
mutated_mod['func_6037'] = func_6037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2354_call = mod.get_global_var('func_2354')
func_2355_call = mutated_mod.get_global_var('func_2355')
call_6047 = relay.TupleGetItem(func_2354_call(), 0)
call_6048 = relay.TupleGetItem(func_2355_call(), 0)
func_312_call = mod.get_global_var('func_312')
func_314_call = mutated_mod.get_global_var('func_314')
const_6050 = relay.const([-1.417867,2.357068,-2.222994,-7.929442,-1.524268,-1.249426,-3.961054,-2.890541,4.993674,8.141103,-4.502837,-3.731348,-7.646092,-9.506381,0.320098,-9.523011,9.296202,-1.910684,-6.670268,-9.570318,9.572452,8.731974,-2.406986,5.913157,-1.073427,4.439163,-1.633621,6.142384,0.949996,8.745807,4.030967,-8.550371,8.780199,8.892890,2.230118,-6.033932,-0.535153,-3.407660,0.987220,5.197341,-4.375437,-2.273125,-4.887761,-1.876398,-1.002799,-8.653055,6.539838,-9.790936,-4.322646,8.309606,6.867193,-8.128552,4.928701,2.544482,-4.023292,3.356111,9.167322,-8.221910,9.379271,0.568492,-0.950548,4.130419,-4.838052,-5.917821,5.789020,-3.252829,6.451911,5.023961,5.532949,-4.144034,7.686012,-7.561452,8.355565,-8.176693,3.012428,-7.794107,0.677989,-5.262565,6.729574,-4.178212,-3.512557,-7.538305,-0.430692,-3.418237,-7.022082,1.970368,-4.172787,-7.066598,-9.799586,-8.037541,-8.996968,3.391342,4.457820,9.812177,-6.075256,6.588006,-3.139642,5.322164,3.487508,-5.877241,-5.010646,7.457668,1.365637,-5.456719,-5.707368,-4.333206,-6.056556,7.175605,0.204633,-5.578827,-2.357967,-8.614847,5.575798,7.059637,9.054942,-6.145199,-4.350968,8.264507,5.574673,2.421972,-4.168577,-1.407245,-2.551640,-7.472534,-1.689422,2.103298,3.213659,1.364728,4.037358,9.518142,-7.740533,-2.514295,-3.782075,0.476063,-9.749319,7.381124,-9.121658,5.411948,1.293880,-9.762276,-3.531916,5.162716,0.748123,1.045466,9.415416,0.122501,-5.552644,-1.417788,1.475671,9.057509,8.110644,7.366215,-0.175121,-2.923487,-5.112722,-2.220804,-9.542189,-2.077121,-8.927041,5.099882,5.169973,-4.126884,-0.669050,-0.309259,-6.741232,0.731198,-6.935123,3.621733,3.938506,1.496114,-0.610833,9.673060,1.956431,-3.049097,5.123213,8.648321,-1.840031,-5.885368,1.308910,7.938663,-7.483440,6.441139,0.637562,-1.839970,-5.424997,-2.236069,8.666801,5.019882,-3.057467,-9.162887,5.207751,-8.758407,2.615703,4.866289,9.865531,-3.879563,9.457841,-0.409253,-9.496848,-3.447260,-3.927011,8.915629,-6.628455,-2.645927,-0.514212,-9.864110,7.688428,-7.372796,8.470733,8.204089,-6.094779,8.033839,7.792896,-0.910082,-9.464940,-7.322031,6.992554,-9.186928,-8.078855,-7.968968,8.903623,1.103897,3.591105,-9.968830,7.254613,4.280234,0.748312,2.878342,5.444054,9.984830,-0.622362,-1.341238,9.002986,6.155073,-6.854547,1.736945,-0.838726,-1.866952,-4.832763,0.434328,-5.910125,4.982135,0.712283,-4.800734,-5.686256,-7.849387,4.280291,-6.985957,1.405522,-8.386761,-0.486881,4.513995,-5.845420,-9.662985,-5.758263,-0.848331,2.121504,2.450849,4.629273,3.759490,2.622996,-4.863581,-9.573255,1.869855,2.921649,5.508198,1.188357,-1.628891,-2.840428,-0.267547,-9.116148,5.932849,-5.065164,-9.744159,-7.817031,5.803649,1.079514,-2.554152,1.298499,0.355474,-9.229651,-1.001803,-5.976478,0.004027,5.886330,1.409163,9.308633,1.812648,1.320182,1.813503,6.267626,0.019878,-7.277581,7.860998,-6.563280,-1.234530,8.399497,-0.882652,-1.008420,2.572760,-5.222330,5.002829,3.064495,6.208016,0.245629,4.951778,-8.580299,7.906035,-8.236344,-7.157750,-6.539155,0.487417,0.857699,0.443939,-2.364133,0.896735,9.659228,-7.635985,-6.577480,-5.766277,-9.722235,-4.857663,-0.280508,7.700326,-9.207530,8.107063,8.329024,8.309961,7.198569,-6.724562,7.573877,-5.083603,-9.331118,2.212300,-9.718013,-5.327913,8.062569,9.297538,5.615303,3.010352,-6.344174,-1.185462,6.775190,-5.576108,-8.969347,-9.223647,8.440878,-8.876229,0.642551,-9.132902,3.123877,-8.139255,3.037520,0.392814,3.289889,9.174585,6.188755,1.091330,8.744914,6.050729,-3.564056,1.302959,-6.164338,0.470196,8.611740,-2.304032,2.553000,-6.022815,-5.793865,9.634613,-6.751047,-1.730800,-3.402025,-6.537653,5.464706,2.645532,-3.757691,5.575125,-2.778019,-2.770423,-5.587678,1.633136,-9.877652,2.072040,3.393218,-7.279470,8.614984,9.059672,-6.548517,9.222958,-4.856816,7.737984,1.247274,3.740901,8.614081,4.145159,-3.219521,5.178014,-0.476997,-0.886496,2.400138,9.048867,7.251653,-2.183046,8.048666,5.421886,-5.697647,-4.161906,-8.317368,-1.172839,4.622156,9.135206,-0.059045,-3.793626,8.530200,-3.223239,2.370668,1.960095,-5.299838,-0.416914,1.833398,1.430084,-4.314734,3.504911,-8.693890,3.763388,-3.013965,8.953571,6.260989,1.782478,-6.324931,-9.760366,-5.747221,-3.742097,0.761275,-0.885152,9.216248,3.290064,0.177192,-8.209320,-1.985043,1.132114,-6.044232,9.998596,3.845828,5.801842,-6.705338,3.747526,5.050818,5.167225,8.062960,-2.454794,-7.220565,-3.405775,-6.953663,7.883700,-2.190035,8.237235,9.208481,2.321071,-0.446449,8.113063,-7.997377,3.947365,-0.484522,-5.287259,-2.728007,-6.853639,-3.389106,-6.461127,6.719373,7.265111,-4.329026,9.118589,8.383156,-6.960052,1.791621,-1.839634,2.828498,7.480401,4.149777,5.271134,-8.229468,-9.803916,-2.011213,-4.244374,-4.325268,-2.054773,-1.719259,-7.976325,-0.318381,3.787594,-1.369555,1.398558,6.665725,-2.138867,-8.875608,-6.737847,6.184865,-1.006622,6.246870,-5.786517,-2.529348,2.578785,-8.515503,8.893750,-9.642509,-2.925047,-1.959216,-5.746519,-0.349002,-9.862558,-8.505789,-2.676041,1.499838,-6.970840,1.821954,-7.055833,9.209230,-3.711418,-2.373243,-7.403217,6.477503,1.662634,-0.741327,9.203912,-0.508934,4.511339,9.459007,1.545111,-9.769646,1.436643,-9.025130,-2.710896,8.935945,5.642352,-6.769108,9.009133,-5.730539,1.866904,-0.407196,6.526930,1.203117,-4.022231,-0.661642,6.883503,8.621518,-8.267126,5.080224,1.440083,-4.836240,-4.816729,-0.421480,-0.828014,-0.221655,5.732376,-9.875839,-5.409152,1.791528,-8.726151,-8.869354,7.391326,3.755225,7.282520,-3.250752,7.664304,2.565316,0.511711,3.410199,-0.460770,8.284463,2.958185,-5.114434,1.620990,-5.157278,-8.983037,-9.160962,-7.863450,4.566863,-6.733461,-3.362392,-7.894319,3.517210,3.616606,0.574810,-1.447610,6.144614,0.061131,1.417348,6.385419,-7.420156,-7.838146,2.613516,-2.224705,-8.927538,-2.338702,6.218054,-8.453752,-1.608119,3.634575,5.445632,3.650676,8.333765,2.081703,2.211913,-5.800316,-0.393650,-3.892962,6.223991,-6.455378,5.179114,-0.482565,-6.753306,2.142273,-7.816707,-3.052181,9.949106,-9.035692,-1.858293,7.488034,5.427933,-8.712209,2.882010,7.556200,6.186658,-4.146416,3.112515,3.135980,-6.245454,-8.360209,-2.253306,-2.814184,-0.102010,-7.352403,-4.718712,2.144093,-4.915454,0.797498,-2.717382,-2.077255,8.809755,9.769553,-3.908080,-0.435490,8.909318,2.073746,9.610155,6.095960,8.943641,4.484958,-0.274815,5.417567,-8.740271,-8.036225,7.387262,-9.919117,4.755074,1.769542,3.536002,-6.917966,4.569241,-4.544648,-3.206878,-4.818595,6.079290,3.178761,-0.567717,-7.336847,-2.775665,-1.581887,-1.843892,-0.573478,-1.193071,8.648892,8.723998,-1.276456,7.078613,3.666830,8.559987,7.336756,9.232895,-0.740143,0.840098,-0.273746,0.358029,-2.865234,-5.495434,5.458259,-2.648303,-6.628305,0.297994,-7.343227,6.609542,-2.072500,-4.711402,9.893652,-9.627752,1.905760,2.688332,9.297511,-1.514721,-1.890553,-6.346763,1.801854,-0.483521,-2.956061,2.426316,-8.848189,7.374992,9.339561,3.413517,4.324226,-6.265713,0.368009,1.050252,-8.502763,-2.133326,-3.148991,-9.936236,-1.516619,9.693010,-9.830917,5.852880,1.893911,1.072039,-5.540100,7.149143,8.888449,1.508429,6.264785,3.439818,-8.506276,-9.983741,3.921361,3.594005,8.496434,-9.055228,0.934899,9.144478,-4.592381,0.798962,8.794697,1.230754,-9.418198,8.788852,8.502532,5.709420,0.258707,-1.384052,-1.653108,-3.879878,-8.247472,-9.077823,-4.805352,-6.497488,-9.654317,-1.929017,-2.335793,-2.238111,-2.561839,2.201487,5.164606,3.686992,-3.908033,1.102486,2.299830,5.645775,-8.877408,3.914163,5.077361,-2.449694,5.702595,8.043049,-4.604406,-0.707257,3.532619,-6.364922,-3.348876,1.861517,3.287053,-5.254379,-4.712799,-7.965777,4.302975,-2.916245,4.679956,-6.514002,7.349306,-1.896624,-7.049931,-5.560251,-7.892362,-8.287261,-3.146574,-4.883018,-0.474066,4.109142,-8.608922,8.217244,1.497743,-2.397459,-2.459427,-8.010075,-9.811800,9.716963,1.972153,-5.713122,-2.393778,9.318888,5.616553,-8.950998,-8.592372,-4.889808,4.182139,-3.589590,5.361447,9.252671,1.223071,0.379345,6.314774,-9.456788,-5.120502,-3.730088,3.882216,-5.379860,4.983577,-1.546873,-2.187732,-1.889780,7.922543,-4.242833,4.915456,-4.179875,6.662699,-2.760559,5.815736,-0.476995,-9.195621,-6.658382,-6.997882,-9.235677,-1.761640,0.620439,9.721034,-9.440524,-7.085958,-8.612501,6.671262,-6.140091,-4.995537,4.304792,-6.784594,-9.377224,-7.324997,-2.103437,8.067166,9.433185,-2.383572,-6.870744,-9.099276,-2.334898,7.890797,0.209811,7.831142,-1.392597,-3.770609,6.519836,1.703695,1.382411,6.500844,-0.729525,-9.716103,-2.172271,-2.466105,1.301096,1.959584,9.504997,-1.797785,2.827445,-2.782897,5.359781,5.885412,1.036298,-3.073201,3.510611,8.494912,-3.505276,8.341816,-8.962992,4.721063,-0.585607,2.772181,-3.388827,-9.281347,1.840137,4.284204,-6.475961,-9.190816,1.328171,-6.886300,-8.866945,-4.417671,-3.554517,5.778944,2.882136,-8.315011,3.247140,5.119899,2.635435,-1.354285,-6.586540,7.957755,-3.602193,0.120719,1.617540,-2.814727,3.983202,-5.940424,-4.309508,-8.334330,3.142378,-2.493621,-5.415775,-4.742222,1.267642,-3.099695,-1.053577,-3.020857,2.009619,-8.089403,-8.919078,-2.758261,0.581912,7.382886,-1.394108,8.435248,-1.656319,3.768567,8.734447,-9.969943,-5.474792,-6.418814,-0.708454,9.777687,-5.599033,-0.199762,0.832058,-5.063702,-9.935180,-4.786832,5.274912,-3.559191,2.973981,-0.038470,4.310057,-8.785712,-9.737636,-2.981979,6.939449,-3.707748,4.589434,-5.096962,-5.415199,4.479505,-9.563181,8.224561,7.968879,5.460884,9.323926,5.214288,-7.559096,-2.944473,-4.215321,-8.277956,5.493111,-5.247203,5.576954,1.654945,4.955085,-2.596776,-8.043002,-0.046514,0.009812,9.486509,7.258108,0.153806,-6.191820,-3.158420,-7.324115,-6.473969,-0.345461,-5.638826,-8.328018,5.134579,-6.540714,8.515032,2.889249,-5.884749,-1.359903,-6.812300,-4.563046,8.908062,3.000110,-8.742022,-1.725574,8.757024,8.505219,7.508705,4.724196,5.331980,-9.490153,3.079809,-3.352024,2.207501,0.815956,5.653170,4.518973,-5.246815,-3.749030,5.590116,7.925309,2.388891,-8.273543,-0.465324,8.851596,-5.749607,1.903985,-7.822811,2.399681,-7.798882,2.127300,3.062006,-2.318708,3.705107,-4.220965,-1.019507,-1.124383,-2.017928,-1.534221,-9.168022,-9.375417,5.406735,-2.013726,-2.971928,8.230394,-3.971548,-2.271571,-8.412704,6.344928,0.359868,-8.829269,-7.197619,-4.838387,7.320297,0.207956,-4.571978,-9.968854,3.895696,7.183952,3.271961,-4.688673,0.019229,7.198434,-2.763752,-0.435818,-0.936427,1.687293,0.580936,5.101065,-0.322096,-4.288843,-3.555433,-6.412337,-7.564764,6.302174,6.282589,5.486406,-6.192773,-5.386917,-9.778376,7.583591,3.086622,2.007785,-5.936854,8.766840,7.758938,2.124926,9.332693,-6.822176,-5.749031,5.825802,6.693749,-1.471094,9.869600,-3.233175,9.823380,-9.624647,-8.247456,2.244385,-1.402320,9.646886,1.724252,8.406397,9.486396,-7.014487,-5.853499,6.472691,-8.189041,4.835905,-4.304896,6.146580,9.065910,-7.784690,9.581306,-6.953029,-6.549997,-5.497474,7.647474,-4.737697,5.470354,-8.898883,-1.443627,6.484056,2.269796,-5.313354], dtype = "float32")#candidate|6050|(1125,)|const|float32
call_6049 = func_312_call(relay.reshape(const_6050.astype('float32'), [15, 5, 15]))
call_6051 = func_312_call(relay.reshape(const_6050.astype('float32'), [15, 5, 15]))
output = relay.Tuple([call_6047,call_6049,const_6050,])
output2 = relay.Tuple([call_6048,call_6051,const_6050,])
func_6061 = relay.Function([], output)
mod['func_6061'] = func_6061
mod = relay.transform.InferType()(mod)
output = func_6061()
func_6062 = relay.Function([], output)
mutated_mod['func_6062'] = func_6062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4415_call = mod.get_global_var('func_4415')
func_4417_call = mutated_mod.get_global_var('func_4417')
call_6066 = relay.TupleGetItem(func_4415_call(), 0)
call_6067 = relay.TupleGetItem(func_4417_call(), 0)
output = call_6066
output2 = call_6067
func_6069 = relay.Function([], output)
mod['func_6069'] = func_6069
mod = relay.transform.InferType()(mod)
mutated_mod['func_6069'] = func_6069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6069_call = mutated_mod.get_global_var('func_6069')
call_6070 = func_6069_call()
output = call_6070
func_6071 = relay.Function([], output)
mutated_mod['func_6071'] = func_6071
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6151 = relay.var("var_6151", dtype = "float32", shape = (14, 13, 7))#candidate|6151|(14, 13, 7)|var|float32
uop_6152 = relay.log2(var_6151.astype('float32')) # shape=(14, 13, 7)
uop_6156 = relay.asinh(uop_6152.astype('float64')) # shape=(14, 13, 7)
output = relay.Tuple([uop_6156,])
output2 = relay.Tuple([uop_6156,])
func_6158 = relay.Function([var_6151,], output)
mod['func_6158'] = func_6158
mod = relay.transform.InferType()(mod)
mutated_mod['func_6158'] = func_6158
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6159 = relay.var("var_6159", dtype = "float32", shape = (14, 13, 7))#candidate|6159|(14, 13, 7)|var|float32
func_6158_call = mutated_mod.get_global_var('func_6158')
call_6160 = func_6158_call(var_6159)
output = call_6160
func_6161 = relay.Function([var_6159], output)
mutated_mod['func_6161'] = func_6161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2999_call = mod.get_global_var('func_2999')
func_3001_call = mutated_mod.get_global_var('func_3001')
call_6208 = relay.TupleGetItem(func_2999_call(), 1)
call_6209 = relay.TupleGetItem(func_3001_call(), 1)
output = call_6208
output2 = call_6209
func_6231 = relay.Function([], output)
mod['func_6231'] = func_6231
mod = relay.transform.InferType()(mod)
output = func_6231()
func_6232 = relay.Function([], output)
mutated_mod['func_6232'] = func_6232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2999_call = mod.get_global_var('func_2999')
func_3001_call = mutated_mod.get_global_var('func_3001')
call_6252 = relay.TupleGetItem(func_2999_call(), 1)
call_6253 = relay.TupleGetItem(func_3001_call(), 1)
output = relay.Tuple([call_6252,])
output2 = relay.Tuple([call_6253,])
func_6254 = relay.Function([], output)
mod['func_6254'] = func_6254
mod = relay.transform.InferType()(mod)
mutated_mod['func_6254'] = func_6254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6254_call = mutated_mod.get_global_var('func_6254')
call_6255 = func_6254_call()
output = call_6255
func_6256 = relay.Function([], output)
mutated_mod['func_6256'] = func_6256
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6268 = relay.var("var_6268", dtype = "float32", shape = (16, 7, 8))#candidate|6268|(16, 7, 8)|var|float32
uop_6269 = relay.sin(var_6268.astype('float32')) # shape=(16, 7, 8)
output = uop_6269
output2 = uop_6269
func_6278 = relay.Function([var_6268,], output)
mod['func_6278'] = func_6278
mod = relay.transform.InferType()(mod)
var_6279 = relay.var("var_6279", dtype = "float32", shape = (16, 7, 8))#candidate|6279|(16, 7, 8)|var|float32
output = func_6278(var_6279)
func_6280 = relay.Function([var_6279], output)
mutated_mod['func_6280'] = func_6280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_925_call = mod.get_global_var('func_925')
func_926_call = mutated_mod.get_global_var('func_926')
call_6286 = func_925_call()
call_6287 = func_925_call()
func_2159_call = mod.get_global_var('func_2159')
func_2161_call = mutated_mod.get_global_var('func_2161')
call_6299 = relay.TupleGetItem(func_2159_call(), 0)
call_6300 = relay.TupleGetItem(func_2161_call(), 0)
func_2617_call = mod.get_global_var('func_2617')
func_2621_call = mutated_mod.get_global_var('func_2621')
const_6311 = relay.const(False, dtype = "bool")#candidate|6311|()|const|bool
const_6312 = relay.const([[2,9,-4,-5],[-5,1,9,-6],[5,-5,-5,-7],[2,-6,3,2],[-2,5,9,8],[10,7,-5,10],[8,-2,6,2],[9,-4,8,10],[-10,-7,-6,-3],[4,-8,3,-9],[-3,-6,2,6],[-5,-6,10,-4],[-2,9,6,6],[4,-1,2,-9],[-10,-6,4,6],[4,-4,-1,-5],[9,-2,-10,7],[10,10,-5,-7],[-4,1,-4,-7],[10,-3,8,-3],[3,-2,-4,6],[6,-8,-3,-9],[-7,-2,7,9],[1,-8,9,-5],[-1,-7,7,-10],[7,5,-2,-6],[-3,10,-8,-7],[9,7,1,2],[3,6,1,3],[4,8,10,-5],[-4,5,1,2],[-9,10,3,1],[-1,5,3,-2],[6,2,-5,1],[1,-1,9,-4],[2,-10,8,-8],[10,-1,-1,-9],[4,-5,10,6],[3,4,9,-2],[-2,6,6,8],[-7,-9,1,-7],[3,4,9,3],[-5,4,4,7],[-10,5,6,4],[-2,4,-2,10],[3,9,2,-4],[8,5,5,10],[-2,5,-10,-3],[-1,8,8,-9],[4,4,1,-4],[-5,-2,10,10],[-9,-2,-4,-3],[-2,10,-1,-2],[8,-2,2,-7],[5,-1,-3,9],[-6,3,3,-4],[-7,4,5,4],[10,2,1,10],[9,3,2,6],[-2,-7,2,-10],[6,-10,10,4],[-9,-5,-6,-10],[-6,-8,6,6],[2,-5,-5,-5],[10,3,9,-1],[4,1,-1,-6],[6,9,10,10],[-9,8,9,-6],[-1,1,8,10],[-8,-3,-4,9],[-7,-1,-4,-8],[-5,8,2,-3],[4,-2,-5,-6],[5,-5,-10,-8],[1,-3,10,7],[-10,9,8,6],[7,-4,-2,9],[-10,6,-7,7],[6,2,-3,-1],[-5,-8,6,4],[-2,8,-1,-9],[1,2,-2,5],[-1,3,-7,1],[-9,-4,-1,-10],[1,6,7,6],[3,-6,-9,4],[-10,-7,5,1],[-7,1,-7,10],[9,1,-3,3],[-7,2,10,9],[7,8,-4,-6],[-4,-8,7,1],[5,-3,-1,4],[-5,-5,6,-4],[-9,-5,-1,-5],[-9,6,-2,4],[-10,-8,3,-6],[-10,-3,4,7],[10,-6,4,-6],[6,-7,-10,6],[7,-1,-5,1],[8,4,-3,-7],[3,-6,7,-10],[-5,-9,-7,4],[-10,6,-2,3],[-1,5,-7,7],[-6,-9,-4,-3],[-5,3,-1,7],[4,7,10,-7],[8,-3,2,9],[2,10,6,-4],[-8,-4,-3,-10],[-6,-4,-10,5],[3,-3,9,-5],[-9,-6,10,7],[-6,9,-1,8],[-8,4,-3,6],[-9,1,2,-9],[-4,-7,5,-6],[-4,-10,-6,4],[9,1,-7,8],[-7,-1,6,9],[5,6,-9,-10],[-7,-10,7,6],[2,-9,-6,2],[-7,-4,5,5],[-1,-1,-1,-5],[-9,1,1,-3],[-7,-9,-1,-10],[-5,3,8,-1],[9,3,-1,10],[5,8,-9,8],[-5,-10,-7,-5],[5,-4,4,-3],[-5,4,-7,6],[4,-10,4,10],[5,4,-10,-6],[-6,7,-4,-2],[-9,5,-1,-9],[-6,7,-9,7],[-6,-7,1,1],[-6,7,1,10],[-8,-5,7,-1],[5,3,6,9],[3,10,1,-1],[-2,-8,-10,2],[-5,-4,-2,-7],[6,2,-10,-5],[7,8,9,-7],[-8,3,-1,-3],[-3,-1,3,-4],[6,2,-7,10],[4,-5,5,-7],[5,10,-6,-4],[-1,4,3,-4],[3,6,5,-7],[-3,-4,-2,-3],[1,-7,-8,6],[6,-5,9,9],[-7,6,-10,-9],[-5,1,-5,6],[-10,5,-4,9],[-2,-10,-6,-4],[3,-3,1,5],[-6,-3,3,-9],[2,2,4,5],[-8,6,3,4],[-10,-10,10,6],[4,-7,1,-1],[-9,-9,6,10],[1,7,7,-2],[10,-9,7,-6],[-7,9,10,-10],[-5,-3,-5,7],[10,9,-7,6],[3,8,1,3],[9,-5,-2,-2],[-6,-9,10,6],[-2,-9,8,-6],[9,4,-10,-9],[7,-9,-10,3],[6,6,8,5],[-9,-8,-8,-1],[-10,8,-10,-8],[2,3,10,10],[9,-1,-2,-8],[-9,-9,1,-5],[-2,1,-3,-8],[-10,-8,8,6],[8,4,-4,-8],[-9,1,6,2],[-10,-10,6,7],[-9,-6,-5,-4],[-10,10,3,8],[-4,3,-4,7],[-2,8,-5,5],[9,8,-6,6],[1,9,-3,-7],[5,-8,6,4],[4,-7,-6,-10],[-6,1,-3,7],[1,9,4,-5],[-5,-7,-10,-3],[2,3,4,2],[-4,-1,8,-2],[-3,-6,-6,-3],[4,3,10,8],[6,9,3,-10],[-6,5,-7,4],[-9,-7,1,-5],[2,9,-2,6],[-6,-7,-10,-7],[8,-10,-2,-6],[-7,3,5,-3],[6,10,6,-7],[3,-3,-1,-9],[4,-5,-4,-7],[-4,-6,-10,5],[-10,-3,1,9],[4,-8,4,-5],[5,-7,10,9],[-4,-2,-6,10],[10,-2,-1,-8],[5,-9,3,9],[5,8,-8,9],[2,6,-6,3],[10,-10,10,-6],[-4,-6,-3,5],[-9,-1,-10,10],[-4,3,3,-8],[3,3,-6,2],[8,-6,-3,6],[8,8,2,3],[6,-5,-1,-3],[-3,-2,9,-10],[10,-7,1,-4],[3,-6,-1,10],[-4,-8,10,-1],[-10,-3,-5,-4],[-2,-7,-4,-1],[-4,-3,-7,-4],[-8,4,-6,10],[-6,-2,9,-5],[9,-2,-4,2],[-2,-6,-8,8],[5,-3,-8,6],[7,6,-4,-4],[4,5,-1,-9],[2,1,-6,-5],[2,-3,-10,-6],[-4,2,3,2],[6,-7,-6,1],[10,7,3,-8],[-9,-7,9,-7],[-6,-5,-7,-8],[6,-9,2,8],[1,9,-9,-1],[9,7,-3,-4],[-3,10,6,2],[-5,-2,-2,8],[-10,-9,5,7],[-2,-3,9,6],[6,4,7,-4],[9,-7,8,6],[2,7,7,-3],[-8,-6,6,1],[-9,4,4,-8],[5,6,1,-3],[7,-2,2,5],[-4,9,2,-1]], dtype = "int16")#candidate|6312|(270, 4)|const|int16
call_6310 = relay.TupleGetItem(func_2617_call(relay.reshape(const_6311.astype('bool'), []), relay.reshape(const_6312.astype('int16'), [1080,]), ), 10)
call_6313 = relay.TupleGetItem(func_2621_call(relay.reshape(const_6311.astype('bool'), []), relay.reshape(const_6312.astype('int16'), [1080,]), ), 10)
output = relay.Tuple([call_6286,call_6299,call_6310,const_6311,const_6312,])
output2 = relay.Tuple([call_6287,call_6300,call_6313,const_6311,const_6312,])
func_6315 = relay.Function([], output)
mod['func_6315'] = func_6315
mod = relay.transform.InferType()(mod)
mutated_mod['func_6315'] = func_6315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6315_call = mutated_mod.get_global_var('func_6315')
call_6316 = func_6315_call()
output = call_6316
func_6317 = relay.Function([], output)
mutated_mod['func_6317'] = func_6317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4415_call = mod.get_global_var('func_4415')
func_4417_call = mutated_mod.get_global_var('func_4417')
call_6320 = relay.TupleGetItem(func_4415_call(), 0)
call_6321 = relay.TupleGetItem(func_4417_call(), 0)
uop_6322 = relay.acos(call_6320.astype('float32')) # shape=(5, 12, 14)
uop_6324 = relay.acos(call_6321.astype('float32')) # shape=(5, 12, 14)
output = relay.Tuple([uop_6322,])
output2 = relay.Tuple([uop_6324,])
func_6328 = relay.Function([], output)
mod['func_6328'] = func_6328
mod = relay.transform.InferType()(mod)
output = func_6328()
func_6329 = relay.Function([], output)
mutated_mod['func_6329'] = func_6329
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6378 = relay.const(-9, dtype = "uint8")#candidate|6378|()|const|uint8
var_6379 = relay.var("var_6379", dtype = "uint8", shape = (6, 8, 14))#candidate|6379|(6, 8, 14)|var|uint8
bop_6380 = relay.bitwise_xor(const_6378.astype('uint8'), var_6379.astype('uint8')) # shape=(6, 8, 14)
func_4770_call = mod.get_global_var('func_4770')
func_4771_call = mutated_mod.get_global_var('func_4771')
call_6383 = relay.TupleGetItem(func_4770_call(), 1)
call_6384 = relay.TupleGetItem(func_4771_call(), 1)
output = relay.Tuple([bop_6380,call_6383,])
output2 = relay.Tuple([bop_6380,call_6384,])
func_6386 = relay.Function([var_6379,], output)
mod['func_6386'] = func_6386
mod = relay.transform.InferType()(mod)
var_6387 = relay.var("var_6387", dtype = "uint8", shape = (6, 8, 14))#candidate|6387|(6, 8, 14)|var|uint8
output = func_6386(var_6387)
func_6388 = relay.Function([var_6387], output)
mutated_mod['func_6388'] = func_6388
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6395 = relay.const([[[3.706623,8.423364,-9.468210,-3.246630,-7.521771,5.951633,-5.467817],[8.945266,7.599752,-0.777188,5.853150,4.494576,7.375085,-0.055469],[9.080047,0.530729,-1.495655,1.076825,2.752933,-0.002048,1.259246],[-7.771489,6.292260,-1.610329,2.666490,-0.964601,-8.900928,5.855487],[0.966595,-8.857107,8.047013,4.604132,-8.808996,-2.604916,2.622024],[-2.598266,0.451461,-1.507789,-2.728461,9.012870,7.969706,-6.797312],[-5.407954,-4.928540,-1.154661,-3.642070,-3.107216,9.872453,-0.785684],[1.448530,-8.564896,-2.969942,-7.050418,-6.027770,-8.041794,-9.702527],[5.433368,8.581997,9.907294,-4.405090,-4.474735,3.028481,-9.727352],[-5.170574,5.035337,-0.740941,0.533310,3.959373,0.905000,-9.161918],[9.424032,-0.894501,9.715255,-9.218045,8.438985,-7.616172,-1.167121],[-9.136362,-0.957898,6.735071,-0.782171,4.267164,4.670621,-0.539589]],[[-0.596269,-3.415468,1.912123,1.167970,-1.264404,8.068446,-3.949069],[3.482668,-5.593789,0.088453,-7.809734,-3.797644,8.148085,-9.589983],[-2.507945,5.716106,3.199808,-8.821333,-5.621579,-2.056737,-3.611955],[-1.979092,4.224925,0.315909,-1.642498,6.342075,5.719237,3.498346],[0.217728,1.746970,-3.561204,9.399926,-8.668899,1.846972,1.610116],[8.306136,6.793033,-6.143676,-2.910588,-0.448828,-0.920139,2.272600],[4.571886,-1.533152,2.198177,-2.499452,6.794143,2.209614,-7.167541],[-1.949873,-2.506200,8.444688,-2.502095,6.103006,0.052526,8.021146],[0.692534,5.610593,3.082688,2.247259,-5.158027,9.638024,5.589908],[2.196069,9.769165,1.731264,-8.394626,3.138263,-4.831566,8.517763],[0.730553,-9.413442,5.789042,8.194510,5.290196,0.035943,5.417183],[3.463786,-2.470107,-1.974541,3.479515,9.890329,-6.269022,-0.837164]],[[2.557408,-0.554121,-5.726664,5.609790,-2.173813,-9.966604,-6.419899],[0.852004,-2.474910,-1.358953,-9.659202,-5.647586,7.388271,1.861587],[4.676551,-9.742240,4.170919,8.498426,8.261177,1.470170,9.167484],[-0.150899,-6.398749,5.563325,-1.773225,8.264289,-8.752304,-1.971662],[9.007478,9.472353,4.358901,-6.276502,-3.619461,-1.860090,-5.553382],[-6.520968,-0.306759,1.607137,-8.321303,6.725897,4.971998,5.993837],[6.972349,3.125871,3.028148,9.771752,-2.217400,1.014962,3.241447],[7.240857,-3.511516,1.796750,-7.433064,5.572364,-3.732626,0.468259],[6.904808,4.006591,0.270959,5.683154,-8.099515,7.845564,-9.824748],[5.838052,8.563651,-1.582686,-6.921009,-1.660253,-9.675503,-9.455606],[-1.604124,-5.150660,-2.583372,-8.311013,-1.876017,3.294278,-7.426825],[-5.568061,1.498688,-4.030880,-5.289448,-7.869727,8.236765,1.103552]]], dtype = "float32")#candidate|6395|(3, 12, 7)|const|float32
uop_6396 = relay.log(const_6395.astype('float32')) # shape=(3, 12, 7)
uop_6406 = relay.exp(uop_6396.astype('float32')) # shape=(3, 12, 7)
output = uop_6406
output2 = uop_6406
func_6415 = relay.Function([], output)
mod['func_6415'] = func_6415
mod = relay.transform.InferType()(mod)
output = func_6415()
func_6416 = relay.Function([], output)
mutated_mod['func_6416'] = func_6416
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6425 = relay.const([[[-4.300443,-2.455884,7.774579,-3.444686,6.716478,-4.361728,5.467935,-3.102595,-3.740343,-9.373190,1.898281,2.902977,-4.100569,-6.372210],[3.124394,3.304016,-1.486088,4.106571,-7.402207,9.366807,-2.221512,0.290044,1.299043,-3.751279,8.277228,2.187694,4.008550,-0.107359],[-1.831641,1.146496,-7.926238,-1.927156,-6.866096,0.436873,6.769414,0.525533,-2.192452,5.232292,-2.563488,-9.854236,-5.029932,-1.166891],[-2.532755,-2.273275,8.809837,2.985071,-7.022009,-6.847345,5.055755,-3.503704,-3.981754,-4.656552,-7.686085,-0.411946,0.327009,7.953089],[2.228112,-4.042839,-3.774470,-3.142816,-9.748200,-0.913062,5.275049,9.047337,-8.280638,-1.913937,6.445462,1.429358,-7.332296,7.457832],[-8.059444,-7.873987,-8.104057,-0.615429,6.088772,4.849292,-2.323452,-9.725126,-7.264678,-6.135219,0.954000,-5.284202,-9.270815,2.434940]],[[5.110484,-0.971295,8.333403,4.929732,7.765738,-5.869185,9.271054,-8.603179,5.498640,2.906368,5.056566,-2.222106,-7.060168,2.390694],[6.925911,-3.882021,4.972244,-9.842239,2.248710,0.383615,4.670013,6.978059,8.324687,-1.103504,-9.686907,-5.516244,-6.763138,4.638117],[9.623380,0.558445,5.221820,-4.913057,-5.612410,7.594035,-9.480506,6.943567,-4.918321,-2.409888,-9.831801,6.906754,5.199341,-7.485926],[-0.808927,-5.258798,6.324705,-8.362691,5.740486,7.769273,-5.362001,5.968161,2.715282,-3.587944,2.844868,7.450309,-4.676704,8.057828],[1.606114,8.139632,3.380105,6.498520,8.563709,9.457044,-3.900440,-3.506192,9.220956,-0.411609,-2.225260,-1.134136,4.532380,-6.498299],[-9.367850,0.451151,9.041378,-8.343778,2.238681,3.190025,5.169893,0.270235,-7.487703,-9.063970,-7.544397,-4.793507,-4.731720,-2.084480]],[[0.122108,2.611880,-3.418531,2.774132,4.092139,-8.817355,2.321193,8.258440,-4.622665,0.364916,-5.980989,-2.872591,-3.493909,-5.221960],[-4.372817,-9.538863,7.250824,6.140625,2.381414,1.338139,-2.711583,3.264727,-9.460885,8.040684,9.531733,4.787059,-1.171424,-5.731382],[-2.078393,2.257538,-5.036101,-4.114421,7.495079,4.453566,-3.730229,5.702171,5.927143,0.683863,6.474088,-5.201883,8.700625,5.960213],[-3.991997,-5.335077,-7.181899,6.100552,7.058792,-6.894838,4.268596,8.747245,-1.088794,6.711199,0.548650,3.018284,7.494383,-9.942593],[0.192928,-9.198340,6.014323,8.528373,1.757268,-3.373065,-9.446245,7.042004,0.119655,-1.513629,-1.542100,5.633935,-6.658215,-1.340922],[-1.832837,-8.193092,-0.220918,2.063254,1.364104,2.178569,2.341577,8.895324,-0.197384,-6.879301,-7.351685,-8.012959,-7.297643,-0.843559]],[[-2.478347,-2.754740,8.808392,8.712831,1.329898,-7.010834,9.501522,8.932854,2.028623,-4.866767,-8.997213,8.179304,7.123344,7.608169],[5.567361,-4.457906,-7.857069,9.767375,1.180191,-5.876536,3.960920,6.184577,-7.153883,-4.747115,-0.605553,-9.189820,5.209204,1.456284],[3.582252,-7.729129,-4.318735,-9.700504,8.610770,3.561641,-5.188879,5.726909,-8.403248,-7.276115,-6.181711,-4.993358,-1.056144,0.684573],[9.387750,-2.104535,5.039116,3.208913,-6.115707,-7.197503,2.967256,-8.070059,3.915229,-9.608309,0.363032,3.002009,9.529088,-8.819995],[-7.564649,2.991931,-5.199995,-8.541357,-9.692091,7.948054,2.122474,-6.805188,9.805260,4.318602,-5.762495,-2.006329,-1.661041,6.080101],[-5.401424,1.122563,3.028473,-4.902637,9.655508,8.905110,-3.485885,-3.986389,5.503102,9.403255,3.091974,9.128920,-7.656197,8.112802]],[[3.123009,-8.554325,-8.554250,-4.656057,-0.684022,3.656479,1.317849,5.768199,-0.696512,-3.604864,-4.115183,-5.461375,-4.720122,0.481954],[-5.870488,4.773755,-0.766877,7.494072,-7.222278,-7.140797,-5.373698,-9.077066,6.071228,2.628250,3.349524,4.836946,3.775211,7.197811],[1.080291,-3.171197,-4.209209,-3.774764,7.070778,7.877209,3.579231,-5.054501,-1.450592,-3.817416,-1.876014,5.439914,5.500400,6.860475],[-1.920125,-2.932317,-1.732626,6.050462,-1.545506,1.043280,7.770588,0.812718,-3.078169,-6.661430,-8.011726,-8.465131,3.976311,-8.804331],[-4.550217,8.806984,0.123502,2.006825,2.672375,-1.942516,-2.912160,0.417471,-9.569787,-8.296198,3.132693,9.124146,7.846507,-8.215105],[1.409048,9.314546,1.174925,8.176623,-9.922229,-2.241675,9.731176,-3.992923,-7.685649,-1.908555,-5.227658,4.306901,3.521749,-4.213561]],[[3.368597,7.075860,3.318778,-9.151016,-2.552084,3.934350,-1.277127,-9.264424,-3.226870,5.058137,-7.178828,-7.777309,5.901548,-1.878123],[-2.101286,4.846787,-3.857442,8.861815,-8.208471,-6.667068,9.345893,8.000426,1.480847,2.328715,-9.841214,-9.101930,-8.116657,-8.000986],[-2.649718,6.274699,8.341575,-1.060021,9.998037,9.567488,-1.924097,-6.487805,-9.017909,0.745569,9.757481,8.319096,-3.631520,8.292290],[-5.437949,-9.080925,-9.298172,-0.655812,-5.990165,2.078042,-1.972390,6.946215,-7.501775,-0.513398,-9.936670,-4.518086,-1.612783,1.381962],[2.943956,-4.095988,-2.238523,0.796048,-4.796486,-8.596429,-0.741364,-9.081270,6.328368,3.156383,-2.532805,-2.516869,-7.145288,-0.403325],[-8.071327,8.622686,-0.290606,-5.326143,-2.108661,-9.716177,4.708852,7.631539,-3.762362,-2.983795,-4.497068,-3.929382,7.933028,1.171656]]], dtype = "float64")#candidate|6425|(6, 6, 14)|const|float64
uop_6426 = relay.exp(const_6425.astype('float64')) # shape=(6, 6, 14)
output = relay.Tuple([uop_6426,])
output2 = relay.Tuple([uop_6426,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

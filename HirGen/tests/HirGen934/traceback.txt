==========mod==========
#[version = "0.0.5"]
def @func_4642() -> (Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), float64]) {
  %0 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1 = @func_1728() /* ty=Tensor[(1, 6, 16), bool] */;
  %2 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %3 = %2.0;
  %4 = cast(%1, dtype="float64") /* ty=Tensor[(1, 6, 16), float64] */;
  %5 = cast(%3, dtype="float64") /* ty=Tensor[(2, 6, 16), float64] */;
  %6 = power(%4, %5) /* ty=Tensor[(2, 6, 16), float64] */;
  %7 = cast(%6, dtype="float64") /* ty=Tensor[(2, 6, 16), float64] */;
  %8 = %0.0;
  %9 = sinh(%7) /* ty=Tensor[(2, 6, 16), float64] */;
  (%8, %9)
}

def @func_16500(%var_16479: Tensor[(336), int32]) -> (Tensor[(15, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool], Tensor[(336), int32]) {
  %10 = @func_7093() /* ty=(Tensor[(15, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %11 = @func_5512() /* ty=(Tensor[(8, 6, 16), int8],) */;
  %12 = @func_10378() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) */;
  %13 = cast(%var_16479, dtype="int32") /* ty=Tensor[(336), int32] */;
  %14 = reshape(%13, newshape=[336]) /* ty=Tensor[(336), int32] */;
  %15 = @func_6298(%14) /* ty=(Tensor[(2, 6, 16), bool], Tensor[(3, 16, 7), int32], Tensor[(7, 1), int32], Tensor[(336), int32]) */;
  %16 = %10.0;
  %17 = %11.0;
  %18 = %12.1;
  %19 = %15.0;
  (%16, %17, %18, %19, %var_16479)
}

def @func_16285() -> (Tensor[(1, 6, 16), bool],) {
  %20 = @func_14239() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %21 = %20.1;
  (%21,)
}

def @func_14909(%var_14901: Tensor[(432), uint32]) -> (Tensor[(1, 6, 16), float32], Tensor[(4, 12, 9), float32], Tensor[(432), uint32]) {
  %22 = @func_7901() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %23 = cast(%var_14901, dtype="uint32") /* ty=Tensor[(432), uint32] */;
  %24 = reshape(%23, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), uint32] */;
  %25 = @func_3792(%24) /* ty=(Tensor[(390), float32], Tensor[(4, 12, 9), float32]) */;
  %26 = %22.0;
  %27 = %25.1;
  (%26, %27, %var_14901)
}

def @func_3197() -> Tensor[(13, 5, 6), float32] {
  %28 = @func_1292() /* ty=(Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), float64]) */;
  %28.3
}

def @func_9146(%var_9108: Tensor[(13, 5, 6), float32], %var_9141: Tensor[(936), float32]) -> (Tensor[(13, 5, 6), float32], Tensor[(?, 6, 16), bool], Tensor[(?, 6, 16), float32], Tensor[(936), float32]) {
  %29 = @func_2558() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 390), float32]) */;
  %30 = %29.1;
  %31 = cast(%var_9108, dtype="float32") /* ty=Tensor[(13, 5, 6), float32] */;
  %32 = shape_of(%30, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%30, dtype="float32") /* ty=Tensor[(13, 5, 6), float32] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %35 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
  %36 = @func_9024() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %37 = %36.0;
  %38 = cast(%37, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %39 = shape_of(%35, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%35, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %42 = cast(%var_9141, dtype="float32") /* ty=Tensor[(936), float32] */;
  %43 = reshape(%42, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %44 = @func_3521(%43) /* ty=(Tensor[(?, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(936), float32]) */;
  %45 = add(%33, %34) /* ty=Tensor[(13, 5, 6), float32] */;
  %46 = logical_and(%40, %41) /* ty=Tensor[(?, 6, 16), bool] */;
  %47 = %44.0;
  (%45, %46, %47, %var_9141)
}

def @func_7093() -> (Tensor[(15, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %48 = @func_6685() /* ty=(Tensor[(15, 6, 16), bool],) */;
  %49 = @func_5824() /* ty=(Tensor[(2, 6, 16), float64], Tensor[(2, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(13, 5, 6), float32]) */;
  %50 = %48.0;
  %51 = %49.3;
  (%50, %51)
}

def @func_16896() -> (Tensor[(9, 3, 9), float64], Tensor[(9, 3, 9), float64]) {
  %52 = @func_14766() /* ty=Tensor[(9, 3, 9), float64] */;
  %53 = @func_14766() /* ty=Tensor[(9, 3, 9), float64] */;
  (%52, %53)
}

def @func_1697() -> Tensor[(1, 6, 16), bool] {
  %54 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %54.0
}

def @func_4814() -> Tensor[(1, 6, 16), bool] {
  %55 = @func_1136() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %55.1
}

def @func_2558() -> (Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 390), float32]) {
  %56 = @func_1620() /* ty=(Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(?, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
  %57 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 390), float32] */, dtype="float32") /* ty=Tensor[(1, 390), float32] */;
  %58 = reshape(%57, newshape=[13, 5, 6]) /* ty=Tensor[(13, 5, 6), float32] */;
  %59 = @func_746(%58) /* ty=(Tensor[(13, 5, 6), float32],) */;
  %60 = %56.5;
  %61 = %59.0;
  (%60, %61, meta[relay.Constant][0] /* ty=Tensor[(1, 390), float32] */)
}

def @func_746(%var_738: Tensor[(13, 5, 6), float32]) -> (Tensor[(13, 5, 6), float32],) {
  %62 = cast(%var_738, dtype="float32") /* ty=Tensor[(13, 5, 6), float32] */;
  %63 = cos(%62) /* ty=Tensor[(13, 5, 6), float32] */;
  (%63,)
}

def @func_11365(%var_11289: Tensor[(1, 360), uint64]) -> (Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 360), uint64], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), float64]) {
  %64 = @func_9981() /* ty=(Tensor[(390), float32],) */;
  %65 = cast(%var_11289, dtype="uint64") /* ty=Tensor[(1, 360), uint64] */;
  %66 = cast(%var_11289, dtype="uint64") /* ty=Tensor[(1, 360), uint64] */;
  %67 = reshape(%65, newshape=[9, 8, 5]) /* ty=Tensor[(9, 8, 5), uint64] */;
  %68 = reshape(%66, newshape=[9, 8, 5]) /* ty=Tensor[(9, 8, 5), uint64] */;
  %69 = @func_10434(%67, %68) /* ty=(Tensor[(9, 8, 5), uint64], Tensor[(2, 6, 16), bool], Tensor[(9, 8, 5), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %70 = @func_1949() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %71 = @func_8744() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */;
  %72 = @func_10586() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %73 = %64.0;
  %74 = %69.3;
  %75 = %70.0;
  %76 = %71.1;
  %77 = %72.1;
  %78 = @func_11029() /* ty=Tensor[(2, 6, 16), float64] */;
  (%73, %74, %var_11289, %75, %76, %77, %78)
}

def @func_11577() -> Tensor[(390), float32] {
  %79 = @func_11055() /* ty=(Tensor[(390), float32],) */;
  %79.0
}

def @func_13451() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(360, 1), uint64], Tensor[(9, 8, 5), float32]) {
  %80 = @func_6441() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %81 = @func_10078() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %82 = cast(meta[relay.Constant][1] /* ty=Tensor[(360, 1), uint64] */, dtype="uint64") /* ty=Tensor[(360, 1), uint64] */;
  %83 = cast(meta[relay.Constant][1] /* ty=Tensor[(360, 1), uint64] */, dtype="uint64") /* ty=Tensor[(360, 1), uint64] */;
  %84 = reshape(%82, newshape=[9, 8, 5]) /* ty=Tensor[(9, 8, 5), uint64] */;
  %85 = reshape(%83, newshape=[9, 8, 5]) /* ty=Tensor[(9, 8, 5), uint64] */;
  %86 = @func_10434(%84, %85) /* ty=(Tensor[(9, 8, 5), uint64], Tensor[(2, 6, 16), bool], Tensor[(9, 8, 5), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %87 = %86.2;
  %88 = cast(%87, dtype="float32") /* ty=Tensor[(9, 8, 5), float32] */;
  %89 = %80.0;
  %90 = %81.0;
  %91 = erf(%88) /* ty=Tensor[(9, 8, 5), float32] */;
  (%89, %90, meta[relay.Constant][1] /* ty=Tensor[(360, 1), uint64] */, %91)
}

def @func_1620() -> (Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(?, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) {
  %92 = @func_990() /* ty=(Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) */;
  %93 = @func_990() /* ty=(Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) */;
  %94 = @func_1056() /* ty=Tensor[(1, 6, 16), bool] */;
  %95 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
  %96 = cast(%95, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %97 = shape_of(%94, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%94, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %100 = cast(meta[relay.Constant][2] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %101 = reshape(%100, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %102 = @func_899(%101) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(3, 6, 16), bool]) */;
  %103 = %92.1;
  %104 = %93.2;
  %105 = equal(%98, %99) /* ty=Tensor[(?, 6, 16), bool] */;
  %106 = @func_1038() /* ty=Tensor[(2, 6, 16), int32] */;
  %107 = @func_1038() /* ty=Tensor[(2, 6, 16), int32] */;
  %108 = %102.0;
  (%103, %104, %105, %106, %107, %108, meta[relay.Constant][2] /* ty=Tensor[(288), float32] */)
}

def @func_1883(%var_1864: Tensor[(13, 8, 9), float32]) -> (Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32]) {
  %109 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %110 = cast(%var_1864, dtype="float32") /* ty=Tensor[(13, 8, 9), float32] */;
  %111 = atanh(%110) /* ty=Tensor[(13, 8, 9), float32] */;
  %112 = cast(%111, dtype="float32") /* ty=Tensor[(13, 8, 9), float32] */;
  %113 = %109.0;
  %114 = acos(%112) /* ty=Tensor[(13, 8, 9), float32] */;
  (%113, %114)
}

def @func_12106() -> (Tensor[(1, 6, 16), bool],) {
  %115 = @func_8864() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %116 = %115.0;
  (%116,)
}

def @func_13894() -> (Tensor[(1, 6, 16), bool],) {
  %117 = @func_5974() /* ty=Tensor[(1, 6, 16), bool] */;
  (%117,)
}

def @func_9024() -> (Tensor[(1, 6, 16), bool],) {
  %118 = @func_1697() /* ty=Tensor[(1, 6, 16), bool] */;
  (%118,)
}

def @func_9922(%var_9915: Tensor[(8, 6, 16), float32]) -> Tensor[(8, 6, 16), int32] {
  %119 = @func_2059() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %120 = %119.3;
  %121 = cast(%120, dtype="int32") /* ty=Tensor[(1, 6, 16), int32] */;
  %122 = cast(%var_9915, dtype="int32") /* ty=Tensor[(8, 6, 16), int32] */;
  left_shift(%121, %122) /* ty=Tensor[(8, 6, 16), int32] */
}

def @func_8559() -> Tensor[(1, 6, 16), bool] {
  @func_1697() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_5305() -> (Tensor[(1, 6, 16), bool],) {
  %123 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %124 = %123.0;
  (%124,)
}

def @func_17562() -> (Tensor[(?, 6, 16), int8], Tensor[(8, 6, 16), int8], Tensor[(936), float32], Tensor[(15, 3, 16), float64], Tensor[(1, 720), float64], Tensor[(1, 6, 16), bool]) {
  %125 = @func_11908() /* ty=(Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %126 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 720), float64] */, dtype="float64") /* ty=Tensor[(1, 720), float64] */;
  %127 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 720), float64] */, dtype="float64") /* ty=Tensor[(1, 720), float64] */;
  %128 = reshape(%126, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), float64] */;
  %129 = reshape(%127, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), float64] */;
  %130 = @func_7731(%128, %129) /* ty=(Tensor[(15, 3, 16), float64],) */;
  %131 = @func_1136() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %132 = @func_14074() /* ty=Tensor[(?, 6, 16), int8] */;
  %133 = @func_11503() /* ty=Tensor[(8, 6, 16), int8] */;
  %134 = %125.0;
  %135 = %130.0;
  %136 = %131.2;
  (%132, %133, %134, %135, meta[relay.Constant][3] /* ty=Tensor[(1, 720), float64] */, %136)
}

def @func_6087() -> (Tensor[(2, 6, 16), bool], Tensor[(8, 6, 16), int8]) {
  %137 = @func_2840() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(192), bool], Tensor[(390), float32]) */;
  %138 = @func_3932() /* ty=(Tensor[(8, 6, 16), int8],) */;
  %139 = %137.0;
  %140 = %138.0;
  (%139, %140)
}

def @func_1056() -> Tensor[(1, 6, 16), bool] {
  %141 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %141.0
}

def @func_17031(%var_16967: Tensor[(1440), bool]) -> (Tensor[(936), float32], Tensor[(15, 6, 16), uint32], Tensor[(1440), bool], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool]) {
  %142 = @func_14562() /* ty=(Tensor[(936), float32], Tensor[(1, 6, 16), bool]) */;
  %143 = cast(%var_16967, dtype="bool") /* ty=Tensor[(1440), bool] */;
  %144 = reshape(%143, newshape=[15, 6, 16]) /* ty=Tensor[(15, 6, 16), bool] */;
  %145 = @func_15449(%144) /* ty=(Tensor[(15, 6, 16), uint32],) */;
  %146 = @func_5928() /* ty=(Tensor[(2, 6, 16), int32],) */;
  %147 = %142.0;
  %148 = %145.0;
  %149 = %146.0;
  %150 = @func_3338() /* ty=Tensor[(1, 6, 16), bool] */;
  (%147, %148, %var_16967, %149, %150)
}

def @func_10434(%var_10383: Tensor[(9, 8, 5), uint64], %var_10384: Tensor[(9, 8, 5), uint64]) -> (Tensor[(9, 8, 5), uint64], Tensor[(2, 6, 16), bool], Tensor[(9, 8, 5), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %151 = cast(%var_10384, dtype="uint64") /* ty=Tensor[(9, 8, 5), uint64] */;
  %152 = shape_of(%var_10383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %153 = cast(%var_10383, dtype="uint64") /* ty=Tensor[(9, 8, 5), uint64] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %155 = @func_6087() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(8, 6, 16), int8]) */;
  %156 = cast(%var_10383, dtype="float32") /* ty=Tensor[(9, 8, 5), float32] */;
  %157 = shape_of(%var_10384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %158 = cast(%var_10384, dtype="float32") /* ty=Tensor[(9, 8, 5), float32] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %160 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %161 = @func_7093() /* ty=(Tensor[(15, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %162 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %163 = subtract(%153, %154) /* ty=Tensor[(9, 8, 5), uint64] */;
  %164 = %155.0;
  %165 = mod(%158, %159) /* ty=Tensor[(9, 8, 5), float32] */;
  %166 = %160.0;
  %167 = %161.1;
  %168 = %162.0;
  (%163, %164, %165, %166, %167, %168)
}

def @func_9728(%var_9704: Tensor[(6, 15, 2), float64]) -> (Tensor[(6, 15, 2), bool], Tensor[(6, 15, 2), float32]) {
  %169 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 15, 2), float64] */, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
  %170 = shape_of(%var_9704, dtype="int32") /* ty=Tensor[(3), int32] */;
  %171 = cast(%var_9704, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
  %172 = dyn.reshape(%169, %170, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %173 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 15, 2), float64] */, dtype="float32") /* ty=Tensor[(6, 15, 2), float32] */;
  %174 = less(%171, %172) /* ty=Tensor[(6, 15, 2), bool] */;
  %175 = sin(%173) /* ty=Tensor[(6, 15, 2), float32] */;
  (%174, %175)
}

def @func_13514() -> (Tensor[(2, 6, 16), bool],) {
  %176 = @func_5392() /* ty=Tensor[(2, 6, 16), bool] */;
  (%176,)
}

def @func_12513() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  %177 = @func_5026() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) */;
  %178 = @func_2097() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(390), float32]) */;
  %179 = @func_11551() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %180 = @func_10939() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */;
  %181 = %177.1;
  %182 = %178.0;
  %183 = %179.0;
  %184 = %180.0;
  (%181, %182, %183, %184)
}

def @func_11191(%var_11154: Tensor[(8, 11, 3), float64]) -> (Tensor[(8, 11, 3), float32], Tensor[(8, 11, 3), float64], Tensor[(2, 6, 16), bool]) {
  %185 = cast(%var_11154, dtype="float64") /* ty=Tensor[(8, 11, 3), float64] */;
  %186 = tan(%185) /* ty=Tensor[(8, 11, 3), float64] */;
  %187 = cast(%186, dtype="float32") /* ty=Tensor[(8, 11, 3), float32] */;
  %188 = cast(%186, dtype="float64") /* ty=Tensor[(8, 11, 3), float64] */;
  %189 = @func_9385() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %190 = sqrt(%187) /* ty=Tensor[(8, 11, 3), float32] */;
  %191 = asinh(%188) /* ty=Tensor[(8, 11, 3), float64] */;
  %192 = %189.0;
  (%190, %191, %192)
}

def @func_13793() -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32]) {
  %193 = @func_990() /* ty=(Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) */;
  %194 = @func_1728() /* ty=Tensor[(1, 6, 16), bool] */;
  %195 = %193.1;
  (%194, %195)
}

def @func_15134() -> (Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), bool]) {
  %196 = @func_14239() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %197 = @func_1205() /* ty=Tensor[(2, 6, 16), int32] */;
  %198 = %196.0;
  (%197, %198)
}

def @func_8267() -> Tensor[(2, 6, 16), bool] {
  %199 = @func_2444() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %199.0
}

def @func_15979() -> Tensor[(1, 6, 16), bool] {
  %200 = @func_6885() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %200.1
}

def @func_5526() -> (Tensor[(?, 6, 16), int8],) {
  %201 = @func_3672() /* ty=(Tensor[(?, 6, 16), int8],) */;
  %202 = %201.0;
  (%202,)
}

def @func_7739() -> (Tensor[(8, 6, 16), int8],) {
  %203 = @func_3932() /* ty=(Tensor[(8, 6, 16), int8],) */;
  %204 = %203.0;
  (%204,)
}

def @func_5371() -> (Tensor[(13, 5, 6), float32],) {
  %205 = @func_3197() /* ty=Tensor[(13, 5, 6), float32] */;
  %206 = cast(%205, dtype="float32") /* ty=Tensor[(13, 5, 6), float32] */;
  %207 = rsqrt(%206) /* ty=Tensor[(13, 5, 6), float32] */;
  (%207,)
}

def @func_2463(%var_2461: Tensor[(288), float32]) -> (Tensor[(1, 6, 16), float64], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) {
  %208 = @func_2059() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %209 = %208.0;
  %210 = cast(%209, dtype="float64") /* ty=Tensor[(1, 6, 16), float64] */;
  %211 = cast(%var_2461, dtype="float32") /* ty=Tensor[(288), float32] */;
  %212 = reshape(%211, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %213 = @func_899(%212) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(3, 6, 16), bool]) */;
  %214 = sinh(%210) /* ty=Tensor[(1, 6, 16), float64] */;
  %215 = %213.0;
  (%214, %215, %var_2461)
}

def @func_10681() -> (Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8]) {
  %216 = @func_6087() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(8, 6, 16), int8]) */;
  %217 = @func_8559() /* ty=Tensor[(1, 6, 16), bool] */;
  %218 = %216.1;
  (%217, %218)
}

def @func_14363() -> Tensor[(390), float32] {
  %219 = @func_9981() /* ty=(Tensor[(390), float32],) */;
  %219.0
}

def @func_17472(%var_17431: Tensor[(12, 2, 6), uint8], %var_17432: Tensor[(12, 2, 6), uint8]) -> (Tensor[(12, 2, 6), uint8], Tensor[(9, 3, 9), float64], Tensor[(3, 6, 16), bool], Tensor[(72, 4), float32], Tensor[(1, 6, 16), bool], Tensor[(77, 4), float64]) {
  %220 = cast(%var_17432, dtype="uint8") /* ty=Tensor[(12, 2, 6), uint8] */;
  %221 = shape_of(%var_17431, dtype="int32") /* ty=Tensor[(3), int32] */;
  %222 = cast(%var_17431, dtype="uint8") /* ty=Tensor[(12, 2, 6), uint8] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %224 = @func_16896() /* ty=(Tensor[(9, 3, 9), float64], Tensor[(9, 3, 9), float64]) */;
  %225 = cast(meta[relay.Constant][5] /* ty=Tensor[(72, 4), float32] */, dtype="float32") /* ty=Tensor[(72, 4), float32] */;
  %226 = reshape(%225, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %227 = @func_899(%226) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(3, 6, 16), bool]) */;
  %228 = cast(meta[relay.Constant][6] /* ty=Tensor[(77, 4), float64] */, dtype="float64") /* ty=Tensor[(77, 4), float64] */;
  %229 = reshape(%228, newshape=[14, 11, 2]) /* ty=Tensor[(14, 11, 2), float64] */;
  %230 = @func_1769(%229) /* ty=(Tensor[(14, 11, 2), float64], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %231 = minimum(%222, %223) /* ty=Tensor[(12, 2, 6), uint8] */;
  %232 = %224.1;
  %233 = %227.1;
  %234 = %230.1;
  (%231, %232, %233, meta[relay.Constant][5] /* ty=Tensor[(72, 4), float32] */, %234, meta[relay.Constant][6] /* ty=Tensor[(77, 4), float64] */)
}

def @func_15709(%var_15593: Tensor[(8, 6, 16), int8]) -> (Tensor[(390), float32], Tensor[(8, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32], Tensor[(1, 6, 16), bool], Tensor[(?, 6, 16), bool], Tensor[(15, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(15, 6, 16), int64], Tensor[(1, 6, 16), float32]) {
  %235 = @func_12235() /* ty=(Tensor[(390), float32],) */;
  %236 = @func_5026() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) */;
  %237 = %236.0;
  %238 = cast(%237, dtype="bool") /* ty=Tensor[(?, 6, 16), bool] */;
  %239 = cast(%var_15593, dtype="bool") /* ty=Tensor[(8, 6, 16), bool] */;
  %240 = @func_10149() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %241 = cast(meta[relay.Constant][7] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %242 = reshape(%241, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %243 = @func_3050(%242) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %244 = cast(meta[relay.Constant][7] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %245 = reshape(%244, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
  %246 = @func_4924(%245) /* ty=(Tensor[(13, 8, 9), uint32], Tensor[(?, 6, 16), bool]) */;
  %247 = @func_8088() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %248 = %247.1;
  %249 = cast(%248, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %250 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 6, 16), bool] */, dtype="bool") /* ty=Tensor[(15, 6, 16), bool] */;
  %251 = not_equal(%249, %250) /* ty=Tensor[(15, 6, 16), bool] */;
  %252 = @func_8504() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */;
  %253 = %252.1;
  %254 = cast(%251, dtype="bool") /* ty=Tensor[(15, 6, 16), bool] */;
  %255 = cast(%253, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %256 = @func_14429() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %257 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 6, 16), bool] */, dtype="int64") /* ty=Tensor[(15, 6, 16), int64] */;
  %258 = shape_of(%251, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%251, dtype="int64") /* ty=Tensor[(15, 6, 16), int64] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %261 = @func_2969() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %262 = %235.0;
  %263 = less(%238, %239) /* ty=Tensor[(8, 6, 16), bool] */;
  %264 = %240.0;
  %265 = %243.2;
  %266 = @func_1056() /* ty=Tensor[(1, 6, 16), bool] */;
  %267 = %246.1;
  %268 = less(%254, %255) /* ty=Tensor[(15, 6, 16), bool] */;
  %269 = %256.0;
  %270 = bitwise_and(%259, %260) /* ty=Tensor[(15, 6, 16), int64] */;
  %271 = %261.2;
  (%262, %263, %264, %265, meta[relay.Constant][7] /* ty=Tensor[(936), float32] */, %266, %267, %268, %269, %270, %271)
}

def @func_10239() -> Tensor[(1, 6, 16), bool] {
  %272 = @func_2059() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %272.1
}

def @func_11983() -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool]) {
  %273 = @func_6087() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(8, 6, 16), int8]) */;
  %274 = @func_1056() /* ty=Tensor[(1, 6, 16), bool] */;
  %275 = %273.0;
  (%274, %275)
}

def @func_7297(%var_7260: Tensor[(4, 2, 5), float64]) -> (Tensor[(4, 2, 5), float64],) {
  %276 = cast(%var_7260, dtype="float64") /* ty=Tensor[(4, 2, 5), float64] */;
  %277 = atanh(%276) /* ty=Tensor[(4, 2, 5), float64] */;
  %278 = cast(%277, dtype="float64") /* ty=Tensor[(4, 2, 5), float64] */;
  %279 = shape_of(%var_7260, dtype="int32") /* ty=Tensor[(3), int32] */;
  %280 = cast(%var_7260, dtype="float64") /* ty=Tensor[(4, 2, 5), float64] */;
  %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %282 = mod(%280, %281) /* ty=Tensor[(4, 2, 5), float64] */;
  (%282,)
}

def @func_12034() -> (Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(2, 6, 16), float64]) {
  %283 = @func_9206() /* ty=(Tensor[(13, 5, 6), float32], Tensor[(390), float32]) */;
  %284 = @func_1697() /* ty=Tensor[(1, 6, 16), bool] */;
  %285 = %283.0;
  %286 = @func_11029() /* ty=Tensor[(2, 6, 16), float64] */;
  (%284, %285, %286)
}

def @func_17078(%var_17069: Tensor[(11, 6, 16), bool]) -> Tensor[(11, 6, 16), uint8] {
  %287 = @func_16699() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %288 = %287.0;
  %289 = cast(%288, dtype="uint8") /* ty=Tensor[(1, 6, 16), uint8] */;
  %290 = cast(%var_17069, dtype="uint8") /* ty=Tensor[(11, 6, 16), uint8] */;
  multiply(%289, %290) /* ty=Tensor[(11, 6, 16), uint8] */
}

def @func_7901() -> (Tensor[(1, 6, 16), float32],) {
  %291 = @func_6722() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %292 = %291.0;
  (%292,)
}

def @func_7184() -> (Tensor[(192), bool], Tensor[(1, 6, 16), bool]) {
  %293 = @func_2840() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(192), bool], Tensor[(390), float32]) */;
  %294 = @func_5305() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %295 = %293.1;
  %296 = %294.0;
  (%295, %296)
}

def @func_907() -> (Tensor[(1, 6, 16), bool],) {
  %297 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %298 = %297.0;
  (%298,)
}

def @func_7467() -> Tensor[(1, 6, 16), float32] {
  %299 = @func_3739() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %299.0
}

def @func_2336() -> (Tensor[(2, 6, 16), bool],) {
  %300 = @func_1038() /* ty=Tensor[(2, 6, 16), int32] */;
  %301 = @func_1056() /* ty=Tensor[(1, 6, 16), bool] */;
  %302 = cast(%300, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
  %303 = cast(%301, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %304 = greater_equal(%302, %303) /* ty=Tensor[(2, 6, 16), bool] */;
  (%304,)
}

def @func_8504() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  %305 = @func_2969() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %306 = @func_6388() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */;
  %307 = %305.2;
  %308 = %306.2;
  (%307, %308)
}

def @func_1136() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %309 = @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %310 = @func_907() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %311 = %309.0;
  %312 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
  %313 = %310.0;
  (%311, %312, %313)
}

def @func_3578() -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool]) {
  %314 = @func_2698() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32]) */;
  %315 = @func_2444() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %316 = %314.0;
  %317 = %315.0;
  (%316, %317)
}

def @func_13988() -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), float64], Tensor[(40), float64], Tensor[(1, 6, 16), bool]) {
  %318 = @func_11067() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %319 = cast(meta[relay.Constant][9] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %320 = reshape(%319, newshape=[1, 40]) /* ty=Tensor[(1, 40), float64] */;
  %321 = @func_12670(%320) /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 40), float64], Tensor[(2, 6, 16), float64], Tensor[(4, 2, 5), float32]) */;
  %322 = %318.0;
  %323 = %321.2;
  %324 = @func_4814() /* ty=Tensor[(1, 6, 16), bool] */;
  (%322, %323, meta[relay.Constant][9] /* ty=Tensor[(40), float64] */, %324)
}

def @func_4227() -> (Tensor[(1, 6, 16), bool],) {
  %325 = @func_1620() /* ty=(Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(?, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
  %326 = %325.5;
  (%326,)
}

def @func_11067() -> (Tensor[(1, 6, 16), bool],) {
  %327 = @func_9235() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %328 = %327.0;
  (%328,)
}

def @func_15240() -> Tensor[(1, 6, 16), bool] {
  @func_580() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_12269() -> (Tensor[(1, 6, 16), bool],) {
  %329 = @func_9235() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %330 = %329.0;
  (%330,)
}

def @func_820() -> (Tensor[(1, 6, 16), float32],) {
  %331 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %332 = %331.0;
  %333 = cast(%332, dtype="float64") /* ty=Tensor[(1, 6, 16), float64] */;
  %334 = asinh(%333) /* ty=Tensor[(1, 6, 16), float64] */;
  %335 = cast(%334, dtype="float32") /* ty=Tensor[(1, 6, 16), float32] */;
  %336 = sin(%335) /* ty=Tensor[(1, 6, 16), float32] */;
  (%336,)
}

def @func_14349() -> Tensor[(8, 6, 16), int8] {
  @func_11503() /* ty=Tensor[(8, 6, 16), int8] */
}

def @func_3050(%var_3018: Tensor[(936), float32]) -> (Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  %337 = @func_2059() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %338 = @func_2444() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %339 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %340 = cast(%var_3018, dtype="float32") /* ty=Tensor[(936), float32] */;
  %341 = reshape(%340, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
  %342 = @func_1883(%341) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32]) */;
  %343 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %344 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %345 = %337.3;
  %346 = %338.0;
  %347 = %339.0;
  %348 = %342.1;
  %349 = %343.0;
  %350 = %344.0;
  (%345, %346, %347, %348, %var_3018, %349, %350)
}

def @func_2059() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  %351 = @func_907() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %352 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %353 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
  %354 = %351.0;
  %355 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
  %356 = %352.0;
  (%353, %354, %355, %356)
}

def @func_3616() -> (Tensor[(2, 6, 16), int32],) {
  %357 = @func_1205() /* ty=Tensor[(2, 6, 16), int32] */;
  (%357,)
}

def @func_15829() -> Tensor[(9, 3, 9), float64] {
  @func_14766() /* ty=Tensor[(9, 3, 9), float64] */
}

def @func_2430(%var_2414: Tensor[(8, 14, 12), float32]) -> (Tensor[(8, 14, 12), float32],) {
  %358 = cast(%var_2414, dtype="float32") /* ty=Tensor[(8, 14, 12), float32] */;
  %359 = sinh(%358) /* ty=Tensor[(8, 14, 12), float32] */;
  (%359,)
}

def @func_1918(%var_1891: Tensor[(936), float32]) -> (Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(1, 6, 16), float32]) {
  %360 = cast(%var_1891, dtype="float32") /* ty=Tensor[(936), float32] */;
  %361 = reshape(%360, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
  %362 = @func_1883(%361) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32]) */;
  %363 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %364 = @func_1728() /* ty=Tensor[(1, 6, 16), bool] */;
  %365 = %362.1;
  %366 = %363.0;
  (%364, %365, %var_1891, %366)
}

def @func_3230() -> (Tensor[(192), bool],) {
  %367 = @func_2840() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(192), bool], Tensor[(390), float32]) */;
  %368 = %367.1;
  (%368,)
}

def @func_16790() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  %369 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %370 = %369.0;
  %371 = @func_4087() /* ty=Tensor[(1, 6, 16), float32] */;
  (%370, %371)
}

def @func_1855(%var_1790: Tensor[(192), bool], %var_1817: Tensor[(390), float32]) -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(192), bool], Tensor[(2, 6, 16), int32]) {
  %372 = @func_1136() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %373 = cast(%var_1790, dtype="bool") /* ty=Tensor[(192), bool] */;
  %374 = reshape(%373, newshape=[2, 6, 16]) /* ty=Tensor[(2, 6, 16), bool] */;
  %375 = @func_487(%374) /* ty=(Tensor[(2, 6, 16), int32],) */;
  %376 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %377 = cast(%var_1817, dtype="float32") /* ty=Tensor[(390), float32] */;
  %378 = reshape(%377, newshape=[13, 5, 6]) /* ty=Tensor[(13, 5, 6), float32] */;
  %379 = @func_746(%378) /* ty=(Tensor[(13, 5, 6), float32],) */;
  %380 = @func_990() /* ty=(Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) */;
  %381 = %372.0;
  %382 = %375.0;
  %383 = %376.0;
  %384 = %379.0;
  %385 = %380.2;
  %386 = @func_1038() /* ty=Tensor[(2, 6, 16), int32] */;
  (%381, %382, %var_1790, %383, %384, %var_1817, %385, %386)
}

def @func_487(%var_475: Tensor[(2, 6, 16), bool]) -> (Tensor[(2, 6, 16), int32],) {
  %387 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %388 = %387.0;
  %389 = cast(%388, dtype="int32") /* ty=Tensor[(1, 6, 16), int32] */;
  %390 = cast(%var_475, dtype="int32") /* ty=Tensor[(2, 6, 16), int32] */;
  %391 = multiply(%389, %390) /* ty=Tensor[(2, 6, 16), int32] */;
  (%391,)
}

def @func_9235() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %392 = @func_1136() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %393 = %392.1;
  %394 = @func_4814() /* ty=Tensor[(1, 6, 16), bool] */;
  (%393, %394)
}

def @func_11029() -> Tensor[(2, 6, 16), float64] {
  %395 = @func_8963() /* ty=(Tensor[(2, 6, 16), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) */;
  %395.0
}

def @func_11248() -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), float64]) {
  %396 = @func_8963() /* ty=(Tensor[(2, 6, 16), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) */;
  %397 = @func_6051() /* ty=Tensor[(1, 6, 16), bool] */;
  %398 = %396.0;
  (%397, %398)
}

def @func_13560() -> (Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8]) {
  %399 = @func_5613() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %400 = %399.0;
  %401 = @func_8129() /* ty=Tensor[(8, 6, 16), int8] */;
  (%400, %401)
}

def @func_16262() -> (Tensor[(1, 6, 16), float32], Tensor[(936), float32]) {
  %402 = @func_6722() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %403 = @func_2969() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %404 = %402.0;
  %405 = %403.3;
  (%404, %405)
}

def @func_3739() -> (Tensor[(1, 6, 16), float32],) {
  %406 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %407 = %406.0;
  (%407,)
}

def @func_14706() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(9, 6, 16), int64], Tensor[(1, 864), float64]) {
  %408 = @func_9024() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %409 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 864), bool] */, dtype="bool") /* ty=Tensor[(1, 864), bool] */;
  %410 = reshape(%409, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), bool] */;
  %411 = @func_10554(%410) /* ty=(Tensor[(9, 6, 16), int64],) */;
  %412 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 864), bool] */, dtype="float64") /* ty=Tensor[(1, 864), float64] */;
  %413 = @func_13326() /* ty=Tensor[(1, 6, 16), bool] */;
  %414 = %408.0;
  %415 = %411.0;
  %416 = acosh(%412) /* ty=Tensor[(1, 864), float64] */;
  (%413, %414, %415, %416)
}

def @func_2969() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) {
  %417 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %418 = @func_907() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %419 = cast(meta[relay.Constant][11] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %420 = reshape(%419, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
  %421 = @func_1883(%420) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32]) */;
  %422 = %417.0;
  %423 = %418.0;
  %424 = %421.0;
  (%422, %423, %424, meta[relay.Constant][11] /* ty=Tensor[(936), float32] */)
}

def @func_5333(%var_5328: Tensor[(1, 1, 7), int32], %var_5329: Tensor[(3, 16, 7), int32]) -> (Tensor[(3, 16, 7), int32],) {
  %425 = cast(%var_5328, dtype="int32") /* ty=Tensor[(1, 1, 7), int32] */;
  %426 = cast(%var_5329, dtype="int32") /* ty=Tensor[(3, 16, 7), int32] */;
  %427 = logical_xor(%425, %426) /* ty=Tensor[(3, 16, 7), int32] */;
  (%427,)
}

def @func_14485(%var_14464: Tensor[(1, 6, 16), bool]) -> (Tensor[(?, 6, 16), uint16], Tensor[(2, 6, 16), int32], Tensor[(1, 288), float32]) {
  %428 = @func_1136() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %429 = %428.0;
  %430 = cast(%var_14464, dtype="uint16") /* ty=Tensor[(1, 6, 16), uint16] */;
  %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%429, dtype="uint16") /* ty=Tensor[(1, 6, 16), uint16] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %434 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 288), float32] */, dtype="float32") /* ty=Tensor[(1, 288), float32] */;
  %435 = reshape(%434, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %436 = @func_4470(%435) /* ty=(Tensor[(2, 6, 16), int32], Tensor[(16, 6, 16), bool], Tensor[(1536), bool], Tensor[(2, 6, 16), int32], Tensor[(1, 390), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float64], Tensor[(288), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %437 = bitwise_xor(%432, %433) /* ty=Tensor[(?, 6, 16), uint16] */;
  %438 = %436.3;
  (%437, %438, meta[relay.Constant][12] /* ty=Tensor[(1, 288), float32] */)
}

def @func_1728() -> Tensor[(1, 6, 16), bool] {
  %439 = @func_1692() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %439.0
}

def @func_16060() -> Tensor[(1, 6, 16), bool] {
  @func_8514() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_14420() -> (Tensor[(1, 6, 16), bool], Tensor[(360, 1), uint64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) {
  %440 = @func_13451() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(360, 1), uint64], Tensor[(9, 8, 5), float32]) */;
  %441 = cast(meta[relay.Constant][13] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %442 = reshape(%441, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %443 = @func_2430(%442) /* ty=(Tensor[(8, 14, 12), float32],) */;
  %444 = @func_1728() /* ty=Tensor[(1, 6, 16), bool] */;
  %445 = %440.2;
  %446 = %443.0;
  (%444, %445, %446, meta[relay.Constant][13] /* ty=Tensor[(1344), float32] */)
}

def @func_6885() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %447 = @func_3552() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %448 = @func_4753() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %449 = %447.0;
  %450 = %448.0;
  (%449, %450)
}

def @func_16554() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(5, 4, 2), float32], Tensor[(1, 40), float32]) {
  %451 = @func_7246() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 6), float32], Tensor[(1, 6, 16), float32], Tensor[(2, 144), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %452 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 40), float32] */, dtype="float32") /* ty=Tensor[(1, 40), float32] */;
  %453 = reshape(%452, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %454 = %451.0;
  %455 = @func_4087() /* ty=Tensor[(1, 6, 16), float32] */;
  %456 = @func_5451(%453) /* ty=Tensor[(5, 4, 2), float32] */;
  (%454, %455, %456, meta[relay.Constant][14] /* ty=Tensor[(1, 40), float32] */)
}

def @func_14429() -> (Tensor[(1, 6, 16), bool],) {
  %457 = @func_3349() /* ty=Tensor[(1, 6, 16), bool] */;
  (%457,)
}

def @func_10939() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  %458 = @func_9890() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %459 = @func_7467() /* ty=Tensor[(1, 6, 16), float32] */;
  %460 = %458.0;
  (%459, %460)
}

def @func_3177() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) {
  %461 = @func_2444() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %462 = @func_2558() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 390), float32]) */;
  %463 = %461.0;
  %464 = %462.2;
  (%463, %464)
}

def @func_8088() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %465 = @func_4115() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %466 = @func_3349() /* ty=Tensor[(1, 6, 16), bool] */;
  %467 = %465.0;
  (%466, %467)
}

def @func_13315() -> (Tensor[(390), float32],) {
  %468 = @func_9981() /* ty=(Tensor[(390), float32],) */;
  %469 = %468.0;
  (%469,)
}

def @func_15302() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(1560), bool]) {
  %470 = cast(meta[relay.Constant][15] /* ty=Tensor[(1560), bool] */, dtype="bool") /* ty=Tensor[(1560), bool] */;
  %471 = reshape(%470, newshape=[4, 390]) /* ty=Tensor[(4, 390), bool] */;
  %472 = @func_9442(%471) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(4, 390), float64]) */;
  %473 = @func_13326() /* ty=Tensor[(1, 6, 16), bool] */;
  %474 = %472.0;
  (%473, %474, meta[relay.Constant][15] /* ty=Tensor[(1560), bool] */)
}

def @func_12897() -> Tensor[(390), float32] {
  @func_11577() /* ty=Tensor[(390), float32] */
}

def @func_9385() -> (Tensor[(2, 6, 16), bool],) {
  %475 = @func_3903() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %476 = %475.0;
  (%476,)
}

def @func_11908() -> (Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  %477 = @func_5216() /* ty=(Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %478 = @func_3903() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %479 = @func_3739() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %480 = %477.2;
  %481 = %478.0;
  %482 = %479.0;
  (%480, %481, %482)
}

def @func_14766() -> Tensor[(9, 3, 9), float64] {
  %483 = cast(meta[relay.Constant][16] /* ty=Tensor[(9, 3, 9), float64] */, dtype="float64") /* ty=Tensor[(9, 3, 9), float64] */;
  sinh(%483) /* ty=Tensor[(9, 3, 9), float64] */
}

def @func_2194(%var_2175: Tensor[(8, 6, 6), float32]) -> (Tensor[(8, 6, 6), float32],) {
  %484 = cast(%var_2175, dtype="float32") /* ty=Tensor[(8, 6, 6), float32] */;
  %485 = sin(%484) /* ty=Tensor[(8, 6, 6), float32] */;
  (%485,)
}

def @func_12585() -> Tensor[(15, 6, 16), bool] {
  %486 = @func_7093() /* ty=(Tensor[(15, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %486.0
}

def @func_12991() -> (Tensor[(1, 6, 16), bool],) {
  %487 = @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %488 = %487.0;
  (%488,)
}

def @func_7813() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool], Tensor[(432, 1), uint32], Tensor[(936), float32]) {
  %489 = @func_1095() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %490 = @func_1038() /* ty=Tensor[(2, 6, 16), int32] */;
  %491 = cast(%490, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
  %492 = reshape(%491, newshape=[192]) /* ty=Tensor[(192), bool] */;
  %493 = @func_6186(%492) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(4, 12, 9), float32], Tensor[(432, 1), uint32], Tensor[(390), float32]) */;
  %494 = @func_5216() /* ty=(Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %495 = @func_7467() /* ty=Tensor[(1, 6, 16), float32] */;
  %496 = %489.0;
  %497 = @func_1056() /* ty=Tensor[(1, 6, 16), bool] */;
  %498 = %493.7;
  %499 = %494.2;
  (%495, %496, %490, %497, %498, %499)
}

def @func_2173() -> (Tensor[(1, 6, 16), float32],) {
  %500 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %501 = %500.0;
  %502 = cast(%501, dtype="float32") /* ty=Tensor[(1, 6, 16), float32] */;
  %503 = log(%502) /* ty=Tensor[(1, 6, 16), float32] */;
  (%503,)
}

def @func_11551() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %504 = @func_3578() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool]) */;
  %505 = @func_3552() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %506 = %504.0;
  %507 = %505.0;
  (%506, %507)
}

def @func_15178(%var_15162: Tensor[(288, 4), float32]) -> (Tensor[(288, 4), bool], Tensor[(1, 390), float32], Tensor[(288, 4), uint64]) {
  %508 = @func_5105() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(288, 1), float32]) */;
  %509 = %508.2;
  %510 = cast(%509, dtype="bool") /* ty=Tensor[(288, 1), bool] */;
  %511 = cast(%var_15162, dtype="bool") /* ty=Tensor[(288, 4), bool] */;
  %512 = cast(%var_15162, dtype="uint64") /* ty=Tensor[(288, 4), uint64] */;
  %513 = cast(%509, dtype="uint64") /* ty=Tensor[(288, 1), uint64] */;
  %514 = less(%510, %511) /* ty=Tensor[(288, 4), bool] */;
  %515 = @func_11783() /* ty=Tensor[(1, 390), float32] */;
  %516 = multiply(%512, %513) /* ty=Tensor[(288, 4), uint64] */;
  (%514, %515, %516)
}

def @func_8585(%var_8582: Tensor[(40), float32]) -> (Tensor[(8, 6, 6), float32], Tensor[(5, 4, 2), float32], Tensor[(40), float32]) {
  %517 = @func_7246() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 6), float32], Tensor[(1, 6, 16), float32], Tensor[(2, 144), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %518 = cast(%var_8582, dtype="float32") /* ty=Tensor[(40), float32] */;
  %519 = reshape(%518, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
  %520 = %517.1;
  %521 = @func_5451(%519) /* ty=Tensor[(5, 4, 2), float32] */;
  (%520, %521, %var_8582)
}

def @func_13131() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %522 = @func_2059() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %523 = @func_9235() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %524 = @func_3988() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %525 = %522.2;
  %526 = %523.0;
  %527 = %524.0;
  (%525, %526, %527)
}

def @func_9321() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  %528 = @func_3739() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %529 = %528.0;
  %530 = @func_8514() /* ty=Tensor[(1, 6, 16), bool] */;
  (%529, %530)
}

def @func_6569() -> (Tensor[(1, 6, 16), float32],) {
  %531 = @func_2969() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %532 = %531.0;
  (%532,)
}

def @func_8453() -> Tensor[(390), float32] {
  %533 = @func_1292() /* ty=(Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), float64]) */;
  %533.4
}

def @func_6722() -> (Tensor[(1, 6, 16), float32],) {
  %534 = @func_6569() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %535 = %534.0;
  (%535,)
}

def @func_9206() -> (Tensor[(13, 5, 6), float32], Tensor[(390), float32]) {
  %536 = @func_5371() /* ty=(Tensor[(13, 5, 6), float32],) */;
  %537 = @func_1375() /* ty=(Tensor[(390), float32],) */;
  %538 = %536.0;
  %539 = %537.0;
  (%538, %539)
}

def @func_1292() -> (Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), float64]) {
  %540 = @func_990() /* ty=(Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) */;
  %541 = @func_1095() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %542 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %543 = cast(meta[relay.Constant][17] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
  %544 = reshape(%543, newshape=[13, 5, 6]) /* ty=Tensor[(13, 5, 6), float32] */;
  %545 = @func_746(%544) /* ty=(Tensor[(13, 5, 6), float32],) */;
  %546 = %540.2;
  %547 = cast(%546, dtype="bool") /* ty=Tensor[(192), bool] */;
  %548 = reshape(%547, newshape=[2, 6, 16]) /* ty=Tensor[(2, 6, 16), bool] */;
  %549 = @func_487(%548) /* ty=(Tensor[(2, 6, 16), int32],) */;
  %550 = @func_1038() /* ty=Tensor[(2, 6, 16), int32] */;
  %551 = cast(%550, dtype="float64") /* ty=Tensor[(2, 6, 16), float64] */;
  %552 = %541.0;
  %553 = %542.0;
  %554 = %545.0;
  %555 = %549.0;
  %556 = exp(%551) /* ty=Tensor[(2, 6, 16), float64] */;
  (%546, %552, %553, %554, meta[relay.Constant][17] /* ty=Tensor[(390), float32] */, %555, %556)
}

def @func_8129() -> Tensor[(8, 6, 16), int8] {
  %557 = @func_5512() /* ty=(Tensor[(8, 6, 16), int8],) */;
  %557.0
}

def @func_3349() -> Tensor[(1, 6, 16), bool] {
  %558 = @func_1692() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %558.0
}

def @main(%var_17882: Tensor[(5, 13, 13), int8], %var_17883: Tensor[(5, 13, 13), int8]) -> Tensor[(5, 13, 13), int8] {
  %559 = cast(%var_17883, dtype="int8") /* ty=Tensor[(5, 13, 13), int8] */;
  %560 = shape_of(%var_17882, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%var_17882, dtype="int8") /* ty=Tensor[(5, 13, 13), int8] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  right_shift(%561, %562) /* ty=Tensor[(5, 13, 13), int8] */
}

def @func_15371(%var_15327: uint16) -> (Tensor[(2, 6, 16), float64], Tensor[(5, 11, 14), uint16], uint16, Tensor[(15, 6, 16), bool], Tensor[(9, 3, 9), float64], Tensor[(192), bool], Tensor[(390), float32], Tensor[(1, 6, 16), bool]) {
  %563 = @func_1292() /* ty=(Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), float64]) */;
  %564 = cast(%var_15327, dtype="uint16") /* ty=uint16 */;
  %565 = reshape(%564, newshape=[]) /* ty=uint16 */;
  %566 = @func_9828(%565) /* ty=(Tensor[(5, 11, 14), uint16], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool], Tensor[(13, 5, 6), float32]) */;
  %567 = %563.6;
  %568 = cast(%567, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
  %569 = cast(meta[relay.Constant][18] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
  %570 = reshape(%568, newshape=[192]) /* ty=Tensor[(192), bool] */;
  %571 = reshape(%569, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %572 = @func_1855(%570, %571) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(192), bool], Tensor[(2, 6, 16), int32]) */;
  %573 = @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %574 = %566.0;
  %575 = @func_12585() /* ty=Tensor[(15, 6, 16), bool] */;
  %576 = @func_14766() /* ty=Tensor[(9, 3, 9), float64] */;
  %577 = %572.2;
  %578 = %573.0;
  (%567, %574, %var_15327, %575, %576, %577, meta[relay.Constant][18] /* ty=Tensor[(390), float32] */, %578)
}

def @func_8864() -> (Tensor[(1, 6, 16), bool],) {
  %579 = @func_5070() /* ty=Tensor[(1, 6, 16), bool] */;
  (%579,)
}

def @func_4688(%var_4681: Tensor[(308), float64]) -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(308), float64]) {
  %580 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %581 = cast(%var_4681, dtype="float64") /* ty=Tensor[(308), float64] */;
  %582 = reshape(%581, newshape=[14, 11, 2]) /* ty=Tensor[(14, 11, 2), float64] */;
  %583 = @func_1769(%582) /* ty=(Tensor[(14, 11, 2), float64], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %584 = %580.0;
  %585 = %583.3;
  (%584, %585, %var_4681)
}

def @func_7864() -> (Tensor[(8, 6, 16), int8], Tensor[(288, 1), float32], Tensor[(1, 6, 16), bool], Tensor[(15, 6, 16), bool]) {
  %586 = @func_7739() /* ty=(Tensor[(8, 6, 16), int8],) */;
  %587 = @func_5105() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(288, 1), float32]) */;
  %588 = @func_6685() /* ty=(Tensor[(15, 6, 16), bool],) */;
  %589 = %586.0;
  %590 = %587.2;
  %591 = @func_1697() /* ty=Tensor[(1, 6, 16), bool] */;
  %592 = %588.0;
  (%589, %590, %591, %592)
}

def @func_14601() -> (Tensor[(2, 6, 16), bool],) {
  %593 = @func_2444() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %594 = %593.0;
  (%594,)
}

def @func_12878() -> Tensor[(2, 6, 16), float64] {
  @func_11029() /* ty=Tensor[(2, 6, 16), float64] */
}

def @func_6441() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %595 = @func_4753() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %596 = @func_5392() /* ty=Tensor[(2, 6, 16), bool] */;
  %597 = %595.0;
  (%596, %597)
}

def @func_4657(%var_4644: uint8) -> (Tensor[(6, 8, 15), uint8],) {
  %598 = cast(%var_4644, dtype="uint8") /* ty=uint8 */;
  %599 = cast(meta[relay.Constant][19] /* ty=Tensor[(6, 8, 15), uint8] */, dtype="uint8") /* ty=Tensor[(6, 8, 15), uint8] */;
  %600 = logical_xor(%598, %599) /* ty=Tensor[(6, 8, 15), uint8] */;
  (%600,)
}

def @func_10694() -> (Tensor[(1, 6, 16), bool],) {
  %601 = @func_10149() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %602 = %601.0;
  (%602,)
}

def @func_6186(%var_6155: Tensor[(192), bool]) -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(4, 12, 9), float32], Tensor[(432, 1), uint32], Tensor[(390), float32]) {
  %603 = @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %604 = cast(meta[relay.Constant][20] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %605 = reshape(%604, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %606 = @func_1419(%605) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
  %607 = cast(%var_6155, dtype="bool") /* ty=Tensor[(192), bool] */;
  %608 = reshape(%607, newshape=[2, 6, 16]) /* ty=Tensor[(2, 6, 16), bool] */;
  %609 = @func_487(%608) /* ty=(Tensor[(2, 6, 16), int32],) */;
  %610 = cast(meta[relay.Constant][21] /* ty=Tensor[(432, 1), uint32] */, dtype="uint32") /* ty=Tensor[(432, 1), uint32] */;
  %611 = reshape(%610, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), uint32] */;
  %612 = @func_3792(%611) /* ty=(Tensor[(390), float32], Tensor[(4, 12, 9), float32]) */;
  %613 = @func_2840() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(192), bool], Tensor[(390), float32]) */;
  %614 = @func_5070() /* ty=Tensor[(1, 6, 16), bool] */;
  %615 = %603.0;
  %616 = %606.1;
  %617 = %609.0;
  %618 = %612.1;
  %619 = %613.2;
  (%614, %615, %616, meta[relay.Constant][20] /* ty=Tensor[(288), float32] */, %617, %var_6155, %618, meta[relay.Constant][21] /* ty=Tensor[(432, 1), uint32] */, %619)
}

def @func_5451(%var_5444: Tensor[(5, 4, 2), float32]) -> Tensor[(5, 4, 2), float32] {
  %620 = cast(%var_5444, dtype="float32") /* ty=Tensor[(5, 4, 2), float32] */;
  acosh(%620) /* ty=Tensor[(5, 4, 2), float32] */
}

def @func_12351() -> (Tensor[(936), float32],) {
  %621 = @func_7246() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 6), float32], Tensor[(1, 6, 16), float32], Tensor[(2, 144), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %622 = %621.5;
  (%622,)
}

def @func_9526() -> Tensor[(1, 6, 16), bool] {
  @func_1697() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_10161() -> (Tensor[(8, 6, 16), int8],) {
  %623 = @func_7739() /* ty=(Tensor[(8, 6, 16), int8],) */;
  %624 = %623.0;
  (%624,)
}

def @func_15836() -> Tensor[(1, 6, 16), float32] {
  %625 = @func_5216() /* ty=(Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %625.1
}

def @func_16000() -> (Tensor[(1, 6, 16), bool],) {
  %626 = @func_10149() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %627 = %626.0;
  (%627,)
}

def @func_4470(%var_4401: Tensor[(288), float32]) -> (Tensor[(2, 6, 16), int32], Tensor[(16, 6, 16), bool], Tensor[(1536), bool], Tensor[(2, 6, 16), int32], Tensor[(1, 390), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float64], Tensor[(288), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  %628 = @func_3616() /* ty=(Tensor[(2, 6, 16), int32],) */;
  %629 = cast(meta[relay.Constant][22] /* ty=Tensor[(1536), bool] */, dtype="bool") /* ty=Tensor[(1536), bool] */;
  %630 = reshape(%629, newshape=[16, 6, 16]) /* ty=Tensor[(16, 6, 16), bool] */;
  %631 = @func_604(%630) /* ty=(Tensor[(16, 6, 16), bool],) */;
  %632 = %628.0;
  %633 = cast(%632, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
  %634 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 390), float32] */, dtype="float32") /* ty=Tensor[(1, 390), float32] */;
  %635 = reshape(%633, newshape=[192]) /* ty=Tensor[(192), bool] */;
  %636 = reshape(%634, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %637 = @func_1855(%635, %636) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(192), bool], Tensor[(2, 6, 16), int32]) */;
  %638 = @func_2059() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %639 = cast(%var_4401, dtype="float32") /* ty=Tensor[(288), float32] */;
  %640 = reshape(%639, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %641 = @func_3419(%640) /* ty=(Tensor[(192), bool], Tensor[(2, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32], Tensor[(1, 6, 16), float64]) */;
  %642 = @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %643 = @func_3932() /* ty=(Tensor[(8, 6, 16), int8],) */;
  %644 = @func_3177() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) */;
  %645 = cast(%var_4401, dtype="float32") /* ty=Tensor[(288), float32] */;
  %646 = reshape(%645, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %647 = @func_1419(%646) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
  %648 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %649 = %631.0;
  %650 = %637.7;
  %651 = %638.1;
  %652 = %641.5;
  %653 = %642.0;
  %654 = %643.0;
  %655 = %644.0;
  %656 = %647.1;
  %657 = %648.0;
  (%632, %649, meta[relay.Constant][22] /* ty=Tensor[(1536), bool] */, %650, meta[relay.Constant][23] /* ty=Tensor[(1, 390), float32] */, %651, %652, %var_4401, %653, %654, %655, %656, %657)
}

def @func_13262(%var_13259: Tensor[(15, 13, 8), float64]) -> Tensor[(15, 13, 8), float64] {
  %658 = cast(%var_13259, dtype="float64") /* ty=Tensor[(15, 13, 8), float64] */;
  cosh(%658) /* ty=Tensor[(15, 13, 8), float64] */
}

def @func_12727() -> (Tensor[(16, 10, 15), bool],) {
  %659 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 10, 15), float64] */, dtype="float64") /* ty=Tensor[(16, 10, 15), float64] */;
  %660 = acosh(%659) /* ty=Tensor[(16, 10, 15), float64] */;
  %661 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 10, 15), float64] */, dtype="bool") /* ty=Tensor[(16, 10, 15), bool] */;
  %662 = shape_of(%660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%660, dtype="bool") /* ty=Tensor[(16, 10, 15), bool] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %665 = equal(%663, %664) /* ty=Tensor[(16, 10, 15), bool] */;
  (%665,)
}

def @func_5655() -> (Tensor[(2, 6, 16), bool],) {
  %666 = @func_5392() /* ty=Tensor[(2, 6, 16), bool] */;
  (%666,)
}

def @func_13326() -> Tensor[(1, 6, 16), bool] {
  @func_10239() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_15915() -> (Tensor[(2, 6, 16), int32],) {
  %667 = @func_12819() /* ty=(Tensor[(2, 6, 16), int32],) */;
  %668 = %667.0;
  (%668,)
}

def @func_16665() -> Tensor[(1, 6, 16), bool] {
  @func_1728() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_8209() -> Tensor[(4, 390), bool] {
  %669 = @func_3177() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) */;
  %670 = %669.1;
  %671 = cast(%670, dtype="int64") /* ty=Tensor[(1, 390), int64] */;
  %672 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 390), float32] */, dtype="int64") /* ty=Tensor[(4, 390), int64] */;
  %673 = bitwise_xor(%671, %672) /* ty=Tensor[(4, 390), int64] */;
  %674 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 390), float32] */, dtype="bool") /* ty=Tensor[(4, 390), bool] */;
  %675 = shape_of(%673, dtype="int32") /* ty=Tensor[(2), int32] */;
  %676 = cast(%673, dtype="bool") /* ty=Tensor[(4, 390), bool] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  less(%676, %677) /* ty=Tensor[(4, 390), bool] */
}

def @func_7246() -> (Tensor[(1, 6, 16), bool], Tensor[(8, 6, 6), float32], Tensor[(1, 6, 16), float32], Tensor[(2, 144), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) {
  %678 = @func_6758() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(?, 6, 16), int8]) */;
  %679 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 144), float32] */, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %680 = reshape(%679, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), float32] */;
  %681 = @func_2194(%680) /* ty=(Tensor[(8, 6, 6), float32],) */;
  %682 = @func_5887() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %683 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 144), float32] */, dtype="float64") /* ty=Tensor[(2, 144), float64] */;
  %684 = log10(%683) /* ty=Tensor[(2, 144), float64] */;
  %685 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 144), float32] */, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %686 = shape_of(%684, dtype="int32") /* ty=Tensor[(2), int32] */;
  %687 = cast(%684, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %689 = cast(meta[relay.Constant][27] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %690 = reshape(%689, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %691 = @func_1918(%690) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(1, 6, 16), float32]) */;
  %692 = %678.0;
  %693 = %681.0;
  %694 = %682.0;
  %695 = power(%687, %688) /* ty=Tensor[(2, 144), float32] */;
  %696 = %691.3;
  (%692, %693, %694, %695, %696, meta[relay.Constant][27] /* ty=Tensor[(936), float32] */)
}

def @func_11055() -> (Tensor[(390), float32],) {
  %697 = @func_5216() /* ty=(Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %698 = %697.0;
  (%698,)
}

def @func_12382() -> Tensor[(2, 6, 16), bool] {
  @func_2983() /* ty=Tensor[(2, 6, 16), bool] */
}

def @func_2444() -> (Tensor[(2, 6, 16), bool],) {
  %699 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %700 = %699.0;
  (%700,)
}

def @func_6051() -> Tensor[(1, 6, 16), bool] {
  %701 = @func_4753() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %701.0
}

def @func_8963() -> (Tensor[(2, 6, 16), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) {
  %702 = @func_4642() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), float64]) */;
  %703 = cast(meta[relay.Constant][28] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %704 = reshape(%703, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %705 = @func_1419(%704) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
  %706 = %705.4;
  %707 = cast(%706, dtype="float32") /* ty=Tensor[(288), float32] */;
  %708 = reshape(%707, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %709 = @func_4470(%708) /* ty=(Tensor[(2, 6, 16), int32], Tensor[(16, 6, 16), bool], Tensor[(1536), bool], Tensor[(2, 6, 16), int32], Tensor[(1, 390), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float64], Tensor[(288), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %710 = %702.1;
  %711 = @func_2983() /* ty=Tensor[(2, 6, 16), bool] */;
  %712 = %709.4;
  (%710, %706, meta[relay.Constant][28] /* ty=Tensor[(288), float32] */, %711, %712)
}

def @func_13394(%var_13386: Tensor[(936), float32], %var_13389: Tensor[(1560), bool]) -> (Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(1, 6, 16), float32], Tensor[(1560), bool], Tensor[(13, 8, 9), float32]) {
  %713 = @func_11908() /* ty=(Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %714 = cast(%var_13386, dtype="float32") /* ty=Tensor[(936), float32] */;
  %715 = reshape(%714, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %716 = @func_1918(%715) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(1, 6, 16), float32]) */;
  %717 = cast(%var_13389, dtype="bool") /* ty=Tensor[(1560), bool] */;
  %718 = reshape(%717, newshape=[4, 390]) /* ty=Tensor[(4, 390), bool] */;
  %719 = @func_9442(%718) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(4, 390), float64]) */;
  %720 = cast(%var_13386, dtype="float32") /* ty=Tensor[(936), float32] */;
  %721 = reshape(%720, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
  %722 = @func_1883(%721) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32]) */;
  %723 = %713.2;
  %724 = %716.1;
  %725 = %719.0;
  %726 = %722.1;
  (%723, %724, %var_13386, %725, %var_13389, %726)
}

def @func_7731(%var_7715: Tensor[(15, 3, 16), float64], %var_7716: Tensor[(15, 3, 16), float64]) -> (Tensor[(15, 3, 16), float64],) {
  %727 = cast(%var_7716, dtype="float64") /* ty=Tensor[(15, 3, 16), float64] */;
  %728 = shape_of(%var_7715, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%var_7715, dtype="float64") /* ty=Tensor[(15, 3, 16), float64] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %731 = floor_divide(%729, %730) /* ty=Tensor[(15, 3, 16), float64] */;
  (%731,)
}

def @func_1375() -> (Tensor[(390), float32],) {
  %732 = @func_1292() /* ty=(Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), float64]) */;
  %733 = %732.4;
  (%733,)
}

def @func_2379() -> (Tensor[(1, 6, 16), bool],) {
  %734 = @func_2097() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(390), float32]) */;
  %735 = %734.0;
  (%735,)
}

def @func_8156() -> (Tensor[(2, 6, 16), bool],) {
  %736 = @func_6441() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %737 = %736.0;
  (%737,)
}

def @func_1992() -> (Tensor[(1, 6, 16), float32], Tensor[(16, 6, 16), bool], Tensor[(1536), bool]) {
  %738 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %739 = cast(meta[relay.Constant][29] /* ty=Tensor[(1536), bool] */, dtype="bool") /* ty=Tensor[(1536), bool] */;
  %740 = reshape(%739, newshape=[16, 6, 16]) /* ty=Tensor[(16, 6, 16), bool] */;
  %741 = @func_604(%740) /* ty=(Tensor[(16, 6, 16), bool],) */;
  %742 = %738.0;
  %743 = %741.0;
  (%742, %743, meta[relay.Constant][29] /* ty=Tensor[(1536), bool] */)
}

def @func_6805() -> Tensor[(1, 6, 16), bool] {
  %744 = @func_3988() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %744.0
}

def @func_2885() -> (Tensor[(390), float32], Tensor[(2, 6, 16), bool]) {
  %745 = @func_1375() /* ty=(Tensor[(390), float32],) */;
  %746 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %747 = %745.0;
  %748 = %746.0;
  (%747, %748)
}

def @func_3988() -> (Tensor[(1, 6, 16), bool],) {
  %749 = @func_1697() /* ty=Tensor[(1, 6, 16), bool] */;
  (%749,)
}

def @func_681() -> (Tensor[(1, 6, 16), bool],) {
  %750 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
  (%750,)
}

def @func_4949(%var_4932: Tensor[(11, 3, 6), int8], %var_4933: Tensor[(11, 3, 6), int8]) -> (Tensor[(11, 3, 6), float32], Tensor[(1, 6, 16), bool]) {
  %751 = cast(%var_4933, dtype="int8") /* ty=Tensor[(11, 3, 6), int8] */;
  %752 = shape_of(%var_4932, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%var_4932, dtype="int8") /* ty=Tensor[(11, 3, 6), int8] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %755 = bitwise_and(%753, %754) /* ty=Tensor[(11, 3, 6), int8] */;
  %756 = cast(%755, dtype="float32") /* ty=Tensor[(11, 3, 6), float32] */;
  %757 = sqrt(%756) /* ty=Tensor[(11, 3, 6), float32] */;
  %758 = @func_3338() /* ty=Tensor[(1, 6, 16), bool] */;
  (%757, %758)
}

def @func_9828(%var_9763: uint16) -> (Tensor[(5, 11, 14), uint16], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool], Tensor[(13, 5, 6), float32]) {
  %759 = cast(%var_9763, dtype="uint16") /* ty=uint16 */;
  %760 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 11, 14), uint16] */, dtype="uint16") /* ty=Tensor[(5, 11, 14), uint16] */;
  %761 = @func_2059() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %762 = @func_2885() /* ty=(Tensor[(390), float32], Tensor[(2, 6, 16), bool]) */;
  %763 = @func_5371() /* ty=(Tensor[(13, 5, 6), float32],) */;
  %764 = bitwise_and(%759, %760) /* ty=Tensor[(5, 11, 14), uint16] */;
  %765 = %761.1;
  %766 = %762.1;
  %767 = %763.0;
  (%764, %765, %766, %767)
}

def @func_8816() -> (Tensor[(1, 6, 16), bool],) {
  %768 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %769 = %768.0;
  (%769,)
}

def @func_9442(%var_9435: Tensor[(4, 390), bool]) -> (Tensor[(1, 6, 16), float32], Tensor[(4, 390), float64]) {
  %770 = @func_6722() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %771 = @func_8209() /* ty=Tensor[(4, 390), bool] */;
  %772 = cast(%var_9435, dtype="float64") /* ty=Tensor[(4, 390), float64] */;
  %773 = shape_of(%771, dtype="int32") /* ty=Tensor[(2), int32] */;
  %774 = cast(%771, dtype="float64") /* ty=Tensor[(4, 390), float64] */;
  %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %776 = %770.0;
  %777 = power(%774, %775) /* ty=Tensor[(4, 390), float64] */;
  (%776, %777)
}

def @func_17235(%var_17223: Tensor[(9, 40), float32]) -> (Tensor[(1, 6, 16), bool], Tensor[(9, 40), bool], Tensor[(9, 6, 16), int64], Tensor[(864), bool], Tensor[(1, 6, 16), float32]) {
  %778 = @func_8025() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %779 = @func_16554() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(5, 4, 2), float32], Tensor[(1, 40), float32]) */;
  %780 = %779.3;
  %781 = cast(%780, dtype="bool") /* ty=Tensor[(1, 40), bool] */;
  %782 = cast(%var_17223, dtype="bool") /* ty=Tensor[(9, 40), bool] */;
  %783 = cast(meta[relay.Constant][31] /* ty=Tensor[(864), bool] */, dtype="bool") /* ty=Tensor[(864), bool] */;
  %784 = reshape(%783, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), bool] */;
  %785 = @func_10554(%784) /* ty=(Tensor[(9, 6, 16), int64],) */;
  %786 = %778.1;
  %787 = less_equal(%781, %782) /* ty=Tensor[(9, 40), bool] */;
  %788 = %785.0;
  %789 = @func_15762() /* ty=Tensor[(1, 6, 16), float32] */;
  (%786, %787, %788, meta[relay.Constant][31] /* ty=Tensor[(864), bool] */, %789)
}

def @func_604(%var_599: Tensor[(16, 6, 16), bool]) -> (Tensor[(16, 6, 16), bool],) {
  %790 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
  %791 = cast(%790, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %792 = cast(%var_599, dtype="bool") /* ty=Tensor[(16, 6, 16), bool] */;
  %793 = greater(%791, %792) /* ty=Tensor[(16, 6, 16), bool] */;
  (%793,)
}

def @func_12670(%var_12652: Tensor[(1, 40), float64]) -> (Tensor[(?, 6, 16), int8], Tensor[(1, 40), float64], Tensor[(2, 6, 16), float64], Tensor[(4, 2, 5), float32]) {
  %794 = @func_5026() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) */;
  %795 = cast(%var_12652, dtype="float64") /* ty=Tensor[(1, 40), float64] */;
  %796 = reshape(%795, newshape=[4, 2, 5]) /* ty=Tensor[(4, 2, 5), float64] */;
  %797 = @func_7297(%796) /* ty=(Tensor[(4, 2, 5), float64],) */;
  %798 = %797.0;
  %799 = cast(%798, dtype="float32") /* ty=Tensor[(4, 2, 5), float32] */;
  %800 = %794.0;
  %801 = @func_11029() /* ty=Tensor[(2, 6, 16), float64] */;
  %802 = rsqrt(%799) /* ty=Tensor[(4, 2, 5), float32] */;
  (%800, %var_12652, %801, %802)
}

def @func_13062(%var_13053: Tensor[(15, 6, 16), bool]) -> Tensor[(15, 6, 16), bool] {
  %803 = @func_12903() /* ty=Tensor[(1, 6, 16), bool] */;
  %804 = cast(%803, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %805 = cast(%var_13053, dtype="bool") /* ty=Tensor[(15, 6, 16), bool] */;
  less_equal(%804, %805) /* ty=Tensor[(15, 6, 16), bool] */
}

def @func_16225() -> (Tensor[(8, 6, 16), int8], Tensor[(3, 16, 7), int32], Tensor[(7), int32], Tensor[(336), int32]) {
  %806 = cast(meta[relay.Constant][32] /* ty=Tensor[(7), int32] */, dtype="int32") /* ty=Tensor[(7), int32] */;
  %807 = cast(meta[relay.Constant][33] /* ty=Tensor[(336), int32] */, dtype="int32") /* ty=Tensor[(336), int32] */;
  %808 = reshape(%806, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), int32] */;
  %809 = reshape(%807, newshape=[3, 16, 7]) /* ty=Tensor[(3, 16, 7), int32] */;
  %810 = @func_5333(%808, %809) /* ty=(Tensor[(3, 16, 7), int32],) */;
  %811 = @func_14349() /* ty=Tensor[(8, 6, 16), int8] */;
  %812 = %810.0;
  (%811, %812, meta[relay.Constant][32] /* ty=Tensor[(7), int32] */, meta[relay.Constant][33] /* ty=Tensor[(336), int32] */)
}

def @func_17624() -> (Tensor[(390), float32],) {
  %813 = @func_9206() /* ty=(Tensor[(13, 5, 6), float32], Tensor[(390), float32]) */;
  %814 = %813.1;
  (%814,)
}

def @func_9890() -> (Tensor[(1, 6, 16), bool],) {
  %815 = @func_5974() /* ty=Tensor[(1, 6, 16), bool] */;
  (%815,)
}

def @func_1095() -> (Tensor[(1, 6, 16), bool],) {
  %816 = @func_907() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %817 = %816.0;
  (%817,)
}

def @func_5512() -> (Tensor[(8, 6, 16), int8],) {
  %818 = @func_3932() /* ty=(Tensor[(8, 6, 16), int8],) */;
  %819 = %818.0;
  (%819,)
}

def @func_6509() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %820 = @func_5655() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %821 = @func_2558() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 390), float32]) */;
  %822 = %820.0;
  %823 = %821.0;
  (%822, %823)
}

def @func_10298() -> (Tensor[(2, 6, 16), bool], Tensor[(8, 6, 16), int8]) {
  %824 = @func_8267() /* ty=Tensor[(2, 6, 16), bool] */;
  %825 = @func_8129() /* ty=Tensor[(8, 6, 16), int8] */;
  (%824, %825)
}

def @func_17156(%var_17152: Tensor[(2, 20), float64]) -> (Tensor[(1, 6, 16), bool], Tensor[(4, 2, 5), float64], Tensor[(2, 20), float64]) {
  %826 = @func_14377() /* ty=(Tensor[(390), float32], Tensor[(1, 6, 16), bool]) */;
  %827 = cast(%var_17152, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %828 = reshape(%827, newshape=[4, 2, 5]) /* ty=Tensor[(4, 2, 5), float64] */;
  %829 = @func_7297(%828) /* ty=(Tensor[(4, 2, 5), float64],) */;
  %830 = %826.1;
  %831 = %829.0;
  (%830, %831, %var_17152)
}

def @func_17497() -> (Tensor[(1, 6, 16), bool], Tensor[(432), uint32], Tensor[(2, 216), uint32]) {
  %832 = @func_13793() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32]) */;
  %833 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 216), uint32] */, dtype="uint32") /* ty=Tensor[(2, 216), uint32] */;
  %834 = reshape(%833, newshape=[432]) /* ty=Tensor[(432), uint32] */;
  %835 = @func_14909(%834) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(4, 12, 9), float32], Tensor[(432), uint32]) */;
  %836 = %832.0;
  %837 = %835.2;
  (%836, %837, meta[relay.Constant][34] /* ty=Tensor[(2, 216), uint32] */)
}

def @func_17374() -> (Tensor[(390), float32], Tensor[(1, 6, 16), bool]) {
  %838 = @func_11055() /* ty=(Tensor[(390), float32],) */;
  %839 = @func_7093() /* ty=(Tensor[(15, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %840 = %838.0;
  %841 = %839.1;
  (%840, %841)
}

def @func_10149() -> (Tensor[(1, 6, 16), bool],) {
  %842 = @func_8708() /* ty=Tensor[(1, 6, 16), bool] */;
  (%842,)
}

def @func_10923() -> (Tensor[(13, 5, 6), float32],) {
  %843 = @func_5255() /* ty=(Tensor[(13, 5, 6), float32], Tensor[(936), float32]) */;
  %844 = %843.0;
  (%844,)
}

def @func_7041(%var_7033: Tensor[(7, 6, 16), bool]) -> (Tensor[(7, 6, 16), bool],) {
  %845 = @func_1728() /* ty=Tensor[(1, 6, 16), bool] */;
  %846 = cast(%845, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %847 = cast(%var_7033, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %848 = greater(%846, %847) /* ty=Tensor[(7, 6, 16), bool] */;
  (%848,)
}

def @func_4753() -> (Tensor[(1, 6, 16), bool],) {
  %849 = @func_3349() /* ty=Tensor[(1, 6, 16), bool] */;
  (%849,)
}

def @func_5613() -> (Tensor[(1, 6, 16), bool],) {
  %850 = @func_3903() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %851 = %850.1;
  (%851,)
}

def @func_8514() -> Tensor[(1, 6, 16), bool] {
  %852 = @func_1949() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %852.0
}

def @func_12732() -> (Tensor[(936), float32],) {
  %853 = @func_12351() /* ty=(Tensor[(936), float32],) */;
  %854 = %853.0;
  (%854,)
}

def @func_3461(%var_3437: Tensor[(1344), float32]) -> (Tensor[(?, 6, 16), bool], Tensor[(8, 14, 12), float32], Tensor[(1344), float32], Tensor[(13, 5, 6), float32], Tensor[(1, 6, 16), bool]) {
  %855 = @func_1620() /* ty=(Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(?, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
  %856 = cast(%var_3437, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %857 = reshape(%856, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %858 = @func_2430(%857) /* ty=(Tensor[(8, 14, 12), float32],) */;
  %859 = @func_2969() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %860 = %855.2;
  %861 = %858.0;
  %862 = @func_3197() /* ty=Tensor[(13, 5, 6), float32] */;
  %863 = %859.1;
  (%860, %861, %var_3437, %862, %863)
}

def @func_7136() -> Tensor[(2, 6, 16), bool] {
  @func_5392() /* ty=Tensor[(2, 6, 16), bool] */
}

def @func_990() -> (Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) {
  %864 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %865 = %864.0;
  %866 = cast(%865, dtype="float32") /* ty=Tensor[(1, 6, 16), float32] */;
  %867 = sqrt(%866) /* ty=Tensor[(1, 6, 16), float32] */;
  %868 = cast(%867, dtype="float64") /* ty=Tensor[(1, 6, 16), float64] */;
  %869 = tan(%868) /* ty=Tensor[(1, 6, 16), float64] */;
  %870 = cast(%867, dtype="int64") /* ty=Tensor[(1, 6, 16), int64] */;
  %871 = shape_of(%869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %872 = cast(%869, dtype="int64") /* ty=Tensor[(1, 6, 16), int64] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %874 = cast(meta[relay.Constant][35] /* ty=Tensor[(192), bool] */, dtype="bool") /* ty=Tensor[(192), bool] */;
  %875 = reshape(%874, newshape=[2, 6, 16]) /* ty=Tensor[(2, 6, 16), bool] */;
  %876 = @func_487(%875) /* ty=(Tensor[(2, 6, 16), int32],) */;
  %877 = logical_xor(%872, %873) /* ty=Tensor[(?, 6, 16), int64] */;
  %878 = %876.0;
  (%877, %878, meta[relay.Constant][35] /* ty=Tensor[(192), bool] */)
}

def @func_16944() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %879 = @func_10694() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %880 = @func_10078() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %881 = %879.0;
  %882 = %880.0;
  (%881, %882)
}

def @func_16699() -> (Tensor[(1, 6, 16), bool],) {
  %883 = @func_8708() /* ty=Tensor[(1, 6, 16), bool] */;
  (%883,)
}

def @func_10763() -> (Tensor[(8, 6, 16), int8], Tensor[(1, 6, 16), float32], Tensor[(11, 7, 16), float64], Tensor[(1232), float64], Tensor[(16, 6, 16), bool]) {
  %884 = @func_7901() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %885 = cast(meta[relay.Constant][36] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %886 = reshape(%885, newshape=[11, 7, 16]) /* ty=Tensor[(11, 7, 16), float64] */;
  %887 = @func_8873(%886) /* ty=(Tensor[(11, 7, 16), float64],) */;
  %888 = @func_1992() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(16, 6, 16), bool], Tensor[(1536), bool]) */;
  %889 = @func_8129() /* ty=Tensor[(8, 6, 16), int8] */;
  %890 = %884.0;
  %891 = %887.0;
  %892 = %888.1;
  (%889, %890, %891, meta[relay.Constant][36] /* ty=Tensor[(1232), float64] */, %892)
}

def @func_17830() -> (Tensor[(390), float32],) {
  %893 = @func_12897() /* ty=Tensor[(390), float32] */;
  (%893,)
}

def @func_8371() -> Tensor[(1, 6, 16), float32] {
  %894 = @func_6569() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %894.0
}

def @func_3672() -> (Tensor[(?, 6, 16), int8],) {
  %895 = @func_1056() /* ty=Tensor[(1, 6, 16), bool] */;
  %896 = cast(%895, dtype="float32") /* ty=Tensor[(1, 6, 16), float32] */;
  %897 = asin(%896) /* ty=Tensor[(1, 6, 16), float32] */;
  %898 = cast(%895, dtype="int8") /* ty=Tensor[(1, 6, 16), int8] */;
  %899 = shape_of(%897, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%897, dtype="int8") /* ty=Tensor[(1, 6, 16), int8] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %902 = minimum(%900, %901) /* ty=Tensor[(?, 6, 16), int8] */;
  (%902,)
}

def @func_14239() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %903 = @func_3903() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %904 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %905 = %903.0;
  %906 = @func_12903() /* ty=Tensor[(1, 6, 16), bool] */;
  %907 = %904.0;
  (%905, %906, %907)
}

def @func_16630(%var_16608: Tensor[(1, 288), float32], %var_16623: Tensor[(8, 6, 16), bool]) -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), float64], Tensor[(1, 288), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), float32]) {
  %908 = @func_3552() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %909 = @func_2173() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %910 = cast(%var_16608, dtype="float32") /* ty=Tensor[(1, 288), float32] */;
  %911 = reshape(%910, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %912 = @func_13738(%911) /* ty=(Tensor[(2, 6, 16), float64], Tensor[(1, 6, 16), float64], Tensor[(288), float32]) */;
  %913 = @func_10681() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8]) */;
  %914 = @func_13560() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8]) */;
  %915 = %914.0;
  %916 = cast(%915, dtype="float32") /* ty=Tensor[(1, 6, 16), float32] */;
  %917 = cast(%var_16623, dtype="float32") /* ty=Tensor[(8, 6, 16), float32] */;
  %918 = %908.0;
  %919 = %909.0;
  %920 = %912.0;
  %921 = %913.0;
  %922 = divide(%916, %917) /* ty=Tensor[(8, 6, 16), float32] */;
  (%918, %919, %920, %var_16608, %921, %922)
}

def @func_5974() -> Tensor[(1, 6, 16), bool] {
  %923 = @func_1949() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %923.1
}

def @func_6388() -> (Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  %924 = @func_5026() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) */;
  %925 = @func_2173() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %926 = %924.0;
  %927 = %925.0;
  %928 = @func_5974() /* ty=Tensor[(1, 6, 16), bool] */;
  (%926, %927, %928)
}

def @func_16295() -> Tensor[(1, 6, 16), bool] {
  @func_580() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_10554(%var_10545: Tensor[(9, 6, 16), bool]) -> (Tensor[(9, 6, 16), int64],) {
  %929 = @func_9024() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %930 = %929.0;
  %931 = cast(%930, dtype="int64") /* ty=Tensor[(1, 6, 16), int64] */;
  %932 = cast(%var_10545, dtype="int64") /* ty=Tensor[(9, 6, 16), int64] */;
  %933 = bitwise_xor(%931, %932) /* ty=Tensor[(9, 6, 16), int64] */;
  (%933,)
}

def @func_4556() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  %934 = @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %935 = %934.0;
  %936 = @func_4087() /* ty=Tensor[(1, 6, 16), float32] */;
  (%935, %936)
}

def @func_394() -> (Tensor[(1, 6, 16), bool],) {
  %937 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %938 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 6, 16), bool] */, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %939 = logical_or(%937, %938) /* ty=Tensor[(1, 6, 16), bool] */;
  (%939,)
}

def @func_14133(%var_14129: Tensor[(11, 15, 6), float32]) -> (Tensor[(11, 15, 6), float32],) {
  %940 = cast(%var_14129, dtype="float32") /* ty=Tensor[(11, 15, 6), float32] */;
  %941 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(11, 15, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %942 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 15, 6), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 6), float32] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %944 = power(%942, %943) /* ty=Tensor[(11, 15, 6), float32] */;
  (%944,)
}

def @func_1769(%var_1735: Tensor[(14, 11, 2), float64]) -> (Tensor[(14, 11, 2), float64], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %945 = cast(%var_1735, dtype="float64") /* ty=Tensor[(14, 11, 2), float64] */;
  %946 = @func_1692() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %947 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %948 = atan(%945) /* ty=Tensor[(14, 11, 2), float64] */;
  %949 = %946.0;
  %950 = @func_1728() /* ty=Tensor[(1, 6, 16), bool] */;
  %951 = %947.0;
  (%948, %949, %950, %951)
}

def @func_5255() -> (Tensor[(13, 5, 6), float32], Tensor[(936), float32]) {
  %952 = @func_2969() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %953 = @func_3197() /* ty=Tensor[(13, 5, 6), float32] */;
  %954 = %952.3;
  (%953, %954)
}

def @func_17272() -> (Tensor[(2, 6, 16), bool],) {
  %955 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %956 = %955.0;
  (%956,)
}

def @func_15209() -> (Tensor[(8, 6, 16), int8], Tensor[(2, 6, 16), int32], Tensor[(48, 4), bool], Tensor[(390), float32], Tensor[(2, 6, 16), bool]) {
  %957 = cast(meta[relay.Constant][39] /* ty=Tensor[(48, 4), bool] */, dtype="bool") /* ty=Tensor[(48, 4), bool] */;
  %958 = cast(meta[relay.Constant][40] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
  %959 = reshape(%957, newshape=[192]) /* ty=Tensor[(192), bool] */;
  %960 = reshape(%958, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %961 = @func_1855(%959, %960) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(192), bool], Tensor[(2, 6, 16), int32]) */;
  %962 = @func_8025() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %963 = @func_12966() /* ty=Tensor[(8, 6, 16), int8] */;
  %964 = %961.7;
  %965 = %962.0;
  (%963, %964, meta[relay.Constant][39] /* ty=Tensor[(48, 4), bool] */, meta[relay.Constant][40] /* ty=Tensor[(390), float32] */, %965)
}

def @func_4924(%var_4900: Tensor[(13, 8, 9), float32]) -> (Tensor[(13, 8, 9), uint32], Tensor[(?, 6, 16), bool]) {
  %966 = @func_2698() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32]) */;
  %967 = %966.1;
  %968 = cast(%var_4900, dtype="uint32") /* ty=Tensor[(13, 8, 9), uint32] */;
  %969 = shape_of(%967, dtype="int32") /* ty=Tensor[(3), int32] */;
  %970 = cast(%967, dtype="uint32") /* ty=Tensor[(13, 8, 9), uint32] */;
  %971 = dyn.reshape(%968, %969, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %972 = @func_3988() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %973 = %972.0;
  %974 = @func_3349() /* ty=Tensor[(1, 6, 16), bool] */;
  %975 = cast(%974, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %976 = shape_of(%973, dtype="int32") /* ty=Tensor[(3), int32] */;
  %977 = cast(%973, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %978 = dyn.reshape(%975, %976, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %979 = add(%970, %971) /* ty=Tensor[(13, 8, 9), uint32] */;
  %980 = greater_equal(%977, %978) /* ty=Tensor[(?, 6, 16), bool] */;
  (%979, %980)
}

def @func_1419(%var_1415: Tensor[(288), float32]) -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) {
  %981 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %982 = @func_1136() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %983 = cast(%var_1415, dtype="float32") /* ty=Tensor[(288), float32] */;
  %984 = reshape(%983, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %985 = @func_899(%984) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(3, 6, 16), bool]) */;
  %986 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
  %987 = %981.0;
  %988 = %982.1;
  %989 = %985.0;
  (%986, %987, %988, %989, %var_1415)
}

def @func_12903() -> Tensor[(1, 6, 16), bool] {
  %990 = @func_5305() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %990.0
}

def @func_2840() -> (Tensor[(2, 6, 16), bool], Tensor[(192), bool], Tensor[(390), float32]) {
  %991 = @func_2444() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %992 = %991.0;
  %993 = cast(%992, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
  %994 = cast(meta[relay.Constant][41] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
  %995 = reshape(%993, newshape=[192]) /* ty=Tensor[(192), bool] */;
  %996 = reshape(%994, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %997 = @func_1855(%995, %996) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(192), bool], Tensor[(2, 6, 16), int32]) */;
  %998 = %997.6;
  (%992, %998, meta[relay.Constant][41] /* ty=Tensor[(390), float32] */)
}

def @func_4115() -> (Tensor[(1, 6, 16), bool],) {
  %999 = @func_3338() /* ty=Tensor[(1, 6, 16), bool] */;
  (%999,)
}

def @func_8229(%var_8221: Tensor[(4, 390), bool]) -> (Tensor[(4, 390), bool],) {
  %1000 = @func_8209() /* ty=Tensor[(4, 390), bool] */;
  %1001 = cast(%var_8221, dtype="bool") /* ty=Tensor[(4, 390), bool] */;
  %1002 = shape_of(%1000, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1003 = cast(%1000, dtype="bool") /* ty=Tensor[(4, 390), bool] */;
  %1004 = dyn.reshape(%1001, %1002, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1005 = greater_equal(%1003, %1004) /* ty=Tensor[(4, 390), bool] */;
  (%1005,)
}

def @func_3521(%var_3511: Tensor[(936), float32]) -> (Tensor[(?, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(936), float32]) {
  %1006 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
  %1007 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 6, 16), bool] */, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %1008 = shape_of(%1006, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1009 = cast(%1006, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1011 = less(%1009, %1010) /* ty=Tensor[(?, 6, 16), bool] */;
  %1012 = cast(%1011, dtype="float32") /* ty=Tensor[(?, 6, 16), float32] */;
  %1013 = cast(%var_3511, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1014 = reshape(%1013, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %1015 = @func_1918(%1014) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(1, 6, 16), float32]) */;
  %1016 = acosh(%1012) /* ty=Tensor[(?, 6, 16), float32] */;
  %1017 = %1015.0;
  (%1016, %1017, %var_3511)
}

def @func_3552() -> (Tensor[(1, 6, 16), bool],) {
  %1018 = @func_1728() /* ty=Tensor[(1, 6, 16), bool] */;
  (%1018,)
}

def @func_2983() -> Tensor[(2, 6, 16), bool] {
  %1019 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %1019.0
}

def @func_3258() -> Tensor[(1, 6, 16), bool] {
  @func_580() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_16131() -> (Tensor[(1, 6, 16), bool], Tensor[(768), int8], Tensor[(9, 6, 16), float64]) {
  %1020 = @func_3552() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1021 = %1020.0;
  %1022 = cast(meta[relay.Constant][43] /* ty=Tensor[(768), int8] */, dtype="int8") /* ty=Tensor[(768), int8] */;
  %1023 = reshape(%1022, newshape=[8, 6, 16]) /* ty=Tensor[(8, 6, 16), int8] */;
  %1024 = @func_13253(%1023) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), uint64], Tensor[(9, 6, 16), int64], Tensor[(864), bool], Tensor[(1, 6, 16), float32]) */;
  %1025 = %1024.2;
  %1026 = cast(%1021, dtype="float64") /* ty=Tensor[(1, 6, 16), float64] */;
  %1027 = cast(%1025, dtype="float64") /* ty=Tensor[(9, 6, 16), float64] */;
  %1028 = @func_8559() /* ty=Tensor[(1, 6, 16), bool] */;
  %1029 = floor_divide(%1026, %1027) /* ty=Tensor[(9, 6, 16), float64] */;
  (%1028, meta[relay.Constant][43] /* ty=Tensor[(768), int8] */, %1029)
}

def @func_6664() -> (Tensor[(2, 6, 16), int32],) {
  %1030 = @func_1205() /* ty=Tensor[(2, 6, 16), int32] */;
  (%1030,)
}

def @func_15526(%var_15500: Tensor[(288), float32]) -> (Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) {
  %1031 = @func_5526() /* ty=(Tensor[(?, 6, 16), int8],) */;
  %1032 = cast(%var_15500, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1033 = reshape(%1032, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1034 = @func_14835(%1033) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 6), float32], Tensor[(288), float32], Tensor[(1, 6, 16), bool], Tensor[(390), float32]) */;
  %1035 = %1031.0;
  %1036 = %1034.5;
  (%1035, %1036, %var_15500)
}

def @func_14562() -> (Tensor[(936), float32], Tensor[(1, 6, 16), bool]) {
  %1037 = @func_5255() /* ty=(Tensor[(13, 5, 6), float32], Tensor[(936), float32]) */;
  %1038 = %1037.1;
  %1039 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
  (%1038, %1039)
}

def @func_3314(%var_3286: Tensor[(5, 9, 1), float32]) -> (Tensor[(5, 9, ?), int64],) {
  %1040 = cast(%var_3286, dtype="float32") /* ty=Tensor[(5, 9, 1), float32] */;
  %1041 = sigmoid(%1040) /* ty=Tensor[(5, 9, 1), float32] */;
  %1042 = cast(%var_3286, dtype="int64") /* ty=Tensor[(5, 9, 1), int64] */;
  %1043 = shape_of(%1041, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1044 = cast(%1041, dtype="int64") /* ty=Tensor[(5, 9, 1), int64] */;
  %1045 = dyn.reshape(%1042, %1043, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1046 = bitwise_and(%1044, %1045) /* ty=Tensor[(5, 9, ?), int64] */;
  (%1046,)
}

def @func_5824() -> (Tensor[(2, 6, 16), float64], Tensor[(2, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(13, 5, 6), float32]) {
  %1047 = @func_5655() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %1048 = %1047.0;
  %1049 = cast(%1048, dtype="float64") /* ty=Tensor[(2, 6, 16), float64] */;
  %1050 = @func_5655() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %1051 = %1050.0;
  %1052 = cast(%1051, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
  %1053 = shape_of(%1048, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1054 = cast(%1048, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
  %1055 = dyn.reshape(%1052, %1053, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1056 = @func_5255() /* ty=(Tensor[(13, 5, 6), float32], Tensor[(936), float32]) */;
  %1057 = rsqrt(%1049) /* ty=Tensor[(2, 6, 16), float64] */;
  %1058 = logical_or(%1054, %1055) /* ty=Tensor[(2, 6, 16), bool] */;
  %1059 = %1056.0;
  %1060 = @func_5070() /* ty=Tensor[(1, 6, 16), bool] */;
  %1061 = @func_3197() /* ty=Tensor[(13, 5, 6), float32] */;
  %1062 = @func_3197() /* ty=Tensor[(13, 5, 6), float32] */;
  (%1057, %1058, %1059, %1060, %1061, %1062)
}

def @func_1014() -> (Tensor[(1, 6, 16), float32],) {
  %1063 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1064 = %1063.0;
  (%1064,)
}

def @func_4087() -> Tensor[(1, 6, 16), float32] {
  %1065 = @func_2969() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %1065.0
}

def @func_8168() -> Tensor[(1, 6, 16), bool] {
  %1066 = @func_4115() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1066.0
}

def @func_14202() -> (Tensor[(2, 6, 16), float32], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(2, 6, 16), bool]) {
  %1067 = @func_4642() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), float64]) */;
  %1068 = %1067.1;
  %1069 = cast(%1068, dtype="float32") /* ty=Tensor[(2, 6, 16), float32] */;
  %1070 = cast(meta[relay.Constant][44] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1071 = reshape(%1070, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
  %1072 = @func_1883(%1071) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32]) */;
  %1073 = @func_3578() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool]) */;
  %1074 = sin(%1069) /* ty=Tensor[(2, 6, 16), float32] */;
  %1075 = %1072.1;
  %1076 = %1073.1;
  (%1074, %1075, meta[relay.Constant][44] /* ty=Tensor[(936), float32] */, %1076)
}

def @func_17197() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %1077 = @func_8963() /* ty=(Tensor[(2, 6, 16), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) */;
  %1078 = @func_8136() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1079 = %1077.3;
  %1080 = %1078.0;
  (%1079, %1080)
}

def @func_1205() -> Tensor[(2, 6, 16), int32] {
  @func_1038() /* ty=Tensor[(2, 6, 16), int32] */
}

def @func_12819() -> (Tensor[(2, 6, 16), int32],) {
  %1081 = @func_1205() /* ty=Tensor[(2, 6, 16), int32] */;
  (%1081,)
}

def @func_15809(%var_15805: Tensor[(288), float32]) -> (Tensor[(336), int32], Tensor[(1, 6, 16), float64], Tensor[(288), float32]) {
  %1082 = @func_7348() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(3, 16, 7), int32], Tensor[(336), int32]) */;
  %1083 = cast(%var_15805, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1084 = reshape(%1083, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1085 = @func_3419(%1084) /* ty=(Tensor[(192), bool], Tensor[(2, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32], Tensor[(1, 6, 16), float64]) */;
  %1086 = %1082.2;
  %1087 = %1085.5;
  (%1086, %1087, %var_15805)
}

def @func_12966() -> Tensor[(8, 6, 16), int8] {
  @func_11503() /* ty=Tensor[(8, 6, 16), int8] */
}

def @func_11518() -> Tensor[(1, 6, 16), bool] {
  %1088 = @func_2059() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %1088.1
}

def @func_13738(%var_13735: Tensor[(288), float32]) -> (Tensor[(2, 6, 16), float64], Tensor[(1, 6, 16), float64], Tensor[(288), float32]) {
  %1089 = cast(%var_13735, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1090 = reshape(%1089, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1091 = @func_2463(%1090) /* ty=(Tensor[(1, 6, 16), float64], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
  %1092 = @func_11029() /* ty=Tensor[(2, 6, 16), float64] */;
  %1093 = %1091.0;
  (%1092, %1093, %var_13735)
}

def @func_7429() -> (Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool]) {
  %1094 = @func_6664() /* ty=(Tensor[(2, 6, 16), int32],) */;
  %1095 = @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1096 = %1094.0;
  %1097 = %1095.0;
  (%1096, %1097)
}

def @func_9981() -> (Tensor[(390), float32],) {
  %1098 = @func_2885() /* ty=(Tensor[(390), float32], Tensor[(2, 6, 16), bool]) */;
  %1099 = %1098.0;
  (%1099,)
}

def @func_11503() -> Tensor[(8, 6, 16), int8] {
  %1100 = @func_6087() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(8, 6, 16), int8]) */;
  %1100.1
}

def @func_14377() -> (Tensor[(390), float32], Tensor[(1, 6, 16), bool]) {
  %1101 = @func_7184() /* ty=(Tensor[(192), bool], Tensor[(1, 6, 16), bool]) */;
  %1102 = @func_8453() /* ty=Tensor[(390), float32] */;
  %1103 = %1101.1;
  (%1102, %1103)
}

def @func_5105() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(288, 1), float32]) {
  %1104 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1105 = cast(meta[relay.Constant][45] /* ty=Tensor[(288, 1), float32] */, dtype="float32") /* ty=Tensor[(288, 1), float32] */;
  %1106 = reshape(%1105, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1107 = @func_3419(%1106) /* ty=(Tensor[(192), bool], Tensor[(2, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32], Tensor[(1, 6, 16), float64]) */;
  %1108 = %1104.0;
  %1109 = %1107.3;
  (%1108, %1109, meta[relay.Constant][45] /* ty=Tensor[(288, 1), float32] */)
}

def @func_6758() -> (Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(?, 6, 16), int8]) {
  %1110 = @func_3932() /* ty=(Tensor[(8, 6, 16), int8],) */;
  %1111 = @func_5526() /* ty=(Tensor[(?, 6, 16), int8],) */;
  %1112 = @func_5974() /* ty=Tensor[(1, 6, 16), bool] */;
  %1113 = %1110.0;
  %1114 = %1111.0;
  (%1112, %1113, %1114)
}

def @func_12288() -> (Tensor[(1, 6, 16), float32],) {
  %1115 = @func_7467() /* ty=Tensor[(1, 6, 16), float32] */;
  (%1115,)
}

def @func_11709() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), bool], Tensor[(936), float32]) {
  %1116 = @func_10149() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1117 = @func_5105() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(288, 1), float32]) */;
  %1118 = @func_2444() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %1119 = @func_8615() /* ty=(Tensor[(936), float32],) */;
  %1120 = %1116.0;
  %1121 = %1117.0;
  %1122 = %1118.0;
  %1123 = %1119.0;
  (%1120, %1121, %1122, %1123)
}

def @func_6925() -> (Tensor[(2, 6, 16), bool],) {
  %1124 = @func_2444() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %1125 = %1124.0;
  (%1125,)
}

def @func_13574() -> (Tensor[(1, 6, 16), float32],) {
  %1126 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1127 = %1126.0;
  (%1127,)
}

def @func_8615() -> (Tensor[(936), float32],) {
  %1128 = @func_5255() /* ty=(Tensor[(13, 5, 6), float32], Tensor[(936), float32]) */;
  %1129 = %1128.1;
  (%1129,)
}

def @func_1692() -> (Tensor[(1, 6, 16), bool],) {
  %1130 = @func_1136() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %1131 = %1130.0;
  (%1131,)
}

def @func_7348() -> (Tensor[(2, 6, 16), bool], Tensor[(3, 16, 7), int32], Tensor[(336), int32]) {
  %1132 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %1133 = cast(meta[relay.Constant][46] /* ty=Tensor[(336), int32] */, dtype="int32") /* ty=Tensor[(336), int32] */;
  %1134 = reshape(%1133, newshape=[336]) /* ty=Tensor[(336), int32] */;
  %1135 = @func_6298(%1134) /* ty=(Tensor[(2, 6, 16), bool], Tensor[(3, 16, 7), int32], Tensor[(7, 1), int32], Tensor[(336), int32]) */;
  %1136 = %1132.0;
  %1137 = %1135.1;
  (%1136, %1137, meta[relay.Constant][46] /* ty=Tensor[(336), int32] */)
}

def @func_11408(%var_11369: Tensor[(2, 1, 6), float64]) -> (Tensor[(2, 1, 6), float64], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32]) {
  %1138 = cast(%var_11369, dtype="float64") /* ty=Tensor[(2, 1, 6), float64] */;
  %1139 = @func_1136() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %1140 = @func_10694() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1141 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1142 = @func_5928() /* ty=(Tensor[(2, 6, 16), int32],) */;
  %1143 = log(%1138) /* ty=Tensor[(2, 1, 6), float64] */;
  %1144 = %1139.2;
  %1145 = %1140.0;
  %1146 = %1141.0;
  %1147 = %1142.0;
  (%1143, %1144, %1145, %1146, %1147)
}

def @func_6685() -> (Tensor[(15, 6, 16), bool],) {
  %1148 = @func_990() /* ty=(Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) */;
  %1149 = %1148.0;
  %1150 = cast(%1149, dtype="bool") /* ty=Tensor[(?, 6, 16), bool] */;
  %1151 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 6, 16), int64] */, dtype="bool") /* ty=Tensor[(15, 6, 16), bool] */;
  %1152 = logical_and(%1150, %1151) /* ty=Tensor[(15, 6, 16), bool] */;
  (%1152,)
}

def @func_15762() -> Tensor[(1, 6, 16), float32] {
  %1153 = @func_8744() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */;
  %1153.0
}

def @func_5026() -> (Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) {
  %1154 = @func_3672() /* ty=(Tensor[(?, 6, 16), int8],) */;
  %1155 = %1154.0;
  %1156 = @func_3258() /* ty=Tensor[(1, 6, 16), bool] */;
  (%1155, %1156)
}

def @func_5887() -> (Tensor[(1, 6, 16), float32],) {
  %1157 = @func_2173() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1158 = %1157.0;
  (%1158,)
}

def @func_3338() -> Tensor[(1, 6, 16), bool] {
  %1159 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1159.0
}

def @func_1038() -> Tensor[(2, 6, 16), int32] {
  %1160 = @func_990() /* ty=(Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) */;
  %1160.1
}

def @func_8708() -> Tensor[(1, 6, 16), bool] {
  @func_1056() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_10378() -> (Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) {
  %1161 = @func_5526() /* ty=(Tensor[(?, 6, 16), int8],) */;
  %1162 = %1161.0;
  %1163 = @func_1697() /* ty=Tensor[(1, 6, 16), bool] */;
  (%1162, %1163)
}

def @func_899(%var_889: Tensor[(3, 6, 16), float32]) -> (Tensor[(1, 6, 16), bool], Tensor[(3, 6, 16), bool]) {
  %1164 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1165 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1166 = %1165.0;
  %1167 = cast(%1166, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %1168 = cast(%var_889, dtype="bool") /* ty=Tensor[(3, 6, 16), bool] */;
  %1169 = %1164.0;
  %1170 = less(%1167, %1168) /* ty=Tensor[(3, 6, 16), bool] */;
  (%1169, %1170)
}

def @func_13253(%var_13219: Tensor[(8, 6, 16), int8]) -> (Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), uint64], Tensor[(9, 6, 16), int64], Tensor[(864), bool], Tensor[(1, 6, 16), float32]) {
  %1171 = @func_3932() /* ty=(Tensor[(8, 6, 16), int8],) */;
  %1172 = %1171.0;
  %1173 = cast(%var_13219, dtype="uint64") /* ty=Tensor[(8, 6, 16), uint64] */;
  %1174 = shape_of(%1172, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1175 = cast(%1172, dtype="uint64") /* ty=Tensor[(8, 6, 16), uint64] */;
  %1176 = dyn.reshape(%1173, %1174, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1177 = multiply(%1175, %1176) /* ty=Tensor[(8, 6, 16), uint64] */;
  %1178 = cast(%1172, dtype="uint64") /* ty=Tensor[(8, 6, 16), uint64] */;
  %1179 = shape_of(%1177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1180 = cast(%1177, dtype="uint64") /* ty=Tensor[(8, 6, 16), uint64] */;
  %1181 = dyn.reshape(%1178, %1179, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1182 = cast(meta[relay.Constant][48] /* ty=Tensor[(864), bool] */, dtype="bool") /* ty=Tensor[(864), bool] */;
  %1183 = reshape(%1182, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), bool] */;
  %1184 = @func_10554(%1183) /* ty=(Tensor[(9, 6, 16), int64],) */;
  %1185 = @func_11908() /* ty=(Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %1186 = @func_10239() /* ty=Tensor[(1, 6, 16), bool] */;
  %1187 = bitwise_xor(%1180, %1181) /* ty=Tensor[(8, 6, 16), uint64] */;
  %1188 = %1184.0;
  %1189 = %1185.2;
  (%1186, %1187, %1188, meta[relay.Constant][48] /* ty=Tensor[(864), bool] */, %1189)
}

def @func_14835(%var_14795: Tensor[(288), float32]) -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 6), float32], Tensor[(288), float32], Tensor[(1, 6, 16), bool], Tensor[(390), float32]) {
  %1190 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1191 = @func_5216() /* ty=(Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %1192 = @func_4753() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1193 = cast(%var_14795, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1194 = reshape(%1193, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), float32] */;
  %1195 = @func_2194(%1194) /* ty=(Tensor[(8, 6, 6), float32],) */;
  %1196 = @func_8864() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1197 = @func_2885() /* ty=(Tensor[(390), float32], Tensor[(2, 6, 16), bool]) */;
  %1198 = %1190.0;
  %1199 = %1191.1;
  %1200 = %1192.0;
  %1201 = %1195.0;
  %1202 = %1196.0;
  %1203 = %1197.0;
  (%1198, %1199, %1200, %1201, %var_14795, %1202, %1203)
}

def @func_8025() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %1204 = @func_6509() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %1205 = @func_2983() /* ty=Tensor[(2, 6, 16), bool] */;
  %1206 = %1204.1;
  (%1205, %1206)
}

def @func_10326(%var_10315: Tensor[(4, 390), bool]) -> (Tensor[(4, 390), float64], Tensor[(1, 6, 16), float32]) {
  %1207 = @func_8209() /* ty=Tensor[(4, 390), bool] */;
  %1208 = cast(%var_10315, dtype="float64") /* ty=Tensor[(4, 390), float64] */;
  %1209 = shape_of(%1207, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1210 = cast(%1207, dtype="float64") /* ty=Tensor[(4, 390), float64] */;
  %1211 = dyn.reshape(%1208, %1209, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1212 = @func_8504() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */;
  %1213 = divide(%1210, %1211) /* ty=Tensor[(4, 390), float64] */;
  %1214 = %1212.0;
  (%1213, %1214)
}

def @func_12235() -> (Tensor[(390), float32],) {
  %1215 = @func_2840() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(192), bool], Tensor[(390), float32]) */;
  %1216 = %1215.2;
  (%1216,)
}

def @func_2097() -> (Tensor[(1, 6, 16), bool], Tensor[(390), float32]) {
  %1217 = @func_1692() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1218 = @func_1375() /* ty=(Tensor[(390), float32],) */;
  %1219 = %1217.0;
  %1220 = %1218.0;
  (%1219, %1220)
}

def @func_14074() -> Tensor[(?, 6, 16), int8] {
  %1221 = @func_10378() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) */;
  %1221.0
}

def @func_5928() -> (Tensor[(2, 6, 16), int32],) {
  %1222 = @func_1205() /* ty=Tensor[(2, 6, 16), int32] */;
  (%1222,)
}

def @func_3903() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %1223 = @func_1038() /* ty=Tensor[(2, 6, 16), int32] */;
  %1224 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 6, 16), int32] */, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
  %1225 = shape_of(%1223, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1226 = cast(%1223, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
  %1227 = dyn.reshape(%1224, %1225, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1228 = @func_907() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1229 = not_equal(%1226, %1227) /* ty=Tensor[(2, 6, 16), bool] */;
  %1230 = %1228.0;
  (%1229, %1230)
}

def @func_9607() -> (Tensor[(?, 6, 16), uint16],) {
  %1231 = @func_2173() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1232 = %1231.0;
  %1233 = @func_1056() /* ty=Tensor[(1, 6, 16), bool] */;
  %1234 = cast(%1233, dtype="uint16") /* ty=Tensor[(1, 6, 16), uint16] */;
  %1235 = shape_of(%1232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1236 = cast(%1232, dtype="uint16") /* ty=Tensor[(1, 6, 16), uint16] */;
  %1237 = dyn.reshape(%1234, %1235, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1238 = bitwise_or(%1236, %1237) /* ty=Tensor[(?, 6, 16), uint16] */;
  (%1238,)
}

def @func_3419(%var_3413: Tensor[(288), float32]) -> (Tensor[(192), bool], Tensor[(2, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32], Tensor[(1, 6, 16), float64]) {
  %1239 = @func_3230() /* ty=(Tensor[(192), bool],) */;
  %1240 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1241 = %1240.0;
  %1242 = cast(%1241, dtype="float64") /* ty=Tensor[(1, 6, 16), float64] */;
  %1243 = atan(%1242) /* ty=Tensor[(1, 6, 16), float64] */;
  %1244 = cast(%1243, dtype="float32") /* ty=Tensor[(1, 6, 16), float32] */;
  %1245 = cast(meta[relay.Constant][50] /* ty=Tensor[(2, 6, 16), float64] */, dtype="float32") /* ty=Tensor[(2, 6, 16), float32] */;
  %1246 = cast(%var_3413, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1247 = reshape(%1246, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1248 = @func_1419(%1247) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
  %1249 = cast(%var_3413, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1250 = reshape(%1249, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1251 = @func_2463(%1250) /* ty=(Tensor[(1, 6, 16), float64], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
  %1252 = %1239.0;
  %1253 = floor_mod(%1244, %1245) /* ty=Tensor[(2, 6, 16), float32] */;
  %1254 = @func_1056() /* ty=Tensor[(1, 6, 16), bool] */;
  %1255 = %1248.0;
  %1256 = %1251.0;
  (%1252, %1253, %1254, %1255, %var_3413, %1256)
}

def @func_8744() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  %1257 = @func_5887() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1258 = @func_3739() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1259 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1260 = %1257.0;
  %1261 = %1258.0;
  %1262 = %1259.0;
  (%1260, %1261, %1262)
}

def @func_2698() -> (Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32]) {
  %1263 = @func_907() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1264 = cast(meta[relay.Constant][51] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1265 = reshape(%1264, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %1266 = @func_1918(%1265) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(1, 6, 16), float32]) */;
  %1267 = %1263.0;
  %1268 = %1266.1;
  (%1267, %1268, meta[relay.Constant][51] /* ty=Tensor[(936), float32] */)
}

def @func_5070() -> Tensor[(1, 6, 16), bool] {
  %1269 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1269.0
}

def @func_580() -> Tensor[(1, 6, 16), bool] {
  %1270 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1270.0
}

def @func_15449(%var_15434: Tensor[(15, 6, 16), bool]) -> (Tensor[(15, 6, 16), uint32],) {
  %1271 = @func_11067() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1272 = %1271.0;
  %1273 = cast(%1272, dtype="uint32") /* ty=Tensor[(1, 6, 16), uint32] */;
  %1274 = cast(%var_15434, dtype="uint32") /* ty=Tensor[(15, 6, 16), uint32] */;
  %1275 = minimum(%1273, %1274) /* ty=Tensor[(15, 6, 16), uint32] */;
  (%1275,)
}

def @func_17715() -> (Tensor[(8, 6, 16), int8], Tensor[(1, 390), float32]) {
  %1276 = @func_7739() /* ty=(Tensor[(8, 6, 16), int8],) */;
  %1277 = @func_3177() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) */;
  %1278 = %1276.0;
  %1279 = %1277.1;
  (%1278, %1279)
}

def @func_10586() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  %1280 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %1281 = @func_8744() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */;
  %1282 = %1280.0;
  %1283 = %1281.1;
  (%1282, %1283)
}

def @func_8136() -> (Tensor[(1, 6, 16), bool],) {
  %1284 = @func_1692() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1285 = %1284.0;
  (%1285,)
}

def @func_9301(%var_9281: float32) -> (Tensor[(14, 16, 10), float32], Tensor[(1, 6, 16), bool]) {
  %1286 = cast(%var_9281, dtype="float32") /* ty=float32 */;
  %1287 = cast(meta[relay.Constant][52] /* ty=Tensor[(14, 16, 10), float32] */, dtype="float32") /* ty=Tensor[(14, 16, 10), float32] */;
  %1288 = @func_9024() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1289 = floor_divide(%1286, %1287) /* ty=Tensor[(14, 16, 10), float32] */;
  %1290 = %1288.0;
  (%1289, %1290)
}

def @func_6298(%var_6295: Tensor[(336), int32]) -> (Tensor[(2, 6, 16), bool], Tensor[(3, 16, 7), int32], Tensor[(7, 1), int32], Tensor[(336), int32]) {
  %1291 = @func_5655() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %1292 = cast(meta[relay.Constant][53] /* ty=Tensor[(7, 1), int32] */, dtype="int32") /* ty=Tensor[(7, 1), int32] */;
  %1293 = cast(%var_6295, dtype="int32") /* ty=Tensor[(336), int32] */;
  %1294 = reshape(%1292, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), int32] */;
  %1295 = reshape(%1293, newshape=[3, 16, 7]) /* ty=Tensor[(3, 16, 7), int32] */;
  %1296 = @func_5333(%1294, %1295) /* ty=(Tensor[(3, 16, 7), int32],) */;
  %1297 = %1291.0;
  %1298 = %1296.0;
  (%1297, %1298, meta[relay.Constant][53] /* ty=Tensor[(7, 1), int32] */, %var_6295)
}

def @func_1949() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %1299 = @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1300 = @func_1697() /* ty=Tensor[(1, 6, 16), bool] */;
  %1301 = %1299.0;
  (%1300, %1301)
}

def @func_11802() -> (Tensor[(1, 6, 16), bool],) {
  %1302 = @func_10078() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1303 = %1302.0;
  (%1303,)
}

def @func_6476() -> Tensor[(2, 6, 16), float64] {
  %1304 = @func_5392() /* ty=Tensor[(2, 6, 16), bool] */;
  %1305 = cast(%1304, dtype="float64") /* ty=Tensor[(2, 6, 16), float64] */;
  sigmoid(%1305) /* ty=Tensor[(2, 6, 16), float64] */
}

def @func_5216() -> (Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) {
  %1306 = @func_1375() /* ty=(Tensor[(390), float32],) */;
  %1307 = cast(meta[relay.Constant][54] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1308 = reshape(%1307, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
  %1309 = @func_1883(%1308) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32]) */;
  %1310 = %1306.0;
  %1311 = %1309.0;
  (%1310, %1311, meta[relay.Constant][54] /* ty=Tensor[(936), float32] */)
}

def @func_10857() -> (Tensor[(1, 6, 16), bool],) {
  %1312 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1313 = %1312.0;
  (%1313,)
}

def @func_8873(%var_8867: Tensor[(11, 7, 16), float64]) -> (Tensor[(11, 7, 16), float64],) {
  %1314 = cast(%var_8867, dtype="float64") /* ty=Tensor[(11, 7, 16), float64] */;
  %1315 = cosh(%1314) /* ty=Tensor[(11, 7, 16), float64] */;
  (%1315,)
}

def @func_3932() -> (Tensor[(8, 6, 16), int8],) {
  %1316 = @func_1692() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1317 = %1316.0;
  %1318 = cast(%1317, dtype="int8") /* ty=Tensor[(1, 6, 16), int8] */;
  %1319 = cast(meta[relay.Constant][55] /* ty=Tensor[(8, 6, 16), bool] */, dtype="int8") /* ty=Tensor[(8, 6, 16), int8] */;
  %1320 = add(%1318, %1319) /* ty=Tensor[(8, 6, 16), int8] */;
  (%1320,)
}

def @func_10078() -> (Tensor[(1, 6, 16), bool],) {
  %1321 = @func_7184() /* ty=(Tensor[(192), bool], Tensor[(1, 6, 16), bool]) */;
  %1322 = %1321.1;
  (%1322,)
}

def @func_13179() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  %1323 = @func_12106() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1324 = @func_11908() /* ty=(Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %1325 = @func_6509() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %1326 = %1323.0;
  %1327 = %1324.2;
  %1328 = %1325.1;
  (%1326, %1327, %1328)
}

def @func_8313() -> (Tensor[(13, 5, 6), float32],) {
  %1329 = @func_5255() /* ty=(Tensor[(13, 5, 6), float32], Tensor[(936), float32]) */;
  %1330 = %1329.0;
  (%1330,)
}

def @func_5392() -> Tensor[(2, 6, 16), bool] {
  %1331 = @func_3578() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool]) */;
  %1331.1
}

def @func_11783() -> Tensor[(1, 390), float32] {
  %1332 = @func_2558() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 390), float32]) */;
  %1332.2
}

def @func_3792(%var_3765: Tensor[(4, 12, 9), uint32]) -> (Tensor[(390), float32], Tensor[(4, 12, 9), float32]) {
  %1333 = @func_1375() /* ty=(Tensor[(390), float32],) */;
  %1334 = cast(meta[relay.Constant][56] /* ty=Tensor[(4, 12, 9), uint32] */, dtype="uint32") /* ty=Tensor[(4, 12, 9), uint32] */;
  %1335 = shape_of(%var_3765, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1336 = cast(%var_3765, dtype="uint32") /* ty=Tensor[(4, 12, 9), uint32] */;
  %1337 = dyn.reshape(%1334, %1335, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1338 = maximum(%1336, %1337) /* ty=Tensor[(4, 12, 9), uint32] */;
  %1339 = cast(%1338, dtype="float64") /* ty=Tensor[(4, 12, 9), float64] */;
  %1340 = acos(%1339) /* ty=Tensor[(4, 12, 9), float64] */;
  %1341 = cast(%1340, dtype="float32") /* ty=Tensor[(4, 12, 9), float32] */;
  %1342 = %1333.0;
  %1343 = log2(%1341) /* ty=Tensor[(4, 12, 9), float32] */;
  (%1342, %1343)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3260() -> Tensor[(1, 6, 16), bool] {
  @func_3258() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_5657() -> (Tensor[(2, 6, 16), bool],) {
  @func_5655() /* ty=(Tensor[(2, 6, 16), bool],) */
}

def @func_3349() -> Tensor[(1, 6, 16), bool] {
  %0 = @func_1692() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %0.0
}

def @func_8372() -> Tensor[(1, 6, 16), float32] {
  %2 = fn () -> Tensor[(1, 6, 16), float32] {
    %1 = @func_6569() /* ty=(Tensor[(1, 6, 16), float32],) */;
    %1.0
  };
  %2() /* ty=Tensor[(1, 6, 16), float32] */
}

def @func_10379() -> (Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) {
  %6 = fn () -> (Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) {
    %3 = @func_5526() /* ty=(Tensor[(?, 6, 16), int8],) */;
    %4 = %3.0;
    %5 = @func_1697() /* ty=Tensor[(1, 6, 16), bool] */;
    (%4, %5)
  };
  %6() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) */
}

def @func_17034(%var_17032: Tensor[(1440), bool]) -> (Tensor[(936), float32], Tensor[(15, 6, 16), uint32], Tensor[(1440), bool], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool]) {
  @func_17031(%var_17032) /* ty=(Tensor[(936), float32], Tensor[(15, 6, 16), uint32], Tensor[(1440), bool], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool]) */
}

def @func_5975() -> Tensor[(1, 6, 16), bool] {
  %8 = fn () -> Tensor[(1, 6, 16), bool] {
    %7 = @func_1949() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %7.1
  };
  %8() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_901(%var_900: Tensor[(3, 6, 16), float32]) -> (Tensor[(1, 6, 16), bool], Tensor[(3, 6, 16), bool]) {
  %16 = fn (%var_889: Tensor[(3, 6, 16), float32]) -> (Tensor[(1, 6, 16), bool], Tensor[(3, 6, 16), bool]) {
    %9 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %10 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
    %11 = %10.0;
    %12 = cast(%11, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
    %13 = cast(%var_889, dtype="bool") /* ty=Tensor[(3, 6, 16), bool] */;
    %14 = %9.0;
    %15 = less(%12, %13) /* ty=Tensor[(3, 6, 16), bool] */;
    (%14, %15)
  };
  %16(%var_900) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(3, 6, 16), bool]) */
}

def @func_1886(%var_1884: Tensor[(13, 8, 9), float32]) -> (Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32]) {
  @func_1883(%var_1884) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32]) */
}

def @func_2558() -> (Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 390), float32]) {
  %17 = @func_1620() /* ty=(Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(?, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
  %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 390), float32] */, dtype="float32") /* ty=Tensor[(1, 390), float32] */;
  %19 = reshape(%18, newshape=[13, 5, 6]) /* ty=Tensor[(13, 5, 6), float32] */;
  %20 = @func_746(%19) /* ty=(Tensor[(13, 5, 6), float32],) */;
  %21 = %17.5;
  %22 = %20.0;
  (%21, %22, meta[relay.Constant][0] /* ty=Tensor[(1, 390), float32] */)
}

def @func_7043(%var_7042: Tensor[(7, 6, 16), bool]) -> (Tensor[(7, 6, 16), bool],) {
  %27 = fn (%var_7033: Tensor[(7, 6, 16), bool]) -> (Tensor[(7, 6, 16), bool],) {
    %23 = @func_1728() /* ty=Tensor[(1, 6, 16), bool] */;
    %24 = cast(%23, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
    %25 = cast(%var_7033, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
    %26 = greater(%24, %25) /* ty=Tensor[(7, 6, 16), bool] */;
    (%26,)
  };
  %27(%var_7042) /* ty=(Tensor[(7, 6, 16), bool],) */
}

def @func_7866() -> (Tensor[(8, 6, 16), int8], Tensor[(288, 1), float32], Tensor[(1, 6, 16), bool], Tensor[(15, 6, 16), bool]) {
  @func_7864() /* ty=(Tensor[(8, 6, 16), int8], Tensor[(288, 1), float32], Tensor[(1, 6, 16), bool], Tensor[(15, 6, 16), bool]) */
}

def @func_1205() -> Tensor[(2, 6, 16), int32] {
  @func_1038() /* ty=Tensor[(2, 6, 16), int32] */
}

def @func_5217() -> (Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) {
  %34 = fn () -> (Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) {
    %28 = @func_1375() /* ty=(Tensor[(390), float32],) */;
    %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
    %30 = reshape(%29, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
    %31 = @func_1883(%30) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32]) */;
    %32 = %28.0;
    %33 = %31.0;
    (%32, %33, meta[relay.Constant][1] /* ty=Tensor[(936), float32] */)
  };
  %34() /* ty=(Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */
}

def @func_13794() -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32]) {
  %38 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32]) {
    %35 = @func_990() /* ty=(Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) */;
    %36 = @func_1728() /* ty=Tensor[(1, 6, 16), bool] */;
    %37 = %35.1;
    (%36, %37)
  };
  %38() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32]) */
}

def @func_15374(%var_15372: uint16) -> (Tensor[(2, 6, 16), float64], Tensor[(5, 11, 14), uint16], uint16, Tensor[(15, 6, 16), bool], Tensor[(9, 3, 9), float64], Tensor[(192), bool], Tensor[(390), float32], Tensor[(1, 6, 16), bool]) {
  @func_15371(%var_15372) /* ty=(Tensor[(2, 6, 16), float64], Tensor[(5, 11, 14), uint16], uint16, Tensor[(15, 6, 16), bool], Tensor[(9, 3, 9), float64], Tensor[(192), bool], Tensor[(390), float32], Tensor[(1, 6, 16), bool]) */
}

def @func_14349() -> Tensor[(8, 6, 16), int8] {
  @func_11503() /* ty=Tensor[(8, 6, 16), int8] */
}

def @func_3339() -> Tensor[(1, 6, 16), bool] {
  %40 = fn () -> Tensor[(1, 6, 16), bool] {
    %39 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %39.0
  };
  %40() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_10588() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  @func_10586() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) */
}

def @func_2194(%var_2175: Tensor[(8, 6, 6), float32]) -> (Tensor[(8, 6, 6), float32],) {
  %41 = cast(%var_2175, dtype="float32") /* ty=Tensor[(8, 6, 6), float32] */;
  %42 = sin(%41) /* ty=Tensor[(8, 6, 6), float32] */;
  (%42,)
}

def @func_5512() -> (Tensor[(8, 6, 16), int8],) {
  %43 = @func_3932() /* ty=(Tensor[(8, 6, 16), int8],) */;
  %44 = %43.0;
  (%44,)
}

def @func_12383() -> Tensor[(2, 6, 16), bool] {
  %45 = fn () -> Tensor[(2, 6, 16), bool] {
    @func_2983() /* ty=Tensor[(2, 6, 16), bool] */
  };
  %45() /* ty=Tensor[(2, 6, 16), bool] */
}

def @func_6390() -> (Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  @func_6388() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */
}

def @func_9304(%var_9302: float32) -> (Tensor[(14, 16, 10), float32], Tensor[(1, 6, 16), bool]) {
  @func_9301(%var_9302) /* ty=(Tensor[(14, 16, 10), float32], Tensor[(1, 6, 16), bool]) */
}

def @func_11579() -> Tensor[(390), float32] {
  @func_11577() /* ty=Tensor[(390), float32] */
}

def @func_4473(%var_4471: Tensor[(288), float32]) -> (Tensor[(2, 6, 16), int32], Tensor[(16, 6, 16), bool], Tensor[(1536), bool], Tensor[(2, 6, 16), int32], Tensor[(1, 390), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float64], Tensor[(288), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  @func_4470(%var_4471) /* ty=(Tensor[(2, 6, 16), int32], Tensor[(16, 6, 16), bool], Tensor[(1536), bool], Tensor[(2, 6, 16), int32], Tensor[(1, 390), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float64], Tensor[(288), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */
}

def @func_6476() -> Tensor[(2, 6, 16), float64] {
  %46 = @func_5392() /* ty=Tensor[(2, 6, 16), bool] */;
  %47 = cast(%46, dtype="float64") /* ty=Tensor[(2, 6, 16), float64] */;
  sigmoid(%47) /* ty=Tensor[(2, 6, 16), float64] */
}

def @func_2197(%var_2195: Tensor[(8, 6, 6), float32]) -> (Tensor[(8, 6, 6), float32],) {
  @func_2194(%var_2195) /* ty=(Tensor[(8, 6, 6), float32],) */
}

def @func_6300(%var_6299: Tensor[(336), int32]) -> (Tensor[(2, 6, 16), bool], Tensor[(3, 16, 7), int32], Tensor[(7, 1), int32], Tensor[(336), int32]) {
  %56 = fn (%var_6295: Tensor[(336), int32]) -> (Tensor[(2, 6, 16), bool], Tensor[(3, 16, 7), int32], Tensor[(7, 1), int32], Tensor[(336), int32]) {
    %48 = @func_5655() /* ty=(Tensor[(2, 6, 16), bool],) */;
    %49 = cast(meta[relay.Constant][2] /* ty=Tensor[(7, 1), int32] */, dtype="int32") /* ty=Tensor[(7, 1), int32] */;
    %50 = cast(%var_6295, dtype="int32") /* ty=Tensor[(336), int32] */;
    %51 = reshape(%49, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), int32] */;
    %52 = reshape(%50, newshape=[3, 16, 7]) /* ty=Tensor[(3, 16, 7), int32] */;
    %53 = @func_5333(%51, %52) /* ty=(Tensor[(3, 16, 7), int32],) */;
    %54 = %48.0;
    %55 = %53.0;
    (%54, %55, meta[relay.Constant][2] /* ty=Tensor[(7, 1), int32] */, %var_6295)
  };
  %56(%var_6299) /* ty=(Tensor[(2, 6, 16), bool], Tensor[(3, 16, 7), int32], Tensor[(7, 1), int32], Tensor[(336), int32]) */
}

def @func_13062(%var_13053: Tensor[(15, 6, 16), bool]) -> Tensor[(15, 6, 16), bool] {
  %57 = @func_12903() /* ty=Tensor[(1, 6, 16), bool] */;
  %58 = cast(%57, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %59 = cast(%var_13053, dtype="bool") /* ty=Tensor[(15, 6, 16), bool] */;
  less_equal(%58, %59) /* ty=Tensor[(15, 6, 16), bool] */
}

def @func_16699() -> (Tensor[(1, 6, 16), bool],) {
  %60 = @func_8708() /* ty=Tensor[(1, 6, 16), bool] */;
  (%60,)
}

def @func_5526() -> (Tensor[(?, 6, 16), int8],) {
  %61 = @func_3672() /* ty=(Tensor[(?, 6, 16), int8],) */;
  %62 = %61.0;
  (%62,)
}

def @func_8088() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %63 = @func_4115() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %64 = @func_3349() /* ty=Tensor[(1, 6, 16), bool] */;
  %65 = %63.0;
  (%64, %65)
}

def @func_16264() -> (Tensor[(1, 6, 16), float32], Tensor[(936), float32]) {
  @func_16262() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */
}

def @func_5392() -> Tensor[(2, 6, 16), bool] {
  %66 = @func_3578() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool]) */;
  %66.1
}

def @func_11784() -> Tensor[(1, 390), float32] {
  %68 = fn () -> Tensor[(1, 390), float32] {
    %67 = @func_2558() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 390), float32]) */;
    %67.2
  };
  %68() /* ty=Tensor[(1, 390), float32] */
}

def @func_8209() -> Tensor[(4, 390), bool] {
  %69 = @func_3177() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) */;
  %70 = %69.1;
  %71 = cast(%70, dtype="int64") /* ty=Tensor[(1, 390), int64] */;
  %72 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 390), float32] */, dtype="int64") /* ty=Tensor[(4, 390), int64] */;
  %73 = bitwise_xor(%71, %72) /* ty=Tensor[(4, 390), int64] */;
  %74 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 390), float32] */, dtype="bool") /* ty=Tensor[(4, 390), bool] */;
  %75 = shape_of(%73, dtype="int32") /* ty=Tensor[(2), int32] */;
  %76 = cast(%73, dtype="bool") /* ty=Tensor[(4, 390), bool] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  less(%76, %77) /* ty=Tensor[(4, 390), bool] */
}

def @func_3053(%var_3051: Tensor[(936), float32]) -> (Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  @func_3050(%var_3051) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) */
}

def @func_6886() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %82 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
    %78 = @func_3552() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %79 = @func_4753() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %80 = %78.0;
    %81 = %79.0;
    (%80, %81)
  };
  %82() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_3792(%var_3765: Tensor[(4, 12, 9), uint32]) -> (Tensor[(390), float32], Tensor[(4, 12, 9), float32]) {
  %83 = @func_1375() /* ty=(Tensor[(390), float32],) */;
  %84 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 12, 9), uint32] */, dtype="uint32") /* ty=Tensor[(4, 12, 9), uint32] */;
  %85 = shape_of(%var_3765, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%var_3765, dtype="uint32") /* ty=Tensor[(4, 12, 9), uint32] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %88 = maximum(%86, %87) /* ty=Tensor[(4, 12, 9), uint32] */;
  %89 = cast(%88, dtype="float64") /* ty=Tensor[(4, 12, 9), float64] */;
  %90 = acos(%89) /* ty=Tensor[(4, 12, 9), float64] */;
  %91 = cast(%90, dtype="float32") /* ty=Tensor[(4, 12, 9), float32] */;
  %92 = %83.0;
  %93 = log2(%91) /* ty=Tensor[(4, 12, 9), float32] */;
  (%92, %93)
}

def @func_7734(%var_7732: Tensor[(15, 3, 16), float64], %var_7733: Tensor[(15, 3, 16), float64]) -> (Tensor[(15, 3, 16), float64],) {
  %99 = fn (%var_7715: Tensor[(15, 3, 16), float64], %var_7716: Tensor[(15, 3, 16), float64]) -> (Tensor[(15, 3, 16), float64],) {
    %94 = cast(%var_7716, dtype="float64") /* ty=Tensor[(15, 3, 16), float64] */;
    %95 = shape_of(%var_7715, dtype="int32") /* ty=Tensor[(3), int32] */;
    %96 = cast(%var_7715, dtype="float64") /* ty=Tensor[(15, 3, 16), float64] */;
    %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %98 = floor_divide(%96, %97) /* ty=Tensor[(15, 3, 16), float64] */;
    (%98,)
  };
  %99(%var_7732, %var_7733) /* ty=(Tensor[(15, 3, 16), float64],) */
}

def @func_3795(%var_3793: Tensor[(4, 12, 9), uint32]) -> (Tensor[(390), float32], Tensor[(4, 12, 9), float32]) {
  @func_3792(%var_3793) /* ty=(Tensor[(390), float32], Tensor[(4, 12, 9), float32]) */
}

def @func_13262(%var_13259: Tensor[(15, 13, 8), float64]) -> Tensor[(15, 13, 8), float64] {
  %100 = cast(%var_13259, dtype="float64") /* ty=Tensor[(15, 13, 8), float64] */;
  cosh(%100) /* ty=Tensor[(15, 13, 8), float64] */
}

def @func_8268() -> Tensor[(2, 6, 16), bool] {
  %102 = fn () -> Tensor[(2, 6, 16), bool] {
    %101 = @func_2444() /* ty=(Tensor[(2, 6, 16), bool],) */;
    %101.0
  };
  %102() /* ty=Tensor[(2, 6, 16), bool] */
}

def @func_14487(%var_14486: Tensor[(1, 6, 16), bool]) -> (Tensor[(?, 6, 16), uint16], Tensor[(2, 6, 16), int32], Tensor[(1, 288), float32]) {
  %114 = fn (%var_14464: Tensor[(1, 6, 16), bool]) -> (Tensor[(?, 6, 16), uint16], Tensor[(2, 6, 16), int32], Tensor[(1, 288), float32]) {
    %103 = @func_1136() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %104 = %103.0;
    %105 = cast(%var_14464, dtype="uint16") /* ty=Tensor[(1, 6, 16), uint16] */;
    %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
    %107 = cast(%104, dtype="uint16") /* ty=Tensor[(1, 6, 16), uint16] */;
    %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %109 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 288), float32] */, dtype="float32") /* ty=Tensor[(1, 288), float32] */;
    %110 = reshape(%109, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %111 = @func_4470(%110) /* ty=(Tensor[(2, 6, 16), int32], Tensor[(16, 6, 16), bool], Tensor[(1536), bool], Tensor[(2, 6, 16), int32], Tensor[(1, 390), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float64], Tensor[(288), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
    %112 = bitwise_xor(%107, %108) /* ty=Tensor[(?, 6, 16), uint16] */;
    %113 = %111.3;
    (%112, %113, meta[relay.Constant][5] /* ty=Tensor[(1, 288), float32] */)
  };
  %114(%var_14486) /* ty=(Tensor[(?, 6, 16), uint16], Tensor[(2, 6, 16), int32], Tensor[(1, 288), float32]) */
}

def @func_10149() -> (Tensor[(1, 6, 16), bool],) {
  %115 = @func_8708() /* ty=Tensor[(1, 6, 16), bool] */;
  (%115,)
}

def @func_13990() -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), float64], Tensor[(40), float64], Tensor[(1, 6, 16), bool]) {
  @func_13988() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), float64], Tensor[(40), float64], Tensor[(1, 6, 16), bool]) */
}

def @func_17272() -> (Tensor[(2, 6, 16), bool],) {
  %116 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %117 = %116.0;
  (%117,)
}

def @func_10695() -> (Tensor[(1, 6, 16), bool],) {
  %120 = fn () -> (Tensor[(1, 6, 16), bool],) {
    %118 = @func_10149() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %119 = %118.0;
    (%119,)
  };
  %120() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_2433(%var_2431: Tensor[(8, 14, 12), float32]) -> (Tensor[(8, 14, 12), float32],) {
  @func_2430(%var_2431) /* ty=(Tensor[(8, 14, 12), float32],) */
}

def @func_8866() -> (Tensor[(1, 6, 16), bool],) {
  @func_8864() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_396() -> (Tensor[(1, 6, 16), bool],) {
  @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_7902() -> (Tensor[(1, 6, 16), float32],) {
  %123 = fn () -> (Tensor[(1, 6, 16), float32],) {
    %121 = @func_6722() /* ty=(Tensor[(1, 6, 16), float32],) */;
    %122 = %121.0;
    (%122,)
  };
  %123() /* ty=(Tensor[(1, 6, 16), float32],) */
}

def @func_10151() -> (Tensor[(1, 6, 16), bool],) {
  @func_10149() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_12903() -> Tensor[(1, 6, 16), bool] {
  %124 = @func_5305() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %124.0
}

def @func_7300(%var_7298: Tensor[(4, 2, 5), float64]) -> (Tensor[(4, 2, 5), float64],) {
  @func_7297(%var_7298) /* ty=(Tensor[(4, 2, 5), float64],) */
}

def @func_8617() -> (Tensor[(936), float32],) {
  @func_8615() /* ty=(Tensor[(936), float32],) */
}

def @func_1040() -> Tensor[(2, 6, 16), int32] {
  @func_1038() /* ty=Tensor[(2, 6, 16), int32] */
}

def @func_13896() -> (Tensor[(1, 6, 16), bool],) {
  @func_13894() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_9025() -> (Tensor[(1, 6, 16), bool],) {
  %126 = fn () -> (Tensor[(1, 6, 16), bool],) {
    %125 = @func_1697() /* ty=Tensor[(1, 6, 16), bool] */;
    (%125,)
  };
  %126() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_12727() -> (Tensor[(16, 10, 15), bool],) {
  %127 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 10, 15), float64] */, dtype="float64") /* ty=Tensor[(16, 10, 15), float64] */;
  %128 = acosh(%127) /* ty=Tensor[(16, 10, 15), float64] */;
  %129 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 10, 15), float64] */, dtype="bool") /* ty=Tensor[(16, 10, 15), bool] */;
  %130 = shape_of(%128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %131 = cast(%128, dtype="bool") /* ty=Tensor[(16, 10, 15), bool] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %133 = equal(%131, %132) /* ty=Tensor[(16, 10, 15), bool] */;
  (%133,)
}

def @func_6569() -> (Tensor[(1, 6, 16), float32],) {
  %134 = @func_2969() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %135 = %134.0;
  (%135,)
}

def @func_15449(%var_15434: Tensor[(15, 6, 16), bool]) -> (Tensor[(15, 6, 16), uint32],) {
  %136 = @func_11067() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %137 = %136.0;
  %138 = cast(%137, dtype="uint32") /* ty=Tensor[(1, 6, 16), uint32] */;
  %139 = cast(%var_15434, dtype="uint32") /* ty=Tensor[(15, 6, 16), uint32] */;
  %140 = minimum(%138, %139) /* ty=Tensor[(15, 6, 16), uint32] */;
  (%140,)
}

def @func_10925() -> (Tensor[(13, 5, 6), float32],) {
  @func_10923() /* ty=(Tensor[(13, 5, 6), float32],) */
}

def @func_5256() -> (Tensor[(13, 5, 6), float32], Tensor[(936), float32]) {
  %144 = fn () -> (Tensor[(13, 5, 6), float32], Tensor[(936), float32]) {
    %141 = @func_2969() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
    %142 = @func_3197() /* ty=Tensor[(13, 5, 6), float32] */;
    %143 = %141.3;
    (%142, %143)
  };
  %144() /* ty=(Tensor[(13, 5, 6), float32], Tensor[(936), float32]) */
}

def @func_15371(%var_15327: uint16) -> (Tensor[(2, 6, 16), float64], Tensor[(5, 11, 14), uint16], uint16, Tensor[(15, 6, 16), bool], Tensor[(9, 3, 9), float64], Tensor[(192), bool], Tensor[(390), float32], Tensor[(1, 6, 16), bool]) {
  %145 = @func_1292() /* ty=(Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), float64]) */;
  %146 = cast(%var_15327, dtype="uint16") /* ty=uint16 */;
  %147 = reshape(%146, newshape=[]) /* ty=uint16 */;
  %148 = @func_9828(%147) /* ty=(Tensor[(5, 11, 14), uint16], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool], Tensor[(13, 5, 6), float32]) */;
  %149 = %145.6;
  %150 = cast(%149, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
  %151 = cast(meta[relay.Constant][7] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
  %152 = reshape(%150, newshape=[192]) /* ty=Tensor[(192), bool] */;
  %153 = reshape(%151, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %154 = @func_1855(%152, %153) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(192), bool], Tensor[(2, 6, 16), int32]) */;
  %155 = @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %156 = %148.0;
  %157 = @func_12585() /* ty=Tensor[(15, 6, 16), bool] */;
  %158 = @func_14766() /* ty=Tensor[(9, 3, 9), float64] */;
  %159 = %154.2;
  %160 = %155.0;
  (%149, %156, %var_15327, %157, %158, %159, meta[relay.Constant][7] /* ty=Tensor[(390), float32] */, %160)
}

def @func_15712(%var_15710: Tensor[(8, 6, 16), int8]) -> (Tensor[(390), float32], Tensor[(8, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32], Tensor[(1, 6, 16), bool], Tensor[(?, 6, 16), bool], Tensor[(15, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(15, 6, 16), int64], Tensor[(1, 6, 16), float32]) {
  @func_15709(%var_15710) /* ty=(Tensor[(390), float32], Tensor[(8, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32], Tensor[(1, 6, 16), bool], Tensor[(?, 6, 16), bool], Tensor[(15, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(15, 6, 16), int64], Tensor[(1, 6, 16), float32]) */
}

def @func_2560() -> (Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 390), float32]) {
  @func_2558() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 390), float32]) */
}

def @func_15764() -> Tensor[(1, 6, 16), float32] {
  @func_15762() /* ty=Tensor[(1, 6, 16), float32] */
}

def @func_4116() -> (Tensor[(1, 6, 16), bool],) {
  %162 = fn () -> (Tensor[(1, 6, 16), bool],) {
    %161 = @func_3338() /* ty=Tensor[(1, 6, 16), bool] */;
    (%161,)
  };
  %162() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_1883(%var_1864: Tensor[(13, 8, 9), float32]) -> (Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32]) {
  %163 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %164 = cast(%var_1864, dtype="float32") /* ty=Tensor[(13, 8, 9), float32] */;
  %165 = atanh(%164) /* ty=Tensor[(13, 8, 9), float32] */;
  %166 = cast(%165, dtype="float32") /* ty=Tensor[(13, 8, 9), float32] */;
  %167 = %163.0;
  %168 = acos(%166) /* ty=Tensor[(13, 8, 9), float32] */;
  (%167, %168)
}

def @func_17198() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %173 = fn () -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
    %169 = @func_8963() /* ty=(Tensor[(2, 6, 16), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) */;
    %170 = @func_8136() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %171 = %169.3;
    %172 = %170.0;
    (%171, %172)
  };
  %173() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_5337(%var_5335: Tensor[(1, 1, 7), int32], %var_5336: Tensor[(3, 16, 7), int32]) -> (Tensor[(3, 16, 7), int32],) {
  @func_5333(%var_5335, %var_5336) /* ty=(Tensor[(3, 16, 7), int32],) */
}

def @func_394() -> (Tensor[(1, 6, 16), bool],) {
  %174 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %175 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 6, 16), bool] */, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %176 = logical_or(%174, %175) /* ty=Tensor[(1, 6, 16), bool] */;
  (%176,)
}

def @func_1698() -> Tensor[(1, 6, 16), bool] {
  %178 = fn () -> Tensor[(1, 6, 16), bool] {
    %177 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %177.0
  };
  %178() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_12820() -> (Tensor[(2, 6, 16), int32],) {
  %180 = fn () -> (Tensor[(2, 6, 16), int32],) {
    %179 = @func_1205() /* ty=Tensor[(2, 6, 16), int32] */;
    (%179,)
  };
  %180() /* ty=(Tensor[(2, 6, 16), int32],) */
}

def @func_8170() -> Tensor[(1, 6, 16), bool] {
  @func_8168() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_3351() -> Tensor[(1, 6, 16), bool] {
  @func_3349() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_12514() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  %189 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
    %181 = @func_5026() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) */;
    %182 = @func_2097() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(390), float32]) */;
    %183 = @func_11551() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %184 = @func_10939() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */;
    %185 = %181.1;
    %186 = %182.0;
    %187 = %183.0;
    %188 = %184.0;
    (%185, %186, %187, %188)
  };
  %189() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */
}

def @func_3552() -> (Tensor[(1, 6, 16), bool],) {
  %190 = @func_1728() /* ty=Tensor[(1, 6, 16), bool] */;
  (%190,)
}

def @func_17237(%var_17236: Tensor[(9, 40), float32]) -> (Tensor[(1, 6, 16), bool], Tensor[(9, 40), bool], Tensor[(9, 6, 16), int64], Tensor[(864), bool], Tensor[(1, 6, 16), float32]) {
  %203 = fn (%var_17223: Tensor[(9, 40), float32]) -> (Tensor[(1, 6, 16), bool], Tensor[(9, 40), bool], Tensor[(9, 6, 16), int64], Tensor[(864), bool], Tensor[(1, 6, 16), float32]) {
    %191 = @func_8025() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %192 = @func_16554() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(5, 4, 2), float32], Tensor[(1, 40), float32]) */;
    %193 = %192.3;
    %194 = cast(%193, dtype="bool") /* ty=Tensor[(1, 40), bool] */;
    %195 = cast(%var_17223, dtype="bool") /* ty=Tensor[(9, 40), bool] */;
    %196 = cast(meta[relay.Constant][9] /* ty=Tensor[(864), bool] */, dtype="bool") /* ty=Tensor[(864), bool] */;
    %197 = reshape(%196, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), bool] */;
    %198 = @func_10554(%197) /* ty=(Tensor[(9, 6, 16), int64],) */;
    %199 = %191.1;
    %200 = less_equal(%194, %195) /* ty=Tensor[(9, 40), bool] */;
    %201 = %198.0;
    %202 = @func_15762() /* ty=Tensor[(1, 6, 16), float32] */;
    (%199, %200, %201, meta[relay.Constant][9] /* ty=Tensor[(864), bool] */, %202)
  };
  %203(%var_17236) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(9, 40), bool], Tensor[(9, 6, 16), int64], Tensor[(864), bool], Tensor[(1, 6, 16), float32]) */
}

def @func_10681() -> (Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8]) {
  %204 = @func_6087() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(8, 6, 16), int8]) */;
  %205 = @func_8559() /* ty=Tensor[(1, 6, 16), bool] */;
  %206 = %204.1;
  (%205, %206)
}

def @func_2174() -> (Tensor[(1, 6, 16), float32],) {
  %211 = fn () -> (Tensor[(1, 6, 16), float32],) {
    %207 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
    %208 = %207.0;
    %209 = cast(%208, dtype="float32") /* ty=Tensor[(1, 6, 16), float32] */;
    %210 = log(%209) /* ty=Tensor[(1, 6, 16), float32] */;
    (%210,)
  };
  %211() /* ty=(Tensor[(1, 6, 16), float32],) */
}

def @func_8130() -> Tensor[(8, 6, 16), int8] {
  %213 = fn () -> Tensor[(8, 6, 16), int8] {
    %212 = @func_5512() /* ty=(Tensor[(8, 6, 16), int8],) */;
    %212.0
  };
  %213() /* ty=Tensor[(8, 6, 16), int8] */
}

def @func_3179() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) {
  @func_3177() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) */
}

def @func_9386() -> (Tensor[(2, 6, 16), bool],) {
  %216 = fn () -> (Tensor[(2, 6, 16), bool],) {
    %214 = @func_3903() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %215 = %214.0;
    (%215,)
  };
  %216() /* ty=(Tensor[(2, 6, 16), bool],) */
}

def @func_12878() -> Tensor[(2, 6, 16), float64] {
  @func_11029() /* ty=Tensor[(2, 6, 16), float64] */
}

def @func_1375() -> (Tensor[(390), float32],) {
  %217 = @func_1292() /* ty=(Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), float64]) */;
  %218 = %217.4;
  (%218,)
}

def @func_8168() -> Tensor[(1, 6, 16), bool] {
  %219 = @func_4115() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %219.0
}

def @func_3579() -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool]) {
  %224 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool]) {
    %220 = @func_2698() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32]) */;
    %221 = @func_2444() /* ty=(Tensor[(2, 6, 16), bool],) */;
    %222 = %220.0;
    %223 = %221.0;
    (%222, %223)
  };
  %224() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool]) */
}

def @func_2698() -> (Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32]) {
  %225 = @func_907() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %226 = cast(meta[relay.Constant][10] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %227 = reshape(%226, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %228 = @func_1918(%227) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(1, 6, 16), float32]) */;
  %229 = %225.0;
  %230 = %228.1;
  (%229, %230, meta[relay.Constant][10] /* ty=Tensor[(936), float32] */)
}

def @func_8211() -> Tensor[(4, 390), bool] {
  @func_8209() /* ty=Tensor[(4, 390), bool] */
}

def @func_11191(%var_11154: Tensor[(8, 11, 3), float64]) -> (Tensor[(8, 11, 3), float32], Tensor[(8, 11, 3), float64], Tensor[(2, 6, 16), bool]) {
  %231 = cast(%var_11154, dtype="float64") /* ty=Tensor[(8, 11, 3), float64] */;
  %232 = tan(%231) /* ty=Tensor[(8, 11, 3), float64] */;
  %233 = cast(%232, dtype="float32") /* ty=Tensor[(8, 11, 3), float32] */;
  %234 = cast(%232, dtype="float64") /* ty=Tensor[(8, 11, 3), float64] */;
  %235 = @func_9385() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %236 = sqrt(%233) /* ty=Tensor[(8, 11, 3), float32] */;
  %237 = asinh(%234) /* ty=Tensor[(8, 11, 3), float64] */;
  %238 = %235.0;
  (%236, %237, %238)
}

def @func_13132() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %245 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
    %239 = @func_2059() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
    %240 = @func_9235() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %241 = @func_3988() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %242 = %239.2;
    %243 = %240.0;
    %244 = %241.0;
    (%242, %243, %244)
  };
  %245() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_4815() -> Tensor[(1, 6, 16), bool] {
  %247 = fn () -> Tensor[(1, 6, 16), bool] {
    %246 = @func_1136() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %246.1
  };
  %247() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_12035() -> (Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(2, 6, 16), float64]) {
  %252 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(2, 6, 16), float64]) {
    %248 = @func_9206() /* ty=(Tensor[(13, 5, 6), float32], Tensor[(390), float32]) */;
    %249 = @func_1697() /* ty=Tensor[(1, 6, 16), bool] */;
    %250 = %248.0;
    %251 = @func_11029() /* ty=Tensor[(2, 6, 16), float64] */;
    (%249, %250, %251)
  };
  %252() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(2, 6, 16), float64]) */
}

def @func_6687() -> (Tensor[(15, 6, 16), bool],) {
  @func_6685() /* ty=(Tensor[(15, 6, 16), bool],) */
}

def @func_15211() -> (Tensor[(8, 6, 16), int8], Tensor[(2, 6, 16), int32], Tensor[(48, 4), bool], Tensor[(390), float32], Tensor[(2, 6, 16), bool]) {
  @func_15209() /* ty=(Tensor[(8, 6, 16), int8], Tensor[(2, 6, 16), int32], Tensor[(48, 4), bool], Tensor[(390), float32], Tensor[(2, 6, 16), bool]) */
}

def @func_15709(%var_15593: Tensor[(8, 6, 16), int8]) -> (Tensor[(390), float32], Tensor[(8, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32], Tensor[(1, 6, 16), bool], Tensor[(?, 6, 16), bool], Tensor[(15, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(15, 6, 16), int64], Tensor[(1, 6, 16), float32]) {
  %253 = @func_12235() /* ty=(Tensor[(390), float32],) */;
  %254 = @func_5026() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) */;
  %255 = %254.0;
  %256 = cast(%255, dtype="bool") /* ty=Tensor[(?, 6, 16), bool] */;
  %257 = cast(%var_15593, dtype="bool") /* ty=Tensor[(8, 6, 16), bool] */;
  %258 = @func_10149() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %259 = cast(meta[relay.Constant][11] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %260 = reshape(%259, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %261 = @func_3050(%260) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %262 = cast(meta[relay.Constant][11] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %263 = reshape(%262, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
  %264 = @func_4924(%263) /* ty=(Tensor[(13, 8, 9), uint32], Tensor[(?, 6, 16), bool]) */;
  %265 = @func_8088() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %266 = %265.1;
  %267 = cast(%266, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %268 = cast(meta[relay.Constant][12] /* ty=Tensor[(15, 6, 16), bool] */, dtype="bool") /* ty=Tensor[(15, 6, 16), bool] */;
  %269 = not_equal(%267, %268) /* ty=Tensor[(15, 6, 16), bool] */;
  %270 = @func_8504() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */;
  %271 = %270.1;
  %272 = cast(%269, dtype="bool") /* ty=Tensor[(15, 6, 16), bool] */;
  %273 = cast(%271, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %274 = @func_14429() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %275 = cast(meta[relay.Constant][12] /* ty=Tensor[(15, 6, 16), bool] */, dtype="int64") /* ty=Tensor[(15, 6, 16), int64] */;
  %276 = shape_of(%269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%269, dtype="int64") /* ty=Tensor[(15, 6, 16), int64] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %279 = @func_2969() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %280 = %253.0;
  %281 = less(%256, %257) /* ty=Tensor[(8, 6, 16), bool] */;
  %282 = %258.0;
  %283 = %261.2;
  %284 = @func_1056() /* ty=Tensor[(1, 6, 16), bool] */;
  %285 = %264.1;
  %286 = less(%272, %273) /* ty=Tensor[(15, 6, 16), bool] */;
  %287 = %274.0;
  %288 = bitwise_and(%277, %278) /* ty=Tensor[(15, 6, 16), int64] */;
  %289 = %279.2;
  (%280, %281, %282, %283, meta[relay.Constant][11] /* ty=Tensor[(936), float32] */, %284, %285, %286, %287, %288, %289)
}

def @func_7137() -> Tensor[(2, 6, 16), bool] {
  %290 = fn () -> Tensor[(2, 6, 16), bool] {
    @func_5392() /* ty=Tensor[(2, 6, 16), bool] */
  };
  %290() /* ty=Tensor[(2, 6, 16), bool] */
}

def @func_1918(%var_1891: Tensor[(936), float32]) -> (Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(1, 6, 16), float32]) {
  %291 = cast(%var_1891, dtype="float32") /* ty=Tensor[(936), float32] */;
  %292 = reshape(%291, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
  %293 = @func_1883(%292) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32]) */;
  %294 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %295 = @func_1728() /* ty=Tensor[(1, 6, 16), bool] */;
  %296 = %293.1;
  %297 = %294.0;
  (%295, %296, %var_1891, %297)
}

def @func_2969() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) {
  %298 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %299 = @func_907() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %300 = cast(meta[relay.Constant][13] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %301 = reshape(%300, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
  %302 = @func_1883(%301) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32]) */;
  %303 = %298.0;
  %304 = %299.0;
  %305 = %302.0;
  (%303, %304, %305, meta[relay.Constant][13] /* ty=Tensor[(936), float32] */)
}

def @func_2841() -> (Tensor[(2, 6, 16), bool], Tensor[(192), bool], Tensor[(390), float32]) {
  %314 = fn () -> (Tensor[(2, 6, 16), bool], Tensor[(192), bool], Tensor[(390), float32]) {
    %306 = @func_2444() /* ty=(Tensor[(2, 6, 16), bool],) */;
    %307 = %306.0;
    %308 = cast(%307, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
    %309 = cast(meta[relay.Constant][14] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
    %310 = reshape(%308, newshape=[192]) /* ty=Tensor[(192), bool] */;
    %311 = reshape(%309, newshape=[390]) /* ty=Tensor[(390), float32] */;
    %312 = @func_1855(%310, %311) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(192), bool], Tensor[(2, 6, 16), int32]) */;
    %313 = %312.6;
    (%307, %313, meta[relay.Constant][14] /* ty=Tensor[(390), float32] */)
  };
  %314() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(192), bool], Tensor[(390), float32]) */
}

def @func_3521(%var_3511: Tensor[(936), float32]) -> (Tensor[(?, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(936), float32]) {
  %315 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
  %316 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 6, 16), bool] */, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %317 = shape_of(%315, dtype="int32") /* ty=Tensor[(3), int32] */;
  %318 = cast(%315, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %320 = less(%318, %319) /* ty=Tensor[(?, 6, 16), bool] */;
  %321 = cast(%320, dtype="float32") /* ty=Tensor[(?, 6, 16), float32] */;
  %322 = cast(%var_3511, dtype="float32") /* ty=Tensor[(936), float32] */;
  %323 = reshape(%322, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %324 = @func_1918(%323) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(1, 6, 16), float32]) */;
  %325 = acosh(%321) /* ty=Tensor[(?, 6, 16), float32] */;
  %326 = %324.0;
  (%325, %326, %var_3511)
}

def @func_3419(%var_3413: Tensor[(288), float32]) -> (Tensor[(192), bool], Tensor[(2, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32], Tensor[(1, 6, 16), float64]) {
  %327 = @func_3230() /* ty=(Tensor[(192), bool],) */;
  %328 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %329 = %328.0;
  %330 = cast(%329, dtype="float64") /* ty=Tensor[(1, 6, 16), float64] */;
  %331 = atan(%330) /* ty=Tensor[(1, 6, 16), float64] */;
  %332 = cast(%331, dtype="float32") /* ty=Tensor[(1, 6, 16), float32] */;
  %333 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 6, 16), float64] */, dtype="float32") /* ty=Tensor[(2, 6, 16), float32] */;
  %334 = cast(%var_3413, dtype="float32") /* ty=Tensor[(288), float32] */;
  %335 = reshape(%334, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %336 = @func_1419(%335) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
  %337 = cast(%var_3413, dtype="float32") /* ty=Tensor[(288), float32] */;
  %338 = reshape(%337, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %339 = @func_2463(%338) /* ty=(Tensor[(1, 6, 16), float64], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
  %340 = %327.0;
  %341 = floor_mod(%332, %333) /* ty=Tensor[(2, 6, 16), float32] */;
  %342 = @func_1056() /* ty=Tensor[(1, 6, 16), bool] */;
  %343 = %336.0;
  %344 = %339.0;
  (%340, %341, %342, %343, %var_3413, %344)
}

def @func_12235() -> (Tensor[(390), float32],) {
  %345 = @func_2840() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(192), bool], Tensor[(390), float32]) */;
  %346 = %345.2;
  (%346,)
}

def @func_6478() -> Tensor[(2, 6, 16), float64] {
  @func_6476() /* ty=Tensor[(2, 6, 16), float64] */
}

def @func_17472(%var_17431: Tensor[(12, 2, 6), uint8], %var_17432: Tensor[(12, 2, 6), uint8]) -> (Tensor[(12, 2, 6), uint8], Tensor[(9, 3, 9), float64], Tensor[(3, 6, 16), bool], Tensor[(72, 4), float32], Tensor[(1, 6, 16), bool], Tensor[(77, 4), float64]) {
  %347 = cast(%var_17432, dtype="uint8") /* ty=Tensor[(12, 2, 6), uint8] */;
  %348 = shape_of(%var_17431, dtype="int32") /* ty=Tensor[(3), int32] */;
  %349 = cast(%var_17431, dtype="uint8") /* ty=Tensor[(12, 2, 6), uint8] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %351 = @func_16896() /* ty=(Tensor[(9, 3, 9), float64], Tensor[(9, 3, 9), float64]) */;
  %352 = cast(meta[relay.Constant][17] /* ty=Tensor[(72, 4), float32] */, dtype="float32") /* ty=Tensor[(72, 4), float32] */;
  %353 = reshape(%352, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %354 = @func_899(%353) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(3, 6, 16), bool]) */;
  %355 = cast(meta[relay.Constant][18] /* ty=Tensor[(77, 4), float64] */, dtype="float64") /* ty=Tensor[(77, 4), float64] */;
  %356 = reshape(%355, newshape=[14, 11, 2]) /* ty=Tensor[(14, 11, 2), float64] */;
  %357 = @func_1769(%356) /* ty=(Tensor[(14, 11, 2), float64], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %358 = minimum(%349, %350) /* ty=Tensor[(12, 2, 6), uint8] */;
  %359 = %351.1;
  %360 = %354.1;
  %361 = %357.1;
  (%358, %359, %360, meta[relay.Constant][17] /* ty=Tensor[(72, 4), float32] */, %361, meta[relay.Constant][18] /* ty=Tensor[(77, 4), float64] */)
}

def @func_4755() -> (Tensor[(1, 6, 16), bool],) {
  @func_4753() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_2971() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) {
  @func_2969() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */
}

def @func_13328() -> Tensor[(1, 6, 16), bool] {
  @func_13326() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_11069() -> (Tensor[(1, 6, 16), bool],) {
  @func_11067() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_16133() -> (Tensor[(1, 6, 16), bool], Tensor[(768), int8], Tensor[(9, 6, 16), float64]) {
  @func_16131() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(768), int8], Tensor[(9, 6, 16), float64]) */
}

def @func_14377() -> (Tensor[(390), float32], Tensor[(1, 6, 16), bool]) {
  %362 = @func_7184() /* ty=(Tensor[(192), bool], Tensor[(1, 6, 16), bool]) */;
  %363 = @func_8453() /* ty=Tensor[(390), float32] */;
  %364 = %362.1;
  (%363, %364)
}

def @func_12966() -> Tensor[(8, 6, 16), int8] {
  @func_11503() /* ty=Tensor[(8, 6, 16), int8] */
}

def @func_2060() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  %371 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
    %365 = @func_907() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %366 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
    %367 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
    %368 = %365.0;
    %369 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
    %370 = %366.0;
    (%367, %368, %369, %370)
  };
  %371() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */
}

def @func_9983() -> (Tensor[(390), float32],) {
  @func_9981() /* ty=(Tensor[(390), float32],) */
}

def @func_3524(%var_3522: Tensor[(936), float32]) -> (Tensor[(?, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(936), float32]) {
  @func_3521(%var_3522) /* ty=(Tensor[(?, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(936), float32]) */
}

def @func_17831() -> (Tensor[(390), float32],) {
  %373 = fn () -> (Tensor[(390), float32],) {
    %372 = @func_12897() /* ty=Tensor[(390), float32] */;
    (%372,)
  };
  %373() /* ty=(Tensor[(390), float32],) */
}

def @func_7297(%var_7260: Tensor[(4, 2, 5), float64]) -> (Tensor[(4, 2, 5), float64],) {
  %374 = cast(%var_7260, dtype="float64") /* ty=Tensor[(4, 2, 5), float64] */;
  %375 = atanh(%374) /* ty=Tensor[(4, 2, 5), float64] */;
  %376 = cast(%375, dtype="float64") /* ty=Tensor[(4, 2, 5), float64] */;
  %377 = shape_of(%var_7260, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(%var_7260, dtype="float64") /* ty=Tensor[(4, 2, 5), float64] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %380 = mod(%378, %379) /* ty=Tensor[(4, 2, 5), float64] */;
  (%380,)
}

def @func_12269() -> (Tensor[(1, 6, 16), bool],) {
  %381 = @func_9235() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %382 = %381.0;
  (%382,)
}

def @func_5026() -> (Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) {
  %383 = @func_3672() /* ty=(Tensor[(?, 6, 16), int8],) */;
  %384 = %383.0;
  %385 = @func_3258() /* ty=Tensor[(1, 6, 16), bool] */;
  (%384, %385)
}

def @func_10434(%var_10383: Tensor[(9, 8, 5), uint64], %var_10384: Tensor[(9, 8, 5), uint64]) -> (Tensor[(9, 8, 5), uint64], Tensor[(2, 6, 16), bool], Tensor[(9, 8, 5), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %386 = cast(%var_10384, dtype="uint64") /* ty=Tensor[(9, 8, 5), uint64] */;
  %387 = shape_of(%var_10383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %388 = cast(%var_10383, dtype="uint64") /* ty=Tensor[(9, 8, 5), uint64] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %390 = @func_6087() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(8, 6, 16), int8]) */;
  %391 = cast(%var_10383, dtype="float32") /* ty=Tensor[(9, 8, 5), float32] */;
  %392 = shape_of(%var_10384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%var_10384, dtype="float32") /* ty=Tensor[(9, 8, 5), float32] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %395 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %396 = @func_7093() /* ty=(Tensor[(15, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %397 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %398 = subtract(%388, %389) /* ty=Tensor[(9, 8, 5), uint64] */;
  %399 = %390.0;
  %400 = mod(%393, %394) /* ty=Tensor[(9, 8, 5), float32] */;
  %401 = %395.0;
  %402 = %396.1;
  %403 = %397.0;
  (%398, %399, %400, %401, %402, %403)
}

def @func_9146(%var_9108: Tensor[(13, 5, 6), float32], %var_9141: Tensor[(936), float32]) -> (Tensor[(13, 5, 6), float32], Tensor[(?, 6, 16), bool], Tensor[(?, 6, 16), float32], Tensor[(936), float32]) {
  %404 = @func_2558() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 390), float32]) */;
  %405 = %404.1;
  %406 = cast(%var_9108, dtype="float32") /* ty=Tensor[(13, 5, 6), float32] */;
  %407 = shape_of(%405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %408 = cast(%405, dtype="float32") /* ty=Tensor[(13, 5, 6), float32] */;
  %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %410 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
  %411 = @func_9024() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %412 = %411.0;
  %413 = cast(%412, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %414 = shape_of(%410, dtype="int32") /* ty=Tensor[(3), int32] */;
  %415 = cast(%410, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %417 = cast(%var_9141, dtype="float32") /* ty=Tensor[(936), float32] */;
  %418 = reshape(%417, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %419 = @func_3521(%418) /* ty=(Tensor[(?, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(936), float32]) */;
  %420 = add(%408, %409) /* ty=Tensor[(13, 5, 6), float32] */;
  %421 = logical_and(%415, %416) /* ty=Tensor[(?, 6, 16), bool] */;
  %422 = %419.0;
  (%420, %421, %422, %var_9141)
}

def @func_13574() -> (Tensor[(1, 6, 16), float32],) {
  %423 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %424 = %423.0;
  (%424,)
}

def @func_7467() -> Tensor[(1, 6, 16), float32] {
  %425 = @func_3739() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %425.0
}

def @func_16226() -> (Tensor[(8, 6, 16), int8], Tensor[(3, 16, 7), int32], Tensor[(7), int32], Tensor[(336), int32]) {
  %433 = fn () -> (Tensor[(8, 6, 16), int8], Tensor[(3, 16, 7), int32], Tensor[(7), int32], Tensor[(336), int32]) {
    %426 = cast(meta[relay.Constant][19] /* ty=Tensor[(7), int32] */, dtype="int32") /* ty=Tensor[(7), int32] */;
    %427 = cast(meta[relay.Constant][20] /* ty=Tensor[(336), int32] */, dtype="int32") /* ty=Tensor[(336), int32] */;
    %428 = reshape(%426, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), int32] */;
    %429 = reshape(%427, newshape=[3, 16, 7]) /* ty=Tensor[(3, 16, 7), int32] */;
    %430 = @func_5333(%428, %429) /* ty=(Tensor[(3, 16, 7), int32],) */;
    %431 = @func_14349() /* ty=Tensor[(8, 6, 16), int8] */;
    %432 = %430.0;
    (%431, %432, meta[relay.Constant][19] /* ty=Tensor[(7), int32] */, meta[relay.Constant][20] /* ty=Tensor[(336), int32] */)
  };
  %433() /* ty=(Tensor[(8, 6, 16), int8], Tensor[(3, 16, 7), int32], Tensor[(7), int32], Tensor[(336), int32]) */
}

def @func_3314(%var_3286: Tensor[(5, 9, 1), float32]) -> (Tensor[(5, 9, ?), int64],) {
  %434 = cast(%var_3286, dtype="float32") /* ty=Tensor[(5, 9, 1), float32] */;
  %435 = sigmoid(%434) /* ty=Tensor[(5, 9, 1), float32] */;
  %436 = cast(%var_3286, dtype="int64") /* ty=Tensor[(5, 9, 1), int64] */;
  %437 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%435, dtype="int64") /* ty=Tensor[(5, 9, 1), int64] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %440 = bitwise_and(%438, %439) /* ty=Tensor[(5, 9, ?), int64] */;
  (%440,)
}

def @func_12237() -> (Tensor[(390), float32],) {
  @func_12235() /* ty=(Tensor[(390), float32],) */
}

def @func_3741() -> (Tensor[(1, 6, 16), float32],) {
  @func_3739() /* ty=(Tensor[(1, 6, 16), float32],) */
}

def @func_11577() -> Tensor[(390), float32] {
  %441 = @func_11055() /* ty=(Tensor[(390), float32],) */;
  %441.0
}

def @func_15180(%var_15179: Tensor[(288, 4), float32]) -> (Tensor[(288, 4), bool], Tensor[(1, 390), float32], Tensor[(288, 4), uint64]) {
  %451 = fn (%var_15162: Tensor[(288, 4), float32]) -> (Tensor[(288, 4), bool], Tensor[(1, 390), float32], Tensor[(288, 4), uint64]) {
    %442 = @func_5105() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(288, 1), float32]) */;
    %443 = %442.2;
    %444 = cast(%443, dtype="bool") /* ty=Tensor[(288, 1), bool] */;
    %445 = cast(%var_15162, dtype="bool") /* ty=Tensor[(288, 4), bool] */;
    %446 = cast(%var_15162, dtype="uint64") /* ty=Tensor[(288, 4), uint64] */;
    %447 = cast(%443, dtype="uint64") /* ty=Tensor[(288, 1), uint64] */;
    %448 = less(%444, %445) /* ty=Tensor[(288, 4), bool] */;
    %449 = @func_11783() /* ty=Tensor[(1, 390), float32] */;
    %450 = multiply(%446, %447) /* ty=Tensor[(288, 4), uint64] */;
    (%448, %449, %450)
  };
  %451(%var_15179) /* ty=(Tensor[(288, 4), bool], Tensor[(1, 390), float32], Tensor[(288, 4), uint64]) */
}

def @func_13065(%var_13063: Tensor[(15, 6, 16), bool]) -> Tensor[(15, 6, 16), bool] {
  @func_13062(%var_13063) /* ty=Tensor[(15, 6, 16), bool] */
}

def @func_8506() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  @func_8504() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */
}

def @func_8514() -> Tensor[(1, 6, 16), bool] {
  %452 = @func_1949() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %452.0
}

def @func_13179() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  %453 = @func_12106() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %454 = @func_11908() /* ty=(Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %455 = @func_6509() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %456 = %453.0;
  %457 = %454.2;
  %458 = %455.1;
  (%456, %457, %458)
}

def @func_822() -> (Tensor[(1, 6, 16), float32],) {
  @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */
}

def @func_11709() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), bool], Tensor[(936), float32]) {
  %459 = @func_10149() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %460 = @func_5105() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(288, 1), float32]) */;
  %461 = @func_2444() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %462 = @func_8615() /* ty=(Tensor[(936), float32],) */;
  %463 = %459.0;
  %464 = %460.0;
  %465 = %461.0;
  %466 = %462.0;
  (%463, %464, %465, %466)
}

def @func_1293() -> (Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), float64]) {
  %484 = fn () -> (Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), float64]) {
    %467 = @func_990() /* ty=(Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) */;
    %468 = @func_1095() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %469 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
    %470 = cast(meta[relay.Constant][21] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
    %471 = reshape(%470, newshape=[13, 5, 6]) /* ty=Tensor[(13, 5, 6), float32] */;
    %472 = @func_746(%471) /* ty=(Tensor[(13, 5, 6), float32],) */;
    %473 = %467.2;
    %474 = cast(%473, dtype="bool") /* ty=Tensor[(192), bool] */;
    %475 = reshape(%474, newshape=[2, 6, 16]) /* ty=Tensor[(2, 6, 16), bool] */;
    %476 = @func_487(%475) /* ty=(Tensor[(2, 6, 16), int32],) */;
    %477 = @func_1038() /* ty=Tensor[(2, 6, 16), int32] */;
    %478 = cast(%477, dtype="float64") /* ty=Tensor[(2, 6, 16), float64] */;
    %479 = %468.0;
    %480 = %469.0;
    %481 = %472.0;
    %482 = %476.0;
    %483 = exp(%478) /* ty=Tensor[(2, 6, 16), float64] */;
    (%473, %479, %480, %481, meta[relay.Constant][21] /* ty=Tensor[(390), float32] */, %482, %483)
  };
  %484() /* ty=(Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), float64]) */
}

def @func_13560() -> (Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8]) {
  %485 = @func_5613() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %486 = %485.0;
  %487 = @func_8129() /* ty=Tensor[(8, 6, 16), int8] */;
  (%486, %487)
}

def @func_2887() -> (Tensor[(390), float32], Tensor[(2, 6, 16), bool]) {
  @func_2885() /* ty=(Tensor[(390), float32], Tensor[(2, 6, 16), bool]) */
}

def @func_2338() -> (Tensor[(2, 6, 16), bool],) {
  @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */
}

def @func_6509() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %488 = @func_5655() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %489 = @func_2558() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 390), float32]) */;
  %490 = %488.0;
  %491 = %489.0;
  (%490, %491)
}

def @func_4470(%var_4401: Tensor[(288), float32]) -> (Tensor[(2, 6, 16), int32], Tensor[(16, 6, 16), bool], Tensor[(1536), bool], Tensor[(2, 6, 16), int32], Tensor[(1, 390), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float64], Tensor[(288), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  %492 = @func_3616() /* ty=(Tensor[(2, 6, 16), int32],) */;
  %493 = cast(meta[relay.Constant][22] /* ty=Tensor[(1536), bool] */, dtype="bool") /* ty=Tensor[(1536), bool] */;
  %494 = reshape(%493, newshape=[16, 6, 16]) /* ty=Tensor[(16, 6, 16), bool] */;
  %495 = @func_604(%494) /* ty=(Tensor[(16, 6, 16), bool],) */;
  %496 = %492.0;
  %497 = cast(%496, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
  %498 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 390), float32] */, dtype="float32") /* ty=Tensor[(1, 390), float32] */;
  %499 = reshape(%497, newshape=[192]) /* ty=Tensor[(192), bool] */;
  %500 = reshape(%498, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %501 = @func_1855(%499, %500) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(192), bool], Tensor[(2, 6, 16), int32]) */;
  %502 = @func_2059() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %503 = cast(%var_4401, dtype="float32") /* ty=Tensor[(288), float32] */;
  %504 = reshape(%503, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %505 = @func_3419(%504) /* ty=(Tensor[(192), bool], Tensor[(2, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32], Tensor[(1, 6, 16), float64]) */;
  %506 = @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %507 = @func_3932() /* ty=(Tensor[(8, 6, 16), int8],) */;
  %508 = @func_3177() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) */;
  %509 = cast(%var_4401, dtype="float32") /* ty=Tensor[(288), float32] */;
  %510 = reshape(%509, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %511 = @func_1419(%510) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
  %512 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %513 = %495.0;
  %514 = %501.7;
  %515 = %502.1;
  %516 = %505.5;
  %517 = %506.0;
  %518 = %507.0;
  %519 = %508.0;
  %520 = %511.1;
  %521 = %512.0;
  (%496, %513, meta[relay.Constant][22] /* ty=Tensor[(1536), bool] */, %514, meta[relay.Constant][23] /* ty=Tensor[(1, 390), float32] */, %515, %516, %var_4401, %517, %518, %519, %520, %521)
}

def @func_7093() -> (Tensor[(15, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %522 = @func_6685() /* ty=(Tensor[(15, 6, 16), bool],) */;
  %523 = @func_5824() /* ty=(Tensor[(2, 6, 16), float64], Tensor[(2, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(13, 5, 6), float32]) */;
  %524 = %522.0;
  %525 = %523.3;
  (%524, %525)
}

def @func_9321() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  %526 = @func_3739() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %527 = %526.0;
  %528 = @func_8514() /* ty=Tensor[(1, 6, 16), bool] */;
  (%527, %528)
}

def @func_4927(%var_4925: Tensor[(13, 8, 9), float32]) -> (Tensor[(13, 8, 9), uint32], Tensor[(?, 6, 16), bool]) {
  @func_4924(%var_4925) /* ty=(Tensor[(13, 8, 9), uint32], Tensor[(?, 6, 16), bool]) */
}

def @func_607(%var_605: Tensor[(16, 6, 16), bool]) -> (Tensor[(16, 6, 16), bool],) {
  @func_604(%var_605) /* ty=(Tensor[(16, 6, 16), bool],) */
}

def @func_8504() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  %529 = @func_2969() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %530 = @func_6388() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */;
  %531 = %529.2;
  %532 = %530.2;
  (%531, %532)
}

def @func_8708() -> Tensor[(1, 6, 16), bool] {
  @func_1056() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_11520() -> Tensor[(1, 6, 16), bool] {
  @func_11518() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_580() -> Tensor[(1, 6, 16), bool] {
  %533 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %533.0
}

def @func_12734() -> (Tensor[(936), float32],) {
  @func_12732() /* ty=(Tensor[(936), float32],) */
}

def @func_10556(%var_10555: Tensor[(9, 6, 16), bool]) -> (Tensor[(9, 6, 16), int64],) {
  %539 = fn (%var_10545: Tensor[(9, 6, 16), bool]) -> (Tensor[(9, 6, 16), int64],) {
    %534 = @func_9024() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %535 = %534.0;
    %536 = cast(%535, dtype="int64") /* ty=Tensor[(1, 6, 16), int64] */;
    %537 = cast(%var_10545, dtype="int64") /* ty=Tensor[(9, 6, 16), int64] */;
    %538 = bitwise_xor(%536, %537) /* ty=Tensor[(9, 6, 16), int64] */;
    (%538,)
  };
  %539(%var_10555) /* ty=(Tensor[(9, 6, 16), int64],) */
}

def @func_8231(%var_8230: Tensor[(4, 390), bool]) -> (Tensor[(4, 390), bool],) {
  %546 = fn (%var_8221: Tensor[(4, 390), bool]) -> (Tensor[(4, 390), bool],) {
    %540 = @func_8209() /* ty=Tensor[(4, 390), bool] */;
    %541 = cast(%var_8221, dtype="bool") /* ty=Tensor[(4, 390), bool] */;
    %542 = shape_of(%540, dtype="int32") /* ty=Tensor[(2), int32] */;
    %543 = cast(%540, dtype="bool") /* ty=Tensor[(4, 390), bool] */;
    %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %545 = greater_equal(%543, %544) /* ty=Tensor[(4, 390), bool] */;
    (%545,)
  };
  %546(%var_8230) /* ty=(Tensor[(4, 390), bool],) */
}

def @func_990() -> (Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) {
  %547 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %548 = %547.0;
  %549 = cast(%548, dtype="float32") /* ty=Tensor[(1, 6, 16), float32] */;
  %550 = sqrt(%549) /* ty=Tensor[(1, 6, 16), float32] */;
  %551 = cast(%550, dtype="float64") /* ty=Tensor[(1, 6, 16), float64] */;
  %552 = tan(%551) /* ty=Tensor[(1, 6, 16), float64] */;
  %553 = cast(%550, dtype="int64") /* ty=Tensor[(1, 6, 16), int64] */;
  %554 = shape_of(%552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(%552, dtype="int64") /* ty=Tensor[(1, 6, 16), int64] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %557 = cast(meta[relay.Constant][24] /* ty=Tensor[(192), bool] */, dtype="bool") /* ty=Tensor[(192), bool] */;
  %558 = reshape(%557, newshape=[2, 6, 16]) /* ty=Tensor[(2, 6, 16), bool] */;
  %559 = @func_487(%558) /* ty=(Tensor[(2, 6, 16), int32],) */;
  %560 = logical_xor(%555, %556) /* ty=Tensor[(?, 6, 16), int64] */;
  %561 = %559.0;
  (%560, %561, meta[relay.Constant][24] /* ty=Tensor[(192), bool] */)
}

def @func_3739() -> (Tensor[(1, 6, 16), float32],) {
  %562 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %563 = %562.0;
  (%563,)
}

def @func_10858() -> (Tensor[(1, 6, 16), bool],) {
  %566 = fn () -> (Tensor[(1, 6, 16), bool],) {
    %564 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %565 = %564.0;
    (%565,)
  };
  %566() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_11802() -> (Tensor[(1, 6, 16), bool],) {
  %567 = @func_10078() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %568 = %567.0;
  (%568,)
}

def @func_12352() -> (Tensor[(936), float32],) {
  %571 = fn () -> (Tensor[(936), float32],) {
    %569 = @func_7246() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 6), float32], Tensor[(1, 6, 16), float32], Tensor[(2, 144), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
    %570 = %569.5;
    (%570,)
  };
  %571() /* ty=(Tensor[(936), float32],) */
}

def @func_6088() -> (Tensor[(2, 6, 16), bool], Tensor[(8, 6, 16), int8]) {
  %576 = fn () -> (Tensor[(2, 6, 16), bool], Tensor[(8, 6, 16), int8]) {
    %572 = @func_2840() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(192), bool], Tensor[(390), float32]) */;
    %573 = @func_3932() /* ty=(Tensor[(8, 6, 16), int8],) */;
    %574 = %572.0;
    %575 = %573.0;
    (%574, %575)
  };
  %576() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(8, 6, 16), int8]) */
}

def @func_12107() -> (Tensor[(1, 6, 16), bool],) {
  %579 = fn () -> (Tensor[(1, 6, 16), bool],) {
    %577 = @func_8864() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %578 = %577.0;
    (%578,)
  };
  %579() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_10923() -> (Tensor[(13, 5, 6), float32],) {
  %580 = @func_5255() /* ty=(Tensor[(13, 5, 6), float32], Tensor[(936), float32]) */;
  %581 = %580.0;
  (%581,)
}

def @func_8710() -> Tensor[(1, 6, 16), bool] {
  @func_8708() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_8315() -> (Tensor[(13, 5, 6), float32],) {
  @func_8313() /* ty=(Tensor[(13, 5, 6), float32],) */
}

def @func_15241() -> Tensor[(1, 6, 16), bool] {
  %582 = fn () -> Tensor[(1, 6, 16), bool] {
    @func_580() /* ty=Tensor[(1, 6, 16), bool] */
  };
  %582() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_16286() -> (Tensor[(1, 6, 16), bool],) {
  %585 = fn () -> (Tensor[(1, 6, 16), bool],) {
    %583 = @func_14239() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %584 = %583.1;
    (%584,)
  };
  %585() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_13741(%var_13739: Tensor[(288), float32]) -> (Tensor[(2, 6, 16), float64], Tensor[(1, 6, 16), float64], Tensor[(288), float32]) {
  @func_13738(%var_13739) /* ty=(Tensor[(2, 6, 16), float64], Tensor[(1, 6, 16), float64], Tensor[(288), float32]) */
}

def @func_683() -> (Tensor[(1, 6, 16), bool],) {
  @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_6927() -> (Tensor[(2, 6, 16), bool],) {
  @func_6925() /* ty=(Tensor[(2, 6, 16), bool],) */
}

def @func_2430(%var_2414: Tensor[(8, 14, 12), float32]) -> (Tensor[(8, 14, 12), float32],) {
  %586 = cast(%var_2414, dtype="float32") /* ty=Tensor[(8, 14, 12), float32] */;
  %587 = sinh(%586) /* ty=Tensor[(8, 14, 12), float32] */;
  (%587,)
}

def @func_11983() -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool]) {
  %588 = @func_6087() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(8, 6, 16), int8]) */;
  %589 = @func_1056() /* ty=Tensor[(1, 6, 16), bool] */;
  %590 = %588.0;
  (%589, %590)
}

def @func_13562() -> (Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8]) {
  @func_13560() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8]) */
}

def @func_12898() -> Tensor[(390), float32] {
  %591 = fn () -> Tensor[(390), float32] {
    @func_11577() /* ty=Tensor[(390), float32] */
  };
  %591() /* ty=Tensor[(390), float32] */
}

def @func_16898() -> (Tensor[(9, 3, 9), float64], Tensor[(9, 3, 9), float64]) {
  @func_16896() /* ty=(Tensor[(9, 3, 9), float64], Tensor[(9, 3, 9), float64]) */
}

def @func_9607() -> (Tensor[(?, 6, 16), uint16],) {
  %592 = @func_2173() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %593 = %592.0;
  %594 = @func_1056() /* ty=Tensor[(1, 6, 16), bool] */;
  %595 = cast(%594, dtype="uint16") /* ty=Tensor[(1, 6, 16), uint16] */;
  %596 = shape_of(%593, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%593, dtype="uint16") /* ty=Tensor[(1, 6, 16), uint16] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %599 = bitwise_or(%597, %598) /* ty=Tensor[(?, 6, 16), uint16] */;
  (%599,)
}

def @func_6722() -> (Tensor[(1, 6, 16), float32],) {
  %600 = @func_6569() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %601 = %600.0;
  (%601,)
}

def @func_5888() -> (Tensor[(1, 6, 16), float32],) {
  %604 = fn () -> (Tensor[(1, 6, 16), float32],) {
    %602 = @func_2173() /* ty=(Tensor[(1, 6, 16), float32],) */;
    %603 = %602.0;
    (%603,)
  };
  %604() /* ty=(Tensor[(1, 6, 16), float32],) */
}

def @func_16062() -> Tensor[(1, 6, 16), bool] {
  @func_16060() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_1771(%var_1770: Tensor[(14, 11, 2), float64]) -> (Tensor[(14, 11, 2), float64], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %612 = fn (%var_1735: Tensor[(14, 11, 2), float64]) -> (Tensor[(14, 11, 2), float64], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
    %605 = cast(%var_1735, dtype="float64") /* ty=Tensor[(14, 11, 2), float64] */;
    %606 = @func_1692() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %607 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %608 = atan(%605) /* ty=Tensor[(14, 11, 2), float64] */;
    %609 = %606.0;
    %610 = @func_1728() /* ty=Tensor[(1, 6, 16), bool] */;
    %611 = %607.0;
    (%608, %609, %610, %611)
  };
  %612(%var_1770) /* ty=(Tensor[(14, 11, 2), float64], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_16945() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %617 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
    %613 = @func_10694() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %614 = @func_10078() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %615 = %613.0;
    %616 = %614.0;
    (%615, %616)
  };
  %617() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_14564() -> (Tensor[(936), float32], Tensor[(1, 6, 16), bool]) {
  @func_14562() /* ty=(Tensor[(936), float32], Tensor[(1, 6, 16), bool]) */
}

def @func_17499() -> (Tensor[(1, 6, 16), bool], Tensor[(432), uint32], Tensor[(2, 216), uint32]) {
  @func_17497() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(432), uint32], Tensor[(2, 216), uint32]) */
}

def @func_1056() -> Tensor[(1, 6, 16), bool] {
  %618 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %618.0
}

def @func_5394() -> Tensor[(2, 6, 16), bool] {
  @func_5392() /* ty=Tensor[(2, 6, 16), bool] */
}

def @func_6388() -> (Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  %619 = @func_5026() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) */;
  %620 = @func_2173() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %621 = %619.0;
  %622 = %620.0;
  %623 = @func_5974() /* ty=Tensor[(1, 6, 16), bool] */;
  (%621, %622, %623)
}

def @func_9891() -> (Tensor[(1, 6, 16), bool],) {
  %625 = fn () -> (Tensor[(1, 6, 16), bool],) {
    %624 = @func_5974() /* ty=Tensor[(1, 6, 16), bool] */;
    (%624,)
  };
  %625() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_1015() -> (Tensor[(1, 6, 16), float32],) {
  %628 = fn () -> (Tensor[(1, 6, 16), float32],) {
    %626 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
    %627 = %626.0;
    (%627,)
  };
  %628() /* ty=(Tensor[(1, 6, 16), float32],) */
}

def @func_5615() -> (Tensor[(1, 6, 16), bool],) {
  @func_5613() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_11248() -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), float64]) {
  %629 = @func_8963() /* ty=(Tensor[(2, 6, 16), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) */;
  %630 = @func_6051() /* ty=Tensor[(1, 6, 16), bool] */;
  %631 = %629.0;
  (%630, %631)
}

def @func_10326(%var_10315: Tensor[(4, 390), bool]) -> (Tensor[(4, 390), float64], Tensor[(1, 6, 16), float32]) {
  %632 = @func_8209() /* ty=Tensor[(4, 390), bool] */;
  %633 = cast(%var_10315, dtype="float64") /* ty=Tensor[(4, 390), float64] */;
  %634 = shape_of(%632, dtype="int32") /* ty=Tensor[(2), int32] */;
  %635 = cast(%632, dtype="float64") /* ty=Tensor[(4, 390), float64] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %637 = @func_8504() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */;
  %638 = divide(%635, %636) /* ty=Tensor[(4, 390), float64] */;
  %639 = %637.0;
  (%638, %639)
}

def @func_4643() -> (Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), float64]) {
  %650 = fn () -> (Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), float64]) {
    %640 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
    %641 = @func_1728() /* ty=Tensor[(1, 6, 16), bool] */;
    %642 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
    %643 = %642.0;
    %644 = cast(%641, dtype="float64") /* ty=Tensor[(1, 6, 16), float64] */;
    %645 = cast(%643, dtype="float64") /* ty=Tensor[(2, 6, 16), float64] */;
    %646 = power(%644, %645) /* ty=Tensor[(2, 6, 16), float64] */;
    %647 = cast(%646, dtype="float64") /* ty=Tensor[(2, 6, 16), float64] */;
    %648 = %640.0;
    %649 = sinh(%647) /* ty=Tensor[(2, 6, 16), float64] */;
    (%648, %649)
  };
  %650() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), float64]) */
}

def @func_5514() -> (Tensor[(8, 6, 16), int8],) {
  @func_5512() /* ty=(Tensor[(8, 6, 16), int8],) */
}

def @func_5928() -> (Tensor[(2, 6, 16), int32],) {
  %651 = @func_1205() /* ty=Tensor[(2, 6, 16), int32] */;
  (%651,)
}

def @func_17031(%var_16967: Tensor[(1440), bool]) -> (Tensor[(936), float32], Tensor[(15, 6, 16), uint32], Tensor[(1440), bool], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool]) {
  %652 = @func_14562() /* ty=(Tensor[(936), float32], Tensor[(1, 6, 16), bool]) */;
  %653 = cast(%var_16967, dtype="bool") /* ty=Tensor[(1440), bool] */;
  %654 = reshape(%653, newshape=[15, 6, 16]) /* ty=Tensor[(15, 6, 16), bool] */;
  %655 = @func_15449(%654) /* ty=(Tensor[(15, 6, 16), uint32],) */;
  %656 = @func_5928() /* ty=(Tensor[(2, 6, 16), int32],) */;
  %657 = %652.0;
  %658 = %655.0;
  %659 = %656.0;
  %660 = @func_3338() /* ty=Tensor[(1, 6, 16), bool] */;
  (%657, %658, %var_16967, %659, %660)
}

def @func_1038() -> Tensor[(2, 6, 16), int32] {
  %661 = @func_990() /* ty=(Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) */;
  %661.1
}

def @func_15917() -> (Tensor[(2, 6, 16), int32],) {
  @func_15915() /* ty=(Tensor[(2, 6, 16), int32],) */
}

def @func_7185() -> (Tensor[(192), bool], Tensor[(1, 6, 16), bool]) {
  %666 = fn () -> (Tensor[(192), bool], Tensor[(1, 6, 16), bool]) {
    %662 = @func_2840() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(192), bool], Tensor[(390), float32]) */;
    %663 = @func_5305() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %664 = %662.1;
    %665 = %663.0;
    (%664, %665)
  };
  %666() /* ty=(Tensor[(192), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_6051() -> Tensor[(1, 6, 16), bool] {
  %667 = @func_4753() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %667.0
}

def @func_11711() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), bool], Tensor[(936), float32]) {
  @func_11709() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), bool], Tensor[(936), float32]) */
}

def @func_11909() -> (Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  %674 = fn () -> (Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
    %668 = @func_5216() /* ty=(Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
    %669 = @func_3903() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %670 = @func_3739() /* ty=(Tensor[(1, 6, 16), float32],) */;
    %671 = %668.2;
    %672 = %669.0;
    %673 = %670.0;
    (%671, %672, %673)
  };
  %674() /* ty=(Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) */
}

def @func_6666() -> (Tensor[(2, 6, 16), int32],) {
  @func_6664() /* ty=(Tensor[(2, 6, 16), int32],) */
}

def @func_6571() -> (Tensor[(1, 6, 16), float32],) {
  @func_6569() /* ty=(Tensor[(1, 6, 16), float32],) */
}

def @func_7815() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool], Tensor[(432, 1), uint32], Tensor[(936), float32]) {
  @func_7813() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool], Tensor[(432, 1), uint32], Tensor[(936), float32]) */
}

def @func_12290() -> (Tensor[(1, 6, 16), float32],) {
  @func_12288() /* ty=(Tensor[(1, 6, 16), float32],) */
}

def @func_16630(%var_16608: Tensor[(1, 288), float32], %var_16623: Tensor[(8, 6, 16), bool]) -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), float64], Tensor[(1, 288), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), float32]) {
  %675 = @func_3552() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %676 = @func_2173() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %677 = cast(%var_16608, dtype="float32") /* ty=Tensor[(1, 288), float32] */;
  %678 = reshape(%677, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %679 = @func_13738(%678) /* ty=(Tensor[(2, 6, 16), float64], Tensor[(1, 6, 16), float64], Tensor[(288), float32]) */;
  %680 = @func_10681() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8]) */;
  %681 = @func_13560() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8]) */;
  %682 = %681.0;
  %683 = cast(%682, dtype="float32") /* ty=Tensor[(1, 6, 16), float32] */;
  %684 = cast(%var_16623, dtype="float32") /* ty=Tensor[(8, 6, 16), float32] */;
  %685 = %675.0;
  %686 = %676.0;
  %687 = %679.0;
  %688 = %680.0;
  %689 = divide(%683, %684) /* ty=Tensor[(8, 6, 16), float32] */;
  (%685, %686, %687, %var_16608, %688, %689)
}

def @func_13398(%var_13396: Tensor[(936), float32], %var_13397: Tensor[(1560), bool]) -> (Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(1, 6, 16), float32], Tensor[(1560), bool], Tensor[(13, 8, 9), float32]) {
  @func_13394(%var_13396, %var_13397) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(1, 6, 16), float32], Tensor[(1560), bool], Tensor[(13, 8, 9), float32]) */
}

def @func_7246() -> (Tensor[(1, 6, 16), bool], Tensor[(8, 6, 6), float32], Tensor[(1, 6, 16), float32], Tensor[(2, 144), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) {
  %690 = @func_6758() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(?, 6, 16), int8]) */;
  %691 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 144), float32] */, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %692 = reshape(%691, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), float32] */;
  %693 = @func_2194(%692) /* ty=(Tensor[(8, 6, 6), float32],) */;
  %694 = @func_5887() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %695 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 144), float32] */, dtype="float64") /* ty=Tensor[(2, 144), float64] */;
  %696 = log10(%695) /* ty=Tensor[(2, 144), float64] */;
  %697 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 144), float32] */, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %698 = shape_of(%696, dtype="int32") /* ty=Tensor[(2), int32] */;
  %699 = cast(%696, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %701 = cast(meta[relay.Constant][26] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %702 = reshape(%701, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %703 = @func_1918(%702) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(1, 6, 16), float32]) */;
  %704 = %690.0;
  %705 = %693.0;
  %706 = %694.0;
  %707 = power(%699, %700) /* ty=Tensor[(2, 144), float32] */;
  %708 = %703.3;
  (%704, %705, %706, %707, %708, meta[relay.Constant][26] /* ty=Tensor[(936), float32] */)
}

def @func_12993() -> (Tensor[(1, 6, 16), bool],) {
  @func_12991() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_17080(%var_17079: Tensor[(11, 6, 16), bool]) -> Tensor[(11, 6, 16), uint8] {
  %713 = fn (%var_17069: Tensor[(11, 6, 16), bool]) -> Tensor[(11, 6, 16), uint8] {
    %709 = @func_16699() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %710 = %709.0;
    %711 = cast(%710, dtype="uint8") /* ty=Tensor[(1, 6, 16), uint8] */;
    %712 = cast(%var_17069, dtype="uint8") /* ty=Tensor[(11, 6, 16), uint8] */;
    multiply(%711, %712) /* ty=Tensor[(11, 6, 16), uint8] */
  };
  %713(%var_17079) /* ty=Tensor[(11, 6, 16), uint8] */
}

def @func_6664() -> (Tensor[(2, 6, 16), int32],) {
  %714 = @func_1205() /* ty=Tensor[(2, 6, 16), int32] */;
  (%714,)
}

def @func_10586() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  %715 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %716 = @func_8744() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */;
  %717 = %715.0;
  %718 = %716.1;
  (%717, %718)
}

def @func_16002() -> (Tensor[(1, 6, 16), bool],) {
  @func_16000() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_13516() -> (Tensor[(2, 6, 16), bool],) {
  @func_13514() /* ty=(Tensor[(2, 6, 16), bool],) */
}

def @func_15303() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(1560), bool]) {
  %724 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(1560), bool]) {
    %719 = cast(meta[relay.Constant][27] /* ty=Tensor[(1560), bool] */, dtype="bool") /* ty=Tensor[(1560), bool] */;
    %720 = reshape(%719, newshape=[4, 390]) /* ty=Tensor[(4, 390), bool] */;
    %721 = @func_9442(%720) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(4, 390), float64]) */;
    %722 = @func_13326() /* ty=Tensor[(1, 6, 16), bool] */;
    %723 = %721.0;
    (%722, %723, meta[relay.Constant][27] /* ty=Tensor[(1560), bool] */)
  };
  %724() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(1560), bool]) */
}

def @func_9207() -> (Tensor[(13, 5, 6), float32], Tensor[(390), float32]) {
  %729 = fn () -> (Tensor[(13, 5, 6), float32], Tensor[(390), float32]) {
    %725 = @func_5371() /* ty=(Tensor[(13, 5, 6), float32],) */;
    %726 = @func_1375() /* ty=(Tensor[(390), float32],) */;
    %727 = %725.0;
    %728 = %726.0;
    (%727, %728)
  };
  %729() /* ty=(Tensor[(13, 5, 6), float32], Tensor[(390), float32]) */
}

def @func_15812(%var_15810: Tensor[(288), float32]) -> (Tensor[(336), int32], Tensor[(1, 6, 16), float64], Tensor[(288), float32]) {
  @func_15809(%var_15810) /* ty=(Tensor[(336), int32], Tensor[(1, 6, 16), float64], Tensor[(288), float32]) */
}

def @func_11551() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %730 = @func_3578() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool]) */;
  %731 = @func_3552() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %732 = %730.0;
  %733 = %731.0;
  (%732, %733)
}

def @func_14240() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %739 = fn () -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
    %734 = @func_3903() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %735 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %736 = %734.0;
    %737 = @func_12903() /* ty=Tensor[(1, 6, 16), bool] */;
    %738 = %735.0;
    (%736, %737, %738)
  };
  %739() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_9150(%var_9148: Tensor[(13, 5, 6), float32], %var_9149: Tensor[(936), float32]) -> (Tensor[(13, 5, 6), float32], Tensor[(?, 6, 16), bool], Tensor[(?, 6, 16), float32], Tensor[(936), float32]) {
  @func_9146(%var_9148, %var_9149) /* ty=(Tensor[(13, 5, 6), float32], Tensor[(?, 6, 16), bool], Tensor[(?, 6, 16), float32], Tensor[(936), float32]) */
}

def @func_13576() -> (Tensor[(1, 6, 16), float32],) {
  @func_13574() /* ty=(Tensor[(1, 6, 16), float32],) */
}

def @func_14911(%var_14910: Tensor[(432), uint32]) -> (Tensor[(1, 6, 16), float32], Tensor[(4, 12, 9), float32], Tensor[(432), uint32]) {
  %746 = fn (%var_14901: Tensor[(432), uint32]) -> (Tensor[(1, 6, 16), float32], Tensor[(4, 12, 9), float32], Tensor[(432), uint32]) {
    %740 = @func_7901() /* ty=(Tensor[(1, 6, 16), float32],) */;
    %741 = cast(%var_14901, dtype="uint32") /* ty=Tensor[(432), uint32] */;
    %742 = reshape(%741, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), uint32] */;
    %743 = @func_3792(%742) /* ty=(Tensor[(390), float32], Tensor[(4, 12, 9), float32]) */;
    %744 = %740.0;
    %745 = %743.1;
    (%744, %745, %var_14901)
  };
  %746(%var_14910) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(4, 12, 9), float32], Tensor[(432), uint32]) */
}

def @func_748(%var_747: Tensor[(13, 5, 6), float32]) -> (Tensor[(13, 5, 6), float32],) {
  %749 = fn (%var_738: Tensor[(13, 5, 6), float32]) -> (Tensor[(13, 5, 6), float32],) {
    %747 = cast(%var_738, dtype="float32") /* ty=Tensor[(13, 5, 6), float32] */;
    %748 = cos(%747) /* ty=Tensor[(13, 5, 6), float32] */;
    (%748,)
  };
  %749(%var_747) /* ty=(Tensor[(13, 5, 6), float32],) */
}

def @func_14767() -> Tensor[(9, 3, 9), float64] {
  %751 = fn () -> Tensor[(9, 3, 9), float64] {
    %750 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 3, 9), float64] */, dtype="float64") /* ty=Tensor[(9, 3, 9), float64] */;
    sinh(%750) /* ty=Tensor[(9, 3, 9), float64] */
  };
  %751() /* ty=Tensor[(9, 3, 9), float64] */
}

def @func_4753() -> (Tensor[(1, 6, 16), bool],) {
  %752 = @func_3349() /* ty=Tensor[(1, 6, 16), bool] */;
  (%752,)
}

def @func_9301(%var_9281: float32) -> (Tensor[(14, 16, 10), float32], Tensor[(1, 6, 16), bool]) {
  %753 = cast(%var_9281, dtype="float32") /* ty=float32 */;
  %754 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 16, 10), float32] */, dtype="float32") /* ty=Tensor[(14, 16, 10), float32] */;
  %755 = @func_9024() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %756 = floor_divide(%753, %754) /* ty=Tensor[(14, 16, 10), float32] */;
  %757 = %755.0;
  (%756, %757)
}

def @func_8157() -> (Tensor[(2, 6, 16), bool],) {
  %760 = fn () -> (Tensor[(2, 6, 16), bool],) {
    %758 = @func_6441() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %759 = %758.0;
    (%759,)
  };
  %760() /* ty=(Tensor[(2, 6, 16), bool],) */
}

def @func_12672(%var_12671: Tensor[(1, 40), float64]) -> (Tensor[(?, 6, 16), int8], Tensor[(1, 40), float64], Tensor[(2, 6, 16), float64], Tensor[(4, 2, 5), float32]) {
  %770 = fn (%var_12652: Tensor[(1, 40), float64]) -> (Tensor[(?, 6, 16), int8], Tensor[(1, 40), float64], Tensor[(2, 6, 16), float64], Tensor[(4, 2, 5), float32]) {
    %761 = @func_5026() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) */;
    %762 = cast(%var_12652, dtype="float64") /* ty=Tensor[(1, 40), float64] */;
    %763 = reshape(%762, newshape=[4, 2, 5]) /* ty=Tensor[(4, 2, 5), float64] */;
    %764 = @func_7297(%763) /* ty=(Tensor[(4, 2, 5), float64],) */;
    %765 = %764.0;
    %766 = cast(%765, dtype="float32") /* ty=Tensor[(4, 2, 5), float32] */;
    %767 = %761.0;
    %768 = @func_11029() /* ty=Tensor[(2, 6, 16), float64] */;
    %769 = rsqrt(%766) /* ty=Tensor[(4, 2, 5), float32] */;
    (%767, %var_12652, %768, %769)
  };
  %770(%var_12671) /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 40), float64], Tensor[(2, 6, 16), float64], Tensor[(4, 2, 5), float32]) */
}

def @func_9728(%var_9704: Tensor[(6, 15, 2), float64]) -> (Tensor[(6, 15, 2), bool], Tensor[(6, 15, 2), float32]) {
  %771 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 15, 2), float64] */, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
  %772 = shape_of(%var_9704, dtype="int32") /* ty=Tensor[(3), int32] */;
  %773 = cast(%var_9704, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
  %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %775 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 15, 2), float64] */, dtype="float32") /* ty=Tensor[(6, 15, 2), float32] */;
  %776 = less(%773, %774) /* ty=Tensor[(6, 15, 2), bool] */;
  %777 = sin(%775) /* ty=Tensor[(6, 15, 2), float32] */;
  (%776, %777)
}

def @func_5333(%var_5328: Tensor[(1, 1, 7), int32], %var_5329: Tensor[(3, 16, 7), int32]) -> (Tensor[(3, 16, 7), int32],) {
  %778 = cast(%var_5328, dtype="int32") /* ty=Tensor[(1, 1, 7), int32] */;
  %779 = cast(%var_5329, dtype="int32") /* ty=Tensor[(3, 16, 7), int32] */;
  %780 = logical_xor(%778, %779) /* ty=Tensor[(3, 16, 7), int32] */;
  (%780,)
}

def @func_8137() -> (Tensor[(1, 6, 16), bool],) {
  %783 = fn () -> (Tensor[(1, 6, 16), bool],) {
    %781 = @func_1692() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %782 = %781.0;
    (%782,)
  };
  %783() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_1207() -> Tensor[(2, 6, 16), int32] {
  @func_1205() /* ty=Tensor[(2, 6, 16), int32] */
}

def @func_3933() -> (Tensor[(8, 6, 16), int8],) {
  %789 = fn () -> (Tensor[(8, 6, 16), int8],) {
    %784 = @func_1692() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %785 = %784.0;
    %786 = cast(%785, dtype="int8") /* ty=Tensor[(1, 6, 16), int8] */;
    %787 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 6, 16), bool] */, dtype="int8") /* ty=Tensor[(8, 6, 16), int8] */;
    %788 = add(%786, %787) /* ty=Tensor[(8, 6, 16), int8] */;
    (%788,)
  };
  %789() /* ty=(Tensor[(8, 6, 16), int8],) */
}

def @func_5306() -> (Tensor[(1, 6, 16), bool],) {
  %792 = fn () -> (Tensor[(1, 6, 16), bool],) {
    %790 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %791 = %790.0;
    (%791,)
  };
  %792() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_6442() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %796 = fn () -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
    %793 = @func_4753() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %794 = @func_5392() /* ty=Tensor[(2, 6, 16), bool] */;
    %795 = %793.0;
    (%794, %795)
  };
  %796() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_2984() -> Tensor[(2, 6, 16), bool] {
  %798 = fn () -> Tensor[(2, 6, 16), bool] {
    %797 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
    %797.0
  };
  %798() /* ty=Tensor[(2, 6, 16), bool] */
}

def @func_10163() -> (Tensor[(8, 6, 16), int8],) {
  @func_10161() /* ty=(Tensor[(8, 6, 16), int8],) */
}

def @func_1095() -> (Tensor[(1, 6, 16), bool],) {
  %799 = @func_907() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %800 = %799.0;
  (%800,)
}

def @func_11056() -> (Tensor[(390), float32],) {
  %803 = fn () -> (Tensor[(390), float32],) {
    %801 = @func_5216() /* ty=(Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
    %802 = %801.0;
    (%802,)
  };
  %803() /* ty=(Tensor[(390), float32],) */
}

def @func_11250() -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), float64]) {
  @func_11248() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), float64]) */
}

def @func_8615() -> (Tensor[(936), float32],) {
  %804 = @func_5255() /* ty=(Tensor[(13, 5, 6), float32], Tensor[(936), float32]) */;
  %805 = %804.1;
  (%805,)
}

def @func_12586() -> Tensor[(15, 6, 16), bool] {
  %807 = fn () -> Tensor[(15, 6, 16), bool] {
    %806 = @func_7093() /* ty=(Tensor[(15, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %806.0
  };
  %807() /* ty=Tensor[(15, 6, 16), bool] */
}

def @func_12732() -> (Tensor[(936), float32],) {
  %808 = @func_12351() /* ty=(Tensor[(936), float32],) */;
  %809 = %808.0;
  (%809,)
}

def @func_16634(%var_16632: Tensor[(1, 288), float32], %var_16633: Tensor[(8, 6, 16), bool]) -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), float64], Tensor[(1, 288), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), float32]) {
  @func_16630(%var_16632, %var_16633) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), float64], Tensor[(1, 288), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), float32]) */
}

def @func_13394(%var_13386: Tensor[(936), float32], %var_13389: Tensor[(1560), bool]) -> (Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(1, 6, 16), float32], Tensor[(1560), bool], Tensor[(13, 8, 9), float32]) {
  %810 = @func_11908() /* ty=(Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %811 = cast(%var_13386, dtype="float32") /* ty=Tensor[(936), float32] */;
  %812 = reshape(%811, newshape=[936]) /* ty=Tensor[(936), float32] */;
  %813 = @func_1918(%812) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(1, 6, 16), float32]) */;
  %814 = cast(%var_13389, dtype="bool") /* ty=Tensor[(1560), bool] */;
  %815 = reshape(%814, newshape=[4, 390]) /* ty=Tensor[(4, 390), bool] */;
  %816 = @func_9442(%815) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(4, 390), float64]) */;
  %817 = cast(%var_13386, dtype="float32") /* ty=Tensor[(936), float32] */;
  %818 = reshape(%817, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
  %819 = @func_1883(%818) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32]) */;
  %820 = %810.2;
  %821 = %813.1;
  %822 = %816.0;
  %823 = %819.1;
  (%820, %821, %var_13386, %822, %var_13389, %823)
}

def @func_15979() -> Tensor[(1, 6, 16), bool] {
  %824 = @func_6885() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %824.1
}

def @func_5454(%var_5452: Tensor[(5, 4, 2), float32]) -> Tensor[(5, 4, 2), float32] {
  @func_5451(%var_5452) /* ty=Tensor[(5, 4, 2), float32] */
}

def @func_14379() -> (Tensor[(390), float32], Tensor[(1, 6, 16), bool]) {
  @func_14377() /* ty=(Tensor[(390), float32], Tensor[(1, 6, 16), bool]) */
}

def @func_16262() -> (Tensor[(1, 6, 16), float32], Tensor[(936), float32]) {
  %825 = @func_6722() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %826 = @func_2969() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %827 = %825.0;
  %828 = %826.3;
  (%827, %828)
}

def @func_15915() -> (Tensor[(2, 6, 16), int32],) {
  %829 = @func_12819() /* ty=(Tensor[(2, 6, 16), int32],) */;
  %830 = %829.0;
  (%830,)
}

def @func_13316() -> (Tensor[(390), float32],) {
  %833 = fn () -> (Tensor[(390), float32],) {
    %831 = @func_9981() /* ty=(Tensor[(390), float32],) */;
    %832 = %831.0;
    (%832,)
  };
  %833() /* ty=(Tensor[(390), float32],) */
}

def @func_16060() -> Tensor[(1, 6, 16), bool] {
  @func_8514() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_10299() -> (Tensor[(2, 6, 16), bool], Tensor[(8, 6, 16), int8]) {
  %836 = fn () -> (Tensor[(2, 6, 16), bool], Tensor[(8, 6, 16), int8]) {
    %834 = @func_8267() /* ty=Tensor[(2, 6, 16), bool] */;
    %835 = @func_8129() /* ty=Tensor[(8, 6, 16), int8] */;
    (%834, %835)
  };
  %836() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(8, 6, 16), int8]) */
}

def @func_9981() -> (Tensor[(390), float32],) {
  %837 = @func_2885() /* ty=(Tensor[(390), float32], Tensor[(2, 6, 16), bool]) */;
  %838 = %837.0;
  (%838,)
}

def @func_6511() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  @func_6509() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_5028() -> (Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) {
  @func_5026() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) */
}

def @func_2700() -> (Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32]) {
  @func_2698() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32]) */
}

def @func_3198() -> Tensor[(13, 5, 6), float32] {
  %840 = fn () -> Tensor[(13, 5, 6), float32] {
    %839 = @func_1292() /* ty=(Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), float64]) */;
    %839.3
  };
  %840() /* ty=Tensor[(13, 5, 6), float32] */
}

def @func_8864() -> (Tensor[(1, 6, 16), bool],) {
  %841 = @func_5070() /* ty=Tensor[(1, 6, 16), bool] */;
  (%841,)
}

def @func_2379() -> (Tensor[(1, 6, 16), bool],) {
  %842 = @func_2097() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(390), float32]) */;
  %843 = %842.0;
  (%843,)
}

def @func_6053() -> Tensor[(1, 6, 16), bool] {
  @func_6051() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_11503() -> Tensor[(8, 6, 16), int8] {
  %844 = @func_6087() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(8, 6, 16), int8]) */;
  %844.1
}

def @func_10161() -> (Tensor[(8, 6, 16), int8],) {
  %845 = @func_7739() /* ty=(Tensor[(8, 6, 16), int8],) */;
  %846 = %845.0;
  (%846,)
}

def @func_10438(%var_10436: Tensor[(9, 8, 5), uint64], %var_10437: Tensor[(9, 8, 5), uint64]) -> (Tensor[(9, 8, 5), uint64], Tensor[(2, 6, 16), bool], Tensor[(9, 8, 5), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  @func_10434(%var_10436, %var_10437) /* ty=(Tensor[(9, 8, 5), uint64], Tensor[(2, 6, 16), bool], Tensor[(9, 8, 5), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_1622() -> (Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(?, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) {
  @func_1620() /* ty=(Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(?, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */
}

def @func_10765() -> (Tensor[(8, 6, 16), int8], Tensor[(1, 6, 16), float32], Tensor[(11, 7, 16), float64], Tensor[(1232), float64], Tensor[(16, 6, 16), bool]) {
  @func_10763() /* ty=(Tensor[(8, 6, 16), int8], Tensor[(1, 6, 16), float32], Tensor[(11, 7, 16), float64], Tensor[(1232), float64], Tensor[(16, 6, 16), bool]) */
}

def @func_11518() -> Tensor[(1, 6, 16), bool] {
  %847 = @func_2059() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %847.1
}

def @func_14074() -> Tensor[(?, 6, 16), int8] {
  %848 = @func_10378() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) */;
  %848.0
}

def @func_12271() -> (Tensor[(1, 6, 16), bool],) {
  @func_12269() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_8516() -> Tensor[(1, 6, 16), bool] {
  @func_8514() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_6685() -> (Tensor[(15, 6, 16), bool],) {
  %849 = @func_990() /* ty=(Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) */;
  %850 = %849.0;
  %851 = cast(%850, dtype="bool") /* ty=Tensor[(?, 6, 16), bool] */;
  %852 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 6, 16), int64] */, dtype="bool") /* ty=Tensor[(15, 6, 16), bool] */;
  %853 = logical_and(%851, %852) /* ty=Tensor[(15, 6, 16), bool] */;
  (%853,)
}

def @func_7430() -> (Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool]) {
  %858 = fn () -> (Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool]) {
    %854 = @func_6664() /* ty=(Tensor[(2, 6, 16), int32],) */;
    %855 = @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %856 = %854.0;
    %857 = %855.0;
    (%856, %857)
  };
  %858() /* ty=(Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool]) */
}

def @func_6806() -> Tensor[(1, 6, 16), bool] {
  %860 = fn () -> Tensor[(1, 6, 16), bool] {
    %859 = @func_3988() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %859.0
  };
  %860() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_10080() -> (Tensor[(1, 6, 16), bool],) {
  @func_10078() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_9830(%var_9829: uint16) -> (Tensor[(5, 11, 14), uint16], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool], Tensor[(13, 5, 6), float32]) {
  %870 = fn (%var_9763: uint16) -> (Tensor[(5, 11, 14), uint16], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool], Tensor[(13, 5, 6), float32]) {
    %861 = cast(%var_9763, dtype="uint16") /* ty=uint16 */;
    %862 = cast(meta[relay.Constant][33] /* ty=Tensor[(5, 11, 14), uint16] */, dtype="uint16") /* ty=Tensor[(5, 11, 14), uint16] */;
    %863 = @func_2059() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
    %864 = @func_2885() /* ty=(Tensor[(390), float32], Tensor[(2, 6, 16), bool]) */;
    %865 = @func_5371() /* ty=(Tensor[(13, 5, 6), float32],) */;
    %866 = bitwise_and(%861, %862) /* ty=Tensor[(5, 11, 14), uint16] */;
    %867 = %863.1;
    %868 = %864.1;
    %869 = %865.0;
    (%866, %867, %868, %869)
  };
  %870(%var_9829) /* ty=(Tensor[(5, 11, 14), uint16], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool], Tensor[(13, 5, 6), float32]) */
}

def @func_3177() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) {
  %871 = @func_2444() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %872 = @func_2558() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 390), float32]) */;
  %873 = %871.0;
  %874 = %872.2;
  (%873, %874)
}

def @func_4688(%var_4681: Tensor[(308), float64]) -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(308), float64]) {
  %875 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %876 = cast(%var_4681, dtype="float64") /* ty=Tensor[(308), float64] */;
  %877 = reshape(%876, newshape=[14, 11, 2]) /* ty=Tensor[(14, 11, 2), float64] */;
  %878 = @func_1769(%877) /* ty=(Tensor[(14, 11, 2), float64], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %879 = %875.0;
  %880 = %878.3;
  (%879, %880, %var_4681)
}

def @func_9731(%var_9729: Tensor[(6, 15, 2), float64]) -> (Tensor[(6, 15, 2), bool], Tensor[(6, 15, 2), float32]) {
  @func_9728(%var_9729) /* ty=(Tensor[(6, 15, 2), bool], Tensor[(6, 15, 2), float32]) */
}

def @func_2098() -> (Tensor[(1, 6, 16), bool], Tensor[(390), float32]) {
  %885 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(390), float32]) {
    %881 = @func_1692() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %882 = @func_1375() /* ty=(Tensor[(390), float32],) */;
    %883 = %881.0;
    %884 = %882.0;
    (%883, %884)
  };
  %885() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(390), float32]) */
}

def @func_7349() -> (Tensor[(2, 6, 16), bool], Tensor[(3, 16, 7), int32], Tensor[(336), int32]) {
  %892 = fn () -> (Tensor[(2, 6, 16), bool], Tensor[(3, 16, 7), int32], Tensor[(336), int32]) {
    %886 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
    %887 = cast(meta[relay.Constant][34] /* ty=Tensor[(336), int32] */, dtype="int32") /* ty=Tensor[(336), int32] */;
    %888 = reshape(%887, newshape=[336]) /* ty=Tensor[(336), int32] */;
    %889 = @func_6298(%888) /* ty=(Tensor[(2, 6, 16), bool], Tensor[(3, 16, 7), int32], Tensor[(7, 1), int32], Tensor[(336), int32]) */;
    %890 = %886.0;
    %891 = %889.1;
    (%890, %891, meta[relay.Constant][34] /* ty=Tensor[(336), int32] */)
  };
  %892() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(3, 16, 7), int32], Tensor[(336), int32]) */
}

def @func_909() -> (Tensor[(1, 6, 16), bool],) {
  @func_907() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_11505() -> Tensor[(8, 6, 16), int8] {
  @func_11503() /* ty=Tensor[(8, 6, 16), int8] */
}

def @func_3258() -> Tensor[(1, 6, 16), bool] {
  @func_580() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_14364() -> Tensor[(390), float32] {
  %894 = fn () -> Tensor[(390), float32] {
    %893 = @func_9981() /* ty=(Tensor[(390), float32],) */;
    %893.0
  };
  %894() /* ty=Tensor[(390), float32] */
}

def @func_1421(%var_1420: Tensor[(288), float32]) -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) {
  %904 = fn (%var_1415: Tensor[(288), float32]) -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) {
    %895 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %896 = @func_1136() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %897 = cast(%var_1415, dtype="float32") /* ty=Tensor[(288), float32] */;
    %898 = reshape(%897, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
    %899 = @func_899(%898) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(3, 6, 16), bool]) */;
    %900 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
    %901 = %895.0;
    %902 = %896.1;
    %903 = %899.0;
    (%900, %901, %902, %903, %var_1415)
  };
  %904(%var_1420) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */
}

def @func_10329(%var_10327: Tensor[(4, 390), bool]) -> (Tensor[(4, 390), float64], Tensor[(1, 6, 16), float32]) {
  @func_10326(%var_10327) /* ty=(Tensor[(4, 390), float64], Tensor[(1, 6, 16), float32]) */
}

def @func_8313() -> (Tensor[(13, 5, 6), float32],) {
  %905 = @func_5255() /* ty=(Tensor[(13, 5, 6), float32], Tensor[(936), float32]) */;
  %906 = %905.0;
  (%906,)
}

def @func_7469() -> Tensor[(1, 6, 16), float32] {
  @func_7467() /* ty=Tensor[(1, 6, 16), float32] */
}

def @func_12968() -> Tensor[(8, 6, 16), int8] {
  @func_12966() /* ty=Tensor[(8, 6, 16), int8] */
}

def @func_8746() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  @func_8744() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */
}

def @func_1950() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %910 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
    %907 = @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %908 = @func_1697() /* ty=Tensor[(1, 6, 16), bool] */;
    %909 = %907.0;
    (%908, %909)
  };
  %910() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_14837(%var_14836: Tensor[(288), float32]) -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 6), float32], Tensor[(288), float32], Tensor[(1, 6, 16), bool], Tensor[(390), float32]) {
  %925 = fn (%var_14795: Tensor[(288), float32]) -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 6), float32], Tensor[(288), float32], Tensor[(1, 6, 16), bool], Tensor[(390), float32]) {
    %911 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
    %912 = @func_5216() /* ty=(Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
    %913 = @func_4753() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %914 = cast(%var_14795, dtype="float32") /* ty=Tensor[(288), float32] */;
    %915 = reshape(%914, newshape=[8, 6, 6]) /* ty=Tensor[(8, 6, 6), float32] */;
    %916 = @func_2194(%915) /* ty=(Tensor[(8, 6, 6), float32],) */;
    %917 = @func_8864() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %918 = @func_2885() /* ty=(Tensor[(390), float32], Tensor[(2, 6, 16), bool]) */;
    %919 = %911.0;
    %920 = %912.1;
    %921 = %913.0;
    %922 = %916.0;
    %923 = %917.0;
    %924 = %918.0;
    (%919, %920, %921, %922, %var_14795, %923, %924)
  };
  %925(%var_14836) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 6), float32], Tensor[(288), float32], Tensor[(1, 6, 16), bool], Tensor[(390), float32]) */
}

def @func_15209() -> (Tensor[(8, 6, 16), int8], Tensor[(2, 6, 16), int32], Tensor[(48, 4), bool], Tensor[(390), float32], Tensor[(2, 6, 16), bool]) {
  %926 = cast(meta[relay.Constant][35] /* ty=Tensor[(48, 4), bool] */, dtype="bool") /* ty=Tensor[(48, 4), bool] */;
  %927 = cast(meta[relay.Constant][36] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
  %928 = reshape(%926, newshape=[192]) /* ty=Tensor[(192), bool] */;
  %929 = reshape(%927, newshape=[390]) /* ty=Tensor[(390), float32] */;
  %930 = @func_1855(%928, %929) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(192), bool], Tensor[(2, 6, 16), int32]) */;
  %931 = @func_8025() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %932 = @func_12966() /* ty=Tensor[(8, 6, 16), int8] */;
  %933 = %930.7;
  %934 = %931.0;
  (%932, %933, meta[relay.Constant][35] /* ty=Tensor[(48, 4), bool] */, meta[relay.Constant][36] /* ty=Tensor[(390), float32] */, %934)
}

def @func_14351() -> Tensor[(8, 6, 16), int8] {
  @func_14349() /* ty=Tensor[(8, 6, 16), int8] */
}

def @func_4924(%var_4900: Tensor[(13, 8, 9), float32]) -> (Tensor[(13, 8, 9), uint32], Tensor[(?, 6, 16), bool]) {
  %935 = @func_2698() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32]) */;
  %936 = %935.1;
  %937 = cast(%var_4900, dtype="uint32") /* ty=Tensor[(13, 8, 9), uint32] */;
  %938 = shape_of(%936, dtype="int32") /* ty=Tensor[(3), int32] */;
  %939 = cast(%936, dtype="uint32") /* ty=Tensor[(13, 8, 9), uint32] */;
  %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %941 = @func_3988() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %942 = %941.0;
  %943 = @func_3349() /* ty=Tensor[(1, 6, 16), bool] */;
  %944 = cast(%943, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %945 = shape_of(%942, dtype="int32") /* ty=Tensor[(3), int32] */;
  %946 = cast(%942, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %948 = add(%939, %940) /* ty=Tensor[(13, 8, 9), uint32] */;
  %949 = greater_equal(%946, %947) /* ty=Tensor[(?, 6, 16), bool] */;
  (%948, %949)
}

def @func_5613() -> (Tensor[(1, 6, 16), bool],) {
  %950 = @func_3903() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %951 = %950.1;
  (%951,)
}

def @func_5930() -> (Tensor[(2, 6, 16), int32],) {
  @func_5928() /* ty=(Tensor[(2, 6, 16), int32],) */
}

def @func_15134() -> (Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), bool]) {
  %952 = @func_14239() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %953 = @func_1205() /* ty=Tensor[(2, 6, 16), int32] */;
  %954 = %952.0;
  (%953, %954)
}

def @func_582() -> Tensor[(1, 6, 16), bool] {
  @func_580() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_14562() -> (Tensor[(936), float32], Tensor[(1, 6, 16), bool]) {
  %955 = @func_5255() /* ty=(Tensor[(13, 5, 6), float32], Tensor[(936), float32]) */;
  %956 = %955.1;
  %957 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
  (%956, %957)
}

def @func_11030() -> Tensor[(2, 6, 16), float64] {
  %959 = fn () -> Tensor[(2, 6, 16), float64] {
    %958 = @func_8963() /* ty=(Tensor[(2, 6, 16), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) */;
    %958.0
  };
  %959() /* ty=Tensor[(2, 6, 16), float64] */
}

def @func_3617() -> (Tensor[(2, 6, 16), int32],) {
  %961 = fn () -> (Tensor[(2, 6, 16), int32],) {
    %960 = @func_1205() /* ty=Tensor[(2, 6, 16), int32] */;
    (%960,)
  };
  %961() /* ty=(Tensor[(2, 6, 16), int32],) */
}

def @func_12288() -> (Tensor[(1, 6, 16), float32],) {
  %962 = @func_7467() /* ty=Tensor[(1, 6, 16), float32] */;
  (%962,)
}

def @func_5072() -> Tensor[(1, 6, 16), bool] {
  @func_5070() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_2336() -> (Tensor[(2, 6, 16), bool],) {
  %963 = @func_1038() /* ty=Tensor[(2, 6, 16), int32] */;
  %964 = @func_1056() /* ty=Tensor[(1, 6, 16), bool] */;
  %965 = cast(%963, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
  %966 = cast(%964, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %967 = greater_equal(%965, %966) /* ty=Tensor[(2, 6, 16), bool] */;
  (%967,)
}

def @func_17158(%var_17157: Tensor[(2, 20), float64]) -> (Tensor[(1, 6, 16), bool], Tensor[(4, 2, 5), float64], Tensor[(2, 20), float64]) {
  %974 = fn (%var_17152: Tensor[(2, 20), float64]) -> (Tensor[(1, 6, 16), bool], Tensor[(4, 2, 5), float64], Tensor[(2, 20), float64]) {
    %968 = @func_14377() /* ty=(Tensor[(390), float32], Tensor[(1, 6, 16), bool]) */;
    %969 = cast(%var_17152, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
    %970 = reshape(%969, newshape=[4, 2, 5]) /* ty=Tensor[(4, 2, 5), float64] */;
    %971 = @func_7297(%970) /* ty=(Tensor[(4, 2, 5), float64],) */;
    %972 = %968.1;
    %973 = %971.0;
    (%972, %973, %var_17152)
  };
  %974(%var_17157) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(4, 2, 5), float64], Tensor[(2, 20), float64]) */
}

def @func_4659(%var_4658: uint8) -> (Tensor[(6, 8, 15), uint8],) {
  %978 = fn (%var_4644: uint8) -> (Tensor[(6, 8, 15), uint8],) {
    %975 = cast(%var_4644, dtype="uint8") /* ty=uint8 */;
    %976 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 8, 15), uint8] */, dtype="uint8") /* ty=Tensor[(6, 8, 15), uint8] */;
    %977 = logical_xor(%975, %976) /* ty=Tensor[(6, 8, 15), uint8] */;
    (%977,)
  };
  %978(%var_4658) /* ty=(Tensor[(6, 8, 15), uint8],) */
}

def @func_820() -> (Tensor[(1, 6, 16), float32],) {
  %979 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %980 = %979.0;
  %981 = cast(%980, dtype="float64") /* ty=Tensor[(1, 6, 16), float64] */;
  %982 = asinh(%981) /* ty=Tensor[(1, 6, 16), float64] */;
  %983 = cast(%982, dtype="float32") /* ty=Tensor[(1, 6, 16), float32] */;
  %984 = sin(%983) /* ty=Tensor[(1, 6, 16), float32] */;
  (%984,)
}

def @func_11367(%var_11366: Tensor[(1, 360), uint64]) -> (Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 360), uint64], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), float64]) {
  %1000 = fn (%var_11289: Tensor[(1, 360), uint64]) -> (Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 360), uint64], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), float64]) {
    %985 = @func_9981() /* ty=(Tensor[(390), float32],) */;
    %986 = cast(%var_11289, dtype="uint64") /* ty=Tensor[(1, 360), uint64] */;
    %987 = cast(%var_11289, dtype="uint64") /* ty=Tensor[(1, 360), uint64] */;
    %988 = reshape(%986, newshape=[9, 8, 5]) /* ty=Tensor[(9, 8, 5), uint64] */;
    %989 = reshape(%987, newshape=[9, 8, 5]) /* ty=Tensor[(9, 8, 5), uint64] */;
    %990 = @func_10434(%988, %989) /* ty=(Tensor[(9, 8, 5), uint64], Tensor[(2, 6, 16), bool], Tensor[(9, 8, 5), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %991 = @func_1949() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %992 = @func_8744() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */;
    %993 = @func_10586() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
    %994 = %985.0;
    %995 = %990.3;
    %996 = %991.0;
    %997 = %992.1;
    %998 = %993.1;
    %999 = @func_11029() /* ty=Tensor[(2, 6, 16), float64] */;
    (%994, %995, %var_11289, %996, %997, %998, %999)
  };
  %1000(%var_11366) /* ty=(Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 360), uint64], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), float64]) */
}

def @func_1858(%var_1856: Tensor[(192), bool], %var_1857: Tensor[(390), float32]) -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(192), bool], Tensor[(2, 6, 16), int32]) {
  %1016 = fn (%var_1790: Tensor[(192), bool], %var_1817: Tensor[(390), float32]) -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(192), bool], Tensor[(2, 6, 16), int32]) {
    %1001 = @func_1136() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %1002 = cast(%var_1790, dtype="bool") /* ty=Tensor[(192), bool] */;
    %1003 = reshape(%1002, newshape=[2, 6, 16]) /* ty=Tensor[(2, 6, 16), bool] */;
    %1004 = @func_487(%1003) /* ty=(Tensor[(2, 6, 16), int32],) */;
    %1005 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %1006 = cast(%var_1817, dtype="float32") /* ty=Tensor[(390), float32] */;
    %1007 = reshape(%1006, newshape=[13, 5, 6]) /* ty=Tensor[(13, 5, 6), float32] */;
    %1008 = @func_746(%1007) /* ty=(Tensor[(13, 5, 6), float32],) */;
    %1009 = @func_990() /* ty=(Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) */;
    %1010 = %1001.0;
    %1011 = %1004.0;
    %1012 = %1005.0;
    %1013 = %1008.0;
    %1014 = %1009.2;
    %1015 = @func_1038() /* ty=Tensor[(2, 6, 16), int32] */;
    (%1010, %1011, %var_1790, %1012, %1013, %var_1817, %1014, %1015)
  };
  %1016(%var_1856, %var_1857) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(192), bool], Tensor[(2, 6, 16), int32]) */
}

def @func_6188(%var_6187: Tensor[(192), bool]) -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(4, 12, 9), float32], Tensor[(432, 1), uint32], Tensor[(390), float32]) {
  %1034 = fn (%var_6155: Tensor[(192), bool]) -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(4, 12, 9), float32], Tensor[(432, 1), uint32], Tensor[(390), float32]) {
    %1017 = @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %1018 = cast(meta[relay.Constant][38] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %1019 = reshape(%1018, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %1020 = @func_1419(%1019) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
    %1021 = cast(%var_6155, dtype="bool") /* ty=Tensor[(192), bool] */;
    %1022 = reshape(%1021, newshape=[2, 6, 16]) /* ty=Tensor[(2, 6, 16), bool] */;
    %1023 = @func_487(%1022) /* ty=(Tensor[(2, 6, 16), int32],) */;
    %1024 = cast(meta[relay.Constant][39] /* ty=Tensor[(432, 1), uint32] */, dtype="uint32") /* ty=Tensor[(432, 1), uint32] */;
    %1025 = reshape(%1024, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), uint32] */;
    %1026 = @func_3792(%1025) /* ty=(Tensor[(390), float32], Tensor[(4, 12, 9), float32]) */;
    %1027 = @func_2840() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(192), bool], Tensor[(390), float32]) */;
    %1028 = @func_5070() /* ty=Tensor[(1, 6, 16), bool] */;
    %1029 = %1017.0;
    %1030 = %1020.1;
    %1031 = %1023.0;
    %1032 = %1026.1;
    %1033 = %1027.2;
    (%1028, %1029, %1030, meta[relay.Constant][38] /* ty=Tensor[(288), float32] */, %1031, %var_6155, %1032, meta[relay.Constant][39] /* ty=Tensor[(432, 1), uint32] */, %1033)
  };
  %1034(%var_6187) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(4, 12, 9), float32], Tensor[(432, 1), uint32], Tensor[(390), float32]) */
}

def @func_16896() -> (Tensor[(9, 3, 9), float64], Tensor[(9, 3, 9), float64]) {
  %1035 = @func_14766() /* ty=Tensor[(9, 3, 9), float64] */;
  %1036 = @func_14766() /* ty=Tensor[(9, 3, 9), float64] */;
  (%1035, %1036)
}

def @func_8454() -> Tensor[(390), float32] {
  %1038 = fn () -> Tensor[(390), float32] {
    %1037 = @func_1292() /* ty=(Tensor[(192), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 5, 6), float32], Tensor[(390), float32], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), float64]) */;
    %1037.4
  };
  %1038() /* ty=Tensor[(390), float32] */
}

def @func_13265(%var_13263: Tensor[(15, 13, 8), float64]) -> Tensor[(15, 13, 8), float64] {
  @func_13262(%var_13263) /* ty=Tensor[(15, 13, 8), float64] */
}

def @func_604(%var_599: Tensor[(16, 6, 16), bool]) -> (Tensor[(16, 6, 16), bool],) {
  %1039 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
  %1040 = cast(%1039, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %1041 = cast(%var_599, dtype="bool") /* ty=Tensor[(16, 6, 16), bool] */;
  %1042 = greater(%1040, %1041) /* ty=Tensor[(16, 6, 16), bool] */;
  (%1042,)
}

def @func_8027() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  @func_8025() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_17562() -> (Tensor[(?, 6, 16), int8], Tensor[(8, 6, 16), int8], Tensor[(936), float32], Tensor[(15, 3, 16), float64], Tensor[(1, 720), float64], Tensor[(1, 6, 16), bool]) {
  %1043 = @func_11908() /* ty=(Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %1044 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 720), float64] */, dtype="float64") /* ty=Tensor[(1, 720), float64] */;
  %1045 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 720), float64] */, dtype="float64") /* ty=Tensor[(1, 720), float64] */;
  %1046 = reshape(%1044, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), float64] */;
  %1047 = reshape(%1045, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), float64] */;
  %1048 = @func_7731(%1046, %1047) /* ty=(Tensor[(15, 3, 16), float64],) */;
  %1049 = @func_1136() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %1050 = @func_14074() /* ty=Tensor[(?, 6, 16), int8] */;
  %1051 = @func_11503() /* ty=Tensor[(8, 6, 16), int8] */;
  %1052 = %1043.0;
  %1053 = %1048.0;
  %1054 = %1049.2;
  (%1050, %1051, %1052, %1053, meta[relay.Constant][40] /* ty=Tensor[(1, 720), float64] */, %1054)
}

def @func_2381() -> (Tensor[(1, 6, 16), bool],) {
  @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_8817() -> (Tensor[(1, 6, 16), bool],) {
  %1057 = fn () -> (Tensor[(1, 6, 16), bool],) {
    %1055 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %1056 = %1055.0;
    (%1056,)
  };
  %1057() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_12991() -> (Tensor[(1, 6, 16), bool],) {
  %1058 = @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1059 = %1058.0;
  (%1059,)
}

def @func_3317(%var_3315: Tensor[(5, 9, 1), float32]) -> (Tensor[(5, 9, ?), int64],) {
  @func_3314(%var_3315) /* ty=(Tensor[(5, 9, ?), int64],) */
}

def @func_1137() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %1065 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
    %1060 = @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %1061 = @func_907() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %1062 = %1060.0;
    %1063 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
    %1064 = %1061.0;
    (%1062, %1063, %1064)
  };
  %1065() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_13894() -> (Tensor[(1, 6, 16), bool],) {
  %1066 = @func_5974() /* ty=Tensor[(1, 6, 16), bool] */;
  (%1066,)
}

def @func_14602() -> (Tensor[(2, 6, 16), bool],) {
  %1069 = fn () -> (Tensor[(2, 6, 16), bool],) {
    %1067 = @func_2444() /* ty=(Tensor[(2, 6, 16), bool],) */;
    %1068 = %1067.0;
    (%1068,)
  };
  %1069() /* ty=(Tensor[(2, 6, 16), bool],) */
}

def @func_13255(%var_13254: Tensor[(8, 6, 16), int8]) -> (Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), uint64], Tensor[(9, 6, 16), int64], Tensor[(864), bool], Tensor[(1, 6, 16), float32]) {
  %1089 = fn (%var_13219: Tensor[(8, 6, 16), int8]) -> (Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), uint64], Tensor[(9, 6, 16), int64], Tensor[(864), bool], Tensor[(1, 6, 16), float32]) {
    %1070 = @func_3932() /* ty=(Tensor[(8, 6, 16), int8],) */;
    %1071 = %1070.0;
    %1072 = cast(%var_13219, dtype="uint64") /* ty=Tensor[(8, 6, 16), uint64] */;
    %1073 = shape_of(%1071, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1074 = cast(%1071, dtype="uint64") /* ty=Tensor[(8, 6, 16), uint64] */;
    %1075 = dyn.reshape(%1072, %1073, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1076 = multiply(%1074, %1075) /* ty=Tensor[(8, 6, 16), uint64] */;
    %1077 = cast(%1071, dtype="uint64") /* ty=Tensor[(8, 6, 16), uint64] */;
    %1078 = shape_of(%1076, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1079 = cast(%1076, dtype="uint64") /* ty=Tensor[(8, 6, 16), uint64] */;
    %1080 = dyn.reshape(%1077, %1078, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1081 = cast(meta[relay.Constant][41] /* ty=Tensor[(864), bool] */, dtype="bool") /* ty=Tensor[(864), bool] */;
    %1082 = reshape(%1081, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), bool] */;
    %1083 = @func_10554(%1082) /* ty=(Tensor[(9, 6, 16), int64],) */;
    %1084 = @func_11908() /* ty=(Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
    %1085 = @func_10239() /* ty=Tensor[(1, 6, 16), bool] */;
    %1086 = bitwise_xor(%1079, %1080) /* ty=Tensor[(8, 6, 16), uint64] */;
    %1087 = %1083.0;
    %1088 = %1084.2;
    (%1085, %1086, %1087, meta[relay.Constant][41] /* ty=Tensor[(864), bool] */, %1088)
  };
  %1089(%var_13254) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), uint64], Tensor[(9, 6, 16), int64], Tensor[(864), bool], Tensor[(1, 6, 16), float32]) */
}

def @func_15830() -> Tensor[(9, 3, 9), float64] {
  %1090 = fn () -> Tensor[(9, 3, 9), float64] {
    @func_14766() /* ty=Tensor[(9, 3, 9), float64] */
  };
  %1090() /* ty=Tensor[(9, 3, 9), float64] */
}

def @func_8875(%var_8874: Tensor[(11, 7, 16), float64]) -> (Tensor[(11, 7, 16), float64],) {
  %1093 = fn (%var_8867: Tensor[(11, 7, 16), float64]) -> (Tensor[(11, 7, 16), float64],) {
    %1091 = cast(%var_8867, dtype="float64") /* ty=Tensor[(11, 7, 16), float64] */;
    %1092 = cosh(%1091) /* ty=Tensor[(11, 7, 16), float64] */;
    (%1092,)
  };
  %1093(%var_8874) /* ty=(Tensor[(11, 7, 16), float64],) */
}

def @func_12729() -> (Tensor[(16, 10, 15), bool],) {
  @func_12727() /* ty=(Tensor[(16, 10, 15), bool],) */
}

def @func_17716() -> (Tensor[(8, 6, 16), int8], Tensor[(1, 390), float32]) {
  %1098 = fn () -> (Tensor[(8, 6, 16), int8], Tensor[(1, 390), float32]) {
    %1094 = @func_7739() /* ty=(Tensor[(8, 6, 16), int8],) */;
    %1095 = @func_3177() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) */;
    %1096 = %1094.0;
    %1097 = %1095.1;
    (%1096, %1097)
  };
  %1098() /* ty=(Tensor[(8, 6, 16), int8], Tensor[(1, 390), float32]) */
}

def @func_3673() -> (Tensor[(?, 6, 16), int8],) {
  %1107 = fn () -> (Tensor[(?, 6, 16), int8],) {
    %1099 = @func_1056() /* ty=Tensor[(1, 6, 16), bool] */;
    %1100 = cast(%1099, dtype="float32") /* ty=Tensor[(1, 6, 16), float32] */;
    %1101 = asin(%1100) /* ty=Tensor[(1, 6, 16), float32] */;
    %1102 = cast(%1099, dtype="int8") /* ty=Tensor[(1, 6, 16), int8] */;
    %1103 = shape_of(%1101, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1104 = cast(%1101, dtype="int8") /* ty=Tensor[(1, 6, 16), int8] */;
    %1105 = dyn.reshape(%1102, %1103, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1106 = minimum(%1104, %1105) /* ty=Tensor[(?, 6, 16), int8] */;
    (%1106,)
  };
  %1107() /* ty=(Tensor[(?, 6, 16), int8],) */
}

def @func_4088() -> Tensor[(1, 6, 16), float32] {
  %1109 = fn () -> Tensor[(1, 6, 16), float32] {
    %1108 = @func_2969() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
    %1108.0
  };
  %1109() /* ty=Tensor[(1, 6, 16), float32] */
}

def @func_5372() -> (Tensor[(13, 5, 6), float32],) {
  %1113 = fn () -> (Tensor[(13, 5, 6), float32],) {
    %1110 = @func_3197() /* ty=Tensor[(13, 5, 6), float32] */;
    %1111 = cast(%1110, dtype="float32") /* ty=Tensor[(13, 5, 6), float32] */;
    %1112 = rsqrt(%1111) /* ty=Tensor[(13, 5, 6), float32] */;
    (%1112,)
  };
  %1113() /* ty=(Tensor[(13, 5, 6), float32],) */
}

def @func_8090() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  @func_8088() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_17497() -> (Tensor[(1, 6, 16), bool], Tensor[(432), uint32], Tensor[(2, 216), uint32]) {
  %1114 = @func_13793() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32]) */;
  %1115 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 216), uint32] */, dtype="uint32") /* ty=Tensor[(2, 216), uint32] */;
  %1116 = reshape(%1115, newshape=[432]) /* ty=Tensor[(432), uint32] */;
  %1117 = @func_14909(%1116) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(4, 12, 9), float32], Tensor[(432), uint32]) */;
  %1118 = %1114.0;
  %1119 = %1117.2;
  (%1118, %1119, meta[relay.Constant][42] /* ty=Tensor[(2, 216), uint32] */)
}

def @func_9609() -> (Tensor[(?, 6, 16), uint16],) {
  @func_9607() /* ty=(Tensor[(?, 6, 16), uint16],) */
}

def @func_1097() -> (Tensor[(1, 6, 16), bool],) {
  @func_1095() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_17564() -> (Tensor[(?, 6, 16), int8], Tensor[(8, 6, 16), int8], Tensor[(936), float32], Tensor[(15, 3, 16), float64], Tensor[(1, 720), float64], Tensor[(1, 6, 16), bool]) {
  @func_17562() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(8, 6, 16), int8], Tensor[(936), float32], Tensor[(15, 3, 16), float64], Tensor[(1, 720), float64], Tensor[(1, 6, 16), bool]) */
}

def @func_11194(%var_11192: Tensor[(8, 11, 3), float64]) -> (Tensor[(8, 11, 3), float32], Tensor[(8, 11, 3), float64], Tensor[(2, 6, 16), bool]) {
  @func_11191(%var_11192) /* ty=(Tensor[(8, 11, 3), float32], Tensor[(8, 11, 3), float64], Tensor[(2, 6, 16), bool]) */
}

def @func_15136() -> (Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), bool]) {
  @func_15134() /* ty=(Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), bool]) */
}

def @func_10240() -> Tensor[(1, 6, 16), bool] {
  %1121 = fn () -> Tensor[(1, 6, 16), bool] {
    %1120 = @func_2059() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
    %1120.1
  };
  %1121() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_1620() -> (Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(?, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) {
  %1122 = @func_990() /* ty=(Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) */;
  %1123 = @func_990() /* ty=(Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) */;
  %1124 = @func_1056() /* ty=Tensor[(1, 6, 16), bool] */;
  %1125 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
  %1126 = cast(%1125, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %1127 = shape_of(%1124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1128 = cast(%1124, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  %1129 = dyn.reshape(%1126, %1127, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1130 = cast(meta[relay.Constant][43] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1131 = reshape(%1130, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %1132 = @func_899(%1131) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(3, 6, 16), bool]) */;
  %1133 = %1122.1;
  %1134 = %1123.2;
  %1135 = equal(%1128, %1129) /* ty=Tensor[(?, 6, 16), bool] */;
  %1136 = @func_1038() /* ty=Tensor[(2, 6, 16), int32] */;
  %1137 = @func_1038() /* ty=Tensor[(2, 6, 16), int32] */;
  %1138 = %1132.0;
  (%1133, %1134, %1135, %1136, %1137, %1138, meta[relay.Constant][43] /* ty=Tensor[(288), float32] */)
}

def @func_13181() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  @func_13179() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */
}

def @func_7740() -> (Tensor[(8, 6, 16), int8],) {
  %1141 = fn () -> (Tensor[(8, 6, 16), int8],) {
    %1139 = @func_3932() /* ty=(Tensor[(8, 6, 16), int8],) */;
    %1140 = %1139.0;
    (%1140,)
  };
  %1141() /* ty=(Tensor[(8, 6, 16), int8],) */
}

def @func_992() -> (Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) {
  @func_990() /* ty=(Tensor[(?, 6, 16), int64], Tensor[(2, 6, 16), int32], Tensor[(192), bool]) */
}

def @func_17476(%var_17474: Tensor[(12, 2, 6), uint8], %var_17475: Tensor[(12, 2, 6), uint8]) -> (Tensor[(12, 2, 6), uint8], Tensor[(9, 3, 9), float64], Tensor[(3, 6, 16), bool], Tensor[(72, 4), float32], Tensor[(1, 6, 16), bool], Tensor[(77, 4), float64]) {
  @func_17472(%var_17474, %var_17475) /* ty=(Tensor[(12, 2, 6), uint8], Tensor[(9, 3, 9), float64], Tensor[(3, 6, 16), bool], Tensor[(72, 4), float32], Tensor[(1, 6, 16), bool], Tensor[(77, 4), float64]) */
}

def @func_2465(%var_2464: Tensor[(288), float32]) -> (Tensor[(1, 6, 16), float64], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) {
  %1150 = fn (%var_2461: Tensor[(288), float32]) -> (Tensor[(1, 6, 16), float64], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) {
    %1142 = @func_2059() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
    %1143 = %1142.0;
    %1144 = cast(%1143, dtype="float64") /* ty=Tensor[(1, 6, 16), float64] */;
    %1145 = cast(%var_2461, dtype="float32") /* ty=Tensor[(288), float32] */;
    %1146 = reshape(%1145, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
    %1147 = @func_899(%1146) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(3, 6, 16), bool]) */;
    %1148 = sinh(%1144) /* ty=Tensor[(1, 6, 16), float64] */;
    %1149 = %1147.0;
    (%1148, %1149, %var_2461)
  };
  %1150(%var_2464) /* ty=(Tensor[(1, 6, 16), float64], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */
}

def @func_5655() -> (Tensor[(2, 6, 16), bool],) {
  %1151 = @func_5392() /* ty=Tensor[(2, 6, 16), bool] */;
  (%1151,)
}

def @func_17374() -> (Tensor[(390), float32], Tensor[(1, 6, 16), bool]) {
  %1152 = @func_11055() /* ty=(Tensor[(390), float32],) */;
  %1153 = @func_7093() /* ty=(Tensor[(15, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %1154 = %1152.0;
  %1155 = %1153.1;
  (%1154, %1155)
}

def @func_5451(%var_5444: Tensor[(5, 4, 2), float32]) -> Tensor[(5, 4, 2), float32] {
  %1156 = cast(%var_5444, dtype="float32") /* ty=Tensor[(5, 4, 2), float32] */;
  acosh(%1156) /* ty=Tensor[(5, 4, 2), float32] */
}

def @func_3230() -> (Tensor[(192), bool],) {
  %1157 = @func_2840() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(192), bool], Tensor[(390), float32]) */;
  %1158 = %1157.1;
  (%1158,)
}

def @func_12880() -> Tensor[(2, 6, 16), float64] {
  @func_12878() /* ty=Tensor[(2, 6, 16), float64] */
}

def @func_10763() -> (Tensor[(8, 6, 16), int8], Tensor[(1, 6, 16), float32], Tensor[(11, 7, 16), float64], Tensor[(1232), float64], Tensor[(16, 6, 16), bool]) {
  %1159 = @func_7901() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1160 = cast(meta[relay.Constant][44] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %1161 = reshape(%1160, newshape=[11, 7, 16]) /* ty=Tensor[(11, 7, 16), float64] */;
  %1162 = @func_8873(%1161) /* ty=(Tensor[(11, 7, 16), float64],) */;
  %1163 = @func_1992() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(16, 6, 16), bool], Tensor[(1536), bool]) */;
  %1164 = @func_8129() /* ty=Tensor[(8, 6, 16), int8] */;
  %1165 = %1159.0;
  %1166 = %1162.0;
  %1167 = %1163.1;
  (%1164, %1165, %1166, meta[relay.Constant][44] /* ty=Tensor[(1232), float64] */, %1167)
}

def @func_15809(%var_15805: Tensor[(288), float32]) -> (Tensor[(336), int32], Tensor[(1, 6, 16), float64], Tensor[(288), float32]) {
  %1168 = @func_7348() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(3, 16, 7), int32], Tensor[(336), int32]) */;
  %1169 = cast(%var_15805, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1170 = reshape(%1169, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1171 = @func_3419(%1170) /* ty=(Tensor[(192), bool], Tensor[(2, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32], Tensor[(1, 6, 16), float64]) */;
  %1172 = %1168.2;
  %1173 = %1171.5;
  (%1172, %1173, %var_15805)
}

def @func_4691(%var_4689: Tensor[(308), float64]) -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(308), float64]) {
  @func_4688(%var_4689) /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(308), float64]) */
}

def @func_6925() -> (Tensor[(2, 6, 16), bool],) {
  %1174 = @func_2444() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %1175 = %1174.0;
  (%1175,)
}

def @func_1693() -> (Tensor[(1, 6, 16), bool],) {
  %1178 = fn () -> (Tensor[(1, 6, 16), bool],) {
    %1176 = @func_1136() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %1177 = %1176.0;
    (%1177,)
  };
  %1178() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_16000() -> (Tensor[(1, 6, 16), bool],) {
  %1179 = @func_10149() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1180 = %1179.0;
  (%1180,)
}

def @func_15981() -> Tensor[(1, 6, 16), bool] {
  @func_15979() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_16503(%var_16501: Tensor[(336), int32]) -> (Tensor[(15, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool], Tensor[(336), int32]) {
  @func_16500(%var_16501) /* ty=(Tensor[(15, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool], Tensor[(336), int32]) */
}

def @func_15452(%var_15450: Tensor[(15, 6, 16), bool]) -> (Tensor[(15, 6, 16), uint32],) {
  @func_15449(%var_15450) /* ty=(Tensor[(15, 6, 16), uint32],) */
}

def @func_5107() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(288, 1), float32]) {
  @func_5105() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(288, 1), float32]) */
}

def @func_16131() -> (Tensor[(1, 6, 16), bool], Tensor[(768), int8], Tensor[(9, 6, 16), float64]) {
  %1181 = @func_3552() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1182 = %1181.0;
  %1183 = cast(meta[relay.Constant][45] /* ty=Tensor[(768), int8] */, dtype="int8") /* ty=Tensor[(768), int8] */;
  %1184 = reshape(%1183, newshape=[8, 6, 16]) /* ty=Tensor[(8, 6, 16), int8] */;
  %1185 = @func_13253(%1184) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), uint64], Tensor[(9, 6, 16), int64], Tensor[(864), bool], Tensor[(1, 6, 16), float32]) */;
  %1186 = %1185.2;
  %1187 = cast(%1182, dtype="float64") /* ty=Tensor[(1, 6, 16), float64] */;
  %1188 = cast(%1186, dtype="float64") /* ty=Tensor[(9, 6, 16), float64] */;
  %1189 = @func_8559() /* ty=Tensor[(1, 6, 16), bool] */;
  %1190 = floor_divide(%1187, %1188) /* ty=Tensor[(9, 6, 16), float64] */;
  (%1189, meta[relay.Constant][45] /* ty=Tensor[(768), int8] */, %1190)
}

def @func_13988() -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), float64], Tensor[(40), float64], Tensor[(1, 6, 16), bool]) {
  %1191 = @func_11067() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1192 = cast(meta[relay.Constant][46] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %1193 = reshape(%1192, newshape=[1, 40]) /* ty=Tensor[(1, 40), float64] */;
  %1194 = @func_12670(%1193) /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 40), float64], Tensor[(2, 6, 16), float64], Tensor[(4, 2, 5), float32]) */;
  %1195 = %1191.0;
  %1196 = %1194.2;
  %1197 = @func_4814() /* ty=Tensor[(1, 6, 16), bool] */;
  (%1195, %1196, meta[relay.Constant][46] /* ty=Tensor[(40), float64] */, %1197)
}

def @main(%var_17882: Tensor[(5, 13, 13), int8], %var_17883: Tensor[(5, 13, 13), int8]) -> Tensor[(5, 13, 13), int8] {
  %1198 = cast(%var_17883, dtype="int8") /* ty=Tensor[(5, 13, 13), int8] */;
  %1199 = shape_of(%var_17882, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1200 = cast(%var_17882, dtype="int8") /* ty=Tensor[(5, 13, 13), int8] */;
  %1201 = dyn.reshape(%1198, %1199, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  right_shift(%1200, %1201) /* ty=Tensor[(5, 13, 13), int8] */
}

def @func_2885() -> (Tensor[(390), float32], Tensor[(2, 6, 16), bool]) {
  %1202 = @func_1375() /* ty=(Tensor[(390), float32],) */;
  %1203 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %1204 = %1202.0;
  %1205 = %1203.0;
  (%1204, %1205)
}

def @func_5070() -> Tensor[(1, 6, 16), bool] {
  %1206 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1206.0
}

def @func_1377() -> (Tensor[(390), float32],) {
  @func_1375() /* ty=(Tensor[(390), float32],) */
}

def @func_3050(%var_3018: Tensor[(936), float32]) -> (Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  %1207 = @func_2059() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %1208 = @func_2444() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %1209 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1210 = cast(%var_3018, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1211 = reshape(%1210, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
  %1212 = @func_1883(%1211) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32]) */;
  %1213 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
  %1214 = @func_820() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1215 = %1207.3;
  %1216 = %1208.0;
  %1217 = %1209.0;
  %1218 = %1212.1;
  %1219 = %1213.0;
  %1220 = %1214.0;
  (%1215, %1216, %1217, %1218, %var_3018, %1219, %1220)
}

def @func_16792() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  @func_16790() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */
}

def @func_17624() -> (Tensor[(390), float32],) {
  %1221 = @func_9206() /* ty=(Tensor[(13, 5, 6), float32], Tensor[(390), float32]) */;
  %1222 = %1221.1;
  (%1222,)
}

def @func_16666() -> Tensor[(1, 6, 16), bool] {
  %1223 = fn () -> Tensor[(1, 6, 16), bool] {
    @func_1728() /* ty=Tensor[(1, 6, 16), bool] */
  };
  %1223() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_8744() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  %1224 = @func_5887() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1225 = @func_3739() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1226 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1227 = %1224.0;
  %1228 = %1225.0;
  %1229 = %1226.0;
  (%1227, %1228, %1229)
}

def @func_13452() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(360, 1), uint64], Tensor[(9, 8, 5), float32]) {
  %1242 = fn () -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(360, 1), uint64], Tensor[(9, 8, 5), float32]) {
    %1230 = @func_6441() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %1231 = @func_10078() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %1232 = cast(meta[relay.Constant][47] /* ty=Tensor[(360, 1), uint64] */, dtype="uint64") /* ty=Tensor[(360, 1), uint64] */;
    %1233 = cast(meta[relay.Constant][47] /* ty=Tensor[(360, 1), uint64] */, dtype="uint64") /* ty=Tensor[(360, 1), uint64] */;
    %1234 = reshape(%1232, newshape=[9, 8, 5]) /* ty=Tensor[(9, 8, 5), uint64] */;
    %1235 = reshape(%1233, newshape=[9, 8, 5]) /* ty=Tensor[(9, 8, 5), uint64] */;
    %1236 = @func_10434(%1234, %1235) /* ty=(Tensor[(9, 8, 5), uint64], Tensor[(2, 6, 16), bool], Tensor[(9, 8, 5), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %1237 = %1236.2;
    %1238 = cast(%1237, dtype="float32") /* ty=Tensor[(9, 8, 5), float32] */;
    %1239 = %1230.0;
    %1240 = %1231.0;
    %1241 = erf(%1238) /* ty=Tensor[(9, 8, 5), float32] */;
    (%1239, %1240, meta[relay.Constant][47] /* ty=Tensor[(360, 1), uint64] */, %1241)
  };
  %1242() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(360, 1), uint64], Tensor[(9, 8, 5), float32]) */
}

def @func_681() -> (Tensor[(1, 6, 16), bool],) {
  %1243 = @func_580() /* ty=Tensor[(1, 6, 16), bool] */;
  (%1243,)
}

def @func_9444(%var_9443: Tensor[(4, 390), bool]) -> (Tensor[(1, 6, 16), float32], Tensor[(4, 390), float64]) {
  %1252 = fn (%var_9435: Tensor[(4, 390), bool]) -> (Tensor[(1, 6, 16), float32], Tensor[(4, 390), float64]) {
    %1244 = @func_6722() /* ty=(Tensor[(1, 6, 16), float32],) */;
    %1245 = @func_8209() /* ty=Tensor[(4, 390), bool] */;
    %1246 = cast(%var_9435, dtype="float64") /* ty=Tensor[(4, 390), float64] */;
    %1247 = shape_of(%1245, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1248 = cast(%1245, dtype="float64") /* ty=Tensor[(4, 390), float64] */;
    %1249 = dyn.reshape(%1246, %1247, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1250 = %1244.0;
    %1251 = power(%1248, %1249) /* ty=Tensor[(4, 390), float64] */;
    (%1250, %1251)
  };
  %1252(%var_9443) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(4, 390), float64]) */
}

def @func_17274() -> (Tensor[(2, 6, 16), bool],) {
  @func_17272() /* ty=(Tensor[(2, 6, 16), bool],) */
}

def @func_7248() -> (Tensor[(1, 6, 16), bool], Tensor[(8, 6, 6), float32], Tensor[(1, 6, 16), float32], Tensor[(2, 144), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) {
  @func_7246() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 6), float32], Tensor[(1, 6, 16), float32], Tensor[(2, 144), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */
}

def @func_7864() -> (Tensor[(8, 6, 16), int8], Tensor[(288, 1), float32], Tensor[(1, 6, 16), bool], Tensor[(15, 6, 16), bool]) {
  %1253 = @func_7739() /* ty=(Tensor[(8, 6, 16), int8],) */;
  %1254 = @func_5105() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(288, 1), float32]) */;
  %1255 = @func_6685() /* ty=(Tensor[(15, 6, 16), bool],) */;
  %1256 = %1253.0;
  %1257 = %1254.2;
  %1258 = @func_1697() /* ty=Tensor[(1, 6, 16), bool] */;
  %1259 = %1255.0;
  (%1256, %1257, %1258, %1259)
}

def @func_6724() -> (Tensor[(1, 6, 16), float32],) {
  @func_6722() /* ty=(Tensor[(1, 6, 16), float32],) */
}

def @func_7813() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool], Tensor[(432, 1), uint32], Tensor[(936), float32]) {
  %1260 = @func_1095() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1261 = @func_1038() /* ty=Tensor[(2, 6, 16), int32] */;
  %1262 = cast(%1261, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
  %1263 = reshape(%1262, newshape=[192]) /* ty=Tensor[(192), bool] */;
  %1264 = @func_6186(%1263) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32], Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(4, 12, 9), float32], Tensor[(432, 1), uint32], Tensor[(390), float32]) */;
  %1265 = @func_5216() /* ty=(Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
  %1266 = @func_7467() /* ty=Tensor[(1, 6, 16), float32] */;
  %1267 = %1260.0;
  %1268 = @func_1056() /* ty=Tensor[(1, 6, 16), bool] */;
  %1269 = %1264.7;
  %1270 = %1265.2;
  (%1266, %1267, %1261, %1268, %1269, %1270)
}

def @func_3232() -> (Tensor[(192), bool],) {
  @func_3230() /* ty=(Tensor[(192), bool],) */
}

def @func_3989() -> (Tensor[(1, 6, 16), bool],) {
  %1272 = fn () -> (Tensor[(1, 6, 16), bool],) {
    %1271 = @func_1697() /* ty=Tensor[(1, 6, 16), bool] */;
    (%1271,)
  };
  %1272() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_14135(%var_14134: Tensor[(11, 15, 6), float32]) -> (Tensor[(11, 15, 6), float32],) {
  %1278 = fn (%var_14129: Tensor[(11, 15, 6), float32]) -> (Tensor[(11, 15, 6), float32],) {
    %1273 = cast(%var_14129, dtype="float32") /* ty=Tensor[(11, 15, 6), float32] */;
    %1274 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(11, 15, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1275 = cast(meta[relay.Constant][48] /* ty=Tensor[(11, 15, 6), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 6), float32] */;
    %1276 = dyn.reshape(%1273, %1274, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1277 = power(%1275, %1276) /* ty=Tensor[(11, 15, 6), float32] */;
    (%1277,)
  };
  %1278(%var_14134) /* ty=(Tensor[(11, 15, 6), float32],) */
}

def @func_1921(%var_1919: Tensor[(936), float32]) -> (Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(1, 6, 16), float32]) {
  @func_1918(%var_1919) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(1, 6, 16), float32]) */
}

def @func_9237() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  @func_9235() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_5528() -> (Tensor[(?, 6, 16), int8],) {
  @func_5526() /* ty=(Tensor[(?, 6, 16), int8],) */
}

def @func_5825() -> (Tensor[(2, 6, 16), float64], Tensor[(2, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(13, 5, 6), float32]) {
  %1295 = fn () -> (Tensor[(2, 6, 16), float64], Tensor[(2, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(13, 5, 6), float32]) {
    %1279 = @func_5655() /* ty=(Tensor[(2, 6, 16), bool],) */;
    %1280 = %1279.0;
    %1281 = cast(%1280, dtype="float64") /* ty=Tensor[(2, 6, 16), float64] */;
    %1282 = @func_5655() /* ty=(Tensor[(2, 6, 16), bool],) */;
    %1283 = %1282.0;
    %1284 = cast(%1283, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
    %1285 = shape_of(%1280, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1286 = cast(%1280, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
    %1287 = dyn.reshape(%1284, %1285, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1288 = @func_5255() /* ty=(Tensor[(13, 5, 6), float32], Tensor[(936), float32]) */;
    %1289 = rsqrt(%1281) /* ty=Tensor[(2, 6, 16), float64] */;
    %1290 = logical_or(%1286, %1287) /* ty=Tensor[(2, 6, 16), bool] */;
    %1291 = %1288.0;
    %1292 = @func_5070() /* ty=Tensor[(1, 6, 16), bool] */;
    %1293 = @func_3197() /* ty=Tensor[(13, 5, 6), float32] */;
    %1294 = @func_3197() /* ty=Tensor[(13, 5, 6), float32] */;
    (%1289, %1290, %1291, %1292, %1293, %1294)
  };
  %1295() /* ty=(Tensor[(2, 6, 16), float64], Tensor[(2, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(1, 6, 16), bool], Tensor[(13, 5, 6), float32], Tensor[(13, 5, 6), float32]) */
}

def @func_13326() -> Tensor[(1, 6, 16), bool] {
  @func_10239() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_9235() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %1296 = @func_1136() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %1297 = %1296.1;
  %1298 = @func_4814() /* ty=Tensor[(1, 6, 16), bool] */;
  (%1297, %1298)
}

def @func_8963() -> (Tensor[(2, 6, 16), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) {
  %1299 = @func_4642() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), float64]) */;
  %1300 = cast(meta[relay.Constant][49] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1301 = reshape(%1300, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1302 = @func_1419(%1301) /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
  %1303 = %1302.4;
  %1304 = cast(%1303, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1305 = reshape(%1304, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1306 = @func_4470(%1305) /* ty=(Tensor[(2, 6, 16), int32], Tensor[(16, 6, 16), bool], Tensor[(1536), bool], Tensor[(2, 6, 16), int32], Tensor[(1, 390), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float64], Tensor[(288), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
  %1307 = %1299.1;
  %1308 = @func_2983() /* ty=Tensor[(2, 6, 16), bool] */;
  %1309 = %1306.4;
  (%1307, %1303, meta[relay.Constant][49] /* ty=Tensor[(288), float32] */, %1308, %1309)
}

def @func_7095() -> (Tensor[(15, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  @func_7093() /* ty=(Tensor[(15, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_8587(%var_8586: Tensor[(40), float32]) -> (Tensor[(8, 6, 6), float32], Tensor[(5, 4, 2), float32], Tensor[(40), float32]) {
  %1315 = fn (%var_8582: Tensor[(40), float32]) -> (Tensor[(8, 6, 6), float32], Tensor[(5, 4, 2), float32], Tensor[(40), float32]) {
    %1310 = @func_7246() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 6), float32], Tensor[(1, 6, 16), float32], Tensor[(2, 144), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
    %1311 = cast(%var_8582, dtype="float32") /* ty=Tensor[(40), float32] */;
    %1312 = reshape(%1311, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
    %1313 = %1310.1;
    %1314 = @func_5451(%1312) /* ty=Tensor[(5, 4, 2), float32] */;
    (%1313, %1314, %var_8582)
  };
  %1315(%var_8586) /* ty=(Tensor[(8, 6, 6), float32], Tensor[(5, 4, 2), float32], Tensor[(40), float32]) */
}

def @func_8965() -> (Tensor[(2, 6, 16), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) {
  @func_8963() /* ty=(Tensor[(2, 6, 16), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(2, 6, 16), bool], Tensor[(1, 390), float32]) */
}

def @func_9924(%var_9923: Tensor[(8, 6, 16), float32]) -> Tensor[(8, 6, 16), int32] {
  %1320 = fn (%var_9915: Tensor[(8, 6, 16), float32]) -> Tensor[(8, 6, 16), int32] {
    %1316 = @func_2059() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */;
    %1317 = %1316.3;
    %1318 = cast(%1317, dtype="int32") /* ty=Tensor[(1, 6, 16), int32] */;
    %1319 = cast(%var_9915, dtype="int32") /* ty=Tensor[(8, 6, 16), int32] */;
    left_shift(%1318, %1319) /* ty=Tensor[(8, 6, 16), int32] */
  };
  %1320(%var_9923) /* ty=Tensor[(8, 6, 16), int32] */
}

def @func_10940() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  %1324 = fn () -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
    %1321 = @func_9890() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %1322 = @func_7467() /* ty=Tensor[(1, 6, 16), float32] */;
    %1323 = %1321.0;
    (%1322, %1323)
  };
  %1324() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */
}

def @func_15837() -> Tensor[(1, 6, 16), float32] {
  %1326 = fn () -> Tensor[(1, 6, 16), float32] {
    %1325 = @func_5216() /* ty=(Tensor[(390), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
    %1325.1
  };
  %1326() /* ty=Tensor[(1, 6, 16), float32] */
}

def @func_5105() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(288, 1), float32]) {
  %1327 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
  %1328 = cast(meta[relay.Constant][50] /* ty=Tensor[(288, 1), float32] */, dtype="float32") /* ty=Tensor[(288, 1), float32] */;
  %1329 = reshape(%1328, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1330 = @func_3419(%1329) /* ty=(Tensor[(192), bool], Tensor[(2, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32], Tensor[(1, 6, 16), float64]) */;
  %1331 = %1327.0;
  %1332 = %1330.3;
  (%1331, %1332, meta[relay.Constant][50] /* ty=Tensor[(288, 1), float32] */)
}

def @func_10078() -> (Tensor[(1, 6, 16), bool],) {
  %1333 = @func_7184() /* ty=(Tensor[(192), bool], Tensor[(1, 6, 16), bool]) */;
  %1334 = %1333.1;
  (%1334,)
}

def @func_9527() -> Tensor[(1, 6, 16), bool] {
  %1335 = fn () -> Tensor[(1, 6, 16), bool] {
    @func_1697() /* ty=Tensor[(1, 6, 16), bool] */
  };
  %1335() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_1058() -> Tensor[(1, 6, 16), bool] {
  @func_1056() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_1729() -> Tensor[(1, 6, 16), bool] {
  %1337 = fn () -> Tensor[(1, 6, 16), bool] {
    %1336 = @func_1692() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %1336.0
  };
  %1337() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_11410(%var_11409: Tensor[(2, 1, 6), float64]) -> (Tensor[(2, 1, 6), float64], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32]) {
  %1348 = fn (%var_11369: Tensor[(2, 1, 6), float64]) -> (Tensor[(2, 1, 6), float64], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32]) {
    %1338 = cast(%var_11369, dtype="float64") /* ty=Tensor[(2, 1, 6), float64] */;
    %1339 = @func_1136() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
    %1340 = @func_10694() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %1341 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %1342 = @func_5928() /* ty=(Tensor[(2, 6, 16), int32],) */;
    %1343 = log(%1338) /* ty=Tensor[(2, 1, 6), float64] */;
    %1344 = %1339.2;
    %1345 = %1340.0;
    %1346 = %1341.0;
    %1347 = %1342.0;
    (%1343, %1344, %1345, %1346, %1347)
  };
  %1348(%var_11409) /* ty=(Tensor[(2, 1, 6), float64], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), int32]) */
}

def @func_6759() -> (Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(?, 6, 16), int8]) {
  %1354 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(?, 6, 16), int8]) {
    %1349 = @func_3932() /* ty=(Tensor[(8, 6, 16), int8],) */;
    %1350 = @func_5526() /* ty=(Tensor[(?, 6, 16), int8],) */;
    %1351 = @func_5974() /* ty=Tensor[(1, 6, 16), bool] */;
    %1352 = %1349.0;
    %1353 = %1350.0;
    (%1351, %1352, %1353)
  };
  %1354() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(?, 6, 16), int8]) */
}

def @func_15528(%var_15527: Tensor[(288), float32]) -> (Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) {
  %1361 = fn (%var_15500: Tensor[(288), float32]) -> (Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) {
    %1355 = @func_5526() /* ty=(Tensor[(?, 6, 16), int8],) */;
    %1356 = cast(%var_15500, dtype="float32") /* ty=Tensor[(288), float32] */;
    %1357 = reshape(%1356, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %1358 = @func_14835(%1357) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(8, 6, 6), float32], Tensor[(288), float32], Tensor[(1, 6, 16), bool], Tensor[(390), float32]) */;
    %1359 = %1355.0;
    %1360 = %1358.5;
    (%1359, %1360, %var_15500)
  };
  %1361(%var_15527) /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */
}

def @func_11804() -> (Tensor[(1, 6, 16), bool],) {
  @func_11802() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_16555() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(5, 4, 2), float32], Tensor[(1, 40), float32]) {
  %1368 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(5, 4, 2), float32], Tensor[(1, 40), float32]) {
    %1362 = @func_7246() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 6), float32], Tensor[(1, 6, 16), float32], Tensor[(2, 144), float32], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
    %1363 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 40), float32] */, dtype="float32") /* ty=Tensor[(1, 40), float32] */;
    %1364 = reshape(%1363, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float32] */;
    %1365 = %1362.0;
    %1366 = @func_4087() /* ty=Tensor[(1, 6, 16), float32] */;
    %1367 = @func_5451(%1364) /* ty=Tensor[(5, 4, 2), float32] */;
    (%1365, %1366, %1367, meta[relay.Constant][51] /* ty=Tensor[(1, 40), float32] */)
  };
  %1368() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(5, 4, 2), float32], Tensor[(1, 40), float32]) */
}

def @func_16296() -> Tensor[(1, 6, 16), bool] {
  %1369 = fn () -> Tensor[(1, 6, 16), bool] {
    @func_580() /* ty=Tensor[(1, 6, 16), bool] */
  };
  %1369() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_3422(%var_3420: Tensor[(288), float32]) -> (Tensor[(192), bool], Tensor[(2, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32], Tensor[(1, 6, 16), float64]) {
  @func_3419(%var_3420) /* ty=(Tensor[(192), bool], Tensor[(2, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(288), float32], Tensor[(1, 6, 16), float64]) */
}

def @func_2445() -> (Tensor[(2, 6, 16), bool],) {
  %1372 = fn () -> (Tensor[(2, 6, 16), bool],) {
    %1370 = @func_2336() /* ty=(Tensor[(2, 6, 16), bool],) */;
    %1371 = %1370.0;
    (%1371,)
  };
  %1372() /* ty=(Tensor[(2, 6, 16), bool],) */
}

def @func_14203() -> (Tensor[(2, 6, 16), float32], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(2, 6, 16), bool]) {
  %1383 = fn () -> (Tensor[(2, 6, 16), float32], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(2, 6, 16), bool]) {
    %1373 = @func_4642() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(2, 6, 16), float64]) */;
    %1374 = %1373.1;
    %1375 = cast(%1374, dtype="float32") /* ty=Tensor[(2, 6, 16), float32] */;
    %1376 = cast(meta[relay.Constant][52] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
    %1377 = reshape(%1376, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float32] */;
    %1378 = @func_1883(%1377) /* ty=(Tensor[(1, 6, 16), float32], Tensor[(13, 8, 9), float32]) */;
    %1379 = @func_3578() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool]) */;
    %1380 = sin(%1375) /* ty=Tensor[(2, 6, 16), float32] */;
    %1381 = %1378.1;
    %1382 = %1379.1;
    (%1380, %1381, meta[relay.Constant][52] /* ty=Tensor[(936), float32] */, %1382)
  };
  %1383() /* ty=(Tensor[(2, 6, 16), float32], Tensor[(13, 8, 9), float32], Tensor[(936), float32], Tensor[(2, 6, 16), bool]) */
}

def @func_14076() -> Tensor[(?, 6, 16), int8] {
  @func_14074() /* ty=Tensor[(?, 6, 16), int8] */
}

def @func_14707() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(9, 6, 16), int64], Tensor[(1, 864), float64]) {
  %1393 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(9, 6, 16), int64], Tensor[(1, 864), float64]) {
    %1384 = @func_9024() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %1385 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 864), bool] */, dtype="bool") /* ty=Tensor[(1, 864), bool] */;
    %1386 = reshape(%1385, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), bool] */;
    %1387 = @func_10554(%1386) /* ty=(Tensor[(9, 6, 16), int64],) */;
    %1388 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 864), bool] */, dtype="float64") /* ty=Tensor[(1, 864), float64] */;
    %1389 = @func_13326() /* ty=Tensor[(1, 6, 16), bool] */;
    %1390 = %1384.0;
    %1391 = %1387.0;
    %1392 = acosh(%1388) /* ty=Tensor[(1, 864), float64] */;
    (%1389, %1390, %1391, %1392)
  };
  %1393() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(9, 6, 16), int64], Tensor[(1, 864), float64]) */
}

def @func_4228() -> (Tensor[(1, 6, 16), bool],) {
  %1396 = fn () -> (Tensor[(1, 6, 16), bool],) {
    %1394 = @func_1620() /* ty=(Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(?, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
    %1395 = %1394.5;
    (%1395,)
  };
  %1396() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_4557() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  %1400 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
    %1397 = @func_681() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %1398 = %1397.0;
    %1399 = @func_4087() /* ty=Tensor[(1, 6, 16), float32] */;
    (%1398, %1399)
  };
  %1400() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) */
}

def @func_9323() -> (Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) {
  @func_9321() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */
}

def @func_8025() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %1401 = @func_6509() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %1402 = @func_2983() /* ty=Tensor[(2, 6, 16), bool] */;
  %1403 = %1401.1;
  (%1402, %1403)
}

def @func_11553() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  @func_11551() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_16790() -> (Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32]) {
  %1404 = @func_2379() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1405 = %1404.0;
  %1406 = @func_4087() /* ty=Tensor[(1, 6, 16), float32] */;
  (%1405, %1406)
}

def @func_3554() -> (Tensor[(1, 6, 16), bool],) {
  @func_3552() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_10683() -> (Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8]) {
  @func_10681() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(8, 6, 16), int8]) */
}

def @func_14421() -> (Tensor[(1, 6, 16), bool], Tensor[(360, 1), uint64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) {
  %1414 = fn () -> (Tensor[(1, 6, 16), bool], Tensor[(360, 1), uint64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) {
    %1407 = @func_13451() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool], Tensor[(360, 1), uint64], Tensor[(9, 8, 5), float32]) */;
    %1408 = cast(meta[relay.Constant][54] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
    %1409 = reshape(%1408, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
    %1410 = @func_2430(%1409) /* ty=(Tensor[(8, 14, 12), float32],) */;
    %1411 = @func_1728() /* ty=Tensor[(1, 6, 16), bool] */;
    %1412 = %1407.2;
    %1413 = %1410.0;
    (%1411, %1412, %1413, meta[relay.Constant][54] /* ty=Tensor[(1344), float32] */)
  };
  %1414() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(360, 1), uint64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */
}

def @func_11067() -> (Tensor[(1, 6, 16), bool],) {
  %1415 = @func_9235() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %1416 = %1415.0;
  (%1416,)
}

def @func_12905() -> Tensor[(1, 6, 16), bool] {
  @func_12903() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_13514() -> (Tensor[(2, 6, 16), bool],) {
  %1417 = @func_5392() /* ty=Tensor[(2, 6, 16), bool] */;
  (%1417,)
}

def @func_11985() -> (Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool]) {
  @func_11983() /* ty=(Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool]) */
}

def @func_17626() -> (Tensor[(390), float32],) {
  @func_17624() /* ty=(Tensor[(390), float32],) */
}

def @func_17376() -> (Tensor[(390), float32], Tensor[(1, 6, 16), bool]) {
  @func_17374() /* ty=(Tensor[(390), float32], Tensor[(1, 6, 16), bool]) */
}

def @func_15762() -> Tensor[(1, 6, 16), float32] {
  %1418 = @func_8744() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool]) */;
  %1418.0
}

def @func_1993() -> (Tensor[(1, 6, 16), float32], Tensor[(16, 6, 16), bool], Tensor[(1536), bool]) {
  %1425 = fn () -> (Tensor[(1, 6, 16), float32], Tensor[(16, 6, 16), bool], Tensor[(1536), bool]) {
    %1419 = @func_1014() /* ty=(Tensor[(1, 6, 16), float32],) */;
    %1420 = cast(meta[relay.Constant][55] /* ty=Tensor[(1536), bool] */, dtype="bool") /* ty=Tensor[(1536), bool] */;
    %1421 = reshape(%1420, newshape=[16, 6, 16]) /* ty=Tensor[(16, 6, 16), bool] */;
    %1422 = @func_604(%1421) /* ty=(Tensor[(16, 6, 16), bool],) */;
    %1423 = %1419.0;
    %1424 = %1422.0;
    (%1423, %1424, meta[relay.Constant][55] /* ty=Tensor[(1536), bool] */)
  };
  %1425() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(16, 6, 16), bool], Tensor[(1536), bool]) */
}

def @func_3904() -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
  %1434 = fn () -> (Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) {
    %1426 = @func_1038() /* ty=Tensor[(2, 6, 16), int32] */;
    %1427 = cast(meta[relay.Constant][56] /* ty=Tensor[(2, 6, 16), int32] */, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
    %1428 = shape_of(%1426, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1429 = cast(%1426, dtype="bool") /* ty=Tensor[(2, 6, 16), bool] */;
    %1430 = dyn.reshape(%1427, %1428, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1431 = @func_907() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %1432 = not_equal(%1429, %1430) /* ty=Tensor[(2, 6, 16), bool] */;
    %1433 = %1431.0;
    (%1432, %1433)
  };
  %1434() /* ty=(Tensor[(2, 6, 16), bool], Tensor[(1, 6, 16), bool]) */
}

def @func_3463(%var_3462: Tensor[(1344), float32]) -> (Tensor[(?, 6, 16), bool], Tensor[(8, 14, 12), float32], Tensor[(1344), float32], Tensor[(13, 5, 6), float32], Tensor[(1, 6, 16), bool]) {
  %1444 = fn (%var_3437: Tensor[(1344), float32]) -> (Tensor[(?, 6, 16), bool], Tensor[(8, 14, 12), float32], Tensor[(1344), float32], Tensor[(13, 5, 6), float32], Tensor[(1, 6, 16), bool]) {
    %1435 = @func_1620() /* ty=(Tensor[(2, 6, 16), int32], Tensor[(192), bool], Tensor[(?, 6, 16), bool], Tensor[(2, 6, 16), int32], Tensor[(2, 6, 16), int32], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
    %1436 = cast(%var_3437, dtype="float32") /* ty=Tensor[(1344), float32] */;
    %1437 = reshape(%1436, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
    %1438 = @func_2430(%1437) /* ty=(Tensor[(8, 14, 12), float32],) */;
    %1439 = @func_2969() /* ty=(Tensor[(1, 6, 16), float32], Tensor[(1, 6, 16), bool], Tensor[(1, 6, 16), float32], Tensor[(936), float32]) */;
    %1440 = %1435.2;
    %1441 = %1438.0;
    %1442 = @func_3197() /* ty=Tensor[(13, 5, 6), float32] */;
    %1443 = %1439.1;
    (%1440, %1441, %var_3437, %1442, %1443)
  };
  %1444(%var_3462) /* ty=(Tensor[(?, 6, 16), bool], Tensor[(8, 14, 12), float32], Tensor[(1344), float32], Tensor[(13, 5, 6), float32], Tensor[(1, 6, 16), bool]) */
}

def @func_16701() -> (Tensor[(1, 6, 16), bool],) {
  @func_16699() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_16500(%var_16479: Tensor[(336), int32]) -> (Tensor[(15, 6, 16), bool], Tensor[(8, 6, 16), int8], Tensor[(1, 6, 16), bool], Tensor[(2, 6, 16), bool], Tensor[(336), int32]) {
  %1445 = @func_7093() /* ty=(Tensor[(15, 6, 16), bool], Tensor[(1, 6, 16), bool]) */;
  %1446 = @func_5512() /* ty=(Tensor[(8, 6, 16), int8],) */;
  %1447 = @func_10378() /* ty=(Tensor[(?, 6, 16), int8], Tensor[(1, 6, 16), bool]) */;
  %1448 = cast(%var_16479, dtype="int32") /* ty=Tensor[(336), int32] */;
  %1449 = reshape(%1448, newshape=[336]) /* ty=Tensor[(336), int32] */;
  %1450 = @func_6298(%1449) /* ty=(Tensor[(2, 6, 16), bool], Tensor[(3, 16, 7), int32], Tensor[(7, 1), int32], Tensor[(336), int32]) */;
  %1451 = %1445.0;
  %1452 = %1446.0;
  %1453 = %1447.1;
  %1454 = %1450.0;
  (%1451, %1452, %1453, %1454, %var_16479)
}

def @func_14430() -> (Tensor[(1, 6, 16), bool],) {
  %1456 = fn () -> (Tensor[(1, 6, 16), bool],) {
    %1455 = @func_3349() /* ty=Tensor[(1, 6, 16), bool] */;
    (%1455,)
  };
  %1456() /* ty=(Tensor[(1, 6, 16), bool],) */
}

def @func_907() -> (Tensor[(1, 6, 16), bool],) {
  %1457 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
  %1458 = %1457.0;
  (%1458,)
}

def @func_8559() -> Tensor[(1, 6, 16), bool] {
  @func_1697() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_4952(%var_4950: Tensor[(11, 3, 6), int8], %var_4951: Tensor[(11, 3, 6), int8]) -> (Tensor[(11, 3, 6), float32], Tensor[(1, 6, 16), bool]) {
  %1467 = fn (%var_4932: Tensor[(11, 3, 6), int8], %var_4933: Tensor[(11, 3, 6), int8]) -> (Tensor[(11, 3, 6), float32], Tensor[(1, 6, 16), bool]) {
    %1459 = cast(%var_4933, dtype="int8") /* ty=Tensor[(11, 3, 6), int8] */;
    %1460 = shape_of(%var_4932, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1461 = cast(%var_4932, dtype="int8") /* ty=Tensor[(11, 3, 6), int8] */;
    %1462 = dyn.reshape(%1459, %1460, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1463 = bitwise_and(%1461, %1462) /* ty=Tensor[(11, 3, 6), int8] */;
    %1464 = cast(%1463, dtype="float32") /* ty=Tensor[(11, 3, 6), float32] */;
    %1465 = sqrt(%1464) /* ty=Tensor[(11, 3, 6), float32] */;
    %1466 = @func_3338() /* ty=Tensor[(1, 6, 16), bool] */;
    (%1465, %1466)
  };
  %1467(%var_4950, %var_4951) /* ty=(Tensor[(11, 3, 6), float32], Tensor[(1, 6, 16), bool]) */
}

def @func_8561() -> Tensor[(1, 6, 16), bool] {
  @func_8559() /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_489(%var_488: Tensor[(2, 6, 16), bool]) -> (Tensor[(2, 6, 16), int32],) {
  %1473 = fn (%var_475: Tensor[(2, 6, 16), bool]) -> (Tensor[(2, 6, 16), int32],) {
    %1468 = @func_394() /* ty=(Tensor[(1, 6, 16), bool],) */;
    %1469 = %1468.0;
    %1470 = cast(%1469, dtype="int32") /* ty=Tensor[(1, 6, 16), int32] */;
    %1471 = cast(%var_475, dtype="int32") /* ty=Tensor[(2, 6, 16), int32] */;
    %1472 = multiply(%1470, %1471) /* ty=Tensor[(2, 6, 16), int32] */;
    (%1472,)
  };
  %1473(%var_488) /* ty=(Tensor[(2, 6, 16), int32],) */
}

def @func_13738(%var_13735: Tensor[(288), float32]) -> (Tensor[(2, 6, 16), float64], Tensor[(1, 6, 16), float64], Tensor[(288), float32]) {
  %1474 = cast(%var_13735, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1475 = reshape(%1474, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1476 = @func_2463(%1475) /* ty=(Tensor[(1, 6, 16), float64], Tensor[(1, 6, 16), bool], Tensor[(288), float32]) */;
  %1477 = @func_11029() /* ty=Tensor[(2, 6, 16), float64] */;
  %1478 = %1476.0;
  (%1477, %1478, %var_13735)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen934/build/output.py:5678: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen934/build/output.py", line 5683, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(845) tvmgen_default_fused_reshape_right_shift_kernel0(signed char* __restrict__ T_right_shift, signed char* __restrict__ placeholder, signed char* __restrict__ placeholder1) {
  T_right_shift[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] >> placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


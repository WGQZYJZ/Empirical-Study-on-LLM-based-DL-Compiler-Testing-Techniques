==========mod==========
#[version = "0.0.5"]
def @func_10834() -> (Tensor[(3, 2, 2), float32],) {
  %0 = @func_9017() /* ty=Tensor[(3, 2, 2), float32] */;
  (%0,)
}

def @func_6055(%var_6011: Tensor[(15, 10, 11), float32]) -> (Tensor[(15, 10, 11), int32], Tensor[(3, 2, 2), bool], Tensor[(1, 12), float32], Tensor[(15, 10, 11), float32]) {
  %1 = @func_4820() /* ty=Tensor[(15, 10, 11), float32] */;
  %2 = cast(%var_6011, dtype="int32") /* ty=Tensor[(15, 10, 11), int32] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%1, dtype="int32") /* ty=Tensor[(15, 10, 11), int32] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 12), float32] */, dtype="float32") /* ty=Tensor[(1, 12), float32] */;
  %7 = reshape(%6, newshape=[3, 2, 2]) /* ty=Tensor[(3, 2, 2), float32] */;
  %8 = @func_3602() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
  %9 = bitwise_and(%4, %5) /* ty=Tensor[(15, 10, 11), int32] */;
  %10 = @func_1722(%7) /* ty=Tensor[(3, 2, 2), bool] */;
  %11 = %8.1;
  (%9, %10, meta[relay.Constant][0] /* ty=Tensor[(1, 12), float32] */, %11)
}

def @func_6740() -> (Tensor[(15, 10, 11), float32],) {
  %12 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %13 = %12.0;
  (%13,)
}

def @func_12180() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
  %14 = @func_8398() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %15 = @func_6203() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(540), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(9, 3, 5), float64], Tensor[(15, 9), float64], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %16 = @func_9891() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
  %17 = %14.0;
  %18 = %15.11;
  %19 = %16.1;
  (%17, %18, %19)
}

def @func_10441() -> Tensor[(15, 10, 11), float32] {
  %20 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %20.0
}

def @func_12247() -> Tensor[(3, 2, 2), float32] {
  %21 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %21.0
}

def @func_6203() -> (Tensor[(15, 10, 11), float32], Tensor[(540), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(9, 3, 5), float64], Tensor[(15, 9), float64], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
  %22 = @func_4902() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %24 = cast(meta[relay.Constant][2] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %25 = cast(meta[relay.Constant][3] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %26 = reshape(%23, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %27 = reshape(%24, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %28 = reshape(%25, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %29 = @func_5195(%26, %27, %28) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(8, 5, 8), float32], Tensor[(40, 8), float32], Tensor[(27), float64], Tensor[(540), float32]) */;
  %30 = @func_4528() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
  %31 = %29.4;
  %32 = cast(%31, dtype="float32") /* ty=Tensor[(540), float32] */;
  %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %34 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 9), float64] */, dtype="float64") /* ty=Tensor[(15, 9), float64] */;
  %35 = reshape(%32, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float32] */;
  %36 = reshape(%33, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float32] */;
  %37 = reshape(%34, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %38 = @func_665(%35, %36, %37) /* ty=(Tensor[(6, 9, 10), bool], Tensor[(9, 3, 5), float64], Tensor[(27, 1), float64], Tensor[(135), float64], Tensor[(6, 9, 10), float32]) */;
  %39 = @func_4748() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %40 = %22.0;
  %41 = @func_4098() /* ty=Tensor[(3, 2, 2), float32] */;
  %42 = %30.1;
  %43 = %38.1;
  %44 = @func_2700() /* ty=Tensor[(15, 10, 11), float32] */;
  %45 = %39.1;
  %46 = @func_2787() /* ty=Tensor[(15, 10, 11), float32] */;
  (%40, %31, meta[relay.Constant][1] /* ty=Tensor[(1040), float64] */, meta[relay.Constant][2] /* ty=Tensor[(490), float32] */, meta[relay.Constant][3] /* ty=Tensor[(540), float32] */, %41, %42, %43, meta[relay.Constant][4] /* ty=Tensor[(15, 9), float64] */, %44, %45, %46)
}

def @func_12372() -> (Tensor[(15, 10, 11), float32],) {
  %47 = @func_12327() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %48 = %47.0;
  (%48,)
}

def @func_8055(%var_8042: Tensor[(27), float64], %var_8043: Tensor[(135), float64]) -> (Tensor[(15, 10, 11), float32], Tensor[(9, 3, 5), float64], Tensor[(27), float64], Tensor[(135), float64]) {
  %49 = @func_4902() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %50 = %49.1;
  %51 = cast(meta[relay.Constant][5] /* ty=Tensor[(15, 10, 11), float32] */, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(3), int32] */;
  %53 = cast(%50, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %55 = cast(%var_8042, dtype="float64") /* ty=Tensor[(27), float64] */;
  %56 = cast(%var_8043, dtype="float64") /* ty=Tensor[(135), float64] */;
  %57 = reshape(%55, newshape=[9, 3, 1]) /* ty=Tensor[(9, 3, 1), float64] */;
  %58 = reshape(%56, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), float64] */;
  %59 = @func_198(%57, %58) /* ty=(Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64]) */;
  %60 = floor_mod(%53, %54) /* ty=Tensor[(15, 10, 11), float32] */;
  %61 = %59.0;
  (%60, %61, %var_8042, %var_8043)
}

def @func_6858() -> Tensor[(3, 2, 2), float32] {
  @func_5837() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_9009() -> Tensor[(3, 2, 2), float32] {
  %62 = @func_9000() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %62.0
}

def @func_9891() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) {
  %63 = @func_2426() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %64 = %63.0;
  %65 = @func_2787() /* ty=Tensor[(15, 10, 11), float32] */;
  (%64, %65)
}

def @func_10302() -> Tensor[(15, 10, 11), float32] {
  %66 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %66.0
}

def @func_3481() -> Tensor[(15, 10, 11), float32] {
  @func_2700() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_3217() -> Tensor[(3, 2, 2), float32] {
  %67 = @func_2254() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(27), float64], Tensor[(3, 2, 2), float32]) */;
  %67.3
}

def @func_3385(%var_3375: Tensor[(135), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(7, 15, 8), float64], Tensor[(27), float64], Tensor[(135), float64]) {
  %68 = @func_2426() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %69 = @func_3040() /* ty=(Tensor[(7, 15, 8), float64],) */;
  %70 = @func_2254() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(27), float64], Tensor[(3, 2, 2), float32]) */;
  %71 = @func_2254() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(27), float64], Tensor[(3, 2, 2), float32]) */;
  %72 = %71.1;
  %73 = cast(%var_3375, dtype="float64") /* ty=Tensor[(135), float64] */;
  %74 = shape_of(%72, dtype="int32") /* ty=Tensor[(1), int32] */;
  %75 = cast(%72, dtype="float64") /* ty=Tensor[(135), float64] */;
  %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?), float64] */;
  %77 = %68.0;
  %78 = %69.0;
  %79 = %70.2;
  %80 = floor_mod(%75, %76) /* ty=Tensor[(135), float64] */;
  (%77, %78, %79, %80)
}

def @func_952(%var_904: Tensor[(15, 6, 6), float32], %var_922: Tensor[(27), float64]) -> (Tensor[(15, 6, 6), float32], Tensor[(9, 3, 5), float64], Tensor[(27), float64], Tensor[(135), float64], Tensor[(9, 3, 5), float64]) {
  %81 = cast(%var_904, dtype="float32") /* ty=Tensor[(15, 6, 6), float32] */;
  %82 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(15, 6, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %83 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 6, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 6, 6), float32] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %85 = cast(%var_922, dtype="float64") /* ty=Tensor[(27), float64] */;
  %86 = cast(meta[relay.Constant][7] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %87 = reshape(%85, newshape=[9, 3, 1]) /* ty=Tensor[(9, 3, 1), float64] */;
  %88 = reshape(%86, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), float64] */;
  %89 = @func_198(%87, %88) /* ty=(Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64]) */;
  %90 = cast(%var_922, dtype="float64") /* ty=Tensor[(27), float64] */;
  %91 = %89.0;
  %92 = cast(%91, dtype="float64") /* ty=Tensor[(9, 3, 5), float64] */;
  %93 = reshape(%90, newshape=[9, 3, 1]) /* ty=Tensor[(9, 3, 1), float64] */;
  %94 = reshape(%92, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), float64] */;
  %95 = @func_198(%93, %94) /* ty=(Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64]) */;
  %96 = power(%83, %84) /* ty=Tensor[(15, 6, 6), float32] */;
  %97 = %95.0;
  (%96, %91, %var_922, meta[relay.Constant][7] /* ty=Tensor[(135), float64] */, %97)
}

def @func_2652() -> (Tensor[(3, 2, 2), bool], Tensor[(10, 13, 8), float64], Tensor[(1040, 1), float64], Tensor[(490), float32], Tensor[(540), float32]) {
  %98 = cast(meta[relay.Constant][8] /* ty=Tensor[(1040, 1), float64] */, dtype="float64") /* ty=Tensor[(1040, 1), float64] */;
  %99 = cast(meta[relay.Constant][9] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %100 = cast(meta[relay.Constant][10] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %101 = reshape(%98, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %102 = reshape(%99, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %103 = reshape(%100, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %104 = @func_1357(%101, %102, %103) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(7, 7, 10), float32], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(270, 2), float32]) */;
  %105 = @func_2601() /* ty=Tensor[(3, 2, 2), bool] */;
  %106 = %104.0;
  (%105, %106, meta[relay.Constant][8] /* ty=Tensor[(1040, 1), float64] */, meta[relay.Constant][9] /* ty=Tensor[(490), float32] */, meta[relay.Constant][10] /* ty=Tensor[(540), float32] */)
}

def @func_7696() -> Tensor[(15, 10, 11), float32] {
  @func_3744() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_8240() -> Tensor[(135), float64] {
  %107 = @func_2254() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(27), float64], Tensor[(3, 2, 2), float32]) */;
  %108 = %107.1;
  %109 = cast(%108, dtype="float64") /* ty=Tensor[(135), float64] */;
  tan(%109) /* ty=Tensor[(135), float64] */
}

def @func_8693() -> Tensor[(15, 10, 11), float32] {
  %110 = @func_6740() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %110.0
}

def @func_2961(%var_2954: Tensor[(540), float32]) -> (Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) {
  %111 = cast(%var_2954, dtype="float32") /* ty=Tensor[(540), float32] */;
  %112 = reshape(%111, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %113 = @func_1473(%112) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */;
  %114 = @func_2601() /* ty=Tensor[(3, 2, 2), bool] */;
  %115 = %113.0;
  (%114, %115, %var_2954)
}

def @func_7949() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), bool], Tensor[(15, 10, 11), float32], Tensor[(27), float64]) {
  %116 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %117 = @func_4528() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
  %118 = @func_7500() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %119 = @func_2254() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(27), float64], Tensor[(3, 2, 2), float32]) */;
  %120 = %116.0;
  %121 = %117.0;
  %122 = %118.0;
  %123 = %119.2;
  (%120, %121, %122, %123)
}

def @func_9000() -> (Tensor[(3, 2, 2), float32],) {
  %124 = @func_6436() /* ty=Tensor[(3, 2, 2), float32] */;
  (%124,)
}

def @func_9549() -> (Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32]) {
  %125 = @func_6399() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */;
  %126 = @func_2601() /* ty=Tensor[(3, 2, 2), bool] */;
  %127 = %125.1;
  (%126, %127)
}

def @func_6894() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
  %128 = @func_4474() /* ty=Tensor[(15, 10, 11), float32] */;
  %129 = @func_6858() /* ty=Tensor[(3, 2, 2), float32] */;
  (%128, %129)
}

def @func_12327() -> (Tensor[(15, 10, 11), float32],) {
  %130 = @func_10356() /* ty=Tensor[(15, 10, 11), float32] */;
  (%130,)
}

def @func_7011() -> (Tensor[(8, 70), float32], Tensor[(8, 70), int64]) {
  %131 = @func_6347() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(4, 14, 10), uint8], Tensor[(3, 2, 2), float32], Tensor[(8, 70), bool]) */;
  %132 = %131.4;
  %133 = cast(%132, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %134 = atan(%133) /* ty=Tensor[(8, 70), float32] */;
  %135 = cast(%132, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %136 = shape_of(%134, dtype="int32") /* ty=Tensor[(2), int32] */;
  %137 = cast(%134, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %139 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 70), float32] */, dtype="int64") /* ty=Tensor[(8, 70), int64] */;
  %140 = shape_of(%134, dtype="int32") /* ty=Tensor[(2), int32] */;
  %141 = cast(%134, dtype="int64") /* ty=Tensor[(8, 70), int64] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %143 = divide(%137, %138) /* ty=Tensor[(8, 70), float32] */;
  %144 = left_shift(%141, %142) /* ty=Tensor[(8, 70), int64] */;
  (%143, %144)
}

def @func_10927() -> (Tensor[(3, 2, 2), float32], Tensor[(540), float32]) {
  %145 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %146 = %145.0;
  %147 = @func_3311() /* ty=Tensor[(540), float32] */;
  (%146, %147)
}

def @func_12089(%var_12046: Tensor[(540), float32], %var_12047: Tensor[(490), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 180), bool], Tensor[(540), float32], Tensor[(490), float32], Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1650), float64], Tensor[(12, 2, 12), bool], Tensor[(288), bool], Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), bool]) {
  %148 = @func_6974() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %149 = cast(%var_12046, dtype="float32") /* ty=Tensor[(540), float32] */;
  %150 = cast(%var_12047, dtype="float32") /* ty=Tensor[(490), float32] */;
  %151 = reshape(%149, newshape=[54, 10]) /* ty=Tensor[(54, 10), float32] */;
  %152 = reshape(%150, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %153 = @func_9441(%151, %152) /* ty=(Tensor[(4, 14, 10), uint8], Tensor[(3, 2, 2), float32], Tensor[(693), float64], Tensor[(54, 10), float32], Tensor[(3, 180), bool], Tensor[(1040), float64], Tensor[(490), float32]) */;
  %154 = @func_4902() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %155 = @func_10834() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %156 = @func_8535() /* ty=(Tensor[(1650), float64], Tensor[(3, 2, 2), float32]) */;
  %157 = cast(meta[relay.Constant][12] /* ty=Tensor[(288), bool] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %158 = reshape(%157, newshape=[12, 2, 12]) /* ty=Tensor[(12, 2, 12), bool] */;
  %159 = @func_8608() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %160 = %155.0;
  %161 = cast(%160, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  %162 = reshape(%161, newshape=[3, 2, 2]) /* ty=Tensor[(3, 2, 2), float32] */;
  %163 = @func_2232(%162) /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float64]) */;
  %164 = %148.0;
  %165 = @func_9648() /* ty=Tensor[(3, 2, 2), float32] */;
  %166 = %153.4;
  %167 = %154.0;
  %168 = %156.0;
  %169 = @func_10235(%158) /* ty=Tensor[(12, 2, 12), bool] */;
  %170 = %159.0;
  %171 = %163.0;
  (%164, %165, %166, %var_12046, %var_12047, %167, %160, %168, %169, meta[relay.Constant][12] /* ty=Tensor[(288), bool] */, %170, %171)
}

def @func_5525(%var_5402: Tensor[(4, 14, 10), float32], %var_5425: Tensor[(4, 14, 10), float32]) -> (Tensor[(4, 14, 10), uint8], Tensor[(9, 3, 5), float64], Tensor[(540), float32], Tensor[(1, 135), float64], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(4, 14, 10), int8], Tensor[(4, 14, 10), float32], Tensor[(4, 14, 10), bool]) {
  %172 = cast(%var_5425, dtype="uint8") /* ty=Tensor[(4, 14, 10), uint8] */;
  %173 = shape_of(%var_5402, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%var_5402, dtype="uint8") /* ty=Tensor[(4, 14, 10), uint8] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %176 = cast(meta[relay.Constant][13] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %177 = cast(meta[relay.Constant][13] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %178 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 135), float64] */, dtype="float64") /* ty=Tensor[(1, 135), float64] */;
  %179 = reshape(%176, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float32] */;
  %180 = reshape(%177, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float32] */;
  %181 = reshape(%178, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %182 = @func_665(%179, %180, %181) /* ty=(Tensor[(6, 9, 10), bool], Tensor[(9, 3, 5), float64], Tensor[(27, 1), float64], Tensor[(135), float64], Tensor[(6, 9, 10), float32]) */;
  %183 = @func_2439() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %184 = @func_3512() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %185 = cast(%var_5402, dtype="float32") /* ty=Tensor[(4, 14, 10), float32] */;
  %186 = cos(%185) /* ty=Tensor[(4, 14, 10), float32] */;
  %187 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 14, 10), float32] */, dtype="int8") /* ty=Tensor[(4, 14, 10), int8] */;
  %188 = shape_of(%186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(%186, dtype="int8") /* ty=Tensor[(4, 14, 10), int8] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %191 = cast(%186, dtype="float64") /* ty=Tensor[(4, 14, 10), float64] */;
  %192 = sigmoid(%191) /* ty=Tensor[(4, 14, 10), float64] */;
  %193 = cast(%192, dtype="float32") /* ty=Tensor[(4, 14, 10), float32] */;
  %194 = cast(%192, dtype="float64") /* ty=Tensor[(4, 14, 10), float64] */;
  %195 = atan(%194) /* ty=Tensor[(4, 14, 10), float64] */;
  %196 = cast(%195, dtype="bool") /* ty=Tensor[(4, 14, 10), bool] */;
  %197 = shape_of(%192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%192, dtype="bool") /* ty=Tensor[(4, 14, 10), bool] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %200 = bitwise_xor(%174, %175) /* ty=Tensor[(4, 14, 10), uint8] */;
  %201 = %182.1;
  %202 = %183.0;
  %203 = %184.0;
  %204 = @func_2787() /* ty=Tensor[(15, 10, 11), float32] */;
  %205 = subtract(%189, %190) /* ty=Tensor[(4, 14, 10), int8] */;
  %206 = exp(%193) /* ty=Tensor[(4, 14, 10), float32] */;
  %207 = less_equal(%198, %199) /* ty=Tensor[(4, 14, 10), bool] */;
  (%200, %201, meta[relay.Constant][13] /* ty=Tensor[(540), float32] */, meta[relay.Constant][14] /* ty=Tensor[(1, 135), float64] */, %202, %203, %204, %205, %206, %207)
}

def @func_5935() -> (Tensor[(3, 2, 2), bool],) {
  %208 = @func_2601() /* ty=Tensor[(3, 2, 2), bool] */;
  (%208,)
}

def @func_10235(%var_10231: Tensor[(12, 2, 12), bool]) -> Tensor[(12, 2, 12), bool] {
  %209 = cast(%var_10231, dtype="bool") /* ty=Tensor[(12, 2, 12), bool] */;
  %210 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(12, 2, 12), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %211 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 2, 12), bool] */, dtype="bool") /* ty=Tensor[(12, 2, 12), bool] */;
  %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%211, %212) /* ty=Tensor[(12, 2, 12), bool] */
}

def @func_11689() -> (Tensor[(540), float32], Tensor[(3, 2, 2), float32]) {
  %213 = @func_7127() /* ty=(Tensor[(540), float32], Tensor[(3, 2, 2), float32]) */;
  %214 = @func_8104() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %215 = %213.0;
  %216 = %214.0;
  (%215, %216)
}

def @func_6667() -> (Tensor[(3, 2, 2), bool], Tensor[(15, 10, 11), float32], Tensor[(14, 8, 10), float64], Tensor[(3, 2, 2), float32], Tensor[(7, 15, 8), float64]) {
  %217 = @func_5935() /* ty=(Tensor[(3, 2, 2), bool],) */;
  %218 = @func_4427() /* ty=(Tensor[(14, 8, 10), float64], Tensor[(14, 8, 10), float64]) */;
  %219 = @func_4786() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %220 = @func_3040() /* ty=(Tensor[(7, 15, 8), float64],) */;
  %221 = %217.0;
  %222 = @func_4129() /* ty=Tensor[(15, 10, 11), float32] */;
  %223 = %218.0;
  %224 = %219.0;
  %225 = %220.0;
  (%221, %222, %223, %224, %225)
}

def @func_10004() -> Tensor[(3, 2, 2), float32] {
  @func_5378() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_10812() -> (Tensor[(15, 10, 11), float32],) {
  %226 = @func_7500() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %227 = %226.0;
  (%227,)
}

def @func_4043() -> Tensor[(3, 2, 2), float32] {
  %228 = @func_2498() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) */;
  %228.0
}

def @func_11588(%var_11572: Tensor[(270, 2), bool]) -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), bool], Tensor[(270, 2), float32], Tensor[(540), float32], Tensor[(270, 2), float64]) {
  %229 = @func_9549() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32]) */;
  %230 = @func_5935() /* ty=(Tensor[(3, 2, 2), bool],) */;
  %231 = @func_10860() /* ty=(Tensor[(270, 2), bool], Tensor[(15, 10, 11), float32]) */;
  %232 = %231.0;
  %233 = cast(%var_11572, dtype="float32") /* ty=Tensor[(270, 2), float32] */;
  %234 = shape_of(%232, dtype="int32") /* ty=Tensor[(2), int32] */;
  %235 = cast(%232, dtype="float32") /* ty=Tensor[(270, 2), float32] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %237 = @func_5037() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */;
  %238 = cast(%var_11572, dtype="float64") /* ty=Tensor[(270, 2), float64] */;
  %239 = @func_4200() /* ty=Tensor[(3, 2, 2), float32] */;
  %240 = %229.0;
  %241 = %230.0;
  %242 = add(%235, %236) /* ty=Tensor[(270, 2), float32] */;
  %243 = %237.1;
  %244 = sin(%238) /* ty=Tensor[(270, 2), float64] */;
  (%239, %240, %241, %242, %243, %244)
}

def @func_3040() -> (Tensor[(7, 15, 8), float64],) {
  %245 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 15, 8), float64] */, dtype="float64") /* ty=Tensor[(7, 15, 8), float64] */;
  %246 = exp(%245) /* ty=Tensor[(7, 15, 8), float64] */;
  (%246,)
}

def @func_2700() -> Tensor[(15, 10, 11), float32] {
  %247 = @func_2551() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %247.0
}

def @func_11650() -> Tensor[(14, 8, 10), float64] {
  %248 = @func_4427() /* ty=(Tensor[(14, 8, 10), float64], Tensor[(14, 8, 10), float64]) */;
  %248.0
}

def @func_5837() -> Tensor[(3, 2, 2), float32] {
  %249 = @func_5037() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */;
  %249.0
}

def @func_2551() -> (Tensor[(15, 10, 11), float32],) {
  %250 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
  %251 = %250.5;
  (%251,)
}

def @func_10187() -> Tensor[(15, 10, 11), float32] {
  %252 = @func_6740() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %252.0
}

def @func_9202() -> (Tensor[(15, 10, 11), float32], Tensor[(16, 6, 4), float32], Tensor[(384), float64]) {
  %253 = cast(meta[relay.Constant][18] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %254 = reshape(%253, newshape=[16, 6, 4]) /* ty=Tensor[(16, 6, 4), float64] */;
  %255 = @func_8801(%254) /* ty=(Tensor[(16, 6, 4), float64], Tensor[(16, 6, 4), float32], Tensor[(15, 10, 11), float32]) */;
  %256 = @func_4820() /* ty=Tensor[(15, 10, 11), float32] */;
  %257 = %255.1;
  (%256, %257, meta[relay.Constant][18] /* ty=Tensor[(384), float64] */)
}

def @func_11379() -> (Tensor[(3, 2, 2), float32],) {
  %258 = @func_3217() /* ty=Tensor[(3, 2, 2), float32] */;
  (%258,)
}

def @func_1357(%var_1344: Tensor[(10, 13, 8), float64], %var_1350: Tensor[(490), float32], %var_1351: Tensor[(540), float32]) -> (Tensor[(10, 13, 8), float64], Tensor[(7, 7, 10), float32], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(270, 2), float32]) {
  %259 = cast(%var_1344, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
  %260 = cast(%var_1350, dtype="float32") /* ty=Tensor[(490), float32] */;
  %261 = cast(%var_1351, dtype="float32") /* ty=Tensor[(540), float32] */;
  %262 = cast(meta[relay.Constant][19] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %263 = reshape(%260, newshape=[7, 7, 10]) /* ty=Tensor[(7, 7, 10), float32] */;
  %264 = reshape(%261, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %265 = reshape(%262, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %266 = @func_1240(%263, %264, %265) /* ty=(Tensor[(7, 7, 10), float32], Tensor[(27), float64], Tensor[(540), float32], Tensor[(27), float64]) */;
  %267 = cast(%var_1351, dtype="float32") /* ty=Tensor[(540), float32] */;
  %268 = reshape(%267, newshape=[270, 2]) /* ty=Tensor[(270, 2), float32] */;
  %269 = @func_1271(%268) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(270, 2), float32], Tensor[(135), float64]) */;
  %270 = asinh(%259) /* ty=Tensor[(10, 13, 8), float64] */;
  %271 = %266.0;
  %272 = %269.2;
  (%270, %271, %var_1350, %var_1351, meta[relay.Constant][19] /* ty=Tensor[(27), float64] */, %272)
}

def @func_2254() -> (Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(27), float64], Tensor[(3, 2, 2), float32]) {
  %273 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %274 = cast(meta[relay.Constant][20] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %275 = cast(meta[relay.Constant][20] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %276 = reshape(%274, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %277 = reshape(%275, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %278 = @func_1584(%276, %277) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(540), float32], Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(9, 3, 5), float64], Tensor[(27), bool]) */;
  %279 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %280 = %273.0;
  %281 = %278.1;
  %282 = %279.0;
  (%280, %281, meta[relay.Constant][20] /* ty=Tensor[(27), float64] */, %282)
}

def @func_7317() -> (Tensor[(4, 14, 10), uint8], Tensor[(1040, 1), float64]) {
  %283 = @func_6347() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(4, 14, 10), uint8], Tensor[(3, 2, 2), float32], Tensor[(8, 70), bool]) */;
  %284 = @func_2652() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(10, 13, 8), float64], Tensor[(1040, 1), float64], Tensor[(490), float32], Tensor[(540), float32]) */;
  %285 = %283.2;
  %286 = %284.2;
  (%285, %286)
}

def @func_4427() -> (Tensor[(14, 8, 10), float64], Tensor[(14, 8, 10), float64]) {
  %287 = cast(meta[relay.Constant][21] /* ty=Tensor[(14, 8, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 8, 10), float64] */;
  %288 = cast(meta[relay.Constant][21] /* ty=Tensor[(14, 8, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 8, 10), float64] */;
  %289 = tan(%287) /* ty=Tensor[(14, 8, 10), float64] */;
  %290 = cos(%288) /* ty=Tensor[(14, 8, 10), float64] */;
  (%289, %290)
}

def @func_11112() -> (Tensor[(3, 2, 2), float32],) {
  %291 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %292 = %291.0;
  (%292,)
}

def @func_7726() -> Tensor[(15, 10, 11), float32] {
  %293 = @func_4528() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
  %293.3
}

def @func_10667() -> (Tensor[(3, 2, 2), float32], Tensor[(12, 2, 9), float32], Tensor[(216), float32]) {
  %294 = @func_2498() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) */;
  %295 = cast(meta[relay.Constant][22] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %296 = reshape(%295, newshape=[12, 2, 9]) /* ty=Tensor[(12, 2, 9), float32] */;
  %297 = @func_5657(%296) /* ty=(Tensor[(12, 2, 9), float32], Tensor[(15, 10, 11), float32]) */;
  %298 = %294.1;
  %299 = %297.0;
  (%298, %299, meta[relay.Constant][22] /* ty=Tensor[(216), float32] */)
}

def @func_2601() -> Tensor[(3, 2, 2), bool] {
  %300 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %301 = %300.0;
  %302 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 2, 2), float32] */, dtype="bool") /* ty=Tensor[(3, 2, 2), bool] */;
  %303 = shape_of(%301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%301, dtype="bool") /* ty=Tensor[(3, 2, 2), bool] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%304, %305) /* ty=Tensor[(3, 2, 2), bool] */
}

def @func_11859(%var_11827: Tensor[(8, 7, 9), float64]) -> (Tensor[(3, 2, 2), bool], Tensor[(8, 7, 9), float32]) {
  %306 = @func_8648() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), bool]) */;
  %307 = cast(%var_11827, dtype="float64") /* ty=Tensor[(8, 7, 9), float64] */;
  %308 = sinh(%307) /* ty=Tensor[(8, 7, 9), float64] */;
  %309 = cast(%308, dtype="float32") /* ty=Tensor[(8, 7, 9), float32] */;
  %310 = %306.0;
  %311 = exp(%309) /* ty=Tensor[(8, 7, 9), float32] */;
  (%310, %311)
}

def @func_6347() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(4, 14, 10), uint8], Tensor[(3, 2, 2), float32], Tensor[(8, 70), bool]) {
  %312 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 70), float32] */, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %313 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 70), float32] */, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %314 = reshape(%312, newshape=[4, 14, 10]) /* ty=Tensor[(4, 14, 10), float32] */;
  %315 = reshape(%313, newshape=[4, 14, 10]) /* ty=Tensor[(4, 14, 10), float32] */;
  %316 = @func_5525(%314, %315) /* ty=(Tensor[(4, 14, 10), uint8], Tensor[(9, 3, 5), float64], Tensor[(540), float32], Tensor[(1, 135), float64], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(4, 14, 10), int8], Tensor[(4, 14, 10), float32], Tensor[(4, 14, 10), bool]) */;
  %317 = @func_3972() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) */;
  %318 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 70), float32] */, dtype="bool") /* ty=Tensor[(8, 70), bool] */;
  %319 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(8, 70), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %320 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 70), float32] */, dtype="bool") /* ty=Tensor[(8, 70), bool] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %322 = @func_5378() /* ty=Tensor[(3, 2, 2), float32] */;
  %323 = @func_4820() /* ty=Tensor[(15, 10, 11), float32] */;
  %324 = %316.0;
  %325 = %317.0;
  %326 = logical_or(%320, %321) /* ty=Tensor[(8, 70), bool] */;
  (%322, %323, %324, %325, %326)
}

def @func_8978(%var_8967: Tensor[(540), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) {
  %327 = @func_6974() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %328 = cast(%var_8967, dtype="float32") /* ty=Tensor[(540), float32] */;
  %329 = cast(%var_8967, dtype="float32") /* ty=Tensor[(540), float32] */;
  %330 = reshape(%328, newshape=[3, 180]) /* ty=Tensor[(3, 180), float32] */;
  %331 = reshape(%329, newshape=[3, 180]) /* ty=Tensor[(3, 180), float32] */;
  %332 = @func_5612(%330, %331) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 180), float32]) */;
  %333 = %327.0;
  %334 = %332.1;
  (%333, %334, %var_8967)
}

def @func_1722(%var_1680: Tensor[(3, 2, 2), float32]) -> Tensor[(3, 2, 2), bool] {
  %335 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %336 = %335.0;
  %337 = cast(%var_1680, dtype="bool") /* ty=Tensor[(3, 2, 2), bool] */;
  %338 = shape_of(%336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %339 = cast(%336, dtype="bool") /* ty=Tensor[(3, 2, 2), bool] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%339, %340) /* ty=Tensor[(3, 2, 2), bool] */
}

def @func_3602() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) {
  %341 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %342 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
  %343 = %341.0;
  %344 = %342.5;
  (%343, %344)
}

def @func_7996(%var_7979: Tensor[(490), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(3, 180), float32], Tensor[(15, 10, 11), float32]) {
  %345 = @func_6740() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %346 = cast(meta[relay.Constant][26] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %347 = cast(%var_7979, dtype="float32") /* ty=Tensor[(490), float32] */;
  %348 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 180), float32] */, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %349 = reshape(%346, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %350 = reshape(%347, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %351 = reshape(%348, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %352 = @func_5195(%349, %350, %351) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(8, 5, 8), float32], Tensor[(40, 8), float32], Tensor[(27), float64], Tensor[(540), float32]) */;
  %353 = %345.0;
  %354 = %352.1;
  %355 = @func_4820() /* ty=Tensor[(15, 10, 11), float32] */;
  (%353, %354, meta[relay.Constant][26] /* ty=Tensor[(1040), float64] */, %var_7979, meta[relay.Constant][27] /* ty=Tensor[(3, 180), float32] */, %355)
}

def @func_8477(%var_8458: Tensor[(540), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(540), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32]) {
  %356 = cast(%var_8458, dtype="float32") /* ty=Tensor[(540), float32] */;
  %357 = reshape(%356, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %358 = @func_2961(%357) /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */;
  %359 = @func_3972() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) */;
  %360 = @func_7726() /* ty=Tensor[(15, 10, 11), float32] */;
  %361 = %358.2;
  %362 = %359.0;
  (%360, %361, %var_8458, %362)
}

def @func_2498() -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) {
  %363 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %364 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %365 = %363.0;
  %366 = %364.0;
  (%365, %366)
}

def @func_2117(%var_2104: Tensor[(15, 10, 11), float32], %var_2105: Tensor[(15, 10, 11), float32]) -> Tensor[(15, 10, 11), float32] {
  %367 = cast(%var_2105, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %368 = shape_of(%var_2104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %369 = cast(%var_2104, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%369, %370) /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_6399() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
  %371 = @func_5826() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %372 = @func_4528() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
  %373 = %371.1;
  %374 = %372.1;
  (%373, %374)
}

def @func_3569(%var_3565: Tensor[(135), float64]) -> (Tensor[(4, 13, 10), float32], Tensor[(54, 10), float32], Tensor[(27), float64], Tensor[(6, 9, 10), bool], Tensor[(135), float64], Tensor[(15, 10, 11), float32]) {
  %375 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 13, 10), float32] */, dtype="float32") /* ty=Tensor[(4, 13, 10), float32] */;
  %376 = cast(meta[relay.Constant][29] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %377 = reshape(%376, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %378 = @func_1791(%377) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(54, 10), float32], Tensor[(27), float64]) */;
  %379 = %378.2;
  %380 = cast(%379, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %381 = cast(%379, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %382 = cast(%var_3565, dtype="float64") /* ty=Tensor[(135), float64] */;
  %383 = reshape(%380, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float32] */;
  %384 = reshape(%381, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float32] */;
  %385 = reshape(%382, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %386 = @func_665(%383, %384, %385) /* ty=(Tensor[(6, 9, 10), bool], Tensor[(9, 3, 5), float64], Tensor[(27, 1), float64], Tensor[(135), float64], Tensor[(6, 9, 10), float32]) */;
  %387 = log(%375) /* ty=Tensor[(4, 13, 10), float32] */;
  %388 = %386.0;
  %389 = @func_2700() /* ty=Tensor[(15, 10, 11), float32] */;
  (%387, %379, meta[relay.Constant][29] /* ty=Tensor[(27), float64] */, %388, %var_3565, %389)
}

def @func_8447() -> Tensor[(15, 10, 11), float32] {
  %390 = @func_7164() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */;
  %390.0
}

def @func_7500() -> (Tensor[(15, 10, 11), float32],) {
  %391 = @func_3972() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) */;
  %392 = %391.2;
  (%392,)
}

def @func_665(%var_620: Tensor[(6, 9, 10), float32], %var_637: Tensor[(6, 9, 10), float32], %var_653: Tensor[(135), float64]) -> (Tensor[(6, 9, 10), bool], Tensor[(9, 3, 5), float64], Tensor[(27, 1), float64], Tensor[(135), float64], Tensor[(6, 9, 10), float32]) {
  %393 = cast(%var_620, dtype="float32") /* ty=Tensor[(6, 9, 10), float32] */;
  %394 = sqrt(%393) /* ty=Tensor[(6, 9, 10), float32] */;
  %395 = cast(%var_620, dtype="bool") /* ty=Tensor[(6, 9, 10), bool] */;
  %396 = shape_of(%394, dtype="int32") /* ty=Tensor[(3), int32] */;
  %397 = cast(%394, dtype="bool") /* ty=Tensor[(6, 9, 10), bool] */;
  %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %399 = cast(meta[relay.Constant][30] /* ty=Tensor[(27, 1), float64] */, dtype="float64") /* ty=Tensor[(27, 1), float64] */;
  %400 = cast(%var_653, dtype="float64") /* ty=Tensor[(135), float64] */;
  %401 = reshape(%399, newshape=[9, 3, 1]) /* ty=Tensor[(9, 3, 1), float64] */;
  %402 = reshape(%400, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), float64] */;
  %403 = @func_198(%401, %402) /* ty=(Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64]) */;
  %404 = cast(%var_637, dtype="bool") /* ty=Tensor[(6, 9, 10), bool] */;
  %405 = shape_of(%394, dtype="int32") /* ty=Tensor[(3), int32] */;
  %406 = cast(%394, dtype="bool") /* ty=Tensor[(6, 9, 10), bool] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %408 = greater(%406, %407) /* ty=Tensor[(6, 9, 10), bool] */;
  %409 = cast(%408, dtype="float32") /* ty=Tensor[(6, 9, 10), float32] */;
  %410 = logical_or(%397, %398) /* ty=Tensor[(6, 9, 10), bool] */;
  %411 = %403.1;
  %412 = asin(%409) /* ty=Tensor[(6, 9, 10), float32] */;
  (%410, %411, meta[relay.Constant][30] /* ty=Tensor[(27, 1), float64] */, %var_653, %412)
}

def @func_8648() -> (Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), bool]) {
  %413 = @func_4200() /* ty=Tensor[(3, 2, 2), float32] */;
  %414 = cast(meta[relay.Constant][31] /* ty=Tensor[(3, 2, 2), float32] */, dtype="bool") /* ty=Tensor[(3, 2, 2), bool] */;
  %415 = shape_of(%413, dtype="int32") /* ty=Tensor[(3), int32] */;
  %416 = cast(%413, dtype="bool") /* ty=Tensor[(3, 2, 2), bool] */;
  %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %418 = greater(%416, %417) /* ty=Tensor[(3, 2, 2), bool] */;
  %419 = @func_2601() /* ty=Tensor[(3, 2, 2), bool] */;
  (%418, %419)
}

def @func_3972() -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) {
  %420 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %421 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %422 = %421.0;
  %423 = cast(%422, dtype="float64") /* ty=Tensor[(3, 2, 2), float64] */;
  %424 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %425 = %424.0;
  %426 = cast(%425, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %427 = %420.0;
  %428 = acosh(%423) /* ty=Tensor[(3, 2, 2), float64] */;
  %429 = cosh(%426) /* ty=Tensor[(15, 10, 11), float32] */;
  (%427, %428, %429)
}

def @func_10721() -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32]) {
  %430 = @func_10667() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(12, 2, 9), float32], Tensor[(216), float32]) */;
  %431 = @func_8648() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), bool]) */;
  %432 = %430.0;
  %433 = %431.1;
  %434 = @func_10004() /* ty=Tensor[(3, 2, 2), float32] */;
  (%432, %433, %434)
}

def @func_9746() -> Tensor[(3, 2, 2), float32] {
  @func_5837() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_11797() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
  %435 = @func_11233() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %436 = %435.0;
  %437 = @func_5378() /* ty=Tensor[(3, 2, 2), float32] */;
  (%436, %437)
}

def @func_8429() -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(540), float32]) {
  %438 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %439 = @func_2551() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %440 = @func_4802() /* ty=(Tensor[(540), float32],) */;
  %441 = %438.0;
  %442 = %439.0;
  %443 = %440.0;
  (%441, %442, %443)
}

def @func_3988() -> (Tensor[(3, 2, 2), float32],) {
  %444 = @func_2426() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %445 = %444.0;
  (%445,)
}

def @func_1936(%var_1925: Tensor[(1, 27), float64]) -> (Tensor[(14, 15, 2), float64], Tensor[(3, 2, 2), float32], Tensor[(1, 27), float64], Tensor[(3, 2, 2), bool]) {
  %446 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(14, 15, 2), float64] */;
  %447 = cast(%var_1925, dtype="float64") /* ty=Tensor[(1, 27), float64] */;
  %448 = cast(%var_1925, dtype="float64") /* ty=Tensor[(1, 27), float64] */;
  %449 = reshape(%447, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %450 = reshape(%448, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %451 = @func_1584(%449, %450) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(540), float32], Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(9, 3, 5), float64], Tensor[(27), bool]) */;
  %452 = %451.0;
  %453 = cast(%452, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  %454 = reshape(%453, newshape=[3, 2, 2]) /* ty=Tensor[(3, 2, 2), float32] */;
  %455 = asinh(%446) /* ty=Tensor[(14, 15, 2), float64] */;
  %456 = @func_1722(%454) /* ty=Tensor[(3, 2, 2), bool] */;
  (%455, %452, %var_1925, %456)
}

def @func_4786() -> (Tensor[(3, 2, 2), float32],) {
  %457 = @func_3972() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) */;
  %458 = %457.0;
  %459 = cast(%458, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  %460 = acos(%459) /* ty=Tensor[(3, 2, 2), float32] */;
  (%460,)
}

def @func_2405() -> (Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) {
  %461 = cast(meta[relay.Constant][33] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %462 = cast(meta[relay.Constant][34] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %463 = @func_2254() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(27), float64], Tensor[(3, 2, 2), float32]) */;
  %464 = %463.2;
  %465 = cast(%464, dtype="float64") /* ty=Tensor[(27), float64] */;
  %466 = reshape(%461, newshape=[7, 7, 10]) /* ty=Tensor[(7, 7, 10), float32] */;
  %467 = reshape(%462, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %468 = reshape(%465, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %469 = @func_1240(%466, %467, %468) /* ty=(Tensor[(7, 7, 10), float32], Tensor[(27), float64], Tensor[(540), float32], Tensor[(27), float64]) */;
  %470 = %469.1;
  %471 = cast(%470, dtype="float64") /* ty=Tensor[(27), float64] */;
  %472 = reshape(%471, newshape=[1, 27]) /* ty=Tensor[(1, 27), float64] */;
  %473 = @func_1936(%472) /* ty=(Tensor[(14, 15, 2), float64], Tensor[(3, 2, 2), float32], Tensor[(1, 27), float64], Tensor[(3, 2, 2), bool]) */;
  %474 = cast(%470, dtype="bool") /* ty=Tensor[(27), bool] */;
  %475 = shape_of(%464, dtype="int32") /* ty=Tensor[(1), int32] */;
  %476 = cast(%464, dtype="bool") /* ty=Tensor[(27), bool] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?), bool] */;
  %478 = less(%476, %477) /* ty=Tensor[(27), bool] */;
  %479 = cast(%464, dtype="int32") /* ty=Tensor[(27), int32] */;
  %480 = shape_of(%478, dtype="int32") /* ty=Tensor[(1), int32] */;
  %481 = cast(%478, dtype="int32") /* ty=Tensor[(27), int32] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?), int32] */;
  %483 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %484 = cast(meta[relay.Constant][35] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %485 = cast(meta[relay.Constant][35] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %486 = reshape(%484, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
  %487 = reshape(%485, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
  %488 = %473.1;
  %489 = right_shift(%481, %482) /* ty=Tensor[(27), int32] */;
  %490 = %483.0;
  %491 = @func_2117(%486, %487) /* ty=Tensor[(15, 10, 11), float32] */;
  (meta[relay.Constant][33] /* ty=Tensor[(490), float32] */, meta[relay.Constant][34] /* ty=Tensor[(540), float32] */, %488, %489, %490, %491, meta[relay.Constant][35] /* ty=Tensor[(1650), float32] */)
}

def @func_9232(%var_9228: Tensor[(13, 7, 9), bool]) -> (Tensor[(13, 7, 9), bool],) {
  %492 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %493 = cast(%var_9228, dtype="bool") /* ty=Tensor[(13, 7, 9), bool] */;
  %494 = logical_or(%492, %493) /* ty=Tensor[(13, 7, 9), bool] */;
  (%494,)
}

def @func_7839(%var_7831: Tensor[(2, 10, 11), float32], %var_7832: Tensor[(2, 10, 11), float32]) -> (Tensor[(2, 10, 11), float32],) {
  %495 = cast(%var_7832, dtype="float32") /* ty=Tensor[(2, 10, 11), float32] */;
  %496 = shape_of(%var_7831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %497 = cast(%var_7831, dtype="float32") /* ty=Tensor[(2, 10, 11), float32] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %499 = floor_mod(%497, %498) /* ty=Tensor[(2, 10, 11), float32] */;
  (%499,)
}

def @func_4650() -> (Tensor[(15, 10, 11), float32],) {
  %500 = @func_4266() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %501 = %500.2;
  (%501,)
}

def @func_5826() -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
  %502 = @func_4748() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %503 = @func_2700() /* ty=Tensor[(15, 10, 11), float32] */;
  %504 = %502.0;
  %505 = @func_2787() /* ty=Tensor[(15, 10, 11), float32] */;
  (%503, %504, %505)
}

def @func_9777(%var_9766: Tensor[(1, 1, 7), float32]) -> (Tensor[(1, 1, 7), float32],) {
  %506 = cast(%var_9766, dtype="float32") /* ty=Tensor[(1, 1, 7), float32] */;
  %507 = rsqrt(%506) /* ty=Tensor[(1, 1, 7), float32] */;
  (%507,)
}

def @func_2426() -> (Tensor[(3, 2, 2), float32],) {
  %508 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
  %509 = %508.4;
  (%509,)
}

def @func_1271(%var_1265: Tensor[(270, 2), float32]) -> (Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(270, 2), float32], Tensor[(135), float64]) {
  %510 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %511 = cast(%var_1265, dtype="float32") /* ty=Tensor[(270, 2), float32] */;
  %512 = cast(%var_1265, dtype="float32") /* ty=Tensor[(270, 2), float32] */;
  %513 = cast(meta[relay.Constant][36] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %514 = reshape(%511, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float32] */;
  %515 = reshape(%512, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float32] */;
  %516 = reshape(%513, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %517 = @func_665(%514, %515, %516) /* ty=(Tensor[(6, 9, 10), bool], Tensor[(9, 3, 5), float64], Tensor[(27, 1), float64], Tensor[(135), float64], Tensor[(6, 9, 10), float32]) */;
  %518 = %510.0;
  %519 = %517.3;
  (%518, %519, %var_1265, meta[relay.Constant][36] /* ty=Tensor[(135), float64] */)
}

def @func_8801(%var_8743: Tensor[(16, 6, 4), float64]) -> (Tensor[(16, 6, 4), float64], Tensor[(16, 6, 4), float32], Tensor[(15, 10, 11), float32]) {
  %520 = cast(%var_8743, dtype="float64") /* ty=Tensor[(16, 6, 4), float64] */;
  %521 = cast(%var_8743, dtype="float32") /* ty=Tensor[(16, 6, 4), float32] */;
  %522 = @func_6399() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */;
  %523 = log2(%520) /* ty=Tensor[(16, 6, 4), float64] */;
  %524 = asin(%521) /* ty=Tensor[(16, 6, 4), float32] */;
  %525 = %522.0;
  (%523, %524, %525)
}

def @func_3311() -> Tensor[(540), float32] {
  %526 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
  %526.1
}

def @func_8910(%var_8886: Tensor[(1650), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(3, 2, 2), float32], Tensor[(1650), bool], Tensor[(1650), float32]) {
  %527 = @func_2426() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %528 = @func_7164() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */;
  %529 = @func_6578() /* ty=Tensor[(1650), float64] */;
  %530 = cast(%var_8886, dtype="bool") /* ty=Tensor[(1650), bool] */;
  %531 = shape_of(%529, dtype="int32") /* ty=Tensor[(1), int32] */;
  %532 = cast(%529, dtype="bool") /* ty=Tensor[(1650), bool] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?), bool] */;
  %534 = cast(%var_8886, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %535 = atan(%534) /* ty=Tensor[(1650), float32] */;
  %536 = cast(%535, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %537 = %527.0;
  %538 = @func_8240() /* ty=Tensor[(135), float64] */;
  %539 = %528.1;
  %540 = not_equal(%532, %533) /* ty=Tensor[(1650), bool] */;
  %541 = acos(%536) /* ty=Tensor[(1650), float32] */;
  (%537, %538, %539, %540, %541)
}

def @func_1329(%var_1311: Tensor[(540), float32], %var_1312: Tensor[(3, 9), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(490, 1), float32], Tensor[(540), float32], Tensor[(3, 9), float64]) {
  %542 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %543 = %542.0;
  %544 = cast(%543, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  %545 = cast(meta[relay.Constant][37] /* ty=Tensor[(490, 1), float32] */, dtype="float32") /* ty=Tensor[(490, 1), float32] */;
  %546 = cast(%var_1311, dtype="float32") /* ty=Tensor[(540), float32] */;
  %547 = cast(%var_1312, dtype="float64") /* ty=Tensor[(3, 9), float64] */;
  %548 = reshape(%545, newshape=[7, 7, 10]) /* ty=Tensor[(7, 7, 10), float32] */;
  %549 = reshape(%546, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %550 = reshape(%547, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %551 = @func_1240(%548, %549, %550) /* ty=(Tensor[(7, 7, 10), float32], Tensor[(27), float64], Tensor[(540), float32], Tensor[(27), float64]) */;
  %552 = tan(%544) /* ty=Tensor[(3, 2, 2), float32] */;
  %553 = %551.3;
  (%552, %553, meta[relay.Constant][37] /* ty=Tensor[(490, 1), float32] */, %var_1311, %var_1312)
}

def @func_7164() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
  %554 = @func_3512() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %555 = %554.0;
  %556 = @func_6436() /* ty=Tensor[(3, 2, 2), float32] */;
  (%555, %556)
}

def @func_4820() -> Tensor[(15, 10, 11), float32] {
  @func_4474() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_10131() -> (Tensor[(14, 7, 15), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(270, 2), bool]) {
  %557 = cast(meta[relay.Constant][39] /* ty=Tensor[(14, 7, 15), uint8] */, dtype="bool") /* ty=Tensor[(14, 7, 15), bool] */;
  %558 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(14, 7, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 7, 15), uint8] */, dtype="bool") /* ty=Tensor[(14, 7, 15), bool] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %561 = @func_7682() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(15, 10, 11), float32]) */;
  %562 = cast(meta[relay.Constant][40] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %563 = reshape(%562, newshape=[270, 2]) /* ty=Tensor[(270, 2), float32] */;
  %564 = @func_1271(%563) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(270, 2), float32], Tensor[(135), float64]) */;
  %565 = %564.2;
  %566 = cast(meta[relay.Constant][40] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %567 = shape_of(%565, dtype="int32") /* ty=Tensor[(2), int32] */;
  %568 = cast(%565, dtype="float32") /* ty=Tensor[(270, 2), float32] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %570 = floor_mod(%568, %569) /* ty=Tensor[(270, 2), float32] */;
  %571 = cast(meta[relay.Constant][40] /* ty=Tensor[(540), float32] */, dtype="bool") /* ty=Tensor[(540), bool] */;
  %572 = shape_of(%570, dtype="int32") /* ty=Tensor[(2), int32] */;
  %573 = cast(%570, dtype="bool") /* ty=Tensor[(270, 2), bool] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %575 = less_equal(%559, %560) /* ty=Tensor[(14, 7, 15), bool] */;
  %576 = %561.1;
  %577 = @func_9746() /* ty=Tensor[(3, 2, 2), float32] */;
  %578 = less(%573, %574) /* ty=Tensor[(270, 2), bool] */;
  (%575, %576, %577, %578)
}

def @func_9992() -> Tensor[(3, 2, 2), float32] {
  @func_4928() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_11021() -> (Tensor[(4, 12, 3), float64], Tensor[(540), float32]) {
  %579 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 12, 3), float64] */, dtype="float64") /* ty=Tensor[(4, 12, 3), float64] */;
  %580 = asinh(%579) /* ty=Tensor[(4, 12, 3), float64] */;
  %581 = @func_3311() /* ty=Tensor[(540), float32] */;
  (%580, %581)
}

def @func_11525(%var_11481: Tensor[(540), float32]) -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(27), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) {
  %582 = @func_11379() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %583 = @func_3988() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %584 = cast(meta[relay.Constant][42] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %585 = cast(meta[relay.Constant][43] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %586 = cast(%var_11481, dtype="float32") /* ty=Tensor[(540), float32] */;
  %587 = reshape(%584, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %588 = reshape(%585, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %589 = reshape(%586, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %590 = @func_1357(%587, %588, %589) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(7, 7, 10), float32], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(270, 2), float32]) */;
  %591 = @func_5378() /* ty=Tensor[(3, 2, 2), float32] */;
  %592 = %582.0;
  %593 = %583.0;
  %594 = @func_8291() /* ty=Tensor[(15, 10, 11), float32] */;
  %595 = %590.4;
  (%591, %592, %593, %594, %595, meta[relay.Constant][42] /* ty=Tensor[(1040), float64] */, meta[relay.Constant][43] /* ty=Tensor[(490), float32] */, %var_11481)
}

def @func_9078(%var_9054: Tensor[(3, 12, 12), uint8], %var_9055: Tensor[(3, 12, 12), uint8]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 12, 12), bool]) {
  %596 = @func_7682() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(15, 10, 11), float32]) */;
  %597 = cast(%var_9055, dtype="bool") /* ty=Tensor[(3, 12, 12), bool] */;
  %598 = shape_of(%var_9054, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%var_9054, dtype="bool") /* ty=Tensor[(3, 12, 12), bool] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %601 = less(%599, %600) /* ty=Tensor[(3, 12, 12), bool] */;
  %602 = cast(%var_9054, dtype="bool") /* ty=Tensor[(3, 12, 12), bool] */;
  %603 = shape_of(%601, dtype="int32") /* ty=Tensor[(3), int32] */;
  %604 = cast(%601, dtype="bool") /* ty=Tensor[(3, 12, 12), bool] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %606 = %596.3;
  %607 = not_equal(%604, %605) /* ty=Tensor[(3, 12, 12), bool] */;
  (%606, %607)
}

def @func_3870(%var_3846: Tensor[(9, 2, 9), float64]) -> (Tensor[(9, 2, 9), float64], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) {
  %608 = cast(%var_3846, dtype="float64") /* ty=Tensor[(9, 2, 9), float64] */;
  %609 = @func_2551() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %610 = log(%608) /* ty=Tensor[(9, 2, 9), float64] */;
  %611 = @func_3217() /* ty=Tensor[(3, 2, 2), float32] */;
  %612 = %609.0;
  (%610, %611, %612)
}

def @func_9947() -> Tensor[(12, 2, 10), float32] {
  %613 = cast(meta[relay.Constant][44] /* ty=Tensor[(12, 2, 10), float32] */, dtype="float32") /* ty=Tensor[(12, 2, 10), float32] */;
  cos(%613) /* ty=Tensor[(12, 2, 10), float32] */
}

def @func_4748() -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
  %614 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %615 = %614.0;
  %616 = @func_3481() /* ty=Tensor[(15, 10, 11), float32] */;
  (%615, %616)
}

def @func_4802() -> (Tensor[(540), float32],) {
  %617 = @func_3311() /* ty=Tensor[(540), float32] */;
  (%617,)
}

def @func_4631(%var_4627: Tensor[(490), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(1040), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) {
  %618 = @func_2700() /* ty=Tensor[(15, 10, 11), float32] */;
  %619 = cast(%618, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %620 = cast(meta[relay.Constant][45] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %621 = cast(%var_4627, dtype="float32") /* ty=Tensor[(490), float32] */;
  %622 = cast(meta[relay.Constant][46] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %623 = reshape(%620, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %624 = reshape(%621, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %625 = reshape(%622, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %626 = @func_1985(%623, %624, %625) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) */;
  %627 = log10(%619) /* ty=Tensor[(15, 10, 11), float32] */;
  %628 = %626.2;
  (%627, %628, meta[relay.Constant][45] /* ty=Tensor[(1040), float64] */, %var_4627, meta[relay.Constant][46] /* ty=Tensor[(540), float32] */)
}

def @func_10640() -> Tensor[(15, 10, 11), float32] {
  @func_10187() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_10981() -> (Tensor[(540), float32],) {
  %629 = @func_7127() /* ty=(Tensor[(540), float32], Tensor[(3, 2, 2), float32]) */;
  %630 = %629.0;
  (%630,)
}

def @func_4528() -> (Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) {
  %631 = @func_2601() /* ty=Tensor[(3, 2, 2), bool] */;
  %632 = @func_3217() /* ty=Tensor[(3, 2, 2), float32] */;
  %633 = @func_3217() /* ty=Tensor[(3, 2, 2), float32] */;
  %634 = @func_3481() /* ty=Tensor[(15, 10, 11), float32] */;
  (%631, %632, %633, %634)
}

def @func_10512() -> Tensor[(15, 10, 11), float32] {
  %635 = @func_2551() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %635.0
}

def @func_1868() -> (Tensor[(3, 2, 2), float32],) {
  %636 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %637 = %636.0;
  (%637,)
}

def @func_5037() -> (Tensor[(3, 2, 2), float32], Tensor[(540), float32]) {
  %638 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %639 = %638.0;
  %640 = @func_3311() /* ty=Tensor[(540), float32] */;
  (%639, %640)
}

def @func_4980(%var_4944: Tensor[(8, 5, 8), float32], %var_4966: Tensor[(27), float64]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(8, 5, 8), float32]) {
  %641 = @func_3512() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %642 = cast(%var_4966, dtype="float64") /* ty=Tensor[(27), float64] */;
  %643 = cast(%var_4966, dtype="float64") /* ty=Tensor[(27), float64] */;
  %644 = reshape(%642, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %645 = reshape(%643, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %646 = @func_1584(%644, %645) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(540), float32], Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(9, 3, 5), float64], Tensor[(27), bool]) */;
  %647 = cast(%var_4944, dtype="float32") /* ty=Tensor[(8, 5, 8), float32] */;
  %648 = acosh(%647) /* ty=Tensor[(8, 5, 8), float32] */;
  %649 = cast(%648, dtype="float32") /* ty=Tensor[(8, 5, 8), float32] */;
  %650 = %641.0;
  %651 = %646.0;
  %652 = sqrt(%649) /* ty=Tensor[(8, 5, 8), float32] */;
  (%650, %651, %var_4966, %652)
}

def @func_3744() -> Tensor[(15, 10, 11), float32] {
  %653 = @func_2551() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %653.0
}

def @func_4928() -> Tensor[(3, 2, 2), float32] {
  %654 = @func_4567() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %654.0
}

def @func_3143() -> (Tensor[(15, 10, 11), float32],) {
  %655 = @func_2787() /* ty=Tensor[(15, 10, 11), float32] */;
  (%655,)
}

def @func_8398() -> (Tensor[(3, 2, 2), float32],) {
  %656 = @func_4786() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %657 = %656.0;
  (%657,)
}

def @func_9124() -> (Tensor[(15, 10, 11), float32], Tensor[(540), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32]) {
  %658 = @func_3972() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) */;
  %659 = cast(meta[relay.Constant][47] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %660 = reshape(%659, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %661 = @func_8978(%660) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */;
  %662 = %658.2;
  %663 = %661.2;
  %664 = @func_4043() /* ty=Tensor[(3, 2, 2), float32] */;
  (%662, %663, meta[relay.Constant][47] /* ty=Tensor[(540), float32] */, %664)
}

def @func_10801(%var_10774: Tensor[(15, 10, 3), int64], %var_10775: Tensor[(15, 10, 3), int64]) -> Tensor[(15, 10, 3), int64] {
  %665 = cast(%var_10775, dtype="int64") /* ty=Tensor[(15, 10, 3), int64] */;
  %666 = shape_of(%var_10774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %667 = cast(%var_10774, dtype="int64") /* ty=Tensor[(15, 10, 3), int64] */;
  %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  logical_xor(%667, %668) /* ty=Tensor[(15, 10, 3), int64] */
}

def @func_2232(%var_2213: Tensor[(3, 2, 2), float32]) -> (Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float64]) {
  %669 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %670 = %669.0;
  %671 = cast(%var_2213, dtype="bool") /* ty=Tensor[(3, 2, 2), bool] */;
  %672 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%670, dtype="bool") /* ty=Tensor[(3, 2, 2), bool] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %675 = cast(meta[relay.Constant][48] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %676 = reshape(%675, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %677 = @func_1473(%676) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */;
  %678 = cast(%670, dtype="float64") /* ty=Tensor[(3, 2, 2), float64] */;
  %679 = less(%673, %674) /* ty=Tensor[(3, 2, 2), bool] */;
  %680 = %677.1;
  %681 = log2(%678) /* ty=Tensor[(3, 2, 2), float64] */;
  (%679, %680, meta[relay.Constant][48] /* ty=Tensor[(540), float32] */, %681)
}

def @func_5195(%var_5141: Tensor[(1040), float64], %var_5142: Tensor[(490), float32], %var_5143: Tensor[(540), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(8, 5, 8), float32], Tensor[(40, 8), float32], Tensor[(27), float64], Tensor[(540), float32]) {
  %682 = cast(%var_5141, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %683 = cast(%var_5142, dtype="float32") /* ty=Tensor[(490), float32] */;
  %684 = cast(%var_5143, dtype="float32") /* ty=Tensor[(540), float32] */;
  %685 = reshape(%682, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %686 = reshape(%683, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %687 = reshape(%684, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %688 = @func_1985(%685, %686, %687) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) */;
  %689 = cast(meta[relay.Constant][49] /* ty=Tensor[(40, 8), float32] */, dtype="float32") /* ty=Tensor[(40, 8), float32] */;
  %690 = cast(meta[relay.Constant][50] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %691 = reshape(%689, newshape=[8, 5, 8]) /* ty=Tensor[(8, 5, 8), float32] */;
  %692 = reshape(%690, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %693 = @func_4980(%691, %692) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(8, 5, 8), float32]) */;
  %694 = cast(%var_5141, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %695 = cast(%var_5142, dtype="float32") /* ty=Tensor[(490), float32] */;
  %696 = cast(%var_5143, dtype="float32") /* ty=Tensor[(540), float32] */;
  %697 = reshape(%694, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %698 = reshape(%695, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %699 = reshape(%696, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %700 = @func_1985(%697, %698, %699) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) */;
  %701 = @func_4820() /* ty=Tensor[(15, 10, 11), float32] */;
  %702 = %688.0;
  %703 = %693.3;
  %704 = %700.4;
  (%701, %702, %var_5141, %var_5142, %var_5143, %703, meta[relay.Constant][49] /* ty=Tensor[(40, 8), float32] */, meta[relay.Constant][50] /* ty=Tensor[(27), float64] */, %704)
}

def @func_1985(%var_1980: Tensor[(1040), float64], %var_1981: Tensor[(490), float32], %var_1982: Tensor[(540), float32]) -> (Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) {
  %705 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %706 = cast(%var_1980, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %707 = cast(%var_1981, dtype="float32") /* ty=Tensor[(490), float32] */;
  %708 = cast(%var_1982, dtype="float32") /* ty=Tensor[(540), float32] */;
  %709 = reshape(%706, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %710 = reshape(%707, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %711 = reshape(%708, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %712 = @func_1357(%709, %710, %711) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(7, 7, 10), float32], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(270, 2), float32]) */;
  %713 = %705.0;
  %714 = %712.4;
  (%713, %714, %var_1980, %var_1981, %var_1982)
}

def @func_2439() -> (Tensor[(3, 2, 2), float32],) {
  %715 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %716 = %715.0;
  (%716,)
}

def @func_198(%var_162: Tensor[(9, 3, 1), float64], %var_163: Tensor[(9, 3, 5), float64]) -> (Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64]) {
  %717 = cast(%var_162, dtype="float64") /* ty=Tensor[(9, 3, 1), float64] */;
  %718 = cast(%var_163, dtype="float64") /* ty=Tensor[(9, 3, 5), float64] */;
  %719 = cast(meta[relay.Constant][51] /* ty=Tensor[(9, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(9, 3, 5), float64] */;
  %720 = shape_of(%var_163, dtype="int32") /* ty=Tensor[(3), int32] */;
  %721 = cast(%var_163, dtype="float64") /* ty=Tensor[(9, 3, 5), float64] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %723 = cast(meta[relay.Constant][51] /* ty=Tensor[(9, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(9, 3, 5), float64] */;
  %724 = divide(%717, %718) /* ty=Tensor[(9, 3, 5), float64] */;
  %725 = power(%721, %722) /* ty=Tensor[(9, 3, 5), float64] */;
  %726 = acosh(%723) /* ty=Tensor[(9, 3, 5), float64] */;
  (%724, %725, %726)
}

def @func_6554(%var_6540: Tensor[(11, 6, 10), float32], %var_6544: Tensor[(1040), float64], %var_6545: Tensor[(490), float32]) -> (Tensor[(11, 6, 10), float32], Tensor[(490), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) {
  %727 = cast(%var_6540, dtype="float32") /* ty=Tensor[(11, 6, 10), float32] */;
  %728 = cast(%var_6544, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %729 = cast(%var_6545, dtype="float32") /* ty=Tensor[(490), float32] */;
  %730 = cast(meta[relay.Constant][52] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %731 = reshape(%728, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %732 = reshape(%729, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %733 = reshape(%730, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %734 = @func_1357(%731, %732, %733) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(7, 7, 10), float32], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(270, 2), float32]) */;
  %735 = asin(%727) /* ty=Tensor[(11, 6, 10), float32] */;
  %736 = %734.2;
  (%735, %736, %var_6544, %var_6545, meta[relay.Constant][52] /* ty=Tensor[(540), float32] */)
}

def @func_2759(%var_2738: Tensor[(27), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(135), float64], Tensor[(9, 3, 5), float32]) {
  %737 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
  %738 = cast(%var_2738, dtype="float64") /* ty=Tensor[(27), float64] */;
  %739 = cast(meta[relay.Constant][53] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %740 = reshape(%738, newshape=[9, 3, 1]) /* ty=Tensor[(9, 3, 1), float64] */;
  %741 = reshape(%739, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), float64] */;
  %742 = @func_198(%740, %741) /* ty=(Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64]) */;
  %743 = %742.2;
  %744 = cast(%743, dtype="float32") /* ty=Tensor[(9, 3, 5), float32] */;
  %745 = %737.4;
  %746 = asinh(%744) /* ty=Tensor[(9, 3, 5), float32] */;
  (%745, %var_2738, meta[relay.Constant][53] /* ty=Tensor[(135), float64] */, %746)
}

def @func_6578() -> Tensor[(1650), float64] {
  %747 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
  %748 = %747.6;
  %749 = cast(%748, dtype="float64") /* ty=Tensor[(1650), float64] */;
  atanh(%749) /* ty=Tensor[(1650), float64] */
}

def @func_10165() -> (Tensor[(27), int32],) {
  %750 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
  %751 = %750.3;
  (%751,)
}

def @func_9679(%var_9663: Tensor[(320), float32], %var_9664: Tensor[(27), float64]) -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(320), float32], Tensor[(27), float32], Tensor[(15, 10, 11), float32]) {
  %752 = @func_3602() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
  %753 = cast(%var_9663, dtype="float32") /* ty=Tensor[(320), float32] */;
  %754 = cast(%var_9664, dtype="float64") /* ty=Tensor[(27), float64] */;
  %755 = reshape(%753, newshape=[8, 5, 8]) /* ty=Tensor[(8, 5, 8), float32] */;
  %756 = reshape(%754, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %757 = @func_4980(%755, %756) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(8, 5, 8), float32]) */;
  %758 = cast(%var_9664, dtype="float32") /* ty=Tensor[(27), float32] */;
  %759 = %752.1;
  %760 = %757.0;
  %761 = exp(%758) /* ty=Tensor[(27), float32] */;
  %762 = @func_8693() /* ty=Tensor[(15, 10, 11), float32] */;
  (%759, %760, %var_9663, %761, %762)
}

def @func_5612(%var_5574: Tensor[(3, 180), float32], %var_5586: Tensor[(3, 180), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 180), float32]) {
  %763 = @func_4650() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %764 = cast(%var_5574, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %765 = reshape(%764, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %766 = @func_1473(%765) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */;
  %767 = cast(%var_5586, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %768 = shape_of(%var_5574, dtype="int32") /* ty=Tensor[(2), int32] */;
  %769 = cast(%var_5574, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %771 = %763.0;
  %772 = %766.1;
  %773 = divide(%769, %770) /* ty=Tensor[(3, 180), float32] */;
  (%771, %772, %773)
}

def @func_7682() -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(15, 10, 11), float32]) {
  %774 = @func_2498() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) */;
  %775 = cast(meta[relay.Constant][54] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %776 = reshape(%775, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %777 = @func_6521(%776) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(162), float64], Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(27), float32], Tensor[(3, 180), uint16]) */;
  %778 = @func_2551() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %779 = %774.0;
  %780 = %777.3;
  %781 = %778.0;
  (%779, %780, meta[relay.Constant][54] /* ty=Tensor[(27), float64] */, %781)
}

def @func_9981() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), bool], Tensor[(1, 12), float32], Tensor[(15, 10, 11), float32]) {
  %782 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 12), float32] */, dtype="float32") /* ty=Tensor[(1, 12), float32] */;
  %783 = reshape(%782, newshape=[3, 2, 2]) /* ty=Tensor[(3, 2, 2), float32] */;
  %784 = @func_4129() /* ty=Tensor[(15, 10, 11), float32] */;
  %785 = @func_1722(%783) /* ty=Tensor[(3, 2, 2), bool] */;
  %786 = @func_7696() /* ty=Tensor[(15, 10, 11), float32] */;
  (%784, %785, meta[relay.Constant][55] /* ty=Tensor[(1, 12), float32] */, %786)
}

def @func_10333() -> Tensor[(15, 10, 11), float32] {
  %787 = @func_4748() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %787.0
}

def @func_4902() -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
  %788 = @func_4650() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %789 = %788.0;
  %790 = cast(%789, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %791 = cast(%789, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %792 = reshape(%790, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
  %793 = reshape(%791, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
  %794 = @func_2117(%792, %793) /* ty=Tensor[(15, 10, 11), float32] */;
  (%789, %794)
}

def @func_1584(%var_1555: Tensor[(27), float64], %var_1570: Tensor[(27), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(540), float32], Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(9, 3, 5), float64], Tensor[(27), bool]) {
  %795 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %796 = cast(meta[relay.Constant][56] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %797 = reshape(%796, newshape=[270, 2]) /* ty=Tensor[(270, 2), float32] */;
  %798 = @func_1271(%797) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(270, 2), float32], Tensor[(135), float64]) */;
  %799 = cast(meta[relay.Constant][57] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %800 = cast(meta[relay.Constant][58] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %801 = cast(meta[relay.Constant][56] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %802 = reshape(%799, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %803 = reshape(%800, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %804 = reshape(%801, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %805 = @func_1357(%802, %803, %804) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(7, 7, 10), float32], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(270, 2), float32]) */;
  %806 = cast(%var_1555, dtype="float64") /* ty=Tensor[(27), float64] */;
  %807 = %798.3;
  %808 = cast(%807, dtype="float64") /* ty=Tensor[(135), float64] */;
  %809 = reshape(%806, newshape=[9, 3, 1]) /* ty=Tensor[(9, 3, 1), float64] */;
  %810 = reshape(%808, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), float64] */;
  %811 = @func_198(%809, %810) /* ty=(Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64]) */;
  %812 = cast(%var_1570, dtype="bool") /* ty=Tensor[(27), bool] */;
  %813 = shape_of(%var_1555, dtype="int32") /* ty=Tensor[(1), int32] */;
  %814 = cast(%var_1555, dtype="bool") /* ty=Tensor[(27), bool] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?), bool] */;
  %816 = %795.0;
  %817 = %805.0;
  %818 = %811.2;
  %819 = greater(%814, %815) /* ty=Tensor[(27), bool] */;
  (%816, %807, meta[relay.Constant][56] /* ty=Tensor[(540), float32] */, %817, meta[relay.Constant][57] /* ty=Tensor[(1040), float64] */, meta[relay.Constant][58] /* ty=Tensor[(490), float32] */, %818, %819)
}

def @func_1791(%var_1788: Tensor[(27), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(54, 10), float32], Tensor[(27), float64]) {
  %820 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %821 = %820.0;
  %822 = cast(%821, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  %823 = reshape(%822, newshape=[3, 2, 2]) /* ty=Tensor[(3, 2, 2), float32] */;
  %824 = @func_1722(%823) /* ty=Tensor[(3, 2, 2), bool] */;
  %825 = cast(%821, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  %826 = shape_of(%824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(%824, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %829 = cast(meta[relay.Constant][59] /* ty=Tensor[(54, 10), float32] */, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %830 = cast(%var_1788, dtype="float64") /* ty=Tensor[(27), float64] */;
  %831 = reshape(%829, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %832 = reshape(%830, newshape=[3, 9]) /* ty=Tensor[(3, 9), float64] */;
  %833 = @func_1329(%831, %832) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(490, 1), float32], Tensor[(540), float32], Tensor[(3, 9), float64]) */;
  %834 = multiply(%827, %828) /* ty=Tensor[(3, 2, 2), float32] */;
  %835 = %833.3;
  (%834, %835, meta[relay.Constant][59] /* ty=Tensor[(54, 10), float32] */, %var_1788)
}

def @func_9648() -> Tensor[(3, 2, 2), float32] {
  %836 = @func_8398() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %836.0
}

def @func_11170(%var_11125: Tensor[(1, 390), int64]) -> (Tensor[(270, 2), bool], Tensor[(2, 15, 13), float32], Tensor[(7, 390), uint8]) {
  %837 = @func_10860() /* ty=(Tensor[(270, 2), bool], Tensor[(15, 10, 11), float32]) */;
  %838 = cast(%var_11125, dtype="int64") /* ty=Tensor[(1, 390), int64] */;
  %839 = cast(%var_11125, dtype="int64") /* ty=Tensor[(1, 390), int64] */;
  %840 = reshape(%838, newshape=[2, 15, 13]) /* ty=Tensor[(2, 15, 13), int64] */;
  %841 = reshape(%839, newshape=[2, 15, 13]) /* ty=Tensor[(2, 15, 13), int64] */;
  %842 = @func_3769(%840, %841) /* ty=(Tensor[(2, 15, 13), int64], Tensor[(2, 15, 13), bool]) */;
  %843 = %842.1;
  %844 = cast(%843, dtype="float32") /* ty=Tensor[(2, 15, 13), float32] */;
  %845 = cast(%var_11125, dtype="float32") /* ty=Tensor[(1, 390), float32] */;
  %846 = atan(%845) /* ty=Tensor[(1, 390), float32] */;
  %847 = cast(%846, dtype="float64") /* ty=Tensor[(1, 390), float64] */;
  %848 = sqrt(%847) /* ty=Tensor[(1, 390), float64] */;
  %849 = cast(%848, dtype="uint8") /* ty=Tensor[(1, 390), uint8] */;
  %850 = cast(meta[relay.Constant][60] /* ty=Tensor[(7, 390), float64] */, dtype="uint8") /* ty=Tensor[(7, 390), uint8] */;
  %851 = %837.0;
  %852 = rsqrt(%844) /* ty=Tensor[(2, 15, 13), float32] */;
  %853 = bitwise_xor(%849, %850) /* ty=Tensor[(7, 390), uint8] */;
  (%851, %852, %853)
}

def @func_10762() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
  %854 = @func_6740() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %855 = @func_6399() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */;
  %856 = %854.0;
  %857 = %855.1;
  (%856, %857)
}

def @func_11947(%var_11917: Tensor[(270, 2), bool]) -> (Tensor[(270, 2), bool], Tensor[(1, 1, 7), float32], Tensor[(7, 1), float32], Tensor[(270, 2), float32]) {
  %858 = @func_10131() /* ty=(Tensor[(14, 7, 15), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(270, 2), bool]) */;
  %859 = %858.3;
  %860 = cast(%var_11917, dtype="bool") /* ty=Tensor[(270, 2), bool] */;
  %861 = shape_of(%859, dtype="int32") /* ty=Tensor[(2), int32] */;
  %862 = cast(%859, dtype="bool") /* ty=Tensor[(270, 2), bool] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %864 = cast(meta[relay.Constant][61] /* ty=Tensor[(7, 1), float32] */, dtype="float32") /* ty=Tensor[(7, 1), float32] */;
  %865 = reshape(%864, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), float32] */;
  %866 = @func_9777(%865) /* ty=(Tensor[(1, 1, 7), float32],) */;
  %867 = cast(%var_11917, dtype="float32") /* ty=Tensor[(270, 2), float32] */;
  %868 = logical_or(%862, %863) /* ty=Tensor[(270, 2), bool] */;
  %869 = %866.0;
  %870 = acosh(%867) /* ty=Tensor[(270, 2), float32] */;
  (%868, %869, meta[relay.Constant][61] /* ty=Tensor[(7, 1), float32] */, %870)
}

def @func_7480() -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), bool]) {
  %871 = @func_2498() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) */;
  %872 = @func_6347() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(4, 14, 10), uint8], Tensor[(3, 2, 2), float32], Tensor[(8, 70), bool]) */;
  %873 = %872.0;
  %874 = cast(%873, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  %875 = reshape(%874, newshape=[3, 2, 2]) /* ty=Tensor[(3, 2, 2), float32] */;
  %876 = %871.0;
  %877 = @func_1722(%875) /* ty=Tensor[(3, 2, 2), bool] */;
  (%876, %873, %877)
}

def @func_6974() -> (Tensor[(15, 10, 11), float32],) {
  %878 = @func_3512() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %879 = %878.0;
  (%879,)
}

def @func_4129() -> Tensor[(15, 10, 11), float32] {
  @func_3744() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_3512() -> (Tensor[(15, 10, 11), float32],) {
  %880 = @func_2787() /* ty=Tensor[(15, 10, 11), float32] */;
  (%880,)
}

def @func_5657(%var_5629: Tensor[(12, 2, 9), float32]) -> (Tensor[(12, 2, 9), float32], Tensor[(15, 10, 11), float32]) {
  %881 = cast(%var_5629, dtype="float32") /* ty=Tensor[(12, 2, 9), float32] */;
  %882 = atanh(%881) /* ty=Tensor[(12, 2, 9), float32] */;
  %883 = @func_4820() /* ty=Tensor[(15, 10, 11), float32] */;
  (%882, %883)
}

def @func_11320() -> Tensor[(15, 10, 11), float32] {
  @func_4820() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_4098() -> Tensor[(3, 2, 2), float32] {
  %884 = @func_3988() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %884.0
}

def @func_4266() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
  %885 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %886 = %885.0;
  %887 = @func_3744() /* ty=Tensor[(15, 10, 11), float32] */;
  %888 = @func_3481() /* ty=Tensor[(15, 10, 11), float32] */;
  (%886, %887, %888)
}

def @func_11984() -> (Tensor[(15, 10, 11), float32], Tensor[(270, 2), float32]) {
  %889 = @func_10860() /* ty=(Tensor[(270, 2), bool], Tensor[(15, 10, 11), float32]) */;
  %890 = %889.0;
  %891 = cast(%890, dtype="float32") /* ty=Tensor[(270, 2), float32] */;
  %892 = @func_4474() /* ty=Tensor[(15, 10, 11), float32] */;
  %893 = log10(%891) /* ty=Tensor[(270, 2), float32] */;
  (%892, %893)
}

def @func_10860() -> (Tensor[(270, 2), bool], Tensor[(15, 10, 11), float32]) {
  %894 = @func_10131() /* ty=(Tensor[(14, 7, 15), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(270, 2), bool]) */;
  %895 = @func_4902() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %896 = %894.3;
  %897 = %895.1;
  (%896, %897)
}

def @func_8535() -> (Tensor[(1650), float64], Tensor[(3, 2, 2), float32]) {
  %898 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
  %899 = %898.6;
  %900 = cast(%899, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %901 = @func_8104() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %902 = erf(%900) /* ty=Tensor[(1650), float64] */;
  %903 = %901.0;
  (%902, %903)
}

def @func_1240(%var_1222: Tensor[(7, 7, 10), float32], %var_1237: Tensor[(540), float32], %var_1238: Tensor[(27), float64]) -> (Tensor[(7, 7, 10), float32], Tensor[(27), float64], Tensor[(540), float32], Tensor[(27), float64]) {
  %904 = cast(%var_1222, dtype="float32") /* ty=Tensor[(7, 7, 10), float32] */;
  %905 = tan(%904) /* ty=Tensor[(7, 7, 10), float32] */;
  %906 = cast(%905, dtype="float32") /* ty=Tensor[(7, 7, 10), float32] */;
  %907 = cast(%var_1237, dtype="float32") /* ty=Tensor[(540), float32] */;
  %908 = cast(%var_1238, dtype="float64") /* ty=Tensor[(27), float64] */;
  %909 = reshape(%907, newshape=[15, 6, 6]) /* ty=Tensor[(15, 6, 6), float32] */;
  %910 = reshape(%908, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %911 = @func_952(%909, %910) /* ty=(Tensor[(15, 6, 6), float32], Tensor[(9, 3, 5), float64], Tensor[(27), float64], Tensor[(135), float64], Tensor[(9, 3, 5), float64]) */;
  %912 = erf(%906) /* ty=Tensor[(7, 7, 10), float32] */;
  %913 = %911.2;
  (%912, %913, %var_1237, %var_1238)
}

def @func_9644() -> (Tensor[(3, 2, 2), float32], Tensor[(5, 13, 5), float32], Tensor[(325), bool]) {
  %914 = @func_7682() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(15, 10, 11), float32]) */;
  %915 = cast(meta[relay.Constant][62] /* ty=Tensor[(325), bool] */, dtype="bool") /* ty=Tensor[(325), bool] */;
  %916 = cast(meta[relay.Constant][62] /* ty=Tensor[(325), bool] */, dtype="bool") /* ty=Tensor[(325), bool] */;
  %917 = reshape(%915, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), bool] */;
  %918 = reshape(%916, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), bool] */;
  %919 = %914.0;
  %920 = @func_7649(%917, %918) /* ty=Tensor[(5, 13, 5), float32] */;
  (%919, %920, meta[relay.Constant][62] /* ty=Tensor[(325), bool] */)
}

def @func_6521(%var_6481: Tensor[(27), float64]) -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(162), float64], Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(27), float32], Tensor[(3, 180), uint16]) {
  %921 = @func_4902() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %922 = cast(meta[relay.Constant][63] /* ty=Tensor[(162), float64] */, dtype="float64") /* ty=Tensor[(162), float64] */;
  %923 = reshape(%922, newshape=[9, 2, 9]) /* ty=Tensor[(9, 2, 9), float64] */;
  %924 = @func_3870(%923) /* ty=(Tensor[(9, 2, 9), float64], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
  %925 = cast(meta[relay.Constant][64] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %926 = cast(%var_6481, dtype="float64") /* ty=Tensor[(27), float64] */;
  %927 = reshape(%925, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %928 = reshape(%926, newshape=[3, 9]) /* ty=Tensor[(3, 9), float64] */;
  %929 = @func_1329(%927, %928) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(490, 1), float32], Tensor[(540), float32], Tensor[(3, 9), float64]) */;
  %930 = cast(%var_6481, dtype="float32") /* ty=Tensor[(27), float32] */;
  %931 = cast(meta[relay.Constant][64] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %932 = cast(meta[relay.Constant][64] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %933 = reshape(%931, newshape=[3, 180]) /* ty=Tensor[(3, 180), float32] */;
  %934 = reshape(%932, newshape=[3, 180]) /* ty=Tensor[(3, 180), float32] */;
  %935 = @func_5612(%933, %934) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 180), float32]) */;
  %936 = %935.2;
  %937 = cast(%936, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %938 = atanh(%937) /* ty=Tensor[(3, 180), float32] */;
  %939 = cast(%936, dtype="uint16") /* ty=Tensor[(3, 180), uint16] */;
  %940 = shape_of(%938, dtype="int32") /* ty=Tensor[(2), int32] */;
  %941 = cast(%938, dtype="uint16") /* ty=Tensor[(3, 180), uint16] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %943 = %921.1;
  %944 = %924.2;
  %945 = %929.0;
  %946 = atan(%930) /* ty=Tensor[(27), float32] */;
  %947 = right_shift(%941, %942) /* ty=Tensor[(3, 180), uint16] */;
  (%943, %944, meta[relay.Constant][63] /* ty=Tensor[(162), float64] */, %945, meta[relay.Constant][64] /* ty=Tensor[(540), float32] */, %946, %947)
}

def @func_6436() -> Tensor[(3, 2, 2), float32] {
  %948 = @func_5037() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */;
  %948.0
}

def @func_7440() -> (Tensor[(15, 10, 11), float32], Tensor[(540), float32]) {
  %949 = @func_4266() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %950 = @func_7127() /* ty=(Tensor[(540), float32], Tensor[(3, 2, 2), float32]) */;
  %951 = %949.2;
  %952 = %950.0;
  (%951, %952)
}

def @func_11880() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) {
  %953 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %954 = @func_4098() /* ty=Tensor[(3, 2, 2), float32] */;
  %955 = %953.0;
  (%954, %955)
}

def @func_10398(%var_10381: Tensor[(12, 12, 10), float64], %var_10388: Tensor[(12, 12, 10), float64]) -> Tensor[(12, 12, 10), int16] {
  %956 = cast(%var_10381, dtype="float64") /* ty=Tensor[(12, 12, 10), float64] */;
  %957 = asin(%956) /* ty=Tensor[(12, 12, 10), float64] */;
  %958 = cast(%var_10388, dtype="int16") /* ty=Tensor[(12, 12, 10), int16] */;
  %959 = shape_of(%957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %960 = cast(%957, dtype="int16") /* ty=Tensor[(12, 12, 10), int16] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  minimum(%960, %961) /* ty=Tensor[(12, 12, 10), int16] */
}

def @func_9907() -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), bool]) {
  %962 = @func_6974() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %963 = @func_4266() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %964 = %962.0;
  %965 = cast(%964, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %966 = reshape(%965, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
  %967 = @func_6055(%966) /* ty=(Tensor[(15, 10, 11), int32], Tensor[(3, 2, 2), bool], Tensor[(1, 12), float32], Tensor[(15, 10, 11), float32]) */;
  %968 = %963.1;
  %969 = %967.1;
  (%964, %968, %969)
}

def @func_3769(%var_3758: Tensor[(2, 15, 13), int64], %var_3759: Tensor[(2, 15, 13), int64]) -> (Tensor[(2, 15, 13), int64], Tensor[(2, 15, 13), bool]) {
  %970 = cast(%var_3759, dtype="int64") /* ty=Tensor[(2, 15, 13), int64] */;
  %971 = shape_of(%var_3758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %972 = cast(%var_3758, dtype="int64") /* ty=Tensor[(2, 15, 13), int64] */;
  %973 = dyn.reshape(%970, %971, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %974 = cast(%var_3759, dtype="bool") /* ty=Tensor[(2, 15, 13), bool] */;
  %975 = shape_of(%var_3758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %976 = cast(%var_3758, dtype="bool") /* ty=Tensor[(2, 15, 13), bool] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %978 = minimum(%972, %973) /* ty=Tensor[(2, 15, 13), int64] */;
  %979 = not_equal(%976, %977) /* ty=Tensor[(2, 15, 13), bool] */;
  (%978, %979)
}

def @func_2854(%var_2843: Tensor[(11, 9, 7), float64]) -> (Tensor[(11, 9, 7), float64], Tensor[(3, 2, 2), float32]) {
  %980 = cast(%var_2843, dtype="float64") /* ty=Tensor[(11, 9, 7), float64] */;
  %981 = @func_2439() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %982 = log2(%980) /* ty=Tensor[(11, 9, 7), float64] */;
  %983 = %981.0;
  (%982, %983)
}

def @func_9856() -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) {
  %984 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %985 = @func_8104() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %986 = @func_6436() /* ty=Tensor[(3, 2, 2), float32] */;
  %987 = %984.0;
  %988 = %985.0;
  (%986, %987, %988)
}

def @func_11400() -> Tensor[(3, 2, 2), float32] {
  %989 = @func_2439() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %989.0
}

def @func_7372() -> (Tensor[(4, 14, 10), uint8],) {
  %990 = @func_7317() /* ty=(Tensor[(4, 14, 10), uint8], Tensor[(1040, 1), float64]) */;
  %991 = %990.0;
  (%991,)
}

def @func_2787() -> Tensor[(15, 10, 11), float32] {
  @func_2700() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_4474() -> Tensor[(15, 10, 11), float32] {
  @func_3744() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_8158() -> (Tensor[(15, 10, 11), float32],) {
  %992 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
  %993 = %992.5;
  (%993,)
}

def @func_10356() -> Tensor[(15, 10, 11), float32] {
  %994 = @func_4748() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %994.1
}

def @func_4567() -> (Tensor[(3, 2, 2), float32],) {
  %995 = @func_4098() /* ty=Tensor[(3, 2, 2), float32] */;
  (%995,)
}

def @func_5378() -> Tensor[(3, 2, 2), float32] {
  %996 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %997 = %996.0;
  %998 = cast(%997, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  asinh(%998) /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_11716() -> (Tensor[(490), float32], Tensor[(2, 10, 11), float32], Tensor[(220), float32], Tensor[(3, 2, 2), float32]) {
  %999 = @func_2652() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(10, 13, 8), float64], Tensor[(1040, 1), float64], Tensor[(490), float32], Tensor[(540), float32]) */;
  %1000 = cast(meta[relay.Constant][65] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
  %1001 = cast(meta[relay.Constant][65] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
  %1002 = reshape(%1000, newshape=[2, 10, 11]) /* ty=Tensor[(2, 10, 11), float32] */;
  %1003 = reshape(%1001, newshape=[2, 10, 11]) /* ty=Tensor[(2, 10, 11), float32] */;
  %1004 = @func_7839(%1002, %1003) /* ty=(Tensor[(2, 10, 11), float32],) */;
  %1005 = %999.3;
  %1006 = %1004.0;
  %1007 = @func_4200() /* ty=Tensor[(3, 2, 2), float32] */;
  (%1005, %1006, meta[relay.Constant][65] /* ty=Tensor[(220), float32] */, %1007)
}

def @func_8608() -> (Tensor[(15, 10, 11), float32],) {
  %1008 = @func_3972() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) */;
  %1009 = %1008.2;
  (%1009,)
}

def @func_4200() -> Tensor[(3, 2, 2), float32] {
  %1010 = @func_2498() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) */;
  %1010.0
}

def @func_7649(%var_7632: Tensor[(5, 13, 5), bool], %var_7633: Tensor[(5, 13, 5), bool]) -> Tensor[(5, 13, 5), float32] {
  %1011 = cast(%var_7633, dtype="bool") /* ty=Tensor[(5, 13, 5), bool] */;
  %1012 = shape_of(%var_7632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1013 = cast(%var_7632, dtype="bool") /* ty=Tensor[(5, 13, 5), bool] */;
  %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1015 = logical_or(%1013, %1014) /* ty=Tensor[(5, 13, 5), bool] */;
  %1016 = cast(%1015, dtype="float32") /* ty=Tensor[(5, 13, 5), float32] */;
  %1017 = shape_of(%var_7632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1018 = cast(%var_7632, dtype="float32") /* ty=Tensor[(5, 13, 5), float32] */;
  %1019 = dyn.reshape(%1016, %1017, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%1018, %1019) /* ty=Tensor[(5, 13, 5), float32] */
}

def @func_11233() -> (Tensor[(15, 10, 11), float32],) {
  %1020 = @func_10187() /* ty=Tensor[(15, 10, 11), float32] */;
  (%1020,)
}

def @func_12417() -> (Tensor[(15, 10, 11), float32],) {
  %1021 = @func_11797() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */;
  %1022 = %1021.0;
  (%1022,)
}

def @func_1473(%var_1464: Tensor[(540), float32]) -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) {
  %1023 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %1024 = cast(%var_1464, dtype="float32") /* ty=Tensor[(540), float32] */;
  %1025 = reshape(%1024, newshape=[270, 2]) /* ty=Tensor[(270, 2), float32] */;
  %1026 = @func_1271(%1025) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(270, 2), float32], Tensor[(135), float64]) */;
  %1027 = %1023.0;
  %1028 = %1026.0;
  (%1027, %1028, %var_1464)
}

def @func_8104() -> (Tensor[(3, 2, 2), float32],) {
  %1029 = @func_3602() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
  %1030 = %1029.0;
  (%1030,)
}

def @func_8291() -> Tensor[(15, 10, 11), float32] {
  @func_4474() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_1190() -> (Tensor[(3, 2, 2), float32],) {
  %1031 = cast(meta[relay.Constant][66] /* ty=Tensor[(3, 2, 2), float32] */, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  %1032 = sinh(%1031) /* ty=Tensor[(3, 2, 2), float32] */;
  (%1032,)
}

def @func_9441(%var_9396: Tensor[(54, 10), float32], %var_9414: Tensor[(490), float32]) -> (Tensor[(4, 14, 10), uint8], Tensor[(3, 2, 2), float32], Tensor[(693), float64], Tensor[(54, 10), float32], Tensor[(3, 180), bool], Tensor[(1040), float64], Tensor[(490), float32]) {
  %1033 = @func_7317() /* ty=(Tensor[(4, 14, 10), uint8], Tensor[(1040, 1), float64]) */;
  %1034 = cast(meta[relay.Constant][67] /* ty=Tensor[(693), float64] */, dtype="float64") /* ty=Tensor[(693), float64] */;
  %1035 = reshape(%1034, newshape=[11, 9, 7]) /* ty=Tensor[(11, 9, 7), float64] */;
  %1036 = @func_2854(%1035) /* ty=(Tensor[(11, 9, 7), float64], Tensor[(3, 2, 2), float32]) */;
  %1037 = cast(%var_9396, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %1038 = cast(%var_9396, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %1039 = reshape(%1037, newshape=[3, 180]) /* ty=Tensor[(3, 180), float32] */;
  %1040 = reshape(%1038, newshape=[3, 180]) /* ty=Tensor[(3, 180), float32] */;
  %1041 = @func_5612(%1039, %1040) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 180), float32]) */;
  %1042 = %1041.2;
  %1043 = cast(meta[relay.Constant][68] /* ty=Tensor[(3, 180), float32] */, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %1044 = shape_of(%1042, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1045 = cast(%1042, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1047 = cast(%var_9414, dtype="float32") /* ty=Tensor[(490), float32] */;
  %1048 = reshape(%1047, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %1049 = @func_7996(%1048) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(3, 180), float32], Tensor[(15, 10, 11), float32]) */;
  %1050 = %1033.0;
  %1051 = %1036.1;
  %1052 = logical_and(%1045, %1046) /* ty=Tensor[(3, 180), bool] */;
  %1053 = %1049.2;
  (%1050, %1051, meta[relay.Constant][67] /* ty=Tensor[(693), float64] */, %var_9396, %1052, %1053, %var_9414)
}

def @func_10557() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(135), float64]) {
  %1054 = @func_3972() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) */;
  %1055 = %1054.0;
  %1056 = @func_10512() /* ty=Tensor[(15, 10, 11), float32] */;
  %1057 = @func_8240() /* ty=Tensor[(135), float64] */;
  (%1055, %1056, %1057)
}

def @func_4363(%var_4337: Tensor[(490), float32]) -> (Tensor[(3, 2, 2), bool], Tensor[(27), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(540), float32], Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
  %1058 = cast(%var_4337, dtype="float32") /* ty=Tensor[(490), float32] */;
  %1059 = cast(meta[relay.Constant][69] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %1060 = cast(meta[relay.Constant][70] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %1061 = reshape(%1058, newshape=[7, 7, 10]) /* ty=Tensor[(7, 7, 10), float32] */;
  %1062 = reshape(%1059, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %1063 = reshape(%1060, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %1064 = @func_1240(%1061, %1062, %1063) /* ty=(Tensor[(7, 7, 10), float32], Tensor[(27), float64], Tensor[(540), float32], Tensor[(27), float64]) */;
  %1065 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %1066 = @func_2601() /* ty=Tensor[(3, 2, 2), bool] */;
  %1067 = %1064.1;
  %1068 = @func_3311() /* ty=Tensor[(540), float32] */;
  %1069 = %1065.0;
  %1070 = @func_3217() /* ty=Tensor[(3, 2, 2), float32] */;
  (%1066, %1067, %var_4337, meta[relay.Constant][69] /* ty=Tensor[(540), float32] */, meta[relay.Constant][70] /* ty=Tensor[(27), float64] */, %1068, %1069, %1070)
}

def @func_9017() -> Tensor[(3, 2, 2), float32] {
  @func_4098() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_10285() -> (Tensor[(15, 10, 11), float64], Tensor[(540), float32]) {
  %1071 = @func_8291() /* ty=Tensor[(15, 10, 11), float32] */;
  %1072 = cast(meta[relay.Constant][71] /* ty=Tensor[(15, 10, 11), float32] */, dtype="float64") /* ty=Tensor[(15, 10, 11), float64] */;
  %1073 = shape_of(%1071, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1074 = cast(%1071, dtype="float64") /* ty=Tensor[(15, 10, 11), float64] */;
  %1075 = dyn.reshape(%1072, %1073, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1076 = @func_4802() /* ty=(Tensor[(540), float32],) */;
  %1077 = floor_divide(%1074, %1075) /* ty=Tensor[(15, 10, 11), float64] */;
  %1078 = %1076.0;
  (%1077, %1078)
}

def @func_5272(%var_5258: Tensor[(1040), float64], %var_5259: Tensor[(490), float32], %var_5260: Tensor[(540), float32]) -> (Tensor[(3, 2, 2), float32], Tensor[(270, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) {
  %1079 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %1080 = cast(%var_5258, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %1081 = cast(%var_5259, dtype="float32") /* ty=Tensor[(490), float32] */;
  %1082 = cast(%var_5260, dtype="float32") /* ty=Tensor[(540), float32] */;
  %1083 = reshape(%1080, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %1084 = reshape(%1081, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %1085 = reshape(%1082, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %1086 = @func_1357(%1083, %1084, %1085) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(7, 7, 10), float32], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(270, 2), float32]) */;
  %1087 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %1088 = %1079.0;
  %1089 = %1086.5;
  %1090 = @func_4043() /* ty=Tensor[(3, 2, 2), float32] */;
  %1091 = %1087.0;
  (%1088, %1089, %var_5258, %var_5259, %var_5260, %1090, %1091)
}

def @main(%var_12425: Tensor[(1, 4, 3), float64]) -> Tensor[(1, 4, 3), float64] {
  %1092 = cast(%var_12425, dtype="float64") /* ty=Tensor[(1, 4, 3), float64] */;
  asin(%1092) /* ty=Tensor[(1, 4, 3), float64] */
}

def @func_11355(%var_11351: Tensor[(1650), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(1650), bool], Tensor[(1650), float64]) {
  %1093 = @func_4567() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %1094 = cast(%var_11351, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %1095 = reshape(%1094, newshape=[1650]) /* ty=Tensor[(1650), float64] */;
  %1096 = @func_8910(%1095) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(3, 2, 2), float32], Tensor[(1650), bool], Tensor[(1650), float32]) */;
  %1097 = %1093.0;
  %1098 = %1096.3;
  (%1097, %1098, %var_11351)
}

def @func_11265(%var_11262: Tensor[(5, 9, 6), float32]) -> Tensor[(5, 9, 6), float32] {
  %1099 = cast(%var_11262, dtype="float32") /* ty=Tensor[(5, 9, 6), float32] */;
  tan(%1099) /* ty=Tensor[(5, 9, 6), float32] */
}

def @func_7127() -> (Tensor[(540), float32], Tensor[(3, 2, 2), float32]) {
  %1100 = @func_4802() /* ty=(Tensor[(540), float32],) */;
  %1101 = %1100.0;
  %1102 = @func_6858() /* ty=Tensor[(3, 2, 2), float32] */;
  (%1101, %1102)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7649(%var_7632: Tensor[(5, 13, 5), bool], %var_7633: Tensor[(5, 13, 5), bool]) -> Tensor[(5, 13, 5), float32] {
  %0 = cast(%var_7633, dtype="bool") /* ty=Tensor[(5, 13, 5), bool] */;
  %1 = shape_of(%var_7632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_7632, dtype="bool") /* ty=Tensor[(5, 13, 5), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = logical_or(%2, %3) /* ty=Tensor[(5, 13, 5), bool] */;
  %5 = cast(%4, dtype="float32") /* ty=Tensor[(5, 13, 5), float32] */;
  %6 = shape_of(%var_7632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%var_7632, dtype="float32") /* ty=Tensor[(5, 13, 5), float32] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%7, %8) /* ty=Tensor[(5, 13, 5), float32] */
}

def @func_10805(%var_10803: Tensor[(15, 10, 3), int64], %var_10804: Tensor[(15, 10, 3), int64]) -> Tensor[(15, 10, 3), int64] {
  @func_10801(%var_10803, %var_10804) /* ty=Tensor[(15, 10, 3), int64] */
}

def @func_8981(%var_8979: Tensor[(540), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) {
  @func_8978(%var_8979) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */
}

def @func_10667() -> (Tensor[(3, 2, 2), float32], Tensor[(12, 2, 9), float32], Tensor[(216), float32]) {
  %9 = @func_2498() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) */;
  %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %11 = reshape(%10, newshape=[12, 2, 9]) /* ty=Tensor[(12, 2, 9), float32] */;
  %12 = @func_5657(%11) /* ty=(Tensor[(12, 2, 9), float32], Tensor[(15, 10, 11), float32]) */;
  %13 = %9.1;
  %14 = %12.0;
  (%13, %14, meta[relay.Constant][0] /* ty=Tensor[(216), float32] */)
}

def @func_8240() -> Tensor[(135), float64] {
  %15 = @func_2254() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(27), float64], Tensor[(3, 2, 2), float32]) */;
  %16 = %15.1;
  %17 = cast(%16, dtype="float64") /* ty=Tensor[(135), float64] */;
  tan(%17) /* ty=Tensor[(135), float64] */
}

def @func_10132() -> (Tensor[(14, 7, 15), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(270, 2), bool]) {
  %40 = fn () -> (Tensor[(14, 7, 15), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(270, 2), bool]) {
    %18 = cast(meta[relay.Constant][2] /* ty=Tensor[(14, 7, 15), uint8] */, dtype="bool") /* ty=Tensor[(14, 7, 15), bool] */;
    %19 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(14, 7, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 7, 15), uint8] */, dtype="bool") /* ty=Tensor[(14, 7, 15), bool] */;
    %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %22 = @func_7682() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(15, 10, 11), float32]) */;
    %23 = cast(meta[relay.Constant][3] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
    %24 = reshape(%23, newshape=[270, 2]) /* ty=Tensor[(270, 2), float32] */;
    %25 = @func_1271(%24) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(270, 2), float32], Tensor[(135), float64]) */;
    %26 = %25.2;
    %27 = cast(meta[relay.Constant][3] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
    %28 = shape_of(%26, dtype="int32") /* ty=Tensor[(2), int32] */;
    %29 = cast(%26, dtype="float32") /* ty=Tensor[(270, 2), float32] */;
    %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %31 = floor_mod(%29, %30) /* ty=Tensor[(270, 2), float32] */;
    %32 = cast(meta[relay.Constant][3] /* ty=Tensor[(540), float32] */, dtype="bool") /* ty=Tensor[(540), bool] */;
    %33 = shape_of(%31, dtype="int32") /* ty=Tensor[(2), int32] */;
    %34 = cast(%31, dtype="bool") /* ty=Tensor[(270, 2), bool] */;
    %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %36 = less_equal(%20, %21) /* ty=Tensor[(14, 7, 15), bool] */;
    %37 = %22.1;
    %38 = @func_9746() /* ty=Tensor[(3, 2, 2), float32] */;
    %39 = less(%34, %35) /* ty=Tensor[(270, 2), bool] */;
    (%36, %37, %38, %39)
  };
  %40() /* ty=(Tensor[(14, 7, 15), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(270, 2), bool]) */
}

def @func_4634(%var_4632: Tensor[(490), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(1040), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) {
  @func_4631(%var_4632) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(1040), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) */
}

def @func_4984(%var_4982: Tensor[(8, 5, 8), float32], %var_4983: Tensor[(27), float64]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(8, 5, 8), float32]) {
  @func_4980(%var_4982, %var_4983) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(8, 5, 8), float32]) */
}

def @func_10334() -> Tensor[(15, 10, 11), float32] {
  %42 = fn () -> Tensor[(15, 10, 11), float32] {
    %41 = @func_4748() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
    %41.0
  };
  %42() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_3385(%var_3375: Tensor[(135), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(7, 15, 8), float64], Tensor[(27), float64], Tensor[(135), float64]) {
  %43 = @func_2426() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %44 = @func_3040() /* ty=(Tensor[(7, 15, 8), float64],) */;
  %45 = @func_2254() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(27), float64], Tensor[(3, 2, 2), float32]) */;
  %46 = @func_2254() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(27), float64], Tensor[(3, 2, 2), float32]) */;
  %47 = %46.1;
  %48 = cast(%var_3375, dtype="float64") /* ty=Tensor[(135), float64] */;
  %49 = shape_of(%47, dtype="int32") /* ty=Tensor[(1), int32] */;
  %50 = cast(%47, dtype="float64") /* ty=Tensor[(135), float64] */;
  %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?), float64] */;
  %52 = %43.0;
  %53 = %44.0;
  %54 = %45.2;
  %55 = floor_mod(%50, %51) /* ty=Tensor[(135), float64] */;
  (%52, %53, %54, %55)
}

def @func_10762() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
  %56 = @func_6740() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %57 = @func_6399() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */;
  %58 = %56.0;
  %59 = %57.1;
  (%58, %59)
}

def @func_2788() -> Tensor[(15, 10, 11), float32] {
  %60 = fn () -> Tensor[(15, 10, 11), float32] {
    @func_2700() /* ty=Tensor[(15, 10, 11), float32] */
  };
  %60() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_9682(%var_9680: Tensor[(320), float32], %var_9681: Tensor[(27), float64]) -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(320), float32], Tensor[(27), float32], Tensor[(15, 10, 11), float32]) {
  %72 = fn (%var_9663: Tensor[(320), float32], %var_9664: Tensor[(27), float64]) -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(320), float32], Tensor[(27), float32], Tensor[(15, 10, 11), float32]) {
    %61 = @func_3602() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
    %62 = cast(%var_9663, dtype="float32") /* ty=Tensor[(320), float32] */;
    %63 = cast(%var_9664, dtype="float64") /* ty=Tensor[(27), float64] */;
    %64 = reshape(%62, newshape=[8, 5, 8]) /* ty=Tensor[(8, 5, 8), float32] */;
    %65 = reshape(%63, newshape=[27]) /* ty=Tensor[(27), float64] */;
    %66 = @func_4980(%64, %65) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(8, 5, 8), float32]) */;
    %67 = cast(%var_9664, dtype="float32") /* ty=Tensor[(27), float32] */;
    %68 = %61.1;
    %69 = %66.0;
    %70 = exp(%67) /* ty=Tensor[(27), float32] */;
    %71 = @func_8693() /* ty=Tensor[(15, 10, 11), float32] */;
    (%68, %69, %var_9663, %70, %71)
  };
  %72(%var_9680, %var_9681) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(320), float32], Tensor[(27), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_12089(%var_12046: Tensor[(540), float32], %var_12047: Tensor[(490), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 180), bool], Tensor[(540), float32], Tensor[(490), float32], Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1650), float64], Tensor[(12, 2, 12), bool], Tensor[(288), bool], Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), bool]) {
  %73 = @func_6974() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %74 = cast(%var_12046, dtype="float32") /* ty=Tensor[(540), float32] */;
  %75 = cast(%var_12047, dtype="float32") /* ty=Tensor[(490), float32] */;
  %76 = reshape(%74, newshape=[54, 10]) /* ty=Tensor[(54, 10), float32] */;
  %77 = reshape(%75, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %78 = @func_9441(%76, %77) /* ty=(Tensor[(4, 14, 10), uint8], Tensor[(3, 2, 2), float32], Tensor[(693), float64], Tensor[(54, 10), float32], Tensor[(3, 180), bool], Tensor[(1040), float64], Tensor[(490), float32]) */;
  %79 = @func_4902() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %80 = @func_10834() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %81 = @func_8535() /* ty=(Tensor[(1650), float64], Tensor[(3, 2, 2), float32]) */;
  %82 = cast(meta[relay.Constant][4] /* ty=Tensor[(288), bool] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %83 = reshape(%82, newshape=[12, 2, 12]) /* ty=Tensor[(12, 2, 12), bool] */;
  %84 = @func_8608() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %85 = %80.0;
  %86 = cast(%85, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  %87 = reshape(%86, newshape=[3, 2, 2]) /* ty=Tensor[(3, 2, 2), float32] */;
  %88 = @func_2232(%87) /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float64]) */;
  %89 = %73.0;
  %90 = @func_9648() /* ty=Tensor[(3, 2, 2), float32] */;
  %91 = %78.4;
  %92 = %79.0;
  %93 = %81.0;
  %94 = @func_10235(%83) /* ty=Tensor[(12, 2, 12), bool] */;
  %95 = %84.0;
  %96 = %88.0;
  (%89, %90, %91, %var_12046, %var_12047, %92, %85, %93, %94, meta[relay.Constant][4] /* ty=Tensor[(288), bool] */, %95, %96)
}

def @func_7482() -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), bool]) {
  @func_7480() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), bool]) */
}

def @func_3603() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) {
  %101 = fn () -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) {
    %97 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %98 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
    %99 = %97.0;
    %100 = %98.5;
    (%99, %100)
  };
  %101() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_10557() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(135), float64]) {
  %102 = @func_3972() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) */;
  %103 = %102.0;
  %104 = @func_10512() /* ty=Tensor[(15, 10, 11), float32] */;
  %105 = @func_8240() /* ty=Tensor[(135), float64] */;
  (%103, %104, %105)
}

def @func_9909() -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), bool]) {
  @func_9907() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), bool]) */
}

def @func_1274(%var_1272: Tensor[(270, 2), float32]) -> (Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(270, 2), float32], Tensor[(135), float64]) {
  @func_1271(%var_1272) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(270, 2), float32], Tensor[(135), float64]) */
}

def @func_11268(%var_11266: Tensor[(5, 9, 6), float32]) -> Tensor[(5, 9, 6), float32] {
  @func_11265(%var_11266) /* ty=Tensor[(5, 9, 6), float32] */
}

def @func_6349() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(4, 14, 10), uint8], Tensor[(3, 2, 2), float32], Tensor[(8, 70), bool]) {
  @func_6347() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(4, 14, 10), uint8], Tensor[(3, 2, 2), float32], Tensor[(8, 70), bool]) */
}

def @func_2857(%var_2855: Tensor[(11, 9, 7), float64]) -> (Tensor[(11, 9, 7), float64], Tensor[(3, 2, 2), float32]) {
  @func_2854(%var_2855) /* ty=(Tensor[(11, 9, 7), float64], Tensor[(3, 2, 2), float32]) */
}

def @func_2654() -> (Tensor[(3, 2, 2), bool], Tensor[(10, 13, 8), float64], Tensor[(1040, 1), float64], Tensor[(490), float32], Tensor[(540), float32]) {
  @func_2652() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(10, 13, 8), float64], Tensor[(1040, 1), float64], Tensor[(490), float32], Tensor[(540), float32]) */
}

def @func_9947() -> Tensor[(12, 2, 10), float32] {
  %106 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 2, 10), float32] */, dtype="float32") /* ty=Tensor[(12, 2, 10), float32] */;
  cos(%106) /* ty=Tensor[(12, 2, 10), float32] */
}

def @func_4980(%var_4944: Tensor[(8, 5, 8), float32], %var_4966: Tensor[(27), float64]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(8, 5, 8), float32]) {
  %107 = @func_3512() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %108 = cast(%var_4966, dtype="float64") /* ty=Tensor[(27), float64] */;
  %109 = cast(%var_4966, dtype="float64") /* ty=Tensor[(27), float64] */;
  %110 = reshape(%108, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %111 = reshape(%109, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %112 = @func_1584(%110, %111) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(540), float32], Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(9, 3, 5), float64], Tensor[(27), bool]) */;
  %113 = cast(%var_4944, dtype="float32") /* ty=Tensor[(8, 5, 8), float32] */;
  %114 = acosh(%113) /* ty=Tensor[(8, 5, 8), float32] */;
  %115 = cast(%114, dtype="float32") /* ty=Tensor[(8, 5, 8), float32] */;
  %116 = %107.0;
  %117 = %112.0;
  %118 = sqrt(%115) /* ty=Tensor[(8, 5, 8), float32] */;
  (%116, %117, %var_4966, %118)
}

def @func_10165() -> (Tensor[(27), int32],) {
  %119 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
  %120 = %119.3;
  (%120,)
}

def @func_12373() -> (Tensor[(15, 10, 11), float32],) {
  %123 = fn () -> (Tensor[(15, 10, 11), float32],) {
    %121 = @func_12327() /* ty=(Tensor[(15, 10, 11), float32],) */;
    %122 = %121.0;
    (%122,)
  };
  %123() /* ty=(Tensor[(15, 10, 11), float32],) */
}

def @func_3973() -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) {
  %134 = fn () -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) {
    %124 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %125 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %126 = %125.0;
    %127 = cast(%126, dtype="float64") /* ty=Tensor[(3, 2, 2), float64] */;
    %128 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
    %129 = %128.0;
    %130 = cast(%129, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
    %131 = %124.0;
    %132 = acosh(%127) /* ty=Tensor[(3, 2, 2), float64] */;
    %133 = cosh(%130) /* ty=Tensor[(15, 10, 11), float32] */;
    (%131, %132, %133)
  };
  %134() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) */
}

def @func_6055(%var_6011: Tensor[(15, 10, 11), float32]) -> (Tensor[(15, 10, 11), int32], Tensor[(3, 2, 2), bool], Tensor[(1, 12), float32], Tensor[(15, 10, 11), float32]) {
  %135 = @func_4820() /* ty=Tensor[(15, 10, 11), float32] */;
  %136 = cast(%var_6011, dtype="int32") /* ty=Tensor[(15, 10, 11), int32] */;
  %137 = shape_of(%135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%135, dtype="int32") /* ty=Tensor[(15, 10, 11), int32] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %140 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 12), float32] */, dtype="float32") /* ty=Tensor[(1, 12), float32] */;
  %141 = reshape(%140, newshape=[3, 2, 2]) /* ty=Tensor[(3, 2, 2), float32] */;
  %142 = @func_3602() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
  %143 = bitwise_and(%138, %139) /* ty=Tensor[(15, 10, 11), int32] */;
  %144 = @func_1722(%141) /* ty=Tensor[(3, 2, 2), bool] */;
  %145 = %142.1;
  (%143, %144, meta[relay.Constant][6] /* ty=Tensor[(1, 12), float32] */, %145)
}

def @func_4427() -> (Tensor[(14, 8, 10), float64], Tensor[(14, 8, 10), float64]) {
  %146 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 8, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 8, 10), float64] */;
  %147 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 8, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 8, 10), float64] */;
  %148 = tan(%146) /* ty=Tensor[(14, 8, 10), float64] */;
  %149 = cos(%147) /* ty=Tensor[(14, 8, 10), float64] */;
  (%148, %149)
}

def @func_10812() -> (Tensor[(15, 10, 11), float32],) {
  %150 = @func_7500() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %151 = %150.0;
  (%151,)
}

def @func_11984() -> (Tensor[(15, 10, 11), float32], Tensor[(270, 2), float32]) {
  %152 = @func_10860() /* ty=(Tensor[(270, 2), bool], Tensor[(15, 10, 11), float32]) */;
  %153 = %152.0;
  %154 = cast(%153, dtype="float32") /* ty=Tensor[(270, 2), float32] */;
  %155 = @func_4474() /* ty=Tensor[(15, 10, 11), float32] */;
  %156 = log10(%154) /* ty=Tensor[(270, 2), float32] */;
  (%155, %156)
}

def @func_11379() -> (Tensor[(3, 2, 2), float32],) {
  %157 = @func_3217() /* ty=Tensor[(3, 2, 2), float32] */;
  (%157,)
}

def @func_11947(%var_11917: Tensor[(270, 2), bool]) -> (Tensor[(270, 2), bool], Tensor[(1, 1, 7), float32], Tensor[(7, 1), float32], Tensor[(270, 2), float32]) {
  %158 = @func_10131() /* ty=(Tensor[(14, 7, 15), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(270, 2), bool]) */;
  %159 = %158.3;
  %160 = cast(%var_11917, dtype="bool") /* ty=Tensor[(270, 2), bool] */;
  %161 = shape_of(%159, dtype="int32") /* ty=Tensor[(2), int32] */;
  %162 = cast(%159, dtype="bool") /* ty=Tensor[(270, 2), bool] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %164 = cast(meta[relay.Constant][8] /* ty=Tensor[(7, 1), float32] */, dtype="float32") /* ty=Tensor[(7, 1), float32] */;
  %165 = reshape(%164, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), float32] */;
  %166 = @func_9777(%165) /* ty=(Tensor[(1, 1, 7), float32],) */;
  %167 = cast(%var_11917, dtype="float32") /* ty=Tensor[(270, 2), float32] */;
  %168 = logical_or(%162, %163) /* ty=Tensor[(270, 2), bool] */;
  %169 = %166.0;
  %170 = acosh(%167) /* ty=Tensor[(270, 2), float32] */;
  (%168, %169, meta[relay.Constant][8] /* ty=Tensor[(7, 1), float32] */, %170)
}

def @func_4099() -> Tensor[(3, 2, 2), float32] {
  %172 = fn () -> Tensor[(3, 2, 2), float32] {
    %171 = @func_3988() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %171.0
  };
  %172() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_7374() -> (Tensor[(4, 14, 10), uint8],) {
  @func_7372() /* ty=(Tensor[(4, 14, 10), uint8],) */
}

def @func_11265(%var_11262: Tensor[(5, 9, 6), float32]) -> Tensor[(5, 9, 6), float32] {
  %173 = cast(%var_11262, dtype="float32") /* ty=Tensor[(5, 9, 6), float32] */;
  tan(%173) /* ty=Tensor[(5, 9, 6), float32] */
}

def @func_4822() -> Tensor[(15, 10, 11), float32] {
  @func_4820() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_5039() -> (Tensor[(3, 2, 2), float32], Tensor[(540), float32]) {
  @func_5037() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */
}

def @func_9893() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) {
  @func_9891() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_6347() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(4, 14, 10), uint8], Tensor[(3, 2, 2), float32], Tensor[(8, 70), bool]) {
  %174 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 70), float32] */, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %175 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 70), float32] */, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %176 = reshape(%174, newshape=[4, 14, 10]) /* ty=Tensor[(4, 14, 10), float32] */;
  %177 = reshape(%175, newshape=[4, 14, 10]) /* ty=Tensor[(4, 14, 10), float32] */;
  %178 = @func_5525(%176, %177) /* ty=(Tensor[(4, 14, 10), uint8], Tensor[(9, 3, 5), float64], Tensor[(540), float32], Tensor[(1, 135), float64], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(4, 14, 10), int8], Tensor[(4, 14, 10), float32], Tensor[(4, 14, 10), bool]) */;
  %179 = @func_3972() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) */;
  %180 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 70), float32] */, dtype="bool") /* ty=Tensor[(8, 70), bool] */;
  %181 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(8, 70), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %182 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 70), float32] */, dtype="bool") /* ty=Tensor[(8, 70), bool] */;
  %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %184 = @func_5378() /* ty=Tensor[(3, 2, 2), float32] */;
  %185 = @func_4820() /* ty=Tensor[(15, 10, 11), float32] */;
  %186 = %178.0;
  %187 = %179.0;
  %188 = logical_or(%182, %183) /* ty=Tensor[(8, 70), bool] */;
  (%184, %185, %186, %187, %188)
}

def @func_5276(%var_5273: Tensor[(1040), float64], %var_5274: Tensor[(490), float32], %var_5275: Tensor[(540), float32]) -> (Tensor[(3, 2, 2), float32], Tensor[(270, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) {
  %202 = fn (%var_5258: Tensor[(1040), float64], %var_5259: Tensor[(490), float32], %var_5260: Tensor[(540), float32]) -> (Tensor[(3, 2, 2), float32], Tensor[(270, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) {
    %189 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %190 = cast(%var_5258, dtype="float64") /* ty=Tensor[(1040), float64] */;
    %191 = cast(%var_5259, dtype="float32") /* ty=Tensor[(490), float32] */;
    %192 = cast(%var_5260, dtype="float32") /* ty=Tensor[(540), float32] */;
    %193 = reshape(%190, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
    %194 = reshape(%191, newshape=[490]) /* ty=Tensor[(490), float32] */;
    %195 = reshape(%192, newshape=[540]) /* ty=Tensor[(540), float32] */;
    %196 = @func_1357(%193, %194, %195) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(7, 7, 10), float32], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(270, 2), float32]) */;
    %197 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %198 = %189.0;
    %199 = %196.5;
    %200 = @func_4043() /* ty=Tensor[(3, 2, 2), float32] */;
    %201 = %197.0;
    (%198, %199, %var_5258, %var_5259, %var_5260, %200, %201)
  };
  %202(%var_5273, %var_5274, %var_5275) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(270, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) */
}

def @func_2232(%var_2213: Tensor[(3, 2, 2), float32]) -> (Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float64]) {
  %203 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %204 = %203.0;
  %205 = cast(%var_2213, dtype="bool") /* ty=Tensor[(3, 2, 2), bool] */;
  %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %207 = cast(%204, dtype="bool") /* ty=Tensor[(3, 2, 2), bool] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %209 = cast(meta[relay.Constant][11] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %210 = reshape(%209, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %211 = @func_1473(%210) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */;
  %212 = cast(%204, dtype="float64") /* ty=Tensor[(3, 2, 2), float64] */;
  %213 = less(%207, %208) /* ty=Tensor[(3, 2, 2), bool] */;
  %214 = %211.1;
  %215 = log2(%212) /* ty=Tensor[(3, 2, 2), float64] */;
  (%213, %214, meta[relay.Constant][11] /* ty=Tensor[(540), float32] */, %215)
}

def @func_11321() -> Tensor[(15, 10, 11), float32] {
  %216 = fn () -> Tensor[(15, 10, 11), float32] {
    @func_4820() /* ty=Tensor[(15, 10, 11), float32] */
  };
  %216() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_10358() -> Tensor[(15, 10, 11), float32] {
  @func_10356() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_7726() -> Tensor[(15, 10, 11), float32] {
  %217 = @func_4528() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
  %217.3
}

def @func_8479(%var_8478: Tensor[(540), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(540), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32]) {
  %225 = fn (%var_8458: Tensor[(540), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(540), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32]) {
    %218 = cast(%var_8458, dtype="float32") /* ty=Tensor[(540), float32] */;
    %219 = reshape(%218, newshape=[540]) /* ty=Tensor[(540), float32] */;
    %220 = @func_2961(%219) /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */;
    %221 = @func_3972() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) */;
    %222 = @func_7726() /* ty=Tensor[(15, 10, 11), float32] */;
    %223 = %220.2;
    %224 = %221.0;
    (%222, %223, %var_8458, %224)
  };
  %225(%var_8478) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(540), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32]) */
}

def @func_9992() -> Tensor[(3, 2, 2), float32] {
  @func_4928() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_8609() -> (Tensor[(15, 10, 11), float32],) {
  %228 = fn () -> (Tensor[(15, 10, 11), float32],) {
    %226 = @func_3972() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) */;
    %227 = %226.2;
    (%227,)
  };
  %228() /* ty=(Tensor[(15, 10, 11), float32],) */
}

def @func_10764() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
  @func_10762() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */
}

def @func_12249() -> Tensor[(3, 2, 2), float32] {
  @func_12247() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_7842(%var_7840: Tensor[(2, 10, 11), float32], %var_7841: Tensor[(2, 10, 11), float32]) -> (Tensor[(2, 10, 11), float32],) {
  %234 = fn (%var_7831: Tensor[(2, 10, 11), float32], %var_7832: Tensor[(2, 10, 11), float32]) -> (Tensor[(2, 10, 11), float32],) {
    %229 = cast(%var_7832, dtype="float32") /* ty=Tensor[(2, 10, 11), float32] */;
    %230 = shape_of(%var_7831, dtype="int32") /* ty=Tensor[(3), int32] */;
    %231 = cast(%var_7831, dtype="float32") /* ty=Tensor[(2, 10, 11), float32] */;
    %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %233 = floor_mod(%231, %232) /* ty=Tensor[(2, 10, 11), float32] */;
    (%233,)
  };
  %234(%var_7840, %var_7841) /* ty=(Tensor[(2, 10, 11), float32],) */
}

def @func_8399() -> (Tensor[(3, 2, 2), float32],) {
  %237 = fn () -> (Tensor[(3, 2, 2), float32],) {
    %235 = @func_4786() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %236 = %235.0;
    (%236,)
  };
  %237() /* ty=(Tensor[(3, 2, 2), float32],) */
}

def @func_12327() -> (Tensor[(15, 10, 11), float32],) {
  %238 = @func_10356() /* ty=Tensor[(15, 10, 11), float32] */;
  (%238,)
}

def @func_11022() -> (Tensor[(4, 12, 3), float64], Tensor[(540), float32]) {
  %242 = fn () -> (Tensor[(4, 12, 3), float64], Tensor[(540), float32]) {
    %239 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 12, 3), float64] */, dtype="float64") /* ty=Tensor[(4, 12, 3), float64] */;
    %240 = asinh(%239) /* ty=Tensor[(4, 12, 3), float64] */;
    %241 = @func_3311() /* ty=Tensor[(540), float32] */;
    (%240, %241)
  };
  %242() /* ty=(Tensor[(4, 12, 3), float64], Tensor[(540), float32]) */
}

def @func_3388(%var_3386: Tensor[(135), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(7, 15, 8), float64], Tensor[(27), float64], Tensor[(135), float64]) {
  @func_3385(%var_3386) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(7, 15, 8), float64], Tensor[(27), float64], Tensor[(135), float64]) */
}

def @func_9204() -> (Tensor[(15, 10, 11), float32], Tensor[(16, 6, 4), float32], Tensor[(384), float64]) {
  @func_9202() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(16, 6, 4), float32], Tensor[(384), float64]) */
}

def @func_5937() -> (Tensor[(3, 2, 2), bool],) {
  @func_5935() /* ty=(Tensor[(3, 2, 2), bool],) */
}

def @func_12418() -> (Tensor[(15, 10, 11), float32],) {
  %245 = fn () -> (Tensor[(15, 10, 11), float32],) {
    %243 = @func_11797() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */;
    %244 = %243.0;
    (%244,)
  };
  %245() /* ty=(Tensor[(15, 10, 11), float32],) */
}

def @func_10398(%var_10381: Tensor[(12, 12, 10), float64], %var_10388: Tensor[(12, 12, 10), float64]) -> Tensor[(12, 12, 10), int16] {
  %246 = cast(%var_10381, dtype="float64") /* ty=Tensor[(12, 12, 10), float64] */;
  %247 = asin(%246) /* ty=Tensor[(12, 12, 10), float64] */;
  %248 = cast(%var_10388, dtype="int16") /* ty=Tensor[(12, 12, 10), int16] */;
  %249 = shape_of(%247, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%247, dtype="int16") /* ty=Tensor[(12, 12, 10), int16] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  minimum(%250, %251) /* ty=Tensor[(12, 12, 10), int16] */
}

def @func_1588(%var_1586: Tensor[(27), float64], %var_1587: Tensor[(27), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(540), float32], Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(9, 3, 5), float64], Tensor[(27), bool]) {
  @func_1584(%var_1586, %var_1587) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(540), float32], Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(9, 3, 5), float64], Tensor[(27), bool]) */
}

def @func_11690() -> (Tensor[(540), float32], Tensor[(3, 2, 2), float32]) {
  %256 = fn () -> (Tensor[(540), float32], Tensor[(3, 2, 2), float32]) {
    %252 = @func_7127() /* ty=(Tensor[(540), float32], Tensor[(3, 2, 2), float32]) */;
    %253 = @func_8104() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %254 = %252.0;
    %255 = %253.0;
    (%254, %255)
  };
  %256() /* ty=(Tensor[(540), float32], Tensor[(3, 2, 2), float32]) */
}

def @func_10513() -> Tensor[(15, 10, 11), float32] {
  %258 = fn () -> Tensor[(15, 10, 11), float32] {
    %257 = @func_2551() /* ty=(Tensor[(15, 10, 11), float32],) */;
    %257.0
  };
  %258() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_10981() -> (Tensor[(540), float32],) {
  %259 = @func_7127() /* ty=(Tensor[(540), float32], Tensor[(3, 2, 2), float32]) */;
  %260 = %259.0;
  (%260,)
}

def @func_5837() -> Tensor[(3, 2, 2), float32] {
  %261 = @func_5037() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */;
  %261.0
}

def @func_6521(%var_6481: Tensor[(27), float64]) -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(162), float64], Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(27), float32], Tensor[(3, 180), uint16]) {
  %262 = @func_4902() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %263 = cast(meta[relay.Constant][13] /* ty=Tensor[(162), float64] */, dtype="float64") /* ty=Tensor[(162), float64] */;
  %264 = reshape(%263, newshape=[9, 2, 9]) /* ty=Tensor[(9, 2, 9), float64] */;
  %265 = @func_3870(%264) /* ty=(Tensor[(9, 2, 9), float64], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
  %266 = cast(meta[relay.Constant][14] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %267 = cast(%var_6481, dtype="float64") /* ty=Tensor[(27), float64] */;
  %268 = reshape(%266, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %269 = reshape(%267, newshape=[3, 9]) /* ty=Tensor[(3, 9), float64] */;
  %270 = @func_1329(%268, %269) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(490, 1), float32], Tensor[(540), float32], Tensor[(3, 9), float64]) */;
  %271 = cast(%var_6481, dtype="float32") /* ty=Tensor[(27), float32] */;
  %272 = cast(meta[relay.Constant][14] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %273 = cast(meta[relay.Constant][14] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %274 = reshape(%272, newshape=[3, 180]) /* ty=Tensor[(3, 180), float32] */;
  %275 = reshape(%273, newshape=[3, 180]) /* ty=Tensor[(3, 180), float32] */;
  %276 = @func_5612(%274, %275) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 180), float32]) */;
  %277 = %276.2;
  %278 = cast(%277, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %279 = atanh(%278) /* ty=Tensor[(3, 180), float32] */;
  %280 = cast(%277, dtype="uint16") /* ty=Tensor[(3, 180), uint16] */;
  %281 = shape_of(%279, dtype="int32") /* ty=Tensor[(2), int32] */;
  %282 = cast(%279, dtype="uint16") /* ty=Tensor[(3, 180), uint16] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %284 = %262.1;
  %285 = %265.2;
  %286 = %270.0;
  %287 = atan(%271) /* ty=Tensor[(27), float32] */;
  %288 = right_shift(%282, %283) /* ty=Tensor[(3, 180), uint16] */;
  (%284, %285, meta[relay.Constant][13] /* ty=Tensor[(162), float64] */, %286, meta[relay.Constant][14] /* ty=Tensor[(540), float32] */, %287, %288)
}

def @func_10722() -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32]) {
  %294 = fn () -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32]) {
    %289 = @func_10667() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(12, 2, 9), float32], Tensor[(216), float32]) */;
    %290 = @func_8648() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), bool]) */;
    %291 = %289.0;
    %292 = %290.1;
    %293 = @func_10004() /* ty=Tensor[(3, 2, 2), float32] */;
    (%291, %292, %293)
  };
  %294() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32]) */
}

def @func_8291() -> Tensor[(15, 10, 11), float32] {
  @func_4474() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_9994() -> Tensor[(3, 2, 2), float32] {
  @func_9992() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_4202() -> Tensor[(3, 2, 2), float32] {
  @func_4200() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_10302() -> Tensor[(15, 10, 11), float32] {
  %295 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %295.0
}

def @func_10642() -> Tensor[(15, 10, 11), float32] {
  @func_10640() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_6668() -> (Tensor[(3, 2, 2), bool], Tensor[(15, 10, 11), float32], Tensor[(14, 8, 10), float64], Tensor[(3, 2, 2), float32], Tensor[(7, 15, 8), float64]) {
  %305 = fn () -> (Tensor[(3, 2, 2), bool], Tensor[(15, 10, 11), float32], Tensor[(14, 8, 10), float64], Tensor[(3, 2, 2), float32], Tensor[(7, 15, 8), float64]) {
    %296 = @func_5935() /* ty=(Tensor[(3, 2, 2), bool],) */;
    %297 = @func_4427() /* ty=(Tensor[(14, 8, 10), float64], Tensor[(14, 8, 10), float64]) */;
    %298 = @func_4786() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %299 = @func_3040() /* ty=(Tensor[(7, 15, 8), float64],) */;
    %300 = %296.0;
    %301 = @func_4129() /* ty=Tensor[(15, 10, 11), float32] */;
    %302 = %297.0;
    %303 = %298.0;
    %304 = %299.0;
    (%300, %301, %302, %303, %304)
  };
  %305() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(15, 10, 11), float32], Tensor[(14, 8, 10), float64], Tensor[(3, 2, 2), float32], Tensor[(7, 15, 8), float64]) */
}

def @func_4529() -> (Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) {
  %310 = fn () -> (Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) {
    %306 = @func_2601() /* ty=Tensor[(3, 2, 2), bool] */;
    %307 = @func_3217() /* ty=Tensor[(3, 2, 2), float32] */;
    %308 = @func_3217() /* ty=Tensor[(3, 2, 2), float32] */;
    %309 = @func_3481() /* ty=Tensor[(15, 10, 11), float32] */;
    (%306, %307, %308, %309)
  };
  %310() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_9017() -> Tensor[(3, 2, 2), float32] {
  @func_4098() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_9981() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), bool], Tensor[(1, 12), float32], Tensor[(15, 10, 11), float32]) {
  %311 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 12), float32] */, dtype="float32") /* ty=Tensor[(1, 12), float32] */;
  %312 = reshape(%311, newshape=[3, 2, 2]) /* ty=Tensor[(3, 2, 2), float32] */;
  %313 = @func_4129() /* ty=Tensor[(15, 10, 11), float32] */;
  %314 = @func_1722(%312) /* ty=Tensor[(3, 2, 2), bool] */;
  %315 = @func_7696() /* ty=Tensor[(15, 10, 11), float32] */;
  (%313, %314, meta[relay.Constant][15] /* ty=Tensor[(1, 12), float32] */, %315)
}

def @func_3872(%var_3871: Tensor[(9, 2, 9), float64]) -> (Tensor[(9, 2, 9), float64], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) {
  %321 = fn (%var_3846: Tensor[(9, 2, 9), float64]) -> (Tensor[(9, 2, 9), float64], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) {
    %316 = cast(%var_3846, dtype="float64") /* ty=Tensor[(9, 2, 9), float64] */;
    %317 = @func_2551() /* ty=(Tensor[(15, 10, 11), float32],) */;
    %318 = log(%316) /* ty=Tensor[(9, 2, 9), float64] */;
    %319 = @func_3217() /* ty=Tensor[(3, 2, 2), float32] */;
    %320 = %317.0;
    (%318, %319, %320)
  };
  %321(%var_3871) /* ty=(Tensor[(9, 2, 9), float64], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_5380() -> Tensor[(3, 2, 2), float32] {
  @func_5378() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_6559(%var_6556: Tensor[(11, 6, 10), float32], %var_6557: Tensor[(1040), float64], %var_6558: Tensor[(490), float32]) -> (Tensor[(11, 6, 10), float32], Tensor[(490), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) {
  @func_6554(%var_6556, %var_6557, %var_6558) /* ty=(Tensor[(11, 6, 10), float32], Tensor[(490), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) */
}

def @func_2498() -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) {
  %322 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %323 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %324 = %322.0;
  %325 = %323.0;
  (%324, %325)
}

def @func_8449() -> Tensor[(15, 10, 11), float32] {
  @func_8447() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_4044() -> Tensor[(3, 2, 2), float32] {
  %327 = fn () -> Tensor[(3, 2, 2), float32] {
    %326 = @func_2498() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) */;
    %326.0
  };
  %327() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_8059(%var_8057: Tensor[(27), float64], %var_8058: Tensor[(135), float64]) -> (Tensor[(15, 10, 11), float32], Tensor[(9, 3, 5), float64], Tensor[(27), float64], Tensor[(135), float64]) {
  @func_8055(%var_8057, %var_8058) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(9, 3, 5), float64], Tensor[(27), float64], Tensor[(135), float64]) */
}

def @func_10862() -> (Tensor[(270, 2), bool], Tensor[(15, 10, 11), float32]) {
  @func_10860() /* ty=(Tensor[(270, 2), bool], Tensor[(15, 10, 11), float32]) */
}

def @func_1245(%var_1242: Tensor[(7, 7, 10), float32], %var_1243: Tensor[(540), float32], %var_1244: Tensor[(27), float64]) -> (Tensor[(7, 7, 10), float32], Tensor[(27), float64], Tensor[(540), float32], Tensor[(27), float64]) {
  @func_1240(%var_1242, %var_1243, %var_1244) /* ty=(Tensor[(7, 7, 10), float32], Tensor[(27), float64], Tensor[(540), float32], Tensor[(27), float64]) */
}

def @func_10983() -> (Tensor[(540), float32],) {
  @func_10981() /* ty=(Tensor[(540), float32],) */
}

def @func_3513() -> (Tensor[(15, 10, 11), float32],) {
  %329 = fn () -> (Tensor[(15, 10, 11), float32],) {
    %328 = @func_2787() /* ty=Tensor[(15, 10, 11), float32] */;
    (%328,)
  };
  %329() /* ty=(Tensor[(15, 10, 11), float32],) */
}

def @func_201(%var_199: Tensor[(9, 3, 1), float64], %var_200: Tensor[(9, 3, 5), float64]) -> (Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64]) {
  %340 = fn (%var_162: Tensor[(9, 3, 1), float64], %var_163: Tensor[(9, 3, 5), float64]) -> (Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64]) {
    %330 = cast(%var_162, dtype="float64") /* ty=Tensor[(9, 3, 1), float64] */;
    %331 = cast(%var_163, dtype="float64") /* ty=Tensor[(9, 3, 5), float64] */;
    %332 = cast(meta[relay.Constant][16] /* ty=Tensor[(9, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(9, 3, 5), float64] */;
    %333 = shape_of(%var_163, dtype="int32") /* ty=Tensor[(3), int32] */;
    %334 = cast(%var_163, dtype="float64") /* ty=Tensor[(9, 3, 5), float64] */;
    %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %336 = cast(meta[relay.Constant][16] /* ty=Tensor[(9, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(9, 3, 5), float64] */;
    %337 = divide(%330, %331) /* ty=Tensor[(9, 3, 5), float64] */;
    %338 = power(%334, %335) /* ty=Tensor[(9, 3, 5), float64] */;
    %339 = acosh(%336) /* ty=Tensor[(9, 3, 5), float64] */;
    (%337, %338, %339)
  };
  %340(%var_199, %var_200) /* ty=(Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64]) */
}

def @func_12180() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
  %341 = @func_8398() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %342 = @func_6203() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(540), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(9, 3, 5), float64], Tensor[(15, 9), float64], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %343 = @func_9891() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
  %344 = %341.0;
  %345 = %342.11;
  %346 = %343.1;
  (%344, %345, %346)
}

def @func_2701() -> Tensor[(15, 10, 11), float32] {
  %348 = fn () -> Tensor[(15, 10, 11), float32] {
    %347 = @func_2551() /* ty=(Tensor[(15, 10, 11), float32],) */;
    %347.0
  };
  %348() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_9019() -> Tensor[(3, 2, 2), float32] {
  @func_9017() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_1192() -> (Tensor[(3, 2, 2), float32],) {
  @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */
}

def @func_4131() -> Tensor[(15, 10, 11), float32] {
  @func_4129() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_8912(%var_8911: Tensor[(1650), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(3, 2, 2), float32], Tensor[(1650), bool], Tensor[(1650), float32]) {
  %364 = fn (%var_8886: Tensor[(1650), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(3, 2, 2), float32], Tensor[(1650), bool], Tensor[(1650), float32]) {
    %349 = @func_2426() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %350 = @func_7164() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */;
    %351 = @func_6578() /* ty=Tensor[(1650), float64] */;
    %352 = cast(%var_8886, dtype="bool") /* ty=Tensor[(1650), bool] */;
    %353 = shape_of(%351, dtype="int32") /* ty=Tensor[(1), int32] */;
    %354 = cast(%351, dtype="bool") /* ty=Tensor[(1650), bool] */;
    %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?), bool] */;
    %356 = cast(%var_8886, dtype="float32") /* ty=Tensor[(1650), float32] */;
    %357 = atan(%356) /* ty=Tensor[(1650), float32] */;
    %358 = cast(%357, dtype="float32") /* ty=Tensor[(1650), float32] */;
    %359 = %349.0;
    %360 = @func_8240() /* ty=Tensor[(135), float64] */;
    %361 = %350.1;
    %362 = not_equal(%354, %355) /* ty=Tensor[(1650), bool] */;
    %363 = acos(%358) /* ty=Tensor[(1650), float32] */;
    (%359, %360, %361, %362, %363)
  };
  %364(%var_8911) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(3, 2, 2), float32], Tensor[(1650), bool], Tensor[(1650), float32]) */
}

def @func_9891() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) {
  %365 = @func_2426() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %366 = %365.0;
  %367 = @func_2787() /* ty=Tensor[(15, 10, 11), float32] */;
  (%366, %367)
}

def @func_5528(%var_5526: Tensor[(4, 14, 10), float32], %var_5527: Tensor[(4, 14, 10), float32]) -> (Tensor[(4, 14, 10), uint8], Tensor[(9, 3, 5), float64], Tensor[(540), float32], Tensor[(1, 135), float64], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(4, 14, 10), int8], Tensor[(4, 14, 10), float32], Tensor[(4, 14, 10), bool]) {
  %404 = fn (%var_5402: Tensor[(4, 14, 10), float32], %var_5425: Tensor[(4, 14, 10), float32]) -> (Tensor[(4, 14, 10), uint8], Tensor[(9, 3, 5), float64], Tensor[(540), float32], Tensor[(1, 135), float64], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(4, 14, 10), int8], Tensor[(4, 14, 10), float32], Tensor[(4, 14, 10), bool]) {
    %368 = cast(%var_5425, dtype="uint8") /* ty=Tensor[(4, 14, 10), uint8] */;
    %369 = shape_of(%var_5402, dtype="int32") /* ty=Tensor[(3), int32] */;
    %370 = cast(%var_5402, dtype="uint8") /* ty=Tensor[(4, 14, 10), uint8] */;
    %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %372 = cast(meta[relay.Constant][17] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
    %373 = cast(meta[relay.Constant][17] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
    %374 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 135), float64] */, dtype="float64") /* ty=Tensor[(1, 135), float64] */;
    %375 = reshape(%372, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float32] */;
    %376 = reshape(%373, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float32] */;
    %377 = reshape(%374, newshape=[135]) /* ty=Tensor[(135), float64] */;
    %378 = @func_665(%375, %376, %377) /* ty=(Tensor[(6, 9, 10), bool], Tensor[(9, 3, 5), float64], Tensor[(27, 1), float64], Tensor[(135), float64], Tensor[(6, 9, 10), float32]) */;
    %379 = @func_2439() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %380 = @func_3512() /* ty=(Tensor[(15, 10, 11), float32],) */;
    %381 = cast(%var_5402, dtype="float32") /* ty=Tensor[(4, 14, 10), float32] */;
    %382 = cos(%381) /* ty=Tensor[(4, 14, 10), float32] */;
    %383 = cast(meta[relay.Constant][19] /* ty=Tensor[(4, 14, 10), float32] */, dtype="int8") /* ty=Tensor[(4, 14, 10), int8] */;
    %384 = shape_of(%382, dtype="int32") /* ty=Tensor[(3), int32] */;
    %385 = cast(%382, dtype="int8") /* ty=Tensor[(4, 14, 10), int8] */;
    %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %387 = cast(%382, dtype="float64") /* ty=Tensor[(4, 14, 10), float64] */;
    %388 = sigmoid(%387) /* ty=Tensor[(4, 14, 10), float64] */;
    %389 = cast(%388, dtype="float32") /* ty=Tensor[(4, 14, 10), float32] */;
    %390 = cast(%388, dtype="float64") /* ty=Tensor[(4, 14, 10), float64] */;
    %391 = atan(%390) /* ty=Tensor[(4, 14, 10), float64] */;
    %392 = cast(%391, dtype="bool") /* ty=Tensor[(4, 14, 10), bool] */;
    %393 = shape_of(%388, dtype="int32") /* ty=Tensor[(3), int32] */;
    %394 = cast(%388, dtype="bool") /* ty=Tensor[(4, 14, 10), bool] */;
    %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %396 = bitwise_xor(%370, %371) /* ty=Tensor[(4, 14, 10), uint8] */;
    %397 = %378.1;
    %398 = %379.0;
    %399 = %380.0;
    %400 = @func_2787() /* ty=Tensor[(15, 10, 11), float32] */;
    %401 = subtract(%385, %386) /* ty=Tensor[(4, 14, 10), int8] */;
    %402 = exp(%389) /* ty=Tensor[(4, 14, 10), float32] */;
    %403 = less_equal(%394, %395) /* ty=Tensor[(4, 14, 10), bool] */;
    (%396, %397, meta[relay.Constant][17] /* ty=Tensor[(540), float32] */, meta[relay.Constant][18] /* ty=Tensor[(1, 135), float64] */, %398, %399, %400, %401, %402, %403)
  };
  %404(%var_5526, %var_5527) /* ty=(Tensor[(4, 14, 10), uint8], Tensor[(9, 3, 5), float64], Tensor[(540), float32], Tensor[(1, 135), float64], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(4, 14, 10), int8], Tensor[(4, 14, 10), float32], Tensor[(4, 14, 10), bool]) */
}

def @func_4365(%var_4364: Tensor[(490), float32]) -> (Tensor[(3, 2, 2), bool], Tensor[(27), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(540), float32], Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
  %418 = fn (%var_4337: Tensor[(490), float32]) -> (Tensor[(3, 2, 2), bool], Tensor[(27), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(540), float32], Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
    %405 = cast(%var_4337, dtype="float32") /* ty=Tensor[(490), float32] */;
    %406 = cast(meta[relay.Constant][20] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
    %407 = cast(meta[relay.Constant][21] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
    %408 = reshape(%405, newshape=[7, 7, 10]) /* ty=Tensor[(7, 7, 10), float32] */;
    %409 = reshape(%406, newshape=[540]) /* ty=Tensor[(540), float32] */;
    %410 = reshape(%407, newshape=[27]) /* ty=Tensor[(27), float64] */;
    %411 = @func_1240(%408, %409, %410) /* ty=(Tensor[(7, 7, 10), float32], Tensor[(27), float64], Tensor[(540), float32], Tensor[(27), float64]) */;
    %412 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
    %413 = @func_2601() /* ty=Tensor[(3, 2, 2), bool] */;
    %414 = %411.1;
    %415 = @func_3311() /* ty=Tensor[(540), float32] */;
    %416 = %412.0;
    %417 = @func_3217() /* ty=Tensor[(3, 2, 2), float32] */;
    (%413, %414, %var_4337, meta[relay.Constant][20] /* ty=Tensor[(540), float32] */, meta[relay.Constant][21] /* ty=Tensor[(27), float64] */, %415, %416, %417)
  };
  %418(%var_4364) /* ty=(Tensor[(3, 2, 2), bool], Tensor[(27), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(540), float32], Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */
}

def @func_4200() -> Tensor[(3, 2, 2), float32] {
  %419 = @func_2498() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) */;
  %419.0
}

def @func_5378() -> Tensor[(3, 2, 2), float32] {
  %420 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %421 = %420.0;
  %422 = cast(%421, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  asinh(%422) /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_9234(%var_9233: Tensor[(13, 7, 9), bool]) -> (Tensor[(13, 7, 9), bool],) {
  %426 = fn (%var_9228: Tensor[(13, 7, 9), bool]) -> (Tensor[(13, 7, 9), bool],) {
    %423 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %424 = cast(%var_9228, dtype="bool") /* ty=Tensor[(13, 7, 9), bool] */;
    %425 = logical_or(%423, %424) /* ty=Tensor[(13, 7, 9), bool] */;
    (%425,)
  };
  %426(%var_9233) /* ty=(Tensor[(13, 7, 9), bool],) */
}

def @func_11114() -> (Tensor[(3, 2, 2), float32],) {
  @func_11112() /* ty=(Tensor[(3, 2, 2), float32],) */
}

def @func_5616(%var_5614: Tensor[(3, 180), float32], %var_5615: Tensor[(3, 180), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 180), float32]) {
  @func_5612(%var_5614, %var_5615) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 180), float32]) */
}

def @func_10860() -> (Tensor[(270, 2), bool], Tensor[(15, 10, 11), float32]) {
  %427 = @func_10131() /* ty=(Tensor[(14, 7, 15), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(270, 2), bool]) */;
  %428 = @func_4902() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %429 = %427.3;
  %430 = %428.1;
  (%429, %430)
}

def @func_7480() -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), bool]) {
  %431 = @func_2498() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) */;
  %432 = @func_6347() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(4, 14, 10), uint8], Tensor[(3, 2, 2), float32], Tensor[(8, 70), bool]) */;
  %433 = %432.0;
  %434 = cast(%433, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  %435 = reshape(%434, newshape=[3, 2, 2]) /* ty=Tensor[(3, 2, 2), float32] */;
  %436 = %431.0;
  %437 = @func_1722(%435) /* ty=Tensor[(3, 2, 2), bool] */;
  (%436, %433, %437)
}

def @main(%var_12425: Tensor[(1, 4, 3), float64]) -> Tensor[(1, 4, 3), float64] {
  %438 = cast(%var_12425, dtype="float64") /* ty=Tensor[(1, 4, 3), float64] */;
  asin(%438) /* ty=Tensor[(1, 4, 3), float64] */
}

def @func_8535() -> (Tensor[(1650), float64], Tensor[(3, 2, 2), float32]) {
  %439 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
  %440 = %439.6;
  %441 = cast(%440, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %442 = @func_8104() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %443 = erf(%441) /* ty=Tensor[(1650), float64] */;
  %444 = %442.0;
  (%443, %444)
}

def @func_3745() -> Tensor[(15, 10, 11), float32] {
  %446 = fn () -> Tensor[(15, 10, 11), float32] {
    %445 = @func_2551() /* ty=(Tensor[(15, 10, 11), float32],) */;
    %445.0
  };
  %446() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_6554(%var_6540: Tensor[(11, 6, 10), float32], %var_6544: Tensor[(1040), float64], %var_6545: Tensor[(490), float32]) -> (Tensor[(11, 6, 10), float32], Tensor[(490), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) {
  %447 = cast(%var_6540, dtype="float32") /* ty=Tensor[(11, 6, 10), float32] */;
  %448 = cast(%var_6544, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %449 = cast(%var_6545, dtype="float32") /* ty=Tensor[(490), float32] */;
  %450 = cast(meta[relay.Constant][22] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %451 = reshape(%448, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %452 = reshape(%449, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %453 = reshape(%450, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %454 = @func_1357(%451, %452, %453) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(7, 7, 10), float32], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(270, 2), float32]) */;
  %455 = asin(%447) /* ty=Tensor[(11, 6, 10), float32] */;
  %456 = %454.2;
  (%455, %456, %var_6544, %var_6545, meta[relay.Constant][22] /* ty=Tensor[(540), float32] */)
}

def @func_1357(%var_1344: Tensor[(10, 13, 8), float64], %var_1350: Tensor[(490), float32], %var_1351: Tensor[(540), float32]) -> (Tensor[(10, 13, 8), float64], Tensor[(7, 7, 10), float32], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(270, 2), float32]) {
  %457 = cast(%var_1344, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
  %458 = cast(%var_1350, dtype="float32") /* ty=Tensor[(490), float32] */;
  %459 = cast(%var_1351, dtype="float32") /* ty=Tensor[(540), float32] */;
  %460 = cast(meta[relay.Constant][23] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %461 = reshape(%458, newshape=[7, 7, 10]) /* ty=Tensor[(7, 7, 10), float32] */;
  %462 = reshape(%459, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %463 = reshape(%460, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %464 = @func_1240(%461, %462, %463) /* ty=(Tensor[(7, 7, 10), float32], Tensor[(27), float64], Tensor[(540), float32], Tensor[(27), float64]) */;
  %465 = cast(%var_1351, dtype="float32") /* ty=Tensor[(540), float32] */;
  %466 = reshape(%465, newshape=[270, 2]) /* ty=Tensor[(270, 2), float32] */;
  %467 = @func_1271(%466) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(270, 2), float32], Tensor[(135), float64]) */;
  %468 = asinh(%457) /* ty=Tensor[(10, 13, 8), float64] */;
  %469 = %464.0;
  %470 = %467.2;
  (%468, %469, %var_1350, %var_1351, meta[relay.Constant][23] /* ty=Tensor[(27), float64] */, %470)
}

def @func_8055(%var_8042: Tensor[(27), float64], %var_8043: Tensor[(135), float64]) -> (Tensor[(15, 10, 11), float32], Tensor[(9, 3, 5), float64], Tensor[(27), float64], Tensor[(135), float64]) {
  %471 = @func_4902() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %472 = %471.1;
  %473 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 10, 11), float32] */, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %474 = shape_of(%472, dtype="int32") /* ty=Tensor[(3), int32] */;
  %475 = cast(%472, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %477 = cast(%var_8042, dtype="float64") /* ty=Tensor[(27), float64] */;
  %478 = cast(%var_8043, dtype="float64") /* ty=Tensor[(135), float64] */;
  %479 = reshape(%477, newshape=[9, 3, 1]) /* ty=Tensor[(9, 3, 1), float64] */;
  %480 = reshape(%478, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), float64] */;
  %481 = @func_198(%479, %480) /* ty=(Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64]) */;
  %482 = floor_mod(%475, %476) /* ty=Tensor[(15, 10, 11), float32] */;
  %483 = %481.0;
  (%482, %483, %var_8042, %var_8043)
}

def @func_6742() -> (Tensor[(15, 10, 11), float32],) {
  @func_6740() /* ty=(Tensor[(15, 10, 11), float32],) */
}

def @func_8978(%var_8967: Tensor[(540), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) {
  %484 = @func_6974() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %485 = cast(%var_8967, dtype="float32") /* ty=Tensor[(540), float32] */;
  %486 = cast(%var_8967, dtype="float32") /* ty=Tensor[(540), float32] */;
  %487 = reshape(%485, newshape=[3, 180]) /* ty=Tensor[(3, 180), float32] */;
  %488 = reshape(%486, newshape=[3, 180]) /* ty=Tensor[(3, 180), float32] */;
  %489 = @func_5612(%487, %488) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 180), float32]) */;
  %490 = %484.0;
  %491 = %489.1;
  (%490, %491, %var_8967)
}

def @func_4903() -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
  %499 = fn () -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
    %492 = @func_4650() /* ty=(Tensor[(15, 10, 11), float32],) */;
    %493 = %492.0;
    %494 = cast(%493, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
    %495 = cast(%493, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
    %496 = reshape(%494, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
    %497 = reshape(%495, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
    %498 = @func_2117(%496, %497) /* ty=Tensor[(15, 10, 11), float32] */;
    (%493, %498)
  };
  %499() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_9777(%var_9766: Tensor[(1, 1, 7), float32]) -> (Tensor[(1, 1, 7), float32],) {
  %500 = cast(%var_9766, dtype="float32") /* ty=Tensor[(1, 1, 7), float32] */;
  %501 = rsqrt(%500) /* ty=Tensor[(1, 1, 7), float32] */;
  (%501,)
}

def @func_11358(%var_11356: Tensor[(1650), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(1650), bool], Tensor[(1650), float64]) {
  @func_11355(%var_11356) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(1650), bool], Tensor[(1650), float64]) */
}

def @func_10402(%var_10400: Tensor[(12, 12, 10), float64], %var_10401: Tensor[(12, 12, 10), float64]) -> Tensor[(12, 12, 10), int16] {
  @func_10398(%var_10400, %var_10401) /* ty=Tensor[(12, 12, 10), int16] */
}

def @func_2235(%var_2233: Tensor[(3, 2, 2), float32]) -> (Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float64]) {
  @func_2232(%var_2233) /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float64]) */
}

def @func_11950(%var_11948: Tensor[(270, 2), bool]) -> (Tensor[(270, 2), bool], Tensor[(1, 1, 7), float32], Tensor[(7, 1), float32], Tensor[(270, 2), float32]) {
  @func_11947(%var_11948) /* ty=(Tensor[(270, 2), bool], Tensor[(1, 1, 7), float32], Tensor[(7, 1), float32], Tensor[(270, 2), float32]) */
}

def @func_9000() -> (Tensor[(3, 2, 2), float32],) {
  %502 = @func_6436() /* ty=Tensor[(3, 2, 2), float32] */;
  (%502,)
}

def @func_7372() -> (Tensor[(4, 14, 10), uint8],) {
  %503 = @func_7317() /* ty=(Tensor[(4, 14, 10), uint8], Tensor[(1040, 1), float64]) */;
  %504 = %503.0;
  (%504,)
}

def @func_7441() -> (Tensor[(15, 10, 11), float32], Tensor[(540), float32]) {
  %509 = fn () -> (Tensor[(15, 10, 11), float32], Tensor[(540), float32]) {
    %505 = @func_4266() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
    %506 = @func_7127() /* ty=(Tensor[(540), float32], Tensor[(3, 2, 2), float32]) */;
    %507 = %505.2;
    %508 = %506.0;
    (%507, %508)
  };
  %509() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(540), float32]) */
}

def @func_11650() -> Tensor[(14, 8, 10), float64] {
  %510 = @func_4427() /* ty=(Tensor[(14, 8, 10), float64], Tensor[(14, 8, 10), float64]) */;
  %510.0
}

def @func_5839() -> Tensor[(3, 2, 2), float32] {
  @func_5837() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_3219() -> Tensor[(3, 2, 2), float32] {
  @func_3217() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_10443() -> Tensor[(15, 10, 11), float32] {
  @func_10441() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_11590(%var_11589: Tensor[(270, 2), bool]) -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), bool], Tensor[(270, 2), float32], Tensor[(540), float32], Tensor[(270, 2), float64]) {
  %527 = fn (%var_11572: Tensor[(270, 2), bool]) -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), bool], Tensor[(270, 2), float32], Tensor[(540), float32], Tensor[(270, 2), float64]) {
    %511 = @func_9549() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32]) */;
    %512 = @func_5935() /* ty=(Tensor[(3, 2, 2), bool],) */;
    %513 = @func_10860() /* ty=(Tensor[(270, 2), bool], Tensor[(15, 10, 11), float32]) */;
    %514 = %513.0;
    %515 = cast(%var_11572, dtype="float32") /* ty=Tensor[(270, 2), float32] */;
    %516 = shape_of(%514, dtype="int32") /* ty=Tensor[(2), int32] */;
    %517 = cast(%514, dtype="float32") /* ty=Tensor[(270, 2), float32] */;
    %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %519 = @func_5037() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */;
    %520 = cast(%var_11572, dtype="float64") /* ty=Tensor[(270, 2), float64] */;
    %521 = @func_4200() /* ty=Tensor[(3, 2, 2), float32] */;
    %522 = %511.0;
    %523 = %512.0;
    %524 = add(%517, %518) /* ty=Tensor[(270, 2), float32] */;
    %525 = %519.1;
    %526 = sin(%520) /* ty=Tensor[(270, 2), float64] */;
    (%521, %522, %523, %524, %525, %526)
  };
  %527(%var_11589) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), bool], Tensor[(270, 2), float32], Tensor[(540), float32], Tensor[(270, 2), float64]) */
}

def @func_9551() -> (Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32]) {
  @func_9549() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32]) */
}

def @func_1190() -> (Tensor[(3, 2, 2), float32],) {
  %528 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 2, 2), float32] */, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  %529 = sinh(%528) /* ty=Tensor[(3, 2, 2), float32] */;
  (%529,)
}

def @func_12182() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
  @func_12180() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_1794(%var_1792: Tensor[(27), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(54, 10), float32], Tensor[(27), float64]) {
  @func_1791(%var_1792) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(54, 10), float32], Tensor[(27), float64]) */
}

def @func_7164() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
  %530 = @func_3512() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %531 = %530.0;
  %532 = @func_6436() /* ty=Tensor[(3, 2, 2), float32] */;
  (%531, %532)
}

def @func_6204() -> (Tensor[(15, 10, 11), float32], Tensor[(540), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(9, 3, 5), float64], Tensor[(15, 9), float64], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
  %558 = fn () -> (Tensor[(15, 10, 11), float32], Tensor[(540), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(9, 3, 5), float64], Tensor[(15, 9), float64], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
    %533 = @func_4902() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
    %534 = cast(meta[relay.Constant][26] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
    %535 = cast(meta[relay.Constant][27] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
    %536 = cast(meta[relay.Constant][28] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
    %537 = reshape(%534, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
    %538 = reshape(%535, newshape=[490]) /* ty=Tensor[(490), float32] */;
    %539 = reshape(%536, newshape=[540]) /* ty=Tensor[(540), float32] */;
    %540 = @func_5195(%537, %538, %539) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(8, 5, 8), float32], Tensor[(40, 8), float32], Tensor[(27), float64], Tensor[(540), float32]) */;
    %541 = @func_4528() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
    %542 = %540.4;
    %543 = cast(%542, dtype="float32") /* ty=Tensor[(540), float32] */;
    %544 = cast(meta[relay.Constant][28] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
    %545 = cast(meta[relay.Constant][29] /* ty=Tensor[(15, 9), float64] */, dtype="float64") /* ty=Tensor[(15, 9), float64] */;
    %546 = reshape(%543, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float32] */;
    %547 = reshape(%544, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float32] */;
    %548 = reshape(%545, newshape=[135]) /* ty=Tensor[(135), float64] */;
    %549 = @func_665(%546, %547, %548) /* ty=(Tensor[(6, 9, 10), bool], Tensor[(9, 3, 5), float64], Tensor[(27, 1), float64], Tensor[(135), float64], Tensor[(6, 9, 10), float32]) */;
    %550 = @func_4748() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
    %551 = %533.0;
    %552 = @func_4098() /* ty=Tensor[(3, 2, 2), float32] */;
    %553 = %541.1;
    %554 = %549.1;
    %555 = @func_2700() /* ty=Tensor[(15, 10, 11), float32] */;
    %556 = %550.1;
    %557 = @func_2787() /* ty=Tensor[(15, 10, 11), float32] */;
    (%551, %542, meta[relay.Constant][26] /* ty=Tensor[(1040), float64] */, meta[relay.Constant][27] /* ty=Tensor[(490), float32] */, meta[relay.Constant][28] /* ty=Tensor[(540), float32] */, %552, %553, %554, meta[relay.Constant][29] /* ty=Tensor[(15, 9), float64] */, %555, %556, %557)
  };
  %558() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(540), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(9, 3, 5), float64], Tensor[(15, 9), float64], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_6058(%var_6056: Tensor[(15, 10, 11), float32]) -> (Tensor[(15, 10, 11), int32], Tensor[(3, 2, 2), bool], Tensor[(1, 12), float32], Tensor[(15, 10, 11), float32]) {
  @func_6055(%var_6056) /* ty=(Tensor[(15, 10, 11), int32], Tensor[(3, 2, 2), bool], Tensor[(1, 12), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_4568() -> (Tensor[(3, 2, 2), float32],) {
  %560 = fn () -> (Tensor[(3, 2, 2), float32],) {
    %559 = @func_4098() /* ty=Tensor[(3, 2, 2), float32] */;
    (%559,)
  };
  %560() /* ty=(Tensor[(3, 2, 2), float32],) */
}

def @func_10285() -> (Tensor[(15, 10, 11), float64], Tensor[(540), float32]) {
  %561 = @func_8291() /* ty=Tensor[(15, 10, 11), float32] */;
  %562 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 10, 11), float32] */, dtype="float64") /* ty=Tensor[(15, 10, 11), float64] */;
  %563 = shape_of(%561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%561, dtype="float64") /* ty=Tensor[(15, 10, 11), float64] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %566 = @func_4802() /* ty=(Tensor[(540), float32],) */;
  %567 = floor_divide(%564, %565) /* ty=Tensor[(15, 10, 11), float64] */;
  %568 = %566.0;
  (%567, %568)
}

def @func_2652() -> (Tensor[(3, 2, 2), bool], Tensor[(10, 13, 8), float64], Tensor[(1040, 1), float64], Tensor[(490), float32], Tensor[(540), float32]) {
  %569 = cast(meta[relay.Constant][31] /* ty=Tensor[(1040, 1), float64] */, dtype="float64") /* ty=Tensor[(1040, 1), float64] */;
  %570 = cast(meta[relay.Constant][32] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %571 = cast(meta[relay.Constant][33] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %572 = reshape(%569, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %573 = reshape(%570, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %574 = reshape(%571, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %575 = @func_1357(%572, %573, %574) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(7, 7, 10), float32], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(270, 2), float32]) */;
  %576 = @func_2601() /* ty=Tensor[(3, 2, 2), bool] */;
  %577 = %575.0;
  (%576, %577, meta[relay.Constant][31] /* ty=Tensor[(1040, 1), float64] */, meta[relay.Constant][32] /* ty=Tensor[(490), float32] */, meta[relay.Constant][33] /* ty=Tensor[(540), float32] */)
}

def @func_11881() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) {
  %581 = fn () -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) {
    %578 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
    %579 = @func_4098() /* ty=Tensor[(3, 2, 2), float32] */;
    %580 = %578.0;
    (%579, %580)
  };
  %581() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_10835() -> (Tensor[(3, 2, 2), float32],) {
  %583 = fn () -> (Tensor[(3, 2, 2), float32],) {
    %582 = @func_9017() /* ty=Tensor[(3, 2, 2), float32] */;
    (%582,)
  };
  %583() /* ty=(Tensor[(3, 2, 2), float32],) */
}

def @func_10640() -> Tensor[(15, 10, 11), float32] {
  @func_10187() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_4928() -> Tensor[(3, 2, 2), float32] {
  %584 = @func_4567() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %584.0
}

def @func_2854(%var_2843: Tensor[(11, 9, 7), float64]) -> (Tensor[(11, 9, 7), float64], Tensor[(3, 2, 2), float32]) {
  %585 = cast(%var_2843, dtype="float64") /* ty=Tensor[(11, 9, 7), float64] */;
  %586 = @func_2439() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %587 = log2(%585) /* ty=Tensor[(11, 9, 7), float64] */;
  %588 = %586.0;
  (%587, %588)
}

def @func_11525(%var_11481: Tensor[(540), float32]) -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(27), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) {
  %589 = @func_11379() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %590 = @func_3988() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %591 = cast(meta[relay.Constant][34] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %592 = cast(meta[relay.Constant][35] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %593 = cast(%var_11481, dtype="float32") /* ty=Tensor[(540), float32] */;
  %594 = reshape(%591, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %595 = reshape(%592, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %596 = reshape(%593, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %597 = @func_1357(%594, %595, %596) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(7, 7, 10), float32], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(270, 2), float32]) */;
  %598 = @func_5378() /* ty=Tensor[(3, 2, 2), float32] */;
  %599 = %589.0;
  %600 = %590.0;
  %601 = @func_8291() /* ty=Tensor[(15, 10, 11), float32] */;
  %602 = %597.4;
  (%598, %599, %600, %601, %602, meta[relay.Constant][34] /* ty=Tensor[(1040), float64] */, meta[relay.Constant][35] /* ty=Tensor[(490), float32] */, %var_11481)
}

def @func_6975() -> (Tensor[(15, 10, 11), float32],) {
  %605 = fn () -> (Tensor[(15, 10, 11), float32],) {
    %603 = @func_3512() /* ty=(Tensor[(15, 10, 11), float32],) */;
    %604 = %603.0;
    (%604,)
  };
  %605() /* ty=(Tensor[(15, 10, 11), float32],) */
}

def @func_4267() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
  %610 = fn () -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
    %606 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %607 = %606.0;
    %608 = @func_3744() /* ty=Tensor[(15, 10, 11), float32] */;
    %609 = @func_3481() /* ty=Tensor[(15, 10, 11), float32] */;
    (%607, %608, %609)
  };
  %610() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_1989(%var_1986: Tensor[(1040), float64], %var_1987: Tensor[(490), float32], %var_1988: Tensor[(540), float32]) -> (Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) {
  %621 = fn (%var_1980: Tensor[(1040), float64], %var_1981: Tensor[(490), float32], %var_1982: Tensor[(540), float32]) -> (Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) {
    %611 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %612 = cast(%var_1980, dtype="float64") /* ty=Tensor[(1040), float64] */;
    %613 = cast(%var_1981, dtype="float32") /* ty=Tensor[(490), float32] */;
    %614 = cast(%var_1982, dtype="float32") /* ty=Tensor[(540), float32] */;
    %615 = reshape(%612, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
    %616 = reshape(%613, newshape=[490]) /* ty=Tensor[(490), float32] */;
    %617 = reshape(%614, newshape=[540]) /* ty=Tensor[(540), float32] */;
    %618 = @func_1357(%615, %616, %617) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(7, 7, 10), float32], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(270, 2), float32]) */;
    %619 = %611.0;
    %620 = %618.4;
    (%619, %620, %var_1980, %var_1981, %var_1982)
  };
  %621(%var_1986, %var_1987, %var_1988) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) */
}

def @func_12093(%var_12091: Tensor[(540), float32], %var_12092: Tensor[(490), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 180), bool], Tensor[(540), float32], Tensor[(490), float32], Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1650), float64], Tensor[(12, 2, 12), bool], Tensor[(288), bool], Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), bool]) {
  @func_12089(%var_12091, %var_12092) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 180), bool], Tensor[(540), float32], Tensor[(490), float32], Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1650), float64], Tensor[(12, 2, 12), bool], Tensor[(288), bool], Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), bool]) */
}

def @func_10801(%var_10774: Tensor[(15, 10, 3), int64], %var_10775: Tensor[(15, 10, 3), int64]) -> Tensor[(15, 10, 3), int64] {
  %622 = cast(%var_10775, dtype="int64") /* ty=Tensor[(15, 10, 3), int64] */;
  %623 = shape_of(%var_10774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%var_10774, dtype="int64") /* ty=Tensor[(15, 10, 3), int64] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  logical_xor(%624, %625) /* ty=Tensor[(15, 10, 3), int64] */
}

def @func_952(%var_904: Tensor[(15, 6, 6), float32], %var_922: Tensor[(27), float64]) -> (Tensor[(15, 6, 6), float32], Tensor[(9, 3, 5), float64], Tensor[(27), float64], Tensor[(135), float64], Tensor[(9, 3, 5), float64]) {
  %626 = cast(%var_904, dtype="float32") /* ty=Tensor[(15, 6, 6), float32] */;
  %627 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(15, 6, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %628 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 6, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 6, 6), float32] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %630 = cast(%var_922, dtype="float64") /* ty=Tensor[(27), float64] */;
  %631 = cast(meta[relay.Constant][37] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %632 = reshape(%630, newshape=[9, 3, 1]) /* ty=Tensor[(9, 3, 1), float64] */;
  %633 = reshape(%631, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), float64] */;
  %634 = @func_198(%632, %633) /* ty=(Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64]) */;
  %635 = cast(%var_922, dtype="float64") /* ty=Tensor[(27), float64] */;
  %636 = %634.0;
  %637 = cast(%636, dtype="float64") /* ty=Tensor[(9, 3, 5), float64] */;
  %638 = reshape(%635, newshape=[9, 3, 1]) /* ty=Tensor[(9, 3, 1), float64] */;
  %639 = reshape(%637, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), float64] */;
  %640 = @func_198(%638, %639) /* ty=(Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64]) */;
  %641 = power(%628, %629) /* ty=Tensor[(15, 6, 6), float32] */;
  %642 = %640.0;
  (%641, %636, %var_922, meta[relay.Constant][37] /* ty=Tensor[(135), float64] */, %642)
}

def @func_2602() -> Tensor[(3, 2, 2), bool] {
  %649 = fn () -> Tensor[(3, 2, 2), bool] {
    %643 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %644 = %643.0;
    %645 = cast(meta[relay.Constant][38] /* ty=Tensor[(3, 2, 2), float32] */, dtype="bool") /* ty=Tensor[(3, 2, 2), bool] */;
    %646 = shape_of(%644, dtype="int32") /* ty=Tensor[(3), int32] */;
    %647 = cast(%644, dtype="bool") /* ty=Tensor[(3, 2, 2), bool] */;
    %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%647, %648) /* ty=Tensor[(3, 2, 2), bool] */
  };
  %649() /* ty=Tensor[(3, 2, 2), bool] */
}

def @func_1791(%var_1788: Tensor[(27), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(54, 10), float32], Tensor[(27), float64]) {
  %650 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %651 = %650.0;
  %652 = cast(%651, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  %653 = reshape(%652, newshape=[3, 2, 2]) /* ty=Tensor[(3, 2, 2), float32] */;
  %654 = @func_1722(%653) /* ty=Tensor[(3, 2, 2), bool] */;
  %655 = cast(%651, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  %656 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %657 = cast(%654, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %659 = cast(meta[relay.Constant][39] /* ty=Tensor[(54, 10), float32] */, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %660 = cast(%var_1788, dtype="float64") /* ty=Tensor[(27), float64] */;
  %661 = reshape(%659, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %662 = reshape(%660, newshape=[3, 9]) /* ty=Tensor[(3, 9), float64] */;
  %663 = @func_1329(%661, %662) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(490, 1), float32], Tensor[(540), float32], Tensor[(3, 9), float64]) */;
  %664 = multiply(%657, %658) /* ty=Tensor[(3, 2, 2), float32] */;
  %665 = %663.3;
  (%664, %665, meta[relay.Constant][39] /* ty=Tensor[(54, 10), float32] */, %var_1788)
}

def @func_6896() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
  @func_6894() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */
}

def @func_11528(%var_11526: Tensor[(540), float32]) -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(27), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) {
  @func_11525(%var_11526) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(27), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) */
}

def @func_8430() -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(540), float32]) {
  %672 = fn () -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(540), float32]) {
    %666 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
    %667 = @func_2551() /* ty=(Tensor[(15, 10, 11), float32],) */;
    %668 = @func_4802() /* ty=(Tensor[(540), float32],) */;
    %669 = %666.0;
    %670 = %667.0;
    %671 = %668.0;
    (%669, %670, %671)
  };
  %672() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(540), float32]) */
}

def @func_11859(%var_11827: Tensor[(8, 7, 9), float64]) -> (Tensor[(3, 2, 2), bool], Tensor[(8, 7, 9), float32]) {
  %673 = @func_8648() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), bool]) */;
  %674 = cast(%var_11827, dtype="float64") /* ty=Tensor[(8, 7, 9), float64] */;
  %675 = sinh(%674) /* ty=Tensor[(8, 7, 9), float64] */;
  %676 = cast(%675, dtype="float32") /* ty=Tensor[(8, 7, 9), float32] */;
  %677 = %673.0;
  %678 = exp(%676) /* ty=Tensor[(8, 7, 9), float32] */;
  (%677, %678)
}

def @func_10669() -> (Tensor[(3, 2, 2), float32], Tensor[(12, 2, 9), float32], Tensor[(216), float32]) {
  @func_10667() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(12, 2, 9), float32], Tensor[(216), float32]) */
}

def @func_1332(%var_1330: Tensor[(540), float32], %var_1331: Tensor[(3, 9), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(490, 1), float32], Tensor[(540), float32], Tensor[(3, 9), float64]) {
  %691 = fn (%var_1311: Tensor[(540), float32], %var_1312: Tensor[(3, 9), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(490, 1), float32], Tensor[(540), float32], Tensor[(3, 9), float64]) {
    %679 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %680 = %679.0;
    %681 = cast(%680, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
    %682 = cast(meta[relay.Constant][40] /* ty=Tensor[(490, 1), float32] */, dtype="float32") /* ty=Tensor[(490, 1), float32] */;
    %683 = cast(%var_1311, dtype="float32") /* ty=Tensor[(540), float32] */;
    %684 = cast(%var_1312, dtype="float64") /* ty=Tensor[(3, 9), float64] */;
    %685 = reshape(%682, newshape=[7, 7, 10]) /* ty=Tensor[(7, 7, 10), float32] */;
    %686 = reshape(%683, newshape=[540]) /* ty=Tensor[(540), float32] */;
    %687 = reshape(%684, newshape=[27]) /* ty=Tensor[(27), float64] */;
    %688 = @func_1240(%685, %686, %687) /* ty=(Tensor[(7, 7, 10), float32], Tensor[(27), float64], Tensor[(540), float32], Tensor[(27), float64]) */;
    %689 = tan(%681) /* ty=Tensor[(3, 2, 2), float32] */;
    %690 = %688.3;
    (%689, %690, meta[relay.Constant][40] /* ty=Tensor[(490, 1), float32] */, %var_1311, %var_1312)
  };
  %691(%var_1330, %var_1331) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(490, 1), float32], Tensor[(540), float32], Tensor[(3, 9), float64]) */
}

def @func_9857() -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) {
  %697 = fn () -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) {
    %692 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %693 = @func_8104() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %694 = @func_6436() /* ty=Tensor[(3, 2, 2), float32] */;
    %695 = %692.0;
    %696 = %693.0;
    (%694, %695, %696)
  };
  %697() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) */
}

def @func_4476() -> Tensor[(15, 10, 11), float32] {
  @func_4474() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_3483() -> Tensor[(15, 10, 11), float32] {
  @func_3481() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_8694() -> Tensor[(15, 10, 11), float32] {
  %699 = fn () -> Tensor[(15, 10, 11), float32] {
    %698 = @func_6740() /* ty=(Tensor[(15, 10, 11), float32],) */;
    %698.0
  };
  %699() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_4129() -> Tensor[(15, 10, 11), float32] {
  @func_3744() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_8106() -> (Tensor[(3, 2, 2), float32],) {
  @func_8104() /* ty=(Tensor[(3, 2, 2), float32],) */
}

def @func_12247() -> Tensor[(3, 2, 2), float32] {
  %700 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %700.0
}

def @func_10441() -> Tensor[(15, 10, 11), float32] {
  %701 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %701.0
}

def @func_1271(%var_1265: Tensor[(270, 2), float32]) -> (Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(270, 2), float32], Tensor[(135), float64]) {
  %702 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %703 = cast(%var_1265, dtype="float32") /* ty=Tensor[(270, 2), float32] */;
  %704 = cast(%var_1265, dtype="float32") /* ty=Tensor[(270, 2), float32] */;
  %705 = cast(meta[relay.Constant][41] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %706 = reshape(%703, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float32] */;
  %707 = reshape(%704, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float32] */;
  %708 = reshape(%705, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %709 = @func_665(%706, %707, %708) /* ty=(Tensor[(6, 9, 10), bool], Tensor[(9, 3, 5), float64], Tensor[(27, 1), float64], Tensor[(135), float64], Tensor[(6, 9, 10), float32]) */;
  %710 = %702.0;
  %711 = %709.3;
  (%710, %711, %var_1265, meta[relay.Constant][41] /* ty=Tensor[(135), float64] */)
}

def @func_7502() -> (Tensor[(15, 10, 11), float32],) {
  @func_7500() /* ty=(Tensor[(15, 10, 11), float32],) */
}

def @func_8104() -> (Tensor[(3, 2, 2), float32],) {
  %712 = @func_3602() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
  %713 = %712.0;
  (%713,)
}

def @func_10287() -> (Tensor[(15, 10, 11), float64], Tensor[(540), float32]) {
  @func_10285() /* ty=(Tensor[(15, 10, 11), float64], Tensor[(540), float32]) */
}

def @func_7128() -> (Tensor[(540), float32], Tensor[(3, 2, 2), float32]) {
  %717 = fn () -> (Tensor[(540), float32], Tensor[(3, 2, 2), float32]) {
    %714 = @func_4802() /* ty=(Tensor[(540), float32],) */;
    %715 = %714.0;
    %716 = @func_6858() /* ty=Tensor[(3, 2, 2), float32] */;
    (%715, %716)
  };
  %717() /* ty=(Tensor[(540), float32], Tensor[(3, 2, 2), float32]) */
}

def @func_5660(%var_5658: Tensor[(12, 2, 9), float32]) -> (Tensor[(12, 2, 9), float32], Tensor[(15, 10, 11), float32]) {
  @func_5657(%var_5658) /* ty=(Tensor[(12, 2, 9), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_7996(%var_7979: Tensor[(490), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(3, 180), float32], Tensor[(15, 10, 11), float32]) {
  %718 = @func_6740() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %719 = cast(meta[relay.Constant][42] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %720 = cast(%var_7979, dtype="float32") /* ty=Tensor[(490), float32] */;
  %721 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 180), float32] */, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %722 = reshape(%719, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %723 = reshape(%720, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %724 = reshape(%721, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %725 = @func_5195(%722, %723, %724) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(8, 5, 8), float32], Tensor[(40, 8), float32], Tensor[(27), float64], Tensor[(540), float32]) */;
  %726 = %718.0;
  %727 = %725.1;
  %728 = @func_4820() /* ty=Tensor[(15, 10, 11), float32] */;
  (%726, %727, meta[relay.Constant][42] /* ty=Tensor[(1040), float64] */, %var_7979, meta[relay.Constant][43] /* ty=Tensor[(3, 180), float32] */, %728)
}

def @func_1362(%var_1359: Tensor[(10, 13, 8), float64], %var_1360: Tensor[(490), float32], %var_1361: Tensor[(540), float32]) -> (Tensor[(10, 13, 8), float64], Tensor[(7, 7, 10), float32], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(270, 2), float32]) {
  @func_1357(%var_1359, %var_1360, %var_1361) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(7, 7, 10), float32], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(270, 2), float32]) */
}

def @func_4930() -> Tensor[(3, 2, 2), float32] {
  @func_4928() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_5037() -> (Tensor[(3, 2, 2), float32], Tensor[(540), float32]) {
  %729 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %730 = %729.0;
  %731 = @func_3311() /* ty=Tensor[(540), float32] */;
  (%730, %731)
}

def @func_11355(%var_11351: Tensor[(1650), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(1650), bool], Tensor[(1650), float64]) {
  %732 = @func_4567() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %733 = cast(%var_11351, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %734 = reshape(%733, newshape=[1650]) /* ty=Tensor[(1650), float64] */;
  %735 = @func_8910(%734) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(3, 2, 2), float32], Tensor[(1650), bool], Tensor[(1650), float32]) */;
  %736 = %732.0;
  %737 = %735.3;
  (%736, %737, %var_11351)
}

def @func_1475(%var_1474: Tensor[(540), float32]) -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) {
  %744 = fn (%var_1464: Tensor[(540), float32]) -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) {
    %738 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %739 = cast(%var_1464, dtype="float32") /* ty=Tensor[(540), float32] */;
    %740 = reshape(%739, newshape=[270, 2]) /* ty=Tensor[(270, 2), float32] */;
    %741 = @func_1271(%740) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(270, 2), float32], Tensor[(135), float64]) */;
    %742 = %738.0;
    %743 = %741.0;
    (%742, %743, %var_1464)
  };
  %744(%var_1474) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */
}

def @func_9645() -> (Tensor[(3, 2, 2), float32], Tensor[(5, 13, 5), float32], Tensor[(325), bool]) {
  %752 = fn () -> (Tensor[(3, 2, 2), float32], Tensor[(5, 13, 5), float32], Tensor[(325), bool]) {
    %745 = @func_7682() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(15, 10, 11), float32]) */;
    %746 = cast(meta[relay.Constant][44] /* ty=Tensor[(325), bool] */, dtype="bool") /* ty=Tensor[(325), bool] */;
    %747 = cast(meta[relay.Constant][44] /* ty=Tensor[(325), bool] */, dtype="bool") /* ty=Tensor[(325), bool] */;
    %748 = reshape(%746, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), bool] */;
    %749 = reshape(%747, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), bool] */;
    %750 = %745.0;
    %751 = @func_7649(%748, %749) /* ty=Tensor[(5, 13, 5), float32] */;
    (%750, %751, meta[relay.Constant][44] /* ty=Tensor[(325), bool] */)
  };
  %752() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(5, 13, 5), float32], Tensor[(325), bool]) */
}

def @func_9125() -> (Tensor[(15, 10, 11), float32], Tensor[(540), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32]) {
  %760 = fn () -> (Tensor[(15, 10, 11), float32], Tensor[(540), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32]) {
    %753 = @func_3972() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) */;
    %754 = cast(meta[relay.Constant][45] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
    %755 = reshape(%754, newshape=[540]) /* ty=Tensor[(540), float32] */;
    %756 = @func_8978(%755) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */;
    %757 = %753.2;
    %758 = %756.2;
    %759 = @func_4043() /* ty=Tensor[(3, 2, 2), float32] */;
    (%757, %758, meta[relay.Constant][45] /* ty=Tensor[(540), float32] */, %759)
  };
  %760() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(540), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32]) */
}

def @func_10356() -> Tensor[(15, 10, 11), float32] {
  %761 = @func_4748() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %761.1
}

def @func_4474() -> Tensor[(15, 10, 11), float32] {
  @func_3744() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_7951() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), bool], Tensor[(15, 10, 11), float32], Tensor[(27), float64]) {
  @func_7949() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), bool], Tensor[(15, 10, 11), float32], Tensor[(27), float64]) */
}

def @func_2255() -> (Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(27), float64], Tensor[(3, 2, 2), float32]) {
  %772 = fn () -> (Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(27), float64], Tensor[(3, 2, 2), float32]) {
    %762 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %763 = cast(meta[relay.Constant][46] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
    %764 = cast(meta[relay.Constant][46] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
    %765 = reshape(%763, newshape=[27]) /* ty=Tensor[(27), float64] */;
    %766 = reshape(%764, newshape=[27]) /* ty=Tensor[(27), float64] */;
    %767 = @func_1584(%765, %766) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(540), float32], Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(9, 3, 5), float64], Tensor[(27), bool]) */;
    %768 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %769 = %762.0;
    %770 = %767.1;
    %771 = %768.0;
    (%769, %770, meta[relay.Constant][46] /* ty=Tensor[(27), float64] */, %771)
  };
  %772() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(27), float64], Tensor[(3, 2, 2), float32]) */
}

def @func_2427() -> (Tensor[(3, 2, 2), float32],) {
  %775 = fn () -> (Tensor[(3, 2, 2), float32],) {
    %773 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
    %774 = %773.4;
    (%774,)
  };
  %775() /* ty=(Tensor[(3, 2, 2), float32],) */
}

def @func_9549() -> (Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32]) {
  %776 = @func_6399() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */;
  %777 = @func_2601() /* ty=Tensor[(3, 2, 2), bool] */;
  %778 = %776.1;
  (%777, %778)
}

def @func_8649() -> (Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), bool]) {
  %786 = fn () -> (Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), bool]) {
    %779 = @func_4200() /* ty=Tensor[(3, 2, 2), float32] */;
    %780 = cast(meta[relay.Constant][47] /* ty=Tensor[(3, 2, 2), float32] */, dtype="bool") /* ty=Tensor[(3, 2, 2), bool] */;
    %781 = shape_of(%779, dtype="int32") /* ty=Tensor[(3), int32] */;
    %782 = cast(%779, dtype="bool") /* ty=Tensor[(3, 2, 2), bool] */;
    %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %784 = greater(%782, %783) /* ty=Tensor[(3, 2, 2), bool] */;
    %785 = @func_2601() /* ty=Tensor[(3, 2, 2), bool] */;
    (%784, %785)
  };
  %786() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), bool]) */
}

def @func_5612(%var_5574: Tensor[(3, 180), float32], %var_5586: Tensor[(3, 180), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 180), float32]) {
  %787 = @func_4650() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %788 = cast(%var_5574, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %789 = reshape(%788, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %790 = @func_1473(%789) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */;
  %791 = cast(%var_5586, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %792 = shape_of(%var_5574, dtype="int32") /* ty=Tensor[(2), int32] */;
  %793 = cast(%var_5574, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %795 = %787.0;
  %796 = %790.1;
  %797 = divide(%793, %794) /* ty=Tensor[(3, 180), float32] */;
  (%795, %796, %797)
}

def @func_669(%var_666: Tensor[(6, 9, 10), float32], %var_667: Tensor[(6, 9, 10), float32], %var_668: Tensor[(135), float64]) -> (Tensor[(6, 9, 10), bool], Tensor[(9, 3, 5), float64], Tensor[(27, 1), float64], Tensor[(135), float64], Tensor[(6, 9, 10), float32]) {
  %818 = fn (%var_620: Tensor[(6, 9, 10), float32], %var_637: Tensor[(6, 9, 10), float32], %var_653: Tensor[(135), float64]) -> (Tensor[(6, 9, 10), bool], Tensor[(9, 3, 5), float64], Tensor[(27, 1), float64], Tensor[(135), float64], Tensor[(6, 9, 10), float32]) {
    %798 = cast(%var_620, dtype="float32") /* ty=Tensor[(6, 9, 10), float32] */;
    %799 = sqrt(%798) /* ty=Tensor[(6, 9, 10), float32] */;
    %800 = cast(%var_620, dtype="bool") /* ty=Tensor[(6, 9, 10), bool] */;
    %801 = shape_of(%799, dtype="int32") /* ty=Tensor[(3), int32] */;
    %802 = cast(%799, dtype="bool") /* ty=Tensor[(6, 9, 10), bool] */;
    %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %804 = cast(meta[relay.Constant][48] /* ty=Tensor[(27, 1), float64] */, dtype="float64") /* ty=Tensor[(27, 1), float64] */;
    %805 = cast(%var_653, dtype="float64") /* ty=Tensor[(135), float64] */;
    %806 = reshape(%804, newshape=[9, 3, 1]) /* ty=Tensor[(9, 3, 1), float64] */;
    %807 = reshape(%805, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), float64] */;
    %808 = @func_198(%806, %807) /* ty=(Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64]) */;
    %809 = cast(%var_637, dtype="bool") /* ty=Tensor[(6, 9, 10), bool] */;
    %810 = shape_of(%799, dtype="int32") /* ty=Tensor[(3), int32] */;
    %811 = cast(%799, dtype="bool") /* ty=Tensor[(6, 9, 10), bool] */;
    %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %813 = greater(%811, %812) /* ty=Tensor[(6, 9, 10), bool] */;
    %814 = cast(%813, dtype="float32") /* ty=Tensor[(6, 9, 10), float32] */;
    %815 = logical_or(%802, %803) /* ty=Tensor[(6, 9, 10), bool] */;
    %816 = %808.1;
    %817 = asin(%814) /* ty=Tensor[(6, 9, 10), float32] */;
    (%815, %816, meta[relay.Constant][48] /* ty=Tensor[(27, 1), float64] */, %var_653, %817)
  };
  %818(%var_666, %var_667, %var_668) /* ty=(Tensor[(6, 9, 10), bool], Tensor[(9, 3, 5), float64], Tensor[(27, 1), float64], Tensor[(135), float64], Tensor[(6, 9, 10), float32]) */
}

def @func_5935() -> (Tensor[(3, 2, 2), bool],) {
  %819 = @func_2601() /* ty=Tensor[(3, 2, 2), bool] */;
  (%819,)
}

def @func_11170(%var_11125: Tensor[(1, 390), int64]) -> (Tensor[(270, 2), bool], Tensor[(2, 15, 13), float32], Tensor[(7, 390), uint8]) {
  %820 = @func_10860() /* ty=(Tensor[(270, 2), bool], Tensor[(15, 10, 11), float32]) */;
  %821 = cast(%var_11125, dtype="int64") /* ty=Tensor[(1, 390), int64] */;
  %822 = cast(%var_11125, dtype="int64") /* ty=Tensor[(1, 390), int64] */;
  %823 = reshape(%821, newshape=[2, 15, 13]) /* ty=Tensor[(2, 15, 13), int64] */;
  %824 = reshape(%822, newshape=[2, 15, 13]) /* ty=Tensor[(2, 15, 13), int64] */;
  %825 = @func_3769(%823, %824) /* ty=(Tensor[(2, 15, 13), int64], Tensor[(2, 15, 13), bool]) */;
  %826 = %825.1;
  %827 = cast(%826, dtype="float32") /* ty=Tensor[(2, 15, 13), float32] */;
  %828 = cast(%var_11125, dtype="float32") /* ty=Tensor[(1, 390), float32] */;
  %829 = atan(%828) /* ty=Tensor[(1, 390), float32] */;
  %830 = cast(%829, dtype="float64") /* ty=Tensor[(1, 390), float64] */;
  %831 = sqrt(%830) /* ty=Tensor[(1, 390), float64] */;
  %832 = cast(%831, dtype="uint8") /* ty=Tensor[(1, 390), uint8] */;
  %833 = cast(meta[relay.Constant][49] /* ty=Tensor[(7, 390), float64] */, dtype="uint8") /* ty=Tensor[(7, 390), uint8] */;
  %834 = %820.0;
  %835 = rsqrt(%827) /* ty=Tensor[(2, 15, 13), float32] */;
  %836 = bitwise_xor(%832, %833) /* ty=Tensor[(7, 390), uint8] */;
  (%834, %835, %836)
}

def @func_10559() -> (Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(135), float64]) {
  @func_10557() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(135), float64]) */
}

def @func_2761(%var_2760: Tensor[(27), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(135), float64], Tensor[(9, 3, 5), float32]) {
  %847 = fn (%var_2738: Tensor[(27), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(135), float64], Tensor[(9, 3, 5), float32]) {
    %837 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
    %838 = cast(%var_2738, dtype="float64") /* ty=Tensor[(27), float64] */;
    %839 = cast(meta[relay.Constant][50] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
    %840 = reshape(%838, newshape=[9, 3, 1]) /* ty=Tensor[(9, 3, 1), float64] */;
    %841 = reshape(%839, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), float64] */;
    %842 = @func_198(%840, %841) /* ty=(Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64]) */;
    %843 = %842.2;
    %844 = cast(%843, dtype="float32") /* ty=Tensor[(9, 3, 5), float32] */;
    %845 = %837.4;
    %846 = asinh(%844) /* ty=Tensor[(9, 3, 5), float32] */;
    (%845, %var_2738, meta[relay.Constant][50] /* ty=Tensor[(135), float64] */, %846)
  };
  %847(%var_2760) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(135), float64], Tensor[(9, 3, 5), float32]) */
}

def @func_3569(%var_3565: Tensor[(135), float64]) -> (Tensor[(4, 13, 10), float32], Tensor[(54, 10), float32], Tensor[(27), float64], Tensor[(6, 9, 10), bool], Tensor[(135), float64], Tensor[(15, 10, 11), float32]) {
  %848 = cast(meta[relay.Constant][51] /* ty=Tensor[(4, 13, 10), float32] */, dtype="float32") /* ty=Tensor[(4, 13, 10), float32] */;
  %849 = cast(meta[relay.Constant][52] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %850 = reshape(%849, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %851 = @func_1791(%850) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(54, 10), float32], Tensor[(27), float64]) */;
  %852 = %851.2;
  %853 = cast(%852, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %854 = cast(%852, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %855 = cast(%var_3565, dtype="float64") /* ty=Tensor[(135), float64] */;
  %856 = reshape(%853, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float32] */;
  %857 = reshape(%854, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float32] */;
  %858 = reshape(%855, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %859 = @func_665(%856, %857, %858) /* ty=(Tensor[(6, 9, 10), bool], Tensor[(9, 3, 5), float64], Tensor[(27, 1), float64], Tensor[(135), float64], Tensor[(6, 9, 10), float32]) */;
  %860 = log(%848) /* ty=Tensor[(4, 13, 10), float32] */;
  %861 = %859.0;
  %862 = @func_2700() /* ty=Tensor[(15, 10, 11), float32] */;
  (%860, %852, meta[relay.Constant][52] /* ty=Tensor[(27), float64] */, %861, %var_3565, %862)
}

def @func_7318() -> (Tensor[(4, 14, 10), uint8], Tensor[(1040, 1), float64]) {
  %867 = fn () -> (Tensor[(4, 14, 10), uint8], Tensor[(1040, 1), float64]) {
    %863 = @func_6347() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(4, 14, 10), uint8], Tensor[(3, 2, 2), float32], Tensor[(8, 70), bool]) */;
    %864 = @func_2652() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(10, 13, 8), float64], Tensor[(1040, 1), float64], Tensor[(490), float32], Tensor[(540), float32]) */;
    %865 = %863.2;
    %866 = %864.2;
    (%865, %866)
  };
  %867() /* ty=(Tensor[(4, 14, 10), uint8], Tensor[(1040, 1), float64]) */
}

def @func_4750() -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
  @func_4748() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_8293() -> Tensor[(15, 10, 11), float32] {
  @func_8291() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_6437() -> Tensor[(3, 2, 2), float32] {
  %869 = fn () -> Tensor[(3, 2, 2), float32] {
    %868 = @func_5037() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */;
    %868.0
  };
  %869() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_956(%var_954: Tensor[(15, 6, 6), float32], %var_955: Tensor[(27), float64]) -> (Tensor[(15, 6, 6), float32], Tensor[(9, 3, 5), float64], Tensor[(27), float64], Tensor[(135), float64], Tensor[(9, 3, 5), float64]) {
  @func_952(%var_954, %var_955) /* ty=(Tensor[(15, 6, 6), float32], Tensor[(9, 3, 5), float64], Tensor[(27), float64], Tensor[(135), float64], Tensor[(9, 3, 5), float64]) */
}

def @func_1869() -> (Tensor[(3, 2, 2), float32],) {
  %872 = fn () -> (Tensor[(3, 2, 2), float32],) {
    %870 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %871 = %870.0;
    (%871,)
  };
  %872() /* ty=(Tensor[(3, 2, 2), float32],) */
}

def @func_7682() -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(15, 10, 11), float32]) {
  %873 = @func_2498() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) */;
  %874 = cast(meta[relay.Constant][53] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %875 = reshape(%874, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %876 = @func_6521(%875) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(162), float64], Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(27), float32], Tensor[(3, 180), uint16]) */;
  %877 = @func_2551() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %878 = %873.0;
  %879 = %876.3;
  %880 = %877.0;
  (%878, %879, meta[relay.Constant][53] /* ty=Tensor[(27), float64] */, %880)
}

def @func_7012() -> (Tensor[(8, 70), float32], Tensor[(8, 70), int64]) {
  %895 = fn () -> (Tensor[(8, 70), float32], Tensor[(8, 70), int64]) {
    %881 = @func_6347() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(4, 14, 10), uint8], Tensor[(3, 2, 2), float32], Tensor[(8, 70), bool]) */;
    %882 = %881.4;
    %883 = cast(%882, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
    %884 = atan(%883) /* ty=Tensor[(8, 70), float32] */;
    %885 = cast(%882, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
    %886 = shape_of(%884, dtype="int32") /* ty=Tensor[(2), int32] */;
    %887 = cast(%884, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
    %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %889 = cast(meta[relay.Constant][54] /* ty=Tensor[(8, 70), float32] */, dtype="int64") /* ty=Tensor[(8, 70), int64] */;
    %890 = shape_of(%884, dtype="int32") /* ty=Tensor[(2), int32] */;
    %891 = cast(%884, dtype="int64") /* ty=Tensor[(8, 70), int64] */;
    %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %893 = divide(%887, %888) /* ty=Tensor[(8, 70), float32] */;
    %894 = left_shift(%891, %892) /* ty=Tensor[(8, 70), int64] */;
    (%893, %894)
  };
  %895() /* ty=(Tensor[(8, 70), float32], Tensor[(8, 70), int64]) */
}

def @func_10005() -> Tensor[(3, 2, 2), float32] {
  %896 = fn () -> Tensor[(3, 2, 2), float32] {
    @func_5378() /* ty=Tensor[(3, 2, 2), float32] */
  };
  %896() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_2121(%var_2119: Tensor[(15, 10, 11), float32], %var_2120: Tensor[(15, 10, 11), float32]) -> Tensor[(15, 10, 11), float32] {
  @func_2117(%var_2119, %var_2120) /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_3773(%var_3771: Tensor[(2, 15, 13), int64], %var_3772: Tensor[(2, 15, 13), int64]) -> (Tensor[(2, 15, 13), int64], Tensor[(2, 15, 13), bool]) {
  @func_3769(%var_3771, %var_3772) /* ty=(Tensor[(2, 15, 13), int64], Tensor[(2, 15, 13), bool]) */
}

def @func_3769(%var_3758: Tensor[(2, 15, 13), int64], %var_3759: Tensor[(2, 15, 13), int64]) -> (Tensor[(2, 15, 13), int64], Tensor[(2, 15, 13), bool]) {
  %897 = cast(%var_3759, dtype="int64") /* ty=Tensor[(2, 15, 13), int64] */;
  %898 = shape_of(%var_3758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %899 = cast(%var_3758, dtype="int64") /* ty=Tensor[(2, 15, 13), int64] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %901 = cast(%var_3759, dtype="bool") /* ty=Tensor[(2, 15, 13), bool] */;
  %902 = shape_of(%var_3758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%var_3758, dtype="bool") /* ty=Tensor[(2, 15, 13), bool] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %905 = minimum(%899, %900) /* ty=Tensor[(2, 15, 13), int64] */;
  %906 = not_equal(%903, %904) /* ty=Tensor[(2, 15, 13), bool] */;
  (%905, %906)
}

def @func_7949() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), bool], Tensor[(15, 10, 11), float32], Tensor[(27), float64]) {
  %907 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %908 = @func_4528() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
  %909 = @func_7500() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %910 = @func_2254() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(27), float64], Tensor[(3, 2, 2), float32]) */;
  %911 = %907.0;
  %912 = %908.0;
  %913 = %909.0;
  %914 = %910.2;
  (%911, %912, %913, %914)
}

def @func_2963(%var_2962: Tensor[(540), float32]) -> (Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) {
  %920 = fn (%var_2954: Tensor[(540), float32]) -> (Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) {
    %915 = cast(%var_2954, dtype="float32") /* ty=Tensor[(540), float32] */;
    %916 = reshape(%915, newshape=[540]) /* ty=Tensor[(540), float32] */;
    %917 = @func_1473(%916) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */;
    %918 = @func_2601() /* ty=Tensor[(3, 2, 2), bool] */;
    %919 = %917.0;
    (%918, %919, %var_2954)
  };
  %920(%var_2962) /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */
}

def @func_11381() -> (Tensor[(3, 2, 2), float32],) {
  @func_11379() /* ty=(Tensor[(3, 2, 2), float32],) */
}

def @func_9202() -> (Tensor[(15, 10, 11), float32], Tensor[(16, 6, 4), float32], Tensor[(384), float64]) {
  %921 = cast(meta[relay.Constant][55] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %922 = reshape(%921, newshape=[16, 6, 4]) /* ty=Tensor[(16, 6, 4), float64] */;
  %923 = @func_8801(%922) /* ty=(Tensor[(16, 6, 4), float64], Tensor[(16, 6, 4), float32], Tensor[(15, 10, 11), float32]) */;
  %924 = @func_4820() /* ty=Tensor[(15, 10, 11), float32] */;
  %925 = %923.1;
  (%924, %925, meta[relay.Constant][55] /* ty=Tensor[(384), float64] */)
}

def @func_6740() -> (Tensor[(15, 10, 11), float32],) {
  %926 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %927 = %926.0;
  (%927,)
}

def @func_10188() -> Tensor[(15, 10, 11), float32] {
  %929 = fn () -> Tensor[(15, 10, 11), float32] {
    %928 = @func_6740() /* ty=(Tensor[(15, 10, 11), float32],) */;
    %928.0
  };
  %929() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_4429() -> (Tensor[(14, 8, 10), float64], Tensor[(14, 8, 10), float64]) {
  @func_4427() /* ty=(Tensor[(14, 8, 10), float64], Tensor[(14, 8, 10), float64]) */
}

def @func_4748() -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
  %930 = @func_3143() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %931 = %930.0;
  %932 = @func_3481() /* ty=Tensor[(15, 10, 11), float32] */;
  (%931, %932)
}

def @func_11173(%var_11171: Tensor[(1, 390), int64]) -> (Tensor[(270, 2), bool], Tensor[(2, 15, 13), float32], Tensor[(7, 390), uint8]) {
  @func_11170(%var_11171) /* ty=(Tensor[(270, 2), bool], Tensor[(2, 15, 13), float32], Tensor[(7, 390), uint8]) */
}

def @func_4631(%var_4627: Tensor[(490), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(1040), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) {
  %933 = @func_2700() /* ty=Tensor[(15, 10, 11), float32] */;
  %934 = cast(%933, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %935 = cast(meta[relay.Constant][56] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %936 = cast(%var_4627, dtype="float32") /* ty=Tensor[(490), float32] */;
  %937 = cast(meta[relay.Constant][57] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %938 = reshape(%935, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %939 = reshape(%936, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %940 = reshape(%937, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %941 = @func_1985(%938, %939, %940) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) */;
  %942 = log10(%934) /* ty=Tensor[(15, 10, 11), float32] */;
  %943 = %941.2;
  (%942, %943, meta[relay.Constant][56] /* ty=Tensor[(1040), float64] */, %var_4627, meta[relay.Constant][57] /* ty=Tensor[(540), float32] */)
}

def @func_11401() -> Tensor[(3, 2, 2), float32] {
  %945 = fn () -> Tensor[(3, 2, 2), float32] {
    %944 = @func_2439() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %944.0
  };
  %945() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_2500() -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) {
  @func_2498() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32]) */
}

def @func_3572(%var_3570: Tensor[(135), float64]) -> (Tensor[(4, 13, 10), float32], Tensor[(54, 10), float32], Tensor[(27), float64], Tensor[(6, 9, 10), bool], Tensor[(135), float64], Tensor[(15, 10, 11), float32]) {
  @func_3569(%var_3570) /* ty=(Tensor[(4, 13, 10), float32], Tensor[(54, 10), float32], Tensor[(27), float64], Tensor[(6, 9, 10), bool], Tensor[(135), float64], Tensor[(15, 10, 11), float32]) */
}

def @func_7653(%var_7651: Tensor[(5, 13, 5), bool], %var_7652: Tensor[(5, 13, 5), bool]) -> Tensor[(5, 13, 5), float32] {
  @func_7649(%var_7651, %var_7652) /* ty=Tensor[(5, 13, 5), float32] */
}

def @func_7728() -> Tensor[(15, 10, 11), float32] {
  @func_7726() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_2117(%var_2104: Tensor[(15, 10, 11), float32], %var_2105: Tensor[(15, 10, 11), float32]) -> Tensor[(15, 10, 11), float32] {
  %946 = cast(%var_2105, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %947 = shape_of(%var_2104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %948 = cast(%var_2104, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %949 = dyn.reshape(%946, %947, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%948, %949) /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_1724(%var_1723: Tensor[(3, 2, 2), float32]) -> Tensor[(3, 2, 2), bool] {
  %956 = fn (%var_1680: Tensor[(3, 2, 2), float32]) -> Tensor[(3, 2, 2), bool] {
    %950 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %951 = %950.0;
    %952 = cast(%var_1680, dtype="bool") /* ty=Tensor[(3, 2, 2), bool] */;
    %953 = shape_of(%951, dtype="int32") /* ty=Tensor[(3), int32] */;
    %954 = cast(%951, dtype="bool") /* ty=Tensor[(3, 2, 2), bool] */;
    %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%954, %955) /* ty=Tensor[(3, 2, 2), bool] */
  };
  %956(%var_1723) /* ty=Tensor[(3, 2, 2), bool] */
}

def @func_11862(%var_11860: Tensor[(8, 7, 9), float64]) -> (Tensor[(3, 2, 2), bool], Tensor[(8, 7, 9), float32]) {
  @func_11859(%var_11860) /* ty=(Tensor[(3, 2, 2), bool], Tensor[(8, 7, 9), float32]) */
}

def @func_5657(%var_5629: Tensor[(12, 2, 9), float32]) -> (Tensor[(12, 2, 9), float32], Tensor[(15, 10, 11), float32]) {
  %957 = cast(%var_5629, dtype="float32") /* ty=Tensor[(12, 2, 9), float32] */;
  %958 = atanh(%957) /* ty=Tensor[(12, 2, 9), float32] */;
  %959 = @func_4820() /* ty=Tensor[(15, 10, 11), float32] */;
  (%958, %959)
}

def @func_1584(%var_1555: Tensor[(27), float64], %var_1570: Tensor[(27), float64]) -> (Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(540), float32], Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(9, 3, 5), float64], Tensor[(27), bool]) {
  %960 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %961 = cast(meta[relay.Constant][58] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %962 = reshape(%961, newshape=[270, 2]) /* ty=Tensor[(270, 2), float32] */;
  %963 = @func_1271(%962) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(270, 2), float32], Tensor[(135), float64]) */;
  %964 = cast(meta[relay.Constant][59] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %965 = cast(meta[relay.Constant][60] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
  %966 = cast(meta[relay.Constant][58] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %967 = reshape(%964, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %968 = reshape(%965, newshape=[490]) /* ty=Tensor[(490), float32] */;
  %969 = reshape(%966, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %970 = @func_1357(%967, %968, %969) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(7, 7, 10), float32], Tensor[(490), float32], Tensor[(540), float32], Tensor[(27), float64], Tensor[(270, 2), float32]) */;
  %971 = cast(%var_1555, dtype="float64") /* ty=Tensor[(27), float64] */;
  %972 = %963.3;
  %973 = cast(%972, dtype="float64") /* ty=Tensor[(135), float64] */;
  %974 = reshape(%971, newshape=[9, 3, 1]) /* ty=Tensor[(9, 3, 1), float64] */;
  %975 = reshape(%973, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), float64] */;
  %976 = @func_198(%974, %975) /* ty=(Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64], Tensor[(9, 3, 5), float64]) */;
  %977 = cast(%var_1570, dtype="bool") /* ty=Tensor[(27), bool] */;
  %978 = shape_of(%var_1555, dtype="int32") /* ty=Tensor[(1), int32] */;
  %979 = cast(%var_1555, dtype="bool") /* ty=Tensor[(27), bool] */;
  %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?), bool] */;
  %981 = %960.0;
  %982 = %970.0;
  %983 = %976.2;
  %984 = greater(%979, %980) /* ty=Tensor[(27), bool] */;
  (%981, %972, meta[relay.Constant][58] /* ty=Tensor[(540), float32] */, %982, meta[relay.Constant][59] /* ty=Tensor[(1040), float64] */, meta[relay.Constant][60] /* ty=Tensor[(490), float32] */, %983, %984)
}

def @func_10167() -> (Tensor[(27), int32],) {
  @func_10165() /* ty=(Tensor[(27), int32],) */
}

def @func_9649() -> Tensor[(3, 2, 2), float32] {
  %986 = fn () -> Tensor[(3, 2, 2), float32] {
    %985 = @func_8398() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %985.0
  };
  %986() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_2406() -> (Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) {
  %1018 = fn () -> (Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) {
    %987 = cast(meta[relay.Constant][61] /* ty=Tensor[(490), float32] */, dtype="float32") /* ty=Tensor[(490), float32] */;
    %988 = cast(meta[relay.Constant][62] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
    %989 = @func_2254() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(27), float64], Tensor[(3, 2, 2), float32]) */;
    %990 = %989.2;
    %991 = cast(%990, dtype="float64") /* ty=Tensor[(27), float64] */;
    %992 = reshape(%987, newshape=[7, 7, 10]) /* ty=Tensor[(7, 7, 10), float32] */;
    %993 = reshape(%988, newshape=[540]) /* ty=Tensor[(540), float32] */;
    %994 = reshape(%991, newshape=[27]) /* ty=Tensor[(27), float64] */;
    %995 = @func_1240(%992, %993, %994) /* ty=(Tensor[(7, 7, 10), float32], Tensor[(27), float64], Tensor[(540), float32], Tensor[(27), float64]) */;
    %996 = %995.1;
    %997 = cast(%996, dtype="float64") /* ty=Tensor[(27), float64] */;
    %998 = reshape(%997, newshape=[1, 27]) /* ty=Tensor[(1, 27), float64] */;
    %999 = @func_1936(%998) /* ty=(Tensor[(14, 15, 2), float64], Tensor[(3, 2, 2), float32], Tensor[(1, 27), float64], Tensor[(3, 2, 2), bool]) */;
    %1000 = cast(%996, dtype="bool") /* ty=Tensor[(27), bool] */;
    %1001 = shape_of(%990, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1002 = cast(%990, dtype="bool") /* ty=Tensor[(27), bool] */;
    %1003 = dyn.reshape(%1000, %1001, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1004 = less(%1002, %1003) /* ty=Tensor[(27), bool] */;
    %1005 = cast(%990, dtype="int32") /* ty=Tensor[(27), int32] */;
    %1006 = shape_of(%1004, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1007 = cast(%1004, dtype="int32") /* ty=Tensor[(27), int32] */;
    %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?), int32] */;
    %1009 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %1010 = cast(meta[relay.Constant][63] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
    %1011 = cast(meta[relay.Constant][63] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
    %1012 = reshape(%1010, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
    %1013 = reshape(%1011, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
    %1014 = %999.1;
    %1015 = right_shift(%1007, %1008) /* ty=Tensor[(27), int32] */;
    %1016 = %1009.0;
    %1017 = @func_2117(%1012, %1013) /* ty=Tensor[(15, 10, 11), float32] */;
    (meta[relay.Constant][61] /* ty=Tensor[(490), float32] */, meta[relay.Constant][62] /* ty=Tensor[(540), float32] */, %1014, %1015, %1016, %1017, meta[relay.Constant][63] /* ty=Tensor[(1650), float32] */)
  };
  %1018() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */
}

def @func_9907() -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), bool]) {
  %1019 = @func_6974() /* ty=(Tensor[(15, 10, 11), float32],) */;
  %1020 = @func_4266() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %1021 = %1019.0;
  %1022 = cast(%1021, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %1023 = reshape(%1022, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
  %1024 = @func_6055(%1023) /* ty=(Tensor[(15, 10, 11), int32], Tensor[(3, 2, 2), bool], Tensor[(1, 12), float32], Tensor[(15, 10, 11), float32]) */;
  %1025 = %1020.1;
  %1026 = %1024.1;
  (%1021, %1025, %1026)
}

def @func_6894() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
  %1027 = @func_4474() /* ty=Tensor[(15, 10, 11), float32] */;
  %1028 = @func_6858() /* ty=Tensor[(3, 2, 2), float32] */;
  (%1027, %1028)
}

def @func_3041() -> (Tensor[(7, 15, 8), float64],) {
  %1031 = fn () -> (Tensor[(7, 15, 8), float64],) {
    %1029 = cast(meta[relay.Constant][64] /* ty=Tensor[(7, 15, 8), float64] */, dtype="float64") /* ty=Tensor[(7, 15, 8), float64] */;
    %1030 = exp(%1029) /* ty=Tensor[(7, 15, 8), float64] */;
    (%1030,)
  };
  %1031() /* ty=(Tensor[(7, 15, 8), float64],) */
}

def @func_11112() -> (Tensor[(3, 2, 2), float32],) {
  %1032 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %1033 = %1032.0;
  (%1033,)
}

def @func_1938(%var_1937: Tensor[(1, 27), float64]) -> (Tensor[(14, 15, 2), float64], Tensor[(3, 2, 2), float32], Tensor[(1, 27), float64], Tensor[(3, 2, 2), bool]) {
  %1045 = fn (%var_1925: Tensor[(1, 27), float64]) -> (Tensor[(14, 15, 2), float64], Tensor[(3, 2, 2), float32], Tensor[(1, 27), float64], Tensor[(3, 2, 2), bool]) {
    %1034 = cast(meta[relay.Constant][65] /* ty=Tensor[(14, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(14, 15, 2), float64] */;
    %1035 = cast(%var_1925, dtype="float64") /* ty=Tensor[(1, 27), float64] */;
    %1036 = cast(%var_1925, dtype="float64") /* ty=Tensor[(1, 27), float64] */;
    %1037 = reshape(%1035, newshape=[27]) /* ty=Tensor[(27), float64] */;
    %1038 = reshape(%1036, newshape=[27]) /* ty=Tensor[(27), float64] */;
    %1039 = @func_1584(%1037, %1038) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(540), float32], Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(9, 3, 5), float64], Tensor[(27), bool]) */;
    %1040 = %1039.0;
    %1041 = cast(%1040, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
    %1042 = reshape(%1041, newshape=[3, 2, 2]) /* ty=Tensor[(3, 2, 2), float32] */;
    %1043 = asinh(%1034) /* ty=Tensor[(14, 15, 2), float64] */;
    %1044 = @func_1722(%1042) /* ty=Tensor[(3, 2, 2), bool] */;
    (%1043, %1040, %var_1925, %1044)
  };
  %1045(%var_1937) /* ty=(Tensor[(14, 15, 2), float64], Tensor[(3, 2, 2), float32], Tensor[(1, 27), float64], Tensor[(3, 2, 2), bool]) */
}

def @func_11652() -> Tensor[(14, 8, 10), float64] {
  @func_11650() /* ty=Tensor[(14, 8, 10), float64] */
}

def @func_9949() -> Tensor[(12, 2, 10), float32] {
  @func_9947() /* ty=Tensor[(12, 2, 10), float32] */
}

def @func_4803() -> (Tensor[(540), float32],) {
  %1047 = fn () -> (Tensor[(540), float32],) {
    %1046 = @func_3311() /* ty=Tensor[(540), float32] */;
    (%1046,)
  };
  %1047() /* ty=(Tensor[(540), float32],) */
}

def @func_7500() -> (Tensor[(15, 10, 11), float32],) {
  %1048 = @func_3972() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) */;
  %1049 = %1048.2;
  (%1049,)
}

def @func_4651() -> (Tensor[(15, 10, 11), float32],) {
  %1052 = fn () -> (Tensor[(15, 10, 11), float32],) {
    %1050 = @func_4266() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
    %1051 = %1050.2;
    (%1051,)
  };
  %1052() /* ty=(Tensor[(15, 10, 11), float32],) */
}

def @func_3144() -> (Tensor[(15, 10, 11), float32],) {
  %1054 = fn () -> (Tensor[(15, 10, 11), float32],) {
    %1053 = @func_2787() /* ty=Tensor[(15, 10, 11), float32] */;
    (%1053,)
  };
  %1054() /* ty=(Tensor[(15, 10, 11), float32],) */
}

def @func_3990() -> (Tensor[(3, 2, 2), float32],) {
  @func_3988() /* ty=(Tensor[(3, 2, 2), float32],) */
}

def @func_2440() -> (Tensor[(3, 2, 2), float32],) {
  %1057 = fn () -> (Tensor[(3, 2, 2), float32],) {
    %1055 = @func_1868() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %1056 = %1055.0;
    (%1056,)
  };
  %1057() /* ty=(Tensor[(3, 2, 2), float32],) */
}

def @func_9444(%var_9442: Tensor[(54, 10), float32], %var_9443: Tensor[(490), float32]) -> (Tensor[(4, 14, 10), uint8], Tensor[(3, 2, 2), float32], Tensor[(693), float64], Tensor[(54, 10), float32], Tensor[(3, 180), bool], Tensor[(1040), float64], Tensor[(490), float32]) {
  %1079 = fn (%var_9396: Tensor[(54, 10), float32], %var_9414: Tensor[(490), float32]) -> (Tensor[(4, 14, 10), uint8], Tensor[(3, 2, 2), float32], Tensor[(693), float64], Tensor[(54, 10), float32], Tensor[(3, 180), bool], Tensor[(1040), float64], Tensor[(490), float32]) {
    %1058 = @func_7317() /* ty=(Tensor[(4, 14, 10), uint8], Tensor[(1040, 1), float64]) */;
    %1059 = cast(meta[relay.Constant][66] /* ty=Tensor[(693), float64] */, dtype="float64") /* ty=Tensor[(693), float64] */;
    %1060 = reshape(%1059, newshape=[11, 9, 7]) /* ty=Tensor[(11, 9, 7), float64] */;
    %1061 = @func_2854(%1060) /* ty=(Tensor[(11, 9, 7), float64], Tensor[(3, 2, 2), float32]) */;
    %1062 = cast(%var_9396, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
    %1063 = cast(%var_9396, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
    %1064 = reshape(%1062, newshape=[3, 180]) /* ty=Tensor[(3, 180), float32] */;
    %1065 = reshape(%1063, newshape=[3, 180]) /* ty=Tensor[(3, 180), float32] */;
    %1066 = @func_5612(%1064, %1065) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(3, 180), float32]) */;
    %1067 = %1066.2;
    %1068 = cast(meta[relay.Constant][67] /* ty=Tensor[(3, 180), float32] */, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
    %1069 = shape_of(%1067, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1070 = cast(%1067, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
    %1071 = dyn.reshape(%1068, %1069, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1072 = cast(%var_9414, dtype="float32") /* ty=Tensor[(490), float32] */;
    %1073 = reshape(%1072, newshape=[490]) /* ty=Tensor[(490), float32] */;
    %1074 = @func_7996(%1073) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(3, 180), float32], Tensor[(15, 10, 11), float32]) */;
    %1075 = %1058.0;
    %1076 = %1061.1;
    %1077 = logical_and(%1070, %1071) /* ty=Tensor[(3, 180), bool] */;
    %1078 = %1074.2;
    (%1075, %1076, meta[relay.Constant][66] /* ty=Tensor[(693), float64] */, %var_9396, %1077, %1078, %var_9414)
  };
  %1079(%var_9442, %var_9443) /* ty=(Tensor[(4, 14, 10), uint8], Tensor[(3, 2, 2), float32], Tensor[(693), float64], Tensor[(54, 10), float32], Tensor[(3, 180), bool], Tensor[(1040), float64], Tensor[(490), float32]) */
}

def @func_6860() -> Tensor[(3, 2, 2), float32] {
  @func_6858() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_9780(%var_9778: Tensor[(1, 1, 7), float32]) -> (Tensor[(1, 1, 7), float32],) {
  @func_9777(%var_9778) /* ty=(Tensor[(1, 1, 7), float32],) */
}

def @func_10304() -> Tensor[(15, 10, 11), float32] {
  @func_10302() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_1240(%var_1222: Tensor[(7, 7, 10), float32], %var_1237: Tensor[(540), float32], %var_1238: Tensor[(27), float64]) -> (Tensor[(7, 7, 10), float32], Tensor[(27), float64], Tensor[(540), float32], Tensor[(27), float64]) {
  %1080 = cast(%var_1222, dtype="float32") /* ty=Tensor[(7, 7, 10), float32] */;
  %1081 = tan(%1080) /* ty=Tensor[(7, 7, 10), float32] */;
  %1082 = cast(%1081, dtype="float32") /* ty=Tensor[(7, 7, 10), float32] */;
  %1083 = cast(%var_1237, dtype="float32") /* ty=Tensor[(540), float32] */;
  %1084 = cast(%var_1238, dtype="float64") /* ty=Tensor[(27), float64] */;
  %1085 = reshape(%1083, newshape=[15, 6, 6]) /* ty=Tensor[(15, 6, 6), float32] */;
  %1086 = reshape(%1084, newshape=[27]) /* ty=Tensor[(27), float64] */;
  %1087 = @func_952(%1085, %1086) /* ty=(Tensor[(15, 6, 6), float32], Tensor[(9, 3, 5), float64], Tensor[(27), float64], Tensor[(135), float64], Tensor[(9, 3, 5), float64]) */;
  %1088 = erf(%1082) /* ty=Tensor[(7, 7, 10), float32] */;
  %1089 = %1087.2;
  (%1088, %1089, %var_1237, %var_1238)
}

def @func_11798() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
  %1093 = fn () -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
    %1090 = @func_11233() /* ty=(Tensor[(15, 10, 11), float32],) */;
    %1091 = %1090.0;
    %1092 = @func_5378() /* ty=Tensor[(3, 2, 2), float32] */;
    (%1091, %1092)
  };
  %1093() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */
}

def @func_9983() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), bool], Tensor[(1, 12), float32], Tensor[(15, 10, 11), float32]) {
  @func_9981() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), bool], Tensor[(1, 12), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_5827() -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
  %1098 = fn () -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) {
    %1094 = @func_4748() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
    %1095 = @func_2700() /* ty=Tensor[(15, 10, 11), float32] */;
    %1096 = %1094.0;
    %1097 = @func_2787() /* ty=Tensor[(15, 10, 11), float32] */;
    (%1095, %1096, %1097)
  };
  %1098() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_11717() -> (Tensor[(490), float32], Tensor[(2, 10, 11), float32], Tensor[(220), float32], Tensor[(3, 2, 2), float32]) {
  %1108 = fn () -> (Tensor[(490), float32], Tensor[(2, 10, 11), float32], Tensor[(220), float32], Tensor[(3, 2, 2), float32]) {
    %1099 = @func_2652() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(10, 13, 8), float64], Tensor[(1040, 1), float64], Tensor[(490), float32], Tensor[(540), float32]) */;
    %1100 = cast(meta[relay.Constant][68] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
    %1101 = cast(meta[relay.Constant][68] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
    %1102 = reshape(%1100, newshape=[2, 10, 11]) /* ty=Tensor[(2, 10, 11), float32] */;
    %1103 = reshape(%1101, newshape=[2, 10, 11]) /* ty=Tensor[(2, 10, 11), float32] */;
    %1104 = @func_7839(%1102, %1103) /* ty=(Tensor[(2, 10, 11), float32],) */;
    %1105 = %1099.3;
    %1106 = %1104.0;
    %1107 = @func_4200() /* ty=Tensor[(3, 2, 2), float32] */;
    (%1105, %1106, meta[relay.Constant][68] /* ty=Tensor[(220), float32] */, %1107)
  };
  %1108() /* ty=(Tensor[(490), float32], Tensor[(2, 10, 11), float32], Tensor[(220), float32], Tensor[(3, 2, 2), float32]) */
}

def @func_3312() -> Tensor[(540), float32] {
  %1110 = fn () -> Tensor[(540), float32] {
    %1109 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
    %1109.1
  };
  %1110() /* ty=Tensor[(540), float32] */
}

def @func_6399() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
  %1111 = @func_5826() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32]) */;
  %1112 = @func_4528() /* ty=(Tensor[(3, 2, 2), bool], Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32]) */;
  %1113 = %1111.1;
  %1114 = %1112.1;
  (%1113, %1114)
}

def @func_8158() -> (Tensor[(15, 10, 11), float32],) {
  %1115 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
  %1116 = %1115.5;
  (%1116,)
}

def @func_8803(%var_8802: Tensor[(16, 6, 4), float64]) -> (Tensor[(16, 6, 4), float64], Tensor[(16, 6, 4), float32], Tensor[(15, 10, 11), float32]) {
  %1123 = fn (%var_8743: Tensor[(16, 6, 4), float64]) -> (Tensor[(16, 6, 4), float64], Tensor[(16, 6, 4), float32], Tensor[(15, 10, 11), float32]) {
    %1117 = cast(%var_8743, dtype="float64") /* ty=Tensor[(16, 6, 4), float64] */;
    %1118 = cast(%var_8743, dtype="float32") /* ty=Tensor[(16, 6, 4), float32] */;
    %1119 = @func_6399() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */;
    %1120 = log2(%1117) /* ty=Tensor[(16, 6, 4), float64] */;
    %1121 = asin(%1118) /* ty=Tensor[(16, 6, 4), float32] */;
    %1122 = %1119.0;
    (%1120, %1121, %1122)
  };
  %1123(%var_8802) /* ty=(Tensor[(16, 6, 4), float64], Tensor[(16, 6, 4), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_3481() -> Tensor[(15, 10, 11), float32] {
  @func_2700() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_11233() -> (Tensor[(15, 10, 11), float32],) {
  %1124 = @func_10187() /* ty=Tensor[(15, 10, 11), float32] */;
  (%1124,)
}

def @func_6858() -> Tensor[(3, 2, 2), float32] {
  @func_5837() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_9002() -> (Tensor[(3, 2, 2), float32],) {
  @func_9000() /* ty=(Tensor[(3, 2, 2), float32],) */
}

def @func_9081(%var_9079: Tensor[(3, 12, 12), uint8], %var_9080: Tensor[(3, 12, 12), uint8]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 12, 12), bool]) {
  %1137 = fn (%var_9054: Tensor[(3, 12, 12), uint8], %var_9055: Tensor[(3, 12, 12), uint8]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 12, 12), bool]) {
    %1125 = @func_7682() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(15, 10, 11), float32]) */;
    %1126 = cast(%var_9055, dtype="bool") /* ty=Tensor[(3, 12, 12), bool] */;
    %1127 = shape_of(%var_9054, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1128 = cast(%var_9054, dtype="bool") /* ty=Tensor[(3, 12, 12), bool] */;
    %1129 = dyn.reshape(%1126, %1127, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1130 = less(%1128, %1129) /* ty=Tensor[(3, 12, 12), bool] */;
    %1131 = cast(%var_9054, dtype="bool") /* ty=Tensor[(3, 12, 12), bool] */;
    %1132 = shape_of(%1130, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1133 = cast(%1130, dtype="bool") /* ty=Tensor[(3, 12, 12), bool] */;
    %1134 = dyn.reshape(%1131, %1132, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1135 = %1125.3;
    %1136 = not_equal(%1133, %1134) /* ty=Tensor[(3, 12, 12), bool] */;
    (%1135, %1136)
  };
  %1137(%var_9079, %var_9080) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 12, 12), bool]) */
}

def @func_10928() -> (Tensor[(3, 2, 2), float32], Tensor[(540), float32]) {
  %1141 = fn () -> (Tensor[(3, 2, 2), float32], Tensor[(540), float32]) {
    %1138 = @func_1190() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %1139 = %1138.0;
    %1140 = @func_3311() /* ty=Tensor[(540), float32] */;
    (%1139, %1140)
  };
  %1141() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(540), float32]) */
}

def @func_7697() -> Tensor[(15, 10, 11), float32] {
  %1142 = fn () -> Tensor[(15, 10, 11), float32] {
    @func_3744() /* ty=Tensor[(15, 10, 11), float32] */
  };
  %1142() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_8160() -> (Tensor[(15, 10, 11), float32],) {
  @func_8158() /* ty=(Tensor[(15, 10, 11), float32],) */
}

def @func_7166() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
  @func_7164() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */
}

def @func_10237(%var_10236: Tensor[(12, 2, 12), bool]) -> Tensor[(12, 2, 12), bool] {
  %1147 = fn (%var_10231: Tensor[(12, 2, 12), bool]) -> Tensor[(12, 2, 12), bool] {
    %1143 = cast(%var_10231, dtype="bool") /* ty=Tensor[(12, 2, 12), bool] */;
    %1144 = shape_of(meta[relay.Constant][69] /* ty=Tensor[(12, 2, 12), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1145 = cast(meta[relay.Constant][69] /* ty=Tensor[(12, 2, 12), bool] */, dtype="bool") /* ty=Tensor[(12, 2, 12), bool] */;
    %1146 = dyn.reshape(%1143, %1144, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%1145, %1146) /* ty=Tensor[(12, 2, 12), bool] */
  };
  %1147(%var_10236) /* ty=Tensor[(12, 2, 12), bool] */
}

def @func_8242() -> Tensor[(135), float64] {
  @func_8240() /* ty=Tensor[(135), float64] */
}

def @func_10814() -> (Tensor[(15, 10, 11), float32],) {
  @func_10812() /* ty=(Tensor[(15, 10, 11), float32],) */
}

def @func_8537() -> (Tensor[(1650), float64], Tensor[(3, 2, 2), float32]) {
  @func_8535() /* ty=(Tensor[(1650), float64], Tensor[(3, 2, 2), float32]) */
}

def @func_9747() -> Tensor[(3, 2, 2), float32] {
  %1148 = fn () -> Tensor[(3, 2, 2), float32] {
    @func_5837() /* ty=Tensor[(3, 2, 2), float32] */
  };
  %1148() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_11235() -> (Tensor[(15, 10, 11), float32],) {
  @func_11233() /* ty=(Tensor[(15, 10, 11), float32],) */
}

def @func_3988() -> (Tensor[(3, 2, 2), float32],) {
  %1149 = @func_2426() /* ty=(Tensor[(3, 2, 2), float32],) */;
  %1150 = %1149.0;
  (%1150,)
}

def @func_2552() -> (Tensor[(15, 10, 11), float32],) {
  %1153 = fn () -> (Tensor[(15, 10, 11), float32],) {
    %1151 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
    %1152 = %1151.5;
    (%1152,)
  };
  %1153() /* ty=(Tensor[(15, 10, 11), float32],) */
}

def @func_12329() -> (Tensor[(15, 10, 11), float32],) {
  @func_12327() /* ty=(Tensor[(15, 10, 11), float32],) */
}

def @func_7999(%var_7997: Tensor[(490), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(3, 180), float32], Tensor[(15, 10, 11), float32]) {
  @func_7996(%var_7997) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(3, 180), float32], Tensor[(15, 10, 11), float32]) */
}

def @func_9010() -> Tensor[(3, 2, 2), float32] {
  %1155 = fn () -> Tensor[(3, 2, 2), float32] {
    %1154 = @func_9000() /* ty=(Tensor[(3, 2, 2), float32],) */;
    %1154.0
  };
  %1155() /* ty=Tensor[(3, 2, 2), float32] */
}

def @func_8447() -> Tensor[(15, 10, 11), float32] {
  %1156 = @func_7164() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */;
  %1156.0
}

def @func_4787() -> (Tensor[(3, 2, 2), float32],) {
  %1161 = fn () -> (Tensor[(3, 2, 2), float32],) {
    %1157 = @func_3972() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float64], Tensor[(15, 10, 11), float32]) */;
    %1158 = %1157.0;
    %1159 = cast(%1158, dtype="float32") /* ty=Tensor[(3, 2, 2), float32] */;
    %1160 = acos(%1159) /* ty=Tensor[(3, 2, 2), float32] */;
    (%1160,)
  };
  %1161() /* ty=(Tensor[(3, 2, 2), float32],) */
}

def @func_6524(%var_6522: Tensor[(27), float64]) -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(162), float64], Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(27), float32], Tensor[(3, 180), uint16]) {
  @func_6521(%var_6522) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float32], Tensor[(162), float64], Tensor[(3, 2, 2), float32], Tensor[(540), float32], Tensor[(27), float32], Tensor[(3, 180), uint16]) */
}

def @func_3217() -> Tensor[(3, 2, 2), float32] {
  %1162 = @func_2254() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(135), float64], Tensor[(27), float64], Tensor[(3, 2, 2), float32]) */;
  %1162.3
}

def @func_7684() -> (Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(15, 10, 11), float32]) {
  @func_7682() /* ty=(Tensor[(3, 2, 2), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(15, 10, 11), float32]) */
}

def @func_5199(%var_5196: Tensor[(1040), float64], %var_5197: Tensor[(490), float32], %var_5198: Tensor[(540), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(8, 5, 8), float32], Tensor[(40, 8), float32], Tensor[(27), float64], Tensor[(540), float32]) {
  %1186 = fn (%var_5141: Tensor[(1040), float64], %var_5142: Tensor[(490), float32], %var_5143: Tensor[(540), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(8, 5, 8), float32], Tensor[(40, 8), float32], Tensor[(27), float64], Tensor[(540), float32]) {
    %1163 = cast(%var_5141, dtype="float64") /* ty=Tensor[(1040), float64] */;
    %1164 = cast(%var_5142, dtype="float32") /* ty=Tensor[(490), float32] */;
    %1165 = cast(%var_5143, dtype="float32") /* ty=Tensor[(540), float32] */;
    %1166 = reshape(%1163, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
    %1167 = reshape(%1164, newshape=[490]) /* ty=Tensor[(490), float32] */;
    %1168 = reshape(%1165, newshape=[540]) /* ty=Tensor[(540), float32] */;
    %1169 = @func_1985(%1166, %1167, %1168) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) */;
    %1170 = cast(meta[relay.Constant][70] /* ty=Tensor[(40, 8), float32] */, dtype="float32") /* ty=Tensor[(40, 8), float32] */;
    %1171 = cast(meta[relay.Constant][71] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
    %1172 = reshape(%1170, newshape=[8, 5, 8]) /* ty=Tensor[(8, 5, 8), float32] */;
    %1173 = reshape(%1171, newshape=[27]) /* ty=Tensor[(27), float64] */;
    %1174 = @func_4980(%1172, %1173) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(8, 5, 8), float32]) */;
    %1175 = cast(%var_5141, dtype="float64") /* ty=Tensor[(1040), float64] */;
    %1176 = cast(%var_5142, dtype="float32") /* ty=Tensor[(490), float32] */;
    %1177 = cast(%var_5143, dtype="float32") /* ty=Tensor[(540), float32] */;
    %1178 = reshape(%1175, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
    %1179 = reshape(%1176, newshape=[490]) /* ty=Tensor[(490), float32] */;
    %1180 = reshape(%1177, newshape=[540]) /* ty=Tensor[(540), float32] */;
    %1181 = @func_1985(%1178, %1179, %1180) /* ty=(Tensor[(3, 2, 2), float32], Tensor[(27), float64], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32]) */;
    %1182 = @func_4820() /* ty=Tensor[(15, 10, 11), float32] */;
    %1183 = %1169.0;
    %1184 = %1174.3;
    %1185 = %1181.4;
    (%1182, %1183, %var_5141, %var_5142, %var_5143, %1184, meta[relay.Constant][70] /* ty=Tensor[(40, 8), float32] */, meta[relay.Constant][71] /* ty=Tensor[(27), float64] */, %1185)
  };
  %1186(%var_5196, %var_5197, %var_5198) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32], Tensor[(1040), float64], Tensor[(490), float32], Tensor[(540), float32], Tensor[(8, 5, 8), float32], Tensor[(40, 8), float32], Tensor[(27), float64], Tensor[(540), float32]) */
}

def @func_4820() -> Tensor[(15, 10, 11), float32] {
  @func_4474() /* ty=Tensor[(15, 10, 11), float32] */
}

def @func_6401() -> (Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) {
  @func_6399() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(3, 2, 2), float32]) */
}

def @func_11986() -> (Tensor[(15, 10, 11), float32], Tensor[(270, 2), float32]) {
  @func_11984() /* ty=(Tensor[(15, 10, 11), float32], Tensor[(270, 2), float32]) */
}

def @func_6579() -> Tensor[(1650), float64] {
  %1190 = fn () -> Tensor[(1650), float64] {
    %1187 = @func_2405() /* ty=(Tensor[(490), float32], Tensor[(540), float32], Tensor[(3, 2, 2), float32], Tensor[(27), int32], Tensor[(3, 2, 2), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
    %1188 = %1187.6;
    %1189 = cast(%1188, dtype="float64") /* ty=Tensor[(1650), float64] */;
    atanh(%1189) /* ty=Tensor[(1650), float64] */
  };
  %1190() /* ty=Tensor[(1650), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen711/build/output.py:3774: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen711/build/output.py", line 3779, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(12) tvmgen_default_fused_asin_kernel0(double* __restrict__ T_asin, double* __restrict__ placeholder) {
  T_asin[(((int)threadIdx.x))] = asin(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


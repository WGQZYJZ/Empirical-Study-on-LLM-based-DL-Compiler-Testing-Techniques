import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_26 = relay.var("var_26", dtype = "float32", shape = (3, 4, 8))#candidate|26|(3, 4, 8)|var|float32
uop_27 = relay.log2(var_26.astype('float32')) # shape=(3, 4, 8)
const_40 = relay.const([[[-2.837139,-4.601810,-0.341032,-5.991119,6.991836,-2.622524,-9.544156,5.853623],[-4.155810,7.457664,7.830490,1.481069,-8.395199,4.316260,7.200357,-5.018442],[7.097517,-0.647104,6.527925,5.591549,-3.589665,7.961333,-2.827536,5.225598],[-1.803789,-8.164741,9.467849,-9.829848,-8.124796,5.611424,3.733266,-6.589897]],[[-5.571825,-2.603738,4.854421,-2.184739,4.811883,5.510806,6.898438,6.671787],[8.331626,2.725376,2.066081,2.927076,2.132830,0.532026,-9.515481,7.306534],[0.013071,-2.114125,-5.453184,-6.962287,-6.519489,1.989498,-4.225265,0.081846],[-5.962993,-0.920157,5.026661,8.453316,-2.737831,0.593038,-5.268846,5.964597]],[[-4.886979,3.785532,1.404051,-4.169038,6.555062,4.553085,-6.799357,3.815496],[0.488275,-7.062512,5.916886,2.248973,5.022178,-8.985279,4.437128,0.532788],[-1.340145,-9.688050,-9.369187,5.189178,-8.409743,3.484452,-5.892136,6.932203],[-6.378915,-8.791092,-2.536238,0.498590,-2.296643,4.835456,6.720699,7.978989]]], dtype = "float32")#candidate|40|(3, 4, 8)|const|float32
bop_41 = relay.greater(var_26.astype('bool'), relay.reshape(const_40.astype('bool'), relay.shape_of(var_26))) # shape=(3, 4, 8)
uop_44 = relay.acos(bop_41.astype('float32')) # shape=(3, 4, 8)
output = relay.Tuple([uop_27,uop_44,])
output2 = relay.Tuple([uop_27,uop_44,])
func_58 = relay.Function([var_26,], output)
mod['func_58'] = func_58
mod = relay.transform.InferType()(mod)
var_59 = relay.var("var_59", dtype = "float32", shape = (3, 4, 8))#candidate|59|(3, 4, 8)|var|float32
output = func_58(var_59)
func_60 = relay.Function([var_59], output)
mutated_mod['func_60'] = func_60
mutated_mod = relay.transform.InferType()(mutated_mod)
var_446 = relay.var("var_446", dtype = "float32", shape = (5, 15, 14))#candidate|446|(5, 15, 14)|var|float32
uop_447 = relay.erf(var_446.astype('float32')) # shape=(5, 15, 14)
uop_452 = relay.acos(uop_447.astype('float64')) # shape=(5, 15, 14)
uop_459 = relay.log2(uop_447.astype('float64')) # shape=(5, 15, 14)
output = relay.Tuple([uop_452,uop_459,])
output2 = relay.Tuple([uop_452,uop_459,])
func_467 = relay.Function([var_446,], output)
mod['func_467'] = func_467
mod = relay.transform.InferType()(mod)
var_468 = relay.var("var_468", dtype = "float32", shape = (5, 15, 14))#candidate|468|(5, 15, 14)|var|float32
output = func_467(var_468)
func_469 = relay.Function([var_468], output)
mutated_mod['func_469'] = func_469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_685 = relay.var("var_685", dtype = "uint64", shape = ())#candidate|685|()|var|uint64
var_686 = relay.var("var_686", dtype = "uint64", shape = (16, 2, 6))#candidate|686|(16, 2, 6)|var|uint64
bop_687 = relay.equal(var_685.astype('bool'), var_686.astype('bool')) # shape=(16, 2, 6)
output = relay.Tuple([bop_687,])
output2 = relay.Tuple([bop_687,])
func_690 = relay.Function([var_685,var_686,], output)
mod['func_690'] = func_690
mod = relay.transform.InferType()(mod)
mutated_mod['func_690'] = func_690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_690_call = mutated_mod.get_global_var('func_690')
var_692 = relay.var("var_692", dtype = "uint64", shape = ())#candidate|692|()|var|uint64
var_693 = relay.var("var_693", dtype = "uint64", shape = (16, 2, 6))#candidate|693|(16, 2, 6)|var|uint64
call_691 = func_690_call(var_692,var_693,)
output = call_691
func_694 = relay.Function([var_692,var_693,], output)
mutated_mod['func_694'] = func_694
mutated_mod = relay.transform.InferType()(mutated_mod)
var_807 = relay.var("var_807", dtype = "float32", shape = (3, 14, 5))#candidate|807|(3, 14, 5)|var|float32
uop_808 = relay.log(var_807.astype('float32')) # shape=(3, 14, 5)
output = uop_808
output2 = uop_808
func_814 = relay.Function([var_807,], output)
mod['func_814'] = func_814
mod = relay.transform.InferType()(mod)
mutated_mod['func_814'] = func_814
mutated_mod = relay.transform.InferType()(mutated_mod)
var_815 = relay.var("var_815", dtype = "float32", shape = (3, 14, 5))#candidate|815|(3, 14, 5)|var|float32
func_814_call = mutated_mod.get_global_var('func_814')
call_816 = func_814_call(var_815)
output = call_816
func_817 = relay.Function([var_815], output)
mutated_mod['func_817'] = func_817
mutated_mod = relay.transform.InferType()(mutated_mod)
var_875 = relay.var("var_875", dtype = "uint64", shape = ())#candidate|875|()|var|uint64
const_876 = relay.const([[[-5,2,-10,-9,10,-6,6,10,-9,8,4,-7,3],[9,6,4,9,-5,-5,-8,6,-5,-1,-8,3,6],[-1,4,-8,-8,6,-8,-7,4,9,10,7,-8,2],[9,-3,-5,-7,-10,3,-9,-1,-6,2,-2,-3,6],[8,8,-3,-5,1,3,-8,-3,1,10,1,-10,-5],[5,5,-7,7,-2,2,9,9,3,6,-8,10,-1],[-5,5,5,7,-1,-2,-10,1,4,-5,-3,-10,-4],[8,-8,6,-9,-5,-1,4,-9,-2,-1,-8,2,-5],[4,6,6,4,10,-9,-3,5,1,5,4,-8,10],[-9,1,-9,-1,-5,-8,1,8,-9,8,-4,3,-8],[9,-1,4,-1,-6,-2,-7,4,-3,-5,6,-2,10],[-3,7,10,-7,-3,3,-6,8,7,-4,-3,5,9]],[[-4,6,-9,8,2,2,-1,10,2,-4,-5,-6,-10],[-5,-6,8,9,3,5,-6,9,6,-6,5,-4,8],[10,10,2,-6,-2,-10,10,-9,-7,2,4,6,-6],[-5,2,2,9,1,-9,-2,3,2,-5,6,5,-8],[6,8,-8,4,8,9,10,-1,-1,10,4,5,2],[-3,-1,-7,-8,-3,-7,6,5,-3,7,1,-6,2],[-2,3,-2,2,-9,2,-3,-4,2,-8,-5,-9,4],[2,1,-3,-3,-7,-3,8,-10,-1,-5,-5,-7,3],[3,-6,-2,-8,4,-7,10,-2,5,-6,2,9,-4],[-4,5,-3,-9,-7,9,7,-9,-10,10,-1,-4,1],[-6,-3,3,1,7,8,5,9,3,9,8,-10,-3],[-5,-9,3,5,6,-3,9,3,6,-5,3,-8,-9]],[[-2,-7,9,2,-8,-1,-10,4,4,-5,-1,6,-5],[3,1,-2,-10,-8,4,-6,4,7,6,7,-7,8],[3,-3,5,2,7,-9,-6,5,-6,2,10,-3,-3],[8,-3,7,2,-4,7,1,1,-10,-6,7,-7,3],[10,-4,4,-2,-8,-3,-10,-7,3,2,7,-1,8],[8,-6,-3,-5,-9,8,-8,-4,-9,9,1,4,-6],[-7,8,4,3,5,6,2,10,1,-10,-10,9,-5],[-1,-6,-1,-3,-8,-5,7,-6,9,-10,-2,9,-6],[-3,8,7,-8,-6,6,10,-6,-7,-4,-8,5,-3],[3,-10,-3,-3,-8,2,-1,-7,-10,3,1,-1,-4],[-7,8,-5,2,-9,-6,-7,3,2,-8,3,5,3],[7,-10,-2,-8,-7,-3,-8,-5,5,9,-1,-3,2]],[[-4,5,3,-1,1,-10,-6,-3,7,1,6,-5,-5],[-7,-5,8,8,-7,3,3,-3,-4,9,10,-9,-1],[-1,1,5,6,-9,-9,8,-7,6,-7,-3,2,10],[-10,-4,-5,9,3,-4,-2,-3,-1,7,-4,-7,3],[-1,2,8,-10,4,9,1,-7,-1,9,2,-9,-7],[-3,3,4,3,-5,7,7,-1,5,8,-7,3,-7],[8,-3,6,-1,5,2,9,-1,3,6,-4,-7,2],[-5,2,9,7,-8,1,-1,3,6,-3,10,7,-1],[8,-7,-2,7,-4,7,-2,4,4,-10,1,3,-5],[9,9,-4,9,-7,-4,6,-3,-7,10,8,7,5],[6,-1,8,-4,1,4,-9,-1,-7,9,4,7,-7],[9,5,-3,9,3,-5,6,4,8,-3,6,-7,-4]],[[-1,4,5,4,-5,-2,-3,4,5,6,2,-3,-4],[-6,4,-2,8,2,1,-7,3,3,-6,5,-8,1],[6,4,-4,1,-10,-10,-2,4,-8,-10,-2,-8,1],[-10,-6,-9,-8,10,-3,8,7,4,2,-1,-10,-3],[3,1,-7,-2,-5,-5,4,-2,8,10,10,5,3],[2,6,-6,-9,4,9,8,7,-6,1,-7,10,6],[-3,-1,6,2,9,4,6,-3,-4,-8,8,-1,3],[-10,5,-2,7,-7,-5,9,-6,3,9,-4,8,-3],[7,5,-1,-3,-1,7,6,-4,-10,6,-6,-5,-4],[-9,4,-1,7,10,-1,4,-8,3,-4,5,-2,7],[10,4,-2,8,-6,-6,-5,10,-9,-9,7,1,10],[5,-8,9,-6,-4,5,-6,-1,3,1,9,10,-9]]], dtype = "uint64")#candidate|876|(5, 12, 13)|const|uint64
bop_877 = relay.bitwise_or(var_875.astype('uint64'), const_876.astype('uint64')) # shape=(5, 12, 13)
output = bop_877
output2 = bop_877
func_881 = relay.Function([var_875,], output)
mod['func_881'] = func_881
mod = relay.transform.InferType()(mod)
var_882 = relay.var("var_882", dtype = "uint64", shape = ())#candidate|882|()|var|uint64
output = func_881(var_882)
func_883 = relay.Function([var_882], output)
mutated_mod['func_883'] = func_883
mutated_mod = relay.transform.InferType()(mutated_mod)
var_915 = relay.var("var_915", dtype = "int64", shape = (15, 16, 5))#candidate|915|(15, 16, 5)|var|int64
var_916 = relay.var("var_916", dtype = "int64", shape = (15, 16, 5))#candidate|916|(15, 16, 5)|var|int64
bop_917 = relay.right_shift(var_915.astype('int64'), relay.reshape(var_916.astype('int64'), relay.shape_of(var_915))) # shape=(15, 16, 5)
output = relay.Tuple([bop_917,])
output2 = relay.Tuple([bop_917,])
func_921 = relay.Function([var_915,var_916,], output)
mod['func_921'] = func_921
mod = relay.transform.InferType()(mod)
mutated_mod['func_921'] = func_921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_921_call = mutated_mod.get_global_var('func_921')
var_923 = relay.var("var_923", dtype = "int64", shape = (15, 16, 5))#candidate|923|(15, 16, 5)|var|int64
var_924 = relay.var("var_924", dtype = "int64", shape = (15, 16, 5))#candidate|924|(15, 16, 5)|var|int64
call_922 = func_921_call(var_923,var_924,)
output = call_922
func_925 = relay.Function([var_923,var_924,], output)
mutated_mod['func_925'] = func_925
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1544 = relay.const([[[-8.991967,7.661886,-7.055799,1.645606,8.998123,-1.418704,8.682403,-7.829260,4.264527],[-7.862105,6.224243,-3.400588,4.338115,-2.517359,-9.914077,4.529698,-2.274331,-5.457412],[2.392889,9.683058,4.435552,-7.573701,-0.142286,-4.870234,6.358028,-5.161007,9.455675],[-3.959590,-8.779684,3.817492,-7.392666,1.210894,9.883347,4.639685,-5.962954,0.369059],[-9.523558,-9.782606,-2.794036,9.434809,9.829195,-6.370853,-8.615821,1.127178,6.225695],[8.581218,-6.562988,-7.854914,-3.663993,-6.823211,6.270321,6.695544,5.028644,-3.785121],[-6.987951,2.130569,0.746905,-3.389732,-0.775372,1.848570,-5.684068,2.656006,6.335970]],[[-1.747991,-5.137780,-8.619610,7.166621,4.533019,0.009885,-0.218893,4.599580,4.558781],[-8.396759,-8.164181,-7.051855,-0.784215,0.601651,3.974352,-7.331247,-5.933013,-5.142640],[-3.610111,-1.723351,-7.273340,2.202900,2.428107,1.375106,-7.139489,-3.374694,-1.816610],[-1.660047,6.551533,7.002278,-3.469959,2.765772,-9.283502,-9.122838,6.264759,-1.914573],[-4.184947,-5.015873,8.436464,3.755213,8.808210,-8.378196,-6.494834,2.039781,-8.651687],[-9.883686,-0.795998,-9.523801,0.665091,9.718689,8.551703,-4.609684,4.072660,-6.175329],[-9.030386,-1.849492,5.854964,-0.192044,1.084591,-2.114134,-3.309188,4.752266,-8.702943]]], dtype = "float32")#candidate|1544|(2, 7, 9)|const|float32
uop_1545 = relay.sin(const_1544.astype('float32')) # shape=(2, 7, 9)
output = relay.Tuple([uop_1545,])
output2 = relay.Tuple([uop_1545,])
func_1547 = relay.Function([], output)
mod['func_1547'] = func_1547
mod = relay.transform.InferType()(mod)
output = func_1547()
func_1548 = relay.Function([], output)
mutated_mod['func_1548'] = func_1548
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1552 = relay.var("var_1552", dtype = "int32", shape = (13, 1, 15))#candidate|1552|(13, 1, 15)|var|int32
var_1553 = relay.var("var_1553", dtype = "int32", shape = (13, 1, 15))#candidate|1553|(13, 1, 15)|var|int32
bop_1554 = relay.bitwise_or(var_1552.astype('int32'), relay.reshape(var_1553.astype('int32'), relay.shape_of(var_1552))) # shape=(13, 1, 15)
output = relay.Tuple([bop_1554,])
output2 = relay.Tuple([bop_1554,])
func_1565 = relay.Function([var_1552,var_1553,], output)
mod['func_1565'] = func_1565
mod = relay.transform.InferType()(mod)
mutated_mod['func_1565'] = func_1565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1565_call = mutated_mod.get_global_var('func_1565')
var_1567 = relay.var("var_1567", dtype = "int32", shape = (13, 1, 15))#candidate|1567|(13, 1, 15)|var|int32
var_1568 = relay.var("var_1568", dtype = "int32", shape = (13, 1, 15))#candidate|1568|(13, 1, 15)|var|int32
call_1566 = func_1565_call(var_1567,var_1568,)
output = call_1566
func_1569 = relay.Function([var_1567,var_1568,], output)
mutated_mod['func_1569'] = func_1569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1547_call = mod.get_global_var('func_1547')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_1587 = relay.TupleGetItem(func_1547_call(), 0)
call_1588 = relay.TupleGetItem(func_1548_call(), 0)
output = relay.Tuple([call_1587,])
output2 = relay.Tuple([call_1588,])
func_1591 = relay.Function([], output)
mod['func_1591'] = func_1591
mod = relay.transform.InferType()(mod)
output = func_1591()
func_1592 = relay.Function([], output)
mutated_mod['func_1592'] = func_1592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1547_call = mod.get_global_var('func_1547')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_1605 = relay.TupleGetItem(func_1547_call(), 0)
call_1606 = relay.TupleGetItem(func_1548_call(), 0)
func_467_call = mod.get_global_var('func_467')
func_469_call = mutated_mod.get_global_var('func_469')
var_1626 = relay.var("var_1626", dtype = "float32", shape = (1050,))#candidate|1626|(1050,)|var|float32
call_1625 = relay.TupleGetItem(func_467_call(relay.reshape(var_1626.astype('float32'), [5, 15, 14])), 0)
call_1627 = relay.TupleGetItem(func_469_call(relay.reshape(var_1626.astype('float32'), [5, 15, 14])), 0)
uop_1639 = relay.cosh(call_1625.astype('float64')) # shape=(5, 15, 14)
uop_1641 = relay.cosh(call_1627.astype('float64')) # shape=(5, 15, 14)
output = relay.Tuple([call_1605,var_1626,uop_1639,])
output2 = relay.Tuple([call_1606,var_1626,uop_1641,])
func_1644 = relay.Function([var_1626,], output)
mod['func_1644'] = func_1644
mod = relay.transform.InferType()(mod)
var_1645 = relay.var("var_1645", dtype = "float32", shape = (1050,))#candidate|1645|(1050,)|var|float32
output = func_1644(var_1645)
func_1646 = relay.Function([var_1645], output)
mutated_mod['func_1646'] = func_1646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1547_call = mod.get_global_var('func_1547')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_1670 = relay.TupleGetItem(func_1547_call(), 0)
call_1671 = relay.TupleGetItem(func_1548_call(), 0)
output = call_1670
output2 = call_1671
func_1672 = relay.Function([], output)
mod['func_1672'] = func_1672
mod = relay.transform.InferType()(mod)
output = func_1672()
func_1673 = relay.Function([], output)
mutated_mod['func_1673'] = func_1673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1591_call = mod.get_global_var('func_1591')
func_1592_call = mutated_mod.get_global_var('func_1592')
call_1683 = relay.TupleGetItem(func_1591_call(), 0)
call_1684 = relay.TupleGetItem(func_1592_call(), 0)
uop_1685 = relay.atanh(call_1683.astype('float32')) # shape=(2, 7, 9)
uop_1687 = relay.atanh(call_1684.astype('float32')) # shape=(2, 7, 9)
output = uop_1685
output2 = uop_1687
func_1689 = relay.Function([], output)
mod['func_1689'] = func_1689
mod = relay.transform.InferType()(mod)
mutated_mod['func_1689'] = func_1689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1689_call = mutated_mod.get_global_var('func_1689')
call_1690 = func_1689_call()
output = call_1690
func_1691 = relay.Function([], output)
mutated_mod['func_1691'] = func_1691
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1692 = relay.var("var_1692", dtype = "float64", shape = (14, 1, 14))#candidate|1692|(14, 1, 14)|var|float64
uop_1693 = relay.cos(var_1692.astype('float64')) # shape=(14, 1, 14)
uop_1695 = relay.cosh(uop_1693.astype('float64')) # shape=(14, 1, 14)
output = relay.Tuple([uop_1695,])
output2 = relay.Tuple([uop_1695,])
func_1700 = relay.Function([var_1692,], output)
mod['func_1700'] = func_1700
mod = relay.transform.InferType()(mod)
mutated_mod['func_1700'] = func_1700
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1701 = relay.var("var_1701", dtype = "float64", shape = (14, 1, 14))#candidate|1701|(14, 1, 14)|var|float64
func_1700_call = mutated_mod.get_global_var('func_1700')
call_1702 = func_1700_call(var_1701)
output = call_1702
func_1703 = relay.Function([var_1701], output)
mutated_mod['func_1703'] = func_1703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1672_call = mod.get_global_var('func_1672')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_1769 = func_1672_call()
call_1770 = func_1672_call()
uop_1771 = relay.acosh(call_1769.astype('float64')) # shape=(2, 7, 9)
uop_1773 = relay.acosh(call_1770.astype('float64')) # shape=(2, 7, 9)
uop_1774 = relay.cosh(uop_1771.astype('float32')) # shape=(2, 7, 9)
uop_1776 = relay.cosh(uop_1773.astype('float32')) # shape=(2, 7, 9)
func_690_call = mod.get_global_var('func_690')
func_694_call = mutated_mod.get_global_var('func_694')
const_1783 = relay.const(-9, dtype = "uint64")#candidate|1783|()|const|uint64
var_1784 = relay.var("var_1784", dtype = "uint64", shape = (192,))#candidate|1784|(192,)|var|uint64
call_1782 = relay.TupleGetItem(func_690_call(relay.reshape(const_1783.astype('uint64'), []), relay.reshape(var_1784.astype('uint64'), [16, 2, 6]), ), 0)
call_1785 = relay.TupleGetItem(func_694_call(relay.reshape(const_1783.astype('uint64'), []), relay.reshape(var_1784.astype('uint64'), [16, 2, 6]), ), 0)
output = relay.Tuple([uop_1774,call_1782,const_1783,var_1784,])
output2 = relay.Tuple([uop_1776,call_1785,const_1783,var_1784,])
func_1786 = relay.Function([var_1784,], output)
mod['func_1786'] = func_1786
mod = relay.transform.InferType()(mod)
mutated_mod['func_1786'] = func_1786
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1787 = relay.var("var_1787", dtype = "uint64", shape = (192,))#candidate|1787|(192,)|var|uint64
func_1786_call = mutated_mod.get_global_var('func_1786')
call_1788 = func_1786_call(var_1787)
output = call_1788
func_1789 = relay.Function([var_1787], output)
mutated_mod['func_1789'] = func_1789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1591_call = mod.get_global_var('func_1591')
func_1592_call = mutated_mod.get_global_var('func_1592')
call_1797 = relay.TupleGetItem(func_1591_call(), 0)
call_1798 = relay.TupleGetItem(func_1592_call(), 0)
func_1786_call = mod.get_global_var('func_1786')
func_1789_call = mutated_mod.get_global_var('func_1789')
var_1800 = relay.var("var_1800", dtype = "uint64", shape = (8, 24))#candidate|1800|(8, 24)|var|uint64
call_1799 = relay.TupleGetItem(func_1786_call(relay.reshape(var_1800.astype('uint64'), [192,])), 0)
call_1801 = relay.TupleGetItem(func_1789_call(relay.reshape(var_1800.astype('uint64'), [192,])), 0)
uop_1806 = relay.sqrt(var_1800.astype('float64')) # shape=(8, 24)
output = relay.Tuple([call_1797,call_1799,uop_1806,])
output2 = relay.Tuple([call_1798,call_1801,uop_1806,])
func_1812 = relay.Function([var_1800,], output)
mod['func_1812'] = func_1812
mod = relay.transform.InferType()(mod)
var_1813 = relay.var("var_1813", dtype = "uint64", shape = (8, 24))#candidate|1813|(8, 24)|var|uint64
output = func_1812(var_1813)
func_1814 = relay.Function([var_1813], output)
mutated_mod['func_1814'] = func_1814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1591_call = mod.get_global_var('func_1591')
func_1592_call = mutated_mod.get_global_var('func_1592')
call_1816 = relay.TupleGetItem(func_1591_call(), 0)
call_1817 = relay.TupleGetItem(func_1592_call(), 0)
output = call_1816
output2 = call_1817
func_1828 = relay.Function([], output)
mod['func_1828'] = func_1828
mod = relay.transform.InferType()(mod)
mutated_mod['func_1828'] = func_1828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1828_call = mutated_mod.get_global_var('func_1828')
call_1829 = func_1828_call()
output = call_1829
func_1830 = relay.Function([], output)
mutated_mod['func_1830'] = func_1830
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1831 = relay.const([[[9,-7,5,-2,-2,7,-1,5,-5,-7,-9,-6,9],[-3,4,-5,5,4,8,5,4,5,9,1,-8,-3],[-5,3,2,-9,8,-9,-5,-3,7,-2,-9,8,8],[2,-8,-3,3,9,2,2,-1,2,-2,-9,-4,1],[8,3,-9,-2,-1,-1,10,2,7,3,4,4,-2],[-4,3,-4,-5,7,-4,-10,-5,-9,-9,9,4,-4],[7,6,-10,-10,8,-4,-10,4,1,9,4,-10,-9],[-1,-9,3,4,7,-10,8,10,-10,4,-4,-9,-8],[-1,6,-7,6,3,-6,-9,-2,10,8,2,2,-1],[9,-1,10,9,-5,4,-4,1,5,-3,-10,7,-6],[-3,4,-7,3,-4,-4,-1,-9,8,-4,-5,10,4],[-2,-5,9,-7,1,8,3,-9,4,6,6,7,5]],[[-9,-10,3,5,8,-8,-6,10,5,5,10,5,-3],[2,-3,3,-3,4,-5,-6,2,10,2,-4,-3,2],[-8,-1,-10,-2,3,-2,8,-2,4,8,1,5,-7],[-2,-8,6,-3,-9,-4,-3,-4,-1,2,5,-1,-3],[-10,8,7,-10,6,3,4,2,10,-3,10,-9,9],[-10,1,-5,-2,-10,6,-4,-7,4,8,9,1,4],[-8,-6,1,7,9,-2,-8,-8,4,7,-8,3,6],[3,6,1,-4,-2,2,6,-3,2,3,-6,-3,-8],[-3,-6,5,-8,-9,-6,3,10,9,-9,-4,-4,1],[6,4,-5,-5,7,4,-4,4,8,9,-5,1,1],[-4,-4,6,9,4,-6,-6,-2,10,-3,-5,4,-6],[10,-2,7,-7,-1,3,-4,5,-7,-5,-1,-2,-9]],[[-5,10,-1,-3,3,-1,2,-5,1,9,9,6,4],[1,2,-2,-5,2,-5,1,4,-8,3,1,-3,9],[-6,-8,-2,8,-10,-5,-3,1,2,5,3,4,7],[9,6,5,-2,-4,-3,10,-1,8,-2,3,2,-1],[1,8,-1,-1,-6,-8,-9,-5,-3,8,2,1,5],[-7,3,-2,3,4,9,-10,-2,-3,1,5,-5,-1],[9,8,-7,10,4,4,-2,-1,6,5,-10,-10,8],[-6,-8,-9,-8,-10,-3,2,-2,5,7,-8,7,-8],[4,5,-3,7,7,-8,-5,7,1,-5,8,-1,-6],[-5,-2,8,-2,10,-6,-1,-2,-8,-7,5,6,3],[10,10,-10,-6,9,8,1,-1,4,-9,-10,5,4],[7,10,6,3,5,-1,8,7,5,4,4,-7,8]],[[2,7,1,-5,-4,-10,-5,2,8,-7,-6,4,8],[1,2,5,1,9,-5,-5,-3,8,2,7,-2,8],[9,-9,9,-4,-7,5,8,2,-8,2,3,-3,-2],[6,5,1,5,10,-9,-7,3,6,7,5,-4,7],[9,-4,-10,-6,-6,8,-8,-7,7,3,5,-3,7],[8,-7,3,-6,-10,9,3,2,7,4,-4,8,-10],[9,7,-1,1,3,5,-1,6,-10,3,10,9,6],[4,-5,8,6,-3,-2,5,6,-5,-7,-7,1,7],[2,5,3,3,-4,3,-6,-6,-9,-4,-5,4,-1],[6,-2,3,-1,3,10,2,-7,-5,-9,3,-4,-5],[-7,10,1,-10,-9,7,3,-1,-6,-8,-8,-5,-4],[5,5,-8,10,-2,3,1,7,9,-8,5,-5,-4]],[[-8,10,-9,-3,-6,9,-8,-4,-5,3,3,-3,4],[4,3,-2,8,4,-8,2,-7,-7,-3,7,6,-3],[-4,1,-6,-9,4,1,-5,1,-1,7,-5,-4,5],[-10,1,-1,10,5,8,7,5,-6,-5,6,-10,-6],[7,-7,1,-5,-1,-9,10,-8,-8,-10,5,3,-1],[-7,-2,-7,-3,1,-2,-8,5,-5,-1,-3,8,-2],[-9,2,-4,2,2,-4,4,8,-2,-10,-4,-1,-5],[-4,8,-5,-8,7,-6,9,8,10,7,-9,-4,5],[3,-1,-10,1,-10,7,3,-2,-4,-4,2,-6,4],[7,6,4,-10,8,-1,-10,-5,-8,2,9,9,-8],[-9,-10,-2,9,-1,-7,-9,2,6,-8,8,1,-6],[-6,4,-5,-8,6,-6,-10,-7,9,-4,3,-3,-2]],[[8,1,-6,8,10,-4,10,10,2,-4,-9,-4,-4],[-4,1,7,1,-3,6,-8,-7,-5,-10,-5,-7,5],[2,8,10,2,-9,-1,1,-9,7,1,10,3,3],[6,8,5,-3,-5,-8,-4,-8,-9,-9,5,-8,2],[-4,-1,4,8,-1,4,-9,-6,-8,4,-3,4,-3],[-2,7,2,10,2,-3,7,-5,-7,-10,3,-1,-3],[-2,-8,7,-8,3,-10,3,8,2,9,8,6,-9],[5,6,4,-6,10,4,2,8,-2,-1,7,10,5],[-2,-6,-7,-10,-9,-8,-1,-2,8,4,-3,-7,1],[-2,-9,-8,5,3,3,5,-10,-8,-1,7,4,7],[2,-6,7,-3,-2,-9,-3,8,-6,9,-6,-8,-9],[8,6,3,-9,-10,-6,3,4,-4,6,4,-7,-9]]], dtype = "int64")#candidate|1831|(6, 12, 13)|const|int64
const_1832 = relay.const([[[6,-2,-9,9,-8,1,-9,2,-2,8,5,10,10],[5,-1,3,-7,8,-1,-9,5,-6,1,-8,8,-6],[-9,-3,8,-10,-5,6,10,-9,3,10,9,2,4],[1,-3,7,3,-10,7,10,7,-5,2,-7,-1,-2],[-3,-2,-4,10,-2,-1,8,6,3,9,-3,-6,10],[9,10,-4,8,3,1,-9,-2,-5,-2,-6,-10,3],[-1,10,2,-5,-5,-7,-4,-2,6,7,-4,8,5],[8,-1,1,-10,5,4,-6,8,-9,6,7,-7,-9],[7,4,1,9,5,-6,-5,-8,-9,-6,-10,9,-8],[-9,3,3,-3,-5,-1,8,6,-2,3,10,6,8],[10,-3,6,-5,-10,-8,-7,9,9,5,-9,6,7],[-5,1,9,1,-4,-6,5,-7,-8,7,-4,5,2]],[[6,-8,-4,-6,-4,-10,8,1,3,7,10,6,-3],[2,8,3,-1,-7,-2,2,9,-3,6,-1,10,8],[-7,5,-5,-9,-2,8,-1,-8,7,1,4,5,7],[-8,7,-7,2,-4,3,-1,6,-6,-2,2,-6,7],[6,-9,-7,-10,-7,-9,-2,-6,-6,8,6,-1,-10],[-10,-5,-6,1,1,-4,-4,-9,10,6,6,4,-6],[-10,1,-9,8,-1,4,-2,10,6,-7,-7,-6,-4],[6,8,10,-10,-10,5,-4,2,8,3,-2,-2,-5],[7,-1,-6,10,-1,-2,5,-2,9,7,-4,-7,-3],[-5,9,3,1,-6,-2,-1,-9,4,4,-4,-1,-4],[6,-1,2,3,6,-7,9,-8,-2,-4,1,-4,-3],[7,1,-1,7,-7,8,2,5,4,5,-7,-10,-9]],[[-8,-5,-3,-8,-6,-1,-9,-3,8,4,3,1,8],[6,-10,9,7,-10,-8,7,7,8,8,-4,5,2],[-4,7,-1,-1,7,1,-4,8,-9,-6,5,-4,-5],[9,-6,9,4,-3,-8,-7,4,3,-9,2,6,-8],[-3,-1,-9,-8,1,-5,5,3,-4,-10,-8,-8,2],[9,-7,-8,-7,9,-9,-3,6,9,-7,5,-3,-10],[8,10,-8,-9,-3,-3,5,-8,-1,-7,8,6,-8],[-7,-6,2,4,5,8,-7,8,-3,4,-7,2,-1],[2,6,-8,1,-9,-9,4,7,5,-6,3,-6,-1],[-9,-1,-3,-8,2,-1,4,-9,-5,7,6,-3,7],[-2,-3,7,7,-2,10,-9,-8,9,-10,-4,-1,6],[-5,10,7,6,-6,-9,3,-3,-3,-7,-3,-2,-5]],[[2,1,3,-9,9,-4,3,10,-3,7,-5,-8,-1],[9,8,2,-9,-9,9,5,3,5,-1,10,-7,10],[7,-4,-3,-4,8,2,-10,-10,-9,9,4,8,6],[-9,-6,4,-1,2,5,6,1,-1,-10,-10,-3,3],[-10,3,10,10,3,7,-4,9,-4,-3,6,6,2],[-7,6,4,-2,3,-1,5,-6,-9,3,10,-2,6],[6,5,9,-4,-3,-2,-7,4,7,3,4,-6,9],[-8,-8,10,6,3,-9,-2,-7,-5,9,-4,1,-2],[9,-5,5,-9,8,8,-7,1,7,-6,10,-9,-3],[7,-10,8,-8,-6,-6,7,-6,-10,-5,-9,-8,9],[6,-7,2,-2,5,-2,3,-8,-4,-7,-10,-5,9],[9,9,-7,7,4,8,-4,6,-7,-3,-9,10,9]],[[-2,6,10,-3,5,-6,2,6,5,-4,-3,3,-6],[2,10,-5,-10,6,-8,9,-8,10,4,-3,-5,4],[-8,3,-9,1,10,2,8,-10,-8,4,1,-8,-9],[5,-8,1,6,-3,2,-4,9,-2,5,-5,-8,-1],[-2,-7,-9,-6,-1,-6,-2,-2,10,-7,-2,-8,-1],[-2,-10,2,-3,3,-9,-1,-6,9,-6,4,-7,-7],[-10,-7,-7,-1,-3,9,10,-10,-2,3,-1,-8,3],[3,3,-8,6,-5,8,8,-9,-9,-10,1,-3,-2],[7,9,9,8,5,-6,-3,2,7,3,8,6,-3],[1,-3,10,2,8,3,-5,5,-9,-10,-2,-10,4],[8,-7,-9,9,-3,2,8,7,7,10,-3,10,10],[2,-6,-8,-8,-7,5,-9,-3,-4,-10,-2,4,8]],[[-3,-5,-2,-2,5,5,5,8,-8,-8,7,-1,4],[-5,9,8,-4,6,-9,-4,-6,-6,1,-3,-3,1],[5,-9,9,-7,-7,-2,-5,-9,-5,-9,-2,-4,-10],[-3,1,5,5,-3,9,-3,-3,9,1,2,-1,-9],[-5,9,1,10,-5,6,-10,4,-10,-8,-4,-3,-7],[1,8,-2,-2,-8,-10,-4,5,6,-2,-7,-9,-7],[1,8,-7,-5,-10,7,7,-6,6,-3,4,6,-2],[-8,7,-6,7,8,4,8,2,5,-1,-8,2,7],[1,-2,8,5,-9,-6,4,10,-9,3,6,-3,-10],[-3,2,-8,3,7,-2,-5,-3,7,6,7,-8,1],[10,-10,-4,-3,-10,3,-3,-5,3,5,-2,5,-10],[7,3,-3,-1,3,5,-4,-7,10,-7,4,-4,8]]], dtype = "int64")#candidate|1832|(6, 12, 13)|const|int64
bop_1833 = relay.bitwise_and(const_1831.astype('int64'), relay.reshape(const_1832.astype('int64'), relay.shape_of(const_1831))) # shape=(6, 12, 13)
uop_1843 = relay.asin(const_1831.astype('float32')) # shape=(6, 12, 13)
bop_1861 = relay.less(const_1831.astype('bool'), relay.reshape(bop_1833.astype('bool'), relay.shape_of(const_1831))) # shape=(6, 12, 13)
func_1565_call = mod.get_global_var('func_1565')
func_1569_call = mutated_mod.get_global_var('func_1569')
var_1871 = relay.var("var_1871", dtype = "int32", shape = (195, 1))#candidate|1871|(195, 1)|var|int32
call_1870 = relay.TupleGetItem(func_1565_call(relay.reshape(var_1871.astype('int32'), [13, 1, 15]), relay.reshape(var_1871.astype('int32'), [13, 1, 15]), ), 0)
call_1872 = relay.TupleGetItem(func_1569_call(relay.reshape(var_1871.astype('int32'), [13, 1, 15]), relay.reshape(var_1871.astype('int32'), [13, 1, 15]), ), 0)
output = relay.Tuple([uop_1843,bop_1861,call_1870,var_1871,])
output2 = relay.Tuple([uop_1843,bop_1861,call_1872,var_1871,])
func_1878 = relay.Function([var_1871,], output)
mod['func_1878'] = func_1878
mod = relay.transform.InferType()(mod)
var_1879 = relay.var("var_1879", dtype = "int32", shape = (195, 1))#candidate|1879|(195, 1)|var|int32
output = func_1878(var_1879)
func_1880 = relay.Function([var_1879], output)
mutated_mod['func_1880'] = func_1880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1547_call = mod.get_global_var('func_1547')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_1945 = relay.TupleGetItem(func_1547_call(), 0)
call_1946 = relay.TupleGetItem(func_1548_call(), 0)
func_814_call = mod.get_global_var('func_814')
func_817_call = mutated_mod.get_global_var('func_817')
var_1948 = relay.var("var_1948", dtype = "float32", shape = (210,))#candidate|1948|(210,)|var|float32
call_1947 = func_814_call(relay.reshape(var_1948.astype('float32'), [3, 14, 5]))
call_1949 = func_814_call(relay.reshape(var_1948.astype('float32'), [3, 14, 5]))
uop_1957 = relay.sigmoid(call_1945.astype('float32')) # shape=(2, 7, 9)
uop_1959 = relay.sigmoid(call_1946.astype('float32')) # shape=(2, 7, 9)
output = relay.Tuple([call_1947,var_1948,uop_1957,])
output2 = relay.Tuple([call_1949,var_1948,uop_1959,])
func_1972 = relay.Function([var_1948,], output)
mod['func_1972'] = func_1972
mod = relay.transform.InferType()(mod)
mutated_mod['func_1972'] = func_1972
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1973 = relay.var("var_1973", dtype = "float32", shape = (210,))#candidate|1973|(210,)|var|float32
func_1972_call = mutated_mod.get_global_var('func_1972')
call_1974 = func_1972_call(var_1973)
output = call_1974
func_1975 = relay.Function([var_1973], output)
mutated_mod['func_1975'] = func_1975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1672_call = mod.get_global_var('func_1672')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_1986 = func_1672_call()
call_1987 = func_1672_call()
uop_2002 = relay.exp(call_1986.astype('float64')) # shape=(2, 7, 9)
uop_2004 = relay.exp(call_1987.astype('float64')) # shape=(2, 7, 9)
func_1644_call = mod.get_global_var('func_1644')
func_1646_call = mutated_mod.get_global_var('func_1646')
const_2008 = relay.const([[-5.850692,1.169946,0.439779,-1.652302,9.648417,-6.118850,-2.020809,-6.404297,-9.501139,1.800970,-7.885848,1.332890,-2.948440,4.867366,8.195702,9.960187,0.941408,-5.151716,2.362740,0.618058,-6.854360,7.639270,0.023363,-6.813343,-7.959895,-9.646049,7.042919,4.367506,-4.224806,-9.517059,1.919475,8.257954,-7.840358,1.617737,-5.423433,9.236945,6.995643,6.750862,-5.973382,-6.739026,-4.028077,6.621637,-9.462668,7.235587,0.093174,9.019636,7.356637,9.535396,-0.061332,-8.341544,-1.919356,-5.442385,-6.759514,-6.283540,7.836622,4.224772,8.550866,5.529016,1.118382,-8.060385,-9.025790,-8.709761,-2.464695,-2.995298,-5.047346,-1.669090,-7.544717,-3.491339,-0.446123,7.537773,-2.065419,4.192227,6.996476,8.599747,0.854100,8.475781,8.733576,-5.280325,6.408488,2.495109,5.154120,-1.375624,-2.524542,-1.480443,3.645117,-2.078687,-4.805580,6.864916,-7.249783,-8.554630,-6.000759,1.332892,0.513632,-2.409989,-6.423850,3.836045,9.785419,3.829849,-9.409394,-8.948072,6.792972,3.117344,8.827041,7.437941,-4.965005],[5.063381,2.581458,-7.723809,-9.559708,-6.662911,-7.316673,-1.372455,0.847707,6.017203,2.049609,-0.095650,-8.308311,-0.533417,-9.827025,3.628925,-3.807569,-5.820546,-7.784833,-4.939417,5.468746,6.579705,-9.678288,7.676809,-9.442458,-6.712488,-2.456472,-1.928057,-3.974122,-6.539089,7.926258,8.075476,7.927394,5.312665,0.152762,-7.185130,-9.265529,-9.839488,-2.643735,4.114120,2.285349,-2.409588,-5.790938,-7.245075,-3.302551,1.363798,3.300811,5.790019,-4.913637,-9.732745,-5.345025,-8.121971,-5.167998,-2.034623,-9.306886,2.594674,7.723499,-7.114654,1.936592,-6.140134,1.470086,5.885552,1.336625,8.128959,1.988413,6.406149,0.146389,1.562969,-0.912349,-2.701112,4.535418,-2.864416,5.118824,-4.455342,-1.726530,-8.709180,-3.166227,-0.560724,-7.295630,-2.742263,2.381556,-6.909713,6.906876,-4.009405,0.030423,2.338462,5.454455,5.818642,-4.465156,5.426977,-9.541633,-6.324130,9.498356,-5.666045,9.049742,8.903100,-3.179360,1.193718,3.244292,-2.545566,-7.624538,8.024120,4.215295,-2.236209,-0.497997,-2.038035],[-2.675541,-0.542473,4.652071,2.976416,9.045077,1.011492,-6.136198,2.131619,8.224642,-0.636457,6.171688,6.822635,-6.400764,-4.045996,7.170700,-2.250005,-5.335009,0.906231,6.515269,-4.987505,5.221184,6.793835,-5.663182,-3.923815,-4.566409,8.351515,-7.015594,-1.984132,-6.443618,-9.964220,-3.830535,3.691697,5.277460,-5.612962,-4.695830,3.179605,4.142738,2.925367,2.375256,3.832382,7.471060,-1.956790,8.544389,-7.015010,4.840760,9.006454,0.078236,-1.146235,4.285336,-6.625050,9.634870,3.798609,-5.212310,-8.334479,-9.063884,8.557352,-1.069256,-3.920918,-7.769189,-8.315172,6.597513,5.992943,-8.321986,0.435632,6.047379,6.854932,0.929076,8.617240,-2.724310,1.309791,3.305894,-9.360546,-3.606800,5.292460,0.912880,3.655918,5.448506,-6.591989,-7.790179,2.499483,2.133535,7.859552,2.552648,-3.215889,-2.325327,5.354364,-3.854152,-3.406308,-5.567409,5.455485,2.450352,-9.902113,-7.754468,-2.658278,-8.443042,-4.562536,6.638049,-4.254656,-9.555680,-8.653221,-1.301164,-9.736908,7.540302,-5.405266,-4.095354],[8.228892,-4.046036,-7.076936,-5.923021,6.599236,-5.204469,-8.943173,2.013025,-8.220554,4.145118,9.957931,-5.870090,-0.037937,-6.194950,5.830074,9.494592,-8.130498,-1.690112,-1.942995,6.907205,5.866807,4.759528,3.139325,-5.337226,-2.087169,-0.731919,-0.836891,4.068884,-2.028441,0.176436,-9.336628,8.590510,-7.328751,3.328004,-4.943445,-9.710517,-8.704427,-7.926226,6.694592,3.137249,-6.732800,8.522083,7.217037,-2.117072,-0.120894,9.980528,-4.714868,6.000727,4.688134,1.237064,9.172967,1.220667,5.369380,-5.858781,3.533403,-0.711532,1.365852,-1.956855,-3.683650,1.627715,-5.128360,5.818230,2.581402,2.924566,9.457192,-8.234093,-9.388342,-9.561498,6.476164,-6.403529,-8.848078,2.437789,-8.647275,-3.133276,-4.546851,9.296011,1.105503,9.623993,7.380353,8.241166,2.360323,-1.066027,9.648823,1.336172,8.472978,5.636730,-6.814551,7.599666,-3.406632,8.179346,1.618454,7.433597,2.050501,2.619784,6.915673,9.640282,3.854024,6.785127,-2.712887,2.322927,-1.639785,1.836471,1.736532,-2.374176,8.066406],[-2.883236,-2.217692,0.404967,-2.612925,0.250948,6.920022,-5.564725,-6.201728,1.196346,-1.700401,-7.042864,-8.824923,3.633364,-9.951695,6.729317,1.147244,5.099416,-2.292855,2.043108,0.350003,-6.970957,8.387377,0.562874,-5.039330,-9.064903,-2.096341,-4.317722,9.592824,-3.420361,7.904410,0.225160,-7.929332,-9.683329,2.671020,1.378039,-0.023733,2.210597,0.786095,4.099632,4.301679,-4.734669,-2.807307,-7.992863,5.580624,-4.841508,0.208223,5.181823,-6.354114,-1.862707,-9.598364,-2.912151,9.535627,-9.949336,8.632790,9.174718,-7.486305,-2.787504,-9.499357,-4.159783,5.940497,-0.607768,-8.640868,-7.278940,7.561809,-9.591305,5.347150,9.197519,-4.141351,6.732614,5.245154,-9.679501,-3.411433,3.654968,-9.324047,-1.737894,-6.537588,-0.897751,8.128109,8.067375,6.014244,-8.171371,-7.041123,9.415933,5.739435,-0.087916,3.045672,-2.554727,9.019283,-0.200840,1.120059,-9.989109,2.361850,-3.257114,4.693529,-5.062860,0.906621,7.007263,-5.067045,-0.518157,7.441402,-1.478255,-4.252976,8.512684,-0.054366,8.728311],[-7.664817,0.786446,-6.044070,-7.137112,0.164900,-4.961736,7.039722,9.450831,-9.680487,-5.110633,-3.790847,4.667996,2.622911,3.399194,-7.349400,-8.770839,-7.401374,4.867078,2.867232,-3.762057,-5.778967,-3.038710,2.442582,6.835593,0.766556,4.012362,-4.052237,-2.099586,3.965595,-7.234634,-1.605308,9.345212,-3.954336,9.795139,-6.864476,9.093146,-1.486664,0.901009,4.169160,-0.524066,-7.575742,-0.967116,-6.702782,-8.513492,-6.783102,7.730674,3.272572,1.231503,6.554076,-9.109844,0.577180,-1.097726,2.691856,9.990725,-7.046402,6.989234,5.742356,-6.222568,7.673939,-0.883636,3.902224,-1.823746,-8.482151,-8.699462,4.404134,6.401818,-8.788041,-5.540553,0.963921,-5.232985,6.747037,-8.312511,-0.299480,-8.698946,-3.330558,8.056419,6.066630,-8.441946,-2.407222,6.655786,3.380683,-4.221938,6.899431,4.451432,-9.659355,-6.714241,-2.245630,-3.537409,2.572158,-8.163407,2.827573,9.692214,7.317406,-8.544555,9.521873,0.203210,3.736264,-9.101164,2.533444,0.592970,-3.015385,2.083168,0.531576,1.660761,8.191313],[-2.046258,5.971370,4.644752,4.035104,-3.747355,7.524939,-8.513892,4.313746,1.185119,-4.466160,-8.461794,6.534688,2.304124,-2.743656,7.732996,-1.490532,-5.158564,-1.006890,6.496919,-8.101480,-0.863645,2.953751,-0.438294,6.545898,1.145210,-4.030688,-4.744828,-1.148133,-9.791636,-3.676156,-6.475490,6.779722,8.335081,-5.336464,-4.512297,-7.649753,-1.193371,9.203166,9.480163,8.118309,-8.828176,-2.090031,9.179989,3.803450,3.335480,8.036600,-8.912226,8.062578,-8.879461,-0.371991,-1.469508,3.929385,1.623323,4.344440,-5.146414,4.918050,-9.827151,0.222133,-6.584682,-8.583221,8.121005,7.034483,-2.160436,8.747455,-2.823250,7.082167,-6.428313,-3.717253,0.340969,-3.968646,-3.947903,5.656627,-9.861050,-8.513810,6.878651,-1.254754,-1.376327,-4.265359,-5.004694,-7.197762,-8.027675,9.432222,-7.255233,-6.354958,1.793770,9.139540,-9.211796,1.019914,-7.536871,-5.191511,-2.190781,-1.155636,-3.456090,6.439412,-8.112531,-9.903762,-3.572775,7.231351,4.721425,-4.473642,8.369098,-8.973124,-8.949130,-8.376539,6.231710],[-7.730386,0.817798,-7.018813,-8.928098,4.859382,4.840737,6.471518,5.411162,6.491427,-9.904233,-1.226635,5.532428,5.628197,-3.754746,-1.456625,-0.322298,3.771002,5.995358,-7.279443,3.936312,-5.286950,8.480630,-2.735603,1.951515,2.324587,-9.419001,2.618519,-9.125564,7.629509,-1.710179,-7.757869,3.144063,-3.644756,0.815258,-6.241338,-1.183450,-4.399155,-8.805889,7.887303,-2.579019,2.446283,-8.993804,-9.801909,8.448758,2.532262,-6.222789,9.956651,8.994955,-5.990056,-0.403876,0.672786,-1.174892,-1.171943,3.583392,-5.239755,-6.252564,-1.328901,-7.912832,4.982550,-9.917324,9.299940,-3.920930,-8.689377,-7.201411,-5.506802,0.198850,-9.871750,8.272485,-4.322683,-0.355575,-0.886588,-3.063835,1.289626,-6.964755,0.695910,2.425910,9.015555,9.113264,2.683306,-9.215647,-2.417180,3.979550,2.390545,2.905673,3.024768,-6.128916,-4.822745,-0.355185,8.739291,-8.586828,-4.434034,0.253782,1.690457,7.983478,1.771775,-9.753542,-9.914391,-6.186848,5.010749,5.266755,5.378106,-4.696008,5.254662,5.786859,7.421487],[6.641014,4.866259,2.653871,6.711156,1.224422,5.936583,-8.183547,3.397258,7.871190,-9.158713,-0.157097,9.685985,3.258969,4.585779,8.936841,-9.000999,-7.246278,-8.321999,-2.498658,6.630003,-0.515463,7.480468,-9.426373,5.279964,1.388541,-4.605318,6.541455,6.373401,-5.507820,3.001686,3.747833,-3.388238,4.276385,-1.844289,-5.673707,3.131617,-7.586833,8.603883,0.270950,-3.532780,-3.717950,-9.357212,-0.948137,-6.038944,5.832509,6.004675,8.905116,-6.803351,-6.477533,-9.176593,-1.960747,2.727493,7.328589,3.820338,1.113218,4.628353,6.413513,3.228254,1.784745,-2.607129,6.269546,-0.090910,-4.474484,2.399573,0.758931,5.393242,3.803242,-6.256114,-7.666973,4.175633,1.243436,0.919293,0.525780,2.641566,6.425764,2.708828,3.328254,6.619250,-4.437683,-8.320157,6.506129,-0.244764,-8.716335,2.401243,-0.587754,-7.053800,3.192863,-8.322730,-1.810250,-4.192599,-0.873958,-9.281501,3.752814,9.513577,-6.309104,9.745640,7.937775,-3.659598,-0.309930,-4.913243,-2.351580,-5.650571,8.151081,-7.199510,-8.115718],[8.041418,-2.954420,-7.652113,0.649340,-6.619831,3.569470,2.280080,6.902859,-6.116666,4.144260,-9.945036,4.617685,-2.107042,-0.037481,-1.487077,6.247267,5.726535,8.752327,8.955798,3.855101,-2.422313,7.533706,6.604939,3.893807,-5.616914,7.588998,8.268384,4.114097,1.414818,-1.534945,3.697392,1.435267,-6.401128,-7.928953,2.412387,9.996774,2.225793,-8.322389,8.847429,-1.267812,-7.990618,-6.022799,3.781145,9.611088,1.805893,-8.555283,6.533161,0.128880,8.696061,2.724400,2.215032,-2.509474,5.246060,-6.089472,2.464638,-2.157367,-7.208560,8.677017,0.451272,-9.354757,-3.504868,4.546865,-2.176561,7.802754,-7.973762,-7.303556,9.617307,-8.264882,6.457623,8.277256,-0.913709,6.525708,1.987435,-2.164643,4.288983,6.914639,6.542352,-3.876840,-2.662849,6.642551,-0.886160,-3.845040,9.698007,5.406948,7.146981,8.178878,-0.860560,-3.729564,2.462772,-3.559756,7.306886,-3.095714,-9.598661,-1.974032,7.672501,-6.946283,-6.990121,8.593278,2.246359,-1.064765,-1.149427,-9.393318,-6.661291,-8.511031,5.824195]], dtype = "float32")#candidate|2008|(10, 105)|const|float32
call_2007 = relay.TupleGetItem(func_1644_call(relay.reshape(const_2008.astype('float32'), [1050,])), 0)
call_2009 = relay.TupleGetItem(func_1646_call(relay.reshape(const_2008.astype('float32'), [1050,])), 0)
output = relay.Tuple([uop_2002,call_2007,const_2008,])
output2 = relay.Tuple([uop_2004,call_2009,const_2008,])
func_2012 = relay.Function([], output)
mod['func_2012'] = func_2012
mod = relay.transform.InferType()(mod)
mutated_mod['func_2012'] = func_2012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2012_call = mutated_mod.get_global_var('func_2012')
call_2013 = func_2012_call()
output = call_2013
func_2014 = relay.Function([], output)
mutated_mod['func_2014'] = func_2014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1828_call = mod.get_global_var('func_1828')
func_1830_call = mutated_mod.get_global_var('func_1830')
call_2030 = func_1828_call()
call_2031 = func_1828_call()
output = call_2030
output2 = call_2031
func_2043 = relay.Function([], output)
mod['func_2043'] = func_2043
mod = relay.transform.InferType()(mod)
output = func_2043()
func_2044 = relay.Function([], output)
mutated_mod['func_2044'] = func_2044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2043_call = mod.get_global_var('func_2043')
func_2044_call = mutated_mod.get_global_var('func_2044')
call_2047 = func_2043_call()
call_2048 = func_2043_call()
output = call_2047
output2 = call_2048
func_2073 = relay.Function([], output)
mod['func_2073'] = func_2073
mod = relay.transform.InferType()(mod)
mutated_mod['func_2073'] = func_2073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2073_call = mutated_mod.get_global_var('func_2073')
call_2074 = func_2073_call()
output = call_2074
func_2075 = relay.Function([], output)
mutated_mod['func_2075'] = func_2075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1547_call = mod.get_global_var('func_1547')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_2099 = relay.TupleGetItem(func_1547_call(), 0)
call_2100 = relay.TupleGetItem(func_1548_call(), 0)
func_2012_call = mod.get_global_var('func_2012')
func_2014_call = mutated_mod.get_global_var('func_2014')
call_2104 = relay.TupleGetItem(func_2012_call(), 0)
call_2105 = relay.TupleGetItem(func_2014_call(), 0)
func_1700_call = mod.get_global_var('func_1700')
func_1703_call = mutated_mod.get_global_var('func_1703')
const_2112 = relay.const([[3.807660],[6.976030],[-5.695303],[-5.116054],[2.261617],[-8.209383],[1.073321],[9.942820],[3.316843],[4.803506],[-0.877226],[-4.083919],[-6.233646],[4.744654],[-5.359750],[9.937046],[-4.166888],[-2.349315],[9.636679],[-2.488854],[8.186114],[8.742668],[5.550339],[9.050458],[-2.491506],[6.770487],[-7.457519],[-1.706888],[8.572820],[4.000155],[-9.697667],[5.093767],[0.597920],[-3.162412],[-9.870487],[5.600970],[7.231000],[7.503725],[-1.807282],[1.434436],[6.890535],[3.486800],[-5.274478],[-9.712154],[3.032244],[4.334474],[5.298026],[-3.932624],[8.517095],[2.667198],[3.708889],[0.038885],[9.644420],[2.837548],[3.352087],[-4.376648],[7.224283],[-7.808412],[-5.730570],[4.753940],[-6.189992],[5.476720],[7.598619],[0.072911],[-2.029352],[7.488326],[0.544622],[-6.000047],[4.787783],[-3.137518],[6.754621],[2.446850],[-0.234723],[-0.093089],[-9.966949],[-1.784253],[5.756684],[-9.131820],[2.751171],[9.927167],[-1.625882],[-6.916168],[8.626911],[-8.737777],[-7.964757],[7.014773],[-6.080629],[4.983472],[-3.918001],[1.329247],[8.202116],[0.068892],[8.115829],[-5.771512],[1.368364],[1.418199],[-5.345398],[-5.836070],[-4.190604],[-2.819601],[7.367066],[-1.468028],[-9.886560],[7.259681],[-5.250071],[8.314556],[-0.203778],[-0.672784],[5.562220],[7.144686],[-6.698475],[-7.079159],[-4.841165],[-0.416946],[-8.971607],[9.616124],[-4.420482],[1.025121],[4.044278],[2.972403],[8.442408],[-0.787918],[1.822366],[2.479484],[8.697097],[-7.191174],[1.641904],[-5.016050],[8.840968],[6.022235],[0.682306],[5.010372],[-9.367673],[-7.858614],[4.185323],[7.129049],[-1.564550],[6.657139],[-5.888136],[-8.015204],[9.113078],[1.065086],[-1.412477],[-4.159523],[-5.368768],[4.498756],[-7.419816],[7.204048],[1.011990],[4.437270],[9.153197],[2.896019],[-8.330492],[-2.134393],[7.346928],[-4.552642],[9.438371],[-8.055490],[2.687047],[6.896036],[-7.406667],[8.547217],[0.545463],[7.498609],[-7.029645],[-4.613683],[-8.836026],[8.706797],[-8.474280],[0.252155],[8.128248],[-8.045859],[-7.744616],[-2.190731],[5.903821],[3.584302],[-0.692543],[-5.288490],[-9.800237],[-3.169528],[-0.053348],[-8.701791],[-2.588112],[6.002397],[2.931620],[-2.342884],[-7.072014],[2.787903],[2.536920],[-0.256648],[7.101053],[-4.032779],[-5.716273],[-5.655604],[9.811121],[8.396729]], dtype = "float64")#candidate|2112|(196, 1)|const|float64
call_2111 = relay.TupleGetItem(func_1700_call(relay.reshape(const_2112.astype('float64'), [14, 1, 14])), 0)
call_2113 = relay.TupleGetItem(func_1703_call(relay.reshape(const_2112.astype('float64'), [14, 1, 14])), 0)
func_1812_call = mod.get_global_var('func_1812')
func_1814_call = mutated_mod.get_global_var('func_1814')
var_2134 = relay.var("var_2134", dtype = "uint64", shape = (192,))#candidate|2134|(192,)|var|uint64
call_2133 = relay.TupleGetItem(func_1812_call(relay.reshape(var_2134.astype('uint64'), [8, 24])), 2)
call_2135 = relay.TupleGetItem(func_1814_call(relay.reshape(var_2134.astype('uint64'), [8, 24])), 2)
output = relay.Tuple([call_2099,call_2104,call_2111,const_2112,call_2133,var_2134,])
output2 = relay.Tuple([call_2100,call_2105,call_2113,const_2112,call_2135,var_2134,])
func_2143 = relay.Function([var_2134,], output)
mod['func_2143'] = func_2143
mod = relay.transform.InferType()(mod)
var_2144 = relay.var("var_2144", dtype = "uint64", shape = (192,))#candidate|2144|(192,)|var|uint64
output = func_2143(var_2144)
func_2145 = relay.Function([var_2144], output)
mutated_mod['func_2145'] = func_2145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2043_call = mod.get_global_var('func_2043')
func_2044_call = mutated_mod.get_global_var('func_2044')
call_2149 = func_2043_call()
call_2150 = func_2043_call()
output = call_2149
output2 = call_2150
func_2165 = relay.Function([], output)
mod['func_2165'] = func_2165
mod = relay.transform.InferType()(mod)
mutated_mod['func_2165'] = func_2165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2165_call = mutated_mod.get_global_var('func_2165')
call_2166 = func_2165_call()
output = call_2166
func_2167 = relay.Function([], output)
mutated_mod['func_2167'] = func_2167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1672_call = mod.get_global_var('func_1672')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_2168 = func_1672_call()
call_2169 = func_1672_call()
output = relay.Tuple([call_2168,])
output2 = relay.Tuple([call_2169,])
func_2181 = relay.Function([], output)
mod['func_2181'] = func_2181
mod = relay.transform.InferType()(mod)
output = func_2181()
func_2182 = relay.Function([], output)
mutated_mod['func_2182'] = func_2182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2181_call = mod.get_global_var('func_2181')
func_2182_call = mutated_mod.get_global_var('func_2182')
call_2186 = relay.TupleGetItem(func_2181_call(), 0)
call_2187 = relay.TupleGetItem(func_2182_call(), 0)
func_2043_call = mod.get_global_var('func_2043')
func_2044_call = mutated_mod.get_global_var('func_2044')
call_2206 = func_2043_call()
call_2207 = func_2043_call()
func_1565_call = mod.get_global_var('func_1565')
func_1569_call = mutated_mod.get_global_var('func_1569')
var_2215 = relay.var("var_2215", dtype = "int32", shape = (195,))#candidate|2215|(195,)|var|int32
call_2214 = relay.TupleGetItem(func_1565_call(relay.reshape(var_2215.astype('int32'), [13, 1, 15]), relay.reshape(var_2215.astype('int32'), [13, 1, 15]), ), 0)
call_2216 = relay.TupleGetItem(func_1569_call(relay.reshape(var_2215.astype('int32'), [13, 1, 15]), relay.reshape(var_2215.astype('int32'), [13, 1, 15]), ), 0)
output = relay.Tuple([call_2186,call_2206,call_2214,var_2215,])
output2 = relay.Tuple([call_2187,call_2207,call_2216,var_2215,])
func_2217 = relay.Function([var_2215,], output)
mod['func_2217'] = func_2217
mod = relay.transform.InferType()(mod)
mutated_mod['func_2217'] = func_2217
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2218 = relay.var("var_2218", dtype = "int32", shape = (195,))#candidate|2218|(195,)|var|int32
func_2217_call = mutated_mod.get_global_var('func_2217')
call_2219 = func_2217_call(var_2218)
output = call_2219
func_2220 = relay.Function([var_2218], output)
mutated_mod['func_2220'] = func_2220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1828_call = mod.get_global_var('func_1828')
func_1830_call = mutated_mod.get_global_var('func_1830')
call_2228 = func_1828_call()
call_2229 = func_1828_call()
func_921_call = mod.get_global_var('func_921')
func_925_call = mutated_mod.get_global_var('func_925')
const_2236 = relay.const([[2,-4],[-9,2],[1,-2],[-7,9],[-7,7],[4,-8],[-4,10],[-7,-1],[6,-1],[4,4],[-5,-2],[5,10],[-8,10],[10,10],[1,9],[-10,6],[8,10],[-3,9],[3,10],[3,-10],[5,-4],[7,9],[5,7],[10,3],[5,2],[-10,-7],[2,-10],[5,5],[-1,-7],[4,8],[3,7],[1,3],[-5,-3],[6,9],[7,-3],[9,-4],[-9,-9],[-4,4],[-2,-3],[3,8],[-9,-5],[1,2],[-3,-10],[-5,3],[5,8],[-8,-1],[5,1],[9,8],[-10,-4],[-8,1],[-3,4],[-7,-5],[8,6],[-8,-6],[10,-1],[-9,-9],[-1,-4],[-1,-8],[9,-4],[10,1],[-5,-6],[1,-5],[3,9],[4,-5],[-3,4],[5,8],[-6,10],[-2,-4],[7,9],[5,-10],[8,2],[-9,7],[-5,6],[2,4],[6,4],[3,4],[-1,8],[5,-4],[-7,-6],[-5,-8],[3,10],[8,3],[-8,-10],[6,-2],[7,3],[-8,-6],[5,-3],[7,1],[-7,-7],[-7,-7],[-9,5],[-2,-4],[-7,-2],[4,-3],[-2,-9],[2,-8],[1,4],[-6,-2],[-9,-2],[-5,2],[5,-10],[4,10],[-2,2],[7,2],[5,-7],[-6,-10],[7,8],[10,6],[5,-4],[9,-2],[3,4],[-6,-9],[10,-6],[4,-3],[-7,2],[2,1],[-4,-6],[-9,4],[6,3],[4,-5],[-7,-3],[8,-3],[-9,-2],[-5,-10],[-10,-1],[-7,-2],[-3,-5],[6,-1],[4,5],[2,-4],[-4,-1],[9,-5],[-8,-9],[-1,7],[5,-1],[5,-3],[6,8],[-7,8],[-1,10],[10,9],[4,-4],[9,9],[7,-3],[1,-1],[6,-6],[4,-4],[-5,-4],[-2,7],[-3,2],[-4,5],[10,6],[-6,10],[-6,6],[-10,-4],[-7,-2],[-1,4],[9,5],[-7,-7],[-8,10],[-9,5],[7,-7],[2,-4],[10,-7],[-4,-5],[8,-8],[-10,-2],[9,-2],[2,-6],[-9,-6],[4,1],[7,-7],[10,7],[3,3],[-10,2],[6,-8],[1,9],[-6,-2],[-6,-6],[-2,5],[-6,10],[-8,5],[-7,-9],[-8,3],[-10,-9],[7,7],[-6,-8],[8,8],[6,5],[10,-3],[-6,-10],[-9,4],[-5,-6],[-6,-6],[7,-9],[-7,-3],[7,-6],[10,2],[4,-8],[4,2],[7,-10],[2,3],[9,-8],[-1,9],[1,-2],[7,-4],[-5,1],[8,-9],[-3,6],[-4,-9],[-1,9],[-8,-9],[-4,-7],[-7,9],[7,3],[5,-8],[10,6],[-3,9],[9,-5],[4,5],[6,-8],[-5,7],[7,9],[10,10],[1,6],[-8,7],[2,-6],[7,4],[-3,8],[-9,2],[-3,-8],[8,4],[6,5],[-6,-1],[6,5],[-9,9],[-3,-2],[2,-10],[6,-9],[-8,6],[-5,-7],[-5,9],[8,-7],[5,8],[2,10],[-5,8],[-8,6],[10,-9],[-4,7],[-5,-1],[2,-9],[-3,-5],[-7,9],[-7,3],[-4,3],[-2,-10],[-1,8],[-7,8],[-8,-6],[-3,7],[10,-2],[-3,-4],[4,10],[2,-4],[10,8],[4,7],[-2,-4],[6,7],[-7,2],[-1,-6],[6,3],[-9,10],[1,-7],[3,-9],[-6,1],[6,7],[6,3],[10,2],[-7,-3],[-2,-6],[-2,-1],[6,1],[5,-6],[-2,2],[6,5],[7,1],[2,10],[8,8],[8,4],[-9,8],[9,-5],[-8,-8],[4,-8],[3,-5],[-5,1],[-1,-5],[10,5],[-4,-5],[6,5],[9,-6],[-9,4],[-6,-6],[-5,6],[8,5],[9,-9],[-2,10],[-4,-9],[8,-6],[10,8],[-2,-8],[-1,-3],[4,-7],[7,-9],[-10,-6],[-2,7],[-10,9],[-6,7],[1,-5],[8,3],[5,6],[-6,2],[4,10],[2,-7],[4,-4],[1,10],[-7,-6],[2,-8],[9,-10],[10,1],[-9,7],[-10,-4],[10,-7],[-9,5],[-4,2],[10,3],[-5,6],[-7,7],[-10,7],[-1,-6],[-9,2],[-2,6],[7,1],[8,-9],[-9,6],[2,1],[-10,-3],[1,9],[-4,10],[5,-3],[-3,-10],[-8,-4],[3,-4],[5,-6],[6,-5],[-1,-9],[-5,-5],[6,-5],[-2,-10],[3,9],[5,-1],[-1,-5],[-6,-5],[5,4],[-2,10],[-6,-7],[-9,9],[2,-8],[-3,7],[-5,2],[1,10],[1,5],[4,-3],[2,1],[8,3],[-9,-7],[1,-10],[-6,-10],[2,-4],[6,8],[7,-2],[-1,10],[4,9],[6,8],[2,4],[2,7],[-3,-7],[-2,-1],[-4,8],[8,5],[1,7],[-2,7],[-5,-3],[6,-1],[1,-10],[-10,-2],[7,-2],[-5,-9],[2,8],[-1,9],[-7,-2],[-2,-1],[-10,-8],[5,-7],[-7,7],[7,-2],[2,-5],[4,-10],[6,-5],[-7,-5],[-9,-7],[10,-5],[4,-3],[-10,10],[-5,-6],[8,-2],[-9,5],[3,-3],[3,-9],[6,2],[-7,-1],[-1,10],[3,-7],[-3,-5],[5,-8],[-2,-5],[3,-9],[-7,8],[-7,-1],[-7,4],[-9,1],[1,-2],[-10,7],[3,8],[-3,6],[-10,-3],[3,-5],[7,2],[-2,5],[3,-10],[-10,-6],[8,-1],[-2,2],[-1,-9],[9,7],[-5,1],[4,-3],[-3,-9],[-1,-8],[-2,1],[-5,-6],[-9,9],[10,3],[4,7],[10,-4],[-2,-8],[9,-1],[4,-5],[-6,-3],[9,-3],[7,6],[-2,9],[2,4],[8,6],[-7,-10],[-2,8],[-7,5],[5,5],[-5,-5],[-8,8],[-10,6],[4,7],[1,-10],[2,3],[1,5],[7,9],[-5,-9],[-1,-2],[9,10],[10,-3],[-5,-5],[3,6],[5,9],[3,4],[-2,-8],[-9,-5],[8,4],[-3,8],[1,4],[-3,-9],[2,-10],[8,1],[-6,5],[1,6],[5,7],[8,-5],[1,5],[10,2],[-2,4],[-6,-9],[8,-10],[6,-6],[7,-9],[1,3],[5,-3],[10,4],[-8,3],[7,-4],[8,4],[9,2],[-3,10],[9,5],[-9,-9],[-4,2],[-3,-3],[7,-5],[-1,-6],[9,6],[-3,8],[-10,-5],[1,-2],[7,6],[9,2],[9,2],[8,-2],[-9,1],[-7,-3],[-3,-9],[-10,-1],[5,9],[-1,1],[-8,-1],[10,-3],[4,-1],[4,1],[10,-4],[-9,9],[2,-7],[9,-2],[10,5],[-9,-8],[-4,-5],[1,-8],[5,3],[-4,-7],[10,-1],[1,-8],[-9,10],[-3,10],[-7,8],[2,-1],[7,-1],[8,-9],[-6,-9],[-6,-8],[2,-2],[8,2],[6,3],[5,4],[-10,5],[7,-6],[6,9],[-2,8],[7,-9],[-1,-8],[1,6],[-7,-2],[-7,5],[-10,-4],[6,-2],[-10,-4],[-2,2],[4,-2],[-3,-4],[9,9],[10,-8],[7,-1],[-7,3],[5,6],[10,3],[-8,-10],[-5,1],[-8,-8],[4,-3],[1,-4],[-6,8],[4,-3],[10,8],[-2,8],[3,-1],[-8,1],[8,3],[-7,8],[3,9],[9,-2],[7,-6],[-10,-6],[4,6],[-8,-5],[1,4],[4,1],[7,5]], dtype = "int64")#candidate|2236|(600, 2)|const|int64
call_2235 = relay.TupleGetItem(func_921_call(relay.reshape(const_2236.astype('int64'), [15, 16, 5]), relay.reshape(const_2236.astype('int64'), [15, 16, 5]), ), 0)
call_2237 = relay.TupleGetItem(func_925_call(relay.reshape(const_2236.astype('int64'), [15, 16, 5]), relay.reshape(const_2236.astype('int64'), [15, 16, 5]), ), 0)
uop_2249 = relay.rsqrt(const_2236.astype('float64')) # shape=(600, 2)
uop_2252 = relay.acos(call_2228.astype('float64')) # shape=(2, 7, 9)
uop_2254 = relay.acos(call_2229.astype('float64')) # shape=(2, 7, 9)
output = relay.Tuple([call_2235,uop_2249,uop_2252,])
output2 = relay.Tuple([call_2237,uop_2249,uop_2254,])
func_2270 = relay.Function([], output)
mod['func_2270'] = func_2270
mod = relay.transform.InferType()(mod)
output = func_2270()
func_2271 = relay.Function([], output)
mutated_mod['func_2271'] = func_2271
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2272 = relay.var("var_2272", dtype = "int64", shape = (3, 14, 4))#candidate|2272|(3, 14, 4)|var|int64
var_2273 = relay.var("var_2273", dtype = "int64", shape = (3, 14, 4))#candidate|2273|(3, 14, 4)|var|int64
bop_2274 = relay.maximum(var_2272.astype('int64'), relay.reshape(var_2273.astype('int64'), relay.shape_of(var_2272))) # shape=(3, 14, 4)
func_2012_call = mod.get_global_var('func_2012')
func_2014_call = mutated_mod.get_global_var('func_2014')
call_2282 = relay.TupleGetItem(func_2012_call(), 0)
call_2283 = relay.TupleGetItem(func_2014_call(), 0)
output = relay.Tuple([bop_2274,call_2282,])
output2 = relay.Tuple([bop_2274,call_2283,])
func_2290 = relay.Function([var_2272,var_2273,], output)
mod['func_2290'] = func_2290
mod = relay.transform.InferType()(mod)
var_2291 = relay.var("var_2291", dtype = "int64", shape = (3, 14, 4))#candidate|2291|(3, 14, 4)|var|int64
var_2292 = relay.var("var_2292", dtype = "int64", shape = (3, 14, 4))#candidate|2292|(3, 14, 4)|var|int64
output = func_2290(var_2291,var_2292,)
func_2293 = relay.Function([var_2291,var_2292,], output)
mutated_mod['func_2293'] = func_2293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2165_call = mod.get_global_var('func_2165')
func_2167_call = mutated_mod.get_global_var('func_2167')
call_2315 = func_2165_call()
call_2316 = func_2165_call()
output = call_2315
output2 = call_2316
func_2320 = relay.Function([], output)
mod['func_2320'] = func_2320
mod = relay.transform.InferType()(mod)
mutated_mod['func_2320'] = func_2320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2320_call = mutated_mod.get_global_var('func_2320')
call_2321 = func_2320_call()
output = call_2321
func_2322 = relay.Function([], output)
mutated_mod['func_2322'] = func_2322
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2326 = relay.var("var_2326", dtype = "float64", shape = (6, 16, 11))#candidate|2326|(6, 16, 11)|var|float64
uop_2327 = relay.asin(var_2326.astype('float64')) # shape=(6, 16, 11)
func_2181_call = mod.get_global_var('func_2181')
func_2182_call = mutated_mod.get_global_var('func_2182')
call_2330 = relay.TupleGetItem(func_2181_call(), 0)
call_2331 = relay.TupleGetItem(func_2182_call(), 0)
uop_2332 = relay.exp(uop_2327.astype('float64')) # shape=(6, 16, 11)
uop_2336 = relay.log10(uop_2332.astype('float32')) # shape=(6, 16, 11)
output = relay.Tuple([call_2330,uop_2336,])
output2 = relay.Tuple([call_2331,uop_2336,])
func_2338 = relay.Function([var_2326,], output)
mod['func_2338'] = func_2338
mod = relay.transform.InferType()(mod)
var_2339 = relay.var("var_2339", dtype = "float64", shape = (6, 16, 11))#candidate|2339|(6, 16, 11)|var|float64
output = func_2338(var_2339)
func_2340 = relay.Function([var_2339], output)
mutated_mod['func_2340'] = func_2340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2181_call = mod.get_global_var('func_2181')
func_2182_call = mutated_mod.get_global_var('func_2182')
call_2350 = relay.TupleGetItem(func_2181_call(), 0)
call_2351 = relay.TupleGetItem(func_2182_call(), 0)
output = relay.Tuple([call_2350,])
output2 = relay.Tuple([call_2351,])
func_2354 = relay.Function([], output)
mod['func_2354'] = func_2354
mod = relay.transform.InferType()(mod)
mutated_mod['func_2354'] = func_2354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2354_call = mutated_mod.get_global_var('func_2354')
call_2355 = func_2354_call()
output = call_2355
func_2356 = relay.Function([], output)
mutated_mod['func_2356'] = func_2356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2043_call = mod.get_global_var('func_2043')
func_2044_call = mutated_mod.get_global_var('func_2044')
call_2357 = func_2043_call()
call_2358 = func_2043_call()
func_1547_call = mod.get_global_var('func_1547')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_2360 = relay.TupleGetItem(func_1547_call(), 0)
call_2361 = relay.TupleGetItem(func_1548_call(), 0)
output = relay.Tuple([call_2357,call_2360,])
output2 = relay.Tuple([call_2358,call_2361,])
func_2388 = relay.Function([], output)
mod['func_2388'] = func_2388
mod = relay.transform.InferType()(mod)
output = func_2388()
func_2389 = relay.Function([], output)
mutated_mod['func_2389'] = func_2389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1547_call = mod.get_global_var('func_1547')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_2472 = relay.TupleGetItem(func_1547_call(), 0)
call_2473 = relay.TupleGetItem(func_1548_call(), 0)
var_2476 = relay.var("var_2476", dtype = "float32", shape = (2, 7, 9))#candidate|2476|(2, 7, 9)|var|float32
bop_2477 = relay.bitwise_or(call_2472.astype('uint8'), relay.reshape(var_2476.astype('uint8'), relay.shape_of(call_2472))) # shape=(2, 7, 9)
bop_2480 = relay.bitwise_or(call_2473.astype('uint8'), relay.reshape(var_2476.astype('uint8'), relay.shape_of(call_2473))) # shape=(2, 7, 9)
output = relay.Tuple([bop_2477,])
output2 = relay.Tuple([bop_2480,])
func_2483 = relay.Function([var_2476,], output)
mod['func_2483'] = func_2483
mod = relay.transform.InferType()(mod)
var_2484 = relay.var("var_2484", dtype = "float32", shape = (2, 7, 9))#candidate|2484|(2, 7, 9)|var|float32
output = func_2483(var_2484)
func_2485 = relay.Function([var_2484], output)
mutated_mod['func_2485'] = func_2485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2320_call = mod.get_global_var('func_2320')
func_2322_call = mutated_mod.get_global_var('func_2322')
call_2517 = func_2320_call()
call_2518 = func_2320_call()
const_2521 = relay.const([[[-7.235103,7.919971,-6.103618,1.092293,4.107771,2.504462,5.535274,-4.896423,-6.502937],[-1.183315,7.220556,-0.252050,-7.008701,6.970376,-9.236805,9.096986,-5.984504,-5.541028],[-1.786058,6.504493,-2.390938,4.452064,-4.339320,4.234146,-7.400768,7.103642,2.333839],[8.574769,-0.853234,0.212914,-6.513513,1.606756,-6.237604,1.652914,9.381155,-5.923297],[-4.794197,7.058548,5.398151,2.494528,-0.021900,1.683392,-6.961405,7.250154,-6.740603],[3.229017,-0.559929,2.478937,-5.336144,4.900139,2.687984,7.843119,0.955654,8.495441],[-7.130970,2.839270,8.592817,-9.705188,7.457792,-0.884307,-0.643369,-6.630496,-0.052423]],[[2.719600,4.723872,-6.495439,-3.611590,-7.574853,5.691297,-9.669540,-0.361213,-4.263253],[7.909505,-4.349922,8.934281,-3.552878,-0.143091,-2.979691,-2.744261,-2.937778,-6.983725],[7.368850,-2.540648,-7.118237,5.361232,2.956662,-5.840629,1.992659,-8.547124,8.728236],[2.690105,-1.054823,-5.978217,-3.971115,-3.413031,-1.348019,-0.988194,-1.982390,5.364434],[-9.457423,3.759139,1.185180,5.573226,8.487057,-7.007717,1.510381,-7.998731,4.949367],[-6.419547,-9.531871,-0.536747,7.723934,-1.233077,-0.611745,2.063370,-3.258088,-4.913384],[-1.819940,-3.114283,-2.631783,-3.838548,-8.358662,8.954584,-4.358156,-8.309680,-9.705925]]], dtype = "float32")#candidate|2521|(2, 7, 9)|const|float32
bop_2522 = relay.logical_xor(call_2517.astype('uint16'), relay.reshape(const_2521.astype('uint16'), relay.shape_of(call_2517))) # shape=(2, 7, 9)
bop_2525 = relay.logical_xor(call_2518.astype('uint16'), relay.reshape(const_2521.astype('uint16'), relay.shape_of(call_2518))) # shape=(2, 7, 9)
func_690_call = mod.get_global_var('func_690')
func_694_call = mutated_mod.get_global_var('func_694')
const_2532 = relay.const(-8, dtype = "uint64")#candidate|2532|()|const|uint64
var_2533 = relay.var("var_2533", dtype = "uint64", shape = (48, 4))#candidate|2533|(48, 4)|var|uint64
call_2531 = relay.TupleGetItem(func_690_call(relay.reshape(const_2532.astype('uint64'), []), relay.reshape(var_2533.astype('uint64'), [16, 2, 6]), ), 0)
call_2534 = relay.TupleGetItem(func_694_call(relay.reshape(const_2532.astype('uint64'), []), relay.reshape(var_2533.astype('uint64'), [16, 2, 6]), ), 0)
uop_2537 = relay.erf(bop_2522.astype('float64')) # shape=(2, 7, 9)
uop_2539 = relay.erf(bop_2525.astype('float64')) # shape=(2, 7, 9)
output = relay.Tuple([call_2531,const_2532,var_2533,uop_2537,])
output2 = relay.Tuple([call_2534,const_2532,var_2533,uop_2539,])
func_2550 = relay.Function([var_2533,], output)
mod['func_2550'] = func_2550
mod = relay.transform.InferType()(mod)
var_2551 = relay.var("var_2551", dtype = "uint64", shape = (48, 4))#candidate|2551|(48, 4)|var|uint64
output = func_2550(var_2551)
func_2552 = relay.Function([var_2551], output)
mutated_mod['func_2552'] = func_2552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1689_call = mod.get_global_var('func_1689')
func_1691_call = mutated_mod.get_global_var('func_1691')
call_2594 = func_1689_call()
call_2595 = func_1689_call()
output = call_2594
output2 = call_2595
func_2608 = relay.Function([], output)
mod['func_2608'] = func_2608
mod = relay.transform.InferType()(mod)
mutated_mod['func_2608'] = func_2608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2608_call = mutated_mod.get_global_var('func_2608')
call_2609 = func_2608_call()
output = call_2609
func_2610 = relay.Function([], output)
mutated_mod['func_2610'] = func_2610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2388_call = mod.get_global_var('func_2388')
func_2389_call = mutated_mod.get_global_var('func_2389')
call_2649 = relay.TupleGetItem(func_2388_call(), 0)
call_2650 = relay.TupleGetItem(func_2389_call(), 0)
output = call_2649
output2 = call_2650
func_2651 = relay.Function([], output)
mod['func_2651'] = func_2651
mod = relay.transform.InferType()(mod)
output = func_2651()
func_2652 = relay.Function([], output)
mutated_mod['func_2652'] = func_2652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2354_call = mod.get_global_var('func_2354')
func_2356_call = mutated_mod.get_global_var('func_2356')
call_2701 = relay.TupleGetItem(func_2354_call(), 0)
call_2702 = relay.TupleGetItem(func_2356_call(), 0)
output = call_2701
output2 = call_2702
func_2719 = relay.Function([], output)
mod['func_2719'] = func_2719
mod = relay.transform.InferType()(mod)
output = func_2719()
func_2720 = relay.Function([], output)
mutated_mod['func_2720'] = func_2720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2043_call = mod.get_global_var('func_2043')
func_2044_call = mutated_mod.get_global_var('func_2044')
call_2759 = func_2043_call()
call_2760 = func_2043_call()
func_2073_call = mod.get_global_var('func_2073')
func_2075_call = mutated_mod.get_global_var('func_2075')
call_2768 = func_2073_call()
call_2769 = func_2073_call()
func_2143_call = mod.get_global_var('func_2143')
func_2145_call = mutated_mod.get_global_var('func_2145')
const_2775 = relay.const([[-4,-6,10,-1,7,-6,5,1,8,1,2,8,8,-1,-9,10,-7,-6,-4,-10,7,5,-8,1,10,1,-5,5,10,2,-7,3,-9,-3,-5,5,-10,3,5,-5,6,-8,-4,-4,-9,4,-9,1],[3,10,-6,-2,-5,6,9,-6,5,5,7,6,8,-3,6,-4,8,10,8,2,-9,3,8,-2,-3,6,10,7,3,-4,6,9,1,9,1,5,10,9,-9,-10,-10,4,8,8,5,-10,10,-6],[9,4,-9,-4,-9,6,4,2,-2,-3,-2,-4,3,-8,5,7,3,8,2,-10,2,1,-2,9,-3,-8,5,2,8,-4,5,-9,-5,-10,-8,10,-4,6,-5,-2,1,-3,-10,4,-6,10,-10,-10],[5,-1,-10,-3,-3,-2,7,-7,2,3,-9,-1,-7,-6,10,-1,-8,10,-5,-2,-3,7,6,8,-7,1,10,-9,-3,-6,-3,-1,-1,-6,-3,5,5,-8,5,1,9,-8,-6,-7,-1,3,10,-4]], dtype = "uint64")#candidate|2775|(4, 48)|const|uint64
call_2774 = relay.TupleGetItem(func_2143_call(relay.reshape(const_2775.astype('uint64'), [192,])), 2)
call_2776 = relay.TupleGetItem(func_2145_call(relay.reshape(const_2775.astype('uint64'), [192,])), 2)
output = relay.Tuple([call_2759,call_2768,call_2774,const_2775,])
output2 = relay.Tuple([call_2760,call_2769,call_2776,const_2775,])
func_2793 = relay.Function([], output)
mod['func_2793'] = func_2793
mod = relay.transform.InferType()(mod)
mutated_mod['func_2793'] = func_2793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2793_call = mutated_mod.get_global_var('func_2793')
call_2794 = func_2793_call()
output = call_2794
func_2795 = relay.Function([], output)
mutated_mod['func_2795'] = func_2795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2388_call = mod.get_global_var('func_2388')
func_2389_call = mutated_mod.get_global_var('func_2389')
call_2825 = relay.TupleGetItem(func_2388_call(), 0)
call_2826 = relay.TupleGetItem(func_2389_call(), 0)
output = relay.Tuple([call_2825,])
output2 = relay.Tuple([call_2826,])
func_2828 = relay.Function([], output)
mod['func_2828'] = func_2828
mod = relay.transform.InferType()(mod)
output = func_2828()
func_2829 = relay.Function([], output)
mutated_mod['func_2829'] = func_2829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2388_call = mod.get_global_var('func_2388')
func_2389_call = mutated_mod.get_global_var('func_2389')
call_2841 = relay.TupleGetItem(func_2388_call(), 1)
call_2842 = relay.TupleGetItem(func_2389_call(), 1)
func_2793_call = mod.get_global_var('func_2793')
func_2795_call = mutated_mod.get_global_var('func_2795')
call_2851 = relay.TupleGetItem(func_2793_call(), 3)
call_2852 = relay.TupleGetItem(func_2795_call(), 3)
output = relay.Tuple([call_2841,call_2851,])
output2 = relay.Tuple([call_2842,call_2852,])
func_2865 = relay.Function([], output)
mod['func_2865'] = func_2865
mod = relay.transform.InferType()(mod)
output = func_2865()
func_2866 = relay.Function([], output)
mutated_mod['func_2866'] = func_2866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2181_call = mod.get_global_var('func_2181')
func_2182_call = mutated_mod.get_global_var('func_2182')
call_2910 = relay.TupleGetItem(func_2181_call(), 0)
call_2911 = relay.TupleGetItem(func_2182_call(), 0)
output = relay.Tuple([call_2910,])
output2 = relay.Tuple([call_2911,])
func_2914 = relay.Function([], output)
mod['func_2914'] = func_2914
mod = relay.transform.InferType()(mod)
mutated_mod['func_2914'] = func_2914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2914_call = mutated_mod.get_global_var('func_2914')
call_2915 = func_2914_call()
output = call_2915
func_2916 = relay.Function([], output)
mutated_mod['func_2916'] = func_2916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2914_call = mod.get_global_var('func_2914')
func_2916_call = mutated_mod.get_global_var('func_2916')
call_2950 = relay.TupleGetItem(func_2914_call(), 0)
call_2951 = relay.TupleGetItem(func_2916_call(), 0)
output = call_2950
output2 = call_2951
func_2959 = relay.Function([], output)
mod['func_2959'] = func_2959
mod = relay.transform.InferType()(mod)
output = func_2959()
func_2960 = relay.Function([], output)
mutated_mod['func_2960'] = func_2960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2012_call = mod.get_global_var('func_2012')
func_2014_call = mutated_mod.get_global_var('func_2014')
call_2964 = relay.TupleGetItem(func_2012_call(), 2)
call_2965 = relay.TupleGetItem(func_2014_call(), 2)
const_2966 = relay.const([[2.742127,4.989901,-1.491884,9.171197,5.602595,-6.982945,-5.766115,6.180927,-3.893358,6.341617,-6.816529,9.696083,1.445981,-4.818229,8.999085,-6.037372,4.058489,3.290933,6.084415,1.866118,2.126591,1.686209,2.905352,-8.686926,-8.926519,-9.440843,4.039124,9.839914,9.408582,0.377837,5.665081,6.751954,7.599600,-4.479867,7.410619,7.297179,4.715120,-9.737861,-2.422145,7.015920,1.462651,7.914533,9.631181,1.939808,-6.052154,-6.855250,-5.114426,3.635253,-2.491530,-8.366086,5.961171,-7.027645,-6.827181,9.409282,-3.599034,-9.507699,-9.094681,-4.983094,-0.756736,-9.717996,-2.497407,-6.495766,7.265593,0.041016,-0.487686,8.295270,3.193587,-0.353545,1.053451,-7.235067,-3.351921,7.181026,-6.095271,8.242013,4.782009,-8.902510,-5.675635,-8.933729,-6.816454,8.611155,8.215637,-9.576857,0.808988,-9.074534,-9.177795,-1.562153,9.709073,5.072626,0.301268,-2.818281,1.003952,-3.547866,-1.431496,1.198391,-7.131003,5.760860,3.281906,3.444375,-1.207694,3.122651,-0.227692,-6.172596,0.200877,-3.344683,-6.415899],[0.860398,5.055783,8.796562,-3.666854,-1.811031,1.492320,-6.962329,5.211952,2.391076,-1.241251,-2.309704,-7.151821,-9.703066,-9.351760,-7.060577,-0.061214,-9.955052,-4.337656,1.804584,-4.006008,5.866606,1.276181,4.597983,6.063627,-1.912756,4.301855,0.396991,1.953847,-1.280197,-7.207764,-0.884862,-4.929641,-7.988909,-9.157359,-8.973456,5.313741,8.514737,8.013861,8.950460,5.285583,-2.322774,-4.371284,0.221306,-3.228377,7.656738,-5.107735,0.593498,7.295781,0.130186,5.822171,-1.446527,-2.805738,1.196345,-1.055601,-8.963145,-2.110949,3.834067,-8.082310,6.120634,-6.914809,5.972548,-7.466061,5.933864,-1.851840,-5.656968,-5.352333,-7.218070,-1.562020,0.902860,-8.440904,-6.914686,-2.421313,0.990879,-1.263103,2.552279,-1.611707,-0.550786,3.575137,-9.924928,-2.652938,5.714742,2.298254,7.336571,0.008799,0.863589,5.276574,2.596277,7.327734,-5.169167,2.334336,-6.399228,3.029668,-1.266469,-6.143776,-5.592058,9.556245,-5.989575,-4.585309,-1.463159,-4.278035,6.056150,-3.120143,3.986952,-8.431488,2.567094],[-1.931484,4.912508,-4.105879,-9.385182,-0.191453,-3.028870,8.834559,-3.357675,-4.315048,4.413912,-5.309216,-9.539140,2.303063,-7.519088,-6.393516,0.356723,2.176102,-7.382612,8.387482,8.722558,2.087324,0.808736,-1.952753,-9.484881,0.722308,6.552147,9.559301,-8.220765,9.954396,-0.573478,-3.260753,-1.894868,-1.617434,-6.565350,-2.121267,1.666627,7.012706,-9.351193,-5.530898,-4.223678,-9.927890,-9.341948,-3.759288,4.160507,2.630696,7.690366,5.618645,-6.184072,-5.639583,3.834731,-6.780205,-9.077435,-1.916902,9.696908,-4.400565,-6.603261,3.158854,-6.451705,1.846156,9.709541,7.720323,-8.153253,0.577515,-0.462123,7.661328,-2.193156,-7.429274,7.924933,5.080894,0.462478,5.122376,-2.508033,-0.869869,-9.600479,-0.595248,0.854568,-1.590727,3.645399,-2.691686,8.218522,6.814098,7.667514,-1.892810,-6.125445,1.615424,4.250252,4.839316,6.878264,-8.893754,8.253256,6.464848,-6.358721,9.790238,9.317452,6.933737,6.334606,-5.778418,-2.971801,-4.581568,-9.120831,9.760155,-4.880228,-7.171705,-8.519780,7.182738],[2.670755,-7.815862,-3.717449,4.735772,4.940357,-7.314928,-2.743027,1.017295,8.634648,7.517533,9.380154,-9.654809,-2.457768,6.022448,8.635839,-5.690296,-5.806077,3.433956,-4.957445,-9.187001,1.424256,1.125024,-5.086176,0.383682,-8.240772,8.306902,6.850068,6.240765,-5.459079,-7.609214,6.298013,7.502912,-6.483714,-1.200858,2.378144,-0.624640,6.666533,-6.796647,7.022803,2.445040,7.175150,5.026466,-3.177126,-3.080460,-9.502834,2.388799,4.993839,8.241898,1.397287,9.779219,-7.115731,3.712771,9.199582,0.480525,8.557499,-9.859151,-0.160006,2.474980,-9.671605,8.899872,3.518047,-2.845141,9.566013,-5.069041,0.900933,-7.332597,8.645072,1.721649,1.845858,4.527016,0.535907,9.211305,-5.872960,7.731069,-7.266403,6.711399,8.439256,9.613485,6.511879,6.422874,2.550571,-8.048729,7.370712,4.599761,4.145343,-7.370253,-7.259166,-0.588346,-2.294349,8.318679,-0.155236,-7.259449,-6.666749,4.723652,4.637629,-0.372199,-2.143701,-1.525563,-2.501404,-4.463842,-3.401366,-5.689807,1.258355,2.472614,-8.117652],[-0.265258,4.636082,-2.985797,-7.133894,5.347238,-8.245523,-0.006532,1.381170,4.647016,-6.861280,1.195683,-1.721618,9.138446,-8.103806,1.728904,9.423380,5.774004,6.414256,-8.083363,6.303520,9.955347,4.195577,-8.554366,-0.229054,-2.849611,-8.817972,-5.237251,-6.643375,-5.675837,-5.805232,9.994859,0.700169,0.822342,1.222686,2.950616,7.100637,-1.324032,-5.501580,6.437126,-4.439589,-6.054221,9.823276,0.882421,-6.579716,-4.288599,-1.644245,6.503532,5.296694,-4.335473,-6.718281,8.796077,-2.865884,6.140491,2.964300,-8.661688,-1.817822,-1.882705,9.159033,8.423470,9.249512,-7.705215,-1.111242,7.463492,-6.524174,-6.357494,9.643286,2.887894,6.201188,1.680877,0.766712,1.677481,-8.211456,-5.421992,2.708849,4.285231,9.041628,-4.884831,5.905971,7.645425,4.093841,9.870224,-4.689517,7.955860,1.044079,-1.076090,-8.747993,-0.866658,6.447988,-0.325523,4.462037,8.371600,5.071856,-9.661972,5.234746,3.436487,5.074048,-5.803429,8.862215,3.303833,-9.360198,8.048718,9.495903,9.269701,-5.912157,-9.659778],[6.693214,9.060505,5.006627,-4.750237,9.717954,-5.491478,-9.093099,-9.981113,-8.219660,-3.547638,2.505116,1.674433,6.329605,5.338978,-1.189739,2.087486,0.791346,-0.254212,-8.563420,-1.647299,-2.570124,-8.807892,5.772976,-3.241440,7.258047,-2.530010,3.162249,5.431543,-0.990534,-1.816367,-7.368655,-4.070754,-6.289504,5.634086,3.646319,4.916225,-1.221056,-2.542658,-5.816156,6.890732,3.145740,8.811750,0.229110,-7.657300,3.280242,-5.209668,-3.667786,-8.934587,9.084580,-1.746977,0.839366,2.273992,4.288730,7.797268,-1.746337,3.191006,-4.419737,-8.586832,-6.352011,9.163864,-2.003075,6.829340,-3.734743,9.323581,9.850142,9.930054,7.248562,-0.287822,-2.469683,9.420094,-8.204869,7.811173,4.639461,-3.445245,-8.230492,5.738674,4.198399,4.698214,-5.053441,-2.351925,-0.568138,-2.070930,-8.059929,2.074076,-4.429875,9.417432,8.739472,0.877524,2.260696,-9.745873,7.544799,-6.755171,1.244208,9.350977,-3.170556,0.807207,8.243652,6.960740,4.981676,-9.702895,0.354959,-0.765233,-3.299123,4.981738,-7.113141],[3.950812,9.815853,-4.482038,-1.379886,7.355644,1.746775,5.257432,-9.827173,-7.250325,5.292003,-7.834020,2.018191,-6.066495,-8.431515,8.776540,8.649195,8.852142,-9.044456,4.729711,4.629389,0.514503,-7.491736,6.501646,7.390034,-3.973458,-7.620732,2.295933,0.866721,-1.629942,1.089209,-7.739697,-8.987573,-7.739425,-4.178698,4.053082,-4.118762,-4.373516,-3.385749,0.955242,-7.146172,-5.499177,-9.529200,-4.193577,8.948573,-7.697436,-8.309014,-7.076416,-2.760401,9.901870,-8.547938,-5.819558,5.060290,1.985018,-4.263890,-4.171764,-2.122196,7.000876,-2.836098,8.786275,-9.158557,0.763905,-1.852723,-2.048928,-1.319345,1.847112,-6.499029,0.536476,7.400848,3.139956,5.079448,-8.276507,8.084045,6.504054,8.435361,3.989409,-6.618792,-6.410726,-1.711435,1.606085,-8.674176,-7.182731,-6.289276,-2.623470,-8.285647,0.871840,8.423409,-3.021909,2.889916,7.823240,-7.809271,4.231437,4.630415,3.032580,-0.478942,-8.954474,-6.501917,0.333386,-6.761706,-8.663843,-2.311627,-0.316201,9.597650,-9.403312,-7.388568,0.433432],[-8.289706,6.582687,-3.456299,-1.754325,2.087353,4.333123,6.729797,-4.832775,-9.757418,-0.144702,-7.018478,3.648634,8.120539,1.463065,4.105297,-6.439215,4.297832,1.794269,1.313743,-0.052789,-3.037613,-8.696801,-7.478016,6.309503,2.409685,2.876166,-4.047378,8.161365,-3.301029,-2.463608,9.148814,-3.248853,-2.770942,-3.345902,0.931494,1.986682,-9.444850,5.051269,-4.022319,6.664597,-9.125512,-2.843307,6.916796,4.250033,-6.484428,7.389278,-6.971079,-9.949645,9.544720,-6.501755,2.542963,-6.069689,3.136680,-6.631871,-6.400656,1.826677,9.179453,-5.248616,0.442236,-5.313898,9.087586,8.834627,2.391708,-3.417772,-3.931841,2.033034,-1.150453,6.831703,0.373447,-9.381365,-8.397136,5.349530,4.808824,-0.654561,3.648358,-7.902262,5.154370,-0.066494,6.036126,1.303074,-5.787692,2.006624,1.380862,-8.719164,-4.540781,-3.250644,4.961363,-6.637875,7.068837,5.645316,-1.220233,4.240006,-8.453248,-6.383618,6.834252,5.922779,4.656033,-0.090825,-2.657020,0.648025,7.299016,3.853892,4.853189,9.447961,-5.233668],[5.800123,-5.191481,-8.117396,1.551682,-0.565527,9.061535,-1.867857,-6.739433,7.897029,7.886979,-5.382939,-8.802952,0.930932,8.069988,0.091590,-5.235598,-1.973040,1.253855,7.372434,-8.244456,2.746665,4.897055,-4.609069,4.288686,-4.312656,-3.228007,6.780762,-2.169277,1.154151,-0.655213,-1.135232,1.188516,4.429671,6.029766,1.438902,4.332481,3.174814,-5.859095,-2.301923,1.240288,3.408843,2.198563,9.931616,5.425680,-2.907800,6.882932,-6.291818,8.094983,0.413944,-1.838693,-5.536776,-1.763693,9.140709,3.373170,-1.774974,-7.757848,1.723819,-7.522011,-1.435828,4.414917,7.547606,5.342883,2.069588,-4.471159,1.125759,-3.507489,-0.376430,-4.940721,6.643009,5.920286,-0.346556,9.680782,-5.084334,-1.033463,-7.356873,1.906504,-3.880157,7.707070,1.879116,3.151564,7.680095,6.597575,-1.996367,0.096526,2.960565,1.269993,-9.886660,2.560014,-9.067604,8.533277,0.728845,7.458580,7.518383,-2.336131,-8.517135,-9.458258,2.873123,6.943605,6.379860,9.871970,2.465632,-9.790046,-2.607129,-0.499615,-3.402681],[5.434350,-5.870045,5.456391,1.679002,2.548475,3.268937,9.263968,0.298726,-8.529221,7.787454,5.269038,-6.235693,4.251125,-7.223886,-4.054648,3.395712,-6.500593,-5.686879,-4.027059,9.498273,1.444059,4.111755,0.457805,5.908579,3.040837,-2.299284,7.638928,-3.260502,3.613203,5.503060,3.691799,6.209224,-8.408978,-9.272075,5.512283,-9.636282,-4.186222,-5.610150,-0.169175,-6.877077,-6.111097,6.051904,1.729019,-5.552146,-8.254359,-1.320906,4.485975,5.220344,7.560743,-4.148013,-4.939480,4.862362,-4.416182,-7.887973,4.912574,-5.981812,7.453679,-2.544315,9.983233,5.910216,-5.282184,-4.813930,2.192146,6.624824,9.964291,-2.999146,4.780571,-6.268404,6.965422,-7.662653,8.776738,-3.707487,-3.340748,-1.208698,-9.470490,9.074359,7.228687,-5.429645,-5.328259,-2.205802,1.370183,9.705603,-2.276092,-0.316171,-6.390234,6.559550,0.324200,4.333832,-1.210936,3.897021,3.523590,9.207827,-7.122279,-3.157778,7.247590,-8.592790,8.564905,6.202666,-7.504160,1.119283,8.681818,-9.360584,-1.682607,-2.946010,0.577411]], dtype = "float32")#candidate|2966|(10, 105)|const|float32
bop_2967 = relay.subtract(call_2964.astype('uint32'), relay.reshape(const_2966.astype('uint32'), relay.shape_of(call_2964))) # shape=(10, 105)
bop_2970 = relay.subtract(call_2965.astype('uint32'), relay.reshape(const_2966.astype('uint32'), relay.shape_of(call_2965))) # shape=(10, 105)
uop_2971 = relay.sqrt(call_2964.astype('float32')) # shape=(10, 105)
uop_2973 = relay.sqrt(call_2965.astype('float32')) # shape=(10, 105)
uop_2974 = relay.acosh(const_2966.astype('float32')) # shape=(10, 105)
output = relay.Tuple([bop_2967,uop_2971,uop_2974,])
output2 = relay.Tuple([bop_2970,uop_2973,uop_2974,])
func_2980 = relay.Function([], output)
mod['func_2980'] = func_2980
mod = relay.transform.InferType()(mod)
mutated_mod['func_2980'] = func_2980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2980_call = mutated_mod.get_global_var('func_2980')
call_2981 = func_2980_call()
output = call_2981
func_2982 = relay.Function([], output)
mutated_mod['func_2982'] = func_2982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1591_call = mod.get_global_var('func_1591')
func_1592_call = mutated_mod.get_global_var('func_1592')
call_3003 = relay.TupleGetItem(func_1591_call(), 0)
call_3004 = relay.TupleGetItem(func_1592_call(), 0)
uop_3005 = relay.asinh(call_3003.astype('float64')) # shape=(2, 7, 9)
uop_3007 = relay.asinh(call_3004.astype('float64')) # shape=(2, 7, 9)
output = uop_3005
output2 = uop_3007
func_3012 = relay.Function([], output)
mod['func_3012'] = func_3012
mod = relay.transform.InferType()(mod)
mutated_mod['func_3012'] = func_3012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3012_call = mutated_mod.get_global_var('func_3012')
call_3013 = func_3012_call()
output = call_3013
func_3014 = relay.Function([], output)
mutated_mod['func_3014'] = func_3014
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3039 = relay.var("var_3039", dtype = "float32", shape = (3, 8, 6))#candidate|3039|(3, 8, 6)|var|float32
uop_3040 = relay.tan(var_3039.astype('float32')) # shape=(3, 8, 6)
func_1547_call = mod.get_global_var('func_1547')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_3042 = relay.TupleGetItem(func_1547_call(), 0)
call_3043 = relay.TupleGetItem(func_1548_call(), 0)
bop_3044 = relay.logical_xor(uop_3040.astype('int8'), relay.reshape(var_3039.astype('int8'), relay.shape_of(uop_3040))) # shape=(3, 8, 6)
uop_3052 = relay.sqrt(bop_3044.astype('float64')) # shape=(3, 8, 6)
func_2290_call = mod.get_global_var('func_2290')
func_2293_call = mutated_mod.get_global_var('func_2293')
var_3059 = relay.var("var_3059", dtype = "int64", shape = (168,))#candidate|3059|(168,)|var|int64
call_3058 = relay.TupleGetItem(func_2290_call(relay.reshape(var_3059.astype('int64'), [3, 14, 4]), relay.reshape(var_3059.astype('int64'), [3, 14, 4]), ), 1)
call_3060 = relay.TupleGetItem(func_2293_call(relay.reshape(var_3059.astype('int64'), [3, 14, 4]), relay.reshape(var_3059.astype('int64'), [3, 14, 4]), ), 1)
uop_3066 = relay.erf(uop_3052.astype('float64')) # shape=(3, 8, 6)
bop_3072 = relay.floor_mod(uop_3066.astype('float32'), relay.reshape(bop_3044.astype('float32'), relay.shape_of(uop_3066))) # shape=(3, 8, 6)
var_3091 = relay.var("var_3091", dtype = "float64", shape = (3, 8, 6))#candidate|3091|(3, 8, 6)|var|float64
bop_3092 = relay.divide(uop_3052.astype('float32'), relay.reshape(var_3091.astype('float32'), relay.shape_of(uop_3052))) # shape=(3, 8, 6)
func_1591_call = mod.get_global_var('func_1591')
func_1592_call = mutated_mod.get_global_var('func_1592')
call_3101 = relay.TupleGetItem(func_1591_call(), 0)
call_3102 = relay.TupleGetItem(func_1592_call(), 0)
func_2388_call = mod.get_global_var('func_2388')
func_2389_call = mutated_mod.get_global_var('func_2389')
call_3108 = relay.TupleGetItem(func_2388_call(), 1)
call_3109 = relay.TupleGetItem(func_2389_call(), 1)
func_1972_call = mod.get_global_var('func_1972')
func_1975_call = mutated_mod.get_global_var('func_1975')
const_3115 = relay.const([-5.940027,-9.797591,-0.117955,3.037679,-2.407740,3.232583,-1.456881,0.930193,1.511808,6.335214,-1.828289,6.316134,8.224469,5.551706,-3.267946,-2.933970,-1.127346,6.556602,-4.211032,4.423165,-4.836472,-4.672474,2.649045,-7.239126,2.146440,-6.888879,7.744990,-3.652625,4.101280,-5.755491,5.806409,-1.500930,3.111804,-5.383572,9.953984,-0.765350,0.487490,-8.367300,1.166574,6.760583,-8.170598,-6.884113,2.182001,2.755565,-6.325742,-0.331191,-8.350117,2.460262,-7.511844,2.816941,-7.757820,1.434726,5.641525,-4.337054,8.447640,5.011519,-5.465580,7.296856,3.948327,-2.950205,-4.435776,5.732691,8.977377,3.076498,7.081251,5.993162,-0.419968,2.585208,6.150801,-9.474190,5.632830,-3.243389,2.793914,9.016637,-0.421049,3.229757,-0.121952,-2.403439,2.012152,4.290645,-6.257207,-6.213766,-5.136849,-9.779525,-3.976973,-0.415649,7.277731,4.724028,-8.031813,0.145674,-1.012528,-0.616824,8.143786,-4.793846,-1.305347,0.531638,4.295668,6.868068,7.481959,1.419317,8.483675,4.642546,-0.675750,5.226482,2.587047,-2.753611,4.794762,-6.810342,3.520246,-7.920048,6.229817,-5.630136,9.577206,-4.914669,-0.208661,-6.171929,3.420855,-8.791884,-5.565296,-8.069368,-5.369468,3.645244,9.371339,-5.157588,9.219859,-7.895681,0.887215,9.240622,7.223088,0.618670,0.762732,6.166712,-9.938260,-9.372004,9.587230,-9.393907,1.686275,-9.774779,-5.345599,2.908712,8.772750,-8.373862,9.110476,6.409625,6.859797,-6.228433,8.071619,8.430715,4.308206,-2.335209,-4.583889,-5.674505,0.951913,4.145650,7.647692,5.129040,-4.903111,9.050146,2.872512,-1.197983,-2.060568,9.699719,-0.551913,9.889891,-1.803657,5.004153,-1.821686,9.532891,-0.340699,8.815438,4.136277,-8.123058,-2.189263,8.605223,-5.534024,-5.954194,-3.394439,-1.122861,-5.362175,-6.018444,-2.301932,-4.841351,4.860245,-1.957730,-6.443659,-2.558199,-8.630332,6.189532,-2.057887,-9.763705,6.659420,0.874338,-6.947429,-0.745768,8.198863,4.940812,-7.158354,6.336398,4.277107,5.488089,2.525305,-3.932733,-7.631956,7.329846,-3.325542,-6.670563,-1.818965,-1.457167,2.660733,-7.177030], dtype = "float32")#candidate|3115|(210,)|const|float32
call_3114 = relay.TupleGetItem(func_1972_call(relay.reshape(const_3115.astype('float32'), [210,])), 1)
call_3116 = relay.TupleGetItem(func_1975_call(relay.reshape(const_3115.astype('float32'), [210,])), 1)
func_2608_call = mod.get_global_var('func_2608')
func_2610_call = mutated_mod.get_global_var('func_2610')
call_3119 = func_2608_call()
call_3120 = func_2608_call()
output = relay.Tuple([call_3042,call_3058,var_3059,bop_3072,bop_3092,call_3101,call_3108,call_3114,const_3115,call_3119,])
output2 = relay.Tuple([call_3043,call_3060,var_3059,bop_3072,bop_3092,call_3102,call_3109,call_3116,const_3115,call_3120,])
func_3128 = relay.Function([var_3039,var_3059,var_3091,], output)
mod['func_3128'] = func_3128
mod = relay.transform.InferType()(mod)
mutated_mod['func_3128'] = func_3128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3128_call = mutated_mod.get_global_var('func_3128')
var_3130 = relay.var("var_3130", dtype = "float32", shape = (3, 8, 6))#candidate|3130|(3, 8, 6)|var|float32
var_3131 = relay.var("var_3131", dtype = "int64", shape = (168,))#candidate|3131|(168,)|var|int64
var_3132 = relay.var("var_3132", dtype = "float64", shape = (3, 8, 6))#candidate|3132|(3, 8, 6)|var|float64
call_3129 = func_3128_call(var_3130,var_3131,var_3132,)
output = call_3129
func_3133 = relay.Function([var_3130,var_3131,var_3132,], output)
mutated_mod['func_3133'] = func_3133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2865_call = mod.get_global_var('func_2865')
func_2866_call = mutated_mod.get_global_var('func_2866')
call_3137 = relay.TupleGetItem(func_2865_call(), 0)
call_3138 = relay.TupleGetItem(func_2866_call(), 0)
func_2354_call = mod.get_global_var('func_2354')
func_2356_call = mutated_mod.get_global_var('func_2356')
call_3154 = relay.TupleGetItem(func_2354_call(), 0)
call_3155 = relay.TupleGetItem(func_2356_call(), 0)
uop_3160 = relay.asin(call_3154.astype('float64')) # shape=(2, 7, 9)
uop_3162 = relay.asin(call_3155.astype('float64')) # shape=(2, 7, 9)
func_690_call = mod.get_global_var('func_690')
func_694_call = mutated_mod.get_global_var('func_694')
var_3165 = relay.var("var_3165", dtype = "uint64", shape = ())#candidate|3165|()|var|uint64
var_3166 = relay.var("var_3166", dtype = "uint64", shape = (192,))#candidate|3166|(192,)|var|uint64
call_3164 = relay.TupleGetItem(func_690_call(relay.reshape(var_3165.astype('uint64'), []), relay.reshape(var_3166.astype('uint64'), [16, 2, 6]), ), 0)
call_3167 = relay.TupleGetItem(func_694_call(relay.reshape(var_3165.astype('uint64'), []), relay.reshape(var_3166.astype('uint64'), [16, 2, 6]), ), 0)
func_2793_call = mod.get_global_var('func_2793')
func_2795_call = mutated_mod.get_global_var('func_2795')
call_3172 = relay.TupleGetItem(func_2793_call(), 0)
call_3173 = relay.TupleGetItem(func_2795_call(), 0)
func_2980_call = mod.get_global_var('func_2980')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_3177 = relay.TupleGetItem(func_2980_call(), 0)
call_3178 = relay.TupleGetItem(func_2982_call(), 0)
output = relay.Tuple([call_3137,uop_3160,call_3164,var_3165,var_3166,call_3172,call_3177,])
output2 = relay.Tuple([call_3138,uop_3162,call_3167,var_3165,var_3166,call_3173,call_3178,])
func_3193 = relay.Function([var_3165,var_3166,], output)
mod['func_3193'] = func_3193
mod = relay.transform.InferType()(mod)
mutated_mod['func_3193'] = func_3193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3193_call = mutated_mod.get_global_var('func_3193')
var_3195 = relay.var("var_3195", dtype = "uint64", shape = ())#candidate|3195|()|var|uint64
var_3196 = relay.var("var_3196", dtype = "uint64", shape = (192,))#candidate|3196|(192,)|var|uint64
call_3194 = func_3193_call(var_3195,var_3196,)
output = call_3194
func_3197 = relay.Function([var_3195,var_3196,], output)
mutated_mod['func_3197'] = func_3197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1828_call = mod.get_global_var('func_1828')
func_1830_call = mutated_mod.get_global_var('func_1830')
call_3220 = func_1828_call()
call_3221 = func_1828_call()
const_3222 = relay.const([[[4.153502,9.742157,-8.284405,-0.170227,2.235851,9.077680,-3.867572,-2.529500,-3.591543],[6.597675,-3.343823,-9.939025,5.002929,-6.139910,-5.072565,-7.877067,0.407651,7.330669],[5.545207,-4.946702,5.053988,-7.739295,-6.522518,-6.127259,-6.925965,9.981464,-4.553498],[-6.927381,-6.604364,1.561805,-8.283582,-8.345187,0.279762,-7.662320,-4.647068,7.267724],[-3.247560,8.882882,-3.824996,-1.701103,-4.511604,6.762557,2.320894,-0.197363,-8.068466],[-5.026977,0.572728,3.836334,-4.481654,-2.223654,-0.010471,-9.738495,5.178005,9.950889],[8.306262,-2.603570,-6.137255,-5.460825,7.772827,8.799653,2.926627,1.046148,-7.837048]],[[2.378388,-9.867310,6.982048,-3.712746,5.769718,-3.000186,2.175828,-6.856040,0.515460],[-0.621293,-4.028987,-0.761596,6.607180,-4.204695,-4.004278,7.647782,8.949198,6.248564],[-0.746545,1.443345,7.867758,1.652009,5.820527,-7.869033,-8.497350,9.507696,2.584939],[-2.359637,0.658981,2.801454,4.581674,1.727323,-5.645922,-9.552512,-3.266121,-3.607543],[7.067176,9.736963,-5.523061,9.810688,-1.587793,3.344307,-8.581173,-7.512885,-3.473712],[5.810467,5.856884,9.082711,-2.662735,-1.015106,1.999182,-5.550463,-6.879240,1.067186],[-5.550339,0.880496,0.818764,-2.149725,-0.596309,4.382990,-5.066275,7.241965,-6.559308]]], dtype = "float32")#candidate|3222|(2, 7, 9)|const|float32
bop_3223 = relay.equal(call_3220.astype('bool'), relay.reshape(const_3222.astype('bool'), relay.shape_of(call_3220))) # shape=(2, 7, 9)
bop_3226 = relay.equal(call_3221.astype('bool'), relay.reshape(const_3222.astype('bool'), relay.shape_of(call_3221))) # shape=(2, 7, 9)
bop_3235 = relay.greater_equal(bop_3223.astype('bool'), relay.reshape(const_3222.astype('bool'), relay.shape_of(bop_3223))) # shape=(2, 7, 9)
bop_3238 = relay.greater_equal(bop_3226.astype('bool'), relay.reshape(const_3222.astype('bool'), relay.shape_of(bop_3226))) # shape=(2, 7, 9)
func_2143_call = mod.get_global_var('func_2143')
func_2145_call = mutated_mod.get_global_var('func_2145')
var_3244 = relay.var("var_3244", dtype = "uint64", shape = (1, 192))#candidate|3244|(1, 192)|var|uint64
call_3243 = relay.TupleGetItem(func_2143_call(relay.reshape(var_3244.astype('uint64'), [192,])), 2)
call_3245 = relay.TupleGetItem(func_2145_call(relay.reshape(var_3244.astype('uint64'), [192,])), 2)
output = relay.Tuple([bop_3235,call_3243,var_3244,])
output2 = relay.Tuple([bop_3238,call_3245,var_3244,])
func_3261 = relay.Function([var_3244,], output)
mod['func_3261'] = func_3261
mod = relay.transform.InferType()(mod)
var_3262 = relay.var("var_3262", dtype = "uint64", shape = (1, 192))#candidate|3262|(1, 192)|var|uint64
output = func_3261(var_3262)
func_3263 = relay.Function([var_3262], output)
mutated_mod['func_3263'] = func_3263
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3278 = relay.var("var_3278", dtype = "float64", shape = (14, 6, 14))#candidate|3278|(14, 6, 14)|var|float64
uop_3279 = relay.acosh(var_3278.astype('float64')) # shape=(14, 6, 14)
func_814_call = mod.get_global_var('func_814')
func_817_call = mutated_mod.get_global_var('func_817')
const_3290 = relay.const([-3.839333,6.341659,-2.883279,7.837657,1.505231,9.043578,-5.746022,-4.766372,-5.227765,7.331049,5.794505,-5.460642,-9.878325,0.554060,1.169228,9.316862,9.150163,-4.786220,-0.476067,-5.607613,5.988758,-5.905940,-3.657147,-3.914421,-7.421550,-5.868949,9.286177,-4.107982,3.106820,7.415204,-0.995002,4.759335,9.660881,1.772758,0.870352,7.683201,-9.480307,-3.710505,4.283049,2.575413,-9.723543,6.111351,-6.161596,8.856494,1.411763,-9.824348,-0.719732,7.197751,-3.602207,9.487396,-9.374524,-4.422941,-1.411106,4.280155,7.669994,7.352234,8.471906,2.510949,-9.844435,4.898346,8.477437,-3.410465,4.129143,9.339016,-2.350905,5.577946,-8.590307,0.870811,-2.907119,-6.163287,9.674654,9.154518,-7.382402,-0.862669,-3.650162,-5.956346,-4.494679,3.611498,7.388656,5.947262,0.537040,-6.865536,-9.610863,7.318755,2.344612,5.519647,4.430525,2.903303,1.495837,8.105891,5.771907,-6.461303,-5.768141,-4.878285,-9.761087,9.086516,-7.984819,2.704520,-8.074884,-6.912708,-8.428851,-7.430188,-0.879989,1.540993,-7.661587,2.935653,0.301170,9.754918,4.887953,8.192346,5.003719,-4.742605,-1.466428,-2.546270,-0.892421,-3.763763,-8.319579,-6.963694,-2.513060,9.458083,-9.877629,6.569584,-1.198219,8.773746,-7.847397,5.275714,-9.427670,7.712410,-5.223995,1.566159,-4.691164,7.877777,-9.869266,-5.930915,-4.277320,9.136129,-3.938096,-5.488165,5.890446,7.695388,-6.497881,8.542414,-8.844010,0.437731,6.327246,3.912955,7.259805,-0.243705,-0.682158,-5.699060,-3.794011,-1.783163,-6.113294,8.886665,-9.581075,2.974607,-3.486250,9.050027,-0.001324,0.191116,3.345139,6.413815,7.893570,5.007470,-7.667903,-9.661055,3.313430,-4.134051,6.594361,-5.828594,-0.857979,-2.800773,-2.042622,7.015323,2.292729,-4.974792,9.169284,1.088660,-3.536800,-5.441292,-1.870721,0.274544,8.915014,-0.214053,-9.872796,8.192657,-9.376672,2.596169,0.883792,6.738860,3.043188,-1.514270,-7.946815,5.940654,-4.355076,4.452287,2.125524,-2.798941,-9.370546,4.968479,9.978465,0.977337,0.722330,0.147709,2.774749,1.138328,-4.175312,3.050873,2.271609,3.568707], dtype = "float32")#candidate|3290|(210,)|const|float32
call_3289 = func_814_call(relay.reshape(const_3290.astype('float32'), [3, 14, 5]))
call_3291 = func_814_call(relay.reshape(const_3290.astype('float32'), [3, 14, 5]))
output = relay.Tuple([uop_3279,call_3289,const_3290,])
output2 = relay.Tuple([uop_3279,call_3291,const_3290,])
func_3296 = relay.Function([var_3278,], output)
mod['func_3296'] = func_3296
mod = relay.transform.InferType()(mod)
var_3297 = relay.var("var_3297", dtype = "float64", shape = (14, 6, 14))#candidate|3297|(14, 6, 14)|var|float64
output = func_3296(var_3297)
func_3298 = relay.Function([var_3297], output)
mutated_mod['func_3298'] = func_3298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2012_call = mod.get_global_var('func_2012')
func_2014_call = mutated_mod.get_global_var('func_2014')
call_3338 = relay.TupleGetItem(func_2012_call(), 2)
call_3339 = relay.TupleGetItem(func_2014_call(), 2)
func_2550_call = mod.get_global_var('func_2550')
func_2552_call = mutated_mod.get_global_var('func_2552')
var_3350 = relay.var("var_3350", dtype = "uint64", shape = (192,))#candidate|3350|(192,)|var|uint64
call_3349 = relay.TupleGetItem(func_2550_call(relay.reshape(var_3350.astype('uint64'), [48, 4])), 2)
call_3351 = relay.TupleGetItem(func_2552_call(relay.reshape(var_3350.astype('uint64'), [48, 4])), 2)
func_1972_call = mod.get_global_var('func_1972')
func_1975_call = mutated_mod.get_global_var('func_1975')
const_3355 = relay.const([-0.867424,-3.948209,7.673513,-1.972783,5.418239,6.348018,2.811520,-3.510752,-0.326458,-8.758236,3.900270,-5.031126,-9.037083,-4.361279,-0.660523,4.496908,-1.937576,2.475382,1.482841,-4.955110,1.966917,8.146622,0.007060,-1.420815,3.700628,7.528796,-3.410701,3.165757,5.934339,-2.108347,-6.803338,-3.798800,4.803045,-0.718991,2.957785,-2.263421,4.049858,6.899140,0.883327,-3.282925,-9.292517,9.410216,9.963084,9.476984,1.530521,-2.332705,5.057926,-6.188311,0.871686,1.192468,-7.660421,9.290633,3.455224,-5.601285,-6.064665,8.765236,8.292536,3.744712,-3.436575,4.083728,-5.610642,9.152240,-0.199488,-6.884791,2.416946,-7.714563,6.297061,2.446440,1.282891,-7.478178,-8.019264,-1.835699,-6.493515,-9.927425,7.260906,-6.449258,-5.300953,1.899062,-1.452331,-3.225237,-8.356226,8.927976,-8.814231,-6.844182,-2.570733,9.303602,0.568546,-6.026742,4.381592,-4.240346,-8.282298,-2.936693,-9.548293,0.188917,4.548402,-7.681823,2.340969,-9.318217,-7.951103,0.961222,8.710057,4.343818,-4.867242,-4.446851,4.044150,-8.337971,-8.058604,-4.580673,2.209153,6.532304,7.007528,-1.395164,5.574969,-1.195080,1.025173,-6.546077,-8.258963,0.298533,-9.681369,-5.186877,-2.752751,2.578162,3.552852,-2.830388,-6.336720,2.600995,5.016716,-5.450882,-5.123944,7.335069,-8.750840,-0.490398,8.871865,4.161158,-9.675307,2.861933,0.801376,8.863290,-9.767256,7.839668,3.706947,-6.300010,-3.624914,4.276692,3.048884,-3.157569,-9.914940,-2.999789,0.811554,8.976666,7.803118,-9.465203,-2.316981,5.150650,7.116722,2.579166,-0.896728,-0.781767,-9.053644,1.051106,-7.925979,6.483703,5.013591,-2.338621,0.285614,-0.409669,2.255222,9.840191,-0.220678,-0.070565,5.961964,-9.985372,-8.075899,-6.082427,-2.130457,-1.867799,-1.071553,4.850573,-9.618042,-8.866385,-0.270242,-2.298786,5.774452,1.402476,3.430106,-6.731703,2.444065,-8.063804,3.866851,-2.712001,-5.642672,-9.954044,-0.702838,-7.799201,6.984419,-0.979036,2.243323,7.869225,1.468353,-8.795416,4.659621,3.308614,4.920788,-5.092171,7.773064,-9.370004,4.372501,-0.494097,5.137708,-2.658404], dtype = "float32")#candidate|3355|(210,)|const|float32
call_3354 = relay.TupleGetItem(func_1972_call(relay.reshape(const_3355.astype('float32'), [210,])), 2)
call_3356 = relay.TupleGetItem(func_1975_call(relay.reshape(const_3355.astype('float32'), [210,])), 2)
uop_3372 = relay.log(call_3349.astype('float32')) # shape=(48, 4)
uop_3374 = relay.log(call_3351.astype('float32')) # shape=(48, 4)
uop_3375 = relay.log2(uop_3372.astype('float32')) # shape=(48, 4)
uop_3377 = relay.log2(uop_3374.astype('float32')) # shape=(48, 4)
output = relay.Tuple([call_3338,var_3350,call_3354,const_3355,uop_3375,])
output2 = relay.Tuple([call_3339,var_3350,call_3356,const_3355,uop_3377,])
func_3381 = relay.Function([var_3350,], output)
mod['func_3381'] = func_3381
mod = relay.transform.InferType()(mod)
var_3382 = relay.var("var_3382", dtype = "uint64", shape = (192,))#candidate|3382|(192,)|var|uint64
output = func_3381(var_3382)
func_3383 = relay.Function([var_3382], output)
mutated_mod['func_3383'] = func_3383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2073_call = mod.get_global_var('func_2073')
func_2075_call = mutated_mod.get_global_var('func_2075')
call_3429 = func_2073_call()
call_3430 = func_2073_call()
func_1700_call = mod.get_global_var('func_1700')
func_1703_call = mutated_mod.get_global_var('func_1703')
const_3432 = relay.const([8.848405,5.979080,-4.266280,0.193367,4.137427,4.965278,5.348739,-1.773797,6.955995,-9.987698,4.408461,-1.217183,9.330472,-7.154476,-1.553047,-4.740467,-0.775074,-3.893474,0.827366,-3.699988,7.781130,-8.282096,-9.233242,-4.449220,7.605002,8.825755,9.657086,5.328792,-7.938560,2.525460,-7.288912,3.652515,4.169762,5.244883,6.865410,-6.892115,0.363634,9.498368,9.517826,8.685765,-0.402330,6.624122,-1.530328,4.625087,-3.476816,5.844276,-2.764112,6.048225,5.531212,4.865112,-6.574984,3.843690,-0.696306,-2.929655,-5.946857,6.920594,-5.600547,-3.999492,0.416751,-3.037322,4.900183,-5.344039,-6.909815,7.633386,-2.455748,-4.240148,-0.859893,-4.010205,-7.740577,-5.122578,-4.796601,-8.219061,-1.615140,9.015141,-4.802676,8.016513,-6.460348,0.880551,-2.588969,-3.179059,4.827266,2.265227,-5.196079,8.236315,-3.917157,2.748273,7.406483,-5.337775,1.408713,5.906037,3.377885,7.168161,8.015683,-6.391867,9.378105,-4.860784,3.337149,5.516658,-1.825028,-3.410547,-4.312276,7.820178,2.089384,-7.581432,-0.273940,-7.649537,-4.390017,9.696067,9.108887,6.928298,-3.819679,4.080933,-9.440497,9.028928,6.817797,4.284699,6.072083,9.899824,-9.996554,4.995325,-9.480302,-0.095136,4.438086,-5.300613,7.007296,-2.843225,6.885487,4.614308,-9.251986,-3.099250,1.327843,1.471133,5.049270,0.158076,-4.710151,-4.199590,5.324561,-3.814125,-7.921744,6.971348,-0.639029,4.805669,8.416802,3.033805,3.664781,-5.400537,-9.949986,4.284388,-0.068534,9.718559,-3.869219,3.194269,4.001793,-6.292042,-9.094638,2.881574,6.473855,0.155523,-7.758584,-8.486320,-5.309714,-5.745478,1.039574,-2.356175,-5.497840,-0.365591,1.558590,-0.488351,6.941658,-0.089401,-6.667263,9.168187,-8.602420,4.182440,7.484032,-2.666300,-6.670841,-9.924030,9.477396,8.062397,1.128476,-4.338400,-5.617312,6.177586,0.990148,7.687772,7.749715,-7.590488,1.799731,-6.740359,4.192951,5.946813,1.235671,8.901041,-2.697314,9.643744], dtype = "float64")#candidate|3432|(196,)|const|float64
call_3431 = relay.TupleGetItem(func_1700_call(relay.reshape(const_3432.astype('float64'), [14, 1, 14])), 0)
call_3433 = relay.TupleGetItem(func_1703_call(relay.reshape(const_3432.astype('float64'), [14, 1, 14])), 0)
func_3193_call = mod.get_global_var('func_3193')
func_3197_call = mutated_mod.get_global_var('func_3197')
const_3435 = relay.const(-6, dtype = "uint64")#candidate|3435|()|const|uint64
const_3436 = relay.const([[2,3,3,-5,10,3,-10,1,8,2,-9,5,7,-2,8,9,10,-5,-4,4,-4,5,-7,-6,6,-6,-8,-2,-7,-10,-6,6,-3,-1,-3,2,1,5,-2,6,-8,5,-3,1,-1,6,9,3,5,8,-8,-7,-8,8,-3,7,7,7,9,2,8,7,-2,-1,2,-4,2,1,6,-9,4,-10,8,-2,7,6,4,7,4,4,9,-8,1,-2,-9,-6,9,-5,-5,-5,-1,-8,-6,4,4,8],[7,-6,-7,7,-3,10,-1,8,-10,-8,8,9,-2,-6,2,-10,3,-9,-8,6,-1,1,1,-10,6,5,6,8,8,6,9,9,6,2,-6,3,-7,7,-8,9,7,-8,10,2,-9,8,-6,9,6,-6,-10,-8,-5,-4,-4,-9,-9,-3,-2,-6,5,10,-10,-3,-2,7,-10,-10,-1,-10,-9,3,5,-8,-1,1,-10,-7,-3,7,9,-9,10,-6,6,-6,-4,-7,-5,9,9,1,-10,-10,-9,8]], dtype = "uint64")#candidate|3436|(2, 96)|const|uint64
call_3434 = relay.TupleGetItem(func_3193_call(relay.reshape(const_3435.astype('uint64'), []), relay.reshape(const_3436.astype('uint64'), [192,]), ), 3)
call_3437 = relay.TupleGetItem(func_3197_call(relay.reshape(const_3435.astype('uint64'), []), relay.reshape(const_3436.astype('uint64'), [192,]), ), 3)
func_1591_call = mod.get_global_var('func_1591')
func_1592_call = mutated_mod.get_global_var('func_1592')
call_3440 = relay.TupleGetItem(func_1591_call(), 0)
call_3441 = relay.TupleGetItem(func_1592_call(), 0)
func_2217_call = mod.get_global_var('func_2217')
func_2220_call = mutated_mod.get_global_var('func_2220')
const_3470 = relay.const([-9,5,6,2,6,-8,8,-3,10,9,7,-10,2,-2,-3,-10,-1,6,9,-9,10,5,5,-10,-6,-8,1,-9,-8,-3,8,-3,8,-8,9,-9,-5,6,2,8,7,1,3,-10,-3,-4,-6,-1,8,9,-9,6,-5,-7,-8,-7,10,-4,7,4,9,-2,4,-9,-7,2,9,1,8,-4,-10,3,8,2,3,9,3,5,7,2,4,-9,9,8,-7,-8,-5,8,8,1,6,-3,1,8,4,3,3,-1,-3,2,3,-8,10,-2,-6,2,-2,2,-7,-5,-8,8,-4,4,10,-9,7,-9,-3,-7,-3,10,-8,-3,3,-5,-8,-2,2,10,-5,4,6,9,4,8,-9,-7,1,1,7,4,-6,8,6,1,6,-3,9,-2,10,-4,-8,-5,8,2,-1,-1,-5,-7,8,10,3,6,5,-7,-6,5,2,3,-5,7,1,5,8,7,-9,-10,2,6,-4,4,6,5,9,-7,-5,10,-2,-4,-6,6,9,10,4], dtype = "int32")#candidate|3470|(195,)|const|int32
call_3469 = relay.TupleGetItem(func_2217_call(relay.reshape(const_3470.astype('int32'), [195,])), 0)
call_3471 = relay.TupleGetItem(func_2220_call(relay.reshape(const_3470.astype('int32'), [195,])), 0)
func_1786_call = mod.get_global_var('func_1786')
func_1789_call = mutated_mod.get_global_var('func_1789')
call_3474 = relay.TupleGetItem(func_1786_call(relay.reshape(const_3436.astype('uint64'), [192,])), 3)
call_3475 = relay.TupleGetItem(func_1789_call(relay.reshape(const_3436.astype('uint64'), [192,])), 3)
func_2865_call = mod.get_global_var('func_2865')
func_2866_call = mutated_mod.get_global_var('func_2866')
call_3476 = relay.TupleGetItem(func_2865_call(), 1)
call_3477 = relay.TupleGetItem(func_2866_call(), 1)
output = relay.Tuple([call_3429,call_3431,const_3432,call_3434,const_3435,const_3436,call_3440,call_3469,const_3470,call_3474,call_3476,])
output2 = relay.Tuple([call_3430,call_3433,const_3432,call_3437,const_3435,const_3436,call_3441,call_3471,const_3470,call_3475,call_3477,])
func_3478 = relay.Function([], output)
mod['func_3478'] = func_3478
mod = relay.transform.InferType()(mod)
mutated_mod['func_3478'] = func_3478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3478_call = mutated_mod.get_global_var('func_3478')
call_3479 = func_3478_call()
output = call_3479
func_3480 = relay.Function([], output)
mutated_mod['func_3480'] = func_3480
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3504 = relay.var("var_3504", dtype = "float64", shape = (9, 3, 15))#candidate|3504|(9, 3, 15)|var|float64
uop_3505 = relay.exp(var_3504.astype('float64')) # shape=(9, 3, 15)
func_690_call = mod.get_global_var('func_690')
func_694_call = mutated_mod.get_global_var('func_694')
var_3539 = relay.var("var_3539", dtype = "uint64", shape = ())#candidate|3539|()|var|uint64
const_3540 = relay.const([1,-7,4,7,-7,9,8,2,2,8,5,-7,-8,-3,-1,-3,10,-7,7,2,-6,9,2,-5,1,-2,7,-9,-10,-3,7,-3,6,-9,5,-7,4,-6,9,-1,-5,7,2,6,-8,-3,4,2,-6,-5,4,-4,9,-5,9,7,8,-5,-9,2,-9,2,1,-5,5,-9,-1,-9,1,7,7,4,-9,8,10,-5,5,4,1,2,-9,-7,4,-9,8,-6,3,2,1,-9,-10,-1,2,-10,7,9,2,6,-1,-10,-2,-8,6,-6,2,7,-2,6,6,-6,-5,-8,-2,3,-9,4,9,6,-2,2,10,5,-2,5,-6,-10,6,1,10,1,7,1,-7,-1,1,-4,-7,-2,-1,-4,8,1,-1,3,-6,-1,2,-9,10,10,7,2,-5,10,1,-7,9,-6,2,-4,-8,1,8,10,4,-9,6,-3,-6,-8,-9,8,5,-8,5,-5,-6,2,-8,2,-2,1,2,8,-8,-7,-3,3,-10,3,5,-8], dtype = "uint64")#candidate|3540|(192,)|const|uint64
call_3538 = relay.TupleGetItem(func_690_call(relay.reshape(var_3539.astype('uint64'), []), relay.reshape(const_3540.astype('uint64'), [16, 2, 6]), ), 0)
call_3541 = relay.TupleGetItem(func_694_call(relay.reshape(var_3539.astype('uint64'), []), relay.reshape(const_3540.astype('uint64'), [16, 2, 6]), ), 0)
output = relay.Tuple([uop_3505,call_3538,var_3539,const_3540,])
output2 = relay.Tuple([uop_3505,call_3541,var_3539,const_3540,])
func_3546 = relay.Function([var_3504,var_3539,], output)
mod['func_3546'] = func_3546
mod = relay.transform.InferType()(mod)
mutated_mod['func_3546'] = func_3546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3546_call = mutated_mod.get_global_var('func_3546')
var_3548 = relay.var("var_3548", dtype = "float64", shape = (9, 3, 15))#candidate|3548|(9, 3, 15)|var|float64
var_3549 = relay.var("var_3549", dtype = "uint64", shape = ())#candidate|3549|()|var|uint64
call_3547 = func_3546_call(var_3548,var_3549,)
output = call_3547
func_3550 = relay.Function([var_3548,var_3549,], output)
mutated_mod['func_3550'] = func_3550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2651_call = mod.get_global_var('func_2651')
func_2652_call = mutated_mod.get_global_var('func_2652')
call_3567 = func_2651_call()
call_3568 = func_2651_call()
func_2290_call = mod.get_global_var('func_2290')
func_2293_call = mutated_mod.get_global_var('func_2293')
var_3587 = relay.var("var_3587", dtype = "int64", shape = (168,))#candidate|3587|(168,)|var|int64
call_3586 = relay.TupleGetItem(func_2290_call(relay.reshape(var_3587.astype('int64'), [3, 14, 4]), relay.reshape(var_3587.astype('int64'), [3, 14, 4]), ), 1)
call_3588 = relay.TupleGetItem(func_2293_call(relay.reshape(var_3587.astype('int64'), [3, 14, 4]), relay.reshape(var_3587.astype('int64'), [3, 14, 4]), ), 1)
bop_3594 = relay.floor_mod(call_3586.astype('float64'), relay.reshape(call_3567.astype('float64'), relay.shape_of(call_3586))) # shape=(2, 7, 9)
bop_3597 = relay.floor_mod(call_3588.astype('float64'), relay.reshape(call_3568.astype('float64'), relay.shape_of(call_3588))) # shape=(2, 7, 9)
func_1812_call = mod.get_global_var('func_1812')
func_1814_call = mutated_mod.get_global_var('func_1814')
const_3605 = relay.const([6,2,-8,10,1,4,4,10,3,2,2,-4,-5,10,-10,1,-8,8,7,-2,6,2,-8,-5,-10,-8,10,5,-4,-7,7,2,2,1,-8,10,9,-3,4,-7,-8,-1,1,-6,-10,-9,3,-4,1,-4,10,-10,-8,5,4,-10,-1,1,-6,6,1,5,-9,9,-4,-7,-9,-3,-2,2,-4,-8,-3,6,-7,-5,10,-10,-9,-6,-2,-9,-10,1,-5,-5,5,-4,2,6,-4,8,3,10,-7,-6,9,-3,10,-10,6,3,-1,-10,9,-2,8,-9,-8,-2,-7,-7,4,5,1,-8,-1,8,8,-4,-3,3,6,4,-1,10,-5,-4,4,-4,5,4,4,7,-2,-2,7,10,-7,7,1,8,4,-6,3,5,-5,-3,5,-3,-1,5,10,9,-8,-5,-6,4,5,8,1,4,-6,-4,-9,1,-2,5,-10,7,-3,-8,3,8,-1,6,4,7,-8,-3,8,6,10,9,-8,-9,-9,9,-10,-2,3,-4], dtype = "uint64")#candidate|3605|(192,)|const|uint64
call_3604 = relay.TupleGetItem(func_1812_call(relay.reshape(const_3605.astype('uint64'), [8, 24])), 1)
call_3606 = relay.TupleGetItem(func_1814_call(relay.reshape(const_3605.astype('uint64'), [8, 24])), 1)
func_3012_call = mod.get_global_var('func_3012')
func_3014_call = mutated_mod.get_global_var('func_3014')
call_3608 = func_3012_call()
call_3609 = func_3012_call()
output = relay.Tuple([var_3587,bop_3594,call_3604,const_3605,call_3608,])
output2 = relay.Tuple([var_3587,bop_3597,call_3606,const_3605,call_3609,])
func_3636 = relay.Function([var_3587,], output)
mod['func_3636'] = func_3636
mod = relay.transform.InferType()(mod)
mutated_mod['func_3636'] = func_3636
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3637 = relay.var("var_3637", dtype = "int64", shape = (168,))#candidate|3637|(168,)|var|int64
func_3636_call = mutated_mod.get_global_var('func_3636')
call_3638 = func_3636_call(var_3637)
output = call_3638
func_3639 = relay.Function([var_3637], output)
mutated_mod['func_3639'] = func_3639
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3673 = relay.var("var_3673", dtype = "int16", shape = (10, 12, 2))#candidate|3673|(10, 12, 2)|var|int16
const_3674 = relay.const([[[-2,10],[9,-4],[-2,-3],[6,10],[-1,-3],[-2,-6],[9,-9],[6,-6],[9,10],[10,4],[-10,2],[2,-3]],[[-10,6],[7,2],[8,2],[-3,2],[6,3],[-6,5],[-5,-2],[-10,-10],[1,-4],[-9,-6],[-6,-1],[-9,-5]],[[7,-9],[5,8],[5,-7],[-7,5],[4,-8],[-4,10],[-5,2],[-5,8],[-5,4],[-5,1],[2,-2],[4,7]],[[-7,-3],[-1,10],[3,1],[9,10],[10,-3],[4,-4],[-2,5],[6,-6],[-9,3],[-1,8],[-4,-1],[-2,-6]],[[-5,-9],[5,-5],[-4,4],[2,-2],[-10,-1],[-7,-4],[1,4],[8,-8],[-1,2],[-2,2],[9,5],[-8,4]],[[-3,9],[-5,-3],[-10,-10],[8,-3],[-4,-4],[4,-2],[4,6],[-4,9],[7,-9],[1,-1],[-6,-9],[-8,3]],[[9,-10],[-5,-8],[8,2],[6,1],[-7,6],[-10,-9],[7,-3],[10,10],[-5,-4],[1,-1],[8,2],[5,7]],[[-6,8],[-1,6],[-4,-4],[-7,8],[3,4],[4,4],[1,7],[-1,-5],[-9,-3],[-1,10],[-8,-4],[9,8]],[[-3,-7],[-10,-10],[6,4],[-4,-2],[-6,-5],[6,6],[10,-10],[1,-2],[-10,1],[9,-10],[1,-2],[-7,-1]],[[-1,-1],[2,10],[7,-2],[8,1],[4,-10],[5,9],[6,-2],[6,-5],[10,4],[3,-5],[-2,7],[4,9]]], dtype = "int16")#candidate|3674|(10, 12, 2)|const|int16
bop_3675 = relay.less(var_3673.astype('bool'), relay.reshape(const_3674.astype('bool'), relay.shape_of(var_3673))) # shape=(10, 12, 2)
bop_3690 = relay.maximum(bop_3675.astype('int16'), relay.reshape(const_3674.astype('int16'), relay.shape_of(bop_3675))) # shape=(10, 12, 2)
output = bop_3690
output2 = bop_3690
func_3695 = relay.Function([var_3673,], output)
mod['func_3695'] = func_3695
mod = relay.transform.InferType()(mod)
var_3696 = relay.var("var_3696", dtype = "int16", shape = (10, 12, 2))#candidate|3696|(10, 12, 2)|var|int16
output = func_3695(var_3696)
func_3697 = relay.Function([var_3696], output)
mutated_mod['func_3697'] = func_3697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2270_call = mod.get_global_var('func_2270')
func_2271_call = mutated_mod.get_global_var('func_2271')
call_3722 = relay.TupleGetItem(func_2270_call(), 1)
call_3723 = relay.TupleGetItem(func_2271_call(), 1)
func_2959_call = mod.get_global_var('func_2959')
func_2960_call = mutated_mod.get_global_var('func_2960')
call_3727 = func_2959_call()
call_3728 = func_2959_call()
uop_3750 = relay.atan(call_3727.astype('float32')) # shape=(2, 7, 9)
uop_3752 = relay.atan(call_3728.astype('float32')) # shape=(2, 7, 9)
output = relay.Tuple([call_3722,uop_3750,])
output2 = relay.Tuple([call_3723,uop_3752,])
func_3755 = relay.Function([], output)
mod['func_3755'] = func_3755
mod = relay.transform.InferType()(mod)
mutated_mod['func_3755'] = func_3755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3755_call = mutated_mod.get_global_var('func_3755')
call_3756 = func_3755_call()
output = call_3756
func_3757 = relay.Function([], output)
mutated_mod['func_3757'] = func_3757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3835 = relay.var("var_3835", dtype = "float64", shape = (7, 8, 16))#candidate|3835|(7, 8, 16)|var|float64
var_3836 = relay.var("var_3836", dtype = "float64", shape = (7, 8, 16))#candidate|3836|(7, 8, 16)|var|float64
bop_3837 = relay.mod(var_3835.astype('float64'), relay.reshape(var_3836.astype('float64'), relay.shape_of(var_3835))) # shape=(7, 8, 16)
func_1547_call = mod.get_global_var('func_1547')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_3841 = relay.TupleGetItem(func_1547_call(), 0)
call_3842 = relay.TupleGetItem(func_1548_call(), 0)
uop_3846 = relay.asin(var_3835.astype('float64')) # shape=(7, 8, 16)
uop_3849 = relay.acos(uop_3846.astype('float64')) # shape=(7, 8, 16)
uop_3851 = relay.sigmoid(uop_3849.astype('float64')) # shape=(7, 8, 16)
bop_3856 = relay.multiply(uop_3849.astype('int64'), relay.reshape(var_3835.astype('int64'), relay.shape_of(uop_3849))) # shape=(7, 8, 16)
func_2793_call = mod.get_global_var('func_2793')
func_2795_call = mutated_mod.get_global_var('func_2795')
call_3860 = relay.TupleGetItem(func_2793_call(), 2)
call_3861 = relay.TupleGetItem(func_2795_call(), 2)
bop_3863 = relay.minimum(uop_3851.astype('uint64'), relay.reshape(bop_3856.astype('uint64'), relay.shape_of(uop_3851))) # shape=(7, 8, 16)
func_1644_call = mod.get_global_var('func_1644')
func_1646_call = mutated_mod.get_global_var('func_1646')
const_3867 = relay.const([-9.012333,8.629420,-1.510906,5.098361,8.103182,-8.807577,-7.408086,-7.749046,0.023940,-5.143356,9.103215,9.316219,-8.912376,7.273750,-5.274898,5.730882,6.247934,-0.728350,-7.548691,-7.116962,-3.165603,0.979402,7.772218,3.082966,-9.183603,-4.369115,-2.797540,-2.192167,5.050719,-6.500791,7.283002,-2.559188,2.267638,-9.486317,-3.892045,4.884615,3.299672,8.941346,5.435174,2.970970,-6.836730,6.142930,9.255595,-4.685179,-3.604844,0.700050,-6.865686,-3.407265,-0.694465,0.347437,-8.983673,9.966156,8.393712,-1.618040,-0.449066,-6.016184,-9.444370,1.364227,-8.433074,-4.243715,-3.283695,-4.602483,8.996624,-1.896774,5.139335,-8.793191,1.628126,8.386247,-3.743418,8.185340,1.203796,-1.845395,4.953993,3.997619,1.822441,-3.598607,7.178473,-4.816674,-3.563281,7.866954,5.421880,9.353006,2.838425,4.174680,-3.933330,-2.595436,3.321476,6.335710,-8.647940,-0.899035,-5.114159,-1.886366,2.390743,-9.217696,3.331318,0.396479,0.616107,5.594225,2.121972,9.261153,8.884951,5.347585,-8.981606,-6.579605,3.848517,-0.818616,2.383618,-1.348916,4.095312,-4.453163,-6.248121,6.350732,-0.701597,-4.821495,-4.531657,-5.080487,-7.834742,-3.921257,-1.762072,6.576937,9.628309,-7.591181,-7.414017,7.136064,6.266316,0.801815,2.518943,-7.661503,0.198295,1.778743,-7.973163,-6.229597,2.163924,2.158313,4.310927,9.662343,-1.377843,5.808703,-1.371581,-5.466992,6.277567,8.222168,1.187712,-1.848103,6.555380,-0.052907,8.196567,-9.828068,9.899990,5.315995,-8.094565,2.080207,-8.165592,-9.973263,1.241052,-4.878198,-9.710807,3.899857,1.311485,-3.021674,4.324763,-5.567510,1.875668,4.505141,-6.743196,4.624395,5.342083,5.180751,-9.384902,6.695494,0.469531,-9.568520,2.571956,7.356457,2.721001,9.430868,-5.242674,-4.122557,-7.789325,-0.581641,-5.248883,-0.470620,-6.978582,7.023982,6.149384,-8.642682,-6.750560,-4.329381,-0.843165,0.329952,6.856678,-4.857714,-1.501013,-1.301281,-1.627521,-1.248028,-5.035330,-2.128084,-0.471625,5.498091,-3.656923,-9.383723,-9.751847,6.210176,-8.597144,4.649090,4.131815,3.331557,-4.999337,0.694762,-6.919551,3.500032,-6.237993,7.732205,1.935153,-6.641033,-8.940282,-3.566411,2.121337,7.269806,-2.541038,3.273366,-3.388356,-0.656408,-0.272116,3.421169,3.188968,-0.967031,8.757049,-3.043442,-3.926063,-8.286691,-6.067204,-5.864704,-0.130964,2.887379,-8.608037,4.474365,-7.788965,3.488608,9.749232,7.506190,2.530243,-2.088321,-1.889777,2.373311,8.925288,1.068541,-7.914769,5.021613,-8.717985,-2.463330,4.588744,3.294788,6.197753,2.828403,-2.806728,3.770932,-4.981545,-4.350682,-7.475616,1.326832,8.008161,1.875482,-2.388346,5.681472,-8.684081,5.112434,7.619607,6.316271,9.511296,5.499070,7.651934,8.134741,-9.537865,-1.379813,1.077553,-0.499743,4.518656,5.992344,-4.503592,-6.389176,-1.515521,-3.962481,-5.778171,-7.498115,-6.838678,0.796892,-1.092536,1.613364,-3.209553,4.594016,-2.701595,9.524974,-7.382127,3.039367,4.619907,7.652889,-9.793254,1.881441,5.657751,-4.354967,0.846179,8.999492,5.601560,-2.743717,1.854484,3.649199,8.007523,1.037823,4.772083,-4.612218,-8.491294,-0.203247,9.813908,1.580557,6.334315,9.939756,-3.147640,-1.129690,7.358707,7.663800,4.877794,-2.004082,2.778003,-2.541782,8.967066,9.492451,-9.054795,-1.415890,3.084134,-8.209516,6.356621,2.869210,-7.174385,3.825462,-8.789936,-9.162043,-6.313192,-1.644745,-1.656155,-1.189454,1.690498,4.544825,-9.117193,-2.948873,-1.642911,-9.300281,-8.298965,2.835751,-5.254897,-2.018088,2.000282,-8.275037,-8.926606,-7.314271,6.649175,-1.821379,-9.753816,-6.965948,9.313991,1.750249,1.376202,1.592188,4.370913,-7.550630,-7.891471,7.940933,-7.040297,0.317625,-7.419267,5.611271,-7.805329,3.099083,-4.727731,9.238271,-3.044792,7.122519,5.904798,0.691217,4.724876,-8.192541,-9.990217,2.683042,9.745226,8.083623,-1.276413,1.539205,-3.314768,-2.238420,-6.245905,-4.207875,-7.374749,-5.245274,1.588879,-3.685346,5.466307,-5.182895,-1.922677,-4.752008,-1.974048,-3.303036,7.737393,7.234262,-2.724997,-4.562493,-6.003571,6.452231,-3.070616,-9.735185,9.238327,-5.397047,5.233020,-1.673156,-0.645275,1.101207,0.644871,-4.372525,7.872059,-4.633186,6.164865,-9.574180,-6.420773,-1.250451,2.924488,-6.054817,9.497413,7.668296,4.357102,6.140168,9.941169,-7.519532,-5.021164,8.862894,-9.031221,8.897227,-3.946862,6.302308,7.663915,5.094437,-0.782468,4.206739,-4.855530,-7.592579,-5.548636,0.627343,-2.355020,-8.122922,-4.959890,-4.148470,-4.507579,-0.200682,1.404509,0.949355,6.580424,5.476848,-7.803312,-7.967092,-7.949014,-6.268667,-7.362937,-7.952720,1.375982,6.522622,-1.697308,-1.135992,7.664765,7.100800,2.031446,8.554779,2.853068,-6.274121,0.149597,-9.149631,-9.558914,-3.923617,-7.904950,1.380493,-2.053797,-5.452851,6.009688,7.825053,1.616424,1.885218,6.955548,-2.635336,-0.077070,-2.618852,4.807297,7.393530,9.384049,-8.757809,-9.089777,5.974004,-2.105476,9.796617,-1.466279,-1.818950,5.956595,-6.168002,-6.347565,6.713354,-3.572077,-1.698247,-0.451866,6.671066,3.039209,3.461265,3.703035,-0.813032,-0.644824,0.340725,-9.384540,9.192306,-7.257687,-6.122625,-5.604896,1.251889,2.882719,-5.279435,1.461015,3.679907,5.258360,-1.217173,7.940905,-5.031821,-7.289412,5.636800,3.142203,-6.695599,-8.478608,-1.127707,-3.604753,6.555316,2.221739,1.470396,2.175183,3.857336,4.315523,-3.464638,2.980365,5.267669,-0.268472,-5.269436,6.730441,4.345637,-5.718783,-0.036441,0.074182,-6.592662,0.409994,8.989980,1.488265,4.826116,-9.565898,9.885436,-2.654866,5.602274,2.325853,-3.074732,-6.723649,2.204691,2.851390,6.089804,6.210419,9.252975,2.048702,-3.460353,6.432181,-7.064197,8.780493,4.261784,-8.232259,-8.915301,6.151683,-5.883154,5.374607,-8.963571,2.391967,9.263683,0.049959,3.942117,-3.575487,9.055745,3.901741,3.845859,-8.358608,-2.893854,-7.541654,-4.856314,6.891145,3.047578,-0.440034,5.100681,-7.195585,8.140437,9.940964,-8.355262,-8.044618,7.684406,9.136612,-8.857559,-4.416634,-2.634783,1.047384,-3.182197,0.723007,2.770009,5.289445,6.931348,-3.642368,3.686338,5.150204,5.429256,-8.871746,7.575508,0.645636,8.120050,-1.386122,-5.504128,-9.289654,-5.127587,0.834298,-0.205619,-0.393167,-6.745086,-2.215999,-0.635147,3.652853,2.853842,2.051375,-7.453527,-7.864583,-6.794070,4.908513,-2.095016,3.081326,-2.599766,0.317862,6.629533,-4.189607,-2.599633,9.508196,6.560738,-1.384363,-6.441650,8.257068,-6.963016,-2.733193,1.255710,-9.967628,-3.867193,-1.601320,-2.075970,6.107604,-3.282261,7.330779,-8.779883,2.855923,9.199870,-6.836975,3.309878,-2.038271,8.584886,-3.777819,3.990426,-3.724598,-4.006980,-8.272060,-4.529458,-2.237133,6.805736,5.970765,1.128946,9.634439,-2.351654,-6.908777,-2.917734,-9.433611,-4.661199,-7.932764,0.459455,5.895345,2.759296,-1.208792,1.165585,-2.889200,-6.622249,-5.686989,2.850080,-9.264730,3.048898,3.215350,-3.384731,6.990952,8.691268,-3.240085,-5.092104,-8.481304,4.190247,-7.177531,-8.101825,5.676096,-1.263850,-8.227837,-0.451076,-5.972272,8.105273,7.619034,7.317831,-2.713822,-8.195467,4.787288,-5.326533,-4.982343,-9.305179,-2.069904,-7.036532,2.082150,9.697114,-6.655588,-4.412472,5.649148,-7.326575,7.014467,8.565004,-8.604699,-8.845798,5.348943,-5.723302,-1.503771,-8.476868,3.501050,6.764771,7.521832,-3.855902,-6.606923,-9.766689,-1.870017,-3.257043,-3.679683,-8.324325,4.762700,-4.914641,4.854288,-2.221318,3.377478,4.341292,9.584095,6.631027,7.650582,-7.202467,6.410022,-1.220876,-8.815242,8.631872,-0.199590,3.323008,6.535092,-8.958631,-9.753531,-7.193178,4.918261,-5.119382,-1.995197,-3.341226,1.636685,8.373390,1.500062,3.457722,-3.348747,7.565931,-1.391708,-9.654602,-9.614584,-2.057173,-6.770730,3.570502,-0.575037,-6.734464,1.028983,1.746208,-5.177348,6.973048,-0.875458,8.303856,-3.541314,3.204464,3.207716,-1.522381,9.989541,4.487033,9.072293,8.524272,-4.569437,2.074058,-2.200218,7.078523,5.167079,1.774941,7.319835,3.091640,4.968680,-0.532654,-6.711215,-0.022554,5.842299,0.594245,-2.256753,3.107279,8.256715,9.028872,3.063261,-2.529895,8.190818,-3.604542,-3.257224,-5.253108,-0.046986,-1.630641,0.367284,-4.991068,-2.687978,-0.583524,3.746747,-1.384225,-7.378483,-8.712580,-3.699948,-3.267513,-7.865061,-5.658246,-1.245686,-5.526244,5.139120,-2.708952,-3.368675,2.615813,-5.043374,0.003909,7.055892,-5.650239,3.770714,7.087667,4.369548,-7.142287,-3.510784,-3.867315,4.746799,-0.016312,-2.872538,-5.573284,7.479856,0.980135,1.643230,9.166153,-3.658198,-2.638571,3.182479,9.927020,1.379235,-3.502180,-5.401222,6.250118,-0.224607,-7.450379,-3.443709,0.152379,1.409482,2.752945,2.215519,1.576885,6.755460,-7.242539,-8.413649,2.795291,6.197072,1.781541,7.526476,2.357187,-4.929640,-0.549509,-0.082147,2.576010,-7.888208,-0.124982,6.875733,-3.490114,2.821345,4.544607,-6.543557,-3.261729,6.099483,-6.134618,-7.226527,-0.295056,3.210940,1.301300,-5.246041,3.175056,2.935205,-2.906895,-6.856856,1.618775,4.816920,0.017086,-5.319668,4.249103,5.331447,-6.720775,-7.753826,3.556819,2.914244,9.816151,0.796422,-4.592609,5.520313,5.244089,1.655882,5.055234,-5.890563,0.969233,-9.534328,-8.995528,-2.209605,4.543232,0.331382,-0.110097,9.678111,-0.825339,5.629749,-5.560543,6.272160,-4.182731,-7.548635,-0.578651,-4.674549,5.882366,-7.993551,-8.442663,-5.345505,5.158547,-5.719434,-5.735082,-9.656926,-5.365557,-5.473286,-6.099576,0.039389,-9.176573,-1.842569,-7.246566,-1.040407,-0.495684,3.276878,2.825489,-7.408600,2.396554,1.640469,3.232891,-3.254212,6.179095,-6.925911,-8.292110,-6.214080,3.695370,7.090423,1.127375,-7.076758,4.373744,-3.117129,1.202670,5.765505,-6.950308,3.168961,-4.750396,4.253567,-1.404484,2.064652,3.601000,7.371501,4.192165,-1.400192,2.156611,-6.701019,-2.711490,7.172195,0.941497,-7.375862,2.291114,4.062246,8.271138,1.002561,-1.592911,6.531318,-5.112587,3.217143,4.234479,-8.767484,-2.377931,3.520301,-7.705008,-4.673859,-9.741565,1.040180,-3.905981,0.827445,2.961446,8.956250,-1.519989,-3.106329,-7.086380,-6.959575,1.641484,-5.484921,1.956963,8.974574,-7.128425,8.518019,-3.734927,4.269652,-5.335643,1.223631,3.574454,0.342316,8.392125,5.614986,8.576654,2.445773,-8.603634,-2.054640,-9.876044,5.385870,-6.965573,7.940798,6.698406,1.555411,0.968416,-2.153318,-2.310070,-2.290452,4.935693,5.250567,5.751148,3.674884,-9.805359,1.440918,0.294700,4.449338,-9.378161], dtype = "float32")#candidate|3867|(1050,)|const|float32
call_3866 = relay.TupleGetItem(func_1644_call(relay.reshape(const_3867.astype('float32'), [1050,])), 0)
call_3868 = relay.TupleGetItem(func_1646_call(relay.reshape(const_3867.astype('float32'), [1050,])), 0)
bop_3885 = relay.greater_equal(bop_3856.astype('bool'), relay.reshape(bop_3837.astype('bool'), relay.shape_of(bop_3856))) # shape=(7, 8, 16)
output = relay.Tuple([call_3841,call_3860,bop_3863,call_3866,const_3867,bop_3885,])
output2 = relay.Tuple([call_3842,call_3861,bop_3863,call_3868,const_3867,bop_3885,])
func_3890 = relay.Function([var_3835,var_3836,], output)
mod['func_3890'] = func_3890
mod = relay.transform.InferType()(mod)
var_3891 = relay.var("var_3891", dtype = "float64", shape = (7, 8, 16))#candidate|3891|(7, 8, 16)|var|float64
var_3892 = relay.var("var_3892", dtype = "float64", shape = (7, 8, 16))#candidate|3892|(7, 8, 16)|var|float64
output = func_3890(var_3891,var_3892,)
func_3893 = relay.Function([var_3891,var_3892,], output)
mutated_mod['func_3893'] = func_3893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2959_call = mod.get_global_var('func_2959')
func_2960_call = mutated_mod.get_global_var('func_2960')
call_3900 = func_2959_call()
call_3901 = func_2959_call()
func_3636_call = mod.get_global_var('func_3636')
func_3639_call = mutated_mod.get_global_var('func_3639')
var_3903 = relay.var("var_3903", dtype = "int64", shape = (84, 2))#candidate|3903|(84, 2)|var|int64
call_3902 = relay.TupleGetItem(func_3636_call(relay.reshape(var_3903.astype('int64'), [168,])), 3)
call_3904 = relay.TupleGetItem(func_3639_call(relay.reshape(var_3903.astype('int64'), [168,])), 3)
func_2865_call = mod.get_global_var('func_2865')
func_2866_call = mutated_mod.get_global_var('func_2866')
call_3926 = relay.TupleGetItem(func_2865_call(), 0)
call_3927 = relay.TupleGetItem(func_2866_call(), 0)
uop_3938 = relay.asinh(call_3902.astype('float64')) # shape=(192,)
uop_3940 = relay.asinh(call_3904.astype('float64')) # shape=(192,)
output = relay.Tuple([call_3900,var_3903,call_3926,uop_3938,])
output2 = relay.Tuple([call_3901,var_3903,call_3927,uop_3940,])
func_3958 = relay.Function([var_3903,], output)
mod['func_3958'] = func_3958
mod = relay.transform.InferType()(mod)
var_3959 = relay.var("var_3959", dtype = "int64", shape = (84, 2))#candidate|3959|(84, 2)|var|int64
output = func_3958(var_3959)
func_3960 = relay.Function([var_3959], output)
mutated_mod['func_3960'] = func_3960
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3978 = relay.var("var_3978", dtype = "int16", shape = (16, 14, 2))#candidate|3978|(16, 14, 2)|var|int16
var_3979 = relay.var("var_3979", dtype = "int16", shape = (16, 14, 2))#candidate|3979|(16, 14, 2)|var|int16
bop_3980 = relay.subtract(var_3978.astype('int16'), relay.reshape(var_3979.astype('int16'), relay.shape_of(var_3978))) # shape=(16, 14, 2)
uop_3985 = relay.atanh(var_3979.astype('float64')) # shape=(16, 14, 2)
func_2608_call = mod.get_global_var('func_2608')
func_2610_call = mutated_mod.get_global_var('func_2610')
call_3991 = func_2608_call()
call_3992 = func_2608_call()
func_1972_call = mod.get_global_var('func_1972')
func_1975_call = mutated_mod.get_global_var('func_1975')
var_4005 = relay.var("var_4005", dtype = "float32", shape = (210, 1))#candidate|4005|(210, 1)|var|float32
call_4004 = relay.TupleGetItem(func_1972_call(relay.reshape(var_4005.astype('float32'), [210,])), 1)
call_4006 = relay.TupleGetItem(func_1975_call(relay.reshape(var_4005.astype('float32'), [210,])), 1)
uop_4015 = relay.asin(uop_3985.astype('float32')) # shape=(16, 14, 2)
var_4023 = relay.var("var_4023", dtype = "float32", shape = (16, 14, 2))#candidate|4023|(16, 14, 2)|var|float32
bop_4024 = relay.bitwise_or(uop_4015.astype('uint8'), relay.reshape(var_4023.astype('uint8'), relay.shape_of(uop_4015))) # shape=(16, 14, 2)
func_2290_call = mod.get_global_var('func_2290')
func_2293_call = mutated_mod.get_global_var('func_2293')
const_4028 = relay.const([-7,-3,1,4,10,-8,-3,-4,-9,7,-6,-7,-8,8,-4,-1,5,-1,-9,-10,8,7,-9,10,-1,-9,-3,-2,9,2,-4,6,8,-6,2,-3,3,4,2,2,-1,10,7,-5,-3,10,2,7,-3,7,10,-8,2,5,-5,7,7,-8,-1,-1,-3,-2,-8,5,3,-9,-1,-5,8,-7,8,9,-3,-10,-3,1,-5,-1,3,6,-7,8,-1,-1,5,-4,-1,-8,1,9,10,-9,4,-8,3,2,9,10,-6,-1,-8,-4,9,5,2,3,5,-7,-2,-5,-10,-7,-8,-9,5,-7,-6,-3,-5,-6,-2,10,-2,6,3,9,8,-2,-10,-3,2,1,1,4,2,-2,10,-4,9,6,-9,7,10,6,-10,-8,-8,-10,-1,-4,4,-9,-10,-7,-3,2,8,1,-7,-10,7,9,5,6,-4,2,8,4], dtype = "int64")#candidate|4028|(168,)|const|int64
call_4027 = relay.TupleGetItem(func_2290_call(relay.reshape(const_4028.astype('int64'), [3, 14, 4]), relay.reshape(const_4028.astype('int64'), [3, 14, 4]), ), 0)
call_4029 = relay.TupleGetItem(func_2293_call(relay.reshape(const_4028.astype('int64'), [3, 14, 4]), relay.reshape(const_4028.astype('int64'), [3, 14, 4]), ), 0)
bop_4030 = relay.less(bop_4024.astype('bool'), relay.reshape(var_3978.astype('bool'), relay.shape_of(bop_4024))) # shape=(16, 14, 2)
func_1812_call = mod.get_global_var('func_1812')
func_1814_call = mutated_mod.get_global_var('func_1814')
var_4036 = relay.var("var_4036", dtype = "uint64", shape = (192,))#candidate|4036|(192,)|var|uint64
call_4035 = relay.TupleGetItem(func_1812_call(relay.reshape(var_4036.astype('uint64'), [8, 24])), 1)
call_4037 = relay.TupleGetItem(func_1814_call(relay.reshape(var_4036.astype('uint64'), [8, 24])), 1)
func_2338_call = mod.get_global_var('func_2338')
func_2340_call = mutated_mod.get_global_var('func_2340')
const_4048 = relay.const([-2.287618,8.754566,7.054538,-6.684953,-0.481232,-2.560659,7.291451,9.185974,7.084660,-1.872068,8.598394,0.195360,-9.786190,-6.167965,-0.238922,-4.544025,-9.427681,-7.347174,-5.011809,2.735869,-5.061066,6.601573,1.118351,5.881672,-4.744872,-1.073133,6.665488,8.724629,8.382011,7.778209,-9.604223,-6.203887,-5.238651,-9.812737,4.953221,1.635199,8.810280,-2.450081,2.403405,-7.222876,1.966325,9.312480,-0.737314,-0.461028,-1.017283,-0.707986,7.303806,-9.734100,4.687824,-3.916592,-4.942108,4.909526,-8.173227,-6.180442,2.836996,-7.109218,1.845970,7.236580,-6.598785,7.897249,-7.331546,7.799951,-3.149030,3.663818,-7.226734,1.950417,4.431487,2.182922,-3.976779,5.870465,-1.570103,-2.483830,8.814979,8.227741,-7.764788,1.593655,-0.790406,-2.497274,-5.456397,9.554767,-7.357367,1.387828,7.669881,2.353947,-3.155851,8.684419,-7.476492,-8.930712,0.098573,3.874126,8.263977,-6.232625,4.965644,-2.231483,-1.867847,2.384061,-8.634703,-9.252219,6.380871,1.896955,-2.782091,-8.694207,9.246880,4.652827,-2.755686,-7.887505,9.908438,-9.801665,3.412863,-4.963671,-4.649549,-7.606792,-5.268538,-5.621650,0.714574,4.411240,-0.448853,-2.447068,-6.839644,-7.008693,5.008262,-7.621790,-2.906362,6.949755,-9.582933,9.004324,5.731795,4.852484,1.757623,5.903958,-8.233198,-3.363046,-1.045319,-3.938876,-6.074587,-8.031300,9.349663,-9.157052,7.934454,8.375593,3.935418,-0.107414,9.062825,-8.823481,6.113123,6.524382,-1.475897,-9.783649,-2.957512,-2.422623,6.196795,-7.641390,4.160790,-2.128977,1.927622,-6.427573,0.770109,8.669171,8.959967,1.805391,-3.873302,-3.397858,-2.975346,4.752720,8.808161,-5.132187,-3.432237,3.298930,5.111138,-4.399452,4.452746,-2.919481,0.866514,8.627998,8.210269,8.901921,6.082079,1.959939,-9.909206,3.142567,-7.805984,4.624307,-8.838619,-2.216519,-6.560876,-9.186743,-8.575657,-6.022762,7.318133,-2.311442,-5.749459,-5.629313,9.968105,-6.380390,-5.088775,0.725006,2.053188,-3.598686,9.451464,7.360181,7.791114,7.296707,-9.586860,-9.123970,-9.581706,9.137714,-0.107628,-8.113504,2.600386,-6.838189,-4.109481,-9.752494,-1.280370,-5.055024,3.025458,1.413799,5.890859,-9.271977,9.458200,3.827321,4.925102,-2.161854,-6.205647,1.135629,0.487943,-1.725366,6.168221,8.267054,9.338659,6.727281,-4.746469,1.199951,-6.990895,9.399372,-3.553686,0.993933,6.890067,-1.931536,-3.976847,0.025401,6.135710,-4.939680,-1.932724,-3.213921,4.718949,0.141142,-0.547207,7.326495,-7.073759,-5.033713,-6.966986,7.078742,-9.420985,6.775730,8.205331,-9.013091,-9.471795,-3.796822,7.558551,-0.413732,-8.326047,-8.737623,0.614756,2.502418,-0.062244,-3.452282,8.092983,3.442114,9.536942,1.691540,6.363662,5.992331,-8.890915,7.101568,-6.370833,-7.945225,7.584917,-2.890299,-5.980030,-9.748644,5.729482,8.977289,-5.555346,-6.246656,-2.696081,8.014597,-2.662126,2.857099,-0.596041,-0.627331,3.704864,5.222021,7.588133,1.556339,-4.517408,-0.696816,-8.191708,-1.604073,-0.544496,1.201568,-5.429000,7.686774,6.353280,4.008043,0.410582,7.197100,-7.825132,5.752781,-9.863070,-1.225254,-0.899731,-5.102909,-4.179135,-0.627473,-7.267182,4.039990,-2.286550,1.161513,-8.855639,3.006767,-6.726905,-4.373757,6.878094,-7.206876,-4.539947,-2.964351,5.631531,6.542073,-0.545880,0.456604,7.889453,9.045541,8.771071,-5.919235,-2.011769,3.094356,-5.655899,1.605662,3.634953,0.242823,-0.036655,-3.889530,-6.580655,-9.695176,5.446181,1.089341,-0.341031,-2.863074,7.786811,8.837996,-9.575817,-5.683115,-1.049151,9.489510,3.483606,8.049269,-6.478614,-8.109117,-0.148942,5.142629,-5.848221,-1.361641,-6.775427,-0.739300,5.350895,6.754746,-4.630499,-4.698663,5.714890,-7.949975,-1.061511,6.214905,8.447303,-3.840102,-1.576031,-0.023544,-7.803292,8.334426,4.822629,2.680077,-7.513871,6.478443,-8.216943,7.216200,8.101674,8.637919,-8.063453,-7.918549,-6.883733,7.106998,9.833683,0.523294,-0.240783,-2.235907,-4.918211,5.533116,-0.309075,8.086724,-1.888095,-7.821779,-4.005028,-6.294359,-1.401612,-5.450301,9.396722,4.248897,4.937506,-7.351357,-1.864126,-4.994738,-3.971292,2.112796,-0.955394,-7.393634,6.638196,-2.753591,-7.532822,-0.482141,0.871282,4.777302,-1.245275,4.060733,6.246718,-6.538770,-5.657180,-2.925602,-0.052388,9.017691,-3.458680,0.606617,3.088930,2.255414,-2.381630,-7.015673,-4.132152,-4.640928,2.139009,7.589022,-3.243070,-5.012538,-8.421125,3.520115,-3.716147,8.753374,-6.189813,-3.460538,-5.646070,8.259320,-9.360799,-2.760756,4.271797,7.014480,0.427716,6.180488,-5.148608,-3.403806,-0.208023,9.110295,8.658770,2.825373,-3.479209,1.736735,1.946729,2.762879,-0.057657,7.740579,7.455420,-2.442059,7.088781,-9.580414,4.802985,-8.657277,-8.442424,-8.909228,-7.503665,-5.738477,-2.047294,2.122768,-8.536608,6.385584,-4.225303,7.504926,5.656773,-4.358570,9.260723,6.296755,-6.322982,3.367824,6.250758,-6.038880,8.217160,-8.003674,-9.788230,-7.895764,4.161044,4.801041,-4.645376,7.876952,7.339531,-0.832622,-8.160214,0.330207,8.827965,8.619207,7.100264,-6.718378,-2.175125,-1.666320,-8.208987,-5.732919,-6.489697,8.619196,-0.566198,-2.070962,5.815469,-5.677612,-1.742056,-2.393478,-6.859620,7.496646,4.462943,6.997701,-1.793413,-1.652760,-2.725523,-5.898581,-1.938379,4.970928,-0.230949,-8.196572,-2.865564,7.141707,1.416083,-0.112545,-4.123034,0.867774,8.216919,1.233585,-7.309549,-8.993116,-6.057670,2.193147,-6.791484,6.606139,-7.846128,-3.880934,2.096111,-5.528034,2.663738,-9.649946,-6.718039,6.019713,-9.255133,7.429264,-1.562272,6.474832,4.542231,-2.760522,5.329601,-3.664015,9.394863,-7.495398,7.943078,8.027120,3.459158,-6.731964,6.646310,4.153862,-7.928746,-7.370679,-1.331041,-7.988156,-9.320024,-1.630315,-0.416636,-1.187090,9.066929,-5.944116,3.274473,-0.792836,-7.822828,-8.232306,-7.897877,4.949127,-2.544792,-8.963351,-6.066850,-4.192490,8.723075,-4.362222,-4.525888,4.939270,-8.843220,-6.550925,-4.746735,-0.996768,3.979057,-6.100906,6.812517,-8.060680,-1.052570,-4.117723,6.409312,7.419986,8.446989,7.917757,-0.436075,-6.939026,-8.314448,-3.248432,4.063095,4.044276,2.264726,-2.486624,-5.500397,6.211289,8.407795,8.646554,-8.674454,1.508659,-8.119514,5.236276,-8.230499,4.235667,-3.021653,3.696418,7.003690,-9.088527,-5.140963,8.667650,-1.932277,4.592033,-6.078314,-3.595445,-7.203210,2.653249,-2.051635,5.616400,-1.341035,-5.072898,0.552962,-9.110274,-5.854564,2.957006,1.828951,1.508720,1.769555,-6.432433,4.186661,1.940080,-9.726692,9.253809,1.176314,8.242766,9.150845,1.422133,4.556322,7.261855,-4.705076,7.479730,5.907592,8.590194,1.031168,6.363809,0.283550,-9.321231,0.462396,-1.888753,6.282431,-8.614362,7.581208,5.486974,6.882825,2.944468,9.525516,3.713069,3.341937,-4.423314,-3.845765,-0.770080,-8.198643,-6.258593,-5.176113,-2.535739,-2.140915,-5.717526,-4.566428,4.880884,7.863688,-8.616492,5.902295,0.225600,-0.906006,0.989967,2.808644,-2.251209,4.225629,5.950150,-5.568578,9.669294,-6.205250,-3.642297,6.355045,-8.970002,-8.815165,9.340073,3.337583,3.840765,-1.848212,-0.508230,-7.653853,0.111154,6.411565,0.927448,5.012841,6.442226,-4.010688,-7.348510,6.495139,-8.228871,1.942410,5.721910,4.426953,7.104216,2.736429,3.482647,-1.728883,7.841357,-1.956690,4.229344,8.829839,9.041063,4.331103,2.327620,2.553018,-6.836723,-7.656819,6.326435,-1.331917,6.605315,-0.921331,0.523700,-2.769807,6.357908,0.512239,-7.797091,9.004733,0.646964,2.988678,6.753015,-8.919468,-8.528599,6.937436,-9.546864,-2.788642,4.061479,5.396213,5.840123,-2.823865,-1.231305,-9.866235,-6.669133,-6.881767,-1.901747,9.946385,-8.258165,6.147985,-3.562063,-5.411285,5.637222,-6.231914,-0.812688,7.187226,1.535125,-8.325144,-2.847260,-8.715001,-1.044633,-1.227629,4.489945,-4.568424,6.675916,-0.637547,-7.969532,4.190628,3.373457,-4.019003,0.262020,1.970737,3.277369,-5.897166,-5.934735,7.485696,5.089094,9.102526,8.884573,8.633277,-5.178610,-5.610551,-7.869635,-1.736252,6.805029,5.904987,-6.331537,-0.446757,-2.074167,6.875669,2.487409,9.627747,-3.250799,6.263937,-3.089574,7.964863,-6.554574,5.471232,8.210128,-8.793304,6.455919,3.144174,4.858588,9.608814,-9.763017,-1.252328,1.513529,-8.198654,4.226555,5.133657,-1.962426,-5.905083,-2.851055,-3.519732,6.294442,5.067508,-2.790952,-2.595802,-9.126712,-1.985053,5.370518,-7.101621,-7.889236,-0.380349,6.793548,-7.408687,-9.821488,-8.209544,-6.690374,-6.206488,-3.036458,-3.943414,-9.352057,-7.051612,4.505726,5.007046,4.039058,1.584571,6.640004,2.980796,-8.149262,-3.000222,-9.386163,5.205675,0.237568,-9.575766,3.248167,7.814324,-8.193214,-4.956634,-6.869720,-4.447037,-5.730994,2.671264,8.099834,-5.961105,-0.210529,5.568910,2.512994,-9.349873,-2.220334,-7.755226,6.362616,-2.464481,8.464160,9.138801,-0.765632,-5.262643,-3.178667,-7.736058,-1.719198,7.799860,-0.657360,-8.226386,4.378943,-5.655432,5.691822,-3.436437,-3.661506,-0.162900,8.992514,9.816346,8.727917,-2.398746,-9.984235,-0.308437,2.635285,7.492283,-6.122170,-8.529726,-4.810043,8.513413,4.721655,8.594975,-4.763757,-1.575057,2.059747,-8.236263,3.664769,-0.865020,4.505666,-4.617508,-3.125214,-7.864987,9.236000,5.814709,-1.854758,-9.262382,-3.253058,2.197030,0.063918,-6.899423,-9.159523,-1.389656,-0.859934,2.684250,9.395379,-7.434115,9.219926,-8.914660,1.175825,7.702147,-6.822056,-3.385845,8.225878,-0.659737,3.658078,7.576371,2.239136,7.907705,8.480840,9.770620,-5.565716,-7.569512,2.569469,7.682178,-1.855700,-2.143428,-5.557197,6.110405,-2.671435,-0.182429,5.774402,8.694149,1.937287,-7.174492,5.130698,1.313823,7.406983,-0.548609,-2.941206,-9.214777,-6.043987,-2.878289,7.074112,-7.837145,6.249702,3.747817,-0.569428,0.229438,1.699633,-1.394605,9.957373,-5.477717,-8.352301,1.652244,-6.234914,9.724366,-6.957940,4.758395,-4.526402,-4.503251,1.644622,-7.892745,-8.698354,3.582755,4.257432,3.261913,-1.960519,5.581840,-8.897852,0.643940,-5.443600,6.263743,-5.980291,-4.467923,-4.231694,-5.708630,-3.474145,5.842947,-7.188172,-4.754571,6.630785,3.753599,-0.622726,-5.124485,1.572792,3.299191,-5.067047,8.876046,-5.647198,8.605797,-6.112777,-1.908339,-4.810714,4.552946,-8.507019,-2.368060,0.315433,5.272295,3.165172,-0.316017,-1.468577,-7.687893,-0.120199,9.004691,-5.346417,3.552452,6.989984,6.245399,-9.731956,-2.085432,9.570056,-0.884875,-1.532250,-2.067823,2.681873,9.871089,-2.972463,-9.285766,0.258386,2.348523,5.748587,-0.008890,-2.744604,-3.136660,-0.444915,-4.341612,-5.978934], dtype = "float64")#candidate|4048|(1056,)|const|float64
call_4047 = relay.TupleGetItem(func_2338_call(relay.reshape(const_4048.astype('float64'), [6, 16, 11])), 0)
call_4049 = relay.TupleGetItem(func_2340_call(relay.reshape(const_4048.astype('float64'), [6, 16, 11])), 0)
output = relay.Tuple([bop_3980,call_3991,call_4004,var_4005,call_4027,const_4028,bop_4030,call_4035,var_4036,call_4047,const_4048,])
output2 = relay.Tuple([bop_3980,call_3992,call_4006,var_4005,call_4029,const_4028,bop_4030,call_4037,var_4036,call_4049,const_4048,])
func_4058 = relay.Function([var_3978,var_3979,var_4005,var_4023,var_4036,], output)
mod['func_4058'] = func_4058
mod = relay.transform.InferType()(mod)
mutated_mod['func_4058'] = func_4058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4058_call = mutated_mod.get_global_var('func_4058')
var_4060 = relay.var("var_4060", dtype = "int16", shape = (16, 14, 2))#candidate|4060|(16, 14, 2)|var|int16
var_4061 = relay.var("var_4061", dtype = "int16", shape = (16, 14, 2))#candidate|4061|(16, 14, 2)|var|int16
var_4062 = relay.var("var_4062", dtype = "float32", shape = (210, 1))#candidate|4062|(210, 1)|var|float32
var_4063 = relay.var("var_4063", dtype = "float32", shape = (16, 14, 2))#candidate|4063|(16, 14, 2)|var|float32
var_4064 = relay.var("var_4064", dtype = "uint64", shape = (192,))#candidate|4064|(192,)|var|uint64
call_4059 = func_4058_call(var_4060,var_4061,var_4062,var_4063,var_4064,)
output = call_4059
func_4065 = relay.Function([var_4060,var_4061,var_4062,var_4063,var_4064,], output)
mutated_mod['func_4065'] = func_4065
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4092 = relay.var("var_4092", dtype = "float64", shape = (3, 11, 8))#candidate|4092|(3, 11, 8)|var|float64
uop_4093 = relay.cosh(var_4092.astype('float64')) # shape=(3, 11, 8)
uop_4101 = relay.erf(uop_4093.astype('float32')) # shape=(3, 11, 8)
bop_4105 = relay.equal(uop_4101.astype('bool'), relay.reshape(uop_4093.astype('bool'), relay.shape_of(uop_4101))) # shape=(3, 11, 8)
var_4117 = relay.var("var_4117", dtype = "float32", shape = (3, 11, 8))#candidate|4117|(3, 11, 8)|var|float32
bop_4118 = relay.logical_and(uop_4101.astype('bool'), relay.reshape(var_4117.astype('bool'), relay.shape_of(uop_4101))) # shape=(3, 11, 8)
uop_4123 = relay.log2(var_4092.astype('float32')) # shape=(3, 11, 8)
func_2608_call = mod.get_global_var('func_2608')
func_2610_call = mutated_mod.get_global_var('func_2610')
call_4140 = func_2608_call()
call_4141 = func_2608_call()
output = relay.Tuple([bop_4105,bop_4118,uop_4123,call_4140,])
output2 = relay.Tuple([bop_4105,bop_4118,uop_4123,call_4141,])
func_4149 = relay.Function([var_4092,var_4117,], output)
mod['func_4149'] = func_4149
mod = relay.transform.InferType()(mod)
var_4150 = relay.var("var_4150", dtype = "float64", shape = (3, 11, 8))#candidate|4150|(3, 11, 8)|var|float64
var_4151 = relay.var("var_4151", dtype = "float32", shape = (3, 11, 8))#candidate|4151|(3, 11, 8)|var|float32
output = func_4149(var_4150,var_4151,)
func_4152 = relay.Function([var_4150,var_4151,], output)
mutated_mod['func_4152'] = func_4152
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4204 = relay.var("var_4204", dtype = "uint8", shape = (4, 1, 16))#candidate|4204|(4, 1, 16)|var|uint8
var_4205 = relay.var("var_4205", dtype = "uint8", shape = (4, 12, 16))#candidate|4205|(4, 12, 16)|var|uint8
bop_4206 = relay.subtract(var_4204.astype('uint8'), var_4205.astype('uint8')) # shape=(4, 12, 16)
uop_4211 = relay.atan(var_4205.astype('float64')) # shape=(4, 12, 16)
bop_4219 = relay.bitwise_or(uop_4211.astype('uint8'), relay.reshape(var_4205.astype('uint8'), relay.shape_of(uop_4211))) # shape=(4, 12, 16)
output = relay.Tuple([bop_4206,bop_4219,])
output2 = relay.Tuple([bop_4206,bop_4219,])
func_4227 = relay.Function([var_4204,var_4205,], output)
mod['func_4227'] = func_4227
mod = relay.transform.InferType()(mod)
var_4228 = relay.var("var_4228", dtype = "uint8", shape = (4, 1, 16))#candidate|4228|(4, 1, 16)|var|uint8
var_4229 = relay.var("var_4229", dtype = "uint8", shape = (4, 12, 16))#candidate|4229|(4, 12, 16)|var|uint8
output = func_4227(var_4228,var_4229,)
func_4230 = relay.Function([var_4228,var_4229,], output)
mutated_mod['func_4230'] = func_4230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2320_call = mod.get_global_var('func_2320')
func_2322_call = mutated_mod.get_global_var('func_2322')
call_4269 = func_2320_call()
call_4270 = func_2320_call()
func_3695_call = mod.get_global_var('func_3695')
func_3697_call = mutated_mod.get_global_var('func_3697')
var_4275 = relay.var("var_4275", dtype = "int16", shape = (240,))#candidate|4275|(240,)|var|int16
call_4274 = func_3695_call(relay.reshape(var_4275.astype('int16'), [10, 12, 2]))
call_4276 = func_3695_call(relay.reshape(var_4275.astype('int16'), [10, 12, 2]))
func_3381_call = mod.get_global_var('func_3381')
func_3383_call = mutated_mod.get_global_var('func_3383')
var_4293 = relay.var("var_4293", dtype = "uint64", shape = (96, 2))#candidate|4293|(96, 2)|var|uint64
call_4292 = relay.TupleGetItem(func_3381_call(relay.reshape(var_4293.astype('uint64'), [192,])), 4)
call_4294 = relay.TupleGetItem(func_3383_call(relay.reshape(var_4293.astype('uint64'), [192,])), 4)
output = relay.Tuple([call_4269,call_4274,var_4275,call_4292,var_4293,])
output2 = relay.Tuple([call_4270,call_4276,var_4275,call_4294,var_4293,])
func_4301 = relay.Function([var_4275,var_4293,], output)
mod['func_4301'] = func_4301
mod = relay.transform.InferType()(mod)
var_4302 = relay.var("var_4302", dtype = "int16", shape = (240,))#candidate|4302|(240,)|var|int16
var_4303 = relay.var("var_4303", dtype = "uint64", shape = (96, 2))#candidate|4303|(96, 2)|var|uint64
output = func_4301(var_4302,var_4303,)
func_4304 = relay.Function([var_4302,var_4303,], output)
mutated_mod['func_4304'] = func_4304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2270_call = mod.get_global_var('func_2270')
func_2271_call = mutated_mod.get_global_var('func_2271')
call_4331 = relay.TupleGetItem(func_2270_call(), 2)
call_4332 = relay.TupleGetItem(func_2271_call(), 2)
func_3695_call = mod.get_global_var('func_3695')
func_3697_call = mutated_mod.get_global_var('func_3697')
const_4334 = relay.const([7,-8,7,10,-7,10,-1,-7,3,-2,-3,-4,-1,6,-5,-9,-3,1,1,8,2,-3,10,6,4,-2,10,-5,-9,7,5,8,6,-10,3,-5,7,-7,-6,2,-10,8,-10,-5,3,5,-9,-10,4,-2,-9,9,-4,2,-1,1,-7,-5,1,10,-1,6,7,5,-5,6,5,-7,-6,-9,3,10,9,9,-5,-6,3,6,-7,1,9,3,7,-3,10,1,3,3,7,4,2,-10,-3,7,7,-9,9,10,-3,-8,6,6,1,1,-5,1,6,-4,-8,-6,-9,9,8,-4,4,-6,1,8,-3,-1,-6,8,4,9,-3,4,2,9,-7,-1,-7,9,-8,10,-8,2,3,-3,1,8,-9,-5,-10,-10,-9,5,-7,6,3,-1,-6,4,2,-6,-1,7,7,-2,-8,3,5,-7,-4,2,-6,-8,-3,-2,2,-9,10,-7,-2,5,3,-9,-8,1,-7,9,5,8,2,4,-5,8,-3,-6,4,-4,1,-3,2,-1,8,-6,9,-2,1,-6,-1,6,7,-10,3,-6,-9,-5,5,-2,8,-8,2,-10,6,-1,-10,2,7,8,5,-8,5,7,-1,-4,9,-10,2,3,-7,6,9,5,-9,10,7,10,1,-3], dtype = "int16")#candidate|4334|(240,)|const|int16
call_4333 = func_3695_call(relay.reshape(const_4334.astype('int16'), [10, 12, 2]))
call_4335 = func_3695_call(relay.reshape(const_4334.astype('int16'), [10, 12, 2]))
output = relay.Tuple([call_4331,call_4333,const_4334,])
output2 = relay.Tuple([call_4332,call_4335,const_4334,])
func_4340 = relay.Function([], output)
mod['func_4340'] = func_4340
mod = relay.transform.InferType()(mod)
output = func_4340()
func_4341 = relay.Function([], output)
mutated_mod['func_4341'] = func_4341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2012_call = mod.get_global_var('func_2012')
func_2014_call = mutated_mod.get_global_var('func_2014')
call_4452 = relay.TupleGetItem(func_2012_call(), 1)
call_4453 = relay.TupleGetItem(func_2014_call(), 1)
func_3695_call = mod.get_global_var('func_3695')
func_3697_call = mutated_mod.get_global_var('func_3697')
var_4455 = relay.var("var_4455", dtype = "int16", shape = (240,))#candidate|4455|(240,)|var|int16
call_4454 = func_3695_call(relay.reshape(var_4455.astype('int16'), [10, 12, 2]))
call_4456 = func_3695_call(relay.reshape(var_4455.astype('int16'), [10, 12, 2]))
func_3261_call = mod.get_global_var('func_3261')
func_3263_call = mutated_mod.get_global_var('func_3263')
const_4459 = relay.const([1,-9,7,4,-8,7,-1,1,-1,-2,-9,-5,10,9,-7,1,6,-10,-1,4,-5,7,-7,4,7,2,-6,4,-2,9,1,7,1,-10,-4,-2,-5,-2,9,2,-4,3,-1,6,-2,-3,7,10,-9,-10,7,9,1,6,-9,-8,-3,5,-8,9,3,2,-4,-8,3,4,-10,-1,6,2,6,-10,-1,-4,5,-2,5,-10,6,-2,6,8,8,-8,7,-10,2,-3,-5,5,-10,10,-10,-6,6,5,3,7,-5,6,7,-6,-7,3,7,4,4,5,-2,-10,7,2,1,1,-6,-7,-4,1,1,7,-5,-5,7,-5,-9,1,2,-7,-3,-8,-7,10,-9,5,9,10,-7,3,5,4,2,-1,7,9,6,6,4,5,1,3,-5,5,10,-3,7,10,-3,6,-10,-9,-2,-10,-5,10,-8,-9,8,3,2,-2,5,8,2,9,9,-10,7,7,-6,9,2,7,1,-7,-7,-2,2,4,6,-7,3,5], dtype = "uint64")#candidate|4459|(192,)|const|uint64
call_4458 = relay.TupleGetItem(func_3261_call(relay.reshape(const_4459.astype('uint64'), [1, 192])), 0)
call_4460 = relay.TupleGetItem(func_3263_call(relay.reshape(const_4459.astype('uint64'), [1, 192])), 0)
uop_4461 = relay.log10(call_4458.astype('float32')) # shape=(2, 7, 9)
uop_4463 = relay.log10(call_4460.astype('float32')) # shape=(2, 7, 9)
func_2865_call = mod.get_global_var('func_2865')
func_2866_call = mutated_mod.get_global_var('func_2866')
call_4483 = relay.TupleGetItem(func_2865_call(), 1)
call_4484 = relay.TupleGetItem(func_2866_call(), 1)
func_1644_call = mod.get_global_var('func_1644')
func_1646_call = mutated_mod.get_global_var('func_1646')
var_4509 = relay.var("var_4509", dtype = "float32", shape = (1050,))#candidate|4509|(1050,)|var|float32
call_4508 = relay.TupleGetItem(func_1644_call(relay.reshape(var_4509.astype('float32'), [1050,])), 0)
call_4510 = relay.TupleGetItem(func_1646_call(relay.reshape(var_4509.astype('float32'), [1050,])), 0)
output = relay.Tuple([call_4452,call_4454,var_4455,const_4459,uop_4461,call_4483,call_4508,var_4509,])
output2 = relay.Tuple([call_4453,call_4456,var_4455,const_4459,uop_4463,call_4484,call_4510,var_4509,])
func_4535 = relay.Function([var_4455,var_4509,], output)
mod['func_4535'] = func_4535
mod = relay.transform.InferType()(mod)
mutated_mod['func_4535'] = func_4535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4535_call = mutated_mod.get_global_var('func_4535')
var_4537 = relay.var("var_4537", dtype = "int16", shape = (240,))#candidate|4537|(240,)|var|int16
var_4538 = relay.var("var_4538", dtype = "float32", shape = (1050,))#candidate|4538|(1050,)|var|float32
call_4536 = func_4535_call(var_4537,var_4538,)
output = call_4536
func_4539 = relay.Function([var_4537,var_4538,], output)
mutated_mod['func_4539'] = func_4539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2073_call = mod.get_global_var('func_2073')
func_2075_call = mutated_mod.get_global_var('func_2075')
call_4555 = func_2073_call()
call_4556 = func_2073_call()
func_1644_call = mod.get_global_var('func_1644')
func_1646_call = mutated_mod.get_global_var('func_1646')
var_4571 = relay.var("var_4571", dtype = "float32", shape = (1050,))#candidate|4571|(1050,)|var|float32
call_4570 = relay.TupleGetItem(func_1644_call(relay.reshape(var_4571.astype('float32'), [1050,])), 2)
call_4572 = relay.TupleGetItem(func_1646_call(relay.reshape(var_4571.astype('float32'), [1050,])), 2)
func_4340_call = mod.get_global_var('func_4340')
func_4341_call = mutated_mod.get_global_var('func_4341')
call_4573 = relay.TupleGetItem(func_4340_call(), 1)
call_4574 = relay.TupleGetItem(func_4341_call(), 1)
func_3193_call = mod.get_global_var('func_3193')
func_3197_call = mutated_mod.get_global_var('func_3197')
const_4600 = relay.const(8, dtype = "uint64")#candidate|4600|()|const|uint64
const_4601 = relay.const([-9,10,6,1,-2,-7,3,-2,6,-7,-3,5,7,-2,-3,7,9,-5,-3,-9,1,-8,7,-3,9,7,4,-6,6,-5,-8,-1,8,-1,4,8,8,-8,-7,10,-2,8,1,-6,-1,-3,3,-7,10,4,10,9,-9,6,9,-3,-5,6,4,-10,-3,5,9,-7,-2,2,4,-3,-10,10,-5,10,-4,5,-8,-5,9,7,6,6,-6,1,2,2,10,-9,6,8,-8,10,-9,-9,6,4,-1,-9,1,-4,1,2,1,-10,-3,-9,-1,-6,-3,-9,-10,-3,5,5,-4,-6,-6,-8,-2,-4,-7,5,-1,8,-6,4,-10,-5,3,-1,-1,-1,7,-6,8,-5,4,-2,-1,-8,7,-10,-3,10,-9,10,-7,-8,10,5,-7,-4,-10,-5,-7,5,7,1,-4,-3,-1,2,-3,4,6,3,2,2,2,-3,10,-4,-5,6,-5,2,-3,-6,5,-10,-1,-6,-10,5,6,2,-5,-5,-1,-2,2,-2,8,-9], dtype = "uint64")#candidate|4601|(192,)|const|uint64
call_4599 = relay.TupleGetItem(func_3193_call(relay.reshape(const_4600.astype('uint64'), []), relay.reshape(const_4601.astype('uint64'), [192,]), ), 0)
call_4602 = relay.TupleGetItem(func_3197_call(relay.reshape(const_4600.astype('uint64'), []), relay.reshape(const_4601.astype('uint64'), [192,]), ), 0)
uop_4609 = relay.tan(call_4570.astype('float32')) # shape=(5, 15, 14)
uop_4611 = relay.tan(call_4572.astype('float32')) # shape=(5, 15, 14)
func_2828_call = mod.get_global_var('func_2828')
func_2829_call = mutated_mod.get_global_var('func_2829')
call_4621 = relay.TupleGetItem(func_2828_call(), 0)
call_4622 = relay.TupleGetItem(func_2829_call(), 0)
func_3128_call = mod.get_global_var('func_3128')
func_3133_call = mutated_mod.get_global_var('func_3133')
const_4628 = relay.const([8.123847,3.272278,9.861734,-2.057368,-3.730701,7.651487,5.202996,-5.431319,0.959644,-0.760009,-7.711932,-5.534718,-6.594436,0.265293,8.574198,-2.069096,9.259312,0.955495,7.103276,-6.493317,5.136581,-4.756979,-8.408276,-1.259598,8.378803,-4.820854,-3.985645,0.506157,6.712070,-2.881959,-8.026587,7.642026,-0.096088,-4.936995,-5.301558,-8.464794,-3.720350,1.667133,3.016698,-7.615349,-5.004446,5.005321,-3.461614,4.182246,2.233476,-0.931065,0.288183,7.522960,-6.277334,7.316521,-0.107329,4.781239,-9.044530,5.398279,-5.015148,0.212117,2.302495,8.172969,7.435884,3.970813,1.410848,-0.975442,-0.827322,-3.438195,-4.477830,0.402416,5.195930,8.830131,8.691641,-9.086595,5.427773,8.871032,-7.711115,-2.850693,4.397235,-4.719569,4.946459,0.698230,-7.259235,0.961827,-9.547387,-0.584342,3.196823,3.800296,-1.679741,-6.825033,1.183445,-4.358210,-9.551199,5.735696,4.029082,-7.072046,2.605455,-3.236150,-0.148037,-6.784921,-4.818488,-3.550223,-9.554790,8.146428,1.731045,-5.891136,8.447356,-1.735073,4.213129,0.115019,7.632835,-7.389055,-4.883667,2.769198,-5.319552,2.068732,-6.812513,-0.786928,8.069536,4.145420,0.802399,-9.524403,7.470455,-2.595790,-8.865320,0.636012,-1.454037,-7.262100,-2.565293,8.777431,2.304779,8.023118,-7.567803,8.562212,7.990261,0.501446,-0.672499,0.048418,-6.429230,1.212177,-2.873912,7.267611,-9.653651,4.268084,7.999083,8.471441,2.106155,-7.611176], dtype = "float32")#candidate|4628|(144,)|const|float32
var_4629 = relay.var("var_4629", dtype = "int64", shape = (168,))#candidate|4629|(168,)|var|int64
call_4627 = relay.TupleGetItem(func_3128_call(relay.reshape(const_4628.astype('float32'), [3, 8, 6]), relay.reshape(var_4629.astype('int64'), [168,]), relay.reshape(const_4628.astype('float64'), [3, 8, 6]), ), 7)
call_4630 = relay.TupleGetItem(func_3133_call(relay.reshape(const_4628.astype('float32'), [3, 8, 6]), relay.reshape(var_4629.astype('int64'), [168,]), relay.reshape(const_4628.astype('float64'), [3, 8, 6]), ), 7)
func_467_call = mod.get_global_var('func_467')
func_469_call = mutated_mod.get_global_var('func_469')
call_4636 = relay.TupleGetItem(func_467_call(relay.reshape(var_4571.astype('float32'), [5, 15, 14])), 1)
call_4637 = relay.TupleGetItem(func_469_call(relay.reshape(var_4571.astype('float32'), [5, 15, 14])), 1)
output = relay.Tuple([call_4555,var_4571,call_4573,call_4599,const_4600,const_4601,uop_4609,call_4621,call_4627,const_4628,var_4629,call_4636,])
output2 = relay.Tuple([call_4556,var_4571,call_4574,call_4602,const_4600,const_4601,uop_4611,call_4622,call_4630,const_4628,var_4629,call_4637,])
func_4648 = relay.Function([var_4571,var_4629,], output)
mod['func_4648'] = func_4648
mod = relay.transform.InferType()(mod)
mutated_mod['func_4648'] = func_4648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4648_call = mutated_mod.get_global_var('func_4648')
var_4650 = relay.var("var_4650", dtype = "float32", shape = (1050,))#candidate|4650|(1050,)|var|float32
var_4651 = relay.var("var_4651", dtype = "int64", shape = (168,))#candidate|4651|(168,)|var|int64
call_4649 = func_4648_call(var_4650,var_4651,)
output = call_4649
func_4652 = relay.Function([var_4650,var_4651,], output)
mutated_mod['func_4652'] = func_4652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3478_call = mod.get_global_var('func_3478')
func_3480_call = mutated_mod.get_global_var('func_3480')
call_4795 = relay.TupleGetItem(func_3478_call(), 8)
call_4796 = relay.TupleGetItem(func_3480_call(), 8)
uop_4815 = relay.sqrt(call_4795.astype('float32')) # shape=(195,)
uop_4817 = relay.sqrt(call_4796.astype('float32')) # shape=(195,)
output = uop_4815
output2 = uop_4817
func_4844 = relay.Function([], output)
mod['func_4844'] = func_4844
mod = relay.transform.InferType()(mod)
output = func_4844()
func_4845 = relay.Function([], output)
mutated_mod['func_4845'] = func_4845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2388_call = mod.get_global_var('func_2388')
func_2389_call = mutated_mod.get_global_var('func_2389')
call_4867 = relay.TupleGetItem(func_2388_call(), 0)
call_4868 = relay.TupleGetItem(func_2389_call(), 0)
func_3296_call = mod.get_global_var('func_3296')
func_3298_call = mutated_mod.get_global_var('func_3298')
const_4872 = relay.const([-0.998473,-5.998149,6.119884,-8.919905,-1.575578,-9.485302,4.427052,-9.176722,1.639151,6.343224,8.661797,8.912636,-2.875765,5.502129,2.915791,7.423902,-4.189349,-1.890001,4.167495,-0.384054,4.411555,1.232019,-6.076257,-5.046566,9.801351,-8.953477,-4.546714,-2.651381,-8.818722,-1.348828,-4.179436,-9.667883,0.139802,-7.039507,5.641667,-3.429652,0.798946,3.386031,-7.092992,-1.648641,0.787777,-9.829758,-5.000881,-7.012121,-3.085390,-9.765952,-8.557655,3.096045,4.156107,5.313609,7.994317,-9.702072,6.405866,-3.782400,2.343326,-3.034314,9.229040,-2.677031,4.047733,-7.274524,-2.427032,-3.459482,3.941755,-7.686576,5.710661,4.719497,-2.073600,-4.334635,8.868029,9.863980,3.879195,2.928572,-7.909270,-6.832631,8.923149,-9.790636,4.247229,-5.739609,-1.945169,-0.125217,-8.056060,-8.432477,0.547165,6.822162,9.719146,5.522291,-9.778323,4.891330,-4.304646,-5.855545,0.355244,9.750444,4.807675,5.490544,3.117796,3.463945,-2.758434,-6.891578,-6.134898,-9.041671,-1.236316,-7.601049,4.036427,1.873909,1.057486,3.799081,-6.714400,-7.134592,-6.495448,-2.302052,5.303976,-2.777121,5.817859,3.886350,-0.060839,-5.872661,5.129482,4.598514,-1.772448,-2.243877,-3.159697,-8.734974,4.863020,-3.892440,0.562177,5.493249,-3.872677,-3.992352,-8.227181,-8.289788,2.200364,2.475982,5.802545,8.033867,3.841656,-5.617595,9.336209,1.111901,0.415442,2.757628,-1.839741,1.248908,-5.240514,-6.157531,2.956621,3.926141,8.738594,0.833435,4.992776,8.212984,-6.472595,-4.237115,-5.447470,-2.640934,4.826768,-0.849603,-6.059140,-3.724498,7.931310,7.639915,3.894657,-6.631587,2.757682,-8.167391,-3.608831,-6.971626,3.956623,6.632043,-3.572202,1.269905,4.518829,1.214200,7.130915,-3.153491,-9.396741,7.768087,-2.506550,1.487003,8.558082,-8.020377,0.342971,-3.974966,5.534360,-4.577687,-3.067811,8.667332,-2.786626,6.802262,-9.095367,-3.030685,-9.647579,2.255843,2.699407,-7.020727,-5.468235,7.747586,2.831239,-3.473921,4.519336,-3.369647,-1.891740,8.318022,-0.009057,-3.765956,-6.583896,-9.092805,-7.250328,7.010923,-0.107339,-3.959104,-8.266994,-6.304246,2.061851,-5.788455,9.907498,-7.919418,-8.485314,-9.960834,4.772185,9.028264,-9.768785,-7.920702,1.160339,-3.013731,8.136316,-8.651820,-2.756915,-6.463042,6.731760,-5.549964,4.937299,-4.410033,-8.281829,7.865769,9.275280,3.563354,-2.509308,-4.951337,3.403103,7.227335,8.762992,-3.712170,-8.906184,-1.222896,5.653630,-9.115025,0.461223,-5.461176,-9.232081,4.970328,3.144852,0.298177,-3.266870,4.472798,-1.896074,1.026400,4.805357,-2.232318,-3.933233,2.417763,3.216510,-0.230908,4.381144,1.591649,-4.127034,8.641918,9.265157,9.667127,1.957845,-0.937261,9.934662,2.384366,0.351508,-3.212128,-0.729190,-4.374695,-7.057560,5.071948,3.702609,0.514887,6.125728,1.226397,1.135142,5.767091,-2.231756,-8.429212,2.347172,-0.600014,9.057333,-3.836004,-7.186838,-7.376729,0.259372,-9.790007,-1.414620,9.948932,4.301651,-0.490411,9.300868,8.615860,2.800394,-0.104455,8.666146,-4.942239,2.851047,8.799192,7.548435,-9.289777,1.379428,5.738295,-5.680219,4.391913,-8.154425,-3.730968,6.851888,1.910006,-5.258012,5.448804,-4.635496,-5.973874,-5.770450,5.042107,6.354494,0.984291,6.710629,-6.523342,0.254167,9.239193,-8.761514,7.491214,0.692572,-4.093964,-1.122938,7.022198,3.639445,3.771237,0.389440,4.610753,-2.062357,2.968503,-1.968132,-3.651107,-8.945639,3.057395,2.002872,-8.691241,4.892308,-7.184413,2.851204,-9.065593,-8.401415,-4.406479,-7.195832,-9.206083,-8.229384,-9.639766,-8.207022,-6.839321,-3.697629,8.006020,6.057269,-0.096796,-5.757046,-0.195941,2.356958,9.574505,-9.048915,4.205204,6.764069,-8.877860,-3.066501,-8.399612,2.254890,9.993322,-2.155971,1.818048,-2.419877,-7.981125,3.075906,-9.607969,1.869602,-7.809043,-5.415761,6.510635,6.642824,0.439857,-0.656098,-4.972470,2.109019,-4.633265,-9.764407,2.674216,8.735835,-4.265291,-9.728100,9.292881,-4.886575,-2.616189,-6.476071,-8.179272,8.484754,8.100604,-1.177610,2.460744,1.384533,8.860185,6.737374,-4.477862,3.739537,0.065136,-1.891170,7.044939,-1.823488,4.188267,8.635711,8.318285,7.611327,6.756966,-2.054761,9.389124,-2.633854,-9.885826,3.809949,-9.822749,8.748622,4.932979,6.430428,-6.317680,-4.320474,-7.268084,5.362930,-8.136219,-1.521433,-5.601410,-6.795566,-2.992344,9.776830,-7.836970,1.734929,9.509739,4.553057,-6.269021,9.608947,-7.779991,-6.564153,-8.839000,-6.642521,7.144742,-4.520990,-8.395524,6.058564,4.639847,6.068218,-4.604559,-4.083668,1.899042,-5.204641,-2.067191,-2.070906,0.658216,7.647188,-9.817979,-8.293931,-4.551180,-8.576326,7.381333,6.711033,-5.583571,-2.243164,-2.371077,-0.544448,-3.126237,8.030071,-0.357436,-4.923290,6.970313,5.236765,2.085166,2.730588,-6.270996,-5.293859,2.672378,-4.368847,-6.431016,-8.982686,-7.420915,-6.231787,2.300682,7.646110,9.121920,2.612402,-2.658868,3.589147,-4.844570,0.835639,-9.520386,-8.223450,-3.614615,8.722264,-8.514378,8.501468,-6.878763,5.833761,7.449937,3.430097,-7.045223,7.151736,-2.546093,7.774509,2.138749,1.182073,-3.620152,-9.269466,1.649596,-9.242414,7.932027,-8.395145,9.160760,-2.433312,-6.613158,-6.444295,-5.732516,6.370460,-0.903858,-6.381549,-3.987747,3.139964,2.060135,8.867442,9.752257,-5.270448,6.738623,-5.417875,2.879430,5.798733,-8.927809,-7.018449,-2.579779,4.235681,-5.347626,-1.377406,-7.570142,-1.249691,3.522263,-9.245603,4.657271,-6.664864,1.135744,3.313459,0.793296,-9.337800,-9.204685,-5.011777,7.100850,2.049345,1.790555,-9.410685,8.375241,-2.489744,-5.864167,6.863949,5.223754,-0.103237,-3.893254,0.319947,-7.492995,-8.020545,7.365480,4.788003,-9.138366,-1.945823,9.341065,4.617434,0.664554,6.514883,-9.688535,0.106138,-1.853906,-7.984227,-3.278842,-0.016188,-6.947832,0.838427,-7.354325,-6.718673,-3.223445,-2.982278,6.680748,-4.001362,7.138400,-6.926205,3.659280,-9.569710,1.105339,-0.963901,-6.534725,-6.429798,0.821550,-1.618353,2.982715,2.879455,-1.935283,0.221641,3.982195,-1.697500,8.397152,4.253406,4.866285,0.017973,-2.351102,-1.226636,-9.558166,5.776137,-3.328865,6.310019,-5.017767,2.641289,3.610573,-7.102153,2.496409,1.791555,3.516168,7.088157,-4.332967,2.619086,-0.721067,-4.305747,8.342670,6.853728,6.003179,4.365326,7.718872,-0.386320,7.470474,6.801378,-9.335696,0.593753,3.116476,-2.390212,6.310147,7.031180,5.185861,5.424628,7.004566,-2.548575,3.599781,7.281281,0.908098,3.747913,-2.135301,1.384628,-3.131944,8.446234,8.105167,5.615867,0.827356,-4.925113,-7.295403,8.183376,-1.587600,4.115922,6.395935,-5.500862,-5.690725,2.763514,0.024925,5.289774,-0.600766,0.236613,-4.988791,-4.537962,6.131220,-9.088512,-7.421870,-0.725391,-9.461555,7.679636,-4.005857,-2.350985,2.941432,7.736339,-6.609973,-3.193421,1.200649,-5.709107,2.781435,-5.855702,5.987379,-7.538194,-9.292031,0.746889,-3.159545,1.679422,-8.187246,-2.368290,0.544264,-0.614402,-3.812963,-5.582483,9.167808,-5.598140,-3.791331,8.467448,1.485457,7.890104,-7.044240,-1.309510,4.260257,4.833415,4.904376,-7.345135,-3.544742,-7.938096,1.556384,-0.456193,2.501725,2.085014,0.754516,-0.280700,9.054992,9.193156,-8.197821,-3.144526,5.560938,2.421310,1.275070,1.408575,1.065851,2.991639,2.890456,3.528707,-8.691239,-0.420511,8.728549,-3.361661,-1.160480,5.812542,-0.942621,9.862851,5.107730,-3.896239,-4.505372,-3.560780,-4.438869,-5.326702,-6.146758,-5.412494,7.691550,-4.139461,0.842054,2.922747,-7.933331,-1.697003,-1.741974,-0.329955,5.036331,5.074626,3.504696,7.896200,8.432812,9.157454,7.124842,-0.995773,-3.328363,6.161154,7.852615,9.805149,8.658349,-9.802154,9.596828,-3.172564,-1.930330,-3.589746,0.822154,8.249441,-3.694846,-6.310072,-7.034443,-8.861113,-4.614582,0.895000,-2.989198,2.498845,-1.505382,6.770129,8.576030,-8.545646,2.717114,4.922335,-9.443431,8.949656,4.714273,-3.931193,-3.349239,-8.369714,1.121380,1.560745,-8.572162,3.905551,-3.614102,9.842888,-4.179320,5.093879,-1.066207,7.200811,9.922069,7.860230,-8.402217,6.186023,-0.777981,3.238913,6.911972,1.092458,-7.012958,-1.632415,-3.854480,-1.557427,-3.713827,-0.267884,-5.852526,4.202790,9.248908,-1.886003,2.307540,-6.425459,9.551847,4.518695,-8.073367,-5.556290,4.395368,-9.208532,-2.925988,6.063138,-9.555982,-3.550092,0.268067,6.227208,-7.059537,-3.474595,4.767099,-4.776325,8.830298,0.482501,-0.729814,-2.847562,-6.931909,6.191355,2.367843,8.865180,6.086399,-6.903832,-0.353336,8.821116,7.513029,-5.408698,-1.087621,2.733096,-3.449299,-4.902507,-9.715353,-3.827165,9.546347,-2.983650,-8.502817,-2.232829,0.481592,-8.603124,-5.931639,-2.166937,-8.854166,-2.919421,5.371061,-0.902684,-8.038288,1.414871,6.655311,-1.788674,3.111447,0.043243,-2.424595,5.790800,-3.929136,9.765987,3.509441,-4.744812,-4.077939,4.350282,-0.056172,1.279248,-7.169377,2.110124,9.650992,-5.565316,-3.993741,-3.461282,1.176854,-5.030619,-7.137304,8.361756,-0.657536,3.627056,-0.617628,-2.045409,-9.972058,-6.161516,-0.143698,-5.898803,6.024360,2.139966,-2.118972,-6.349121,9.608840,8.292679,0.698353,-5.511150,-1.774484,-5.698795,-0.215217,9.943625,4.763882,7.860501,2.328386,2.808541,-4.484369,0.691830,-9.171590,-7.735374,-4.329834,8.526390,-6.703022,1.333392,3.961030,-7.270498,7.626570,-2.128462,6.715475,-6.910154,4.683649,1.127773,-8.462280,-0.945823,-7.794502,2.435944,-2.094536,-7.781385,-0.487549,7.626040,-3.470889,8.812388,6.347998,-0.136323,0.275943,-3.622812,-0.788785,-3.221582,-7.622370,2.118599,2.169262,8.194510,-5.712331,6.233146,-1.777434,-5.529457,-2.260380,-2.080652,-1.267826,-5.098329,8.601845,-5.978861,-3.014921,5.916711,-2.937122,8.193215,2.655498,9.191625,5.578283,-1.591917,-1.168921,-2.432551,-7.383065,-6.284906,6.147841,-6.152849,6.285732,-1.668359,3.453437,-0.643448,-9.799588,2.531892,4.982720,2.335591,6.382435,-4.447590,1.417600,-9.342199,0.503271,-6.603759,4.639250,3.695615,0.398416,-0.617397,3.059272,-5.210338,8.409275,5.431842,4.923510,2.272595,-8.905583,-2.987962,-7.610109,8.059989,7.814919,-2.782560,-3.563716,-9.980652,8.864406,-2.140501,1.048025,-2.740193,0.027020,1.858803,1.994617,4.972625,-3.567101,9.534901,4.330282,-2.148797,-7.281847,2.347786,7.347677,-4.882374,1.623010,0.069451,-6.128484,4.955033,-0.905201,-1.622081,7.647795,2.455009,9.717446,-9.552287,-8.837954,2.497555,3.742444,8.386307,-9.606945,7.592495,6.528547,2.641969,-6.154117,5.826004,0.237120,-0.655210,3.670337,7.445485,-6.309594,3.846180,-4.415805,2.020347,-3.522339,-2.843731,2.543955,-2.815967,2.460582,-1.527044,-9.769356,-8.458510,9.058982,-1.045851,-2.724188,2.146828,4.241864,3.186003,0.950470,7.652256,-1.656695,5.162984,8.160507,-7.307980,6.326411,-8.488168,-4.452169,6.550797,-9.154020,-7.546823,3.271562,8.136850,6.931217,2.162802,-5.364940,-5.871585,-7.548257,-1.705832,8.717437,-7.112207,9.233856,-2.060782,7.545817,1.815783,5.012490,5.889047,4.306902,4.139206,9.501722,0.887670,9.693831,-2.284827,1.181249,8.719600,0.856437,0.156497,-1.218340,-0.899115,-6.117682,4.870141,-9.431364,-4.166806,-2.347307,-7.050803,-3.413616,2.193896,1.003688,-0.626750,-4.992940,0.977533,8.884612,-3.919073,-2.988667,-5.679308,-5.674530,-3.499490,-0.686361,-7.149034,-6.105040,-9.861802,-1.045976,-9.697795,-5.566148,6.572512,-3.718401,-2.235684,4.870266,6.621340,-4.613932,-0.159181,-2.016285,9.290833,-2.830404,9.431788,-6.321721,3.311993,8.622249,-9.662870,-8.811305,-3.447349,-1.245244,2.641881,2.332325,7.694004,-9.614761,-1.398957,-6.958337,7.775792,8.737443,2.117510,-7.316716,-3.036591,-9.417700,0.772504,-5.862901,3.118596,8.710305,3.491845,7.437720,-6.296862,-8.267413], dtype = "float64")#candidate|4872|(1176,)|const|float64
call_4871 = relay.TupleGetItem(func_3296_call(relay.reshape(const_4872.astype('float64'), [14, 6, 14])), 0)
call_4873 = relay.TupleGetItem(func_3298_call(relay.reshape(const_4872.astype('float64'), [14, 6, 14])), 0)
func_881_call = mod.get_global_var('func_881')
func_883_call = mutated_mod.get_global_var('func_883')
var_4887 = relay.var("var_4887", dtype = "uint64", shape = ())#candidate|4887|()|var|uint64
call_4886 = func_881_call(relay.reshape(var_4887.astype('uint64'), []))
call_4888 = func_881_call(relay.reshape(var_4887.astype('uint64'), []))
output = relay.Tuple([call_4867,call_4871,const_4872,call_4886,var_4887,])
output2 = relay.Tuple([call_4868,call_4873,const_4872,call_4888,var_4887,])
func_4899 = relay.Function([var_4887,], output)
mod['func_4899'] = func_4899
mod = relay.transform.InferType()(mod)
mutated_mod['func_4899'] = func_4899
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4900 = relay.var("var_4900", dtype = "uint64", shape = ())#candidate|4900|()|var|uint64
func_4899_call = mutated_mod.get_global_var('func_4899')
call_4901 = func_4899_call(var_4900)
output = call_4901
func_4902 = relay.Function([var_4900], output)
mutated_mod['func_4902'] = func_4902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2914_call = mod.get_global_var('func_2914')
func_2916_call = mutated_mod.get_global_var('func_2916')
call_4979 = relay.TupleGetItem(func_2914_call(), 0)
call_4980 = relay.TupleGetItem(func_2916_call(), 0)
var_4981 = relay.var("var_4981", dtype = "float32", shape = (2, 7, 9))#candidate|4981|(2, 7, 9)|var|float32
bop_4982 = relay.add(call_4979.astype('int64'), relay.reshape(var_4981.astype('int64'), relay.shape_of(call_4979))) # shape=(2, 7, 9)
bop_4985 = relay.add(call_4980.astype('int64'), relay.reshape(var_4981.astype('int64'), relay.shape_of(call_4980))) # shape=(2, 7, 9)
func_2181_call = mod.get_global_var('func_2181')
func_2182_call = mutated_mod.get_global_var('func_2182')
call_4989 = relay.TupleGetItem(func_2181_call(), 0)
call_4990 = relay.TupleGetItem(func_2182_call(), 0)
func_1700_call = mod.get_global_var('func_1700')
func_1703_call = mutated_mod.get_global_var('func_1703')
const_5002 = relay.const([-8.958870,9.024199,8.098824,1.340507,-7.257076,-7.417477,0.368174,-5.783425,-6.008379,-9.605242,-7.936986,1.542211,0.648106,5.514282,-3.982185,-4.111663,-3.376968,-2.303216,5.107875,7.239276,2.745998,-9.368456,1.576984,6.159266,-4.224268,0.040777,6.256013,-8.934908,-5.018627,9.651406,-6.797772,1.460724,3.713992,-6.158014,0.522681,-6.500137,9.459969,2.118927,-0.648010,-5.762051,-6.248185,4.751210,1.923206,5.457572,2.078041,-7.245192,-3.806058,3.516552,8.214390,-3.455143,4.997044,-0.015998,-4.446679,9.225387,-0.068832,6.580010,5.784780,-2.595548,-2.347205,-2.327397,5.221589,4.476005,-6.393941,1.295197,4.573313,-6.082647,1.859942,1.060979,0.246498,-2.090651,2.953166,-0.365365,-5.468533,4.900741,-5.324339,-0.932064,-2.913545,3.000329,-8.821511,-6.449612,1.904533,-7.527411,1.438440,-7.617722,-5.383546,3.789024,-9.356477,-4.430945,-1.228641,7.283198,0.946781,-3.922812,5.036498,-9.160361,2.778755,4.932391,-4.910834,9.090084,-5.702039,-6.407820,-5.756885,-9.375483,1.299199,8.799445,-0.870962,4.449820,-3.340041,3.286150,5.509967,-5.882669,-0.063399,7.882015,1.666017,4.766677,-0.657298,6.499125,2.702384,2.784990,-5.890965,-5.816643,7.445369,7.917989,-6.133903,-0.999411,-7.096726,-3.487837,-1.876804,6.627424,-8.960247,4.004115,-7.871602,7.176350,-3.988136,5.649228,3.679172,1.577129,0.030246,-7.907765,5.703981,0.119042,9.127165,2.297448,-1.303895,-9.196114,4.240446,2.550127,-6.373105,5.910516,-9.194999,8.939715,-2.112887,-2.303507,9.159765,2.477944,7.958516,7.505699,-6.745659,6.579638,6.838558,3.322779,0.507195,2.350482,2.765360,8.494575,4.049132,1.839020,2.419899,9.032103,0.383666,-9.055636,9.906810,8.098706,-3.008172,-7.764717,-3.903748,-1.414420,0.934839,0.573273,-4.330855,-1.647887,-5.602831,6.143382,2.322513,-6.540820,-1.826171,-2.322615,-4.937360,2.173276,-5.058151,6.277265,-1.665850,-9.472874,6.718084,-6.120943,-8.771380,5.512356], dtype = "float64")#candidate|5002|(196,)|const|float64
call_5001 = relay.TupleGetItem(func_1700_call(relay.reshape(const_5002.astype('float64'), [14, 1, 14])), 0)
call_5003 = relay.TupleGetItem(func_1703_call(relay.reshape(const_5002.astype('float64'), [14, 1, 14])), 0)
output = relay.Tuple([bop_4982,call_4989,call_5001,const_5002,])
output2 = relay.Tuple([bop_4985,call_4990,call_5003,const_5002,])
func_5009 = relay.Function([var_4981,], output)
mod['func_5009'] = func_5009
mod = relay.transform.InferType()(mod)
var_5010 = relay.var("var_5010", dtype = "float32", shape = (2, 7, 9))#candidate|5010|(2, 7, 9)|var|float32
output = func_5009(var_5010)
func_5011 = relay.Function([var_5010], output)
mutated_mod['func_5011'] = func_5011
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5035 = relay.var("var_5035", dtype = "uint32", shape = ())#candidate|5035|()|var|uint32
var_5036 = relay.var("var_5036", dtype = "uint32", shape = (12, 9, 5))#candidate|5036|(12, 9, 5)|var|uint32
bop_5037 = relay.right_shift(var_5035.astype('uint32'), var_5036.astype('uint32')) # shape=(12, 9, 5)
func_2608_call = mod.get_global_var('func_2608')
func_2610_call = mutated_mod.get_global_var('func_2610')
call_5041 = func_2608_call()
call_5042 = func_2608_call()
output = relay.Tuple([bop_5037,call_5041,])
output2 = relay.Tuple([bop_5037,call_5042,])
func_5058 = relay.Function([var_5035,var_5036,], output)
mod['func_5058'] = func_5058
mod = relay.transform.InferType()(mod)
mutated_mod['func_5058'] = func_5058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5058_call = mutated_mod.get_global_var('func_5058')
var_5060 = relay.var("var_5060", dtype = "uint32", shape = ())#candidate|5060|()|var|uint32
var_5061 = relay.var("var_5061", dtype = "uint32", shape = (12, 9, 5))#candidate|5061|(12, 9, 5)|var|uint32
call_5059 = func_5058_call(var_5060,var_5061,)
output = call_5059
func_5062 = relay.Function([var_5060,var_5061,], output)
mutated_mod['func_5062'] = func_5062
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5069 = relay.var("var_5069", dtype = "float64", shape = (9, 13, 2))#candidate|5069|(9, 13, 2)|var|float64
uop_5070 = relay.exp(var_5069.astype('float64')) # shape=(9, 13, 2)
uop_5074 = relay.erf(uop_5070.astype('float32')) # shape=(9, 13, 2)
output = uop_5074
output2 = uop_5074
func_5076 = relay.Function([var_5069,], output)
mod['func_5076'] = func_5076
mod = relay.transform.InferType()(mod)
var_5077 = relay.var("var_5077", dtype = "float64", shape = (9, 13, 2))#candidate|5077|(9, 13, 2)|var|float64
output = func_5076(var_5077)
func_5078 = relay.Function([var_5077], output)
mutated_mod['func_5078'] = func_5078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2959_call = mod.get_global_var('func_2959')
func_2960_call = mutated_mod.get_global_var('func_2960')
call_5093 = func_2959_call()
call_5094 = func_2959_call()
output = relay.Tuple([call_5093,])
output2 = relay.Tuple([call_5094,])
func_5100 = relay.Function([], output)
mod['func_5100'] = func_5100
mod = relay.transform.InferType()(mod)
output = func_5100()
func_5101 = relay.Function([], output)
mutated_mod['func_5101'] = func_5101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1591_call = mod.get_global_var('func_1591')
func_1592_call = mutated_mod.get_global_var('func_1592')
call_5110 = relay.TupleGetItem(func_1591_call(), 0)
call_5111 = relay.TupleGetItem(func_1592_call(), 0)
output = call_5110
output2 = call_5111
func_5130 = relay.Function([], output)
mod['func_5130'] = func_5130
mod = relay.transform.InferType()(mod)
mutated_mod['func_5130'] = func_5130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5130_call = mutated_mod.get_global_var('func_5130')
call_5131 = func_5130_call()
output = call_5131
func_5132 = relay.Function([], output)
mutated_mod['func_5132'] = func_5132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2320_call = mod.get_global_var('func_2320')
func_2322_call = mutated_mod.get_global_var('func_2322')
call_5203 = func_2320_call()
call_5204 = func_2320_call()
func_5130_call = mod.get_global_var('func_5130')
func_5132_call = mutated_mod.get_global_var('func_5132')
call_5221 = func_5130_call()
call_5222 = func_5130_call()
func_5009_call = mod.get_global_var('func_5009')
func_5011_call = mutated_mod.get_global_var('func_5011')
call_5224 = relay.TupleGetItem(func_5009_call(relay.reshape(call_5203.astype('float32'), [2, 7, 9])), 2)
call_5225 = relay.TupleGetItem(func_5011_call(relay.reshape(call_5203.astype('float32'), [2, 7, 9])), 2)
uop_5239 = relay.sqrt(call_5203.astype('float32')) # shape=(2, 7, 9)
uop_5241 = relay.sqrt(call_5204.astype('float32')) # shape=(2, 7, 9)
output = relay.Tuple([call_5221,call_5224,uop_5239,])
output2 = relay.Tuple([call_5222,call_5225,uop_5241,])
func_5275 = relay.Function([], output)
mod['func_5275'] = func_5275
mod = relay.transform.InferType()(mod)
mutated_mod['func_5275'] = func_5275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5275_call = mutated_mod.get_global_var('func_5275')
call_5276 = func_5275_call()
output = call_5276
func_5277 = relay.Function([], output)
mutated_mod['func_5277'] = func_5277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1689_call = mod.get_global_var('func_1689')
func_1691_call = mutated_mod.get_global_var('func_1691')
call_5287 = func_1689_call()
call_5288 = func_1689_call()
var_5295 = relay.var("var_5295", dtype = "float32", shape = (2, 7, 9))#candidate|5295|(2, 7, 9)|var|float32
bop_5296 = relay.bitwise_xor(call_5287.astype('int16'), relay.reshape(var_5295.astype('int16'), relay.shape_of(call_5287))) # shape=(2, 7, 9)
bop_5299 = relay.bitwise_xor(call_5288.astype('int16'), relay.reshape(var_5295.astype('int16'), relay.shape_of(call_5288))) # shape=(2, 7, 9)
output = bop_5296
output2 = bop_5299
func_5300 = relay.Function([var_5295,], output)
mod['func_5300'] = func_5300
mod = relay.transform.InferType()(mod)
mutated_mod['func_5300'] = func_5300
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5301 = relay.var("var_5301", dtype = "float32", shape = (2, 7, 9))#candidate|5301|(2, 7, 9)|var|float32
func_5300_call = mutated_mod.get_global_var('func_5300')
call_5302 = func_5300_call(var_5301)
output = call_5302
func_5303 = relay.Function([var_5301], output)
mutated_mod['func_5303'] = func_5303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2165_call = mod.get_global_var('func_2165')
func_2167_call = mutated_mod.get_global_var('func_2167')
call_5318 = func_2165_call()
call_5319 = func_2165_call()
func_2828_call = mod.get_global_var('func_2828')
func_2829_call = mutated_mod.get_global_var('func_2829')
call_5361 = relay.TupleGetItem(func_2828_call(), 0)
call_5362 = relay.TupleGetItem(func_2829_call(), 0)
func_4301_call = mod.get_global_var('func_4301')
func_4304_call = mutated_mod.get_global_var('func_4304')
const_5365 = relay.const([[10,3,3,4,6,4,-3,7,3,7],[9,-4,1,4,7,4,-6,-9,-8,8],[8,3,-2,-3,2,-7,-4,-3,-2,3],[-9,-7,3,-3,-8,-8,4,2,-2,2],[-4,4,1,5,6,-3,6,-9,9,-3],[-4,5,-2,5,1,7,6,5,3,-1],[9,-4,-7,3,7,-2,7,-3,4,3],[5,3,3,1,8,-5,-7,2,-3,7],[-3,5,6,-8,-5,-8,-1,6,-8,2],[-8,-5,-5,8,-3,10,-3,5,2,-10],[6,-9,-10,3,-1,-8,-1,5,-9,5],[-7,-10,-9,-2,8,-8,-1,-3,4,-10],[10,-4,-10,-6,4,-3,-6,3,-5,6],[6,-10,-3,-9,9,-1,-7,10,6,6],[-9,10,9,-1,-8,-2,3,3,-6,-2],[-2,-4,8,6,-3,-1,-1,-8,-6,-9],[-7,9,4,5,-4,7,-10,5,-6,-1],[3,-1,-4,-9,7,-5,10,4,7,3],[6,7,2,1,3,7,5,2,-7,8],[-10,10,-6,-1,-4,6,6,-4,-5,6],[-9,8,3,3,-3,-5,3,-1,10,4],[8,-3,-3,-5,-2,-10,4,-6,8,-6],[-10,3,8,4,6,3,-10,-2,-1,-5],[8,7,3,-10,1,-3,-8,-6,-10,6]], dtype = "int16")#candidate|5365|(24, 10)|const|int16
var_5366 = relay.var("var_5366", dtype = "uint64", shape = (192,))#candidate|5366|(192,)|var|uint64
call_5364 = relay.TupleGetItem(func_4301_call(relay.reshape(const_5365.astype('int16'), [240,]), relay.reshape(var_5366.astype('uint64'), [96, 2]), ), 1)
call_5367 = relay.TupleGetItem(func_4304_call(relay.reshape(const_5365.astype('int16'), [240,]), relay.reshape(var_5366.astype('uint64'), [96, 2]), ), 1)
bop_5373 = relay.floor_divide(const_5365.astype('float32'), relay.reshape(call_5364.astype('float32'), relay.shape_of(const_5365))) # shape=(24, 10)
bop_5376 = relay.floor_divide(const_5365.astype('float32'), relay.reshape(call_5367.astype('float32'), relay.shape_of(const_5365))) # shape=(24, 10)
uop_5377 = relay.asinh(call_5364.astype('float64')) # shape=(10, 12, 2)
uop_5379 = relay.asinh(call_5367.astype('float64')) # shape=(10, 12, 2)
bop_5385 = relay.bitwise_or(uop_5377.astype('uint8'), relay.reshape(bop_5373.astype('uint8'), relay.shape_of(uop_5377))) # shape=(10, 12, 2)
bop_5388 = relay.bitwise_or(uop_5379.astype('uint8'), relay.reshape(bop_5376.astype('uint8'), relay.shape_of(uop_5379))) # shape=(10, 12, 2)
func_2290_call = mod.get_global_var('func_2290')
func_2293_call = mutated_mod.get_global_var('func_2293')
var_5395 = relay.var("var_5395", dtype = "int64", shape = (6, 28))#candidate|5395|(6, 28)|var|int64
call_5394 = relay.TupleGetItem(func_2290_call(relay.reshape(var_5395.astype('int64'), [3, 14, 4]), relay.reshape(var_5395.astype('int64'), [3, 14, 4]), ), 1)
call_5396 = relay.TupleGetItem(func_2293_call(relay.reshape(var_5395.astype('int64'), [3, 14, 4]), relay.reshape(var_5395.astype('int64'), [3, 14, 4]), ), 1)
func_2388_call = mod.get_global_var('func_2388')
func_2389_call = mutated_mod.get_global_var('func_2389')
call_5403 = relay.TupleGetItem(func_2388_call(), 1)
call_5404 = relay.TupleGetItem(func_2389_call(), 1)
uop_5407 = relay.acosh(bop_5373.astype('float32')) # shape=(24, 10)
uop_5409 = relay.acosh(bop_5376.astype('float32')) # shape=(24, 10)
uop_5413 = relay.log2(uop_5377.astype('float32')) # shape=(10, 12, 2)
uop_5415 = relay.log2(uop_5379.astype('float32')) # shape=(10, 12, 2)
output = relay.Tuple([call_5318,call_5361,var_5366,bop_5385,call_5394,var_5395,call_5403,uop_5407,uop_5413,])
output2 = relay.Tuple([call_5319,call_5362,var_5366,bop_5388,call_5396,var_5395,call_5404,uop_5409,uop_5415,])
func_5421 = relay.Function([var_5366,var_5395,], output)
mod['func_5421'] = func_5421
mod = relay.transform.InferType()(mod)
mutated_mod['func_5421'] = func_5421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5421_call = mutated_mod.get_global_var('func_5421')
var_5423 = relay.var("var_5423", dtype = "uint64", shape = (192,))#candidate|5423|(192,)|var|uint64
var_5424 = relay.var("var_5424", dtype = "int64", shape = (6, 28))#candidate|5424|(6, 28)|var|int64
call_5422 = func_5421_call(var_5423,var_5424,)
output = call_5422
func_5425 = relay.Function([var_5423,var_5424,], output)
mutated_mod['func_5425'] = func_5425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3012_call = mod.get_global_var('func_3012')
func_3014_call = mutated_mod.get_global_var('func_3014')
call_5483 = func_3012_call()
call_5484 = func_3012_call()
func_4899_call = mod.get_global_var('func_4899')
func_4902_call = mutated_mod.get_global_var('func_4902')
var_5486 = relay.var("var_5486", dtype = "uint64", shape = ())#candidate|5486|()|var|uint64
call_5485 = relay.TupleGetItem(func_4899_call(relay.reshape(var_5486.astype('uint64'), [])), 4)
call_5487 = relay.TupleGetItem(func_4902_call(relay.reshape(var_5486.astype('uint64'), [])), 4)
output = relay.Tuple([call_5483,call_5485,var_5486,])
output2 = relay.Tuple([call_5484,call_5487,var_5486,])
func_5488 = relay.Function([var_5486,], output)
mod['func_5488'] = func_5488
mod = relay.transform.InferType()(mod)
var_5489 = relay.var("var_5489", dtype = "uint64", shape = ())#candidate|5489|()|var|uint64
output = func_5488(var_5489)
func_5490 = relay.Function([var_5489], output)
mutated_mod['func_5490'] = func_5490
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5501 = relay.var("var_5501", dtype = "float64", shape = ())#candidate|5501|()|var|float64
const_5502 = relay.const([[[-1.691375,-1.715846,2.956381,6.360653,-4.976458,-0.475384,9.206222,7.834946,2.277390,-0.661268,-5.585105,8.029793,6.903872],[-4.290970,-9.077177,-7.286074,2.175906,-3.455516,2.121613,4.572914,-8.628418,1.635461,-9.733802,-4.410465,3.120747,-6.787427],[-9.838946,2.176044,-8.040969,-9.444067,0.630998,7.086660,4.100033,6.520781,2.193771,5.367780,6.016793,2.492613,4.365733],[3.339778,9.418870,1.528234,8.711210,8.085988,-9.082096,2.576637,-8.688074,-7.586825,-3.014679,-4.925888,-6.510597,2.193707],[2.387101,7.262191,0.364344,4.778780,-2.475310,-0.142209,4.623347,2.659415,6.139153,-3.618887,5.900587,3.883120,-9.082217],[-1.762422,8.295121,-8.153920,-0.421277,-5.003008,-4.210871,-2.976392,-1.130112,4.969981,-5.936414,6.982440,8.279308,0.077881],[-6.830829,-8.650442,6.528447,0.652874,8.990068,5.370049,8.343880,9.141009,0.366903,-7.284685,-0.960968,-4.253402,4.024774],[-6.945370,2.255031,2.572132,-6.516704,-1.219482,-3.775795,1.071203,-9.362243,-3.779912,-5.273473,2.392785,7.198820,5.226937],[6.439120,7.713070,5.128178,2.089432,4.526954,-5.999955,0.735373,9.483514,-6.747948,3.052498,1.038131,-2.115061,4.339273],[-9.422738,2.664012,-8.939955,9.758785,5.158335,1.053569,7.593508,-9.885453,-4.346809,-2.464985,5.704176,-0.486127,6.163068]],[[-6.887752,9.683512,-4.095822,6.712291,2.408530,-8.151773,9.682350,4.917274,6.272563,6.630903,-7.469183,8.053553,-5.192592],[5.796872,1.770058,-6.994371,-6.498606,5.559061,2.941605,5.094410,-0.371026,0.581589,6.560643,-6.942610,4.212121,-4.869659],[7.679037,3.344256,1.859394,4.500356,4.583316,-5.364866,2.558222,-0.550013,-4.513193,-9.772905,-3.164806,-0.558366,-6.399335],[-6.924199,4.479392,-2.781997,-1.669660,-9.353446,-0.983440,-1.091046,6.164016,-8.636163,-9.066226,-8.235186,-4.203618,7.388526],[-8.282710,-7.652704,-3.402454,6.527876,-0.227179,-6.428222,2.507706,-1.913022,-4.693114,6.689601,0.101468,6.790471,4.070706],[2.769100,-2.820533,-8.074505,-8.525878,3.259680,5.517524,-2.441611,-7.643023,-6.379441,1.653166,-5.514089,6.326823,-8.377332],[1.378443,-1.986486,9.293048,-7.879731,-7.155387,-9.792465,3.493046,9.279752,-9.461795,-8.532794,-5.211849,-9.376968,6.329057],[-3.241250,0.384899,-2.685905,-0.372735,2.673536,-6.364855,9.545186,-8.883573,7.407020,0.162594,-6.655732,4.664383,9.508502],[8.791656,6.224205,-6.755624,1.092622,-9.257838,-8.987889,-0.563325,-2.158830,1.906737,9.863383,-6.468534,8.042707,1.471698],[8.510466,6.511284,-2.289212,5.278382,1.731962,3.975487,9.765935,-4.525947,-7.981202,5.218980,5.886306,-9.892796,-4.700537]],[[-5.593046,0.125207,8.464266,-3.375269,1.872535,0.795270,-8.487795,-4.587133,1.339481,-1.553286,5.259579,-5.169754,4.261887],[7.708689,-7.481007,-2.268101,9.942117,-4.877675,5.339875,5.323386,6.972959,5.651590,-7.468673,-9.607255,7.797767,1.534654],[1.593050,7.934445,-1.485918,6.019201,-6.824785,9.645679,4.296011,-0.215859,-4.537988,5.884366,-8.336781,8.854847,-5.112902],[-8.770523,-0.154653,-3.886894,8.073619,6.949317,-4.324161,-7.806969,-3.011919,-0.807915,9.228617,-6.988962,5.752968,7.167426],[-4.873821,-2.794220,-4.286003,-7.104003,-4.320492,8.088421,-3.572220,9.549202,4.988052,1.813856,5.742086,9.720054,-0.552164],[-3.460743,3.845567,2.560325,9.112725,-9.220124,-9.993014,-2.753510,7.091717,-2.814147,-3.406340,-4.699212,3.632802,-9.370895],[6.258223,9.695900,0.828783,2.044612,-1.981175,4.861255,-0.426324,9.043386,-0.619680,-5.684671,8.704846,-8.325597,-7.188039],[1.781602,-4.959026,9.804851,5.481047,-9.826443,-1.353143,5.244771,-7.336717,-4.279559,-9.991793,-5.722254,-3.710800,-2.282623],[2.940122,2.820114,4.802590,-3.127543,-4.540844,-1.067607,-5.393718,7.451088,-6.959141,3.403899,3.039141,-0.005744,-6.749684],[-7.672629,1.286061,-9.927212,7.209664,-9.714165,1.895587,3.955891,-9.518678,4.243448,-0.634896,-4.865846,-4.264436,4.987160]],[[6.031861,8.260130,-1.310060,-2.022403,9.509264,7.222353,8.049505,1.998140,-7.153651,-3.009933,-4.731993,4.281485,-2.410361],[-2.730688,-3.551289,-4.578152,2.051537,3.383688,-8.785479,1.193899,-0.444252,-3.762426,-5.325096,-8.434936,-8.133768,-7.641630],[3.400738,5.013637,3.891243,-3.203145,-5.085096,9.490733,-5.884952,1.640782,9.957679,-3.429056,7.564088,3.450712,7.096452],[-4.025284,-7.490455,-1.482944,0.591509,-8.850327,4.237035,-8.426032,7.626907,7.313468,-3.035922,-3.708356,7.235917,1.555135],[-8.859451,0.540622,1.363236,4.966547,-5.898641,1.824736,-5.337083,-9.751036,-8.094701,0.543277,-5.183941,9.568179,3.317241],[-9.887389,1.305170,-4.831197,-0.857289,5.931606,1.423941,-9.894663,-4.660378,0.083438,2.477082,6.215206,-9.362069,1.530235],[8.768053,5.172790,7.494477,-3.354105,-0.666372,-2.738384,-3.162617,-1.118636,-0.583044,1.749995,-8.982004,3.082716,-6.802671],[9.838308,7.386864,8.295305,9.329601,-8.801803,1.520614,0.406450,0.481314,-9.762669,6.135023,8.933463,6.227347,3.845005],[-9.267664,2.209946,9.898226,3.987388,-6.866476,3.002372,-1.923842,-0.874386,-1.369626,2.626344,3.109808,9.992938,-4.802226],[-6.849525,3.401723,4.467364,8.261359,-4.639301,1.717972,8.864000,7.738362,8.642233,-7.812313,1.927191,-8.409893,-9.093852]],[[-8.829336,-5.119780,1.646140,5.315168,-7.335519,-1.493453,1.579429,-0.714604,-0.430009,-1.293753,7.027301,3.979881,6.802233],[-4.410628,4.336484,6.700131,1.841355,-6.807831,4.104563,3.542944,-2.338748,6.682640,5.245984,-8.553814,4.768764,4.718190],[9.384845,7.679218,3.466529,-6.456213,-8.048849,-6.451129,9.849087,-4.892364,-4.073578,7.249963,1.123829,3.231907,-7.826919],[6.478050,-5.747240,-7.036644,8.554977,2.273068,-8.495140,-0.095857,9.893450,-5.946811,2.927450,7.578929,-7.903892,2.891247],[8.677276,-3.646361,-1.205882,-8.885576,-6.120412,-2.726567,-2.400263,-4.154582,3.517971,4.399375,-1.831322,-6.967324,0.946232],[0.313256,-3.833267,7.029259,4.610206,9.476581,2.719450,6.943442,2.042257,-0.943319,2.135795,-1.874888,4.951284,0.837120],[7.436835,7.517743,-3.089039,-8.506031,1.344630,-8.391896,-9.419943,6.234337,1.062782,8.723849,-1.389343,-8.278314,1.552964],[3.124587,9.422222,-7.699051,-1.263708,9.668353,-7.266463,6.929306,3.943878,0.310494,9.367039,-4.906701,4.665655,9.207683],[4.553216,6.565513,-1.604906,9.807683,8.840852,-4.943206,1.039952,-5.418878,-0.823685,-1.112118,-8.264282,7.471670,-1.463064],[-3.332585,4.801198,5.691467,-6.659154,3.095022,4.284292,-5.068945,-8.565896,-8.612899,-5.038136,-1.676966,-9.438409,-9.809835]],[[-5.723267,1.820797,9.866202,-0.871143,1.065322,6.669799,-7.606242,9.711890,9.226488,-1.397411,-8.254576,-5.801340,-5.417942],[9.595402,2.009766,5.395481,2.675169,-5.174107,-2.315579,-2.329138,-7.937647,7.687758,-9.499361,7.146048,-8.854210,-5.271809],[-1.530909,5.921450,9.738940,-2.481730,5.051784,-8.922455,-6.107766,0.119088,0.159489,-4.340596,-5.359992,-7.773020,-9.122359],[-8.862580,4.843789,-0.210846,1.171185,-2.401985,-9.213400,4.603949,-3.582287,2.414963,-7.897960,-3.849152,-6.912921,-0.051401],[-0.732001,8.892515,-3.471066,-7.756980,-6.294505,7.126991,-4.559040,-0.578105,-6.793203,-7.583648,0.730092,4.812596,8.630467],[4.818680,5.720942,-4.196555,-1.428264,-9.623244,3.815720,7.125770,4.459686,-2.200982,-5.503062,3.915206,-8.157844,-4.649534],[3.494021,-9.674250,9.752713,-5.427805,9.511369,-9.571275,-6.215310,-0.715969,1.262390,-1.672649,-0.829933,4.488578,5.464853],[-9.766697,-0.680950,-1.503546,-8.851770,-3.488964,-9.105279,-2.377585,7.631335,-6.198919,-6.313488,-4.865728,-6.154607,-3.465541],[4.352007,0.467768,-5.348408,-4.350056,-7.440161,-7.716155,1.237259,-1.007084,3.334081,1.741034,-9.658068,6.357748,-2.558776],[-2.522937,-3.747477,-6.438835,-7.145288,-7.182520,5.263997,-1.272638,7.891085,-4.745882,5.563162,5.531105,-9.606651,-1.351165]],[[-6.312073,1.825512,8.572622,1.373800,-6.618975,2.116963,1.280041,-2.224359,-0.482547,2.993846,6.700388,8.680369,-7.615366],[-7.789027,3.284342,3.736854,-9.027345,5.463786,4.928023,1.579976,-7.070262,-7.097702,-4.411486,-4.669952,2.108388,9.819558],[9.001261,-6.577450,0.837434,-2.939321,5.878680,-1.534604,-9.589293,8.636472,-1.839743,-4.692395,6.292819,-9.482866,9.064048],[-6.760945,-9.370101,1.901009,-6.889190,-9.352240,-9.502411,2.232570,-2.805694,9.995446,5.739157,-9.753423,6.804317,-4.022557],[-3.873742,4.097914,9.479314,-4.088129,0.810929,9.564888,9.550944,8.828180,9.894327,7.643423,-9.167907,-5.255754,9.782768],[0.256039,6.960998,6.470009,-1.742983,9.441989,7.891419,-1.431727,-4.356831,-1.507095,6.478003,5.528083,-9.997540,-0.963420],[-5.046978,-1.312260,-0.066465,-7.083577,8.099905,4.023094,-6.087151,3.684706,-4.352229,-3.628561,-6.008174,4.736674,-5.657316],[-2.226821,0.414571,3.378245,2.588690,-8.690537,8.541486,-1.906704,-1.221121,4.274957,-4.885951,-3.936896,-6.529886,1.788922],[-0.914095,-7.555418,-6.910501,5.200560,8.004513,6.940187,8.115066,-2.983259,-7.566868,6.658150,-4.294520,-4.816127,-1.963065],[-8.243181,1.259783,0.391035,-2.850125,7.732083,-1.032126,-1.900121,3.116698,-5.902128,8.658108,-5.034535,4.680151,7.087252]],[[-0.736348,9.512920,-9.045822,4.959467,4.386164,1.057276,-9.922871,-3.454265,-1.030405,-4.309426,-3.019994,-7.623739,-1.156273],[-2.001753,-9.587526,9.227671,9.277984,8.886854,-2.132795,6.157200,8.327425,6.359419,9.801797,-6.069575,0.850138,-2.080745],[-3.369644,2.906681,1.232025,-6.322423,5.493500,-4.709377,-0.622133,0.801660,-1.489751,8.291028,9.054182,7.167139,-2.012605],[-6.500563,-1.241964,-6.580670,6.928121,3.776134,9.979773,9.099352,-3.809283,8.585948,2.637010,4.591764,7.939410,-4.502587],[-9.215961,-6.942325,6.512694,-8.453734,3.606500,-0.521258,-5.295856,9.156458,-1.415064,3.842949,-7.627370,7.265826,3.855859],[8.504198,4.543181,4.958791,8.651838,7.098617,1.212094,-1.481993,-0.703822,4.135702,6.435127,-4.236643,4.383826,-8.778191],[-0.727737,-9.498423,-5.941455,-1.420587,6.593747,7.945537,4.791222,8.798362,-5.178124,2.197973,2.596369,-1.008269,5.770337],[-1.485667,-5.053479,-4.426595,-8.029298,-9.147683,-6.680287,2.973882,-0.431682,-2.782300,4.799265,-4.218105,-8.765965,-7.414576],[2.981331,-8.378059,6.362340,8.320077,1.313881,-1.361153,-0.399555,-9.629977,8.855419,-3.862632,5.289751,-4.820744,6.313785],[-9.669737,-7.519375,9.742528,1.388402,1.901685,-3.017587,-9.193234,-1.396363,4.310786,0.933328,-5.409654,7.699202,0.213137]],[[8.369629,6.024879,-9.556469,-0.389057,-4.583516,-1.777975,7.802622,-9.169257,5.250672,0.059967,8.908513,-2.957604,3.038576],[-0.405892,-8.872227,0.185247,1.671758,-1.740596,-1.748684,-0.849805,-6.215541,7.886080,-8.581287,1.776075,-2.516161,-0.024080],[7.328537,2.911024,1.254998,-5.903402,7.777446,1.449354,-9.623564,-4.822474,6.962683,-3.058774,-3.559591,4.405171,8.853772],[-2.747109,-6.934294,-8.890603,3.086116,-7.006276,6.448856,-2.208424,-7.624866,7.929482,4.678499,3.192154,-6.301404,-0.057870],[9.013544,-1.756525,-8.941042,4.783701,3.303438,7.538953,9.730495,0.219910,-1.468767,8.607814,1.590676,4.147469,-7.732145],[0.648533,-7.497645,2.594767,-4.798944,6.950205,-4.584258,9.763582,-8.567932,6.932182,-5.422229,-8.662411,-6.145292,6.306424],[-9.680620,9.059883,1.722733,3.852699,-6.633023,-6.354247,-6.487875,-6.425113,-9.219940,-2.596711,-2.607600,-5.740599,-0.647789],[8.843699,-7.005955,5.256613,9.163522,0.783986,9.031015,2.678959,-0.636974,-1.468036,3.505951,3.750665,-3.814281,-4.114554],[8.764594,5.527431,6.898961,4.677486,7.603584,-9.688684,0.737206,-9.757894,-8.627471,-2.572969,8.094404,-8.054151,7.903279],[-4.070555,5.637073,-6.844674,4.520684,0.651399,-5.828678,-4.676219,6.595871,8.974346,-6.612830,1.203587,1.333474,2.623836]],[[5.481330,8.039037,-7.431339,-5.874828,-3.922782,-3.781481,0.270245,-8.645068,-6.791411,2.416250,2.660520,-0.005197,-7.192365],[-2.724256,-5.961974,-8.929867,0.853356,-8.783656,4.163960,-9.499655,-6.721552,9.788849,-6.682424,7.371199,-1.507662,-7.539987],[5.967853,-1.088482,-9.587898,6.050632,-7.505759,-9.242846,1.822887,0.324881,-2.758010,-9.942628,0.419425,-5.175715,2.821066],[-3.643849,-0.347095,1.552056,-2.908189,-6.630736,1.565461,9.704575,0.938050,6.089284,-2.664900,-8.046860,-4.414968,2.072091],[-5.640202,3.767173,-8.792777,-7.829794,-1.311385,-8.054701,5.851609,-9.603232,4.207435,-5.438473,1.176487,1.797941,1.726118],[-4.791263,5.596940,7.469172,8.283392,8.357847,-2.439727,2.645059,-9.559440,6.486091,-7.417900,-1.537828,3.092615,-3.280708],[-0.147528,5.827527,7.811347,-0.943507,5.087965,2.554620,-2.084767,-7.607480,-6.461656,-6.989440,-3.431867,-2.131970,5.821222],[-3.421480,4.586738,5.846577,-8.266949,7.370900,5.037685,-7.212942,6.328636,0.629053,1.123331,5.442826,0.397089,-8.567151],[0.324771,-2.549900,8.763822,-1.473912,-1.562209,-6.499360,-0.314885,-9.061849,3.430119,-7.207530,-1.695063,6.891289,-5.643995],[6.285300,-8.092329,9.619339,-1.867806,-0.237647,-8.136087,2.154869,-3.560020,8.861365,2.533489,-6.578920,6.481111,-3.532698]],[[6.848790,8.803967,-0.770879,8.736635,-4.635255,-5.851090,3.962469,-4.636552,0.576530,-7.735266,9.408811,-8.650909,8.576686],[-4.860787,-6.892781,6.272414,-1.283638,2.072521,5.751394,7.745212,1.222491,7.908568,-9.281669,-6.368933,8.121102,4.243145],[-9.630910,1.958413,7.973069,-5.417728,-0.718234,7.860350,-8.177131,3.755483,6.679638,7.765621,2.408886,7.803976,-2.016354],[6.996285,-7.237836,9.053355,2.222504,8.113813,-8.808905,-5.999936,8.945112,7.636473,-0.500261,9.062553,5.013763,-3.391601],[7.640847,-1.591496,3.439077,8.868087,-3.162241,-7.411830,-0.274354,-8.135815,-2.873028,4.012649,-3.454930,7.322987,-2.351668],[0.540584,-1.242835,-1.051074,6.630889,5.524750,-7.937802,3.146810,7.862139,-8.993910,8.454357,-2.629822,9.218970,5.996103],[-2.626423,-6.066390,6.143938,-4.916021,7.428272,-4.612229,8.844185,8.519020,-0.780971,4.500130,7.812903,4.255649,-8.088624],[-8.678884,-2.042794,-3.232629,-0.933391,9.056410,-2.671967,9.553809,-1.043886,-7.977601,-1.683121,5.937622,-9.917158,-9.463401],[1.504829,-0.923371,-8.751689,3.989366,-6.732316,5.501656,5.566511,0.388070,2.563492,3.560495,-9.750661,2.814711,-8.154142],[2.116162,6.615677,-1.157828,-8.708451,4.873464,4.800891,2.961520,-3.134899,-7.597525,3.162263,2.311367,5.356759,-3.049310]],[[-7.531515,-9.114677,-7.014567,-0.958213,4.659073,-2.836319,7.523809,-4.484679,3.424313,8.346513,1.004705,2.923074,1.172104],[7.524178,9.020652,-8.001061,9.304773,-0.944450,-0.427802,-1.965196,3.801304,3.718718,-2.013753,5.734544,3.854114,4.355193],[5.779156,6.554184,1.254281,2.291224,-0.150011,-1.392642,-2.475022,-6.351741,8.105491,-9.756934,9.624349,-3.860298,-4.732797],[7.458092,-2.644630,-1.514117,4.966716,-4.722031,-7.206217,-3.090102,7.451572,-4.064625,9.884539,-0.100596,7.950935,-4.818372],[5.033783,-0.956300,-0.711533,0.666878,-6.553946,-1.226536,-3.369263,-0.986466,-5.553228,9.800257,-7.797318,8.393761,-9.542077],[-7.061357,5.479268,4.660977,6.502703,-7.543516,3.152523,-4.584628,7.206530,-6.402775,8.895985,-0.549331,2.619404,9.270413],[9.998378,3.852568,9.398917,-2.676688,-6.065557,6.130293,2.440529,-1.263568,6.315547,7.791222,7.097764,-4.219154,-3.489705],[7.995347,1.822658,8.112111,1.127069,-0.703878,2.733321,6.537261,-3.626121,5.922897,-3.792862,9.600624,8.256464,-5.429610],[-5.460173,7.315699,2.533228,-6.091612,-4.635963,-3.145850,-8.692535,-2.298912,4.593459,-0.868416,-1.921866,5.917507,7.344632],[-2.624023,2.547890,9.987734,-3.035877,1.532504,0.686776,-9.977172,6.321634,-0.779467,9.284140,0.010132,-8.401399,5.624642]],[[-4.568571,-4.817721,6.800526,-3.679185,2.386503,-8.051999,-1.233474,-1.128490,6.554038,0.688108,2.416203,-0.273938,-6.815159],[6.465731,8.051182,6.702676,3.192293,3.375471,4.040690,-0.663531,-4.751633,-1.971780,-1.013994,-9.534356,4.145142,-1.985152],[3.386106,8.443635,8.054052,7.631687,8.424974,-8.789533,-0.431222,8.948505,0.205189,-4.209924,-7.788631,-7.196605,2.459738],[-5.988701,2.492816,5.809852,-5.809176,-6.772472,4.420963,-9.468915,0.301451,-6.071373,0.335264,7.049285,7.152491,-5.094137],[-6.463722,-9.496585,8.547089,-7.820069,9.010490,-1.074005,-1.792588,9.772085,-6.185708,6.454663,-5.995342,7.942952,3.494884],[-4.594939,-0.050105,9.802626,-4.719971,0.536464,-0.913332,-9.508704,8.302647,0.054195,8.930891,-6.496516,2.413936,5.534586],[7.915810,3.506534,1.617279,0.938007,-1.760291,-8.695026,-4.264306,-1.234763,4.958609,-0.742047,0.187733,8.403400,7.688339],[-3.863243,9.791652,-1.763878,-8.586393,4.670343,-7.226229,-5.292504,1.848097,2.373486,-7.117597,1.208014,-7.135708,-7.418728],[5.988571,-6.363288,0.083701,0.219752,6.819900,8.816847,1.123499,7.892360,8.624473,-7.182176,5.927448,-8.725018,-9.401496],[9.848119,-6.890895,-4.739559,8.746150,-2.536193,-2.436122,6.287101,2.489983,3.117757,-1.938026,-5.846222,-6.369817,-3.554660]],[[-5.115360,5.632943,-1.158350,8.129912,0.279962,2.065444,1.687938,4.862029,2.855896,1.973778,-2.363700,-2.985028,2.967685],[-6.411722,8.140306,3.764816,-7.624653,-6.223308,-1.074085,8.458424,-9.817132,-0.216167,-6.554131,7.251643,6.986651,-6.868556],[9.138047,-7.967647,-0.749071,3.200793,5.791183,9.431616,1.823954,6.453078,-1.454672,1.647531,3.120920,-9.840814,-4.758046],[4.394862,-2.920553,4.182879,-8.519163,-1.668689,-3.024287,5.011765,5.447311,5.215591,-0.825190,-3.847512,5.525522,2.987387],[1.544583,-7.373928,7.773050,0.578177,-5.066419,-8.798155,-5.282714,8.285180,-4.394546,2.298498,8.297754,-0.890602,9.192013],[-8.008831,4.153039,3.824464,0.926047,-0.265580,4.518754,-1.719800,-3.583112,7.671852,-7.507039,5.726550,1.091711,-1.311268],[-7.011198,-3.108153,1.128419,-2.528249,0.058910,1.016201,-9.868016,4.415017,-7.159230,8.580724,-9.482101,6.502496,2.267784],[0.438126,4.837279,4.535389,7.744393,9.856266,6.274620,3.656864,6.123573,4.038388,-6.313411,-5.627496,9.006631,5.653415],[-1.788348,-3.140327,3.207844,-9.664447,9.879634,-9.490436,2.780973,1.225386,-9.020772,8.206757,4.515623,7.913013,-8.508627],[-0.219190,1.176630,0.225899,9.599057,0.921821,-1.987643,9.019231,4.687197,-0.973842,-2.457028,0.359904,-4.569276,-0.809254]],[[-8.205132,5.203105,5.018705,-6.970400,6.676216,-3.173545,0.435426,0.768950,1.665713,2.236073,4.650432,-5.404007,2.626045],[-1.835261,-8.225732,6.885313,-7.037537,9.123178,1.403646,-4.284074,-5.483726,0.663980,-6.676864,5.064067,0.494390,-5.574183],[-5.816798,-0.610828,1.296554,9.685821,-7.100541,-1.048655,3.819965,-9.739126,2.597247,7.028221,-2.596054,4.497687,7.394057],[-7.185310,8.044055,3.475573,6.624329,5.894239,-1.244383,6.688109,4.758268,8.096851,9.559799,4.487111,-6.837746,-3.532450],[9.897328,8.903554,-7.402582,-7.756202,0.225968,2.999028,1.567384,7.737124,4.784519,-7.694078,-3.217025,9.996002,-9.619049],[-2.151124,5.792101,5.109558,-6.785594,-4.558609,-7.454125,-7.856826,-4.334846,9.246866,-7.924005,-9.115485,2.221918,-5.250527],[-7.533114,8.134041,0.707072,-0.040871,0.505815,6.369610,-1.812348,-7.226936,-1.609033,-2.988526,2.235971,0.183125,-6.225706],[4.530085,-1.794037,0.719966,-2.696375,4.978704,-5.281994,-2.161557,6.180100,5.410516,3.369685,0.881157,-6.542090,1.480961],[5.371007,1.696661,-4.321068,3.371970,8.134890,2.153040,8.291401,5.998228,-5.439214,5.398923,5.724961,-9.566303,1.107327],[7.363625,8.306233,3.579978,0.094247,5.273347,9.693435,-2.425986,0.553497,-5.681132,3.212854,9.198493,-7.179337,8.040530]],[[5.699027,-8.711416,1.119398,1.508051,-1.488306,6.381840,1.546071,8.260348,6.818663,5.072932,-0.322449,-6.693266,1.516787],[9.171066,-5.266737,-5.737891,-1.788078,-9.441411,-9.556135,1.361292,-1.611047,-0.443193,8.862349,4.704609,7.091733,3.430695],[-0.388869,3.975931,7.921936,9.415915,-2.875501,-3.515084,8.339390,-1.473874,-0.077736,-8.848818,5.715169,-7.413465,2.186642],[4.844021,4.361774,-5.207728,-3.173322,2.254244,-6.416759,-7.819726,-6.641127,-2.343735,5.915641,0.618404,-4.565990,6.680255],[-2.497558,-7.151210,9.044136,1.134010,-3.405314,-0.614181,1.848763,0.515728,4.427469,-4.338609,-6.154333,8.114388,-9.756659],[6.888272,-0.272140,-1.641882,-1.769269,-4.212954,-2.377755,-6.974962,2.419671,-9.946265,4.187715,4.354280,0.208240,-0.377886],[-5.899685,7.567549,5.797480,0.337208,2.268929,-3.010107,-9.102170,8.384496,-1.494282,6.381536,3.172536,9.440682,9.590312],[5.082362,-2.696318,-3.805452,4.515860,5.497398,-5.488458,-5.533208,-6.228672,-4.306191,-6.746229,-0.209697,8.786502,-5.177229],[1.243505,8.581918,-0.534218,4.459992,9.956389,3.001710,0.363527,9.931861,9.483603,-5.006250,-6.079133,-8.462037,-5.185705],[-9.899335,2.862135,-6.654373,-2.931764,2.086013,-3.306966,3.013175,4.810267,-7.672647,-7.604244,-2.363279,-0.601203,6.363501]]], dtype = "float64")#candidate|5502|(16, 10, 13)|const|float64
bop_5503 = relay.maximum(var_5501.astype('float64'), const_5502.astype('float64')) # shape=(16, 10, 13)
output = bop_5503
output2 = bop_5503
func_5509 = relay.Function([var_5501,], output)
mod['func_5509'] = func_5509
mod = relay.transform.InferType()(mod)
var_5510 = relay.var("var_5510", dtype = "float64", shape = ())#candidate|5510|()|var|float64
output = func_5509(var_5510)
func_5511 = relay.Function([var_5510], output)
mutated_mod['func_5511'] = func_5511
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5591 = relay.var("var_5591", dtype = "float32", shape = (1, 15, 12))#candidate|5591|(1, 15, 12)|var|float32
uop_5592 = relay.acos(var_5591.astype('float32')) # shape=(1, 15, 12)
output = uop_5592
output2 = uop_5592
func_5601 = relay.Function([var_5591,], output)
mod['func_5601'] = func_5601
mod = relay.transform.InferType()(mod)
var_5602 = relay.var("var_5602", dtype = "float32", shape = (1, 15, 12))#candidate|5602|(1, 15, 12)|var|float32
output = func_5601(var_5602)
func_5603 = relay.Function([var_5602], output)
mutated_mod['func_5603'] = func_5603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2651_call = mod.get_global_var('func_2651')
func_2652_call = mutated_mod.get_global_var('func_2652')
call_5663 = func_2651_call()
call_5664 = func_2651_call()
func_2719_call = mod.get_global_var('func_2719')
func_2720_call = mutated_mod.get_global_var('func_2720')
call_5702 = func_2719_call()
call_5703 = func_2719_call()
output = relay.Tuple([call_5663,call_5702,])
output2 = relay.Tuple([call_5664,call_5703,])
func_5706 = relay.Function([], output)
mod['func_5706'] = func_5706
mod = relay.transform.InferType()(mod)
output = func_5706()
func_5707 = relay.Function([], output)
mutated_mod['func_5707'] = func_5707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2165_call = mod.get_global_var('func_2165')
func_2167_call = mutated_mod.get_global_var('func_2167')
call_5738 = func_2165_call()
call_5739 = func_2165_call()
output = call_5738
output2 = call_5739
func_5768 = relay.Function([], output)
mod['func_5768'] = func_5768
mod = relay.transform.InferType()(mod)
output = func_5768()
func_5769 = relay.Function([], output)
mutated_mod['func_5769'] = func_5769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2073_call = mod.get_global_var('func_2073')
func_2075_call = mutated_mod.get_global_var('func_2075')
call_5794 = func_2073_call()
call_5795 = func_2073_call()
output = relay.Tuple([call_5794,])
output2 = relay.Tuple([call_5795,])
func_5807 = relay.Function([], output)
mod['func_5807'] = func_5807
mod = relay.transform.InferType()(mod)
mutated_mod['func_5807'] = func_5807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5807_call = mutated_mod.get_global_var('func_5807')
call_5808 = func_5807_call()
output = call_5808
func_5809 = relay.Function([], output)
mutated_mod['func_5809'] = func_5809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2651_call = mod.get_global_var('func_2651')
func_2652_call = mutated_mod.get_global_var('func_2652')
call_5810 = func_2651_call()
call_5811 = func_2651_call()
var_5821 = relay.var("var_5821", dtype = "float32", shape = (2, 7, 9))#candidate|5821|(2, 7, 9)|var|float32
bop_5822 = relay.maximum(call_5810.astype('float64'), relay.reshape(var_5821.astype('float64'), relay.shape_of(call_5810))) # shape=(2, 7, 9)
bop_5825 = relay.maximum(call_5811.astype('float64'), relay.reshape(var_5821.astype('float64'), relay.shape_of(call_5811))) # shape=(2, 7, 9)
output = relay.Tuple([bop_5822,])
output2 = relay.Tuple([bop_5825,])
func_5827 = relay.Function([var_5821,], output)
mod['func_5827'] = func_5827
mod = relay.transform.InferType()(mod)
var_5828 = relay.var("var_5828", dtype = "float32", shape = (2, 7, 9))#candidate|5828|(2, 7, 9)|var|float32
output = func_5827(var_5828)
func_5829 = relay.Function([var_5828], output)
mutated_mod['func_5829'] = func_5829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4844_call = mod.get_global_var('func_4844')
func_4845_call = mutated_mod.get_global_var('func_4845')
call_5901 = func_4844_call()
call_5902 = func_4844_call()
func_2165_call = mod.get_global_var('func_2165')
func_2167_call = mutated_mod.get_global_var('func_2167')
call_5907 = func_2165_call()
call_5908 = func_2165_call()
output = relay.Tuple([call_5901,call_5907,])
output2 = relay.Tuple([call_5902,call_5908,])
func_5916 = relay.Function([], output)
mod['func_5916'] = func_5916
mod = relay.transform.InferType()(mod)
output = func_5916()
func_5917 = relay.Function([], output)
mutated_mod['func_5917'] = func_5917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2608_call = mod.get_global_var('func_2608')
func_2610_call = mutated_mod.get_global_var('func_2610')
call_5990 = func_2608_call()
call_5991 = func_2608_call()
output = relay.Tuple([call_5990,])
output2 = relay.Tuple([call_5991,])
func_5994 = relay.Function([], output)
mod['func_5994'] = func_5994
mod = relay.transform.InferType()(mod)
output = func_5994()
func_5995 = relay.Function([], output)
mutated_mod['func_5995'] = func_5995
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6053 = relay.var("var_6053", dtype = "uint16", shape = ())#candidate|6053|()|var|uint16
var_6054 = relay.var("var_6054", dtype = "uint16", shape = (5, 8, 16))#candidate|6054|(5, 8, 16)|var|uint16
bop_6055 = relay.less(var_6053.astype('bool'), var_6054.astype('bool')) # shape=(5, 8, 16)
func_5509_call = mod.get_global_var('func_5509')
func_5511_call = mutated_mod.get_global_var('func_5511')
call_6058 = func_5509_call(relay.reshape(var_6053.astype('float64'), []))
call_6059 = func_5509_call(relay.reshape(var_6053.astype('float64'), []))
uop_6065 = relay.sqrt(var_6054.astype('float32')) # shape=(5, 8, 16)
uop_6068 = relay.acosh(var_6054.astype('float32')) # shape=(5, 8, 16)
output = relay.Tuple([bop_6055,call_6058,uop_6065,uop_6068,])
output2 = relay.Tuple([bop_6055,call_6059,uop_6065,uop_6068,])
func_6073 = relay.Function([var_6053,var_6054,], output)
mod['func_6073'] = func_6073
mod = relay.transform.InferType()(mod)
var_6074 = relay.var("var_6074", dtype = "uint16", shape = ())#candidate|6074|()|var|uint16
var_6075 = relay.var("var_6075", dtype = "uint16", shape = (5, 8, 16))#candidate|6075|(5, 8, 16)|var|uint16
output = func_6073(var_6074,var_6075,)
func_6076 = relay.Function([var_6074,var_6075,], output)
mutated_mod['func_6076'] = func_6076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2270_call = mod.get_global_var('func_2270')
func_2271_call = mutated_mod.get_global_var('func_2271')
call_6095 = relay.TupleGetItem(func_2270_call(), 2)
call_6096 = relay.TupleGetItem(func_2271_call(), 2)
func_2320_call = mod.get_global_var('func_2320')
func_2322_call = mutated_mod.get_global_var('func_2322')
call_6116 = func_2320_call()
call_6117 = func_2320_call()
output = relay.Tuple([call_6095,call_6116,])
output2 = relay.Tuple([call_6096,call_6117,])
func_6137 = relay.Function([], output)
mod['func_6137'] = func_6137
mod = relay.transform.InferType()(mod)
output = func_6137()
func_6138 = relay.Function([], output)
mutated_mod['func_6138'] = func_6138
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6161 = relay.var("var_6161", dtype = "float64", shape = (6, 12, 1))#candidate|6161|(6, 12, 1)|var|float64
var_6162 = relay.var("var_6162", dtype = "float64", shape = (6, 12, 5))#candidate|6162|(6, 12, 5)|var|float64
bop_6163 = relay.mod(var_6161.astype('float64'), var_6162.astype('float64')) # shape=(6, 12, 5)
func_2073_call = mod.get_global_var('func_2073')
func_2075_call = mutated_mod.get_global_var('func_2075')
call_6168 = func_2073_call()
call_6169 = func_2073_call()
func_3193_call = mod.get_global_var('func_3193')
func_3197_call = mutated_mod.get_global_var('func_3197')
const_6182 = relay.const(9, dtype = "uint64")#candidate|6182|()|const|uint64
const_6183 = relay.const([[-3],[-5],[-3],[10],[-5],[-10],[5],[-4],[-10],[6],[10],[-2],[-7],[-10],[7],[5],[1],[6],[4],[-8],[3],[4],[9],[-4],[6],[4],[9],[7],[-7],[10],[7],[5],[-7],[3],[-8],[-10],[10],[-10],[3],[9],[-3],[5],[7],[8],[1],[9],[3],[-7],[6],[4],[3],[-5],[-8],[-2],[-9],[10],[4],[-6],[9],[6],[-1],[-9],[10],[9],[-6],[-9],[6],[1],[-9],[5],[-6],[9],[-10],[10],[8],[1],[-2],[8],[-6],[9],[9],[-2],[10],[-7],[8],[6],[-6],[-5],[-10],[6],[-2],[1],[-9],[9],[5],[1],[4],[7],[7],[-4],[7],[-1],[6],[9],[-1],[-6],[-6],[-9],[6],[-2],[6],[5],[7],[7],[-9],[10],[-10],[8],[7],[4],[6],[2],[-6],[9],[-1],[-5],[4],[-8],[-3],[4],[-5],[-7],[-5],[2],[4],[-1],[7],[4],[-8],[-7],[4],[7],[-1],[9],[-1],[3],[9],[-2],[-5],[-8],[2],[1],[5],[-3],[8],[4],[-2],[-10],[-6],[-7],[3],[-3],[-10],[-7],[-1],[5],[-8],[-1],[2],[8],[3],[-2],[2],[10],[-10],[-7],[4],[5],[4],[8],[1],[-9],[10],[2],[5],[3],[-1],[-5],[-6],[1],[9],[-1]], dtype = "uint64")#candidate|6183|(192, 1)|const|uint64
call_6181 = relay.TupleGetItem(func_3193_call(relay.reshape(const_6182.astype('uint64'), []), relay.reshape(const_6183.astype('uint64'), [192,]), ), 4)
call_6184 = relay.TupleGetItem(func_3197_call(relay.reshape(const_6182.astype('uint64'), []), relay.reshape(const_6183.astype('uint64'), [192,]), ), 4)
bop_6193 = relay.less_equal(call_6181.astype('bool'), var_6161.astype('bool')) # shape=(6, 12, 192)
bop_6196 = relay.less_equal(call_6184.astype('bool'), var_6161.astype('bool')) # shape=(6, 12, 192)
func_5994_call = mod.get_global_var('func_5994')
func_5995_call = mutated_mod.get_global_var('func_5995')
call_6206 = relay.TupleGetItem(func_5994_call(), 0)
call_6207 = relay.TupleGetItem(func_5995_call(), 0)
func_5509_call = mod.get_global_var('func_5509')
func_5511_call = mutated_mod.get_global_var('func_5511')
call_6222 = func_5509_call(relay.reshape(const_6182.astype('float64'), []))
call_6223 = func_5509_call(relay.reshape(const_6182.astype('float64'), []))
func_5300_call = mod.get_global_var('func_5300')
func_5303_call = mutated_mod.get_global_var('func_5303')
call_6228 = func_5300_call(relay.reshape(call_6168.astype('float32'), [2, 7, 9]))
call_6229 = func_5300_call(relay.reshape(call_6168.astype('float32'), [2, 7, 9]))
func_6137_call = mod.get_global_var('func_6137')
func_6138_call = mutated_mod.get_global_var('func_6138')
call_6238 = relay.TupleGetItem(func_6137_call(), 0)
call_6239 = relay.TupleGetItem(func_6138_call(), 0)
bop_6243 = relay.bitwise_or(bop_6193.astype('int8'), var_6161.astype('int8')) # shape=(6, 12, 192)
bop_6246 = relay.bitwise_or(bop_6196.astype('int8'), var_6161.astype('int8')) # shape=(6, 12, 192)
output = relay.Tuple([bop_6163,call_6168,const_6182,const_6183,call_6206,call_6222,call_6228,call_6238,bop_6243,])
output2 = relay.Tuple([bop_6163,call_6169,const_6182,const_6183,call_6207,call_6223,call_6229,call_6239,bop_6246,])
func_6250 = relay.Function([var_6161,var_6162,], output)
mod['func_6250'] = func_6250
mod = relay.transform.InferType()(mod)
var_6251 = relay.var("var_6251", dtype = "float64", shape = (6, 12, 1))#candidate|6251|(6, 12, 1)|var|float64
var_6252 = relay.var("var_6252", dtype = "float64", shape = (6, 12, 5))#candidate|6252|(6, 12, 5)|var|float64
output = func_6250(var_6251,var_6252,)
func_6253 = relay.Function([var_6251,var_6252,], output)
mutated_mod['func_6253'] = func_6253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3755_call = mod.get_global_var('func_3755')
func_3757_call = mutated_mod.get_global_var('func_3757')
call_6304 = relay.TupleGetItem(func_3755_call(), 0)
call_6305 = relay.TupleGetItem(func_3757_call(), 0)
var_6318 = relay.var("var_6318", dtype = "float64", shape = (600, 2))#candidate|6318|(600, 2)|var|float64
bop_6319 = relay.mod(call_6304.astype('float64'), relay.reshape(var_6318.astype('float64'), relay.shape_of(call_6304))) # shape=(600, 2)
bop_6322 = relay.mod(call_6305.astype('float64'), relay.reshape(var_6318.astype('float64'), relay.shape_of(call_6305))) # shape=(600, 2)
output = relay.Tuple([bop_6319,])
output2 = relay.Tuple([bop_6322,])
func_6324 = relay.Function([var_6318,], output)
mod['func_6324'] = func_6324
mod = relay.transform.InferType()(mod)
mutated_mod['func_6324'] = func_6324
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6325 = relay.var("var_6325", dtype = "float64", shape = (600, 2))#candidate|6325|(600, 2)|var|float64
func_6324_call = mutated_mod.get_global_var('func_6324')
call_6326 = func_6324_call(var_6325)
output = call_6326
func_6327 = relay.Function([var_6325], output)
mutated_mod['func_6327'] = func_6327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1547_call = mod.get_global_var('func_1547')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_6349 = relay.TupleGetItem(func_1547_call(), 0)
call_6350 = relay.TupleGetItem(func_1548_call(), 0)
func_2165_call = mod.get_global_var('func_2165')
func_2167_call = mutated_mod.get_global_var('func_2167')
call_6353 = func_2165_call()
call_6354 = func_2165_call()
func_3193_call = mod.get_global_var('func_3193')
func_3197_call = mutated_mod.get_global_var('func_3197')
const_6384 = relay.const(-10, dtype = "uint64")#candidate|6384|()|const|uint64
const_6385 = relay.const([-1,-4,-5,-6,-1,5,-7,-2,10,-6,2,-9,-3,-6,-7,2,5,9,-6,-3,1,6,10,9,-6,6,-2,-10,1,10,4,-9,7,-9,2,-9,-1,-9,3,-10,2,-8,10,-1,-3,-10,-2,-5,7,-9,5,2,-3,6,8,4,1,-8,9,3,-10,-10,-2,-9,-7,9,-8,-10,1,-6,2,-1,-1,4,-8,-3,-10,3,8,-4,-2,-8,2,-9,4,2,-5,-6,3,8,7,-2,-6,2,6,-8,-6,9,4,3,-3,-3,9,5,-9,5,-8,-6,1,8,-3,8,-5,-9,4,9,8,-8,-1,-1,7,8,-5,10,10,5,-4,-5,7,10,-8,1,-10,5,1,2,3,3,-2,-4,-1,-6,-10,-4,6,10,-2,2,-7,1,-2,-6,-1,-1,-2,-5,-3,-7,-5,10,4,5,-9,6,-3,-4,10,-10,-8,3,-7,2,3,-3,-8,-10,-2,-8,4,-7,-1,-2,2,1,4,-10,4,10,-1,6,5,4], dtype = "uint64")#candidate|6385|(192,)|const|uint64
call_6383 = relay.TupleGetItem(func_3193_call(relay.reshape(const_6384.astype('uint64'), []), relay.reshape(const_6385.astype('uint64'), [192,]), ), 6)
call_6386 = relay.TupleGetItem(func_3197_call(relay.reshape(const_6384.astype('uint64'), []), relay.reshape(const_6385.astype('uint64'), [192,]), ), 6)
uop_6393 = relay.rsqrt(call_6383.astype('float64')) # shape=(10, 105)
uop_6395 = relay.rsqrt(call_6386.astype('float64')) # shape=(10, 105)
output = relay.Tuple([call_6349,call_6353,const_6384,const_6385,uop_6393,])
output2 = relay.Tuple([call_6350,call_6354,const_6384,const_6385,uop_6395,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_8 = relay.var("var_8", dtype = "int16", shape = ())#candidate|8|()|var|int16
var_9 = relay.var("var_9", dtype = "int16", shape = (16, 13, 6))#candidate|9|(16, 13, 6)|var|int16
bop_10 = relay.greater_equal(var_8.astype('bool'), var_9.astype('bool')) # shape=(16, 13, 6)
bop_23 = relay.mod(var_9.astype('float64'), relay.reshape(bop_10.astype('float64'), relay.shape_of(var_9))) # shape=(16, 13, 6)
output = relay.Tuple([bop_23,])
output2 = relay.Tuple([bop_23,])
func_32 = relay.Function([var_8,var_9,], output)
mod['func_32'] = func_32
mod = relay.transform.InferType()(mod)
mutated_mod['func_32'] = func_32
mutated_mod = relay.transform.InferType()(mutated_mod)
func_32_call = mutated_mod.get_global_var('func_32')
var_34 = relay.var("var_34", dtype = "int16", shape = ())#candidate|34|()|var|int16
var_35 = relay.var("var_35", dtype = "int16", shape = (16, 13, 6))#candidate|35|(16, 13, 6)|var|int16
call_33 = func_32_call(var_34,var_35,)
output = call_33
func_36 = relay.Function([var_34,var_35,], output)
mutated_mod['func_36'] = func_36
mutated_mod = relay.transform.InferType()(mutated_mod)
var_122 = relay.var("var_122", dtype = "float32", shape = (16, 3, 1))#candidate|122|(16, 3, 1)|var|float32
uop_123 = relay.cosh(var_122.astype('float32')) # shape=(16, 3, 1)
func_32_call = mod.get_global_var('func_32')
func_36_call = mutated_mod.get_global_var('func_36')
const_129 = relay.const(-9, dtype = "int16")#candidate|129|()|const|int16
const_130 = relay.const([[-4,-5,6,-1,2,3,-10,10,-1,-2,-6,2,2,3,-9,8,1,4,5,-6,-1,-10,1,-2,10,9,2,1,5,2,2,5,5,1,-5,4,7,-10,7,-1,5,-2,-5,10,6,-4,-6,-2,-10,-1,-1,2,3,4,-3,9,-7,4,-4,2,10,10,6,-7,6,-3,6,-5,-9,-9,6,-10,-8,6,1,-4,7,9,6,10,-5,-9,8,10,-2,10,6,2,-6,-8,10,10,-5,-1,-6,-1,1,1,-1,-7,-9,-3,-8,-1,-7,3,-2,-5,3,-6,-4,-9,-8,-6,-1,-3,1,9,3,4,-10,7,2,-9,-5,-4,-5,-6,5,-1,5,9,2,-7,-10,4,10,4,-3,-8,9,7,-9,4,-7,2,-10,9,-1,-8,-7,-10,4,-10,-6,-5],[-4,-6,7,7,-8,-5,-10,-2,-1,1,-3,-5,-5,-5,-5,6,3,2,-4,6,-6,10,-7,6,-3,6,-7,4,-7,-3,-7,10,10,4,1,-10,2,2,4,-9,-4,-2,7,-3,5,5,-4,6,8,-2,1,-5,-1,6,6,10,-10,3,2,-10,-1,-1,-1,-10,8,-8,-1,-5,4,6,7,-2,-2,-4,2,-1,10,-7,-10,2,9,10,6,2,5,10,6,8,-8,2,8,-4,-5,3,-9,7,8,-8,1,2,8,9,-5,-1,1,6,9,2,-2,1,-2,9,-6,-4,-7,-4,-10,10,-1,-2,-6,-4,8,-9,2,2,-8,4,8,-2,6,-9,-2,4,9,6,4,-10,-7,-5,-9,-5,-7,-3,-8,-9,5,-1,-8,8,10,-5,-7,1,2,-5],[10,-9,10,2,-9,10,-1,-8,-5,6,-2,2,-6,3,6,8,-9,-4,9,5,-9,9,-6,-8,-5,8,7,-7,4,10,8,-7,5,6,-9,1,5,-7,10,4,4,-3,2,6,9,-6,-4,-6,6,6,-10,-3,-8,8,8,3,1,-2,5,-9,-2,1,-1,8,6,3,10,3,-6,7,-2,-3,6,6,-3,-4,-3,2,4,1,3,-8,-10,2,3,-10,-2,5,-8,9,-9,8,-2,8,-2,5,-5,-10,-5,2,4,10,5,-5,-10,8,-9,-5,-7,-6,4,-6,-4,3,-1,-7,7,2,-7,-8,-3,-10,3,5,8,8,-3,-10,-1,6,8,-8,3,10,8,8,-6,-6,-4,6,-2,-4,9,10,7,-1,-1,3,-10,3,2,-1,-2,5,8,7],[-6,-3,-5,4,-10,8,-7,-3,-5,-6,2,3,-4,7,2,2,-7,4,9,-5,-4,-8,7,7,-2,6,10,-5,8,8,9,9,-6,-9,10,2,10,-6,-3,-6,-5,8,-2,2,8,1,2,3,-2,1,-8,-7,-4,3,5,4,-2,7,-5,3,1,-1,5,-10,-6,-8,-5,3,9,9,-5,-5,-3,-10,-3,4,-8,-6,-10,-9,-9,-3,5,4,-1,-7,-5,-3,7,9,-8,-6,9,-9,-10,5,7,-6,3,-6,4,-1,10,-7,9,8,8,-4,-8,6,-3,-9,-1,5,-6,8,-6,7,5,2,-10,1,-6,7,-10,-4,-7,5,8,2,3,-4,-9,5,-6,7,-1,8,-5,-1,-9,10,-8,6,7,1,-7,8,-7,9,-4,-1,-7,10,5,7],[-6,2,3,3,-5,1,1,-8,-4,4,-5,3,-6,-4,-6,-5,-9,10,4,-4,-10,-10,4,-1,-7,6,-2,6,4,8,-4,-6,-1,-6,10,7,5,-10,7,7,6,10,4,7,7,-2,10,3,-4,10,9,3,5,2,5,-8,5,-9,3,9,-3,10,-6,-7,-3,6,4,-7,5,3,-9,10,-6,-2,-9,8,1,5,10,-10,1,-7,5,6,-1,9,9,-5,2,-3,-10,1,10,1,-8,-4,-6,3,-3,3,-7,6,-4,2,-10,-9,7,-2,-7,-6,-3,-3,-1,2,7,-10,8,2,-8,-1,9,-9,-9,-3,5,1,-2,-8,-3,9,-6,6,-6,9,1,4,-10,-8,5,7,-1,-9,5,9,10,7,8,1,2,-2,1,-4,-9,4,-4,-6],[-1,9,2,3,-8,7,6,2,9,-2,9,3,-10,4,10,-8,-4,-7,7,-8,2,2,5,-7,-7,-7,7,-6,9,-1,-9,1,8,-10,10,1,-5,-2,-7,7,10,-2,-3,5,8,2,7,-1,-1,-9,10,5,-10,-8,-7,-1,-6,-7,-3,3,-10,-1,10,9,4,4,-7,1,-7,-6,-1,-3,-2,-8,-5,-8,-7,10,-2,3,-1,2,-8,-7,4,-9,-2,4,3,9,-4,-2,8,2,-3,6,2,3,-2,2,4,1,-4,-10,-8,6,7,-4,-10,-5,-9,-8,-8,8,-3,-8,-4,3,-3,-6,5,2,9,-7,10,5,-2,10,-6,-1,-1,-6,-7,2,5,2,9,9,10,9,9,-1,7,-2,2,-1,-4,7,-7,3,6,-9,-9,-4,-8,9],[9,8,-3,-8,-6,7,8,-3,-4,7,2,-8,-8,-10,-7,4,10,1,-4,8,10,2,-1,2,-1,-9,9,-4,10,-3,-6,3,1,-9,5,-7,-5,2,3,-5,-7,7,-10,10,8,6,-2,-10,-5,10,-8,-4,7,3,1,6,10,1,8,-9,7,-10,8,-4,3,-10,2,-6,-1,-2,-6,-10,2,6,3,8,-5,-8,10,-6,7,-6,2,-1,10,3,10,2,-5,3,6,-9,-10,3,-1,5,-5,-9,2,9,-1,-7,6,-4,10,8,-1,-8,-3,2,-10,-2,-5,-3,2,10,4,6,-9,-10,10,-4,6,1,-2,3,-10,-8,-9,4,1,-5,-1,5,-1,-6,3,-3,1,8,9,-5,10,3,-2,-9,1,8,-4,2,7,10,10,-1,-9,2],[4,-6,1,-4,-6,-6,8,1,-8,-9,10,9,5,1,-10,-4,10,-9,-9,6,7,-6,-7,-8,7,3,9,9,3,9,-3,-10,-3,6,3,1,3,6,2,8,-3,1,3,7,-8,-1,-9,5,-3,6,-2,-7,-4,-4,9,8,-3,6,-6,3,-7,-6,9,-2,2,-10,7,-9,4,-7,-7,7,-1,9,-3,-5,9,1,-5,-2,-1,3,-10,8,10,-7,10,9,6,-1,10,-1,9,9,-5,1,3,-3,-8,7,4,-5,9,-8,-1,5,-6,10,-8,-7,2,-6,-4,8,-10,10,-2,-10,8,-5,6,-10,-6,-8,-1,-7,7,-8,4,2,2,8,4,4,-6,1,-8,-6,1,-1,1,7,-1,6,2,1,-10,7,-9,-6,-9,8,-7,-4,-8,-1]], dtype = "int16")#candidate|130|(8, 156)|const|int16
call_128 = relay.TupleGetItem(func_32_call(relay.reshape(const_129.astype('int16'), []), relay.reshape(const_130.astype('int16'), [16, 13, 6]), ), 0)
call_131 = relay.TupleGetItem(func_36_call(relay.reshape(const_129.astype('int16'), []), relay.reshape(const_130.astype('int16'), [16, 13, 6]), ), 0)
output = relay.Tuple([uop_123,call_128,const_129,const_130,])
output2 = relay.Tuple([uop_123,call_131,const_129,const_130,])
func_134 = relay.Function([var_122,], output)
mod['func_134'] = func_134
mod = relay.transform.InferType()(mod)
mutated_mod['func_134'] = func_134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_135 = relay.var("var_135", dtype = "float32", shape = (16, 3, 1))#candidate|135|(16, 3, 1)|var|float32
func_134_call = mutated_mod.get_global_var('func_134')
call_136 = func_134_call(var_135)
output = call_136
func_137 = relay.Function([var_135], output)
mutated_mod['func_137'] = func_137
mutated_mod = relay.transform.InferType()(mutated_mod)
var_469 = relay.var("var_469", dtype = "float32", shape = (7, 10, 10))#candidate|469|(7, 10, 10)|var|float32
uop_470 = relay.sin(var_469.astype('float32')) # shape=(7, 10, 10)
const_476 = relay.const([[[-2.680759,-8.219772,-7.155029,-5.521047,4.998046,4.613121,2.892343,-6.318245,-4.011405,-3.380797],[-9.487898,8.583153,3.825093,-1.263026,0.512008,1.596867,2.987920,-6.700065,-1.120790,-2.473281],[-7.930816,5.703360,-2.873083,5.916478,-0.478871,4.697341,3.204531,7.942107,5.777311,9.366474],[-7.377809,8.057572,-9.050067,4.154344,-5.419553,-0.537438,5.793356,-4.121603,6.647418,7.916519],[1.076892,8.127981,0.258820,-4.348375,-1.879030,-1.370195,-2.294552,-0.979591,9.671705,7.908164],[4.886534,-6.175291,-6.798300,4.688502,-1.105964,7.648978,4.769215,-9.041086,1.236704,4.046179],[0.253463,-6.691072,8.798695,-6.900782,7.793527,-2.393108,-7.696911,2.246902,-6.583423,-2.749082],[8.387379,-9.405195,-8.607713,-2.037602,3.442279,0.452645,9.793064,-9.165892,7.133906,3.277922],[5.371175,5.654309,4.862556,-4.039864,6.776496,-3.440626,-3.922484,2.790558,-7.743961,-2.645264],[-0.968058,-6.852228,-3.892671,-6.419366,4.970772,-1.674636,-6.514450,-4.423300,-8.960072,1.104224]],[[-4.943844,8.722102,-9.641460,3.335553,-0.393716,7.057230,-5.511751,-9.538099,-3.595725,-3.685417],[-8.212330,-6.319740,-1.941310,-3.743083,1.521857,0.925455,-7.496465,-5.660561,4.133941,6.684537],[-6.423532,-4.870418,-9.494147,8.675193,-3.625475,-4.179559,-7.042522,3.785531,-5.917977,7.289953],[9.419198,8.892494,3.846595,-2.682811,5.090274,-6.386672,-9.542140,-9.854621,1.749455,-4.110760],[7.710657,7.311203,8.336164,8.373580,-4.522675,-0.177072,8.478044,0.719706,7.257515,5.234288],[7.869718,-2.340849,5.660456,-2.892207,-6.507974,-3.085738,-5.968153,2.227900,-3.851314,5.553339],[-7.080241,-7.626293,4.937221,-9.254487,8.783776,5.690627,-1.359692,9.104978,4.585692,-5.728926],[-2.916224,6.925042,-8.699304,-3.386006,0.625558,-4.843851,5.927662,0.258574,-1.957238,-2.355726],[-5.779904,5.128868,5.465263,-3.379936,-0.784941,6.853814,6.709196,3.110155,6.057281,-5.317981],[0.079404,-6.615901,8.924262,9.259898,-6.130455,7.507504,-7.718007,7.679079,9.387524,-3.807732]],[[-2.817456,-0.166195,-3.342721,-3.464834,-7.313865,4.470613,4.317857,-1.031187,8.738995,-0.655282],[5.785576,-4.574899,-2.835915,-0.492009,7.880200,-3.853766,-9.540915,7.434908,-4.577769,-0.091718],[-3.325391,1.803731,-3.510664,-3.613476,7.145133,3.148599,4.757330,-6.564814,7.524985,3.144323],[7.926043,-0.017151,9.289256,3.852385,6.740278,-9.791865,9.465200,8.342807,1.078105,7.704012],[4.135643,-2.749264,5.615965,-0.675037,4.967486,7.529881,1.762941,-3.664967,-7.937350,7.294635],[5.911685,8.457495,6.278143,-9.041907,4.116861,9.567312,-9.496784,0.262425,4.784467,-4.320709],[8.225241,2.504933,-4.765709,6.613102,2.637838,-1.506266,-5.108442,5.567947,5.431178,0.259728],[-9.843313,3.107749,-7.765545,-2.640542,-2.548033,-9.660365,-6.667960,0.641709,8.390900,3.624796],[2.164401,5.550294,-2.585347,3.919729,1.206550,-1.693512,3.015317,-7.044910,-8.165647,3.812319],[-4.114196,-8.310007,-8.750458,8.367093,7.416005,-2.848498,-5.446485,-5.296227,1.187592,-0.120267]],[[-7.629738,-5.900282,-3.924265,0.781940,4.863644,-7.750653,-8.064271,-5.888537,-5.248231,-4.174865],[1.784520,-5.629818,5.005096,-5.103474,-1.580380,5.289745,8.189908,-2.355643,-1.276038,-9.341061],[4.950657,7.267518,8.556422,-3.231421,3.118507,5.841418,4.192607,7.272666,2.889561,2.529250],[-8.565380,-8.602534,-5.336076,-9.502087,2.541887,-9.853580,6.417270,-4.418080,-1.305145,-4.778448],[-8.501336,-8.024159,4.413966,-3.989335,2.054917,-7.931890,-9.644598,3.409864,4.771203,9.178714],[-9.807327,0.645737,-9.981985,-6.576613,-4.543946,-0.876927,8.358266,5.007715,-6.311854,2.587176],[0.435428,-0.390717,-7.123565,1.099279,6.449942,-7.618527,-3.888062,4.511880,-5.312225,9.747498],[-5.643629,3.198741,-8.535878,-6.379985,-4.059575,-5.600968,3.341745,5.021239,-4.600672,5.423337],[3.902093,8.821345,-5.443677,-8.672140,6.211168,6.696505,-6.767457,5.069696,9.192140,1.103161],[2.742946,-5.980435,-2.804661,-6.143879,-9.524379,-7.552309,-8.164406,6.131906,-7.543975,6.499673]],[[-9.317080,4.492754,0.652916,5.424591,-4.178499,-4.427253,6.387322,-3.320265,-2.593792,-4.253444],[2.153776,-6.466110,7.694876,-5.214173,-9.949750,1.896829,-3.534000,1.318544,7.176788,8.248356],[9.319875,5.755508,-3.896729,3.335868,-7.743134,5.021075,-2.854547,0.074331,6.492289,-6.983957],[0.004845,-3.273710,-5.300680,9.267051,8.324068,-0.091973,-3.758673,8.649014,1.602056,6.705440],[-3.387010,4.565380,8.968381,-2.822857,-6.637565,-8.878334,-7.473218,-7.708131,-6.670136,-9.654218],[-4.401172,-4.825938,-0.299715,7.794804,-7.040463,-7.691376,2.780694,-7.737217,-3.183621,9.691260],[4.368046,7.962974,0.364529,-8.610543,9.740251,6.869939,1.082712,1.180606,6.233366,-4.004616],[7.118229,-9.495500,-5.312058,9.231935,-3.372044,-1.592062,-0.366084,3.256228,8.055140,5.560518],[7.312846,-2.876171,8.399743,-9.236231,-2.500975,-8.118542,9.047646,-2.073337,6.002459,2.174339],[-4.986632,8.480921,9.268132,-8.716665,4.716229,7.752919,-2.077353,9.383545,9.156648,-9.239680]],[[-3.496687,-2.749580,-8.891754,-3.787889,-6.198930,4.271963,0.076627,-8.014545,6.736421,4.878966],[-2.898230,7.266579,-5.830217,-4.384143,5.649003,0.548692,-0.264272,0.291739,-6.524502,-6.288040],[8.055921,4.317954,2.142406,1.004773,5.853708,5.000731,-4.715936,-5.143966,6.983434,-4.139913],[-9.893120,3.838544,7.581365,1.301053,-0.040957,6.444101,4.239058,-3.370750,-7.754654,7.201816],[-9.268268,7.155355,-2.466700,2.748994,4.646666,-3.769425,0.453180,-9.673528,-1.578878,-1.577595],[3.184427,3.832966,-1.166705,8.592085,2.916051,-9.631406,9.481975,-7.395827,-4.713769,-3.209156],[-7.879062,4.720476,-3.141739,-2.611548,5.956059,5.100991,-9.360119,5.415373,-1.495903,2.055868],[8.350851,1.525118,-8.183470,-8.399220,4.162098,-4.559099,5.963002,3.417442,1.848022,1.124907],[-9.632901,8.401438,0.250762,4.067910,-4.663690,5.600353,5.953348,-8.201400,7.007892,-4.238912],[4.006873,-4.557132,-1.418257,-6.517148,5.848471,-1.683980,-2.910041,5.313445,-4.740729,8.898410]],[[1.713640,-3.115083,2.122454,-2.056372,-2.585178,2.919750,7.270707,-5.246367,0.523078,9.576905],[-1.107922,-5.410318,-2.257762,-3.550426,2.387842,2.991103,8.118134,0.774172,-6.607149,3.397914],[-3.490048,7.675555,-8.607479,2.685452,-9.080018,-4.925376,-0.209252,-0.502475,-8.844586,6.839918],[-2.422505,5.497159,-6.166437,5.176464,-3.985562,3.644017,6.552619,3.623791,6.077483,-2.595029],[3.621062,-4.040773,3.857087,-9.603661,-2.076110,1.389284,-2.555023,-7.643004,8.281128,-8.774670],[-5.724958,-6.946361,-7.582770,0.215191,-1.782501,7.144614,-7.420196,3.033872,-5.709734,-1.435617],[5.641841,-9.714968,-6.894754,4.283941,-7.693889,8.999632,3.657002,-7.885616,6.163522,1.068242],[4.468208,-0.285451,1.185531,-7.794717,6.423742,-3.587592,-6.468104,9.608444,7.987892,2.465360],[-2.634479,-7.475021,-3.761495,7.225348,-5.341500,-9.822706,2.214691,4.015956,-9.896861,2.395164],[-9.497279,6.019175,-2.070774,5.249354,9.987686,6.815104,-2.821365,7.325791,-2.615452,-5.792638]]], dtype = "float32")#candidate|476|(7, 10, 10)|const|float32
bop_477 = relay.greater_equal(var_469.astype('bool'), relay.reshape(const_476.astype('bool'), relay.shape_of(var_469))) # shape=(7, 10, 10)
bop_482 = relay.not_equal(uop_470.astype('bool'), relay.reshape(bop_477.astype('bool'), relay.shape_of(uop_470))) # shape=(7, 10, 10)
uop_486 = relay.atanh(bop_477.astype('float64')) # shape=(7, 10, 10)
var_493 = relay.var("var_493", dtype = "float32", shape = (7, 10, 10))#candidate|493|(7, 10, 10)|var|float32
bop_494 = relay.maximum(uop_470.astype('int32'), relay.reshape(var_493.astype('int32'), relay.shape_of(uop_470))) # shape=(7, 10, 10)
uop_503 = relay.rsqrt(uop_470.astype('float32')) # shape=(7, 10, 10)
output = relay.Tuple([bop_482,uop_486,bop_494,uop_503,])
output2 = relay.Tuple([bop_482,uop_486,bop_494,uop_503,])
func_507 = relay.Function([var_469,var_493,], output)
mod['func_507'] = func_507
mod = relay.transform.InferType()(mod)
mutated_mod['func_507'] = func_507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_507_call = mutated_mod.get_global_var('func_507')
var_509 = relay.var("var_509", dtype = "float32", shape = (7, 10, 10))#candidate|509|(7, 10, 10)|var|float32
var_510 = relay.var("var_510", dtype = "float32", shape = (7, 10, 10))#candidate|510|(7, 10, 10)|var|float32
call_508 = func_507_call(var_509,var_510,)
output = call_508
func_511 = relay.Function([var_509,var_510,], output)
mutated_mod['func_511'] = func_511
mutated_mod = relay.transform.InferType()(mutated_mod)
var_627 = relay.var("var_627", dtype = "float32", shape = (10, 1, 13))#candidate|627|(10, 1, 13)|var|float32
const_628 = relay.constdtype = "float32")#candidate|628|(10, 16, 13)|const|float32
bop_629 = relay.equal(var_627.astype('bool'), const_628.astype('bool')) # shape=(10, 16, 13)
bop_633 = relay.logical_xor(var_627.astype('int32'), const_628.astype('int32')) # shape=(10, 16, 13)
func_32_call = mod.get_global_var('func_32')
func_36_call = mutated_mod.get_global_var('func_36')
const_648 = relay.const(3, dtype = "int16")#candidate|648|()|const|int16
const_649 = relay.const([2,2,-7,-4,8,-1,1,-10,-3,3,-4,7,10,-5,-7,8,-6,-1,3,2,-9,6,2,-4,4,6,-10,3,-6,2,-3,-5,3,1,-3,7,-7,-5,8,5,-7,-10,-4,6,3,5,10,-6,8,-7,2,5,7,-10,9,7,-6,4,9,-4,-10,10,-1,-3,6,3,5,1,8,-9,7,-7,-2,-7,-3,-3,9,4,-2,2,8,7,-3,-7,10,-10,-1,-1,7,4,-8,4,-2,1,7,3,-9,3,7,-3,-8,-3,1,2,4,10,4,-1,-6,2,6,-1,4,-6,-5,-9,3,2,9,-4,1,-7,9,3,10,1,1,-2,-7,9,9,-5,-1,6,10,-5,5,-9,-7,2,-10,-5,4,-7,6,-2,-3,7,3,-5,5,-5,-9,-7,-7,-6,-9,-7,8,5,-7,9,6,-5,1,-2,-10,-9,1,5,-2,-6,-4,7,6,-6,-2,4,-2,7,-9,-2,-5,-7,-6,8,-3,-2,-7,1,-2,6,-3,-2,-9,10,5,6,2,10,-6,-7,-5,8,-9,-5,5,5,-2,-4,-3,1,-6,-1,8,8,4,-5,-6,10,9,6,-7,-3,-7,3,1,9,-9,-8,4,3,5,6,8,-7,-9,4,-4,-8,3,-1,3,2,10,1,9,-3,-9,-6,-5,7,-5,-4,7,8,-1,-2,8,-8,-5,-6,10,-7,-10,-9,5,9,-6,-7,-4,1,-5,-2,9,3,9,-8,-9,-10,-9,4,-7,-4,-7,-6,-7,6,1,4,8,-4,7,5,-1,4,6,-6,10,-5,-2,-6,7,-2,2,8,3,6,-8,-5,8,10,5,6,-7,-10,2,-9,-10,9,9,1,-3,-2,-9,-9,4,2,7,-5,-1,-5,-3,-5,-9,4,-2,-10,3,6,-8,-1,-6,4,-1,10,-5,6,-3,-10,3,-10,10,-2,3,7,4,-6,10,-8,10,-2,4,5,-7,2,1,-9,-6,-6,-10,10,10,8,7,-1,-3,6,-1,9,-5,1,4,7,-2,9,-7,-10,7,8,-4,-3,-2,-4,-9,2,-5,8,-5,-9,9,1,-7,4,8,7,3,-9,-10,-9,-8,-1,-5,2,7,7,1,3,-8,3,-10,-8,-4,-7,9,-1,6,10,2,-9,5,-4,-3,-8,5,7,-4,8,9,2,9,7,-5,7,10,6,-4,-4,9,-6,-5,-10,7,9,-1,-5,4,8,-8,-9,-10,4,7,-1,-3,-1,-1,1,8,3,3,-2,8,8,-4,4,4,-2,-7,-7,9,9,2,-7,10,-2,5,-1,7,-9,-6,6,1,1,10,-8,-10,10,-7,-4,6,1,1,4,-1,10,-8,-7,6,-6,-8,7,1,9,4,-6,-1,-4,1,2,-3,-9,-9,-9,-6,1,-9,-3,-6,8,-8,-2,3,3,4,-6,-6,-7,3,1,-10,5,-1,-8,5,-6,-4,3,-4,3,-10,4,-4,-4,-6,-8,5,4,4,-2,-1,3,7,-3,2,9,-5,-9,-4,7,8,-4,1,-9,-1,-5,9,6,-3,9,6,-9,-2,1,-3,-6,6,-4,-10,-5,5,-3,-9,2,-9,9,-8,-8,7,6,2,1,-4,6,-1,6,10,-10,-8,10,3,7,-8,-4,6,6,-4,5,-3,5,-1,-10,8,-9,2,8,-9,-9,-9,1,-4,3,-4,-9,1,-3,-3,-1,-2,-1,-10,-2,-1,-7,5,-8,-6,9,1,-9,10,-3,4,7,-6,2,5,-8,-8,-9,-2,-2,-9,-8,-8,3,10,4,3,10,10,-7,10,3,10,-3,-10,3,-7,-2,-10,5,-2,-2,2,4,7,-7,9,-7,4,1,4,-5,-5,-7,3,-2,3,-8,9,-7,5,5,3,-3,1,-3,10,-7,-7,9,-8,-5,-9,8,-6,4,8,-5,9,-10,-4,7,-2,-8,-1,-9,9,2,8,4,4,5,-7,-4,10,9,6,-7,-10,-7,1,-10,9,-8,3,-1,2,-10,8,-5,8,4,10,2,6,9,-3,-10,2,-9,2,1,-8,4,4,6,-3,-8,2,3,9,-9,-10,7,9,-6,-8,6,7,-1,9,-7,-10,7,4,3,-1,-6,-1,2,8,4,4,-1,-2,-4,-2,5,-3,-5,2,10,10,4,-6,-3,6,-2,7,-1,-8,10,-5,3,9,7,-5,5,-5,-7,7,7,9,-4,-3,-7,-4,-2,-4,-9,2,-4,-6,-4,-10,-2,-3,2,8,-10,3,-1,-4,5,7,-3,-3,8,8,8,3,4,-9,-9,2,-10,-7,-3,-6,-1,6,4,10,7,-3,7,5,5,-10,2,6,-9,5,-5,4,-3,-1,10,-6,1,-3,7,-2,5,9,-3,9,7,6,4,2,-2,4,-4,2,2,-6,5,-3,7,8,-4,-2,3,-7,-1,6,-1,7,1,-3,-7,3,-6,-2,6,-10,9,3,1,-10,-10,8,-7,9,4,-2,-10,3,-1,6,7,10,-2,-9,-5,-5,-7,6,-8,3,-6,5,2,-1,-4,-2,5,-8,-5,9,-10,-4,-9,-3,5,3,3,-7,-7,-9,5,6,3,6,5,-7,2,-1,6,-10,-2,-2,2,-1,8,-3,-9,-5,-3,10,6,2,-3,-1,-7,-9,5,-5,3,-5,3,-5,7,7,-1,-7,-6,-7,3,7,-8,-10,-8,-9,8,1,1,4,-6,-7,9,3,4,4,7,-7,10,9,10,-10,-3,-10,8,2,6,-10,5,10,-3,-5,8,9,-1,7,-6,2,7,-4,7,-9,-5,-7,2,10,-4,8,-8,1,5,1,-4,-1,-4,-7,2,5,7,-8,1,-6,4,8,-1,3,8,7,6,2,4,-2,-9,4,1,5,-1,-9,-7,8,8,3,-5,8,2,-5,1,-5,-4,-6,-2,-9,4,-1,-6,8,-10,10,5,1,9,-4,-3,1,-9,-4,-8,5,10,-2,4,-2,2,4,-1,-3,-2,1,7,5,-8,6,-4,9,-8,2,-10,-8,8,10,-8,-2,-1,6,-6,3,-1,-2,-1,-1,-2,2,-9,6,4,-9,-8,-5,-3,-6,-3,2,7,1,7,-6,-8,2,-9,-7,6,-7,4,-3,2,-3,-8,1,1,3,5,-6,8,-10,-10,-1,-2,1,10,-10,-3,7,10,-7,1,8,9,-1,-3,3,-10,10,-3,-8,4,5,-3,-7,2,3,-3,-1,4,-9,-5,-2,7,6,2,-2,2,-4,-10,7,4,-7,-2,9,-10,-6,-1,9,10,-9,-7,-1,-8,3,5,-2,-3,-7,-5,2,-7,10,5,-7,5,9,8,-3,2,-4,8,-7,-5], dtype = "int16")#candidate|649|(1248,)|const|int16
call_647 = relay.TupleGetItem(func_32_call(relay.reshape(const_648.astype('int16'), []), relay.reshape(const_649.astype('int16'), [16, 13, 6]), ), 0)
call_650 = relay.TupleGetItem(func_36_call(relay.reshape(const_648.astype('int16'), []), relay.reshape(const_649.astype('int16'), [16, 13, 6]), ), 0)
uop_652 = relay.asin(bop_629.astype('float32')) # shape=(10, 16, 13)
func_134_call = mod.get_global_var('func_134')
func_137_call = mutated_mod.get_global_var('func_137')
const_657 = relay.const([[4.169649,-3.371951,-2.742254,9.455121,8.780148,1.275231,-3.555700,5.890993,-6.454957,-7.386938,5.143617,1.432616],[-0.347183,4.143172,7.156175,-8.126710,1.283681,-4.287718,-7.125662,3.228909,6.571953,4.314302,6.105546,7.915223],[6.249934,9.602374,6.427319,-0.823731,2.989932,-2.655350,-7.809819,-0.649107,5.342233,-1.716340,-0.321369,-5.247328],[-1.133923,1.221847,-9.534744,8.336424,0.507411,8.068337,-4.393876,-3.964642,5.394903,-4.693054,-0.889413,-3.802369]], dtype = "float32")#candidate|657|(4, 12)|const|float32
call_656 = relay.TupleGetItem(func_134_call(relay.reshape(const_657.astype('float32'), [16, 3, 1])), 3)
call_658 = relay.TupleGetItem(func_137_call(relay.reshape(const_657.astype('float32'), [16, 3, 1])), 3)
func_134_call = mod.get_global_var('func_134')
func_137_call = mutated_mod.get_global_var('func_137')
call_671 = relay.TupleGetItem(func_134_call(relay.reshape(const_657.astype('float32'), [16, 3, 1])), 3)
call_672 = relay.TupleGetItem(func_137_call(relay.reshape(const_657.astype('float32'), [16, 3, 1])), 3)
output = relay.Tuple([bop_633,call_647,const_648,const_649,uop_652,call_656,const_657,call_671,])
output2 = relay.Tuple([bop_633,call_650,const_648,const_649,uop_652,call_658,const_657,call_672,])
func_673 = relay.Function([var_627,], output)
mod['func_673'] = func_673
mod = relay.transform.InferType()(mod)
var_674 = relay.var("var_674", dtype = "float32", shape = (10, 1, 13))#candidate|674|(10, 1, 13)|var|float32
output = func_673(var_674)
func_675 = relay.Function([var_674], output)
mutated_mod['func_675'] = func_675
mutated_mod = relay.transform.InferType()(mutated_mod)
const_692 = relay.const([[[-2,-2,-5,8,-1,-3,-5,-7,7,-9,9],[7,-2,4,-2,1,-1,6,4,-1,-10,-9],[5,-8,-3,9,5,-7,6,9,10,1,-5],[-9,-2,5,9,7,-2,-6,-9,9,3,-3],[7,7,3,3,7,-8,-6,-3,9,-9,-4],[-7,2,-9,4,-3,5,10,-8,-6,7,-5],[9,8,-9,-8,-3,-6,-1,-9,-8,-5,2],[10,10,-6,2,-2,3,-8,6,-3,-10,-6],[-5,-5,-9,5,6,3,1,-5,-3,5,-6]],[[6,10,-2,10,1,-3,10,5,-3,-1,8],[-6,-5,9,-4,-3,-8,-4,1,-8,-1,9],[5,9,6,4,9,9,2,-4,-5,-9,-9],[-5,8,5,6,-3,9,-9,-1,10,-7,-6],[7,5,8,-4,8,-9,5,-6,-1,2,-2],[-6,-5,4,7,1,1,-7,4,8,-3,8],[5,6,4,6,8,8,-2,7,2,3,-8],[2,2,-3,9,10,5,9,-6,5,9,-9],[-6,10,8,1,4,5,-5,2,10,-7,-9]]], dtype = "int8")#candidate|692|(2, 9, 11)|const|int8
var_693 = relay.var("var_693", dtype = "int8", shape = (2, 9, 11))#candidate|693|(2, 9, 11)|var|int8
bop_694 = relay.greater(const_692.astype('bool'), relay.reshape(var_693.astype('bool'), relay.shape_of(const_692))) # shape=(2, 9, 11)
uop_706 = relay.acos(var_693.astype('float64')) # shape=(2, 9, 11)
output = relay.Tuple([bop_694,uop_706,])
output2 = relay.Tuple([bop_694,uop_706,])
func_719 = relay.Function([var_693,], output)
mod['func_719'] = func_719
mod = relay.transform.InferType()(mod)
var_720 = relay.var("var_720", dtype = "int8", shape = (2, 9, 11))#candidate|720|(2, 9, 11)|var|int8
output = func_719(var_720)
func_721 = relay.Function([var_720], output)
mutated_mod['func_721'] = func_721
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1163 = relay.const([[[3.155644,-2.789419,-5.586160,-1.573451,7.495363,-6.651226,-4.505290,-2.274047,4.772900,4.349813,-9.813366,-3.950333,-2.794851,9.394676,-5.621992],[8.131193,7.731749,8.135805,-2.143659,-9.217663,-0.345942,-3.379717,1.962035,-4.577759,3.835376,-5.846899,5.023616,3.645515,-8.300589,0.428907],[3.992665,-9.736733,-0.749321,-5.032197,-6.975255,5.916831,-1.091170,0.735879,-5.525348,-0.348516,8.682854,-8.928143,4.493599,-8.487160,-9.241007],[4.453432,2.818112,3.623647,4.121649,-5.303750,-8.842722,-6.720191,-2.377153,-7.049754,3.753146,-1.770828,2.705690,7.847564,-4.219069,-8.505703],[-5.779535,-3.533017,-7.418376,4.297457,7.012717,3.836639,5.942011,-2.642861,4.532604,5.683131,9.587987,7.057343,-4.733171,-5.243292,9.231650]],[[5.730731,-9.990750,9.746581,6.092301,-7.132479,-3.219617,1.775479,-7.331697,8.956582,-2.884122,-4.149739,-2.931681,1.065533,3.774059,6.175832],[-2.443404,-7.850276,-6.263111,4.485715,-1.143590,6.703040,1.931526,1.097554,-0.700105,7.844699,5.346189,8.501039,-6.516763,-1.813877,-9.461872],[-0.300736,-1.351112,6.281030,-7.633203,6.242950,-8.562303,6.829073,3.638821,6.480772,-9.608408,-9.981900,0.778861,3.702506,-2.394426,6.642442],[-3.487015,-7.996815,-7.646925,6.885691,-1.714234,4.932935,1.107319,8.774563,7.653051,5.267168,1.813513,0.703235,9.215691,-4.884912,-6.734207],[-8.519258,4.888459,-5.023814,-5.197127,-3.870626,-7.206502,7.826937,3.920642,-0.708146,-7.341706,-5.909500,4.897700,-7.354250,-3.681395,7.940777]],[[-5.303127,8.165907,-0.267404,1.808537,-9.499868,6.971518,5.004996,-6.028917,9.797479,-2.734045,-5.489318,-8.387004,-1.325490,-2.499770,3.325551],[-7.251126,3.174110,-9.035271,8.354297,-0.387245,6.440613,-5.345086,8.424305,3.520275,3.706266,-0.349194,-9.096909,9.815280,3.648348,-2.425966],[1.505179,-4.617255,-6.207205,-4.886422,-3.505200,8.953193,4.371940,-2.668620,4.212868,8.183719,5.646434,-1.580716,-2.499725,7.176199,-3.049384],[5.847459,-9.096223,-9.021825,-8.094452,-9.654836,-5.046123,-2.479806,1.487279,-5.825591,8.408070,3.637364,4.420522,-1.405441,4.866127,3.599561],[2.677063,-1.379991,-4.861582,5.186547,2.110428,2.082650,8.490184,8.305107,-8.642508,5.713768,-4.813946,1.240414,7.630087,4.230787,9.869927]],[[-8.021277,5.380670,-0.467618,6.935216,-6.095271,4.590457,-7.571368,-4.135089,0.612018,2.175215,-8.206673,7.679536,6.581201,8.455093,2.280582],[2.783297,-5.694520,-2.970115,-4.045826,-1.407395,5.403754,-2.224868,-0.091014,4.067749,-4.681316,5.017497,-8.855897,-7.673152,6.737876,1.303245],[-6.679625,-4.416490,0.138717,1.294974,-8.892247,0.055350,5.700504,-2.121058,-1.675182,3.118086,-5.448377,3.509997,5.293829,9.704241,1.643267],[3.496929,5.906371,-9.553533,4.445360,8.888557,7.353028,3.553333,-3.807767,2.350449,5.969366,8.597912,4.681465,1.519727,-6.899198,3.952009],[4.189172,6.984640,-2.592864,0.135924,1.722897,8.074362,0.103519,3.941296,-6.035105,-1.704987,3.067355,-1.054626,-1.221756,7.634565,-8.422544]],[[8.292639,-6.954050,-1.644820,-2.246462,-5.492615,-3.015221,4.343116,-8.024972,-9.169604,2.958062,-4.818710,-4.994921,0.034145,-0.219220,-7.929393],[8.432027,-2.188512,-1.075657,-6.424740,6.498712,2.323133,-8.592730,7.969262,4.386748,-4.498861,4.024527,-0.824688,8.159950,-5.617885,-4.569273],[-3.796612,-4.238095,6.122231,0.557936,-9.654023,-0.130381,3.063347,-1.080729,7.542027,-9.811156,-1.735088,4.231196,6.657825,-8.525587,-9.442416],[-0.206627,-0.513511,-2.591012,-3.333531,5.078442,-4.429553,-7.242604,-6.703647,-3.107620,-9.882596,5.606162,-4.986022,1.066129,0.239085,-5.603455],[7.372218,-3.342945,4.916968,2.598717,8.302224,-9.460152,1.635063,3.791333,6.305271,7.602907,-9.703004,-4.007729,6.243198,-2.614972,0.705781]],[[2.178280,-9.092643,-1.766111,-4.646717,1.410675,-0.468854,7.672867,-7.894894,-7.516363,-6.131681,0.275008,-6.643817,-8.881534,-5.588832,8.657965],[1.030638,-3.136490,-3.054674,8.779400,-9.608282,-9.202204,7.579941,-8.922533,-7.241693,5.376149,6.364954,6.995619,4.215437,5.611943,0.180825],[3.727064,1.524990,-3.658934,4.395572,-6.069798,-8.509237,-3.561306,-0.022716,1.474529,4.669170,-5.085248,4.010500,2.435522,5.711321,-9.877849],[6.562088,4.962390,2.736452,-1.335364,2.059488,6.283977,-2.691134,1.791053,-3.326044,7.522275,-9.779887,-7.824150,-7.563613,-2.376704,8.226154],[-8.586989,-1.195114,4.944166,6.098673,-8.803201,1.380395,-4.143544,-5.215448,-4.351842,-3.098285,-2.707634,6.696408,-2.219810,-8.169120,5.439789]],[[-4.609313,-6.025207,6.587039,-7.858687,-2.259643,-6.074250,-2.922638,2.676620,-8.895234,-4.210570,0.451181,0.290717,0.996670,-9.490434,-2.639541],[0.763408,3.189668,-7.571101,-7.820230,1.273814,5.196551,-3.865779,-8.083124,-6.619807,4.640742,7.979175,-7.695810,-3.851949,7.627838,4.104354],[-9.603308,-3.280996,9.934946,5.113938,8.238910,-5.441146,-2.394858,5.914101,-1.141538,3.635477,-7.572089,-2.504381,-5.127977,-2.752843,-8.921594],[0.346492,4.248120,-0.214582,-7.058290,-9.974687,2.776265,3.713251,5.490447,-5.344337,-2.556617,2.427115,7.481873,4.256116,-8.989489,2.864107],[-7.239055,-9.177934,-2.302166,-8.013097,-9.222862,-9.226123,3.515432,0.691510,-9.183755,-4.204900,5.026582,4.814724,8.533902,-6.844490,7.577489]],[[-3.131595,3.082561,8.995880,-5.375744,-6.792387,-0.027189,-2.959677,-0.625611,-5.996355,4.296104,-2.845826,-2.573232,4.237116,-8.227957,-6.824990],[3.441510,2.473406,8.394914,-8.470351,-0.307071,-6.042761,-6.636026,-0.528795,-0.775835,7.871778,1.650230,-6.557155,-3.796210,-9.348766,-7.946391],[-1.880109,8.331884,-7.980693,-2.201904,-1.540153,7.387628,6.523694,1.838168,7.900755,-9.335347,-2.431710,-7.260739,2.897762,-5.056647,9.479721],[-1.923709,8.676393,-1.739396,-6.862650,-7.571587,5.588507,6.336676,0.444661,1.779636,-4.000854,-4.088268,4.112686,-0.873175,7.527034,-9.956058],[3.662583,-0.395013,9.007550,-9.564527,9.004318,-6.108756,-7.812529,8.024216,9.237213,-6.479430,-9.310325,-9.921188,7.159970,-2.953437,0.700703]],[[-5.518656,-5.449442,3.454998,7.054365,7.620787,3.437140,2.985606,-0.086432,9.721477,0.214436,2.993182,-5.611586,-2.986547,-5.643507,-4.717807],[2.300879,-7.936248,2.102997,5.435788,7.058505,4.004647,8.312707,5.136842,8.097092,8.080950,-8.952178,-7.381780,-5.413953,3.512673,-8.918494],[-2.630755,-3.532066,7.352649,4.154709,-1.815278,8.916648,0.106673,-8.202528,-3.810145,2.162216,2.545622,0.233060,6.656557,-8.995411,-7.500574],[-9.144278,-5.509647,-0.605960,4.560280,7.772091,-6.126567,2.312749,0.947325,-5.924560,-4.508428,0.496707,-5.734962,7.991010,-1.135880,-7.379223],[-8.404702,5.458026,4.902087,-3.464954,6.874504,-5.336560,0.051558,5.239361,9.829780,-7.691983,-8.327583,7.595325,-5.339640,-7.392069,-8.415195]],[[-6.304153,4.616658,-0.434503,8.164273,8.909398,-2.949306,-0.785421,-8.335497,-6.102155,-3.089331,4.388959,-6.871813,1.291730,8.453808,3.510143],[-2.778138,8.595118,3.707779,-5.533498,-5.018971,-5.029266,6.208766,-1.136388,-2.768164,9.199327,-5.971217,2.939779,-8.524082,2.551447,-1.851016],[1.447914,-5.663071,0.116255,-2.956497,-3.222261,0.911991,8.848157,-2.058929,-1.967944,-9.008485,2.247572,-5.287020,8.845750,5.115628,9.387252],[2.975289,-8.582022,3.034180,-7.632826,9.730299,-5.081460,1.488711,9.318831,-9.722972,-4.390288,1.151728,5.486923,7.004142,-8.271054,2.263342],[-5.526136,6.156318,8.489186,-6.773946,-2.997291,-3.063748,1.006442,2.256325,1.044742,-5.940224,-5.702335,1.308757,-9.760504,1.290876,5.625610]],[[-2.948376,5.353380,-4.316018,-3.325928,-0.438743,-3.913566,4.999289,-0.102234,-1.416832,-8.304650,-6.912756,9.422895,-9.168591,-0.239278,-2.771195],[5.326233,6.117652,-4.233236,7.296244,2.867076,-2.602562,-8.949024,3.063789,-4.840318,4.845801,-9.512603,2.156549,7.886964,4.310428,8.402848],[-7.020135,-8.017006,-9.388109,1.809459,0.226867,8.113880,6.166011,-4.756033,8.721394,-4.215706,8.514190,-7.891046,-8.040470,0.216690,4.146505],[-9.087422,7.915779,3.677742,0.824996,5.231332,3.955448,-7.661845,-7.520956,0.948419,6.566023,-8.732251,1.582971,-6.456537,5.000123,3.692707],[-5.711744,-1.783655,8.859135,3.029708,-9.881620,5.476521,-1.993703,-1.732988,-5.919518,-1.355570,-5.336961,8.010429,2.887904,6.136287,4.776014]],[[6.926896,-9.766498,5.077190,9.096084,4.011284,2.536393,-7.292434,-1.348162,-5.830592,-4.875085,4.102126,-4.725150,-0.902975,-5.241512,-9.713381],[7.054730,6.494116,1.388064,0.465725,-4.219658,-8.874791,1.005852,3.401188,-7.968740,9.638996,-6.342342,4.483862,6.397748,-2.268231,4.031968],[5.716137,-2.181319,2.980159,0.684144,-4.522692,7.475786,5.470987,3.469861,-2.533792,-0.030146,5.909423,-4.380241,0.134415,-9.039576,7.786810],[-8.276396,-6.702720,-0.141527,-1.287270,-4.258119,9.790186,-5.071216,2.004624,6.726436,9.777955,7.200711,-6.514497,4.748491,1.392792,3.864147],[7.808833,4.214256,-9.859919,5.419702,2.741232,3.063754,4.769527,0.663564,-1.821985,5.911135,-1.625932,-4.241671,-0.807984,0.241321,1.903839]],[[1.922556,-4.606484,7.597089,-1.513499,-8.402525,-5.498665,-4.848430,6.986902,-2.172710,-9.201083,6.849089,-8.381228,5.665122,3.181371,-9.399675],[5.328641,5.821315,-0.590830,-8.275210,-4.021163,-8.281784,-7.629838,-5.209824,-9.001695,9.226676,-0.039026,-1.410894,-1.097334,-7.925856,-8.789622],[0.905808,-4.902753,1.670452,8.033136,9.624844,-2.145447,-4.130554,-7.492035,-5.709388,-2.509015,8.065387,-5.291960,0.222020,4.750396,-3.913771],[3.442130,1.850095,9.366478,-7.851700,-2.742162,-4.147012,-3.318914,8.975587,9.976720,8.040569,-0.604155,6.655793,-6.936704,5.377088,-5.649522],[6.937642,1.520558,4.342261,-0.340300,2.720897,7.842433,2.282144,3.121397,-4.717042,6.118349,-8.829184,-1.385320,-7.900084,-9.200456,-0.438753]]], dtype = "float32")#candidate|1163|(13, 5, 15)|const|float32
uop_1164 = relay.erf(const_1163.astype('float32')) # shape=(13, 5, 15)
func_32_call = mod.get_global_var('func_32')
func_36_call = mutated_mod.get_global_var('func_36')
var_1167 = relay.var("var_1167", dtype = "int16", shape = ())#candidate|1167|()|var|int16
const_1168 = relay.const([3,9,6,5,4,-9,-10,6,4,1,-10,6,-1,-6,-1,6,1,-1,7,2,8,4,-6,7,6,-9,-3,10,-9,3,-9,3,-4,7,-10,3,-2,6,-9,7,3,6,1,1,2,10,-5,-3,7,10,-1,-7,-2,-1,8,-8,4,-8,-10,4,5,7,-9,6,-2,-5,-9,-6,-5,-4,6,3,-6,6,-8,-9,-6,-2,9,-1,6,6,10,8,10,6,4,6,8,7,4,-10,4,-5,10,6,4,1,3,-9,1,-8,5,-4,-8,3,-9,-2,5,-8,3,-10,3,1,3,6,5,7,-10,5,2,-1,10,-5,-9,9,4,-9,3,10,7,-7,4,4,-7,-3,6,-1,5,3,-9,-6,-2,-10,2,-10,-10,3,3,7,6,-8,-3,-1,4,-4,6,6,4,2,5,-7,9,6,-7,1,-4,6,-7,-8,2,-4,2,8,-3,2,-2,-3,-8,4,-4,9,-1,7,-5,-9,-5,-7,10,-2,6,2,-2,-3,-6,8,-10,-9,-5,1,1,6,4,4,-9,-8,10,-4,-5,-7,-4,4,-3,6,-1,-7,-10,8,-8,-7,-9,-3,5,3,4,2,6,-3,8,8,-8,-2,10,10,2,-7,2,-2,-9,6,7,-3,-5,2,6,5,-5,-4,-6,-2,-4,1,-9,3,-8,-3,-9,5,-1,-7,7,2,-8,-6,3,-5,7,2,-7,-5,-2,-9,3,4,1,2,5,9,-2,-10,-2,-9,10,-4,4,3,8,-8,-6,-6,8,-4,-3,8,7,-8,4,-8,1,-5,-5,-5,-2,3,-7,-4,8,8,2,-7,-6,2,6,-6,3,-4,-2,1,-1,-2,5,5,-6,7,9,-1,-8,-4,-2,-1,-4,5,-3,-1,-3,3,1,-3,1,6,-3,4,9,-8,-10,8,-4,-3,-1,1,9,4,-4,-4,-9,4,9,-3,-7,9,-10,3,-2,-2,3,7,-7,-10,9,5,-6,10,-8,4,-6,3,2,1,-6,-6,-6,9,-5,-6,6,-4,2,-10,9,-6,-6,10,-8,-9,5,1,10,7,-2,-4,6,-1,-2,-9,-2,5,-5,-6,-7,5,-2,-3,8,-10,3,-7,1,-5,8,5,10,-9,-4,-8,-2,1,1,8,4,-2,-1,-3,-8,7,-4,-7,4,-1,-1,-9,4,-6,-4,8,2,4,-8,10,-9,9,1,10,-2,-4,-2,5,-3,-2,-5,6,10,-5,-10,2,1,-3,-9,-10,3,-5,4,-2,-3,5,-5,-7,2,-3,6,10,-7,4,3,9,7,-1,-4,-8,-7,4,4,9,5,6,7,1,-8,-2,-8,-7,2,5,-2,2,-6,5,8,-5,8,-4,-7,1,-9,-6,-1,-3,-2,-1,-1,-8,-9,-6,1,-10,3,3,1,3,6,-9,4,-2,-10,3,-7,-8,-5,5,-6,-4,1,8,3,3,3,-6,4,3,4,7,8,10,-2,1,4,-8,3,8,-9,5,1,-9,3,2,10,1,-5,-3,-7,-6,10,-7,-1,-10,4,-2,-9,3,-5,-9,4,-2,10,7,-2,2,8,6,2,10,1,2,-7,4,-10,6,3,-3,7,-4,-5,-10,4,2,10,-4,6,-3,-1,-4,9,4,-9,-7,-7,5,7,-4,-9,-9,-10,10,-10,-8,9,5,3,-10,-6,-3,9,-4,-3,-9,5,-1,-2,-1,-5,7,-5,4,2,4,-2,-9,-3,7,-1,8,6,-3,2,5,4,-3,-6,7,-10,4,-8,-3,7,-8,-8,-8,-6,5,4,-7,-3,7,7,5,-7,-1,5,-7,-8,3,-1,-2,-2,5,10,6,4,3,7,1,9,10,-8,6,-10,-3,2,8,-6,-3,6,-10,-1,4,-10,-4,6,5,-1,-1,-2,3,-2,1,5,4,1,4,8,-2,10,9,1,2,-5,-4,9,-4,-8,1,-8,5,-3,-3,-6,9,-4,3,-2,-9,10,-5,-1,-4,-3,2,-1,1,5,-3,1,-8,10,-10,6,1,-5,9,-5,-4,-9,10,-5,-4,-6,-3,10,-2,3,-5,3,7,10,3,10,-4,6,-8,6,3,-2,-1,-8,-5,8,9,3,1,-5,-1,-4,3,2,2,7,1,2,2,-8,-10,-6,-8,-9,6,-5,-7,3,-8,-5,-4,4,10,9,7,-10,4,7,4,-2,10,-7,-4,-8,7,3,-6,7,4,-7,-3,-9,2,10,-4,6,10,10,8,-8,-3,-6,-7,-4,-9,5,7,-1,-2,7,-3,-1,-10,7,-2,3,-6,-4,-2,-6,-9,-4,-5,-7,6,-4,-9,-10,-7,-5,1,-4,-4,2,7,8,-8,-4,9,-1,-7,6,3,5,4,-1,-7,-4,5,9,-3,-10,3,-6,-7,-1,-4,-2,-2,9,6,-3,-4,6,-2,-9,-3,-5,-5,1,10,8,-7,-10,-7,7,8,-6,8,10,-6,6,-10,-8,-4,6,-10,-7,-5,10,-6,5,8,6,5,7,-5,-3,-5,-9,-9,-10,-1,8,4,8,-4,5,8,9,7,5,8,-8,-8,-2,4,-7,-9,-1,-2,6,-5,7,2,7,1,-1,1,-4,8,9,9,9,3,-4,2,-1,9,-10,-6,-10,2,-8,1,-5,1,3,2,-10,1,-9,2,-9,8,3,10,-10,5,7,-3,6,-6,6,10,-2,9,-5,-9,-3,-6,2,-2,-8,2,6,8,1,-3,-4,10,6,-5,-10,5,-3,2,9,-8,4,6,7,-1,10,3,7,-9,-5,-3,-1,10,1,9,-9,-1,-9,10,1,-4,5,4,-3,4,7,4,-6,-2,-8,1,10,-10,-8,-2,-4,-9,-4,-1,-8,-6,4,1,-4,-1,5,-2,3,-3,4,10,-2,7,6,6,6,-6,-1,10,-1,-2,2,-3,-7,6,2,9,8,1,-5,5,8,-10,10,6,3,-10,-1,-10,7,-10,-1,-4,-5,3,3,-1,-9,10,3,1,-4,-10,5,-3,-5,3,2,-7,4,6,5,-8,8,-4,-6,6,-9,4,8,6,8,1,9,-6,-5,-10,-10,7,-10,9,-9,7,3,9,7,-5,9,7,-4,-8,-7,-1,9,-5,10,-5,10,4,3,7,3,9,7,-7,-10,10,-5,2,-9,-3,2,-8,1,-6,-7,6,-6,-1,10,-4,5,6,4,-4,-7,-4,6,-1,-3,-1,1,-10,10,-2,9,1,-1,-4,8,-10,4,4,-5,8,6,-8,-7,-6,10,-9,3,3,-8,-10,4,9,-5,9,-2,10,6,-6,8,10,-9,9,9,-7,8,1,-9,-1,7,-6,6,-8,-4,5,-6,10], dtype = "int16")#candidate|1168|(1248,)|const|int16
call_1166 = relay.TupleGetItem(func_32_call(relay.reshape(var_1167.astype('int16'), []), relay.reshape(const_1168.astype('int16'), [16, 13, 6]), ), 0)
call_1169 = relay.TupleGetItem(func_36_call(relay.reshape(var_1167.astype('int16'), []), relay.reshape(const_1168.astype('int16'), [16, 13, 6]), ), 0)
uop_1170 = relay.atan(uop_1164.astype('float32')) # shape=(13, 5, 15)
output = relay.Tuple([call_1166,var_1167,const_1168,uop_1170,])
output2 = relay.Tuple([call_1169,var_1167,const_1168,uop_1170,])
func_1189 = relay.Function([var_1167,], output)
mod['func_1189'] = func_1189
mod = relay.transform.InferType()(mod)
mutated_mod['func_1189'] = func_1189
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1190 = relay.var("var_1190", dtype = "int16", shape = ())#candidate|1190|()|var|int16
func_1189_call = mutated_mod.get_global_var('func_1189')
call_1191 = func_1189_call(var_1190)
output = call_1191
func_1192 = relay.Function([var_1190], output)
mutated_mod['func_1192'] = func_1192
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1257 = relay.var("var_1257", dtype = "int32", shape = (8, 11, 11))#candidate|1257|(8, 11, 11)|var|int32
const_1258 = relay.const([[[2,-10,-7,6,2,1,3,2,-6,-9,2],[9,-7,2,4,-10,3,5,-4,-5,-10,-4],[10,4,-5,-10,-1,2,3,-6,3,3,7],[-3,-1,-7,-7,-4,7,2,1,10,10,-1],[-7,1,-2,-3,4,-2,-6,-8,2,-9,-9],[4,2,3,-7,8,1,3,4,4,3,5],[-9,-6,4,-1,-8,-5,8,-4,-10,8,-2],[7,-6,-5,9,10,-2,8,-2,9,3,-10],[-1,5,-7,-5,1,-4,-2,-7,9,-10,6],[9,8,-9,3,3,6,-5,2,-3,-1,1],[-7,6,-8,9,8,-3,7,1,-3,-1,-4]],[[-3,8,9,-4,3,-1,-7,7,4,-5,4],[-2,9,-9,4,1,-10,-3,6,-1,9,10],[-4,4,-4,6,-1,5,4,2,-9,-7,-2],[10,-10,-9,-7,-6,7,9,-1,3,3,-3],[4,-5,10,2,4,2,-6,-4,-9,4,-2],[-9,-7,-6,10,7,5,-7,-6,9,-2,4],[9,1,-8,-5,-7,3,7,-2,7,1,3],[-10,-6,7,-7,5,8,-5,-2,-7,5,1],[-7,8,-4,7,6,4,-6,9,-3,3,-2],[-10,-9,1,6,7,-9,-9,-4,2,-6,4],[-9,-7,-9,6,9,6,-4,3,1,5,-6]],[[4,-1,-2,3,10,8,6,10,-9,-9,-8],[-1,5,2,1,2,-8,2,-3,5,-6,-3],[-2,-4,1,-3,-8,-9,-6,3,-8,5,-10],[-7,1,-6,-7,-1,9,8,-1,-8,-5,2],[-9,1,9,-7,-2,-2,8,-1,-5,4,8],[-6,6,7,-1,3,5,-1,-9,-5,-1,-5],[5,4,8,5,-3,-4,5,10,-2,9,-6],[-4,-7,7,8,-8,8,4,-1,2,2,-3],[-7,4,-6,9,-1,9,5,-7,10,5,-9],[-5,-8,6,-3,6,2,1,2,9,6,1],[-8,4,6,-5,8,5,7,5,-10,1,-2]],[[-9,-6,-8,-10,4,1,-3,5,2,-10,-9],[-8,-8,-9,2,3,8,2,2,8,10,-1],[-6,3,-10,-5,-1,-5,-3,7,-6,7,-10],[1,-2,5,6,-7,4,10,-4,-5,8,-3],[4,6,-2,5,5,3,5,-3,6,5,1],[-4,-10,1,8,-9,-6,4,2,-10,-5,6],[3,-3,1,-8,3,9,-2,-9,8,3,-7],[-4,8,7,8,-5,5,7,6,-8,7,2],[2,10,-1,4,1,8,3,-3,1,10,-6],[1,2,2,-9,-1,-6,-10,5,7,-3,5],[2,-5,-6,8,1,5,-1,5,1,-2,8]],[[-6,-8,-8,9,5,1,-6,-6,-10,-6,-10],[-4,-10,2,4,5,-2,-4,-4,-4,-6,-10],[2,7,-2,-9,-1,-1,9,-2,-5,2,10],[8,1,-4,4,9,9,-8,-10,-7,-1,1],[-2,-3,-10,4,3,5,-1,2,2,-1,-7],[5,-7,8,1,-10,-4,9,9,5,3,-7],[8,10,-1,4,4,-5,2,-1,-7,-5,3],[5,5,-8,-10,5,-4,-10,7,-3,5,-4],[-5,9,5,1,8,-1,-5,-3,4,5,-4],[5,10,2,7,-2,10,-4,-5,-2,2,6],[-4,4,-7,-10,-5,2,-2,-1,-2,-1,4]],[[7,10,-2,7,-10,7,1,-5,4,-3,-5],[3,-3,-1,-7,-10,6,-4,-4,6,-1,2],[-4,-2,-6,5,1,-9,2,9,-7,-2,2],[-3,8,-4,10,-3,-10,-5,2,-8,-9,-9],[9,10,10,-2,1,-1,-3,-10,-1,-9,7],[-9,-7,6,-6,-7,-3,-4,1,5,9,1],[-3,9,3,6,4,-3,-2,7,1,4,2],[-9,4,-7,2,-7,10,-10,3,-4,-1,8],[-3,-3,10,2,-7,-5,7,-4,-1,-5,-8],[-3,-10,10,4,-5,4,5,7,-3,10,-5],[-1,7,3,-4,-8,-2,6,10,-1,-8,4]],[[8,-1,-8,-1,8,-4,-8,9,-6,9,-7],[-1,2,5,8,3,3,-8,-7,-3,-3,-1],[2,10,-9,9,3,-3,3,-7,7,6,6],[-10,3,7,10,8,8,-1,9,10,-1,9],[3,4,5,-4,4,-3,7,6,8,1,-1],[10,4,2,-5,9,6,-1,-5,-2,-9,7],[-5,-5,-6,8,9,-7,-7,10,1,-3,-3],[10,9,7,6,-4,-7,-5,-5,10,10,9],[-10,1,-8,-10,9,9,1,6,1,10,8],[3,-8,-7,4,-6,-7,-6,3,6,-6,-10],[4,-4,-7,-5,2,8,4,-8,3,1,-3]],[[5,-4,8,9,-9,-5,7,7,-4,-1,9],[-8,-4,-3,3,3,-9,-10,-9,4,-1,10],[8,-10,-8,-5,-8,6,-5,8,-4,-7,-10],[-10,7,8,1,-6,7,1,8,-4,10,8],[-10,5,-7,-7,-1,-7,-10,-6,3,10,-9],[7,9,-2,3,6,6,7,4,-2,10,-5],[6,-1,-5,-1,4,-10,9,-3,3,6,-3],[-5,-9,-1,-10,-9,-10,-7,3,-9,-8,-1],[-10,1,-8,-5,2,-5,8,-9,-4,5,1],[9,4,3,7,-10,2,2,-10,8,-6,-2],[3,-5,4,-1,3,-10,-9,8,-9,-3,-8]]], dtype = "int32")#candidate|1258|(8, 11, 11)|const|int32
bop_1259 = relay.logical_xor(var_1257.astype('int32'), relay.reshape(const_1258.astype('int32'), relay.shape_of(var_1257))) # shape=(8, 11, 11)
output = relay.Tuple([bop_1259,])
output2 = relay.Tuple([bop_1259,])
func_1271 = relay.Function([var_1257,], output)
mod['func_1271'] = func_1271
mod = relay.transform.InferType()(mod)
mutated_mod['func_1271'] = func_1271
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1272 = relay.var("var_1272", dtype = "int32", shape = (8, 11, 11))#candidate|1272|(8, 11, 11)|var|int32
func_1271_call = mutated_mod.get_global_var('func_1271')
call_1273 = func_1271_call(var_1272)
output = call_1273
func_1274 = relay.Function([var_1272], output)
mutated_mod['func_1274'] = func_1274
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1363 = relay.var("var_1363", dtype = "int64", shape = (9, 14, 6))#candidate|1363|(9, 14, 6)|var|int64
var_1364 = relay.var("var_1364", dtype = "int64", shape = (9, 14, 6))#candidate|1364|(9, 14, 6)|var|int64
bop_1365 = relay.greater(var_1363.astype('bool'), relay.reshape(var_1364.astype('bool'), relay.shape_of(var_1363))) # shape=(9, 14, 6)
bop_1370 = relay.bitwise_xor(var_1364.astype('uint8'), relay.reshape(var_1363.astype('uint8'), relay.shape_of(var_1364))) # shape=(9, 14, 6)
output = relay.Tuple([bop_1365,bop_1370,])
output2 = relay.Tuple([bop_1365,bop_1370,])
func_1374 = relay.Function([var_1363,var_1364,], output)
mod['func_1374'] = func_1374
mod = relay.transform.InferType()(mod)
mutated_mod['func_1374'] = func_1374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1374_call = mutated_mod.get_global_var('func_1374')
var_1376 = relay.var("var_1376", dtype = "int64", shape = (9, 14, 6))#candidate|1376|(9, 14, 6)|var|int64
var_1377 = relay.var("var_1377", dtype = "int64", shape = (9, 14, 6))#candidate|1377|(9, 14, 6)|var|int64
call_1375 = func_1374_call(var_1376,var_1377,)
output = call_1375
func_1378 = relay.Function([var_1376,var_1377,], output)
mutated_mod['func_1378'] = func_1378
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1696 = relay.var("var_1696", dtype = "uint32", shape = (11, 9, 10))#candidate|1696|(11, 9, 10)|var|uint32
const_1697 = relay.const([[[8,-7,-2,-6,8,-9,-3,3,-8,-9],[3,10,5,-1,-2,4,4,6,10,8],[4,-8,-4,2,-5,9,-2,7,-3,-6],[3,9,-3,-1,7,-2,-7,-7,-5,-3],[1,-6,10,-10,4,-2,-8,-2,3,6],[5,10,-8,2,-9,4,8,-5,-5,-5],[-1,-4,7,-9,-1,2,-3,-7,3,-6],[8,-2,-10,-9,2,-2,3,3,1,-2],[-9,8,9,6,-7,-4,-2,5,3,-7]],[[-8,-9,6,-2,-6,-9,9,8,5,9],[6,-8,2,-2,-7,-2,-9,-7,5,-2],[-4,-5,-2,-2,-6,-10,-6,1,-4,-3],[-2,-8,-7,6,4,2,-2,-2,3,9],[7,-4,-8,1,7,-2,8,-2,5,-7],[-7,-9,-10,-3,-7,2,2,6,-10,3],[-10,10,7,3,1,2,-10,9,2,-3],[-4,2,3,-7,7,-2,-7,5,4,7],[-9,-3,8,9,4,10,8,-4,-1,4]],[[1,5,10,-3,9,10,-6,6,-7,-5],[-8,-8,6,9,-3,5,3,-3,3,7],[-7,-9,2,-1,2,-9,-1,-1,9,6],[5,7,3,-10,9,8,2,10,-5,-2],[-7,9,10,-4,-10,-2,-4,-4,2,-3],[9,6,1,7,5,2,2,9,-3,-2],[5,-9,-4,6,-5,4,2,-7,-6,-6],[-2,4,-4,-8,9,-10,-4,3,-2,-4],[10,2,10,3,-2,8,1,-9,-6,-10]],[[7,-9,-8,8,3,-8,-10,5,8,5],[-8,5,4,4,1,2,5,8,4,-5],[6,2,-4,5,4,1,2,3,1,5],[-1,-1,-8,2,-3,-1,-10,6,-9,-5],[2,6,3,-9,7,6,10,-6,6,-10],[-7,-9,-5,1,7,-8,-4,-2,-6,-1],[6,-2,-5,-5,-6,-10,-8,-10,-4,-9],[-8,2,5,-9,7,-3,5,1,2,3],[-3,-3,-1,-5,3,-8,5,5,3,1]],[[1,-5,7,-8,-2,-1,3,-5,6,-3],[-8,-1,10,2,-7,-5,5,7,-8,5],[8,-4,-9,-9,-2,3,3,2,-2,-9],[5,9,6,4,-3,-5,-4,-3,-9,-5],[3,1,-3,-1,5,-6,-6,2,1,7],[4,4,-10,-8,-9,1,4,10,-5,4],[3,-2,-5,10,-8,-9,-10,10,-1,-10],[-5,4,5,9,-5,1,3,6,8,1],[4,10,-4,-5,-9,3,7,3,1,1]],[[-5,5,-6,3,8,1,5,-9,2,-1],[-8,6,2,-7,-1,1,1,-3,9,-10],[-9,3,2,2,4,6,-8,9,-2,-4],[-5,1,3,4,10,-10,-6,-5,-3,-2],[-10,10,1,-7,6,-9,6,-10,4,2],[-7,-6,-7,1,10,8,-6,-6,-10,1],[4,-10,10,1,3,1,-8,-2,2,7],[-1,-1,-5,-5,10,2,5,-6,9,2],[-3,-1,4,7,1,7,9,10,-3,-9]],[[-10,-10,-3,4,6,-6,-1,-1,2,-10],[-2,-6,2,-4,-10,1,4,-7,-8,10],[8,-2,-3,-5,-2,10,1,6,-4,2],[5,-6,-5,-7,5,-8,1,2,-4,9],[-2,-10,6,8,-6,4,6,-2,4,-5],[-7,9,-2,4,-8,1,-3,-4,-7,-7],[-5,-6,-2,1,6,-2,-8,10,2,7],[6,-9,-9,8,-5,2,-7,-10,-5,-4],[6,5,-6,5,1,-9,10,-8,1,6]],[[10,-6,6,-7,-5,-3,6,7,5,2],[-4,4,7,2,7,-3,-7,7,3,4],[2,2,-5,10,1,-7,10,-6,3,-6],[7,9,-6,-7,8,-10,-9,8,9,8],[-9,4,4,8,-7,8,-2,8,-5,9],[-8,-6,9,-3,-2,-10,-5,10,-4,7],[-3,-5,-5,-4,-10,4,2,-7,1,-3],[2,-6,6,6,-6,-3,-1,-3,3,-7],[-2,3,8,-7,9,-6,3,-7,7,1]],[[8,2,2,8,-5,-10,-3,-3,4,-1],[-9,-3,-8,3,6,9,-8,7,-8,-7],[7,2,-2,-10,4,-9,-10,-9,-5,-4],[-6,8,3,6,-8,6,10,-5,2,7],[9,-3,10,-7,-4,-7,3,-6,9,-10],[3,-2,4,3,5,6,-8,4,2,-5],[2,7,-7,10,3,5,-5,-8,6,-7],[-3,-4,-5,-1,10,3,9,-5,-3,4],[-6,3,-10,2,-4,7,-3,10,-9,-5]],[[8,1,10,-4,3,-10,-9,-10,-7,4],[-1,-1,-4,-4,-4,4,-9,-1,-10,-1],[-5,2,7,2,4,5,9,-4,7,-5],[-1,4,5,8,-10,-8,1,8,4,3],[-6,-7,-4,-7,3,1,5,3,-1,-5],[9,4,5,-9,2,1,10,-4,-1,3],[-6,-7,2,-1,8,-3,-9,-8,-1,-5],[10,-2,6,-3,10,10,-2,9,4,6],[5,-10,8,-1,6,3,-4,4,-2,6]],[[7,-10,-10,5,-8,-9,-2,-7,6,9],[-4,7,7,7,-2,-3,-6,8,-1,-3],[3,4,-10,6,-7,-9,9,-8,-1,8],[-7,-2,4,-10,-2,8,4,3,-10,-1],[7,-9,-7,-3,-3,2,1,-2,6,4],[4,5,1,-3,8,10,-3,-10,-6,-9],[-5,9,-6,5,-3,-10,-10,-7,5,-3],[-4,-6,2,5,10,-8,-6,-3,8,-6],[6,9,3,8,-8,8,-4,8,10,-7]]], dtype = "uint32")#candidate|1697|(11, 9, 10)|const|uint32
bop_1698 = relay.maximum(var_1696.astype('uint32'), relay.reshape(const_1697.astype('uint32'), relay.shape_of(var_1696))) # shape=(11, 9, 10)
output = relay.Tuple([bop_1698,])
output2 = relay.Tuple([bop_1698,])
func_1706 = relay.Function([var_1696,], output)
mod['func_1706'] = func_1706
mod = relay.transform.InferType()(mod)
mutated_mod['func_1706'] = func_1706
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1707 = relay.var("var_1707", dtype = "uint32", shape = (11, 9, 10))#candidate|1707|(11, 9, 10)|var|uint32
func_1706_call = mutated_mod.get_global_var('func_1706')
call_1708 = func_1706_call(var_1707)
output = call_1708
func_1709 = relay.Function([var_1707], output)
mutated_mod['func_1709'] = func_1709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2166 = relay.var("var_2166", dtype = "int16", shape = (10, 5, 11))#candidate|2166|(10, 5, 11)|var|int16
var_2167 = relay.var("var_2167", dtype = "int16", shape = (10, 5, 11))#candidate|2167|(10, 5, 11)|var|int16
bop_2168 = relay.left_shift(var_2166.astype('int16'), relay.reshape(var_2167.astype('int16'), relay.shape_of(var_2166))) # shape=(10, 5, 11)
func_1706_call = mod.get_global_var('func_1706')
func_1709_call = mutated_mod.get_global_var('func_1709')
const_2172 = relay.const([5,-10,-9,-2,-9,-6,-8,6,3,9,6,-5,2,-4,-9,3,-10,10,2,-2,2,-7,-9,8,-4,-5,4,3,-4,-6,-1,8,2,3,-1,4,-5,6,5,-9,-10,3,4,9,-10,2,5,-7,9,-2,4,-8,8,-6,9,-2,-10,2,-1,-4,7,4,-8,-9,-10,-9,-9,-5,2,-8,7,-9,-6,-10,1,10,2,10,-7,-6,1,3,-4,-5,-10,-9,-6,5,-7,-1,-1,-6,6,-2,4,2,-5,3,3,-8,-2,1,3,-10,-1,1,-1,-4,3,-10,5,-2,6,10,5,4,2,7,-1,8,-7,5,-5,7,-6,7,-10,2,6,5,7,-1,5,8,7,8,-6,4,-4,1,9,-1,-7,-4,4,-6,-1,2,5,1,-8,7,-4,5,-3,9,-2,-10,-3,2,6,-10,5,2,-4,3,2,3,-1,5,3,-6,4,6,2,7,-3,4,9,-9,9,-2,-10,-8,-5,4,6,-5,-6,10,-8,-6,1,1,8,-2,2,7,-3,2,7,-6,-8,3,-3,-3,-9,-1,1,-2,-2,5,10,-3,-6,-1,-4,3,-1,5,-9,-2,-9,1,-5,-8,-9,8,-4,4,-9,-10,3,5,4,-7,-8,3,2,-7,7,1,-8,-5,9,10,-4,10,-8,3,-5,-4,9,-10,1,5,3,-2,-4,-3,6,-10,-4,10,-5,3,-3,-3,-4,1,-2,-1,-4,-8,-2,1,2,8,4,-9,1,9,9,-6,6,-6,6,5,-2,6,2,2,1,-4,-10,-3,5,4,-5,8,-8,2,-4,3,8,2,9,5,-5,-4,-2,-3,3,4,8,1,-6,1,8,6,3,5,1,1,-1,-1,4,-3,-3,-6,6,-8,-8,2,3,1,7,10,-10,-6,-6,3,10,10,2,6,-1,10,-5,5,-2,6,4,9,-6,4,-3,5,-4,9,-9,2,1,-1,-6,-8,5,-10,-1,5,-6,-1,-8,2,-9,6,8,-10,-1,7,9,6,9,-5,6,8,-10,1,-5,-10,6,4,5,2,5,3,-5,10,-6,-6,6,4,-5,6,10,4,-3,9,-2,-3,-10,-1,-5,1,-7,-4,3,10,3,-7,3,8,-2,5,-9,1,5,6,-4,-3,-6,-5,-5,4,-3,2,4,4,-6,-8,-7,4,-2,4,-9,-6,-6,-1,-5,10,8,6,1,-8,8,1,6,9,-8,-5,-2,10,-3,10,8,8,9,9,-5,-8,-4,10,6,9,2,3,-6,-3,-5,-9,-10,-10,10,-10,8,-7,9,-2,7,-1,7,5,6,-4,-1,-6,9,-2,5,3,-4,-6,10,-7,1,-9,1,-4,4,-10,1,5,-1,-9,3,-10,6,9,5,-4,6,-5,-9,-6,8,-7,-3,9,3,10,1,4,-7,-3,9,-9,3,1,-4,7,4,-3,8,1,-9,7,5,9,-4,-4,-4,-7,-6,10,-7,4,-1,-8,-8,-10,4,-8,9,-8,-2,6,-5,2,1,-3,-1,10,5,-10,-1,-1,6,-1,-9,-7,-3,-6,6,-10,-1,5,-2,-3,7,10,-2,2,-10,-4,-3,-9,-6,5,-6,10,9,-9,-2,-8,6,8,6,-9,-2,5,-5,-4,-1,4,-3,5,10,3,-10,3,-6,5,3,-10,6,2,2,-2,-4,-2,-1,-9,5,-4,-2,1,2,-1,10,9,9,-7,7,7,8,-8,-8,-1,-8,8,-4,5,-4,10,-10,-8,-10,3,6,9,-9,2,-4,10,8,10,-6,-9,-3,-2,7,5,7,-7,6,-5,-2,2,-2,8,10,-3,4,7,-10,-2,9,6,-3,-8,-8,-6,4,8,10,-5,5,9,7,-7,-4,-5,8,10,-2,-2,5,-3,-6,2,-9,8,-2,-1,2,-9,-1,-9,4,2,-10,-6,-4,2,2,-8,1,-2,5,-6,-5,3,-7,-5,-2,9,-5,4,4,9,-2,-6,5,7,-3,-6,8,-4,-2,8,-8,-7,-1,-10,9,-2,8,-3,4,-2,-3,-5,8,3,-8,5,5,-9,-4,-1,2,-3,1,-3,6,-4,-4,7,8,-1,3,4,-7,-4,4,4,-1,6,3,-9,-5,-5,1,10,-3,10,4,-4,9,-1,-7,10,-2,-2,-8,-1,3,3,-9,7,-1,-8,1,7,9,-2,3,-4,8,9,6,-10,-9,3,3,9,-7,2,-8,7,-7,2,2,-8,-2,8,-8,-5,1,-4,-9,10,-2,3,1,7,-10,-1,-7,-3,-5,-6,-1,-9,-10,7,-10,5,-9,-1,-8,-10,9,1,10,2,-6,8,9,10,-2,1,3,-5,-4,-7,-7,1,10,-10,5,-6,2,8,3,3,4,9,-1,4,-1,10,-7,3,-2,-8,7,-9,9,-10,-7,2,-8,1,-5,3,-5,3,-3,-7,-9,5,10,5,-3,-4,8,4,-8,3,1,9,-10,-7,-1,9,1,8,-8,-1,-7,-1,-2,1,9,3,-2,5,-7,7,7,1,-2,9,1,-2,6,3,10,10,-8,1,-7,3,9,3,-10,3,-3,-3,-4,-1,10,-10,8,10,-5,7,7,6,-2,1,-5,-5,9,-3,2,-3,7,-3,-5,2,-3,-2,1,-6,10,6,-4,-4], dtype = "uint32")#candidate|2172|(990,)|const|uint32
call_2171 = relay.TupleGetItem(func_1706_call(relay.reshape(const_2172.astype('uint32'), [11, 9, 10])), 0)
call_2173 = relay.TupleGetItem(func_1709_call(relay.reshape(const_2172.astype('uint32'), [11, 9, 10])), 0)
var_2174 = relay.var("var_2174", dtype = "int16", shape = (10, 5, 11))#candidate|2174|(10, 5, 11)|var|int16
bop_2175 = relay.divide(var_2166.astype('float32'), relay.reshape(var_2174.astype('float32'), relay.shape_of(var_2166))) # shape=(10, 5, 11)
output = relay.Tuple([bop_2168,call_2171,const_2172,bop_2175,])
output2 = relay.Tuple([bop_2168,call_2173,const_2172,bop_2175,])
func_2211 = relay.Function([var_2166,var_2167,var_2174,], output)
mod['func_2211'] = func_2211
mod = relay.transform.InferType()(mod)
mutated_mod['func_2211'] = func_2211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2211_call = mutated_mod.get_global_var('func_2211')
var_2213 = relay.var("var_2213", dtype = "int16", shape = (10, 5, 11))#candidate|2213|(10, 5, 11)|var|int16
var_2214 = relay.var("var_2214", dtype = "int16", shape = (10, 5, 11))#candidate|2214|(10, 5, 11)|var|int16
var_2215 = relay.var("var_2215", dtype = "int16", shape = (10, 5, 11))#candidate|2215|(10, 5, 11)|var|int16
call_2212 = func_2211_call(var_2213,var_2214,var_2215,)
output = call_2212
func_2216 = relay.Function([var_2213,var_2214,var_2215,], output)
mutated_mod['func_2216'] = func_2216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2998 = relay.var("var_2998", dtype = "float32", shape = (3, 5, 3))#candidate|2998|(3, 5, 3)|var|float32
uop_2999 = relay.sin(var_2998.astype('float32')) # shape=(3, 5, 3)
bop_3009 = relay.floor_divide(uop_2999.astype('float64'), relay.reshape(var_2998.astype('float64'), relay.shape_of(uop_2999))) # shape=(3, 5, 3)
bop_3013 = relay.less_equal(bop_3009.astype('bool'), relay.reshape(var_2998.astype('bool'), relay.shape_of(bop_3009))) # shape=(3, 5, 3)
output = relay.Tuple([bop_3013,])
output2 = relay.Tuple([bop_3013,])
func_3018 = relay.Function([var_2998,], output)
mod['func_3018'] = func_3018
mod = relay.transform.InferType()(mod)
var_3019 = relay.var("var_3019", dtype = "float32", shape = (3, 5, 3))#candidate|3019|(3, 5, 3)|var|float32
output = func_3018(var_3019)
func_3020 = relay.Function([var_3019], output)
mutated_mod['func_3020'] = func_3020
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3226 = relay.const([[[-5.079629,5.518407,7.775948,-0.315348,8.140339,6.200404,7.255030,-2.039242,-1.853210,-3.797195],[6.418987,9.954237,2.711691,2.279015,-2.818136,3.709847,-9.564261,-9.368832,-3.443270,-1.898323],[-2.372514,-5.623681,3.079678,6.582493,5.310401,4.426033,-4.773608,0.397333,7.394888,2.188976]],[[9.706012,3.054399,2.897418,2.580289,-7.319774,-7.596360,2.410220,-9.807238,0.936283,-9.642728],[0.358514,-2.674250,-9.368924,3.470648,-1.110280,2.485003,5.806027,6.162176,-0.481812,-2.022814],[-2.068350,5.629281,-6.229267,-4.565827,9.902478,-9.602592,4.313954,-9.228489,-9.803744,1.332217]],[[-9.538439,-3.381117,5.994916,7.346098,-5.937800,-0.418544,-1.939906,-3.281098,7.526724,-5.081388],[6.626493,2.530558,8.094953,6.652195,7.059353,-3.489204,0.490428,-0.930832,-0.689972,7.543060],[2.621034,-8.799883,8.805985,-7.642834,0.444117,-6.116090,-1.142642,7.151945,9.707321,7.520788]],[[-0.223133,0.415002,8.931379,-6.088672,2.079329,-1.527656,-4.248753,-9.111484,-5.469208,-3.592121],[3.077846,-1.580304,6.038005,-7.166733,-2.535185,5.553409,1.620489,6.756596,-9.205228,4.010439],[7.972134,0.735253,-6.377900,1.776979,-7.735344,-6.508896,-8.240710,0.639377,4.397874,8.775892]],[[-8.739505,-3.212167,0.045541,-0.864757,9.668670,3.761853,6.049575,-1.808531,-1.157490,-1.284037],[-0.445231,-9.222767,-2.802221,-2.853758,7.414224,5.314116,-9.173443,-4.002162,7.321500,-1.845221],[-4.500092,7.771568,-9.523360,1.702542,-9.411268,6.090044,-2.083199,5.798317,-8.018949,-0.050553]],[[2.032727,4.333158,2.118071,5.793832,-4.038940,-6.958604,2.301110,-9.742576,7.719857,-2.085518],[-3.012604,-3.835127,-3.251579,4.952339,3.520415,-5.970113,8.137080,4.426848,0.787890,-5.927402],[-1.502650,-4.558052,-3.592168,7.003749,-1.321869,8.551276,9.408944,-9.519942,-9.542733,-0.407817]],[[0.291422,-9.969748,-4.935178,-3.172657,5.533592,5.778246,1.909968,0.300088,1.175158,7.881722],[6.284736,-0.769416,9.872861,-0.780637,-6.881625,5.774038,9.959544,-5.751095,5.078114,-1.228910],[4.876369,-8.907149,7.813728,4.396665,-7.183550,7.771126,8.553969,3.063907,-9.607359,-9.661911]],[[-7.054570,-8.464664,-0.645102,-9.710063,0.438515,-6.426058,-9.366771,7.676201,-1.834554,-2.643554],[-3.556906,-0.407440,6.636757,-0.164886,1.239134,-9.542680,-5.567508,-6.150711,-6.119963,3.205598],[0.487699,-1.425382,-0.146093,6.785500,-2.461718,-8.176297,1.676659,3.126621,-8.249545,-9.318137]],[[-5.487200,9.036179,-7.075991,6.689833,-3.257789,-3.735600,-7.371571,-8.859721,6.328568,-7.054353],[9.593946,-7.763033,9.767522,-0.783409,8.705293,-4.568735,9.681197,-6.491199,0.597669,-1.569128],[-7.570094,8.824879,-7.855999,-9.112030,0.242216,3.030525,0.732349,-6.568847,9.519554,-2.137195]],[[6.355017,7.707447,-8.943595,-4.009040,0.794773,-6.420985,-1.074042,4.613470,0.331387,-9.468450],[-1.928263,3.909450,5.363695,-5.314283,-2.907304,2.255883,8.133633,6.801215,-6.720813,5.954504],[-6.546975,-7.782117,1.931793,1.560773,0.092380,-9.389106,-4.967509,0.587430,4.079522,-0.734196]],[[-8.637414,2.762712,-4.761386,3.585696,9.646636,8.816153,-7.746929,-1.479090,1.429509,-2.955528],[8.462585,-4.765499,7.957081,3.946223,7.693125,-1.278161,1.151815,-6.276460,-1.696377,-8.806070],[-3.598862,-9.418633,1.662293,8.238188,-4.687768,5.903910,-7.521852,6.305012,4.248989,-0.064377]],[[5.052179,-1.405316,-9.960310,-5.179701,1.569129,-2.090285,-9.163296,-3.179722,4.641475,-0.271757],[-3.964195,9.616461,8.165220,-9.061998,6.634939,-6.474386,2.886230,2.819868,4.030595,8.609892],[9.855802,-6.740040,-6.718902,4.359670,-3.497721,0.703426,-1.019686,3.190426,-0.257478,-9.302505]],[[-3.227870,-6.652005,-0.511359,-5.270987,5.423842,-9.135760,4.415877,7.107197,1.987022,-4.961754],[-7.008882,-9.277938,-3.071507,9.108247,1.093118,1.828769,-9.397248,-1.767006,4.067273,-6.350308],[-6.628914,9.732127,8.363467,3.114439,-7.617344,4.215838,5.290904,8.264246,9.875387,-3.792762]],[[-2.911048,7.006019,9.410829,4.948079,-3.516110,-3.430392,-0.114070,-6.978805,-6.178369,7.778354],[1.031324,3.161374,-9.684084,1.969700,6.713616,1.508388,0.412594,-1.733765,-5.673309,6.077532],[1.354275,5.477398,-3.730039,-2.412951,3.272320,7.044575,-1.426454,0.281359,0.632475,-5.114290]],[[8.137398,-0.476330,-7.703045,4.129814,6.267043,9.482902,-3.083409,-7.440704,6.014285,6.766859],[-6.578841,3.867840,-1.864566,-2.716510,7.126355,-4.959503,-6.640469,9.263530,-6.596287,3.232820],[-6.694975,-1.810049,7.188357,3.560924,3.843383,1.274613,8.101732,-0.416614,8.484755,4.017303]],[[-7.637075,0.172546,-7.841652,5.476628,-6.856603,-5.940869,-6.586492,7.602581,-4.841057,-5.128327],[-0.588162,7.830285,-7.242804,4.091386,-1.001539,0.001140,-5.021185,6.950327,2.381508,3.919118],[5.009458,-6.024263,8.523240,6.931756,-7.905683,3.752293,3.726454,-8.894954,6.824068,-6.657870]]], dtype = "float64")#candidate|3226|(16, 3, 10)|const|float64
uop_3227 = relay.log2(const_3226.astype('float64')) # shape=(16, 3, 10)
func_1271_call = mod.get_global_var('func_1271')
func_1274_call = mutated_mod.get_global_var('func_1274')
var_3234 = relay.var("var_3234", dtype = "int32", shape = (968,))#candidate|3234|(968,)|var|int32
call_3233 = relay.TupleGetItem(func_1271_call(relay.reshape(var_3234.astype('int32'), [8, 11, 11])), 0)
call_3235 = relay.TupleGetItem(func_1274_call(relay.reshape(var_3234.astype('int32'), [8, 11, 11])), 0)
uop_3241 = relay.cosh(var_3234.astype('float32')) # shape=(968,)
output = relay.Tuple([uop_3227,call_3233,uop_3241,])
output2 = relay.Tuple([uop_3227,call_3235,uop_3241,])
func_3245 = relay.Function([var_3234,], output)
mod['func_3245'] = func_3245
mod = relay.transform.InferType()(mod)
mutated_mod['func_3245'] = func_3245
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3246 = relay.var("var_3246", dtype = "int32", shape = (968,))#candidate|3246|(968,)|var|int32
func_3245_call = mutated_mod.get_global_var('func_3245')
call_3247 = func_3245_call(var_3246)
output = call_3247
func_3248 = relay.Function([var_3246], output)
mutated_mod['func_3248'] = func_3248
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3371 = relay.const([[[9,6,10,4,-2,-8,10,-7,3,-1,-7,1,-8,-8,-10,-2],[-10,8,-4,4,5,-3,3,5,9,-7,9,-10,-2,-9,9,-1],[2,1,-2,-2,-6,3,-4,5,6,-10,9,2,-8,-4,-4,8],[-4,2,1,-4,8,6,8,7,-3,-9,-9,-6,3,8,6,-5],[-4,-6,-10,3,10,2,-1,1,8,-10,2,7,-5,5,10,2],[7,-10,2,7,-3,9,-9,-1,2,-5,-7,-2,-7,6,8,-1],[7,4,-5,9,-9,3,1,-5,5,-9,-2,5,-9,9,8,-2]],[[1,2,6,-5,4,-3,4,-9,-7,9,9,-1,4,6,9,-7],[-4,10,4,5,5,-2,5,8,-10,-3,3,-9,-3,-9,5,-5],[-8,-10,-10,10,-4,-4,2,3,1,2,10,-8,-6,-7,6,-9],[7,-5,-4,-2,-7,-7,10,-2,-6,2,-4,10,1,1,9,2],[-9,3,-3,-2,-3,9,9,-4,-6,2,1,9,9,-9,-10,-4],[-7,-4,2,-9,7,8,-1,-2,9,6,5,-1,-7,-3,-1,-10],[4,9,10,-8,-7,-4,9,7,1,7,1,10,-8,9,-10,8]],[[-10,9,-4,-8,5,1,-1,1,2,-10,10,2,-3,-7,-9,8],[-3,-1,3,-10,-5,-2,1,-10,3,-7,10,-1,2,7,-7,1],[1,7,-3,-2,-9,-5,-8,-3,-5,-6,-2,7,6,-5,10,-3],[8,-6,-8,-9,5,-5,-1,5,-1,-8,-7,6,2,8,-7,-4],[10,10,-2,-3,5,9,-10,-9,-7,-3,5,-10,1,8,9,-7],[-5,5,5,4,7,5,10,-8,2,-1,-1,3,-1,1,4,6],[-4,9,-10,9,-6,7,-10,-3,6,-9,-9,10,3,7,-1,9]],[[6,7,10,-3,2,-2,-7,-5,3,2,6,9,5,-7,8,6],[-5,-10,-8,-3,5,3,4,-4,3,6,-10,-7,2,-5,-3,6],[3,6,1,4,-7,-7,-6,-8,9,-8,-1,-3,-2,-5,7,-4],[-7,2,10,-3,4,7,-1,10,-7,8,-5,2,9,-2,-9,9],[-7,-4,-8,3,5,3,-3,7,-1,-9,-5,-2,8,-3,10,-3],[-4,3,3,3,4,-5,8,6,-8,6,7,10,-1,2,-6,8],[3,-1,7,-4,1,-9,-5,10,1,-7,-1,-4,1,-6,3,4]]], dtype = "uint64")#candidate|3371|(4, 7, 16)|const|uint64
const_3372 = relay.const([[[-6,-6,8,-10,6,4,-1,2,4,8,6,-3,-8,-6,3,-1],[-6,9,-4,6,-1,4,7,5,-7,-5,-6,5,7,-7,5,-9],[-6,9,-9,4,5,-9,-3,6,-9,4,-1,-9,2,-9,7,-10],[-8,5,-3,-5,-6,-3,-1,2,1,-5,-6,-1,2,7,-9,2],[-7,-7,7,-1,8,-3,-2,-1,10,-3,2,-5,3,-4,1,2],[-5,8,-2,-5,10,1,3,-5,8,1,2,-6,10,-9,-8,-8],[-1,6,-7,6,-1,1,1,-8,4,10,-5,-10,8,7,2,10]],[[-4,-9,-7,8,3,1,5,-6,-9,4,-5,-1,4,1,-3,-9],[7,-6,4,4,7,-3,9,1,8,-3,2,5,2,-3,-9,10],[10,-2,-3,-4,-6,-1,6,2,-9,-6,9,-8,9,3,-4,4],[10,10,6,2,-1,-6,6,3,-5,10,-10,2,-10,5,-8,9],[7,-9,-5,7,-3,3,3,9,-4,-9,-7,-4,-5,-2,10,-1],[3,1,1,4,-1,5,4,1,1,4,2,-5,-9,-2,-10,-7],[4,-1,-6,-9,3,-10,-10,-6,-4,10,-8,-4,2,7,10,-5]],[[4,9,10,-6,4,1,-10,4,7,9,-9,-6,1,-2,-9,-7],[-2,4,6,6,-9,-3,-6,-10,-1,10,-4,-2,2,-9,-1,-8],[3,-7,-4,-9,10,2,1,8,-3,-3,-7,-3,8,-1,-8,-4],[-1,-10,-1,-7,-10,-6,-1,4,-5,2,-1,2,-8,-10,2,-7],[-4,7,7,6,-3,10,-9,1,-1,-7,-9,-2,1,-3,-8,7],[9,-5,10,-6,8,-10,-10,2,-3,2,7,8,9,-3,4,-7],[6,9,-7,-10,9,-1,-8,-10,1,4,7,-8,-3,-3,4,10]],[[-6,-5,-2,-10,-4,1,6,-4,3,-7,-10,-9,9,-2,6,3],[10,4,7,-4,5,-5,-9,9,7,-4,-2,-1,-7,-4,-4,-4],[8,-8,-2,-6,-2,-9,9,2,-4,2,9,9,-4,-8,1,-5],[-2,6,9,-2,-2,-9,10,7,-6,-2,-10,-3,-3,7,3,-4],[8,8,3,-6,4,8,-7,-8,3,1,10,-2,-5,6,10,4],[2,-5,3,-2,9,10,4,-2,-9,-2,5,1,-2,9,-9,-2],[-4,-7,-8,-3,-8,4,3,1,-9,3,9,-5,3,5,-6,4]]], dtype = "uint64")#candidate|3372|(4, 7, 16)|const|uint64
bop_3373 = relay.maximum(const_3371.astype('uint64'), relay.reshape(const_3372.astype('uint64'), relay.shape_of(const_3371))) # shape=(4, 7, 16)
output = relay.Tuple([bop_3373,])
output2 = relay.Tuple([bop_3373,])
func_3378 = relay.Function([], output)
mod['func_3378'] = func_3378
mod = relay.transform.InferType()(mod)
output = func_3378()
func_3379 = relay.Function([], output)
mutated_mod['func_3379'] = func_3379
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3429 = relay.const(2.075451, dtype = "float64")#candidate|3429|()|const|float64
const_3430 = relay.const([[[-1.240254,3.039129,-4.413306,-1.675479],[0.617883,-9.602379,-9.976664,8.389016],[-5.129152,5.883339,-0.732872,3.054683],[2.120982,-3.474851,1.952030,-5.265912],[-7.894649,6.637712,6.404716,-4.432302]],[[-2.707338,-1.142017,1.326081,6.701485],[-5.431914,5.678318,-2.932007,2.425159],[-7.675983,0.402855,5.270009,2.420700],[0.230856,-6.690502,-0.055769,-5.426745],[4.083221,6.276193,-0.969726,7.185172]],[[0.479340,-3.688911,6.308374,5.989727],[8.508704,5.903559,-8.161315,-7.322836],[-3.384456,3.386909,-0.790314,5.292263],[-6.271142,-5.212727,9.182705,1.709368],[-5.698337,-3.734526,2.391879,5.532314]],[[2.950776,5.021675,7.516262,6.016731],[-0.274208,-9.316552,-3.249101,-9.119495],[-2.345010,-8.113391,-0.258079,9.598400],[3.349581,8.010826,3.530618,6.940343],[8.808576,7.588936,-8.447067,-0.971864]],[[6.430981,8.253430,3.669149,-1.512405],[-4.732960,6.118880,-4.366100,-6.444633],[7.986623,-1.869414,-7.953642,8.085774],[-9.048428,1.558600,7.844398,9.636416],[-9.500269,0.656484,-6.113790,-8.752578]],[[-1.956419,-6.916063,-7.458163,-3.098786],[-5.222302,-1.904373,-3.848677,-6.383878],[-9.152137,0.936550,-9.955700,-0.857086],[-3.526713,-8.860423,1.327723,1.909377],[-1.054396,-9.278094,-7.550284,-5.615647]],[[1.873400,-1.652877,-2.743658,-5.365923],[-8.980571,6.832446,-5.344067,8.073896],[9.660247,-9.182705,-6.909299,-0.161739],[7.573266,2.938672,2.133889,-0.812023],[9.859123,-4.462338,7.774098,-5.543074]],[[-6.835511,-4.547121,-7.569708,8.289931],[9.183162,-0.643353,-6.900658,3.902978],[-1.882843,1.550621,-4.259310,-7.802853],[-5.154367,-1.108336,-1.237631,9.499162],[-9.865728,8.653614,-5.077948,-3.360403]],[[-6.159784,5.762434,4.814439,-0.103913],[-0.652772,8.772594,1.159590,-5.541856],[-9.774509,-5.048998,7.851450,4.224694],[1.639178,-7.454301,-5.975401,-1.164344],[-2.723015,3.211074,-9.461007,8.726522]],[[6.133453,0.569724,-4.380000,7.415488],[-2.545512,4.914932,2.414018,0.489460],[-8.075431,-7.625248,-6.486263,2.080592],[9.163923,-1.536341,5.563521,-5.441507],[-4.422786,0.679321,6.048448,7.304411]],[[-0.174491,5.935149,-1.194550,1.846716],[6.523044,9.140194,-8.649155,-0.062345],[5.604860,1.784232,-2.695231,7.895223],[5.214332,7.179964,4.423854,3.651893],[-6.288968,-8.013784,6.400770,7.094397]],[[2.599964,9.821711,9.143899,3.522372],[-3.109267,0.309180,-4.100064,-8.703651],[-4.406340,-4.403109,-7.724367,0.142227],[4.952375,6.167406,5.395950,7.711902],[9.806539,-5.603779,-8.376153,9.159054]],[[-0.300042,5.649034,-3.948006,3.082955],[0.418873,-8.366418,7.687324,-9.652746],[1.384497,2.185425,-7.395691,-2.178033],[7.576943,2.317462,-0.443601,4.843086],[1.605408,-2.770950,-6.520850,-8.731879]],[[2.522924,1.625332,9.904624,5.725626],[-8.132049,1.274068,6.062065,-3.162078],[0.261129,-4.862844,5.779800,-1.572983],[-4.757729,-6.924759,-8.247302,0.685168],[2.196018,-4.989761,-0.423953,-3.744177]],[[1.784035,-6.096818,3.178515,0.379527],[-0.845392,-8.527319,1.960640,-4.179520],[5.024590,-5.441173,-7.749271,-2.482677],[5.695982,-1.579912,-9.776097,-2.203889],[-3.312921,9.959319,8.889250,-9.531002]],[[-8.677604,9.728632,-1.519931,-1.691732],[-3.594513,0.094369,-0.333189,2.036681],[8.879257,7.985624,-1.764522,9.419596],[-3.226800,-6.511584,1.652288,2.610112],[5.558759,-2.781926,7.474040,-5.750835]]], dtype = "float64")#candidate|3430|(16, 5, 4)|const|float64
bop_3431 = relay.floor_divide(const_3429.astype('float64'), const_3430.astype('float64')) # shape=(16, 5, 4)
func_719_call = mod.get_global_var('func_719')
func_721_call = mutated_mod.get_global_var('func_721')
var_3443 = relay.var("var_3443", dtype = "int8", shape = (198,))#candidate|3443|(198,)|var|int8
call_3442 = relay.TupleGetItem(func_719_call(relay.reshape(var_3443.astype('int8'), [2, 9, 11])), 1)
call_3444 = relay.TupleGetItem(func_721_call(relay.reshape(var_3443.astype('int8'), [2, 9, 11])), 1)
func_3018_call = mod.get_global_var('func_3018')
func_3020_call = mutated_mod.get_global_var('func_3020')
var_3449 = relay.var("var_3449", dtype = "float32", shape = (45,))#candidate|3449|(45,)|var|float32
call_3448 = relay.TupleGetItem(func_3018_call(relay.reshape(var_3449.astype('float32'), [3, 5, 3])), 0)
call_3450 = relay.TupleGetItem(func_3020_call(relay.reshape(var_3449.astype('float32'), [3, 5, 3])), 0)
func_1706_call = mod.get_global_var('func_1706')
func_1709_call = mutated_mod.get_global_var('func_1709')
const_3462 = relay.const([[3,-8,6],[-9,9,-8],[9,-5,6],[2,1,-5],[10,-9,3],[8,-5,-7],[10,-10,7],[2,-7,2],[10,7,1],[4,1,2],[1,2,-6],[-6,6,-5],[-6,-8,4],[8,-3,-5],[9,6,5],[6,5,3],[-8,10,-5],[-6,2,7],[3,9,-2],[-10,6,-5],[-1,-6,-10],[10,5,3],[-4,2,4],[-1,-7,-2],[-7,-2,-8],[1,-7,-6],[5,6,-3],[-4,9,-3],[7,9,-6],[-3,-3,5],[1,9,-4],[-4,10,-3],[-2,-1,4],[3,10,5],[2,1,2],[-7,4,10],[10,9,5],[-6,-8,7],[3,-3,-5],[10,-4,-3],[9,-9,5],[-2,-5,-6],[4,7,-8],[-4,-8,3],[5,1,6],[-8,-3,9],[8,4,2],[-4,-9,-10],[9,8,-1],[3,4,-7],[-7,5,-4],[9,-6,5],[-2,-6,-4],[-9,-10,-2],[-8,9,8],[-4,9,-6],[-6,4,9],[-1,2,1],[-4,1,-7],[-7,10,7],[-9,3,-10],[10,-6,-9],[-8,6,-8],[6,-7,-7],[1,-7,7],[-7,7,-4],[-10,5,3],[-3,-4,10],[7,-3,-2],[9,4,4],[-2,-8,2],[-5,8,-2],[-4,1,5],[-10,-7,7],[5,5,-1],[-1,-10,9],[-10,-8,-6],[1,-7,-8],[2,-5,10],[10,-7,3],[2,1,2],[7,6,-2],[6,-2,4],[5,5,8],[-3,1,1],[-8,-7,-6],[10,-10,-7],[-9,-6,7],[-1,9,-4],[3,3,-9],[-5,7,7],[10,-7,4],[-5,-8,-3],[10,-7,10],[-5,-1,7],[3,9,4],[5,3,-6],[-7,-7,-1],[-10,-4,1],[-10,-9,7],[1,7,-1],[-7,-9,-10],[5,-6,-4],[5,-8,-3],[-7,7,6],[-3,3,-8],[-5,5,-5],[-6,4,-5],[1,-6,-2],[-9,-4,6],[-10,8,1],[10,-10,7],[-9,8,-7],[4,4,6],[-9,-5,-1],[4,2,-7],[-7,-10,-1],[4,1,3],[-4,7,-9],[4,-10,-4],[9,-4,-9],[5,-7,6],[-1,-6,-4],[-4,10,-6],[4,8,8],[7,-7,10],[2,-3,-2],[5,-1,8],[1,-4,3],[9,-8,3],[8,-3,1],[-10,-1,-1],[4,-8,8],[10,10,-2],[4,10,10],[-9,-3,3],[8,-8,10],[3,7,9],[-7,-9,-3],[-10,4,-8],[-3,-3,1],[-2,-1,7],[-2,-5,10],[-6,-5,6],[6,4,7],[-4,-10,9],[-5,10,1],[-9,-6,2],[8,-6,3],[-10,9,-6],[-7,7,1],[1,-4,4],[-6,10,5],[1,2,-8],[-1,-3,-2],[5,1,-1],[7,-8,10],[-10,-3,10],[4,3,9],[2,-10,8],[-4,-3,8],[-9,5,6],[9,4,8],[-2,-5,10],[-6,2,7],[-10,-7,-8],[-9,10,4],[9,-3,7],[-7,4,6],[4,4,8],[9,4,2],[-3,-9,-5],[8,-10,9],[2,8,7],[-8,6,8],[5,3,-7],[1,4,-2],[7,-4,-3],[-4,-8,1],[-4,6,-2],[5,6,-7],[1,-1,-8],[-5,-5,1],[10,10,-6],[3,9,4],[-6,9,7],[2,-3,-4],[-8,-7,-5],[-10,2,5],[3,1,-9],[-5,4,-6],[-9,-6,3],[-5,-8,-5],[-1,-10,-5],[2,-4,9],[-8,8,-10],[2,3,4],[-7,-1,3],[7,-1,6],[3,3,3],[-3,-8,-2],[5,10,1],[6,-4,4],[-2,-1,10],[-8,-7,2],[-7,-10,6],[-5,-7,9],[-6,-7,-1],[-8,-4,8],[8,8,-9],[5,7,-10],[9,-4,-8],[-4,9,7],[-4,4,5],[1,8,-9],[4,-2,9],[-6,7,5],[-4,-2,-2],[-2,5,2],[10,5,5],[-6,10,-1],[-1,-9,8],[4,5,-6],[6,-1,6],[2,9,5],[-5,-2,-10],[-8,-2,7],[-3,4,6],[4,8,2],[-1,1,4],[-1,-6,4],[7,-6,8],[-1,-4,-10],[-4,4,-10],[-7,3,-10],[-5,-5,-5],[8,-10,-3],[8,9,6],[4,-4,4],[-7,6,1],[4,-6,-7],[-8,4,-7],[-6,8,7],[-7,-8,1],[8,2,-5],[-9,-9,10],[9,-8,5],[10,2,-9],[4,2,-8],[3,-1,9],[10,-7,-6],[-4,4,-7],[-1,10,-5],[-4,6,2],[-1,9,1],[-9,5,-1],[-4,5,-9],[9,-9,5],[10,6,5],[8,-2,7],[-5,6,4],[-3,2,-6],[-2,5,4],[7,7,-7],[-1,10,2],[-9,-4,8],[-2,-4,-9],[-9,5,-4],[2,-4,5],[3,8,1],[1,-8,-5],[-2,-5,1],[-9,7,-2],[5,-2,-5],[10,-5,3],[8,-6,-8],[-3,7,-7],[4,-9,-1],[1,9,7],[-2,-3,-7],[5,-2,-4],[-1,1,4],[6,-7,10],[10,-6,-7],[-4,-9,-8],[-5,2,3],[8,-2,1],[10,-6,6],[2,7,6],[10,3,-7],[8,3,1],[-5,-9,9],[-4,1,3],[4,-5,5],[5,1,7],[-10,-2,-4],[-8,-2,-7],[-8,10,-1],[-7,10,7],[1,-1,3],[-2,2,5],[-9,-6,-9],[3,-5,7],[8,2,3],[-5,3,-9],[-3,-7,-5],[2,5,-4],[-2,2,-10],[3,2,-7],[-5,1,8],[2,1,8],[-2,-9,-8],[-1,-9,-8],[-3,-8,6],[-2,-8,9],[-5,7,10],[1,8,9],[2,-8,5],[2,9,-3],[-5,-8,-7],[9,5,7],[3,-9,7],[-9,-8,-2],[5,10,-3],[-10,7,-3],[2,8,10],[-5,3,-4],[-10,9,-1],[4,4,9],[9,8,-5]], dtype = "uint32")#candidate|3462|(330, 3)|const|uint32
call_3461 = relay.TupleGetItem(func_1706_call(relay.reshape(const_3462.astype('uint32'), [11, 9, 10])), 0)
call_3463 = relay.TupleGetItem(func_1709_call(relay.reshape(const_3462.astype('uint32'), [11, 9, 10])), 0)
output = relay.Tuple([bop_3431,call_3442,var_3443,call_3448,var_3449,call_3461,const_3462,])
output2 = relay.Tuple([bop_3431,call_3444,var_3443,call_3450,var_3449,call_3463,const_3462,])
func_3465 = relay.Function([var_3443,var_3449,], output)
mod['func_3465'] = func_3465
mod = relay.transform.InferType()(mod)
var_3466 = relay.var("var_3466", dtype = "int8", shape = (198,))#candidate|3466|(198,)|var|int8
var_3467 = relay.var("var_3467", dtype = "float32", shape = (45,))#candidate|3467|(45,)|var|float32
output = func_3465(var_3466,var_3467,)
func_3468 = relay.Function([var_3466,var_3467,], output)
mutated_mod['func_3468'] = func_3468
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3503 = relay.const([[[-2.859543,-2.922925,-7.350148,9.883663],[-1.489803,-6.174119,-5.735599,2.886096],[0.826380,-2.500539,0.660915,-5.452890],[-2.706288,1.190248,-2.307186,3.747306],[8.290103,0.651514,8.007374,4.734470],[8.854683,-6.799654,-4.575349,-4.680536],[4.166312,3.756814,9.549766,-3.807598],[7.422249,-5.825615,0.434235,-7.175310],[-2.211199,-6.686918,-7.935491,8.826780],[6.280010,-6.324585,3.451865,-7.556658],[6.246678,3.697982,1.367230,-5.798741],[9.647463,-4.475960,-8.151356,7.188307],[-4.522830,-6.213979,-2.384345,7.395261],[-1.800503,3.153986,-9.604505,-3.798980]],[[2.238243,2.953622,5.218974,1.668850],[-0.561176,1.741094,3.550453,7.710001],[-5.781050,-6.015589,-0.918389,2.039735],[9.417371,-9.730191,-1.337616,1.267738],[4.652393,-5.482654,-0.862493,7.466869],[5.897333,1.323411,-2.551418,9.429993],[5.421572,6.144383,8.562901,-7.918077],[9.966817,-9.550122,2.587810,8.890003],[-5.970631,6.687966,-3.395542,-4.453050],[-0.670730,-0.832759,-2.786390,3.177552],[5.808110,5.133295,6.747069,-6.493022],[1.197010,-9.943520,-5.525957,1.962838],[6.958562,-9.465327,9.978018,-8.232742],[-4.327475,-2.454756,-2.356601,-5.348910]],[[-5.360587,-4.122695,3.375084,-6.223103],[8.155016,6.924809,4.892591,0.392922],[-8.837875,-2.582383,-9.966995,5.825881],[1.520995,2.914557,0.933421,3.397973],[-3.692375,-6.291927,-1.030829,-2.614655],[7.746826,-4.486472,-6.772218,-2.963810],[5.112078,-2.780750,5.491555,-6.732008],[-3.254339,-6.030440,-7.681753,8.733539],[1.619457,-3.499001,3.642861,1.941953],[6.763297,2.174863,3.886339,-5.605305],[-0.714487,-2.400913,-5.627491,-2.837439],[3.343212,-9.108592,-9.878475,-6.263076],[5.205283,-5.398742,0.725470,-2.198852],[5.634182,-6.861247,0.046458,5.480471]],[[2.619124,5.183168,-7.207974,-8.952842],[-1.723686,7.841641,2.236825,-3.230166],[4.326261,0.114124,-0.657154,0.619257],[3.505363,1.247050,-0.335783,-5.180189],[-7.636148,1.853429,4.831339,-5.514950],[-0.915646,-9.923484,0.749491,7.288741],[1.761948,7.992083,-8.184344,3.528140],[-6.342701,-2.436929,1.794759,1.357348],[-7.380024,8.635613,-8.254099,9.857701],[8.586437,-2.872264,-2.394731,3.265448],[-9.542054,6.419703,0.588356,-9.660494],[5.011978,-1.836488,3.757482,6.306939],[-2.425513,8.714743,-2.597292,-7.077818],[9.967687,2.837856,-0.864798,9.833306]],[[9.721299,8.764414,-8.034673,1.319739],[-6.069232,-9.684876,7.314148,2.232423],[-9.870374,-2.021230,7.385277,9.564275],[-5.405470,-7.271743,4.373375,1.620203],[-9.704116,-8.457238,2.016905,9.412792],[4.798371,9.384017,2.747573,0.448595],[-9.634838,-0.820658,-6.469422,-9.779169],[-4.951249,6.646990,-2.088055,4.262505],[8.922536,9.818819,5.632532,-4.608173],[1.771089,7.835953,-8.392681,-5.919517],[-0.066198,-6.944592,-9.978005,7.649497],[7.187626,8.531228,-1.302204,-7.534494],[-6.987806,-0.548837,-3.533737,-1.028727],[-7.087643,-2.134675,-0.608487,1.279381]],[[-1.638630,2.493877,-9.887234,3.762795],[5.385888,-0.854023,3.172786,4.992407],[-3.779049,6.322192,-2.850613,-4.794462],[7.410508,0.313536,-3.238206,7.844653],[-8.215227,3.628142,4.048493,-0.353023],[8.938119,-1.132338,-4.152320,-6.261028],[9.977414,4.849688,-9.368698,5.838776],[1.467165,1.054267,2.260957,-3.166017],[-4.242260,5.189135,-0.900142,-2.218101],[-1.458725,8.087060,3.531058,1.807251],[2.966116,-6.681901,7.744858,-1.997384],[9.852085,-1.845216,-7.611990,-1.754228],[-5.040779,-3.782979,-7.263256,7.600346],[-0.839908,6.080948,-6.083153,-2.578649]],[[8.304490,5.117505,-2.903058,4.561473],[-2.341883,8.066269,-5.096691,8.399593],[6.088396,-0.722510,-6.666055,-4.759709],[-1.578734,-2.179418,-3.037912,-9.197596],[-1.781781,-0.561838,0.789041,-8.494353],[9.374911,-0.769478,5.152790,3.075394],[-2.785026,-0.496553,9.455956,8.493324],[-4.640086,-9.523606,-9.798785,1.400085],[1.361138,-2.890371,5.602371,-3.059304],[-6.266987,1.199714,-3.200542,-2.424604],[-4.114758,7.808360,1.265313,6.736405],[2.476551,-9.639430,-2.748654,-6.613637],[-0.769745,5.736647,4.227699,-1.808140],[-0.996965,4.633533,-6.070001,8.622854]],[[9.183652,-2.814131,5.672108,-9.725731],[-7.532352,8.600789,-9.865560,-5.238777],[-1.505343,4.493552,3.242333,5.520925],[3.579635,-7.304681,-9.673635,-3.402344],[-8.124911,-7.657362,-4.116018,-8.631298],[2.757295,4.727035,1.664461,-6.838532],[3.376365,6.703014,-6.376063,8.369015],[-4.934610,8.934562,0.241328,-2.739772],[7.371676,-0.709275,2.790919,-0.142556],[-8.350059,9.913470,4.723816,0.598856],[2.457160,9.997618,9.556662,5.911030],[-7.841429,-2.136374,-7.831717,2.384413],[9.936552,3.735683,2.768530,8.021804],[9.553751,4.853951,9.657062,-3.690939]],[[-3.478788,-5.368508,-9.127710,8.147521],[-0.622772,-7.873999,-1.381561,-8.822529],[3.931881,-5.636772,1.978790,-4.427921],[-6.511916,6.337992,-2.773846,-3.415649],[4.218569,-7.675168,-4.040243,-7.166894],[7.819605,9.358962,0.133511,3.305651],[4.437773,2.303291,-5.018288,-7.747570],[5.905930,-5.405142,4.716424,-5.851983],[9.683312,-4.801558,-6.788495,-0.803618],[7.480015,3.494065,-2.075868,-1.666653],[3.470126,-6.306080,4.893579,-5.684062],[4.022723,4.926949,-0.843036,5.875908],[-6.607708,1.663621,8.539208,8.315619],[-7.727127,9.627918,2.010062,-6.788418]],[[3.142789,-7.625760,6.778337,7.128881],[7.819055,1.900162,9.675884,3.932448],[-3.031609,-0.854447,6.518876,1.035660],[7.511530,-8.047686,-5.524829,9.448741],[0.849218,-2.034215,-4.796691,8.854322],[-6.244913,2.005605,-7.854897,-5.059996],[-2.651827,-5.276969,-3.183560,4.111005],[-5.607027,-5.602968,-7.624566,-8.075613],[-5.089820,5.979313,-9.692358,-5.306803],[0.626092,-8.618440,6.206291,9.628525],[-8.226231,6.091172,5.665200,-5.571546],[-3.513817,-5.710331,-1.750243,-3.601371],[9.567733,7.070548,5.261064,6.355625],[-3.779942,-1.490933,-5.983023,7.191532]],[[9.404575,4.581906,4.549644,-4.968598],[-8.631192,-0.810744,7.954133,9.837800],[-3.057752,-7.846423,3.056327,1.067981],[-6.234861,2.550180,2.256671,3.980878],[1.248185,9.331654,-8.363115,-5.104664],[-4.998840,6.643606,0.909532,-9.347084],[3.375375,4.262134,-9.973341,-7.345355],[-1.797239,4.005924,-0.439616,-4.886163],[3.967107,-8.822147,2.230260,1.406537],[-5.924330,0.682933,3.391601,8.392413],[2.178492,2.861401,5.524351,-9.490841],[4.763807,0.520534,-9.741295,4.427669],[7.343423,8.888595,-7.473738,-4.923868],[0.014422,7.517069,-8.415014,8.899365]],[[9.366794,4.378602,6.888956,6.877852],[-0.903591,-3.595434,-3.301448,-9.411660],[-3.898192,0.709663,-2.202668,3.760691],[0.043630,7.966161,8.167063,7.809289],[1.768501,-6.544653,-1.318372,-9.361747],[-1.607332,1.363792,-7.014947,7.296537],[4.507221,-1.237764,-2.613507,8.344841],[-2.823579,6.908205,-6.485259,-4.272397],[-2.681574,-1.802078,-6.410532,3.760728],[7.979226,-0.040775,-8.834645,-0.595758],[-6.670498,-6.957383,-4.786693,-2.357468],[-2.239669,9.950853,8.853362,-8.441654],[-7.547449,-1.557076,5.010813,5.233709],[3.388534,6.583109,4.357983,0.003775]]], dtype = "float32")#candidate|3503|(12, 14, 4)|const|float32
var_3504 = relay.var("var_3504", dtype = "float32", shape = (12, 14, 4))#candidate|3504|(12, 14, 4)|var|float32
bop_3505 = relay.equal(const_3503.astype('bool'), relay.reshape(var_3504.astype('bool'), relay.shape_of(const_3503))) # shape=(12, 14, 4)
func_32_call = mod.get_global_var('func_32')
func_36_call = mutated_mod.get_global_var('func_36')
var_3516 = relay.var("var_3516", dtype = "int16", shape = ())#candidate|3516|()|var|int16
var_3517 = relay.var("var_3517", dtype = "int16", shape = (1248, 1))#candidate|3517|(1248, 1)|var|int16
call_3515 = relay.TupleGetItem(func_32_call(relay.reshape(var_3516.astype('int16'), []), relay.reshape(var_3517.astype('int16'), [16, 13, 6]), ), 0)
call_3518 = relay.TupleGetItem(func_36_call(relay.reshape(var_3516.astype('int16'), []), relay.reshape(var_3517.astype('int16'), [16, 13, 6]), ), 0)
func_32_call = mod.get_global_var('func_32')
func_36_call = mutated_mod.get_global_var('func_36')
call_3527 = relay.TupleGetItem(func_32_call(relay.reshape(var_3516.astype('int16'), []), relay.reshape(call_3515.astype('int16'), [16, 13, 6]), ), 0)
call_3528 = relay.TupleGetItem(func_36_call(relay.reshape(var_3516.astype('int16'), []), relay.reshape(call_3515.astype('int16'), [16, 13, 6]), ), 0)
output = relay.Tuple([bop_3505,call_3515,var_3516,var_3517,call_3527,])
output2 = relay.Tuple([bop_3505,call_3518,var_3516,var_3517,call_3528,])
func_3535 = relay.Function([var_3504,var_3516,var_3517,], output)
mod['func_3535'] = func_3535
mod = relay.transform.InferType()(mod)
mutated_mod['func_3535'] = func_3535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3535_call = mutated_mod.get_global_var('func_3535')
var_3537 = relay.var("var_3537", dtype = "float32", shape = (12, 14, 4))#candidate|3537|(12, 14, 4)|var|float32
var_3538 = relay.var("var_3538", dtype = "int16", shape = ())#candidate|3538|()|var|int16
var_3539 = relay.var("var_3539", dtype = "int16", shape = (1248, 1))#candidate|3539|(1248, 1)|var|int16
call_3536 = func_3535_call(var_3537,var_3538,var_3539,)
output = call_3536
func_3540 = relay.Function([var_3537,var_3538,var_3539,], output)
mutated_mod['func_3540'] = func_3540
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3548 = relay.var("var_3548", dtype = "uint64", shape = (6, 3, 9))#candidate|3548|(6, 3, 9)|var|uint64
var_3549 = relay.var("var_3549", dtype = "uint64", shape = (6, 3, 9))#candidate|3549|(6, 3, 9)|var|uint64
bop_3550 = relay.bitwise_xor(var_3548.astype('uint64'), relay.reshape(var_3549.astype('uint64'), relay.shape_of(var_3548))) # shape=(6, 3, 9)
output = relay.Tuple([bop_3550,])
output2 = relay.Tuple([bop_3550,])
func_3558 = relay.Function([var_3548,var_3549,], output)
mod['func_3558'] = func_3558
mod = relay.transform.InferType()(mod)
mutated_mod['func_3558'] = func_3558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3558_call = mutated_mod.get_global_var('func_3558')
var_3560 = relay.var("var_3560", dtype = "uint64", shape = (6, 3, 9))#candidate|3560|(6, 3, 9)|var|uint64
var_3561 = relay.var("var_3561", dtype = "uint64", shape = (6, 3, 9))#candidate|3561|(6, 3, 9)|var|uint64
call_3559 = func_3558_call(var_3560,var_3561,)
output = call_3559
func_3562 = relay.Function([var_3560,var_3561,], output)
mutated_mod['func_3562'] = func_3562
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3647 = relay.var("var_3647", dtype = "float64", shape = (10, 15, 14))#candidate|3647|(10, 15, 14)|var|float64
uop_3648 = relay.exp(var_3647.astype('float64')) # shape=(10, 15, 14)
func_32_call = mod.get_global_var('func_32')
func_36_call = mutated_mod.get_global_var('func_36')
var_3654 = relay.var("var_3654", dtype = "int16", shape = ())#candidate|3654|()|var|int16
const_3655 = relay.const([4,2,-10,-7,-4,-7,-9,1,2,2,2,2,10,-9,8,8,4,8,-3,-4,-9,8,-7,3,-9,-1,-5,-8,8,3,7,-8,3,6,10,-7,-1,10,-3,7,7,2,-10,8,8,-6,3,6,7,-6,-2,-7,-9,8,7,4,3,8,6,1,-7,1,-10,-10,10,3,8,-4,-6,-8,8,-9,-10,6,4,4,-4,-5,-3,-1,-10,5,-6,-6,-1,-5,8,2,2,-8,5,10,-4,-4,-10,1,1,8,5,10,-8,-5,-1,-6,6,1,-5,-1,-8,7,-1,-7,-4,-2,9,-3,8,-5,8,4,-7,-3,8,3,-10,5,9,-4,9,10,-7,-6,2,2,7,1,-2,8,2,-9,2,-4,8,-3,-1,6,5,-2,5,8,1,8,6,5,-7,-10,8,9,-9,2,5,-1,10,-9,9,-9,-7,-4,-10,2,-1,6,6,5,8,-7,-7,-3,-2,-4,-10,-1,-9,-3,-4,-8,-9,6,10,1,1,8,8,5,-4,3,1,4,-9,-10,-1,-1,1,-6,-1,6,8,-9,7,-10,-2,-4,5,4,-4,10,-1,8,10,-2,4,4,3,-10,-7,1,3,4,-5,5,-1,7,-6,3,-10,9,-2,-7,4,5,-10,-3,-4,-1,3,8,-1,-5,9,-6,-2,2,8,1,9,-5,4,1,3,7,-10,-10,-8,-1,-3,-8,10,9,1,1,-7,8,2,-9,3,-3,-1,-3,7,7,-9,-5,5,8,-3,4,5,3,-1,-4,-8,-7,-9,-7,-4,-6,-9,5,-2,-8,2,-9,7,-4,-4,-5,5,-1,-2,-1,-5,3,-6,8,1,-7,1,2,5,6,-6,2,-3,-8,-3,3,-3,-4,3,9,9,9,-1,7,10,-5,-6,-10,10,-4,-4,-3,-1,6,-8,-10,-2,-6,-3,-6,8,-7,-8,5,-4,1,6,-5,-10,5,-9,-4,5,1,-4,-10,8,-9,6,-4,-3,-8,-10,5,7,9,-4,-4,-2,-8,-2,9,6,6,-1,2,-7,10,7,-1,-7,8,-1,2,-7,-8,-1,-9,-4,-10,-5,-9,-5,4,-6,6,-3,-5,-9,8,1,5,4,8,-8,4,-3,8,2,1,6,9,4,-6,5,10,-1,-8,10,-4,6,-4,9,-8,3,-8,9,-8,3,7,-7,6,4,2,1,2,4,-6,-7,5,-6,-9,-10,7,9,3,-10,4,10,8,2,9,-8,-8,-1,-5,5,1,8,-9,9,5,-1,-3,-4,2,-1,-1,-10,-3,1,-10,-9,2,-9,8,-4,-9,-1,4,1,3,-1,-10,3,-1,-1,-3,-2,-10,7,-10,1,4,2,-9,-7,7,-9,6,2,8,-10,4,5,4,-1,1,-4,6,-4,-10,-9,7,-4,10,2,-9,-9,6,-8,4,-5,-1,-1,-6,6,-5,3,-5,-7,-6,2,-3,8,-5,-10,-6,-5,7,-8,10,-10,-8,-9,3,7,6,3,-2,-3,-1,-5,9,6,5,-10,7,-2,-3,8,-6,5,6,-5,1,3,-10,-9,-10,6,10,-2,6,-9,-4,6,2,4,-9,6,9,-2,-10,10,9,-5,4,3,9,8,1,-3,-3,-2,-10,-2,8,7,-8,-7,-5,-3,10,-8,10,-4,9,-7,-8,5,-7,-4,3,-2,2,-6,-4,7,-7,-6,-10,1,2,2,-4,8,3,6,-5,7,-2,6,3,3,-6,-8,-1,-6,6,-3,-4,-4,4,3,10,9,-4,-9,8,-9,-1,1,-8,7,4,4,2,4,-10,7,6,4,-1,-7,5,3,4,1,2,6,9,-5,10,1,6,-9,-4,-2,-6,-3,-4,-8,-2,-2,9,2,10,3,7,-7,9,-7,9,-9,-8,-5,-9,-3,-3,5,3,-10,-5,10,-4,-6,4,-10,-3,-7,1,3,6,9,1,9,-9,4,3,-7,2,4,7,1,10,10,2,9,1,5,-2,-7,-7,-9,6,7,-9,4,-4,-7,2,6,-3,2,-7,-8,-5,-1,6,3,6,-10,3,-3,10,1,-7,8,4,-8,8,1,2,6,-4,10,8,-4,-5,-8,-9,10,8,8,7,4,-1,-9,-6,1,-3,-9,2,-2,2,-3,-8,9,-3,7,-2,-7,5,5,10,-1,-8,4,6,8,-7,-1,6,-3,6,8,3,2,-3,9,-5,-6,3,-3,-7,10,-4,1,10,8,5,5,-3,-6,-4,-10,7,1,8,-10,-9,-1,3,4,7,1,-9,-10,3,-1,-10,7,-8,9,6,-1,2,-7,-5,8,4,3,-6,-8,-8,-10,-1,-8,-7,5,6,10,7,3,-10,-3,10,10,9,-9,-8,-5,-5,-7,2,8,7,8,-7,7,1,4,6,-7,1,-1,-4,5,3,-4,4,-3,-1,-5,9,8,10,1,-5,2,-6,-2,-1,-10,10,9,7,3,10,-8,7,-9,9,4,10,-7,-1,7,-5,8,2,-9,7,6,-9,-8,-2,3,9,-3,-5,7,9,-8,2,2,-3,-4,-1,10,7,-6,5,10,9,2,4,-10,5,9,-5,-3,10,-1,-8,-2,-6,-3,8,-4,-7,-2,8,-3,-3,-10,3,-9,1,-5,10,3,6,9,-7,2,1,-4,8,-2,10,-1,7,8,-1,-6,-10,9,5,7,-10,6,5,-10,9,-5,-8,-4,8,3,-4,-2,-8,-8,8,-4,6,-2,4,-3,-8,2,5,-10,-7,-4,-2,5,7,2,9,-6,10,6,-3,-4,9,6,-3,7,-7,-3,7,-8,1,2,8,7,-7,9,-5,-1,-1,6,-3,-6,-6,-9,8,9,-7,-1,8,-2,-2,7,6,-10,6,2,3,-10,-8,-1,-6,6,-1,10,-7,-6,-5,-6,4,-9,6,-10,9,5,6,-6,8,8,10,-1,-2,6,4,10,10,8,9,2,-5,9,-6,-6,8,-6,-5,5,-3,-7,-3,-5,-6,-8,1,7,8,9,-1,-8,2,9,-10,5,5,2,-10,-2,10,-5,1,-6,8,-5,-2,-9,-9,-10,-5,4,-8,10,3,-8,6,-5,3,-8,-7,-1,-9,3,-1,9,-7,-7,-9,-7,-1,-9,-8,3,-6,-4,5,-3,-8,-2,-7,-6,-4,-3,10,-9,-7,-7,3,-6,-3,3,6,2,-2,4,7,-6,-4,8,-1,6,-5,2,-5,6,-7,-5,5,-8,4,-6,3,-4,5,5,-10,5,-6,-3,3,6,-8,-4,8,10,3,5,-10,-5,2,10,-10,5,-1,-6,8,6,-5,-1,-10,5,8,1,10,4,5,1,-10,1,7,-6,1,4,-2,-9,7], dtype = "int16")#candidate|3655|(1248,)|const|int16
call_3653 = relay.TupleGetItem(func_32_call(relay.reshape(var_3654.astype('int16'), []), relay.reshape(const_3655.astype('int16'), [16, 13, 6]), ), 0)
call_3656 = relay.TupleGetItem(func_36_call(relay.reshape(var_3654.astype('int16'), []), relay.reshape(const_3655.astype('int16'), [16, 13, 6]), ), 0)
uop_3657 = relay.cos(uop_3648.astype('float64')) # shape=(10, 15, 14)
output = relay.Tuple([call_3653,var_3654,const_3655,uop_3657,])
output2 = relay.Tuple([call_3656,var_3654,const_3655,uop_3657,])
func_3659 = relay.Function([var_3647,var_3654,], output)
mod['func_3659'] = func_3659
mod = relay.transform.InferType()(mod)
mutated_mod['func_3659'] = func_3659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3659_call = mutated_mod.get_global_var('func_3659')
var_3661 = relay.var("var_3661", dtype = "float64", shape = (10, 15, 14))#candidate|3661|(10, 15, 14)|var|float64
var_3662 = relay.var("var_3662", dtype = "int16", shape = ())#candidate|3662|()|var|int16
call_3660 = func_3659_call(var_3661,var_3662,)
output = call_3660
func_3663 = relay.Function([var_3661,var_3662,], output)
mutated_mod['func_3663'] = func_3663
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3707 = relay.var("var_3707", dtype = "int8", shape = (8, 4, 9))#candidate|3707|(8, 4, 9)|var|int8
const_3708 = relay.const([[[-7,-8,2,-3,9,-4,10,-4,-1],[-4,7,-8,-6,9,8,-7,-8,-1],[10,3,3,6,-3,-6,3,-5,-8],[5,1,-3,5,6,-6,-4,-3,6]],[[4,1,-4,4,-7,-10,-1,-2,-8],[3,-4,5,-6,-8,5,6,6,7],[-4,-9,-9,9,-1,2,5,-1,4],[3,-6,-10,-5,-10,-4,4,9,3]],[[10,10,3,1,9,7,9,-5,10],[-5,4,9,4,9,7,-3,-2,-8],[-9,2,-2,-3,-10,-5,-6,7,-6],[1,10,-3,-10,3,1,8,10,-10]],[[-1,-3,-3,-1,-9,-10,-5,-4,9],[-3,4,-2,7,7,-1,2,-9,-3],[5,1,2,-8,-2,-3,10,1,-10],[-10,-4,6,3,-7,3,3,6,2]],[[5,7,4,8,6,7,2,-4,-4],[4,-8,-10,-3,-9,-6,6,-4,-9],[-5,-2,8,-10,7,-9,-6,-10,3],[5,2,-4,-8,-10,-5,1,-9,10]],[[2,-10,-6,2,3,6,2,2,7],[2,8,10,-2,3,3,9,-5,-8],[9,3,-4,7,-10,9,7,-7,-3],[6,7,9,3,9,6,-9,7,-6]],[[-10,-8,2,-2,-9,3,5,1,9],[3,-7,-1,2,-7,-1,2,8,4],[7,10,-4,-10,-2,-2,-1,6,1],[-1,7,-2,3,-4,1,-10,5,-4]],[[2,-9,-5,7,7,-3,9,9,-2],[-8,4,5,-9,2,6,4,-10,-2],[5,-2,-1,1,7,-9,3,-5,1],[-2,6,6,-10,1,3,-6,5,3]]], dtype = "int8")#candidate|3708|(8, 4, 9)|const|int8
bop_3709 = relay.maximum(var_3707.astype('int8'), relay.reshape(const_3708.astype('int8'), relay.shape_of(var_3707))) # shape=(8, 4, 9)
func_3378_call = mod.get_global_var('func_3378')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_3718 = relay.TupleGetItem(func_3378_call(), 0)
call_3719 = relay.TupleGetItem(func_3379_call(), 0)
bop_3728 = relay.greater(bop_3709.astype('bool'), relay.reshape(var_3707.astype('bool'), relay.shape_of(bop_3709))) # shape=(8, 4, 9)
output = relay.Tuple([call_3718,bop_3728,])
output2 = relay.Tuple([call_3719,bop_3728,])
func_3739 = relay.Function([var_3707,], output)
mod['func_3739'] = func_3739
mod = relay.transform.InferType()(mod)
var_3740 = relay.var("var_3740", dtype = "int8", shape = (8, 4, 9))#candidate|3740|(8, 4, 9)|var|int8
output = func_3739(var_3740)
func_3741 = relay.Function([var_3740], output)
mutated_mod['func_3741'] = func_3741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3378_call = mod.get_global_var('func_3378')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_3846 = relay.TupleGetItem(func_3378_call(), 0)
call_3847 = relay.TupleGetItem(func_3379_call(), 0)
output = relay.Tuple([call_3846,])
output2 = relay.Tuple([call_3847,])
func_3849 = relay.Function([], output)
mod['func_3849'] = func_3849
mod = relay.transform.InferType()(mod)
mutated_mod['func_3849'] = func_3849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3849_call = mutated_mod.get_global_var('func_3849')
call_3850 = func_3849_call()
output = call_3850
func_3851 = relay.Function([], output)
mutated_mod['func_3851'] = func_3851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3378_call = mod.get_global_var('func_3378')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_3867 = relay.TupleGetItem(func_3378_call(), 0)
call_3868 = relay.TupleGetItem(func_3379_call(), 0)
func_3535_call = mod.get_global_var('func_3535')
func_3540_call = mutated_mod.get_global_var('func_3540')
var_3885 = relay.var("var_3885", dtype = "float32", shape = (672,))#candidate|3885|(672,)|var|float32
const_3886 = relay.const(-8, dtype = "int16")#candidate|3886|()|const|int16
const_3887 = relay.const([1,-9,-7,-6,8,-5,4,-4,3,-8,10,-4,1,-4,-8,2,-9,4,4,4,-6,5,-5,9,-10,6,4,-4,5,3,1,3,-8,9,-10,4,-1,6,-9,-3,-3,-10,9,2,-1,9,2,-5,10,-2,4,6,4,-3,-8,-1,-5,8,4,2,-4,-1,-3,-7,-10,-5,3,-2,-7,10,-1,-6,4,2,3,5,-5,4,-3,-2,9,7,-1,1,-2,-3,3,-1,5,-7,7,8,10,-9,2,-6,-3,5,4,1,-8,-10,6,-10,-5,1,-10,-6,-10,3,-10,-5,6,4,7,-7,-4,7,-8,-2,5,7,-4,-6,-9,6,-2,10,-10,-7,2,1,-10,-7,-7,-1,2,-8,10,1,-6,7,-8,7,3,-5,7,2,-6,6,-8,6,5,-8,-9,-4,-8,5,10,-3,6,-10,8,2,1,-7,-7,8,-6,-6,-5,-2,-3,-8,8,6,1,-9,-7,3,9,4,-3,-7,-9,6,5,-7,-6,1,-6,8,-4,6,-7,9,9,1,8,-10,1,2,-5,-6,2,7,-8,-3,3,4,-8,-6,-10,8,-5,6,-6,5,5,-4,-9,-5,7,9,-9,10,10,4,-4,-8,1,-8,2,10,-3,6,-9,-8,9,6,2,5,3,2,4,-8,-5,3,8,-7,-2,-4,2,-9,1,10,3,-5,-7,-6,6,7,10,9,5,-8,8,10,-4,-2,-4,8,6,-6,10,-3,5,10,-9,-3,6,3,-3,-4,2,4,6,3,-5,6,-8,6,10,9,6,6,-3,-5,-2,3,-7,-9,-1,9,-1,3,-6,5,4,7,-5,-1,-4,3,9,1,7,1,2,3,-4,5,5,8,-3,1,-10,6,-1,9,9,6,-9,1,4,7,10,10,3,9,6,3,4,-9,10,-5,-9,-2,-9,-4,-9,-2,2,-8,-1,2,-7,-3,-6,-6,-4,3,5,4,10,-6,8,10,10,-6,5,8,2,-2,6,5,10,-3,-5,8,4,8,10,1,-6,-2,-4,-2,2,7,4,5,-1,-1,-5,6,3,-9,-10,4,9,6,6,2,-5,-5,-2,-5,9,9,-8,-3,-9,-3,-5,6,5,-9,-1,9,9,-7,4,-4,-9,-7,10,-8,-4,-7,-2,-3,4,-7,3,10,-2,5,-10,-1,3,-6,9,1,6,2,-8,4,9,8,-1,-7,5,9,2,4,7,10,7,9,7,1,8,-9,1,10,6,-3,1,8,-1,1,-6,5,-2,7,8,7,5,5,-3,-6,-2,2,2,-9,2,-4,-2,-10,-5,-4,-6,9,6,7,-10,-8,5,-8,-8,1,-8,10,4,-4,8,-2,-8,-6,-6,4,8,-10,2,10,-4,1,6,4,1,8,4,2,4,6,10,8,2,3,-4,3,3,-4,3,-10,-3,-4,10,-9,-3,-6,7,-3,2,2,-8,-7,-6,2,6,6,10,-6,-5,5,-4,-2,-7,-7,-10,4,-3,-1,-10,2,4,-5,7,7,10,9,4,-2,-6,-9,-9,6,-4,5,-1,1,-5,2,-10,2,-10,4,2,-7,7,7,-9,-10,-2,-6,-1,8,3,-6,8,5,-10,-6,-6,-3,6,-1,-4,7,-7,9,-10,-4,9,-8,-7,-7,-1,-3,5,-10,-7,8,-3,9,8,7,-7,10,10,-4,-10,-8,-5,10,7,3,-2,-7,-3,-6,-6,-10,-4,10,-10,-3,-7,-3,-9,2,-2,2,-3,-10,7,1,9,-6,-2,8,-1,2,3,-10,-10,-10,7,-6,-1,9,2,-1,1,-3,4,-5,-4,4,-4,-10,7,7,-2,-4,-9,2,5,2,1,-1,9,-1,-2,-10,7,1,10,6,10,6,5,3,-1,5,10,-6,-1,2,10,-2,-10,1,-8,5,-8,-7,10,2,3,-1,5,-2,2,2,5,-1,4,6,-10,9,-1,1,-4,-3,4,2,3,8,7,9,3,-7,-1,-10,-6,-9,3,8,-4,-6,7,8,1,5,-5,2,-4,6,3,-4,-4,8,4,-9,-9,7,-3,5,-2,-4,7,-6,6,-6,-9,-10,5,4,-5,6,-6,-1,-9,-4,9,7,-5,-4,-6,-10,3,1,9,5,-8,8,-5,4,-5,4,-6,9,5,-2,6,-7,-3,4,6,8,2,8,6,1,2,-7,-6,2,10,4,8,-4,2,5,-7,1,-8,9,3,-5,-7,5,-9,-7,-1,-6,2,9,7,-1,-8,6,-1,10,-4,1,9,5,1,6,10,-10,-1,-6,5,-5,-10,-9,-5,-7,5,-10,-1,4,-8,-3,-4,3,-2,-6,-8,7,1,1,4,6,-7,8,3,2,-4,-10,-10,4,1,8,-2,-7,1,-10,9,8,2,4,8,7,-2,10,1,3,-5,-1,-6,-9,-10,5,5,-3,-1,-4,-4,-1,-1,8,7,4,-2,9,5,6,7,5,5,10,-7,-5,9,-7,8,-2,7,-9,3,7,-7,5,2,-7,2,-5,6,-9,-7,-7,4,-2,-7,7,10,-8,-7,-9,7,-8,-5,-7,4,-6,-4,7,-2,8,1,-9,-1,8,-2,-7,-4,7,9,-10,9,5,1,-1,3,2,5,7,-10,4,-1,-2,-7,6,-2,8,-4,-5,4,-8,5,5,3,6,8,-7,2,-5,8,-2,8,2,-2,9,-2,7,8,9,-3,-5,6,1,9,4,7,-8,7,-1,6,7,4,5,-3,3,9,10,-8,-3,6,6,3,-10,-3,-9,8,7,7,6,-8,9,-7,-5,9,3,3,-9,-3,-7,10,5,10,-4,6,1,8,-1,1,9,-2,-3,2,-3,1,-1,-6,10,8,4,-1,8,-7,4,5,-7,-8,5,-2,-4,8,5,4,9,9,-8,2,-2,4,-8,9,-9,-6,6,-3,-3,8,5,3,-5,-1,3,-6,-2,-10,3,-6,8,-7,9,7,-2,-10,-8,-5,5,6,7,4,-4,2,6,2,-7,10,-10,10,5,-3,2,6,1,-7,3,2,6,7,-1,7,7,-5,-8,10,-4,-6,10,6,-3,-4,4,6,-9,3,-9,7,2,4,9,-3,9,-1,-1,-2,2,3,-9,6,-1,7,3,-7,-8,-3,6,-9,-5,-4,7,-1,10,-5,-10,-1,1,-10,-2,9,7,-6,-8,-8,5,-9,7,-1,3,-10,-8,5,-6,6,-3,9,-7,-5,-10,-9,-6,-7,-10,10,6,-8,10,6,10,6,-6,-7,2,9,-6,6,7,-5,-4,2,-4,6,6,1,-3,1,-6,2,10,-9,-8,-8,-10,3,7,-6,6,6,4], dtype = "int16")#candidate|3887|(1248,)|const|int16
call_3884 = relay.TupleGetItem(func_3535_call(relay.reshape(var_3885.astype('float32'), [12, 14, 4]), relay.reshape(const_3886.astype('int16'), []), relay.reshape(const_3887.astype('int16'), [1248, 1]), ), 2)
call_3888 = relay.TupleGetItem(func_3540_call(relay.reshape(var_3885.astype('float32'), [12, 14, 4]), relay.reshape(const_3886.astype('int16'), []), relay.reshape(const_3887.astype('int16'), [1248, 1]), ), 2)
output = relay.Tuple([call_3867,call_3884,var_3885,const_3886,const_3887,])
output2 = relay.Tuple([call_3868,call_3888,var_3885,const_3886,const_3887,])
func_3900 = relay.Function([var_3885,], output)
mod['func_3900'] = func_3900
mod = relay.transform.InferType()(mod)
mutated_mod['func_3900'] = func_3900
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3901 = relay.var("var_3901", dtype = "float32", shape = (672,))#candidate|3901|(672,)|var|float32
func_3900_call = mutated_mod.get_global_var('func_3900')
call_3902 = func_3900_call(var_3901)
output = call_3902
func_3903 = relay.Function([var_3901], output)
mutated_mod['func_3903'] = func_3903
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3936 = relay.var("var_3936", dtype = "float64", shape = (1, 3, 13))#candidate|3936|(1, 3, 13)|var|float64
uop_3937 = relay.asin(var_3936.astype('float64')) # shape=(1, 3, 13)
bop_3939 = relay.mod(uop_3937.astype('float64'), relay.reshape(var_3936.astype('float64'), relay.shape_of(uop_3937))) # shape=(1, 3, 13)
uop_3942 = relay.tan(bop_3939.astype('float64')) # shape=(1, 3, 13)
output = relay.Tuple([uop_3942,])
output2 = relay.Tuple([uop_3942,])
func_3946 = relay.Function([var_3936,], output)
mod['func_3946'] = func_3946
mod = relay.transform.InferType()(mod)
var_3947 = relay.var("var_3947", dtype = "float64", shape = (1, 3, 13))#candidate|3947|(1, 3, 13)|var|float64
output = func_3946(var_3947)
func_3948 = relay.Function([var_3947], output)
mutated_mod['func_3948'] = func_3948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3378_call = mod.get_global_var('func_3378')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_3960 = relay.TupleGetItem(func_3378_call(), 0)
call_3961 = relay.TupleGetItem(func_3379_call(), 0)
const_3964 = relay.const([[[8,-7,-1,9,-5,3,-8,5,6,7,-5,-7,-5,5,-6,3],[2,-4,-6,-2,1,1,6,9,9,-7,-2,-5,7,-4,-6,-8],[-7,-3,7,-6,-1,-10,-2,-10,-4,5,3,-3,-9,7,4,-6],[-10,-7,-2,-7,-1,-9,-5,-4,-8,-5,1,5,-6,7,-6,4],[10,4,6,5,8,10,5,-2,-5,7,-6,-5,-3,-4,-5,-8],[10,7,3,3,7,5,-7,8,6,9,-8,-8,-7,1,-1,-7],[10,6,5,3,3,6,6,4,-9,-8,7,7,8,-8,-6,-1]],[[6,-8,-7,6,10,9,-6,-2,6,-10,-7,1,-7,-4,1,-9],[-3,1,-9,-7,7,-9,-1,-9,-2,-1,8,-4,-10,-5,-4,-9],[3,-6,-5,3,10,-6,-4,9,-6,7,-4,-6,-1,-5,-9,-3],[-4,-5,3,2,4,6,5,-6,-6,4,7,-4,2,5,-4,4],[-1,-7,-10,8,9,2,9,-4,4,-3,-9,-9,-6,4,7,8],[-8,-2,5,10,6,-9,-1,-8,-2,-6,-9,4,1,7,-6,6],[1,-2,-8,10,6,6,4,-2,6,7,-5,1,7,-4,3,8]],[[-5,-2,-1,-6,-4,4,-8,-2,6,-10,-10,-7,-10,-1,10,-9],[-10,-10,5,-9,10,-7,-2,3,-10,-1,5,-9,-10,2,-2,6],[3,-2,-4,9,4,2,-5,-6,-9,7,-8,1,-9,-9,-5,2],[1,-6,4,-8,-1,4,7,-3,10,10,-8,-7,7,9,-1,10],[4,-8,1,-5,-8,10,-3,-10,7,-1,5,4,-4,-4,4,6],[9,-6,-1,5,-4,-3,-10,-7,6,-1,-6,3,-8,4,8,-9],[5,7,8,3,7,-8,10,-3,5,-7,9,-2,4,8,-7,1]],[[4,-6,-10,-6,-7,-5,10,-3,-1,8,10,-6,8,-10,-3,-7],[-9,-9,3,7,8,9,1,4,4,-4,6,3,-6,-8,-2,-3],[-7,-1,8,10,-9,5,-1,-1,-5,-9,5,-4,5,-9,7,9],[4,4,-7,7,3,3,3,9,9,10,2,-8,-5,5,8,-8],[3,4,8,5,5,7,3,7,-6,9,-10,6,-1,1,-6,-2],[3,-10,-9,-2,4,-4,5,-9,10,-10,3,8,-8,3,-8,-6],[3,9,2,6,-1,1,2,9,-7,4,7,-6,-1,-1,-6,-9]]], dtype = "uint64")#candidate|3964|(4, 7, 16)|const|uint64
bop_3965 = relay.add(call_3960.astype('float32'), relay.reshape(const_3964.astype('float32'), relay.shape_of(call_3960))) # shape=(4, 7, 16)
bop_3968 = relay.add(call_3961.astype('float32'), relay.reshape(const_3964.astype('float32'), relay.shape_of(call_3961))) # shape=(4, 7, 16)
output = relay.Tuple([bop_3965,])
output2 = relay.Tuple([bop_3968,])
func_3974 = relay.Function([], output)
mod['func_3974'] = func_3974
mod = relay.transform.InferType()(mod)
mutated_mod['func_3974'] = func_3974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3974_call = mutated_mod.get_global_var('func_3974')
call_3975 = func_3974_call()
output = call_3975
func_3976 = relay.Function([], output)
mutated_mod['func_3976'] = func_3976
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4018 = relay.var("var_4018", dtype = "float32", shape = (1, 15, 11))#candidate|4018|(1, 15, 11)|var|float32
uop_4019 = relay.acosh(var_4018.astype('float32')) # shape=(1, 15, 11)
output = uop_4019
output2 = uop_4019
func_4025 = relay.Function([var_4018,], output)
mod['func_4025'] = func_4025
mod = relay.transform.InferType()(mod)
var_4026 = relay.var("var_4026", dtype = "float32", shape = (1, 15, 11))#candidate|4026|(1, 15, 11)|var|float32
output = func_4025(var_4026)
func_4027 = relay.Function([var_4026], output)
mutated_mod['func_4027'] = func_4027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3849_call = mod.get_global_var('func_3849')
func_3851_call = mutated_mod.get_global_var('func_3851')
call_4029 = relay.TupleGetItem(func_3849_call(), 0)
call_4030 = relay.TupleGetItem(func_3851_call(), 0)
uop_4054 = relay.cos(call_4029.astype('float32')) # shape=(4, 7, 16)
uop_4056 = relay.cos(call_4030.astype('float32')) # shape=(4, 7, 16)
func_3739_call = mod.get_global_var('func_3739')
func_3741_call = mutated_mod.get_global_var('func_3741')
const_4071 = relay.const([-5,-2,-8,-7,1,-3,-7,-1,-9,-7,-10,-5,2,-8,-1,5,-7,-9,6,-10,-2,-3,5,4,-4,1,7,-1,-7,9,5,4,-3,-6,10,7,10,-1,-5,-9,5,4,-7,-1,5,2,6,-1,8,-7,3,10,-5,8,-5,8,6,2,-9,8,2,6,-4,6,-2,10,-8,-9,-1,-2,4,6,6,-5,-8,-10,3,-8,-5,-10,-7,2,-3,10,-10,2,-4,7,-6,-4,-7,5,-4,-8,-9,-6,3,4,1,-1,6,-6,-2,2,-5,-2,-3,-4,-2,-4,3,7,-9,1,7,-2,5,-5,3,5,-4,-2,-6,5,-9,8,8,7,8,-7,1,-8,-9,5,10,10,9,-2,8,-2,6,-6,-7,4,-2,10,2,10,-3,-1,-7,9,-5,-8,6,-10,9,-7,-3,-2,1,6,2,-5,3,9,1,5,-7,-10,2,-5,8,-7,-4,5,1,-1,9,9,1,3,8,-7,10,9,-9,-5,8,-9,-9,10,-6,-4,-4,-1,4,7,2,6,3,-6,-2,9,-2,-4,3,-4,2,5,2,-3,8,6,-7,-3,-10,3,1,1,2,-8,-9,1,-10,-9,10,7,-3,-1,-7,-3,5,-8,7,4,5,4,4,-5,-2,5,8,4,-8,4,-1,-4,-2,-7,-4,-10,-2,-2,10,9,6,7,-7,-7,-8,-10,-7,-5,7,-10,2,-9,-4,9,10,7,-3,10,-7,-2,-8,-4,-7,4,1,-2,-3,7,1,3,-5,7], dtype = "int8")#candidate|4071|(288,)|const|int8
call_4070 = relay.TupleGetItem(func_3739_call(relay.reshape(const_4071.astype('int8'), [8, 4, 9])), 0)
call_4072 = relay.TupleGetItem(func_3741_call(relay.reshape(const_4071.astype('int8'), [8, 4, 9])), 0)
bop_4075 = relay.multiply(uop_4054.astype('int8'), relay.reshape(call_4029.astype('int8'), relay.shape_of(uop_4054))) # shape=(4, 7, 16)
bop_4078 = relay.multiply(uop_4056.astype('int8'), relay.reshape(call_4030.astype('int8'), relay.shape_of(uop_4056))) # shape=(4, 7, 16)
bop_4082 = relay.bitwise_and(bop_4075.astype('uint16'), relay.reshape(uop_4054.astype('uint16'), relay.shape_of(bop_4075))) # shape=(4, 7, 16)
bop_4085 = relay.bitwise_and(bop_4078.astype('uint16'), relay.reshape(uop_4056.astype('uint16'), relay.shape_of(bop_4078))) # shape=(4, 7, 16)
func_507_call = mod.get_global_var('func_507')
func_511_call = mutated_mod.get_global_var('func_511')
const_4088 = relay.const([4.654536,-1.091249,5.482208,-7.616640,-1.108398,0.153350,-0.046458,-1.498542,8.519110,6.500716,-4.820944,-9.967218,-1.317763,3.225378,5.928110,-0.529736,3.537387,-5.594194,7.150974,3.711830,8.372395,-9.534778,-0.686805,4.137132,2.229698,-5.304065,5.478623,-3.958798,5.059064,4.821647,1.138075,-0.988780,7.744848,2.686483,1.901181,-5.187236,6.274805,-6.084929,8.237227,7.096702,7.531172,6.953717,-4.883841,-9.096463,1.464564,4.719060,-7.052608,7.136710,-0.953233,-4.864846,3.629508,-0.302222,3.216355,4.889234,-7.192320,5.099025,-5.033977,2.085581,-5.294998,5.655825,4.021600,-3.503117,-6.557856,9.673522,-9.961532,-2.944633,9.596779,-3.025509,4.105342,5.963814,8.470733,6.339076,1.690501,-1.586769,3.691355,5.403407,-2.821395,-7.734390,0.542925,0.172316,1.162682,-8.955758,4.174942,1.166768,-9.442107,-3.222205,2.318776,8.010964,-2.811519,-7.745731,1.132035,0.172496,-7.762547,-8.835629,0.495613,9.282679,4.162656,8.186841,8.927717,-4.318990,-5.648228,4.461874,-8.679017,-8.733207,-6.400606,-5.552259,5.953713,-5.183819,4.324004,3.992860,-0.156991,4.100110,-2.680899,-9.407712,7.366050,4.350662,-8.099880,1.471643,-8.773422,7.841285,8.342922,-0.919793,2.728809,-0.463878,-9.557786,-5.534247,-9.983002,-9.187971,-7.180190,-5.190978,5.373666,8.809203,-4.373159,2.673073,8.015119,-3.773028,-6.597120,4.890873,2.859162,3.315695,2.173137,-0.857002,9.187769,8.630865,-6.999814,-9.787047,7.963149,8.522017,-2.941381,-8.213665,9.598134,-8.756054,-1.534764,-4.525358,3.207380,3.402881,5.070908,6.700452,-2.459198,-5.503073,-8.351136,5.232667,6.389090,-7.372544,5.901009,9.961468,6.181618,-8.787497,6.311953,1.336776,-8.614792,9.885524,-7.223099,5.708958,9.674624,6.171117,-9.026806,-3.788339,0.209199,9.475319,7.276107,-1.126149,7.707745,-8.548085,7.821840,2.468944,-6.755925,0.197173,8.177906,-1.156053,-0.503183,5.799634,-6.681653,-9.638185,-2.523773,-5.889162,-1.879181,-8.426106,2.881590,-3.599359,-7.606469,7.577003,1.371472,2.434802,4.949353,3.674427,-6.192202,-3.081389,-7.444824,-2.425200,-4.565642,2.152182,0.886084,-0.500471,-4.468375,0.240712,7.191066,-3.266562,8.645995,9.177503,1.742027,3.461265,6.343983,-1.948876,-1.756731,-4.062641,0.897139,-3.600453,9.416293,0.091810,0.400837,-3.176643,5.077183,9.589955,1.993577,7.151593,-9.799000,-0.639325,-9.681019,0.004021,7.167730,-4.367757,2.894435,-3.306904,3.802173,9.357309,-9.103789,0.459275,-8.784648,9.059236,-9.712940,-4.270479,2.724507,-0.185471,4.407282,-9.982467,-1.442557,0.523573,3.274699,-2.204082,8.065416,-8.754269,-9.267953,-4.683915,-9.318402,-3.991114,-5.184410,6.335334,6.901354,-0.098192,-4.369251,9.294464,3.805385,-5.493883,-4.407931,7.372644,-3.669329,-5.069702,-8.107622,5.375561,-2.013123,8.606163,-9.552944,-8.512027,-6.274155,-0.652871,0.263950,3.634047,-5.456185,-5.652839,5.524468,0.557350,0.837575,-8.437619,-6.856572,-4.220316,4.057496,0.426573,7.560214,4.040050,-4.321712,-1.642901,9.884588,-6.388490,5.765213,2.557623,9.504415,6.269107,-2.610836,-4.550745,2.458913,0.450222,-9.730501,2.661194,-3.055053,7.024599,-8.891185,-1.988686,-0.510676,-8.314077,9.782120,-1.156250,-3.847932,5.942179,8.081223,4.282714,6.098794,8.069978,3.805578,2.774839,5.350827,6.104416,-0.072796,5.396186,-3.152690,-0.007456,0.722306,-8.136253,-8.677554,-2.276535,9.840869,6.402425,-7.397232,-6.458041,9.783162,7.029347,9.757524,-2.310643,2.403546,-5.112338,6.407670,9.815089,3.361426,-2.763079,-5.676007,4.426126,-6.916102,-5.790910,5.186087,2.133617,-7.376620,2.068615,6.288258,0.308786,6.141597,-7.519504,-3.944857,-3.438120,-1.554499,-4.931445,5.023084,-2.740752,-0.768672,8.518475,-8.580508,-4.128898,2.796439,-4.167441,7.150776,9.462485,3.096020,-5.913933,-8.941207,3.582622,3.785246,5.028895,5.383224,4.720916,-7.145121,5.372646,0.553042,0.697742,4.280155,6.792784,6.641970,3.485038,-5.117443,-8.651303,-8.754556,8.161905,8.699391,8.622966,5.483791,-5.013661,4.406943,-1.077766,2.184910,8.217105,0.134914,-7.505210,-6.172929,7.092470,5.518162,6.471619,8.987936,7.397668,8.290739,8.692307,1.212468,-9.845500,4.345324,0.590478,-0.294934,0.476420,1.360559,-8.919391,5.920470,7.362353,3.816181,8.157819,6.280666,-3.522755,2.998532,5.926863,4.525768,0.978320,-2.914678,-7.076814,2.038060,-6.027060,6.237850,-7.827910,-2.676424,8.778727,-1.017299,-2.361746,2.322905,-7.092858,-8.056787,-2.386919,0.195050,-4.967362,-6.188966,-1.248334,-5.001238,5.761124,2.900025,3.603589,5.937212,-5.174288,8.791800,7.439426,0.743307,8.632977,-3.534190,1.804713,4.520973,2.335956,-7.031178,5.725812,7.519686,-9.245074,2.046101,-5.603142,-6.863447,-1.572812,-5.005339,1.355806,-3.012795,8.864293,-6.820224,-0.519720,8.347558,9.017218,-3.551578,-7.452169,7.801974,-4.123478,-6.003186,6.774841,3.219607,-7.145763,-2.391023,0.296068,-9.417827,1.275837,-9.066693,-5.218366,1.333922,2.845722,0.501775,2.831751,5.745346,9.568429,7.358832,-6.147563,-8.737832,-8.865175,-9.575738,2.169886,-2.356867,8.444149,5.919562,-7.541012,-4.576017,-5.553519,-9.857293,-9.198851,3.362408,7.293948,2.037559,-1.772049,9.232464,-8.534043,-3.156852,-6.390831,-0.991859,9.875380,-0.613016,-0.441563,-1.160277,-3.070019,3.560609,-5.023133,-6.348789,6.725342,8.723312,1.170485,-6.487141,1.765401,-9.234404,7.330437,8.671705,-2.592389,3.785765,-5.637444,6.389986,-2.722161,-4.716337,9.557922,-3.244765,-8.669896,-8.960427,-0.914252,5.365492,-6.782469,-9.164522,-0.614130,-4.071617,6.466365,8.756195,4.093436,-5.021986,5.249114,-4.321882,3.015297,6.400836,8.632741,5.749634,-3.074423,2.498569,-0.035103,5.779213,9.004550,1.507238,5.911402,3.505045,7.922765,-9.367189,-4.961804,-9.163267,1.651015,0.078967,2.039620,3.137611,1.167744,-0.194075,-5.423654,-0.365693,-3.332885,-6.379208,-7.741792,-0.563418,2.036477,3.090977,-4.299825,3.229962,5.138715,-6.714642,4.611477,0.505835,-6.800132,4.014364,4.411083,-0.488829,4.913164,1.242029,-4.987123,-0.161063,-7.760195,1.975527,4.017757,-3.217359,4.334341,6.698887,-9.143642,8.774041,2.183968,8.653370,-5.920207,-5.953813,-0.413056,-4.486334,1.496456,-6.147037,-2.335134,-0.678542,-3.830998,-8.799453,3.337483,4.135769,-3.297794,-7.430805,6.040160,-6.984016,-0.138243,8.213401,-8.141032,2.153014,-5.426908,5.180930,-8.294667,-0.065995,2.088276,-6.011719,3.770719,-4.921139,4.948940,3.235840,4.168519,-6.946960,-5.633396,-7.878703,9.936505,-1.642868,-4.875272,-4.372519,-9.497028,4.906038,-2.537336,-5.617070,9.471095,1.084366,-9.983096,1.697632,5.149814,1.824024,-1.883696,-9.436170,1.118943,1.173927,2.488951,-7.036915,1.825060,4.111284,-8.198402,5.777221,-1.963919,-7.341845,7.556508,-8.185628,7.902077,-3.706002,-4.732103,-5.974342,1.166241,8.549452,0.719900,-8.937521,5.954773,-4.372815,-4.774378,-3.989433,1.242206,7.641114,-6.155952,4.321342,4.479600,0.368030,-8.223787], dtype = "float32")#candidate|4088|(700,)|const|float32
call_4087 = relay.TupleGetItem(func_507_call(relay.reshape(const_4088.astype('float32'), [7, 10, 10]), relay.reshape(const_4088.astype('float32'), [7, 10, 10]), ), 3)
call_4089 = relay.TupleGetItem(func_511_call(relay.reshape(const_4088.astype('float32'), [7, 10, 10]), relay.reshape(const_4088.astype('float32'), [7, 10, 10]), ), 3)
output = relay.Tuple([call_4070,const_4071,bop_4082,call_4087,const_4088,])
output2 = relay.Tuple([call_4072,const_4071,bop_4085,call_4089,const_4088,])
func_4092 = relay.Function([], output)
mod['func_4092'] = func_4092
mod = relay.transform.InferType()(mod)
mutated_mod['func_4092'] = func_4092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4092_call = mutated_mod.get_global_var('func_4092')
call_4093 = func_4092_call()
output = call_4093
func_4094 = relay.Function([], output)
mutated_mod['func_4094'] = func_4094
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4095 = relay.const([[[7,-6,-10,10,-8,-2,6,-9,4,9,4,-4,-8,4,4,-9],[1,-7,-8,-3,-9,3,10,2,7,-1,-3,-4,3,-7,7,-8],[-1,1,10,-10,-8,4,-6,5,10,-4,2,-4,-5,-10,8,3],[4,1,-10,3,-5,-8,-7,-6,-9,-10,10,6,6,10,-5,-3],[8,3,6,-6,4,4,8,-8,2,-8,5,-8,9,5,10,2]],[[-4,8,10,-3,-9,-8,8,-4,6,-5,-7,2,-2,1,-4,1],[-8,8,-2,-6,7,-8,10,9,7,6,8,1,2,-1,-4,4],[9,4,2,-4,2,8,-5,7,-3,-5,1,-1,7,1,2,7],[-7,7,-9,-10,3,4,-5,10,-5,8,-3,1,1,-3,-5,-6],[-1,4,2,-2,2,-4,6,6,9,7,5,1,-10,-8,-7,9]]], dtype = "int8")#candidate|4095|(2, 5, 16)|const|int8
var_4096 = relay.var("var_4096", dtype = "int8", shape = (2, 5, 16))#candidate|4096|(2, 5, 16)|var|int8
bop_4097 = relay.right_shift(const_4095.astype('int8'), relay.reshape(var_4096.astype('int8'), relay.shape_of(const_4095))) # shape=(2, 5, 16)
var_4100 = relay.var("var_4100", dtype = "int8", shape = (2, 5, 16))#candidate|4100|(2, 5, 16)|var|int8
bop_4101 = relay.less(bop_4097.astype('bool'), relay.reshape(var_4100.astype('bool'), relay.shape_of(bop_4097))) # shape=(2, 5, 16)
func_3946_call = mod.get_global_var('func_3946')
func_3948_call = mutated_mod.get_global_var('func_3948')
const_4110 = relay.const([-1.125481,3.563998,-4.708187,-2.845361,-2.972398,7.667685,5.211614,-1.955018,-6.125090,-2.779826,3.051618,-6.817502,5.413989,-0.228130,6.268935,-7.592861,-8.230336,-0.296285,-8.549771,-3.479084,-6.350061,-3.876138,-6.081529,7.868223,-1.380223,-3.547406,7.257525,-1.616581,-5.955077,5.827920,4.220773,6.625703,-7.490963,-8.306122,-5.344156,5.227340,-9.990040,-5.595187,-8.388245], dtype = "float64")#candidate|4110|(39,)|const|float64
call_4109 = relay.TupleGetItem(func_3946_call(relay.reshape(const_4110.astype('float64'), [1, 3, 13])), 0)
call_4111 = relay.TupleGetItem(func_3948_call(relay.reshape(const_4110.astype('float64'), [1, 3, 13])), 0)
func_32_call = mod.get_global_var('func_32')
func_36_call = mutated_mod.get_global_var('func_36')
const_4113 = relay.const(4, dtype = "int16")#candidate|4113|()|const|int16
const_4114 = relay.const([8,4,4,-1,-9,-2,5,5,-4,-8,-6,3,6,9,7,9,-9,7,7,8,-2,-2,-2,6,-8,6,-3,-1,8,7,9,-1,1,2,6,3,-2,5,-2,9,-5,3,4,7,5,9,9,2,10,7,6,3,5,-2,-9,6,-8,10,-4,-5,-2,-2,-6,3,8,1,-10,-2,10,-1,-6,3,-5,-3,-1,-5,-5,-3,3,5,6,7,-8,-2,-2,-9,9,10,4,-10,-4,-7,-5,-7,6,10,-10,1,-4,8,7,4,-9,9,-10,8,5,-4,-8,9,-5,-10,-5,-2,-4,-7,-8,-7,7,-10,-5,2,6,2,-7,9,-1,-6,10,7,8,4,-7,1,-7,3,-1,-5,3,2,10,1,-2,8,-4,-5,1,8,-2,-5,4,-4,7,2,7,-7,7,8,6,1,-3,4,-10,5,5,-3,-2,-4,6,-6,-1,-10,2,8,-6,-9,7,-4,-10,-9,2,4,10,-10,5,7,-8,4,5,-9,-3,9,-6,9,3,-10,1,-9,-3,7,-3,-4,1,5,10,-6,-4,4,-7,5,2,-7,1,-4,-4,-4,5,-10,-6,2,-10,-10,3,-6,7,-4,-9,2,6,-6,-8,7,-8,2,3,1,-4,10,5,10,7,10,5,-8,1,3,-6,-7,-1,-10,4,-10,2,-6,5,-8,-9,10,2,9,4,7,4,4,-10,2,8,2,1,5,-3,-2,-3,8,-2,3,9,-6,1,-8,6,4,-1,4,-4,10,3,-2,6,-4,-7,4,4,-8,-10,5,-6,10,7,9,-2,-9,-3,-3,-10,-9,1,-2,-3,-9,7,-1,-5,10,6,3,10,-4,4,-4,-2,3,6,10,6,-4,-5,5,7,-4,-5,-10,-3,-8,10,3,-4,-7,10,2,9,8,-3,6,10,-3,-6,-8,7,-6,-7,-1,3,-1,-7,10,1,10,3,-1,3,-8,7,10,3,1,4,2,1,-2,-8,-4,2,-10,7,8,7,3,-3,8,-8,5,-10,-9,10,-9,6,7,5,-3,-1,6,-8,-2,1,-6,-6,1,9,6,3,-10,-7,7,6,-8,-2,5,-1,-10,6,1,8,-9,-4,-8,10,-6,-7,-1,-2,10,-3,-3,-3,-9,10,2,-4,6,-5,6,4,-4,-6,4,6,-3,10,-5,8,1,-6,5,1,9,-6,3,9,-1,-6,3,8,1,2,8,-2,10,-1,9,8,9,-2,-4,-2,4,-9,-10,-2,6,8,6,2,-7,10,-4,-3,2,5,-4,2,-5,-6,-9,-5,-4,8,3,5,4,6,-6,1,2,-6,5,6,-9,2,-3,-5,-7,9,5,-10,3,-7,2,-7,-7,3,-10,-9,-1,9,7,-1,6,-6,7,-10,-1,7,8,-10,-6,-7,9,-7,9,4,-9,2,-6,8,6,2,-6,3,-5,-1,5,1,-3,4,-4,8,5,1,-2,-5,-9,-6,-9,1,3,9,9,1,8,-4,6,-6,-5,4,-9,6,9,-5,2,-4,-9,2,-3,-1,-10,1,-10,9,-7,-3,-4,-4,-10,1,6,-8,8,-6,4,-10,-2,-2,-10,-10,-4,3,1,-2,10,-6,9,-3,3,-6,7,-1,6,3,-4,5,5,9,7,8,3,4,-7,6,8,-7,9,4,-3,3,10,-9,-6,-3,-8,-2,3,2,5,-10,-4,-8,8,8,10,3,7,-7,10,8,8,-2,6,-3,-4,3,-3,-10,-2,-4,-10,-2,-1,-2,6,-3,-1,-9,9,-7,-6,-4,1,2,2,6,5,1,-7,-10,-6,-1,-8,-2,-2,-3,-1,-9,-10,-8,7,6,-3,9,-3,-7,4,4,10,-10,-6,3,1,-10,3,3,3,1,8,8,-10,10,4,-5,-9,7,9,3,-1,1,2,-3,5,10,7,7,-2,-1,-1,1,3,-7,7,4,-4,4,-9,10,-3,9,8,-7,-3,9,7,5,-7,4,-10,-3,-3,10,-4,-8,-1,-6,5,1,4,-1,1,10,-6,-3,-3,3,-1,-10,3,1,4,-3,3,-6,-6,-9,-3,-7,5,9,4,6,5,2,3,-2,-3,4,10,4,-7,5,3,-2,9,8,3,1,-1,6,4,-9,-2,4,4,-8,-2,2,-2,-4,6,-6,-8,-7,-8,1,10,1,-4,3,-5,-9,-5,-2,5,-10,10,10,-3,-6,-1,-2,-10,2,-10,-2,-10,-3,3,-2,3,-1,-9,2,-9,2,-9,8,9,-5,-9,-7,-9,-5,-8,-3,10,8,5,1,2,2,10,-1,4,-2,-3,3,9,-4,-5,-2,1,6,9,9,-3,-3,3,-1,-1,1,2,-8,9,10,1,9,-1,9,4,-1,1,7,-1,-2,-3,-6,6,-6,8,-9,9,10,-4,-9,-8,-3,-8,4,1,10,10,9,-2,1,4,-6,9,-2,-6,3,-3,3,-9,9,-7,-3,6,3,8,7,-5,4,10,8,7,10,-8,-3,1,8,-4,-5,5,-10,3,3,-10,-3,-3,6,4,3,-10,10,10,-7,9,5,-9,4,-10,-1,6,-3,-5,-10,-7,-1,-7,8,7,2,-7,-9,-9,10,2,2,-3,6,5,9,6,1,-10,-1,-4,2,-9,10,4,9,-9,-1,-7,-4,-10,6,-10,-9,6,7,4,-1,-2,1,9,1,3,4,-8,4,-9,6,-9,-2,-7,-5,2,-2,-7,10,2,-5,3,7,-8,-1,-3,-10,2,-7,3,-7,-8,-1,3,10,-3,2,-4,1,-10,-1,-9,-5,-5,1,-4,4,9,-6,9,8,1,-9,-1,-9,3,5,-2,-7,5,-4,-6,1,-6,-8,3,6,-7,8,-7,10,8,-6,-8,-7,8,-1,2,10,1,4,3,5,-6,8,2,7,-5,-10,5,5,-1,-8,10,-2,3,2,-7,-5,-4,8,5,5,8,3,3,7,-6,-6,2,-5,5,10,-8,4,-2,-7,-10,6,-8,-3,9,-4,4,9,-9,10,6,7,-7,-6,-5,-5,-7,-7,10,-7,-2,3,-4,-2,1,-8,-4,-2,8,-9,3,10,-4,7,8,4,7,-8,10,-4,3,-9,-9,-7,9,9,-9,1,9,9,2,-9,-9,-9,-6,3,9,8,10,-4,-3,-2,4,-8,-1,-10,8,-3,-4,-9,9,2,3,5,-5,-4,-2,1,-10,-8,-3,8,-8,2,5,-4,3,-4,8,-2,8,3,2,7,2,3,-4,1,-1,-5,4,5,-7,-6,8,-10,-3,8,7,-7,9,-6,-2,6,-8,4,-10,1,-7,2,6,4,5,7,5,10,-6,8,3,-3,-3], dtype = "int16")#candidate|4114|(1248,)|const|int16
call_4112 = relay.TupleGetItem(func_32_call(relay.reshape(const_4113.astype('int16'), []), relay.reshape(const_4114.astype('int16'), [16, 13, 6]), ), 0)
call_4115 = relay.TupleGetItem(func_36_call(relay.reshape(const_4113.astype('int16'), []), relay.reshape(const_4114.astype('int16'), [16, 13, 6]), ), 0)
uop_4123 = relay.atan(var_4100.astype('float32')) # shape=(2, 5, 16)
func_1189_call = mod.get_global_var('func_1189')
func_1192_call = mutated_mod.get_global_var('func_1192')
call_4127 = relay.TupleGetItem(func_1189_call(relay.reshape(const_4113.astype('int16'), [])), 3)
call_4128 = relay.TupleGetItem(func_1192_call(relay.reshape(const_4113.astype('int16'), [])), 3)
output = relay.Tuple([bop_4101,call_4109,const_4110,call_4112,const_4113,const_4114,uop_4123,call_4127,])
output2 = relay.Tuple([bop_4101,call_4111,const_4110,call_4115,const_4113,const_4114,uop_4123,call_4128,])
func_4139 = relay.Function([var_4096,var_4100,], output)
mod['func_4139'] = func_4139
mod = relay.transform.InferType()(mod)
mutated_mod['func_4139'] = func_4139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4139_call = mutated_mod.get_global_var('func_4139')
var_4141 = relay.var("var_4141", dtype = "int8", shape = (2, 5, 16))#candidate|4141|(2, 5, 16)|var|int8
var_4142 = relay.var("var_4142", dtype = "int8", shape = (2, 5, 16))#candidate|4142|(2, 5, 16)|var|int8
call_4140 = func_4139_call(var_4141,var_4142,)
output = call_4140
func_4143 = relay.Function([var_4141,var_4142,], output)
mutated_mod['func_4143'] = func_4143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3974_call = mod.get_global_var('func_3974')
func_3976_call = mutated_mod.get_global_var('func_3976')
call_4172 = relay.TupleGetItem(func_3974_call(), 0)
call_4173 = relay.TupleGetItem(func_3976_call(), 0)
output = relay.Tuple([call_4172,])
output2 = relay.Tuple([call_4173,])
func_4200 = relay.Function([], output)
mod['func_4200'] = func_4200
mod = relay.transform.InferType()(mod)
mutated_mod['func_4200'] = func_4200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4200_call = mutated_mod.get_global_var('func_4200')
call_4201 = func_4200_call()
output = call_4201
func_4202 = relay.Function([], output)
mutated_mod['func_4202'] = func_4202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3378_call = mod.get_global_var('func_3378')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_4207 = relay.TupleGetItem(func_3378_call(), 0)
call_4208 = relay.TupleGetItem(func_3379_call(), 0)
output = relay.Tuple([call_4207,])
output2 = relay.Tuple([call_4208,])
func_4216 = relay.Function([], output)
mod['func_4216'] = func_4216
mod = relay.transform.InferType()(mod)
output = func_4216()
func_4217 = relay.Function([], output)
mutated_mod['func_4217'] = func_4217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4200_call = mod.get_global_var('func_4200')
func_4202_call = mutated_mod.get_global_var('func_4202')
call_4231 = relay.TupleGetItem(func_4200_call(), 0)
call_4232 = relay.TupleGetItem(func_4202_call(), 0)
func_4139_call = mod.get_global_var('func_4139')
func_4143_call = mutated_mod.get_global_var('func_4143')
var_4249 = relay.var("var_4249", dtype = "int8", shape = (160,))#candidate|4249|(160,)|var|int8
call_4248 = relay.TupleGetItem(func_4139_call(relay.reshape(var_4249.astype('int8'), [2, 5, 16]), relay.reshape(var_4249.astype('int8'), [2, 5, 16]), ), 0)
call_4250 = relay.TupleGetItem(func_4143_call(relay.reshape(var_4249.astype('int8'), [2, 5, 16]), relay.reshape(var_4249.astype('int8'), [2, 5, 16]), ), 0)
const_4265 = relay.const([[[0.926067,7.343078,6.090578,-9.242008,4.953225,-7.289430,-0.674081,0.980878,5.244920,-1.383190,4.185409,-5.867606,2.850403,-3.706224,9.053423,-5.834597],[3.258227,8.075672,6.486219,9.653232,4.119126,5.287169,-4.458631,3.099590,6.015053,-0.594925,1.267808,-0.778899,-4.940398,7.113855,-9.626531,-4.268494],[1.344827,6.717387,0.617167,-9.364766,-9.327844,-9.484615,-4.263928,1.583252,-4.116637,0.740756,-9.145897,-4.360915,-4.176748,-4.056470,1.201956,6.534206],[8.166654,7.051259,1.536465,8.299387,1.174670,-9.452502,-3.203870,5.971428,4.887383,-0.378119,-3.513882,-7.004390,-7.554952,-0.877038,1.695503,-6.350812],[-5.553411,1.484767,8.384783,0.533652,-0.645734,7.191334,3.209905,6.628422,0.353225,7.266383,-7.452614,-6.992482,-0.699830,-0.326198,-0.854666,-5.009322],[-3.067981,-7.288435,8.603090,8.283798,0.011816,-7.372513,2.865875,7.919434,7.177053,4.262073,-2.410247,-4.557961,-4.640686,-0.179084,6.663276,3.787502],[-8.313132,-6.069886,2.415584,-5.629940,-9.782264,-1.232484,-1.886436,-2.523359,-6.826024,-1.750103,0.300605,3.014129,0.562883,6.136065,1.897747,9.098738]],[[-2.431800,1.802356,7.081639,2.664440,-1.989884,4.499084,4.192283,-9.730681,5.989329,1.816046,0.411267,-8.664879,-9.139375,6.142560,-7.718735,-0.648444],[-4.055532,3.171828,1.779679,1.976102,-8.194903,-6.928431,-7.027855,6.967059,7.597389,8.675896,5.753454,-2.504426,9.429700,0.539816,-3.403220,-8.173967],[2.952129,-5.465344,-6.382288,-3.994491,-7.802611,8.099664,2.725741,4.556606,4.103229,7.418100,-0.877172,-8.209485,-7.277396,-7.289554,6.616560,8.884287],[-3.484560,3.990268,-8.478834,5.906107,0.349110,2.007492,4.953411,6.643065,4.943402,7.550519,-7.371507,9.712177,-7.147439,7.645721,6.510597,-6.247779],[-1.000585,-5.752616,-7.207939,-2.608978,-2.414834,-1.896390,-7.706650,-2.373128,8.177632,0.723503,-2.006146,-1.867038,-8.220482,-6.268246,-5.410536,6.536762],[3.180636,9.942780,7.550816,3.126235,-1.199379,7.063221,0.109136,-5.329667,-7.292966,2.292738,2.064842,0.886652,3.762050,7.466901,-6.586063,9.943848],[-1.582918,0.725577,-9.704433,-4.662269,9.864228,9.662760,2.755293,4.040454,7.973884,-3.503487,-8.149627,5.398802,-7.312076,2.664544,2.895234,-8.054006]],[[-4.849080,-1.979535,-6.343955,7.235964,-1.863317,-0.257173,-5.804999,2.132365,-3.697456,-9.361635,0.785573,6.761714,-9.052112,2.173558,3.105007,-5.462562],[0.608471,-5.743915,8.065806,8.423860,-9.044772,3.482226,8.313817,-1.225756,4.512247,-1.914157,-0.720153,-0.485605,6.847317,9.263377,4.831277,-7.605021],[-6.723149,-9.607555,-5.059727,2.700070,5.772317,3.514027,-8.538074,7.611691,3.855695,-0.809073,6.153985,-8.180073,-9.343489,5.391908,4.995409,1.925785],[-4.182893,0.418394,5.745235,5.186145,-4.777888,-9.959875,-5.879145,-1.373782,8.128552,-5.240957,8.620706,5.465463,-7.402961,1.363914,-2.499036,1.141569],[-4.674352,8.940294,0.806390,-1.725057,-6.384897,-7.706684,-9.800509,-1.741580,-3.007918,-2.923182,0.633480,3.272282,-7.326858,-3.085419,6.974951,6.614203],[-8.226882,-8.862766,1.183515,8.918999,4.773767,6.293420,-9.625907,1.638696,-1.043252,-1.049114,-3.720735,6.055631,-1.972400,6.475771,1.738423,0.669324],[-3.771785,7.989834,6.516462,2.404092,1.900420,-0.743111,-9.074878,-3.627218,-6.939512,-7.650374,-7.014407,6.484135,0.715416,4.524093,-8.229014,5.262666]],[[-1.573993,-0.384918,9.168914,-7.454340,-7.417435,0.475905,-8.966291,0.834609,-8.068628,4.796730,6.038417,-8.212560,-6.599354,1.562732,-6.859132,6.140247],[-8.932784,-5.906343,2.392672,-1.752532,-5.404247,-5.738185,1.628943,0.293507,1.441317,-6.336329,7.945455,-5.149766,-6.507162,-5.720531,-7.785904,1.569965],[-6.521608,-6.509970,-1.182793,6.009449,-4.681107,-2.699139,-3.426670,-0.107765,-3.849219,-6.210177,5.543371,2.424993,4.217183,-3.599458,3.809349,-8.676709],[-4.195065,4.966359,8.360942,5.434708,-2.221718,7.221426,2.110223,5.431141,-1.859958,3.404308,-7.583351,-1.055575,6.669350,1.682142,-2.226586,-7.464132],[-4.378457,-0.848711,-1.546654,-2.512324,8.574741,8.427859,5.980930,-3.470435,6.418269,0.126599,5.419490,4.444939,-0.436887,8.662373,-8.218973,7.440805],[-1.303450,-1.513056,4.935221,1.703126,-8.615732,0.784169,2.643455,9.126913,-7.546484,-9.746842,-8.002234,-6.533360,-1.695588,-6.098232,8.991285,-4.866219],[5.693926,-7.515076,9.379921,6.525727,5.390309,5.361306,-2.452568,0.116299,8.915513,-6.210899,7.681452,-6.031070,7.184194,-8.659091,3.967121,-2.717162]]], dtype = "float32")#candidate|4265|(4, 7, 16)|const|float32
bop_4266 = relay.less(call_4231.astype('bool'), relay.reshape(const_4265.astype('bool'), relay.shape_of(call_4231))) # shape=(4, 7, 16)
bop_4269 = relay.less(call_4232.astype('bool'), relay.reshape(const_4265.astype('bool'), relay.shape_of(call_4232))) # shape=(4, 7, 16)
uop_4290 = relay.sqrt(call_4248.astype('float32')) # shape=(2, 5, 16)
uop_4292 = relay.sqrt(call_4250.astype('float32')) # shape=(2, 5, 16)
bop_4311 = relay.equal(const_4265.astype('bool'), relay.reshape(call_4231.astype('bool'), relay.shape_of(const_4265))) # shape=(4, 7, 16)
bop_4314 = relay.equal(const_4265.astype('bool'), relay.reshape(call_4232.astype('bool'), relay.shape_of(const_4265))) # shape=(4, 7, 16)
output = relay.Tuple([var_4249,bop_4266,uop_4290,bop_4311,])
output2 = relay.Tuple([var_4249,bop_4269,uop_4292,bop_4314,])
func_4320 = relay.Function([var_4249,], output)
mod['func_4320'] = func_4320
mod = relay.transform.InferType()(mod)
mutated_mod['func_4320'] = func_4320
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4321 = relay.var("var_4321", dtype = "int8", shape = (160,))#candidate|4321|(160,)|var|int8
func_4320_call = mutated_mod.get_global_var('func_4320')
call_4322 = func_4320_call(var_4321)
output = call_4322
func_4323 = relay.Function([var_4321], output)
mutated_mod['func_4323'] = func_4323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3849_call = mod.get_global_var('func_3849')
func_3851_call = mutated_mod.get_global_var('func_3851')
call_4352 = relay.TupleGetItem(func_3849_call(), 0)
call_4353 = relay.TupleGetItem(func_3851_call(), 0)
output = call_4352
output2 = call_4353
func_4365 = relay.Function([], output)
mod['func_4365'] = func_4365
mod = relay.transform.InferType()(mod)
mutated_mod['func_4365'] = func_4365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4365_call = mutated_mod.get_global_var('func_4365')
call_4366 = func_4365_call()
output = call_4366
func_4367 = relay.Function([], output)
mutated_mod['func_4367'] = func_4367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4200_call = mod.get_global_var('func_4200')
func_4202_call = mutated_mod.get_global_var('func_4202')
call_4380 = relay.TupleGetItem(func_4200_call(), 0)
call_4381 = relay.TupleGetItem(func_4202_call(), 0)
func_4025_call = mod.get_global_var('func_4025')
func_4027_call = mutated_mod.get_global_var('func_4027')
const_4398 = relay.const([-3.752395,4.632631,7.643102,-0.494373,8.568166,3.253510,-8.867319,-4.546689,4.378780,9.099040,-3.040528,-6.261797,-6.082623,7.802748,-2.026939,1.244809,-1.881774,2.948827,1.624513,-5.263190,8.964554,-8.239533,9.460646,-0.518193,-9.893844,-8.534993,4.291504,4.400474,-6.203499,-8.028262,-3.727365,-3.183948,-4.054953,-0.604852,5.513912,-6.573818,-0.505094,-6.367801,8.594489,-2.764184,2.361924,5.304681,4.743165,-0.136237,1.775522,-0.383773,8.769168,6.092540,-3.947110,7.340848,-1.187045,-8.744004,-0.286023,-4.364116,-6.204870,5.397691,-1.636371,-9.459094,3.418255,9.133543,4.712512,-4.824664,-0.055971,-5.614743,7.066537,1.770759,-3.075185,-4.068774,-2.605431,-7.539131,-9.534906,-8.171043,-0.562587,-2.259596,-9.878179,7.774466,-9.057425,-2.164042,8.219561,7.734947,-9.281172,-6.761344,1.977588,-7.748657,7.874216,-6.873788,-2.332154,-1.967622,0.898679,2.581795,7.455055,-0.291191,-8.892976,-2.613750,0.037633,7.773554,-9.032827,-6.584385,-8.217740,-0.789101,-8.146824,9.741807,1.169753,6.745708,5.170069,-5.523831,1.618850,-8.691590,5.569193,8.831641,-7.408110,7.425200,-0.152461,-1.480043,-8.167339,9.481494,5.176388,2.688381,-2.282203,-5.861294,4.727219,-3.506360,0.155166,9.367895,-1.024676,8.274796,0.841797,6.562348,8.800259,-6.801059,-8.004258,-3.012889,4.179243,1.511772,-7.283047,7.621185,-4.658237,3.112002,-1.617479,5.850140,5.388939,9.258730,8.655376,7.789889,4.439249,-8.080230,6.347387,9.134924,-6.054830,-6.912307,-1.985705,5.621925,-1.683098,-0.319343,8.317881,8.832200,3.076237,4.561545,8.561142,0.841859,-5.911820,9.724317,-4.545299,-6.749457,8.723467], dtype = "float32")#candidate|4398|(165,)|const|float32
call_4397 = func_4025_call(relay.reshape(const_4398.astype('float32'), [1, 15, 11]))
call_4399 = func_4025_call(relay.reshape(const_4398.astype('float32'), [1, 15, 11]))
func_134_call = mod.get_global_var('func_134')
func_137_call = mutated_mod.get_global_var('func_137')
const_4405 = relay.const([7.099106,-4.231954,5.132288,7.486661,-6.013518,1.129599,6.069723,8.791966,4.092616,-2.527826,8.212781,-6.927408,-3.671588,4.455502,6.593611,9.697541,-3.713769,9.385156,-2.884326,-2.551394,-3.693935,4.367503,4.940669,3.183128,-9.604184,-6.217939,-4.282631,5.199889,-3.686155,1.837472,-3.795141,-6.655437,-0.592165,9.284363,-4.713471,-0.819987,3.095959,-7.210037,-2.964755,-7.404002,9.196733,-6.720538,1.789330,-6.168121,-2.638771,0.485714,8.699632,6.607759], dtype = "float32")#candidate|4405|(48,)|const|float32
call_4404 = relay.TupleGetItem(func_134_call(relay.reshape(const_4405.astype('float32'), [16, 3, 1])), 2)
call_4406 = relay.TupleGetItem(func_137_call(relay.reshape(const_4405.astype('float32'), [16, 3, 1])), 2)
bop_4410 = relay.right_shift(call_4397.astype('int16'), relay.reshape(const_4398.astype('int16'), relay.shape_of(call_4397))) # shape=(1, 15, 11)
bop_4413 = relay.right_shift(call_4399.astype('int16'), relay.reshape(const_4398.astype('int16'), relay.shape_of(call_4399))) # shape=(1, 15, 11)
uop_4414 = relay.cosh(const_4398.astype('float32')) # shape=(165,)
output = relay.Tuple([call_4380,call_4404,const_4405,bop_4410,uop_4414,])
output2 = relay.Tuple([call_4381,call_4406,const_4405,bop_4413,uop_4414,])
func_4416 = relay.Function([], output)
mod['func_4416'] = func_4416
mod = relay.transform.InferType()(mod)
mutated_mod['func_4416'] = func_4416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4416_call = mutated_mod.get_global_var('func_4416')
call_4417 = func_4416_call()
output = call_4417
func_4418 = relay.Function([], output)
mutated_mod['func_4418'] = func_4418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3974_call = mod.get_global_var('func_3974')
func_3976_call = mutated_mod.get_global_var('func_3976')
call_4448 = relay.TupleGetItem(func_3974_call(), 0)
call_4449 = relay.TupleGetItem(func_3976_call(), 0)
func_32_call = mod.get_global_var('func_32')
func_36_call = mutated_mod.get_global_var('func_36')
const_4460 = relay.const(2, dtype = "int16")#candidate|4460|()|const|int16
const_4461 = relay.const([2,2,-9,9,-4,7,9,-10,6,-7,-5,-2,-6,-2,-10,2,3,10,-3,-10,-4,-2,1,-3,8,-9,-6,-1,-6,3,-5,10,8,-4,6,7,10,-2,3,-1,7,5,9,-8,-8,2,7,-5,-1,8,-2,-9,4,5,-1,10,6,-3,-1,3,3,7,9,-5,-1,-10,-7,7,-2,-9,-1,-3,4,4,-7,9,2,10,-9,2,7,5,10,-5,6,-9,5,-2,10,-8,-2,-8,4,6,2,-5,9,-5,4,3,-6,-5,-6,1,4,4,-6,-10,8,-6,-3,1,3,-1,8,4,-8,-6,-7,-2,-6,-7,-7,-5,-5,7,-3,8,-6,2,-6,-9,-5,-1,-2,3,7,2,-9,9,7,-1,-6,-6,-1,8,5,2,-4,2,3,-6,9,4,-5,1,-1,-4,-3,-9,9,10,9,-3,4,-1,-3,9,6,-2,-8,-5,-7,-6,-9,5,-4,-1,-8,6,-4,-10,7,-10,5,-6,-5,4,1,-2,-6,-10,3,-3,-8,6,-9,8,8,-1,-8,-7,-9,4,-8,-10,-3,-5,4,1,9,3,-4,6,-8,6,-3,10,-2,1,1,6,-4,2,1,9,3,-9,-4,10,1,10,6,5,-6,-10,2,1,-7,3,8,-7,5,-5,-1,10,10,-4,-2,6,7,-5,2,-4,-8,-4,-10,-5,-6,-3,7,7,-5,-6,1,-7,10,9,7,-10,2,-1,-6,9,-7,9,6,-3,-8,-10,-5,-1,-10,-6,6,1,-9,-2,7,8,-2,1,-4,10,7,3,8,4,6,4,5,10,8,-10,-1,-10,-5,2,-7,-1,4,-4,-2,2,-10,8,2,1,9,-4,2,-5,4,6,2,6,3,-10,-10,-1,-7,-8,-8,-6,2,7,-3,-1,-10,2,4,9,10,2,-10,-2,3,-7,-9,-8,-4,-9,7,-5,6,-10,5,-10,9,-5,-7,7,5,3,-6,8,-7,-6,-6,-3,8,5,-3,8,-6,-2,-10,-5,2,2,8,-9,-7,-9,-7,7,8,-1,-4,-2,4,3,2,10,5,-3,3,10,-8,-5,3,-2,-4,1,-2,10,8,1,-3,-7,2,-3,-3,-5,2,-6,3,-8,-1,-7,-4,10,-4,6,-1,-6,-3,7,2,7,-3,-10,2,-5,7,-5,-1,-4,5,2,1,8,7,-9,9,-2,2,-1,10,-7,-8,-9,-9,-5,3,2,-7,7,6,-2,6,9,10,2,6,8,-4,-4,-9,9,8,5,10,1,2,2,9,-5,1,-10,7,-10,4,3,-5,-7,-4,10,6,1,-5,5,-4,5,-6,-2,-3,-3,6,-2,10,6,2,7,9,6,-1,-2,-9,-2,-3,7,7,-5,-8,6,6,2,-1,-6,7,4,10,6,-2,4,3,1,3,-2,3,-3,-1,-7,-3,3,-4,1,3,-3,4,-2,1,6,1,7,8,-5,4,-3,6,1,3,3,-7,-2,-4,-9,-10,-8,-7,-5,6,5,-3,-1,4,-8,-1,-4,-9,-1,-1,-7,7,1,4,-8,5,2,-2,8,4,3,-9,4,-5,1,5,-6,5,6,-3,-10,8,8,-5,-5,4,-4,9,1,3,10,9,-2,-5,-2,5,-9,-3,4,-5,7,-9,2,-9,1,-4,3,9,8,6,-2,-1,5,-10,-4,-7,6,-1,5,-3,5,-9,1,-4,2,8,-10,-7,-4,3,5,8,8,-2,-3,-1,-2,-7,-8,3,-10,4,-9,6,-7,1,10,3,-9,3,2,10,-4,-1,7,-2,3,8,6,-5,-4,-7,6,-2,-9,-6,-9,-8,-1,-7,1,7,7,7,-1,8,-1,-10,9,9,-7,10,1,-8,5,3,5,9,7,-5,10,-8,2,-7,9,8,3,1,6,-6,-5,6,-1,1,-2,-8,4,3,-3,-7,-8,-10,5,-3,-1,9,-8,-7,1,-6,-6,5,-2,4,-1,-8,7,10,-9,2,-1,-5,5,7,10,9,10,4,6,-7,-10,-8,3,9,-10,-4,-2,-2,-3,-5,2,8,9,2,-1,-2,4,-10,-7,-2,9,-10,5,8,-10,-10,6,-4,2,-8,-7,-6,10,1,-2,-4,9,2,5,1,-2,8,8,2,-2,-3,-3,-3,2,10,-6,-4,8,8,-5,-9,-9,6,-10,9,1,2,-8,4,-8,-5,9,-1,7,-8,-10,1,3,1,6,-7,10,10,4,-10,-10,-1,8,6,3,10,-3,5,10,1,-3,-4,10,3,-8,10,-1,9,-3,5,-10,-9,5,9,9,-3,2,7,1,-8,4,1,7,3,2,5,-2,-5,6,4,7,10,-7,1,-7,-1,7,4,-9,-5,6,2,-2,-5,-10,8,8,-7,2,-3,7,10,3,7,3,-2,1,7,3,-6,2,-10,-9,-5,5,2,3,5,7,9,-3,1,7,1,-1,-4,-8,-3,-1,10,10,9,3,1,-5,2,-3,4,-10,-1,10,5,-10,-9,-1,-9,2,-2,10,-6,4,-3,-10,9,1,-2,3,-3,8,-4,-10,9,10,8,7,-7,10,7,8,-2,6,-4,-3,-2,8,1,-8,1,-2,-2,-10,9,8,2,2,4,7,-6,4,3,-3,-1,3,-3,-10,-3,1,-2,7,-4,7,-6,-6,7,2,4,-4,-8,-7,-3,5,9,7,-6,5,-3,8,1,6,7,-7,3,6,-10,4,1,-9,-7,2,-1,3,-3,5,-6,1,-9,4,2,5,4,5,-1,10,9,1,-10,5,-7,7,-1,7,-7,-4,-3,-10,10,-4,8,-9,5,8,-6,1,3,-7,4,-6,4,-1,1,-4,5,-2,-4,-1,-2,-8,-9,-2,-7,-7,-2,4,-5,3,-4,-6,8,3,8,-3,-10,7,-10,-2,-7,-7,-3,4,-6,1,7,1,5,7,8,2,-3,-7,-9,7,7,-4,7,-8,7,6,-7,9,-3,-5,-10,-8,9,5,4,5,-8,-4,9,9,-1,1,-2,-2,-9,-5,-4,-2,-8,-1,9,-6,5,3,1,-9,6,10,10,-2,-9,-10,10,5,8,-10,2,-5,3,-10,-9,7,-8,-5,1,9,-6,2,-2,-4,5,-7,-8,-1,-10,7,9,-7,5,7,-1,7,-7,3,-7,10,-1,-6,-1,1,-9,1,6,-9,9,-8,-2,8,-3,-1,-10,-2,-9,-9,9,-2,-10,-8,-10,-7,3,-1,-10,6,-10,4,7,-10,-6,7,-8,-4,3,-3,1,3,-5,10,-3,-9,-5,-4,10,-1,10,-2,8,-7,9,5,1,-3,4,2,-2,-2,-3,-1,10,-9,-9,-1,6,9], dtype = "int16")#candidate|4461|(1248,)|const|int16
call_4459 = relay.TupleGetItem(func_32_call(relay.reshape(const_4460.astype('int16'), []), relay.reshape(const_4461.astype('int16'), [16, 13, 6]), ), 0)
call_4462 = relay.TupleGetItem(func_36_call(relay.reshape(const_4460.astype('int16'), []), relay.reshape(const_4461.astype('int16'), [16, 13, 6]), ), 0)
output = relay.Tuple([call_4448,call_4459,const_4460,const_4461,])
output2 = relay.Tuple([call_4449,call_4462,const_4460,const_4461,])
func_4488 = relay.Function([], output)
mod['func_4488'] = func_4488
mod = relay.transform.InferType()(mod)
output = func_4488()
func_4489 = relay.Function([], output)
mutated_mod['func_4489'] = func_4489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4416_call = mod.get_global_var('func_4416')
func_4418_call = mutated_mod.get_global_var('func_4418')
call_4590 = relay.TupleGetItem(func_4416_call(), 3)
call_4591 = relay.TupleGetItem(func_4418_call(), 3)
output = relay.Tuple([call_4590,])
output2 = relay.Tuple([call_4591,])
func_4592 = relay.Function([], output)
mod['func_4592'] = func_4592
mod = relay.transform.InferType()(mod)
mutated_mod['func_4592'] = func_4592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4592_call = mutated_mod.get_global_var('func_4592')
call_4593 = func_4592_call()
output = call_4593
func_4594 = relay.Function([], output)
mutated_mod['func_4594'] = func_4594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3974_call = mod.get_global_var('func_3974')
func_3976_call = mutated_mod.get_global_var('func_3976')
call_4627 = relay.TupleGetItem(func_3974_call(), 0)
call_4628 = relay.TupleGetItem(func_3976_call(), 0)
output = relay.Tuple([call_4627,])
output2 = relay.Tuple([call_4628,])
func_4633 = relay.Function([], output)
mod['func_4633'] = func_4633
mod = relay.transform.InferType()(mod)
output = func_4633()
func_4634 = relay.Function([], output)
mutated_mod['func_4634'] = func_4634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4200_call = mod.get_global_var('func_4200')
func_4202_call = mutated_mod.get_global_var('func_4202')
call_4686 = relay.TupleGetItem(func_4200_call(), 0)
call_4687 = relay.TupleGetItem(func_4202_call(), 0)
uop_4689 = relay.log(call_4686.astype('float64')) # shape=(4, 7, 16)
uop_4691 = relay.log(call_4687.astype('float64')) # shape=(4, 7, 16)
uop_4696 = relay.asinh(uop_4689.astype('float32')) # shape=(4, 7, 16)
uop_4698 = relay.asinh(uop_4691.astype('float32')) # shape=(4, 7, 16)
output = uop_4696
output2 = uop_4698
func_4699 = relay.Function([], output)
mod['func_4699'] = func_4699
mod = relay.transform.InferType()(mod)
output = func_4699()
func_4700 = relay.Function([], output)
mutated_mod['func_4700'] = func_4700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4416_call = mod.get_global_var('func_4416')
func_4418_call = mutated_mod.get_global_var('func_4418')
call_4852 = relay.TupleGetItem(func_4416_call(), 1)
call_4853 = relay.TupleGetItem(func_4418_call(), 1)
var_4880 = relay.var("var_4880", dtype = "int16", shape = (6, 3, 7))#candidate|4880|(6, 3, 7)|var|int16
bop_4881 = relay.logical_or(call_4852.astype('bool'), var_4880.astype('bool')) # shape=(6, 3, 7)
bop_4884 = relay.logical_or(call_4853.astype('bool'), var_4880.astype('bool')) # shape=(6, 3, 7)
func_4216_call = mod.get_global_var('func_4216')
func_4217_call = mutated_mod.get_global_var('func_4217')
call_4888 = relay.TupleGetItem(func_4216_call(), 0)
call_4889 = relay.TupleGetItem(func_4217_call(), 0)
func_4592_call = mod.get_global_var('func_4592')
func_4594_call = mutated_mod.get_global_var('func_4594')
call_4915 = relay.TupleGetItem(func_4592_call(), 0)
call_4916 = relay.TupleGetItem(func_4594_call(), 0)
func_4092_call = mod.get_global_var('func_4092')
func_4094_call = mutated_mod.get_global_var('func_4094')
call_4920 = relay.TupleGetItem(func_4092_call(), 2)
call_4921 = relay.TupleGetItem(func_4094_call(), 2)
uop_4927 = relay.cosh(var_4880.astype('float64')) # shape=(6, 3, 7)
output = relay.Tuple([bop_4881,call_4888,call_4915,call_4920,uop_4927,])
output2 = relay.Tuple([bop_4884,call_4889,call_4916,call_4921,uop_4927,])
func_4929 = relay.Function([var_4880,], output)
mod['func_4929'] = func_4929
mod = relay.transform.InferType()(mod)
var_4930 = relay.var("var_4930", dtype = "int16", shape = (6, 3, 7))#candidate|4930|(6, 3, 7)|var|int16
output = func_4929(var_4930)
func_4931 = relay.Function([var_4930], output)
mutated_mod['func_4931'] = func_4931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3378_call = mod.get_global_var('func_3378')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_4935 = relay.TupleGetItem(func_3378_call(), 0)
call_4936 = relay.TupleGetItem(func_3379_call(), 0)
func_4699_call = mod.get_global_var('func_4699')
func_4700_call = mutated_mod.get_global_var('func_4700')
call_4945 = func_4699_call()
call_4946 = func_4699_call()
func_3245_call = mod.get_global_var('func_3245')
func_3248_call = mutated_mod.get_global_var('func_3248')
var_4955 = relay.var("var_4955", dtype = "int32", shape = (242, 4))#candidate|4955|(242, 4)|var|int32
call_4954 = relay.TupleGetItem(func_3245_call(relay.reshape(var_4955.astype('int32'), [968,])), 0)
call_4956 = relay.TupleGetItem(func_3248_call(relay.reshape(var_4955.astype('int32'), [968,])), 0)
output = relay.Tuple([call_4935,call_4945,call_4954,var_4955,])
output2 = relay.Tuple([call_4936,call_4946,call_4956,var_4955,])
func_4957 = relay.Function([var_4955,], output)
mod['func_4957'] = func_4957
mod = relay.transform.InferType()(mod)
var_4958 = relay.var("var_4958", dtype = "int32", shape = (242, 4))#candidate|4958|(242, 4)|var|int32
output = func_4957(var_4958)
func_4959 = relay.Function([var_4958], output)
mutated_mod['func_4959'] = func_4959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3378_call = mod.get_global_var('func_3378')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_5066 = relay.TupleGetItem(func_3378_call(), 0)
call_5067 = relay.TupleGetItem(func_3379_call(), 0)
func_1271_call = mod.get_global_var('func_1271')
func_1274_call = mutated_mod.get_global_var('func_1274')
const_5075 = relay.const([9,5,-3,-7,2,-1,10,-3,-8,8,8,1,7,1,10,-9,9,10,2,7,9,-6,1,-10,2,4,-4,-3,1,-8,-4,-10,4,9,9,10,3,9,-7,-4,6,3,2,-2,10,4,8,10,-7,-8,4,-4,-5,-2,3,5,5,1,4,10,5,9,-9,-7,-8,3,-4,1,-2,-6,-1,4,1,-3,1,10,-9,-1,-7,-5,5,9,6,1,-4,-3,-7,1,6,-4,9,-5,2,9,6,6,-1,-1,8,-5,8,-7,6,-3,-4,-9,1,-3,2,2,-5,9,7,5,1,-6,-7,-4,-5,-5,-5,3,-10,9,-10,10,-1,-3,9,4,5,9,-4,-7,1,7,-8,-10,-9,-8,9,-2,9,1,-3,-9,4,2,-2,-7,1,-9,-6,-7,9,2,5,10,-3,-3,-5,-5,-2,-9,6,-9,1,7,-8,-4,2,-5,-4,-3,8,-1,10,-4,-5,-9,10,-1,6,10,-4,9,2,7,2,1,7,5,-10,-10,-3,-7,6,3,5,4,-8,5,8,4,-3,-10,-8,8,5,2,-6,8,-6,4,4,9,10,2,8,-7,-2,1,-3,8,6,3,-1,-6,2,8,-5,-8,5,-2,-5,-3,-8,-6,3,7,6,-3,-3,-5,6,-2,2,-7,-9,9,-10,10,-9,8,-2,5,-9,6,7,6,7,-6,8,-6,-2,1,-1,1,9,4,-8,-9,7,-8,9,10,2,4,9,6,-7,3,-10,-8,4,8,2,9,-3,6,1,-7,-1,-4,3,2,-9,-9,-9,-9,2,-7,5,6,2,-1,9,5,-8,-10,9,2,7,8,-10,-1,4,-7,-3,-8,-6,-8,-6,-4,-2,-7,6,-2,1,-9,6,-3,5,1,2,2,10,-10,-5,-3,9,-9,-1,8,-10,5,6,-8,8,10,1,-8,4,-9,4,-7,2,-10,8,5,4,5,7,-2,5,5,-3,-8,2,-7,9,-3,-9,-6,-10,4,2,-5,-3,4,-8,5,-3,-10,10,3,-9,-4,9,3,2,7,-7,3,-9,1,7,9,-8,-6,6,10,8,-4,-4,8,6,-10,-8,-6,-1,6,-10,-9,-4,7,-6,5,-10,3,-8,10,4,9,-4,-1,-10,4,-2,8,-9,7,-3,1,1,-9,-5,-5,2,3,6,2,8,6,8,7,-1,5,7,1,-2,-9,3,5,7,-1,9,9,-9,9,-8,-7,3,5,1,-9,6,7,-3,5,8,1,9,-7,4,8,-6,-1,10,-8,1,2,-5,-7,1,6,-7,-9,8,7,-5,4,-1,-8,-10,-9,-2,-10,-2,-5,10,2,-10,-6,-8,10,9,5,-8,2,-9,-1,-4,10,-10,8,-8,-7,-3,7,-7,7,9,-7,-4,5,2,6,8,1,-1,-8,-1,-7,2,-6,-1,7,4,6,-5,-1,8,-4,-3,6,3,-5,1,-9,-8,-1,9,-6,4,-10,5,-7,-3,1,5,2,-1,4,-10,6,9,6,7,-10,-6,-1,6,-5,-6,-4,4,-1,-4,-9,-6,-6,-4,3,-4,4,3,-10,1,7,2,10,-9,2,-4,10,8,6,-8,-5,2,-2,-5,6,-10,5,4,9,-6,7,-2,3,2,-3,-8,5,-8,-7,-1,-8,3,2,-1,-9,2,9,2,5,1,8,-10,1,10,-10,-8,2,6,-1,5,-5,7,-2,-8,-4,-8,-8,5,-6,-5,6,9,-9,1,3,1,4,4,6,4,-8,-4,9,-8,-4,3,8,-7,-8,-6,-4,-9,-4,4,-2,4,9,10,9,6,1,-3,-3,8,9,-10,-3,-1,9,-9,-2,-5,-10,2,1,3,7,-10,6,-10,2,-6,-1,3,2,3,4,-6,2,-4,-6,-4,-2,-1,-4,1,-3,2,6,5,7,2,5,8,8,10,-8,4,1,-8,8,-1,-8,6,8,4,9,-9,-5,-4,6,6,-8,-3,6,4,-1,-7,-9,5,-4,5,4,-8,10,2,5,1,8,4,5,8,-6,7,9,5,8,5,-5,-2,4,-2,-2,2,-8,4,6,-9,8,-10,-7,-10,-4,-8,-7,-1,-4,10,7,-6,10,-6,3,-3,-3,-9,5,-7,4,5,6,2,10,-6,8,1,3,6,-5,6,-9,10,4,-2,-5,-10,4,2,6,2,1,1,1,9,-8,7,2,3,7,4,4,-4,6,4,-6,-5,10,-3,5,8,-1,-1,2,-10,-1,10,6,4,2,5,6,6,-8,-6,5,6,-9,-10,3,10,4,-9,-6,4,3,-7,-9,-7,-4,-10,9,8,5,8,7,3,-10,4,5,3,7,-9,2,5,-10,-6,5,8,-1,-9,6,10,4,1,1,-9,1,9,7,1,1,8,-3,-7,5,-3,-7,9,8,-3,4,-9,4,-10,2,-8,-1,10,-3,8,-2,-10,-5,-2,-9,-4,-1,-7,1,-3,1,7,-6,-5,3,-8,4,5,5,4,6,-6,-1,9,-2,-6,-4,4,9,10,3,-8,-5,8,-4,-3,-10,-7,-4,4,1,-9,-2,-8,2,-4,7,2,9], dtype = "int32")#candidate|5075|(968,)|const|int32
call_5074 = relay.TupleGetItem(func_1271_call(relay.reshape(const_5075.astype('int32'), [8, 11, 11])), 0)
call_5076 = relay.TupleGetItem(func_1274_call(relay.reshape(const_5075.astype('int32'), [8, 11, 11])), 0)
output = relay.Tuple([call_5066,call_5074,const_5075,])
output2 = relay.Tuple([call_5067,call_5076,const_5075,])
func_5103 = relay.Function([], output)
mod['func_5103'] = func_5103
mod = relay.transform.InferType()(mod)
mutated_mod['func_5103'] = func_5103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5103_call = mutated_mod.get_global_var('func_5103')
call_5104 = func_5103_call()
output = call_5104
func_5105 = relay.Function([], output)
mutated_mod['func_5105'] = func_5105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mod.get_global_var('func_4488')
func_4489_call = mutated_mod.get_global_var('func_4489')
call_5112 = relay.TupleGetItem(func_4488_call(), 0)
call_5113 = relay.TupleGetItem(func_4489_call(), 0)
output = call_5112
output2 = call_5113
func_5114 = relay.Function([], output)
mod['func_5114'] = func_5114
mod = relay.transform.InferType()(mod)
output = func_5114()
func_5115 = relay.Function([], output)
mutated_mod['func_5115'] = func_5115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4416_call = mod.get_global_var('func_4416')
func_4418_call = mutated_mod.get_global_var('func_4418')
call_5119 = relay.TupleGetItem(func_4416_call(), 3)
call_5120 = relay.TupleGetItem(func_4418_call(), 3)
func_1189_call = mod.get_global_var('func_1189')
func_1192_call = mutated_mod.get_global_var('func_1192')
var_5122 = relay.var("var_5122", dtype = "int16", shape = ())#candidate|5122|()|var|int16
call_5121 = relay.TupleGetItem(func_1189_call(relay.reshape(var_5122.astype('int16'), [])), 1)
call_5123 = relay.TupleGetItem(func_1192_call(relay.reshape(var_5122.astype('int16'), [])), 1)
func_1271_call = mod.get_global_var('func_1271')
func_1274_call = mutated_mod.get_global_var('func_1274')
var_5166 = relay.var("var_5166", dtype = "int32", shape = (484, 2))#candidate|5166|(484, 2)|var|int32
call_5165 = relay.TupleGetItem(func_1271_call(relay.reshape(var_5166.astype('int32'), [8, 11, 11])), 0)
call_5167 = relay.TupleGetItem(func_1274_call(relay.reshape(var_5166.astype('int32'), [8, 11, 11])), 0)
bop_5173 = relay.logical_and(call_5165.astype('bool'), relay.reshape(var_5166.astype('bool'), relay.shape_of(call_5165))) # shape=(8, 11, 11)
bop_5176 = relay.logical_and(call_5167.astype('bool'), relay.reshape(var_5166.astype('bool'), relay.shape_of(call_5167))) # shape=(8, 11, 11)
func_32_call = mod.get_global_var('func_32')
func_36_call = mutated_mod.get_global_var('func_36')
const_5185 = relay.const([7,-5,-5,8,-4,-4,10,-6,-2,-5,7,-3,-3,2,-10,-1,7,4,1,-7,-4,9,-5,-4,-3,9,3,4,9,-1,5,8,6,-5,5,-1,3,3,-4,8,-8,-9,1,6,3,2,7,-9,1,9,8,-5,1,10,4,3,6,-10,-9,-10,-6,-8,2,8,-3,-9,9,1,-1,7,10,-5,4,-5,6,5,8,4,3,3,-1,5,8,1,-9,-7,8,5,-9,-7,6,6,-5,3,-4,-4,-1,-4,4,-8,-6,2,-7,8,-9,-5,-6,8,3,9,-8,-10,-1,7,4,10,2,-3,-1,9,7,7,-2,5,8,3,-7,6,9,-3,9,-2,7,2,-8,10,-2,9,3,9,7,9,5,10,-9,1,-8,10,10,-7,-10,6,-5,-6,-8,-2,-9,9,-8,-1,3,6,-5,-1,6,-5,-5,10,7,-8,3,10,-3,-7,7,8,8,-3,8,-9,-2,-5,-5,-6,-3,7,-4,-9,7,8,3,-6,-9,5,-5,-4,-9,3,-3,6,3,1,4,4,5,-5,-5,-1,-2,-2,1,3,6,-3,4,7,7,-5,-10,-2,1,5,-10,10,5,8,-9,-7,6,-8,-1,10,-4,1,-5,1,2,-2,6,-4,-6,-8,-3,2,5,2,4,6,-10,-4,-1,1,-4,-8,4,1,4,5,-2,-7,-8,5,-4,1,-9,8,-1,5,-3,6,-5,-9,6,-6,-2,9,3,-3,-6,-10,-9,-9,9,-8,9,2,-2,-4,-5,-1,5,-9,4,5,6,7,4,-8,1,5,-1,-3,8,-5,10,-1,6,3,-4,1,2,5,-5,-10,10,-6,2,4,-7,-2,5,-1,-7,-2,-1,-1,5,2,1,-6,-7,10,2,-9,2,-7,7,9,-2,-5,4,-7,-1,8,-1,1,-9,-5,-6,9,8,-7,3,10,-7,-8,8,1,-6,-1,5,5,6,4,-6,2,-8,10,-4,-7,-3,3,2,-3,3,7,10,4,4,8,9,-6,10,8,-6,7,2,3,4,-4,1,-6,5,-9,-6,-1,-8,3,2,-3,8,8,-10,4,8,-10,1,-2,-6,7,7,-10,-6,-4,-6,-7,-9,-4,7,-4,8,-3,-1,-7,-5,10,4,-10,3,-9,3,5,2,-4,7,-3,1,4,-3,1,-5,2,3,10,-8,-6,6,6,9,8,-5,1,-8,-9,5,-9,-3,10,6,1,-10,6,8,-5,-1,5,5,-5,-2,-4,-4,-7,-7,-10,-8,7,-8,5,9,5,4,-8,-7,-4,7,5,-4,-8,-1,3,1,-9,-7,7,4,-5,-3,9,-6,-8,-4,6,-7,-8,5,8,-3,9,9,5,-9,6,-5,-1,-10,4,1,-10,4,-5,-9,-7,9,-6,1,6,4,-1,6,8,10,-8,3,9,7,-8,-8,3,-10,-8,8,2,-5,-1,-8,5,-4,-9,2,-4,-4,7,7,1,-7,-10,-2,-9,9,8,-10,5,5,-8,-2,7,-5,9,-4,-9,9,8,-2,-10,6,8,10,-9,-7,-3,-1,6,7,-8,-6,-4,6,8,-8,1,-6,-3,2,1,-10,8,-9,7,-2,8,10,2,-5,-4,-9,-10,-3,1,-4,-3,-1,4,-7,-7,-6,4,-9,1,-9,9,-9,-2,10,8,-10,-8,3,-10,-5,-7,3,4,-2,-6,-2,-8,1,-3,-5,-7,-1,-5,-7,5,3,-10,7,-6,10,9,-6,3,9,10,-7,1,2,-4,-3,8,3,10,-3,-9,10,-5,5,6,3,9,3,-10,6,-3,-3,2,-10,-5,1,-5,2,-5,-7,-10,-7,2,9,-6,-8,-3,-1,-8,-9,1,5,-9,8,-3,-7,7,1,7,-5,-2,-3,5,-2,-4,-4,-1,10,5,5,5,10,-9,3,-9,-10,-1,-8,6,9,-10,-4,-1,10,4,-3,-1,-1,4,-4,-2,5,-7,10,-2,-3,2,-5,2,1,3,5,7,-4,-9,3,3,5,-3,-5,-5,-9,-6,10,-2,-3,6,-8,-5,-5,1,6,-8,-7,-7,7,-1,-7,-1,-4,-9,-7,-7,8,-9,6,3,-7,-4,-1,7,1,4,-2,6,-9,4,-1,-5,3,-4,-6,-5,-7,9,10,-7,3,-8,8,2,-10,-3,7,2,2,3,10,-2,6,6,-7,-4,6,-7,9,-2,-6,-10,3,-5,7,-6,5,-5,-1,-7,-5,1,5,6,7,-3,-2,-8,-6,-3,-2,-9,7,9,4,-8,-9,2,7,7,5,9,-2,2,1,-10,-4,-1,2,1,-8,-7,-8,-10,-7,6,-7,-9,3,9,-9,-6,-8,6,-1,-6,-5,-7,-1,5,3,2,-8,1,4,-5,8,6,2,-4,10,-3,2,-8,-4,3,-6,-7,5,8,-7,2,6,-9,-1,-1,-10,6,2,-7,6,-6,-4,-9,-1,8,-1,3,-8,6,-5,10,9,9,9,10,3,-8,-10,-6,5,9,4,-3,-4,4,4,-5,10,-6,8,-2,3,10,8,-6,-1,9,7,-10,9,-10,-7,-7,9,-6,3,-9,-10,2,6,3,3,5,-3,10,-2,-8,5,8,1,10,1,-2,10,-1,10,-6,-7,2,9,-4,4,9,-9,5,10,6,7,-4,-10,5,-10,-2,3,7,-9,2,4,5,8,-3,-9,10,7,-5,9,-8,1,6,-5,8,3,-9,9,10,6,-6,4,-3,9,9,-7,9,-6,-6,7,9,1,-4,-2,10,10,2,-1,5,2,2,-1,-9,-7,2,-6,1,-8,10,1,-7,5,5,4,-9,-5,6,-1,7,-10,1,1,-5,-7,9,4,-9,5,6,7,8,6,10,-10,7,-7,10,-10,-6,-2,5,9,7,-1,5,-8,-9,-6,-4,-7,10,9,1,5,-6,-10,-2,-8,-5,2,4,3,-6,2,7,1,3,-7,1,10,10,-10,-1,1,-5,3,3,-5,-7,7,8,3,-9,-6,4,-8,7,7,6,3,-1,3,4,-10,-6,-5,8,8,10,-10,1,9,5,8,-5,5,7,7,7,-2,-8,-9,-5,-8,2,-9,5,1,-5,-3,9,-6,5,8,3,-7,7,1,-3,-6,6,-8,-5,-3,9,1,-6,-6,10,-5,2,-8,-5,10,8,5,-5,-7,5,3,5,-3,2,-4,-1,-9,-8,-3,-8,3,3,1,4,-8,-5,-2,-4,-3,-4,9,5,-10,5,-8,-8,-10,-2,7,-9,2,6,6,8,-6,-8,8,5,8,1,4,8,8,-4,-3,-2,7,-8,-7,4,-9,-2,-10,4,8,4,3,-7,2,-8,4,-10], dtype = "int16")#candidate|5185|(1248,)|const|int16
call_5184 = relay.TupleGetItem(func_32_call(relay.reshape(var_5122.astype('int16'), []), relay.reshape(const_5185.astype('int16'), [16, 13, 6]), ), 0)
call_5186 = relay.TupleGetItem(func_36_call(relay.reshape(var_5122.astype('int16'), []), relay.reshape(const_5185.astype('int16'), [16, 13, 6]), ), 0)
output = relay.Tuple([call_5119,call_5121,var_5122,bop_5173,call_5184,const_5185,])
output2 = relay.Tuple([call_5120,call_5123,var_5122,bop_5176,call_5186,const_5185,])
func_5188 = relay.Function([var_5122,var_5166,], output)
mod['func_5188'] = func_5188
mod = relay.transform.InferType()(mod)
var_5189 = relay.var("var_5189", dtype = "int16", shape = ())#candidate|5189|()|var|int16
var_5190 = relay.var("var_5190", dtype = "int32", shape = (484, 2))#candidate|5190|(484, 2)|var|int32
output = func_5188(var_5189,var_5190,)
func_5191 = relay.Function([var_5189,var_5190,], output)
mutated_mod['func_5191'] = func_5191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4416_call = mod.get_global_var('func_4416')
func_4418_call = mutated_mod.get_global_var('func_4418')
call_5266 = relay.TupleGetItem(func_4416_call(), 0)
call_5267 = relay.TupleGetItem(func_4418_call(), 0)
func_4216_call = mod.get_global_var('func_4216')
func_4217_call = mutated_mod.get_global_var('func_4217')
call_5274 = relay.TupleGetItem(func_4216_call(), 0)
call_5275 = relay.TupleGetItem(func_4217_call(), 0)
output = relay.Tuple([call_5266,call_5274,])
output2 = relay.Tuple([call_5267,call_5275,])
func_5282 = relay.Function([], output)
mod['func_5282'] = func_5282
mod = relay.transform.InferType()(mod)
mutated_mod['func_5282'] = func_5282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5282_call = mutated_mod.get_global_var('func_5282')
call_5283 = func_5282_call()
output = call_5283
func_5284 = relay.Function([], output)
mutated_mod['func_5284'] = func_5284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4633_call = mod.get_global_var('func_4633')
func_4634_call = mutated_mod.get_global_var('func_4634')
call_5343 = relay.TupleGetItem(func_4633_call(), 0)
call_5344 = relay.TupleGetItem(func_4634_call(), 0)
func_3558_call = mod.get_global_var('func_3558')
func_3562_call = mutated_mod.get_global_var('func_3562')
var_5347 = relay.var("var_5347", dtype = "uint64", shape = (162,))#candidate|5347|(162,)|var|uint64
call_5346 = relay.TupleGetItem(func_3558_call(relay.reshape(var_5347.astype('uint64'), [6, 3, 9]), relay.reshape(var_5347.astype('uint64'), [6, 3, 9]), ), 0)
call_5348 = relay.TupleGetItem(func_3562_call(relay.reshape(var_5347.astype('uint64'), [6, 3, 9]), relay.reshape(var_5347.astype('uint64'), [6, 3, 9]), ), 0)
output = relay.Tuple([call_5343,call_5346,var_5347,])
output2 = relay.Tuple([call_5344,call_5348,var_5347,])
func_5373 = relay.Function([var_5347,], output)
mod['func_5373'] = func_5373
mod = relay.transform.InferType()(mod)
var_5374 = relay.var("var_5374", dtype = "uint64", shape = (162,))#candidate|5374|(162,)|var|uint64
output = func_5373(var_5374)
func_5375 = relay.Function([var_5374], output)
mutated_mod['func_5375'] = func_5375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5114_call = mod.get_global_var('func_5114')
func_5115_call = mutated_mod.get_global_var('func_5115')
call_5383 = func_5114_call()
call_5384 = func_5114_call()
func_4092_call = mod.get_global_var('func_4092')
func_4094_call = mutated_mod.get_global_var('func_4094')
call_5387 = relay.TupleGetItem(func_4092_call(), 2)
call_5388 = relay.TupleGetItem(func_4094_call(), 2)
output = relay.Tuple([call_5383,call_5387,])
output2 = relay.Tuple([call_5384,call_5388,])
func_5393 = relay.Function([], output)
mod['func_5393'] = func_5393
mod = relay.transform.InferType()(mod)
output = func_5393()
func_5394 = relay.Function([], output)
mutated_mod['func_5394'] = func_5394
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5423 = relay.var("var_5423", dtype = "uint8", shape = ())#candidate|5423|()|var|uint8
var_5424 = relay.var("var_5424", dtype = "uint8", shape = (8, 1, 11))#candidate|5424|(8, 1, 11)|var|uint8
bop_5425 = relay.bitwise_xor(var_5423.astype('uint8'), var_5424.astype('uint8')) # shape=(8, 1, 11)
output = bop_5425
output2 = bop_5425
func_5439 = relay.Function([var_5423,var_5424,], output)
mod['func_5439'] = func_5439
mod = relay.transform.InferType()(mod)
var_5440 = relay.var("var_5440", dtype = "uint8", shape = ())#candidate|5440|()|var|uint8
var_5441 = relay.var("var_5441", dtype = "uint8", shape = (8, 1, 11))#candidate|5441|(8, 1, 11)|var|uint8
output = func_5439(var_5440,var_5441,)
func_5442 = relay.Function([var_5440,var_5441,], output)
mutated_mod['func_5442'] = func_5442
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5458 = relay.var("var_5458", dtype = "bool", shape = (4, 15, 16))#candidate|5458|(4, 15, 16)|var|bool
var_5459 = relay.var("var_5459", dtype = "bool", shape = (4, 15, 16))#candidate|5459|(4, 15, 16)|var|bool
bop_5460 = relay.logical_or(var_5458.astype('bool'), relay.reshape(var_5459.astype('bool'), relay.shape_of(var_5458))) # shape=(4, 15, 16)
func_4320_call = mod.get_global_var('func_4320')
func_4323_call = mutated_mod.get_global_var('func_4323')
const_5468 = relay.const([[-4,-10,-4,-6,4,6,-4,-5,-9,-9],[10,-2,-2,-8,-1,-10,9,-9,-8,-7],[-10,-8,-9,7,-8,3,-10,-3,-5,9],[-3,10,-9,-6,6,9,8,2,10,5],[6,6,-6,10,-1,-5,8,-10,-6,5],[-2,10,4,7,-1,-4,2,-5,-10,-10],[-4,9,2,-10,-6,2,1,-7,-4,-9],[-9,-4,-4,1,-3,-6,8,8,3,-10],[-5,6,-6,9,9,7,-10,3,9,7],[-5,-7,-8,-2,-5,1,-9,-3,10,-5],[1,-9,10,-6,-5,10,-8,4,-2,-7],[3,6,-5,-6,-3,5,10,5,-7,-10],[-4,4,-7,-7,9,7,-4,-3,-4,-3],[8,8,-2,-10,4,1,10,9,8,-8],[2,8,-8,4,-1,-8,-4,9,-9,-7],[2,-2,-5,-10,9,-1,-3,6,1,-5]], dtype = "int8")#candidate|5468|(16, 10)|const|int8
call_5467 = relay.TupleGetItem(func_4320_call(relay.reshape(const_5468.astype('int8'), [160,])), 3)
call_5469 = relay.TupleGetItem(func_4323_call(relay.reshape(const_5468.astype('int8'), [160,])), 3)
func_32_call = mod.get_global_var('func_32')
func_36_call = mutated_mod.get_global_var('func_36')
var_5479 = relay.var("var_5479", dtype = "int16", shape = ())#candidate|5479|()|var|int16
const_5480 = relay.const([-10,-5,7,6,8,-10,7,-4,8,-9,-9,6,-2,7,1,-7,-9,5,-6,9,-8,-6,5,-10,-1,8,4,4,-6,-9,5,9,10,-9,-4,2,-9,8,8,7,-7,-7,-10,8,-4,-4,-4,-2,-6,3,-1,-3,-3,4,-9,1,7,-8,1,-4,2,3,-4,10,-5,-1,8,-7,-7,2,-2,-5,-3,6,8,8,-2,7,5,6,-10,6,-5,9,-2,9,4,-2,6,10,2,7,8,-9,-1,10,-6,-1,9,-2,-1,-6,-4,1,-6,5,8,1,-3,-6,9,-10,-6,5,-3,8,-7,-8,-1,-10,-1,-5,4,4,8,6,9,2,6,-1,-4,2,1,2,-10,-1,5,9,-3,9,-4,1,-10,7,2,-7,-4,8,9,-9,2,10,-7,-9,2,6,-4,9,1,3,1,10,9,3,7,8,4,-7,9,-1,-5,-8,3,-6,-3,-8,9,2,-5,7,-8,1,5,3,5,6,3,10,3,-2,5,1,-7,3,9,-6,-6,-1,5,6,9,10,10,-8,8,-7,10,-8,-10,-1,-2,8,-3,9,-4,-6,1,-7,-7,-1,-4,9,-6,-3,7,-7,-2,-7,5,-1,-2,-4,-2,-3,-5,-4,-5,-3,10,-9,-1,-8,-3,-7,2,7,-4,7,9,7,-8,-3,3,-6,-5,2,3,-10,-6,5,7,-1,3,9,2,6,-6,-3,-8,-4,5,-10,9,-7,6,-2,-3,6,-5,-8,2,6,-4,8,7,-4,9,3,3,-4,9,4,1,8,6,4,7,-5,-1,4,7,2,-9,8,4,-2,8,-5,-5,-6,8,-6,-9,7,-8,-10,6,-2,7,-8,2,4,-6,-8,1,-10,3,5,9,-4,2,1,-5,4,5,-1,-3,-6,3,10,7,4,-7,3,-10,2,-2,9,-10,-9,8,-1,-4,-10,8,-4,9,6,-8,2,8,1,9,-7,-4,3,6,-3,-10,9,2,-4,1,8,8,9,-4,-6,-10,-3,9,6,-1,-6,-1,-10,8,7,3,-1,5,-1,-10,-3,1,-5,-3,6,2,-6,6,-8,-9,6,-10,7,8,-4,4,-9,5,-5,-6,2,-10,-3,-4,3,-5,9,5,-1,-3,-1,2,2,-5,6,6,3,8,-4,-4,8,-5,7,5,3,2,-5,-6,-2,1,-6,7,7,-3,10,10,-9,6,-7,5,-7,5,-1,-8,-2,2,10,-7,-5,-7,-8,-4,4,-6,-1,2,-7,-1,-8,3,9,-7,-3,5,-5,-2,3,-1,-5,9,-7,5,8,2,4,5,1,4,8,-3,-4,-7,2,-4,-4,-3,4,5,-4,7,6,-3,3,2,-7,-6,9,-9,-1,8,-8,8,-10,1,4,2,-9,7,-4,-5,4,-3,-5,4,7,-3,4,4,-6,8,4,-10,-6,-7,5,-1,-5,2,9,8,-1,-9,-2,-10,2,10,9,9,6,6,-9,-2,3,4,3,8,-3,-10,-3,-5,10,1,5,7,-7,7,-1,-10,-3,8,6,-2,4,6,-4,-10,-8,6,-10,-7,9,3,-2,-6,-7,3,-2,-2,8,-4,1,-9,-5,-2,-9,2,-4,-9,7,-3,2,8,4,-8,8,-5,6,-5,8,-7,-10,-8,-5,-3,2,7,-4,8,4,10,-10,8,8,6,-5,-6,2,-9,1,-9,10,7,-2,-3,2,6,-8,-7,-2,-6,-8,1,-6,-8,4,10,-5,7,-1,-4,4,5,6,2,-5,-6,1,-2,10,4,9,-8,-8,-2,7,-3,5,7,-8,-1,7,5,-7,-7,-8,2,2,2,9,10,-9,1,9,-7,-8,9,8,-5,2,3,-10,9,-5,1,-4,-1,2,-9,9,7,4,3,1,-8,-8,4,4,-10,-2,-4,-2,1,5,4,-6,1,6,-4,10,1,-3,-7,-6,-7,-8,7,5,3,-8,6,-9,-5,-9,-3,3,8,-6,-2,-2,1,9,1,5,-4,2,-10,4,-5,6,-3,-9,-4,8,7,4,-1,7,-5,-7,-7,8,9,3,-9,1,8,5,-8,8,2,-5,-5,6,-5,8,3,9,1,7,1,-2,-9,-2,9,-2,4,-5,-10,-6,5,6,3,1,7,2,5,8,-2,-2,-2,1,4,4,6,-8,7,8,-9,-2,6,-4,-1,-6,5,-1,4,5,-5,-3,-1,1,-7,6,9,-2,-5,5,-1,8,-10,-2,-10,-4,6,-7,10,-4,8,-3,-1,9,5,1,-4,1,7,-10,-2,3,2,8,-7,-9,4,9,8,3,-1,-9,-3,-1,-6,7,-5,-8,10,9,8,-10,1,-10,-9,-2,7,-7,4,1,1,9,-8,-3,3,-6,1,7,-7,-2,-10,-7,8,7,4,-1,6,2,-7,4,8,-4,10,-2,-8,5,9,-5,8,10,-8,8,10,-1,5,-10,-7,-4,6,6,-10,-2,-5,-7,-6,4,7,9,-9,8,-6,-7,-3,-2,6,-2,10,-5,-8,-7,-9,-8,2,8,8,7,4,-8,6,-5,1,1,9,8,10,4,8,-8,9,-4,-1,2,-7,-2,2,5,5,7,-2,3,-2,-1,-9,1,-6,7,-5,3,-1,5,10,-9,6,9,2,-1,-9,5,3,7,2,-7,5,9,4,-1,3,-1,7,10,2,-4,-6,-10,-8,10,-1,8,-6,-1,-10,7,2,4,-8,9,-6,2,5,-10,-8,-2,9,4,7,-8,-8,2,-10,9,1,-9,-10,-10,2,-7,-2,9,1,7,-1,-8,-9,-10,9,9,7,8,9,-4,7,3,-2,-1,8,-2,-2,-9,-1,1,8,9,-10,-3,-4,-1,-8,-10,-9,-3,8,7,8,-2,4,-8,-7,-8,-3,-5,-5,7,3,4,-8,-8,-4,8,-2,10,4,-10,4,-8,-6,5,-3,7,-2,5,-1,8,-9,-9,7,-9,-7,3,-7,-10,8,-6,-2,5,7,-7,7,4,-2,-9,2,1,8,-3,-7,-8,2,3,9,9,-2,-4,2,6,-3,-4,-4,-6,-10,-5,-6,1,-7,2,-6,1,5,-6,-5,10,7,5,-10,-4,-2,9,-2,-3,-7,-4,-6,-1,-10,8,9,-5,4,8,1,-6,10,10,-6,-8,10,5,7,-4,3,4,2,6,9,1,5,4,5,-7,7,-5,7,2,6,-3,-10,8,-8,9,10,7,9,3,5,6,-5,-8,9,-8,-6,3,-10,7,5,5,-5,-3,4,-10,-5,-3,-7,3,-3,-10,-6,4,-4,-3,-8,-6,-3,-9,6,7,8,-2,-1,1,-7,-2,4,8,10,8,-4,-10,5,5], dtype = "int16")#candidate|5480|(1248,)|const|int16
call_5478 = relay.TupleGetItem(func_32_call(relay.reshape(var_5479.astype('int16'), []), relay.reshape(const_5480.astype('int16'), [16, 13, 6]), ), 0)
call_5481 = relay.TupleGetItem(func_36_call(relay.reshape(var_5479.astype('int16'), []), relay.reshape(const_5480.astype('int16'), [16, 13, 6]), ), 0)
output = relay.Tuple([bop_5460,call_5467,const_5468,call_5478,var_5479,const_5480,])
output2 = relay.Tuple([bop_5460,call_5469,const_5468,call_5481,var_5479,const_5480,])
func_5485 = relay.Function([var_5458,var_5459,var_5479,], output)
mod['func_5485'] = func_5485
mod = relay.transform.InferType()(mod)
var_5486 = relay.var("var_5486", dtype = "bool", shape = (4, 15, 16))#candidate|5486|(4, 15, 16)|var|bool
var_5487 = relay.var("var_5487", dtype = "bool", shape = (4, 15, 16))#candidate|5487|(4, 15, 16)|var|bool
var_5488 = relay.var("var_5488", dtype = "int16", shape = ())#candidate|5488|()|var|int16
output = func_5485(var_5486,var_5487,var_5488,)
func_5489 = relay.Function([var_5486,var_5487,var_5488,], output)
mutated_mod['func_5489'] = func_5489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4200_call = mod.get_global_var('func_4200')
func_4202_call = mutated_mod.get_global_var('func_4202')
call_5505 = relay.TupleGetItem(func_4200_call(), 0)
call_5506 = relay.TupleGetItem(func_4202_call(), 0)
output = call_5505
output2 = call_5506
func_5510 = relay.Function([], output)
mod['func_5510'] = func_5510
mod = relay.transform.InferType()(mod)
mutated_mod['func_5510'] = func_5510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5510_call = mutated_mod.get_global_var('func_5510')
call_5511 = func_5510_call()
output = call_5511
func_5512 = relay.Function([], output)
mutated_mod['func_5512'] = func_5512
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5575 = relay.var("var_5575", dtype = "float32", shape = (14, 9, 8))#candidate|5575|(14, 9, 8)|var|float32
uop_5576 = relay.sin(var_5575.astype('float32')) # shape=(14, 9, 8)
func_3946_call = mod.get_global_var('func_3946')
func_3948_call = mutated_mod.get_global_var('func_3948')
const_5581 = relay.const([0.619306,4.178515,8.732224,-7.699978,-8.581988,-4.891322,8.250554,8.254108,-4.567846,-3.657658,1.824049,0.219884,-3.553237,2.038586,-8.214338,-8.849984,-8.836293,-7.411758,-5.567773,-7.526893,-7.112351,-6.045999,-8.718406,9.142392,0.229020,-3.506975,-1.737295,6.209483,-4.483683,-0.052507,-8.372740,-7.066123,-6.409170,-9.413900,-0.888440,3.666567,6.386251,-7.485797,5.217322], dtype = "float64")#candidate|5581|(39,)|const|float64
call_5580 = relay.TupleGetItem(func_3946_call(relay.reshape(const_5581.astype('float64'), [1, 3, 13])), 0)
call_5582 = relay.TupleGetItem(func_3948_call(relay.reshape(const_5581.astype('float64'), [1, 3, 13])), 0)
uop_5587 = relay.sinh(uop_5576.astype('float32')) # shape=(14, 9, 8)
bop_5597 = relay.bitwise_or(uop_5576.astype('int16'), relay.reshape(uop_5587.astype('int16'), relay.shape_of(uop_5576))) # shape=(14, 9, 8)
bop_5603 = relay.logical_and(call_5580.astype('bool'), relay.reshape(const_5581.astype('bool'), relay.shape_of(call_5580))) # shape=(1, 3, 13)
bop_5606 = relay.logical_and(call_5582.astype('bool'), relay.reshape(const_5581.astype('bool'), relay.shape_of(call_5582))) # shape=(1, 3, 13)
func_4929_call = mod.get_global_var('func_4929')
func_4931_call = mutated_mod.get_global_var('func_4931')
var_5615 = relay.var("var_5615", dtype = "int16", shape = (126,))#candidate|5615|(126,)|var|int16
call_5614 = relay.TupleGetItem(func_4929_call(relay.reshape(var_5615.astype('int16'), [6, 3, 7])), 4)
call_5616 = relay.TupleGetItem(func_4931_call(relay.reshape(var_5615.astype('int16'), [6, 3, 7])), 4)
output = relay.Tuple([bop_5597,bop_5603,call_5614,var_5615,])
output2 = relay.Tuple([bop_5597,bop_5606,call_5616,var_5615,])
func_5620 = relay.Function([var_5575,var_5615,], output)
mod['func_5620'] = func_5620
mod = relay.transform.InferType()(mod)
mutated_mod['func_5620'] = func_5620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5620_call = mutated_mod.get_global_var('func_5620')
var_5622 = relay.var("var_5622", dtype = "float32", shape = (14, 9, 8))#candidate|5622|(14, 9, 8)|var|float32
var_5623 = relay.var("var_5623", dtype = "int16", shape = (126,))#candidate|5623|(126,)|var|int16
call_5621 = func_5620_call(var_5622,var_5623,)
output = call_5621
func_5624 = relay.Function([var_5622,var_5623,], output)
mutated_mod['func_5624'] = func_5624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5114_call = mod.get_global_var('func_5114')
func_5115_call = mutated_mod.get_global_var('func_5115')
call_5634 = func_5114_call()
call_5635 = func_5114_call()
output = call_5634
output2 = call_5635
func_5645 = relay.Function([], output)
mod['func_5645'] = func_5645
mod = relay.transform.InferType()(mod)
mutated_mod['func_5645'] = func_5645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5645_call = mutated_mod.get_global_var('func_5645')
call_5646 = func_5645_call()
output = call_5646
func_5647 = relay.Function([], output)
mutated_mod['func_5647'] = func_5647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mod.get_global_var('func_4488')
func_4489_call = mutated_mod.get_global_var('func_4489')
call_5754 = relay.TupleGetItem(func_4488_call(), 0)
call_5755 = relay.TupleGetItem(func_4489_call(), 0)
output = call_5754
output2 = call_5755
func_5761 = relay.Function([], output)
mod['func_5761'] = func_5761
mod = relay.transform.InferType()(mod)
output = func_5761()
func_5762 = relay.Function([], output)
mutated_mod['func_5762'] = func_5762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4216_call = mod.get_global_var('func_4216')
func_4217_call = mutated_mod.get_global_var('func_4217')
call_5769 = relay.TupleGetItem(func_4216_call(), 0)
call_5770 = relay.TupleGetItem(func_4217_call(), 0)
output = call_5769
output2 = call_5770
func_5775 = relay.Function([], output)
mod['func_5775'] = func_5775
mod = relay.transform.InferType()(mod)
mutated_mod['func_5775'] = func_5775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5775_call = mutated_mod.get_global_var('func_5775')
call_5776 = func_5775_call()
output = call_5776
func_5777 = relay.Function([], output)
mutated_mod['func_5777'] = func_5777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3849_call = mod.get_global_var('func_3849')
func_3851_call = mutated_mod.get_global_var('func_3851')
call_5778 = relay.TupleGetItem(func_3849_call(), 0)
call_5779 = relay.TupleGetItem(func_3851_call(), 0)
var_5794 = relay.var("var_5794", dtype = "uint64", shape = (4, 7, 16))#candidate|5794|(4, 7, 16)|var|uint64
bop_5795 = relay.logical_or(call_5778.astype('bool'), relay.reshape(var_5794.astype('bool'), relay.shape_of(call_5778))) # shape=(4, 7, 16)
bop_5798 = relay.logical_or(call_5779.astype('bool'), relay.reshape(var_5794.astype('bool'), relay.shape_of(call_5779))) # shape=(4, 7, 16)
output = relay.Tuple([bop_5795,])
output2 = relay.Tuple([bop_5798,])
func_5799 = relay.Function([var_5794,], output)
mod['func_5799'] = func_5799
mod = relay.transform.InferType()(mod)
var_5800 = relay.var("var_5800", dtype = "uint64", shape = (4, 7, 16))#candidate|5800|(4, 7, 16)|var|uint64
output = func_5799(var_5800)
func_5801 = relay.Function([var_5800], output)
mutated_mod['func_5801'] = func_5801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5103_call = mod.get_global_var('func_5103')
func_5105_call = mutated_mod.get_global_var('func_5105')
call_5803 = relay.TupleGetItem(func_5103_call(), 2)
call_5804 = relay.TupleGetItem(func_5105_call(), 2)
func_507_call = mod.get_global_var('func_507')
func_511_call = mutated_mod.get_global_var('func_511')
const_5817 = relay.const([-7.515965,4.667367,-3.243836,4.229302,6.083644,-3.154365,5.991349,3.701520,1.224342,7.600288,3.561995,-4.750379,4.999883,-6.880658,-0.593483,-7.403925,4.180344,-2.521318,-6.383616,-1.991040,9.034328,-5.292900,-3.229140,-2.539184,-9.689902,3.296100,-7.234923,-7.241826,2.233178,2.142152,4.197974,-6.798161,7.508497,-0.392494,-4.642247,2.662888,-4.707625,-0.428495,4.032654,-6.361202,-0.724115,2.899644,9.345059,-7.862384,-4.929899,8.658843,-2.318977,-2.956439,-8.068842,7.169015,-0.827324,-1.729563,-6.624412,0.262556,-8.353072,-2.695214,2.698721,2.079546,2.671248,-1.620538,6.769101,-5.138860,6.453816,-9.229533,3.128487,7.886535,-3.452286,-9.950193,-6.129399,0.287231,-6.852204,-8.310773,7.833073,-1.017872,2.987965,7.594708,-5.338668,-0.931121,-7.642953,3.937304,-6.156206,4.886295,2.978887,-6.470203,-5.962743,-0.437235,0.929417,-0.270786,-7.595251,0.800201,5.664112,5.993056,-2.695159,-4.871540,-5.884758,4.360851,-9.197213,5.311680,-0.389518,4.378844,5.076953,7.193225,-5.041173,-8.789152,4.919146,6.561389,-4.988236,-7.204432,-4.850699,5.706507,6.660463,-2.995510,-4.154857,9.646299,4.156884,7.695876,-3.951078,0.234470,-6.028572,6.420955,7.794391,0.239290,1.503318,5.595915,-0.882507,-3.978630,3.560851,2.422143,2.804346,-6.600468,8.208385,8.128134,8.133649,8.696593,-6.327041,9.892652,8.296986,2.101481,-8.175032,-1.080023,-2.125493,-9.743841,0.961986,8.378653,-0.460555,7.872833,1.501249,0.176463,4.074299,-0.634418,-4.499868,-3.490742,-2.026675,-9.898700,-6.661266,6.462982,-7.959391,-9.944537,4.090061,-8.819358,8.440247,-6.960090,-2.291387,1.165710,-2.021245,-2.546258,3.441007,-4.478861,-1.991091,9.025576,0.547056,7.287141,-0.341921,-4.860677,6.847910,-5.578448,-7.450500,5.229032,-7.688599,4.526141,3.179669,6.855569,-0.804332,-2.548759,6.726290,3.193233,0.707007,-1.748044,-2.744627,2.367713,5.085414,-9.391079,-3.108850,-8.112724,3.134847,5.166292,1.017055,4.862835,-6.651186,4.472050,8.764679,2.555111,8.364574,2.677295,-1.736547,-0.340181,-4.831668,5.896539,-8.089395,5.985350,4.853904,-7.614416,-8.083108,-8.711513,-2.305262,-1.316106,-8.679935,-4.086642,8.678824,4.304190,-8.932144,2.273848,9.727003,-1.378891,-3.905853,8.381834,-7.225502,8.097747,8.635021,-1.397411,1.932756,-8.945461,-9.014691,7.694213,-8.344061,2.480556,-3.372599,0.808945,4.437814,-4.234745,7.208939,-2.575575,7.344495,-6.125942,6.154602,-9.382111,4.931956,0.498516,3.844708,1.896226,8.662095,7.184517,3.764515,8.454706,-9.596596,8.230415,0.522385,8.569795,5.261876,-9.135086,-6.511613,4.011947,4.200137,7.201302,1.883825,-9.767230,9.601473,6.710295,-6.881527,-5.809503,-2.725823,-9.424701,7.648820,-3.937941,-5.415341,1.460002,-1.748516,-7.948683,6.833104,-2.096218,7.645024,-4.758060,-9.911694,9.076226,-7.591668,8.062172,9.789605,0.235426,-3.302311,2.785758,-0.672129,1.412634,1.051300,-9.632668,-3.282806,-0.179290,3.621280,-7.335422,-6.363003,-5.310710,8.263238,9.200477,1.262322,7.240833,-2.254897,-7.647013,-9.609939,5.830953,-9.970187,-8.272283,1.966858,-9.554152,3.102158,-8.668552,-9.232278,8.131918,7.954227,0.370239,2.420200,-5.164160,0.394123,-6.196703,-6.962616,-4.035229,7.395387,6.847887,0.752821,3.152844,8.915688,-6.879759,-6.728237,8.989960,-3.990147,-3.921705,-5.461634,8.862839,-1.220613,7.909973,-0.257737,2.855078,-6.679045,-0.300142,-4.629821,5.296419,0.622413,0.956410,8.853958,0.147329,4.718638,5.741290,-7.510813,-4.599343,-9.728336,-6.122902,0.803096,-7.162460,-3.117266,5.018288,-0.327520,-0.886522,-9.779171,8.865522,3.951820,4.988480,-6.106317,-5.591462,7.614042,5.429575,-4.666613,-3.310357,0.132720,4.267396,4.737475,-9.620663,3.351533,-5.190373,4.889286,6.346749,-4.345085,3.633772,8.914581,-3.640380,-2.791406,-3.549554,2.758838,-1.073738,2.244154,-2.925788,-4.671296,-7.355296,-2.950980,9.696857,-7.362300,-8.233358,3.516817,-6.284862,2.117022,-6.534118,-5.582771,-6.644834,8.996670,7.801241,-1.490118,-2.444916,-2.927642,1.587821,6.505055,-9.371437,2.982350,-5.398797,1.559181,-2.714153,0.824485,-4.905143,7.300953,5.898097,-2.906065,-1.368804,5.268984,7.255649,1.215936,-2.796352,-6.415197,8.100179,6.187137,-1.622911,-5.732937,8.571691,2.201222,6.964998,-7.449617,-0.383935,9.077567,7.130658,3.854432,7.183709,6.546665,4.314072,-3.557872,-4.850467,-0.955407,-5.196352,6.739013,1.147717,-0.270801,1.222764,6.026920,1.893539,-6.071066,0.418519,4.586359,0.108757,-1.294139,-1.898643,7.117730,-2.969352,-4.992489,-2.411022,-9.592024,-4.684321,-2.146928,7.450319,5.024719,3.654282,-8.093589,6.414161,8.943643,-8.271684,9.309534,-9.216272,1.690887,1.866928,-8.166375,5.069731,5.958831,8.915751,-1.180692,6.734824,8.853492,1.621763,-5.404999,2.877833,3.713512,4.565623,8.093630,9.063944,5.772469,-5.626311,-5.655240,-1.246303,3.180896,-9.286743,1.645795,-1.980984,-4.683295,-3.466717,-2.004565,-2.092142,6.251619,2.717803,3.327622,-3.596682,0.159436,-1.718737,-8.632030,0.065801,-7.284894,7.179297,2.345467,-6.060959,-8.049104,-5.812257,2.821829,-6.496561,5.869831,1.376988,3.366010,4.216103,-1.451037,-1.679030,-1.218202,-3.387920,0.051836,-5.559515,2.902535,-2.594671,5.428221,9.686814,3.906288,-1.490141,0.413052,-4.546171,3.248566,5.487272,3.025186,-7.100963,3.326747,1.420901,1.990021,6.712452,-6.255954,-3.167211,3.911174,-0.839732,0.885181,9.687534,-1.961824,9.842564,6.618819,3.552108,1.283277,-9.274036,8.376089,0.417915,-9.812967,8.657981,5.319933,-1.148944,7.004421,5.987445,9.910415,3.169757,-1.358694,0.892158,3.340918,5.712375,1.839248,3.464107,8.484657,9.453027,-9.881701,-4.864391,-1.352403,-1.263686,-8.991098,-4.228052,-6.448127,9.085578,5.874933,-2.751732,-6.640161,3.300509,7.658973,-1.373029,1.674326,-2.749368,-2.957310,4.386017,-7.130131,8.435714,-7.040592,-1.353843,9.579236,9.749944,7.525233,-6.099405,6.555930,1.563436,-0.442283,7.701150,2.193464,6.750299,1.152943,-3.980818,-8.297158,-9.515413,3.091098,7.915122,-0.968591,1.430856,-5.168235,5.867237,2.277751,5.389158,-3.731171,-8.802320,-2.679008,-4.687119,-4.094912,7.268352,-9.297103,9.672704,7.296447,-4.020706,-5.925740,2.734073,7.297507,-5.136721,9.480430,2.668059,1.738540,9.754937,3.415147,4.395933,-3.128984,5.077091,-7.805548,-9.729096,3.102968,9.957287,8.955184,9.718403,-5.787338,7.084424,0.978031,3.897147,-5.725751,-3.137026,-9.099235,-2.199488,8.910823,6.065409,-1.625028,4.622664,5.542010,7.147887,5.729897,3.357210,9.865735,0.491326,0.477684,1.106118,5.977871,-5.919648,3.457928,-1.236925,-1.822183,-4.674288,3.730039,-7.593016,-0.608892,4.671678,-1.547822,0.653477,-1.035966,-2.913665,-7.207069,7.005898,-1.814739,6.209524,-8.994775,-4.667427,-8.837813,-2.169109,-5.816883,-0.982193,-7.305786,-0.254884,-2.851451,-6.057035,-3.796664,8.654354,-4.627199,-8.929935,-3.316778,-5.044328,8.068905,6.412538,6.422527,3.883620], dtype = "float32")#candidate|5817|(700,)|const|float32
call_5816 = relay.TupleGetItem(func_507_call(relay.reshape(const_5817.astype('float32'), [7, 10, 10]), relay.reshape(const_5817.astype('float32'), [7, 10, 10]), ), 0)
call_5818 = relay.TupleGetItem(func_511_call(relay.reshape(const_5817.astype('float32'), [7, 10, 10]), relay.reshape(const_5817.astype('float32'), [7, 10, 10]), ), 0)
func_4929_call = mod.get_global_var('func_4929')
func_4931_call = mutated_mod.get_global_var('func_4931')
var_5847 = relay.var("var_5847", dtype = "int16", shape = (126,))#candidate|5847|(126,)|var|int16
call_5846 = relay.TupleGetItem(func_4929_call(relay.reshape(var_5847.astype('int16'), [6, 3, 7])), 3)
call_5848 = relay.TupleGetItem(func_4931_call(relay.reshape(var_5847.astype('int16'), [6, 3, 7])), 3)
output = relay.Tuple([call_5803,call_5816,const_5817,call_5846,var_5847,])
output2 = relay.Tuple([call_5804,call_5818,const_5817,call_5848,var_5847,])
func_5849 = relay.Function([var_5847,], output)
mod['func_5849'] = func_5849
mod = relay.transform.InferType()(mod)
mutated_mod['func_5849'] = func_5849
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5850 = relay.var("var_5850", dtype = "int16", shape = (126,))#candidate|5850|(126,)|var|int16
func_5849_call = mutated_mod.get_global_var('func_5849')
call_5851 = func_5849_call(var_5850)
output = call_5851
func_5852 = relay.Function([var_5850], output)
mutated_mod['func_5852'] = func_5852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5393_call = mod.get_global_var('func_5393')
func_5394_call = mutated_mod.get_global_var('func_5394')
call_5870 = relay.TupleGetItem(func_5393_call(), 1)
call_5871 = relay.TupleGetItem(func_5394_call(), 1)
uop_5873 = relay.erf(call_5870.astype('float32')) # shape=(4, 7, 16)
uop_5875 = relay.erf(call_5871.astype('float32')) # shape=(4, 7, 16)
func_5393_call = mod.get_global_var('func_5393')
func_5394_call = mutated_mod.get_global_var('func_5394')
call_5883 = relay.TupleGetItem(func_5393_call(), 0)
call_5884 = relay.TupleGetItem(func_5394_call(), 0)
func_5775_call = mod.get_global_var('func_5775')
func_5777_call = mutated_mod.get_global_var('func_5777')
call_5897 = func_5775_call()
call_5898 = func_5775_call()
func_719_call = mod.get_global_var('func_719')
func_721_call = mutated_mod.get_global_var('func_721')
var_5909 = relay.var("var_5909", dtype = "int8", shape = (198,))#candidate|5909|(198,)|var|int8
call_5908 = relay.TupleGetItem(func_719_call(relay.reshape(var_5909.astype('int8'), [2, 9, 11])), 0)
call_5910 = relay.TupleGetItem(func_721_call(relay.reshape(var_5909.astype('int8'), [2, 9, 11])), 0)
bop_5918 = relay.subtract(call_5883.astype('int32'), relay.reshape(uop_5873.astype('int32'), relay.shape_of(call_5883))) # shape=(4, 7, 16)
bop_5921 = relay.subtract(call_5884.astype('int32'), relay.reshape(uop_5875.astype('int32'), relay.shape_of(call_5884))) # shape=(4, 7, 16)
output = relay.Tuple([call_5897,call_5908,var_5909,bop_5918,])
output2 = relay.Tuple([call_5898,call_5910,var_5909,bop_5921,])
func_5925 = relay.Function([var_5909,], output)
mod['func_5925'] = func_5925
mod = relay.transform.InferType()(mod)
mutated_mod['func_5925'] = func_5925
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5926 = relay.var("var_5926", dtype = "int8", shape = (198,))#candidate|5926|(198,)|var|int8
func_5925_call = mutated_mod.get_global_var('func_5925')
call_5927 = func_5925_call(var_5926)
output = call_5927
func_5928 = relay.Function([var_5926], output)
mutated_mod['func_5928'] = func_5928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4216_call = mod.get_global_var('func_4216')
func_4217_call = mutated_mod.get_global_var('func_4217')
call_5953 = relay.TupleGetItem(func_4216_call(), 0)
call_5954 = relay.TupleGetItem(func_4217_call(), 0)
func_3535_call = mod.get_global_var('func_3535')
func_3540_call = mutated_mod.get_global_var('func_3540')
const_5956 = relay.const([-6.958715,-3.345019,-6.704630,-8.581331,0.305714,9.223519,-9.581460,-5.929952,9.204189,-8.851885,-1.877993,0.719465,4.690208,9.090529,-3.369116,-9.607374,-2.820373,-9.697423,1.800114,-6.762433,-7.529680,-4.327107,-0.227039,-6.773083,9.965687,6.565887,-9.588430,7.960974,-7.620575,-6.061700,7.326639,-7.909288,7.879801,-3.593769,7.101883,-3.518735,8.380562,-7.996403,2.843177,1.735678,-2.611482,-5.463986,4.781288,-8.127477,-5.669982,-9.720020,9.923566,4.525493,-7.764667,7.271612,-3.261236,8.784117,-4.898299,-2.371231,-4.956074,-3.571555,-1.168202,9.942933,6.231686,7.826777,-9.383126,6.920298,-9.196290,-1.267358,-8.870440,5.859793,3.072318,-6.469194,-6.761145,8.247272,-0.960755,9.312612,-3.245479,9.747024,-9.731772,9.847067,-5.027837,-0.511041,-6.102005,5.420876,-4.171490,3.291212,5.002732,1.741217,-8.711410,-1.075433,5.558714,4.013442,-2.758786,4.191558,-9.843362,8.898612,6.522746,4.193757,3.674657,-8.731982,4.084051,7.414703,-1.751690,6.424183,-0.598138,4.396465,4.531042,3.705752,7.850193,7.075169,-7.026833,8.976151,-9.178297,6.971310,7.015217,-1.170646,3.069017,-4.633034,-8.228152,1.127332,0.343022,-7.195361,8.342155,9.458107,-3.876841,-6.827314,0.028748,-7.180727,5.352062,7.937276,-5.482617,2.971555,-5.740178,6.824730,3.941869,0.182450,5.324539,-2.867376,5.342034,-4.065432,-5.642769,-7.315478,-3.037204,2.253537,-9.438194,-1.698070,-2.788567,4.443948,5.513015,-7.440998,5.001931,-6.619135,7.585841,3.112292,-8.616078,0.660354,6.856403,-8.044309,-9.849871,8.059199,5.595324,0.260827,4.234103,-5.820443,2.835752,-1.071664,-7.220054,-1.770132,2.845085,-3.030721,8.327731,-2.076227,-6.939573,-9.732274,-0.377914,0.729113,4.101576,-3.329376,9.267516,-9.683106,2.566388,7.831817,5.226745,3.125564,-7.947892,-7.582132,9.275752,-2.149784,9.832343,0.102133,-3.390943,7.204990,4.706637,-2.956822,-9.820384,-4.625463,3.593460,8.504631,4.695781,0.538359,0.780885,1.279499,-4.427347,-8.902448,-7.403168,-7.158203,-3.056025,-8.343867,4.615372,2.724009,9.538855,0.538080,0.316663,1.621090,2.459696,-5.422850,-6.632681,-5.506895,1.568535,0.205523,-2.120791,-1.202442,4.554763,-7.836611,-7.292583,0.178795,2.546223,-7.772033,2.808337,8.802745,2.923489,2.435829,1.881154,-0.893748,-6.515749,-8.808400,3.487127,-3.943763,-1.893384,2.470200,-2.711622,-1.858407,2.311530,-7.298120,3.024602,-5.098828,-9.765573,-7.223523,5.784310,-2.471585,-4.684831,-7.673121,-1.961327,3.129278,8.195492,9.944758,2.910241,-6.806982,-6.763955,1.196120,-7.540129,-5.874334,-7.154498,4.560004,-8.658851,9.202374,-9.353422,-9.768654,-2.659883,7.808634,1.822799,5.698586,8.104429,3.760163,8.580985,4.082369,-3.068958,-8.373612,-5.419481,-9.325034,5.283651,-3.382709,1.708375,-0.939665,-5.488708,-2.368600,-8.303895,-4.300469,8.900560,-5.023623,-8.946762,-4.580729,8.623292,7.177829,-7.455630,-2.387866,-8.427744,-4.239702,-1.924447,0.690599,-9.224789,-2.095275,-6.476088,-6.283725,-0.676109,-7.608816,-7.819157,-8.108089,1.239215,-2.352863,5.845519,2.831122,9.351884,-1.484533,9.834693,-6.411266,9.920093,-9.671475,7.327947,9.929324,1.779837,-5.722226,-1.035353,-9.023653,8.589868,-6.687656,5.659667,-5.824253,0.294352,-0.284569,-9.975278,-5.065842,2.959498,7.063605,-5.502552,3.051864,-5.627213,4.423788,-3.505503,-2.897114,-3.767761,-8.494738,3.777373,-5.661838,8.621570,3.291900,7.379738,0.095051,-1.986129,1.421868,7.656398,7.470314,6.315068,8.218502,-3.776857,5.266424,-8.340668,-5.045902,-4.336541,-0.486329,-9.517698,3.936778,1.553265,-5.785322,-3.175068,-5.704292,-2.256268,9.869751,9.352592,5.612373,4.988277,-8.656709,5.244895,2.020862,-3.000056,0.763858,8.913572,-7.163163,-5.891645,-1.458202,0.684359,-1.969489,-8.449025,3.792843,-6.740206,4.558741,3.645644,0.018531,9.725382,-7.507920,-8.986917,-8.391296,-0.106827,2.457298,2.622135,3.977939,-2.484229,7.879005,-8.489129,-2.421486,1.987633,-6.189718,-7.399462,6.635999,-2.947806,7.246801,-0.205952,-4.172605,-7.898316,8.426717,4.097589,-4.320999,-0.136657,5.718106,-0.436734,-3.539980,8.323460,-1.523952,-7.662909,1.195734,5.428618,-0.180695,-4.843970,5.489414,-8.644431,6.280399,5.457930,6.459068,1.285656,-7.662381,3.360560,5.046794,8.508545,-7.325744,-1.793916,-7.047730,-9.678082,4.477437,9.322205,7.804161,0.025358,-2.846535,9.698274,-1.651985,-3.458449,-8.741753,5.143777,-8.686910,-0.794029,1.427623,4.416609,-5.103378,-6.396649,-7.180546,-4.540140,0.986951,-4.583658,8.782615,9.419350,-5.285600,-5.373637,9.342978,6.691517,2.695248,-0.078577,-6.533260,-1.814605,6.167648,-9.303880,2.786865,-1.382800,-7.400130,-9.022704,-0.654570,2.882566,8.823999,9.157935,-9.703847,-9.717088,-8.926896,-6.180979,-0.423440,-7.343723,1.427190,-4.884359,4.908761,4.967476,2.194969,1.087536,6.044986,6.764853,9.047560,-3.535040,7.388112,9.143357,9.194410,-3.862626,-2.803963,-6.014840,5.593485,-8.757668,4.187437,-1.500469,2.587786,-2.457273,-8.717532,9.100955,-8.330531,5.435191,4.254355,-9.146675,-7.954327,-3.438916,2.727244,-1.588975,7.484074,5.360078,-3.039351,-6.300608,-4.947229,9.622183,-4.958416,-5.824893,-7.979395,-2.745433,-0.147045,-5.750715,3.665543,8.142176,1.027250,8.449505,2.279850,0.450490,-6.146467,2.733966,-6.139894,9.876327,-3.361167,-7.817555,-3.011161,-6.587539,6.150848,4.629677,0.790368,9.248403,6.030643,-4.319965,5.424354,-8.405208,9.965802,-6.797916,-4.086318,-6.570640,8.294965,7.488696,7.647925,-7.754732,5.187997,8.707631,1.094482,8.777328,4.516849,0.748800,-2.695849,-6.236344,3.003822,9.701621,-8.735948,-9.156919,-3.171673,9.750829,1.092157,-9.105319,-6.891810,-3.976513,-1.269930,-6.900683,2.961425,0.950543,6.704091,1.845849,-7.234981,2.331896,-7.957451,0.113254,7.464122,-6.944015,-2.981408,9.835559,-7.969337,-3.154635,-6.955688,-3.583875,-2.315043,1.700194,4.095980,3.206381,8.975856,-6.700265,-6.538614,5.208337,0.228845,0.113604,-2.531065,-9.198231,-9.714656,-5.120197,5.044782,-0.947823,-7.697287,9.673425,-5.962607,8.729954,3.602861,0.266706,9.767429,-0.231887,-5.215536,9.553506,-3.984186,3.268798,-9.839513,2.225996,-6.476129,-7.975785,3.806686,-8.146700,-4.826589,-6.347233,2.989313,8.138440,-5.610406,1.763934,2.014081,7.311639,-8.448303,-8.014144,-3.602039,-3.840682,1.498515,6.512712,4.852835,-8.811175,-7.990132,3.265656,-5.453623,-9.574377,-7.503176,2.847831,-3.386535,-8.522259,4.596577,-2.784862,-8.464953,-8.505219,1.950589,4.795869,5.195328,-9.152641,-9.589745,-0.820365,-7.692437,0.032367,-6.654483,2.950669,6.637166,-5.860500,-3.834732,8.032592,3.986934,0.875180,9.961660,1.196644,-3.174731,-2.181039,-0.928403], dtype = "float32")#candidate|5956|(672,)|const|float32
var_5957 = relay.var("var_5957", dtype = "int16", shape = ())#candidate|5957|()|var|int16
var_5958 = relay.var("var_5958", dtype = "int16", shape = (1248,))#candidate|5958|(1248,)|var|int16
call_5955 = relay.TupleGetItem(func_3535_call(relay.reshape(const_5956.astype('float32'), [12, 14, 4]), relay.reshape(var_5957.astype('int16'), []), relay.reshape(var_5958.astype('int16'), [1248, 1]), ), 2)
call_5959 = relay.TupleGetItem(func_3540_call(relay.reshape(const_5956.astype('float32'), [12, 14, 4]), relay.reshape(var_5957.astype('int16'), []), relay.reshape(var_5958.astype('int16'), [1248, 1]), ), 2)
func_3849_call = mod.get_global_var('func_3849')
func_3851_call = mutated_mod.get_global_var('func_3851')
call_5965 = relay.TupleGetItem(func_3849_call(), 0)
call_5966 = relay.TupleGetItem(func_3851_call(), 0)
bop_5993 = relay.less_equal(call_5953.astype('bool'), relay.reshape(call_5965.astype('bool'), relay.shape_of(call_5953))) # shape=(4, 7, 16)
bop_5996 = relay.less_equal(call_5954.astype('bool'), relay.reshape(call_5966.astype('bool'), relay.shape_of(call_5954))) # shape=(4, 7, 16)
output = relay.Tuple([call_5955,const_5956,var_5957,var_5958,bop_5993,])
output2 = relay.Tuple([call_5959,const_5956,var_5957,var_5958,bop_5996,])
func_5997 = relay.Function([var_5957,var_5958,], output)
mod['func_5997'] = func_5997
mod = relay.transform.InferType()(mod)
var_5998 = relay.var("var_5998", dtype = "int16", shape = ())#candidate|5998|()|var|int16
var_5999 = relay.var("var_5999", dtype = "int16", shape = (1248,))#candidate|5999|(1248,)|var|int16
output = func_5997(var_5998,var_5999,)
func_6000 = relay.Function([var_5998,var_5999,], output)
mutated_mod['func_6000'] = func_6000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4416_call = mod.get_global_var('func_4416')
func_4418_call = mutated_mod.get_global_var('func_4418')
call_6013 = relay.TupleGetItem(func_4416_call(), 1)
call_6014 = relay.TupleGetItem(func_4418_call(), 1)
func_1189_call = mod.get_global_var('func_1189')
func_1192_call = mutated_mod.get_global_var('func_1192')
call_6044 = relay.TupleGetItem(func_1189_call(relay.reshape(call_6013.astype('int16'), [])), 3)
call_6045 = relay.TupleGetItem(func_1192_call(relay.reshape(call_6013.astype('int16'), [])), 3)
output = relay.Tuple([call_6013,call_6044,])
output2 = relay.Tuple([call_6014,call_6045,])
func_6048 = relay.Function([], output)
mod['func_6048'] = func_6048
mod = relay.transform.InferType()(mod)
mutated_mod['func_6048'] = func_6048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6048_call = mutated_mod.get_global_var('func_6048')
call_6049 = func_6048_call()
output = call_6049
func_6050 = relay.Function([], output)
mutated_mod['func_6050'] = func_6050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5510_call = mod.get_global_var('func_5510')
func_5512_call = mutated_mod.get_global_var('func_5512')
call_6094 = func_5510_call()
call_6095 = func_5510_call()
func_3558_call = mod.get_global_var('func_3558')
func_3562_call = mutated_mod.get_global_var('func_3562')
const_6098 = relay.const([[9,6,8,-4,-10,-3,-9,-4,4,-3,7,-7,-4,-8,6,-5,-1,-2,8,1,7,3,-4,6,-8,-10,10,-10,4,7,3,4,4,4,-3,10,-8,6,1,10,3,-6,9,-5,-5,2,4,-3,-3,-10,3,-4,4,3,-2,-7,-4,7,-9,6,-7,-4,-6,1,6,-6,1,10,-2,3,7,-10,-2,-6,-1,7,-1,-9,9,-8,1,-4,6,10,-8,-1,-2,7,7,-7,6,-6,-4,-5,5,8,5,-2,5,-8,-6,7,9,-2,-9,-5,-4,1,-6,-2,10,-8,-1,6,2,-8,-3,6,3,8,-8,5,4,1,4,10,5,-9,-6,-4,-10,-7,-9,7,-3,-2,-10,7,6,-3,-3,-4,-10,-5,-9,7,1,-4,-8,-2,6,4,-4,-1,10,1,-6,2,-10,-2,-7,-10]], dtype = "uint64")#candidate|6098|(1, 162)|const|uint64
call_6097 = relay.TupleGetItem(func_3558_call(relay.reshape(const_6098.astype('uint64'), [6, 3, 9]), relay.reshape(const_6098.astype('uint64'), [6, 3, 9]), ), 0)
call_6099 = relay.TupleGetItem(func_3562_call(relay.reshape(const_6098.astype('uint64'), [6, 3, 9]), relay.reshape(const_6098.astype('uint64'), [6, 3, 9]), ), 0)
func_5485_call = mod.get_global_var('func_5485')
func_5489_call = mutated_mod.get_global_var('func_5489')
var_6113 = relay.var("var_6113", dtype = "bool", shape = (960,))#candidate|6113|(960,)|var|bool
var_6114 = relay.var("var_6114", dtype = "int16", shape = ())#candidate|6114|()|var|int16
call_6112 = relay.TupleGetItem(func_5485_call(relay.reshape(var_6113.astype('bool'), [4, 15, 16]), relay.reshape(var_6113.astype('bool'), [4, 15, 16]), relay.reshape(var_6114.astype('int16'), []), ), 4)
call_6115 = relay.TupleGetItem(func_5489_call(relay.reshape(var_6113.astype('bool'), [4, 15, 16]), relay.reshape(var_6113.astype('bool'), [4, 15, 16]), relay.reshape(var_6114.astype('int16'), []), ), 4)
output = relay.Tuple([call_6094,call_6097,const_6098,call_6112,var_6113,var_6114,])
output2 = relay.Tuple([call_6095,call_6099,const_6098,call_6115,var_6113,var_6114,])
func_6116 = relay.Function([var_6113,var_6114,], output)
mod['func_6116'] = func_6116
mod = relay.transform.InferType()(mod)
mutated_mod['func_6116'] = func_6116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6116_call = mutated_mod.get_global_var('func_6116')
var_6118 = relay.var("var_6118", dtype = "bool", shape = (960,))#candidate|6118|(960,)|var|bool
var_6119 = relay.var("var_6119", dtype = "int16", shape = ())#candidate|6119|()|var|int16
call_6117 = func_6116_call(var_6118,var_6119,)
output = call_6117
func_6120 = relay.Function([var_6118,var_6119,], output)
mutated_mod['func_6120'] = func_6120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4633_call = mod.get_global_var('func_4633')
func_4634_call = mutated_mod.get_global_var('func_4634')
call_6122 = relay.TupleGetItem(func_4633_call(), 0)
call_6123 = relay.TupleGetItem(func_4634_call(), 0)
func_3535_call = mod.get_global_var('func_3535')
func_3540_call = mutated_mod.get_global_var('func_3540')
var_6125 = relay.var("var_6125", dtype = "float32", shape = (672,))#candidate|6125|(672,)|var|float32
const_6126 = relay.const(7, dtype = "int16")#candidate|6126|()|const|int16
const_6127 = relay.const([9,-4,-6,-5,-3,-9,-8,8,-9,-6,-4,7,-10,-5,-2,-5,-6,1,2,-8,9,-1,-8,-4,-4,3,3,-1,-8,-2,-9,-1,-7,-6,10,-4,-1,7,6,6,2,-7,-7,10,5,8,-6,-6,3,2,5,-4,4,4,3,-9,-9,-1,-3,4,10,1,-10,1,-8,-9,-2,9,-2,-4,-5,1,-7,10,3,9,7,1,6,3,6,7,4,-2,9,3,-8,7,7,9,-3,-3,-8,-8,-6,-8,-4,10,1,6,7,3,8,-5,7,-4,2,-1,-2,7,-1,-2,-2,-4,-2,4,-2,7,8,4,5,8,-7,-10,-9,9,-3,-4,3,9,-8,7,1,1,-7,5,-7,3,-1,5,1,-9,-6,1,-10,-5,3,-2,7,4,-2,-9,-1,3,5,-1,3,-3,2,8,-4,4,-6,-4,2,10,8,-3,2,-10,-5,3,10,6,-10,3,9,3,-4,10,-6,1,10,2,3,8,4,5,9,-5,-6,-3,8,10,-5,-1,1,-5,-8,-2,3,-9,1,-3,5,-9,10,8,10,-1,10,-3,4,5,-7,2,-7,6,-5,10,9,-3,-3,-7,2,-5,-2,7,-8,-9,-7,6,-2,-4,3,6,-3,-1,3,9,-9,-8,-5,-8,-7,-10,8,10,10,6,10,-7,3,1,-7,-1,-7,7,6,-6,2,7,2,9,-3,-7,-9,8,-4,7,-1,8,-9,-9,10,-6,-9,-2,2,7,8,-8,10,-8,7,6,6,-4,-8,-10,6,5,-10,-10,-10,-6,3,-5,10,-5,-1,-4,4,-3,-3,-5,8,-6,-6,-9,-5,7,10,1,9,8,-9,-8,10,-9,4,-4,5,1,8,10,-6,3,2,6,10,-1,6,-3,-3,-1,-8,1,5,-5,-1,-8,3,-5,-3,-4,4,-3,-7,9,1,-8,3,10,-1,-10,-9,1,10,-7,-6,-8,-8,-5,1,6,-3,1,-4,-5,8,-9,-6,1,6,-8,8,-7,1,3,5,6,-6,6,-1,-6,8,8,-6,9,6,8,-7,2,6,-2,5,-9,-6,-2,7,6,5,-1,-2,5,-10,-3,8,7,-1,5,8,8,8,-2,9,-2,3,-7,4,4,5,-2,-5,6,-7,-1,-4,2,-10,-1,-2,5,-6,2,-6,-3,6,-5,4,4,-2,-8,-5,-10,-5,-7,-4,2,-7,-10,-3,-4,-8,-9,-8,-4,9,9,-4,-2,-2,4,1,5,-4,-1,-8,5,1,8,6,-4,-8,10,3,-9,-1,10,2,-2,-10,3,-5,4,2,-9,-8,5,7,-5,9,5,8,-2,3,-7,6,-3,-8,-8,10,9,2,3,-1,-10,-4,-8,2,-5,5,-10,-1,1,9,-10,-9,-9,4,10,4,-6,7,-3,6,-8,9,10,-10,-9,-10,-1,7,2,4,9,-4,-8,-8,3,-10,-5,-6,9,5,8,7,4,9,-7,10,5,-10,-6,-6,2,-8,7,9,-2,3,10,9,-6,-2,5,1,-5,-3,-7,7,-6,-6,9,-8,10,2,3,-5,-4,-4,-8,-9,3,-1,-2,2,3,1,-3,-4,-2,4,2,6,8,-6,-4,9,-10,10,1,2,-9,-8,1,7,2,1,-3,-1,7,-9,-4,-10,3,6,3,-9,-10,5,1,-9,5,7,6,-1,5,6,10,-6,6,-8,10,1,2,-5,10,-6,-3,3,10,4,3,7,-8,8,-4,4,2,6,-3,-9,-5,2,-7,-7,8,-4,-3,-6,-3,6,-1,-3,-6,-8,-10,-6,3,4,2,9,-5,2,-4,-1,-5,4,5,-10,6,2,7,4,-5,-2,-10,-6,3,-4,-10,-4,10,-2,7,8,4,-1,7,2,2,8,4,8,3,4,7,-10,-10,-5,-8,10,2,-2,-7,-2,8,-2,5,-10,3,4,6,8,10,-2,-6,-8,-6,-9,5,-3,-3,-5,-8,-7,-1,-1,-6,-4,4,-5,-10,1,5,10,-3,-5,9,-5,5,6,-4,6,9,6,-5,8,-6,-3,10,3,6,2,-7,10,8,9,-6,1,2,1,-10,5,7,-9,1,2,9,3,-2,6,-3,-3,-10,4,-4,3,3,2,-8,-9,-10,-8,-9,-4,8,-3,7,-9,2,10,10,10,1,-5,2,10,9,10,1,-8,-4,-9,9,-7,-1,7,-10,7,10,10,8,-3,-10,-4,8,1,7,2,-9,-6,-8,4,-3,-9,4,6,-1,-8,3,3,6,-3,5,-8,6,7,-1,2,-3,-9,-10,9,-4,-2,1,-8,1,-9,-9,-5,2,-1,-4,-9,3,3,2,7,-1,3,-6,8,-4,-8,-5,-10,-4,2,-3,6,-8,1,3,8,-7,-3,-3,2,7,10,2,8,10,-3,-2,9,10,-2,8,-6,-10,-9,9,10,-3,9,-10,-9,-9,-3,3,-1,-4,7,-2,8,-1,4,-10,9,3,-7,5,3,-2,6,-8,10,1,-5,-10,2,-2,5,-1,5,2,-6,10,2,-6,9,7,-8,-9,-9,6,2,10,-7,-2,4,6,1,-1,-10,-3,-3,-10,-9,3,-8,3,-4,7,-3,-8,3,9,10,8,1,10,-4,-6,-9,-4,8,9,10,7,-5,2,-7,-1,-5,8,2,9,-8,10,-3,-6,-2,7,1,7,7,5,4,-4,6,-4,-1,6,-9,-9,-3,-5,10,-6,4,-8,-5,-8,10,6,5,6,-5,5,1,6,1,-6,3,-5,-7,1,-7,-1,-10,-2,-10,-1,1,7,-4,-3,-4,7,4,4,4,-5,4,-7,-6,-1,7,9,10,7,9,-8,-2,-8,-6,10,-10,10,-3,-8,3,-5,-1,-8,10,-4,7,2,6,8,6,1,-10,-10,7,-2,-7,-3,-1,1,6,2,1,5,-8,1,-8,10,5,-5,-7,-5,5,-5,6,-10,5,-6,-8,4,-5,-7,-7,-2,-4,5,3,-8,-7,-5,-10,5,-6,2,3,9,-2,10,-3,2,-1,-1,-10,-5,1,-9,-6,8,7,-6,-7,10,-3,-9,-5,6,-1,-2,-5,7,8,8,-10,6,10,10,8,7,10,-8,10,-3,-10,-3,4,2,5,6,8,-3,-5,-6,-2,-4,2,9,5,-4,-9,-1,-4,-6,3,-4,-5,1,-9,3,-1,-4,-1,6,5,3,4,10,7,7,-10,-2,6,-7,10,6,6,-8,-3,5,2,-5,-1,4,-2,7,2,9,5,-2,-5,-8,-8,-10,-1,-10,-4,-9,9,3,6,3,1,5,7,1,-8,5,-7,9,-9,-3,4,-7,7,6,2,-9,-3,-9,2,4], dtype = "int16")#candidate|6127|(1248,)|const|int16
call_6124 = relay.TupleGetItem(func_3535_call(relay.reshape(var_6125.astype('float32'), [12, 14, 4]), relay.reshape(const_6126.astype('int16'), []), relay.reshape(const_6127.astype('int16'), [1248, 1]), ), 3)
call_6128 = relay.TupleGetItem(func_3540_call(relay.reshape(var_6125.astype('float32'), [12, 14, 4]), relay.reshape(const_6126.astype('int16'), []), relay.reshape(const_6127.astype('int16'), [1248, 1]), ), 3)
output = relay.Tuple([call_6122,call_6124,var_6125,const_6126,const_6127,])
output2 = relay.Tuple([call_6123,call_6128,var_6125,const_6126,const_6127,])
func_6129 = relay.Function([var_6125,], output)
mod['func_6129'] = func_6129
mod = relay.transform.InferType()(mod)
var_6130 = relay.var("var_6130", dtype = "float32", shape = (672,))#candidate|6130|(672,)|var|float32
output = func_6129(var_6130)
func_6131 = relay.Function([var_6130], output)
mutated_mod['func_6131'] = func_6131
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6173 = relay.var("var_6173", dtype = "float64", shape = (14, 15, 4))#candidate|6173|(14, 15, 4)|var|float64
uop_6174 = relay.sigmoid(var_6173.astype('float64')) # shape=(14, 15, 4)
output = uop_6174
output2 = uop_6174
func_6187 = relay.Function([var_6173,], output)
mod['func_6187'] = func_6187
mod = relay.transform.InferType()(mod)
var_6188 = relay.var("var_6188", dtype = "float64", shape = (14, 15, 4))#candidate|6188|(14, 15, 4)|var|float64
output = func_6187(var_6188)
func_6189 = relay.Function([var_6188], output)
mutated_mod['func_6189'] = func_6189
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6218 = relay.const([[[-9.221977,2.493375,-1.634247,9.987846,4.472738,6.192263,8.615634,6.149583,-9.674003,-7.722077,-0.976233,-6.351833,3.266600,9.203707,-5.526524,-3.897323],[-5.478799,6.034418,4.621433,-3.558246,-9.146926,1.940422,-8.686107,9.546572,-9.997050,-4.820780,6.163285,9.637433,-7.783300,-6.675238,1.161030,7.284357],[-6.654380,1.388016,6.973667,-3.210901,4.212063,5.899649,4.019951,4.906709,-9.821281,-6.206456,-5.023815,-7.908610,-0.828561,7.374534,-8.438042,2.160789],[-6.397214,-9.512212,-2.299831,9.934572,-5.367469,-1.861107,-1.451726,-1.353523,2.023912,-7.002175,-2.572468,-2.126695,4.192402,-8.955768,-7.858155,8.978213],[-5.050407,8.356345,-5.937244,1.948425,8.691745,-1.875707,5.691706,6.073842,-9.388263,-0.221812,-6.638708,8.658029,3.115224,2.516562,-8.950965,-8.205062],[6.734674,2.671605,-9.277478,-1.073757,-9.050793,5.405687,2.489210,8.065260,-4.474861,-3.536802,-1.651763,0.022351,-7.204164,-3.121362,4.790003,5.166310],[-8.358755,-2.551033,8.035053,-1.340269,-7.071341,9.822791,-9.732147,0.231657,6.479351,-4.617652,4.829439,5.580601,-2.020053,-5.593428,-4.165939,-3.924811],[4.211445,5.068614,-1.894094,-8.874202,-5.253406,-9.777823,-3.626478,4.406928,-9.784007,-0.219635,4.391925,3.978377,8.336813,6.747862,4.140863,-9.838305],[9.457755,-0.702207,2.599802,-3.466672,-5.588168,2.511904,-4.243037,-4.144316,-9.926744,-8.398456,-2.472030,8.835980,-9.301166,1.565129,1.910686,-8.833221],[-4.485785,-1.895683,7.450399,5.573633,2.293798,8.076003,4.194761,-2.787677,-9.261589,-9.649560,-1.296137,-1.895159,-2.334693,0.019266,6.866665,-1.021103]],[[-9.173000,7.494154,9.460007,9.276481,0.477926,-9.333177,0.500850,-6.791451,-1.856619,-0.166969,1.106424,3.836764,1.026270,4.345073,-2.245530,-7.644779],[-9.755483,-9.611597,-3.662368,-9.279082,-3.359143,-1.916656,-0.709127,4.965444,8.143363,1.832381,-0.864107,2.259313,1.119474,-1.670045,-6.616168,-5.024263],[3.965202,9.160824,0.770590,9.751689,-0.174321,3.965279,2.280098,6.761345,-6.896765,0.161897,8.995872,-4.880298,7.203884,-4.293204,0.667863,-3.931854],[-1.878135,-1.855360,0.590290,3.753671,-3.894479,-6.145904,-6.527843,-2.256764,9.809742,3.872967,-5.321724,6.280549,7.700780,-2.090816,8.638963,7.424852],[-9.664861,9.397317,5.935303,5.049061,3.550940,3.792281,-2.240678,-8.130041,9.376880,-9.358272,-6.224084,1.428603,-9.195295,-7.779101,-6.410997,2.241333],[-9.810080,0.430356,0.582350,0.691460,-7.841358,-4.051023,-0.807671,-2.947720,9.135178,-9.782685,8.296400,3.608320,8.051742,6.602546,3.158613,-2.687762],[5.102516,9.146167,-4.294516,4.862085,-6.526024,5.715321,-7.109191,-1.412287,0.790284,9.327930,3.016791,-2.006674,2.323852,-3.253024,-2.206585,-2.179179],[-3.579943,-1.675791,-5.428474,-1.902759,-9.851910,7.766897,1.278224,-5.296350,-0.386514,5.129778,-1.003434,-6.898073,3.127868,-7.041504,8.484351,2.473354],[-7.560767,2.904542,6.476964,4.651569,4.294430,9.494330,3.519252,6.770304,8.166655,1.937349,-4.874455,9.583043,-1.858532,6.462113,-9.061646,-5.379044],[3.266158,6.874211,4.773833,-2.426409,-1.052923,8.845019,6.028720,2.762625,-0.332421,-1.621492,7.119753,-6.847179,6.699953,5.176245,7.883155,-9.659226]],[[4.765395,5.638500,1.694541,-2.704887,2.530991,4.308092,-0.845096,-5.327820,8.704173,-5.207720,-1.462292,-3.785306,-7.641500,-4.791515,8.545439,-6.931101],[-3.890050,6.241667,9.293253,9.898186,-1.673845,4.106302,-6.272186,9.278732,-5.849003,-3.891850,-3.682063,-4.706341,-2.789435,-4.250064,-5.924943,9.330833],[5.961092,-6.318316,-7.671526,6.045539,-1.808404,1.326863,-0.487636,-6.464238,-6.195727,-3.114050,9.115109,-6.709393,8.507794,-1.933832,1.561618,-2.702005],[-2.129911,-7.360421,5.298313,4.588223,-3.031779,-9.577035,8.165705,-9.409305,4.359354,0.907839,9.551903,-6.280418,-4.874262,-1.578963,-3.781440,-5.241938],[2.312790,2.273774,1.247229,-0.272732,-9.725243,-4.097591,0.951206,4.494916,4.655522,-6.598895,-9.681514,8.621422,9.195296,4.901339,3.804584,-3.316751],[-5.481950,8.275258,3.283450,3.566189,-9.198588,5.696882,-3.113658,-5.573801,1.855692,7.723638,7.136806,6.416817,-8.408087,4.048505,-1.662242,1.984083],[0.831937,-8.823594,-5.963412,-6.596244,-2.177795,2.541411,4.479449,-2.318827,-7.828268,-0.666451,6.576519,-6.544241,-8.923159,8.242348,4.149829,0.337223],[5.469926,9.124597,-5.475565,-4.505644,-4.112934,7.367416,7.649287,-0.046084,5.134233,9.679269,-7.489403,5.405098,5.431441,-3.252530,2.325732,-2.194567],[6.392508,-5.651473,3.607451,-0.584370,-4.471640,4.193818,-3.648388,3.698248,1.122773,-2.325613,-8.583754,-4.793432,-7.772184,6.713335,1.644229,-8.493581],[3.378871,-5.328463,1.764544,-1.773412,-7.438241,6.713516,-8.029205,0.116747,2.308003,6.220775,2.976520,-5.424942,-8.355766,5.931878,9.795172,6.139544]],[[-7.130916,1.894153,-6.532457,-7.581232,-2.973667,5.462282,-8.037450,-0.631919,-7.346022,-1.151211,7.414565,5.559549,-2.352563,3.489758,-7.921288,-0.970719],[-6.246746,-1.176109,-6.367574,-0.337598,-0.615871,3.443101,-3.823105,7.092034,2.521296,-9.286479,-0.853290,5.612804,-6.168597,-8.340940,9.262852,2.437413],[-1.055216,-0.729129,-3.480801,1.839398,4.911149,-2.058970,-3.075182,-7.969924,3.380175,2.192068,5.970387,-8.525047,5.609102,-9.944438,5.406835,6.909447],[-3.913253,-2.149765,-8.947931,5.836033,-0.861735,3.454276,2.214639,2.317920,-7.084986,-0.930389,7.305661,7.338097,7.530096,9.831471,8.965664,1.287923],[-6.278041,9.417065,7.246156,-1.361134,-5.824365,4.274342,-6.806303,-2.910415,4.852572,-9.611602,1.219189,9.808160,8.468043,8.913803,4.284706,-6.504263],[9.419532,-7.276307,3.553966,-9.363337,-1.959230,1.096528,-1.303710,9.157599,2.885742,-7.891687,2.692174,2.439394,-7.834254,-3.795793,6.410374,-6.311121],[-9.293773,-4.173326,6.147082,3.231789,-9.829099,-0.515359,-8.183576,-1.211498,2.831186,-6.201925,-2.899839,-1.624912,-0.225491,6.791393,8.967783,-1.361656],[-7.589898,0.308838,-1.126436,-2.638805,-9.115544,3.814707,-4.309781,-3.972834,5.801228,3.543290,-0.934979,-7.501497,-9.655625,2.371069,8.772555,8.389362],[-5.174308,-3.853861,6.324094,0.978393,0.806163,-8.005553,-9.928902,-0.208813,0.424058,7.046113,6.020342,-3.001082,9.630567,2.516975,-2.616760,9.071113],[-1.697673,8.219851,-4.945371,7.809301,4.395737,2.409734,-4.438139,1.412186,2.470834,8.094295,6.501889,-2.839161,8.920895,1.505523,-7.468106,-7.650998]],[[-5.812558,-8.755583,-3.663615,3.375335,6.175879,9.816126,-5.512979,7.172835,-8.629038,-6.880097,8.358691,-1.639881,-8.844623,-6.100049,-9.228654,3.431776],[-8.840128,5.661159,9.716085,-9.508451,-9.150467,-7.090044,7.913301,-3.849265,3.749254,4.102466,-4.943006,3.076787,9.619069,3.564913,1.886805,2.773669],[8.173105,-0.838232,7.632395,6.174683,2.262685,-6.369637,-9.774051,-2.044811,7.514232,-4.008674,8.195249,-5.849652,9.086233,9.728354,1.631804,-7.943952],[3.246999,4.140609,1.215135,-9.320375,4.112345,8.255529,-5.564804,8.351659,1.492449,6.233290,2.289697,-0.601367,7.368197,5.887350,-4.929483,5.326084],[9.400824,-9.130780,-6.589196,1.645721,7.305454,1.846936,-5.199604,5.908300,-4.171935,-6.440893,-2.364456,-6.802160,-2.159154,-6.041143,8.357174,6.398442],[4.866670,6.947426,-8.371752,3.238410,-1.820296,6.392890,1.759606,-8.917234,0.026305,8.075534,2.233099,-2.340159,-7.149734,-4.166706,-5.003506,-7.773108],[9.786444,8.833437,-0.172203,5.109927,0.491324,2.938283,2.642584,-1.744609,-4.887517,5.437649,4.918430,-9.495732,-2.439715,4.073422,-0.034236,-0.389301],[-9.805690,6.030619,-5.227376,8.789344,-0.210348,-2.998614,-0.833990,-3.628090,6.150479,7.740097,5.198789,-9.778177,-0.345366,9.765300,5.328485,0.206598],[0.816335,-3.158377,9.457987,-8.366059,-3.255676,-1.928815,2.562933,7.248508,-3.922786,-5.500962,-2.370913,8.808366,-5.255165,4.793414,9.734393,4.299183],[-7.431864,-7.114130,8.078619,1.639919,-2.834669,4.155496,-9.463123,-3.294377,9.006453,2.252104,8.916153,-8.291268,7.722893,9.254972,-5.721888,8.389654]],[[-5.535382,2.767433,-5.238275,8.757524,-8.208597,2.174255,6.955932,4.119482,-6.489218,1.165842,8.530774,2.600332,8.353868,5.321342,-5.504986,-3.368732],[1.222753,-1.895781,-9.583906,-2.508743,-6.490614,-7.814837,5.948525,-3.741091,-2.764275,5.266284,-0.881630,-3.464463,6.221107,8.410638,-1.403821,-4.199376],[6.918903,-7.577653,-0.641900,-6.999209,-6.211103,-3.138337,-4.038610,5.983716,-6.423393,7.132181,1.447703,6.407435,2.199173,-3.287695,-6.928167,7.391855],[-8.193399,-3.111221,-9.463134,7.596371,4.256661,-0.465482,9.253713,-0.809022,-8.616336,-8.882240,5.393472,-7.384127,-8.841900,-2.159398,6.547365,1.049506],[5.884100,-2.294914,-6.215491,-0.877048,-2.278729,-5.536156,-3.685584,7.314764,-0.341833,7.191768,0.196952,-3.547852,-1.449611,3.762774,9.605095,4.205432],[-0.666475,-8.075500,-4.655555,-2.585740,-7.505534,-9.462600,6.679747,9.006137,3.071431,4.185600,6.722288,-9.075074,-4.466388,7.896640,-2.925810,2.179070],[6.868312,-1.694098,-5.021710,-5.961414,4.201242,-3.803166,-7.012146,-0.247710,-9.870763,4.206511,5.958527,8.652308,7.824239,1.791713,-4.973659,-2.911931],[6.126945,0.016965,5.693319,-8.030042,-1.862460,1.829911,-2.324328,-2.019071,1.754115,-9.586649,7.115415,-7.398123,7.892672,8.961120,-0.824387,7.126138],[-2.768588,-5.546927,-1.835831,-9.721498,6.583942,0.690134,1.720676,-0.122604,8.529512,8.614727,-5.473404,1.291472,-1.265297,8.896713,-9.386695,-3.847447],[4.269983,-8.559142,9.106951,-3.377181,-4.968814,-4.732970,6.534456,-7.104144,-1.983494,-4.596025,-1.859876,-4.183076,-1.856486,2.806265,-2.950543,3.632200]],[[-2.944364,0.906325,-7.912434,-0.083101,0.415013,-3.004904,9.429626,-7.942686,-0.838531,8.574057,-8.554692,3.905658,3.087926,-0.051017,-8.432863,-8.838561],[8.399285,-8.196238,8.982570,1.204000,-5.246385,-2.099098,-5.280112,7.885507,1.737248,5.841181,-5.879285,-0.734908,-7.537675,9.339734,-9.162817,6.685082],[6.052036,1.483562,9.131329,1.357206,-4.032362,4.383387,-4.268524,0.440672,5.261480,-9.393841,-6.635353,-2.286224,9.876501,9.267861,0.040958,3.112767],[1.662002,7.283323,0.425321,-6.094878,-9.884779,5.619644,-7.661590,-6.482242,4.401759,8.084951,6.588751,-1.809585,2.661692,-1.569316,2.300625,4.458868],[-4.213728,0.762337,6.064395,9.278912,9.824132,8.711797,-2.199517,-1.776961,-4.546842,3.805960,6.311547,-6.938005,8.125303,3.922365,-6.951386,1.863888],[8.303974,4.545062,-9.741633,0.172053,9.706529,4.430020,-7.149487,5.305983,6.558232,6.362299,5.913190,4.378980,-5.662747,3.909438,1.951650,-4.138738],[9.720566,-4.189062,-1.553934,9.385319,-8.100570,7.816389,-4.877298,6.847942,7.852602,-6.066765,-5.362219,-8.330507,-5.591074,0.126901,-8.625106,3.080980],[1.328602,-0.034165,9.961703,7.082295,-4.949395,-0.205851,-3.962103,3.205438,-3.421435,-1.462878,1.959456,-5.524232,-7.168037,-3.744070,3.065403,-6.479316],[9.873862,-1.148195,-4.951240,-2.895946,1.569286,-0.429228,-9.774488,2.022490,4.475112,5.816890,-8.965012,6.594879,7.398666,-3.209254,5.217244,-1.127676],[3.604874,4.024354,-6.987138,-1.624880,-9.737546,6.338931,-1.742327,-5.234833,-7.222772,3.866434,7.312651,5.497462,-7.271009,6.723898,-3.222529,-6.846408]],[[-0.503053,-1.024277,7.772431,-7.510954,7.925713,-6.747629,9.272059,1.767971,-4.320004,-8.337545,6.635858,-9.731232,9.958995,3.323014,4.307051,9.481266],[0.511424,6.868007,5.202326,7.843553,0.528357,-1.309317,-7.919252,5.108202,-5.683547,-8.405082,1.856617,5.736362,-1.773313,8.129972,-4.643510,9.897250],[-3.254053,-5.209941,6.638269,-6.897507,0.693385,1.842743,-5.097174,-8.576197,-8.318882,0.101849,-8.830506,5.638035,6.474599,-4.024331,0.222661,-6.912191],[-3.426010,1.779224,-7.517739,1.259117,8.982659,4.423847,4.269294,-2.720367,-5.911709,7.565875,8.283471,6.778609,1.748963,-7.689586,1.286744,-6.797518],[-2.540041,9.036099,2.949102,-9.551858,0.025564,9.485034,-5.433549,9.673112,6.878628,7.804961,9.835438,7.045484,-5.268516,0.767407,-1.030642,-7.818299],[-6.885592,8.229696,-0.969605,-5.598829,4.921188,-7.898060,0.686662,-3.789950,-8.323713,6.005883,-3.154415,4.556607,4.661475,0.993195,-4.082540,-2.607031],[1.394828,8.153935,7.978874,-9.686744,1.974445,-0.268963,-2.053887,3.602581,-7.957686,-8.192651,4.242474,-8.660816,-2.991861,2.664142,5.119575,6.083949],[7.847586,-5.643895,-9.405455,-0.029909,3.530910,7.207189,0.079839,-1.657873,6.271743,3.337752,-7.302583,7.238470,4.386516,-5.690173,-7.037653,7.224544],[-0.269183,6.801541,-3.904041,-7.845726,-5.826111,1.961468,-7.765639,-0.370094,-5.991254,-3.795287,8.454114,-7.321160,-8.751920,2.437655,-2.403073,9.052590],[-9.860074,-7.120536,-8.176904,-3.966606,-8.757299,-1.872988,4.673479,-4.577236,-4.823294,5.358429,2.989928,-8.054870,-2.296693,-6.234067,0.252111,7.514213]],[[-7.911234,-7.945950,-3.281899,-8.787190,1.676862,1.089006,3.093735,-7.410175,-9.873396,0.194570,2.194935,-0.151823,8.763287,5.765533,-2.890595,-7.273796],[-7.621682,0.464428,5.461058,9.137909,-2.738779,0.910668,-1.267238,-5.576518,8.689682,-6.085081,8.105535,-7.528539,-3.916078,4.835976,-4.318462,3.248757],[3.127510,0.076569,-1.268215,7.437708,8.092997,-4.828314,-9.403016,0.355414,-0.118427,7.678862,-7.233184,-6.808240,5.260671,1.529191,5.961978,-6.073199],[9.119292,1.398353,-5.737374,-4.295171,-0.213048,8.489349,8.954286,-3.204356,3.598540,-8.634099,-9.865790,-6.775378,-0.578289,9.778670,-2.379427,-7.100491],[-2.817710,-3.015047,-4.823078,-1.308432,3.904977,-5.209950,-0.585085,0.282543,-5.002003,6.616472,-9.403479,-1.371213,9.940191,0.572277,1.945386,8.974986],[6.174151,-8.119063,8.465810,-9.544491,-6.513232,8.901835,-6.661121,-2.972714,-3.860271,0.130625,9.891569,-8.382248,9.925039,6.888886,6.347248,-9.168850],[-7.535910,4.835209,-6.438035,-0.275463,-7.788765,2.200608,-8.183978,2.991148,-3.163972,-9.275995,-4.309991,-3.137012,-3.002500,-9.483757,7.507057,-6.965400],[8.750400,7.669373,-6.880197,-3.282360,4.816126,0.487454,-2.812291,5.622196,4.521485,-9.772318,-9.027878,7.368752,-7.804735,-1.845115,2.098362,6.602451],[-5.335310,-5.178795,8.200894,5.624621,-3.025886,-1.076273,4.592056,5.106713,3.416785,-3.929301,8.955235,-7.550647,7.615346,6.881840,-5.240602,6.869377],[7.384168,9.552122,0.390575,1.503270,0.614713,-0.918133,5.452418,3.998953,2.921940,-8.263662,7.776575,7.701677,-7.100521,4.145416,7.202474,1.475668]],[[-3.154509,3.550383,-0.114155,-5.041521,3.075102,-9.036449,-6.926088,8.231215,-1.573760,-7.518817,3.230934,-7.813106,-3.798017,-3.194835,3.798768,-3.330328],[-9.266876,1.883722,6.526497,-1.966040,-6.069168,1.850705,-8.225312,-7.327065,9.011048,-8.651042,-5.710908,-3.107539,1.173785,3.264034,-4.629250,-2.641108],[9.471751,3.295828,0.733452,0.873307,0.808792,7.557060,-2.868563,-5.087536,-8.296786,-7.525663,5.939810,-7.718838,9.435945,7.297074,3.143736,-8.461516],[8.179093,1.023481,7.287214,-6.432438,-1.486005,-8.463027,-5.664178,-4.666307,7.491950,3.249736,0.943051,8.058698,9.986804,-7.232034,6.710472,-5.612999],[6.188735,4.326211,-3.740312,9.850221,9.028269,9.884609,-1.255675,2.331126,-6.673241,-3.072499,-6.072388,-8.328428,9.852140,-5.901548,1.939726,0.727414],[4.738417,3.001198,6.399961,-8.334972,-5.889936,-7.898228,7.488298,4.976212,-1.080518,3.299648,1.353107,2.295080,-0.676085,7.192780,-9.276533,-5.941487],[-7.333086,9.491467,-4.830028,-4.740851,-1.422455,7.083266,-0.089964,7.527410,5.595685,1.132107,7.059772,6.653496,8.725079,5.692469,5.096829,6.376839],[-4.849344,0.990369,-4.910205,1.747982,-1.294580,-4.200602,7.323481,-8.786687,-3.284656,-9.556375,-6.907542,7.322585,-4.663797,3.955481,3.703557,2.514486],[1.744972,-5.673888,0.573218,-1.741404,4.735167,-8.456300,2.151887,2.876285,0.842312,7.627575,2.342267,6.657076,6.449382,0.403013,5.316481,-5.618766],[-4.415798,-3.471155,3.419304,7.431684,8.405496,8.670902,-1.230911,-5.436138,-0.041151,5.819796,-0.210115,-3.716063,4.310984,-4.125605,-8.792616,-7.002208]],[[-3.360018,-5.592999,8.584158,-7.900574,-9.061269,8.812734,-7.131881,-0.148256,5.274008,-5.961218,-3.175149,-8.949621,-5.736247,-1.277024,9.275051,4.579089],[2.559119,3.937000,-2.614537,5.062435,-0.387543,4.440908,-4.551800,5.844291,-7.636257,0.417396,-6.819050,-4.150061,1.907387,-6.403912,0.143656,-9.865956],[9.117269,-0.793854,1.138301,-3.209207,-4.981480,-9.268581,4.824345,6.764633,1.481242,-6.013997,-8.847007,-9.468084,2.959581,-3.834347,5.854294,0.190008],[2.010625,-8.162631,0.522892,-4.709851,-5.273109,-1.429296,-1.653502,1.955643,3.323496,-4.180908,1.685269,3.995907,0.104444,3.312078,-8.779198,5.482997],[-5.646457,-1.433149,2.129654,-2.401790,2.356590,9.035395,-6.933189,5.080007,3.165633,8.761308,-5.484196,2.554171,-3.897861,-2.671856,-5.607228,-7.198218],[4.570502,-7.328955,8.190063,6.470337,-8.930219,8.409532,4.082987,-1.647189,-3.968324,4.469762,-5.593309,-6.560499,-7.948337,1.613669,-2.421654,4.207369],[-8.188397,-6.906250,-9.621388,-9.428811,8.491098,8.952325,-4.980809,3.299459,3.868306,4.692741,6.722184,7.707756,3.291709,-4.268822,-8.704640,6.904960],[-2.140302,1.619800,4.399422,7.432226,0.712224,-6.584180,-3.600853,-9.533700,-4.267164,0.260924,0.376989,1.523115,9.647805,-3.523454,-9.241796,-9.873782],[-6.216661,5.265257,7.559648,-1.270193,-4.666722,-8.015240,-9.044364,-8.406166,-3.181758,-4.584979,-0.605019,-0.338546,-3.546351,-1.828832,5.735315,2.356887],[-3.831495,8.799646,2.077126,-5.507360,-4.128793,-3.257740,5.512106,-2.167035,-1.718689,5.241724,-3.647193,-1.850789,-1.850895,8.443670,5.185632,5.175779]]], dtype = "float64")#candidate|6218|(11, 10, 16)|const|float64
var_6219 = relay.var("var_6219", dtype = "float64", shape = (11, 10, 16))#candidate|6219|(11, 10, 16)|var|float64
bop_6220 = relay.power(const_6218.astype('float64'), relay.reshape(var_6219.astype('float64'), relay.shape_of(const_6218))) # shape=(11, 10, 16)
uop_6223 = relay.atanh(var_6219.astype('float64')) # shape=(11, 10, 16)
func_5775_call = mod.get_global_var('func_5775')
func_5777_call = mutated_mod.get_global_var('func_5777')
call_6226 = func_5775_call()
call_6227 = func_5775_call()
uop_6228 = relay.sinh(uop_6223.astype('float32')) # shape=(11, 10, 16)
func_5620_call = mod.get_global_var('func_5620')
func_5624_call = mutated_mod.get_global_var('func_5624')
const_6238 = relay.const([3.123659,8.142441,-9.103381,3.131999,1.896285,5.618072,4.971292,5.477985,3.608570,-3.897425,-7.907937,-1.114900,-2.997911,2.449594,-3.179624,2.860913,1.119873,-3.579361,-4.112295,-2.080034,3.451611,-0.508650,-2.841571,3.987865,-5.551089,5.893135,6.385499,-1.950367,-3.426384,-2.285299,-2.999836,-9.870307,-2.160475,0.417205,9.460093,-4.730924,-4.785109,5.988376,6.420651,-9.090243,0.105844,-3.691115,5.611923,-9.336882,-3.612300,5.062617,3.608697,-3.841951,-7.392693,-2.429602,-5.285662,4.450247,-8.556709,2.866316,6.753802,0.656047,9.741258,6.868508,3.321274,-2.220823,-0.267200,-6.507224,9.092000,-5.918200,5.685201,4.082562,1.328515,-5.964940,-3.030827,1.186685,4.923353,-8.610192,-4.840822,7.714077,0.939707,-9.014709,1.285733,0.725591,0.784709,6.905650,5.483323,-8.635057,0.040455,-3.960650,-5.571643,2.418213,-3.226119,-9.339383,6.332252,-9.791047,9.477561,6.820324,-2.176247,-6.898285,-4.066437,-7.760616,-9.340866,-0.491820,8.260836,0.420868,2.457748,4.763236,-6.214085,-6.282087,2.007419,6.588410,5.820882,-5.701279,9.539684,-4.747213,-9.948719,4.948804,2.825639,-2.234534,-6.637562,9.397723,-5.655483,-3.493651,-9.364548,-5.829952,1.392099,2.036801,-1.451065,-0.529186,-2.896240,6.659821,0.851310,3.276393,8.065271,5.867871,-5.511848,6.575479,1.085162,2.029915,-7.754170,-5.016824,7.026113,0.938480,1.700836,-4.564066,-1.295690,-3.250147,-7.622689,-3.143172,8.240925,-2.074080,-4.626177,-5.220635,5.642280,-7.370779,9.508651,8.492878,-3.877973,0.599442,7.807841,9.877408,9.617615,3.222074,1.280816,4.992905,-3.872699,-4.901838,7.535646,-3.807719,3.176972,6.198017,9.163152,0.794720,0.159224,1.127388,-0.046121,-0.590883,-0.507403,-4.358921,1.477559,-7.127507,9.597165,3.416647,9.842292,3.879778,-7.326820,-2.996815,9.897413,4.319139,-3.829226,9.045974,5.997670,-6.273245,-8.315895,3.932027,2.587411,2.319106,7.655231,7.062492,-3.206442,8.765949,3.344422,8.148821,8.788861,9.399725,1.233675,7.021016,-1.470973,2.993844,-0.635162,6.485493,-2.897744,-0.428591,2.923259,0.275535,-6.618330,-3.547601,-1.777275,-0.293632,-6.176326,5.464344,7.906995,-7.952935,-9.751252,-7.245941,-3.954220,-5.326069,-0.497453,-8.144740,9.008013,6.035821,-6.859624,9.158428,3.815105,2.895189,-4.081515,-7.964308,5.546421,0.791754,-6.899510,-4.187888,9.004383,4.393942,9.334912,5.424385,2.429598,-1.456366,-0.170038,-8.802182,5.106927,6.974266,-4.154278,1.278698,-0.309537,-4.387583,-2.855139,-3.941105,8.159315,2.461454,8.822563,1.182641,-9.871017,2.095825,-6.691276,-9.928123,9.651403,5.802492,9.177228,8.514274,7.218752,-5.972149,-4.470405,-7.493847,8.404703,-2.020286,-5.396174,6.960931,3.566002,-3.503751,5.094140,9.463118,-4.540308,-3.833666,-6.459460,-9.362485,7.490394,4.047565,8.544809,-2.195133,-1.407224,8.821320,-6.294771,4.218958,6.598374,5.359066,-7.507019,3.226810,5.133600,3.288669,0.242445,-5.171450,-2.318292,-6.443637,3.718795,-0.825022,3.651595,-6.197839,2.077634,7.762824,1.165646,1.218379,-0.376294,4.706353,-0.419007,8.251864,-9.379919,3.096003,0.770475,-5.741647,-9.024688,-8.003035,-5.412132,3.988733,-8.456221,5.891787,-7.814959,-6.631247,4.279080,-5.810350,-6.340866,-6.715569,4.568904,0.745459,7.123038,1.709935,3.546109,-9.831099,4.062015,1.900019,-5.213090,4.449312,8.369032,2.451542,2.450472,-8.219573,8.834982,-3.665977,-5.053134,-3.594619,1.377496,9.720401,1.801766,0.995044,-0.515064,0.874535,4.759366,0.755292,-4.075960,7.393142,-9.929906,7.337023,-1.086708,4.633168,6.887076,5.453196,4.820010,1.678645,-4.286831,8.134545,7.276354,7.438698,-5.237982,3.484028,-9.852493,-0.219840,2.397428,-3.321142,-9.301054,-4.522254,7.221979,-2.480806,2.741046,-6.912175,-1.235081,-2.038384,-1.960350,-5.174687,-7.115859,6.881611,2.213502,2.899206,7.005535,-8.227442,2.436890,0.159737,-0.678695,-1.986043,-8.064333,8.901204,-0.305423,-9.574105,-7.415918,3.071924,9.507977,0.742049,0.758445,2.990638,-0.409790,-0.937951,-1.397983,6.025174,3.075187,-2.648339,-1.508219,1.749223,8.714072,3.595138,-6.078776,-8.707347,9.371995,-7.971548,3.578106,2.134041,-5.567156,6.087956,3.001161,9.263469,-4.721714,-6.937274,-0.792116,-7.964338,-2.649791,8.538969,-7.382209,-7.376441,6.111387,-0.795520,-5.853600,-3.419803,0.825903,9.635576,-9.072060,-7.377830,3.694319,2.809537,-6.659334,3.613252,9.022195,1.274976,6.894297,5.985661,1.617550,8.886668,6.358562,-8.648441,2.522219,-6.048464,-4.203918,2.999016,6.520625,1.399271,-2.422462,-4.011457,2.288973,9.441353,9.714150,6.950018,1.326749,-4.756366,8.496363,4.670112,0.729622,-8.185149,-7.918440,1.718659,2.058031,0.466442,4.806480,1.653880,-9.345686,1.078153,-5.647461,-4.018675,7.213324,-3.549336,2.343329,-2.013325,7.410637,-2.617851,-1.022926,-1.680603,2.072511,9.237258,3.696028,2.583605,3.899534,-5.925363,-2.045692,0.810239,6.360520,-4.065014,-9.250457,2.368850,6.923638,5.752729,1.791050,6.135872,-6.652128,-7.481123,-5.094169,9.275889,-3.924423,5.419472,-9.765905,0.530487,-7.805567,-5.140581,-2.145133,1.497719,4.690479,6.549045,-3.089037,2.087884,9.177833,-7.555328,-0.047104,4.527113,7.315188,1.649739,-2.792396,-3.414898,-7.729491,1.858710,-2.046412,-6.616291,6.730851,8.596573,3.899010,-5.512713,-8.352588,-7.809825,-3.959511,2.079243,-8.806575,6.573983,1.303582,4.271334,-6.649292,-7.021660,6.695561,5.058230,-0.875101,-5.879424,6.574759,-2.144374,-1.553049,-6.015530,7.801702,-6.406993,-6.314411,-7.231859,6.067547,5.409312,-0.210066,4.077969,0.273115,-7.061426,5.874646,3.211228,-4.459021,-6.583991,-8.574636,5.093343,-1.559724,5.097365,-2.699947,4.931349,9.288559,1.949781,-8.006589,-1.583184,2.493817,-2.697986,7.828395,-5.490557,2.198111,-9.549270,4.531974,0.983889,-0.831155,2.989460,-8.399206,-0.957901,3.002975,2.023718,-0.170442,1.739144,9.491107,-5.270008,8.154683,-9.064961,7.108550,-7.136151,-4.401247,8.446407,-1.308308,0.867224,3.378983,1.905587,-5.775591,-6.040986,-1.301810,-8.439893,3.254187,-4.532352,5.443679,-8.819126,-3.399641,-1.952386,-1.832445,7.177357,-1.820393,-4.631841,-3.582098,-4.682555,-0.682547,-2.928188,4.885435,-2.019136,7.411024,3.690732,1.361100,-6.949232,4.411959,3.137668,-2.698415,-5.327628,3.235086,-7.902653,-5.639391,-9.243901,5.737544,0.940800,-0.912397,-1.510360,2.204423,-1.963260,1.866181,-8.051808,4.585987,-3.013321,-1.686640,-8.005491,4.587156,9.788676,-4.153143,8.027312,-5.938423,-9.049953,-8.483028,9.961258,-9.176821,6.979924,-5.926159,-3.870478,5.628873,7.202279,-7.435005,3.245292,-0.152722,1.184346,0.434381,-2.301301,-5.448326,-4.391339,1.931351,-8.581911,8.014521,0.087455,0.126165,-4.849890,3.545700,-8.140228,5.992680,7.372972,-2.369168,-8.968607,3.296864,-8.987005,0.289055,1.012182,-8.160439,7.684596,1.210490,1.737253,-6.923642,1.541194,1.026814,0.155680,4.091682,-0.054423,-4.963945,7.467661,2.379806,3.602990,-0.536664,-0.622092,-0.594224,3.805687,-4.139761,-9.805662,-4.004050,-8.827648,7.044635,-5.137113,4.121817,-8.444181,-2.458733,3.290358,4.424287,-0.620008,4.717873,-4.449477,-0.927647,4.885901,-2.403858,-7.181884,4.318516,-4.453668,-9.095134,-5.574421,7.614009,2.507473,-0.092362,-6.453902,2.620323,-1.704339,2.728835,-9.948281,-5.308802,-9.172544,2.411159,4.623330,-6.042691,8.199310,-4.562233,-1.615504,8.261335,0.993854,-0.782381,0.057357,4.994078,4.755664,1.459781,-1.687066,9.872412,-1.284444,7.709091,-0.322902,-5.016389,4.785967,6.848179,-0.050037,3.859332,-5.253489,6.361523,-1.188107,2.746632,5.380821,3.496079,-8.147318,6.390060,-9.687422,-9.205942,-4.197555,-5.248440,-6.050109,3.197632,-6.581851,-7.650970,-6.157330,7.837673,-9.856648,-1.411488,8.956484,-9.013062,1.328555,-2.465679,-2.893521,-6.386628,8.897338,-6.705768,-3.937149,7.684081,7.210070,8.568438,7.455664,-3.842436,-1.230614,-1.743522,-2.591375,4.344991,-8.975835,9.906556,2.398836,3.083542,1.927921,-5.045573,2.312887,-1.024252,3.775857,-6.203652,-6.048864,5.207901,-9.202758,-0.500007,-4.674604,-4.203627,-6.762588,7.008880,0.578325,-5.096559,1.472282,-5.995366,-5.727849,7.801297,-0.905168,3.716660,-3.758677,2.561927,-7.618737,8.648242,-8.328103,7.426889,-7.704101,-5.118879,9.972308,-8.140657,1.644528,5.123591,8.220212,3.616959,-4.924676,7.419456,3.420267,3.086343,-0.268114,-8.591847,-3.674931,2.511273,6.016523,-7.712823,8.149554,2.541725,6.981336,-7.875887,6.040008,2.224167,-4.077053,-1.132190,1.383777,7.681839,-4.838121,-4.151002,8.761213,6.395727,1.336940,2.229519,-8.995575,0.377370,1.922578,7.837939,-0.925152,8.890242,5.477234,-9.587485,6.905918,-6.184334,-5.685818,9.886074,2.299609,-8.870754,-3.633979,5.555676,-3.751297,5.740984,-8.892999,-0.736975,7.929811,-9.183640,1.041723,2.640767,-8.750028,-0.401431,6.783050,0.743799,0.241212,0.659856,8.870128,-6.455742,-7.820221,-2.500346,-1.441347,5.439474,-4.075099,-0.820565,-9.026382,-7.281002,-2.571712,0.377322,-3.506111,-2.537588,-3.615916,-2.363303,-6.521005,4.116719,-0.857110,4.317232,-9.422040,-3.514876,-6.637662,-8.289871,-9.163501,-5.718422,-2.459584,-0.250108,-9.502771,-7.962129,4.500789,-0.231790,3.745549,-1.037364,3.126437,1.797943,-9.721275,-6.712189,-3.064601,2.074239,-2.823580,4.781212,-2.837236,7.912311,-5.926073,1.642029,-3.479985,0.414621,-4.369922,2.999054,-9.884848,6.231010,-8.915121,8.242282,5.462489,-0.117746,-0.980287,-9.608780,5.496861,2.832762,9.576983,1.955135,9.555989,5.563454,-3.993230,7.986629,0.353373,3.415555,3.601107,2.225647,-4.389368,-0.744238,9.757918,7.996057,-1.681951,0.857084,2.333462,-5.672109,5.058058,-1.766019,-0.346406,-0.449907,7.396659,-9.936458,5.888143,3.894048,3.369696,-1.194218,-8.115834,9.098876,4.333695,-7.181632,-0.032071,6.358000,-0.470968,2.393588,1.424721,5.378015,-9.819260,7.042127,5.036561,3.150666,-9.860115,2.912214,5.655953,-7.229918,6.466947,4.062131,2.538615,-9.427303,8.368693,-9.288936,6.441421,0.213071,7.950213], dtype = "float32")#candidate|6238|(1008,)|const|float32
const_6239 = relay.const([9,-8,1,7,6,-7,-10,-8,1,-8,5,-10,-1,1,8,5,-9,10,-10,3,-6,-9,-5,5,10,5,-5,8,-1,5,1,7,-4,2,-5,-1,5,9,-7,-4,-6,-4,-5,-10,-1,6,-4,4,1,1,8,6,2,-3,-8,7,7,-8,2,-9,-2,5,-7,1,4,3,-3,-5,-4,3,-5,-7,-10,3,2,6,-6,-9,1,-2,-3,-5,3,1,-8,9,-5,-6,-3,10,10,1,-7,10,2,3,6,-2,-9,6,7,3,-4,-8,5,-6,4,-2,8,10,-5,-5,-10,1,10,-9,5,-1,-10,-9,9,-1,-3,-5,-8,-2], dtype = "int16")#candidate|6239|(126,)|const|int16
call_6237 = relay.TupleGetItem(func_5620_call(relay.reshape(const_6238.astype('float32'), [14, 9, 8]), relay.reshape(const_6239.astype('int16'), [126,]), ), 3)
call_6240 = relay.TupleGetItem(func_5624_call(relay.reshape(const_6238.astype('float32'), [14, 9, 8]), relay.reshape(const_6239.astype('int16'), [126,]), ), 3)
output = relay.Tuple([bop_6220,call_6226,uop_6228,call_6237,const_6238,const_6239,])
output2 = relay.Tuple([bop_6220,call_6227,uop_6228,call_6240,const_6238,const_6239,])
func_6243 = relay.Function([var_6219,], output)
mod['func_6243'] = func_6243
mod = relay.transform.InferType()(mod)
mutated_mod['func_6243'] = func_6243
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6244 = relay.var("var_6244", dtype = "float64", shape = (11, 10, 16))#candidate|6244|(11, 10, 16)|var|float64
func_6243_call = mutated_mod.get_global_var('func_6243')
call_6245 = func_6243_call(var_6244)
output = call_6245
func_6246 = relay.Function([var_6244], output)
mutated_mod['func_6246'] = func_6246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5761_call = mod.get_global_var('func_5761')
func_5762_call = mutated_mod.get_global_var('func_5762')
call_6251 = func_5761_call()
call_6252 = func_5761_call()
const_6255 = relay.const([[[-6.631807,-7.941415,9.415659,9.502222,7.446622,8.167098,3.973900,-7.738721,-2.682039,1.126323,-3.655085,5.576373,5.658454,-7.552099,0.169612,-3.150118],[-3.399456,2.704340,5.546603,-0.818555,-2.597015,5.173384,4.573516,-5.715937,7.137664,7.152129,-9.904300,-0.740865,-1.793321,-4.962988,-1.220808,4.264286],[8.719340,7.772633,4.170375,-5.331478,2.962412,-3.614714,4.490145,-5.561461,-1.967644,-0.277503,-0.432576,4.349570,3.104786,1.181075,-8.345596,4.268897],[0.826654,-9.910368,-0.025454,8.597849,8.600705,-3.354155,-0.811360,0.642111,7.190696,7.839239,-4.719670,-3.315305,-8.377154,-2.071673,-7.758986,3.856120],[-3.793645,-8.007759,-0.926973,-3.440439,3.671963,-2.371071,9.437166,6.948369,8.101085,8.706052,4.544938,-2.224313,6.401976,-0.213535,-2.204347,8.865677],[-8.481332,2.574265,0.983443,-7.288765,-9.125112,-6.981345,-6.048602,-7.298489,-1.384701,-3.297137,5.532024,-9.056716,6.288592,-9.905042,-9.946355,-3.021798],[-6.741492,3.158926,3.258279,-2.698080,-3.278320,2.213349,-4.819209,-5.442011,3.977632,-8.161064,1.277074,2.093413,-1.845874,-3.455531,-2.485658,5.455355]],[[-0.991858,-5.656444,-7.106743,-2.422883,-3.113070,7.381651,0.199635,3.789676,-3.981312,-6.454360,-4.810919,-5.147989,5.572893,8.065996,0.436550,-1.224986],[2.475603,3.655516,-8.930793,-5.889751,-4.424810,6.380799,-2.016941,-8.492083,5.500828,-2.546582,2.980075,-7.445014,-0.622835,-0.820040,-1.789441,7.973524],[0.954739,8.263289,-6.398861,-9.229581,1.840853,2.982042,3.166613,2.213842,-7.405638,-1.606023,-9.150973,-6.902185,4.619799,7.403654,-6.949872,8.610525],[2.083958,1.029279,9.442869,-6.041669,6.620196,-9.299500,-8.365628,1.887445,5.992258,-2.213190,-4.940004,-5.713679,4.600861,8.980245,9.275413,0.555671],[5.095736,-9.067848,0.501872,-9.010920,-9.496948,4.730406,-4.472477,6.371959,-9.910649,1.243209,9.052361,-4.274369,4.099514,-3.406236,9.941808,-6.016751],[-1.673307,1.018802,3.084347,-9.543816,-4.839507,-8.735600,3.575988,-4.420243,6.024436,-3.765851,-9.543245,4.251287,8.361115,-2.465748,-6.425071,6.528569],[1.082525,-0.256336,-4.280628,1.183669,-4.048823,1.582752,5.054070,6.599179,-2.654413,5.425927,7.646273,-9.120894,-9.279144,0.599119,2.792191,3.184773]],[[1.263786,-3.381381,4.307829,-1.855859,0.032581,1.677124,8.081627,-6.339552,-2.566552,-7.297488,-9.750287,-2.327702,8.485757,2.815584,6.242247,-2.305463],[-4.915951,-5.983216,-7.929348,9.799194,0.928607,-9.746426,-7.604364,-6.057514,7.402585,-7.622817,7.033116,-6.499652,-3.894675,-3.098945,7.028344,-8.295655],[1.146937,8.718000,5.515422,3.155362,6.685651,9.458088,-0.827289,-0.221718,9.611645,-6.133016,-7.188939,0.119773,-8.308789,-5.845988,-7.551852,-8.513947],[3.914924,8.956044,-2.710160,3.033177,3.012933,9.423132,-4.029873,1.345009,-7.687954,4.290206,-9.745624,8.006594,-7.638838,-1.723726,-4.705526,-5.658211],[-4.679878,-4.615568,-6.307225,-3.325271,8.278150,-4.646094,-8.122603,1.476151,2.383253,6.207069,5.119090,-7.260965,-7.428034,2.291746,7.712999,-8.762917],[7.812138,7.008133,2.705759,5.144974,9.104003,-1.816685,2.458813,9.228597,-2.198344,0.767364,1.001418,9.385977,-1.084411,8.714411,-5.080052,-4.508910],[-2.500256,-2.840991,4.189117,-3.120105,1.711444,-9.579605,-7.060346,7.325466,-0.851054,4.221457,-3.541986,6.664496,7.292727,3.932530,2.541928,0.224645]],[[4.309486,2.010932,-3.843913,8.235809,-9.809166,-2.301307,2.059801,-9.340561,-0.434062,-8.249834,-7.143831,-5.813651,-6.148884,-1.656982,7.805173,2.672608],[3.879951,0.366150,0.934580,1.180613,1.866656,-2.604470,5.442037,-0.898674,-7.216370,-5.910012,0.904496,-9.209530,-5.937510,6.942549,4.656569,-5.591979],[2.194989,-0.262169,3.285991,-3.888449,1.061273,2.665972,8.672196,6.110486,-2.015594,2.587778,-9.289462,7.203591,-7.634576,-0.192360,-6.573335,-4.043236],[-7.580917,-5.330389,-0.552688,-4.962468,7.978207,-4.727087,-0.012799,0.510035,7.074933,-0.729060,-9.164920,1.632295,-8.871659,-6.433839,-0.823313,-6.810223],[5.217475,-3.241060,6.152523,-6.225793,5.477917,-2.752400,-0.946449,-6.761469,-9.111131,2.393740,9.546088,8.539512,-9.786792,-3.449267,-8.432422,6.788393],[3.490292,3.941507,4.174618,6.083073,-9.427692,-6.175908,2.698318,-3.727138,0.730733,1.848366,-9.646194,-6.477286,-6.077611,-8.283911,9.586887,2.291933],[2.539519,5.878390,-6.299995,6.347731,-9.543138,2.871104,1.118071,0.672200,2.060982,9.618741,7.740374,-8.385404,-5.829992,-0.741990,-4.514915,-5.512533]]], dtype = "float32")#candidate|6255|(4, 7, 16)|const|float32
bop_6256 = relay.left_shift(call_6251.astype('int32'), relay.reshape(const_6255.astype('int32'), relay.shape_of(call_6251))) # shape=(4, 7, 16)
bop_6259 = relay.left_shift(call_6252.astype('int32'), relay.reshape(const_6255.astype('int32'), relay.shape_of(call_6252))) # shape=(4, 7, 16)
uop_6260 = relay.exp(call_6251.astype('float32')) # shape=(4, 7, 16)
uop_6262 = relay.exp(call_6252.astype('float32')) # shape=(4, 7, 16)
output = relay.Tuple([bop_6256,uop_6260,])
output2 = relay.Tuple([bop_6259,uop_6262,])
func_6263 = relay.Function([], output)
mod['func_6263'] = func_6263
mod = relay.transform.InferType()(mod)
mutated_mod['func_6263'] = func_6263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6263_call = mutated_mod.get_global_var('func_6263')
call_6264 = func_6263_call()
output = call_6264
func_6265 = relay.Function([], output)
mutated_mod['func_6265'] = func_6265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4416_call = mod.get_global_var('func_4416')
func_4418_call = mutated_mod.get_global_var('func_4418')
call_6320 = relay.TupleGetItem(func_4416_call(), 4)
call_6321 = relay.TupleGetItem(func_4418_call(), 4)
output = relay.Tuple([call_6320,])
output2 = relay.Tuple([call_6321,])
func_6324 = relay.Function([], output)
mod['func_6324'] = func_6324
mod = relay.transform.InferType()(mod)
mutated_mod['func_6324'] = func_6324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6324_call = mutated_mod.get_global_var('func_6324')
call_6325 = func_6324_call()
output = call_6325
func_6326 = relay.Function([], output)
mutated_mod['func_6326'] = func_6326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4092_call = mod.get_global_var('func_4092')
func_4094_call = mutated_mod.get_global_var('func_4094')
call_6337 = relay.TupleGetItem(func_4092_call(), 0)
call_6338 = relay.TupleGetItem(func_4094_call(), 0)
output = relay.Tuple([call_6337,])
output2 = relay.Tuple([call_6338,])
func_6340 = relay.Function([], output)
mod['func_6340'] = func_6340
mod = relay.transform.InferType()(mod)
output = func_6340()
func_6341 = relay.Function([], output)
mutated_mod['func_6341'] = func_6341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6324_call = mod.get_global_var('func_6324')
func_6326_call = mutated_mod.get_global_var('func_6326')
call_6402 = relay.TupleGetItem(func_6324_call(), 0)
call_6403 = relay.TupleGetItem(func_6326_call(), 0)
output = call_6402
output2 = call_6403
func_6408 = relay.Function([], output)
mod['func_6408'] = func_6408
mod = relay.transform.InferType()(mod)
mutated_mod['func_6408'] = func_6408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6408_call = mutated_mod.get_global_var('func_6408')
call_6409 = func_6408_call()
output = call_6409
func_6410 = relay.Function([], output)
mutated_mod['func_6410'] = func_6410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5114_call = mod.get_global_var('func_5114')
func_5115_call = mutated_mod.get_global_var('func_5115')
call_6426 = func_5114_call()
call_6427 = func_5114_call()
var_6428 = relay.var("var_6428", dtype = "float32", shape = (4, 7, 16))#candidate|6428|(4, 7, 16)|var|float32
bop_6429 = relay.greater(call_6426.astype('bool'), relay.reshape(var_6428.astype('bool'), relay.shape_of(call_6426))) # shape=(4, 7, 16)
bop_6432 = relay.greater(call_6427.astype('bool'), relay.reshape(var_6428.astype('bool'), relay.shape_of(call_6427))) # shape=(4, 7, 16)
uop_6434 = relay.acos(var_6428.astype('float32')) # shape=(4, 7, 16)
func_3849_call = mod.get_global_var('func_3849')
func_3851_call = mutated_mod.get_global_var('func_3851')
call_6442 = relay.TupleGetItem(func_3849_call(), 0)
call_6443 = relay.TupleGetItem(func_3851_call(), 0)
func_4216_call = mod.get_global_var('func_4216')
func_4217_call = mutated_mod.get_global_var('func_4217')
call_6460 = relay.TupleGetItem(func_4216_call(), 0)
call_6461 = relay.TupleGetItem(func_4217_call(), 0)
bop_6466 = relay.greater_equal(uop_6434.astype('bool'), relay.reshape(bop_6429.astype('bool'), relay.shape_of(uop_6434))) # shape=(4, 7, 16)
bop_6469 = relay.greater_equal(uop_6434.astype('bool'), relay.reshape(bop_6432.astype('bool'), relay.shape_of(uop_6434))) # shape=(4, 7, 16)
func_4025_call = mod.get_global_var('func_4025')
func_4027_call = mutated_mod.get_global_var('func_4027')
const_6474 = relay.const([8.491824,4.328355,-9.456605,6.074042,-9.123722,2.380403,-7.276939,9.644289,2.367996,-9.726019,7.269560,-1.721483,-2.981890,4.897276,5.304101,7.462931,5.236532,2.028599,-4.939646,-1.468749,-6.827780,-0.933897,-3.252152,-3.209886,0.719245,6.238463,5.236725,9.268048,2.537414,5.587901,7.998928,-4.966147,1.763631,6.749573,-0.251640,-9.998780,5.187186,5.377141,7.994928,2.964650,-8.462665,9.929103,-8.346749,9.775306,0.029104,-4.235983,-2.554052,8.474131,-0.752949,2.160071,-5.659462,-9.721008,-9.888863,2.694775,9.571821,-6.807941,1.831984,4.869367,-2.778193,-0.824715,3.357072,-0.739784,2.006146,7.043872,-4.133978,-6.139273,-6.068856,-1.516693,9.028601,-2.349327,5.175515,-5.130703,-0.438560,-8.279678,2.947058,-8.277172,-7.806225,-7.720175,-6.265858,3.988166,-1.220599,0.835831,-9.273305,7.024234,-8.986981,-2.599997,-3.304680,-8.256871,-9.611287,5.855043,4.905213,-1.244960,-5.156890,3.606752,-0.482954,-5.268051,7.252620,-2.681735,0.032137,6.732385,1.585804,6.148907,-8.924659,2.467214,7.154483,-1.419551,-1.373688,-7.805531,4.509903,-2.877548,-1.486389,-4.919984,-3.925649,-1.277909,-7.882541,5.343716,5.788730,0.921667,9.663874,6.596814,3.151234,0.458003,-4.359430,2.549356,-1.840558,-7.361715,-7.401993,-5.039566,2.288800,-1.269708,-5.009748,7.881133,4.053573,2.926088,2.023156,3.000416,5.676617,5.415906,-2.655411,8.239783,-0.482800,3.413093,1.035483,1.279504,-8.495391,-8.674388,-2.327395,9.177395,9.752870,-2.772865,8.624293,0.489278,-8.418169,-3.054141,8.648740,4.642945,2.636117,-3.346429,-3.436564,9.771790,-1.618039,5.543846,-4.968078,-1.524934,-8.387606], dtype = "float32")#candidate|6474|(165,)|const|float32
call_6473 = func_4025_call(relay.reshape(const_6474.astype('float32'), [1, 15, 11]))
call_6475 = func_4025_call(relay.reshape(const_6474.astype('float32'), [1, 15, 11]))
output = relay.Tuple([call_6442,call_6460,bop_6466,call_6473,const_6474,])
output2 = relay.Tuple([call_6443,call_6461,bop_6469,call_6475,const_6474,])
func_6489 = relay.Function([var_6428,], output)
mod['func_6489'] = func_6489
mod = relay.transform.InferType()(mod)
mutated_mod['func_6489'] = func_6489
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6490 = relay.var("var_6490", dtype = "float32", shape = (4, 7, 16))#candidate|6490|(4, 7, 16)|var|float32
func_6489_call = mutated_mod.get_global_var('func_6489')
call_6491 = func_6489_call(var_6490)
output = call_6491
func_6492 = relay.Function([var_6490], output)
mutated_mod['func_6492'] = func_6492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6408_call = mod.get_global_var('func_6408')
func_6410_call = mutated_mod.get_global_var('func_6410')
call_6541 = func_6408_call()
call_6542 = func_6408_call()
func_4216_call = mod.get_global_var('func_4216')
func_4217_call = mutated_mod.get_global_var('func_4217')
call_6547 = relay.TupleGetItem(func_4216_call(), 0)
call_6548 = relay.TupleGetItem(func_4217_call(), 0)
output = relay.Tuple([call_6541,call_6547,])
output2 = relay.Tuple([call_6542,call_6548,])
func_6550 = relay.Function([], output)
mod['func_6550'] = func_6550
mod = relay.transform.InferType()(mod)
mutated_mod['func_6550'] = func_6550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6550_call = mutated_mod.get_global_var('func_6550')
call_6551 = func_6550_call()
output = call_6551
func_6552 = relay.Function([], output)
mutated_mod['func_6552'] = func_6552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mod.get_global_var('func_4488')
func_4489_call = mutated_mod.get_global_var('func_4489')
call_6564 = relay.TupleGetItem(func_4488_call(), 1)
call_6565 = relay.TupleGetItem(func_4489_call(), 1)
var_6567 = relay.var("var_6567", dtype = "float64", shape = (16, 13, 6))#candidate|6567|(16, 13, 6)|var|float64
bop_6568 = relay.power(call_6564.astype('float32'), relay.reshape(var_6567.astype('float32'), relay.shape_of(call_6564))) # shape=(16, 13, 6)
bop_6571 = relay.power(call_6565.astype('float32'), relay.reshape(var_6567.astype('float32'), relay.shape_of(call_6565))) # shape=(16, 13, 6)
output = relay.Tuple([bop_6568,])
output2 = relay.Tuple([bop_6571,])
func_6578 = relay.Function([var_6567,], output)
mod['func_6578'] = func_6578
mod = relay.transform.InferType()(mod)
var_6579 = relay.var("var_6579", dtype = "float64", shape = (16, 13, 6))#candidate|6579|(16, 13, 6)|var|float64
output = func_6578(var_6579)
func_6580 = relay.Function([var_6579], output)
mutated_mod['func_6580'] = func_6580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6048_call = mod.get_global_var('func_6048')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_6585 = relay.TupleGetItem(func_6048_call(), 0)
call_6586 = relay.TupleGetItem(func_6050_call(), 0)
func_5393_call = mod.get_global_var('func_5393')
func_5394_call = mutated_mod.get_global_var('func_5394')
call_6599 = relay.TupleGetItem(func_5393_call(), 0)
call_6600 = relay.TupleGetItem(func_5394_call(), 0)
output = relay.Tuple([call_6585,call_6599,])
output2 = relay.Tuple([call_6586,call_6600,])
func_6601 = relay.Function([], output)
mod['func_6601'] = func_6601
mod = relay.transform.InferType()(mod)
mutated_mod['func_6601'] = func_6601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6601_call = mutated_mod.get_global_var('func_6601')
call_6602 = func_6601_call()
output = call_6602
func_6603 = relay.Function([], output)
mutated_mod['func_6603'] = func_6603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5393_call = mod.get_global_var('func_5393')
func_5394_call = mutated_mod.get_global_var('func_5394')
call_6624 = relay.TupleGetItem(func_5393_call(), 1)
call_6625 = relay.TupleGetItem(func_5394_call(), 1)
var_6635 = relay.var("var_6635", dtype = "uint16", shape = (4, 7, 16))#candidate|6635|(4, 7, 16)|var|uint16
bop_6636 = relay.minimum(call_6624.astype('uint64'), relay.reshape(var_6635.astype('uint64'), relay.shape_of(call_6624))) # shape=(4, 7, 16)
bop_6639 = relay.minimum(call_6625.astype('uint64'), relay.reshape(var_6635.astype('uint64'), relay.shape_of(call_6625))) # shape=(4, 7, 16)
uop_6644 = relay.asin(bop_6636.astype('float32')) # shape=(4, 7, 16)
uop_6646 = relay.asin(bop_6639.astype('float32')) # shape=(4, 7, 16)
output = uop_6644
output2 = uop_6646
func_6658 = relay.Function([var_6635,], output)
mod['func_6658'] = func_6658
mod = relay.transform.InferType()(mod)
mutated_mod['func_6658'] = func_6658
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6659 = relay.var("var_6659", dtype = "uint16", shape = (4, 7, 16))#candidate|6659|(4, 7, 16)|var|uint16
func_6658_call = mutated_mod.get_global_var('func_6658')
call_6660 = func_6658_call(var_6659)
output = call_6660
func_6661 = relay.Function([var_6659], output)
mutated_mod['func_6661'] = func_6661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3849_call = mod.get_global_var('func_3849')
func_3851_call = mutated_mod.get_global_var('func_3851')
call_6715 = relay.TupleGetItem(func_3849_call(), 0)
call_6716 = relay.TupleGetItem(func_3851_call(), 0)
output = relay.Tuple([call_6715,])
output2 = relay.Tuple([call_6716,])
func_6717 = relay.Function([], output)
mod['func_6717'] = func_6717
mod = relay.transform.InferType()(mod)
mutated_mod['func_6717'] = func_6717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6717_call = mutated_mod.get_global_var('func_6717')
call_6718 = func_6717_call()
output = call_6718
func_6719 = relay.Function([], output)
mutated_mod['func_6719'] = func_6719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3378_call = mod.get_global_var('func_3378')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_6759 = relay.TupleGetItem(func_3378_call(), 0)
call_6760 = relay.TupleGetItem(func_3379_call(), 0)
func_1189_call = mod.get_global_var('func_1189')
func_1192_call = mutated_mod.get_global_var('func_1192')
var_6775 = relay.var("var_6775", dtype = "int16", shape = ())#candidate|6775|()|var|int16
call_6774 = relay.TupleGetItem(func_1189_call(relay.reshape(var_6775.astype('int16'), [])), 0)
call_6776 = relay.TupleGetItem(func_1192_call(relay.reshape(var_6775.astype('int16'), [])), 0)
func_6116_call = mod.get_global_var('func_6116')
func_6120_call = mutated_mod.get_global_var('func_6120')
var_6782 = relay.var("var_6782", dtype = "bool", shape = (120, 8))#candidate|6782|(120, 8)|var|bool
call_6781 = relay.TupleGetItem(func_6116_call(relay.reshape(var_6782.astype('bool'), [960,]), relay.reshape(var_6775.astype('int16'), []), ), 0)
call_6783 = relay.TupleGetItem(func_6120_call(relay.reshape(var_6782.astype('bool'), [960,]), relay.reshape(var_6775.astype('int16'), []), ), 0)
output = relay.Tuple([call_6759,call_6774,var_6775,call_6781,var_6782,])
output2 = relay.Tuple([call_6760,call_6776,var_6775,call_6783,var_6782,])
func_6802 = relay.Function([var_6775,var_6782,], output)
mod['func_6802'] = func_6802
mod = relay.transform.InferType()(mod)
var_6803 = relay.var("var_6803", dtype = "int16", shape = ())#candidate|6803|()|var|int16
var_6804 = relay.var("var_6804", dtype = "bool", shape = (120, 8))#candidate|6804|(120, 8)|var|bool
output = func_6802(var_6803,var_6804,)
func_6805 = relay.Function([var_6803,var_6804,], output)
mutated_mod['func_6805'] = func_6805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mod.get_global_var('func_4488')
func_4489_call = mutated_mod.get_global_var('func_4489')
call_6826 = relay.TupleGetItem(func_4488_call(), 2)
call_6827 = relay.TupleGetItem(func_4489_call(), 2)
func_2211_call = mod.get_global_var('func_2211')
func_2216_call = mutated_mod.get_global_var('func_2216')
const_6849 = relay.const([10,-7,4,-3,3,2,-8,-6,8,5,-6,-9,-7,1,-7,-3,-4,1,-4,6,4,5,7,-3,1,-6,6,-7,-6,-8,-1,-1,-3,3,-5,-7,7,3,1,10,3,-9,1,-3,-6,-1,-3,-2,-5,6,-5,8,-2,7,-6,-7,3,9,4,3,2,7,-6,-4,5,10,-10,2,-1,7,-6,-8,2,2,-9,6,-9,-7,-5,6,10,7,-6,3,-8,5,-7,-2,10,3,-7,9,5,2,8,9,4,9,7,-7,4,-8,7,-8,-3,4,-3,7,10,9,5,-7,3,1,8,4,2,-3,-1,-5,3,4,4,-5,9,4,1,7,5,-4,9,-7,8,-1,-10,-3,6,10,-9,4,-8,-5,10,-2,1,-2,-2,1,-6,10,9,-10,3,4,-4,3,9,-10,10,-5,-8,1,-5,-1,-5,6,6,-8,5,-2,-10,-10,3,-9,-4,3,-3,-3,9,7,6,-7,-9,-3,6,-3,10,-9,-3,-5,-3,8,-5,4,4,-7,7,5,10,2,5,6,7,8,2,-7,-4,-2,-6,4,-10,-10,-6,2,-3,3,10,-3,3,-8,-7,-1,-10,3,-1,-3,9,-5,8,-10,-4,1,2,-10,7,3,3,-8,-9,8,-7,1,6,-10,5,-9,5,-2,4,-4,-10,-7,-3,7,-8,-1,7,1,-8,-10,-1,4,9,-4,8,5,7,4,-9,-9,5,9,2,7,-1,4,6,-7,-4,9,1,3,-6,-5,5,1,3,-3,-2,-6,-7,-6,-10,9,3,7,2,1,4,-4,-9,-10,6,9,4,-2,8,6,-10,2,-5,-9,-7,-8,6,2,6,10,-9,-2,6,6,2,2,10,-7,-10,-3,-7,-10,2,8,7,-2,7,-9,-9,-7,-10,-3,10,5,-6,-9,-1,6,2,-1,-2,-7,-10,1,3,10,-4,4,-5,-4,-7,-4,3,-2,-5,-5,-10,5,-9,9,4,-5,-4,-4,6,-10,2,-3,-7,9,-2,9,7,1,-2,-5,-10,7,-9,-3,-9,-10,-10,-6,-10,8,-9,3,3,-9,-4,3,7,10,-1,1,-7,-2,7,-3,-3,8,-8,-10,-5,-7,-7,3,-10,-10,-5,4,-5,10,-4,-9,-3,-1,-10,-1,-1,-3,9,-2,8,-2,4,-6,2,-9,8,5,4,2,8,10,2,-8,1,1,-2,4,-9,-5,8,-9,-1,-6,2,-3,-1,-10,6,5,-7,-7,-9,5,3,1,3,6,4,-10,-1,-7,-6,9,-6,-7,1,2,-7,10,-4,-9,-2,-2,8,3,7,-4,-8,4,7,6,7,10,2,2,-2,4,8,10,-8,-7,-2,7,-4,-3,2,9,-7,1,-8,7,6,3,7,-3,-6,-1,3,-8,7,-10,-3,6,7,-1,-2,6,-2,-3,-2,-6,-9,7,-3,9,-8,-8,-7,1,4,2,2,4,-8,-5,-5,9], dtype = "int16")#candidate|6849|(550,)|const|int16
call_6848 = relay.TupleGetItem(func_2211_call(relay.reshape(const_6849.astype('int16'), [10, 5, 11]), relay.reshape(const_6849.astype('int16'), [10, 5, 11]), relay.reshape(const_6849.astype('int16'), [10, 5, 11]), ), 1)
call_6850 = relay.TupleGetItem(func_2216_call(relay.reshape(const_6849.astype('int16'), [10, 5, 11]), relay.reshape(const_6849.astype('int16'), [10, 5, 11]), relay.reshape(const_6849.astype('int16'), [10, 5, 11]), ), 1)
output = relay.Tuple([call_6826,call_6848,const_6849,])
output2 = relay.Tuple([call_6827,call_6850,const_6849,])
func_6865 = relay.Function([], output)
mod['func_6865'] = func_6865
mod = relay.transform.InferType()(mod)
mutated_mod['func_6865'] = func_6865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6865_call = mutated_mod.get_global_var('func_6865')
call_6866 = func_6865_call()
output = call_6866
func_6867 = relay.Function([], output)
mutated_mod['func_6867'] = func_6867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4633_call = mod.get_global_var('func_4633')
func_4634_call = mutated_mod.get_global_var('func_4634')
call_6895 = relay.TupleGetItem(func_4633_call(), 0)
call_6896 = relay.TupleGetItem(func_4634_call(), 0)
func_5645_call = mod.get_global_var('func_5645')
func_5647_call = mutated_mod.get_global_var('func_5647')
call_6900 = func_5645_call()
call_6901 = func_5645_call()
output = relay.Tuple([call_6895,call_6900,])
output2 = relay.Tuple([call_6896,call_6901,])
func_6904 = relay.Function([], output)
mod['func_6904'] = func_6904
mod = relay.transform.InferType()(mod)
output = func_6904()
func_6905 = relay.Function([], output)
mutated_mod['func_6905'] = func_6905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5393_call = mod.get_global_var('func_5393')
func_5394_call = mutated_mod.get_global_var('func_5394')
call_6906 = relay.TupleGetItem(func_5393_call(), 1)
call_6907 = relay.TupleGetItem(func_5394_call(), 1)
func_6340_call = mod.get_global_var('func_6340')
func_6341_call = mutated_mod.get_global_var('func_6341')
call_6916 = relay.TupleGetItem(func_6340_call(), 0)
call_6917 = relay.TupleGetItem(func_6341_call(), 0)
func_5761_call = mod.get_global_var('func_5761')
func_5762_call = mutated_mod.get_global_var('func_5762')
call_6927 = func_5761_call()
call_6928 = func_5761_call()
output = relay.Tuple([call_6906,call_6916,call_6927,])
output2 = relay.Tuple([call_6907,call_6917,call_6928,])
func_6936 = relay.Function([], output)
mod['func_6936'] = func_6936
mod = relay.transform.InferType()(mod)
mutated_mod['func_6936'] = func_6936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6936_call = mutated_mod.get_global_var('func_6936')
call_6937 = func_6936_call()
output = call_6937
func_6938 = relay.Function([], output)
mutated_mod['func_6938'] = func_6938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5393_call = mod.get_global_var('func_5393')
func_5394_call = mutated_mod.get_global_var('func_5394')
call_6939 = relay.TupleGetItem(func_5393_call(), 0)
call_6940 = relay.TupleGetItem(func_5394_call(), 0)
output = call_6939
output2 = call_6940
func_6948 = relay.Function([], output)
mod['func_6948'] = func_6948
mod = relay.transform.InferType()(mod)
output = func_6948()
func_6949 = relay.Function([], output)
mutated_mod['func_6949'] = func_6949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5114_call = mod.get_global_var('func_5114')
func_5115_call = mutated_mod.get_global_var('func_5115')
call_6956 = func_5114_call()
call_6957 = func_5114_call()
output = call_6956
output2 = call_6957
func_6959 = relay.Function([], output)
mod['func_6959'] = func_6959
mod = relay.transform.InferType()(mod)
mutated_mod['func_6959'] = func_6959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6959_call = mutated_mod.get_global_var('func_6959')
call_6960 = func_6959_call()
output = call_6960
func_6961 = relay.Function([], output)
mutated_mod['func_6961'] = func_6961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6904_call = mod.get_global_var('func_6904')
func_6905_call = mutated_mod.get_global_var('func_6905')
call_6962 = relay.TupleGetItem(func_6904_call(), 1)
call_6963 = relay.TupleGetItem(func_6905_call(), 1)
func_5799_call = mod.get_global_var('func_5799')
func_5801_call = mutated_mod.get_global_var('func_5801')
call_6985 = relay.TupleGetItem(func_5799_call(relay.reshape(call_6962.astype('uint64'), [4, 7, 16])), 0)
call_6986 = relay.TupleGetItem(func_5801_call(relay.reshape(call_6962.astype('uint64'), [4, 7, 16])), 0)
output = relay.Tuple([call_6962,call_6985,])
output2 = relay.Tuple([call_6963,call_6986,])
func_7004 = relay.Function([], output)
mod['func_7004'] = func_7004
mod = relay.transform.InferType()(mod)
output = func_7004()
func_7005 = relay.Function([], output)
mutated_mod['func_7005'] = func_7005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5103_call = mod.get_global_var('func_5103')
func_5105_call = mutated_mod.get_global_var('func_5105')
call_7201 = relay.TupleGetItem(func_5103_call(), 0)
call_7202 = relay.TupleGetItem(func_5105_call(), 0)
func_6802_call = mod.get_global_var('func_6802')
func_6805_call = mutated_mod.get_global_var('func_6805')
var_7208 = relay.var("var_7208", dtype = "int16", shape = ())#candidate|7208|()|var|int16
const_7209 = relay.const([False,False,False,True,False,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,True,True,True,True,False,True,True,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,True,True,True,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,False,False,True,False,True,True,True,True,True,True,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,False,False,False,False,False,False,True,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,True,True,True,False,False,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,False,False,True,True,False,True,False,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True,True,False,True,False,True,False,False,False,True,False,True,False,False,False,False,True,False,False,True,True,True,True,False,True,False,True,True,False,True,False,True,False,False,False,False,True,True,False,False,False,False,True,False,True,False,False,False,False,True,True,True,False,True,True,True,True,False,False,True,True,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,True,True,True,True,True,True,True,True,True,True,False,True,False,False,True,False,False,False,False,True,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,True,True,True,True,False,False,True,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,False,False,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,False,True,True,False,False,True,True,False,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,False,False,True,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,True,True,True,True,False,False,True,True,False,False,False,False,False,False,True,True,True,False,True,True,False,False,False,True,True,False,True,True,True,False,False,True,True,True,False,True,True,True,False,True,False,False,True,False,False,False,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,False,False,True,True,False,False,True,False,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,False,False,True,False,False,False,False,True,False,False,True,False,True,False,True,False,False,True,False,True,False,False,False,False,False,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,True,True,True,False,True,True,True,True,False,True,False,False,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False,False,False,True,True,False,False,True,True,False,False,True,False,True,True,True,False,True,True,True,False,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,False,False,False,True,True,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,False,True,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,False,False,True,True,True,False,True,True,True,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,True,True,False,False,True,True,True,True,True,False,True,True,False,False,False,False,True,True,False,True,False,False,False,False,False,False,True,True,True,True,True,False,True,True,True,False,True,False,True,False,True,False,False,True,True,False,False,False,False,False,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,False,False,True,True,True,True,False,False,True,True,True,False,True,True,False,True,False,False,False,False,False,False,False,True,False,True,False,False,False,False,False,True,False,True,False,False,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,False,False,True,True,True,False,True,False,True,True,False,True,False,False,False,False,True,True,True], dtype = "bool")#candidate|7209|(960,)|const|bool
call_7207 = relay.TupleGetItem(func_6802_call(relay.reshape(var_7208.astype('int16'), []), relay.reshape(const_7209.astype('bool'), [120, 8]), ), 4)
call_7210 = relay.TupleGetItem(func_6805_call(relay.reshape(var_7208.astype('int16'), []), relay.reshape(const_7209.astype('bool'), [120, 8]), ), 4)
func_5282_call = mod.get_global_var('func_5282')
func_5284_call = mutated_mod.get_global_var('func_5284')
call_7215 = relay.TupleGetItem(func_5282_call(), 0)
call_7216 = relay.TupleGetItem(func_5284_call(), 0)
func_5775_call = mod.get_global_var('func_5775')
func_5777_call = mutated_mod.get_global_var('func_5777')
call_7219 = func_5775_call()
call_7220 = func_5775_call()
uop_7232 = relay.log2(call_7219.astype('float64')) # shape=(4, 7, 16)
uop_7234 = relay.log2(call_7220.astype('float64')) # shape=(4, 7, 16)
output = relay.Tuple([call_7201,call_7207,var_7208,const_7209,call_7215,uop_7232,])
output2 = relay.Tuple([call_7202,call_7210,var_7208,const_7209,call_7216,uop_7234,])
func_7248 = relay.Function([var_7208,], output)
mod['func_7248'] = func_7248
mod = relay.transform.InferType()(mod)
var_7249 = relay.var("var_7249", dtype = "int16", shape = ())#candidate|7249|()|var|int16
output = func_7248(var_7249)
func_7250 = relay.Function([var_7249], output)
mutated_mod['func_7250'] = func_7250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4633_call = mod.get_global_var('func_4633')
func_4634_call = mutated_mod.get_global_var('func_4634')
call_7277 = relay.TupleGetItem(func_4633_call(), 0)
call_7278 = relay.TupleGetItem(func_4634_call(), 0)
func_5485_call = mod.get_global_var('func_5485')
func_5489_call = mutated_mod.get_global_var('func_5489')
const_7306 = relay.const([False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,True,False,True,True,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,False,False,True,True,False,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,False,False,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,False,True,False,True,False,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,False,False,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,True,False,True,True,False,False,False,True,True,True,True,False,False,True,True,True,True,False,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,True,False,False,True,True,True,False,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,False,True,True,True,True,False,False,True,True,True,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,True,True,True,False,True,True,True,False,True,False,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,False,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,True,False,True,True,True,True,False,True,False,True,False,False,False,True,False,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,True,True,False,False,False,True,True,False,True,False,False,True,False,False,True,False,False,True,True,True,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,True,False,False,True,True,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,False,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,False,True,True,True,False,True,False,True,False,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,True,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,False,True,False,True,False,False,True,True,False,True,True,False,True,True,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,True,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,False,False,True,False,True,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,True,True,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,False], dtype = "bool")#candidate|7306|(960,)|const|bool
const_7307 = relay.const(10, dtype = "int16")#candidate|7307|()|const|int16
call_7305 = relay.TupleGetItem(func_5485_call(relay.reshape(const_7306.astype('bool'), [4, 15, 16]), relay.reshape(const_7306.astype('bool'), [4, 15, 16]), relay.reshape(const_7307.astype('int16'), []), ), 4)
call_7308 = relay.TupleGetItem(func_5489_call(relay.reshape(const_7306.astype('bool'), [4, 15, 16]), relay.reshape(const_7306.astype('bool'), [4, 15, 16]), relay.reshape(const_7307.astype('int16'), []), ), 4)
output = relay.Tuple([call_7277,call_7305,const_7306,const_7307,])
output2 = relay.Tuple([call_7278,call_7308,const_7306,const_7307,])
func_7318 = relay.Function([], output)
mod['func_7318'] = func_7318
mod = relay.transform.InferType()(mod)
mutated_mod['func_7318'] = func_7318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7318_call = mutated_mod.get_global_var('func_7318')
call_7319 = func_7318_call()
output = call_7319
func_7320 = relay.Function([], output)
mutated_mod['func_7320'] = func_7320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4633_call = mod.get_global_var('func_4633')
func_4634_call = mutated_mod.get_global_var('func_4634')
call_7335 = relay.TupleGetItem(func_4633_call(), 0)
call_7336 = relay.TupleGetItem(func_4634_call(), 0)
func_6340_call = mod.get_global_var('func_6340')
func_6341_call = mutated_mod.get_global_var('func_6341')
call_7342 = relay.TupleGetItem(func_6340_call(), 0)
call_7343 = relay.TupleGetItem(func_6341_call(), 0)
output = relay.Tuple([call_7335,call_7342,])
output2 = relay.Tuple([call_7336,call_7343,])
func_7350 = relay.Function([], output)
mod['func_7350'] = func_7350
mod = relay.transform.InferType()(mod)
output = func_7350()
func_7351 = relay.Function([], output)
mutated_mod['func_7351'] = func_7351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5645_call = mod.get_global_var('func_5645')
func_5647_call = mutated_mod.get_global_var('func_5647')
call_7354 = func_5645_call()
call_7355 = func_5645_call()
output = relay.Tuple([call_7354,])
output2 = relay.Tuple([call_7355,])
func_7362 = relay.Function([], output)
mod['func_7362'] = func_7362
mod = relay.transform.InferType()(mod)
mutated_mod['func_7362'] = func_7362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7362_call = mutated_mod.get_global_var('func_7362')
call_7363 = func_7362_call()
output = call_7363
func_7364 = relay.Function([], output)
mutated_mod['func_7364'] = func_7364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6717_call = mod.get_global_var('func_6717')
func_6719_call = mutated_mod.get_global_var('func_6719')
call_7368 = relay.TupleGetItem(func_6717_call(), 0)
call_7369 = relay.TupleGetItem(func_6719_call(), 0)
func_6408_call = mod.get_global_var('func_6408')
func_6410_call = mutated_mod.get_global_var('func_6410')
call_7412 = func_6408_call()
call_7413 = func_6408_call()
func_6489_call = mod.get_global_var('func_6489')
func_6492_call = mutated_mod.get_global_var('func_6492')
call_7421 = relay.TupleGetItem(func_6489_call(relay.reshape(call_7368.astype('float32'), [4, 7, 16])), 2)
call_7422 = relay.TupleGetItem(func_6492_call(relay.reshape(call_7368.astype('float32'), [4, 7, 16])), 2)
output = relay.Tuple([call_7368,call_7412,call_7421,])
output2 = relay.Tuple([call_7369,call_7413,call_7422,])
func_7424 = relay.Function([], output)
mod['func_7424'] = func_7424
mod = relay.transform.InferType()(mod)
mutated_mod['func_7424'] = func_7424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7424_call = mutated_mod.get_global_var('func_7424')
call_7425 = func_7424_call()
output = call_7425
func_7426 = relay.Function([], output)
mutated_mod['func_7426'] = func_7426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mod.get_global_var('func_4488')
func_4489_call = mutated_mod.get_global_var('func_4489')
call_7438 = relay.TupleGetItem(func_4488_call(), 0)
call_7439 = relay.TupleGetItem(func_4489_call(), 0)
func_5373_call = mod.get_global_var('func_5373')
func_5375_call = mutated_mod.get_global_var('func_5375')
const_7446 = relay.const([8,2,-9,6,2,-8,7,9,2,6,1,5,7,5,7,-7,-4,-8,-3,-2,-8,-7,10,5,-5,6,-6,-4,-10,-2,-2,1,1,10,-2,10,-7,-8,-5,10,5,-8,9,-3,-4,6,-7,4,8,1,-10,-3,8,-3,4,4,1,10,7,-3,-2,9,-7,7,-8,-7,-9,-5,-10,1,6,-5,1,-9,1,-9,2,-2,10,-6,8,-7,2,6,-2,9,-4,5,10,-4,-7,-5,1,-9,9,-1,7,-5,-2,4,-6,2,-7,-5,-4,-9,-2,-1,6,-5,-3,1,4,2,7,-10,9,2,2,3,6,6,-10,2,6,10,-4,3,9,4,1,8,9,-4,-7,4,10,-1,10,6,-1,-7,-7,2,6,-1,-3,5,-9,10,7,-9,-7,-9,4,-3,2,-9,-2,7,9,3], dtype = "uint64")#candidate|7446|(162,)|const|uint64
call_7445 = relay.TupleGetItem(func_5373_call(relay.reshape(const_7446.astype('uint64'), [162,])), 1)
call_7447 = relay.TupleGetItem(func_5375_call(relay.reshape(const_7446.astype('uint64'), [162,])), 1)
func_6263_call = mod.get_global_var('func_6263')
func_6265_call = mutated_mod.get_global_var('func_6265')
call_7448 = relay.TupleGetItem(func_6263_call(), 1)
call_7449 = relay.TupleGetItem(func_6265_call(), 1)
bop_7456 = relay.greater_equal(const_7446.astype('bool'), relay.reshape(call_7445.astype('bool'), relay.shape_of(const_7446))) # shape=(162,)
bop_7459 = relay.greater_equal(const_7446.astype('bool'), relay.reshape(call_7447.astype('bool'), relay.shape_of(const_7446))) # shape=(162,)
uop_7462 = relay.exp(bop_7456.astype('float32')) # shape=(162,)
uop_7464 = relay.exp(bop_7459.astype('float32')) # shape=(162,)
func_3849_call = mod.get_global_var('func_3849')
func_3851_call = mutated_mod.get_global_var('func_3851')
call_7473 = relay.TupleGetItem(func_3849_call(), 0)
call_7474 = relay.TupleGetItem(func_3851_call(), 0)
output = relay.Tuple([call_7438,call_7448,uop_7462,call_7473,])
output2 = relay.Tuple([call_7439,call_7449,uop_7464,call_7474,])
func_7479 = relay.Function([], output)
mod['func_7479'] = func_7479
mod = relay.transform.InferType()(mod)
output = func_7479()
func_7480 = relay.Function([], output)
mutated_mod['func_7480'] = func_7480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7318_call = mod.get_global_var('func_7318')
func_7320_call = mutated_mod.get_global_var('func_7320')
call_7504 = relay.TupleGetItem(func_7318_call(), 0)
call_7505 = relay.TupleGetItem(func_7320_call(), 0)
output = call_7504
output2 = call_7505
func_7525 = relay.Function([], output)
mod['func_7525'] = func_7525
mod = relay.transform.InferType()(mod)
mutated_mod['func_7525'] = func_7525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7525_call = mutated_mod.get_global_var('func_7525')
call_7526 = func_7525_call()
output = call_7526
func_7527 = relay.Function([], output)
mutated_mod['func_7527'] = func_7527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4200_call = mod.get_global_var('func_4200')
func_4202_call = mutated_mod.get_global_var('func_4202')
call_7533 = relay.TupleGetItem(func_4200_call(), 0)
call_7534 = relay.TupleGetItem(func_4202_call(), 0)
func_5485_call = mod.get_global_var('func_5485')
func_5489_call = mutated_mod.get_global_var('func_5489')
const_7555 = relay.const([True,True,False,False,True,True,False,False,False,False,True,False,True,False,False,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,True,False,True,False,True,True,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,True,True,True,False,True,True,True,False,True,False,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,False,False,False,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,True,True,False,False,True,True,False,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,True,False,True,True,False,False,False,True,True,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,False,True,False,False,False,True,True,False,False,False,False,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,True,False,True,True,True,False,True,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,False,True,True,True,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,True,False,False,False,True,False,True,True,False,False,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,True,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False,True,False,False,False,False,True,True,True,True,True,False,True,True,False,True,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,True,True,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,True,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,True,False,False,False,True,True,True,False,True,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,True,True,True,False,True,True,False,True,True,False,False,False,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,False,True,False,True,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,False,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,True,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True,False,True,False,False,False,False,True,True,False,False,True,False,False,False,True,True,True,False,False,False,False,False,False,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,True], dtype = "bool")#candidate|7555|(960,)|const|bool
var_7556 = relay.var("var_7556", dtype = "int16", shape = ())#candidate|7556|()|var|int16
call_7554 = relay.TupleGetItem(func_5485_call(relay.reshape(const_7555.astype('bool'), [4, 15, 16]), relay.reshape(const_7555.astype('bool'), [4, 15, 16]), relay.reshape(var_7556.astype('int16'), []), ), 0)
call_7557 = relay.TupleGetItem(func_5489_call(relay.reshape(const_7555.astype('bool'), [4, 15, 16]), relay.reshape(const_7555.astype('bool'), [4, 15, 16]), relay.reshape(var_7556.astype('int16'), []), ), 0)
output = relay.Tuple([call_7533,call_7554,const_7555,var_7556,])
output2 = relay.Tuple([call_7534,call_7557,const_7555,var_7556,])
func_7558 = relay.Function([var_7556,], output)
mod['func_7558'] = func_7558
mod = relay.transform.InferType()(mod)
var_7559 = relay.var("var_7559", dtype = "int16", shape = ())#candidate|7559|()|var|int16
output = func_7558(var_7559)
func_7560 = relay.Function([var_7559], output)
mutated_mod['func_7560'] = func_7560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6340_call = mod.get_global_var('func_6340')
func_6341_call = mutated_mod.get_global_var('func_6341')
call_7628 = relay.TupleGetItem(func_6340_call(), 0)
call_7629 = relay.TupleGetItem(func_6341_call(), 0)
uop_7643 = relay.sin(call_7628.astype('float32')) # shape=(4, 7, 16)
uop_7645 = relay.sin(call_7629.astype('float32')) # shape=(4, 7, 16)
uop_7652 = relay.cosh(uop_7643.astype('float64')) # shape=(4, 7, 16)
uop_7654 = relay.cosh(uop_7645.astype('float64')) # shape=(4, 7, 16)
func_6263_call = mod.get_global_var('func_6263')
func_6265_call = mutated_mod.get_global_var('func_6265')
call_7666 = relay.TupleGetItem(func_6263_call(), 0)
call_7667 = relay.TupleGetItem(func_6265_call(), 0)
func_6340_call = mod.get_global_var('func_6340')
func_6341_call = mutated_mod.get_global_var('func_6341')
call_7669 = relay.TupleGetItem(func_6340_call(), 0)
call_7670 = relay.TupleGetItem(func_6341_call(), 0)
output = relay.Tuple([uop_7652,call_7666,call_7669,])
output2 = relay.Tuple([uop_7654,call_7667,call_7670,])
func_7686 = relay.Function([], output)
mod['func_7686'] = func_7686
mod = relay.transform.InferType()(mod)
output = func_7686()
func_7687 = relay.Function([], output)
mutated_mod['func_7687'] = func_7687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7479_call = mod.get_global_var('func_7479')
func_7480_call = mutated_mod.get_global_var('func_7480')
call_7722 = relay.TupleGetItem(func_7479_call(), 3)
call_7723 = relay.TupleGetItem(func_7480_call(), 3)
func_5620_call = mod.get_global_var('func_5620')
func_5624_call = mutated_mod.get_global_var('func_5624')
var_7725 = relay.var("var_7725", dtype = "float32", shape = (1008,))#candidate|7725|(1008,)|var|float32
const_7726 = relay.const([7,5,10,-2,-3,-6,-8,-6,-9,2,2,9,5,-10,-6,-6,-4,-4,9,1,-2,-6,2,-1,-7,-4,-6,4,10,-6,-7,-9,3,7,9,3,-7,-2,-3,7,-5,-10,5,2,-10,-2,-1,9,-6,8,-6,-7,-2,-9,1,6,10,4,-1,-3,-7,7,-7,3,-5,-7,4,4,-4,-2,3,-8,3,8,-10,-3,5,-2,8,-4,-6,6,8,7,-4,-4,6,-10,3,3,7,8,-5,4,8,6,10,6,-3,9,-6,6,6,1,2,-5,-9,2,-5,-7,4,-9,-7,-6,1,-10,8,-9,10,6,-5,2,3,-7,-10,-3], dtype = "int16")#candidate|7726|(126,)|const|int16
call_7724 = relay.TupleGetItem(func_5620_call(relay.reshape(var_7725.astype('float32'), [14, 9, 8]), relay.reshape(const_7726.astype('int16'), [126,]), ), 0)
call_7727 = relay.TupleGetItem(func_5624_call(relay.reshape(var_7725.astype('float32'), [14, 9, 8]), relay.reshape(const_7726.astype('int16'), [126,]), ), 0)
func_719_call = mod.get_global_var('func_719')
func_721_call = mutated_mod.get_global_var('func_721')
var_7737 = relay.var("var_7737", dtype = "int8", shape = (198,))#candidate|7737|(198,)|var|int8
call_7736 = relay.TupleGetItem(func_719_call(relay.reshape(var_7737.astype('int8'), [2, 9, 11])), 0)
call_7738 = relay.TupleGetItem(func_721_call(relay.reshape(var_7737.astype('int8'), [2, 9, 11])), 0)
func_507_call = mod.get_global_var('func_507')
func_511_call = mutated_mod.get_global_var('func_511')
const_7747 = relay.const([5.722705,3.299517,-8.434584,8.592677,-9.601964,4.714813,9.026185,-5.613644,-6.072851,6.632317,-3.249737,-6.318126,6.450547,6.297543,7.318347,7.938860,-4.950930,4.173572,2.318901,9.884081,6.437360,8.364380,-3.172292,-8.121133,-7.929373,-6.472800,-4.412298,-3.006412,-8.274723,-9.943145,1.017729,-8.079288,-4.334512,-5.809595,-9.870680,-4.493117,9.814205,0.366982,4.450989,-3.467160,6.876009,-3.189076,7.270815,8.401338,-0.502131,0.874258,5.696385,-1.293501,8.197168,4.684767,-0.116726,3.765514,9.281004,8.992221,-4.032392,-7.832120,-6.140760,-2.515792,9.917460,2.369583,5.243458,0.221804,-9.381463,8.901472,1.679179,-2.726068,-6.808339,4.034538,-1.604099,-6.290279,-9.795904,-1.835955,0.676199,-0.328754,-8.429857,5.925716,3.415906,-1.762106,-6.774208,5.002929,-4.613551,9.452009,-4.714766,-4.974173,5.625414,9.997025,8.633722,-9.480490,-2.726701,5.538784,-9.337136,8.366522,-0.199499,0.049020,1.537736,-8.115279,-5.274724,-5.180483,-4.369753,5.562886,1.164202,3.241373,-0.652894,4.026463,-0.814039,7.918512,8.908997,-0.769517,-6.258795,-9.656796,6.797986,9.890672,-4.567905,-9.307696,-8.684490,-1.608604,-3.166246,-4.039130,8.453134,-1.903815,3.932137,-9.929225,-9.537200,-3.916174,7.224063,-2.198686,8.273366,-1.900156,9.416316,-6.441905,1.711066,9.058045,-5.904905,-0.765651,9.857110,8.969425,6.812100,-1.943530,9.532410,-5.976635,7.160574,7.160402,0.790971,4.042385,-9.848100,-3.554276,-9.671731,8.508544,-1.475895,6.206339,-4.546033,-8.213332,-6.980522,7.732434,2.221119,-6.146399,-5.045381,1.581965,-5.348704,-2.439864,-0.246538,-4.803498,-3.396879,0.389481,3.795599,5.169757,7.341227,3.194585,-7.697177,7.580543,7.070107,-3.777889,8.512267,5.568522,-4.082295,-8.175583,-2.682161,-2.051324,1.933923,5.054685,-5.817454,-2.603927,-8.631160,6.465609,3.524631,-6.125910,2.518663,-5.620432,-1.151454,-1.340607,-9.311799,6.257023,0.805849,8.437684,9.240161,4.939467,6.845187,-4.628847,-3.511651,-0.937181,-3.346775,-9.720572,-2.729859,5.141027,-1.531999,8.303465,-7.961046,9.852420,-1.626974,-3.511153,-7.291983,0.621732,-2.440626,7.755605,-5.257947,-0.466998,1.504845,-5.234728,6.015129,-8.091888,1.457583,-9.581399,6.327162,8.209787,0.292692,2.135774,3.510934,5.294688,-7.685889,-7.976510,5.308023,-8.579167,7.425883,-3.816614,-1.967792,-2.140232,-5.197430,5.223043,3.897802,-2.916060,0.056005,-7.923242,-2.374435,-5.632099,-3.443099,7.830849,5.357149,-8.321417,-3.991528,0.897830,-0.878836,-3.128125,9.919447,-3.443938,-3.955409,1.686747,-0.253213,6.470918,4.068208,-6.818228,-2.948411,1.237891,8.882925,0.877960,-3.842284,-9.094227,-3.026221,-4.993515,-5.609375,-5.092725,7.704334,-3.901239,8.521128,-3.603530,3.220336,9.559446,9.675941,3.812505,-6.341610,-1.019550,-5.552005,2.816541,-2.133801,-7.200254,-1.449952,4.306118,-9.824409,-0.863746,2.717458,-9.638597,5.367814,2.335433,1.524095,0.214929,9.259504,-2.723768,-2.843074,-9.569994,6.365240,0.204944,-6.458987,9.236834,8.110183,-3.554325,6.342224,4.758159,-0.170104,3.206998,-4.916169,-4.501733,-1.647593,5.727913,-5.020860,1.590097,-3.459129,-9.919713,-1.164537,6.633674,6.710700,-2.738621,-8.966355,9.259226,-6.736768,-2.243948,2.956059,-8.145226,-8.776861,-6.686970,-5.199306,-9.149469,-7.076486,8.117559,4.508945,-0.122219,-5.479964,3.307017,1.203464,-7.744262,3.466720,-5.654620,1.560992,-1.875735,-4.417898,-7.128872,4.834485,2.742821,2.223829,-7.904467,1.426778,1.984648,1.811277,-7.125768,9.918537,5.915043,-3.471715,9.383422,-2.396559,5.926253,-8.051348,3.272685,-4.742594,-5.503687,1.754920,-7.477025,9.470338,1.866241,-5.243162,5.150613,-3.613877,-2.429792,-9.891629,-9.173203,-9.798239,9.382475,9.648442,-7.472000,4.576659,-8.038617,7.813981,5.955859,-9.366722,5.391026,6.411556,9.813287,8.510363,-1.143852,4.441970,4.686423,-1.634340,5.289357,1.344130,5.863019,-8.911973,-6.986017,3.382532,-2.333253,-4.817627,-8.190461,7.458264,9.313436,-5.965596,-3.336337,-7.653769,3.818718,1.533117,-6.368771,-1.522649,0.770874,1.913778,-3.402236,-0.182016,2.493302,-7.331753,-5.802445,6.463148,0.324806,1.970638,6.273150,9.973043,-3.973647,9.295102,4.071501,-0.158358,-3.755945,-5.334426,-8.371827,-0.110273,0.224956,-1.281527,-6.362968,6.145108,5.005598,2.496226,-7.591998,6.651317,0.289259,-1.650131,-0.895906,-7.207496,-1.717264,4.094203,3.421660,-6.773670,-9.145441,-0.750524,-8.636437,-3.170166,-9.684989,0.510293,-7.111167,2.020916,9.103676,1.052092,-5.161113,8.840890,-6.089553,-9.332565,-8.923887,6.528995,4.700561,1.234834,0.736823,7.915659,0.070180,0.197515,2.245413,-1.838599,-5.139687,-3.667220,5.851593,7.773401,-2.357454,7.643531,6.905830,2.598620,-4.198644,-5.385317,5.868273,3.453643,-3.297767,-4.556312,2.050274,4.778227,-7.232351,-0.438530,1.859315,-3.184713,2.425812,-4.029968,-7.399412,3.013018,-1.603989,-0.111478,3.681013,-4.479084,-4.866536,8.014907,8.533943,7.575543,-6.448382,0.784994,-8.066159,9.908610,1.464782,-2.539701,-5.766471,-4.907045,3.924537,-7.363169,-9.286348,5.015935,3.679639,-0.738491,2.357485,5.661499,-0.721961,8.303920,-0.959631,-5.282006,-6.370670,0.306796,6.727506,2.778482,-5.092998,2.489359,-9.000884,-1.000719,-2.105462,6.182204,-0.107147,3.061668,8.368929,6.403119,-6.922210,-5.193140,-7.178502,9.007255,6.109006,5.603422,-9.953664,1.795293,4.758561,-7.218652,-7.343670,9.050903,-7.011206,6.895902,8.912508,1.201332,2.174985,-7.352692,9.573182,8.309808,-6.662322,6.574443,5.240668,1.983120,-5.307751,-9.950993,2.102261,7.508057,9.983974,-4.974936,-9.916767,-1.841789,4.472195,6.847041,-5.968281,2.370565,4.812968,1.307400,2.518913,8.992802,-2.833857,0.886642,6.215927,-7.863395,1.881044,9.420557,-1.249143,8.091242,-0.995118,5.235408,8.220319,6.964335,0.207570,-2.999545,-1.242520,-6.753224,5.804572,-0.774973,-3.754117,1.203979,7.756322,3.219304,-1.505607,5.609698,-7.245512,2.928137,-8.876840,-1.683398,6.785805,-6.854192,6.805110,7.142620,-0.969816,5.755939,-3.885287,4.442810,-0.039750,4.684527,4.356389,3.447377,3.492770,-1.018024,-4.332520,8.728869,2.734018,1.313021,-2.920412,5.751791,-5.158659,-0.403670,-3.544185,3.191705,-7.715806,2.334457,6.309156,4.519127,-2.253923,-3.081320,0.935428,-3.232147,-1.717721,7.504096,-3.816650,3.083415,5.798718,9.784342,3.595519,-2.845618,-6.640325,-9.140253,4.713157,-3.237138,4.524870,-2.881699,6.799637,9.445979,-1.832477,-4.066487,1.714024,8.176337,8.720863,-8.148469,1.302592,6.454623,6.295791,-6.512394,2.849281,-8.239251,3.315389,4.924178,3.656759,-6.736153,1.664188,4.262353,3.293087,-3.641448,2.510184,6.820043,7.068183,-6.174362,-5.581318,3.785124,-3.012527,-0.475042,-7.996611,-3.775421,-0.674467,8.431607,1.812395,8.731327,-2.129032,-5.929508,-8.195153,-7.098862,-5.702639,-7.700653,9.374684,-4.441134,0.700461,-6.000053,8.081174,-8.955187,1.196790,6.182586,-9.915314,5.344571,-6.275144], dtype = "float32")#candidate|7747|(700,)|const|float32
call_7746 = relay.TupleGetItem(func_507_call(relay.reshape(const_7747.astype('float32'), [7, 10, 10]), relay.reshape(const_7747.astype('float32'), [7, 10, 10]), ), 0)
call_7748 = relay.TupleGetItem(func_511_call(relay.reshape(const_7747.astype('float32'), [7, 10, 10]), relay.reshape(const_7747.astype('float32'), [7, 10, 10]), ), 0)
uop_7749 = relay.atanh(var_7737.astype('float64')) # shape=(198,)
bop_7757 = relay.right_shift(uop_7749.astype('uint8'), relay.reshape(var_7737.astype('uint8'), relay.shape_of(uop_7749))) # shape=(198,)
output = relay.Tuple([call_7722,call_7724,var_7725,const_7726,call_7736,call_7746,const_7747,bop_7757,])
output2 = relay.Tuple([call_7723,call_7727,var_7725,const_7726,call_7738,call_7748,const_7747,bop_7757,])
func_7762 = relay.Function([var_7725,var_7737,], output)
mod['func_7762'] = func_7762
mod = relay.transform.InferType()(mod)
var_7763 = relay.var("var_7763", dtype = "float32", shape = (1008,))#candidate|7763|(1008,)|var|float32
var_7764 = relay.var("var_7764", dtype = "int8", shape = (198,))#candidate|7764|(198,)|var|int8
output = func_7762(var_7763,var_7764,)
func_7765 = relay.Function([var_7763,var_7764,], output)
mutated_mod['func_7765'] = func_7765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6408_call = mod.get_global_var('func_6408')
func_6410_call = mutated_mod.get_global_var('func_6410')
call_7816 = func_6408_call()
call_7817 = func_6408_call()
func_5485_call = mod.get_global_var('func_5485')
func_5489_call = mutated_mod.get_global_var('func_5489')
const_7830 = relay.const([False,True,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,True,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,True,True,False,False,False,False,False,True,False,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,True,False,True,True,False,False,True,True,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,True,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,False,True,False,False,True,False,True,True,False,True,True,True,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,True,True,True,False,False,False,True,True,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,True,True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,True,False,False,True,True,False,False,True,True,True,False,False,True,True,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,True,True,True,False,False,True,True,False,True,False,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,False,True,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,True,True,True,True,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,True,True,False,True,False,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,True,True,True,False,True,True,False,True,True,True,False,False,False,False,True,True,False,False,True,False,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,True,True,True,True,False,True,False,False,False,False,False,True,True,False,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,False,False,True,False,False,False,True,False,True,True,False,False,False,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,False,True,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,True,False,False,True,True,False,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,False,True,False,True,True,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,False,False,False,False,True,False,True,False,True,False,True,True,True,False,False,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,False,True,True,False,True,True,True,True,True,False,False,True,True,False,True,True,True,True,True,False], dtype = "bool")#candidate|7830|(960,)|const|bool
var_7831 = relay.var("var_7831", dtype = "int16", shape = ())#candidate|7831|()|var|int16
call_7829 = relay.TupleGetItem(func_5485_call(relay.reshape(const_7830.astype('bool'), [4, 15, 16]), relay.reshape(const_7830.astype('bool'), [4, 15, 16]), relay.reshape(var_7831.astype('int16'), []), ), 2)
call_7832 = relay.TupleGetItem(func_5489_call(relay.reshape(const_7830.astype('bool'), [4, 15, 16]), relay.reshape(const_7830.astype('bool'), [4, 15, 16]), relay.reshape(var_7831.astype('int16'), []), ), 2)
func_3018_call = mod.get_global_var('func_3018')
func_3020_call = mutated_mod.get_global_var('func_3020')
const_7841 = relay.const([-6.753321,1.522634,4.886883,-9.970900,-0.818791,7.873158,-3.708495,3.094307,7.859086,6.115163,0.416093,-1.162428,9.354679,-3.098446,-3.583433,0.695831,-5.098754,-4.854351,-3.054493,3.769945,1.896341,8.581135,8.455256,-6.580478,-3.850660,7.642375,3.190965,5.800992,5.187169,-2.230546,2.156308,-0.012514,-3.891321,-8.912334,-1.660524,2.706442,-1.324629,8.582606,8.072678,-8.848102,7.519003,5.015895,-5.692209,6.180684,-2.666331], dtype = "float32")#candidate|7841|(45,)|const|float32
call_7840 = relay.TupleGetItem(func_3018_call(relay.reshape(const_7841.astype('float32'), [3, 5, 3])), 0)
call_7842 = relay.TupleGetItem(func_3020_call(relay.reshape(const_7841.astype('float32'), [3, 5, 3])), 0)
output = relay.Tuple([call_7816,call_7829,const_7830,var_7831,call_7840,const_7841,])
output2 = relay.Tuple([call_7817,call_7832,const_7830,var_7831,call_7842,const_7841,])
func_7848 = relay.Function([var_7831,], output)
mod['func_7848'] = func_7848
mod = relay.transform.InferType()(mod)
var_7849 = relay.var("var_7849", dtype = "int16", shape = ())#candidate|7849|()|var|int16
output = func_7848(var_7849)
func_7850 = relay.Function([var_7849], output)
mutated_mod['func_7850'] = func_7850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6340_call = mod.get_global_var('func_6340')
func_6341_call = mutated_mod.get_global_var('func_6341')
call_7928 = relay.TupleGetItem(func_6340_call(), 0)
call_7929 = relay.TupleGetItem(func_6341_call(), 0)
output = call_7928
output2 = call_7929
func_7943 = relay.Function([], output)
mod['func_7943'] = func_7943
mod = relay.transform.InferType()(mod)
mutated_mod['func_7943'] = func_7943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7943_call = mutated_mod.get_global_var('func_7943')
call_7944 = func_7943_call()
output = call_7944
func_7945 = relay.Function([], output)
mutated_mod['func_7945'] = func_7945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6717_call = mod.get_global_var('func_6717')
func_6719_call = mutated_mod.get_global_var('func_6719')
call_7960 = relay.TupleGetItem(func_6717_call(), 0)
call_7961 = relay.TupleGetItem(func_6719_call(), 0)
var_7966 = relay.var("var_7966", dtype = "uint64", shape = (4, 7, 16))#candidate|7966|(4, 7, 16)|var|uint64
bop_7967 = relay.floor_mod(call_7960.astype('float32'), relay.reshape(var_7966.astype('float32'), relay.shape_of(call_7960))) # shape=(4, 7, 16)
bop_7970 = relay.floor_mod(call_7961.astype('float32'), relay.reshape(var_7966.astype('float32'), relay.shape_of(call_7961))) # shape=(4, 7, 16)
output = relay.Tuple([bop_7967,])
output2 = relay.Tuple([bop_7970,])
func_7974 = relay.Function([var_7966,], output)
mod['func_7974'] = func_7974
mod = relay.transform.InferType()(mod)
var_7975 = relay.var("var_7975", dtype = "uint64", shape = (4, 7, 16))#candidate|7975|(4, 7, 16)|var|uint64
output = func_7974(var_7975)
func_7976 = relay.Function([var_7975], output)
mutated_mod['func_7976'] = func_7976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7525_call = mod.get_global_var('func_7525')
func_7527_call = mutated_mod.get_global_var('func_7527')
call_8090 = func_7525_call()
call_8091 = func_7525_call()
func_5620_call = mod.get_global_var('func_5620')
func_5624_call = mutated_mod.get_global_var('func_5624')
var_8095 = relay.var("var_8095", dtype = "float32", shape = (1008,))#candidate|8095|(1008,)|var|float32
const_8096 = relay.const([9,8,-2,2,-8,5,-10,-2,-5,3,3,-6,1,-6,-2,-4,9,-7,-4,9,3,2,7,8,-6,7,-6,-10,-3,-7,-5,7,3,-5,2,3,-1,1,-10,-1,7,-10,3,1,8,2,-8,-7,3,-2,-7,-2,-9,-6,9,9,-7,2,-9,-5,-10,-10,6,-1,-9,-3,7,7,-6,7,2,3,5,9,-8,-10,-9,-7,8,-3,-1,5,2,4,-7,-3,-6,-10,4,4,-4,-10,-5,-10,-7,1,-9,-5,-10,-9,1,8,10,10,-9,-4,9,8,3,10,-2,7,9,2,-5,8,5,-3,6,-9,-8,-10,8,-4,7,-10], dtype = "int16")#candidate|8096|(126,)|const|int16
call_8094 = relay.TupleGetItem(func_5620_call(relay.reshape(var_8095.astype('float32'), [14, 9, 8]), relay.reshape(const_8096.astype('int16'), [126,]), ), 2)
call_8097 = relay.TupleGetItem(func_5624_call(relay.reshape(var_8095.astype('float32'), [14, 9, 8]), relay.reshape(const_8096.astype('int16'), [126,]), ), 2)
output = relay.Tuple([call_8090,call_8094,var_8095,const_8096,])
output2 = relay.Tuple([call_8091,call_8097,var_8095,const_8096,])
func_8109 = relay.Function([var_8095,], output)
mod['func_8109'] = func_8109
mod = relay.transform.InferType()(mod)
var_8110 = relay.var("var_8110", dtype = "float32", shape = (1008,))#candidate|8110|(1008,)|var|float32
output = func_8109(var_8110)
func_8111 = relay.Function([var_8110], output)
mutated_mod['func_8111'] = func_8111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7362_call = mod.get_global_var('func_7362')
func_7364_call = mutated_mod.get_global_var('func_7364')
call_8144 = relay.TupleGetItem(func_7362_call(), 0)
call_8145 = relay.TupleGetItem(func_7364_call(), 0)
var_8148 = relay.var("var_8148", dtype = "float32", shape = (4, 7, 16))#candidate|8148|(4, 7, 16)|var|float32
bop_8149 = relay.bitwise_or(call_8144.astype('int16'), relay.reshape(var_8148.astype('int16'), relay.shape_of(call_8144))) # shape=(4, 7, 16)
bop_8152 = relay.bitwise_or(call_8145.astype('int16'), relay.reshape(var_8148.astype('int16'), relay.shape_of(call_8145))) # shape=(4, 7, 16)
func_5393_call = mod.get_global_var('func_5393')
func_5394_call = mutated_mod.get_global_var('func_5394')
call_8153 = relay.TupleGetItem(func_5393_call(), 0)
call_8154 = relay.TupleGetItem(func_5394_call(), 0)
func_5188_call = mod.get_global_var('func_5188')
func_5191_call = mutated_mod.get_global_var('func_5191')
const_8163 = relay.const(10, dtype = "int16")#candidate|8163|()|const|int16
const_8164 = relay.const([3,-7,8,5,-8,-7,-8,-7,4,10,3,-1,1,-6,5,3,3,-2,-5,2,4,6,-4,-1,-7,4,-8,-8,-2,-8,-10,-5,-10,6,8,1,-7,3,9,2,5,-6,10,-4,8,9,2,5,-5,-9,8,2,-8,9,-9,3,-6,8,5,-10,3,-5,5,1,10,2,10,5,1,5,-6,3,-1,2,5,1,1,-5,3,-6,-5,-2,4,-5,3,2,-10,5,-10,-7,7,2,-3,6,-2,10,-3,-2,-2,-10,9,-6,1,-2,6,-5,-7,-5,-4,8,-5,3,3,-7,-4,-9,10,-2,7,-3,3,-8,-7,-3,-5,-6,3,10,-5,-10,3,10,7,8,5,-8,1,1,10,6,-8,6,2,-5,3,5,-9,1,8,1,-1,4,-9,-8,10,4,8,7,-6,-8,2,-4,10,-6,-3,4,7,5,-2,3,-1,-9,-9,-1,-1,-3,-4,-3,-2,-3,-3,8,4,6,-8,-9,7,8,-6,-2,-9,9,4,8,-10,-1,-9,-5,-4,-10,-9,3,-8,-2,1,-3,-1,-2,4,-8,-2,-9,2,5,-2,-10,5,-7,-4,9,-4,-4,5,-7,7,-5,-8,9,6,-4,8,-9,7,5,-6,-5,-7,5,-6,-10,10,1,10,6,1,-4,7,-1,1,6,-2,-8,-1,-10,-7,-1,6,5,-9,3,4,-8,-3,5,-6,-1,-3,7,4,-2,-8,8,-2,-1,5,-10,3,9,-6,-2,-5,-1,4,2,-3,-10,7,6,-10,-10,-3,5,-8,-2,9,7,8,2,-5,-1,7,1,9,3,6,-6,6,5,-6,-10,-2,8,-6,2,-5,10,-6,7,-10,-5,-4,5,4,5,8,4,-2,-10,5,10,6,-1,2,-6,-8,9,3,3,-4,7,2,2,8,-4,3,-2,-7,9,-10,-4,-7,-2,8,8,-2,4,10,1,7,10,1,-6,4,-10,10,3,-8,8,10,8,4,-7,-9,2,-4,-5,-4,-5,-6,-3,10,6,10,-2,1,-2,1,9,8,5,4,6,8,-4,-8,-5,-2,-4,4,-3,-5,1,-4,5,4,3,7,3,1,-4,-4,-7,9,-9,9,-9,8,-2,2,4,9,-3,-7,4,6,8,6,-8,-9,7,10,-2,-9,1,-4,-7,-2,-9,-7,-6,-2,2,-10,-4,-7,6,-8,6,-5,-9,1,1,-6,-2,-7,5,3,-9,8,-1,-4,-2,7,10,-6,2,6,-3,-8,-5,-3,4,8,8,-7,-10,-8,-3,-2,-9,-3,8,-6,2,-5,-7,-9,-6,-4,-2,-5,-2,-7,-10,-10,-7,-9,4,5,-9,5,1,-7,-1,-3,-4,7,3,-4,1,3,-9,-3,10,-1,10,-5,1,2,-4,5,5,-7,4,-3,-5,4,-1,-9,7,-9,7,10,5,10,-6,1,-8,10,-10,-8,-1,1,9,6,1,3,-9,-7,-4,8,-3,9,-9,-3,4,-6,-4,-1,-8,-7,2,10,-2,8,4,-5,-4,8,5,-4,3,-6,-6,9,1,4,7,-7,-1,-6,10,3,8,-7,5,2,1,6,-2,-3,5,8,-3,3,-9,-2,4,1,9,5,-1,-5,-2,2,-7,8,-6,4,-3,-5,7,9,5,3,2,-9,2,7,-4,-9,4,3,-8,-9,-3,3,-4,-3,-4,2,-4,-1,2,2,7,-8,-3,-2,7,1,-8,2,-7,-10,1,9,2,4,9,1,-9,8,-8,-10,2,5,-6,-3,-3,-3,6,2,5,-1,1,-10,-10,2,-9,-5,4,10,-6,-2,-7,-5,-9,10,-2,8,-4,4,7,4,-10,6,6,3,-2,-2,2,-3,-4,-6,-5,-10,5,2,1,9,-2,5,-4,3,5,-4,-5,-9,9,5,-2,-10,10,10,-10,3,5,-2,-6,2,2,-10,2,-8,-5,-2,10,3,-7,-1,1,9,-10,4,9,1,1,-10,1,3,-1,-4,-8,-10,9,10,-3,-7,-3,3,4,-3,5,9,1,3,-4,4,-3,6,6,-3,8,-6,-8,3,2,8,-1,-5,-6,6,-5,-3,7,-10,7,3,-3,4,-9,3,3,1,8,-8,-4,8,7,8,1,8,-3,-1,2,-6,-2,-4,-2,-1,-1,-9,-3,4,6,-5,-4,-5,4,1,-9,8,-8,8,-7,4,-8,-3,-8,5,3,-3,3,-1,-1,-6,1,-6,4,1,-5,-1,6,5,5,1,2,-4,-3,-3,-9,-7,-2,-1,6,-10,-5,-3,-5,8,-2,7,-5,10,-5,-2,-3,7,3,2,8,-2,2,-7,-6,8,-7,2,5,-2,7,5,5,3,-9,-9,8,-1,7,-9,4,2,10,3,-8,-6,-9,2,4,-1,-10,-10,-2,-9,1,-1,-5,6,9,-1,-4,-9,-9,-6,6,-5,-2,7,8,-10,-5,-3,5,6,-7,-10,-5,6,2,8,-1,-6,-10,6,10,6,-10,6,6,-9,10,-6,10,10,3,-10,10,9,1,-9,-3,8,4,9,9,-5,-7,5,-4,-9,-2,-5,-5,4,2,-10,-8,8,-4,4,-7,2,1,-3,-10,-5,-9], dtype = "int32")#candidate|8164|(968,)|const|int32
call_8162 = relay.TupleGetItem(func_5188_call(relay.reshape(const_8163.astype('int16'), []), relay.reshape(const_8164.astype('int32'), [484, 2]), ), 5)
call_8165 = relay.TupleGetItem(func_5191_call(relay.reshape(const_8163.astype('int16'), []), relay.reshape(const_8164.astype('int32'), [484, 2]), ), 5)
func_7004_call = mod.get_global_var('func_7004')
func_7005_call = mutated_mod.get_global_var('func_7005')
call_8166 = relay.TupleGetItem(func_7004_call(), 0)
call_8167 = relay.TupleGetItem(func_7005_call(), 0)
func_3974_call = mod.get_global_var('func_3974')
func_3976_call = mutated_mod.get_global_var('func_3976')
call_8182 = relay.TupleGetItem(func_3974_call(), 0)
call_8183 = relay.TupleGetItem(func_3976_call(), 0)
func_7686_call = mod.get_global_var('func_7686')
func_7687_call = mutated_mod.get_global_var('func_7687')
call_8186 = relay.TupleGetItem(func_7686_call(), 1)
call_8187 = relay.TupleGetItem(func_7687_call(), 1)
func_6243_call = mod.get_global_var('func_6243')
func_6246_call = mutated_mod.get_global_var('func_6246')
var_8197 = relay.var("var_8197", dtype = "float64", shape = (1760,))#candidate|8197|(1760,)|var|float64
call_8196 = relay.TupleGetItem(func_6243_call(relay.reshape(var_8197.astype('float64'), [11, 10, 16])), 0)
call_8198 = relay.TupleGetItem(func_6246_call(relay.reshape(var_8197.astype('float64'), [11, 10, 16])), 0)
output = relay.Tuple([bop_8149,call_8153,call_8162,const_8163,const_8164,call_8166,call_8182,call_8186,call_8196,var_8197,])
output2 = relay.Tuple([bop_8152,call_8154,call_8165,const_8163,const_8164,call_8167,call_8183,call_8187,call_8198,var_8197,])
func_8204 = relay.Function([var_8148,var_8197,], output)
mod['func_8204'] = func_8204
mod = relay.transform.InferType()(mod)
mutated_mod['func_8204'] = func_8204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8204_call = mutated_mod.get_global_var('func_8204')
var_8206 = relay.var("var_8206", dtype = "float32", shape = (4, 7, 16))#candidate|8206|(4, 7, 16)|var|float32
var_8207 = relay.var("var_8207", dtype = "float64", shape = (1760,))#candidate|8207|(1760,)|var|float64
call_8205 = func_8204_call(var_8206,var_8207,)
output = call_8205
func_8208 = relay.Function([var_8206,var_8207,], output)
mutated_mod['func_8208'] = func_8208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6936_call = mod.get_global_var('func_6936')
func_6938_call = mutated_mod.get_global_var('func_6938')
call_8218 = relay.TupleGetItem(func_6936_call(), 2)
call_8219 = relay.TupleGetItem(func_6938_call(), 2)
func_1271_call = mod.get_global_var('func_1271')
func_1274_call = mutated_mod.get_global_var('func_1274')
var_8235 = relay.var("var_8235", dtype = "int32", shape = (968,))#candidate|8235|(968,)|var|int32
call_8234 = relay.TupleGetItem(func_1271_call(relay.reshape(var_8235.astype('int32'), [8, 11, 11])), 0)
call_8236 = relay.TupleGetItem(func_1274_call(relay.reshape(var_8235.astype('int32'), [8, 11, 11])), 0)
output = relay.Tuple([call_8218,call_8234,var_8235,])
output2 = relay.Tuple([call_8219,call_8236,var_8235,])
func_8242 = relay.Function([var_8235,], output)
mod['func_8242'] = func_8242
mod = relay.transform.InferType()(mod)
mutated_mod['func_8242'] = func_8242
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8243 = relay.var("var_8243", dtype = "int32", shape = (968,))#candidate|8243|(968,)|var|int32
func_8242_call = mutated_mod.get_global_var('func_8242')
call_8244 = func_8242_call(var_8243)
output = call_8244
func_8245 = relay.Function([var_8243], output)
mutated_mod['func_8245'] = func_8245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6904_call = mod.get_global_var('func_6904')
func_6905_call = mutated_mod.get_global_var('func_6905')
call_8247 = relay.TupleGetItem(func_6904_call(), 1)
call_8248 = relay.TupleGetItem(func_6905_call(), 1)
output = call_8247
output2 = call_8248
func_8255 = relay.Function([], output)
mod['func_8255'] = func_8255
mod = relay.transform.InferType()(mod)
mutated_mod['func_8255'] = func_8255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8255_call = mutated_mod.get_global_var('func_8255')
call_8256 = func_8255_call()
output = call_8256
func_8257 = relay.Function([], output)
mutated_mod['func_8257'] = func_8257
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8287 = relay.var("var_8287", dtype = "float64", shape = (6, 5, 7))#candidate|8287|(6, 5, 7)|var|float64
uop_8288 = relay.atan(var_8287.astype('float64')) # shape=(6, 5, 7)
bop_8298 = relay.floor_divide(var_8287.astype('float64'), relay.reshape(uop_8288.astype('float64'), relay.shape_of(var_8287))) # shape=(6, 5, 7)
output = bop_8298
output2 = bop_8298
func_8305 = relay.Function([var_8287,], output)
mod['func_8305'] = func_8305
mod = relay.transform.InferType()(mod)
var_8306 = relay.var("var_8306", dtype = "float64", shape = (6, 5, 7))#candidate|8306|(6, 5, 7)|var|float64
output = func_8305(var_8306)
func_8307 = relay.Function([var_8306], output)
mutated_mod['func_8307'] = func_8307
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8309 = relay.var("var_8309", dtype = "float64", shape = (3, 8, 6))#candidate|8309|(3, 8, 6)|var|float64
uop_8310 = relay.log(var_8309.astype('float64')) # shape=(3, 8, 6)
output = relay.Tuple([uop_8310,])
output2 = relay.Tuple([uop_8310,])
func_8316 = relay.Function([var_8309,], output)
mod['func_8316'] = func_8316
mod = relay.transform.InferType()(mod)
mutated_mod['func_8316'] = func_8316
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8317 = relay.var("var_8317", dtype = "float64", shape = (3, 8, 6))#candidate|8317|(3, 8, 6)|var|float64
func_8316_call = mutated_mod.get_global_var('func_8316')
call_8318 = func_8316_call(var_8317)
output = call_8318
func_8319 = relay.Function([var_8317], output)
mutated_mod['func_8319'] = func_8319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7004_call = mod.get_global_var('func_7004')
func_7005_call = mutated_mod.get_global_var('func_7005')
call_8347 = relay.TupleGetItem(func_7004_call(), 0)
call_8348 = relay.TupleGetItem(func_7005_call(), 0)
output = call_8347
output2 = call_8348
func_8361 = relay.Function([], output)
mod['func_8361'] = func_8361
mod = relay.transform.InferType()(mod)
mutated_mod['func_8361'] = func_8361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8361_call = mutated_mod.get_global_var('func_8361')
call_8362 = func_8361_call()
output = call_8362
func_8363 = relay.Function([], output)
mutated_mod['func_8363'] = func_8363
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8407 = relay.const([[[-5.969379,0.864093,-8.512303,-8.502290,8.027003,-7.128038,6.037049,-7.165728,-2.958066],[2.934983,-1.935882,-5.981329,1.844933,-2.229228,5.705900,0.447465,1.813125,1.697392],[6.359207,4.318470,2.450822,7.704904,0.033400,-3.568371,-0.009808,7.109805,6.870874],[9.061001,-2.005590,-4.959496,8.336197,-9.995791,-6.584223,-9.577518,9.088648,-4.794989],[6.582127,0.836265,4.139914,4.207042,3.648460,0.700486,-0.482783,5.486083,-0.601558],[2.023507,-1.309790,-9.954372,9.881091,-4.875385,8.889114,8.770609,2.820418,9.166422],[-5.461934,-8.015878,-3.243632,5.122240,-0.949711,0.598996,-0.973384,-1.632083,-9.190955],[2.161319,2.398565,6.498093,8.942425,2.347160,6.594657,0.039467,9.250036,-8.725965]],[[2.085361,2.873448,-6.281926,8.404490,0.468748,3.217139,-8.270428,6.470323,8.829861],[-9.670407,2.588089,4.794143,1.834221,-8.232659,-1.134833,-4.608139,-2.172885,1.526021],[-3.720901,7.675070,-9.949027,-1.283846,-0.115874,-1.326551,-5.251011,-2.672510,-5.636659],[-1.235098,-1.974648,6.819832,2.660828,5.686460,2.270731,2.431588,1.744651,0.793757],[3.521077,-2.921343,4.315148,4.649894,-1.478105,1.081471,2.996207,-3.581143,-9.896120],[-6.457781,4.856851,-3.851201,-7.138101,-0.647964,-9.494583,4.316806,5.852793,9.450782],[-7.457600,-2.074069,-3.456608,-9.112187,-8.965028,-5.270057,-2.679080,-7.400482,-9.297757],[-7.758110,-2.999784,-5.071204,-3.058632,5.886736,9.598937,-3.187804,0.886702,-9.506395]]], dtype = "float64")#candidate|8407|(2, 8, 9)|const|float64
var_8408 = relay.var("var_8408", dtype = "float64", shape = (2, 8, 9))#candidate|8408|(2, 8, 9)|var|float64
bop_8409 = relay.power(const_8407.astype('float64'), relay.reshape(var_8408.astype('float64'), relay.shape_of(const_8407))) # shape=(2, 8, 9)
bop_8417 = relay.greater(var_8408.astype('bool'), relay.reshape(const_8407.astype('bool'), relay.shape_of(var_8408))) # shape=(2, 8, 9)
func_5775_call = mod.get_global_var('func_5775')
func_5777_call = mutated_mod.get_global_var('func_5777')
call_8420 = func_5775_call()
call_8421 = func_5775_call()
output = relay.Tuple([bop_8409,bop_8417,call_8420,])
output2 = relay.Tuple([bop_8409,bop_8417,call_8421,])
func_8431 = relay.Function([var_8408,], output)
mod['func_8431'] = func_8431
mod = relay.transform.InferType()(mod)
mutated_mod['func_8431'] = func_8431
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8432 = relay.var("var_8432", dtype = "float64", shape = (2, 8, 9))#candidate|8432|(2, 8, 9)|var|float64
func_8431_call = mutated_mod.get_global_var('func_8431')
call_8433 = func_8431_call(var_8432)
output = call_8433
func_8434 = relay.Function([var_8432], output)
mutated_mod['func_8434'] = func_8434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7525_call = mod.get_global_var('func_7525')
func_7527_call = mutated_mod.get_global_var('func_7527')
call_8464 = func_7525_call()
call_8465 = func_7525_call()
output = relay.Tuple([call_8464,])
output2 = relay.Tuple([call_8465,])
func_8482 = relay.Function([], output)
mod['func_8482'] = func_8482
mod = relay.transform.InferType()(mod)
mutated_mod['func_8482'] = func_8482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8482_call = mutated_mod.get_global_var('func_8482')
call_8483 = func_8482_call()
output = call_8483
func_8484 = relay.Function([], output)
mutated_mod['func_8484'] = func_8484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6408_call = mod.get_global_var('func_6408')
func_6410_call = mutated_mod.get_global_var('func_6410')
call_8496 = func_6408_call()
call_8497 = func_6408_call()
func_5485_call = mod.get_global_var('func_5485')
func_5489_call = mutated_mod.get_global_var('func_5489')
var_8501 = relay.var("var_8501", dtype = "bool", shape = (960,))#candidate|8501|(960,)|var|bool
var_8502 = relay.var("var_8502", dtype = "int16", shape = ())#candidate|8502|()|var|int16
call_8500 = relay.TupleGetItem(func_5485_call(relay.reshape(var_8501.astype('bool'), [4, 15, 16]), relay.reshape(var_8501.astype('bool'), [4, 15, 16]), relay.reshape(var_8502.astype('int16'), []), ), 2)
call_8503 = relay.TupleGetItem(func_5489_call(relay.reshape(var_8501.astype('bool'), [4, 15, 16]), relay.reshape(var_8501.astype('bool'), [4, 15, 16]), relay.reshape(var_8502.astype('int16'), []), ), 2)
func_6936_call = mod.get_global_var('func_6936')
func_6938_call = mutated_mod.get_global_var('func_6938')
call_8513 = relay.TupleGetItem(func_6936_call(), 0)
call_8514 = relay.TupleGetItem(func_6938_call(), 0)
output = relay.Tuple([call_8496,call_8500,var_8501,var_8502,call_8513,])
output2 = relay.Tuple([call_8497,call_8503,var_8501,var_8502,call_8514,])
func_8518 = relay.Function([var_8501,var_8502,], output)
mod['func_8518'] = func_8518
mod = relay.transform.InferType()(mod)
mutated_mod['func_8518'] = func_8518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8518_call = mutated_mod.get_global_var('func_8518')
var_8520 = relay.var("var_8520", dtype = "bool", shape = (960,))#candidate|8520|(960,)|var|bool
var_8521 = relay.var("var_8521", dtype = "int16", shape = ())#candidate|8521|()|var|int16
call_8519 = func_8518_call(var_8520,var_8521,)
output = call_8519
func_8522 = relay.Function([var_8520,var_8521,], output)
mutated_mod['func_8522'] = func_8522
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8558 = relay.var("var_8558", dtype = "float64", shape = (8, 4, 7))#candidate|8558|(8, 4, 7)|var|float64
uop_8559 = relay.tan(var_8558.astype('float64')) # shape=(8, 4, 7)
output = uop_8559
output2 = uop_8559
func_8564 = relay.Function([var_8558,], output)
mod['func_8564'] = func_8564
mod = relay.transform.InferType()(mod)
mutated_mod['func_8564'] = func_8564
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8565 = relay.var("var_8565", dtype = "float64", shape = (8, 4, 7))#candidate|8565|(8, 4, 7)|var|float64
func_8564_call = mutated_mod.get_global_var('func_8564')
call_8566 = func_8564_call(var_8565)
output = call_8566
func_8567 = relay.Function([var_8565], output)
mutated_mod['func_8567'] = func_8567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5510_call = mod.get_global_var('func_5510')
func_5512_call = mutated_mod.get_global_var('func_5512')
call_8615 = func_5510_call()
call_8616 = func_5510_call()
output = call_8615
output2 = call_8616
func_8617 = relay.Function([], output)
mod['func_8617'] = func_8617
mod = relay.transform.InferType()(mod)
output = func_8617()
func_8618 = relay.Function([], output)
mutated_mod['func_8618'] = func_8618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6340_call = mod.get_global_var('func_6340')
func_6341_call = mutated_mod.get_global_var('func_6341')
call_8624 = relay.TupleGetItem(func_6340_call(), 0)
call_8625 = relay.TupleGetItem(func_6341_call(), 0)
func_7004_call = mod.get_global_var('func_7004')
func_7005_call = mutated_mod.get_global_var('func_7005')
call_8630 = relay.TupleGetItem(func_7004_call(), 0)
call_8631 = relay.TupleGetItem(func_7005_call(), 0)
var_8640 = relay.var("var_8640", dtype = "uint64", shape = (4, 7, 16))#candidate|8640|(4, 7, 16)|var|uint64
bop_8641 = relay.not_equal(call_8624.astype('bool'), relay.reshape(var_8640.astype('bool'), relay.shape_of(call_8624))) # shape=(4, 7, 16)
bop_8644 = relay.not_equal(call_8625.astype('bool'), relay.reshape(var_8640.astype('bool'), relay.shape_of(call_8625))) # shape=(4, 7, 16)
output = relay.Tuple([call_8630,bop_8641,])
output2 = relay.Tuple([call_8631,bop_8644,])
func_8647 = relay.Function([var_8640,], output)
mod['func_8647'] = func_8647
mod = relay.transform.InferType()(mod)
var_8648 = relay.var("var_8648", dtype = "uint64", shape = (4, 7, 16))#candidate|8648|(4, 7, 16)|var|uint64
output = func_8647(var_8648)
func_8649 = relay.Function([var_8648], output)
mutated_mod['func_8649'] = func_8649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6263_call = mod.get_global_var('func_6263')
func_6265_call = mutated_mod.get_global_var('func_6265')
call_8654 = relay.TupleGetItem(func_6263_call(), 1)
call_8655 = relay.TupleGetItem(func_6265_call(), 1)
output = call_8654
output2 = call_8655
func_8660 = relay.Function([], output)
mod['func_8660'] = func_8660
mod = relay.transform.InferType()(mod)
output = func_8660()
func_8661 = relay.Function([], output)
mutated_mod['func_8661'] = func_8661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3974_call = mod.get_global_var('func_3974')
func_3976_call = mutated_mod.get_global_var('func_3976')
call_8662 = relay.TupleGetItem(func_3974_call(), 0)
call_8663 = relay.TupleGetItem(func_3976_call(), 0)
func_3558_call = mod.get_global_var('func_3558')
func_3562_call = mutated_mod.get_global_var('func_3562')
var_8666 = relay.var("var_8666", dtype = "uint64", shape = (162,))#candidate|8666|(162,)|var|uint64
call_8665 = relay.TupleGetItem(func_3558_call(relay.reshape(var_8666.astype('uint64'), [6, 3, 9]), relay.reshape(var_8666.astype('uint64'), [6, 3, 9]), ), 0)
call_8667 = relay.TupleGetItem(func_3562_call(relay.reshape(var_8666.astype('uint64'), [6, 3, 9]), relay.reshape(var_8666.astype('uint64'), [6, 3, 9]), ), 0)
func_6116_call = mod.get_global_var('func_6116')
func_6120_call = mutated_mod.get_global_var('func_6120')
var_8671 = relay.var("var_8671", dtype = "bool", shape = (960,))#candidate|8671|(960,)|var|bool
const_8672 = relay.const(-6, dtype = "int16")#candidate|8672|()|const|int16
call_8670 = relay.TupleGetItem(func_6116_call(relay.reshape(var_8671.astype('bool'), [960,]), relay.reshape(const_8672.astype('int16'), []), ), 5)
call_8673 = relay.TupleGetItem(func_6120_call(relay.reshape(var_8671.astype('bool'), [960,]), relay.reshape(const_8672.astype('int16'), []), ), 5)
func_7762_call = mod.get_global_var('func_7762')
func_7765_call = mutated_mod.get_global_var('func_7765')
var_8676 = relay.var("var_8676", dtype = "float32", shape = (1008,))#candidate|8676|(1008,)|var|float32
var_8677 = relay.var("var_8677", dtype = "int8", shape = (198,))#candidate|8677|(198,)|var|int8
call_8675 = relay.TupleGetItem(func_7762_call(relay.reshape(var_8676.astype('float32'), [1008,]), relay.reshape(var_8677.astype('int8'), [198,]), ), 4)
call_8678 = relay.TupleGetItem(func_7765_call(relay.reshape(var_8676.astype('float32'), [1008,]), relay.reshape(var_8677.astype('int8'), [198,]), ), 4)
func_8431_call = mod.get_global_var('func_8431')
func_8434_call = mutated_mod.get_global_var('func_8434')
var_8682 = relay.var("var_8682", dtype = "float64", shape = (144,))#candidate|8682|(144,)|var|float64
call_8681 = relay.TupleGetItem(func_8431_call(relay.reshape(var_8682.astype('float64'), [2, 8, 9])), 1)
call_8683 = relay.TupleGetItem(func_8434_call(relay.reshape(var_8682.astype('float64'), [2, 8, 9])), 1)
var_8684 = relay.var("var_8684", dtype = "int16", shape = (8, 11, 8))#candidate|8684|(8, 11, 8)|var|int16
bop_8685 = relay.greater(const_8672.astype('bool'), var_8684.astype('bool')) # shape=(8, 11, 8)
output = relay.Tuple([call_8662,call_8665,var_8666,call_8670,var_8671,call_8675,var_8676,var_8677,call_8681,var_8682,bop_8685,])
output2 = relay.Tuple([call_8663,call_8667,var_8666,call_8673,var_8671,call_8678,var_8676,var_8677,call_8683,var_8682,bop_8685,])
func_8689 = relay.Function([var_8666,var_8671,var_8676,var_8677,var_8682,var_8684,], output)
mod['func_8689'] = func_8689
mod = relay.transform.InferType()(mod)
mutated_mod['func_8689'] = func_8689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8689_call = mutated_mod.get_global_var('func_8689')
var_8691 = relay.var("var_8691", dtype = "uint64", shape = (162,))#candidate|8691|(162,)|var|uint64
var_8692 = relay.var("var_8692", dtype = "bool", shape = (960,))#candidate|8692|(960,)|var|bool
var_8693 = relay.var("var_8693", dtype = "float32", shape = (1008,))#candidate|8693|(1008,)|var|float32
var_8694 = relay.var("var_8694", dtype = "int8", shape = (198,))#candidate|8694|(198,)|var|int8
var_8695 = relay.var("var_8695", dtype = "float64", shape = (144,))#candidate|8695|(144,)|var|float64
var_8696 = relay.var("var_8696", dtype = "int16", shape = (8, 11, 8))#candidate|8696|(8, 11, 8)|var|int16
call_8690 = func_8689_call(var_8691,var_8692,var_8693,var_8694,var_8695,var_8696,)
output = call_8690
func_8697 = relay.Function([var_8691,var_8692,var_8693,var_8694,var_8695,var_8696,], output)
mutated_mod['func_8697'] = func_8697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7424_call = mod.get_global_var('func_7424')
func_7426_call = mutated_mod.get_global_var('func_7426')
call_8710 = relay.TupleGetItem(func_7424_call(), 0)
call_8711 = relay.TupleGetItem(func_7426_call(), 0)
func_8518_call = mod.get_global_var('func_8518')
func_8522_call = mutated_mod.get_global_var('func_8522')
const_8715 = relay.const([[True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,True,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,True,False,True,False,False,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,False,False,True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,True,False,True,True,True,True,True,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,True,True,True,True,False,False,False,False,False,True,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False,True,True,False,True,False,False,False,True,True,False,True,True,False,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,True,True,False,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,True,False,False,True,True,True,False,True,True,False,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True,True,True,True,False,False,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False,True,False,False,True,True,False,False,False,False,False,True,False,True,False,False,True,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,False,True,False,True,True,False,True,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False,False,True,True,True,True,False,True,False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,True,True,False,True,False,False,False,False,False,True,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,False,True,True,False,True,False,True,True,False,False,False,True,False,True,True,False,False,True,True,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,True,False,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,False,False,True,True,False,True,False,False,False,True,True,True,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,False,False,True,False,True,True,True,True,True,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,False,True,True,True,True,False,True,False,False,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,True,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True,False,False,False,True,False,False,True,False,False,True,True,False,False,True,False,False,False,True,False,True,True,False,True,True,False,True]], dtype = "bool")#candidate|8715|(1, 960)|const|bool
var_8716 = relay.var("var_8716", dtype = "int16", shape = ())#candidate|8716|()|var|int16
call_8714 = relay.TupleGetItem(func_8518_call(relay.reshape(const_8715.astype('bool'), [960,]), relay.reshape(var_8716.astype('int16'), []), ), 0)
call_8717 = relay.TupleGetItem(func_8522_call(relay.reshape(const_8715.astype('bool'), [960,]), relay.reshape(var_8716.astype('int16'), []), ), 0)
uop_8735 = relay.sigmoid(const_8715.astype('float32')) # shape=(1, 960)
output = relay.Tuple([call_8710,call_8714,var_8716,uop_8735,])
output2 = relay.Tuple([call_8711,call_8717,var_8716,uop_8735,])
func_8740 = relay.Function([var_8716,], output)
mod['func_8740'] = func_8740
mod = relay.transform.InferType()(mod)
var_8741 = relay.var("var_8741", dtype = "int16", shape = ())#candidate|8741|()|var|int16
output = func_8740(var_8741)
func_8742 = relay.Function([var_8741], output)
mutated_mod['func_8742'] = func_8742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4365_call = mod.get_global_var('func_4365')
func_4367_call = mutated_mod.get_global_var('func_4367')
call_8767 = func_4365_call()
call_8768 = func_4365_call()
output = call_8767
output2 = call_8768
func_8772 = relay.Function([], output)
mod['func_8772'] = func_8772
mod = relay.transform.InferType()(mod)
mutated_mod['func_8772'] = func_8772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8772_call = mutated_mod.get_global_var('func_8772')
call_8773 = func_8772_call()
output = call_8773
func_8774 = relay.Function([], output)
mutated_mod['func_8774'] = func_8774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6948_call = mod.get_global_var('func_6948')
func_6949_call = mutated_mod.get_global_var('func_6949')
call_8833 = func_6948_call()
call_8834 = func_6948_call()
func_7762_call = mod.get_global_var('func_7762')
func_7765_call = mutated_mod.get_global_var('func_7765')
var_8837 = relay.var("var_8837", dtype = "float32", shape = (504, 2))#candidate|8837|(504, 2)|var|float32
var_8838 = relay.var("var_8838", dtype = "int8", shape = (1, 198))#candidate|8838|(1, 198)|var|int8
call_8836 = relay.TupleGetItem(func_7762_call(relay.reshape(var_8837.astype('float32'), [1008,]), relay.reshape(var_8838.astype('int8'), [198,]), ), 0)
call_8839 = relay.TupleGetItem(func_7765_call(relay.reshape(var_8837.astype('float32'), [1008,]), relay.reshape(var_8838.astype('int8'), [198,]), ), 0)
var_8849 = relay.var("var_8849", dtype = "float32", shape = (504, 2))#candidate|8849|(504, 2)|var|float32
bop_8850 = relay.mod(var_8837.astype('float64'), relay.reshape(var_8849.astype('float64'), relay.shape_of(var_8837))) # shape=(504, 2)
output = relay.Tuple([call_8833,call_8836,var_8838,bop_8850,])
output2 = relay.Tuple([call_8834,call_8839,var_8838,bop_8850,])
func_8858 = relay.Function([var_8837,var_8838,var_8849,], output)
mod['func_8858'] = func_8858
mod = relay.transform.InferType()(mod)
mutated_mod['func_8858'] = func_8858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8858_call = mutated_mod.get_global_var('func_8858')
var_8860 = relay.var("var_8860", dtype = "float32", shape = (504, 2))#candidate|8860|(504, 2)|var|float32
var_8861 = relay.var("var_8861", dtype = "int8", shape = (1, 198))#candidate|8861|(1, 198)|var|int8
var_8862 = relay.var("var_8862", dtype = "float32", shape = (504, 2))#candidate|8862|(504, 2)|var|float32
call_8859 = func_8858_call(var_8860,var_8861,var_8862,)
output = call_8859
func_8863 = relay.Function([var_8860,var_8861,var_8862,], output)
mutated_mod['func_8863'] = func_8863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6048_call = mod.get_global_var('func_6048')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_8886 = relay.TupleGetItem(func_6048_call(), 1)
call_8887 = relay.TupleGetItem(func_6050_call(), 1)
output = call_8886
output2 = call_8887
func_8894 = relay.Function([], output)
mod['func_8894'] = func_8894
mod = relay.transform.InferType()(mod)
output = func_8894()
func_8895 = relay.Function([], output)
mutated_mod['func_8895'] = func_8895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8255_call = mod.get_global_var('func_8255')
func_8257_call = mutated_mod.get_global_var('func_8257')
call_8904 = func_8255_call()
call_8905 = func_8255_call()
func_8858_call = mod.get_global_var('func_8858')
func_8863_call = mutated_mod.get_global_var('func_8863')
var_8910 = relay.var("var_8910", dtype = "float32", shape = (1008,))#candidate|8910|(1008,)|var|float32
const_8911 = relay.const([[-1,-3,-5,1,8,2],[10,7,2,2,6,-8],[9,6,10,-6,-10,-7],[2,1,-5,8,-3,-3],[-8,10,-6,-7,-2,4],[2,-6,7,-1,3,-6],[5,4,-10,4,-3,2],[-7,-6,-1,-3,-8,-7],[-2,3,10,-4,5,4],[-8,-3,-5,10,-1,10],[-7,-7,4,10,-2,-3],[-4,7,8,7,2,-7],[-3,8,5,8,-3,-7],[-8,-4,9,3,6,-7],[1,-8,-3,1,-4,-2],[1,1,6,10,2,-4],[-1,6,-7,10,6,3],[5,-5,-5,7,8,9],[-3,-8,4,8,9,3],[-7,-3,4,-2,2,-7],[-4,-4,-2,8,1,-10],[10,-10,-2,-6,-7,3],[7,-10,3,-7,-4,3],[3,1,9,-10,-9,-1],[-5,-3,-6,-6,2,-5],[5,-5,-2,-5,10,-10],[7,-2,-10,9,-8,10],[9,-10,-3,-7,6,9],[10,4,10,-1,-3,5],[-5,-1,-7,8,8,-10],[-2,1,-10,-5,-6,2],[-2,5,5,-9,4,-5],[10,8,3,8,6,-3]], dtype = "int8")#candidate|8911|(33, 6)|const|int8
call_8909 = relay.TupleGetItem(func_8858_call(relay.reshape(var_8910.astype('float32'), [504, 2]), relay.reshape(const_8911.astype('int8'), [1, 198]), relay.reshape(var_8910.astype('float32'), [504, 2]), ), 3)
call_8912 = relay.TupleGetItem(func_8863_call(relay.reshape(var_8910.astype('float32'), [504, 2]), relay.reshape(const_8911.astype('int8'), [1, 198]), relay.reshape(var_8910.astype('float32'), [504, 2]), ), 3)
func_4200_call = mod.get_global_var('func_4200')
func_4202_call = mutated_mod.get_global_var('func_4202')
call_8925 = relay.TupleGetItem(func_4200_call(), 0)
call_8926 = relay.TupleGetItem(func_4202_call(), 0)
uop_8938 = relay.asin(call_8909.astype('float64')) # shape=(504, 2)
uop_8940 = relay.asin(call_8912.astype('float64')) # shape=(504, 2)
output = relay.Tuple([call_8904,var_8910,const_8911,call_8925,uop_8938,])
output2 = relay.Tuple([call_8905,var_8910,const_8911,call_8926,uop_8940,])
func_8948 = relay.Function([var_8910,], output)
mod['func_8948'] = func_8948
mod = relay.transform.InferType()(mod)
var_8949 = relay.var("var_8949", dtype = "float32", shape = (1008,))#candidate|8949|(1008,)|var|float32
output = func_8948(var_8949)
func_8950 = relay.Function([var_8949], output)
mutated_mod['func_8950'] = func_8950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6048_call = mod.get_global_var('func_6048')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_8991 = relay.TupleGetItem(func_6048_call(), 0)
call_8992 = relay.TupleGetItem(func_6050_call(), 0)
output = relay.Tuple([call_8991,])
output2 = relay.Tuple([call_8992,])
func_8993 = relay.Function([], output)
mod['func_8993'] = func_8993
mod = relay.transform.InferType()(mod)
output = func_8993()
func_8994 = relay.Function([], output)
mutated_mod['func_8994'] = func_8994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7525_call = mod.get_global_var('func_7525')
func_7527_call = mutated_mod.get_global_var('func_7527')
call_9052 = func_7525_call()
call_9053 = func_7525_call()
output = relay.Tuple([call_9052,])
output2 = relay.Tuple([call_9053,])
func_9054 = relay.Function([], output)
mod['func_9054'] = func_9054
mod = relay.transform.InferType()(mod)
output = func_9054()
func_9055 = relay.Function([], output)
mutated_mod['func_9055'] = func_9055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4416_call = mod.get_global_var('func_4416')
func_4418_call = mutated_mod.get_global_var('func_4418')
call_9056 = relay.TupleGetItem(func_4416_call(), 1)
call_9057 = relay.TupleGetItem(func_4418_call(), 1)
output = relay.Tuple([call_9056,])
output2 = relay.Tuple([call_9057,])
func_9058 = relay.Function([], output)
mod['func_9058'] = func_9058
mod = relay.transform.InferType()(mod)
mutated_mod['func_9058'] = func_9058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9058_call = mutated_mod.get_global_var('func_9058')
call_9059 = func_9058_call()
output = call_9059
func_9060 = relay.Function([], output)
mutated_mod['func_9060'] = func_9060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6865_call = mod.get_global_var('func_6865')
func_6867_call = mutated_mod.get_global_var('func_6867')
call_9075 = relay.TupleGetItem(func_6865_call(), 1)
call_9076 = relay.TupleGetItem(func_6867_call(), 1)
func_4320_call = mod.get_global_var('func_4320')
func_4323_call = mutated_mod.get_global_var('func_4323')
const_9078 = relay.const([-3,9,5,-5,10,-1,-9,-7,10,1,-9,-3,4,3,10,-1,-1,2,-6,10,6,-8,4,8,-7,7,5,-8,-1,-6,6,-5,-10,2,-7,1,-4,8,4,-1,6,-8,8,-10,10,-4,-5,-3,8,-2,-10,10,-2,3,4,-9,-1,-3,-5,-2,1,1,-4,3,-4,1,-8,9,7,9,5,4,-7,7,-10,-6,4,8,-4,2,-6,1,3,-7,1,4,4,-1,4,2,8,6,-7,-10,5,-8,-6,-6,-8,-9,-9,-4,2,-3,-5,2,-4,5,-5,10,-8,3,-7,5,4,-8,-7,-7,10,-5,6,10,10,-9,2,-4,-10,-6,-8,6,-5,8,-7,-10,6,5,7,-1,-3,-9,-2,5,2,2,-2,-5,-3,8,-7,-8,-4,-4,-8,-7,5,-6,-10,10,-2,-3], dtype = "int8")#candidate|9078|(160,)|const|int8
call_9077 = relay.TupleGetItem(func_4320_call(relay.reshape(const_9078.astype('int8'), [160,])), 1)
call_9079 = relay.TupleGetItem(func_4323_call(relay.reshape(const_9078.astype('int8'), [160,])), 1)
output = relay.Tuple([call_9075,call_9077,const_9078,])
output2 = relay.Tuple([call_9076,call_9079,const_9078,])
func_9092 = relay.Function([], output)
mod['func_9092'] = func_9092
mod = relay.transform.InferType()(mod)
output = func_9092()
func_9093 = relay.Function([], output)
mutated_mod['func_9093'] = func_9093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8361_call = mod.get_global_var('func_8361')
func_8363_call = mutated_mod.get_global_var('func_8363')
call_9112 = func_8361_call()
call_9113 = func_8361_call()
output = relay.Tuple([call_9112,])
output2 = relay.Tuple([call_9113,])
func_9118 = relay.Function([], output)
mod['func_9118'] = func_9118
mod = relay.transform.InferType()(mod)
mutated_mod['func_9118'] = func_9118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9118_call = mutated_mod.get_global_var('func_9118')
call_9119 = func_9118_call()
output = call_9119
func_9120 = relay.Function([], output)
mutated_mod['func_9120'] = func_9120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7362_call = mod.get_global_var('func_7362')
func_7364_call = mutated_mod.get_global_var('func_7364')
call_9125 = relay.TupleGetItem(func_7362_call(), 0)
call_9126 = relay.TupleGetItem(func_7364_call(), 0)
output = relay.Tuple([call_9125,])
output2 = relay.Tuple([call_9126,])
func_9144 = relay.Function([], output)
mod['func_9144'] = func_9144
mod = relay.transform.InferType()(mod)
output = func_9144()
func_9145 = relay.Function([], output)
mutated_mod['func_9145'] = func_9145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6048_call = mod.get_global_var('func_6048')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_9153 = relay.TupleGetItem(func_6048_call(), 1)
call_9154 = relay.TupleGetItem(func_6050_call(), 1)
output = relay.Tuple([call_9153,])
output2 = relay.Tuple([call_9154,])
func_9170 = relay.Function([], output)
mod['func_9170'] = func_9170
mod = relay.transform.InferType()(mod)
mutated_mod['func_9170'] = func_9170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9170_call = mutated_mod.get_global_var('func_9170')
call_9171 = func_9170_call()
output = call_9171
func_9172 = relay.Function([], output)
mutated_mod['func_9172'] = func_9172
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9213 = relay.var("var_9213", dtype = "int16", shape = (3, 13, 16))#candidate|9213|(3, 13, 16)|var|int16
const_9214 = relay.const([[[4,-10,4,2,-3,-4,2,-3,-7,4,6,3,-1,5,9,-8],[7,-5,10,-2,4,-9,9,-9,-3,-2,-8,10,-3,-7,-10,-9],[-7,-5,10,9,3,-4,7,9,-6,-9,-8,-6,-4,5,-2,-1],[9,-3,5,-4,-9,1,2,8,-2,4,7,-3,7,-7,2,-5],[3,-9,3,7,2,9,-7,-1,5,-9,9,3,9,2,-7,-2],[8,-9,7,-2,3,4,-8,6,-4,6,-6,7,1,7,-8,-10],[-2,-9,6,-9,-5,-6,-10,8,9,5,-5,1,4,5,8,-10],[4,-9,-1,7,3,-10,-10,-9,2,-6,-8,4,8,-6,5,-5],[5,7,-2,3,2,10,-2,2,-3,-3,-7,5,-8,-10,-6,10],[-10,-7,-3,-10,4,6,-9,9,7,6,-1,-1,-9,10,7,7],[8,10,6,8,-1,7,-3,5,8,-7,-10,8,3,-7,7,-8],[9,8,-1,5,-1,2,-9,-7,8,-8,4,10,-3,8,10,-6],[-7,4,9,9,-2,-5,10,7,-7,6,2,-9,-2,4,-4,-3]],[[-5,8,-6,5,10,8,3,9,2,-1,1,9,6,9,6,-10],[9,-6,-7,-3,-2,-8,-6,-4,10,3,5,7,7,-1,8,-1],[-9,1,7,-2,5,-5,5,-1,7,8,-8,-5,-3,-6,-8,-7],[6,-1,-10,-4,-1,5,-10,-2,-10,1,5,3,-2,8,-7,-5],[1,-8,8,-7,10,-6,-10,-9,9,10,-6,4,3,-10,-7,5],[-2,2,-4,-3,-4,-7,9,7,-4,4,2,-1,-1,7,-7,-7],[-7,1,7,6,-4,6,-6,1,-1,-3,-4,8,-7,-5,-9,-3],[1,-8,7,2,6,5,10,-6,-3,-4,5,-4,10,5,10,-6],[2,-9,-7,-2,-8,8,5,1,-3,4,-10,10,-8,7,-3,-8],[8,-7,10,-9,8,-8,-1,10,-7,-2,3,-5,9,10,7,-8],[-7,10,-6,-8,6,5,7,1,-10,-9,7,5,-7,9,-2,9],[-3,9,-7,2,-2,-1,4,5,7,10,-9,1,9,2,-6,-1],[1,8,4,3,1,-9,6,-1,-7,8,-6,-1,-6,4,-5,2]],[[-4,4,-4,-8,-9,-2,-8,-9,-5,-10,-3,-6,6,-4,7,-7],[-8,-3,-7,9,-5,-2,-5,-9,-7,1,-1,-2,9,2,-2,8],[-9,6,9,4,6,10,-1,4,-7,-10,4,-9,-8,8,9,3],[7,8,3,-2,9,4,1,10,5,-10,3,-1,-2,2,6,-3],[-3,9,-2,8,-4,-3,-2,-7,-4,7,10,-8,-8,-6,-8,-7],[10,8,8,-5,-10,-9,3,9,-7,-5,-4,-7,-5,-7,2,3],[-10,5,-1,-2,9,5,-1,9,1,-3,7,9,5,-7,2,10],[-3,1,5,6,7,8,-6,-6,-3,3,-10,-3,10,3,-2,-5],[-8,-10,2,-9,-7,-8,5,9,-2,-9,-7,-7,-2,1,5,-10],[6,8,-6,-8,-5,4,-8,-8,-7,3,9,3,10,9,1,10],[7,-5,4,-6,10,1,-2,10,-7,-3,3,-2,-9,-10,-8,10],[-8,-10,10,3,5,10,4,9,3,8,8,-10,-8,-7,-1,-4],[2,3,-10,-2,2,-4,-9,8,5,-9,7,-7,-10,-3,-3,-1]]], dtype = "int16")#candidate|9214|(3, 13, 16)|const|int16
bop_9215 = relay.not_equal(var_9213.astype('bool'), relay.reshape(const_9214.astype('bool'), relay.shape_of(var_9213))) # shape=(3, 13, 16)
func_6048_call = mod.get_global_var('func_6048')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_9220 = relay.TupleGetItem(func_6048_call(), 0)
call_9221 = relay.TupleGetItem(func_6050_call(), 0)
bop_9230 = relay.power(var_9213.astype('float64'), relay.reshape(const_9214.astype('float64'), relay.shape_of(var_9213))) # shape=(3, 13, 16)
output = relay.Tuple([bop_9215,call_9220,bop_9230,])
output2 = relay.Tuple([bop_9215,call_9221,bop_9230,])
F = relay.Function([var_9213,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_9213,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

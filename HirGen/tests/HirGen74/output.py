import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_40 = relay.var("var_40", dtype = "uint32", shape = (15, 10, 7))#candidate|40|(15, 10, 7)|var|uint32
const_41 = relay.const([[[10,-1,8,-4,-4,2,6],[10,6,-9,9,-9,-2,4],[-6,7,5,-3,-8,9,-7],[-5,5,-4,-5,6,-9,-2],[5,-8,8,-6,-7,-8,-7],[-8,8,-9,9,3,-6,-9],[-3,5,10,10,-3,1,-5],[-5,-5,-1,8,-5,-3,2],[-9,-4,3,-10,-7,1,7],[9,2,-6,-9,-2,-7,4]],[[7,-1,7,7,-9,3,7],[5,7,-6,8,-5,-1,1],[-4,-9,-1,7,10,-7,3],[4,-3,6,2,8,5,6],[2,5,-2,-9,9,-2,2],[-7,-9,-8,1,-4,-7,-5],[-8,10,8,-6,-10,-7,2],[7,9,10,-6,-2,-4,1],[3,-2,7,-10,7,-7,-2],[-5,4,-10,-7,-2,-1,-9]],[[-3,4,6,-6,10,-8,-6],[4,-1,-4,-3,7,5,3],[4,-10,-4,-4,2,3,-7],[-9,-6,-3,-3,2,-9,4],[-8,1,10,-2,8,5,7],[-2,-9,-9,5,1,-7,2],[4,2,-6,6,6,10,-6],[-2,1,9,-6,-6,-10,-8],[2,5,-9,-7,-1,9,-3],[-1,-4,-1,-8,4,9,-6]],[[-6,6,-4,5,-9,6,-7],[9,-6,8,3,4,10,-7],[9,-9,-8,5,7,5,2],[8,-8,9,9,-3,-9,-6],[-6,-9,8,2,-5,8,-6],[-10,4,-8,-6,6,8,-8],[6,-5,10,-7,-6,-4,5],[2,3,-2,1,9,8,-5],[-3,-3,-8,3,-4,6,-9],[-10,-2,-8,8,2,-9,-9]],[[6,-3,-6,10,-7,-3,5],[-3,-10,1,-9,7,-8,-5],[1,3,-7,-8,5,10,-3],[2,-2,2,-10,-4,-1,-4],[-1,3,-4,-9,5,7,-5],[1,-10,6,2,6,1,10],[-10,-9,7,2,10,-4,9],[4,-6,4,2,8,7,5],[-3,-8,-1,-5,-8,-10,8],[-3,3,3,-4,5,-4,-1]],[[8,-7,-3,5,3,-2,9],[-9,-6,-6,-2,10,3,-4],[-2,-7,1,3,-8,-7,10],[-2,-3,-6,5,-2,10,-5],[-9,7,5,2,-8,1,-3],[9,-10,-4,5,-6,3,-9],[9,-3,6,10,6,1,-6],[1,3,-5,-2,9,-1,10],[-2,5,7,-10,10,6,3],[-9,10,-10,-10,7,6,-1]],[[-1,-10,-2,-4,5,-3,3],[10,-7,-5,-6,1,2,2],[-5,6,6,7,-3,8,-5],[2,10,-6,-10,5,5,-6],[3,-6,2,4,-8,-7,-4],[-8,8,8,3,-5,4,10],[6,-8,-3,9,6,3,-6],[4,7,-10,-3,1,4,-8],[-7,-2,4,2,-6,-3,6],[-6,-6,2,-2,8,-1,-1]],[[6,5,-10,4,7,-3,1],[-5,2,9,2,3,4,-9],[-10,-1,-10,8,5,3,-2],[-5,4,9,-9,-6,-2,5],[10,-2,-2,7,-1,-1,-10],[8,-3,-6,3,3,-6,3],[9,3,-1,2,-9,-7,-5],[-7,-7,7,-8,-6,-10,2],[-1,-1,4,2,8,1,2],[-8,-10,-1,1,-6,-3,-9]],[[5,-9,8,-7,-6,10,-2],[3,-10,-2,-7,-9,5,5],[-10,-10,-8,9,1,-8,6],[2,8,-5,-6,1,2,-10],[-5,-4,1,-8,-5,5,-7],[-2,9,-3,9,5,3,-7],[-6,-1,-3,-6,8,-3,4],[-8,1,4,-6,-6,2,-8],[-9,-1,1,-6,4,-9,9],[-5,2,-4,5,-4,2,4]],[[1,-1,7,5,-4,2,-6],[-10,7,-8,1,3,-7,-9],[-6,4,-6,-8,-7,-1,-6],[8,-8,-7,-6,-5,6,-6],[-4,3,-7,7,-2,-6,-8],[7,-4,7,5,-6,-8,1],[8,8,-2,3,-6,3,-5],[-4,-10,8,9,-5,-9,7],[-3,-3,4,4,-2,5,7],[-5,-1,-3,3,-4,-7,7]],[[1,5,-2,6,2,4,-6],[2,-9,4,-8,-10,10,-3],[2,-5,4,8,2,4,3],[-8,6,-2,8,4,5,-9],[7,-4,-2,5,-10,-1,-8],[-6,2,-2,5,3,2,-1],[3,-1,-2,9,-3,9,7],[6,7,-8,6,-7,-4,6],[2,-2,-7,-3,-10,-4,-7],[8,5,1,6,10,7,-10]],[[-2,8,4,-6,5,-2,2],[-1,9,4,5,-7,-3,10],[-6,3,-9,-9,3,5,-5],[-6,-5,9,-8,9,8,-4],[-2,-3,7,4,8,-10,-9],[10,4,-4,-3,-4,-3,4],[-8,4,-3,6,-2,-7,-4],[-3,3,-10,7,5,-4,-1],[-1,-10,-3,7,-9,7,3],[-4,-2,3,-10,2,4,9]],[[6,7,-7,6,-9,-8,-6],[-2,3,-10,-4,-10,-6,4],[-10,8,-7,3,9,-5,-2],[9,-10,-1,-8,7,5,-8],[2,9,-9,7,-1,9,2],[10,-9,-6,-1,-1,9,5],[-7,-5,7,10,10,-3,10],[2,-7,7,-3,-4,-1,5],[3,6,-3,9,-4,7,6],[6,3,9,-2,6,1,-8]],[[-3,2,3,7,8,7,7],[-5,-3,3,9,-7,-8,6],[1,2,9,1,2,7,8],[-2,-7,1,6,-7,6,7],[7,3,-7,3,9,-7,5],[-2,7,9,-9,-3,4,3],[6,-4,-3,-10,-2,-8,6],[-5,-9,-4,-1,10,3,8],[-5,-7,-10,1,-8,6,3],[-2,-9,-10,3,5,-8,3]],[[-10,9,1,6,7,-7,-8],[4,6,10,2,-4,-7,9],[3,7,3,9,-1,7,2],[-4,8,-2,3,-10,6,-10],[-2,-8,-10,-8,-10,9,10],[1,4,2,3,-6,10,3],[-1,-10,-3,8,1,8,-3],[-5,7,-6,-1,-2,-4,5],[6,3,3,10,10,-1,4],[-2,-8,-9,-3,5,3,10]]], dtype = "uint32")#candidate|41|(15, 10, 7)|const|uint32
bop_42 = relay.multiply(var_40.astype('uint32'), relay.reshape(const_41.astype('uint32'), relay.shape_of(var_40))) # shape=(15, 10, 7)
output = bop_42
output2 = bop_42
func_55 = relay.Function([var_40,], output)
mod['func_55'] = func_55
mod = relay.transform.InferType()(mod)
var_56 = relay.var("var_56", dtype = "uint32", shape = (15, 10, 7))#candidate|56|(15, 10, 7)|var|uint32
output = func_55(var_56)
func_57 = relay.Function([var_56], output)
mutated_mod['func_57'] = func_57
mutated_mod = relay.transform.InferType()(mutated_mod)
var_77 = relay.var("var_77", dtype = "bool", shape = (7, 8, 8))#candidate|77|(7, 8, 8)|var|bool
var_78 = relay.var("var_78", dtype = "bool", shape = (7, 8, 8))#candidate|78|(7, 8, 8)|var|bool
bop_79 = relay.logical_and(var_77.astype('bool'), relay.reshape(var_78.astype('bool'), relay.shape_of(var_77))) # shape=(7, 8, 8)
func_55_call = mod.get_global_var('func_55')
func_57_call = mutated_mod.get_global_var('func_57')
const_100 = relay.const([[-5],[8],[2],[5],[-4],[5],[3],[3],[1],[3],[-9],[10],[-4],[-2],[1],[3],[-3],[-1],[2],[8],[-1],[10],[-2],[-3],[4],[1],[-9],[-9],[-6],[-1],[-3],[4],[-9],[10],[10],[-7],[-2],[4],[-9],[7],[3],[5],[10],[4],[-5],[4],[3],[-3],[-10],[-4],[-2],[1],[10],[-7],[2],[-10],[-1],[6],[1],[9],[7],[3],[1],[2],[10],[2],[-1],[-7],[8],[-7],[10],[-5],[6],[-4],[1],[10],[-9],[10],[8],[1],[-2],[-1],[8],[1],[4],[8],[9],[4],[-5],[2],[-4],[-6],[5],[4],[9],[-3],[-10],[3],[2],[6],[4],[-9],[7],[8],[-4],[8],[3],[2],[1],[3],[-3],[3],[1],[-5],[-10],[1],[7],[8],[-3],[-8],[9],[6],[1],[1],[-6],[-3],[3],[4],[4],[10],[-10],[-9],[-9],[3],[-7],[9],[-6],[-9],[-3],[-10],[-7],[9],[1],[-7],[-3],[-8],[-6],[-2],[-5],[-8],[-3],[-10],[2],[-7],[-10],[-5],[1],[10],[-7],[6],[3],[-5],[-2],[5],[9],[2],[10],[4],[-9],[-8],[-7],[9],[-7],[10],[5],[-4],[-10],[9],[-3],[9],[-8],[7],[-3],[2],[9],[3],[5],[5],[-3],[5],[-3],[-8],[9],[4],[2],[5],[6],[-7],[-2],[-1],[9],[8],[9],[7],[2],[-10],[3],[9],[5],[-4],[-1],[-6],[3],[-6],[-4],[-6],[2],[-8],[-9],[1],[-7],[8],[10],[1],[-3],[4],[-6],[-8],[8],[1],[-10],[5],[-1],[1],[8],[-3],[4],[4],[-9],[3],[2],[3],[-10],[6],[-5],[-9],[6],[-7],[9],[-8],[1],[-1],[-3],[10],[3],[-1],[1],[-4],[4],[-10],[-1],[-4],[-5],[3],[-8],[-10],[-2],[-5],[-9],[6],[-8],[-7],[-2],[-1],[-3],[9],[-2],[-10],[-5],[-10],[3],[1],[4],[-2],[-3],[-2],[-9],[2],[-4],[-2],[-8],[10],[4],[-6],[2],[-2],[-9],[-4],[-1],[3],[-9],[4],[8],[1],[-3],[-8],[2],[8],[9],[-4],[1],[9],[1],[2],[-2],[-5],[-9],[-6],[7],[8],[10],[8],[5],[9],[1],[6],[1],[3],[-9],[-3],[9],[9],[-9],[7],[-4],[-5],[-3],[8],[10],[-4],[3],[6],[-5],[6],[-5],[2],[-1],[5],[10],[5],[9],[10],[-6],[1],[-6],[-8],[5],[2],[6],[-2],[1],[6],[-9],[-9],[3],[4],[-7],[-5],[5],[-8],[1],[9],[-1],[-5],[-1],[9],[-3],[3],[5],[2],[7],[9],[2],[-6],[10],[-5],[9],[6],[-7],[8],[-10],[-9],[1],[6],[3],[2],[-3],[5],[-5],[-10],[2],[-7],[-1],[2],[5],[-7],[4],[-7],[-7],[10],[10],[3],[3],[9],[-8],[6],[-6],[2],[7],[7],[-1],[-5],[10],[1],[5],[-9],[-3],[10],[-2],[-7],[-8],[10],[-5],[3],[-4],[4],[-3],[-4],[2],[-10],[9],[4],[6],[10],[-3],[-6],[-10],[-4],[9],[-7],[-8],[-2],[-1],[-5],[4],[-10],[9],[-4],[7],[10],[-1],[-10],[-5],[7],[6],[8],[-6],[-6],[-9],[-10],[8],[-3],[-5],[9],[1],[2],[8],[-4],[-10],[8],[7],[-9],[-8],[-2],[6],[9],[1],[9],[9],[7],[-9],[-9],[-5],[-3],[-3],[1],[9],[-5],[-3],[-6],[-8],[-2],[-7],[6],[-3],[3],[4],[-1],[6],[-1],[7],[1],[2],[-4],[4],[5],[-5],[2],[10],[-5],[10],[4],[-9],[-10],[1],[3],[5],[-3],[-9],[-3],[7],[8],[5],[-1],[7],[7],[-3],[1],[10],[-6],[-7],[10],[-3],[1],[1],[7],[-2],[-9],[5],[3],[7],[1],[-2],[1],[-8],[-6],[6],[-8],[-10],[10],[-5],[-1],[-2],[-3],[2],[10],[5],[-9],[-6],[3],[-9],[-10],[5],[-1],[9],[8],[10],[10],[-10],[10],[-8],[-3],[-2],[1],[5],[5],[-3],[9],[4],[-4],[-1],[6],[2],[3],[8],[5],[-4],[8],[3],[7],[3],[3],[6],[3],[2],[-3],[-10],[6],[7],[-5],[5],[-1],[-10],[-6],[-8],[2],[6],[7],[-5],[-9],[8],[2],[1],[1],[9],[2],[-9],[4],[4],[4],[-4],[7],[-10],[-9],[-5],[-4],[2],[-2],[-5],[-2],[-2],[-8],[-1],[-10],[-2],[-9],[1],[-6],[10],[-7],[-6],[9],[-8],[3],[-5],[-10],[1],[-10],[10],[-7],[6],[-3],[-4],[7],[-6],[9],[9],[2],[-9],[3],[-9],[-3],[-10],[-3],[2],[-7],[8],[5],[-8],[-5],[1],[6],[2],[-7],[2],[8],[-2],[-4],[-3],[5],[8],[6],[-1],[-7],[-7],[1],[4],[8],[-5],[8],[-3],[-3],[-7],[-7],[5],[-8],[3],[9],[8],[1],[6],[-3],[-1],[-8],[-4],[-6],[-5],[1],[-7],[2],[2],[4],[-5],[9],[9],[-9],[4],[-9],[1],[-3],[-6],[-1],[9],[2],[-4],[-7],[6],[10],[-6],[-7],[1],[-2],[-7],[9],[-8],[2],[-1],[-4],[-9],[-6],[1],[-7],[-5],[-10],[-8],[-6],[2],[3],[10],[-7],[2],[4],[-4],[-4],[7],[6],[-3],[6],[-4],[1],[-3],[2],[-6],[7],[6],[-6],[-7],[4],[9],[6],[9],[-3],[-9],[-2],[-7],[-6],[1],[-8],[-2],[5],[-2],[8],[1],[1],[-9],[-5],[1],[1],[-1],[2],[6],[-8],[3],[-4],[-4],[-4],[-9],[-6],[-2],[10],[3],[2],[-7],[3],[-5],[-4],[10],[-10],[2],[1],[2],[-2],[6],[3],[4],[3],[-1],[3],[-7],[-6],[1],[5],[-3],[-6],[8],[1],[-3],[-3],[3],[-8],[9],[6],[6],[8],[6],[-8],[-3],[10],[-8],[3],[6],[-8],[-8],[-9],[-6],[8],[10],[-5],[-3],[-2],[6],[-8],[2],[7],[6],[6],[3],[-10],[-4],[2],[8],[5],[-1],[-6],[3],[3],[-7],[10],[-7],[-1],[-4],[-5],[-10],[10],[6],[6],[-9],[3],[1],[-2],[9],[-6],[6],[-8],[-3],[-6],[-8],[6],[9],[-4],[7],[10],[10],[5],[3],[8],[3],[-8],[1],[2],[7],[-3],[-10],[-2],[4],[-4],[5],[6],[-9],[9],[-8],[-4],[4],[-2],[2],[-9],[3],[-1],[-10],[1],[-1],[6],[3],[5],[2],[-4],[2],[3],[-1],[-1],[8],[-1],[1],[-3],[-7],[6],[3],[7],[-3],[-6],[6],[-5],[-7],[2],[-3],[3],[4],[-2],[8],[-7],[-2],[-6],[-4],[-9],[-5],[4],[-4],[-8],[9],[-2],[-5],[-4],[1],[-4],[-1],[-5],[-4],[8],[-1],[-9],[-1],[-8],[3],[-7],[-9],[7],[-4],[-5],[-8],[5],[9],[-4],[10],[-3],[8],[-9],[-4],[-5],[4],[1],[1],[-7],[10],[-1],[10],[10],[7],[-2],[-8],[9],[-6],[5],[5],[9],[2],[-3],[8],[7],[10],[8],[5],[9],[4],[8],[-10],[-7],[5],[-8],[-2],[2],[-7],[-4],[-4],[2],[-8],[-6],[-8],[4],[8],[-3],[-8],[7],[-2],[6],[2],[-5],[-2],[3],[-1],[-2]], dtype = "uint32")#candidate|100|(1050, 1)|const|uint32
call_99 = func_55_call(relay.reshape(const_100.astype('uint32'), [15, 10, 7]))
call_101 = func_55_call(relay.reshape(const_100.astype('uint32'), [15, 10, 7]))
bop_123 = relay.power(const_100.astype('float32'), relay.reshape(call_99.astype('float32'), relay.shape_of(const_100))) # shape=(1050, 1)
bop_126 = relay.power(const_100.astype('float32'), relay.reshape(call_101.astype('float32'), relay.shape_of(const_100))) # shape=(1050, 1)
bop_128 = relay.bitwise_xor(bop_123.astype('uint32'), relay.reshape(const_100.astype('uint32'), relay.shape_of(bop_123))) # shape=(1050, 1)
bop_131 = relay.bitwise_xor(bop_126.astype('uint32'), relay.reshape(const_100.astype('uint32'), relay.shape_of(bop_126))) # shape=(1050, 1)
uop_137 = relay.cosh(var_77.astype('float32')) # shape=(7, 8, 8)
uop_140 = relay.sin(uop_137.astype('float64')) # shape=(7, 8, 8)
output = relay.Tuple([bop_79,bop_128,uop_140,])
output2 = relay.Tuple([bop_79,bop_131,uop_140,])
func_151 = relay.Function([var_77,var_78,], output)
mod['func_151'] = func_151
mod = relay.transform.InferType()(mod)
var_152 = relay.var("var_152", dtype = "bool", shape = (7, 8, 8))#candidate|152|(7, 8, 8)|var|bool
var_153 = relay.var("var_153", dtype = "bool", shape = (7, 8, 8))#candidate|153|(7, 8, 8)|var|bool
output = func_151(var_152,var_153,)
func_154 = relay.Function([var_152,var_153,], output)
mutated_mod['func_154'] = func_154
mutated_mod = relay.transform.InferType()(mutated_mod)
var_261 = relay.var("var_261", dtype = "float64", shape = (16, 2, 6))#candidate|261|(16, 2, 6)|var|float64
uop_262 = relay.asin(var_261.astype('float64')) # shape=(16, 2, 6)
output = uop_262
output2 = uop_262
func_265 = relay.Function([var_261,], output)
mod['func_265'] = func_265
mod = relay.transform.InferType()(mod)
mutated_mod['func_265'] = func_265
mutated_mod = relay.transform.InferType()(mutated_mod)
var_266 = relay.var("var_266", dtype = "float64", shape = (16, 2, 6))#candidate|266|(16, 2, 6)|var|float64
func_265_call = mutated_mod.get_global_var('func_265')
call_267 = func_265_call(var_266)
output = call_267
func_268 = relay.Function([var_266], output)
mutated_mod['func_268'] = func_268
mutated_mod = relay.transform.InferType()(mutated_mod)
var_351 = relay.var("var_351", dtype = "uint64", shape = (16, 16, 1))#candidate|351|(16, 16, 1)|var|uint64
const_352 = relay.const([[[-4,6,-3,-9,-7],[-5,3,4,7,-7],[-1,-2,4,-1,-6],[10,-5,6,-1,8],[9,-7,-7,2,4],[-6,2,1,-9,-3],[-9,6,1,3,-5],[2,-6,-8,-9,-4],[8,8,-7,8,-3],[10,-5,-7,6,-8],[3,-7,-10,-2,3],[-2,8,-3,-10,1],[-3,7,-7,6,-6],[-6,-6,-8,8,-5],[-5,-4,-6,-6,-7],[2,-7,-9,3,8]],[[10,8,7,-10,3],[-5,-2,-9,-5,7],[-3,-3,-9,-7,-6],[4,8,-1,8,-9],[-9,-1,-1,-1,7],[-10,8,3,8,2],[4,1,9,-7,5],[10,-10,7,1,-10],[8,1,7,-5,-1],[-10,-4,6,-3,10],[1,-4,-1,4,6],[2,-8,-2,-4,-10],[6,1,1,5,2],[-3,-7,6,5,2],[6,7,-5,-10,6],[4,-10,-1,-4,-6]],[[-4,-1,-6,-9,-9],[-6,2,-2,2,8],[10,1,-8,-2,1],[-7,8,3,7,7],[-4,-4,6,-5,-5],[-8,4,-8,2,-3],[9,5,1,1,4],[7,-1,-4,6,7],[2,-10,-3,-1,6],[5,5,3,1,-6],[-4,-3,-4,5,-6],[-1,6,-7,8,3],[1,1,9,3,-2],[5,2,4,-4,-3],[-9,-1,8,3,7],[3,-5,7,2,6]],[[-9,-9,-8,6,-10],[-4,-7,-6,-6,-2],[5,2,-2,4,7],[6,-10,8,10,3],[4,10,4,-6,-5],[3,4,1,-2,-9],[-6,8,2,7,-1],[1,-8,9,-9,2],[5,-5,1,-6,5],[-4,2,1,10,-7],[8,6,-1,8,2],[-3,5,6,7,1],[-7,5,8,7,-3],[9,-4,-7,-10,4],[-5,8,8,10,-6],[-9,7,-6,1,-3]],[[8,8,-6,5,-10],[-9,10,8,1,-5],[-10,-4,10,2,-1],[-8,8,1,2,2],[-6,8,-10,6,-6],[-10,7,3,-4,-1],[-3,-6,-6,5,-2],[2,7,8,8,-1],[-6,3,7,-3,3],[9,-4,5,3,-9],[-6,-5,-1,-4,-6],[5,8,-7,4,-7],[5,-2,-3,2,8],[9,2,-9,-8,4],[-8,7,-7,-10,-6],[7,-2,-2,-6,9]],[[8,8,-5,-5,-1],[-8,-7,4,1,4],[-10,-1,-8,7,9],[-7,-7,7,3,-4],[10,-3,7,1,-3],[5,4,8,-9,7],[5,5,9,4,5],[-6,8,-1,9,2],[9,-7,-3,6,-2],[-10,-6,-8,8,-9],[-8,7,8,-2,4],[-1,3,-5,-5,-8],[3,-5,-4,6,-5],[-4,-3,10,1,-8],[-9,-5,9,1,-10],[-2,-1,-3,-7,7]],[[-5,-6,2,-10,1],[-7,1,5,1,-5],[-6,-3,1,2,-5],[2,7,-10,6,-1],[2,-7,9,4,-9],[10,-3,2,9,3],[-2,5,5,-10,7],[-7,-1,-3,-8,10],[-3,3,-1,1,-1],[-3,-1,6,-6,-6],[10,-4,-8,1,4],[-3,10,-5,3,3],[2,10,-8,7,5],[-7,-7,-5,-7,-10],[8,10,-9,2,-2],[-5,5,-8,-2,-5]],[[8,-1,2,-9,6],[10,3,3,4,4],[-10,-10,6,8,-3],[-4,-4,8,-3,-6],[6,-3,5,-1,-3],[7,-3,10,7,7],[10,2,8,-9,7],[-2,-1,-2,-2,7],[7,9,-5,9,-5],[-1,-8,9,3,9],[-5,-2,5,-5,6],[-2,-8,-3,10,-4],[-8,9,9,4,-8],[-3,3,9,9,6],[-8,6,-9,-10,1],[-3,-10,-7,-10,3]],[[5,3,1,-7,-8],[6,1,-3,-3,9],[-6,2,-7,-8,-9],[7,7,1,1,-8],[1,4,-6,-4,9],[-2,8,-4,-3,1],[3,6,-7,-10,7],[9,2,1,2,8],[1,-10,-3,5,7],[8,6,-10,2,-3],[-7,-6,8,8,5],[3,3,-8,-8,-10],[10,4,3,1,5],[-4,-10,1,10,-10],[-3,-2,6,3,-4],[6,-5,2,-6,5]],[[8,-4,-2,8,4],[8,9,-6,-1,-9],[-5,8,7,8,-2],[-5,-2,1,-3,7],[-7,7,-6,-10,-1],[1,4,-6,9,6],[-4,-6,-9,-10,7],[2,-2,-9,9,5],[-8,7,-6,-5,-6],[-8,10,-7,-2,3],[-6,-1,-1,5,2],[3,-6,2,-3,7],[-7,-10,-1,-10,-7],[2,8,-10,-6,1],[6,-7,-4,4,-7],[-9,-10,-3,-9,5]],[[6,9,-3,-2,-5],[8,-9,-6,6,-2],[-3,-9,-3,5,7],[-8,-7,6,-6,-10],[3,4,3,-5,-10],[-3,-10,-7,5,3],[-1,-5,-7,-10,-1],[-6,10,-4,-10,3],[-8,4,-9,10,-2],[-7,5,-3,5,5],[-6,8,-1,-1,3],[-10,10,-8,-4,2],[3,-2,3,1,1],[-2,7,4,-4,8],[9,-10,-1,-8,9],[2,1,-10,-9,10]],[[7,8,-2,3,-5],[5,8,-3,-6,-3],[-10,8,-8,6,9],[9,8,1,8,-7],[-4,9,2,10,-2],[4,7,3,-8,3],[5,-3,-9,-2,-8],[-4,-5,-4,-4,4],[5,-7,-10,8,-1],[5,-4,8,5,-2],[1,3,8,3,-2],[-7,-5,-1,-7,4],[1,4,10,-1,-4],[-7,-1,-10,-10,9],[2,-8,2,-1,-8],[7,-6,7,4,10]],[[2,-4,-10,10,-9],[-9,-6,-5,6,-7],[3,-4,-8,-5,-10],[2,-4,5,-1,1],[5,-9,9,-1,-4],[-1,-4,-7,7,-5],[-7,-9,1,5,10],[-2,-8,-7,-8,3],[-7,-10,9,-5,9],[5,7,7,9,-2],[7,-3,-8,3,-1],[10,1,10,5,-8],[5,10,-7,-2,10],[3,-9,-4,9,4],[6,-7,-2,-8,-2],[3,8,-1,-2,-1]],[[-8,-4,3,5,7],[-3,3,-1,8,-4],[-4,10,-2,-8,6],[1,-4,-3,2,10],[-7,-2,2,7,-3],[-10,10,10,1,-8],[-5,-10,-1,7,-1],[3,-9,-10,10,-1],[-8,9,-1,8,5],[10,5,1,5,9],[5,5,1,-5,1],[-2,-6,-5,-10,-10],[10,-4,-2,-1,3],[2,-6,-9,10,-5],[-9,10,-10,2,-1],[-4,2,6,-3,8]],[[10,1,5,-2,6],[-8,6,10,-6,-7],[-5,-7,-9,1,-3],[9,9,9,1,-10],[9,-4,7,-3,8],[-9,-9,10,-9,-1],[9,6,-9,5,8],[-1,-5,-2,-10,-5],[-4,-1,-1,2,-3],[-4,4,-2,7,-7],[3,2,10,2,10],[8,4,-9,-2,6],[-6,8,10,-5,9],[2,9,-10,7,-10],[-1,-10,-8,9,10],[5,-4,7,7,3]],[[-3,6,6,-2,-9],[-9,-9,-3,-8,8],[8,3,10,-7,2],[-1,-4,9,-6,-4],[-3,5,-2,10,-3],[-7,6,4,-9,-3],[3,-10,-2,9,-1],[-10,8,8,-6,-1],[9,-9,-7,10,-5],[9,-6,7,9,3],[10,6,-9,-7,3],[3,5,6,4,-8],[-9,-7,9,1,9],[-9,7,7,10,-2],[-4,-6,4,1,-9],[7,7,3,7,3]]], dtype = "uint64")#candidate|352|(16, 16, 5)|const|uint64
bop_353 = relay.bitwise_and(var_351.astype('uint64'), const_352.astype('uint64')) # shape=(16, 16, 5)
uop_356 = relay.log2(const_352.astype('float32')) # shape=(16, 16, 5)
output = relay.Tuple([bop_353,uop_356,])
output2 = relay.Tuple([bop_353,uop_356,])
func_364 = relay.Function([var_351,], output)
mod['func_364'] = func_364
mod = relay.transform.InferType()(mod)
mutated_mod['func_364'] = func_364
mutated_mod = relay.transform.InferType()(mutated_mod)
var_365 = relay.var("var_365", dtype = "uint64", shape = (16, 16, 1))#candidate|365|(16, 16, 1)|var|uint64
func_364_call = mutated_mod.get_global_var('func_364')
call_366 = func_364_call(var_365)
output = call_366
func_367 = relay.Function([var_365], output)
mutated_mod['func_367'] = func_367
mutated_mod = relay.transform.InferType()(mutated_mod)
var_407 = relay.var("var_407", dtype = "int32", shape = (10, 10, 7))#candidate|407|(10, 10, 7)|var|int32
var_408 = relay.var("var_408", dtype = "int32", shape = (10, 10, 7))#candidate|408|(10, 10, 7)|var|int32
bop_409 = relay.bitwise_xor(var_407.astype('int32'), relay.reshape(var_408.astype('int32'), relay.shape_of(var_407))) # shape=(10, 10, 7)
func_364_call = mod.get_global_var('func_364')
func_367_call = mutated_mod.get_global_var('func_367')
var_429 = relay.var("var_429", dtype = "uint64", shape = (256,))#candidate|429|(256,)|var|uint64
call_428 = relay.TupleGetItem(func_364_call(relay.reshape(var_429.astype('uint64'), [16, 16, 1])), 0)
call_430 = relay.TupleGetItem(func_367_call(relay.reshape(var_429.astype('uint64'), [16, 16, 1])), 0)
output = relay.Tuple([bop_409,call_428,var_429,])
output2 = relay.Tuple([bop_409,call_430,var_429,])
func_434 = relay.Function([var_407,var_408,var_429,], output)
mod['func_434'] = func_434
mod = relay.transform.InferType()(mod)
mutated_mod['func_434'] = func_434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_434_call = mutated_mod.get_global_var('func_434')
var_436 = relay.var("var_436", dtype = "int32", shape = (10, 10, 7))#candidate|436|(10, 10, 7)|var|int32
var_437 = relay.var("var_437", dtype = "int32", shape = (10, 10, 7))#candidate|437|(10, 10, 7)|var|int32
var_438 = relay.var("var_438", dtype = "uint64", shape = (256,))#candidate|438|(256,)|var|uint64
call_435 = func_434_call(var_436,var_437,var_438,)
output = call_435
func_439 = relay.Function([var_436,var_437,var_438,], output)
mutated_mod['func_439'] = func_439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_713 = relay.var("var_713", dtype = "float32", shape = (7, 12, 16))#candidate|713|(7, 12, 16)|var|float32
uop_714 = relay.asinh(var_713.astype('float32')) # shape=(7, 12, 16)
output = relay.Tuple([uop_714,])
output2 = relay.Tuple([uop_714,])
func_728 = relay.Function([var_713,], output)
mod['func_728'] = func_728
mod = relay.transform.InferType()(mod)
mutated_mod['func_728'] = func_728
mutated_mod = relay.transform.InferType()(mutated_mod)
var_729 = relay.var("var_729", dtype = "float32", shape = (7, 12, 16))#candidate|729|(7, 12, 16)|var|float32
func_728_call = mutated_mod.get_global_var('func_728')
call_730 = func_728_call(var_729)
output = call_730
func_731 = relay.Function([var_729], output)
mutated_mod['func_731'] = func_731
mutated_mod = relay.transform.InferType()(mutated_mod)
var_855 = relay.var("var_855", dtype = "float32", shape = (7, 14, 5))#candidate|855|(7, 14, 5)|var|float32
uop_856 = relay.sin(var_855.astype('float32')) # shape=(7, 14, 5)
uop_889 = relay.erf(uop_856.astype('float64')) # shape=(7, 14, 5)
func_55_call = mod.get_global_var('func_55')
func_57_call = mutated_mod.get_global_var('func_57')
const_895 = relay.const([-10,2,-6,5,-6,-3,2,7,7,8,-3,1,-10,10,-5,-9,-1,-5,4,7,1,-6,-3,-10,-4,4,-9,-1,-4,-2,-9,-5,4,9,2,-9,-6,-7,7,-9,-10,-10,10,6,6,4,-1,-8,-1,-2,-1,-7,5,5,-5,-4,-9,-4,8,2,9,1,-5,4,4,-8,-6,-3,10,2,-4,2,1,-2,-5,-6,10,-6,-4,8,6,-6,-2,-3,9,-10,4,-6,-6,-5,-3,-7,6,-6,4,10,-2,2,5,6,3,-7,-6,1,3,6,6,-7,-7,-5,-8,10,-3,-6,10,-2,-8,9,4,-7,-7,-1,6,-7,2,5,9,2,8,10,-9,-2,-3,-10,-2,-4,-2,3,-6,5,4,-7,-5,-5,-6,2,7,-10,-6,9,-1,-8,9,-3,6,10,7,-5,8,-7,6,10,5,6,-4,1,6,-8,-5,-10,8,2,-1,10,-8,-4,10,8,5,9,6,3,-1,9,-2,8,-2,5,-7,3,-4,8,10,-1,9,-4,-10,-9,8,9,-10,9,-7,-5,3,-10,4,1,3,9,-2,8,-10,4,-8,7,2,-2,-4,3,-7,-4,-10,-5,9,-6,-8,4,5,7,3,-3,-2,3,-4,-3,9,1,2,-4,-1,1,-7,7,-5,7,-10,4,-5,-10,-5,-9,-10,-6,6,3,-10,-5,3,1,8,-7,-8,10,10,-4,1,-9,-4,5,-5,-5,5,4,-6,6,-2,-10,-6,4,8,-10,1,-2,-4,-5,5,6,4,10,6,3,10,10,4,1,2,-3,-1,-10,-1,-6,8,10,3,-1,-5,8,-8,3,-2,3,6,-1,-10,3,-7,-10,4,-9,10,-7,4,2,4,3,-10,2,-10,-4,-3,4,8,6,-5,-9,3,-10,1,-9,9,-3,-8,-6,7,1,-7,-1,-10,-6,-10,-10,1,1,1,-9,4,1,8,-10,-9,6,-9,-2,-1,-6,3,5,-5,8,-8,6,8,4,7,2,9,2,4,-7,-2,8,-8,-9,-1,6,-3,-1,-4,-8,1,6,9,-5,2,8,4,1,-8,2,-9,-9,5,-7,5,9,-7,-5,3,-7,-4,10,10,-2,6,-10,-4,-9,-10,-9,2,-2,-3,3,-7,-2,7,8,7,-10,4,8,-2,1,1,-7,-10,-2,-4,-10,7,-1,-7,-6,1,-7,-7,-6,-2,-8,-7,-6,6,1,-4,2,-4,-8,3,7,-9,8,-9,-2,1,6,9,-6,-1,-4,7,-8,8,-4,-9,5,-5,-3,-9,-7,-9,2,-8,-10,5,-6,9,-5,-2,-9,8,-1,1,9,-1,4,-1,7,-5,8,10,-2,8,7,6,2,-4,-9,9,6,-6,1,7,7,-4,1,9,-4,-3,-10,10,5,5,10,-3,5,9,7,5,-9,8,-4,5,7,-10,1,9,6,1,9,2,-5,1,8,-7,6,7,6,7,-4,-10,-10,2,-2,-2,8,4,-5,-9,-2,10,-6,9,2,5,4,-10,2,-10,4,-5,8,-10,-8,-7,-7,-10,5,5,5,3,5,6,7,4,-10,6,10,-10,-6,9,-4,-8,-8,6,5,5,-3,9,-6,3,-6,3,-6,-4,-10,10,6,2,-3,7,8,-7,-2,-2,3,-4,6,-5,-10,7,-6,5,4,-5,-8,2,6,-8,10,-7,-7,2,-2,-6,-9,-4,7,-6,7,-8,6,10,1,-10,-1,-6,2,4,6,-6,-2,-10,10,-1,-9,-1,-9,7,-10,-3,-6,1,-6,9,4,6,6,4,6,-2,-4,-10,-5,-7,5,-7,-8,6,3,7,-1,-3,3,-10,5,-3,-6,-4,-1,-7,10,7,2,3,9,5,4,-4,7,3,-7,-3,-1,-3,7,-1,3,6,-1,5,10,1,-9,-1,10,-8,-2,9,9,6,-3,-4,4,6,-10,9,-10,-2,-5,5,6,-2,6,2,5,-1,6,7,-5,7,-5,-3,-5,3,-9,5,2,6,9,3,-5,-4,-10,-10,5,10,4,-4,10,10,8,5,-3,9,-8,-7,9,-3,-4,5,2,1,9,-6,-5,-8,-4,-4,-5,-2,-7,7,10,-4,3,-6,-5,1,-4,-2,-7,-5,-7,-9,-2,-7,-2,7,-4,-8,10,-2,-3,-8,-1,-10,-5,9,-4,4,1,-6,-6,7,-4,7,-1,1,-3,4,3,2,9,-10,4,-10,5,-10,-1,-3,1,2,-8,-5,6,-6,-3,7,-2,8,10,2,6,-10,-8,3,-2,1,-8,10,-8,-10,-7,-5,-5,6,1,-3,-2,3,6,9,-8,6,9,-9,6,-7,8,1,-5,9,5,-2,-6,6,10,8,6,-4,-1,1,2,-10,10,-4,-8,-10,6,9,8,2,1,-5,-5,3,4,5,1,-8,5,-5,-6,6,-8,6,10,-5,-7,7,1,-9,-3,-3,-8,-5,-5,-7,-7,7,-8,3,-10,-9,9,10,-6,-7,1,-3,-4,-3,-1,2,-5,-5,-9,-3,5,7,-7,-5,3,-4,-5,5,-7,8,3,6,-8,-3,9,7,7,9,-8,7,-8,8,-7,-3,-5,4,1,-8,-3,8,-6,-6,-7,-4,-1,8,1,-5,1,5,-10,-6,1,10,4,5,-2,-10,6,-4,5,8,-6,-6,-2,-4,10,-1,-5,-4,-10,-6,10,1,-10,-4,-5,-2,-7,9,-1,-10,-7,3,-6,9,-6,8,3,-3,-2,-1,-1,-7,3,-8,1,5,-10,7,5,-2,5,6,-9,2,-6,-10,5,-5,-5,1,10,-3,-6,4,10,-10,-8,-2,5], dtype = "uint32")#candidate|895|(1050,)|const|uint32
call_894 = func_55_call(relay.reshape(const_895.astype('uint32'), [15, 10, 7]))
call_896 = func_55_call(relay.reshape(const_895.astype('uint32'), [15, 10, 7]))
output = relay.Tuple([uop_889,call_894,const_895,])
output2 = relay.Tuple([uop_889,call_896,const_895,])
func_901 = relay.Function([var_855,], output)
mod['func_901'] = func_901
mod = relay.transform.InferType()(mod)
mutated_mod['func_901'] = func_901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_902 = relay.var("var_902", dtype = "float32", shape = (7, 14, 5))#candidate|902|(7, 14, 5)|var|float32
func_901_call = mutated_mod.get_global_var('func_901')
call_903 = func_901_call(var_902)
output = call_903
func_904 = relay.Function([var_902], output)
mutated_mod['func_904'] = func_904
mutated_mod = relay.transform.InferType()(mutated_mod)
const_945 = relay.const([[[2,-6,-2,-7,-1,6],[10,1,-4,-4,9,-5],[-1,-6,1,-4,8,7],[5,2,-6,1,8,7],[-10,10,-7,2,8,-3],[-4,1,1,3,-3,-1],[1,-7,6,10,-5,5]],[[7,-9,5,-5,1,2],[-5,9,10,-7,3,-2],[9,3,4,5,-5,-8],[8,-1,9,-2,-8,10],[-2,1,-2,2,-4,-5],[-3,10,9,-10,1,-8],[5,-3,-3,-3,2,8]],[[-6,7,-7,8,5,10],[6,-10,1,5,2,-1],[1,-9,9,-8,2,-4],[-8,-9,-10,6,8,1],[8,5,4,-4,-9,9],[-2,2,-2,3,1,-2],[2,7,8,9,-7,-3]],[[-10,7,1,7,5,-9],[10,-9,-3,-3,3,-5],[9,-6,-8,-9,-7,6],[-4,-3,-6,8,-4,8],[9,2,-1,-2,3,-9],[6,-7,-4,-3,10,7],[-8,-2,5,-10,9,-8]],[[-1,3,8,-4,7,9],[4,10,-8,10,6,-6],[1,-7,10,-3,4,6],[7,8,9,7,-9,-7],[-6,1,-8,4,5,-2],[-5,-7,-10,-2,-10,4],[10,-5,8,6,-1,-7]],[[7,10,3,6,-6,6],[5,6,-2,9,10,1],[-7,6,-5,9,-6,-4],[1,-4,3,5,-2,5],[9,-4,-9,-1,-3,4],[-9,9,-2,-2,-1,1],[8,3,-7,4,4,7]],[[6,-10,2,-4,-9,-6],[-4,-5,7,-2,-10,-7],[-7,2,-2,7,-6,4],[10,-1,-2,9,7,4],[10,1,3,6,2,1],[9,-1,-4,-3,4,5],[-10,4,10,1,4,-9]],[[-1,-4,7,4,-3,8],[-9,-4,-4,-9,-3,2],[-10,3,-5,8,-9,9],[-10,-9,10,-2,10,-2],[-5,1,-5,-3,-5,7],[-9,8,-7,-2,-1,-10],[10,-10,8,-7,4,-2]],[[2,-1,2,-9,-3,8],[3,7,-3,-5,-8,5],[6,2,-1,-6,-2,10],[-7,6,5,9,4,-1],[2,-9,-10,8,-8,5],[-5,-4,10,-10,2,-6],[-9,-4,1,-9,-3,3]],[[5,-9,-2,-4,-5,-3],[-2,-1,-10,-1,2,-2],[-3,5,-3,9,-8,3],[-3,8,-5,5,5,-2],[-3,-3,-10,-9,10,-9],[10,1,6,-9,-2,9],[7,5,-9,6,1,10]],[[-8,4,-1,-1,1,-1],[7,-10,-9,6,-4,-8],[7,-7,-5,2,6,-1],[1,9,5,2,4,-1],[-2,8,8,-9,4,-5],[-4,2,5,10,5,-7],[-1,-2,-1,-9,10,7]],[[5,-4,5,-8,8,-1],[-3,-6,-10,9,-2,-8],[6,5,5,3,-1,1],[-6,-5,8,5,8,-2],[-6,4,3,-2,1,4],[-1,-8,-6,8,-7,-6],[2,-6,5,-3,-8,1]],[[-8,10,-4,7,-3,-10],[3,1,-3,-5,-8,-5],[1,-4,-4,-10,-1,2],[-7,3,-6,-1,10,-1],[8,-6,-8,-9,-1,-6],[1,-7,-10,-10,-10,9],[5,-4,-3,-6,8,-9]],[[-6,-5,-3,-10,-9,-9],[-6,8,-3,9,-8,-10],[6,5,-1,2,3,2],[10,-4,-9,-10,3,8],[-4,1,9,-6,-1,-1],[-5,10,10,-6,6,-1],[-5,7,-6,4,-5,5]]], dtype = "int32")#candidate|945|(14, 7, 6)|const|int32
var_946 = relay.var("var_946", dtype = "int32", shape = (14, 7, 6))#candidate|946|(14, 7, 6)|var|int32
bop_947 = relay.subtract(const_945.astype('int32'), relay.reshape(var_946.astype('int32'), relay.shape_of(const_945))) # shape=(14, 7, 6)
func_265_call = mod.get_global_var('func_265')
func_268_call = mutated_mod.get_global_var('func_268')
var_952 = relay.var("var_952", dtype = "float64", shape = (192,))#candidate|952|(192,)|var|float64
call_951 = func_265_call(relay.reshape(var_952.astype('float64'), [16, 2, 6]))
call_953 = func_265_call(relay.reshape(var_952.astype('float64'), [16, 2, 6]))
output = relay.Tuple([bop_947,call_951,var_952,])
output2 = relay.Tuple([bop_947,call_953,var_952,])
func_958 = relay.Function([var_946,var_952,], output)
mod['func_958'] = func_958
mod = relay.transform.InferType()(mod)
mutated_mod['func_958'] = func_958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_958_call = mutated_mod.get_global_var('func_958')
var_960 = relay.var("var_960", dtype = "int32", shape = (14, 7, 6))#candidate|960|(14, 7, 6)|var|int32
var_961 = relay.var("var_961", dtype = "float64", shape = (192,))#candidate|961|(192,)|var|float64
call_959 = func_958_call(var_960,var_961,)
output = call_959
func_962 = relay.Function([var_960,var_961,], output)
mutated_mod['func_962'] = func_962
mutated_mod = relay.transform.InferType()(mutated_mod)
const_990 = relay.const([[[-4.587697,-5.143718,3.101416,9.820207,-7.339709,-1.635713],[5.870457,8.526113,3.082989,3.260493,7.533854,1.490721],[-8.624939,6.466944,2.332242,-6.412393,9.952273,0.719434],[-3.725338,2.178081,9.742789,0.187528,-5.611699,-0.244589],[7.880050,-9.662169,-0.395834,-5.632113,7.421044,5.849907],[-0.280758,9.035193,-2.828138,7.107179,4.917849,4.100047]],[[-5.714884,2.404911,0.221414,-8.706000,8.594181,-8.211968],[-2.747928,-3.655465,-5.888170,-5.146587,7.134387,-6.336489],[3.041603,-5.174957,1.632669,2.464439,-8.365992,-7.436449],[2.303923,5.269888,-9.056977,-1.674088,-5.641676,-1.499592],[-5.669854,-2.610551,-5.879429,4.457486,-5.145041,-0.685540],[-3.985628,5.533112,-6.436186,-9.000930,-4.679053,-1.171376]],[[1.129903,3.183313,4.703452,4.018379,-8.570316,5.539642],[-6.831315,-8.592774,-7.340003,-5.716393,8.001197,-3.272842],[-1.576468,3.545541,-2.357641,0.693183,-9.301405,1.484627],[-6.037439,0.898771,-9.193224,-9.093797,0.298778,6.363446],[1.008488,-4.578421,8.391757,4.306922,-6.786682,-4.300276],[-7.827972,-9.109795,-0.535369,6.314150,-5.920655,-6.406101]],[[4.061637,-3.980327,1.724589,5.324242,9.331986,3.566254],[-0.077800,-7.671323,4.209766,9.439286,-1.052575,-7.681352],[3.027390,-2.631771,-8.425656,0.867846,2.022548,9.702328],[9.478212,5.310638,-1.551621,-6.754897,6.991125,5.439302],[3.718797,4.984211,5.204383,2.721307,1.589693,-9.127709],[-4.366423,6.350906,3.585626,-5.569738,0.541665,-6.490173]],[[0.011306,-0.213685,2.732936,4.749586,-1.105450,1.084759],[7.669192,1.841768,-1.971914,-4.079212,4.457288,-0.112587],[-9.027357,3.336851,-3.221829,-0.530996,-8.723604,6.059637],[-2.179401,2.542522,4.102494,-5.576726,0.249450,8.415178],[-3.797437,-6.642566,0.895895,-2.130261,4.834271,-1.287178],[4.889301,7.806279,2.301173,-8.719470,-6.008086,3.855139]],[[-5.478329,-5.249244,3.635600,0.167385,7.681808,4.635460],[-4.350520,2.834520,7.130683,0.964941,-5.540810,3.405606],[5.160458,3.832524,2.692603,7.137679,3.524818,7.589086],[7.136544,-2.059167,-0.230404,-9.334790,6.091726,-3.576951],[8.591284,-0.065336,7.578690,3.919603,1.799580,-2.999618],[4.253099,-9.113914,9.431365,1.394199,-1.808991,3.483996]],[[3.578038,9.986138,0.914735,-4.071673,8.009784,-2.743493],[-6.882795,-7.346957,8.951569,-7.886837,-3.862058,4.179852],[-0.731878,7.334038,-1.186855,2.420769,-9.877545,-9.137959],[-1.674056,-8.156446,3.054930,-0.562456,-7.147849,6.368100],[9.095144,9.058323,-3.981413,7.468876,5.285208,0.897482],[-8.783630,-4.818560,4.199725,-6.910181,8.467635,-8.568663]],[[-7.108078,-5.095293,5.798365,-6.506084,6.807786,-9.664069],[-3.354535,-6.284477,-3.362343,8.997300,-7.581176,8.577019],[-2.577247,8.402777,-7.463478,4.624382,6.988717,-4.763159],[4.015843,0.509140,-4.697464,9.272278,-1.601286,-8.802730],[2.410552,3.978299,9.747277,-1.272694,-1.665026,1.802384],[7.183869,3.817306,-8.914831,5.143654,-5.631433,-6.034869]],[[-6.834185,5.078277,7.734269,-6.292259,1.546911,-2.838470],[-2.262168,1.110551,4.258250,-3.469798,3.933270,9.823581],[8.593340,6.808268,8.893575,-8.151134,3.612437,-0.573174],[8.399509,-5.898370,-9.739047,-0.455827,7.111705,-4.119905],[-4.977102,9.898724,-7.339971,-6.922296,0.458201,-1.861385],[0.197107,-6.582395,-0.773107,-1.310783,2.991771,6.038976]],[[5.499431,7.211449,8.020042,9.624417,-4.799546,0.960064],[2.319214,-7.821225,3.065423,-8.109953,9.703949,-0.965053],[0.415786,1.633206,0.016941,4.198949,-0.192909,0.437570],[-0.912411,-4.040960,5.586102,0.477692,3.313842,8.141314],[-0.197187,1.748603,-8.500615,-6.668611,-0.716434,0.112293],[-7.033808,9.725871,8.775979,-6.877703,0.145742,-0.312611]]], dtype = "float64")#candidate|990|(10, 6, 6)|const|float64
uop_991 = relay.cosh(const_990.astype('float64')) # shape=(10, 6, 6)
uop_993 = relay.acosh(uop_991.astype('float64')) # shape=(10, 6, 6)
bop_1001 = relay.greater(uop_991.astype('bool'), relay.reshape(uop_993.astype('bool'), relay.shape_of(uop_991))) # shape=(10, 6, 6)
func_265_call = mod.get_global_var('func_265')
func_268_call = mutated_mod.get_global_var('func_268')
var_1005 = relay.var("var_1005", dtype = "float64", shape = (192,))#candidate|1005|(192,)|var|float64
call_1004 = func_265_call(relay.reshape(var_1005.astype('float64'), [16, 2, 6]))
call_1006 = func_265_call(relay.reshape(var_1005.astype('float64'), [16, 2, 6]))
output = relay.Tuple([bop_1001,call_1004,var_1005,])
output2 = relay.Tuple([bop_1001,call_1006,var_1005,])
func_1019 = relay.Function([var_1005,], output)
mod['func_1019'] = func_1019
mod = relay.transform.InferType()(mod)
mutated_mod['func_1019'] = func_1019
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1020 = relay.var("var_1020", dtype = "float64", shape = (192,))#candidate|1020|(192,)|var|float64
func_1019_call = mutated_mod.get_global_var('func_1019')
call_1021 = func_1019_call(var_1020)
output = call_1021
func_1022 = relay.Function([var_1020], output)
mutated_mod['func_1022'] = func_1022
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1119 = relay.var("var_1119", dtype = "float32", shape = (13, 9, 10))#candidate|1119|(13, 9, 10)|var|float32
uop_1120 = relay.asinh(var_1119.astype('float32')) # shape=(13, 9, 10)
func_151_call = mod.get_global_var('func_151')
func_154_call = mutated_mod.get_global_var('func_154')
var_1137 = relay.var("var_1137", dtype = "bool", shape = (448,))#candidate|1137|(448,)|var|bool
call_1136 = relay.TupleGetItem(func_151_call(relay.reshape(var_1137.astype('bool'), [7, 8, 8]), relay.reshape(var_1137.astype('bool'), [7, 8, 8]), ), 2)
call_1138 = relay.TupleGetItem(func_154_call(relay.reshape(var_1137.astype('bool'), [7, 8, 8]), relay.reshape(var_1137.astype('bool'), [7, 8, 8]), ), 2)
bop_1144 = relay.bitwise_or(uop_1120.astype('uint32'), relay.reshape(var_1119.astype('uint32'), relay.shape_of(uop_1120))) # shape=(13, 9, 10)
const_1150 = relay.const([[[-8,-1,6,-1,-6,-8,-3,-2,-3,-7],[1,-2,7,1,7,-3,4,-5,7,-3],[7,9,-2,-6,-6,-4,3,9,-3,7],[2,-5,7,7,8,-6,1,4,6,10],[2,-10,9,-4,-2,4,-4,-2,-9,-2],[-1,3,-6,9,6,8,3,-3,-7,-9],[-8,5,-2,-3,-8,-9,7,-4,8,7],[-1,1,2,10,-9,-10,-2,10,-4,4],[-8,-4,2,8,-9,3,1,-8,8,-4]],[[-9,-5,-1,-2,8,8,8,2,10,-1],[6,-1,-7,-10,8,-3,8,5,-5,-4],[-4,10,8,3,4,9,7,-9,-10,1],[-4,-3,2,-2,9,-9,-2,-5,3,-10],[-2,-8,-8,3,-7,4,-1,-6,8,-10],[-5,10,-2,-10,2,3,-9,-1,10,-3],[-10,-10,7,-6,3,-2,8,8,4,4],[-9,8,-10,3,4,-6,-4,-9,-2,5],[-10,-4,6,8,-3,8,1,-8,-6,10]],[[-10,8,5,-6,-10,-10,8,9,-7,8],[1,-2,1,-3,2,10,-10,-5,-4,9],[1,-6,-7,-5,-4,-4,8,-7,-7,-7],[-2,10,-5,-6,-7,-7,-8,1,10,10],[10,10,2,-8,-6,8,4,-1,-5,10],[-5,4,9,-9,-1,4,-4,7,2,5],[-2,7,2,-3,-8,-3,-9,6,-10,7],[-3,3,7,-3,5,8,-2,-3,6,5],[8,-5,-3,-5,6,-6,-4,6,9,2]],[[-7,1,-7,6,-10,-7,7,7,5,-4],[-5,1,7,5,-7,10,-9,-5,-7,2],[-4,-10,-3,2,1,8,-6,7,8,-1],[-1,1,6,-8,9,-2,9,3,-9,9],[-2,-5,-7,6,-6,-10,-10,7,-9,8],[-5,2,-2,-5,1,-10,10,-3,-8,4],[-6,1,7,3,-10,-7,-3,8,-5,8],[-4,1,6,3,-3,-7,1,-6,-5,8],[3,-10,-4,4,9,7,4,9,4,-3]],[[-1,7,-10,2,-3,1,-6,2,9,-1],[-2,6,-8,4,-9,8,-9,3,9,5],[6,10,8,3,-10,10,3,-7,-10,-3],[-8,-10,6,-6,-9,-9,-6,-8,-10,4],[5,1,-7,-9,1,-10,4,6,3,7],[3,-8,2,5,-7,2,-10,-10,-3,-6],[2,3,-5,-8,-3,10,-10,6,4,-3],[-8,-3,-10,-7,-3,-7,-8,2,3,2],[4,3,10,-5,-1,-5,3,-9,-10,-8]],[[-9,7,7,-1,-9,8,4,-1,-3,1],[7,4,6,5,-10,-9,7,-8,-7,-9],[-3,2,-8,-4,-1,4,-2,8,-2,6],[-5,10,-2,8,-7,-6,4,10,2,3],[-8,9,-7,-10,1,10,-10,8,1,1],[-5,-10,6,-10,-3,-4,-4,-3,-2,-10],[8,9,-2,-1,-6,-3,-9,9,3,8],[6,7,4,1,-4,9,2,-9,6,1],[2,3,9,9,-3,7,6,7,7,-6]],[[-10,-2,-4,9,1,-3,4,-6,-10,-6],[-1,-10,1,9,-9,7,-1,-2,-10,-6],[-2,5,7,-10,4,7,9,4,-9,5],[9,7,-1,-6,1,3,3,9,7,6],[-5,9,-4,-3,-10,-1,2,-1,-5,5],[1,9,-6,-5,-8,-6,-5,7,2,10],[-8,-10,-7,5,-8,-9,-10,6,-7,-9],[-1,9,2,3,6,5,-4,-6,6,6],[4,4,4,-10,-2,-9,7,-8,6,2]],[[-7,-7,2,4,7,-1,-5,-4,6,3],[4,10,10,10,-9,7,1,-7,-7,10],[-2,6,-9,-8,4,-4,3,-2,4,-8],[-6,9,9,10,-8,2,5,-9,8,-9],[9,3,-9,-5,-6,-4,-10,-10,2,6],[4,1,-8,4,-8,-10,-8,8,-9,8],[8,10,6,6,3,9,-2,7,-1,-5],[3,5,-2,7,-10,9,-9,-5,-10,-5],[2,10,-4,-3,-7,-3,8,2,-3,-1]],[[5,2,-10,1,7,-3,-9,5,2,-8],[8,1,-1,6,-3,-8,7,-2,-6,-7],[6,4,-4,9,-8,-7,10,4,1,5],[7,10,-3,2,-5,2,10,-9,4,-10],[-6,-9,-5,6,-5,7,4,7,-2,-7],[-10,10,-3,-4,-6,-9,3,9,-3,1],[-5,9,10,9,6,8,-4,-6,7,6],[-6,6,-7,5,-9,7,9,-7,5,-10],[3,9,-8,6,6,-1,-1,2,-1,9]],[[7,7,-3,2,10,10,-10,1,-5,3],[3,6,10,-3,8,4,7,9,6,9],[-3,-9,8,-3,1,4,2,9,9,7],[-3,1,2,1,3,-4,-8,1,5,9],[-2,1,5,7,3,9,5,-7,2,-5],[-1,-3,-3,7,10,5,10,-5,-7,9],[6,-7,10,8,-5,8,3,5,6,6],[-9,-8,-9,6,-7,6,-6,4,7,9],[4,-8,-9,-5,-4,-10,3,3,-3,8]],[[5,3,8,-7,-9,9,-2,-2,-7,-5],[-9,-5,5,6,5,9,-9,1,-2,-2],[-3,-6,-7,7,5,-6,-8,-9,-7,4],[9,3,-8,7,1,10,-10,10,-5,1],[8,4,-8,-3,-8,-10,10,4,8,-7],[1,-4,4,-10,8,8,-1,-5,5,-8],[5,-9,1,-5,5,9,-1,-10,-6,3],[4,-1,-6,-5,-6,-6,-3,6,-10,-5],[2,2,-7,-8,3,-7,5,-1,6,-3]],[[-1,3,-6,7,9,1,-6,-7,-7,7],[6,-6,-4,3,-5,4,5,-7,6,7],[6,9,4,6,-10,-1,9,-9,-6,-4],[-1,6,-6,9,9,-9,5,-8,3,10],[8,-4,-1,-9,7,10,2,4,-3,9],[-8,-8,6,1,3,-7,-3,8,-3,-2],[2,8,10,-3,-4,4,1,-4,9,8],[-7,2,5,-3,-7,-9,-7,-3,9,-7],[-8,-5,-2,-6,8,-2,9,4,-2,-2]],[[-4,-7,6,-9,8,7,8,5,-5,-2],[4,-8,7,-7,-3,-9,-10,9,8,2],[-3,-2,-3,2,7,-2,5,4,-6,-3],[1,-5,8,-6,1,2,7,6,10,-9],[-9,8,3,-7,4,-7,2,6,3,6],[-8,-7,-4,-4,-10,-3,-7,6,-2,8],[-5,-3,-6,-4,-10,2,-1,-4,3,-1],[-4,5,-5,1,4,-7,4,-5,-10,-9],[1,10,-4,1,4,-2,8,8,-8,3]]], dtype = "uint32")#candidate|1150|(13, 9, 10)|const|uint32
bop_1151 = relay.mod(bop_1144.astype('float32'), relay.reshape(const_1150.astype('float32'), relay.shape_of(bop_1144))) # shape=(13, 9, 10)
func_151_call = mod.get_global_var('func_151')
func_154_call = mutated_mod.get_global_var('func_154')
call_1157 = relay.TupleGetItem(func_151_call(relay.reshape(var_1137.astype('bool'), [7, 8, 8]), relay.reshape(call_1136.astype('bool'), [7, 8, 8]), ), 1)
call_1158 = relay.TupleGetItem(func_154_call(relay.reshape(var_1137.astype('bool'), [7, 8, 8]), relay.reshape(call_1136.astype('bool'), [7, 8, 8]), ), 1)
output = relay.Tuple([call_1136,var_1137,bop_1151,call_1157,])
output2 = relay.Tuple([call_1138,var_1137,bop_1151,call_1158,])
func_1161 = relay.Function([var_1119,var_1137,], output)
mod['func_1161'] = func_1161
mod = relay.transform.InferType()(mod)
mutated_mod['func_1161'] = func_1161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1161_call = mutated_mod.get_global_var('func_1161')
var_1163 = relay.var("var_1163", dtype = "float32", shape = (13, 9, 10))#candidate|1163|(13, 9, 10)|var|float32
var_1164 = relay.var("var_1164", dtype = "bool", shape = (448,))#candidate|1164|(448,)|var|bool
call_1162 = func_1161_call(var_1163,var_1164,)
output = call_1162
func_1165 = relay.Function([var_1163,var_1164,], output)
mutated_mod['func_1165'] = func_1165
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1250 = relay.var("var_1250", dtype = "int16", shape = (11, 13, 5))#candidate|1250|(11, 13, 5)|var|int16
const_1251 = relay.const([[[2,9,-6,8,5],[-8,5,6,-6,-10],[-2,10,10,-1,3],[1,1,-3,2,-8],[-3,4,4,2,8],[10,-4,9,6,9],[9,7,3,-10,3],[-1,-4,8,2,9],[4,3,10,4,-3],[7,4,-3,-6,-1],[1,-9,5,-5,9],[-1,1,-3,-6,-9],[9,-3,10,1,9]],[[8,1,4,-7,7],[3,1,9,-7,10],[-6,-9,-5,4,-8],[-5,4,-8,-6,-9],[10,-8,-6,-6,4],[8,-6,-8,10,6],[-5,-8,9,-7,-10],[-5,-8,3,3,-10],[5,6,7,-4,-4],[-6,-1,9,-10,-2],[-5,-1,3,-1,-3],[-1,9,2,1,-4],[6,5,-6,-7,1]],[[5,8,8,-9,-8],[-10,-3,-6,4,10],[-2,7,6,-10,-10],[-4,-6,2,-4,5],[-5,10,-3,-2,-6],[6,-1,-5,-6,9],[7,-10,6,1,5],[3,-2,-8,1,-3],[-4,-3,1,9,-5],[3,2,7,7,7],[3,-4,2,9,1],[8,-10,-10,1,8],[10,9,9,7,3]],[[10,3,-2,-5,6],[-4,1,7,5,-3],[-5,-6,-2,-10,3],[-2,-3,6,-7,8],[-8,10,-6,-1,5],[8,4,4,-1,6],[10,-6,2,-10,-2],[6,1,-9,3,2],[5,-7,3,6,6],[7,-1,-10,-4,4],[9,6,-6,-10,7],[6,-1,-1,-4,10],[1,7,8,-5,-10]],[[-8,10,2,1,6],[4,-9,7,-1,9],[3,7,-9,9,-9],[2,-9,-3,8,-3],[-5,-8,-3,-6,-6],[-4,-4,10,7,-9],[10,6,-4,2,-7],[8,-3,-6,-1,-1],[-9,7,5,9,9],[-10,7,-2,-7,7],[-1,-3,3,-1,4],[-1,-6,-6,-8,-6],[-1,5,2,-3,2]],[[-2,6,9,7,-4],[-3,-5,5,-3,8],[-9,-8,9,4,1],[-3,-2,8,-10,3],[-9,-1,7,-6,3],[2,3,8,9,7],[9,1,-10,-3,8],[-4,-10,1,-5,10],[3,9,9,9,9],[-8,-7,-10,-9,-7],[6,-4,-10,-8,2],[-2,9,10,-1,5],[-6,-8,3,-9,-2]],[[-9,-10,7,-8,5],[-10,-6,2,-6,-6],[3,-8,-6,-1,-3],[-1,-1,7,-3,2],[8,8,-2,9,-3],[1,-8,7,9,-9],[10,5,3,1,9],[-5,-5,9,3,-5],[5,-10,-6,7,6],[-8,-7,10,-4,-7],[4,10,-5,7,8],[-4,-10,6,-3,1],[-8,-8,1,7,10]],[[-8,6,-4,-6,-8],[-4,9,-7,2,-9],[-7,-2,-4,-4,-8],[-2,7,-4,-8,-3],[-7,7,1,-3,3],[-7,-9,-7,2,3],[-4,-6,-5,-3,5],[9,4,-7,9,-9],[-2,-5,5,-3,1],[-7,-2,-9,5,10],[-9,1,-5,10,10],[8,-6,-2,-3,6],[-2,-1,7,-3,-2]],[[-2,4,-6,-4,4],[-4,6,5,10,3],[-4,-8,3,-4,8],[3,-1,-5,-5,1],[-3,-2,-6,-6,-5],[-2,-8,-5,-6,9],[-7,7,-7,-4,1],[4,2,-4,-2,-5],[-9,-5,7,-8,-1],[8,9,-7,-8,-1],[-8,-5,-10,9,7],[-9,10,5,-6,-10],[-2,-4,-6,9,3]],[[2,-4,10,-6,-6],[-4,1,-10,1,1],[-2,2,4,-8,3],[-3,-3,-2,1,-3],[-2,1,-10,2,-7],[-5,-8,7,-6,-6],[-8,-3,-8,-5,4],[-5,4,-10,6,-8],[-6,4,-9,-5,9],[1,10,10,1,-6],[-3,1,-6,-4,4],[-7,-4,-2,3,-7],[9,-10,3,9,-5]],[[-1,6,8,5,-8],[5,-9,8,3,3],[6,9,2,-7,-8],[-6,1,-2,-7,10],[-6,-1,-3,10,-10],[5,4,-3,-7,-9],[-3,3,8,2,2],[9,6,-7,-10,-4],[-10,8,4,-2,10],[-6,-8,-6,4,-2],[-9,-6,-2,3,-10],[4,-7,-3,2,1],[-7,-6,6,1,-7]]], dtype = "int16")#candidate|1251|(11, 13, 5)|const|int16
bop_1252 = relay.not_equal(var_1250.astype('bool'), relay.reshape(const_1251.astype('bool'), relay.shape_of(var_1250))) # shape=(11, 13, 5)
func_901_call = mod.get_global_var('func_901')
func_904_call = mutated_mod.get_global_var('func_904')
var_1256 = relay.var("var_1256", dtype = "float32", shape = (7, 70))#candidate|1256|(7, 70)|var|float32
call_1255 = relay.TupleGetItem(func_901_call(relay.reshape(var_1256.astype('float32'), [7, 14, 5])), 2)
call_1257 = relay.TupleGetItem(func_904_call(relay.reshape(var_1256.astype('float32'), [7, 14, 5])), 2)
output = relay.Tuple([bop_1252,call_1255,var_1256,])
output2 = relay.Tuple([bop_1252,call_1257,var_1256,])
func_1271 = relay.Function([var_1250,var_1256,], output)
mod['func_1271'] = func_1271
mod = relay.transform.InferType()(mod)
var_1272 = relay.var("var_1272", dtype = "int16", shape = (11, 13, 5))#candidate|1272|(11, 13, 5)|var|int16
var_1273 = relay.var("var_1273", dtype = "float32", shape = (7, 70))#candidate|1273|(7, 70)|var|float32
output = func_1271(var_1272,var_1273,)
func_1274 = relay.Function([var_1272,var_1273,], output)
mutated_mod['func_1274'] = func_1274
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1565 = relay.var("var_1565", dtype = "uint64", shape = (1, 13, 7))#candidate|1565|(1, 13, 7)|var|uint64
const_1566 = relay.const([[[10,4,2,6,9,5,-4],[1,-6,3,-5,-7,-9,6],[7,-9,10,5,-1,-7,-2],[10,7,3,8,9,1,2],[-2,-8,-6,8,-10,9,-3],[-10,3,8,-5,3,9,9],[-10,1,-1,3,-4,5,-3],[5,-3,8,7,5,-8,-5],[2,8,5,6,-8,5,-9],[6,-5,5,-8,-3,10,6],[8,-7,-5,2,4,-10,-6],[-4,3,4,-3,-7,3,-5],[-10,3,4,10,-4,-1,-10]],[[-1,-6,-1,7,1,6,2],[-10,2,-7,7,4,-3,10],[7,7,-8,4,-3,7,-4],[2,4,-2,1,3,3,7],[-6,-1,9,-2,2,8,-1],[-9,-10,9,-4,-10,10,-3],[9,-8,7,7,-7,2,-6],[-5,5,-10,-7,-7,-1,6],[-10,-4,-8,-5,2,-2,-2],[-6,-5,5,-7,5,7,-4],[10,-10,10,-3,-6,5,4],[-9,-2,-7,8,-6,-9,8],[6,-2,6,9,8,4,2]],[[-4,-7,-3,7,-5,-1,9],[-6,6,3,-8,-2,2,-1],[-5,-6,-9,1,-1,3,-3],[-10,4,3,6,10,2,-3],[3,3,-6,7,3,9,-8],[1,-5,-6,-7,-1,-5,-8],[-6,-3,4,-8,-8,-6,-7],[-4,-7,6,8,-3,3,1],[-8,4,10,4,7,4,1],[4,-7,10,-7,-6,-2,-1],[4,2,-1,-7,-6,-4,-4],[-8,-10,-2,-3,1,-1,-5],[7,-8,8,-4,-8,9,-1]],[[-9,-5,10,9,4,-4,-4],[-1,10,6,10,9,2,-2],[-3,6,-10,9,6,-1,2],[5,-4,4,6,-5,-4,8],[-4,-9,-5,-1,5,6,9],[-4,-5,-6,7,5,2,10],[4,3,10,5,6,2,-5],[5,-6,-5,-7,-9,3,-8],[2,2,-5,2,-7,-1,-4],[-6,-1,-2,-7,-7,-10,-9],[-8,1,-2,-6,9,2,-8],[1,-8,-10,8,-6,-1,-9],[9,5,6,9,-10,-5,-6]],[[7,2,3,-6,8,5,9],[7,8,-10,7,-10,4,-3],[10,-7,-3,-6,-8,-1,6],[-10,-3,-5,-5,5,-8,10],[6,-2,5,3,8,-4,10],[1,-1,-3,10,-5,-2,8],[-7,4,4,-10,-5,4,-2],[8,-4,-10,-1,-1,-10,7],[9,3,-6,9,-3,6,2],[1,-10,6,9,-1,6,3],[-8,-7,10,3,9,5,-9],[-1,-2,-4,3,-8,-5,-5],[3,-8,-2,8,-7,7,2]],[[-7,4,-3,2,3,-9,-8],[-2,-9,4,-5,-4,-8,5],[8,-9,10,5,-4,-3,2],[7,-8,6,-5,-5,-7,-5],[-2,2,10,5,9,-5,6],[-9,2,10,-7,9,5,2],[3,-8,-10,4,-6,-3,-10],[-7,8,5,-5,2,-1,4],[5,9,5,-4,2,8,7],[-2,-10,3,8,-10,5,5],[-2,-4,-6,6,2,10,-8],[-1,-8,1,-3,-7,-4,-2],[-8,-5,-7,-9,1,6,-5]],[[-7,-3,-7,-1,-10,-5,-5],[-4,10,-5,2,5,5,-9],[1,-5,7,9,2,6,-4],[9,-2,6,4,-8,-3,10],[-6,9,10,-8,-4,5,-6],[-8,-2,2,1,-7,-1,-3],[-5,-2,-1,10,5,-10,-4],[-4,6,1,-2,-5,10,10],[-4,-4,8,-1,7,10,-9],[10,5,-2,-10,2,-5,-7],[-6,6,1,-10,6,-6,5],[4,6,7,-1,-4,-3,5],[3,3,-8,-9,9,-8,3]],[[9,-1,1,-8,-1,-7,-10],[-3,-10,-4,6,-4,-2,6],[-9,5,-6,10,6,-6,-6],[1,-5,10,1,-2,7,3],[10,-1,-8,-6,5,-2,3],[7,10,5,4,-5,-1,-3],[-3,-10,-6,2,9,10,6],[-6,-9,10,1,-9,3,2],[-10,-2,9,-6,3,9,-7],[-8,1,4,5,1,9,2],[5,8,9,8,2,-3,1],[-8,10,-3,-8,-1,1,2],[6,-4,10,-4,-1,-4,-6]],[[7,8,-8,-9,-7,8,-3],[-4,10,1,-8,-5,-7,-5],[-9,-8,8,4,-2,7,-2],[-9,-5,-2,-10,-1,3,3],[4,2,8,-2,8,2,-8],[1,-7,9,-5,7,5,6],[-3,9,-6,1,-5,-10,-10],[2,3,-10,-6,-2,-9,8],[6,3,2,9,4,-10,4],[1,4,1,-9,-10,1,7],[1,-3,9,8,-9,7,-8],[2,9,-5,-7,2,1,-10],[-4,-2,4,3,3,-3,10]],[[-6,1,10,9,4,-4,-1],[-6,7,2,4,7,7,1],[-2,2,-9,6,-2,5,-3],[10,-5,-9,-8,-4,-4,2],[-10,-3,-3,-2,7,-2,-5],[5,-5,3,3,4,2,-6],[6,-2,-10,-3,-10,-5,-3],[8,-1,7,9,-8,4,6],[8,6,9,-4,-3,-1,-2],[-1,-3,-2,-1,-2,10,3],[-2,2,2,-5,4,-9,6],[1,6,2,3,4,4,-6],[-6,8,9,-7,8,1,1]],[[10,-10,3,4,-5,-1,3],[-7,-10,8,-10,-10,8,-8],[9,-7,-5,9,-4,5,-10],[-2,-2,9,-1,-1,-4,7],[8,-8,-5,3,3,9,-5],[-9,-3,-5,10,-8,-3,-4],[-2,6,6,-7,1,2,4],[-3,8,-3,5,-7,-5,7],[-3,-2,2,7,2,-1,-5],[-8,6,9,5,6,-1,-4],[7,-2,-2,7,2,2,-9],[-8,-5,3,-8,-7,4,3],[-6,4,10,-6,-10,-6,9]],[[10,-2,2,5,-1,10,7],[1,1,-1,-1,-1,-5,9],[7,1,6,6,-3,5,-7],[9,-1,4,-8,-9,5,-5],[4,4,-4,9,-10,-1,-7],[4,3,7,-6,8,-5,-10],[-8,5,-10,3,3,7,-8],[-6,-5,8,8,2,8,5],[-6,6,-1,-7,-9,9,2],[-7,2,-7,6,5,-1,-7],[6,4,6,-5,10,-1,2],[-3,4,9,3,-5,1,4],[-8,3,-2,5,7,-8,3]],[[8,-7,-4,-10,9,6,6],[-7,-9,3,6,-9,5,10],[-4,3,10,4,-1,4,-2],[7,8,-8,8,1,9,6],[7,-9,8,-5,-2,-2,-3],[-6,-7,-3,-8,3,4,-9],[-5,1,10,3,2,8,-6],[10,7,6,-8,8,-2,1],[5,3,6,2,-3,-7,2],[10,8,-1,3,-8,8,8],[-6,-8,-10,1,-4,-3,-5],[-2,6,8,2,-8,7,-8],[3,-5,-7,-10,-5,-3,1]],[[3,-4,6,7,-3,-3,5],[-8,-7,1,10,6,-4,-8],[-7,5,-6,7,1,5,-4],[-7,-10,-2,-6,8,2,5],[-4,-7,3,-1,10,-2,-1],[-5,7,3,-6,4,-1,-9],[8,-1,6,-3,9,-9,-1],[8,-8,-8,6,10,-8,6],[-9,-2,-9,-9,-10,-6,-6],[8,6,1,2,8,-3,-1],[-5,10,-4,-2,5,9,-4],[6,2,9,-3,-3,-2,-2],[1,7,10,1,8,-6,5]],[[-2,-2,2,6,3,4,4],[-9,2,-8,8,-6,2,10],[-1,-3,7,3,9,-1,-9],[-2,-4,7,-3,-6,-3,-7],[6,-2,6,10,-1,3,2],[-6,-2,2,-9,3,-6,-10],[1,5,-5,-6,4,-4,-9],[-9,-2,2,1,-9,6,2],[-1,10,-10,-1,4,7,3],[5,10,-5,-6,8,4,10],[9,10,6,2,-7,-2,10],[8,-5,-7,4,-7,10,10],[3,4,5,4,5,7,10]],[[-2,-3,6,-3,10,5,-10],[5,9,-1,3,-6,-7,-4],[-3,-6,-5,-7,-6,3,10],[5,1,1,1,-10,7,-1],[6,-1,-8,-8,-5,-5,5],[-6,4,-4,-5,-6,6,1],[3,-10,-7,-10,7,9,2],[4,2,4,-3,-4,3,9],[7,5,-1,-8,7,3,-7],[7,-8,9,-10,9,-1,-6],[-2,-6,-4,-6,-9,5,-6],[1,3,-5,8,3,4,5],[-5,-2,5,-4,10,-6,-6]]], dtype = "uint64")#candidate|1566|(16, 13, 7)|const|uint64
bop_1567 = relay.less(var_1565.astype('bool'), const_1566.astype('bool')) # shape=(16, 13, 7)
func_1019_call = mod.get_global_var('func_1019')
func_1022_call = mutated_mod.get_global_var('func_1022')
var_1574 = relay.var("var_1574", dtype = "float64", shape = (192,))#candidate|1574|(192,)|var|float64
call_1573 = relay.TupleGetItem(func_1019_call(relay.reshape(var_1574.astype('float64'), [192,])), 0)
call_1575 = relay.TupleGetItem(func_1022_call(relay.reshape(var_1574.astype('float64'), [192,])), 0)
output = relay.Tuple([bop_1567,call_1573,var_1574,])
output2 = relay.Tuple([bop_1567,call_1575,var_1574,])
func_1580 = relay.Function([var_1565,var_1574,], output)
mod['func_1580'] = func_1580
mod = relay.transform.InferType()(mod)
var_1581 = relay.var("var_1581", dtype = "uint64", shape = (1, 13, 7))#candidate|1581|(1, 13, 7)|var|uint64
var_1582 = relay.var("var_1582", dtype = "float64", shape = (192,))#candidate|1582|(192,)|var|float64
output = func_1580(var_1581,var_1582,)
func_1583 = relay.Function([var_1581,var_1582,], output)
mutated_mod['func_1583'] = func_1583
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1755 = relay.var("var_1755", dtype = "float64", shape = (6, 11, 9))#candidate|1755|(6, 11, 9)|var|float64
uop_1756 = relay.cosh(var_1755.astype('float64')) # shape=(6, 11, 9)
func_1271_call = mod.get_global_var('func_1271')
func_1274_call = mutated_mod.get_global_var('func_1274')
var_1768 = relay.var("var_1768", dtype = "int16", shape = (715,))#candidate|1768|(715,)|var|int16
const_1769 = relay.const([1.732822,2.232059,-9.523376,6.794610,9.939355,-2.348639,-7.070927,7.811578,-5.719468,1.815447,9.002964,3.864791,-3.491757,-1.502518,4.470618,2.982574,9.823389,-2.569897,1.986166,-4.254229,2.494285,6.851199,5.844873,-3.669830,-8.356975,-2.749543,-8.906460,-6.791693,8.186289,2.556646,4.965729,-4.639465,0.478859,-5.453132,-9.436436,0.936184,-1.550399,3.125571,3.706480,1.788918,1.697471,2.894443,9.965018,2.001937,-5.642043,7.206980,0.944560,3.006486,0.083791,-2.235663,-7.807118,8.637758,-2.420179,2.885223,-8.068947,4.597861,-8.040028,-8.415570,-9.137531,-0.576569,-7.256922,-5.414111,0.346287,-0.316109,-0.698706,-0.017839,-7.223650,4.130457,7.716565,-0.391372,4.828285,3.351897,7.120389,1.432857,5.311354,-0.394925,1.490929,-1.636808,-5.972945,3.083479,5.527877,-1.486065,-5.152273,-4.407126,-9.629354,8.170729,-3.165966,6.293700,-0.626613,-1.809683,-9.568118,3.297804,9.208204,8.717898,-7.624211,-2.301416,-0.802900,4.515614,-6.013934,-4.031180,8.245503,-7.229248,5.892800,4.404163,-0.378188,6.969041,-3.315495,7.921973,-1.185913,-7.259078,2.903272,-9.360840,6.012524,-4.618414,1.528415,-0.007034,0.598214,6.568296,-5.171881,-2.618688,-7.459072,6.051016,5.000022,-8.406474,0.418281,-3.391874,-1.868947,2.620415,7.560446,4.889392,-3.880362,9.404608,6.042382,-7.344894,5.397254,-6.388177,8.301357,-4.946465,-7.653530,-7.300573,7.652162,8.565118,-3.673377,1.091606,-1.285879,-4.766799,-1.915005,-6.656927,-1.706484,3.691048,-2.251101,1.981938,-5.954524,-8.815088,1.975658,-1.419169,1.725006,-9.624163,-9.099925,3.147429,-2.153197,-1.711299,1.601806,-3.975671,2.158365,4.915171,-8.164962,0.738646,0.966061,7.119020,5.590244,2.425717,9.463010,-3.851904,-8.794403,1.728565,0.062439,2.908467,-6.224078,7.684746,-2.174922,2.487414,8.140112,8.732060,-7.741672,6.896092,-2.417953,6.536293,-8.910747,-3.157307,4.210261,-0.824267,6.489603,-4.614609,5.006185,7.464426,-9.143368,-7.929063,-2.330940,-3.151261,1.851160,-8.783176,1.469921,7.126633,9.931853,-8.561216,4.978150,7.675845,-3.238418,5.394796,8.039045,7.898208,2.090569,-9.795981,7.254608,8.797537,-4.438903,3.882792,3.345184,-6.775956,-0.200221,0.789291,2.461909,-9.567806,-1.405105,7.309239,-9.069456,-5.833414,6.919778,4.870703,9.852488,3.699071,-4.877140,8.084860,4.480648,-7.634913,-0.136390,-7.180312,1.281861,-9.735324,-7.384558,7.025066,-1.603118,-4.100126,-4.496424,5.846144,-0.005870,-8.789684,5.801338,-6.097745,2.995611,-9.770586,8.625878,8.115620,3.122614,-5.485580,7.310344,-4.333008,0.700603,2.442852,1.524036,-3.356074,7.336851,-2.969383,-5.548697,-3.482465,-1.732340,-1.476416,5.926696,-6.592986,8.405910,-8.127416,-1.427073,-0.714452,8.379900,-8.613001,-4.860903,4.293449,4.189175,-7.881209,-4.092895,3.858831,5.952793,-0.991756,3.425100,7.608877,-5.634028,3.655727,2.854961,-6.180414,-0.555679,6.511301,2.166247,-8.984736,-8.791168,8.498869,3.809061,5.143087,-6.149654,5.114403,-8.104464,-4.676269,-8.606056,-3.698701,5.130182,1.407843,4.145064,8.732871,8.294094,7.913667,-1.278281,-1.674346,3.700047,5.023180,-8.075595,7.586576,1.707570,1.703326,2.860340,5.954627,-4.733478,-1.295893,6.225228,4.912693,-5.249807,4.570640,7.184576,-4.361598,7.888648,-5.106969,2.294992,1.938468,5.133591,-5.873844,-7.620132,9.380016,-9.278963,-4.864217,6.331316,-6.883165,-3.535148,5.733201,-1.233131,-1.975708,9.430779,4.151613,-2.674735,5.304617,6.665519,-7.057982,-4.522768,-1.936111,-0.018308,-1.071883,-1.180932,4.990747,-8.160995,-6.076319,-0.267750,9.130111,7.629576,-7.188618,5.367444,0.421618,-8.334171,-6.576350,-2.597399,8.244511,5.241520,-6.214016,9.565472,-0.895416,-7.780821,-7.374234,7.838504,-7.192617,-8.363794,-3.927229,2.567063,-2.025253,9.390098,-2.340313,6.768562,-2.556065,3.339584,6.860210,-7.016772,0.150617,-1.778240,-6.689637,5.426483,3.576408,7.668622,2.528387,2.649270,-7.575675,-9.361867,-8.563570,3.471339,-3.943216,-1.389773,5.856172,1.939456,5.256573,-0.523606,5.300902,0.559890,0.264539,-2.851380,5.339426,-1.945972,-7.896526,-3.620006,-2.246663,-7.558507,-0.255768,-2.670196,2.781341,-6.600071,-5.192572,-4.719552,-0.301637,-2.331363,4.563573,-9.989840,-4.136039,-6.320828,5.146010,-9.951699,-4.455945,-1.249793,8.159289,-1.425661,-8.818369,2.136638,3.376033,-7.013381,0.126583,1.556332,5.990481,9.654803,-2.644081,3.042599,-6.544769,-8.279854,-4.626980,-6.462935,3.885119,-6.400374,7.266707,-3.648983,-2.868426,8.987387,8.178844,-3.282520,-2.460618,3.677405,1.919267,4.749873,-2.160284,9.480782,-4.201464,-6.200175,-0.734305,-5.880477,-1.397627,9.873032,7.774633,2.604924,6.720051,-7.479833,1.233196,8.509930,-3.126599,5.001752,-8.006402,3.716200,-5.918495,-4.358992,-6.182118,-5.263070,-0.882449,4.363923,-7.764269,-2.034130,-9.660778,-1.516570,-3.887077,6.588406,-5.652254], dtype = "float32")#candidate|1769|(490,)|const|float32
call_1767 = relay.TupleGetItem(func_1271_call(relay.reshape(var_1768.astype('int16'), [11, 13, 5]), relay.reshape(const_1769.astype('float32'), [7, 70]), ), 2)
call_1770 = relay.TupleGetItem(func_1274_call(relay.reshape(var_1768.astype('int16'), [11, 13, 5]), relay.reshape(const_1769.astype('float32'), [7, 70]), ), 2)
var_1782 = relay.var("var_1782", dtype = "int16", shape = (715,))#candidate|1782|(715,)|var|int16
bop_1783 = relay.greater_equal(var_1768.astype('bool'), relay.reshape(var_1782.astype('bool'), relay.shape_of(var_1768))) # shape=(715,)
bop_1788 = relay.floor_mod(uop_1756.astype('float64'), relay.reshape(var_1755.astype('float64'), relay.shape_of(uop_1756))) # shape=(6, 11, 9)
bop_1797 = relay.greater_equal(uop_1756.astype('bool'), relay.reshape(var_1755.astype('bool'), relay.shape_of(uop_1756))) # shape=(6, 11, 9)
output = relay.Tuple([call_1767,const_1769,bop_1783,bop_1788,bop_1797,])
output2 = relay.Tuple([call_1770,const_1769,bop_1783,bop_1788,bop_1797,])
func_1807 = relay.Function([var_1755,var_1768,var_1782,], output)
mod['func_1807'] = func_1807
mod = relay.transform.InferType()(mod)
var_1808 = relay.var("var_1808", dtype = "float64", shape = (6, 11, 9))#candidate|1808|(6, 11, 9)|var|float64
var_1809 = relay.var("var_1809", dtype = "int16", shape = (715,))#candidate|1809|(715,)|var|int16
var_1810 = relay.var("var_1810", dtype = "int16", shape = (715,))#candidate|1810|(715,)|var|int16
output = func_1807(var_1808,var_1809,var_1810,)
func_1811 = relay.Function([var_1808,var_1809,var_1810,], output)
mutated_mod['func_1811'] = func_1811
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1877 = relay.var("var_1877", dtype = "bool", shape = (16, 14, 11))#candidate|1877|(16, 14, 11)|var|bool
const_1878 = relay.const([[[True,True,True,False,False,False,False,False,True,True,True],[True,False,True,True,False,True,True,True,False,False,True],[False,True,True,True,True,False,True,False,False,False,True],[False,False,True,False,False,True,True,True,True,False,True],[False,True,False,False,True,True,False,True,False,False,False],[False,True,True,False,False,True,True,False,True,True,False],[False,True,True,False,False,False,True,False,False,True,False],[False,True,True,True,True,False,True,True,False,True,False],[False,False,False,True,True,False,False,False,True,True,True],[False,True,True,False,False,True,False,True,True,False,True],[False,True,False,False,True,False,True,False,False,True,False],[True,False,True,True,True,True,False,False,False,False,True],[True,True,True,True,True,False,False,False,True,True,True],[False,True,False,False,False,True,False,True,True,True,False]],[[True,True,True,False,True,True,True,False,False,False,True],[True,True,False,True,False,False,True,True,False,True,False],[False,True,True,True,True,False,True,True,False,False,False],[True,False,True,False,True,True,False,False,False,True,True],[True,True,True,True,False,False,True,True,True,False,False],[False,True,True,False,False,False,True,False,False,False,True],[False,True,False,True,True,False,False,True,False,True,False],[True,False,False,False,False,True,True,False,True,True,True],[False,True,False,True,False,False,True,True,True,True,False],[False,True,True,False,True,False,False,False,False,False,False],[False,False,False,True,True,False,False,False,False,True,True],[False,False,False,False,True,True,False,True,True,False,False],[False,False,True,True,True,True,True,True,True,False,True],[False,True,False,False,False,False,False,True,True,False,True]],[[True,True,False,False,True,True,True,True,True,False,True],[False,True,False,True,False,True,True,False,False,True,False],[False,True,False,False,False,True,False,False,False,True,True],[False,False,False,False,True,True,True,True,True,False,False],[True,True,True,True,False,True,True,True,True,False,True],[True,False,True,False,False,True,False,False,True,True,False],[True,True,True,True,False,True,False,False,True,True,False],[False,False,False,False,False,False,True,False,True,True,False],[False,True,True,True,False,True,False,True,True,False,False],[False,True,False,True,True,True,True,False,True,True,True],[True,True,True,True,True,True,False,False,True,False,True],[False,False,True,True,False,False,False,False,False,True,True],[True,False,False,False,True,True,True,True,False,False,False],[True,False,True,False,False,True,True,True,True,False,True]],[[False,True,True,True,False,False,True,True,True,False,True],[False,False,True,True,True,False,True,False,False,False,False],[False,False,False,True,True,True,False,True,False,True,True],[False,False,True,False,True,False,True,False,True,True,False],[False,False,False,False,True,False,True,True,False,True,True],[False,False,True,False,True,False,False,False,True,False,False],[False,False,True,False,False,True,False,True,False,False,False],[False,True,True,False,False,True,False,True,False,False,True],[True,False,False,False,True,False,True,True,False,False,False],[False,False,False,True,False,True,True,True,True,True,False],[True,True,False,False,True,True,False,False,False,False,False],[True,False,True,True,True,True,False,True,True,False,False],[True,True,False,False,True,True,False,False,True,True,False],[True,True,True,False,True,True,True,True,False,False,True]],[[True,True,True,False,True,False,True,True,False,False,True],[True,True,False,False,True,False,False,False,False,True,True],[False,False,False,True,True,False,True,True,True,True,False],[False,True,False,True,True,True,True,True,False,False,False],[False,True,True,True,True,True,True,False,False,True,False],[True,True,True,True,False,False,False,True,True,True,True],[True,False,False,False,True,True,True,False,False,True,True],[True,False,False,True,False,False,True,True,True,False,False],[False,True,True,True,False,False,False,True,True,True,True],[True,True,False,True,False,False,True,False,True,False,False],[True,True,False,False,True,False,True,True,False,True,True],[True,False,True,False,False,False,True,True,True,True,True],[True,False,True,False,True,True,True,True,False,True,True],[False,True,False,False,False,True,True,True,False,False,False]],[[True,False,False,True,False,False,False,True,True,False,True],[False,False,False,False,True,True,False,False,False,False,True],[False,True,True,False,False,True,False,False,True,False,True],[True,True,True,True,False,False,False,False,True,True,False],[True,True,True,False,True,False,True,True,True,True,False],[True,True,False,False,False,True,True,False,False,False,True],[True,False,True,True,False,True,False,True,True,True,False],[True,True,True,True,False,True,False,False,True,True,True],[False,True,True,True,False,True,True,True,True,False,True],[False,True,True,False,True,True,True,False,True,False,True],[True,True,False,False,False,False,True,True,True,True,True],[True,False,True,False,True,False,True,True,True,False,False],[True,False,True,False,True,True,True,False,True,False,True],[True,False,True,True,False,True,False,True,False,True,False]],[[True,False,True,False,True,True,True,True,True,False,True],[True,False,True,False,False,True,True,False,False,False,True],[False,True,True,True,False,False,True,True,False,False,True],[False,False,True,True,False,False,False,False,False,True,True],[True,False,True,False,True,True,False,False,False,False,True],[True,True,True,False,False,True,False,True,False,False,True],[True,True,True,False,False,False,False,True,True,True,True],[False,True,True,True,True,True,False,False,False,True,True],[False,True,False,True,False,True,True,False,False,True,False],[False,True,False,False,True,True,True,False,True,True,True],[False,False,False,True,False,False,True,False,False,True,True],[False,False,True,True,False,False,True,True,False,True,False],[False,True,True,True,False,True,False,True,False,False,False],[False,True,False,True,True,False,True,False,False,True,True]],[[True,False,True,True,True,False,True,True,False,True,False],[True,True,True,False,True,False,False,False,False,False,True],[True,True,False,True,False,True,True,True,False,True,True],[True,False,True,True,False,False,True,True,False,False,False],[True,False,False,False,False,False,False,False,True,True,False],[False,True,False,True,False,False,True,True,True,False,False],[False,True,False,False,False,True,True,False,False,False,False],[False,False,False,False,True,False,True,False,False,True,True],[True,False,False,True,True,True,False,True,True,True,False],[True,True,False,True,False,False,True,True,False,True,True],[False,True,False,True,False,True,True,False,False,False,False],[False,True,False,False,False,True,True,True,False,True,False],[False,False,True,True,True,False,True,False,True,False,True],[False,True,True,True,False,True,True,True,False,False,False]],[[False,False,False,True,True,True,True,False,False,False,False],[True,True,True,True,False,True,False,False,False,False,True],[False,True,False,True,True,True,True,True,True,True,True],[False,True,False,True,False,True,True,False,True,False,True],[True,True,False,False,False,False,True,False,False,True,False],[False,False,True,True,False,False,False,True,True,False,False],[True,False,True,False,True,True,False,False,True,True,True],[True,True,True,True,False,False,True,True,False,True,False],[True,False,False,True,True,True,False,True,False,True,True],[True,False,True,False,False,True,True,True,False,False,False],[False,False,True,False,True,False,False,True,False,True,True],[False,False,False,False,False,False,False,True,True,True,True],[False,True,True,True,True,False,False,True,True,False,True],[False,False,True,False,False,False,True,True,True,True,True]],[[False,True,True,False,True,False,True,False,False,False,False],[True,True,True,False,True,False,True,True,False,True,True],[True,True,True,True,False,False,False,False,True,False,True],[False,False,True,True,False,True,True,False,True,False,True],[False,False,True,True,True,False,True,False,False,False,False],[True,True,False,False,True,False,True,False,False,False,False],[True,True,False,False,False,False,False,False,False,False,True],[True,True,False,True,False,True,True,False,True,True,True],[True,True,True,False,False,True,False,False,True,True,True],[False,True,True,False,True,False,False,False,True,True,True],[True,True,False,False,False,False,True,True,False,True,False],[True,True,True,False,True,True,True,False,True,True,True],[False,False,True,False,False,True,True,False,False,True,True],[False,True,True,True,True,True,True,False,True,False,True]],[[False,False,False,False,True,False,True,True,True,True,True],[False,False,True,True,True,True,False,False,False,False,False],[False,True,True,True,False,True,False,False,False,True,False],[False,True,False,False,False,True,True,True,False,False,True],[True,True,True,True,True,True,True,False,True,True,True],[False,False,False,True,True,False,True,False,True,True,True],[True,True,True,False,True,False,False,True,False,True,False],[True,False,False,False,False,False,False,True,True,False,False],[True,False,True,False,True,True,True,True,False,False,False],[True,False,True,True,False,False,True,True,True,False,False],[True,True,False,True,True,True,False,True,True,False,True],[False,False,True,True,True,False,True,True,False,False,True],[False,False,True,False,True,False,True,False,False,False,True],[False,True,False,False,False,True,True,False,True,False,False]],[[False,True,True,False,True,False,False,True,True,False,True],[False,True,True,False,False,True,True,True,False,True,False],[False,True,False,True,True,False,False,True,False,False,False],[True,False,True,True,True,True,False,True,False,False,False],[True,True,True,False,False,False,False,True,False,False,True],[True,False,False,True,False,True,False,True,True,True,True],[True,True,False,False,True,False,False,False,False,False,True],[True,False,True,True,True,False,False,True,True,True,True],[True,False,False,False,False,True,False,False,False,True,True],[True,True,False,True,True,False,True,True,True,True,False],[False,False,True,True,False,False,False,True,False,False,False],[False,False,False,True,False,False,True,True,True,False,False],[False,True,False,False,True,True,False,False,True,False,False],[False,True,True,True,False,False,True,False,False,True,False]],[[True,False,True,True,True,False,True,False,True,True,True],[True,True,False,False,True,False,False,False,True,False,True],[False,True,True,False,False,True,True,True,False,False,True],[True,True,True,True,False,True,False,True,False,True,True],[True,False,False,True,False,False,False,False,False,False,False],[True,True,False,True,False,False,True,False,True,False,True],[False,True,False,True,False,True,False,True,False,True,True],[True,False,True,True,True,False,True,True,False,True,False],[False,False,False,False,True,False,False,True,False,False,False],[False,False,False,True,False,False,False,True,True,True,True],[True,False,False,True,False,False,True,True,False,True,True],[True,False,False,True,False,True,True,False,True,True,False],[False,True,False,False,True,True,True,False,True,False,False],[True,True,False,True,False,True,False,False,False,True,False]],[[False,False,False,True,False,False,True,True,True,True,False],[True,True,True,True,False,True,False,True,False,True,False],[False,True,True,False,True,True,False,False,True,True,False],[True,False,False,True,True,False,False,False,False,False,True],[False,True,False,True,True,True,True,False,True,False,True],[False,False,False,True,False,False,False,True,True,True,False],[True,True,True,True,True,False,False,True,True,False,False],[True,True,True,False,True,False,False,True,True,False,True],[False,False,True,False,False,True,True,False,True,True,True],[False,False,False,False,False,False,False,False,False,True,False],[False,False,True,False,False,False,True,False,True,True,False],[False,False,True,True,True,True,False,False,False,True,True],[False,True,True,False,True,False,True,True,False,True,True],[True,True,True,True,False,True,False,False,False,False,False]],[[True,False,True,False,False,False,False,True,True,False,True],[False,True,False,False,False,True,False,True,False,True,False],[True,False,False,True,False,False,True,True,False,False,True],[False,False,True,False,False,True,True,False,False,True,True],[False,False,True,False,False,False,False,False,False,False,False],[True,True,True,True,False,False,False,False,True,False,False],[False,False,False,True,True,False,True,False,False,False,False],[True,False,True,False,False,True,False,False,True,True,True],[False,True,True,False,True,True,True,True,True,False,True],[True,True,False,False,True,False,False,True,True,True,True],[False,True,True,True,False,False,False,True,True,True,False],[True,True,True,False,True,False,False,True,True,True,False],[True,True,True,False,True,False,True,True,True,True,False],[True,False,False,True,False,False,False,True,False,True,True]],[[False,False,False,False,False,True,False,True,True,True,True],[True,True,False,True,False,True,True,True,False,False,True],[False,True,False,False,True,True,True,True,False,True,True],[False,True,True,True,True,False,True,True,True,False,False],[False,True,True,True,False,False,True,False,False,False,True],[False,False,True,True,True,False,False,False,True,False,False],[False,False,True,False,True,False,False,True,True,False,False],[False,True,True,False,True,True,False,True,True,False,True],[False,False,True,False,False,True,True,False,True,True,False],[True,True,True,True,True,False,False,True,True,False,True],[False,True,False,True,True,True,False,False,False,False,False],[True,False,False,True,True,False,False,False,True,True,False],[False,True,True,True,True,True,False,False,False,False,True],[False,True,False,True,False,False,True,False,False,True,True]]], dtype = "bool")#candidate|1878|(16, 14, 11)|const|bool
bop_1879 = relay.logical_or(var_1877.astype('bool'), relay.reshape(const_1878.astype('bool'), relay.shape_of(var_1877))) # shape=(16, 14, 11)
func_1271_call = mod.get_global_var('func_1271')
func_1274_call = mutated_mod.get_global_var('func_1274')
var_1885 = relay.var("var_1885", dtype = "int16", shape = (715,))#candidate|1885|(715,)|var|int16
var_1886 = relay.var("var_1886", dtype = "float32", shape = (7, 70))#candidate|1886|(7, 70)|var|float32
call_1884 = relay.TupleGetItem(func_1271_call(relay.reshape(var_1885.astype('int16'), [11, 13, 5]), relay.reshape(var_1886.astype('float32'), [7, 70]), ), 0)
call_1887 = relay.TupleGetItem(func_1274_call(relay.reshape(var_1885.astype('int16'), [11, 13, 5]), relay.reshape(var_1886.astype('float32'), [7, 70]), ), 0)
uop_1893 = relay.tan(call_1884.astype('float32')) # shape=(11, 13, 5)
uop_1895 = relay.tan(call_1887.astype('float32')) # shape=(11, 13, 5)
func_901_call = mod.get_global_var('func_901')
func_904_call = mutated_mod.get_global_var('func_904')
call_1905 = relay.TupleGetItem(func_901_call(relay.reshape(var_1886.astype('float32'), [7, 14, 5])), 2)
call_1906 = relay.TupleGetItem(func_904_call(relay.reshape(var_1886.astype('float32'), [7, 14, 5])), 2)
output = relay.Tuple([bop_1879,var_1885,var_1886,uop_1893,call_1905,])
output2 = relay.Tuple([bop_1879,var_1885,var_1886,uop_1895,call_1906,])
func_1912 = relay.Function([var_1877,var_1885,var_1886,], output)
mod['func_1912'] = func_1912
mod = relay.transform.InferType()(mod)
mutated_mod['func_1912'] = func_1912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1912_call = mutated_mod.get_global_var('func_1912')
var_1914 = relay.var("var_1914", dtype = "bool", shape = (16, 14, 11))#candidate|1914|(16, 14, 11)|var|bool
var_1915 = relay.var("var_1915", dtype = "int16", shape = (715,))#candidate|1915|(715,)|var|int16
var_1916 = relay.var("var_1916", dtype = "float32", shape = (7, 70))#candidate|1916|(7, 70)|var|float32
call_1913 = func_1912_call(var_1914,var_1915,var_1916,)
output = call_1913
func_1917 = relay.Function([var_1914,var_1915,var_1916,], output)
mutated_mod['func_1917'] = func_1917
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1947 = relay.var("var_1947", dtype = "float64", shape = (2, 12, 1))#candidate|1947|(2, 12, 1)|var|float64
const_1948 = relay.const([[[1.739740,-7.834952,-0.746684,-9.443038,-1.465201,5.660363,1.315521,3.949075,8.278000,9.079192,4.150391,-1.561580,0.061921,-3.703388,-2.497083,5.416579],[-0.542791,6.154786,-1.701897,-7.841546,-4.431912,-8.525050,2.770432,-0.510907,4.240179,-0.059829,4.243348,1.187289,8.982856,-8.201037,-9.185336,0.389456],[-6.725858,8.739371,-7.533114,7.571966,-6.743006,-6.305324,-8.802054,-8.589446,6.723303,-4.389446,8.230520,9.690924,0.622416,0.324153,-5.166820,-9.000176],[8.877986,9.480498,9.623180,-4.103222,-4.732259,4.418633,-6.455135,0.979902,-0.520392,-3.669930,7.868237,-7.409896,-7.932531,-1.214417,-9.238510,8.644242],[5.082521,8.494400,7.080862,-7.320420,5.928908,-0.914775,7.679200,3.385624,7.324915,4.086655,0.186565,-6.863341,6.004555,-5.313741,3.715502,-6.776746],[-4.352161,-9.209399,3.071458,-5.786344,-9.453337,-4.224902,-8.038417,-4.378032,-1.164532,-7.217803,0.943295,7.771745,-4.750258,4.623535,9.053514,-6.871106],[2.314773,6.529718,7.292682,5.879251,0.554360,1.760766,4.999345,3.378052,6.995431,-4.581375,-4.352428,-1.442811,8.307318,4.029377,1.470994,4.664986],[-3.093184,3.630756,-2.829851,1.883027,8.876072,2.989475,-6.480468,-1.388036,-8.188252,1.331728,-3.707108,3.074550,8.492649,-7.736979,-5.829539,8.638852],[-8.754867,-2.860245,-6.497899,-0.321353,-7.834589,-0.333338,2.165145,0.835733,5.790539,-0.149631,-0.335749,-0.214277,-9.139380,-4.358501,-4.697956,3.202360],[-4.789736,0.125292,-1.592398,-3.176359,1.780213,4.715289,1.783438,-8.115851,9.824886,-0.295301,6.735247,9.684400,0.793490,-1.172403,-3.265573,4.361786],[-9.638006,3.379725,-5.139291,9.683520,-9.009104,-3.748775,8.448521,4.363389,-9.776602,-9.387156,-3.398482,5.589572,2.066731,7.849872,-7.423738,7.955741],[2.856596,6.427748,-0.860001,9.348356,6.317676,0.501576,-0.059283,-2.410896,-1.184258,-7.525608,-3.272863,1.886164,-4.188421,8.633793,7.196624,2.085673]],[[8.892127,-2.649226,2.331208,0.839463,-4.902317,-3.146105,5.665805,3.053531,0.623412,-5.180214,8.436906,-5.368628,-6.643383,-8.861342,-4.024760,-2.532742],[-1.440837,9.745578,-1.792179,4.634733,5.053053,8.451419,-0.746882,3.505833,8.332738,6.109138,3.537090,-6.720060,-4.042779,8.604184,-4.936493,-1.679328],[-5.103027,-8.424216,-9.805749,1.751978,8.472136,-8.382692,0.477372,-6.611191,6.110348,-2.689419,1.992525,-2.993090,8.218757,-2.509326,1.495960,9.013154],[-7.144324,-4.478052,6.993987,2.740302,8.429598,-8.539559,4.806037,4.900909,-3.115816,1.804270,-3.881440,5.887811,8.488765,4.359475,4.437070,-4.384944],[-4.979486,-1.029357,8.990417,5.868804,-6.878107,1.483054,-9.819035,-2.363188,-0.856573,-1.456825,-1.675523,2.506979,0.304193,-2.625297,7.999019,-4.939948],[-3.497397,6.531810,-6.518809,-7.037529,-8.251726,-8.389124,-8.444516,9.964110,-9.249907,9.346816,-5.957473,-0.741214,0.541628,-8.930641,-2.092817,-4.369399],[9.209996,-0.975671,-4.516742,-6.361505,-9.239776,7.093505,-5.504815,-7.667702,-7.191086,3.242732,-5.490489,-1.082285,-6.886712,-9.715714,-2.849058,7.616794],[-3.394867,0.654105,-5.510409,4.138874,9.361894,0.410752,8.535109,-5.747978,1.069308,-0.155239,-2.491709,9.181033,3.598864,7.508697,0.845765,-2.963367],[-4.358944,-5.740797,0.536398,5.364703,5.925205,-4.093436,-6.298230,-1.489337,-9.199342,6.850755,-5.896445,-7.579263,-0.181054,2.205956,-4.939205,8.990164],[6.584442,-0.445765,5.500051,5.737941,-9.808350,-7.598426,6.598001,2.957146,9.782129,-6.624807,3.405515,-3.075020,-5.310960,0.296940,7.069211,0.349498],[0.503205,0.641179,9.681954,1.744393,0.149841,7.551785,-3.283509,-6.234538,6.976556,6.870266,4.276242,0.459566,1.108057,6.909805,2.149947,-1.029243],[-9.564011,-7.709934,-2.583743,5.346140,1.991602,-5.930965,6.217705,0.721480,5.713313,-7.900866,-2.487813,-8.582950,-4.844486,-9.073584,-0.741667,-8.299606]]], dtype = "float64")#candidate|1948|(2, 12, 16)|const|float64
bop_1949 = relay.floor_divide(var_1947.astype('float64'), const_1948.astype('float64')) # shape=(2, 12, 16)
uop_1956 = relay.sigmoid(var_1947.astype('float32')) # shape=(2, 12, 1)
uop_1967 = relay.atanh(uop_1956.astype('float64')) # shape=(2, 12, 1)
var_1970 = relay.var("var_1970", dtype = "float32", shape = (2, 12, 6))#candidate|1970|(2, 12, 6)|var|float32
bop_1971 = relay.greater(uop_1956.astype('bool'), var_1970.astype('bool')) # shape=(2, 12, 6)
uop_1980 = relay.acos(uop_1967.astype('float32')) # shape=(2, 12, 1)
output = relay.Tuple([bop_1949,bop_1971,uop_1980,])
output2 = relay.Tuple([bop_1949,bop_1971,uop_1980,])
func_1982 = relay.Function([var_1947,var_1970,], output)
mod['func_1982'] = func_1982
mod = relay.transform.InferType()(mod)
var_1983 = relay.var("var_1983", dtype = "float64", shape = (2, 12, 1))#candidate|1983|(2, 12, 1)|var|float64
var_1984 = relay.var("var_1984", dtype = "float32", shape = (2, 12, 6))#candidate|1984|(2, 12, 6)|var|float32
output = func_1982(var_1983,var_1984,)
func_1985 = relay.Function([var_1983,var_1984,], output)
mutated_mod['func_1985'] = func_1985
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2017 = relay.var("var_2017", dtype = "uint32", shape = (10, 5, 11))#candidate|2017|(10, 5, 11)|var|uint32
var_2018 = relay.var("var_2018", dtype = "uint32", shape = (10, 5, 11))#candidate|2018|(10, 5, 11)|var|uint32
bop_2019 = relay.maximum(var_2017.astype('uint32'), relay.reshape(var_2018.astype('uint32'), relay.shape_of(var_2017))) # shape=(10, 5, 11)
output = relay.Tuple([bop_2019,])
output2 = relay.Tuple([bop_2019,])
func_2027 = relay.Function([var_2017,var_2018,], output)
mod['func_2027'] = func_2027
mod = relay.transform.InferType()(mod)
mutated_mod['func_2027'] = func_2027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2027_call = mutated_mod.get_global_var('func_2027')
var_2029 = relay.var("var_2029", dtype = "uint32", shape = (10, 5, 11))#candidate|2029|(10, 5, 11)|var|uint32
var_2030 = relay.var("var_2030", dtype = "uint32", shape = (10, 5, 11))#candidate|2030|(10, 5, 11)|var|uint32
call_2028 = func_2027_call(var_2029,var_2030,)
output = call_2028
func_2031 = relay.Function([var_2029,var_2030,], output)
mutated_mod['func_2031'] = func_2031
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2631 = relay.var("var_2631", dtype = "int16", shape = ())#candidate|2631|()|var|int16
var_2632 = relay.var("var_2632", dtype = "int16", shape = (16, 8, 5))#candidate|2632|(16, 8, 5)|var|int16
bop_2633 = relay.maximum(var_2631.astype('int16'), var_2632.astype('int16')) # shape=(16, 8, 5)
bop_2640 = relay.floor_divide(var_2632.astype('float32'), relay.reshape(bop_2633.astype('float32'), relay.shape_of(var_2632))) # shape=(16, 8, 5)
output = bop_2640
output2 = bop_2640
func_2649 = relay.Function([var_2631,var_2632,], output)
mod['func_2649'] = func_2649
mod = relay.transform.InferType()(mod)
mutated_mod['func_2649'] = func_2649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2649_call = mutated_mod.get_global_var('func_2649')
var_2651 = relay.var("var_2651", dtype = "int16", shape = ())#candidate|2651|()|var|int16
var_2652 = relay.var("var_2652", dtype = "int16", shape = (16, 8, 5))#candidate|2652|(16, 8, 5)|var|int16
call_2650 = func_2649_call(var_2651,var_2652,)
output = call_2650
func_2653 = relay.Function([var_2651,var_2652,], output)
mutated_mod['func_2653'] = func_2653
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2722 = relay.var("var_2722", dtype = "uint16", shape = (6, 16, 15))#candidate|2722|(6, 16, 15)|var|uint16
var_2723 = relay.var("var_2723", dtype = "uint16", shape = (6, 16, 15))#candidate|2723|(6, 16, 15)|var|uint16
bop_2724 = relay.bitwise_xor(var_2722.astype('uint16'), relay.reshape(var_2723.astype('uint16'), relay.shape_of(var_2722))) # shape=(6, 16, 15)
output = bop_2724
output2 = bop_2724
func_2729 = relay.Function([var_2722,var_2723,], output)
mod['func_2729'] = func_2729
mod = relay.transform.InferType()(mod)
mutated_mod['func_2729'] = func_2729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2729_call = mutated_mod.get_global_var('func_2729')
var_2731 = relay.var("var_2731", dtype = "uint16", shape = (6, 16, 15))#candidate|2731|(6, 16, 15)|var|uint16
var_2732 = relay.var("var_2732", dtype = "uint16", shape = (6, 16, 15))#candidate|2732|(6, 16, 15)|var|uint16
call_2730 = func_2729_call(var_2731,var_2732,)
output = call_2730
func_2733 = relay.Function([var_2731,var_2732,], output)
mutated_mod['func_2733'] = func_2733
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2769 = relay.var("var_2769", dtype = "int64", shape = (5, 13, 10))#candidate|2769|(5, 13, 10)|var|int64
var_2770 = relay.var("var_2770", dtype = "int64", shape = (5, 13, 10))#candidate|2770|(5, 13, 10)|var|int64
bop_2771 = relay.greater(var_2769.astype('bool'), relay.reshape(var_2770.astype('bool'), relay.shape_of(var_2769))) # shape=(5, 13, 10)
func_1161_call = mod.get_global_var('func_1161')
func_1165_call = mutated_mod.get_global_var('func_1165')
const_2775 = relay.const([3.300644,-0.296998,2.301654,-3.230718,8.173639,-4.665408,4.869787,-7.731998,-2.778215,0.069354,-8.015279,7.910972,-6.771549,-6.710490,-3.232526,-2.509368,8.026326,-3.321124,-0.386913,-1.768586,-1.447470,1.145628,-5.994413,-7.556207,-9.728857,8.203341,-5.075860,1.435185,-6.954660,-2.329377,8.537882,-1.838041,7.760373,-5.088286,-1.708918,-8.519926,3.249441,-5.653123,8.643726,1.609134,-8.467879,9.980372,1.963646,2.182336,-7.638922,2.658988,4.615174,6.373505,-4.752200,-8.675210,-0.918391,-3.647603,-8.432297,0.321039,7.753439,-8.388067,-8.369881,-2.768551,-8.405415,6.423028,1.002543,6.133911,8.522121,-0.102268,-8.459560,-2.656114,2.303575,-3.814652,6.521221,9.848829,-1.936471,-9.006505,5.754457,7.690226,6.034796,8.727044,5.302063,4.672238,5.860060,-0.669886,-8.179929,-2.966903,9.771406,-1.460793,1.064071,2.585481,2.225800,-4.796217,-5.743448,-3.550291,-2.177740,6.343447,-2.742430,-8.624367,-1.748740,9.845638,8.833045,-6.624391,1.766437,7.718224,-6.950277,-6.078608,9.599282,3.132839,-2.064181,1.276782,2.475842,-2.790257,2.052046,1.935291,-8.059548,-3.579775,-6.342729,-0.351448,2.989082,-9.835296,8.358520,7.425782,2.724368,-5.161339,7.383281,4.759941,-3.239543,-3.779477,-5.671711,7.442912,6.216101,3.220718,-0.219884,1.066684,9.182528,-6.010997,-2.889623,4.452962,-7.619346,-0.141807,5.510562,-2.855048,8.843643,4.920102,-6.510186,-2.648179,7.061668,2.774604,-2.507019,6.408728,9.971824,-6.941152,-0.295285,8.579601,3.575042,-5.296979,3.556028,7.634977,0.945361,0.302002,9.832600,5.742639,7.050355,8.947141,7.297543,5.445336,-6.924175,0.863440,-0.884010,5.225891,-4.471152,-3.993762,-5.263845,-4.283047,8.891492,9.892294,-8.593091,0.186115,1.023100,0.401716,4.531188,5.855084,-3.374061,-4.495369,-4.825845,-3.260937,9.759887,-0.844815,-5.925369,-4.993244,-1.667724,4.013986,-0.209792,-2.984031,1.840926,1.974984,5.712620,-9.585470,2.862028,-4.355399,-9.069243,-7.746690,0.097219,8.331035,5.410376,0.767290,5.872387,-0.081370,9.803007,8.725855,-4.210596,-8.377224,-6.082812,1.826199,8.337287,5.438028,0.609665,-9.805894,-0.034596,-1.390159,4.624793,-7.349614,-9.624824,-1.176555,8.754522,-3.738317,-8.361982,3.235961,2.390441,-3.221537,-5.789679,-7.374798,0.367879,4.188852,-0.091184,-5.200808,3.074948,-3.744344,1.621696,-8.647000,0.813978,8.510976,1.290739,-9.643932,8.774676,1.258545,-3.468105,1.905267,-9.620716,6.512458,4.690963,-8.504263,-5.409329,-2.217257,-6.073365,7.547651,-4.516328,5.681192,3.756364,-3.883584,9.525283,2.129433,-9.962736,9.038717,3.451723,9.633924,-4.146018,6.066096,7.236622,2.942952,-4.792307,4.041463,0.877760,-0.172758,-0.216742,6.125042,2.783536,2.820939,-4.321304,-6.326716,0.817434,-1.931186,-7.420869,4.481436,7.145326,9.549177,8.657514,-5.828795,2.008006,2.902849,-8.100604,9.628735,4.082321,1.056624,-2.644364,3.402935,8.119682,9.947524,-9.978726,6.009284,8.349122,3.342065,0.583024,6.903143,3.144895,-6.634878,-6.663269,9.267654,-3.094007,1.153453,-0.643568,3.624414,-5.906872,8.392804,5.632680,-9.811468,8.186050,0.724957,-1.268798,-1.965866,7.444532,4.279668,-3.502757,-6.514635,3.359127,4.243679,-9.316187,6.339692,-6.694205,7.795585,-8.651256,-0.903171,-2.182945,-9.038762,2.796330,-6.820411,-7.492605,-1.759472,-8.495627,7.715385,-2.519538,7.856276,6.566272,6.952758,-8.731613,8.440449,-7.181758,-2.923352,8.129578,2.168153,3.305063,-1.217808,8.136018,8.878136,7.672633,6.526175,7.276968,-4.594443,-8.534033,-1.254959,6.774381,0.119697,-4.417994,-1.714744,-3.599034,-2.251914,0.635600,7.709960,4.697023,-5.723440,-4.018914,-8.162937,-3.240686,-4.398181,-8.329024,4.077886,0.118183,0.614888,6.344472,8.820272,-7.065355,9.907512,-3.648879,-3.090971,0.059730,-1.234339,6.679501,-6.257489,-2.149855,-3.467239,9.719832,-3.832741,-6.689527,-4.957267,5.853894,8.226110,7.524625,3.331393,-2.525010,3.347743,-9.153821,0.385768,-2.299866,1.832670,-8.588842,9.789464,-4.997623,-5.436626,-2.939883,-2.809389,6.409940,5.684162,-1.449564,-1.656151,-5.242997,3.406870,-9.948548,-2.845316,-9.852743,7.168648,3.909162,-6.662128,-7.312364,-6.678070,-5.758286,-7.799450,0.301666,-6.865753,-4.002068,-4.271416,1.270111,1.757630,-5.697011,-9.506689,4.806491,9.849718,2.690112,-7.374433,8.435976,-2.737294,3.176045,3.003935,-4.690034,8.822982,-6.432097,2.708975,5.361384,9.505851,3.243585,-2.938285,4.752001,5.072705,2.666330,-4.889682,1.416339,-6.005855,2.667934,3.609371,-8.038709,-9.523642,-5.645076,-7.500996,-1.779743,0.565575,4.654702,3.799975,9.164162,1.665891,-0.345356,9.131743,-5.840596,8.288886,1.809093,1.711321,5.540268,4.521323,-1.815457,7.090712,6.485626,-4.170005,-1.103404,-2.315183,-3.396213,-5.342228,5.811805,-6.049011,-0.017988,-4.152619,-9.039373,5.523921,4.707369,4.685374,-7.293480,2.427077,7.085287,-9.738503,1.313981,-1.621251,0.802496,-8.042655,-1.880999,-8.405696,-1.082789,8.139589,9.560125,-2.919102,0.958452,-5.349641,-5.264795,4.797879,7.297562,4.958039,-7.912076,-8.849149,4.421448,1.846320,-2.221732,-4.155307,-2.408607,6.052929,-1.702694,-7.940474,-7.208517,7.390371,-8.767911,-0.625977,-0.985153,-3.026381,8.512188,-8.690690,-7.529971,7.442398,-9.174291,1.044538,0.550038,-1.914108,3.022917,4.869080,6.513638,-3.730700,4.422142,7.463118,8.876113,0.459042,-0.891272,0.941478,5.596909,6.401174,-7.979944,-5.270271,-1.049293,6.277077,6.639645,8.405981,2.397095,2.439671,-5.519321,-4.900330,-9.177898,7.677101,-8.877538,7.973605,6.588015,4.696467,-6.492384,3.531675,-2.283575,-5.534383,7.824425,-8.059035,5.983524,5.528391,-7.852095,1.901948,4.719330,4.915944,3.676274,8.734609,-9.267977,-5.669557,-9.645726,3.271769,-3.917149,8.640804,1.610071,-1.355988,0.622731,-0.976982,-8.317463,-4.511430,-5.878099,3.856071,8.993268,-3.623350,5.174400,-3.890137,-0.640408,-8.738597,3.058776,-3.180883,7.205757,5.649914,1.387391,-5.236953,-6.040761,5.421805,-1.109576,-4.807862,-3.723088,1.102350,-9.659306,8.455165,8.999261,6.182473,9.280223,2.147210,7.727785,5.615989,2.298620,-1.134410,3.382699,-9.025809,-4.674074,0.402489,-4.623614,-0.262279,-4.746446,2.875988,1.737462,-8.689791,8.337232,0.211399,-7.274475,4.722634,-6.008516,7.605684,0.904087,5.100643,1.019233,-3.864102,-8.409503,-0.328134,5.520571,-5.935443,-2.311869,7.529906,6.168268,-6.316182,-8.626944,8.580429,9.714780,-8.365421,-9.254895,-0.733699,-2.478519,0.585371,5.847338,3.659263,-7.809886,7.252166,-9.213316,-9.899876,6.711313,4.971953,-6.283760,-7.136786,-2.296612,-2.355182,5.954138,-7.990152,-3.633049,-1.752235,5.810042,-5.698297,6.508049,-2.243324,-5.139039,7.212757,-8.985504,5.248869,2.074749,-4.460180,-0.975347,9.742092,-7.778510,7.851257,8.757434,-3.883173,9.894589,-2.710991,4.924895,-5.277245,2.481678,8.706773,2.185139,-3.696130,1.645880,-8.439931,-1.664010,7.697140,5.561798,8.603023,-8.196686,7.990412,-2.577371,-9.833683,-0.248825,2.189260,3.753718,6.779056,-4.827458,2.382592,6.709802,7.811317,3.214087,-4.745205,-7.664768,-1.832904,2.176276,-5.260379,9.428557,0.373841,-1.740427,-9.924706,-0.753825,-2.855046,2.695174,-4.591245,9.796597,-3.023987,-3.993036,7.695341,-0.187124,1.628776,3.762530,0.548477,-2.101017,-3.219815,-6.958705,-6.030022,4.010430,6.637557,4.978825,6.004465,5.308593,3.898058,-3.927272,-4.718617,-8.533111,-3.071739,-5.680194,4.736704,1.810924,3.206750,-9.950715,-6.957880,-0.572929,-1.787459,0.061994,-1.254027,-5.123804,-1.175937,-6.534340,3.163398,-2.066823,-6.186454,-7.919166,6.452705,7.794391,5.517346,3.144844,0.459240,5.945431,6.721427,4.597621,8.644517,3.620306,-9.092928,0.001446,6.467376,-3.974648,-0.316330,8.341501,-5.877674,-6.793531,-3.900442,6.464061,3.134388,6.779320,4.322839,-2.888956,-2.793028,-0.819068,1.233743,7.242481,8.696919,-9.026167,-4.683871,1.915815,-4.415881,-3.062074,6.480106,8.470540,-8.402778,5.537020,9.928911,-5.906335,-8.621424,0.101374,-8.953218,-9.259300,-6.608547,3.637571,-8.743115,3.791984,-8.315438,0.848953,7.802476,-1.489718,6.078550,1.244563,6.149374,3.348911,-1.779002,8.361289,9.074353,-4.422178,-7.150341,-5.228031,-3.687368,-9.257106,0.716554,4.813400,-5.502382,-9.087550,1.143857,-9.667075,9.294823,-6.833351,-6.801907,3.199102,1.559341,3.531519,5.213344,-7.276519,5.820007,5.842112,-1.289099,8.353458,-6.964772,3.079981,6.516482,9.524566,5.066177,-1.484206,3.020585,2.183635,2.711289,8.746721,-4.773128,3.304840,-3.604649,-2.351149,2.639766,8.017419,5.046089,1.536789,-4.109032,2.969209,6.616832,-7.150411,5.071451,8.786814,-1.601914,-7.391213,7.320440,0.989516,-3.602816,-6.484711,3.225995,7.786574,-7.412004,-5.114821,0.978325,-3.311030,2.683833,-8.805192,-5.192271,-9.099514,-9.130812,9.271874,-4.861301,5.306412,-6.998370,-6.203030,4.036615,-3.443177,-9.292732,-5.900620,7.437442,-7.971514,3.746519,5.756584,2.083448,9.064158,-7.916415,9.023929,4.915299,5.869289,-8.508328,5.387115,-3.349621,-5.656644,-1.390395,-5.308325,3.189740,5.210457,6.044552,2.703521,-0.155547,-0.871852,8.008576,6.480748,-0.199668,7.805869,-4.630422,-8.920669,-4.136802,7.960995,-3.209129,-0.224508,6.227686,-8.187060,3.015084,5.295657,-2.505460,-2.039400,4.082476,-0.703972,1.712278,-3.515297,7.540145,-1.324317,9.433649,-0.369957,1.363005,-2.131702,-4.358422,-5.895232,-0.393234,7.316317,0.609830,-0.137578,0.382317,5.897504,-7.138258,-7.202000,-4.135459,-6.127964,8.722769,2.332659,0.748697,5.406013,1.753057,9.923167,6.154115,-3.994358,3.702826,6.041283,-3.386467,4.516285,-5.718607,-2.468110,-2.716180,1.552184,6.850198,-5.229534,-4.806655,7.136148,4.720184,2.951492,1.118769,-0.113645,-3.824662,-6.588553,-5.877312,-9.915005,3.553766,1.447853,7.119081,8.289544,-4.829702,2.865016,0.827024,-4.984005,-7.720899,0.934546,8.842952,-2.546652,0.117862,-2.799734,-2.477865,0.130950,2.316066,0.316916,4.116547,-3.476043,-4.561827,-1.384980,-0.356768,4.192822,-9.992443,-9.135880,-3.302409,2.309978,4.177966,5.950261,-3.115644,-0.695092,1.017518,-3.827269,-4.249726,-4.757254,1.349967,6.052683,6.112921,-8.928130,6.899380,-2.887090,0.333675,-6.408428,3.212563,-6.954880,-6.683437,-1.770025,-4.340075,-9.096298,5.010976,4.287570,6.190502,-3.872805,7.661422,-2.478626,4.316357,-9.567229,-5.758135,-3.469211,-3.786292,-8.485173,6.762599,1.797286,8.900272,-1.367022,-9.704308,0.312243,-6.874867,6.369133,-1.141237,2.593549,-0.699024,-8.786630,-4.528070,-2.710779,0.415732,7.873628,3.440331,-5.099860,-9.980065,1.153309,6.942738,-6.543440,-7.532800,0.764747,2.718465,0.035860,6.605096,-5.849502,-4.922272,-0.640863,3.355318,-1.207612,-4.821325,-9.477690,0.232535,-9.923092,-2.003536,2.976636,-8.378394,-5.274336,9.759607,5.561933,8.123763,-5.968003,-9.294788,-5.460724,-3.578098,0.024012,9.540450,4.655623,0.918797,7.135791,-4.898514,2.990488,-7.886687,-3.688396,6.881502,-8.126884,3.053894,-0.021235,8.095752,-6.516765,1.885119,7.125735,5.400904,9.253178,-6.169730,-7.733037,7.555793,9.751538,1.029354,2.902207,1.950766,-3.518311,-4.585220,-9.677714,4.301074,3.390630,-6.509859,3.243180,1.792787,9.904196,-2.520555,-7.047584,2.773985,9.160965,8.834627,7.068176,-7.066848,-2.693094,-8.975274,-2.498010,2.805715,-1.788298,-5.842969,0.957813,-3.098677,1.038414,-5.908398,8.665612,1.413416,2.891704,3.362154,4.150147,-5.764871,8.655241,3.837316,-7.424308,9.728627,-8.352344,-0.923681,-2.934892,-5.105857,8.179743,2.880925,-0.503548,0.468447,-8.987118,-1.686360,-7.850304,9.376433,5.619622,-2.644339,9.446757,-9.783133], dtype = "float32")#candidate|2775|(1170,)|const|float32
const_2776 = relay.const([True,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,False,False,False,False,True,False,False,False,False,False,True,False,True,False,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True,False,True,False,False,True,False,False,False,False,False,True,False,True,False,False,True,True,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,True,False,False,False,False,True,False,False,False,False,True,True,False,False,True,True,True,True,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,False,True,True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,False,True,True,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,False,True,False,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,True,False,True,True,False,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,True,False,False,False,False,True,False,True,False,True,True,False,False,True,False,True,False,False,False,False,True,True,True], dtype = "bool")#candidate|2776|(448,)|const|bool
call_2774 = relay.TupleGetItem(func_1161_call(relay.reshape(const_2775.astype('float32'), [13, 9, 10]), relay.reshape(const_2776.astype('bool'), [448,]), ), 3)
call_2777 = relay.TupleGetItem(func_1165_call(relay.reshape(const_2775.astype('float32'), [13, 9, 10]), relay.reshape(const_2776.astype('bool'), [448,]), ), 3)
output = relay.Tuple([bop_2771,call_2774,const_2775,const_2776,])
output2 = relay.Tuple([bop_2771,call_2777,const_2775,const_2776,])
func_2786 = relay.Function([var_2769,var_2770,], output)
mod['func_2786'] = func_2786
mod = relay.transform.InferType()(mod)
mutated_mod['func_2786'] = func_2786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2786_call = mutated_mod.get_global_var('func_2786')
var_2788 = relay.var("var_2788", dtype = "int64", shape = (5, 13, 10))#candidate|2788|(5, 13, 10)|var|int64
var_2789 = relay.var("var_2789", dtype = "int64", shape = (5, 13, 10))#candidate|2789|(5, 13, 10)|var|int64
call_2787 = func_2786_call(var_2788,var_2789,)
output = call_2787
func_2790 = relay.Function([var_2788,var_2789,], output)
mutated_mod['func_2790'] = func_2790
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2837 = relay.const([[[-2.864338],[-8.774173],[-7.134712],[3.096823],[6.803478],[7.748674],[9.667852],[8.167633],[-7.595235],[7.281220],[5.245122]],[[-7.426337],[-5.068964],[-8.654162],[0.612227],[6.875565],[5.743864],[-0.846115],[9.434899],[0.734981],[-2.217296],[1.469900]],[[-8.772306],[-7.217624],[-6.115243],[7.775217],[9.695255],[7.097012],[8.317475],[2.107803],[6.775172],[-9.148490],[-8.387903]],[[7.655941],[9.835030],[-4.597787],[8.785912],[2.863355],[-8.437671],[-8.856660],[9.689198],[-6.962571],[-7.377166],[-5.393245]],[[-7.464668],[-0.915722],[-2.811233],[-4.585904],[1.013698],[-7.712055],[-9.775438],[-5.387818],[-8.299682],[9.055972],[2.618523]],[[-5.495880],[1.123259],[0.109063],[-4.131645],[-7.119172],[6.402963],[9.989862],[5.224551],[-3.071241],[8.267864],[7.005463]],[[-5.974878],[3.181972],[5.312922],[1.102192],[-9.594076],[3.780614],[1.156800],[6.574213],[-1.086702],[-8.415003],[-1.736733]],[[6.307401],[7.747498],[-4.894852],[6.386795],[-8.655849],[9.830884],[-4.843060],[-3.934173],[7.200091],[0.360382],[-0.270961]]], dtype = "float32")#candidate|2837|(8, 11, 1)|const|float32
uop_2838 = relay.asinh(const_2837.astype('float32')) # shape=(8, 11, 1)
output = uop_2838
output2 = uop_2838
func_2845 = relay.Function([], output)
mod['func_2845'] = func_2845
mod = relay.transform.InferType()(mod)
mutated_mod['func_2845'] = func_2845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2845_call = mutated_mod.get_global_var('func_2845')
call_2846 = func_2845_call()
output = call_2846
func_2847 = relay.Function([], output)
mutated_mod['func_2847'] = func_2847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2845_call = mod.get_global_var('func_2845')
func_2847_call = mutated_mod.get_global_var('func_2847')
call_2868 = func_2845_call()
call_2869 = func_2845_call()
output = call_2868
output2 = call_2869
func_2873 = relay.Function([], output)
mod['func_2873'] = func_2873
mod = relay.transform.InferType()(mod)
mutated_mod['func_2873'] = func_2873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2873_call = mutated_mod.get_global_var('func_2873')
call_2874 = func_2873_call()
output = call_2874
func_2875 = relay.Function([], output)
mutated_mod['func_2875'] = func_2875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2845_call = mod.get_global_var('func_2845')
func_2847_call = mutated_mod.get_global_var('func_2847')
call_2891 = func_2845_call()
call_2892 = func_2845_call()
output = call_2891
output2 = call_2892
func_2894 = relay.Function([], output)
mod['func_2894'] = func_2894
mod = relay.transform.InferType()(mod)
output = func_2894()
func_2895 = relay.Function([], output)
mutated_mod['func_2895'] = func_2895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2873_call = mod.get_global_var('func_2873')
func_2875_call = mutated_mod.get_global_var('func_2875')
call_2917 = func_2873_call()
call_2918 = func_2873_call()
output = relay.Tuple([call_2917,])
output2 = relay.Tuple([call_2918,])
func_2923 = relay.Function([], output)
mod['func_2923'] = func_2923
mod = relay.transform.InferType()(mod)
output = func_2923()
func_2924 = relay.Function([], output)
mutated_mod['func_2924'] = func_2924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2845_call = mod.get_global_var('func_2845')
func_2847_call = mutated_mod.get_global_var('func_2847')
call_2925 = func_2845_call()
call_2926 = func_2845_call()
func_2649_call = mod.get_global_var('func_2649')
func_2653_call = mutated_mod.get_global_var('func_2653')
var_2934 = relay.var("var_2934", dtype = "int16", shape = ())#candidate|2934|()|var|int16
var_2935 = relay.var("var_2935", dtype = "int16", shape = (640,))#candidate|2935|(640,)|var|int16
call_2933 = func_2649_call(relay.reshape(var_2934.astype('int16'), []), relay.reshape(var_2935.astype('int16'), [16, 8, 5]), )
call_2936 = func_2649_call(relay.reshape(var_2934.astype('int16'), []), relay.reshape(var_2935.astype('int16'), [16, 8, 5]), )
func_728_call = mod.get_global_var('func_728')
func_731_call = mutated_mod.get_global_var('func_731')
var_2945 = relay.var("var_2945", dtype = "float32", shape = (1344,))#candidate|2945|(1344,)|var|float32
call_2944 = relay.TupleGetItem(func_728_call(relay.reshape(var_2945.astype('float32'), [7, 12, 16])), 0)
call_2946 = relay.TupleGetItem(func_731_call(relay.reshape(var_2945.astype('float32'), [7, 12, 16])), 0)
bop_2948 = relay.add(call_2944.astype('float32'), var_2934.astype('float32')) # shape=(7, 12, 16)
bop_2951 = relay.add(call_2946.astype('float32'), var_2934.astype('float32')) # shape=(7, 12, 16)
uop_2959 = relay.asin(var_2935.astype('float32')) # shape=(640,)
func_2923_call = mod.get_global_var('func_2923')
func_2924_call = mutated_mod.get_global_var('func_2924')
call_2976 = relay.TupleGetItem(func_2923_call(), 0)
call_2977 = relay.TupleGetItem(func_2924_call(), 0)
output = relay.Tuple([call_2925,call_2933,var_2945,bop_2948,uop_2959,call_2976,])
output2 = relay.Tuple([call_2926,call_2936,var_2945,bop_2951,uop_2959,call_2977,])
func_2983 = relay.Function([var_2934,var_2935,var_2945,], output)
mod['func_2983'] = func_2983
mod = relay.transform.InferType()(mod)
mutated_mod['func_2983'] = func_2983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2983_call = mutated_mod.get_global_var('func_2983')
var_2985 = relay.var("var_2985", dtype = "int16", shape = ())#candidate|2985|()|var|int16
var_2986 = relay.var("var_2986", dtype = "int16", shape = (640,))#candidate|2986|(640,)|var|int16
var_2987 = relay.var("var_2987", dtype = "float32", shape = (1344,))#candidate|2987|(1344,)|var|float32
call_2984 = func_2983_call(var_2985,var_2986,var_2987,)
output = call_2984
func_2988 = relay.Function([var_2985,var_2986,var_2987,], output)
mutated_mod['func_2988'] = func_2988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2845_call = mod.get_global_var('func_2845')
func_2847_call = mutated_mod.get_global_var('func_2847')
call_3042 = func_2845_call()
call_3043 = func_2845_call()
var_3046 = relay.var("var_3046", dtype = "float32", shape = (8, 11, 13))#candidate|3046|(8, 11, 13)|var|float32
bop_3047 = relay.logical_and(call_3042.astype('bool'), var_3046.astype('bool')) # shape=(8, 11, 13)
bop_3050 = relay.logical_and(call_3043.astype('bool'), var_3046.astype('bool')) # shape=(8, 11, 13)
func_1982_call = mod.get_global_var('func_1982')
func_1985_call = mutated_mod.get_global_var('func_1985')
const_3055 = relay.const([-0.461322,-4.464533,-1.518565,-4.569169,7.725182,-5.463755,5.414270,8.888747,1.804244,9.750094,-2.136891,-0.211299,-4.789345,-2.744991,-2.098545,-1.814816,-6.422987,6.623078,-1.577871,-6.777247,6.101210,3.810372,5.301585,3.110054], dtype = "float64")#candidate|3055|(24,)|const|float64
const_3056 = relay.const([-9.533196,2.841524,-9.750479,-9.312134,-9.721445,8.540646,1.309202,1.072881,2.476409,4.874459,7.890438,8.633100,5.687733,2.890265,6.152064,-6.394942,-6.958715,-8.945833,1.290054,2.019402,-0.831012,8.695330,-5.839743,9.659934,-9.505531,-2.869340,0.829418,-0.956943,-6.041289,7.324698,6.714872,9.490742,5.952887,-2.232172,-9.269660,-7.863784,0.474412,-8.851005,-5.771304,6.208863,-2.423141,-2.887704,6.625297,-2.190991,7.977254,2.812520,-5.284073,-3.860283,8.672780,-2.648592,7.895003,-4.164882,-4.550535,-6.487305,-6.581837,1.786144,8.255756,-5.039117,-1.088599,-8.279669,-2.370783,4.045033,0.844089,-5.979393,-3.675672,-9.654472,6.304815,-7.257277,-7.026475,-1.800374,-6.490620,5.329857,-1.963592,-9.526048,4.478972,-9.984093,9.880535,-1.210037,5.896367,9.033989,0.520317,5.307081,-4.322009,0.628486,-8.142093,3.227519,5.957562,-0.841578,-8.932997,0.422188,-4.864381,1.026958,0.222814,-1.130417,-3.274231,-4.246944,2.577827,-5.845947,-2.613694,-0.261637,0.649882,9.601535,3.453383,-8.964138,0.590394,7.249007,9.583500,5.710539,-8.064616,-3.154790,5.996293,-6.270149,-8.703801,-7.824366,-1.566441,-4.002546,-9.112022,7.840470,2.394990,9.864512,1.693445,-9.780574,8.325417,5.236670,2.972421,-5.618925,-9.291438,-8.019879,7.163930,2.548550,4.006694,6.008919,-3.993757,1.596588,0.357810,-6.115662,3.192588,2.305789,-9.005890,-1.577634,-1.767844,-3.921832,-9.416249,-8.736576], dtype = "float32")#candidate|3056|(144,)|const|float32
call_3054 = relay.TupleGetItem(func_1982_call(relay.reshape(const_3055.astype('float64'), [2, 12, 1]), relay.reshape(const_3056.astype('float32'), [2, 12, 6]), ), 1)
call_3057 = relay.TupleGetItem(func_1985_call(relay.reshape(const_3055.astype('float64'), [2, 12, 1]), relay.reshape(const_3056.astype('float32'), [2, 12, 6]), ), 1)
bop_3062 = relay.multiply(bop_3047.astype('float64'), relay.reshape(var_3046.astype('float64'), relay.shape_of(bop_3047))) # shape=(8, 11, 13)
bop_3065 = relay.multiply(bop_3050.astype('float64'), relay.reshape(var_3046.astype('float64'), relay.shape_of(bop_3050))) # shape=(8, 11, 13)
func_1161_call = mod.get_global_var('func_1161')
func_1165_call = mutated_mod.get_global_var('func_1165')
var_3076 = relay.var("var_3076", dtype = "float32", shape = (1170,))#candidate|3076|(1170,)|var|float32
var_3077 = relay.var("var_3077", dtype = "bool", shape = (112, 4))#candidate|3077|(112, 4)|var|bool
call_3075 = relay.TupleGetItem(func_1161_call(relay.reshape(var_3076.astype('float32'), [13, 9, 10]), relay.reshape(var_3077.astype('bool'), [448,]), ), 0)
call_3078 = relay.TupleGetItem(func_1165_call(relay.reshape(var_3076.astype('float32'), [13, 9, 10]), relay.reshape(var_3077.astype('bool'), [448,]), ), 0)
func_901_call = mod.get_global_var('func_901')
func_904_call = mutated_mod.get_global_var('func_904')
const_3085 = relay.const([3.561962,-8.378091,4.804784,-9.106612,9.957654,6.343790,7.444272,-4.584461,-1.762715,-8.106167,-1.704957,-4.564451,7.513405,-6.114563,-0.039632,-1.263760,5.629505,-2.236462,-0.902414,-9.383858,-4.014932,1.569311,-8.377196,8.979953,-4.492256,-8.677741,5.734188,-0.602452,2.569488,-1.563435,6.840782,4.614938,6.662482,4.172065,3.000854,2.377731,-4.148982,8.962001,0.870988,9.837200,-1.622297,-1.294535,8.231505,-0.543998,5.153105,-1.241711,6.960008,0.204774,1.850095,9.059380,-2.535769,-9.093317,7.919656,0.522490,3.233655,-1.477188,8.952161,5.039192,-4.839632,4.195165,-1.562822,-1.179184,-1.387144,9.616268,4.778486,-9.951193,7.587370,-2.532836,-6.935013,9.532964,-7.247300,9.597375,-5.852546,-5.241819,-8.442859,-7.863651,0.859737,3.021501,-4.655332,8.765206,3.738238,0.400482,3.512761,1.587173,-0.439244,1.799191,-3.992841,-5.445877,2.619874,0.793875,-3.947695,8.147634,0.559995,3.561232,2.209090,6.778659,-9.675636,7.343372,-5.694617,4.191168,-6.037718,8.165670,2.344499,0.610720,8.765473,0.337603,8.288164,6.790600,6.293410,-3.494064,-5.564883,3.292161,1.972121,-8.618181,9.648418,-9.623649,-2.131603,-6.348594,2.814965,-6.412100,0.685427,-1.735867,-9.866639,9.645147,6.506146,-6.878732,4.322933,-3.383677,6.954379,-9.440400,9.893677,-9.033133,-2.807820,8.237506,-0.720044,-7.259534,6.786485,-8.748236,1.226639,0.111650,-4.791462,-5.628366,2.067160,-7.998187,1.360147,9.856456,6.819195,-7.573779,7.083079,6.962356,1.948203,9.809439,-4.295931,7.416674,4.154393,-8.857893,-2.326198,9.811550,-9.981206,-6.494727,-4.160502,-9.220482,7.860206,4.719272,-4.241904,7.061423,8.875223,3.771951,-7.760329,0.087984,7.714347,1.428129,-4.236542,-4.555075,-6.595862,-7.572178,-5.271588,-6.898963,4.509761,-1.140107,-5.621062,0.484767,-5.733681,-2.384162,8.738237,-3.927889,7.028161,3.581327,-0.606323,-6.805459,-8.863994,5.489796,6.663202,3.968324,-5.428309,9.158311,0.104662,-9.265615,7.718785,-0.942909,-3.192181,9.605178,8.822700,5.802885,-4.169468,-3.745166,-4.197184,-6.764324,-7.302486,-0.526176,2.710488,9.064282,-5.106572,2.200572,-7.991803,2.910382,-7.854312,0.710399,1.613931,-2.771602,-9.044183,-2.865498,-0.141590,7.768044,-2.435758,8.026209,1.520854,-7.166747,-5.081779,6.017579,-5.627073,6.765306,6.629502,-6.358464,6.400015,2.612782,8.753984,-6.706897,-6.868571,-2.519071,9.535524,-3.120138,3.017765,8.953837,-6.031350,-7.960687,7.074311,-3.357892,-7.021324,7.357932,1.920634,-4.466155,-6.051534,-5.294578,-1.497307,-7.684304,9.492390,-7.585294,5.265585,-2.938246,-2.686337,-8.196093,8.940298,-3.064599,1.386032,0.737910,-3.478682,-5.786503,3.201519,5.185933,9.333279,0.432670,0.174173,3.901984,3.230370,-3.922563,2.568199,9.618458,9.490882,-0.855862,8.144372,3.566538,2.917835,3.838091,6.894960,-0.595459,-5.681374,6.783764,6.387756,-8.621775,-3.405186,-0.244453,-7.346560,-1.845357,-4.624723,-1.646042,8.946978,4.689215,4.531548,3.790492,-1.234533,-8.216543,0.896041,-8.126122,-5.987788,-6.990259,8.450732,-1.820478,-6.417838,-7.345301,-1.079298,2.718401,-0.771466,-0.181228,7.365529,-1.348400,-7.018803,-7.585954,-0.264061,-0.549492,2.052231,-6.698582,-8.206006,-6.619122,4.681991,3.963693,-8.668830,4.162040,9.739065,-4.939685,1.270120,-6.641476,7.729993,-1.326001,8.918877,2.451941,3.613394,-7.335191,-2.533023,-0.767837,9.827727,5.687687,-6.435263,-4.632114,0.889778,-2.782348,-0.928668,-9.478473,3.878628,0.405413,6.856664,-4.971235,-4.973870,-9.647101,7.368652,1.685935,-7.116150,-7.999540,5.523515,4.773296,-5.509055,-6.661352,-3.907948,-1.077637,5.282943,2.464675,-2.697704,2.585585,-6.658372,-9.322758,-5.645263,-8.577245,-3.389286,-7.358048,2.320296,-1.165377,2.627354,-5.144755,9.450340,-0.803635,0.374753,-4.858115,7.402639,-8.764651,0.004237,7.933125,-1.434120,0.638384,0.177680,8.287228,3.669494,-9.020161,-5.064806,-2.494886,5.475297,-7.279828,-0.658946,0.376324,-7.504105,4.061412,-1.150422,8.165819,-2.975610,4.092745,-4.781720,1.234156,0.483421,1.696054,-1.878064,5.562645,-0.563763,-9.636394,-2.231458,-5.247555,-4.391268,2.411702,-8.441797,6.775659,9.308113,-2.771991,5.424100,6.828036,8.101215,-3.864388,-4.894745,-1.017280,7.897323,-6.706385,-0.862034,-0.900883,-9.370091,0.528201,2.318406,-7.252121,6.438485,-6.665939,-0.571719,9.382786,-1.104696,3.435931,-0.215556,4.883160,7.526143,2.969160,-1.649220,-6.305333,8.113224,-4.599388,-4.937436,6.525689,7.907372,3.579572,2.272419,-2.351883,-8.225486,8.614417,0.683323,8.265871,-5.560173,-6.911565,-7.614480,1.290608,-4.084797,-7.045053,-2.371603,-1.773108,-8.218536,9.868213,2.353460,2.404723,-8.161206,-2.824682,-5.802165,-1.709722,-5.713033,5.622961,6.230374,3.453482,-0.966977,-7.502682,9.836306,0.446982,-9.487063,-5.814754,-6.005565,-6.589403,-9.069119,-5.928064,-8.773369,7.769120], dtype = "float32")#candidate|3085|(490,)|const|float32
call_3084 = relay.TupleGetItem(func_901_call(relay.reshape(const_3085.astype('float32'), [7, 14, 5])), 1)
call_3086 = relay.TupleGetItem(func_904_call(relay.reshape(const_3085.astype('float32'), [7, 14, 5])), 1)
output = relay.Tuple([call_3054,const_3055,const_3056,bop_3062,call_3075,var_3076,var_3077,call_3084,const_3085,])
output2 = relay.Tuple([call_3057,const_3055,const_3056,bop_3065,call_3078,var_3076,var_3077,call_3086,const_3085,])
func_3087 = relay.Function([var_3046,var_3076,var_3077,], output)
mod['func_3087'] = func_3087
mod = relay.transform.InferType()(mod)
mutated_mod['func_3087'] = func_3087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3087_call = mutated_mod.get_global_var('func_3087')
var_3089 = relay.var("var_3089", dtype = "float32", shape = (8, 11, 13))#candidate|3089|(8, 11, 13)|var|float32
var_3090 = relay.var("var_3090", dtype = "float32", shape = (1170,))#candidate|3090|(1170,)|var|float32
var_3091 = relay.var("var_3091", dtype = "bool", shape = (112, 4))#candidate|3091|(112, 4)|var|bool
call_3088 = func_3087_call(var_3089,var_3090,var_3091,)
output = call_3088
func_3092 = relay.Function([var_3089,var_3090,var_3091,], output)
mutated_mod['func_3092'] = func_3092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2923_call = mod.get_global_var('func_2923')
func_2924_call = mutated_mod.get_global_var('func_2924')
call_3153 = relay.TupleGetItem(func_2923_call(), 0)
call_3154 = relay.TupleGetItem(func_2924_call(), 0)
output = call_3153
output2 = call_3154
func_3166 = relay.Function([], output)
mod['func_3166'] = func_3166
mod = relay.transform.InferType()(mod)
mutated_mod['func_3166'] = func_3166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3166_call = mutated_mod.get_global_var('func_3166')
call_3167 = func_3166_call()
output = call_3167
func_3168 = relay.Function([], output)
mutated_mod['func_3168'] = func_3168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mod.get_global_var('func_2894')
func_2895_call = mutated_mod.get_global_var('func_2895')
call_3173 = func_2894_call()
call_3174 = func_2894_call()
output = relay.Tuple([call_3173,])
output2 = relay.Tuple([call_3174,])
func_3189 = relay.Function([], output)
mod['func_3189'] = func_3189
mod = relay.transform.InferType()(mod)
output = func_3189()
func_3190 = relay.Function([], output)
mutated_mod['func_3190'] = func_3190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3189_call = mod.get_global_var('func_3189')
func_3190_call = mutated_mod.get_global_var('func_3190')
call_3196 = relay.TupleGetItem(func_3189_call(), 0)
call_3197 = relay.TupleGetItem(func_3190_call(), 0)
output = relay.Tuple([call_3196,])
output2 = relay.Tuple([call_3197,])
func_3198 = relay.Function([], output)
mod['func_3198'] = func_3198
mod = relay.transform.InferType()(mod)
output = func_3198()
func_3199 = relay.Function([], output)
mutated_mod['func_3199'] = func_3199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2845_call = mod.get_global_var('func_2845')
func_2847_call = mutated_mod.get_global_var('func_2847')
call_3210 = func_2845_call()
call_3211 = func_2845_call()
var_3214 = relay.var("var_3214", dtype = "float32", shape = (8, 11, 15))#candidate|3214|(8, 11, 15)|var|float32
bop_3215 = relay.not_equal(call_3210.astype('bool'), var_3214.astype('bool')) # shape=(8, 11, 15)
bop_3218 = relay.not_equal(call_3211.astype('bool'), var_3214.astype('bool')) # shape=(8, 11, 15)
func_2894_call = mod.get_global_var('func_2894')
func_2895_call = mutated_mod.get_global_var('func_2895')
call_3222 = func_2894_call()
call_3223 = func_2894_call()
uop_3224 = relay.cosh(call_3210.astype('float32')) # shape=(8, 11, 1)
uop_3226 = relay.cosh(call_3211.astype('float32')) # shape=(8, 11, 1)
output = relay.Tuple([bop_3215,call_3222,uop_3224,])
output2 = relay.Tuple([bop_3218,call_3223,uop_3226,])
func_3233 = relay.Function([var_3214,], output)
mod['func_3233'] = func_3233
mod = relay.transform.InferType()(mod)
mutated_mod['func_3233'] = func_3233
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3234 = relay.var("var_3234", dtype = "float32", shape = (8, 11, 15))#candidate|3234|(8, 11, 15)|var|float32
func_3233_call = mutated_mod.get_global_var('func_3233')
call_3235 = func_3233_call(var_3234)
output = call_3235
func_3236 = relay.Function([var_3234], output)
mutated_mod['func_3236'] = func_3236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2923_call = mod.get_global_var('func_2923')
func_2924_call = mutated_mod.get_global_var('func_2924')
call_3280 = relay.TupleGetItem(func_2923_call(), 0)
call_3281 = relay.TupleGetItem(func_2924_call(), 0)
output = call_3280
output2 = call_3281
func_3310 = relay.Function([], output)
mod['func_3310'] = func_3310
mod = relay.transform.InferType()(mod)
output = func_3310()
func_3311 = relay.Function([], output)
mutated_mod['func_3311'] = func_3311
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3338 = relay.var("var_3338", dtype = "float64", shape = (4, 14, 10))#candidate|3338|(4, 14, 10)|var|float64
uop_3339 = relay.cosh(var_3338.astype('float64')) # shape=(4, 14, 10)
func_1807_call = mod.get_global_var('func_1807')
func_1811_call = mutated_mod.get_global_var('func_1811')
const_3345 = relay.const([[6.840414,-5.788059,-4.528994,6.411103,-9.349242,9.674610,-8.621991,-9.601134,4.240218,-8.583072,2.333703,-6.767876,-3.171902,-1.583716,-2.119875,-9.813167,-2.808630,2.504423,3.468648,-2.694657,-8.011546,2.784988,-6.810122,5.227289,-8.698628,3.208719,6.355620,-8.110528,4.161763,-1.968322,-1.125807,-8.763440,-5.524525,4.010924,-0.875504,9.714291,-1.816647,1.217928,-9.699803,-8.042087,-4.857795,-5.063328,-8.564490,5.645871,6.023872,1.980273,5.843360,-2.915608,5.169391,1.131571,5.601647,5.002848,0.985593,1.785782,8.086886,-5.289274,4.079699,9.721853,4.179361,-4.714489,1.772407,6.868904,9.082999,-5.633550,9.330008,-7.174056,-8.092102,-9.149267,-2.571907,1.114157,-8.932801,3.755786,-9.620228,9.628121,-1.179738,-5.846437,9.877268,-4.454008,0.467093,-8.800446,-1.610519,7.710481,-4.929963,-7.500741,1.349483,-9.349453,1.043116,-7.008375,-7.968111,2.493077,2.454850,-4.175288,1.269530,7.895307,0.798298,-3.016764,-7.642736,-0.260288,6.408459],[1.120253,-6.696127,-8.837576,9.819355,8.696643,-6.981169,-6.284362,-4.247285,9.921713,1.243428,-2.075005,-6.110392,-0.694728,3.375155,0.849786,5.830266,4.786179,-6.867565,9.570686,-9.747996,5.512183,-9.847431,-0.138223,0.620957,-9.811292,-1.678420,4.236950,8.716475,0.888020,5.216483,-1.309940,6.129408,-2.618133,4.140620,-2.030483,7.999535,6.165879,7.539921,-8.515822,7.366261,-8.272143,-3.354325,-0.787801,6.667465,-9.218078,-6.158206,-9.464946,-6.934450,5.663195,-1.024277,-7.063813,1.585110,6.472523,9.365785,3.985856,5.632425,6.957360,-6.693598,3.305890,3.116432,-4.944822,-6.358864,-6.248557,8.252316,5.305678,5.156174,6.720461,8.950594,4.582815,4.242873,3.758893,-7.204080,-6.522916,-9.423593,6.511442,6.247930,4.025126,-4.050718,-3.836473,7.910451,4.523855,5.185677,7.759768,-2.644936,-7.297578,-5.068017,-3.460086,-0.267167,0.386879,-8.076956,-4.371381,-0.058854,-9.851542,7.150044,-2.709904,-0.629993,3.347748,8.910767,-0.323026],[-7.925332,5.712551,-3.443702,4.645016,-1.659953,8.387670,9.925447,-3.181281,2.630681,-2.227026,2.389502,9.182138,8.245445,-8.551544,5.495613,-7.446145,9.154528,-8.630736,9.368310,-5.564147,-5.785985,-8.716530,7.552139,4.416125,3.330937,-5.948609,7.119214,-6.820545,-8.374673,1.475151,4.271901,3.433081,7.208973,-1.133693,-2.684034,-9.949841,-8.086508,-7.040891,5.767632,-4.740522,-3.304586,8.659801,-8.904012,-8.774023,-2.704950,2.005760,4.035025,-8.474129,-6.337695,2.670406,3.793711,-1.598947,-7.540979,-1.586432,-0.991820,6.733599,3.632358,-2.442533,-1.898824,-0.046761,-2.130190,7.889334,3.102170,-4.217263,-2.585561,-9.752307,3.341379,-3.056083,0.260377,8.830441,1.468365,-8.133639,-5.755716,7.787789,1.339945,6.070274,1.212470,2.224526,4.945160,-7.074512,2.687392,7.508222,7.567203,1.729044,-6.276243,7.816227,5.506316,-8.074215,-6.749760,-6.534075,-8.484038,-2.912131,-7.870688,-6.461821,3.082309,-9.601326,7.760829,-9.455709,4.771989],[1.988535,-2.848581,7.136947,1.461710,3.916287,1.489479,1.047629,-4.546879,0.980103,-6.642499,-4.504022,9.866668,-0.419285,-9.731492,4.291452,-4.628577,-5.641900,2.768801,-7.868522,2.014814,3.264456,-7.161145,-0.363721,-6.273634,7.666270,5.937640,-6.822895,-3.601177,6.165904,7.982526,-9.543985,-9.299296,3.279863,5.669993,-6.032228,5.750147,0.621495,-3.304518,-6.921357,-3.034753,6.698040,0.071098,-6.521022,7.459283,3.842541,-1.682063,-5.424345,-6.154652,4.997561,-7.355015,-8.134165,1.661873,0.881016,-1.791978,-8.765715,4.594725,-2.396117,6.542354,2.952960,7.391479,-8.099505,-8.626657,-3.634667,-9.834443,-9.874284,2.778834,-3.251634,1.701750,-9.257124,-2.309811,-8.713601,2.547754,-3.849668,8.100342,4.192781,-4.683681,-1.555142,-8.231774,1.197584,-0.019458,7.431735,3.211703,-8.184827,7.061790,-7.571288,4.107980,-4.429855,6.849547,-1.365244,-9.821240,3.509474,4.914838,5.935308,-0.676381,-4.095785,3.582924,-1.577678,1.889160,2.610300],[-0.154965,-6.718210,-0.945778,-5.860535,-0.739661,-0.942432,-3.262439,2.079955,7.393730,3.480129,-9.370090,1.672166,-8.413334,-6.402180,-0.467245,-0.384032,0.387637,3.513898,5.447771,0.684374,-6.954454,-9.684930,-6.123802,-8.371235,9.088510,9.553082,5.934775,8.463646,0.306206,3.649476,9.767527,-0.662670,6.922665,-5.628506,6.682194,-9.083434,0.511547,-9.917561,-4.279448,1.754220,-4.377687,8.835616,3.807082,7.028921,-6.937424,4.944083,5.987222,-7.889385,2.768682,2.317144,6.575807,-1.729905,0.226161,-1.038357,6.843344,4.744146,-0.666339,2.468051,4.183420,-4.489463,5.094071,2.811848,8.323506,0.453123,-8.475702,4.178686,-0.698955,-1.949019,-1.265686,-5.255043,-8.702165,-2.103638,-8.154044,8.504477,-5.266596,-4.779869,5.873583,-8.895697,5.750346,4.951204,9.876058,3.312404,-0.550714,1.785997,-2.697107,-1.788415,6.144694,-9.312420,-6.937707,9.702751,8.780201,-1.045777,5.884603,-7.095497,0.343186,-7.475957,-3.786369,-9.061973,2.553422],[-5.608471,8.608833,-3.519607,4.029903,9.314316,-1.817441,-8.046988,-4.619404,-3.964055,-3.822577,-9.722331,-1.988371,-2.431724,6.323464,1.144599,-0.849350,-8.103184,-0.499216,-2.108667,8.518323,2.638636,-1.607616,-8.772993,7.702243,-0.287958,9.202892,9.836740,7.946530,-1.281855,-4.093031,1.636751,6.260070,6.665301,-1.396329,3.187514,2.720064,-2.868796,8.665822,-2.791859,4.174704,-0.896906,7.955069,3.427574,4.930110,4.328892,3.152091,-7.393349,7.179078,1.158200,6.202243,1.503853,9.992235,-4.027193,-6.815559,5.586049,4.849097,-5.002587,6.479274,1.332099,-6.328117,0.176100,2.733862,-2.238159,0.140441,-0.860162,2.160165,9.180889,3.531797,0.902613,-3.092896,-3.954204,-5.023169,-1.847680,-5.027636,-1.976431,8.863663,-9.734814,5.230595,2.584058,-2.386830,9.866734,5.595330,9.482891,-8.100466,6.287102,1.830192,-2.462441,-6.032888,-7.480350,-6.301709,1.685081,-7.956698,-9.693403,6.846186,-1.077929,3.122695,5.928031,-0.917615,-0.204668]], dtype = "float64")#candidate|3345|(6, 99)|const|float64
const_3346 = relay.const([-3,-4,-9,7,10,3,-1,3,-3,-10,5,7,8,1,10,-3,6,-7,-6,-4,-8,-10,-5,6,-1,6,-8,-7,8,-6,1,-3,-9,-3,-5,-3,-5,1,-5,-9,-5,2,1,2,5,-2,-9,5,-7,3,7,-4,-9,2,6,-2,-10,6,2,-3,-8,-5,-1,-5,9,10,-3,8,-1,-10,6,10,6,9,6,9,8,2,-4,-8,4,1,-2,1,-1,-2,5,-5,10,1,8,1,-3,5,-8,2,-1,-1,-2,-6,-3,2,-2,9,2,7,9,6,-9,-9,6,-10,4,7,4,-1,-6,5,3,-10,-5,5,-3,3,-3,-2,4,5,-1,-4,-8,4,-1,1,-4,-8,-6,-2,-3,-4,7,-7,-7,-9,-5,-5,-9,4,-5,-3,-4,7,-4,-2,4,-5,-1,4,-5,6,9,10,8,7,8,4,2,5,-10,3,2,-7,-10,-1,-7,4,8,-1,7,2,1,-1,-9,9,3,5,9,10,-4,-6,-10,4,-4,6,6,-9,6,-10,-6,6,10,-7,-3,8,-10,8,-5,-9,9,10,-5,-2,9,-8,2,4,-5,-9,-8,6,3,7,6,5,-1,-3,-4,-9,-9,-7,1,3,2,4,10,7,4,9,8,-7,9,-5,-7,5,3,6,-5,2,10,-9,-8,2,-8,3,-7,7,2,-10,-8,4,-8,7,-9,3,7,-10,8,-6,-4,-4,-1,8,3,-2,-4,-4,5,8,-10,-3,-2,-1,-4,-7,-6,-1,10,-10,-9,5,7,6,1,-7,-4,10,-5,8,-8,10,-6,10,-4,10,-3,7,-6,-5,8,10,4,1,10,1,-4,3,5,5,-6,-3,4,2,-4,5,-10,-7,4,4,-5,6,-7,9,-4,9,3,-10,3,-5,8,-10,-4,3,-5,5,-3,9,-2,1,-5,6,4,3,8,2,-7,-4,-9,2,-3,4,-8,5,-3,5,-7,-8,-7,-6,-10,-2,-5,1,-3,-8,9,-2,6,8,4,-9,-4,-3,9,-7,10,-7,8,-8,10,5,9,6,-7,-7,8,3,5,5,5,-5,5,-1,10,2,-7,-9,8,-2,-4,5,4,-5,4,-5,6,-6,-3,-2,8,5,4,-4,3,-5,-4,8,10,9,3,-5,-3,10,9,9,9,-7,-9,-3,-4,7,1,-5,9,7,7,3,-4,-8,-6,-2,-2,-7,-7,-3,-1,10,8,-4,-1,-10,-2,10,5,-9,-6,5,-10,-9,3,2,6,5,-9,-2,-10,9,-5,-6,-9,-3,-5,-3,3,4,7,9,5,-9,4,5,6,-4,6,-3,-4,-10,-9,2,8,-7,1,10,1,-2,-3,-9,-2,-9,-2,1,-1,2,7,-3,1,2,7,10,3,4,-9,-2,5,-7,-6,-2,-3,-8,-10,7,-2,-5,-1,8,7,10,7,6,5,-9,-6,-9,-7,1,-9,-9,7,9,-9,4,1,1,-7,-9,2,7,-1,9,5,-5,8,5,-8,-3,-1,10,-2,9,-7,4,-8,-7,7,-9,6,7,8,7,-6,2,9,1,-4,-1,-1,-10,5,-10,-5,-5,2,5,5,7,-6,1,2,7,2,-7,-4,-2,8,1,10,6,-1,-4,-7,-10,-10,10,-10,-8,-6,5,-5,9,8,9,-10,-10,8,-7,-4,9,7,8,6,-10,-2,-2,-2,10,-3,-8,4,3,-3,-8,-9,-3,-6,-4,8,7,-8,6,-2,-8,5,-7,5,10,10,4,-7,-6,9,-7,1,-4,-7,-9,-7,3,6,-1,-9,6,3,9,-9,4,4,-3,-7,5,9,2,-4,10,-2,8,5,1,6,-7,6,2,-3,6,-4,-4,7,-1,-1,-3,-3,4,-7,-8,-8,9,-6,-3,-8,1,-2,-4,-10,-1,7,6,5], dtype = "int16")#candidate|3346|(715,)|const|int16
call_3344 = relay.TupleGetItem(func_1807_call(relay.reshape(const_3345.astype('float64'), [6, 11, 9]), relay.reshape(const_3346.astype('int16'), [715,]), relay.reshape(const_3346.astype('int16'), [715,]), ), 1)
call_3347 = relay.TupleGetItem(func_1811_call(relay.reshape(const_3345.astype('float64'), [6, 11, 9]), relay.reshape(const_3346.astype('int16'), [715,]), relay.reshape(const_3346.astype('int16'), [715,]), ), 1)
output = relay.Tuple([uop_3339,call_3344,const_3345,const_3346,])
output2 = relay.Tuple([uop_3339,call_3347,const_3345,const_3346,])
func_3351 = relay.Function([var_3338,], output)
mod['func_3351'] = func_3351
mod = relay.transform.InferType()(mod)
var_3352 = relay.var("var_3352", dtype = "float64", shape = (4, 14, 10))#candidate|3352|(4, 14, 10)|var|float64
output = func_3351(var_3352)
func_3353 = relay.Function([var_3352], output)
mutated_mod['func_3353'] = func_3353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3189_call = mod.get_global_var('func_3189')
func_3190_call = mutated_mod.get_global_var('func_3190')
call_3386 = relay.TupleGetItem(func_3189_call(), 0)
call_3387 = relay.TupleGetItem(func_3190_call(), 0)
uop_3396 = relay.sqrt(call_3386.astype('float32')) # shape=(8, 11, 1)
uop_3398 = relay.sqrt(call_3387.astype('float32')) # shape=(8, 11, 1)
output = relay.Tuple([uop_3396,])
output2 = relay.Tuple([uop_3398,])
func_3400 = relay.Function([], output)
mod['func_3400'] = func_3400
mod = relay.transform.InferType()(mod)
output = func_3400()
func_3401 = relay.Function([], output)
mutated_mod['func_3401'] = func_3401
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3457 = relay.var("var_3457", dtype = "uint64", shape = ())#candidate|3457|()|var|uint64
const_3458 = relay.const([[[2,3,-3,9,-6,-3]],[[-7,-3,-8,1,-8,-1]],[[8,-3,-2,8,-3,1]],[[3,10,-7,10,-6,2]],[[3,3,-8,2,-4,8]],[[1,10,-7,8,3,7]],[[2,5,4,5,-3,-1]],[[-5,-8,-5,5,-10,-10]],[[7,5,7,-9,-1,9]],[[2,-3,4,-7,-6,-8]],[[-1,8,7,8,-5,4]],[[-9,3,5,-5,7,1]]], dtype = "uint64")#candidate|3458|(12, 1, 6)|const|uint64
bop_3459 = relay.subtract(var_3457.astype('uint64'), const_3458.astype('uint64')) # shape=(12, 1, 6)
output = bop_3459
output2 = bop_3459
func_3463 = relay.Function([var_3457,], output)
mod['func_3463'] = func_3463
mod = relay.transform.InferType()(mod)
mutated_mod['func_3463'] = func_3463
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3464 = relay.var("var_3464", dtype = "uint64", shape = ())#candidate|3464|()|var|uint64
func_3463_call = mutated_mod.get_global_var('func_3463')
call_3465 = func_3463_call(var_3464)
output = call_3465
func_3466 = relay.Function([var_3464], output)
mutated_mod['func_3466'] = func_3466
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3512 = relay.var("var_3512", dtype = "int64", shape = ())#candidate|3512|()|var|int64
var_3513 = relay.var("var_3513", dtype = "int64", shape = (8, 7, 12))#candidate|3513|(8, 7, 12)|var|int64
bop_3514 = relay.left_shift(var_3512.astype('int64'), var_3513.astype('int64')) # shape=(8, 7, 12)
func_2983_call = mod.get_global_var('func_2983')
func_2988_call = mutated_mod.get_global_var('func_2988')
const_3538 = relay.const([7,5,5,-6,9,9,6,-1,-3,7,-3,-5,7,10,-5,7,3,10,1,6,5,-8,-3,9,9,7,-7,6,2,-7,9,1,-5,-1,8,-6,1,6,-2,-10,-3,6,1,1,8,-2,-3,8,-5,-4,-6,-10,4,-3,-10,-1,9,-4,-7,-4,4,-1,-1,5,-10,3,-9,1,6,4,-6,-1,-2,7,-2,6,9,3,6,7,6,2,-10,1,-8,4,-9,10,1,-1,-2,-9,4,-2,9,-8,1,10,-2,9,-5,-3,9,-6,-5,-5,3,10,7,10,3,-1,-6,8,-6,-8,-2,-7,-6,-3,-1,-8,4,4,9,-7,9,-9,-3,-3,-3,-9,-1,10,-9,-6,3,7,-1,-7,2,-3,4,-4,-10,-3,7,10,8,3,2,8,-5,-3,3,-7,5,-5,-3,-5,5,5,-10,10,-4,-5,-6,4,-7,8,-8,-4,6,-4,-8,1,7,-7,-3,-4,4,5,-2,1,-7,-9,5,-10,5,-1,4,-6,10,-9,2,9,-5,-8,-5,-8,10,-9,-3,10,-4,-10,-3,-1,-2,5,4,-2,8,7,8,8,-3,7,-8,5,-5,2,1,-2,-2,1,-1,-6,-4,6,6,-2,-1,-8,-5,2,-8,-10,8,4,-1,7,-7,-4,-5,4,2,-2,-4,-3,3,-9,-2,10,2,-9,8,-6,-10,-7,-1,-6,-7,-8,-1,2,-8,3,-1,-9,6,8,5,-10,-6,-10,7,10,4,-9,-10,-9,1,8,6,6,7,-7,-10,7,-5,1,-3,-10,-10,2,-7,8,-4,3,-6,-1,3,-5,-6,-8,-9,4,1,-9,-10,-1,-1,-8,-5,-4,-10,-4,-4,7,-1,-10,6,-2,-8,8,-1,7,-7,-8,6,3,-6,8,-6,-1,-1,-7,7,-4,8,2,-10,-3,6,9,-5,5,-1,-3,-7,6,-5,5,-2,-6,-2,2,-7,-10,8,4,-6,-5,3,6,10,10,-6,-9,5,-9,-4,-2,7,6,3,-9,9,8,9,4,7,-9,8,-3,1,-3,-4,6,8,7,1,2,7,2,5,9,9,-7,4,-1,2,10,10,7,7,9,7,10,3,-2,-9,2,-7,-6,-1,-7,-2,10,4,-9,-9,-1,-2,-2,2,-5,5,8,10,-4,-10,5,10,3,1,5,2,8,-6,1,6,-8,7,4,9,-10,1,-2,-9,2,-8,-1,2,6,-4,7,-5,1,-2,-1,3,1,-5,4,1,5,3,-2,9,-5,5,3,9,-3,-8,-2,-6,-6,10,-8,-6,-2,10,5,2,-2,-4,-8,-6,-3,-9,-7,10,7,-5,-10,-9,9,-8,9,-8,8,4,6,1,6,4,5,9,5,9,3,10,7,10,-8,5,-2,-2,-8,-8,2,-8,-8,-1,10,-10,7,-9,-6,10,-7,7,-5,8,3,10,9,-10,-6,2,10,3,10,4,10,9,1,7,-9,1,-8,-5,10,6,8,-6,-9,-8,8,6,-5,5,5,4,-4,3,-6,3,-6,6,6,-2,8,6,1,-5,-9,2,2,-5,1,-10,-8,6,1,-10,1,-4,2,-6,3,7,2,5,7,10,-2,8,-5,-6,4,5,-7,-6,-10,10,-4,5,-10,9,2,7,4,-4,8,7,-7,9,3,3,-10,7,1,1,2,-1,1,-10,3,-6,-5,7,5,-6,-3,-2,-1], dtype = "int16")#candidate|3538|(640,)|const|int16
var_3539 = relay.var("var_3539", dtype = "float32", shape = (1344,))#candidate|3539|(1344,)|var|float32
call_3537 = relay.TupleGetItem(func_2983_call(relay.reshape(var_3512.astype('int16'), []), relay.reshape(const_3538.astype('int16'), [640,]), relay.reshape(var_3539.astype('float32'), [1344,]), ), 0)
call_3540 = relay.TupleGetItem(func_2988_call(relay.reshape(var_3512.astype('int16'), []), relay.reshape(const_3538.astype('int16'), [640,]), relay.reshape(var_3539.astype('float32'), [1344,]), ), 0)
func_3233_call = mod.get_global_var('func_3233')
func_3236_call = mutated_mod.get_global_var('func_3236')
var_3544 = relay.var("var_3544", dtype = "float32", shape = (1320,))#candidate|3544|(1320,)|var|float32
call_3543 = relay.TupleGetItem(func_3233_call(relay.reshape(var_3544.astype('float32'), [8, 11, 15])), 2)
call_3545 = relay.TupleGetItem(func_3236_call(relay.reshape(var_3544.astype('float32'), [8, 11, 15])), 2)
output = relay.Tuple([bop_3514,call_3537,const_3538,var_3539,call_3543,var_3544,])
output2 = relay.Tuple([bop_3514,call_3540,const_3538,var_3539,call_3545,var_3544,])
func_3547 = relay.Function([var_3512,var_3513,var_3539,var_3544,], output)
mod['func_3547'] = func_3547
mod = relay.transform.InferType()(mod)
var_3548 = relay.var("var_3548", dtype = "int64", shape = ())#candidate|3548|()|var|int64
var_3549 = relay.var("var_3549", dtype = "int64", shape = (8, 7, 12))#candidate|3549|(8, 7, 12)|var|int64
var_3550 = relay.var("var_3550", dtype = "float32", shape = (1344,))#candidate|3550|(1344,)|var|float32
var_3551 = relay.var("var_3551", dtype = "float32", shape = (1320,))#candidate|3551|(1320,)|var|float32
output = func_3547(var_3548,var_3549,var_3550,var_3551,)
func_3552 = relay.Function([var_3548,var_3549,var_3550,var_3551,], output)
mutated_mod['func_3552'] = func_3552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3166_call = mod.get_global_var('func_3166')
func_3168_call = mutated_mod.get_global_var('func_3168')
call_3562 = func_3166_call()
call_3563 = func_3166_call()
func_2873_call = mod.get_global_var('func_2873')
func_2875_call = mutated_mod.get_global_var('func_2875')
call_3582 = func_2873_call()
call_3583 = func_2873_call()
func_1580_call = mod.get_global_var('func_1580')
func_1583_call = mutated_mod.get_global_var('func_1583')
const_3586 = relay.const([2,9,-8,-10,7,2,-4,-2,-6,7,-8,6,7,-2,-2,-10,-8,10,9,-2,4,8,-8,-8,5,-8,2,-10,9,3,4,6,4,9,-6,10,5,-7,-8,-7,2,7,3,-4,1,4,1,-1,-7,-8,9,2,-6,7,4,1,3,-2,7,-9,-1,6,-4,-7,-7,-4,3,-2,-9,-4,-5,10,3,4,-8,-8,7,-3,3,4,4,-8,-5,7,9,6,-8,-4,10,1,-1], dtype = "uint64")#candidate|3586|(91,)|const|uint64
const_3587 = relay.const([1.348686,4.387957,0.982004,5.108005,5.159564,-0.129054,8.059969,-3.187128,-9.105008,7.760151,-3.331416,-2.981626,-0.160734,-1.391253,7.364299,-5.094475,-4.184433,-0.753879,9.544946,-1.977845,5.753639,-7.164850,6.974281,1.738775,-3.579929,5.414806,4.475551,-2.160722,1.858722,3.814982,9.184769,8.868432,8.430567,8.822973,3.307157,7.207467,-9.809483,1.629920,3.452304,1.723217,8.057042,-9.497991,-1.696177,-3.425678,4.444119,-9.557634,-1.019596,5.922455,-9.682403,-8.460163,-6.727786,-6.056537,5.947503,-6.293277,-7.524624,-8.673390,2.360074,2.279496,-6.548342,9.304829,0.562184,-8.541483,8.494395,-8.391842,-1.299768,9.498417,-6.827171,1.683957,4.450831,-5.114966,5.846795,-2.806371,4.356802,-8.527754,3.592303,-6.634139,-9.833856,-2.085392,-3.044399,7.824162,4.506477,0.903448,-6.513106,3.233997,-2.187423,-6.327384,6.928716,-4.387579,-7.513643,-2.748976,-4.945629,-1.554245,6.826777,-1.695367,3.486501,-7.384054,-3.235767,1.173931,-8.238164,4.031578,-5.954709,-8.170437,-2.141608,7.062882,5.321772,-3.330652,-3.100321,-3.314016,-2.390689,4.093906,-0.188636,-4.122638,9.705325,-2.641873,3.969860,-2.602905,9.215211,8.130823,-8.724047,-4.959291,-7.899058,3.973377,6.050782,-8.107303,9.312971,-8.043338,3.014783,-5.522799,-1.762997,-2.600463,-6.952813,3.212565,0.257039,1.300389,7.810173,6.137258,2.145369,-9.558625,7.443083,-7.514739,-2.492189,-2.931592,1.200337,-6.932039,3.561847,1.756044,-4.041803,1.745501,8.909048,6.163873,-1.198517,-9.349923,8.206402,1.371750,1.024503,1.871348,-5.794082,9.056733,5.153066,2.486491,-2.487146,-3.568409,1.525963,-5.040723,7.331986,-2.990400,0.327618,6.938923,2.225173,2.123285,-7.319164,3.663149,-0.043444,-0.225690,-1.327900,0.999805,0.275696,9.591867,0.342969,4.485668,5.669608,6.049634,3.479237,-8.848815,2.435161,9.038794,-3.709168,-8.525932,-3.169628,-3.690216,-5.034695,5.858593], dtype = "float64")#candidate|3587|(192,)|const|float64
call_3585 = relay.TupleGetItem(func_1580_call(relay.reshape(const_3586.astype('uint64'), [1, 13, 7]), relay.reshape(const_3587.astype('float64'), [192,]), ), 0)
call_3588 = relay.TupleGetItem(func_1583_call(relay.reshape(const_3586.astype('uint64'), [1, 13, 7]), relay.reshape(const_3587.astype('float64'), [192,]), ), 0)
func_1271_call = mod.get_global_var('func_1271')
func_1274_call = mutated_mod.get_global_var('func_1274')
var_3591 = relay.var("var_3591", dtype = "int16", shape = (715,))#candidate|3591|(715,)|var|int16
const_3592 = relay.const([-6.970931,-4.432816,3.892793,-0.491599,-1.109986,-8.254964,7.320793,4.397782,-9.893498,2.822853,6.270864,5.861527,6.719152,5.360416,3.462349,-5.754031,-2.650031,-4.296658,4.051386,3.246425,1.620179,-7.509523,6.187877,-6.665845,9.365037,7.416738,2.219582,-7.200396,2.140775,3.001785,8.684804,-9.323818,6.285906,1.705943,-6.424435,-2.204200,-6.132805,-0.883665,-7.443505,-9.377797,-7.124548,-5.853643,-9.226756,-0.846426,7.313174,-3.863732,6.513326,-8.619981,-0.747203,2.021154,-6.636555,-7.922348,-5.208209,-1.704494,-3.202900,-6.719258,-7.634880,-5.235075,5.800585,-3.034931,1.440330,7.355352,-1.406167,2.861098,-7.431947,7.981850,-0.002932,1.037229,-2.563997,-7.397133,-5.300345,1.944262,3.376459,-6.770272,-8.568554,2.711563,4.326140,-4.782409,9.899460,-3.157605,-9.168381,-5.535656,-2.473971,3.729842,-5.349841,9.124118,1.305052,1.865550,-0.458317,5.506480,1.782464,-9.397445,-9.626441,-0.533992,-4.920894,1.558435,-0.009150,-2.248184,0.725407,0.915075,9.240166,9.617101,3.419542,0.776318,-4.650829,-7.252050,-4.007638,-2.058932,7.681554,-2.157358,-1.059851,-1.274497,2.850647,6.550543,-3.672663,-5.567730,9.807957,-9.494272,7.723861,-5.663598,0.218955,8.938384,-0.861462,-3.107543,-5.988899,2.554495,-8.543126,7.129343,-5.179593,-1.702780,6.163561,-8.070124,-6.251232,6.583525,3.872304,7.197257,-4.318757,-5.614926,5.688082,-8.401760,6.936690,-9.410210,1.766160,0.294979,-7.929623,-9.084472,5.634367,-3.256796,-4.401296,6.737773,5.555433,-0.873362,3.140783,-1.987437,9.044655,-7.292029,3.706670,-7.917719,-2.009933,-3.058421,6.577254,-0.795227,-8.583010,8.051422,-7.652386,-0.919383,7.027911,6.641467,8.007057,8.229643,-8.484251,3.210413,-3.296641,-1.867096,6.321759,0.993264,7.113089,5.021730,-2.768177,-4.016589,3.903378,0.692921,8.636592,2.506997,-5.664261,4.467589,-8.324764,-2.719421,-7.927445,3.831579,-6.664868,0.893396,-8.781685,0.877752,7.840957,6.806951,-5.981923,2.594324,8.824458,-9.299504,-2.079266,-0.905743,-1.586400,4.004805,2.013612,-6.144733,-9.187533,-0.960528,8.804938,8.819924,5.943687,9.608342,7.303583,-5.982763,-0.186926,8.365005,-1.122539,5.628641,-6.565339,-7.425308,-8.989833,9.915816,-7.597068,1.376318,5.902270,-5.038642,-2.505679,-0.228585,-4.259847,-9.737646,0.134326,1.510879,-8.236508,-0.468191,-6.744399,-9.138774,-1.462934,9.051829,7.553963,-2.462341,1.239744,-4.187058,-8.279641,-4.474367,1.232001,2.910163,-3.959215,-9.380017,-0.544602,6.880694,4.076606,8.837947,-2.559048,-4.045965,3.789414,-4.439524,1.204394,-3.700093,-1.055224,2.112224,-1.985653,-9.856124,4.926285,7.865816,-8.540685,-7.165597,-1.284107,5.622554,-3.934279,6.484571,-8.947226,8.618729,-3.513622,2.491586,-3.146924,-8.026203,-3.400781,3.806768,1.087820,1.547012,4.675256,-6.931889,6.564235,-8.984070,4.840962,6.925814,-2.074949,-0.136220,9.731482,3.558414,-7.670232,-7.376033,-8.488573,-2.478937,-8.415853,2.752105,-4.762560,1.073659,9.739281,0.290028,4.506093,-3.876870,1.003371,-1.072362,7.777363,-0.850817,7.633911,-6.597732,-8.482212,-7.825555,-5.943818,4.445835,3.005686,-3.852159,-4.093888,2.020995,-3.618374,6.246964,-9.169291,-1.239269,7.669322,1.976618,3.377847,3.231790,0.567267,-6.629207,8.614869,-7.595179,5.651693,-0.626325,-1.168225,8.644660,1.631076,1.914144,0.356612,2.419818,-3.457771,4.525755,-5.421939,-6.602412,-6.811099,7.726552,-8.715366,-2.797521,-6.256652,0.758926,2.967929,-7.280292,-4.461083,-3.627968,1.601630,-0.805978,1.322347,-6.438338,-6.859216,3.206034,8.725080,2.735567,-3.977707,3.229168,-4.686057,8.382177,-1.807175,-7.570755,4.812243,-4.706801,5.598303,6.622185,-6.369399,-8.663322,-2.986239,-3.591411,1.901871,7.834850,5.440805,-4.849911,2.956016,6.953013,5.644573,-1.128807,7.746418,-6.455199,-0.751890,4.295176,3.975253,0.161980,9.531196,0.824423,5.587550,-9.023693,-0.311855,-4.620105,-2.976149,8.557757,-3.029281,6.716834,-3.945371,-7.015443,1.850410,7.939070,4.081993,-2.682016,-7.224223,1.910782,-8.715943,2.534450,6.800340,-4.544120,7.865020,0.262894,-2.589075,6.778080,-0.098733,3.349959,0.475421,-4.636139,5.042071,3.724788,3.576177,-5.464456,-5.760771,-8.321666,5.224566,-6.050032,-9.328791,-0.223850,-1.694361,5.943379,2.336466,-3.099031,5.105858,-2.578946,2.527602,6.025789,-8.195806,-2.904061,7.879764,-7.341369,0.347240,2.186915,6.948491,-5.066679,-0.836390,-1.451423,-7.046073,-9.975116,-1.189375,0.313475,8.994813,-0.746275,-8.753857,-9.377389,5.859504,-2.283102,6.062344,-0.536990,-2.729783,-8.850439,-5.853234,-8.348875,9.028083,-0.293237,7.658280,0.123608,-3.843308,6.267899,-2.719086,-2.302338,-5.083350,1.804154,9.134343,-9.142477,-7.190899,-8.448417,-1.990270,-2.284428,7.288046,1.377671,-5.238719,9.800528,-6.857528,1.070407,0.620644,-1.000632,-7.655935,7.451374,0.641320,3.012553,3.849936,-0.370184], dtype = "float32")#candidate|3592|(490,)|const|float32
call_3590 = relay.TupleGetItem(func_1271_call(relay.reshape(var_3591.astype('int16'), [11, 13, 5]), relay.reshape(const_3592.astype('float32'), [7, 70]), ), 1)
call_3593 = relay.TupleGetItem(func_1274_call(relay.reshape(var_3591.astype('int16'), [11, 13, 5]), relay.reshape(const_3592.astype('float32'), [7, 70]), ), 1)
output = relay.Tuple([call_3562,call_3582,call_3585,const_3586,const_3587,call_3590,var_3591,const_3592,])
output2 = relay.Tuple([call_3563,call_3583,call_3588,const_3586,const_3587,call_3593,var_3591,const_3592,])
func_3594 = relay.Function([var_3591,], output)
mod['func_3594'] = func_3594
mod = relay.transform.InferType()(mod)
mutated_mod['func_3594'] = func_3594
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3595 = relay.var("var_3595", dtype = "int16", shape = (715,))#candidate|3595|(715,)|var|int16
func_3594_call = mutated_mod.get_global_var('func_3594')
call_3596 = func_3594_call(var_3595)
output = call_3596
func_3597 = relay.Function([var_3595], output)
mutated_mod['func_3597'] = func_3597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3166_call = mod.get_global_var('func_3166')
func_3168_call = mutated_mod.get_global_var('func_3168')
call_3608 = func_3166_call()
call_3609 = func_3166_call()
var_3610 = relay.var("var_3610", dtype = "float32", shape = (8, 11, 1))#candidate|3610|(8, 11, 1)|var|float32
bop_3611 = relay.multiply(call_3608.astype('uint16'), relay.reshape(var_3610.astype('uint16'), relay.shape_of(call_3608))) # shape=(8, 11, 1)
bop_3614 = relay.multiply(call_3609.astype('uint16'), relay.reshape(var_3610.astype('uint16'), relay.shape_of(call_3609))) # shape=(8, 11, 1)
var_3616 = relay.var("var_3616", dtype = "float32", shape = (8, 11, 16))#candidate|3616|(8, 11, 16)|var|float32
bop_3617 = relay.mod(var_3610.astype('float64'), var_3616.astype('float64')) # shape=(8, 11, 16)
uop_3627 = relay.atan(bop_3611.astype('float32')) # shape=(8, 11, 1)
uop_3629 = relay.atan(bop_3614.astype('float32')) # shape=(8, 11, 1)
bop_3630 = relay.greater_equal(uop_3627.astype('bool'), var_3616.astype('bool')) # shape=(8, 11, 16)
bop_3633 = relay.greater_equal(uop_3629.astype('bool'), var_3616.astype('bool')) # shape=(8, 11, 16)
uop_3634 = relay.sigmoid(uop_3627.astype('float64')) # shape=(8, 11, 1)
uop_3636 = relay.sigmoid(uop_3629.astype('float64')) # shape=(8, 11, 1)
func_728_call = mod.get_global_var('func_728')
func_731_call = mutated_mod.get_global_var('func_731')
const_3638 = relay.const([[5.423321,8.536260,7.466744,3.866762,-2.537718,-6.676249,8.520889,8.232688,3.289208,-9.235737,-3.120061,2.255480,6.883921,4.089916,-0.307585,-3.739158,-2.470824,-5.296488,-4.023429,-2.315506,-8.102611,-2.045866,6.195212,-1.471726,-8.874898,-5.224697,4.216714,0.950368,-6.991359,2.346066,5.629468,-7.550245,4.979371,0.750549,-0.183607,-5.410366,2.781044,-5.408952,0.644168,5.977208,-9.875056,-4.330914,-4.998567,-5.032790,9.587702,5.659569,1.784860,-3.229473],[9.986428,5.937605,9.576000,-5.763776,-4.786008,4.525881,7.737227,4.253739,-3.400244,8.485320,-9.824338,-9.492778,1.161890,-5.778491,0.032232,-7.210826,8.141842,4.981849,4.128150,1.200027,-4.367372,1.337290,5.455957,9.596075,5.557255,-9.183705,5.363724,2.860575,1.024025,1.635235,-8.341336,2.548036,3.645044,-6.737156,-2.448367,9.654300,-2.908196,-4.004348,3.684763,-1.790664,-7.334471,-2.446717,7.925538,2.635038,-7.259590,3.977167,-2.967075,-4.979705],[0.541909,-8.252326,-2.899377,3.653251,1.073851,-1.339927,5.107722,3.676106,-1.100591,0.887433,5.493816,-7.379771,-0.605552,-1.439019,-7.758813,-8.121456,8.695143,6.002742,-4.153959,-6.477255,-0.856810,5.080231,3.770240,6.425838,-2.175805,7.578792,7.226462,9.087919,-8.691171,-2.308424,-8.933245,-2.367661,-0.757082,5.243261,-9.279558,-0.493960,3.310110,6.284453,-5.488957,-1.948755,1.924322,-5.016755,4.675767,-7.092851,4.088892,-2.680615,-0.819818,7.816202],[-7.264744,6.878722,-8.978990,1.045761,2.096269,0.389717,0.302445,8.035004,4.995064,-7.687342,7.422262,-7.998058,5.321055,1.191296,-4.596985,-8.644278,2.163267,0.626388,2.304990,3.535271,5.217906,-6.623406,-5.141471,-8.042936,9.290451,-4.798494,5.775714,9.883410,6.821442,-9.407596,1.536440,-0.214806,5.058361,7.047554,-8.923524,7.758071,6.554869,2.766086,3.612962,6.356043,-7.187451,-2.530456,5.696840,-6.435653,-4.211434,-2.632950,-5.730489,-7.271903],[-9.267593,-3.721965,8.857079,9.667810,-2.145793,-6.058545,-7.826622,-7.966724,-2.753827,-0.915288,3.713902,-5.081565,-1.321089,0.327125,-7.722900,-1.224083,6.970971,8.851945,-2.409305,7.476280,6.959062,8.365954,-1.089461,-2.946949,-9.043136,-7.509219,-9.125889,8.740136,5.496056,3.966714,-9.907548,-9.076557,-9.786373,-6.388672,-0.030365,1.623523,-8.942654,8.771930,4.388025,6.807180,4.835527,9.857672,-9.638698,-4.329534,6.363220,6.119266,2.261057,-0.436090],[-9.352459,-7.348008,-3.714791,-1.102956,-5.135144,7.764354,-9.136896,2.815800,-9.637835,5.878862,4.319960,-4.716546,8.801117,1.121662,-8.500060,-4.366014,-7.654891,6.127848,9.484041,7.341194,-3.046369,9.814969,5.623276,-9.045569,1.257404,9.230616,9.864295,7.255051,8.914424,7.876342,-2.474104,-4.652214,-3.447902,-8.873131,-4.203741,-8.556002,-5.015851,6.859610,-4.588644,-7.723962,9.483955,6.121164,5.613082,1.794023,6.857478,-4.293572,-6.965661,-0.788183],[6.707159,-1.622888,0.261793,-7.453013,-1.000257,6.468739,9.375905,-5.451662,4.569488,9.070874,6.138241,-1.588665,4.703737,-5.232732,6.931662,-3.756647,8.855961,-1.635260,5.522797,6.522400,-8.764932,4.370533,-6.828932,-8.916296,9.738942,-8.175612,-3.647010,2.874356,-8.657640,-4.225605,-8.403131,-7.526663,9.909874,-1.864123,5.721676,3.049740,6.657591,6.814613,-1.631292,3.957604,0.546315,-3.731367,-1.365824,0.029920,-9.120832,0.407768,-6.731460,-8.958712],[-4.903714,8.288604,-1.998055,-5.089530,8.932656,9.110530,7.570301,7.179443,2.718972,2.628956,7.339852,-7.732360,-5.527435,-3.129003,5.753174,-6.091008,-4.073380,5.459040,-6.121536,-7.644577,6.177507,-9.606314,-3.454246,0.521668,0.638347,-7.432529,8.794090,-0.073889,-1.190445,-6.671033,-3.777127,9.747462,-6.016971,7.654715,-5.972318,-6.019494,-0.271630,0.977193,-6.324371,-9.877800,4.754667,-6.340169,6.656547,-1.071010,-4.585522,1.385063,0.594161,8.185087],[6.662165,3.751724,-1.729021,6.653709,-4.234319,9.371331,2.035605,-4.711191,-3.743803,1.563400,-8.705037,2.857406,-4.189339,6.201814,-9.091684,-2.745147,5.700681,3.441328,3.487892,-6.577184,9.796478,5.432158,0.677955,8.670513,-4.538835,4.333833,-0.141190,0.286142,5.707229,3.012864,9.682705,7.689145,4.820183,-1.870746,6.371847,-7.475655,7.711451,0.801069,3.271239,-9.992207,6.329869,-9.161720,1.078219,4.982723,-6.893627,-7.719007,-9.765820,7.453876],[-1.878876,-3.415935,-6.050419,5.895906,-4.019242,2.546965,3.556645,-0.127767,0.599246,0.228553,-2.798971,-2.975312,3.710500,0.373645,-5.724138,3.839309,-1.751553,9.073073,-4.473583,-2.037770,1.900488,-2.351324,-5.208710,-4.976134,-5.143011,-0.920853,-1.495306,8.922838,0.099940,6.854819,9.952513,-2.540562,-5.196237,1.562720,-6.684268,-7.364913,0.714969,6.412364,1.177762,8.161834,2.224584,-0.127906,-6.506475,2.658436,-2.327347,-4.033698,1.106468,-0.739199],[-0.095674,-2.710751,1.138323,-2.154070,6.337591,-6.530119,7.079358,-6.078255,2.258446,-4.023427,3.057810,2.250189,-0.694766,6.825190,2.992465,-8.613367,9.284457,-5.685802,7.525351,3.415720,-1.427228,6.436741,-6.494650,-2.145683,-3.791801,6.868824,-1.668588,-4.293365,-2.361392,-8.657624,0.001795,5.016253,6.016883,3.171567,7.314857,-9.181762,2.180455,7.540831,4.830423,3.125232,1.409536,2.004101,-7.727344,-9.875389,-0.744532,-4.319733,5.417815,-6.970353],[4.278287,5.714915,3.547248,2.142455,4.989363,-9.290078,-6.944910,6.538584,-7.581989,-1.587630,-2.270553,-7.333813,7.569874,-1.857623,-3.417240,-3.754265,-4.538683,-8.530718,5.387269,-2.709237,4.644778,4.598576,6.362011,7.194507,-5.523382,-9.685820,-4.328666,7.566605,6.896457,3.456765,-7.767139,3.993727,5.679891,-8.474826,0.677493,-8.867977,3.641502,5.487220,-3.702298,5.561973,-8.853548,6.932874,-3.695962,-0.748377,-2.846121,2.114759,1.131838,6.359870],[0.433848,4.206763,9.491344,8.775643,-7.560869,8.492513,9.106816,1.859187,-9.191373,-7.710006,8.485584,-3.924033,-2.706518,-8.115824,-1.414134,9.475737,-3.257869,6.140122,-0.483203,-5.722194,5.892018,1.978443,-5.441611,-7.327645,9.936795,8.139014,2.098345,-4.012265,-4.013116,-5.094478,-0.238775,-0.641751,-3.361890,-6.059346,-8.234839,5.511978,-0.875329,-4.538941,9.711634,5.743358,5.066847,4.391713,-4.832971,5.873810,9.205295,-4.827647,0.017076,-9.184516],[-0.257691,-1.484510,3.742235,-2.211522,-5.583471,0.071381,3.058672,-0.276018,8.738118,0.396992,6.226942,-7.447209,-2.942748,-2.942271,1.123612,-6.394387,-8.055723,-2.900014,-2.145540,9.801487,5.996329,7.371481,-4.568314,-0.268335,3.550541,6.459215,-0.753118,4.076533,-6.593049,-2.903446,-1.750956,4.010020,2.070473,4.804433,-5.152646,-8.195936,4.180284,-6.065696,9.074850,3.857399,7.489395,2.691228,7.066334,-9.677854,-0.635134,6.818755,7.879090,6.925076],[6.552109,4.482677,-5.236727,8.133578,3.549756,9.612765,-1.736912,5.682703,3.995008,0.749025,-9.569067,5.152763,-7.846215,8.862507,0.406388,-7.376844,3.557591,3.263950,3.016812,4.370744,-5.925999,3.973602,-2.613889,-8.161660,4.590970,-2.647066,-7.976151,9.098828,-3.832958,-6.162442,8.991509,-4.023692,-4.328632,-5.216508,9.660087,-2.054685,-8.010572,-7.240496,1.880313,5.482166,4.874309,-8.604848,1.288996,-2.470188,-7.026174,1.453203,-8.412128,2.141926],[3.961070,-3.849779,4.283987,6.926945,8.458821,-7.224833,-9.368979,7.923990,9.218524,6.117658,5.415091,8.199572,0.413296,-1.178846,-7.900924,-6.365793,9.656803,-5.275937,-3.453402,1.363116,-1.945724,-7.754901,2.324645,-1.508364,1.824398,3.142716,5.723098,-0.955148,0.788397,-9.439185,-6.102814,-1.015160,-3.713649,1.143038,-8.819268,-2.940416,-3.553927,4.978927,-3.579392,8.836625,-9.149700,6.099044,9.242887,-6.087064,-6.831379,-4.322437,4.798596,-3.764516],[-7.644913,-0.142911,-4.979155,6.704414,7.612908,-7.808930,-4.172963,8.526427,-4.070556,-0.458506,2.446519,7.229100,-6.085769,-6.388582,-1.389000,2.131182,-5.177826,5.530980,-6.482629,-7.275105,9.153784,0.716227,-1.207692,-5.901060,0.752011,-0.987433,0.349068,-9.770495,9.671919,-5.901616,-5.299910,-2.168604,2.445080,7.258814,-5.552636,-0.149879,2.758703,2.383807,-4.779985,-1.593974,0.202817,-1.048275,-5.280687,-0.005448,-9.504749,0.496209,-9.396936,2.851032],[6.427835,9.405200,-3.973081,-4.582482,6.004221,6.146165,2.962687,-9.207055,-2.779032,-3.543612,8.320965,8.112174,7.998542,-2.084307,-4.411396,4.622985,1.134717,-9.591162,-6.408795,5.727633,-8.239357,-2.849232,-3.900907,-9.227017,8.264427,-7.366678,8.019507,-1.867381,-1.230138,-8.062846,8.130787,1.558906,-3.111963,-4.103693,-6.168456,7.447268,3.034916,-6.188387,-3.448308,-5.415872,3.426189,-7.700909,-4.654132,1.854601,-6.744948,-2.831528,-9.536930,-4.895192],[7.562217,2.486377,-1.114407,-1.441363,-0.070098,9.977583,-3.549969,6.764835,-1.142914,-1.580889,-5.505580,-5.994452,-9.314671,-2.416224,-2.089321,1.215112,-9.576208,4.960211,8.932512,-1.673882,-3.590391,-4.973445,1.976485,0.080983,-4.543841,9.216313,9.114908,5.571650,-0.292513,-3.049719,-2.572423,-2.117823,7.995064,7.807607,6.532630,-7.931902,8.116453,-3.648350,-1.246187,5.117451,-0.849463,-5.536770,-5.595540,7.069215,5.267131,4.223096,7.991298,-4.093161],[1.522419,-8.779920,3.601640,-2.632036,8.618187,-9.269792,-2.452075,-0.512566,-3.572558,7.370461,-3.315148,2.144126,-9.258391,2.140233,-6.041055,-0.720603,5.680281,-6.952429,-9.404781,-7.040734,-4.047628,9.921852,-3.259354,1.750153,-6.374328,2.907161,0.824907,1.922600,6.732608,7.943075,-1.071102,9.636013,-3.467594,4.734244,-7.585749,4.964800,-1.637368,-5.887409,-5.561754,3.734299,-5.701736,-9.381257,8.923671,1.558293,-6.864657,-6.772662,5.002754,9.036801],[0.576194,-3.431869,-1.975273,-5.836452,-1.417759,6.502966,-5.603879,-2.130542,3.698083,-2.227084,-5.716518,8.491640,7.619341,0.884536,5.821522,-6.854949,6.235921,-7.280746,-9.105640,-5.571037,6.140761,-8.016361,-0.714326,-4.785242,0.426256,-2.343224,0.680005,-0.264259,5.750830,4.848239,-4.159713,-1.918524,-7.528873,8.963424,3.746167,9.130235,0.199399,0.213106,-3.776159,4.908580,-9.964709,6.209094,6.161015,-8.873710,-6.079219,7.938937,-3.567142,-2.626040],[4.787613,9.153442,-6.450811,5.886190,-6.292538,2.730854,4.315607,-5.259171,2.122755,8.628631,-4.268201,8.442007,5.614022,1.060583,-2.326973,-7.246228,-6.747447,4.759438,-8.574337,-0.043347,8.561578,-2.402486,5.895593,-3.845758,-2.384427,6.858321,-7.809033,3.431371,-5.090346,6.555602,9.933601,-1.733344,1.199026,-8.510373,-0.177245,9.113362,-1.783812,-6.218443,-6.952381,-0.181226,-0.023441,4.630302,5.346515,-6.725581,-1.936619,-2.894026,0.344944,6.705605],[-4.538449,6.314775,-0.946534,-7.038149,-8.641193,-7.546832,-1.413738,0.018367,9.660842,0.711544,-1.813608,-7.799046,5.702053,-0.332090,4.242394,6.657557,5.731250,-8.268406,9.838181,-5.624501,-3.479426,3.570341,-7.106213,1.286198,7.344040,-9.788563,1.167701,-8.018761,6.700283,0.091141,-6.765109,2.598532,3.944909,-5.419728,-8.406794,-1.911096,5.068936,0.358906,5.603522,4.833981,9.001749,-6.862028,-3.528386,0.515566,4.653443,-7.626017,-4.157731,3.981400],[-5.516847,-4.317047,-4.015302,3.452671,-6.998852,6.623430,6.369359,5.053518,-1.758996,5.572792,-2.305494,1.504118,-4.069910,-8.587761,1.944100,-2.979274,1.611581,-1.622419,-0.134179,2.255699,8.409835,-0.951069,-7.990972,9.846706,7.443452,3.427102,-3.820229,6.638203,4.130861,4.510141,5.206333,-1.256680,-3.085279,-8.547468,-2.604725,-5.821849,5.980969,-2.568648,-6.499760,-1.483485,7.725996,1.142361,-9.332746,-1.222108,-2.963544,-0.272636,1.605395,-1.502309],[-4.180085,-7.479937,6.140777,-8.356029,0.080174,-0.967376,-3.518328,9.812296,-9.609396,0.004267,0.268046,-2.044328,9.505718,7.745842,2.990840,4.058685,8.482905,-9.180674,-6.098698,4.702423,-3.300141,6.455647,-3.762432,-7.348947,3.121774,-4.968491,6.173107,9.640616,0.454690,9.614389,-8.452885,-0.268362,3.184708,-2.564808,1.293896,8.109664,0.190546,6.007408,-1.948155,2.198744,5.525313,-8.923363,-0.105095,-7.966993,5.682419,0.540122,-1.626879,8.522922],[-2.684660,0.541886,2.134453,7.557342,7.029452,-8.576031,-5.012159,0.490803,1.854639,-4.579040,0.822778,-0.237240,5.729595,4.658014,5.614102,0.794556,-8.019998,-6.795104,3.950846,3.765297,-6.834039,-4.626797,5.153494,-8.453181,-1.218630,-8.516184,6.802278,-7.785135,-7.841694,-6.337633,-7.033097,-8.183751,-0.602049,-4.639295,-3.534042,-9.706969,6.120170,-8.436042,9.538193,-4.798480,7.012999,2.237416,9.570897,8.783089,1.093784,0.035779,4.423571,3.525592],[-0.324649,-1.187875,3.970259,2.597689,5.305242,0.929265,2.111316,-0.579996,-0.126035,6.271778,8.464861,-4.821564,5.788712,-6.179562,0.843956,-4.648392,5.112395,-5.269158,-2.032078,-6.422990,4.331521,-2.495204,1.517219,-3.760471,-0.525341,1.926963,-3.103506,1.189135,4.674081,9.187226,5.382445,3.131248,-0.710197,6.490137,1.624217,-0.690997,6.375785,8.078236,-3.253037,-5.865102,-2.538775,-9.220693,5.556194,-0.668880,-9.154315,8.730956,0.473441,-3.260549],[6.265685,-6.524240,6.817064,0.588329,1.795740,6.639423,-0.864479,6.240275,0.709362,-2.581501,6.399220,-8.500544,-5.573549,0.490387,-6.965835,6.105515,6.122509,-4.361694,-0.413560,1.417483,2.323725,0.341421,-6.971803,-1.924648,8.552235,9.732933,4.367612,-1.087929,5.094917,5.861784,7.702481,0.103849,7.213488,-6.283677,-2.448733,1.692649,-9.562724,2.846388,7.029005,7.594058,-7.154913,8.227237,-8.357187,2.595801,2.122579,1.186447,5.440461,2.319326]], dtype = "float32")#candidate|3638|(28, 48)|const|float32
call_3637 = relay.TupleGetItem(func_728_call(relay.reshape(const_3638.astype('float32'), [7, 12, 16])), 0)
call_3639 = relay.TupleGetItem(func_731_call(relay.reshape(const_3638.astype('float32'), [7, 12, 16])), 0)
var_3642 = relay.var("var_3642", dtype = "float32", shape = (8, 11, 5))#candidate|3642|(8, 11, 5)|var|float32
bop_3643 = relay.bitwise_or(uop_3627.astype('uint8'), var_3642.astype('uint8')) # shape=(8, 11, 5)
bop_3646 = relay.bitwise_or(uop_3629.astype('uint8'), var_3642.astype('uint8')) # shape=(8, 11, 5)
func_3189_call = mod.get_global_var('func_3189')
func_3190_call = mutated_mod.get_global_var('func_3190')
call_3652 = relay.TupleGetItem(func_3189_call(), 0)
call_3653 = relay.TupleGetItem(func_3190_call(), 0)
func_3310_call = mod.get_global_var('func_3310')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_3654 = func_3310_call()
call_3655 = func_3310_call()
output = relay.Tuple([bop_3617,bop_3630,uop_3634,call_3637,const_3638,bop_3643,call_3652,call_3654,])
output2 = relay.Tuple([bop_3617,bop_3633,uop_3636,call_3639,const_3638,bop_3646,call_3653,call_3655,])
func_3664 = relay.Function([var_3610,var_3616,var_3642,], output)
mod['func_3664'] = func_3664
mod = relay.transform.InferType()(mod)
var_3665 = relay.var("var_3665", dtype = "float32", shape = (8, 11, 1))#candidate|3665|(8, 11, 1)|var|float32
var_3666 = relay.var("var_3666", dtype = "float32", shape = (8, 11, 16))#candidate|3666|(8, 11, 16)|var|float32
var_3667 = relay.var("var_3667", dtype = "float32", shape = (8, 11, 5))#candidate|3667|(8, 11, 5)|var|float32
output = func_3664(var_3665,var_3666,var_3667,)
func_3668 = relay.Function([var_3665,var_3666,var_3667,], output)
mutated_mod['func_3668'] = func_3668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3166_call = mod.get_global_var('func_3166')
func_3168_call = mutated_mod.get_global_var('func_3168')
call_3695 = func_3166_call()
call_3696 = func_3166_call()
func_2027_call = mod.get_global_var('func_2027')
func_2031_call = mutated_mod.get_global_var('func_2031')
const_3705 = relay.const([10,2,-6,2,4,-1,-5,8,-6,4,7,8,-3,-1,-9,-10,2,-3,-6,2,6,-2,-6,8,1,1,-2,-3,-10,-5,-3,-10,-8,5,9,-6,1,-7,10,10,9,-1,-10,5,1,1,-8,10,3,10,5,6,-5,4,10,7,7,8,4,-9,7,10,-8,-1,-8,-2,8,10,3,-9,7,-2,-3,2,-8,-2,-1,-10,5,-10,2,-7,-2,-4,-2,-7,8,-5,-2,8,-10,-4,-5,9,-4,4,-3,-6,9,-1,10,1,-7,-9,-3,-8,-9,3,-7,-5,-3,6,-1,2,-2,-10,1,2,-8,-9,-10,-2,-1,5,7,-8,-9,6,-7,-10,1,3,1,-10,-6,10,5,-7,6,6,-1,4,9,10,8,6,1,-1,-5,-3,-9,-7,4,-3,-5,4,3,8,7,9,9,7,5,4,9,2,-10,-4,-4,-5,-6,-7,-4,-3,4,-10,-7,4,-5,3,8,3,6,-2,-4,9,5,-1,10,4,3,-8,-9,4,3,-1,5,-8,-1,9,-9,-7,4,-5,-1,-10,-1,7,-9,7,2,-2,9,-6,-2,8,-5,6,-5,6,10,-10,-2,-4,-10,4,6,-9,-6,7,-1,-9,-2,-8,8,2,-7,10,9,-4,-2,1,4,4,4,-10,-8,3,-6,8,-2,1,-1,3,-2,1,5,3,-3,-3,-8,-3,-4,10,-5,3,9,1,2,1,8,1,7,5,10,-8,3,-7,-8,-6,-7,4,-10,5,-6,-9,2,2,-3,-9,6,-1,9,-5,-9,3,9,-10,-2,-2,-5,5,-2,-5,5,-8,-1,10,-9,8,6,-3,-9,-4,10,-1,1,-2,-4,-8,5,10,6,-8,4,4,9,5,-10,1,8,-9,-8,2,10,-1,-7,-2,10,8,6,-4,-9,5,9,-1,7,-4,1,-9,5,7,-8,4,9,-1,-4,-1,5,4,3,-1,-5,9,10,-8,-7,-8,4,-4,4,9,2,2,-8,-3,2,-5,-8,3,-2,4,8,4,-4,6,-6,7,-6,5,-7,-7,2,-6,-8,-8,-1,-10,4,2,2,5,2,-6,-3,2,-1,1,-1,-2,7,9,-2,-9,-3,-4,9,-5,-5,1,3,-10,-4,-6,7,6,-7,1,4,-6,3,5,3,-6,2,6,3,-8,4,-2,3,4,2,9,-7,4,7,3,9,8,-9,7,-10,-6,10,-7,7,2,9,5,6,-8,-1,5,-2,-3,9,10,-6,6,-6,8,-6,-5,10,1,-1,1,9,4,-8,2,-9,-9,-1,-9,-9,2,-7,-10,-7,3,7,-2,9,-10,4,-6,-2,-8,-1,-2,5,-8,9,9,9,5,-5,4,4,-5,-4,3,-8,-1,-9,-1,-4,-5,7,10,6,-1,4,-7,7,-9,4,9,3,1,10,4,-1,1,-5,-3,8,-1,9,-1,3,9,1,7,7,-6,10,-3], dtype = "uint32")#candidate|3705|(550,)|const|uint32
call_3704 = relay.TupleGetItem(func_2027_call(relay.reshape(const_3705.astype('uint32'), [10, 5, 11]), relay.reshape(const_3705.astype('uint32'), [10, 5, 11]), ), 0)
call_3706 = relay.TupleGetItem(func_2031_call(relay.reshape(const_3705.astype('uint32'), [10, 5, 11]), relay.reshape(const_3705.astype('uint32'), [10, 5, 11]), ), 0)
bop_3715 = relay.floor_divide(const_3705.astype('float32'), relay.reshape(call_3704.astype('float32'), relay.shape_of(const_3705))) # shape=(550,)
bop_3718 = relay.floor_divide(const_3705.astype('float32'), relay.reshape(call_3706.astype('float32'), relay.shape_of(const_3705))) # shape=(550,)
func_2845_call = mod.get_global_var('func_2845')
func_2847_call = mutated_mod.get_global_var('func_2847')
call_3727 = func_2845_call()
call_3728 = func_2845_call()
bop_3734 = relay.right_shift(call_3727.astype('int16'), relay.reshape(call_3695.astype('int16'), relay.shape_of(call_3727))) # shape=(8, 11, 1)
bop_3737 = relay.right_shift(call_3728.astype('int16'), relay.reshape(call_3696.astype('int16'), relay.shape_of(call_3728))) # shape=(8, 11, 1)
func_2649_call = mod.get_global_var('func_2649')
func_2653_call = mutated_mod.get_global_var('func_2653')
var_3740 = relay.var("var_3740", dtype = "int16", shape = ())#candidate|3740|()|var|int16
const_3741 = relay.const([2,10,-2,-10,7,2,1,-1,-5,-3,6,-4,8,5,-6,4,8,10,6,8,9,5,3,-3,6,9,6,3,3,-9,-4,-7,-8,-2,-8,8,-10,7,8,-2,-8,6,-6,-5,-5,-8,-1,3,3,-6,6,8,6,3,-7,-8,-6,8,3,1,-10,-1,3,10,9,-6,-9,-5,2,-1,-1,-4,5,-8,-5,-10,-7,6,5,5,4,-9,6,2,-1,6,3,-8,-2,-9,-5,-2,2,-2,7,-10,-9,-8,4,2,2,-7,10,3,4,-8,3,-1,1,-3,-1,3,-2,4,10,1,-5,-7,4,8,-4,-8,10,3,3,2,-6,1,-8,6,-2,-10,-5,-4,8,8,-10,-8,-6,-4,4,-2,-2,10,1,-8,1,9,-8,7,-7,-8,3,-9,-7,-9,-2,-1,7,6,7,8,3,-6,-2,-9,-9,-8,-2,-3,-2,2,-3,-10,-6,8,-10,1,-4,8,-9,-5,-3,3,9,-6,10,7,-1,-4,5,8,8,1,-6,8,-6,-6,-5,4,-8,-7,8,-2,4,8,9,3,7,9,-4,9,-9,7,-7,-8,-3,3,-2,2,10,3,6,-7,1,6,-5,3,3,8,5,5,4,1,3,-9,-3,-4,-8,4,1,5,7,9,-2,-10,-4,4,4,-1,-9,2,3,-3,-9,2,-8,-5,9,-7,-1,-7,-3,-1,4,-4,4,-5,3,10,6,1,1,1,10,-10,-4,-5,7,3,-10,6,-2,3,-10,7,-4,-2,-6,6,2,6,4,4,-7,-5,-4,3,4,1,-6,2,1,-7,-10,5,-9,-9,-4,4,-9,-10,-2,9,8,1,-2,-6,-10,10,-5,3,7,9,-4,5,-4,6,-10,5,7,-2,3,-10,10,-3,6,-1,8,6,-2,5,8,5,4,-5,-8,-10,4,3,1,-1,4,1,1,-3,-10,1,8,5,-8,5,-7,6,-4,-5,5,-1,5,2,-1,1,5,-9,-9,-7,7,2,8,5,-5,8,-6,2,2,9,10,5,3,-8,-10,-9,8,1,7,9,-6,-3,-7,6,-8,-1,5,4,9,10,9,-6,-9,5,3,-10,-3,3,-10,9,6,-6,7,-8,-2,-6,8,-9,1,4,10,-4,7,-4,8,4,-3,-4,-10,9,-1,-4,8,-7,-9,-4,-3,5,6,8,3,8,2,-8,-4,-6,-1,5,6,-10,-3,6,-3,-7,-10,-4,6,-9,-6,3,-4,-7,1,-6,-4,-4,1,2,-4,-4,5,-7,2,1,3,-7,3,1,6,5,-6,-8,2,2,10,-8,7,-5,-1,8,10,-10,9,-1,9,-6,4,3,-5,-1,2,-9,-5,8,3,-10,1,-8,-1,7,4,4,-9,-5,3,-9,-7,4,5,10,9,-10,9,-3,8,2,-7,-1,5,-1,4,-3,-8,-3,-10,10,-4,-10,-10,-5,4,2,4,-8,-1,-9,-8,-6,-9,1,5,-1,-4,3,-5,-4,-6,8,2,-10,4,-10,2,-3,8,-4,-7,-9,5,7,-10,9,-1,-7,5,-6,9,-3,3,-3,10,-1,10,10,-3,7,1,-9,-7,5,-6,-10,6,-5,9,-7,3,8,9,-3,4,-6,-10,-7,-1,-6,1,1,1,-8,2,-1,-5,-2,-6,7,-5,-5,7,-1,-2,7,-4,5,-2,6,-10,1,-6,2,-8,-4,-3,7], dtype = "int16")#candidate|3741|(640,)|const|int16
call_3739 = func_2649_call(relay.reshape(var_3740.astype('int16'), []), relay.reshape(const_3741.astype('int16'), [16, 8, 5]), )
call_3742 = func_2649_call(relay.reshape(var_3740.astype('int16'), []), relay.reshape(const_3741.astype('int16'), [16, 8, 5]), )
func_2786_call = mod.get_global_var('func_2786')
func_2790_call = mutated_mod.get_global_var('func_2790')
const_3747 = relay.const([-7,7,9,9,3,-6,9,-5,4,-2,7,-2,-10,8,-5,2,4,-1,-5,-4,4,-5,9,-7,-10,-4,7,-1,-3,6,-3,-2,-10,-10,5,-3,-6,-1,10,6,9,8,-7,2,-9,-10,7,-7,-6,1,-3,-2,3,-1,-3,3,-8,5,2,-7,-6,-3,-8,-1,9,6,6,-10,1,-2,-2,-4,7,-8,-9,-2,-10,1,9,-2,3,2,-6,-6,6,1,2,8,7,10,9,-4,-9,8,-6,-6,-10,6,-3,-3,2,-4,-9,6,8,-5,-8,-9,3,-4,-8,6,3,4,-8,-2,10,7,-2,-9,-8,9,-3,-4,-6,3,-3,3,-5,-9,-5,5,8,-9,6,-3,2,2,-2,2,-7,5,-8,-3,7,-7,-4,10,-6,-4,-8,-7,-9,-6,7,1,6,3,4,6,9,-6,8,5,-6,6,-4,-4,2,-5,1,3,2,1,4,-9,-3,-4,-4,6,-7,-6,5,-5,-4,-8,-6,2,8,6,-3,5,-4,6,9,10,6,7,7,-10,2,-8,10,-10,5,4,-3,-3,-9,6,3,-4,-5,-10,-2,-5,-10,-7,-5,3,-3,6,-6,-4,8,-3,-10,-9,9,-7,-2,7,5,2,-1,10,2,9,-4,2,-4,4,3,9,5,-7,6,6,-8,-3,-3,-2,-6,-2,-3,-4,-1,-3,4,-8,-5,5,-9,-5,9,-7,-1,-9,9,9,8,-10,-6,3,4,8,-6,-1,3,-3,5,9,10,-5,1,-2,-9,-6,-7,6,10,-1,8,3,-9,6,-8,-4,-2,1,2,10,8,-8,-5,-6,-10,-3,-10,-10,5,-7,-8,5,-7,-3,10,4,-9,4,-9,-9,9,5,-10,-8,-10,10,-3,8,-9,-3,-2,6,-1,5,1,9,8,9,9,-3,-2,7,-7,-7,5,7,9,9,6,-10,-10,8,2,-5,3,-10,-2,10,1,8,-9,3,2,10,8,6,-6,3,10,-1,-6,9,7,7,-9,1,-4,8,8,6,5,-1,4,2,-2,10,1,5,-9,5,-1,-5,-3,-3,-10,-7,8,-9,2,10,-4,3,8,-5,-2,6,-1,10,-6,6,-9,5,1,-4,7,6,-4,9,8,-10,6,-6,7,-10,-9,10,-7,9,-1,10,7,-1,6,-5,-4,7,-1,5,-10,-4,1,-7,1,6,-9,9,-4,-8,-10,7,8,-4,-8,10,5,-5,7,5,-9,9,-1,5,1,-8,-6,3,-10,6,7,3,1,-6,-1,-6,6,-10,6,-2,1,-7,4,5,-8,-9,-9,5,-10,8,-4,4,4,4,-3,6,-6,-3,5,-4,10,-6,-8,9,-1,-3,-3,-4,-3,6,7,-10,-7,5,2,2,7,-1,8,4,6,4,-4,-8,-9,1,-8,-10,5,-8,-7,6,-10,-8,6,-8,9,4,4,-8,-6,-10,-1,1,8,-10,-10,10,3,8,9,-2,2,2,5,1,-1,6,-3,-8,6,7,-4,6,4,9,-2,4,6,-9,5,4,1,10,9,-3,5,1,-7,-9,8,6,8,3,-5,-4,-2,-8,10,-5,5,-4,-9,10,-1,-9,-6,9,5,9,-6,-2,-3,9,10,2,3,-4,2,-10,-4,2,-4,-5,4,-2,-6,7,7,-3,-2,-4,5,-9,3,-8,8,8,-10,4,-6,-4,-1,4,-9,-8,-3,5,-10,5,-4,2,-2,6,3,5,6,-4,2,-8], dtype = "int64")#candidate|3747|(650,)|const|int64
call_3746 = relay.TupleGetItem(func_2786_call(relay.reshape(const_3747.astype('int64'), [5, 13, 10]), relay.reshape(const_3747.astype('int64'), [5, 13, 10]), ), 1)
call_3748 = relay.TupleGetItem(func_2790_call(relay.reshape(const_3747.astype('int64'), [5, 13, 10]), relay.reshape(const_3747.astype('int64'), [5, 13, 10]), ), 1)
bop_3762 = relay.subtract(bop_3734.astype('float64'), bop_3715.astype('float64')) # shape=(8, 11, 550)
bop_3765 = relay.subtract(bop_3737.astype('float64'), bop_3718.astype('float64')) # shape=(8, 11, 550)
uop_3768 = relay.asin(call_3695.astype('float32')) # shape=(8, 11, 1)
uop_3770 = relay.asin(call_3696.astype('float32')) # shape=(8, 11, 1)
func_2649_call = mod.get_global_var('func_2649')
func_2653_call = mutated_mod.get_global_var('func_2653')
call_3775 = func_2649_call(relay.reshape(var_3740.astype('int16'), []), relay.reshape(const_3741.astype('int16'), [16, 8, 5]), )
call_3776 = func_2649_call(relay.reshape(var_3740.astype('int16'), []), relay.reshape(const_3741.astype('int16'), [16, 8, 5]), )
output = relay.Tuple([call_3739,var_3740,const_3741,call_3746,const_3747,bop_3762,uop_3768,call_3775,])
output2 = relay.Tuple([call_3742,var_3740,const_3741,call_3748,const_3747,bop_3765,uop_3770,call_3776,])
func_3794 = relay.Function([var_3740,], output)
mod['func_3794'] = func_3794
mod = relay.transform.InferType()(mod)
var_3795 = relay.var("var_3795", dtype = "int16", shape = ())#candidate|3795|()|var|int16
output = func_3794(var_3795)
func_3796 = relay.Function([var_3795], output)
mutated_mod['func_3796'] = func_3796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mod.get_global_var('func_2894')
func_2895_call = mutated_mod.get_global_var('func_2895')
call_3805 = func_2894_call()
call_3806 = func_2894_call()
func_2786_call = mod.get_global_var('func_2786')
func_2790_call = mutated_mod.get_global_var('func_2790')
const_3821 = relay.const([-10,-10,7,-7,-8,3,5,-3,-1,9,-3,-5,-1,-1,1,-9,6,6,-1,-8,-10,-3,2,1,2,-5,2,-1,-10,-10,-8,-1,-2,-6,2,4,-9,-8,-4,4,-1,-2,-8,8,5,10,10,-6,10,7,-9,7,-9,-9,-6,-8,2,1,-3,10,10,-9,-3,5,10,7,-5,9,1,-7,-3,-3,-7,6,7,7,-6,-8,-3,2,4,-5,6,-1,2,-4,-4,-9,-3,-10,1,-8,4,-7,6,10,-1,-9,9,-3,-9,-5,4,-4,8,-7,-9,-7,-8,10,6,-6,-7,5,6,-8,-3,-9,-8,3,-5,9,5,9,-2,9,-10,-4,-1,-2,5,3,-6,6,-3,2,-1,-6,-8,-2,-3,-6,-8,-10,9,8,-4,5,-3,-4,2,-6,8,1,-8,-4,-4,4,3,10,5,-8,-9,1,-6,8,-2,10,10,-5,4,9,-2,-1,6,6,1,2,-9,-2,9,-10,8,-2,3,7,7,-7,-9,-3,-10,-6,-5,1,-5,-6,4,-7,9,-1,7,2,-3,2,-7,-7,-3,8,-3,-1,-1,-3,4,7,7,6,7,-7,-6,2,-5,-10,2,-6,6,-1,4,-2,-4,-2,9,5,7,-4,-3,8,-5,-6,-8,-10,-10,3,-7,-4,4,-1,5,8,-2,-7,-1,2,-5,3,-3,-10,-5,10,-10,2,2,8,1,-1,8,-7,5,7,10,-7,-4,-7,-2,3,-1,5,-10,1,8,-2,2,-7,1,-10,3,-3,6,6,-6,9,3,1,8,-5,-5,-5,8,-7,8,-9,5,-8,3,9,4,-1,2,2,-5,6,-6,1,5,-3,5,5,-6,-3,8,2,-9,-1,-4,-3,-10,9,2,-9,7,-1,4,4,-9,-10,-10,9,3,4,-4,4,-8,1,-4,6,-2,4,2,-7,9,-6,-10,-10,-6,10,-3,-4,-9,8,5,5,-2,-7,-8,-3,-2,6,5,-4,-2,1,-9,6,-1,-1,10,-6,-4,-7,7,-7,-1,10,-1,-9,1,10,-8,-9,-3,-3,-6,-7,2,-3,6,-8,5,6,-4,-10,-6,6,9,1,8,8,5,-4,-1,-5,-9,7,1,-1,-8,-4,3,8,-7,-7,7,9,-1,8,-4,-3,6,-6,-3,3,-9,-8,7,8,7,1,1,5,-6,5,7,-2,10,-1,-4,6,3,8,2,-6,-1,2,-6,3,-1,2,6,3,10,1,-10,1,-1,-3,-5,3,-5,-8,-3,3,-1,5,6,5,4,4,-3,9,-4,-6,-1,-8,5,9,9,3,6,-7,-6,2,6,-5,-1,-2,9,7,-8,-8,1,10,-9,7,-1,-10,7,-10,-8,-4,1,7,8,10,8,-9,-5,-8,4,-2,2,-3,-5,-5,-9,-5,7,-10,5,10,-8,-2,-8,9,-8,6,-4,2,-3,4,6,-2,-1,-7,-4,10,6,7,2,7,-9,-3,-3,6,-10,9,10,-10,-6,7,-3,-2,-9,-6,-6,-3,7,10,1,-9,-8,8,2,1,4,-9,-5,10,1,6,-1,4,7,8,-2,10,5,-8,-7,-6,8,-1,-6,8,-9,5,-5,5,-3,-3,-2,-4,2,-6,2,-1,-5,3,3,9,8,-9,-2,-9,1,-1,5,-2,9,8,-1,-2,-1,-10,-8,6,2,3,4,-1,3,10,9,-7,-1,2,3,-10,10,-1,-8,8,-6,6,-10,5,-10,3,6,-10,4,8], dtype = "int64")#candidate|3821|(650,)|const|int64
call_3820 = relay.TupleGetItem(func_2786_call(relay.reshape(const_3821.astype('int64'), [5, 13, 10]), relay.reshape(const_3821.astype('int64'), [5, 13, 10]), ), 3)
call_3822 = relay.TupleGetItem(func_2790_call(relay.reshape(const_3821.astype('int64'), [5, 13, 10]), relay.reshape(const_3821.astype('int64'), [5, 13, 10]), ), 3)
func_2786_call = mod.get_global_var('func_2786')
func_2790_call = mutated_mod.get_global_var('func_2790')
call_3826 = relay.TupleGetItem(func_2786_call(relay.reshape(const_3821.astype('int64'), [5, 13, 10]), relay.reshape(const_3821.astype('int64'), [5, 13, 10]), ), 1)
call_3827 = relay.TupleGetItem(func_2790_call(relay.reshape(const_3821.astype('int64'), [5, 13, 10]), relay.reshape(const_3821.astype('int64'), [5, 13, 10]), ), 1)
bop_3829 = relay.logical_or(call_3805.astype('bool'), call_3820.astype('bool')) # shape=(8, 11, 448)
bop_3832 = relay.logical_or(call_3806.astype('bool'), call_3822.astype('bool')) # shape=(8, 11, 448)
output = relay.Tuple([const_3821,call_3826,bop_3829,])
output2 = relay.Tuple([const_3821,call_3827,bop_3832,])
func_3842 = relay.Function([], output)
mod['func_3842'] = func_3842
mod = relay.transform.InferType()(mod)
output = func_3842()
func_3843 = relay.Function([], output)
mutated_mod['func_3843'] = func_3843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3166_call = mod.get_global_var('func_3166')
func_3168_call = mutated_mod.get_global_var('func_3168')
call_3870 = func_3166_call()
call_3871 = func_3166_call()
func_2983_call = mod.get_global_var('func_2983')
func_2988_call = mutated_mod.get_global_var('func_2988')
const_3876 = relay.const(3, dtype = "int16")#candidate|3876|()|const|int16
var_3877 = relay.var("var_3877", dtype = "int16", shape = (640,))#candidate|3877|(640,)|var|int16
const_3878 = relay.const([5.874601,-6.430585,6.306372,-4.083045,-4.649986,-6.031054,5.129161,3.417540,-6.039971,-4.590518,-7.049993,0.808443,-9.863119,-9.054938,7.882636,2.372548,-5.831564,-0.491742,-9.369946,-2.716635,-4.515460,4.018409,7.384000,5.633230,9.103996,3.984225,9.329639,3.158409,9.268901,7.494454,3.559188,6.328855,9.672588,-6.934246,-0.214820,-2.688691,0.944159,-2.165305,-1.137991,-6.485414,6.719077,7.377982,-2.971470,-6.647256,6.259247,-7.069243,-4.330221,-1.489688,-6.691311,-9.638751,4.014632,0.017649,-6.977052,-9.550978,3.556992,-7.419977,-9.851478,3.876037,-8.575671,-2.939335,-2.713997,6.669488,-4.575701,-2.187790,-6.320824,-3.873342,1.556051,-6.928516,3.604861,7.635413,0.315391,-8.800393,0.919259,-5.148391,5.176603,8.894434,-0.203348,0.213420,7.575259,7.020322,-6.376929,3.988490,8.099566,5.777129,-7.745293,-1.753572,-2.580014,-1.757990,-1.896611,-4.036992,1.557544,9.961017,-1.413433,5.408778,-4.248715,5.170880,-5.513824,8.848023,-6.823035,-7.886095,3.954377,-6.865349,7.322687,9.013228,6.684655,-9.903455,-6.397017,-0.161532,-8.364751,-9.675851,-8.033960,7.234061,-8.875878,5.913729,1.288928,-8.991461,-5.584852,-5.917340,9.948582,8.492980,8.791053,6.573686,-8.306173,-0.630065,5.160095,6.028791,-6.948611,-4.521773,6.182488,3.947182,-1.378080,0.106360,-8.652801,-4.636273,-0.758273,6.200295,1.781489,8.363009,-8.270395,-2.288782,-0.139773,-8.401406,-0.356206,2.194629,-1.886267,-9.760412,-6.914440,2.231032,-3.527127,-1.129450,9.693911,-2.113947,7.897287,-1.653267,-9.555715,7.349613,0.240590,0.123437,9.574025,6.801716,-7.586473,-5.910381,-4.298989,2.355505,3.253313,1.650237,0.478121,-0.876753,7.625064,1.119514,4.837463,-1.624293,-9.857734,2.002559,-0.818801,2.483589,-7.616339,-0.681637,8.236389,2.331797,6.533556,4.348133,6.007195,8.014562,2.014092,-1.586903,-6.690327,6.388797,-1.737600,-5.453255,7.246215,4.465159,1.291263,-7.541906,-5.130782,8.917113,-6.939867,-1.641997,-5.592184,-8.462793,-5.229132,1.444578,2.237307,0.963650,2.912373,9.774754,9.258691,-0.468224,-4.669424,6.650321,7.318132,-3.823663,-3.415225,7.698705,5.905134,-0.249737,-5.995462,-6.787005,-8.368559,5.262171,8.780997,-0.673786,-6.485756,6.036719,-9.611601,6.159197,4.356589,1.794521,-3.589896,0.490878,6.301319,-4.551340,0.993962,4.511896,-6.961877,8.718352,7.391918,8.381905,-0.386079,-7.054526,8.339385,-2.879866,-4.820764,-7.863565,-6.263748,-0.752466,8.710656,1.915447,9.141439,-7.731203,-3.029455,8.013516,-4.097664,7.930833,6.011351,1.635930,1.836773,4.332564,4.787377,-9.730272,0.998909,5.474992,8.471643,9.011523,-8.291114,7.012384,9.892825,-7.670994,8.545257,4.257388,-9.923284,4.937682,-7.754919,5.317144,6.465905,-3.666437,-0.672469,4.089313,-8.575145,-4.805415,3.033396,0.628579,-4.341056,-9.321257,4.000616,-5.260740,-9.940948,8.628716,-8.639174,-3.499758,1.820327,9.569696,0.934420,8.225127,7.943725,-8.390320,3.350761,-4.354225,4.296494,9.310441,-4.844652,-0.843925,-8.132782,9.824033,-5.569050,-9.027477,-3.192279,8.349707,-1.059807,-1.674595,-6.929291,-6.015959,-2.499247,6.792503,3.937744,0.957600,-7.426604,-2.503631,5.033238,-6.893314,-8.794788,0.157101,-5.742276,-6.297861,-4.414728,-7.245153,4.293601,-3.948816,9.003002,5.734514,8.682263,-2.877040,0.673768,-4.007093,0.627501,-1.004885,0.254705,-5.333098,7.938114,-9.656481,8.923685,-3.709706,-4.315924,7.151634,1.635587,-6.673413,0.648589,-2.885536,-7.693110,6.845981,8.941444,5.388524,-1.357453,-0.626464,-9.359568,6.229778,-0.920090,-7.686047,-1.781053,-7.615654,-4.065606,-0.493547,-4.571491,-8.173425,7.577671,-7.427728,-5.272761,1.520867,4.206795,-4.303033,4.642214,-2.517397,2.666942,-8.460390,-1.404263,3.290726,7.623566,-1.970381,2.594668,-0.180453,-8.172924,7.725480,-3.300389,6.270370,5.879512,7.967732,3.481892,-1.946921,-9.645708,3.114100,2.063473,-0.651222,-3.670753,-4.517695,8.814567,8.454101,4.232864,-4.344197,5.116092,-7.564307,3.703262,3.147383,2.477912,-9.831364,-0.336336,-7.803641,-8.380119,3.054257,7.647039,-8.459614,-2.110379,-3.898395,2.830344,-6.555842,0.976962,8.865306,-1.072850,8.560894,-9.439438,-5.277659,5.114710,-5.932176,5.135187,9.296578,-1.705415,9.941506,3.152645,-4.124210,3.907620,1.834816,6.659610,8.237048,-0.498792,2.734266,-4.354605,7.233818,-8.283417,-0.430046,7.076309,-4.538252,7.237588,3.222139,-5.983808,4.562624,-7.896401,-5.460726,3.934986,8.514237,-3.570440,-5.192624,-3.195828,0.170760,-6.385869,-6.036711,6.029120,4.601702,3.136418,3.803409,-5.003281,1.985557,3.703589,0.372219,8.167608,-3.814516,8.273220,3.963545,5.336022,6.273011,-8.039068,8.406657,-9.670760,-9.422894,9.647559,4.752784,6.260162,-6.381266,-4.879820,0.856666,6.275519,-9.043489,7.978413,-7.667056,-6.889518,-5.442447,-7.600401,-1.330969,-3.998833,-1.744578,-5.629605,3.152902,-0.257590,-2.640313,3.030578,-7.213720,-2.804311,-8.175332,-3.911434,-7.836079,-4.227633,0.026712,-3.249144,7.433570,8.913718,3.926192,-4.457331,5.150527,-4.755160,4.160449,0.590348,-9.913351,-7.381947,9.202244,-2.086155,4.974489,-5.865235,2.144312,-3.043119,7.374403,-8.197298,3.586421,-9.965054,7.604785,3.446177,-3.125657,-5.688036,-2.982477,1.091999,-0.014023,5.754806,-9.643506,-3.540999,-8.301999,2.733810,-8.579914,-9.741842,-9.842744,-5.112739,-1.979791,-4.484821,1.020832,7.314446,-5.943813,6.177850,-8.670390,-5.834577,5.069774,-2.796263,-4.880469,5.848669,9.897641,-8.259057,-3.019145,2.230422,-6.979640,-4.719844,9.860602,1.644920,-2.684470,-9.333979,4.505399,-5.298982,8.446374,2.440754,-5.670019,7.203535,-3.416599,3.774780,-6.135278,1.837759,-3.390529,-3.080081,-8.649815,8.713362,7.122069,6.720592,0.027937,9.099049,2.943904,-9.240599,2.528816,8.426189,3.663603,6.598057,-6.190579,5.721304,-6.136415,-8.432758,0.364626,5.447277,2.321773,-1.893898,-3.527023,4.377631,-8.611577,2.188348,8.261062,8.891781,7.277331,5.404520,-8.100118,7.853414,-8.164111,6.120898,5.308679,-1.213383,0.204308,0.881272,-6.987267,3.382102,-1.011509,7.366683,-5.464805,7.559377,8.419022,1.869042,8.734854,-8.641955,-6.019796,1.439575,-8.963379,-9.089764,-9.587989,-0.820376,-1.153765,4.882720,-6.008155,8.731197,-3.344970,7.856719,1.148495,7.481203,0.881944,-9.792811,5.517433,8.074641,-8.119103,5.601584,-7.214417,9.538952,-8.210136,0.637596,3.524538,8.137892,5.015897,1.665672,9.056225,8.236991,-6.665618,-1.962828,-3.064381,-3.388508,1.934313,6.037820,0.086794,-1.205761,-0.913537,-7.378406,-3.022365,4.171843,-5.386713,-9.118611,7.339551,-6.185442,-8.833320,0.145234,2.784913,1.164113,4.765258,-4.004400,0.646189,-2.649440,-7.341900,-8.353792,-4.523455,2.676706,-0.818249,-9.588782,1.934155,-6.744672,0.289229,-8.794640,0.726542,4.141326,2.180986,8.632782,1.172577,-4.631620,-8.589093,-6.467496,-1.646758,-5.640454,-9.482205,-9.270096,4.300640,1.807098,-3.438628,6.472338,8.472705,-7.491650,-3.246040,0.023147,-7.847027,-8.116399,-3.683499,4.271471,-1.083661,-0.097628,8.170442,-8.928624,2.726863,4.658155,-2.457113,2.523100,-3.184435,-3.839163,7.678045,-6.397967,0.095532,-3.664018,4.530131,-2.046198,7.641774,-4.906554,7.331155,-5.889858,-2.267874,-8.159744,-3.266213,-1.701443,2.311949,-1.202062,6.755580,-8.883799,9.923006,-4.712887,3.186432,-6.102538,1.118848,0.005118,7.167743,4.473686,2.428462,-6.715056,8.189012,-1.694124,0.386639,9.973402,3.385157,4.794605,4.778152,-5.138314,-7.714329,5.843199,0.356079,-6.127806,-1.730691,8.309659,2.905500,-6.342629,-7.913705,-6.642465,6.002033,-4.491928,1.475155,8.374083,-1.919500,7.927243,-6.224977,-7.830465,6.403094,-9.532852,7.148627,-6.655246,-9.047599,8.814091,0.115262,-6.014749,-5.820254,-2.471988,7.601166,-5.913963,4.121158,-1.254905,-3.743173,2.564963,-4.000029,-5.988310,3.891330,-2.885438,3.693758,6.577148,1.820227,9.617449,-3.134696,-1.426706,4.667330,9.756758,-3.149455,-4.376790,7.952140,6.029305,2.416007,8.963864,-7.143626,-5.052259,8.503957,-1.377047,-6.365932,-6.580245,0.367555,-5.740329,7.964444,7.723957,0.990818,7.035623,-3.935825,-0.726778,-8.273794,-7.169495,-8.762539,-7.787183,-6.145599,-1.765602,-5.005115,-1.713951,2.035588,-7.601996,-7.209661,2.839449,5.971162,-0.074673,8.656234,7.108384,-2.808791,-6.251377,6.587100,4.885566,5.315635,-7.679253,-4.048808,-5.665174,0.131654,0.290613,-7.215251,3.343008,3.134094,4.814631,7.179312,-3.814505,2.436175,-7.402180,9.938389,-5.991163,4.421135,-4.146773,5.078372,-0.929476,7.992876,8.197399,-8.184464,2.616620,-7.667518,-9.074534,9.582586,-0.152201,0.310600,4.636623,-7.753967,8.734688,-1.975611,2.801931,-0.388368,-7.688978,6.253977,-3.662736,1.038511,5.432564,-4.938001,2.697289,-5.376496,-8.394068,-8.516399,-2.476610,-2.315074,-7.492262,5.397631,-5.853471,3.801558,4.901196,-2.930139,-9.636864,0.967376,-2.608029,7.314527,-9.546050,9.524150,0.221934,-9.621672,-2.871022,-4.485470,-0.607589,-3.728335,6.789059,4.311207,8.107967,-7.482078,1.267835,5.059123,-0.056687,4.058401,8.923130,6.367702,-7.007079,-2.128283,-1.628210,-8.852679,6.680454,-3.901785,-7.448245,6.772959,2.888972,-9.086010,-2.356872,-7.866283,-4.866962,7.374647,-5.972354,4.806739,-6.627231,2.814669,-8.050091,0.804710,1.691467,-7.436600,-4.177061,6.649041,-8.221039,-4.682541,2.153672,4.013160,3.687630,1.030302,2.859600,-1.222408,4.619411,2.454299,6.091333,6.549963,-5.820710,5.126056,8.273935,-3.974035,-9.147566,-8.730196,-5.005218,0.821913,-5.740982,9.757482,7.080343,-9.362116,-4.589598,-4.626858,-7.114731,-8.667251,-3.896737,6.270046,-4.818078,9.562470,3.736639,-2.684229,0.118037,2.017538,8.933660,8.513985,-2.374501,7.349527,5.400903,6.595561,4.359987,-5.255167,5.633162,6.214118,-4.764991,-4.491434,5.967972,3.162566,-5.323235,-7.824160,0.484653,2.034636,4.633717,-7.460935,-2.132602,1.673237,5.045236,4.050365,8.283808,-6.376326,3.563017,7.473777,-3.451904,7.688238,4.579236,-1.800462,-9.699240,8.864455,-2.978851,-2.627265,2.929745,-1.783362,-4.964084,0.841816,-9.618917,5.746754,-3.094786,-4.322321,3.581194,2.845736,-0.333616,8.350070,1.935836,-5.232853,8.111190,1.157658,-6.300944,6.510674,4.490490,6.730936,6.679101,-8.915621,8.602008,-6.875018,-9.470119,-9.491242,9.684358,1.671547,-5.581360,-0.959770,6.771679,-8.936401,4.634352,-5.362966,-4.232855,-0.559677,-7.476027,8.767305,-2.141790,-0.962703,6.320118,4.227635,-8.424234,-1.086989,-4.011423,-8.007652,-6.788439,-8.147657,8.288318,-9.281026,-2.321805,3.857725,2.601146,-5.090509,-5.377152,2.494110,7.373506,-3.688055,6.121195,-0.909827,3.779937,3.519356,0.257421,4.134068,-3.142181,-4.322547,-6.148676,3.656057,-4.908154,6.023091,-9.001931,9.102803,4.793366,-2.733389,-5.385310,5.576914,0.351799,9.228749,-1.041087,5.033923,-8.551498,9.228865,7.188438,5.285857,-5.458802,-2.894551,3.834498,9.994723,4.245389,1.188201,-4.424012,6.469765,-5.846509,2.531360,5.758728,7.347526,-2.807321,5.988018,-3.649024,-8.974669,1.802568,0.105042,-9.500394,-2.242934,-4.950766,4.743474,-9.876571,2.071035,4.894494,5.611619,0.897148,-1.889798,7.286491,-9.427983,-1.288918,-8.385491,9.481304,-6.587577,-9.094182,-6.027532,2.948472,-7.917255,-5.351398,-7.789394,-5.145952,4.816762,-6.793420,4.305625,4.365496,1.692421,-4.456644,3.345104,-7.870167,3.615839,-8.501570,2.804128,7.398746,0.746559,6.488074,8.140621,6.420295,-3.990471,5.216300,6.687893,2.188135,-8.489702,2.908037,6.087113,-5.707247,-4.076323,-2.312945,-4.418751,4.636693,-9.738860,4.979311,-5.004223,-8.341971,-4.016270,4.003985,-1.882212,8.149247,-4.590093,-5.054067,-9.783572,1.188127,-6.318479,-8.231743,5.363433,-4.797806,4.375427,-7.612129,0.895942,-2.355694,-2.300124,7.684132,-9.258093,6.141794,3.638541,-6.158857,-7.769832,3.061793,-4.145814,0.037549,4.763583,4.532686,6.952603,4.417009,-2.206361,4.023118,3.125703,0.431266,5.954266,-0.913174,-3.812236,-3.135420,-0.739741,4.758090,9.978731,7.113089,1.246940,0.320991,-4.952714,6.986546,-5.273285,2.841182,9.645094,5.513761,5.855386,-5.450080,6.081010,8.848742,-0.630348,-5.799347,7.114312,-4.081635,-2.333627,-7.433770,-4.858448,2.294885,-4.867422,-9.578766,1.315585,-9.648886,-3.201177,-1.412573,2.680526,9.432007,4.714611,0.483626,5.034771,4.608387,-9.257847,-6.022698,5.998070,3.270401,-7.793653,9.334760,-9.586231,6.467727,-7.559159,-9.262948,2.502536,3.745476,4.248511,4.039427,6.730121,-3.907841,-7.469689,-1.115244,-9.195364,6.656286,-4.883264,-1.917685,-5.901878,0.090917,3.621369,-1.010498,7.595667,8.027814,0.188791,-6.651640,1.315770,-0.953832,0.730930,7.781435,-5.928959,0.861589,-7.282367,6.591955,8.711406,6.179867,-3.205502,7.267880,-4.986530,-3.475759,8.946261,-2.854507,1.899243,2.392549,4.038887,-9.881296,9.764892,-2.315874,0.240280,3.846652,-7.743647,-0.563165,-7.653550,6.768513,-5.474742,-5.591687,-0.831351,5.667919,0.369410,-2.746599,4.754666,9.146556,-5.672037,-8.771174,1.099674,-8.383227,8.527762,8.668731,-3.732586,-5.297015,-9.841357,0.213906,2.768397,5.590332,9.529929,5.132606,-3.147577,1.315334,3.007049,7.224371,5.877658,-8.377721,-9.060901,6.455246,-9.901834,7.031342,-7.455263,6.437440,8.471159,4.368940,2.763719,-4.688869,3.244554,-4.022652,1.037612,1.135546,-9.607145,0.877702,2.618594,4.599427,-5.039447], dtype = "float32")#candidate|3878|(1344,)|const|float32
call_3875 = relay.TupleGetItem(func_2983_call(relay.reshape(const_3876.astype('int16'), []), relay.reshape(var_3877.astype('int16'), [640,]), relay.reshape(const_3878.astype('float32'), [1344,]), ), 4)
call_3879 = relay.TupleGetItem(func_2988_call(relay.reshape(const_3876.astype('int16'), []), relay.reshape(var_3877.astype('int16'), [640,]), relay.reshape(const_3878.astype('float32'), [1344,]), ), 4)
func_2873_call = mod.get_global_var('func_2873')
func_2875_call = mutated_mod.get_global_var('func_2875')
call_3903 = func_2873_call()
call_3904 = func_2873_call()
bop_3918 = relay.not_equal(call_3903.astype('bool'), const_3876.astype('bool')) # shape=(8, 11, 1)
bop_3921 = relay.not_equal(call_3904.astype('bool'), const_3876.astype('bool')) # shape=(8, 11, 1)
func_3400_call = mod.get_global_var('func_3400')
func_3401_call = mutated_mod.get_global_var('func_3401')
call_3925 = relay.TupleGetItem(func_3400_call(), 0)
call_3926 = relay.TupleGetItem(func_3401_call(), 0)
uop_3932 = relay.cos(call_3925.astype('float32')) # shape=(8, 11, 1)
uop_3934 = relay.cos(call_3926.astype('float32')) # shape=(8, 11, 1)
const_3976 = relay.const([[[-3.030192],[-4.189169],[9.327010],[8.349934],[-9.422966],[5.643192],[1.185752],[-5.254381],[5.671912],[1.201445],[-5.989507]],[[5.551273],[5.163374],[1.640482],[-5.608973],[-1.741823],[8.373528],[-7.089749],[6.370435],[3.491980],[1.803891],[-3.013241]],[[4.356693],[0.685872],[-2.682743],[5.423503],[-4.197910],[2.454587],[0.824917],[0.372427],[4.041072],[-2.848519],[-9.569398]],[[9.634101],[-4.216550],[7.090459],[6.004367],[5.627728],[-5.046494],[-4.785404],[6.453235],[1.625612],[-1.010118],[5.723678]],[[1.910780],[-4.708524],[-8.635427],[-3.215072],[7.045611],[-2.693505],[-7.732090],[8.997463],[5.962198],[-4.182302],[0.261358]],[[8.430869],[-0.613100],[0.869573],[2.226519],[-0.149618],[7.433848],[-1.071427],[-9.183431],[-4.098983],[-0.518947],[7.909036]],[[-0.506914],[5.244562],[8.373525],[8.703965],[-7.937488],[3.009511],[1.592153],[8.810540],[6.103828],[-3.721140],[-4.008552]],[[-3.664332],[0.012189],[-6.234458],[-4.278124],[-9.970922],[8.112163],[-3.108653],[6.265526],[3.560904],[-2.737924],[-2.949612]]], dtype = "float32")#candidate|3976|(8, 11, 1)|const|float32
bop_3977 = relay.bitwise_and(uop_3932.astype('int64'), relay.reshape(const_3976.astype('int64'), relay.shape_of(uop_3932))) # shape=(8, 11, 1)
bop_3980 = relay.bitwise_and(uop_3934.astype('int64'), relay.reshape(const_3976.astype('int64'), relay.shape_of(uop_3934))) # shape=(8, 11, 1)
output = relay.Tuple([call_3870,call_3875,var_3877,const_3878,bop_3918,bop_3977,])
output2 = relay.Tuple([call_3871,call_3879,var_3877,const_3878,bop_3921,bop_3980,])
func_3986 = relay.Function([var_3877,], output)
mod['func_3986'] = func_3986
mod = relay.transform.InferType()(mod)
var_3987 = relay.var("var_3987", dtype = "int16", shape = (640,))#candidate|3987|(640,)|var|int16
output = func_3986(var_3987)
func_3988 = relay.Function([var_3987], output)
mutated_mod['func_3988'] = func_3988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3310_call = mod.get_global_var('func_3310')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_4048 = func_3310_call()
call_4049 = func_3310_call()
uop_4052 = relay.tan(call_4048.astype('float32')) # shape=(8, 11, 1)
uop_4054 = relay.tan(call_4049.astype('float32')) # shape=(8, 11, 1)
output = uop_4052
output2 = uop_4054
func_4068 = relay.Function([], output)
mod['func_4068'] = func_4068
mod = relay.transform.InferType()(mod)
mutated_mod['func_4068'] = func_4068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4068_call = mutated_mod.get_global_var('func_4068')
call_4069 = func_4068_call()
output = call_4069
func_4070 = relay.Function([], output)
mutated_mod['func_4070'] = func_4070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4068_call = mod.get_global_var('func_4068')
func_4070_call = mutated_mod.get_global_var('func_4070')
call_4071 = func_4068_call()
call_4072 = func_4068_call()
func_728_call = mod.get_global_var('func_728')
func_731_call = mutated_mod.get_global_var('func_731')
const_4074 = relay.const([7.297155,-0.058198,-1.774927,3.766588,-9.149388,-3.420014,2.034530,2.094140,7.232808,1.637237,5.153566,-0.355623,-5.506496,-7.996126,1.099856,-3.517769,-1.477312,-6.992032,-0.833209,6.306643,-8.793296,6.243921,2.568289,-6.223665,-9.206107,6.497733,-1.259103,-4.863893,-4.319675,0.097658,1.229232,7.822472,-7.488018,8.905528,5.194688,-3.114526,-8.578840,7.954141,-7.243834,-0.710163,-7.281921,-6.098158,-1.079740,3.073470,8.935593,-5.867694,-5.337804,1.030953,8.002681,1.716629,0.404462,-8.059796,0.010634,-9.886245,-9.125760,7.054818,-0.972007,1.054689,-8.253961,-0.445604,5.911881,-8.685292,-6.944027,3.329997,-1.033992,-4.544432,-5.853688,-6.587500,4.451840,4.424936,0.021093,-0.090703,9.601153,-6.803104,-0.040936,1.525723,-0.342428,4.887884,6.585662,-4.871580,-2.053048,-1.335974,-2.341599,-6.429062,9.293445,5.883935,-2.802711,-8.956118,8.028517,2.888463,6.341975,-1.811980,1.163158,-8.170010,-9.772092,-9.456034,-1.694291,7.272093,0.935283,-3.992556,9.531171,-8.787657,3.185930,5.141628,9.720483,-1.193803,-5.038443,-9.992314,-3.411500,-5.032638,-2.046822,1.041298,0.804277,8.482734,7.071351,3.530828,7.491540,-2.230511,4.750515,4.359925,6.684918,8.130046,-8.083498,7.537410,4.409586,0.049520,-3.227344,-9.515650,2.894346,2.743933,5.448816,-6.730205,-9.767729,5.322992,-3.434151,-0.936989,-4.549303,4.543958,-2.129181,3.329531,0.937834,2.752839,-9.660862,1.930527,3.399964,-3.726430,-0.567393,7.546958,3.110127,-1.676538,2.272446,0.159079,-7.191463,8.667344,5.684047,-7.895575,2.389311,2.102526,2.336706,-3.889689,6.672793,6.195823,3.062463,-6.784939,3.901344,-5.516353,5.002737,-4.118632,4.187700,-4.732660,7.574955,5.167315,-0.577334,-5.866108,1.403981,-3.426170,1.191870,-5.995709,-2.802454,0.571640,0.434603,6.815972,-8.526460,9.719161,7.732992,-0.691591,-5.277218,3.684584,-8.359797,8.464139,-8.817179,-2.619737,5.559643,-3.343293,1.234593,-8.348967,-4.762607,-8.447435,6.310709,-0.965608,0.758808,5.103487,-2.048798,2.652488,-1.240665,-6.194531,-9.704122,-8.416406,-0.091234,-0.957964,2.983798,-0.606903,-1.230394,-3.629642,-1.210996,-9.083955,2.909322,-5.551853,-4.161333,1.631673,-4.764667,-2.457929,-6.361401,-9.798689,7.022925,7.540149,5.483549,-4.134785,-0.268493,-3.451311,9.835635,-4.397900,-3.020247,-2.391976,-1.616492,-2.975366,-4.525860,-6.099360,1.908078,6.415750,3.721014,5.063279,-4.725544,-6.060830,-4.270024,-7.352129,2.505553,3.183871,4.046734,-8.790871,3.919574,-8.584622,3.322752,-6.460214,1.478208,-7.471258,-9.231329,-3.602510,1.821007,9.571523,4.705943,-1.864674,2.392781,-9.027485,2.820160,-6.370979,4.621622,-9.429379,4.148468,-6.509620,-3.953675,9.136934,-4.072513,-9.222694,-0.123259,-3.924693,4.523609,-6.520309,-0.466222,6.538225,-1.947554,-8.474436,-8.847962,-9.839104,2.602584,-2.221784,8.694414,6.275655,9.735731,-6.087542,0.674893,1.728454,3.410132,0.705191,6.528678,5.348254,8.977823,6.299003,8.784544,9.897262,-8.709750,-6.238164,-3.043281,-5.602029,1.099624,8.209067,7.687892,9.103175,5.599349,-6.754018,4.099547,-2.624807,9.686194,-0.255338,2.833079,1.980904,-9.464414,-4.406372,9.689071,-7.555926,5.838545,-1.161121,2.867438,7.925406,-6.627393,3.312780,9.867360,-8.321983,7.134747,5.616316,1.137476,5.148048,5.025085,-6.611037,-0.339412,6.943229,-8.442821,-3.950039,-9.189919,-1.549932,1.725394,-8.845823,5.810146,8.633864,-7.919341,-9.488763,9.187359,0.988570,3.804050,-2.151506,-5.096302,7.422338,2.599514,-8.870581,5.974879,-1.095823,-4.025893,4.146346,-7.277273,3.398258,-3.486357,-6.929880,9.698114,-5.576211,6.490047,-6.653699,-2.731162,-6.404912,3.319567,5.804096,-2.000063,1.483988,1.982834,-0.570746,9.730559,-4.149034,7.324172,9.227644,-5.035972,3.947612,-2.528143,9.389015,8.793131,-9.512886,0.616852,1.922622,-8.588978,-2.741165,-7.194256,7.294460,-8.667088,3.081995,-0.920241,-0.090588,-4.897337,-6.607746,1.263037,1.341252,0.819938,5.878175,-4.153661,-0.780813,8.545002,-5.221472,-7.971273,1.764776,1.435396,-7.982035,-2.896787,-4.805522,9.554258,9.813253,-0.802551,8.202945,7.781630,-0.511623,-8.607410,-9.487180,-8.595726,5.655105,-8.969894,6.756249,1.502324,1.778587,2.588404,-4.056079,-1.113347,3.895084,-9.797399,-4.743772,-5.430626,4.956271,-0.302391,-4.448661,-5.297904,1.810146,7.737881,-7.657990,-1.743290,-6.132165,6.368779,-8.862959,-2.983905,2.927184,0.385667,-7.652320,-0.511627,-4.756069,4.122177,5.191222,-2.069204,-2.558810,-1.715028,-8.507144,-7.345706,-9.210985,5.436074,1.558524,-4.319053,-1.718411,3.229393,4.284688,6.572299,-6.025930,1.695869,-0.822029,-5.470379,4.520958,-3.659850,7.412288,-8.801280,-5.029560,6.920213,5.008379,-9.695686,6.674822,0.904708,-4.610508,-1.893690,5.037491,-1.939933,3.137141,2.901899,6.797487,-9.998567,-1.161583,-3.458479,-9.123165,1.641589,-8.489635,1.617823,8.447152,-7.696687,6.306753,-0.611949,-1.162810,6.806419,4.311255,-0.631182,-1.965791,3.160518,2.779197,1.284872,7.263644,-9.828541,1.296182,3.713762,-6.118845,-2.220183,-2.700577,-2.983900,8.221208,-5.002358,-8.835052,-1.275398,7.696591,-4.557323,2.602689,-4.349207,-5.409535,-0.920536,6.445974,-8.074072,-1.851230,4.886451,3.302718,0.097897,3.155332,7.668676,4.006428,-8.983634,1.013019,9.649888,9.285767,-6.658862,-0.621380,3.011992,-5.944111,9.318893,-7.828810,-4.406585,8.746294,-6.535755,0.106835,-3.417947,3.166277,-3.671415,1.069668,-8.652271,5.880362,-7.008724,4.886746,9.045046,4.260124,-6.387079,-2.797332,5.831368,6.084349,-4.838982,2.242114,3.861590,-6.734020,-6.204197,1.424674,-1.007694,4.707933,9.990619,-9.482533,-1.886379,9.536277,2.515445,2.232171,8.637886,-6.235903,-9.444375,9.488211,9.132063,4.003128,9.407008,-7.055090,1.430085,3.339208,-3.055554,-8.833518,6.491419,-3.849265,6.907818,-6.142816,-9.303155,-0.137019,-9.547976,-4.043468,9.223963,9.593222,-3.829969,-5.351488,4.282584,-7.145758,4.115423,2.502957,0.474580,7.732478,0.716210,1.627715,5.799983,-3.297662,9.099520,3.572077,-9.006034,-8.707038,-9.961630,3.534636,-5.287789,1.511690,-2.527507,-7.792135,-0.140648,-9.195574,3.017297,2.356466,5.057640,8.872467,-1.810220,-7.042203,2.904758,-2.708661,9.856843,-9.706407,2.509393,-7.265234,-8.478980,0.782062,-0.771052,-8.329699,-0.544200,-9.682015,-1.246759,-1.564427,-4.623827,3.353712,6.435713,2.091397,9.685032,-7.285156,-8.313138,-8.082479,-5.470447,2.918316,8.329129,-5.278595,-1.490477,-8.860200,-0.802068,9.610551,6.790742,2.911577,-9.693154,5.930472,-1.810621,2.223591,-4.623338,8.559540,4.661061,-9.533786,-7.006142,-1.061684,3.073080,1.709097,-8.748415,5.932754,-9.966565,-3.848966,7.360543,-4.303322,-5.608332,-6.679886,-0.783765,8.428951,9.347763,-9.296178,-5.692394,-8.743539,5.273247,-3.913639,-9.747908,6.697270,-5.634773,-8.294210,-8.157317,4.706295,-2.755793,4.838935,4.490004,-6.245035,-7.790833,-9.426598,-6.825732,6.049031,3.132393,1.515237,8.434776,-1.449346,-2.457694,7.481637,5.344086,4.972627,7.690224,-2.185357,8.411082,3.266406,-9.360202,6.134434,-9.126906,-3.341805,-3.226308,3.935996,6.347132,3.070992,-2.085279,-7.105442,8.793095,0.465168,-4.773794,9.428970,8.152563,-7.719917,-1.004750,-1.559223,-6.698371,-2.522030,-6.792831,-9.563758,1.943228,0.822049,-0.443704,-2.345512,-3.715739,-9.992524,4.284758,-4.173319,-2.038673,-2.880111,-2.598081,0.698620,-8.318128,1.087318,-4.119959,-8.180554,5.454971,2.136739,0.923868,3.409837,-2.715162,-2.867950,2.116269,-0.662100,3.070403,2.957180,5.263301,-1.004091,-7.100103,-1.532900,4.271539,7.902826,-7.355574,4.688942,-9.782301,2.454885,-8.808803,-6.188015,1.981002,-2.385529,-9.213453,-0.004993,-8.426415,2.089608,2.803609,4.410613,-5.511155,8.728970,-8.255862,-1.443440,-1.947103,9.233450,2.444928,-9.577363,-9.831926,-3.370241,-6.195033,-9.006502,3.349672,-7.469812,6.112137,-5.973634,-9.010854,-6.973908,-5.462843,6.646589,2.831541,1.549718,-6.869626,5.796809,-3.821096,4.145162,-9.606302,-3.906437,3.238659,-9.303170,-2.145767,-3.613817,2.695487,1.665384,5.769725,-8.035749,7.855818,-1.461719,7.782931,-2.253885,7.611831,6.986087,0.041210,8.882543,-6.422480,5.628906,-2.263776,5.931934,4.423466,3.043039,1.552378,3.958138,-3.102170,-7.937486,5.056487,5.607200,6.502468,-3.439035,-3.213719,2.004872,-8.900314,-4.642181,1.612870,-5.145070,-1.527175,2.168001,7.409651,0.654770,-9.465819,3.682176,-6.517306,-1.724673,9.042063,2.915242,2.963890,-9.327589,7.618413,-5.268187,-4.955097,7.326613,3.060581,-7.487864,5.103669,-5.491360,-5.160928,0.108630,-3.253390,-0.142316,2.860929,-8.067011,-1.805046,-5.240215,8.260697,-6.628145,4.906019,-9.894527,2.809863,3.119679,-4.531626,-7.917594,9.403522,-5.351164,-6.005606,-6.659326,-0.653056,-2.926015,7.099419,-9.596071,5.296419,7.715762,5.118900,1.634694,-9.251452,2.371606,-7.462139,3.013593,-5.049450,-7.539809,-0.867562,-2.230669,6.723304,-1.435646,8.199280,3.159176,4.370296,9.096940,-2.271925,1.244090,4.273823,-8.270935,3.844384,5.532520,2.771819,-2.545516,-9.834321,-4.849865,9.538280,3.428646,0.249757,3.882089,4.509000,9.275716,-5.737494,-4.863910,-9.215691,2.496702,3.886032,6.774316,-4.596251,-1.775616,-4.818955,-2.793074,0.875163,-2.672027,-3.303130,-6.847323,-1.961142,-3.962270,-2.127852,-8.483474,5.965023,-9.848605,-9.319615,7.282482,1.083375,-5.796719,-0.484412,7.602146,-6.086787,-4.635908,-3.128562,-3.829838,8.056520,9.244747,4.980701,-1.784185,1.045594,4.491361,-7.677568,8.853521,5.234639,6.577911,-2.291978,5.903117,-9.218899,-9.521105,-0.612812,8.761572,4.065034,-1.718716,-6.485709,0.614999,1.604152,1.531215,1.661438,-3.260732,-5.006740,-6.995024,-0.378172,3.652347,9.755848,2.682822,-7.088811,4.202776,1.842332,0.773496,-7.114941,-4.923195,0.708883,1.604503,-1.509670,2.476671,2.704752,1.560676,-9.185912,-6.407205,-3.624353,9.572792,-2.949381,-7.418078,-9.100118,7.085978,-3.299714,0.836958,-8.774379,-8.910742,-5.532787,9.259838,8.228967,5.666025,-5.026200,-6.599286,-1.678443,5.146596,-1.333382,-8.521606,9.443908,-5.894901,6.890524,-4.654956,-0.121786,-8.432496,-9.760567,7.418384,7.506884,0.280768,-6.442698,-2.269402,-7.440385,-7.765037,-2.634330,7.827470,-4.971593,9.613761,4.147884,7.941074,0.491425,-7.859472,-4.575084,0.125274,0.510145,0.290814,-5.269220,-0.331136,2.941559,-3.072064,9.083813,-3.587065,6.382698,-0.988044,5.702636,-0.159461,2.564996,-0.867668,-0.964451,5.814970,9.513069,-1.041460,9.353305,-5.123181,6.587347,-6.336552,-1.485542,-5.898208,-3.276072,1.013777,9.742367,-9.669835,-0.201666,-4.969403,7.323265,-8.979949,-0.969599,-8.737545,0.849234,-0.052321,5.637295,-5.058623,5.228629,0.992534,8.598180,4.118656,7.350151,2.560873,6.372947,-5.268017,-7.292527,0.269450,6.485183,-8.327844,-9.685390,5.420584,3.679651,6.242021,0.940450,-9.934434,3.781860,6.852231,-6.603552,1.678307,-5.822544,-7.248980,-6.253307,8.259470,2.159646,5.990954,-0.223158,-4.256752,-3.212630,0.396770,-8.792466,-7.462389,7.366089,-3.864703,-2.487970,9.737912,-5.799531,4.903234,7.952812,-3.535865,-2.575249,-7.749831,0.079072,-5.279246,8.389826,9.947704,-8.515744,4.658303,0.870197,3.734100,4.092501,-7.323844,-5.447143,4.602320,-8.955479,-6.180820,8.691494,5.422241,0.087610,-2.708877,7.833797,9.037382,4.751345,-5.548149,-1.623813,-5.925147,-3.291009,1.367637,0.556776,7.380548,1.078253,-5.296473,-7.787444,2.838514,-4.966559,-2.006763,8.512661,3.413315,4.205875,5.621816,6.230454,7.111099,-9.590232,-2.234952,0.357840,1.751264,1.279212,9.981081,8.970984,-8.108061,-2.180005,-4.923723,-4.837144,-3.944628,6.786314,0.553318,-7.268622,-7.477550,-1.237151,-7.738457,-0.442511,-4.422216,3.369590,-0.881196,-0.707548,-7.904627,9.483312,-9.334554,-3.174300,8.602719,-2.616489,-2.860629,-2.073838,7.954651,7.997647,-6.233678,8.656207,-8.286167,9.758506,8.391042,8.253367,-3.344078,-9.319424,-3.461831,-4.736398,-1.165564,-0.879014,6.304620,-4.949054,2.659167,-4.448097,6.739293,-1.205645,-7.749738,-0.926687,6.330113,-0.704758,3.182283,-5.519741,3.874874,2.368480,9.773903,0.699055,-9.526862,6.905989,0.414797,-5.166226,6.390154,-2.553991,-7.543627,-6.407436,-6.988562,7.069225,8.905580,2.548357,-5.710840,9.034002,2.635595,-3.643964,-4.046654,2.745610,4.251431,-6.673591,9.966502,8.201513,-8.754138,5.165121,-9.788023,-0.267649,1.412883,-7.468205,-6.651273,7.782542,-2.309933,-7.596977,-3.454166,0.661192,6.145375,-0.800927,-9.076868,-7.784638,1.943126,-5.107551,-4.758152,-6.128433,-7.951583,-5.930673,-9.126209,-7.651771,9.514186,7.649855,8.769193,-9.933976,-1.709483,7.279116,-8.420999,7.629079,6.464281,6.775418,-0.907938,2.721813,-0.755208,-3.886857,-1.397151,-1.667937,5.077961,7.273583,-9.472488,2.426932,-5.498047,2.505151,-2.125077,1.345631,-4.667911,5.014297,-6.456498,-2.417760,-2.911385,6.897576,4.297247,7.740735,0.141465,8.151989,-7.582651,-6.600417,5.055997,2.399370,8.009138,-6.539577,8.229022,-4.006761,-1.882765,-2.865685,3.887729,8.564652,3.935222,7.870957,2.136123,-4.495514,6.056346,5.186862,0.390513,-7.271653,4.276222,-1.107096,6.382756,-9.174400,5.297019,-7.743951,-3.463340,-8.556758,-3.098671,-2.966645,-6.970299,3.867152,9.494348,3.274029,4.531905,7.807694,-2.211079,9.473257,4.386461,8.375909,2.173195,9.720210,-2.794104], dtype = "float32")#candidate|4074|(1344,)|const|float32
call_4073 = relay.TupleGetItem(func_728_call(relay.reshape(const_4074.astype('float32'), [7, 12, 16])), 0)
call_4075 = relay.TupleGetItem(func_731_call(relay.reshape(const_4074.astype('float32'), [7, 12, 16])), 0)
func_1580_call = mod.get_global_var('func_1580')
func_1583_call = mutated_mod.get_global_var('func_1583')
var_4090 = relay.var("var_4090", dtype = "uint64", shape = (91,))#candidate|4090|(91,)|var|uint64
var_4091 = relay.var("var_4091", dtype = "float64", shape = (192,))#candidate|4091|(192,)|var|float64
call_4089 = relay.TupleGetItem(func_1580_call(relay.reshape(var_4090.astype('uint64'), [1, 13, 7]), relay.reshape(var_4091.astype('float64'), [192,]), ), 2)
call_4092 = relay.TupleGetItem(func_1583_call(relay.reshape(var_4090.astype('uint64'), [1, 13, 7]), relay.reshape(var_4091.astype('float64'), [192,]), ), 2)
output = relay.Tuple([call_4071,call_4073,const_4074,call_4089,var_4090,var_4091,])
output2 = relay.Tuple([call_4072,call_4075,const_4074,call_4092,var_4090,var_4091,])
func_4098 = relay.Function([var_4090,var_4091,], output)
mod['func_4098'] = func_4098
mod = relay.transform.InferType()(mod)
var_4099 = relay.var("var_4099", dtype = "uint64", shape = (91,))#candidate|4099|(91,)|var|uint64
var_4100 = relay.var("var_4100", dtype = "float64", shape = (192,))#candidate|4100|(192,)|var|float64
output = func_4098(var_4099,var_4100,)
func_4101 = relay.Function([var_4099,var_4100,], output)
mutated_mod['func_4101'] = func_4101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2923_call = mod.get_global_var('func_2923')
func_2924_call = mutated_mod.get_global_var('func_2924')
call_4134 = relay.TupleGetItem(func_2923_call(), 0)
call_4135 = relay.TupleGetItem(func_2924_call(), 0)
func_1161_call = mod.get_global_var('func_1161')
func_1165_call = mutated_mod.get_global_var('func_1165')
const_4146 = relay.const([2.456384,-5.614563,3.627789,-2.846454,-2.542102,2.371674,-7.568477,6.238213,-9.555502,-6.392023,-6.186947,-0.842326,0.757082,8.979919,8.584875,-3.848482,-4.101560,-0.536445,-5.171546,7.602609,-3.079345,-5.216953,3.039358,-6.193862,0.799147,-6.616901,-8.006671,4.855727,-1.511116,-7.850987,4.618613,8.758216,4.536741,-5.074104,-7.338948,-9.047973,-7.230807,6.877967,-7.734913,6.581829,-6.275757,-0.779975,-3.160019,0.457395,-6.713842,-0.253268,-0.482674,8.804662,-5.184375,6.936584,5.118344,1.944556,-9.471480,6.756102,9.356269,-9.080274,-3.378328,-9.122645,-8.724661,-1.399412,4.027699,0.573175,-7.775975,4.621236,-3.407117,3.698120,6.623205,6.831226,2.178336,-5.444430,1.607494,7.820263,7.802740,-2.065680,9.823000,-1.841635,8.466018,-9.034101,-6.910215,-5.895638,-9.395324,-5.896814,8.295279,-5.229791,6.289078,9.740046,4.177739,-5.628386,-4.664994,9.180392,6.268272,-7.785435,8.519470,-5.175128,-3.515398,-0.360201,-7.070024,-1.477099,-2.636318,3.696506,-3.186394,-0.115459,0.466745,-2.378054,9.253506,6.413435,-6.191536,3.892637,-2.541011,2.224653,2.037913,6.916023,3.109718,1.604852,-5.221882,7.248096,9.337223,9.784761,-8.427695,-7.766716,8.467544,7.977371,4.955963,9.231783,-2.901042,-3.116882,-7.410220,-4.071577,-7.522049,7.601034,-0.680872,3.573798,-1.456606,-9.308670,-6.952670,-4.679879,-4.364102,3.471052,-7.251248,0.663017,-2.107093,-9.154620,8.938112,-2.722317,-3.744745,8.342289,-7.587671,-5.791140,7.664389,3.066587,7.072139,9.126655,4.370136,3.018244,5.508067,7.474742,1.282284,-9.555428,-8.990543,-2.081265,-4.813177,0.210492,-6.945166,9.959397,-7.071876,5.668099,-7.885553,6.039267,-9.294786,7.935540,4.030627,5.185957,4.361963,6.667160,-9.657767,-7.782742,7.611964,4.918826,-2.853197,4.780701,5.123429,-6.229122,9.825148,-1.253608,2.472958,8.347718,-3.399009,6.384645,-4.419901,2.207238,-8.989361,8.941731,4.329256,4.381797,8.956877,-3.608878,0.306710,-5.654412,-6.029620,-1.070156,2.465506,-4.148254,-4.944284,1.900915,-9.831628,3.854099,-4.026258,0.243563,2.773147,2.404580,3.655111,-6.236051,1.706200,-6.422195,5.247273,7.758140,-1.736394,-7.809106,3.720260,-8.052780,-8.370146,-1.596866,-9.455923,-4.977938,-5.893236,8.038396,1.599527,-5.703636,-3.038190,-9.734599,-2.248017,-6.009063,1.389225,2.716231,-5.159503,-5.289351,-0.143275,-1.394455,-9.187009,-9.785685,-2.601820,1.473440,2.872224,-1.749881,-3.521146,1.349428,-3.823755,7.777673,-0.474498,-1.634174,-4.508592,0.912884,5.516574,-2.113505,-8.992220,-0.079393,-4.269985,-4.109309,-7.257402,4.556007,3.622103,4.865444,1.316788,1.215635,4.762541,-4.786245,2.940509,-9.297473,1.792124,-4.985450,-7.575347,8.941090,-5.419015,-5.569446,-8.043008,1.800328,6.703620,-0.951650,-0.027651,-0.940696,2.236924,8.877482,9.556344,-1.386749,-1.719724,-5.902900,5.117836,7.878547,-7.211587,-1.279500,-7.262299,-4.111129,-6.187294,-5.734383,1.856018,5.216204,9.182825,6.889099,-8.706704,-4.271889,-4.628929,0.197453,-1.958971,-1.586367,7.291708,9.670839,-5.861216,4.261292,-0.392146,7.877658,-2.990710,0.574478,-3.609115,-6.454988,-4.050248,5.093245,-3.628117,-4.027003,-5.083483,2.023131,-9.858202,2.397864,-0.160121,2.629545,-1.774484,-0.491696,9.458962,-3.208242,-1.314725,8.558134,4.105532,-0.716391,6.371981,-8.418580,7.316924,7.156132,9.136167,-1.664656,6.514696,-3.000932,3.925927,8.373898,-8.138696,-7.885492,-3.271061,7.101935,-2.458457,2.813528,7.770095,7.995721,5.849896,-4.763321,1.174187,9.596439,-2.805937,-8.394959,-6.466241,4.470859,-4.224411,-7.704924,5.829810,-2.399307,1.673259,8.670099,-8.579823,7.660405,-0.292579,-1.588923,-7.480323,-9.398838,7.793469,-9.711538,-9.986949,4.953257,1.762951,-9.574511,9.889571,1.003568,-2.775325,6.267157,9.169600,2.637081,-2.689886,-6.778992,4.704040,-0.301200,0.805072,-0.840407,-3.115421,-8.318450,3.727760,-8.261055,-5.569343,1.129437,-8.040914,6.565933,6.546921,4.157072,-5.315599,7.290868,4.858650,-3.100401,-5.434263,-4.016277,-6.242036,3.871981,2.892772,5.579367,4.617852,5.387769,8.762885,9.393908,4.033424,7.503975,-3.028071,8.081470,-9.462884,9.641542,-7.904411,9.291869,-4.990801,4.520266,-7.452458,3.809448,2.061228,7.741017,9.444921,-6.243594,-3.479637,-2.897449,-2.137113,-1.229755,-9.495784,0.479693,3.870583,1.994344,4.077724,-4.753454,0.767311,3.237151,-8.192938,-6.610958,-0.564217,-3.618169,-6.240377,8.405946,-8.824170,1.332075,5.426231,1.170576,7.417976,0.993629,8.991530,-5.641611,8.989764,-2.182457,-3.672420,-8.403356,8.166981,9.297711,1.808408,-5.432494,-5.427914,-8.884533,-3.133402,7.306150,3.954396,2.560186,-3.001640,7.062478,2.611873,8.834638,-9.181841,-0.896239,-5.266959,4.854539,6.709898,1.935314,0.043346,8.027368,8.321002,6.570835,2.025267,-7.171195,-4.214312,-9.422800,9.866934,-4.068973,2.550345,8.911927,-8.805444,1.918630,-4.842539,-9.291054,5.516318,3.227036,-3.135911,6.963347,0.403217,9.988147,4.779282,-7.683079,8.074209,2.423355,4.910756,-7.501038,8.924051,7.168987,-0.277867,-3.117595,-9.762730,-9.144588,-6.510867,-8.239580,0.434675,-7.347969,9.077747,0.278965,5.655010,2.951265,8.999129,-4.418817,-8.870974,-3.565402,1.963254,-9.441186,3.937055,-2.985326,-7.515999,9.801203,-9.144884,-5.331464,-6.064070,-1.063106,-2.139556,7.506440,4.361769,5.821679,2.166081,-3.343943,-7.716795,-9.965563,-1.854740,0.115685,-0.275695,-7.622661,-0.667445,-7.605939,8.606342,-2.115675,6.566622,2.241604,-4.124750,-0.268510,7.967057,-5.274076,8.234873,6.340586,-6.260359,-5.527570,5.423419,0.850181,7.106046,8.034942,7.491597,9.458468,6.020593,8.620073,9.234168,1.005691,3.315184,-0.453944,6.578778,-1.827936,-1.705558,-9.974996,2.299315,-0.419653,8.634061,9.028062,7.652691,9.638334,-9.786312,-4.780591,-5.802052,-0.235513,-5.613735,-5.029854,-3.174676,0.086728,1.174150,-7.241135,8.864821,-4.425552,-6.752116,1.744786,-7.956011,-6.171313,-4.935477,-9.421955,9.526644,-4.051148,0.784279,5.536934,7.371302,-0.144490,-5.245660,7.283586,9.291478,-2.270092,-7.805792,-0.254210,9.523237,2.501037,2.088346,-8.551360,-7.632468,-0.322775,-9.540982,8.991342,-1.441634,-0.920760,-1.801697,6.861582,0.589813,-4.275543,3.497412,-9.372302,2.975023,-2.966120,4.533774,6.404699,7.288555,0.909497,2.921257,6.522342,6.322767,-4.977686,-6.430775,2.816108,-5.778469,8.987457,-4.856869,-6.371331,3.077995,5.526136,0.324601,-6.698912,-5.222795,-9.078664,-8.094126,-7.205454,-3.391007,3.991881,-4.667255,-3.719137,-5.608966,-5.348104,-8.754192,8.021872,-2.066798,-1.725361,1.426571,-7.800371,6.974960,-8.740457,3.549101,7.510365,8.382518,-7.315186,1.986644,-1.017360,-2.425532,9.090538,0.745731,-8.183572,6.836906,-3.019679,5.334170,-6.981700,5.606910,-1.840725,1.233504,-9.011462,-3.327668,-0.405835,-7.208475,-6.898126,-3.925258,0.233092,-2.491373,6.765491,-0.203648,-6.096623,-2.827424,-2.666923,9.417668,-9.111971,-9.892845,-0.304730,7.024768,3.210888,9.901060,-6.832522,7.896856,-9.069939,5.231402,9.191924,0.929534,9.924707,-3.779612,9.146069,-8.619375,3.552271,4.447485,-4.743265,-2.441109,-5.055918,1.931876,7.665099,-7.406196,-5.850820,4.696179,6.205605,6.570612,6.747019,8.814259,-6.198162,-8.871316,-4.250230,3.911243,2.527284,-7.229371,3.750685,-5.364520,-3.730306,-8.246562,3.040227,-8.304426,-5.266408,9.096546,-4.938396,3.202867,9.677199,-6.128256,8.192701,-1.120122,8.403782,-7.305291,-6.660882,-8.851261,0.851111,6.572091,-5.210342,7.424630,8.077857,-8.527708,7.294492,-2.677902,-8.873550,2.615759,-6.438987,-0.687852,-5.358960,3.028777,2.214034,-6.409414,-2.067189,0.385743,2.163828,-7.454301,-8.383305,-9.027836,-1.384238,-5.773153,2.156671,-5.823880,7.491492,-2.513458,8.051116,-6.598959,2.531258,7.070746,-8.815954,-4.075574,8.116648,-2.483317,-3.265509,-4.894675,-9.108750,8.511825,-0.284019,0.702404,-0.300327,3.857174,7.756790,-6.552493,-3.674254,1.527035,6.246569,3.335137,-8.132256,-6.794000,-4.277967,3.629577,9.825324,7.395787,-5.007232,4.094263,-8.466349,-1.265195,-2.594182,-1.782419,-5.352081,3.198617,9.336070,-7.861477,-2.398782,-9.440538,2.232335,0.597977,-2.084916,-7.986160,-9.790622,2.746796,6.849412,-9.464011,1.889084,-2.590454,-3.579190,1.644880,-2.690596,2.462374,-0.722965,-7.667796,0.995744,-0.430744,-8.492490,-4.597688,-6.517465,2.424316,8.246387,2.467027,-8.258183,-8.156727,8.159208,-3.238676,-9.497251,-8.508419,-2.981817,-7.368798,5.940315,9.876582,-2.811495,-9.092398,-4.335644,-6.723731,0.476148,-8.307324,3.735910,2.005802,-5.385291,8.037934,1.910985,8.958836,-6.324960,-1.198677,-0.464490,9.709894,4.054108,5.067764,3.375014,-4.972949,1.831112,-9.798904,5.496523,3.819662,2.377542,-6.743132,-3.181735,-5.349570,-8.910572,-3.644711,6.994196,1.345142,1.969033,-0.008563,-3.622381,-3.178850,2.919786,-7.393862,-5.914304,-0.991355,-3.468322,-3.459274,-2.251759,2.839158,6.390138,2.672790,6.711700,-6.553518,9.585919,8.124868,3.671161,0.377030,-1.050691,2.339892,1.998451,4.522049,7.668209,-1.277530,-6.485965,-0.937340,-9.381003,-4.627307,-5.582342,-4.128334,8.007319,4.017204,0.132876,5.848678,-9.800399,-5.607561,-1.700530,-3.542591,-5.612705,9.886238,-8.523307,-0.920955,0.722872,9.329413,6.766864,9.828058,6.291711,8.887342,9.621222,4.399110,-7.892769,5.609451,8.893846,-8.065563,8.131072,-3.417234,6.624808,-5.316511,-3.136782,-6.509113,4.567314,-1.878592,-2.420803,-8.091297,1.427448,9.197985,2.597689,-0.037274,-0.711195,-2.733412,8.407422,-0.226502,-9.226859,4.633111,-5.262486,-1.130422,-2.089352,-0.388275,6.272164,-3.748249,-0.042404,-7.483893,3.028051,-1.139238,7.480650,7.239048,-8.677325,5.489237,-2.115222,0.868607,-8.618034,-0.932476,-2.373543,8.511305,6.166654,-2.326548,3.439315,-0.369141,-8.013336,7.184248,3.341465,-5.639461,-2.225636,-2.075310,-4.335932,2.081489,-5.050978,8.550457,-3.874105,-3.901071,0.537179,-0.809103,8.314846,4.356134,4.867380,1.900274,0.074040,-0.166445,8.986036,-0.172345,-6.267305,-7.903211,9.543689,-2.562000,-7.990576,-8.574334,8.561166,-4.238971,8.496163,-1.126456,-5.333083,7.226647,7.166793,5.224929,5.003455,7.299316,0.146129,-4.627181,9.470964,3.363962,6.460271,0.186982,-8.615447,8.973168,5.869821,-7.672281,4.941046,6.992459,-9.843856,8.527165,-7.551573,6.151439,-1.209281,3.767944,-9.136202,0.903258,-8.856353,4.729741,-4.058282,-8.670313,-9.549426,-1.474603,-0.405045,5.147151,-3.253477,-7.312888,4.519073,0.823772,8.926222,5.493163,0.616343,0.970677,-1.097143,-7.080350,1.624290,-0.279037,8.024885,4.752812,0.883984,-0.698997,2.062346,-8.303648,0.820855,-6.107315,-0.497325,-7.889847,-3.185750,0.590268,-5.480875,-3.681966,-6.433117,-1.129675,0.899972,-1.253199,-1.375825,-6.695882,6.327662,-6.046296,-1.948898,-5.796380,-9.992341,-7.339655,-7.612088,1.272688,9.362342,1.934937,4.936499,-2.853854,2.974355,3.928377,4.946463,-9.548506,-2.614199,5.182662,8.747261,-1.014335,2.244237,0.750394,-1.983841,-3.252274,-0.290270,-2.136428,4.352440,-1.164868,1.918514,-7.581617,5.930212,9.664315,8.057540,9.030650,-7.597912,4.031111,-0.130174,-4.231731,1.474970,2.979233,-4.579271,2.170126,-8.219581,-9.328265,1.199868,-7.362267,7.575990,6.385947,9.812650,-7.863125,-5.583325,0.756288,-6.355711,0.188748,-7.388737,8.038748,-9.498206,1.067837,-0.167779,-7.412333,-2.617509,-1.872035,6.572253,5.284595,-8.611740,-5.036589,3.346157,-7.723268,5.841823,8.891131,-8.632608,-3.223299,-4.567460,4.724610,-8.107957,-3.135280,-0.774716,-9.608695,-4.642092,-9.651374,8.932584,4.325342,-4.250465,-7.201984,-2.247339,-7.968471,-2.935579], dtype = "float32")#candidate|4146|(1170,)|const|float32
const_4147 = relay.const([[False,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,True,False,True,True,True,False,True,True,False,False,True],[False,True,False,True,False,False,True,True,False,True,False,True,False,False,True,True,False,False,True,False,False,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,True,True,False,False,False,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,False,False,False,False,True,False,False,True,True,True,True,True,False,False,False,True,False,False],[False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,True,True,False,True,False,False,True,True,True,True,False,True],[True,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,False,True,False,False,False,False,False,False,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,False,False,True,False,True,False,True,True,False,True,True,True,True,False,False]], dtype = "bool")#candidate|4147|(4, 112)|const|bool
call_4145 = relay.TupleGetItem(func_1161_call(relay.reshape(const_4146.astype('float32'), [13, 9, 10]), relay.reshape(const_4147.astype('bool'), [448,]), ), 0)
call_4148 = relay.TupleGetItem(func_1165_call(relay.reshape(const_4146.astype('float32'), [13, 9, 10]), relay.reshape(const_4147.astype('bool'), [448,]), ), 0)
func_3310_call = mod.get_global_var('func_3310')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_4149 = func_3310_call()
call_4150 = func_3310_call()
func_3233_call = mod.get_global_var('func_3233')
func_3236_call = mutated_mod.get_global_var('func_3236')
const_4157 = relay.const([2.597662,9.157624,2.947220,-6.926517,7.186091,-2.910336,-4.649245,-5.418686,-7.999567,-0.660597,-7.157209,2.297365,3.204583,-6.044251,6.177449,-5.435672,2.167567,4.386717,-7.307061,9.276003,3.632770,6.155422,-2.407932,-1.859769,-5.326801,5.513206,7.311579,-9.974225,9.480804,-8.933818,1.761233,6.530942,-5.896368,-9.883456,5.975336,-0.725959,1.514227,-1.858905,2.191412,-8.907742,8.118750,-3.076313,-3.239290,1.106296,-2.210034,-7.472949,-7.340758,-2.962676,-2.013355,-5.123783,2.319493,-7.913903,-4.248338,-9.996528,-6.693366,1.672755,-1.421936,-1.477829,-4.743181,-3.129194,4.385442,1.852173,7.486358,-0.446280,-7.593610,6.583022,3.329225,-3.272765,-7.828257,4.796363,4.047347,-8.754942,3.361254,-7.274962,6.106720,-0.445584,4.140977,-4.869710,1.792852,-6.814993,3.504765,7.951952,-1.102355,-7.216068,-9.945074,4.843361,5.202072,2.817507,-9.283185,-0.174828,6.114558,8.472890,-5.302379,0.809155,-1.652433,5.605743,4.578797,7.672400,-2.554349,-1.149098,9.368905,-9.279291,0.651673,3.943946,2.527954,9.167340,-9.880080,3.817222,9.630772,1.584940,8.436822,4.968051,5.435474,-1.482137,6.031300,8.769690,-9.684622,0.919240,5.363592,9.183438,-6.257825,6.184618,7.560813,-5.009756,6.207304,2.108863,-4.511524,8.861480,3.309682,-3.627069,-1.945862,6.211377,1.852638,2.759755,-8.874745,-9.566370,7.035817,2.938998,-7.395192,4.918001,8.698598,-5.073077,-8.323564,-7.914280,0.646518,-9.885976,-3.164022,-0.649762,-6.618642,-1.639489,0.626351,8.136567,6.750503,3.486458,-8.020327,2.640799,5.971608,-3.867081,-0.935474,5.341177,0.538548,8.628416,-5.781472,6.915947,7.221189,1.882119,-9.603644,-9.846653,7.920676,-5.779852,-7.116446,-6.184581,9.967908,4.458175,3.290588,-2.228149,-2.454004,-8.146928,3.897213,9.885292,4.053087,9.843269,-9.128736,6.820110,-6.639466,6.535038,-0.679000,-8.177680,-4.198318,7.869116,1.590747,-5.167290,5.343804,-9.770249,2.018136,-3.033702,-6.472770,-3.336419,4.902553,-3.007821,5.744555,-9.899317,1.600481,-8.182006,0.075640,2.534813,3.219314,-8.926667,-0.306139,2.968730,0.263659,1.342938,-8.028574,-2.795129,8.994843,9.446494,-6.202515,-1.256758,-3.022149,-5.204939,-5.921594,-1.721396,7.915195,0.004328,4.510658,6.700885,-0.988779,-0.972426,3.713617,-0.805922,-1.045288,7.931712,1.191233,-4.636120,-7.356014,5.123401,8.081498,-8.165051,0.035802,-5.107467,0.713161,7.052467,-6.278732,-1.889770,-5.497989,2.406201,-8.235612,3.962525,-7.004832,3.292436,-1.569642,-5.554593,5.812829,2.783052,-3.426467,0.603718,8.514163,9.425941,6.112233,5.845552,-0.540699,-4.774429,-6.833012,-9.265284,1.041806,4.895882,0.347930,6.060886,9.191668,0.332849,1.934402,5.303936,2.796921,-8.675733,-2.294156,-8.265909,-0.173651,3.409977,-5.757931,-4.806859,6.488269,-9.044438,3.853371,9.737527,-4.941240,-0.549493,-2.876202,-3.467460,-4.846191,-9.722181,5.924905,0.206524,3.836581,-1.273139,-9.641013,3.187168,-8.071035,-4.174861,-7.863326,-9.034151,-5.436344,-3.081347,-1.423393,-8.646632,3.996431,4.363456,9.079291,1.559165,7.800005,4.045629,-9.851483,-2.130954,-9.370457,-7.341669,-9.145291,3.736242,8.795226,8.212752,-6.345037,-4.221566,-1.320215,-6.868033,-1.570943,-8.781004,7.184669,9.012633,4.316131,4.319083,9.567892,-7.034994,-4.465161,-8.491555,2.696460,-6.131383,-8.231390,7.655477,-1.697961,-5.123282,4.528104,3.549158,-3.153512,-8.326959,-2.213025,6.507464,9.800309,3.821058,1.709602,6.662610,-4.329958,0.605806,-1.183129,0.743852,-5.407304,2.695312,7.035183,4.055013,-8.478982,0.970497,0.890287,-2.921254,-4.818957,-3.216035,6.540634,-5.646828,2.003008,-0.843091,-8.367753,3.436594,-7.152059,7.499363,9.272036,4.298070,-2.036001,-6.815400,-8.078158,2.858825,-4.789758,-0.834046,1.572721,1.175631,-3.897579,4.174035,-8.870491,-7.634004,5.991127,-2.543961,-8.364658,-2.665831,-9.113216,-1.168489,1.045414,8.919993,9.667801,-4.205168,-2.125726,-2.116605,1.536623,4.002737,-6.226091,-9.345886,2.433828,-3.048446,4.783365,1.140797,9.575300,-8.753078,7.703492,-5.496104,0.797086,7.496360,6.281687,1.506800,0.509121,-5.202092,-7.273766,-5.476712,5.651276,2.033812,9.696184,-5.169250,-6.476181,-7.430124,-0.487873,-5.725256,8.276550,4.086256,8.972089,2.872535,8.748272,-5.618109,1.511581,-8.469405,8.044168,3.777618,-6.433604,7.203903,-2.988507,-5.389668,2.905950,-1.752208,-4.202589,0.582278,-5.254936,8.931181,-9.639254,9.079240,-1.067841,-0.764333,4.428520,-5.980754,3.538117,-0.117897,2.353095,-7.466583,-5.948864,1.811961,-2.125160,-3.947863,-0.355514,-0.843445,-9.600253,-2.954690,7.981245,-8.631131,-4.168120,-8.292122,8.888275,7.338718,2.474241,2.483642,-1.228108,3.049686,5.828210,-7.423994,9.337113,-4.671160,-5.268229,-2.261331,2.531985,4.119821,0.929894,7.026633,-8.664754,-1.993744,-7.671568,5.726018,-1.497874,6.046938,1.211066,0.166949,-5.268943,-3.596496,-4.458917,8.278425,8.914357,5.921364,-2.591679,5.421892,3.893689,0.453875,8.482767,7.981058,5.429009,6.178179,-8.245276,8.752678,-5.676052,8.115284,-9.908323,-7.764915,4.157533,-9.100205,-7.229312,5.015596,3.487483,0.799580,7.951942,1.156355,9.627363,6.300830,4.654450,0.852985,-0.832473,3.366911,4.256910,0.848408,1.479511,-3.565752,5.049415,-9.522374,-9.835467,-5.813776,-4.686072,-9.010396,-4.020085,7.260571,-2.382866,-6.055356,0.542657,7.941077,0.378984,-9.505023,3.794646,8.671223,-8.814263,8.400820,5.084966,-3.451792,5.716324,-4.147057,5.112809,-8.208404,-3.563582,-9.445891,-3.323246,-7.277875,-1.085244,-7.554848,2.122538,2.021760,3.183290,7.781781,-1.977777,-7.645608,-6.789463,2.641135,-8.802264,-1.201834,-1.044839,4.792576,-8.199681,5.128115,-4.603096,-8.592260,6.895491,6.478323,9.235996,2.205063,-0.746247,9.107427,-3.631902,-2.394416,-3.894084,6.885529,-7.200451,0.833911,-9.893918,0.198851,2.733971,4.493017,4.006734,7.578878,0.526848,-4.447035,4.943464,-1.414802,0.540297,-3.431729,9.813175,-0.106562,-8.683080,1.173012,-0.244280,4.383606,-7.171046,-2.648532,9.929399,-8.642626,0.674178,9.523835,6.374234,-0.844340,-7.461552,-3.473205,5.283434,5.938391,8.272258,-2.435981,-9.720385,9.508644,-4.750618,-7.154610,7.551366,-1.565521,-3.834563,3.860001,-3.111144,-7.577624,2.142052,-0.305425,6.259770,-2.277206,-0.717918,5.070244,2.106716,-5.828800,-2.016231,1.020021,7.311807,-5.134693,8.302254,9.213098,-5.761351,4.864188,4.466343,-6.630875,8.354895,2.776173,5.705413,-2.474317,0.546090,6.518657,-7.770206,3.689852,-1.960533,7.418905,-5.591724,4.874924,-7.170723,-5.866858,0.476417,-4.582033,4.708408,-7.754337,-0.199848,4.028801,3.740910,-7.576311,-1.064914,-7.723795,3.720794,-2.115528,-4.047349,-6.442991,-8.921551,-6.023592,5.338815,8.615427,-4.018061,-1.043301,-3.227717,-8.202780,-1.156459,4.263818,3.708478,1.234225,3.024204,-6.602439,-4.919301,-0.904469,3.935281,-4.067187,-1.679088,8.110250,5.359888,6.269484,-9.546921,-5.311925,-8.502806,8.737939,0.912739,9.344913,-8.144364,-3.396027,-3.468246,-5.960612,-1.426845,5.432408,-3.301956,2.571536,-1.632769,6.986918,0.080108,2.134580,-7.094268,2.475495,5.868101,-1.322251,-2.422231,-6.784524,-2.606710,-9.257693,6.499206,7.030730,-7.604375,-7.921309,3.594614,8.221654,0.988536,4.303767,2.846769,1.535807,8.518656,8.652116,-3.758055,-8.358407,-6.585537,5.390887,-8.546152,6.855575,-0.960068,3.200944,2.954060,-9.461177,2.450068,-4.382424,-3.869845,-6.198193,-5.782618,7.252240,2.079226,8.906197,-4.182049,-4.841934,9.269607,7.119455,3.299964,1.281148,-8.624646,7.621918,0.710472,-5.120301,7.090261,2.126824,-4.693495,-8.752575,4.600144,3.433590,7.904185,-5.597303,4.070518,-7.233451,0.459732,-5.889801,5.191682,6.612913,1.562503,-1.451409,-4.402697,-9.483344,-7.788771,6.004803,-2.866751,1.826628,-6.628891,-1.867497,8.158678,-4.133193,1.872676,-6.547159,-2.793574,5.600419,-9.529428,-4.167247,-1.324697,8.682677,1.610239,-1.127210,-9.906268,7.344794,5.202437,-7.586468,-3.718437,5.799989,8.178259,-9.998365,-9.385898,-1.590002,8.803726,4.299053,5.570725,-8.981685,5.263952,8.236774,-9.039430,-5.997579,-1.574841,7.885170,5.544209,-2.076942,-3.988812,-5.282810,1.388743,7.050277,3.249778,-2.745477,-0.029881,-4.632265,2.154691,0.433844,-6.651799,1.081374,-4.537552,-5.251732,-8.932311,3.365651,6.472796,7.573556,-0.779961,-6.527225,0.810391,-6.454766,9.212987,-7.719529,-7.470029,8.167015,5.648772,-0.820792,2.761254,-9.255238,8.367473,-8.128143,6.344574,8.785432,4.053683,-7.408407,-6.486178,-2.410942,7.394493,-4.560773,-0.684502,-2.185653,0.909872,6.876529,5.326422,-1.837081,1.582417,-6.041069,-5.030483,-7.157082,0.254454,-3.200887,-9.635298,2.952723,4.987315,0.840131,7.628609,-3.985249,-7.816527,9.806811,7.307945,1.798936,7.286250,7.664702,7.512127,0.434591,-7.218651,8.863952,-1.711930,-7.624856,-4.610504,9.938363,-1.256095,-4.837933,2.445920,-2.302920,7.093407,-8.724100,4.076036,-6.986421,0.094635,7.272599,-5.248830,-0.164236,-6.470219,-0.104697,6.661114,-3.532908,6.079257,-1.786713,3.360487,2.515302,-9.287421,3.596338,-7.171178,2.398173,0.318759,2.588909,1.015940,-6.391181,7.423339,-1.255238,-7.843532,-0.529419,-3.992740,-1.943419,7.289355,-2.296367,4.308563,-0.428118,-1.693372,-5.360664,-5.105351,2.846705,6.232452,0.607895,-7.482760,1.347103,7.964529,3.757354,9.193064,8.707503,9.157559,-6.788389,4.132458,-7.308866,-2.074003,1.537981,2.205580,-3.882463,-4.422828,9.364841,-8.701972,9.138231,-3.622679,7.770146,-7.796506,-2.677490,-7.320986,1.669151,3.896070,5.024627,-3.038448,2.691921,9.214646,-5.146594,9.666029,8.891623,0.449516,1.241972,3.334921,9.182492,5.325100,1.518546,-7.853191,9.485627,2.914356,-7.044598,1.041696,6.160718,1.272759,-9.205552,7.781995,-0.013249,-5.851782,-9.969151,-7.804534,-7.026856,3.249381,-8.996571,-2.029457,-5.547648,-0.862420,8.513242,-6.907166,3.457239,-6.242543,-5.436241,6.376680,-0.840605,3.732022,7.077820,-9.433544,6.303298,8.410630,-0.823227,-8.221588,8.917825,2.469139,-8.061167,2.432590,0.601724,-0.409601,9.469307,5.894519,9.511001,-5.220522,-7.590930,-2.071585,1.314528,3.446818,9.034211,-0.976671,5.510358,1.878357,5.962118,4.986318,5.404078,-7.740499,9.522562,-9.722069,-9.050290,6.654192,-8.706650,4.079136,1.848918,2.641246,-5.894435,-9.607900,5.489038,7.983207,-3.683810,2.887375,-0.157861,3.310324,6.925952,1.947848,-5.124500,2.463107,-4.345752,-8.930789,6.140087,1.500630,4.818220,5.102418,8.071314,3.441458,5.562288,8.037711,6.307499,5.440491,3.782795,-7.881869,6.129402,-5.346958,-4.882827,-0.627642,-5.367185,0.942041,7.535066,-3.564607,-7.085904,-3.399944,-0.488038,0.253144,-6.450750,8.588202,9.015986,-2.078759,8.603302,1.745530,3.761540,6.852281,4.842428,-3.570723,-8.202438,3.239819,-7.922024,-0.553285,-8.545198,-7.158649,9.505352,-6.132631,-7.462735,9.863073,0.377924,2.106907,-0.433297,-4.191656,-6.105776,-5.579420,8.209327,8.880118,-8.230273,-6.436027,8.878158,1.955095,-1.141746,-4.770121,-6.600240,-1.709327,-2.599749,6.499299,2.687586,-3.034167,-4.183546,-5.946296,-0.514335,0.315665,9.604490,7.272816,8.895917,8.325442,-1.069308,-4.533808,-9.081459,-6.873817,-2.368618,1.277536,0.488648,4.632163,6.177449,9.790895,1.107398,-2.444056,9.441569,-7.718070,-4.036458,-9.681671,3.849015,-5.398005,-5.160957,-3.503100,-6.662807,-4.633828,9.231753,5.370306,0.401468,-7.585672,4.544468,7.035469,9.236608,3.090078,-6.910240,-4.154400,-9.873952,2.759193,-8.030074,-1.684904,1.277242,-2.490582,-9.317892,2.851075,6.788564,0.014041,-9.289627,8.681981,-8.034569,-9.633181,-6.961504,-7.872217,3.090079,9.818246,1.474710,-5.255960,-1.797574,0.302763,-2.410216,-5.529141,-4.891284,-9.972811,9.264259,-7.667803,1.169194,-9.799429,-1.742729,-6.580245,-4.501419,3.855773,9.803372,-8.445300,-9.211665,9.514419,4.153147,-0.859843,9.834461,-8.952046,-3.542225,-2.498503,3.782309,-1.884039,6.582764,4.239979,-5.955475,7.745442,-6.284767,-5.414218,0.139085,1.379729,9.165095,-5.510978,6.179320,9.058641,-0.648244,1.582206,-1.285960,4.310491,-0.005844,7.482678,5.391549,4.565648,9.458469,-2.911949,3.830625,6.134508,-1.551666,7.482981,-0.284718,0.429853,-8.492568,6.633623,-3.322985,-5.062835,5.345189,-7.533934,-4.030784,2.298627,7.360005,-9.789325,3.677758,8.114601,5.007622,7.381293,-9.644831,-2.752373,1.116520,8.305546,-7.940180,1.235509,-5.532847,-3.168413,9.052031,-3.988046,-4.525706,7.823584,-2.356623,2.905623,9.030402,5.206882,9.568713,-8.555170,4.136328,1.626946,9.763595,-5.862369,-2.896137,-4.861758,-1.558808,-1.012581,0.604279,-1.447774,-7.874936,5.424344,8.678052,8.411521,6.984174,3.813415,-7.336396,-2.827250,8.310770,3.562259,-1.842723,3.841504,-6.852143,1.591401,0.926031,7.997411,6.021631,6.154683,0.521997,6.996362,-1.764704,-3.839244,6.002958,-3.364825,2.065000,-0.386885,4.573095,-1.909514,5.397091,1.778393,7.681620,6.216508,-1.089526,2.549730,8.009079,-7.441453,-0.205114,-6.586791,8.194711,-0.774422,-5.643324,-0.711020,6.137460,5.915561,-5.412042,4.206546,4.335302,-1.821485,-2.133201], dtype = "float32")#candidate|4157|(1320,)|const|float32
call_4156 = relay.TupleGetItem(func_3233_call(relay.reshape(const_4157.astype('float32'), [8, 11, 15])), 1)
call_4158 = relay.TupleGetItem(func_3236_call(relay.reshape(const_4157.astype('float32'), [8, 11, 15])), 1)
output = relay.Tuple([call_4134,call_4145,const_4146,const_4147,call_4149,call_4156,const_4157,])
output2 = relay.Tuple([call_4135,call_4148,const_4146,const_4147,call_4150,call_4158,const_4157,])
func_4163 = relay.Function([], output)
mod['func_4163'] = func_4163
mod = relay.transform.InferType()(mod)
mutated_mod['func_4163'] = func_4163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4163_call = mutated_mod.get_global_var('func_4163')
call_4164 = func_4163_call()
output = call_4164
func_4165 = relay.Function([], output)
mutated_mod['func_4165'] = func_4165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4068_call = mod.get_global_var('func_4068')
func_4070_call = mutated_mod.get_global_var('func_4070')
call_4169 = func_4068_call()
call_4170 = func_4068_call()
var_4182 = relay.var("var_4182", dtype = "float32", shape = (8, 11, 3))#candidate|4182|(8, 11, 3)|var|float32
bop_4183 = relay.logical_and(call_4169.astype('bool'), var_4182.astype('bool')) # shape=(8, 11, 3)
bop_4186 = relay.logical_and(call_4170.astype('bool'), var_4182.astype('bool')) # shape=(8, 11, 3)
output = bop_4183
output2 = bop_4186
func_4193 = relay.Function([var_4182,], output)
mod['func_4193'] = func_4193
mod = relay.transform.InferType()(mod)
mutated_mod['func_4193'] = func_4193
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4194 = relay.var("var_4194", dtype = "float32", shape = (8, 11, 3))#candidate|4194|(8, 11, 3)|var|float32
func_4193_call = mutated_mod.get_global_var('func_4193')
call_4195 = func_4193_call(var_4194)
output = call_4195
func_4196 = relay.Function([var_4194], output)
mutated_mod['func_4196'] = func_4196
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4239 = relay.const([[[2.244788,-7.557300,-2.179965,-6.046895,-5.259721,0.325711,5.427437,2.746230,-2.309414,-0.399781,-7.892224],[-8.624952,-3.325914,6.708798,-7.511742,2.519910,-8.970298,-9.132946,9.508637,6.757785,-7.258434,-5.134705],[-0.108345,6.070441,1.742643,4.326749,-2.707648,-3.258059,8.775646,7.613283,-6.151251,6.995814,-8.301365],[7.530450,-1.919196,3.230763,5.943900,-6.969113,2.777574,-2.362494,-6.228967,-6.699781,-9.770739,8.098466],[-7.719366,0.783744,9.518470,0.924251,-5.894904,5.476128,7.235622,-2.394149,-2.892055,1.069253,-3.127422],[-4.496086,1.749350,-1.163066,8.266229,3.951051,-0.668956,2.394323,2.927839,2.673598,9.042290,-3.822478],[3.739026,-7.935813,-2.715854,6.018242,2.955034,7.041236,1.254299,-1.762546,7.681215,-2.896549,8.296701],[1.150134,9.663818,-5.048797,9.368319,2.850897,4.043204,-5.573155,1.702247,7.209058,6.169941,8.719432],[-6.291909,-5.306958,0.205838,2.990907,-3.550916,0.301630,1.683663,-0.631702,7.057731,6.278408,8.400368],[-8.528609,6.148838,-5.909006,-3.533834,3.554630,2.219452,-1.435769,9.555331,2.021380,-3.024205,8.216115],[4.187403,-7.449133,3.889606,6.528034,0.042967,-8.143331,4.465988,7.436890,-5.466490,-1.958719,-6.139668],[0.734901,-1.372548,2.283727,8.271301,-6.022496,5.814799,8.043212,-1.780353,3.422695,-2.588589,1.112622],[-2.634381,2.224282,0.226096,7.361940,-2.895156,2.062724,7.025120,4.383921,7.110561,6.955468,-9.035343]],[[-0.326112,-4.545782,-0.220256,1.297711,-4.486720,5.903896,-9.485782,-6.136576,-4.485200,-0.038125,6.735515],[6.631413,3.218698,2.870081,6.783019,3.539718,-9.398918,0.705707,6.272570,-1.531312,5.227215,9.884075],[9.293040,4.081111,6.515893,6.559467,5.308375,5.526277,-9.717166,-5.047675,3.655568,1.811760,0.208894],[-3.944273,5.981590,-6.707877,-2.570124,-2.114351,4.725140,-3.553403,-3.450550,-3.422677,-8.381622,-7.190926],[-9.246157,-3.822262,-6.650400,0.668569,-8.668672,-2.734618,0.981257,-6.781135,5.083669,9.244756,-1.682604],[4.861482,9.847382,9.046167,9.368780,-4.433774,-1.932911,8.669983,-4.302104,-4.360157,5.745057,-4.976038],[4.055154,-7.906796,-3.307680,-2.138920,0.442789,2.623243,6.044572,-7.787839,-3.012236,-8.754902,2.382616],[6.329909,-8.205005,4.899526,3.978961,-1.922448,-7.696631,0.437699,-9.026304,-0.716617,9.993478,3.233240],[-5.718162,1.423636,-7.973939,2.854710,-7.173733,-8.547312,-8.807796,-0.495009,0.362238,-2.504248,3.711644],[-0.794951,0.803753,-9.087477,-3.507746,3.726484,4.245208,4.384382,-9.776359,-9.261936,-1.878945,-6.586227],[-8.199230,-8.465904,3.604372,5.496727,-3.586884,9.104945,-5.483934,-9.551403,7.801435,4.305802,-9.985907],[-4.184889,4.181384,7.240620,9.352350,-2.212505,-7.880336,-3.130700,-4.863986,8.752814,6.552961,-9.094442],[-3.138675,6.490204,1.948054,-4.382577,6.280216,-0.001942,8.008412,-2.975114,9.796478,-7.447496,1.507871]],[[-4.708144,7.361056,-0.065887,-4.185801,-1.493009,7.033286,-1.480213,1.397157,2.754878,8.705676,3.757634],[4.144562,-3.679638,4.458150,7.603911,4.814578,-7.249331,7.267922,3.816074,2.252614,-9.951495,0.954460],[7.923595,4.104390,-0.329459,2.732212,-5.280073,6.987522,3.645315,3.396779,-7.172229,-2.995556,6.133727],[2.983195,1.966416,6.187419,-7.195172,-4.892290,9.345007,-9.721006,5.780671,8.164102,-6.337892,-8.347647],[7.474796,-1.517084,-0.113228,-3.842856,-6.729808,-5.990879,6.788418,3.245714,8.975106,3.068037,-3.985363],[-6.103147,3.861640,3.739633,-5.486923,-6.001674,4.264071,8.368231,4.047422,-1.410641,-5.442450,-0.774303],[-5.527514,1.183765,3.470171,-2.090992,-4.583275,2.008422,-7.799663,0.507922,-6.386168,9.679994,3.425923],[0.604653,-5.808046,-9.988176,3.671955,-5.920094,0.085394,9.419544,9.096351,-4.796714,-8.425482,1.493031],[-9.825673,8.326506,-8.955761,-0.549558,-8.187567,1.032526,8.108725,5.965319,-7.944224,-2.078377,6.963174],[-2.552329,0.048452,-5.570877,6.562554,4.822375,-2.574967,-5.009543,2.551227,-0.926960,1.342812,-4.730212],[-0.129239,2.705454,-9.827209,-8.113795,6.595190,-7.600547,1.109227,-8.777019,-0.294557,-4.922755,-2.102223],[-2.420799,3.184094,3.267219,-7.430704,-2.650266,7.964750,7.126186,7.338638,8.831911,-4.103853,-1.404823],[-0.461728,-6.149009,-9.778143,-5.602160,-9.600709,-0.491733,3.788887,-7.602823,8.801602,-5.097948,-6.297455]],[[-4.196163,5.812513,-1.705224,9.613410,9.070024,0.822391,9.142483,-4.852172,-4.803111,-4.241814,7.752542],[1.542114,0.262938,-1.531346,5.396154,9.177773,-5.099082,-8.105267,-6.765611,2.780340,0.827319,-7.062131],[-8.803956,-6.956991,9.489818,6.840785,2.491965,-5.540383,-7.646123,-8.359920,8.985167,3.626924,5.359321],[-0.623233,-7.028429,2.680268,-5.948997,-7.407705,3.043375,9.635370,8.816528,6.159665,9.972558,0.211133],[-1.500208,-2.270551,9.262762,1.805369,8.482818,-5.246689,-0.281659,1.459671,6.108864,6.110191,3.942786],[5.381345,-7.845231,4.834984,-4.982409,5.274172,-2.146634,-6.330600,6.427763,-6.844309,1.755680,-1.276972],[2.324651,-7.292525,6.501418,5.253577,8.228641,9.724638,8.658641,9.608472,0.340777,-2.237862,-2.846731],[1.620630,-8.968639,-0.242658,7.174134,5.321748,8.947747,9.685495,-1.303103,8.163645,-8.918781,9.730962],[9.333784,7.254116,3.353258,-8.629261,5.278472,8.409902,-9.500249,7.446175,2.015514,-7.500297,7.211924],[5.274920,-5.255083,5.620624,-9.069238,-1.525092,6.581774,-2.621324,7.709458,1.715272,4.092842,-4.752615],[-9.920385,9.046173,7.389985,-2.191000,3.382241,-2.117635,-7.271641,-4.513968,-1.442570,-4.273530,0.230826],[-5.094873,-9.070496,4.162408,-7.735411,9.289439,8.712500,-4.568166,-6.615507,1.069558,9.549012,6.858360],[2.846339,-6.723448,-2.540003,-1.103432,5.226809,-6.412952,-5.595148,8.852006,7.728534,2.122575,4.664546]],[[8.755474,5.933862,-2.250858,-9.533393,-9.610659,9.268482,7.628851,-7.909532,3.643992,-2.654645,1.136176],[3.303905,-8.599007,9.761641,-8.475140,1.862372,-5.711037,-1.621913,5.351054,-7.816357,9.526971,-6.042430],[6.126308,-6.563112,6.769747,-7.090081,4.204426,8.298463,-9.003723,1.222533,-1.568449,5.147123,9.065651],[4.365082,-0.333811,2.692893,7.000294,5.857051,-0.036277,-3.744081,-8.860913,-8.933639,-1.292191,1.006025],[-4.348677,4.646524,-3.274309,7.201556,6.951772,-5.341376,-0.346754,0.492113,-5.866572,-5.963730,-8.759545],[-7.137893,0.106957,-8.680962,-7.540723,-8.424161,-4.566335,4.734929,-5.453608,6.809206,4.154025,-1.466732],[7.080784,-5.423941,-8.553855,-3.429467,8.883461,6.118620,3.595000,-7.303291,-4.268540,-4.764397,0.683539],[8.827352,-2.042689,3.385459,-3.306978,9.286363,0.244507,0.862052,-9.467865,-0.197455,-2.906329,-4.533540],[0.426428,-5.153247,1.844379,-3.505203,-5.521421,1.427144,-8.339007,3.157550,-3.332166,-9.122590,-4.753967],[6.461131,3.160217,-0.752853,0.822609,9.118527,4.336310,-8.997314,-3.785221,6.731852,-0.274885,3.317615],[7.806509,-6.711666,2.243517,3.900105,-2.269038,-8.781467,-7.502080,-6.752614,3.082733,-7.078393,8.481745],[-1.714521,-5.603346,-0.090108,-5.433719,6.161545,-0.952123,8.981497,6.782440,4.686021,7.302015,3.573707],[-5.993746,2.760195,-3.903131,6.325276,1.192362,8.739569,7.152480,-3.727256,-6.559073,-7.093976,1.498697]],[[-0.747745,-4.788791,8.175416,-4.642787,-2.670025,-6.235419,-3.496948,1.139894,-5.474073,2.233970,-6.156606],[5.031317,-5.210687,1.254927,6.830641,-2.808251,1.052010,8.732273,-9.763949,4.279960,0.839337,7.190865],[-7.860443,6.446187,3.568984,7.723314,5.302906,-8.542645,-9.739180,-3.662560,8.167464,8.580483,-3.582649],[6.985961,-1.376943,6.877111,-9.672768,-5.283707,7.452048,3.367907,-3.723326,4.611622,2.792522,-5.025570],[2.134866,8.742044,8.828315,2.882650,-2.901167,9.144090,6.928357,-5.544688,2.142717,1.810332,-4.883190],[7.695305,1.382968,-8.694859,-8.225039,-3.341626,-2.795330,-7.143528,-7.930895,0.682100,-0.520868,-1.390939],[6.889753,9.718525,4.680627,1.112415,6.920132,-5.015165,3.453511,-1.115451,0.736773,6.849107,-5.434140],[-8.552339,5.330924,1.408832,-6.947901,-7.296888,-7.040607,-0.819770,-4.689547,1.514570,-7.067803,-5.925461],[2.216692,2.813248,2.764253,-4.399570,1.182199,-1.726111,-3.795439,-9.398788,0.401613,-4.706715,9.685622],[9.503470,-8.418754,7.555323,3.756551,4.950655,-4.088471,1.418804,1.016851,-1.462245,-7.235315,-6.510203],[-7.178819,1.463491,9.313553,-2.141722,-0.713651,-1.466307,-6.858863,3.224595,2.433919,-8.852413,-4.677066],[2.101787,1.059147,-0.653533,-8.726245,-5.748023,8.383145,4.333226,7.439823,0.795127,2.468965,9.984590],[-1.764155,2.939523,1.482006,8.943144,-0.484509,8.427765,-1.755745,5.269280,-2.212928,-1.105863,-4.389691]],[[-8.515213,3.201893,1.025226,8.592805,-0.629517,-4.474628,8.271699,-5.502075,7.438825,3.256077,-9.912941],[-2.573753,1.730692,-8.960456,-6.064600,9.761682,-9.144422,0.277229,5.305211,-3.260084,-8.012365,-5.864097],[-4.304208,-2.984121,2.018433,8.680522,-9.292292,4.443733,-6.548757,5.917945,-2.732478,-2.784533,2.918191],[9.507197,-7.288612,-1.532633,-0.962481,3.800157,6.347915,-4.794508,6.258583,9.389320,5.764939,0.475505],[-1.654826,-4.717360,0.579957,0.312224,-9.096930,-2.723005,1.522962,7.009849,4.564350,-9.092535,9.167889],[9.153615,-4.162478,-8.531986,6.952623,-7.361319,-1.598931,2.633553,9.789203,-2.018876,7.820963,-6.925505],[5.181048,-5.279510,-7.003335,-9.833469,1.831694,0.106055,-0.720878,3.402390,0.500076,0.244643,-6.111365],[-6.630403,4.789330,-0.163520,2.478133,0.838963,-6.723703,6.867003,9.035243,-0.328701,0.986793,-4.582984],[5.019955,4.942411,2.293782,-9.403368,3.055404,2.878702,4.184288,6.699998,2.597878,-2.816180,-5.835815],[-2.880006,9.781165,-4.414164,-7.785983,-5.571950,-0.954297,8.700731,-3.582030,-2.839440,-1.689402,-7.217701],[7.207367,-5.897121,2.082031,-9.129384,-4.469287,6.995212,-2.414693,-6.081114,-5.215948,-2.728474,-1.973117],[6.591153,-5.389838,5.110714,3.974859,-3.168696,4.776985,1.466555,6.334364,4.898245,8.896927,7.009473],[-0.984729,-8.415993,-7.588625,-4.197381,-7.157807,8.056773,7.650924,8.519830,7.204981,0.812613,-7.782617]]], dtype = "float64")#candidate|4239|(7, 13, 11)|const|float64
uop_4240 = relay.asin(const_4239.astype('float64')) # shape=(7, 13, 11)
func_3547_call = mod.get_global_var('func_3547')
func_3552_call = mutated_mod.get_global_var('func_3552')
const_4243 = relay.const(-8, dtype = "int64")#candidate|4243|()|const|int64
const_4244 = relay.const([[-4,7,8,-10,-3,10,4,-4,5,10,-4,2,10,-10,9,-5,8,-2,4,-1,-3,-8,-10,-3,8,6,-10,-7,2,-1,3,3,-10,8,-7,2,-2,6,-5,-9,-2,-6,3,-3,1,7,9,-5,-5,4,-2,3,-9,7,7,10,1,2,-9,3,8,-6,-10,-8,6,10,-10,-5,3,6,8,-1,-2,-6,-7,-5,-9,-4,3,-5,-3,10,-9,4],[-5,-1,-6,5,-5,-1,8,-9,-8,-5,2,2,6,-1,-7,4,-5,6,-7,-9,9,-7,7,-3,9,-8,9,-8,-3,7,-4,-1,-8,-10,9,-1,1,-7,-4,-5,-10,1,4,4,8,7,-4,9,-7,-1,10,5,8,2,-4,-4,-2,4,6,-5,-1,6,-5,9,6,10,-2,7,-9,-3,-8,7,-1,7,-1,2,9,7,-5,-5,8,6,2,-1],[2,4,-2,7,-6,-3,-9,8,4,-1,4,9,3,2,-9,-4,1,-9,1,-6,-2,-3,-5,8,-8,10,7,6,7,3,4,-6,-7,8,3,-4,-5,8,2,1,5,4,3,9,-9,-7,-2,-6,10,-9,-9,7,-2,4,-1,3,-8,-7,8,-2,-2,8,4,3,9,6,-4,2,8,-1,-2,-6,-3,3,10,-8,8,6,-1,5,-10,-8,4,2],[5,-4,8,-7,-2,2,-8,4,-6,8,-9,9,-4,6,4,-3,-1,-6,-4,4,5,-7,8,-9,-4,-4,-9,-4,10,2,-10,-5,-1,-2,5,-10,3,3,1,-6,10,9,2,4,-3,-8,-3,-6,5,9,5,10,9,7,-5,8,-2,-7,-10,8,9,-8,10,-9,1,5,-9,4,-8,1,-4,9,4,4,-8,9,8,-10,-1,-5,6,10,5,-5],[-5,-6,-3,-8,-10,-3,5,-6,9,-3,-6,3,-8,-9,-7,4,1,2,5,-5,2,-5,-9,-2,-8,1,3,10,-6,-2,3,6,6,-10,-8,7,-2,-9,-3,3,5,-9,-7,8,8,-8,-8,7,-2,4,-3,-2,-1,-7,-1,8,-4,4,4,7,-2,4,-7,3,-9,1,-5,-6,5,3,-6,2,7,-1,8,4,-3,9,9,-9,-8,-10,-3,-1],[2,6,4,7,-4,6,-6,-3,9,1,3,-8,-2,5,-7,-6,10,-6,-10,8,3,7,4,-10,-1,1,-1,-6,-7,10,7,2,6,2,5,1,5,9,5,2,-10,-1,-2,-6,7,-3,-2,2,7,5,5,9,-1,7,8,3,2,3,-2,-5,6,3,-4,-5,8,-2,5,1,8,3,7,7,9,-5,8,-2,-7,4,10,2,-9,-3,4,10],[3,-9,9,-2,-6,1,-7,10,-8,3,4,-7,10,1,5,-9,5,3,-5,-6,3,7,-10,2,-3,-7,-2,4,-6,9,6,-2,-5,-7,-9,9,10,-2,5,8,10,-5,-4,8,3,3,-3,-10,-1,7,10,4,4,-10,-1,-6,-8,5,1,-1,-9,2,1,-10,-1,-4,3,-10,-5,5,-9,-7,4,-8,-5,7,-3,-8,3,9,-5,4,1,6],[-4,-2,-1,-9,-10,10,-6,-3,-10,-5,1,6,5,5,-5,3,-1,2,3,9,-10,1,7,-5,9,9,-4,-5,6,6,-10,-9,-2,-4,-4,-10,-3,-10,-9,5,-7,-5,1,1,-1,-9,3,-3,-10,-4,10,-9,-5,3,-8,-9,3,5,5,1,2,-8,-9,4,5,-4,-9,10,-5,-9,1,7,5,8,-9,-7,-1,8,3,-1,-7,5,-9,-2]], dtype = "int64")#candidate|4244|(8, 84)|const|int64
var_4245 = relay.var("var_4245", dtype = "float32", shape = (2, 672))#candidate|4245|(2, 672)|var|float32
var_4246 = relay.var("var_4246", dtype = "float32", shape = (1320,))#candidate|4246|(1320,)|var|float32
call_4242 = relay.TupleGetItem(func_3547_call(relay.reshape(const_4243.astype('int64'), []), relay.reshape(const_4244.astype('int64'), [8, 7, 12]), relay.reshape(var_4245.astype('float32'), [1344,]), relay.reshape(var_4246.astype('float32'), [1320,]), ), 4)
call_4247 = relay.TupleGetItem(func_3552_call(relay.reshape(const_4243.astype('int64'), []), relay.reshape(const_4244.astype('int64'), [8, 7, 12]), relay.reshape(var_4245.astype('float32'), [1344,]), relay.reshape(var_4246.astype('float32'), [1320,]), ), 4)
output = relay.Tuple([uop_4240,call_4242,const_4243,const_4244,var_4245,var_4246,])
output2 = relay.Tuple([uop_4240,call_4247,const_4243,const_4244,var_4245,var_4246,])
func_4261 = relay.Function([var_4245,var_4246,], output)
mod['func_4261'] = func_4261
mod = relay.transform.InferType()(mod)
mutated_mod['func_4261'] = func_4261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4261_call = mutated_mod.get_global_var('func_4261')
var_4263 = relay.var("var_4263", dtype = "float32", shape = (2, 672))#candidate|4263|(2, 672)|var|float32
var_4264 = relay.var("var_4264", dtype = "float32", shape = (1320,))#candidate|4264|(1320,)|var|float32
call_4262 = func_4261_call(var_4263,var_4264,)
output = call_4262
func_4265 = relay.Function([var_4263,var_4264,], output)
mutated_mod['func_4265'] = func_4265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2845_call = mod.get_global_var('func_2845')
func_2847_call = mutated_mod.get_global_var('func_2847')
call_4278 = func_2845_call()
call_4279 = func_2845_call()
var_4296 = relay.var("var_4296", dtype = "float32", shape = (8, 11, 10))#candidate|4296|(8, 11, 10)|var|float32
bop_4297 = relay.multiply(call_4278.astype('uint64'), var_4296.astype('uint64')) # shape=(8, 11, 10)
bop_4300 = relay.multiply(call_4279.astype('uint64'), var_4296.astype('uint64')) # shape=(8, 11, 10)
uop_4304 = relay.acosh(call_4278.astype('float32')) # shape=(8, 11, 1)
uop_4306 = relay.acosh(call_4279.astype('float32')) # shape=(8, 11, 1)
uop_4316 = relay.erf(call_4278.astype('float32')) # shape=(8, 11, 1)
uop_4318 = relay.erf(call_4279.astype('float32')) # shape=(8, 11, 1)
var_4324 = relay.var("var_4324", dtype = "float32", shape = (8, 11, 13))#candidate|4324|(8, 11, 13)|var|float32
bop_4325 = relay.logical_xor(uop_4316.astype('int32'), var_4324.astype('int32')) # shape=(8, 11, 13)
bop_4328 = relay.logical_xor(uop_4318.astype('int32'), var_4324.astype('int32')) # shape=(8, 11, 13)
uop_4333 = relay.log2(bop_4325.astype('float64')) # shape=(8, 11, 13)
uop_4335 = relay.log2(bop_4328.astype('float64')) # shape=(8, 11, 13)
output = relay.Tuple([bop_4297,uop_4304,uop_4333,])
output2 = relay.Tuple([bop_4300,uop_4306,uop_4335,])
func_4337 = relay.Function([var_4296,var_4324,], output)
mod['func_4337'] = func_4337
mod = relay.transform.InferType()(mod)
var_4338 = relay.var("var_4338", dtype = "float32", shape = (8, 11, 10))#candidate|4338|(8, 11, 10)|var|float32
var_4339 = relay.var("var_4339", dtype = "float32", shape = (8, 11, 13))#candidate|4339|(8, 11, 13)|var|float32
output = func_4337(var_4338,var_4339,)
func_4340 = relay.Function([var_4338,var_4339,], output)
mutated_mod['func_4340'] = func_4340
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4415 = relay.var("var_4415", dtype = "uint32", shape = (8, 6, 11))#candidate|4415|(8, 6, 11)|var|uint32
var_4416 = relay.var("var_4416", dtype = "uint32", shape = (8, 6, 11))#candidate|4416|(8, 6, 11)|var|uint32
bop_4417 = relay.logical_xor(var_4415.astype('uint32'), relay.reshape(var_4416.astype('uint32'), relay.shape_of(var_4415))) # shape=(8, 6, 11)
bop_4428 = relay.logical_or(bop_4417.astype('bool'), relay.reshape(var_4416.astype('bool'), relay.shape_of(bop_4417))) # shape=(8, 6, 11)
func_1807_call = mod.get_global_var('func_1807')
func_1811_call = mutated_mod.get_global_var('func_1811')
var_4435 = relay.var("var_4435", dtype = "float64", shape = (594,))#candidate|4435|(594,)|var|float64
var_4436 = relay.var("var_4436", dtype = "int16", shape = (715,))#candidate|4436|(715,)|var|int16
call_4434 = relay.TupleGetItem(func_1807_call(relay.reshape(var_4435.astype('float64'), [6, 11, 9]), relay.reshape(var_4436.astype('int16'), [715,]), relay.reshape(var_4436.astype('int16'), [715,]), ), 1)
call_4437 = relay.TupleGetItem(func_1811_call(relay.reshape(var_4435.astype('float64'), [6, 11, 9]), relay.reshape(var_4436.astype('int16'), [715,]), relay.reshape(var_4436.astype('int16'), [715,]), ), 1)
bop_4440 = relay.bitwise_xor(bop_4417.astype('uint64'), relay.reshape(bop_4428.astype('uint64'), relay.shape_of(bop_4417))) # shape=(8, 6, 11)
func_2923_call = mod.get_global_var('func_2923')
func_2924_call = mutated_mod.get_global_var('func_2924')
call_4457 = relay.TupleGetItem(func_2923_call(), 0)
call_4458 = relay.TupleGetItem(func_2924_call(), 0)
func_4337_call = mod.get_global_var('func_4337')
func_4340_call = mutated_mod.get_global_var('func_4340')
var_4469 = relay.var("var_4469", dtype = "float32", shape = (880,))#candidate|4469|(880,)|var|float32
const_4470 = relay.const([3.539149,-1.116662,-7.369893,2.459187,2.747083,-2.227744,1.569478,4.798102,-0.079184,4.605745,6.855695,-8.566520,-8.294343,5.331090,3.813850,-8.466076,0.276073,-6.333175,-6.996842,9.857188,-7.374247,-1.429298,7.038882,6.431846,-9.441412,-7.166160,2.229616,-3.629111,-8.801477,9.354943,-0.928904,-5.049751,-0.987913,9.260161,-4.888447,-8.638112,-9.709036,-3.814353,7.590443,7.996987,5.868960,1.392005,-2.838851,-4.459044,1.631984,-3.761012,8.365178,-8.602986,-3.913604,-7.523031,-8.947010,0.672613,4.096715,-7.959969,5.956802,-3.185509,8.551553,-5.148277,5.888539,1.454204,-0.081621,-4.157442,-5.404143,-9.714611,-5.971144,-4.248828,3.843731,-1.636028,7.646468,1.199594,-0.682232,7.774625,-5.885443,-8.190534,-2.279489,-1.206841,3.676414,-5.176226,1.420754,-5.074542,3.660812,-8.007719,-1.815093,3.323770,-4.408515,4.799056,0.531941,-9.218899,-0.636245,6.291773,-9.678195,7.599435,1.813781,-3.814598,-3.323154,-2.713778,8.335629,0.841617,1.704534,4.717499,7.113758,8.397457,-5.882317,-4.955415,-9.115193,0.630537,-6.236804,-8.314904,2.424395,-5.417890,-4.478304,5.472753,-9.559414,9.851145,-6.108863,0.089346,1.264591,-2.266627,-2.827063,-2.076250,-0.416041,-0.795628,5.611078,-2.810761,6.427081,-3.243870,-2.774554,0.758471,-2.778076,-7.653604,1.809780,6.829351,-8.192217,-0.083540,-0.470625,2.210344,7.828575,5.478845,5.231181,7.371577,1.421817,-6.353767,2.347448,-9.286706,-3.035001,-4.389030,-7.157373,1.579642,2.228049,8.498150,-0.899272,2.065830,-3.036813,-5.356335,-5.033846,-8.859857,-4.642847,7.120789,-8.969852,6.820405,1.426310,0.268847,7.092927,-9.007498,-9.452597,2.785489,9.699571,-8.119003,2.366040,3.241438,-9.430690,1.351562,-1.899521,1.498682,-4.943334,0.255715,-6.729254,7.291128,7.026690,5.883012,-4.638202,9.718523,1.482727,7.936479,-0.518824,-1.459265,0.370588,3.130534,6.863529,-4.932609,-0.633991,8.905101,-3.257613,-9.539870,-6.811419,-0.636678,-0.824058,-8.039057,8.623700,7.949822,-6.752887,9.072379,0.706391,2.711841,5.168946,5.885556,-3.822299,-9.896393,5.558510,-2.127219,-9.630574,-6.210858,-1.422721,-4.195009,3.744238,-2.546039,-1.335057,8.348496,-8.595576,-4.676189,-9.080829,5.917110,-7.061919,-3.807900,8.251824,6.741052,6.285577,-5.035724,6.098026,8.882607,-9.350123,-6.921627,2.011440,1.159552,0.826889,7.616408,3.255759,-4.806836,2.329536,4.610904,1.758555,-1.144817,3.864712,4.364777,-7.521218,2.943910,-5.953313,1.947812,8.065967,9.390121,-5.791812,-9.022858,-1.750689,2.345317,5.553949,-8.788706,7.023407,3.415297,6.374910,2.238346,-4.432514,1.245433,3.294717,-7.300096,8.404004,2.004151,0.164960,4.219219,-7.103640,2.236786,3.217760,-9.772631,-7.835773,6.162112,-4.695456,1.203246,6.771450,5.362832,5.523084,1.017954,-7.410718,-9.928963,4.424529,2.335095,-4.549905,7.374006,-2.901349,4.757988,-8.265445,-4.110222,3.950769,1.696789,-5.306885,0.218316,-6.662121,-3.298602,1.977467,-9.821186,-7.256064,-9.004847,-2.166627,9.395256,-0.859237,-5.506895,4.814346,5.318569,-3.972165,-7.964677,-7.235584,3.897810,-3.282607,1.083942,-5.672088,-7.043322,6.941961,-8.485889,8.838144,-4.008144,-2.008737,-2.918779,9.241390,-7.013628,-7.327080,5.453792,3.864394,7.767815,-9.895197,0.911319,9.306933,-1.362824,7.900151,-4.221527,-0.920292,-9.082686,9.028647,-1.403860,-9.451526,2.096512,0.687733,5.279233,1.123022,6.266963,9.728208,-7.397092,-9.685378,8.179736,6.437482,-6.550068,-5.830393,-1.503945,7.135353,4.876092,-0.352512,-0.976855,5.755134,-4.780568,4.982886,-9.460960,-0.341195,7.784952,6.139784,-2.185528,-2.175973,-5.366762,0.741222,6.025567,-8.779124,6.487655,5.960900,-7.868546,5.311276,7.691425,-7.149654,-5.836325,-9.960703,-5.884640,-7.513741,1.989431,3.759930,-3.143704,-3.312311,-5.324495,-0.600678,4.742270,1.692619,-4.189065,-1.245688,6.345108,3.833795,-1.707451,2.392349,-8.043641,6.122347,8.928562,9.675342,-6.613376,0.289729,-0.550766,-0.779846,3.674348,-3.266126,-7.541442,4.206788,7.030517,0.599407,-8.761453,-2.140771,9.335115,-9.444994,3.043527,-2.704104,-2.185614,-7.232569,2.790192,-0.777648,-3.265346,-7.444475,-3.476073,3.788025,-1.997800,5.652793,5.525192,1.862021,9.392504,4.619501,-5.932115,-4.082225,3.357375,1.063648,3.421671,4.992890,-4.001924,0.964692,4.864128,2.629892,9.700735,8.608999,-4.483261,8.025622,-8.123305,-2.257897,-9.070006,1.679435,8.694115,-1.366038,5.846615,2.370222,7.956627,-0.055226,3.031535,7.497760,-9.426265,4.003941,0.138228,-8.626403,-6.289002,-9.871843,-7.811603,-1.650507,0.707572,-7.272399,8.974655,-8.277412,-2.906620,3.546044,-0.491609,0.256566,4.482582,-3.114370,9.748007,3.255693,0.520930,2.082301,0.466712,-4.269273,-6.028130,1.842753,-0.770037,4.736919,-9.409039,-7.068007,2.815979,0.414511,-4.108821,7.377997,5.914442,6.125982,7.667248,-9.617331,5.050406,1.054939,4.061474,7.746306,-3.624668,5.161319,3.802313,-3.797574,8.994262,-0.141690,9.224673,2.925374,-1.824892,7.121181,9.972931,-0.162230,-9.535943,2.213199,8.255899,1.457347,4.656706,-7.214707,-8.038969,6.495433,6.426872,-5.235113,7.063458,1.328073,-0.516499,2.681354,-5.657074,-5.260923,0.424934,-6.265486,-4.917073,6.121900,-1.329931,0.615333,-4.438404,-0.444689,-4.903845,-0.944796,9.819639,0.733618,-3.213020,5.014032,-1.003473,-6.224443,5.305871,-1.718007,-9.457426,8.988189,-2.849796,-4.435429,4.122481,-1.206758,8.372675,-4.088505,-2.415849,-7.854389,-7.764611,8.845843,-5.723084,9.366836,-1.018645,7.898188,1.087302,-9.634852,5.999585,-3.820333,8.866879,-0.661130,9.390304,7.654836,-8.004524,-4.880995,-3.165810,-7.042694,9.070583,-7.871894,5.868071,8.921376,0.089950,-3.581080,-3.109453,1.421851,1.701659,-6.452000,-2.246074,-2.174931,1.518066,-2.324111,-3.151590,-8.071653,-9.337233,-7.805948,0.328790,-1.109382,2.519296,8.601170,7.891325,0.497271,3.860515,4.673902,-1.089094,-2.546556,-5.360244,4.115957,5.322362,9.751252,-1.217693,-4.458384,7.910724,-1.803768,9.024342,-3.756682,4.310277,-2.902173,1.145537,-4.601482,6.120581,5.691967,1.839863,3.286459,0.290150,-7.284221,-9.997130,1.793265,8.681279,-9.069721,7.086335,4.881045,-8.744562,2.178550,9.359047,9.812334,3.807046,1.681130,5.165106,5.270434,0.551072,0.986196,-4.978958,3.531346,-0.371493,1.518951,-0.018394,-6.665518,-1.610280,-4.383779,-2.052268,-9.952413,-1.542454,-8.719936,-7.149394,-5.544462,-4.432556,5.919420,-5.894699,-3.305359,-8.280166,3.044514,3.422475,-1.256639,6.376462,9.813642,-9.607258,6.259172,3.186806,4.368052,-5.935982,7.546268,8.341069,3.787273,3.325306,-3.932810,7.769732,-1.155262,-9.635847,-7.492917,2.606709,3.615909,-7.977196,3.979497,-7.173194,9.794193,-6.449901,2.840295,-9.854613,-2.941907,7.648541,7.947216,-2.524089,0.772416,-4.026534,-2.262757,7.766532,-7.687445,2.776912,-4.923289,-7.847564,-3.823359,-3.368760,-3.136667,-8.637731,0.013152,7.336730,6.708889,-5.803402,-2.103271,-1.655358,0.236647,-7.742679,9.756512,8.874994,-5.918978,-1.284836,-2.722594,-7.161239,3.700339,6.381536,-1.421102,4.382476,-9.652571,-5.896664,1.879918,-8.375089,1.687109,-6.630532,-0.591568,-9.527130,1.038454,6.438972,6.412123,-1.855250,-5.305799,5.912197,-4.962979,-6.509301,5.784833,-2.627099,-5.597657,6.106483,5.164272,-0.533879,0.823895,-9.600199,5.076456,-5.888767,-6.635496,6.851625,2.760300,1.245097,-4.043595,-6.880641,9.020776,-3.702915,4.065107,4.914593,1.129632,-4.347953,-0.078227,5.697339,-3.026891,-8.412982,-4.848297,-7.975496,3.035956,9.593340,0.973059,8.710523,-2.137593,-9.048199,1.717793,3.171176,-3.397559,1.512159,-6.186734,-3.142274,-8.888637,7.328596,1.963994,-7.969781,-3.821120,-4.538062,-5.164456,-0.983180,7.449843,-3.573669,-7.857129,8.134500,-0.892913,4.044397,9.114175,5.813914,-1.768800,-3.572888,-5.290856,-3.006083,-4.490195,3.141209,-6.349027,-8.974826,-4.659921,-4.414455,-3.279284,7.380453,-6.458138,4.145999,7.259321,-4.093530,-9.123298,2.922182,7.058256,2.562676,-9.448460,-1.957929,-8.703261,-2.605032,-8.414680,5.613096,-6.125391,1.474284,5.416706,-7.422487,7.648831,-8.063754,4.564403,0.895516,-0.614594,-8.906795,4.077890,1.793103,7.599941,-7.160303,2.415059,-6.741269,0.109756,-3.070162,5.858498,6.693722,7.545924,-9.399533,7.049391,-4.671332,-5.613266,-5.929401,3.238426,2.355445,7.247396,-2.649767,8.938868,-1.330020,-0.971812,5.311357,8.321855,8.934472,-7.485954,6.148012,5.466634,4.012104,-3.677560,8.872433,-6.900467,7.447203,-5.434538,-1.536586,-7.038047,-9.744343,4.140420,-1.405639,-8.997088,-6.680799,9.057237,-8.922755,7.038284,-9.854919,2.623042,5.976496,-3.503314,0.770996,5.638983,-9.260069,-8.075280,-4.263855,-8.576014,-9.134475,-5.494992,-2.877629,-0.557087,-3.687893,-3.720778,-3.022363,-2.396209,8.721714,-9.414221,-0.178792,-1.103096,9.108714,3.497791,0.847130,9.558386,2.290310,-1.665208,4.912533,-5.976262,-2.977544,1.100317,4.399920,-6.225394,-0.617241,0.046003,-2.816562,-8.117374,6.444271,-4.660278,5.692090,-1.525809,9.424727,-5.426068,-6.697625,7.266888,-6.223132,8.693290,-3.791691,-4.147888,-7.556914,3.635261,-2.046846,-8.753549,-7.724618,-5.300634,-4.445814,-5.538923,1.761127,2.408236,1.369967,-4.939798,8.649143,5.063617,4.996879,-3.401598,-1.389292,4.868802,5.789709,-4.925904,-7.569156,-0.572255,4.361181,-0.389246,7.694677,-4.276840,-8.951808,-1.244690,-0.369099,-3.463823,-2.303210,7.606847,-7.930093,1.310611,4.155910,8.340590,-2.814987,-6.904158,-7.562674,-4.706286,-7.143051,0.828712,8.969496,-2.959108,0.083700,2.409567,-2.279523,-9.501131,9.486927,-5.370023,4.390861,-9.183771,0.102598,-9.559259,-4.059858,-3.331712,0.540376,0.541083,0.049352,2.335693,-8.326539,-5.577530,9.672487,-9.327285,-0.221341,6.479659,-7.351566,9.450173,8.568351,-8.288546,-4.743532,-8.413149,-4.738846,-7.652071,-4.758823,-3.903288,2.264528,7.586947,-3.859406,6.136289,-3.678071,-5.741107,0.877238,8.049590,0.921451,-2.655737,-6.298886,-6.040788,-4.448385,-1.005921,-2.170223,-0.682440,-1.451651,-7.316615,0.758000,0.664907,0.394447,-8.348180,-0.010595,7.754154,6.665612,0.106990,-0.237222,-2.842584,0.195131,2.436431,-6.634874,9.847008,0.532472,0.608723,4.531317,5.696815,-7.498101,9.787959,8.649852,4.703269,-2.617902,-9.860180,-6.773603,-3.947127,9.644009,6.790551,9.603135,-2.762593,-0.656535,0.226044,8.181522,-2.377207,-2.501058,-2.598295,-8.607056,5.848226,-5.667880,-0.598959,-2.447049,-8.125668,-6.861690,1.657538,-5.033142,7.178599,6.850163,5.582172,7.216851,0.482133,7.441860,0.927254,2.599015,8.031741,-0.604981,-4.195832,-7.842472,-6.806298,-7.129043,-7.167493,-9.865133,1.980936,-8.648397,-8.776511,9.247953,3.658713,6.202087,-1.921097,7.092436,-6.152647,2.395238,6.941899,-5.965752,2.358918,8.141133,3.811832,1.160780,-6.612447,4.767699,7.497266,-6.634057,-8.524573,7.250769,-3.516057,-2.436931,-7.425479,4.056378,6.501212,5.757275,-7.048402,-6.439576,-1.619656,-2.079472,7.797988,5.085556,-2.419179,7.348826,2.612545,-1.999362,-9.987396,9.482795,-6.208209,-9.147116,-3.824538,-1.712502,-5.694290,-7.539781,-6.229724,4.099638,2.154087,-7.686313,-6.566647,-5.522792,-7.229527,2.620455,3.939549,7.721186,3.184441,7.038000,-3.265569,-9.095711,-1.415696,2.134186,-1.147981,-3.307978,-1.843926,6.793665,-7.014061,-1.256759,-2.799826,4.926414,-4.875005,-0.418707,-5.044598,8.368306], dtype = "float32")#candidate|4470|(1144,)|const|float32
call_4468 = relay.TupleGetItem(func_4337_call(relay.reshape(var_4469.astype('float32'), [8, 11, 10]), relay.reshape(const_4470.astype('float32'), [8, 11, 13]), ), 2)
call_4471 = relay.TupleGetItem(func_4340_call(relay.reshape(var_4469.astype('float32'), [8, 11, 10]), relay.reshape(const_4470.astype('float32'), [8, 11, 13]), ), 2)
output = relay.Tuple([call_4434,var_4435,var_4436,bop_4440,call_4457,call_4468,var_4469,const_4470,])
output2 = relay.Tuple([call_4437,var_4435,var_4436,bop_4440,call_4458,call_4471,var_4469,const_4470,])
func_4475 = relay.Function([var_4415,var_4416,var_4435,var_4436,var_4469,], output)
mod['func_4475'] = func_4475
mod = relay.transform.InferType()(mod)
var_4476 = relay.var("var_4476", dtype = "uint32", shape = (8, 6, 11))#candidate|4476|(8, 6, 11)|var|uint32
var_4477 = relay.var("var_4477", dtype = "uint32", shape = (8, 6, 11))#candidate|4477|(8, 6, 11)|var|uint32
var_4478 = relay.var("var_4478", dtype = "float64", shape = (594,))#candidate|4478|(594,)|var|float64
var_4479 = relay.var("var_4479", dtype = "int16", shape = (715,))#candidate|4479|(715,)|var|int16
var_4480 = relay.var("var_4480", dtype = "float32", shape = (880,))#candidate|4480|(880,)|var|float32
output = func_4475(var_4476,var_4477,var_4478,var_4479,var_4480,)
func_4481 = relay.Function([var_4476,var_4477,var_4478,var_4479,var_4480,], output)
mutated_mod['func_4481'] = func_4481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4068_call = mod.get_global_var('func_4068')
func_4070_call = mutated_mod.get_global_var('func_4070')
call_4559 = func_4068_call()
call_4560 = func_4068_call()
output = call_4559
output2 = call_4560
func_4567 = relay.Function([], output)
mod['func_4567'] = func_4567
mod = relay.transform.InferType()(mod)
mutated_mod['func_4567'] = func_4567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4567_call = mutated_mod.get_global_var('func_4567')
call_4568 = func_4567_call()
output = call_4568
func_4569 = relay.Function([], output)
mutated_mod['func_4569'] = func_4569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2923_call = mod.get_global_var('func_2923')
func_2924_call = mutated_mod.get_global_var('func_2924')
call_4691 = relay.TupleGetItem(func_2923_call(), 0)
call_4692 = relay.TupleGetItem(func_2924_call(), 0)
var_4694 = relay.var("var_4694", dtype = "float32", shape = (8, 11, 8))#candidate|4694|(8, 11, 8)|var|float32
bop_4695 = relay.logical_and(call_4691.astype('bool'), var_4694.astype('bool')) # shape=(8, 11, 8)
bop_4698 = relay.logical_and(call_4692.astype('bool'), var_4694.astype('bool')) # shape=(8, 11, 8)
output = relay.Tuple([bop_4695,])
output2 = relay.Tuple([bop_4698,])
func_4708 = relay.Function([var_4694,], output)
mod['func_4708'] = func_4708
mod = relay.transform.InferType()(mod)
mutated_mod['func_4708'] = func_4708
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4709 = relay.var("var_4709", dtype = "float32", shape = (8, 11, 8))#candidate|4709|(8, 11, 8)|var|float32
func_4708_call = mutated_mod.get_global_var('func_4708')
call_4710 = func_4708_call(var_4709)
output = call_4710
func_4711 = relay.Function([var_4709], output)
mutated_mod['func_4711'] = func_4711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3310_call = mod.get_global_var('func_3310')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_4717 = func_3310_call()
call_4718 = func_3310_call()
output = call_4717
output2 = call_4718
func_4723 = relay.Function([], output)
mod['func_4723'] = func_4723
mod = relay.transform.InferType()(mod)
mutated_mod['func_4723'] = func_4723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4723_call = mutated_mod.get_global_var('func_4723')
call_4724 = func_4723_call()
output = call_4724
func_4725 = relay.Function([], output)
mutated_mod['func_4725'] = func_4725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4163_call = mod.get_global_var('func_4163')
func_4165_call = mutated_mod.get_global_var('func_4165')
call_4825 = relay.TupleGetItem(func_4163_call(), 4)
call_4826 = relay.TupleGetItem(func_4165_call(), 4)
var_4827 = relay.var("var_4827", dtype = "float32", shape = (8, 11, 15))#candidate|4827|(8, 11, 15)|var|float32
bop_4828 = relay.bitwise_or(call_4825.astype('uint64'), var_4827.astype('uint64')) # shape=(8, 11, 15)
bop_4831 = relay.bitwise_or(call_4826.astype('uint64'), var_4827.astype('uint64')) # shape=(8, 11, 15)
uop_4854 = relay.log2(bop_4828.astype('float32')) # shape=(8, 11, 15)
uop_4856 = relay.log2(bop_4831.astype('float32')) # shape=(8, 11, 15)
bop_4860 = relay.maximum(uop_4854.astype('uint16'), relay.reshape(bop_4828.astype('uint16'), relay.shape_of(uop_4854))) # shape=(8, 11, 15)
bop_4863 = relay.maximum(uop_4856.astype('uint16'), relay.reshape(bop_4831.astype('uint16'), relay.shape_of(uop_4856))) # shape=(8, 11, 15)
func_4708_call = mod.get_global_var('func_4708')
func_4711_call = mutated_mod.get_global_var('func_4711')
const_4865 = relay.const([6.897806,-7.615828,-2.101169,-6.443594,6.792553,-8.597382,5.646356,9.746525,8.386415,2.817638,-2.004754,-1.441485,-3.511381,9.454216,0.088453,-7.621395,-3.435777,6.330797,4.283520,-9.527619,-0.845496,8.765415,5.067162,7.898052,-0.703335,-8.530541,0.150366,6.921423,-9.719857,6.675917,9.841910,-9.574915,-2.062232,-4.054190,2.032532,7.107826,-2.471723,0.834776,8.848897,-7.858951,1.660779,-2.523232,7.449871,1.219293,-6.484965,2.102899,-6.894410,7.644290,6.139498,-4.901762,-5.212083,-4.205429,3.025526,-1.455765,-7.081506,-2.089322,7.374456,2.399121,1.995347,3.297811,4.624693,6.387549,-7.394735,4.228223,8.268582,1.867605,9.366760,-7.139810,5.372737,1.656018,1.295204,-2.100909,-8.274510,4.595585,-6.948238,8.763541,5.496019,6.789790,-9.294504,6.962449,-9.312577,7.220610,-3.783169,-4.793985,3.552759,7.956732,-7.034774,9.088692,2.843488,-8.269690,6.265134,-2.377415,-2.623558,2.093838,-0.353302,-4.809504,0.235575,-1.828447,0.806246,5.883059,-2.699580,7.465549,-9.116218,0.070301,1.720301,5.685387,0.485369,6.022846,0.272650,-2.758737,9.429485,7.706066,7.892255,-8.246914,-3.884390,3.299653,3.308583,6.060729,7.421705,1.740452,-2.866869,-0.437741,-9.358693,-1.553286,-8.128711,4.698665,5.564540,-0.203758,-8.601152,-3.106020,-6.334457,6.007082,-1.160280,-2.058191,2.087772,3.793909,-6.658477,-6.980725,7.582579,4.791374,1.405385,-9.722305,1.299511,8.185721,4.342964,-9.887877,3.220452,9.206731,5.760056,-2.804926,-7.322762,-0.844097,6.581131,1.532889,6.928909,-9.582714,-6.569359,-4.439729,6.627628,9.175737,8.400827,-8.571842,-3.853998,-4.118740,3.987891,-8.635659,-7.487174,6.284643,6.559183,0.190374,3.270322,-9.820235,-5.789067,3.780444,-3.491255,-4.669189,-3.882092,2.585961,4.981015,-5.257883,-4.895616,-6.676335,-5.621376,-6.079776,-7.120168,-2.765878,1.352637,3.323182,5.133110,1.106412,-4.374950,9.498473,-7.104063,6.228042,7.087939,3.728395,-3.552522,-1.909363,6.843426,4.508170,-9.684512,3.481524,-7.207177,0.226513,5.794007,0.969068,2.180701,-3.484978,3.093029,4.040961,-9.504928,-7.262937,-7.720404,1.243793,9.150086,5.368519,-8.368558,4.923523,-5.187061,8.488400,7.744041,6.812081,6.003213,8.142227,0.003186,9.186998,5.099702,-1.670664,9.513565,4.162112,-4.231604,-6.477585,2.562473,8.408418,9.078663,2.150567,-9.458052,5.791107,-8.327015,-6.759801,8.622690,1.548762,-9.729980,-3.822350,5.476436,-2.434231,-6.739391,8.320724,2.907887,5.265258,4.678731,6.745492,3.743318,7.756256,6.132723,9.951699,-5.791533,5.971266,8.272243,-9.535234,0.128096,-3.123707,2.955732,2.770135,6.631513,7.978428,2.737639,-9.828402,0.726748,2.027403,1.301300,5.633590,5.227718,-0.648667,-7.422369,-8.466544,-7.749479,-3.129547,-8.494112,-7.844713,-8.583573,-7.420285,-9.461394,1.056093,-4.467531,5.715375,4.645148,4.526322,6.440913,3.718284,-1.205774,-1.374849,7.542937,9.392361,-2.128077,9.288785,4.384431,1.542333,-4.847221,-4.739587,4.176661,-8.474075,-2.387807,3.620969,-7.408086,-2.784176,-1.380696,9.615471,7.813378,2.830650,-2.897107,-4.383468,-8.038710,8.181854,-7.492696,-0.308228,1.316062,5.647628,-6.299539,-7.796139,2.772835,-7.402538,6.960066,7.011378,-2.202274,-3.539324,4.723560,-3.504476,-4.536244,-8.547088,0.980753,-8.876904,-4.572104,8.482462,4.964908,3.476824,-8.308130,-3.399215,8.965238,-5.144894,7.232576,-2.232280,8.497458,-1.646151,-7.935877,2.726072,1.880625,2.714545,1.532591,9.643441,-5.324623,1.810906,-4.496534,-7.129856,-9.570542,0.577279,6.346829,-9.931620,-7.159297,8.512652,-2.109169,7.890355,-0.360529,9.274385,1.007034,-8.954829,3.287284,-3.408097,-6.147838,4.878404,2.861564,-8.215846,-6.611844,7.260128,8.241581,8.491635,9.486039,-1.233720,3.008080,3.736236,-9.542047,-5.683900,-7.744728,3.325546,9.938160,2.486347,6.285645,-9.036423,-8.705198,-5.416965,-3.367416,0.332092,-9.160789,4.500154,7.227946,-0.347690,9.909174,0.488353,5.897339,-0.460294,3.800888,0.972768,5.245689,-9.823014,-9.962903,0.895985,8.488845,-8.590589,-8.337477,4.561756,9.822113,2.105023,4.183062,-1.677921,1.781980,9.413451,-1.342696,5.729649,-4.298359,5.912181,8.110178,8.171744,-6.919961,-7.607513,-6.739420,-3.136716,-5.491463,-8.495443,4.014921,-3.376677,2.744713,9.626692,6.410580,3.826437,7.041179,-4.903675,5.200304,1.305591,5.565383,4.624746,6.827422,3.873244,4.739624,7.347303,-4.413566,-4.937490,-0.940347,7.112896,-6.427237,7.270214,-6.552473,-1.349153,-8.335249,9.640747,-8.586801,0.107612,-1.253947,0.857958,-1.956286,-3.167608,-8.375107,-4.760618,6.055971,-8.071908,-8.141379,2.768418,3.809536,-5.785543,2.351452,-2.970095,-8.692535,9.500157,-2.943734,5.430138,-7.788364,-2.359464,-8.335443,8.492070,-4.258371,1.035537,6.538233,6.232787,0.001090,-7.067062,9.596522,-9.972755,-6.681525,8.284009,-7.277428,9.638912,-6.988764,7.741861,-7.274929,-7.671947,8.215367,2.351475,-1.276305,7.097913,8.809164,-1.366078,-3.830590,-7.149447,9.747377,-7.899963,-6.017339,-0.501866,8.447266,8.221780,-3.904317,-3.688350,-5.931646,-8.935478,1.018201,-5.988500,-3.468344,7.706015,1.695848,3.212091,3.815970,-6.440780,-9.123571,1.586124,-5.911246,8.514369,-0.292095,-8.421975,-9.278407,-5.377183,7.513585,-3.036559,4.824299,-5.061058,4.806076,5.911279,0.982841,1.278878,-7.612850,4.769803,1.420612,1.440445,2.520587,-4.854404,4.210828,8.162338,1.228926,-7.881515,4.770496,2.211839,-0.771442,-9.969818,-9.822107,0.337014,-2.006633,-5.611402,-9.609744,2.769742,3.774515,9.478020,-5.736944,0.587936,-8.812028,9.767878,4.355801,-5.858251,7.815789,5.187637,-8.444915,0.308946,-2.875110,9.778021,8.723471,-3.872076,-9.117714,6.085602,-7.574316,9.800477,-8.499240,-7.438620,4.339952,-3.237383,9.152112,8.334260,-1.734262,-3.782059,-4.788119,8.597870,5.855850,-2.194904,7.778372,-1.906697,5.541930,-6.097242,-8.294694,9.102293,-7.122894,3.943263,4.346095,9.337985,3.751424,-9.713101,0.771814,6.329071,5.719424,8.061857,-6.424997,-9.891455,6.071791,5.953928,-9.997058,7.227630,-9.378117,-7.773569,2.454485,-5.393424,-1.054970,-4.201688,-7.372618,-8.701104,-4.691441,8.111253,2.410689,-5.561628,-7.218474,0.738082,-3.403588,6.957601,0.447511,-1.399885,-0.395943,9.779393,-5.059440,-2.908158,1.239322,-3.518993,-5.566900,-4.322548,-5.267050,-2.707395,0.719132,2.683161,5.858212,-9.135677,-8.614137,7.541023,0.021170,4.265520,5.506943,2.576109,-9.696709,-1.653896,4.199590,8.300795,3.179436,-3.306033,3.996101,-5.138456,2.174338,8.758002,6.792593,-5.774655,0.426382,-6.632966,6.420806,4.889245,-6.074111,1.263771,5.184317,0.126535,-1.759235,0.784072,6.988732,-5.870891,-9.774759,-4.218632,4.640985,3.084602,9.115754,6.079071,8.347432,-0.402690,-2.877473,1.909487,-0.651503,-5.713419,-6.333791,-6.343557,9.055172,-8.843831,-9.338330,6.733443,0.345800,-0.752427,7.967836,-5.517765,5.508921,-0.590654,-7.380868,6.246028,-0.208544,4.325571,4.734081,-2.763857,4.240951,-2.679527], dtype = "float32")#candidate|4865|(704,)|const|float32
call_4864 = relay.TupleGetItem(func_4708_call(relay.reshape(const_4865.astype('float32'), [8, 11, 8])), 0)
call_4866 = relay.TupleGetItem(func_4711_call(relay.reshape(const_4865.astype('float32'), [8, 11, 8])), 0)
func_4261_call = mod.get_global_var('func_4261')
func_4265_call = mutated_mod.get_global_var('func_4265')
var_4885 = relay.var("var_4885", dtype = "float32", shape = (1344,))#candidate|4885|(1344,)|var|float32
call_4884 = relay.TupleGetItem(func_4261_call(relay.reshape(var_4885.astype('float32'), [2, 672]), relay.reshape(bop_4860.astype('float32'), [1320,]), ), 2)
call_4886 = relay.TupleGetItem(func_4265_call(relay.reshape(var_4885.astype('float32'), [2, 672]), relay.reshape(bop_4860.astype('float32'), [1320,]), ), 2)
output = relay.Tuple([bop_4860,call_4864,const_4865,call_4884,var_4885,])
output2 = relay.Tuple([bop_4863,call_4866,const_4865,call_4886,var_4885,])
func_4921 = relay.Function([var_4827,var_4885,], output)
mod['func_4921'] = func_4921
mod = relay.transform.InferType()(mod)
var_4922 = relay.var("var_4922", dtype = "float32", shape = (8, 11, 15))#candidate|4922|(8, 11, 15)|var|float32
var_4923 = relay.var("var_4923", dtype = "float32", shape = (1344,))#candidate|4923|(1344,)|var|float32
output = func_4921(var_4922,var_4923,)
func_4924 = relay.Function([var_4922,var_4923,], output)
mutated_mod['func_4924'] = func_4924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4068_call = mod.get_global_var('func_4068')
func_4070_call = mutated_mod.get_global_var('func_4070')
call_4929 = func_4068_call()
call_4930 = func_4068_call()
output = call_4929
output2 = call_4930
func_4934 = relay.Function([], output)
mod['func_4934'] = func_4934
mod = relay.transform.InferType()(mod)
mutated_mod['func_4934'] = func_4934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4934_call = mutated_mod.get_global_var('func_4934')
call_4935 = func_4934_call()
output = call_4935
func_4936 = relay.Function([], output)
mutated_mod['func_4936'] = func_4936
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4982 = relay.var("var_4982", dtype = "int8", shape = (4, 9, 3))#candidate|4982|(4, 9, 3)|var|int8
var_4983 = relay.var("var_4983", dtype = "int8", shape = (4, 9, 3))#candidate|4983|(4, 9, 3)|var|int8
bop_4984 = relay.greater_equal(var_4982.astype('bool'), relay.reshape(var_4983.astype('bool'), relay.shape_of(var_4982))) # shape=(4, 9, 3)
bop_4987 = relay.bitwise_or(var_4983.astype('int64'), relay.reshape(var_4982.astype('int64'), relay.shape_of(var_4983))) # shape=(4, 9, 3)
func_1271_call = mod.get_global_var('func_1271')
func_1274_call = mutated_mod.get_global_var('func_1274')
const_4995 = relay.const([[-4],[7],[4],[10],[1],[2],[5],[10],[-4],[-9],[2],[-2],[9],[2],[2],[6],[2],[-9],[-3],[10],[6],[6],[2],[7],[2],[-9],[-5],[-7],[7],[-8],[-3],[6],[-8],[-10],[3],[6],[4],[9],[6],[1],[3],[2],[9],[4],[-1],[8],[9],[-9],[-8],[-7],[-1],[-2],[-5],[-2],[-8],[-10],[-1],[3],[-4],[-9],[-1],[10],[10],[6],[-8],[-10],[-8],[-5],[-5],[5],[-8],[-6],[-9],[-10],[-8],[-9],[5],[-9],[-9],[-4],[2],[10],[-6],[2],[-2],[5],[-1],[-10],[2],[3],[-10],[-8],[-4],[-9],[-6],[1],[-8],[-7],[-6],[6],[-5],[9],[-5],[-8],[2],[6],[-6],[6],[-5],[-2],[-9],[-8],[-6],[1],[-3],[3],[9],[-8],[2],[1],[9],[-5],[-6],[-4],[5],[2],[1],[-2],[5],[2],[-10],[6],[6],[6],[-9],[-3],[6],[3],[8],[-3],[-3],[8],[6],[-4],[3],[9],[-10],[5],[-10],[-5],[7],[7],[-5],[-7],[8],[-7],[-8],[-9],[-7],[5],[7],[-3],[10],[3],[10],[9],[8],[-3],[8],[6],[-4],[9],[10],[-6],[10],[-4],[5],[4],[-7],[5],[6],[5],[2],[7],[-9],[-8],[-7],[-5],[-6],[1],[4],[3],[-5],[7],[5],[-9],[8],[7],[1],[-1],[-6],[-5],[7],[-10],[-1],[-9],[8],[-4],[-8],[-7],[5],[-5],[10],[-6],[-5],[-3],[-8],[-6],[8],[-10],[-8],[-6],[8],[1],[3],[10],[-6],[2],[7],[8],[6],[3],[-2],[1],[-6],[3],[-7],[-10],[10],[-2],[3],[-2],[8],[-6],[-5],[7],[8],[5],[10],[3],[4],[-9],[4],[-7],[-3],[9],[4],[-7],[-9],[-7],[7],[-6],[-5],[-6],[5],[-10],[5],[4],[-9],[8],[-2],[1],[10],[8],[9],[6],[1],[-1],[-2],[-3],[8],[10],[5],[5],[-4],[9],[9],[4],[6],[-3],[-9],[-2],[-2],[1],[2],[3],[-1],[3],[6],[1],[2],[6],[10],[5],[1],[-2],[8],[5],[7],[-3],[9],[-8],[10],[6],[1],[6],[9],[-7],[1],[6],[9],[-4],[-4],[-4],[-4],[1],[-5],[-6],[2],[1],[-1],[-7],[8],[-9],[3],[10],[-5],[-6],[3],[9],[8],[-3],[-9],[-10],[-10],[4],[-7],[-4],[-4],[-3],[-8],[8],[9],[-2],[5],[2],[-1],[10],[3],[-3],[-2],[-6],[8],[3],[3],[-9],[-1],[6],[-3],[4],[2],[-5],[10],[-5],[5],[8],[4],[6],[6],[-4],[-7],[1],[9],[8],[10],[10],[-8],[4],[-8],[3],[-8],[-3],[-4],[4],[2],[8],[10],[9],[-1],[-9],[-9],[-2],[2],[6],[-7],[-7],[7],[7],[1],[-1],[1],[2],[1],[1],[8],[-2],[9],[-5],[1],[2],[8],[3],[9],[9],[3],[-3],[-1],[6],[-4],[-5],[-6],[-9],[-4],[5],[6],[1],[1],[1],[6],[-2],[-10],[-3],[-7],[7],[5],[6],[-1],[-6],[1],[-8],[3],[1],[7],[-3],[-2],[10],[-7],[-6],[-4],[-10],[5],[10],[-2],[10],[-10],[-10],[-2],[-6],[-5],[-10],[4],[-2],[6],[9],[-9],[7],[-4],[-9],[-3],[-10],[9],[-5],[-3],[10],[10],[8],[1],[-6],[5],[7],[4],[-9],[2],[5],[-9],[10],[4],[-9],[-8],[6],[8],[-1],[1],[-7],[5],[-4],[9],[7],[3],[9],[-4],[-10],[-4],[-5],[7],[-10],[5],[-7],[1],[7],[-10],[-6],[6],[2],[-5],[1],[-8],[10],[-1],[4],[-8],[6],[-8],[-2],[-9],[-6],[1],[1],[5],[-7],[4],[2],[1],[6],[6],[-2],[6],[8],[3],[4],[10],[-4],[-4],[-6],[-8],[-1],[-1],[4],[2],[-5],[-10],[3],[-7],[10],[2],[3],[-4],[10],[-3],[6],[9],[4],[10],[-3],[-8],[1],[7],[5],[-4],[5],[9],[-5],[-6],[10],[1],[-3],[-3],[4],[6],[6],[-8],[-3],[-10],[1],[3],[9],[8],[2],[10],[5],[10],[-6],[6],[-6],[7],[-8],[10],[2],[-10],[-5],[2],[5],[-9],[4],[-1],[-5],[-7],[-3],[8],[5],[5],[2],[7],[-5],[-10],[-1],[6],[10],[3],[7],[3],[6],[-2],[4],[10],[7],[5],[1],[5],[8],[-6],[-8],[5],[10],[-2],[-5],[-10],[6],[9],[1],[-1],[5],[8],[-7],[-9],[10],[6],[-2],[6],[10],[-10],[4],[3],[1],[1],[-1],[10],[8],[9],[-3],[-4],[8],[9],[-8],[1],[-4],[2],[-2],[-9],[7],[6],[-2],[-2],[-4],[-8],[1],[-10],[-2],[10],[-5],[-10],[3],[-6],[-5],[1],[4],[-9],[-4],[9],[-4],[-7],[-10],[8],[5],[2],[9],[10],[3],[1],[10],[1],[-9],[-2],[-3],[-3]], dtype = "int16")#candidate|4995|(715, 1)|const|int16
const_4996 = relay.const([-9.935967,6.801526,-5.024385,2.018276,2.111321,-0.431153,8.521609,-5.555085,-3.174959,0.771640,-8.260671,3.730484,-5.500553,0.368570,0.770442,-4.865599,7.527343,-7.917678,-0.903658,-5.709125,-2.180322,3.544779,0.658145,-5.497009,-5.895499,1.199458,8.383368,-9.824161,2.457932,-4.999286,-6.044819,-2.765465,-9.172717,3.328297,-5.471041,-2.957895,-9.296077,-8.501681,-3.595777,5.315812,7.466426,6.125847,4.126668,-9.911561,6.030896,7.515756,8.809601,-2.422316,-9.807141,-0.176537,5.411566,-4.651140,-4.995541,4.112782,7.352143,-2.162303,1.133263,8.109174,4.029761,5.180394,-1.931914,0.549908,-6.871380,6.097182,1.273359,7.557273,9.531733,3.884938,8.798103,-5.724055,4.108579,6.012057,-9.928491,-5.837089,-5.085633,3.234202,-1.458804,-3.381958,-2.081994,-3.945039,0.292734,-9.174580,2.188694,5.312972,-5.345059,1.466219,-4.374261,-7.230944,8.247931,-2.263866,6.649215,6.614534,-2.957749,-4.777437,2.145347,5.027849,8.436450,7.907013,7.364837,4.982017,-7.808214,8.605636,8.079537,-5.942522,-1.956023,-4.252236,-6.751760,-8.087968,5.276457,9.806652,9.651472,0.683310,-7.884837,0.234595,1.313227,0.412001,1.584762,-7.186751,-5.732101,2.089800,-7.299063,-4.671421,2.430019,7.445882,-8.912521,-4.623527,1.033468,-8.142983,-3.636421,1.831936,-0.103521,-8.062053,-0.685725,-2.728882,0.161505,2.031502,1.089268,-1.860936,-6.480088,9.852205,-5.573007,-9.457623,5.900217,6.105617,-8.553506,-6.706788,8.897762,-6.201592,2.519251,-4.576050,8.731665,-7.090767,-7.220678,7.665191,2.674283,9.847058,-5.127902,7.957540,-0.354672,-3.987087,-5.220068,4.387556,8.155877,4.791746,-1.013767,6.873933,0.511279,-8.216321,-5.460996,6.109904,-7.339860,9.849910,-4.992600,-9.462552,3.239688,-7.771288,5.249330,3.404982,7.230179,-6.782044,-7.548071,6.999184,9.612805,0.063962,-0.987429,1.543085,5.226323,7.018012,-0.584979,-3.861569,-1.362315,2.530088,-4.610918,-7.883218,6.999434,2.193155,-7.204870,9.667979,-1.394664,2.205419,5.071368,3.360229,5.345042,9.339066,4.775660,7.876834,-8.270273,7.025732,8.500613,-7.733127,-5.915565,2.954667,7.368964,8.149589,7.292978,-2.880608,5.783959,-7.710203,-0.278110,-0.877623,2.342465,-1.898903,-7.349843,0.080408,5.571142,-2.598649,1.161108,4.557726,8.528961,9.994432,0.782310,9.194812,7.474319,-4.378154,0.428503,9.018358,-7.421073,-4.921133,-8.380821,4.718665,-8.126713,1.739281,7.861450,-2.757878,3.573832,0.473285,2.004243,-2.822720,-9.361769,-2.633068,3.442628,7.921650,6.926392,7.022243,7.481669,-8.925059,-5.625442,4.035972,-4.016861,-1.699740,6.701107,-7.668766,2.359945,-0.581399,2.167195,7.713982,-8.272647,1.090421,4.923971,7.250946,8.648503,-8.908993,-2.651316,6.783678,3.908792,-7.317176,1.597168,8.810205,5.487625,3.652222,-2.786166,-9.021032,5.442092,8.547689,-9.817900,9.699827,-6.432036,3.118952,4.277713,0.080078,7.997686,-3.692088,-3.304508,1.864387,6.987256,4.625677,3.295815,-7.768013,0.324028,3.917047,0.164736,5.181250,-0.634835,-0.211705,7.823601,-6.248846,8.605962,6.637776,-0.420828,-7.909744,3.257511,-6.098589,6.398690,2.272122,-3.782874,-7.026882,6.326837,7.871003,-2.342119,-7.777027,1.507493,-6.017645,4.152826,-9.925076,-9.154465,2.884051,-9.504865,2.153619,-4.847854,-1.728776,9.934059,-2.271258,-3.306611,2.766031,5.633072,-7.265023,-4.468461,-7.849092,4.457923,-4.697559,3.173261,4.322381,1.589954,3.114199,-1.576148,-7.039747,-8.869664,-5.502017,-4.341445,4.124762,6.255321,-6.728218,5.418259,0.928165,9.829888,-8.939112,8.297369,1.077435,-6.837849,8.530393,-8.742629,6.274399,-2.223925,-7.272054,1.858917,5.684508,8.528643,-4.714939,-9.053776,0.562906,1.963961,-3.341522,-1.384417,5.683178,-3.482054,4.061240,-5.381135,4.142950,-5.092946,7.782152,3.293519,7.664502,-8.213174,6.508131,3.052000,4.833797,4.025768,-5.482527,9.481786,-2.098990,-7.978738,-4.853390,-5.121485,1.940600,0.105206,-9.729200,1.096502,-1.468774,-6.760492,-4.766281,-3.054558,-8.675367,8.803921,7.649802,0.604750,-1.845640,1.921333,-6.773858,-0.675461,3.052522,9.075071,0.950575,0.226774,-8.088658,4.378935,2.040588,-7.293213,4.210465,-1.056986,-5.020579,4.491174,6.595961,-6.735346,-0.513635,-3.532120,-5.138948,-0.575685,-6.188528,9.699337,0.716550,-6.233279,0.054059,-4.574606,-7.001806,4.392370,-5.198841,-1.595835,-8.872384,-1.084104,9.941707,-2.568842,-9.179483,7.140892,-3.356775,0.637208,-7.695699,-0.297523,1.646537,-8.771749,-3.274447,-1.567234,-8.803156,-4.875294,7.285378,-1.602517,1.584769,6.001781,2.750631,5.412700,1.604637,8.194286,-4.188675,5.577048,-9.467603,0.145993,-6.467172,-6.855617,-5.918523,3.357597,2.223310,8.561273,-3.978318,-0.244253,2.796501,0.644715,-0.767449,-1.539669,-7.192574,-1.911208,-3.259978,6.418080,-9.923066,4.757390,7.640548,-8.397833,-4.716588,3.183774,-4.347824,-4.287028,9.404807], dtype = "float32")#candidate|4996|(490,)|const|float32
call_4994 = relay.TupleGetItem(func_1271_call(relay.reshape(const_4995.astype('int16'), [11, 13, 5]), relay.reshape(const_4996.astype('float32'), [7, 70]), ), 0)
call_4997 = relay.TupleGetItem(func_1274_call(relay.reshape(const_4995.astype('int16'), [11, 13, 5]), relay.reshape(const_4996.astype('float32'), [7, 70]), ), 0)
bop_5001 = relay.logical_and(bop_4987.astype('bool'), relay.reshape(var_4983.astype('bool'), relay.shape_of(bop_4987))) # shape=(4, 9, 3)
output = relay.Tuple([bop_4984,call_4994,const_4995,const_4996,bop_5001,])
output2 = relay.Tuple([bop_4984,call_4997,const_4995,const_4996,bop_5001,])
func_5013 = relay.Function([var_4982,var_4983,], output)
mod['func_5013'] = func_5013
mod = relay.transform.InferType()(mod)
mutated_mod['func_5013'] = func_5013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5013_call = mutated_mod.get_global_var('func_5013')
var_5015 = relay.var("var_5015", dtype = "int8", shape = (4, 9, 3))#candidate|5015|(4, 9, 3)|var|int8
var_5016 = relay.var("var_5016", dtype = "int8", shape = (4, 9, 3))#candidate|5016|(4, 9, 3)|var|int8
call_5014 = func_5013_call(var_5015,var_5016,)
output = call_5014
func_5017 = relay.Function([var_5015,var_5016,], output)
mutated_mod['func_5017'] = func_5017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2923_call = mod.get_global_var('func_2923')
func_2924_call = mutated_mod.get_global_var('func_2924')
call_5056 = relay.TupleGetItem(func_2923_call(), 0)
call_5057 = relay.TupleGetItem(func_2924_call(), 0)
output = relay.Tuple([call_5056,])
output2 = relay.Tuple([call_5057,])
func_5069 = relay.Function([], output)
mod['func_5069'] = func_5069
mod = relay.transform.InferType()(mod)
mutated_mod['func_5069'] = func_5069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5069_call = mutated_mod.get_global_var('func_5069')
call_5070 = func_5069_call()
output = call_5070
func_5071 = relay.Function([], output)
mutated_mod['func_5071'] = func_5071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3166_call = mod.get_global_var('func_3166')
func_3168_call = mutated_mod.get_global_var('func_3168')
call_5074 = func_3166_call()
call_5075 = func_3166_call()
func_958_call = mod.get_global_var('func_958')
func_962_call = mutated_mod.get_global_var('func_962')
const_5087 = relay.const([[3,1,2,-9,3,2,3,-5,1,10,10,6,-1,-5,-4,-7,-6,2,-4,-4,-7,2,4,-7,-9,-6,7,9,2,3,2,1,-10,-7,-6,-3,9,-2,-5,10,8,-3,6,2,-5,-4,-7,-6,-9,-3,-3,-7,2,-7,-10,10,-1,-2,-6,-6,1,7,-4,5,5,-10,4,5,9,-2,-7,9,-9,8,7,-6,4,8,-8,5,3,-6,-3,5],[-10,-2,-1,-8,2,-6,10,7,9,5,-10,-3,-4,-10,-9,-10,1,-8,3,-5,-4,3,-4,9,6,1,2,9,-4,-6,1,1,-10,-6,-7,-7,3,4,-10,1,6,-4,-7,-6,-9,3,10,3,5,2,-2,10,9,-3,6,7,-5,2,-5,4,-3,-5,10,-3,-1,6,6,-7,1,-7,3,1,-6,-3,-1,4,-3,-7,1,10,8,5,2,-10],[3,2,-3,5,7,-2,-4,-2,-7,4,2,-10,-7,-4,-7,6,4,-6,-2,-6,-1,-7,5,4,10,-2,1,3,-6,-1,-1,-3,-6,2,1,6,8,-9,-5,-7,-2,-9,10,2,-7,1,9,-3,-4,-2,-4,-9,4,-5,2,7,-10,8,8,-10,-1,5,4,5,-4,6,-5,-10,4,1,-9,1,-5,-3,-9,10,-3,-1,2,6,-3,5,7,9],[3,9,-10,-3,-9,10,7,-9,-2,7,6,-1,6,-7,3,4,7,8,-4,-4,5,-3,1,-3,4,-8,-3,-9,7,4,1,-6,1,-8,2,2,-4,-10,-8,-10,2,3,9,6,10,-5,-10,-1,-2,-8,1,-4,4,1,-6,6,-9,5,3,-5,1,-3,-3,-4,5,1,-1,-10,6,8,-4,-10,-5,2,-6,10,9,10,10,-6,5,1,-10,-4],[-4,-10,9,1,7,-2,2,-10,-9,-4,-4,6,-8,7,9,6,-4,-4,-8,-6,10,-8,4,-5,10,-4,10,8,-6,-5,8,10,2,6,-9,-7,-2,3,-4,-1,-10,1,-4,5,5,8,-5,-5,10,-7,4,10,-8,2,-1,-6,-7,-10,-7,-4,7,4,-10,-9,10,1,-9,-10,4,-8,-6,-8,1,-7,-5,9,-2,-5,3,3,1,1,-7,-8],[-4,7,-1,4,-3,10,-1,9,5,-4,-10,-6,-2,-3,-8,9,-9,2,1,2,7,1,5,1,-6,10,3,6,-1,-4,2,-10,8,-1,-10,-3,6,-6,4,1,-2,5,-7,1,-2,6,6,4,-10,3,7,8,9,-6,-1,2,-10,-9,10,6,4,-7,-9,-6,-8,-8,4,10,-2,-6,-5,-8,-7,-3,-8,-10,-10,5,-2,8,-2,4,-4,9],[5,1,-6,-7,10,2,9,-2,-1,-8,-10,2,3,-9,-2,-5,6,7,6,6,3,4,10,-1,-7,-5,-3,10,-2,-5,7,-3,7,-4,-5,-1,-8,10,-2,-10,-8,-5,-9,1,2,-8,-7,2,3,6,-4,-6,-1,2,-5,-2,5,-8,-2,10,4,-5,-8,-2,2,-9,-7,1,-1,-3,3,-1,-5,-7,-5,-3,4,9,-6,5,1,4,-10,7]], dtype = "int32")#candidate|5087|(7, 84)|const|int32
var_5088 = relay.var("var_5088", dtype = "float64", shape = (192,))#candidate|5088|(192,)|var|float64
call_5086 = relay.TupleGetItem(func_958_call(relay.reshape(const_5087.astype('int32'), [14, 7, 6]), relay.reshape(var_5088.astype('float64'), [192,]), ), 1)
call_5089 = relay.TupleGetItem(func_962_call(relay.reshape(const_5087.astype('int32'), [14, 7, 6]), relay.reshape(var_5088.astype('float64'), [192,]), ), 1)
output = relay.Tuple([call_5074,call_5086,const_5087,var_5088,])
output2 = relay.Tuple([call_5075,call_5089,const_5087,var_5088,])
func_5090 = relay.Function([var_5088,], output)
mod['func_5090'] = func_5090
mod = relay.transform.InferType()(mod)
var_5091 = relay.var("var_5091", dtype = "float64", shape = (192,))#candidate|5091|(192,)|var|float64
output = func_5090(var_5091)
func_5092 = relay.Function([var_5091], output)
mutated_mod['func_5092'] = func_5092
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5139 = relay.var("var_5139", dtype = "float32", shape = (3, 15, 7))#candidate|5139|(3, 15, 7)|var|float32
var_5140 = relay.var("var_5140", dtype = "float32", shape = (3, 15, 7))#candidate|5140|(3, 15, 7)|var|float32
bop_5141 = relay.floor_divide(var_5139.astype('float32'), relay.reshape(var_5140.astype('float32'), relay.shape_of(var_5139))) # shape=(3, 15, 7)
output = bop_5141
output2 = bop_5141
func_5144 = relay.Function([var_5139,var_5140,], output)
mod['func_5144'] = func_5144
mod = relay.transform.InferType()(mod)
mutated_mod['func_5144'] = func_5144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5144_call = mutated_mod.get_global_var('func_5144')
var_5146 = relay.var("var_5146", dtype = "float32", shape = (3, 15, 7))#candidate|5146|(3, 15, 7)|var|float32
var_5147 = relay.var("var_5147", dtype = "float32", shape = (3, 15, 7))#candidate|5147|(3, 15, 7)|var|float32
call_5145 = func_5144_call(var_5146,var_5147,)
output = call_5145
func_5148 = relay.Function([var_5146,var_5147,], output)
mutated_mod['func_5148'] = func_5148
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5171 = relay.var("var_5171", dtype = "float64", shape = (1, 4, 9))#candidate|5171|(1, 4, 9)|var|float64
uop_5172 = relay.tan(var_5171.astype('float64')) # shape=(1, 4, 9)
output = uop_5172
output2 = uop_5172
func_5179 = relay.Function([var_5171,], output)
mod['func_5179'] = func_5179
mod = relay.transform.InferType()(mod)
var_5180 = relay.var("var_5180", dtype = "float64", shape = (1, 4, 9))#candidate|5180|(1, 4, 9)|var|float64
output = func_5179(var_5180)
func_5181 = relay.Function([var_5180], output)
mutated_mod['func_5181'] = func_5181
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5269 = relay.var("var_5269", dtype = "float64", shape = ())#candidate|5269|()|var|float64
var_5270 = relay.var("var_5270", dtype = "float64", shape = (5, 9, 2))#candidate|5270|(5, 9, 2)|var|float64
bop_5271 = relay.power(var_5269.astype('float64'), var_5270.astype('float64')) # shape=(5, 9, 2)
func_364_call = mod.get_global_var('func_364')
func_367_call = mutated_mod.get_global_var('func_367')
var_5275 = relay.var("var_5275", dtype = "uint64", shape = (256,))#candidate|5275|(256,)|var|uint64
call_5274 = relay.TupleGetItem(func_364_call(relay.reshape(var_5275.astype('uint64'), [16, 16, 1])), 1)
call_5276 = relay.TupleGetItem(func_367_call(relay.reshape(var_5275.astype('uint64'), [16, 16, 1])), 1)
func_1019_call = mod.get_global_var('func_1019')
func_1022_call = mutated_mod.get_global_var('func_1022')
const_5290 = relay.const([[0.025553,-6.495634,8.594762,7.492986,-3.017084,0.423395,2.807123,-1.088194],[-8.476675,-9.187317,-1.710963,3.522065,-0.753493,-3.147363,-9.456752,-1.495448],[-0.585827,9.088419,6.461167,-3.707521,-0.220595,-3.548017,-8.884259,-3.526488],[-0.213163,-1.069759,-3.521230,0.084625,-3.295140,7.542049,7.551943,8.638518],[1.299176,6.428556,4.248184,-5.629763,4.951042,4.436677,2.771838,-7.517632],[-6.818594,0.078532,3.274109,4.705879,-6.466965,-1.710842,9.382018,2.875376],[-3.524698,4.552053,5.582255,6.133243,-8.678756,-5.509541,-2.034590,5.410907],[5.778750,7.927925,0.450490,-1.071279,-4.830098,-0.400095,-8.412859,-2.269958],[-3.921394,-8.985192,2.599273,3.003716,-9.761359,8.037124,-3.693066,3.543708],[2.708615,-1.433320,-1.388530,-5.200687,-7.946545,-0.206772,9.218144,8.972311],[-2.455775,1.191531,-5.644471,7.673110,-9.363566,2.655664,3.123975,-4.691005],[-3.308215,0.876449,1.212224,7.604108,-1.064813,2.281635,-1.594762,-9.015059],[-2.543106,-4.622775,-7.131142,-8.635247,-2.574895,4.243128,-9.802356,6.930774],[3.439705,6.325023,-7.780199,-4.987745,-6.915860,-0.437111,-2.300818,5.862532],[-9.932342,6.238630,2.296642,9.184668,-4.722418,9.825698,-0.548819,1.692851],[-1.537695,9.354487,3.608186,7.717523,3.665843,-3.599231,-9.785847,-8.114367],[0.773463,6.974844,1.276502,-8.323478,-0.981942,1.402981,-0.728110,-5.843745],[7.742030,-9.658062,1.225241,3.282132,3.439152,-7.815562,0.836965,2.584368],[8.609404,-2.244016,2.865491,-7.052970,-3.634918,0.768897,-5.818646,0.554492],[9.431704,-9.270280,-5.097934,4.261806,2.371621,8.596900,-2.995784,8.756594],[-7.162008,1.282254,-5.550079,6.407229,4.267676,-2.406720,-9.524703,7.579514],[5.647887,-5.807785,8.148592,6.763297,2.618070,-7.614417,0.189322,2.513204],[5.484655,-8.148731,-4.377998,-4.328025,-0.400282,0.036277,9.825476,-1.807436],[-5.063450,-2.899294,-4.326036,-2.559244,-9.314914,5.426107,-3.476269,8.174273]], dtype = "float64")#candidate|5290|(24, 8)|const|float64
call_5289 = relay.TupleGetItem(func_1019_call(relay.reshape(const_5290.astype('float64'), [192,])), 0)
call_5291 = relay.TupleGetItem(func_1022_call(relay.reshape(const_5290.astype('float64'), [192,])), 0)
func_1019_call = mod.get_global_var('func_1019')
func_1022_call = mutated_mod.get_global_var('func_1022')
call_5294 = relay.TupleGetItem(func_1019_call(relay.reshape(const_5290.astype('float64'), [192,])), 1)
call_5295 = relay.TupleGetItem(func_1022_call(relay.reshape(const_5290.astype('float64'), [192,])), 1)
output = relay.Tuple([bop_5271,call_5274,var_5275,call_5289,const_5290,call_5294,])
output2 = relay.Tuple([bop_5271,call_5276,var_5275,call_5291,const_5290,call_5295,])
func_5306 = relay.Function([var_5269,var_5270,var_5275,], output)
mod['func_5306'] = func_5306
mod = relay.transform.InferType()(mod)
var_5307 = relay.var("var_5307", dtype = "float64", shape = ())#candidate|5307|()|var|float64
var_5308 = relay.var("var_5308", dtype = "float64", shape = (5, 9, 2))#candidate|5308|(5, 9, 2)|var|float64
var_5309 = relay.var("var_5309", dtype = "uint64", shape = (256,))#candidate|5309|(256,)|var|uint64
output = func_5306(var_5307,var_5308,var_5309,)
func_5310 = relay.Function([var_5307,var_5308,var_5309,], output)
mutated_mod['func_5310'] = func_5310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3842_call = mod.get_global_var('func_3842')
func_3843_call = mutated_mod.get_global_var('func_3843')
call_5322 = relay.TupleGetItem(func_3842_call(), 0)
call_5323 = relay.TupleGetItem(func_3843_call(), 0)
output = relay.Tuple([call_5322,])
output2 = relay.Tuple([call_5323,])
func_5332 = relay.Function([], output)
mod['func_5332'] = func_5332
mod = relay.transform.InferType()(mod)
mutated_mod['func_5332'] = func_5332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5332_call = mutated_mod.get_global_var('func_5332')
call_5333 = func_5332_call()
output = call_5333
func_5334 = relay.Function([], output)
mutated_mod['func_5334'] = func_5334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4723_call = mod.get_global_var('func_4723')
func_4725_call = mutated_mod.get_global_var('func_4725')
call_5371 = func_4723_call()
call_5372 = func_4723_call()
func_265_call = mod.get_global_var('func_265')
func_268_call = mutated_mod.get_global_var('func_268')
var_5379 = relay.var("var_5379", dtype = "float64", shape = (192,))#candidate|5379|(192,)|var|float64
call_5378 = func_265_call(relay.reshape(var_5379.astype('float64'), [16, 2, 6]))
call_5380 = func_265_call(relay.reshape(var_5379.astype('float64'), [16, 2, 6]))
bop_5383 = relay.left_shift(call_5378.astype('int32'), relay.reshape(var_5379.astype('int32'), relay.shape_of(call_5378))) # shape=(16, 2, 6)
bop_5386 = relay.left_shift(call_5380.astype('int32'), relay.reshape(var_5379.astype('int32'), relay.shape_of(call_5380))) # shape=(16, 2, 6)
output = relay.Tuple([call_5371,bop_5383,])
output2 = relay.Tuple([call_5372,bop_5386,])
func_5388 = relay.Function([var_5379,], output)
mod['func_5388'] = func_5388
mod = relay.transform.InferType()(mod)
var_5389 = relay.var("var_5389", dtype = "float64", shape = (192,))#candidate|5389|(192,)|var|float64
output = func_5388(var_5389)
func_5390 = relay.Function([var_5389], output)
mutated_mod['func_5390'] = func_5390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4567_call = mod.get_global_var('func_4567')
func_4569_call = mutated_mod.get_global_var('func_4569')
call_5421 = func_4567_call()
call_5422 = func_4567_call()
var_5423 = relay.var("var_5423", dtype = "float32", shape = (8, 11, 5))#candidate|5423|(8, 11, 5)|var|float32
bop_5424 = relay.logical_xor(call_5421.astype('uint64'), var_5423.astype('uint64')) # shape=(8, 11, 5)
bop_5427 = relay.logical_xor(call_5422.astype('uint64'), var_5423.astype('uint64')) # shape=(8, 11, 5)
uop_5447 = relay.asinh(bop_5424.astype('float32')) # shape=(8, 11, 5)
uop_5449 = relay.asinh(bop_5427.astype('float32')) # shape=(8, 11, 5)
bop_5462 = relay.less_equal(uop_5447.astype('bool'), relay.reshape(bop_5424.astype('bool'), relay.shape_of(uop_5447))) # shape=(8, 11, 5)
bop_5465 = relay.less_equal(uop_5449.astype('bool'), relay.reshape(bop_5427.astype('bool'), relay.shape_of(uop_5449))) # shape=(8, 11, 5)
uop_5470 = relay.acos(bop_5424.astype('float64')) # shape=(8, 11, 5)
uop_5472 = relay.acos(bop_5427.astype('float64')) # shape=(8, 11, 5)
func_1580_call = mod.get_global_var('func_1580')
func_1583_call = mutated_mod.get_global_var('func_1583')
var_5491 = relay.var("var_5491", dtype = "uint64", shape = (91,))#candidate|5491|(91,)|var|uint64
var_5492 = relay.var("var_5492", dtype = "float64", shape = (192,))#candidate|5492|(192,)|var|float64
call_5490 = relay.TupleGetItem(func_1580_call(relay.reshape(var_5491.astype('uint64'), [1, 13, 7]), relay.reshape(var_5492.astype('float64'), [192,]), ), 1)
call_5493 = relay.TupleGetItem(func_1583_call(relay.reshape(var_5491.astype('uint64'), [1, 13, 7]), relay.reshape(var_5492.astype('float64'), [192,]), ), 1)
bop_5506 = relay.divide(bop_5462.astype('float32'), relay.reshape(var_5423.astype('float32'), relay.shape_of(bop_5462))) # shape=(8, 11, 5)
bop_5509 = relay.divide(bop_5465.astype('float32'), relay.reshape(var_5423.astype('float32'), relay.shape_of(bop_5465))) # shape=(8, 11, 5)
output = relay.Tuple([uop_5470,call_5490,var_5491,var_5492,bop_5506,])
output2 = relay.Tuple([uop_5472,call_5493,var_5491,var_5492,bop_5509,])
func_5512 = relay.Function([var_5423,var_5491,var_5492,], output)
mod['func_5512'] = func_5512
mod = relay.transform.InferType()(mod)
var_5513 = relay.var("var_5513", dtype = "float32", shape = (8, 11, 5))#candidate|5513|(8, 11, 5)|var|float32
var_5514 = relay.var("var_5514", dtype = "uint64", shape = (91,))#candidate|5514|(91,)|var|uint64
var_5515 = relay.var("var_5515", dtype = "float64", shape = (192,))#candidate|5515|(192,)|var|float64
output = func_5512(var_5513,var_5514,var_5515,)
func_5516 = relay.Function([var_5513,var_5514,var_5515,], output)
mutated_mod['func_5516'] = func_5516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3400_call = mod.get_global_var('func_3400')
func_3401_call = mutated_mod.get_global_var('func_3401')
call_5518 = relay.TupleGetItem(func_3400_call(), 0)
call_5519 = relay.TupleGetItem(func_3401_call(), 0)
func_2923_call = mod.get_global_var('func_2923')
func_2924_call = mutated_mod.get_global_var('func_2924')
call_5522 = relay.TupleGetItem(func_2923_call(), 0)
call_5523 = relay.TupleGetItem(func_2924_call(), 0)
func_3547_call = mod.get_global_var('func_3547')
func_3552_call = mutated_mod.get_global_var('func_3552')
const_5531 = relay.const(-8, dtype = "int64")#candidate|5531|()|const|int64
const_5532 = relay.const([-1,-9,-7,-4,7,1,10,9,-4,2,-7,8,-8,7,-1,4,-5,-4,9,7,2,7,-9,7,1,-7,-2,10,-1,-6,9,-6,-10,-7,10,7,3,4,-2,7,10,-2,8,2,10,2,9,-2,-10,-10,-2,-10,10,-10,5,-6,9,7,9,-7,-1,-8,8,-9,-8,9,-7,8,-5,2,4,-4,5,2,-3,2,-9,4,10,-6,-4,10,-5,1,-5,-9,10,-3,9,6,4,5,8,-3,-5,-7,-5,2,-3,10,-5,-8,4,-7,-7,-4,1,-6,-3,9,7,6,-1,2,9,-6,10,-7,-5,7,7,3,-5,9,8,-3,-4,-9,-7,-2,2,1,10,-6,2,7,9,9,10,1,8,5,2,8,6,6,-6,9,4,-2,-1,8,-10,-3,5,-8,-7,-4,8,10,3,-3,-2,-6,-8,-5,-9,10,-7,8,6,-6,1,-3,3,-7,1,5,2,2,-2,-10,7,8,2,8,4,-10,4,-5,9,1,-2,5,-8,4,1,8,-4,4,6,4,3,-6,1,4,-5,-2,-1,-1,-2,-8,-8,3,-7,-10,8,-3,-9,-10,10,2,10,2,-1,-10,-7,7,7,9,-8,4,-4,1,-6,6,6,9,2,-5,4,7,6,-9,6,6,9,-2,-9,-6,3,-10,10,2,1,-6,-5,-8,-4,5,-5,6,4,-6,-8,-9,8,7,-9,1,-8,-6,-7,5,1,3,-2,-1,4,3,-4,2,-2,-10,-10,2,6,-3,4,8,8,3,-10,-10,6,8,-4,9,-3,-6,10,3,7,2,-1,-7,2,3,-8,8,-6,1,-9,7,-3,-7,10,10,-5,9,3,-7,7,6,-2,-9,-1,8,5,3,8,-1,-1,8,-5,2,-2,-2,-8,6,1,8,-6,-3,4,6,-10,-2,10,-7,-6,1,-7,-9,-9,6,-8,3,5,-4,-4,10,-9,-4,-4,-2,-9,8,-5,-2,-10,8,5,4,9,-6,10,8,-10,-8,1,-5,-4,8,-10,6,9,1,-7,-3,-3,-1,6,-4,-10,-3,2,-3,2,8,2,-5,-9,-4,-1,5,7,-9,-7,-1,5,2,-5,6,8,1,-9,2,5,6,-2,-2,-1,4,-3,-5,-1,8,3,5,-7,1,5,1,9,5,-10,-2,9,-9,1,1,-10,-9,-2,-4,1,2,-9,5,2,-9,9,5,7,8,-7,-1,-7,-2,3,7,-1,9,2,8,-3,8,10,8,5,-9,-7,9,-1,5,7,9,9,-8,9,8,-6,-6,10,-6,-1,9,-7,4,-1,1,10,-6,7,3,3,-2,6,5,-9,2,8,-10,2,-3,2,1,-6,-3,4,-1,-7,-5,-8,-10,-5,-8,6,10,-1,-10,-8,7,9,-7,7,-1,-10,9,1,6,4,1,-2,-7,-3,-10,-10,-3,8,-4,-7,-1,-5,4,2,2,-5,-5,5,2,8,8,-8,9,-2,-2,9,-5,-6,2,10,3,8,-4,9,-10,-7,-7,9,2,-8,-10,10,5,8,-5,1,6,5,4,-6,-8,-1,8,10,1,6,7,9,-5,9,-5,-7,10,1,-3,8,-9,-8,-1,1,-8,-5,5,9,3,2,-8,1,1,4,8,-7,3,8,-8,7,-3,1,8,-10,7,9,10,-5,-1,-7,1,9,-1,-7,3,-5,6,-6,7,7,9,9,-7,2,-3,8,3,5,4,3,6,4,3,8,10,-3,-3,-8,-9,8,-7,6,-6,4,-5,-5,-6,-2,-3,-10,-6,-1,7], dtype = "int64")#candidate|5532|(672,)|const|int64
const_5533 = relay.const([-2.415280,9.913678,-3.667603,-0.844055,-1.921793,1.321046,1.629169,7.481472,-2.923443,-8.185781,2.010050,-3.082226,4.942726,-8.502822,8.179343,-5.420408,9.627342,5.597758,8.026317,7.944278,-3.493767,-8.956358,-6.865927,9.611811,8.524989,8.625111,-0.100479,-6.031001,6.750391,8.225307,-5.289625,-7.680057,2.407830,7.253844,4.745537,-8.563373,1.494462,3.493668,-4.701959,8.814422,-9.941352,-0.018095,-7.841179,-2.423126,0.973527,1.352434,5.880503,-2.436109,9.556529,9.120108,-3.897229,-1.402383,-0.260056,-5.938011,-1.706060,0.989640,-7.741847,2.635516,-5.988990,-0.557335,8.928675,7.492301,2.348931,8.443717,-3.125189,7.411627,-7.646910,-0.269185,-8.132467,9.274012,-4.166212,7.839370,9.149755,-9.438838,2.418526,8.297240,-1.882654,9.504873,-9.553392,-9.553309,-8.030030,-5.194588,1.359931,2.576340,3.340038,-6.524309,9.488788,-1.779323,-5.092197,-7.955717,6.315578,5.619563,0.299437,8.390213,2.335885,-8.371851,6.329330,3.859415,7.807502,-7.444459,9.413182,5.795625,1.334426,1.924665,-8.973424,3.166298,-0.993190,4.637991,2.459913,0.695991,-4.570028,-6.134455,-1.540509,-3.532181,3.753935,-7.793371,3.060732,9.085053,8.151456,-7.803037,1.048748,8.678329,-9.989298,4.304620,8.711895,8.411898,-3.606968,-5.695241,5.523038,-8.479535,8.536162,0.007102,-5.874780,0.679531,-7.547254,0.010763,3.841116,5.067994,0.056362,-4.703844,9.265351,-7.629543,9.901565,9.991136,5.873816,0.329901,-8.043900,4.443195,-9.713225,2.052532,2.275827,-3.097643,5.948850,-1.616695,-2.205536,-6.256540,-4.253645,8.462701,2.293902,-3.470587,-4.908837,5.106766,2.066716,-9.829186,-9.102413,-6.158948,-4.574197,-8.371024,-4.874834,7.450464,6.552964,-0.998261,-8.408162,-4.785795,-8.395933,4.974707,-8.288189,-0.983260,2.514443,0.526584,-9.670405,1.927082,-1.111543,-9.520767,9.209179,9.932989,3.618741,-8.106013,2.412021,5.336903,-7.336692,9.354513,-1.495326,-4.265390,-2.353076,7.704564,1.568197,0.678021,-9.993103,-4.432252,1.410479,6.602106,2.942096,8.022235,-2.600625,1.674034,9.337245,7.200641,-2.533371,0.719470,-0.901317,1.481228,-8.551667,6.284214,-1.931247,-5.310144,-3.577329,0.254234,5.737416,-1.471666,7.164030,-5.226918,-4.453222,-8.315684,0.976509,4.612753,-5.068407,5.737992,-5.864197,-5.916865,-1.818439,-3.080359,-4.247256,3.312620,-9.697377,7.196698,6.461340,-5.713599,0.296515,-2.496579,1.240494,-6.412656,-5.745058,-0.420371,3.603679,7.677339,2.045400,-5.627086,7.565782,7.028480,9.816643,-1.860859,8.907678,3.804924,4.405574,4.987092,5.359764,9.070129,-3.119693,-2.112547,-5.809973,0.448337,-2.376691,0.786966,9.320214,0.077260,9.665596,2.515999,3.639522,4.479690,-1.519276,0.203715,8.800044,5.787972,-0.786052,0.002749,-8.545632,-9.120610,-3.387247,-3.469157,-1.687252,-2.529259,2.491245,-1.330700,-2.138164,-0.926147,8.150142,2.320819,-9.070208,-5.202303,-3.089864,2.320894,-2.484287,0.645579,0.119218,3.852565,-9.978478,8.452545,1.748222,-5.094936,7.710195,9.015027,-9.946941,4.069951,9.669695,6.677741,1.577085,-2.320129,-6.776800,-3.273939,-0.577351,9.498869,-6.870760,-6.184881,5.447274,1.826384,4.111576,3.321914,5.199093,-7.600452,-3.821737,8.579716,-9.484381,1.836367,0.765066,-5.554904,3.528036,-4.862528,-9.884822,-7.010689,3.665530,2.026517,-7.949709,-5.469434,2.699413,-7.213103,-1.893275,-2.991595,-4.436016,7.820372,3.540216,6.476389,-5.336955,-3.520202,-3.072310,-7.870322,6.923338,5.649951,-1.771650,3.812970,-2.065317,1.804469,9.731870,-3.814856,1.640890,-0.864753,4.528205,-1.962315,8.361433,2.914574,7.001251,-0.194421,5.992645,-9.626998,6.443063,4.209292,7.946833,0.178121,-1.546742,-7.966376,0.116204,0.295290,-4.475579,-8.866565,-8.250232,-9.736561,2.553011,-1.044514,-5.751110,-8.307615,8.853751,5.085993,-6.688098,1.693743,-0.153205,2.936294,-8.451134,3.623251,-8.214305,8.860575,9.755597,-4.663335,-0.189566,1.179628,4.494382,-6.556267,7.903920,9.821746,-9.500928,9.309510,0.439579,0.913164,5.410047,-7.032795,-3.805448,-8.029594,7.688735,5.016358,-9.248887,-8.185606,-1.962348,-0.579889,5.402951,-7.308585,-7.170244,-8.195398,-9.870026,-6.835503,-2.760457,3.041772,-5.972377,-1.278292,-9.887233,7.197952,-8.628499,-6.257598,-6.846773,0.094230,-1.764120,-8.380075,6.283080,-4.993698,-6.649837,4.051107,-1.535729,0.143346,-4.256340,-3.122761,5.177162,0.891125,-5.825240,3.121241,-4.691413,-3.360523,-1.599279,-6.070244,0.196375,6.966028,5.083771,7.696190,2.429526,-1.415511,-6.093367,-9.892801,-3.056447,-8.950084,2.182063,1.493875,-8.835233,-5.998309,-4.794520,-5.692040,-4.595932,5.335017,-1.403642,3.705855,-1.857252,5.090101,-9.687512,-1.665848,-1.283482,6.274958,-0.016918,0.227341,-9.377837,5.055922,-5.528228,6.387792,0.597009,-4.437317,9.323360,7.976537,6.853549,-4.278027,-3.711789,-7.684941,1.536563,-8.734188,0.721899,-2.346617,-2.659791,-8.553833,7.872600,4.972478,9.348901,-0.051667,8.227735,-8.497559,5.892387,-4.439218,8.688664,-5.386727,7.599511,7.839132,-2.134123,-4.975825,8.659786,-0.893069,-1.660656,-9.340662,9.468886,-0.603233,-1.433778,-2.224516,-2.830367,-3.558691,6.949079,-8.085388,4.488089,3.618477,-3.239041,-4.299730,4.240700,-9.873062,-9.183341,1.958691,-5.413177,-7.421102,-6.292246,-1.722019,-1.580031,-4.047431,1.239343,-4.564523,-4.831860,-7.847257,3.600375,2.331857,0.439996,1.367028,-8.530735,-4.103876,-0.932867,0.150026,6.144553,6.499486,-4.442982,7.212954,3.411611,8.763363,-6.690740,-1.984403,-6.571301,-9.655198,6.800587,-3.388319,-5.250469,-1.442955,2.389157,3.248131,8.552803,-1.462857,-3.492453,9.626293,0.414058,-5.164836,5.101416,-4.083339,-1.187461,7.120421,-4.949807,8.487739,-4.346998,6.779518,3.214437,-0.955421,-8.205837,4.205114,4.546625,-1.619536,2.231070,-4.993324,6.094114,-7.578171,1.159506,0.733352,5.015933,-8.227134,3.209175,-2.005243,-4.226543,7.583886,7.354614,7.594097,-7.967015,-2.285157,-0.707366,-6.647262,3.498672,2.838034,-8.688630,-6.802045,1.807224,-5.698661,-5.320778,-6.413549,7.682915,7.293066,-4.149583,0.397075,-9.433899,-0.571098,-3.655950,-8.708644,6.610557,-1.413804,8.686604,-0.865481,0.860178,1.499381,1.393832,-4.341810,5.728400,5.347709,3.720860,-5.062592,-5.053723,-5.576271,3.775441,-8.909026,0.226288,6.615205,5.988048,8.878959,-1.855289,1.140039,-7.915053,-1.074140,6.949656,1.232104,9.097202,9.656465,-1.837220,-6.449254,-3.746323,9.091630,-2.978802,-6.437753,-0.435090,-0.282671,-1.931089,-3.090896,-2.996181,0.307204,-0.605668,-7.166810,-2.280535,-1.977440,2.180375,4.111289,6.038757,4.680298,7.550472,-9.550301,-5.725295,-6.404555,-8.922615,7.347736,5.964542,-9.223433,-5.371599,8.983125,-3.084874,4.925047,7.746729,-8.501226,3.238317,-3.284772,9.747342,-5.941590,9.947601,9.766816,4.282015,-2.780065,0.135611,4.223408,2.140602,-8.049318,-7.152440,-8.761622,-6.165182,-7.214253,-0.542529,-4.687986,1.809636,7.655075,0.526040,-6.348984,-7.942935,-9.957275,-8.014504,9.381816,-9.865939,8.958946,8.588344,-8.654306,-2.931276,-4.235385,3.242543,4.251013,0.432294,-3.430518,3.145804,-8.692324,2.519850,5.351441,-8.686327,-5.273230,-6.708640,5.105382,0.568925,-2.919063,-5.418198,-4.069232,9.019825,1.516712,0.622003,-6.922687,-9.016014,-4.360402,5.965875,2.323373,-5.336241,-6.807974,-1.179783,-2.814622,-3.211453,0.070787,3.723651,-8.361403,5.225126,-9.078477,1.978269,8.159443,6.087948,-5.797103,2.888913,-6.779505,4.994380,3.772124,-4.695209,0.872397,-5.855342,5.112788,-4.173014,-3.445093,9.745374,-7.592574,5.228506,8.868010,3.080784,5.522150,6.110963,-5.228614,6.065714,-6.575974,-6.946715,-1.521500,8.364822,-2.567849,4.762556,1.946392,8.774237,-0.387839,-5.123065,8.188390,1.786292,-7.144928,-7.247114,9.653069,-1.413807,3.767772,2.463510,3.606276,-1.927778,-8.181446,6.814197,-4.051476,-3.519381,0.777954,-3.029895,-5.588016,-2.076069,8.532545,-0.824112,-7.749646,-4.726148,5.970913,6.754851,-7.955542,-5.053254,2.227114,6.561691,9.881621,-3.483443,-1.380524,5.218560,-0.322733,0.925018,2.296218,-0.312787,9.386013,7.089101,-6.075286,3.577859,-0.508623,-2.752537,5.755445,-1.104167,9.656779,-8.001118,9.745604,-2.555718,0.615361,0.988950,7.986784,-7.899663,1.891069,9.876632,-3.115974,-8.366998,0.743623,-5.702505,-5.277503,0.898425,-0.547879,6.471514,7.691708,2.537780,-6.450965,6.912766,5.333555,-0.993329,-9.638912,-6.271959,-5.854310,3.607142,5.827339,2.609018,-4.441102,3.432130,-4.641842,3.313344,7.409691,-9.519100,9.725753,1.154251,8.979834,6.954081,-2.069283,-1.926098,8.387017,-5.387415,4.029661,-9.807001,-0.309193,-7.207756,9.318953,-3.640326,6.223406,-9.410646,4.284194,6.114994,2.747434,-0.515211,-4.123242,-2.413932,-4.812633,8.718707,-8.162253,-9.200324,5.603807,7.227082,-0.772170,1.717151,-9.467725,-1.220648,-9.713663,-7.710867,1.398395,2.564215,0.494058,5.003208,-7.850743,-2.649911,-4.733023,0.888300,9.381077,-0.943603,-1.240161,5.294326,0.857633,-6.503609,3.539024,2.134287,6.365227,5.818640,9.669867,5.253658,8.908123,-8.249870,-3.462096,5.819114,8.194773,8.784280,-7.562918,-2.558748,-5.466045,2.759348,-2.016214,-2.797566,5.076659,-9.891791,-6.503470,-9.334035,3.843563,-9.978710,-7.536748,-0.879116,8.762313,5.588881,-7.078917,-2.928351,5.248423,7.590764,-0.976277,3.770767,7.057541,-1.187154,9.785009,8.859373,-1.770286,-3.064416,8.146007,-9.935531,-1.581950,-8.542229,5.226752,-9.698757,-7.018227,-6.062463,0.577024,-0.335904,-1.989251,0.847430,8.097722,-3.550076,-0.405356,-6.098290,0.107942,-9.332287,9.939279,7.859034,2.435872,7.128529,6.578839,0.996686,5.976617,7.314969,-2.829481,-4.550387,5.933641,2.170740,7.780325,4.278538,-3.071756,5.992414,0.730772,2.747835,-5.070089,-3.953877,-1.667749,-4.036337,-0.487423,1.362745,-1.289086,-7.332206,4.670772,7.180744,-3.397899,5.888768,4.685181,-9.449306,0.114647,8.522200,-4.710399,2.401417,2.216961,-2.497873,7.735081,4.555854,0.903679,4.964546,6.913235,-4.270763,-0.206162,5.396656,-5.824679,-8.219859,0.128239,8.611442,2.980753,-0.640297,-3.327396,-1.927253,1.233699,-6.084195,-8.475901,1.109218,-2.868928,6.905273,8.625048,-1.199684,-6.806002,-9.948413,9.475641,1.270648,-3.037641,9.234318,-4.850445,4.977978,8.760394,0.289866,6.074934,-7.818190,-2.327348,-3.846452,-0.361030,4.942275,0.044783,-5.798633,2.620018,-3.773813,6.971009,-3.050854,5.003178,5.462108,3.172235,-3.862373,9.752693,0.569878,-3.383650,-7.143586,-7.810391,4.469073,1.017797,-9.207369,4.968843,-4.423864,6.194032,5.168931,-7.735792,7.752561,1.548011,3.576654,-4.557682,-6.226935,-1.614437,9.902682,-9.568835,2.545250,-7.683829,-7.398604,-9.787240,3.266210,1.904287,-0.232670,5.161519,-6.200834,-1.613578,-2.443126,-4.426616,9.774371,7.913810,1.175778,-2.862977,0.119627,8.668975,-7.528527,-5.206593,5.378451,-4.527352,-6.774002,7.775441,-4.440640,-2.973929,1.622019,6.624203,3.358264,9.024750,-6.210848,7.783300,9.817114,4.828028,-9.171367,3.685581,-7.766174,-6.693790,5.381479,9.826231,2.865754,-6.320846,-4.377596,0.054724,-4.722425,-9.217274,-0.107373,-6.439649,-8.846805,-1.901616,-8.920941,-2.219113,5.464003,6.200343,8.064794,8.837419,-2.263431,6.262473,6.631094,-4.195099,9.668779,9.429337,7.281380,8.271480,6.080315,-1.850837,6.913599,-3.511939,2.591918,-3.273643,-7.756022,4.432459,3.678153,3.561229,-9.743432,5.658516,9.602825,2.743036,-9.007394,-2.105338,-6.568430,0.712711,-0.827989,6.951487,0.055676,-4.156999,1.530777,-6.271001,-2.565047,6.566469,-3.282932,-9.323659,8.152765,-7.293497,1.420324,-4.190218,4.184682,5.027005,3.684341,-6.674389,-0.112504,3.846248,-7.031205,4.597821,9.121478,4.944264,8.484404,0.442651,-1.040717,-6.498167,4.437950,4.843976,9.944568,-4.557785,5.703952,3.745354,6.732612,4.971569,0.037929,-1.389796,-6.364720,-4.991007,8.438950,-2.547140,0.215910,3.554769,5.779341,7.919462,-2.811556,-9.213973,-0.896871,4.018228,-1.663562,-1.488860,8.405490,-1.296263,-3.777791,7.236534,1.836537,8.466771,0.733109,9.341336,-5.728304,7.123155,-2.966548,-9.379352,9.236004,-5.199685,6.806067,2.293110,3.537785,-8.234744,-1.300746,1.918342,1.633318,-8.025598,-3.061804,-3.002512,1.320454,2.086754,9.833900,-9.092002,4.019701,-0.424183,9.014067,-6.379647,6.586827,5.988686,-4.139272,4.923151,9.456056,-3.385719,8.076490,-9.196745,-4.262877,-2.985511,-1.570710,8.791758,8.687318,-6.938297,4.639276,6.606666,3.265619,1.135308,-4.559123,3.029434,-4.770073,5.918681,-9.993660,-9.592257,3.418452,-2.709237,-1.139429,7.280341,5.556818,-6.844058,-1.298888,-2.605300,-4.680696,-8.961318,-2.426964,6.394574,7.939142,0.976375,-8.033709,3.785397,-5.561811,9.325703,2.236465,0.169484,-1.476288,1.086419,7.501795,-3.182023,0.024240,-7.642197,8.205713,0.560463,-1.933145,-5.842548,-6.259990,-6.752600,-8.105551,8.520440,8.447918,-6.624945,1.689639,-9.357597,2.905611,-0.070807,6.724057,4.632463,-2.714365,-8.117436,5.558487,-1.065514,-8.498319,-7.201186,-5.277258,-6.476163,-7.056065,-0.838959,-1.449307,0.015404,5.462318,1.467251,-6.269986,6.292727,9.144654,-4.773936,0.648562,-2.867464,2.050880,-4.189823,4.116580,7.542906,1.695548,0.671519,3.052580,-9.776289,-0.998116,1.149959,-9.826393,-1.869652,-2.274779,-4.706428,7.722969,8.593591,1.906118,-5.517672,-0.112785,0.460024,9.520305,-0.133531], dtype = "float32")#candidate|5533|(1344,)|const|float32
const_5534 = relay.const([[-0.057010,-2.996278,-0.221020,2.036610,-1.024540,3.126611,-0.319173,7.359526,0.494549,-8.773689,-7.743171,4.245660,-5.580067,2.383310,1.920542,5.546610,-3.059169,-7.520798,-9.922068,1.526332,-1.673540,5.371456,9.947514,0.787156,-6.794212,6.992888,-2.398358,8.478682,2.282834,0.318866,-6.491691,6.903853,-4.267921,1.253017,4.364473,-9.848073,-9.373917,-7.979536,-2.938709,-6.151585,-7.492334,6.972324,3.285789,2.832236,5.563572,3.276275,0.014852,-0.321288,-7.729062,1.905050,-8.174340,2.127887,3.275130,4.149291,8.255239,-8.199865,6.089461,-8.696762,5.239915,-8.559142,-3.793921,-1.457195,-9.135272,-1.867770,8.451037,-5.531494,6.261325,-6.554535,-8.266216,-6.038006,9.747480,7.756342,3.578920,6.180893,7.308148,9.890929,1.775599,-7.685093,7.221701,-4.982940,-8.607179,-7.223750,-2.383635,-3.100469,-9.747910,4.743321,8.559153,8.424489,-5.250505,3.782204,-5.467183,-1.816086,1.385638,9.229761,2.740464,0.146794,-8.889241,6.741593,-5.417506,4.414393,-5.750356,-9.428048,8.783919,-0.424344,7.095622,-1.619207,6.594261,1.553970,1.795941,1.053490],[8.006041,-8.809546,-0.985808,-6.210914,5.669104,-4.548561,-0.711118,2.283771,-0.934509,-9.816846,-8.408924,9.440970,6.216680,-1.770140,5.907518,6.552841,-3.497748,-9.320051,1.485322,6.176994,2.460112,-3.502265,-0.826506,6.883001,-8.730964,-8.144168,-4.447631,-2.232039,2.778429,-8.747727,-7.159389,7.402594,7.194284,6.888643,-4.279435,3.235656,-7.231254,-3.669681,-5.783858,9.228871,0.298735,2.765170,7.570949,7.365734,-5.985143,4.413678,8.670362,3.999087,6.929902,8.948506,8.942946,9.016136,-2.138313,-1.435305,2.321542,1.446818,-2.807824,6.196845,-6.853207,-9.747474,-5.373051,1.998156,-9.673914,8.825559,-8.252556,1.834088,9.576439,4.782960,-8.008233,-2.252667,-0.383305,-3.411376,-0.450129,-7.437452,-5.708095,3.621197,7.119603,-9.778679,5.727105,6.771009,-2.545951,6.509586,7.800778,-5.428875,9.364767,3.511101,-9.736664,-0.879820,4.401718,-7.598034,1.570778,9.971788,-4.384746,-1.261726,9.120357,9.891295,-8.016128,6.826155,-4.347663,-0.785987,3.243909,5.931203,7.507127,-2.005983,-8.839045,9.230964,1.306709,-0.580318,-6.672684,8.444813],[-9.368943,-3.729704,-2.120521,-5.170424,4.830469,-1.877087,3.272092,-3.179325,3.407235,0.174416,5.691941,6.158636,0.843211,7.227553,-5.969180,6.585024,1.394410,5.039279,-6.185480,-7.415855,-3.734530,-1.197138,-6.527082,4.901975,3.637296,-5.568677,6.487245,4.053299,1.229972,-8.940236,-0.994507,1.294715,7.534572,9.284650,-9.736277,1.419872,-1.403661,-9.123499,5.875967,-8.936111,3.339184,5.234607,-1.218719,1.295691,2.729233,5.392570,-5.433405,-9.284508,7.402901,8.411993,5.730467,8.646817,-0.605085,0.980347,9.619985,-7.517211,-4.667238,6.960621,1.474231,-2.838632,-5.796578,-0.726690,-3.274457,6.187537,-3.926952,-9.482932,3.614778,6.488767,4.451079,3.765316,-8.663112,5.709982,-8.600897,4.247012,-4.090607,-2.639318,9.543317,5.979703,2.249873,7.039880,0.975240,-1.526043,7.662734,-4.427326,-4.165952,7.732565,9.021286,1.419453,8.029904,1.811136,-6.576934,2.818597,-5.463250,-5.248959,7.135817,0.720879,6.096122,7.786022,9.059666,6.664256,-6.452071,-9.006208,-2.379479,1.332198,-7.086718,0.285495,-0.988979,-4.510131,8.653459,8.743619],[5.281321,2.479322,-3.280223,9.855154,-1.373037,6.644504,-7.246151,-8.891724,3.071130,-4.000054,6.789748,-8.219564,-3.530358,-5.716088,5.895277,-5.225541,0.894054,9.748344,5.925861,7.039051,-0.018050,-7.082294,6.475263,6.157272,-8.240511,-5.703864,8.414333,9.576807,-7.640802,0.304553,6.319246,-7.449974,1.624970,-8.995800,-0.218773,-3.125589,-0.364109,6.050406,4.118523,-1.920790,3.026711,1.476178,-7.481372,-6.013893,5.645871,-1.179494,-2.691803,1.760950,1.629372,-4.176670,6.520637,-1.326574,8.409809,2.037622,-8.539029,-0.451484,7.995425,-3.708436,-1.668389,-8.678950,-6.983615,5.436109,6.149195,-8.738102,-6.478881,-8.197532,3.313005,-3.864045,1.797089,9.111491,5.675882,9.250491,-1.127925,-6.760939,-1.316085,-9.263254,-1.289141,5.521947,-8.871645,-1.147728,-5.676034,-6.591702,0.225583,-5.286617,3.571643,-6.717877,3.898288,0.728838,2.906077,3.327099,-0.660945,-2.012069,1.110242,-1.570348,6.888593,-6.462220,5.421081,5.529760,4.678177,6.910699,7.003627,-0.468359,9.119791,-1.216396,9.542629,1.141687,5.442678,-0.474965,4.939398,-1.069126],[8.056323,3.396320,-0.623149,7.056016,-8.560415,-8.368696,-7.680967,7.915057,-3.716497,-4.945403,7.183992,3.434750,2.499160,3.332517,-0.207446,1.438160,-5.948988,-9.939616,7.014584,5.286011,2.624670,-9.256537,-6.278136,7.283748,4.739719,-7.446507,2.769347,-1.134979,-8.663466,-1.760287,3.495547,-9.759904,-7.078753,-2.804490,6.387862,5.772429,6.476205,-8.320653,5.517776,-3.228141,-3.758593,2.636979,-8.594128,-1.174720,3.345440,0.225715,4.523307,5.171171,8.333582,0.778199,9.663177,0.868183,-5.831694,-5.028080,1.218153,9.269676,5.129860,-3.751437,-6.114049,-7.575298,0.158952,-2.713555,-1.726806,-8.209845,-1.667862,-3.264382,-4.893200,-2.464284,4.123406,1.501847,-8.079387,-9.250458,0.941854,3.952430,-6.774937,-1.119555,-5.602082,-4.542378,-2.474742,-5.730538,-5.145165,-5.942210,-5.568095,-7.271613,3.086449,-0.724450,-1.191056,6.756289,9.367349,2.677973,8.687263,1.189510,-3.152740,-9.673521,-2.760690,7.227373,4.075312,-7.417430,5.250680,7.645522,-6.867748,-6.158816,5.695096,-5.941600,-6.857265,-6.188731,6.821505,1.815770,5.343293,-3.695318],[-6.202597,-5.975825,9.893846,3.110024,8.619609,8.522364,2.079078,-4.269258,-9.429750,5.813688,-7.548480,-0.441097,-4.786689,-1.808349,3.530962,5.264262,-4.295984,0.558550,-8.370074,-8.287243,4.811548,4.720912,3.663686,4.633844,9.872524,8.364257,-8.611254,1.386705,9.353958,-0.705389,7.224737,4.077565,-7.815206,1.647247,0.739622,-8.197268,-1.533505,7.370025,-5.942075,6.624644,-2.984026,9.958378,-5.163196,4.402089,-1.271033,-3.638744,7.462145,-9.318151,-7.324733,6.503208,6.971223,-3.526763,0.204900,-3.179652,6.515479,7.284720,-5.491719,-8.913928,-2.249638,-9.240122,-6.810777,-9.589488,-0.845987,2.031068,-9.072956,3.193210,-2.343936,9.563106,3.731535,6.880507,3.424167,-4.969649,-3.927337,-5.725359,-9.348146,6.031355,4.272472,2.916636,-6.000582,-1.801771,2.246090,3.464305,-0.266670,8.963704,-8.096577,-0.685818,-2.292927,9.940924,9.315115,4.230467,-8.031222,-7.330454,-4.267377,-2.097419,-0.233434,4.645674,-7.879210,-3.610736,-3.945408,-7.661578,-4.949410,-4.869676,-6.856953,1.837798,-6.860121,7.343484,-5.445414,-4.944183,7.813562,3.139176],[-5.685520,7.559022,4.365511,0.954530,-3.460570,-8.887115,-2.833784,0.408914,-2.985139,-0.421734,6.781503,-2.170883,-5.252818,-7.470054,6.997326,9.516145,-0.891111,-2.575859,-8.512254,4.110293,7.781156,-8.159665,9.458791,-9.721444,-3.151130,-4.543682,0.132605,5.752866,9.522673,3.692717,-4.000583,-9.448877,-7.255575,-8.668190,-9.296576,3.887487,-3.723234,5.948509,0.713982,0.218748,9.159856,2.266170,-5.106617,-8.429260,-4.490480,-2.120392,-5.362676,8.825242,6.635942,-6.375299,-2.767906,-3.175799,4.843540,-2.473576,5.954732,-0.277150,2.212394,3.230389,9.328678,7.137439,-2.134446,-1.217358,5.032533,9.687671,4.233554,-8.622894,0.200573,-7.566971,1.119076,4.302210,0.857761,8.264072,8.818481,-3.291646,-7.748634,-7.309871,-7.325176,9.244559,-4.945511,-8.057741,-4.784834,8.915547,2.015360,-3.437760,-7.055682,-5.441056,-1.967573,-7.581286,-5.458212,-2.079468,8.553207,9.077459,5.669900,4.876234,8.532078,4.600693,-4.818127,7.094038,2.958562,-3.006966,7.068167,3.399353,-7.067090,8.198756,-8.469576,7.545380,-9.364167,5.394335,-3.273331,-5.762531],[1.938177,9.795241,-6.270040,9.651711,3.982145,-8.921059,-5.106008,-3.473827,6.968692,-1.871666,5.309061,6.131701,-1.027994,6.635078,3.956007,0.437240,2.666227,0.012430,2.738204,4.012279,-9.793391,-7.865392,5.529948,-9.731824,-8.158089,7.155596,-6.242900,-3.608590,1.866756,7.350299,7.464388,8.295884,-4.761532,-3.752872,-9.731967,-4.631921,0.072969,5.021091,9.800172,-9.627482,-1.044614,1.576108,-6.584262,-1.169493,7.636598,2.123552,-1.019287,6.813915,7.048494,-0.708136,-4.322334,-4.645966,2.003972,-1.318544,9.513553,3.760215,-7.524904,0.946706,-2.310530,6.062306,8.357713,-4.428935,3.303700,-1.895038,1.199109,-5.295209,2.092416,-5.663044,9.891313,7.145872,2.608203,-4.729010,1.209708,-8.615548,9.030291,1.301241,-9.394133,-9.033254,-1.362795,-7.004257,-7.247241,9.854279,-5.599130,-2.592106,-5.529343,-7.143515,-0.089279,-3.182132,-9.357055,5.210872,-4.769394,5.928343,-8.063817,-5.751410,-2.799511,6.581204,-3.801637,6.562852,-9.947225,-6.870650,7.557851,-3.548273,8.983398,-9.860056,7.820295,-3.146891,-6.761078,6.342142,5.492652,5.057394],[-4.063688,-1.542718,0.605993,2.799475,-2.234379,1.501791,3.842084,8.159814,-0.192590,-6.285258,-8.447678,8.448660,-5.926662,2.075891,-0.565330,-3.874906,5.443045,0.830427,-7.645320,-2.720014,-3.095855,-8.600033,5.376108,2.937794,6.178786,-1.250376,-8.363069,9.411975,-4.629074,-5.273082,9.882970,4.097509,-9.912581,-7.830542,-9.496784,7.674109,-0.605639,-6.031786,2.044143,2.699111,0.016449,-2.245597,7.051994,0.689187,7.376464,-2.314911,-3.844037,9.768070,0.281286,8.396013,5.465527,-8.040943,-4.646930,0.805545,-7.286863,4.588010,-6.971778,0.268287,7.801597,7.021340,6.166370,3.661618,-8.800190,-7.501573,-0.870771,6.553674,-2.209094,0.571126,-5.564779,-1.315816,1.382047,-5.768926,-7.443445,2.769202,-9.904152,-4.755252,4.114777,5.597584,-8.613755,0.656025,4.262966,-2.749936,-1.420216,8.057365,7.550356,-4.493356,1.043067,-8.808706,-8.377518,4.685825,3.272566,-2.840731,6.197902,-1.097141,4.614046,7.981374,-4.064275,-6.369488,9.446296,5.133695,-9.831828,-6.127208,-3.473505,5.749881,-0.083933,-1.874225,-4.193965,-5.650858,-5.577846,5.820759],[-4.312817,1.029407,7.754259,-3.732073,2.856439,3.703536,4.081464,6.779232,-4.283299,-8.152176,5.366525,-1.485136,-7.107813,8.845986,4.317848,-3.275838,7.660200,-4.603903,-8.059080,-7.928889,-0.216825,3.553832,3.405777,-7.958612,6.118495,-9.326593,7.917150,-4.797639,-1.726090,-5.640855,-2.660540,9.116205,-2.529515,-6.841735,-8.234303,-2.833246,-6.522508,-6.225399,-7.167559,-6.138564,-5.614984,-1.870032,0.848361,4.775700,6.175508,-9.027678,-1.911816,1.924686,9.391280,6.312602,-0.628094,0.111572,5.313373,-3.894053,-4.358980,6.901858,-6.218897,-4.011589,-9.985914,7.971421,1.925546,-6.750629,1.607599,4.807498,2.302965,1.822129,-4.280613,1.176276,-1.195496,-0.443107,-5.266399,4.495625,0.600984,-0.750196,0.908577,4.824753,2.673712,5.566680,-6.263161,-2.585852,9.123161,3.331937,-1.708139,-6.074489,9.748774,1.389304,-5.030641,-3.219715,-8.445863,-3.130345,-3.045873,-8.074851,9.478062,-2.301739,-3.691717,4.932553,-8.647536,-4.066257,0.023210,-9.906743,9.314759,-1.676828,-7.913224,1.168943,-1.087509,9.533270,-1.775050,-0.358012,7.588975,4.013477],[8.010149,1.711430,5.524696,-7.776800,-3.952463,7.299283,-9.630385,-1.751183,-2.947516,2.104515,8.539598,7.669996,7.605774,5.289443,4.109699,-1.208094,1.478978,-7.773965,3.187484,-9.235829,4.526782,6.828120,5.187450,7.654005,-4.498029,-7.194008,8.633287,5.768331,-6.156985,3.877548,1.027080,-2.974029,9.909275,7.544001,-8.486274,9.258680,-8.493885,5.457604,-5.339836,4.564078,-5.207934,-5.182254,-8.002641,-2.039072,-0.177932,-7.966771,7.815745,-9.727626,3.850205,-5.716400,1.045165,-3.338829,-6.864859,-7.362705,-0.550098,9.831739,2.095678,-4.870445,7.653304,-6.121124,-8.095579,4.661428,-0.283946,-0.813411,-6.144940,7.892503,-1.512937,5.400599,0.010106,4.105127,8.321535,-5.609923,-8.798459,-4.071166,7.254296,0.557234,0.671394,-0.212130,1.155847,-7.144930,6.876081,1.794229,3.225540,-9.017882,-3.943162,-0.943739,2.346862,3.843155,1.937240,6.542063,-5.845799,-5.692003,-3.437666,6.581565,2.470701,2.733035,6.044050,0.964447,4.706299,-8.766564,4.243541,9.410729,6.436377,5.141110,3.483524,-1.590660,3.536582,6.052578,7.350581,5.862038],[-2.930637,1.158313,-3.695209,-0.821780,-3.641610,8.553386,8.896974,-4.148735,4.753229,2.850211,1.687298,8.696530,-0.412647,-5.902325,3.627543,7.771897,-0.154028,-8.337878,1.666559,-0.071946,5.246758,8.283926,-2.074538,5.604874,3.461465,-8.351926,-1.508542,-7.561825,1.920052,-0.844058,-3.944839,-9.233030,-9.085371,7.805169,-1.787458,-6.322580,-7.789707,-3.127100,6.767783,-0.126217,6.526686,2.465514,-6.736284,-7.783600,-1.140697,3.651620,-9.910358,6.235249,-5.453733,-8.965593,-5.000777,-3.622953,1.608424,-0.083326,-3.604112,5.918917,2.867747,-5.911524,-0.615741,0.917315,3.336998,-2.210884,2.388219,1.219549,-5.580016,-1.602740,-4.317736,2.255421,2.146761,-3.531846,4.085473,0.323379,4.778743,-7.126737,5.575123,-2.634247,-9.056206,-5.288162,4.623995,4.846518,-9.098014,-7.068211,-9.367195,-3.342011,8.002623,-4.301254,-9.646515,-0.799106,2.862829,-0.842191,-4.604391,2.466802,2.465944,-9.010259,1.230890,-5.828672,5.147695,-3.536932,6.259060,-6.830091,-2.108909,3.412670,-4.716214,-5.439241,-4.582169,-5.083286,7.854663,-8.786963,-4.376876,4.365060]], dtype = "float32")#candidate|5534|(12, 110)|const|float32
call_5530 = relay.TupleGetItem(func_3547_call(relay.reshape(const_5531.astype('int64'), []), relay.reshape(const_5532.astype('int64'), [8, 7, 12]), relay.reshape(const_5533.astype('float32'), [1344,]), relay.reshape(const_5534.astype('float32'), [1320,]), ), 4)
call_5535 = relay.TupleGetItem(func_3552_call(relay.reshape(const_5531.astype('int64'), []), relay.reshape(const_5532.astype('int64'), [8, 7, 12]), relay.reshape(const_5533.astype('float32'), [1344,]), relay.reshape(const_5534.astype('float32'), [1320,]), ), 4)
const_5536 = relay.const([[[7.234156],[-7.965186],[8.627404],[-1.714968],[-7.055685],[4.978824],[-4.463279],[3.868208],[-0.970342],[-8.117163],[-4.247768]],[[1.083719],[-5.965403],[3.026237],[-6.993770],[-6.321253],[-2.300731],[4.820379],[7.480187],[-0.898253],[-9.833967],[-3.412241]],[[9.722109],[-3.741522],[-6.652618],[3.266040],[-1.577720],[6.213235],[-9.282297],[1.176616],[3.384296],[-4.089529],[-0.399186]],[[6.518783],[-0.499162],[7.204987],[8.433786],[2.796758],[-9.750206],[-0.804206],[-6.160981],[6.309892],[6.058632],[7.982056]],[[6.623138],[-4.952410],[-9.814785],[-8.489082],[4.301807],[7.951037],[2.108048],[-2.614049],[-9.353226],[9.034164],[5.524190]],[[2.340706],[9.645445],[9.441143],[4.197635],[-2.806810],[3.207010],[3.762347],[-1.584944],[-8.905655],[6.468923],[2.161649]],[[1.647442],[-2.582483],[6.684070],[-0.496151],[9.866586],[0.723828],[-5.410217],[4.442552],[1.781631],[-6.493393],[9.843678]],[[7.909309],[4.093130],[8.781823],[3.272656],[-6.158983],[-7.102880],[-7.513871],[-9.736496],[-3.636054],[5.530304],[4.413826]]], dtype = "float32")#candidate|5536|(8, 11, 1)|const|float32
bop_5537 = relay.minimum(call_5530.astype('int8'), relay.reshape(const_5536.astype('int8'), relay.shape_of(call_5530))) # shape=(8, 11, 1)
bop_5540 = relay.minimum(call_5535.astype('int8'), relay.reshape(const_5536.astype('int8'), relay.shape_of(call_5535))) # shape=(8, 11, 1)
output = relay.Tuple([call_5518,call_5522,const_5531,const_5532,const_5533,const_5534,bop_5537,])
output2 = relay.Tuple([call_5519,call_5523,const_5531,const_5532,const_5533,const_5534,bop_5540,])
func_5553 = relay.Function([], output)
mod['func_5553'] = func_5553
mod = relay.transform.InferType()(mod)
output = func_5553()
func_5554 = relay.Function([], output)
mutated_mod['func_5554'] = func_5554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2923_call = mod.get_global_var('func_2923')
func_2924_call = mutated_mod.get_global_var('func_2924')
call_5603 = relay.TupleGetItem(func_2923_call(), 0)
call_5604 = relay.TupleGetItem(func_2924_call(), 0)
output = call_5603
output2 = call_5604
func_5606 = relay.Function([], output)
mod['func_5606'] = func_5606
mod = relay.transform.InferType()(mod)
output = func_5606()
func_5607 = relay.Function([], output)
mutated_mod['func_5607'] = func_5607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5069_call = mod.get_global_var('func_5069')
func_5071_call = mutated_mod.get_global_var('func_5071')
call_5647 = relay.TupleGetItem(func_5069_call(), 0)
call_5648 = relay.TupleGetItem(func_5071_call(), 0)
output = call_5647
output2 = call_5648
func_5649 = relay.Function([], output)
mod['func_5649'] = func_5649
mod = relay.transform.InferType()(mod)
mutated_mod['func_5649'] = func_5649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5649_call = mutated_mod.get_global_var('func_5649')
call_5650 = func_5649_call()
output = call_5650
func_5651 = relay.Function([], output)
mutated_mod['func_5651'] = func_5651
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5692 = relay.const([[[8.673749,-5.230221,2.343603,2.907743,-4.330376,-3.117107,-7.099416,-3.759461,8.545775,5.628306,-9.426693,7.567609,6.570587,-0.530505],[7.879253,5.338947,8.611079,-5.101315,-0.958565,-2.735480,4.240733,4.922903,9.940148,-0.239357,-8.684050,4.983534,-2.582381,7.353440],[-7.678741,4.494039,5.323491,-1.220075,-4.702395,4.413818,-2.167654,-2.478991,3.106404,-0.055327,8.724046,3.131180,-7.300556,-9.283210],[7.510630,-6.174773,6.193427,7.331193,7.816840,3.126959,-7.042558,-0.057782,-3.468955,3.525496,2.513587,-3.465109,-8.298459,-8.073963],[6.794083,0.491642,-5.618415,-1.933273,-6.775021,-7.118055,-5.472691,8.531516,-7.183321,9.905178,-6.699695,-7.598104,-3.099840,6.843965],[-0.330139,4.925119,-7.832677,-8.322624,1.682830,2.271216,-8.424697,5.743460,3.645827,-6.221025,-9.992273,0.794050,-2.617099,-6.294290],[-6.868837,4.994880,6.677403,-4.641940,-3.291664,-6.140454,-4.873982,4.583424,8.933973,9.228494,3.791530,0.126645,6.568570,3.365078],[-7.851931,4.224699,6.416734,-5.055623,8.721644,-6.542169,1.507976,2.043276,-9.356750,4.802686,4.312156,7.562464,-7.292742,4.489364],[7.814999,4.798495,-4.328542,-0.285491,4.943556,7.798210,-0.205995,-1.828137,-8.783783,9.685076,-8.063119,5.057636,1.736276,7.824091],[8.589769,8.333095,7.626491,-5.094523,0.984359,4.505510,3.194314,-5.660563,-4.982098,-6.639921,-4.878992,-8.991245,-3.289052,2.238949],[-9.208318,2.548305,9.233954,-2.745316,0.245834,-1.005355,7.080213,3.771512,-4.286070,-5.449197,4.455802,-9.162914,-9.446812,-6.849111],[-5.735207,-5.536604,-3.291748,-2.648737,7.537992,-9.017302,9.486452,1.131597,-8.090692,-2.871813,-7.360480,-0.162928,0.677399,-8.457866],[4.906753,-5.077662,-9.219369,-5.369464,-4.841102,-3.049346,6.434722,-4.922408,6.743621,9.799450,-7.575538,2.326198,8.358022,-5.345145],[-7.599996,-2.947598,-7.164857,0.152688,-9.740190,3.219444,-4.025088,-9.274473,6.574836,-6.545527,-1.232079,-1.185317,6.910995,-9.349566],[7.364818,4.481027,3.854858,8.510309,-3.099284,-2.238341,-3.535974,1.024730,9.867043,-9.621474,-7.689146,5.484604,6.113368,-5.958001],[9.063241,7.767023,5.215710,-9.437909,-2.047486,-8.983857,-2.723438,6.500399,7.995111,0.849874,-8.577855,9.306327,5.309588,-4.610161]],[[-9.437492,8.495505,9.878622,7.087540,-3.124500,2.511326,2.251712,4.363818,-1.400208,8.919381,-9.186417,-2.145039,-1.839327,2.569316],[-3.254490,-7.066776,-0.183943,0.048544,-9.704215,1.579331,-5.914829,-1.437044,-8.265547,-8.745102,-4.981944,-5.265459,-7.604508,-8.032048],[-9.023392,-2.356414,6.214337,-4.910151,9.455068,1.635837,-9.127406,-4.687876,5.953811,-7.011944,-0.073886,-6.359326,-8.909337,7.752374],[5.579871,-9.590954,-0.473293,-7.580606,5.166463,6.930710,-2.567668,5.283897,4.558109,-9.778193,-2.814599,3.127055,3.913288,9.919814],[-2.135686,-6.688962,-8.392759,-3.990343,-6.511075,-5.678916,3.484059,-2.216630,-1.567814,-9.281005,3.969446,-9.537857,7.991127,-7.529375],[6.830591,0.282949,6.169041,8.807303,-0.187778,-2.703115,7.916390,-6.091996,-0.820597,-0.655773,-4.119736,4.549241,3.084330,5.460974],[2.123587,1.689361,-1.634544,-8.500514,4.982004,6.047261,2.987967,-5.549862,1.438221,9.889648,3.479545,-5.817093,-5.443565,5.402219],[-4.425970,6.280432,-1.760354,-5.874870,7.942413,-8.808089,5.087031,-6.548706,2.335788,2.790497,6.602820,8.895267,-0.669236,6.615113],[5.353090,3.424375,0.314668,3.435945,3.422546,-7.696299,-8.057644,7.970990,1.413854,1.167559,-0.858393,6.837283,9.638537,-7.223972],[-5.380164,9.886692,-0.230747,8.148107,6.951485,-4.116611,4.205151,9.231831,1.275881,5.377573,-9.214924,-2.247577,0.554771,-2.304111],[-7.382490,-2.265815,-6.306853,-5.085610,-3.093732,7.955682,-6.163030,2.019488,-3.948928,0.836620,1.257444,-1.353940,9.825410,5.245286],[-7.298463,-2.316316,-0.762449,-8.884189,-2.296984,-3.004796,-0.212943,-8.515030,4.060583,-5.196741,-9.994430,4.433314,-9.058801,3.003746],[-8.449081,-1.141007,-0.143204,2.590580,-6.196743,-8.443016,-3.919608,8.668850,-7.693202,2.406208,5.792932,7.823599,-2.869728,-3.738534],[2.600305,-3.233705,-5.786907,-0.360892,6.088960,1.824485,5.936973,-8.986285,-8.659810,1.758788,4.065844,-1.272745,-2.939277,-5.021118],[4.026223,-1.754103,-6.745815,-2.128737,9.066969,-4.597298,8.727411,-2.683192,4.303915,-4.597772,4.428111,-3.716912,4.088475,7.327261],[-7.935042,-3.147399,-4.562429,-1.384515,4.456488,3.223573,-3.282185,-6.835719,-0.953037,-2.419676,1.500420,5.397958,-2.379533,-0.497090]],[[4.495225,-0.758177,9.567628,5.308797,2.395629,8.686001,-2.316175,6.482588,-4.205680,-8.119873,9.393387,-1.965302,-1.306101,5.840592],[0.255210,-0.030659,4.416130,-0.706970,0.335520,6.368449,-8.418526,9.416606,3.405929,4.235304,-1.562173,-3.497183,-9.132070,8.554128],[4.279217,-7.424872,-3.296930,3.573015,2.463906,-9.751046,7.691110,9.606218,-5.117942,-4.740834,9.152189,0.331306,-5.745258,1.818753],[-0.900387,7.814712,1.068998,-7.215892,-0.102606,-5.251238,-6.895814,-5.874297,-2.186254,4.220150,-2.511580,-3.791864,4.905184,-4.974376],[-2.171958,-4.836686,-0.765624,-7.091680,2.146244,8.361018,-3.313367,8.308061,-2.045489,-6.107621,4.190234,-4.064902,4.897979,-4.461159],[-1.481329,-5.953002,-1.962659,-3.505335,-4.071056,0.029604,8.575224,7.057346,-1.724570,-3.097416,-1.845313,6.861518,-3.971474,-5.461405],[-7.594768,-0.496551,7.086168,0.992677,-2.548604,-3.139975,-8.498409,-3.018560,-7.830818,1.251320,2.018763,6.879764,-5.699045,4.840192],[-9.099334,7.425843,-9.302432,-4.803697,-9.542204,-1.568078,6.113289,-8.241146,-4.061597,1.768749,-5.081134,9.744656,6.050186,-4.410637],[3.478002,-9.112061,8.866019,-1.356272,-4.663618,2.156013,0.662991,9.282621,-5.244799,-8.286808,-9.213701,3.760941,9.390234,-8.564987],[7.507784,-8.612210,7.708092,5.740634,-6.407203,-8.256899,-2.937254,-8.039807,4.310713,-3.542389,0.735887,-4.024870,-0.812503,-7.025672],[-6.778487,-7.740360,9.289176,-1.911985,-8.869076,6.116757,-8.349305,4.700303,9.132945,-3.956196,7.875150,-5.498871,3.935566,-9.873745],[-1.709933,8.040547,-0.188059,5.290827,9.528940,-5.350180,6.824596,-8.329754,8.626825,-5.348856,7.698469,-5.386998,3.349139,1.884224],[1.668136,-4.604808,9.792142,8.171793,-4.477495,5.425976,-1.699818,1.899653,-1.588327,7.022042,9.970746,-8.562972,-5.441429,5.383884],[-0.830140,8.261353,-4.620906,4.232605,8.813470,3.956793,9.646111,0.541559,-3.132555,1.280285,3.036546,1.617787,-8.390691,7.037338],[-6.133880,-6.042147,-9.788937,-6.299420,-3.146437,-5.968715,-9.970126,9.236841,-4.397838,-6.832561,8.120241,3.594173,-3.669303,5.936152],[9.023239,-9.354197,2.751809,-4.196534,-8.886957,-1.591929,-2.166568,-3.388757,1.439292,4.151228,1.127745,-3.149432,0.376408,5.846492]],[[-2.319238,7.912188,8.055236,4.141022,-5.717766,-0.673768,4.267213,8.378276,1.231747,-9.496393,4.220906,9.654409,4.023433,7.684981],[1.391071,1.679898,5.706326,9.043481,-6.689345,6.573105,-9.247290,5.456954,1.567005,-0.827258,-5.370013,9.430411,-3.072073,-7.802683],[-3.297039,-8.603227,-7.369276,-4.016663,-7.178151,5.580889,-0.403854,-3.465399,-4.118001,-2.675105,-8.228579,1.433713,-0.254835,6.252239],[5.550585,-4.756337,3.307585,0.571595,-8.495082,-4.424458,-4.529893,8.229595,-1.781567,0.930788,7.736929,-6.290653,-0.078358,1.267241],[-5.939902,7.706405,-9.358411,-6.804088,1.924821,-6.603249,5.392795,-8.078663,-5.608799,-5.629145,9.310399,2.745579,-8.246731,2.795822],[6.637118,6.109323,9.485622,3.090053,-2.923750,4.822552,-1.067284,-1.722200,-3.604119,5.152986,-8.222818,-2.224192,9.414922,8.428818],[8.301395,1.270479,7.527524,8.530197,5.494516,-3.213191,-8.269383,2.632956,3.472586,-4.854364,6.806139,-1.918315,8.055311,1.300763],[2.877416,-0.185991,0.499073,0.224053,-5.681675,7.321768,-1.364688,-0.977585,-9.620495,9.932985,8.741533,2.277801,8.764415,-3.424248],[-3.889537,9.724367,-0.238421,3.971661,8.578339,-4.111560,4.978601,-2.630414,-3.503727,-9.943023,-0.356839,-1.715679,5.086949,-1.132737],[-0.378743,6.450315,7.290530,-4.503996,4.209198,7.142927,-0.362492,-1.106671,-0.951754,8.418455,9.051028,2.397214,2.470604,0.621563],[0.170207,3.638210,8.422215,4.342023,-0.561034,-8.958665,9.318452,-7.066011,-2.033500,3.544410,4.831389,8.737665,-7.988353,0.579704],[-6.994163,-3.375369,-1.018127,8.150675,-0.480389,-3.160563,-2.655328,-4.539423,6.613267,-7.139024,-4.889715,-2.337153,-6.296355,-0.813816],[-1.197117,2.697192,1.314671,-6.196785,7.429615,3.809767,-0.789692,-3.134572,-2.001049,-0.055669,-3.427688,5.340871,-1.463829,-2.974890],[5.097606,9.786549,-6.809528,0.881522,-7.711799,-9.162335,7.100607,-3.419536,5.500438,0.175906,1.991900,3.310213,-9.933815,-6.990256],[-8.442428,9.097623,-3.061783,6.976268,6.867781,-3.462084,2.538656,-5.547435,-1.011033,-5.435384,2.584461,1.329748,-9.637414,-3.250659],[-2.810368,8.394417,-2.997429,-4.659537,-3.553354,2.773750,-6.821403,3.058387,-6.028637,4.881800,-1.576809,4.383289,7.227483,2.110853]]], dtype = "float64")#candidate|5692|(4, 16, 14)|const|float64
uop_5693 = relay.atanh(const_5692.astype('float64')) # shape=(4, 16, 14)
func_2983_call = mod.get_global_var('func_2983')
func_2988_call = mutated_mod.get_global_var('func_2988')
var_5697 = relay.var("var_5697", dtype = "int16", shape = ())#candidate|5697|()|var|int16
const_5698 = relay.const([-6,-8,-9,-5,7,-8,-3,7,2,3,3,4,-6,-1,3,4,2,-8,-3,2,6,-6,6,4,9,3,-5,-10,-10,-2,10,-2,8,-1,-4,-2,-4,1,4,-9,7,7,-1,-1,-9,-1,10,1,-5,10,-7,2,-5,-3,-10,-3,2,-7,8,-3,-4,8,-10,-4,1,-6,10,-2,-1,-3,-5,8,-6,-2,4,3,-2,1,-8,-8,-1,-9,-2,-6,-4,-6,3,6,-8,6,-6,9,8,7,-7,6,1,10,4,8,5,7,-9,-9,-5,-10,-4,6,-1,7,-10,-9,-8,-4,-5,2,-10,9,-4,-8,-3,-8,7,8,-9,-7,8,9,5,10,-8,1,1,-7,8,4,4,-8,-7,1,1,-4,2,-9,-7,-8,-1,-4,8,-7,-9,-10,6,3,4,1,2,8,-7,2,6,-10,8,9,-5,2,1,6,10,3,5,-1,9,2,8,1,-5,-1,5,7,-8,2,1,-9,9,-4,5,-1,7,-2,7,-9,4,-5,9,9,-3,9,10,4,1,2,-5,2,-8,7,8,10,-3,1,7,3,10,3,-1,9,-4,8,6,1,4,9,-3,4,-2,-10,-6,8,-7,7,-7,-8,9,-10,5,7,9,-1,-5,-8,3,-7,-5,8,5,7,-4,-2,-4,6,-4,-9,10,-5,9,1,5,3,-2,-1,-6,8,-5,1,-3,-9,1,-1,-9,4,-4,-10,-3,-1,3,2,10,7,10,-5,6,-1,-3,8,1,-2,8,-3,6,-6,4,6,7,1,3,2,9,6,6,-8,7,1,3,-6,8,5,9,-7,-7,6,4,1,1,-7,-3,-5,4,-4,2,5,-2,-3,2,-7,-10,-10,1,10,-1,9,4,4,10,5,8,3,10,10,7,2,-2,-2,6,-7,10,10,-1,-2,-2,4,-6,-9,10,10,-1,-5,-5,-8,-10,9,-10,-4,3,2,2,7,-1,-6,-8,-10,-9,3,-5,-6,-5,-5,-5,-6,6,6,-5,7,1,-1,-10,-9,-8,-2,3,-8,-4,-5,-3,-7,-2,8,-6,-5,10,8,-7,-10,1,-7,-1,-5,1,4,-5,-4,4,4,7,-8,3,9,-5,4,3,10,-10,9,-7,5,3,-6,-1,8,-10,-7,4,-3,-6,-3,-2,-3,10,-2,-6,-6,6,8,4,5,4,-7,7,5,10,-2,-3,-3,-8,7,-1,5,-6,-3,10,-4,-8,-1,2,-8,-6,-5,5,1,2,-7,2,10,-6,-10,-1,-1,7,5,9,-4,-4,-5,4,4,3,-8,-5,3,-1,10,-9,-10,6,-8,9,-2,-8,3,1,7,-1,9,3,-1,-6,6,-5,-2,10,-6,1,-3,4,-10,-7,1,1,-6,-3,-1,-10,-4,1,-6,7,1,9,-4,4,-8,-10,9,-8,-8,-3,-1,5,-10,5,-7,-5,10,-4,4,10,-9,10,4,2,-2,10,-10,9,1,-3,6,-9,-3,-1,-3,1,-1,-9,-3,-8,5,-8,-5,4,-3,-4,-8,-5,8,-10,-9,2,-3,7,-1,3,-3,3,-8,-3,8,9,-4,7,-4,-2,9,5,4,-2,-6,-1,3,-8,2,1,-1,-6,-9,-7,-3,6,-5,-5,-2,4,-1,-9,-10,7,-10,-4,1,8,-6,-10,7,10,-6,3,-4,-8,-3,-9,-3,4,5,6,7,-5,-10,1,-3,-9,8], dtype = "int16")#candidate|5698|(640,)|const|int16
const_5699 = relay.const([-5.649674,-2.394469,-3.196947,-4.504294,2.669288,5.854217,9.759373,5.173708,-0.821586,0.797202,8.093665,-7.055840,7.529775,8.667025,-0.189061,-3.729635,4.687610,-1.252708,3.486999,3.388316,5.963469,-9.218090,0.856458,7.970709,1.987876,8.014401,1.911921,-0.093750,-0.114487,2.737806,-9.515248,1.679768,-2.242728,-5.799203,0.464308,-2.916641,-3.509068,0.550424,-5.864917,8.000230,3.635788,0.881009,-3.639057,-6.244286,1.090874,7.495525,8.399499,1.798524,-5.394069,1.341932,4.293534,-0.360212,-2.538750,9.427032,7.795658,8.152364,-9.265320,5.058248,-2.141029,7.429295,7.689127,-5.139386,0.508581,-6.934436,8.569452,3.063734,1.096817,-3.805352,-7.251925,-2.487683,-5.314851,-7.269357,-8.574612,9.163008,1.063674,-0.509641,2.023393,4.038071,8.311306,-4.780460,-4.596575,0.509086,1.715696,0.615415,-1.998396,8.744431,2.781840,5.542920,2.801369,7.729856,7.076101,7.195298,-7.064484,4.487483,-1.123547,-0.943558,-8.967190,-9.214116,8.402778,9.299080,-1.692704,-9.308768,-1.540554,4.408849,-2.458040,8.229687,7.356049,-0.246044,3.075351,5.657890,7.762421,-5.148107,2.485820,9.735829,7.191031,-7.458073,-0.144581,1.054574,-1.201027,-3.599857,3.557471,-5.067226,8.863835,-2.350768,9.978473,-8.602577,0.853941,-9.136716,-4.053508,5.465927,-7.049795,0.727758,-9.750895,0.548443,0.864198,4.416901,2.915146,8.212645,-2.829750,-7.568334,9.229021,-5.024711,4.015981,-8.555901,7.785584,6.293268,7.346701,-8.305203,-3.759501,6.354182,0.791602,-3.015879,-1.170473,6.821971,-1.075403,-6.723586,9.636005,-6.353191,1.664631,-9.748020,9.489995,-7.042267,-6.516643,-4.900446,0.166907,-2.113371,7.458611,5.685539,2.678535,-3.511876,-2.347337,9.976877,-2.748662,6.855833,-9.318277,-8.553642,6.903473,7.828790,5.744563,-6.679249,0.015894,8.435517,-9.725406,-2.634830,-2.215718,3.479730,-7.149469,-3.277349,-7.062440,-6.532351,7.351540,-2.010383,-9.518353,-1.694820,-1.863841,-6.250163,7.223378,-8.474269,-5.969363,5.587939,2.164687,-6.971338,-6.217955,-7.547379,-1.489326,3.430103,4.774182,-0.176722,6.869243,9.483824,-9.461205,2.561612,-7.184091,5.403976,3.432935,3.853283,9.767987,-5.604847,-4.253501,-1.482851,6.970808,-8.792068,-7.168430,-2.065572,9.646219,1.875983,1.433178,9.153198,-7.986148,5.291270,-6.903344,-1.969810,-6.688697,2.595712,-7.651523,2.756021,9.578337,-2.331042,-4.985557,-2.671615,5.297838,0.645423,-8.664918,-2.367909,3.622064,-4.467575,-5.248546,6.510650,7.864979,3.763271,6.710512,-2.443075,-5.298168,-4.288490,5.679362,-4.158856,-7.261810,-5.848332,-2.243469,4.045627,-4.234923,0.205483,-5.123290,8.531782,9.341823,9.826318,2.054079,-4.213157,4.189442,-6.765282,5.191125,3.322916,6.226562,-7.063906,-9.209397,4.045864,-8.722988,0.981669,-7.950306,-4.818180,5.370600,-0.504773,0.088727,-4.313939,0.458354,-9.665439,6.820063,-8.689950,0.219845,-2.243021,-4.303762,-5.319910,7.721164,7.443726,-5.723538,2.400535,-2.113023,-1.020941,-3.632446,-8.010142,9.916541,-1.287894,-2.269997,6.707563,-6.427814,3.599112,-9.459564,3.873823,1.686028,2.201887,-7.724031,4.318562,-7.962752,1.495516,-5.078333,-3.291310,-1.255817,-1.903097,7.846528,-7.069678,9.383443,-1.221232,9.256676,6.314267,-1.159790,-7.959614,-7.003430,4.142400,8.882009,1.235925,-9.709772,0.633860,9.776278,0.022429,-5.137224,-5.250688,0.524061,0.859267,-8.071385,8.552453,1.575172,9.289672,5.928808,-5.203086,5.618760,-9.064213,9.661935,-7.154896,1.323937,3.848722,6.586808,-8.872915,-0.020690,5.621515,-2.866887,3.772654,-1.735507,8.203574,-7.274657,-5.720329,-6.821247,3.587005,6.917912,-6.877633,-8.116978,-0.471304,0.376104,-0.708419,-6.551341,-9.554312,2.704117,-9.685544,-5.666184,0.168208,4.534019,6.593637,3.696464,6.802002,-4.384607,2.237467,4.489631,8.542596,-8.139388,-3.532757,3.614493,-6.890938,-3.695891,8.605166,-2.161118,0.772345,-4.809678,9.125737,-2.728820,-3.877738,-7.940631,1.651261,5.889727,-9.328753,-5.609897,-2.907798,2.466292,-3.319018,5.956116,9.315288,8.280858,8.657023,1.628255,7.497541,4.126146,-0.361259,7.404889,6.132922,-3.972879,5.013557,-3.807642,9.935934,-3.040013,-8.335863,2.576796,3.086739,-8.052968,-9.608890,-6.506574,2.988969,-5.682467,4.455921,0.623289,-3.402891,1.244793,7.231668,-9.515514,1.894888,-6.900327,-9.961892,4.699506,-5.758727,0.236080,9.000655,-3.263432,6.030459,3.025212,3.514071,-3.068396,-6.053836,3.188173,0.060781,-2.716683,-9.486736,-0.154791,-4.302427,-8.967159,-2.551314,-9.451025,1.615983,-4.790090,0.536076,-0.026095,9.921542,-3.057559,-7.319889,7.031351,5.169238,-7.691190,-4.957232,4.659205,3.090128,-6.678236,9.243754,9.358687,2.689423,8.049846,8.884322,5.237037,-8.719106,9.473120,0.058147,2.158583,-2.608861,-3.074693,-7.403183,-3.235762,-3.424611,1.290983,2.852681,-2.485693,9.999196,2.888948,1.073432,1.993438,-1.118996,-1.776568,0.853936,7.883513,-4.972471,-7.408663,7.963252,-8.896710,0.720594,8.077582,-9.860938,-3.749641,1.832821,2.126743,-4.158295,3.494367,3.597743,8.869749,0.668971,-1.655751,-2.815032,-5.621403,9.238564,9.371270,0.964300,7.420539,9.278468,3.255831,5.857875,6.144797,9.913726,6.840963,9.987166,4.772989,7.002420,-4.361458,-9.918640,2.658865,3.668377,7.012224,8.221984,-2.510109,-7.658065,3.517675,-2.666466,3.697444,8.277458,-4.192147,9.820311,2.925287,-2.389823,6.021355,3.767042,-7.418674,1.754032,0.210072,9.435328,7.995599,8.260668,1.554902,-0.544087,0.320130,3.703656,-9.147697,0.302880,5.099985,7.489270,-4.498142,6.224836,5.356789,-3.665678,8.599426,-1.811036,1.916428,-8.603093,-8.119403,-8.142635,-6.933107,4.531405,-4.117223,1.281030,-6.261229,-3.397195,4.603706,-6.266603,5.830863,2.065387,-5.251375,7.415172,7.923264,-4.393777,-5.744026,0.999076,6.828009,2.408359,9.020316,8.360730,1.227983,-9.126870,-1.728796,6.880408,-5.890007,-3.050288,2.740802,-8.680369,3.809563,-7.157658,2.975732,1.550715,-7.291766,1.671957,9.699024,-3.348124,-4.981858,2.352323,7.057856,-3.542650,1.608111,-6.230941,7.065346,6.565113,1.456960,-6.590372,3.478955,6.143149,6.179179,4.845087,-6.169720,4.107412,-9.808642,5.097591,-3.364463,2.815009,-4.176477,-4.929907,0.453307,6.463329,9.121753,9.454040,4.342744,-1.373491,6.880711,6.983115,3.655954,5.090908,8.223491,1.065892,-3.568219,0.884450,-5.570809,-8.553844,3.107544,0.581546,-7.867531,1.128633,2.501128,-6.354883,2.704315,-0.393295,-7.159725,-2.243349,-3.533986,6.825128,7.618813,-9.045388,-8.871769,1.415510,-9.546496,-8.569290,9.971755,-6.988754,-9.258657,-5.639337,-6.451357,-3.993527,-9.400583,-5.406232,4.212353,1.298576,-0.139883,-1.960653,4.523312,-7.920367,-4.637474,-3.932117,-7.623093,3.476110,5.535618,-4.939364,-5.704691,-9.154912,5.404350,-8.439949,0.374493,6.917221,0.767600,-4.853685,7.272391,-1.257816,-5.678136,-9.972084,5.255027,9.313905,1.821521,-2.314581,-5.267277,-6.551652,6.337073,-4.863154,-7.301429,-1.425312,-9.862756,-2.566920,3.128195,4.387298,4.811399,-0.086196,6.772475,7.548688,3.066491,0.435344,7.505916,6.738901,-6.876427,1.841128,-3.147264,-5.915818,-8.490999,-4.906745,9.828801,7.945743,6.363201,4.111341,2.888995,6.976076,-7.370878,1.156602,-6.240327,-2.395200,-7.177865,-1.423495,6.525551,6.317688,1.083318,1.287248,-7.992449,-8.992427,-4.320582,-6.239880,-0.208059,-7.486336,-7.664982,-0.359005,-7.283428,1.995729,-7.183880,7.244613,-9.068365,-7.614629,8.952926,-2.497627,-2.634231,6.160275,-0.325481,2.246171,-6.879278,7.058964,7.741433,0.197670,-9.770776,-4.343595,-9.871634,-3.908700,5.363590,9.624529,-0.119897,-1.588128,-4.931830,0.841191,0.715658,9.203658,-3.313266,3.807334,7.379119,-7.042490,5.368422,-6.001510,-2.154304,0.236240,7.323023,-6.324427,-1.890657,7.198337,6.499467,-7.424188,2.444621,-0.165520,-2.891231,6.717900,-0.749111,-7.294526,-0.453860,-1.703172,5.943117,-3.662231,-1.768057,5.044549,9.609799,0.818471,1.880807,-2.881442,0.854349,5.008847,-0.272304,0.301639,-9.235382,-4.820833,4.678354,7.773178,-8.686232,2.719215,5.104714,-3.231935,0.328325,3.369778,4.629564,8.316669,-8.616573,-4.840495,6.640203,1.255875,9.854337,8.538759,-8.912323,-2.209544,-5.516046,5.409000,-5.273957,2.610620,2.604060,-6.562437,-9.278936,-1.888198,-5.796053,6.716553,-3.667704,7.849875,-9.252385,-0.737757,-1.981149,-1.776929,3.647149,-3.306241,2.099189,2.980674,-7.324840,0.296141,-5.037820,1.311315,-6.959982,-2.014649,0.711174,1.058050,-5.396648,7.605157,-2.351136,-4.930184,8.504460,1.477669,-3.876668,-2.283945,-7.558745,5.436887,9.489648,-3.672457,9.074460,-5.822833,-1.026740,-1.592806,-3.789973,9.330861,1.756103,-0.032079,-0.562256,2.292919,-9.704911,8.892615,4.955361,7.463929,0.504514,0.193191,8.865435,-9.693202,3.545048,-9.599552,-0.365009,-1.730193,2.533672,-1.532312,-5.432162,-2.264227,6.151020,1.769763,-6.123449,2.897516,-3.234089,-4.045565,0.268804,-8.227190,-0.006922,-1.150926,-5.627868,-9.146638,9.359106,-9.032017,8.249479,-8.498588,-7.775180,3.738797,9.060930,5.599483,4.423191,4.765713,-8.283487,2.775384,-7.000643,8.153336,-6.626303,8.448170,-7.433854,0.532190,-5.371766,1.396893,-6.158928,-8.683284,4.842559,1.940571,4.849150,1.876304,-2.443299,-0.547565,-9.876617,-8.724369,-2.326660,-8.484216,9.480830,-0.534678,-7.544665,-6.556475,-0.170694,-0.768455,-4.753970,5.804923,-0.407995,1.741905,8.474084,3.745187,9.944401,3.153799,2.643742,2.618853,1.947643,6.803887,1.221499,-7.922731,-3.182933,0.438404,5.096382,-2.455929,-1.167094,-6.336829,-2.928544,6.159975,6.487812,3.104836,0.539400,1.335218,-5.409117,-9.039948,3.705212,0.634237,0.578419,-5.611976,6.783600,-5.351801,1.712346,-8.787887,-5.032232,1.818333,-3.458687,3.455524,6.752180,-7.217750,7.920907,7.086460,-0.947461,-9.890244,-7.455594,-9.322128,6.493144,9.853308,3.943717,-5.843723,8.513168,-8.219928,-3.757061,6.825506,-6.690090,9.629149,-1.607425,-1.156505,-1.155021,-1.580893,-7.718053,-7.787414,8.119220,-2.743905,8.864692,9.450022,-4.885406,-0.634440,9.025861,8.295657,-7.743149,4.132395,0.093084,5.196094,-5.026578,-5.709965,-8.746617,-9.541546,-2.801663,-9.612275,-0.198942,3.379540,9.566028,5.332256,0.495498,6.721249,-3.185016,5.780790,-4.824985,7.116093,-7.483304,1.951955,-0.812412,2.520069,-0.269058,5.187091,8.097671,-7.381417,-1.071802,3.369584,-1.206835,8.983325,7.425075,-6.112052,1.118681,-4.349791,-9.492602,-3.275637,1.751352,9.724746,-8.960840,-6.229165,3.104153,-6.282758,1.683756,-0.034558,-7.196220,-5.085159,-3.237824,-1.801958,-2.108002,1.832999,-7.004881,2.037587,3.172227,-9.889988,3.190660,8.006307,2.122539,7.043323,9.223936,-3.243357,1.607900,5.878260,5.871859,-4.474103,-4.339523,-0.586227,7.385947,8.166898,5.576989,-4.385459,-6.233414,8.114693,-2.997097,-7.544460,-1.233584,1.940015,0.617907,8.056525,-5.542944,-1.119883,-4.062026,-1.583881,9.851998,-3.741443,1.911688,2.288624,1.806429,0.300137,0.179952,4.053511,-3.556182,-9.204386,-1.118829,-5.090150,8.331153,0.022139,-6.828700,6.725849,5.976867,-1.246395,8.794430,2.097755,-5.479579,-8.009524,-6.991458,-0.007386,-5.500002,4.183869,-0.422826,-2.284821,-3.921031,2.276775,7.917250,-5.123850,7.231843,3.550312,3.054025,7.029772,2.424825,3.804119,6.164046,-8.140021,-7.830173,-0.863013,7.023964,-1.094482,8.211446,-9.374114,9.035652,2.801633,2.449518,8.526138,8.068132,5.052978,-3.683359,1.250568,-3.442237,9.067817,0.206209,1.032958,-5.062451,-3.078193,-7.256082,-9.622928,-9.274830,-8.713028,-5.413999,-3.088921,-1.010398,-1.036682,-4.629091,-2.886890,1.506339,-6.676246,-5.727902,-3.226402,7.434199,-0.157517,9.558410,4.844826,-2.482413,-4.563793,1.217445,0.031715,-4.653299,-2.850711,9.900507,1.035607,0.301298,3.359936,5.043299,-1.400457,-6.176023,-0.982676,-4.242422,5.302405,1.268138,2.748213,-4.324381,-5.484595,6.400118,-6.788538,-1.186375,3.104698,9.530309,3.923957,-3.617015,8.432972,-9.147541,2.042838,-7.629043,1.132293,-1.633306,-5.416107,6.369255,6.429713,-0.715978,2.323539,9.035626,-8.117736,9.961756,2.154310,0.802565,7.726050,9.383758,-5.404115,3.048734,6.241960,4.860505,4.857534,0.892023,6.486938,-0.094241,-5.262819,5.606680,-5.237332,-4.158817,3.182468,-8.835622,6.477871,7.109060,3.806705,0.479665,-0.853360,4.118430,-7.915112,-2.493799,-9.876979,-9.461419,-8.583483,8.447042,1.955564,-5.843011,1.951986,2.639428,-9.505848,8.735423,6.185915,2.351110,2.342409,7.242413,2.987220,7.659527,-1.874202,-8.928973,7.163393,7.102976,2.597266,2.719995,4.907218,1.467433,5.339937,0.406385,4.224819,-4.691073,0.950537,-2.932756,8.285291,-9.863135,-2.622515,-0.736946,-2.318995,-7.661797,-8.072773,4.776226,-3.243200,6.441891,2.654646,-1.826675,3.263554,1.698293,0.908292,8.966088,9.797465,-2.394809,-6.524930,9.338599,6.944069,-1.967904,-4.666365,9.036843,-6.487774,-8.642684,5.811737,7.989562,-2.707937,-2.139276,-0.056318,-7.680111,7.874839,4.108321,-5.773512,8.226504,-2.358014,9.273056,8.381013,6.269499,0.833639,9.697246,5.202699,-1.611755,2.171957,1.665092,-5.256479,1.971083,-4.128248,-1.228362,2.167005,-6.094881,4.368887,-7.269629,-5.288551,7.398223,-8.128474,5.931676,3.190621,1.595745,-5.695459,-3.738435,-0.295080,-5.372042,8.209374,0.473232,-6.292010,-6.397610,5.401382,-4.841819,9.834470,-3.473767,-6.740830], dtype = "float32")#candidate|5699|(1344,)|const|float32
call_5696 = relay.TupleGetItem(func_2983_call(relay.reshape(var_5697.astype('int16'), []), relay.reshape(const_5698.astype('int16'), [640,]), relay.reshape(const_5699.astype('float32'), [1344,]), ), 0)
call_5700 = relay.TupleGetItem(func_2988_call(relay.reshape(var_5697.astype('int16'), []), relay.reshape(const_5698.astype('int16'), [640,]), relay.reshape(const_5699.astype('float32'), [1344,]), ), 0)
bop_5702 = relay.floor_divide(uop_5693.astype('float64'), var_5697.astype('float64')) # shape=(4, 16, 14)
var_5717 = relay.var("var_5717", dtype = "float64", shape = (4, 16, 14))#candidate|5717|(4, 16, 14)|var|float64
bop_5718 = relay.bitwise_xor(bop_5702.astype('int64'), relay.reshape(var_5717.astype('int64'), relay.shape_of(bop_5702))) # shape=(4, 16, 14)
uop_5726 = relay.acos(call_5696.astype('float32')) # shape=(8, 11, 1)
uop_5728 = relay.acos(call_5700.astype('float32')) # shape=(8, 11, 1)
bop_5739 = relay.bitwise_or(bop_5702.astype('int16'), relay.reshape(const_5692.astype('int16'), relay.shape_of(bop_5702))) # shape=(4, 16, 14)
output = relay.Tuple([const_5698,const_5699,bop_5718,uop_5726,bop_5739,])
output2 = relay.Tuple([const_5698,const_5699,bop_5718,uop_5728,bop_5739,])
func_5746 = relay.Function([var_5697,var_5717,], output)
mod['func_5746'] = func_5746
mod = relay.transform.InferType()(mod)
var_5747 = relay.var("var_5747", dtype = "int16", shape = ())#candidate|5747|()|var|int16
var_5748 = relay.var("var_5748", dtype = "float64", shape = (4, 16, 14))#candidate|5748|(4, 16, 14)|var|float64
output = func_5746(var_5747,var_5748,)
func_5749 = relay.Function([var_5747,var_5748,], output)
mutated_mod['func_5749'] = func_5749
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5754 = relay.var("var_5754", dtype = "float32", shape = (1, 2, 6))#candidate|5754|(1, 2, 6)|var|float32
uop_5755 = relay.sigmoid(var_5754.astype('float32')) # shape=(1, 2, 6)
bop_5758 = relay.less_equal(uop_5755.astype('bool'), relay.reshape(var_5754.astype('bool'), relay.shape_of(uop_5755))) # shape=(1, 2, 6)
func_5649_call = mod.get_global_var('func_5649')
func_5651_call = mutated_mod.get_global_var('func_5651')
call_5765 = func_5649_call()
call_5766 = func_5649_call()
output = relay.Tuple([bop_5758,call_5765,])
output2 = relay.Tuple([bop_5758,call_5766,])
func_5767 = relay.Function([var_5754,], output)
mod['func_5767'] = func_5767
mod = relay.transform.InferType()(mod)
mutated_mod['func_5767'] = func_5767
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5768 = relay.var("var_5768", dtype = "float32", shape = (1, 2, 6))#candidate|5768|(1, 2, 6)|var|float32
func_5767_call = mutated_mod.get_global_var('func_5767')
call_5769 = func_5767_call(var_5768)
output = call_5769
func_5770 = relay.Function([var_5768], output)
mutated_mod['func_5770'] = func_5770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4723_call = mod.get_global_var('func_4723')
func_4725_call = mutated_mod.get_global_var('func_4725')
call_5780 = func_4723_call()
call_5781 = func_4723_call()
func_3664_call = mod.get_global_var('func_3664')
func_3668_call = mutated_mod.get_global_var('func_3668')
const_5793 = relay.const([4.431194,0.996825,-3.922499,7.500403,9.307252,8.203806,-9.873528,4.421916,0.365024,1.760755,-7.712882,7.268119,-6.025678,1.542679,1.927992,-7.313249,-5.249736,-1.963039,1.722778,3.882643,-1.404973,-8.431821,-7.555752,-7.753772,4.468258,6.704764,-7.348602,3.122162,9.554919,-8.176670,9.596810,8.789507,-2.140183,1.252327,6.030315,6.200101,3.988028,-5.323598,3.498131,-1.414552,4.430762,-6.356225,-1.505261,-1.637262,-6.338729,-8.930586,5.791166,2.642184,3.858452,9.769481,-5.844629,-6.271202,-5.649392,4.384318,-1.449117,6.180377,1.778653,9.246728,5.005488,-3.269014,4.499176,-8.042028,-9.032765,-3.409361,-0.283307,0.164353,-6.646995,-1.463292,-3.827238,7.951277,9.188680,-7.997129,-1.931377,-5.655005,2.054067,-5.287764,3.400912,0.719203,-5.434238,4.083745,9.998142,9.631239,1.039903,9.572377,7.160953,-1.663304,7.532013,-1.264515,-1.400268,5.565600,3.893908,-8.944467,-3.145070,-7.964685,-3.260917,2.553578,-3.741455,8.163223,7.252823,-4.345402,5.239455,8.740013,2.976917,5.876869,2.524301,-9.369772,-6.266171,8.350441,-0.239185,0.003696,-6.412609,9.597374,-3.082742,-2.801280,2.701560,-7.409008,5.034803,0.791314,4.287609,-9.286140,8.172318,9.198788,-9.162231,9.232293,5.299105,9.295727,0.662294,-6.868141,0.779601,7.578211,3.192430,-5.515720,-3.598777,-8.773116,-8.511216,-4.900106,3.343799,9.681732,-7.106879,-7.841344,6.116552,7.228006,-0.980645,-9.495494,-8.878521,-7.350320,-0.386495,-5.751272,-8.562330,-5.983144,-5.445516,6.884414,0.125098,4.375610,7.697028,8.826513,4.932929,9.711973,-4.447419,8.536413,-8.638257,8.959991,-5.329674,4.138687,-8.118535,2.601495,-8.419096,-7.727011,0.452175,0.980846,7.721226,-9.868128,-6.331258,7.894258,1.926644,6.437958,-7.354526,-2.218870,5.267382,-5.081159,-8.735140,-4.069335,-2.995132,-1.091276,-1.733021,-7.527787,-3.213866,-5.908097,-3.914901,8.544754,-7.991199,7.261749,2.657082,-6.230207,2.140405,-0.200434,-6.161210,-3.022598,8.771721,8.384370,6.374274,-2.197653,-2.572642,-1.546325,-1.097030,-2.184939,-9.670838,5.748383,-4.408011,-3.304804,-9.223183,4.526942,9.936073,7.661458,-3.896353,-5.275154,-3.499804,5.641831,9.524824,-0.538820,1.959479,9.612181,-3.017097,-6.241951,-7.311280,9.606932,0.253141,8.772526,-7.245811,-4.751634,7.293908,-5.698791,6.425472,-9.684202,3.474046,-6.388771,-1.161862,0.690389,-5.061310,5.018424,-6.280010,-6.534977,7.049526,6.758446,-1.575036,-1.167595,-0.078041,-6.407638,-0.453433,9.439637,1.587228,-1.388771,7.477261,-7.668435,1.216145,-0.559762,-8.849101,-2.459079,-2.977174,-5.676655,3.972792,7.237868,8.438384,4.521644,-6.315556,-1.625609,-9.346168,5.552772,-6.587445,1.172040,3.484539,3.583793,-0.392585,5.986068,5.498835,-7.687116,-1.095829,8.568127,2.086492,7.475948,2.414545,0.733311,2.814449,1.280142,-4.771862,1.118255,-5.786623,-3.997399,-5.460887,8.655099,3.550001,-5.069421,6.762123,6.728256,-4.083888,2.644018,-4.385160,1.455758,4.284438,9.741564,-5.819619,-9.227300,-7.121220,9.665858,-6.832339,-1.466020,-0.403873,-0.957141,-7.647316,-3.803124,-2.173387,-8.849620,-5.163405,-5.797038,-7.951911,-0.441541,0.614561,1.865105,5.506562,-0.472754,-2.792865,6.105625,-1.920525,-9.425432,5.743405,4.100859,-4.329289,9.618179,-8.327618,4.774255,1.244409,0.281094,-1.597252,-1.365448,2.222932,7.569633,-1.655093,2.632842,-2.886447,7.660300,-7.434960,-1.175393,5.642689,-6.014524,9.461126,-9.149967,6.094780,9.912866,9.991671,5.891903,0.556087,-9.583015,6.809453,-9.956905,9.199896,4.866827,-6.761585,2.228476,9.838360,8.309357,1.443173,-0.359666,7.907448,-0.579066,0.015620,-4.400185,-6.802144,-9.743461,-6.698800,-2.814899,0.514534,2.739173,2.852375,5.601700,-2.514755,1.760680,-6.418458,-4.667589,-1.775533,-5.860434,-2.532748,-1.617606,6.563114,-8.699786,3.761474,-7.430557,5.432679,-2.558302,-8.997472,7.124173,9.832282,-0.593349,-9.705007,0.462135,4.838938,1.531741,-7.820161,-7.709614,-0.539245,0.342612,1.681963,-8.123628,-5.125509,5.078761,-3.260567,4.799546,-4.808696,-5.548432,8.034576,0.387004,5.188201,-9.310841,-9.679351,-2.521718,-4.870775,-0.857726,9.184551,-3.613093,1.454157,-7.871864,-2.417952,9.665920,1.608256,-8.311500,-0.654184,3.061466,-0.780418,7.404577,-0.521656,0.037616,-6.588087,5.960922,1.812401,8.104806,5.977012,-6.086479,4.678086,-0.466994,7.983405,1.219279,-1.188926,-4.528548,5.149605,3.063915,6.216244,-8.379485,-6.234371,4.406009,4.620027,4.722784,-3.938120,-0.569436,8.997694,-9.791093,8.449758,-5.834149,-1.870913,-3.661063,2.728718,6.977699,3.217632,-4.053978,9.636055,1.798541,-0.643339,-0.022942,-5.200661,-0.741456,2.387286,8.988707,0.859543,8.904526,-9.798616,2.948120,3.516824,-4.017949,-5.922186,6.753510,-1.253141,-2.416468,9.438847,2.535252,8.716217,1.889732,-5.633284,-6.573304,0.401696,1.495712,0.586994,9.972534,6.800822,2.999894,-2.268515,-1.759858,9.674765,7.587803,6.899284,0.734240,-6.955353,0.603882,4.792574,-5.661421,3.582071,-8.143092,-4.184505,-8.835700,7.755156,4.087420,-2.753895,-4.048910,-8.550439,-4.749229,-8.282815,7.054752,-4.890784,9.819271,-8.926220,-3.919210,1.226870,-0.883720,-0.676694,9.923731,3.246183,3.110376,-8.810731,2.818752,2.803086,-2.391735,7.496687,2.990546,9.266157,6.712180,-1.106390,7.180597,-9.863903,-8.458660,-7.248668,-0.694108,-0.930946,4.779548,5.888772,-3.933585,-5.613553,-1.174149,-3.129078,-7.841142,-3.597455,7.053458,1.295700,-5.215747,-1.992900,1.361975,4.541406,-4.890477,5.740087,-4.757105,7.564541,-5.774521,-3.622738,6.764088,-7.443961,-6.554840,-3.962878,8.966220,-8.274786,6.456850,-9.836938,-9.914675,8.537134,-0.369291,-3.078223,7.598368,7.014944,-4.348157,2.052465,-7.008763,8.414452,-4.129487,-1.483513,3.356062,-2.860350,4.526851,4.217802,-2.993818,8.672576,-8.432430,6.864586,7.350538,2.099475,-1.167320,3.580535,-2.164024,2.457775,-9.170729,-7.463899,5.097326,5.951456,-6.563432,-8.017177,5.437546,2.474270,9.885663,6.681244,6.517399,-9.886649,5.173263,-7.041232,-1.648887,7.701125,5.873079,3.189063,-8.631255,5.765779,9.305892,9.428429,0.815701,-8.132333,4.120454,8.054637,-1.483905,8.364579,-3.116448,7.758260,5.528563,3.403980,9.890676,5.072134,5.100023,-0.775240,-0.068308,0.290938,-8.544100,8.439624,-5.682374,-5.699366,-7.504846,-1.467004,6.902673,-9.562999,-8.916151,5.096872,-5.470992,7.642983,0.249790,-1.578184,3.669757,-5.874050,-3.560283,-7.847783,-9.328347,0.992233,-5.820977,8.199916,-7.343816,-3.830028,-6.843964,-7.511528,4.193925,-7.172897,5.270633,-4.588878,8.935854,-8.131922,-6.420948,-1.683736,4.365298,-0.339610,6.449503,2.966686,0.812372,2.104739,5.853952,-0.639209,5.388459,0.586022,8.189559,-8.141420,-6.967573,-6.961562,6.571543,-8.452791,5.850007,-3.815407,-1.457826,-1.233333,9.592780,6.935175,4.829778,6.975822,5.134090,7.887706,3.546976,5.425015,-0.611691,-4.937750,-5.043418,-2.567318,8.756322,-6.301890,-7.375977,3.043282,-1.921408,-2.313960,-2.114240,1.050693,-5.817443,1.236990,-1.040493,-2.131641,-3.695076,-1.346261,7.550754,-0.320111,9.503379,-2.107084,4.186872,7.346610,6.915551,6.359866,-8.652380,6.919915,0.927550,-5.120192,6.070931,-9.609478,1.226497,-3.154808,6.541151,-7.263476,4.067700,-4.862281,-3.347272,5.868984,5.740314,-8.866459,1.761976,7.703937,-2.094341,-8.035320,-3.734229,8.183211,9.248107,-3.824519,7.916748,1.521789,1.713078,5.626288,5.516937,4.970185,-9.045755,-4.057481,5.235852,-8.694559,6.652226,0.434318,-8.945429,-2.150057,-7.629297,-8.485866,3.033050,4.522790,-5.515713,-0.965377,5.153561,-4.135650,3.662098,4.215471,-5.004010,-7.824937,-1.634565,2.710269,5.195500,-8.750961,-8.762924,4.003732,-5.355719,1.095579,3.398194,-1.899092,8.979135,-2.860557,-3.891796,-3.017904,-4.684072,-7.997471,-1.397839,4.192143,1.183995,-7.502665,-5.800353,7.940215,-7.067473,8.790708,4.844836,-7.874897,4.372525,6.245261,-4.366854,-8.394651,2.473635,3.574248,0.394613,0.406073,-5.586506,-6.095305,0.745203,0.306888,-9.768497,0.982184,-4.237153,6.005573,3.318398,2.924277,-9.845964,-4.650569,5.628632,3.022194,-8.464799,0.631029,-3.720591,5.921886,-4.758981,7.112550,-8.694410,-9.351681,-5.545092,-6.298050,-3.956733,5.494287,1.824230,-6.996652,2.432167,3.041532,-0.747388,-2.883626,2.487381,-0.484642,-8.308833,-9.273189,2.693566,-1.016551,-9.568652,9.686110,-4.468624,1.248572,-5.729483,-6.429381,-1.562327,3.975578,6.605478,5.217562,7.825608,-5.736280,-5.214851,-7.136134,0.348010,2.822989,8.125465,-3.330956,-8.786735,-3.562663,-0.651171,-1.281999,-1.253826,5.349115,-5.638542,-0.340922,2.425494,5.421785,-9.885515,5.818635,-4.646763,6.846980,2.164600,-7.683315,-5.964358,-9.056378,7.182243,9.261483,-2.841377,1.986018,2.026448,-1.180151,-6.882053,-6.114505,-2.478112,-1.560037,9.955991,-0.503669,-9.183332,-7.764349,5.738965,0.536614,7.455955,1.884927,9.986379,-7.246286,-8.560884,7.096666,8.553714,1.045385,7.074363,-8.684343,-6.240205,1.297326,3.688813,9.386459,-5.623655,-5.987681,7.482173,1.166278,-2.699605,9.504651,8.458485,-9.786145,7.846369,-2.139756,7.371825,6.862499,2.560667,-0.403576,-8.308291,-1.860035,-6.476484,-1.864480,-0.245585,4.190778,-9.728437,6.667495,8.571241,-2.808616,-1.714422,-5.625127,5.989001,2.633607,-8.547071,-7.853030,0.011234,-3.717669,8.817865,9.599308,-1.919287,-2.482181,8.909354,-1.014351,5.606264,0.183190,3.623800,-7.536791,4.138434,-5.931030,6.369708,-2.174800,4.540740,0.139920,-0.932215,-9.249460,5.356439,4.901572,-0.863340,6.696168,-7.889682,6.560371,-6.654953,-6.261972,0.476474,-5.806924,2.420667,8.116510,9.816894,2.725902,4.356194,-4.849025,7.329862,-6.940130,-5.508701,8.232026,-0.432092,-6.792468,-7.585415,9.977959,8.046213,7.051671,-0.132572,5.905176,0.583129,1.323257,-6.162539,7.076968,6.299689,-7.904615,0.213464,-6.128255,-7.547236,1.526349,-6.693135,5.565739,-2.590231,-6.032070,6.381903,-0.678555,0.518152,-6.935634,2.695831,6.567306,6.683458,-8.268024,7.469075,-4.813612,-4.775421,7.392497,-6.947158,-8.995503,3.876451,-7.810231,2.690365,0.077880,-7.163907,-5.501631,1.135654,1.782381,0.428060,5.603660,-0.068732,0.722410,7.808943,4.838588,3.996795,-6.357230,4.945852,1.149820,2.632789,0.762396,-5.250673,-1.163821,4.255108,-6.505892,1.729498,7.878683,-0.015364,-0.085187,5.740703,0.279620,-4.177549,8.978426,-2.568177,-0.393163,2.659936,-3.735177,3.802201,9.221291,-6.912977,-2.698949,-7.540388,5.534893,-0.691417,-3.350783,-5.224363,-2.835619,-1.120828,-4.500526,-3.962655,-7.564496,-8.341370,-8.547243,8.238438,-5.511759,3.849396,-0.059174,-7.237555,-7.993528,5.886044,1.357236,4.156452,-4.228687,7.741964,-6.813111,6.719763,-7.570957,1.450275,-9.653567,-3.985342,-5.629988,9.876059,6.412362,3.469911,-6.328352,9.863713,-1.835056,3.311227,-0.145849,1.962428,-9.023573,0.458028,-4.765384,8.701568,-5.247635,4.795124,-2.661690,1.213515,-4.767182,4.466855,7.170599,-4.816321,1.557678,9.310351,5.740839,0.700898,1.762838,-4.403670,9.371562,-0.610375,7.474676,5.337866,-4.854492,-3.801404,0.770203,1.356904,-4.476625,-4.535718,5.116745,9.698358,-1.987427,7.630861,2.950306,9.234318,5.166370,-6.592362,0.366531,-6.701166,-8.773574,-1.157054,1.557556,2.459629,-0.900461,1.244980,6.282220,-4.083231,7.185330,4.842033,8.929856,-2.270129,4.828767,8.132044,-7.151509,-1.377340,-5.828283,-0.634799,1.280221,3.488965,1.255499,2.356176,8.211440,-3.641097,3.965943,-1.851493,-2.629187,-2.078873,5.384807,-4.963621,1.939161,5.565432,5.754736,1.493464,5.118967,-5.100916,-6.440721,9.055086,8.756055,-1.103391,3.664347,0.824738,5.537304,7.836223,-0.298686,-9.029742,7.702143,3.319514,5.029488,3.231882,-4.070733,0.246228,9.877119,-8.695226,-2.193572,-7.060688,0.266142,1.373926,5.618095,-8.458985,-9.083811,0.722065,-6.689783,3.748156,-8.799617,-2.800628,-4.271929,9.686150,-2.090461,9.180530,-7.641421,-5.891171,2.103862,6.738676,5.579744,-0.672083,-2.730483,3.719163,8.894986,8.578073,8.655092,-2.874140,6.844292,0.997065,8.699528,5.893447,-0.435313,-9.811808,4.496924,-1.996354,0.887637,6.158122,1.178741,-7.703783,9.236707,-9.723671,4.751751,-4.007245,-5.009805,-2.322006,-8.339220,3.913743,4.663166,4.992490,0.857691,5.182156,-5.397060,8.133847,9.691893,-7.391089,1.513461,6.029526,6.518186,2.977084,-3.707368,-7.936551,3.969333,2.242385,8.503862,-3.524115,2.180828,4.809211,-0.349664,7.315230,-4.823015,-5.128946,-7.929349,-2.841780,5.553256,3.077174,1.583838,9.681126,8.387053,9.621759,8.619915,-1.466530,-3.166455,-9.504977,-0.397467,-3.256073,-7.364126,-7.246110,4.866034,-3.779197,-6.720820,-6.399233,2.267176,1.286565,-6.900791,3.983914,-9.057894,-7.333827,7.508666,5.420829,-8.175731,-0.122217,-1.986337,7.656673,0.089726,-2.891926,0.076827,3.336395,-5.691769,-1.038408,-8.808929,-7.173705,7.020768,5.274137,-6.960064,-5.865281,-1.897153,1.895287,7.966212,-9.726093,-4.160498,-6.181449,2.512132,9.179123,-1.879829,6.199775,3.390759,7.184990,-9.728861,-1.304310,5.530397,-0.404077,9.533522,-5.923324,-2.988201,-3.442022,-6.146351,5.724210,-0.325913,4.821261,-7.002351,4.723932,3.200833,-4.002846,4.402506,-3.022319,7.117628,5.212869,-1.979660,1.272358,-5.686423,6.574735,-5.481482,5.284927,4.317349,-2.403902,9.167051,-6.426491,-1.774327,-6.810240,8.276665,6.567490,6.525409,2.549812,-0.510849,9.085391,-5.848052,0.402124,8.941947,-5.960215,-4.703567,-0.707339,-5.855152,-7.009788,9.920042,2.149532,9.269626,3.089815,1.398424,-4.506679,6.116349,-6.353379,-7.667238,-4.183003,-2.517015,0.714113,8.348665,-6.227020,-0.241283,8.260530,-4.455695,-5.573702,8.549293,-0.475952,-4.380073,-0.782306,-5.681995,-0.458261,1.610977,-7.316903,2.128876,-5.333260,1.778241,-5.354979,5.249219,2.671591,-1.840559,6.879913,6.039673,-3.016658,-8.430070,0.960931,-7.965409,7.213032,4.853026,5.911417,4.282080,6.432372,1.314266,-4.352760,7.881866,-0.403015,7.247004,6.672243], dtype = "float32")#candidate|5793|(1408,)|const|float32
const_5794 = relay.const([5.563577,1.135660,-0.906815,9.361601,-5.181852,-7.898536,-8.903544,8.713686,7.316541,-0.611436,9.839197,4.448998,-8.074934,-9.127158,-9.276198,2.554146,-7.035662,6.355677,2.351489,-3.541578,-2.490722,-8.036346,4.689127,-1.290806,4.934299,6.784171,7.347951,-0.467821,-5.657789,9.180986,-1.746434,-7.441726,7.721774,0.580609,-0.436624,7.322133,-5.556914,1.906939,6.403979,-6.846798,-4.632477,7.959563,-2.845457,3.909215,-0.740430,-8.164317,9.993744,-3.986807,-5.328036,9.775771,6.239979,3.366137,-3.229932,2.982611,-2.997118,2.081393,-6.175579,-3.041652,-7.368397,8.633673,0.686358,4.997175,-9.141767,1.291653,1.146549,6.249719,5.539927,-8.517694,4.862689,7.311396,7.418681,-3.108080,-0.411162,3.238380,-8.598343,5.688610,-7.366300,-9.690523,-0.536179,4.947568,-7.503383,6.888581,-7.051783,-0.736147,9.879089,5.305792,-4.045056,-7.107098,3.662820,6.310972,-6.791768,5.212460,4.502994,2.283248,1.078133,6.058308,0.303263,-8.501971,-9.638681,7.997647,-5.090415,-2.131438,-5.868183,8.974659,-5.179361,2.529047,-1.444171,0.571463,-4.129594,3.328769,-3.362719,-9.420442,4.097808,1.432953,4.889892,-9.755054,8.055987,-8.602158,8.030079,7.450573,-5.681318,9.924561,2.747080,-2.505351,9.000210,-1.087915,-4.942341,-6.858641,0.592245,8.971034,-7.240044,-6.309369,-0.422826,-3.249910,7.543474,-7.200468,-8.246924,-4.188271,-1.303521,-2.377716,-7.102040,5.994831,9.357662,6.744063,3.383250,7.674124,-8.618325,-6.580461,-3.132974,-6.869200,-2.611902,1.450331,-0.821423,7.712220,-3.136367,8.434823,-4.161070,2.237950,-8.095995,-7.446997,2.982886,6.968126,9.210280,-3.841870,-9.511692,9.365467,5.486634,-3.728241,-0.998549,3.159889,1.613743,-4.036234,3.273892,0.874531,-5.904359,-5.036485,2.715203,4.990476,1.263791,-1.944005,-6.605364,-7.804000,-9.265710,-5.595150,-1.171850,0.780891,-9.267808,6.245684,7.867299,3.330811,-6.350966,8.268941,8.790253,0.262985,-9.101174,6.617081,9.403777,2.064724,-1.855381,8.161955,1.268831,-9.500255,-3.373931,5.097792,-2.751928,3.462436,-0.724049,-2.333408,0.682812,-4.361570,5.620027,-8.999974,-2.237612,-8.958950,7.878945,0.484768,-5.728284,-4.524536,-7.562353,-7.357320,-6.698847,3.602863,-8.205742,1.256080,9.013498,5.256970,7.880132,-3.657237,8.056585,-5.393782,-4.484207,1.712940,9.196778,9.962968,-3.080252,-7.939934,5.218239,3.896082,2.105681,9.920048,4.888037,3.915210,-4.539081,-0.353396,-1.758686,5.200844,-7.718055,4.035046,-1.888860,5.354256,-7.587428,-8.363981,-6.393789,4.808072,-1.407605,-5.990280,5.532702,-0.732559,1.166683,-6.218561,2.710694,-0.414046,-1.187789,8.871507,-2.251782,4.017520,-9.491273,-2.935139,-6.559409,-0.222862,-0.702589,-4.281368,-4.441294,-7.316312,2.516133,4.470331,-8.318036,-3.196962,0.913983,9.723020,1.373274,-7.155616,-7.722644,-9.967038,-7.271202,0.660557,6.472233,-6.599862,-6.221281,-9.039669,7.208847,-1.739338,9.052099,6.723238,-4.031167,5.165128,8.265274,6.354231,-8.730658,-1.035132,-7.031108,-5.834103,9.621576,1.214444,8.043619,2.838497,0.684353,-7.550768,1.303161,4.782429,-2.416488,9.385973,-5.360315,-0.724129,-0.919950,4.424623,-6.123389,-0.817622,0.754445,-4.530856,1.024929,8.987803,9.337159,-6.196035,2.711161,3.467653,-1.777199,-2.270323,8.364821,4.937568,2.988552,5.338295,-1.873097,-5.851251,0.972081,-1.236781,-2.136748,-8.414625,0.412353,-7.761720,-0.194247,6.334692,-5.337925,-3.123233,-0.673916,0.722836,-8.022781,5.773525,6.793442,-2.292618,-7.450929,6.374116,2.777874,9.565124,-4.354835,0.667104,6.617477,6.111744,-2.438517,2.958798,-9.367373,1.166700,9.421199,9.450242,-8.311701,-8.236563,3.836873,4.589035,1.739902,3.447751,2.383254,-9.074604,4.262957,-6.205307,9.484816,-6.823303,8.339937,6.187224,2.099266,5.363728,-5.960645,-6.731919,4.424939,-9.416640,-1.320539,5.998284,2.159474,-9.318970,5.011266,-4.976460,9.536703,-1.735478,-4.148796,4.455651,2.955158,4.552967,-9.785253,8.974317,-9.071348,-7.055637,6.527931,-7.406607,-3.836846,-6.417911,6.671387,-3.959639,8.258748,7.791428,-0.953920,6.879372,5.335464,-2.055805,3.974283,-4.091976,8.950953,-1.637906,-7.891766,2.459980,-4.525269,-9.140803,7.837661,-1.787389,-8.824627,-9.159818,-8.739721,-3.093523,1.552204,-0.660342,-7.834433,-7.275585,4.852810,-7.690293,9.706127,-4.725984,2.612379,5.014605,-9.032440,-2.228860,-7.254689,6.778340], dtype = "float32")#candidate|5794|(440,)|const|float32
call_5792 = relay.TupleGetItem(func_3664_call(relay.reshape(call_5780.astype('float32'), [8, 11, 1]), relay.reshape(const_5793.astype('float32'), [8, 11, 16]), relay.reshape(const_5794.astype('float32'), [8, 11, 5]), ), 0)
call_5795 = relay.TupleGetItem(func_3668_call(relay.reshape(call_5780.astype('float32'), [8, 11, 1]), relay.reshape(const_5793.astype('float32'), [8, 11, 16]), relay.reshape(const_5794.astype('float32'), [8, 11, 5]), ), 0)
output = relay.Tuple([call_5780,call_5792,const_5793,const_5794,])
output2 = relay.Tuple([call_5781,call_5795,const_5793,const_5794,])
func_5796 = relay.Function([], output)
mod['func_5796'] = func_5796
mod = relay.transform.InferType()(mod)
output = func_5796()
func_5797 = relay.Function([], output)
mutated_mod['func_5797'] = func_5797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2894_call = mod.get_global_var('func_2894')
func_2895_call = mutated_mod.get_global_var('func_2895')
call_5808 = func_2894_call()
call_5809 = func_2894_call()
func_4723_call = mod.get_global_var('func_4723')
func_4725_call = mutated_mod.get_global_var('func_4725')
call_5834 = func_4723_call()
call_5835 = func_4723_call()
uop_5841 = relay.sin(call_5808.astype('float32')) # shape=(8, 11, 1)
uop_5843 = relay.sin(call_5809.astype('float32')) # shape=(8, 11, 1)
func_5649_call = mod.get_global_var('func_5649')
func_5651_call = mutated_mod.get_global_var('func_5651')
call_5845 = func_5649_call()
call_5846 = func_5649_call()
output = relay.Tuple([call_5834,uop_5841,call_5845,])
output2 = relay.Tuple([call_5835,uop_5843,call_5846,])
func_5851 = relay.Function([], output)
mod['func_5851'] = func_5851
mod = relay.transform.InferType()(mod)
mutated_mod['func_5851'] = func_5851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5851_call = mutated_mod.get_global_var('func_5851')
call_5852 = func_5851_call()
output = call_5852
func_5853 = relay.Function([], output)
mutated_mod['func_5853'] = func_5853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3198_call = mod.get_global_var('func_3198')
func_3199_call = mutated_mod.get_global_var('func_3199')
call_5862 = relay.TupleGetItem(func_3198_call(), 0)
call_5863 = relay.TupleGetItem(func_3199_call(), 0)
output = call_5862
output2 = call_5863
func_5872 = relay.Function([], output)
mod['func_5872'] = func_5872
mod = relay.transform.InferType()(mod)
mutated_mod['func_5872'] = func_5872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5872_call = mutated_mod.get_global_var('func_5872')
call_5873 = func_5872_call()
output = call_5873
func_5874 = relay.Function([], output)
mutated_mod['func_5874'] = func_5874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4567_call = mod.get_global_var('func_4567')
func_4569_call = mutated_mod.get_global_var('func_4569')
call_5931 = func_4567_call()
call_5932 = func_4567_call()
func_1982_call = mod.get_global_var('func_1982')
func_1985_call = mutated_mod.get_global_var('func_1985')
var_5943 = relay.var("var_5943", dtype = "float64", shape = (24,))#candidate|5943|(24,)|var|float64
const_5944 = relay.const([4.523996,-8.017020,-0.438683,8.240458,-9.153766,7.669062,-7.180971,1.162452,-9.667819,-6.427832,1.456568,7.694876,5.812289,-9.468328,-6.236804,2.131527,-6.152013,-9.616286,5.896187,-9.186328,-2.929571,-7.545207,0.671445,3.643476,-4.516861,2.524011,-8.389122,1.075822,3.878380,-5.523425,-8.541970,0.010210,7.168501,9.432550,-5.408612,4.390425,7.420150,3.402073,8.114927,-3.789804,-6.570499,3.973763,-4.707333,1.902514,-9.409833,-4.470256,0.922549,-1.740992,6.050903,5.179941,7.943253,-0.270590,-9.951728,6.981979,-2.275740,2.670359,5.038564,9.840633,-6.003509,9.479205,5.602653,4.337245,-4.324901,8.477480,0.342423,9.797764,7.541266,5.057655,0.843205,2.229111,5.686591,-0.307527,-4.525845,-5.461689,-5.938546,3.566926,4.513781,2.793269,-6.120633,0.572734,1.855888,-2.309525,0.605761,4.334735,-4.567305,-3.549607,3.774592,7.736767,1.067531,-4.948784,6.724362,3.269849,-4.333702,-6.082645,7.590402,-0.484310,-6.083335,-2.754483,1.110773,-7.327233,-4.412167,9.051242,-5.926705,5.761534,-8.623412,4.026861,-2.429366,0.478304,4.755555,7.962529,1.462515,-4.750447,3.148313,6.670646,-6.870894,-8.432637,2.485247,-1.722599,-2.549882,9.332310,-1.093672,5.563307,5.046937,3.132448,-2.841586,9.068607,3.960432,-6.074982,-2.772277,6.026412,6.455818,-5.091697,7.778776,-3.516509,-4.978614,-6.397130,0.060900,7.304679,-1.780639,8.518601,-9.974327,8.250064,-3.568643,-2.706528], dtype = "float32")#candidate|5944|(144,)|const|float32
call_5942 = relay.TupleGetItem(func_1982_call(relay.reshape(var_5943.astype('float64'), [2, 12, 1]), relay.reshape(const_5944.astype('float32'), [2, 12, 6]), ), 2)
call_5945 = relay.TupleGetItem(func_1985_call(relay.reshape(var_5943.astype('float64'), [2, 12, 1]), relay.reshape(const_5944.astype('float32'), [2, 12, 6]), ), 2)
output = relay.Tuple([call_5931,call_5942,var_5943,const_5944,])
output2 = relay.Tuple([call_5932,call_5945,var_5943,const_5944,])
func_5948 = relay.Function([var_5943,], output)
mod['func_5948'] = func_5948
mod = relay.transform.InferType()(mod)
var_5949 = relay.var("var_5949", dtype = "float64", shape = (24,))#candidate|5949|(24,)|var|float64
output = func_5948(var_5949)
func_5950 = relay.Function([var_5949], output)
mutated_mod['func_5950'] = func_5950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5332_call = mod.get_global_var('func_5332')
func_5334_call = mutated_mod.get_global_var('func_5334')
call_5963 = relay.TupleGetItem(func_5332_call(), 0)
call_5964 = relay.TupleGetItem(func_5334_call(), 0)
var_5969 = relay.var("var_5969", dtype = "int64", shape = (650,))#candidate|5969|(650,)|var|int64
bop_5970 = relay.left_shift(call_5963.astype('int64'), relay.reshape(var_5969.astype('int64'), relay.shape_of(call_5963))) # shape=(650,)
bop_5973 = relay.left_shift(call_5964.astype('int64'), relay.reshape(var_5969.astype('int64'), relay.shape_of(call_5964))) # shape=(650,)
output = relay.Tuple([bop_5970,])
output2 = relay.Tuple([bop_5973,])
F = relay.Function([var_5969,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_5969,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

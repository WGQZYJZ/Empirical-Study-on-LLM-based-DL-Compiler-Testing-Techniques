==========mod==========
#[version = "0.0.5"]
def @func_8459() -> (Tensor[(11, 14, 12), float32], Tensor[(15, 4, 3), float32]) {
  %0 = @func_8205() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
  %1 = @func_7281() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(15, 4, 3), float32], Tensor[(30, 2), uint32], Tensor[(180), float32], Tensor[(448, 2), bool], Tensor[(1568), int8]) */;
  %2 = %0.0;
  %3 = %1.1;
  (%2, %3)
}

def @func_4800() -> Tensor[(11, 14, 12), float32] {
  @func_3874() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_6902(%var_6894: Tensor[(11, 14, 12), float32]) -> (Tensor[(11, 14, 12), uint8],) {
  %4 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %5 = cast(%var_6894, dtype="uint8") /* ty=Tensor[(11, 14, 12), uint8] */;
  %6 = shape_of(%4, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%4, dtype="uint8") /* ty=Tensor[(11, 14, 12), uint8] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %9 = subtract(%7, %8) /* ty=Tensor[(11, 14, 12), uint8] */;
  (%9,)
}

def @func_5799(%var_5786: Tensor[(28, 32), bool]) -> (Tensor[(11, 14, 12), float32], Tensor[(15, 2, 16), float64], Tensor[(480), float64], Tensor[(845), int64], Tensor[(180), float32], Tensor[(1568), int8], Tensor[(60), uint32], Tensor[(28, 32), bool], Tensor[(1568), int8]) {
  %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %11 = cast(meta[relay.Constant][1] /* ty=Tensor[(845), int64] */, dtype="int64") /* ty=Tensor[(845), int64] */;
  %12 = cast(meta[relay.Constant][2] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %13 = reshape(%10, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %14 = reshape(%11, newshape=[845]) /* ty=Tensor[(845), int64] */;
  %15 = reshape(%12, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %16 = @func_3230(%13, %14, %15) /* ty=(Tensor[(15, 2, 16), float64], Tensor[(5, 13, 13), bool], Tensor[(845), int64], Tensor[(180), float32], Tensor[(1568), int8]) */;
  %17 = cast(meta[relay.Constant][3] /* ty=Tensor[(60), uint32] */, dtype="uint32") /* ty=Tensor[(60), uint32] */;
  %18 = cast(meta[relay.Constant][2] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %19 = cast(%var_5786, dtype="bool") /* ty=Tensor[(28, 32), bool] */;
  %20 = cast(meta[relay.Constant][4] /* ty=Tensor[(1568), int8] */, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %21 = reshape(%17, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), uint32] */;
  %22 = reshape(%18, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %23 = reshape(%19, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %24 = reshape(%20, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
  %25 = @func_690(%21, %22, %23, %24) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 7, 14), int8], Tensor[(1568), int8], Tensor[(2, 2, 15), int16]) */;
  %26 = @func_4925() /* ty=Tensor[(11, 14, 12), float32] */;
  %27 = %16.0;
  %28 = %25.4;
  (%26, %27, meta[relay.Constant][0] /* ty=Tensor[(480), float64] */, meta[relay.Constant][1] /* ty=Tensor[(845), int64] */, meta[relay.Constant][2] /* ty=Tensor[(180), float32] */, %28, meta[relay.Constant][3] /* ty=Tensor[(60), uint32] */, %var_5786, meta[relay.Constant][4] /* ty=Tensor[(1568), int8] */)
}

def @func_4925() -> Tensor[(11, 14, 12), float32] {
  @func_4089() /* ty=Tensor[(11, 14, 12), float32] */
}

def @main(%var_10213: Tensor[(3, 1, 2), float64]) -> (Tensor[(3, 1, 2), float64],) {
  %29 = cast(%var_10213, dtype="float64") /* ty=Tensor[(3, 1, 2), float64] */;
  %30 = atanh(%29) /* ty=Tensor[(3, 1, 2), float64] */;
  (%30,)
}

def @func_6610() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), uint64]) {
  %31 = @func_6173() /* ty=Tensor[(11, 14, 12), float32] */;
  %32 = cast(%31, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %33 = cast(%31, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %34 = reshape(%32, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), float32] */;
  %35 = reshape(%33, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), bool] */;
  %36 = @func_3973(%34, %35) /* ty=Tensor[(11, 14, 12), uint64] */;
  (%31, %36)
}

def @func_7786(%var_7748: Tensor[(6, 12, 12), bool], %var_7749: Tensor[(6, 12, 12), bool], %var_7765: Tensor[(2, 448), bool]) -> (Tensor[(6, 12, 12), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(28, 32), bool], Tensor[(11, 14, 12), float32], Tensor[(2, 448), int16]) {
  %37 = cast(%var_7749, dtype="bool") /* ty=Tensor[(6, 12, 12), bool] */;
  %38 = shape_of(%var_7748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %39 = cast(%var_7748, dtype="bool") /* ty=Tensor[(6, 12, 12), bool] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %41 = @func_5389() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
  %42 = cast(%var_7765, dtype="bool") /* ty=Tensor[(2, 448), bool] */;
  %43 = reshape(%42, newshape=[28, 32]) /* ty=Tensor[(28, 32), bool] */;
  %44 = @func_6700(%43) /* ty=(Tensor[(15, 2, 16), float64], Tensor[(28, 32), bool], Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float64], Tensor[(11, 14, 12), uint64], Tensor[(11, 14, 12), float32]) */;
  %45 = @func_7063() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %46 = cast(%var_7765, dtype="float64") /* ty=Tensor[(2, 448), float64] */;
  %47 = acosh(%46) /* ty=Tensor[(2, 448), float64] */;
  %48 = cast(%47, dtype="float64") /* ty=Tensor[(2, 448), float64] */;
  %49 = sin(%48) /* ty=Tensor[(2, 448), float64] */;
  %50 = cast(%49, dtype="int16") /* ty=Tensor[(2, 448), int16] */;
  %51 = shape_of(%47, dtype="int32") /* ty=Tensor[(2), int32] */;
  %52 = cast(%47, dtype="int16") /* ty=Tensor[(2, 448), int16] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %54 = logical_and(%39, %40) /* ty=Tensor[(6, 12, 12), bool] */;
  %55 = %41.0;
  %56 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
  %57 = %44.1;
  %58 = %45.0;
  %59 = left_shift(%52, %53) /* ty=Tensor[(2, 448), int16] */;
  (%54, %55, %56, %57, %58, %59)
}

def @func_2208(%var_2199: Tensor[(12, 2, 10), float64]) -> Tensor[(12, 2, 10), float64] {
  %60 = cast(%var_2199, dtype="float64") /* ty=Tensor[(12, 2, 10), float64] */;
  cosh(%60) /* ty=Tensor[(12, 2, 10), float64] */
}

def @func_7401(%var_7397: int8, %var_7398: Tensor[(896), bool]) -> (Tensor[(11, 14, 12), float32], Tensor[(42), float32], Tensor[(13, 65), int64], Tensor[(180), float32], int8, Tensor[(896), bool]) {
  %61 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 65), int64] */, dtype="int64") /* ty=Tensor[(13, 65), int64] */;
  %62 = cast(meta[relay.Constant][6] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %63 = cast(%var_7397, dtype="int8") /* ty=int8 */;
  %64 = cast(%var_7398, dtype="bool") /* ty=Tensor[(896), bool] */;
  %65 = reshape(%61, newshape=[845, 1]) /* ty=Tensor[(845, 1), int64] */;
  %66 = reshape(%62, newshape=[180, 1]) /* ty=Tensor[(180, 1), float32] */;
  %67 = reshape(%63, newshape=[]) /* ty=int8 */;
  %68 = reshape(%64, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %69 = @func_6478(%65, %66, %67, %68) /* ty=(Tensor[(11, 14, 12), bool], Tensor[(15, 4, 3), float32], Tensor[(180, 1), float32], Tensor[(1568), int8], Tensor[(4, 9, 2), float64], Tensor[(42), float32], int8, Tensor[(896), int16], Tensor[(845, 896), uint16]) */;
  %70 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %71 = %69.5;
  (%70, %71, meta[relay.Constant][5] /* ty=Tensor[(13, 65), int64] */, meta[relay.Constant][6] /* ty=Tensor[(180), float32] */, %var_7397, %var_7398)
}

def @func_7740(%var_7735: Tensor[(120), uint16]) -> (Tensor[(11, 14, 12), float32], Tensor[(5, 4, 6), uint16], Tensor[(120), uint16]) {
  %72 = @func_5992() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
  %73 = cast(%var_7735, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %74 = cast(%var_7735, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %75 = reshape(%73, newshape=[5, 4, 6]) /* ty=Tensor[(5, 4, 6), uint16] */;
  %76 = reshape(%74, newshape=[5, 4, 6]) /* ty=Tensor[(5, 4, 6), uint16] */;
  %77 = @func_3460(%75, %76) /* ty=(Tensor[(5, 4, 6), uint16], Tensor[(5, 4, 6), float64]) */;
  %78 = %72.0;
  %79 = %77.0;
  (%78, %79, %var_7735)
}

def @func_3344(%var_3311: uint16) -> (Tensor[(16, 8, 13), bool],) {
  %80 = cast(%var_3311, dtype="uint16") /* ty=uint16 */;
  %81 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 8, 13), uint16] */, dtype="uint16") /* ty=Tensor[(16, 8, 13), uint16] */;
  %82 = right_shift(%80, %81) /* ty=Tensor[(16, 8, 13), uint16] */;
  %83 = cast(%82, dtype="float64") /* ty=Tensor[(16, 8, 13), float64] */;
  %84 = log2(%83) /* ty=Tensor[(16, 8, 13), float64] */;
  %85 = cast(%84, dtype="float64") /* ty=Tensor[(16, 8, 13), float64] */;
  %86 = sin(%85) /* ty=Tensor[(16, 8, 13), float64] */;
  %87 = cast(%84, dtype="bool") /* ty=Tensor[(16, 8, 13), bool] */;
  %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%86, dtype="bool") /* ty=Tensor[(16, 8, 13), bool] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %91 = logical_or(%89, %90) /* ty=Tensor[(16, 8, 13), bool] */;
  (%91,)
}

def @func_8044() -> (Tensor[(11, 14, 12), uint64],) {
  %92 = @func_6610() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), uint64]) */;
  %93 = %92.1;
  (%93,)
}

def @func_9513() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %94 = @func_7309() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %95 = @func_6173() /* ty=Tensor[(11, 14, 12), float32] */;
  %96 = %94.0;
  (%95, %96)
}

def @func_9554() -> Tensor[(11, 14, 12), float32] {
  @func_6048() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_9320() -> (Tensor[(135), float64], Tensor[(2, 9, 12), float64], Tensor[(12, 18), float64]) {
  %97 = @func_8327() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(135), float64], Tensor[(1568), int8], int8, Tensor[(11, 14, 12), float32]) */;
  %98 = cast(meta[relay.Constant][8] /* ty=Tensor[(12, 18), float64] */, dtype="float64") /* ty=Tensor[(12, 18), float64] */;
  %99 = reshape(%98, newshape=[2, 9, 12]) /* ty=Tensor[(2, 9, 12), float64] */;
  %100 = %97.1;
  %101 = @func_7615(%99) /* ty=Tensor[(2, 9, 12), float64] */;
  (%100, %101, meta[relay.Constant][8] /* ty=Tensor[(12, 18), float64] */)
}

def @func_375(%var_334: Tensor[(16, 15, 12), float64], %var_341: Tensor[(180), float32]) -> (Tensor[(16, 7, 8), bool], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 15, 12), bool], Tensor[(16, 7, 8), bool], Tensor[(15, 4, 3), float32]) {
  %102 = cast(%var_341, dtype="float32") /* ty=Tensor[(180), float32] */;
  %103 = cast(%var_341, dtype="float32") /* ty=Tensor[(180), float32] */;
  %104 = cast(meta[relay.Constant][9] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
  %105 = reshape(%102, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), float32] */;
  %106 = reshape(%103, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), float32] */;
  %107 = reshape(%104, newshape=[56, 16]) /* ty=Tensor[(56, 16), bool] */;
  %108 = @func_214(%105, %106, %107) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(16, 7, 8), bool], Tensor[(56, 16), bool]) */;
  %109 = cast(%var_334, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
  %110 = sqrt(%109) /* ty=Tensor[(16, 15, 12), float64] */;
  %111 = cast(%var_334, dtype="bool") /* ty=Tensor[(16, 15, 12), bool] */;
  %112 = shape_of(%110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%110, dtype="bool") /* ty=Tensor[(16, 15, 12), bool] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %115 = %108.1;
  %116 = cast(%115, dtype="bool") /* ty=Tensor[(16, 7, 8), bool] */;
  %117 = reshape(%116, newshape=[16, 7, 8]) /* ty=Tensor[(16, 7, 8), bool] */;
  %118 = @func_151(%117) /* ty=(Tensor[(16, 7, 8), bool], Tensor[(16, 7, 8), bool]) */;
  %119 = cast(%var_341, dtype="float32") /* ty=Tensor[(180), float32] */;
  %120 = cast(%var_341, dtype="float32") /* ty=Tensor[(180), float32] */;
  %121 = cast(%115, dtype="bool") /* ty=Tensor[(16, 7, 8), bool] */;
  %122 = reshape(%119, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), float32] */;
  %123 = reshape(%120, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), float32] */;
  %124 = reshape(%121, newshape=[56, 16]) /* ty=Tensor[(56, 16), bool] */;
  %125 = @func_214(%122, %123, %124) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(16, 7, 8), bool], Tensor[(56, 16), bool]) */;
  %126 = greater_equal(%113, %114) /* ty=Tensor[(16, 15, 12), bool] */;
  %127 = %118.0;
  %128 = %125.0;
  (%115, %var_341, meta[relay.Constant][9] /* ty=Tensor[(896), bool] */, %126, %127, %128)
}

def @func_6361(%var_6317: Tensor[(11, 14, 12), float32]) -> (Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) {
  %129 = @func_5992() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
  %130 = %129.1;
  %131 = cast(%var_6317, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %132 = shape_of(%130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%130, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %135 = @func_6141() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %136 = less_equal(%133, %134) /* ty=Tensor[(11, 14, 12), bool] */;
  %137 = %135.0;
  (%136, %137)
}

def @func_8439() -> Tensor[(11, 14, 12), float32] {
  @func_4800() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_9477() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %138 = @func_6775() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %139 = %138.0;
  %140 = @func_6490() /* ty=Tensor[(11, 14, 12), float32] */;
  (%139, %140)
}

def @func_9761(%var_9753: Tensor[(180), float32]) -> (Tensor[(11, 14, 12), bool], Tensor[(336, 2), float64], Tensor[(180), float32]) {
  %141 = @func_9438() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), bool]) */;
  %142 = cast(%var_9753, dtype="float32") /* ty=Tensor[(180), float32] */;
  %143 = reshape(%142, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %144 = @func_4619(%143) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(7, 8, 12), bool], int8, Tensor[(180), float32], Tensor[(336, 2), float64]) */;
  %145 = %141.1;
  %146 = %144.4;
  (%145, %146, %var_9753)
}

def @func_449(%var_425: int8, %var_433: Tensor[(7, 8, 12), int8], %var_444: Tensor[(180), float32]) -> (Tensor[(7, 8, 12), bool], Tensor[(7, 8, 12), float32], Tensor[(7, 8, 12), int32], Tensor[(16, 7, 8), bool], Tensor[(2880), float64], Tensor[(180), float32], Tensor[(16, 7, 8), bool]) {
  %147 = cast(%var_425, dtype="bool") /* ty=bool */;
  %148 = cast(meta[relay.Constant][10] /* ty=Tensor[(7, 8, 12), int8] */, dtype="bool") /* ty=Tensor[(7, 8, 12), bool] */;
  %149 = cast(meta[relay.Constant][10] /* ty=Tensor[(7, 8, 12), int8] */, dtype="float32") /* ty=Tensor[(7, 8, 12), float32] */;
  %150 = cast(%var_433, dtype="int32") /* ty=Tensor[(7, 8, 12), int32] */;
  %151 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(7, 8, 12), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(meta[relay.Constant][10] /* ty=Tensor[(7, 8, 12), int8] */, dtype="int32") /* ty=Tensor[(7, 8, 12), int32] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %154 = cast(meta[relay.Constant][11] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %155 = cast(%var_444, dtype="float32") /* ty=Tensor[(180), float32] */;
  %156 = reshape(%154, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %157 = reshape(%155, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %158 = @func_375(%156, %157) /* ty=(Tensor[(16, 7, 8), bool], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 15, 12), bool], Tensor[(16, 7, 8), bool], Tensor[(15, 4, 3), float32]) */;
  %159 = cast(meta[relay.Constant][11] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %160 = cast(%var_444, dtype="float32") /* ty=Tensor[(180), float32] */;
  %161 = reshape(%159, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %162 = reshape(%160, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %163 = @func_375(%161, %162) /* ty=(Tensor[(16, 7, 8), bool], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 15, 12), bool], Tensor[(16, 7, 8), bool], Tensor[(15, 4, 3), float32]) */;
  %164 = equal(%147, %148) /* ty=Tensor[(7, 8, 12), bool] */;
  %165 = atan(%149) /* ty=Tensor[(7, 8, 12), float32] */;
  %166 = left_shift(%152, %153) /* ty=Tensor[(7, 8, 12), int32] */;
  %167 = %158.0;
  %168 = %163.4;
  (%164, %165, %166, %167, meta[relay.Constant][11] /* ty=Tensor[(2880), float64] */, %var_444, %168)
}

def @func_5732() -> (Tensor[(11, 14, 12), float32],) {
  %169 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
  %170 = @func_5249() /* ty=Tensor[(11, 14, 12), bool] */;
  %171 = cast(%170, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %172 = shape_of(%169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%169, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %175 = maximum(%173, %174) /* ty=Tensor[(11, 14, 12), float32] */;
  (%175,)
}

def @func_5878(%var_5867: Tensor[(15, 14, 10), uint16], %var_5868: Tensor[(15, 14, 10), uint16]) -> Tensor[(15, 14, 10), bool] {
  %176 = cast(%var_5868, dtype="bool") /* ty=Tensor[(15, 14, 10), bool] */;
  %177 = shape_of(%var_5867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(%var_5867, dtype="bool") /* ty=Tensor[(15, 14, 10), bool] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%178, %179) /* ty=Tensor[(15, 14, 10), bool] */
}

def @func_6173() -> Tensor[(11, 14, 12), float32] {
  %180 = @func_5900() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %180.0
}

def @func_5997() -> (Tensor[(11, 14, 12), float32],) {
  %181 = @func_5625() /* ty=Tensor[(11, 14, 12), float32] */;
  (%181,)
}

def @func_5625() -> Tensor[(11, 14, 12), float32] {
  %182 = @func_5240() /* ty=(Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) */;
  %183 = %182.0;
  %184 = cast(%183, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  acosh(%184) /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_114(%var_77: Tensor[(9, 15, 1), float64]) -> Tensor[(9, 15, 1), float64] {
  %185 = cast(%var_77, dtype="float64") /* ty=Tensor[(9, 15, 1), float64] */;
  cos(%185) /* ty=Tensor[(9, 15, 1), float64] */
}

def @func_6562() -> Tensor[(11, 14, 12), float32] {
  %186 = @func_5389() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
  %186.0
}

def @func_6924() -> (Tensor[(11, 14, 12), float32],) {
  %187 = @func_6233() /* ty=Tensor[(11, 14, 12), float32] */;
  (%187,)
}

def @func_7938(%var_7863: Tensor[(896), bool]) -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(896), bool], Tensor[(9, 15, 1), float64], Tensor[(1, 135), float64]) {
  %188 = @func_6610() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), uint64]) */;
  %189 = @func_6610() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), uint64]) */;
  %190 = cast(%var_7863, dtype="bool") /* ty=Tensor[(896), bool] */;
  %191 = reshape(%190, newshape=[28, 32]) /* ty=Tensor[(28, 32), bool] */;
  %192 = @func_5799(%191) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(15, 2, 16), float64], Tensor[(480), float64], Tensor[(845), int64], Tensor[(180), float32], Tensor[(1568), int8], Tensor[(60), uint32], Tensor[(28, 32), bool], Tensor[(1568), int8]) */;
  %193 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 135), float64] */, dtype="float64") /* ty=Tensor[(1, 135), float64] */;
  %194 = reshape(%193, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float64] */;
  %195 = %188.0;
  %196 = %189.0;
  %197 = %192.8;
  %198 = @func_114(%194) /* ty=Tensor[(9, 15, 1), float64] */;
  (%195, %196, %197, %var_7863, %198, meta[relay.Constant][12] /* ty=Tensor[(1, 135), float64] */)
}

def @func_1652(%var_1640: Tensor[(15, 1, 14), float32], %var_1641: Tensor[(15, 3, 14), float32]) -> Tensor[(15, 3, 14), bool] {
  %199 = cast(%var_1640, dtype="bool") /* ty=Tensor[(15, 1, 14), bool] */;
  %200 = cast(%var_1641, dtype="bool") /* ty=Tensor[(15, 3, 14), bool] */;
  greater(%199, %200) /* ty=Tensor[(15, 3, 14), bool] */
}

def @func_4619(%var_4594: Tensor[(180), float32]) -> (Tensor[(11, 14, 12), float32], Tensor[(7, 8, 12), bool], int8, Tensor[(180), float32], Tensor[(336, 2), float64]) {
  %201 = cast(meta[relay.Constant][13] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %202 = cast(meta[relay.Constant][14] /* ty=Tensor[(336, 2), int8] */, dtype="int8") /* ty=Tensor[(336, 2), int8] */;
  %203 = cast(%var_4594, dtype="float32") /* ty=Tensor[(180), float32] */;
  %204 = reshape(%201, newshape=[]) /* ty=int8 */;
  %205 = reshape(%202, newshape=[7, 8, 12]) /* ty=Tensor[(7, 8, 12), int8] */;
  %206 = reshape(%203, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %207 = @func_449(%204, %205, %206) /* ty=(Tensor[(7, 8, 12), bool], Tensor[(7, 8, 12), float32], Tensor[(7, 8, 12), int32], Tensor[(16, 7, 8), bool], Tensor[(2880), float64], Tensor[(180), float32], Tensor[(16, 7, 8), bool]) */;
  %208 = cast(meta[relay.Constant][14] /* ty=Tensor[(336, 2), int8] */, dtype="float64") /* ty=Tensor[(336, 2), float64] */;
  %209 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %210 = %207.0;
  %211 = asin(%208) /* ty=Tensor[(336, 2), float64] */;
  (%209, %210, meta[relay.Constant][13] /* ty=int8 */, %var_4594, %211)
}

def @func_6478(%var_6449: Tensor[(845, 1), int64], %var_6450: Tensor[(180, 1), float32], %var_6460: int8, %var_6461: Tensor[(896), bool]) -> (Tensor[(11, 14, 12), bool], Tensor[(15, 4, 3), float32], Tensor[(180, 1), float32], Tensor[(1568), int8], Tensor[(4, 9, 2), float64], Tensor[(42), float32], int8, Tensor[(896), int16], Tensor[(845, 896), uint16]) {
  %212 = @func_5240() /* ty=(Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) */;
  %213 = cast(%var_6449, dtype="int64") /* ty=Tensor[(845, 1), int64] */;
  %214 = cast(%var_6450, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
  %215 = cast(meta[relay.Constant][15] /* ty=Tensor[(1568), int8] */, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %216 = reshape(%213, newshape=[5, 13, 13]) /* ty=Tensor[(5, 13, 13), int64] */;
  %217 = reshape(%214, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %218 = reshape(%215, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
  %219 = @func_1259(%216, %217, %218) /* ty=(Tensor[(5, 13, 13), bool], Tensor[(15, 4, 3), float32], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(1568), int8]) */;
  %220 = cast(meta[relay.Constant][16] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %221 = cast(%var_6460, dtype="int8") /* ty=int8 */;
  %222 = cast(%var_6461, dtype="bool") /* ty=Tensor[(896), bool] */;
  %223 = reshape(%220, newshape=[14, 3, 1]) /* ty=Tensor[(14, 3, 1), float32] */;
  %224 = reshape(%221, newshape=[]) /* ty=int8 */;
  %225 = reshape(%222, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %226 = @func_4201(%223, %224, %225) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(4, 9, 2), float64], Tensor[(72), float64], Tensor[(7, 8, 12), int32], int8, Tensor[(672), int8], Tensor[(180, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(14, 3, 1), float32], Tensor[(14, 3, 1), float32]) */;
  %227 = cast(meta[relay.Constant][17] /* ty=Tensor[(896), bool] */, dtype="int16") /* ty=Tensor[(896), int16] */;
  %228 = shape_of(%var_6461, dtype="int32") /* ty=Tensor[(1), int32] */;
  %229 = cast(%var_6461, dtype="int16") /* ty=Tensor[(896), int16] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?), int16] */;
  %231 = cast(%var_6449, dtype="uint16") /* ty=Tensor[(845, 1), uint16] */;
  %232 = cast(meta[relay.Constant][17] /* ty=Tensor[(896), bool] */, dtype="uint16") /* ty=Tensor[(896), uint16] */;
  %233 = %212.0;
  %234 = %219.1;
  %235 = %226.1;
  %236 = logical_xor(%229, %230) /* ty=Tensor[(896), int16] */;
  %237 = subtract(%231, %232) /* ty=Tensor[(845, 896), uint16] */;
  (%233, %234, %var_6450, meta[relay.Constant][15] /* ty=Tensor[(1568), int8] */, %235, meta[relay.Constant][16] /* ty=Tensor[(42), float32] */, %var_6460, %236, %237)
}

def @func_4017() -> (Tensor[(11, 14, 12), float32],) {
  %238 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  (%238,)
}

def @func_3230(%var_3202: Tensor[(15, 2, 16), float64], %var_3224: Tensor[(845), int64], %var_3225: Tensor[(180), float32]) -> (Tensor[(15, 2, 16), float64], Tensor[(5, 13, 13), bool], Tensor[(845), int64], Tensor[(180), float32], Tensor[(1568), int8]) {
  %239 = cast(%var_3202, dtype="float64") /* ty=Tensor[(15, 2, 16), float64] */;
  %240 = sqrt(%239) /* ty=Tensor[(15, 2, 16), float64] */;
  %241 = cast(%240, dtype="float64") /* ty=Tensor[(15, 2, 16), float64] */;
  %242 = cast(%var_3224, dtype="int64") /* ty=Tensor[(845), int64] */;
  %243 = cast(%var_3225, dtype="float32") /* ty=Tensor[(180), float32] */;
  %244 = cast(meta[relay.Constant][18] /* ty=Tensor[(1568), int8] */, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %245 = reshape(%242, newshape=[5, 13, 13]) /* ty=Tensor[(5, 13, 13), int64] */;
  %246 = reshape(%243, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %247 = reshape(%244, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
  %248 = @func_1259(%245, %246, %247) /* ty=(Tensor[(5, 13, 13), bool], Tensor[(15, 4, 3), float32], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(1568), int8]) */;
  %249 = cos(%241) /* ty=Tensor[(15, 2, 16), float64] */;
  %250 = %248.0;
  (%249, %250, %var_3224, %var_3225, meta[relay.Constant][18] /* ty=Tensor[(1568), int8] */)
}

def @func_8106() -> (Tensor[(11, 14, 12), float32], Tensor[(56, 16), bool], Tensor[(6, 30), float32], Tensor[(896), bool], Tensor[(11, 14, 12), int32]) {
  %251 = @func_7534() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %252 = cast(meta[relay.Constant][19] /* ty=Tensor[(6, 30), float32] */, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
  %253 = cast(meta[relay.Constant][19] /* ty=Tensor[(6, 30), float32] */, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
  %254 = cast(meta[relay.Constant][20] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
  %255 = reshape(%252, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), float32] */;
  %256 = reshape(%253, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), float32] */;
  %257 = reshape(%254, newshape=[56, 16]) /* ty=Tensor[(56, 16), bool] */;
  %258 = @func_214(%255, %256, %257) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(16, 7, 8), bool], Tensor[(56, 16), bool]) */;
  %259 = %251.0;
  %260 = cast(%259, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %261 = reshape(%260, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), float32] */;
  %262 = @func_5088(%261) /* ty=(Tensor[(11, 14, 12), int32], Tensor[(11, 14, 12), float32]) */;
  %263 = %258.2;
  %264 = %262.0;
  (%259, %263, meta[relay.Constant][19] /* ty=Tensor[(6, 30), float32] */, meta[relay.Constant][20] /* ty=Tensor[(896), bool] */, %264)
}

def @func_8253(%var_8242: Tensor[(2, 13, 6), float64]) -> (Tensor[(2, 13, 6), float64], Tensor[(11, 14, 12), float32]) {
  %265 = cast(%var_8242, dtype="float64") /* ty=Tensor[(2, 13, 6), float64] */;
  %266 = @func_6141() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %267 = asin(%265) /* ty=Tensor[(2, 13, 6), float64] */;
  %268 = %266.0;
  (%267, %268)
}

def @func_3460(%var_3448: Tensor[(5, 4, 6), uint16], %var_3449: Tensor[(5, 4, 6), uint16]) -> (Tensor[(5, 4, 6), uint16], Tensor[(5, 4, 6), float64]) {
  %269 = cast(%var_3449, dtype="uint16") /* ty=Tensor[(5, 4, 6), uint16] */;
  %270 = shape_of(%var_3448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%var_3448, dtype="uint16") /* ty=Tensor[(5, 4, 6), uint16] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %273 = cast(%var_3448, dtype="float64") /* ty=Tensor[(5, 4, 6), float64] */;
  %274 = right_shift(%271, %272) /* ty=Tensor[(5, 4, 6), uint16] */;
  %275 = asin(%273) /* ty=Tensor[(5, 4, 6), float64] */;
  (%274, %275)
}

def @func_4201(%var_4104: Tensor[(14, 3, 1), float32], %var_4142: int8, %var_4149: Tensor[(896), bool]) -> (Tensor[(11, 14, 12), float32], Tensor[(4, 9, 2), float64], Tensor[(72), float64], Tensor[(7, 8, 12), int32], int8, Tensor[(672), int8], Tensor[(180, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(14, 3, 1), float32], Tensor[(14, 3, 1), float32]) {
  %276 = cast(meta[relay.Constant][21] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %277 = reshape(%276, newshape=[4, 9, 2]) /* ty=Tensor[(4, 9, 2), float64] */;
  %278 = cast(%var_4142, dtype="int8") /* ty=int8 */;
  %279 = cast(meta[relay.Constant][22] /* ty=Tensor[(672), int8] */, dtype="int8") /* ty=Tensor[(672), int8] */;
  %280 = cast(meta[relay.Constant][23] /* ty=Tensor[(180, 1), float32] */, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
  %281 = reshape(%278, newshape=[]) /* ty=int8 */;
  %282 = reshape(%279, newshape=[7, 8, 12]) /* ty=Tensor[(7, 8, 12), int8] */;
  %283 = reshape(%280, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %284 = @func_449(%281, %282, %283) /* ty=(Tensor[(7, 8, 12), bool], Tensor[(7, 8, 12), float32], Tensor[(7, 8, 12), int32], Tensor[(16, 7, 8), bool], Tensor[(2880), float64], Tensor[(180), float32], Tensor[(16, 7, 8), bool]) */;
  %285 = cast(%var_4149, dtype="bool") /* ty=Tensor[(896), bool] */;
  %286 = reshape(%285, newshape=[16, 7, 8]) /* ty=Tensor[(16, 7, 8), bool] */;
  %287 = @func_151(%286) /* ty=(Tensor[(16, 7, 8), bool], Tensor[(16, 7, 8), bool]) */;
  %288 = cast(%var_4104, dtype="float32") /* ty=Tensor[(14, 3, 1), float32] */;
  %289 = tan(%288) /* ty=Tensor[(14, 3, 1), float32] */;
  %290 = cast(%289, dtype="float64") /* ty=Tensor[(14, 3, 1), float64] */;
  %291 = asinh(%290) /* ty=Tensor[(14, 3, 1), float64] */;
  %292 = cast(%291, dtype="float32") /* ty=Tensor[(14, 3, 1), float32] */;
  %293 = cast(%291, dtype="float32") /* ty=Tensor[(14, 3, 1), float32] */;
  %294 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %295 = @func_2822(%277) /* ty=Tensor[(4, 9, 2), float64] */;
  %296 = %284.2;
  %297 = %287.0;
  %298 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
  %299 = asin(%292) /* ty=Tensor[(14, 3, 1), float32] */;
  %300 = sinh(%293) /* ty=Tensor[(14, 3, 1), float32] */;
  (%294, %295, meta[relay.Constant][21] /* ty=Tensor[(72), float64] */, %296, %var_4142, meta[relay.Constant][22] /* ty=Tensor[(672), int8] */, meta[relay.Constant][23] /* ty=Tensor[(180, 1), float32] */, %297, %var_4149, %298, %299, %300)
}

def @func_8479() -> Tensor[(11, 14, 12), float32] {
  %301 = @func_6141() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %301.0
}

def @func_7428() -> (Tensor[(11, 14, 12), float32],) {
  %302 = @func_5732() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %303 = %302.0;
  (%303,)
}

def @func_6117(%var_6102: uint64, %var_6103: Tensor[(6, 7, 8), uint64]) -> (Tensor[(6, 7, 8), uint64],) {
  %304 = cast(%var_6102, dtype="uint64") /* ty=uint64 */;
  %305 = cast(%var_6103, dtype="uint64") /* ty=Tensor[(6, 7, 8), uint64] */;
  %306 = bitwise_or(%304, %305) /* ty=Tensor[(6, 7, 8), uint64] */;
  (%306,)
}

def @func_3973(%var_3949: Tensor[(11, 14, 12), float32], %var_3967: Tensor[(11, 14, 12), bool]) -> Tensor[(11, 14, 12), uint64] {
  %307 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %308 = cast(%var_3949, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%307, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %312 = logical_and(%310, %311) /* ty=Tensor[(11, 14, 12), bool] */;
  %313 = cast(%var_3967, dtype="uint64") /* ty=Tensor[(11, 14, 12), uint64] */;
  %314 = shape_of(%312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %315 = cast(%312, dtype="uint64") /* ty=Tensor[(11, 14, 12), uint64] */;
  %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  left_shift(%315, %316) /* ty=Tensor[(11, 14, 12), uint64] */
}

def @func_2366(%var_2331: Tensor[(2, 13, 1), int16], %var_2348: Tensor[(135), float64], %var_2355: Tensor[(105, 2), float32], %var_2356: Tensor[(630), float32]) -> (Tensor[(180), float32], Tensor[(1440, 2), float64], Tensor[(180), float32], Tensor[(9, 15, 1), float64], Tensor[(15, 3, 14), bool], Tensor[(105, 2), float32], Tensor[(630), float32], Tensor[(2, 13, 135), float64]) {
  %317 = cast(meta[relay.Constant][24] /* ty=Tensor[(1440, 2), float64] */, dtype="float64") /* ty=Tensor[(1440, 2), float64] */;
  %318 = cast(meta[relay.Constant][25] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %319 = reshape(%317, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
  %320 = reshape(%318, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %321 = @func_375(%319, %320) /* ty=(Tensor[(16, 7, 8), bool], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 15, 12), bool], Tensor[(16, 7, 8), bool], Tensor[(15, 4, 3), float32]) */;
  %322 = cast(%var_2348, dtype="float64") /* ty=Tensor[(135), float64] */;
  %323 = reshape(%322, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float64] */;
  %324 = cast(%var_2355, dtype="float32") /* ty=Tensor[(105, 2), float32] */;
  %325 = cast(%var_2356, dtype="float32") /* ty=Tensor[(630), float32] */;
  %326 = reshape(%324, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), float32] */;
  %327 = reshape(%325, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), float32] */;
  %328 = cast(meta[relay.Constant][26] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %329 = cast(%var_2331, dtype="int16") /* ty=Tensor[(2, 13, 1), int16] */;
  %330 = bitwise_or(%328, %329) /* ty=Tensor[(2, 13, 1), int16] */;
  %331 = cast(%var_2348, dtype="float64") /* ty=Tensor[(135), float64] */;
  %332 = cast(%330, dtype="float64") /* ty=Tensor[(2, 13, 1), float64] */;
  %333 = %321.1;
  %334 = @func_114(%323) /* ty=Tensor[(9, 15, 1), float64] */;
  %335 = @func_1652(%326, %327) /* ty=Tensor[(15, 3, 14), bool] */;
  %336 = mod(%331, %332) /* ty=Tensor[(2, 13, 135), float64] */;
  (%333, meta[relay.Constant][24] /* ty=Tensor[(1440, 2), float64] */, meta[relay.Constant][25] /* ty=Tensor[(180), float32] */, %334, %335, %var_2355, %var_2356, %336)
}

def @func_534(%var_512: Tensor[(16, 7, 14), int8]) -> (Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) {
  %337 = cast(meta[relay.Constant][27] /* ty=Tensor[(16, 7, 14), int8] */, dtype="int8") /* ty=Tensor[(16, 7, 14), int8] */;
  %338 = shape_of(%var_512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %339 = cast(%var_512, dtype="int8") /* ty=Tensor[(16, 7, 14), int8] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %341 = cast(meta[relay.Constant][28] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %342 = reshape(%341, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float64] */;
  %343 = logical_xor(%339, %340) /* ty=Tensor[(16, 7, 14), int8] */;
  %344 = @func_114(%342) /* ty=Tensor[(9, 15, 1), float64] */;
  (%343, %344, meta[relay.Constant][28] /* ty=Tensor[(135), float64] */)
}

def @func_4398(%var_4365: Tensor[(60), uint32], %var_4366: Tensor[(180), float32]) -> (Tensor[(11, 14, 12), uint64], Tensor[(11, 14, 12), float32], Tensor[(896), bool], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(1568), int8], Tensor[(1568), int8], Tensor[(480), float64], Tensor[(845), int64], Tensor[(5, 4, 6), float64], Tensor[(120), uint16]) {
  %345 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %346 = cast(%345, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %347 = cast(%345, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %348 = reshape(%346, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), float32] */;
  %349 = reshape(%347, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), bool] */;
  %350 = cast(%345, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %351 = cast(%var_4365, dtype="uint32") /* ty=Tensor[(60), uint32] */;
  %352 = cast(%var_4366, dtype="float32") /* ty=Tensor[(180), float32] */;
  %353 = cast(meta[relay.Constant][29] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
  %354 = cast(meta[relay.Constant][30] /* ty=Tensor[(1568), int8] */, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %355 = reshape(%351, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), uint32] */;
  %356 = reshape(%352, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %357 = reshape(%353, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %358 = reshape(%354, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
  %359 = @func_690(%355, %356, %357, %358) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 7, 14), int8], Tensor[(1568), int8], Tensor[(2, 2, 15), int16]) */;
  %360 = cast(meta[relay.Constant][31] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %361 = cast(meta[relay.Constant][32] /* ty=Tensor[(845), int64] */, dtype="int64") /* ty=Tensor[(845), int64] */;
  %362 = cast(%var_4366, dtype="float32") /* ty=Tensor[(180), float32] */;
  %363 = reshape(%360, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
  %364 = reshape(%361, newshape=[845]) /* ty=Tensor[(845), int64] */;
  %365 = reshape(%362, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %366 = @func_3230(%363, %364, %365) /* ty=(Tensor[(15, 2, 16), float64], Tensor[(5, 13, 13), bool], Tensor[(845), int64], Tensor[(180), float32], Tensor[(1568), int8]) */;
  %367 = cast(meta[relay.Constant][33] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %368 = cast(meta[relay.Constant][33] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %369 = reshape(%367, newshape=[5, 4, 6]) /* ty=Tensor[(5, 4, 6), uint16] */;
  %370 = reshape(%368, newshape=[5, 4, 6]) /* ty=Tensor[(5, 4, 6), uint16] */;
  %371 = @func_3460(%369, %370) /* ty=(Tensor[(5, 4, 6), uint16], Tensor[(5, 4, 6), float64]) */;
  %372 = @func_3973(%348, %349) /* ty=Tensor[(11, 14, 12), uint64] */;
  %373 = asin(%350) /* ty=Tensor[(11, 14, 12), float32] */;
  %374 = %359.2;
  %375 = %366.4;
  %376 = %371.1;
  (%372, %373, %374, %var_4365, %var_4366, meta[relay.Constant][29] /* ty=Tensor[(896), bool] */, meta[relay.Constant][30] /* ty=Tensor[(1568), int8] */, %375, meta[relay.Constant][31] /* ty=Tensor[(480), float64] */, meta[relay.Constant][32] /* ty=Tensor[(845), int64] */, %376, meta[relay.Constant][33] /* ty=Tensor[(120), uint16] */)
}

def @func_5171(%var_5157: Tensor[(1, 1568), int8]) -> (Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float64], Tensor[(1, 1568), int8]) {
  %377 = cast(%var_5157, dtype="int8") /* ty=Tensor[(1, 1568), int8] */;
  %378 = reshape(%377, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), int8] */;
  %379 = @func_534(%378) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */;
  %380 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %381 = %379.1;
  (%380, %381, %var_5157)
}

def @func_2822(%var_2815: Tensor[(4, 9, 2), float64]) -> Tensor[(4, 9, 2), float64] {
  %382 = cast(%var_2815, dtype="float64") /* ty=Tensor[(4, 9, 2), float64] */;
  tan(%382) /* ty=Tensor[(4, 9, 2), float64] */
}

def @func_6015() -> Tensor[(11, 14, 12), bool] {
  %383 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %384 = %383.0;
  %385 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 14, 12), float32] */, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%384, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%387, %388) /* ty=Tensor[(11, 14, 12), bool] */
}

def @func_8518(%var_8515: Tensor[(9, 13, 15), float32]) -> Tensor[(9, 13, 15), float32] {
  %389 = cast(%var_8515, dtype="float32") /* ty=Tensor[(9, 13, 15), float32] */;
  exp(%389) /* ty=Tensor[(9, 13, 15), float32] */
}

def @func_3874() -> Tensor[(11, 14, 12), float32] {
  %390 = cast(meta[relay.Constant][35] /* ty=Tensor[(11, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  log2(%390) /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_7281() -> (Tensor[(11, 14, 12), float32], Tensor[(15, 4, 3), float32], Tensor[(30, 2), uint32], Tensor[(180), float32], Tensor[(448, 2), bool], Tensor[(1568), int8]) {
  %391 = @func_5389() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
  %392 = cast(meta[relay.Constant][36] /* ty=Tensor[(30, 2), uint32] */, dtype="uint32") /* ty=Tensor[(30, 2), uint32] */;
  %393 = cast(meta[relay.Constant][37] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %394 = cast(meta[relay.Constant][38] /* ty=Tensor[(448, 2), bool] */, dtype="bool") /* ty=Tensor[(448, 2), bool] */;
  %395 = cast(meta[relay.Constant][39] /* ty=Tensor[(1568), int8] */, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %396 = reshape(%392, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), uint32] */;
  %397 = reshape(%393, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %398 = reshape(%394, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %399 = reshape(%395, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
  %400 = @func_690(%396, %397, %398, %399) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 7, 14), int8], Tensor[(1568), int8], Tensor[(2, 2, 15), int16]) */;
  %401 = %391.1;
  %402 = %400.0;
  (%401, %402, meta[relay.Constant][36] /* ty=Tensor[(30, 2), uint32] */, meta[relay.Constant][37] /* ty=Tensor[(180), float32] */, meta[relay.Constant][38] /* ty=Tensor[(448, 2), bool] */, meta[relay.Constant][39] /* ty=Tensor[(1568), int8] */)
}

def @func_6141() -> (Tensor[(11, 14, 12), float32],) {
  %403 = @func_5900() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %404 = %403.0;
  (%404,)
}

def @func_7563() -> (Tensor[(11, 14, 12), float32],) {
  %405 = @func_6048() /* ty=Tensor[(11, 14, 12), float32] */;
  (%405,)
}

def @func_7615(%var_7602: Tensor[(2, 9, 12), float64]) -> Tensor[(2, 9, 12), float64] {
  %406 = cast(%var_7602, dtype="float64") /* ty=Tensor[(2, 9, 12), float64] */;
  atanh(%406) /* ty=Tensor[(2, 9, 12), float64] */
}

def @func_8082() -> Tensor[(11, 14, 12), float32] {
  %407 = @func_5992() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
  %407.0
}

def @func_8171() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %408 = @func_6581() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %409 = %408.0;
  %410 = @func_6061() /* ty=Tensor[(11, 14, 12), float32] */;
  (%409, %410)
}

def @func_690(%var_647: Tensor[(2, 2, 15), uint32], %var_654: Tensor[(180), float32], %var_655: Tensor[(896), bool], %var_659: Tensor[(1568), int8]) -> (Tensor[(15, 4, 3), float32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 7, 14), int8], Tensor[(1568), int8], Tensor[(2, 2, 15), int16]) {
  %411 = cast(%var_654, dtype="float32") /* ty=Tensor[(180), float32] */;
  %412 = cast(%var_654, dtype="float32") /* ty=Tensor[(180), float32] */;
  %413 = cast(%var_655, dtype="bool") /* ty=Tensor[(896), bool] */;
  %414 = reshape(%411, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), float32] */;
  %415 = reshape(%412, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), float32] */;
  %416 = reshape(%413, newshape=[56, 16]) /* ty=Tensor[(56, 16), bool] */;
  %417 = @func_214(%414, %415, %416) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(16, 7, 8), bool], Tensor[(56, 16), bool]) */;
  %418 = cast(%var_659, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %419 = reshape(%418, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), int8] */;
  %420 = @func_534(%419) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */;
  %421 = cast(meta[relay.Constant][40] /* ty=Tensor[(2, 2, 15), uint32] */, dtype="uint32") /* ty=Tensor[(2, 2, 15), uint32] */;
  %422 = shape_of(%var_647, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%var_647, dtype="uint32") /* ty=Tensor[(2, 2, 15), uint32] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %425 = right_shift(%423, %424) /* ty=Tensor[(2, 2, 15), uint32] */;
  %426 = cast(%var_647, dtype="int16") /* ty=Tensor[(2, 2, 15), int16] */;
  %427 = shape_of(%425, dtype="int32") /* ty=Tensor[(3), int32] */;
  %428 = cast(%425, dtype="int16") /* ty=Tensor[(2, 2, 15), int16] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %430 = %417.0;
  %431 = %420.0;
  %432 = add(%428, %429) /* ty=Tensor[(2, 2, 15), int16] */;
  (%430, %var_654, %var_655, %431, %var_659, %432)
}

def @func_9230(%var_9186: Tensor[(16, 2, 12), float32], %var_9221: uint32, %var_9222: Tensor[(2100), uint16]) -> (Tensor[(11, 14, 12), float32], Tensor[(16, 2, 12), float32], Tensor[(8, 2, 11), uint32], uint32, Tensor[(2100), uint16]) {
  %433 = @func_8205() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
  %434 = cast(%var_9186, dtype="float32") /* ty=Tensor[(16, 2, 12), float32] */;
  %435 = erf(%434) /* ty=Tensor[(16, 2, 12), float32] */;
  %436 = cast(%435, dtype="float32") /* ty=Tensor[(16, 2, 12), float32] */;
  %437 = rsqrt(%436) /* ty=Tensor[(16, 2, 12), float32] */;
  %438 = cast(%437, dtype="float32") /* ty=Tensor[(16, 2, 12), float32] */;
  %439 = cast(%var_9221, dtype="uint32") /* ty=uint32 */;
  %440 = cast(%var_9222, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %441 = reshape(%439, newshape=[]) /* ty=uint32 */;
  %442 = reshape(%440, newshape=[30, 70]) /* ty=Tensor[(30, 70), uint16] */;
  %443 = @func_6827(%441, %442) /* ty=(Tensor[(8, 2, 11), uint32], Tensor[(11, 14, 12), float32], Tensor[(15, 14, 10), bool], Tensor[(30, 70), uint16]) */;
  %444 = %433.1;
  %445 = sigmoid(%438) /* ty=Tensor[(16, 2, 12), float32] */;
  %446 = %443.0;
  (%444, %445, %446, %var_9221, %var_9222)
}

def @func_9137(%var_9133: Tensor[(10, 15, 13), float32]) -> (Tensor[(10, 15, 13), float32],) {
  %447 = cast(%var_9133, dtype="float32") /* ty=Tensor[(10, 15, 13), float32] */;
  %448 = log(%447) /* ty=Tensor[(10, 15, 13), float32] */;
  (%448,)
}

def @func_5088(%var_5050: Tensor[(11, 14, 12), float32]) -> (Tensor[(11, 14, 12), int32], Tensor[(11, 14, 12), float32]) {
  %449 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
  %450 = cast(%var_5050, dtype="int32") /* ty=Tensor[(11, 14, 12), int32] */;
  %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%449, dtype="int32") /* ty=Tensor[(11, 14, 12), int32] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %454 = cast(%var_5050, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %455 = bitwise_xor(%452, %453) /* ty=Tensor[(11, 14, 12), int32] */;
  %456 = cos(%454) /* ty=Tensor[(11, 14, 12), float32] */;
  (%455, %456)
}

def @func_8779() -> Tensor[(11, 14, 12), float32] {
  %457 = @func_7309() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %457.0
}

def @func_9975() -> (Tensor[(11, 14, 12), float32],) {
  %458 = @func_6061() /* ty=Tensor[(11, 14, 12), float32] */;
  (%458,)
}

def @func_7063() -> (Tensor[(11, 14, 12), float32],) {
  %459 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %460 = %459.0;
  (%460,)
}

def @func_6581() -> (Tensor[(11, 14, 12), float32],) {
  %461 = @func_5732() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %462 = %461.0;
  (%462,)
}

def @func_9076(%var_9058: Tensor[(150, 14), uint16]) -> (Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), bool], Tensor[(9, 15, 1), float64], Tensor[(8, 2, 11), uint32], uint32, Tensor[(150, 14), uint16], Tensor[(11, 14, 12), float32]) {
  %463 = @func_5997() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %464 = @func_7136() /* ty=(Tensor[(9, 15, 1), float64], Tensor[(11, 14, 12), float32], Tensor[(1848), float32]) */;
  %465 = cast(meta[relay.Constant][41] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %466 = cast(%var_9058, dtype="uint16") /* ty=Tensor[(150, 14), uint16] */;
  %467 = reshape(%465, newshape=[]) /* ty=uint32 */;
  %468 = reshape(%466, newshape=[30, 70]) /* ty=Tensor[(30, 70), uint16] */;
  %469 = @func_6827(%467, %468) /* ty=(Tensor[(8, 2, 11), uint32], Tensor[(11, 14, 12), float32], Tensor[(15, 14, 10), bool], Tensor[(30, 70), uint16]) */;
  %470 = @func_5249() /* ty=Tensor[(11, 14, 12), bool] */;
  %471 = %463.0;
  %472 = @func_5249() /* ty=Tensor[(11, 14, 12), bool] */;
  %473 = %464.0;
  %474 = %469.0;
  %475 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
  (%470, %471, %472, %473, %474, meta[relay.Constant][41] /* ty=uint32 */, %var_9058, %475)
}

def @func_5443() -> (Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float64], Tensor[(1568), int8]) {
  %476 = @func_5389() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
  %477 = cast(meta[relay.Constant][42] /* ty=Tensor[(1568), int8] */, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %478 = reshape(%477, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), int8] */;
  %479 = @func_534(%478) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */;
  %480 = %476.0;
  %481 = %479.1;
  (%480, %481, meta[relay.Constant][42] /* ty=Tensor[(1568), int8] */)
}

def @func_5240() -> (Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) {
  %482 = @func_4800() /* ty=Tensor[(11, 14, 12), float32] */;
  %483 = @func_4800() /* ty=Tensor[(11, 14, 12), float32] */;
  %484 = cast(%483, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %485 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(%482, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %488 = power(%486, %487) /* ty=Tensor[(11, 14, 12), float32] */;
  %489 = cast(%488, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %490 = atan(%489) /* ty=Tensor[(11, 14, 12), float32] */;
  %491 = cast(%488, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %492 = shape_of(%490, dtype="int32") /* ty=Tensor[(3), int32] */;
  %493 = cast(%490, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %495 = equal(%493, %494) /* ty=Tensor[(11, 14, 12), bool] */;
  %496 = @func_4800() /* ty=Tensor[(11, 14, 12), float32] */;
  (%495, %496)
}

def @func_6700(%var_6635: Tensor[(28, 32), bool]) -> (Tensor[(15, 2, 16), float64], Tensor[(28, 32), bool], Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float64], Tensor[(11, 14, 12), uint64], Tensor[(11, 14, 12), float32]) {
  %497 = cast(%var_6635, dtype="bool") /* ty=Tensor[(28, 32), bool] */;
  %498 = reshape(%497, newshape=[28, 32]) /* ty=Tensor[(28, 32), bool] */;
  %499 = @func_5799(%498) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(15, 2, 16), float64], Tensor[(480), float64], Tensor[(845), int64], Tensor[(180), float32], Tensor[(1568), int8], Tensor[(60), uint32], Tensor[(28, 32), bool], Tensor[(1568), int8]) */;
  %500 = @func_4800() /* ty=Tensor[(11, 14, 12), float32] */;
  %501 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 14, 12), float32] */, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%500, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %505 = cast(%500, dtype="float64") /* ty=Tensor[(11, 14, 12), float64] */;
  %506 = cast(%500, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %507 = less(%503, %504) /* ty=Tensor[(11, 14, 12), bool] */;
  %508 = cast(%507, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %509 = reshape(%506, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), float32] */;
  %510 = reshape(%508, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), bool] */;
  %511 = @func_5997() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %512 = %499.1;
  %513 = sigmoid(%505) /* ty=Tensor[(11, 14, 12), float64] */;
  %514 = @func_3973(%509, %510) /* ty=Tensor[(11, 14, 12), uint64] */;
  %515 = %511.0;
  (%512, %var_6635, %507, %513, %514, %515)
}

def @func_10024(%var_9994: Tensor[(12, 6, 13), int8], %var_9995: Tensor[(12, 6, 13), int8], %var_10001: Tensor[(896), bool]) -> (Tensor[(12, 6, 13), int8], int8, int8, Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %516 = cast(%var_9995, dtype="int8") /* ty=Tensor[(12, 6, 13), int8] */;
  %517 = shape_of(%var_9994, dtype="int32") /* ty=Tensor[(3), int32] */;
  %518 = cast(%var_9994, dtype="int8") /* ty=Tensor[(12, 6, 13), int8] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %520 = cast(meta[relay.Constant][44] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %521 = cast(%var_10001, dtype="bool") /* ty=Tensor[(896), bool] */;
  %522 = reshape(%520, newshape=[]) /* ty=int8 */;
  %523 = reshape(%521, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %524 = @func_7401(%522, %523) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(42), float32], Tensor[(13, 65), int64], Tensor[(180), float32], int8, Tensor[(896), bool]) */;
  %525 = @func_7534() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %526 = minimum(%518, %519) /* ty=Tensor[(12, 6, 13), int8] */;
  %527 = %524.4;
  %528 = %525.0;
  %529 = @func_9554() /* ty=Tensor[(11, 14, 12), float32] */;
  (%526, %527, meta[relay.Constant][44] /* ty=int8 */, %var_10001, %528, %529)
}

def @func_4459(%var_4422: Tensor[(1568), int8], %var_4455: int8) -> (Tensor[(11, 14, 12), float64], Tensor[(1568), int8], Tensor[(135), float64], Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(42), float32], int8, Tensor[(896), bool]) {
  %530 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
  %531 = cast(%530, dtype="float64") /* ty=Tensor[(11, 14, 12), float64] */;
  %532 = cast(%var_4422, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %533 = reshape(%532, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), int8] */;
  %534 = @func_534(%533) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */;
  %535 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %536 = cast(%var_4422, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %537 = reshape(%536, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), int8] */;
  %538 = @func_534(%537) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */;
  %539 = %538.1;
  %540 = cast(%539, dtype="float32") /* ty=Tensor[(9, 15, 1), float32] */;
  %541 = cast(meta[relay.Constant][45] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %542 = cast(%var_4455, dtype="int8") /* ty=int8 */;
  %543 = cast(meta[relay.Constant][46] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
  %544 = reshape(%541, newshape=[14, 3, 1]) /* ty=Tensor[(14, 3, 1), float32] */;
  %545 = reshape(%542, newshape=[]) /* ty=int8 */;
  %546 = reshape(%543, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %547 = @func_4201(%544, %545, %546) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(4, 9, 2), float64], Tensor[(72), float64], Tensor[(7, 8, 12), int32], int8, Tensor[(672), int8], Tensor[(180, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(14, 3, 1), float32], Tensor[(14, 3, 1), float32]) */;
  %548 = tan(%531) /* ty=Tensor[(11, 14, 12), float64] */;
  %549 = %534.2;
  %550 = %535.0;
  %551 = sigmoid(%540) /* ty=Tensor[(9, 15, 1), float32] */;
  %552 = %547.7;
  (%548, %var_4422, %549, %550, %551, %552, meta[relay.Constant][45] /* ty=Tensor[(42), float32] */, %var_4455, meta[relay.Constant][46] /* ty=Tensor[(896), bool] */)
}

def @func_8630() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %553 = @func_7563() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %554 = %553.0;
  %555 = @func_6562() /* ty=Tensor[(11, 14, 12), float32] */;
  (%554, %555)
}

def @func_8595() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %556 = @func_7309() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %557 = @func_6141() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %558 = %556.0;
  %559 = %557.0;
  (%558, %559)
}

def @func_7170(%var_7156: Tensor[(42), float32], %var_7157: int8) -> (Tensor[(11, 14, 12), float32], Tensor[(16, 7, 8), bool], Tensor[(42), float32], int8, Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %560 = @func_5240() /* ty=(Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) */;
  %561 = cast(%var_7156, dtype="float32") /* ty=Tensor[(42), float32] */;
  %562 = cast(%var_7157, dtype="int8") /* ty=int8 */;
  %563 = cast(meta[relay.Constant][47] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
  %564 = reshape(%561, newshape=[14, 3, 1]) /* ty=Tensor[(14, 3, 1), float32] */;
  %565 = reshape(%562, newshape=[]) /* ty=int8 */;
  %566 = reshape(%563, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %567 = @func_4201(%564, %565, %566) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(4, 9, 2), float64], Tensor[(72), float64], Tensor[(7, 8, 12), int32], int8, Tensor[(672), int8], Tensor[(180, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(14, 3, 1), float32], Tensor[(14, 3, 1), float32]) */;
  %568 = @func_5900() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %569 = @func_5900() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %570 = %560.1;
  %571 = %567.7;
  %572 = %568.0;
  %573 = %569.0;
  (%570, %571, %var_7156, %var_7157, meta[relay.Constant][47] /* ty=Tensor[(896), bool] */, %572, %573)
}

def @func_5992() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %574 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %575 = @func_4800() /* ty=Tensor[(11, 14, 12), float32] */;
  %576 = %574.0;
  (%575, %576)
}

def @func_4089() -> Tensor[(11, 14, 12), float32] {
  %577 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %578 = cast(meta[relay.Constant][48] /* ty=Tensor[(11, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %579 = shape_of(%577, dtype="int32") /* ty=Tensor[(3), int32] */;
  %580 = cast(%577, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%580, %581) /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_10200(%var_10193: Tensor[(2, 14, 5), float64], %var_10194: Tensor[(2, 14, 5), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(11, 14, 12), float32]) {
  %582 = cast(%var_10194, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %583 = shape_of(%var_10193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%var_10193, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %586 = add(%584, %585) /* ty=Tensor[(2, 14, 5), float64] */;
  %587 = @func_6562() /* ty=Tensor[(11, 14, 12), float32] */;
  (%586, %587)
}

def @func_6431(%var_6404: Tensor[(11, 14, 12), float32], %var_6426: Tensor[(4, 420), int16]) -> (Tensor[(11, 14, 12), uint64], Tensor[(5, 4, 6), float64], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(12, 10, 14), bool], Tensor[(4, 420), int16]) {
  %588 = @func_4800() /* ty=Tensor[(11, 14, 12), float32] */;
  %589 = cast(%var_6404, dtype="uint64") /* ty=Tensor[(11, 14, 12), uint64] */;
  %590 = shape_of(%588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(%588, dtype="uint64") /* ty=Tensor[(11, 14, 12), uint64] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %593 = cast(meta[relay.Constant][49] /* ty=Tensor[(60), uint32] */, dtype="uint32") /* ty=Tensor[(60), uint32] */;
  %594 = cast(meta[relay.Constant][50] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %595 = reshape(%593, newshape=[60]) /* ty=Tensor[(60), uint32] */;
  %596 = reshape(%594, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %597 = @func_4398(%595, %596) /* ty=(Tensor[(11, 14, 12), uint64], Tensor[(11, 14, 12), float32], Tensor[(896), bool], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(1568), int8], Tensor[(1568), int8], Tensor[(480), float64], Tensor[(845), int64], Tensor[(5, 4, 6), float64], Tensor[(120), uint16]) */;
  %598 = cast(meta[relay.Constant][51] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %599 = reshape(%598, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %600 = cast(%var_6426, dtype="int16") /* ty=Tensor[(4, 420), int16] */;
  %601 = %597.10;
  %602 = cast(%601, dtype="float64") /* ty=Tensor[(5, 4, 6), float64] */;
  %603 = reshape(%600, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), int16] */;
  %604 = reshape(%602, newshape=[60, 2]) /* ty=Tensor[(60, 2), float64] */;
  %605 = @func_4989(%603, %604) /* ty=(Tensor[(12, 10, 14), bool], Tensor[(4, 3, 10), bool], Tensor[(60, 2), float64]) */;
  %606 = logical_xor(%591, %592) /* ty=Tensor[(11, 14, 12), uint64] */;
  %607 = @func_2208(%599) /* ty=Tensor[(12, 2, 10), float64] */;
  %608 = %605.0;
  (%606, %601, meta[relay.Constant][49] /* ty=Tensor[(60), uint32] */, meta[relay.Constant][50] /* ty=Tensor[(180), float32] */, %607, meta[relay.Constant][51] /* ty=Tensor[(240), float64] */, %608, %var_6426)
}

def @func_9116(%var_9092: Tensor[(7, 11, 1), float64], %var_9101: Tensor[(1, 26), int16], %var_9102: Tensor[(1, 135), float64], %var_9103: Tensor[(210), float32]) -> (Tensor[(7, 11, ?), uint32], Tensor[(9, 15, 1), float64], Tensor[(1, 26), int16], Tensor[(1, 135), float64], Tensor[(210), float32], Tensor[(630, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool]) {
  %609 = cast(%var_9092, dtype="float64") /* ty=Tensor[(7, 11, 1), float64] */;
  %610 = erf(%609) /* ty=Tensor[(7, 11, 1), float64] */;
  %611 = cast(%610, dtype="uint32") /* ty=Tensor[(7, 11, 1), uint32] */;
  %612 = shape_of(%var_9092, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%var_9092, dtype="uint32") /* ty=Tensor[(7, 11, 1), uint32] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %615 = cast(%var_9101, dtype="int16") /* ty=Tensor[(1, 26), int16] */;
  %616 = cast(%var_9102, dtype="float64") /* ty=Tensor[(1, 135), float64] */;
  %617 = cast(%var_9103, dtype="float32") /* ty=Tensor[(210), float32] */;
  %618 = cast(meta[relay.Constant][52] /* ty=Tensor[(630, 1), float32] */, dtype="float32") /* ty=Tensor[(630, 1), float32] */;
  %619 = reshape(%615, newshape=[2, 13, 1]) /* ty=Tensor[(2, 13, 1), int16] */;
  %620 = reshape(%616, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %621 = reshape(%617, newshape=[105, 2]) /* ty=Tensor[(105, 2), float32] */;
  %622 = reshape(%618, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %623 = @func_2366(%619, %620, %621, %622) /* ty=(Tensor[(180), float32], Tensor[(1440, 2), float64], Tensor[(180), float32], Tensor[(9, 15, 1), float64], Tensor[(15, 3, 14), bool], Tensor[(105, 2), float32], Tensor[(630), float32], Tensor[(2, 13, 135), float64]) */;
  %624 = cast(meta[relay.Constant][53] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
  %625 = reshape(%624, newshape=[16, 7, 8]) /* ty=Tensor[(16, 7, 8), bool] */;
  %626 = @func_151(%625) /* ty=(Tensor[(16, 7, 8), bool], Tensor[(16, 7, 8), bool]) */;
  %627 = logical_xor(%613, %614) /* ty=Tensor[(7, 11, ?), uint32] */;
  %628 = %623.3;
  %629 = %626.1;
  (%627, %628, %var_9101, %var_9102, %var_9103, meta[relay.Constant][52] /* ty=Tensor[(630, 1), float32] */, %629, meta[relay.Constant][53] /* ty=Tensor[(896), bool] */)
}

def @func_8205() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %630 = @func_7563() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %631 = @func_5732() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %632 = %630.0;
  %633 = %631.0;
  (%632, %633)
}

def @func_6490() -> Tensor[(11, 14, 12), float32] {
  @func_4089() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_8327() -> (Tensor[(11, 14, 12), float32], Tensor[(135), float64], Tensor[(1568), int8], int8, Tensor[(11, 14, 12), float32]) {
  %634 = cast(meta[relay.Constant][54] /* ty=Tensor[(1568), int8] */, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %635 = cast(meta[relay.Constant][55] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %636 = reshape(%634, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
  %637 = reshape(%635, newshape=[]) /* ty=int8 */;
  %638 = @func_4459(%636, %637) /* ty=(Tensor[(11, 14, 12), float64], Tensor[(1568), int8], Tensor[(135), float64], Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(42), float32], int8, Tensor[(896), bool]) */;
  %639 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
  %640 = cast(%639, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %641 = atanh(%640) /* ty=Tensor[(11, 14, 12), float32] */;
  %642 = cast(%641, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %643 = @func_5625() /* ty=Tensor[(11, 14, 12), float32] */;
  %644 = %638.2;
  %645 = log10(%642) /* ty=Tensor[(11, 14, 12), float32] */;
  (%643, %644, meta[relay.Constant][54] /* ty=Tensor[(1568), int8] */, meta[relay.Constant][55] /* ty=int8 */, %645)
}

def @func_1259(%var_1237: Tensor[(5, 13, 13), int64], %var_1255: Tensor[(180), float32], %var_1257: Tensor[(1568), int8]) -> (Tensor[(5, 13, 13), bool], Tensor[(15, 4, 3), float32], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(1568), int8]) {
  %646 = cast(meta[relay.Constant][56] /* ty=Tensor[(5, 13, 13), int64] */, dtype="bool") /* ty=Tensor[(5, 13, 13), bool] */;
  %647 = shape_of(%var_1237, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%var_1237, dtype="bool") /* ty=Tensor[(5, 13, 13), bool] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %650 = cast(meta[relay.Constant][57] /* ty=Tensor[(60), uint32] */, dtype="uint32") /* ty=Tensor[(60), uint32] */;
  %651 = cast(%var_1255, dtype="float32") /* ty=Tensor[(180), float32] */;
  %652 = cast(meta[relay.Constant][58] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
  %653 = cast(%var_1257, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %654 = reshape(%650, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), uint32] */;
  %655 = reshape(%651, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %656 = reshape(%652, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %657 = reshape(%653, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
  %658 = @func_690(%654, %655, %656, %657) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 7, 14), int8], Tensor[(1568), int8], Tensor[(2, 2, 15), int16]) */;
  %659 = greater_equal(%648, %649) /* ty=Tensor[(5, 13, 13), bool] */;
  %660 = %658.0;
  (%659, %660, meta[relay.Constant][57] /* ty=Tensor[(60), uint32] */, %var_1255, meta[relay.Constant][58] /* ty=Tensor[(896), bool] */, %var_1257)
}

def @func_8719() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) {
  %661 = @func_8205() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
  %662 = %661.1;
  %663 = @func_4925() /* ty=Tensor[(11, 14, 12), float32] */;
  %664 = @func_5249() /* ty=Tensor[(11, 14, 12), bool] */;
  %665 = @func_4800() /* ty=Tensor[(11, 14, 12), float32] */;
  (%662, %663, %664, %665)
}

def @func_151(%var_140: Tensor[(16, 7, 8), bool]) -> (Tensor[(16, 7, 8), bool], Tensor[(16, 7, 8), bool]) {
  %666 = cast(meta[relay.Constant][60] /* ty=Tensor[(16, 7, 8), bool] */, dtype="bool") /* ty=Tensor[(16, 7, 8), bool] */;
  %667 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(16, 7, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(meta[relay.Constant][59] /* ty=Tensor[(16, 7, 8), bool] */, dtype="bool") /* ty=Tensor[(16, 7, 8), bool] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %670 = cast(%var_140, dtype="bool") /* ty=Tensor[(16, 7, 8), bool] */;
  %671 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(16, 7, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(meta[relay.Constant][60] /* ty=Tensor[(16, 7, 8), bool] */, dtype="bool") /* ty=Tensor[(16, 7, 8), bool] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %674 = logical_or(%668, %669) /* ty=Tensor[(16, 7, 8), bool] */;
  %675 = greater(%672, %673) /* ty=Tensor[(16, 7, 8), bool] */;
  (%674, %675)
}

def @func_214(%var_192: Tensor[(15, 4, 3), float32], %var_193: Tensor[(15, 4, 3), float32], %var_203: Tensor[(56, 16), bool]) -> (Tensor[(15, 4, 3), float32], Tensor[(16, 7, 8), bool], Tensor[(56, 16), bool]) {
  %676 = cast(%var_193, dtype="float32") /* ty=Tensor[(15, 4, 3), float32] */;
  %677 = shape_of(%var_192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(%var_192, dtype="float32") /* ty=Tensor[(15, 4, 3), float32] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %680 = cast(%var_203, dtype="bool") /* ty=Tensor[(56, 16), bool] */;
  %681 = reshape(%680, newshape=[16, 7, 8]) /* ty=Tensor[(16, 7, 8), bool] */;
  %682 = @func_151(%681) /* ty=(Tensor[(16, 7, 8), bool], Tensor[(16, 7, 8), bool]) */;
  %683 = subtract(%678, %679) /* ty=Tensor[(15, 4, 3), float32] */;
  %684 = %682.1;
  (%683, %684, %var_203)
}

def @func_5900() -> (Tensor[(11, 14, 12), float32],) {
  %685 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  (%685,)
}

def @func_7136() -> (Tensor[(9, 15, 1), float64], Tensor[(11, 14, 12), float32], Tensor[(1848), float32]) {
  %686 = @func_5443() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float64], Tensor[(1568), int8]) */;
  %687 = cast(meta[relay.Constant][61] /* ty=Tensor[(1848), float32] */, dtype="float32") /* ty=Tensor[(1848), float32] */;
  %688 = reshape(%687, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), float32] */;
  %689 = @func_6361(%688) /* ty=(Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) */;
  %690 = %686.1;
  %691 = %689.1;
  (%690, %691, meta[relay.Constant][61] /* ty=Tensor[(1848), float32] */)
}

def @func_9395(%var_9383: Tensor[(1, 9, 2), int64], %var_9384: Tensor[(10, 9, 2), int64]) -> Tensor[(10, 9, 2), int64] {
  %692 = cast(%var_9383, dtype="int64") /* ty=Tensor[(1, 9, 2), int64] */;
  %693 = cast(%var_9384, dtype="int64") /* ty=Tensor[(10, 9, 2), int64] */;
  multiply(%692, %693) /* ty=Tensor[(10, 9, 2), int64] */
}

def @func_5389() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %694 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %695 = %694.0;
  %696 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
  (%695, %696)
}

def @func_2871(%var_2846: Tensor[(4, 3, 10), float64], %var_2847: Tensor[(4, 3, 10), float64]) -> (Tensor[(4, 3, 10), bool],) {
  %697 = cast(%var_2847, dtype="bool") /* ty=Tensor[(4, 3, 10), bool] */;
  %698 = shape_of(%var_2846, dtype="int32") /* ty=Tensor[(3), int32] */;
  %699 = cast(%var_2846, dtype="bool") /* ty=Tensor[(4, 3, 10), bool] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %701 = less(%699, %700) /* ty=Tensor[(4, 3, 10), bool] */;
  (%701,)
}

def @func_5671(%var_5635: Tensor[(1568), int8], %var_5666: Tensor[(11, 14, 12), float64]) -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(16, 8, 13), bool], uint16, Tensor[(11, 14, 12), bool]) {
  %702 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %703 = cast(%var_5635, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %704 = reshape(%703, newshape=[1, 1568]) /* ty=Tensor[(1, 1568), int8] */;
  %705 = @func_5171(%704) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float64], Tensor[(1, 1568), int8]) */;
  %706 = cast(meta[relay.Constant][62] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %707 = reshape(%706, newshape=[]) /* ty=uint16 */;
  %708 = @func_3344(%707) /* ty=(Tensor[(16, 8, 13), bool],) */;
  %709 = @func_5249() /* ty=Tensor[(11, 14, 12), bool] */;
  %710 = cast(%709, dtype="float64") /* ty=Tensor[(11, 14, 12), float64] */;
  %711 = rsqrt(%710) /* ty=Tensor[(11, 14, 12), float64] */;
  %712 = cast(%var_5666, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %713 = shape_of(%711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %714 = cast(%711, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %715 = dyn.reshape(%712, %713, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %716 = %702.0;
  %717 = %705.0;
  %718 = %708.0;
  %719 = greater_equal(%714, %715) /* ty=Tensor[(11, 14, 12), bool] */;
  (%716, %717, %var_5635, %718, meta[relay.Constant][62] /* ty=uint16 */, %719)
}

def @func_4700(%var_4675: Tensor[(11, 14, 12), float32], %var_4695: int8) -> (Tensor[(11, 14, 12), float64], Tensor[(11, 14, 12), uint64], Tensor[(4, 9, 2), float64], Tensor[(42), float32], int8, Tensor[(896), bool]) {
  %720 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %721 = cast(%var_4675, dtype="float64") /* ty=Tensor[(11, 14, 12), float64] */;
  %722 = shape_of(%720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %723 = cast(%720, dtype="float64") /* ty=Tensor[(11, 14, 12), float64] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %725 = cast(%720, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %726 = cast(%var_4675, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %727 = reshape(%725, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), float32] */;
  %728 = reshape(%726, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), bool] */;
  %729 = cast(meta[relay.Constant][63] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %730 = cast(%var_4695, dtype="int8") /* ty=int8 */;
  %731 = cast(meta[relay.Constant][64] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
  %732 = reshape(%729, newshape=[14, 3, 1]) /* ty=Tensor[(14, 3, 1), float32] */;
  %733 = reshape(%730, newshape=[]) /* ty=int8 */;
  %734 = reshape(%731, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %735 = @func_4201(%732, %733, %734) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(4, 9, 2), float64], Tensor[(72), float64], Tensor[(7, 8, 12), int32], int8, Tensor[(672), int8], Tensor[(180, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(14, 3, 1), float32], Tensor[(14, 3, 1), float32]) */;
  %736 = floor_divide(%723, %724) /* ty=Tensor[(11, 14, 12), float64] */;
  %737 = @func_3973(%727, %728) /* ty=Tensor[(11, 14, 12), uint64] */;
  %738 = %735.1;
  (%736, %737, %738, meta[relay.Constant][63] /* ty=Tensor[(42), float32] */, %var_4695, meta[relay.Constant][64] /* ty=Tensor[(896), bool] */)
}

def @func_5351(%var_5256: Tensor[(5, 6, 3), float64], %var_5257: Tensor[(5, 6, 3), float64], %var_5280: int8, %var_5281: Tensor[(896), bool], %var_5309: Tensor[(845), int64], %var_5310: Tensor[(180), float32], %var_5332: Tensor[(8, 196), float64]) -> (Tensor[(5, 6, 3), float64], Tensor[(5, 6, 3), float64], Tensor[(11, 14, 12), float32], Tensor[(42), float32], Tensor[(896), bool], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(9, 15, 1), float64], Tensor[(896), bool], Tensor[(845), int64], Tensor[(180), float32], Tensor[(8, 196), uint32], Tensor[(8, 196), float32], Tensor[(11, 14, 12), float32]) {
  %739 = cast(%var_5257, dtype="float64") /* ty=Tensor[(5, 6, 3), float64] */;
  %740 = shape_of(%var_5256, dtype="int32") /* ty=Tensor[(3), int32] */;
  %741 = cast(%var_5256, dtype="float64") /* ty=Tensor[(5, 6, 3), float64] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %743 = cast(%var_5257, dtype="float64") /* ty=Tensor[(5, 6, 3), float64] */;
  %744 = cast(meta[relay.Constant][65] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %745 = cast(%var_5280, dtype="int8") /* ty=int8 */;
  %746 = cast(%var_5281, dtype="bool") /* ty=Tensor[(896), bool] */;
  %747 = reshape(%744, newshape=[14, 3, 1]) /* ty=Tensor[(14, 3, 1), float32] */;
  %748 = reshape(%745, newshape=[]) /* ty=int8 */;
  %749 = reshape(%746, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %750 = @func_4201(%747, %748, %749) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(4, 9, 2), float64], Tensor[(72), float64], Tensor[(7, 8, 12), int32], int8, Tensor[(672), int8], Tensor[(180, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(14, 3, 1), float32], Tensor[(14, 3, 1), float32]) */;
  %751 = cast(meta[relay.Constant][66] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %752 = reshape(%751, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %753 = cast(meta[relay.Constant][67] /* ty=Tensor[(8, 196), int8] */, dtype="int8") /* ty=Tensor[(8, 196), int8] */;
  %754 = reshape(%753, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), int8] */;
  %755 = @func_534(%754) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */;
  %756 = cast(%var_5309, dtype="int64") /* ty=Tensor[(845), int64] */;
  %757 = cast(%var_5310, dtype="float32") /* ty=Tensor[(180), float32] */;
  %758 = cast(meta[relay.Constant][67] /* ty=Tensor[(8, 196), int8] */, dtype="int8") /* ty=Tensor[(8, 196), int8] */;
  %759 = reshape(%756, newshape=[5, 13, 13]) /* ty=Tensor[(5, 13, 13), int64] */;
  %760 = reshape(%757, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %761 = reshape(%758, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
  %762 = @func_1259(%759, %760, %761) /* ty=(Tensor[(5, 13, 13), bool], Tensor[(15, 4, 3), float32], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(1568), int8]) */;
  %763 = cast(meta[relay.Constant][67] /* ty=Tensor[(8, 196), int8] */, dtype="float64") /* ty=Tensor[(8, 196), float64] */;
  %764 = tan(%763) /* ty=Tensor[(8, 196), float64] */;
  %765 = cast(%764, dtype="float64") /* ty=Tensor[(8, 196), float64] */;
  %766 = log(%765) /* ty=Tensor[(8, 196), float64] */;
  %767 = cast(%var_5332, dtype="uint32") /* ty=Tensor[(8, 196), uint32] */;
  %768 = shape_of(%766, dtype="int32") /* ty=Tensor[(2), int32] */;
  %769 = cast(%766, dtype="uint32") /* ty=Tensor[(8, 196), uint32] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %771 = cast(meta[relay.Constant][67] /* ty=Tensor[(8, 196), int8] */, dtype="int8") /* ty=Tensor[(8, 196), int8] */;
  %772 = cast(%var_5280, dtype="int8") /* ty=int8 */;
  %773 = left_shift(%771, %772) /* ty=Tensor[(8, 196), int8] */;
  %774 = cast(%773, dtype="float32") /* ty=Tensor[(8, 196), float32] */;
  %775 = shape_of(%766, dtype="int32") /* ty=Tensor[(2), int32] */;
  %776 = cast(%766, dtype="float32") /* ty=Tensor[(8, 196), float32] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %778 = floor_mod(%776, %777) /* ty=Tensor[(8, 196), float32] */;
  %779 = cast(meta[relay.Constant][68] /* ty=Tensor[(8, 196), float32] */, dtype="float32") /* ty=Tensor[(8, 196), float32] */;
  %780 = shape_of(%778, dtype="int32") /* ty=Tensor[(2), int32] */;
  %781 = cast(%778, dtype="float32") /* ty=Tensor[(8, 196), float32] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %783 = divide(%741, %742) /* ty=Tensor[(5, 6, 3), float64] */;
  %784 = asinh(%743) /* ty=Tensor[(5, 6, 3), float64] */;
  %785 = %750.0;
  %786 = @func_2208(%752) /* ty=Tensor[(12, 2, 10), float64] */;
  %787 = %755.1;
  %788 = %762.4;
  %789 = multiply(%769, %770) /* ty=Tensor[(8, 196), uint32] */;
  %790 = mod(%781, %782) /* ty=Tensor[(8, 196), float32] */;
  %791 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  (%783, %784, %785, meta[relay.Constant][65] /* ty=Tensor[(42), float32] */, %var_5281, %786, meta[relay.Constant][66] /* ty=Tensor[(240), float64] */, %787, %788, %var_5309, %var_5310, %789, %790, %791)
}

def @func_9867(%var_9835: Tensor[(896), bool]) -> (Tensor[(11, 14, 12), float32], Tensor[(210, 1), float32], Tensor[(4, 392), int8], Tensor[(630), float32], Tensor[(11, 14, 12), float32], Tensor[(9, 15, 896), bool], Tensor[(7, 8, 12), bool], Tensor[(180), float32]) {
  %792 = cast(meta[relay.Constant][69] /* ty=Tensor[(4, 392), int8] */, dtype="int8") /* ty=Tensor[(4, 392), int8] */;
  %793 = cast(%var_9835, dtype="bool") /* ty=Tensor[(896), bool] */;
  %794 = reshape(%793, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %795 = @func_7938(%794) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(896), bool], Tensor[(9, 15, 1), float64], Tensor[(1, 135), float64]) */;
  %796 = %795.4;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(9, 15, 1), float64] */;
  %798 = cast(%var_9835, dtype="bool") /* ty=Tensor[(896), bool] */;
  %799 = cast(meta[relay.Constant][70] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %800 = reshape(%792, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
  %801 = reshape(%797, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %802 = reshape(%798, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %803 = reshape(%799, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %804 = @func_7998(%800, %801, %802, %803) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(135), int32], Tensor[(1, 135), float64], Tensor[(896), bool], Tensor[(15, 3, 14), bool], Tensor[(210, 1), float32], Tensor[(630), float32]) */;
  %805 = @func_5732() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %806 = cast(%796, dtype="bool") /* ty=Tensor[(9, 15, 1), bool] */;
  %807 = cast(%var_9835, dtype="bool") /* ty=Tensor[(896), bool] */;
  %808 = cast(meta[relay.Constant][71] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %809 = reshape(%808, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %810 = @func_4619(%809) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(7, 8, 12), bool], int8, Tensor[(180), float32], Tensor[(336, 2), float64]) */;
  %811 = @func_6490() /* ty=Tensor[(11, 14, 12), float32] */;
  %812 = %804.6;
  %813 = %805.0;
  %814 = less_equal(%806, %807) /* ty=Tensor[(9, 15, 896), bool] */;
  %815 = %810.1;
  (%811, %812, meta[relay.Constant][69] /* ty=Tensor[(4, 392), int8] */, meta[relay.Constant][70] /* ty=Tensor[(630), float32] */, %813, %814, %815, meta[relay.Constant][71] /* ty=Tensor[(180), float32] */)
}

def @func_7502(%var_7499: int8) -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], int8, Tensor[(896), bool]) {
  %816 = @func_6924() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %817 = cast(%var_7499, dtype="int8") /* ty=int8 */;
  %818 = cast(meta[relay.Constant][72] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
  %819 = reshape(%817, newshape=[]) /* ty=int8 */;
  %820 = reshape(%818, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %821 = @func_7401(%819, %820) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(42), float32], Tensor[(13, 65), int64], Tensor[(180), float32], int8, Tensor[(896), bool]) */;
  %822 = %816.0;
  %823 = %821.0;
  (%822, %823, %var_7499, meta[relay.Constant][72] /* ty=Tensor[(896), bool] */)
}

def @func_6233() -> Tensor[(11, 14, 12), float32] {
  @func_6173() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_9540() -> (Tensor[(11, 14, 12), float32], Tensor[(15, 3, 14), bool], Tensor[(35, 6), float32], Tensor[(630, 1), float32]) {
  %824 = @func_7563() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %825 = cast(meta[relay.Constant][73] /* ty=Tensor[(35, 6), float32] */, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
  %826 = cast(meta[relay.Constant][74] /* ty=Tensor[(630, 1), float32] */, dtype="float32") /* ty=Tensor[(630, 1), float32] */;
  %827 = reshape(%825, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), float32] */;
  %828 = reshape(%826, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), float32] */;
  %829 = %824.0;
  %830 = @func_1652(%827, %828) /* ty=Tensor[(15, 3, 14), bool] */;
  (%829, %830, meta[relay.Constant][73] /* ty=Tensor[(35, 6), float32] */, meta[relay.Constant][74] /* ty=Tensor[(630, 1), float32] */)
}

def @func_9933() -> Tensor[(11, 14, 12), float32] {
  @func_8929() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_8929() -> Tensor[(11, 14, 12), float32] {
  @func_5625() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_9002(%var_8961: Tensor[(12, 4, 5), float64], %var_8988: Tensor[(896), bool], %var_8997: Tensor[(864), bool]) -> (Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32], int8, Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(864), bool], Tensor[(12, 4, 5), int64]) {
  %831 = cast(meta[relay.Constant][75] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %832 = cast(%var_8988, dtype="bool") /* ty=Tensor[(896), bool] */;
  %833 = reshape(%831, newshape=[]) /* ty=int8 */;
  %834 = reshape(%832, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %835 = @func_7401(%833, %834) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(42), float32], Tensor[(13, 65), int64], Tensor[(180), float32], int8, Tensor[(896), bool]) */;
  %836 = cast(%var_8997, dtype="bool") /* ty=Tensor[(864), bool] */;
  %837 = cast(%var_8997, dtype="bool") /* ty=Tensor[(864), bool] */;
  %838 = cast(%var_8988, dtype="bool") /* ty=Tensor[(896), bool] */;
  %839 = reshape(%836, newshape=[6, 12, 12]) /* ty=Tensor[(6, 12, 12), bool] */;
  %840 = reshape(%837, newshape=[6, 12, 12]) /* ty=Tensor[(6, 12, 12), bool] */;
  %841 = reshape(%838, newshape=[2, 448]) /* ty=Tensor[(2, 448), bool] */;
  %842 = @func_7786(%839, %840, %841) /* ty=(Tensor[(6, 12, 12), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(28, 32), bool], Tensor[(11, 14, 12), float32], Tensor[(2, 448), int16]) */;
  %843 = cast(%var_8961, dtype="float64") /* ty=Tensor[(12, 4, 5), float64] */;
  %844 = sinh(%843) /* ty=Tensor[(12, 4, 5), float64] */;
  %845 = cast(%844, dtype="int8") /* ty=Tensor[(12, 4, 5), int8] */;
  %846 = shape_of(%var_8961, dtype="int32") /* ty=Tensor[(3), int32] */;
  %847 = cast(%var_8961, dtype="int8") /* ty=Tensor[(12, 4, 5), int8] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %849 = left_shift(%847, %848) /* ty=Tensor[(12, 4, 5), int8] */;
  %850 = cast(%849, dtype="uint32") /* ty=Tensor[(12, 4, 5), uint32] */;
  %851 = shape_of(%844, dtype="int32") /* ty=Tensor[(3), int32] */;
  %852 = cast(%844, dtype="uint32") /* ty=Tensor[(12, 4, 5), uint32] */;
  %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %854 = bitwise_xor(%852, %853) /* ty=Tensor[(12, 4, 5), uint32] */;
  %855 = cast(%844, dtype="int64") /* ty=Tensor[(12, 4, 5), int64] */;
  %856 = shape_of(%854, dtype="int32") /* ty=Tensor[(3), int32] */;
  %857 = cast(%854, dtype="int64") /* ty=Tensor[(12, 4, 5), int64] */;
  %858 = dyn.reshape(%855, %856, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %859 = @func_5249() /* ty=Tensor[(11, 14, 12), bool] */;
  %860 = %835.0;
  %861 = %842.2;
  %862 = maximum(%857, %858) /* ty=Tensor[(12, 4, 5), int64] */;
  (%859, %860, meta[relay.Constant][75] /* ty=int8 */, %var_8988, %861, %var_8997, %862)
}

def @func_6048() -> Tensor[(11, 14, 12), float32] {
  %863 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %863.0
}

def @func_7019(%var_6995: Tensor[(1, 135), float64], %var_7001: Tensor[(26), int16]) -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(105, 2), float32], Tensor[(1, 135), float64], Tensor[(210), float32], Tensor[(70, 9), float32], Tensor[(26), float64]) {
  %864 = @func_5240() /* ty=(Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) */;
  %865 = cast(meta[relay.Constant][76] /* ty=Tensor[(26), int16] */, dtype="int16") /* ty=Tensor[(26), int16] */;
  %866 = cast(%var_6995, dtype="float64") /* ty=Tensor[(1, 135), float64] */;
  %867 = cast(meta[relay.Constant][77] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %868 = cast(meta[relay.Constant][78] /* ty=Tensor[(70, 9), float32] */, dtype="float32") /* ty=Tensor[(70, 9), float32] */;
  %869 = reshape(%865, newshape=[2, 13, 1]) /* ty=Tensor[(2, 13, 1), int16] */;
  %870 = reshape(%866, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %871 = reshape(%867, newshape=[105, 2]) /* ty=Tensor[(105, 2), float32] */;
  %872 = reshape(%868, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %873 = @func_2366(%869, %870, %871, %872) /* ty=(Tensor[(180), float32], Tensor[(1440, 2), float64], Tensor[(180), float32], Tensor[(9, 15, 1), float64], Tensor[(15, 3, 14), bool], Tensor[(105, 2), float32], Tensor[(630), float32], Tensor[(2, 13, 135), float64]) */;
  %874 = cast(%var_7001, dtype="bool") /* ty=Tensor[(26), bool] */;
  %875 = shape_of(meta[relay.Constant][76] /* ty=Tensor[(26), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %876 = cast(meta[relay.Constant][76] /* ty=Tensor[(26), int16] */, dtype="bool") /* ty=Tensor[(26), bool] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?), bool] */;
  %878 = greater_equal(%876, %877) /* ty=Tensor[(26), bool] */;
  %879 = cast(%878, dtype="float64") /* ty=Tensor[(26), float64] */;
  %880 = %864.1;
  %881 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %882 = @func_6490() /* ty=Tensor[(11, 14, 12), float32] */;
  %883 = %873.5;
  %884 = log10(%879) /* ty=Tensor[(26), float64] */;
  (%880, %881, %882, %883, %var_6995, meta[relay.Constant][77] /* ty=Tensor[(210), float32] */, meta[relay.Constant][78] /* ty=Tensor[(70, 9), float32] */, %884)
}

def @func_7309() -> (Tensor[(11, 14, 12), float32],) {
  %885 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %886 = %885.0;
  %887 = cast(%886, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %888 = sin(%887) /* ty=Tensor[(11, 14, 12), float32] */;
  (%888,)
}

def @func_8638() -> Tensor[(7, 15, 12), uint8] {
  %889 = cast(meta[relay.Constant][80] /* ty=Tensor[(7, 15, 12), uint8] */, dtype="uint8") /* ty=Tensor[(7, 15, 12), uint8] */;
  %890 = shape_of(meta[relay.Constant][79] /* ty=Tensor[(7, 15, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %891 = cast(meta[relay.Constant][79] /* ty=Tensor[(7, 15, 12), uint8] */, dtype="uint8") /* ty=Tensor[(7, 15, 12), uint8] */;
  %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  logical_xor(%891, %892) /* ty=Tensor[(7, 15, 12), uint8] */
}

def @func_6061() -> Tensor[(11, 14, 12), float32] {
  @func_6048() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_7998(%var_7973: Tensor[(1568), int8], %var_7975: Tensor[(135), float64], %var_7984: Tensor[(896), bool], %var_7988: Tensor[(630), float32]) -> (Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(135), int32], Tensor[(1, 135), float64], Tensor[(896), bool], Tensor[(15, 3, 14), bool], Tensor[(210, 1), float32], Tensor[(630), float32]) {
  %893 = @func_7563() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %894 = cast(%var_7973, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %895 = reshape(%894, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), int8] */;
  %896 = @func_534(%895) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */;
  %897 = %896.2;
  %898 = cast(%var_7975, dtype="int32") /* ty=Tensor[(135), int32] */;
  %899 = shape_of(%897, dtype="int32") /* ty=Tensor[(1), int32] */;
  %900 = cast(%897, dtype="int32") /* ty=Tensor[(135), int32] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?), int32] */;
  %902 = cast(%var_7984, dtype="bool") /* ty=Tensor[(896), bool] */;
  %903 = reshape(%902, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %904 = @func_7938(%903) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(896), bool], Tensor[(9, 15, 1), float64], Tensor[(1, 135), float64]) */;
  %905 = cast(meta[relay.Constant][81] /* ty=Tensor[(210, 1), float32] */, dtype="float32") /* ty=Tensor[(210, 1), float32] */;
  %906 = cast(%var_7988, dtype="float32") /* ty=Tensor[(630), float32] */;
  %907 = reshape(%905, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), float32] */;
  %908 = reshape(%906, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), float32] */;
  %909 = %893.0;
  %910 = bitwise_and(%900, %901) /* ty=Tensor[(135), int32] */;
  %911 = %904.5;
  %912 = @func_1652(%907, %908) /* ty=Tensor[(15, 3, 14), bool] */;
  (%909, %var_7973, %910, %911, %var_7984, %912, meta[relay.Constant][81] /* ty=Tensor[(210, 1), float32] */, %var_7988)
}

def @func_9438() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), bool]) {
  %913 = @func_8171() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
  %914 = %913.0;
  %915 = @func_5249() /* ty=Tensor[(11, 14, 12), bool] */;
  (%914, %915)
}

def @func_9607(%var_9583: Tensor[(1568), int8]) -> (Tensor[(11, 14, 12), float32], Tensor[(16, 7, 14), int8], Tensor[(1568), int8], Tensor[(11, 14, 12), float32]) {
  %916 = cast(%var_9583, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %917 = reshape(%916, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), int8] */;
  %918 = @func_534(%917) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */;
  %919 = %918.0;
  %920 = cast(%919, dtype="int8") /* ty=Tensor[(16, 7, 14), int8] */;
  %921 = reshape(%920, newshape=[1, 1568]) /* ty=Tensor[(1, 1568), int8] */;
  %922 = @func_5171(%921) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float64], Tensor[(1, 1568), int8]) */;
  %923 = @func_9554() /* ty=Tensor[(11, 14, 12), float32] */;
  %924 = %922.0;
  (%923, %919, %var_9583, %924)
}

def @func_4989(%var_4974: Tensor[(12, 10, 14), int16], %var_4984: Tensor[(60, 2), float64]) -> (Tensor[(12, 10, 14), bool], Tensor[(4, 3, 10), bool], Tensor[(60, 2), float64]) {
  %925 = cast(meta[relay.Constant][82] /* ty=Tensor[(1, 10, 14), int16] */, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
  %926 = cast(%var_4974, dtype="bool") /* ty=Tensor[(12, 10, 14), bool] */;
  %927 = cast(%var_4984, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
  %928 = cast(%var_4984, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
  %929 = reshape(%927, newshape=[4, 3, 10]) /* ty=Tensor[(4, 3, 10), float64] */;
  %930 = reshape(%928, newshape=[4, 3, 10]) /* ty=Tensor[(4, 3, 10), float64] */;
  %931 = @func_2871(%929, %930) /* ty=(Tensor[(4, 3, 10), bool],) */;
  %932 = less_equal(%925, %926) /* ty=Tensor[(12, 10, 14), bool] */;
  %933 = %931.0;
  (%932, %933, %var_4984)
}

def @func_7534() -> (Tensor[(11, 14, 12), float32],) {
  %934 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
  (%934,)
}

def @func_9962() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %935 = @func_5997() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %936 = @func_4925() /* ty=Tensor[(11, 14, 12), float32] */;
  %937 = %935.0;
  (%936, %937)
}

def @func_6775() -> (Tensor[(11, 14, 12), float32],) {
  %938 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  (%938,)
}

def @func_5249() -> Tensor[(11, 14, 12), bool] {
  %939 = @func_5240() /* ty=(Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) */;
  %939.0
}

def @func_9768() -> Tensor[(11, 14, 12), float32] {
  @func_8082() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_9695(%var_9654: uint32, %var_9655: Tensor[(6, 15, 1), uint32], %var_9666: Tensor[(6, 15, 8), uint32], %var_9673: Tensor[(630), float32]) -> (Tensor[(6, 15, 1), bool], int8, Tensor[(6, 15, 8), bool], Tensor[(15, 3, 14), bool], Tensor[(1, 210), float32], Tensor[(630), float32]) {
  %940 = cast(%var_9654, dtype="bool") /* ty=bool */;
  %941 = cast(%var_9655, dtype="bool") /* ty=Tensor[(6, 15, 1), bool] */;
  %942 = @func_8327() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(135), float64], Tensor[(1568), int8], int8, Tensor[(11, 14, 12), float32]) */;
  %943 = cast(%var_9655, dtype="bool") /* ty=Tensor[(6, 15, 1), bool] */;
  %944 = cast(%var_9666, dtype="bool") /* ty=Tensor[(6, 15, 8), bool] */;
  %945 = cast(meta[relay.Constant][83] /* ty=Tensor[(1, 210), float32] */, dtype="float32") /* ty=Tensor[(1, 210), float32] */;
  %946 = cast(%var_9673, dtype="float32") /* ty=Tensor[(630), float32] */;
  %947 = reshape(%945, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), float32] */;
  %948 = reshape(%946, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), float32] */;
  %949 = greater(%940, %941) /* ty=Tensor[(6, 15, 1), bool] */;
  %950 = %942.3;
  %951 = not_equal(%943, %944) /* ty=Tensor[(6, 15, 8), bool] */;
  %952 = @func_1652(%947, %948) /* ty=Tensor[(15, 3, 14), bool] */;
  (%949, %950, %951, %952, meta[relay.Constant][83] /* ty=Tensor[(1, 210), float32] */, %var_9673)
}

def @func_6827(%var_6784: uint32, %var_6799: Tensor[(30, 70), uint16]) -> (Tensor[(8, 2, 11), uint32], Tensor[(11, 14, 12), float32], Tensor[(15, 14, 10), bool], Tensor[(30, 70), uint16]) {
  %953 = cast(%var_6784, dtype="uint32") /* ty=uint32 */;
  %954 = cast(meta[relay.Constant][84] /* ty=Tensor[(8, 2, 11), uint32] */, dtype="uint32") /* ty=Tensor[(8, 2, 11), uint32] */;
  %955 = @func_5732() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %956 = cast(%var_6799, dtype="uint16") /* ty=Tensor[(30, 70), uint16] */;
  %957 = cast(%var_6799, dtype="uint16") /* ty=Tensor[(30, 70), uint16] */;
  %958 = reshape(%956, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), uint16] */;
  %959 = reshape(%957, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), uint16] */;
  %960 = bitwise_and(%953, %954) /* ty=Tensor[(8, 2, 11), uint32] */;
  %961 = %955.0;
  %962 = @func_5878(%958, %959) /* ty=Tensor[(15, 14, 10), bool] */;
  (%960, %961, %962, %var_6799)
}

def @func_9792() -> (Tensor[(12, 18), float64], Tensor[(11, 14, 12), float32]) {
  %963 = @func_9320() /* ty=(Tensor[(135), float64], Tensor[(2, 9, 12), float64], Tensor[(12, 18), float64]) */;
  %964 = @func_7428() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %965 = %963.2;
  %966 = %964.0;
  (%965, %966)
}

def @func_7658() -> (Tensor[(11, 14, 12), float32],) {
  %967 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %968 = %967.0;
  (%968,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9935() -> Tensor[(11, 14, 12), float32] {
  @func_9933() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_10028(%var_10025: Tensor[(12, 6, 13), int8], %var_10026: Tensor[(12, 6, 13), int8], %var_10027: Tensor[(896), bool]) -> (Tensor[(12, 6, 13), int8], int8, int8, Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %14 = fn (%var_9994: Tensor[(12, 6, 13), int8], %var_9995: Tensor[(12, 6, 13), int8], %var_10001: Tensor[(896), bool]) -> (Tensor[(12, 6, 13), int8], int8, int8, Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
    %0 = cast(%var_9995, dtype="int8") /* ty=Tensor[(12, 6, 13), int8] */;
    %1 = shape_of(%var_9994, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(%var_9994, dtype="int8") /* ty=Tensor[(12, 6, 13), int8] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %4 = cast(meta[relay.Constant][0] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %5 = cast(%var_10001, dtype="bool") /* ty=Tensor[(896), bool] */;
    %6 = reshape(%4, newshape=[]) /* ty=int8 */;
    %7 = reshape(%5, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %8 = @func_7401(%6, %7) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(42), float32], Tensor[(13, 65), int64], Tensor[(180), float32], int8, Tensor[(896), bool]) */;
    %9 = @func_7534() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %10 = minimum(%2, %3) /* ty=Tensor[(12, 6, 13), int8] */;
    %11 = %8.4;
    %12 = %9.0;
    %13 = @func_9554() /* ty=Tensor[(11, 14, 12), float32] */;
    (%10, %11, meta[relay.Constant][0] /* ty=int8 */, %var_10001, %12, %13)
  };
  %14(%var_10025, %var_10026, %var_10027) /* ty=(Tensor[(12, 6, 13), int8], int8, int8, Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */
}

def @func_9792() -> (Tensor[(12, 18), float64], Tensor[(11, 14, 12), float32]) {
  %15 = @func_9320() /* ty=(Tensor[(135), float64], Tensor[(2, 9, 12), float64], Tensor[(12, 18), float64]) */;
  %16 = @func_7428() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %17 = %15.2;
  %18 = %16.0;
  (%17, %18)
}

def @func_114(%var_77: Tensor[(9, 15, 1), float64]) -> Tensor[(9, 15, 1), float64] {
  %19 = cast(%var_77, dtype="float64") /* ty=Tensor[(9, 15, 1), float64] */;
  cos(%19) /* ty=Tensor[(9, 15, 1), float64] */
}

def @func_1655(%var_1653: Tensor[(15, 1, 14), float32], %var_1654: Tensor[(15, 3, 14), float32]) -> Tensor[(15, 3, 14), bool] {
  %22 = fn (%var_1640: Tensor[(15, 1, 14), float32], %var_1641: Tensor[(15, 3, 14), float32]) -> Tensor[(15, 3, 14), bool] {
    %20 = cast(%var_1640, dtype="bool") /* ty=Tensor[(15, 1, 14), bool] */;
    %21 = cast(%var_1641, dtype="bool") /* ty=Tensor[(15, 3, 14), bool] */;
    greater(%20, %21) /* ty=Tensor[(15, 3, 14), bool] */
  };
  %22(%var_1653, %var_1654) /* ty=Tensor[(15, 3, 14), bool] */
}

def @func_8171() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %23 = @func_6581() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %24 = %23.0;
  %25 = @func_6061() /* ty=Tensor[(11, 14, 12), float32] */;
  (%24, %25)
}

def @func_6434(%var_6432: Tensor[(11, 14, 12), float32], %var_6433: Tensor[(4, 420), int16]) -> (Tensor[(11, 14, 12), uint64], Tensor[(5, 4, 6), float64], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(12, 10, 14), bool], Tensor[(4, 420), int16]) {
  %47 = fn (%var_6404: Tensor[(11, 14, 12), float32], %var_6426: Tensor[(4, 420), int16]) -> (Tensor[(11, 14, 12), uint64], Tensor[(5, 4, 6), float64], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(12, 10, 14), bool], Tensor[(4, 420), int16]) {
    %26 = @func_4800() /* ty=Tensor[(11, 14, 12), float32] */;
    %27 = cast(%var_6404, dtype="uint64") /* ty=Tensor[(11, 14, 12), uint64] */;
    %28 = shape_of(%26, dtype="int32") /* ty=Tensor[(3), int32] */;
    %29 = cast(%26, dtype="uint64") /* ty=Tensor[(11, 14, 12), uint64] */;
    %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(60), uint32] */, dtype="uint32") /* ty=Tensor[(60), uint32] */;
    %32 = cast(meta[relay.Constant][2] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %33 = reshape(%31, newshape=[60]) /* ty=Tensor[(60), uint32] */;
    %34 = reshape(%32, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %35 = @func_4398(%33, %34) /* ty=(Tensor[(11, 14, 12), uint64], Tensor[(11, 14, 12), float32], Tensor[(896), bool], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(1568), int8], Tensor[(1568), int8], Tensor[(480), float64], Tensor[(845), int64], Tensor[(5, 4, 6), float64], Tensor[(120), uint16]) */;
    %36 = cast(meta[relay.Constant][3] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %37 = reshape(%36, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
    %38 = cast(%var_6426, dtype="int16") /* ty=Tensor[(4, 420), int16] */;
    %39 = %35.10;
    %40 = cast(%39, dtype="float64") /* ty=Tensor[(5, 4, 6), float64] */;
    %41 = reshape(%38, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), int16] */;
    %42 = reshape(%40, newshape=[60, 2]) /* ty=Tensor[(60, 2), float64] */;
    %43 = @func_4989(%41, %42) /* ty=(Tensor[(12, 10, 14), bool], Tensor[(4, 3, 10), bool], Tensor[(60, 2), float64]) */;
    %44 = logical_xor(%29, %30) /* ty=Tensor[(11, 14, 12), uint64] */;
    %45 = @func_2208(%37) /* ty=Tensor[(12, 2, 10), float64] */;
    %46 = %43.0;
    (%44, %39, meta[relay.Constant][1] /* ty=Tensor[(60), uint32] */, meta[relay.Constant][2] /* ty=Tensor[(180), float32] */, %45, meta[relay.Constant][3] /* ty=Tensor[(240), float64] */, %46, %var_6426)
  };
  %47(%var_6432, %var_6433) /* ty=(Tensor[(11, 14, 12), uint64], Tensor[(5, 4, 6), float64], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(12, 10, 14), bool], Tensor[(4, 420), int16]) */
}

def @func_8595() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %48 = @func_7309() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %49 = @func_6141() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %50 = %48.0;
  %51 = %49.0;
  (%50, %51)
}

def @func_6775() -> (Tensor[(11, 14, 12), float32],) {
  %52 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  (%52,)
}

def @func_537(%var_535: Tensor[(16, 7, 14), int8]) -> (Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) {
  @func_534(%var_535) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */
}

def @func_6905(%var_6903: Tensor[(11, 14, 12), float32]) -> (Tensor[(11, 14, 12), uint8],) {
  @func_6902(%var_6903) /* ty=(Tensor[(11, 14, 12), uint8],) */
}

def @func_7938(%var_7863: Tensor[(896), bool]) -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(896), bool], Tensor[(9, 15, 1), float64], Tensor[(1, 135), float64]) {
  %53 = @func_6610() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), uint64]) */;
  %54 = @func_6610() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), uint64]) */;
  %55 = cast(%var_7863, dtype="bool") /* ty=Tensor[(896), bool] */;
  %56 = reshape(%55, newshape=[28, 32]) /* ty=Tensor[(28, 32), bool] */;
  %57 = @func_5799(%56) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(15, 2, 16), float64], Tensor[(480), float64], Tensor[(845), int64], Tensor[(180), float32], Tensor[(1568), int8], Tensor[(60), uint32], Tensor[(28, 32), bool], Tensor[(1568), int8]) */;
  %58 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 135), float64] */, dtype="float64") /* ty=Tensor[(1, 135), float64] */;
  %59 = reshape(%58, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float64] */;
  %60 = %53.0;
  %61 = %54.0;
  %62 = %57.8;
  %63 = @func_114(%59) /* ty=Tensor[(9, 15, 1), float64] */;
  (%60, %61, %62, %var_7863, %63, meta[relay.Constant][4] /* ty=Tensor[(1, 135), float64] */)
}

def @func_9322() -> (Tensor[(135), float64], Tensor[(2, 9, 12), float64], Tensor[(12, 18), float64]) {
  @func_9320() /* ty=(Tensor[(135), float64], Tensor[(2, 9, 12), float64], Tensor[(12, 18), float64]) */
}

def @func_5360(%var_5353: Tensor[(5, 6, 3), float64], %var_5354: Tensor[(5, 6, 3), float64], %var_5355: int8, %var_5356: Tensor[(896), bool], %var_5357: Tensor[(845), int64], %var_5358: Tensor[(180), float32], %var_5359: Tensor[(8, 196), float64]) -> (Tensor[(5, 6, 3), float64], Tensor[(5, 6, 3), float64], Tensor[(11, 14, 12), float32], Tensor[(42), float32], Tensor[(896), bool], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(9, 15, 1), float64], Tensor[(896), bool], Tensor[(845), int64], Tensor[(180), float32], Tensor[(8, 196), uint32], Tensor[(8, 196), float32], Tensor[(11, 14, 12), float32]) {
  @func_5351(%var_5353, %var_5354, %var_5355, %var_5356, %var_5357, %var_5358, %var_5359) /* ty=(Tensor[(5, 6, 3), float64], Tensor[(5, 6, 3), float64], Tensor[(11, 14, 12), float32], Tensor[(42), float32], Tensor[(896), bool], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(9, 15, 1), float64], Tensor[(896), bool], Tensor[(845), int64], Tensor[(180), float32], Tensor[(8, 196), uint32], Tensor[(8, 196), float32], Tensor[(11, 14, 12), float32]) */
}

def @func_9769() -> Tensor[(11, 14, 12), float32] {
  %64 = fn () -> Tensor[(11, 14, 12), float32] {
    @func_8082() /* ty=Tensor[(11, 14, 12), float32] */
  };
  %64() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_7405(%var_7403: int8, %var_7404: Tensor[(896), bool]) -> (Tensor[(11, 14, 12), float32], Tensor[(42), float32], Tensor[(13, 65), int64], Tensor[(180), float32], int8, Tensor[(896), bool]) {
  @func_7401(%var_7403, %var_7404) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(42), float32], Tensor[(13, 65), int64], Tensor[(180), float32], int8, Tensor[(896), bool]) */
}

def @func_8107() -> (Tensor[(11, 14, 12), float32], Tensor[(56, 16), bool], Tensor[(6, 30), float32], Tensor[(896), bool], Tensor[(11, 14, 12), int32]) {
  %79 = fn () -> (Tensor[(11, 14, 12), float32], Tensor[(56, 16), bool], Tensor[(6, 30), float32], Tensor[(896), bool], Tensor[(11, 14, 12), int32]) {
    %65 = @func_7534() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %66 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 30), float32] */, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
    %67 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 30), float32] */, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
    %68 = cast(meta[relay.Constant][6] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
    %69 = reshape(%66, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), float32] */;
    %70 = reshape(%67, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), float32] */;
    %71 = reshape(%68, newshape=[56, 16]) /* ty=Tensor[(56, 16), bool] */;
    %72 = @func_214(%69, %70, %71) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(16, 7, 8), bool], Tensor[(56, 16), bool]) */;
    %73 = %65.0;
    %74 = cast(%73, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
    %75 = reshape(%74, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), float32] */;
    %76 = @func_5088(%75) /* ty=(Tensor[(11, 14, 12), int32], Tensor[(11, 14, 12), float32]) */;
    %77 = %72.2;
    %78 = %76.0;
    (%73, %77, meta[relay.Constant][5] /* ty=Tensor[(6, 30), float32] */, meta[relay.Constant][6] /* ty=Tensor[(896), bool] */, %78)
  };
  %79() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(56, 16), bool], Tensor[(6, 30), float32], Tensor[(896), bool], Tensor[(11, 14, 12), int32]) */
}

def @func_3344(%var_3311: uint16) -> (Tensor[(16, 8, 13), bool],) {
  %80 = cast(%var_3311, dtype="uint16") /* ty=uint16 */;
  %81 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 8, 13), uint16] */, dtype="uint16") /* ty=Tensor[(16, 8, 13), uint16] */;
  %82 = right_shift(%80, %81) /* ty=Tensor[(16, 8, 13), uint16] */;
  %83 = cast(%82, dtype="float64") /* ty=Tensor[(16, 8, 13), float64] */;
  %84 = log2(%83) /* ty=Tensor[(16, 8, 13), float64] */;
  %85 = cast(%84, dtype="float64") /* ty=Tensor[(16, 8, 13), float64] */;
  %86 = sin(%85) /* ty=Tensor[(16, 8, 13), float64] */;
  %87 = cast(%84, dtype="bool") /* ty=Tensor[(16, 8, 13), bool] */;
  %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%86, dtype="bool") /* ty=Tensor[(16, 8, 13), bool] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %91 = logical_or(%89, %90) /* ty=Tensor[(16, 8, 13), bool] */;
  (%91,)
}

def @func_4992(%var_4990: Tensor[(12, 10, 14), int16], %var_4991: Tensor[(60, 2), float64]) -> (Tensor[(12, 10, 14), bool], Tensor[(4, 3, 10), bool], Tensor[(60, 2), float64]) {
  %101 = fn (%var_4974: Tensor[(12, 10, 14), int16], %var_4984: Tensor[(60, 2), float64]) -> (Tensor[(12, 10, 14), bool], Tensor[(4, 3, 10), bool], Tensor[(60, 2), float64]) {
    %92 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 10, 14), int16] */, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
    %93 = cast(%var_4974, dtype="bool") /* ty=Tensor[(12, 10, 14), bool] */;
    %94 = cast(%var_4984, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
    %95 = cast(%var_4984, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
    %96 = reshape(%94, newshape=[4, 3, 10]) /* ty=Tensor[(4, 3, 10), float64] */;
    %97 = reshape(%95, newshape=[4, 3, 10]) /* ty=Tensor[(4, 3, 10), float64] */;
    %98 = @func_2871(%96, %97) /* ty=(Tensor[(4, 3, 10), bool],) */;
    %99 = less_equal(%92, %93) /* ty=Tensor[(12, 10, 14), bool] */;
    %100 = %98.0;
    (%99, %100, %var_4984)
  };
  %101(%var_4990, %var_4991) /* ty=(Tensor[(12, 10, 14), bool], Tensor[(4, 3, 10), bool], Tensor[(60, 2), float64]) */
}

def @func_9116(%var_9092: Tensor[(7, 11, 1), float64], %var_9101: Tensor[(1, 26), int16], %var_9102: Tensor[(1, 135), float64], %var_9103: Tensor[(210), float32]) -> (Tensor[(7, 11, ?), uint32], Tensor[(9, 15, 1), float64], Tensor[(1, 26), int16], Tensor[(1, 135), float64], Tensor[(210), float32], Tensor[(630, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool]) {
  %102 = cast(%var_9092, dtype="float64") /* ty=Tensor[(7, 11, 1), float64] */;
  %103 = erf(%102) /* ty=Tensor[(7, 11, 1), float64] */;
  %104 = cast(%103, dtype="uint32") /* ty=Tensor[(7, 11, 1), uint32] */;
  %105 = shape_of(%var_9092, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%var_9092, dtype="uint32") /* ty=Tensor[(7, 11, 1), uint32] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %108 = cast(%var_9101, dtype="int16") /* ty=Tensor[(1, 26), int16] */;
  %109 = cast(%var_9102, dtype="float64") /* ty=Tensor[(1, 135), float64] */;
  %110 = cast(%var_9103, dtype="float32") /* ty=Tensor[(210), float32] */;
  %111 = cast(meta[relay.Constant][9] /* ty=Tensor[(630, 1), float32] */, dtype="float32") /* ty=Tensor[(630, 1), float32] */;
  %112 = reshape(%108, newshape=[2, 13, 1]) /* ty=Tensor[(2, 13, 1), int16] */;
  %113 = reshape(%109, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %114 = reshape(%110, newshape=[105, 2]) /* ty=Tensor[(105, 2), float32] */;
  %115 = reshape(%111, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %116 = @func_2366(%112, %113, %114, %115) /* ty=(Tensor[(180), float32], Tensor[(1440, 2), float64], Tensor[(180), float32], Tensor[(9, 15, 1), float64], Tensor[(15, 3, 14), bool], Tensor[(105, 2), float32], Tensor[(630), float32], Tensor[(2, 13, 135), float64]) */;
  %117 = cast(meta[relay.Constant][10] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
  %118 = reshape(%117, newshape=[16, 7, 8]) /* ty=Tensor[(16, 7, 8), bool] */;
  %119 = @func_151(%118) /* ty=(Tensor[(16, 7, 8), bool], Tensor[(16, 7, 8), bool]) */;
  %120 = logical_xor(%106, %107) /* ty=Tensor[(7, 11, ?), uint32] */;
  %121 = %116.3;
  %122 = %119.1;
  (%120, %121, %var_9101, %var_9102, %var_9103, meta[relay.Constant][9] /* ty=Tensor[(630, 1), float32] */, %122, meta[relay.Constant][10] /* ty=Tensor[(896), bool] */)
}

def @func_6117(%var_6102: uint64, %var_6103: Tensor[(6, 7, 8), uint64]) -> (Tensor[(6, 7, 8), uint64],) {
  %123 = cast(%var_6102, dtype="uint64") /* ty=uint64 */;
  %124 = cast(%var_6103, dtype="uint64") /* ty=Tensor[(6, 7, 8), uint64] */;
  %125 = bitwise_or(%123, %124) /* ty=Tensor[(6, 7, 8), uint64] */;
  (%125,)
}

def @func_9794() -> (Tensor[(12, 18), float64], Tensor[(11, 14, 12), float32]) {
  @func_9792() /* ty=(Tensor[(12, 18), float64], Tensor[(11, 14, 12), float32]) */
}

def @main(%var_10213: Tensor[(3, 1, 2), float64]) -> (Tensor[(3, 1, 2), float64],) {
  %126 = cast(%var_10213, dtype="float64") /* ty=Tensor[(3, 1, 2), float64] */;
  %127 = atanh(%126) /* ty=Tensor[(3, 1, 2), float64] */;
  (%127,)
}

def @func_154(%var_152: Tensor[(16, 7, 8), bool]) -> (Tensor[(16, 7, 8), bool], Tensor[(16, 7, 8), bool]) {
  @func_151(%var_152) /* ty=(Tensor[(16, 7, 8), bool], Tensor[(16, 7, 8), bool]) */
}

def @func_8632() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  @func_8630() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */
}

def @func_9439() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), bool]) {
  %131 = fn () -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), bool]) {
    %128 = @func_8171() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
    %129 = %128.0;
    %130 = @func_5249() /* ty=Tensor[(11, 14, 12), bool] */;
    (%129, %130)
  };
  %131() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), bool]) */
}

def @func_8329() -> (Tensor[(11, 14, 12), float32], Tensor[(135), float64], Tensor[(1568), int8], int8, Tensor[(11, 14, 12), float32]) {
  @func_8327() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(135), float64], Tensor[(1568), int8], int8, Tensor[(11, 14, 12), float32]) */
}

def @func_3875() -> Tensor[(11, 14, 12), float32] {
  %133 = fn () -> Tensor[(11, 14, 12), float32] {
    %132 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
    log2(%132) /* ty=Tensor[(11, 14, 12), float32] */
  };
  %133() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_6924() -> (Tensor[(11, 14, 12), float32],) {
  %134 = @func_6233() /* ty=Tensor[(11, 14, 12), float32] */;
  (%134,)
}

def @func_7019(%var_6995: Tensor[(1, 135), float64], %var_7001: Tensor[(26), int16]) -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(105, 2), float32], Tensor[(1, 135), float64], Tensor[(210), float32], Tensor[(70, 9), float32], Tensor[(26), float64]) {
  %135 = @func_5240() /* ty=(Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) */;
  %136 = cast(meta[relay.Constant][12] /* ty=Tensor[(26), int16] */, dtype="int16") /* ty=Tensor[(26), int16] */;
  %137 = cast(%var_6995, dtype="float64") /* ty=Tensor[(1, 135), float64] */;
  %138 = cast(meta[relay.Constant][13] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %139 = cast(meta[relay.Constant][14] /* ty=Tensor[(70, 9), float32] */, dtype="float32") /* ty=Tensor[(70, 9), float32] */;
  %140 = reshape(%136, newshape=[2, 13, 1]) /* ty=Tensor[(2, 13, 1), int16] */;
  %141 = reshape(%137, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %142 = reshape(%138, newshape=[105, 2]) /* ty=Tensor[(105, 2), float32] */;
  %143 = reshape(%139, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %144 = @func_2366(%140, %141, %142, %143) /* ty=(Tensor[(180), float32], Tensor[(1440, 2), float64], Tensor[(180), float32], Tensor[(9, 15, 1), float64], Tensor[(15, 3, 14), bool], Tensor[(105, 2), float32], Tensor[(630), float32], Tensor[(2, 13, 135), float64]) */;
  %145 = cast(%var_7001, dtype="bool") /* ty=Tensor[(26), bool] */;
  %146 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(26), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %147 = cast(meta[relay.Constant][12] /* ty=Tensor[(26), int16] */, dtype="bool") /* ty=Tensor[(26), bool] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?), bool] */;
  %149 = greater_equal(%147, %148) /* ty=Tensor[(26), bool] */;
  %150 = cast(%149, dtype="float64") /* ty=Tensor[(26), float64] */;
  %151 = %135.1;
  %152 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %153 = @func_6490() /* ty=Tensor[(11, 14, 12), float32] */;
  %154 = %144.5;
  %155 = log10(%150) /* ty=Tensor[(26), float64] */;
  (%151, %152, %153, %154, %var_6995, meta[relay.Constant][13] /* ty=Tensor[(210), float32] */, meta[relay.Constant][14] /* ty=Tensor[(70, 9), float32] */, %155)
}

def @func_9399(%var_9397: Tensor[(1, 9, 2), int64], %var_9398: Tensor[(10, 9, 2), int64]) -> Tensor[(10, 9, 2), int64] {
  @func_9395(%var_9397, %var_9398) /* ty=Tensor[(10, 9, 2), int64] */
}

def @func_5901() -> (Tensor[(11, 14, 12), float32],) {
  %157 = fn () -> (Tensor[(11, 14, 12), float32],) {
    %156 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
    (%156,)
  };
  %157() /* ty=(Tensor[(11, 14, 12), float32],) */
}

def @func_7064() -> (Tensor[(11, 14, 12), float32],) {
  %160 = fn () -> (Tensor[(11, 14, 12), float32],) {
    %158 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %159 = %158.0;
    (%159,)
  };
  %160() /* ty=(Tensor[(11, 14, 12), float32],) */
}

def @func_7740(%var_7735: Tensor[(120), uint16]) -> (Tensor[(11, 14, 12), float32], Tensor[(5, 4, 6), uint16], Tensor[(120), uint16]) {
  %161 = @func_5992() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
  %162 = cast(%var_7735, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %163 = cast(%var_7735, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %164 = reshape(%162, newshape=[5, 4, 6]) /* ty=Tensor[(5, 4, 6), uint16] */;
  %165 = reshape(%163, newshape=[5, 4, 6]) /* ty=Tensor[(5, 4, 6), uint16] */;
  %166 = @func_3460(%164, %165) /* ty=(Tensor[(5, 4, 6), uint16], Tensor[(5, 4, 6), float64]) */;
  %167 = %161.0;
  %168 = %166.0;
  (%167, %168, %var_7735)
}

def @func_8518(%var_8515: Tensor[(9, 13, 15), float32]) -> Tensor[(9, 13, 15), float32] {
  %169 = cast(%var_8515, dtype="float32") /* ty=Tensor[(9, 13, 15), float32] */;
  exp(%169) /* ty=Tensor[(9, 13, 15), float32] */
}

def @func_9320() -> (Tensor[(135), float64], Tensor[(2, 9, 12), float64], Tensor[(12, 18), float64]) {
  %170 = @func_8327() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(135), float64], Tensor[(1568), int8], int8, Tensor[(11, 14, 12), float32]) */;
  %171 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 18), float64] */, dtype="float64") /* ty=Tensor[(12, 18), float64] */;
  %172 = reshape(%171, newshape=[2, 9, 12]) /* ty=Tensor[(2, 9, 12), float64] */;
  %173 = %170.1;
  %174 = @func_7615(%172) /* ty=Tensor[(2, 9, 12), float64] */;
  (%173, %174, meta[relay.Constant][15] /* ty=Tensor[(12, 18), float64] */)
}

def @func_4091() -> Tensor[(11, 14, 12), float32] {
  @func_4089() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_219(%var_216: Tensor[(15, 4, 3), float32], %var_217: Tensor[(15, 4, 3), float32], %var_218: Tensor[(56, 16), bool]) -> (Tensor[(15, 4, 3), float32], Tensor[(16, 7, 8), bool], Tensor[(56, 16), bool]) {
  @func_214(%var_216, %var_217, %var_218) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(16, 7, 8), bool], Tensor[(56, 16), bool]) */
}

def @func_5999() -> (Tensor[(11, 14, 12), float32],) {
  @func_5997() /* ty=(Tensor[(11, 14, 12), float32],) */
}

def @func_9478() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %178 = fn () -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
    %175 = @func_6775() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %176 = %175.0;
    %177 = @func_6490() /* ty=Tensor[(11, 14, 12), float32] */;
    (%176, %177)
  };
  %178() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */
}

def @func_6050() -> Tensor[(11, 14, 12), float32] {
  @func_6048() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_2825(%var_2823: Tensor[(4, 9, 2), float64]) -> Tensor[(4, 9, 2), float64] {
  @func_2822(%var_2823) /* ty=Tensor[(4, 9, 2), float64] */
}

def @func_8481() -> Tensor[(11, 14, 12), float32] {
  @func_8479() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_8327() -> (Tensor[(11, 14, 12), float32], Tensor[(135), float64], Tensor[(1568), int8], int8, Tensor[(11, 14, 12), float32]) {
  %179 = cast(meta[relay.Constant][16] /* ty=Tensor[(1568), int8] */, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %180 = cast(meta[relay.Constant][17] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %181 = reshape(%179, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
  %182 = reshape(%180, newshape=[]) /* ty=int8 */;
  %183 = @func_4459(%181, %182) /* ty=(Tensor[(11, 14, 12), float64], Tensor[(1568), int8], Tensor[(135), float64], Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(42), float32], int8, Tensor[(896), bool]) */;
  %184 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
  %185 = cast(%184, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %186 = atanh(%185) /* ty=Tensor[(11, 14, 12), float32] */;
  %187 = cast(%186, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %188 = @func_5625() /* ty=Tensor[(11, 14, 12), float32] */;
  %189 = %183.2;
  %190 = log10(%187) /* ty=Tensor[(11, 14, 12), float32] */;
  (%188, %189, meta[relay.Constant][16] /* ty=Tensor[(1568), int8] */, meta[relay.Constant][17] /* ty=int8 */, %190)
}

def @func_7536() -> (Tensor[(11, 14, 12), float32],) {
  @func_7534() /* ty=(Tensor[(11, 14, 12), float32],) */
}

def @func_8440() -> Tensor[(11, 14, 12), float32] {
  %191 = fn () -> Tensor[(11, 14, 12), float32] {
    @func_4800() /* ty=Tensor[(11, 14, 12), float32] */
  };
  %191() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_5249() -> Tensor[(11, 14, 12), bool] {
  %192 = @func_5240() /* ty=(Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) */;
  %192.0
}

def @func_7617(%var_7616: Tensor[(2, 9, 12), float64]) -> Tensor[(2, 9, 12), float64] {
  %194 = fn (%var_7602: Tensor[(2, 9, 12), float64]) -> Tensor[(2, 9, 12), float64] {
    %193 = cast(%var_7602, dtype="float64") /* ty=Tensor[(2, 9, 12), float64] */;
    atanh(%193) /* ty=Tensor[(2, 9, 12), float64] */
  };
  %194(%var_7616) /* ty=Tensor[(2, 9, 12), float64] */
}

def @func_5801(%var_5800: Tensor[(28, 32), bool]) -> (Tensor[(11, 14, 12), float32], Tensor[(15, 2, 16), float64], Tensor[(480), float64], Tensor[(845), int64], Tensor[(180), float32], Tensor[(1568), int8], Tensor[(60), uint32], Tensor[(28, 32), bool], Tensor[(1568), int8]) {
  %214 = fn (%var_5786: Tensor[(28, 32), bool]) -> (Tensor[(11, 14, 12), float32], Tensor[(15, 2, 16), float64], Tensor[(480), float64], Tensor[(845), int64], Tensor[(180), float32], Tensor[(1568), int8], Tensor[(60), uint32], Tensor[(28, 32), bool], Tensor[(1568), int8]) {
    %195 = cast(meta[relay.Constant][18] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
    %196 = cast(meta[relay.Constant][19] /* ty=Tensor[(845), int64] */, dtype="int64") /* ty=Tensor[(845), int64] */;
    %197 = cast(meta[relay.Constant][20] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %198 = reshape(%195, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
    %199 = reshape(%196, newshape=[845]) /* ty=Tensor[(845), int64] */;
    %200 = reshape(%197, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %201 = @func_3230(%198, %199, %200) /* ty=(Tensor[(15, 2, 16), float64], Tensor[(5, 13, 13), bool], Tensor[(845), int64], Tensor[(180), float32], Tensor[(1568), int8]) */;
    %202 = cast(meta[relay.Constant][21] /* ty=Tensor[(60), uint32] */, dtype="uint32") /* ty=Tensor[(60), uint32] */;
    %203 = cast(meta[relay.Constant][20] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %204 = cast(%var_5786, dtype="bool") /* ty=Tensor[(28, 32), bool] */;
    %205 = cast(meta[relay.Constant][22] /* ty=Tensor[(1568), int8] */, dtype="int8") /* ty=Tensor[(1568), int8] */;
    %206 = reshape(%202, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), uint32] */;
    %207 = reshape(%203, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %208 = reshape(%204, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %209 = reshape(%205, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
    %210 = @func_690(%206, %207, %208, %209) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 7, 14), int8], Tensor[(1568), int8], Tensor[(2, 2, 15), int16]) */;
    %211 = @func_4925() /* ty=Tensor[(11, 14, 12), float32] */;
    %212 = %201.0;
    %213 = %210.4;
    (%211, %212, meta[relay.Constant][18] /* ty=Tensor[(480), float64] */, meta[relay.Constant][19] /* ty=Tensor[(845), int64] */, meta[relay.Constant][20] /* ty=Tensor[(180), float32] */, %213, meta[relay.Constant][21] /* ty=Tensor[(60), uint32] */, %var_5786, meta[relay.Constant][22] /* ty=Tensor[(1568), int8] */)
  };
  %214(%var_5800) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(15, 2, 16), float64], Tensor[(480), float64], Tensor[(845), int64], Tensor[(180), float32], Tensor[(1568), int8], Tensor[(60), uint32], Tensor[(28, 32), bool], Tensor[(1568), int8]) */
}

def @func_7941(%var_7939: Tensor[(896), bool]) -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(896), bool], Tensor[(9, 15, 1), float64], Tensor[(1, 135), float64]) {
  @func_7938(%var_7939) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(896), bool], Tensor[(9, 15, 1), float64], Tensor[(1, 135), float64]) */
}

def @func_9554() -> Tensor[(11, 14, 12), float32] {
  @func_6048() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_9695(%var_9654: uint32, %var_9655: Tensor[(6, 15, 1), uint32], %var_9666: Tensor[(6, 15, 8), uint32], %var_9673: Tensor[(630), float32]) -> (Tensor[(6, 15, 1), bool], int8, Tensor[(6, 15, 8), bool], Tensor[(15, 3, 14), bool], Tensor[(1, 210), float32], Tensor[(630), float32]) {
  %215 = cast(%var_9654, dtype="bool") /* ty=bool */;
  %216 = cast(%var_9655, dtype="bool") /* ty=Tensor[(6, 15, 1), bool] */;
  %217 = @func_8327() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(135), float64], Tensor[(1568), int8], int8, Tensor[(11, 14, 12), float32]) */;
  %218 = cast(%var_9655, dtype="bool") /* ty=Tensor[(6, 15, 1), bool] */;
  %219 = cast(%var_9666, dtype="bool") /* ty=Tensor[(6, 15, 8), bool] */;
  %220 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 210), float32] */, dtype="float32") /* ty=Tensor[(1, 210), float32] */;
  %221 = cast(%var_9673, dtype="float32") /* ty=Tensor[(630), float32] */;
  %222 = reshape(%220, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), float32] */;
  %223 = reshape(%221, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), float32] */;
  %224 = greater(%215, %216) /* ty=Tensor[(6, 15, 1), bool] */;
  %225 = %217.3;
  %226 = not_equal(%218, %219) /* ty=Tensor[(6, 15, 8), bool] */;
  %227 = @func_1652(%222, %223) /* ty=Tensor[(15, 3, 14), bool] */;
  (%224, %225, %226, %227, meta[relay.Constant][23] /* ty=Tensor[(1, 210), float32] */, %var_9673)
}

def @func_9122(%var_9118: Tensor[(7, 11, 1), float64], %var_9119: Tensor[(1, 26), int16], %var_9120: Tensor[(1, 135), float64], %var_9121: Tensor[(210), float32]) -> (Tensor[(7, 11, ?), uint32], Tensor[(9, 15, 1), float64], Tensor[(1, 26), int16], Tensor[(1, 135), float64], Tensor[(210), float32], Tensor[(630, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool]) {
  @func_9116(%var_9118, %var_9119, %var_9120, %var_9121) /* ty=(Tensor[(7, 11, ?), uint32], Tensor[(9, 15, 1), float64], Tensor[(1, 26), int16], Tensor[(1, 135), float64], Tensor[(210), float32], Tensor[(630, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool]) */
}

def @func_5445() -> (Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float64], Tensor[(1568), int8]) {
  @func_5443() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float64], Tensor[(1568), int8]) */
}

def @func_9975() -> (Tensor[(11, 14, 12), float32],) {
  %228 = @func_6061() /* ty=Tensor[(11, 14, 12), float32] */;
  (%228,)
}

def @func_9609(%var_9608: Tensor[(1568), int8]) -> (Tensor[(11, 14, 12), float32], Tensor[(16, 7, 14), int8], Tensor[(1568), int8], Tensor[(11, 14, 12), float32]) {
  %238 = fn (%var_9583: Tensor[(1568), int8]) -> (Tensor[(11, 14, 12), float32], Tensor[(16, 7, 14), int8], Tensor[(1568), int8], Tensor[(11, 14, 12), float32]) {
    %229 = cast(%var_9583, dtype="int8") /* ty=Tensor[(1568), int8] */;
    %230 = reshape(%229, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), int8] */;
    %231 = @func_534(%230) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */;
    %232 = %231.0;
    %233 = cast(%232, dtype="int8") /* ty=Tensor[(16, 7, 14), int8] */;
    %234 = reshape(%233, newshape=[1, 1568]) /* ty=Tensor[(1, 1568), int8] */;
    %235 = @func_5171(%234) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float64], Tensor[(1, 1568), int8]) */;
    %236 = @func_9554() /* ty=Tensor[(11, 14, 12), float32] */;
    %237 = %235.0;
    (%236, %232, %var_9583, %237)
  };
  %238(%var_9608) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(16, 7, 14), int8], Tensor[(1568), int8], Tensor[(11, 14, 12), float32]) */
}

def @func_4018() -> (Tensor[(11, 14, 12), float32],) {
  %240 = fn () -> (Tensor[(11, 14, 12), float32],) {
    %239 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
    (%239,)
  };
  %240() /* ty=(Tensor[(11, 14, 12), float32],) */
}

def @func_117(%var_115: Tensor[(9, 15, 1), float64]) -> Tensor[(9, 15, 1), float64] {
  @func_114(%var_115) /* ty=Tensor[(9, 15, 1), float64] */
}

def @func_695(%var_691: Tensor[(2, 2, 15), uint32], %var_692: Tensor[(180), float32], %var_693: Tensor[(896), bool], %var_694: Tensor[(1568), int8]) -> (Tensor[(15, 4, 3), float32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 7, 14), int8], Tensor[(1568), int8], Tensor[(2, 2, 15), int16]) {
  %263 = fn (%var_647: Tensor[(2, 2, 15), uint32], %var_654: Tensor[(180), float32], %var_655: Tensor[(896), bool], %var_659: Tensor[(1568), int8]) -> (Tensor[(15, 4, 3), float32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 7, 14), int8], Tensor[(1568), int8], Tensor[(2, 2, 15), int16]) {
    %241 = cast(%var_654, dtype="float32") /* ty=Tensor[(180), float32] */;
    %242 = cast(%var_654, dtype="float32") /* ty=Tensor[(180), float32] */;
    %243 = cast(%var_655, dtype="bool") /* ty=Tensor[(896), bool] */;
    %244 = reshape(%241, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), float32] */;
    %245 = reshape(%242, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), float32] */;
    %246 = reshape(%243, newshape=[56, 16]) /* ty=Tensor[(56, 16), bool] */;
    %247 = @func_214(%244, %245, %246) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(16, 7, 8), bool], Tensor[(56, 16), bool]) */;
    %248 = cast(%var_659, dtype="int8") /* ty=Tensor[(1568), int8] */;
    %249 = reshape(%248, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), int8] */;
    %250 = @func_534(%249) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */;
    %251 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 2, 15), uint32] */, dtype="uint32") /* ty=Tensor[(2, 2, 15), uint32] */;
    %252 = shape_of(%var_647, dtype="int32") /* ty=Tensor[(3), int32] */;
    %253 = cast(%var_647, dtype="uint32") /* ty=Tensor[(2, 2, 15), uint32] */;
    %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %255 = right_shift(%253, %254) /* ty=Tensor[(2, 2, 15), uint32] */;
    %256 = cast(%var_647, dtype="int16") /* ty=Tensor[(2, 2, 15), int16] */;
    %257 = shape_of(%255, dtype="int32") /* ty=Tensor[(3), int32] */;
    %258 = cast(%255, dtype="int16") /* ty=Tensor[(2, 2, 15), int16] */;
    %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %260 = %247.0;
    %261 = %250.0;
    %262 = add(%258, %259) /* ty=Tensor[(2, 2, 15), int16] */;
    (%260, %var_654, %var_655, %261, %var_659, %262)
  };
  %263(%var_691, %var_692, %var_693, %var_694) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 7, 14), int8], Tensor[(1568), int8], Tensor[(2, 2, 15), int16]) */
}

def @func_4802() -> Tensor[(11, 14, 12), float32] {
  @func_4800() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_7023(%var_7021: Tensor[(1, 135), float64], %var_7022: Tensor[(26), int16]) -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(105, 2), float32], Tensor[(1, 135), float64], Tensor[(210), float32], Tensor[(70, 9), float32], Tensor[(26), float64]) {
  @func_7019(%var_7021, %var_7022) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(105, 2), float32], Tensor[(1, 135), float64], Tensor[(210), float32], Tensor[(70, 9), float32], Tensor[(26), float64]) */
}

def @func_7534() -> (Tensor[(11, 14, 12), float32],) {
  %264 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
  (%264,)
}

def @func_6582() -> (Tensor[(11, 14, 12), float32],) {
  %267 = fn () -> (Tensor[(11, 14, 12), float32],) {
    %265 = @func_5732() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %266 = %265.0;
    (%266,)
  };
  %267() /* ty=(Tensor[(11, 14, 12), float32],) */
}

def @func_9701(%var_9697: uint32, %var_9698: Tensor[(6, 15, 1), uint32], %var_9699: Tensor[(6, 15, 8), uint32], %var_9700: Tensor[(630), float32]) -> (Tensor[(6, 15, 1), bool], int8, Tensor[(6, 15, 8), bool], Tensor[(15, 3, 14), bool], Tensor[(1, 210), float32], Tensor[(630), float32]) {
  @func_9695(%var_9697, %var_9698, %var_9699, %var_9700) /* ty=(Tensor[(6, 15, 1), bool], int8, Tensor[(6, 15, 8), bool], Tensor[(15, 3, 14), bool], Tensor[(1, 210), float32], Tensor[(630), float32]) */
}

def @func_2822(%var_2815: Tensor[(4, 9, 2), float64]) -> Tensor[(4, 9, 2), float64] {
  %268 = cast(%var_2815, dtype="float64") /* ty=Tensor[(4, 9, 2), float64] */;
  tan(%268) /* ty=Tensor[(4, 9, 2), float64] */
}

def @func_9556() -> Tensor[(11, 14, 12), float32] {
  @func_9554() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_3347(%var_3345: uint16) -> (Tensor[(16, 8, 13), bool],) {
  @func_3344(%var_3345) /* ty=(Tensor[(16, 8, 13), bool],) */
}

def @func_9964() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  @func_9962() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */
}

def @func_4926() -> Tensor[(11, 14, 12), float32] {
  %269 = fn () -> Tensor[(11, 14, 12), float32] {
    @func_4089() /* ty=Tensor[(11, 14, 12), float32] */
  };
  %269() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_6173() -> Tensor[(11, 14, 12), float32] {
  %270 = @func_5900() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %270.0
}

def @func_4704(%var_4702: Tensor[(11, 14, 12), float32], %var_4703: int8) -> (Tensor[(11, 14, 12), float64], Tensor[(11, 14, 12), uint64], Tensor[(4, 9, 2), float64], Tensor[(42), float32], int8, Tensor[(896), bool]) {
  @func_4700(%var_4702, %var_4703) /* ty=(Tensor[(11, 14, 12), float64], Tensor[(11, 14, 12), uint64], Tensor[(4, 9, 2), float64], Tensor[(42), float32], int8, Tensor[(896), bool]) */
}

def @func_6234() -> Tensor[(11, 14, 12), float32] {
  %271 = fn () -> Tensor[(11, 14, 12), float32] {
    @func_6173() /* ty=Tensor[(11, 14, 12), float32] */
  };
  %271() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_8205() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %272 = @func_7563() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %273 = @func_5732() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %274 = %272.0;
  %275 = %273.0;
  (%274, %275)
}

def @func_8780() -> Tensor[(11, 14, 12), float32] {
  %277 = fn () -> Tensor[(11, 14, 12), float32] {
    %276 = @func_7309() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %276.0
  };
  %277() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_8719() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) {
  %278 = @func_8205() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
  %279 = %278.1;
  %280 = @func_4925() /* ty=Tensor[(11, 14, 12), float32] */;
  %281 = @func_5249() /* ty=Tensor[(11, 14, 12), bool] */;
  %282 = @func_4800() /* ty=Tensor[(11, 14, 12), float32] */;
  (%279, %280, %281, %282)
}

def @func_4463(%var_4461: Tensor[(1568), int8], %var_4462: int8) -> (Tensor[(11, 14, 12), float64], Tensor[(1568), int8], Tensor[(135), float64], Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(42), float32], int8, Tensor[(896), bool]) {
  @func_4459(%var_4461, %var_4462) /* ty=(Tensor[(11, 14, 12), float64], Tensor[(1568), int8], Tensor[(135), float64], Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(42), float32], int8, Tensor[(896), bool]) */
}

def @func_8479() -> Tensor[(11, 14, 12), float32] {
  %283 = @func_6141() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %283.0
}

def @func_5625() -> Tensor[(11, 14, 12), float32] {
  %284 = @func_5240() /* ty=(Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) */;
  %285 = %284.0;
  %286 = cast(%285, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  acosh(%286) /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_5997() -> (Tensor[(11, 14, 12), float32],) {
  %287 = @func_5625() /* ty=Tensor[(11, 14, 12), float32] */;
  (%287,)
}

def @func_6143() -> (Tensor[(11, 14, 12), float32],) {
  @func_6141() /* ty=(Tensor[(11, 14, 12), float32],) */
}

def @func_6361(%var_6317: Tensor[(11, 14, 12), float32]) -> (Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) {
  %288 = @func_5992() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
  %289 = %288.1;
  %290 = cast(%var_6317, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %291 = shape_of(%289, dtype="int32") /* ty=Tensor[(3), int32] */;
  %292 = cast(%289, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %294 = @func_6141() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %295 = less_equal(%292, %293) /* ty=Tensor[(11, 14, 12), bool] */;
  %296 = %294.0;
  (%295, %296)
}

def @func_378(%var_376: Tensor[(16, 15, 12), float64], %var_377: Tensor[(180), float32]) -> (Tensor[(16, 7, 8), bool], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 15, 12), bool], Tensor[(16, 7, 8), bool], Tensor[(15, 4, 3), float32]) {
  %324 = fn (%var_334: Tensor[(16, 15, 12), float64], %var_341: Tensor[(180), float32]) -> (Tensor[(16, 7, 8), bool], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 15, 12), bool], Tensor[(16, 7, 8), bool], Tensor[(15, 4, 3), float32]) {
    %297 = cast(%var_341, dtype="float32") /* ty=Tensor[(180), float32] */;
    %298 = cast(%var_341, dtype="float32") /* ty=Tensor[(180), float32] */;
    %299 = cast(meta[relay.Constant][25] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
    %300 = reshape(%297, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), float32] */;
    %301 = reshape(%298, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), float32] */;
    %302 = reshape(%299, newshape=[56, 16]) /* ty=Tensor[(56, 16), bool] */;
    %303 = @func_214(%300, %301, %302) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(16, 7, 8), bool], Tensor[(56, 16), bool]) */;
    %304 = cast(%var_334, dtype="float64") /* ty=Tensor[(16, 15, 12), float64] */;
    %305 = sqrt(%304) /* ty=Tensor[(16, 15, 12), float64] */;
    %306 = cast(%var_334, dtype="bool") /* ty=Tensor[(16, 15, 12), bool] */;
    %307 = shape_of(%305, dtype="int32") /* ty=Tensor[(3), int32] */;
    %308 = cast(%305, dtype="bool") /* ty=Tensor[(16, 15, 12), bool] */;
    %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %310 = %303.1;
    %311 = cast(%310, dtype="bool") /* ty=Tensor[(16, 7, 8), bool] */;
    %312 = reshape(%311, newshape=[16, 7, 8]) /* ty=Tensor[(16, 7, 8), bool] */;
    %313 = @func_151(%312) /* ty=(Tensor[(16, 7, 8), bool], Tensor[(16, 7, 8), bool]) */;
    %314 = cast(%var_341, dtype="float32") /* ty=Tensor[(180), float32] */;
    %315 = cast(%var_341, dtype="float32") /* ty=Tensor[(180), float32] */;
    %316 = cast(%310, dtype="bool") /* ty=Tensor[(16, 7, 8), bool] */;
    %317 = reshape(%314, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), float32] */;
    %318 = reshape(%315, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), float32] */;
    %319 = reshape(%316, newshape=[56, 16]) /* ty=Tensor[(56, 16), bool] */;
    %320 = @func_214(%317, %318, %319) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(16, 7, 8), bool], Tensor[(56, 16), bool]) */;
    %321 = greater_equal(%308, %309) /* ty=Tensor[(16, 15, 12), bool] */;
    %322 = %313.0;
    %323 = %320.0;
    (%310, %var_341, meta[relay.Constant][25] /* ty=Tensor[(896), bool] */, %321, %322, %323)
  };
  %324(%var_376, %var_377) /* ty=(Tensor[(16, 7, 8), bool], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 15, 12), bool], Tensor[(16, 7, 8), bool], Tensor[(15, 4, 3), float32]) */
}

def @func_8521(%var_8519: Tensor[(9, 13, 15), float32]) -> Tensor[(9, 13, 15), float32] {
  @func_8518(%var_8519) /* ty=Tensor[(9, 13, 15), float32] */
}

def @func_9007(%var_9004: Tensor[(12, 4, 5), float64], %var_9005: Tensor[(896), bool], %var_9006: Tensor[(864), bool]) -> (Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32], int8, Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(864), bool], Tensor[(12, 4, 5), int64]) {
  @func_9002(%var_9004, %var_9005, %var_9006) /* ty=(Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32], int8, Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(864), bool], Tensor[(12, 4, 5), int64]) */
}

def @func_6700(%var_6635: Tensor[(28, 32), bool]) -> (Tensor[(15, 2, 16), float64], Tensor[(28, 32), bool], Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float64], Tensor[(11, 14, 12), uint64], Tensor[(11, 14, 12), float32]) {
  %325 = cast(%var_6635, dtype="bool") /* ty=Tensor[(28, 32), bool] */;
  %326 = reshape(%325, newshape=[28, 32]) /* ty=Tensor[(28, 32), bool] */;
  %327 = @func_5799(%326) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(15, 2, 16), float64], Tensor[(480), float64], Tensor[(845), int64], Tensor[(180), float32], Tensor[(1568), int8], Tensor[(60), uint32], Tensor[(28, 32), bool], Tensor[(1568), int8]) */;
  %328 = @func_4800() /* ty=Tensor[(11, 14, 12), float32] */;
  %329 = cast(meta[relay.Constant][26] /* ty=Tensor[(11, 14, 12), float32] */, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%328, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %333 = cast(%328, dtype="float64") /* ty=Tensor[(11, 14, 12), float64] */;
  %334 = cast(%328, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %335 = less(%331, %332) /* ty=Tensor[(11, 14, 12), bool] */;
  %336 = cast(%335, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %337 = reshape(%334, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), float32] */;
  %338 = reshape(%336, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), bool] */;
  %339 = @func_5997() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %340 = %327.1;
  %341 = sigmoid(%333) /* ty=Tensor[(11, 14, 12), float64] */;
  %342 = @func_3973(%337, %338) /* ty=Tensor[(11, 14, 12), uint64] */;
  %343 = %339.0;
  (%340, %var_6635, %335, %341, %342, %343)
}

def @func_9515() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  @func_9513() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */
}

def @func_2371(%var_2367: Tensor[(2, 13, 1), int16], %var_2368: Tensor[(135), float64], %var_2369: Tensor[(105, 2), float32], %var_2370: Tensor[(630), float32]) -> (Tensor[(180), float32], Tensor[(1440, 2), float64], Tensor[(180), float32], Tensor[(9, 15, 1), float64], Tensor[(15, 3, 14), bool], Tensor[(105, 2), float32], Tensor[(630), float32], Tensor[(2, 13, 135), float64]) {
  %364 = fn (%var_2331: Tensor[(2, 13, 1), int16], %var_2348: Tensor[(135), float64], %var_2355: Tensor[(105, 2), float32], %var_2356: Tensor[(630), float32]) -> (Tensor[(180), float32], Tensor[(1440, 2), float64], Tensor[(180), float32], Tensor[(9, 15, 1), float64], Tensor[(15, 3, 14), bool], Tensor[(105, 2), float32], Tensor[(630), float32], Tensor[(2, 13, 135), float64]) {
    %344 = cast(meta[relay.Constant][27] /* ty=Tensor[(1440, 2), float64] */, dtype="float64") /* ty=Tensor[(1440, 2), float64] */;
    %345 = cast(meta[relay.Constant][28] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %346 = reshape(%344, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
    %347 = reshape(%345, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %348 = @func_375(%346, %347) /* ty=(Tensor[(16, 7, 8), bool], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 15, 12), bool], Tensor[(16, 7, 8), bool], Tensor[(15, 4, 3), float32]) */;
    %349 = cast(%var_2348, dtype="float64") /* ty=Tensor[(135), float64] */;
    %350 = reshape(%349, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float64] */;
    %351 = cast(%var_2355, dtype="float32") /* ty=Tensor[(105, 2), float32] */;
    %352 = cast(%var_2356, dtype="float32") /* ty=Tensor[(630), float32] */;
    %353 = reshape(%351, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), float32] */;
    %354 = reshape(%352, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), float32] */;
    %355 = cast(meta[relay.Constant][29] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %356 = cast(%var_2331, dtype="int16") /* ty=Tensor[(2, 13, 1), int16] */;
    %357 = bitwise_or(%355, %356) /* ty=Tensor[(2, 13, 1), int16] */;
    %358 = cast(%var_2348, dtype="float64") /* ty=Tensor[(135), float64] */;
    %359 = cast(%357, dtype="float64") /* ty=Tensor[(2, 13, 1), float64] */;
    %360 = %348.1;
    %361 = @func_114(%350) /* ty=Tensor[(9, 15, 1), float64] */;
    %362 = @func_1652(%353, %354) /* ty=Tensor[(15, 3, 14), bool] */;
    %363 = mod(%358, %359) /* ty=Tensor[(2, 13, 135), float64] */;
    (%360, meta[relay.Constant][27] /* ty=Tensor[(1440, 2), float64] */, meta[relay.Constant][28] /* ty=Tensor[(180), float32] */, %361, %362, %var_2355, %var_2356, %363)
  };
  %364(%var_2367, %var_2368, %var_2369, %var_2370) /* ty=(Tensor[(180), float32], Tensor[(1440, 2), float64], Tensor[(180), float32], Tensor[(9, 15, 1), float64], Tensor[(15, 3, 14), bool], Tensor[(105, 2), float32], Tensor[(630), float32], Tensor[(2, 13, 135), float64]) */
}

def @func_453(%var_450: int8, %var_451: Tensor[(7, 8, 12), int8], %var_452: Tensor[(180), float32]) -> (Tensor[(7, 8, 12), bool], Tensor[(7, 8, 12), float32], Tensor[(7, 8, 12), int32], Tensor[(16, 7, 8), bool], Tensor[(2880), float64], Tensor[(180), float32], Tensor[(16, 7, 8), bool]) {
  %387 = fn (%var_425: int8, %var_433: Tensor[(7, 8, 12), int8], %var_444: Tensor[(180), float32]) -> (Tensor[(7, 8, 12), bool], Tensor[(7, 8, 12), float32], Tensor[(7, 8, 12), int32], Tensor[(16, 7, 8), bool], Tensor[(2880), float64], Tensor[(180), float32], Tensor[(16, 7, 8), bool]) {
    %365 = cast(%var_425, dtype="bool") /* ty=bool */;
    %366 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 8, 12), int8] */, dtype="bool") /* ty=Tensor[(7, 8, 12), bool] */;
    %367 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 8, 12), int8] */, dtype="float32") /* ty=Tensor[(7, 8, 12), float32] */;
    %368 = cast(%var_433, dtype="int32") /* ty=Tensor[(7, 8, 12), int32] */;
    %369 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(7, 8, 12), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %370 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 8, 12), int8] */, dtype="int32") /* ty=Tensor[(7, 8, 12), int32] */;
    %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %372 = cast(meta[relay.Constant][31] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
    %373 = cast(%var_444, dtype="float32") /* ty=Tensor[(180), float32] */;
    %374 = reshape(%372, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
    %375 = reshape(%373, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %376 = @func_375(%374, %375) /* ty=(Tensor[(16, 7, 8), bool], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 15, 12), bool], Tensor[(16, 7, 8), bool], Tensor[(15, 4, 3), float32]) */;
    %377 = cast(meta[relay.Constant][31] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
    %378 = cast(%var_444, dtype="float32") /* ty=Tensor[(180), float32] */;
    %379 = reshape(%377, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), float64] */;
    %380 = reshape(%378, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %381 = @func_375(%379, %380) /* ty=(Tensor[(16, 7, 8), bool], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 15, 12), bool], Tensor[(16, 7, 8), bool], Tensor[(15, 4, 3), float32]) */;
    %382 = equal(%365, %366) /* ty=Tensor[(7, 8, 12), bool] */;
    %383 = atan(%367) /* ty=Tensor[(7, 8, 12), float32] */;
    %384 = left_shift(%370, %371) /* ty=Tensor[(7, 8, 12), int32] */;
    %385 = %376.0;
    %386 = %381.4;
    (%382, %383, %384, %385, meta[relay.Constant][31] /* ty=Tensor[(2880), float64] */, %var_444, %386)
  };
  %387(%var_450, %var_451, %var_452) /* ty=(Tensor[(7, 8, 12), bool], Tensor[(7, 8, 12), float32], Tensor[(7, 8, 12), int32], Tensor[(16, 7, 8), bool], Tensor[(2880), float64], Tensor[(180), float32], Tensor[(16, 7, 8), bool]) */
}

def @func_8630() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %388 = @func_7563() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %389 = %388.0;
  %390 = @func_6562() /* ty=Tensor[(11, 14, 12), float32] */;
  (%389, %390)
}

def @func_2871(%var_2846: Tensor[(4, 3, 10), float64], %var_2847: Tensor[(4, 3, 10), float64]) -> (Tensor[(4, 3, 10), bool],) {
  %391 = cast(%var_2847, dtype="bool") /* ty=Tensor[(4, 3, 10), bool] */;
  %392 = shape_of(%var_2846, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%var_2846, dtype="bool") /* ty=Tensor[(4, 3, 10), bool] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %395 = less(%393, %394) /* ty=Tensor[(4, 3, 10), bool] */;
  (%395,)
}

def @func_6016() -> Tensor[(11, 14, 12), bool] {
  %402 = fn () -> Tensor[(11, 14, 12), bool] {
    %396 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %397 = %396.0;
    %398 = cast(meta[relay.Constant][32] /* ty=Tensor[(11, 14, 12), float32] */, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
    %399 = shape_of(%397, dtype="int32") /* ty=Tensor[(3), int32] */;
    %400 = cast(%397, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
    %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%400, %401) /* ty=Tensor[(11, 14, 12), bool] */
  };
  %402() /* ty=Tensor[(11, 14, 12), bool] */
}

def @func_7659() -> (Tensor[(11, 14, 12), float32],) {
  %405 = fn () -> (Tensor[(11, 14, 12), float32],) {
    %403 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %404 = %403.0;
    (%404,)
  };
  %405() /* ty=(Tensor[(11, 14, 12), float32],) */
}

def @func_8083() -> Tensor[(11, 14, 12), float32] {
  %407 = fn () -> Tensor[(11, 14, 12), float32] {
    %406 = @func_5992() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
    %406.0
  };
  %407() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_4619(%var_4594: Tensor[(180), float32]) -> (Tensor[(11, 14, 12), float32], Tensor[(7, 8, 12), bool], int8, Tensor[(180), float32], Tensor[(336, 2), float64]) {
  %408 = cast(meta[relay.Constant][33] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %409 = cast(meta[relay.Constant][34] /* ty=Tensor[(336, 2), int8] */, dtype="int8") /* ty=Tensor[(336, 2), int8] */;
  %410 = cast(%var_4594, dtype="float32") /* ty=Tensor[(180), float32] */;
  %411 = reshape(%408, newshape=[]) /* ty=int8 */;
  %412 = reshape(%409, newshape=[7, 8, 12]) /* ty=Tensor[(7, 8, 12), int8] */;
  %413 = reshape(%410, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %414 = @func_449(%411, %412, %413) /* ty=(Tensor[(7, 8, 12), bool], Tensor[(7, 8, 12), float32], Tensor[(7, 8, 12), int32], Tensor[(16, 7, 8), bool], Tensor[(2880), float64], Tensor[(180), float32], Tensor[(16, 7, 8), bool]) */;
  %415 = cast(meta[relay.Constant][34] /* ty=Tensor[(336, 2), int8] */, dtype="float64") /* ty=Tensor[(336, 2), float64] */;
  %416 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %417 = %414.0;
  %418 = asin(%415) /* ty=Tensor[(336, 2), float64] */;
  (%416, %417, meta[relay.Constant][33] /* ty=int8 */, %var_4594, %418)
}

def @func_7790(%var_7787: Tensor[(6, 12, 12), bool], %var_7788: Tensor[(6, 12, 12), bool], %var_7789: Tensor[(2, 448), bool]) -> (Tensor[(6, 12, 12), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(28, 32), bool], Tensor[(11, 14, 12), float32], Tensor[(2, 448), int16]) {
  %442 = fn (%var_7748: Tensor[(6, 12, 12), bool], %var_7749: Tensor[(6, 12, 12), bool], %var_7765: Tensor[(2, 448), bool]) -> (Tensor[(6, 12, 12), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(28, 32), bool], Tensor[(11, 14, 12), float32], Tensor[(2, 448), int16]) {
    %419 = cast(%var_7749, dtype="bool") /* ty=Tensor[(6, 12, 12), bool] */;
    %420 = shape_of(%var_7748, dtype="int32") /* ty=Tensor[(3), int32] */;
    %421 = cast(%var_7748, dtype="bool") /* ty=Tensor[(6, 12, 12), bool] */;
    %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %423 = @func_5389() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
    %424 = cast(%var_7765, dtype="bool") /* ty=Tensor[(2, 448), bool] */;
    %425 = reshape(%424, newshape=[28, 32]) /* ty=Tensor[(28, 32), bool] */;
    %426 = @func_6700(%425) /* ty=(Tensor[(15, 2, 16), float64], Tensor[(28, 32), bool], Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float64], Tensor[(11, 14, 12), uint64], Tensor[(11, 14, 12), float32]) */;
    %427 = @func_7063() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %428 = cast(%var_7765, dtype="float64") /* ty=Tensor[(2, 448), float64] */;
    %429 = acosh(%428) /* ty=Tensor[(2, 448), float64] */;
    %430 = cast(%429, dtype="float64") /* ty=Tensor[(2, 448), float64] */;
    %431 = sin(%430) /* ty=Tensor[(2, 448), float64] */;
    %432 = cast(%431, dtype="int16") /* ty=Tensor[(2, 448), int16] */;
    %433 = shape_of(%429, dtype="int32") /* ty=Tensor[(2), int32] */;
    %434 = cast(%429, dtype="int16") /* ty=Tensor[(2, 448), int16] */;
    %435 = dyn.reshape(%432, %433, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %436 = logical_and(%421, %422) /* ty=Tensor[(6, 12, 12), bool] */;
    %437 = %423.0;
    %438 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
    %439 = %426.1;
    %440 = %427.0;
    %441 = left_shift(%434, %435) /* ty=Tensor[(2, 448), int16] */;
    (%436, %437, %438, %439, %440, %441)
  };
  %442(%var_7787, %var_7788, %var_7789) /* ty=(Tensor[(6, 12, 12), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(28, 32), bool], Tensor[(11, 14, 12), float32], Tensor[(2, 448), int16]) */
}

def @func_9139(%var_9138: Tensor[(10, 15, 13), float32]) -> (Tensor[(10, 15, 13), float32],) {
  %445 = fn (%var_9133: Tensor[(10, 15, 13), float32]) -> (Tensor[(10, 15, 13), float32],) {
    %443 = cast(%var_9133, dtype="float32") /* ty=Tensor[(10, 15, 13), float32] */;
    %444 = log(%443) /* ty=Tensor[(10, 15, 13), float32] */;
    (%444,)
  };
  %445(%var_9138) /* ty=(Tensor[(10, 15, 13), float32],) */
}

def @func_6563() -> Tensor[(11, 14, 12), float32] {
  %447 = fn () -> Tensor[(11, 14, 12), float32] {
    %446 = @func_5389() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
    %446.0
  };
  %447() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_534(%var_512: Tensor[(16, 7, 14), int8]) -> (Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) {
  %448 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 7, 14), int8] */, dtype="int8") /* ty=Tensor[(16, 7, 14), int8] */;
  %449 = shape_of(%var_512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%var_512, dtype="int8") /* ty=Tensor[(16, 7, 14), int8] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %452 = cast(meta[relay.Constant][36] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %453 = reshape(%452, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float64] */;
  %454 = logical_xor(%450, %451) /* ty=Tensor[(16, 7, 14), int8] */;
  %455 = @func_114(%453) /* ty=Tensor[(9, 15, 1), float64] */;
  (%454, %455, meta[relay.Constant][36] /* ty=Tensor[(135), float64] */)
}

def @func_5351(%var_5256: Tensor[(5, 6, 3), float64], %var_5257: Tensor[(5, 6, 3), float64], %var_5280: int8, %var_5281: Tensor[(896), bool], %var_5309: Tensor[(845), int64], %var_5310: Tensor[(180), float32], %var_5332: Tensor[(8, 196), float64]) -> (Tensor[(5, 6, 3), float64], Tensor[(5, 6, 3), float64], Tensor[(11, 14, 12), float32], Tensor[(42), float32], Tensor[(896), bool], Tensor[(12, 2, 10), float64], Tensor[(240), float64], Tensor[(9, 15, 1), float64], Tensor[(896), bool], Tensor[(845), int64], Tensor[(180), float32], Tensor[(8, 196), uint32], Tensor[(8, 196), float32], Tensor[(11, 14, 12), float32]) {
  %456 = cast(%var_5257, dtype="float64") /* ty=Tensor[(5, 6, 3), float64] */;
  %457 = shape_of(%var_5256, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(%var_5256, dtype="float64") /* ty=Tensor[(5, 6, 3), float64] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %460 = cast(%var_5257, dtype="float64") /* ty=Tensor[(5, 6, 3), float64] */;
  %461 = cast(meta[relay.Constant][37] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %462 = cast(%var_5280, dtype="int8") /* ty=int8 */;
  %463 = cast(%var_5281, dtype="bool") /* ty=Tensor[(896), bool] */;
  %464 = reshape(%461, newshape=[14, 3, 1]) /* ty=Tensor[(14, 3, 1), float32] */;
  %465 = reshape(%462, newshape=[]) /* ty=int8 */;
  %466 = reshape(%463, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %467 = @func_4201(%464, %465, %466) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(4, 9, 2), float64], Tensor[(72), float64], Tensor[(7, 8, 12), int32], int8, Tensor[(672), int8], Tensor[(180, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(14, 3, 1), float32], Tensor[(14, 3, 1), float32]) */;
  %468 = cast(meta[relay.Constant][38] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %469 = reshape(%468, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), float64] */;
  %470 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 196), int8] */, dtype="int8") /* ty=Tensor[(8, 196), int8] */;
  %471 = reshape(%470, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), int8] */;
  %472 = @func_534(%471) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */;
  %473 = cast(%var_5309, dtype="int64") /* ty=Tensor[(845), int64] */;
  %474 = cast(%var_5310, dtype="float32") /* ty=Tensor[(180), float32] */;
  %475 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 196), int8] */, dtype="int8") /* ty=Tensor[(8, 196), int8] */;
  %476 = reshape(%473, newshape=[5, 13, 13]) /* ty=Tensor[(5, 13, 13), int64] */;
  %477 = reshape(%474, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %478 = reshape(%475, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
  %479 = @func_1259(%476, %477, %478) /* ty=(Tensor[(5, 13, 13), bool], Tensor[(15, 4, 3), float32], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(1568), int8]) */;
  %480 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 196), int8] */, dtype="float64") /* ty=Tensor[(8, 196), float64] */;
  %481 = tan(%480) /* ty=Tensor[(8, 196), float64] */;
  %482 = cast(%481, dtype="float64") /* ty=Tensor[(8, 196), float64] */;
  %483 = log(%482) /* ty=Tensor[(8, 196), float64] */;
  %484 = cast(%var_5332, dtype="uint32") /* ty=Tensor[(8, 196), uint32] */;
  %485 = shape_of(%483, dtype="int32") /* ty=Tensor[(2), int32] */;
  %486 = cast(%483, dtype="uint32") /* ty=Tensor[(8, 196), uint32] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %488 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 196), int8] */, dtype="int8") /* ty=Tensor[(8, 196), int8] */;
  %489 = cast(%var_5280, dtype="int8") /* ty=int8 */;
  %490 = left_shift(%488, %489) /* ty=Tensor[(8, 196), int8] */;
  %491 = cast(%490, dtype="float32") /* ty=Tensor[(8, 196), float32] */;
  %492 = shape_of(%483, dtype="int32") /* ty=Tensor[(2), int32] */;
  %493 = cast(%483, dtype="float32") /* ty=Tensor[(8, 196), float32] */;
  %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %495 = floor_mod(%493, %494) /* ty=Tensor[(8, 196), float32] */;
  %496 = cast(meta[relay.Constant][40] /* ty=Tensor[(8, 196), float32] */, dtype="float32") /* ty=Tensor[(8, 196), float32] */;
  %497 = shape_of(%495, dtype="int32") /* ty=Tensor[(2), int32] */;
  %498 = cast(%495, dtype="float32") /* ty=Tensor[(8, 196), float32] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %500 = divide(%458, %459) /* ty=Tensor[(5, 6, 3), float64] */;
  %501 = asinh(%460) /* ty=Tensor[(5, 6, 3), float64] */;
  %502 = %467.0;
  %503 = @func_2208(%469) /* ty=Tensor[(12, 2, 10), float64] */;
  %504 = %472.1;
  %505 = %479.4;
  %506 = multiply(%486, %487) /* ty=Tensor[(8, 196), uint32] */;
  %507 = mod(%498, %499) /* ty=Tensor[(8, 196), float32] */;
  %508 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  (%500, %501, %502, meta[relay.Constant][37] /* ty=Tensor[(42), float32] */, %var_5281, %503, meta[relay.Constant][38] /* ty=Tensor[(240), float64] */, %504, %505, %var_5309, %var_5310, %506, %507, %508)
}

def @func_8597() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  @func_8595() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */
}

def @func_6491() -> Tensor[(11, 14, 12), float32] {
  %509 = fn () -> Tensor[(11, 14, 12), float32] {
    @func_4089() /* ty=Tensor[(11, 14, 12), float32] */
  };
  %509() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_9962() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %510 = @func_5997() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %511 = @func_4925() /* ty=Tensor[(11, 14, 12), float32] */;
  %512 = %510.0;
  (%511, %512)
}

def @func_6611() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), uint64]) {
  %519 = fn () -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), uint64]) {
    %513 = @func_6173() /* ty=Tensor[(11, 14, 12), float32] */;
    %514 = cast(%513, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
    %515 = cast(%513, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
    %516 = reshape(%514, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), float32] */;
    %517 = reshape(%515, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), bool] */;
    %518 = @func_3973(%516, %517) /* ty=Tensor[(11, 14, 12), uint64] */;
    (%513, %518)
  };
  %519() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), uint64]) */
}

def @func_8207() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  @func_8205() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */
}

def @func_5882(%var_5880: Tensor[(15, 14, 10), uint16], %var_5881: Tensor[(15, 14, 10), uint16]) -> Tensor[(15, 14, 10), bool] {
  @func_5878(%var_5880, %var_5881) /* ty=Tensor[(15, 14, 10), bool] */
}

def @func_9395(%var_9383: Tensor[(1, 9, 2), int64], %var_9384: Tensor[(10, 9, 2), int64]) -> Tensor[(10, 9, 2), int64] {
  %520 = cast(%var_9383, dtype="int64") /* ty=Tensor[(1, 9, 2), int64] */;
  %521 = cast(%var_9384, dtype="int64") /* ty=Tensor[(10, 9, 2), int64] */;
  multiply(%520, %521) /* ty=Tensor[(10, 9, 2), int64] */
}

def @func_3977(%var_3975: Tensor[(11, 14, 12), float32], %var_3976: Tensor[(11, 14, 12), bool]) -> Tensor[(11, 14, 12), uint64] {
  @func_3973(%var_3975, %var_3976) /* ty=Tensor[(11, 14, 12), uint64] */
}

def @func_10204(%var_10202: Tensor[(2, 14, 5), float64], %var_10203: Tensor[(2, 14, 5), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(11, 14, 12), float32]) {
  @func_10200(%var_10202, %var_10203) /* ty=(Tensor[(2, 14, 5), float64], Tensor[(11, 14, 12), float32]) */
}

def @func_6175() -> Tensor[(11, 14, 12), float32] {
  @func_6173() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_214(%var_192: Tensor[(15, 4, 3), float32], %var_193: Tensor[(15, 4, 3), float32], %var_203: Tensor[(56, 16), bool]) -> (Tensor[(15, 4, 3), float32], Tensor[(16, 7, 8), bool], Tensor[(56, 16), bool]) {
  %522 = cast(%var_193, dtype="float32") /* ty=Tensor[(15, 4, 3), float32] */;
  %523 = shape_of(%var_192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %524 = cast(%var_192, dtype="float32") /* ty=Tensor[(15, 4, 3), float32] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %526 = cast(%var_203, dtype="bool") /* ty=Tensor[(56, 16), bool] */;
  %527 = reshape(%526, newshape=[16, 7, 8]) /* ty=Tensor[(16, 7, 8), bool] */;
  %528 = @func_151(%527) /* ty=(Tensor[(16, 7, 8), bool], Tensor[(16, 7, 8), bool]) */;
  %529 = subtract(%524, %525) /* ty=Tensor[(15, 4, 3), float32] */;
  %530 = %528.1;
  (%529, %530, %var_203)
}

def @func_6830(%var_6828: uint32, %var_6829: Tensor[(30, 70), uint16]) -> (Tensor[(8, 2, 11), uint32], Tensor[(11, 14, 12), float32], Tensor[(15, 14, 10), bool], Tensor[(30, 70), uint16]) {
  %541 = fn (%var_6784: uint32, %var_6799: Tensor[(30, 70), uint16]) -> (Tensor[(8, 2, 11), uint32], Tensor[(11, 14, 12), float32], Tensor[(15, 14, 10), bool], Tensor[(30, 70), uint16]) {
    %531 = cast(%var_6784, dtype="uint32") /* ty=uint32 */;
    %532 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 2, 11), uint32] */, dtype="uint32") /* ty=Tensor[(8, 2, 11), uint32] */;
    %533 = @func_5732() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %534 = cast(%var_6799, dtype="uint16") /* ty=Tensor[(30, 70), uint16] */;
    %535 = cast(%var_6799, dtype="uint16") /* ty=Tensor[(30, 70), uint16] */;
    %536 = reshape(%534, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), uint16] */;
    %537 = reshape(%535, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), uint16] */;
    %538 = bitwise_and(%531, %532) /* ty=Tensor[(8, 2, 11), uint32] */;
    %539 = %533.0;
    %540 = @func_5878(%536, %537) /* ty=Tensor[(15, 14, 10), bool] */;
    (%538, %539, %540, %var_6799)
  };
  %541(%var_6828, %var_6829) /* ty=(Tensor[(8, 2, 11), uint32], Tensor[(11, 14, 12), float32], Tensor[(15, 14, 10), bool], Tensor[(30, 70), uint16]) */
}

def @func_4622(%var_4620: Tensor[(180), float32]) -> (Tensor[(11, 14, 12), float32], Tensor[(7, 8, 12), bool], int8, Tensor[(180), float32], Tensor[(336, 2), float64]) {
  @func_4619(%var_4620) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(7, 8, 12), bool], int8, Tensor[(180), float32], Tensor[(336, 2), float64]) */
}

def @func_4800() -> Tensor[(11, 14, 12), float32] {
  @func_3874() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_8721() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) {
  @func_8719() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) */
}

def @func_7998(%var_7973: Tensor[(1568), int8], %var_7975: Tensor[(135), float64], %var_7984: Tensor[(896), bool], %var_7988: Tensor[(630), float32]) -> (Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(135), int32], Tensor[(1, 135), float64], Tensor[(896), bool], Tensor[(15, 3, 14), bool], Tensor[(210, 1), float32], Tensor[(630), float32]) {
  %542 = @func_7563() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %543 = cast(%var_7973, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %544 = reshape(%543, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), int8] */;
  %545 = @func_534(%544) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */;
  %546 = %545.2;
  %547 = cast(%var_7975, dtype="int32") /* ty=Tensor[(135), int32] */;
  %548 = shape_of(%546, dtype="int32") /* ty=Tensor[(1), int32] */;
  %549 = cast(%546, dtype="int32") /* ty=Tensor[(135), int32] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?), int32] */;
  %551 = cast(%var_7984, dtype="bool") /* ty=Tensor[(896), bool] */;
  %552 = reshape(%551, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %553 = @func_7938(%552) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(896), bool], Tensor[(9, 15, 1), float64], Tensor[(1, 135), float64]) */;
  %554 = cast(meta[relay.Constant][42] /* ty=Tensor[(210, 1), float32] */, dtype="float32") /* ty=Tensor[(210, 1), float32] */;
  %555 = cast(%var_7988, dtype="float32") /* ty=Tensor[(630), float32] */;
  %556 = reshape(%554, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), float32] */;
  %557 = reshape(%555, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), float32] */;
  %558 = %542.0;
  %559 = bitwise_and(%549, %550) /* ty=Tensor[(135), int32] */;
  %560 = %553.5;
  %561 = @func_1652(%556, %557) /* ty=Tensor[(15, 3, 14), bool] */;
  (%558, %var_7973, %559, %560, %var_7984, %561, meta[relay.Constant][42] /* ty=Tensor[(210, 1), float32] */, %var_7988)
}

def @func_6048() -> Tensor[(11, 14, 12), float32] {
  %562 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %562.0
}

def @func_5627() -> Tensor[(11, 14, 12), float32] {
  @func_5625() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_4700(%var_4675: Tensor[(11, 14, 12), float32], %var_4695: int8) -> (Tensor[(11, 14, 12), float64], Tensor[(11, 14, 12), uint64], Tensor[(4, 9, 2), float64], Tensor[(42), float32], int8, Tensor[(896), bool]) {
  %563 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %564 = cast(%var_4675, dtype="float64") /* ty=Tensor[(11, 14, 12), float64] */;
  %565 = shape_of(%563, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%563, dtype="float64") /* ty=Tensor[(11, 14, 12), float64] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %568 = cast(%563, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %569 = cast(%var_4675, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %570 = reshape(%568, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), float32] */;
  %571 = reshape(%569, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), bool] */;
  %572 = cast(meta[relay.Constant][43] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %573 = cast(%var_4695, dtype="int8") /* ty=int8 */;
  %574 = cast(meta[relay.Constant][44] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
  %575 = reshape(%572, newshape=[14, 3, 1]) /* ty=Tensor[(14, 3, 1), float32] */;
  %576 = reshape(%573, newshape=[]) /* ty=int8 */;
  %577 = reshape(%574, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %578 = @func_4201(%575, %576, %577) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(4, 9, 2), float64], Tensor[(72), float64], Tensor[(7, 8, 12), int32], int8, Tensor[(672), int8], Tensor[(180, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(14, 3, 1), float32], Tensor[(14, 3, 1), float32]) */;
  %579 = floor_divide(%566, %567) /* ty=Tensor[(11, 14, 12), float64] */;
  %580 = @func_3973(%570, %571) /* ty=Tensor[(11, 14, 12), uint64] */;
  %581 = %578.1;
  (%579, %580, %581, meta[relay.Constant][43] /* ty=Tensor[(42), float32] */, %var_4695, meta[relay.Constant][44] /* ty=Tensor[(896), bool] */)
}

def @func_8256(%var_8254: Tensor[(2, 13, 6), float64]) -> (Tensor[(2, 13, 6), float64], Tensor[(11, 14, 12), float32]) {
  @func_8253(%var_8254) /* ty=(Tensor[(2, 13, 6), float64], Tensor[(11, 14, 12), float32]) */
}

def @func_5733() -> (Tensor[(11, 14, 12), float32],) {
  %589 = fn () -> (Tensor[(11, 14, 12), float32],) {
    %582 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
    %583 = @func_5249() /* ty=Tensor[(11, 14, 12), bool] */;
    %584 = cast(%583, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
    %585 = shape_of(%582, dtype="int32") /* ty=Tensor[(3), int32] */;
    %586 = cast(%582, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
    %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %588 = maximum(%586, %587) /* ty=Tensor[(11, 14, 12), float32] */;
    (%588,)
  };
  %589() /* ty=(Tensor[(11, 14, 12), float32],) */
}

def @func_3234(%var_3231: Tensor[(15, 2, 16), float64], %var_3232: Tensor[(845), int64], %var_3233: Tensor[(180), float32]) -> (Tensor[(15, 2, 16), float64], Tensor[(5, 13, 13), bool], Tensor[(845), int64], Tensor[(180), float32], Tensor[(1568), int8]) {
  %602 = fn (%var_3202: Tensor[(15, 2, 16), float64], %var_3224: Tensor[(845), int64], %var_3225: Tensor[(180), float32]) -> (Tensor[(15, 2, 16), float64], Tensor[(5, 13, 13), bool], Tensor[(845), int64], Tensor[(180), float32], Tensor[(1568), int8]) {
    %590 = cast(%var_3202, dtype="float64") /* ty=Tensor[(15, 2, 16), float64] */;
    %591 = sqrt(%590) /* ty=Tensor[(15, 2, 16), float64] */;
    %592 = cast(%591, dtype="float64") /* ty=Tensor[(15, 2, 16), float64] */;
    %593 = cast(%var_3224, dtype="int64") /* ty=Tensor[(845), int64] */;
    %594 = cast(%var_3225, dtype="float32") /* ty=Tensor[(180), float32] */;
    %595 = cast(meta[relay.Constant][45] /* ty=Tensor[(1568), int8] */, dtype="int8") /* ty=Tensor[(1568), int8] */;
    %596 = reshape(%593, newshape=[5, 13, 13]) /* ty=Tensor[(5, 13, 13), int64] */;
    %597 = reshape(%594, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %598 = reshape(%595, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
    %599 = @func_1259(%596, %597, %598) /* ty=(Tensor[(5, 13, 13), bool], Tensor[(15, 4, 3), float32], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(1568), int8]) */;
    %600 = cos(%592) /* ty=Tensor[(15, 2, 16), float64] */;
    %601 = %599.0;
    (%600, %601, %var_3224, %var_3225, meta[relay.Constant][45] /* ty=Tensor[(1568), int8] */)
  };
  %602(%var_3231, %var_3232, %var_3233) /* ty=(Tensor[(15, 2, 16), float64], Tensor[(5, 13, 13), bool], Tensor[(845), int64], Tensor[(180), float32], Tensor[(1568), int8]) */
}

def @func_8639() -> Tensor[(7, 15, 12), uint8] {
  %607 = fn () -> Tensor[(7, 15, 12), uint8] {
    %603 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 15, 12), uint8] */, dtype="uint8") /* ty=Tensor[(7, 15, 12), uint8] */;
    %604 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(7, 15, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %605 = cast(meta[relay.Constant][46] /* ty=Tensor[(7, 15, 12), uint8] */, dtype="uint8") /* ty=Tensor[(7, 15, 12), uint8] */;
    %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    logical_xor(%605, %606) /* ty=Tensor[(7, 15, 12), uint8] */
  };
  %607() /* ty=Tensor[(7, 15, 12), uint8] */
}

def @func_6703(%var_6701: Tensor[(28, 32), bool]) -> (Tensor[(15, 2, 16), float64], Tensor[(28, 32), bool], Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float64], Tensor[(11, 14, 12), uint64], Tensor[(11, 14, 12), float32]) {
  @func_6700(%var_6701) /* ty=(Tensor[(15, 2, 16), float64], Tensor[(28, 32), bool], Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float64], Tensor[(11, 14, 12), uint64], Tensor[(11, 14, 12), float32]) */
}

def @func_7743(%var_7741: Tensor[(120), uint16]) -> (Tensor[(11, 14, 12), float32], Tensor[(5, 4, 6), uint16], Tensor[(120), uint16]) {
  @func_7740(%var_7741) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(5, 4, 6), uint16], Tensor[(120), uint16]) */
}

def @func_6483(%var_6479: Tensor[(845, 1), int64], %var_6480: Tensor[(180, 1), float32], %var_6481: int8, %var_6482: Tensor[(896), bool]) -> (Tensor[(11, 14, 12), bool], Tensor[(15, 4, 3), float32], Tensor[(180, 1), float32], Tensor[(1568), int8], Tensor[(4, 9, 2), float64], Tensor[(42), float32], int8, Tensor[(896), int16], Tensor[(845, 896), uint16]) {
  %634 = fn (%var_6449: Tensor[(845, 1), int64], %var_6450: Tensor[(180, 1), float32], %var_6460: int8, %var_6461: Tensor[(896), bool]) -> (Tensor[(11, 14, 12), bool], Tensor[(15, 4, 3), float32], Tensor[(180, 1), float32], Tensor[(1568), int8], Tensor[(4, 9, 2), float64], Tensor[(42), float32], int8, Tensor[(896), int16], Tensor[(845, 896), uint16]) {
    %608 = @func_5240() /* ty=(Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) */;
    %609 = cast(%var_6449, dtype="int64") /* ty=Tensor[(845, 1), int64] */;
    %610 = cast(%var_6450, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
    %611 = cast(meta[relay.Constant][48] /* ty=Tensor[(1568), int8] */, dtype="int8") /* ty=Tensor[(1568), int8] */;
    %612 = reshape(%609, newshape=[5, 13, 13]) /* ty=Tensor[(5, 13, 13), int64] */;
    %613 = reshape(%610, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %614 = reshape(%611, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
    %615 = @func_1259(%612, %613, %614) /* ty=(Tensor[(5, 13, 13), bool], Tensor[(15, 4, 3), float32], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(1568), int8]) */;
    %616 = cast(meta[relay.Constant][49] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
    %617 = cast(%var_6460, dtype="int8") /* ty=int8 */;
    %618 = cast(%var_6461, dtype="bool") /* ty=Tensor[(896), bool] */;
    %619 = reshape(%616, newshape=[14, 3, 1]) /* ty=Tensor[(14, 3, 1), float32] */;
    %620 = reshape(%617, newshape=[]) /* ty=int8 */;
    %621 = reshape(%618, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %622 = @func_4201(%619, %620, %621) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(4, 9, 2), float64], Tensor[(72), float64], Tensor[(7, 8, 12), int32], int8, Tensor[(672), int8], Tensor[(180, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(14, 3, 1), float32], Tensor[(14, 3, 1), float32]) */;
    %623 = cast(meta[relay.Constant][50] /* ty=Tensor[(896), bool] */, dtype="int16") /* ty=Tensor[(896), int16] */;
    %624 = shape_of(%var_6461, dtype="int32") /* ty=Tensor[(1), int32] */;
    %625 = cast(%var_6461, dtype="int16") /* ty=Tensor[(896), int16] */;
    %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?), int16] */;
    %627 = cast(%var_6449, dtype="uint16") /* ty=Tensor[(845, 1), uint16] */;
    %628 = cast(meta[relay.Constant][50] /* ty=Tensor[(896), bool] */, dtype="uint16") /* ty=Tensor[(896), uint16] */;
    %629 = %608.0;
    %630 = %615.1;
    %631 = %622.1;
    %632 = logical_xor(%625, %626) /* ty=Tensor[(896), int16] */;
    %633 = subtract(%627, %628) /* ty=Tensor[(845, 896), uint16] */;
    (%629, %630, %var_6450, meta[relay.Constant][48] /* ty=Tensor[(1568), int8] */, %631, meta[relay.Constant][49] /* ty=Tensor[(42), float32] */, %var_6460, %632, %633)
  };
  %634(%var_6479, %var_6480, %var_6481, %var_6482) /* ty=(Tensor[(11, 14, 12), bool], Tensor[(15, 4, 3), float32], Tensor[(180, 1), float32], Tensor[(1568), int8], Tensor[(4, 9, 2), float64], Tensor[(42), float32], int8, Tensor[(896), int16], Tensor[(845, 896), uint16]) */
}

def @func_5390() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %638 = fn () -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
    %635 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %636 = %635.0;
    %637 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
    (%636, %637)
  };
  %638() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */
}

def @func_5173(%var_5172: Tensor[(1, 1568), int8]) -> (Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float64], Tensor[(1, 1568), int8]) {
  %644 = fn (%var_5157: Tensor[(1, 1568), int8]) -> (Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float64], Tensor[(1, 1568), int8]) {
    %639 = cast(%var_5157, dtype="int8") /* ty=Tensor[(1, 1568), int8] */;
    %640 = reshape(%639, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), int8] */;
    %641 = @func_534(%640) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */;
    %642 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
    %643 = %641.1;
    (%642, %643, %var_5157)
  };
  %644(%var_5172) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float64], Tensor[(1, 1568), int8]) */
}

def @func_2208(%var_2199: Tensor[(12, 2, 10), float64]) -> Tensor[(12, 2, 10), float64] {
  %645 = cast(%var_2199, dtype="float64") /* ty=Tensor[(12, 2, 10), float64] */;
  cosh(%645) /* ty=Tensor[(12, 2, 10), float64] */
}

def @func_8930() -> Tensor[(11, 14, 12), float32] {
  %646 = fn () -> Tensor[(11, 14, 12), float32] {
    @func_5625() /* ty=Tensor[(11, 14, 12), float32] */
  };
  %646() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_7137() -> (Tensor[(9, 15, 1), float64], Tensor[(11, 14, 12), float32], Tensor[(1848), float32]) {
  %653 = fn () -> (Tensor[(9, 15, 1), float64], Tensor[(11, 14, 12), float32], Tensor[(1848), float32]) {
    %647 = @func_5443() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float64], Tensor[(1568), int8]) */;
    %648 = cast(meta[relay.Constant][51] /* ty=Tensor[(1848), float32] */, dtype="float32") /* ty=Tensor[(1848), float32] */;
    %649 = reshape(%648, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), float32] */;
    %650 = @func_6361(%649) /* ty=(Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) */;
    %651 = %647.1;
    %652 = %650.1;
    (%651, %652, meta[relay.Constant][51] /* ty=Tensor[(1848), float32] */)
  };
  %653() /* ty=(Tensor[(9, 15, 1), float64], Tensor[(11, 14, 12), float32], Tensor[(1848), float32]) */
}

def @func_8253(%var_8242: Tensor[(2, 13, 6), float64]) -> (Tensor[(2, 13, 6), float64], Tensor[(11, 14, 12), float32]) {
  %654 = cast(%var_8242, dtype="float64") /* ty=Tensor[(2, 13, 6), float64] */;
  %655 = @func_6141() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %656 = asin(%654) /* ty=Tensor[(2, 13, 6), float64] */;
  %657 = %655.0;
  (%656, %657)
}

def @func_3464(%var_3462: Tensor[(5, 4, 6), uint16], %var_3463: Tensor[(5, 4, 6), uint16]) -> (Tensor[(5, 4, 6), uint16], Tensor[(5, 4, 6), float64]) {
  @func_3460(%var_3462, %var_3463) /* ty=(Tensor[(5, 4, 6), uint16], Tensor[(5, 4, 6), float64]) */
}

def @func_4459(%var_4422: Tensor[(1568), int8], %var_4455: int8) -> (Tensor[(11, 14, 12), float64], Tensor[(1568), int8], Tensor[(135), float64], Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(42), float32], int8, Tensor[(896), bool]) {
  %658 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
  %659 = cast(%658, dtype="float64") /* ty=Tensor[(11, 14, 12), float64] */;
  %660 = cast(%var_4422, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %661 = reshape(%660, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), int8] */;
  %662 = @func_534(%661) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */;
  %663 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %664 = cast(%var_4422, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %665 = reshape(%664, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), int8] */;
  %666 = @func_534(%665) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */;
  %667 = %666.1;
  %668 = cast(%667, dtype="float32") /* ty=Tensor[(9, 15, 1), float32] */;
  %669 = cast(meta[relay.Constant][52] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %670 = cast(%var_4455, dtype="int8") /* ty=int8 */;
  %671 = cast(meta[relay.Constant][53] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
  %672 = reshape(%669, newshape=[14, 3, 1]) /* ty=Tensor[(14, 3, 1), float32] */;
  %673 = reshape(%670, newshape=[]) /* ty=int8 */;
  %674 = reshape(%671, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %675 = @func_4201(%672, %673, %674) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(4, 9, 2), float64], Tensor[(72), float64], Tensor[(7, 8, 12), int32], int8, Tensor[(672), int8], Tensor[(180, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(14, 3, 1), float32], Tensor[(14, 3, 1), float32]) */;
  %676 = tan(%659) /* ty=Tensor[(11, 14, 12), float64] */;
  %677 = %662.2;
  %678 = %663.0;
  %679 = sigmoid(%668) /* ty=Tensor[(9, 15, 1), float32] */;
  %680 = %675.7;
  (%676, %var_4422, %677, %678, %679, %680, meta[relay.Constant][52] /* ty=Tensor[(42), float32] */, %var_4455, meta[relay.Constant][53] /* ty=Tensor[(896), bool] */)
}

def @func_7311() -> (Tensor[(11, 14, 12), float32],) {
  @func_7309() /* ty=(Tensor[(11, 14, 12), float32],) */
}

def @func_5993() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %684 = fn () -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
    %681 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %682 = @func_4800() /* ty=Tensor[(11, 14, 12), float32] */;
    %683 = %681.0;
    (%682, %683)
  };
  %684() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */
}

def @func_7401(%var_7397: int8, %var_7398: Tensor[(896), bool]) -> (Tensor[(11, 14, 12), float32], Tensor[(42), float32], Tensor[(13, 65), int64], Tensor[(180), float32], int8, Tensor[(896), bool]) {
  %685 = cast(meta[relay.Constant][54] /* ty=Tensor[(13, 65), int64] */, dtype="int64") /* ty=Tensor[(13, 65), int64] */;
  %686 = cast(meta[relay.Constant][55] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %687 = cast(%var_7397, dtype="int8") /* ty=int8 */;
  %688 = cast(%var_7398, dtype="bool") /* ty=Tensor[(896), bool] */;
  %689 = reshape(%685, newshape=[845, 1]) /* ty=Tensor[(845, 1), int64] */;
  %690 = reshape(%686, newshape=[180, 1]) /* ty=Tensor[(180, 1), float32] */;
  %691 = reshape(%687, newshape=[]) /* ty=int8 */;
  %692 = reshape(%688, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %693 = @func_6478(%689, %690, %691, %692) /* ty=(Tensor[(11, 14, 12), bool], Tensor[(15, 4, 3), float32], Tensor[(180, 1), float32], Tensor[(1568), int8], Tensor[(4, 9, 2), float64], Tensor[(42), float32], int8, Tensor[(896), int16], Tensor[(845, 896), uint16]) */;
  %694 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %695 = %693.5;
  (%694, %695, meta[relay.Constant][54] /* ty=Tensor[(13, 65), int64] */, meta[relay.Constant][55] /* ty=Tensor[(180), float32] */, %var_7397, %var_7398)
}

def @func_5242() -> (Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) {
  @func_5240() /* ty=(Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) */
}

def @func_9541() -> (Tensor[(11, 14, 12), float32], Tensor[(15, 3, 14), bool], Tensor[(35, 6), float32], Tensor[(630, 1), float32]) {
  %703 = fn () -> (Tensor[(11, 14, 12), float32], Tensor[(15, 3, 14), bool], Tensor[(35, 6), float32], Tensor[(630, 1), float32]) {
    %696 = @func_7563() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %697 = cast(meta[relay.Constant][56] /* ty=Tensor[(35, 6), float32] */, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
    %698 = cast(meta[relay.Constant][57] /* ty=Tensor[(630, 1), float32] */, dtype="float32") /* ty=Tensor[(630, 1), float32] */;
    %699 = reshape(%697, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), float32] */;
    %700 = reshape(%698, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), float32] */;
    %701 = %696.0;
    %702 = @func_1652(%699, %700) /* ty=Tensor[(15, 3, 14), bool] */;
    (%701, %702, meta[relay.Constant][56] /* ty=Tensor[(35, 6), float32] */, meta[relay.Constant][57] /* ty=Tensor[(630, 1), float32] */)
  };
  %703() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(15, 3, 14), bool], Tensor[(35, 6), float32], Tensor[(630, 1), float32]) */
}

def @func_9513() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %704 = @func_7309() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %705 = @func_6173() /* ty=Tensor[(11, 14, 12), float32] */;
  %706 = %704.0;
  (%705, %706)
}

def @func_10200(%var_10193: Tensor[(2, 14, 5), float64], %var_10194: Tensor[(2, 14, 5), float64]) -> (Tensor[(2, 14, 5), float64], Tensor[(11, 14, 12), float32]) {
  %707 = cast(%var_10194, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %708 = shape_of(%var_10193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%var_10193, dtype="float64") /* ty=Tensor[(2, 14, 5), float64] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %711 = add(%709, %710) /* ty=Tensor[(2, 14, 5), float64] */;
  %712 = @func_6562() /* ty=Tensor[(11, 14, 12), float32] */;
  (%711, %712)
}

def @func_1263(%var_1260: Tensor[(5, 13, 13), int64], %var_1261: Tensor[(180), float32], %var_1262: Tensor[(1568), int8]) -> (Tensor[(5, 13, 13), bool], Tensor[(15, 4, 3), float32], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(1568), int8]) {
  %728 = fn (%var_1237: Tensor[(5, 13, 13), int64], %var_1255: Tensor[(180), float32], %var_1257: Tensor[(1568), int8]) -> (Tensor[(5, 13, 13), bool], Tensor[(15, 4, 3), float32], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(1568), int8]) {
    %713 = cast(meta[relay.Constant][58] /* ty=Tensor[(5, 13, 13), int64] */, dtype="bool") /* ty=Tensor[(5, 13, 13), bool] */;
    %714 = shape_of(%var_1237, dtype="int32") /* ty=Tensor[(3), int32] */;
    %715 = cast(%var_1237, dtype="bool") /* ty=Tensor[(5, 13, 13), bool] */;
    %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %717 = cast(meta[relay.Constant][59] /* ty=Tensor[(60), uint32] */, dtype="uint32") /* ty=Tensor[(60), uint32] */;
    %718 = cast(%var_1255, dtype="float32") /* ty=Tensor[(180), float32] */;
    %719 = cast(meta[relay.Constant][60] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
    %720 = cast(%var_1257, dtype="int8") /* ty=Tensor[(1568), int8] */;
    %721 = reshape(%717, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), uint32] */;
    %722 = reshape(%718, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %723 = reshape(%719, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %724 = reshape(%720, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
    %725 = @func_690(%721, %722, %723, %724) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 7, 14), int8], Tensor[(1568), int8], Tensor[(2, 2, 15), int16]) */;
    %726 = greater_equal(%715, %716) /* ty=Tensor[(5, 13, 13), bool] */;
    %727 = %725.0;
    (%726, %727, meta[relay.Constant][59] /* ty=Tensor[(60), uint32] */, %var_1255, meta[relay.Constant][60] /* ty=Tensor[(896), bool] */, %var_1257)
  };
  %728(%var_1260, %var_1261, %var_1262) /* ty=(Tensor[(5, 13, 13), bool], Tensor[(15, 4, 3), float32], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(1568), int8]) */
}

def @func_9002(%var_8961: Tensor[(12, 4, 5), float64], %var_8988: Tensor[(896), bool], %var_8997: Tensor[(864), bool]) -> (Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32], int8, Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(864), bool], Tensor[(12, 4, 5), int64]) {
  %729 = cast(meta[relay.Constant][61] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %730 = cast(%var_8988, dtype="bool") /* ty=Tensor[(896), bool] */;
  %731 = reshape(%729, newshape=[]) /* ty=int8 */;
  %732 = reshape(%730, newshape=[896]) /* ty=Tensor[(896), bool] */;
  %733 = @func_7401(%731, %732) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(42), float32], Tensor[(13, 65), int64], Tensor[(180), float32], int8, Tensor[(896), bool]) */;
  %734 = cast(%var_8997, dtype="bool") /* ty=Tensor[(864), bool] */;
  %735 = cast(%var_8997, dtype="bool") /* ty=Tensor[(864), bool] */;
  %736 = cast(%var_8988, dtype="bool") /* ty=Tensor[(896), bool] */;
  %737 = reshape(%734, newshape=[6, 12, 12]) /* ty=Tensor[(6, 12, 12), bool] */;
  %738 = reshape(%735, newshape=[6, 12, 12]) /* ty=Tensor[(6, 12, 12), bool] */;
  %739 = reshape(%736, newshape=[2, 448]) /* ty=Tensor[(2, 448), bool] */;
  %740 = @func_7786(%737, %738, %739) /* ty=(Tensor[(6, 12, 12), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(28, 32), bool], Tensor[(11, 14, 12), float32], Tensor[(2, 448), int16]) */;
  %741 = cast(%var_8961, dtype="float64") /* ty=Tensor[(12, 4, 5), float64] */;
  %742 = sinh(%741) /* ty=Tensor[(12, 4, 5), float64] */;
  %743 = cast(%742, dtype="int8") /* ty=Tensor[(12, 4, 5), int8] */;
  %744 = shape_of(%var_8961, dtype="int32") /* ty=Tensor[(3), int32] */;
  %745 = cast(%var_8961, dtype="int8") /* ty=Tensor[(12, 4, 5), int8] */;
  %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %747 = left_shift(%745, %746) /* ty=Tensor[(12, 4, 5), int8] */;
  %748 = cast(%747, dtype="uint32") /* ty=Tensor[(12, 4, 5), uint32] */;
  %749 = shape_of(%742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%742, dtype="uint32") /* ty=Tensor[(12, 4, 5), uint32] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %752 = bitwise_xor(%750, %751) /* ty=Tensor[(12, 4, 5), uint32] */;
  %753 = cast(%742, dtype="int64") /* ty=Tensor[(12, 4, 5), int64] */;
  %754 = shape_of(%752, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(%752, dtype="int64") /* ty=Tensor[(12, 4, 5), int64] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %757 = @func_5249() /* ty=Tensor[(11, 14, 12), bool] */;
  %758 = %733.0;
  %759 = %740.2;
  %760 = maximum(%755, %756) /* ty=Tensor[(12, 4, 5), int64] */;
  (%757, %758, meta[relay.Constant][61] /* ty=int8 */, %var_8988, %759, %var_8997, %760)
}

def @func_8004(%var_8000: Tensor[(1568), int8], %var_8001: Tensor[(135), float64], %var_8002: Tensor[(896), bool], %var_8003: Tensor[(630), float32]) -> (Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(135), int32], Tensor[(1, 135), float64], Tensor[(896), bool], Tensor[(15, 3, 14), bool], Tensor[(210, 1), float32], Tensor[(630), float32]) {
  @func_7998(%var_8000, %var_8001, %var_8002, %var_8003) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(135), int32], Tensor[(1, 135), float64], Tensor[(896), bool], Tensor[(15, 3, 14), bool], Tensor[(210, 1), float32], Tensor[(630), float32]) */
}

def @func_6141() -> (Tensor[(11, 14, 12), float32],) {
  %761 = @func_5900() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %762 = %761.0;
  (%762,)
}

def @func_4205(%var_4202: Tensor[(14, 3, 1), float32], %var_4203: int8, %var_4204: Tensor[(896), bool]) -> (Tensor[(11, 14, 12), float32], Tensor[(4, 9, 2), float64], Tensor[(72), float64], Tensor[(7, 8, 12), int32], int8, Tensor[(672), int8], Tensor[(180, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(14, 3, 1), float32], Tensor[(14, 3, 1), float32]) {
  %788 = fn (%var_4104: Tensor[(14, 3, 1), float32], %var_4142: int8, %var_4149: Tensor[(896), bool]) -> (Tensor[(11, 14, 12), float32], Tensor[(4, 9, 2), float64], Tensor[(72), float64], Tensor[(7, 8, 12), int32], int8, Tensor[(672), int8], Tensor[(180, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(14, 3, 1), float32], Tensor[(14, 3, 1), float32]) {
    %763 = cast(meta[relay.Constant][62] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
    %764 = reshape(%763, newshape=[4, 9, 2]) /* ty=Tensor[(4, 9, 2), float64] */;
    %765 = cast(%var_4142, dtype="int8") /* ty=int8 */;
    %766 = cast(meta[relay.Constant][63] /* ty=Tensor[(672), int8] */, dtype="int8") /* ty=Tensor[(672), int8] */;
    %767 = cast(meta[relay.Constant][64] /* ty=Tensor[(180, 1), float32] */, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
    %768 = reshape(%765, newshape=[]) /* ty=int8 */;
    %769 = reshape(%766, newshape=[7, 8, 12]) /* ty=Tensor[(7, 8, 12), int8] */;
    %770 = reshape(%767, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %771 = @func_449(%768, %769, %770) /* ty=(Tensor[(7, 8, 12), bool], Tensor[(7, 8, 12), float32], Tensor[(7, 8, 12), int32], Tensor[(16, 7, 8), bool], Tensor[(2880), float64], Tensor[(180), float32], Tensor[(16, 7, 8), bool]) */;
    %772 = cast(%var_4149, dtype="bool") /* ty=Tensor[(896), bool] */;
    %773 = reshape(%772, newshape=[16, 7, 8]) /* ty=Tensor[(16, 7, 8), bool] */;
    %774 = @func_151(%773) /* ty=(Tensor[(16, 7, 8), bool], Tensor[(16, 7, 8), bool]) */;
    %775 = cast(%var_4104, dtype="float32") /* ty=Tensor[(14, 3, 1), float32] */;
    %776 = tan(%775) /* ty=Tensor[(14, 3, 1), float32] */;
    %777 = cast(%776, dtype="float64") /* ty=Tensor[(14, 3, 1), float64] */;
    %778 = asinh(%777) /* ty=Tensor[(14, 3, 1), float64] */;
    %779 = cast(%778, dtype="float32") /* ty=Tensor[(14, 3, 1), float32] */;
    %780 = cast(%778, dtype="float32") /* ty=Tensor[(14, 3, 1), float32] */;
    %781 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
    %782 = @func_2822(%764) /* ty=Tensor[(4, 9, 2), float64] */;
    %783 = %771.2;
    %784 = %774.0;
    %785 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
    %786 = asin(%779) /* ty=Tensor[(14, 3, 1), float32] */;
    %787 = sinh(%780) /* ty=Tensor[(14, 3, 1), float32] */;
    (%781, %782, meta[relay.Constant][62] /* ty=Tensor[(72), float64] */, %783, %var_4142, meta[relay.Constant][63] /* ty=Tensor[(672), int8] */, meta[relay.Constant][64] /* ty=Tensor[(180, 1), float32] */, %784, %var_4149, %785, %786, %787)
  };
  %788(%var_4202, %var_4203, %var_4204) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(4, 9, 2), float64], Tensor[(72), float64], Tensor[(7, 8, 12), int32], int8, Tensor[(672), int8], Tensor[(180, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(14, 3, 1), float32], Tensor[(14, 3, 1), float32]) */
}

def @func_2211(%var_2209: Tensor[(12, 2, 10), float64]) -> Tensor[(12, 2, 10), float64] {
  @func_2208(%var_2209) /* ty=Tensor[(12, 2, 10), float64] */
}

def @func_8173() -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  @func_8171() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */
}

def @func_9234(%var_9231: Tensor[(16, 2, 12), float32], %var_9232: uint32, %var_9233: Tensor[(2100), uint16]) -> (Tensor[(11, 14, 12), float32], Tensor[(16, 2, 12), float32], Tensor[(8, 2, 11), uint32], uint32, Tensor[(2100), uint16]) {
  %803 = fn (%var_9186: Tensor[(16, 2, 12), float32], %var_9221: uint32, %var_9222: Tensor[(2100), uint16]) -> (Tensor[(11, 14, 12), float32], Tensor[(16, 2, 12), float32], Tensor[(8, 2, 11), uint32], uint32, Tensor[(2100), uint16]) {
    %789 = @func_8205() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
    %790 = cast(%var_9186, dtype="float32") /* ty=Tensor[(16, 2, 12), float32] */;
    %791 = erf(%790) /* ty=Tensor[(16, 2, 12), float32] */;
    %792 = cast(%791, dtype="float32") /* ty=Tensor[(16, 2, 12), float32] */;
    %793 = rsqrt(%792) /* ty=Tensor[(16, 2, 12), float32] */;
    %794 = cast(%793, dtype="float32") /* ty=Tensor[(16, 2, 12), float32] */;
    %795 = cast(%var_9221, dtype="uint32") /* ty=uint32 */;
    %796 = cast(%var_9222, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
    %797 = reshape(%795, newshape=[]) /* ty=uint32 */;
    %798 = reshape(%796, newshape=[30, 70]) /* ty=Tensor[(30, 70), uint16] */;
    %799 = @func_6827(%797, %798) /* ty=(Tensor[(8, 2, 11), uint32], Tensor[(11, 14, 12), float32], Tensor[(15, 14, 10), bool], Tensor[(30, 70), uint16]) */;
    %800 = %789.1;
    %801 = sigmoid(%794) /* ty=Tensor[(16, 2, 12), float32] */;
    %802 = %799.0;
    (%800, %801, %802, %var_9221, %var_9222)
  };
  %803(%var_9231, %var_9232, %var_9233) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(16, 2, 12), float32], Tensor[(8, 2, 11), uint32], uint32, Tensor[(2100), uint16]) */
}

def @func_4089() -> Tensor[(11, 14, 12), float32] {
  %804 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %805 = cast(meta[relay.Constant][65] /* ty=Tensor[(11, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %806 = shape_of(%804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(%804, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%807, %808) /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_7429() -> (Tensor[(11, 14, 12), float32],) {
  %811 = fn () -> (Tensor[(11, 14, 12), float32],) {
    %809 = @func_5732() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %810 = %809.0;
    (%810,)
  };
  %811() /* ty=(Tensor[(11, 14, 12), float32],) */
}

def @func_5443() -> (Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float64], Tensor[(1568), int8]) {
  %812 = @func_5389() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
  %813 = cast(meta[relay.Constant][66] /* ty=Tensor[(1568), int8] */, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %814 = reshape(%813, newshape=[16, 7, 14]) /* ty=Tensor[(16, 7, 14), int8] */;
  %815 = @func_534(%814) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(9, 15, 1), float64], Tensor[(135), float64]) */;
  %816 = %812.0;
  %817 = %815.1;
  (%816, %817, meta[relay.Constant][66] /* ty=Tensor[(1568), int8] */)
}

def @func_3460(%var_3448: Tensor[(5, 4, 6), uint16], %var_3449: Tensor[(5, 4, 6), uint16]) -> (Tensor[(5, 4, 6), uint16], Tensor[(5, 4, 6), float64]) {
  %818 = cast(%var_3449, dtype="uint16") /* ty=Tensor[(5, 4, 6), uint16] */;
  %819 = shape_of(%var_3448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %820 = cast(%var_3448, dtype="uint16") /* ty=Tensor[(5, 4, 6), uint16] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %822 = cast(%var_3448, dtype="float64") /* ty=Tensor[(5, 4, 6), float64] */;
  %823 = right_shift(%820, %821) /* ty=Tensor[(5, 4, 6), uint16] */;
  %824 = asin(%822) /* ty=Tensor[(5, 4, 6), float64] */;
  (%823, %824)
}

def @func_6926() -> (Tensor[(11, 14, 12), float32],) {
  @func_6924() /* ty=(Tensor[(11, 14, 12), float32],) */
}

def @func_7173(%var_7171: Tensor[(42), float32], %var_7172: int8) -> (Tensor[(11, 14, 12), float32], Tensor[(16, 7, 8), bool], Tensor[(42), float32], int8, Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
  %839 = fn (%var_7156: Tensor[(42), float32], %var_7157: int8) -> (Tensor[(11, 14, 12), float32], Tensor[(16, 7, 8), bool], Tensor[(42), float32], int8, Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) {
    %825 = @func_5240() /* ty=(Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) */;
    %826 = cast(%var_7156, dtype="float32") /* ty=Tensor[(42), float32] */;
    %827 = cast(%var_7157, dtype="int8") /* ty=int8 */;
    %828 = cast(meta[relay.Constant][67] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
    %829 = reshape(%826, newshape=[14, 3, 1]) /* ty=Tensor[(14, 3, 1), float32] */;
    %830 = reshape(%827, newshape=[]) /* ty=int8 */;
    %831 = reshape(%828, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %832 = @func_4201(%829, %830, %831) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(4, 9, 2), float64], Tensor[(72), float64], Tensor[(7, 8, 12), int32], int8, Tensor[(672), int8], Tensor[(180, 1), float32], Tensor[(16, 7, 8), bool], Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(14, 3, 1), float32], Tensor[(14, 3, 1), float32]) */;
    %833 = @func_5900() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %834 = @func_5900() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %835 = %825.1;
    %836 = %832.7;
    %837 = %833.0;
    %838 = %834.0;
    (%835, %836, %var_7156, %var_7157, meta[relay.Constant][67] /* ty=Tensor[(896), bool] */, %837, %838)
  };
  %839(%var_7171, %var_7172) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(16, 7, 8), bool], Tensor[(42), float32], int8, Tensor[(896), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */
}

def @func_3973(%var_3949: Tensor[(11, 14, 12), float32], %var_3967: Tensor[(11, 14, 12), bool]) -> Tensor[(11, 14, 12), uint64] {
  %840 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %841 = cast(%var_3949, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %842 = shape_of(%840, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(%840, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %845 = logical_and(%843, %844) /* ty=Tensor[(11, 14, 12), bool] */;
  %846 = cast(%var_3967, dtype="uint64") /* ty=Tensor[(11, 14, 12), uint64] */;
  %847 = shape_of(%845, dtype="int32") /* ty=Tensor[(3), int32] */;
  %848 = cast(%845, dtype="uint64") /* ty=Tensor[(11, 14, 12), uint64] */;
  %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  left_shift(%848, %849) /* ty=Tensor[(11, 14, 12), uint64] */
}

def @func_6777() -> (Tensor[(11, 14, 12), float32],) {
  @func_6775() /* ty=(Tensor[(11, 14, 12), float32],) */
}

def @func_6364(%var_6362: Tensor[(11, 14, 12), float32]) -> (Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) {
  @func_6361(%var_6362) /* ty=(Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) */
}

def @func_7309() -> (Tensor[(11, 14, 12), float32],) {
  %850 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
  %851 = %850.0;
  %852 = cast(%851, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %853 = sin(%852) /* ty=Tensor[(11, 14, 12), float32] */;
  (%853,)
}

def @func_4401(%var_4399: Tensor[(60), uint32], %var_4400: Tensor[(180), float32]) -> (Tensor[(11, 14, 12), uint64], Tensor[(11, 14, 12), float32], Tensor[(896), bool], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(1568), int8], Tensor[(1568), int8], Tensor[(480), float64], Tensor[(845), int64], Tensor[(5, 4, 6), float64], Tensor[(120), uint16]) {
  %886 = fn (%var_4365: Tensor[(60), uint32], %var_4366: Tensor[(180), float32]) -> (Tensor[(11, 14, 12), uint64], Tensor[(11, 14, 12), float32], Tensor[(896), bool], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(1568), int8], Tensor[(1568), int8], Tensor[(480), float64], Tensor[(845), int64], Tensor[(5, 4, 6), float64], Tensor[(120), uint16]) {
    %854 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
    %855 = cast(%854, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
    %856 = cast(%854, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
    %857 = reshape(%855, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), float32] */;
    %858 = reshape(%856, newshape=[11, 14, 12]) /* ty=Tensor[(11, 14, 12), bool] */;
    %859 = cast(%854, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
    %860 = cast(%var_4365, dtype="uint32") /* ty=Tensor[(60), uint32] */;
    %861 = cast(%var_4366, dtype="float32") /* ty=Tensor[(180), float32] */;
    %862 = cast(meta[relay.Constant][68] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
    %863 = cast(meta[relay.Constant][69] /* ty=Tensor[(1568), int8] */, dtype="int8") /* ty=Tensor[(1568), int8] */;
    %864 = reshape(%860, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), uint32] */;
    %865 = reshape(%861, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %866 = reshape(%862, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %867 = reshape(%863, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
    %868 = @func_690(%864, %865, %866, %867) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 7, 14), int8], Tensor[(1568), int8], Tensor[(2, 2, 15), int16]) */;
    %869 = cast(meta[relay.Constant][70] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
    %870 = cast(meta[relay.Constant][71] /* ty=Tensor[(845), int64] */, dtype="int64") /* ty=Tensor[(845), int64] */;
    %871 = cast(%var_4366, dtype="float32") /* ty=Tensor[(180), float32] */;
    %872 = reshape(%869, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), float64] */;
    %873 = reshape(%870, newshape=[845]) /* ty=Tensor[(845), int64] */;
    %874 = reshape(%871, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %875 = @func_3230(%872, %873, %874) /* ty=(Tensor[(15, 2, 16), float64], Tensor[(5, 13, 13), bool], Tensor[(845), int64], Tensor[(180), float32], Tensor[(1568), int8]) */;
    %876 = cast(meta[relay.Constant][72] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
    %877 = cast(meta[relay.Constant][72] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
    %878 = reshape(%876, newshape=[5, 4, 6]) /* ty=Tensor[(5, 4, 6), uint16] */;
    %879 = reshape(%877, newshape=[5, 4, 6]) /* ty=Tensor[(5, 4, 6), uint16] */;
    %880 = @func_3460(%878, %879) /* ty=(Tensor[(5, 4, 6), uint16], Tensor[(5, 4, 6), float64]) */;
    %881 = @func_3973(%857, %858) /* ty=Tensor[(11, 14, 12), uint64] */;
    %882 = asin(%859) /* ty=Tensor[(11, 14, 12), float32] */;
    %883 = %868.2;
    %884 = %875.4;
    %885 = %880.1;
    (%881, %882, %883, %var_4365, %var_4366, meta[relay.Constant][68] /* ty=Tensor[(896), bool] */, meta[relay.Constant][69] /* ty=Tensor[(1568), int8] */, %884, meta[relay.Constant][70] /* ty=Tensor[(480), float64] */, meta[relay.Constant][71] /* ty=Tensor[(845), int64] */, %885, meta[relay.Constant][72] /* ty=Tensor[(120), uint16] */)
  };
  %886(%var_4399, %var_4400) /* ty=(Tensor[(11, 14, 12), uint64], Tensor[(11, 14, 12), float32], Tensor[(896), bool], Tensor[(60), uint32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(1568), int8], Tensor[(1568), int8], Tensor[(480), float64], Tensor[(845), int64], Tensor[(5, 4, 6), float64], Tensor[(120), uint16]) */
}

def @func_5090(%var_5089: Tensor[(11, 14, 12), float32]) -> (Tensor[(11, 14, 12), int32], Tensor[(11, 14, 12), float32]) {
  %895 = fn (%var_5050: Tensor[(11, 14, 12), float32]) -> (Tensor[(11, 14, 12), int32], Tensor[(11, 14, 12), float32]) {
    %887 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
    %888 = cast(%var_5050, dtype="int32") /* ty=Tensor[(11, 14, 12), int32] */;
    %889 = shape_of(%887, dtype="int32") /* ty=Tensor[(3), int32] */;
    %890 = cast(%887, dtype="int32") /* ty=Tensor[(11, 14, 12), int32] */;
    %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %892 = cast(%var_5050, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
    %893 = bitwise_xor(%890, %891) /* ty=Tensor[(11, 14, 12), int32] */;
    %894 = cos(%892) /* ty=Tensor[(11, 14, 12), float32] */;
    (%893, %894)
  };
  %895(%var_5089) /* ty=(Tensor[(11, 14, 12), int32], Tensor[(11, 14, 12), float32]) */
}

def @func_6121(%var_6119: uint64, %var_6120: Tensor[(6, 7, 8), uint64]) -> (Tensor[(6, 7, 8), uint64],) {
  @func_6117(%var_6119, %var_6120) /* ty=(Tensor[(6, 7, 8), uint64],) */
}

def @func_9764(%var_9762: Tensor[(180), float32]) -> (Tensor[(11, 14, 12), bool], Tensor[(336, 2), float64], Tensor[(180), float32]) {
  @func_9761(%var_9762) /* ty=(Tensor[(11, 14, 12), bool], Tensor[(336, 2), float64], Tensor[(180), float32]) */
}

def @func_7504(%var_7503: int8) -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], int8, Tensor[(896), bool]) {
  %904 = fn (%var_7499: int8) -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], int8, Tensor[(896), bool]) {
    %896 = @func_6924() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %897 = cast(%var_7499, dtype="int8") /* ty=int8 */;
    %898 = cast(meta[relay.Constant][73] /* ty=Tensor[(896), bool] */, dtype="bool") /* ty=Tensor[(896), bool] */;
    %899 = reshape(%897, newshape=[]) /* ty=int8 */;
    %900 = reshape(%898, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %901 = @func_7401(%899, %900) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(42), float32], Tensor[(13, 65), int64], Tensor[(180), float32], int8, Tensor[(896), bool]) */;
    %902 = %896.0;
    %903 = %901.0;
    (%902, %903, %var_7499, meta[relay.Constant][73] /* ty=Tensor[(896), bool] */)
  };
  %904(%var_7503) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], int8, Tensor[(896), bool]) */
}

def @func_7564() -> (Tensor[(11, 14, 12), float32],) {
  %906 = fn () -> (Tensor[(11, 14, 12), float32],) {
    %905 = @func_6048() /* ty=Tensor[(11, 14, 12), float32] */;
    (%905,)
  };
  %906() /* ty=(Tensor[(11, 14, 12), float32],) */
}

def @func_8460() -> (Tensor[(11, 14, 12), float32], Tensor[(15, 4, 3), float32]) {
  %911 = fn () -> (Tensor[(11, 14, 12), float32], Tensor[(15, 4, 3), float32]) {
    %907 = @func_8205() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
    %908 = @func_7281() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(15, 4, 3), float32], Tensor[(30, 2), uint32], Tensor[(180), float32], Tensor[(448, 2), bool], Tensor[(1568), int8]) */;
    %909 = %907.0;
    %910 = %908.1;
    (%909, %910)
  };
  %911() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(15, 4, 3), float32]) */
}

def @func_9977() -> (Tensor[(11, 14, 12), float32],) {
  @func_9975() /* ty=(Tensor[(11, 14, 12), float32],) */
}

def @func_6062() -> Tensor[(11, 14, 12), float32] {
  %912 = fn () -> Tensor[(11, 14, 12), float32] {
    @func_6048() /* ty=Tensor[(11, 14, 12), float32] */
  };
  %912() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_9078(%var_9077: Tensor[(150, 14), uint16]) -> (Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), bool], Tensor[(9, 15, 1), float64], Tensor[(8, 2, 11), uint32], uint32, Tensor[(150, 14), uint16], Tensor[(11, 14, 12), float32]) {
  %926 = fn (%var_9058: Tensor[(150, 14), uint16]) -> (Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), bool], Tensor[(9, 15, 1), float64], Tensor[(8, 2, 11), uint32], uint32, Tensor[(150, 14), uint16], Tensor[(11, 14, 12), float32]) {
    %913 = @func_5997() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %914 = @func_7136() /* ty=(Tensor[(9, 15, 1), float64], Tensor[(11, 14, 12), float32], Tensor[(1848), float32]) */;
    %915 = cast(meta[relay.Constant][74] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %916 = cast(%var_9058, dtype="uint16") /* ty=Tensor[(150, 14), uint16] */;
    %917 = reshape(%915, newshape=[]) /* ty=uint32 */;
    %918 = reshape(%916, newshape=[30, 70]) /* ty=Tensor[(30, 70), uint16] */;
    %919 = @func_6827(%917, %918) /* ty=(Tensor[(8, 2, 11), uint32], Tensor[(11, 14, 12), float32], Tensor[(15, 14, 10), bool], Tensor[(30, 70), uint16]) */;
    %920 = @func_5249() /* ty=Tensor[(11, 14, 12), bool] */;
    %921 = %913.0;
    %922 = @func_5249() /* ty=Tensor[(11, 14, 12), bool] */;
    %923 = %914.0;
    %924 = %919.0;
    %925 = @func_4089() /* ty=Tensor[(11, 14, 12), float32] */;
    (%920, %921, %922, %923, %924, meta[relay.Constant][74] /* ty=uint32 */, %var_9058, %925)
  };
  %926(%var_9077) /* ty=(Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), bool], Tensor[(9, 15, 1), float64], Tensor[(8, 2, 11), uint32], uint32, Tensor[(150, 14), uint16], Tensor[(11, 14, 12), float32]) */
}

def @func_5240() -> (Tensor[(11, 14, 12), bool], Tensor[(11, 14, 12), float32]) {
  %927 = @func_4800() /* ty=Tensor[(11, 14, 12), float32] */;
  %928 = @func_4800() /* ty=Tensor[(11, 14, 12), float32] */;
  %929 = cast(%928, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %930 = shape_of(%927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(%927, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %933 = power(%931, %932) /* ty=Tensor[(11, 14, 12), float32] */;
  %934 = cast(%933, dtype="float32") /* ty=Tensor[(11, 14, 12), float32] */;
  %935 = atan(%934) /* ty=Tensor[(11, 14, 12), float32] */;
  %936 = cast(%933, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %937 = shape_of(%935, dtype="int32") /* ty=Tensor[(3), int32] */;
  %938 = cast(%935, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
  %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %940 = equal(%938, %939) /* ty=Tensor[(11, 14, 12), bool] */;
  %941 = @func_4800() /* ty=Tensor[(11, 14, 12), float32] */;
  (%940, %941)
}

def @func_5878(%var_5867: Tensor[(15, 14, 10), uint16], %var_5868: Tensor[(15, 14, 10), uint16]) -> Tensor[(15, 14, 10), bool] {
  %942 = cast(%var_5868, dtype="bool") /* ty=Tensor[(15, 14, 10), bool] */;
  %943 = shape_of(%var_5867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %944 = cast(%var_5867, dtype="bool") /* ty=Tensor[(15, 14, 10), bool] */;
  %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%944, %945) /* ty=Tensor[(15, 14, 10), bool] */
}

def @func_2875(%var_2873: Tensor[(4, 3, 10), float64], %var_2874: Tensor[(4, 3, 10), float64]) -> (Tensor[(4, 3, 10), bool],) {
  @func_2871(%var_2873, %var_2874) /* ty=(Tensor[(4, 3, 10), bool],) */
}

def @func_6902(%var_6894: Tensor[(11, 14, 12), float32]) -> (Tensor[(11, 14, 12), uint8],) {
  %946 = @func_3874() /* ty=Tensor[(11, 14, 12), float32] */;
  %947 = cast(%var_6894, dtype="uint8") /* ty=Tensor[(11, 14, 12), uint8] */;
  %948 = shape_of(%946, dtype="int32") /* ty=Tensor[(3), int32] */;
  %949 = cast(%946, dtype="uint8") /* ty=Tensor[(11, 14, 12), uint8] */;
  %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %951 = subtract(%949, %950) /* ty=Tensor[(11, 14, 12), uint8] */;
  (%951,)
}

def @func_9933() -> Tensor[(11, 14, 12), float32] {
  @func_8929() /* ty=Tensor[(11, 14, 12), float32] */
}

def @func_9761(%var_9753: Tensor[(180), float32]) -> (Tensor[(11, 14, 12), bool], Tensor[(336, 2), float64], Tensor[(180), float32]) {
  %952 = @func_9438() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), bool]) */;
  %953 = cast(%var_9753, dtype="float32") /* ty=Tensor[(180), float32] */;
  %954 = reshape(%953, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %955 = @func_4619(%954) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(7, 8, 12), bool], int8, Tensor[(180), float32], Tensor[(336, 2), float64]) */;
  %956 = %952.1;
  %957 = %955.4;
  (%956, %957, %var_9753)
}

def @func_9869(%var_9868: Tensor[(896), bool]) -> (Tensor[(11, 14, 12), float32], Tensor[(210, 1), float32], Tensor[(4, 392), int8], Tensor[(630), float32], Tensor[(11, 14, 12), float32], Tensor[(9, 15, 896), bool], Tensor[(7, 8, 12), bool], Tensor[(180), float32]) {
  %982 = fn (%var_9835: Tensor[(896), bool]) -> (Tensor[(11, 14, 12), float32], Tensor[(210, 1), float32], Tensor[(4, 392), int8], Tensor[(630), float32], Tensor[(11, 14, 12), float32], Tensor[(9, 15, 896), bool], Tensor[(7, 8, 12), bool], Tensor[(180), float32]) {
    %958 = cast(meta[relay.Constant][75] /* ty=Tensor[(4, 392), int8] */, dtype="int8") /* ty=Tensor[(4, 392), int8] */;
    %959 = cast(%var_9835, dtype="bool") /* ty=Tensor[(896), bool] */;
    %960 = reshape(%959, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %961 = @func_7938(%960) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(896), bool], Tensor[(9, 15, 1), float64], Tensor[(1, 135), float64]) */;
    %962 = %961.4;
    %963 = cast(%962, dtype="float64") /* ty=Tensor[(9, 15, 1), float64] */;
    %964 = cast(%var_9835, dtype="bool") /* ty=Tensor[(896), bool] */;
    %965 = cast(meta[relay.Constant][76] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
    %966 = reshape(%958, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
    %967 = reshape(%963, newshape=[135]) /* ty=Tensor[(135), float64] */;
    %968 = reshape(%964, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %969 = reshape(%965, newshape=[630]) /* ty=Tensor[(630), float32] */;
    %970 = @func_7998(%966, %967, %968, %969) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(135), int32], Tensor[(1, 135), float64], Tensor[(896), bool], Tensor[(15, 3, 14), bool], Tensor[(210, 1), float32], Tensor[(630), float32]) */;
    %971 = @func_5732() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %972 = cast(%962, dtype="bool") /* ty=Tensor[(9, 15, 1), bool] */;
    %973 = cast(%var_9835, dtype="bool") /* ty=Tensor[(896), bool] */;
    %974 = cast(meta[relay.Constant][77] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %975 = reshape(%974, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %976 = @func_4619(%975) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(7, 8, 12), bool], int8, Tensor[(180), float32], Tensor[(336, 2), float64]) */;
    %977 = @func_6490() /* ty=Tensor[(11, 14, 12), float32] */;
    %978 = %970.6;
    %979 = %971.0;
    %980 = less_equal(%972, %973) /* ty=Tensor[(9, 15, 896), bool] */;
    %981 = %976.1;
    (%977, %978, meta[relay.Constant][75] /* ty=Tensor[(4, 392), int8] */, meta[relay.Constant][76] /* ty=Tensor[(630), float32] */, %979, %980, %981, meta[relay.Constant][77] /* ty=Tensor[(180), float32] */)
  };
  %982(%var_9868) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(210, 1), float32], Tensor[(4, 392), int8], Tensor[(630), float32], Tensor[(11, 14, 12), float32], Tensor[(9, 15, 896), bool], Tensor[(7, 8, 12), bool], Tensor[(180), float32]) */
}

def @func_7282() -> (Tensor[(11, 14, 12), float32], Tensor[(15, 4, 3), float32], Tensor[(30, 2), uint32], Tensor[(180), float32], Tensor[(448, 2), bool], Tensor[(1568), int8]) {
  %995 = fn () -> (Tensor[(11, 14, 12), float32], Tensor[(15, 4, 3), float32], Tensor[(30, 2), uint32], Tensor[(180), float32], Tensor[(448, 2), bool], Tensor[(1568), int8]) {
    %983 = @func_5389() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32]) */;
    %984 = cast(meta[relay.Constant][78] /* ty=Tensor[(30, 2), uint32] */, dtype="uint32") /* ty=Tensor[(30, 2), uint32] */;
    %985 = cast(meta[relay.Constant][79] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %986 = cast(meta[relay.Constant][80] /* ty=Tensor[(448, 2), bool] */, dtype="bool") /* ty=Tensor[(448, 2), bool] */;
    %987 = cast(meta[relay.Constant][81] /* ty=Tensor[(1568), int8] */, dtype="int8") /* ty=Tensor[(1568), int8] */;
    %988 = reshape(%984, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), uint32] */;
    %989 = reshape(%985, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %990 = reshape(%986, newshape=[896]) /* ty=Tensor[(896), bool] */;
    %991 = reshape(%987, newshape=[1568]) /* ty=Tensor[(1568), int8] */;
    %992 = @func_690(%988, %989, %990, %991) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(180), float32], Tensor[(896), bool], Tensor[(16, 7, 14), int8], Tensor[(1568), int8], Tensor[(2, 2, 15), int16]) */;
    %993 = %983.1;
    %994 = %992.0;
    (%993, %994, meta[relay.Constant][78] /* ty=Tensor[(30, 2), uint32] */, meta[relay.Constant][79] /* ty=Tensor[(180), float32] */, meta[relay.Constant][80] /* ty=Tensor[(448, 2), bool] */, meta[relay.Constant][81] /* ty=Tensor[(1568), int8] */)
  };
  %995() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(15, 4, 3), float32], Tensor[(30, 2), uint32], Tensor[(180), float32], Tensor[(448, 2), bool], Tensor[(1568), int8]) */
}

def @func_5674(%var_5672: Tensor[(1568), int8], %var_5673: Tensor[(11, 14, 12), float64]) -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(16, 8, 13), bool], uint16, Tensor[(11, 14, 12), bool]) {
  %1014 = fn (%var_5635: Tensor[(1568), int8], %var_5666: Tensor[(11, 14, 12), float64]) -> (Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(16, 8, 13), bool], uint16, Tensor[(11, 14, 12), bool]) {
    %996 = @func_4017() /* ty=(Tensor[(11, 14, 12), float32],) */;
    %997 = cast(%var_5635, dtype="int8") /* ty=Tensor[(1568), int8] */;
    %998 = reshape(%997, newshape=[1, 1568]) /* ty=Tensor[(1, 1568), int8] */;
    %999 = @func_5171(%998) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(9, 15, 1), float64], Tensor[(1, 1568), int8]) */;
    %1000 = cast(meta[relay.Constant][82] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %1001 = reshape(%1000, newshape=[]) /* ty=uint16 */;
    %1002 = @func_3344(%1001) /* ty=(Tensor[(16, 8, 13), bool],) */;
    %1003 = @func_5249() /* ty=Tensor[(11, 14, 12), bool] */;
    %1004 = cast(%1003, dtype="float64") /* ty=Tensor[(11, 14, 12), float64] */;
    %1005 = rsqrt(%1004) /* ty=Tensor[(11, 14, 12), float64] */;
    %1006 = cast(%var_5666, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
    %1007 = shape_of(%1005, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1008 = cast(%1005, dtype="bool") /* ty=Tensor[(11, 14, 12), bool] */;
    %1009 = dyn.reshape(%1006, %1007, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1010 = %996.0;
    %1011 = %999.0;
    %1012 = %1002.0;
    %1013 = greater_equal(%1008, %1009) /* ty=Tensor[(11, 14, 12), bool] */;
    (%1010, %1011, %var_5635, %1012, meta[relay.Constant][82] /* ty=uint16 */, %1013)
  };
  %1014(%var_5672, %var_5673) /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), float32], Tensor[(1568), int8], Tensor[(16, 8, 13), bool], uint16, Tensor[(11, 14, 12), bool]) */
}

def @func_8045() -> (Tensor[(11, 14, 12), uint64],) {
  %1017 = fn () -> (Tensor[(11, 14, 12), uint64],) {
    %1015 = @func_6610() /* ty=(Tensor[(11, 14, 12), float32], Tensor[(11, 14, 12), uint64]) */;
    %1016 = %1015.1;
    (%1016,)
  };
  %1017() /* ty=(Tensor[(11, 14, 12), uint64],) */
}

def @func_151(%var_140: Tensor[(16, 7, 8), bool]) -> (Tensor[(16, 7, 8), bool], Tensor[(16, 7, 8), bool]) {
  %1018 = cast(meta[relay.Constant][84] /* ty=Tensor[(16, 7, 8), bool] */, dtype="bool") /* ty=Tensor[(16, 7, 8), bool] */;
  %1019 = shape_of(meta[relay.Constant][83] /* ty=Tensor[(16, 7, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1020 = cast(meta[relay.Constant][83] /* ty=Tensor[(16, 7, 8), bool] */, dtype="bool") /* ty=Tensor[(16, 7, 8), bool] */;
  %1021 = dyn.reshape(%1018, %1019, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1022 = cast(%var_140, dtype="bool") /* ty=Tensor[(16, 7, 8), bool] */;
  %1023 = shape_of(meta[relay.Constant][84] /* ty=Tensor[(16, 7, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1024 = cast(meta[relay.Constant][84] /* ty=Tensor[(16, 7, 8), bool] */, dtype="bool") /* ty=Tensor[(16, 7, 8), bool] */;
  %1025 = dyn.reshape(%1022, %1023, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1026 = logical_or(%1020, %1021) /* ty=Tensor[(16, 7, 8), bool] */;
  %1027 = greater(%1024, %1025) /* ty=Tensor[(16, 7, 8), bool] */;
  (%1026, %1027)
}

def @func_5251() -> Tensor[(11, 14, 12), bool] {
  @func_5249() /* ty=Tensor[(11, 14, 12), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen429/build/output.py:2621: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen429/build/output.py", line 2626, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(6) tvmgen_default_fused_atanh_kernel0(double* __restrict__ T_atanh, double* __restrict__ placeholder) {
  T_atanh[(((int)threadIdx.x))] = atanh(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


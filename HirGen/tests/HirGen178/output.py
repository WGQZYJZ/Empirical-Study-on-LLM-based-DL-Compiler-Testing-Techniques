import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_123 = relay.var("var_123", dtype = "float64", shape = ())#candidate|123|()|var|float64
var_124 = relay.var("var_124", dtype = "float64", shape = (4, 7, 6))#candidate|124|(4, 7, 6)|var|float64
bop_125 = relay.greater_equal(var_123.astype('bool'), var_124.astype('bool')) # shape=(4, 7, 6)
bop_147 = relay.mod(var_123.astype('float32'), bop_125.astype('float32')) # shape=(4, 7, 6)
uop_159 = relay.cosh(bop_125.astype('float32')) # shape=(4, 7, 6)
var_162 = relay.var("var_162", dtype = "float32", shape = (4, 7, 6))#candidate|162|(4, 7, 6)|var|float32
bop_163 = relay.right_shift(uop_159.astype('uint8'), relay.reshape(var_162.astype('uint8'), relay.shape_of(uop_159))) # shape=(4, 7, 6)
uop_166 = relay.tan(uop_159.astype('float32')) # shape=(4, 7, 6)
uop_187 = relay.sinh(bop_147.astype('float64')) # shape=(4, 7, 6)
bop_194 = relay.floor_divide(uop_166.astype('float32'), relay.reshape(bop_125.astype('float32'), relay.shape_of(uop_166))) # shape=(4, 7, 6)
bop_218 = relay.greater(bop_163.astype('bool'), relay.reshape(var_124.astype('bool'), relay.shape_of(bop_163))) # shape=(4, 7, 6)
bop_238 = relay.left_shift(uop_166.astype('int16'), relay.reshape(bop_218.astype('int16'), relay.shape_of(uop_166))) # shape=(4, 7, 6)
output = relay.Tuple([uop_187,bop_194,bop_238,])
output2 = relay.Tuple([uop_187,bop_194,bop_238,])
func_242 = relay.Function([var_123,var_124,var_162,], output)
mod['func_242'] = func_242
mod = relay.transform.InferType()(mod)
var_243 = relay.var("var_243", dtype = "float64", shape = ())#candidate|243|()|var|float64
var_244 = relay.var("var_244", dtype = "float64", shape = (4, 7, 6))#candidate|244|(4, 7, 6)|var|float64
var_245 = relay.var("var_245", dtype = "float32", shape = (4, 7, 6))#candidate|245|(4, 7, 6)|var|float32
output = func_242(var_243,var_244,var_245,)
func_246 = relay.Function([var_243,var_244,var_245,], output)
mutated_mod['func_246'] = func_246
mutated_mod = relay.transform.InferType()(mutated_mod)
var_435 = relay.var("var_435", dtype = "float32", shape = (11, 9, 6))#candidate|435|(11, 9, 6)|var|float32
uop_436 = relay.log2(var_435.astype('float32')) # shape=(11, 9, 6)
var_440 = relay.var("var_440", dtype = "float32", shape = (11, 9, 6))#candidate|440|(11, 9, 6)|var|float32
bop_441 = relay.floor_mod(uop_436.astype('float32'), relay.reshape(var_440.astype('float32'), relay.shape_of(uop_436))) # shape=(11, 9, 6)
func_242_call = mod.get_global_var('func_242')
func_246_call = mutated_mod.get_global_var('func_246')
const_457 = relay.const(3.127629, dtype = "float64")#candidate|457|()|const|float64
const_458 = relay.const([-5.817672,2.623857,5.324671,7.156724,7.546929,6.842316,-2.316230,-9.296060,-2.901351,6.388136,-2.942234,4.216658,-6.476506,9.406648,8.694332,-4.401088,-7.519582,-6.480529,8.603338,2.037685,5.016234,3.885251,-0.498508,-9.554790,1.262452,4.587499,0.551287,7.823771,0.613250,-7.376632,7.196916,-0.800306,-2.293923,2.605725,6.596996,-9.477592,7.987397,-0.964674,6.981026,-3.739708,7.131602,-6.611024,1.269705,-9.003167,-5.030419,9.898589,3.347387,7.596617,-0.733464,-4.432966,1.974862,-0.244699,-8.198254,-0.317194,7.725634,-6.486366,-0.577607,-4.517554,-4.108268,-1.403577,2.579206,-9.877518,-4.784850,-3.699047,-1.193919,-3.344884,5.846235,-0.413776,2.155592,-8.051280,-9.454789,0.517996,6.033242,-3.115127,2.774593,4.069952,-0.086102,9.892806,1.507541,2.290500,-2.057201,-7.183816,-5.850541,-5.062116,9.924626,2.545784,2.782414,0.868702,-4.477129,2.421666,-6.667196,-1.823016,-5.919564,8.725203,6.721604,-4.893086,-3.385864,0.552745,2.533375,4.422023,-4.689775,-8.495827,4.989613,4.186189,4.023304,9.152126,4.035678,-7.637418,-3.757797,7.015832,-7.568602,6.556315,-3.073585,-9.382195,-1.355833,7.193609,-3.764914,0.432591,8.580811,6.467777,9.610275,-7.707165,-9.727144,-9.534194,1.307628,-7.734049,2.079326,-8.570592,-2.328288,-6.230595,-0.038392,-3.177519,3.906941,4.344346,-7.374679,-1.072117,2.571384,-5.965504,2.626182,-2.520165,-3.643015,8.733147,9.854233,-3.331072,-0.587932,-1.403098,-5.519675,6.501328,-3.463486,-8.720913,5.489232,-5.192637,7.539200,-0.231600,-4.800810,7.661894,4.427371,-7.367060,2.349817,-4.087746,1.219111,-2.370548,9.633643,-8.252701,-0.176759,-5.257496,0.431536,5.591247], dtype = "float64")#candidate|458|(168,)|const|float64
call_456 = relay.TupleGetItem(func_242_call(relay.reshape(const_457.astype('float64'), []), relay.reshape(const_458.astype('float64'), [4, 7, 6]), relay.reshape(const_458.astype('float32'), [4, 7, 6]), ), 0)
call_459 = relay.TupleGetItem(func_246_call(relay.reshape(const_457.astype('float64'), []), relay.reshape(const_458.astype('float64'), [4, 7, 6]), relay.reshape(const_458.astype('float32'), [4, 7, 6]), ), 0)
uop_461 = relay.erf(bop_441.astype('float32')) # shape=(11, 9, 6)
func_242_call = mod.get_global_var('func_242')
func_246_call = mutated_mod.get_global_var('func_246')
call_469 = relay.TupleGetItem(func_242_call(relay.reshape(const_457.astype('float64'), []), relay.reshape(call_456.astype('float64'), [4, 7, 6]), relay.reshape(const_458.astype('float32'), [4, 7, 6]), ), 1)
call_470 = relay.TupleGetItem(func_246_call(relay.reshape(const_457.astype('float64'), []), relay.reshape(call_456.astype('float64'), [4, 7, 6]), relay.reshape(const_458.astype('float32'), [4, 7, 6]), ), 1)
bop_478 = relay.bitwise_xor(uop_461.astype('int16'), relay.reshape(bop_441.astype('int16'), relay.shape_of(uop_461))) # shape=(11, 9, 6)
uop_481 = relay.sigmoid(bop_441.astype('float64')) # shape=(11, 9, 6)
uop_496 = relay.sin(bop_478.astype('float32')) # shape=(11, 9, 6)
output = relay.Tuple([call_456,const_457,const_458,call_469,uop_481,uop_496,])
output2 = relay.Tuple([call_459,const_457,const_458,call_470,uop_481,uop_496,])
func_542 = relay.Function([var_435,var_440,], output)
mod['func_542'] = func_542
mod = relay.transform.InferType()(mod)
mutated_mod['func_542'] = func_542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_542_call = mutated_mod.get_global_var('func_542')
var_544 = relay.var("var_544", dtype = "float32", shape = (11, 9, 6))#candidate|544|(11, 9, 6)|var|float32
var_545 = relay.var("var_545", dtype = "float32", shape = (11, 9, 6))#candidate|545|(11, 9, 6)|var|float32
call_543 = func_542_call(var_544,var_545,)
output = call_543
func_546 = relay.Function([var_544,var_545,], output)
mutated_mod['func_546'] = func_546
mutated_mod = relay.transform.InferType()(mutated_mod)
var_559 = relay.var("var_559", dtype = "float32", shape = ())#candidate|559|()|var|float32
var_560 = relay.var("var_560", dtype = "float32", shape = (10, 13, 12))#candidate|560|(10, 13, 12)|var|float32
bop_561 = relay.add(var_559.astype('float32'), var_560.astype('float32')) # shape=(10, 13, 12)
func_242_call = mod.get_global_var('func_242')
func_246_call = mutated_mod.get_global_var('func_246')
const_567 = relay.const([9.587535,1.802810,-6.740055,-9.789315,7.780998,-6.606081,-4.005136,8.704932,-1.881700,-0.820356,-0.980064,3.793887,-2.979325,-6.051593,8.301657,-8.511319,6.944599,-8.282496,0.040424,-3.620262,5.905034,2.561952,-2.350045,-9.286518,-8.738073,3.873015,-7.151618,1.928095,-6.477017,9.747632,0.746700,-1.277453,1.517596,-6.522675,-1.898208,2.436640,6.016236,9.145073,6.482861,4.707362,-7.700207,-7.863311,5.804175,5.973465,5.068920,-4.849460,-5.498712,-8.951183,8.230897,-1.828859,3.744564,0.426961,4.266015,-1.352677,2.460156,-3.363229,-2.006141,-8.105430,-9.675596,-8.351375,-5.320156,-1.716322,7.724680,-0.998968,-6.318860,-5.089115,-1.474833,-5.922804,-8.528273,-1.374373,-8.202130,3.218741,-8.672637,7.552515,1.213532,-4.132768,-5.232065,8.782090,5.668502,-7.324321,-2.930748,5.867600,0.741483,-6.475414,-4.750918,6.205415,7.273096,-1.377004,-0.020874,-6.623349,5.994390,-7.746479,-7.268885,8.380732,9.066999,6.318914,8.190507,2.852441,-1.958182,-9.634414,-1.846297,-4.567205,1.299911,7.439331,-3.805360,3.609212,8.958854,4.120745,4.247835,9.283567,-8.541132,2.703183,-5.059467,-6.063601,-2.839899,4.047007,-1.272480,6.650386,-3.742484,-1.827613,-0.592902,-7.273374,7.753503,4.568675,1.669051,1.550176,3.645987,2.468942,8.316287,6.654002,-4.116829,3.299753,-9.015861,-4.001463,1.804663,4.423524,0.537831,1.270843,4.516418,7.402020,-2.692553,-4.005929,1.561678,5.518736,-7.071675,6.157906,6.775237,0.810265,7.675234,3.897903,-2.305410,-3.980130,-3.590016,-1.822901,9.479767,-7.996345,2.385078,2.755965,-9.766456,7.305121,1.535916,-4.535009,7.688384,-9.032802,2.935355,-9.076030,-6.409111,3.904916], dtype = "float64")#candidate|567|(168,)|const|float64
call_566 = relay.TupleGetItem(func_242_call(relay.reshape(var_559.astype('float64'), []), relay.reshape(const_567.astype('float64'), [4, 7, 6]), relay.reshape(const_567.astype('float32'), [4, 7, 6]), ), 2)
call_568 = relay.TupleGetItem(func_246_call(relay.reshape(var_559.astype('float64'), []), relay.reshape(const_567.astype('float64'), [4, 7, 6]), relay.reshape(const_567.astype('float32'), [4, 7, 6]), ), 2)
func_542_call = mod.get_global_var('func_542')
func_546_call = mutated_mod.get_global_var('func_546')
var_570 = relay.var("var_570", dtype = "float32", shape = (594,))#candidate|570|(594,)|var|float32
call_569 = relay.TupleGetItem(func_542_call(relay.reshape(var_570.astype('float32'), [11, 9, 6]), relay.reshape(var_570.astype('float32'), [11, 9, 6]), ), 0)
call_571 = relay.TupleGetItem(func_546_call(relay.reshape(var_570.astype('float32'), [11, 9, 6]), relay.reshape(var_570.astype('float32'), [11, 9, 6]), ), 0)
output = relay.Tuple([bop_561,call_566,const_567,call_569,var_570,])
output2 = relay.Tuple([bop_561,call_568,const_567,call_571,var_570,])
func_575 = relay.Function([var_559,var_560,var_570,], output)
mod['func_575'] = func_575
mod = relay.transform.InferType()(mod)
mutated_mod['func_575'] = func_575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_575_call = mutated_mod.get_global_var('func_575')
var_577 = relay.var("var_577", dtype = "float32", shape = ())#candidate|577|()|var|float32
var_578 = relay.var("var_578", dtype = "float32", shape = (10, 13, 12))#candidate|578|(10, 13, 12)|var|float32
var_579 = relay.var("var_579", dtype = "float32", shape = (594,))#candidate|579|(594,)|var|float32
call_576 = func_575_call(var_577,var_578,var_579,)
output = call_576
func_580 = relay.Function([var_577,var_578,var_579,], output)
mutated_mod['func_580'] = func_580
mutated_mod = relay.transform.InferType()(mutated_mod)
var_590 = relay.var("var_590", dtype = "float64", shape = (3, 13, 4))#candidate|590|(3, 13, 4)|var|float64
uop_591 = relay.acos(var_590.astype('float64')) # shape=(3, 13, 4)
uop_595 = relay.atan(uop_591.astype('float64')) # shape=(3, 13, 4)
bop_598 = relay.logical_or(uop_595.astype('bool'), relay.reshape(uop_591.astype('bool'), relay.shape_of(uop_595))) # shape=(3, 13, 4)
func_575_call = mod.get_global_var('func_575')
func_580_call = mutated_mod.get_global_var('func_580')
const_618 = relay.const(6.908434, dtype = "float32")#candidate|618|()|const|float32
const_619 = relay.const([-4.708462,-1.161898,4.144302,8.878700,1.530993,-7.033348,-6.695628,-8.232658,2.265048,4.291450,-1.074322,1.453630,-0.068562,-9.459027,-4.003516,-2.696392,5.093537,5.183784,8.781081,-3.805595,-4.409486,-4.404381,-1.660906,2.772883,-5.890426,-1.018753,-0.863076,-2.789553,3.179070,-5.820923,-4.672915,-5.987157,-6.553163,-1.173358,-3.492952,-9.833105,0.556803,-4.585109,8.601461,2.583078,-4.349406,5.523562,-2.411537,1.287884,-9.363177,1.880538,1.380159,-3.005286,1.694303,8.909266,-4.428389,-1.869590,1.112194,1.014150,-8.999200,-9.767839,-8.037719,7.994087,1.481103,-6.097382,1.936055,7.174271,-1.254609,-2.842594,-7.075886,6.236896,1.683940,1.024433,-8.273293,-9.397869,1.672043,-2.538525,-9.584031,-2.816972,-7.866692,2.793316,-6.588173,-3.926975,7.265325,2.330853,9.119979,-2.068826,-4.174573,0.446579,-1.960298,-4.737573,-1.787899,7.353254,-4.707623,-7.527337,8.530053,-5.013869,-2.933428,-3.202061,6.916966,-4.010000,-3.713992,-5.286952,-9.582294,-4.423045,9.830372,-5.935025,8.989907,-5.715142,-3.434477,-6.430637,-6.797155,1.675405,-0.829124,-6.309218,3.426230,-7.419399,7.348883,5.666716,-1.135141,-6.540033,-8.172610,9.716942,5.404163,3.345800,-6.239017,3.031264,4.858525,-6.036694,-3.376566,8.544169,6.390796,0.947295,-4.919749,-3.831121,-6.466739,-2.059529,9.027466,-1.586685,5.978192,-1.652005,-8.247398,1.519866,6.985295,5.112931,-7.241429,8.178567,-0.673911,0.310999,3.848618,6.433292,-5.992360,-2.213012,7.943050,-4.536371,3.119716,-8.383066,-9.192168,1.698078,0.815498,6.660089,9.724117,1.379978,-0.987219,7.460812,-4.253194,2.689204,-3.095630,9.825514,8.779057,0.883574,-0.461030,-6.671374,5.363604,-7.189005,-3.801507,-5.360664,1.919776,8.191332,-9.708151,8.220672,9.984342,-5.654543,3.782083,9.920470,7.138139,9.390288,-4.298554,6.976222,4.805323,5.641471,0.151632,5.984292,0.184965,-4.034177,8.149316,9.183093,8.888071,4.813763,5.790014,7.767650,6.805027,-9.868203,-0.290284,5.046683,-0.957559,5.065981,-0.576672,-9.532663,4.562319,-2.943744,-8.891999,5.471850,7.410220,-6.146423,0.311821,9.038207,-1.099287,-9.389680,3.403039,-2.189176,-0.160096,-3.233895,5.626385,1.347254,5.475798,8.084698,8.238871,4.509885,1.524722,5.762949,5.281039,2.112384,-2.106976,-6.600016,0.301597,7.860989,-0.928429,0.214873,-2.451029,-0.895647,-3.444163,-0.440384,-8.182908,-3.746373,6.130970,-1.051492,-0.699351,5.734799,-9.844985,8.900418,-7.363338,1.690070,-9.026250,-6.208824,1.527144,-6.228702,5.775240,9.715755,4.023656,4.186101,3.968639,4.273561,-6.131592,2.100793,1.170006,-5.222735,7.548900,-4.906200,-4.776625,1.260967,-9.430193,2.228394,-2.225375,7.421959,-5.867919,-6.582710,2.796749,-9.498542,-6.688612,-2.822054,-0.282308,-6.071746,-8.509908,9.519998,3.613760,9.181186,-9.347749,7.068253,8.382994,-9.048532,-8.202229,-9.857623,1.670482,4.073814,-5.234705,8.855039,-8.975618,-4.066668,-3.065348,-6.507543,-9.468066,9.605566,-8.036727,4.117269,-0.228206,-5.125664,6.935606,-4.573332,9.523519,-8.436721,6.931744,-2.039704,8.631072,-6.741860,-4.587974,-9.291379,-0.201836,1.164065,-0.403017,1.336797,9.595443,9.355638,-8.517264,5.605634,2.148422,2.232084,2.506780,7.585073,-5.983244,-4.833193,-1.807901,-2.937201,4.900760,9.634297,-9.766461,-6.455305,-4.768852,-8.954478,6.886860,-0.366950,-5.919817,1.054643,6.447095,-7.291821,-1.630540,-3.272190,5.003749,-6.835976,4.073001,5.960369,-1.549948,8.779737,1.801319,2.281448,4.697561,-3.974972,1.525227,1.058068,-6.742567,-0.391905,-6.858736,7.625170,4.914255,-5.703297,2.975891,1.103279,0.126100,7.347701,-0.057251,5.440318,-9.369519,3.233786,2.324579,7.377857,2.969689,4.218163,-5.038428,6.034808,-6.839313,-2.481616,2.002092,1.251824,-3.991098,-8.422165,6.662581,-9.480995,9.076594,5.207809,-6.398074,-9.351069,-5.977992,-1.511484,-0.847154,8.435985,4.004774,-5.486114,3.531120,-2.387412,-8.965209,-0.309162,-1.550794,-1.213635,1.079006,3.077548,-6.462287,7.236175,4.879866,2.319411,3.713227,-3.375016,6.689537,-9.641853,-7.336524,-9.889052,9.531217,-8.286662,-8.108497,8.378948,-4.612190,4.394954,-9.540496,9.490482,-3.883534,2.256789,5.618680,5.260885,-4.601334,3.066639,-5.404138,-1.787399,1.611744,1.944501,6.931628,6.527957,6.916031,-6.492735,3.409772,9.558224,-3.232983,3.980624,-5.839005,-3.682631,-0.415743,3.386783,-9.940119,-0.580645,-6.990107,0.378914,-9.667138,4.990200,6.262739,9.145123,-5.744639,4.183920,2.832401,-5.284759,9.093749,8.388726,5.401198,-3.332919,-3.295049,8.075065,-7.734460,-7.461025,6.286021,5.191931,7.153019,8.548509,5.150881,-5.284131,3.145548,2.617205,-8.990283,4.924601,6.531530,9.123193,-3.529993,4.230445,9.255621,-8.006715,6.548762,1.695034,-1.011497,-7.817193,7.525174,5.412495,-7.657667,3.843231,8.637040,-9.497214,-9.055809,-1.952227,-5.533076,-3.433499,8.858199,-0.706621,-9.983741,2.812765,-4.992289,-9.289369,-3.874041,-7.548422,-6.639487,9.347167,-6.307894,5.528681,3.414217,-4.145726,6.449181,0.889187,1.041204,1.110813,-7.115383,-5.527081,1.215475,-4.970496,-2.149862,-1.438646,4.983288,-0.809556,8.049219,-3.467277,2.868433,-0.700417,8.169786,6.651491,6.004381,-3.568482,7.751505,-0.051879,-6.853869,9.679096,2.260809,7.701512,4.081274,2.158524,0.494112,-2.716204,-1.244275,5.629470,-7.131250,-8.456976,-6.569267,8.685682,8.605242,-7.254743,9.231503,6.193419,5.336819,2.585725,-8.097462,9.383431,-8.439516,2.501688,-8.543778,3.843907,2.968430,-0.763676,-6.872087,-4.881580,1.024234,9.247849,-7.002930,4.691399,-0.335532,-1.674195,8.682513,-0.421670,6.622883,-1.969616,0.071426,8.426362,0.509883,-1.180723,3.799199,-1.818573,8.206389,9.195910,-3.117510,1.525319,9.294712,2.928407,5.233585,0.158311,7.140842,-3.204126,6.668466,-4.800188,4.683197,-1.028327,5.223588,8.491745,0.206308,-6.787994,5.085602,-1.569917,7.348282,-8.152550,0.661986,-9.816548,4.140280,2.483152,-6.450503,-2.259181,-6.087570,-9.696429,8.462745,-3.061275,6.488682,-9.743575,-8.431539,1.867624,-0.156332,-6.743618,3.927245,4.162990,0.683857,3.868175,-3.479637,6.830890,0.189195,-6.092441,3.225380,0.805181,3.619680,-1.746220,-5.752785,2.887435,1.104578,-2.099548,-1.294916,8.961343,2.305926,8.707784,-2.038637,-1.582617,3.115861,-3.240507,-2.316319,0.822570,2.849791,5.587213,9.676509,4.525332,2.002697,-6.551736,0.134995,9.751780,-4.781720,-8.252361,-2.020080,-0.506235,4.288201,-8.397442,-1.070463,1.571303,0.566435,1.480730,1.792349,0.553024,9.731099,9.779914,-8.211041,2.900818,3.359257,2.939332,-1.445216,6.309402,0.873745,8.323405,4.810856,1.244812,-1.332500,-0.686500,7.144389,-0.898383,1.772928,9.893383,-4.525259,-5.774115,-9.312554,5.627639,-8.417808,-8.931068,2.446183,2.909823,-5.400294,8.509990,-1.561031,8.082935,-6.262828,-2.298006,8.236092,6.200184,-3.231879,0.044086,5.489961,3.487760,-1.174163,4.504698,-1.381954,-5.672904,-5.242239,6.909134,4.263014,-7.689014,-4.351262,2.284048,4.661984,9.869654,5.414072,-0.904805,-2.765871,-2.371648,-1.187970,-7.703425,-4.560055,4.686357,-6.170782,4.445224,7.559124,0.019917,-6.199233,3.925283,9.418615,3.425141,-4.706529,-0.132808,-6.459796,1.095872,-0.028431,2.854923,-1.503389,7.592405,1.744673,3.623276,8.422636,-6.990771,4.404188,1.921397,-9.712046,7.112670,-0.245257,1.635805,-2.499428,8.100609,-1.532756,-2.908419,-9.224382,-9.489493,-1.709955,-7.929098,-2.162849,-2.491981,9.633423,6.271684,-5.541143,-8.228350,-6.583075,9.406207,-4.016443,5.186614,0.285541,5.751799,-6.557936,1.165915,4.985055,-2.451327,-4.452791,-1.029975,-5.559192,-0.496761,-7.470297,1.624755,-2.748218,-6.610407,-8.279883,-6.405926,0.361883,6.212887,8.380577,-4.121868,-2.423716,-0.592699,7.836903,-9.129314,-1.664862,5.211960,2.842542,4.079760,3.072175,-6.678412,-9.205039,-5.822882,6.130818,5.921796,-4.388789,9.603324,-6.103219,-5.542477,-4.696011,6.218102,8.597465,-8.198241,8.142419,-2.664097,8.714788,-1.888038,7.429829,1.998446,-9.990877,7.067284,-6.741789,-8.859113,9.139962,1.337803,2.106930,-0.784556,4.104034,-2.222638,1.712098,8.677441,7.386167,-0.376308,-9.017703,0.846077,-6.674388,-7.572739,-6.409167,8.865589,6.796334,8.301335,8.299407,5.937994,-3.710880,2.152210,-1.916971,-4.302395,3.833436,2.963881,-6.679705,-2.146606,5.423790,-1.337521,5.524499,0.392644,-0.376327,-6.052464,8.357524,-5.838420,7.379131,8.783147,-9.108211,3.243552,-9.379235,-9.884974,-8.129872,7.041170,3.526499,5.792226,2.351949,9.312217,1.011030,7.138557,4.727028,2.825350,6.919718,-1.895116,-2.805558,5.660393,-6.770921,-3.294546,8.731783,0.732200,5.662101,6.236643,8.230743,-2.504117,-9.215239,3.330548,0.498477,-1.454723,0.145321,-7.038007,2.610363,-2.861084,3.209236,-0.693594,-1.011839,6.217200,-4.239601,-4.251753,9.817908,-0.103994,-4.361567,0.093683,-0.582260,3.604509,4.233344,-9.911567,8.740412,-1.272662,3.270292,7.668536,-5.562334,1.725632,-9.646795,8.895342,-0.662005,0.713219,8.794885,-0.155022,0.262118,-9.689965,5.652152,2.843253,0.908403,-2.407742,-0.671541,1.518832,-1.346272,0.706651,-9.323657,8.982791,-8.491549,-7.640019,0.356874,-3.700168,-0.922999,1.198248,1.758431,-1.753239,2.875939,8.265363,9.179048,-0.359090,8.770191,-0.293380,-1.838433,-7.124375,-4.929712,7.495806,9.113956,-2.827894,-3.534432,3.734413,-7.605230,-1.626038,-6.010470,0.555065,-2.689739,-1.460822,7.747438,-2.309807,-8.438243,1.771538,1.256694,-7.722439,-8.673625,-4.075746,2.546880,-6.726142,0.162707,3.388677,-2.236012,1.683923,-0.645000,-4.668393,-5.228248,-6.276610,8.732590,-6.635011,-4.616838,0.015265,7.451418,2.718373,9.302908,1.088291,-8.147301,2.152256,3.799550,-0.868852,-8.048497,-8.231290,0.485901,8.351207,-8.549150,2.345081,-1.674788,4.852211,-4.866380,-7.655749,-1.123572,-3.057780,-8.553025,9.699450,3.086047,-8.073953,-9.649779,-4.107425,5.204375,-9.155660,8.597290,-0.375324,-9.648290,-8.349219,-9.302081,-2.351805,-7.662823,4.229702,-6.072167,-2.281426,-9.852451,9.405445,2.527957,-0.104388,3.889338,-9.897640,-9.081465,3.841046,-4.469494,5.387622,-3.818691,2.328676,6.403446,-4.902150,0.632280,8.424524,0.400327,-1.413224,-8.839691,0.271986,1.838667,7.561819,-1.370055,-8.138581,-7.322954,5.611897,-9.885481,3.091962,2.846103,0.073311,-2.822560,6.751573,-8.250084,9.543263,-2.993024,-1.165080,-5.410064,-1.032494,-0.078953,-3.554693,-7.584641,-4.651035,-8.215608,-7.144686,9.808309,4.476664,-1.039058,8.279124,-1.471826,-8.034561,0.494404,4.292648,-8.031715,-5.295759,-6.389081,7.612700,-3.576014,2.956888,9.880540,-5.395316,-0.038980,-6.572779,-8.982260,3.453017,-9.941928,-0.193984,-0.863093,-3.442614,4.072837,-6.057265,8.311051,-0.894479,1.307248,-7.229643,-4.872114,7.994660,-5.456516,0.487040,4.596205,-3.752516,-6.330094,7.890044,-9.272964,7.684725,-1.074580,3.745537,0.397229,8.372621,-3.124863,9.259440,-2.122096,0.445700,0.844576,-5.536217,3.207036,-6.312383,8.532063,-3.908783,7.811664,7.316966,4.925421,5.775313,-4.274657,2.206740,5.754123,8.032668,3.623882,-8.919651,-8.837586,5.914890,3.490025,2.871960,0.065151,-8.526445,-1.978205,-5.906236,3.034118,-5.814491,-5.812899,-4.748894,2.245692,-3.929697,-5.368190,2.647862,0.362646,-8.836880,-6.043989,8.887677,0.821505,0.415129,9.119400,-5.597769,0.343855,-7.976818,-7.731205,5.153963,6.726875,1.168352,8.102108,-2.036782,3.526457,2.595181,-7.897105,-8.701620,8.379597,2.321371,0.064837,0.021416,1.220335,2.898186,-0.785115,4.946452,-6.664589,8.943891,3.900022,-1.682715,-0.206547,-4.632745,-8.865180,-3.484767,-9.913007,-3.688252,1.130193,4.223312,4.388248,3.542923,5.560824,7.548555,8.691590,3.125683,-1.089906,7.278340,-1.342846,-5.315460,-4.176278,-7.019054,-9.748995,9.464206,-6.443926,-1.271012,3.213105,2.726440,-9.760993,-4.208929,9.691692,-7.533232,6.273074,-0.256816,-2.236395,-3.486352,5.165572,0.452218,1.704512,-8.781463,8.828510,6.542953,-4.384875,-9.860363,-6.384829,-2.387735,-4.850366,7.099193,-7.820783,3.592033,-5.095015,-7.523851,-2.490182,-6.911061,-7.640712,8.154652,7.951189,-0.114368,1.356228,5.827525,2.726015,6.411026,-0.508806,0.283150,-5.557487,8.660412,-6.596899,8.008946,-8.947721,-4.563917,-0.324609,-4.036638,-4.866733,5.704532,6.759809,0.179195,-4.694636,4.100225,-3.705833,8.801142,7.688866,8.949471,-1.517831,9.007231,-1.426942,2.760205,9.564479,7.041807,-9.232973,-0.704651,8.645782,-5.582576,-3.608595,-6.104899,-3.785071,-1.192083,2.240220,1.766372,-4.531700,-6.744544,-2.073679,1.998765,3.448825,-7.485130,3.095244,-5.594625,-9.245334,-6.479968,-2.027141,5.731496,-3.831409,-1.524832,-2.256131,-8.652739,-4.172928,9.305681,-2.932114,1.214975,1.695428,-0.912603,-9.035905,5.598581,4.614993,1.341086,2.263225,9.458167,-6.885653,8.212928,8.941007,6.184068,-0.202347,2.887120,4.204021,-4.675629,-8.081243,5.250662,2.300877,6.588312,-5.823867,-5.460593,-7.681126,-5.195416,-9.049079,7.177137,7.689418,1.281818,6.292931,-6.986721,3.147089,-4.048128,3.300122,-9.667828,-0.760812,-0.707666,2.325549,-8.696287,-9.789849,-0.435460,-0.301070,-5.480885,3.769860,6.666833,-1.366504,3.175814,9.374626,6.701682,-1.498221,9.711414,-8.968039,9.928684,5.376330,8.868217,-7.891933,-3.653720,9.839456,-9.059557,-3.156445,5.842279,-8.646772,8.399881,-8.820516,-1.512522,-9.191638,-0.330089,6.800020,-9.722553,7.127861,-4.995494,-8.964824,4.657366,-6.360259,-9.930756,3.234422,4.527562,-2.535291,3.309816,-8.615532,5.976764,-3.700652,8.076169,-7.454200,-0.020445,4.410973,3.434468,3.093011,0.857604,5.045870,-8.958158,0.976143,-5.980572,-9.216219,6.768734,6.077254,-3.006810,-8.172808,-6.510508,5.932790,-6.636994,7.493334,-8.648880,-0.738004,-4.589481,5.109562,2.871952,5.864848,9.615610,5.051435,-9.197510,9.009505,-2.869617,-6.671378,-3.677560,5.981693,-3.082617,9.493492,6.954280,-3.408175,0.161448,6.927784,-0.228031,-8.802241,-1.757684,-1.638461,-6.940631,1.233752,6.039266,0.838817,-6.448616,6.649884,-6.349622,0.737089,-5.752275,8.294854,-3.036800,-8.353826,5.104796,-2.152031,0.343690,-7.938154,-2.953696,-4.850982,2.566157,-7.840351,3.469385,-1.764413,-1.792675,4.117851,0.482821,-7.668217,1.740716,4.769109,7.329852,8.824401,-3.481625,-1.957361,0.135680,9.882172,0.176987,-7.596025,6.111813,-1.448205,6.592942,-6.109549,-1.979369,-0.787040,-6.725396,8.671487,6.127487,-1.593438,-5.901242,-7.744500,9.745720,8.457979,2.262471,3.197809,-2.453550,-4.030815,-4.344001,7.493711,5.447565,-6.836531,0.808978,1.359569,-7.295007,-2.186840,1.329972,2.440783,-1.902411,2.587395,-8.129284,-8.089645,-4.986508,-1.009802,-4.338809,3.095733,1.277262,0.442900,9.635256,1.522791,-0.049729,3.463771,2.312464,-4.889234,1.707175,6.456891,5.106397,-5.705608,4.634923,-5.181508,-5.661167,7.841474,0.071311,-2.677525,-3.843720,2.691753,-9.439219,-4.753373,1.097197,5.347466,-9.183709,-3.613474,4.475471,9.685796,-0.008572,-9.655400,2.122691,-1.889573,-6.723295,-0.811025,8.135301,5.803678,-9.386708,0.962309,-2.036264,-9.403527,2.884207,-3.787973,2.772875,2.731832,5.702562,8.108013,-3.434713,-6.801474,-3.866098,1.783637,-2.353769,6.846409,-6.747380,-5.638909,-0.939981,7.512138,7.532416,-6.384793,3.255106,-3.521293,3.118045,4.061892,-4.264537,-3.392617,-8.690572,-0.551159,-0.930335,9.678278,-5.629719,7.596971,-4.911180,-9.871409,9.526442,0.922691,7.428223,9.022078,2.211172,-5.350057,-0.689703,-2.565152,-3.451352,0.270889,1.110857], dtype = "float32")#candidate|619|(1560,)|const|float32
const_620 = relay.const([-8.748717,4.753869,8.074422,3.430446,2.365383,-6.897515,0.754390,8.904197,4.972302,-3.901036,9.843325,-5.301037,5.755892,5.954011,7.207183,4.872887,2.396257,8.787076,2.443121,5.300774,3.908793,-6.565254,3.038864,-1.432036,6.641515,-5.624679,5.077735,-8.896401,-7.956226,4.001183,6.840999,1.585373,5.004745,2.293924,2.055488,1.232796,0.390792,1.850864,3.667433,3.684226,-1.918500,7.411494,8.410229,-2.659857,-2.005378,5.531804,0.031841,-7.481997,5.396386,1.571302,-4.653933,8.301575,-8.336074,-4.466003,-7.366940,3.357932,6.196158,-5.495102,-2.759914,0.253976,-9.042996,-8.007018,5.494917,-2.600172,6.185161,-7.268388,-3.946112,7.864135,-6.303762,9.756971,8.875139,-0.327932,6.968688,3.418227,8.150600,-7.120940,-2.732632,8.365147,1.249872,-8.857020,-2.979763,-2.239469,4.830146,5.500643,8.534001,-9.104288,8.959561,-2.588129,-8.336668,-7.363497,-5.132396,4.835026,-0.625821,-9.724378,1.016737,-9.705024,8.305441,-2.662375,-2.875522,8.082836,-6.445803,-2.183271,-0.577914,4.475456,3.524694,-8.512254,-3.817295,-1.512531,1.935409,7.965610,1.523543,-9.148183,-7.710946,6.704213,-1.696537,6.947832,9.751645,9.150224,-5.524682,-1.059008,-9.204252,0.819909,-0.776400,1.421229,-7.714452,-8.271314,-9.720906,2.845010,-1.469580,7.387814,1.551351,8.339863,5.561833,-3.754197,3.689546,6.090876,7.489509,8.700894,-6.859430,6.940694,8.461657,-7.605849,-5.154933,-0.771471,0.941652,-8.170358,-8.356480,3.705084,-6.674223,7.000806,-4.068802,2.308791,8.405926,8.213845,-2.162993,0.827607,8.763701,7.484560,3.656603,-1.106660,-3.453505,7.705095,-9.603008,-7.473897,-3.439078,4.745785,-5.615150,-8.518160,7.322881,7.704737,6.836732,9.005578,-0.476237,-8.050691,-7.287134,-8.880201,1.926016,-1.250435,-3.520493,-2.084852,-6.254780,4.601927,8.369508,4.505159,-2.845227,-9.669730,9.902169,-7.308678,-1.435240,6.449340,1.833825,2.444628,3.129428,-0.260269,-6.958976,-9.382903,-1.863677,2.889415,3.888395,-4.271071,1.575871,3.936027,-7.826507,6.429506,8.785285,-1.452914,-4.861335,3.465929,2.479577,-0.633582,4.381499,-5.363126,-9.727566,8.403793,-0.742449,8.336136,-4.805611,-3.874863,-0.995328,0.892769,-9.005291,-3.501255,-6.128273,-0.714287,-3.839020,9.394330,0.851415,3.085344,-5.300803,-3.649810,9.616723,-5.155963,-6.358947,-4.162370,-9.238172,-3.349977,1.211697,-9.185142,6.260762,4.852595,3.565652,9.872024,9.393909,-9.099505,4.349685,-3.937272,2.233343,-8.748020,-3.528903,-9.883558,-3.602551,4.884873,-6.071110,1.051265,3.815560,5.999330,-5.888678,8.932217,9.861801,9.784620,-5.094421,7.478138,-7.650008,-5.788292,5.811044,-8.034455,0.639232,7.489527,6.624922,0.881106,-0.762630,8.061975,5.269392,-8.604233,-5.813904,8.575804,8.293635,-5.112537,-0.387010,-1.095885,-3.849445,-7.908949,5.481922,6.899383,-5.205079,7.907371,1.679839,4.303896,2.068596,9.729299,5.776142,9.137508,-7.949501,1.153199,-7.566312,-5.131218,-1.047067,-0.257817,-5.775170,-3.873255,7.230565,4.811501,-7.527971,1.236334,-4.470410,6.860861,-2.151242,4.471374,5.066730,3.099419,-8.708316,-1.397667,-4.062992,-6.527834,-7.226581,-1.418108,-3.350048,-8.961032,-2.865758,7.400863,-7.416375,5.387524,9.988017,9.783648,7.131215,-8.290453,-9.434009,-9.449152,7.747632,-4.940463,2.449479,1.479036,-7.277443,-1.056393,-7.920654,-6.866180,-6.242350,4.540560,-3.196148,-5.097679,8.981035,2.196962,1.236668,5.504810,2.507365,-8.796765,-2.848193,-4.890103,9.056554,1.219909,-1.319301,0.091368,9.585451,-3.431872,6.884603,2.989738,3.729598,8.404724,-6.735544,-5.805244,-2.310798,-1.560143,-0.135699,7.616582,3.457645,2.643485,-7.913253,3.518752,1.411795,1.582626,-1.477119,-1.793996,-5.279224,4.225752,-8.172683,-4.322057,-4.887087,3.098334,2.222817,5.311096,9.723896,3.942583,3.683949,-6.565438,-1.223905,3.671546,-3.978790,0.839874,0.604447,-2.745346,-3.465356,-1.360714,7.218332,7.317066,3.456402,-2.031955,-5.501362,-1.051666,-8.621584,-7.262551,5.732037,5.015748,1.317960,-0.263061,9.766773,-9.114516,0.820964,1.648029,-0.172946,7.165213,3.141517,4.603363,1.669626,6.654791,-6.999722,0.179323,4.347507,9.034964,4.730293,-0.091375,-2.892231,-7.076876,9.114482,3.756696,-7.471687,2.743247,-8.408013,5.020241,9.791682,7.228897,3.710306,5.309665,0.063834,5.565590,-6.620011,-0.562417,9.712838,-9.029571,-5.187483,-7.298845,-1.241844,-1.685582,-2.066997,5.087562,-7.948630,0.053935,8.613789,-5.293642,-5.393183,6.972107,8.359104,1.795609,-5.607063,-1.354499,6.848066,9.235581,-1.769576,-0.017616,-8.374805,-1.695794,-8.970953,-5.953879,-8.178613,8.990506,-3.140492,4.876763,-0.436246,-7.683576,-5.354185,8.883175,-7.436862,-0.848466,-8.946546,3.830026,-4.244396,4.816196,-3.203528,-3.124590,-5.783294,8.357655,-5.138019,8.578550,3.630477,0.181883,-2.339220,-2.671063,0.924968,8.036655,4.139169,-7.658368,6.648094,9.888409,4.302352,-3.345123,1.712534,3.929843,5.299553,-0.845922,-2.941666,-1.635635,-7.486736,9.402564,3.434777,1.416769,-0.904047,-9.342200,3.779829,5.490893,2.267807,-7.574985,5.218143,-6.247263,-3.993597,0.521625,-4.863935,1.524133,-0.405628,0.869610,-0.222100,1.817860,-1.793662,-0.282297,3.034603,6.453058,4.241545,3.063459,9.277086,7.112806,-9.446694,-1.299675,6.687683,3.806552,1.202820,3.738396,6.351473,-7.797868,4.199888,9.308417,-0.048775,3.751645,-0.840361,-3.272090,8.883871,-5.316091,-5.060618,-2.255488,-0.956642,-1.709047,-7.777895,8.090865,-1.731144,-5.071886,-9.561630,-3.057278,-1.055980,6.297157,-7.296885,-2.678718,4.015991,9.571203,7.037978,6.494882,4.735120,2.290881,-6.319491,9.515111,-5.118036,-8.414726,9.239144,5.987751,-0.896226,-8.205491,-8.379546,-6.247585,8.468537,-8.607398,-8.019698,8.082699,5.609993,8.569758,7.888705,-3.503904,-2.090381,9.911678,3.514135,1.985878,0.233720,-2.384139,-8.423485,6.379344,-6.126042,4.152776,-1.656717,-8.102565], dtype = "float32")#candidate|620|(594,)|const|float32
call_617 = relay.TupleGetItem(func_575_call(relay.reshape(const_618.astype('float32'), []), relay.reshape(const_619.astype('float32'), [10, 13, 12]), relay.reshape(const_620.astype('float32'), [594,]), ), 4)
call_621 = relay.TupleGetItem(func_580_call(relay.reshape(const_618.astype('float32'), []), relay.reshape(const_619.astype('float32'), [10, 13, 12]), relay.reshape(const_620.astype('float32'), [594,]), ), 4)
output = relay.Tuple([bop_598,call_617,const_618,const_619,const_620,])
output2 = relay.Tuple([bop_598,call_621,const_618,const_619,const_620,])
func_622 = relay.Function([var_590,], output)
mod['func_622'] = func_622
mod = relay.transform.InferType()(mod)
mutated_mod['func_622'] = func_622
mutated_mod = relay.transform.InferType()(mutated_mod)
var_623 = relay.var("var_623", dtype = "float64", shape = (3, 13, 4))#candidate|623|(3, 13, 4)|var|float64
func_622_call = mutated_mod.get_global_var('func_622')
call_624 = func_622_call(var_623)
output = call_624
func_625 = relay.Function([var_623], output)
mutated_mod['func_625'] = func_625
mutated_mod = relay.transform.InferType()(mutated_mod)
const_706 = relay.const([[[-9,3],[10,9],[4,-3],[-9,-7],[7,9],[-9,-10]],[[-8,5],[9,6],[-4,-10],[-2,2],[-4,4],[-9,-8]],[[-1,2],[9,4],[4,-7],[-5,-3],[-1,-5],[-3,-10]],[[2,-10],[7,9],[5,9],[-3,3],[-2,-10],[-5,-8]],[[-7,1],[10,7],[-7,4],[7,1],[5,7],[-5,-5]],[[1,4],[10,2],[4,9],[7,7],[7,6],[-7,5]],[[7,1],[-10,-8],[4,9],[-5,3],[-4,-5],[-10,-5]],[[-6,-10],[-7,6],[-7,-7],[3,-10],[-9,-1],[9,6]],[[-10,-6],[-5,-7],[9,-7],[-2,-2],[10,-6],[3,10]],[[-4,-6],[8,-8],[-5,9],[5,-3],[5,3],[-3,-8]],[[4,-5],[-1,-1],[-9,10],[1,6],[-4,5],[10,8]],[[-10,-3],[-7,5],[5,8],[-9,1],[-8,-5],[-2,-4]]], dtype = "int64")#candidate|706|(12, 6, 2)|const|int64
var_707 = relay.var("var_707", dtype = "int64", shape = (12, 6, 2))#candidate|707|(12, 6, 2)|var|int64
bop_708 = relay.left_shift(const_706.astype('int64'), relay.reshape(var_707.astype('int64'), relay.shape_of(const_706))) # shape=(12, 6, 2)
output = bop_708
output2 = bop_708
func_715 = relay.Function([var_707,], output)
mod['func_715'] = func_715
mod = relay.transform.InferType()(mod)
mutated_mod['func_715'] = func_715
mutated_mod = relay.transform.InferType()(mutated_mod)
var_716 = relay.var("var_716", dtype = "int64", shape = (12, 6, 2))#candidate|716|(12, 6, 2)|var|int64
func_715_call = mutated_mod.get_global_var('func_715')
call_717 = func_715_call(var_716)
output = call_717
func_718 = relay.Function([var_716], output)
mutated_mod['func_718'] = func_718
mutated_mod = relay.transform.InferType()(mutated_mod)
const_758 = relay.const([[[2.685567,-1.520227,8.843499],[-3.125097,-0.768894,6.541818],[-7.472072,6.574337,8.591786],[-3.383734,-2.540042,8.430031],[7.200439,7.361131,-2.122039],[9.988237,-4.799300,1.632250],[4.795638,-3.155599,-0.463403],[-2.571802,-2.946308,7.941837],[9.107753,7.804970,-9.456216]],[[-6.631950,-1.902161,-8.694030],[-4.008268,-7.633953,-3.435399],[-9.202985,5.936698,8.540603],[-9.689671,-0.337893,6.746692],[5.977493,1.394656,-3.762566],[1.175446,-9.126282,8.685976],[9.928950,-9.569776,-0.923496],[6.839298,-7.105524,4.635833],[-6.351782,8.794427,-7.075560]],[[-9.356100,-3.275294,-6.371717],[7.018203,5.437860,3.481941],[3.756858,-4.793807,-0.696517],[-8.928083,7.887814,-6.862447],[-1.770730,-1.482008,8.030655],[-9.154403,-4.479705,-6.043291],[7.772961,6.927078,7.958525],[7.945712,8.196851,-6.989249],[-1.254132,4.016883,-6.784853]],[[-9.388317,-3.946500,-9.029862],[0.920152,-8.796542,5.785679],[7.450954,-8.374391,2.509163],[8.273296,-3.716979,-3.897607],[3.354375,3.023013,-7.681308],[-9.484901,-8.963597,-4.438034],[1.734024,1.880078,9.705265],[-4.181207,-7.518028,9.583087],[-7.828102,-8.260246,9.399849]],[[9.978222,-7.442618,2.941201],[-1.133610,3.657233,0.739338],[-2.491427,-3.365973,-4.611823],[-5.043768,-5.283864,4.109042],[8.622112,-1.205261,8.942367],[-8.369376,-6.136191,6.203548],[-3.493704,-8.295640,6.516526],[1.359517,-2.432537,1.347198],[7.100597,3.410790,-3.121412]]], dtype = "float32")#candidate|758|(5, 9, 3)|const|float32
uop_759 = relay.rsqrt(const_758.astype('float32')) # shape=(5, 9, 3)
const_763 = relay.const([[[-0.134261,-1.626105,-4.277219],[6.605662,7.383149,9.794673],[7.342250,8.498171,-1.724624],[0.666499,8.874392,-3.075773],[9.806943,-4.480692,2.591504],[-0.459811,-7.413980,2.142641],[-2.644564,-2.661818,-5.178697],[-7.720033,-1.185945,-9.748600],[-0.991676,7.763796,6.931538]],[[-0.057886,-5.793639,8.176774],[-2.381056,-3.926327,-5.604094],[-1.331954,-7.311252,-0.661329],[-1.892615,-0.913477,-8.627721],[-9.444917,-3.007425,-3.687738],[5.961536,-5.833671,-2.375229],[-3.558684,9.511705,6.786637],[-2.794138,-2.365154,-1.739026],[1.942855,-9.345657,4.138259]],[[-8.769254,8.745363,8.225731],[-0.375306,-8.011391,-8.730859],[-5.014527,-9.292297,0.966554],[1.649915,8.851659,-9.071430],[-2.401175,-1.584899,8.619447],[5.983624,9.549759,8.009098],[8.365426,-9.945683,-3.307017],[-0.734887,9.252651,9.035249],[-8.040661,-1.700553,-1.111491]],[[8.096641,-0.670610,7.212432],[4.641985,2.379139,2.785463],[0.154388,-2.963865,4.709966],[-8.669099,-8.514652,-6.045909],[3.709188,-6.472370,-5.619279],[-5.456996,-4.751722,6.225489],[1.983004,-8.601564,-6.595483],[7.420376,-8.423428,8.479115],[-6.028366,4.981645,4.026410]],[[-0.378049,-2.995081,-3.287382],[-9.624622,-1.410593,7.756525],[-8.136291,-4.424183,4.772526],[4.620067,-3.771347,-6.815158],[3.487550,-1.442311,8.945572],[-7.636589,-4.489050,7.185683],[1.077994,0.599425,-6.862134],[3.259780,9.826374,0.098282],[-4.919560,4.463916,3.642493]]], dtype = "float32")#candidate|763|(5, 9, 3)|const|float32
bop_764 = relay.bitwise_and(const_758.astype('uint8'), relay.reshape(const_763.astype('uint8'), relay.shape_of(const_758))) # shape=(5, 9, 3)
bop_772 = relay.multiply(uop_759.astype('uint8'), relay.reshape(bop_764.astype('uint8'), relay.shape_of(uop_759))) # shape=(5, 9, 3)
output = bop_772
output2 = bop_772
func_775 = relay.Function([], output)
mod['func_775'] = func_775
mod = relay.transform.InferType()(mod)
output = func_775()
func_776 = relay.Function([], output)
mutated_mod['func_776'] = func_776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_817 = func_775_call()
call_818 = func_775_call()
func_542_call = mod.get_global_var('func_542')
func_546_call = mutated_mod.get_global_var('func_546')
var_822 = relay.var("var_822", dtype = "float32", shape = (594,))#candidate|822|(594,)|var|float32
call_821 = relay.TupleGetItem(func_542_call(relay.reshape(var_822.astype('float32'), [11, 9, 6]), relay.reshape(var_822.astype('float32'), [11, 9, 6]), ), 1)
call_823 = relay.TupleGetItem(func_546_call(relay.reshape(var_822.astype('float32'), [11, 9, 6]), relay.reshape(var_822.astype('float32'), [11, 9, 6]), ), 1)
uop_838 = relay.cosh(call_817.astype('float32')) # shape=(5, 9, 3)
uop_840 = relay.cosh(call_818.astype('float32')) # shape=(5, 9, 3)
var_841 = relay.var("var_841", dtype = "uint8", shape = (5, 9, 3))#candidate|841|(5, 9, 3)|var|uint8
bop_842 = relay.logical_or(call_817.astype('bool'), relay.reshape(var_841.astype('bool'), relay.shape_of(call_817))) # shape=(5, 9, 3)
bop_845 = relay.logical_or(call_818.astype('bool'), relay.reshape(var_841.astype('bool'), relay.shape_of(call_818))) # shape=(5, 9, 3)
func_575_call = mod.get_global_var('func_575')
func_580_call = mutated_mod.get_global_var('func_580')
var_847 = relay.var("var_847", dtype = "float32", shape = (1560, 1))#candidate|847|(1560, 1)|var|float32
call_846 = relay.TupleGetItem(func_575_call(relay.reshape(call_821.astype('float32'), []), relay.reshape(var_847.astype('float32'), [10, 13, 12]), relay.reshape(var_822.astype('float32'), [594,]), ), 0)
call_848 = relay.TupleGetItem(func_580_call(relay.reshape(call_821.astype('float32'), []), relay.reshape(var_847.astype('float32'), [10, 13, 12]), relay.reshape(var_822.astype('float32'), [594,]), ), 0)
output = relay.Tuple([call_821,var_822,uop_838,bop_842,call_846,var_847,])
output2 = relay.Tuple([call_823,var_822,uop_840,bop_845,call_848,var_847,])
func_849 = relay.Function([var_822,var_841,var_847,], output)
mod['func_849'] = func_849
mod = relay.transform.InferType()(mod)
var_850 = relay.var("var_850", dtype = "float32", shape = (594,))#candidate|850|(594,)|var|float32
var_851 = relay.var("var_851", dtype = "uint8", shape = (5, 9, 3))#candidate|851|(5, 9, 3)|var|uint8
var_852 = relay.var("var_852", dtype = "float32", shape = (1560, 1))#candidate|852|(1560, 1)|var|float32
output = func_849(var_850,var_851,var_852,)
func_853 = relay.Function([var_850,var_851,var_852,], output)
mutated_mod['func_853'] = func_853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_858 = func_775_call()
call_859 = func_775_call()
uop_878 = relay.sinh(call_858.astype('float64')) # shape=(5, 9, 3)
uop_880 = relay.sinh(call_859.astype('float64')) # shape=(5, 9, 3)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_881 = func_775_call()
call_882 = func_775_call()
output = relay.Tuple([uop_878,call_881,])
output2 = relay.Tuple([uop_880,call_882,])
func_885 = relay.Function([], output)
mod['func_885'] = func_885
mod = relay.transform.InferType()(mod)
output = func_885()
func_886 = relay.Function([], output)
mutated_mod['func_886'] = func_886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_959 = func_775_call()
call_960 = func_775_call()
func_885_call = mod.get_global_var('func_885')
func_886_call = mutated_mod.get_global_var('func_886')
call_970 = relay.TupleGetItem(func_885_call(), 0)
call_971 = relay.TupleGetItem(func_886_call(), 0)
uop_976 = relay.acosh(call_959.astype('float32')) # shape=(5, 9, 3)
uop_978 = relay.acosh(call_960.astype('float32')) # shape=(5, 9, 3)
func_715_call = mod.get_global_var('func_715')
func_718_call = mutated_mod.get_global_var('func_718')
var_987 = relay.var("var_987", dtype = "int64", shape = (144,))#candidate|987|(144,)|var|int64
call_986 = func_715_call(relay.reshape(var_987.astype('int64'), [12, 6, 2]))
call_988 = func_715_call(relay.reshape(var_987.astype('int64'), [12, 6, 2]))
uop_989 = relay.sqrt(uop_976.astype('float32')) # shape=(5, 9, 3)
uop_991 = relay.sqrt(uop_978.astype('float32')) # shape=(5, 9, 3)
func_242_call = mod.get_global_var('func_242')
func_246_call = mutated_mod.get_global_var('func_246')
var_995 = relay.var("var_995", dtype = "float64", shape = ())#candidate|995|()|var|float64
var_996 = relay.var("var_996", dtype = "float64", shape = (168,))#candidate|996|(168,)|var|float64
call_994 = relay.TupleGetItem(func_242_call(relay.reshape(var_995.astype('float64'), []), relay.reshape(var_996.astype('float64'), [4, 7, 6]), relay.reshape(var_996.astype('float32'), [4, 7, 6]), ), 1)
call_997 = relay.TupleGetItem(func_246_call(relay.reshape(var_995.astype('float64'), []), relay.reshape(var_996.astype('float64'), [4, 7, 6]), relay.reshape(var_996.astype('float32'), [4, 7, 6]), ), 1)
func_575_call = mod.get_global_var('func_575')
func_580_call = mutated_mod.get_global_var('func_580')
var_1004 = relay.var("var_1004", dtype = "float32", shape = (1560,))#candidate|1004|(1560,)|var|float32
const_1005 = relay.const([3.885574,9.715437,3.075814,-8.564302,-0.801876,-6.009630,-2.829404,9.797315,-4.585617,0.837984,-4.110019,-2.606202,9.337692,-4.615533,9.811602,-5.859547,-2.543496,-9.973679,-8.935468,3.595992,-1.043006,-9.411146,-0.779723,-4.355061,-4.812538,9.567092,-0.945724,2.882276,0.615754,-6.483394,-7.105306,-5.875635,-0.392797,-4.650862,3.247669,6.052563,-5.907415,-1.503738,8.002370,5.655670,-0.648440,9.493521,0.179603,-6.574215,-1.468405,5.985086,9.765651,6.838259,-5.948805,-6.940437,-3.231045,5.161638,-7.005474,0.363153,6.176658,9.435878,7.253965,-1.317059,-9.866642,7.744245,6.094839,8.504476,-0.675570,-3.763589,3.578400,-3.905503,-9.464317,-8.124293,6.072841,-1.628650,-6.758345,-5.856878,-9.484642,-7.318507,-7.827543,-4.989980,-0.472149,-4.522465,-6.199398,5.646999,-1.146742,2.939336,-6.347865,2.250674,6.725708,-8.410914,7.657081,7.501775,1.615725,-4.934116,-9.440921,9.816454,3.929983,0.570410,-0.200352,9.707473,3.528191,5.925483,-3.101743,6.054959,-9.825496,8.510509,0.508158,-5.498782,3.604786,-8.205213,6.148941,-0.403287,9.028138,-9.412314,1.031547,-8.455251,2.035758,-0.941925,-6.185631,6.689477,5.605163,4.052153,-3.167115,6.255017,-3.819579,6.630689,9.658093,-0.924902,6.254975,-6.790920,-2.363755,4.768596,-3.175271,6.605101,-3.112224,2.328867,-7.792919,-6.463248,-9.374351,-5.213739,4.624947,-1.877330,8.762558,0.494413,-9.871440,0.836979,8.246447,-3.154806,-6.444203,-4.315872,-0.380987,-9.941193,-0.053724,6.990269,-1.130722,-8.787757,3.738747,-8.566539,4.144759,-4.434800,0.765314,1.299450,-5.830550,-1.525843,3.615296,2.866532,9.112095,-5.785328,-6.449904,-5.236615,4.448139,-0.985670,-2.269496,-3.302387,3.826607,1.056024,-9.972748,4.996706,-3.401010,-3.406818,-0.073682,1.792693,1.300062,-6.416282,-7.145159,2.346840,2.617914,-9.636022,-4.425088,2.253023,2.582783,1.430821,4.206075,3.025241,-9.077511,-2.781555,4.105861,-1.756252,1.814640,2.903164,-4.191181,-0.821233,-1.115127,7.408869,6.880604,-4.104963,8.358309,-1.076198,-6.743633,-7.106032,0.092095,-3.282595,-8.482764,-1.652733,6.029091,5.113013,-6.344916,8.793121,4.684655,5.992017,7.721928,5.012881,3.944060,-3.328222,2.777682,3.700191,2.626126,-6.592930,-0.843384,5.058856,-0.627059,3.333619,-1.023256,2.734981,8.781453,-3.387807,2.753130,0.488921,-2.268417,-5.210825,-9.217310,-5.907033,7.202617,-9.064381,6.924764,6.526977,-7.343418,-2.343215,2.228977,-1.864881,0.088756,-8.124420,2.999276,7.985435,3.176974,6.568902,1.398977,3.026788,-3.608106,7.232522,7.814341,9.498853,3.484144,4.072576,-7.731223,-1.642881,-8.921231,-8.764293,-1.627980,4.636722,1.006998,-4.964463,8.098504,-1.173591,2.202111,1.202060,-8.429693,-3.618508,6.933812,5.335095,-4.159503,8.126885,-6.017545,-9.915785,8.486191,-9.836491,-2.028259,-0.314016,-1.227206,-7.886497,-8.854851,-4.272408,-9.210729,-2.060695,-9.853056,8.141650,7.910297,-2.152525,-8.805293,5.515657,-3.836062,6.488953,-0.459616,-2.158476,-7.216966,-7.899700,7.290647,5.078892,5.413502,2.883494,0.954186,-2.170601,5.610048,-2.025532,7.521941,8.537782,5.289033,7.072851,-8.818311,-0.878793,-7.763422,2.065655,-1.777556,0.320882,4.437430,7.262808,-4.241005,8.447495,-7.624046,6.009823,6.850993,-4.684250,1.071741,-8.392888,6.671518,-6.680544,9.465523,5.034100,8.902467,-3.048300,2.171630,9.143650,8.628979,4.714242,0.008216,-7.190342,-8.550744,9.113727,-9.325318,3.868798,9.927249,1.173884,-9.258019,-9.128956,5.445142,-5.448006,-4.243887,-3.922832,-6.702952,-2.306714,8.986125,0.064238,8.367937,5.721414,-9.906433,9.375754,3.202279,1.324905,-5.490311,3.014601,-0.057845,-2.325508,8.000750,-1.286477,0.175097,4.989697,8.486884,-0.169096,-6.936442,-4.640751,-9.310631,-1.125836,-9.227545,5.923357,0.580768,4.656213,-7.350999,-8.357434,-3.393375,-3.107119,5.751799,-7.886162,-4.407391,9.338932,8.659754,9.585264,-5.514204,0.573616,5.962699,5.012593,8.623634,-7.427340,-1.156375,5.064591,-4.188263,-1.408497,-9.532168,-8.120484,8.493898,3.738012,-6.476204,1.942019,-2.383565,8.419404,9.097495,-1.882211,8.325444,7.755418,2.165802,6.795554,-0.820784,-9.592267,-3.334002,3.224639,-0.078315,-6.703041,2.251120,1.988499,-9.549270,-5.940067,4.685458,-0.309102,3.251677,9.668369,1.232305,-4.041334,-3.598750,-1.912732,-6.718587,9.634963,-7.761990,4.146209,5.537331,3.263692,8.377511,7.205982,-5.910787,-3.538085,3.346284,-0.793516,-6.860633,-1.116437,6.314844,2.668975,-2.183266,9.205452,7.385466,3.349510,9.387805,-1.138970,-5.242790,-2.689835,-1.198003,-9.566958,-9.629518,-8.745196,-7.477859,2.915553,0.927905,0.980057,3.991975,-5.642346,3.177932,8.139408,-5.271179,5.937053,-5.199974,0.308176,-4.649059,-6.977614,-3.195881,1.954263,-5.496047,3.687854,-8.625686,1.371290,9.735282,-5.090489,8.714797,0.285674,3.517410,-7.703196,-9.720365,-9.766483,-9.814365,9.816696,3.015010,8.787804,-8.203230,2.117392,0.563745,-0.277021,-0.955712,7.215464,6.857216,7.239155,1.158424,-7.800606,8.987042,6.790316,7.315759,6.932013,5.406121,-4.120002,1.154022,-2.626773,9.365499,2.001744,9.565675,2.792715,2.205672,-5.845951,7.202456,2.501943,4.562181,-8.191694,3.760036,-4.552637,-7.617305,-0.614822,-6.883085,-7.338211,-8.757426,-8.480556,-8.799939,-2.899348,-5.824698,-7.593871,5.947826,5.159438,-3.791915,7.457952,4.443943,5.448443,2.398019,0.960651,-1.080175,5.802904,8.632394,7.941525,0.108295,8.989180,-6.345936,4.610128,4.531144,-3.234866,-8.855551,-9.049071,0.417613,0.821937,0.078587,9.028016,-9.968669,-2.480213,-2.079980,9.285708,5.691179,4.051338,1.209426,9.000355,6.472794,-5.014500,-0.659762,9.532474,-6.089302,-2.995659,6.514524,-5.939152,-0.224236,0.293775,-1.169166,-5.476109,-0.607727,0.204350,1.922736,-3.435721,-5.072724,-3.678014,4.811179,3.771341,5.438793,-6.749267,2.993914,-8.792819,1.585586,-5.203959,8.037062,-6.978633], dtype = "float32")#candidate|1005|(594,)|const|float32
call_1003 = relay.TupleGetItem(func_575_call(relay.reshape(var_995.astype('float32'), []), relay.reshape(var_1004.astype('float32'), [10, 13, 12]), relay.reshape(const_1005.astype('float32'), [594,]), ), 4)
call_1006 = relay.TupleGetItem(func_580_call(relay.reshape(var_995.astype('float32'), []), relay.reshape(var_1004.astype('float32'), [10, 13, 12]), relay.reshape(const_1005.astype('float32'), [594,]), ), 4)
func_715_call = mod.get_global_var('func_715')
func_718_call = mutated_mod.get_global_var('func_718')
call_1018 = func_715_call(relay.reshape(call_986.astype('int64'), [12, 6, 2]))
call_1019 = func_715_call(relay.reshape(call_986.astype('int64'), [12, 6, 2]))
uop_1021 = relay.tan(uop_976.astype('float32')) # shape=(5, 9, 3)
uop_1023 = relay.tan(uop_978.astype('float32')) # shape=(5, 9, 3)
uop_1024 = relay.log(uop_989.astype('float64')) # shape=(5, 9, 3)
uop_1026 = relay.log(uop_991.astype('float64')) # shape=(5, 9, 3)
output = relay.Tuple([call_970,call_986,var_987,call_994,var_995,var_996,call_1003,var_1004,const_1005,call_1018,uop_1021,uop_1024,])
output2 = relay.Tuple([call_971,call_988,var_987,call_997,var_995,var_996,call_1006,var_1004,const_1005,call_1019,uop_1023,uop_1026,])
func_1042 = relay.Function([var_987,var_995,var_996,var_1004,], output)
mod['func_1042'] = func_1042
mod = relay.transform.InferType()(mod)
var_1043 = relay.var("var_1043", dtype = "int64", shape = (144,))#candidate|1043|(144,)|var|int64
var_1044 = relay.var("var_1044", dtype = "float64", shape = ())#candidate|1044|()|var|float64
var_1045 = relay.var("var_1045", dtype = "float64", shape = (168,))#candidate|1045|(168,)|var|float64
var_1046 = relay.var("var_1046", dtype = "float32", shape = (1560,))#candidate|1046|(1560,)|var|float32
output = func_1042(var_1043,var_1044,var_1045,var_1046,)
func_1047 = relay.Function([var_1043,var_1044,var_1045,var_1046,], output)
mutated_mod['func_1047'] = func_1047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_885_call = mod.get_global_var('func_885')
func_886_call = mutated_mod.get_global_var('func_886')
call_1081 = relay.TupleGetItem(func_885_call(), 1)
call_1082 = relay.TupleGetItem(func_886_call(), 1)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_1092 = func_775_call()
call_1093 = func_775_call()
bop_1099 = relay.bitwise_xor(call_1092.astype('uint64'), relay.reshape(call_1081.astype('uint64'), relay.shape_of(call_1092))) # shape=(5, 9, 3)
bop_1102 = relay.bitwise_xor(call_1093.astype('uint64'), relay.reshape(call_1082.astype('uint64'), relay.shape_of(call_1093))) # shape=(5, 9, 3)
output = bop_1099
output2 = bop_1102
func_1103 = relay.Function([], output)
mod['func_1103'] = func_1103
mod = relay.transform.InferType()(mod)
mutated_mod['func_1103'] = func_1103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1103_call = mutated_mod.get_global_var('func_1103')
call_1104 = func_1103_call()
output = call_1104
func_1105 = relay.Function([], output)
mutated_mod['func_1105'] = func_1105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_885_call = mod.get_global_var('func_885')
func_886_call = mutated_mod.get_global_var('func_886')
call_1211 = relay.TupleGetItem(func_885_call(), 1)
call_1212 = relay.TupleGetItem(func_886_call(), 1)
func_885_call = mod.get_global_var('func_885')
func_886_call = mutated_mod.get_global_var('func_886')
call_1220 = relay.TupleGetItem(func_885_call(), 1)
call_1221 = relay.TupleGetItem(func_886_call(), 1)
bop_1224 = relay.right_shift(call_1211.astype('int8'), relay.reshape(call_1220.astype('int8'), relay.shape_of(call_1211))) # shape=(5, 9, 3)
bop_1227 = relay.right_shift(call_1212.astype('int8'), relay.reshape(call_1221.astype('int8'), relay.shape_of(call_1212))) # shape=(5, 9, 3)
output = relay.Tuple([bop_1224,])
output2 = relay.Tuple([bop_1227,])
func_1238 = relay.Function([], output)
mod['func_1238'] = func_1238
mod = relay.transform.InferType()(mod)
output = func_1238()
func_1239 = relay.Function([], output)
mutated_mod['func_1239'] = func_1239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_885_call = mod.get_global_var('func_885')
func_886_call = mutated_mod.get_global_var('func_886')
call_1257 = relay.TupleGetItem(func_885_call(), 0)
call_1258 = relay.TupleGetItem(func_886_call(), 0)
output = relay.Tuple([call_1257,])
output2 = relay.Tuple([call_1258,])
func_1259 = relay.Function([], output)
mod['func_1259'] = func_1259
mod = relay.transform.InferType()(mod)
mutated_mod['func_1259'] = func_1259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1259_call = mutated_mod.get_global_var('func_1259')
call_1260 = func_1259_call()
output = call_1260
func_1261 = relay.Function([], output)
mutated_mod['func_1261'] = func_1261
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1262 = relay.var("var_1262", dtype = "int64", shape = (15, 8, 11))#candidate|1262|(15, 8, 11)|var|int64
var_1263 = relay.var("var_1263", dtype = "int64", shape = (15, 8, 11))#candidate|1263|(15, 8, 11)|var|int64
bop_1264 = relay.add(var_1262.astype('int64'), relay.reshape(var_1263.astype('int64'), relay.shape_of(var_1262))) # shape=(15, 8, 11)
uop_1271 = relay.log(var_1263.astype('float64')) # shape=(15, 8, 11)
uop_1276 = relay.log10(var_1262.astype('float32')) # shape=(15, 8, 11)
uop_1278 = relay.log2(uop_1271.astype('float32')) # shape=(15, 8, 11)
func_849_call = mod.get_global_var('func_849')
func_853_call = mutated_mod.get_global_var('func_853')
var_1283 = relay.var("var_1283", dtype = "float32", shape = (6, 99))#candidate|1283|(6, 99)|var|float32
const_1284 = relay.const([-7,-10,-2,4,-9,4,-6,2,-3,-5,8,6,-10,6,-8,-3,10,3,-10,-3,-5,2,-1,7,3,-4,2,4,4,3,10,10,9,9,8,8,-10,-7,7,8,6,10,4,1,3,-4,9,-3,5,8,8,7,10,-3,-7,-8,5,-10,-1,8,4,9,6,-2,7,-2,-7,3,2,6,-6,-2,-2,9,3,9,1,-1,-3,-6,2,-5,9,-8,-3,10,-7,-10,5,4,9,5,3,-7,-6,9,2,-9,-2,-4,3,6,-6,-9,-8,-1,8,6,-10,10,-5,6,-10,8,5,-7,-6,8,-9,-7,2,3,1,-1,-4,9,-7,9,-1,1,1,-2,-1,10,-9], dtype = "uint8")#candidate|1284|(135,)|const|uint8
const_1285 = relay.const([-7.509564,2.404080,4.985315,4.366761,1.501703,0.491475,-5.461159,3.944315,0.226841,-2.284321,7.052298,9.223460,3.936086,7.398220,4.629767,0.783349,-8.119984,-6.382170,-8.718022,-7.692328,-6.160185,7.037450,6.244301,-3.948509,-3.832462,5.211641,1.384099,5.236992,-6.875552,0.523068,-8.239481,-2.787058,0.491983,-2.113506,-9.007922,-9.405505,3.521557,4.129041,-4.086524,4.388772,2.002848,-1.278383,4.263956,2.320752,-9.244937,-3.495765,-4.526973,4.441536,3.327899,9.376104,0.646503,-9.849160,7.178606,6.950697,-6.927973,7.289139,2.007444,-3.005878,6.426444,5.488593,-7.470538,-6.632586,-5.468276,-3.701036,-8.272322,0.733278,4.920875,-6.995497,8.359282,-9.127878,-8.618299,4.868330,7.460576,-8.217538,-0.347033,-7.017843,5.303956,4.870356,1.293947,4.861686,8.155469,6.421143,7.828157,0.857096,6.362567,-6.128945,7.398141,-9.422620,6.923193,9.604782,-8.303844,-8.542366,9.083287,8.976526,3.356955,-0.119050,1.378485,-8.802066,4.460326,5.566881,2.287562,-0.575024,-8.661051,-9.824303,1.390390,7.982188,3.345683,-5.474560,8.074344,3.091565,-6.594765,0.488808,9.082393,-5.818790,9.745147,-7.640421,7.353496,-0.628217,5.649291,6.982318,-9.926796,-9.879616,-4.085500,-7.898841,-7.798426,5.448576,6.430538,-1.910311,-5.106294,2.538012,-9.735072,-1.468515,-6.832446,2.378758,1.679486,2.716061,6.621218,-1.936157,-4.141535,8.739807,-3.287354,4.664970,2.216308,1.177961,0.132267,-7.634841,-4.795290,4.250787,1.341162,-8.532201,-3.509520,-5.191542,6.335569,2.307472,-6.910139,-4.022234,5.070208,-1.778589,5.126694,-9.672508,1.898346,-2.652362,-2.231839,-4.925876,7.789212,-0.684528,-4.734009,1.153808,5.639890,6.324893,-5.499299,5.586389,-2.717383,-2.138023,2.166741,-6.461704,2.041208,-1.979362,-1.775657,4.467785,0.181741,9.712805,5.842926,2.937219,-0.200777,-2.762516,-3.758184,-5.259951,2.355835,-2.780004,-8.559800,4.379690,4.620460,0.833282,2.027010,2.313550,-8.353835,-9.517757,-2.462337,4.884722,6.695182,1.581753,3.790808,-3.607655,-8.825185,8.804381,4.284732,3.725727,-2.354445,-4.479942,7.358429,-5.382168,7.017646,8.500471,-1.040092,-7.060449,-3.480472,4.349246,0.223848,4.050157,-3.970268,-8.402133,8.447938,-0.381989,-8.954322,1.831131,7.334237,-1.934096,1.517321,-1.107783,-8.859857,2.203215,-8.869242,-9.263487,-4.719787,1.813957,-8.795994,-9.924266,9.804427,7.161758,4.707555,-7.233280,-5.647026,3.857194,-4.765780,5.508289,-5.257731,-6.311351,1.182131,5.192225,-0.359056,-5.909538,-9.129346,-1.709408,8.273456,-5.722443,3.493911,1.370636,1.028830,5.293484,-7.165758,-1.904342,6.036047,7.284062,5.382677,-6.745261,-5.037090,-0.772384,8.639945,-1.920576,-6.718450,2.548813,4.901983,8.872481,-0.099881,1.820360,5.008259,6.177152,-4.326237,2.783289,5.360956,0.810672,-9.782574,0.806641,-9.611170,-2.466932,-8.624383,-2.920749,5.608294,-5.545315,-4.586497,-5.034027,9.600023,-9.186310,4.450479,1.660213,9.758748,-8.168744,-3.258030,3.656611,0.885923,5.138868,-7.451271,-9.658399,4.481921,2.559739,-2.487414,6.006848,0.727670,1.837687,6.278957,-3.292522,5.121707,-5.644694,-7.497621,-3.221099,8.081730,8.796032,-3.034298,3.669845,-9.910400,6.926730,2.505655,-3.684224,2.624144,7.007933,-1.025602,4.617113,-2.856253,7.487186,-3.882938,-6.376907,3.836157,9.653234,5.261412,5.679857,7.278859,-0.136310,8.089558,7.167058,-1.491076,4.722589,-6.778633,-2.127352,-8.440407,6.985946,-8.236264,-3.376116,2.419282,0.309218,4.490309,-9.202402,7.843458,9.174521,9.518502,4.084874,3.477144,-2.835031,-1.164319,-8.858777,-4.692740,7.833256,8.118042,-7.338008,1.399169,-9.368544,-1.484533,9.496097,1.230592,-6.329845,9.019807,1.335200,-4.876575,0.048396,-4.439513,4.226342,2.828229,1.949745,8.673324,-0.919589,7.792368,8.649638,0.435585,-6.993950,3.753153,-8.694706,-9.266368,6.439682,6.570840,9.469806,-0.722520,7.307677,0.749271,-8.526003,-5.105053,5.648252,9.947142,-5.020404,3.422816,-1.205435,8.615400,-8.498560,-4.874845,8.922916,-3.028751,8.983049,7.297797,-4.834192,-8.780064,0.655936,5.261820,-4.972803,4.861558,-2.778309,4.383484,1.968428,7.646063,5.150169,3.120333,7.705183,5.590501,-1.281927,3.761216,-9.192652,-9.241947,9.858322,-1.855776,-7.983767,-5.699248,5.558732,8.077337,-6.538759,-0.422613,-7.599116,-6.868283,1.896640,4.373611,6.144224,-7.489014,-8.649040,5.336109,6.936719,7.859349,-7.922489,-5.537668,-2.113505,-7.380738,-6.814047,-7.736840,3.053237,-5.507770,-5.995259,-9.299430,4.077700,6.063739,0.809792,9.368789,4.005174,7.947453,-9.766975,9.376810,5.846147,6.262406,-8.718678,6.149857,1.878519,-2.229540,6.075373,2.573011,0.876218,-8.802312,2.854566,0.065580,-3.641715,-6.857301,-1.361952,8.205750,-0.125563,9.365150,-9.614190,-0.050233,6.908417,-2.312317,6.587024,8.470280,-2.115277,-3.214070,1.400274,-1.260630,-9.470086,-1.322872,-0.610883,-1.901051,-3.344683,2.532660,-9.974995,-6.145405,-4.183273,-8.797448,-5.260304,0.321140,7.550014,9.098855,5.545577,2.922768,-2.854830,0.220840,7.928626,4.775392,3.497011,3.398966,-6.613476,4.366048,-6.712418,2.450331,9.776257,6.972973,-8.293298,4.827696,4.890032,1.573059,-9.931331,-0.972496,-9.709678,-3.614158,0.511512,-4.984107,5.720839,-4.648227,1.765431,0.251728,-7.539440,-0.339806,5.149357,0.317688,-9.867686,-6.051337,2.623629,-7.591551,4.305647,5.880340,-3.008342,-0.211566,-7.001449,6.601507,-5.181531,-9.123852,-9.642770,0.705364,7.580113,-0.026477,5.233177,-4.598400,4.802647,4.162481,6.720203,1.122904,-4.717517,-0.498835,3.705512,-2.013853,-1.917536,-1.372076,8.579114,-7.409901,-0.484489,-0.381152,5.539191,-3.371505,-9.013151,5.176737,6.171304,5.535795,4.244993,-1.460497,-1.231197,-7.274029,7.087764,5.184103,8.143476,8.266012,-8.440362,1.055146,4.656702,-4.655043,8.420277,9.070650,0.065675,-6.820079,-2.963931,9.591658,-2.562354,9.712425,-6.195112,-7.223695,-4.501757,-2.789502,-3.963341,2.233219,4.713842,5.660406,4.462308,5.270313,2.656711,2.403237,-6.245371,-3.265517,6.824674,7.916615,-0.352664,7.739050,2.131938,2.363964,5.841121,0.507976,9.326515,-4.881117,-0.101931,6.976822,6.989563,6.937426,1.412973,-5.040757,-4.502085,-1.067935,-2.706173,0.601746,8.738256,3.601578,5.416337,-8.237884,6.665148,-1.557707,-7.877922,5.214817,-6.452792,-3.798333,7.339879,-2.978463,-4.988209,-4.202658,-9.609146,-7.435269,8.003452,0.404283,2.551972,8.338746,-2.054870,-1.203102,7.650569,-9.215319,-9.132410,4.232772,-1.891171,8.625248,-2.185419,8.280581,-1.689059,3.116618,1.556721,-5.888254,-9.269095,6.603701,5.086300,7.142090,7.078374,8.945246,-6.793558,4.071579,-0.986477,5.751605,3.104086,-5.164663,2.594170,1.796874,-1.711095,0.504365,8.877197,7.100156,-9.455503,9.781656,-0.018265,0.424801,2.293531,5.142454,-7.389055,-5.502374,7.024448,3.420083,-4.743079,4.489899,-5.982674,2.957774,1.456362,6.448305,-7.796803,-8.919399,5.164091,6.063572,-5.420250,-4.249448,-9.931287,-4.970862,8.454298,-0.849729,-5.505281,-3.090834,-4.480232,-1.976006,-6.229115,2.241954,-1.681029,-9.968314,7.453573,-8.617581,-3.652790,-3.610036,-6.019341,9.369468,-8.390925,1.334051,4.309684,-0.617230,-7.842595,-6.664410,-2.207064,3.444281,1.013171,-8.246646,2.133233,-6.834592,9.201223,-1.900220,-3.200576,-0.085993,6.816824,0.349641,7.813131,-5.323020,1.511713,7.663701,-7.681677,-3.135478,-8.737586,1.034685,-8.323885,7.974043,-6.336668,3.211194,6.296424,-3.063514,5.955023,-7.294131,7.407948,-3.848956,9.729963,-0.986393,-5.088329,8.105961,1.306314,3.796020,-5.914221,4.151365,-0.856095,1.507565,-0.340419,8.204138,-6.524978,9.208861,-6.188058,-9.488767,4.652273,-4.617083,6.527617,-5.027438,-8.520151,-3.532777,-2.036161,3.976602,-3.776304,3.484601,-1.378285,0.227083,-3.863831,-4.076321,-9.794493,-9.224370,0.279594,-4.686962,-9.911278,2.267399,-0.159139,8.142848,-9.792791,8.611658,-2.824401,6.885360,5.640315,7.257045,9.229997,0.834848,-4.622948,1.331763,-5.791244,-6.593961,-7.326967,3.983499,-9.160434,-0.636037,3.660033,9.156519,-6.526890,3.369471,3.336252,9.487252,-8.553604,2.070511,-4.138724,4.748079,-0.174556,7.743017,3.290301,6.017782,4.969452,-8.611338,0.717630,-5.462029,9.959886,-9.005806,-0.659010,9.170309,-7.587924,0.146618,-9.016669,2.326857,0.590531,2.151789,9.598858,-6.808699,-2.865723,5.663052,-4.655112,8.558531,4.741712,6.572692,3.221384,9.729255,1.353584,-5.468051,4.817765,-4.593263,-2.888861,6.270863,-2.100641,9.900431,2.800503,-3.189345,-2.399594,6.512346,9.763113,-5.792282,8.579507,-7.346259,-5.803345,-8.297315,-6.977019,-0.125409,8.975151,-6.956861,0.315431,-4.460110,3.882510,1.579287,8.947035,2.901276,9.526503,9.382859,3.317752,1.722813,9.024304,8.788069,-0.526371,-5.100373,-0.338105,0.800953,-5.670134,-6.059020,-9.570091,-8.605316,-3.900246,1.915937,7.773511,-0.059659,-5.061235,-4.957459,-1.733704,-3.478626,-7.624511,-2.924667,1.475380,-9.937743,2.230271,2.453497,-6.706878,1.732407,-9.944175,-8.743818,-4.551129,-6.544726,-5.143134,-6.007710,6.584420,9.770419,2.142439,-6.620522,3.352242,3.712737,0.517312,4.447813,-8.878829,-7.566601,0.585362,-4.283465,5.134338,-3.301669,8.861724,-8.104031,8.758938,-1.654300,3.740269,-0.575888,-1.414688,-6.393289,-6.577459,5.637402,-6.752902,4.548183,4.141805,2.823009,8.910930,-2.237149,-9.820255,2.560966,6.276796,0.333782,-4.319849,6.819814,6.766307,-6.660292,1.133831,-1.599211,1.631744,7.834405,3.938188,6.286170,4.366275,4.078577,1.501883,1.781642,1.237537,1.175905,-6.904065,-8.255549,-9.843487,-2.156440,-4.947777,-3.179901,-3.887920,-1.446353,-0.776877,-1.246193,-1.680800,-9.622759,-7.514589,-4.290892,-2.517253,4.755520,-2.876622,-4.485028,-8.188675,9.758410,0.782573,-3.087746,0.533435,1.080030,6.610102,3.401691,9.095477,8.147303,-4.229837,3.014838,0.387356,8.373520,-6.030708,3.422690,-4.498483,-5.673450,-0.565160,-0.523578,0.819713,8.475328,2.271660,-1.112800,-0.480112,4.515928,6.060946,8.183308,1.159638,8.701763,-9.120424,1.724275,5.772466,-0.195958,-6.017670,4.742307,-4.827820,-7.859092,-3.475372,8.647943,-9.108498,2.599608,2.481702,5.862582,0.926532,2.307737,4.142000,8.876122,-5.143032,-5.516804,-3.562636,-9.859094,-0.177810,-7.270055,-7.156484,-4.395354,-3.228978,-4.468065,-7.843929,3.979215,-9.297273,-1.533796,7.780147,-3.996554,5.059227,-7.363619,3.154126,3.194403,-9.360085,-4.838911,3.454330,4.597906,-8.444147,7.303219,5.183565,-8.895724,2.772946,5.965637,-2.501068,-4.507875,-8.913127,7.844821,-4.448783,-3.113382,1.575338,4.660436,4.125240,-5.868708,-1.893318,-9.768782,-6.020898,-0.732231,6.266702,-8.275237,4.943363,-1.421651,-9.731592,4.486850,-9.938123,7.550107,-1.586235,-8.123367,9.076749,2.583183,-6.169497,-0.540907,6.173834,6.184241,-9.194915,-6.652978,-8.087931,-5.080203,2.967863,2.218196,0.208385,4.446871,3.719906,9.239420,-3.367549,2.421879,-2.454680,-4.214037,-3.337348,0.026730,7.103405,-6.238917,-6.603087,-5.892628,5.693589,3.715105,-2.225959,-2.903056,-4.281746,6.938219,5.900222,7.245893,-0.389114,5.308770,1.115894,7.688047,-6.120595,8.473210,-3.821701,-7.270775,1.741712,-8.231743,-0.514008,-4.658091,-7.728324,-0.398677,-2.237989,-1.991032,0.529025,7.938636,-1.400141,4.318879,-8.649768,3.900033,8.874480,-2.532404,4.496857,-8.081869,-2.824061,-7.004873,-4.691943,-5.066953,-3.960685,1.289380,-5.549992,2.360741,-6.104548,2.345365,6.152920,3.578976,2.353782,6.280619,7.462735,-5.823954,-3.440440,-6.924534,1.240128,4.466808,3.884786,1.206506,0.330156,-1.823875,-0.848569,3.675749,-4.399396,-3.427318,-7.712813,-2.098453,0.878858,7.468698,5.832451,7.199348,-9.601726,0.541121,8.204719,3.298329,2.145045,-8.724278,-9.321574,1.206544,2.890800,-8.667476,4.291798,7.721634,2.179060,3.426160,-6.554346,-2.169988,9.668857,2.105094,-5.438111,-9.772761,-3.941331,5.314025,-9.055514,-6.696662,-5.142548,5.733693,0.090631,0.683578,-4.824516,-7.782025,5.116804,1.512140,-2.718545,2.247976,-1.288647,-6.608905,7.192953,1.511291,-4.494810,5.962853,-7.243259,-6.230602,0.198532,-7.370966,-9.483135,-2.681709,9.148224,7.087923,-5.502882,7.817160,-3.427808,-4.889405,8.058013,3.882609,3.348507,4.607363,5.697144,5.967057,3.585227,-6.059065,-5.230758,6.002372,1.101453,2.707372,5.292689,-8.013107,-4.436947,7.831117,-9.709116,6.091549,6.545152,6.870950,1.676283,3.460083,-0.802194,-2.592851,7.312496,3.570595,-0.696252,-0.687664,2.719813,7.503076,4.928821,0.564201,7.416630,0.160014,6.884078,-5.929023,-9.695034,8.076156,9.968138,0.311077,6.607787,2.917744,-3.434169,-9.657064,-9.961535,8.552998,-7.449188,9.587743,-3.607982,3.920578,9.660043,-0.958260,2.998398,4.012682,6.425837,7.818252,3.343288,4.892934,7.244083,2.699015,0.721361,8.209731,0.767872,-9.199823,-9.927662,-0.484294,4.052824,2.051669,-7.023782,8.403060,1.815036,4.891772,-3.230926,-3.708828,-6.130443,9.415374,0.573028,5.170903,-6.065243,-0.690530,0.927781,-2.596853,0.717043,-1.475319,-8.106666,1.591325,-8.271393,-6.005342,7.726960,-0.231654,-1.310364,-0.187817,5.636009,4.523406,0.449303,-8.566796,-5.643872,0.746129,-8.099760,5.046013,6.392875,-4.741588,1.226549,-3.174158,-1.535226,-4.015990,9.325669,-7.503087,9.907918,-1.615546,8.250978,7.160530,8.812647,1.327515,-2.059417,1.291419,9.116532,-6.952288,-2.412475,-1.057629,5.673634,-3.857192,4.338454,6.824152,-9.463580,8.464426,-3.724483,8.340547,5.577192,3.594971,8.825340,2.901085,5.873456,-9.937127,8.544531,-5.775560,4.353573,5.548229,4.342143,2.590527,-4.724218,6.164838,-2.652996,-5.556846,1.238459,7.440153,-2.806324,8.046688,-5.191164,-3.640510,-8.932103,6.581088,3.706996,-1.564957,8.176494,-6.467670,-3.487652,2.463189,-1.720665,-5.585771,7.548460,-1.635010,1.272751,8.004682,2.290052,6.362377,-3.345139,-6.046711,4.577281,-1.529819,-9.262011,-3.498668,-9.430115,5.899457,6.822163,-5.423116,-7.830138,1.224367,6.589561,9.285499,-4.473652,-8.310521,7.710615,-7.182743,-7.528650,-6.364046,4.090645,7.657719,-7.392181,-3.582435,4.198640,-6.206547,0.658759,8.049060,4.962416,-1.684819,5.013541,-6.701676,4.163768,1.902515,-2.965392,-6.214299,-9.782840,6.881508,5.508799,-8.341434,0.422424,-0.250290,-4.427415,5.932190,-1.476867,7.018922,-9.983481,8.808884,-2.750756,2.428675,-6.587918,-5.979402,-8.021498,2.290595,9.611957,-9.368773,-5.611237,-8.944072,-0.212728,-6.343770,7.157831,-7.778648,-8.472151,4.491214,-7.040100,2.216288,-8.770337,6.847418,5.046139,-3.671590,-7.742393,7.749112,3.824115,-5.568122,5.740879,7.011474,-0.875051,5.219827,8.425476,-0.644810,0.549126,-1.803271,3.780374,-8.951121,-8.356266,-7.081566,4.189916,3.319106,5.773609,-9.815581,9.320270,5.828818,7.697275,-9.428677,1.932338,-7.887824,-1.439046,-8.169027,-3.749524,-3.883974,-6.952071,-1.413840,1.593732,-2.030984,1.532167,6.766022,-7.046458,-9.354672,8.875460,-1.752420,3.673420,-6.453783,6.450464,-0.516905,9.548163,-4.197869,5.585950,-3.798493,9.358173,2.833315,4.195361,7.590459,6.239093,-9.596489,-4.505502,5.681185,8.634247,9.741314,-3.672516,2.755351,-7.814323,5.767898,-5.262310,-4.156710,9.959598,-8.883211,1.589605,-1.276286,0.659036,3.190528,-8.797317,-1.355910,-5.986632,-5.066918,3.196299,5.737487,-8.180163,5.098666,-4.726615,-7.929669,1.026548,-3.285550,-3.933234,2.525134,3.082454,6.857068,1.404252,-1.848939,1.926976,-7.363899,-5.557398,-5.556441,9.260543,5.360884,-6.360195,4.941760,-9.136743], dtype = "float32")#candidate|1285|(1560,)|const|float32
call_1282 = relay.TupleGetItem(func_849_call(relay.reshape(var_1283.astype('float32'), [594,]), relay.reshape(const_1284.astype('uint8'), [5, 9, 3]), relay.reshape(const_1285.astype('float32'), [1560, 1]), ), 5)
call_1286 = relay.TupleGetItem(func_853_call(relay.reshape(var_1283.astype('float32'), [594,]), relay.reshape(const_1284.astype('uint8'), [5, 9, 3]), relay.reshape(const_1285.astype('float32'), [1560, 1]), ), 5)
output = relay.Tuple([bop_1264,uop_1276,uop_1278,call_1282,var_1283,const_1284,const_1285,])
output2 = relay.Tuple([bop_1264,uop_1276,uop_1278,call_1286,var_1283,const_1284,const_1285,])
func_1288 = relay.Function([var_1262,var_1263,var_1283,], output)
mod['func_1288'] = func_1288
mod = relay.transform.InferType()(mod)
mutated_mod['func_1288'] = func_1288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1288_call = mutated_mod.get_global_var('func_1288')
var_1290 = relay.var("var_1290", dtype = "int64", shape = (15, 8, 11))#candidate|1290|(15, 8, 11)|var|int64
var_1291 = relay.var("var_1291", dtype = "int64", shape = (15, 8, 11))#candidate|1291|(15, 8, 11)|var|int64
var_1292 = relay.var("var_1292", dtype = "float32", shape = (6, 99))#candidate|1292|(6, 99)|var|float32
call_1289 = func_1288_call(var_1290,var_1291,var_1292,)
output = call_1289
func_1293 = relay.Function([var_1290,var_1291,var_1292,], output)
mutated_mod['func_1293'] = func_1293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1103_call = mod.get_global_var('func_1103')
func_1105_call = mutated_mod.get_global_var('func_1105')
call_1295 = func_1103_call()
call_1296 = func_1103_call()
func_1238_call = mod.get_global_var('func_1238')
func_1239_call = mutated_mod.get_global_var('func_1239')
call_1297 = relay.TupleGetItem(func_1238_call(), 0)
call_1298 = relay.TupleGetItem(func_1239_call(), 0)
output = relay.Tuple([call_1295,call_1297,])
output2 = relay.Tuple([call_1296,call_1298,])
func_1301 = relay.Function([], output)
mod['func_1301'] = func_1301
mod = relay.transform.InferType()(mod)
mutated_mod['func_1301'] = func_1301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1301_call = mutated_mod.get_global_var('func_1301')
call_1302 = func_1301_call()
output = call_1302
func_1303 = relay.Function([], output)
mutated_mod['func_1303'] = func_1303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_1343 = func_775_call()
call_1344 = func_775_call()
output = relay.Tuple([call_1343,])
output2 = relay.Tuple([call_1344,])
func_1346 = relay.Function([], output)
mod['func_1346'] = func_1346
mod = relay.transform.InferType()(mod)
output = func_1346()
func_1347 = relay.Function([], output)
mutated_mod['func_1347'] = func_1347
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1385 = relay.const([[[4.270006,-3.986807,5.890017,5.060655,-3.784484,-7.471915,2.831787,-4.789458,3.261790,-3.080545,-9.884409,1.165649,0.586702,-5.513956,-4.509299],[1.408934,-4.980843,0.899013,3.227869,-1.305994,8.559545,-7.056115,-4.368571,1.011899,-7.550865,8.034051,-9.234298,1.389392,-3.888762,-7.360351],[-6.504138,-0.474396,1.612918,-6.964065,-5.489726,-2.586780,2.254497,-1.384902,0.265518,1.463836,9.676746,-4.870817,-4.207183,8.956497,-8.327387],[0.990607,6.291253,6.533294,0.033426,2.025158,-3.180878,0.096395,-7.665704,9.092249,1.327045,-0.064443,-5.282029,-8.946571,-7.936860,0.042579],[9.883285,4.708875,-2.440604,0.304509,-8.402570,6.715709,3.509829,-8.739729,-1.369817,3.674760,2.684664,-1.515410,3.532980,-8.269437,-1.313355]],[[-7.336857,-3.482551,-0.944604,-8.563571,0.701330,-5.057146,0.043221,5.109376,2.603151,8.858001,-9.730027,-4.459335,-2.631372,5.954156,-1.188963],[-5.312934,-7.214503,-8.793394,3.024756,-8.023120,-1.738107,2.496391,-6.789709,5.958589,-9.171572,9.358401,1.536981,6.293103,3.154638,-7.458895],[-7.225543,-3.546636,-5.643972,7.404585,1.766368,-1.694526,-8.173835,3.053438,-7.941689,3.685299,2.347197,4.252844,-6.361076,9.075251,-6.937192],[0.785355,-8.599717,3.631065,2.598891,4.091379,-4.297713,-5.706392,7.615770,-5.788350,-4.131852,9.633007,-3.542773,3.402482,2.545937,-9.019120],[-5.927422,9.405249,3.026721,5.903654,3.998335,8.039102,-6.978692,7.427999,6.487439,-7.969131,1.179781,4.595570,-0.115500,-0.849189,1.102582]],[[2.172332,8.284508,1.436302,1.399057,4.168445,5.622168,0.916083,-3.890492,8.611003,-5.299842,9.238683,4.430620,1.637920,5.253382,-6.557708],[-3.498065,6.354573,-0.161781,-1.153142,7.259454,-6.039450,-2.537617,5.196620,-6.614872,-0.328146,-9.160849,-1.405316,-5.064939,5.506547,-8.741495],[1.123232,-8.591012,-3.224784,8.091088,-3.833569,-4.398876,6.421021,-1.818574,7.551229,3.490399,2.815879,4.819461,-8.599280,7.796980,-8.553883],[5.887621,-9.738042,-8.930553,-3.455343,3.131325,-3.396421,7.850121,-4.913286,-1.193434,2.357219,8.086859,3.637616,-9.522373,9.553024,-7.635237],[3.501671,4.806740,5.914378,-6.497442,5.387258,-1.357874,4.140602,8.250620,-1.590227,4.431941,6.103721,-6.289742,-1.689035,-9.043300,9.169869]],[[8.129185,-9.455064,-2.596005,-6.489161,0.328249,8.363779,0.010953,-9.080912,-4.079320,2.736569,-5.643288,3.629520,5.000283,4.492643,5.295972],[-5.177615,-9.274037,5.889233,-7.340196,5.635136,9.857336,-5.715399,-3.552906,0.362286,7.926811,-8.206440,2.570904,-5.060569,3.580151,1.269676],[-4.659040,5.960011,-0.333372,-3.046699,-7.686859,6.138402,-8.297742,6.731379,-7.754646,2.704853,8.755828,8.781694,8.994549,6.983308,4.534035],[5.910215,4.411101,-6.769705,0.589526,-5.596715,6.110665,9.762561,1.739588,-0.247720,6.281361,1.642490,5.063337,-6.660538,8.348570,-1.197191],[-9.763144,-2.722553,-4.083755,0.690179,6.174567,-9.761199,9.740832,-1.486996,-4.059421,-4.424829,5.141340,-1.279177,-1.752539,3.673006,-6.354312]],[[0.423526,-4.506485,-8.999339,-6.511620,-4.647225,-7.943538,-0.877670,6.504202,-4.492675,2.250299,5.958436,2.991263,-6.768214,-7.720612,2.702073],[1.872756,2.901875,-5.386343,-5.735201,-2.353306,4.314214,4.553964,-9.606551,-6.376278,-4.733139,-4.728801,-8.326079,7.632851,4.926399,6.480769],[1.125779,4.684499,-5.364073,-5.465097,9.884103,6.229366,7.498016,-8.473517,7.454979,5.195165,4.833116,-0.552307,9.851614,-5.372393,6.933221],[5.883482,-9.359919,-3.750073,-2.674224,5.634148,5.190841,-1.800639,-3.917929,-6.921858,-8.107709,0.156975,5.614808,4.588956,-8.035009,-3.750239],[8.157488,-7.701402,-6.808819,-6.483287,1.726165,-5.260788,6.630224,-2.597925,-6.645127,9.745133,-3.805205,-5.087712,-6.701567,-8.554381,2.875241]],[[6.839103,-9.512462,-6.055353,-6.934143,0.931520,-4.111345,-8.853790,3.062534,8.271825,9.437731,-6.137546,-1.232941,-4.083740,-6.206750,7.499240],[0.614251,4.318250,-9.863454,-4.184070,-9.200060,-9.354939,-5.397303,-6.671704,2.745726,3.929571,9.684325,-4.789119,-3.656039,-9.017776,8.148268],[-6.381014,-8.389640,-1.467850,6.484327,6.477274,6.552208,-3.815232,-0.107233,0.957129,4.140338,5.214762,-8.886117,-3.478658,-9.928346,6.584930],[-4.246360,-8.343059,5.189178,9.741844,8.131252,8.330284,-5.572680,-0.284177,-9.284114,8.143112,-8.526675,-8.765684,-1.496828,8.506456,-1.964734],[7.044437,-4.504830,5.487409,-5.818178,-6.194490,-8.413060,-3.589769,-9.215975,1.078755,-8.460535,-4.214864,1.362358,8.640397,2.331711,-7.329220]],[[-5.299053,-7.525285,5.984904,-8.352890,-4.749733,-8.179034,-5.855118,8.559049,2.650598,-2.264741,2.243699,6.185028,6.084665,1.968079,6.337504],[-0.693155,0.721164,3.800046,7.256877,-0.793277,-3.657071,-5.177339,-1.728082,9.215983,-7.956792,5.835615,-7.137769,7.092812,-4.940360,-6.402992],[-8.292683,9.476083,6.967764,7.185409,-3.390576,-7.918820,-9.677080,-2.257411,9.040383,-8.395357,0.846152,9.919723,-6.810342,9.215906,8.070148],[0.011646,2.187822,2.441836,2.619995,6.163613,7.517817,-1.990887,-4.539487,-2.292919,0.609907,4.329387,-6.702426,-7.147508,5.961591,5.594166],[-6.553346,2.053420,1.768170,-7.482566,0.311509,2.893660,-8.648900,-1.550581,-4.127379,-7.805443,3.869478,-8.348317,-6.620212,3.568057,-4.743956]],[[9.689986,2.660376,-8.957938,4.498473,5.748390,-0.694997,8.833992,-4.983675,1.359131,-4.803149,-0.033706,-9.622257,-2.043397,-4.864695,-0.597309],[-1.999340,2.893538,-8.009301,1.582163,-9.260687,-6.115640,0.015847,8.913995,4.602879,-2.188492,-5.411615,-3.116112,6.816781,-7.447294,-9.980965],[-8.128620,-4.690561,-8.412354,-4.822857,-4.641628,-1.218403,1.913462,5.016959,1.484845,-9.473415,-7.598822,1.937973,4.158810,7.412968,-9.599457],[-8.944534,2.587426,-1.471631,-4.127843,7.026450,3.156237,3.977055,3.281215,-1.983812,-2.857201,-0.593239,3.511001,2.521611,-2.919111,-8.406682],[-0.889374,0.563812,2.531788,5.116591,-2.770280,4.465137,-8.309402,4.180179,2.511958,-0.784155,-3.572879,-4.119774,-3.813021,-9.869453,6.272303]]], dtype = "float32")#candidate|1385|(8, 5, 15)|const|float32
var_1386 = relay.var("var_1386", dtype = "float32", shape = (8, 5, 15))#candidate|1386|(8, 5, 15)|var|float32
bop_1387 = relay.floor_mod(const_1385.astype('float32'), relay.reshape(var_1386.astype('float32'), relay.shape_of(const_1385))) # shape=(8, 5, 15)
output = bop_1387
output2 = bop_1387
func_1410 = relay.Function([var_1386,], output)
mod['func_1410'] = func_1410
mod = relay.transform.InferType()(mod)
mutated_mod['func_1410'] = func_1410
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1411 = relay.var("var_1411", dtype = "float32", shape = (8, 5, 15))#candidate|1411|(8, 5, 15)|var|float32
func_1410_call = mutated_mod.get_global_var('func_1410')
call_1412 = func_1410_call(var_1411)
output = call_1412
func_1413 = relay.Function([var_1411], output)
mutated_mod['func_1413'] = func_1413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1238_call = mod.get_global_var('func_1238')
func_1239_call = mutated_mod.get_global_var('func_1239')
call_1454 = relay.TupleGetItem(func_1238_call(), 0)
call_1455 = relay.TupleGetItem(func_1239_call(), 0)
output = call_1454
output2 = call_1455
func_1457 = relay.Function([], output)
mod['func_1457'] = func_1457
mod = relay.transform.InferType()(mod)
mutated_mod['func_1457'] = func_1457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1457_call = mutated_mod.get_global_var('func_1457')
call_1458 = func_1457_call()
output = call_1458
func_1459 = relay.Function([], output)
mutated_mod['func_1459'] = func_1459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1346_call = mod.get_global_var('func_1346')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_1466 = relay.TupleGetItem(func_1346_call(), 0)
call_1467 = relay.TupleGetItem(func_1347_call(), 0)
var_1472 = relay.var("var_1472", dtype = "uint8", shape = (5, 9, 3))#candidate|1472|(5, 9, 3)|var|uint8
bop_1473 = relay.floor_divide(call_1466.astype('float64'), relay.reshape(var_1472.astype('float64'), relay.shape_of(call_1466))) # shape=(5, 9, 3)
bop_1476 = relay.floor_divide(call_1467.astype('float64'), relay.reshape(var_1472.astype('float64'), relay.shape_of(call_1467))) # shape=(5, 9, 3)
output = relay.Tuple([bop_1473,])
output2 = relay.Tuple([bop_1476,])
func_1479 = relay.Function([var_1472,], output)
mod['func_1479'] = func_1479
mod = relay.transform.InferType()(mod)
mutated_mod['func_1479'] = func_1479
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1480 = relay.var("var_1480", dtype = "uint8", shape = (5, 9, 3))#candidate|1480|(5, 9, 3)|var|uint8
func_1479_call = mutated_mod.get_global_var('func_1479')
call_1481 = func_1479_call(var_1480)
output = call_1481
func_1482 = relay.Function([var_1480], output)
mutated_mod['func_1482'] = func_1482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1238_call = mod.get_global_var('func_1238')
func_1239_call = mutated_mod.get_global_var('func_1239')
call_1546 = relay.TupleGetItem(func_1238_call(), 0)
call_1547 = relay.TupleGetItem(func_1239_call(), 0)
output = relay.Tuple([call_1546,])
output2 = relay.Tuple([call_1547,])
func_1557 = relay.Function([], output)
mod['func_1557'] = func_1557
mod = relay.transform.InferType()(mod)
mutated_mod['func_1557'] = func_1557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1557_call = mutated_mod.get_global_var('func_1557')
call_1558 = func_1557_call()
output = call_1558
func_1559 = relay.Function([], output)
mutated_mod['func_1559'] = func_1559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1259_call = mod.get_global_var('func_1259')
func_1261_call = mutated_mod.get_global_var('func_1261')
call_1571 = relay.TupleGetItem(func_1259_call(), 0)
call_1572 = relay.TupleGetItem(func_1261_call(), 0)
func_1288_call = mod.get_global_var('func_1288')
func_1293_call = mutated_mod.get_global_var('func_1293')
const_1593 = relay.const([2,3,2,4,-7,4,9,-7,4,5,3,5,-7,8,2,-7,5,6,8,-1,-7,2,-9,-6,-4,6,6,-5,-8,-10,-8,3,-8,3,7,10,1,9,-1,-2,7,-2,-1,3,-10,8,-1,-5,1,5,-4,-3,9,6,6,-6,-7,-5,7,-8,2,-7,10,-2,-10,9,3,2,4,1,7,5,8,-6,10,2,-1,-5,-8,2,-3,5,-6,8,-4,-2,-6,9,-8,9,-9,10,-9,-3,-1,9,9,-9,-9,-5,-6,8,-7,-8,-3,3,-9,4,-7,8,-3,1,9,6,-5,-4,9,4,10,1,10,-5,-8,-8,-5,4,-3,1,4,-1,2,1,9,9,9,3,5,-10,-5,1,-7,2,-9,2,-2,-2,2,6,-9,1,7,7,9,7,6,-8,3,2,2,-3,9,-9,-9,2,-9,7,-6,8,-2,1,-4,-10,6,-7,8,-3,7,9,6,-7,-4,-3,-9,-6,-7,-10,4,8,-3,-8,-6,7,-2,1,-8,5,3,2,8,-4,3,-7,-3,8,-9,7,9,9,4,9,8,-6,1,-4,6,-5,-1,7,-7,-2,-5,-4,-6,-6,-4,-2,1,5,6,1,7,-2,-8,4,5,-4,4,-5,-2,9,-7,10,9,-10,-7,4,6,-2,-6,-4,2,-1,7,-7,8,4,-6,-5,-10,-7,-5,10,-8,8,1,-5,1,9,4,6,9,9,-4,10,9,-2,-2,-8,7,4,-9,8,7,-7,-3,-2,2,-10,6,-2,-1,1,-7,4,8,-9,-7,8,-6,4,7,2,5,-6,3,-8,-2,-8,10,10,-9,5,-8,1,-8,-3,-9,4,8,7,-8,6,5,-7,-5,3,8,10,-10,1,-4,-5,-9,8,-9,-1,-3,-6,-10,-3,4,8,3,7,9,-3,10,7,-7,9,4,-2,6,5,-5,-2,2,8,-8,-1,2,-1,2,-6,-4,4,6,7,7,9,-8,-10,8,10,-4,-2,-4,3,-10,-4,5,-4,-5,-2,-3,-4,-9,-5,-4,-3,-3,7,8,5,10,-4,-9,-3,-1,9,-5,5,1,2,-5,4,-2,7,-2,9,4,-4,-4,-9,3,9,5,1,-5,1,-8,8,-7,-1,5,-10,5,-2,-4,-6,-3,4,-10,-3,-8,3,-9,-7,5,-7,9,-1,-3,3,-6,-4,-3,-8,-3,-8,-5,-6,-3,5,10,8,9,-4,-2,2,8,-8,4,4,7,6,-2,-8,-5,2,-5,5,-2,8,5,-4,8,4,8,-9,1,-6,-8,-7,-7,10,-3,-4,3,-1,-6,3,-6,5,-6,-10,-8,9,1,2,-9,8,7,-7,5,-9,2,4,1,-4,2,4,-8,-7,-3,5,-1,-3,6,-9,5,-2,1,5,-5,-9,-2,-6,-9,1,4,-3,-10,5,4,7,-3,-8,-4,6,-3,6,-1,-8,-9,-2,5,-2,-2,9,1,7,6,8,-10,1,1,-1,-4,-3,-7,8,10,7,6,-8,-3,-1,-4,-8,3,-10,-7,-5,7,3,-2,-6,-10,-2,10,-3,7,-9,-3,5,-6,-10,-5,3,-2,-8,7,7,-8,6,-1,10,-3,10,5,3,10,4,10,-9,-4,-9,2,10,4,-7,-3,2,-5,-5,8,4,3,7,-5,-6,-3,2,10,7,-6,-9,-3,-8,-3,-1,-2,3,2,7,-4,8,7,-5,10,10,-8,8,10,-10,-8,6,-5,-5,8,-4,-6,-2,-2,1,2,-9,-2,10,2,7,-10,-2,-3,-1,1,-5,-8,2,-5,2,-6,-8,8,10,-9,-2,9,3,2,-5,9,-10,7,5,-4,-9,-7,-7,-4,-9,-4,-1,4,7,10,-9,-1,4,-10,10,-5,2,-8,1,8,7,8,6,-4,1,6,2,6,7,-4,-10,8,3,3,-7,3,-4,4,6,-3,-3,-5,-8,1,-9,-2,6,-10,-5,-2,-5,-8,5,-9,1,5,2,-7,3,6,2,10,8,-6,3,7,4,-9,7,-9,-9,-10,-8,-9,-4,-2,3,-4,-2,-5,-10,-4,-6,-3,-10,-1,9,-8,-10,-8,4,-3,-4,9,9,2,4,2,-1,-3,7,8,7,5,-4,4,-4,4,-3,-3,-7,-10,1,1,6,2,1,-9,7,6,6,-9,4,-8,8,-1,-8,-6,-2,-2,-4,-2,-4,3,-3,-3,6,9,5,9,1,-8,1,-8,4,1,-4,-3,4,-10,-3,-3,-4,9,10,-5,-7,9,-9,-1,7,-1,7,-9,-1,5,1,3,2,5,1,2,4,-6,-8,-6,-10,-6,-4,-7,6,-9,2,2,-5,8,8,-3,-1,5,-3,6,1,-10,9,-10,-1,-3,10,-9,-6,-8,-6,9,10,-9,-7,8,-7,5,-8,-2,-3,-10,-2,-5,-5,-5,5,-8,-7,10,10,-4,-8,6,3,3,-4,-6,-3,7,7,8,-3,9,-3,-4,8,-1,-6,-2,-6,-2,1,7,10,-3,5,8,-8,-7,-7,6,-10,4,4,2,5,10,-3,-4,-2,-9,8,4,8,1,-4,-5,-1,-8,-6,-7,-8,1,-4,6,9,3,-5,-7,8,-10,-2,5,-3,2,-5,4,-4,7,-7,-3,8,-8,-3,-8,3,-3,3,2,-3,9,3,-3,6,6,1,-2,7,2,4,-1,7,6,4,-10,-2,8,10,-4,-1,2,10,-3,-5,-7,6,-10,5,-7,-1,7,3,1,-7,2,5,-2,-9,4,-1,-4,10,-1,9,-4,-2,6,-6,-9,-3,-1,-4,-5,-9,10,7,-6,-10,-2,5,-9,-6,-2,-5,-5,1,-7,8,-1,-9,6,5,-5,-1,3,-2,4,-9,-8,9,-3,9,9,-3,6,-1,10,-6,-10,1,-6,-8,-8,-9,3,10,-2,9,-6,-2,-4,7,-9,-10,-4,4,3,2,-1,10,1,-2,-10,-6,1,1,1,1,10,2,-2,4,10,-9,-9,7,-10,4,-7,-8,-8,-6,-6,-2,-8,-2,3,-6,-4,-4,-5,-2,9,6,-6,-6,3,5,1,-8,4,-9,-8,9,-1,2,3,2,-1,10,5,2,-8,-9,-6,7,-7,-6,1,-6,8,8,-3,5,-1,1,-1,-3,-2,9,1,10,10,4,1,4,9,1,2,-8,-3,6,4,2,-4,-5,-6,-3,-3,10,7,3,5,10,2,-8,-6,8,8,5,-10,6,-9,4,8,-6,-7,-2,3,-10,1,9,-4,7,-6,3,7,3,10,6,3,-4,-10,-5,-10,7,4,-9,2,10,2,-5,-5,-5,-8,-5,-4,5,9,5,4,-1,10,7,-9,10,-2,-10,-3,-4,-5,-4,-1,-1,9,-10,-1,-3,4,-1,-9,-4,-5,-2,9,-9,-8,-3,2,-9,-3,-5,-3,-3,2,-2,8,4,2,2,-3,-8,-4,9,-7,8,-1,-4,5,3,-5,8,3,-5,-9,10,7,-2,1,8,10,-9,9,5,-3,1,5,9,3,-5,-10,4,-5,10,-6,5,4,-8,9,9], dtype = "int64")#candidate|1593|(1320,)|const|int64
const_1594 = relay.const([[5.302068,-1.635351,6.021861,-8.146644,9.593570,2.125168,9.464228,-5.566394,-6.039685,-4.802164,-4.974409,-5.088619,4.555021,-2.694972,-6.854043,-4.671851,5.407930,-6.979392,-8.859505,-2.296566,9.380062,-9.570930,-0.511300,4.727591,-3.163817,-8.806005,-2.180543,1.730329,-7.246336,6.513084,-7.937735,5.572036,-8.538680,-2.499862,-5.988127,-2.806815,-9.797987,-2.366757,-9.129303,-9.254048,4.965482,5.468933,8.231546,-2.934406,-6.524836,3.274571,5.490020,-2.180991,-8.444171,1.432835,-7.045087,-8.261167,-5.636658,0.953622,7.375876,7.259705,-5.574306,-5.718078,4.305395,0.306742,-0.256225,-8.834619,7.153825,8.546136,-4.792245,-2.200173,5.264611,8.887854,3.165318,-4.362048,-0.079333,-4.917491,-6.888977,4.575669,2.392581,-9.864880,0.612276,4.987443,6.187568,-1.122037,2.144745,-1.696823,-2.835515,-7.249740,-5.001514,-7.382955,-6.533308,6.838376,2.442155,-1.143078,-8.674421,-5.989514,-5.863451,-7.543450,-0.891320,5.802078,-1.137790,-4.139830,0.228115,-0.180671,6.373024,3.548594,1.415870,0.955618,0.068963,1.366097,-6.807302,4.360552,-0.455754,-6.566292,-7.970814,-4.234938,-4.432691,2.744651,-9.237907,9.099714,-7.151724,7.058721,-0.073565,-5.504252,7.806924,4.396909,3.226295,-9.958825,-2.414499,2.389802,-4.817065,0.083921,-7.706569,-0.184825,2.421023,9.571794,-4.553030,5.691743,0.798582,-5.881329,-4.717646,-2.624606,-6.442686,8.218490,3.672854,-4.567983,-4.523770,-4.452250,-4.568273,7.247602,7.639627,-4.430152,-6.365620,-2.191259,8.291388,-7.519644,-3.674051,-0.313038,3.625449,4.986465,-8.327807,-5.050576,-5.393464,2.372746,0.321438,-7.921921,2.836982,8.168565,-1.159541,3.911982,-3.632817,0.361134,-3.662858,-1.028908,8.743997,8.180634,4.467792,6.901536,-9.722772,-6.656654,4.041205,-6.122131,4.365114,-5.606604,9.040305,-6.552431,0.797980,-0.527240,5.214031,9.439142,0.280728,-7.505168,-1.491229,-4.644108,-7.007024,1.903555,9.417425,9.839747,4.174900,-1.943640,3.737258,-1.423297],[1.290094,2.922919,8.529115,4.370639,1.568078,6.130358,8.187778,-6.269896,3.052179,-6.511472,-1.523166,8.215666,4.880623,-4.000702,-7.357168,-3.865427,-6.746375,-0.347934,-4.299285,-6.750544,5.718901,-8.647512,8.744927,1.927830,-4.595160,0.535916,0.215661,-7.615277,-4.173907,9.816241,1.356978,-7.359266,2.242449,-5.923537,0.794367,4.350871,-9.349665,6.976678,6.577669,-9.250251,-2.071522,-0.832819,7.278380,0.262462,7.785966,-1.965672,-9.404981,-9.353190,-2.801718,5.027613,6.068221,-3.727496,-0.483809,7.669497,-0.045767,1.005996,7.302809,-5.305429,-5.120640,5.294268,1.488227,1.317595,-6.554003,9.175152,-9.459129,-0.748733,-4.439588,9.158649,3.610989,-2.395078,3.242451,-8.674695,9.813680,2.293282,-5.562238,8.792800,-4.792576,2.585895,8.255332,9.269331,-4.461902,8.683234,9.458702,8.401555,-0.305555,-0.323673,-1.649620,-1.055850,-4.262807,9.754729,-2.750440,-2.777143,7.914512,-8.969625,-9.194975,-1.011034,2.230317,8.263405,6.672618,0.533579,-6.379138,1.444658,4.210987,-9.984701,0.728364,-9.512627,7.570667,-3.189509,6.662267,3.927814,0.956055,-5.730206,4.727418,9.813954,-3.222811,-9.899037,-1.389073,3.966986,-2.435197,3.384853,-8.413401,2.252985,-8.887739,-5.714895,-8.316563,-4.568367,-7.155175,3.483510,-0.440156,-3.662106,2.014005,-2.343596,-5.449451,0.801199,2.277749,-7.758258,1.255399,5.893118,3.758619,9.586970,9.406563,4.073973,-0.356337,-8.006041,5.411733,9.048346,6.870149,3.323025,-2.901614,-8.950191,8.062384,0.943220,8.620572,2.707675,-2.752899,-6.402258,-3.891000,2.885867,-9.742390,9.025044,-7.288999,9.315736,-0.187270,1.038042,1.639636,4.225668,-9.314206,9.419027,0.991486,7.897141,5.621484,-2.669144,2.271906,-7.532763,1.155655,-9.483904,9.140793,1.729138,-3.643016,-3.264463,4.306591,-4.792850,-7.747952,1.188646,-6.403954,5.610541,-6.990688,3.886436,-3.599890,-2.249726,-2.770052,6.337693,-1.632669,2.688103,-2.629351,-6.967098,3.827928,9.964434],[0.562667,-2.741934,6.276246,9.935061,2.756364,-1.209254,8.791835,6.820878,0.540380,3.419120,3.784838,-7.421955,-1.092939,1.938987,7.739909,5.511980,4.707922,0.354435,5.983566,5.718592,5.637420,-1.347946,-1.685288,-7.765443,3.183393,9.399453,1.031126,-5.376181,-1.699025,0.451771,-2.863549,-6.435587,-9.495848,8.732458,2.097442,-3.299838,-6.512259,8.202804,-9.407036,-4.688500,7.448129,4.845978,0.312026,-9.496347,0.946858,7.508149,-6.297639,-6.829418,5.245975,-0.593290,-5.920704,-2.283279,-2.875892,1.880808,5.732935,-2.878135,7.635499,0.787250,0.393335,-5.611699,-4.358139,-8.547844,-6.438523,2.400720,-9.706630,-5.314961,0.504643,0.215173,-0.705958,-7.939566,-0.061921,-6.646067,-2.030169,-2.284513,5.483118,7.925107,7.919929,-0.461929,-3.084734,6.127453,1.804658,5.667680,-7.749865,-9.278057,2.153386,8.356682,2.723439,4.109536,2.810268,3.238656,-1.703952,-5.325570,5.903802,1.963541,7.000301,-0.694990,-3.202707,6.065248,5.975656,4.757540,-2.129799,-4.957121,-1.260484,-4.991358,-8.242354,-2.579672,-8.875527,-2.678046,5.297164,9.157411,-9.253031,-6.208542,2.335090,-6.731752,0.892210,6.492638,-6.285758,-8.516461,4.791414,-3.966797,-3.760034,-1.655473,-8.465347,-5.318443,5.818337,-2.045241,-5.397300,-4.906295,-1.104403,-5.450580,1.332708,8.681418,4.067808,-1.643518,-7.580145,-2.385496,-9.957782,5.613970,6.243398,-3.984958,6.410897,5.842225,8.720468,0.549183,-7.449144,-3.380565,5.274296,9.724718,1.224983,9.370293,-9.379445,-8.519136,3.363205,0.257532,-6.198024,0.587278,-2.523352,3.603400,-2.226391,4.954112,-8.326558,-8.283595,-9.004685,-7.656640,-7.267100,1.627304,-7.340308,1.270471,-2.966526,-5.376949,-2.205939,-8.276439,-7.708612,7.545806,7.807434,8.354283,-7.780719,2.342620,1.470005,-6.529222,-3.365815,0.903399,0.761832,-9.164817,9.707187,-9.050069,-8.721629,5.419424,-1.812988,1.487396,6.111745,7.077527,2.532496,-4.131261,3.055420,-9.557780,8.749524,-3.809705]], dtype = "float32")#candidate|1594|(3, 198)|const|float32
call_1592 = relay.TupleGetItem(func_1288_call(relay.reshape(const_1593.astype('int64'), [15, 8, 11]), relay.reshape(const_1593.astype('int64'), [15, 8, 11]), relay.reshape(const_1594.astype('float32'), [6, 99]), ), 1)
call_1595 = relay.TupleGetItem(func_1293_call(relay.reshape(const_1593.astype('int64'), [15, 8, 11]), relay.reshape(const_1593.astype('int64'), [15, 8, 11]), relay.reshape(const_1594.astype('float32'), [6, 99]), ), 1)
func_1259_call = mod.get_global_var('func_1259')
func_1261_call = mutated_mod.get_global_var('func_1261')
call_1633 = relay.TupleGetItem(func_1259_call(), 0)
call_1634 = relay.TupleGetItem(func_1261_call(), 0)
func_715_call = mod.get_global_var('func_715')
func_718_call = mutated_mod.get_global_var('func_718')
var_1636 = relay.var("var_1636", dtype = "int64", shape = (144,))#candidate|1636|(144,)|var|int64
call_1635 = func_715_call(relay.reshape(var_1636.astype('int64'), [12, 6, 2]))
call_1637 = func_715_call(relay.reshape(var_1636.astype('int64'), [12, 6, 2]))
output = relay.Tuple([call_1571,call_1592,const_1593,const_1594,call_1633,call_1635,var_1636,])
output2 = relay.Tuple([call_1572,call_1595,const_1593,const_1594,call_1634,call_1637,var_1636,])
func_1640 = relay.Function([var_1636,], output)
mod['func_1640'] = func_1640
mod = relay.transform.InferType()(mod)
mutated_mod['func_1640'] = func_1640
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1641 = relay.var("var_1641", dtype = "int64", shape = (144,))#candidate|1641|(144,)|var|int64
func_1640_call = mutated_mod.get_global_var('func_1640')
call_1642 = func_1640_call(var_1641)
output = call_1642
func_1643 = relay.Function([var_1641], output)
mutated_mod['func_1643'] = func_1643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1238_call = mod.get_global_var('func_1238')
func_1239_call = mutated_mod.get_global_var('func_1239')
call_1703 = relay.TupleGetItem(func_1238_call(), 0)
call_1704 = relay.TupleGetItem(func_1239_call(), 0)
func_849_call = mod.get_global_var('func_849')
func_853_call = mutated_mod.get_global_var('func_853')
const_1720 = relay.const([8.913810,4.669491,1.027605,-5.187826,-2.465643,6.174575,-5.818123,5.424342,5.265078,-9.658239,-0.833352,4.127756,-7.988644,-8.794579,6.731040,-8.701093,-8.296713,2.985881,-3.240697,5.494680,-2.416412,-3.370851,4.290180,-6.320543,-8.332343,-0.636012,0.585745,-8.904374,-5.892721,2.183760,-7.173860,-1.701330,9.579559,-3.348239,4.764429,-7.946942,0.645788,0.110836,9.484167,0.762329,-5.367059,-8.375303,-9.848060,5.367835,-9.959142,-6.451712,0.818798,1.814352,-8.869306,-7.146138,3.266081,-6.716895,8.763639,-0.949749,4.230364,2.327428,1.558315,2.909870,-4.237005,-3.777403,-1.588244,-3.922231,-0.996648,-5.577285,5.855136,-2.158990,-7.448595,1.315674,-7.187050,-3.180685,-5.136085,-7.615451,2.194651,9.105340,-2.572616,-5.911879,-1.074148,-4.397214,-0.468143,2.514285,9.480606,1.020020,-6.645174,-2.293864,-2.815872,-0.053727,-5.864164,-5.346531,8.539783,3.791096,9.114137,-1.613540,-9.492797,-4.676343,0.021537,9.212651,-4.303295,-5.595922,3.485621,1.897142,7.643061,-3.638904,-6.722504,-6.967777,-3.093668,-3.087999,6.414414,4.246725,4.849948,8.159943,-7.893178,-1.679366,6.682277,8.852595,1.964394,-6.006131,9.938901,-8.127879,9.662801,2.094970,-5.506170,1.759615,-6.141485,-5.959491,7.776129,-8.652399,-1.384126,-5.742244,-6.670408,-2.436935,-2.949717,-7.313953,-4.286510,-2.414152,3.959398,5.556312,0.046489,-7.053524,-7.555587,8.767114,-3.198197,8.885359,-2.209224,-0.474310,3.506067,-8.719074,4.896857,4.222903,9.033709,1.895870,9.227173,2.514275,6.511498,-7.729463,-4.077958,4.032908,-1.413163,9.892169,-8.241086,9.611644,-6.313923,-0.078279,-3.917568,4.033036,1.801622,5.281959,-0.380982,2.136430,-6.113079,1.488373,5.979692,9.676578,2.206003,2.043818,-9.407381,0.340268,-1.207379,-2.756309,-6.091467,8.691940,-7.957218,-4.129495,9.238271,-7.784806,-1.277509,-3.171707,1.850489,5.298941,-1.044792,-0.020705,3.782156,0.793067,0.987005,-6.411570,-5.160003,0.791249,-7.891850,0.817298,8.872824,5.904238,4.198077,-0.459115,5.758806,1.571248,-2.753171,-8.207423,4.212574,1.813371,2.518242,-8.931804,0.419990,-2.274806,-1.255472,9.133108,-1.155275,0.233797,-6.650519,-6.052177,2.802563,6.187058,1.045447,8.649672,-3.854731,-8.688998,-9.866019,0.675607,-5.179284,-2.765478,4.787609,8.655627,-5.694109,3.760280,-6.177168,3.478561,1.871852,5.490217,-9.384270,1.022413,5.701224,4.881092,2.301522,-4.461718,-9.120079,-5.327083,-9.839515,7.528328,-0.658323,-9.702909,-1.391960,-4.975072,-6.753845,9.694869,-5.208803,1.784315,-2.560166,8.189819,8.132400,9.637959,-1.327869,4.625826,9.549730,-3.692352,2.128645,-9.039907,-6.630940,4.959974,-6.689368,3.557618,-6.444162,4.503923,4.207327,-0.744246,-6.928168,5.147447,6.830673,0.289403,3.193702,-8.761065,-9.708149,7.437827,3.957202,-4.865340,3.652895,-2.354310,-5.010498,-6.327989,-4.566887,7.034684,-5.660315,-8.495299,3.493039,6.869446,7.332558,-3.421625,-2.439906,-3.141386,-4.235057,-8.707785,-0.832973,2.951295,-5.665122,0.446403,-1.909081,4.954232,3.300265,-4.788266,7.595224,4.536618,9.515483,2.406680,5.137117,0.068678,-3.787851,0.184854,-5.647880,0.862031,-5.086147,-8.392830,9.495842,-2.772165,4.161588,-2.987530,-5.488918,1.842855,4.488270,6.979300,-8.307021,-1.690435,-6.813331,5.141515,1.245095,8.419263,5.104853,-6.328159,3.513865,2.374910,-3.011311,-8.158810,-2.067719,-8.997960,-7.470705,-7.184822,6.705014,7.143217,8.576627,-7.988381,7.907867,-3.195887,3.304665,-5.508013,8.986947,2.918541,5.770960,-7.461083,6.199409,0.715818,7.382209,-9.890169,-5.340477,-6.560231,0.727393,-6.504564,4.607930,9.264323,-4.546952,8.352538,-3.085786,1.280914,-2.150572,9.570776,-2.813624,3.041785,-8.177501,-6.002059,7.449957,-7.755291,-8.089071,-9.272128,-2.028449,-7.985774,0.469535,-1.809943,4.057214,8.274747,-2.732111,5.045574,8.675575,-2.050201,9.904720,-6.524298,4.662065,6.293095,-2.718212,9.966918,8.908416,3.695124,-7.256092,-9.712213,5.838065,7.104267,-4.282185,-0.453206,-7.447587,-7.549394,-2.351151,-2.118173,4.098161,3.442995,0.366467,-6.424325,-5.280736,6.422244,-8.162008,-9.854873,3.242772,9.610775,3.488013,4.413766,-6.947884,4.643165,8.366648,-3.818050,9.925085,-8.525811,9.258001,2.649861,-7.874608,-5.422451,4.582224,-7.759596,-1.871267,-1.141279,6.671481,9.614853,8.069676,-2.119223,5.921291,-0.726594,-0.826521,1.452421,0.901518,-0.585913,-8.326725,-0.087643,4.805718,-3.893729,-2.066096,4.957532,0.669626,8.830840,5.000052,6.331801,4.794743,8.073666,-5.660669,6.611638,-8.052967,1.825719,-1.834296,-5.732940,-5.344973,7.718393,2.775955,-2.270845,-4.452190,-3.952985,-1.972020,-3.839409,7.525386,1.735361,-2.974249,9.976666,-5.895081,1.964933,2.653400,3.027292,5.865200,-9.780140,4.469142,0.571563,8.708033,-6.272951,9.382664,7.247905,-4.532713,-3.418215,6.155316,5.101750,-7.731958,-1.339149,-4.818965,7.275389,-5.614333,4.635104,-7.691484,8.390841,-1.751990,9.873419,-7.512970,-2.561481,-3.255740,-1.770040,-7.491906,1.682905,-8.013156,-6.983303,6.398898,-4.089249,-1.178748,-4.156838,-3.370013,-8.740939,4.169684,-3.013985,-9.523696,-7.970235,2.284309,-1.811225,1.458107,-4.487331,0.360604,-2.988955,-1.435655,-7.642290,-8.347224,-3.339044,6.054244,4.131098,-4.070714,-6.849214,-3.436208,6.184479,3.226573,-2.669883,-5.494806,4.774527,9.844504,-8.220548,-2.793911,-0.253055,8.137342,-7.634549,8.533270,0.968764,8.635204,-5.107094,6.084096,-3.214536,0.291854,1.551074,4.842441,5.088916,-4.126919,3.476299,9.745587,-7.237645,-9.586858,7.581117,-5.859131,1.395131,-3.312195,-5.976293,-9.367544,8.004376,6.351950,6.817777,1.752528,8.135198,-5.541861,-2.660956,6.953999,9.731211,1.113880,2.631141,4.479597,-1.002867,5.644952,4.519263,4.091590,6.776936,8.031971,7.775926,-2.080108,7.588506,7.742494,-2.782383,-0.181803,-9.958336,-1.199406,9.565703,0.276881,5.255144,-1.467060,-0.075277], dtype = "float32")#candidate|1720|(594,)|const|float32
var_1721 = relay.var("var_1721", dtype = "float32", shape = (1560,))#candidate|1721|(1560,)|var|float32
call_1719 = relay.TupleGetItem(func_849_call(relay.reshape(const_1720.astype('float32'), [594,]), relay.reshape(call_1703.astype('uint8'), [5, 9, 3]), relay.reshape(var_1721.astype('float32'), [1560, 1]), ), 2)
call_1722 = relay.TupleGetItem(func_853_call(relay.reshape(const_1720.astype('float32'), [594,]), relay.reshape(call_1703.astype('uint8'), [5, 9, 3]), relay.reshape(var_1721.astype('float32'), [1560, 1]), ), 2)
output = relay.Tuple([call_1703,call_1719,const_1720,var_1721,])
output2 = relay.Tuple([call_1704,call_1722,const_1720,var_1721,])
func_1746 = relay.Function([var_1721,], output)
mod['func_1746'] = func_1746
mod = relay.transform.InferType()(mod)
mutated_mod['func_1746'] = func_1746
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1747 = relay.var("var_1747", dtype = "float32", shape = (1560,))#candidate|1747|(1560,)|var|float32
func_1746_call = mutated_mod.get_global_var('func_1746')
call_1748 = func_1746_call(var_1747)
output = call_1748
func_1749 = relay.Function([var_1747], output)
mutated_mod['func_1749'] = func_1749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_885_call = mod.get_global_var('func_885')
func_886_call = mutated_mod.get_global_var('func_886')
call_1760 = relay.TupleGetItem(func_885_call(), 1)
call_1761 = relay.TupleGetItem(func_886_call(), 1)
func_1288_call = mod.get_global_var('func_1288')
func_1293_call = mutated_mod.get_global_var('func_1293')
var_1771 = relay.var("var_1771", dtype = "int64", shape = (1320,))#candidate|1771|(1320,)|var|int64
var_1772 = relay.var("var_1772", dtype = "float32", shape = (594,))#candidate|1772|(594,)|var|float32
call_1770 = relay.TupleGetItem(func_1288_call(relay.reshape(var_1771.astype('int64'), [15, 8, 11]), relay.reshape(var_1771.astype('int64'), [15, 8, 11]), relay.reshape(var_1772.astype('float32'), [6, 99]), ), 4)
call_1773 = relay.TupleGetItem(func_1293_call(relay.reshape(var_1771.astype('int64'), [15, 8, 11]), relay.reshape(var_1771.astype('int64'), [15, 8, 11]), relay.reshape(var_1772.astype('float32'), [6, 99]), ), 4)
output = relay.Tuple([call_1760,call_1770,var_1771,var_1772,])
output2 = relay.Tuple([call_1761,call_1773,var_1771,var_1772,])
func_1776 = relay.Function([var_1771,var_1772,], output)
mod['func_1776'] = func_1776
mod = relay.transform.InferType()(mod)
mutated_mod['func_1776'] = func_1776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1776_call = mutated_mod.get_global_var('func_1776')
var_1778 = relay.var("var_1778", dtype = "int64", shape = (1320,))#candidate|1778|(1320,)|var|int64
var_1779 = relay.var("var_1779", dtype = "float32", shape = (594,))#candidate|1779|(594,)|var|float32
call_1777 = func_1776_call(var_1778,var_1779,)
output = call_1777
func_1780 = relay.Function([var_1778,var_1779,], output)
mutated_mod['func_1780'] = func_1780
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1782 = relay.var("var_1782", dtype = "float32", shape = (15, 16, 13))#candidate|1782|(15, 16, 13)|var|float32
uop_1783 = relay.atanh(var_1782.astype('float32')) # shape=(15, 16, 13)
func_1640_call = mod.get_global_var('func_1640')
func_1643_call = mutated_mod.get_global_var('func_1643')
const_1811 = relay.const([7,-7,-5,-3,7,9,10,3,-5,7,-2,-2,5,-6,5,8,-9,-10,-1,1,8,-2,-9,-4,-8,2,-1,10,-10,-3,-4,-6,7,1,10,-8,2,-7,-6,5,1,4,2,8,-2,6,3,3,9,-9,-6,7,6,-8,4,-4,1,-5,-4,6,3,4,-5,5,10,2,9,-5,3,7,9,2,-1,-4,9,5,-5,9,5,-3,-8,-3,6,3,-3,7,-4,-1,-6,-2,-6,-9,5,10,-2,6,-10,8,-9,5,3,-4,-1,-2,2,3,2,-1,-2,6,6,3,-3,9,-5,-3,-6,-5,-4,5,-2,3,2,10,5,-5,10,-4,-2,4,-1,6,-6,6,2,3,10,8,10,-4,-6,5,-9,-10], dtype = "int64")#candidate|1811|(144,)|const|int64
call_1810 = relay.TupleGetItem(func_1640_call(relay.reshape(const_1811.astype('int64'), [144,])), 3)
call_1812 = relay.TupleGetItem(func_1643_call(relay.reshape(const_1811.astype('int64'), [144,])), 3)
output = relay.Tuple([uop_1783,call_1810,const_1811,])
output2 = relay.Tuple([uop_1783,call_1812,const_1811,])
func_1821 = relay.Function([var_1782,], output)
mod['func_1821'] = func_1821
mod = relay.transform.InferType()(mod)
var_1822 = relay.var("var_1822", dtype = "float32", shape = (15, 16, 13))#candidate|1822|(15, 16, 13)|var|float32
output = func_1821(var_1822)
func_1823 = relay.Function([var_1822], output)
mutated_mod['func_1823'] = func_1823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1457_call = mod.get_global_var('func_1457')
func_1459_call = mutated_mod.get_global_var('func_1459')
call_1848 = func_1457_call()
call_1849 = func_1457_call()
output = relay.Tuple([call_1848,])
output2 = relay.Tuple([call_1849,])
func_1850 = relay.Function([], output)
mod['func_1850'] = func_1850
mod = relay.transform.InferType()(mod)
output = func_1850()
func_1851 = relay.Function([], output)
mutated_mod['func_1851'] = func_1851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1238_call = mod.get_global_var('func_1238')
func_1239_call = mutated_mod.get_global_var('func_1239')
call_1854 = relay.TupleGetItem(func_1238_call(), 0)
call_1855 = relay.TupleGetItem(func_1239_call(), 0)
uop_1861 = relay.log2(call_1854.astype('float64')) # shape=(5, 9, 3)
uop_1863 = relay.log2(call_1855.astype('float64')) # shape=(5, 9, 3)
uop_1874 = relay.erf(uop_1861.astype('float64')) # shape=(5, 9, 3)
uop_1876 = relay.erf(uop_1863.astype('float64')) # shape=(5, 9, 3)
func_1238_call = mod.get_global_var('func_1238')
func_1239_call = mutated_mod.get_global_var('func_1239')
call_1902 = relay.TupleGetItem(func_1238_call(), 0)
call_1903 = relay.TupleGetItem(func_1239_call(), 0)
func_1346_call = mod.get_global_var('func_1346')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_1904 = relay.TupleGetItem(func_1346_call(), 0)
call_1905 = relay.TupleGetItem(func_1347_call(), 0)
uop_1907 = relay.log10(uop_1874.astype('float32')) # shape=(5, 9, 3)
uop_1909 = relay.log10(uop_1876.astype('float32')) # shape=(5, 9, 3)
func_1103_call = mod.get_global_var('func_1103')
func_1105_call = mutated_mod.get_global_var('func_1105')
call_1922 = func_1103_call()
call_1923 = func_1103_call()
output = relay.Tuple([call_1902,call_1904,uop_1907,call_1922,])
output2 = relay.Tuple([call_1903,call_1905,uop_1909,call_1923,])
func_1935 = relay.Function([], output)
mod['func_1935'] = func_1935
mod = relay.transform.InferType()(mod)
mutated_mod['func_1935'] = func_1935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1935_call = mutated_mod.get_global_var('func_1935')
call_1936 = func_1935_call()
output = call_1936
func_1937 = relay.Function([], output)
mutated_mod['func_1937'] = func_1937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1557_call = mod.get_global_var('func_1557')
func_1559_call = mutated_mod.get_global_var('func_1559')
call_1967 = relay.TupleGetItem(func_1557_call(), 0)
call_1968 = relay.TupleGetItem(func_1559_call(), 0)
output = relay.Tuple([call_1967,])
output2 = relay.Tuple([call_1968,])
func_1969 = relay.Function([], output)
mod['func_1969'] = func_1969
mod = relay.transform.InferType()(mod)
mutated_mod['func_1969'] = func_1969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1969_call = mutated_mod.get_global_var('func_1969')
call_1970 = func_1969_call()
output = call_1970
func_1971 = relay.Function([], output)
mutated_mod['func_1971'] = func_1971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1346_call = mod.get_global_var('func_1346')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_1972 = relay.TupleGetItem(func_1346_call(), 0)
call_1973 = relay.TupleGetItem(func_1347_call(), 0)
func_1935_call = mod.get_global_var('func_1935')
func_1937_call = mutated_mod.get_global_var('func_1937')
call_1979 = relay.TupleGetItem(func_1935_call(), 0)
call_1980 = relay.TupleGetItem(func_1937_call(), 0)
output = relay.Tuple([call_1972,call_1979,])
output2 = relay.Tuple([call_1973,call_1980,])
func_2006 = relay.Function([], output)
mod['func_2006'] = func_2006
mod = relay.transform.InferType()(mod)
mutated_mod['func_2006'] = func_2006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2006_call = mutated_mod.get_global_var('func_2006')
call_2007 = func_2006_call()
output = call_2007
func_2008 = relay.Function([], output)
mutated_mod['func_2008'] = func_2008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1346_call = mod.get_global_var('func_1346')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_2015 = relay.TupleGetItem(func_1346_call(), 0)
call_2016 = relay.TupleGetItem(func_1347_call(), 0)
uop_2021 = relay.asin(call_2015.astype('float64')) # shape=(5, 9, 3)
uop_2023 = relay.asin(call_2016.astype('float64')) # shape=(5, 9, 3)
func_1821_call = mod.get_global_var('func_1821')
func_1823_call = mutated_mod.get_global_var('func_1823')
const_2030 = relay.const([-7.333460,-3.887383,1.174252,-9.741858,-5.321855,-4.127932,3.114626,-4.189661,-1.548816,3.346667,8.731048,8.025609,2.336055,6.719497,0.596283,2.210620,-4.173440,5.505645,-2.377395,5.651527,5.187461,1.382993,-9.799247,-9.144749,-3.781963,3.147709,-5.706790,-0.159998,-3.371391,-1.570936,-4.770149,-2.357426,-3.537256,-3.856791,1.015355,0.236196,9.586328,5.878121,-1.189655,-4.889951,0.235473,-1.299060,-8.644343,0.708824,-9.209689,-6.167121,4.904830,1.112478,-2.614232,-3.436948,3.218862,5.906844,5.105733,8.026483,-5.214982,-7.398862,6.687345,8.395570,6.541079,0.767810,-7.896381,-9.968941,-4.665221,7.860348,8.491009,-8.271956,1.460792,9.618844,-6.455791,-9.112239,-9.819666,8.481777,0.032809,7.954631,4.263056,-6.493332,-0.072988,-2.517313,-0.412831,7.745173,3.129745,1.550094,4.095998,2.158080,0.494591,-9.018442,-6.355858,1.856770,-0.950280,-2.858667,0.732054,-5.335763,4.741855,-8.605723,-5.201496,0.795591,1.080641,5.446191,3.628623,4.856504,-9.119461,-3.514514,5.683463,5.826740,-5.439242,4.177402,-8.235015,2.123230,-5.862390,-4.899682,-3.865624,4.261398,-5.213338,-7.280825,1.264810,-7.398553,-6.991913,8.822198,-1.539198,8.376201,-8.760922,2.247423,-9.981288,6.091119,-8.021004,-5.685168,9.255478,9.529390,-3.007002,-6.671509,3.327512,2.370960,0.369907,1.634806,0.213409,7.563155,2.607973,9.152927,4.551339,2.894836,-0.033244,-2.500032,7.291241,8.232504,-7.402445,0.227585,-1.756721,2.144819,4.801372,1.174173,2.500858,4.830345,8.765580,5.164321,6.835443,0.436606,-9.840823,8.453222,3.771686,6.435804,-4.264217,7.792491,5.089163,4.858464,7.184523,-5.882222,6.481257,4.227869,-1.313948,4.111048,4.973880,9.888464,8.335817,6.218179,5.982727,-9.146282,-8.210775,-5.629401,-1.266779,-8.468503,-3.969492,-2.695025,-6.439257,4.142306,-1.367857,-3.466789,0.732324,4.838643,3.548492,2.206750,6.539166,-8.577644,3.883818,-6.591367,-1.445297,3.630092,6.186258,-5.643328,6.122022,-5.037228,0.018246,-9.126776,-5.858472,9.325688,-2.858719,-1.986726,-3.869354,0.219091,2.400732,3.959293,3.420384,-2.958264,-4.755957,-5.419579,-0.472914,-7.425257,-9.772646,-4.999967,-5.218836,-0.024248,-6.924135,6.743195,6.827192,-2.928734,-8.218587,0.975759,-2.996479,-3.739283,-7.129313,7.590106,1.311303,-4.618711,-3.258973,-5.361685,-8.290876,0.212125,6.118226,0.343423,-3.334448,8.172036,3.939343,-3.378134,-1.743959,0.752659,2.111305,-6.568099,-8.209415,-8.705881,8.078168,4.824144,4.535335,6.010937,7.655359,-0.136252,-0.539214,-9.798632,-4.727082,-9.896913,3.168014,2.993027,-3.268784,5.466620,0.197171,2.657307,-5.644903,-8.613220,6.689863,-4.697472,3.691188,-9.703470,-2.706724,8.743816,5.905120,-2.143773,6.310126,-7.313682,4.265377,-0.161122,2.494597,8.675031,1.321181,-9.404253,0.988765,5.026219,4.668494,1.466163,1.459669,-7.372195,-0.767289,5.871218,-8.491421,5.025163,-7.705645,-4.324371,1.935631,5.602992,-2.716281,1.341412,2.831461,-9.917340,9.923634,-7.763042,-4.920744,9.794398,7.467651,7.735955,-0.781005,9.055608,-0.789808,9.404367,-0.193690,-3.656522,-8.790890,-9.399805,5.363815,-4.363001,-7.075032,8.614909,7.727810,2.354604,9.610491,-1.400498,2.523178,-1.841410,-4.157403,5.364841,1.871259,9.522219,-5.094933,4.976296,-8.788813,-8.959029,-6.367559,4.698926,-2.608925,0.720486,6.194993,-2.318657,3.123849,5.761918,-5.046975,-4.267476,-2.754569,1.499372,-1.501291,-1.541388,-2.871038,8.202482,-4.972261,-4.565522,-1.896769,1.683207,3.681245,-1.943384,-6.289509,-3.680812,8.557810,-6.835893,-1.830567,-3.783494,-4.267218,4.241160,3.745291,-0.104345,-8.196569,-4.831256,-7.083011,-2.332342,9.085742,-4.928161,-4.273038,-6.997212,-7.363861,-0.977721,-8.112073,6.451825,3.368363,3.421740,6.603341,4.284835,-2.296672,-3.840517,3.609541,6.478276,-4.843932,-2.894593,-1.247819,-9.224647,-5.338062,-8.611969,4.409730,8.848115,-0.341188,1.750130,-6.997929,6.586569,-3.094401,9.629013,4.064679,2.058087,0.892576,-7.969900,-9.965104,-4.577642,4.790028,-3.159219,-1.370896,-3.028872,-2.994733,-7.919054,-6.087672,-0.159440,-8.158843,-8.135019,-4.419083,1.166529,3.991643,3.452833,-1.032594,-5.989573,-5.372514,-4.900686,0.660703,-3.290837,-8.749348,-5.460397,-1.673108,0.774852,8.039961,-3.950013,2.152101,2.125842,-4.316020,9.970113,-6.949842,-6.530599,-7.367947,9.668945,9.127653,8.582346,-1.114166,-7.957879,-3.499893,8.996371,0.802993,3.118258,5.174538,-0.571152,-8.163154,-2.988183,3.931221,8.296003,8.679529,1.100978,-9.902412,-8.177748,4.163167,-7.918603,2.834972,5.936906,4.310344,1.128786,0.364868,-2.789411,5.408864,-8.219626,-4.095135,-8.133864,-7.885982,-8.496978,9.762830,4.259254,-5.548756,-3.273456,-3.301319,-2.887235,0.618546,-0.015411,5.630990,-8.201716,-9.530777,-0.822598,-0.739711,-7.997018,-7.159123,-6.217374,-6.409344,-2.636431,0.942056,-2.012138,-9.128515,6.152163,-7.386219,-4.766307,6.209078,7.830202,2.134992,-5.210415,-1.062931,-1.184986,8.184959,-8.617942,2.935579,-8.897715,-3.253717,-9.149846,-1.299102,-9.653752,5.899345,-7.103731,4.064557,-7.595383,3.974728,-9.774543,-2.704239,5.156054,2.528116,1.650891,-2.400517,0.846940,-1.914521,-9.241826,-0.278689,8.529222,5.145212,-4.190436,7.627365,-4.131714,8.727604,2.152775,2.221633,7.265493,-0.710603,9.210503,3.854813,6.798505,-2.661942,-6.466581,-8.098641,6.429753,2.189753,-1.432638,-5.818518,-8.749429,-8.762891,5.160836,-0.144269,-4.653740,0.729993,4.630692,5.169422,-6.302919,-5.602441,-4.473181,0.269552,2.083369,5.838571,4.989065,-0.615694,9.332164,5.129273,-0.404900,5.424696,8.781300,2.581477,4.428800,1.201202,-1.694299,-8.822637,7.751008,-7.899906,0.051381,-9.791700,-8.240906,-9.994463,1.251133,-5.242769,5.738622,3.471300,2.659843,3.876836,6.548666,-5.431676,8.541180,-8.703371,-9.996672,2.661444,-5.815137,8.627323,-9.252314,-1.663382,5.300832,1.262912,-4.201152,3.076182,5.543239,9.507477,-7.273329,0.652914,-8.033178,-1.653603,-2.959025,-4.386532,6.669152,8.385998,0.310462,-9.834224,3.593749,3.864430,-1.453387,0.843974,-9.522669,-5.334072,-6.913742,-7.042477,0.687623,-4.801467,-9.197874,-6.803539,-8.391581,4.485802,4.681197,-0.137394,3.673148,-1.703349,3.766305,-9.658964,-1.151934,-5.136557,-9.089407,-0.783086,6.129271,0.912794,2.317009,1.201218,-4.629633,-6.633492,-6.796501,-4.924985,-9.294124,7.189030,-9.958610,8.665495,-9.811274,0.580591,-2.538706,-8.227188,-1.444583,9.124478,7.259999,2.451376,7.589501,7.929904,6.302539,-9.129311,4.903346,0.640239,1.279839,-3.805125,-5.155503,-5.354329,7.464294,-6.142723,-2.779170,-4.573415,-1.314117,0.041445,2.674068,-5.075589,-2.477998,-6.475317,-8.554803,3.043899,7.765252,-0.868272,-6.477267,-4.956933,3.271577,5.819187,7.488587,-7.831068,-9.742138,7.015270,-7.801018,-3.357181,-6.083211,-1.576214,-0.606247,-8.896033,-4.770614,1.990698,7.376035,-4.737338,-5.135959,2.936810,5.397745,4.888902,0.519483,5.133734,-2.737347,1.073189,0.977919,-8.298232,8.914662,6.085951,2.486532,-0.594560,-2.327066,7.977976,4.278729,-6.934705,-3.031385,-1.953591,0.028677,-1.386763,5.095658,-2.973667,1.902588,-5.107380,-4.952246,-2.074992,-4.530917,-7.219667,-8.661214,4.036349,-3.405031,-1.906278,0.460442,5.467582,2.607395,9.329862,2.140571,7.449024,-3.111720,7.112409,6.600334,-3.002896,6.618539,-5.731502,-9.610294,4.569749,-6.169687,-3.874374,-7.489749,-0.390820,7.886362,-6.366003,5.744832,6.990270,1.352154,-3.754357,6.424462,-7.050363,-8.088230,-4.920052,-6.627966,6.924706,1.661811,-1.305725,2.140122,0.796968,-7.566455,5.510358,6.216540,4.766312,-0.506625,8.702688,-7.525884,-5.535860,7.098142,-9.933291,-7.266699,-6.978871,9.389219,8.537703,0.449797,3.122728,-6.438228,5.025194,5.364770,-9.942914,1.684050,2.412552,7.484422,-6.897935,-7.070749,-9.694425,-9.582284,5.960704,2.985318,6.844344,7.476571,0.551698,3.979413,-9.740815,7.533377,-3.125916,-6.665892,2.624033,1.024494,-8.786062,-6.197844,-0.015909,0.456693,-2.684252,-8.853013,6.068003,-1.316212,3.882839,-1.181974,-7.619658,-0.883574,-7.599081,2.681610,-8.864221,7.365061,-7.954759,3.212750,-3.130165,-4.903497,-6.431858,-0.028760,3.253721,-2.212646,5.787630,-3.821081,-2.151180,-4.634445,2.836031,-9.982257,2.520160,4.341730,4.475597,-5.598796,5.829425,-9.717338,-4.498550,-1.031954,7.189933,-4.964490,2.667199,0.119115,-9.022336,-6.187039,9.281479,6.251736,-7.664491,-3.857255,-1.695890,1.488390,-7.897763,5.389553,5.382089,-3.874131,-4.630211,0.502828,1.335496,7.611361,-1.503831,7.400710,0.434212,-3.915745,3.672192,2.275079,-5.447151,-8.356537,8.703111,0.445462,9.623660,1.815586,-0.143457,2.462770,4.000153,9.998740,-1.524741,3.389880,-7.788095,8.907162,5.892862,3.015600,1.947937,-3.356306,5.855076,9.227429,6.692078,-4.140304,7.424114,4.619303,-2.078393,4.255861,5.636204,-2.471665,-1.563063,-3.359130,2.465716,7.247452,6.336665,0.703816,2.737282,2.062648,5.447796,6.144822,0.401887,-6.376672,8.091049,-6.104843,-2.890690,-6.788162,-6.666028,-7.254994,-6.335187,-4.809186,7.361906,-5.502357,1.286236,7.962442,2.451074,3.809151,2.321213,1.261855,6.115087,-7.982688,-8.035359,6.858745,7.339047,-6.015311,9.508131,7.332581,-4.962245,-2.634161,6.927170,1.047775,-6.830406,0.326266,-2.141876,-5.047135,-2.552287,7.721327,-1.701013,4.705789,2.939705,1.682823,-4.987510,1.737153,8.780111,-2.744621,-0.285938,9.049343,4.909338,-7.363419,0.249359,0.108598,5.947047,0.908190,0.352762,9.512105,-7.064674,-6.855114,8.365776,-2.150991,7.045826,6.471099,-9.627292,-6.909102,9.663790,0.419219,0.570693,-0.973067,6.684507,-6.813983,-4.856173,4.037796,0.568055,-2.474715,-3.770361,6.513470,7.680505,7.354463,8.570297,0.316099,-8.822708,-1.912815,-5.418266,7.244821,-0.811777,-1.721887,1.742344,4.872814,4.293766,-6.870620,-3.721367,4.608615,-3.770745,1.278573,-4.251363,5.297682,6.263460,6.156309,-9.755024,-7.991822,-6.449563,-6.608772,-1.181231,-2.295122,8.909281,7.435862,-5.011104,7.092867,6.866308,3.657801,-6.347856,9.416272,-8.397275,6.043088,3.065740,9.148598,-5.196569,1.812145,7.424836,3.252536,-5.941339,7.692700,2.339334,-4.848244,9.348731,6.324622,-7.113327,-7.639865,5.707721,7.080658,7.720718,-6.387187,-7.796618,-6.411880,-9.547712,-7.339993,0.437798,1.853888,5.908454,4.554444,3.095604,-6.097710,0.294290,-1.005576,-1.788131,1.673136,-7.544137,9.549938,-7.491431,9.545187,4.245859,8.830620,1.029024,-2.755197,-2.242911,2.083891,-2.941792,4.669433,-5.473483,-0.035362,-0.216887,-3.699588,1.692756,2.385174,-8.508834,-1.391070,4.492677,-7.705898,1.382261,6.219846,-7.173559,1.698014,-3.951750,9.096830,5.349307,3.425398,5.993891,-8.042500,7.524998,-5.708118,-5.531031,-2.782060,3.881846,-1.157365,3.032309,-5.493706,3.800866,-4.676430,0.480174,-2.334423,8.019270,-0.505282,-4.879712,4.340381,-9.415437,6.986769,5.374249,-8.413772,-3.790250,9.808667,-8.823623,1.993922,2.405923,2.139138,8.037586,0.460067,7.691821,-2.054474,5.182755,-3.331755,6.995482,-7.380620,4.435389,4.072871,-1.461914,6.941849,7.991138,-6.340538,-3.227729,4.598722,1.256654,-0.041643,-4.895162,-6.297547,-2.521286,1.945900,-6.033142,-3.813505,1.994620,0.378379,-2.990329,-9.148056,-8.976385,0.946931,4.166515,-4.886791,8.295764,1.187111,5.193025,1.574862,-1.855403,-8.746526,8.706429,-3.467407,-3.227632,-6.116906,-3.141257,-7.457933,3.924166,2.875409,-0.627814,2.865274,-3.649291,8.550762,2.059575,-0.762042,-2.934948,-5.048644,7.926916,-2.436825,2.888678,0.447797,8.863001,-7.932038,3.594040,8.617320,7.754270,7.925515,-0.616001,-2.767285,-1.351115,6.966697,2.469888,-2.969449,3.350728,-8.342283,3.543836,-9.512022,-8.856878,7.470193,0.585347,1.659115,0.369764,-0.078622,-2.178240,9.686909,0.766161,8.479192,4.982744,-1.660583,-4.632067,9.614472,-3.575110,-3.356258,-3.957552,-3.627299,5.272223,-4.557292,-2.536070,-0.119516,1.376232,1.125757,-5.759244,9.191905,-3.256335,-1.883231,7.221010,-7.404786,-5.972946,-5.902332,-7.598884,-3.015558,-0.888131,8.351348,9.445087,6.576038,8.475905,-0.375282,0.943049,6.805619,3.631246,-5.013474,8.242326,-9.666365,-9.400548,-2.528394,5.513425,-9.039179,-6.581562,-7.449993,2.404488,-9.951837,0.535885,-2.772581,3.052064,-6.020393,-2.026472,9.164837,-2.583999,9.132310,-1.829292,3.753298,-9.411873,6.132011,9.837926,-5.504947,-7.967419,-3.888978,5.359181,-9.369600,-0.894351,5.594551,-3.590663,0.284933,-6.980347,3.254585,-8.674285,-5.587415,-5.125561,3.342547,-9.435372,-3.723854,8.122197,-9.722331,4.475869,3.666701,3.356247,-3.325627,6.753066,-6.285328,-3.028428,-3.807091,8.849050,3.687955,-2.593807,9.579328,4.557052,9.886773,-0.545805,2.159110,6.471021,-0.585664,-2.452013,-7.838725,-3.569780,8.794653,-3.223323,6.215946,7.933678,7.542042,-3.096431,-7.074693,-4.561773,-6.387885,8.220135,-6.891137,-5.775433,1.789432,-4.245467,-3.954979,5.886820,2.595676,4.793875,9.263236,-9.639878,-2.364531,3.175869,-9.517536,8.883099,5.519477,-0.602355,8.749161,-5.855143,8.247836,-3.361018,3.016400,-4.585023,5.611250,8.400583,-7.166971,7.125125,-8.832884,6.702636,-5.811735,2.240293,5.748787,6.839812,-3.774121,1.930762,-7.001057,7.995650,8.510430,8.045736,0.643980,8.498353,-7.905438,0.221034,-8.859915,2.094213,6.757908,-6.828349,-5.936534,3.344641,2.977279,5.388166,-3.718353,2.142938,-8.993345,-5.974427,0.527965,1.832980,-6.697862,2.313442,1.973211,5.091548,0.551098,2.337864,2.017986,0.288498,3.131650,8.594195,1.955554,-5.401586,3.685709,-4.979016,-5.161271,-9.536258,-9.712864,6.756522,-9.578907,-6.408238,-6.477563,1.246041,-3.453106,-9.861918,7.294402,6.166560,-3.986303,-4.699983,-5.674056,2.341974,-6.258680,4.524782,7.666739,-1.780188,9.159826,3.191049,-3.056656,7.159093,3.119918,5.691938,0.682671,-0.733142,-6.576634,9.027843,8.615052,1.571967,-7.727297,-9.500714,-8.539401,6.011274,8.290370,1.870588,-2.744685,-7.802549,0.921970,-2.332621,-7.842161,-6.886879,-9.482521,1.971633,-9.559763,2.122053,2.356047,-1.318721,3.881882,7.565108,8.951825,-1.923173,9.921118,0.775231,-9.330461,-4.457919,-2.716241,6.291803,-3.733852,-5.400086,-9.770787,-6.615895,5.226422,2.495163,-0.486773,4.490882,9.181243,7.558972,-2.369132,1.571876,9.088573,3.018059,8.562997,-5.687808,8.270551,-7.190537,-1.498426,0.933121,-1.691541,-5.415140,5.959220,-8.414098,-9.959898,-8.588445,-6.539284,7.222164,5.636138,-8.380697,-4.523504,-8.234451,3.536877,9.638944,5.922297,-7.214642,5.923674,9.537776,-1.749465,7.325211,8.593514,-8.695989,-8.593620,0.500599,-1.410706,-1.818641,-3.792400,3.816271,5.305193,-3.644968,0.576244,-3.340290,4.647867,-9.513789,2.036444,-7.915910,2.324624,4.368314,4.818378,0.982973,-8.671018,-7.406562,-6.418115,-7.990354,-3.322099,2.713242,1.991897,-8.015370,0.590124,1.058126,-3.450975,6.164079,-2.938781,0.485308,-2.413329,0.111137,-2.985788,0.214739,4.964102,0.046692,-2.955612,-0.523483,-8.324374,3.694295,9.351218,4.938637,-8.200445,1.505823,3.903686,-2.921667,0.918263,-5.369157,5.344878,-8.908986,2.075016,-2.613689,-5.529126,-4.207234,3.263095,-6.365849,-7.393533,0.846528,7.172511,0.040458,1.814174,-3.813406,1.742293,6.619997,-4.905042,-3.960000,3.534529,-1.525480,9.488615,-2.776406,-9.294144,5.229210,-4.053777,7.990820,8.488934,-3.750379,1.120151,3.050687,7.352787,7.982035,-8.500401,-4.693378,7.268026,-6.229818,7.618893,7.597131,5.901699,-7.900648,8.745362,6.090881,-2.221539,-2.027840,-1.462823,-9.147548,-5.996439,-5.840791,6.314692,-7.663357,9.856375,0.350262,1.006557,-1.121057,6.891379,2.197983,-3.159827,1.940318,-0.762906,-5.480439,2.816359,2.620134,1.474127,2.480786,-0.961126,8.547569,-8.823117,-9.824556,6.593859,-0.012742,1.805107,-7.484903,2.628640,-1.120710,5.798521,-0.556083,2.605660,-3.031651,3.461766,-0.474001,3.587386,4.487629,-0.711441,1.787420,-6.910396,7.669033,0.198963,-6.043631,8.951040,2.296940,8.430680,-4.496220,9.319818,8.721932,-5.393920,-7.878959,0.572394,1.642321,9.450299,-4.550490,-0.070254,4.295731,9.639503,-3.578531,-1.311900,4.007609,-3.244230,-0.957809,-6.941497,-3.168021,3.011266,-6.062113,6.176240,0.579583,-0.995304,-6.709802,0.749026,4.586164,9.626101,1.541917,2.814806,-5.580955,-7.239980,9.355537,-1.249656,4.258655,-4.947929,4.247334,5.074391,-2.187255,-5.576333,5.914206,-5.989163,-8.723642,-4.937787,1.860839,-1.928980,0.251111,-7.595037,1.695315,2.330699,1.352200,-6.603561,4.402079,9.262650,1.158645,-2.000301,9.073807,8.069112,7.006147,7.056836,1.435393,-6.259243,2.610435,0.923458,7.074880,1.265079,-2.132483,2.305634,-4.082467,5.824921,-6.349751,-5.231527,-0.530842,5.242970,9.075384,-0.032326,-9.173068,-7.102425,-4.189024,-9.671140,-4.063434,-8.420384,6.949084,-3.337266,-1.771031,-6.843608,1.394942,-1.757563,-8.313419,7.775438,-5.578915,5.906203,-0.526126,-1.474278,1.755956,0.435676,2.504262,6.267121,0.024867,-5.940898,3.972755,1.392483,6.632286,8.948851,1.741194,3.298227,-4.011973,5.007621,-0.741762,5.709990,-8.902199,2.040111,-5.330976,4.010458,-0.847763,7.694179,-6.152148,6.932531,-8.051375,8.508475,0.023492,-8.829254,4.287123,4.338936,8.097192,-0.919033,8.135078,8.895706,-6.798535,3.523755,-4.140056,-5.334330,9.122315,-5.593381,-7.379280,-5.731163,1.655656,-8.989169,-6.479542,-8.550339,-7.103594,2.229486,5.555842,-4.663038,7.550127,-8.270905,-6.249898,-1.667099,-9.088187,-9.899787,8.646008,4.133262,9.468189,2.819312,3.383883,3.267263,-0.831380,9.920018,-3.514737,6.035581,6.760171,8.112723,5.886439,-8.772408,9.864745,-5.600340,0.207196,0.571395,1.854509,-5.138518,-7.914008,7.516961,-3.396001,-0.294409,-1.433571,0.204485,-4.740144,1.469201,-8.768238,4.036042,-4.190266,-8.635799,7.467434,-8.251129,6.145559,0.670228,9.146505,-4.269721,6.375638,-3.273923,1.400800,-9.700260,-5.314708,6.497252,6.682576,-0.542931,-2.787504,9.309115,-2.751439,2.668603,-7.069865,-5.276010,9.860907,9.681630,9.043828,-3.616379,9.065908,-4.018512,-7.588099,1.873859,2.009048,-8.642406,-4.635351,0.813404,4.181741,-7.209929,-1.511457,7.910791,-8.729664,-1.716677,-3.397770,-1.237336,2.948463,-4.328643,-8.863703,2.313393,5.672361,7.518086,3.156319,6.410348,9.059712,-4.234589,-8.772886,1.530023,5.812939,-6.482944,-3.666261,7.277600,-6.969861,-4.044823,6.728528,-9.621520,3.261889,0.563443,-2.377758,3.310126,-2.726645,8.060271,-3.647503,9.226220,5.207418,7.146049,-3.098066,5.928500,-4.499254,5.714467,-5.059276,6.483994,-7.251975,-9.664459,3.739982,-8.268296,-6.185545,-3.875904,7.792441,-8.305576,3.514424,-3.592627,-5.952964,-5.901106,1.730118,4.501737,1.064061,4.723723,1.636745,5.005190,-4.444868,-8.580225,8.557845,1.062388,0.359860,3.956032,3.422242,-3.196107,-6.322537,6.262011,8.204066,9.645394,4.118789,-9.915556,-7.335972,1.550692,3.582695,9.201625,-9.349507,3.358209,-0.448147,-3.572895,7.980088,-5.345161,-9.334630,4.673790,-9.980704,-3.023872,-9.194310,-4.078255,-7.428278,8.772672,8.772282,9.670704,8.364121,1.905873,0.048168,2.878453,4.683955,-5.580379,4.785528,4.751215,-2.507453,2.771574,-9.717547,-9.406341,7.298043,-7.483757,-8.090922,-2.459100,5.935546,-9.891357,-1.929227,8.297468,9.035550,6.978487,1.716097,-5.271699,-0.564927,-5.013053,4.497759,-8.911973,-3.041276,1.179847,-8.016094,-9.393330,-0.997112,-1.461437,2.333690,-7.946593,-7.755832,0.726815,-0.596854,1.190715,-1.742452,3.357367,-1.565559,-5.573940,-1.345197,-9.362899,-9.741920,-5.249889,1.773709,4.215701,-2.006693,9.926245,3.162381,3.484694,-8.259784,-8.239668,-2.626977,-6.445748,4.709854,-5.837898,-4.758998,-6.135419,7.454584,6.803461,-9.768212,9.270689,-8.703233,5.849451,-5.351418,2.549236,5.625711,3.393897,2.634215,0.899949,-2.144203,0.471419,-5.324016,9.078123,-9.778313,-7.586574,6.771378,-7.739962,-4.337140,4.451877,-1.711888,0.107467,6.741844,0.714167,-7.131238,1.200986,-1.567452,0.080316,6.273162,2.960107,-7.542282,-1.889326,9.567353,0.552081,-1.389161,-6.608271,-5.125133,-3.888656,-4.651848,-9.781297,-9.074708,-6.100312,-9.536179,4.836918,-8.743116,-6.251850,-5.620286,4.285892,9.006178,0.958705,9.930916,-9.966089,8.629087,6.103196,-9.073769,-9.685843,-0.356821,-7.016894,4.762749,-9.426871,-8.360770,-9.055340,5.367023,-3.259306,-6.868339,-5.113549,-6.218058,3.094912,5.617057,4.090724,4.260421,0.087275,-4.165363,-2.123449,6.002085,-5.931939,1.317425,6.758587,-5.813335,6.214016,2.106449,-3.563054,-0.205537,-2.392094,5.225714,-9.031065,2.999422,-0.417759,2.983330,5.889083,3.335219,-5.831014,-9.380144,0.813811,4.198362,-5.091529,-1.122844,-4.072118,-0.289090,-4.234428,8.114862,-7.867593,-4.008530,-1.320227,-0.212967,8.494561,3.998238,-0.637902,4.093757,-1.789079,4.618277,5.426063,-4.050667,-8.889585,-8.316880,-4.344746,6.285367,9.173471,7.847205,4.692038,0.260669,2.547817,-1.061474,7.128435,7.586555,4.892853,-8.778507,-9.819507,-1.880054,6.035848,0.587937,-2.740388,7.526236,6.693371,-5.731587,-0.781904,0.986220,-5.293072,2.747971,0.627018,-1.098962,9.847838,2.648410,8.375788,9.615654,8.634590,-5.937691,9.411005,2.074920,-7.776518,-8.777583,3.353063,-5.211885,5.999304,2.473961,-4.274863,1.292404,-3.646233,2.005801,4.381963,0.427624,8.228764,-1.086590,3.512030,0.020036,8.613448,-0.477052,8.420740,5.478583,-6.833174,4.847641,-5.485873,2.989350,-3.662602,-8.807541,7.214526,-1.233753,1.683518,4.267277,-4.650192,-2.343260,-4.081662,-7.065565,1.467648,9.208858,1.150262,-8.391057,7.186760,-4.715103,-4.441953,4.742532,-2.241947,-0.089663,0.660939,-8.290578,1.240924,7.659815,4.414020,1.782758,5.876990,0.247014,-9.713609,-4.576039,1.879453,4.669797,9.253327,1.666333,-0.434037,6.751240,2.323535,5.735053,-3.512366,0.655330,-2.674991,-8.361193,5.151366,-9.136213,4.018759,8.361096,-1.608286,-7.646770,-0.172174,4.624504,-4.399101,-4.022529,5.603683,-4.146627,-9.868732,3.793882,-5.137615,9.155892,0.214922,7.373067,-0.112688,0.249702,8.336725,3.871173,2.529416,-6.652410,4.998446,-1.944087,-1.698238,5.337715,-9.360576,-1.638102,-7.918480,-9.929349,5.946253,0.917281,-2.133317,-4.422552,-4.306193,8.936397,5.540046,5.948523,-3.066052,0.108098,-1.561242,-6.446799,3.817425,-5.620786,-3.323058,-5.699589,-2.580384,1.651914,-4.079393,8.651183,8.883859,6.948263,-1.351898,-4.960900,-0.260286,-8.616567,-5.741236,9.798030,2.460477,0.955113,-2.854724,5.223072,2.406325,4.016959,7.455347,7.516752,-6.065983,9.874119,6.428813,9.242919,6.646310,5.817749,-8.493585,2.595114,-7.598867,7.074548,-3.278664,7.712691,-7.334746,-5.224222,9.980008,-0.631158,-9.090956,6.889921,2.392903,7.816016,-3.182081,-0.655879,7.581389,-6.394557,8.521772,-2.242489,-9.037934,9.011463,-7.913059,-0.454726,1.085314,8.148679,-0.536305,-2.729980,-4.278878,-0.963487,-2.534947,0.695845,2.393118,9.926424,-1.908857,-4.162281,5.544017,8.940916,2.883785,-4.733510,-6.988992,-1.854636,-9.910974,9.909265,-4.408749,5.501367,-0.505074,-9.837105,-8.077772,-0.682189,1.186116,5.826962,1.846585,7.211223,9.837795,0.102665,6.499315,-6.212261,-9.497670,-6.803517,-0.666840,1.800062,5.437968,-8.440260,7.062414,-8.081612,4.869660,-9.833023,-1.214302,-9.694648,3.229214,2.011370,3.981141,-9.015980,1.230276,9.379822,-7.051053,4.363795,-8.807021,3.509477,-9.450258,1.652001,8.225443,-8.758602,6.707393,6.206057,7.934065,7.853134,9.615611,-0.774508,1.868662,-0.307076,5.847294,2.843102,5.943158,3.602136,-7.701312,4.210400,-3.203709,2.838484,-6.084028,-4.777135,5.832984,0.921700,2.210469,-8.272537,0.977334,-8.269813,-6.985099,-9.068596,-2.176157,2.845523,-0.650007,2.252812,5.282715,-0.605029,2.522440,7.738464,1.752645,9.795023,-4.663669,1.496408,-5.760716,-7.896407,5.724418,-3.350322,8.188394,-7.301682,6.274555,-3.191303,-3.572152,-2.318778,-6.976941,-5.273485,-9.194858,-5.792039,6.946038,-8.113843,-1.221499,-3.343560,-5.301783,3.833761,3.506711,2.889690,5.480711,5.529449,7.107241,-5.977720,4.067746,2.542175,-2.972403,-8.099445,4.553794,-5.022908,-1.100761,2.166135,5.201109,-1.827331,-8.122780,1.418461,5.003503,3.092949,2.099395,-5.366011,-9.128309,-0.859189,-9.568913,6.113776,-6.347214,8.166363,-2.364132,7.201641,9.652632,-1.022886,3.632237,-3.970922,-9.784529,8.763328,2.916009,-6.364385,6.639228,-3.420463,-5.778984,1.494393,6.416134,2.950283,5.475806,-7.488372,-6.456217,-1.848212,-9.346881,-4.634250,-9.130239,-7.309862,-3.659259,-3.213029,-5.695195,6.142602,-1.381959,9.336066,7.807854,3.746399,2.456695,7.029610,3.841318,3.472646,-6.531921,-5.124513,-1.159941,-4.567578,-5.361422,-4.707743,-6.392548,8.326045,1.532029,-4.317163,7.091001,2.601101,9.151787,-1.471673,2.581404,4.927900,6.102499,-4.170862,-7.169365,-2.250427,1.371780,3.297043,-0.622612,-3.612074,1.685467,-0.778764,9.948750,4.812174,4.374553,1.492595,-9.279270,-1.007818,-4.139121,4.358102,-8.025848,8.487209,-4.497340,7.410501,8.149180,-7.286586,-8.008961,7.123473,8.827670,7.244834,-7.321567,9.197181,1.124490,5.667803,-3.125579,-4.780414,-7.176248,0.458201,3.937334,-4.908383,-6.698722,9.553492,9.536962,-0.549891,-9.689213,7.632736,-5.869374,0.765165,6.143095,-6.336612,3.110926,-3.136129,-3.700048,-3.201415,-9.134644,2.560539,-4.443631,6.024430,9.652816,-8.708979,9.560737,7.706687,-0.434782,8.278593,3.272576,1.228161,3.936665,-3.736707,0.132715,2.035930,9.152156,2.231627,5.273071,-6.717404,-9.565727,-1.480841,-4.368414,-2.900226,-2.281908,-6.920772,1.267926,-4.309785,3.200458,-0.119992,-3.267956,-5.714617,-1.407814,9.684644,7.272222,7.256021,-4.929747,5.076940,8.655750,1.388639,-0.310773,3.006576,1.824298,-5.713344,-5.446682,-7.830437,-6.132378,1.590350,-7.939359,-2.498289,-3.414869,7.961691,-5.679484,8.036161,-2.674366,8.631196,4.975366,-0.368701,2.785615,4.450925,-7.945098,-5.530648,7.680791,7.884014,-9.878247,0.039305,3.274870,4.727097,8.068515,2.536155,6.609200,-9.541681,7.041828,9.798860,4.158521,2.970275,-5.658712,-7.341203,8.233982,0.751791,-6.396571,-1.341381,-9.503711,3.182807,-7.787482,2.184317,4.827012,-8.990576,0.173438,4.885277,7.861774,-0.834972,-6.846065,1.727477,-2.411230,3.215278,8.481201,1.660207,6.359680,3.765474,9.446156,2.983167,6.604686,-4.898765,-8.196670,7.868565,-4.464312,1.561141,7.957182,-2.958145,-3.134732,-4.975278,1.840621,4.848155,-7.972301,-6.300231,7.844969,-8.214406,-6.995197,3.608079,8.602946,-9.641490,-6.109055,-6.508721,-8.554984,-2.578705,3.168403,-9.886697,-9.347420,4.135708,-8.327589,-8.488815,-5.601007,-0.478103,9.586629,0.929471,7.233738,-5.237727,3.683694,7.655067,9.594229,-6.253871,-5.467459,9.096057,-0.559013,7.749457,7.034865,5.286847,-0.740249,-9.549097,8.840119,-3.449923,3.242938,6.669424,-2.205318,-9.351569,-2.630487,-2.173011,3.694318,5.836934,-2.274100,-7.498839,-6.987385,6.193644,-5.995901,8.284457,1.208220,-8.925125,-6.493675,-8.471486,-4.713384,9.397444,1.748729,8.585658,6.567164,8.344529,4.696890,9.205109,6.602214,-9.108490,-5.782807,8.577423,-4.132331,-8.652570,2.460760,6.511869,4.538694,-4.122990,-1.061556,8.109149,-2.702153,4.358608,4.548486,-5.408048,-9.465585,-0.345147,-0.521500,-1.058059,2.713807,9.973216,8.386449,-4.819973,3.129278,-6.447053,-3.573802,-0.740651,-1.506943,-1.388091,-6.809711,-6.838057,3.444362,-1.427884,-5.447934,-6.573812,8.192751,5.652736,-4.216469,-8.797259,-3.024685,1.517329,-1.654298,-4.652507,-7.767074,-3.597907,8.286346,8.912789,2.611382,-3.948163,-1.183335,9.592650,-3.415926,4.953467,-0.105585,7.513561,-3.063362,5.360907,-8.828851,9.008789,-9.640649,9.407380,-2.319097,1.355804,-4.179111,5.033053,-3.821484,9.134422,4.952721,-5.648978,-6.519928,0.732051,-8.864021,1.294348,-0.079429,5.114670,4.352825,-0.919428,1.605905,4.971919,8.093387,6.324891,-0.488650,-8.564907,5.213213,5.663800,-4.716139,-5.350585,-5.889456,7.252017,-5.261311,0.349584,-5.401265,5.705439,0.078719,2.219936,1.560732,2.525909,2.114363,-3.129612,-6.339489,-2.734775,-5.112398,7.342877,5.962805,5.956505,-5.624687,7.029234,-5.323475,-5.270954,0.345050,-2.481997,-0.909879,-9.197322,2.093377,-6.197440,7.112741,6.188367,4.748647,-8.683937,2.942719,-1.239259,-6.533644,-7.382383,-7.823432,6.381297,6.689097,0.875561,7.977515,4.252663,-4.553822,-1.701691,8.269535,6.750573,-0.709168,9.219774,7.130939,5.978402,4.625227,-9.537834,5.353137,9.543175,6.761936,-5.202021,8.864006,5.287504,-5.312989,1.012975,6.516806,-3.241231,-7.255992,-9.428390,-1.223448,0.793105,8.395845,5.248377,5.201141,0.964317,9.297219,3.527106,-1.202881,-4.725194,-3.903544,-8.960192,-9.329819,-3.410148,-3.104239,-0.650810,-6.256921,-5.019865,3.405510,-5.606091,-7.982476,5.132222,-1.481693,-8.342133,-4.864194,7.004084,-7.791622,-0.779671,-4.993852,6.176465,7.363957,1.181296,-9.421475,-6.172409,-8.839983,-4.628544,-8.022964,-4.237010,5.857306,1.833364,-2.384214,-4.142011,-2.888884,3.123151,6.031103,6.184861,5.916675,1.369941,-7.459677,7.637936,-9.285952,-7.301483,-6.714277,0.251868,5.960975,6.072346,0.554788,5.291730,-6.908204,4.997625,2.636655,9.979363,3.219472,-8.427875,-8.264745,-0.803973,-4.399697,5.870630,-3.145596,-1.658872,-7.001699,2.292735,0.052210,9.136963,2.153679,-1.503869,-1.946881,1.450894,-9.006137,2.059997,-6.767263,5.836596,-6.223984,2.911721,-2.656104,7.194492,4.358075,-1.748175,9.990148,-1.102562,-3.544778,0.160322,-8.423015,4.388557,1.713572,4.748218,-0.657557,-1.942751,-4.750576,3.028920,4.904485,5.638307,2.347529,6.286438,5.786620,-9.325834,-9.321081,-6.751543,-6.420390,8.829999,9.856615,0.006048,-9.411698,-0.640706,5.164620,1.833287,-3.920824,8.608322,-2.580358,-7.196553,4.712740,-6.538378,8.853473,-3.266537,-1.982101,2.865969,1.492763,1.209804,-0.406778,-6.780019,-3.703757,-3.927879,-1.643629,-4.720122,-6.324032,-9.629762,3.287466,-9.945434,-3.375874,7.959537,-2.599828,-5.589384,1.914513,0.095758,7.458804,-2.269647,6.345629,5.362494,-2.670350,4.219492,-6.857312,-9.548055,-3.710778,-1.786070,-4.073893,8.617515,-0.007636,-4.513122,3.328205,6.622496,1.046396,-3.140358,-4.426615,-6.598401,-8.525339,-5.281062,3.462578,-4.200132,0.602778,-2.373152,-7.204863,-9.575969,6.339313,5.725627,6.664296,-5.154645,-1.086073,9.609345,-1.384209,9.797426,1.776377,6.130947,0.561631,-2.475051,0.690157,-9.389358,-2.303363,-7.495930,0.664544,4.606432,5.569416,8.790896,-6.214560,-2.943528,-5.442577,8.301251,3.299014,-1.676370,3.906019,2.311288,-9.800318,-3.747948,6.794751,-7.413067,-2.949174,1.145351,5.316367,4.539155,3.195295,-1.569023,-3.059476,-6.562065,5.594524,-2.580738,9.559799,1.215468,4.105991,6.782717,-6.513569,9.511071,4.537429,-0.366289,9.215913,-7.078280,-6.902130,-0.685493,2.811233,-2.902271,3.957297,8.889039,7.735680,-3.460213,-9.464901,0.102356,-4.865039,-1.115757,8.027339,-3.610834,-9.947345,2.409239,-6.722334,1.697018,-2.281745,-2.767989,-5.098892], dtype = "float32")#candidate|2030|(3120,)|const|float32
call_2029 = relay.TupleGetItem(func_1821_call(relay.reshape(const_2030.astype('float32'), [15, 16, 13])), 2)
call_2031 = relay.TupleGetItem(func_1823_call(relay.reshape(const_2030.astype('float32'), [15, 16, 13])), 2)
output = relay.Tuple([uop_2021,call_2029,const_2030,])
output2 = relay.Tuple([uop_2023,call_2031,const_2030,])
func_2049 = relay.Function([], output)
mod['func_2049'] = func_2049
mod = relay.transform.InferType()(mod)
mutated_mod['func_2049'] = func_2049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2049_call = mutated_mod.get_global_var('func_2049')
call_2050 = func_2049_call()
output = call_2050
func_2051 = relay.Function([], output)
mutated_mod['func_2051'] = func_2051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1346_call = mod.get_global_var('func_1346')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_2072 = relay.TupleGetItem(func_1346_call(), 0)
call_2073 = relay.TupleGetItem(func_1347_call(), 0)
output = relay.Tuple([call_2072,])
output2 = relay.Tuple([call_2073,])
func_2094 = relay.Function([], output)
mod['func_2094'] = func_2094
mod = relay.transform.InferType()(mod)
mutated_mod['func_2094'] = func_2094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2094_call = mutated_mod.get_global_var('func_2094')
call_2095 = func_2094_call()
output = call_2095
func_2096 = relay.Function([], output)
mutated_mod['func_2096'] = func_2096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1935_call = mod.get_global_var('func_1935')
func_1937_call = mutated_mod.get_global_var('func_1937')
call_2103 = relay.TupleGetItem(func_1935_call(), 1)
call_2104 = relay.TupleGetItem(func_1937_call(), 1)
output = call_2103
output2 = call_2104
func_2116 = relay.Function([], output)
mod['func_2116'] = func_2116
mod = relay.transform.InferType()(mod)
output = func_2116()
func_2117 = relay.Function([], output)
mutated_mod['func_2117'] = func_2117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_2118 = func_775_call()
call_2119 = func_775_call()
func_1259_call = mod.get_global_var('func_1259')
func_1261_call = mutated_mod.get_global_var('func_1261')
call_2191 = relay.TupleGetItem(func_1259_call(), 0)
call_2192 = relay.TupleGetItem(func_1261_call(), 0)
func_622_call = mod.get_global_var('func_622')
func_625_call = mutated_mod.get_global_var('func_625')
const_2199 = relay.const([[-2.368131,-0.532948,-2.597987,-9.756011],[2.813393,8.301786,-9.726593,-1.956931],[-9.864720,-7.723012,-5.005771,8.633473],[-0.556593,-3.350222,-8.094484,8.899751],[5.587108,4.589167,4.469165,1.581427],[-7.148042,-8.828429,-4.275651,6.781936],[-2.598747,0.058750,-5.057379,-0.802332],[-9.679007,6.941663,-2.215863,4.268429],[-7.892867,-8.820721,-1.181478,-1.399054],[-5.390799,1.828293,3.834953,-1.067567],[-2.056236,-1.792279,-0.724122,1.420325],[-8.145997,-9.086760,-9.948430,-6.378759],[-4.536998,-3.788846,9.218117,8.034922],[6.377512,-1.906161,5.158430,7.671280],[8.662779,1.168018,-1.487801,-2.384264],[2.212666,-7.533309,-2.581898,4.352565],[4.916459,2.695628,-7.526590,-7.601673],[0.190156,6.694624,5.334402,-0.440536],[-9.514584,4.831868,-1.669390,9.152765],[-5.423884,8.015343,6.437102,7.989783],[4.696019,0.041713,2.286126,7.631021],[-5.936243,-8.454442,8.009590,-6.165379],[-0.659478,8.620722,2.135450,-0.764158],[-5.878482,-5.218001,-2.119145,-1.794234],[-7.732924,-4.934330,0.805823,-2.248556],[-9.832229,-1.638503,6.176658,9.287390],[-6.382617,4.990739,-4.489427,0.506473],[9.759040,-1.667332,3.769038,5.475724],[-9.248185,7.325150,-8.822704,5.668655],[-8.209026,-8.347701,2.921719,8.366776],[-0.385880,8.959383,6.312649,2.160573],[2.803267,-7.761027,-8.613786,-8.246764],[0.403185,5.285514,-7.553799,-1.662562],[-1.200236,-1.995667,1.271012,6.055043],[-9.636480,-9.476906,2.496542,8.657921],[1.387822,6.477124,4.461171,-3.608218],[2.296853,-7.920370,-9.906286,2.908639],[-3.940888,-3.861226,1.614210,3.158666],[1.455722,8.258973,-4.024656,2.733979]], dtype = "float64")#candidate|2199|(39, 4)|const|float64
call_2198 = relay.TupleGetItem(func_622_call(relay.reshape(const_2199.astype('float64'), [3, 13, 4])), 2)
call_2200 = relay.TupleGetItem(func_625_call(relay.reshape(const_2199.astype('float64'), [3, 13, 4])), 2)
output = relay.Tuple([call_2118,call_2191,call_2198,const_2199,])
output2 = relay.Tuple([call_2119,call_2192,call_2200,const_2199,])
func_2202 = relay.Function([], output)
mod['func_2202'] = func_2202
mod = relay.transform.InferType()(mod)
output = func_2202()
func_2203 = relay.Function([], output)
mutated_mod['func_2203'] = func_2203
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2238 = relay.var("var_2238", dtype = "float32", shape = (11, 5, 9))#candidate|2238|(11, 5, 9)|var|float32
var_2239 = relay.var("var_2239", dtype = "float32", shape = (11, 5, 9))#candidate|2239|(11, 5, 9)|var|float32
bop_2240 = relay.floor_divide(var_2238.astype('float32'), relay.reshape(var_2239.astype('float32'), relay.shape_of(var_2238))) # shape=(11, 5, 9)
uop_2245 = relay.tan(var_2238.astype('float32')) # shape=(11, 5, 9)
output = relay.Tuple([bop_2240,uop_2245,])
output2 = relay.Tuple([bop_2240,uop_2245,])
func_2249 = relay.Function([var_2238,var_2239,], output)
mod['func_2249'] = func_2249
mod = relay.transform.InferType()(mod)
var_2250 = relay.var("var_2250", dtype = "float32", shape = (11, 5, 9))#candidate|2250|(11, 5, 9)|var|float32
var_2251 = relay.var("var_2251", dtype = "float32", shape = (11, 5, 9))#candidate|2251|(11, 5, 9)|var|float32
output = func_2249(var_2250,var_2251,)
func_2252 = relay.Function([var_2250,var_2251,], output)
mutated_mod['func_2252'] = func_2252
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2260 = relay.const([[[-4,-10,10,-10,6,5,-4,-8,4,-4,2,5],[1,4,2,9,5,-10,-5,5,10,5,-6,2],[-3,-10,-4,8,-2,-3,-2,-2,-2,-3,3,-6],[9,-6,-6,-6,7,-3,1,-8,6,7,4,7],[4,-2,-10,-9,-2,8,3,7,10,-1,-5,-3],[-10,9,2,1,5,-2,-2,8,5,-1,7,-8],[-10,-9,-10,4,-5,-8,-10,-2,10,2,6,-5],[-5,1,4,1,10,9,-6,-4,7,-7,-10,-3],[-4,4,6,-3,6,3,3,4,-7,5,-5,4],[10,-8,-2,-3,-8,6,-6,3,3,10,1,9],[-4,-1,3,2,7,-4,-2,5,1,2,-10,-7],[-2,-9,2,2,2,6,9,7,-7,6,7,9]],[[-3,-7,-9,-8,-3,5,6,-1,1,2,-5,-9],[-1,6,-6,-7,-8,-4,9,8,-2,7,-2,-4],[8,-6,-6,-7,-10,4,8,5,-4,-2,4,6],[5,-3,2,2,3,2,3,-4,-4,6,-10,7],[3,-8,1,2,7,-5,-3,10,-4,-3,6,9],[8,2,-8,3,-10,8,-8,9,8,-6,-10,-6],[1,-3,-9,-8,8,6,-1,-7,3,-4,10,6],[-9,8,1,6,-3,10,9,-10,8,-3,6,-1],[9,-10,1,6,10,-9,-8,-4,2,-5,-2,8],[-3,-10,-2,10,6,-8,-7,7,8,10,-9,-7],[8,3,-6,-1,-3,8,4,7,-9,7,1,3],[9,5,8,2,3,6,-8,8,10,7,5,3]],[[2,10,-5,-5,8,4,-4,-10,2,8,-4,1],[6,5,-5,3,-10,1,8,2,5,-2,4,8],[9,-8,-6,-7,1,2,-2,-3,2,8,9,-5],[-7,5,-8,-7,-3,-2,-6,-1,-10,-10,2,7],[-7,-3,6,-3,5,-2,5,10,4,6,10,6],[-2,4,-2,-7,7,-7,8,-6,2,-3,-7,4],[6,3,9,8,8,7,-5,10,4,5,-9,-2],[8,9,-2,-9,5,4,1,-9,-6,-8,-3,-4],[-8,-9,-1,10,-8,-5,2,-9,-7,-4,7,-9],[2,-7,-8,1,2,-2,1,-2,-1,-9,2,1],[-3,10,-10,4,-8,6,1,-9,7,6,3,5],[7,-6,-2,-10,4,4,1,-6,10,-5,1,-6]],[[5,-4,-1,2,-5,-7,-5,-1,-9,3,-2,8],[-4,4,7,2,3,-2,-7,2,-3,8,-8,-1],[3,-8,4,8,9,3,-4,-9,3,1,6,-1],[-2,10,-7,10,4,4,6,-8,-3,-2,-8,-4],[-2,10,-8,-8,-1,2,-1,7,-2,5,-2,-2],[6,4,5,-6,2,-5,-8,-3,-3,-4,-9,10],[-1,-7,10,1,-3,1,-4,-5,2,7,4,6],[6,4,2,-7,10,5,5,-7,3,-6,-4,3],[2,-3,-1,4,10,3,1,-2,-3,-3,5,7],[-8,4,8,6,-9,-4,10,8,-7,10,8,-1],[3,9,3,-7,-3,-3,-8,8,-9,-8,2,9],[-6,7,2,-4,1,-2,-1,3,10,4,-4,7]],[[-9,-2,-2,2,9,1,9,-6,-1,3,7,-8],[6,7,6,-5,9,-8,8,9,9,-9,-5,9],[3,-10,9,-9,1,5,10,-4,7,9,10,-5],[8,-7,8,1,-9,-4,-8,-5,7,-8,-2,-5],[4,6,-4,5,6,-6,-10,-8,7,-7,-4,-4],[2,9,2,-3,-10,10,-2,5,-9,-2,8,-5],[-3,10,5,-10,5,1,3,-6,2,6,-3,10],[4,10,-4,-8,9,4,-1,-1,2,-6,3,-8],[7,9,-7,-1,-2,4,6,-3,-2,-7,9,-1],[-7,8,8,6,-1,7,-3,10,7,-1,8,6],[-9,4,10,-1,-4,-10,6,-10,-1,3,-3,-1],[-7,-3,-8,-4,1,-7,3,1,-8,10,7,8]],[[-6,5,-6,-10,-1,-9,-2,-6,-10,6,-4,3],[-10,-5,-4,6,-8,9,-7,6,-4,7,-9,-8],[9,-4,-3,-4,-1,-9,-3,-7,5,-4,7,-10],[-6,-6,1,4,10,-2,9,7,6,7,10,-2],[-9,7,8,-8,6,9,-10,9,5,4,-1,3],[8,9,-3,-4,9,8,-9,-2,-10,2,8,-9],[-7,6,-5,-5,9,10,-5,4,-6,-1,-1,-9],[6,1,7,6,5,9,-10,-3,-8,-3,-9,-5],[1,1,-9,-3,4,-10,5,4,-9,-2,-7,10],[-9,-6,-9,-5,-9,4,-7,-6,2,1,-1,9],[-9,-10,7,-2,2,7,3,4,8,-1,-5,-5],[2,-4,4,4,6,10,2,10,-1,7,-8,-5]],[[9,1,-2,10,-4,-6,2,2,2,9,-1,1],[-5,6,-9,10,-5,-3,7,1,-2,10,7,-9],[-3,6,-7,-7,-3,-6,2,-2,4,5,1,-5],[-5,4,-8,-2,3,-4,-4,3,-4,2,2,6],[-1,9,9,4,8,9,-3,6,10,4,-3,-1],[-5,-6,1,7,2,-4,10,8,-6,-6,7,-4],[-4,-9,7,-5,-5,3,2,7,-4,7,-1,-3],[-10,-7,-1,-4,-9,-3,4,-3,8,4,4,3],[6,-3,5,-5,5,1,-3,2,-7,2,-4,10],[-9,-1,10,2,-4,-3,10,-3,10,-2,1,6],[-10,9,1,5,6,2,10,1,10,-2,-2,7],[10,-4,5,9,6,9,-7,-7,8,10,5,1]],[[-5,-6,-9,8,4,8,-2,7,5,5,-10,-9],[-6,-8,10,6,4,4,-7,-1,-6,2,-6,-6],[-3,-6,-5,-1,2,2,1,-1,4,-6,-10,1],[8,4,10,-8,10,8,-7,-8,8,-4,10,4],[3,-4,-9,-8,10,-4,9,5,-3,7,-2,10],[-5,-1,-10,-8,4,-3,-8,-1,-3,9,6,3],[7,-9,5,2,-4,6,7,4,-5,-6,9,1],[2,-6,-4,-8,-1,1,-8,7,-6,-3,-6,-4],[-5,-5,-8,8,6,10,3,10,-7,-1,6,7],[2,2,-1,10,-5,-2,-3,4,-2,-7,2,-10],[-10,8,-10,7,6,-9,-6,-5,-6,-3,-5,8],[1,4,-5,-6,7,3,8,-9,-9,-3,9,-5]],[[5,6,7,9,9,1,10,-3,1,4,5,-6],[-2,-7,-7,8,2,-3,-5,-5,6,2,-5,-10],[-10,8,8,8,-10,-2,9,10,1,-8,-4,5],[-3,5,-2,6,1,-7,-5,10,-2,-4,-2,2],[-10,4,-7,5,5,-8,4,9,8,-4,-3,-10],[-7,-7,3,-2,2,-6,-4,9,-10,6,-2,1],[1,5,-10,-8,-3,5,4,6,3,9,2,7],[-6,6,-6,-10,-2,10,3,-8,2,-2,-3,4],[-10,-3,10,6,3,-6,9,-5,-4,-5,-2,5],[8,-10,-6,7,9,10,-2,-7,-8,-3,2,10],[-6,5,1,1,7,-10,-6,-9,-9,-6,3,7],[10,-8,9,-10,-4,2,-5,5,-4,3,4,-7]]], dtype = "uint64")#candidate|2260|(9, 12, 12)|const|uint64
var_2261 = relay.var("var_2261", dtype = "uint64", shape = (9, 12, 12))#candidate|2261|(9, 12, 12)|var|uint64
bop_2262 = relay.not_equal(const_2260.astype('bool'), relay.reshape(var_2261.astype('bool'), relay.shape_of(const_2260))) # shape=(9, 12, 12)
output = bop_2262
output2 = bop_2262
func_2265 = relay.Function([var_2261,], output)
mod['func_2265'] = func_2265
mod = relay.transform.InferType()(mod)
var_2266 = relay.var("var_2266", dtype = "uint64", shape = (9, 12, 12))#candidate|2266|(9, 12, 12)|var|uint64
output = func_2265(var_2266)
func_2267 = relay.Function([var_2266], output)
mutated_mod['func_2267'] = func_2267
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2277 = relay.var("var_2277", dtype = "float64", shape = (10, 7, 13))#candidate|2277|(10, 7, 13)|var|float64
uop_2278 = relay.atan(var_2277.astype('float64')) # shape=(10, 7, 13)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_2280 = func_775_call()
call_2281 = func_775_call()
output = relay.Tuple([uop_2278,call_2280,])
output2 = relay.Tuple([uop_2278,call_2281,])
func_2282 = relay.Function([var_2277,], output)
mod['func_2282'] = func_2282
mod = relay.transform.InferType()(mod)
mutated_mod['func_2282'] = func_2282
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2283 = relay.var("var_2283", dtype = "float64", shape = (10, 7, 13))#candidate|2283|(10, 7, 13)|var|float64
func_2282_call = mutated_mod.get_global_var('func_2282')
call_2284 = func_2282_call(var_2283)
output = call_2284
func_2285 = relay.Function([var_2283], output)
mutated_mod['func_2285'] = func_2285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1238_call = mod.get_global_var('func_1238')
func_1239_call = mutated_mod.get_global_var('func_1239')
call_2287 = relay.TupleGetItem(func_1238_call(), 0)
call_2288 = relay.TupleGetItem(func_1239_call(), 0)
output = call_2287
output2 = call_2288
func_2289 = relay.Function([], output)
mod['func_2289'] = func_2289
mod = relay.transform.InferType()(mod)
output = func_2289()
func_2290 = relay.Function([], output)
mutated_mod['func_2290'] = func_2290
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2317 = relay.var("var_2317", dtype = "int16", shape = (9, 12, 9))#candidate|2317|(9, 12, 9)|var|int16
var_2318 = relay.var("var_2318", dtype = "int16", shape = (9, 12, 9))#candidate|2318|(9, 12, 9)|var|int16
bop_2319 = relay.left_shift(var_2317.astype('int16'), relay.reshape(var_2318.astype('int16'), relay.shape_of(var_2317))) # shape=(9, 12, 9)
func_622_call = mod.get_global_var('func_622')
func_625_call = mutated_mod.get_global_var('func_625')
var_2324 = relay.var("var_2324", dtype = "float64", shape = (156,))#candidate|2324|(156,)|var|float64
call_2323 = relay.TupleGetItem(func_622_call(relay.reshape(var_2324.astype('float64'), [3, 13, 4])), 3)
call_2325 = relay.TupleGetItem(func_625_call(relay.reshape(var_2324.astype('float64'), [3, 13, 4])), 3)
uop_2329 = relay.acosh(var_2324.astype('float32')) # shape=(156,)
output = relay.Tuple([bop_2319,call_2323,uop_2329,])
output2 = relay.Tuple([bop_2319,call_2325,uop_2329,])
func_2345 = relay.Function([var_2317,var_2318,var_2324,], output)
mod['func_2345'] = func_2345
mod = relay.transform.InferType()(mod)
mutated_mod['func_2345'] = func_2345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2345_call = mutated_mod.get_global_var('func_2345')
var_2347 = relay.var("var_2347", dtype = "int16", shape = (9, 12, 9))#candidate|2347|(9, 12, 9)|var|int16
var_2348 = relay.var("var_2348", dtype = "int16", shape = (9, 12, 9))#candidate|2348|(9, 12, 9)|var|int16
var_2349 = relay.var("var_2349", dtype = "float64", shape = (156,))#candidate|2349|(156,)|var|float64
call_2346 = func_2345_call(var_2347,var_2348,var_2349,)
output = call_2346
func_2350 = relay.Function([var_2347,var_2348,var_2349,], output)
mutated_mod['func_2350'] = func_2350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2049_call = mod.get_global_var('func_2049')
func_2051_call = mutated_mod.get_global_var('func_2051')
call_2447 = relay.TupleGetItem(func_2049_call(), 1)
call_2448 = relay.TupleGetItem(func_2051_call(), 1)
output = relay.Tuple([call_2447,])
output2 = relay.Tuple([call_2448,])
func_2449 = relay.Function([], output)
mod['func_2449'] = func_2449
mod = relay.transform.InferType()(mod)
mutated_mod['func_2449'] = func_2449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2449_call = mutated_mod.get_global_var('func_2449')
call_2450 = func_2449_call()
output = call_2450
func_2451 = relay.Function([], output)
mutated_mod['func_2451'] = func_2451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2202_call = mod.get_global_var('func_2202')
func_2203_call = mutated_mod.get_global_var('func_2203')
call_2452 = relay.TupleGetItem(func_2202_call(), 3)
call_2453 = relay.TupleGetItem(func_2203_call(), 3)
var_2458 = relay.var("var_2458", dtype = "float64", shape = (39, 4))#candidate|2458|(39, 4)|var|float64
bop_2459 = relay.floor_mod(call_2452.astype('float64'), relay.reshape(var_2458.astype('float64'), relay.shape_of(call_2452))) # shape=(39, 4)
bop_2462 = relay.floor_mod(call_2453.astype('float64'), relay.reshape(var_2458.astype('float64'), relay.shape_of(call_2453))) # shape=(39, 4)
bop_2463 = relay.left_shift(bop_2459.astype('int64'), relay.reshape(call_2452.astype('int64'), relay.shape_of(bop_2459))) # shape=(39, 4)
bop_2466 = relay.left_shift(bop_2462.astype('int64'), relay.reshape(call_2453.astype('int64'), relay.shape_of(bop_2462))) # shape=(39, 4)
func_1969_call = mod.get_global_var('func_1969')
func_1971_call = mutated_mod.get_global_var('func_1971')
call_2467 = relay.TupleGetItem(func_1969_call(), 0)
call_2468 = relay.TupleGetItem(func_1971_call(), 0)
bop_2475 = relay.logical_xor(call_2452.astype('uint16'), relay.reshape(bop_2463.astype('uint16'), relay.shape_of(call_2452))) # shape=(39, 4)
bop_2478 = relay.logical_xor(call_2453.astype('uint16'), relay.reshape(bop_2466.astype('uint16'), relay.shape_of(call_2453))) # shape=(39, 4)
uop_2488 = relay.sinh(bop_2475.astype('float64')) # shape=(39, 4)
uop_2490 = relay.sinh(bop_2478.astype('float64')) # shape=(39, 4)
output = relay.Tuple([call_2467,uop_2488,])
output2 = relay.Tuple([call_2468,uop_2490,])
func_2493 = relay.Function([var_2458,], output)
mod['func_2493'] = func_2493
mod = relay.transform.InferType()(mod)
var_2494 = relay.var("var_2494", dtype = "float64", shape = (39, 4))#candidate|2494|(39, 4)|var|float64
output = func_2493(var_2494)
func_2495 = relay.Function([var_2494], output)
mutated_mod['func_2495'] = func_2495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1557_call = mod.get_global_var('func_1557')
func_1559_call = mutated_mod.get_global_var('func_1559')
call_2519 = relay.TupleGetItem(func_1557_call(), 0)
call_2520 = relay.TupleGetItem(func_1559_call(), 0)
var_2523 = relay.var("var_2523", dtype = "int8", shape = (5, 9, 3))#candidate|2523|(5, 9, 3)|var|int8
bop_2524 = relay.minimum(call_2519.astype('int16'), relay.reshape(var_2523.astype('int16'), relay.shape_of(call_2519))) # shape=(5, 9, 3)
bop_2527 = relay.minimum(call_2520.astype('int16'), relay.reshape(var_2523.astype('int16'), relay.shape_of(call_2520))) # shape=(5, 9, 3)
func_1410_call = mod.get_global_var('func_1410')
func_1413_call = mutated_mod.get_global_var('func_1413')
const_2535 = relay.const([[3.692396,6.920767,-3.765178,9.507604,1.901654,-8.315060,3.524724,1.712933,-6.843452,-1.435357,-1.241424,-7.419278,-2.637064,4.970556,0.789249,-9.959095,0.675875,-9.105171,6.271653,0.728910,2.593430,-3.618305,2.129742,8.678595,-7.328878,-4.634633,-7.880897,3.461905,-7.143575,5.651598,-0.075648,8.282469,9.022637,-7.917313,6.376435,0.547652,0.434106,7.358519,-6.341366,-0.968880,8.690357,4.082245,9.254780,-9.114216,5.963090,-2.179887,1.553945,2.978841,7.522177,6.900437,6.763142,4.230626,-9.615643,7.201865,7.979114,2.704177,7.212613,-4.762397,5.101218,-5.259734,5.184913,1.148044,-7.786753,4.312665,-8.004648,-2.888537,-8.389954,-6.129526,9.375547,3.163263,2.289289,3.233166,8.018986,9.694739,-8.239234,8.236490,-4.699867,-0.495601,1.905408,-8.169155,-3.091475,5.808010,-7.743452,1.819792,7.505529,-0.888319,-0.026421,8.275201,-6.482651,-9.618438,2.453285,-2.501071,-1.822536,-8.826264,-1.833834,2.607083,-8.858663,5.773445,-9.224489,-2.202565],[3.709840,-1.505831,-2.194529,2.391753,7.102351,8.676743,5.199439,-6.831088,-9.936944,2.928108,-3.649279,0.332330,9.357409,6.481204,5.539527,-6.290091,8.058832,-7.508168,-7.096929,-6.493941,-3.445766,-9.108241,4.938735,6.971153,-8.321815,-8.677557,-4.205975,2.431478,5.623240,1.881096,-5.068735,2.768107,3.452456,3.155949,-6.519115,5.799929,9.182769,-8.210851,-0.499175,-9.685505,8.621173,1.925196,-7.702768,6.311291,-3.673034,-8.904396,-4.649894,-7.698678,-4.241789,-4.504563,2.039744,0.909944,4.112422,0.206527,9.212746,-4.908568,-0.559857,-6.049446,-6.513157,-0.763626,5.686801,9.635008,2.225416,2.082674,0.386428,-2.570042,8.436809,1.442908,3.135803,-9.556029,-7.214816,7.316034,0.405026,9.374582,-3.864600,-0.966520,8.447425,5.223288,3.362520,-8.206570,-3.482370,9.136971,-4.807814,8.645275,9.103891,-0.395568,-4.238095,-0.461610,-4.231460,-0.778746,-6.751133,-1.873557,-2.383927,-2.529545,-0.011946,5.275052,3.403228,-4.403722,7.258815,3.330540],[0.520833,1.404882,-1.489799,6.213606,1.477471,4.234617,-6.124736,2.384214,8.796538,-3.477726,-1.607279,2.643160,-9.063361,0.519094,0.310242,-8.120221,5.032150,-5.144943,-9.279897,-6.972463,6.047051,7.835598,0.748758,8.111050,-9.793387,-6.784606,9.826414,-6.262384,5.989829,1.912730,-4.955654,0.090395,8.868830,6.258809,-0.011148,-4.275221,5.996749,9.489041,-8.436399,-8.845147,6.719529,-0.443387,-3.563624,-0.900068,-2.908167,-1.334470,-2.082846,-6.840078,0.571313,3.207434,3.979909,-6.963025,2.338824,4.276087,-8.885948,-5.369795,-2.075288,-9.830713,0.609696,-1.400608,-0.238145,-5.912527,6.120858,6.404011,6.469762,-3.471372,-0.208646,9.089388,-0.922553,4.887265,-0.962862,-3.997658,-8.257226,0.148930,-7.711484,-2.336834,-9.971956,1.181467,2.909229,0.534893,4.894248,-4.369112,-5.006452,7.749273,-6.232733,1.592983,-4.691089,-9.081903,-3.066602,-9.760159,4.574140,1.275095,1.631841,0.391110,6.365084,1.270527,-6.884515,-5.262913,-7.675993,-3.797832],[4.904592,1.875736,0.423828,-0.491600,-3.759450,-5.318521,1.251283,5.874335,-9.609226,-0.242149,1.242241,-7.723842,7.355053,-5.478475,-2.024123,-3.268555,-4.940500,9.911638,7.747100,1.733630,-4.360520,-2.694184,-4.991832,0.714021,-4.636855,-8.391956,3.949322,-6.269198,-5.795415,-7.121997,3.031328,-8.159197,3.415813,0.774807,9.206244,-7.845165,6.575037,-4.050904,-5.785297,-1.867994,7.725015,3.417218,-7.543216,2.087533,-2.783013,6.710436,-5.780258,-2.724074,-5.633486,5.720355,-2.286774,0.929154,-6.502670,3.755227,1.640554,0.553777,1.346052,-3.208666,-9.725472,-4.365427,1.997226,-1.898424,6.821048,7.839984,5.922325,4.580288,-2.914642,7.432199,-4.583221,-6.333305,-7.659143,-7.707691,-4.717577,7.274262,-7.698052,2.888372,-6.247876,-5.621197,-5.496638,5.842690,-0.806877,-2.329567,2.024778,4.663465,-4.800008,-0.026982,6.969442,-0.714449,7.858083,4.110103,9.674485,2.588648,-9.036171,5.907491,-5.874204,-6.020410,-3.449497,1.182575,-7.081003,2.461814],[-0.716130,-4.897412,8.621685,9.275643,-1.391841,-6.285273,-5.120738,5.226416,3.047615,4.783046,1.778065,-9.664331,-2.573552,-4.745778,-9.691582,-3.162331,0.746492,9.051959,2.713723,5.414384,0.466877,-6.000425,4.830936,-3.944503,-8.562046,-1.333154,-4.567929,3.222147,9.192309,0.320494,-3.881877,-1.435397,-9.072127,-9.345268,2.751223,-1.439253,9.177297,-4.507103,-7.986958,-3.607624,-3.560163,8.225462,7.862562,-3.774813,-0.074406,4.972033,0.167859,-6.635845,6.143556,5.338737,-9.087606,8.727374,-0.614869,-6.438406,-6.481898,-7.114077,-9.404886,4.230973,-1.717717,-4.158611,-5.013686,2.223561,0.409530,3.704876,-1.188100,9.733193,-0.031429,2.833879,-1.493680,-7.791661,-3.888273,-0.920831,-7.570322,-3.149009,3.161453,7.822019,-5.095740,3.345788,-4.251760,-0.934264,9.860159,8.798476,-0.736058,2.038977,-1.229837,-5.564474,-1.910635,9.692037,-3.662839,2.600800,-6.311834,4.937225,-0.165743,3.155202,-5.156028,9.487646,7.204610,2.483673,1.343978,5.822123],[-4.064399,-8.938193,-2.559140,4.009838,-5.266989,-6.507854,1.440845,6.944832,-6.403318,-7.731020,7.875263,-6.434613,-8.860330,-5.212539,-7.158417,-8.648456,9.131597,7.257652,-5.176881,9.343615,-2.750688,-8.520004,0.985288,2.262951,-6.176034,-5.205310,9.457355,-8.920849,2.924026,-3.843030,-0.069167,-4.826649,0.443818,1.173247,4.616584,-6.671442,-0.857675,7.235568,6.373275,3.071609,4.948896,9.864426,5.409736,-0.193640,-3.570382,-0.192687,7.695166,6.607509,4.269092,6.328475,0.633009,-2.695861,-6.488553,3.029169,-1.666796,6.567626,8.177289,-7.150623,-7.236428,6.909747,0.062762,-0.446108,-1.608600,-6.109922,-4.393415,-9.606103,8.302025,-7.155707,5.742426,6.075922,-7.146442,5.182016,7.801880,-8.811801,-5.433894,3.396300,-5.169024,9.250222,0.475272,-4.427806,7.461970,9.251264,9.595990,-3.004890,7.974268,-8.658541,-7.945639,5.089500,3.158903,2.280734,7.309602,-3.113061,-4.095200,2.859352,7.344544,-7.527270,-0.942415,0.300880,7.477214,-7.640973]], dtype = "float32")#candidate|2535|(6, 100)|const|float32
call_2534 = func_1410_call(relay.reshape(const_2535.astype('float32'), [8, 5, 15]))
call_2536 = func_1410_call(relay.reshape(const_2535.astype('float32'), [8, 5, 15]))
output = relay.Tuple([bop_2524,call_2534,const_2535,])
output2 = relay.Tuple([bop_2527,call_2536,const_2535,])
func_2543 = relay.Function([var_2523,], output)
mod['func_2543'] = func_2543
mod = relay.transform.InferType()(mod)
var_2544 = relay.var("var_2544", dtype = "int8", shape = (5, 9, 3))#candidate|2544|(5, 9, 3)|var|int8
output = func_2543(var_2544)
func_2545 = relay.Function([var_2544], output)
mutated_mod['func_2545'] = func_2545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2202_call = mod.get_global_var('func_2202')
func_2203_call = mutated_mod.get_global_var('func_2203')
call_2562 = relay.TupleGetItem(func_2202_call(), 1)
call_2563 = relay.TupleGetItem(func_2203_call(), 1)
func_1746_call = mod.get_global_var('func_1746')
func_1749_call = mutated_mod.get_global_var('func_1749')
const_2576 = relay.const([-9.703512,1.390679,6.167805,-6.859474,2.425099,-3.684774,9.790241,4.777011,-8.586070,0.647593,-5.457492,0.227228,5.224154,0.967168,-8.632674,-9.537966,-0.315845,-2.695721,-8.626695,2.987867,-3.164964,-4.103318,9.318184,-5.159202,-2.895740,2.069193,4.209292,-9.314503,-5.423416,9.409101,9.581372,-1.679637,-0.383483,8.388268,2.256818,-4.381418,-4.325717,8.260421,-4.782979,1.162735,6.577378,-9.422466,-0.290734,4.254308,-5.202569,8.138657,-6.578751,3.441989,-1.275137,-7.815342,7.328260,9.879429,7.684001,-2.649723,-3.325926,-8.747114,-5.110898,9.606903,7.185306,5.703290,3.714507,5.169692,-1.535154,-8.416572,2.379328,-9.788892,9.583830,-3.376636,6.198553,7.558454,5.979899,0.248752,-5.613406,-4.212556,-0.642282,9.729804,-2.249074,1.587902,0.373783,2.045895,-6.716496,-2.204311,5.469393,6.671199,6.492286,-5.116234,-0.089837,-9.068351,-4.026723,5.162328,-2.310081,3.741368,6.876518,-5.154374,-8.316400,-6.216386,2.810132,6.116257,2.399396,2.317869,3.403025,7.276445,-6.269793,-3.269709,-5.334770,6.192114,-8.599426,2.416921,5.890872,-9.700046,3.048861,6.383154,3.250276,8.650957,0.192336,7.286922,5.479820,-9.752348,-3.338966,-0.837755,-0.555045,-9.910333,-4.466067,8.810751,7.237258,-1.552408,-6.954357,7.185052,-5.876677,-2.389412,-9.035851,-9.268259,1.442272,5.017818,1.173854,-8.641144,9.824439,-0.912674,2.088376,1.650701,3.830073,5.985170,6.069096,-1.872374,-4.514940,4.173376,-9.970933,-6.509345,4.154651,-4.425559,1.934139,-5.985695,2.394936,7.002712,-5.446028,4.298876,-5.474717,8.855086,5.818306,6.419807,2.333589,-7.029486,-1.773725,4.204515,-3.094110,-3.942847,-5.001732,-7.273563,4.987302,-1.366803,0.051377,4.687175,4.322209,6.517474,-8.404837,-6.356099,-7.884653,-2.111187,8.028998,-2.912308,8.495904,3.663836,9.113472,7.789610,0.046235,0.932526,8.024202,-6.717512,6.392222,0.295990,-3.347161,7.116087,8.461059,7.169180,3.661522,-2.825051,-2.925671,0.736481,-3.253075,-7.376052,-3.636425,-1.166958,0.967808,-9.647255,-6.062320,-4.980777,5.016626,0.879087,4.804356,1.391083,-6.733767,5.158961,-1.089128,5.701196,1.266647,-7.597541,8.009505,6.450999,-8.316069,2.054414,-2.666546,2.738997,-3.960148,-2.313540,-7.802386,-2.917698,2.370776,5.759232,-6.233466,-1.646007,4.353614,-2.434562,9.753224,8.236234,0.991734,7.157719,-0.227912,-3.419492,3.496345,8.747621,-0.149672,1.747113,6.677705,5.149795,0.524960,-4.655943,0.327465,5.028776,-0.013811,-4.036171,6.538326,6.365009,-4.660185,-1.518897,-5.152358,5.231897,-9.401928,9.487992,-9.512334,3.628424,-3.556724,-0.885795,-1.183033,2.443969,-6.630172,3.140535,3.326312,9.005379,-0.733528,2.505822,1.940980,1.979253,1.475891,-6.914367,-5.177002,8.986426,0.321726,-9.885321,8.380867,-9.411320,9.714771,-9.579966,3.739993,-0.408303,2.312996,-9.493505,1.808684,-5.028983,-3.481430,-3.622938,7.831480,-8.941596,3.991665,-1.602989,-8.113927,-8.209684,-2.774746,-5.787729,-2.761158,6.381661,-7.017146,3.740930,-9.808780,7.041997,-7.331830,4.134269,3.969993,-4.537264,-5.014844,-2.903655,1.851322,-6.445861,6.342754,5.986153,6.084797,5.434501,0.467325,1.263367,9.479754,-8.680431,-9.976858,3.374699,9.128849,-1.686190,-1.382067,-8.249662,8.542744,-7.008380,6.997807,5.614910,-4.584409,5.249390,9.762895,8.317637,9.015648,-6.081909,6.562181,4.043252,0.802773,-1.884627,-2.421015,3.836763,0.126193,-5.200654,-2.491683,-2.878746,1.776622,-5.587296,-8.869662,1.372883,2.419525,-0.437586,3.470887,-9.937112,9.648609,-1.226425,4.571317,-5.309820,5.459413,-3.114336,-7.699303,4.577581,-5.424942,-4.113686,2.296914,-1.403692,6.317195,-3.940228,-5.899273,5.687044,7.661371,-3.795009,0.646936,-6.186919,2.776511,-8.506673,9.735750,3.222568,9.882795,-9.126145,6.494187,-5.519340,4.985473,3.387732,2.761148,-7.709435,8.578684,9.840764,4.099598,1.529921,-6.403697,-8.542349,7.388666,0.569113,2.680779,-2.861171,-9.045281,2.151891,4.531092,-7.491529,2.066929,6.599121,3.789206,7.589180,-7.502241,6.908293,7.494451,-4.014618,-2.923215,2.242133,-6.083422,-2.234801,-3.438929,-4.829340,6.652340,-1.092341,6.130243,6.016019,1.041128,5.567292,4.611125,-0.128741,-2.373845,-4.559791,6.291975,-6.162527,2.671222,-0.102085,-6.660721,5.393214,9.224540,-2.277880,2.123938,3.788178,8.341477,4.924042,-3.347426,4.937184,-0.648833,1.159117,7.476411,3.986802,-2.373650,7.779852,4.612993,-9.300745,-1.985795,1.876318,-3.162163,-9.243474,-7.595279,6.363696,-2.912514,2.318476,-8.808408,-1.342387,6.916702,-1.976747,6.664148,-1.757542,-5.354282,-6.886687,-2.625123,-9.758820,-0.362062,-7.869171,-8.119934,2.268738,-8.244833,-5.796444,4.215581,-4.647487,-1.179107,3.482609,-2.175676,-0.174730,-6.458756,-9.429083,0.445504,-3.295327,6.567261,-2.311398,-9.284440,-6.638146,-9.154978,8.958861,8.500143,-6.022692,-0.701345,-0.893150,-8.604922,4.573211,5.655535,7.602779,-3.377631,-1.553337,-8.415462,-5.160228,6.606613,7.890879,0.715459,9.338879,-5.629582,-5.292454,2.606011,-6.221194,-6.610223,9.546968,7.702042,-6.607715,-5.034916,6.462874,4.715938,0.234292,4.387639,-6.672696,6.157083,5.649365,-7.685438,-4.950663,-8.853682,9.862199,-2.553056,-4.846241,7.662428,3.083931,-0.824998,-7.736198,-9.476713,-6.383985,-0.812268,-0.058651,-4.340907,2.574980,-5.940720,5.585440,-9.639215,7.812444,4.962291,-5.102069,-1.695150,-3.893623,5.864229,-6.546354,-0.379425,0.862273,8.328787,-2.640953,9.927277,-0.736088,6.755776,2.568538,-3.527242,-2.297659,-3.784277,-6.721240,-4.208001,9.865730,7.216544,-5.540833,-8.638139,-9.914507,3.409011,-0.945122,7.301759,-4.567829,-0.946730,-8.951557,-5.816413,-1.993680,-4.129035,6.418816,7.147931,-0.837924,-0.989464,-0.661764,-7.400386,7.001968,3.292321,-9.183422,-4.034016,4.078749,-8.202843,-9.605565,-0.782295,-9.685450,3.260584,7.428059,-2.282514,-2.632749,-6.769051,-6.172593,4.278700,7.768639,3.541188,3.343487,-5.699038,-8.300378,1.092742,-0.379951,0.800028,-1.012143,-3.999719,7.677631,9.754099,-2.934789,-3.799779,-6.061942,-1.393366,-9.234616,2.252660,2.367127,-1.061543,3.815777,-8.807258,4.885075,-6.552581,8.255833,9.798944,3.972126,-6.999504,4.512062,-4.311370,-7.665009,4.797689,-3.983589,8.807141,-0.904007,5.483901,7.713654,9.703451,9.086978,-9.969551,4.797023,3.488878,-0.563669,-8.684866,-2.001453,9.548604,8.849071,5.636043,8.319416,8.590751,-2.763202,4.749501,4.996357,-2.824918,-7.216581,8.333775,2.470700,4.169364,-4.879008,0.702038,-3.286049,3.493527,6.656570,-0.627566,3.143268,-5.717535,-9.793355,1.081532,3.324992,9.229654,-4.452764,8.207563,2.345062,2.170054,-7.988082,7.556335,1.633591,-6.464349,3.947412,-5.430087,-1.563119,1.882949,-1.716341,-9.476321,-9.173521,-9.373602,-6.095125,-4.330781,-5.337003,5.421276,-3.747613,8.120412,-2.555181,-3.589410,-5.981987,-5.340269,-2.001619,-5.611408,9.259890,-9.055237,-1.248321,-5.653872,-0.128470,-6.678659,4.919904,8.879278,-3.241806,8.231665,-5.281238,1.893893,-9.848292,2.637660,7.769857,-0.962056,7.541822,-1.025951,0.858140,-3.307668,-6.782093,-8.611364,6.049980,9.100071,-2.505838,-4.096494,5.364007,-3.272528,3.984112,-6.984214,0.824147,9.955956,4.641500,-1.656335,3.645491,-9.259406,4.556305,6.658518,-0.449500,4.546463,1.545758,7.659572,5.983614,9.029770,5.523267,2.463399,-2.603204,3.625755,-0.837833,-1.831955,6.965505,1.059144,0.049886,8.394373,-0.437234,-9.167994,-3.643788,-2.769198,1.397099,-3.429201,2.554889,2.453236,9.029314,2.388158,-0.179679,0.782549,-8.757799,1.125948,0.516437,9.368739,0.966788,7.871644,3.077037,4.839808,9.204617,7.102290,8.221700,-0.955613,-8.034756,-3.404722,5.871027,-2.230337,7.970842,7.313507,-8.714133,-3.346794,7.953917,9.708003,5.305014,9.225491,-5.850061,5.730898,-7.279296,-3.453964,3.253207,1.841802,-4.685887,-9.228485,5.419257,-4.671800,-5.025452,3.020965,4.908680,-3.296889,5.978492,8.088633,-3.552209,9.122895,8.241391,7.758000,7.787742,1.029688,-1.155278,8.805230,-7.613320,8.849263,-2.614181,-4.081988,5.044601,-7.027745,-6.921869,4.054438,-1.395883,3.111856,-5.025025,-5.085810,-3.750189,-0.065524,1.691717,-7.301274,7.605456,-5.451985,5.729475,1.683361,3.463030,9.931389,-5.065618,-6.526161,-5.591810,-4.694502,3.471800,-6.590736,-5.198780,-2.634939,-5.540200,1.180535,3.428557,9.971392,-5.261452,1.244653,-7.794709,-9.004498,8.351984,0.432927,-2.148179,8.655159,-8.173487,5.074300,-1.416582,-9.066785,8.785160,-3.002270,3.834079,0.878465,9.613257,7.915181,9.778012,-3.684634,-6.528777,-5.152191,2.546302,-9.603895,9.098345,-3.426702,-3.847333,-5.365037,8.938342,-2.934842,-5.989368,-2.354873,-5.444637,4.728409,0.063442,5.714852,6.146197,7.266601,2.189805,-6.617330,4.216894,-9.208828,5.566496,8.124289,1.812791,7.068897,8.416660,0.884062,2.910029,-2.465031,-9.609327,6.904721,0.306305,-2.181327,-9.489240,-4.908903,-1.950140,3.489632,3.647611,-3.507830,-4.841967,9.861732,1.305493,-0.337396,7.752441,-7.140928,-5.730374,-4.761620,-1.340785,-2.709800,8.037545,-3.582697,5.896288,-5.242692,6.087774,5.928688,-7.724951,5.432709,-4.048363,9.775656,-8.934617,5.246371,2.675705,1.219905,6.392192,-2.800953,-7.484047,-3.367235,5.832788,-5.777145,0.242311,-7.116942,-9.287978,9.504257,0.137920,7.662748,-8.103940,-9.185194,-5.091856,1.048204,8.378000,-6.262821,9.518841,0.116452,6.001750,5.600906,-0.426908,5.498465,5.637729,4.471422,2.358254,6.585253,7.779039,9.310280,0.881668,3.347017,-1.251461,-3.438076,-1.502230,-1.377421,7.800098,-1.664095,-3.868332,6.625677,0.149962,-6.709654,5.530683,-0.525755,-5.458829,-3.112920,9.069561,-8.178705,2.774213,1.157777,5.345150,-0.984325,9.903468,-5.160804,-4.426360,5.393163,-5.195805,-2.012946,5.071054,-1.052632,-4.079165,4.695351,3.548734,8.085758,-9.441251,-6.258938,2.140852,2.561223,-8.877980,-6.881332,0.661100,-6.233150,4.411786,4.562851,6.690087,-1.650392,-1.429671,1.035859,-9.071526,-5.609498,4.754003,-0.122232,2.345926,0.525096,8.948642,-9.108033,-7.877185,-9.546743,2.870524,-0.623967,7.633779,-0.540544,3.514777,5.350728,0.884708,-1.384532,9.294884,7.570405,-0.631991,-1.995760,-0.429506,-8.369928,1.604213,-8.549344,-2.082907,4.337734,-1.976107,9.309936,-2.747163,9.945855,3.925404,-0.874286,-6.940124,0.321662,3.966064,-2.292262,1.320406,-8.927852,7.747846,4.197433,8.772085,8.170336,3.385944,5.389122,-4.359708,1.244204,5.681340,-5.231574,6.838779,-8.935266,6.117222,-6.810415,-1.273882,8.774032,0.758419,5.185821,4.503439,-7.915665,-5.693471,-3.559197,-5.494803,-0.839431,-2.048744,8.637146,-8.780524,-1.945185,-4.271325,-2.569804,4.580639,-9.055911,3.270651,1.885050,6.291897,9.875108,-5.130037,-5.348475,5.407337,-5.646800,4.348421,0.736093,7.873825,5.957628,-1.725368,-7.896597,6.959613,-5.099776,6.068485,4.605523,-9.970982,-0.242868,2.801969,1.552982,9.460602,-3.703099,-3.748186,-9.317937,5.440920,8.170985,-0.128132,5.611941,0.071658,-7.292307,1.434511,3.909916,-0.467818,-3.319593,-2.031232,-3.124976,0.467117,-9.391994,-0.752406,-2.446323,-0.357114,1.428321,8.602911,-8.431797,-5.448052,9.037531,-0.376430,4.981477,-1.464588,-9.405139,-2.715899,-3.579435,6.798835,2.967477,-4.212106,4.420323,1.784177,0.447031,9.775713,1.973590,-8.568807,-2.712447,1.430474,3.861182,6.929421,-6.517666,-9.966944,-2.042192,4.673494,1.095755,0.432726,-8.928406,7.991956,5.072034,4.251585,-5.043331,-7.633085,2.011298,9.170679,0.633493,-9.425142,-0.086931,6.152583,0.135069,-0.451764,-3.300196,8.079576,-5.812732,-6.908785,-8.777691,8.095834,9.156044,2.729231,1.105793,5.294566,4.154580,3.678871,-9.567074,-4.609565,7.963256,-5.630402,-9.783092,1.788057,-8.343859,2.520095,2.573048,3.101198,-0.946931,3.850987,7.018734,-1.136537,6.311637,-7.354913,-3.009454,8.312341,0.311901,6.084124,8.989541,4.141925,-7.740617,-8.310112,9.538031,-1.152141,-5.652206,5.332856,-6.471895,6.373251,4.471719,6.631953,-1.000907,-0.100800,-5.822495,-1.600522,-4.445339,5.469959,-0.281138,-2.269784,-2.888270,5.236776,3.613362,-8.825390,-4.144626,5.216352,-8.360950,-7.848418,1.194014,-2.250292,-6.941893,4.279012,-2.651078,-0.143504,2.208270,-4.404821,3.545226,-6.614056,5.010800,9.540436,-3.447802,1.316391,3.336245,-8.300317,-2.483542,4.597153,5.337079,1.874000,8.211531,-6.276310,8.551960,-9.534444,-3.791038,8.437239,-7.252396,0.022656,7.995648,6.895828,-9.451498,9.015120,-4.593566,-3.745368,9.003364,-6.653866,8.459678,3.722482,4.342726,6.177314,1.245478,2.576074,9.210747,-9.497530,-1.511725,-7.111536,3.496239,5.429330,-1.609177,9.176702,-3.985438,-6.291202,-4.650227,-9.958731,-7.922456,6.558467,-4.918733,3.333296,-1.634519,-8.099926,9.385585,3.159150,-8.834517,-1.624815,-8.602339,-1.932173,8.219266,-9.246271,1.560270,-1.236362,7.956982,6.122744,-2.320366,5.159068,-0.506858,5.722896,-2.826658,4.842656,-4.772349,0.457463,8.597139,2.296261,4.482276,1.515341,-4.361930,-3.293978,7.334797,0.609812,-6.965973,-2.702998,-8.670373,-1.865190,2.563559,5.552250,5.655440,-5.275221,-2.583948,-8.255172,-3.170690,-7.377219,5.471789,-2.742603,-5.890768,-6.938617,-9.527017,-3.674676,5.153383,-5.724459,-8.763293,-7.366374,-1.212315,-2.801519,-7.519445,-3.467609,-3.839617,2.734614,5.155921,9.099975,3.907689,-7.968302,-0.119226,-7.860826,6.159010,-5.141973,-0.652213,-9.820881,-5.251021,4.171904,7.010558,5.203074,6.210926,2.229504,-4.774448,-3.161408,-5.462749,3.510762,2.771296,-6.932103,-2.142425,-6.021526,2.677060,-0.422450,-6.508183,-4.831737,1.732008,0.102320,-6.830393,-4.396298,8.822369,-9.952358,1.197806,9.170550,3.060940,-9.151081,-3.455146,-4.075839,2.674144,3.819431,2.102938,9.552713,3.264913,0.936101,4.697006,-4.418919,-0.133924,-5.713934,1.283063,8.167792,-2.459855,-3.324158,-9.793337,-5.925082,5.107626,1.286168,-0.303742,-8.134484,-6.292505,4.644087,7.277319,-7.148059,4.836780,4.527963,-9.045525,9.677099,-3.808696,-5.527571,7.396857,-6.551181,-6.262675,3.651774,-6.363691,8.550507,9.557520,-3.002340,-2.503104,-9.410027,-6.391616,-0.637787,-9.035843,1.553206,-9.496763,-7.830880,-9.015262,-8.309347,-3.250749,0.462116,6.188338,0.144667,-3.255795,4.218452,3.596324,-5.121784,-6.353234,-8.628385,-7.113684,7.904017,4.816750,-9.257870,8.775688,4.264197,-9.431081,-8.282677,8.006221,-7.723776,-1.503716,-2.293205,-6.855341,9.178082,-1.533355,7.354590,9.287451,4.298482,-1.657439,-6.413435,-3.566955,-8.363064,1.839450,1.752256,-0.975815,-7.712866,9.074184,-0.720502,5.437927,-4.778734,-4.853204,-2.498818,3.571647,-2.258844,-1.511758,7.394742,-9.814553,3.144703,-8.384470,-0.418628,1.052200,1.576156,-8.007046,-9.277938,2.604255,5.655210,-1.151581,9.958476,0.189976,-5.715940,4.602528,-8.005217,8.919631,3.380207,-4.168613,-2.997882,-7.406001,9.079522,-5.496048,-5.196027,-7.650116,5.785640,3.685250,-6.638134,-8.144152,-3.624984,-0.623873,-3.219379,5.898725,-8.692578,4.410969,3.078465,-2.716895,-3.656222,-2.389052,6.261973,-8.611603,0.991768,9.596146,-2.591278,-3.100481,7.138073,-3.873982,-4.487416,5.022885,2.125610,-5.114368,-2.286493,3.716733,7.572247,4.496263,3.911137,2.674041,-8.082377,-3.196950,-1.345972,4.066720,-5.924298,9.264709,6.785519,6.934179,-6.946079,3.809935,-2.622075,5.587401,-6.951279,-5.041586,0.383251,1.806712,8.761780,-1.739177,-5.401755,6.695070,9.558561,-8.545699,-2.017378,-3.285518,9.791494,9.089326,-9.556962,8.792995,-8.522225,-6.478258,6.445640,3.523819,-8.064214], dtype = "float32")#candidate|2576|(1560,)|const|float32
call_2575 = relay.TupleGetItem(func_1746_call(relay.reshape(const_2576.astype('float32'), [1560,])), 1)
call_2577 = relay.TupleGetItem(func_1749_call(relay.reshape(const_2576.astype('float32'), [1560,])), 1)
output = relay.Tuple([call_2562,call_2575,const_2576,])
output2 = relay.Tuple([call_2563,call_2577,const_2576,])
func_2599 = relay.Function([], output)
mod['func_2599'] = func_2599
mod = relay.transform.InferType()(mod)
output = func_2599()
func_2600 = relay.Function([], output)
mutated_mod['func_2600'] = func_2600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1301_call = mod.get_global_var('func_1301')
func_1303_call = mutated_mod.get_global_var('func_1303')
call_2646 = relay.TupleGetItem(func_1301_call(), 1)
call_2647 = relay.TupleGetItem(func_1303_call(), 1)
func_1935_call = mod.get_global_var('func_1935')
func_1937_call = mutated_mod.get_global_var('func_1937')
call_2660 = relay.TupleGetItem(func_1935_call(), 3)
call_2661 = relay.TupleGetItem(func_1937_call(), 3)
func_242_call = mod.get_global_var('func_242')
func_246_call = mutated_mod.get_global_var('func_246')
var_2669 = relay.var("var_2669", dtype = "float64", shape = ())#candidate|2669|()|var|float64
var_2670 = relay.var("var_2670", dtype = "float64", shape = (168,))#candidate|2670|(168,)|var|float64
call_2668 = relay.TupleGetItem(func_242_call(relay.reshape(var_2669.astype('float64'), []), relay.reshape(var_2670.astype('float64'), [4, 7, 6]), relay.reshape(var_2670.astype('float32'), [4, 7, 6]), ), 1)
call_2671 = relay.TupleGetItem(func_246_call(relay.reshape(var_2669.astype('float64'), []), relay.reshape(var_2670.astype('float64'), [4, 7, 6]), relay.reshape(var_2670.astype('float32'), [4, 7, 6]), ), 1)
output = relay.Tuple([call_2646,call_2660,call_2668,var_2669,var_2670,])
output2 = relay.Tuple([call_2647,call_2661,call_2671,var_2669,var_2670,])
func_2675 = relay.Function([var_2669,var_2670,], output)
mod['func_2675'] = func_2675
mod = relay.transform.InferType()(mod)
mutated_mod['func_2675'] = func_2675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2675_call = mutated_mod.get_global_var('func_2675')
var_2677 = relay.var("var_2677", dtype = "float64", shape = ())#candidate|2677|()|var|float64
var_2678 = relay.var("var_2678", dtype = "float64", shape = (168,))#candidate|2678|(168,)|var|float64
call_2676 = func_2675_call(var_2677,var_2678,)
output = call_2676
func_2679 = relay.Function([var_2677,var_2678,], output)
mutated_mod['func_2679'] = func_2679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1346_call = mod.get_global_var('func_1346')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_2692 = relay.TupleGetItem(func_1346_call(), 0)
call_2693 = relay.TupleGetItem(func_1347_call(), 0)
var_2694 = relay.var("var_2694", dtype = "uint8", shape = (5, 9, 3))#candidate|2694|(5, 9, 3)|var|uint8
bop_2695 = relay.subtract(call_2692.astype('int64'), relay.reshape(var_2694.astype('int64'), relay.shape_of(call_2692))) # shape=(5, 9, 3)
bop_2698 = relay.subtract(call_2693.astype('int64'), relay.reshape(var_2694.astype('int64'), relay.shape_of(call_2693))) # shape=(5, 9, 3)
output = relay.Tuple([bop_2695,])
output2 = relay.Tuple([bop_2698,])
func_2699 = relay.Function([var_2694,], output)
mod['func_2699'] = func_2699
mod = relay.transform.InferType()(mod)
mutated_mod['func_2699'] = func_2699
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2700 = relay.var("var_2700", dtype = "uint8", shape = (5, 9, 3))#candidate|2700|(5, 9, 3)|var|uint8
func_2699_call = mutated_mod.get_global_var('func_2699')
call_2701 = func_2699_call(var_2700)
output = call_2701
func_2702 = relay.Function([var_2700], output)
mutated_mod['func_2702'] = func_2702
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2782 = relay.var("var_2782", dtype = "bool", shape = ())#candidate|2782|()|var|bool
const_2783 = relay.const([[False,True,False,False,False,False,True],[False,False,False,True,True,True,False],[False,False,True,False,False,False,True],[False,False,False,True,False,False,True],[True,False,True,True,False,False,False],[False,False,True,True,True,False,False],[False,True,False,True,True,True,True],[False,True,True,False,True,True,True],[False,True,False,True,False,False,False]], dtype = "bool")#candidate|2783|(9, 7)|const|bool
bop_2784 = relay.logical_or(var_2782.astype('bool'), const_2783.astype('bool')) # shape=(9, 7)
func_2289_call = mod.get_global_var('func_2289')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_2787 = func_2289_call()
call_2788 = func_2289_call()
output = relay.Tuple([bop_2784,call_2787,])
output2 = relay.Tuple([bop_2784,call_2788,])
func_2793 = relay.Function([var_2782,], output)
mod['func_2793'] = func_2793
mod = relay.transform.InferType()(mod)
var_2794 = relay.var("var_2794", dtype = "bool", shape = ())#candidate|2794|()|var|bool
output = func_2793(var_2794)
func_2795 = relay.Function([var_2794], output)
mutated_mod['func_2795'] = func_2795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2449_call = mod.get_global_var('func_2449')
func_2451_call = mutated_mod.get_global_var('func_2451')
call_2809 = relay.TupleGetItem(func_2449_call(), 0)
call_2810 = relay.TupleGetItem(func_2451_call(), 0)
output = relay.Tuple([call_2809,])
output2 = relay.Tuple([call_2810,])
func_2811 = relay.Function([], output)
mod['func_2811'] = func_2811
mod = relay.transform.InferType()(mod)
output = func_2811()
func_2812 = relay.Function([], output)
mutated_mod['func_2812'] = func_2812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_2870 = func_775_call()
call_2871 = func_775_call()
output = call_2870
output2 = call_2871
func_2874 = relay.Function([], output)
mod['func_2874'] = func_2874
mod = relay.transform.InferType()(mod)
mutated_mod['func_2874'] = func_2874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2874_call = mutated_mod.get_global_var('func_2874')
call_2875 = func_2874_call()
output = call_2875
func_2876 = relay.Function([], output)
mutated_mod['func_2876'] = func_2876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1850_call = mod.get_global_var('func_1850')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_2914 = relay.TupleGetItem(func_1850_call(), 0)
call_2915 = relay.TupleGetItem(func_1851_call(), 0)
func_2289_call = mod.get_global_var('func_2289')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_2925 = func_2289_call()
call_2926 = func_2289_call()
func_2345_call = mod.get_global_var('func_2345')
func_2350_call = mutated_mod.get_global_var('func_2350')
const_2938 = relay.const([[-9,-7,6,-6,9,-7,3,5,-6,9,-3,9,3,7,-2,-4,7,-5,-7,-1,5,3,5,5,6,1,-6,7,8,7,-8,-3,4,9,1,8,-7,5,6,3,-3,1,5,-9,1,-5,6,-5,3,2,3,1,10,2,-3,-7,-1,6,-6,1,10,8,1,4,7,-10,-5,-10,7,10,1,8,8,8,-10,3,2,-4,5,8,6,-4,-9,6,10,-9,3,-3,-3,7,9,-3,-1,5,-9,-10,1,5,-2,-7,7,5,3,-3,8,-2,-9,-9,4,-6,7,7,4,7,5,2,9,-3,3,1,-7,-10,9,-7,-3,7,3,-7,6,-4,-7,-2,-2,-9,5,8,-4,-10,-6,-6,-2,-9,7,-1,-10,-3,-3,-1,3,2,1,-10,8,6,7,-7,6,-3,3,-5,2,8,-4,2,1,5,-6,5,-5,2,-4,2,-4,-5,10,10,10,7,8,-1,-3,-9,1,7,-6,9,-7,-1,5,-9,-6,7,6,-1,-5,-3,9,9,5,-8,-4,-10,10,-3,-9,-10,-3,2,4,4,-4,-8,-9,4,5,-5,-1,-2,-8,5,-9,-2,-3,2,6,7,-4,-4,5,9,2,-3,-8,-3,1,-4,5,5,-10,7,6,7,-10,5,1,-7,7,-7,4,1,-9,8,-3,-4,-1,-9,7,-6,-9,4,6,-2,-3,8,-10,-7,-6,-3,-9,1,9,6,6,-5,-7,-4,4,4,6,7,2,4,-10,-6,5,-8,7,-10,-9,7,-6,9,-8,7,6,9,9,-6,2,5,-9,-4,8,9,-9,-5,9,6,6,9,-9,-10,4,7,-9,-5,-7,7,3,7,4,8,6,9],[7,-6,8,7,3,2,-8,10,-6,-3,3,-2,1,-10,-3,-1,-9,-1,4,-3,-1,6,-1,-7,5,5,-1,7,-6,1,8,-4,-8,5,2,-8,2,4,-2,2,10,-5,6,-5,9,-4,7,-3,2,6,8,8,-9,5,3,9,7,-6,-6,-5,-4,-3,6,5,-5,-3,6,5,2,-7,9,10,-1,-1,7,3,7,-2,1,-3,2,-9,5,-4,-4,-4,8,-9,10,6,-5,9,-5,5,10,-2,3,-1,-3,-7,-7,-10,-5,-5,-10,-10,-2,-7,10,2,-1,10,-4,-2,5,4,10,-10,4,10,8,10,-1,-6,-10,-10,-3,-5,-3,-5,-8,-4,-4,3,-2,3,5,10,10,-6,6,-1,10,7,-5,-6,1,3,-6,3,-1,8,10,9,-7,10,5,-4,7,10,2,-7,6,6,8,2,10,5,-9,1,1,1,3,1,-5,-4,-7,-7,4,-6,7,-2,-7,8,-1,-4,-10,-10,-8,-3,-2,-9,-1,-1,-4,-7,-5,9,-8,-10,3,3,8,-6,-4,3,-7,2,-1,-3,10,-5,1,-8,10,-7,-3,6,-4,2,-1,-2,7,6,-7,-2,-1,3,-2,8,-3,5,-5,-9,-1,-7,-4,-3,-2,-1,-10,-9,4,4,5,10,-6,3,-5,-2,-3,-1,7,10,-4,2,5,-6,3,7,-1,5,-1,1,-1,4,-4,-1,-10,-2,-3,8,-4,-7,4,5,10,-3,10,-8,-8,7,9,3,-10,-6,9,-2,-10,-10,-4,8,-8,-4,-6,1,5,4,-7,-5,-3,-1,5,-5,-4,-9,-3,10,-9,-10,-7,9,-9,5,-1,5,1,6,1,1,6,2,9,1],[-6,-3,1,6,6,-6,-2,-10,-8,9,6,3,-1,3,6,-8,-4,7,2,3,-5,-4,1,9,8,9,9,-10,-6,10,7,-6,6,4,9,5,-10,10,-1,-3,9,5,-3,-8,-7,10,-4,-5,-10,-10,10,-2,2,-2,-2,-4,-6,-1,-5,7,-7,8,-3,-4,3,1,-9,4,6,-6,10,3,10,-4,-5,9,-7,-3,-9,3,-3,7,-9,3,8,8,-1,5,-7,8,-9,-3,-3,7,5,8,-6,10,-8,3,-4,6,-3,9,-2,-1,-4,-9,3,1,-8,6,5,-1,10,-1,-8,2,-9,-3,-7,-2,-1,2,-9,-1,-3,2,4,-3,9,9,-2,-1,1,10,8,-1,-4,-10,5,1,8,-5,9,7,1,-7,6,-4,10,4,-7,-7,-7,6,-8,-1,-10,-1,4,9,5,-10,2,7,-9,1,8,-7,-5,-9,9,1,6,-10,-1,8,3,-6,-4,-8,-6,7,7,8,-10,-4,7,-10,-1,-3,-9,8,-9,-10,7,-3,7,6,-7,-5,-5,6,6,3,8,10,7,3,10,8,-1,2,-5,1,7,1,-5,-2,-4,-8,2,-2,-6,6,8,5,9,9,-6,-5,6,-2,2,-4,10,-1,-2,3,7,3,-3,7,6,5,-8,-4,8,-9,-2,9,7,-8,10,-10,-9,4,-1,-4,-1,-8,1,5,-10,2,-7,7,8,6,5,6,-9,7,-5,9,-2,-5,3,-4,4,6,-4,7,10,-3,1,10,2,-4,-10,3,3,7,-5,8,7,-1,1,-5,5,-6,7,-8,3,8,-4,5,6,-3,5,2,-7,2,-5,9,-5,6,-8,3,-8,-5,9,-2]], dtype = "int16")#candidate|2938|(3, 324)|const|int16
var_2939 = relay.var("var_2939", dtype = "float64", shape = (156,))#candidate|2939|(156,)|var|float64
call_2937 = relay.TupleGetItem(func_2345_call(relay.reshape(const_2938.astype('int16'), [9, 12, 9]), relay.reshape(const_2938.astype('int16'), [9, 12, 9]), relay.reshape(var_2939.astype('float64'), [156,]), ), 0)
call_2940 = relay.TupleGetItem(func_2350_call(relay.reshape(const_2938.astype('int16'), [9, 12, 9]), relay.reshape(const_2938.astype('int16'), [9, 12, 9]), relay.reshape(var_2939.astype('float64'), [156,]), ), 0)
output = relay.Tuple([call_2914,call_2925,call_2937,const_2938,var_2939,])
output2 = relay.Tuple([call_2915,call_2926,call_2940,const_2938,var_2939,])
func_2945 = relay.Function([var_2939,], output)
mod['func_2945'] = func_2945
mod = relay.transform.InferType()(mod)
var_2946 = relay.var("var_2946", dtype = "float64", shape = (156,))#candidate|2946|(156,)|var|float64
output = func_2945(var_2946)
func_2947 = relay.Function([var_2946], output)
mutated_mod['func_2947'] = func_2947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1346_call = mod.get_global_var('func_1346')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_2976 = relay.TupleGetItem(func_1346_call(), 0)
call_2977 = relay.TupleGetItem(func_1347_call(), 0)
output = relay.Tuple([call_2976,])
output2 = relay.Tuple([call_2977,])
func_2982 = relay.Function([], output)
mod['func_2982'] = func_2982
mod = relay.transform.InferType()(mod)
output = func_2982()
func_2983 = relay.Function([], output)
mutated_mod['func_2983'] = func_2983
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3007 = relay.var("var_3007", dtype = "float32", shape = (10, 1, 8))#candidate|3007|(10, 1, 8)|var|float32
var_3008 = relay.var("var_3008", dtype = "float32", shape = (10, 3, 8))#candidate|3008|(10, 3, 8)|var|float32
bop_3009 = relay.divide(var_3007.astype('float32'), var_3008.astype('float32')) # shape=(10, 3, 8)
uop_3012 = relay.cos(var_3007.astype('float64')) # shape=(10, 1, 8)
func_242_call = mod.get_global_var('func_242')
func_246_call = mutated_mod.get_global_var('func_246')
const_3016 = relay.const(6.132708, dtype = "float64")#candidate|3016|()|const|float64
const_3017 = relay.const([6.514096,-4.845155,-0.900029,-7.820318,7.176338,-5.018207,4.311635,-2.785764,-2.309445,7.426921,8.765456,-1.178216,-3.696507,2.635250,-6.692567,-7.895456,-1.509471,-8.226381,-2.755704,-1.167990,1.487678,-1.641815,2.528112,8.635511,-6.180815,-8.846863,-0.037022,-0.222499,-1.485354,-4.694007,-4.472708,-5.780767,9.872575,-9.668215,-2.346442,5.085494,9.026248,-5.740092,9.488153,-5.691202,-9.593687,4.989981,8.891718,8.492620,7.045119,-8.188081,-5.963565,6.829634,5.610824,0.121064,-9.416163,5.165941,7.715686,-4.387550,7.221945,-3.562712,3.022993,7.811804,8.400653,-0.951591,-9.491279,1.725668,-0.437821,4.628852,-6.527372,4.767842,7.008342,-7.269717,-8.874639,8.685957,3.989165,7.856883,1.327254,3.969277,-7.769144,-4.742099,-1.153179,9.117093,-9.684278,9.298216,-2.448339,8.399647,7.644409,-4.133228,-6.041078,-0.404030,4.457599,9.133511,-2.526577,5.356780,-8.208468,2.549343,4.304555,1.296713,9.150564,-5.809027,4.620196,-0.198408,7.976107,-6.708724,-3.885284,9.786896,3.356187,3.852728,8.521861,-0.635348,-7.679239,9.630847,-8.246384,3.876319,9.465779,3.840337,1.405687,5.331528,-1.573239,-1.189232,-7.634682,-7.862143,-2.979511,1.833857,0.794617,-5.296827,-3.309912,8.139853,-2.842460,-8.632459,4.733781,5.336098,5.952223,8.248477,-1.860779,6.491914,-1.439568,-9.943018,9.102658,-4.654464,0.582842,-2.424061,-8.279635,9.475392,-3.264172,-1.905853,7.177559,-6.706975,0.504928,0.636192,4.947536,-9.465286,-2.589304,3.870505,9.740223,-1.290205,-3.345194,-0.439947,5.449420,6.273530,6.121905,6.703112,9.421959,-8.749002,2.453391,8.141469,-9.005796,-2.802491,-7.563742,-9.540641,-8.156243,6.091676], dtype = "float64")#candidate|3017|(168,)|const|float64
call_3015 = relay.TupleGetItem(func_242_call(relay.reshape(const_3016.astype('float64'), []), relay.reshape(const_3017.astype('float64'), [4, 7, 6]), relay.reshape(const_3017.astype('float32'), [4, 7, 6]), ), 0)
call_3018 = relay.TupleGetItem(func_246_call(relay.reshape(const_3016.astype('float64'), []), relay.reshape(const_3017.astype('float64'), [4, 7, 6]), relay.reshape(const_3017.astype('float32'), [4, 7, 6]), ), 0)
output = relay.Tuple([bop_3009,uop_3012,call_3015,const_3016,const_3017,])
output2 = relay.Tuple([bop_3009,uop_3012,call_3018,const_3016,const_3017,])
func_3032 = relay.Function([var_3007,var_3008,], output)
mod['func_3032'] = func_3032
mod = relay.transform.InferType()(mod)
var_3033 = relay.var("var_3033", dtype = "float32", shape = (10, 1, 8))#candidate|3033|(10, 1, 8)|var|float32
var_3034 = relay.var("var_3034", dtype = "float32", shape = (10, 3, 8))#candidate|3034|(10, 3, 8)|var|float32
output = func_3032(var_3033,var_3034,)
func_3035 = relay.Function([var_3033,var_3034,], output)
mutated_mod['func_3035'] = func_3035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2006_call = mod.get_global_var('func_2006')
func_2008_call = mutated_mod.get_global_var('func_2008')
call_3037 = relay.TupleGetItem(func_2006_call(), 1)
call_3038 = relay.TupleGetItem(func_2008_call(), 1)
output = relay.Tuple([call_3037,])
output2 = relay.Tuple([call_3038,])
func_3039 = relay.Function([], output)
mod['func_3039'] = func_3039
mod = relay.transform.InferType()(mod)
output = func_3039()
func_3040 = relay.Function([], output)
mutated_mod['func_3040'] = func_3040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1238_call = mod.get_global_var('func_1238')
func_1239_call = mutated_mod.get_global_var('func_1239')
call_3054 = relay.TupleGetItem(func_1238_call(), 0)
call_3055 = relay.TupleGetItem(func_1239_call(), 0)
var_3085 = relay.var("var_3085", dtype = "int8", shape = (5, 9, 3))#candidate|3085|(5, 9, 3)|var|int8
bop_3086 = relay.less(call_3054.astype('bool'), relay.reshape(var_3085.astype('bool'), relay.shape_of(call_3054))) # shape=(5, 9, 3)
bop_3089 = relay.less(call_3055.astype('bool'), relay.reshape(var_3085.astype('bool'), relay.shape_of(call_3055))) # shape=(5, 9, 3)
func_3039_call = mod.get_global_var('func_3039')
func_3040_call = mutated_mod.get_global_var('func_3040')
call_3094 = relay.TupleGetItem(func_3039_call(), 0)
call_3095 = relay.TupleGetItem(func_3040_call(), 0)
uop_3098 = relay.asinh(bop_3086.astype('float64')) # shape=(5, 9, 3)
uop_3100 = relay.asinh(bop_3089.astype('float64')) # shape=(5, 9, 3)
var_3101 = relay.var("var_3101", dtype = "float64", shape = (5, 9, 3))#candidate|3101|(5, 9, 3)|var|float64
bop_3102 = relay.add(uop_3098.astype('int8'), relay.reshape(var_3101.astype('int8'), relay.shape_of(uop_3098))) # shape=(5, 9, 3)
bop_3105 = relay.add(uop_3100.astype('int8'), relay.reshape(var_3101.astype('int8'), relay.shape_of(uop_3100))) # shape=(5, 9, 3)
output = relay.Tuple([call_3094,bop_3102,])
output2 = relay.Tuple([call_3095,bop_3105,])
func_3113 = relay.Function([var_3085,var_3101,], output)
mod['func_3113'] = func_3113
mod = relay.transform.InferType()(mod)
var_3114 = relay.var("var_3114", dtype = "int8", shape = (5, 9, 3))#candidate|3114|(5, 9, 3)|var|int8
var_3115 = relay.var("var_3115", dtype = "float64", shape = (5, 9, 3))#candidate|3115|(5, 9, 3)|var|float64
output = func_3113(var_3114,var_3115,)
func_3116 = relay.Function([var_3114,var_3115,], output)
mutated_mod['func_3116'] = func_3116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1346_call = mod.get_global_var('func_1346')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_3128 = relay.TupleGetItem(func_1346_call(), 0)
call_3129 = relay.TupleGetItem(func_1347_call(), 0)
func_2493_call = mod.get_global_var('func_2493')
func_2495_call = mutated_mod.get_global_var('func_2495')
var_3140 = relay.var("var_3140", dtype = "float64", shape = (156, 1))#candidate|3140|(156, 1)|var|float64
call_3139 = relay.TupleGetItem(func_2493_call(relay.reshape(var_3140.astype('float64'), [39, 4])), 1)
call_3141 = relay.TupleGetItem(func_2495_call(relay.reshape(var_3140.astype('float64'), [39, 4])), 1)
uop_3146 = relay.sinh(var_3140.astype('float64')) # shape=(156, 1)
func_1103_call = mod.get_global_var('func_1103')
func_1105_call = mutated_mod.get_global_var('func_1105')
call_3148 = func_1103_call()
call_3149 = func_1103_call()
output = relay.Tuple([call_3128,call_3139,uop_3146,call_3148,])
output2 = relay.Tuple([call_3129,call_3141,uop_3146,call_3149,])
func_3155 = relay.Function([var_3140,], output)
mod['func_3155'] = func_3155
mod = relay.transform.InferType()(mod)
mutated_mod['func_3155'] = func_3155
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3156 = relay.var("var_3156", dtype = "float64", shape = (156, 1))#candidate|3156|(156, 1)|var|float64
func_3155_call = mutated_mod.get_global_var('func_3155')
call_3157 = func_3155_call(var_3156)
output = call_3157
func_3158 = relay.Function([var_3156], output)
mutated_mod['func_3158'] = func_3158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2874_call = mod.get_global_var('func_2874')
func_2876_call = mutated_mod.get_global_var('func_2876')
call_3293 = func_2874_call()
call_3294 = func_2874_call()
output = call_3293
output2 = call_3294
func_3301 = relay.Function([], output)
mod['func_3301'] = func_3301
mod = relay.transform.InferType()(mod)
mutated_mod['func_3301'] = func_3301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3301_call = mutated_mod.get_global_var('func_3301')
call_3302 = func_3301_call()
output = call_3302
func_3303 = relay.Function([], output)
mutated_mod['func_3303'] = func_3303
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3420 = relay.var("var_3420", dtype = "uint32", shape = (11, 5, 3))#candidate|3420|(11, 5, 3)|var|uint32
const_3421 = relay.const([[[-1,6,-1],[-3,-9,-7],[-9,-4,6],[6,-2,4],[-2,-9,-8]],[[-9,-9,-10],[-6,-1,5],[7,-1,-1],[-2,-2,4],[8,4,1]],[[2,-2,4],[3,-5,4],[2,-6,-6],[-7,-3,-1],[-7,-3,8]],[[5,-3,-9],[9,1,-6],[-5,-8,-1],[-5,-3,1],[5,4,-1]],[[1,10,-2],[-5,3,-6],[10,-9,-10],[3,3,6],[-1,-4,-9]],[[7,10,6],[-10,-5,-6],[4,-10,-2],[-5,8,2],[-2,4,-8]],[[-10,5,-6],[-3,1,-9],[-7,-10,-8],[-9,-9,3],[-2,-4,2]],[[1,1,-1],[4,-3,-2],[-3,7,-7],[-8,-10,-5],[10,-1,-6]],[[-10,-2,-1],[-8,-6,4],[-5,-6,10],[7,-10,-9],[-3,6,5]],[[4,9,8],[8,-6,9],[10,-7,-4],[10,7,10],[8,-2,7]],[[6,-5,-9],[6,-9,4],[2,-1,2],[6,-9,-3],[6,6,6]]], dtype = "uint32")#candidate|3421|(11, 5, 3)|const|uint32
bop_3422 = relay.add(var_3420.astype('uint32'), relay.reshape(const_3421.astype('uint32'), relay.shape_of(var_3420))) # shape=(11, 5, 3)
uop_3427 = relay.asin(const_3421.astype('float64')) # shape=(11, 5, 3)
output = relay.Tuple([bop_3422,uop_3427,])
output2 = relay.Tuple([bop_3422,uop_3427,])
func_3429 = relay.Function([var_3420,], output)
mod['func_3429'] = func_3429
mod = relay.transform.InferType()(mod)
mutated_mod['func_3429'] = func_3429
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3430 = relay.var("var_3430", dtype = "uint32", shape = (11, 5, 3))#candidate|3430|(11, 5, 3)|var|uint32
func_3429_call = mutated_mod.get_global_var('func_3429')
call_3431 = func_3429_call(var_3430)
output = call_3431
func_3432 = relay.Function([var_3430], output)
mutated_mod['func_3432'] = func_3432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2874_call = mod.get_global_var('func_2874')
func_2876_call = mutated_mod.get_global_var('func_2876')
call_3437 = func_2874_call()
call_3438 = func_2874_call()
func_622_call = mod.get_global_var('func_622')
func_625_call = mutated_mod.get_global_var('func_625')
const_3455 = relay.const([[1.146432,3.898082,-0.539152,-3.651596,-8.398123,0.511126,5.004349,0.923299,-7.394380,5.168656,-5.686952,-0.732476,5.807002,6.806045,3.710319,8.772558,4.932442,-0.315180,-0.461278,1.615908,4.437639,-5.748682,-6.295979,7.030949,-2.160678,-7.167355,-4.662278,-3.779753,6.974883,2.409915,-2.537126,6.965726,2.257860,-7.168546,3.389323,-6.781972,-6.005041,1.983020,-7.558811,4.519660,9.119211,4.692691,-2.234408,-4.255938,-4.182473,-2.249940,-3.310903,-9.710666,9.135576,9.197839,-4.654427,4.240035],[-7.558341,7.531422,-9.394528,6.789181,9.775432,8.258382,2.684159,4.741657,-9.583793,-0.973411,2.049550,-2.069486,6.220348,3.415695,-9.658000,-3.696060,1.523473,7.309414,-1.450277,-0.648566,-8.131348,7.222990,7.611776,4.379704,-1.684963,-8.592943,-6.053645,2.284240,-9.416554,5.681162,1.197495,7.345013,4.197644,-8.719702,2.408379,3.414533,2.106008,5.868725,3.507107,-0.192695,9.691452,-3.825348,8.423982,1.987515,-4.239814,-6.282247,1.440554,3.334794,7.664121,-5.386543,-9.245079,-6.314222],[9.325441,-8.943499,-4.207931,-6.944313,0.502789,6.190731,-9.481039,-6.925095,2.063982,7.489696,-8.315018,6.362241,-4.539604,-4.317848,-3.958090,-7.126384,8.801645,-1.888236,8.606523,8.531887,1.240074,-6.525484,3.881736,1.374905,5.417096,7.701262,8.554129,3.253105,5.726251,-2.225073,-6.387919,7.513625,8.831450,5.597989,-8.364452,9.734069,5.649283,-2.774472,-5.727431,6.051319,-9.991237,5.758000,-5.290026,8.803148,-1.346554,1.499612,3.103226,-0.562743,-3.249298,8.327241,-9.420257,3.875288]], dtype = "float64")#candidate|3455|(3, 52)|const|float64
call_3454 = relay.TupleGetItem(func_622_call(relay.reshape(const_3455.astype('float64'), [3, 13, 4])), 1)
call_3456 = relay.TupleGetItem(func_625_call(relay.reshape(const_3455.astype('float64'), [3, 13, 4])), 1)
uop_3461 = relay.atanh(const_3455.astype('float64')) # shape=(3, 52)
func_2282_call = mod.get_global_var('func_2282')
func_2285_call = mutated_mod.get_global_var('func_2285')
const_3471 = relay.const([1.608762,4.663133,1.030169,3.056830,1.430525,6.258926,8.515268,-5.430828,2.736887,-4.801151,-5.445976,-4.744502,6.034729,4.066828,-8.137974,-3.397208,1.726331,-5.921496,8.455762,-2.297409,-7.359428,4.813828,-8.859946,5.659537,-2.803988,8.908450,-0.031610,-3.616336,-7.612130,-0.382655,-0.129671,-5.014839,-8.004762,-4.326122,9.310323,-0.985400,3.412761,1.904978,6.042384,1.240608,-7.129071,-6.714358,-3.454732,-0.341599,5.577745,-5.254572,9.693042,3.688418,7.393895,-8.148612,-5.746805,-3.110025,-5.040264,-0.748915,6.920021,-6.979482,-8.098433,-6.423170,3.641234,-8.759823,3.641021,-4.496445,3.334162,4.369741,-8.854975,6.996804,-1.795787,-0.610278,2.360379,4.732794,-3.522920,-2.469642,-8.874605,-5.182141,0.621537,-7.787627,0.090428,-7.152545,-7.362080,0.880053,6.551172,-5.011959,-5.659472,-1.542171,8.348960,-2.737870,8.264539,-6.123613,0.142671,3.900924,0.208518,-5.690111,1.128421,-1.571978,-0.849553,-9.024148,-8.431948,7.612123,3.443931,3.916316,1.866319,-9.197305,-4.891404,3.936972,6.769589,0.070385,-8.747337,8.490636,-1.048828,-2.106151,1.531891,-6.904640,7.713200,9.473080,0.610985,9.367708,-4.981898,-4.662298,-4.561900,0.428812,-9.462687,9.823751,-7.247305,-1.582697,-6.661776,6.550590,2.545951,4.309563,1.942199,5.551676,4.960251,-5.176328,8.558082,2.187621,-4.535635,8.072975,8.410665,5.042222,-7.669313,-6.314662,-1.601530,-4.468923,7.910686,-1.019752,-1.035337,2.228403,-6.644522,-5.606757,-9.769583,-4.294327,-4.242165,-5.074437,-3.080247,5.196336,3.921608,0.642587,1.579108,-4.712630,9.700133,5.870586,-3.083635,-6.814936,-4.650887,-3.254363,-4.662618,8.172269,0.456873,-0.931418,-6.589132,-0.910196,5.832538,0.001582,7.221421,4.690583,3.994617,2.522192,4.962521,-4.799280,-6.170940,7.283538,3.312867,3.134019,-9.207627,-8.864433,3.134751,-2.007365,-6.320849,5.347595,5.810305,5.862922,7.811964,3.705518,-3.755008,5.325521,-5.576964,6.008358,2.459398,-2.588592,-7.968609,-1.208878,1.402205,-6.180022,5.220689,-2.141305,-6.460065,0.577511,-3.577999,-8.809738,-1.708921,5.763860,-4.025830,2.969596,3.130513,2.879633,-7.530832,0.573592,8.043551,-0.203393,8.780906,1.217503,-1.850267,6.968396,9.281519,9.560685,9.360542,5.441676,6.139578,-8.758983,-6.384305,-2.620240,9.193773,4.226546,8.480801,5.891853,-2.135824,-2.783033,5.656651,2.108293,0.771111,0.816874,1.531189,3.159140,2.185727,5.472756,8.168201,-3.905680,1.805047,5.050887,8.841236,5.784161,-6.033645,-7.306064,9.408957,-5.064783,-5.126395,-2.651732,-3.739391,-0.612157,4.336329,-9.143988,6.841665,4.484401,-5.800893,3.731322,-5.395536,4.975823,-8.806708,-0.658517,2.307418,2.691066,-2.439747,1.228406,5.001216,-5.973829,4.647349,4.359198,-5.337529,1.859113,-6.699410,-0.271460,3.773838,6.917299,-4.973516,7.278186,-2.972285,3.855828,-7.811591,-9.139314,7.154861,-0.397351,7.800524,7.108019,7.050265,-6.389115,-6.619629,-9.715256,-8.266228,7.424212,0.943144,-9.080477,0.725674,3.196061,-8.818043,3.065412,-0.495448,-1.693675,-6.266376,6.903939,-2.391774,7.005937,5.146669,-5.589064,0.823764,-8.963795,-2.083811,-5.227960,-0.506510,-5.351221,1.244081,-7.673884,7.693716,7.568882,7.332439,5.466200,-3.394220,-1.417678,-1.742437,1.686169,-6.918637,7.636416,-5.492911,5.709681,8.962084,3.231176,5.194942,-9.813232,-8.164629,-7.372266,0.808876,8.822894,-3.715118,7.644790,-7.094447,-2.881063,-4.938333,-8.681831,-1.841880,1.797709,0.894614,-4.109853,5.053023,9.300861,6.884837,3.649782,-6.785698,-4.974081,-0.717617,3.764275,1.724974,3.195202,7.969883,-2.972325,7.431539,3.683862,3.822904,-4.688817,7.291189,-9.648826,6.735228,3.902202,9.186574,9.165134,8.616612,-5.679996,-5.542884,-3.139710,0.606134,4.634967,-7.991065,9.162247,1.456523,-4.080490,-0.558541,2.944553,-6.399136,1.747422,-6.724475,1.035386,0.362089,-2.850191,-6.507960,-0.841419,-2.969177,-7.184306,-8.363575,-1.697914,7.029096,-0.852312,3.122400,-0.698043,-9.385890,5.657586,-5.038765,-6.123984,1.552357,4.936403,5.778516,0.672859,-5.109725,5.379825,-8.657689,-1.228569,-4.574709,6.070591,-5.906836,-9.151088,0.692081,7.197283,-9.851555,2.963086,7.102771,9.319700,-8.077789,-6.766208,3.702211,-9.929690,4.551036,6.980236,9.816197,1.470307,-6.074056,7.467004,-7.949756,0.076932,-3.796609,-6.918796,-9.401522,6.463003,-4.131879,6.206187,3.190965,2.958783,-6.101423,-8.499669,4.594650,3.215547,9.727538,8.808313,1.220664,2.146516,-7.362956,6.059171,9.789659,9.572264,-7.335928,4.456429,-1.659609,-1.246654,-9.105624,4.937257,9.686806,3.763483,9.618567,-3.561737,-1.211228,-2.788003,8.286658,0.704901,-1.452312,-3.551103,3.371495,-7.187602,6.803838,-1.611332,-7.436559,4.064417,-0.560855,-6.803857,-5.539479,-9.416022,-7.959189,3.259550,9.899542,8.010617,0.278594,-4.936978,0.187598,2.169351,-8.737849,-7.751507,5.083854,-7.230753,5.990675,1.019522,2.346944,-2.726492,-4.307831,9.518829,-2.025566,-8.662046,-3.646455,-2.924623,2.058201,-3.752412,1.388035,-4.941068,5.958683,-2.902024,-6.299360,-7.733098,9.387344,1.872466,-4.163240,5.196957,6.716315,-7.372647,6.188310,-7.608215,-1.896564,-5.383520,8.074999,-4.952478,6.339436,7.344344,-4.699826,9.793203,-3.884942,-1.749151,0.054633,7.791711,2.733116,-4.641539,-2.370754,2.686190,-4.381341,-4.965882,4.958608,-0.626030,2.302355,-7.624355,3.159655,-9.596268,-3.125516,-6.545887,-7.714274,2.482260,1.950568,-8.322613,-1.353818,6.736587,2.843965,-2.526566,-9.027451,3.692187,0.834710,-1.492198,0.322117,-8.580921,5.861130,4.632667,8.145377,6.395876,8.181171,-2.608471,1.383230,-8.700180,-0.251261,7.068531,4.635475,-5.714589,-2.261641,9.162085,0.408918,-7.133183,-4.387891,5.401056,-3.425714,-7.757246,-0.644317,0.823807,-5.359395,7.594406,-1.907122,-0.787585,4.338142,-2.006733,4.431542,-1.910406,-6.319595,8.208225,-4.559634,-5.286171,9.553183,-6.882005,1.885144,0.838835,5.173898,-0.811827,-3.166862,0.490100,-4.493976,3.023786,9.012862,-2.333004,-0.893548,-2.881905,-5.596964,6.833556,-2.053312,-9.215643,6.480596,1.144528,-4.873080,4.245644,-7.511029,-2.563371,-2.224490,-3.318655,8.707027,1.520001,-6.156452,3.371001,-6.599751,-0.735469,-3.327146,4.846699,3.980791,0.661655,-2.852222,-5.240041,9.907408,8.508381,-1.917287,-9.610283,0.640470,-4.154641,8.949778,-5.394332,-4.996196,-3.948572,0.370262,0.460110,3.028043,-3.178288,3.287947,-3.441215,-3.973470,-6.320933,-8.272512,-3.183400,0.095228,4.729681,-3.832258,-1.742365,8.856495,-8.657586,-3.152395,5.619210,-1.189427,-9.263625,-8.624840,-3.354910,-3.647977,8.581605,3.695271,-2.519660,-0.917116,-4.227904,-6.028712,-9.279599,6.560643,-9.801259,-5.819695,6.944239,-1.195165,-0.149501,2.006959,9.796741,7.720263,-8.128880,-5.187101,8.509500,-1.961768,-7.255923,5.070971,-1.878115,6.860576,-1.233459,-1.943145,-2.336412,4.895674,1.737655,4.526192,6.704236,-4.784647,-0.297359,-6.252473,2.104271,7.524499,0.598280,-2.287381,2.751804,9.597934,0.563259,-4.525901,-0.952941,-9.367951,-0.834717,-8.889613,9.044263,1.022424,2.036342,3.777693,-2.961024,-8.473197,0.011237,-3.613591,-0.178665,0.670066,3.499422,1.834598,3.325725,-8.063922,-9.565432,5.692584,0.618194,0.150716,6.547054,0.251907,9.373821,0.910663,1.213532,1.855125,5.158921,2.181644,-0.936193,-0.559173,8.375010,5.032852,1.499304,5.320181,4.760430,-3.080807,0.983288,1.138259,4.131603,-0.166137,-1.256261,9.644049,-3.085401,-4.372473,9.698588,-1.467477,7.214521,-0.816878,3.058952,4.323672,-1.504125,3.481768,-5.926949,-8.628533,4.153962,-3.460181,6.922370,-3.806488,-9.470114,-7.925226,0.424347,-3.489916,6.676409,-6.616005,-4.567593,3.682700,2.575914,6.208204,5.677975,6.728725,-6.251742,-7.468120,5.746797,6.975242,-4.978865,-0.420446,-2.152456,-3.827790,7.522065,-1.233540,1.706881,1.959105,-1.185967,-0.834129,-4.411123,9.225724,4.013088,-9.158277,-8.422373,-1.275243,-3.292384,-8.249916,-1.240824,-5.494641,6.554748,3.635652,-0.130187,4.015380,2.496258,7.428268,-4.425641,-7.905191,-1.490878,-3.488758,-2.476983,3.904179,4.981375,-8.609597,9.953092,-8.952066,8.136157,3.261505,-0.700499,8.427316,-3.816494,6.797702,1.476928,-0.258805,9.752341,-7.328174,2.346779,-6.661957,5.681770,-6.897779,6.500948,-6.643864,0.930682,-5.894734,-6.643799,9.461661,-9.248451,7.531078,0.338647,-3.974124,4.138834,-0.673071,-6.297698,9.002775,4.663964,-9.424277,-6.755466,-1.980397,-0.912301,7.394835,-6.650483,4.687829,-7.852403,-4.553383,-2.688131,-4.201714,1.830603,3.529979,5.843705,1.286961,-6.110586,0.976456,-0.157811,-6.143622,-4.674609,-2.818270,3.086675,-1.134100,-6.914065,7.434680,0.500426,-0.906321,-4.499311,-0.019440,5.357539,1.770059,-3.170323,-6.313629,-6.259261,0.315842,7.358753,7.330548,-5.209140,-9.435252,-3.815199,7.538726,7.817350,-0.350892,3.283461,6.884077,-1.014296,6.966154,1.845695,-8.798210,-9.793266,-6.830600,3.925137,-0.511062,1.619807,-0.998073,-4.124474,7.806480,-6.135209,-9.951892,8.012769,-4.917291,-7.718113,-8.015458,9.066102], dtype = "float64")#candidate|3471|(910,)|const|float64
call_3470 = relay.TupleGetItem(func_2282_call(relay.reshape(const_3471.astype('float64'), [10, 7, 13])), 1)
call_3472 = relay.TupleGetItem(func_2285_call(relay.reshape(const_3471.astype('float64'), [10, 7, 13])), 1)
var_3481 = relay.var("var_3481", dtype = "float64", shape = (3, 52))#candidate|3481|(3, 52)|var|float64
bop_3482 = relay.bitwise_xor(uop_3461.astype('int8'), relay.reshape(var_3481.astype('int8'), relay.shape_of(uop_3461))) # shape=(3, 52)
output = relay.Tuple([call_3437,call_3454,call_3470,const_3471,bop_3482,])
output2 = relay.Tuple([call_3438,call_3456,call_3472,const_3471,bop_3482,])
func_3492 = relay.Function([var_3481,], output)
mod['func_3492'] = func_3492
mod = relay.transform.InferType()(mod)
var_3493 = relay.var("var_3493", dtype = "float64", shape = (3, 52))#candidate|3493|(3, 52)|var|float64
output = func_3492(var_3493)
func_3494 = relay.Function([var_3493], output)
mutated_mod['func_3494'] = func_3494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1557_call = mod.get_global_var('func_1557')
func_1559_call = mutated_mod.get_global_var('func_1559')
call_3576 = relay.TupleGetItem(func_1557_call(), 0)
call_3577 = relay.TupleGetItem(func_1559_call(), 0)
output = call_3576
output2 = call_3577
func_3591 = relay.Function([], output)
mod['func_3591'] = func_3591
mod = relay.transform.InferType()(mod)
mutated_mod['func_3591'] = func_3591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3591_call = mutated_mod.get_global_var('func_3591')
call_3592 = func_3591_call()
output = call_3592
func_3593 = relay.Function([], output)
mutated_mod['func_3593'] = func_3593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3039_call = mod.get_global_var('func_3039')
func_3040_call = mutated_mod.get_global_var('func_3040')
call_3612 = relay.TupleGetItem(func_3039_call(), 0)
call_3613 = relay.TupleGetItem(func_3040_call(), 0)
output = relay.Tuple([call_3612,])
output2 = relay.Tuple([call_3613,])
func_3617 = relay.Function([], output)
mod['func_3617'] = func_3617
mod = relay.transform.InferType()(mod)
mutated_mod['func_3617'] = func_3617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3617_call = mutated_mod.get_global_var('func_3617')
call_3618 = func_3617_call()
output = call_3618
func_3619 = relay.Function([], output)
mutated_mod['func_3619'] = func_3619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1969_call = mod.get_global_var('func_1969')
func_1971_call = mutated_mod.get_global_var('func_1971')
call_3725 = relay.TupleGetItem(func_1969_call(), 0)
call_3726 = relay.TupleGetItem(func_1971_call(), 0)
output = relay.Tuple([call_3725,])
output2 = relay.Tuple([call_3726,])
func_3728 = relay.Function([], output)
mod['func_3728'] = func_3728
mod = relay.transform.InferType()(mod)
mutated_mod['func_3728'] = func_3728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3728_call = mutated_mod.get_global_var('func_3728')
call_3729 = func_3728_call()
output = call_3729
func_3730 = relay.Function([], output)
mutated_mod['func_3730'] = func_3730
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3741 = relay.const([[[7,7,-6,-5,-8,8,2,-4,4,4,-5,8,-10,4],[6,-7,6,3,1,-6,-6,7,-2,-6,8,8,4,9],[-10,-5,6,9,7,2,9,-5,10,-2,4,-1,-7,-8],[-9,-4,-1,-5,-2,7,-8,7,6,-4,-5,3,6,4],[4,-4,-8,-4,-7,3,5,9,8,-1,-8,-5,3,4],[3,-3,-9,-10,7,-3,-2,6,-8,-3,10,3,10,5],[-7,1,7,6,2,3,1,6,4,-3,6,1,9,-6],[-3,2,-9,1,-8,-4,-5,10,6,-1,5,-5,9,8],[9,9,-6,3,4,3,-10,-2,7,1,7,4,-8,-4]],[[-4,-7,8,-4,-4,10,-10,10,2,-3,4,-2,7,-5],[-4,2,-1,10,4,4,10,6,8,10,-7,-1,-8,-2],[-9,-10,5,-3,-2,6,9,-3,-3,-1,-6,3,3,-6],[6,-3,-4,10,-6,6,7,5,-3,5,9,8,-4,-1],[-6,-7,3,-1,-5,-8,5,-1,7,6,-4,5,6,9],[6,-8,-4,-9,5,8,1,10,-8,-8,-5,-5,5,2],[-5,3,10,-8,-4,-5,-6,-8,-7,-3,-9,1,5,-5],[-8,-4,-10,8,8,-6,10,-3,4,-3,10,-7,-9,7],[6,6,10,9,-9,-10,1,-1,-9,9,-6,4,10,-8]],[[-10,3,-6,-10,-9,4,3,4,2,-5,2,4,-8,-7],[-8,7,8,3,-9,10,-1,-5,-10,8,-6,5,-9,-7],[5,-5,-9,-2,10,-2,-10,8,-9,-6,4,3,9,10],[-6,4,1,6,-10,6,8,1,-10,-1,-4,10,-3,9],[-2,9,-8,-9,10,10,6,4,-5,3,-5,-6,3,6],[10,7,6,8,-9,-6,4,1,-3,-5,-9,8,5,1],[-10,4,-4,-2,7,6,-8,-4,-8,4,9,2,10,-2],[-3,-2,1,5,-1,6,8,3,-4,-8,-6,-4,2,3],[-5,6,9,3,8,-5,-6,6,-5,-9,7,-1,-2,8]],[[-2,-5,-7,7,2,5,-9,-6,1,10,-10,5,8,2],[1,-5,2,-2,-2,-4,10,-4,-8,-5,-2,-5,3,4],[3,1,-8,9,-8,-9,-9,-5,-2,7,9,9,6,-6],[3,10,7,-2,-10,7,1,8,-8,-8,-4,-10,-8,4],[2,-2,-1,-1,-6,5,1,5,7,1,-8,6,5,-3],[-5,-4,9,2,-8,10,5,9,-7,-7,8,10,8,-6],[-3,3,-7,5,-2,-8,1,4,5,-1,8,9,-7,-1],[-6,-7,9,-7,8,4,10,-10,-2,-6,-8,1,8,-3],[8,1,3,1,9,-8,-9,-6,-4,9,-1,-5,5,-6]],[[-6,7,2,-6,-5,9,-6,-10,9,3,2,-3,10,-3],[-4,5,5,3,-7,4,-7,-5,-2,-7,10,-6,3,-7],[-7,-7,9,-10,3,4,4,3,3,-4,4,-7,1,-9],[5,9,-6,3,-8,10,6,-3,-3,2,6,-2,9,-7],[5,7,1,1,2,-1,-9,-2,-6,-5,-3,7,-5,10],[-10,-6,-2,-2,9,-8,-9,1,-1,-3,10,-8,-7,10],[7,7,8,10,-6,-1,-10,-6,-10,-5,2,10,5,2],[-4,-7,-6,-8,-10,4,-3,-3,-6,1,7,-8,1,-10],[-7,-10,9,-2,4,9,8,-1,8,5,-2,1,2,10]],[[-9,-2,3,7,-1,-6,1,-10,9,-4,-5,3,5,9],[-3,-1,-7,9,6,3,9,4,-5,10,6,-10,-3,8],[-7,7,6,-4,-2,-5,1,6,7,9,-4,5,3,1],[-8,-5,-8,5,-2,-8,-2,-3,-1,4,-8,-4,-3,4],[-4,-3,-8,7,3,-1,-9,-9,10,-7,-2,-2,5,7],[-5,-6,-8,1,-7,1,10,-5,8,1,10,10,-8,-6],[-8,-1,-4,2,-5,-5,1,4,-7,-10,7,-5,-9,10],[-7,2,-9,-10,1,-4,-5,1,-4,-7,6,-6,-9,1],[-5,-7,7,-2,2,9,2,-2,-2,-2,9,-9,-5,1]],[[5,-5,-1,7,-2,4,10,9,-5,-8,-5,-5,-8,-1],[-9,-8,-2,-7,5,-3,-4,3,8,-6,5,2,-2,4],[9,-4,10,5,5,7,7,-9,6,-4,7,9,-4,2],[10,-6,3,-7,2,-5,5,8,-1,-4,-10,3,-8,9],[-5,-8,5,4,-3,-1,5,1,7,4,6,-6,6,-2],[-4,-8,2,-4,9,-6,-10,-7,-2,-5,-8,8,-6,-10],[6,9,-3,-10,3,1,-1,6,4,8,-4,5,-3,5],[1,-4,-7,8,-1,6,-2,8,6,7,-9,-7,8,-6],[9,2,9,7,-8,10,1,5,-5,-9,9,2,-10,3]],[[-3,1,-2,-9,9,-9,-1,8,4,-7,6,-1,-3,3],[4,-3,4,-8,-9,9,5,6,-4,-7,-10,9,-10,1],[3,-9,9,-3,-8,-3,-8,-8,8,-8,-10,3,9,6],[-10,5,2,-10,5,-5,-2,3,-1,-4,7,-3,7,7],[-8,7,1,-3,5,-3,7,-3,-8,-1,-7,8,-9,1],[7,-3,-4,-4,4,7,1,10,-1,6,-1,-8,4,-2],[-9,8,-2,2,3,10,-5,7,-8,3,9,-9,-8,9],[-5,4,6,1,-3,4,8,3,3,-9,-6,10,-4,8],[-8,-4,9,-8,-10,-5,-1,-8,4,-4,1,8,6,3]],[[-9,-1,-9,1,-3,-3,7,5,-6,8,-6,7,-4,5],[2,-1,10,-9,9,6,-8,-4,-6,2,-3,2,-1,-7],[1,-8,-3,-8,-2,-3,-5,-4,8,8,8,6,8,-1],[4,-5,-1,1,-3,6,-4,-8,-7,-1,-2,-9,-9,-4],[-2,8,-4,-2,-6,-8,10,4,-4,-2,-7,-8,-4,-1],[-1,-9,-3,-8,10,1,-10,4,-6,3,-5,3,-10,2],[7,4,-10,2,8,10,9,-3,-2,-9,9,10,-7,-5],[3,10,1,-1,-6,4,-2,-3,8,8,-7,10,-8,-8],[-3,-3,-10,-10,8,-2,2,-2,10,3,-3,8,9,6]],[[8,6,6,-10,4,-7,-1,9,-5,-10,-8,3,-6,-1],[-2,-6,-10,-2,2,5,3,-10,-1,8,10,10,-10,1],[-7,3,-9,8,1,-6,-3,9,-4,-10,8,10,-5,7],[-5,-3,1,10,7,7,-1,1,7,1,10,6,-9,-9],[-7,4,-5,2,5,5,-1,1,9,-5,-5,8,8,-5],[-10,-5,-1,7,-6,-3,3,6,-2,6,-9,8,7,-9],[-9,4,-9,6,-6,7,4,-6,7,10,8,-1,-7,3],[4,-9,-6,-4,-1,-6,-3,-10,2,1,7,9,7,2],[-10,8,-7,-10,-1,2,3,1,-1,-3,9,2,-5,-1]],[[2,6,10,-9,2,-4,2,-9,1,10,-2,-5,-7,9],[8,4,-5,4,-6,-4,2,3,3,-10,-1,6,-5,4],[-8,4,3,5,-10,-7,2,5,1,-10,2,-9,-10,8],[-8,7,-7,1,1,-2,-5,-7,10,2,4,8,-2,10],[-5,-7,-5,10,-5,4,7,7,4,-10,8,8,4,7],[-2,-7,-7,10,9,4,1,2,-3,-9,-4,1,-10,3],[4,9,-9,1,-1,10,2,-7,-3,10,-9,2,7,7],[-2,-3,-2,-2,-1,7,-5,5,10,-10,-3,8,9,-7],[-3,6,-9,-4,3,2,-1,7,5,-5,4,-9,-6,-8]],[[6,1,-4,-7,-8,-1,-6,-9,3,5,8,6,-5,-10],[9,4,-5,-5,4,9,-4,6,-5,-9,1,-10,-3,-2],[9,-9,-9,-6,-10,1,-4,7,-3,7,8,-8,-7,-9],[-5,9,4,-2,1,-7,-8,4,-1,9,-7,-3,10,5],[2,-8,-6,8,-4,-1,10,-3,-6,-2,1,-10,6,3],[-5,-3,-2,-3,-9,6,-3,6,7,-6,10,2,9,-10],[-7,3,1,10,-1,2,4,-1,7,2,1,-8,6,-2],[6,-4,-5,5,-4,-9,-8,5,1,10,-7,3,-2,9],[-5,-5,-5,1,5,-5,-3,-6,-7,4,6,7,8,-1]],[[3,10,-3,8,-3,7,7,9,-10,2,5,-7,-3,6],[6,-2,9,8,9,9,5,4,-10,3,-7,9,-2,-4],[-3,-6,10,-10,2,-1,4,-6,8,2,-2,-9,-9,-2],[-5,7,7,-8,3,-5,8,9,6,2,3,1,8,-4],[-8,-9,1,4,-9,-6,-2,9,-7,-3,-4,-6,-10,10],[-8,-8,-1,1,3,1,-10,8,7,2,-8,8,4,6],[-10,-4,3,7,9,5,5,-7,2,-7,-3,-5,-5,-2],[7,-3,-6,-7,8,-2,-4,-10,2,4,-1,7,9,6],[4,-3,5,8,-2,10,-1,-7,-9,3,-4,-9,7,10]],[[7,10,-1,-2,8,6,7,1,8,2,-7,-3,2,-6],[8,-5,-10,-8,-9,-7,-2,-8,-3,-8,7,10,-5,-2],[5,-5,6,7,6,-8,6,3,-2,-9,-2,-6,7,2],[7,10,-4,4,-9,-5,-6,2,-10,-2,-8,7,-9,8],[9,1,-5,-7,-8,-8,-3,1,-8,5,-10,2,9,-9],[-2,-6,8,-6,-8,2,7,-2,5,-2,-6,2,-4,-5],[6,1,2,1,-5,-1,-4,-9,-2,-1,-4,-9,8,8],[10,4,7,7,5,7,7,-4,-2,-9,-4,1,-1,-10],[-6,2,-2,-3,4,-8,8,-8,5,3,5,-2,-2,8]],[[-5,-4,-9,-4,-3,-9,7,-3,-5,9,4,-9,-3,9],[4,-9,-10,-8,9,7,1,8,-5,2,-3,2,-2,-8],[2,8,-7,-2,10,-5,2,-3,-9,-2,2,-8,4,4],[-1,-10,-2,-6,5,-7,8,6,-3,4,9,-10,-9,-10],[6,-8,8,1,-6,2,-7,-8,10,-6,4,7,-3,8],[3,4,4,10,1,4,8,-1,-5,-1,-5,-10,-4,-6],[-5,-10,2,2,7,-8,3,8,-7,8,7,9,-4,-3],[-7,9,3,10,3,-9,-4,-9,-6,8,-5,7,4,6],[-4,-8,7,-3,-7,6,-7,-10,-10,7,7,3,-10,6]],[[4,-3,2,-9,1,9,-7,9,10,2,-10,9,-4,1],[-1,-9,-8,5,-6,-1,8,-8,-5,-6,4,-6,-9,-2],[-5,7,10,3,10,10,-4,-6,10,-7,9,-1,-5,9],[-2,-7,6,7,3,5,-9,9,7,8,-7,4,8,1],[4,9,3,-7,1,-4,-3,8,-6,-7,-2,10,-10,7],[10,3,-10,-2,-8,9,-2,-4,3,-8,8,-10,10,2],[-2,8,-9,-8,3,1,10,9,-4,-8,4,4,3,2],[3,5,-5,9,-4,-2,-8,8,-2,9,-9,-2,5,7],[-1,-3,-3,10,-3,-1,-8,6,7,-4,-9,6,2,-5]]], dtype = "uint32")#candidate|3741|(16, 9, 14)|const|uint32
var_3742 = relay.var("var_3742", dtype = "uint32", shape = (16, 9, 14))#candidate|3742|(16, 9, 14)|var|uint32
bop_3743 = relay.equal(const_3741.astype('bool'), relay.reshape(var_3742.astype('bool'), relay.shape_of(const_3741))) # shape=(16, 9, 14)
func_1288_call = mod.get_global_var('func_1288')
func_1293_call = mutated_mod.get_global_var('func_1293')
const_3750 = relay.const([7,-9,10,6,10,-4,6,4,6,3,-5,-10,8,6,-3,-7,3,-1,-6,9,-6,10,2,6,-7,7,6,7,-9,-5,5,1,7,-1,1,-10,2,3,-5,-5,-9,-4,-8,-8,-3,-9,4,6,-4,-8,-6,5,10,5,-4,8,1,-8,-3,7,-1,4,-6,9,-7,6,7,3,-7,5,-9,7,-4,-2,-5,-3,-5,4,-5,-3,1,-8,-1,8,-1,1,5,-1,-7,6,-4,-10,5,-2,8,5,-7,10,3,-5,-8,-4,8,-1,-10,9,-5,-3,-3,-1,2,-2,8,-4,7,-7,10,9,-9,-5,7,-3,2,-3,10,-8,9,-1,2,-9,-9,-8,-8,-8,-7,-5,8,-7,3,9,-3,8,-9,-10,-6,-1,-5,-3,6,-9,-6,-7,2,7,5,1,-3,1,-7,4,-2,-8,4,4,-7,-2,9,9,5,-9,2,-8,8,-8,4,8,-6,5,-10,-1,3,-9,-5,4,-4,10,-2,2,10,2,-1,10,-9,-9,-5,7,6,-10,6,-2,-8,8,-1,-7,2,6,2,-3,2,-1,4,7,-5,2,-3,-6,7,9,6,-10,5,-6,-2,7,2,-1,7,-10,-4,-6,7,8,-7,1,-2,4,6,6,8,2,-3,-8,-10,3,-1,1,-2,-1,5,-2,2,8,-3,-6,8,-1,-10,3,7,3,6,3,2,-7,-5,-8,3,7,-10,9,2,1,8,9,10,3,-6,6,-2,9,-9,6,-10,-10,-7,-10,-6,8,-5,-1,-1,-2,3,-6,-8,4,-9,1,-5,-2,7,-1,3,9,8,-4,6,-5,4,8,6,1,-4,7,-3,-2,-10,-3,10,-2,2,7,-2,1,-4,1,-10,-7,7,2,2,-8,6,-5,3,-7,3,-5,6,4,4,2,-10,-8,3,-6,-3,7,-8,-8,-2,-8,-8,-4,10,6,3,-7,9,1,5,-6,4,10,8,2,10,4,2,4,-6,-5,-10,-4,-8,-10,-2,1,-10,7,8,7,-9,8,1,-5,-4,-7,-3,-7,6,3,-4,6,-7,1,4,5,-10,-7,7,-7,-10,-9,-3,-3,-4,9,-1,3,7,3,-3,-5,1,4,-1,1,3,-6,6,7,6,-7,10,4,7,9,6,-3,-3,7,7,-7,9,9,3,-5,-4,5,-4,3,6,1,5,1,10,4,-7,10,-6,-1,-6,7,9,-8,-1,-6,5,1,3,8,1,3,-6,-1,-3,-1,-9,1,-10,-2,-1,8,-8,-6,2,-6,-9,-10,-1,5,-5,3,5,-3,6,-6,6,3,-6,6,-4,-10,1,-5,-2,8,-9,9,-8,10,10,1,1,-9,-4,4,7,-10,-5,3,-7,3,4,1,6,4,-9,-1,10,9,7,1,-1,-4,-5,-2,-10,10,8,-3,-5,2,3,-8,3,8,-3,4,1,-10,5,-9,-8,-8,-2,-3,-8,-5,-6,6,2,-9,-3,9,-1,10,-1,-10,10,7,8,1,5,-9,-8,-10,8,-5,2,-3,-5,10,4,6,9,7,3,5,3,7,-8,-4,-8,-7,5,5,5,-7,-5,-2,-6,2,-9,5,3,-5,-3,-9,-10,-1,-6,-4,-4,-9,-1,3,-2,-7,4,-4,6,-9,-8,7,-3,-2,9,-2,-6,1,-2,7,1,-6,5,-5,-9,7,-3,5,7,6,3,8,-9,-7,5,-6,7,3,-1,-3,3,8,-6,-3,-2,10,7,5,9,6,7,2,5,5,6,-6,8,4,-7,-9,-5,6,-1,9,-4,-5,8,-4,3,-9,-7,-7,-9,1,9,6,-2,-8,-3,2,2,10,-3,3,6,-6,-6,-10,-5,4,-10,9,-3,5,-6,7,4,-7,2,4,3,2,4,-6,-2,4,1,4,-4,3,-5,7,-8,8,-6,9,-2,-1,-3,-7,7,9,-7,-3,-1,9,7,-7,2,-4,-8,2,-5,8,9,-5,7,4,6,-4,-6,-4,1,-7,-9,-3,-7,8,-7,-10,-2,-3,-6,4,6,10,1,6,-7,4,7,2,-4,4,7,-10,-8,9,-1,7,-10,-9,10,4,-10,3,8,9,-6,-7,-8,1,9,-3,4,8,-6,-7,-4,-8,-9,-2,-8,1,6,6,-5,2,-6,2,5,-6,-7,-9,-3,-5,-8,1,6,10,10,-5,-3,-6,-2,-1,-8,-7,-9,6,-3,-6,6,9,-9,-5,4,-5,9,-8,-2,7,5,7,-10,7,3,-6,-3,4,-5,3,1,8,1,-2,-6,-5,4,-6,4,-10,1,8,3,5,1,7,10,-3,-3,4,-5,-2,-2,5,-6,-2,1,10,-2,-1,-5,-6,-6,-5,-7,2,-9,-2,5,-6,-2,-9,-2,8,1,8,10,10,4,-8,-6,2,-7,6,-2,4,-5,-9,-9,1,-6,8,3,-5,5,8,6,-7,-4,4,9,2,-10,-1,5,10,10,-1,-8,-2,2,6,-9,10,8,-3,-1,-3,3,-9,-5,-2,-5,-10,9,-9,1,8,8,7,-1,5,5,-2,-1,7,-8,-10,1,-7,3,3,1,8,-1,-7,5,-6,-9,9,7,-5,4,-9,7,-9,-4,-4,6,-6,7,3,5,-4,-6,-4,8,2,-5,9,9,-2,-10,9,8,-7,9,1,-7,-8,-8,10,4,-10,-2,-10,-4,-5,-7,-2,-10,-2,-7,2,-7,-9,-5,-3,-8,5,-1,-3,7,9,4,1,-8,-4,-7,9,7,3,6,8,-8,-5,9,-3,-8,2,-4,8,9,9,8,-2,-7,-6,10,8,-10,6,-3,-8,3,-2,5,1,2,10,1,5,-6,2,9,-3,-2,-10,9,-5,8,-9,5,-4,9,7,5,-7,-6,-6,-8,-6,9,-7,-2,1,8,-2,8,-2,-2,-9,4,8,7,-7,-5,7,-6,2,-5,-9,-3,-9,-7,-1,1,-3,-8,-7,9,9,-6,7,1,2,-4,-10,-10,-9,-10,-3,10,10,-1,10,2,3,8,-1,-3,6,4,6,4,2,-6,9,-4,-4,7,-4,-7,-8,-9,3,-2,1,4,-3,-5,-6,-9,-8,5,8,8,-2,1,10,-9,-3,-2,10,-2,-8,-7,9,-1,-10,9,-2,-2,-1,-6,-2,-4,7,-9,-3,9,9,8,-1,5,7,9,-2,-6,1,-4,7,10,-5,3,2,-1,-8,-9,8,-10,9,-8,10,3,-6,-8,6,-8,-7,-1,5,-7,1,-1,9,7,3,-8,7,-8,-10,-9,4,-7,10,-7,-10,-7,-2,1,4,-1,1,-1,1,-5,-6,7,-2,1,4,7,4,-6,-4,10,-5,4,8,-8,7,-10,-6,4,-1,9,3,-1,10,5,-6,-2,4,9,-3,1,-8,4,-5,-3,-3,4,-8,5,2,-4,5,-9,3,-10,-3,-6,-1,-7,9,7,-2,-10,-3,10,6,-4,-9,-9,1,9,-10,6,-7,2,-3,-8,9,7,4,9,-9,-1,8,-1,9,2,6,3,-3,9,-3,2,6,3,-5,10,-7], dtype = "int64")#candidate|3750|(1320,)|const|int64
var_3751 = relay.var("var_3751", dtype = "float32", shape = (594,))#candidate|3751|(594,)|var|float32
call_3749 = relay.TupleGetItem(func_1288_call(relay.reshape(const_3750.astype('int64'), [15, 8, 11]), relay.reshape(const_3750.astype('int64'), [15, 8, 11]), relay.reshape(var_3751.astype('float32'), [6, 99]), ), 5)
call_3752 = relay.TupleGetItem(func_1293_call(relay.reshape(const_3750.astype('int64'), [15, 8, 11]), relay.reshape(const_3750.astype('int64'), [15, 8, 11]), relay.reshape(var_3751.astype('float32'), [6, 99]), ), 5)
var_3759 = relay.var("var_3759", dtype = "uint8", shape = (135,))#candidate|3759|(135,)|var|uint8
bop_3760 = relay.add(call_3749.astype('uint64'), relay.reshape(var_3759.astype('uint64'), relay.shape_of(call_3749))) # shape=(135,)
bop_3763 = relay.add(call_3752.astype('uint64'), relay.reshape(var_3759.astype('uint64'), relay.shape_of(call_3752))) # shape=(135,)
output = relay.Tuple([bop_3743,const_3750,var_3751,bop_3760,])
output2 = relay.Tuple([bop_3743,const_3750,var_3751,bop_3763,])
func_3768 = relay.Function([var_3742,var_3751,var_3759,], output)
mod['func_3768'] = func_3768
mod = relay.transform.InferType()(mod)
mutated_mod['func_3768'] = func_3768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3768_call = mutated_mod.get_global_var('func_3768')
var_3770 = relay.var("var_3770", dtype = "uint32", shape = (16, 9, 14))#candidate|3770|(16, 9, 14)|var|uint32
var_3771 = relay.var("var_3771", dtype = "float32", shape = (594,))#candidate|3771|(594,)|var|float32
var_3772 = relay.var("var_3772", dtype = "uint8", shape = (135,))#candidate|3772|(135,)|var|uint8
call_3769 = func_3768_call(var_3770,var_3771,var_3772,)
output = call_3769
func_3773 = relay.Function([var_3770,var_3771,var_3772,], output)
mutated_mod['func_3773'] = func_3773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3617_call = mod.get_global_var('func_3617')
func_3619_call = mutated_mod.get_global_var('func_3619')
call_3775 = relay.TupleGetItem(func_3617_call(), 0)
call_3776 = relay.TupleGetItem(func_3619_call(), 0)
output = call_3775
output2 = call_3776
func_3783 = relay.Function([], output)
mod['func_3783'] = func_3783
mod = relay.transform.InferType()(mod)
mutated_mod['func_3783'] = func_3783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3783_call = mutated_mod.get_global_var('func_3783')
call_3784 = func_3783_call()
output = call_3784
func_3785 = relay.Function([], output)
mutated_mod['func_3785'] = func_3785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2599_call = mod.get_global_var('func_2599')
func_2600_call = mutated_mod.get_global_var('func_2600')
call_3790 = relay.TupleGetItem(func_2599_call(), 2)
call_3791 = relay.TupleGetItem(func_2600_call(), 2)
func_2449_call = mod.get_global_var('func_2449')
func_2451_call = mutated_mod.get_global_var('func_2451')
call_3795 = relay.TupleGetItem(func_2449_call(), 0)
call_3796 = relay.TupleGetItem(func_2451_call(), 0)
func_2006_call = mod.get_global_var('func_2006')
func_2008_call = mutated_mod.get_global_var('func_2008')
call_3817 = relay.TupleGetItem(func_2006_call(), 0)
call_3818 = relay.TupleGetItem(func_2008_call(), 0)
output = relay.Tuple([call_3790,call_3795,call_3817,])
output2 = relay.Tuple([call_3791,call_3796,call_3818,])
func_3821 = relay.Function([], output)
mod['func_3821'] = func_3821
mod = relay.transform.InferType()(mod)
mutated_mod['func_3821'] = func_3821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3821_call = mutated_mod.get_global_var('func_3821')
call_3822 = func_3821_call()
output = call_3822
func_3823 = relay.Function([], output)
mutated_mod['func_3823'] = func_3823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2811_call = mod.get_global_var('func_2811')
func_2812_call = mutated_mod.get_global_var('func_2812')
call_3840 = relay.TupleGetItem(func_2811_call(), 0)
call_3841 = relay.TupleGetItem(func_2812_call(), 0)
func_2793_call = mod.get_global_var('func_2793')
func_2795_call = mutated_mod.get_global_var('func_2795')
var_3858 = relay.var("var_3858", dtype = "bool", shape = ())#candidate|3858|()|var|bool
call_3857 = relay.TupleGetItem(func_2793_call(relay.reshape(var_3858.astype('bool'), [])), 0)
call_3859 = relay.TupleGetItem(func_2795_call(relay.reshape(var_3858.astype('bool'), [])), 0)
func_2675_call = mod.get_global_var('func_2675')
func_2679_call = mutated_mod.get_global_var('func_2679')
var_3861 = relay.var("var_3861", dtype = "float64", shape = (42, 4))#candidate|3861|(42, 4)|var|float64
call_3860 = relay.TupleGetItem(func_2675_call(relay.reshape(var_3858.astype('float64'), []), relay.reshape(var_3861.astype('float64'), [168,]), ), 3)
call_3862 = relay.TupleGetItem(func_2679_call(relay.reshape(var_3858.astype('float64'), []), relay.reshape(var_3861.astype('float64'), [168,]), ), 3)
output = relay.Tuple([call_3840,call_3857,var_3858,call_3860,var_3861,])
output2 = relay.Tuple([call_3841,call_3859,var_3858,call_3862,var_3861,])
func_3863 = relay.Function([var_3858,var_3861,], output)
mod['func_3863'] = func_3863
mod = relay.transform.InferType()(mod)
var_3864 = relay.var("var_3864", dtype = "bool", shape = ())#candidate|3864|()|var|bool
var_3865 = relay.var("var_3865", dtype = "float64", shape = (42, 4))#candidate|3865|(42, 4)|var|float64
output = func_3863(var_3864,var_3865,)
func_3866 = relay.Function([var_3864,var_3865,], output)
mutated_mod['func_3866'] = func_3866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1557_call = mod.get_global_var('func_1557')
func_1559_call = mutated_mod.get_global_var('func_1559')
call_3868 = relay.TupleGetItem(func_1557_call(), 0)
call_3869 = relay.TupleGetItem(func_1559_call(), 0)
output = call_3868
output2 = call_3869
func_3872 = relay.Function([], output)
mod['func_3872'] = func_3872
mod = relay.transform.InferType()(mod)
output = func_3872()
func_3873 = relay.Function([], output)
mutated_mod['func_3873'] = func_3873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3872_call = mod.get_global_var('func_3872')
func_3873_call = mutated_mod.get_global_var('func_3873')
call_3900 = func_3872_call()
call_3901 = func_3872_call()
func_3728_call = mod.get_global_var('func_3728')
func_3730_call = mutated_mod.get_global_var('func_3730')
call_3911 = relay.TupleGetItem(func_3728_call(), 0)
call_3912 = relay.TupleGetItem(func_3730_call(), 0)
output = relay.Tuple([call_3900,call_3911,])
output2 = relay.Tuple([call_3901,call_3912,])
func_3927 = relay.Function([], output)
mod['func_3927'] = func_3927
mod = relay.transform.InferType()(mod)
output = func_3927()
func_3928 = relay.Function([], output)
mutated_mod['func_3928'] = func_3928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2006_call = mod.get_global_var('func_2006')
func_2008_call = mutated_mod.get_global_var('func_2008')
call_3958 = relay.TupleGetItem(func_2006_call(), 0)
call_3959 = relay.TupleGetItem(func_2008_call(), 0)
func_1479_call = mod.get_global_var('func_1479')
func_1482_call = mutated_mod.get_global_var('func_1482')
call_3967 = relay.TupleGetItem(func_1479_call(relay.reshape(call_3958.astype('uint8'), [5, 9, 3])), 0)
call_3968 = relay.TupleGetItem(func_1482_call(relay.reshape(call_3958.astype('uint8'), [5, 9, 3])), 0)
func_2982_call = mod.get_global_var('func_2982')
func_2983_call = mutated_mod.get_global_var('func_2983')
call_3972 = relay.TupleGetItem(func_2982_call(), 0)
call_3973 = relay.TupleGetItem(func_2983_call(), 0)
func_3039_call = mod.get_global_var('func_3039')
func_3040_call = mutated_mod.get_global_var('func_3040')
call_4000 = relay.TupleGetItem(func_3039_call(), 0)
call_4001 = relay.TupleGetItem(func_3040_call(), 0)
func_3768_call = mod.get_global_var('func_3768')
func_3773_call = mutated_mod.get_global_var('func_3773')
const_4007 = relay.const([-4,-2,-7,5,2,-10,-10,-6,1,6,6,-1,6,7,10,9,-8,8,4,3,7,-5,-6,-5,6,8,5,-10,-5,-4,1,-8,-4,4,10,-6,-9,-3,-9,3,-2,-7,10,-10,6,-9,7,8,6,9,-9,2,-3,-2,-3,-10,-6,2,6,-1,7,-1,-9,-6,-3,10,10,-8,7,7,-7,-5,-6,8,-10,-6,1,1,-8,-7,-2,3,-1,6,4,-7,2,3,8,10,10,-5,3,3,3,-6,-6,-6,3,4,7,6,3,7,-1,-1,3,4,-2,-1,8,1,-6,1,-10,7,-8,7,2,-5,3,6,2,5,-10,2,-6,1,9,-3,7,-6,-3,-6,-1,10,7,-1,9,-4,4,4,-8,-2,-7,5,5,8,-6,-2,7,10,-9,2,9,-4,3,-3,-3,7,-1,3,-4,3,7,-7,-9,-8,-8,-6,-10,1,10,-4,10,4,-6,9,-10,-9,8,-3,3,-5,4,9,6,9,4,1,-7,-9,-2,2,-9,-8,7,5,-5,-10,-4,4,8,5,7,10,-9,-6,5,2,8,-2,3,2,10,8,-2,-3,4,-2,4,-4,1,3,-7,-2,6,8,1,-9,4,4,-8,4,-5,-4,10,-1,9,7,-10,8,2,7,-8,6,-4,7,7,5,-2,8,-8,-3,2,10,6,10,-6,3,3,-7,8,-10,-5,-7,-5,-9,4,9,-1,-2,9,-6,8,10,-7,-10,-10,1,5,-4,-5,-3,-4,-8,3,3,1,8,7,3,-4,-2,-1,-2,3,7,9,-8,4,10,-6,-9,2,-6,-5,4,2,-6,9,1,1,1,-8,5,-6,9,-9,9,-4,-10,-6,10,2,-10,3,-4,-9,-6,-7,1,7,-7,8,10,3,-3,-6,-6,1,9,7,-10,-10,5,9,-1,6,5,-6,-8,-4,-9,-5,7,2,10,9,8,-6,5,9,-2,-7,-10,1,-3,8,5,8,-9,-6,-10,9,-4,-10,-8,8,7,8,-6,5,6,-1,7,3,-10,5,5,7,-6,-8,-10,-8,-2,4,7,-7,-3,4,-10,5,5,9,1,9,4,4,4,3,-8,3,-6,-8,3,-10,6,-10,-5,-3,6,6,9,-6,-3,10,5,7,-6,-2,-7,-1,-8,-8,-1,-1,-10,6,8,4,-10,3,8,7,-6,-2,-3,-10,5,6,-8,10,4,9,8,1,8,3,5,9,-3,8,5,9,-7,-5,-1,-5,2,5,9,-8,-2,-2,-5,2,-5,3,8,1,6,2,-2,-2,-1,4,5,-9,-5,7,4,-7,10,9,4,5,6,9,4,-10,-10,-7,8,-5,-6,4,-2,7,3,-9,-5,-8,2,9,-1,-1,5,8,-3,-6,-7,-7,3,10,1,2,-6,9,8,-5,8,9,-3,9,-4,-5,7,-10,7,4,-1,-5,7,-6,3,3,7,-7,1,-8,-10,5,-6,-8,7,2,10,-7,-3,-3,6,10,-8,-6,4,3,9,-3,-3,10,5,-7,1,-4,-9,-1,-1,-10,9,-9,10,-6,9,3,-10,-1,-5,10,4,-8,-10,-10,1,1,6,2,-9,-4,-10,10,8,-5,-2,6,-10,1,-7,-1,2,10,-2,-3,-3,-9,2,10,-3,-4,1,-10,-6,1,3,2,3,-3,-4,-6,-1,-7,6,-6,4,3,10,8,-6,9,-10,3,1,-8,2,2,-1,-10,-6,-8,-4,6,4,-10,-3,-10,-8,-6,-10,-5,-10,-8,4,8,2,-10,6,-2,2,-3,-1,-7,7,-9,10,9,-9,-3,-5,-4,-6,5,2,6,-7,10,3,6,-3,-7,9,4,-5,4,7,-6,4,-7,-7,2,-2,-4,10,-3,5,7,-7,5,-8,-9,6,-8,-7,9,-5,-9,-3,-2,-3,7,4,-3,5,-3,6,5,-7,2,-7,-7,-2,-1,-9,10,-7,-9,1,2,-1,-6,-6,1,-6,-7,-6,5,-3,4,9,-4,-1,7,-7,7,-5,9,5,-7,2,2,-10,-5,5,-5,-3,1,1,7,9,10,-8,5,6,4,8,8,-7,1,4,6,-6,-1,-5,7,-4,-5,-3,-6,4,8,8,-10,-9,-6,-10,10,9,2,-4,7,-3,10,5,-6,-8,1,-10,-2,5,-2,2,8,7,-5,-9,7,-7,8,5,-2,-8,-2,5,7,-1,2,3,7,10,-1,6,-10,6,-6,-4,5,-1,-10,10,8,-6,-7,2,1,5,2,-1,-4,-2,8,-9,8,10,8,-5,1,7,-2,-9,-1,-6,-4,5,4,8,-3,-6,7,-9,6,-9,5,3,5,4,-6,8,7,-10,1,6,-5,5,8,4,9,-1,1,4,7,9,8,5,-1,10,-3,5,9,-7,-7,-3,8,1,-7,5,-4,-7,-2,-10,7,4,-6,-5,1,4,-7,-4,-8,-4,3,10,6,10,10,-2,1,7,6,-4,8,-5,-4,9,4,-8,-5,-4,6,8,5,-4,-5,-4,5,-8,-6,7,1,-2,1,2,8,4,2,-1,1,1,-8,-9,-5,-5,9,10,8,-5,-2,5,-4,6,-3,3,4,-2,-1,7,-9,8,6,9,10,5,2,-1,-8,-4,-4,5,-3,10,1,3,-2,9,6,4,-2,7,-6,4,-5,-5,7,7,-10,-7,6,10,-8,-8,6,10,8,4,6,-9,6,10,-5,-5,-5,5,-2,-1,-5,5,-10,1,-4,3,-3,-1,-8,4,7,8,2,3,-10,4,-3,9,8,3,-3,2,-1,-6,-1,2,-10,9,-4,7,7,9,2,3,-8,-10,3,8,4,-2,-4,4,-3,-5,-7,10,4,4,-9,-6,3,7,-9,-9,9,-9,-6,-7,7,-5,-4,8,6,6,9,4,9,10,-6,-2,-2,8,-5,4,-6,-8,-6,2,8,-9,1,1,-5,-7,-9,8,9,7,10,8,2,8,-2,-2,-8,9,6,-7,-2,4,3,-3,7,-6,3,2,-10,5,-9,-6,2,6,7,9,-8,-1,4,-3,5,-9,-3,-8,-1,9,-2,9,-2,1,8,1,2,7,7,8,-9,-4,8,-9,5,-9,3,-2,-2,-6,-5,-6,-8,-5,-5,9,-10,10,5,6,-7,10,2,-5,-6,-5,-8,10,-6,-5,7,-8,-8,-6,-8,-6,9,5,9,8,-2,8,5,-10,-2,3,10,8,-10,3,-9,2,-5,9,-6,-3,1,-10,9,9,-4,1,-4,2,-3,3,-3,8,-10,4,-6,-6,-8,3,-6,-9,5,-4,8,4,-10,3,-9,-3,-2,7,-6,4,7,3,10,-4,3,5,-6,7,5,1,-3,-5,5,-4,4,7,7,-7,-6,-3,10,4,-6,-2,-1,9,1,-10,5,-9,1,-2,-10,5,-9,6,-6,-5,-9,7,4,-7,-7,5,-10,3,-2,2,-6,-7,5,6,4,-8,-2,5,9,3,9,-2,-2,-2,1,-6,1,2,9,-1,-9,7,2,-7,6,-8,8,3,4,4,-9,2,8,-8,-2,-1,8,4,10,2,3,-10,-2,1,-10,3,9,-1,-1,-3,10,8,2,7,-5,-9,-2,9,3,2,-9,5,2,5,7,-10,2,4,-10,-9,1,-1,-6,-5,-2,-6,-3,9,9,1,-1,-2,9,-10,-6,-1,-6,7,5,-3,-2,10,-10,-1,4,-4,4,-10,1,-1,-9,-5,7,7,8,2,10,3,2,8,7,1,-9,4,10,-10,-10,-4,-7,-10,10,4,4,10,3,-2,-2,-2,3,-3,-3,-2,6,-9,-6,9,-3,-7,-8,4,9,-2,6,-1,3,-2,9,-1,-1,-9,1,6,-8,-2,-4,-2,10,-3,9,7,-10,-2,6,-3,4,-7,-9,-1,-8,7,-7,2,-2,-6,-8,5,-4,6,-10,9,10,-1,9,-6,-4,6,2,1,-4,7,1,-10,10,-7,5,-4,-1,2,6,-6,4,4,-3,-10,-1,9,-10,7,4,-10,-9,4,1,2,7,-10,2,-5,-6,-10,-3,-8,-7,-2,-6,-10,9,7,-1,9,-8,6,-2,5,-7,6,-3,2,-7,2,9,2,-7,7,-9,5,5,7,2,9,6,-9,10,-8,-10,-4,-4,6,-7,-9,-9,-4,-4,4,-1,-7,-8,6,2,7,-6,-8,7,-2,-6,1,-5,-10,3,7,6,-3,-10,4,-4,-3,-2,-3,-2,-1,7,-4,6,1,9,-5,2,1,8,-6,-6,7,8,5,6,-10,10,5,-7,7,-6,3,2,-2,9,5,6,3,3,-6,8,3,-2,-5,-7,-7,5,-3,-3,-7,2,8,-3,2,9,-4,5,-6,-6,-10,-1,7,6,-1,4,1,-10,-2,10,-9,-3,9,-2,9,-3,-2,5,-10,-1,1,-1,-9,-1,-5,6,-3,9,-9,6,9,-4,-4,2,1,7,7,4,10,-7,-8,1,2,-5,8,-8,1,-10,2,-10,-5,2,-6,8,-2,5,9,-5,-3,-3,-2,-2,2,7,-3,-6,-6,10,7,-2,-4,10,10,-6,8,7,-8,-2,-10,6,-7,-4,3,7,-4,10,5,-3,7,-9,9,-4,5,-9,8,10,8,-10,-8,2,7,1,-1,-6,-6,-3,3,3,-5,4,-10,9,-8,10,6,-1,-3,5,-9,-2,8,-3,3,10,10,9,8,-7,-7,-6,10,-5,10,-7,-1,-7,2,-1,-5,3,6,-5,-2,-3,-1,9,6,6,-4,-4,-10,3,10,9,6,9,5,-6,-8,5,8,1,-8,10,10,6,-7,-3,4,2,-7,-1,7,-1,-6,4,-10,10,2,9,-5,3,3,-1,-10,-6,6,-9,-3,-7,5,-5,-6,3,4,-1,5,3,10,5,-6,4,6,-4,4,-8,-3,-5,7,-9,8,-9,2,2,-5,1,-6,5,10,1,-5,4,1,6,-7,-8,-5,-9,9,8,-6,9,-5,6,-8,-1,5,10,7,5,-1,9,9,2,1,6,-10,-1,-1,-2,3,1,-9,5,7,9,2,3,-8,-1,-4,8,2,-10,-6,4,-4,-7,-6,-10,-2,-10,-7,-4,-5,-5,2,6,1,-8,6,6,7,-4,4,7,-1,8,9,4,-9,-6,2,-4,5,10,4,-3,9,-7,1,9,-2,-1,-3,6,4,2,3,9,-7,-1,-4,5,2,-6,-5,-5,4,-7,-3,-8,6,-2,-5,9,1,5,4,1,-2,-1,2,4,-3,2,4,2,-9,9,9,-5,7,8,-2,9,5,-10,7,-4,7,-6,-7,2,-7,9,-8,4,6,7,10,3,8,-2,-9,5,4,6,-2,-7,-9,4,-1,-3,10,-7,7,-6,5,-10,-4,-10,-8,10,-5], dtype = "uint32")#candidate|4007|(2016,)|const|uint32
var_4008 = relay.var("var_4008", dtype = "float32", shape = (594,))#candidate|4008|(594,)|var|float32
call_4006 = relay.TupleGetItem(func_3768_call(relay.reshape(const_4007.astype('uint32'), [16, 9, 14]), relay.reshape(var_4008.astype('float32'), [594,]), relay.reshape(call_3972.astype('uint8'), [135,]), ), 3)
call_4009 = relay.TupleGetItem(func_3773_call(relay.reshape(const_4007.astype('uint32'), [16, 9, 14]), relay.reshape(var_4008.astype('float32'), [594,]), relay.reshape(call_3972.astype('uint8'), [135,]), ), 3)
output = relay.Tuple([call_3958,call_3967,call_3972,call_4000,call_4006,const_4007,var_4008,])
output2 = relay.Tuple([call_3959,call_3968,call_3973,call_4001,call_4009,const_4007,var_4008,])
func_4012 = relay.Function([var_4008,], output)
mod['func_4012'] = func_4012
mod = relay.transform.InferType()(mod)
var_4013 = relay.var("var_4013", dtype = "float32", shape = (594,))#candidate|4013|(594,)|var|float32
output = func_4012(var_4013)
func_4014 = relay.Function([var_4013], output)
mutated_mod['func_4014'] = func_4014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2006_call = mod.get_global_var('func_2006')
func_2008_call = mutated_mod.get_global_var('func_2008')
call_4193 = relay.TupleGetItem(func_2006_call(), 1)
call_4194 = relay.TupleGetItem(func_2008_call(), 1)
func_2945_call = mod.get_global_var('func_2945')
func_2947_call = mutated_mod.get_global_var('func_2947')
const_4216 = relay.const([[-1.159364,6.884823],[-2.211715,9.337691],[-2.597557,-0.965203],[-6.533032,-6.789864],[6.002518,4.323364],[-1.886924,-2.452987],[-3.953981,-7.851435],[-7.719735,3.248006],[-3.475045,-2.092052],[5.194489,2.468929],[4.963500,9.166646],[7.607182,-2.092792],[-5.882022,-4.544519],[6.457201,-2.768571],[2.312824,-4.912529],[-5.476228,-0.182337],[6.169289,-8.888264],[4.020644,-7.751647],[4.080747,-7.576586],[9.079390,3.608823],[1.419220,-9.338276],[-7.565417,-5.617385],[7.056632,9.861544],[-2.208120,-2.231249],[-8.668341,-8.782015],[-8.161210,-4.819211],[8.553291,0.321263],[-2.542683,-6.286392],[-8.466803,-7.674347],[7.958070,-6.105997],[-2.214743,6.416412],[-7.624630,-0.344092],[-1.087913,-1.567062],[9.378557,-7.417020],[3.404195,7.236479],[-7.580180,3.252144],[-8.402222,1.305157],[1.028784,-3.559340],[-4.733501,-8.926766],[5.687780,2.639329],[-3.760010,6.589602],[2.176220,-1.260113],[9.776986,-0.953034],[1.947013,-1.554687],[8.308718,-9.643222],[-9.270997,-4.165899],[-3.464944,7.394373],[6.527238,0.896799],[-4.457355,3.124595],[-4.561405,-4.972200],[8.085698,8.668830],[3.170024,-0.008827],[0.125706,5.127762],[6.458739,-2.230984],[-0.600599,-4.505199],[4.126177,2.862473],[-2.019644,5.475632],[-2.694798,-5.788819],[-3.475988,6.557843],[8.894596,-1.049917],[-5.228342,-3.012857],[-6.586438,2.761459],[-6.341209,-0.727708],[8.969689,1.530824],[2.171299,-4.906387],[9.169988,8.234579],[-8.905369,0.333131],[1.824261,-9.377779],[5.862118,1.926024],[-2.734142,-4.974527],[-1.065780,-9.737763],[6.035477,9.673177],[-9.153280,-4.516619],[-8.536878,9.242191],[-6.106455,1.095587],[-5.374641,6.836704],[-2.525993,0.215330],[0.823761,-6.524162]], dtype = "float64")#candidate|4216|(78, 2)|const|float64
call_4215 = relay.TupleGetItem(func_2945_call(relay.reshape(const_4216.astype('float64'), [156,])), 2)
call_4217 = relay.TupleGetItem(func_2947_call(relay.reshape(const_4216.astype('float64'), [156,])), 2)
output = relay.Tuple([call_4193,call_4215,const_4216,])
output2 = relay.Tuple([call_4194,call_4217,const_4216,])
func_4218 = relay.Function([], output)
mod['func_4218'] = func_4218
mod = relay.transform.InferType()(mod)
mutated_mod['func_4218'] = func_4218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4218_call = mutated_mod.get_global_var('func_4218')
call_4219 = func_4218_call()
output = call_4219
func_4220 = relay.Function([], output)
mutated_mod['func_4220'] = func_4220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2874_call = mod.get_global_var('func_2874')
func_2876_call = mutated_mod.get_global_var('func_2876')
call_4226 = func_2874_call()
call_4227 = func_2874_call()
func_2289_call = mod.get_global_var('func_2289')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_4228 = func_2289_call()
call_4229 = func_2289_call()
func_1850_call = mod.get_global_var('func_1850')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_4230 = relay.TupleGetItem(func_1850_call(), 0)
call_4231 = relay.TupleGetItem(func_1851_call(), 0)
func_3821_call = mod.get_global_var('func_3821')
func_3823_call = mutated_mod.get_global_var('func_3823')
call_4236 = relay.TupleGetItem(func_3821_call(), 1)
call_4237 = relay.TupleGetItem(func_3823_call(), 1)
const_4242 = relay.const([[[9,2,10],[6,-7,-3],[-8,8,-5],[6,5,6],[8,6,-8],[6,5,-9],[-9,-1,9],[5,-6,-3],[-8,-10,2]],[[7,-10,2],[8,-9,5],[9,4,8],[-3,-1,6],[9,2,8],[-5,-3,-10],[7,2,-2],[-4,9,-9],[1,10,1]],[[5,-9,-1],[-2,4,3],[10,-3,-6],[7,5,7],[-3,-6,-10],[8,-6,4],[-3,-4,-10],[2,-7,-10],[9,-2,-5]],[[8,9,10],[10,-5,-4],[2,5,-4],[-4,-5,-1],[-1,-4,5],[-6,-9,9],[-4,-7,3],[-10,-1,-2],[-10,-3,-7]],[[-9,5,3],[-5,6,-6],[3,-2,-1],[-4,-2,5],[-1,-10,9],[-9,8,-4],[-7,-2,2],[6,7,6],[2,8,6]]], dtype = "int8")#candidate|4242|(5, 9, 3)|const|int8
bop_4243 = relay.mod(call_4228.astype('float32'), relay.reshape(const_4242.astype('float32'), relay.shape_of(call_4228))) # shape=(5, 9, 3)
bop_4246 = relay.mod(call_4229.astype('float32'), relay.reshape(const_4242.astype('float32'), relay.shape_of(call_4229))) # shape=(5, 9, 3)
func_1288_call = mod.get_global_var('func_1288')
func_1293_call = mutated_mod.get_global_var('func_1293')
const_4252 = relay.const([-6,8,2,2,1,5,7,-9,-6,-7,-6,3,8,-7,-6,1,-3,9,-4,3,10,7,6,2,-2,4,-2,3,4,1,4,3,-10,5,3,1,8,3,-1,-5,-5,-10,-8,7,5,-4,-1,-6,-1,-6,1,-10,-5,-2,-7,9,7,-9,4,-9,-5,10,9,-10,9,7,-3,-8,9,5,8,-7,5,8,-3,10,9,7,-8,-10,-3,8,3,6,-7,-7,-5,9,-2,9,3,5,-1,-2,7,7,-9,8,4,-2,-5,7,-5,1,-3,-3,2,-10,10,2,-4,-9,-8,4,1,3,9,7,6,1,10,6,4,5,-8,3,-9,-6,9,7,10,-7,1,2,4,9,-9,-6,-2,1,9,3,-8,5,1,-9,-5,9,-2,5,4,10,8,-10,-6,-2,5,-6,-4,-2,4,-7,10,7,7,-10,8,8,-3,-8,-9,7,-4,9,-4,5,4,9,6,-8,9,-7,7,3,-4,-10,-9,-9,9,-1,10,-1,7,-10,5,7,-7,9,2,3,-2,8,-1,-4,-6,-3,2,1,-5,4,1,6,-8,2,-8,5,-10,-9,10,3,-10,-2,-4,2,4,-1,-9,-2,1,-6,-1,-7,4,5,-1,9,7,-6,4,10,5,-2,-8,1,10,-8,-6,3,-5,3,-7,9,-6,4,-6,8,8,6,-4,-5,4,-5,-10,-2,7,3,10,7,-9,-3,-9,-6,1,-3,3,-9,-1,9,5,8,-7,-5,3,2,-4,6,-8,-10,-8,-3,-1,8,-9,5,8,-5,2,-3,-3,-6,-10,2,-9,-6,-5,8,1,8,-2,-5,4,-7,-3,3,3,-5,-4,-2,9,-9,-7,10,2,-2,-9,-7,9,1,-4,8,-4,4,-9,-10,-4,-5,-4,1,-3,4,-9,6,7,-8,4,2,-8,-7,-3,-7,3,-10,-7,7,-3,3,-2,-2,10,9,5,-3,8,-1,-6,9,-10,-8,-9,8,-6,6,2,4,-9,8,-6,8,-1,-4,7,6,-2,6,-9,-5,-7,-2,10,-1,-1,-2,9,1,-9,7,-10,-5,7,-4,-6,-3,2,2,-1,1,-3,9,5,2,-4,-3,-1,-7,-10,9,9,-10,7,-5,6,-8,-10,-1,-6,-10,1,5,2,2,-4,-9,-3,6,-3,-6,-6,8,-1,3,-1,10,-6,5,8,1,10,-6,1,1,-4,2,3,-8,-8,-6,3,2,10,9,-7,-1,-2,-8,-1,-4,-9,-7,-8,-1,-5,7,10,9,-9,9,1,-10,6,-6,10,2,-8,-4,-3,3,9,-7,-1,10,-9,5,8,4,5,1,-10,5,-3,4,-1,3,9,10,8,-8,-8,6,-8,9,10,1,4,-8,4,-2,-1,6,7,-7,-5,-2,10,10,-10,-3,1,-10,9,-4,2,-7,-5,2,-6,-8,8,5,-10,7,-6,-10,-6,3,-10,8,5,4,8,-1,-7,-9,-1,-2,-1,-10,-1,1,-3,-3,-1,5,-8,-5,7,3,7,6,6,8,8,2,10,-7,10,-6,-2,-9,9,9,2,-7,-3,4,2,-7,-9,10,-6,4,6,9,10,2,-5,-5,-4,5,-7,9,2,2,8,-5,-8,10,-9,-5,10,6,8,-2,6,-2,-10,-4,8,8,-1,-10,-1,4,9,7,-9,-5,-6,9,-8,-5,-3,-3,-9,7,-5,9,-5,-6,-4,-6,-7,10,-9,7,2,-8,-3,6,-3,1,9,-3,-7,-1,-3,-6,9,6,-6,7,-5,5,-7,1,5,7,-4,-8,-1,-3,-5,5,-4,-4,-3,2,-6,-9,9,3,2,8,2,8,-5,8,-10,6,3,6,-2,8,-5,-1,7,-2,5,6,8,-1,-6,6,1,10,3,3,-4,3,6,-8,9,-1,-2,2,-4,4,1,8,2,-5,5,8,9,-1,-5,-9,8,9,-8,9,-3,3,-3,-5,8,9,7,3,1,2,-2,2,-10,2,-1,1,-6,-7,5,5,3,-7,3,8,-5,-2,1,8,5,9,-5,-2,-7,1,5,5,7,-8,-3,4,7,4,-10,-9,-4,-2,1,9,7,9,-5,-7,6,5,-2,-7,5,-6,4,9,-6,-9,9,6,-10,-7,9,7,9,-5,3,1,3,-2,-5,-5,5,9,-3,-7,7,-8,-8,-2,-7,2,-10,7,-2,-10,-3,9,2,10,-10,8,3,-6,9,1,-8,7,6,3,4,-7,2,-4,4,8,5,5,-2,-10,-10,8,-2,8,-10,7,4,-2,10,1,-10,-9,-6,2,5,8,10,3,-4,1,-10,9,-2,2,-5,-7,-5,1,-9,9,6,9,-5,10,-1,-5,-9,9,-5,5,-6,-6,-7,2,1,-1,-9,3,-1,5,-5,-7,5,10,-8,10,7,7,-5,1,-10,-3,3,7,2,-9,4,-5,-1,1,-10,-5,8,-1,3,-1,6,-2,-3,-4,10,-3,-9,-5,3,-2,-6,-10,-1,9,4,-4,3,9,6,-10,7,5,2,-8,6,6,7,8,6,1,-7,-10,5,-6,-3,1,10,5,4,4,3,1,5,-9,7,1,-7,6,-10,-4,9,-2,9,-10,3,2,6,-6,-5,4,-5,7,7,5,-6,-10,-2,3,-4,-4,-8,2,2,-5,-3,10,-5,1,2,9,4,-2,-4,6,9,4,6,3,4,-6,6,-6,-5,-3,4,3,-3,-2,2,-6,10,10,6,6,1,8,10,-10,-4,9,5,5,9,-5,-9,-1,3,-9,-5,10,8,5,5,-10,8,-6,-3,3,2,2,10,-2,-7,1,-5,7,-10,-9,8,1,-1,1,2,6,1,-5,3,4,-8,1,-8,7,3,-1,7,8,-3,-2,10,-8,5,-4,1,-8,4,4,-2,-10,-9,7,-4,-4,4,1,3,7,-3,6,-10,4,-6,8,9,2,-8,6,3,-1,5,3,1,7,2,7,8,7,-10,-1,-2,7,-3,4,-2,-5,6,6,-7,-3,-6,2,-2,7,6,2,-10,-10,3,-9,8,3,-1,5,-4,8,9,-6,-10,2,1,-4,3,6,-7,-1,10,-10,7,-8,4,-10,5,-1,-9,1,-8,-2,8,-9,2,1,-5,4,8,2,-9,2,-8,-9,9,8,-4,10,-8,-8,-8,4,-1,5,10,3,2,3,10,9,-9,-7,-9,4,4,10,2,7,-2,-5,2,4,-3,5,9,3,3,3,-6,9,-9,-4,-3,-6,-5,-9,-9,4,2,-5,5,10,-7,2,-8,-5,-2,-9,10,-1,-4,-6,5,-5,9,-7,10,-2,8,2,5,-6,6,1,9,-3,-4,10,-8,6,6,4,1,-3,-10,-9,-10,-3,10,-2,-7,6,7,9,-10,5,-10,-10,-4,4,-7,10,-7,6,8,6,5,5,5,-7,10,-1,-10,-1,-5,8,-7,-9,-1,2,5,3,2,-1,-3,-4,-2,-3,-5,7,-9,-9,-3,-3,-5,4,-2,9,-6,-1,-1,-1,-9,7,1,3], dtype = "int64")#candidate|4252|(1320,)|const|int64
const_4253 = relay.const([[-8.522387,-4.684898,-6.107109,5.611344,5.673474,5.410658,0.899143,7.629119,-7.331712,-5.522907,3.136482,6.060964,9.192502,4.122013,-4.143525,2.590711,-7.842371,1.253772,-9.382378,-8.143750,-3.970180,7.399605,-0.886527,-0.049293,5.577779,-6.267269,-7.291888,8.081817,8.392123,-7.917296,-4.425761,-6.320296,4.222289,4.366497,-7.506320,-6.703971,-5.124887,4.189904,-0.056375,4.905431,-2.763280,-8.666831,-2.448586,-6.025775,2.995970,8.137842,-6.320074,-6.373461,2.470907,9.498643,-4.760630,-9.390587,8.015780,3.419660,9.684292,-6.130984,0.727984,4.666870,-6.275065,9.442135,-9.332094,4.121464,-0.420190,-8.559565,-8.566508,-3.823010,2.306384,0.113854,-6.792885,-3.808036,0.815489,9.981458,-1.097266,-3.014265,-9.963046,-5.093491,5.538373,8.304279,2.504158,6.953470,1.394455,-3.608992,5.157361,-1.506153,0.632287,0.710908,6.902837,5.226001,9.191809,-1.158397,6.678212,-5.146245,0.844128,-2.432000,-8.336043,-5.167132,5.815656,-0.642491,-1.103251],[-6.485172,-2.852738,-7.923034,-7.088977,0.179108,-2.925735,5.726863,-0.065275,-1.553916,9.521399,-4.706351,-4.739402,-6.047849,-6.742606,-0.224999,3.240195,-2.551955,2.797104,6.143936,-4.345653,3.412454,-1.337519,-0.313874,2.054233,-2.026588,8.159159,-5.850292,7.332441,-0.954472,5.930883,-7.532007,3.973674,-8.745684,-8.451415,1.419589,-9.720615,5.612118,4.404019,3.449904,-0.513582,-9.170228,1.670091,2.044212,7.023892,-0.200784,5.776110,2.405787,2.536388,4.490123,2.286335,-9.164701,6.197171,-9.705934,4.091919,4.413411,-9.793678,4.321569,-3.075031,-4.568419,-6.996654,8.600503,-9.776016,7.489375,-7.216794,5.471890,2.652772,-8.147401,9.887165,0.739846,-5.172866,-9.247163,-0.416933,-9.947076,-2.911557,-9.341121,9.045244,-3.115452,-6.012991,9.094413,-1.739036,-5.961804,-5.663193,4.001452,-5.569356,-4.702425,6.400276,7.173314,4.654308,8.981283,-5.145589,-1.291002,8.942203,4.065106,-8.029685,-3.243443,1.577492,-1.353785,3.575853,8.170010],[3.699914,9.424074,-8.813697,-8.970919,-8.357779,-1.176829,-9.638246,4.489052,1.751177,6.111304,1.806278,7.280168,0.741908,9.886506,9.703576,-8.457383,-3.926462,5.640308,-6.452972,-8.371159,7.043220,4.939812,-2.246925,5.550965,-1.217991,1.797160,9.484069,-0.285298,6.226236,4.473120,1.497777,4.177371,6.376833,-7.532057,-4.817000,4.721247,4.805247,3.882543,0.250269,-2.258814,-5.558156,5.012069,-8.948869,-5.796263,4.006645,-3.013144,7.841988,6.638644,-0.904252,-3.292590,-7.793438,7.404091,-2.488265,0.283086,8.710396,5.882497,-7.437240,7.041241,6.822676,-8.972743,-9.811377,3.129351,-7.530640,-9.196874,-3.145584,8.552917,-3.805183,1.727416,-8.030007,-8.285956,-9.222909,6.603379,0.348355,8.594188,-2.029879,6.333081,-8.367977,-2.873790,8.326872,4.104388,2.266704,2.414329,9.498261,-8.485959,6.539965,-8.765156,5.156502,-4.557416,-3.799173,9.314028,2.711900,7.059234,2.783233,-8.606622,3.728717,-9.834331,6.642230,-6.293299,-2.071250],[-5.873359,-0.274309,7.759061,-9.657496,-3.064635,3.827032,1.385109,-9.417155,-0.246591,-2.087904,5.518629,3.730695,-5.581697,9.909364,4.903206,1.270469,0.980279,-3.474850,3.356194,4.638777,-2.762407,6.480511,5.822311,-1.930792,3.019872,9.346227,-1.686456,0.276976,9.618377,-2.068234,-1.598304,-4.839812,9.986195,9.721898,3.682497,-7.586439,8.818691,6.411212,8.591803,2.614425,-4.869748,4.119299,9.210499,7.842430,5.435588,5.077230,3.155485,-3.990034,6.259799,-3.901586,-0.040607,-3.270933,-9.608437,-3.959905,7.169903,8.085000,-4.173331,5.335221,5.611457,-1.554634,-0.031575,-9.882622,9.502198,-4.447042,-0.793352,4.698687,4.850415,1.044004,4.613917,7.828332,7.064798,-7.708947,-7.063632,1.573683,-1.682232,-3.610676,2.407522,5.009984,2.943057,0.830047,-5.262909,-3.793809,-7.798684,0.083468,-6.499311,0.123336,9.606173,1.831406,5.870972,8.584568,4.524159,-8.570744,2.257157,5.796750,7.202884,-2.227282,-7.008282,6.250454,-8.480077],[-3.777851,4.864315,-9.188574,-0.471882,-6.751843,-1.629096,1.338513,-5.773066,3.416843,4.967804,-4.880259,1.390131,-1.743996,-9.828185,9.242510,3.692807,1.738115,9.006040,8.288840,5.777574,9.931903,-0.439635,4.250972,-3.040436,-0.625311,-9.495458,-9.001330,9.194286,0.605215,-1.389026,7.775096,-5.558531,-6.828421,-0.668513,2.941960,-8.372897,-6.030092,-8.399300,9.496794,-1.544847,-5.683754,-3.866162,-0.642879,-5.665208,4.517988,-6.054584,-0.482513,7.285926,-6.790294,-9.247360,-6.171464,-5.731407,9.921560,-5.280519,2.624415,-1.878995,8.022717,-2.650553,6.415257,4.165482,5.427098,4.305146,9.350408,1.927731,-9.298335,7.066076,-4.834566,0.823908,-1.566363,-6.148853,-7.905565,-0.390779,4.600604,-3.015761,6.825318,-7.830062,8.796768,-7.195831,-1.690879,7.422431,5.017354,6.064788,-1.705783,-7.163881,8.095721,7.775589,7.876945,4.519018,-5.430284,8.449266,-1.878810,7.226638,9.816024,-6.796344,8.718843,9.384506,-5.132583,-7.537004,9.418640],[-3.809402,9.190648,5.911004,4.773183,1.310325,-7.709334,3.367110,-1.413187,-9.111147,-2.853386,-8.038821,-3.462356,-9.376082,-1.512251,-4.333431,0.294841,-2.304311,-7.332763,-8.627549,7.928045,1.322892,-5.728692,-9.086623,1.060625,6.188159,6.620090,6.069883,4.062065,-3.730835,-8.898235,3.209895,0.859423,-5.666973,3.397921,6.046733,5.966344,-5.836203,7.548335,-9.106808,-5.915366,-6.248697,3.012250,2.851030,-9.552468,8.816162,-8.149221,-6.984788,-5.811312,2.850205,7.765568,-6.710741,-8.091021,5.567283,3.778667,-6.294534,4.226318,9.838001,8.402506,1.397485,2.825517,-1.739646,7.704969,9.258924,-6.271513,-7.638930,-2.722653,-5.304470,2.650551,-7.217494,9.586862,-1.783273,-0.870540,-7.958214,6.339987,6.699851,-6.248964,-2.995418,-9.355847,8.491143,0.360252,9.142826,1.043250,-6.075373,8.544436,5.440661,4.742710,0.290266,-3.066214,8.979834,4.687022,-9.071679,3.262798,5.780736,-1.487421,-6.514425,-7.899306,4.476818,9.077153,6.415473]], dtype = "float32")#candidate|4253|(6, 99)|const|float32
call_4251 = relay.TupleGetItem(func_1288_call(relay.reshape(const_4252.astype('int64'), [15, 8, 11]), relay.reshape(const_4252.astype('int64'), [15, 8, 11]), relay.reshape(const_4253.astype('float32'), [6, 99]), ), 5)
call_4254 = relay.TupleGetItem(func_1293_call(relay.reshape(const_4252.astype('int64'), [15, 8, 11]), relay.reshape(const_4252.astype('int64'), [15, 8, 11]), relay.reshape(const_4253.astype('float32'), [6, 99]), ), 5)
func_242_call = mod.get_global_var('func_242')
func_246_call = mutated_mod.get_global_var('func_246')
var_4277 = relay.var("var_4277", dtype = "float64", shape = ())#candidate|4277|()|var|float64
var_4278 = relay.var("var_4278", dtype = "float64", shape = (168,))#candidate|4278|(168,)|var|float64
call_4276 = relay.TupleGetItem(func_242_call(relay.reshape(var_4277.astype('float64'), []), relay.reshape(var_4278.astype('float64'), [4, 7, 6]), relay.reshape(var_4278.astype('float32'), [4, 7, 6]), ), 1)
call_4279 = relay.TupleGetItem(func_246_call(relay.reshape(var_4277.astype('float64'), []), relay.reshape(var_4278.astype('float64'), [4, 7, 6]), relay.reshape(var_4278.astype('float32'), [4, 7, 6]), ), 1)
output = relay.Tuple([call_4226,call_4230,call_4236,bop_4243,call_4251,const_4252,const_4253,call_4276,var_4277,var_4278,])
output2 = relay.Tuple([call_4227,call_4231,call_4237,bop_4246,call_4254,const_4252,const_4253,call_4279,var_4277,var_4278,])
func_4295 = relay.Function([var_4277,var_4278,], output)
mod['func_4295'] = func_4295
mod = relay.transform.InferType()(mod)
var_4296 = relay.var("var_4296", dtype = "float64", shape = ())#candidate|4296|()|var|float64
var_4297 = relay.var("var_4297", dtype = "float64", shape = (168,))#candidate|4297|(168,)|var|float64
output = func_4295(var_4296,var_4297,)
func_4298 = relay.Function([var_4296,var_4297,], output)
mutated_mod['func_4298'] = func_4298
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4332 = relay.var("var_4332", dtype = "float64", shape = (6, 14, 3))#candidate|4332|(6, 14, 3)|var|float64
uop_4333 = relay.sqrt(var_4332.astype('float64')) # shape=(6, 14, 3)
output = relay.Tuple([uop_4333,])
output2 = relay.Tuple([uop_4333,])
func_4335 = relay.Function([var_4332,], output)
mod['func_4335'] = func_4335
mod = relay.transform.InferType()(mod)
var_4336 = relay.var("var_4336", dtype = "float64", shape = (6, 14, 3))#candidate|4336|(6, 14, 3)|var|float64
output = func_4335(var_4336)
func_4337 = relay.Function([var_4336], output)
mutated_mod['func_4337'] = func_4337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1346_call = mod.get_global_var('func_1346')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_4348 = relay.TupleGetItem(func_1346_call(), 0)
call_4349 = relay.TupleGetItem(func_1347_call(), 0)
output = call_4348
output2 = call_4349
func_4367 = relay.Function([], output)
mod['func_4367'] = func_4367
mod = relay.transform.InferType()(mod)
output = func_4367()
func_4368 = relay.Function([], output)
mutated_mod['func_4368'] = func_4368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1103_call = mod.get_global_var('func_1103')
func_1105_call = mutated_mod.get_global_var('func_1105')
call_4419 = func_1103_call()
call_4420 = func_1103_call()
func_849_call = mod.get_global_var('func_849')
func_853_call = mutated_mod.get_global_var('func_853')
const_4429 = relay.const([1.018377,-2.495809,-8.228170,6.428318,0.981610,-2.919423,-2.638066,6.238935,-9.640151,-5.600585,-9.122192,6.072941,-2.243217,-9.863612,0.044877,-9.589689,1.047736,0.551869,6.044790,-1.301691,-2.209401,7.790542,-3.342366,6.010530,-0.885054,-4.941781,8.821388,-3.370047,3.573629,9.000119,5.479336,6.702226,-2.802759,-4.768508,7.807309,-4.284856,7.705546,8.440241,-6.372189,-4.827491,-2.515352,-7.014169,5.127876,-6.473892,5.739967,8.606637,2.225239,7.789083,4.169376,3.090037,2.665423,8.764851,1.323179,-2.614860,2.001727,9.162415,5.513153,7.779759,-5.548139,9.519720,2.515365,-9.824288,-7.608448,8.914336,-3.448356,-7.274278,-8.602445,-1.059981,-8.549346,-6.114491,-2.004873,-1.683209,6.732631,-8.530397,5.106833,8.854702,-3.642604,7.588932,-0.826207,-1.259485,0.917858,-6.535206,-6.212665,-7.292611,5.024383,4.839945,-0.903773,9.433335,4.239347,1.995342,-5.083904,-6.290820,3.068483,7.832930,-6.429697,-5.168124,-9.382006,5.543883,3.525299,-6.321426,-0.662764,-3.910684,1.860777,-9.471403,8.426224,2.052573,0.262641,-7.025927,1.558985,-0.713961,-8.267506,5.074415,0.727858,1.005314,-7.649686,7.774894,5.406782,3.528031,9.944463,-1.301720,-3.752983,-3.982307,8.921973,-7.922549,-8.756039,-8.303385,6.809160,-4.186810,-0.480702,3.663539,5.384425,-2.092272,6.966535,6.428483,0.459277,3.708871,9.911649,4.176137,9.445104,6.233056,-5.786069,-3.409587,7.035046,-8.752356,-5.582101,6.342245,-8.844819,4.647965,6.503094,9.618071,-7.618267,-7.638495,-6.522903,-6.576612,9.023987,-7.562377,1.781840,8.666025,3.334324,-5.978783,-0.585184,4.812220,0.809868,-4.590778,0.291036,-4.796959,-8.087030,8.384232,-3.450748,-3.444672,1.418272,-7.711110,8.089333,2.169351,0.258750,4.360671,3.952019,5.375901,1.244561,-6.906712,6.442972,-0.190676,4.419861,-4.269711,4.752375,-1.502216,9.561068,4.479970,-6.514533,8.931866,-6.662929,2.263756,1.026037,2.835071,-3.421194,6.475138,-7.230037,-4.206733,7.542049,1.636737,0.796123,3.826759,-2.178814,-3.368445,-7.256080,9.096189,-1.141821,-3.551100,9.631036,-5.690542,1.870489,7.889594,1.147424,-0.968443,-2.354676,3.616465,4.600938,7.234677,6.557545,-8.310055,3.393658,-9.246683,1.713615,-1.499612,-2.038422,-2.121854,-2.567225,0.096100,6.175144,2.977643,-0.611597,-5.577769,9.355886,0.875032,4.769609,-5.752261,1.298845,-7.203344,-3.658670,9.592735,9.278493,-7.339026,0.807231,2.607025,6.775139,5.770165,4.155459,0.587411,8.519755,2.327693,9.952100,1.057151,-8.244836,3.487817,-5.287751,-3.433507,-5.083442,-5.525401,-9.762416,2.404689,-4.309343,9.560277,-5.449420,-7.679120,-3.937511,-1.553550,-6.445114,-6.060907,4.328711,0.223723,7.038282,5.083627,-2.130555,7.492210,8.642403,7.577164,3.018498,6.049010,9.577051,8.714727,3.041757,1.162000,-8.960340,-3.864734,3.708796,4.473182,2.702155,4.590938,-5.200008,1.007817,9.791834,0.558030,3.050033,-6.756668,8.774064,-9.188184,7.399876,-8.386898,-5.906191,3.845152,-2.539159,-8.017858,2.610731,6.459895,-9.254501,7.632287,7.325986,3.387024,3.604104,-6.720060,5.133782,6.178512,-9.667621,-9.009414,-4.820640,5.828788,1.171494,4.281824,3.172365,-5.812086,0.238921,9.611379,6.966300,7.805962,-4.944173,7.476043,0.674960,-6.043113,-4.375335,-0.411875,-5.634094,4.597211,8.639372,-9.341102,6.995877,-8.977196,-1.870139,-4.991795,-0.467250,-1.261525,3.005404,0.798597,-9.297112,-8.260410,-5.673682,2.639727,-1.937589,-8.652652,2.687455,-3.834968,-5.281307,7.268528,-0.058143,-2.007507,-2.711850,6.669447,-3.967610,-9.132148,-4.379942,5.201125,7.167315,7.804858,6.320688,9.661719,-9.173561,6.214600,-7.645472,5.879896,-6.936795,-3.507865,-0.236575,-5.133356,-6.294394,4.770587,-4.267336,9.471732,-5.967074,4.240768,7.263574,-6.660784,8.701541,-9.541695,3.711686,-9.153539,1.814806,-3.827415,4.723399,-5.781952,8.665586,-2.332464,-2.011559,8.774902,1.588864,-5.429406,6.081093,-5.646592,-7.231748,-9.747424,5.306627,-7.338035,9.219438,-8.314752,4.596589,-5.631408,1.583943,-5.100087,1.889058,-9.373521,6.867700,3.781607,7.282425,8.540278,-3.046346,5.854759,-8.665472,-7.538413,-7.329177,-9.399590,3.158714,-7.024328,-7.516300,-1.162370,-5.570692,-8.677858,8.984059,-3.902513,4.254941,-9.630832,-5.396571,4.639108,6.587931,-5.914116,8.710216,-4.266463,-4.028228,6.983202,5.651471,-3.969358,-6.410068,9.386023,-5.177775,-4.620373,1.097436,8.391099,7.065880,0.169755,-4.917448,-7.103778,-4.560000,-8.262734,-6.853872,8.676157,6.603850,2.565121,-9.824521,2.675173,6.587546,6.531156,-6.040072,-1.932519,1.703947,5.673833,5.056759,5.356121,-1.042112,-0.007727,4.714962,-1.503806,3.981889,-9.478271,8.454144,-9.042350,-9.564049,0.583654,-6.502093,-4.779900,9.646082,1.885997,6.657006,0.531097,-9.352771,-5.555017,1.703498,-8.470612,5.772484,0.645796,-2.483218,2.454018,3.281625,-7.416786,-8.639664,0.764155,-9.692388,-3.208861,-9.227994,0.498502,-9.019435,-2.146146,-5.149336,-9.141992,-9.422401,-2.375191,-5.584322,2.953995,3.929756,9.422592,-0.460423,0.869776,-5.389713,-6.189974,7.608606,8.215430,-2.469872,-5.801102,7.886335,-8.072974,-3.356885,-6.049162,-1.201895,-3.430321,3.559690,1.041620,-4.369382,-2.744366,-9.731434,7.768776,-6.969660,9.475372,1.541164,-1.920303,7.051266,-6.253404,6.653215,-7.060254,-4.788134,6.964103,-5.648567,8.190927,-3.765851,4.219836,-3.114171,-5.813034,-6.325739,6.352859,5.277891,-5.904640,-7.523291,-4.195027,0.175770,7.255440,8.982371,-1.017751,5.974540,7.674723,9.316660,4.949695,3.227993,2.351799,2.772754,5.756826,-1.648879,1.281140,-2.494143,-5.591221,-5.329022,5.072149,7.148580,-7.252989,8.707672,-8.129357,-7.877060,0.440433,9.930867,8.991368,3.627731,-0.332602,-9.205185,7.105192,6.193427,7.798773,2.703902,-4.341480,-9.926397,-2.030355,-7.056003,-1.464515,-6.646116,-2.342688,-2.029759,-3.334505,2.538436,8.813041,3.691411,-2.013852], dtype = "float32")#candidate|4429|(594,)|const|float32
var_4430 = relay.var("var_4430", dtype = "float32", shape = (1560,))#candidate|4430|(1560,)|var|float32
call_4428 = relay.TupleGetItem(func_849_call(relay.reshape(const_4429.astype('float32'), [594,]), relay.reshape(call_4419.astype('uint8'), [5, 9, 3]), relay.reshape(var_4430.astype('float32'), [1560, 1]), ), 2)
call_4431 = relay.TupleGetItem(func_853_call(relay.reshape(const_4429.astype('float32'), [594,]), relay.reshape(call_4419.astype('uint8'), [5, 9, 3]), relay.reshape(var_4430.astype('float32'), [1560, 1]), ), 2)
uop_4438 = relay.sigmoid(call_4419.astype('float64')) # shape=(5, 9, 3)
uop_4440 = relay.sigmoid(call_4420.astype('float64')) # shape=(5, 9, 3)
func_1557_call = mod.get_global_var('func_1557')
func_1559_call = mutated_mod.get_global_var('func_1559')
call_4445 = relay.TupleGetItem(func_1557_call(), 0)
call_4446 = relay.TupleGetItem(func_1559_call(), 0)
output = relay.Tuple([call_4428,const_4429,var_4430,uop_4438,call_4445,])
output2 = relay.Tuple([call_4431,const_4429,var_4430,uop_4440,call_4446,])
func_4470 = relay.Function([var_4430,], output)
mod['func_4470'] = func_4470
mod = relay.transform.InferType()(mod)
mutated_mod['func_4470'] = func_4470
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4471 = relay.var("var_4471", dtype = "float32", shape = (1560,))#candidate|4471|(1560,)|var|float32
func_4470_call = mutated_mod.get_global_var('func_4470')
call_4472 = func_4470_call(var_4471)
output = call_4472
func_4473 = relay.Function([var_4471], output)
mutated_mod['func_4473'] = func_4473
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4492 = relay.var("var_4492", dtype = "float32", shape = (8, 14, 10))#candidate|4492|(8, 14, 10)|var|float32
uop_4493 = relay.sinh(var_4492.astype('float32')) # shape=(8, 14, 10)
bop_4498 = relay.logical_or(uop_4493.astype('bool'), relay.reshape(var_4492.astype('bool'), relay.shape_of(uop_4493))) # shape=(8, 14, 10)
bop_4503 = relay.greater(bop_4498.astype('bool'), relay.reshape(uop_4493.astype('bool'), relay.shape_of(bop_4498))) # shape=(8, 14, 10)
bop_4516 = relay.multiply(var_4492.astype('uint64'), relay.reshape(bop_4503.astype('uint64'), relay.shape_of(var_4492))) # shape=(8, 14, 10)
func_1301_call = mod.get_global_var('func_1301')
func_1303_call = mutated_mod.get_global_var('func_1303')
call_4524 = relay.TupleGetItem(func_1301_call(), 1)
call_4525 = relay.TupleGetItem(func_1303_call(), 1)
output = relay.Tuple([bop_4516,call_4524,])
output2 = relay.Tuple([bop_4516,call_4525,])
func_4530 = relay.Function([var_4492,], output)
mod['func_4530'] = func_4530
mod = relay.transform.InferType()(mod)
var_4531 = relay.var("var_4531", dtype = "float32", shape = (8, 14, 10))#candidate|4531|(8, 14, 10)|var|float32
output = func_4530(var_4531)
func_4532 = relay.Function([var_4531], output)
mutated_mod['func_4532'] = func_4532
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4584 = relay.const([[[3,2,-2,9,-8,5,-6,-9,-6,-10],[-6,-6,-1,5,-1,-3,-2,4,3,-3],[-6,5,5,2,8,8,4,-8,-6,-8],[-10,3,5,8,-3,-8,-3,-10,8,2],[3,-2,3,-3,-5,-7,-1,6,10,-5],[-7,1,-8,8,4,-4,9,5,7,2]]], dtype = "int16")#candidate|4584|(1, 6, 10)|const|int16
var_4585 = relay.var("var_4585", dtype = "int16", shape = (6, 6, 10))#candidate|4585|(6, 6, 10)|var|int16
bop_4586 = relay.multiply(const_4584.astype('int16'), var_4585.astype('int16')) # shape=(6, 6, 10)
var_4601 = relay.var("var_4601", dtype = "int16", shape = (1, 6, 10))#candidate|4601|(1, 6, 10)|var|int16
bop_4602 = relay.less_equal(const_4584.astype('bool'), relay.reshape(var_4601.astype('bool'), relay.shape_of(const_4584))) # shape=(1, 6, 10)
output = relay.Tuple([bop_4586,bop_4602,])
output2 = relay.Tuple([bop_4586,bop_4602,])
func_4611 = relay.Function([var_4585,var_4601,], output)
mod['func_4611'] = func_4611
mod = relay.transform.InferType()(mod)
mutated_mod['func_4611'] = func_4611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4611_call = mutated_mod.get_global_var('func_4611')
var_4613 = relay.var("var_4613", dtype = "int16", shape = (6, 6, 10))#candidate|4613|(6, 6, 10)|var|int16
var_4614 = relay.var("var_4614", dtype = "int16", shape = (1, 6, 10))#candidate|4614|(1, 6, 10)|var|int16
call_4612 = func_4611_call(var_4613,var_4614,)
output = call_4612
func_4615 = relay.Function([var_4613,var_4614,], output)
mutated_mod['func_4615'] = func_4615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_775_call = mod.get_global_var('func_775')
func_776_call = mutated_mod.get_global_var('func_776')
call_4617 = func_775_call()
call_4618 = func_775_call()
uop_4620 = relay.atan(call_4617.astype('float64')) # shape=(5, 9, 3)
uop_4622 = relay.atan(call_4618.astype('float64')) # shape=(5, 9, 3)
func_3155_call = mod.get_global_var('func_3155')
func_3158_call = mutated_mod.get_global_var('func_3158')
const_4637 = relay.const([6.791600,2.151962,-8.347194,-1.070661,5.760312,3.398665,-4.240173,-5.921960,-1.716645,-0.992984,-9.152053,9.749479,2.570532,-9.287235,9.926517,1.024118,9.536286,-7.718411,5.654550,9.648990,0.741852,-5.136943,5.167593,3.879934,7.567723,6.669356,-8.477655,1.408495,-7.971199,4.424319,6.604300,1.287878,2.319271,-6.242946,-7.447123,-3.839279,-4.230809,3.878033,0.947225,-0.117144,6.108890,-2.441812,-1.229133,4.004873,-8.503716,-4.600635,9.822789,-7.430861,2.760015,8.237600,-0.243450,5.878062,-5.610425,5.276533,-3.537703,-4.501101,7.465498,9.549776,8.392771,5.185885,0.564972,6.577642,4.952982,-1.735993,1.676555,-4.526329,6.782492,-7.614621,-0.138872,7.295284,6.453048,-8.622819,7.085844,-5.752516,-3.453976,-5.832298,6.721799,0.685503,4.585164,1.922568,2.381854,3.639750,-7.954331,8.525915,6.528363,1.706995,-5.836227,7.858033,7.918789,-0.670805,2.520799,-3.847504,3.248731,5.665441,9.728455,2.410447,-0.478171,9.781115,-2.649165,-1.698135,7.028875,2.885385,9.105722,6.924949,-3.813978,1.715237,-6.536169,2.998956,3.018441,1.454836,6.275623,7.419028,9.227548,-8.156424,8.751016,3.900311,-2.234072,6.885667,1.183706,3.398847,-4.206704,-0.953261,-4.994415,-0.603571,-0.549510,-0.550494,-2.371130,-5.055652,-8.469328,-9.495267,4.204356,-7.139506,-4.464946,2.623345,1.490539,2.587237,3.772128,-3.946398,6.331569,0.597923,-3.182821,-9.255207,-5.310001,-4.206432,7.687758,-4.257165,-8.370859,0.125976,-4.936350,3.491848,9.358655,-3.186575,-6.958950,-1.591495,0.345308,0.832429], dtype = "float64")#candidate|4637|(156,)|const|float64
call_4636 = relay.TupleGetItem(func_3155_call(relay.reshape(const_4637.astype('float64'), [156, 1])), 3)
call_4638 = relay.TupleGetItem(func_3158_call(relay.reshape(const_4637.astype('float64'), [156, 1])), 3)
output = relay.Tuple([uop_4620,call_4636,const_4637,])
output2 = relay.Tuple([uop_4622,call_4638,const_4637,])
func_4639 = relay.Function([], output)
mod['func_4639'] = func_4639
mod = relay.transform.InferType()(mod)
mutated_mod['func_4639'] = func_4639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4639_call = mutated_mod.get_global_var('func_4639')
call_4640 = func_4639_call()
output = call_4640
func_4641 = relay.Function([], output)
mutated_mod['func_4641'] = func_4641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3783_call = mod.get_global_var('func_3783')
func_3785_call = mutated_mod.get_global_var('func_3785')
call_4684 = func_3783_call()
call_4685 = func_3783_call()
output = relay.Tuple([call_4684,])
output2 = relay.Tuple([call_4685,])
func_4699 = relay.Function([], output)
mod['func_4699'] = func_4699
mod = relay.transform.InferType()(mod)
output = func_4699()
func_4700 = relay.Function([], output)
mutated_mod['func_4700'] = func_4700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2449_call = mod.get_global_var('func_2449')
func_2451_call = mutated_mod.get_global_var('func_2451')
call_4701 = relay.TupleGetItem(func_2449_call(), 0)
call_4702 = relay.TupleGetItem(func_2451_call(), 0)
func_4470_call = mod.get_global_var('func_4470')
func_4473_call = mutated_mod.get_global_var('func_4473')
var_4709 = relay.var("var_4709", dtype = "float32", shape = (1560,))#candidate|4709|(1560,)|var|float32
call_4708 = relay.TupleGetItem(func_4470_call(relay.reshape(var_4709.astype('float32'), [1560,])), 1)
call_4710 = relay.TupleGetItem(func_4473_call(relay.reshape(var_4709.astype('float32'), [1560,])), 1)
var_4711 = relay.var("var_4711", dtype = "float32", shape = (594,))#candidate|4711|(594,)|var|float32
bop_4712 = relay.greater(call_4708.astype('bool'), relay.reshape(var_4711.astype('bool'), relay.shape_of(call_4708))) # shape=(594,)
bop_4715 = relay.greater(call_4710.astype('bool'), relay.reshape(var_4711.astype('bool'), relay.shape_of(call_4710))) # shape=(594,)
var_4717 = relay.var("var_4717", dtype = "float32", shape = (594,))#candidate|4717|(594,)|var|float32
bop_4718 = relay.floor_divide(var_4711.astype('float32'), relay.reshape(var_4717.astype('float32'), relay.shape_of(var_4711))) # shape=(594,)
func_2249_call = mod.get_global_var('func_2249')
func_2252_call = mutated_mod.get_global_var('func_2252')
var_4725 = relay.var("var_4725", dtype = "float32", shape = (495,))#candidate|4725|(495,)|var|float32
call_4724 = relay.TupleGetItem(func_2249_call(relay.reshape(var_4725.astype('float32'), [11, 5, 9]), relay.reshape(var_4725.astype('float32'), [11, 5, 9]), ), 0)
call_4726 = relay.TupleGetItem(func_2252_call(relay.reshape(var_4725.astype('float32'), [11, 5, 9]), relay.reshape(var_4725.astype('float32'), [11, 5, 9]), ), 0)
output = relay.Tuple([call_4701,var_4709,bop_4712,bop_4718,call_4724,var_4725,])
output2 = relay.Tuple([call_4702,var_4709,bop_4715,bop_4718,call_4726,var_4725,])
func_4730 = relay.Function([var_4709,var_4711,var_4717,var_4725,], output)
mod['func_4730'] = func_4730
mod = relay.transform.InferType()(mod)
var_4731 = relay.var("var_4731", dtype = "float32", shape = (1560,))#candidate|4731|(1560,)|var|float32
var_4732 = relay.var("var_4732", dtype = "float32", shape = (594,))#candidate|4732|(594,)|var|float32
var_4733 = relay.var("var_4733", dtype = "float32", shape = (594,))#candidate|4733|(594,)|var|float32
var_4734 = relay.var("var_4734", dtype = "float32", shape = (495,))#candidate|4734|(495,)|var|float32
output = func_4730(var_4731,var_4732,var_4733,var_4734,)
func_4735 = relay.Function([var_4731,var_4732,var_4733,var_4734,], output)
mutated_mod['func_4735'] = func_4735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4699_call = mod.get_global_var('func_4699')
func_4700_call = mutated_mod.get_global_var('func_4700')
call_4747 = relay.TupleGetItem(func_4699_call(), 0)
call_4748 = relay.TupleGetItem(func_4700_call(), 0)
func_2493_call = mod.get_global_var('func_2493')
func_2495_call = mutated_mod.get_global_var('func_2495')
var_4760 = relay.var("var_4760", dtype = "float64", shape = (156,))#candidate|4760|(156,)|var|float64
call_4759 = relay.TupleGetItem(func_2493_call(relay.reshape(var_4760.astype('float64'), [39, 4])), 0)
call_4761 = relay.TupleGetItem(func_2495_call(relay.reshape(var_4760.astype('float64'), [39, 4])), 0)
output = relay.Tuple([call_4747,call_4759,var_4760,])
output2 = relay.Tuple([call_4748,call_4761,var_4760,])
func_4790 = relay.Function([var_4760,], output)
mod['func_4790'] = func_4790
mod = relay.transform.InferType()(mod)
mutated_mod['func_4790'] = func_4790
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4791 = relay.var("var_4791", dtype = "float64", shape = (156,))#candidate|4791|(156,)|var|float64
func_4790_call = mutated_mod.get_global_var('func_4790')
call_4792 = func_4790_call(var_4791)
output = call_4792
func_4793 = relay.Function([var_4791], output)
mutated_mod['func_4793'] = func_4793
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4830 = relay.var("var_4830", dtype = "int64", shape = (7, 1, 4))#candidate|4830|(7, 1, 4)|var|int64
var_4831 = relay.var("var_4831", dtype = "int64", shape = (7, 4, 4))#candidate|4831|(7, 4, 4)|var|int64
bop_4832 = relay.right_shift(var_4830.astype('int64'), var_4831.astype('int64')) # shape=(7, 4, 4)
func_4530_call = mod.get_global_var('func_4530')
func_4532_call = mutated_mod.get_global_var('func_4532')
var_4844 = relay.var("var_4844", dtype = "float32", shape = (1120,))#candidate|4844|(1120,)|var|float32
call_4843 = relay.TupleGetItem(func_4530_call(relay.reshape(var_4844.astype('float32'), [8, 14, 10])), 1)
call_4845 = relay.TupleGetItem(func_4532_call(relay.reshape(var_4844.astype('float32'), [8, 14, 10])), 1)
func_2282_call = mod.get_global_var('func_2282')
func_2285_call = mutated_mod.get_global_var('func_2285')
const_4853 = relay.const([[1.060252,3.230787],[9.163205,3.671963],[-7.460996,5.166610],[-4.001857,6.002976],[-4.726827,8.147090],[-1.538472,-1.983868],[6.811282,-8.343581],[1.058186,-6.695222],[-7.772170,-9.679473],[-1.296143,3.082833],[-5.628710,-5.969514],[9.147658,-3.211635],[-3.538134,-6.089732],[2.438718,5.802233],[-1.663859,-1.506268],[-5.538584,0.399532],[-4.633111,7.558501],[8.698281,0.224426],[7.588993,-5.099298],[3.521002,-3.414416],[4.209067,-6.304411],[-0.841643,9.861171],[1.952681,-4.548225],[-7.736000,-2.531066],[2.004822,8.759307],[-0.693666,-1.430270],[-9.274693,-3.526371],[-9.056900,-3.298565],[-4.740383,-1.767666],[-4.938664,6.842782],[8.339622,7.072368],[5.923905,-0.664752],[3.307885,-4.344127],[-8.700797,-5.269980],[9.147171,-1.434652],[7.524931,0.813400],[9.634035,-6.349612],[-7.595439,3.312146],[4.586463,9.763312],[-2.106811,0.199942],[-2.653646,-6.689429],[4.117547,2.920371],[0.469044,-2.260424],[-3.400354,-1.576789],[2.779543,0.578818],[7.474815,6.566952],[-1.268426,2.230770],[-7.141206,-2.317216],[-9.450932,6.714947],[3.205971,4.878370],[-5.456270,-7.753213],[2.524384,-2.607047],[2.593140,-4.514480],[-2.563251,-0.354149],[5.619257,7.877458],[-6.042727,-3.098477],[-8.989839,-8.403083],[-1.332530,1.249629],[6.793957,-2.290119],[-7.847652,1.260295],[-2.412237,-9.782020],[9.890774,0.278497],[4.275020,-6.264706],[5.987985,-0.408106],[-5.390539,3.955148],[-8.698515,1.832527],[-2.586110,7.104894],[-9.729039,5.784758],[-0.615478,5.333730],[-5.127627,-8.292069],[-7.228552,0.044550],[4.560889,2.584103],[5.987982,5.102474],[8.185404,9.864430],[-0.592446,3.847355],[-7.037097,8.657908],[-4.606256,-8.197857],[-4.697837,-8.034531],[-9.770195,-5.478353],[-0.610504,3.648989],[-2.020485,8.222534],[-4.977316,-8.595617],[3.608063,7.371085],[-6.610423,8.932776],[-8.170931,6.281670],[-6.707823,9.006219],[5.844813,4.172424],[5.366002,0.554154],[5.485027,-6.145098],[-8.946901,-3.851617],[-9.323264,1.666836],[-8.234151,0.977245],[-7.265545,9.042924],[9.534614,9.121679],[-2.020826,-7.385526],[-1.965733,-1.377569],[-3.890262,4.303030],[9.192442,2.932993],[6.044316,-9.581636],[8.816531,-3.823466],[-4.157770,-4.754881],[-6.387240,-8.704471],[-1.841869,7.849550],[0.103159,-1.459088],[-6.239306,-8.181993],[7.700477,7.081219],[-2.047141,5.229215],[6.901993,6.991262],[0.381663,9.338402],[-2.455470,0.827897],[-4.883334,2.842244],[-4.628535,-6.237013],[1.705116,-4.395804],[-9.102117,5.655830],[4.954074,-4.526834],[6.986473,-2.222021],[6.669322,-5.381109],[6.666627,0.721674],[-2.851657,1.361911],[-9.827711,7.149172],[-9.973082,6.730672],[8.391875,3.602020],[2.713697,-4.872910],[-0.997532,3.579540],[-4.188036,3.996517],[7.570128,-3.537763],[0.810540,-3.522410],[6.997624,1.124273],[8.815803,-1.491454],[7.096339,4.331621],[7.932461,7.514614],[-7.150276,9.417412],[7.040263,9.188342],[1.209360,-7.397742],[1.933865,0.484371],[2.817774,9.519388],[7.005540,4.328037],[1.151857,6.164084],[-0.277112,-3.850570],[7.345518,-6.573076],[-3.400511,-2.933428],[8.127966,-5.386284],[9.021479,0.899618],[-8.994006,-7.618211],[-5.866860,7.111936],[-0.472107,-1.489485],[7.944094,-8.098170],[-7.581235,2.425519],[-5.199109,0.233502],[1.168196,-9.268254],[7.068112,9.393599],[-2.702970,8.858400],[3.687370,0.336472],[6.401677,9.412604],[-8.606230,6.567093],[-5.152174,-8.733536],[-7.529688,-4.381543],[5.748657,4.704494],[-0.393783,7.116403],[-1.832230,3.115103],[7.114775,8.278395],[-3.038552,5.394336],[-1.696197,6.712873],[-6.012262,4.838661],[6.912581,-2.420370],[5.344865,5.242254],[-7.888231,-2.942037],[6.457254,-4.197956],[-0.853531,4.613688],[-3.726882,-0.870613],[-7.452151,4.463678],[7.898987,9.896600],[-2.268915,6.283230],[7.625420,8.639399],[6.894931,-2.867283],[6.312520,5.633024],[7.565752,-0.043927],[-6.780685,-5.582917],[1.677637,9.633498],[8.751305,7.524221],[-6.917735,6.821219],[-1.720581,8.840209],[-0.247683,-7.152943],[-3.682364,-9.524993],[5.497912,-2.255264],[9.939978,-7.405576],[-2.265516,6.962743],[-9.341163,-0.644352],[0.725701,1.949575],[-1.082647,-2.142475],[-4.952244,1.865733],[-5.904118,-0.721887],[-8.801658,0.555469],[-6.305749,-1.618450],[5.169688,-2.337694],[9.489455,-2.983635],[-1.674375,-3.879225],[-4.159959,0.513999],[6.945062,-3.781232],[-4.620262,0.888530],[9.696335,-6.183095],[-4.675911,-5.078655],[-4.051405,-2.883595],[5.453668,8.755789],[-9.338643,2.166172],[-5.783367,9.830794],[3.186194,2.263182],[5.057732,-3.254801],[-4.586520,-2.557398],[-1.677685,-0.175063],[8.267045,-2.402038],[-5.921601,-8.515668],[4.740633,3.822983],[-1.689883,1.611032],[-4.474179,-0.801627],[-7.469069,-2.916768],[3.854317,0.275833],[-6.127072,9.942400],[-9.293703,-2.652080],[4.152703,5.515493],[-7.069245,-1.373222],[-6.358204,-9.716358],[-4.668026,-6.825057],[-3.540026,2.964772],[5.864891,0.699646],[1.844892,5.677469],[-0.934378,-2.681295],[-5.223186,-0.128402],[-9.223110,3.247817],[-5.005870,-6.040754],[-2.054934,9.118635],[6.476407,4.190367],[-1.582180,-9.698477],[7.622874,1.215263],[-0.515168,9.221755],[-8.977861,8.892686],[-2.053188,6.364114],[6.700829,8.160562],[-7.313267,-7.984480],[-5.568398,-0.653624],[-8.782218,-4.139990],[-6.156733,5.630737],[4.732586,6.038107],[-1.765836,-7.715626],[7.967715,7.986566],[2.570765,5.231033],[-2.414713,-6.815308],[3.891491,0.017075],[2.405924,4.433188],[3.204481,-6.730670],[0.705328,-2.066588],[5.341303,-4.470049],[-6.427906,6.752176],[-9.852008,9.124259],[-4.632342,3.022792],[-6.382472,9.108932],[-7.580386,2.098663],[7.659814,-8.433654],[3.092153,-0.859957],[-1.757794,-4.298451],[-5.264473,-0.103726],[-1.121744,2.812917],[8.568859,-2.467940],[9.767750,-4.976480],[-6.685010,-7.962532],[9.195757,-7.712515],[8.948778,1.265115],[5.167825,7.358684],[0.459027,-7.554213],[1.303962,-7.291562],[0.201031,3.083597],[-0.457221,-5.444606],[9.147363,-5.932179],[-2.363347,-2.466795],[3.736546,9.066983],[8.772111,6.626377],[-9.841239,-1.091433],[1.797962,5.580835],[7.586478,-1.700891],[-4.731914,-4.998352],[0.750350,-4.230515],[0.634262,1.005493],[6.551966,6.857433],[0.767337,9.271030],[-1.117110,-2.262591],[7.018808,-8.640812],[-5.765447,-9.366092],[-4.165256,-3.613195],[-3.445778,5.358886],[2.497516,-3.803343],[2.120503,4.771724],[-7.034642,-8.382151],[-9.614152,2.132846],[-3.975115,-6.454061],[-3.420865,5.945429],[1.730399,-6.316946],[9.103281,3.050261],[-5.440470,2.408576],[5.508676,7.419482],[1.433215,1.659707],[-8.783014,4.133068],[-9.384193,0.846927],[8.810495,0.436689],[-2.312990,-6.171222],[6.906922,7.688049],[4.803945,3.786969],[0.932011,7.837182],[4.112428,6.956399],[6.928928,-3.104171],[-8.769655,-3.658253],[4.045956,7.910020],[4.189314,5.107983],[8.439137,-1.237120],[7.747068,-1.080496],[-1.923265,0.440007],[-8.512655,8.815152],[-4.310855,9.691812],[4.784343,-6.687102],[-3.223106,0.315400],[6.824882,-0.062245],[7.558169,1.799058],[3.825096,2.673873],[0.060275,0.448438],[3.659757,1.721028],[-0.519300,4.074669],[-4.388371,-4.715151],[0.712333,-0.176484],[-0.944613,2.176105],[-2.213431,-5.575340],[-1.000168,6.228895],[3.006918,2.034458],[-0.626319,-4.313377],[-9.112465,-1.676974],[0.684541,2.951225],[-3.678084,7.215706],[-5.546867,-5.278446],[7.222329,-3.039123],[5.529789,-2.052623],[-4.654788,5.297357],[-2.400255,-6.272089],[9.460031,-8.426541],[4.633325,3.935735],[5.677622,8.568329],[-8.338332,-0.252161],[-4.609672,9.570522],[6.513938,-9.909995],[-7.267765,-7.272791],[7.015477,5.640673],[0.288156,3.122819],[0.382706,7.751153],[9.187110,-1.385632],[-2.257411,-2.480618],[-9.677893,-9.002168],[6.465247,4.236184],[3.560225,-5.341235],[-4.528591,6.163748],[2.788008,3.353366],[-3.794176,-6.490864],[8.601726,3.143625],[1.578884,-0.753122],[6.177711,6.490283],[-0.522404,-6.494779],[-9.965090,-7.930568],[-6.256155,0.064589],[8.857119,-6.158471],[6.765035,5.063647],[-3.339382,-7.446317],[-2.429099,6.873124],[-1.722977,-6.608656],[3.113192,-0.286944],[-9.331093,4.807685],[-1.962683,-9.529946],[6.402777,0.894228],[9.020300,1.660483],[7.519240,-4.859507],[-4.326148,-5.029063],[-4.396510,5.739292],[0.843183,-0.210493],[9.871021,3.727508],[-0.412955,9.636337],[-6.484474,-5.586064],[6.496855,4.372180],[7.600145,1.688388],[2.500555,-7.008434],[-0.879688,-3.051788],[6.929672,2.104957],[-2.261203,7.122472],[3.879923,-9.329707],[3.072516,7.105389],[-0.343271,-1.505508],[-9.973297,3.899562],[3.567295,-1.446778],[-8.991426,3.559862],[6.627058,-3.290563],[2.150083,-8.181666],[-2.749248,3.911178],[9.061769,-9.966407],[1.090639,7.813411],[-0.938627,-6.733360],[9.136359,-5.420434],[4.197392,7.026813],[-2.349522,-5.399218],[5.745515,-1.820375],[2.782403,-1.282751],[6.475813,-1.144868],[6.832472,-3.985630],[-0.180080,4.653581],[5.172422,6.950609],[8.888133,5.025954],[-5.555341,-9.272360],[-3.223548,0.758472],[-7.511226,-8.568805],[8.097081,-2.798596],[6.598385,-1.579936],[0.252670,3.689715],[0.199605,9.176993],[5.616579,3.010781],[-9.052791,-1.782649],[-3.808582,-0.813094],[2.822144,-2.957296],[0.178555,3.619432],[-1.835558,0.563327],[7.459733,-6.663427],[5.931947,6.452181],[3.176538,1.400064],[-9.005126,-3.932869],[4.316588,6.212401],[-5.452271,2.831404],[8.574887,-0.129582],[4.917257,1.786631],[-9.953886,3.953718],[-1.305138,-9.727496],[9.943080,4.503396],[7.945595,9.864058],[1.847888,6.113690],[-7.727012,7.179966],[6.042994,8.808615],[2.175265,8.881085],[4.551185,-8.149075],[-2.873085,5.099189],[-6.169533,1.263246],[-6.322288,-9.702549],[-8.612419,9.422173],[9.559909,-7.650964],[-2.752307,5.766602],[-6.145171,8.234220],[8.663348,0.359014],[1.243786,-8.734254],[-6.300031,4.875363],[-8.477485,-2.622633],[-0.966220,3.818080],[-2.157380,-5.639104],[-5.573431,9.170128],[7.821229,-3.445076],[-7.721463,-5.293372]], dtype = "float64")#candidate|4853|(455, 2)|const|float64
call_4852 = relay.TupleGetItem(func_2282_call(relay.reshape(const_4853.astype('float64'), [10, 7, 13])), 0)
call_4854 = relay.TupleGetItem(func_2285_call(relay.reshape(const_4853.astype('float64'), [10, 7, 13])), 0)
var_4860 = relay.var("var_4860", dtype = "int64", shape = (7, 4, 4))#candidate|4860|(7, 4, 4)|var|int64
bop_4861 = relay.bitwise_and(bop_4832.astype('int16'), relay.reshape(var_4860.astype('int16'), relay.shape_of(bop_4832))) # shape=(7, 4, 4)
var_4872 = relay.var("var_4872", dtype = "int64", shape = (7, 4, 4))#candidate|4872|(7, 4, 4)|var|int64
bop_4873 = relay.multiply(var_4831.astype('float64'), relay.reshape(var_4872.astype('float64'), relay.shape_of(var_4831))) # shape=(7, 4, 4)
func_1288_call = mod.get_global_var('func_1288')
func_1293_call = mutated_mod.get_global_var('func_1293')
const_4882 = relay.const([-9,-2,-9,8,-3,-6,-1,7,-4,-10,-10,-9,-7,9,3,-6,1,3,-1,3,-6,-7,2,4,3,-4,-9,1,6,-1,6,-1,7,8,-5,-4,-10,7,-4,-9,6,-2,-6,1,3,-3,1,-7,-8,-10,7,-5,6,-8,4,7,-3,-5,4,-1,9,-7,9,-3,-10,-1,7,-2,7,-3,-9,1,1,-1,1,1,7,2,-1,-1,8,-8,8,-9,-1,-4,-3,2,-10,-1,6,-2,-10,-7,9,-4,1,-3,-1,4,5,2,-2,5,9,2,8,8,-8,10,6,8,5,6,4,-8,7,-8,-6,10,7,-3,-6,2,8,5,8,-1,5,-9,-5,-9,-6,-1,9,8,-3,-2,1,-7,8,3,5,8,-1,-10,-5,9,5,-4,1,-2,-2,-5,10,2,-2,-3,8,9,-2,6,-10,-9,-6,3,4,2,-10,8,7,-8,-8,-9,6,-8,9,-6,-10,5,-9,-5,-4,10,4,-5,-2,3,8,6,2,-2,7,-1,2,-5,4,3,-7,-3,-3,-5,5,-2,-9,-7,-2,3,7,-6,-10,10,-1,4,-8,-10,-9,-5,-2,-9,7,4,-3,7,-1,-8,4,-6,3,-2,1,3,6,6,6,8,1,1,9,5,2,10,3,2,10,-6,-5,-2,-8,-8,-4,-6,-8,-9,6,6,7,-6,4,4,-2,-4,3,10,2,4,4,-1,6,1,3,-1,-3,-9,-5,-10,7,-3,-10,10,1,-10,-3,-9,-2,-2,-6,-3,10,-8,7,9,4,4,7,7,-7,4,9,-8,2,6,-3,-8,3,5,8,5,7,7,3,-5,5,10,-1,-7,-10,-2,3,3,10,7,-1,-9,4,-6,1,9,9,10,-10,6,9,1,9,-8,-2,-4,-9,-5,10,10,-3,7,-10,5,-3,10,-8,-4,4,6,6,1,7,-6,5,8,7,-1,2,7,-4,7,-5,-1,-2,-5,10,-2,1,-2,6,-6,7,9,3,9,10,-1,7,-6,-10,-7,-8,-5,-9,-7,1,1,3,1,6,3,-6,-5,-8,-3,-3,-9,1,3,-3,6,-6,-3,-7,-2,2,2,-4,10,7,2,-4,-4,7,5,-8,5,8,-10,2,-9,-1,-2,-8,-7,-8,9,-10,-4,-10,6,-2,1,-8,-6,-7,7,-7,-3,3,-2,-8,2,-3,6,7,-1,-4,-8,5,5,10,10,-2,2,2,8,-4,10,9,3,10,5,-8,8,-7,-7,-6,-4,-9,-4,2,-3,-4,-6,-10,9,2,-6,6,-4,-7,-10,8,-9,-10,-8,-7,-9,-3,-4,-3,-5,-4,5,-2,-3,-2,10,-6,-6,6,-9,4,-5,-2,-2,-9,-1,-7,-3,7,-10,8,8,-2,8,-10,-10,4,3,-4,4,5,6,-4,-3,-4,10,4,4,6,-4,9,-3,9,1,-3,7,-10,2,-2,5,-9,-8,6,-8,3,1,8,-9,9,2,-6,-2,2,2,-10,-9,-5,3,-8,6,-5,-7,10,-9,5,3,-10,8,10,5,-9,8,-3,5,-3,7,7,-10,10,-6,-3,-6,3,-5,6,-4,6,6,4,-5,2,5,-5,-4,4,-10,10,-10,-2,7,-6,-10,4,4,-7,5,10,-9,-2,-10,5,-3,-7,-8,-7,6,6,8,2,-8,-10,8,-10,4,10,-8,3,-9,-6,9,2,9,-1,-9,-8,4,7,-9,-1,-9,-7,7,10,-10,3,-10,-5,6,-5,-9,-10,-4,-6,-4,-5,7,1,2,10,-10,1,1,-10,-10,-9,-1,-3,-6,7,6,-4,-2,7,-10,5,-3,9,-2,10,-5,2,-8,8,-4,7,-7,-2,-7,4,-9,7,-5,7,-5,-9,6,6,-6,9,1,9,6,-6,2,2,1,5,-6,-5,-7,-1,8,8,-4,-2,-4,5,-4,-5,-3,10,-8,1,-7,-5,3,-9,5,-2,6,-6,-9,-10,-1,1,-6,7,-6,-6,-7,7,-6,10,6,2,8,-10,-8,7,-9,-3,-9,-7,-1,10,-5,-7,-5,-4,-8,1,-4,-2,3,-2,-10,-7,7,6,8,-7,4,4,2,-10,-4,-6,-4,-9,-10,1,-7,-8,4,-2,9,7,-5,3,-9,-8,4,1,2,4,2,1,4,2,5,-10,5,-10,-8,-6,5,-2,-7,6,-5,-3,-6,6,6,-9,6,-5,-9,-9,-7,-6,10,1,2,-1,10,6,10,7,4,9,5,10,1,3,-6,-10,8,6,-1,-9,-10,-6,-8,8,-8,1,3,9,1,-1,2,5,-7,2,-7,8,5,-10,8,5,7,3,-7,3,6,-5,7,10,3,1,-2,-9,-4,10,-9,10,-2,7,7,7,3,-4,4,-4,6,6,4,-5,-4,-10,3,-10,-7,4,4,9,-7,-8,9,-7,7,2,-9,-10,3,6,4,-3,-1,-4,10,4,8,-8,6,-1,1,6,2,2,8,3,6,-2,3,-3,1,10,-3,-6,4,-4,3,-2,6,2,4,5,-1,8,-2,7,-10,3,-3,-2,8,-1,-4,8,9,-3,5,-4,2,10,-2,-7,2,-6,1,-4,-4,2,10,-7,9,-3,-5,-1,-8,2,8,4,1,6,8,3,-7,-9,4,-5,5,9,6,8,3,-5,9,-10,1,-2,-6,-10,-9,-9,6,-10,-3,-2,1,4,-10,-2,10,1,7,-10,-10,7,1,4,9,8,-3,10,10,7,-5,-3,10,-4,-9,2,-7,9,-3,5,9,6,2,7,2,-4,-4,9,10,2,2,-7,1,6,2,-9,-5,-4,-3,-8,6,1,8,-5,7,-8,-1,7,2,9,-7,5,-1,6,2,8,-8,10,-1,6,2,5,8,7,-7,6,-5,5,-1,-10,7,-3,-7,2,-7,5,10,-5,4,-10,10,-7,8,1,-3,6,-8,-6,1,-4,4,-8,-1,-5,-8,-10,-3,-3,10,-2,-4,-4,7,-1,8,7,-5,6,-1,-5,-6,-7,-1,-1,6,-6,4,-5,10,9,1,9,2,-4,-6,2,-3,4,1,6,9,-8,-2,5,-8,7,2,-7,-3,9,-1,3,2,-9,3,10,7,-6,-2,-10,-7,2,-5,8,-4,-7,-10,1,10,-4,-5,-6,4,-1,4,9,-8,-3,-1,-9,7,-2,-6,8,-4,8,7,-4,-7,7,6,-7,6,9,10,-4,6,6,10,-8,6,-4,4,-6,-4,-4,-1,-7,10,4,-6,9,-6,-3,-8,-1,-1,-1,-4,5,2,-8,-8,-7,3,-8,-2,2,-3,4,-8,-6,-9,-3,4,1,-5,8,-6,-4,8,9,-1,10,5,-3,-9,1,8,3,2,-9,-2,10,1,6,-6,-9,-7,-10,3,7,-6,3,4,7,7,3,-2,7,9,-3,2,3,-3,4,-8,-9,1,8,8,-3,3,6,1,1,1,-6,-9,2,1,7,9,4,10,7,-9,-4,-8,-10,-6,-10,8,-9,2,7,7,5,-4,8,-10,3,-7,4,9], dtype = "int64")#candidate|4882|(1320,)|const|int64
var_4883 = relay.var("var_4883", dtype = "float32", shape = (594,))#candidate|4883|(594,)|var|float32
call_4881 = relay.TupleGetItem(func_1288_call(relay.reshape(const_4882.astype('int64'), [15, 8, 11]), relay.reshape(const_4882.astype('int64'), [15, 8, 11]), relay.reshape(var_4883.astype('float32'), [6, 99]), ), 3)
call_4884 = relay.TupleGetItem(func_1293_call(relay.reshape(const_4882.astype('int64'), [15, 8, 11]), relay.reshape(const_4882.astype('int64'), [15, 8, 11]), relay.reshape(var_4883.astype('float32'), [6, 99]), ), 3)
func_4470_call = mod.get_global_var('func_4470')
func_4473_call = mutated_mod.get_global_var('func_4473')
call_4887 = relay.TupleGetItem(func_4470_call(relay.reshape(call_4881.astype('float32'), [1560,])), 3)
call_4888 = relay.TupleGetItem(func_4473_call(relay.reshape(call_4881.astype('float32'), [1560,])), 3)
output = relay.Tuple([call_4843,var_4844,call_4852,const_4853,bop_4861,bop_4873,call_4881,const_4882,var_4883,call_4887,])
output2 = relay.Tuple([call_4845,var_4844,call_4854,const_4853,bop_4861,bop_4873,call_4884,const_4882,var_4883,call_4888,])
func_4899 = relay.Function([var_4830,var_4831,var_4844,var_4860,var_4872,var_4883,], output)
mod['func_4899'] = func_4899
mod = relay.transform.InferType()(mod)
var_4900 = relay.var("var_4900", dtype = "int64", shape = (7, 1, 4))#candidate|4900|(7, 1, 4)|var|int64
var_4901 = relay.var("var_4901", dtype = "int64", shape = (7, 4, 4))#candidate|4901|(7, 4, 4)|var|int64
var_4902 = relay.var("var_4902", dtype = "float32", shape = (1120,))#candidate|4902|(1120,)|var|float32
var_4903 = relay.var("var_4903", dtype = "int64", shape = (7, 4, 4))#candidate|4903|(7, 4, 4)|var|int64
var_4904 = relay.var("var_4904", dtype = "int64", shape = (7, 4, 4))#candidate|4904|(7, 4, 4)|var|int64
var_4905 = relay.var("var_4905", dtype = "float32", shape = (594,))#candidate|4905|(594,)|var|float32
output = func_4899(var_4900,var_4901,var_4902,var_4903,var_4904,var_4905,)
func_4906 = relay.Function([var_4900,var_4901,var_4902,var_4903,var_4904,var_4905,], output)
mutated_mod['func_4906'] = func_4906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2811_call = mod.get_global_var('func_2811')
func_2812_call = mutated_mod.get_global_var('func_2812')
call_4917 = relay.TupleGetItem(func_2811_call(), 0)
call_4918 = relay.TupleGetItem(func_2812_call(), 0)
func_2793_call = mod.get_global_var('func_2793')
func_2795_call = mutated_mod.get_global_var('func_2795')
const_4928 = relay.const(False, dtype = "bool")#candidate|4928|()|const|bool
call_4927 = relay.TupleGetItem(func_2793_call(relay.reshape(const_4928.astype('bool'), [])), 0)
call_4929 = relay.TupleGetItem(func_2795_call(relay.reshape(const_4928.astype('bool'), [])), 0)
func_1821_call = mod.get_global_var('func_1821')
func_1823_call = mutated_mod.get_global_var('func_1823')
var_4952 = relay.var("var_4952", dtype = "float32", shape = (3120,))#candidate|4952|(3120,)|var|float32
call_4951 = relay.TupleGetItem(func_1821_call(relay.reshape(var_4952.astype('float32'), [15, 16, 13])), 2)
call_4953 = relay.TupleGetItem(func_1823_call(relay.reshape(var_4952.astype('float32'), [15, 16, 13])), 2)
output = relay.Tuple([call_4917,call_4927,const_4928,call_4951,var_4952,])
output2 = relay.Tuple([call_4918,call_4929,const_4928,call_4953,var_4952,])
func_4955 = relay.Function([var_4952,], output)
mod['func_4955'] = func_4955
mod = relay.transform.InferType()(mod)
var_4956 = relay.var("var_4956", dtype = "float32", shape = (3120,))#candidate|4956|(3120,)|var|float32
output = func_4955(var_4956)
func_4957 = relay.Function([var_4956], output)
mutated_mod['func_4957'] = func_4957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2006_call = mod.get_global_var('func_2006')
func_2008_call = mutated_mod.get_global_var('func_2008')
call_4961 = relay.TupleGetItem(func_2006_call(), 1)
call_4962 = relay.TupleGetItem(func_2008_call(), 1)
output = call_4961
output2 = call_4962
func_5013 = relay.Function([], output)
mod['func_5013'] = func_5013
mod = relay.transform.InferType()(mod)
mutated_mod['func_5013'] = func_5013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5013_call = mutated_mod.get_global_var('func_5013')
call_5014 = func_5013_call()
output = call_5014
func_5015 = relay.Function([], output)
mutated_mod['func_5015'] = func_5015
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5016 = relay.const([[[-10,-7,-6,8,2],[-2,4,10,-2,3],[-2,-8,-9,-5,6]],[[6,-10,-6,9,-2],[6,4,5,3,-4],[5,-7,7,9,-8]],[[-10,1,-7,-8,3],[-7,-5,-10,4,-8],[-10,-6,-6,-2,-5]],[[-10,-5,6,-7,10],[6,10,-6,-2,6],[1,-4,2,8,-5]],[[-4,-9,-5,3,-1],[4,8,-9,-6,7],[10,7,-2,4,-3]],[[-4,-3,8,-8,-1],[-3,6,-3,-8,-5],[-3,2,1,-1,6]],[[3,2,1,-5,10],[7,5,5,-6,6],[-7,-8,-1,4,3]],[[7,-8,-3,7,-9],[8,-2,-7,8,9],[7,-5,6,-6,-7]],[[8,7,2,-6,-2],[8,1,10,7,3],[5,4,5,-5,10]],[[-1,7,8,-10,8],[9,9,-6,-8,-8],[-8,1,3,4,6]],[[-2,-6,-5,-6,-9],[6,-10,8,5,-6],[-6,-5,8,2,8]]], dtype = "int64")#candidate|5016|(11, 3, 5)|const|int64
var_5017 = relay.var("var_5017", dtype = "int64", shape = (11, 3, 5))#candidate|5017|(11, 3, 5)|var|int64
bop_5018 = relay.logical_xor(const_5016.astype('int64'), relay.reshape(var_5017.astype('int64'), relay.shape_of(const_5016))) # shape=(11, 3, 5)
uop_5022 = relay.atanh(var_5017.astype('float32')) # shape=(11, 3, 5)
const_5024 = relay.const([[[-0.265121,-4.845337,-2.251416,1.861469,0.762424],[3.770408,9.662825,4.425629,5.716492,-1.898967],[-3.043243,6.398920,7.731386,9.584660,-7.566253]],[[3.613144,9.005853,9.092974,-1.677060,6.662972],[-4.049005,4.901477,-9.840397,-6.899733,2.455586],[-8.400122,-9.386086,9.634378,4.852354,9.056071]],[[9.394782,-3.371981,-7.565805,-5.799953,-3.400769],[-0.630725,4.608489,-3.321522,-5.537503,4.041095],[9.093911,-6.477871,5.170649,6.336287,-2.425725]],[[8.403995,2.475089,-4.632322,5.298281,9.276337],[-6.354595,-2.158038,7.146080,2.730620,4.908489],[-1.381279,-8.348323,-1.967563,-1.531891,-6.457901]],[[-0.564423,-7.464056,1.115894,2.455871,6.885872],[-8.892836,0.690616,3.301102,2.289613,-3.130047],[9.115995,-5.066240,3.298520,-5.652010,-7.827408]],[[-2.676744,-6.781230,1.739703,2.343712,-6.032946],[1.093784,-2.554177,0.066531,6.099121,-2.205868],[-6.440145,-0.169029,0.461839,5.690635,8.879516]],[[-1.699670,2.416464,-1.448831,-4.621725,9.399187],[1.208657,2.049744,5.182676,0.258428,-0.911644],[9.884002,-0.681470,6.308475,2.838836,6.519455]],[[-3.787387,0.422102,-0.746103,-7.269549,3.075210],[0.747684,-3.581030,6.237202,7.402226,0.462459],[-8.208250,-1.052567,-6.392600,7.146412,3.693737]],[[1.300770,-9.957989,6.632093,-0.146377,-0.603788],[8.063874,-5.156723,-1.271818,-3.451333,3.522921],[7.969906,-1.750186,-3.821977,7.519255,-7.783158]],[[-6.594666,9.100594,-2.000505,5.935304,-4.846052],[0.030016,1.366050,-1.138172,9.977020,1.973874],[-0.918913,-6.913180,8.659215,1.450680,-8.797544]],[[4.168352,3.082970,-2.053718,4.315216,6.732270],[6.458187,7.923545,-0.906004,-1.652000,-1.279554],[-3.154615,7.990174,1.547414,1.090467,2.044153]]], dtype = "float32")#candidate|5024|(11, 3, 5)|const|float32
bop_5025 = relay.bitwise_or(uop_5022.astype('int32'), relay.reshape(const_5024.astype('int32'), relay.shape_of(uop_5022))) # shape=(11, 3, 5)
func_1935_call = mod.get_global_var('func_1935')
func_1937_call = mutated_mod.get_global_var('func_1937')
call_5028 = relay.TupleGetItem(func_1935_call(), 1)
call_5029 = relay.TupleGetItem(func_1937_call(), 1)
output = relay.Tuple([bop_5018,bop_5025,call_5028,])
output2 = relay.Tuple([bop_5018,bop_5025,call_5029,])
func_5036 = relay.Function([var_5017,], output)
mod['func_5036'] = func_5036
mod = relay.transform.InferType()(mod)
var_5037 = relay.var("var_5037", dtype = "int64", shape = (11, 3, 5))#candidate|5037|(11, 3, 5)|var|int64
output = func_5036(var_5037)
func_5038 = relay.Function([var_5037], output)
mutated_mod['func_5038'] = func_5038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1935_call = mod.get_global_var('func_1935')
func_1937_call = mutated_mod.get_global_var('func_1937')
call_5076 = relay.TupleGetItem(func_1935_call(), 1)
call_5077 = relay.TupleGetItem(func_1937_call(), 1)
output = relay.Tuple([call_5076,])
output2 = relay.Tuple([call_5077,])
func_5082 = relay.Function([], output)
mod['func_5082'] = func_5082
mod = relay.transform.InferType()(mod)
output = func_5082()
func_5083 = relay.Function([], output)
mutated_mod['func_5083'] = func_5083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1850_call = mod.get_global_var('func_1850')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_5084 = relay.TupleGetItem(func_1850_call(), 0)
call_5085 = relay.TupleGetItem(func_1851_call(), 0)
func_1935_call = mod.get_global_var('func_1935')
func_1937_call = mutated_mod.get_global_var('func_1937')
call_5094 = relay.TupleGetItem(func_1935_call(), 3)
call_5095 = relay.TupleGetItem(func_1937_call(), 3)
func_3821_call = mod.get_global_var('func_3821')
func_3823_call = mutated_mod.get_global_var('func_3823')
call_5097 = relay.TupleGetItem(func_3821_call(), 1)
call_5098 = relay.TupleGetItem(func_3823_call(), 1)
func_2675_call = mod.get_global_var('func_2675')
func_2679_call = mutated_mod.get_global_var('func_2679')
var_5115 = relay.var("var_5115", dtype = "float64", shape = ())#candidate|5115|()|var|float64
const_5116 = relay.const([2.497183,6.710211,-6.917134,-8.180077,3.267180,5.699600,-9.046360,-4.008515,4.229073,5.443501,-4.777495,-8.448424,2.326309,3.309260,8.069998,1.330809,8.630129,3.728254,3.525530,-2.997063,-7.099803,-3.823574,-4.985413,2.703402,1.695451,3.833416,0.744330,-0.444945,5.799037,3.042421,-7.992774,4.465460,9.704786,-9.625219,-2.527705,0.414808,-4.529857,9.823250,7.262368,-1.642759,5.440555,-5.176564,-3.583979,8.703445,-7.092681,-1.199831,-5.243378,8.115715,6.590536,-8.285993,-7.476650,-2.519107,0.930084,2.934484,-6.197663,-5.266506,2.853754,-3.873818,4.996284,2.534463,9.400778,5.754621,-3.417418,6.292299,-0.810394,8.231210,-4.555598,3.326749,-9.006519,-4.603919,-6.363659,-9.517457,4.043959,4.152202,6.011637,-0.393847,3.589283,-7.295247,-1.140573,5.292783,5.558920,6.459370,-4.656701,-0.385083,2.341911,2.133522,6.517921,-2.578386,-8.988906,9.237404,-8.473226,-3.328206,9.714366,3.238632,9.345799,-4.473959,-1.945001,-3.807016,-6.338317,3.198521,8.907611,-6.496412,-4.971859,3.187127,-5.739423,-4.129218,-4.733250,-2.672279,5.037404,-6.083493,-1.830322,-6.342848,-6.817430,5.571828,4.310385,6.648192,0.142659,5.116145,-0.089841,0.178820,9.490197,9.546935,-9.591416,-9.329772,-4.495474,-3.678047,8.165000,8.162943,8.854532,2.944176,9.973056,4.602375,-4.501698,-8.012875,4.592840,7.252550,-8.659379,9.776612,4.565193,-8.976222,-3.454287,-9.996390,5.019738,6.284471,2.131164,2.434729,4.842650,9.954515,9.769736,-7.739489,9.090381,-1.611296,9.908198,4.811117,9.362753,-9.957910,-1.420475,1.961034,-3.405440,7.654484,3.820794,-2.564030,7.614487,-1.235671,2.895101,-3.100669,8.576680,-3.357719], dtype = "float64")#candidate|5116|(168,)|const|float64
call_5114 = relay.TupleGetItem(func_2675_call(relay.reshape(var_5115.astype('float64'), []), relay.reshape(const_5116.astype('float64'), [168,]), ), 4)
call_5117 = relay.TupleGetItem(func_2679_call(relay.reshape(var_5115.astype('float64'), []), relay.reshape(const_5116.astype('float64'), [168,]), ), 4)
output = relay.Tuple([call_5084,call_5094,call_5097,call_5114,var_5115,const_5116,])
output2 = relay.Tuple([call_5085,call_5095,call_5098,call_5117,var_5115,const_5116,])
func_5139 = relay.Function([var_5115,], output)
mod['func_5139'] = func_5139
mod = relay.transform.InferType()(mod)
mutated_mod['func_5139'] = func_5139
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5140 = relay.var("var_5140", dtype = "float64", shape = ())#candidate|5140|()|var|float64
func_5139_call = mutated_mod.get_global_var('func_5139')
call_5141 = func_5139_call(var_5140)
output = call_5141
func_5142 = relay.Function([var_5140], output)
mutated_mod['func_5142'] = func_5142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3927_call = mod.get_global_var('func_3927')
func_3928_call = mutated_mod.get_global_var('func_3928')
call_5147 = relay.TupleGetItem(func_3927_call(), 1)
call_5148 = relay.TupleGetItem(func_3928_call(), 1)
output = call_5147
output2 = call_5148
func_5174 = relay.Function([], output)
mod['func_5174'] = func_5174
mod = relay.transform.InferType()(mod)
mutated_mod['func_5174'] = func_5174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5174_call = mutated_mod.get_global_var('func_5174')
call_5175 = func_5174_call()
output = call_5175
func_5176 = relay.Function([], output)
mutated_mod['func_5176'] = func_5176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3783_call = mod.get_global_var('func_3783')
func_3785_call = mutated_mod.get_global_var('func_3785')
call_5217 = func_3783_call()
call_5218 = func_3783_call()
func_1935_call = mod.get_global_var('func_1935')
func_1937_call = mutated_mod.get_global_var('func_1937')
call_5223 = relay.TupleGetItem(func_1935_call(), 2)
call_5224 = relay.TupleGetItem(func_1937_call(), 2)
func_4790_call = mod.get_global_var('func_4790')
func_4793_call = mutated_mod.get_global_var('func_4793')
var_5228 = relay.var("var_5228", dtype = "float64", shape = (156,))#candidate|5228|(156,)|var|float64
call_5227 = relay.TupleGetItem(func_4790_call(relay.reshape(var_5228.astype('float64'), [156,])), 2)
call_5229 = relay.TupleGetItem(func_4793_call(relay.reshape(var_5228.astype('float64'), [156,])), 2)
func_3492_call = mod.get_global_var('func_3492')
func_3494_call = mutated_mod.get_global_var('func_3494')
call_5235 = relay.TupleGetItem(func_3492_call(relay.reshape(call_5227.astype('float64'), [3, 52])), 2)
call_5236 = relay.TupleGetItem(func_3494_call(relay.reshape(call_5227.astype('float64'), [3, 52])), 2)
output = relay.Tuple([call_5217,call_5223,call_5227,var_5228,call_5235,])
output2 = relay.Tuple([call_5218,call_5224,call_5229,var_5228,call_5236,])
func_5243 = relay.Function([var_5228,], output)
mod['func_5243'] = func_5243
mod = relay.transform.InferType()(mod)
var_5244 = relay.var("var_5244", dtype = "float64", shape = (156,))#candidate|5244|(156,)|var|float64
output = func_5243(var_5244)
func_5245 = relay.Function([var_5244], output)
mutated_mod['func_5245'] = func_5245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2874_call = mod.get_global_var('func_2874')
func_2876_call = mutated_mod.get_global_var('func_2876')
call_5253 = func_2874_call()
call_5254 = func_2874_call()
func_1557_call = mod.get_global_var('func_1557')
func_1559_call = mutated_mod.get_global_var('func_1559')
call_5265 = relay.TupleGetItem(func_1557_call(), 0)
call_5266 = relay.TupleGetItem(func_1559_call(), 0)
func_2699_call = mod.get_global_var('func_2699')
func_2702_call = mutated_mod.get_global_var('func_2702')
call_5275 = relay.TupleGetItem(func_2699_call(relay.reshape(call_5265.astype('uint8'), [5, 9, 3])), 0)
call_5276 = relay.TupleGetItem(func_2702_call(relay.reshape(call_5265.astype('uint8'), [5, 9, 3])), 0)
func_2793_call = mod.get_global_var('func_2793')
func_2795_call = mutated_mod.get_global_var('func_2795')
var_5282 = relay.var("var_5282", dtype = "bool", shape = ())#candidate|5282|()|var|bool
call_5281 = relay.TupleGetItem(func_2793_call(relay.reshape(var_5282.astype('bool'), [])), 1)
call_5283 = relay.TupleGetItem(func_2795_call(relay.reshape(var_5282.astype('bool'), [])), 1)
func_1042_call = mod.get_global_var('func_1042')
func_1047_call = mutated_mod.get_global_var('func_1047')
const_5301 = relay.const([-5,-6,3,-4,-8,9,-3,-4,3,10,-8,4,4,-6,-1,-2,7,3,-2,1,1,9,-2,-2,3,-6,2,-6,10,-1,10,9,3,-9,8,-4,-9,-4,8,-7,-10,1,-3,-6,9,-3,-5,6,4,-3,-5,-1,10,3,-3,-8,-3,3,-5,10,8,-5,-8,1,6,4,10,6,-3,7,-1,-7,5,-2,-8,-6,-8,1,2,9,5,3,-1,5,-10,-7,9,-7,1,7,-4,8,-6,9,1,7,-1,1,-9,-5,-9,2,-4,6,-10,7,-8,9,5,1,8,-2,-10,3,9,10,8,-8,3,-2,-9,-9,5,10,-10,6,10,-8,-2,2,9,-9,-4,-1,-3,9,1,10,8,8,10,5,-1,-2], dtype = "int64")#candidate|5301|(144,)|const|int64
const_5302 = relay.const([-0.113114,-8.578458,6.907048,1.216546,5.766622,-1.714775,-2.793545,-4.600685,-8.654752,7.799028,-2.751068,-3.329126,-6.342296,3.405107,5.009307,-7.252656,-7.639069,0.669766,6.556732,-9.615488,-5.616635,6.595967,-7.830471,7.158984,3.581385,3.936905,-5.829474,4.676466,-0.670725,8.260486,-3.317841,3.490410,-9.290917,-2.908076,-3.047277,-5.714549,-3.022503,0.614423,1.027270,2.138317,1.681398,-0.116962,4.935760,-8.328359,-9.909793,6.199431,-3.528127,7.618465,-8.200175,-4.642856,-7.610757,8.054304,2.128883,8.445121,2.776193,2.079511,-5.256795,3.983156,4.971175,1.885986,2.740834,2.198092,-4.120589,-6.065681,-8.659157,3.537743,5.478635,3.895531,1.040396,1.556099,-1.122372,5.453708,-3.775567,-9.742699,7.997573,-8.021644,-8.165926,-9.587720,-5.018829,9.424947,6.833056,-8.786089,-5.246208,7.705211,-1.365722,-0.353391,-1.190187,5.168652,-3.023961,-5.067274,-4.569439,-2.675496,-7.431883,8.176024,1.504924,-8.967430,9.229263,2.978468,-2.268222,8.549849,8.658657,7.417673,9.131048,2.157839,-7.959002,1.552854,-6.115583,-0.390843,-3.915970,5.484464,-1.396259,6.429200,-5.111667,9.137678,3.929076,-5.240073,5.203251,-8.766279,-7.117224,-9.228901,-7.030540,9.421414,-6.164944,0.692377,9.650919,-9.013113,-4.381680,2.561022,2.471429,-1.626744,3.215549,2.710838,-3.051442,-8.924509,6.435945,-5.127087,-3.225783,-4.538491,1.960139,-6.130617,1.559884,-3.673904,-1.599273,-0.687947,5.294162,-8.989856,1.006393,2.783113,-5.724361,6.177549,-1.572947,6.640487,4.019606,0.150890,5.571863,-0.617669,4.408386,1.014962,-1.952471,8.326886,-2.482265,2.727032,1.798247,1.933093,-9.894576,-6.417007,-4.733986,5.161985], dtype = "float64")#candidate|5302|(168,)|const|float64
const_5303 = relay.const([-4.337495,0.969580,-2.990568,5.148130,4.991573,-7.171058,7.387014,6.745525,-3.377359,-6.997864,6.077398,6.415200,-9.501034,-9.673196,-1.292734,-9.209401,3.126101,-2.089254,-0.121373,-9.836843,-4.926470,5.620365,-8.531591,-9.357875,-4.881243,6.428000,2.972756,0.204619,-0.158683,-3.490744,0.543442,4.586701,-6.775222,-6.611279,-3.057360,-3.240962,8.756630,-8.218083,1.499191,-2.054317,0.757586,0.461926,-1.533024,-8.121673,-8.583727,6.207510,0.767402,-0.041750,-4.031027,1.127315,-2.201147,1.724202,2.648231,9.796795,9.978596,-2.489760,-4.508044,7.490618,9.868257,1.900011,-4.498609,5.491787,1.327222,-5.051501,-0.180302,-6.897769,1.144446,-3.573525,8.795103,9.090851,6.132414,4.072979,-7.690719,-5.613618,-8.888218,5.027279,3.651493,6.196247,1.527308,-0.404393,2.784055,-9.696613,7.156245,7.358324,-6.365502,2.897207,1.130293,3.807627,9.159550,3.769165,0.412722,8.472439,2.602504,-8.982699,-4.161373,-1.273775,5.645099,-0.038184,1.624963,-2.760563,8.978971,7.694076,-2.163604,-3.250109,-9.310949,-6.361480,-6.119144,-0.459546,-5.865681,-4.753809,-7.572079,-4.736326,5.714860,-7.827706,-2.348487,4.614479,-3.462009,-7.361677,5.045014,-3.669651,-3.432047,-2.457176,-4.427527,-9.390530,3.581634,6.973901,1.270548,1.713310,0.120795,1.796364,-9.429927,8.491679,7.149675,-2.804328,-7.962149,9.478364,2.611628,0.969804,-2.619219,-1.215266,8.711424,4.970774,7.291716,3.678183,-8.112717,-6.911334,5.599768,3.666072,-0.177021,-6.090572,6.473914,1.278223,1.861090,-2.432547,9.102838,0.681958,7.665809,5.495999,0.966740,7.309851,-0.626244,3.649299,8.234051,-5.681748,-0.323693,-2.744189,-4.674138,-5.500185,-2.068475,-5.627753,1.942404,-7.368449,-8.372867,4.616156,1.833967,-5.935445,-4.016971,2.337886,-3.869436,5.190511,-2.950822,-7.277891,-4.039392,-0.956352,-6.440646,-6.142471,-8.469233,-4.806379,-6.140842,2.954931,-4.409311,5.815860,6.837292,-3.183771,2.068908,-1.740520,3.416560,-9.325238,7.150955,-4.195962,5.026688,0.045303,-9.315184,2.163810,2.548904,-3.210164,-4.804742,-5.689328,-7.417178,9.565201,9.713780,-8.356879,7.997619,-6.944702,9.115624,-6.346345,1.587360,6.681520,4.935388,-7.854585,2.533667,-5.195892,9.499615,5.600011,9.313670,9.797115,-0.083323,3.501355,-0.679345,-7.404601,-5.873333,4.563499,-6.309981,6.274567,6.413631,-1.415780,-2.201696,-1.612590,3.716460,-6.568546,-3.578508,6.925385,6.733679,-1.589314,-3.218294,4.734706,5.604485,-7.717809,9.452239,9.741479,-8.094622,9.420927,-5.614224,-6.126942,0.542734,-5.935378,-1.850265,-8.522796,-6.999916,4.618952,1.554664,-7.986147,9.854517,-4.812448,-3.700521,7.955975,3.375132,-1.386257,-1.903081,-7.051990,0.564878,-3.173563,-3.880741,1.437601,0.282596,-8.715805,0.027331,-7.134934,8.583845,-4.702329,-2.849903,-9.073860,-7.773163,-7.409674,3.643430,7.406486,3.323392,-5.315554,-7.884433,0.094166,5.476813,9.734906,-9.395445,5.767416,-8.509851,2.601093,-2.719283,4.701488,-7.313778,3.885924,-8.885631,-4.339963,-2.667844,2.113311,-4.951481,2.074842,-4.739827,6.108816,-3.109470,6.618415,-8.082124,3.251856,-4.283023,4.722461,-0.288718,6.443085,1.507982,0.490216,-9.411026,5.946912,2.557474,-6.907730,5.235715,-5.840357,7.026432,-2.776992,-4.644577,-9.196435,-1.194049,-7.194493,-2.191717,1.291042,4.002276,-9.014974,-9.027497,7.572612,-6.216507,5.598927,6.602547,0.462705,8.489138,-5.600295,1.898260,7.942473,-8.103847,3.600777,4.856727,5.984852,3.240620,-0.879595,0.306080,9.806983,-3.520493,0.160692,-9.427807,-4.863496,-9.725041,9.179048,9.298723,-0.070486,-9.131484,-2.981146,-1.819730,9.495568,0.455288,4.033186,8.203918,-0.556456,-9.860403,1.223025,-6.202764,-5.784448,-4.315375,2.402939,-0.628940,2.661561,0.628749,-7.768995,7.085060,6.728561,-6.859452,0.294627,7.226176,8.504654,0.502401,-5.428418,-2.575542,4.077333,-7.688320,-1.068200,-1.742257,-1.366135,6.244562,6.727517,-5.383775,-5.414560,-7.829097,-3.744800,0.618922,7.457172,-6.106377,9.616273,-8.131322,1.117516,8.941658,-6.709340,8.983581,9.926182,0.565895,-8.230514,3.211804,-5.573378,-0.907478,4.397533,-0.916609,5.456966,-1.606034,3.933824,5.967401,4.832861,-3.986545,-9.188732,-4.961736,3.190586,-9.838826,7.322016,-3.196315,2.669760,-0.727619,-8.861295,2.924618,7.942179,-5.957193,2.677593,8.746502,-8.492971,-0.220673,-2.273862,-7.872594,-4.960147,6.872413,-9.036670,-8.411800,-2.330270,-0.717815,0.695551,-6.525770,6.252610,-6.106165,-0.531701,-9.485528,7.901939,8.739969,8.862234,3.944882,3.708026,-7.167466,-4.979909,6.470695,1.950660,-2.073331,-6.666067,-6.224927,9.469040,-8.839466,-9.446491,7.931420,4.920151,7.913143,-0.158631,-1.038900,2.545767,-6.639401,5.790864,6.343621,6.540161,-2.837021,-3.422010,-0.837598,1.022271,-0.914423,9.916577,9.751973,-6.149542,1.125661,-5.557913,-7.525367,-1.492244,3.181094,4.996576,5.444279,-7.470738,-7.572084,-9.225758,3.789456,3.630631,6.470876,5.696710,3.761906,-9.285606,-2.663120,-7.940104,-9.992005,1.743366,1.126540,-1.943840,-9.589116,-3.013641,-8.859173,9.052501,-4.071450,1.452351,4.664087,-4.326335,-7.878562,1.221785,0.874965,-2.024354,4.679719,-0.548815,-1.998146,8.453337,1.566737,3.264756,-2.608967,3.184875,9.172039,-3.765138,4.025744,6.914891,1.581684,7.690396,-5.192915,4.474239,8.258166,-0.763111,-0.606519,-6.746743,7.916192,9.156895,-5.411964,-5.204816,3.663207,-5.541150,-3.834903,8.364466,6.409113,-7.078762,-2.450763,4.962829,0.164315,8.112422,5.215489,-3.302788,7.572840,-6.218146,-8.777240,4.873246,1.120817,4.074889,3.197303,-2.994541,0.599266,-5.659877,-8.077303,8.396587,-1.685831,0.888934,7.001729,-6.469903,-1.795493,-4.089663,-0.710829,-2.025449,-5.841346,1.646687,-5.906334,-0.294356,-3.228702,5.523070,-7.816375,7.245754,4.538497,-5.258897,-2.115179,9.000538,8.683455,4.912652,8.557428,3.399724,2.470506,0.832052,-8.103540,3.863372,0.080823,8.121278,-5.095326,-0.509365,-2.884027,-2.652183,5.189194,2.871210,5.362105,-0.693929,-2.658693,-2.538682,-6.888212,-8.562414,8.017387,-5.936746,-1.848756,-5.813902,-5.792763,9.315656,6.494612,3.641980,3.518146,2.738116,4.377409,-9.744846,-1.162514,-1.868906,-2.292515,0.570396,-6.313345,-4.643379,-0.589383,9.933348,7.911213,7.009448,-7.934554,-1.199868,2.490535,4.479108,4.655350,-2.497083,-9.798135,8.044294,7.348225,7.908591,-6.177738,0.625435,-6.854857,7.502296,7.502656,4.931947,7.847429,9.011690,7.446408,7.891707,-1.265156,-0.230977,-2.810245,-4.964311,8.958299,-0.947856,5.749370,-9.412451,-8.766735,-5.226905,-6.779233,-3.343248,5.589502,-4.281852,-9.818967,8.448902,0.398318,6.055138,3.782535,-1.384557,6.756189,-2.206112,-3.751290,5.561318,-1.721414,-8.200263,2.950413,-6.114820,-5.612040,1.465942,7.418811,-3.520564,7.403708,-3.954467,5.085705,4.705845,2.146175,8.195753,-9.965491,4.325601,-6.203612,2.155881,-8.413277,-4.434625,-2.139621,1.317547,2.992420,-3.558100,9.418785,9.289642,3.249112,-6.882895,5.478251,-0.194897,-2.975416,-8.449993,8.518728,-8.555507,-8.941808,8.521837,-2.163793,-0.819787,-1.554308,-4.474012,0.719562,-1.845699,-1.016806,-4.462322,-6.843852,2.076571,-8.382198,-5.071505,9.508895,3.289716,2.909225,-3.248031,1.400313,4.434146,-3.721330,2.542290,-0.229446,-5.029815,-0.380527,-5.013382,-7.663327,6.648438,0.506988,-3.319146,-7.949171,-4.451503,-4.951432,-8.489659,9.570215,9.120647,8.195129,-6.923715,-9.153039,9.146967,5.194371,-7.067041,9.928325,-4.211686,0.668186,-5.583993,-2.910550,5.602641,1.132931,-3.704903,-2.325164,-1.214543,-6.361470,3.950189,-1.589349,-0.500560,-9.761636,8.875120,-1.051587,-4.164556,-8.460491,-9.494764,-8.508572,-1.655710,2.817592,-4.874582,-9.506154,7.747653,5.418269,-5.066336,4.790689,0.915091,6.285156,-2.058893,-4.652078,9.661747,1.660653,8.911407,8.028484,2.618223,-0.578055,-6.084206,7.126213,-4.499660,-7.013381,-9.210618,2.655567,0.111723,-9.472719,-7.696533,4.586424,7.985698,6.702855,-5.015850,-0.055310,7.576178,7.079633,-0.549636,-6.162397,-1.438452,1.559221,-9.844965,-3.973710,8.778139,1.480109,-5.565982,7.160552,2.579264,-1.883644,9.111346,-4.728832,-3.475453,9.852198,-9.463883,2.954290,-9.974438,0.944466,5.917528,0.068263,-1.469254,-9.051478,9.806488,-5.774494,8.653339,-1.046810,-4.215355,0.290227,-9.362239,9.462699,-0.180747,7.710621,0.505207,-8.127368,4.831655,4.167839,-0.771293,-3.009967,5.331034,7.950871,4.622572,4.924569,-2.228524,-3.343491,7.604404,1.558577,-7.860268,1.641828,1.479584,-2.558362,1.502181,-6.892937,-5.110818,7.259309,5.731462,-1.933780,-4.803981,-0.050875,-4.227359,8.074979,-4.807884,-4.906979,-8.290291,-4.041059,3.285562,-3.365830,-9.961455,-1.460065,1.202432,-9.086484,-1.812550,1.301752,2.229158,4.906100,6.062876,5.359142,5.470856,-9.020505,9.793227,8.950458,-1.309743,1.686559,-0.386599,6.815191,4.887302,5.934378,-4.917754,-3.746565,-7.241453,6.669559,6.272852,-1.692305,-9.546706,-4.813810,8.993046,-8.051992,3.685018,6.199945,-9.018476,9.010170,-2.902252,3.009186,1.886930,-0.289635,-2.429694,1.487568,6.408928,-2.542624,8.923115,2.366100,5.539567,-1.856600,-7.625587,-5.504131,-1.549062,-4.721519,-2.575220,6.594006,-0.751151,-1.042207,3.546660,-8.724939,3.479464,2.957827,7.804056,2.666915,-2.236699,3.616036,7.561047,5.133334,8.895344,9.186920,-5.415456,5.698538,-6.770231,9.215854,-7.753750,-4.452057,-7.917862,-2.928877,7.749468,-2.883310,8.444918,-6.521383,-8.065787,-6.992925,6.894341,6.962090,-8.122014,-9.744518,-4.305070,-0.873270,0.029298,-6.679868,-7.217855,8.846570,5.497135,-9.945474,3.688030,7.780282,-1.633057,5.957713,6.878331,3.274867,-5.029981,8.176023,9.527726,8.063434,-5.425328,7.209441,-5.919582,-5.726599,-3.692597,-4.138343,1.577883,2.878990,4.231517,-5.046421,-1.974787,-7.415289,7.149265,1.599900,9.510352,-0.063250,6.047563,1.656596,-5.443292,5.434702,-1.127784,1.146934,9.972142,7.227708,8.751489,-8.483889,-8.329751,-5.862398,-5.299615,-9.934174,-2.824263,1.700481,-2.487148,8.312779,5.006022,-6.075916,-2.494953,3.198012,-9.872128,-9.981483,-3.077080,4.195060,8.061470,7.233492,-0.350308,-3.666365,-7.915781,-8.317930,-3.417084,0.458337,-4.700007,4.546915,4.639245,-1.961714,7.772019,-9.260992,8.319185,-5.418751,8.850763,-2.727951,-8.314055,1.103837,8.942267,6.947692,0.680092,7.764642,-2.631699,6.488954,8.570983,-8.553637,-2.409116,0.349213,-1.389732,4.175791,8.518243,5.087183,-7.589649,-4.096928,-2.086586,5.666710,-3.560018,6.114966,8.350235,4.439745,6.936585,9.381144,-6.970386,6.022812,3.366381,-8.347434,0.235265,-1.567333,-5.648830,8.542546,-6.068786,2.589293,6.671630,-1.360339,1.399982,3.178212,1.011340,-1.455460,4.042716,-6.283043,-7.198404,4.936353,9.626317,3.485628,-5.048031,-3.955512,4.230212,-3.218948,8.309065,6.514998,-8.833646,2.645042,-7.179626,2.826364,0.981747,-1.769879,-0.299022,0.133057,2.774097,-5.751845,5.165820,-0.513411,-1.519174,1.188882,4.631397,-2.090243,-9.209481,9.143718,2.156317,-2.070133,3.817428,6.368835,2.010152,2.410701,6.747003,-8.902948,-9.057198,-7.988511,3.808556,-0.404890,-1.604462,-9.531124,-3.194920,7.150737,-4.999261,9.293459,-5.836255,-5.763734,0.754866,-2.698567,6.762695,-2.314103,-1.752854,-4.570876,-4.627686,-7.848166,0.531451,3.180873,0.403802,3.498847,6.001917,5.850553,2.469449,8.951174,1.107473,-3.772684,-7.874565,-8.634032,7.874258,4.320981,-4.532340,-5.643496,-1.588369,7.800890,0.517689,-5.612959,5.943825,-7.388883,1.993472,-0.948192,-3.076849,2.356569,7.276147,3.570702,-7.586512,-4.707848,-3.173022,-8.923298,9.938028,-7.977139,-7.458858,5.297864,-8.509213,6.370345,6.080852,-0.228868,-5.016211,-4.016131,-5.108381,-6.298053,-3.532981,6.897363,0.093558,-0.914696,3.173149,9.854371,1.910741,-1.009407,8.670123,3.085759,9.226425,-5.136802,3.790347,8.684599,-9.407651,-3.541575,-6.726136,9.973478,6.046396,-2.951661,0.194605,-7.567596,-7.112993,-7.099507,-7.196325,-4.612566,-4.162318,4.964197,-5.190973,1.054165,-5.410474,0.472738,1.812844,7.434424,-4.686669,7.255247,2.150119,-9.938457,-0.938450,5.183770,-3.881701,-0.647929,-3.614182,-1.174717,-0.268455,7.389623,9.064878,-5.389355,-9.201555,8.100591,6.672221,-1.343565,7.199432,6.060733,6.087185,-4.962813,-9.445515,-5.700380,7.920734,2.031265,-0.227907,-7.753893,-6.532378,-1.945271,-0.688733,2.220094,7.453654,4.924775,5.244495,-3.276363,6.212604,-4.397901,-4.544064,3.247375,-4.145102,0.485689,7.568168,-2.745628,-8.650631,-1.260655,4.467901,6.553400,5.683772,1.753898,1.953063,-5.311695,-6.757530,-2.027652,6.386485,-9.815121,8.165191,2.991822,-2.875724,-6.308192,-7.437152,0.005014,-4.464248,-2.149230,6.343133,-7.058260,-3.102492,-6.252520,-3.053102,4.113140,-7.260352,2.986867,4.547073,-4.017057,-6.404825,4.070957,-3.364586,-7.225359,5.999188,-3.816923,-7.392841,5.599783,6.793355,-0.615044,-5.542761,-2.546971,2.353756,-0.454976,-5.991764,-8.617905,7.721812,0.018813,2.758507,8.975686,7.081132,7.728552,-5.006882,-8.307546,-6.696989,5.085204,-0.738516,3.727834,7.891952,-9.996595,0.949068,3.274837,-2.631349,-7.922326,-0.046169,-3.334786,9.280292,-5.492603,-9.961504,-4.940600,9.462911,-6.334941,2.219682,2.552746,4.543954,-1.390601,6.203498,-3.498002,-0.080039,2.953406,-5.897500,-7.842073,9.111696,1.141602,8.755661,2.586266,-2.606759,-9.033340,8.058792,-4.071073,-5.519632,0.951114,-1.789109,5.795156,-9.601861,-2.731100,3.118217,7.186551,3.859126,-4.527920,-1.845634,6.827360,8.442150,-1.281691,3.672646,-2.433415,9.823659,0.133227,6.738529,-4.564651,8.960608,-4.969701,-6.042016,-1.557362,-7.784372,-7.925230,-9.455716,8.355460,-5.144657,-8.339293,7.800468,0.006407,2.232072,-1.724205,3.665361,-9.111009,2.961278,4.282394,-3.702548,0.870915,6.505409,3.123486,7.401695,7.870557,-6.140854,-2.132295,-9.498352,-3.721926,-2.737382,-2.800875,-9.412310,6.824307,9.223703,5.135238,-4.165283,5.574943,-3.431987,4.766134,7.950483,1.714937,-6.227989,2.454533,3.290180,-8.164210,8.600867,-8.152700,-3.082337,1.171267,-6.622561,2.479710,-4.286000,-7.219850,-8.325324,-8.753993,9.042275,0.678580,1.524062,-2.198747,7.769910,5.076620,-9.146687,-9.650126,5.040767,-7.570971,-1.813743,-6.820532,-8.232863,0.142456,-4.487288,4.282958,-7.496275,1.115029,6.882052,-8.736427,7.829783,1.793282,4.185140,-0.126230,-1.292368,5.376471,-0.148964,3.149345,-7.872505,1.776571,-7.083052,-8.751861,-8.370732,3.198179,-9.413678,-0.311722,9.965543,1.096821,8.203131,1.599206,-5.961591,-5.861894,-6.691092,-1.472861,-5.088868,8.439488,-6.663438,4.889216,4.430818,-7.332280,4.836735,9.099733,6.003936,5.670167,-7.829989,-2.623054,0.043780,-2.814987,-4.466748,6.097222,-0.195288,5.369732,-0.546525,1.293618,2.710694,4.811673,-3.849710,8.291617,5.643092,-6.099162,5.941229,0.115464,6.729018,-4.697686,-3.108113,5.180140,-4.686680,8.810472,2.530502,9.350589,-1.136726,7.772878,2.881577,-2.563153,-1.012379,8.530484,9.769173,-6.020821,-5.967684,-0.051578,-9.163403,6.885937,3.818849,-9.275465,-3.901444,8.058145,-4.511747,1.794822,-6.337680,9.789406,7.708464,-8.535011,8.388832,3.308005,-0.847262,-4.708012,8.780719,4.525887,-0.233616,-4.426501,7.486612,2.528505,-4.742689,-9.247139,3.206754,9.715244,-9.839357,1.433783,1.693193,0.663747,9.406274,-3.877283,1.828309,6.900020,4.116143,-1.769132,1.895556,9.649833,3.998626,-7.135855,8.193714,7.488492,-8.472754,2.771431,1.448235,8.219128,-8.903712,-5.528651,3.882013], dtype = "float32")#candidate|5303|(1560,)|const|float32
call_5300 = relay.TupleGetItem(func_1042_call(relay.reshape(const_5301.astype('int64'), [144,]), relay.reshape(var_5282.astype('float64'), []), relay.reshape(const_5302.astype('float64'), [168,]), relay.reshape(const_5303.astype('float32'), [1560,]), ), 6)
call_5304 = relay.TupleGetItem(func_1047_call(relay.reshape(const_5301.astype('int64'), [144,]), relay.reshape(var_5282.astype('float64'), []), relay.reshape(const_5302.astype('float64'), [168,]), relay.reshape(const_5303.astype('float32'), [1560,]), ), 6)
func_3728_call = mod.get_global_var('func_3728')
func_3730_call = mutated_mod.get_global_var('func_3730')
call_5326 = relay.TupleGetItem(func_3728_call(), 0)
call_5327 = relay.TupleGetItem(func_3730_call(), 0)
func_4611_call = mod.get_global_var('func_4611')
func_4615_call = mutated_mod.get_global_var('func_4615')
var_5341 = relay.var("var_5341", dtype = "int16", shape = (360,))#candidate|5341|(360,)|var|int16
var_5342 = relay.var("var_5342", dtype = "int16", shape = (60,))#candidate|5342|(60,)|var|int16
call_5340 = relay.TupleGetItem(func_4611_call(relay.reshape(var_5341.astype('int16'), [6, 6, 10]), relay.reshape(var_5342.astype('int16'), [1, 6, 10]), ), 0)
call_5343 = relay.TupleGetItem(func_4615_call(relay.reshape(var_5341.astype('int16'), [6, 6, 10]), relay.reshape(var_5342.astype('int16'), [1, 6, 10]), ), 0)
func_1746_call = mod.get_global_var('func_1746')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_5354 = relay.TupleGetItem(func_1746_call(relay.reshape(const_5303.astype('float32'), [1560,])), 1)
call_5355 = relay.TupleGetItem(func_1749_call(relay.reshape(const_5303.astype('float32'), [1560,])), 1)
func_1746_call = mod.get_global_var('func_1746')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_5371 = relay.TupleGetItem(func_1746_call(relay.reshape(const_5303.astype('float32'), [1560,])), 2)
call_5372 = relay.TupleGetItem(func_1749_call(relay.reshape(const_5303.astype('float32'), [1560,])), 2)
output = relay.Tuple([call_5253,call_5265,call_5275,call_5281,var_5282,call_5300,const_5301,const_5302,const_5303,call_5326,call_5340,var_5341,var_5342,call_5354,call_5371,])
output2 = relay.Tuple([call_5254,call_5266,call_5276,call_5283,var_5282,call_5304,const_5301,const_5302,const_5303,call_5327,call_5343,var_5341,var_5342,call_5355,call_5372,])
func_5374 = relay.Function([var_5282,var_5341,var_5342,], output)
mod['func_5374'] = func_5374
mod = relay.transform.InferType()(mod)
var_5375 = relay.var("var_5375", dtype = "bool", shape = ())#candidate|5375|()|var|bool
var_5376 = relay.var("var_5376", dtype = "int16", shape = (360,))#candidate|5376|(360,)|var|int16
var_5377 = relay.var("var_5377", dtype = "int16", shape = (60,))#candidate|5377|(60,)|var|int16
output = func_5374(var_5375,var_5376,var_5377,)
func_5378 = relay.Function([var_5375,var_5376,var_5377,], output)
mutated_mod['func_5378'] = func_5378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5013_call = mod.get_global_var('func_5013')
func_5015_call = mutated_mod.get_global_var('func_5015')
call_5388 = func_5013_call()
call_5389 = func_5013_call()
output = call_5388
output2 = call_5389
func_5398 = relay.Function([], output)
mod['func_5398'] = func_5398
mod = relay.transform.InferType()(mod)
output = func_5398()
func_5399 = relay.Function([], output)
mutated_mod['func_5399'] = func_5399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5398_call = mod.get_global_var('func_5398')
func_5399_call = mutated_mod.get_global_var('func_5399')
call_5405 = func_5398_call()
call_5406 = func_5398_call()
output = call_5405
output2 = call_5406
func_5452 = relay.Function([], output)
mod['func_5452'] = func_5452
mod = relay.transform.InferType()(mod)
output = func_5452()
func_5453 = relay.Function([], output)
mutated_mod['func_5453'] = func_5453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_885_call = mod.get_global_var('func_885')
func_886_call = mutated_mod.get_global_var('func_886')
call_5460 = relay.TupleGetItem(func_885_call(), 1)
call_5461 = relay.TupleGetItem(func_886_call(), 1)
output = call_5460
output2 = call_5461
func_5489 = relay.Function([], output)
mod['func_5489'] = func_5489
mod = relay.transform.InferType()(mod)
output = func_5489()
func_5490 = relay.Function([], output)
mutated_mod['func_5490'] = func_5490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3591_call = mod.get_global_var('func_3591')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_5493 = func_3591_call()
call_5494 = func_3591_call()
func_3863_call = mod.get_global_var('func_3863')
func_3866_call = mutated_mod.get_global_var('func_3866')
const_5496 = relay.const(False, dtype = "bool")#candidate|5496|()|const|bool
var_5497 = relay.var("var_5497", dtype = "float64", shape = (168, 1))#candidate|5497|(168, 1)|var|float64
call_5495 = relay.TupleGetItem(func_3863_call(relay.reshape(const_5496.astype('bool'), []), relay.reshape(var_5497.astype('float64'), [42, 4]), ), 0)
call_5498 = relay.TupleGetItem(func_3866_call(relay.reshape(const_5496.astype('bool'), []), relay.reshape(var_5497.astype('float64'), [42, 4]), ), 0)
func_3039_call = mod.get_global_var('func_3039')
func_3040_call = mutated_mod.get_global_var('func_3040')
call_5506 = relay.TupleGetItem(func_3039_call(), 0)
call_5507 = relay.TupleGetItem(func_3040_call(), 0)
func_5013_call = mod.get_global_var('func_5013')
func_5015_call = mutated_mod.get_global_var('func_5015')
call_5508 = func_5013_call()
call_5509 = func_5013_call()
output = relay.Tuple([call_5493,call_5495,const_5496,var_5497,call_5506,call_5508,])
output2 = relay.Tuple([call_5494,call_5498,const_5496,var_5497,call_5507,call_5509,])
func_5516 = relay.Function([var_5497,], output)
mod['func_5516'] = func_5516
mod = relay.transform.InferType()(mod)
var_5517 = relay.var("var_5517", dtype = "float64", shape = (168, 1))#candidate|5517|(168, 1)|var|float64
output = func_5516(var_5517)
func_5518 = relay.Function([var_5517], output)
mutated_mod['func_5518'] = func_5518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3927_call = mod.get_global_var('func_3927')
func_3928_call = mutated_mod.get_global_var('func_3928')
call_5567 = relay.TupleGetItem(func_3927_call(), 1)
call_5568 = relay.TupleGetItem(func_3928_call(), 1)
func_1640_call = mod.get_global_var('func_1640')
func_1643_call = mutated_mod.get_global_var('func_1643')
var_5577 = relay.var("var_5577", dtype = "int64", shape = (2, 72))#candidate|5577|(2, 72)|var|int64
call_5576 = relay.TupleGetItem(func_1640_call(relay.reshape(var_5577.astype('int64'), [144,])), 4)
call_5578 = relay.TupleGetItem(func_1643_call(relay.reshape(var_5577.astype('int64'), [144,])), 4)
output = relay.Tuple([call_5567,call_5576,var_5577,])
output2 = relay.Tuple([call_5568,call_5578,var_5577,])
func_5584 = relay.Function([var_5577,], output)
mod['func_5584'] = func_5584
mod = relay.transform.InferType()(mod)
var_5585 = relay.var("var_5585", dtype = "int64", shape = (2, 72))#candidate|5585|(2, 72)|var|int64
output = func_5584(var_5585)
func_5586 = relay.Function([var_5585], output)
mutated_mod['func_5586'] = func_5586
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5588 = relay.var("var_5588", dtype = "uint8", shape = (7, 11, 8))#candidate|5588|(7, 11, 8)|var|uint8
var_5589 = relay.var("var_5589", dtype = "uint8", shape = (7, 11, 8))#candidate|5589|(7, 11, 8)|var|uint8
bop_5590 = relay.greater_equal(var_5588.astype('bool'), relay.reshape(var_5589.astype('bool'), relay.shape_of(var_5588))) # shape=(7, 11, 8)
func_5452_call = mod.get_global_var('func_5452')
func_5453_call = mutated_mod.get_global_var('func_5453')
call_5604 = func_5452_call()
call_5605 = func_5452_call()
output = relay.Tuple([bop_5590,call_5604,])
output2 = relay.Tuple([bop_5590,call_5605,])
func_5608 = relay.Function([var_5588,var_5589,], output)
mod['func_5608'] = func_5608
mod = relay.transform.InferType()(mod)
var_5609 = relay.var("var_5609", dtype = "uint8", shape = (7, 11, 8))#candidate|5609|(7, 11, 8)|var|uint8
var_5610 = relay.var("var_5610", dtype = "uint8", shape = (7, 11, 8))#candidate|5610|(7, 11, 8)|var|uint8
output = func_5608(var_5609,var_5610,)
func_5611 = relay.Function([var_5609,var_5610,], output)
mutated_mod['func_5611'] = func_5611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3821_call = mod.get_global_var('func_3821')
func_3823_call = mutated_mod.get_global_var('func_3823')
call_5666 = relay.TupleGetItem(func_3821_call(), 0)
call_5667 = relay.TupleGetItem(func_3823_call(), 0)
output = call_5666
output2 = call_5667
func_5689 = relay.Function([], output)
mod['func_5689'] = func_5689
mod = relay.transform.InferType()(mod)
output = func_5689()
func_5690 = relay.Function([], output)
mutated_mod['func_5690'] = func_5690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1301_call = mod.get_global_var('func_1301')
func_1303_call = mutated_mod.get_global_var('func_1303')
call_5724 = relay.TupleGetItem(func_1301_call(), 0)
call_5725 = relay.TupleGetItem(func_1303_call(), 0)
output = relay.Tuple([call_5724,])
output2 = relay.Tuple([call_5725,])
func_5752 = relay.Function([], output)
mod['func_5752'] = func_5752
mod = relay.transform.InferType()(mod)
mutated_mod['func_5752'] = func_5752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5752_call = mutated_mod.get_global_var('func_5752')
call_5753 = func_5752_call()
output = call_5753
func_5754 = relay.Function([], output)
mutated_mod['func_5754'] = func_5754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2202_call = mod.get_global_var('func_2202')
func_2203_call = mutated_mod.get_global_var('func_2203')
call_5755 = relay.TupleGetItem(func_2202_call(), 2)
call_5756 = relay.TupleGetItem(func_2203_call(), 2)
func_5752_call = mod.get_global_var('func_5752')
func_5754_call = mutated_mod.get_global_var('func_5754')
call_5762 = relay.TupleGetItem(func_5752_call(), 0)
call_5763 = relay.TupleGetItem(func_5754_call(), 0)
output = relay.Tuple([call_5755,call_5762,])
output2 = relay.Tuple([call_5756,call_5763,])
func_5769 = relay.Function([], output)
mod['func_5769'] = func_5769
mod = relay.transform.InferType()(mod)
output = func_5769()
func_5770 = relay.Function([], output)
mutated_mod['func_5770'] = func_5770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3927_call = mod.get_global_var('func_3927')
func_3928_call = mutated_mod.get_global_var('func_3928')
call_5775 = relay.TupleGetItem(func_3927_call(), 1)
call_5776 = relay.TupleGetItem(func_3928_call(), 1)
func_1103_call = mod.get_global_var('func_1103')
func_1105_call = mutated_mod.get_global_var('func_1105')
call_5791 = func_1103_call()
call_5792 = func_1103_call()
func_2345_call = mod.get_global_var('func_2345')
func_2350_call = mutated_mod.get_global_var('func_2350')
const_5794 = relay.const([5,-2,2,2,-2,-2,9,-6,-8,-6,3,6,10,3,1,-5,-5,-7,-6,5,-9,-3,-2,1,-1,4,3,-1,4,-8,7,-3,10,-1,9,4,-3,-6,-9,5,-2,-3,1,-9,-5,-9,-2,-7,2,-9,-4,-1,-2,-3,2,1,1,10,-10,-6,-7,9,9,2,-4,4,-7,-8,-2,2,-1,9,-8,3,-9,5,3,-7,-2,6,3,-5,-5,-9,-3,2,-3,5,1,1,6,9,-2,4,7,-9,9,9,6,-2,7,5,4,-3,-8,6,2,5,-2,-9,8,7,3,-3,2,-10,-9,10,4,10,-10,8,-4,8,-4,4,9,3,-7,-5,-2,-9,9,-6,-5,-9,-5,-6,1,-4,5,9,7,-7,8,5,-6,-3,-4,-10,-7,3,-5,10,5,3,2,-3,5,5,-10,5,5,-1,-9,9,9,10,10,-1,8,4,-5,-10,7,-4,-6,-2,-9,9,5,5,-9,-9,-9,-4,2,6,5,10,1,-8,2,-7,5,10,5,6,-2,-3,-3,9,-4,-5,-1,2,8,1,4,-3,-4,-8,8,-3,7,5,-2,7,9,9,-6,4,-3,-6,-2,5,-1,5,7,4,-1,-5,-1,-10,-4,-2,10,-6,2,-1,10,10,-8,-5,-2,-10,5,-9,10,9,-8,6,-1,-2,-4,-7,6,-8,-4,-1,1,3,-9,-4,-10,4,-6,-8,5,-7,-3,-5,-4,5,-5,6,8,-2,10,7,-7,-9,-3,7,5,7,10,6,5,2,8,6,7,-4,-1,6,3,-2,-2,-4,-5,-6,-5,1,-6,1,-2,1,-4,6,-7,5,10,8,-6,-1,-7,8,-9,-3,-3,-8,-9,6,-5,9,9,-6,1,2,-6,10,8,-5,-10,-2,3,8,1,5,8,-2,10,-5,1,10,-10,3,2,-7,-8,-3,-2,-3,9,-1,-4,4,-10,-4,-8,-10,-7,-10,-1,-1,-7,8,-9,2,-8,5,-7,-5,9,10,6,-10,1,3,-7,10,9,3,10,-4,-8,10,7,4,5,-5,-2,-5,5,6,10,-5,-6,5,-4,4,-9,9,8,-3,-7,-7,3,3,-9,9,-7,-10,-3,-8,-5,10,5,-9,-3,9,3,9,9,4,-3,9,9,2,4,8,-2,-5,-8,-3,9,10,-9,7,-3,6,-6,-5,-4,-5,-8,-2,-1,-9,-1,7,8,1,-8,-5,-9,-6,-10,10,-7,4,9,-6,-3,9,-9,6,-6,5,5,-5,-5,-9,-2,-8,-5,-4,8,-5,5,9,-2,1,1,-2,-8,-3,7,-5,-1,10,5,10,-4,-6,-9,-4,1,-9,-5,-1,9,5,3,7,-3,2,8,3,7,2,-6,6,-4,-10,-7,2,-2,-2,-7,3,-3,-9,-4,-5,-2,8,-3,-3,-1,-6,3,-4,4,-4,-4,-2,9,-8,-2,6,7,-1,-10,7,-1,-2,2,-1,-2,9,1,1,-1,-5,-1,8,-6,-10,7,-10,2,-3,5,-3,1,3,5,2,-2,-10,9,-2,-1,3,-2,8,-4,2,-7,8,-9,9,-2,10,7,10,-2,-1,7,-10,-5,-4,-1,8,-3,7,-7,6,7,-5,9,-10,-8,-1,5,3,-4,-10,-5,-5,7,10,10,3,-3,-2,4,1,-5,6,-8,1,-7,-6,-1,9,-5,-10,-7,2,9,-2,8,-4,10,4,-8,1,-7,-8,-10,-4,7,7,7,4,3,-1,-3,-7,-7,-10,-7,-2,10,3,-6,2,-3,7,-8,7,7,6,5,3,-4,6,-6,6,-8,-3,-7,8,-5,9,-4,-9,-6,-2,-6,-2,-10,2,9,-1,6,-1,-2,-1,4,4,-8,-10,8,3,9,-6,6,-4,-5,-1,-10,4,-1,-8,-6,-2,5,-7,6,-9,-7,-3,-3,7,-1,-1,-1,2,9,-7,-4,7,1,-4,-6,-1,10,-10,-10,-2,-7,1,-5,10,-4,-7,5,10,10,4,-7,-2,10,9,-9,10,-4,-4,5,3,10,-10,5,-5,-3,4,-6,4,-8,-8,4,5,-3,4,-2,9,-8,10,-10,10,-4,1,1,-7,-8,6,-5,9,9,-7,-2,-6,7,6,1,-9,10,-4,-7,10,8,-9,-8,-2,-2,9,-5,-4,10,-10,-8,5,-2,9,-2,7,6,4,4,2,-4,10,7,-4,6,8,-4,1,4,5,10,5,-8,1,-6,8,3,1,-3,-7,-8,2,1,-8,-3,10,-5,-1,-5,-2,5,-3,9,-10,-9,-1,5,-3,-5,1,3,3,-8,10,-7,6,-4,4,-3,4,-5,-10,-8,-7,3,-3,1,6,-2,-7,-1,-3,-2,-6,3,-6,7,-9,1,10,-5,-4,-10,-8,-7,1,7,-2,-1,3,-10,-2,-7,4,6,3,6,10,10,-8,4,-4,3,10,-6,-8,2,-3,-1,-8,-10,10,10,4,9,-6,3,-6,8,10,10,10,10,-10,2,-9,1,-10,9,-1,-8,-5,-9,-5,8,-10,-7,-10,-4,7,-10,-8,-6,-4,-2,7,-3,9,3,10,-3,-10,1,-7,-2,-2,-1,-5,-9,-3,-5,-3,3,4,-9,-9,-5,3], dtype = "int16")#candidate|5794|(972,)|const|int16
const_5795 = relay.const([[-6.698887,1.522425],[2.177064,-5.065480],[-4.622657,-1.800707],[0.398910,-4.336116],[8.072966,-5.680122],[-2.584463,-0.901444],[5.253836,-2.327515],[9.114863,4.750089],[-3.027027,-9.821070],[4.942657,-3.866677],[1.171272,-4.372856],[8.451742,8.851734],[7.828720,6.022496],[2.355188,9.571169],[-8.538356,-6.864150],[7.507402,0.280653],[0.048576,4.967283],[5.288439,-7.779339],[-4.629550,2.376376],[-6.293226,2.003377],[-4.220718,8.033729],[-4.817523,-7.583950],[-7.914341,-3.202390],[-6.540798,8.489608],[8.419504,5.177771],[-6.458435,-6.642545],[-8.758584,8.353486],[-1.683642,-2.639369],[7.025233,4.864860],[6.417462,-7.447148],[-4.381914,9.766504],[3.776824,-4.799942],[1.217305,1.431742],[-1.776834,8.423553],[0.669046,6.988581],[6.749925,6.729521],[5.750536,-0.738272],[-5.567008,-9.922579],[8.248045,-3.631989],[-6.498368,3.134886],[-7.331001,6.364395],[-2.303589,4.335770],[1.759770,-5.369620],[-9.029220,-9.337038],[-8.999123,-5.215708],[0.742931,4.027894],[-2.332464,1.007469],[9.939922,9.354502],[4.387556,-7.948035],[7.926964,-0.454544],[-7.534390,9.591458],[-5.567143,-2.388837],[-2.176685,9.139429],[4.903534,-6.595583],[-2.767519,-2.990084],[-5.635094,8.358378],[-4.751881,-0.081474],[1.575154,2.987905],[0.982938,3.145142],[-7.747957,-8.721583],[-5.505027,-3.197678],[-5.144862,-7.860183],[0.636273,-2.257566],[-3.245212,5.922922],[0.211763,-8.570628],[-8.354435,-1.504520],[-4.538853,7.777009],[9.279020,5.719470],[-2.223169,3.334433],[-3.111099,3.312109],[-8.378519,7.717153],[-8.585139,-7.419567],[-3.937992,-2.228600],[-8.728282,-1.532368],[-1.264297,2.466528],[6.096845,-1.983691],[-6.301449,6.976091],[7.602532,-8.701672]], dtype = "float64")#candidate|5795|(78, 2)|const|float64
call_5793 = relay.TupleGetItem(func_2345_call(relay.reshape(const_5794.astype('int16'), [9, 12, 9]), relay.reshape(const_5794.astype('int16'), [9, 12, 9]), relay.reshape(const_5795.astype('float64'), [156,]), ), 0)
call_5796 = relay.TupleGetItem(func_2350_call(relay.reshape(const_5794.astype('int16'), [9, 12, 9]), relay.reshape(const_5794.astype('int16'), [9, 12, 9]), relay.reshape(const_5795.astype('float64'), [156,]), ), 0)
uop_5801 = relay.acos(const_5794.astype('float64')) # shape=(972,)
func_3429_call = mod.get_global_var('func_3429')
func_3432_call = mutated_mod.get_global_var('func_3432')
var_5807 = relay.var("var_5807", dtype = "uint32", shape = (165,))#candidate|5807|(165,)|var|uint32
call_5806 = relay.TupleGetItem(func_3429_call(relay.reshape(var_5807.astype('uint32'), [11, 5, 3])), 1)
call_5808 = relay.TupleGetItem(func_3432_call(relay.reshape(var_5807.astype('uint32'), [11, 5, 3])), 1)
uop_5816 = relay.asin(uop_5801.astype('float64')) # shape=(972,)
output = relay.Tuple([call_5775,call_5791,call_5793,const_5795,call_5806,var_5807,uop_5816,])
output2 = relay.Tuple([call_5776,call_5792,call_5796,const_5795,call_5808,var_5807,uop_5816,])
func_5820 = relay.Function([var_5807,], output)
mod['func_5820'] = func_5820
mod = relay.transform.InferType()(mod)
var_5821 = relay.var("var_5821", dtype = "uint32", shape = (165,))#candidate|5821|(165,)|var|uint32
output = func_5820(var_5821)
func_5822 = relay.Function([var_5821], output)
mutated_mod['func_5822'] = func_5822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2874_call = mod.get_global_var('func_2874')
func_2876_call = mutated_mod.get_global_var('func_2876')
call_5850 = func_2874_call()
call_5851 = func_2874_call()
output = call_5850
output2 = call_5851
func_5857 = relay.Function([], output)
mod['func_5857'] = func_5857
mod = relay.transform.InferType()(mod)
mutated_mod['func_5857'] = func_5857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5857_call = mutated_mod.get_global_var('func_5857')
call_5858 = func_5857_call()
output = call_5858
func_5859 = relay.Function([], output)
mutated_mod['func_5859'] = func_5859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5489_call = mod.get_global_var('func_5489')
func_5490_call = mutated_mod.get_global_var('func_5490')
call_5879 = func_5489_call()
call_5880 = func_5489_call()
output = call_5879
output2 = call_5880
func_5893 = relay.Function([], output)
mod['func_5893'] = func_5893
mod = relay.transform.InferType()(mod)
output = func_5893()
func_5894 = relay.Function([], output)
mutated_mod['func_5894'] = func_5894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1850_call = mod.get_global_var('func_1850')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_5960 = relay.TupleGetItem(func_1850_call(), 0)
call_5961 = relay.TupleGetItem(func_1851_call(), 0)
func_2282_call = mod.get_global_var('func_2282')
func_2285_call = mutated_mod.get_global_var('func_2285')
var_5974 = relay.var("var_5974", dtype = "float64", shape = (91, 10))#candidate|5974|(91, 10)|var|float64
call_5973 = relay.TupleGetItem(func_2282_call(relay.reshape(var_5974.astype('float64'), [10, 7, 13])), 0)
call_5975 = relay.TupleGetItem(func_2285_call(relay.reshape(var_5974.astype('float64'), [10, 7, 13])), 0)
func_5398_call = mod.get_global_var('func_5398')
func_5399_call = mutated_mod.get_global_var('func_5399')
call_5992 = func_5398_call()
call_5993 = func_5398_call()
func_4335_call = mod.get_global_var('func_4335')
func_4337_call = mutated_mod.get_global_var('func_4337')
const_5995 = relay.const([5.684217,5.153420,-4.567557,-7.662480,8.302499,2.642196,3.317962,2.195276,-6.540455,4.489855,-1.195075,7.379691,3.932197,6.576449,6.312749,-7.454004,4.694312,9.773847,-0.258093,-0.653268,-8.408319,2.696732,-3.963882,-8.799654,-6.799367,-1.464454,6.654161,-1.785247,-6.737000,7.218481,-2.266539,-8.252850,0.529433,9.351513,4.006980,2.848849,2.607140,9.868422,-3.360365,-7.016621,9.957093,1.063193,-5.306343,1.822533,-0.634960,-0.823882,-3.710544,-4.119416,-3.258417,-2.868665,7.390228,-1.194157,-0.724174,-0.482908,8.907482,1.281622,0.642078,9.870170,-4.239138,-6.064156,5.459666,9.288830,1.664349,2.528998,8.597840,6.655258,5.006271,5.666231,2.531530,-1.248496,-0.651824,-6.616276,5.621968,5.180740,-8.601954,-9.170584,1.986663,-1.820119,5.466456,-6.287041,3.086448,2.809980,2.991646,-4.259537,-2.910215,5.392332,-2.445880,-0.173751,4.234314,8.918917,-0.200440,6.890243,7.393122,-7.475201,0.426756,3.378087,9.224388,-0.094672,1.551639,8.604926,2.574786,-1.390939,-5.290374,7.139825,-5.409164,-7.806384,-4.601527,-3.550580,2.298790,-2.811740,-8.827491,9.423089,-5.464621,-7.419823,-1.949113,0.140573,3.400765,6.801683,4.652395,1.945096,7.488985,-1.922821,-9.599804,2.276221,4.656159,-0.365032,4.791809,2.409045,1.449774,6.694359,-4.148956,-3.193766,-0.137652,7.243634,-1.683269,1.711471,-1.475703,-3.253731,2.551465,-6.481704,0.240158,-4.781632,-0.216750,1.007358,7.355888,4.971035,8.513378,0.142308,8.422473,8.774833,-2.991762,0.277539,-4.250473,0.753224,4.439354,2.438338,-6.037654,5.786875,1.112847,9.167692,8.732869,-3.355292,-9.062207,-0.225788,5.919105,6.785675,5.152673,-2.126881,-3.545564,7.987713,-5.604302,5.871790,-0.855857,5.640653,2.295603,-5.052919,-8.361422,1.885346,1.285173,-8.771680,-9.168800,-8.522268,3.312292,3.155676,-3.180729,5.096005,1.824928,4.484146,-5.996610,-1.877837,2.999059,-7.407774,6.932126,-9.462674,-7.861082,9.226573,9.545836,-8.690765,0.952994,-3.594011,-9.789829,-3.228101,-4.105994,1.627013,-4.113891,-0.257637,-5.975128,4.596033,6.991544,-2.146357,2.181203,-3.153590,4.498188,8.381945,-6.782976,-8.757441,3.065800,4.455407,4.632966,-7.586242,-9.120828,4.054116,-4.624227,-7.745773,6.848765,8.477516,6.086410,8.574059,-7.602701,2.611471,-2.832940,9.666267,-3.134171,-9.064079,3.261280,2.328982,2.162344,-6.608073,-4.306398,4.305056,-9.234135,-3.878585,-0.693475,-0.523844,-2.153517,-2.220951,-2.906520,-3.693653,-6.073952,-9.629121,-8.862759,0.339208], dtype = "float64")#candidate|5995|(252,)|const|float64
call_5994 = relay.TupleGetItem(func_4335_call(relay.reshape(const_5995.astype('float64'), [6, 14, 3])), 0)
call_5996 = relay.TupleGetItem(func_4337_call(relay.reshape(const_5995.astype('float64'), [6, 14, 3])), 0)
output = relay.Tuple([call_5960,call_5973,var_5974,call_5992,call_5994,const_5995,])
output2 = relay.Tuple([call_5961,call_5975,var_5974,call_5993,call_5996,const_5995,])
func_6005 = relay.Function([var_5974,], output)
mod['func_6005'] = func_6005
mod = relay.transform.InferType()(mod)
var_6006 = relay.var("var_6006", dtype = "float64", shape = (91, 10))#candidate|6006|(91, 10)|var|float64
output = func_6005(var_6006)
func_6007 = relay.Function([var_6006], output)
mutated_mod['func_6007'] = func_6007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5398_call = mod.get_global_var('func_5398')
func_5399_call = mutated_mod.get_global_var('func_5399')
call_6016 = func_5398_call()
call_6017 = func_5398_call()
func_3155_call = mod.get_global_var('func_3155')
func_3158_call = mutated_mod.get_global_var('func_3158')
var_6044 = relay.var("var_6044", dtype = "float64", shape = (156,))#candidate|6044|(156,)|var|float64
call_6043 = relay.TupleGetItem(func_3155_call(relay.reshape(var_6044.astype('float64'), [156, 1])), 3)
call_6045 = relay.TupleGetItem(func_3158_call(relay.reshape(var_6044.astype('float64'), [156, 1])), 3)
func_3617_call = mod.get_global_var('func_3617')
func_3619_call = mutated_mod.get_global_var('func_3619')
call_6054 = relay.TupleGetItem(func_3617_call(), 0)
call_6055 = relay.TupleGetItem(func_3619_call(), 0)
output = relay.Tuple([call_6016,call_6043,var_6044,call_6054,])
output2 = relay.Tuple([call_6017,call_6045,var_6044,call_6055,])
func_6070 = relay.Function([var_6044,], output)
mod['func_6070'] = func_6070
mod = relay.transform.InferType()(mod)
var_6071 = relay.var("var_6071", dtype = "float64", shape = (156,))#candidate|6071|(156,)|var|float64
output = func_6070(var_6071)
func_6072 = relay.Function([var_6071], output)
mutated_mod['func_6072'] = func_6072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3821_call = mod.get_global_var('func_3821')
func_3823_call = mutated_mod.get_global_var('func_3823')
call_6103 = relay.TupleGetItem(func_3821_call(), 0)
call_6104 = relay.TupleGetItem(func_3823_call(), 0)
var_6109 = relay.var("var_6109", dtype = "float32", shape = (1560,))#candidate|6109|(1560,)|var|float32
bop_6110 = relay.bitwise_xor(call_6103.astype('int64'), relay.reshape(var_6109.astype('int64'), relay.shape_of(call_6103))) # shape=(1560,)
bop_6113 = relay.bitwise_xor(call_6104.astype('int64'), relay.reshape(var_6109.astype('int64'), relay.shape_of(call_6104))) # shape=(1560,)
uop_6120 = relay.rsqrt(call_6103.astype('float32')) # shape=(1560,)
uop_6122 = relay.rsqrt(call_6104.astype('float32')) # shape=(1560,)
var_6127 = relay.var("var_6127", dtype = "float32", shape = (1560,))#candidate|6127|(1560,)|var|float32
bop_6128 = relay.minimum(uop_6120.astype('float64'), relay.reshape(var_6127.astype('float64'), relay.shape_of(uop_6120))) # shape=(1560,)
bop_6131 = relay.minimum(uop_6122.astype('float64'), relay.reshape(var_6127.astype('float64'), relay.shape_of(uop_6122))) # shape=(1560,)
func_1640_call = mod.get_global_var('func_1640')
func_1643_call = mutated_mod.get_global_var('func_1643')
const_6138 = relay.const([9,-5,-5,1,2,2,2,-4,-4,-9,-1,6,-7,-4,-9,2,-7,1,2,1,-5,-4,2,-7,2,7,-6,7,-9,-8,-5,6,-9,-3,10,-5,-9,-3,4,9,5,1,1,7,-10,8,-5,-7,-3,5,8,-10,8,8,-3,-10,-3,2,-1,-5,5,-6,10,-5,8,6,-2,3,-8,-4,7,1,-6,-5,-5,-10,4,9,3,-4,-5,-7,7,-9,-8,-7,-6,7,3,-1,-10,9,8,5,3,2,-2,-7,8,3,8,3,10,7,1,4,-10,-5,-10,-2,2,10,-5,-10,-2,9,4,-3,-1,10,10,-3,-6,1,-9,-8,8,-2,5,-4,-6,9,4,-4,2,-6,7,-3,8,-8,6,5,-4,-5], dtype = "int64")#candidate|6138|(144,)|const|int64
call_6137 = relay.TupleGetItem(func_1640_call(relay.reshape(const_6138.astype('int64'), [144,])), 5)
call_6139 = relay.TupleGetItem(func_1643_call(relay.reshape(const_6138.astype('int64'), [144,])), 5)
func_5857_call = mod.get_global_var('func_5857')
func_5859_call = mutated_mod.get_global_var('func_5859')
call_6143 = func_5857_call()
call_6144 = func_5857_call()
output = relay.Tuple([bop_6110,bop_6128,call_6137,const_6138,call_6143,])
output2 = relay.Tuple([bop_6113,bop_6131,call_6139,const_6138,call_6144,])
func_6152 = relay.Function([var_6109,var_6127,], output)
mod['func_6152'] = func_6152
mod = relay.transform.InferType()(mod)
var_6153 = relay.var("var_6153", dtype = "float32", shape = (1560,))#candidate|6153|(1560,)|var|float32
var_6154 = relay.var("var_6154", dtype = "float32", shape = (1560,))#candidate|6154|(1560,)|var|float32
output = func_6152(var_6153,var_6154,)
func_6155 = relay.Function([var_6153,var_6154,], output)
mutated_mod['func_6155'] = func_6155
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6195 = relay.var("var_6195", dtype = "float64", shape = (15, 11, 2))#candidate|6195|(15, 11, 2)|var|float64
uop_6196 = relay.rsqrt(var_6195.astype('float64')) # shape=(15, 11, 2)
func_885_call = mod.get_global_var('func_885')
func_886_call = mutated_mod.get_global_var('func_886')
call_6213 = relay.TupleGetItem(func_885_call(), 0)
call_6214 = relay.TupleGetItem(func_886_call(), 0)
func_5398_call = mod.get_global_var('func_5398')
func_5399_call = mutated_mod.get_global_var('func_5399')
call_6217 = func_5398_call()
call_6218 = func_5398_call()
output = relay.Tuple([uop_6196,call_6213,call_6217,])
output2 = relay.Tuple([uop_6196,call_6214,call_6218,])
func_6225 = relay.Function([var_6195,], output)
mod['func_6225'] = func_6225
mod = relay.transform.InferType()(mod)
mutated_mod['func_6225'] = func_6225
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6226 = relay.var("var_6226", dtype = "float64", shape = (15, 11, 2))#candidate|6226|(15, 11, 2)|var|float64
func_6225_call = mutated_mod.get_global_var('func_6225')
call_6227 = func_6225_call(var_6226)
output = call_6227
func_6228 = relay.Function([var_6226], output)
mutated_mod['func_6228'] = func_6228
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6232 = relay.var("var_6232", dtype = "float64", shape = (5, 7, 3))#candidate|6232|(5, 7, 3)|var|float64
var_6233 = relay.var("var_6233", dtype = "float64", shape = (5, 7, 3))#candidate|6233|(5, 7, 3)|var|float64
bop_6234 = relay.power(var_6232.astype('float64'), relay.reshape(var_6233.astype('float64'), relay.shape_of(var_6232))) # shape=(5, 7, 3)
bop_6240 = relay.subtract(var_6232.astype('uint64'), relay.reshape(bop_6234.astype('uint64'), relay.shape_of(var_6232))) # shape=(5, 7, 3)
output = bop_6240
output2 = bop_6240
func_6246 = relay.Function([var_6232,var_6233,], output)
mod['func_6246'] = func_6246
mod = relay.transform.InferType()(mod)
var_6247 = relay.var("var_6247", dtype = "float64", shape = (5, 7, 3))#candidate|6247|(5, 7, 3)|var|float64
var_6248 = relay.var("var_6248", dtype = "float64", shape = (5, 7, 3))#candidate|6248|(5, 7, 3)|var|float64
output = func_6246(var_6247,var_6248,)
func_6249 = relay.Function([var_6247,var_6248,], output)
mutated_mod['func_6249'] = func_6249
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6312 = relay.var("var_6312", dtype = "float32", shape = (5, 9, 9))#candidate|6312|(5, 9, 9)|var|float32
uop_6313 = relay.asinh(var_6312.astype('float32')) # shape=(5, 9, 9)
bop_6326 = relay.power(uop_6313.astype('float32'), relay.reshape(var_6312.astype('float32'), relay.shape_of(uop_6313))) # shape=(5, 9, 9)
output = bop_6326
output2 = bop_6326
func_6329 = relay.Function([var_6312,], output)
mod['func_6329'] = func_6329
mod = relay.transform.InferType()(mod)
mutated_mod['func_6329'] = func_6329
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6330 = relay.var("var_6330", dtype = "float32", shape = (5, 9, 9))#candidate|6330|(5, 9, 9)|var|float32
func_6329_call = mutated_mod.get_global_var('func_6329')
call_6331 = func_6329_call(var_6330)
output = call_6331
func_6332 = relay.Function([var_6330], output)
mutated_mod['func_6332'] = func_6332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3617_call = mod.get_global_var('func_3617')
func_3619_call = mutated_mod.get_global_var('func_3619')
call_6341 = relay.TupleGetItem(func_3617_call(), 0)
call_6342 = relay.TupleGetItem(func_3619_call(), 0)
func_4639_call = mod.get_global_var('func_4639')
func_4641_call = mutated_mod.get_global_var('func_4641')
call_6355 = relay.TupleGetItem(func_4639_call(), 2)
call_6356 = relay.TupleGetItem(func_4641_call(), 2)
func_2449_call = mod.get_global_var('func_2449')
func_2451_call = mutated_mod.get_global_var('func_2451')
call_6372 = relay.TupleGetItem(func_2449_call(), 0)
call_6373 = relay.TupleGetItem(func_2451_call(), 0)
output = relay.Tuple([call_6341,call_6355,call_6372,])
output2 = relay.Tuple([call_6342,call_6356,call_6373,])
func_6378 = relay.Function([], output)
mod['func_6378'] = func_6378
mod = relay.transform.InferType()(mod)
output = func_6378()
func_6379 = relay.Function([], output)
mutated_mod['func_6379'] = func_6379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3617_call = mod.get_global_var('func_3617')
func_3619_call = mutated_mod.get_global_var('func_3619')
call_6405 = relay.TupleGetItem(func_3617_call(), 0)
call_6406 = relay.TupleGetItem(func_3619_call(), 0)
output = relay.Tuple([call_6405,])
output2 = relay.Tuple([call_6406,])
func_6416 = relay.Function([], output)
mod['func_6416'] = func_6416
mod = relay.transform.InferType()(mod)
mutated_mod['func_6416'] = func_6416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6416_call = mutated_mod.get_global_var('func_6416')
call_6417 = func_6416_call()
output = call_6417
func_6418 = relay.Function([], output)
mutated_mod['func_6418'] = func_6418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1457_call = mod.get_global_var('func_1457')
func_1459_call = mutated_mod.get_global_var('func_1459')
call_6453 = func_1457_call()
call_6454 = func_1457_call()
output = relay.Tuple([call_6453,])
output2 = relay.Tuple([call_6454,])
func_6473 = relay.Function([], output)
mod['func_6473'] = func_6473
mod = relay.transform.InferType()(mod)
mutated_mod['func_6473'] = func_6473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6473_call = mutated_mod.get_global_var('func_6473')
call_6474 = func_6473_call()
output = call_6474
func_6475 = relay.Function([], output)
mutated_mod['func_6475'] = func_6475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2982_call = mod.get_global_var('func_2982')
func_2983_call = mutated_mod.get_global_var('func_2983')
call_6509 = relay.TupleGetItem(func_2982_call(), 0)
call_6510 = relay.TupleGetItem(func_2983_call(), 0)
output = relay.Tuple([call_6509,])
output2 = relay.Tuple([call_6510,])
func_6515 = relay.Function([], output)
mod['func_6515'] = func_6515
mod = relay.transform.InferType()(mod)
mutated_mod['func_6515'] = func_6515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6515_call = mutated_mod.get_global_var('func_6515')
call_6516 = func_6515_call()
output = call_6516
func_6517 = relay.Function([], output)
mutated_mod['func_6517'] = func_6517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2094_call = mod.get_global_var('func_2094')
func_2096_call = mutated_mod.get_global_var('func_2096')
call_6550 = relay.TupleGetItem(func_2094_call(), 0)
call_6551 = relay.TupleGetItem(func_2096_call(), 0)
output = call_6550
output2 = call_6551
func_6558 = relay.Function([], output)
mod['func_6558'] = func_6558
mod = relay.transform.InferType()(mod)
output = func_6558()
func_6559 = relay.Function([], output)
mutated_mod['func_6559'] = func_6559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3728_call = mod.get_global_var('func_3728')
func_3730_call = mutated_mod.get_global_var('func_3730')
call_6560 = relay.TupleGetItem(func_3728_call(), 0)
call_6561 = relay.TupleGetItem(func_3730_call(), 0)
func_1479_call = mod.get_global_var('func_1479')
func_1482_call = mutated_mod.get_global_var('func_1482')
call_6609 = relay.TupleGetItem(func_1479_call(relay.reshape(call_6560.astype('uint8'), [5, 9, 3])), 0)
call_6610 = relay.TupleGetItem(func_1482_call(relay.reshape(call_6560.astype('uint8'), [5, 9, 3])), 0)
func_5013_call = mod.get_global_var('func_5013')
func_5015_call = mutated_mod.get_global_var('func_5015')
call_6614 = func_5013_call()
call_6615 = func_5013_call()
output = relay.Tuple([call_6560,call_6609,call_6614,])
output2 = relay.Tuple([call_6561,call_6610,call_6615,])
func_6618 = relay.Function([], output)
mod['func_6618'] = func_6618
mod = relay.transform.InferType()(mod)
mutated_mod['func_6618'] = func_6618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6618_call = mutated_mod.get_global_var('func_6618')
call_6619 = func_6618_call()
output = call_6619
func_6620 = relay.Function([], output)
mutated_mod['func_6620'] = func_6620
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6642 = relay.var("var_6642", dtype = "float64", shape = (6, 11, 5))#candidate|6642|(6, 11, 5)|var|float64
uop_6643 = relay.log2(var_6642.astype('float64')) # shape=(6, 11, 5)
func_2116_call = mod.get_global_var('func_2116')
func_2117_call = mutated_mod.get_global_var('func_2117')
call_6647 = func_2116_call()
call_6648 = func_2116_call()
const_6658 = relay.const([[[7.745481,8.989344,4.534939,-1.750742,-0.163731],[-0.745027,4.112254,-2.785165,0.114659,-1.484984],[7.976874,-5.988126,6.698854,-0.044505,-6.799135],[-6.234351,-6.106522,-8.238619,2.049833,4.662826],[-1.089877,-7.150664,-4.129615,-1.820123,9.651271],[5.106184,7.808606,8.050733,0.324077,4.452412],[-6.620249,7.770121,0.891638,-6.625519,3.099104],[-7.975944,4.537310,6.160956,5.083415,-5.065704],[-0.285191,7.453118,3.276076,-6.585811,1.174971],[2.899267,8.327145,-9.216174,-6.390690,6.645180],[-3.173902,5.809845,-2.737722,2.538418,0.388368]],[[5.911543,8.860001,9.099521,6.337897,-6.716503],[2.542385,-3.711699,-6.515775,-5.990142,-6.349091],[-2.259860,4.518911,-5.260620,7.047679,-1.348995],[6.916019,-7.965177,-6.291524,-1.831879,-2.648404],[-0.874850,-5.914030,-5.883945,1.396297,6.249728],[6.717120,6.376569,-6.035253,-5.081130,1.687586],[-7.655907,-0.578579,-8.678511,-2.851706,0.542775],[7.569916,-5.546322,-2.013911,-1.999697,7.405508],[3.720481,-1.893050,-2.434046,8.886051,-5.572690],[0.993471,0.651016,1.174977,-0.880192,-6.593016],[-1.065238,-8.726276,9.676068,-8.256267,-7.829416]],[[-9.415615,-9.186555,-7.654610,5.990297,4.100502],[2.045553,-5.606268,1.282417,-9.648285,5.421574],[9.146481,-6.442261,-4.109568,-8.829182,7.876321],[6.727536,9.883651,-7.236030,-5.144468,2.369590],[8.951458,-0.858530,7.681052,-9.809394,9.257105],[5.153245,1.492736,-8.003073,3.771157,-5.144335],[-4.914226,-0.396100,3.959124,4.385029,-5.956434],[-8.659314,9.988812,6.965463,-6.539966,-3.493395],[5.321664,-2.769758,4.009657,3.767392,2.393233],[-4.277675,8.343753,2.643887,3.621204,-6.904798],[9.523402,-4.173950,9.434495,-7.198877,5.021409]],[[2.556603,-8.516656,3.800891,3.765557,-0.327761],[1.529662,-0.763318,-7.663598,3.761800,-5.419293],[4.794578,-5.547459,4.514508,-8.236080,7.895515],[-7.154251,-9.046558,-3.817251,6.451064,-2.496447],[7.858581,-4.505962,-6.886368,3.187755,-1.178909],[6.846622,-2.196198,0.569497,8.538899,0.077106],[1.998804,-5.221981,-5.089907,-1.320260,-8.287307],[8.576544,-5.686229,8.323983,-3.240815,-8.507808],[-7.001255,8.652107,-0.965402,-7.724832,-5.151781],[-9.264206,-1.324104,2.388989,-6.879604,-2.408135],[4.667114,-6.003092,3.435770,-7.696139,-9.405672]],[[-4.020439,1.336327,4.441975,7.627879,7.188802],[2.261617,9.887296,-8.177317,-6.229814,-1.988013],[2.984343,3.850546,0.167904,5.692174,-2.803821],[3.121801,4.526797,-5.975063,-7.553207,-8.697013],[3.517820,1.382460,1.344033,-7.664310,-4.691797],[-0.978796,-0.554549,7.945175,-7.604350,0.940026],[9.653506,-8.296600,5.841967,5.748650,-7.366352],[-2.564176,-0.269087,-8.291313,8.417283,0.763202],[-6.953067,-1.146388,9.315125,-8.966964,-5.705659],[5.846100,-2.075352,-3.783230,-6.105299,2.083906],[-9.400041,2.258209,-8.732766,-4.966185,-9.269919]],[[8.175353,-6.752548,1.073181,-7.909888,5.473286],[8.978411,-6.951492,-9.051371,-5.858144,-7.694496],[5.818569,2.925184,5.883497,4.687398,6.477709],[-1.545074,-3.071421,-1.136151,-2.235029,8.350861],[-1.757760,-9.825776,2.114374,8.298225,-4.147027],[0.746810,-8.114824,-8.283534,-1.281101,-6.762305],[8.235120,5.957213,8.961356,8.089470,-7.784580],[6.522202,8.974897,0.578816,6.373626,-5.656805],[-7.565253,3.967576,-9.294120,3.909406,7.429198],[8.616038,-6.258839,-7.102136,-5.905098,9.906619],[6.457329,1.153703,3.592401,5.282556,-6.100161]]], dtype = "float64")#candidate|6658|(6, 11, 5)|const|float64
bop_6659 = relay.less(uop_6643.astype('bool'), relay.reshape(const_6658.astype('bool'), relay.shape_of(uop_6643))) # shape=(6, 11, 5)
output = relay.Tuple([call_6647,bop_6659,])
output2 = relay.Tuple([call_6648,bop_6659,])
func_6663 = relay.Function([var_6642,], output)
mod['func_6663'] = func_6663
mod = relay.transform.InferType()(mod)
mutated_mod['func_6663'] = func_6663
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6664 = relay.var("var_6664", dtype = "float64", shape = (6, 11, 5))#candidate|6664|(6, 11, 5)|var|float64
func_6663_call = mutated_mod.get_global_var('func_6663')
call_6665 = func_6663_call(var_6664)
output = call_6665
func_6666 = relay.Function([var_6664], output)
mutated_mod['func_6666'] = func_6666
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6668 = relay.const([[2.537862,3.096707,-5.446745,4.708712,-7.948895,-2.233508,-8.963473,0.643751,-8.464201],[7.283474,9.528972,-6.553062,3.756777,1.939429,4.100173,-7.017683,-3.693691,-8.623507],[-0.082615,-1.530023,5.560116,-6.226293,-7.711461,1.811846,-6.085343,6.323817,6.487725],[-4.688113,-7.890373,4.651405,-5.184235,-1.381196,2.041463,-5.620378,4.094778,-0.736848]], dtype = "float64")#candidate|6668|(4, 9)|const|float64
uop_6669 = relay.cosh(const_6668.astype('float64')) # shape=(4, 9)
output = relay.Tuple([uop_6669,])
output2 = relay.Tuple([uop_6669,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

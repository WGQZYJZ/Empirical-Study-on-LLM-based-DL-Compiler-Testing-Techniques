==========mod==========
#[version = "0.0.5"]
def @func_542(%var_435: Tensor[(11, 9, 6), float32], %var_440: Tensor[(11, 9, 6), float32]) -> (Tensor[(4, 7, 6), float64], float64, Tensor[(168), float64], Tensor[(4, 7, 6), float32], Tensor[(11, 9, 6), float64], Tensor[(11, 9, 6), float32]) {
  %0 = cast(3.12763f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(168), float64] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %3 = reshape(%0, newshape=[]) /* ty=float64 */;
  %4 = reshape(%1, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float64] */;
  %5 = reshape(%2, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float32] */;
  %6 = @func_242(%3, %4, %5) /* ty=(Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) */;
  %7 = cast(3.12763f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %8 = %6.0;
  %9 = cast(%8, dtype="float64") /* ty=Tensor[(4, 7, 6), float64] */;
  %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(168), float64] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %11 = reshape(%7, newshape=[]) /* ty=float64 */;
  %12 = reshape(%9, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float64] */;
  %13 = reshape(%10, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float32] */;
  %14 = @func_242(%11, %12, %13) /* ty=(Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) */;
  %15 = cast(%var_435, dtype="float32") /* ty=Tensor[(11, 9, 6), float32] */;
  %16 = log2(%15) /* ty=Tensor[(11, 9, 6), float32] */;
  %17 = cast(%var_440, dtype="float32") /* ty=Tensor[(11, 9, 6), float32] */;
  %18 = shape_of(%16, dtype="int32") /* ty=Tensor[(3), int32] */;
  %19 = cast(%16, dtype="float32") /* ty=Tensor[(11, 9, 6), float32] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %21 = floor_mod(%19, %20) /* ty=Tensor[(11, 9, 6), float32] */;
  %22 = cast(%21, dtype="float64") /* ty=Tensor[(11, 9, 6), float64] */;
  %23 = cast(%21, dtype="float32") /* ty=Tensor[(11, 9, 6), float32] */;
  %24 = erf(%23) /* ty=Tensor[(11, 9, 6), float32] */;
  %25 = cast(%21, dtype="int16") /* ty=Tensor[(11, 9, 6), int16] */;
  %26 = shape_of(%24, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(%24, dtype="int16") /* ty=Tensor[(11, 9, 6), int16] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %29 = bitwise_xor(%27, %28) /* ty=Tensor[(11, 9, 6), int16] */;
  %30 = cast(%29, dtype="float32") /* ty=Tensor[(11, 9, 6), float32] */;
  %31 = %14.1;
  %32 = sigmoid(%22) /* ty=Tensor[(11, 9, 6), float64] */;
  %33 = sin(%30) /* ty=Tensor[(11, 9, 6), float32] */;
  (%8, 3.12763f64 /* ty=float64 */, meta[relay.Constant][0] /* ty=Tensor[(168), float64] */, %31, %32, %33)
}

def @func_5174() -> Tensor[(5, 9, 3), int8] {
  %34 = @func_3927() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) */;
  %34.1
}

def @func_2202() -> (Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float64], float32, Tensor[(39, 4), float64]) {
  %35 = @func_1259() /* ty=(Tensor[(5, 9, 3), float64],) */;
  %36 = cast(meta[relay.Constant][1] /* ty=Tensor[(39, 4), float64] */, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
  %37 = reshape(%36, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), float64] */;
  %38 = @func_622(%37) /* ty=(Tensor[(3, 13, 4), bool], Tensor[(594), float32], float32, Tensor[(1560), float32], Tensor[(594), float32]) */;
  %39 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
  %40 = %35.0;
  %41 = %38.2;
  (%39, %40, %41, meta[relay.Constant][1] /* ty=Tensor[(39, 4), float64] */)
}

def @func_2049() -> (Tensor[(5, 9, 3), float64], Tensor[(144), int64], Tensor[(3120), float32]) {
  %42 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %43 = %42.0;
  %44 = cast(%43, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(3120), float32] */, dtype="float32") /* ty=Tensor[(3120), float32] */;
  %46 = reshape(%45, newshape=[15, 16, 13]) /* ty=Tensor[(15, 16, 13), float32] */;
  %47 = @func_1821(%46) /* ty=(Tensor[(15, 16, 13), float32], Tensor[(3, 198), float32], Tensor[(144), int64]) */;
  %48 = asin(%44) /* ty=Tensor[(5, 9, 3), float64] */;
  %49 = %47.2;
  (%48, %49, meta[relay.Constant][2] /* ty=Tensor[(3120), float32] */)
}

def @func_3927() -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) {
  %50 = @func_3728() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %51 = @func_3872() /* ty=Tensor[(5, 9, 3), int8] */;
  %52 = %50.0;
  (%51, %52)
}

def @func_1746(%var_1721: Tensor[(1560), float32]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32]) {
  %53 = @func_1238() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %54 = cast(meta[relay.Constant][3] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %55 = %53.0;
  %56 = cast(%55, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
  %57 = cast(%var_1721, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %58 = reshape(%54, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %59 = reshape(%56, newshape=[5, 9, 3]) /* ty=Tensor[(5, 9, 3), uint8] */;
  %60 = reshape(%57, newshape=[1560, 1]) /* ty=Tensor[(1560, 1), float32] */;
  %61 = @func_849(%58, %59, %60) /* ty=(float64, Tensor[(594), float32], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), bool], Tensor[(10, 13, 12), float32], Tensor[(1560, 1), float32]) */;
  %62 = %61.2;
  (%55, %62, meta[relay.Constant][3] /* ty=Tensor[(594), float32] */, %var_1721)
}

def @func_3617() -> (Tensor[(5, 9, 3), int8],) {
  %63 = @func_3039() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %64 = %63.0;
  (%64,)
}

def @func_1410(%var_1386: Tensor[(8, 5, 15), float32]) -> Tensor[(8, 5, 15), float32] {
  %65 = cast(%var_1386, dtype="float32") /* ty=Tensor[(8, 5, 15), float32] */;
  %66 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(8, 5, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(8, 5, 15), float32] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%67, %68) /* ty=Tensor[(8, 5, 15), float32] */
}

def @func_3429(%var_3420: Tensor[(11, 5, 3), uint32]) -> (Tensor[(11, 5, 3), uint32], Tensor[(11, 5, 3), float64]) {
  %69 = cast(meta[relay.Constant][5] /* ty=Tensor[(11, 5, 3), uint32] */, dtype="uint32") /* ty=Tensor[(11, 5, 3), uint32] */;
  %70 = shape_of(%var_3420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%var_3420, dtype="uint32") /* ty=Tensor[(11, 5, 3), uint32] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %73 = cast(meta[relay.Constant][5] /* ty=Tensor[(11, 5, 3), uint32] */, dtype="float64") /* ty=Tensor[(11, 5, 3), float64] */;
  %74 = add(%71, %72) /* ty=Tensor[(11, 5, 3), uint32] */;
  %75 = asin(%73) /* ty=Tensor[(11, 5, 3), float64] */;
  (%74, %75)
}

def @func_622(%var_590: Tensor[(3, 13, 4), float64]) -> (Tensor[(3, 13, 4), bool], Tensor[(594), float32], float32, Tensor[(1560), float32], Tensor[(594), float32]) {
  %76 = cast(%var_590, dtype="float64") /* ty=Tensor[(3, 13, 4), float64] */;
  %77 = acos(%76) /* ty=Tensor[(3, 13, 4), float64] */;
  %78 = cast(%77, dtype="float64") /* ty=Tensor[(3, 13, 4), float64] */;
  %79 = atan(%78) /* ty=Tensor[(3, 13, 4), float64] */;
  %80 = cast(%77, dtype="bool") /* ty=Tensor[(3, 13, 4), bool] */;
  %81 = shape_of(%79, dtype="int32") /* ty=Tensor[(3), int32] */;
  %82 = cast(%79, dtype="bool") /* ty=Tensor[(3, 13, 4), bool] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %84 = cast(6.90843f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %85 = cast(meta[relay.Constant][6] /* ty=Tensor[(1560), float32] */, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %86 = cast(meta[relay.Constant][7] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %87 = reshape(%84, newshape=[]) /* ty=float32 */;
  %88 = reshape(%85, newshape=[10, 13, 12]) /* ty=Tensor[(10, 13, 12), float32] */;
  %89 = reshape(%86, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %90 = @func_575(%87, %88, %89) /* ty=(Tensor[(10, 13, 12), float32], Tensor[(4, 7, 6), int16], Tensor[(168), float64], Tensor[(4, 7, 6), float64], Tensor[(594), float32]) */;
  %91 = logical_or(%82, %83) /* ty=Tensor[(3, 13, 4), bool] */;
  %92 = %90.4;
  (%91, %92, 6.90843f /* ty=float32 */, meta[relay.Constant][6] /* ty=Tensor[(1560), float32] */, meta[relay.Constant][7] /* ty=Tensor[(594), float32] */)
}

def @func_1821(%var_1782: Tensor[(15, 16, 13), float32]) -> (Tensor[(15, 16, 13), float32], Tensor[(3, 198), float32], Tensor[(144), int64]) {
  %93 = cast(%var_1782, dtype="float32") /* ty=Tensor[(15, 16, 13), float32] */;
  %94 = cast(meta[relay.Constant][8] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %95 = reshape(%94, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %96 = @func_1640(%95) /* ty=(Tensor[(5, 9, 3), float64], Tensor[(15, 8, 11), float32], Tensor[(1320), int64], Tensor[(3, 198), float32], Tensor[(5, 9, 3), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64]) */;
  %97 = atanh(%93) /* ty=Tensor[(15, 16, 13), float32] */;
  %98 = %96.3;
  (%97, %98, meta[relay.Constant][8] /* ty=Tensor[(144), int64] */)
}

def @func_4335(%var_4332: Tensor[(6, 14, 3), float64]) -> (Tensor[(6, 14, 3), float64],) {
  %99 = cast(%var_4332, dtype="float64") /* ty=Tensor[(6, 14, 3), float64] */;
  %100 = sqrt(%99) /* ty=Tensor[(6, 14, 3), float64] */;
  (%100,)
}

def @func_5857() -> Tensor[(5, 9, 3), uint8] {
  @func_2874() /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_3783() -> Tensor[(5, 9, 3), int8] {
  %101 = @func_3617() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %101.0
}

def @func_1969() -> (Tensor[(5, 9, 3), int8],) {
  %102 = @func_1557() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %103 = %102.0;
  (%103,)
}

def @func_4012(%var_4008: Tensor[(594), float32]) -> (Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8], Tensor[(135), uint64], Tensor[(2016), uint32], Tensor[(594), float32]) {
  %104 = @func_2006() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8]) */;
  %105 = %104.0;
  %106 = cast(%105, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
  %107 = reshape(%106, newshape=[5, 9, 3]) /* ty=Tensor[(5, 9, 3), uint8] */;
  %108 = @func_1479(%107) /* ty=(Tensor[(5, 9, 3), float64],) */;
  %109 = @func_2982() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %110 = @func_3039() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %111 = cast(meta[relay.Constant][9] /* ty=Tensor[(2016), uint32] */, dtype="uint32") /* ty=Tensor[(2016), uint32] */;
  %112 = cast(%var_4008, dtype="float32") /* ty=Tensor[(594), float32] */;
  %113 = %109.0;
  %114 = cast(%113, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
  %115 = reshape(%111, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), uint32] */;
  %116 = reshape(%112, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %117 = reshape(%114, newshape=[135]) /* ty=Tensor[(135), uint8] */;
  %118 = @func_3768(%115, %116, %117) /* ty=(Tensor[(16, 9, 14), bool], Tensor[(1320), int64], Tensor[(594), float32], Tensor[(135), uint64]) */;
  %119 = %108.0;
  %120 = %110.0;
  %121 = %118.3;
  (%105, %119, %113, %120, %121, meta[relay.Constant][9] /* ty=Tensor[(2016), uint32] */, %var_4008)
}

def @func_5374(%var_5282: bool, %var_5341: Tensor[(360), int16], %var_5342: Tensor[(60), int16]) -> (Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int64], Tensor[(5, 9, 3), int8], bool, Tensor[(594), float32], Tensor[(144), int64], Tensor[(168), float64], Tensor[(1560), float32], Tensor[(5, 9, 3), int8], Tensor[(6, 6, 10), int16], Tensor[(360), int16], Tensor[(60), int16], Tensor[(5, 9, 3), float32], Tensor[(594), float32]) {
  %122 = @func_1557() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %123 = %122.0;
  %124 = cast(%123, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
  %125 = reshape(%124, newshape=[5, 9, 3]) /* ty=Tensor[(5, 9, 3), uint8] */;
  %126 = @func_2699(%125) /* ty=(Tensor[(5, 9, 3), int64],) */;
  %127 = cast(%var_5282, dtype="bool") /* ty=bool */;
  %128 = reshape(%127, newshape=[]) /* ty=bool */;
  %129 = @func_2793(%128) /* ty=(Tensor[(9, 7), bool], Tensor[(5, 9, 3), int8]) */;
  %130 = cast(meta[relay.Constant][10] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %131 = cast(%var_5282, dtype="float64") /* ty=float64 */;
  %132 = cast(meta[relay.Constant][11] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %133 = cast(meta[relay.Constant][12] /* ty=Tensor[(1560), float32] */, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %134 = reshape(%130, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %135 = reshape(%131, newshape=[]) /* ty=float64 */;
  %136 = reshape(%132, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %137 = reshape(%133, newshape=[1560]) /* ty=Tensor[(1560), float32] */;
  %138 = @func_1042(%134, %135, %136, %137) /* ty=(Tensor[(5, 9, 3), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64], Tensor[(594), float32], Tensor[(1560), float32], Tensor[(594), float32], Tensor[(12, 6, 2), int64], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), float64]) */;
  %139 = @func_3728() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %140 = cast(%var_5341, dtype="int16") /* ty=Tensor[(360), int16] */;
  %141 = cast(%var_5342, dtype="int16") /* ty=Tensor[(60), int16] */;
  %142 = reshape(%140, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), int16] */;
  %143 = reshape(%141, newshape=[1, 6, 10]) /* ty=Tensor[(1, 6, 10), int16] */;
  %144 = @func_4611(%142, %143) /* ty=(Tensor[(6, 6, 10), int16], Tensor[(?, 6, 10), bool]) */;
  %145 = cast(meta[relay.Constant][12] /* ty=Tensor[(1560), float32] */, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %146 = reshape(%145, newshape=[1560]) /* ty=Tensor[(1560), float32] */;
  %147 = @func_1746(%146) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32]) */;
  %148 = cast(meta[relay.Constant][12] /* ty=Tensor[(1560), float32] */, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %149 = reshape(%148, newshape=[1560]) /* ty=Tensor[(1560), float32] */;
  %150 = @func_1746(%149) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32]) */;
  %151 = @func_2874() /* ty=Tensor[(5, 9, 3), uint8] */;
  %152 = %126.0;
  %153 = %129.1;
  %154 = %138.6;
  %155 = %139.0;
  %156 = %144.0;
  %157 = %147.1;
  %158 = %150.2;
  (%151, %123, %152, %153, %var_5282, %154, meta[relay.Constant][10] /* ty=Tensor[(144), int64] */, meta[relay.Constant][11] /* ty=Tensor[(168), float64] */, meta[relay.Constant][12] /* ty=Tensor[(1560), float32] */, %155, %156, %var_5341, %var_5342, %157, %158)
}

def @func_4790(%var_4760: Tensor[(156), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8], Tensor[(156), float64]) {
  %159 = @func_4699() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %160 = cast(%var_4760, dtype="float64") /* ty=Tensor[(156), float64] */;
  %161 = reshape(%160, newshape=[39, 4]) /* ty=Tensor[(39, 4), float64] */;
  %162 = @func_2493(%161) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(39, 4), float64]) */;
  %163 = %159.0;
  %164 = %162.0;
  (%163, %164, %var_4760)
}

def @func_2249(%var_2238: Tensor[(11, 5, 9), float32], %var_2239: Tensor[(11, 5, 9), float32]) -> (Tensor[(11, 5, 9), float32], Tensor[(11, 5, 9), float32]) {
  %165 = cast(%var_2239, dtype="float32") /* ty=Tensor[(11, 5, 9), float32] */;
  %166 = shape_of(%var_2238, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%var_2238, dtype="float32") /* ty=Tensor[(11, 5, 9), float32] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %169 = cast(%var_2238, dtype="float32") /* ty=Tensor[(11, 5, 9), float32] */;
  %170 = floor_divide(%167, %168) /* ty=Tensor[(11, 5, 9), float32] */;
  %171 = tan(%169) /* ty=Tensor[(11, 5, 9), float32] */;
  (%170, %171)
}

def @func_1776(%var_1771: Tensor[(1320), int64], %var_1772: Tensor[(594), float32]) -> (Tensor[(5, 9, 3), uint8], Tensor[(6, 99), float32], Tensor[(1320), int64], Tensor[(594), float32]) {
  %172 = @func_885() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */;
  %173 = cast(%var_1771, dtype="int64") /* ty=Tensor[(1320), int64] */;
  %174 = cast(%var_1771, dtype="int64") /* ty=Tensor[(1320), int64] */;
  %175 = cast(%var_1772, dtype="float32") /* ty=Tensor[(594), float32] */;
  %176 = reshape(%173, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
  %177 = reshape(%174, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
  %178 = reshape(%175, newshape=[6, 99]) /* ty=Tensor[(6, 99), float32] */;
  %179 = @func_1288(%176, %177, %178) /* ty=(Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(1560, 1), float32], Tensor[(6, 99), float32], Tensor[(135), uint8], Tensor[(1560), float32]) */;
  %180 = %172.1;
  %181 = %179.4;
  (%180, %181, %var_1771, %var_1772)
}

def @func_2289() -> Tensor[(5, 9, 3), int8] {
  %182 = @func_1238() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %182.0
}

def @func_5893() -> Tensor[(5, 9, 3), uint8] {
  @func_5489() /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_1935() -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) {
  %183 = @func_1238() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %184 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %185 = @func_1238() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %186 = %185.0;
  %187 = cast(%186, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %188 = log2(%187) /* ty=Tensor[(5, 9, 3), float64] */;
  %189 = cast(%188, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %190 = erf(%189) /* ty=Tensor[(5, 9, 3), float64] */;
  %191 = cast(%190, dtype="float32") /* ty=Tensor[(5, 9, 3), float32] */;
  %192 = %183.0;
  %193 = %184.0;
  %194 = log10(%191) /* ty=Tensor[(5, 9, 3), float32] */;
  %195 = @func_1103() /* ty=Tensor[(5, 9, 3), uint64] */;
  (%192, %193, %194, %195)
}

def @func_2449() -> (Tensor[(144), int64],) {
  %196 = @func_2049() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(144), int64], Tensor[(3120), float32]) */;
  %197 = %196.1;
  (%197,)
}

def @func_5820(%var_5807: Tensor[(165), uint32]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(9, 12, 9), int16], Tensor[(78, 2), float64], Tensor[(11, 5, 3), float64], Tensor[(165), uint32], Tensor[(972), float64]) {
  %198 = @func_3927() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) */;
  %199 = cast(meta[relay.Constant][13] /* ty=Tensor[(972), int16] */, dtype="int16") /* ty=Tensor[(972), int16] */;
  %200 = cast(meta[relay.Constant][13] /* ty=Tensor[(972), int16] */, dtype="int16") /* ty=Tensor[(972), int16] */;
  %201 = cast(meta[relay.Constant][14] /* ty=Tensor[(78, 2), float64] */, dtype="float64") /* ty=Tensor[(78, 2), float64] */;
  %202 = reshape(%199, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int16] */;
  %203 = reshape(%200, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int16] */;
  %204 = reshape(%201, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %205 = @func_2345(%202, %203, %204) /* ty=(Tensor[(9, 12, 9), int16], Tensor[(1560), float32], Tensor[(156), float32]) */;
  %206 = cast(%var_5807, dtype="uint32") /* ty=Tensor[(165), uint32] */;
  %207 = reshape(%206, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint32] */;
  %208 = @func_3429(%207) /* ty=(Tensor[(11, 5, 3), uint32], Tensor[(11, 5, 3), float64]) */;
  %209 = cast(meta[relay.Constant][13] /* ty=Tensor[(972), int16] */, dtype="float64") /* ty=Tensor[(972), float64] */;
  %210 = acos(%209) /* ty=Tensor[(972), float64] */;
  %211 = cast(%210, dtype="float64") /* ty=Tensor[(972), float64] */;
  %212 = %198.1;
  %213 = @func_1103() /* ty=Tensor[(5, 9, 3), uint64] */;
  %214 = %205.0;
  %215 = %208.1;
  %216 = asin(%211) /* ty=Tensor[(972), float64] */;
  (%212, %213, %214, meta[relay.Constant][14] /* ty=Tensor[(78, 2), float64] */, %215, %var_5807, %216)
}

def @main() -> (Tensor[(4, 9), float64],) {
  %217 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 9), float64] */, dtype="float64") /* ty=Tensor[(4, 9), float64] */;
  %218 = cosh(%217) /* ty=Tensor[(4, 9), float64] */;
  (%218,)
}

def @func_2675(%var_2669: float64, %var_2670: Tensor[(168), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64]) {
  %219 = @func_1301() /* ty=(Tensor[(5, 9, 3), uint64], Tensor[(5, 9, 3), int8]) */;
  %220 = @func_1935() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) */;
  %221 = cast(%var_2669, dtype="float64") /* ty=float64 */;
  %222 = cast(%var_2670, dtype="float64") /* ty=Tensor[(168), float64] */;
  %223 = cast(%var_2670, dtype="float32") /* ty=Tensor[(168), float32] */;
  %224 = reshape(%221, newshape=[]) /* ty=float64 */;
  %225 = reshape(%222, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float64] */;
  %226 = reshape(%223, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float32] */;
  %227 = @func_242(%224, %225, %226) /* ty=(Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) */;
  %228 = %219.1;
  %229 = %220.3;
  %230 = %227.1;
  (%228, %229, %230, %var_2669, %var_2670)
}

def @func_2945(%var_2939: Tensor[(156), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8], Tensor[(9, 12, 9), int16], Tensor[(3, 324), int16], Tensor[(156), float64]) {
  %231 = @func_1850() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %232 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 324), int16] */, dtype="int16") /* ty=Tensor[(3, 324), int16] */;
  %233 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 324), int16] */, dtype="int16") /* ty=Tensor[(3, 324), int16] */;
  %234 = cast(%var_2939, dtype="float64") /* ty=Tensor[(156), float64] */;
  %235 = reshape(%232, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int16] */;
  %236 = reshape(%233, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int16] */;
  %237 = reshape(%234, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %238 = @func_2345(%235, %236, %237) /* ty=(Tensor[(9, 12, 9), int16], Tensor[(1560), float32], Tensor[(156), float32]) */;
  %239 = %231.0;
  %240 = @func_2289() /* ty=Tensor[(5, 9, 3), int8] */;
  %241 = %238.0;
  (%239, %240, %241, meta[relay.Constant][16] /* ty=Tensor[(3, 324), int16] */, %var_2939)
}

def @func_3039() -> (Tensor[(5, 9, 3), int8],) {
  %242 = @func_2006() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8]) */;
  %243 = %242.1;
  (%243,)
}

def @func_5398() -> Tensor[(5, 9, 3), int8] {
  @func_5013() /* ty=Tensor[(5, 9, 3), int8] */
}

def @func_1238() -> (Tensor[(5, 9, 3), int8],) {
  %244 = @func_885() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */;
  %245 = %244.1;
  %246 = @func_885() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */;
  %247 = %246.1;
  %248 = cast(%247, dtype="int8") /* ty=Tensor[(5, 9, 3), int8] */;
  %249 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%245, dtype="int8") /* ty=Tensor[(5, 9, 3), int8] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %252 = right_shift(%250, %251) /* ty=Tensor[(5, 9, 3), int8] */;
  (%252,)
}

def @func_6329(%var_6312: Tensor[(5, 9, 9), float32]) -> Tensor[(5, 9, 9), float32] {
  %253 = cast(%var_6312, dtype="float32") /* ty=Tensor[(5, 9, 9), float32] */;
  %254 = asinh(%253) /* ty=Tensor[(5, 9, 9), float32] */;
  %255 = cast(%var_6312, dtype="float32") /* ty=Tensor[(5, 9, 9), float32] */;
  %256 = shape_of(%254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(%254, dtype="float32") /* ty=Tensor[(5, 9, 9), float32] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%257, %258) /* ty=Tensor[(5, 9, 9), float32] */
}

def @func_2811() -> (Tensor[(144), int64],) {
  %259 = @func_2449() /* ty=(Tensor[(144), int64],) */;
  %260 = %259.0;
  (%260,)
}

def @func_4955(%var_4952: Tensor[(3120), float32]) -> (Tensor[(144), int64], Tensor[(9, 7), bool], bool, Tensor[(144), int64], Tensor[(3120), float32]) {
  %261 = @func_2811() /* ty=(Tensor[(144), int64],) */;
  %262 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %263 = reshape(%262, newshape=[]) /* ty=bool */;
  %264 = @func_2793(%263) /* ty=(Tensor[(9, 7), bool], Tensor[(5, 9, 3), int8]) */;
  %265 = cast(%var_4952, dtype="float32") /* ty=Tensor[(3120), float32] */;
  %266 = reshape(%265, newshape=[15, 16, 13]) /* ty=Tensor[(15, 16, 13), float32] */;
  %267 = @func_1821(%266) /* ty=(Tensor[(15, 16, 13), float32], Tensor[(3, 198), float32], Tensor[(144), int64]) */;
  %268 = %261.0;
  %269 = %264.0;
  %270 = %267.2;
  (%268, %269, False /* ty=bool */, %270, %var_4952)
}

def @func_6225(%var_6195: Tensor[(15, 11, 2), float64]) -> (Tensor[(15, 11, 2), float64], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), int8]) {
  %271 = cast(%var_6195, dtype="float64") /* ty=Tensor[(15, 11, 2), float64] */;
  %272 = @func_885() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */;
  %273 = rsqrt(%271) /* ty=Tensor[(15, 11, 2), float64] */;
  %274 = %272.0;
  %275 = @func_5398() /* ty=Tensor[(5, 9, 3), int8] */;
  (%273, %274, %275)
}

def @func_5752() -> (Tensor[(5, 9, 3), uint64],) {
  %276 = @func_1301() /* ty=(Tensor[(5, 9, 3), uint64], Tensor[(5, 9, 3), int8]) */;
  %277 = %276.0;
  (%277,)
}

def @func_4899(%var_4830: Tensor[(7, 1, 4), int64], %var_4831: Tensor[(7, 4, 4), int64], %var_4844: Tensor[(1120), float32], %var_4860: Tensor[(7, 4, 4), int64], %var_4872: Tensor[(7, 4, 4), int64], %var_4883: Tensor[(594), float32]) -> (Tensor[(5, 9, 3), int8], Tensor[(1120), float32], Tensor[(10, 7, 13), float64], Tensor[(455, 2), float64], Tensor[(7, 4, 4), int16], Tensor[(7, 4, 4), float64], Tensor[(1560, 1), float32], Tensor[(1320), int64], Tensor[(594), float32], Tensor[(5, 9, 3), float64]) {
  %278 = cast(%var_4844, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %279 = reshape(%278, newshape=[8, 14, 10]) /* ty=Tensor[(8, 14, 10), float32] */;
  %280 = @func_4530(%279) /* ty=(Tensor[(8, 14, 10), uint64], Tensor[(5, 9, 3), int8]) */;
  %281 = cast(meta[relay.Constant][17] /* ty=Tensor[(455, 2), float64] */, dtype="float64") /* ty=Tensor[(455, 2), float64] */;
  %282 = reshape(%281, newshape=[10, 7, 13]) /* ty=Tensor[(10, 7, 13), float64] */;
  %283 = @func_2282(%282) /* ty=(Tensor[(10, 7, 13), float64], Tensor[(5, 9, 3), uint8]) */;
  %284 = cast(%var_4830, dtype="int64") /* ty=Tensor[(7, 1, 4), int64] */;
  %285 = cast(%var_4831, dtype="int64") /* ty=Tensor[(7, 4, 4), int64] */;
  %286 = right_shift(%284, %285) /* ty=Tensor[(7, 4, 4), int64] */;
  %287 = cast(%var_4860, dtype="int16") /* ty=Tensor[(7, 4, 4), int16] */;
  %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%286, dtype="int16") /* ty=Tensor[(7, 4, 4), int16] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %291 = cast(%var_4872, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %292 = shape_of(%var_4831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %293 = cast(%var_4831, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %295 = cast(meta[relay.Constant][18] /* ty=Tensor[(1320), int64] */, dtype="int64") /* ty=Tensor[(1320), int64] */;
  %296 = cast(meta[relay.Constant][18] /* ty=Tensor[(1320), int64] */, dtype="int64") /* ty=Tensor[(1320), int64] */;
  %297 = cast(%var_4883, dtype="float32") /* ty=Tensor[(594), float32] */;
  %298 = reshape(%295, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
  %299 = reshape(%296, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
  %300 = reshape(%297, newshape=[6, 99]) /* ty=Tensor[(6, 99), float32] */;
  %301 = @func_1288(%298, %299, %300) /* ty=(Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(1560, 1), float32], Tensor[(6, 99), float32], Tensor[(135), uint8], Tensor[(1560), float32]) */;
  %302 = %301.3;
  %303 = cast(%302, dtype="float32") /* ty=Tensor[(1560, 1), float32] */;
  %304 = reshape(%303, newshape=[1560]) /* ty=Tensor[(1560), float32] */;
  %305 = @func_4470(%304) /* ty=(Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), int8]) */;
  %306 = %280.1;
  %307 = %283.0;
  %308 = bitwise_and(%289, %290) /* ty=Tensor[(7, 4, 4), int16] */;
  %309 = multiply(%293, %294) /* ty=Tensor[(7, 4, 4), float64] */;
  %310 = %305.3;
  (%306, %var_4844, %307, meta[relay.Constant][17] /* ty=Tensor[(455, 2), float64] */, %308, %309, %302, meta[relay.Constant][18] /* ty=Tensor[(1320), int64] */, %var_4883, %310)
}

def @func_1288(%var_1262: Tensor[(15, 8, 11), int64], %var_1263: Tensor[(15, 8, 11), int64], %var_1283: Tensor[(6, 99), float32]) -> (Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(1560, 1), float32], Tensor[(6, 99), float32], Tensor[(135), uint8], Tensor[(1560), float32]) {
  %311 = cast(%var_1263, dtype="int64") /* ty=Tensor[(15, 8, 11), int64] */;
  %312 = shape_of(%var_1262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%var_1262, dtype="int64") /* ty=Tensor[(15, 8, 11), int64] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %315 = cast(%var_1262, dtype="float32") /* ty=Tensor[(15, 8, 11), float32] */;
  %316 = cast(%var_1263, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
  %317 = log(%316) /* ty=Tensor[(15, 8, 11), float64] */;
  %318 = cast(%317, dtype="float32") /* ty=Tensor[(15, 8, 11), float32] */;
  %319 = cast(%var_1283, dtype="float32") /* ty=Tensor[(6, 99), float32] */;
  %320 = cast(meta[relay.Constant][19] /* ty=Tensor[(135), uint8] */, dtype="uint8") /* ty=Tensor[(135), uint8] */;
  %321 = cast(meta[relay.Constant][20] /* ty=Tensor[(1560), float32] */, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %322 = reshape(%319, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %323 = reshape(%320, newshape=[5, 9, 3]) /* ty=Tensor[(5, 9, 3), uint8] */;
  %324 = reshape(%321, newshape=[1560, 1]) /* ty=Tensor[(1560, 1), float32] */;
  %325 = @func_849(%322, %323, %324) /* ty=(float64, Tensor[(594), float32], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), bool], Tensor[(10, 13, 12), float32], Tensor[(1560, 1), float32]) */;
  %326 = add(%313, %314) /* ty=Tensor[(15, 8, 11), int64] */;
  %327 = log10(%315) /* ty=Tensor[(15, 8, 11), float32] */;
  %328 = log2(%318) /* ty=Tensor[(15, 8, 11), float32] */;
  %329 = %325.5;
  (%326, %327, %328, %329, %var_1283, meta[relay.Constant][19] /* ty=Tensor[(135), uint8] */, meta[relay.Constant][20] /* ty=Tensor[(1560), float32] */)
}

def @func_1457() -> Tensor[(5, 9, 3), int8] {
  %330 = @func_1238() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %330.0
}

def @func_3768(%var_3742: Tensor[(16, 9, 14), uint32], %var_3751: Tensor[(594), float32], %var_3759: Tensor[(135), uint8]) -> (Tensor[(16, 9, 14), bool], Tensor[(1320), int64], Tensor[(594), float32], Tensor[(135), uint64]) {
  %331 = cast(%var_3742, dtype="bool") /* ty=Tensor[(16, 9, 14), bool] */;
  %332 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(16, 9, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(meta[relay.Constant][21] /* ty=Tensor[(16, 9, 14), uint32] */, dtype="bool") /* ty=Tensor[(16, 9, 14), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %335 = cast(meta[relay.Constant][22] /* ty=Tensor[(1320), int64] */, dtype="int64") /* ty=Tensor[(1320), int64] */;
  %336 = cast(meta[relay.Constant][22] /* ty=Tensor[(1320), int64] */, dtype="int64") /* ty=Tensor[(1320), int64] */;
  %337 = cast(%var_3751, dtype="float32") /* ty=Tensor[(594), float32] */;
  %338 = reshape(%335, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
  %339 = reshape(%336, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
  %340 = reshape(%337, newshape=[6, 99]) /* ty=Tensor[(6, 99), float32] */;
  %341 = @func_1288(%338, %339, %340) /* ty=(Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(1560, 1), float32], Tensor[(6, 99), float32], Tensor[(135), uint8], Tensor[(1560), float32]) */;
  %342 = %341.5;
  %343 = cast(%var_3759, dtype="uint64") /* ty=Tensor[(135), uint64] */;
  %344 = shape_of(%342, dtype="int32") /* ty=Tensor[(1), int32] */;
  %345 = cast(%342, dtype="uint64") /* ty=Tensor[(135), uint64] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %347 = equal(%333, %334) /* ty=Tensor[(16, 9, 14), bool] */;
  %348 = add(%345, %346) /* ty=Tensor[(135), uint64] */;
  (%347, meta[relay.Constant][22] /* ty=Tensor[(1320), int64] */, %var_3751, %348)
}

def @func_5082() -> (Tensor[(5, 9, 3), uint8],) {
  %349 = @func_1935() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) */;
  %350 = %349.1;
  (%350,)
}

def @func_1259() -> (Tensor[(5, 9, 3), float64],) {
  %351 = @func_885() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */;
  %352 = %351.0;
  (%352,)
}

def @func_1346() -> (Tensor[(5, 9, 3), uint8],) {
  %353 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
  (%353,)
}

def @func_5516(%var_5497: Tensor[(168, 1), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(144), int64], bool, Tensor[(168, 1), float64], Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) {
  %354 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %355 = cast(%var_5497, dtype="float64") /* ty=Tensor[(168, 1), float64] */;
  %356 = reshape(%354, newshape=[]) /* ty=bool */;
  %357 = reshape(%355, newshape=[42, 4]) /* ty=Tensor[(42, 4), float64] */;
  %358 = @func_3863(%356, %357) /* ty=(Tensor[(144), int64], Tensor[(9, 7), bool], bool, float64, Tensor[(42, 4), float64]) */;
  %359 = @func_3039() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %360 = @func_3591() /* ty=Tensor[(5, 9, 3), int8] */;
  %361 = %358.0;
  %362 = %359.0;
  %363 = @func_5013() /* ty=Tensor[(5, 9, 3), int8] */;
  (%360, %361, False /* ty=bool */, %var_5497, %362, %363)
}

def @func_4367() -> Tensor[(5, 9, 3), uint8] {
  %364 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %364.0
}

def @func_6473() -> (Tensor[(5, 9, 3), int8],) {
  %365 = @func_1457() /* ty=Tensor[(5, 9, 3), int8] */;
  (%365,)
}

def @func_3301() -> Tensor[(5, 9, 3), uint8] {
  @func_2874() /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_5452() -> Tensor[(5, 9, 3), int8] {
  @func_5398() /* ty=Tensor[(5, 9, 3), int8] */
}

def @func_6558() -> Tensor[(5, 9, 3), uint8] {
  %366 = @func_2094() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %366.0
}

def @func_775() -> Tensor[(5, 9, 3), uint8] {
  %367 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 9, 3), float32] */, dtype="float32") /* ty=Tensor[(5, 9, 3), float32] */;
  %368 = rsqrt(%367) /* ty=Tensor[(5, 9, 3), float32] */;
  %369 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 9, 3), float32] */, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
  %370 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(5, 9, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 9, 3), float32] */, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %373 = bitwise_and(%371, %372) /* ty=Tensor[(5, 9, 3), uint8] */;
  %374 = cast(%373, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
  %375 = shape_of(%368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %376 = cast(%368, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
  %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  multiply(%376, %377) /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_3591() -> Tensor[(5, 9, 3), int8] {
  %378 = @func_1557() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %378.0
}

def @func_4295(%var_4277: float64, %var_4278: Tensor[(168), float64]) -> (Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8], Tensor[(144), int64], Tensor[(5, 9, 3), float32], Tensor[(135), uint8], Tensor[(1320), int64], Tensor[(6, 99), float32], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64]) {
  %379 = @func_1850() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %380 = @func_3821() /* ty=(Tensor[(1560), float32], Tensor[(144), int64], Tensor[(5, 9, 3), uint8]) */;
  %381 = @func_2289() /* ty=Tensor[(5, 9, 3), int8] */;
  %382 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 9, 3), int8] */, dtype="float32") /* ty=Tensor[(5, 9, 3), float32] */;
  %383 = shape_of(%381, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%381, dtype="float32") /* ty=Tensor[(5, 9, 3), float32] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %386 = cast(meta[relay.Constant][26] /* ty=Tensor[(1320), int64] */, dtype="int64") /* ty=Tensor[(1320), int64] */;
  %387 = cast(meta[relay.Constant][26] /* ty=Tensor[(1320), int64] */, dtype="int64") /* ty=Tensor[(1320), int64] */;
  %388 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 99), float32] */, dtype="float32") /* ty=Tensor[(6, 99), float32] */;
  %389 = reshape(%386, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
  %390 = reshape(%387, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
  %391 = reshape(%388, newshape=[6, 99]) /* ty=Tensor[(6, 99), float32] */;
  %392 = @func_1288(%389, %390, %391) /* ty=(Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(1560, 1), float32], Tensor[(6, 99), float32], Tensor[(135), uint8], Tensor[(1560), float32]) */;
  %393 = cast(%var_4277, dtype="float64") /* ty=float64 */;
  %394 = cast(%var_4278, dtype="float64") /* ty=Tensor[(168), float64] */;
  %395 = cast(%var_4278, dtype="float32") /* ty=Tensor[(168), float32] */;
  %396 = reshape(%393, newshape=[]) /* ty=float64 */;
  %397 = reshape(%394, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float64] */;
  %398 = reshape(%395, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float32] */;
  %399 = @func_242(%396, %397, %398) /* ty=(Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) */;
  %400 = @func_2874() /* ty=Tensor[(5, 9, 3), uint8] */;
  %401 = %379.0;
  %402 = %380.1;
  %403 = mod(%384, %385) /* ty=Tensor[(5, 9, 3), float32] */;
  %404 = %392.5;
  %405 = %399.1;
  (%400, %401, %402, %403, %404, meta[relay.Constant][26] /* ty=Tensor[(1320), int64] */, meta[relay.Constant][27] /* ty=Tensor[(6, 99), float32] */, %405, %var_4277, %var_4278)
}

def @func_3863(%var_3858: bool, %var_3861: Tensor[(42, 4), float64]) -> (Tensor[(144), int64], Tensor[(9, 7), bool], bool, float64, Tensor[(42, 4), float64]) {
  %406 = @func_2811() /* ty=(Tensor[(144), int64],) */;
  %407 = cast(%var_3858, dtype="bool") /* ty=bool */;
  %408 = reshape(%407, newshape=[]) /* ty=bool */;
  %409 = @func_2793(%408) /* ty=(Tensor[(9, 7), bool], Tensor[(5, 9, 3), int8]) */;
  %410 = cast(%var_3858, dtype="float64") /* ty=float64 */;
  %411 = cast(%var_3861, dtype="float64") /* ty=Tensor[(42, 4), float64] */;
  %412 = reshape(%410, newshape=[]) /* ty=float64 */;
  %413 = reshape(%411, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %414 = @func_2675(%412, %413) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64]) */;
  %415 = %406.0;
  %416 = %409.0;
  %417 = %414.3;
  (%415, %416, %var_3858, %417, %var_3861)
}

def @func_242(%var_123: float64, %var_124: Tensor[(4, 7, 6), float64], %var_162: Tensor[(4, 7, 6), float32]) -> (Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) {
  %418 = cast(%var_123, dtype="bool") /* ty=bool */;
  %419 = cast(%var_124, dtype="bool") /* ty=Tensor[(4, 7, 6), bool] */;
  %420 = greater_equal(%418, %419) /* ty=Tensor[(4, 7, 6), bool] */;
  %421 = cast(%var_123, dtype="float32") /* ty=float32 */;
  %422 = cast(%420, dtype="float32") /* ty=Tensor[(4, 7, 6), float32] */;
  %423 = mod(%421, %422) /* ty=Tensor[(4, 7, 6), float32] */;
  %424 = cast(%423, dtype="float64") /* ty=Tensor[(4, 7, 6), float64] */;
  %425 = cast(%420, dtype="float32") /* ty=Tensor[(4, 7, 6), float32] */;
  %426 = cosh(%425) /* ty=Tensor[(4, 7, 6), float32] */;
  %427 = cast(%426, dtype="float32") /* ty=Tensor[(4, 7, 6), float32] */;
  %428 = tan(%427) /* ty=Tensor[(4, 7, 6), float32] */;
  %429 = cast(%420, dtype="float32") /* ty=Tensor[(4, 7, 6), float32] */;
  %430 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%428, dtype="float32") /* ty=Tensor[(4, 7, 6), float32] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %433 = cast(%var_162, dtype="uint8") /* ty=Tensor[(4, 7, 6), uint8] */;
  %434 = shape_of(%426, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%426, dtype="uint8") /* ty=Tensor[(4, 7, 6), uint8] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %437 = right_shift(%435, %436) /* ty=Tensor[(4, 7, 6), uint8] */;
  %438 = cast(%var_124, dtype="bool") /* ty=Tensor[(4, 7, 6), bool] */;
  %439 = shape_of(%437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %440 = cast(%437, dtype="bool") /* ty=Tensor[(4, 7, 6), bool] */;
  %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %442 = greater(%440, %441) /* ty=Tensor[(4, 7, 6), bool] */;
  %443 = cast(%442, dtype="int16") /* ty=Tensor[(4, 7, 6), int16] */;
  %444 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %445 = cast(%428, dtype="int16") /* ty=Tensor[(4, 7, 6), int16] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %447 = sinh(%424) /* ty=Tensor[(4, 7, 6), float64] */;
  %448 = floor_divide(%431, %432) /* ty=Tensor[(4, 7, 6), float32] */;
  %449 = left_shift(%445, %446) /* ty=Tensor[(4, 7, 6), int16] */;
  (%447, %448, %449)
}

def @func_1042(%var_987: Tensor[(144), int64], %var_995: float64, %var_996: Tensor[(168), float64], %var_1004: Tensor[(1560), float32]) -> (Tensor[(5, 9, 3), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64], Tensor[(594), float32], Tensor[(1560), float32], Tensor[(594), float32], Tensor[(12, 6, 2), int64], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), float64]) {
  %450 = @func_885() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */;
  %451 = cast(%var_987, dtype="int64") /* ty=Tensor[(144), int64] */;
  %452 = reshape(%451, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), int64] */;
  %453 = cast(%var_995, dtype="float64") /* ty=float64 */;
  %454 = cast(%var_996, dtype="float64") /* ty=Tensor[(168), float64] */;
  %455 = cast(%var_996, dtype="float32") /* ty=Tensor[(168), float32] */;
  %456 = reshape(%453, newshape=[]) /* ty=float64 */;
  %457 = reshape(%454, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float64] */;
  %458 = reshape(%455, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float32] */;
  %459 = @func_242(%456, %457, %458) /* ty=(Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) */;
  %460 = cast(%var_995, dtype="float32") /* ty=float32 */;
  %461 = cast(%var_1004, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %462 = cast(meta[relay.Constant][28] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %463 = reshape(%460, newshape=[]) /* ty=float32 */;
  %464 = reshape(%461, newshape=[10, 13, 12]) /* ty=Tensor[(10, 13, 12), float32] */;
  %465 = reshape(%462, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %466 = @func_575(%463, %464, %465) /* ty=(Tensor[(10, 13, 12), float32], Tensor[(4, 7, 6), int16], Tensor[(168), float64], Tensor[(4, 7, 6), float64], Tensor[(594), float32]) */;
  %467 = @func_715(%452) /* ty=Tensor[(12, 6, 2), int64] */;
  %468 = cast(%467, dtype="int64") /* ty=Tensor[(12, 6, 2), int64] */;
  %469 = reshape(%468, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), int64] */;
  %470 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
  %471 = cast(%470, dtype="float32") /* ty=Tensor[(5, 9, 3), float32] */;
  %472 = acosh(%471) /* ty=Tensor[(5, 9, 3), float32] */;
  %473 = cast(%472, dtype="float32") /* ty=Tensor[(5, 9, 3), float32] */;
  %474 = cast(%472, dtype="float32") /* ty=Tensor[(5, 9, 3), float32] */;
  %475 = sqrt(%474) /* ty=Tensor[(5, 9, 3), float32] */;
  %476 = cast(%475, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %477 = %450.0;
  %478 = %459.1;
  %479 = %466.4;
  %480 = @func_715(%469) /* ty=Tensor[(12, 6, 2), int64] */;
  %481 = tan(%473) /* ty=Tensor[(5, 9, 3), float32] */;
  %482 = log(%476) /* ty=Tensor[(5, 9, 3), float64] */;
  (%477, %467, %var_987, %478, %var_995, %var_996, %479, %var_1004, meta[relay.Constant][28] /* ty=Tensor[(594), float32] */, %480, %481, %482)
}

def @func_1557() -> (Tensor[(5, 9, 3), int8],) {
  %483 = @func_1238() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %484 = %483.0;
  (%484,)
}

def @func_715(%var_707: Tensor[(12, 6, 2), int64]) -> Tensor[(12, 6, 2), int64] {
  %485 = cast(%var_707, dtype="int64") /* ty=Tensor[(12, 6, 2), int64] */;
  %486 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(12, 6, 2), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %487 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 6, 2), int64] */, dtype="int64") /* ty=Tensor[(12, 6, 2), int64] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%487, %488) /* ty=Tensor[(12, 6, 2), int64] */
}

def @func_1103() -> Tensor[(5, 9, 3), uint64] {
  %489 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
  %490 = @func_885() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */;
  %491 = %490.1;
  %492 = cast(%491, dtype="uint64") /* ty=Tensor[(5, 9, 3), uint64] */;
  %493 = shape_of(%489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%489, dtype="uint64") /* ty=Tensor[(5, 9, 3), uint64] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_xor(%494, %495) /* ty=Tensor[(5, 9, 3), uint64] */
}

def @func_5584(%var_5577: Tensor[(2, 72), int64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float64], Tensor[(2, 72), int64]) {
  %496 = @func_3927() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) */;
  %497 = cast(%var_5577, dtype="int64") /* ty=Tensor[(2, 72), int64] */;
  %498 = reshape(%497, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %499 = @func_1640(%498) /* ty=(Tensor[(5, 9, 3), float64], Tensor[(15, 8, 11), float32], Tensor[(1320), int64], Tensor[(3, 198), float32], Tensor[(5, 9, 3), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64]) */;
  %500 = %496.1;
  %501 = %499.4;
  (%500, %501, %var_5577)
}

def @func_5036(%var_5017: Tensor[(11, 3, 5), int64]) -> (Tensor[(11, 3, 5), int64], Tensor[(11, 3, 5), int32], Tensor[(5, 9, 3), uint8]) {
  %502 = cast(%var_5017, dtype="int64") /* ty=Tensor[(11, 3, 5), int64] */;
  %503 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(11, 3, 5), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %504 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 3, 5), int64] */, dtype="int64") /* ty=Tensor[(11, 3, 5), int64] */;
  %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %506 = cast(%var_5017, dtype="float32") /* ty=Tensor[(11, 3, 5), float32] */;
  %507 = atanh(%506) /* ty=Tensor[(11, 3, 5), float32] */;
  %508 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 3, 5), float32] */, dtype="int32") /* ty=Tensor[(11, 3, 5), int32] */;
  %509 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%507, dtype="int32") /* ty=Tensor[(11, 3, 5), int32] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %512 = @func_1935() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) */;
  %513 = logical_xor(%504, %505) /* ty=Tensor[(11, 3, 5), int64] */;
  %514 = bitwise_or(%510, %511) /* ty=Tensor[(11, 3, 5), int32] */;
  %515 = %512.1;
  (%513, %514, %515)
}

def @func_5139(%var_5115: float64) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(144), int64], Tensor[(168), float64], float64, Tensor[(168), float64]) {
  %516 = @func_1850() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %517 = @func_1935() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) */;
  %518 = @func_3821() /* ty=(Tensor[(1560), float32], Tensor[(144), int64], Tensor[(5, 9, 3), uint8]) */;
  %519 = cast(%var_5115, dtype="float64") /* ty=float64 */;
  %520 = cast(meta[relay.Constant][32] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %521 = reshape(%519, newshape=[]) /* ty=float64 */;
  %522 = reshape(%520, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %523 = @func_2675(%521, %522) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64]) */;
  %524 = %516.0;
  %525 = %517.3;
  %526 = %518.1;
  %527 = %523.4;
  (%524, %525, %526, %527, %var_5115, meta[relay.Constant][32] /* ty=Tensor[(168), float64] */)
}

def @func_2493(%var_2458: Tensor[(39, 4), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(39, 4), float64]) {
  %528 = @func_1969() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %529 = @func_2202() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float64], float32, Tensor[(39, 4), float64]) */;
  %530 = %529.3;
  %531 = cast(%var_2458, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
  %532 = shape_of(%530, dtype="int32") /* ty=Tensor[(2), int32] */;
  %533 = cast(%530, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
  %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %535 = floor_mod(%533, %534) /* ty=Tensor[(39, 4), float64] */;
  %536 = cast(%530, dtype="int64") /* ty=Tensor[(39, 4), int64] */;
  %537 = shape_of(%535, dtype="int32") /* ty=Tensor[(2), int32] */;
  %538 = cast(%535, dtype="int64") /* ty=Tensor[(39, 4), int64] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %540 = left_shift(%538, %539) /* ty=Tensor[(39, 4), int64] */;
  %541 = cast(%540, dtype="uint16") /* ty=Tensor[(39, 4), uint16] */;
  %542 = shape_of(%530, dtype="int32") /* ty=Tensor[(2), int32] */;
  %543 = cast(%530, dtype="uint16") /* ty=Tensor[(39, 4), uint16] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %545 = logical_xor(%543, %544) /* ty=Tensor[(39, 4), uint16] */;
  %546 = cast(%545, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
  %547 = %528.0;
  %548 = sinh(%546) /* ty=Tensor[(39, 4), float64] */;
  (%547, %548)
}

def @func_3821() -> (Tensor[(1560), float32], Tensor[(144), int64], Tensor[(5, 9, 3), uint8]) {
  %549 = @func_2599() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), float32], Tensor[(1560), float32]) */;
  %550 = @func_2449() /* ty=(Tensor[(144), int64],) */;
  %551 = @func_2006() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8]) */;
  %552 = %549.2;
  %553 = %550.0;
  %554 = %551.0;
  (%552, %553, %554)
}

def @func_575(%var_559: float32, %var_560: Tensor[(10, 13, 12), float32], %var_570: Tensor[(594), float32]) -> (Tensor[(10, 13, 12), float32], Tensor[(4, 7, 6), int16], Tensor[(168), float64], Tensor[(4, 7, 6), float64], Tensor[(594), float32]) {
  %555 = cast(%var_559, dtype="float32") /* ty=float32 */;
  %556 = cast(%var_560, dtype="float32") /* ty=Tensor[(10, 13, 12), float32] */;
  %557 = cast(%var_559, dtype="float64") /* ty=float64 */;
  %558 = cast(meta[relay.Constant][33] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %559 = cast(meta[relay.Constant][33] /* ty=Tensor[(168), float64] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %560 = reshape(%557, newshape=[]) /* ty=float64 */;
  %561 = reshape(%558, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float64] */;
  %562 = reshape(%559, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float32] */;
  %563 = @func_242(%560, %561, %562) /* ty=(Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) */;
  %564 = cast(%var_570, dtype="float32") /* ty=Tensor[(594), float32] */;
  %565 = cast(%var_570, dtype="float32") /* ty=Tensor[(594), float32] */;
  %566 = reshape(%564, newshape=[11, 9, 6]) /* ty=Tensor[(11, 9, 6), float32] */;
  %567 = reshape(%565, newshape=[11, 9, 6]) /* ty=Tensor[(11, 9, 6), float32] */;
  %568 = @func_542(%566, %567) /* ty=(Tensor[(4, 7, 6), float64], float64, Tensor[(168), float64], Tensor[(4, 7, 6), float32], Tensor[(11, 9, 6), float64], Tensor[(11, 9, 6), float32]) */;
  %569 = add(%555, %556) /* ty=Tensor[(10, 13, 12), float32] */;
  %570 = %563.2;
  %571 = %568.0;
  (%569, %570, meta[relay.Constant][33] /* ty=Tensor[(168), float64] */, %571, %var_570)
}

def @func_6378() -> (Tensor[(5, 9, 3), int8], Tensor[(156), float64], Tensor[(144), int64]) {
  %572 = @func_3617() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %573 = @func_4639() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint64], Tensor[(156), float64]) */;
  %574 = @func_2449() /* ty=(Tensor[(144), int64],) */;
  %575 = %572.0;
  %576 = %573.2;
  %577 = %574.0;
  (%575, %576, %577)
}

def @func_6515() -> (Tensor[(5, 9, 3), uint8],) {
  %578 = @func_2982() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %579 = %578.0;
  (%579,)
}

def @func_1301() -> (Tensor[(5, 9, 3), uint64], Tensor[(5, 9, 3), int8]) {
  %580 = @func_1238() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %581 = @func_1103() /* ty=Tensor[(5, 9, 3), uint64] */;
  %582 = %580.0;
  (%581, %582)
}

def @func_5489() -> Tensor[(5, 9, 3), uint8] {
  %583 = @func_885() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */;
  %583.1
}

def @func_5689() -> Tensor[(1560), float32] {
  %584 = @func_3821() /* ty=(Tensor[(1560), float32], Tensor[(144), int64], Tensor[(5, 9, 3), uint8]) */;
  %584.0
}

def @func_2265(%var_2261: Tensor[(9, 12, 12), uint64]) -> Tensor[(9, 12, 12), bool] {
  %585 = cast(%var_2261, dtype="bool") /* ty=Tensor[(9, 12, 12), bool] */;
  %586 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(9, 12, 12), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 12, 12), uint64] */, dtype="bool") /* ty=Tensor[(9, 12, 12), bool] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%587, %588) /* ty=Tensor[(9, 12, 12), bool] */
}

def @func_4639() -> (Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint64], Tensor[(156), float64]) {
  %589 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
  %590 = cast(%589, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %591 = cast(meta[relay.Constant][35] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %592 = reshape(%591, newshape=[156, 1]) /* ty=Tensor[(156, 1), float64] */;
  %593 = @func_3155(%592) /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(39, 4), float64], Tensor[(156, 1), float64], Tensor[(5, 9, 3), uint64]) */;
  %594 = atan(%590) /* ty=Tensor[(5, 9, 3), float64] */;
  %595 = %593.3;
  (%594, %595, meta[relay.Constant][35] /* ty=Tensor[(156), float64] */)
}

def @func_2116() -> Tensor[(5, 9, 3), uint8] {
  %596 = @func_1935() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) */;
  %596.1
}

def @func_2282(%var_2277: Tensor[(10, 7, 13), float64]) -> (Tensor[(10, 7, 13), float64], Tensor[(5, 9, 3), uint8]) {
  %597 = cast(%var_2277, dtype="float64") /* ty=Tensor[(10, 7, 13), float64] */;
  %598 = atan(%597) /* ty=Tensor[(10, 7, 13), float64] */;
  %599 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
  (%598, %599)
}

def @func_2699(%var_2694: Tensor[(5, 9, 3), uint8]) -> (Tensor[(5, 9, 3), int64],) {
  %600 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %601 = %600.0;
  %602 = cast(%var_2694, dtype="int64") /* ty=Tensor[(5, 9, 3), int64] */;
  %603 = shape_of(%601, dtype="int32") /* ty=Tensor[(3), int32] */;
  %604 = cast(%601, dtype="int64") /* ty=Tensor[(5, 9, 3), int64] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %606 = subtract(%604, %605) /* ty=Tensor[(5, 9, 3), int64] */;
  (%606,)
}

def @func_2982() -> (Tensor[(5, 9, 3), uint8],) {
  %607 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %608 = %607.0;
  (%608,)
}

def @func_3492(%var_3481: Tensor[(3, 52), float64]) -> (Tensor[(5, 9, 3), uint8], Tensor[(594), float32], Tensor[(5, 9, 3), uint8], Tensor[(910), float64], Tensor[(3, 52), int8]) {
  %609 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 52), float64] */, dtype="float64") /* ty=Tensor[(3, 52), float64] */;
  %610 = reshape(%609, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), float64] */;
  %611 = @func_622(%610) /* ty=(Tensor[(3, 13, 4), bool], Tensor[(594), float32], float32, Tensor[(1560), float32], Tensor[(594), float32]) */;
  %612 = cast(meta[relay.Constant][37] /* ty=Tensor[(910), float64] */, dtype="float64") /* ty=Tensor[(910), float64] */;
  %613 = reshape(%612, newshape=[10, 7, 13]) /* ty=Tensor[(10, 7, 13), float64] */;
  %614 = @func_2282(%613) /* ty=(Tensor[(10, 7, 13), float64], Tensor[(5, 9, 3), uint8]) */;
  %615 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 52), float64] */, dtype="float64") /* ty=Tensor[(3, 52), float64] */;
  %616 = atanh(%615) /* ty=Tensor[(3, 52), float64] */;
  %617 = cast(%var_3481, dtype="int8") /* ty=Tensor[(3, 52), int8] */;
  %618 = shape_of(%616, dtype="int32") /* ty=Tensor[(2), int32] */;
  %619 = cast(%616, dtype="int8") /* ty=Tensor[(3, 52), int8] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %621 = @func_2874() /* ty=Tensor[(5, 9, 3), uint8] */;
  %622 = %611.1;
  %623 = %614.1;
  %624 = bitwise_xor(%619, %620) /* ty=Tensor[(3, 52), int8] */;
  (%621, %622, %623, meta[relay.Constant][37] /* ty=Tensor[(910), float64] */, %624)
}

def @func_885() -> (Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) {
  %625 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
  %626 = cast(%625, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %627 = sinh(%626) /* ty=Tensor[(5, 9, 3), float64] */;
  %628 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
  (%627, %628)
}

def @func_2599() -> (Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), float32], Tensor[(1560), float32]) {
  %629 = @func_2202() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float64], float32, Tensor[(39, 4), float64]) */;
  %630 = cast(meta[relay.Constant][38] /* ty=Tensor[(1560), float32] */, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %631 = reshape(%630, newshape=[1560]) /* ty=Tensor[(1560), float32] */;
  %632 = @func_1746(%631) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32]) */;
  %633 = %629.1;
  %634 = %632.1;
  (%633, %634, meta[relay.Constant][38] /* ty=Tensor[(1560), float32] */)
}

def @func_3728() -> (Tensor[(5, 9, 3), int8],) {
  %635 = @func_1969() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %636 = %635.0;
  (%636,)
}

def @func_2094() -> (Tensor[(5, 9, 3), uint8],) {
  %637 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %638 = %637.0;
  (%638,)
}

def @func_2543(%var_2523: Tensor[(5, 9, 3), int8]) -> (Tensor[(5, 9, 3), int16], Tensor[(8, 5, 15), float32], Tensor[(6, 100), float32]) {
  %639 = @func_1557() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %640 = %639.0;
  %641 = cast(%var_2523, dtype="int16") /* ty=Tensor[(5, 9, 3), int16] */;
  %642 = shape_of(%640, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%640, dtype="int16") /* ty=Tensor[(5, 9, 3), int16] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %645 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 100), float32] */, dtype="float32") /* ty=Tensor[(6, 100), float32] */;
  %646 = reshape(%645, newshape=[8, 5, 15]) /* ty=Tensor[(8, 5, 15), float32] */;
  %647 = minimum(%643, %644) /* ty=Tensor[(5, 9, 3), int16] */;
  %648 = @func_1410(%646) /* ty=Tensor[(8, 5, 15), float32] */;
  (%647, %648, meta[relay.Constant][39] /* ty=Tensor[(6, 100), float32] */)
}

def @func_6005(%var_5974: Tensor[(91, 10), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(10, 7, 13), float64], Tensor[(91, 10), float64], Tensor[(5, 9, 3), int8], Tensor[(6, 14, 3), float64], Tensor[(252), float64]) {
  %649 = @func_1850() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %650 = cast(%var_5974, dtype="float64") /* ty=Tensor[(91, 10), float64] */;
  %651 = reshape(%650, newshape=[10, 7, 13]) /* ty=Tensor[(10, 7, 13), float64] */;
  %652 = @func_2282(%651) /* ty=(Tensor[(10, 7, 13), float64], Tensor[(5, 9, 3), uint8]) */;
  %653 = cast(meta[relay.Constant][40] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %654 = reshape(%653, newshape=[6, 14, 3]) /* ty=Tensor[(6, 14, 3), float64] */;
  %655 = @func_4335(%654) /* ty=(Tensor[(6, 14, 3), float64],) */;
  %656 = %649.0;
  %657 = %652.0;
  %658 = @func_5398() /* ty=Tensor[(5, 9, 3), int8] */;
  %659 = %655.0;
  (%656, %657, %var_5974, %658, %659, meta[relay.Constant][40] /* ty=Tensor[(252), float64] */)
}

def @func_4730(%var_4709: Tensor[(1560), float32], %var_4711: Tensor[(594), float32], %var_4717: Tensor[(594), float32], %var_4725: Tensor[(495), float32]) -> (Tensor[(144), int64], Tensor[(1560), float32], Tensor[(594), bool], Tensor[(594), float32], Tensor[(11, 5, 9), float32], Tensor[(495), float32]) {
  %660 = @func_2449() /* ty=(Tensor[(144), int64],) */;
  %661 = cast(%var_4709, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %662 = reshape(%661, newshape=[1560]) /* ty=Tensor[(1560), float32] */;
  %663 = @func_4470(%662) /* ty=(Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), int8]) */;
  %664 = %663.1;
  %665 = cast(%var_4711, dtype="bool") /* ty=Tensor[(594), bool] */;
  %666 = shape_of(%664, dtype="int32") /* ty=Tensor[(1), int32] */;
  %667 = cast(%664, dtype="bool") /* ty=Tensor[(594), bool] */;
  %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?), bool] */;
  %669 = cast(%var_4717, dtype="float32") /* ty=Tensor[(594), float32] */;
  %670 = shape_of(%var_4711, dtype="int32") /* ty=Tensor[(1), int32] */;
  %671 = cast(%var_4711, dtype="float32") /* ty=Tensor[(594), float32] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?), float32] */;
  %673 = cast(%var_4725, dtype="float32") /* ty=Tensor[(495), float32] */;
  %674 = cast(%var_4725, dtype="float32") /* ty=Tensor[(495), float32] */;
  %675 = reshape(%673, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), float32] */;
  %676 = reshape(%674, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), float32] */;
  %677 = @func_2249(%675, %676) /* ty=(Tensor[(11, 5, 9), float32], Tensor[(11, 5, 9), float32]) */;
  %678 = %660.0;
  %679 = greater(%667, %668) /* ty=Tensor[(594), bool] */;
  %680 = floor_divide(%671, %672) /* ty=Tensor[(594), float32] */;
  %681 = %677.0;
  (%678, %var_4709, %679, %680, %681, %var_4725)
}

def @func_2793(%var_2782: bool) -> (Tensor[(9, 7), bool], Tensor[(5, 9, 3), int8]) {
  %682 = cast(%var_2782, dtype="bool") /* ty=bool */;
  %683 = cast(meta[relay.Constant][41] /* ty=Tensor[(9, 7), bool] */, dtype="bool") /* ty=Tensor[(9, 7), bool] */;
  %684 = logical_or(%682, %683) /* ty=Tensor[(9, 7), bool] */;
  %685 = @func_2289() /* ty=Tensor[(5, 9, 3), int8] */;
  (%684, %685)
}

def @func_5769() -> (float32, Tensor[(5, 9, 3), uint64]) {
  %686 = @func_2202() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float64], float32, Tensor[(39, 4), float64]) */;
  %687 = @func_5752() /* ty=(Tensor[(5, 9, 3), uint64],) */;
  %688 = %686.2;
  %689 = %687.0;
  (%688, %689)
}

def @func_4611(%var_4585: Tensor[(6, 6, 10), int16], %var_4601: Tensor[(1, 6, 10), int16]) -> (Tensor[(6, 6, 10), int16], Tensor[(?, 6, 10), bool]) {
  %690 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 6, 10), int16] */, dtype="int16") /* ty=Tensor[(1, 6, 10), int16] */;
  %691 = cast(%var_4585, dtype="int16") /* ty=Tensor[(6, 6, 10), int16] */;
  %692 = cast(%var_4601, dtype="bool") /* ty=Tensor[(1, 6, 10), bool] */;
  %693 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(1, 6, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %694 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 6, 10), int16] */, dtype="bool") /* ty=Tensor[(1, 6, 10), bool] */;
  %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %696 = multiply(%690, %691) /* ty=Tensor[(6, 6, 10), int16] */;
  %697 = less_equal(%694, %695) /* ty=Tensor[(?, 6, 10), bool] */;
  (%696, %697)
}

def @func_2006() -> (Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8]) {
  %698 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %699 = @func_1935() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) */;
  %700 = %698.0;
  %701 = %699.0;
  (%700, %701)
}

def @func_6152(%var_6109: Tensor[(1560), float32], %var_6127: Tensor[(1560), float32]) -> (Tensor[(1560), int64], Tensor[(1560), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64], Tensor[(5, 9, 3), uint8]) {
  %702 = @func_3821() /* ty=(Tensor[(1560), float32], Tensor[(144), int64], Tensor[(5, 9, 3), uint8]) */;
  %703 = %702.0;
  %704 = cast(%var_6109, dtype="int64") /* ty=Tensor[(1560), int64] */;
  %705 = shape_of(%703, dtype="int32") /* ty=Tensor[(1), int32] */;
  %706 = cast(%703, dtype="int64") /* ty=Tensor[(1560), int64] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?), int64] */;
  %708 = cast(%703, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %709 = rsqrt(%708) /* ty=Tensor[(1560), float32] */;
  %710 = cast(%var_6127, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %711 = shape_of(%709, dtype="int32") /* ty=Tensor[(1), int32] */;
  %712 = cast(%709, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?), float64] */;
  %714 = cast(meta[relay.Constant][43] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %715 = reshape(%714, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %716 = @func_1640(%715) /* ty=(Tensor[(5, 9, 3), float64], Tensor[(15, 8, 11), float32], Tensor[(1320), int64], Tensor[(3, 198), float32], Tensor[(5, 9, 3), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64]) */;
  %717 = bitwise_xor(%706, %707) /* ty=Tensor[(1560), int64] */;
  %718 = minimum(%712, %713) /* ty=Tensor[(1560), float64] */;
  %719 = %716.5;
  %720 = @func_5857() /* ty=Tensor[(5, 9, 3), uint8] */;
  (%717, %718, %719, meta[relay.Constant][43] /* ty=Tensor[(144), int64] */, %720)
}

def @func_1640(%var_1636: Tensor[(144), int64]) -> (Tensor[(5, 9, 3), float64], Tensor[(15, 8, 11), float32], Tensor[(1320), int64], Tensor[(3, 198), float32], Tensor[(5, 9, 3), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64]) {
  %721 = @func_1259() /* ty=(Tensor[(5, 9, 3), float64],) */;
  %722 = cast(meta[relay.Constant][44] /* ty=Tensor[(1320), int64] */, dtype="int64") /* ty=Tensor[(1320), int64] */;
  %723 = cast(meta[relay.Constant][44] /* ty=Tensor[(1320), int64] */, dtype="int64") /* ty=Tensor[(1320), int64] */;
  %724 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 198), float32] */, dtype="float32") /* ty=Tensor[(3, 198), float32] */;
  %725 = reshape(%722, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
  %726 = reshape(%723, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
  %727 = reshape(%724, newshape=[6, 99]) /* ty=Tensor[(6, 99), float32] */;
  %728 = @func_1288(%725, %726, %727) /* ty=(Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(1560, 1), float32], Tensor[(6, 99), float32], Tensor[(135), uint8], Tensor[(1560), float32]) */;
  %729 = @func_1259() /* ty=(Tensor[(5, 9, 3), float64],) */;
  %730 = cast(%var_1636, dtype="int64") /* ty=Tensor[(144), int64] */;
  %731 = reshape(%730, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), int64] */;
  %732 = %721.0;
  %733 = %728.1;
  %734 = %729.0;
  %735 = @func_715(%731) /* ty=Tensor[(12, 6, 2), int64] */;
  (%732, %733, meta[relay.Constant][44] /* ty=Tensor[(1320), int64] */, meta[relay.Constant][45] /* ty=Tensor[(3, 198), float32] */, %734, %735, %var_1636)
}

def @func_4530(%var_4492: Tensor[(8, 14, 10), float32]) -> (Tensor[(8, 14, 10), uint64], Tensor[(5, 9, 3), int8]) {
  %736 = cast(%var_4492, dtype="float32") /* ty=Tensor[(8, 14, 10), float32] */;
  %737 = sinh(%736) /* ty=Tensor[(8, 14, 10), float32] */;
  %738 = cast(%var_4492, dtype="bool") /* ty=Tensor[(8, 14, 10), bool] */;
  %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%737, dtype="bool") /* ty=Tensor[(8, 14, 10), bool] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %742 = logical_or(%740, %741) /* ty=Tensor[(8, 14, 10), bool] */;
  %743 = cast(%737, dtype="bool") /* ty=Tensor[(8, 14, 10), bool] */;
  %744 = shape_of(%742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %745 = cast(%742, dtype="bool") /* ty=Tensor[(8, 14, 10), bool] */;
  %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %747 = greater(%745, %746) /* ty=Tensor[(8, 14, 10), bool] */;
  %748 = cast(%747, dtype="uint64") /* ty=Tensor[(8, 14, 10), uint64] */;
  %749 = shape_of(%var_4492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%var_4492, dtype="uint64") /* ty=Tensor[(8, 14, 10), uint64] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %752 = @func_1301() /* ty=(Tensor[(5, 9, 3), uint64], Tensor[(5, 9, 3), int8]) */;
  %753 = multiply(%750, %751) /* ty=Tensor[(8, 14, 10), uint64] */;
  %754 = %752.1;
  (%753, %754)
}

def @func_3872() -> Tensor[(5, 9, 3), int8] {
  %755 = @func_1557() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %755.0
}

def @func_2874() -> Tensor[(5, 9, 3), uint8] {
  @func_775() /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_6070(%var_6044: Tensor[(156), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(156), float64], Tensor[(5, 9, 3), int8]) {
  %756 = cast(%var_6044, dtype="float64") /* ty=Tensor[(156), float64] */;
  %757 = reshape(%756, newshape=[156, 1]) /* ty=Tensor[(156, 1), float64] */;
  %758 = @func_3155(%757) /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(39, 4), float64], Tensor[(156, 1), float64], Tensor[(5, 9, 3), uint64]) */;
  %759 = @func_3617() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %760 = @func_5398() /* ty=Tensor[(5, 9, 3), int8] */;
  %761 = %758.3;
  %762 = %759.0;
  (%760, %761, %var_6044, %762)
}

def @func_6618() -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), int8]) {
  %763 = @func_3728() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %764 = %763.0;
  %765 = cast(%764, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
  %766 = reshape(%765, newshape=[5, 9, 3]) /* ty=Tensor[(5, 9, 3), uint8] */;
  %767 = @func_1479(%766) /* ty=(Tensor[(5, 9, 3), float64],) */;
  %768 = %767.0;
  %769 = @func_5013() /* ty=Tensor[(5, 9, 3), int8] */;
  (%764, %768, %769)
}

def @func_3155(%var_3140: Tensor[(156, 1), float64]) -> (Tensor[(5, 9, 3), uint8], Tensor[(39, 4), float64], Tensor[(156, 1), float64], Tensor[(5, 9, 3), uint64]) {
  %770 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %771 = cast(%var_3140, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %772 = reshape(%771, newshape=[39, 4]) /* ty=Tensor[(39, 4), float64] */;
  %773 = @func_2493(%772) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(39, 4), float64]) */;
  %774 = cast(%var_3140, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %775 = %770.0;
  %776 = %773.1;
  %777 = sinh(%774) /* ty=Tensor[(156, 1), float64] */;
  %778 = @func_1103() /* ty=Tensor[(5, 9, 3), uint64] */;
  (%775, %776, %777, %778)
}

def @func_4470(%var_4430: Tensor[(1560), float32]) -> (Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), int8]) {
  %779 = cast(meta[relay.Constant][46] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %780 = @func_1103() /* ty=Tensor[(5, 9, 3), uint64] */;
  %781 = cast(%780, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
  %782 = cast(%var_4430, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %783 = reshape(%779, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %784 = reshape(%781, newshape=[5, 9, 3]) /* ty=Tensor[(5, 9, 3), uint8] */;
  %785 = reshape(%782, newshape=[1560, 1]) /* ty=Tensor[(1560, 1), float32] */;
  %786 = @func_849(%783, %784, %785) /* ty=(float64, Tensor[(594), float32], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), bool], Tensor[(10, 13, 12), float32], Tensor[(1560, 1), float32]) */;
  %787 = cast(%780, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %788 = @func_1557() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %789 = %786.2;
  %790 = sigmoid(%787) /* ty=Tensor[(5, 9, 3), float64] */;
  %791 = %788.0;
  (%789, meta[relay.Constant][46] /* ty=Tensor[(594), float32] */, %var_4430, %790, %791)
}

def @func_1479(%var_1472: Tensor[(5, 9, 3), uint8]) -> (Tensor[(5, 9, 3), float64],) {
  %792 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %793 = %792.0;
  %794 = cast(%var_1472, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %795 = shape_of(%793, dtype="int32") /* ty=Tensor[(3), int32] */;
  %796 = cast(%793, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %798 = floor_divide(%796, %797) /* ty=Tensor[(5, 9, 3), float64] */;
  (%798,)
}

def @func_1850() -> (Tensor[(5, 9, 3), int8],) {
  %799 = @func_1457() /* ty=Tensor[(5, 9, 3), int8] */;
  (%799,)
}

def @func_6246(%var_6232: Tensor[(5, 7, 3), float64], %var_6233: Tensor[(5, 7, 3), float64]) -> Tensor[(5, 7, 3), uint64] {
  %800 = cast(%var_6233, dtype="float64") /* ty=Tensor[(5, 7, 3), float64] */;
  %801 = shape_of(%var_6232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(%var_6232, dtype="float64") /* ty=Tensor[(5, 7, 3), float64] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %804 = power(%802, %803) /* ty=Tensor[(5, 7, 3), float64] */;
  %805 = cast(%804, dtype="uint64") /* ty=Tensor[(5, 7, 3), uint64] */;
  %806 = shape_of(%var_6232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(%var_6232, dtype="uint64") /* ty=Tensor[(5, 7, 3), uint64] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  subtract(%807, %808) /* ty=Tensor[(5, 7, 3), uint64] */
}

def @func_5608(%var_5588: Tensor[(7, 11, 8), uint8], %var_5589: Tensor[(7, 11, 8), uint8]) -> (Tensor[(7, 11, 8), bool], Tensor[(5, 9, 3), int8]) {
  %809 = cast(%var_5589, dtype="bool") /* ty=Tensor[(7, 11, 8), bool] */;
  %810 = shape_of(%var_5588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %811 = cast(%var_5588, dtype="bool") /* ty=Tensor[(7, 11, 8), bool] */;
  %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %813 = greater_equal(%811, %812) /* ty=Tensor[(7, 11, 8), bool] */;
  %814 = @func_5452() /* ty=Tensor[(5, 9, 3), int8] */;
  (%813, %814)
}

def @func_4218() -> (Tensor[(5, 9, 3), int8], Tensor[(9, 12, 9), int16], Tensor[(78, 2), float64]) {
  %815 = @func_2006() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8]) */;
  %816 = cast(meta[relay.Constant][47] /* ty=Tensor[(78, 2), float64] */, dtype="float64") /* ty=Tensor[(78, 2), float64] */;
  %817 = reshape(%816, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %818 = @func_2945(%817) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8], Tensor[(9, 12, 9), int16], Tensor[(3, 324), int16], Tensor[(156), float64]) */;
  %819 = %815.1;
  %820 = %818.2;
  (%819, %820, meta[relay.Constant][47] /* ty=Tensor[(78, 2), float64] */)
}

def @func_3032(%var_3007: Tensor[(10, 1, 8), float32], %var_3008: Tensor[(10, 3, 8), float32]) -> (Tensor[(10, 3, 8), float32], Tensor[(10, 1, 8), float64], Tensor[(4, 7, 6), float64], float64, Tensor[(168), float64]) {
  %821 = cast(%var_3007, dtype="float32") /* ty=Tensor[(10, 1, 8), float32] */;
  %822 = cast(%var_3008, dtype="float32") /* ty=Tensor[(10, 3, 8), float32] */;
  %823 = cast(%var_3007, dtype="float64") /* ty=Tensor[(10, 1, 8), float64] */;
  %824 = cast(6.13271f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %825 = cast(meta[relay.Constant][48] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %826 = cast(meta[relay.Constant][48] /* ty=Tensor[(168), float64] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %827 = reshape(%824, newshape=[]) /* ty=float64 */;
  %828 = reshape(%825, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float64] */;
  %829 = reshape(%826, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float32] */;
  %830 = @func_242(%827, %828, %829) /* ty=(Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) */;
  %831 = divide(%821, %822) /* ty=Tensor[(10, 3, 8), float32] */;
  %832 = cos(%823) /* ty=Tensor[(10, 1, 8), float64] */;
  %833 = %830.0;
  (%831, %832, %833, 6.13271f64 /* ty=float64 */, meta[relay.Constant][48] /* ty=Tensor[(168), float64] */)
}

def @func_5243(%var_5228: Tensor[(156), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float32], Tensor[(156), float64], Tensor[(156), float64], Tensor[(5, 9, 3), uint8]) {
  %834 = @func_1935() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) */;
  %835 = cast(%var_5228, dtype="float64") /* ty=Tensor[(156), float64] */;
  %836 = reshape(%835, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %837 = @func_4790(%836) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8], Tensor[(156), float64]) */;
  %838 = %837.2;
  %839 = cast(%838, dtype="float64") /* ty=Tensor[(156), float64] */;
  %840 = reshape(%839, newshape=[3, 52]) /* ty=Tensor[(3, 52), float64] */;
  %841 = @func_3492(%840) /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(594), float32], Tensor[(5, 9, 3), uint8], Tensor[(910), float64], Tensor[(3, 52), int8]) */;
  %842 = @func_3783() /* ty=Tensor[(5, 9, 3), int8] */;
  %843 = %834.2;
  %844 = %841.2;
  (%842, %843, %838, %var_5228, %844)
}

def @func_6416() -> (Tensor[(5, 9, 3), int8],) {
  %845 = @func_3617() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %846 = %845.0;
  (%846,)
}

def @func_6663(%var_6642: Tensor[(6, 11, 5), float64]) -> (Tensor[(5, 9, 3), uint8], Tensor[(6, 11, 5), bool]) {
  %847 = cast(%var_6642, dtype="float64") /* ty=Tensor[(6, 11, 5), float64] */;
  %848 = log2(%847) /* ty=Tensor[(6, 11, 5), float64] */;
  %849 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 11, 5), float64] */, dtype="bool") /* ty=Tensor[(6, 11, 5), bool] */;
  %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(3), int32] */;
  %851 = cast(%848, dtype="bool") /* ty=Tensor[(6, 11, 5), bool] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %853 = @func_2116() /* ty=Tensor[(5, 9, 3), uint8] */;
  %854 = less(%851, %852) /* ty=Tensor[(6, 11, 5), bool] */;
  (%853, %854)
}

def @func_4699() -> (Tensor[(5, 9, 3), int8],) {
  %855 = @func_3783() /* ty=Tensor[(5, 9, 3), int8] */;
  (%855,)
}

def @func_2345(%var_2317: Tensor[(9, 12, 9), int16], %var_2318: Tensor[(9, 12, 9), int16], %var_2324: Tensor[(156), float64]) -> (Tensor[(9, 12, 9), int16], Tensor[(1560), float32], Tensor[(156), float32]) {
  %856 = cast(%var_2318, dtype="int16") /* ty=Tensor[(9, 12, 9), int16] */;
  %857 = shape_of(%var_2317, dtype="int32") /* ty=Tensor[(3), int32] */;
  %858 = cast(%var_2317, dtype="int16") /* ty=Tensor[(9, 12, 9), int16] */;
  %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %860 = cast(%var_2324, dtype="float64") /* ty=Tensor[(156), float64] */;
  %861 = reshape(%860, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), float64] */;
  %862 = @func_622(%861) /* ty=(Tensor[(3, 13, 4), bool], Tensor[(594), float32], float32, Tensor[(1560), float32], Tensor[(594), float32]) */;
  %863 = cast(%var_2324, dtype="float32") /* ty=Tensor[(156), float32] */;
  %864 = left_shift(%858, %859) /* ty=Tensor[(9, 12, 9), int16] */;
  %865 = %862.3;
  %866 = acosh(%863) /* ty=Tensor[(156), float32] */;
  (%864, %865, %866)
}

def @func_5013() -> Tensor[(5, 9, 3), int8] {
  %867 = @func_2006() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8]) */;
  %867.1
}

def @func_3113(%var_3085: Tensor[(5, 9, 3), int8], %var_3101: Tensor[(5, 9, 3), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) {
  %868 = @func_3039() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %869 = @func_1238() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %870 = %869.0;
  %871 = cast(%var_3085, dtype="bool") /* ty=Tensor[(5, 9, 3), bool] */;
  %872 = shape_of(%870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %873 = cast(%870, dtype="bool") /* ty=Tensor[(5, 9, 3), bool] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %875 = less(%873, %874) /* ty=Tensor[(5, 9, 3), bool] */;
  %876 = cast(%875, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %877 = asinh(%876) /* ty=Tensor[(5, 9, 3), float64] */;
  %878 = cast(%var_3101, dtype="int8") /* ty=Tensor[(5, 9, 3), int8] */;
  %879 = shape_of(%877, dtype="int32") /* ty=Tensor[(3), int32] */;
  %880 = cast(%877, dtype="int8") /* ty=Tensor[(5, 9, 3), int8] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %882 = %868.0;
  %883 = add(%880, %881) /* ty=Tensor[(5, 9, 3), int8] */;
  (%882, %883)
}

def @func_849(%var_822: Tensor[(594), float32], %var_841: Tensor[(5, 9, 3), uint8], %var_847: Tensor[(1560, 1), float32]) -> (float64, Tensor[(594), float32], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), bool], Tensor[(10, 13, 12), float32], Tensor[(1560, 1), float32]) {
  %884 = cast(%var_822, dtype="float32") /* ty=Tensor[(594), float32] */;
  %885 = cast(%var_822, dtype="float32") /* ty=Tensor[(594), float32] */;
  %886 = reshape(%884, newshape=[11, 9, 6]) /* ty=Tensor[(11, 9, 6), float32] */;
  %887 = reshape(%885, newshape=[11, 9, 6]) /* ty=Tensor[(11, 9, 6), float32] */;
  %888 = @func_542(%886, %887) /* ty=(Tensor[(4, 7, 6), float64], float64, Tensor[(168), float64], Tensor[(4, 7, 6), float32], Tensor[(11, 9, 6), float64], Tensor[(11, 9, 6), float32]) */;
  %889 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
  %890 = cast(%889, dtype="float32") /* ty=Tensor[(5, 9, 3), float32] */;
  %891 = cast(%var_841, dtype="bool") /* ty=Tensor[(5, 9, 3), bool] */;
  %892 = shape_of(%889, dtype="int32") /* ty=Tensor[(3), int32] */;
  %893 = cast(%889, dtype="bool") /* ty=Tensor[(5, 9, 3), bool] */;
  %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %895 = %888.1;
  %896 = cast(%895, dtype="float32") /* ty=float32 */;
  %897 = cast(%var_847, dtype="float32") /* ty=Tensor[(1560, 1), float32] */;
  %898 = cast(%var_822, dtype="float32") /* ty=Tensor[(594), float32] */;
  %899 = reshape(%896, newshape=[]) /* ty=float32 */;
  %900 = reshape(%897, newshape=[10, 13, 12]) /* ty=Tensor[(10, 13, 12), float32] */;
  %901 = reshape(%898, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %902 = @func_575(%899, %900, %901) /* ty=(Tensor[(10, 13, 12), float32], Tensor[(4, 7, 6), int16], Tensor[(168), float64], Tensor[(4, 7, 6), float64], Tensor[(594), float32]) */;
  %903 = cosh(%890) /* ty=Tensor[(5, 9, 3), float32] */;
  %904 = logical_or(%893, %894) /* ty=Tensor[(5, 9, 3), bool] */;
  %905 = %902.0;
  (%895, %var_822, %903, %904, %905, %var_847)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2267(%var_2266: Tensor[(9, 12, 12), uint64]) -> Tensor[(9, 12, 12), bool] {
  %4 = fn (%var_2261: Tensor[(9, 12, 12), uint64]) -> Tensor[(9, 12, 12), bool] {
    %0 = cast(%var_2261, dtype="bool") /* ty=Tensor[(9, 12, 12), bool] */;
    %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(9, 12, 12), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 12, 12), uint64] */, dtype="bool") /* ty=Tensor[(9, 12, 12), bool] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%2, %3) /* ty=Tensor[(9, 12, 12), bool] */
  };
  %4(%var_2266) /* ty=Tensor[(9, 12, 12), bool] */
}

def @func_575(%var_559: float32, %var_560: Tensor[(10, 13, 12), float32], %var_570: Tensor[(594), float32]) -> (Tensor[(10, 13, 12), float32], Tensor[(4, 7, 6), int16], Tensor[(168), float64], Tensor[(4, 7, 6), float64], Tensor[(594), float32]) {
  %5 = cast(%var_559, dtype="float32") /* ty=float32 */;
  %6 = cast(%var_560, dtype="float32") /* ty=Tensor[(10, 13, 12), float32] */;
  %7 = cast(%var_559, dtype="float64") /* ty=float64 */;
  %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(168), float64] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %10 = reshape(%7, newshape=[]) /* ty=float64 */;
  %11 = reshape(%8, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float64] */;
  %12 = reshape(%9, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float32] */;
  %13 = @func_242(%10, %11, %12) /* ty=(Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) */;
  %14 = cast(%var_570, dtype="float32") /* ty=Tensor[(594), float32] */;
  %15 = cast(%var_570, dtype="float32") /* ty=Tensor[(594), float32] */;
  %16 = reshape(%14, newshape=[11, 9, 6]) /* ty=Tensor[(11, 9, 6), float32] */;
  %17 = reshape(%15, newshape=[11, 9, 6]) /* ty=Tensor[(11, 9, 6), float32] */;
  %18 = @func_542(%16, %17) /* ty=(Tensor[(4, 7, 6), float64], float64, Tensor[(168), float64], Tensor[(4, 7, 6), float32], Tensor[(11, 9, 6), float64], Tensor[(11, 9, 6), float32]) */;
  %19 = add(%5, %6) /* ty=Tensor[(10, 13, 12), float32] */;
  %20 = %13.2;
  %21 = %18.0;
  (%19, %20, meta[relay.Constant][1] /* ty=Tensor[(168), float64] */, %21, %var_570)
}

def @func_2702(%var_2700: Tensor[(5, 9, 3), uint8]) -> (Tensor[(5, 9, 3), int64],) {
  @func_2699(%var_2700) /* ty=(Tensor[(5, 9, 3), int64],) */
}

def @func_1935() -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) {
  %22 = @func_1238() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %23 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %24 = @func_1238() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %25 = %24.0;
  %26 = cast(%25, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %27 = log2(%26) /* ty=Tensor[(5, 9, 3), float64] */;
  %28 = cast(%27, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %29 = erf(%28) /* ty=Tensor[(5, 9, 3), float64] */;
  %30 = cast(%29, dtype="float32") /* ty=Tensor[(5, 9, 3), float32] */;
  %31 = %22.0;
  %32 = %23.0;
  %33 = log10(%30) /* ty=Tensor[(5, 9, 3), float32] */;
  %34 = @func_1103() /* ty=Tensor[(5, 9, 3), uint64] */;
  (%31, %32, %33, %34)
}

def @func_4906(%var_4900: Tensor[(7, 1, 4), int64], %var_4901: Tensor[(7, 4, 4), int64], %var_4902: Tensor[(1120), float32], %var_4903: Tensor[(7, 4, 4), int64], %var_4904: Tensor[(7, 4, 4), int64], %var_4905: Tensor[(594), float32]) -> (Tensor[(5, 9, 3), int8], Tensor[(1120), float32], Tensor[(10, 7, 13), float64], Tensor[(455, 2), float64], Tensor[(7, 4, 4), int16], Tensor[(7, 4, 4), float64], Tensor[(1560, 1), float32], Tensor[(1320), int64], Tensor[(594), float32], Tensor[(5, 9, 3), float64]) {
  %68 = fn (%var_4830: Tensor[(7, 1, 4), int64], %var_4831: Tensor[(7, 4, 4), int64], %var_4844: Tensor[(1120), float32], %var_4860: Tensor[(7, 4, 4), int64], %var_4872: Tensor[(7, 4, 4), int64], %var_4883: Tensor[(594), float32]) -> (Tensor[(5, 9, 3), int8], Tensor[(1120), float32], Tensor[(10, 7, 13), float64], Tensor[(455, 2), float64], Tensor[(7, 4, 4), int16], Tensor[(7, 4, 4), float64], Tensor[(1560, 1), float32], Tensor[(1320), int64], Tensor[(594), float32], Tensor[(5, 9, 3), float64]) {
    %35 = cast(%var_4844, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %36 = reshape(%35, newshape=[8, 14, 10]) /* ty=Tensor[(8, 14, 10), float32] */;
    %37 = @func_4530(%36) /* ty=(Tensor[(8, 14, 10), uint64], Tensor[(5, 9, 3), int8]) */;
    %38 = cast(meta[relay.Constant][2] /* ty=Tensor[(455, 2), float64] */, dtype="float64") /* ty=Tensor[(455, 2), float64] */;
    %39 = reshape(%38, newshape=[10, 7, 13]) /* ty=Tensor[(10, 7, 13), float64] */;
    %40 = @func_2282(%39) /* ty=(Tensor[(10, 7, 13), float64], Tensor[(5, 9, 3), uint8]) */;
    %41 = cast(%var_4830, dtype="int64") /* ty=Tensor[(7, 1, 4), int64] */;
    %42 = cast(%var_4831, dtype="int64") /* ty=Tensor[(7, 4, 4), int64] */;
    %43 = right_shift(%41, %42) /* ty=Tensor[(7, 4, 4), int64] */;
    %44 = cast(%var_4860, dtype="int16") /* ty=Tensor[(7, 4, 4), int16] */;
    %45 = shape_of(%43, dtype="int32") /* ty=Tensor[(3), int32] */;
    %46 = cast(%43, dtype="int16") /* ty=Tensor[(7, 4, 4), int16] */;
    %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %48 = cast(%var_4872, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
    %49 = shape_of(%var_4831, dtype="int32") /* ty=Tensor[(3), int32] */;
    %50 = cast(%var_4831, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
    %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %52 = cast(meta[relay.Constant][3] /* ty=Tensor[(1320), int64] */, dtype="int64") /* ty=Tensor[(1320), int64] */;
    %53 = cast(meta[relay.Constant][3] /* ty=Tensor[(1320), int64] */, dtype="int64") /* ty=Tensor[(1320), int64] */;
    %54 = cast(%var_4883, dtype="float32") /* ty=Tensor[(594), float32] */;
    %55 = reshape(%52, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
    %56 = reshape(%53, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
    %57 = reshape(%54, newshape=[6, 99]) /* ty=Tensor[(6, 99), float32] */;
    %58 = @func_1288(%55, %56, %57) /* ty=(Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(1560, 1), float32], Tensor[(6, 99), float32], Tensor[(135), uint8], Tensor[(1560), float32]) */;
    %59 = %58.3;
    %60 = cast(%59, dtype="float32") /* ty=Tensor[(1560, 1), float32] */;
    %61 = reshape(%60, newshape=[1560]) /* ty=Tensor[(1560), float32] */;
    %62 = @func_4470(%61) /* ty=(Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), int8]) */;
    %63 = %37.1;
    %64 = %40.0;
    %65 = bitwise_and(%46, %47) /* ty=Tensor[(7, 4, 4), int16] */;
    %66 = multiply(%50, %51) /* ty=Tensor[(7, 4, 4), float64] */;
    %67 = %62.3;
    (%63, %var_4844, %64, meta[relay.Constant][2] /* ty=Tensor[(455, 2), float64] */, %65, %66, %59, meta[relay.Constant][3] /* ty=Tensor[(1320), int64] */, %var_4883, %67)
  };
  %68(%var_4900, %var_4901, %var_4902, %var_4903, %var_4904, %var_4905) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(1120), float32], Tensor[(10, 7, 13), float64], Tensor[(455, 2), float64], Tensor[(7, 4, 4), int16], Tensor[(7, 4, 4), float64], Tensor[(1560, 1), float32], Tensor[(1320), int64], Tensor[(594), float32], Tensor[(5, 9, 3), float64]) */
}

def @func_5754() -> (Tensor[(5, 9, 3), uint64],) {
  @func_5752() /* ty=(Tensor[(5, 9, 3), uint64],) */
}

def @func_5453() -> Tensor[(5, 9, 3), int8] {
  %69 = fn () -> Tensor[(5, 9, 3), int8] {
    @func_5398() /* ty=Tensor[(5, 9, 3), int8] */
  };
  %69() /* ty=Tensor[(5, 9, 3), int8] */
}

def @func_5378(%var_5375: bool, %var_5376: Tensor[(360), int16], %var_5377: Tensor[(60), int16]) -> (Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int64], Tensor[(5, 9, 3), int8], bool, Tensor[(594), float32], Tensor[(144), int64], Tensor[(168), float64], Tensor[(1560), float32], Tensor[(5, 9, 3), int8], Tensor[(6, 6, 10), int16], Tensor[(360), int16], Tensor[(60), int16], Tensor[(5, 9, 3), float32], Tensor[(594), float32]) {
  %107 = fn (%var_5282: bool, %var_5341: Tensor[(360), int16], %var_5342: Tensor[(60), int16]) -> (Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int64], Tensor[(5, 9, 3), int8], bool, Tensor[(594), float32], Tensor[(144), int64], Tensor[(168), float64], Tensor[(1560), float32], Tensor[(5, 9, 3), int8], Tensor[(6, 6, 10), int16], Tensor[(360), int16], Tensor[(60), int16], Tensor[(5, 9, 3), float32], Tensor[(594), float32]) {
    %70 = @func_1557() /* ty=(Tensor[(5, 9, 3), int8],) */;
    %71 = %70.0;
    %72 = cast(%71, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
    %73 = reshape(%72, newshape=[5, 9, 3]) /* ty=Tensor[(5, 9, 3), uint8] */;
    %74 = @func_2699(%73) /* ty=(Tensor[(5, 9, 3), int64],) */;
    %75 = cast(%var_5282, dtype="bool") /* ty=bool */;
    %76 = reshape(%75, newshape=[]) /* ty=bool */;
    %77 = @func_2793(%76) /* ty=(Tensor[(9, 7), bool], Tensor[(5, 9, 3), int8]) */;
    %78 = cast(meta[relay.Constant][4] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
    %79 = cast(%var_5282, dtype="float64") /* ty=float64 */;
    %80 = cast(meta[relay.Constant][5] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
    %81 = cast(meta[relay.Constant][6] /* ty=Tensor[(1560), float32] */, dtype="float32") /* ty=Tensor[(1560), float32] */;
    %82 = reshape(%78, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %83 = reshape(%79, newshape=[]) /* ty=float64 */;
    %84 = reshape(%80, newshape=[168]) /* ty=Tensor[(168), float64] */;
    %85 = reshape(%81, newshape=[1560]) /* ty=Tensor[(1560), float32] */;
    %86 = @func_1042(%82, %83, %84, %85) /* ty=(Tensor[(5, 9, 3), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64], Tensor[(594), float32], Tensor[(1560), float32], Tensor[(594), float32], Tensor[(12, 6, 2), int64], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), float64]) */;
    %87 = @func_3728() /* ty=(Tensor[(5, 9, 3), int8],) */;
    %88 = cast(%var_5341, dtype="int16") /* ty=Tensor[(360), int16] */;
    %89 = cast(%var_5342, dtype="int16") /* ty=Tensor[(60), int16] */;
    %90 = reshape(%88, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), int16] */;
    %91 = reshape(%89, newshape=[1, 6, 10]) /* ty=Tensor[(1, 6, 10), int16] */;
    %92 = @func_4611(%90, %91) /* ty=(Tensor[(6, 6, 10), int16], Tensor[(?, 6, 10), bool]) */;
    %93 = cast(meta[relay.Constant][6] /* ty=Tensor[(1560), float32] */, dtype="float32") /* ty=Tensor[(1560), float32] */;
    %94 = reshape(%93, newshape=[1560]) /* ty=Tensor[(1560), float32] */;
    %95 = @func_1746(%94) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32]) */;
    %96 = cast(meta[relay.Constant][6] /* ty=Tensor[(1560), float32] */, dtype="float32") /* ty=Tensor[(1560), float32] */;
    %97 = reshape(%96, newshape=[1560]) /* ty=Tensor[(1560), float32] */;
    %98 = @func_1746(%97) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32]) */;
    %99 = @func_2874() /* ty=Tensor[(5, 9, 3), uint8] */;
    %100 = %74.0;
    %101 = %77.1;
    %102 = %86.6;
    %103 = %87.0;
    %104 = %92.0;
    %105 = %95.1;
    %106 = %98.2;
    (%99, %71, %100, %101, %var_5282, %102, meta[relay.Constant][4] /* ty=Tensor[(144), int64] */, meta[relay.Constant][5] /* ty=Tensor[(168), float64] */, meta[relay.Constant][6] /* ty=Tensor[(1560), float32] */, %103, %104, %var_5341, %var_5342, %105, %106)
  };
  %107(%var_5375, %var_5376, %var_5377) /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int64], Tensor[(5, 9, 3), int8], bool, Tensor[(594), float32], Tensor[(144), int64], Tensor[(168), float64], Tensor[(1560), float32], Tensor[(5, 9, 3), int8], Tensor[(6, 6, 10), int16], Tensor[(360), int16], Tensor[(60), int16], Tensor[(5, 9, 3), float32], Tensor[(594), float32]) */
}

def @func_3040() -> (Tensor[(5, 9, 3), int8],) {
  %110 = fn () -> (Tensor[(5, 9, 3), int8],) {
    %108 = @func_2006() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8]) */;
    %109 = %108.1;
    (%109,)
  };
  %110() /* ty=(Tensor[(5, 9, 3), int8],) */
}

def @func_3035(%var_3033: Tensor[(10, 1, 8), float32], %var_3034: Tensor[(10, 3, 8), float32]) -> (Tensor[(10, 3, 8), float32], Tensor[(10, 1, 8), float64], Tensor[(4, 7, 6), float64], float64, Tensor[(168), float64]) {
  %124 = fn (%var_3007: Tensor[(10, 1, 8), float32], %var_3008: Tensor[(10, 3, 8), float32]) -> (Tensor[(10, 3, 8), float32], Tensor[(10, 1, 8), float64], Tensor[(4, 7, 6), float64], float64, Tensor[(168), float64]) {
    %111 = cast(%var_3007, dtype="float32") /* ty=Tensor[(10, 1, 8), float32] */;
    %112 = cast(%var_3008, dtype="float32") /* ty=Tensor[(10, 3, 8), float32] */;
    %113 = cast(%var_3007, dtype="float64") /* ty=Tensor[(10, 1, 8), float64] */;
    %114 = cast(6.13271f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %115 = cast(meta[relay.Constant][7] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
    %116 = cast(meta[relay.Constant][7] /* ty=Tensor[(168), float64] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %117 = reshape(%114, newshape=[]) /* ty=float64 */;
    %118 = reshape(%115, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float64] */;
    %119 = reshape(%116, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float32] */;
    %120 = @func_242(%117, %118, %119) /* ty=(Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) */;
    %121 = divide(%111, %112) /* ty=Tensor[(10, 3, 8), float32] */;
    %122 = cos(%113) /* ty=Tensor[(10, 1, 8), float64] */;
    %123 = %120.0;
    (%121, %122, %123, 6.13271f64 /* ty=float64 */, meta[relay.Constant][7] /* ty=Tensor[(168), float64] */)
  };
  %124(%var_3033, %var_3034) /* ty=(Tensor[(10, 3, 8), float32], Tensor[(10, 1, 8), float64], Tensor[(4, 7, 6), float64], float64, Tensor[(168), float64]) */
}

def @func_853(%var_850: Tensor[(594), float32], %var_851: Tensor[(5, 9, 3), uint8], %var_852: Tensor[(1560, 1), float32]) -> (float64, Tensor[(594), float32], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), bool], Tensor[(10, 13, 12), float32], Tensor[(1560, 1), float32]) {
  %147 = fn (%var_822: Tensor[(594), float32], %var_841: Tensor[(5, 9, 3), uint8], %var_847: Tensor[(1560, 1), float32]) -> (float64, Tensor[(594), float32], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), bool], Tensor[(10, 13, 12), float32], Tensor[(1560, 1), float32]) {
    %125 = cast(%var_822, dtype="float32") /* ty=Tensor[(594), float32] */;
    %126 = cast(%var_822, dtype="float32") /* ty=Tensor[(594), float32] */;
    %127 = reshape(%125, newshape=[11, 9, 6]) /* ty=Tensor[(11, 9, 6), float32] */;
    %128 = reshape(%126, newshape=[11, 9, 6]) /* ty=Tensor[(11, 9, 6), float32] */;
    %129 = @func_542(%127, %128) /* ty=(Tensor[(4, 7, 6), float64], float64, Tensor[(168), float64], Tensor[(4, 7, 6), float32], Tensor[(11, 9, 6), float64], Tensor[(11, 9, 6), float32]) */;
    %130 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
    %131 = cast(%130, dtype="float32") /* ty=Tensor[(5, 9, 3), float32] */;
    %132 = cast(%var_841, dtype="bool") /* ty=Tensor[(5, 9, 3), bool] */;
    %133 = shape_of(%130, dtype="int32") /* ty=Tensor[(3), int32] */;
    %134 = cast(%130, dtype="bool") /* ty=Tensor[(5, 9, 3), bool] */;
    %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %136 = %129.1;
    %137 = cast(%136, dtype="float32") /* ty=float32 */;
    %138 = cast(%var_847, dtype="float32") /* ty=Tensor[(1560, 1), float32] */;
    %139 = cast(%var_822, dtype="float32") /* ty=Tensor[(594), float32] */;
    %140 = reshape(%137, newshape=[]) /* ty=float32 */;
    %141 = reshape(%138, newshape=[10, 13, 12]) /* ty=Tensor[(10, 13, 12), float32] */;
    %142 = reshape(%139, newshape=[594]) /* ty=Tensor[(594), float32] */;
    %143 = @func_575(%140, %141, %142) /* ty=(Tensor[(10, 13, 12), float32], Tensor[(4, 7, 6), int16], Tensor[(168), float64], Tensor[(4, 7, 6), float64], Tensor[(594), float32]) */;
    %144 = cosh(%131) /* ty=Tensor[(5, 9, 3), float32] */;
    %145 = logical_or(%134, %135) /* ty=Tensor[(5, 9, 3), bool] */;
    %146 = %143.0;
    (%136, %var_822, %144, %145, %146, %var_847)
  };
  %147(%var_850, %var_851, %var_852) /* ty=(float64, Tensor[(594), float32], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), bool], Tensor[(10, 13, 12), float32], Tensor[(1560, 1), float32]) */
}

def @func_3823() -> (Tensor[(1560), float32], Tensor[(144), int64], Tensor[(5, 9, 3), uint8]) {
  @func_3821() /* ty=(Tensor[(1560), float32], Tensor[(144), int64], Tensor[(5, 9, 3), uint8]) */
}

def @func_1969() -> (Tensor[(5, 9, 3), int8],) {
  %148 = @func_1557() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %149 = %148.0;
  (%149,)
}

def @func_1780(%var_1778: Tensor[(1320), int64], %var_1779: Tensor[(594), float32]) -> (Tensor[(5, 9, 3), uint8], Tensor[(6, 99), float32], Tensor[(1320), int64], Tensor[(594), float32]) {
  @func_1776(%var_1778, %var_1779) /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(6, 99), float32], Tensor[(1320), int64], Tensor[(594), float32]) */
}

def @func_2675(%var_2669: float64, %var_2670: Tensor[(168), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64]) {
  %150 = @func_1301() /* ty=(Tensor[(5, 9, 3), uint64], Tensor[(5, 9, 3), int8]) */;
  %151 = @func_1935() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) */;
  %152 = cast(%var_2669, dtype="float64") /* ty=float64 */;
  %153 = cast(%var_2670, dtype="float64") /* ty=Tensor[(168), float64] */;
  %154 = cast(%var_2670, dtype="float32") /* ty=Tensor[(168), float32] */;
  %155 = reshape(%152, newshape=[]) /* ty=float64 */;
  %156 = reshape(%153, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float64] */;
  %157 = reshape(%154, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float32] */;
  %158 = @func_242(%155, %156, %157) /* ty=(Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) */;
  %159 = %150.1;
  %160 = %151.3;
  %161 = %158.1;
  (%159, %160, %161, %var_2669, %var_2670)
}

def @func_5038(%var_5037: Tensor[(11, 3, 5), int64]) -> (Tensor[(11, 3, 5), int64], Tensor[(11, 3, 5), int32], Tensor[(5, 9, 3), uint8]) {
  %176 = fn (%var_5017: Tensor[(11, 3, 5), int64]) -> (Tensor[(11, 3, 5), int64], Tensor[(11, 3, 5), int32], Tensor[(5, 9, 3), uint8]) {
    %162 = cast(%var_5017, dtype="int64") /* ty=Tensor[(11, 3, 5), int64] */;
    %163 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(11, 3, 5), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %164 = cast(meta[relay.Constant][8] /* ty=Tensor[(11, 3, 5), int64] */, dtype="int64") /* ty=Tensor[(11, 3, 5), int64] */;
    %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %166 = cast(%var_5017, dtype="float32") /* ty=Tensor[(11, 3, 5), float32] */;
    %167 = atanh(%166) /* ty=Tensor[(11, 3, 5), float32] */;
    %168 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 3, 5), float32] */, dtype="int32") /* ty=Tensor[(11, 3, 5), int32] */;
    %169 = shape_of(%167, dtype="int32") /* ty=Tensor[(3), int32] */;
    %170 = cast(%167, dtype="int32") /* ty=Tensor[(11, 3, 5), int32] */;
    %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %172 = @func_1935() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) */;
    %173 = logical_xor(%164, %165) /* ty=Tensor[(11, 3, 5), int64] */;
    %174 = bitwise_or(%170, %171) /* ty=Tensor[(11, 3, 5), int32] */;
    %175 = %172.1;
    (%173, %174, %175)
  };
  %176(%var_5037) /* ty=(Tensor[(11, 3, 5), int64], Tensor[(11, 3, 5), int32], Tensor[(5, 9, 3), uint8]) */
}

def @func_1103() -> Tensor[(5, 9, 3), uint64] {
  %177 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
  %178 = @func_885() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */;
  %179 = %178.1;
  %180 = cast(%179, dtype="uint64") /* ty=Tensor[(5, 9, 3), uint64] */;
  %181 = shape_of(%177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %182 = cast(%177, dtype="uint64") /* ty=Tensor[(5, 9, 3), uint64] */;
  %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_xor(%182, %183) /* ty=Tensor[(5, 9, 3), uint64] */
}

def @func_1303() -> (Tensor[(5, 9, 3), uint64], Tensor[(5, 9, 3), int8]) {
  @func_1301() /* ty=(Tensor[(5, 9, 3), uint64], Tensor[(5, 9, 3), int8]) */
}

def @func_1749(%var_1747: Tensor[(1560), float32]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32]) {
  @func_1746(%var_1747) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32]) */
}

def @func_3301() -> Tensor[(5, 9, 3), uint8] {
  @func_2874() /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_3303() -> Tensor[(5, 9, 3), uint8] {
  @func_3301() /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_2252(%var_2250: Tensor[(11, 5, 9), float32], %var_2251: Tensor[(11, 5, 9), float32]) -> (Tensor[(11, 5, 9), float32], Tensor[(11, 5, 9), float32]) {
  %191 = fn (%var_2238: Tensor[(11, 5, 9), float32], %var_2239: Tensor[(11, 5, 9), float32]) -> (Tensor[(11, 5, 9), float32], Tensor[(11, 5, 9), float32]) {
    %184 = cast(%var_2239, dtype="float32") /* ty=Tensor[(11, 5, 9), float32] */;
    %185 = shape_of(%var_2238, dtype="int32") /* ty=Tensor[(3), int32] */;
    %186 = cast(%var_2238, dtype="float32") /* ty=Tensor[(11, 5, 9), float32] */;
    %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %188 = cast(%var_2238, dtype="float32") /* ty=Tensor[(11, 5, 9), float32] */;
    %189 = floor_divide(%186, %187) /* ty=Tensor[(11, 5, 9), float32] */;
    %190 = tan(%188) /* ty=Tensor[(11, 5, 9), float32] */;
    (%189, %190)
  };
  %191(%var_2250, %var_2251) /* ty=(Tensor[(11, 5, 9), float32], Tensor[(11, 5, 9), float32]) */
}

def @func_4532(%var_4531: Tensor[(8, 14, 10), float32]) -> (Tensor[(8, 14, 10), uint64], Tensor[(5, 9, 3), int8]) {
  %211 = fn (%var_4492: Tensor[(8, 14, 10), float32]) -> (Tensor[(8, 14, 10), uint64], Tensor[(5, 9, 3), int8]) {
    %192 = cast(%var_4492, dtype="float32") /* ty=Tensor[(8, 14, 10), float32] */;
    %193 = sinh(%192) /* ty=Tensor[(8, 14, 10), float32] */;
    %194 = cast(%var_4492, dtype="bool") /* ty=Tensor[(8, 14, 10), bool] */;
    %195 = shape_of(%193, dtype="int32") /* ty=Tensor[(3), int32] */;
    %196 = cast(%193, dtype="bool") /* ty=Tensor[(8, 14, 10), bool] */;
    %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %198 = logical_or(%196, %197) /* ty=Tensor[(8, 14, 10), bool] */;
    %199 = cast(%193, dtype="bool") /* ty=Tensor[(8, 14, 10), bool] */;
    %200 = shape_of(%198, dtype="int32") /* ty=Tensor[(3), int32] */;
    %201 = cast(%198, dtype="bool") /* ty=Tensor[(8, 14, 10), bool] */;
    %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %203 = greater(%201, %202) /* ty=Tensor[(8, 14, 10), bool] */;
    %204 = cast(%203, dtype="uint64") /* ty=Tensor[(8, 14, 10), uint64] */;
    %205 = shape_of(%var_4492, dtype="int32") /* ty=Tensor[(3), int32] */;
    %206 = cast(%var_4492, dtype="uint64") /* ty=Tensor[(8, 14, 10), uint64] */;
    %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %208 = @func_1301() /* ty=(Tensor[(5, 9, 3), uint64], Tensor[(5, 9, 3), int8]) */;
    %209 = multiply(%206, %207) /* ty=Tensor[(8, 14, 10), uint64] */;
    %210 = %208.1;
    (%209, %210)
  };
  %211(%var_4531) /* ty=(Tensor[(8, 14, 10), uint64], Tensor[(5, 9, 3), int8]) */
}

def @func_5859() -> Tensor[(5, 9, 3), uint8] {
  @func_5857() /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_4473(%var_4471: Tensor[(1560), float32]) -> (Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), int8]) {
  @func_4470(%var_4471) /* ty=(Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), int8]) */
}

def @func_6618() -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), int8]) {
  %212 = @func_3728() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %213 = %212.0;
  %214 = cast(%213, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
  %215 = reshape(%214, newshape=[5, 9, 3]) /* ty=Tensor[(5, 9, 3), uint8] */;
  %216 = @func_1479(%215) /* ty=(Tensor[(5, 9, 3), float64],) */;
  %217 = %216.0;
  %218 = @func_5013() /* ty=Tensor[(5, 9, 3), int8] */;
  (%213, %217, %218)
}

def @func_6473() -> (Tensor[(5, 9, 3), int8],) {
  %219 = @func_1457() /* ty=Tensor[(5, 9, 3), int8] */;
  (%219,)
}

def @func_1288(%var_1262: Tensor[(15, 8, 11), int64], %var_1263: Tensor[(15, 8, 11), int64], %var_1283: Tensor[(6, 99), float32]) -> (Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(1560, 1), float32], Tensor[(6, 99), float32], Tensor[(135), uint8], Tensor[(1560), float32]) {
  %220 = cast(%var_1263, dtype="int64") /* ty=Tensor[(15, 8, 11), int64] */;
  %221 = shape_of(%var_1262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %222 = cast(%var_1262, dtype="int64") /* ty=Tensor[(15, 8, 11), int64] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %224 = cast(%var_1262, dtype="float32") /* ty=Tensor[(15, 8, 11), float32] */;
  %225 = cast(%var_1263, dtype="float64") /* ty=Tensor[(15, 8, 11), float64] */;
  %226 = log(%225) /* ty=Tensor[(15, 8, 11), float64] */;
  %227 = cast(%226, dtype="float32") /* ty=Tensor[(15, 8, 11), float32] */;
  %228 = cast(%var_1283, dtype="float32") /* ty=Tensor[(6, 99), float32] */;
  %229 = cast(meta[relay.Constant][10] /* ty=Tensor[(135), uint8] */, dtype="uint8") /* ty=Tensor[(135), uint8] */;
  %230 = cast(meta[relay.Constant][11] /* ty=Tensor[(1560), float32] */, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %231 = reshape(%228, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %232 = reshape(%229, newshape=[5, 9, 3]) /* ty=Tensor[(5, 9, 3), uint8] */;
  %233 = reshape(%230, newshape=[1560, 1]) /* ty=Tensor[(1560, 1), float32] */;
  %234 = @func_849(%231, %232, %233) /* ty=(float64, Tensor[(594), float32], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), bool], Tensor[(10, 13, 12), float32], Tensor[(1560, 1), float32]) */;
  %235 = add(%222, %223) /* ty=Tensor[(15, 8, 11), int64] */;
  %236 = log10(%224) /* ty=Tensor[(15, 8, 11), float32] */;
  %237 = log2(%227) /* ty=Tensor[(15, 8, 11), float32] */;
  %238 = %234.5;
  (%235, %236, %237, %238, %var_1283, meta[relay.Constant][10] /* ty=Tensor[(135), uint8] */, meta[relay.Constant][11] /* ty=Tensor[(1560), float32] */)
}

def @func_3116(%var_3114: Tensor[(5, 9, 3), int8], %var_3115: Tensor[(5, 9, 3), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) {
  %255 = fn (%var_3085: Tensor[(5, 9, 3), int8], %var_3101: Tensor[(5, 9, 3), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) {
    %239 = @func_3039() /* ty=(Tensor[(5, 9, 3), int8],) */;
    %240 = @func_1238() /* ty=(Tensor[(5, 9, 3), int8],) */;
    %241 = %240.0;
    %242 = cast(%var_3085, dtype="bool") /* ty=Tensor[(5, 9, 3), bool] */;
    %243 = shape_of(%241, dtype="int32") /* ty=Tensor[(3), int32] */;
    %244 = cast(%241, dtype="bool") /* ty=Tensor[(5, 9, 3), bool] */;
    %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %246 = less(%244, %245) /* ty=Tensor[(5, 9, 3), bool] */;
    %247 = cast(%246, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
    %248 = asinh(%247) /* ty=Tensor[(5, 9, 3), float64] */;
    %249 = cast(%var_3101, dtype="int8") /* ty=Tensor[(5, 9, 3), int8] */;
    %250 = shape_of(%248, dtype="int32") /* ty=Tensor[(3), int32] */;
    %251 = cast(%248, dtype="int8") /* ty=Tensor[(5, 9, 3), int8] */;
    %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %253 = %239.0;
    %254 = add(%251, %252) /* ty=Tensor[(5, 9, 3), int8] */;
    (%253, %254)
  };
  %255(%var_3114, %var_3115) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) */
}

def @func_2094() -> (Tensor[(5, 9, 3), uint8],) {
  %256 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %257 = %256.0;
  (%257,)
}

def @func_3768(%var_3742: Tensor[(16, 9, 14), uint32], %var_3751: Tensor[(594), float32], %var_3759: Tensor[(135), uint8]) -> (Tensor[(16, 9, 14), bool], Tensor[(1320), int64], Tensor[(594), float32], Tensor[(135), uint64]) {
  %258 = cast(%var_3742, dtype="bool") /* ty=Tensor[(16, 9, 14), bool] */;
  %259 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(16, 9, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(meta[relay.Constant][12] /* ty=Tensor[(16, 9, 14), uint32] */, dtype="bool") /* ty=Tensor[(16, 9, 14), bool] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %262 = cast(meta[relay.Constant][13] /* ty=Tensor[(1320), int64] */, dtype="int64") /* ty=Tensor[(1320), int64] */;
  %263 = cast(meta[relay.Constant][13] /* ty=Tensor[(1320), int64] */, dtype="int64") /* ty=Tensor[(1320), int64] */;
  %264 = cast(%var_3751, dtype="float32") /* ty=Tensor[(594), float32] */;
  %265 = reshape(%262, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
  %266 = reshape(%263, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
  %267 = reshape(%264, newshape=[6, 99]) /* ty=Tensor[(6, 99), float32] */;
  %268 = @func_1288(%265, %266, %267) /* ty=(Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(1560, 1), float32], Tensor[(6, 99), float32], Tensor[(135), uint8], Tensor[(1560), float32]) */;
  %269 = %268.5;
  %270 = cast(%var_3759, dtype="uint64") /* ty=Tensor[(135), uint64] */;
  %271 = shape_of(%269, dtype="int32") /* ty=Tensor[(1), int32] */;
  %272 = cast(%269, dtype="uint64") /* ty=Tensor[(135), uint64] */;
  %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %274 = equal(%260, %261) /* ty=Tensor[(16, 9, 14), bool] */;
  %275 = add(%272, %273) /* ty=Tensor[(135), uint64] */;
  (%274, meta[relay.Constant][13] /* ty=Tensor[(1320), int64] */, %var_3751, %275)
}

def @func_5176() -> Tensor[(5, 9, 3), int8] {
  @func_5174() /* ty=Tensor[(5, 9, 3), int8] */
}

def @func_6663(%var_6642: Tensor[(6, 11, 5), float64]) -> (Tensor[(5, 9, 3), uint8], Tensor[(6, 11, 5), bool]) {
  %276 = cast(%var_6642, dtype="float64") /* ty=Tensor[(6, 11, 5), float64] */;
  %277 = log2(%276) /* ty=Tensor[(6, 11, 5), float64] */;
  %278 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 11, 5), float64] */, dtype="bool") /* ty=Tensor[(6, 11, 5), bool] */;
  %279 = shape_of(%277, dtype="int32") /* ty=Tensor[(3), int32] */;
  %280 = cast(%277, dtype="bool") /* ty=Tensor[(6, 11, 5), bool] */;
  %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %282 = @func_2116() /* ty=Tensor[(5, 9, 3), uint8] */;
  %283 = less(%280, %281) /* ty=Tensor[(6, 11, 5), bool] */;
  (%282, %283)
}

def @func_715(%var_707: Tensor[(12, 6, 2), int64]) -> Tensor[(12, 6, 2), int64] {
  %284 = cast(%var_707, dtype="int64") /* ty=Tensor[(12, 6, 2), int64] */;
  %285 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(12, 6, 2), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 6, 2), int64] */, dtype="int64") /* ty=Tensor[(12, 6, 2), int64] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%286, %287) /* ty=Tensor[(12, 6, 2), int64] */
}

def @func_6329(%var_6312: Tensor[(5, 9, 9), float32]) -> Tensor[(5, 9, 9), float32] {
  %288 = cast(%var_6312, dtype="float32") /* ty=Tensor[(5, 9, 9), float32] */;
  %289 = asinh(%288) /* ty=Tensor[(5, 9, 9), float32] */;
  %290 = cast(%var_6312, dtype="float32") /* ty=Tensor[(5, 9, 9), float32] */;
  %291 = shape_of(%289, dtype="int32") /* ty=Tensor[(3), int32] */;
  %292 = cast(%289, dtype="float32") /* ty=Tensor[(5, 9, 9), float32] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%292, %293) /* ty=Tensor[(5, 9, 9), float32] */
}

def @func_3593() -> Tensor[(5, 9, 3), int8] {
  @func_3591() /* ty=Tensor[(5, 9, 3), int8] */
}

def @func_2345(%var_2317: Tensor[(9, 12, 9), int16], %var_2318: Tensor[(9, 12, 9), int16], %var_2324: Tensor[(156), float64]) -> (Tensor[(9, 12, 9), int16], Tensor[(1560), float32], Tensor[(156), float32]) {
  %294 = cast(%var_2318, dtype="int16") /* ty=Tensor[(9, 12, 9), int16] */;
  %295 = shape_of(%var_2317, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%var_2317, dtype="int16") /* ty=Tensor[(9, 12, 9), int16] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %298 = cast(%var_2324, dtype="float64") /* ty=Tensor[(156), float64] */;
  %299 = reshape(%298, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), float64] */;
  %300 = @func_622(%299) /* ty=(Tensor[(3, 13, 4), bool], Tensor[(594), float32], float32, Tensor[(1560), float32], Tensor[(594), float32]) */;
  %301 = cast(%var_2324, dtype="float32") /* ty=Tensor[(156), float32] */;
  %302 = left_shift(%296, %297) /* ty=Tensor[(9, 12, 9), int16] */;
  %303 = %300.3;
  %304 = acosh(%301) /* ty=Tensor[(156), float32] */;
  (%302, %303, %304)
}

def @func_1643(%var_1641: Tensor[(144), int64]) -> (Tensor[(5, 9, 3), float64], Tensor[(15, 8, 11), float32], Tensor[(1320), int64], Tensor[(3, 198), float32], Tensor[(5, 9, 3), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64]) {
  @func_1640(%var_1641) /* ty=(Tensor[(5, 9, 3), float64], Tensor[(15, 8, 11), float32], Tensor[(1320), int64], Tensor[(3, 198), float32], Tensor[(5, 9, 3), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64]) */
}

def @func_4735(%var_4731: Tensor[(1560), float32], %var_4732: Tensor[(594), float32], %var_4733: Tensor[(594), float32], %var_4734: Tensor[(495), float32]) -> (Tensor[(144), int64], Tensor[(1560), float32], Tensor[(594), bool], Tensor[(594), float32], Tensor[(11, 5, 9), float32], Tensor[(495), float32]) {
  %327 = fn (%var_4709: Tensor[(1560), float32], %var_4711: Tensor[(594), float32], %var_4717: Tensor[(594), float32], %var_4725: Tensor[(495), float32]) -> (Tensor[(144), int64], Tensor[(1560), float32], Tensor[(594), bool], Tensor[(594), float32], Tensor[(11, 5, 9), float32], Tensor[(495), float32]) {
    %305 = @func_2449() /* ty=(Tensor[(144), int64],) */;
    %306 = cast(%var_4709, dtype="float32") /* ty=Tensor[(1560), float32] */;
    %307 = reshape(%306, newshape=[1560]) /* ty=Tensor[(1560), float32] */;
    %308 = @func_4470(%307) /* ty=(Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), int8]) */;
    %309 = %308.1;
    %310 = cast(%var_4711, dtype="bool") /* ty=Tensor[(594), bool] */;
    %311 = shape_of(%309, dtype="int32") /* ty=Tensor[(1), int32] */;
    %312 = cast(%309, dtype="bool") /* ty=Tensor[(594), bool] */;
    %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?), bool] */;
    %314 = cast(%var_4717, dtype="float32") /* ty=Tensor[(594), float32] */;
    %315 = shape_of(%var_4711, dtype="int32") /* ty=Tensor[(1), int32] */;
    %316 = cast(%var_4711, dtype="float32") /* ty=Tensor[(594), float32] */;
    %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?), float32] */;
    %318 = cast(%var_4725, dtype="float32") /* ty=Tensor[(495), float32] */;
    %319 = cast(%var_4725, dtype="float32") /* ty=Tensor[(495), float32] */;
    %320 = reshape(%318, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), float32] */;
    %321 = reshape(%319, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), float32] */;
    %322 = @func_2249(%320, %321) /* ty=(Tensor[(11, 5, 9), float32], Tensor[(11, 5, 9), float32]) */;
    %323 = %305.0;
    %324 = greater(%312, %313) /* ty=Tensor[(594), bool] */;
    %325 = floor_divide(%316, %317) /* ty=Tensor[(594), float32] */;
    %326 = %322.0;
    (%323, %var_4709, %324, %325, %326, %var_4725)
  };
  %327(%var_4731, %var_4732, %var_4733, %var_4734) /* ty=(Tensor[(144), int64], Tensor[(1560), float32], Tensor[(594), bool], Tensor[(594), float32], Tensor[(11, 5, 9), float32], Tensor[(495), float32]) */
}

def @func_3617() -> (Tensor[(5, 9, 3), int8],) {
  %328 = @func_3039() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %329 = %328.0;
  (%329,)
}

def @func_625(%var_623: Tensor[(3, 13, 4), float64]) -> (Tensor[(3, 13, 4), bool], Tensor[(594), float32], float32, Tensor[(1560), float32], Tensor[(594), float32]) {
  @func_622(%var_623) /* ty=(Tensor[(3, 13, 4), bool], Tensor[(594), float32], float32, Tensor[(1560), float32], Tensor[(594), float32]) */
}

def @func_1746(%var_1721: Tensor[(1560), float32]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32]) {
  %330 = @func_1238() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %331 = cast(meta[relay.Constant][16] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %332 = %330.0;
  %333 = cast(%332, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
  %334 = cast(%var_1721, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %335 = reshape(%331, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %336 = reshape(%333, newshape=[5, 9, 3]) /* ty=Tensor[(5, 9, 3), uint8] */;
  %337 = reshape(%334, newshape=[1560, 1]) /* ty=Tensor[(1560, 1), float32] */;
  %338 = @func_849(%335, %336, %337) /* ty=(float64, Tensor[(594), float32], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), bool], Tensor[(10, 13, 12), float32], Tensor[(1560, 1), float32]) */;
  %339 = %338.2;
  (%332, %339, meta[relay.Constant][16] /* ty=Tensor[(594), float32] */, %var_1721)
}

def @func_4014(%var_4013: Tensor[(594), float32]) -> (Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8], Tensor[(135), uint64], Tensor[(2016), uint32], Tensor[(594), float32]) {
  %358 = fn (%var_4008: Tensor[(594), float32]) -> (Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8], Tensor[(135), uint64], Tensor[(2016), uint32], Tensor[(594), float32]) {
    %340 = @func_2006() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8]) */;
    %341 = %340.0;
    %342 = cast(%341, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
    %343 = reshape(%342, newshape=[5, 9, 3]) /* ty=Tensor[(5, 9, 3), uint8] */;
    %344 = @func_1479(%343) /* ty=(Tensor[(5, 9, 3), float64],) */;
    %345 = @func_2982() /* ty=(Tensor[(5, 9, 3), uint8],) */;
    %346 = @func_3039() /* ty=(Tensor[(5, 9, 3), int8],) */;
    %347 = cast(meta[relay.Constant][17] /* ty=Tensor[(2016), uint32] */, dtype="uint32") /* ty=Tensor[(2016), uint32] */;
    %348 = cast(%var_4008, dtype="float32") /* ty=Tensor[(594), float32] */;
    %349 = %345.0;
    %350 = cast(%349, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
    %351 = reshape(%347, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), uint32] */;
    %352 = reshape(%348, newshape=[594]) /* ty=Tensor[(594), float32] */;
    %353 = reshape(%350, newshape=[135]) /* ty=Tensor[(135), uint8] */;
    %354 = @func_3768(%351, %352, %353) /* ty=(Tensor[(16, 9, 14), bool], Tensor[(1320), int64], Tensor[(594), float32], Tensor[(135), uint64]) */;
    %355 = %344.0;
    %356 = %346.0;
    %357 = %354.3;
    (%341, %355, %349, %356, %357, meta[relay.Constant][17] /* ty=Tensor[(2016), uint32] */, %var_4008)
  };
  %358(%var_4013) /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8], Tensor[(135), uint64], Tensor[(2016), uint32], Tensor[(594), float32]) */
}

def @func_4220() -> (Tensor[(5, 9, 3), int8], Tensor[(9, 12, 9), int16], Tensor[(78, 2), float64]) {
  @func_4218() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(9, 12, 9), int16], Tensor[(78, 2), float64]) */
}

def @func_4611(%var_4585: Tensor[(6, 6, 10), int16], %var_4601: Tensor[(1, 6, 10), int16]) -> (Tensor[(6, 6, 10), int16], Tensor[(?, 6, 10), bool]) {
  %359 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 6, 10), int16] */, dtype="int16") /* ty=Tensor[(1, 6, 10), int16] */;
  %360 = cast(%var_4585, dtype="int16") /* ty=Tensor[(6, 6, 10), int16] */;
  %361 = cast(%var_4601, dtype="bool") /* ty=Tensor[(1, 6, 10), bool] */;
  %362 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(1, 6, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 6, 10), int16] */, dtype="bool") /* ty=Tensor[(1, 6, 10), bool] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %365 = multiply(%359, %360) /* ty=Tensor[(6, 6, 10), int16] */;
  %366 = less_equal(%363, %364) /* ty=Tensor[(?, 6, 10), bool] */;
  (%365, %366)
}

def @func_3783() -> Tensor[(5, 9, 3), int8] {
  %367 = @func_3617() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %367.0
}

def @func_3785() -> Tensor[(5, 9, 3), int8] {
  @func_3783() /* ty=Tensor[(5, 9, 3), int8] */
}

def @func_2285(%var_2283: Tensor[(10, 7, 13), float64]) -> (Tensor[(10, 7, 13), float64], Tensor[(5, 9, 3), uint8]) {
  @func_2282(%var_2283) /* ty=(Tensor[(10, 7, 13), float64], Tensor[(5, 9, 3), uint8]) */
}

def @func_542(%var_435: Tensor[(11, 9, 6), float32], %var_440: Tensor[(11, 9, 6), float32]) -> (Tensor[(4, 7, 6), float64], float64, Tensor[(168), float64], Tensor[(4, 7, 6), float32], Tensor[(11, 9, 6), float64], Tensor[(11, 9, 6), float32]) {
  %368 = cast(3.12763f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %369 = cast(meta[relay.Constant][19] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %370 = cast(meta[relay.Constant][19] /* ty=Tensor[(168), float64] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %371 = reshape(%368, newshape=[]) /* ty=float64 */;
  %372 = reshape(%369, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float64] */;
  %373 = reshape(%370, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float32] */;
  %374 = @func_242(%371, %372, %373) /* ty=(Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) */;
  %375 = cast(3.12763f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %376 = %374.0;
  %377 = cast(%376, dtype="float64") /* ty=Tensor[(4, 7, 6), float64] */;
  %378 = cast(meta[relay.Constant][19] /* ty=Tensor[(168), float64] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %379 = reshape(%375, newshape=[]) /* ty=float64 */;
  %380 = reshape(%377, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float64] */;
  %381 = reshape(%378, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float32] */;
  %382 = @func_242(%379, %380, %381) /* ty=(Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) */;
  %383 = cast(%var_435, dtype="float32") /* ty=Tensor[(11, 9, 6), float32] */;
  %384 = log2(%383) /* ty=Tensor[(11, 9, 6), float32] */;
  %385 = cast(%var_440, dtype="float32") /* ty=Tensor[(11, 9, 6), float32] */;
  %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%384, dtype="float32") /* ty=Tensor[(11, 9, 6), float32] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %389 = floor_mod(%387, %388) /* ty=Tensor[(11, 9, 6), float32] */;
  %390 = cast(%389, dtype="float64") /* ty=Tensor[(11, 9, 6), float64] */;
  %391 = cast(%389, dtype="float32") /* ty=Tensor[(11, 9, 6), float32] */;
  %392 = erf(%391) /* ty=Tensor[(11, 9, 6), float32] */;
  %393 = cast(%389, dtype="int16") /* ty=Tensor[(11, 9, 6), int16] */;
  %394 = shape_of(%392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%392, dtype="int16") /* ty=Tensor[(11, 9, 6), int16] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %397 = bitwise_xor(%395, %396) /* ty=Tensor[(11, 9, 6), int16] */;
  %398 = cast(%397, dtype="float32") /* ty=Tensor[(11, 9, 6), float32] */;
  %399 = %382.1;
  %400 = sigmoid(%390) /* ty=Tensor[(11, 9, 6), float64] */;
  %401 = sin(%398) /* ty=Tensor[(11, 9, 6), float32] */;
  (%376, 3.12763f64 /* ty=float64 */, meta[relay.Constant][19] /* ty=Tensor[(168), float64] */, %399, %400, %401)
}

def @func_5822(%var_5821: Tensor[(165), uint32]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(9, 12, 9), int16], Tensor[(78, 2), float64], Tensor[(11, 5, 3), float64], Tensor[(165), uint32], Tensor[(972), float64]) {
  %421 = fn (%var_5807: Tensor[(165), uint32]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(9, 12, 9), int16], Tensor[(78, 2), float64], Tensor[(11, 5, 3), float64], Tensor[(165), uint32], Tensor[(972), float64]) {
    %402 = @func_3927() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) */;
    %403 = cast(meta[relay.Constant][20] /* ty=Tensor[(972), int16] */, dtype="int16") /* ty=Tensor[(972), int16] */;
    %404 = cast(meta[relay.Constant][20] /* ty=Tensor[(972), int16] */, dtype="int16") /* ty=Tensor[(972), int16] */;
    %405 = cast(meta[relay.Constant][21] /* ty=Tensor[(78, 2), float64] */, dtype="float64") /* ty=Tensor[(78, 2), float64] */;
    %406 = reshape(%403, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int16] */;
    %407 = reshape(%404, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int16] */;
    %408 = reshape(%405, newshape=[156]) /* ty=Tensor[(156), float64] */;
    %409 = @func_2345(%406, %407, %408) /* ty=(Tensor[(9, 12, 9), int16], Tensor[(1560), float32], Tensor[(156), float32]) */;
    %410 = cast(%var_5807, dtype="uint32") /* ty=Tensor[(165), uint32] */;
    %411 = reshape(%410, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint32] */;
    %412 = @func_3429(%411) /* ty=(Tensor[(11, 5, 3), uint32], Tensor[(11, 5, 3), float64]) */;
    %413 = cast(meta[relay.Constant][20] /* ty=Tensor[(972), int16] */, dtype="float64") /* ty=Tensor[(972), float64] */;
    %414 = acos(%413) /* ty=Tensor[(972), float64] */;
    %415 = cast(%414, dtype="float64") /* ty=Tensor[(972), float64] */;
    %416 = %402.1;
    %417 = @func_1103() /* ty=Tensor[(5, 9, 3), uint64] */;
    %418 = %409.0;
    %419 = %412.1;
    %420 = asin(%415) /* ty=Tensor[(972), float64] */;
    (%416, %417, %418, meta[relay.Constant][21] /* ty=Tensor[(78, 2), float64] */, %419, %var_5807, %420)
  };
  %421(%var_5821) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(9, 12, 9), int16], Tensor[(78, 2), float64], Tensor[(11, 5, 3), float64], Tensor[(165), uint32], Tensor[(972), float64]) */
}

def @func_2947(%var_2946: Tensor[(156), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8], Tensor[(9, 12, 9), int16], Tensor[(3, 324), int16], Tensor[(156), float64]) {
  %433 = fn (%var_2939: Tensor[(156), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8], Tensor[(9, 12, 9), int16], Tensor[(3, 324), int16], Tensor[(156), float64]) {
    %422 = @func_1850() /* ty=(Tensor[(5, 9, 3), int8],) */;
    %423 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 324), int16] */, dtype="int16") /* ty=Tensor[(3, 324), int16] */;
    %424 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 324), int16] */, dtype="int16") /* ty=Tensor[(3, 324), int16] */;
    %425 = cast(%var_2939, dtype="float64") /* ty=Tensor[(156), float64] */;
    %426 = reshape(%423, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int16] */;
    %427 = reshape(%424, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), int16] */;
    %428 = reshape(%425, newshape=[156]) /* ty=Tensor[(156), float64] */;
    %429 = @func_2345(%426, %427, %428) /* ty=(Tensor[(9, 12, 9), int16], Tensor[(1560), float32], Tensor[(156), float32]) */;
    %430 = %422.0;
    %431 = @func_2289() /* ty=Tensor[(5, 9, 3), int8] */;
    %432 = %429.0;
    (%430, %431, %432, meta[relay.Constant][22] /* ty=Tensor[(3, 324), int16] */, %var_2939)
  };
  %433(%var_2946) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8], Tensor[(9, 12, 9), int16], Tensor[(3, 324), int16], Tensor[(156), float64]) */
}

def @func_6072(%var_6071: Tensor[(156), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(156), float64], Tensor[(5, 9, 3), int8]) {
  %441 = fn (%var_6044: Tensor[(156), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(156), float64], Tensor[(5, 9, 3), int8]) {
    %434 = cast(%var_6044, dtype="float64") /* ty=Tensor[(156), float64] */;
    %435 = reshape(%434, newshape=[156, 1]) /* ty=Tensor[(156, 1), float64] */;
    %436 = @func_3155(%435) /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(39, 4), float64], Tensor[(156, 1), float64], Tensor[(5, 9, 3), uint64]) */;
    %437 = @func_3617() /* ty=(Tensor[(5, 9, 3), int8],) */;
    %438 = @func_5398() /* ty=Tensor[(5, 9, 3), int8] */;
    %439 = %436.3;
    %440 = %437.0;
    (%438, %439, %var_6044, %440)
  };
  %441(%var_6071) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(156), float64], Tensor[(5, 9, 3), int8]) */
}

def @main() -> (Tensor[(4, 9), float64],) {
  %442 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 9), float64] */, dtype="float64") /* ty=Tensor[(4, 9), float64] */;
  %443 = cosh(%442) /* ty=Tensor[(4, 9), float64] */;
  (%443,)
}

def @func_4218() -> (Tensor[(5, 9, 3), int8], Tensor[(9, 12, 9), int16], Tensor[(78, 2), float64]) {
  %444 = @func_2006() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8]) */;
  %445 = cast(meta[relay.Constant][24] /* ty=Tensor[(78, 2), float64] */, dtype="float64") /* ty=Tensor[(78, 2), float64] */;
  %446 = reshape(%445, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %447 = @func_2945(%446) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8], Tensor[(9, 12, 9), int16], Tensor[(3, 324), int16], Tensor[(156), float64]) */;
  %448 = %444.1;
  %449 = %447.2;
  (%448, %449, meta[relay.Constant][24] /* ty=Tensor[(78, 2), float64] */)
}

def @func_6379() -> (Tensor[(5, 9, 3), int8], Tensor[(156), float64], Tensor[(144), int64]) {
  %456 = fn () -> (Tensor[(5, 9, 3), int8], Tensor[(156), float64], Tensor[(144), int64]) {
    %450 = @func_3617() /* ty=(Tensor[(5, 9, 3), int8],) */;
    %451 = @func_4639() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint64], Tensor[(156), float64]) */;
    %452 = @func_2449() /* ty=(Tensor[(144), int64],) */;
    %453 = %450.0;
    %454 = %451.2;
    %455 = %452.0;
    (%453, %454, %455)
  };
  %456() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(156), float64], Tensor[(144), int64]) */
}

def @func_1347() -> (Tensor[(5, 9, 3), uint8],) {
  %458 = fn () -> (Tensor[(5, 9, 3), uint8],) {
    %457 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
    (%457,)
  };
  %458() /* ty=(Tensor[(5, 9, 3), uint8],) */
}

def @func_5752() -> (Tensor[(5, 9, 3), uint64],) {
  %459 = @func_1301() /* ty=(Tensor[(5, 9, 3), uint64], Tensor[(5, 9, 3), int8]) */;
  %460 = %459.0;
  (%460,)
}

def @func_2699(%var_2694: Tensor[(5, 9, 3), uint8]) -> (Tensor[(5, 9, 3), int64],) {
  %461 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %462 = %461.0;
  %463 = cast(%var_2694, dtype="int64") /* ty=Tensor[(5, 9, 3), int64] */;
  %464 = shape_of(%462, dtype="int32") /* ty=Tensor[(3), int32] */;
  %465 = cast(%462, dtype="int64") /* ty=Tensor[(5, 9, 3), int64] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %467 = subtract(%465, %466) /* ty=Tensor[(5, 9, 3), int64] */;
  (%467,)
}

def @func_4298(%var_4296: float64, %var_4297: Tensor[(168), float64]) -> (Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8], Tensor[(144), int64], Tensor[(5, 9, 3), float32], Tensor[(135), uint8], Tensor[(1320), int64], Tensor[(6, 99), float32], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64]) {
  %495 = fn (%var_4277: float64, %var_4278: Tensor[(168), float64]) -> (Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8], Tensor[(144), int64], Tensor[(5, 9, 3), float32], Tensor[(135), uint8], Tensor[(1320), int64], Tensor[(6, 99), float32], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64]) {
    %468 = @func_1850() /* ty=(Tensor[(5, 9, 3), int8],) */;
    %469 = @func_3821() /* ty=(Tensor[(1560), float32], Tensor[(144), int64], Tensor[(5, 9, 3), uint8]) */;
    %470 = @func_2289() /* ty=Tensor[(5, 9, 3), int8] */;
    %471 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 9, 3), int8] */, dtype="float32") /* ty=Tensor[(5, 9, 3), float32] */;
    %472 = shape_of(%470, dtype="int32") /* ty=Tensor[(3), int32] */;
    %473 = cast(%470, dtype="float32") /* ty=Tensor[(5, 9, 3), float32] */;
    %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %475 = cast(meta[relay.Constant][26] /* ty=Tensor[(1320), int64] */, dtype="int64") /* ty=Tensor[(1320), int64] */;
    %476 = cast(meta[relay.Constant][26] /* ty=Tensor[(1320), int64] */, dtype="int64") /* ty=Tensor[(1320), int64] */;
    %477 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 99), float32] */, dtype="float32") /* ty=Tensor[(6, 99), float32] */;
    %478 = reshape(%475, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
    %479 = reshape(%476, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
    %480 = reshape(%477, newshape=[6, 99]) /* ty=Tensor[(6, 99), float32] */;
    %481 = @func_1288(%478, %479, %480) /* ty=(Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(1560, 1), float32], Tensor[(6, 99), float32], Tensor[(135), uint8], Tensor[(1560), float32]) */;
    %482 = cast(%var_4277, dtype="float64") /* ty=float64 */;
    %483 = cast(%var_4278, dtype="float64") /* ty=Tensor[(168), float64] */;
    %484 = cast(%var_4278, dtype="float32") /* ty=Tensor[(168), float32] */;
    %485 = reshape(%482, newshape=[]) /* ty=float64 */;
    %486 = reshape(%483, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float64] */;
    %487 = reshape(%484, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float32] */;
    %488 = @func_242(%485, %486, %487) /* ty=(Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) */;
    %489 = @func_2874() /* ty=Tensor[(5, 9, 3), uint8] */;
    %490 = %468.0;
    %491 = %469.1;
    %492 = mod(%473, %474) /* ty=Tensor[(5, 9, 3), float32] */;
    %493 = %481.5;
    %494 = %488.1;
    (%489, %490, %491, %492, %493, meta[relay.Constant][26] /* ty=Tensor[(1320), int64] */, meta[relay.Constant][27] /* ty=Tensor[(6, 99), float32] */, %494, %var_4277, %var_4278)
  };
  %495(%var_4296, %var_4297) /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8], Tensor[(144), int64], Tensor[(5, 9, 3), float32], Tensor[(135), uint8], Tensor[(1320), int64], Tensor[(6, 99), float32], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64]) */
}

def @func_4957(%var_4956: Tensor[(3120), float32]) -> (Tensor[(144), int64], Tensor[(9, 7), bool], bool, Tensor[(144), int64], Tensor[(3120), float32]) {
  %506 = fn (%var_4952: Tensor[(3120), float32]) -> (Tensor[(144), int64], Tensor[(9, 7), bool], bool, Tensor[(144), int64], Tensor[(3120), float32]) {
    %496 = @func_2811() /* ty=(Tensor[(144), int64],) */;
    %497 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %498 = reshape(%497, newshape=[]) /* ty=bool */;
    %499 = @func_2793(%498) /* ty=(Tensor[(9, 7), bool], Tensor[(5, 9, 3), int8]) */;
    %500 = cast(%var_4952, dtype="float32") /* ty=Tensor[(3120), float32] */;
    %501 = reshape(%500, newshape=[15, 16, 13]) /* ty=Tensor[(15, 16, 13), float32] */;
    %502 = @func_1821(%501) /* ty=(Tensor[(15, 16, 13), float32], Tensor[(3, 198), float32], Tensor[(144), int64]) */;
    %503 = %496.0;
    %504 = %499.0;
    %505 = %502.2;
    (%503, %504, False /* ty=bool */, %505, %var_4952)
  };
  %506(%var_4956) /* ty=(Tensor[(144), int64], Tensor[(9, 7), bool], bool, Tensor[(144), int64], Tensor[(3120), float32]) */
}

def @func_1557() -> (Tensor[(5, 9, 3), int8],) {
  %507 = @func_1238() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %508 = %507.0;
  (%508,)
}

def @func_3728() -> (Tensor[(5, 9, 3), int8],) {
  %509 = @func_1969() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %510 = %509.0;
  (%510,)
}

def @func_2290() -> Tensor[(5, 9, 3), int8] {
  %512 = fn () -> Tensor[(5, 9, 3), int8] {
    %511 = @func_1238() /* ty=(Tensor[(5, 9, 3), int8],) */;
    %511.0
  };
  %512() /* ty=Tensor[(5, 9, 3), int8] */
}

def @func_6418() -> (Tensor[(5, 9, 3), int8],) {
  @func_6416() /* ty=(Tensor[(5, 9, 3), int8],) */
}

def @func_718(%var_716: Tensor[(12, 6, 2), int64]) -> Tensor[(12, 6, 2), int64] {
  @func_715(%var_716) /* ty=Tensor[(12, 6, 2), int64] */
}

def @func_5015() -> Tensor[(5, 9, 3), int8] {
  @func_5013() /* ty=Tensor[(5, 9, 3), int8] */
}

def @func_3432(%var_3430: Tensor[(11, 5, 3), uint32]) -> (Tensor[(11, 5, 3), uint32], Tensor[(11, 5, 3), float64]) {
  @func_3429(%var_3430) /* ty=(Tensor[(11, 5, 3), uint32], Tensor[(11, 5, 3), float64]) */
}

def @func_5142(%var_5140: float64) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(144), int64], Tensor[(168), float64], float64, Tensor[(168), float64]) {
  @func_5139(%var_5140) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(144), int64], Tensor[(168), float64], float64, Tensor[(168), float64]) */
}

def @func_2006() -> (Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8]) {
  %513 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %514 = @func_1935() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) */;
  %515 = %513.0;
  %516 = %514.0;
  (%515, %516)
}

def @func_2983() -> (Tensor[(5, 9, 3), uint8],) {
  %519 = fn () -> (Tensor[(5, 9, 3), uint8],) {
    %517 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
    %518 = %517.0;
    (%518,)
  };
  %519() /* ty=(Tensor[(5, 9, 3), uint8],) */
}

def @func_6007(%var_6006: Tensor[(91, 10), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(10, 7, 13), float64], Tensor[(91, 10), float64], Tensor[(5, 9, 3), int8], Tensor[(6, 14, 3), float64], Tensor[(252), float64]) {
  %531 = fn (%var_5974: Tensor[(91, 10), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(10, 7, 13), float64], Tensor[(91, 10), float64], Tensor[(5, 9, 3), int8], Tensor[(6, 14, 3), float64], Tensor[(252), float64]) {
    %520 = @func_1850() /* ty=(Tensor[(5, 9, 3), int8],) */;
    %521 = cast(%var_5974, dtype="float64") /* ty=Tensor[(91, 10), float64] */;
    %522 = reshape(%521, newshape=[10, 7, 13]) /* ty=Tensor[(10, 7, 13), float64] */;
    %523 = @func_2282(%522) /* ty=(Tensor[(10, 7, 13), float64], Tensor[(5, 9, 3), uint8]) */;
    %524 = cast(meta[relay.Constant][28] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
    %525 = reshape(%524, newshape=[6, 14, 3]) /* ty=Tensor[(6, 14, 3), float64] */;
    %526 = @func_4335(%525) /* ty=(Tensor[(6, 14, 3), float64],) */;
    %527 = %520.0;
    %528 = %523.0;
    %529 = @func_5398() /* ty=Tensor[(5, 9, 3), int8] */;
    %530 = %526.0;
    (%527, %528, %var_5974, %529, %530, meta[relay.Constant][28] /* ty=Tensor[(252), float64] */)
  };
  %531(%var_6006) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(10, 7, 13), float64], Tensor[(91, 10), float64], Tensor[(5, 9, 3), int8], Tensor[(6, 14, 3), float64], Tensor[(252), float64]) */
}

def @func_2449() -> (Tensor[(144), int64],) {
  %532 = @func_2049() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(144), int64], Tensor[(3120), float32]) */;
  %533 = %532.1;
  (%533,)
}

def @func_1410(%var_1386: Tensor[(8, 5, 15), float32]) -> Tensor[(8, 5, 15), float32] {
  %534 = cast(%var_1386, dtype="float32") /* ty=Tensor[(8, 5, 15), float32] */;
  %535 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(8, 5, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(meta[relay.Constant][29] /* ty=Tensor[(8, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(8, 5, 15), float32] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%536, %537) /* ty=Tensor[(8, 5, 15), float32] */
}

def @func_246(%var_243: float64, %var_244: Tensor[(4, 7, 6), float64], %var_245: Tensor[(4, 7, 6), float32]) -> (Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) {
  %570 = fn (%var_123: float64, %var_124: Tensor[(4, 7, 6), float64], %var_162: Tensor[(4, 7, 6), float32]) -> (Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) {
    %538 = cast(%var_123, dtype="bool") /* ty=bool */;
    %539 = cast(%var_124, dtype="bool") /* ty=Tensor[(4, 7, 6), bool] */;
    %540 = greater_equal(%538, %539) /* ty=Tensor[(4, 7, 6), bool] */;
    %541 = cast(%var_123, dtype="float32") /* ty=float32 */;
    %542 = cast(%540, dtype="float32") /* ty=Tensor[(4, 7, 6), float32] */;
    %543 = mod(%541, %542) /* ty=Tensor[(4, 7, 6), float32] */;
    %544 = cast(%543, dtype="float64") /* ty=Tensor[(4, 7, 6), float64] */;
    %545 = cast(%540, dtype="float32") /* ty=Tensor[(4, 7, 6), float32] */;
    %546 = cosh(%545) /* ty=Tensor[(4, 7, 6), float32] */;
    %547 = cast(%546, dtype="float32") /* ty=Tensor[(4, 7, 6), float32] */;
    %548 = tan(%547) /* ty=Tensor[(4, 7, 6), float32] */;
    %549 = cast(%540, dtype="float32") /* ty=Tensor[(4, 7, 6), float32] */;
    %550 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
    %551 = cast(%548, dtype="float32") /* ty=Tensor[(4, 7, 6), float32] */;
    %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %553 = cast(%var_162, dtype="uint8") /* ty=Tensor[(4, 7, 6), uint8] */;
    %554 = shape_of(%546, dtype="int32") /* ty=Tensor[(3), int32] */;
    %555 = cast(%546, dtype="uint8") /* ty=Tensor[(4, 7, 6), uint8] */;
    %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %557 = right_shift(%555, %556) /* ty=Tensor[(4, 7, 6), uint8] */;
    %558 = cast(%var_124, dtype="bool") /* ty=Tensor[(4, 7, 6), bool] */;
    %559 = shape_of(%557, dtype="int32") /* ty=Tensor[(3), int32] */;
    %560 = cast(%557, dtype="bool") /* ty=Tensor[(4, 7, 6), bool] */;
    %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %562 = greater(%560, %561) /* ty=Tensor[(4, 7, 6), bool] */;
    %563 = cast(%562, dtype="int16") /* ty=Tensor[(4, 7, 6), int16] */;
    %564 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
    %565 = cast(%548, dtype="int16") /* ty=Tensor[(4, 7, 6), int16] */;
    %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %567 = sinh(%544) /* ty=Tensor[(4, 7, 6), float64] */;
    %568 = floor_divide(%551, %552) /* ty=Tensor[(4, 7, 6), float32] */;
    %569 = left_shift(%565, %566) /* ty=Tensor[(4, 7, 6), int16] */;
    (%567, %568, %569)
  };
  %570(%var_243, %var_244, %var_245) /* ty=(Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) */
}

def @func_2282(%var_2277: Tensor[(10, 7, 13), float64]) -> (Tensor[(10, 7, 13), float64], Tensor[(5, 9, 3), uint8]) {
  %571 = cast(%var_2277, dtype="float64") /* ty=Tensor[(10, 7, 13), float64] */;
  %572 = atan(%571) /* ty=Tensor[(10, 7, 13), float64] */;
  %573 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
  (%572, %573)
}

def @func_1293(%var_1290: Tensor[(15, 8, 11), int64], %var_1291: Tensor[(15, 8, 11), int64], %var_1292: Tensor[(6, 99), float32]) -> (Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(1560, 1), float32], Tensor[(6, 99), float32], Tensor[(135), uint8], Tensor[(1560), float32]) {
  @func_1288(%var_1290, %var_1291, %var_1292) /* ty=(Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(1560, 1), float32], Tensor[(6, 99), float32], Tensor[(135), uint8], Tensor[(1560), float32]) */
}

def @func_3928() -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) {
  %577 = fn () -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) {
    %574 = @func_3728() /* ty=(Tensor[(5, 9, 3), int8],) */;
    %575 = @func_3872() /* ty=Tensor[(5, 9, 3), int8] */;
    %576 = %574.0;
    (%575, %576)
  };
  %577() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) */
}

def @func_5690() -> Tensor[(1560), float32] {
  %579 = fn () -> Tensor[(1560), float32] {
    %578 = @func_3821() /* ty=(Tensor[(1560), float32], Tensor[(144), int64], Tensor[(5, 9, 3), uint8]) */;
    %578.0
  };
  %579() /* ty=Tensor[(1560), float32] */
}

def @func_5518(%var_5517: Tensor[(168, 1), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(144), int64], bool, Tensor[(168, 1), float64], Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) {
  %590 = fn (%var_5497: Tensor[(168, 1), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(144), int64], bool, Tensor[(168, 1), float64], Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) {
    %580 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %581 = cast(%var_5497, dtype="float64") /* ty=Tensor[(168, 1), float64] */;
    %582 = reshape(%580, newshape=[]) /* ty=bool */;
    %583 = reshape(%581, newshape=[42, 4]) /* ty=Tensor[(42, 4), float64] */;
    %584 = @func_3863(%582, %583) /* ty=(Tensor[(144), int64], Tensor[(9, 7), bool], bool, float64, Tensor[(42, 4), float64]) */;
    %585 = @func_3039() /* ty=(Tensor[(5, 9, 3), int8],) */;
    %586 = @func_3591() /* ty=Tensor[(5, 9, 3), int8] */;
    %587 = %584.0;
    %588 = %585.0;
    %589 = @func_5013() /* ty=Tensor[(5, 9, 3), int8] */;
    (%586, %587, False /* ty=bool */, %var_5497, %588, %589)
  };
  %590(%var_5517) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(144), int64], bool, Tensor[(168, 1), float64], Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) */
}

def @func_1457() -> Tensor[(5, 9, 3), int8] {
  %591 = @func_1238() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %591.0
}

def @func_5245(%var_5244: Tensor[(156), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float32], Tensor[(156), float64], Tensor[(156), float64], Tensor[(5, 9, 3), uint8]) {
  %603 = fn (%var_5228: Tensor[(156), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float32], Tensor[(156), float64], Tensor[(156), float64], Tensor[(5, 9, 3), uint8]) {
    %592 = @func_1935() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) */;
    %593 = cast(%var_5228, dtype="float64") /* ty=Tensor[(156), float64] */;
    %594 = reshape(%593, newshape=[156]) /* ty=Tensor[(156), float64] */;
    %595 = @func_4790(%594) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8], Tensor[(156), float64]) */;
    %596 = %595.2;
    %597 = cast(%596, dtype="float64") /* ty=Tensor[(156), float64] */;
    %598 = reshape(%597, newshape=[3, 52]) /* ty=Tensor[(3, 52), float64] */;
    %599 = @func_3492(%598) /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(594), float32], Tensor[(5, 9, 3), uint8], Tensor[(910), float64], Tensor[(3, 52), int8]) */;
    %600 = @func_3783() /* ty=Tensor[(5, 9, 3), int8] */;
    %601 = %592.2;
    %602 = %599.2;
    (%600, %601, %596, %var_5228, %602)
  };
  %603(%var_5244) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float32], Tensor[(156), float64], Tensor[(156), float64], Tensor[(5, 9, 3), uint8]) */
}

def @func_6249(%var_6247: Tensor[(5, 7, 3), float64], %var_6248: Tensor[(5, 7, 3), float64]) -> Tensor[(5, 7, 3), uint64] {
  %613 = fn (%var_6232: Tensor[(5, 7, 3), float64], %var_6233: Tensor[(5, 7, 3), float64]) -> Tensor[(5, 7, 3), uint64] {
    %604 = cast(%var_6233, dtype="float64") /* ty=Tensor[(5, 7, 3), float64] */;
    %605 = shape_of(%var_6232, dtype="int32") /* ty=Tensor[(3), int32] */;
    %606 = cast(%var_6232, dtype="float64") /* ty=Tensor[(5, 7, 3), float64] */;
    %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %608 = power(%606, %607) /* ty=Tensor[(5, 7, 3), float64] */;
    %609 = cast(%608, dtype="uint64") /* ty=Tensor[(5, 7, 3), uint64] */;
    %610 = shape_of(%var_6232, dtype="int32") /* ty=Tensor[(3), int32] */;
    %611 = cast(%var_6232, dtype="uint64") /* ty=Tensor[(5, 7, 3), uint64] */;
    %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    subtract(%611, %612) /* ty=Tensor[(5, 7, 3), uint64] */
  };
  %613(%var_6247, %var_6248) /* ty=Tensor[(5, 7, 3), uint64] */
}

def @func_1479(%var_1472: Tensor[(5, 9, 3), uint8]) -> (Tensor[(5, 9, 3), float64],) {
  %614 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %615 = %614.0;
  %616 = cast(%var_1472, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %617 = shape_of(%615, dtype="int32") /* ty=Tensor[(3), int32] */;
  %618 = cast(%615, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %620 = floor_divide(%618, %619) /* ty=Tensor[(5, 9, 3), float64] */;
  (%620,)
}

def @func_1559() -> (Tensor[(5, 9, 3), int8],) {
  @func_1557() /* ty=(Tensor[(5, 9, 3), int8],) */
}

def @func_1459() -> Tensor[(5, 9, 3), int8] {
  @func_1457() /* ty=Tensor[(5, 9, 3), int8] */
}

def @func_1301() -> (Tensor[(5, 9, 3), uint64], Tensor[(5, 9, 3), int8]) {
  %621 = @func_1238() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %622 = @func_1103() /* ty=Tensor[(5, 9, 3), uint64] */;
  %623 = %621.0;
  (%622, %623)
}

def @func_546(%var_544: Tensor[(11, 9, 6), float32], %var_545: Tensor[(11, 9, 6), float32]) -> (Tensor[(4, 7, 6), float64], float64, Tensor[(168), float64], Tensor[(4, 7, 6), float32], Tensor[(11, 9, 6), float64], Tensor[(11, 9, 6), float32]) {
  @func_542(%var_544, %var_545) /* ty=(Tensor[(4, 7, 6), float64], float64, Tensor[(168), float64], Tensor[(4, 7, 6), float32], Tensor[(11, 9, 6), float64], Tensor[(11, 9, 6), float32]) */
}

def @func_2117() -> Tensor[(5, 9, 3), uint8] {
  %625 = fn () -> Tensor[(5, 9, 3), uint8] {
    %624 = @func_1935() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) */;
    %624.1
  };
  %625() /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_2795(%var_2794: bool) -> (Tensor[(9, 7), bool], Tensor[(5, 9, 3), int8]) {
  %630 = fn (%var_2782: bool) -> (Tensor[(9, 7), bool], Tensor[(5, 9, 3), int8]) {
    %626 = cast(%var_2782, dtype="bool") /* ty=bool */;
    %627 = cast(meta[relay.Constant][30] /* ty=Tensor[(9, 7), bool] */, dtype="bool") /* ty=Tensor[(9, 7), bool] */;
    %628 = logical_or(%626, %627) /* ty=Tensor[(9, 7), bool] */;
    %629 = @func_2289() /* ty=Tensor[(5, 9, 3), int8] */;
    (%628, %629)
  };
  %630(%var_2794) /* ty=(Tensor[(9, 7), bool], Tensor[(5, 9, 3), int8]) */
}

def @func_886() -> (Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) {
  %635 = fn () -> (Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) {
    %631 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
    %632 = cast(%631, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
    %633 = sinh(%632) /* ty=Tensor[(5, 9, 3), float64] */;
    %634 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
    (%633, %634)
  };
  %635() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */
}

def @func_1413(%var_1411: Tensor[(8, 5, 15), float32]) -> Tensor[(8, 5, 15), float32] {
  @func_1410(%var_1411) /* ty=Tensor[(8, 5, 15), float32] */
}

def @func_580(%var_577: float32, %var_578: Tensor[(10, 13, 12), float32], %var_579: Tensor[(594), float32]) -> (Tensor[(10, 13, 12), float32], Tensor[(4, 7, 6), int16], Tensor[(168), float64], Tensor[(4, 7, 6), float64], Tensor[(594), float32]) {
  @func_575(%var_577, %var_578, %var_579) /* ty=(Tensor[(10, 13, 12), float32], Tensor[(4, 7, 6), int16], Tensor[(168), float64], Tensor[(4, 7, 6), float64], Tensor[(594), float32]) */
}

def @func_1640(%var_1636: Tensor[(144), int64]) -> (Tensor[(5, 9, 3), float64], Tensor[(15, 8, 11), float32], Tensor[(1320), int64], Tensor[(3, 198), float32], Tensor[(5, 9, 3), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64]) {
  %636 = @func_1259() /* ty=(Tensor[(5, 9, 3), float64],) */;
  %637 = cast(meta[relay.Constant][31] /* ty=Tensor[(1320), int64] */, dtype="int64") /* ty=Tensor[(1320), int64] */;
  %638 = cast(meta[relay.Constant][31] /* ty=Tensor[(1320), int64] */, dtype="int64") /* ty=Tensor[(1320), int64] */;
  %639 = cast(meta[relay.Constant][32] /* ty=Tensor[(3, 198), float32] */, dtype="float32") /* ty=Tensor[(3, 198), float32] */;
  %640 = reshape(%637, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
  %641 = reshape(%638, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
  %642 = reshape(%639, newshape=[6, 99]) /* ty=Tensor[(6, 99), float32] */;
  %643 = @func_1288(%640, %641, %642) /* ty=(Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(1560, 1), float32], Tensor[(6, 99), float32], Tensor[(135), uint8], Tensor[(1560), float32]) */;
  %644 = @func_1259() /* ty=(Tensor[(5, 9, 3), float64],) */;
  %645 = cast(%var_1636, dtype="int64") /* ty=Tensor[(144), int64] */;
  %646 = reshape(%645, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), int64] */;
  %647 = %636.0;
  %648 = %643.1;
  %649 = %644.0;
  %650 = @func_715(%646) /* ty=Tensor[(12, 6, 2), int64] */;
  (%647, %648, meta[relay.Constant][31] /* ty=Tensor[(1320), int64] */, meta[relay.Constant][32] /* ty=Tensor[(3, 198), float32] */, %649, %650, %var_1636)
}

def @func_6155(%var_6153: Tensor[(1560), float32], %var_6154: Tensor[(1560), float32]) -> (Tensor[(1560), int64], Tensor[(1560), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64], Tensor[(5, 9, 3), uint8]) {
  %670 = fn (%var_6109: Tensor[(1560), float32], %var_6127: Tensor[(1560), float32]) -> (Tensor[(1560), int64], Tensor[(1560), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64], Tensor[(5, 9, 3), uint8]) {
    %651 = @func_3821() /* ty=(Tensor[(1560), float32], Tensor[(144), int64], Tensor[(5, 9, 3), uint8]) */;
    %652 = %651.0;
    %653 = cast(%var_6109, dtype="int64") /* ty=Tensor[(1560), int64] */;
    %654 = shape_of(%652, dtype="int32") /* ty=Tensor[(1), int32] */;
    %655 = cast(%652, dtype="int64") /* ty=Tensor[(1560), int64] */;
    %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?), int64] */;
    %657 = cast(%652, dtype="float32") /* ty=Tensor[(1560), float32] */;
    %658 = rsqrt(%657) /* ty=Tensor[(1560), float32] */;
    %659 = cast(%var_6127, dtype="float64") /* ty=Tensor[(1560), float64] */;
    %660 = shape_of(%658, dtype="int32") /* ty=Tensor[(1), int32] */;
    %661 = cast(%658, dtype="float64") /* ty=Tensor[(1560), float64] */;
    %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?), float64] */;
    %663 = cast(meta[relay.Constant][33] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
    %664 = reshape(%663, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %665 = @func_1640(%664) /* ty=(Tensor[(5, 9, 3), float64], Tensor[(15, 8, 11), float32], Tensor[(1320), int64], Tensor[(3, 198), float32], Tensor[(5, 9, 3), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64]) */;
    %666 = bitwise_xor(%655, %656) /* ty=Tensor[(1560), int64] */;
    %667 = minimum(%661, %662) /* ty=Tensor[(1560), float64] */;
    %668 = %665.5;
    %669 = @func_5857() /* ty=Tensor[(5, 9, 3), uint8] */;
    (%666, %667, %668, meta[relay.Constant][33] /* ty=Tensor[(144), int64] */, %669)
  };
  %670(%var_6153, %var_6154) /* ty=(Tensor[(1560), int64], Tensor[(1560), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64], Tensor[(5, 9, 3), uint8]) */
}

def @func_2451() -> (Tensor[(144), int64],) {
  @func_2449() /* ty=(Tensor[(144), int64],) */
}

def @func_4470(%var_4430: Tensor[(1560), float32]) -> (Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), int8]) {
  %671 = cast(meta[relay.Constant][34] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %672 = @func_1103() /* ty=Tensor[(5, 9, 3), uint64] */;
  %673 = cast(%672, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
  %674 = cast(%var_4430, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %675 = reshape(%671, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %676 = reshape(%673, newshape=[5, 9, 3]) /* ty=Tensor[(5, 9, 3), uint8] */;
  %677 = reshape(%674, newshape=[1560, 1]) /* ty=Tensor[(1560, 1), float32] */;
  %678 = @func_849(%675, %676, %677) /* ty=(float64, Tensor[(594), float32], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), bool], Tensor[(10, 13, 12), float32], Tensor[(1560, 1), float32]) */;
  %679 = cast(%672, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %680 = @func_1557() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %681 = %678.2;
  %682 = sigmoid(%679) /* ty=Tensor[(5, 9, 3), float64] */;
  %683 = %680.0;
  (%681, meta[relay.Constant][34] /* ty=Tensor[(594), float32] */, %var_4430, %682, %683)
}

def @func_3155(%var_3140: Tensor[(156, 1), float64]) -> (Tensor[(5, 9, 3), uint8], Tensor[(39, 4), float64], Tensor[(156, 1), float64], Tensor[(5, 9, 3), uint64]) {
  %684 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %685 = cast(%var_3140, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %686 = reshape(%685, newshape=[39, 4]) /* ty=Tensor[(39, 4), float64] */;
  %687 = @func_2493(%686) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(39, 4), float64]) */;
  %688 = cast(%var_3140, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %689 = %684.0;
  %690 = %687.1;
  %691 = sinh(%688) /* ty=Tensor[(156, 1), float64] */;
  %692 = @func_1103() /* ty=Tensor[(5, 9, 3), uint64] */;
  (%689, %690, %691, %692)
}

def @func_5013() -> Tensor[(5, 9, 3), int8] {
  %693 = @func_2006() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8]) */;
  %693.1
}

def @func_5399() -> Tensor[(5, 9, 3), int8] {
  %694 = fn () -> Tensor[(5, 9, 3), int8] {
    @func_5013() /* ty=Tensor[(5, 9, 3), int8] */
  };
  %694() /* ty=Tensor[(5, 9, 3), int8] */
}

def @func_6416() -> (Tensor[(5, 9, 3), int8],) {
  %695 = @func_3617() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %696 = %695.0;
  (%696,)
}

def @func_5894() -> Tensor[(5, 9, 3), uint8] {
  %697 = fn () -> Tensor[(5, 9, 3), uint8] {
    @func_5489() /* ty=Tensor[(5, 9, 3), uint8] */
  };
  %697() /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_3429(%var_3420: Tensor[(11, 5, 3), uint32]) -> (Tensor[(11, 5, 3), uint32], Tensor[(11, 5, 3), float64]) {
  %698 = cast(meta[relay.Constant][35] /* ty=Tensor[(11, 5, 3), uint32] */, dtype="uint32") /* ty=Tensor[(11, 5, 3), uint32] */;
  %699 = shape_of(%var_3420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %700 = cast(%var_3420, dtype="uint32") /* ty=Tensor[(11, 5, 3), uint32] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %702 = cast(meta[relay.Constant][35] /* ty=Tensor[(11, 5, 3), uint32] */, dtype="float64") /* ty=Tensor[(11, 5, 3), float64] */;
  %703 = add(%700, %701) /* ty=Tensor[(11, 5, 3), uint32] */;
  %704 = asin(%702) /* ty=Tensor[(11, 5, 3), float64] */;
  (%703, %704)
}

def @func_1047(%var_1043: Tensor[(144), int64], %var_1044: float64, %var_1045: Tensor[(168), float64], %var_1046: Tensor[(1560), float32]) -> (Tensor[(5, 9, 3), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64], Tensor[(594), float32], Tensor[(1560), float32], Tensor[(594), float32], Tensor[(12, 6, 2), int64], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), float64]) {
  %738 = fn (%var_987: Tensor[(144), int64], %var_995: float64, %var_996: Tensor[(168), float64], %var_1004: Tensor[(1560), float32]) -> (Tensor[(5, 9, 3), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64], Tensor[(594), float32], Tensor[(1560), float32], Tensor[(594), float32], Tensor[(12, 6, 2), int64], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), float64]) {
    %705 = @func_885() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */;
    %706 = cast(%var_987, dtype="int64") /* ty=Tensor[(144), int64] */;
    %707 = reshape(%706, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), int64] */;
    %708 = cast(%var_995, dtype="float64") /* ty=float64 */;
    %709 = cast(%var_996, dtype="float64") /* ty=Tensor[(168), float64] */;
    %710 = cast(%var_996, dtype="float32") /* ty=Tensor[(168), float32] */;
    %711 = reshape(%708, newshape=[]) /* ty=float64 */;
    %712 = reshape(%709, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float64] */;
    %713 = reshape(%710, newshape=[4, 7, 6]) /* ty=Tensor[(4, 7, 6), float32] */;
    %714 = @func_242(%711, %712, %713) /* ty=(Tensor[(4, 7, 6), float64], Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), int16]) */;
    %715 = cast(%var_995, dtype="float32") /* ty=float32 */;
    %716 = cast(%var_1004, dtype="float32") /* ty=Tensor[(1560), float32] */;
    %717 = cast(meta[relay.Constant][36] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
    %718 = reshape(%715, newshape=[]) /* ty=float32 */;
    %719 = reshape(%716, newshape=[10, 13, 12]) /* ty=Tensor[(10, 13, 12), float32] */;
    %720 = reshape(%717, newshape=[594]) /* ty=Tensor[(594), float32] */;
    %721 = @func_575(%718, %719, %720) /* ty=(Tensor[(10, 13, 12), float32], Tensor[(4, 7, 6), int16], Tensor[(168), float64], Tensor[(4, 7, 6), float64], Tensor[(594), float32]) */;
    %722 = @func_715(%707) /* ty=Tensor[(12, 6, 2), int64] */;
    %723 = cast(%722, dtype="int64") /* ty=Tensor[(12, 6, 2), int64] */;
    %724 = reshape(%723, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), int64] */;
    %725 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
    %726 = cast(%725, dtype="float32") /* ty=Tensor[(5, 9, 3), float32] */;
    %727 = acosh(%726) /* ty=Tensor[(5, 9, 3), float32] */;
    %728 = cast(%727, dtype="float32") /* ty=Tensor[(5, 9, 3), float32] */;
    %729 = cast(%727, dtype="float32") /* ty=Tensor[(5, 9, 3), float32] */;
    %730 = sqrt(%729) /* ty=Tensor[(5, 9, 3), float32] */;
    %731 = cast(%730, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
    %732 = %705.0;
    %733 = %714.1;
    %734 = %721.4;
    %735 = @func_715(%724) /* ty=Tensor[(12, 6, 2), int64] */;
    %736 = tan(%728) /* ty=Tensor[(5, 9, 3), float32] */;
    %737 = log(%731) /* ty=Tensor[(5, 9, 3), float64] */;
    (%732, %722, %var_987, %733, %var_995, %var_996, %734, %var_1004, meta[relay.Constant][36] /* ty=Tensor[(594), float32] */, %735, %736, %737)
  };
  %738(%var_1043, %var_1044, %var_1045, %var_1046) /* ty=(Tensor[(5, 9, 3), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64], Tensor[(594), float32], Tensor[(1560), float32], Tensor[(594), float32], Tensor[(12, 6, 2), int64], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), float64]) */
}

def @func_5490() -> Tensor[(5, 9, 3), uint8] {
  %740 = fn () -> Tensor[(5, 9, 3), uint8] {
    %739 = @func_885() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */;
    %739.1
  };
  %740() /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_5174() -> Tensor[(5, 9, 3), int8] {
  %741 = @func_3927() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) */;
  %741.1
}

def @func_1971() -> (Tensor[(5, 9, 3), int8],) {
  @func_1969() /* ty=(Tensor[(5, 9, 3), int8],) */
}

def @func_6225(%var_6195: Tensor[(15, 11, 2), float64]) -> (Tensor[(15, 11, 2), float64], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), int8]) {
  %742 = cast(%var_6195, dtype="float64") /* ty=Tensor[(15, 11, 2), float64] */;
  %743 = @func_885() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */;
  %744 = rsqrt(%742) /* ty=Tensor[(15, 11, 2), float64] */;
  %745 = %743.0;
  %746 = @func_5398() /* ty=Tensor[(5, 9, 3), int8] */;
  (%744, %745, %746)
}

def @func_2008() -> (Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8]) {
  @func_2006() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8]) */
}

def @func_3873() -> Tensor[(5, 9, 3), int8] {
  %748 = fn () -> Tensor[(5, 9, 3), int8] {
    %747 = @func_1557() /* ty=(Tensor[(5, 9, 3), int8],) */;
    %747.0
  };
  %748() /* ty=Tensor[(5, 9, 3), int8] */
}

def @func_3619() -> (Tensor[(5, 9, 3), int8],) {
  @func_3617() /* ty=(Tensor[(5, 9, 3), int8],) */
}

def @func_622(%var_590: Tensor[(3, 13, 4), float64]) -> (Tensor[(3, 13, 4), bool], Tensor[(594), float32], float32, Tensor[(1560), float32], Tensor[(594), float32]) {
  %749 = cast(%var_590, dtype="float64") /* ty=Tensor[(3, 13, 4), float64] */;
  %750 = acos(%749) /* ty=Tensor[(3, 13, 4), float64] */;
  %751 = cast(%750, dtype="float64") /* ty=Tensor[(3, 13, 4), float64] */;
  %752 = atan(%751) /* ty=Tensor[(3, 13, 4), float64] */;
  %753 = cast(%750, dtype="bool") /* ty=Tensor[(3, 13, 4), bool] */;
  %754 = shape_of(%752, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(%752, dtype="bool") /* ty=Tensor[(3, 13, 4), bool] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %757 = cast(6.90843f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %758 = cast(meta[relay.Constant][37] /* ty=Tensor[(1560), float32] */, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %759 = cast(meta[relay.Constant][38] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %760 = reshape(%757, newshape=[]) /* ty=float32 */;
  %761 = reshape(%758, newshape=[10, 13, 12]) /* ty=Tensor[(10, 13, 12), float32] */;
  %762 = reshape(%759, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %763 = @func_575(%760, %761, %762) /* ty=(Tensor[(10, 13, 12), float32], Tensor[(4, 7, 6), int16], Tensor[(168), float64], Tensor[(4, 7, 6), float64], Tensor[(594), float32]) */;
  %764 = logical_or(%755, %756) /* ty=Tensor[(3, 13, 4), bool] */;
  %765 = %763.4;
  (%764, %765, 6.90843f /* ty=float32 */, meta[relay.Constant][37] /* ty=Tensor[(1560), float32] */, meta[relay.Constant][38] /* ty=Tensor[(594), float32] */)
}

def @func_2600() -> (Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), float32], Tensor[(1560), float32]) {
  %772 = fn () -> (Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), float32], Tensor[(1560), float32]) {
    %766 = @func_2202() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float64], float32, Tensor[(39, 4), float64]) */;
    %767 = cast(meta[relay.Constant][39] /* ty=Tensor[(1560), float32] */, dtype="float32") /* ty=Tensor[(1560), float32] */;
    %768 = reshape(%767, newshape=[1560]) /* ty=Tensor[(1560), float32] */;
    %769 = @func_1746(%768) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float32], Tensor[(594), float32], Tensor[(1560), float32]) */;
    %770 = %766.1;
    %771 = %769.1;
    (%770, %771, meta[relay.Constant][39] /* ty=Tensor[(1560), float32] */)
  };
  %772() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), float32], Tensor[(1560), float32]) */
}

def @func_1259() -> (Tensor[(5, 9, 3), float64],) {
  %773 = @func_885() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */;
  %774 = %773.0;
  (%774,)
}

def @func_2545(%var_2544: Tensor[(5, 9, 3), int8]) -> (Tensor[(5, 9, 3), int16], Tensor[(8, 5, 15), float32], Tensor[(6, 100), float32]) {
  %785 = fn (%var_2523: Tensor[(5, 9, 3), int8]) -> (Tensor[(5, 9, 3), int16], Tensor[(8, 5, 15), float32], Tensor[(6, 100), float32]) {
    %775 = @func_1557() /* ty=(Tensor[(5, 9, 3), int8],) */;
    %776 = %775.0;
    %777 = cast(%var_2523, dtype="int16") /* ty=Tensor[(5, 9, 3), int16] */;
    %778 = shape_of(%776, dtype="int32") /* ty=Tensor[(3), int32] */;
    %779 = cast(%776, dtype="int16") /* ty=Tensor[(5, 9, 3), int16] */;
    %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %781 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 100), float32] */, dtype="float32") /* ty=Tensor[(6, 100), float32] */;
    %782 = reshape(%781, newshape=[8, 5, 15]) /* ty=Tensor[(8, 5, 15), float32] */;
    %783 = minimum(%779, %780) /* ty=Tensor[(5, 9, 3), int16] */;
    %784 = @func_1410(%782) /* ty=Tensor[(8, 5, 15), float32] */;
    (%783, %784, meta[relay.Constant][40] /* ty=Tensor[(6, 100), float32] */)
  };
  %785(%var_2544) /* ty=(Tensor[(5, 9, 3), int16], Tensor[(8, 5, 15), float32], Tensor[(6, 100), float32]) */
}

def @func_6620() -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), int8]) {
  @func_6618() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), int8]) */
}

def @func_2049() -> (Tensor[(5, 9, 3), float64], Tensor[(144), int64], Tensor[(3120), float32]) {
  %786 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %787 = %786.0;
  %788 = cast(%787, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %789 = cast(meta[relay.Constant][41] /* ty=Tensor[(3120), float32] */, dtype="float32") /* ty=Tensor[(3120), float32] */;
  %790 = reshape(%789, newshape=[15, 16, 13]) /* ty=Tensor[(15, 16, 13), float32] */;
  %791 = @func_1821(%790) /* ty=(Tensor[(15, 16, 13), float32], Tensor[(3, 198), float32], Tensor[(144), int64]) */;
  %792 = asin(%788) /* ty=Tensor[(5, 9, 3), float64] */;
  %793 = %791.2;
  (%792, %793, meta[relay.Constant][41] /* ty=Tensor[(3120), float32] */)
}

def @func_6666(%var_6664: Tensor[(6, 11, 5), float64]) -> (Tensor[(5, 9, 3), uint8], Tensor[(6, 11, 5), bool]) {
  @func_6663(%var_6664) /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(6, 11, 5), bool]) */
}

def @func_2812() -> (Tensor[(144), int64],) {
  %796 = fn () -> (Tensor[(144), int64],) {
    %794 = @func_2449() /* ty=(Tensor[(144), int64],) */;
    %795 = %794.0;
    (%795,)
  };
  %796() /* ty=(Tensor[(144), int64],) */
}

def @func_1851() -> (Tensor[(5, 9, 3), int8],) {
  %798 = fn () -> (Tensor[(5, 9, 3), int8],) {
    %797 = @func_1457() /* ty=Tensor[(5, 9, 3), int8] */;
    (%797,)
  };
  %798() /* ty=(Tensor[(5, 9, 3), int8],) */
}

def @func_2679(%var_2677: float64, %var_2678: Tensor[(168), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64]) {
  @func_2675(%var_2677, %var_2678) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64]) */
}

def @func_3866(%var_3864: bool, %var_3865: Tensor[(42, 4), float64]) -> (Tensor[(144), int64], Tensor[(9, 7), bool], bool, float64, Tensor[(42, 4), float64]) {
  %811 = fn (%var_3858: bool, %var_3861: Tensor[(42, 4), float64]) -> (Tensor[(144), int64], Tensor[(9, 7), bool], bool, float64, Tensor[(42, 4), float64]) {
    %799 = @func_2811() /* ty=(Tensor[(144), int64],) */;
    %800 = cast(%var_3858, dtype="bool") /* ty=bool */;
    %801 = reshape(%800, newshape=[]) /* ty=bool */;
    %802 = @func_2793(%801) /* ty=(Tensor[(9, 7), bool], Tensor[(5, 9, 3), int8]) */;
    %803 = cast(%var_3858, dtype="float64") /* ty=float64 */;
    %804 = cast(%var_3861, dtype="float64") /* ty=Tensor[(42, 4), float64] */;
    %805 = reshape(%803, newshape=[]) /* ty=float64 */;
    %806 = reshape(%804, newshape=[168]) /* ty=Tensor[(168), float64] */;
    %807 = @func_2675(%805, %806) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64]) */;
    %808 = %799.0;
    %809 = %802.0;
    %810 = %807.3;
    (%808, %809, %var_3858, %810, %var_3861)
  };
  %811(%var_3864, %var_3865) /* ty=(Tensor[(144), int64], Tensor[(9, 7), bool], bool, float64, Tensor[(42, 4), float64]) */
}

def @func_776() -> Tensor[(5, 9, 3), uint8] {
  %823 = fn () -> Tensor[(5, 9, 3), uint8] {
    %812 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 9, 3), float32] */, dtype="float32") /* ty=Tensor[(5, 9, 3), float32] */;
    %813 = rsqrt(%812) /* ty=Tensor[(5, 9, 3), float32] */;
    %814 = cast(meta[relay.Constant][43] /* ty=Tensor[(5, 9, 3), float32] */, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
    %815 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(5, 9, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %816 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 9, 3), float32] */, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
    %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %818 = bitwise_and(%816, %817) /* ty=Tensor[(5, 9, 3), uint8] */;
    %819 = cast(%818, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
    %820 = shape_of(%813, dtype="int32") /* ty=Tensor[(3), int32] */;
    %821 = cast(%813, dtype="uint8") /* ty=Tensor[(5, 9, 3), uint8] */;
    %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    multiply(%821, %822) /* ty=Tensor[(5, 9, 3), uint8] */
  };
  %823() /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_4615(%var_4613: Tensor[(6, 6, 10), int16], %var_4614: Tensor[(1, 6, 10), int16]) -> (Tensor[(6, 6, 10), int16], Tensor[(?, 6, 10), bool]) {
  @func_4611(%var_4613, %var_4614) /* ty=(Tensor[(6, 6, 10), int16], Tensor[(?, 6, 10), bool]) */
}

def @func_3494(%var_3493: Tensor[(3, 52), float64]) -> (Tensor[(5, 9, 3), uint8], Tensor[(594), float32], Tensor[(5, 9, 3), uint8], Tensor[(910), float64], Tensor[(3, 52), int8]) {
  %840 = fn (%var_3481: Tensor[(3, 52), float64]) -> (Tensor[(5, 9, 3), uint8], Tensor[(594), float32], Tensor[(5, 9, 3), uint8], Tensor[(910), float64], Tensor[(3, 52), int8]) {
    %824 = cast(meta[relay.Constant][44] /* ty=Tensor[(3, 52), float64] */, dtype="float64") /* ty=Tensor[(3, 52), float64] */;
    %825 = reshape(%824, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), float64] */;
    %826 = @func_622(%825) /* ty=(Tensor[(3, 13, 4), bool], Tensor[(594), float32], float32, Tensor[(1560), float32], Tensor[(594), float32]) */;
    %827 = cast(meta[relay.Constant][45] /* ty=Tensor[(910), float64] */, dtype="float64") /* ty=Tensor[(910), float64] */;
    %828 = reshape(%827, newshape=[10, 7, 13]) /* ty=Tensor[(10, 7, 13), float64] */;
    %829 = @func_2282(%828) /* ty=(Tensor[(10, 7, 13), float64], Tensor[(5, 9, 3), uint8]) */;
    %830 = cast(meta[relay.Constant][44] /* ty=Tensor[(3, 52), float64] */, dtype="float64") /* ty=Tensor[(3, 52), float64] */;
    %831 = atanh(%830) /* ty=Tensor[(3, 52), float64] */;
    %832 = cast(%var_3481, dtype="int8") /* ty=Tensor[(3, 52), int8] */;
    %833 = shape_of(%831, dtype="int32") /* ty=Tensor[(2), int32] */;
    %834 = cast(%831, dtype="int8") /* ty=Tensor[(3, 52), int8] */;
    %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %836 = @func_2874() /* ty=Tensor[(5, 9, 3), uint8] */;
    %837 = %826.1;
    %838 = %829.1;
    %839 = bitwise_xor(%834, %835) /* ty=Tensor[(3, 52), int8] */;
    (%836, %837, %838, meta[relay.Constant][45] /* ty=Tensor[(910), float64] */, %839)
  };
  %840(%var_3493) /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(594), float32], Tensor[(5, 9, 3), uint8], Tensor[(910), float64], Tensor[(3, 52), int8]) */
}

def @func_2096() -> (Tensor[(5, 9, 3), uint8],) {
  @func_2094() /* ty=(Tensor[(5, 9, 3), uint8],) */
}

def @func_2350(%var_2347: Tensor[(9, 12, 9), int16], %var_2348: Tensor[(9, 12, 9), int16], %var_2349: Tensor[(156), float64]) -> (Tensor[(9, 12, 9), int16], Tensor[(1560), float32], Tensor[(156), float32]) {
  @func_2345(%var_2347, %var_2348, %var_2349) /* ty=(Tensor[(9, 12, 9), int16], Tensor[(1560), float32], Tensor[(156), float32]) */
}

def @func_1261() -> (Tensor[(5, 9, 3), float64],) {
  @func_1259() /* ty=(Tensor[(5, 9, 3), float64],) */
}

def @func_4368() -> Tensor[(5, 9, 3), uint8] {
  %842 = fn () -> Tensor[(5, 9, 3), uint8] {
    %841 = @func_1346() /* ty=(Tensor[(5, 9, 3), uint8],) */;
    %841.0
  };
  %842() /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_1482(%var_1480: Tensor[(5, 9, 3), uint8]) -> (Tensor[(5, 9, 3), float64],) {
  @func_1479(%var_1480) /* ty=(Tensor[(5, 9, 3), float64],) */
}

def @func_6559() -> Tensor[(5, 9, 3), uint8] {
  %844 = fn () -> Tensor[(5, 9, 3), uint8] {
    %843 = @func_2094() /* ty=(Tensor[(5, 9, 3), uint8],) */;
    %843.0
  };
  %844() /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_1105() -> Tensor[(5, 9, 3), uint64] {
  @func_1103() /* ty=Tensor[(5, 9, 3), uint64] */
}

def @func_2203() -> (Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float64], float32, Tensor[(39, 4), float64]) {
  %852 = fn () -> (Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float64], float32, Tensor[(39, 4), float64]) {
    %845 = @func_1259() /* ty=(Tensor[(5, 9, 3), float64],) */;
    %846 = cast(meta[relay.Constant][46] /* ty=Tensor[(39, 4), float64] */, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
    %847 = reshape(%846, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), float64] */;
    %848 = @func_622(%847) /* ty=(Tensor[(3, 13, 4), bool], Tensor[(594), float32], float32, Tensor[(1560), float32], Tensor[(594), float32]) */;
    %849 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
    %850 = %845.0;
    %851 = %848.2;
    (%849, %850, %851, meta[relay.Constant][46] /* ty=Tensor[(39, 4), float64] */)
  };
  %852() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float64], float32, Tensor[(39, 4), float64]) */
}

def @func_3158(%var_3156: Tensor[(156, 1), float64]) -> (Tensor[(5, 9, 3), uint8], Tensor[(39, 4), float64], Tensor[(156, 1), float64], Tensor[(5, 9, 3), uint64]) {
  @func_3155(%var_3156) /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(39, 4), float64], Tensor[(156, 1), float64], Tensor[(5, 9, 3), uint64]) */
}

def @func_5139(%var_5115: float64) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(144), int64], Tensor[(168), float64], float64, Tensor[(168), float64]) {
  %853 = @func_1850() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %854 = @func_1935() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) */;
  %855 = @func_3821() /* ty=(Tensor[(1560), float32], Tensor[(144), int64], Tensor[(5, 9, 3), uint8]) */;
  %856 = cast(%var_5115, dtype="float64") /* ty=float64 */;
  %857 = cast(meta[relay.Constant][47] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %858 = reshape(%856, newshape=[]) /* ty=float64 */;
  %859 = reshape(%857, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %860 = @func_2675(%858, %859) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint64], Tensor[(4, 7, 6), float32], float64, Tensor[(168), float64]) */;
  %861 = %853.0;
  %862 = %854.3;
  %863 = %855.1;
  %864 = %860.4;
  (%861, %862, %863, %864, %var_5115, meta[relay.Constant][47] /* ty=Tensor[(168), float64] */)
}

def @func_1776(%var_1771: Tensor[(1320), int64], %var_1772: Tensor[(594), float32]) -> (Tensor[(5, 9, 3), uint8], Tensor[(6, 99), float32], Tensor[(1320), int64], Tensor[(594), float32]) {
  %865 = @func_885() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */;
  %866 = cast(%var_1771, dtype="int64") /* ty=Tensor[(1320), int64] */;
  %867 = cast(%var_1771, dtype="int64") /* ty=Tensor[(1320), int64] */;
  %868 = cast(%var_1772, dtype="float32") /* ty=Tensor[(594), float32] */;
  %869 = reshape(%866, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
  %870 = reshape(%867, newshape=[15, 8, 11]) /* ty=Tensor[(15, 8, 11), int64] */;
  %871 = reshape(%868, newshape=[6, 99]) /* ty=Tensor[(6, 99), float32] */;
  %872 = @func_1288(%869, %870, %871) /* ty=(Tensor[(15, 8, 11), int64], Tensor[(15, 8, 11), float32], Tensor[(15, 8, 11), float32], Tensor[(1560, 1), float32], Tensor[(6, 99), float32], Tensor[(135), uint8], Tensor[(1560), float32]) */;
  %873 = %865.1;
  %874 = %872.4;
  (%873, %874, %var_1771, %var_1772)
}

def @func_3591() -> Tensor[(5, 9, 3), int8] {
  %875 = @func_1557() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %875.0
}

def @func_2876() -> Tensor[(5, 9, 3), uint8] {
  @func_2874() /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_3773(%var_3770: Tensor[(16, 9, 14), uint32], %var_3771: Tensor[(594), float32], %var_3772: Tensor[(135), uint8]) -> (Tensor[(16, 9, 14), bool], Tensor[(1320), int64], Tensor[(594), float32], Tensor[(135), uint64]) {
  @func_3768(%var_3770, %var_3771, %var_3772) /* ty=(Tensor[(16, 9, 14), bool], Tensor[(1320), int64], Tensor[(594), float32], Tensor[(135), uint64]) */
}

def @func_4790(%var_4760: Tensor[(156), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8], Tensor[(156), float64]) {
  %876 = @func_4699() /* ty=(Tensor[(5, 9, 3), int8],) */;
  %877 = cast(%var_4760, dtype="float64") /* ty=Tensor[(156), float64] */;
  %878 = reshape(%877, newshape=[39, 4]) /* ty=Tensor[(39, 4), float64] */;
  %879 = @func_2493(%878) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(39, 4), float64]) */;
  %880 = %876.0;
  %881 = %879.0;
  (%880, %881, %var_4760)
}

def @func_1937() -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) {
  @func_1935() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) */
}

def @func_1239() -> (Tensor[(5, 9, 3), int8],) {
  %891 = fn () -> (Tensor[(5, 9, 3), int8],) {
    %882 = @func_885() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */;
    %883 = %882.1;
    %884 = @func_885() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint8]) */;
    %885 = %884.1;
    %886 = cast(%885, dtype="int8") /* ty=Tensor[(5, 9, 3), int8] */;
    %887 = shape_of(%883, dtype="int32") /* ty=Tensor[(3), int32] */;
    %888 = cast(%883, dtype="int8") /* ty=Tensor[(5, 9, 3), int8] */;
    %889 = dyn.reshape(%886, %887, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %890 = right_shift(%888, %889) /* ty=Tensor[(5, 9, 3), int8] */;
    (%890,)
  };
  %891() /* ty=(Tensor[(5, 9, 3), int8],) */
}

def @func_1823(%var_1822: Tensor[(15, 16, 13), float32]) -> (Tensor[(15, 16, 13), float32], Tensor[(3, 198), float32], Tensor[(144), int64]) {
  %898 = fn (%var_1782: Tensor[(15, 16, 13), float32]) -> (Tensor[(15, 16, 13), float32], Tensor[(3, 198), float32], Tensor[(144), int64]) {
    %892 = cast(%var_1782, dtype="float32") /* ty=Tensor[(15, 16, 13), float32] */;
    %893 = cast(meta[relay.Constant][48] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
    %894 = reshape(%893, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %895 = @func_1640(%894) /* ty=(Tensor[(5, 9, 3), float64], Tensor[(15, 8, 11), float32], Tensor[(1320), int64], Tensor[(3, 198), float32], Tensor[(5, 9, 3), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64]) */;
    %896 = atanh(%892) /* ty=Tensor[(15, 16, 13), float32] */;
    %897 = %895.3;
    (%896, %897, meta[relay.Constant][48] /* ty=Tensor[(144), int64] */)
  };
  %898(%var_1822) /* ty=(Tensor[(15, 16, 13), float32], Tensor[(3, 198), float32], Tensor[(144), int64]) */
}

def @func_2874() -> Tensor[(5, 9, 3), uint8] {
  @func_775() /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_4337(%var_4336: Tensor[(6, 14, 3), float64]) -> (Tensor[(6, 14, 3), float64],) {
  %901 = fn (%var_4332: Tensor[(6, 14, 3), float64]) -> (Tensor[(6, 14, 3), float64],) {
    %899 = cast(%var_4332, dtype="float64") /* ty=Tensor[(6, 14, 3), float64] */;
    %900 = sqrt(%899) /* ty=Tensor[(6, 14, 3), float64] */;
    (%900,)
  };
  %901(%var_4336) /* ty=(Tensor[(6, 14, 3), float64],) */
}

def @func_6228(%var_6226: Tensor[(15, 11, 2), float64]) -> (Tensor[(15, 11, 2), float64], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), int8]) {
  @func_6225(%var_6226) /* ty=(Tensor[(15, 11, 2), float64], Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), int8]) */
}

def @func_2051() -> (Tensor[(5, 9, 3), float64], Tensor[(144), int64], Tensor[(3120), float32]) {
  @func_2049() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(144), int64], Tensor[(3120), float32]) */
}

def @func_3730() -> (Tensor[(5, 9, 3), int8],) {
  @func_3728() /* ty=(Tensor[(5, 9, 3), int8],) */
}

def @func_5770() -> (float32, Tensor[(5, 9, 3), uint64]) {
  %906 = fn () -> (float32, Tensor[(5, 9, 3), uint64]) {
    %902 = @func_2202() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float64], float32, Tensor[(39, 4), float64]) */;
    %903 = @func_5752() /* ty=(Tensor[(5, 9, 3), uint64],) */;
    %904 = %902.2;
    %905 = %903.0;
    (%904, %905)
  };
  %906() /* ty=(float32, Tensor[(5, 9, 3), uint64]) */
}

def @func_5857() -> Tensor[(5, 9, 3), uint8] {
  @func_2874() /* ty=Tensor[(5, 9, 3), uint8] */
}

def @func_4639() -> (Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint64], Tensor[(156), float64]) {
  %907 = @func_775() /* ty=Tensor[(5, 9, 3), uint8] */;
  %908 = cast(%907, dtype="float64") /* ty=Tensor[(5, 9, 3), float64] */;
  %909 = cast(meta[relay.Constant][49] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %910 = reshape(%909, newshape=[156, 1]) /* ty=Tensor[(156, 1), float64] */;
  %911 = @func_3155(%910) /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(39, 4), float64], Tensor[(156, 1), float64], Tensor[(5, 9, 3), uint64]) */;
  %912 = atan(%908) /* ty=Tensor[(5, 9, 3), float64] */;
  %913 = %911.3;
  (%912, %913, meta[relay.Constant][49] /* ty=Tensor[(156), float64] */)
}

def @func_6332(%var_6330: Tensor[(5, 9, 9), float32]) -> Tensor[(5, 9, 9), float32] {
  @func_6329(%var_6330) /* ty=Tensor[(5, 9, 9), float32] */
}

def @func_6475() -> (Tensor[(5, 9, 3), int8],) {
  @func_6473() /* ty=(Tensor[(5, 9, 3), int8],) */
}

def @func_6517() -> (Tensor[(5, 9, 3), uint8],) {
  @func_6515() /* ty=(Tensor[(5, 9, 3), uint8],) */
}

def @func_3821() -> (Tensor[(1560), float32], Tensor[(144), int64], Tensor[(5, 9, 3), uint8]) {
  %914 = @func_2599() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), float32], Tensor[(1560), float32]) */;
  %915 = @func_2449() /* ty=(Tensor[(144), int64],) */;
  %916 = @func_2006() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), int8]) */;
  %917 = %914.2;
  %918 = %915.0;
  %919 = %916.0;
  (%917, %918, %919)
}

def @func_5586(%var_5585: Tensor[(2, 72), int64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float64], Tensor[(2, 72), int64]) {
  %926 = fn (%var_5577: Tensor[(2, 72), int64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float64], Tensor[(2, 72), int64]) {
    %920 = @func_3927() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8]) */;
    %921 = cast(%var_5577, dtype="int64") /* ty=Tensor[(2, 72), int64] */;
    %922 = reshape(%921, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %923 = @func_1640(%922) /* ty=(Tensor[(5, 9, 3), float64], Tensor[(15, 8, 11), float32], Tensor[(1320), int64], Tensor[(3, 198), float32], Tensor[(5, 9, 3), float64], Tensor[(12, 6, 2), int64], Tensor[(144), int64]) */;
    %924 = %920.1;
    %925 = %923.4;
    (%924, %925, %var_5577)
  };
  %926(%var_5585) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), float64], Tensor[(2, 72), int64]) */
}

def @func_4700() -> (Tensor[(5, 9, 3), int8],) {
  %928 = fn () -> (Tensor[(5, 9, 3), int8],) {
    %927 = @func_3783() /* ty=Tensor[(5, 9, 3), int8] */;
    (%927,)
  };
  %928() /* ty=(Tensor[(5, 9, 3), int8],) */
}

def @func_2495(%var_2494: Tensor[(39, 4), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(39, 4), float64]) {
  %950 = fn (%var_2458: Tensor[(39, 4), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(39, 4), float64]) {
    %929 = @func_1969() /* ty=(Tensor[(5, 9, 3), int8],) */;
    %930 = @func_2202() /* ty=(Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float64], float32, Tensor[(39, 4), float64]) */;
    %931 = %930.3;
    %932 = cast(%var_2458, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
    %933 = shape_of(%931, dtype="int32") /* ty=Tensor[(2), int32] */;
    %934 = cast(%931, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
    %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %936 = floor_mod(%934, %935) /* ty=Tensor[(39, 4), float64] */;
    %937 = cast(%931, dtype="int64") /* ty=Tensor[(39, 4), int64] */;
    %938 = shape_of(%936, dtype="int32") /* ty=Tensor[(2), int32] */;
    %939 = cast(%936, dtype="int64") /* ty=Tensor[(39, 4), int64] */;
    %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %941 = left_shift(%939, %940) /* ty=Tensor[(39, 4), int64] */;
    %942 = cast(%941, dtype="uint16") /* ty=Tensor[(39, 4), uint16] */;
    %943 = shape_of(%931, dtype="int32") /* ty=Tensor[(2), int32] */;
    %944 = cast(%931, dtype="uint16") /* ty=Tensor[(39, 4), uint16] */;
    %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %946 = logical_xor(%944, %945) /* ty=Tensor[(39, 4), uint16] */;
    %947 = cast(%946, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
    %948 = %929.0;
    %949 = sinh(%947) /* ty=Tensor[(39, 4), float64] */;
    (%948, %949)
  };
  %950(%var_2494) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(39, 4), float64]) */
}

def @func_5611(%var_5609: Tensor[(7, 11, 8), uint8], %var_5610: Tensor[(7, 11, 8), uint8]) -> (Tensor[(7, 11, 8), bool], Tensor[(5, 9, 3), int8]) {
  %957 = fn (%var_5588: Tensor[(7, 11, 8), uint8], %var_5589: Tensor[(7, 11, 8), uint8]) -> (Tensor[(7, 11, 8), bool], Tensor[(5, 9, 3), int8]) {
    %951 = cast(%var_5589, dtype="bool") /* ty=Tensor[(7, 11, 8), bool] */;
    %952 = shape_of(%var_5588, dtype="int32") /* ty=Tensor[(3), int32] */;
    %953 = cast(%var_5588, dtype="bool") /* ty=Tensor[(7, 11, 8), bool] */;
    %954 = dyn.reshape(%951, %952, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %955 = greater_equal(%953, %954) /* ty=Tensor[(7, 11, 8), bool] */;
    %956 = @func_5452() /* ty=Tensor[(5, 9, 3), int8] */;
    (%955, %956)
  };
  %957(%var_5609, %var_5610) /* ty=(Tensor[(7, 11, 8), bool], Tensor[(5, 9, 3), int8]) */
}

def @func_4793(%var_4791: Tensor[(156), float64]) -> (Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8], Tensor[(156), float64]) {
  @func_4790(%var_4791) /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), int8], Tensor[(156), float64]) */
}

def @func_5083() -> (Tensor[(5, 9, 3), uint8],) {
  %960 = fn () -> (Tensor[(5, 9, 3), uint8],) {
    %958 = @func_1935() /* ty=(Tensor[(5, 9, 3), int8], Tensor[(5, 9, 3), uint8], Tensor[(5, 9, 3), float32], Tensor[(5, 9, 3), uint64]) */;
    %959 = %958.1;
    (%959,)
  };
  %960() /* ty=(Tensor[(5, 9, 3), uint8],) */
}

def @func_4641() -> (Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint64], Tensor[(156), float64]) {
  @func_4639() /* ty=(Tensor[(5, 9, 3), float64], Tensor[(5, 9, 3), uint64], Tensor[(156), float64]) */
}

def @func_6515() -> (Tensor[(5, 9, 3), uint8],) {
  %961 = @func_2982() /* ty=(Tensor[(5, 9, 3), uint8],) */;
  %962 = %961.0;
  (%962,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen178/build/output.py:2363: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen178/build/output.py:2368: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen178/build/output.py:2382: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen178/build/output.py:2387: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen178/build/output.py:2392: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen178/build/output.py:2397: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='cuda')

===================================
#[version = "0.0.5"]
def @main() -> (Tensor[(4, 9), float64],) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 9), float64] */, dtype="float64") /* GeneratedSource */ /* ty=Tensor[(4, 9), float64] */;
  %1 = cosh(%0) /* GeneratedSource */ /* ty=Tensor[(4, 9), float64] */;
  (%1,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */

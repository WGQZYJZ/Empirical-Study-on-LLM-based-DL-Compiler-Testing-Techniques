==========mod==========
#[version = "0.0.5"]
def @func_6485() -> (Tensor[(2025), float32], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) {
  %0 = @func_2108() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1 = @func_5970() /* ty=Tensor[(2025), float32] */;
  %2 = @func_1790() /* ty=Tensor[(16, 4, 7), float32] */;
  %3 = %0.0;
  (%1, %2, %3)
}

def @func_6076() -> (Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool]) {
  %4 = @func_5486() /* ty=(Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(15, 9, 15), float32]) */;
  %5 = %4.2;
  %6 = cast(%5, dtype="float32") /* ty=Tensor[(15, 9, 15), float32] */;
  %7 = reshape(%6, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), float32] */;
  %8 = @func_5632(%7) /* ty=(Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float64], Tensor[(2025), float64]) */;
  %9 = %8.0;
  (%5, %9)
}

def @func_18472() -> Tensor[(2025), float64] {
  @func_2029() /* ty=Tensor[(2025), float64] */
}

def @func_13589() -> Tensor[(10, 9, 11), float64] {
  @func_7173() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_5937() -> (Tensor[(10, 9, 11), float64], Tensor[(1, 7, 9), uint64], uint64, Tensor[(63), uint64], Tensor[(2025), float64]) {
  %10 = cast(meta[relay.Constant][0] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %11 = cast(meta[relay.Constant][1] /* ty=Tensor[(63), uint64] */, dtype="uint64") /* ty=Tensor[(63), uint64] */;
  %12 = reshape(%10, newshape=[]) /* ty=uint64 */;
  %13 = reshape(%11, newshape=[1, 7, 9]) /* ty=Tensor[(1, 7, 9), uint64] */;
  %14 = @func_5407(%12, %13) /* ty=(Tensor[(1, 7, 9), uint64],) */;
  %15 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
  %16 = @func_1439() /* ty=Tensor[(10, 9, 11), float64] */;
  %17 = %14.0;
  %18 = %15.0;
  (%16, %17, meta[relay.Constant][0] /* ty=uint64 */, meta[relay.Constant][1] /* ty=Tensor[(63), uint64] */, %18)
}

def @func_11129() -> Tensor[(10, 9, 11), uint32] {
  %19 = @func_10034() /* ty=(Tensor[(10, 9, 11), uint32],) */;
  %19.0
}

def @func_13967(%var_13962: Tensor[(4, 12, 16), int8], %var_13963: Tensor[(4, 12, 16), int8]) -> Tensor[(4, 12, 16), int8] {
  %20 = cast(%var_13963, dtype="int8") /* ty=Tensor[(4, 12, 16), int8] */;
  %21 = shape_of(%var_13962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %22 = cast(%var_13962, dtype="int8") /* ty=Tensor[(4, 12, 16), int8] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  logical_xor(%22, %23) /* ty=Tensor[(4, 12, 16), int8] */
}

def @func_12834() -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  %24 = @func_3511() /* ty=(Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) */;
  %25 = @func_11951() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */;
  %26 = @func_7857() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %27 = %24.2;
  %28 = @func_6672() /* ty=Tensor[(10, 9, 11), float64] */;
  %29 = %25.0;
  %30 = %26.0;
  (%27, %28, %29, %30)
}

def @func_9233() -> Tensor[(2025), float64] {
  %31 = @func_7408() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), float64]) */;
  %31.1
}

def @func_14227(%var_14216: Tensor[(675, 3), bool]) -> (Tensor[(10, 9, 11), float64], Tensor[(675, 3), bool]) {
  %32 = cast(%var_14216, dtype="bool") /* ty=Tensor[(675, 3), bool] */;
  %33 = reshape(%32, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), bool] */;
  %34 = @func_6973(%33) /* ty=Tensor[(15, 9, 15), uint16] */;
  %35 = cast(%34, dtype="bool") /* ty=Tensor[(15, 9, 15), bool] */;
  %36 = shape_of(%var_14216, dtype="int32") /* ty=Tensor[(2), int32] */;
  %37 = cast(%var_14216, dtype="bool") /* ty=Tensor[(675, 3), bool] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %39 = @func_7173() /* ty=Tensor[(10, 9, 11), float64] */;
  %40 = equal(%37, %38) /* ty=Tensor[(675, 3), bool] */;
  (%39, %40)
}

def @func_16325() -> (Tensor[(10, 9, 11), float64], Tensor[(88), float64]) {
  %41 = @func_13083() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(88), float64]) */;
  %42 = @func_1827() /* ty=Tensor[(10, 9, 11), float64] */;
  %43 = %41.1;
  (%42, %43)
}

def @func_19362() -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) {
  %44 = @func_6657() /* ty=(Tensor[(2025), float64], Tensor[(2025), int64], Tensor[(16, 4, 7), float32]) */;
  %45 = %44.2;
  %46 = @func_10154() /* ty=Tensor[(10, 9, 11), float64] */;
  (%45, %46)
}

def @func_19573() -> (Tensor[(3, 5, 9), float64], Tensor[(2025), float64]) {
  %47 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 5, 9), float64] */, dtype="float64") /* ty=Tensor[(3, 5, 9), float64] */;
  %48 = @func_8178() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */;
  %49 = erf(%47) /* ty=Tensor[(3, 5, 9), float64] */;
  %50 = %48.0;
  (%49, %50)
}

def @func_14476() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) {
  %51 = @func_4327() /* ty=(Tensor[(2025), float64],) */;
  %52 = @func_7857() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %53 = @func_10110() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %54 = @func_13083() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(88), float64]) */;
  %55 = %51.0;
  %56 = %52.0;
  %57 = %53.1;
  %58 = %54.0;
  %59 = @func_2029() /* ty=Tensor[(2025), float64] */;
  (%55, %56, %57, %58, %59)
}

def @func_22015() -> (Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), uint32]) {
  %60 = @func_18873() /* ty=(Tensor[(10, 9, 11), uint32],) */;
  %61 = @func_18738() /* ty=(Tensor[(10, 9, 11), uint32],) */;
  %62 = %60.0;
  %63 = %61.0;
  (%62, %63)
}

def @func_10811() -> Tensor[(7, 9, 10), float32] {
  %64 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 9, 10), float32] */, dtype="float32") /* ty=Tensor[(7, 9, 10), float32] */;
  atan(%64) /* ty=Tensor[(7, 9, 10), float32] */
}

def @func_23238() -> (Tensor[(2025), float64],) {
  %65 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %66 = %65.0;
  (%66,)
}

def @func_14159() -> (Tensor[(10, 9, 11), float32],) {
  %67 = @func_14024() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) */;
  %68 = %67.0;
  (%68,)
}

def @func_11351() -> (Tensor[(2025), float64],) {
  %69 = @func_8697() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */;
  %70 = %69.1;
  (%70,)
}

def @main(%var_24158: Tensor[(1, 2025), bool]) -> (Tensor[(10, 9, 11), float64], Tensor[(990), uint32], Tensor[(15, 9, 15), float64], Tensor[(2025), float64], Tensor[(?, 2025), int16], Tensor[(1, 2025), float32]) {
  %71 = @func_9290() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64]) */;
  %72 = @func_23503() /* ty=(Tensor[(990), uint32],) */;
  %73 = cast(%var_24158, dtype="bool") /* ty=Tensor[(1, 2025), bool] */;
  %74 = reshape(%73, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), bool] */;
  %75 = @func_12683(%74) /* ty=(Tensor[(15, 9, 15), float64], Tensor[(2025), float64]) */;
  %76 = cast(%var_24158, dtype="float32") /* ty=Tensor[(1, 2025), float32] */;
  %77 = atan(%76) /* ty=Tensor[(1, 2025), float32] */;
  %78 = cast(%var_24158, dtype="int16") /* ty=Tensor[(1, 2025), int16] */;
  %79 = shape_of(%77, dtype="int32") /* ty=Tensor[(2), int32] */;
  %80 = cast(%77, dtype="int16") /* ty=Tensor[(1, 2025), int16] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %82 = cast(%var_24158, dtype="float32") /* ty=Tensor[(1, 2025), float32] */;
  %83 = %71.1;
  %84 = %72.0;
  %85 = %75.0;
  %86 = @func_13236() /* ty=Tensor[(2025), float64] */;
  %87 = right_shift(%80, %81) /* ty=Tensor[(?, 2025), int16] */;
  %88 = sigmoid(%82) /* ty=Tensor[(1, 2025), float32] */;
  (%83, %84, %85, %86, %87, %88)
}

def @func_17635() -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) {
  %89 = @func_6076() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool]) */;
  %90 = @func_16725() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */;
  %91 = %89.0;
  %92 = @func_7872() /* ty=Tensor[(10, 9, 11), float64] */;
  %93 = %90.0;
  (%91, %92, %93)
}

def @func_949() -> (Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) {
  %94 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 9, 1), uint32] */, dtype="uint32") /* ty=Tensor[(10, 9, 1), uint32] */;
  %95 = cast(meta[relay.Constant][5] /* ty=Tensor[(10, 9, 11), uint32] */, dtype="uint32") /* ty=Tensor[(10, 9, 11), uint32] */;
  %96 = cast(meta[relay.Constant][5] /* ty=Tensor[(10, 9, 11), uint32] */, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
  %97 = sqrt(%96) /* ty=Tensor[(10, 9, 11), float32] */;
  %98 = cast(%97, dtype="float64") /* ty=Tensor[(10, 9, 11), float64] */;
  %99 = cast(meta[relay.Constant][6] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %100 = reshape(%99, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), float32] */;
  %101 = @func_139(%100) /* ty=(Tensor[(15, 9, 15), float32],) */;
  %102 = bitwise_and(%94, %95) /* ty=Tensor[(10, 9, 11), uint32] */;
  %103 = exp(%98) /* ty=Tensor[(10, 9, 11), float64] */;
  %104 = %101.0;
  (%102, %103, %104, meta[relay.Constant][6] /* ty=Tensor[(2025), float32] */)
}

def @func_19523() -> (Tensor[(2025), int8], Tensor[(2025), float64]) {
  %105 = @func_9850() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), int8]) */;
  %106 = %105.3;
  %107 = @func_16871() /* ty=Tensor[(2025), float64] */;
  (%106, %107)
}

def @func_12683(%var_12665: Tensor[(15, 9, 15), bool]) -> (Tensor[(15, 9, 15), float64], Tensor[(2025), float64]) {
  %108 = @func_11788() /* ty=(Tensor[(15, 9, 15), bool],) */;
  %109 = %108.0;
  %110 = cast(%var_12665, dtype="float64") /* ty=Tensor[(15, 9, 15), float64] */;
  %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%109, dtype="float64") /* ty=Tensor[(15, 9, 15), float64] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %114 = @func_5392() /* ty=(Tensor[(2025), float64],) */;
  %115 = mod(%112, %113) /* ty=Tensor[(15, 9, 15), float64] */;
  %116 = %114.0;
  (%115, %116)
}

def @func_9100() -> (Tensor[(2025), float64],) {
  %117 = @func_4466() /* ty=Tensor[(2025), float64] */;
  (%117,)
}

def @func_19413(%var_19387: bool, %var_19388: Tensor[(2, 9, 7), bool]) -> (Tensor[(2, 9, 7), bool], Tensor[(16, 4, 7), float32]) {
  %118 = cast(%var_19387, dtype="bool") /* ty=bool */;
  %119 = cast(%var_19388, dtype="bool") /* ty=Tensor[(2, 9, 7), bool] */;
  %120 = logical_and(%118, %119) /* ty=Tensor[(2, 9, 7), bool] */;
  %121 = @func_16195() /* ty=Tensor[(16, 4, 7), float32] */;
  (%120, %121)
}

def @func_16725() -> (Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) {
  %122 = @func_3116() /* ty=(Tensor[(15, 9, 15), float32],) */;
  %123 = @func_7978() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(8, 78), float32]) */;
  %124 = %122.0;
  %125 = %123.1;
  (%124, %125)
}

def @func_3888() -> Tensor[(10, 9, 11), float32] {
  %126 = @func_1535() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(990), uint32]) */;
  %126.1
}

def @func_15710() -> Tensor[(15, 9, 15), float32] {
  %127 = @func_14328() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */;
  %127.0
}

def @func_23112() -> (Tensor[(16, 4, 7), float32],) {
  %128 = @func_10357() /* ty=Tensor[(16, 4, 7), float32] */;
  (%128,)
}

def @func_15274() -> Tensor[(2025), int8] {
  %129 = @func_10566() /* ty=(Tensor[(2025), int8],) */;
  %129.0
}

def @func_23435() -> (Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32]) {
  %130 = @func_17695() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(990), uint32]) */;
  %131 = @func_18426() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) */;
  %132 = %130.0;
  %133 = %131.3;
  %134 = @func_7914() /* ty=Tensor[(16, 4, 7), float32] */;
  %135 = @func_1790() /* ty=Tensor[(16, 4, 7), float32] */;
  (%132, %133, %134, %135)
}

def @func_13236() -> Tensor[(2025), float64] {
  %136 = @func_11504() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(3, 9, 2), float64]) */;
  %136.0
}

def @func_15528(%var_15522: Tensor[(2, 8, 7), float64]) -> Tensor[(2, 8, 7), float64] {
  %137 = cast(%var_15522, dtype="float64") /* ty=Tensor[(2, 8, 7), float64] */;
  erf(%137) /* ty=Tensor[(2, 8, 7), float64] */
}

def @func_23312() -> Tensor[(2025), bool] {
  %138 = @func_8928() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(2025), float64]) */;
  %138.1
}

def @func_6859(%var_6810: Tensor[(12, 4, 13), float64]) -> (Tensor[(12, 4, 13), float64], Tensor[(2025), float64], Tensor[(208), float32], Tensor[(88), float64]) {
  %139 = cast(%var_6810, dtype="float64") /* ty=Tensor[(12, 4, 13), float64] */;
  %140 = cast(meta[relay.Constant][7] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %141 = cast(meta[relay.Constant][7] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %142 = cast(meta[relay.Constant][8] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %143 = reshape(%140, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
  %144 = reshape(%141, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
  %145 = reshape(%142, newshape=[88]) /* ty=Tensor[(88), float64] */;
  %146 = @func_5008(%143, %144, %145) /* ty=(Tensor[(8, 13, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(88), float64], Tensor[(2025), float64], Tensor[(396), float32]) */;
  %147 = asinh(%139) /* ty=Tensor[(12, 4, 13), float64] */;
  %148 = %146.4;
  (%147, %148, meta[relay.Constant][7] /* ty=Tensor[(208), float32] */, meta[relay.Constant][8] /* ty=Tensor[(88), float64] */)
}

def @func_4055() -> (Tensor[(2025), float32], Tensor[(15, 9, 15), bool]) {
  %149 = @func_2502() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
  %150 = @func_3404() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32]) */;
  %151 = %149.1;
  %152 = %150.2;
  (%151, %152)
}

def @func_8257() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  %153 = @func_3168() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %154 = @func_7857() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %155 = @func_7519() /* ty=(Tensor[(104, 2), float32], Tensor[(10, 9, 11), float64]) */;
  %156 = %153.0;
  %157 = %154.0;
  %158 = %155.1;
  (%156, %157, %158)
}

def @func_17660() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %159 = @func_8490() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %160 = @func_12971() /* ty=Tensor[(10, 9, 11), float64] */;
  %161 = %159.0;
  (%160, %161)
}

def @func_2996() -> (Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32], Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) {
  %162 = @func_2935() /* ty=(Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) */;
  %163 = @func_2763() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) */;
  %164 = %163.0;
  %165 = cast(%164, dtype="float32") /* ty=Tensor[(15, 9, 15), float32] */;
  %166 = reshape(%165, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %167 = @func_984(%166) /* ty=(Tensor[(2025), int64],) */;
  %168 = cast(%164, dtype="float64") /* ty=Tensor[(15, 9, 15), float64] */;
  %169 = reshape(%168, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %170 = @func_1118(%169) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32], Tensor[(990), uint32], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float32], Tensor[(2025), float32], Tensor[(2025), bool]) */;
  %171 = %162.2;
  %172 = %167.0;
  %173 = @func_2029() /* ty=Tensor[(2025), float64] */;
  %174 = %170.3;
  (%171, %164, %172, %173, %174)
}

def @func_7686() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %175 = @func_6160() /* ty=(Tensor[(2025), float64],) */;
  %176 = @func_7380() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %177 = %175.0;
  %178 = %176.0;
  (%177, %178)
}

def @func_9364() -> (Tensor[(2025), float32], Tensor[(2025), float64], Tensor[(2025), int64]) {
  %179 = @func_5970() /* ty=Tensor[(2025), float32] */;
  %180 = cast(%179, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %181 = reshape(%180, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %182 = @func_4778(%181) /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */;
  %183 = @func_7235() /* ty=(Tensor[(2025), int64],) */;
  %184 = %182.1;
  %185 = %183.0;
  (%179, %184, %185)
}

def @func_21023() -> (Tensor[(2025), int8], Tensor[(2025), int8]) {
  %186 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %187 = @func_15274() /* ty=Tensor[(2025), int8] */;
  %188 = %186.0;
  (%187, %188)
}

def @func_7277() -> Tensor[(10, 9, 11), float32] {
  %189 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %189.1
}

def @func_9929() -> (Tensor[(2025), float64],) {
  %190 = @func_6657() /* ty=(Tensor[(2025), float64], Tensor[(2025), int64], Tensor[(16, 4, 7), float32]) */;
  %191 = %190.0;
  (%191,)
}

def @func_20562(%var_20557: Tensor[(6, 1, 2), float32], %var_20558: Tensor[(6, 11, 2), float32]) -> (Tensor[(6, 11, 2), float32],) {
  %192 = cast(%var_20557, dtype="float32") /* ty=Tensor[(6, 1, 2), float32] */;
  %193 = cast(%var_20558, dtype="float32") /* ty=Tensor[(6, 11, 2), float32] */;
  %194 = divide(%192, %193) /* ty=Tensor[(6, 11, 2), float32] */;
  (%194,)
}

def @func_21145() -> (Tensor[(16, 4, 7), float32],) {
  %195 = @func_11714() /* ty=(Tensor[(16, 4, 7), float32],) */;
  %196 = %195.0;
  (%196,)
}

def @func_1281() -> (Tensor[(10, 9, 11), float64],) {
  %197 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %198 = %197.1;
  (%198,)
}

def @func_20589() -> (Tensor[(2025), float64],) {
  %199 = @func_12506() /* ty=Tensor[(2025), float64] */;
  (%199,)
}

def @func_23258(%var_23248: Tensor[(11, 8, 6), float64]) -> Tensor[(11, 8, 6), float64] {
  %200 = cast(%var_23248, dtype="float64") /* ty=Tensor[(11, 8, 6), float64] */;
  asinh(%200) /* ty=Tensor[(11, 8, 6), float64] */
}

def @func_139(%var_105: Tensor[(15, 9, 15), float32]) -> (Tensor[(15, 9, 15), float32],) {
  %201 = cast(%var_105, dtype="float32") /* ty=Tensor[(15, 9, 15), float32] */;
  %202 = acosh(%201) /* ty=Tensor[(15, 9, 15), float32] */;
  (%202,)
}

def @func_11545() -> (Tensor[(10, 9, 11), float64],) {
  %203 = @func_7519() /* ty=(Tensor[(104, 2), float32], Tensor[(10, 9, 11), float64]) */;
  %204 = %203.1;
  (%204,)
}

def @func_16777() -> (Tensor[(16, 4, 7), float32],) {
  %205 = @func_14756() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), uint32], Tensor[(16, 4, 7), float32]) */;
  %206 = %205.2;
  (%206,)
}

def @func_9056() -> (Tensor[(2025), float64],) {
  %207 = @func_5392() /* ty=(Tensor[(2025), float64],) */;
  %208 = %207.0;
  (%208,)
}

def @func_9290() -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64]) {
  %209 = @func_8122() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64]) */;
  %210 = %209.0;
  %211 = @func_3412() /* ty=Tensor[(10, 9, 11), float64] */;
  (%210, %211)
}

def @func_1118(%var_1113: Tensor[(2025), float64]) -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32], Tensor[(990), uint32], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float32], Tensor[(2025), float32], Tensor[(2025), bool]) {
  %212 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %213 = cast(meta[relay.Constant][9] /* ty=Tensor[(990), uint32] */, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %214 = reshape(%213, newshape=[10, 9, 11]) /* ty=Tensor[(10, 9, 11), uint32] */;
  %215 = @func_961(%214) /* ty=Tensor[(10, 9, 11), float32] */;
  %216 = cast(%215, dtype="uint32") /* ty=Tensor[(10, 9, 11), uint32] */;
  %217 = reshape(%216, newshape=[10, 9, 11]) /* ty=Tensor[(10, 9, 11), uint32] */;
  %218 = @func_961(%217) /* ty=Tensor[(10, 9, 11), float32] */;
  %219 = cast(%218, dtype="uint32") /* ty=Tensor[(10, 9, 11), uint32] */;
  %220 = reshape(%219, newshape=[10, 9, 11]) /* ty=Tensor[(10, 9, 11), uint32] */;
  %221 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %222 = @func_1060() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %223 = %222.0;
  %224 = cast(%223, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %225 = tan(%224) /* ty=Tensor[(2025), float64] */;
  %226 = cast(%var_1113, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %227 = shape_of(%225, dtype="int32") /* ty=Tensor[(1), int32] */;
  %228 = cast(%225, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?), bool] */;
  %230 = %212.2;
  %231 = @func_961(%220) /* ty=Tensor[(10, 9, 11), float32] */;
  %232 = %221.3;
  %233 = logical_and(%228, %229) /* ty=Tensor[(2025), bool] */;
  (%230, %215, meta[relay.Constant][9] /* ty=Tensor[(990), uint32] */, %218, %231, %232, %233)
}

def @func_10872() -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float32]) {
  %234 = @func_4382() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %235 = @func_8605() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), int8]) */;
  %236 = %234.1;
  %237 = %235.0;
  (%236, %237)
}

def @func_14024() -> (Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) {
  %238 = @func_7192() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %239 = @func_9343() /* ty=Tensor[(10, 9, 11), float32] */;
  %240 = %238.0;
  (%239, %240)
}

def @func_16753() -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
  %241 = @func_1957() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %242 = @func_16221() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float32]) */;
  %243 = %241.0;
  %244 = %242.0;
  (%243, %244)
}

def @func_15325() -> (Tensor[(10, 9, 11), uint32], Tensor[(63), uint64]) {
  %245 = @func_10034() /* ty=(Tensor[(10, 9, 11), uint32],) */;
  %246 = @func_11451() /* ty=(Tensor[(63), uint64], Tensor[(990), uint32], Tensor[(2025), float64]) */;
  %247 = %245.0;
  %248 = %246.0;
  (%247, %248)
}

def @func_16033() -> Tensor[(6, 66), float32] {
  %249 = @func_6278() /* ty=(Tensor[(2025), int64], Tensor[(16, 4, 7), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(44, 2), float64], Tensor[(66, 6), float32]) */;
  %249.4
}

def @func_3168() -> (Tensor[(10, 9, 11), float64],) {
  %250 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %251 = %250.0;
  (%251,)
}

def @func_22338(%var_22323: Tensor[(396, 1), float32]) -> (Tensor[(6, 11, 6), float32], Tensor[(396, 2025), float64]) {
  %252 = cast(%var_22323, dtype="float32") /* ty=Tensor[(396, 1), float32] */;
  %253 = reshape(%252, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float32] */;
  %254 = @func_16725() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */;
  %255 = %254.1;
  %256 = cast(%255, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %257 = cast(%var_22323, dtype="float64") /* ty=Tensor[(396, 1), float64] */;
  %258 = @func_10461(%253) /* ty=Tensor[(6, 11, 6), float32] */;
  %259 = minimum(%256, %257) /* ty=Tensor[(396, 2025), float64] */;
  (%258, %259)
}

def @func_17448() -> (Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) {
  %260 = @func_17433() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), float32]) */;
  %261 = @func_3168() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %262 = %260.1;
  %263 = %261.0;
  (%262, %263)
}

def @func_12751() -> (Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(88), float64], Tensor[(6, 66), float32], Tensor[(2025), float64], Tensor[(396), float32]) {
  %264 = @func_10034() /* ty=(Tensor[(10, 9, 11), uint32],) */;
  %265 = cast(meta[relay.Constant][10] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %266 = reshape(%265, newshape=[88]) /* ty=Tensor[(88), float64] */;
  %267 = @func_5766(%266) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(9, 1, 10), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(4, 9, 11), float32], Tensor[(88), float64], Tensor[(396), float32], Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
  %268 = cast(meta[relay.Constant][10] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %269 = cast(meta[relay.Constant][11] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %270 = cast(meta[relay.Constant][12] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %271 = reshape(%268, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), float64] */;
  %272 = reshape(%269, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %273 = reshape(%270, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %274 = @func_4820(%271, %272, %273) /* ty=(Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) */;
  %275 = %264.0;
  %276 = %267.9;
  %277 = %274.4;
  (%275, %276, meta[relay.Constant][10] /* ty=Tensor[(88), float64] */, %277, meta[relay.Constant][11] /* ty=Tensor[(2025), float64] */, meta[relay.Constant][12] /* ty=Tensor[(396), float32] */)
}

def @func_9505(%var_9503: Tensor[(13, 2), int16]) -> (Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(13, 2), int16]) {
  %278 = @func_3207() /* ty=(Tensor[(15, 9, 15), bool],) */;
  %279 = cast(%var_9503, dtype="int16") /* ty=Tensor[(13, 2), int16] */;
  %280 = reshape(%279, newshape=[26]) /* ty=Tensor[(26), int16] */;
  %281 = @func_7888(%280) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(13, 2, 1), int16], int16, Tensor[(26), int16]) */;
  %282 = %278.0;
  %283 = %281.0;
  (%282, %283, %var_9503)
}

def @func_11972() -> Tensor[(2025), float64] {
  @func_10849() /* ty=Tensor[(2025), float64] */
}

def @func_13377() -> (Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), float64]) {
  %284 = @func_11188() /* ty=(Tensor[(2025), float64], Tensor[(2025), int64]) */;
  %285 = %284.1;
  %286 = @func_13236() /* ty=Tensor[(2025), float64] */;
  %287 = @func_12506() /* ty=Tensor[(2025), float64] */;
  %288 = @func_11972() /* ty=Tensor[(2025), float64] */;
  (%285, %286, %287, %288)
}

def @func_1593(%var_1582: Tensor[(2025), float32]) -> (Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(2025), float32]) {
  %289 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %290 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %291 = cast(%var_1582, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %292 = reshape(%291, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %293 = @func_984(%292) /* ty=(Tensor[(2025), int64],) */;
  %294 = %289.0;
  %295 = %290.0;
  %296 = %293.0;
  (%294, %295, %296, %var_1582)
}

def @func_8897() -> (Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), int8]) {
  %297 = @func_7183() /* ty=(Tensor[(2025), float32], Tensor[(2025), int64]) */;
  %298 = @func_2366() /* ty=(Tensor[(2025), int8],) */;
  %299 = %297.1;
  %300 = @func_4098() /* ty=Tensor[(2025), float32] */;
  %301 = @func_3412() /* ty=Tensor[(10, 9, 11), float64] */;
  %302 = %298.0;
  (%299, %300, %301, %302)
}

def @func_7574(%var_7546: Tensor[(2025), float64]) -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) {
  %303 = @func_3059() /* ty=Tensor[(2025), float64] */;
  %304 = cast(%var_7546, dtype="uint32") /* ty=Tensor[(2025), uint32] */;
  %305 = shape_of(%303, dtype="int32") /* ty=Tensor[(1), int32] */;
  %306 = cast(%303, dtype="uint32") /* ty=Tensor[(2025), uint32] */;
  %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %308 = logical_xor(%306, %307) /* ty=Tensor[(2025), uint32] */;
  %309 = cast(%303, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %310 = shape_of(%308, dtype="int32") /* ty=Tensor[(1), int32] */;
  %311 = cast(%308, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?), float32] */;
  %313 = @func_3168() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %314 = @func_6782() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) */;
  %315 = %314.1;
  %316 = cast(%315, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %317 = floor_divide(%311, %312) /* ty=Tensor[(2025), float32] */;
  %318 = %313.0;
  %319 = rsqrt(%316) /* ty=Tensor[(2025), float32] */;
  (%317, %318, %319)
}

def @func_18605() -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float64], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) {
  %320 = @func_15387() /* ty=(Tensor[(16, 4, 7), float64],) */;
  %321 = @func_9421() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32]) */;
  %322 = @func_17448() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) */;
  %323 = @func_11535() /* ty=Tensor[(2025), float64] */;
  %324 = %320.0;
  %325 = %321.2;
  %326 = %322.1;
  (%323, %324, %325, %326)
}

def @func_20453() -> (Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) {
  %327 = @func_11504() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(3, 9, 2), float64]) */;
  %328 = @func_8122() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64]) */;
  %329 = @func_12834() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %330 = %327.1;
  %331 = @func_16033() /* ty=Tensor[(6, 66), float32] */;
  %332 = %328.0;
  %333 = %329.0;
  (%330, %331, %332, %333)
}

def @func_18854(%var_18835: Tensor[(14, 3, 4), uint8]) -> (Tensor[(14, 3, 4), uint8],) {
  %334 = cast(meta[relay.Constant][13] /* ty=Tensor[(14, 1, 4), uint8] */, dtype="uint8") /* ty=Tensor[(14, 1, 4), uint8] */;
  %335 = cast(%var_18835, dtype="uint8") /* ty=Tensor[(14, 3, 4), uint8] */;
  %336 = right_shift(%334, %335) /* ty=Tensor[(14, 3, 4), uint8] */;
  (%336,)
}

def @func_6278() -> (Tensor[(2025), int64], Tensor[(16, 4, 7), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(44, 2), float64], Tensor[(66, 6), float32]) {
  %337 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %338 = %337.1;
  %339 = cast(%338, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %340 = reshape(%339, newshape=[675, 3]) /* ty=Tensor[(675, 3), float64] */;
  %341 = @func_3323(%340) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(675, 3), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32]) */;
  %342 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %343 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %344 = cast(meta[relay.Constant][14] /* ty=Tensor[(44, 2), float64] */, dtype="float64") /* ty=Tensor[(44, 2), float64] */;
  %345 = cast(meta[relay.Constant][15] /* ty=Tensor[(66, 6), float32] */, dtype="float32") /* ty=Tensor[(66, 6), float32] */;
  %346 = reshape(%344, newshape=[88]) /* ty=Tensor[(88), float64] */;
  %347 = reshape(%345, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %348 = @func_5513(%346, %347) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(4, 9, 11), float32], Tensor[(88), float64], Tensor[(3, 675), float64], Tensor[(6, 66), float32]) */;
  %349 = %341.5;
  %350 = %342.0;
  %351 = %343.0;
  %352 = %348.4;
  (%338, %349, %350, %351, %352, meta[relay.Constant][14] /* ty=Tensor[(44, 2), float64] */, meta[relay.Constant][15] /* ty=Tensor[(66, 6), float32] */)
}

def @func_1622() -> (Tensor[(2025), int8], Tensor[(2025), int64]) {
  %353 = @func_1060() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %354 = %353.0;
  %355 = cast(%354, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %356 = reshape(%355, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %357 = @func_984(%356) /* ty=(Tensor[(2025), int64],) */;
  %358 = %357.0;
  (%354, %358)
}

def @func_3575(%var_3537: Tensor[(4, 9, 11), float32]) -> (Tensor[(4, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) {
  %359 = cast(%var_3537, dtype="float32") /* ty=Tensor[(4, 9, 11), float32] */;
  %360 = atanh(%359) /* ty=Tensor[(4, 9, 11), float32] */;
  %361 = @func_1439() /* ty=Tensor[(10, 9, 11), float64] */;
  %362 = @func_1755() /* ty=Tensor[(16, 4, 7), float32] */;
  (%360, %361, %362)
}

def @func_2935() -> (Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) {
  %363 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %364 = %363.0;
  %365 = cast(%364, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %366 = reshape(%365, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), float32] */;
  %367 = @func_139(%366) /* ty=(Tensor[(15, 9, 15), float32],) */;
  %368 = @func_1827() /* ty=Tensor[(10, 9, 11), float64] */;
  %369 = %367.0;
  (%364, %368, %369)
}

def @func_19007(%var_18961: Tensor[(5, 12, 3), int16], %var_18962: Tensor[(5, 12, 3), int16]) -> (Tensor[(5, 12, 3), bool], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %370 = cast(%var_18962, dtype="bool") /* ty=Tensor[(5, 12, 3), bool] */;
  %371 = shape_of(%var_18961, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%var_18961, dtype="bool") /* ty=Tensor[(5, 12, 3), bool] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %374 = @func_14476() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) */;
  %375 = @func_9929() /* ty=(Tensor[(2025), float64],) */;
  %376 = @func_5867() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(3, 9, 2), float64]) */;
  %377 = greater_equal(%372, %373) /* ty=Tensor[(5, 12, 3), bool] */;
  %378 = @func_7277() /* ty=Tensor[(10, 9, 11), float32] */;
  %379 = %374.2;
  %380 = %375.0;
  %381 = %376.0;
  (%377, %378, %379, %380, %381)
}

def @func_2108() -> (Tensor[(10, 9, 11), float64],) {
  %382 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %383 = %382.0;
  (%383,)
}

def @func_3936() -> Tensor[(2025), float64] {
  %384 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
  %384.0
}

def @func_15499(%var_15490: Tensor[(5, 12, 11), float64]) -> Tensor[(5, 12, 11), float64] {
  %385 = cast(%var_15490, dtype="float64") /* ty=Tensor[(5, 12, 11), float64] */;
  %386 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(5, 12, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(meta[relay.Constant][16] /* ty=Tensor[(5, 12, 11), float64] */, dtype="float64") /* ty=Tensor[(5, 12, 11), float64] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%387, %388) /* ty=Tensor[(5, 12, 11), float64] */
}

def @func_3059() -> Tensor[(2025), float64] {
  @func_1880() /* ty=Tensor[(2025), float64] */
}

def @func_8078() -> (Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) {
  %389 = @func_3511() /* ty=(Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) */;
  %390 = %389.2;
  %391 = cast(%390, dtype="float64") /* ty=Tensor[(15, 9, 15), float64] */;
  %392 = reshape(%391, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %393 = @func_1118(%392) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32], Tensor[(990), uint32], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float32], Tensor[(2025), float32], Tensor[(2025), bool]) */;
  %394 = %393.5;
  (%390, %394)
}

def @func_7183() -> (Tensor[(2025), float32], Tensor[(2025), int64]) {
  %395 = @func_4098() /* ty=Tensor[(2025), float32] */;
  %396 = cast(%395, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %397 = reshape(%396, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %398 = @func_984(%397) /* ty=(Tensor[(2025), int64],) */;
  %399 = %398.0;
  (%395, %399)
}

def @func_9463() -> (Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) {
  %400 = @func_9364() /* ty=(Tensor[(2025), float32], Tensor[(2025), float64], Tensor[(2025), int64]) */;
  %401 = @func_7354() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) */;
  %402 = %400.2;
  %403 = @func_9343() /* ty=Tensor[(10, 9, 11), float32] */;
  %404 = %401.1;
  (%402, %403, %404)
}

def @func_22990() -> (Tensor[(10, 9, 11), float64],) {
  %405 = @func_18058() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32]) */;
  %406 = %405.0;
  (%406,)
}

def @func_961(%var_953: Tensor[(10, 9, 11), uint32]) -> Tensor[(10, 9, 11), float32] {
  %407 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %408 = %407.0;
  %409 = cast(%var_953, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
  %410 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
  %411 = cast(%408, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
  %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  subtract(%411, %412) /* ty=Tensor[(10, 9, 11), float32] */
}

def @func_4728() -> Tensor[(2025), int8] {
  %413 = @func_2366() /* ty=(Tensor[(2025), int8],) */;
  %413.0
}

def @func_3097(%var_3087: Tensor[(2025), float64]) -> Tensor[(2025), bool] {
  %414 = @func_3059() /* ty=Tensor[(2025), float64] */;
  %415 = cast(%var_3087, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %416 = shape_of(%414, dtype="int32") /* ty=Tensor[(1), int32] */;
  %417 = cast(%414, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?), bool] */;
  greater_equal(%417, %418) /* ty=Tensor[(2025), bool] */
}

def @func_20352() -> Tensor[(10, 9, 11), float64] {
  %419 = @func_9850() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), int8]) */;
  %419.0
}

def @func_18765() -> Tensor[(16, 4, 7), float32] {
  %420 = @func_17695() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(990), uint32]) */;
  %420.0
}

def @func_15569() -> Tensor[(15, 9, 15), float32] {
  %421 = @func_8019() /* ty=(Tensor[(15, 9, 15), float32],) */;
  %421.0
}

def @func_21820() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %422 = @func_11082() /* ty=(Tensor[(2025), float64],) */;
  %423 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %424 = %422.0;
  %425 = %423.0;
  (%424, %425)
}

def @func_10914() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %426 = @func_4327() /* ty=(Tensor[(2025), float64],) */;
  %427 = %426.0;
  %428 = @func_1827() /* ty=Tensor[(10, 9, 11), float64] */;
  %429 = @func_7641() /* ty=Tensor[(2025), float64] */;
  (%427, %428, %429)
}

def @func_17827() -> (Tensor[(10, 9, 11), uint32],) {
  %430 = @func_12751() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(88), float64], Tensor[(6, 66), float32], Tensor[(2025), float64], Tensor[(396), float32]) */;
  %431 = %430.0;
  (%431,)
}

def @func_22222() -> (Tensor[(10, 9, 11), float32], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64], Tensor[(180), int16]) {
  %432 = @func_1535() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(990), uint32]) */;
  %433 = @func_21145() /* ty=(Tensor[(16, 4, 7), float32],) */;
  %434 = cast(meta[relay.Constant][17] /* ty=Tensor[(180), int16] */, dtype="int16") /* ty=Tensor[(180), int16] */;
  %435 = cast(meta[relay.Constant][17] /* ty=Tensor[(180), int16] */, dtype="int16") /* ty=Tensor[(180), int16] */;
  %436 = reshape(%434, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), int16] */;
  %437 = reshape(%435, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), int16] */;
  %438 = @func_19007(%436, %437) /* ty=(Tensor[(5, 12, 3), bool], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %439 = %432.1;
  %440 = %433.0;
  %441 = %438.2;
  (%439, %440, %441, meta[relay.Constant][17] /* ty=Tensor[(180), int16] */)
}

def @func_10110() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %442 = @func_7686() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %443 = @func_2597() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %444 = %442.0;
  %445 = %443.0;
  (%444, %445)
}

def @func_10133() -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  %446 = @func_6782() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) */;
  %447 = @func_9850() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), int8]) */;
  %448 = %446.1;
  %449 = %447.2;
  (%448, %449)
}

def @func_4327() -> (Tensor[(2025), float64],) {
  %450 = @func_3404() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32]) */;
  %451 = %450.1;
  (%451,)
}

def @func_18186() -> Tensor[(2025), int64] {
  %452 = @func_9038() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int64], Tensor[(2025), float32]) */;
  %452.1
}

def @func_17754() -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) {
  %453 = @func_10872() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float32]) */;
  %454 = @func_8257() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %455 = %453.0;
  %456 = %454.0;
  (%455, %456)
}

def @func_22646() -> Tensor[(2025), float64] {
  %457 = @func_9929() /* ty=(Tensor[(2025), float64],) */;
  %457.0
}

def @func_984(%var_973: Tensor[(2025), float32]) -> (Tensor[(2025), int64],) {
  %458 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %459 = %458.3;
  %460 = cast(%var_973, dtype="int64") /* ty=Tensor[(2025), int64] */;
  %461 = shape_of(%459, dtype="int32") /* ty=Tensor[(1), int32] */;
  %462 = cast(%459, dtype="int64") /* ty=Tensor[(2025), int64] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?), int64] */;
  %464 = bitwise_and(%462, %463) /* ty=Tensor[(2025), int64] */;
  (%464,)
}

def @func_5766(%var_5704: Tensor[(88), float64]) -> (Tensor[(15, 9, 15), float32], Tensor[(9, 1, 10), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(4, 9, 11), float32], Tensor[(88), float64], Tensor[(396), float32], Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) {
  %465 = @func_4055() /* ty=(Tensor[(2025), float32], Tensor[(15, 9, 15), bool]) */;
  %466 = %465.1;
  %467 = cast(%466, dtype="float32") /* ty=Tensor[(15, 9, 15), float32] */;
  %468 = @func_5300() /* ty=(Tensor[(9, 1, 10), float32],) */;
  %469 = @func_3168() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %470 = cast(%var_5704, dtype="float64") /* ty=Tensor[(88), float64] */;
  %471 = cast(%466, dtype="float64") /* ty=Tensor[(15, 9, 15), float64] */;
  %472 = cast(meta[relay.Constant][18] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %473 = reshape(%470, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), float64] */;
  %474 = reshape(%471, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %475 = reshape(%472, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %476 = @func_4820(%473, %474, %475) /* ty=(Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) */;
  %477 = cast(%466, dtype="float64") /* ty=Tensor[(15, 9, 15), float64] */;
  %478 = reshape(%477, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %479 = @func_2662(%478) /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %480 = @func_2366() /* ty=(Tensor[(2025), int8],) */;
  %481 = @func_4382() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %482 = @func_2502() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
  %483 = log10(%467) /* ty=Tensor[(15, 9, 15), float32] */;
  %484 = %468.0;
  %485 = %469.0;
  %486 = @func_1827() /* ty=Tensor[(10, 9, 11), float64] */;
  %487 = %476.3;
  %488 = %479.1;
  %489 = %480.0;
  %490 = %481.2;
  %491 = %482.1;
  (%483, %484, %485, %486, %487, %var_5704, meta[relay.Constant][18] /* ty=Tensor[(396), float32] */, %488, %489, %490, %491)
}

def @func_22899() -> Tensor[(104, 2), float32] {
  %492 = @func_7519() /* ty=(Tensor[(104, 2), float32], Tensor[(10, 9, 11), float64]) */;
  %492.0
}

def @func_18151() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %493 = @func_5937() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(1, 7, 9), uint64], uint64, Tensor[(63), uint64], Tensor[(2025), float64]) */;
  %494 = @func_17754() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %495 = %493.4;
  %496 = %494.1;
  %497 = @func_2029() /* ty=Tensor[(2025), float64] */;
  %498 = @func_10154() /* ty=Tensor[(10, 9, 11), float64] */;
  (%495, %496, %497, %498)
}

def @func_6672() -> Tensor[(10, 9, 11), float64] {
  %499 = @func_2228() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64]) */;
  %499.4
}

def @func_15606() -> (Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) {
  %500 = @func_6076() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool]) */;
  %501 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %502 = @func_12751() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(88), float64], Tensor[(6, 66), float32], Tensor[(2025), float64], Tensor[(396), float32]) */;
  %503 = %500.1;
  %504 = %501.1;
  %505 = %502.4;
  (%503, %504, %505)
}

def @func_20839(%var_20823: float64, %var_20824: Tensor[(10, 7, 9), float64]) -> Tensor[(10, 7, 9), float64] {
  %506 = cast(%var_20823, dtype="float64") /* ty=float64 */;
  %507 = cast(%var_20824, dtype="float64") /* ty=Tensor[(10, 7, 9), float64] */;
  floor_mod(%506, %507) /* ty=Tensor[(10, 7, 9), float64] */
}

def @func_12336() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(10, 9, 11), float64]) {
  %508 = @func_6091() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %509 = @func_6657() /* ty=(Tensor[(2025), float64], Tensor[(2025), int64], Tensor[(16, 4, 7), float32]) */;
  %510 = @func_8047() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %511 = %508.0;
  %512 = %509.1;
  %513 = %510.1;
  (%511, %512, %513)
}

def @func_10350() -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  %514 = @func_5392() /* ty=(Tensor[(2025), float64],) */;
  %515 = @func_3059() /* ty=Tensor[(2025), float64] */;
  %516 = %514.0;
  (%515, %516)
}

def @func_3226() -> Tensor[(3, 9, 2), float64] {
  %517 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 9, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 2), float64] */;
  asinh(%517) /* ty=Tensor[(3, 9, 2), float64] */
}

def @func_8569() -> (Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool]) {
  %518 = @func_7408() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), float64]) */;
  %519 = @func_5146() /* ty=(Tensor[(15, 9, 15), bool],) */;
  %520 = %518.1;
  %521 = @func_4466() /* ty=Tensor[(2025), float64] */;
  %522 = %519.0;
  (%520, %521, %522)
}

def @func_9683() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %523 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
  %524 = @func_4382() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %525 = %523.0;
  %526 = %524.2;
  (%525, %526)
}

def @func_5300() -> (Tensor[(9, 1, 10), float32],) {
  %527 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 1, 10), float32] */, dtype="float32") /* ty=Tensor[(9, 1, 10), float32] */;
  %528 = asinh(%527) /* ty=Tensor[(9, 1, 10), float32] */;
  (%528,)
}

def @func_8178() -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  %529 = @func_5392() /* ty=(Tensor[(2025), float64],) */;
  %530 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
  %531 = %529.0;
  %532 = %530.0;
  (%531, %532)
}

def @func_15387() -> (Tensor[(16, 4, 7), float64],) {
  %533 = @func_13575() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %534 = %533.1;
  %535 = cast(%534, dtype="float64") /* ty=Tensor[(16, 4, 7), float64] */;
  %536 = sinh(%535) /* ty=Tensor[(16, 4, 7), float64] */;
  (%536,)
}

def @func_18937() -> (Tensor[(2025), int8],) {
  %537 = @func_4728() /* ty=Tensor[(2025), int8] */;
  (%537,)
}

def @func_1880() -> Tensor[(2025), float64] {
  %538 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %539 = %538.1;
  %540 = cast(%539, dtype="float64") /* ty=Tensor[(2025), float64] */;
  sinh(%540) /* ty=Tensor[(2025), float64] */
}

def @func_23980() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), uint32]) {
  %541 = @func_12100() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %542 = @func_10034() /* ty=(Tensor[(10, 9, 11), uint32],) */;
  %543 = @func_10154() /* ty=Tensor[(10, 9, 11), float64] */;
  %544 = %541.0;
  %545 = %542.0;
  (%543, %544, %545)
}

def @func_8461() -> (Tensor[(990), uint32], Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  %546 = @func_1535() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(990), uint32]) */;
  %547 = @func_6104() /* ty=(Tensor[(2025), int64],) */;
  %548 = @func_3168() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %549 = @func_7354() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) */;
  %550 = %546.2;
  %551 = %547.0;
  %552 = %548.0;
  %553 = %549.1;
  (%550, %551, %552, %553)
}

def @func_7149(%var_7111: int16, %var_7112: Tensor[(13, 2, 1), int16]) -> (Tensor[(13, 2, 1), int16], Tensor[(3, 9, 2), float64]) {
  %554 = cast(%var_7111, dtype="int16") /* ty=int16 */;
  %555 = cast(%var_7112, dtype="int16") /* ty=Tensor[(13, 2, 1), int16] */;
  %556 = @func_5867() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(3, 9, 2), float64]) */;
  %557 = bitwise_and(%554, %555) /* ty=Tensor[(13, 2, 1), int16] */;
  %558 = %556.1;
  (%557, %558)
}

def @func_1672() -> (Tensor[(15, 9, 15), float32],) {
  %559 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %560 = %559.2;
  (%560,)
}

def @func_7872() -> Tensor[(10, 9, 11), float64] {
  %561 = @func_4382() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %561.2
}

def @func_11714() -> (Tensor[(16, 4, 7), float32],) {
  %562 = @func_7914() /* ty=Tensor[(16, 4, 7), float32] */;
  (%562,)
}

def @func_5267() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  %563 = @func_3404() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32]) */;
  %564 = @func_5063() /* ty=Tensor[(10, 9, 11), float64] */;
  %565 = %563.0;
  (%564, %565)
}

def @func_6657() -> (Tensor[(2025), float64], Tensor[(2025), int64], Tensor[(16, 4, 7), float32]) {
  %566 = @func_6160() /* ty=(Tensor[(2025), float64],) */;
  %567 = @func_4861() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */;
  %568 = %566.0;
  %569 = @func_4948() /* ty=Tensor[(2025), int64] */;
  %570 = %567.3;
  (%568, %569, %570)
}

def @func_13867(%var_13842: uint32, %var_13843: Tensor[(13, 1, 3), uint32]) -> (Tensor[(13, 1, 3), uint32],) {
  %571 = cast(%var_13842, dtype="uint32") /* ty=uint32 */;
  %572 = cast(%var_13843, dtype="uint32") /* ty=Tensor[(13, 1, 3), uint32] */;
  %573 = bitwise_xor(%571, %572) /* ty=Tensor[(13, 1, 3), uint32] */;
  (%573,)
}

def @func_16813() -> Tensor[(10, 9, 11), float64] {
  @func_6672() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_13630() -> (Tensor[(2025), float64],) {
  %574 = @func_9364() /* ty=(Tensor[(2025), float32], Tensor[(2025), float64], Tensor[(2025), int64]) */;
  %575 = %574.1;
  (%575,)
}

def @func_18526() -> (Tensor[(2025), int64], Tensor[(7, 9, 10), float32], Tensor[(6, 11, 6), float32], Tensor[(1, 396), float32]) {
  %576 = @func_15761() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float32], Tensor[(2025), int64], Tensor[(10, 9, 11), float32]) */;
  %577 = @func_12204() /* ty=(Tensor[(7, 9, 10), float32],) */;
  %578 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 396), float32] */, dtype="float32") /* ty=Tensor[(1, 396), float32] */;
  %579 = reshape(%578, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float32] */;
  %580 = %576.3;
  %581 = %577.0;
  %582 = @func_10461(%579) /* ty=Tensor[(6, 11, 6), float32] */;
  (%580, %581, %582, meta[relay.Constant][21] /* ty=Tensor[(1, 396), float32] */)
}

def @func_19825() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), uint32], Tensor[(88), float64]) {
  %583 = @func_10246() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(2025), float64]) */;
  %584 = @func_19190() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), float64]) */;
  %585 = @func_9874() /* ty=(Tensor[(2025), float64], Tensor[(88), float64]) */;
  %586 = %583.1;
  %587 = %584.1;
  %588 = %585.1;
  (%586, %587, %588)
}

def @func_18738() -> (Tensor[(10, 9, 11), uint32],) {
  %589 = @func_15325() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(63), uint64]) */;
  %590 = %589.0;
  (%590,)
}

def @func_23074() -> Tensor[(16, 4, 7), float32] {
  @func_1790() /* ty=Tensor[(16, 4, 7), float32] */
}

def @func_10849() -> Tensor[(2025), float64] {
  @func_2029() /* ty=Tensor[(2025), float64] */
}

def @func_21293() -> Tensor[(7, 9, 10), float32] {
  %591 = @func_17286() /* ty=(Tensor[(16, 4, 7), float64], Tensor[(7, 9, 10), float32], Tensor[(88), float64]) */;
  %591.1
}

def @func_6365() -> (Tensor[(15, 9, 15), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), int64]) {
  %592 = @func_3511() /* ty=(Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) */;
  %593 = @func_2108() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %594 = @func_5486() /* ty=(Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(15, 9, 15), float32]) */;
  %595 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %596 = %592.1;
  %597 = @func_2029() /* ty=Tensor[(2025), float64] */;
  %598 = %593.0;
  %599 = %594.2;
  %600 = %595.1;
  (%596, %597, %598, %599, %600)
}

def @func_17695() -> (Tensor[(16, 4, 7), float32], Tensor[(990), uint32]) {
  %601 = @func_16624() /* ty=(Tensor[(16, 4, 7), float32],) */;
  %602 = @func_1535() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(990), uint32]) */;
  %603 = %601.0;
  %604 = %602.2;
  (%603, %604)
}

def @func_6057(%var_6011: Tensor[(27, 75), float64], %var_6033: Tensor[(208), float32], %var_6034: Tensor[(88, 1), float64]) -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(27, 75), float32], Tensor[(10, 9, 11), float64], Tensor[(208), float32], Tensor[(88, 1), float64]) {
  %605 = cast(%var_6011, dtype="float64") /* ty=Tensor[(27, 75), float64] */;
  %606 = reshape(%605, newshape=[675, 3]) /* ty=Tensor[(675, 3), float64] */;
  %607 = @func_3323(%606) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(675, 3), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32]) */;
  %608 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %609 = @func_4861() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */;
  %610 = cast(%var_6011, dtype="float32") /* ty=Tensor[(27, 75), float32] */;
  %611 = cast(%var_6033, dtype="float32") /* ty=Tensor[(208), float32] */;
  %612 = cast(%var_6033, dtype="float32") /* ty=Tensor[(208), float32] */;
  %613 = cast(%var_6034, dtype="float64") /* ty=Tensor[(88, 1), float64] */;
  %614 = reshape(%611, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
  %615 = reshape(%612, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
  %616 = reshape(%613, newshape=[88]) /* ty=Tensor[(88), float64] */;
  %617 = @func_5008(%614, %615, %616) /* ty=(Tensor[(8, 13, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(88), float64], Tensor[(2025), float64], Tensor[(396), float32]) */;
  %618 = @func_3412() /* ty=Tensor[(10, 9, 11), float64] */;
  %619 = %607.3;
  %620 = %608.1;
  %621 = %609.0;
  %622 = atan(%610) /* ty=Tensor[(27, 75), float32] */;
  %623 = %617.1;
  (%618, %619, %620, %621, %622, %623, %var_6033, %var_6034)
}

def @func_19549() -> (Tensor[(16, 4, 7), float32],) {
  %624 = @func_16624() /* ty=(Tensor[(16, 4, 7), float32],) */;
  %625 = %624.0;
  (%625,)
}

def @func_6973(%var_6954: Tensor[(15, 9, 15), bool]) -> Tensor[(15, 9, 15), uint16] {
  %626 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
  %627 = %626.2;
  %628 = cast(%var_6954, dtype="uint16") /* ty=Tensor[(15, 9, 15), uint16] */;
  %629 = shape_of(%627, dtype="int32") /* ty=Tensor[(3), int32] */;
  %630 = cast(%627, dtype="uint16") /* ty=Tensor[(15, 9, 15), uint16] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  minimum(%630, %631) /* ty=Tensor[(15, 9, 15), uint16] */
}

def @func_8019() -> (Tensor[(15, 9, 15), float32],) {
  %632 = @func_2996() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32], Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %633 = %632.1;
  (%633,)
}

def @func_12971() -> Tensor[(10, 9, 11), float64] {
  @func_7173() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_22468() -> Tensor[(10, 9, 11), float64] {
  %634 = @func_5867() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(3, 9, 2), float64]) */;
  %634.0
}

def @func_5632(%var_5593: Tensor[(15, 9, 15), float32]) -> (Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float64], Tensor[(2025), float64]) {
  %635 = @func_5486() /* ty=(Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(15, 9, 15), float32]) */;
  %636 = %635.2;
  %637 = cast(%var_5593, dtype="bool") /* ty=Tensor[(15, 9, 15), bool] */;
  %638 = shape_of(%636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%636, dtype="bool") /* ty=Tensor[(15, 9, 15), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %641 = cast(%var_5593, dtype="float64") /* ty=Tensor[(15, 9, 15), float64] */;
  %642 = logical_or(%639, %640) /* ty=Tensor[(15, 9, 15), bool] */;
  %643 = erf(%641) /* ty=Tensor[(15, 9, 15), float64] */;
  %644 = @func_3936() /* ty=Tensor[(2025), float64] */;
  (%642, %643, %644)
}

def @func_8541() -> (Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) {
  %645 = @func_7235() /* ty=(Tensor[(2025), int64],) */;
  %646 = %645.0;
  %647 = cast(%646, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %648 = reshape(%647, newshape=[675, 3]) /* ty=Tensor[(675, 3), float64] */;
  %649 = @func_3323(%648) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(675, 3), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32]) */;
  %650 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %651 = @func_2832() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(2025), int64]) */;
  %652 = %649.0;
  %653 = %650.1;
  %654 = @func_3059() /* ty=Tensor[(2025), float64] */;
  %655 = %651.0;
  (%646, %652, %653, %654, %655)
}

def @func_17355() -> (Tensor[(2025), int64],) {
  %656 = @func_6429() /* ty=(Tensor[(2025), int64],) */;
  %657 = %656.0;
  (%657,)
}

def @func_13010() -> (Tensor[(2025), int64], Tensor[(15, 9, 15), bool]) {
  %658 = @func_11245() /* ty=(Tensor[(2025), int64],) */;
  %659 = @func_3207() /* ty=(Tensor[(15, 9, 15), bool],) */;
  %660 = %658.0;
  %661 = %659.0;
  (%660, %661)
}

def @func_7888(%var_7882: Tensor[(26), int16]) -> (Tensor[(10, 9, 11), float64], Tensor[(13, 2, 1), int16], int16, Tensor[(26), int16]) {
  %662 = @func_7192() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %663 = cast(meta[relay.Constant][22] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %664 = cast(%var_7882, dtype="int16") /* ty=Tensor[(26), int16] */;
  %665 = reshape(%663, newshape=[]) /* ty=int16 */;
  %666 = reshape(%664, newshape=[13, 2, 1]) /* ty=Tensor[(13, 2, 1), int16] */;
  %667 = @func_7149(%665, %666) /* ty=(Tensor[(13, 2, 1), int16], Tensor[(3, 9, 2), float64]) */;
  %668 = %662.0;
  %669 = %667.0;
  (%668, %669, meta[relay.Constant][22] /* ty=int16 */, %var_7882)
}

def @func_19489() -> (Tensor[(2025), float32],) {
  %670 = @func_14756() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), uint32], Tensor[(16, 4, 7), float32]) */;
  %671 = %670.0;
  (%671,)
}

def @func_23308() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %672 = @func_8569() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool]) */;
  %673 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
  %674 = %672.0;
  %675 = %673.0;
  (%674, %675)
}

def @func_13083() -> (Tensor[(10, 9, 11), float32], Tensor[(88), float64]) {
  %676 = @func_12751() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(88), float64], Tensor[(6, 66), float32], Tensor[(2025), float64], Tensor[(396), float32]) */;
  %677 = @func_9343() /* ty=Tensor[(10, 9, 11), float32] */;
  %678 = %676.2;
  (%677, %678)
}

def @func_7380() -> (Tensor[(10, 9, 11), float64],) {
  %679 = @func_5267() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %680 = %679.0;
  (%680,)
}

def @func_17021() -> (Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), float64]) {
  %681 = @func_8569() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool]) */;
  %682 = @func_6880() /* ty=(Tensor[(2025), float64],) */;
  %683 = %681.0;
  %684 = @func_14378() /* ty=Tensor[(2025), float64] */;
  %685 = %682.0;
  (%683, %684, %685)
}

def @func_19917() -> (Tensor[(10, 9, 11), float64], Tensor[(11, 11, 14), float32], Tensor[(1694), float32]) {
  %686 = @func_10604() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %687 = cast(meta[relay.Constant][23] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %688 = cast(meta[relay.Constant][23] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %689 = reshape(%687, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %690 = reshape(%688, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
  %691 = @func_18348(%689, %690) /* ty=(Tensor[(11, 11, 14), float32],) */;
  %692 = %686.0;
  %693 = %691.0;
  (%692, %693, meta[relay.Constant][23] /* ty=Tensor[(1694), float32] */)
}

def @func_21757() -> (Tensor[(16, 4, 7), float64], Tensor[(2025), float64]) {
  %694 = @func_13060() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %695 = %694.1;
  %696 = cast(%695, dtype="float64") /* ty=Tensor[(16, 4, 7), float64] */;
  %697 = @func_13060() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %698 = cosh(%696) /* ty=Tensor[(16, 4, 7), float64] */;
  %699 = %697.0;
  (%698, %699)
}

def @func_15910() -> (Tensor[(2025), int64], Tensor[(10, 9, 11), float32]) {
  %700 = @func_8541() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %701 = @func_15072() /* ty=(Tensor[(10, 9, 11), float32],) */;
  %702 = %700.0;
  %703 = %701.0;
  (%702, %703)
}

def @func_6611() -> (Tensor[(2025), int8], Tensor[(9, 1, 10), float32]) {
  %704 = @func_1060() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %705 = @func_5300() /* ty=(Tensor[(9, 1, 10), float32],) */;
  %706 = %704.0;
  %707 = %705.0;
  (%706, %707)
}

def @func_16477() -> Tensor[(2025), float32] {
  %708 = @func_10536() /* ty=(Tensor[(2025), float32],) */;
  %708.0
}

def @func_4948() -> Tensor[(2025), int64] {
  %709 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %709.1
}

def @func_2228() -> (Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64]) {
  %710 = @func_1343() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */;
  %711 = @func_2029() /* ty=Tensor[(2025), float64] */;
  %712 = cast(%711, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %713 = reshape(%712, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %714 = @func_1593(%713) /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(2025), float32]) */;
  %715 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %716 = @func_2108() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %717 = %710.1;
  %718 = %714.0;
  %719 = %715.0;
  %720 = %716.0;
  (%717, %711, %718, %719, %720)
}

def @func_18366() -> (Tensor[(63), uint64],) {
  %721 = @func_11451() /* ty=(Tensor[(63), uint64], Tensor[(990), uint32], Tensor[(2025), float64]) */;
  %722 = %721.0;
  (%722,)
}

def @func_7857() -> (Tensor[(10, 9, 11), float64],) {
  %723 = @func_3404() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32]) */;
  %724 = %723.0;
  (%724,)
}

def @func_16624() -> (Tensor[(16, 4, 7), float32],) {
  %725 = @func_13575() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %726 = %725.1;
  (%726,)
}

def @func_3207() -> (Tensor[(15, 9, 15), bool],) {
  %727 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
  %728 = %727.2;
  (%728,)
}

def @func_5513(%var_5509: Tensor[(88), float64], %var_5511: Tensor[(6, 66), float32]) -> (Tensor[(10, 9, 11), float64], Tensor[(4, 9, 11), float32], Tensor[(88), float64], Tensor[(3, 675), float64], Tensor[(6, 66), float32]) {
  %729 = cast(%var_5509, dtype="float64") /* ty=Tensor[(88), float64] */;
  %730 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 675), float64] */, dtype="float64") /* ty=Tensor[(3, 675), float64] */;
  %731 = cast(%var_5511, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
  %732 = reshape(%729, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), float64] */;
  %733 = reshape(%730, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %734 = reshape(%731, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %735 = @func_4820(%732, %733, %734) /* ty=(Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) */;
  %736 = @func_1827() /* ty=Tensor[(10, 9, 11), float64] */;
  %737 = %735.3;
  (%736, %737, %var_5509, meta[relay.Constant][24] /* ty=Tensor[(3, 675), float64] */, %var_5511)
}

def @func_16871() -> Tensor[(2025), float64] {
  %738 = @func_15458() /* ty=(Tensor[(2025), float64],) */;
  %738.0
}

def @func_9551() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), uint32]) {
  %739 = @func_1957() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %740 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %741 = %739.0;
  %742 = %740.0;
  (%741, %742)
}

def @func_19858(%var_19835: Tensor[(2025), float64]) -> (Tensor[(2025), bool], Tensor[(16, 4, 7), float32]) {
  %743 = @func_6160() /* ty=(Tensor[(2025), float64],) */;
  %744 = %743.0;
  %745 = cast(%var_19835, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %746 = shape_of(%744, dtype="int32") /* ty=Tensor[(1), int32] */;
  %747 = cast(%744, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?), bool] */;
  %749 = @func_6485() /* ty=(Tensor[(2025), float32], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %750 = less_equal(%747, %748) /* ty=Tensor[(2025), bool] */;
  %751 = %749.1;
  (%750, %751)
}

def @func_4820(%var_4786: Tensor[(11, 1, 8), float64], %var_4793: Tensor[(2025), float64], %var_4807: Tensor[(6, 66), float32]) -> (Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) {
  %752 = cast(%var_4786, dtype="float64") /* ty=Tensor[(11, 1, 8), float64] */;
  %753 = cast(%var_4793, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %754 = reshape(%753, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %755 = @func_4778(%754) /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */;
  %756 = cast(%var_4807, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
  %757 = reshape(%756, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float32] */;
  %758 = @func_3575(%757) /* ty=(Tensor[(4, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) */;
  %759 = log2(%752) /* ty=Tensor[(11, 1, 8), float64] */;
  %760 = %755.0;
  %761 = %758.0;
  (%759, %760, %var_4793, %761, %var_4807)
}

def @func_13575() -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
  %762 = @func_1343() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */;
  %763 = %762.1;
  %764 = @func_10357() /* ty=Tensor[(16, 4, 7), float32] */;
  (%763, %764)
}

def @func_21580() -> (Tensor[(10, 9, 11), float32], Tensor[(2025), float64], Tensor[(624), float64]) {
  %765 = @func_8928() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(2025), float64]) */;
  %766 = @func_12283() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(624), float64]) */;
  %767 = @func_14892() /* ty=Tensor[(10, 9, 11), float32] */;
  %768 = %765.2;
  %769 = %766.2;
  (%767, %768, %769)
}

def @func_23379() -> Tensor[(10, 9, 11), float64] {
  %770 = @func_2832() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(2025), int64]) */;
  %770.2
}

def @func_6160() -> (Tensor[(2025), float64],) {
  %771 = @func_4466() /* ty=Tensor[(2025), float64] */;
  (%771,)
}

def @func_23043() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(4, 192), int8], Tensor[(15, 9, 15), float64]) {
  %772 = @func_2832() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(2025), int64]) */;
  %773 = @func_15138() /* ty=(Tensor[(2025), float64],) */;
  %774 = @func_17721() /* ty=(Tensor[(4, 12, 16), int8], Tensor[(4, 192), int8], Tensor[(16, 4, 7), float64]) */;
  %775 = %773.0;
  %776 = cast(%775, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %777 = reshape(%776, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), bool] */;
  %778 = @func_12683(%777) /* ty=(Tensor[(15, 9, 15), float64], Tensor[(2025), float64]) */;
  %779 = %772.2;
  %780 = %774.1;
  %781 = %778.0;
  (%779, %775, %780, %781)
}

def @func_11338(%var_11333: Tensor[(2025), int8]) -> Tensor[(2025), uint32] {
  %782 = @func_8605() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), int8]) */;
  %783 = %782.1;
  %784 = cast(%var_11333, dtype="uint32") /* ty=Tensor[(2025), uint32] */;
  %785 = shape_of(%783, dtype="int32") /* ty=Tensor[(1), int32] */;
  %786 = cast(%783, dtype="uint32") /* ty=Tensor[(2025), uint32] */;
  %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?), uint32] */;
  add(%786, %787) /* ty=Tensor[(2025), uint32] */
}

def @func_10566() -> (Tensor[(2025), int8],) {
  %788 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %789 = %788.0;
  (%789,)
}

def @func_20631() -> Tensor[(10, 9, 11), float32] {
  %790 = @func_13083() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(88), float64]) */;
  %790.0
}

def @func_22601(%var_22528: Tensor[(4, 10, 14), float64], %var_22550: Tensor[(2025, 1), float64]) -> (Tensor[(990), uint32], Tensor[(2025, 1), float64], Tensor[(10, 9, 11), float64], Tensor[(4, 10, 14), float32]) {
  %791 = cast(%var_22550, dtype="float64") /* ty=Tensor[(2025, 1), float64] */;
  %792 = reshape(%791, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %793 = @func_1118(%792) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32], Tensor[(990), uint32], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float32], Tensor[(2025), float32], Tensor[(2025), bool]) */;
  %794 = @func_18426() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) */;
  %795 = cast(%var_22528, dtype="float64") /* ty=Tensor[(4, 10, 14), float64] */;
  %796 = cosh(%795) /* ty=Tensor[(4, 10, 14), float64] */;
  %797 = cast(%var_22528, dtype="float32") /* ty=Tensor[(4, 10, 14), float32] */;
  %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%796, dtype="float32") /* ty=Tensor[(4, 10, 14), float32] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %801 = %793.2;
  %802 = %794.1;
  %803 = power(%799, %800) /* ty=Tensor[(4, 10, 14), float32] */;
  (%801, %var_22550, %802, %803)
}

def @func_10741() -> Tensor[(16, 4, 7), float32] {
  %804 = @func_7408() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), float64]) */;
  %804.0
}

def @func_10246() -> (Tensor[(10, 9, 11), uint32], Tensor[(2025), float64]) {
  %805 = @func_6782() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) */;
  %806 = @func_9591() /* ty=Tensor[(10, 9, 11), uint32] */;
  %807 = %805.1;
  (%806, %807)
}

def @func_20004() -> (Tensor[(2025), float64],) {
  %808 = @func_9233() /* ty=Tensor[(2025), float64] */;
  (%808,)
}

def @func_21507(%var_21483: Tensor[(1, 3, 15), int8]) -> (Tensor[(12, 3, 15), bool], Tensor[(2025), float64], Tensor[(2025), int8], Tensor[(12, 3, 15), int64]) {
  %809 = cast(%var_21483, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
  %810 = cast(meta[relay.Constant][25] /* ty=Tensor[(12, 3, 15), int8] */, dtype="bool") /* ty=Tensor[(12, 3, 15), bool] */;
  %811 = @func_11504() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(3, 9, 2), float64]) */;
  %812 = @func_20081() /* ty=(Tensor[(2025), int8], Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %813 = cast(%var_21483, dtype="int64") /* ty=Tensor[(1, 3, 15), int64] */;
  %814 = cast(meta[relay.Constant][25] /* ty=Tensor[(12, 3, 15), int8] */, dtype="int64") /* ty=Tensor[(12, 3, 15), int64] */;
  %815 = less(%809, %810) /* ty=Tensor[(12, 3, 15), bool] */;
  %816 = %811.0;
  %817 = %812.0;
  %818 = multiply(%813, %814) /* ty=Tensor[(12, 3, 15), int64] */;
  (%815, %816, %817, %818)
}

def @func_21653() -> Tensor[(16, 4, 7), float64] {
  %819 = @func_7914() /* ty=Tensor[(16, 4, 7), float32] */;
  %820 = cast(%819, dtype="float64") /* ty=Tensor[(16, 4, 7), float64] */;
  erf(%820) /* ty=Tensor[(16, 4, 7), float64] */
}

def @func_18348(%var_18326: Tensor[(11, 11, 14), float32], %var_18327: Tensor[(11, 11, 14), float32]) -> (Tensor[(11, 11, 14), float32],) {
  %821 = cast(%var_18327, dtype="float32") /* ty=Tensor[(11, 11, 14), float32] */;
  %822 = shape_of(%var_18326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %823 = cast(%var_18326, dtype="float32") /* ty=Tensor[(11, 11, 14), float32] */;
  %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %825 = power(%823, %824) /* ty=Tensor[(11, 11, 14), float32] */;
  (%825,)
}

def @func_7354() -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) {
  %826 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %827 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %828 = %826.3;
  %829 = %827.0;
  (%828, %829)
}

def @func_9421() -> (Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32]) {
  %830 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %831 = %830.0;
  %832 = @func_9142() /* ty=Tensor[(15, 9, 15), float32] */;
  %833 = @func_9343() /* ty=Tensor[(10, 9, 11), float32] */;
  (%831, %832, %833)
}

def @func_14756() -> (Tensor[(2025), float32], Tensor[(10, 9, 11), uint32], Tensor[(16, 4, 7), float32]) {
  %834 = @func_5970() /* ty=Tensor[(2025), float32] */;
  %835 = cast(%834, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %836 = reshape(%835, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %837 = @func_1593(%836) /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(2025), float32]) */;
  %838 = @func_2763() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) */;
  %839 = %837.0;
  %840 = %838.2;
  (%834, %839, %840)
}

def @func_11188() -> (Tensor[(2025), float64], Tensor[(2025), int64]) {
  %841 = @func_9056() /* ty=(Tensor[(2025), float64],) */;
  %842 = %841.0;
  %843 = cast(%842, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %844 = reshape(%843, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %845 = @func_984(%844) /* ty=(Tensor[(2025), int64],) */;
  %846 = %845.0;
  (%842, %846)
}

def @func_6782() -> (Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) {
  %847 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %848 = %847.1;
  %849 = @func_4466() /* ty=Tensor[(2025), float64] */;
  (%848, %849)
}

def @func_24063() -> (Tensor[(2025), int64], Tensor[(7, 9, 10), float32], Tensor[(2025), int64], Tensor[(10, 9, 11), float64]) {
  %850 = @func_7235() /* ty=(Tensor[(2025), int64],) */;
  %851 = @func_22377() /* ty=(Tensor[(7, 9, 10), float32],) */;
  %852 = @func_2567() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %853 = @func_18151() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %854 = %850.0;
  %855 = %851.0;
  %856 = %852.0;
  %857 = %853.3;
  (%854, %855, %856, %857)
}

def @func_4077() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) {
  %858 = @func_3936() /* ty=Tensor[(2025), float64] */;
  %859 = @func_3888() /* ty=Tensor[(10, 9, 11), float32] */;
  (%858, %859)
}

def @func_5486() -> (Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(15, 9, 15), float32]) {
  %860 = @func_3936() /* ty=Tensor[(2025), float64] */;
  %861 = cast(%860, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %862 = @func_2763() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) */;
  %863 = @func_4948() /* ty=Tensor[(2025), int64] */;
  %864 = atanh(%861) /* ty=Tensor[(2025), float32] */;
  %865 = %862.0;
  (%863, %864, %865)
}

def @func_7192() -> (Tensor[(10, 9, 11), float64],) {
  %866 = @func_3412() /* ty=Tensor[(10, 9, 11), float64] */;
  (%866,)
}

def @func_13718() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), int64]) {
  %867 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %868 = @func_5937() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(1, 7, 9), uint64], uint64, Tensor[(63), uint64], Tensor[(2025), float64]) */;
  %869 = @func_11188() /* ty=(Tensor[(2025), float64], Tensor[(2025), int64]) */;
  %870 = %867.0;
  %871 = %868.4;
  %872 = @func_9591() /* ty=Tensor[(10, 9, 11), uint32] */;
  %873 = %869.1;
  (%870, %871, %872, %873)
}

def @func_18928(%var_18926: Tensor[(26, 1), int16]) -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(26, 1), int16]) {
  %874 = @func_15761() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float32], Tensor[(2025), int64], Tensor[(10, 9, 11), float32]) */;
  %875 = cast(%var_18926, dtype="int16") /* ty=Tensor[(26, 1), int16] */;
  %876 = reshape(%875, newshape=[13, 2]) /* ty=Tensor[(13, 2), int16] */;
  %877 = @func_9505(%876) /* ty=(Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(13, 2), int16]) */;
  %878 = %874.2;
  %879 = %877.1;
  (%878, %879, %var_18926)
}

def @func_13801() -> (Tensor[(2025), float64],) {
  %880 = @func_8569() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool]) */;
  %881 = %880.1;
  (%881,)
}

def @func_19443() -> Tensor[(10, 9, 11), float32] {
  %882 = @func_15606() /* ty=(Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) */;
  %882.1
}

def @func_11082() -> (Tensor[(2025), float64],) {
  %883 = @func_9100() /* ty=(Tensor[(2025), float64],) */;
  %884 = %883.0;
  (%884,)
}

def @func_20240() -> (Tensor[(10, 9, 11), float64],) {
  %885 = @func_7380() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %886 = %885.0;
  (%886,)
}

def @func_16134(%var_16077: Tensor[(3, 7, 9), float64]) -> (Tensor[(3, 7, 9), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(3, 7, 9), float64]) {
  %887 = cast(meta[relay.Constant][26] /* ty=Tensor[(3, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(3, 7, 9), float64] */;
  %888 = shape_of(%var_16077, dtype="int32") /* ty=Tensor[(3), int32] */;
  %889 = cast(%var_16077, dtype="float64") /* ty=Tensor[(3, 7, 9), float64] */;
  %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %891 = @func_15654() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %892 = cast(%var_16077, dtype="float64") /* ty=Tensor[(3, 7, 9), float64] */;
  %893 = floor_divide(%889, %890) /* ty=Tensor[(3, 7, 9), float64] */;
  %894 = @func_9233() /* ty=Tensor[(2025), float64] */;
  %895 = %891.0;
  %896 = log(%892) /* ty=Tensor[(3, 7, 9), float64] */;
  (%893, %894, %895, %896)
}

def @func_2662(%var_2649: Tensor[(2025), float64]) -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
  %897 = @func_1957() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %898 = %897.0;
  %899 = cast(%var_2649, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %900 = shape_of(%898, dtype="int32") /* ty=Tensor[(1), int32] */;
  %901 = cast(%898, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?), float64] */;
  %903 = mod(%901, %902) /* ty=Tensor[(2025), float64] */;
  %904 = @func_1790() /* ty=Tensor[(16, 4, 7), float32] */;
  (%903, %904)
}

def @func_11015(%var_11013: Tensor[(396), float32]) -> (Tensor[(10, 9, 11), float32], Tensor[(16, 4, 7), float32], Tensor[(396), float32]) {
  %905 = @func_2597() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %906 = %905.0;
  %907 = cast(%906, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
  %908 = cast(%var_11013, dtype="float32") /* ty=Tensor[(396), float32] */;
  %909 = reshape(%908, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float32] */;
  %910 = @func_3575(%909) /* ty=(Tensor[(4, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) */;
  %911 = sin(%907) /* ty=Tensor[(10, 9, 11), float32] */;
  %912 = %910.2;
  (%911, %912, %var_11013)
}

def @func_3323(%var_3287: Tensor[(675, 3), float64]) -> (Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(675, 3), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32]) {
  %913 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
  %914 = cast(%var_3287, dtype="float64") /* ty=Tensor[(675, 3), float64] */;
  %915 = reshape(%914, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %916 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %917 = @func_2763() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) */;
  %918 = %913.0;
  %919 = @func_3097(%915) /* ty=Tensor[(2025), bool] */;
  %920 = %916.0;
  %921 = @func_1755() /* ty=Tensor[(16, 4, 7), float32] */;
  %922 = %917.2;
  (%918, %919, %var_3287, %920, %921, %922)
}

def @func_22184() -> (Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) {
  %923 = @func_16550() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(15, 9, 15), float32]) */;
  %924 = @func_13801() /* ty=(Tensor[(2025), float64],) */;
  %925 = %923.2;
  %926 = %924.0;
  (%925, %926)
}

def @func_4466() -> Tensor[(2025), float64] {
  %927 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
  %927.0
}

def @func_11951() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %928 = @func_7519() /* ty=(Tensor[(104, 2), float32], Tensor[(10, 9, 11), float64]) */;
  %929 = @func_11188() /* ty=(Tensor[(2025), float64], Tensor[(2025), int64]) */;
  %930 = @func_8897() /* ty=(Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), int8]) */;
  %931 = @func_4327() /* ty=(Tensor[(2025), float64],) */;
  %932 = %928.1;
  %933 = %929.1;
  %934 = %930.2;
  %935 = %931.0;
  (%932, %933, %934, %935)
}

def @func_21253() -> Tensor[(10, 9, 11), float64] {
  %936 = @func_11545() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %936.0
}

def @func_22485() -> (Tensor[(2025), float64],) {
  %937 = @func_4466() /* ty=Tensor[(2025), float64] */;
  (%937,)
}

def @func_13607() -> (Tensor[(7, 9, 10), float32], Tensor[(7, 9, 10), float32], Tensor[(88), float64], Tensor[(88), float64], Tensor[(990), uint32]) {
  %938 = cast(meta[relay.Constant][27] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %939 = reshape(%938, newshape=[88]) /* ty=Tensor[(88), float64] */;
  %940 = @func_13254(%939) /* ty=(Tensor[(16, 4, 7), float32], Tensor[(88, 1), float64], Tensor[(2025), float64], Tensor[(208, 1), float32], Tensor[(88), float64]) */;
  %941 = @func_1535() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(990), uint32]) */;
  %942 = @func_11048() /* ty=Tensor[(7, 9, 10), float32] */;
  %943 = @func_10811() /* ty=Tensor[(7, 9, 10), float32] */;
  %944 = %940.4;
  %945 = %941.2;
  (%942, %943, %944, meta[relay.Constant][27] /* ty=Tensor[(88), float64] */, %945)
}

def @func_20519() -> (Tensor[(2025), float64], Tensor[(14, 3, 4), uint8], Tensor[(168), uint8], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) {
  %946 = cast(meta[relay.Constant][28] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %947 = reshape(%946, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), uint8] */;
  %948 = @func_18854(%947) /* ty=(Tensor[(14, 3, 4), uint8],) */;
  %949 = @func_7519() /* ty=(Tensor[(104, 2), float32], Tensor[(10, 9, 11), float64]) */;
  %950 = @func_19573() /* ty=(Tensor[(3, 5, 9), float64], Tensor[(2025), float64]) */;
  %951 = @func_10110() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %952 = @func_15475() /* ty=Tensor[(2025), float64] */;
  %953 = %948.0;
  %954 = %949.1;
  %955 = %950.1;
  %956 = @func_15710() /* ty=Tensor[(15, 9, 15), float32] */;
  %957 = %951.0;
  (%952, %953, meta[relay.Constant][28] /* ty=Tensor[(168), uint8] */, %954, %955, %956, %957)
}

def @func_21449() -> Tensor[(10, 9, 11), float64] {
  %958 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
  %958.0
}

def @func_23279() -> Tensor[(2025), int64] {
  %959 = @func_13010() /* ty=(Tensor[(2025), int64], Tensor[(15, 9, 15), bool]) */;
  %959.0
}

def @func_15138() -> (Tensor[(2025), float64],) {
  %960 = @func_10350() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */;
  %961 = %960.1;
  (%961,)
}

def @func_18873() -> (Tensor[(10, 9, 11), uint32],) {
  %962 = @func_9591() /* ty=Tensor[(10, 9, 11), uint32] */;
  (%962,)
}

def @func_11141() -> (Tensor[(10, 9, 11), float64],) {
  %963 = @func_3168() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %964 = %963.0;
  (%964,)
}

def @func_3412() -> Tensor[(10, 9, 11), float64] {
  %965 = @func_2502() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
  %965.0
}

def @func_8047() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %966 = @func_3919() /* ty=(Tensor[(2025), float64],) */;
  %967 = @func_6091() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %968 = %966.0;
  %969 = %967.0;
  (%968, %969)
}

def @func_3116() -> (Tensor[(15, 9, 15), float32],) {
  %970 = @func_1672() /* ty=(Tensor[(15, 9, 15), float32],) */;
  %971 = %970.0;
  (%971,)
}

def @func_13214(%var_13177: Tensor[(10, 11, 13), int64], %var_13178: Tensor[(10, 11, 13), int64]) -> (Tensor[(10, 11, 13), bool], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %972 = cast(%var_13178, dtype="bool") /* ty=Tensor[(10, 11, 13), bool] */;
  %973 = shape_of(%var_13177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %974 = cast(%var_13177, dtype="bool") /* ty=Tensor[(10, 11, 13), bool] */;
  %975 = dyn.reshape(%972, %973, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %976 = cast(meta[relay.Constant][29] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %977 = reshape(%976, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %978 = @func_3767(%977) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) */;
  %979 = greater_equal(%974, %975) /* ty=Tensor[(10, 11, 13), bool] */;
  %980 = %978.0;
  (%979, %980, meta[relay.Constant][29] /* ty=Tensor[(2025), float64] */)
}

def @func_1343() -> (Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) {
  %981 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %982 = @func_1060() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %983 = %982.1;
  %984 = cast(%983, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %985 = %981.2;
  %986 = log2(%984) /* ty=Tensor[(2025), float64] */;
  (%985, %986)
}

def @func_21371() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  %987 = @func_9421() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32]) */;
  %988 = @func_13589() /* ty=Tensor[(10, 9, 11), float64] */;
  %989 = %987.0;
  (%988, %989)
}

def @func_1808() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %990 = @func_1343() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */;
  %991 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %992 = %990.1;
  %993 = %991.0;
  (%992, %993)
}

def @func_10034() -> (Tensor[(10, 9, 11), uint32],) {
  %994 = @func_9591() /* ty=Tensor[(10, 9, 11), uint32] */;
  (%994,)
}

def @func_21409() -> (Tensor[(10, 9, 11), float64],) {
  %995 = @func_8928() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(2025), float64]) */;
  %996 = %995.0;
  (%996,)
}

def @func_9874() -> (Tensor[(2025), float64], Tensor[(88), float64]) {
  %997 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %998 = @func_5207() /* ty=(Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(104, 2), float32], Tensor[(88), float64]) */;
  %999 = %997.0;
  %1000 = %998.3;
  (%999, %1000)
}

def @func_23197() -> (Tensor[(88), float64],) {
  %1001 = @func_13083() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(88), float64]) */;
  %1002 = %1001.1;
  (%1002,)
}

def @func_15046(%var_14993: Tensor[(702), float64]) -> (Tensor[(2025), int8], Tensor[(9, 1, 10), float32], Tensor[(702), float64], Tensor[(3, 9, 2), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %1003 = @func_2366() /* ty=(Tensor[(2025), int8],) */;
  %1004 = cast(%var_14993, dtype="float64") /* ty=Tensor[(702), float64] */;
  %1005 = reshape(%1004, newshape=[9, 6, 13]) /* ty=Tensor[(9, 6, 13), float64] */;
  %1006 = @func_13954(%1005) /* ty=(Tensor[(2025), float64], Tensor[(9, 1, 10), float32], Tensor[(9, 6, 13), bool]) */;
  %1007 = @func_14601() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %1008 = @func_5392() /* ty=(Tensor[(2025), float64],) */;
  %1009 = %1003.0;
  %1010 = %1006.1;
  %1011 = @func_3226() /* ty=Tensor[(3, 9, 2), float64] */;
  %1012 = %1007.1;
  %1013 = %1008.0;
  (%1009, %1010, %var_14993, %1011, %1012, %1013)
}

def @func_20152() -> Tensor[(10, 9, 11), float64] {
  %1014 = @func_8461() /* ty=(Tensor[(990), uint32], Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %1014.2
}

def @func_3129() -> (Tensor[(2025), float64],) {
  %1015 = @func_3059() /* ty=Tensor[(2025), float64] */;
  (%1015,)
}

def @func_5146() -> (Tensor[(15, 9, 15), bool],) {
  %1016 = @func_2763() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) */;
  %1017 = %1016.1;
  (%1017,)
}

def @func_8490() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %1018 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
  %1019 = @func_7380() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1020 = %1018.0;
  %1021 = %1019.0;
  (%1020, %1021)
}

def @func_5787() -> (Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) {
  %1022 = @func_4861() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */;
  %1023 = @func_4861() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */;
  %1024 = %1022.2;
  %1025 = %1023.3;
  (%1024, %1025)
}

def @func_17149() -> Tensor[(2025), int64] {
  %1026 = @func_13377() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), float64]) */;
  %1026.0
}

def @func_21329() -> Tensor[(6, 66), float32] {
  %1027 = @func_20453() /* ty=(Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) */;
  %1027.1
}

def @func_17286() -> (Tensor[(16, 4, 7), float64], Tensor[(7, 9, 10), float32], Tensor[(88), float64]) {
  %1028 = @func_15387() /* ty=(Tensor[(16, 4, 7), float64],) */;
  %1029 = @func_15847() /* ty=(Tensor[(7, 9, 10), uint8], Tensor[(7, 9, 10), float32], Tensor[(2025), float64], Tensor[(2025), float64]) */;
  %1030 = @func_9874() /* ty=(Tensor[(2025), float64], Tensor[(88), float64]) */;
  %1031 = %1028.0;
  %1032 = %1029.1;
  %1033 = %1030.1;
  (%1031, %1032, %1033)
}

def @func_23174() -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  %1034 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %1035 = @func_17448() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) */;
  %1036 = @func_4098() /* ty=Tensor[(2025), float32] */;
  %1037 = %1034.1;
  %1038 = %1035.1;
  (%1036, %1037, %1038)
}

def @func_13954(%var_13933: Tensor[(9, 6, 13), float64]) -> (Tensor[(2025), float64], Tensor[(9, 1, 10), float32], Tensor[(9, 6, 13), bool]) {
  %1039 = @func_2567() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1040 = @func_5300() /* ty=(Tensor[(9, 1, 10), float32],) */;
  %1041 = cast(%var_13933, dtype="float64") /* ty=Tensor[(9, 6, 13), float64] */;
  %1042 = atanh(%1041) /* ty=Tensor[(9, 6, 13), float64] */;
  %1043 = cast(%var_13933, dtype="bool") /* ty=Tensor[(9, 6, 13), bool] */;
  %1044 = shape_of(%1042, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1045 = cast(%1042, dtype="bool") /* ty=Tensor[(9, 6, 13), bool] */;
  %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1047 = %1039.1;
  %1048 = %1040.0;
  %1049 = equal(%1045, %1046) /* ty=Tensor[(9, 6, 13), bool] */;
  (%1047, %1048, %1049)
}

def @func_9142() -> Tensor[(15, 9, 15), float32] {
  %1050 = @func_5486() /* ty=(Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(15, 9, 15), float32]) */;
  %1050.2
}

def @func_22745() -> (Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64]) {
  %1051 = @func_6880() /* ty=(Tensor[(2025), float64],) */;
  %1052 = @func_2763() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) */;
  %1053 = @func_2366() /* ty=(Tensor[(2025), int8],) */;
  %1054 = %1051.0;
  %1055 = %1052.0;
  %1056 = %1053.0;
  %1057 = @func_5063() /* ty=Tensor[(10, 9, 11), float64] */;
  (%1054, %1055, %1056, %1057)
}

def @func_7463() -> (Tensor[(10, 9, 11), float64],) {
  %1058 = @func_3412() /* ty=Tensor[(10, 9, 11), float64] */;
  (%1058,)
}

def @func_15632() -> (Tensor[(16, 4, 7), float32], Tensor[(9, 1, 10), float32]) {
  %1059 = @func_11714() /* ty=(Tensor[(16, 4, 7), float32],) */;
  %1060 = @func_5300() /* ty=(Tensor[(9, 1, 10), float32],) */;
  %1061 = %1059.0;
  %1062 = %1060.0;
  (%1061, %1062)
}

def @func_2273() -> (Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) {
  %1063 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %1064 = @func_1343() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */;
  %1065 = %1064.0;
  %1066 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 9, 15), float32] */, dtype="int64") /* ty=Tensor[(15, 9, 15), int64] */;
  %1067 = shape_of(%1065, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1068 = cast(%1065, dtype="int64") /* ty=Tensor[(15, 9, 15), int64] */;
  %1069 = dyn.reshape(%1066, %1067, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1070 = cast(meta[relay.Constant][31] /* ty=Tensor[(15, 9, 15), float32] */, dtype="bool") /* ty=Tensor[(15, 9, 15), bool] */;
  %1071 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(15, 9, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1072 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 9, 15), float32] */, dtype="bool") /* ty=Tensor[(15, 9, 15), bool] */;
  %1073 = dyn.reshape(%1070, %1071, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1074 = %1063.0;
  %1075 = bitwise_or(%1068, %1069) /* ty=Tensor[(15, 9, 15), int64] */;
  %1076 = not_equal(%1072, %1073) /* ty=Tensor[(15, 9, 15), bool] */;
  (%1074, %1075, %1076)
}

def @func_16184() -> (Tensor[(10, 9, 11), float64],) {
  %1077 = @func_6278() /* ty=(Tensor[(2025), int64], Tensor[(16, 4, 7), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(44, 2), float64], Tensor[(66, 6), float32]) */;
  %1078 = %1077.3;
  (%1078,)
}

def @func_3404() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32]) {
  %1079 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1080 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
  %1081 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
  %1082 = @func_1672() /* ty=(Tensor[(15, 9, 15), float32],) */;
  %1083 = %1079.0;
  %1084 = %1080.0;
  %1085 = %1081.2;
  %1086 = %1082.0;
  (%1083, %1084, %1085, %1086)
}

def @func_11788() -> (Tensor[(15, 9, 15), bool],) {
  %1087 = @func_4055() /* ty=(Tensor[(2025), float32], Tensor[(15, 9, 15), bool]) */;
  %1088 = %1087.1;
  (%1088,)
}

def @func_7235() -> (Tensor[(2025), int64],) {
  %1089 = @func_5486() /* ty=(Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(15, 9, 15), float32]) */;
  %1090 = %1089.0;
  (%1090,)
}

def @func_11048() -> Tensor[(7, 9, 10), float32] {
  @func_10811() /* ty=Tensor[(7, 9, 10), float32] */
}

def @func_8928() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(2025), float64]) {
  %1091 = @func_5267() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %1092 = cast(meta[relay.Constant][32] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1093 = reshape(%1092, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %1094 = %1091.0;
  %1095 = @func_3097(%1093) /* ty=Tensor[(2025), bool] */;
  (%1094, %1095, meta[relay.Constant][32] /* ty=Tensor[(2025), float64] */)
}

def @func_10296() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %1096 = @func_7354() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) */;
  %1097 = %1096.1;
  %1098 = @func_9233() /* ty=Tensor[(2025), float64] */;
  (%1097, %1098)
}

def @func_6104() -> (Tensor[(2025), int64],) {
  %1099 = @func_2567() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1100 = %1099.0;
  (%1100,)
}

def @func_6880() -> (Tensor[(2025), float64],) {
  %1101 = @func_4327() /* ty=(Tensor[(2025), float64],) */;
  %1102 = %1101.0;
  (%1102,)
}

def @func_8122() -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64]) {
  %1103 = @func_6365() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), int64]) */;
  %1104 = @func_7380() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1105 = %1103.0;
  %1106 = %1104.0;
  (%1105, %1106)
}

def @func_7519() -> (Tensor[(104, 2), float32], Tensor[(10, 9, 11), float64]) {
  %1107 = @func_5207() /* ty=(Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(104, 2), float32], Tensor[(88), float64]) */;
  %1108 = @func_7463() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1109 = %1107.2;
  %1110 = %1108.0;
  (%1109, %1110)
}

def @func_1535() -> (Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(990), uint32]) {
  %1111 = @func_1060() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %1112 = cast(meta[relay.Constant][33] /* ty=Tensor[(990), uint32] */, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %1113 = reshape(%1112, newshape=[10, 9, 11]) /* ty=Tensor[(10, 9, 11), uint32] */;
  %1114 = %1111.1;
  %1115 = @func_961(%1113) /* ty=Tensor[(10, 9, 11), float32] */;
  (%1114, %1115, meta[relay.Constant][33] /* ty=Tensor[(990), uint32] */)
}

def @func_12856() -> Tensor[(10, 9, 11), float32] {
  @func_7277() /* ty=Tensor[(10, 9, 11), float32] */
}

def @func_18426() -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) {
  %1116 = @func_14328() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */;
  %1117 = @func_2228() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64]) */;
  %1118 = @func_4098() /* ty=Tensor[(2025), float32] */;
  %1119 = %1116.1;
  %1120 = %1117.4;
  %1121 = @func_1790() /* ty=Tensor[(16, 4, 7), float32] */;
  (%1118, %1119, %1120, %1121)
}

def @func_1572() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  %1122 = @func_1439() /* ty=Tensor[(10, 9, 11), float64] */;
  %1123 = @func_1439() /* ty=Tensor[(10, 9, 11), float64] */;
  (%1122, %1123)
}

def @func_19304() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %1124 = @func_7463() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1125 = @func_9929() /* ty=(Tensor[(2025), float64],) */;
  %1126 = %1124.0;
  %1127 = %1125.0;
  (%1126, %1127)
}

def @func_19736() -> Tensor[(10, 9, 11), float32] {
  %1128 = @func_17433() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), float32]) */;
  %1128.1
}

def @func_3511() -> (Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) {
  %1129 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
  %1130 = @func_2935() /* ty=(Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) */;
  %1131 = @func_3404() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32]) */;
  %1132 = %1129.0;
  %1133 = %1130.2;
  %1134 = %1131.3;
  (%1132, %1133, %1134)
}

def @func_7173() -> Tensor[(10, 9, 11), float64] {
  %1135 = @func_2502() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
  %1135.0
}

def @func_7408() -> (Tensor[(16, 4, 7), float32], Tensor[(2025), float64]) {
  %1136 = @func_3919() /* ty=(Tensor[(2025), float64],) */;
  %1137 = @func_1755() /* ty=Tensor[(16, 4, 7), float32] */;
  %1138 = %1136.0;
  (%1137, %1138)
}

def @func_14601() -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) {
  %1139 = @func_1808() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1140 = @func_7914() /* ty=Tensor[(16, 4, 7), float32] */;
  %1141 = %1139.1;
  (%1140, %1141)
}

def @func_15072() -> (Tensor[(10, 9, 11), float32],) {
  %1142 = @func_9343() /* ty=Tensor[(10, 9, 11), float32] */;
  (%1142,)
}

def @func_12006() -> Tensor[(15, 9, 15), bool] {
  %1143 = @func_5146() /* ty=(Tensor[(15, 9, 15), bool],) */;
  %1143.0
}

def @func_18058() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32]) {
  %1144 = @func_16184() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1145 = %1144.0;
  %1146 = @func_12856() /* ty=Tensor[(10, 9, 11), float32] */;
  (%1145, %1146)
}

def @func_16064() -> Tensor[(2025), float64] {
  %1147 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %1147.0
}

def @func_2366() -> (Tensor[(2025), int8],) {
  %1148 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %1149 = %1148.0;
  (%1149,)
}

def @func_18291() -> (Tensor[(10, 9, 11), float64],) {
  %1150 = @func_7173() /* ty=Tensor[(10, 9, 11), float64] */;
  (%1150,)
}

def @func_9777(%var_9762: Tensor[(9, 3, 13), float64]) -> (Tensor[(9, 3, 13), float64], Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(52, 4), float32], Tensor[(1, 88), float64]) {
  %1151 = cast(%var_9762, dtype="float64") /* ty=Tensor[(9, 3, 13), float64] */;
  %1152 = @func_3919() /* ty=(Tensor[(2025), float64],) */;
  %1153 = cast(meta[relay.Constant][34] /* ty=Tensor[(52, 4), float32] */, dtype="float32") /* ty=Tensor[(52, 4), float32] */;
  %1154 = cast(meta[relay.Constant][34] /* ty=Tensor[(52, 4), float32] */, dtype="float32") /* ty=Tensor[(52, 4), float32] */;
  %1155 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 88), float64] */, dtype="float64") /* ty=Tensor[(1, 88), float64] */;
  %1156 = reshape(%1153, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
  %1157 = reshape(%1154, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
  %1158 = reshape(%1155, newshape=[88]) /* ty=Tensor[(88), float64] */;
  %1159 = @func_5008(%1156, %1157, %1158) /* ty=(Tensor[(8, 13, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(88), float64], Tensor[(2025), float64], Tensor[(396), float32]) */;
  %1160 = asin(%1151) /* ty=Tensor[(9, 3, 13), float64] */;
  %1161 = %1152.0;
  %1162 = %1159.2;
  (%1160, %1161, %1162, meta[relay.Constant][34] /* ty=Tensor[(52, 4), float32] */, meta[relay.Constant][35] /* ty=Tensor[(1, 88), float64] */)
}

def @func_10205() -> (Tensor[(10, 9, 11), float64],) {
  %1163 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %1164 = %1163.0;
  (%1164,)
}

def @func_13116() -> (Tensor[(10, 9, 11), float64],) {
  %1165 = @func_2502() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
  %1166 = %1165.0;
  (%1166,)
}

def @func_10604() -> (Tensor[(10, 9, 11), float64],) {
  %1167 = @func_5063() /* ty=Tensor[(10, 9, 11), float64] */;
  (%1167,)
}

def @func_19190() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), float64]) {
  %1168 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %1169 = @func_10034() /* ty=(Tensor[(10, 9, 11), uint32],) */;
  %1170 = %1168.1;
  %1171 = %1169.0;
  %1172 = @func_12506() /* ty=Tensor[(2025), float64] */;
  (%1170, %1171, %1172)
}

def @func_7978() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(8, 78), float32]) {
  %1173 = @func_7686() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1174 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 78), float64] */, dtype="float64") /* ty=Tensor[(8, 78), float64] */;
  %1175 = reshape(%1174, newshape=[12, 4, 13]) /* ty=Tensor[(12, 4, 13), float64] */;
  %1176 = @func_6859(%1175) /* ty=(Tensor[(12, 4, 13), float64], Tensor[(2025), float64], Tensor[(208), float32], Tensor[(88), float64]) */;
  %1177 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 78), float64] */, dtype="float32") /* ty=Tensor[(8, 78), float32] */;
  %1178 = %1173.1;
  %1179 = %1176.1;
  %1180 = log2(%1177) /* ty=Tensor[(8, 78), float32] */;
  (%1178, %1179, %1180)
}

def @func_20551() -> (Tensor[(16, 4, 7), float32], int16, Tensor[(30), int16], Tensor[(3, 10, 1), float64]) {
  %1181 = @func_7408() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), float64]) */;
  %1182 = cast(meta[relay.Constant][37] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1183 = cast(meta[relay.Constant][38] /* ty=Tensor[(30), int16] */, dtype="int16") /* ty=Tensor[(30), int16] */;
  %1184 = reshape(%1182, newshape=[]) /* ty=int16 */;
  %1185 = reshape(%1183, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), int16] */;
  %1186 = @func_4155(%1184, %1185) /* ty=(Tensor[(3, 10, 1), int16],) */;
  %1187 = %1186.0;
  %1188 = cast(%1187, dtype="float64") /* ty=Tensor[(3, 10, 1), float64] */;
  %1189 = %1181.0;
  %1190 = sin(%1188) /* ty=Tensor[(3, 10, 1), float64] */;
  (%1189, meta[relay.Constant][37] /* ty=int16 */, meta[relay.Constant][38] /* ty=Tensor[(30), int16] */, %1190)
}

def @func_8697() -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  %1191 = @func_6880() /* ty=(Tensor[(2025), float64],) */;
  %1192 = @func_1957() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %1193 = %1191.0;
  %1194 = %1192.0;
  (%1193, %1194)
}

def @func_15761() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float32], Tensor[(2025), int64], Tensor[(10, 9, 11), float32]) {
  %1195 = @func_7192() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1196 = @func_4382() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %1197 = @func_8897() /* ty=(Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), int8]) */;
  %1198 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %1199 = %1195.0;
  %1200 = %1196.0;
  %1201 = %1197.1;
  %1202 = @func_4948() /* ty=Tensor[(2025), int64] */;
  %1203 = %1198.1;
  (%1199, %1200, %1201, %1202, %1203)
}

def @func_9850() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), int8]) {
  %1204 = @func_7192() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1205 = @func_5392() /* ty=(Tensor[(2025), float64],) */;
  %1206 = @func_9100() /* ty=(Tensor[(2025), float64],) */;
  %1207 = @func_8605() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), int8]) */;
  %1208 = %1204.0;
  %1209 = %1205.0;
  %1210 = %1206.0;
  %1211 = %1207.1;
  (%1208, %1209, %1210, %1211)
}

def @func_12204() -> (Tensor[(7, 9, 10), float32],) {
  %1212 = @func_11048() /* ty=Tensor[(7, 9, 10), float32] */;
  (%1212,)
}

def @func_11245() -> (Tensor[(2025), int64],) {
  %1213 = @func_7235() /* ty=(Tensor[(2025), int64],) */;
  %1214 = %1213.0;
  (%1214,)
}

def @func_6760(%var_6753: Tensor[(396), float32]) -> (Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(88), float64], Tensor[(396), float32]) {
  %1215 = @func_6104() /* ty=(Tensor[(2025), int64],) */;
  %1216 = cast(meta[relay.Constant][39] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1217 = %1215.0;
  %1218 = cast(%1217, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1219 = cast(%var_6753, dtype="float32") /* ty=Tensor[(396), float32] */;
  %1220 = reshape(%1216, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), float64] */;
  %1221 = reshape(%1218, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %1222 = reshape(%1219, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %1223 = @func_4820(%1220, %1221, %1222) /* ty=(Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) */;
  %1224 = %1223.1;
  (%1217, %1224, meta[relay.Constant][39] /* ty=Tensor[(88), float64] */, %var_6753)
}

def @func_4861() -> (Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) {
  %1225 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %1226 = @func_4382() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %1227 = @func_1755() /* ty=Tensor[(16, 4, 7), float32] */;
  %1228 = %1225.0;
  %1229 = @func_4728() /* ty=Tensor[(2025), int8] */;
  %1230 = %1226.1;
  (%1227, %1228, %1229, %1230)
}

def @func_22432() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %1231 = @func_7857() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1232 = @func_11535() /* ty=Tensor[(2025), float64] */;
  %1233 = %1231.0;
  (%1232, %1233)
}

def @func_5407(%var_5398: uint64, %var_5399: Tensor[(1, 7, 9), uint64]) -> (Tensor[(1, 7, 9), uint64],) {
  %1234 = cast(%var_5398, dtype="uint64") /* ty=uint64 */;
  %1235 = cast(%var_5399, dtype="uint64") /* ty=Tensor[(1, 7, 9), uint64] */;
  %1236 = left_shift(%1234, %1235) /* ty=Tensor[(1, 7, 9), uint64] */;
  (%1236,)
}

def @func_21379() -> (Tensor[(10, 9, 11), float64],) {
  %1237 = @func_2108() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1238 = %1237.0;
  (%1238,)
}

def @func_21052(%var_21040: uint32, %var_21041: Tensor[(39), uint32]) -> (Tensor[(10, 9, 11), uint32], Tensor[(13, 1, 3), uint32], uint32, Tensor[(39), uint32]) {
  %1239 = @func_10034() /* ty=(Tensor[(10, 9, 11), uint32],) */;
  %1240 = cast(%var_21040, dtype="uint32") /* ty=uint32 */;
  %1241 = cast(%var_21041, dtype="uint32") /* ty=Tensor[(39), uint32] */;
  %1242 = reshape(%1240, newshape=[]) /* ty=uint32 */;
  %1243 = reshape(%1241, newshape=[13, 1, 3]) /* ty=Tensor[(13, 1, 3), uint32] */;
  %1244 = @func_13867(%1242, %1243) /* ty=(Tensor[(13, 1, 3), uint32],) */;
  %1245 = %1239.0;
  %1246 = %1244.0;
  (%1245, %1246, %var_21040, %var_21041)
}

def @func_10154() -> Tensor[(10, 9, 11), float64] {
  %1247 = @func_7096() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1247.0
}

def @func_5063() -> Tensor[(10, 9, 11), float64] {
  %1248 = @func_2567() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1248.2
}

def @func_1439() -> Tensor[(10, 9, 11), float64] {
  %1249 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1250 = %1249.0;
  %1251 = cast(%1250, dtype="float64") /* ty=Tensor[(10, 9, 11), float64] */;
  log2(%1251) /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_17721() -> (Tensor[(4, 12, 16), int8], Tensor[(4, 192), int8], Tensor[(16, 4, 7), float64]) {
  %1252 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 192), int8] */, dtype="int8") /* ty=Tensor[(4, 192), int8] */;
  %1253 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 192), int8] */, dtype="int8") /* ty=Tensor[(4, 192), int8] */;
  %1254 = reshape(%1252, newshape=[4, 12, 16]) /* ty=Tensor[(4, 12, 16), int8] */;
  %1255 = reshape(%1253, newshape=[4, 12, 16]) /* ty=Tensor[(4, 12, 16), int8] */;
  %1256 = @func_16195() /* ty=Tensor[(16, 4, 7), float32] */;
  %1257 = cast(%1256, dtype="float64") /* ty=Tensor[(16, 4, 7), float64] */;
  %1258 = @func_13967(%1254, %1255) /* ty=Tensor[(4, 12, 16), int8] */;
  %1259 = sigmoid(%1257) /* ty=Tensor[(16, 4, 7), float64] */;
  (%1258, meta[relay.Constant][40] /* ty=Tensor[(4, 192), int8] */, %1259)
}

def @func_16195() -> Tensor[(16, 4, 7), float32] {
  @func_10741() /* ty=Tensor[(16, 4, 7), float32] */
}

def @func_5207() -> (Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(104, 2), float32], Tensor[(88), float64]) {
  %1260 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
  %1261 = cast(meta[relay.Constant][41] /* ty=Tensor[(104, 2), float32] */, dtype="float32") /* ty=Tensor[(104, 2), float32] */;
  %1262 = cast(meta[relay.Constant][41] /* ty=Tensor[(104, 2), float32] */, dtype="float32") /* ty=Tensor[(104, 2), float32] */;
  %1263 = cast(meta[relay.Constant][42] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1264 = reshape(%1261, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
  %1265 = reshape(%1262, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
  %1266 = reshape(%1263, newshape=[88]) /* ty=Tensor[(88), float64] */;
  %1267 = @func_5008(%1264, %1265, %1266) /* ty=(Tensor[(8, 13, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(88), float64], Tensor[(2025), float64], Tensor[(396), float32]) */;
  %1268 = %1260.0;
  %1269 = %1267.2;
  (%1268, %1269, meta[relay.Constant][41] /* ty=Tensor[(104, 2), float32] */, meta[relay.Constant][42] /* ty=Tensor[(88), float64] */)
}

def @func_10069(%var_10041: Tensor[(5, 12, 2), float64]) -> (Tensor[(5, 12, 2), float32], Tensor[(5, 12, 2), float32]) {
  %1270 = cast(%var_10041, dtype="float64") /* ty=Tensor[(5, 12, 2), float64] */;
  %1271 = cos(%1270) /* ty=Tensor[(5, 12, 2), float64] */;
  %1272 = cast(%1271, dtype="float32") /* ty=Tensor[(5, 12, 2), float32] */;
  %1273 = cast(%1271, dtype="float32") /* ty=Tensor[(5, 12, 2), float32] */;
  %1274 = atan(%1272) /* ty=Tensor[(5, 12, 2), float32] */;
  %1275 = sinh(%1273) /* ty=Tensor[(5, 12, 2), float32] */;
  (%1274, %1275)
}

def @func_9719() -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  %1276 = @func_9056() /* ty=(Tensor[(2025), float64],) */;
  %1277 = @func_3511() /* ty=(Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) */;
  %1278 = %1276.0;
  %1279 = %1277.0;
  (%1278, %1279)
}

def @func_20987() -> (Tensor[(2025), int8],) {
  %1280 = @func_2935() /* ty=(Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) */;
  %1281 = %1280.0;
  (%1281,)
}

def @func_2502() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) {
  %1282 = @func_2108() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1283 = @func_1060() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %1284 = %1283.1;
  %1285 = cast(%1284, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %1286 = %1282.0;
  %1287 = acosh(%1285) /* ty=Tensor[(2025), float32] */;
  (%1286, %1287)
}

def @func_3919() -> (Tensor[(2025), float64],) {
  %1288 = @func_2935() /* ty=(Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) */;
  %1289 = %1288.0;
  %1290 = cast(%1289, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1291 = exp(%1290) /* ty=Tensor[(2025), float64] */;
  (%1291,)
}

def @func_14378() -> Tensor[(2025), float64] {
  %1292 = @func_5392() /* ty=(Tensor[(2025), float64],) */;
  %1292.0
}

def @func_19664() -> Tensor[(10, 9, 11), float64] {
  %1293 = @func_19304() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */;
  %1293.0
}

def @func_9038() -> (Tensor[(16, 4, 7), float32], Tensor[(2025), int64], Tensor[(2025), float32]) {
  %1294 = @func_5787() /* ty=(Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */;
  %1295 = @func_6365() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), int64]) */;
  %1296 = @func_4055() /* ty=(Tensor[(2025), float32], Tensor[(15, 9, 15), bool]) */;
  %1297 = %1294.1;
  %1298 = %1295.4;
  %1299 = %1296.0;
  (%1297, %1298, %1299)
}

def @func_14328() -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %1300 = @func_9142() /* ty=Tensor[(15, 9, 15), float32] */;
  %1301 = @func_1439() /* ty=Tensor[(10, 9, 11), float64] */;
  %1302 = @func_12506() /* ty=Tensor[(2025), float64] */;
  (%1300, %1301, %1302)
}

def @func_6091() -> (Tensor[(10, 9, 11), float64],) {
  %1303 = @func_1808() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1304 = %1303.1;
  (%1304,)
}

def @func_2567() -> (Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %1305 = @func_1060() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %1306 = @func_1808() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1307 = @func_2502() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
  %1308 = %1305.1;
  %1309 = %1306.0;
  %1310 = %1307.0;
  (%1308, %1309, %1310)
}

def @func_22065() -> (Tensor[(10, 9, 11), float32],) {
  %1311 = @func_16221() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float32]) */;
  %1312 = %1311.1;
  (%1312,)
}

def @func_12283() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(624), float64]) {
  %1313 = @func_2597() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1314 = cast(meta[relay.Constant][43] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %1315 = reshape(%1314, newshape=[12, 4, 13]) /* ty=Tensor[(12, 4, 13), float64] */;
  %1316 = @func_6859(%1315) /* ty=(Tensor[(12, 4, 13), float64], Tensor[(2025), float64], Tensor[(208), float32], Tensor[(88), float64]) */;
  %1317 = %1313.0;
  %1318 = %1316.1;
  (%1317, %1318, meta[relay.Constant][43] /* ty=Tensor[(624), float64] */)
}

def @func_15654() -> (Tensor[(10, 9, 11), float64],) {
  %1319 = @func_7872() /* ty=Tensor[(10, 9, 11), float64] */;
  (%1319,)
}

def @func_4098() -> Tensor[(2025), float32] {
  %1320 = @func_4055() /* ty=(Tensor[(2025), float32], Tensor[(15, 9, 15), bool]) */;
  %1320.0
}

def @func_10357() -> Tensor[(16, 4, 7), float32] {
  @func_7914() /* ty=Tensor[(16, 4, 7), float32] */
}

def @func_20820() -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) {
  %1321 = @func_6485() /* ty=(Tensor[(2025), float32], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %1322 = %1321.0;
  %1323 = @func_5063() /* ty=Tensor[(10, 9, 11), float64] */;
  (%1322, %1323)
}

def @func_11327(%var_11316: Tensor[(396), float32]) -> (Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float64], Tensor[(22, 4), float64], Tensor[(396), float32]) {
  %1324 = @func_11129() /* ty=Tensor[(10, 9, 11), uint32] */;
  %1325 = cast(%1324, dtype="float64") /* ty=Tensor[(10, 9, 11), float64] */;
  %1326 = @func_3116() /* ty=(Tensor[(15, 9, 15), float32],) */;
  %1327 = cast(meta[relay.Constant][44] /* ty=Tensor[(22, 4), float64] */, dtype="float64") /* ty=Tensor[(22, 4), float64] */;
  %1328 = %1326.0;
  %1329 = cast(%1328, dtype="float64") /* ty=Tensor[(15, 9, 15), float64] */;
  %1330 = cast(%var_11316, dtype="float32") /* ty=Tensor[(396), float32] */;
  %1331 = reshape(%1327, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), float64] */;
  %1332 = reshape(%1329, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %1333 = reshape(%1330, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %1334 = @func_4820(%1331, %1332, %1333) /* ty=(Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) */;
  %1335 = cos(%1325) /* ty=Tensor[(10, 9, 11), float64] */;
  %1336 = %1334.1;
  (%1335, %1328, %1336, meta[relay.Constant][44] /* ty=Tensor[(22, 4), float64] */, %var_11316)
}

def @func_20705() -> (Tensor[(2025), float64],) {
  %1337 = @func_15458() /* ty=(Tensor[(2025), float64],) */;
  %1338 = %1337.0;
  (%1338,)
}

def @func_7914() -> Tensor[(16, 4, 7), float32] {
  %1339 = @func_6278() /* ty=(Tensor[(2025), int64], Tensor[(16, 4, 7), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(44, 2), float64], Tensor[(66, 6), float32]) */;
  %1339.1
}

def @func_11876(%var_11872: Tensor[(396), float32]) -> (Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(88), float64], Tensor[(396), float32]) {
  %1340 = @func_3919() /* ty=(Tensor[(2025), float64],) */;
  %1341 = cast(meta[relay.Constant][45] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1342 = %1340.0;
  %1343 = cast(%1342, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1344 = cast(%var_11872, dtype="float32") /* ty=Tensor[(396), float32] */;
  %1345 = reshape(%1341, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), float64] */;
  %1346 = reshape(%1343, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %1347 = reshape(%1344, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %1348 = @func_4820(%1345, %1346, %1347) /* ty=(Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) */;
  %1349 = %1348.2;
  (%1342, %1349, meta[relay.Constant][45] /* ty=Tensor[(88), float64] */, %var_11872)
}

def @func_11504() -> (Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(3, 9, 2), float64]) {
  %1350 = @func_10246() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(2025), float64]) */;
  %1351 = @func_7978() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(8, 78), float32]) */;
  %1352 = @func_5867() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(3, 9, 2), float64]) */;
  %1353 = %1350.1;
  %1354 = %1351.1;
  %1355 = %1352.1;
  (%1353, %1354, %1355)
}

def @func_10536() -> (Tensor[(2025), float32],) {
  %1356 = @func_2502() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
  %1357 = %1356.1;
  (%1357,)
}

def @func_17669() -> Tensor[(2025), float32] {
  %1358 = @func_14756() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), uint32], Tensor[(16, 4, 7), float32]) */;
  %1358.0
}

def @func_22293() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %1359 = @func_12971() /* ty=Tensor[(10, 9, 11), float64] */;
  %1360 = @func_16871() /* ty=Tensor[(2025), float64] */;
  (%1359, %1360)
}

def @func_22700() -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) {
  %1361 = @func_21145() /* ty=(Tensor[(16, 4, 7), float32],) */;
  %1362 = @func_19549() /* ty=(Tensor[(16, 4, 7), float32],) */;
  %1363 = %1361.0;
  %1364 = @func_21253() /* ty=Tensor[(10, 9, 11), float64] */;
  %1365 = %1362.0;
  (%1363, %1364, %1365)
}

def @func_7819(%var_7749: Tensor[(2025), float32], %var_7801: Tensor[(10, 9, 11), float32]) -> (Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(2025), float32], Tensor[(10, 9, 11), float32], Tensor[(3, 9, 2), float64], Tensor[(2025), float32]) {
  %1366 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %1367 = @func_3168() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1368 = cast(%var_7749, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %1369 = reshape(%1368, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %1370 = @func_1593(%1369) /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(2025), float32]) */;
  %1371 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
  %1372 = @func_7519() /* ty=(Tensor[(104, 2), float32], Tensor[(10, 9, 11), float64]) */;
  %1373 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
  %1374 = %1367.0;
  %1375 = cast(%1374, dtype="uint32") /* ty=Tensor[(10, 9, 11), uint32] */;
  %1376 = reshape(%1375, newshape=[10, 9, 11]) /* ty=Tensor[(10, 9, 11), uint32] */;
  %1377 = @func_961(%1376) /* ty=Tensor[(10, 9, 11), float32] */;
  %1378 = cast(%var_7801, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
  %1379 = shape_of(%1377, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1380 = cast(%1377, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
  %1381 = dyn.reshape(%1378, %1379, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1382 = @func_7354() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) */;
  %1383 = %1366.1;
  %1384 = %1370.2;
  %1385 = %1371.0;
  %1386 = %1372.1;
  %1387 = %1373.1;
  %1388 = @func_4098() /* ty=Tensor[(2025), float32] */;
  %1389 = power(%1380, %1381) /* ty=Tensor[(10, 9, 11), float32] */;
  %1390 = @func_3226() /* ty=Tensor[(3, 9, 2), float64] */;
  %1391 = %1382.0;
  (%1383, %1374, %1384, %var_7749, %1385, %1386, %1387, %1388, %1389, %1390, %1391)
}

def @func_12060() -> (Tensor[(2025), int64], Tensor[(10, 9, 11), float32]) {
  %1392 = @func_8541() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %1393 = @func_8541() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %1394 = %1392.0;
  %1395 = %1393.4;
  (%1394, %1395)
}

def @func_9591() -> Tensor[(10, 9, 11), uint32] {
  %1396 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %1396.0
}

def @func_22514(%var_22509: Tensor[(1, 16, 8), uint32]) -> Tensor[(4, 16, 8), uint32] {
  %1397 = cast(%var_22509, dtype="uint32") /* ty=Tensor[(1, 16, 8), uint32] */;
  %1398 = cast(meta[relay.Constant][46] /* ty=Tensor[(4, 16, 8), uint32] */, dtype="uint32") /* ty=Tensor[(4, 16, 8), uint32] */;
  left_shift(%1397, %1398) /* ty=Tensor[(4, 16, 8), uint32] */
}

def @func_23503() -> (Tensor[(990), uint32],) {
  %1399 = @func_1535() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(990), uint32]) */;
  %1400 = %1399.2;
  (%1400,)
}

def @func_10461(%var_10452: Tensor[(6, 11, 6), float32]) -> Tensor[(6, 11, 6), float32] {
  %1401 = cast(%var_10452, dtype="float32") /* ty=Tensor[(6, 11, 6), float32] */;
  sin(%1401) /* ty=Tensor[(6, 11, 6), float32] */
}

def @func_8337(%var_8275: Tensor[(14, 15, 10), float64]) -> (Tensor[(10, 9, 11), float64], Tensor[(26), int16], Tensor[(14, 15, 10), int8], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32], Tensor[(2025), int64]) {
  %1402 = cast(meta[relay.Constant][47] /* ty=Tensor[(26), int16] */, dtype="int16") /* ty=Tensor[(26), int16] */;
  %1403 = reshape(%1402, newshape=[26]) /* ty=Tensor[(26), int16] */;
  %1404 = @func_7888(%1403) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(13, 2, 1), int16], int16, Tensor[(26), int16]) */;
  %1405 = cast(%var_8275, dtype="float64") /* ty=Tensor[(14, 15, 10), float64] */;
  %1406 = sinh(%1405) /* ty=Tensor[(14, 15, 10), float64] */;
  %1407 = cast(%var_8275, dtype="int8") /* ty=Tensor[(14, 15, 10), int8] */;
  %1408 = shape_of(%1406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1409 = cast(%1406, dtype="int8") /* ty=Tensor[(14, 15, 10), int8] */;
  %1410 = dyn.reshape(%1407, %1408, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1411 = @func_8019() /* ty=(Tensor[(15, 9, 15), float32],) */;
  %1412 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %1413 = @func_6657() /* ty=(Tensor[(2025), float64], Tensor[(2025), int64], Tensor[(16, 4, 7), float32]) */;
  %1414 = %1404.0;
  %1415 = maximum(%1409, %1410) /* ty=Tensor[(14, 15, 10), int8] */;
  %1416 = %1411.0;
  %1417 = %1412.2;
  %1418 = %1413.1;
  (%1414, meta[relay.Constant][47] /* ty=Tensor[(26), int16] */, %1415, %1416, %1417, %1418)
}

def @func_10009(%var_9972: Tensor[(5, 16, 2), float64]) -> (Tensor[(5, 16, 2), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(10, 9, 11), float64]) {
  %1419 = cast(%var_9972, dtype="float64") /* ty=Tensor[(5, 16, 2), float64] */;
  %1420 = @func_6485() /* ty=(Tensor[(2025), float32], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %1421 = @func_8257() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %1422 = atan(%1419) /* ty=Tensor[(5, 16, 2), float64] */;
  %1423 = %1420.2;
  %1424 = @func_4948() /* ty=Tensor[(2025), int64] */;
  %1425 = %1421.0;
  (%1422, %1423, %1424, %1425)
}

def @func_13254(%var_13248: Tensor[(88), float64]) -> (Tensor[(16, 4, 7), float32], Tensor[(88, 1), float64], Tensor[(2025), float64], Tensor[(208, 1), float32], Tensor[(88), float64]) {
  %1426 = @func_13060() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %1427 = cast(meta[relay.Constant][48] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1428 = cast(meta[relay.Constant][49] /* ty=Tensor[(208, 1), float32] */, dtype="float32") /* ty=Tensor[(208, 1), float32] */;
  %1429 = cast(%var_13248, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1430 = reshape(%1427, newshape=[27, 75]) /* ty=Tensor[(27, 75), float64] */;
  %1431 = reshape(%1428, newshape=[208]) /* ty=Tensor[(208), float32] */;
  %1432 = reshape(%1429, newshape=[88, 1]) /* ty=Tensor[(88, 1), float64] */;
  %1433 = @func_6057(%1430, %1431, %1432) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(27, 75), float32], Tensor[(10, 9, 11), float64], Tensor[(208), float32], Tensor[(88, 1), float64]) */;
  %1434 = %1426.1;
  %1435 = %1433.7;
  (%1434, %1435, meta[relay.Constant][48] /* ty=Tensor[(2025), float64] */, meta[relay.Constant][49] /* ty=Tensor[(208, 1), float32] */, %var_13248)
}

def @func_23130(%var_23127: Tensor[(16, 16, 13), float64]) -> Tensor[(16, 16, 13), float64] {
  %1436 = cast(%var_23127, dtype="float64") /* ty=Tensor[(16, 16, 13), float64] */;
  sigmoid(%1436) /* ty=Tensor[(16, 16, 13), float64] */
}

def @func_15181(%var_15178: Tensor[(14, 5, 6), float32]) -> (Tensor[(14, 5, 6), float32],) {
  %1437 = cast(%var_15178, dtype="float32") /* ty=Tensor[(14, 5, 6), float32] */;
  %1438 = acosh(%1437) /* ty=Tensor[(14, 5, 6), float32] */;
  (%1438,)
}

def @func_15475() -> Tensor[(2025), float64] {
  %1439 = @func_4327() /* ty=(Tensor[(2025), float64],) */;
  %1439.0
}

def @func_15458() -> (Tensor[(2025), float64],) {
  %1440 = @func_6160() /* ty=(Tensor[(2025), float64],) */;
  %1441 = %1440.0;
  (%1441,)
}

def @func_4155(%var_4143: int16, %var_4144: Tensor[(3, 10, 1), int16]) -> (Tensor[(3, 10, 1), int16],) {
  %1442 = cast(%var_4143, dtype="int16") /* ty=int16 */;
  %1443 = cast(%var_4144, dtype="int16") /* ty=Tensor[(3, 10, 1), int16] */;
  %1444 = left_shift(%1442, %1443) /* ty=Tensor[(3, 10, 1), int16] */;
  (%1444,)
}

def @func_11535() -> Tensor[(2025), float64] {
  @func_4466() /* ty=Tensor[(2025), float64] */
}

def @func_11451() -> (Tensor[(63), uint64], Tensor[(990), uint32], Tensor[(2025), float64]) {
  %1445 = @func_5937() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(1, 7, 9), uint64], uint64, Tensor[(63), uint64], Tensor[(2025), float64]) */;
  %1446 = cast(meta[relay.Constant][50] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1447 = reshape(%1446, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %1448 = @func_1118(%1447) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32], Tensor[(990), uint32], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float32], Tensor[(2025), float32], Tensor[(2025), bool]) */;
  %1449 = %1445.3;
  %1450 = %1448.2;
  (%1449, %1450, meta[relay.Constant][50] /* ty=Tensor[(2025), float64] */)
}

def @func_2597() -> (Tensor[(10, 9, 11), float64],) {
  %1451 = @func_1808() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1452 = %1451.1;
  (%1452,)
}

def @func_2763() -> (Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) {
  %1453 = @func_1672() /* ty=(Tensor[(15, 9, 15), float32],) */;
  %1454 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
  %1455 = %1453.0;
  %1456 = %1454.2;
  %1457 = @func_1755() /* ty=Tensor[(16, 4, 7), float32] */;
  (%1455, %1456, %1457)
}

def @func_13060() -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
  %1458 = @func_1957() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %1459 = @func_3936() /* ty=Tensor[(2025), float64] */;
  %1460 = %1458.1;
  (%1459, %1460)
}

def @func_3767(%var_3760: Tensor[(2025), float64]) -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) {
  %1461 = @func_3404() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32]) */;
  %1462 = cast(%var_3760, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1463 = reshape(%1462, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %1464 = @func_1118(%1463) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32], Tensor[(990), uint32], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float32], Tensor[(2025), float32], Tensor[(2025), bool]) */;
  %1465 = %1461.0;
  %1466 = %1464.4;
  (%1465, %1466, %var_3760)
}

def @func_2029() -> Tensor[(2025), float64] {
  %1467 = @func_1343() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */;
  %1467.1
}

def @func_12100() -> (Tensor[(10, 9, 11), float64],) {
  %1468 = @func_10205() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1469 = %1468.0;
  (%1469,)
}

def @func_1060() -> (Tensor[(2025), int8], Tensor[(2025), int64]) {
  %1470 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %1471 = %1470.2;
  %1472 = cast(%1471, dtype="float32") /* ty=Tensor[(15, 9, 15), float32] */;
  %1473 = reshape(%1472, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %1474 = @func_984(%1473) /* ty=(Tensor[(2025), int64],) */;
  %1475 = %1474.0;
  %1476 = cast(%1471, dtype="int8") /* ty=Tensor[(15, 9, 15), int8] */;
  %1477 = shape_of(%1475, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1478 = cast(%1475, dtype="int8") /* ty=Tensor[(2025), int8] */;
  %1479 = dyn.reshape(%1476, %1477, newshape=[]) /* ty=Tensor[(?), int8] */;
  %1480 = cast(%1475, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %1481 = reshape(%1480, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %1482 = @func_984(%1481) /* ty=(Tensor[(2025), int64],) */;
  %1483 = bitwise_or(%1478, %1479) /* ty=Tensor[(2025), int8] */;
  %1484 = %1482.0;
  (%1483, %1484)
}

def @func_4382() -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) {
  %1485 = @func_2567() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1486 = %1485.1;
  %1487 = cast(%1486, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1488 = reshape(%1487, newshape=[675, 3]) /* ty=Tensor[(675, 3), float64] */;
  %1489 = @func_3323(%1488) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(675, 3), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32]) */;
  %1490 = @func_1755() /* ty=Tensor[(16, 4, 7), float32] */;
  %1491 = %1489.3;
  (%1486, %1490, %1491)
}

def @func_23346() -> (Tensor[(624), float64],) {
  %1492 = @func_12283() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(624), float64]) */;
  %1493 = %1492.2;
  (%1493,)
}

def @func_9653(%var_9642: Tensor[(15, 4, 13), float64]) -> (Tensor[(15, 4, 13), float64], Tensor[(15, 4, 13), float32]) {
  %1494 = cast(%var_9642, dtype="float64") /* ty=Tensor[(15, 4, 13), float64] */;
  %1495 = cast(%var_9642, dtype="float32") /* ty=Tensor[(15, 4, 13), float32] */;
  %1496 = asinh(%1494) /* ty=Tensor[(15, 4, 13), float64] */;
  %1497 = cosh(%1495) /* ty=Tensor[(15, 4, 13), float32] */;
  (%1496, %1497)
}

def @func_5392() -> (Tensor[(2025), float64],) {
  %1498 = @func_3059() /* ty=Tensor[(2025), float64] */;
  (%1498,)
}

def @func_21965() -> (Tensor[(7, 9, 10), float32], Tensor[(6, 11, 6), float32]) {
  %1499 = @func_12204() /* ty=(Tensor[(7, 9, 10), float32],) */;
  %1500 = %1499.0;
  %1501 = cast(%1500, dtype="float32") /* ty=Tensor[(7, 9, 10), float32] */;
  %1502 = @func_18526() /* ty=(Tensor[(2025), int64], Tensor[(7, 9, 10), float32], Tensor[(6, 11, 6), float32], Tensor[(1, 396), float32]) */;
  %1503 = %1502.2;
  %1504 = cast(%1503, dtype="float32") /* ty=Tensor[(6, 11, 6), float32] */;
  %1505 = sqrt(%1501) /* ty=Tensor[(7, 9, 10), float32] */;
  %1506 = cos(%1504) /* ty=Tensor[(6, 11, 6), float32] */;
  (%1505, %1506)
}

def @func_14144(%var_14118: Tensor[(2100), float64]) -> (Tensor[(10, 9, 11), float32], Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(2100), float64], Tensor[(2025), float64]) {
  %1507 = @func_12356() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */;
  %1508 = cast(%var_14118, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %1509 = reshape(%1508, newshape=[14, 15, 10]) /* ty=Tensor[(14, 15, 10), float64] */;
  %1510 = @func_8337(%1509) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(26), int16], Tensor[(14, 15, 10), int8], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32], Tensor[(2025), int64]) */;
  %1511 = @func_7277() /* ty=Tensor[(10, 9, 11), float32] */;
  %1512 = %1507.1;
  %1513 = %1510.3;
  %1514 = @func_13236() /* ty=Tensor[(2025), float64] */;
  (%1511, %1512, %1513, %var_14118, %1514)
}

def @func_14856(%var_14841: Tensor[(63), uint64]) -> (Tensor[(10, 9, 11), float64], Tensor[(1, 7, 9), uint64], uint64, Tensor[(63), uint64]) {
  %1515 = @func_10205() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1516 = cast(meta[relay.Constant][51] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1517 = cast(%var_14841, dtype="uint64") /* ty=Tensor[(63), uint64] */;
  %1518 = reshape(%1516, newshape=[]) /* ty=uint64 */;
  %1519 = reshape(%1517, newshape=[1, 7, 9]) /* ty=Tensor[(1, 7, 9), uint64] */;
  %1520 = @func_5407(%1518, %1519) /* ty=(Tensor[(1, 7, 9), uint64],) */;
  %1521 = %1515.0;
  %1522 = %1520.0;
  (%1521, %1522, meta[relay.Constant][51] /* ty=uint64 */, %var_14841)
}

def @func_21690(%var_21678: Tensor[(2025), float64]) -> (Tensor[(7, 9, 10), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %1523 = @func_21293() /* ty=Tensor[(7, 9, 10), float32] */;
  %1524 = cast(%1523, dtype="float32") /* ty=Tensor[(7, 9, 10), float32] */;
  %1525 = cast(%var_21678, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1526 = reshape(%1525, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %1527 = @func_7574(%1526) /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
  %1528 = acosh(%1524) /* ty=Tensor[(7, 9, 10), float32] */;
  %1529 = %1527.1;
  (%1528, %1529, %var_21678)
}

def @func_2832() -> (Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(2025), int64]) {
  %1530 = @func_1808() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1531 = %1530.1;
  %1532 = cast(%1531, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
  %1533 = @func_2763() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) */;
  %1534 = @func_2108() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1535 = @func_2567() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1536 = atan(%1532) /* ty=Tensor[(10, 9, 11), float32] */;
  %1537 = %1533.1;
  %1538 = %1534.0;
  %1539 = %1535.0;
  (%1536, %1537, %1538, %1539)
}

def @func_1827() -> Tensor[(10, 9, 11), float64] {
  %1540 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %1540.1
}

def @func_12506() -> Tensor[(2025), float64] {
  %1541 = @func_6880() /* ty=(Tensor[(2025), float64],) */;
  %1541.0
}

def @func_6429() -> (Tensor[(2025), int64],) {
  %1542 = @func_2832() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(2025), int64]) */;
  %1543 = %1542.3;
  (%1543,)
}

def @func_16221() -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float32]) {
  %1544 = @func_14024() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) */;
  %1545 = @func_1790() /* ty=Tensor[(16, 4, 7), float32] */;
  %1546 = %1544.0;
  (%1545, %1546)
}

def @func_12632() -> (Tensor[(2025), float64],) {
  %1547 = @func_2029() /* ty=Tensor[(2025), float64] */;
  (%1547,)
}

def @func_16593() -> (Tensor[(10, 9, 11), float32], Tensor[(2025), float64], Tensor[(2025), float64]) {
  %1548 = @func_15458() /* ty=(Tensor[(2025), float64],) */;
  %1549 = @func_11082() /* ty=(Tensor[(2025), float64],) */;
  %1550 = @func_9343() /* ty=Tensor[(10, 9, 11), float32] */;
  %1551 = %1548.0;
  %1552 = %1549.0;
  (%1550, %1551, %1552)
}

def @func_13451() -> (Tensor[(16, 4, 7), float32], Tensor[(2025), float64], Tensor[(396), float32], Tensor[(2025), int8], Tensor[(2025), float64]) {
  %1553 = cast(meta[relay.Constant][52] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %1554 = reshape(%1553, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %1555 = @func_11327(%1554) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float64], Tensor[(22, 4), float64], Tensor[(396), float32]) */;
  %1556 = @func_5787() /* ty=(Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */;
  %1557 = @func_6278() /* ty=(Tensor[(2025), int64], Tensor[(16, 4, 7), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(44, 2), float64], Tensor[(66, 6), float32]) */;
  %1558 = @func_10741() /* ty=Tensor[(16, 4, 7), float32] */;
  %1559 = %1555.2;
  %1560 = %1556.0;
  %1561 = %1557.2;
  (%1558, %1559, meta[relay.Constant][52] /* ty=Tensor[(396), float32] */, %1560, %1561)
}

def @func_22252() -> (Tensor[(10, 9, 11), float64],) {
  %1562 = @func_12100() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1563 = %1562.0;
  (%1563,)
}

def @func_22634() -> (Tensor[(10, 9, 11), float32],) {
  %1564 = @func_15072() /* ty=(Tensor[(10, 9, 11), float32],) */;
  %1565 = %1564.0;
  (%1565,)
}

def @func_22621() -> Tensor[(7, 9, 10), float32] {
  %1566 = @func_13607() /* ty=(Tensor[(7, 9, 10), float32], Tensor[(7, 9, 10), float32], Tensor[(88), float64], Tensor[(88), float64], Tensor[(990), uint32]) */;
  %1566.0
}

def @func_11628() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(351, 1), float64]) {
  %1567 = cast(meta[relay.Constant][53] /* ty=Tensor[(351, 1), float64] */, dtype="float64") /* ty=Tensor[(351, 1), float64] */;
  %1568 = reshape(%1567, newshape=[9, 3, 13]) /* ty=Tensor[(9, 3, 13), float64] */;
  %1569 = @func_9777(%1568) /* ty=(Tensor[(9, 3, 13), float64], Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(52, 4), float32], Tensor[(1, 88), float64]) */;
  %1570 = @func_3412() /* ty=Tensor[(10, 9, 11), float64] */;
  %1571 = %1569.1;
  (%1570, %1571, meta[relay.Constant][53] /* ty=Tensor[(351, 1), float64] */)
}

def @func_5867() -> (Tensor[(10, 9, 11), float64], Tensor[(3, 9, 2), float64]) {
  %1572 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1573 = %1572.0;
  %1574 = @func_3226() /* ty=Tensor[(3, 9, 2), float64] */;
  (%1573, %1574)
}

def @func_1755() -> Tensor[(16, 4, 7), float32] {
  %1575 = cast(meta[relay.Constant][54] /* ty=Tensor[(16, 4, 7), float32] */, dtype="float32") /* ty=Tensor[(16, 4, 7), float32] */;
  sin(%1575) /* ty=Tensor[(16, 4, 7), float32] */
}

def @func_12356() -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  %1576 = @func_9719() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */;
  %1577 = @func_10350() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */;
  %1578 = %1576.0;
  %1579 = %1577.1;
  (%1578, %1579)
}

def @func_17433() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), float32]) {
  %1580 = @func_7857() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1581 = %1580.0;
  %1582 = @func_14892() /* ty=Tensor[(10, 9, 11), float32] */;
  %1583 = @func_15569() /* ty=Tensor[(15, 9, 15), float32] */;
  (%1581, %1582, %1583)
}

def @func_20293() -> (Tensor[(10, 9, 11), float64],) {
  %1584 = @func_10205() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1585 = %1584.0;
  (%1585,)
}

def @func_1790() -> Tensor[(16, 4, 7), float32] {
  @func_1755() /* ty=Tensor[(16, 4, 7), float32] */
}

def @func_9343() -> Tensor[(10, 9, 11), float32] {
  %1586 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %1586.1
}

def @func_8605() -> (Tensor[(10, 9, 11), float32], Tensor[(2025), int8]) {
  %1587 = @func_4861() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */;
  %1588 = @func_7277() /* ty=Tensor[(10, 9, 11), float32] */;
  %1589 = %1587.1;
  (%1588, %1589)
}

def @func_17568() -> (Tensor[(16, 4, 7), float32], Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(3, 9, 2), float64], int16, Tensor[(15, 9, 15), float32], Tensor[(26), float32]) {
  %1590 = @func_14601() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %1591 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %1592 = @func_4327() /* ty=(Tensor[(2025), float64],) */;
  %1593 = @func_4861() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */;
  %1594 = cast(meta[relay.Constant][55] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1595 = cast(meta[relay.Constant][56] /* ty=Tensor[(26), int16] */, dtype="int16") /* ty=Tensor[(26), int16] */;
  %1596 = reshape(%1594, newshape=[]) /* ty=int16 */;
  %1597 = reshape(%1595, newshape=[13, 2, 1]) /* ty=Tensor[(13, 2, 1), int16] */;
  %1598 = @func_7149(%1596, %1597) /* ty=(Tensor[(13, 2, 1), int16], Tensor[(3, 9, 2), float64]) */;
  %1599 = @func_17433() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), float32]) */;
  %1600 = cast(meta[relay.Constant][56] /* ty=Tensor[(26), int16] */, dtype="float32") /* ty=Tensor[(26), float32] */;
  %1601 = %1590.0;
  %1602 = %1591.1;
  %1603 = %1592.0;
  %1604 = %1593.0;
  %1605 = %1598.1;
  %1606 = %1599.2;
  %1607 = asinh(%1600) /* ty=Tensor[(26), float32] */;
  (%1601, %1602, %1603, %1604, %1605, meta[relay.Constant][55] /* ty=int16 */, %1606, %1607)
}

def @func_5970() -> Tensor[(2025), float32] {
  %1608 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %1609 = %1608.1;
  %1610 = cast(%1609, dtype="float32") /* ty=Tensor[(2025), float32] */;
  cos(%1610) /* ty=Tensor[(2025), float32] */
}

def @func_8982(%var_8954: Tensor[(12, 3, 16), uint16], %var_8955: Tensor[(12, 3, 16), uint16]) -> (Tensor[(12, 3, 16), uint16], Tensor[(15, 9, 15), uint16], Tensor[(675, 3), bool]) {
  %1611 = cast(%var_8955, dtype="uint16") /* ty=Tensor[(12, 3, 16), uint16] */;
  %1612 = shape_of(%var_8954, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1613 = cast(%var_8954, dtype="uint16") /* ty=Tensor[(12, 3, 16), uint16] */;
  %1614 = dyn.reshape(%1611, %1612, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1615 = cast(meta[relay.Constant][57] /* ty=Tensor[(675, 3), bool] */, dtype="bool") /* ty=Tensor[(675, 3), bool] */;
  %1616 = reshape(%1615, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), bool] */;
  %1617 = left_shift(%1613, %1614) /* ty=Tensor[(12, 3, 16), uint16] */;
  %1618 = @func_6973(%1616) /* ty=Tensor[(15, 9, 15), uint16] */;
  (%1617, %1618, meta[relay.Constant][57] /* ty=Tensor[(675, 3), bool] */)
}

def @func_7096() -> (Tensor[(10, 9, 11), float64],) {
  %1619 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1620 = %1619.0;
  (%1620,)
}

def @func_22952() -> (Tensor[(2025), float64],) {
  %1621 = @func_11504() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(3, 9, 2), float64]) */;
  %1622 = %1621.0;
  (%1622,)
}

def @func_19230() -> Tensor[(2025), float64] {
  %1623 = @func_12751() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(88), float64], Tensor[(6, 66), float32], Tensor[(2025), float64], Tensor[(396), float32]) */;
  %1623.4
}

def @func_22377() -> (Tensor[(7, 9, 10), float32],) {
  %1624 = @func_10811() /* ty=Tensor[(7, 9, 10), float32] */;
  (%1624,)
}

def @func_1957() -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
  %1625 = @func_1880() /* ty=Tensor[(2025), float64] */;
  %1626 = @func_1755() /* ty=Tensor[(16, 4, 7), float32] */;
  (%1625, %1626)
}

def @func_7641() -> Tensor[(2025), float64] {
  %1627 = @func_6160() /* ty=(Tensor[(2025), float64],) */;
  %1627.0
}

def @func_4778(%var_4746: Tensor[(2025), float64]) -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  %1628 = @func_3919() /* ty=(Tensor[(2025), float64],) */;
  %1629 = %1628.0;
  %1630 = cast(%var_4746, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1631 = shape_of(%1629, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1632 = cast(%1629, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1633 = dyn.reshape(%1630, %1631, newshape=[]) /* ty=Tensor[(?), float64] */;
  %1634 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
  %1635 = floor_mod(%1632, %1633) /* ty=Tensor[(2025), float64] */;
  %1636 = %1634.0;
  (%1635, %1636)
}

def @func_11680() -> (Tensor[(2025), int64],) {
  %1637 = @func_6429() /* ty=(Tensor[(2025), int64],) */;
  %1638 = %1637.0;
  (%1638,)
}

def @func_14892() -> Tensor[(10, 9, 11), float32] {
  %1639 = @func_14159() /* ty=(Tensor[(10, 9, 11), float32],) */;
  %1639.0
}

def @func_15847() -> (Tensor[(7, 9, 10), uint8], Tensor[(7, 9, 10), float32], Tensor[(2025), float64], Tensor[(2025), float64]) {
  %1640 = @func_11048() /* ty=Tensor[(7, 9, 10), float32] */;
  %1641 = cast(meta[relay.Constant][58] /* ty=Tensor[(7, 9, 10), float32] */, dtype="uint8") /* ty=Tensor[(7, 9, 10), uint8] */;
  %1642 = shape_of(%1640, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1643 = cast(%1640, dtype="uint8") /* ty=Tensor[(7, 9, 10), uint8] */;
  %1644 = dyn.reshape(%1641, %1642, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1645 = cast(meta[relay.Constant][58] /* ty=Tensor[(7, 9, 10), float32] */, dtype="float32") /* ty=Tensor[(7, 9, 10), float32] */;
  %1646 = @func_5392() /* ty=(Tensor[(2025), float64],) */;
  %1647 = @func_1957() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %1648 = left_shift(%1643, %1644) /* ty=Tensor[(7, 9, 10), uint8] */;
  %1649 = exp(%1645) /* ty=Tensor[(7, 9, 10), float32] */;
  %1650 = %1646.0;
  %1651 = %1647.0;
  (%1648, %1649, %1650, %1651)
}

def @func_20962() -> Tensor[(10, 9, 11), float64] {
  %1652 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1652.0
}

def @func_5008(%var_4983: Tensor[(8, 13, 2), float32], %var_4984: Tensor[(8, 13, 2), float32], %var_4991: Tensor[(88), float64]) -> (Tensor[(8, 13, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(88), float64], Tensor[(2025), float64], Tensor[(396), float32]) {
  %1653 = cast(%var_4984, dtype="float32") /* ty=Tensor[(8, 13, 2), float32] */;
  %1654 = shape_of(%var_4983, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1655 = cast(%var_4983, dtype="float32") /* ty=Tensor[(8, 13, 2), float32] */;
  %1656 = dyn.reshape(%1653, %1654, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1657 = cast(%var_4991, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1658 = cast(meta[relay.Constant][59] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1659 = cast(meta[relay.Constant][60] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %1660 = reshape(%1657, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), float64] */;
  %1661 = reshape(%1658, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %1662 = reshape(%1659, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %1663 = @func_4820(%1660, %1661, %1662) /* ty=(Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) */;
  %1664 = floor_divide(%1655, %1656) /* ty=Tensor[(8, 13, 2), float32] */;
  %1665 = @func_3412() /* ty=Tensor[(10, 9, 11), float64] */;
  %1666 = %1663.4;
  (%1664, %1665, %1666, %var_4991, meta[relay.Constant][59] /* ty=Tensor[(2025), float64] */, meta[relay.Constant][60] /* ty=Tensor[(396), float32] */)
}

def @func_16550() -> (Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(15, 9, 15), float32]) {
  %1667 = @func_11680() /* ty=(Tensor[(2025), int64],) */;
  %1668 = @func_4327() /* ty=(Tensor[(2025), float64],) */;
  %1669 = @func_9290() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64]) */;
  %1670 = %1667.0;
  %1671 = %1668.0;
  %1672 = %1669.0;
  (%1670, %1671, %1672)
}

def @func_20081() -> (Tensor[(2025), int8], Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
  %1673 = @func_2935() /* ty=(Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) */;
  %1674 = @func_19549() /* ty=(Tensor[(16, 4, 7), float32],) */;
  %1675 = %1673.0;
  %1676 = @func_9233() /* ty=Tensor[(2025), float64] */;
  %1677 = %1674.0;
  (%1675, %1676, %1677)
}

def @func_6926() -> (Tensor[(15, 9, 15), bool],) {
  %1678 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
  %1679 = %1678.2;
  (%1679,)
}

def @func_4280(%var_4271: Tensor[(10, 9, 11), float32]) -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) {
  %1680 = @func_1808() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1681 = @func_1957() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %1682 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %1683 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %1684 = %1683.1;
  %1685 = cast(%var_4271, dtype="float64") /* ty=Tensor[(10, 9, 11), float64] */;
  %1686 = shape_of(%1684, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1687 = cast(%1684, dtype="float64") /* ty=Tensor[(10, 9, 11), float64] */;
  %1688 = dyn.reshape(%1685, %1686, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1689 = %1680.0;
  %1690 = %1681.1;
  %1691 = %1682.3;
  %1692 = mod(%1687, %1688) /* ty=Tensor[(10, 9, 11), float64] */;
  (%1689, %1690, %1691, %1692)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11048() -> Tensor[(7, 9, 10), float32] {
  @func_10811() /* ty=Tensor[(7, 9, 10), float32] */
}

def @func_11452() -> (Tensor[(63), uint64], Tensor[(990), uint32], Tensor[(2025), float64]) {
  %6 = fn () -> (Tensor[(63), uint64], Tensor[(990), uint32], Tensor[(2025), float64]) {
    %0 = @func_5937() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(1, 7, 9), uint64], uint64, Tensor[(63), uint64], Tensor[(2025), float64]) */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %2 = reshape(%1, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %3 = @func_1118(%2) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32], Tensor[(990), uint32], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float32], Tensor[(2025), float32], Tensor[(2025), bool]) */;
    %4 = %0.3;
    %5 = %3.2;
    (%4, %5, meta[relay.Constant][0] /* ty=Tensor[(2025), float64] */)
  };
  %6() /* ty=(Tensor[(63), uint64], Tensor[(990), uint32], Tensor[(2025), float64]) */
}

def @func_8049() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  @func_8047() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_19491() -> (Tensor[(2025), float32],) {
  @func_19489() /* ty=(Tensor[(2025), float32],) */
}

def @func_7464() -> (Tensor[(10, 9, 11), float64],) {
  %8 = fn () -> (Tensor[(10, 9, 11), float64],) {
    %7 = @func_3412() /* ty=Tensor[(10, 9, 11), float64] */;
    (%7,)
  };
  %8() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_16595() -> (Tensor[(10, 9, 11), float32], Tensor[(2025), float64], Tensor[(2025), float64]) {
  @func_16593() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), float64], Tensor[(2025), float64]) */
}

def @func_19858(%var_19835: Tensor[(2025), float64]) -> (Tensor[(2025), bool], Tensor[(16, 4, 7), float32]) {
  %9 = @func_6160() /* ty=(Tensor[(2025), float64],) */;
  %10 = %9.0;
  %11 = cast(%var_19835, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %12 = shape_of(%10, dtype="int32") /* ty=Tensor[(1), int32] */;
  %13 = cast(%10, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?), bool] */;
  %15 = @func_6485() /* ty=(Tensor[(2025), float32], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %16 = less_equal(%13, %14) /* ty=Tensor[(2025), bool] */;
  %17 = %15.1;
  (%16, %17)
}

def @func_7278() -> Tensor[(10, 9, 11), float32] {
  %19 = fn () -> Tensor[(10, 9, 11), float32] {
    %18 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
    %18.1
  };
  %19() /* ty=Tensor[(10, 9, 11), float32] */
}

def @func_18473() -> Tensor[(2025), float64] {
  %20 = fn () -> Tensor[(2025), float64] {
    @func_2029() /* ty=Tensor[(2025), float64] */
  };
  %20() /* ty=Tensor[(2025), float64] */
}

def @func_4825(%var_4822: Tensor[(11, 1, 8), float64], %var_4823: Tensor[(2025), float64], %var_4824: Tensor[(6, 66), float32]) -> (Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) {
  @func_4820(%var_4822, %var_4823, %var_4824) /* ty=(Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) */
}

def @func_19918() -> (Tensor[(10, 9, 11), float64], Tensor[(11, 11, 14), float32], Tensor[(1694), float32]) {
  %29 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(11, 11, 14), float32], Tensor[(1694), float32]) {
    %21 = @func_10604() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %22 = cast(meta[relay.Constant][1] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
    %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
    %24 = reshape(%22, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
    %25 = reshape(%23, newshape=[11, 11, 14]) /* ty=Tensor[(11, 11, 14), float32] */;
    %26 = @func_18348(%24, %25) /* ty=(Tensor[(11, 11, 14), float32],) */;
    %27 = %21.0;
    %28 = %26.0;
    (%27, %28, meta[relay.Constant][1] /* ty=Tensor[(1694), float32] */)
  };
  %29() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(11, 11, 14), float32], Tensor[(1694), float32]) */
}

def @func_16325() -> (Tensor[(10, 9, 11), float64], Tensor[(88), float64]) {
  %30 = @func_13083() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(88), float64]) */;
  %31 = @func_1827() /* ty=Tensor[(10, 9, 11), float64] */;
  %32 = %30.1;
  (%31, %32)
}

def @func_10463(%var_10462: Tensor[(6, 11, 6), float32]) -> Tensor[(6, 11, 6), float32] {
  %34 = fn (%var_10452: Tensor[(6, 11, 6), float32]) -> Tensor[(6, 11, 6), float32] {
    %33 = cast(%var_10452, dtype="float32") /* ty=Tensor[(6, 11, 6), float32] */;
    sin(%33) /* ty=Tensor[(6, 11, 6), float32] */
  };
  %34(%var_10462) /* ty=Tensor[(6, 11, 6), float32] */
}

def @func_2832() -> (Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(2025), int64]) {
  %35 = @func_1808() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %36 = %35.1;
  %37 = cast(%36, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
  %38 = @func_2763() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) */;
  %39 = @func_2108() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %40 = @func_2567() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %41 = atan(%37) /* ty=Tensor[(10, 9, 11), float32] */;
  %42 = %38.1;
  %43 = %39.0;
  %44 = %40.0;
  (%41, %42, %43, %44)
}

def @func_12102() -> (Tensor[(10, 9, 11), float64],) {
  @func_12100() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_17570() -> (Tensor[(16, 4, 7), float32], Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(3, 9, 2), float64], int16, Tensor[(15, 9, 15), float32], Tensor[(26), float32]) {
  @func_17568() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(3, 9, 2), float64], int16, Tensor[(15, 9, 15), float32], Tensor[(26), float32]) */
}

def @func_9656(%var_9654: Tensor[(15, 4, 13), float64]) -> (Tensor[(15, 4, 13), float64], Tensor[(15, 4, 13), float32]) {
  @func_9653(%var_9654) /* ty=(Tensor[(15, 4, 13), float64], Tensor[(15, 4, 13), float32]) */
}

def @func_3890() -> Tensor[(10, 9, 11), float32] {
  @func_3888() /* ty=Tensor[(10, 9, 11), float32] */
}

def @func_12284() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(624), float64]) {
  %51 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(624), float64]) {
    %45 = @func_2597() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %46 = cast(meta[relay.Constant][2] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
    %47 = reshape(%46, newshape=[12, 4, 13]) /* ty=Tensor[(12, 4, 13), float64] */;
    %48 = @func_6859(%47) /* ty=(Tensor[(12, 4, 13), float64], Tensor[(2025), float64], Tensor[(208), float32], Tensor[(88), float64]) */;
    %49 = %45.0;
    %50 = %48.1;
    (%49, %50, meta[relay.Constant][2] /* ty=Tensor[(624), float64] */)
  };
  %51() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(624), float64]) */
}

def @func_6658() -> (Tensor[(2025), float64], Tensor[(2025), int64], Tensor[(16, 4, 7), float32]) {
  %57 = fn () -> (Tensor[(2025), float64], Tensor[(2025), int64], Tensor[(16, 4, 7), float32]) {
    %52 = @func_6160() /* ty=(Tensor[(2025), float64],) */;
    %53 = @func_4861() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */;
    %54 = %52.0;
    %55 = @func_4948() /* ty=Tensor[(2025), int64] */;
    %56 = %53.3;
    (%54, %55, %56)
  };
  %57() /* ty=(Tensor[(2025), float64], Tensor[(2025), int64], Tensor[(16, 4, 7), float32]) */
}

def @func_7183() -> (Tensor[(2025), float32], Tensor[(2025), int64]) {
  %58 = @func_4098() /* ty=Tensor[(2025), float32] */;
  %59 = cast(%58, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %60 = reshape(%59, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %61 = @func_984(%60) /* ty=(Tensor[(2025), int64],) */;
  %62 = %61.0;
  (%58, %62)
}

def @func_22224() -> (Tensor[(10, 9, 11), float32], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64], Tensor[(180), int16]) {
  @func_22222() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64], Tensor[(180), int16]) */
}

def @func_23346() -> (Tensor[(624), float64],) {
  %63 = @func_12283() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(624), float64]) */;
  %64 = %63.2;
  (%64,)
}

def @func_1441() -> Tensor[(10, 9, 11), float64] {
  @func_1439() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_8985(%var_8983: Tensor[(12, 3, 16), uint16], %var_8984: Tensor[(12, 3, 16), uint16]) -> (Tensor[(12, 3, 16), uint16], Tensor[(15, 9, 15), uint16], Tensor[(675, 3), bool]) {
  %73 = fn (%var_8954: Tensor[(12, 3, 16), uint16], %var_8955: Tensor[(12, 3, 16), uint16]) -> (Tensor[(12, 3, 16), uint16], Tensor[(15, 9, 15), uint16], Tensor[(675, 3), bool]) {
    %65 = cast(%var_8955, dtype="uint16") /* ty=Tensor[(12, 3, 16), uint16] */;
    %66 = shape_of(%var_8954, dtype="int32") /* ty=Tensor[(3), int32] */;
    %67 = cast(%var_8954, dtype="uint16") /* ty=Tensor[(12, 3, 16), uint16] */;
    %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %69 = cast(meta[relay.Constant][3] /* ty=Tensor[(675, 3), bool] */, dtype="bool") /* ty=Tensor[(675, 3), bool] */;
    %70 = reshape(%69, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), bool] */;
    %71 = left_shift(%67, %68) /* ty=Tensor[(12, 3, 16), uint16] */;
    %72 = @func_6973(%70) /* ty=Tensor[(15, 9, 15), uint16] */;
    (%71, %72, meta[relay.Constant][3] /* ty=Tensor[(675, 3), bool] */)
  };
  %73(%var_8983, %var_8984) /* ty=(Tensor[(12, 3, 16), uint16], Tensor[(15, 9, 15), uint16], Tensor[(675, 3), bool]) */
}

def @func_10009(%var_9972: Tensor[(5, 16, 2), float64]) -> (Tensor[(5, 16, 2), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(10, 9, 11), float64]) {
  %74 = cast(%var_9972, dtype="float64") /* ty=Tensor[(5, 16, 2), float64] */;
  %75 = @func_6485() /* ty=(Tensor[(2025), float32], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %76 = @func_8257() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %77 = atan(%74) /* ty=Tensor[(5, 16, 2), float64] */;
  %78 = %75.2;
  %79 = @func_4948() /* ty=Tensor[(2025), int64] */;
  %80 = %76.0;
  (%77, %78, %79, %80)
}

def @func_2937() -> (Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) {
  @func_2935() /* ty=(Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) */
}

def @func_7096() -> (Tensor[(10, 9, 11), float64],) {
  %81 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %82 = %81.0;
  (%82,)
}

def @func_10012(%var_10010: Tensor[(5, 16, 2), float64]) -> (Tensor[(5, 16, 2), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(10, 9, 11), float64]) {
  @func_10009(%var_10010) /* ty=(Tensor[(5, 16, 2), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(10, 9, 11), float64]) */
}

def @func_4056() -> (Tensor[(2025), float32], Tensor[(15, 9, 15), bool]) {
  %87 = fn () -> (Tensor[(2025), float32], Tensor[(15, 9, 15), bool]) {
    %83 = @func_2502() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
    %84 = @func_3404() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32]) */;
    %85 = %83.1;
    %86 = %84.2;
    (%85, %86)
  };
  %87() /* ty=(Tensor[(2025), float32], Tensor[(15, 9, 15), bool]) */
}

def @func_22434() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  @func_22432() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_21056(%var_21054: uint32, %var_21055: Tensor[(39), uint32]) -> (Tensor[(10, 9, 11), uint32], Tensor[(13, 1, 3), uint32], uint32, Tensor[(39), uint32]) {
  @func_21052(%var_21054, %var_21055) /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(13, 1, 3), uint32], uint32, Tensor[(39), uint32]) */
}

def @func_17021() -> (Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), float64]) {
  %88 = @func_8569() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool]) */;
  %89 = @func_6880() /* ty=(Tensor[(2025), float64],) */;
  %90 = %88.0;
  %91 = @func_14378() /* ty=Tensor[(2025), float64] */;
  %92 = %89.0;
  (%90, %91, %92)
}

def @func_9365() -> (Tensor[(2025), float32], Tensor[(2025), float64], Tensor[(2025), int64]) {
  %100 = fn () -> (Tensor[(2025), float32], Tensor[(2025), float64], Tensor[(2025), int64]) {
    %93 = @func_5970() /* ty=Tensor[(2025), float32] */;
    %94 = cast(%93, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %95 = reshape(%94, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %96 = @func_4778(%95) /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */;
    %97 = @func_7235() /* ty=(Tensor[(2025), int64],) */;
    %98 = %96.1;
    %99 = %97.0;
    (%93, %98, %99)
  };
  %100() /* ty=(Tensor[(2025), float32], Tensor[(2025), float64], Tensor[(2025), int64]) */
}

def @func_1756() -> Tensor[(16, 4, 7), float32] {
  %102 = fn () -> Tensor[(16, 4, 7), float32] {
    %101 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 4, 7), float32] */, dtype="float32") /* ty=Tensor[(16, 4, 7), float32] */;
    sin(%101) /* ty=Tensor[(16, 4, 7), float32] */
  };
  %102() /* ty=Tensor[(16, 4, 7), float32] */
}

def @func_10743() -> Tensor[(16, 4, 7), float32] {
  @func_10741() /* ty=Tensor[(16, 4, 7), float32] */
}

def @func_7192() -> (Tensor[(10, 9, 11), float64],) {
  %103 = @func_3412() /* ty=Tensor[(10, 9, 11), float64] */;
  (%103,)
}

def @func_14160() -> (Tensor[(10, 9, 11), float32],) {
  %106 = fn () -> (Tensor[(10, 9, 11), float32],) {
    %104 = @func_14024() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) */;
    %105 = %104.0;
    (%105,)
  };
  %106() /* ty=(Tensor[(10, 9, 11), float32],) */
}

def @func_8543() -> (Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) {
  @func_8541() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */
}

def @func_17434() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), float32]) {
  %111 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), float32]) {
    %107 = @func_7857() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %108 = %107.0;
    %109 = @func_14892() /* ty=Tensor[(10, 9, 11), float32] */;
    %110 = @func_15569() /* ty=Tensor[(15, 9, 15), float32] */;
    (%108, %109, %110)
  };
  %111() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), float32]) */
}

def @func_11246() -> (Tensor[(2025), int64],) {
  %114 = fn () -> (Tensor[(2025), int64],) {
    %112 = @func_7235() /* ty=(Tensor[(2025), int64],) */;
    %113 = %112.0;
    (%113,)
  };
  %114() /* ty=(Tensor[(2025), int64],) */
}

def @func_21410() -> (Tensor[(10, 9, 11), float64],) {
  %117 = fn () -> (Tensor[(10, 9, 11), float64],) {
    %115 = @func_8928() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(2025), float64]) */;
    %116 = %115.0;
    (%116,)
  };
  %117() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_11504() -> (Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(3, 9, 2), float64]) {
  %118 = @func_10246() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(2025), float64]) */;
  %119 = @func_7978() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(8, 78), float32]) */;
  %120 = @func_5867() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(3, 9, 2), float64]) */;
  %121 = %118.1;
  %122 = %119.1;
  %123 = %120.1;
  (%121, %122, %123)
}

def @func_19231() -> Tensor[(2025), float64] {
  %125 = fn () -> Tensor[(2025), float64] {
    %124 = @func_12751() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(88), float64], Tensor[(6, 66), float32], Tensor[(2025), float64], Tensor[(396), float32]) */;
    %124.4
  };
  %125() /* ty=Tensor[(2025), float64] */
}

def @func_6672() -> Tensor[(10, 9, 11), float64] {
  %126 = @func_2228() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64]) */;
  %126.4
}

def @func_3936() -> Tensor[(2025), float64] {
  %127 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
  %127.0
}

def @func_5148() -> (Tensor[(15, 9, 15), bool],) {
  @func_5146() /* ty=(Tensor[(15, 9, 15), bool],) */
}

def @func_6881() -> (Tensor[(2025), float64],) {
  %130 = fn () -> (Tensor[(2025), float64],) {
    %128 = @func_4327() /* ty=(Tensor[(2025), float64],) */;
    %129 = %128.0;
    (%129,)
  };
  %130() /* ty=(Tensor[(2025), float64],) */
}

def @func_6365() -> (Tensor[(15, 9, 15), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), int64]) {
  %131 = @func_3511() /* ty=(Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) */;
  %132 = @func_2108() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %133 = @func_5486() /* ty=(Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(15, 9, 15), float32]) */;
  %134 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %135 = %131.1;
  %136 = @func_2029() /* ty=Tensor[(2025), float64] */;
  %137 = %132.0;
  %138 = %133.2;
  %139 = %134.1;
  (%135, %136, %137, %138, %139)
}

def @func_13237() -> Tensor[(2025), float64] {
  %141 = fn () -> Tensor[(2025), float64] {
    %140 = @func_11504() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(3, 9, 2), float64]) */;
    %140.0
  };
  %141() /* ty=Tensor[(2025), float64] */
}

def @func_20565(%var_20563: Tensor[(6, 1, 2), float32], %var_20564: Tensor[(6, 11, 2), float32]) -> (Tensor[(6, 11, 2), float32],) {
  %145 = fn (%var_20557: Tensor[(6, 1, 2), float32], %var_20558: Tensor[(6, 11, 2), float32]) -> (Tensor[(6, 11, 2), float32],) {
    %142 = cast(%var_20557, dtype="float32") /* ty=Tensor[(6, 1, 2), float32] */;
    %143 = cast(%var_20558, dtype="float32") /* ty=Tensor[(6, 11, 2), float32] */;
    %144 = divide(%142, %143) /* ty=Tensor[(6, 11, 2), float32] */;
    (%144,)
  };
  %145(%var_20563, %var_20564) /* ty=(Tensor[(6, 11, 2), float32],) */
}

def @func_21329() -> Tensor[(6, 66), float32] {
  %146 = @func_20453() /* ty=(Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) */;
  %146.1
}

def @func_20820() -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) {
  %147 = @func_6485() /* ty=(Tensor[(2025), float32], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %148 = %147.0;
  %149 = @func_5063() /* ty=Tensor[(10, 9, 11), float64] */;
  (%148, %149)
}

def @func_22702() -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) {
  @func_22700() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) */
}

def @func_15184(%var_15182: Tensor[(14, 5, 6), float32]) -> (Tensor[(14, 5, 6), float32],) {
  @func_15181(%var_15182) /* ty=(Tensor[(14, 5, 6), float32],) */
}

def @func_10811() -> Tensor[(7, 9, 10), float32] {
  %150 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 9, 10), float32] */, dtype="float32") /* ty=Tensor[(7, 9, 10), float32] */;
  atan(%150) /* ty=Tensor[(7, 9, 10), float32] */
}

def @func_22990() -> (Tensor[(10, 9, 11), float64],) {
  %151 = @func_18058() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32]) */;
  %152 = %151.0;
  (%152,)
}

def @func_10566() -> (Tensor[(2025), int8],) {
  %153 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %154 = %153.0;
  (%154,)
}

def @func_11329(%var_11328: Tensor[(396), float32]) -> (Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float64], Tensor[(22, 4), float64], Tensor[(396), float32]) {
  %168 = fn (%var_11316: Tensor[(396), float32]) -> (Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float64], Tensor[(22, 4), float64], Tensor[(396), float32]) {
    %155 = @func_11129() /* ty=Tensor[(10, 9, 11), uint32] */;
    %156 = cast(%155, dtype="float64") /* ty=Tensor[(10, 9, 11), float64] */;
    %157 = @func_3116() /* ty=(Tensor[(15, 9, 15), float32],) */;
    %158 = cast(meta[relay.Constant][6] /* ty=Tensor[(22, 4), float64] */, dtype="float64") /* ty=Tensor[(22, 4), float64] */;
    %159 = %157.0;
    %160 = cast(%159, dtype="float64") /* ty=Tensor[(15, 9, 15), float64] */;
    %161 = cast(%var_11316, dtype="float32") /* ty=Tensor[(396), float32] */;
    %162 = reshape(%158, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), float64] */;
    %163 = reshape(%160, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %164 = reshape(%161, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
    %165 = @func_4820(%162, %163, %164) /* ty=(Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) */;
    %166 = cos(%156) /* ty=Tensor[(10, 9, 11), float64] */;
    %167 = %165.1;
    (%166, %159, %167, meta[relay.Constant][6] /* ty=Tensor[(22, 4), float64] */, %var_11316)
  };
  %168(%var_11328) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float64], Tensor[(22, 4), float64], Tensor[(396), float32]) */
}

def @func_6162() -> (Tensor[(2025), float64],) {
  @func_6160() /* ty=(Tensor[(2025), float64],) */
}

def @func_7916() -> Tensor[(16, 4, 7), float32] {
  @func_7914() /* ty=Tensor[(16, 4, 7), float32] */
}

def @func_14477() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) {
  %178 = fn () -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) {
    %169 = @func_4327() /* ty=(Tensor[(2025), float64],) */;
    %170 = @func_7857() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %171 = @func_10110() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
    %172 = @func_13083() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(88), float64]) */;
    %173 = %169.0;
    %174 = %170.0;
    %175 = %171.1;
    %176 = %172.0;
    %177 = @func_2029() /* ty=Tensor[(2025), float64] */;
    (%173, %174, %175, %176, %177)
  };
  %178() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) */
}

def @func_5938() -> (Tensor[(10, 9, 11), float64], Tensor[(1, 7, 9), uint64], uint64, Tensor[(63), uint64], Tensor[(2025), float64]) {
  %188 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(1, 7, 9), uint64], uint64, Tensor[(63), uint64], Tensor[(2025), float64]) {
    %179 = cast(meta[relay.Constant][7] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %180 = cast(meta[relay.Constant][8] /* ty=Tensor[(63), uint64] */, dtype="uint64") /* ty=Tensor[(63), uint64] */;
    %181 = reshape(%179, newshape=[]) /* ty=uint64 */;
    %182 = reshape(%180, newshape=[1, 7, 9]) /* ty=Tensor[(1, 7, 9), uint64] */;
    %183 = @func_5407(%181, %182) /* ty=(Tensor[(1, 7, 9), uint64],) */;
    %184 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
    %185 = @func_1439() /* ty=Tensor[(10, 9, 11), float64] */;
    %186 = %183.0;
    %187 = %184.0;
    (%185, %186, meta[relay.Constant][7] /* ty=uint64 */, meta[relay.Constant][8] /* ty=Tensor[(63), uint64] */, %187)
  };
  %188() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(1, 7, 9), uint64], uint64, Tensor[(63), uint64], Tensor[(2025), float64]) */
}

def @func_7823(%var_7821: Tensor[(2025), float32], %var_7822: Tensor[(10, 9, 11), float32]) -> (Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(2025), float32], Tensor[(10, 9, 11), float32], Tensor[(3, 9, 2), float64], Tensor[(2025), float32]) {
  @func_7819(%var_7821, %var_7822) /* ty=(Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(2025), float32], Tensor[(10, 9, 11), float32], Tensor[(3, 9, 2), float64], Tensor[(2025), float32]) */
}

def @func_16222() -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float32]) {
  %192 = fn () -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float32]) {
    %189 = @func_14024() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) */;
    %190 = @func_1790() /* ty=Tensor[(16, 4, 7), float32] */;
    %191 = %189.0;
    (%190, %191)
  };
  %192() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float32]) */
}

def @func_14146(%var_14145: Tensor[(2100), float64]) -> (Tensor[(10, 9, 11), float32], Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(2100), float64], Tensor[(2025), float64]) {
  %201 = fn (%var_14118: Tensor[(2100), float64]) -> (Tensor[(10, 9, 11), float32], Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(2100), float64], Tensor[(2025), float64]) {
    %193 = @func_12356() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */;
    %194 = cast(%var_14118, dtype="float64") /* ty=Tensor[(2100), float64] */;
    %195 = reshape(%194, newshape=[14, 15, 10]) /* ty=Tensor[(14, 15, 10), float64] */;
    %196 = @func_8337(%195) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(26), int16], Tensor[(14, 15, 10), int8], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32], Tensor[(2025), int64]) */;
    %197 = @func_7277() /* ty=Tensor[(10, 9, 11), float32] */;
    %198 = %193.1;
    %199 = %196.3;
    %200 = @func_13236() /* ty=Tensor[(2025), float64] */;
    (%197, %198, %199, %var_14118, %200)
  };
  %201(%var_14145) /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(2100), float64], Tensor[(2025), float64]) */
}

def @func_11190() -> (Tensor[(2025), float64], Tensor[(2025), int64]) {
  @func_11188() /* ty=(Tensor[(2025), float64], Tensor[(2025), int64]) */
}

def @func_12686(%var_12684: Tensor[(15, 9, 15), bool]) -> (Tensor[(15, 9, 15), float64], Tensor[(2025), float64]) {
  @func_12683(%var_12684) /* ty=(Tensor[(15, 9, 15), float64], Tensor[(2025), float64]) */
}

def @func_22901() -> Tensor[(104, 2), float32] {
  @func_22899() /* ty=Tensor[(104, 2), float32] */
}

def @func_11714() -> (Tensor[(16, 4, 7), float32],) {
  %202 = @func_7914() /* ty=Tensor[(16, 4, 7), float32] */;
  (%202,)
}

def @func_16727() -> (Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) {
  @func_16725() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */
}

def @func_21967() -> (Tensor[(7, 9, 10), float32], Tensor[(6, 11, 6), float32]) {
  @func_21965() /* ty=(Tensor[(7, 9, 10), float32], Tensor[(6, 11, 6), float32]) */
}

def @func_2367() -> (Tensor[(2025), int8],) {
  %205 = fn () -> (Tensor[(2025), int8],) {
    %203 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
    %204 = %203.0;
    (%204,)
  };
  %205() /* ty=(Tensor[(2025), int8],) */
}

def @func_7355() -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) {
  %210 = fn () -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) {
    %206 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
    %207 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %208 = %206.3;
    %209 = %207.0;
    (%208, %209)
  };
  %210() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) */
}

def @func_7409() -> (Tensor[(16, 4, 7), float32], Tensor[(2025), float64]) {
  %214 = fn () -> (Tensor[(16, 4, 7), float32], Tensor[(2025), float64]) {
    %211 = @func_3919() /* ty=(Tensor[(2025), float64],) */;
    %212 = @func_1755() /* ty=Tensor[(16, 4, 7), float32] */;
    %213 = %211.0;
    (%212, %213)
  };
  %214() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), float64]) */
}

def @func_11537() -> Tensor[(2025), float64] {
  @func_11535() /* ty=Tensor[(2025), float64] */
}

def @func_17636() -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) {
  %220 = fn () -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) {
    %215 = @func_6076() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool]) */;
    %216 = @func_16725() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */;
    %217 = %215.0;
    %218 = @func_7872() /* ty=Tensor[(10, 9, 11), float64] */;
    %219 = %216.0;
    (%217, %218, %219)
  };
  %220() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) */
}

def @func_3059() -> Tensor[(2025), float64] {
  @func_1880() /* ty=Tensor[(2025), float64] */
}

def @func_11352() -> (Tensor[(2025), float64],) {
  %223 = fn () -> (Tensor[(2025), float64],) {
    %221 = @func_8697() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */;
    %222 = %221.1;
    (%222,)
  };
  %223() /* ty=(Tensor[(2025), float64],) */
}

def @func_9344() -> Tensor[(10, 9, 11), float32] {
  %225 = fn () -> Tensor[(10, 9, 11), float32] {
    %224 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
    %224.1
  };
  %225() /* ty=Tensor[(10, 9, 11), float32] */
}

def @func_12857() -> Tensor[(10, 9, 11), float32] {
  %226 = fn () -> Tensor[(10, 9, 11), float32] {
    @func_7277() /* ty=Tensor[(10, 9, 11), float32] */
  };
  %226() /* ty=Tensor[(10, 9, 11), float32] */
}

def @func_8461() -> (Tensor[(990), uint32], Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  %227 = @func_1535() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(990), uint32]) */;
  %228 = @func_6104() /* ty=(Tensor[(2025), int64],) */;
  %229 = @func_3168() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %230 = @func_7354() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) */;
  %231 = %227.2;
  %232 = %228.0;
  %233 = %229.0;
  %234 = %230.1;
  (%231, %232, %233, %234)
}

def @func_20453() -> (Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) {
  %235 = @func_11504() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(3, 9, 2), float64]) */;
  %236 = @func_8122() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64]) */;
  %237 = @func_12834() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %238 = %235.1;
  %239 = @func_16033() /* ty=Tensor[(6, 66), float32] */;
  %240 = %236.0;
  %241 = %237.0;
  (%238, %239, %240, %241)
}

def @func_15762() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float32], Tensor[(2025), int64], Tensor[(10, 9, 11), float32]) {
  %251 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float32], Tensor[(2025), int64], Tensor[(10, 9, 11), float32]) {
    %242 = @func_7192() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %243 = @func_4382() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
    %244 = @func_8897() /* ty=(Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), int8]) */;
    %245 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
    %246 = %242.0;
    %247 = %243.0;
    %248 = %244.1;
    %249 = @func_4948() /* ty=Tensor[(2025), int64] */;
    %250 = %245.1;
    (%246, %247, %248, %249, %250)
  };
  %251() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float32], Tensor[(2025), int64], Tensor[(10, 9, 11), float32]) */
}

def @func_11790() -> (Tensor[(15, 9, 15), bool],) {
  @func_11788() /* ty=(Tensor[(15, 9, 15), bool],) */
}

def @func_17568() -> (Tensor[(16, 4, 7), float32], Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(3, 9, 2), float64], int16, Tensor[(15, 9, 15), float32], Tensor[(26), float32]) {
  %252 = @func_14601() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %253 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %254 = @func_4327() /* ty=(Tensor[(2025), float64],) */;
  %255 = @func_4861() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */;
  %256 = cast(meta[relay.Constant][9] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %257 = cast(meta[relay.Constant][10] /* ty=Tensor[(26), int16] */, dtype="int16") /* ty=Tensor[(26), int16] */;
  %258 = reshape(%256, newshape=[]) /* ty=int16 */;
  %259 = reshape(%257, newshape=[13, 2, 1]) /* ty=Tensor[(13, 2, 1), int16] */;
  %260 = @func_7149(%258, %259) /* ty=(Tensor[(13, 2, 1), int16], Tensor[(3, 9, 2), float64]) */;
  %261 = @func_17433() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), float32]) */;
  %262 = cast(meta[relay.Constant][10] /* ty=Tensor[(26), int16] */, dtype="float32") /* ty=Tensor[(26), float32] */;
  %263 = %252.0;
  %264 = %253.1;
  %265 = %254.0;
  %266 = %255.0;
  %267 = %260.1;
  %268 = %261.2;
  %269 = asinh(%262) /* ty=Tensor[(26), float32] */;
  (%263, %264, %265, %266, %267, meta[relay.Constant][9] /* ty=int16 */, %268, %269)
}

def @func_10133() -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  %270 = @func_6782() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) */;
  %271 = @func_9850() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), int8]) */;
  %272 = %270.1;
  %273 = %271.2;
  (%272, %273)
}

def @func_9291() -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64]) {
  %277 = fn () -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64]) {
    %274 = @func_8122() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64]) */;
    %275 = %274.0;
    %276 = @func_3412() /* ty=Tensor[(10, 9, 11), float64] */;
    (%275, %276)
  };
  %277() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64]) */
}

def @func_22992() -> (Tensor[(10, 9, 11), float64],) {
  @func_22990() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_2834() -> (Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(2025), int64]) {
  @func_2832() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(2025), int64]) */
}

def @func_7643() -> Tensor[(2025), float64] {
  @func_7641() /* ty=Tensor[(2025), float64] */
}

def @func_22517(%var_22515: Tensor[(1, 16, 8), uint32]) -> Tensor[(4, 16, 8), uint32] {
  @func_22514(%var_22515) /* ty=Tensor[(4, 16, 8), uint32] */
}

def @func_10035() -> (Tensor[(10, 9, 11), uint32],) {
  %279 = fn () -> (Tensor[(10, 9, 11), uint32],) {
    %278 = @func_9591() /* ty=Tensor[(10, 9, 11), uint32] */;
    (%278,)
  };
  %279() /* ty=(Tensor[(10, 9, 11), uint32],) */
}

def @func_2996() -> (Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32], Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) {
  %280 = @func_2935() /* ty=(Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) */;
  %281 = @func_2763() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) */;
  %282 = %281.0;
  %283 = cast(%282, dtype="float32") /* ty=Tensor[(15, 9, 15), float32] */;
  %284 = reshape(%283, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %285 = @func_984(%284) /* ty=(Tensor[(2025), int64],) */;
  %286 = cast(%282, dtype="float64") /* ty=Tensor[(15, 9, 15), float64] */;
  %287 = reshape(%286, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %288 = @func_1118(%287) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32], Tensor[(990), uint32], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float32], Tensor[(2025), float32], Tensor[(2025), bool]) */;
  %289 = %280.2;
  %290 = %285.0;
  %291 = @func_2029() /* ty=Tensor[(2025), float64] */;
  %292 = %288.3;
  (%289, %282, %290, %291, %292)
}

def @func_16551() -> (Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(15, 9, 15), float32]) {
  %299 = fn () -> (Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(15, 9, 15), float32]) {
    %293 = @func_11680() /* ty=(Tensor[(2025), int64],) */;
    %294 = @func_4327() /* ty=(Tensor[(2025), float64],) */;
    %295 = @func_9290() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64]) */;
    %296 = %293.0;
    %297 = %294.0;
    %298 = %295.0;
    (%296, %297, %298)
  };
  %299() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(15, 9, 15), float32]) */
}

def @func_11716() -> (Tensor[(16, 4, 7), float32],) {
  @func_11714() /* ty=(Tensor[(16, 4, 7), float32],) */
}

def @func_7641() -> Tensor[(2025), float64] {
  %300 = @func_6160() /* ty=(Tensor[(2025), float64],) */;
  %300.0
}

def @func_3920() -> (Tensor[(2025), float64],) {
  %305 = fn () -> (Tensor[(2025), float64],) {
    %301 = @func_2935() /* ty=(Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) */;
    %302 = %301.0;
    %303 = cast(%302, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %304 = exp(%303) /* ty=Tensor[(2025), float64] */;
    (%304,)
  };
  %305() /* ty=(Tensor[(2025), float64],) */
}

def @func_8699() -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  @func_8697() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */
}

def @func_2764() -> (Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) {
  %311 = fn () -> (Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) {
    %306 = @func_1672() /* ty=(Tensor[(15, 9, 15), float32],) */;
    %307 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
    %308 = %306.0;
    %309 = %307.2;
    %310 = @func_1755() /* ty=Tensor[(16, 4, 7), float32] */;
    (%308, %309, %310)
  };
  %311() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) */
}

def @func_10359() -> Tensor[(16, 4, 7), float32] {
  @func_10357() /* ty=Tensor[(16, 4, 7), float32] */
}

def @func_23348() -> (Tensor[(624), float64],) {
  @func_23346() /* ty=(Tensor[(624), float64],) */
}

def @func_10873() -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float32]) {
  %316 = fn () -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float32]) {
    %312 = @func_4382() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
    %313 = @func_8605() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), int8]) */;
    %314 = %312.1;
    %315 = %313.0;
    (%314, %315)
  };
  %316() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float32]) */
}

def @func_16778() -> (Tensor[(16, 4, 7), float32],) {
  %319 = fn () -> (Tensor[(16, 4, 7), float32],) {
    %317 = @func_14756() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), uint32], Tensor[(16, 4, 7), float32]) */;
    %318 = %317.2;
    (%318,)
  };
  %319() /* ty=(Tensor[(16, 4, 7), float32],) */
}

def @func_21293() -> Tensor[(7, 9, 10), float32] {
  %320 = @func_17286() /* ty=(Tensor[(16, 4, 7), float64], Tensor[(7, 9, 10), float32], Tensor[(88), float64]) */;
  %320.1
}

def @func_10605() -> (Tensor[(10, 9, 11), float64],) {
  %322 = fn () -> (Tensor[(10, 9, 11), float64],) {
    %321 = @func_5063() /* ty=Tensor[(10, 9, 11), float64] */;
    (%321,)
  };
  %322() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_8607() -> (Tensor[(10, 9, 11), float32], Tensor[(2025), int8]) {
  @func_8605() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), int8]) */
}

def @func_22646() -> Tensor[(2025), float64] {
  %323 = @func_9929() /* ty=(Tensor[(2025), float64],) */;
  %323.0
}

def @func_21450() -> Tensor[(10, 9, 11), float64] {
  %325 = fn () -> Tensor[(10, 9, 11), float64] {
    %324 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
    %324.0
  };
  %325() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_23238() -> (Tensor[(2025), float64],) {
  %326 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %327 = %326.0;
  (%327,)
}

def @func_3938() -> Tensor[(2025), float64] {
  @func_3936() /* ty=Tensor[(2025), float64] */
}

def @func_19826() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), uint32], Tensor[(88), float64]) {
  %334 = fn () -> (Tensor[(2025), float64], Tensor[(10, 9, 11), uint32], Tensor[(88), float64]) {
    %328 = @func_10246() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(2025), float64]) */;
    %329 = @func_19190() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), float64]) */;
    %330 = @func_9874() /* ty=(Tensor[(2025), float64], Tensor[(88), float64]) */;
    %331 = %328.1;
    %332 = %329.1;
    %333 = %330.1;
    (%331, %332, %333)
  };
  %334() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), uint32], Tensor[(88), float64]) */
}

def @func_7236() -> (Tensor[(2025), int64],) {
  %337 = fn () -> (Tensor[(2025), int64],) {
    %335 = @func_5486() /* ty=(Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(15, 9, 15), float32]) */;
    %336 = %335.0;
    (%336,)
  };
  %337() /* ty=(Tensor[(2025), int64],) */
}

def @func_22017() -> (Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), uint32]) {
  @func_22015() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), uint32]) */
}

def @func_11972() -> Tensor[(2025), float64] {
  @func_10849() /* ty=Tensor[(2025), float64] */
}

def @func_10351() -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  %341 = fn () -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
    %338 = @func_5392() /* ty=(Tensor[(2025), float64],) */;
    %339 = @func_3059() /* ty=Tensor[(2025), float64] */;
    %340 = %338.0;
    (%339, %340)
  };
  %341() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */
}

def @func_18766() -> Tensor[(16, 4, 7), float32] {
  %343 = fn () -> Tensor[(16, 4, 7), float32] {
    %342 = @func_17695() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(990), uint32]) */;
    %342.0
  };
  %343() /* ty=Tensor[(16, 4, 7), float32] */
}

def @func_21024() -> (Tensor[(2025), int8], Tensor[(2025), int8]) {
  %347 = fn () -> (Tensor[(2025), int8], Tensor[(2025), int8]) {
    %344 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
    %345 = @func_15274() /* ty=Tensor[(2025), int8] */;
    %346 = %344.0;
    (%345, %346)
  };
  %347() /* ty=(Tensor[(2025), int8], Tensor[(2025), int8]) */
}

def @func_18428() -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) {
  @func_18426() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) */
}

def @func_16033() -> Tensor[(6, 66), float32] {
  %348 = @func_6278() /* ty=(Tensor[(2025), int64], Tensor[(16, 4, 7), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(44, 2), float64], Tensor[(66, 6), float32]) */;
  %348.4
}

def @func_141(%var_140: Tensor[(15, 9, 15), float32]) -> (Tensor[(15, 9, 15), float32],) {
  %351 = fn (%var_105: Tensor[(15, 9, 15), float32]) -> (Tensor[(15, 9, 15), float32],) {
    %349 = cast(%var_105, dtype="float32") /* ty=Tensor[(15, 9, 15), float32] */;
    %350 = acosh(%349) /* ty=Tensor[(15, 9, 15), float32] */;
    (%350,)
  };
  %351(%var_140) /* ty=(Tensor[(15, 9, 15), float32],) */
}

def @func_9685() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  @func_9683() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_12835() -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  %359 = fn () -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
    %352 = @func_3511() /* ty=(Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) */;
    %353 = @func_11951() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */;
    %354 = @func_7857() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %355 = %352.2;
    %356 = @func_6672() /* ty=Tensor[(10, 9, 11), float64] */;
    %357 = %353.0;
    %358 = %354.0;
    (%355, %356, %357, %358)
  };
  %359() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_4729() -> Tensor[(2025), int8] {
  %361 = fn () -> Tensor[(2025), int8] {
    %360 = @func_2366() /* ty=(Tensor[(2025), int8],) */;
    %360.0
  };
  %361() /* ty=Tensor[(2025), int8] */
}

def @func_12752() -> (Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(88), float64], Tensor[(6, 66), float32], Tensor[(2025), float64], Tensor[(396), float32]) {
  %376 = fn () -> (Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(88), float64], Tensor[(6, 66), float32], Tensor[(2025), float64], Tensor[(396), float32]) {
    %362 = @func_10034() /* ty=(Tensor[(10, 9, 11), uint32],) */;
    %363 = cast(meta[relay.Constant][11] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
    %364 = reshape(%363, newshape=[88]) /* ty=Tensor[(88), float64] */;
    %365 = @func_5766(%364) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(9, 1, 10), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(4, 9, 11), float32], Tensor[(88), float64], Tensor[(396), float32], Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
    %366 = cast(meta[relay.Constant][11] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
    %367 = cast(meta[relay.Constant][12] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %368 = cast(meta[relay.Constant][13] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
    %369 = reshape(%366, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), float64] */;
    %370 = reshape(%367, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %371 = reshape(%368, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
    %372 = @func_4820(%369, %370, %371) /* ty=(Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) */;
    %373 = %362.0;
    %374 = %365.9;
    %375 = %372.4;
    (%373, %374, meta[relay.Constant][11] /* ty=Tensor[(88), float64] */, %375, meta[relay.Constant][12] /* ty=Tensor[(2025), float64] */, meta[relay.Constant][13] /* ty=Tensor[(396), float32] */)
  };
  %376() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(88), float64], Tensor[(6, 66), float32], Tensor[(2025), float64], Tensor[(396), float32]) */
}

def @func_13378() -> (Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), float64]) {
  %382 = fn () -> (Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), float64]) {
    %377 = @func_11188() /* ty=(Tensor[(2025), float64], Tensor[(2025), int64]) */;
    %378 = %377.1;
    %379 = @func_13236() /* ty=Tensor[(2025), float64] */;
    %380 = @func_12506() /* ty=Tensor[(2025), float64] */;
    %381 = @func_11972() /* ty=Tensor[(2025), float64] */;
    (%378, %379, %380, %381)
  };
  %382() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), float64]) */
}

def @func_5146() -> (Tensor[(15, 9, 15), bool],) {
  %383 = @func_2763() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) */;
  %384 = %383.1;
  (%384,)
}

def @func_22648() -> Tensor[(2025), float64] {
  @func_22646() /* ty=Tensor[(2025), float64] */
}

def @func_21821() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %389 = fn () -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
    %385 = @func_11082() /* ty=(Tensor[(2025), float64],) */;
    %386 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %387 = %385.0;
    %388 = %386.0;
    (%387, %388)
  };
  %389() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_1790() -> Tensor[(16, 4, 7), float32] {
  @func_1755() /* ty=Tensor[(16, 4, 7), float32] */
}

def @func_7098() -> (Tensor[(10, 9, 11), float64],) {
  @func_7096() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_19861(%var_19859: Tensor[(2025), float64]) -> (Tensor[(2025), bool], Tensor[(16, 4, 7), float32]) {
  @func_19858(%var_19859) /* ty=(Tensor[(2025), bool], Tensor[(16, 4, 7), float32]) */
}

def @func_7577(%var_7575: Tensor[(2025), float64]) -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) {
  @func_7574(%var_7575) /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */
}

def @func_16035() -> Tensor[(6, 66), float32] {
  @func_16033() /* ty=Tensor[(6, 66), float32] */
}

def @func_6784() -> (Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) {
  @func_6782() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) */
}

def @func_19736() -> Tensor[(10, 9, 11), float32] {
  %390 = @func_17433() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), float32]) */;
  %390.1
}

def @func_7873() -> Tensor[(10, 9, 11), float64] {
  %392 = fn () -> Tensor[(10, 9, 11), float64] {
    %391 = @func_4382() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
    %391.2
  };
  %392() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_23503() -> (Tensor[(990), uint32],) {
  %393 = @func_1535() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(990), uint32]) */;
  %394 = %393.2;
  (%394,)
}

def @func_8897() -> (Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), int8]) {
  %395 = @func_7183() /* ty=(Tensor[(2025), float32], Tensor[(2025), int64]) */;
  %396 = @func_2366() /* ty=(Tensor[(2025), int8],) */;
  %397 = %395.1;
  %398 = @func_4098() /* ty=Tensor[(2025), float32] */;
  %399 = @func_3412() /* ty=Tensor[(10, 9, 11), float64] */;
  %400 = %396.0;
  (%397, %398, %399, %400)
}

def @func_4383() -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) {
  %408 = fn () -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) {
    %401 = @func_2567() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
    %402 = %401.1;
    %403 = cast(%402, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %404 = reshape(%403, newshape=[675, 3]) /* ty=Tensor[(675, 3), float64] */;
    %405 = @func_3323(%404) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(675, 3), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32]) */;
    %406 = @func_1755() /* ty=Tensor[(16, 4, 7), float32] */;
    %407 = %405.3;
    (%402, %406, %407)
  };
  %408() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */
}

def @func_15140() -> (Tensor[(2025), float64],) {
  @func_15138() /* ty=(Tensor[(2025), float64],) */
}

def @func_17151() -> Tensor[(2025), int64] {
  @func_17149() /* ty=Tensor[(2025), int64] */
}

def @func_3227() -> Tensor[(3, 9, 2), float64] {
  %410 = fn () -> Tensor[(3, 9, 2), float64] {
    %409 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 9, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 2), float64] */;
    asinh(%409) /* ty=Tensor[(3, 9, 2), float64] */
  };
  %410() /* ty=Tensor[(3, 9, 2), float64] */
}

def @func_4861() -> (Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) {
  %411 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %412 = @func_4382() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %413 = @func_1755() /* ty=Tensor[(16, 4, 7), float32] */;
  %414 = %411.0;
  %415 = @func_4728() /* ty=Tensor[(2025), int8] */;
  %416 = %412.1;
  (%413, %414, %415, %416)
}

def @func_11338(%var_11333: Tensor[(2025), int8]) -> Tensor[(2025), uint32] {
  %417 = @func_8605() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), int8]) */;
  %418 = %417.1;
  %419 = cast(%var_11333, dtype="uint32") /* ty=Tensor[(2025), uint32] */;
  %420 = shape_of(%418, dtype="int32") /* ty=Tensor[(1), int32] */;
  %421 = cast(%418, dtype="uint32") /* ty=Tensor[(2025), uint32] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?), uint32] */;
  add(%421, %422) /* ty=Tensor[(2025), uint32] */
}

def @func_13630() -> (Tensor[(2025), float64],) {
  %423 = @func_9364() /* ty=(Tensor[(2025), float32], Tensor[(2025), float64], Tensor[(2025), int64]) */;
  %424 = %423.1;
  (%424,)
}

def @func_8899() -> (Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), int8]) {
  @func_8897() /* ty=(Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), int8]) */
}

def @func_21582() -> (Tensor[(10, 9, 11), float32], Tensor[(2025), float64], Tensor[(624), float64]) {
  @func_21580() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), float64], Tensor[(624), float64]) */
}

def @func_1121(%var_1119: Tensor[(2025), float64]) -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32], Tensor[(990), uint32], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float32], Tensor[(2025), float32], Tensor[(2025), bool]) {
  @func_1118(%var_1119) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32], Tensor[(990), uint32], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float32], Tensor[(2025), float32], Tensor[(2025), bool]) */
}

def @func_15138() -> (Tensor[(2025), float64],) {
  %425 = @func_10350() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */;
  %426 = %425.1;
  (%426,)
}

def @func_7149(%var_7111: int16, %var_7112: Tensor[(13, 2, 1), int16]) -> (Tensor[(13, 2, 1), int16], Tensor[(3, 9, 2), float64]) {
  %427 = cast(%var_7111, dtype="int16") /* ty=int16 */;
  %428 = cast(%var_7112, dtype="int16") /* ty=Tensor[(13, 2, 1), int16] */;
  %429 = @func_5867() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(3, 9, 2), float64]) */;
  %430 = bitwise_and(%427, %428) /* ty=Tensor[(13, 2, 1), int16] */;
  %431 = %429.1;
  (%430, %431)
}

def @func_11341(%var_11339: Tensor[(2025), int8]) -> Tensor[(2025), uint32] {
  @func_11338(%var_11339) /* ty=Tensor[(2025), uint32] */
}

def @func_16873() -> Tensor[(2025), float64] {
  @func_16871() /* ty=Tensor[(2025), float64] */
}

def @func_4467() -> Tensor[(2025), float64] {
  %433 = fn () -> Tensor[(2025), float64] {
    %432 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
    %432.0
  };
  %433() /* ty=Tensor[(2025), float64] */
}

def @func_9720() -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  %438 = fn () -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
    %434 = @func_9056() /* ty=(Tensor[(2025), float64],) */;
    %435 = @func_3511() /* ty=(Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) */;
    %436 = %434.0;
    %437 = %435.0;
    (%436, %437)
  };
  %438() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */
}

def @func_11681() -> (Tensor[(2025), int64],) {
  %441 = fn () -> (Tensor[(2025), int64],) {
    %439 = @func_6429() /* ty=(Tensor[(2025), int64],) */;
    %440 = %439.0;
    (%440,)
  };
  %441() /* ty=(Tensor[(2025), int64],) */
}

def @func_16066() -> Tensor[(2025), float64] {
  @func_16064() /* ty=Tensor[(2025), float64] */
}

def @func_19551() -> (Tensor[(16, 4, 7), float32],) {
  @func_19549() /* ty=(Tensor[(16, 4, 7), float32],) */
}

def @func_22185() -> (Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) {
  %446 = fn () -> (Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) {
    %442 = @func_16550() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(15, 9, 15), float32]) */;
    %443 = @func_13801() /* ty=(Tensor[(2025), float64],) */;
    %444 = %442.2;
    %445 = %443.0;
    (%444, %445)
  };
  %446() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */
}

def @func_986(%var_985: Tensor[(2025), float32]) -> (Tensor[(2025), int64],) {
  %454 = fn (%var_973: Tensor[(2025), float32]) -> (Tensor[(2025), int64],) {
    %447 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
    %448 = %447.3;
    %449 = cast(%var_973, dtype="int64") /* ty=Tensor[(2025), int64] */;
    %450 = shape_of(%448, dtype="int32") /* ty=Tensor[(1), int32] */;
    %451 = cast(%448, dtype="int64") /* ty=Tensor[(2025), int64] */;
    %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?), int64] */;
    %453 = bitwise_and(%451, %452) /* ty=Tensor[(2025), int64] */;
    (%453,)
  };
  %454(%var_985) /* ty=(Tensor[(2025), int64],) */
}

def @func_22621() -> Tensor[(7, 9, 10), float32] {
  %455 = @func_13607() /* ty=(Tensor[(7, 9, 10), float32], Tensor[(7, 9, 10), float32], Tensor[(88), float64], Tensor[(88), float64], Tensor[(990), uint32]) */;
  %455.0
}

def @func_23075() -> Tensor[(16, 4, 7), float32] {
  %456 = fn () -> Tensor[(16, 4, 7), float32] {
    @func_1790() /* ty=Tensor[(16, 4, 7), float32] */
  };
  %456() /* ty=Tensor[(16, 4, 7), float32] */
}

def @func_3769(%var_3768: Tensor[(2025), float64]) -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) {
  %463 = fn (%var_3760: Tensor[(2025), float64]) -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) {
    %457 = @func_3404() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32]) */;
    %458 = cast(%var_3760, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %459 = reshape(%458, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %460 = @func_1118(%459) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32], Tensor[(990), uint32], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float32], Tensor[(2025), float32], Tensor[(2025), bool]) */;
    %461 = %457.0;
    %462 = %460.4;
    (%461, %462, %var_3760)
  };
  %463(%var_3768) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) */
}

def @func_9038() -> (Tensor[(16, 4, 7), float32], Tensor[(2025), int64], Tensor[(2025), float32]) {
  %464 = @func_5787() /* ty=(Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */;
  %465 = @func_6365() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), int64]) */;
  %466 = @func_4055() /* ty=(Tensor[(2025), float32], Tensor[(15, 9, 15), bool]) */;
  %467 = %464.1;
  %468 = %465.4;
  %469 = %466.0;
  (%467, %468, %469)
}

def @func_3208() -> (Tensor[(15, 9, 15), bool],) {
  %472 = fn () -> (Tensor[(15, 9, 15), bool],) {
    %470 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
    %471 = %470.2;
    (%471,)
  };
  %472() /* ty=(Tensor[(15, 9, 15), bool],) */
}

def @func_11143() -> (Tensor[(10, 9, 11), float64],) {
  @func_11141() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_20082() -> (Tensor[(2025), int8], Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
  %478 = fn () -> (Tensor[(2025), int8], Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
    %473 = @func_2935() /* ty=(Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) */;
    %474 = @func_19549() /* ty=(Tensor[(16, 4, 7), float32],) */;
    %475 = %473.0;
    %476 = @func_9233() /* ty=Tensor[(2025), float64] */;
    %477 = %474.0;
    (%475, %476, %477)
  };
  %478() /* ty=(Tensor[(2025), int8], Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */
}

def @func_23505() -> (Tensor[(990), uint32],) {
  @func_23503() /* ty=(Tensor[(990), uint32],) */
}

def @func_4098() -> Tensor[(2025), float32] {
  %479 = @func_4055() /* ty=(Tensor[(2025), float32], Tensor[(15, 9, 15), bool]) */;
  %479.0
}

def @func_5013(%var_5010: Tensor[(8, 13, 2), float32], %var_5011: Tensor[(8, 13, 2), float32], %var_5012: Tensor[(88), float64]) -> (Tensor[(8, 13, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(88), float64], Tensor[(2025), float64], Tensor[(396), float32]) {
  @func_5008(%var_5010, %var_5011, %var_5012) /* ty=(Tensor[(8, 13, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(88), float64], Tensor[(2025), float64], Tensor[(396), float32]) */
}

def @func_2935() -> (Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) {
  %480 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %481 = %480.0;
  %482 = cast(%481, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %483 = reshape(%482, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), float32] */;
  %484 = @func_139(%483) /* ty=(Tensor[(15, 9, 15), float32],) */;
  %485 = @func_1827() /* ty=Tensor[(10, 9, 11), float64] */;
  %486 = %484.0;
  (%481, %485, %486)
}

def @func_13802() -> (Tensor[(2025), float64],) {
  %489 = fn () -> (Tensor[(2025), float64],) {
    %487 = @func_8569() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool]) */;
    %488 = %487.1;
    (%488,)
  };
  %489() /* ty=(Tensor[(2025), float64],) */
}

def @func_21052(%var_21040: uint32, %var_21041: Tensor[(39), uint32]) -> (Tensor[(10, 9, 11), uint32], Tensor[(13, 1, 3), uint32], uint32, Tensor[(39), uint32]) {
  %490 = @func_10034() /* ty=(Tensor[(10, 9, 11), uint32],) */;
  %491 = cast(%var_21040, dtype="uint32") /* ty=uint32 */;
  %492 = cast(%var_21041, dtype="uint32") /* ty=Tensor[(39), uint32] */;
  %493 = reshape(%491, newshape=[]) /* ty=uint32 */;
  %494 = reshape(%492, newshape=[13, 1, 3]) /* ty=Tensor[(13, 1, 3), uint32] */;
  %495 = @func_13867(%493, %494) /* ty=(Tensor[(13, 1, 3), uint32],) */;
  %496 = %490.0;
  %497 = %495.0;
  (%496, %497, %var_21040, %var_21041)
}

def @func_1535() -> (Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(990), uint32]) {
  %498 = @func_1060() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %499 = cast(meta[relay.Constant][15] /* ty=Tensor[(990), uint32] */, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %500 = reshape(%499, newshape=[10, 9, 11]) /* ty=Tensor[(10, 9, 11), uint32] */;
  %501 = %498.1;
  %502 = @func_961(%500) /* ty=Tensor[(10, 9, 11), float32] */;
  (%501, %502, meta[relay.Constant][15] /* ty=Tensor[(990), uint32] */)
}

def @func_12007() -> Tensor[(15, 9, 15), bool] {
  %504 = fn () -> Tensor[(15, 9, 15), bool] {
    %503 = @func_5146() /* ty=(Tensor[(15, 9, 15), bool],) */;
    %503.0
  };
  %504() /* ty=Tensor[(15, 9, 15), bool] */
}

def @func_9463() -> (Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) {
  %505 = @func_9364() /* ty=(Tensor[(2025), float32], Tensor[(2025), float64], Tensor[(2025), int64]) */;
  %506 = @func_7354() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) */;
  %507 = %505.2;
  %508 = @func_9343() /* ty=Tensor[(10, 9, 11), float32] */;
  %509 = %506.1;
  (%507, %508, %509)
}

def @func_17356() -> (Tensor[(2025), int64],) {
  %512 = fn () -> (Tensor[(2025), int64],) {
    %510 = @func_6429() /* ty=(Tensor[(2025), int64],) */;
    %511 = %510.0;
    (%511,)
  };
  %512() /* ty=(Tensor[(2025), int64],) */
}

def @func_10813() -> Tensor[(7, 9, 10), float32] {
  @func_10811() /* ty=Tensor[(7, 9, 10), float32] */
}

def @func_10112() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  @func_10110() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_6612() -> (Tensor[(2025), int8], Tensor[(9, 1, 10), float32]) {
  %517 = fn () -> (Tensor[(2025), int8], Tensor[(9, 1, 10), float32]) {
    %513 = @func_1060() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
    %514 = @func_5300() /* ty=(Tensor[(9, 1, 10), float32],) */;
    %515 = %513.0;
    %516 = %514.0;
    (%515, %516)
  };
  %517() /* ty=(Tensor[(2025), int8], Tensor[(9, 1, 10), float32]) */
}

def @func_1118(%var_1113: Tensor[(2025), float64]) -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32], Tensor[(990), uint32], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float32], Tensor[(2025), float32], Tensor[(2025), bool]) {
  %518 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %519 = cast(meta[relay.Constant][16] /* ty=Tensor[(990), uint32] */, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %520 = reshape(%519, newshape=[10, 9, 11]) /* ty=Tensor[(10, 9, 11), uint32] */;
  %521 = @func_961(%520) /* ty=Tensor[(10, 9, 11), float32] */;
  %522 = cast(%521, dtype="uint32") /* ty=Tensor[(10, 9, 11), uint32] */;
  %523 = reshape(%522, newshape=[10, 9, 11]) /* ty=Tensor[(10, 9, 11), uint32] */;
  %524 = @func_961(%523) /* ty=Tensor[(10, 9, 11), float32] */;
  %525 = cast(%524, dtype="uint32") /* ty=Tensor[(10, 9, 11), uint32] */;
  %526 = reshape(%525, newshape=[10, 9, 11]) /* ty=Tensor[(10, 9, 11), uint32] */;
  %527 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %528 = @func_1060() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %529 = %528.0;
  %530 = cast(%529, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %531 = tan(%530) /* ty=Tensor[(2025), float64] */;
  %532 = cast(%var_1113, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %533 = shape_of(%531, dtype="int32") /* ty=Tensor[(1), int32] */;
  %534 = cast(%531, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?), bool] */;
  %536 = %518.2;
  %537 = @func_961(%526) /* ty=Tensor[(10, 9, 11), float32] */;
  %538 = %527.3;
  %539 = logical_and(%534, %535) /* ty=Tensor[(2025), bool] */;
  (%536, %521, meta[relay.Constant][16] /* ty=Tensor[(990), uint32] */, %524, %537, %538, %539)
}

def @func_3577(%var_3576: Tensor[(4, 9, 11), float32]) -> (Tensor[(4, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) {
  %544 = fn (%var_3537: Tensor[(4, 9, 11), float32]) -> (Tensor[(4, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) {
    %540 = cast(%var_3537, dtype="float32") /* ty=Tensor[(4, 9, 11), float32] */;
    %541 = atanh(%540) /* ty=Tensor[(4, 9, 11), float32] */;
    %542 = @func_1439() /* ty=Tensor[(10, 9, 11), float64] */;
    %543 = @func_1755() /* ty=Tensor[(16, 4, 7), float32] */;
    (%541, %542, %543)
  };
  %544(%var_3576) /* ty=(Tensor[(4, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) */
}

def @func_22486() -> (Tensor[(2025), float64],) {
  %546 = fn () -> (Tensor[(2025), float64],) {
    %545 = @func_4466() /* ty=Tensor[(2025), float64] */;
    (%545,)
  };
  %546() /* ty=(Tensor[(2025), float64],) */
}

def @func_14330() -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  @func_14328() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */
}

def @func_19665() -> Tensor[(10, 9, 11), float64] {
  %548 = fn () -> Tensor[(10, 9, 11), float64] {
    %547 = @func_19304() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */;
    %547.0
  };
  %548() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_3413() -> Tensor[(10, 9, 11), float64] {
  %550 = fn () -> Tensor[(10, 9, 11), float64] {
    %549 = @func_2502() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
    %549.0
  };
  %550() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_7521() -> (Tensor[(104, 2), float32], Tensor[(10, 9, 11), float64]) {
  @func_7519() /* ty=(Tensor[(104, 2), float32], Tensor[(10, 9, 11), float64]) */
}

def @func_12633() -> (Tensor[(2025), float64],) {
  %552 = fn () -> (Tensor[(2025), float64],) {
    %551 = @func_2029() /* ty=Tensor[(2025), float64] */;
    (%551,)
  };
  %552() /* ty=(Tensor[(2025), float64],) */
}

def @func_7574(%var_7546: Tensor[(2025), float64]) -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) {
  %553 = @func_3059() /* ty=Tensor[(2025), float64] */;
  %554 = cast(%var_7546, dtype="uint32") /* ty=Tensor[(2025), uint32] */;
  %555 = shape_of(%553, dtype="int32") /* ty=Tensor[(1), int32] */;
  %556 = cast(%553, dtype="uint32") /* ty=Tensor[(2025), uint32] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %558 = logical_xor(%556, %557) /* ty=Tensor[(2025), uint32] */;
  %559 = cast(%553, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %560 = shape_of(%558, dtype="int32") /* ty=Tensor[(1), int32] */;
  %561 = cast(%558, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?), float32] */;
  %563 = @func_3168() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %564 = @func_6782() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) */;
  %565 = %564.1;
  %566 = cast(%565, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %567 = floor_divide(%561, %562) /* ty=Tensor[(2025), float32] */;
  %568 = %563.0;
  %569 = rsqrt(%566) /* ty=Tensor[(2025), float32] */;
  (%567, %568, %569)
}

def @func_2030() -> Tensor[(2025), float64] {
  %571 = fn () -> Tensor[(2025), float64] {
    %570 = @func_1343() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */;
    %570.1
  };
  %571() /* ty=Tensor[(2025), float64] */
}

def @func_10297() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %575 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
    %572 = @func_7354() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) */;
    %573 = %572.1;
    %574 = @func_9233() /* ty=Tensor[(2025), float64] */;
    (%573, %574)
  };
  %575() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */
}

def @func_5768(%var_5767: Tensor[(88), float64]) -> (Tensor[(15, 9, 15), float32], Tensor[(9, 1, 10), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(4, 9, 11), float32], Tensor[(88), float64], Tensor[(396), float32], Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) {
  %603 = fn (%var_5704: Tensor[(88), float64]) -> (Tensor[(15, 9, 15), float32], Tensor[(9, 1, 10), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(4, 9, 11), float32], Tensor[(88), float64], Tensor[(396), float32], Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) {
    %576 = @func_4055() /* ty=(Tensor[(2025), float32], Tensor[(15, 9, 15), bool]) */;
    %577 = %576.1;
    %578 = cast(%577, dtype="float32") /* ty=Tensor[(15, 9, 15), float32] */;
    %579 = @func_5300() /* ty=(Tensor[(9, 1, 10), float32],) */;
    %580 = @func_3168() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %581 = cast(%var_5704, dtype="float64") /* ty=Tensor[(88), float64] */;
    %582 = cast(%577, dtype="float64") /* ty=Tensor[(15, 9, 15), float64] */;
    %583 = cast(meta[relay.Constant][17] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
    %584 = reshape(%581, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), float64] */;
    %585 = reshape(%582, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %586 = reshape(%583, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
    %587 = @func_4820(%584, %585, %586) /* ty=(Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) */;
    %588 = cast(%577, dtype="float64") /* ty=Tensor[(15, 9, 15), float64] */;
    %589 = reshape(%588, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %590 = @func_2662(%589) /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
    %591 = @func_2366() /* ty=(Tensor[(2025), int8],) */;
    %592 = @func_4382() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
    %593 = @func_2502() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
    %594 = log10(%578) /* ty=Tensor[(15, 9, 15), float32] */;
    %595 = %579.0;
    %596 = %580.0;
    %597 = @func_1827() /* ty=Tensor[(10, 9, 11), float64] */;
    %598 = %587.3;
    %599 = %590.1;
    %600 = %591.0;
    %601 = %592.2;
    %602 = %593.1;
    (%594, %595, %596, %597, %598, %var_5704, meta[relay.Constant][17] /* ty=Tensor[(396), float32] */, %599, %600, %601, %602)
  };
  %603(%var_5767) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(9, 1, 10), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(4, 9, 11), float32], Tensor[(88), float64], Tensor[(396), float32], Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */
}

def @func_9851() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), int8]) {
  %612 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), int8]) {
    %604 = @func_7192() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %605 = @func_5392() /* ty=(Tensor[(2025), float64],) */;
    %606 = @func_9100() /* ty=(Tensor[(2025), float64],) */;
    %607 = @func_8605() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), int8]) */;
    %608 = %604.0;
    %609 = %605.0;
    %610 = %606.0;
    %611 = %607.1;
    (%608, %609, %610, %611)
  };
  %612() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), int8]) */
}

def @func_5267() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  %613 = @func_3404() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32]) */;
  %614 = @func_5063() /* ty=Tensor[(10, 9, 11), float64] */;
  %615 = %613.0;
  (%614, %615)
}

def @func_8020() -> (Tensor[(15, 9, 15), float32],) {
  %618 = fn () -> (Tensor[(15, 9, 15), float32],) {
    %616 = @func_2996() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32], Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
    %617 = %616.1;
    (%617,)
  };
  %618() /* ty=(Tensor[(15, 9, 15), float32],) */
}

def @func_13870(%var_13868: uint32, %var_13869: Tensor[(13, 1, 3), uint32]) -> (Tensor[(13, 1, 3), uint32],) {
  %622 = fn (%var_13842: uint32, %var_13843: Tensor[(13, 1, 3), uint32]) -> (Tensor[(13, 1, 3), uint32],) {
    %619 = cast(%var_13842, dtype="uint32") /* ty=uint32 */;
    %620 = cast(%var_13843, dtype="uint32") /* ty=Tensor[(13, 1, 3), uint32] */;
    %621 = bitwise_xor(%619, %620) /* ty=Tensor[(13, 1, 3), uint32] */;
    (%621,)
  };
  %622(%var_13868, %var_13869) /* ty=(Tensor[(13, 1, 3), uint32],) */
}

def @func_16871() -> Tensor[(2025), float64] {
  %623 = @func_15458() /* ty=(Tensor[(2025), float64],) */;
  %623.0
}

def @func_20989() -> (Tensor[(2025), int8],) {
  @func_20987() /* ty=(Tensor[(2025), int8],) */
}

def @func_20551() -> (Tensor[(16, 4, 7), float32], int16, Tensor[(30), int16], Tensor[(3, 10, 1), float64]) {
  %624 = @func_7408() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), float64]) */;
  %625 = cast(meta[relay.Constant][18] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %626 = cast(meta[relay.Constant][19] /* ty=Tensor[(30), int16] */, dtype="int16") /* ty=Tensor[(30), int16] */;
  %627 = reshape(%625, newshape=[]) /* ty=int16 */;
  %628 = reshape(%626, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), int16] */;
  %629 = @func_4155(%627, %628) /* ty=(Tensor[(3, 10, 1), int16],) */;
  %630 = %629.0;
  %631 = cast(%630, dtype="float64") /* ty=Tensor[(3, 10, 1), float64] */;
  %632 = %624.0;
  %633 = sin(%631) /* ty=Tensor[(3, 10, 1), float64] */;
  (%632, meta[relay.Constant][18] /* ty=int16 */, meta[relay.Constant][19] /* ty=Tensor[(30), int16] */, %633)
}

def @func_5301() -> (Tensor[(9, 1, 10), float32],) {
  %636 = fn () -> (Tensor[(9, 1, 10), float32],) {
    %634 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 1, 10), float32] */, dtype="float32") /* ty=Tensor[(9, 1, 10), float32] */;
    %635 = asinh(%634) /* ty=Tensor[(9, 1, 10), float32] */;
    (%635,)
  };
  %636() /* ty=(Tensor[(9, 1, 10), float32],) */
}

def @func_22746() -> (Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64]) {
  %644 = fn () -> (Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64]) {
    %637 = @func_6880() /* ty=(Tensor[(2025), float64],) */;
    %638 = @func_2763() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) */;
    %639 = @func_2366() /* ty=(Tensor[(2025), int8],) */;
    %640 = %637.0;
    %641 = %638.0;
    %642 = %639.0;
    %643 = @func_5063() /* ty=Tensor[(10, 9, 11), float64] */;
    (%640, %641, %642, %643)
  };
  %644() /* ty=(Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64]) */
}

def @func_18153() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  @func_18151() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_18151() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %645 = @func_5937() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(1, 7, 9), uint64], uint64, Tensor[(63), uint64], Tensor[(2025), float64]) */;
  %646 = @func_17754() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %647 = %645.4;
  %648 = %646.1;
  %649 = @func_2029() /* ty=Tensor[(2025), float64] */;
  %650 = @func_10154() /* ty=Tensor[(10, 9, 11), float64] */;
  (%647, %648, %649, %650)
}

def @func_1958() -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
  %653 = fn () -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
    %651 = @func_1880() /* ty=Tensor[(2025), float64] */;
    %652 = @func_1755() /* ty=Tensor[(16, 4, 7), float32] */;
    (%651, %652)
  };
  %653() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */
}

def @func_20242() -> (Tensor[(10, 9, 11), float64],) {
  @func_20240() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_18931(%var_18929: Tensor[(26, 1), int16]) -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(26, 1), int16]) {
  @func_18928(%var_18929) /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(26, 1), int16]) */
}

def @func_13453() -> (Tensor[(16, 4, 7), float32], Tensor[(2025), float64], Tensor[(396), float32], Tensor[(2025), int8], Tensor[(2025), float64]) {
  @func_13451() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), float64], Tensor[(396), float32], Tensor[(2025), int8], Tensor[(2025), float64]) */
}

def @func_6861(%var_6860: Tensor[(12, 4, 13), float64]) -> (Tensor[(12, 4, 13), float64], Tensor[(2025), float64], Tensor[(208), float32], Tensor[(88), float64]) {
  %664 = fn (%var_6810: Tensor[(12, 4, 13), float64]) -> (Tensor[(12, 4, 13), float64], Tensor[(2025), float64], Tensor[(208), float32], Tensor[(88), float64]) {
    %654 = cast(%var_6810, dtype="float64") /* ty=Tensor[(12, 4, 13), float64] */;
    %655 = cast(meta[relay.Constant][21] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
    %656 = cast(meta[relay.Constant][21] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
    %657 = cast(meta[relay.Constant][22] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
    %658 = reshape(%655, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
    %659 = reshape(%656, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
    %660 = reshape(%657, newshape=[88]) /* ty=Tensor[(88), float64] */;
    %661 = @func_5008(%658, %659, %660) /* ty=(Tensor[(8, 13, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(88), float64], Tensor[(2025), float64], Tensor[(396), float32]) */;
    %662 = asinh(%654) /* ty=Tensor[(12, 4, 13), float64] */;
    %663 = %661.4;
    (%662, %663, meta[relay.Constant][21] /* ty=Tensor[(208), float32] */, meta[relay.Constant][22] /* ty=Tensor[(88), float64] */)
  };
  %664(%var_6860) /* ty=(Tensor[(12, 4, 13), float64], Tensor[(2025), float64], Tensor[(208), float32], Tensor[(88), float64]) */
}

def @func_15475() -> Tensor[(2025), float64] {
  %665 = @func_4327() /* ty=(Tensor[(2025), float64],) */;
  %665.0
}

def @func_19738() -> Tensor[(10, 9, 11), float32] {
  @func_19736() /* ty=Tensor[(10, 9, 11), float32] */
}

def @func_6280() -> (Tensor[(2025), int64], Tensor[(16, 4, 7), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(44, 2), float64], Tensor[(66, 6), float32]) {
  @func_6278() /* ty=(Tensor[(2025), int64], Tensor[(16, 4, 7), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(44, 2), float64], Tensor[(66, 6), float32]) */
}

def @func_5635(%var_5633: Tensor[(15, 9, 15), float32]) -> (Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float64], Tensor[(2025), float64]) {
  @func_5632(%var_5633) /* ty=(Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float64], Tensor[(2025), float64]) */
}

def @func_17721() -> (Tensor[(4, 12, 16), int8], Tensor[(4, 192), int8], Tensor[(16, 4, 7), float64]) {
  %666 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 192), int8] */, dtype="int8") /* ty=Tensor[(4, 192), int8] */;
  %667 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 192), int8] */, dtype="int8") /* ty=Tensor[(4, 192), int8] */;
  %668 = reshape(%666, newshape=[4, 12, 16]) /* ty=Tensor[(4, 12, 16), int8] */;
  %669 = reshape(%667, newshape=[4, 12, 16]) /* ty=Tensor[(4, 12, 16), int8] */;
  %670 = @func_16195() /* ty=Tensor[(16, 4, 7), float32] */;
  %671 = cast(%670, dtype="float64") /* ty=Tensor[(16, 4, 7), float64] */;
  %672 = @func_13967(%668, %669) /* ty=Tensor[(4, 12, 16), int8] */;
  %673 = sigmoid(%671) /* ty=Tensor[(16, 4, 7), float64] */;
  (%672, meta[relay.Constant][23] /* ty=Tensor[(4, 192), int8] */, %673)
}

def @func_2598() -> (Tensor[(10, 9, 11), float64],) {
  %676 = fn () -> (Tensor[(10, 9, 11), float64],) {
    %674 = @func_1808() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
    %675 = %674.1;
    (%675,)
  };
  %676() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_22605(%var_22603: Tensor[(4, 10, 14), float64], %var_22604: Tensor[(2025, 1), float64]) -> (Tensor[(990), uint32], Tensor[(2025, 1), float64], Tensor[(10, 9, 11), float64], Tensor[(4, 10, 14), float32]) {
  @func_22601(%var_22603, %var_22604) /* ty=(Tensor[(990), uint32], Tensor[(2025, 1), float64], Tensor[(10, 9, 11), float64], Tensor[(4, 10, 14), float32]) */
}

def @func_1572() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  %677 = @func_1439() /* ty=Tensor[(10, 9, 11), float64] */;
  %678 = @func_1439() /* ty=Tensor[(10, 9, 11), float64] */;
  (%677, %678)
}

def @func_4158(%var_4156: int16, %var_4157: Tensor[(3, 10, 1), int16]) -> (Tensor[(3, 10, 1), int16],) {
  %682 = fn (%var_4143: int16, %var_4144: Tensor[(3, 10, 1), int16]) -> (Tensor[(3, 10, 1), int16],) {
    %679 = cast(%var_4143, dtype="int16") /* ty=int16 */;
    %680 = cast(%var_4144, dtype="int16") /* ty=Tensor[(3, 10, 1), int16] */;
    %681 = left_shift(%679, %680) /* ty=Tensor[(3, 10, 1), int16] */;
    (%681,)
  };
  %682(%var_4156, %var_4157) /* ty=(Tensor[(3, 10, 1), int16],) */
}

def @func_1792() -> Tensor[(16, 4, 7), float32] {
  @func_1790() /* ty=Tensor[(16, 4, 7), float32] */
}

def @func_18059() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32]) {
  %686 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32]) {
    %683 = @func_16184() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %684 = %683.0;
    %685 = @func_12856() /* ty=Tensor[(10, 9, 11), float32] */;
    (%684, %685)
  };
  %686() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32]) */
}

def @func_23309() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %691 = fn () -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
    %687 = @func_8569() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool]) */;
    %688 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
    %689 = %687.0;
    %690 = %688.0;
    (%689, %690)
  };
  %691() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_3097(%var_3087: Tensor[(2025), float64]) -> Tensor[(2025), bool] {
  %692 = @func_3059() /* ty=Tensor[(2025), float64] */;
  %693 = cast(%var_3087, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %694 = shape_of(%692, dtype="int32") /* ty=Tensor[(1), int32] */;
  %695 = cast(%692, dtype="bool") /* ty=Tensor[(2025), bool] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?), bool] */;
  greater_equal(%695, %696) /* ty=Tensor[(2025), bool] */
}

def @func_1595(%var_1594: Tensor[(2025), float32]) -> (Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(2025), float32]) {
  %705 = fn (%var_1582: Tensor[(2025), float32]) -> (Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(2025), float32]) {
    %697 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
    %698 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
    %699 = cast(%var_1582, dtype="float32") /* ty=Tensor[(2025), float32] */;
    %700 = reshape(%699, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
    %701 = @func_984(%700) /* ty=(Tensor[(2025), int64],) */;
    %702 = %697.0;
    %703 = %698.0;
    %704 = %701.0;
    (%702, %703, %704, %var_1582)
  };
  %705(%var_1594) /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(2025), float32]) */
}

def @func_2503() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) {
  %712 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) {
    %706 = @func_2108() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %707 = @func_1060() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
    %708 = %707.1;
    %709 = cast(%708, dtype="float32") /* ty=Tensor[(2025), float32] */;
    %710 = %706.0;
    %711 = acosh(%709) /* ty=Tensor[(2025), float32] */;
    (%710, %711)
  };
  %712() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */
}

def @func_5269() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  @func_5267() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_23279() -> Tensor[(2025), int64] {
  %713 = @func_13010() /* ty=(Tensor[(2025), int64], Tensor[(15, 9, 15), bool]) */;
  %713.0
}

def @func_6927() -> (Tensor[(15, 9, 15), bool],) {
  %716 = fn () -> (Tensor[(15, 9, 15), bool],) {
    %714 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
    %715 = %714.2;
    (%715,)
  };
  %716() /* ty=(Tensor[(15, 9, 15), bool],) */
}

def @func_9235() -> Tensor[(2025), float64] {
  @func_9233() /* ty=Tensor[(2025), float64] */
}

def @func_11879(%var_11877: Tensor[(396), float32]) -> (Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(88), float64], Tensor[(396), float32]) {
  @func_11876(%var_11877) /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(88), float64], Tensor[(396), float32]) */
}

def @func_4328() -> (Tensor[(2025), float64],) {
  %719 = fn () -> (Tensor[(2025), float64],) {
    %717 = @func_3404() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32]) */;
    %718 = %717.1;
    (%718,)
  };
  %719() /* ty=(Tensor[(2025), float64],) */
}

def @func_5789() -> (Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) {
  @func_5787() /* ty=(Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */
}

def @func_9875() -> (Tensor[(2025), float64], Tensor[(88), float64]) {
  %724 = fn () -> (Tensor[(2025), float64], Tensor[(88), float64]) {
    %720 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
    %721 = @func_5207() /* ty=(Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(104, 2), float32], Tensor[(88), float64]) */;
    %722 = %720.0;
    %723 = %721.3;
    (%722, %723)
  };
  %724() /* ty=(Tensor[(2025), float64], Tensor[(88), float64]) */
}

def @func_18937() -> (Tensor[(2025), int8],) {
  %725 = @func_4728() /* ty=Tensor[(2025), int8] */;
  (%725,)
}

def @func_19416(%var_19414: bool, %var_19415: Tensor[(2, 9, 7), bool]) -> (Tensor[(2, 9, 7), bool], Tensor[(16, 4, 7), float32]) {
  %730 = fn (%var_19387: bool, %var_19388: Tensor[(2, 9, 7), bool]) -> (Tensor[(2, 9, 7), bool], Tensor[(16, 4, 7), float32]) {
    %726 = cast(%var_19387, dtype="bool") /* ty=bool */;
    %727 = cast(%var_19388, dtype="bool") /* ty=Tensor[(2, 9, 7), bool] */;
    %728 = logical_and(%726, %727) /* ty=Tensor[(2, 9, 7), bool] */;
    %729 = @func_16195() /* ty=Tensor[(16, 4, 7), float32] */;
    (%728, %729)
  };
  %730(%var_19414, %var_19415) /* ty=(Tensor[(2, 9, 7), bool], Tensor[(16, 4, 7), float32]) */
}

def @func_2275() -> (Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) {
  @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */
}

def @func_4949() -> Tensor[(2025), int64] {
  %732 = fn () -> Tensor[(2025), int64] {
    %731 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
    %731.1
  };
  %732() /* ty=Tensor[(2025), int64] */
}

def @func_23281() -> Tensor[(2025), int64] {
  @func_23279() /* ty=Tensor[(2025), int64] */
}

def @func_15460() -> (Tensor[(2025), float64],) {
  @func_15458() /* ty=(Tensor[(2025), float64],) */
}

def @func_16327() -> (Tensor[(10, 9, 11), float64], Tensor[(88), float64]) {
  @func_16325() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(88), float64]) */
}

def @func_6782() -> (Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) {
  %733 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %734 = %733.1;
  %735 = @func_4466() /* ty=Tensor[(2025), float64] */;
  (%734, %735)
}

def @func_20004() -> (Tensor[(2025), float64],) {
  %736 = @func_9233() /* ty=Tensor[(2025), float64] */;
  (%736,)
}

def @func_2229() -> (Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64]) {
  %748 = fn () -> (Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64]) {
    %737 = @func_1343() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */;
    %738 = @func_2029() /* ty=Tensor[(2025), float64] */;
    %739 = cast(%738, dtype="float32") /* ty=Tensor[(2025), float32] */;
    %740 = reshape(%739, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
    %741 = @func_1593(%740) /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(2025), float32]) */;
    %742 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
    %743 = @func_2108() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %744 = %737.1;
    %745 = %741.0;
    %746 = %742.0;
    %747 = %743.0;
    (%744, %738, %745, %746, %747)
  };
  %748() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64]) */
}

def @func_13719() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), int64]) {
  %756 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), int64]) {
    %749 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
    %750 = @func_5937() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(1, 7, 9), uint64], uint64, Tensor[(63), uint64], Tensor[(2025), float64]) */;
    %751 = @func_11188() /* ty=(Tensor[(2025), float64], Tensor[(2025), int64]) */;
    %752 = %749.0;
    %753 = %750.4;
    %754 = @func_9591() /* ty=Tensor[(10, 9, 11), uint32] */;
    %755 = %751.1;
    (%752, %753, %754, %755)
  };
  %756() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), int64]) */
}

def @func_1345() -> (Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) {
  @func_1343() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */
}

def @func_10205() -> (Tensor[(10, 9, 11), float64],) {
  %757 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %758 = %757.0;
  (%758,)
}

def @func_7858() -> (Tensor[(10, 9, 11), float64],) {
  %761 = fn () -> (Tensor[(10, 9, 11), float64],) {
    %759 = @func_3404() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32]) */;
    %760 = %759.0;
    (%760,)
  };
  %761() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_4077() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) {
  %762 = @func_3936() /* ty=Tensor[(2025), float64] */;
  %763 = @func_3888() /* ty=Tensor[(10, 9, 11), float32] */;
  (%762, %763)
}

def @func_11188() -> (Tensor[(2025), float64], Tensor[(2025), int64]) {
  %764 = @func_9056() /* ty=(Tensor[(2025), float64],) */;
  %765 = %764.0;
  %766 = cast(%765, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %767 = reshape(%766, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %768 = @func_984(%767) /* ty=(Tensor[(2025), int64],) */;
  %769 = %768.0;
  (%765, %769)
}

def @func_12683(%var_12665: Tensor[(15, 9, 15), bool]) -> (Tensor[(15, 9, 15), float64], Tensor[(2025), float64]) {
  %770 = @func_11788() /* ty=(Tensor[(15, 9, 15), bool],) */;
  %771 = %770.0;
  %772 = cast(%var_12665, dtype="float64") /* ty=Tensor[(15, 9, 15), float64] */;
  %773 = shape_of(%771, dtype="int32") /* ty=Tensor[(3), int32] */;
  %774 = cast(%771, dtype="float64") /* ty=Tensor[(15, 9, 15), float64] */;
  %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %776 = @func_5392() /* ty=(Tensor[(2025), float64],) */;
  %777 = mod(%774, %775) /* ty=Tensor[(15, 9, 15), float64] */;
  %778 = %776.0;
  (%777, %778)
}

def @func_12357() -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  %783 = fn () -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
    %779 = @func_9719() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */;
    %780 = @func_10350() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */;
    %781 = %779.0;
    %782 = %780.1;
    (%781, %782)
  };
  %783() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */
}

def @func_15477() -> Tensor[(2025), float64] {
  @func_15475() /* ty=Tensor[(2025), float64] */
}

def @func_15072() -> (Tensor[(10, 9, 11), float32],) {
  %784 = @func_9343() /* ty=Tensor[(10, 9, 11), float32] */;
  (%784,)
}

def @func_1672() -> (Tensor[(15, 9, 15), float32],) {
  %785 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %786 = %785.2;
  (%786,)
}

def @func_9779(%var_9778: Tensor[(9, 3, 13), float64]) -> (Tensor[(9, 3, 13), float64], Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(52, 4), float32], Tensor[(1, 88), float64]) {
  %799 = fn (%var_9762: Tensor[(9, 3, 13), float64]) -> (Tensor[(9, 3, 13), float64], Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(52, 4), float32], Tensor[(1, 88), float64]) {
    %787 = cast(%var_9762, dtype="float64") /* ty=Tensor[(9, 3, 13), float64] */;
    %788 = @func_3919() /* ty=(Tensor[(2025), float64],) */;
    %789 = cast(meta[relay.Constant][24] /* ty=Tensor[(52, 4), float32] */, dtype="float32") /* ty=Tensor[(52, 4), float32] */;
    %790 = cast(meta[relay.Constant][24] /* ty=Tensor[(52, 4), float32] */, dtype="float32") /* ty=Tensor[(52, 4), float32] */;
    %791 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 88), float64] */, dtype="float64") /* ty=Tensor[(1, 88), float64] */;
    %792 = reshape(%789, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
    %793 = reshape(%790, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
    %794 = reshape(%791, newshape=[88]) /* ty=Tensor[(88), float64] */;
    %795 = @func_5008(%792, %793, %794) /* ty=(Tensor[(8, 13, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(88), float64], Tensor[(2025), float64], Tensor[(396), float32]) */;
    %796 = asin(%787) /* ty=Tensor[(9, 3, 13), float64] */;
    %797 = %788.0;
    %798 = %795.2;
    (%796, %797, %798, meta[relay.Constant][24] /* ty=Tensor[(52, 4), float32] */, meta[relay.Constant][25] /* ty=Tensor[(1, 88), float64] */)
  };
  %799(%var_9778) /* ty=(Tensor[(9, 3, 13), float64], Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(52, 4), float32], Tensor[(1, 88), float64]) */
}

def @func_6674() -> Tensor[(10, 9, 11), float64] {
  @func_6672() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_12205() -> (Tensor[(7, 9, 10), float32],) {
  %801 = fn () -> (Tensor[(7, 9, 10), float32],) {
    %800 = @func_11048() /* ty=Tensor[(7, 9, 10), float32] */;
    (%800,)
  };
  %801() /* ty=(Tensor[(7, 9, 10), float32],) */
}

def @func_9101() -> (Tensor[(2025), float64],) {
  %803 = fn () -> (Tensor[(2025), float64],) {
    %802 = @func_4466() /* ty=Tensor[(2025), float64] */;
    (%802,)
  };
  %803() /* ty=(Tensor[(2025), float64],) */
}

def @func_7382() -> (Tensor[(10, 9, 11), float64],) {
  @func_7380() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_23436() -> (Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32]) {
  %810 = fn () -> (Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32]) {
    %804 = @func_17695() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(990), uint32]) */;
    %805 = @func_18426() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) */;
    %806 = %804.0;
    %807 = %805.3;
    %808 = @func_7914() /* ty=Tensor[(16, 4, 7), float32] */;
    %809 = @func_1790() /* ty=Tensor[(16, 4, 7), float32] */;
    (%806, %807, %808, %809)
  };
  %810() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32]) */
}

def @func_20632() -> Tensor[(10, 9, 11), float32] {
  %812 = fn () -> Tensor[(10, 9, 11), float32] {
    %811 = @func_13083() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(88), float64]) */;
    %811.0
  };
  %812() /* ty=Tensor[(10, 9, 11), float32] */
}

def @func_22432() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %813 = @func_7857() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %814 = @func_11535() /* ty=Tensor[(2025), float64] */;
  %815 = %813.0;
  (%814, %815)
}

def @func_9930() -> (Tensor[(2025), float64],) {
  %818 = fn () -> (Tensor[(2025), float64],) {
    %816 = @func_6657() /* ty=(Tensor[(2025), float64], Tensor[(2025), int64], Tensor[(16, 4, 7), float32]) */;
    %817 = %816.0;
    (%817,)
  };
  %818() /* ty=(Tensor[(2025), float64],) */
}

def @func_13217(%var_13215: Tensor[(10, 11, 13), int64], %var_13216: Tensor[(10, 11, 13), int64]) -> (Tensor[(10, 11, 13), bool], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %828 = fn (%var_13177: Tensor[(10, 11, 13), int64], %var_13178: Tensor[(10, 11, 13), int64]) -> (Tensor[(10, 11, 13), bool], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
    %819 = cast(%var_13178, dtype="bool") /* ty=Tensor[(10, 11, 13), bool] */;
    %820 = shape_of(%var_13177, dtype="int32") /* ty=Tensor[(3), int32] */;
    %821 = cast(%var_13177, dtype="bool") /* ty=Tensor[(10, 11, 13), bool] */;
    %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %823 = cast(meta[relay.Constant][26] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %824 = reshape(%823, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %825 = @func_3767(%824) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) */;
    %826 = greater_equal(%821, %822) /* ty=Tensor[(10, 11, 13), bool] */;
    %827 = %825.0;
    (%826, %827, meta[relay.Constant][26] /* ty=Tensor[(2025), float64] */)
  };
  %828(%var_13215, %var_13216) /* ty=(Tensor[(10, 11, 13), bool], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */
}

def @func_8078() -> (Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) {
  %829 = @func_3511() /* ty=(Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) */;
  %830 = %829.2;
  %831 = cast(%830, dtype="float64") /* ty=Tensor[(15, 9, 15), float64] */;
  %832 = reshape(%831, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %833 = @func_1118(%832) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32], Tensor[(990), uint32], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float32], Tensor[(2025), float32], Tensor[(2025), bool]) */;
  %834 = %833.5;
  (%830, %834)
}

def @func_19190() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), float64]) {
  %835 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %836 = @func_10034() /* ty=(Tensor[(10, 9, 11), uint32],) */;
  %837 = %835.1;
  %838 = %836.0;
  %839 = @func_12506() /* ty=Tensor[(2025), float64] */;
  (%837, %838, %839)
}

def @func_19306() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  @func_19304() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */
}

def @func_6062(%var_6059: Tensor[(27, 75), float64], %var_6060: Tensor[(208), float32], %var_6061: Tensor[(88, 1), float64]) -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(27, 75), float32], Tensor[(10, 9, 11), float64], Tensor[(208), float32], Tensor[(88, 1), float64]) {
  @func_6057(%var_6059, %var_6060, %var_6061) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(27, 75), float32], Tensor[(10, 9, 11), float64], Tensor[(208), float32], Tensor[(88, 1), float64]) */
}

def @func_2567() -> (Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %840 = @func_1060() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %841 = @func_1808() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %842 = @func_2502() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
  %843 = %840.1;
  %844 = %841.0;
  %845 = %842.0;
  (%843, %844, %845)
}

def @func_6076() -> (Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool]) {
  %846 = @func_5486() /* ty=(Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(15, 9, 15), float32]) */;
  %847 = %846.2;
  %848 = cast(%847, dtype="float32") /* ty=Tensor[(15, 9, 15), float32] */;
  %849 = reshape(%848, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), float32] */;
  %850 = @func_5632(%849) /* ty=(Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float64], Tensor[(2025), float64]) */;
  %851 = %850.0;
  (%847, %851)
}

def @func_12972() -> Tensor[(10, 9, 11), float64] {
  %852 = fn () -> Tensor[(10, 9, 11), float64] {
    @func_7173() /* ty=Tensor[(10, 9, 11), float64] */
  };
  %852() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_22953() -> (Tensor[(2025), float64],) {
  %855 = fn () -> (Tensor[(2025), float64],) {
    %853 = @func_11504() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(3, 9, 2), float64]) */;
    %854 = %853.0;
    (%854,)
  };
  %855() /* ty=(Tensor[(2025), float64],) */
}

def @func_13577() -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
  @func_13575() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */
}

def @func_20455() -> (Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) {
  @func_20453() /* ty=(Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) */
}

def @func_16185() -> (Tensor[(10, 9, 11), float64],) {
  %858 = fn () -> (Tensor[(10, 9, 11), float64],) {
    %856 = @func_6278() /* ty=(Tensor[(2025), int64], Tensor[(16, 4, 7), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(44, 2), float64], Tensor[(66, 6), float32]) */;
    %857 = %856.3;
    (%857,)
  };
  %858() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_19574() -> (Tensor[(3, 5, 9), float64], Tensor[(2025), float64]) {
  %863 = fn () -> (Tensor[(3, 5, 9), float64], Tensor[(2025), float64]) {
    %859 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 5, 9), float64] */, dtype="float64") /* ty=Tensor[(3, 5, 9), float64] */;
    %860 = @func_8178() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */;
    %861 = erf(%859) /* ty=Tensor[(3, 5, 9), float64] */;
    %862 = %860.0;
    (%861, %862)
  };
  %863() /* ty=(Tensor[(3, 5, 9), float64], Tensor[(2025), float64]) */
}

def @func_7194() -> (Tensor[(10, 9, 11), float64],) {
  @func_7192() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_15569() -> Tensor[(15, 9, 15), float32] {
  %864 = @func_8019() /* ty=(Tensor[(15, 9, 15), float32],) */;
  %864.0
}

def @func_18939() -> (Tensor[(2025), int8],) {
  @func_18937() /* ty=(Tensor[(2025), int8],) */
}

def @func_4778(%var_4746: Tensor[(2025), float64]) -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  %865 = @func_3919() /* ty=(Tensor[(2025), float64],) */;
  %866 = %865.0;
  %867 = cast(%var_4746, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %868 = shape_of(%866, dtype="int32") /* ty=Tensor[(1), int32] */;
  %869 = cast(%866, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?), float64] */;
  %871 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
  %872 = floor_mod(%869, %870) /* ty=Tensor[(2025), float64] */;
  %873 = %871.0;
  (%872, %873)
}

def @func_6975(%var_6974: Tensor[(15, 9, 15), bool]) -> Tensor[(15, 9, 15), uint16] {
  %880 = fn (%var_6954: Tensor[(15, 9, 15), bool]) -> Tensor[(15, 9, 15), uint16] {
    %874 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
    %875 = %874.2;
    %876 = cast(%var_6954, dtype="uint16") /* ty=Tensor[(15, 9, 15), uint16] */;
    %877 = shape_of(%875, dtype="int32") /* ty=Tensor[(3), int32] */;
    %878 = cast(%875, dtype="uint16") /* ty=Tensor[(15, 9, 15), uint16] */;
    %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    minimum(%878, %879) /* ty=Tensor[(15, 9, 15), uint16] */
  };
  %880(%var_6974) /* ty=Tensor[(15, 9, 15), uint16] */
}

def @func_15847() -> (Tensor[(7, 9, 10), uint8], Tensor[(7, 9, 10), float32], Tensor[(2025), float64], Tensor[(2025), float64]) {
  %881 = @func_11048() /* ty=Tensor[(7, 9, 10), float32] */;
  %882 = cast(meta[relay.Constant][28] /* ty=Tensor[(7, 9, 10), float32] */, dtype="uint8") /* ty=Tensor[(7, 9, 10), uint8] */;
  %883 = shape_of(%881, dtype="int32") /* ty=Tensor[(3), int32] */;
  %884 = cast(%881, dtype="uint8") /* ty=Tensor[(7, 9, 10), uint8] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %886 = cast(meta[relay.Constant][28] /* ty=Tensor[(7, 9, 10), float32] */, dtype="float32") /* ty=Tensor[(7, 9, 10), float32] */;
  %887 = @func_5392() /* ty=(Tensor[(2025), float64],) */;
  %888 = @func_1957() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %889 = left_shift(%884, %885) /* ty=Tensor[(7, 9, 10), uint8] */;
  %890 = exp(%886) /* ty=Tensor[(7, 9, 10), float32] */;
  %891 = %887.0;
  %892 = %888.0;
  (%889, %890, %891, %892)
}

def @func_18856(%var_18855: Tensor[(14, 3, 4), uint8]) -> (Tensor[(14, 3, 4), uint8],) {
  %896 = fn (%var_18835: Tensor[(14, 3, 4), uint8]) -> (Tensor[(14, 3, 4), uint8],) {
    %893 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 1, 4), uint8] */, dtype="uint8") /* ty=Tensor[(14, 1, 4), uint8] */;
    %894 = cast(%var_18835, dtype="uint8") /* ty=Tensor[(14, 3, 4), uint8] */;
    %895 = right_shift(%893, %894) /* ty=Tensor[(14, 3, 4), uint8] */;
    (%895,)
  };
  %896(%var_18855) /* ty=(Tensor[(14, 3, 4), uint8],) */
}

def @func_3130() -> (Tensor[(2025), float64],) {
  %898 = fn () -> (Tensor[(2025), float64],) {
    %897 = @func_3059() /* ty=Tensor[(2025), float64] */;
    (%897,)
  };
  %898() /* ty=(Tensor[(2025), float64],) */
}

def @func_15458() -> (Tensor[(2025), float64],) {
  %899 = @func_6160() /* ty=(Tensor[(2025), float64],) */;
  %900 = %899.0;
  (%900,)
}

def @func_16136(%var_16135: Tensor[(3, 7, 9), float64]) -> (Tensor[(3, 7, 9), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(3, 7, 9), float64]) {
  %911 = fn (%var_16077: Tensor[(3, 7, 9), float64]) -> (Tensor[(3, 7, 9), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(3, 7, 9), float64]) {
    %901 = cast(meta[relay.Constant][30] /* ty=Tensor[(3, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(3, 7, 9), float64] */;
    %902 = shape_of(%var_16077, dtype="int32") /* ty=Tensor[(3), int32] */;
    %903 = cast(%var_16077, dtype="float64") /* ty=Tensor[(3, 7, 9), float64] */;
    %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %905 = @func_15654() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %906 = cast(%var_16077, dtype="float64") /* ty=Tensor[(3, 7, 9), float64] */;
    %907 = floor_divide(%903, %904) /* ty=Tensor[(3, 7, 9), float64] */;
    %908 = @func_9233() /* ty=Tensor[(2025), float64] */;
    %909 = %905.0;
    %910 = log(%906) /* ty=Tensor[(3, 7, 9), float64] */;
    (%907, %908, %909, %910)
  };
  %911(%var_16135) /* ty=(Tensor[(3, 7, 9), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(3, 7, 9), float64]) */
}

def @func_5407(%var_5398: uint64, %var_5399: Tensor[(1, 7, 9), uint64]) -> (Tensor[(1, 7, 9), uint64],) {
  %912 = cast(%var_5398, dtype="uint64") /* ty=uint64 */;
  %913 = cast(%var_5399, dtype="uint64") /* ty=Tensor[(1, 7, 9), uint64] */;
  %914 = left_shift(%912, %913) /* ty=Tensor[(1, 7, 9), uint64] */;
  (%914,)
}

def @func_6762(%var_6761: Tensor[(396), float32]) -> (Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(88), float64], Tensor[(396), float32]) {
  %925 = fn (%var_6753: Tensor[(396), float32]) -> (Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(88), float64], Tensor[(396), float32]) {
    %915 = @func_6104() /* ty=(Tensor[(2025), int64],) */;
    %916 = cast(meta[relay.Constant][31] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
    %917 = %915.0;
    %918 = cast(%917, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %919 = cast(%var_6753, dtype="float32") /* ty=Tensor[(396), float32] */;
    %920 = reshape(%916, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), float64] */;
    %921 = reshape(%918, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %922 = reshape(%919, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
    %923 = @func_4820(%920, %921, %922) /* ty=(Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) */;
    %924 = %923.1;
    (%917, %924, meta[relay.Constant][31] /* ty=Tensor[(88), float64] */, %var_6753)
  };
  %925(%var_6761) /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(88), float64], Tensor[(396), float32]) */
}

def @func_1574() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_6106() -> (Tensor[(2025), int64],) {
  @func_6104() /* ty=(Tensor[(2025), int64],) */
}

def @func_12336() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(10, 9, 11), float64]) {
  %926 = @func_6091() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %927 = @func_6657() /* ty=(Tensor[(2025), float64], Tensor[(2025), int64], Tensor[(16, 4, 7), float32]) */;
  %928 = @func_8047() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %929 = %926.0;
  %930 = %927.1;
  %931 = %928.1;
  (%929, %930, %931)
}

def @func_7174() -> Tensor[(10, 9, 11), float64] {
  %933 = fn () -> Tensor[(10, 9, 11), float64] {
    %932 = @func_2502() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
    %932.0
  };
  %933() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_8541() -> (Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) {
  %934 = @func_7235() /* ty=(Tensor[(2025), int64],) */;
  %935 = %934.0;
  %936 = cast(%935, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %937 = reshape(%936, newshape=[675, 3]) /* ty=Tensor[(675, 3), float64] */;
  %938 = @func_3323(%937) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(675, 3), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32]) */;
  %939 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %940 = @func_2832() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(2025), int64]) */;
  %941 = %938.0;
  %942 = %939.1;
  %943 = @func_3059() /* ty=Tensor[(2025), float64] */;
  %944 = %940.0;
  (%935, %941, %942, %943, %944)
}

def @func_18426() -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) {
  %945 = @func_14328() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */;
  %946 = @func_2228() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), int8], Tensor[(10, 9, 11), float64]) */;
  %947 = @func_4098() /* ty=Tensor[(2025), float32] */;
  %948 = %945.1;
  %949 = %946.4;
  %950 = @func_1790() /* ty=Tensor[(16, 4, 7), float32] */;
  (%947, %948, %949, %950)
}

def @func_3169() -> (Tensor[(10, 9, 11), float64],) {
  %953 = fn () -> (Tensor[(10, 9, 11), float64],) {
    %951 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
    %952 = %951.0;
    (%952,)
  };
  %953() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_5411(%var_5409: uint64, %var_5410: Tensor[(1, 7, 9), uint64]) -> (Tensor[(1, 7, 9), uint64],) {
  @func_5407(%var_5409, %var_5410) /* ty=(Tensor[(1, 7, 9), uint64],) */
}

def @func_12062() -> (Tensor[(2025), int64], Tensor[(10, 9, 11), float32]) {
  @func_12060() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float32]) */
}

def @func_22294() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %956 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
    %954 = @func_12971() /* ty=Tensor[(10, 9, 11), float64] */;
    %955 = @func_16871() /* ty=Tensor[(2025), float64] */;
    (%954, %955)
  };
  %956() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */
}

def @func_20293() -> (Tensor[(10, 9, 11), float64],) {
  %957 = @func_10205() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %958 = %957.0;
  (%958,)
}

def @func_16196() -> Tensor[(16, 4, 7), float32] {
  %959 = fn () -> Tensor[(16, 4, 7), float32] {
    @func_10741() /* ty=Tensor[(16, 4, 7), float32] */
  };
  %959() /* ty=Tensor[(16, 4, 7), float32] */
}

def @func_22623() -> Tensor[(7, 9, 10), float32] {
  @func_22621() /* ty=Tensor[(7, 9, 10), float32] */
}

def @func_6104() -> (Tensor[(2025), int64],) {
  %960 = @func_2567() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %961 = %960.0;
  (%961,)
}

def @func_6160() -> (Tensor[(2025), float64],) {
  %962 = @func_4466() /* ty=Tensor[(2025), float64] */;
  (%962,)
}

def @func_12506() -> Tensor[(2025), float64] {
  %963 = @func_6880() /* ty=(Tensor[(2025), float64],) */;
  %963.0
}

def @func_15910() -> (Tensor[(2025), int64], Tensor[(10, 9, 11), float32]) {
  %964 = @func_8541() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %965 = @func_15072() /* ty=(Tensor[(10, 9, 11), float32],) */;
  %966 = %964.0;
  %967 = %965.0;
  (%966, %967)
}

def @func_16755() -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
  @func_16753() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */
}

def @func_17754() -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) {
  %968 = @func_10872() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float32]) */;
  %969 = @func_8257() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %970 = %968.0;
  %971 = %969.0;
  (%970, %971)
}

def @func_1439() -> Tensor[(10, 9, 11), float64] {
  %972 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %973 = %972.0;
  %974 = cast(%973, dtype="float64") /* ty=Tensor[(10, 9, 11), float64] */;
  log2(%974) /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_11629() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(351, 1), float64]) {
  %980 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(351, 1), float64]) {
    %975 = cast(meta[relay.Constant][32] /* ty=Tensor[(351, 1), float64] */, dtype="float64") /* ty=Tensor[(351, 1), float64] */;
    %976 = reshape(%975, newshape=[9, 3, 13]) /* ty=Tensor[(9, 3, 13), float64] */;
    %977 = @func_9777(%976) /* ty=(Tensor[(9, 3, 13), float64], Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(52, 4), float32], Tensor[(1, 88), float64]) */;
    %978 = @func_3412() /* ty=Tensor[(10, 9, 11), float64] */;
    %979 = %977.1;
    (%978, %979, meta[relay.Constant][32] /* ty=Tensor[(351, 1), float64] */)
  };
  %980() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(351, 1), float64]) */
}

def @func_13956(%var_13955: Tensor[(9, 6, 13), float64]) -> (Tensor[(2025), float64], Tensor[(9, 1, 10), float32], Tensor[(9, 6, 13), bool]) {
  %992 = fn (%var_13933: Tensor[(9, 6, 13), float64]) -> (Tensor[(2025), float64], Tensor[(9, 1, 10), float32], Tensor[(9, 6, 13), bool]) {
    %981 = @func_2567() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
    %982 = @func_5300() /* ty=(Tensor[(9, 1, 10), float32],) */;
    %983 = cast(%var_13933, dtype="float64") /* ty=Tensor[(9, 6, 13), float64] */;
    %984 = atanh(%983) /* ty=Tensor[(9, 6, 13), float64] */;
    %985 = cast(%var_13933, dtype="bool") /* ty=Tensor[(9, 6, 13), bool] */;
    %986 = shape_of(%984, dtype="int32") /* ty=Tensor[(3), int32] */;
    %987 = cast(%984, dtype="bool") /* ty=Tensor[(9, 6, 13), bool] */;
    %988 = dyn.reshape(%985, %986, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %989 = %981.1;
    %990 = %982.0;
    %991 = equal(%987, %988) /* ty=Tensor[(9, 6, 13), bool] */;
    (%989, %990, %991)
  };
  %992(%var_13955) /* ty=(Tensor[(2025), float64], Tensor[(9, 1, 10), float32], Tensor[(9, 6, 13), bool]) */
}

def @func_21758() -> (Tensor[(16, 4, 7), float64], Tensor[(2025), float64]) {
  %999 = fn () -> (Tensor[(16, 4, 7), float64], Tensor[(2025), float64]) {
    %993 = @func_13060() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
    %994 = %993.1;
    %995 = cast(%994, dtype="float64") /* ty=Tensor[(16, 4, 7), float64] */;
    %996 = @func_13060() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
    %997 = cosh(%995) /* ty=Tensor[(16, 4, 7), float64] */;
    %998 = %996.0;
    (%997, %998)
  };
  %999() /* ty=(Tensor[(16, 4, 7), float64], Tensor[(2025), float64]) */
}

def @func_1809() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %1004 = fn () -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
    %1000 = @func_1343() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */;
    %1001 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %1002 = %1000.1;
    %1003 = %1001.0;
    (%1002, %1003)
  };
  %1004() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_15274() -> Tensor[(2025), int8] {
  %1005 = @func_10566() /* ty=(Tensor[(2025), int8],) */;
  %1005.0
}

def @func_21509(%var_21508: Tensor[(1, 3, 15), int8]) -> (Tensor[(12, 3, 15), bool], Tensor[(2025), float64], Tensor[(2025), int8], Tensor[(12, 3, 15), int64]) {
  %1016 = fn (%var_21483: Tensor[(1, 3, 15), int8]) -> (Tensor[(12, 3, 15), bool], Tensor[(2025), float64], Tensor[(2025), int8], Tensor[(12, 3, 15), int64]) {
    %1006 = cast(%var_21483, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
    %1007 = cast(meta[relay.Constant][33] /* ty=Tensor[(12, 3, 15), int8] */, dtype="bool") /* ty=Tensor[(12, 3, 15), bool] */;
    %1008 = @func_11504() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(3, 9, 2), float64]) */;
    %1009 = @func_20081() /* ty=(Tensor[(2025), int8], Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
    %1010 = cast(%var_21483, dtype="int64") /* ty=Tensor[(1, 3, 15), int64] */;
    %1011 = cast(meta[relay.Constant][33] /* ty=Tensor[(12, 3, 15), int8] */, dtype="int64") /* ty=Tensor[(12, 3, 15), int64] */;
    %1012 = less(%1006, %1007) /* ty=Tensor[(12, 3, 15), bool] */;
    %1013 = %1008.0;
    %1014 = %1009.0;
    %1015 = multiply(%1010, %1011) /* ty=Tensor[(12, 3, 15), int64] */;
    (%1012, %1013, %1014, %1015)
  };
  %1016(%var_21508) /* ty=(Tensor[(12, 3, 15), bool], Tensor[(2025), float64], Tensor[(2025), int8], Tensor[(12, 3, 15), int64]) */
}

def @func_10357() -> Tensor[(16, 4, 7), float32] {
  @func_7914() /* ty=Tensor[(16, 4, 7), float32] */
}

def @func_13010() -> (Tensor[(2025), int64], Tensor[(15, 9, 15), bool]) {
  %1017 = @func_11245() /* ty=(Tensor[(2025), int64],) */;
  %1018 = @func_3207() /* ty=(Tensor[(15, 9, 15), bool],) */;
  %1019 = %1017.0;
  %1020 = %1018.0;
  (%1019, %1020)
}

def @func_16479() -> Tensor[(2025), float32] {
  @func_16477() /* ty=Tensor[(2025), float32] */
}

def @func_10916() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  @func_10914() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */
}

def @main(%var_24158: Tensor[(1, 2025), bool]) -> (Tensor[(10, 9, 11), float64], Tensor[(990), uint32], Tensor[(15, 9, 15), float64], Tensor[(2025), float64], Tensor[(?, 2025), int16], Tensor[(1, 2025), float32]) {
  %1021 = @func_9291() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64]) */;
  %1022 = @func_23505() /* ty=(Tensor[(990), uint32],) */;
  %1023 = cast(%var_24158, dtype="bool") /* ty=Tensor[(1, 2025), bool] */;
  %1024 = reshape(%1023, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), bool] */;
  %1025 = @func_12686(%1024) /* ty=(Tensor[(15, 9, 15), float64], Tensor[(2025), float64]) */;
  %1026 = cast(%var_24158, dtype="float32") /* ty=Tensor[(1, 2025), float32] */;
  %1027 = atan(%1026) /* ty=Tensor[(1, 2025), float32] */;
  %1028 = cast(%var_24158, dtype="int16") /* ty=Tensor[(1, 2025), int16] */;
  %1029 = shape_of(%1027, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1030 = cast(%1027, dtype="int16") /* ty=Tensor[(1, 2025), int16] */;
  %1031 = dyn.reshape(%1028, %1029, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1032 = cast(%var_24158, dtype="float32") /* ty=Tensor[(1, 2025), float32] */;
  %1033 = %1021.1;
  %1034 = %1022.0;
  %1035 = %1025.0;
  %1036 = @func_13236() /* ty=Tensor[(2025), float64] */;
  %1037 = right_shift(%1030, %1031) /* ty=Tensor[(?, 2025), int16] */;
  %1038 = sigmoid(%1032) /* ty=Tensor[(1, 2025), float32] */;
  (%1033, %1034, %1035, %1036, %1037, %1038)
}

def @func_10537() -> (Tensor[(2025), float32],) {
  %1041 = fn () -> (Tensor[(2025), float32],) {
    %1039 = @func_2502() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
    %1040 = %1039.1;
    (%1040,)
  };
  %1041() /* ty=(Tensor[(2025), float32],) */
}

def @func_15528(%var_15522: Tensor[(2, 8, 7), float64]) -> Tensor[(2, 8, 7), float64] {
  %1042 = cast(%var_15522, dtype="float64") /* ty=Tensor[(2, 8, 7), float64] */;
  erf(%1042) /* ty=Tensor[(2, 8, 7), float64] */
}

def @func_7891(%var_7889: Tensor[(26), int16]) -> (Tensor[(10, 9, 11), float64], Tensor[(13, 2, 1), int16], int16, Tensor[(26), int16]) {
  @func_7888(%var_7889) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(13, 2, 1), int16], int16, Tensor[(26), int16]) */
}

def @func_22065() -> (Tensor[(10, 9, 11), float32],) {
  %1043 = @func_16221() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float32]) */;
  %1044 = %1043.1;
  (%1044,)
}

def @func_12060() -> (Tensor[(2025), int64], Tensor[(10, 9, 11), float32]) {
  %1045 = @func_8541() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %1046 = @func_8541() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %1047 = %1045.0;
  %1048 = %1046.4;
  (%1047, %1048)
}

def @func_9508(%var_9506: Tensor[(13, 2), int16]) -> (Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(13, 2), int16]) {
  @func_9505(%var_9506) /* ty=(Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(13, 2), int16]) */
}

def @func_18527() -> (Tensor[(2025), int64], Tensor[(7, 9, 10), float32], Tensor[(6, 11, 6), float32], Tensor[(1, 396), float32]) {
  %1056 = fn () -> (Tensor[(2025), int64], Tensor[(7, 9, 10), float32], Tensor[(6, 11, 6), float32], Tensor[(1, 396), float32]) {
    %1049 = @func_15761() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float32], Tensor[(2025), int64], Tensor[(10, 9, 11), float32]) */;
    %1050 = @func_12204() /* ty=(Tensor[(7, 9, 10), float32],) */;
    %1051 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 396), float32] */, dtype="float32") /* ty=Tensor[(1, 396), float32] */;
    %1052 = reshape(%1051, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float32] */;
    %1053 = %1049.3;
    %1054 = %1050.0;
    %1055 = @func_10461(%1052) /* ty=Tensor[(6, 11, 6), float32] */;
    (%1053, %1054, %1055, meta[relay.Constant][34] /* ty=Tensor[(1, 396), float32] */)
  };
  %1056() /* ty=(Tensor[(2025), int64], Tensor[(7, 9, 10), float32], Tensor[(6, 11, 6), float32], Tensor[(1, 396), float32]) */
}

def @func_15634() -> (Tensor[(16, 4, 7), float32], Tensor[(9, 1, 10), float32]) {
  @func_15632() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(9, 1, 10), float32]) */
}

def @func_15048(%var_15047: Tensor[(702), float64]) -> (Tensor[(2025), int8], Tensor[(9, 1, 10), float32], Tensor[(702), float64], Tensor[(3, 9, 2), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %1068 = fn (%var_14993: Tensor[(702), float64]) -> (Tensor[(2025), int8], Tensor[(9, 1, 10), float32], Tensor[(702), float64], Tensor[(3, 9, 2), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
    %1057 = @func_2366() /* ty=(Tensor[(2025), int8],) */;
    %1058 = cast(%var_14993, dtype="float64") /* ty=Tensor[(702), float64] */;
    %1059 = reshape(%1058, newshape=[9, 6, 13]) /* ty=Tensor[(9, 6, 13), float64] */;
    %1060 = @func_13954(%1059) /* ty=(Tensor[(2025), float64], Tensor[(9, 1, 10), float32], Tensor[(9, 6, 13), bool]) */;
    %1061 = @func_14601() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
    %1062 = @func_5392() /* ty=(Tensor[(2025), float64],) */;
    %1063 = %1057.0;
    %1064 = %1060.1;
    %1065 = @func_3226() /* ty=Tensor[(3, 9, 2), float64] */;
    %1066 = %1061.1;
    %1067 = %1062.0;
    (%1063, %1064, %var_14993, %1065, %1066, %1067)
  };
  %1068(%var_15047) /* ty=(Tensor[(2025), int8], Tensor[(9, 1, 10), float32], Tensor[(702), float64], Tensor[(3, 9, 2), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */
}

def @func_17661() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %1072 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
    %1069 = @func_8490() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
    %1070 = @func_12971() /* ty=Tensor[(10, 9, 11), float64] */;
    %1071 = %1069.0;
    (%1070, %1071)
  };
  %1072() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */
}

def @func_8697() -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  %1073 = @func_6880() /* ty=(Tensor[(2025), float64],) */;
  %1074 = @func_1957() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %1075 = %1073.0;
  %1076 = %1074.0;
  (%1075, %1076)
}

def @func_21295() -> Tensor[(7, 9, 10), float32] {
  @func_21293() /* ty=Tensor[(7, 9, 10), float32] */
}

def @func_10849() -> Tensor[(2025), float64] {
  @func_2029() /* ty=Tensor[(2025), float64] */
}

def @func_21379() -> (Tensor[(10, 9, 11), float64],) {
  %1077 = @func_2108() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1078 = %1077.0;
  (%1078,)
}

def @func_18292() -> (Tensor[(10, 9, 11), float64],) {
  %1080 = fn () -> (Tensor[(10, 9, 11), float64],) {
    %1079 = @func_7173() /* ty=Tensor[(10, 9, 11), float64] */;
    (%1079,)
  };
  %1080() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_15710() -> Tensor[(15, 9, 15), float32] {
  %1081 = @func_14328() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */;
  %1081.0
}

def @func_4079() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) {
  @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */
}

def @func_18348(%var_18326: Tensor[(11, 11, 14), float32], %var_18327: Tensor[(11, 11, 14), float32]) -> (Tensor[(11, 11, 14), float32],) {
  %1082 = cast(%var_18327, dtype="float32") /* ty=Tensor[(11, 11, 14), float32] */;
  %1083 = shape_of(%var_18326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1084 = cast(%var_18326, dtype="float32") /* ty=Tensor[(11, 11, 14), float32] */;
  %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1086 = power(%1084, %1085) /* ty=Tensor[(11, 11, 14), float32] */;
  (%1086,)
}

def @func_14756() -> (Tensor[(2025), float32], Tensor[(10, 9, 11), uint32], Tensor[(16, 4, 7), float32]) {
  %1087 = @func_5970() /* ty=Tensor[(2025), float32] */;
  %1088 = cast(%1087, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %1089 = reshape(%1088, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %1090 = @func_1593(%1089) /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(2025), float32]) */;
  %1091 = @func_2763() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) */;
  %1092 = %1090.0;
  %1093 = %1091.2;
  (%1087, %1092, %1093)
}

def @func_20822() -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) {
  @func_20820() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) */
}

def @func_11130() -> Tensor[(10, 9, 11), uint32] {
  %1095 = fn () -> Tensor[(10, 9, 11), uint32] {
    %1094 = @func_10034() /* ty=(Tensor[(10, 9, 11), uint32],) */;
    %1094.0
  };
  %1095() /* ty=Tensor[(10, 9, 11), uint32] */
}

def @func_9465() -> (Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) {
  @func_9463() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) */
}

def @func_18738() -> (Tensor[(10, 9, 11), uint32],) {
  %1096 = @func_15325() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(63), uint64]) */;
  %1097 = %1096.0;
  (%1097,)
}

def @func_17023() -> (Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), float64]) {
  @func_17021() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), float64]) */
}

def @func_10741() -> Tensor[(16, 4, 7), float32] {
  %1098 = @func_7408() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), float64]) */;
  %1098.0
}

def @func_19489() -> (Tensor[(2025), float32],) {
  %1099 = @func_14756() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), uint32], Tensor[(16, 4, 7), float32]) */;
  %1100 = %1099.0;
  (%1100,)
}

def @func_18368() -> (Tensor[(63), uint64],) {
  @func_18366() /* ty=(Tensor[(63), uint64],) */
}

def @func_16625() -> (Tensor[(16, 4, 7), float32],) {
  %1103 = fn () -> (Tensor[(16, 4, 7), float32],) {
    %1101 = @func_13575() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
    %1102 = %1101.1;
    (%1102,)
  };
  %1103() /* ty=(Tensor[(16, 4, 7), float32],) */
}

def @func_9143() -> Tensor[(15, 9, 15), float32] {
  %1105 = fn () -> Tensor[(15, 9, 15), float32] {
    %1104 = @func_5486() /* ty=(Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(15, 9, 15), float32]) */;
    %1104.2
  };
  %1105() /* ty=Tensor[(15, 9, 15), float32] */
}

def @func_7153(%var_7151: int16, %var_7152: Tensor[(13, 2, 1), int16]) -> (Tensor[(13, 2, 1), int16], Tensor[(3, 9, 2), float64]) {
  @func_7149(%var_7151, %var_7152) /* ty=(Tensor[(13, 2, 1), int16], Tensor[(3, 9, 2), float64]) */
}

def @func_6278() -> (Tensor[(2025), int64], Tensor[(16, 4, 7), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(44, 2), float64], Tensor[(66, 6), float32]) {
  %1106 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %1107 = %1106.1;
  %1108 = cast(%1107, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1109 = reshape(%1108, newshape=[675, 3]) /* ty=Tensor[(675, 3), float64] */;
  %1110 = @func_3323(%1109) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(675, 3), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32]) */;
  %1111 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %1112 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1113 = cast(meta[relay.Constant][35] /* ty=Tensor[(44, 2), float64] */, dtype="float64") /* ty=Tensor[(44, 2), float64] */;
  %1114 = cast(meta[relay.Constant][36] /* ty=Tensor[(66, 6), float32] */, dtype="float32") /* ty=Tensor[(66, 6), float32] */;
  %1115 = reshape(%1113, newshape=[88]) /* ty=Tensor[(88), float64] */;
  %1116 = reshape(%1114, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %1117 = @func_5513(%1115, %1116) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(4, 9, 11), float32], Tensor[(88), float64], Tensor[(3, 675), float64], Tensor[(6, 66), float32]) */;
  %1118 = %1110.5;
  %1119 = %1111.0;
  %1120 = %1112.0;
  %1121 = %1117.4;
  (%1107, %1118, %1119, %1120, %1121, meta[relay.Constant][35] /* ty=Tensor[(44, 2), float64] */, meta[relay.Constant][36] /* ty=Tensor[(66, 6), float32] */)
}

def @func_7380() -> (Tensor[(10, 9, 11), float64],) {
  %1122 = @func_5267() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %1123 = %1122.0;
  (%1123,)
}

def @func_16064() -> Tensor[(2025), float64] {
  %1124 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %1124.0
}

def @func_10246() -> (Tensor[(10, 9, 11), uint32], Tensor[(2025), float64]) {
  %1125 = @func_6782() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) */;
  %1126 = @func_9591() /* ty=Tensor[(10, 9, 11), uint32] */;
  %1127 = %1125.1;
  (%1126, %1127)
}

def @func_20354() -> Tensor[(10, 9, 11), float64] {
  @func_20352() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_15388() -> (Tensor[(16, 4, 7), float64],) {
  %1132 = fn () -> (Tensor[(16, 4, 7), float64],) {
    %1128 = @func_13575() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
    %1129 = %1128.1;
    %1130 = cast(%1129, dtype="float64") /* ty=Tensor[(16, 4, 7), float64] */;
    %1131 = sinh(%1130) /* ty=Tensor[(16, 4, 7), float64] */;
    (%1131,)
  };
  %1132() /* ty=(Tensor[(16, 4, 7), float64],) */
}

def @func_13117() -> (Tensor[(10, 9, 11), float64],) {
  %1135 = fn () -> (Tensor[(10, 9, 11), float64],) {
    %1133 = @func_2502() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
    %1134 = %1133.0;
    (%1134,)
  };
  %1135() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_14603() -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) {
  @func_14601() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */
}

def @func_14894() -> Tensor[(10, 9, 11), float32] {
  @func_14892() /* ty=Tensor[(10, 9, 11), float32] */
}

def @func_17695() -> (Tensor[(16, 4, 7), float32], Tensor[(990), uint32]) {
  %1136 = @func_16624() /* ty=(Tensor[(16, 4, 7), float32],) */;
  %1137 = @func_1535() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(990), uint32]) */;
  %1138 = %1136.0;
  %1139 = %1137.2;
  (%1138, %1139)
}

def @func_20240() -> (Tensor[(10, 9, 11), float64],) {
  %1140 = @func_7380() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1141 = %1140.0;
  (%1141,)
}

def @func_22067() -> (Tensor[(10, 9, 11), float32],) {
  @func_22065() /* ty=(Tensor[(10, 9, 11), float32],) */
}

def @func_21254() -> Tensor[(10, 9, 11), float64] {
  %1143 = fn () -> Tensor[(10, 9, 11), float64] {
    %1142 = @func_11545() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %1142.0
  };
  %1143() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_22634() -> (Tensor[(10, 9, 11), float32],) {
  %1144 = @func_15072() /* ty=(Tensor[(10, 9, 11), float32],) */;
  %1145 = %1144.0;
  (%1145,)
}

def @func_19445() -> Tensor[(10, 9, 11), float32] {
  @func_19443() /* ty=Tensor[(10, 9, 11), float32] */
}

def @func_17828() -> (Tensor[(10, 9, 11), uint32],) {
  %1148 = fn () -> (Tensor[(10, 9, 11), uint32],) {
    %1146 = @func_12751() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(88), float64], Tensor[(6, 66), float32], Tensor[(2025), float64], Tensor[(396), float32]) */;
    %1147 = %1146.0;
    (%1147,)
  };
  %1148() /* ty=(Tensor[(10, 9, 11), uint32],) */
}

def @func_4283(%var_4281: Tensor[(10, 9, 11), float32]) -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) {
  @func_4280(%var_4281) /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) */
}

def @func_7185() -> (Tensor[(2025), float32], Tensor[(2025), int64]) {
  @func_7183() /* ty=(Tensor[(2025), float32], Tensor[(2025), int64]) */
}

def @func_22700() -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) {
  %1149 = @func_21145() /* ty=(Tensor[(16, 4, 7), float32],) */;
  %1150 = @func_19549() /* ty=(Tensor[(16, 4, 7), float32],) */;
  %1151 = %1149.0;
  %1152 = @func_21253() /* ty=Tensor[(10, 9, 11), float64] */;
  %1153 = %1150.0;
  (%1151, %1152, %1153)
}

def @func_23240() -> (Tensor[(2025), float64],) {
  @func_23238() /* ty=(Tensor[(2025), float64],) */
}

def @func_21654() -> Tensor[(16, 4, 7), float64] {
  %1156 = fn () -> Tensor[(16, 4, 7), float64] {
    %1154 = @func_7914() /* ty=Tensor[(16, 4, 7), float32] */;
    %1155 = cast(%1154, dtype="float64") /* ty=Tensor[(16, 4, 7), float64] */;
    erf(%1155) /* ty=Tensor[(16, 4, 7), float64] */
  };
  %1156() /* ty=Tensor[(16, 4, 7), float64] */
}

def @func_14227(%var_14216: Tensor[(675, 3), bool]) -> (Tensor[(10, 9, 11), float64], Tensor[(675, 3), bool]) {
  %1157 = cast(%var_14216, dtype="bool") /* ty=Tensor[(675, 3), bool] */;
  %1158 = reshape(%1157, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), bool] */;
  %1159 = @func_6973(%1158) /* ty=Tensor[(15, 9, 15), uint16] */;
  %1160 = cast(%1159, dtype="bool") /* ty=Tensor[(15, 9, 15), bool] */;
  %1161 = shape_of(%var_14216, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1162 = cast(%var_14216, dtype="bool") /* ty=Tensor[(675, 3), bool] */;
  %1163 = dyn.reshape(%1160, %1161, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1164 = @func_7173() /* ty=Tensor[(10, 9, 11), float64] */;
  %1165 = equal(%1162, %1163) /* ty=Tensor[(675, 3), bool] */;
  (%1164, %1165)
}

def @func_1537() -> (Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(990), uint32]) {
  @func_1535() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(990), uint32]) */
}

def @func_21692(%var_21691: Tensor[(2025), float64]) -> (Tensor[(7, 9, 10), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %1173 = fn (%var_21678: Tensor[(2025), float64]) -> (Tensor[(7, 9, 10), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
    %1166 = @func_21293() /* ty=Tensor[(7, 9, 10), float32] */;
    %1167 = cast(%1166, dtype="float32") /* ty=Tensor[(7, 9, 10), float32] */;
    %1168 = cast(%var_21678, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %1169 = reshape(%1168, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %1170 = @func_7574(%1169) /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float32]) */;
    %1171 = acosh(%1167) /* ty=Tensor[(7, 9, 10), float32] */;
    %1172 = %1170.1;
    (%1171, %1172, %var_21678)
  };
  %1173(%var_21691) /* ty=(Tensor[(7, 9, 10), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */
}

def @func_964(%var_962: Tensor[(10, 9, 11), uint32]) -> Tensor[(10, 9, 11), float32] {
  @func_961(%var_962) /* ty=Tensor[(10, 9, 11), float32] */
}

def @func_2664(%var_2663: Tensor[(2025), float64]) -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
  %1182 = fn (%var_2649: Tensor[(2025), float64]) -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
    %1174 = @func_1957() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
    %1175 = %1174.0;
    %1176 = cast(%var_2649, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %1177 = shape_of(%1175, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1178 = cast(%1175, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %1179 = dyn.reshape(%1176, %1177, newshape=[]) /* ty=Tensor[(?), float64] */;
    %1180 = mod(%1178, %1179) /* ty=Tensor[(2025), float64] */;
    %1181 = @func_1790() /* ty=Tensor[(16, 4, 7), float32] */;
    (%1180, %1181)
  };
  %1182(%var_2663) /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */
}

def @func_22636() -> (Tensor[(10, 9, 11), float32],) {
  @func_22634() /* ty=(Tensor[(10, 9, 11), float32],) */
}

def @func_15502(%var_15500: Tensor[(5, 12, 11), float64]) -> Tensor[(5, 12, 11), float64] {
  @func_15499(%var_15500) /* ty=Tensor[(5, 12, 11), float64] */
}

def @func_21371() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  %1183 = @func_9421() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32]) */;
  %1184 = @func_13589() /* ty=Tensor[(10, 9, 11), float64] */;
  %1185 = %1183.0;
  (%1184, %1185)
}

def @func_13632() -> (Tensor[(2025), float64],) {
  @func_13630() /* ty=(Tensor[(2025), float64],) */
}

def @func_9423() -> (Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32]) {
  @func_9421() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32]) */
}

def @func_20553() -> (Tensor[(16, 4, 7), float32], int16, Tensor[(30), int16], Tensor[(3, 10, 1), float64]) {
  @func_20551() /* ty=(Tensor[(16, 4, 7), float32], int16, Tensor[(30), int16], Tensor[(3, 10, 1), float64]) */
}

def @func_24065() -> (Tensor[(2025), int64], Tensor[(7, 9, 10), float32], Tensor[(2025), int64], Tensor[(10, 9, 11), float64]) {
  @func_24063() /* ty=(Tensor[(2025), int64], Tensor[(7, 9, 10), float32], Tensor[(2025), int64], Tensor[(10, 9, 11), float64]) */
}

def @func_10207() -> (Tensor[(10, 9, 11), float64],) {
  @func_10205() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_18928(%var_18926: Tensor[(26, 1), int16]) -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(26, 1), int16]) {
  %1186 = @func_15761() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float32], Tensor[(2025), int64], Tensor[(10, 9, 11), float32]) */;
  %1187 = cast(%var_18926, dtype="int16") /* ty=Tensor[(26, 1), int16] */;
  %1188 = reshape(%1187, newshape=[13, 2]) /* ty=Tensor[(13, 2), int16] */;
  %1189 = @func_9505(%1188) /* ty=(Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(13, 2), int16]) */;
  %1190 = %1186.2;
  %1191 = %1189.1;
  (%1190, %1191, %var_18926)
}

def @func_22601(%var_22528: Tensor[(4, 10, 14), float64], %var_22550: Tensor[(2025, 1), float64]) -> (Tensor[(990), uint32], Tensor[(2025, 1), float64], Tensor[(10, 9, 11), float64], Tensor[(4, 10, 14), float32]) {
  %1192 = cast(%var_22550, dtype="float64") /* ty=Tensor[(2025, 1), float64] */;
  %1193 = reshape(%1192, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %1194 = @func_1118(%1193) /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32], Tensor[(990), uint32], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float32], Tensor[(2025), float32], Tensor[(2025), bool]) */;
  %1195 = @func_18426() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) */;
  %1196 = cast(%var_22528, dtype="float64") /* ty=Tensor[(4, 10, 14), float64] */;
  %1197 = cosh(%1196) /* ty=Tensor[(4, 10, 14), float64] */;
  %1198 = cast(%var_22528, dtype="float32") /* ty=Tensor[(4, 10, 14), float32] */;
  %1199 = shape_of(%1197, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1200 = cast(%1197, dtype="float32") /* ty=Tensor[(4, 10, 14), float32] */;
  %1201 = dyn.reshape(%1198, %1199, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1202 = %1194.2;
  %1203 = %1195.1;
  %1204 = power(%1200, %1201) /* ty=Tensor[(4, 10, 14), float32] */;
  (%1202, %var_22550, %1203, %1204)
}

def @func_14758() -> (Tensor[(2025), float32], Tensor[(10, 9, 11), uint32], Tensor[(16, 4, 7), float32]) {
  @func_14756() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), uint32], Tensor[(16, 4, 7), float32]) */
}

def @func_1828() -> Tensor[(10, 9, 11), float64] {
  %1206 = fn () -> Tensor[(10, 9, 11), float64] {
    %1205 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
    %1205.1
  };
  %1206() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_12338() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(10, 9, 11), float64]) {
  @func_12336() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(10, 9, 11), float64]) */
}

def @func_2998() -> (Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32], Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) {
  @func_2996() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32], Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */
}

def @func_15276() -> Tensor[(2025), int8] {
  @func_15274() /* ty=Tensor[(2025), int8] */
}

def @func_9653(%var_9642: Tensor[(15, 4, 13), float64]) -> (Tensor[(15, 4, 13), float64], Tensor[(15, 4, 13), float32]) {
  %1207 = cast(%var_9642, dtype="float64") /* ty=Tensor[(15, 4, 13), float64] */;
  %1208 = cast(%var_9642, dtype="float32") /* ty=Tensor[(15, 4, 13), float32] */;
  %1209 = asinh(%1207) /* ty=Tensor[(15, 4, 13), float64] */;
  %1210 = cosh(%1208) /* ty=Tensor[(15, 4, 13), float32] */;
  (%1209, %1210)
}

def @func_16725() -> (Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) {
  %1211 = @func_3116() /* ty=(Tensor[(15, 9, 15), float32],) */;
  %1212 = @func_7978() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(8, 78), float32]) */;
  %1213 = %1211.0;
  %1214 = %1212.1;
  (%1213, %1214)
}

def @func_15712() -> Tensor[(15, 9, 15), float32] {
  @func_15710() /* ty=Tensor[(15, 9, 15), float32] */
}

def @func_17697() -> (Tensor[(16, 4, 7), float32], Tensor[(990), uint32]) {
  @func_17695() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(990), uint32]) */
}

def @func_4280(%var_4271: Tensor[(10, 9, 11), float32]) -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) {
  %1215 = @func_1808() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1216 = @func_1957() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %1217 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %1218 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %1219 = %1218.1;
  %1220 = cast(%var_4271, dtype="float64") /* ty=Tensor[(10, 9, 11), float64] */;
  %1221 = shape_of(%1219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1222 = cast(%1219, dtype="float64") /* ty=Tensor[(10, 9, 11), float64] */;
  %1223 = dyn.reshape(%1220, %1221, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1224 = %1215.0;
  %1225 = %1216.1;
  %1226 = %1217.3;
  %1227 = mod(%1222, %1223) /* ty=Tensor[(10, 9, 11), float64] */;
  (%1224, %1225, %1226, %1227)
}

def @func_11952() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %1236 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
    %1228 = @func_7519() /* ty=(Tensor[(104, 2), float32], Tensor[(10, 9, 11), float64]) */;
    %1229 = @func_11188() /* ty=(Tensor[(2025), float64], Tensor[(2025), int64]) */;
    %1230 = @func_8897() /* ty=(Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), int8]) */;
    %1231 = @func_4327() /* ty=(Tensor[(2025), float64],) */;
    %1232 = %1228.1;
    %1233 = %1229.1;
    %1234 = %1230.2;
    %1235 = %1231.0;
    (%1232, %1233, %1234, %1235)
  };
  %1236() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) */
}

def @func_6431() -> (Tensor[(2025), int64],) {
  @func_6429() /* ty=(Tensor[(2025), int64],) */
}

def @func_19549() -> (Tensor[(16, 4, 7), float32],) {
  %1237 = @func_16624() /* ty=(Tensor[(16, 4, 7), float32],) */;
  %1238 = %1237.0;
  (%1238,)
}

def @func_13575() -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
  %1239 = @func_1343() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */;
  %1240 = %1239.1;
  %1241 = @func_10357() /* ty=Tensor[(16, 4, 7), float32] */;
  (%1240, %1241)
}

def @func_5787() -> (Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) {
  %1242 = @func_4861() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */;
  %1243 = @func_4861() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */;
  %1244 = %1242.2;
  %1245 = %1243.3;
  (%1244, %1245)
}

def @func_4100() -> Tensor[(2025), float32] {
  @func_4098() /* ty=Tensor[(2025), float32] */
}

def @func_23260(%var_23259: Tensor[(11, 8, 6), float64]) -> Tensor[(11, 8, 6), float64] {
  %1247 = fn (%var_23248: Tensor[(11, 8, 6), float64]) -> Tensor[(11, 8, 6), float64] {
    %1246 = cast(%var_23248, dtype="float64") /* ty=Tensor[(11, 8, 6), float64] */;
    asinh(%1246) /* ty=Tensor[(11, 8, 6), float64] */
  };
  %1247(%var_23259) /* ty=Tensor[(11, 8, 6), float64] */
}

def @func_10155() -> Tensor[(10, 9, 11), float64] {
  %1249 = fn () -> Tensor[(10, 9, 11), float64] {
    %1248 = @func_7096() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %1248.0
  };
  %1249() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_18366() -> (Tensor[(63), uint64],) {
  %1250 = @func_11451() /* ty=(Tensor[(63), uint64], Tensor[(990), uint32], Tensor[(2025), float64]) */;
  %1251 = %1250.0;
  (%1251,)
}

def @func_1882() -> Tensor[(2025), float64] {
  @func_1880() /* ty=Tensor[(2025), float64] */
}

def @func_7979() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(8, 78), float32]) {
  %1260 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(8, 78), float32]) {
    %1252 = @func_7686() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
    %1253 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 78), float64] */, dtype="float64") /* ty=Tensor[(8, 78), float64] */;
    %1254 = reshape(%1253, newshape=[12, 4, 13]) /* ty=Tensor[(12, 4, 13), float64] */;
    %1255 = @func_6859(%1254) /* ty=(Tensor[(12, 4, 13), float64], Tensor[(2025), float64], Tensor[(208), float32], Tensor[(88), float64]) */;
    %1256 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 78), float64] */, dtype="float32") /* ty=Tensor[(8, 78), float32] */;
    %1257 = %1252.1;
    %1258 = %1255.1;
    %1259 = log2(%1256) /* ty=Tensor[(8, 78), float32] */;
    (%1257, %1258, %1259)
  };
  %1260() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(8, 78), float32]) */
}

def @func_18605() -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float64], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) {
  %1261 = @func_15387() /* ty=(Tensor[(16, 4, 7), float64],) */;
  %1262 = @func_9421() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32]) */;
  %1263 = @func_17448() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) */;
  %1264 = @func_11535() /* ty=Tensor[(2025), float64] */;
  %1265 = %1261.0;
  %1266 = %1262.2;
  %1267 = %1263.1;
  (%1264, %1265, %1266, %1267)
}

def @func_3118() -> (Tensor[(15, 9, 15), float32],) {
  @func_3116() /* ty=(Tensor[(15, 9, 15), float32],) */
}

def @func_22015() -> (Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), uint32]) {
  %1268 = @func_18873() /* ty=(Tensor[(10, 9, 11), uint32],) */;
  %1269 = @func_18738() /* ty=(Tensor[(10, 9, 11), uint32],) */;
  %1270 = %1268.0;
  %1271 = %1269.0;
  (%1270, %1271)
}

def @func_11050() -> Tensor[(7, 9, 10), float32] {
  @func_11048() /* ty=Tensor[(7, 9, 10), float32] */
}

def @func_20521() -> (Tensor[(2025), float64], Tensor[(14, 3, 4), uint8], Tensor[(168), uint8], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) {
  @func_20519() /* ty=(Tensor[(2025), float64], Tensor[(14, 3, 4), uint8], Tensor[(168), uint8], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */
}

def @func_7687() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %1276 = fn () -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
    %1272 = @func_6160() /* ty=(Tensor[(2025), float64],) */;
    %1273 = @func_7380() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %1274 = %1272.0;
    %1275 = %1273.0;
    (%1274, %1275)
  };
  %1276() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_18187() -> Tensor[(2025), int64] {
  %1278 = fn () -> Tensor[(2025), int64] {
    %1277 = @func_9038() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int64], Tensor[(2025), float32]) */;
    %1277.1
  };
  %1278() /* ty=Tensor[(2025), int64] */
}

def @func_21331() -> Tensor[(6, 66), float32] {
  @func_21329() /* ty=Tensor[(6, 66), float32] */
}

def @func_23313() -> Tensor[(2025), bool] {
  %1280 = fn () -> Tensor[(2025), bool] {
    %1279 = @func_8928() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(2025), float64]) */;
    %1279.1
  };
  %1280() /* ty=Tensor[(2025), bool] */
}

def @func_6091() -> (Tensor[(10, 9, 11), float64],) {
  %1281 = @func_1808() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1282 = %1281.1;
  (%1282,)
}

def @func_15074() -> (Tensor[(10, 9, 11), float32],) {
  @func_15072() /* ty=(Tensor[(10, 9, 11), float32],) */
}

def @func_8080() -> (Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) {
  @func_8078() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */
}

def @func_8605() -> (Tensor[(10, 9, 11), float32], Tensor[(2025), int8]) {
  %1283 = @func_4861() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */;
  %1284 = @func_7277() /* ty=Tensor[(10, 9, 11), float32] */;
  %1285 = %1283.1;
  (%1284, %1285)
}

def @func_10568() -> (Tensor[(2025), int8],) {
  @func_10566() /* ty=(Tensor[(2025), int8],) */
}

def @func_4781(%var_4779: Tensor[(2025), float64]) -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  @func_4778(%var_4779) /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */
}

def @func_14230(%var_14228: Tensor[(675, 3), bool]) -> (Tensor[(10, 9, 11), float64], Tensor[(675, 3), bool]) {
  @func_14227(%var_14228) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(675, 3), bool]) */
}

def @func_15632() -> (Tensor[(16, 4, 7), float32], Tensor[(9, 1, 10), float32]) {
  %1286 = @func_11714() /* ty=(Tensor[(16, 4, 7), float32],) */;
  %1287 = @func_5300() /* ty=(Tensor[(9, 1, 10), float32],) */;
  %1288 = %1286.0;
  %1289 = %1287.0;
  (%1288, %1289)
}

def @func_15571() -> Tensor[(15, 9, 15), float32] {
  @func_15569() /* ty=Tensor[(15, 9, 15), float32] */
}

def @func_23132(%var_23131: Tensor[(16, 16, 13), float64]) -> Tensor[(16, 16, 13), float64] {
  %1291 = fn (%var_23127: Tensor[(16, 16, 13), float64]) -> Tensor[(16, 16, 13), float64] {
    %1290 = cast(%var_23127, dtype="float64") /* ty=Tensor[(16, 16, 13), float64] */;
    sigmoid(%1290) /* ty=Tensor[(16, 16, 13), float64] */
  };
  %1291(%var_23131) /* ty=Tensor[(16, 16, 13), float64] */
}

def @func_18607() -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float64], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) {
  @func_18605() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float64], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) */
}

def @func_5008(%var_4983: Tensor[(8, 13, 2), float32], %var_4984: Tensor[(8, 13, 2), float32], %var_4991: Tensor[(88), float64]) -> (Tensor[(8, 13, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(88), float64], Tensor[(2025), float64], Tensor[(396), float32]) {
  %1292 = cast(%var_4984, dtype="float32") /* ty=Tensor[(8, 13, 2), float32] */;
  %1293 = shape_of(%var_4983, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1294 = cast(%var_4983, dtype="float32") /* ty=Tensor[(8, 13, 2), float32] */;
  %1295 = dyn.reshape(%1292, %1293, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1296 = cast(%var_4991, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1297 = cast(meta[relay.Constant][38] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1298 = cast(meta[relay.Constant][39] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %1299 = reshape(%1296, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), float64] */;
  %1300 = reshape(%1297, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %1301 = reshape(%1298, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %1302 = @func_4820(%1299, %1300, %1301) /* ty=(Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) */;
  %1303 = floor_divide(%1294, %1295) /* ty=Tensor[(8, 13, 2), float32] */;
  %1304 = @func_3412() /* ty=Tensor[(10, 9, 11), float64] */;
  %1305 = %1302.4;
  (%1303, %1304, %1305, %var_4991, meta[relay.Constant][38] /* ty=Tensor[(2025), float64] */, meta[relay.Constant][39] /* ty=Tensor[(396), float32] */)
}

def @func_3100(%var_3098: Tensor[(2025), float64]) -> Tensor[(2025), bool] {
  @func_3097(%var_3098) /* ty=Tensor[(2025), bool] */
}

def @func_18874() -> (Tensor[(10, 9, 11), uint32],) {
  %1307 = fn () -> (Tensor[(10, 9, 11), uint32],) {
    %1306 = @func_9591() /* ty=Tensor[(10, 9, 11), uint32] */;
    (%1306,)
  };
  %1307() /* ty=(Tensor[(10, 9, 11), uint32],) */
}

def @func_14892() -> Tensor[(10, 9, 11), float32] {
  %1308 = @func_14159() /* ty=(Tensor[(10, 9, 11), float32],) */;
  %1308.0
}

def @func_21146() -> (Tensor[(16, 4, 7), float32],) {
  %1311 = fn () -> (Tensor[(16, 4, 7), float32],) {
    %1309 = @func_11714() /* ty=(Tensor[(16, 4, 7), float32],) */;
    %1310 = %1309.0;
    (%1310,)
  };
  %1311() /* ty=(Tensor[(16, 4, 7), float32],) */
}

def @func_20843(%var_20841: float64, %var_20842: Tensor[(10, 7, 9), float64]) -> Tensor[(10, 7, 9), float64] {
  @func_20839(%var_20841, %var_20842) /* ty=Tensor[(10, 7, 9), float64] */
}

def @func_13609() -> (Tensor[(7, 9, 10), float32], Tensor[(7, 9, 10), float32], Tensor[(88), float64], Tensor[(88), float64], Tensor[(990), uint32]) {
  @func_13607() /* ty=(Tensor[(7, 9, 10), float32], Tensor[(7, 9, 10), float32], Tensor[(88), float64], Tensor[(88), float64], Tensor[(990), uint32]) */
}

def @func_15654() -> (Tensor[(10, 9, 11), float64],) {
  %1312 = @func_7872() /* ty=Tensor[(10, 9, 11), float64] */;
  (%1312,)
}

def @func_17449() -> (Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) {
  %1317 = fn () -> (Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) {
    %1313 = @func_17433() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), float32]) */;
    %1314 = @func_3168() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %1315 = %1313.1;
    %1316 = %1314.0;
    (%1315, %1316)
  };
  %1317() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) */
}

def @func_15656() -> (Tensor[(10, 9, 11), float64],) {
  @func_15654() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_23175() -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  %1323 = fn () -> (Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
    %1318 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
    %1319 = @func_17448() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) */;
    %1320 = @func_4098() /* ty=Tensor[(2025), float32] */;
    %1321 = %1318.1;
    %1322 = %1319.1;
    (%1320, %1321, %1322)
  };
  %1323() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_11547() -> (Tensor[(10, 9, 11), float64],) {
  @func_11545() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_17149() -> Tensor[(2025), int64] {
  %1324 = @func_13377() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), float64]) */;
  %1324.0
}

def @func_6486() -> (Tensor[(2025), float32], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) {
  %1329 = fn () -> (Tensor[(2025), float32], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) {
    %1325 = @func_2108() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %1326 = @func_5970() /* ty=Tensor[(2025), float32] */;
    %1327 = @func_1790() /* ty=Tensor[(16, 4, 7), float32] */;
    %1328 = %1325.0;
    (%1326, %1327, %1328)
  };
  %1329() /* ty=(Tensor[(2025), float32], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */
}

def @func_9233() -> Tensor[(2025), float64] {
  %1330 = @func_7408() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), float64]) */;
  %1330.1
}

def @func_10851() -> Tensor[(2025), float64] {
  @func_10849() /* ty=Tensor[(2025), float64] */
}

def @func_6078() -> (Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool]) {
  @func_6076() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool]) */
}

def @func_6367() -> (Tensor[(15, 9, 15), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), int64]) {
  @func_6365() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), int64]) */
}

def @func_12100() -> (Tensor[(10, 9, 11), float64],) {
  %1331 = @func_10205() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1332 = %1331.0;
  (%1332,)
}

def @func_8491() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %1337 = fn () -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
    %1333 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
    %1334 = @func_7380() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %1335 = %1333.0;
    %1336 = %1334.0;
    (%1335, %1336)
  };
  %1337() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_20839(%var_20823: float64, %var_20824: Tensor[(10, 7, 9), float64]) -> Tensor[(10, 7, 9), float64] {
  %1338 = cast(%var_20823, dtype="float64") /* ty=float64 */;
  %1339 = cast(%var_20824, dtype="float64") /* ty=Tensor[(10, 7, 9), float64] */;
  floor_mod(%1338, %1339) /* ty=Tensor[(10, 7, 9), float64] */
}

def @func_19010(%var_19008: Tensor[(5, 12, 3), int16], %var_19009: Tensor[(5, 12, 3), int16]) -> (Tensor[(5, 12, 3), bool], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %1352 = fn (%var_18961: Tensor[(5, 12, 3), int16], %var_18962: Tensor[(5, 12, 3), int16]) -> (Tensor[(5, 12, 3), bool], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
    %1340 = cast(%var_18962, dtype="bool") /* ty=Tensor[(5, 12, 3), bool] */;
    %1341 = shape_of(%var_18961, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1342 = cast(%var_18961, dtype="bool") /* ty=Tensor[(5, 12, 3), bool] */;
    %1343 = dyn.reshape(%1340, %1341, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1344 = @func_14476() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) */;
    %1345 = @func_9929() /* ty=(Tensor[(2025), float64],) */;
    %1346 = @func_5867() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(3, 9, 2), float64]) */;
    %1347 = greater_equal(%1342, %1343) /* ty=Tensor[(5, 12, 3), bool] */;
    %1348 = @func_7277() /* ty=Tensor[(10, 9, 11), float32] */;
    %1349 = %1344.2;
    %1350 = %1345.0;
    %1351 = %1346.0;
    (%1347, %1348, %1349, %1350, %1351)
  };
  %1352(%var_19008, %var_19009) /* ty=(Tensor[(5, 12, 3), bool], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_20295() -> (Tensor[(10, 9, 11), float64],) {
  @func_20293() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_22340(%var_22339: Tensor[(396, 1), float32]) -> (Tensor[(6, 11, 6), float32], Tensor[(396, 2025), float64]) {
  %1361 = fn (%var_22323: Tensor[(396, 1), float32]) -> (Tensor[(6, 11, 6), float32], Tensor[(396, 2025), float64]) {
    %1353 = cast(%var_22323, dtype="float32") /* ty=Tensor[(396, 1), float32] */;
    %1354 = reshape(%1353, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float32] */;
    %1355 = @func_16725() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */;
    %1356 = %1355.1;
    %1357 = cast(%1356, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %1358 = cast(%var_22323, dtype="float64") /* ty=Tensor[(396, 1), float64] */;
    %1359 = @func_10461(%1354) /* ty=Tensor[(6, 11, 6), float32] */;
    %1360 = minimum(%1357, %1358) /* ty=Tensor[(396, 2025), float64] */;
    (%1359, %1360)
  };
  %1361(%var_22339) /* ty=(Tensor[(6, 11, 6), float32], Tensor[(396, 2025), float64]) */
}

def @func_1061() -> (Tensor[(2025), int8], Tensor[(2025), int64]) {
  %1377 = fn () -> (Tensor[(2025), int8], Tensor[(2025), int64]) {
    %1362 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
    %1363 = %1362.2;
    %1364 = cast(%1363, dtype="float32") /* ty=Tensor[(15, 9, 15), float32] */;
    %1365 = reshape(%1364, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
    %1366 = @func_984(%1365) /* ty=(Tensor[(2025), int64],) */;
    %1367 = %1366.0;
    %1368 = cast(%1363, dtype="int8") /* ty=Tensor[(15, 9, 15), int8] */;
    %1369 = shape_of(%1367, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1370 = cast(%1367, dtype="int8") /* ty=Tensor[(2025), int8] */;
    %1371 = dyn.reshape(%1368, %1369, newshape=[]) /* ty=Tensor[(?), int8] */;
    %1372 = cast(%1367, dtype="float32") /* ty=Tensor[(2025), float32] */;
    %1373 = reshape(%1372, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
    %1374 = @func_984(%1373) /* ty=(Tensor[(2025), int64],) */;
    %1375 = bitwise_or(%1370, %1371) /* ty=Tensor[(2025), int8] */;
    %1376 = %1374.0;
    (%1375, %1376)
  };
  %1377() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */
}

def @func_19304() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %1378 = @func_7463() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1379 = @func_9929() /* ty=(Tensor[(2025), float64],) */;
  %1380 = %1378.0;
  %1381 = %1379.0;
  (%1380, %1381)
}

def @func_22254() -> (Tensor[(10, 9, 11), float64],) {
  @func_22252() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_8047() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %1382 = @func_3919() /* ty=(Tensor[(2025), float64],) */;
  %1383 = @func_6091() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1384 = %1382.0;
  %1385 = %1383.0;
  (%1384, %1385)
}

def @func_7819(%var_7749: Tensor[(2025), float32], %var_7801: Tensor[(10, 9, 11), float32]) -> (Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(2025), float32], Tensor[(10, 9, 11), float32], Tensor[(3, 9, 2), float64], Tensor[(2025), float32]) {
  %1386 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
  %1387 = @func_3168() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1388 = cast(%var_7749, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %1389 = reshape(%1388, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %1390 = @func_1593(%1389) /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(2025), int64], Tensor[(2025), float32]) */;
  %1391 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
  %1392 = @func_7519() /* ty=(Tensor[(104, 2), float32], Tensor[(10, 9, 11), float64]) */;
  %1393 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
  %1394 = %1387.0;
  %1395 = cast(%1394, dtype="uint32") /* ty=Tensor[(10, 9, 11), uint32] */;
  %1396 = reshape(%1395, newshape=[10, 9, 11]) /* ty=Tensor[(10, 9, 11), uint32] */;
  %1397 = @func_961(%1396) /* ty=Tensor[(10, 9, 11), float32] */;
  %1398 = cast(%var_7801, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
  %1399 = shape_of(%1397, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1400 = cast(%1397, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
  %1401 = dyn.reshape(%1398, %1399, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1402 = @func_7354() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), float64]) */;
  %1403 = %1386.1;
  %1404 = %1390.2;
  %1405 = %1391.0;
  %1406 = %1392.1;
  %1407 = %1393.1;
  %1408 = @func_4098() /* ty=Tensor[(2025), float32] */;
  %1409 = power(%1400, %1401) /* ty=Tensor[(10, 9, 11), float32] */;
  %1410 = @func_3226() /* ty=Tensor[(3, 9, 2), float64] */;
  %1411 = %1402.0;
  (%1403, %1394, %1404, %var_7749, %1405, %1406, %1407, %1408, %1409, %1410, %1411)
}

def @func_11535() -> Tensor[(2025), float64] {
  @func_4466() /* ty=Tensor[(2025), float64] */
}

def @func_7888(%var_7882: Tensor[(26), int16]) -> (Tensor[(10, 9, 11), float64], Tensor[(13, 2, 1), int16], int16, Tensor[(26), int16]) {
  %1412 = @func_7192() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1413 = cast(meta[relay.Constant][40] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1414 = cast(%var_7882, dtype="int16") /* ty=Tensor[(26), int16] */;
  %1415 = reshape(%1413, newshape=[]) /* ty=int16 */;
  %1416 = reshape(%1414, newshape=[13, 2, 1]) /* ty=Tensor[(13, 2, 1), int16] */;
  %1417 = @func_7149(%1415, %1416) /* ty=(Tensor[(13, 2, 1), int16], Tensor[(3, 9, 2), float64]) */;
  %1418 = %1412.0;
  %1419 = %1417.0;
  (%1418, %1419, meta[relay.Constant][40] /* ty=int16 */, %var_7882)
}

def @func_11017(%var_11016: Tensor[(396), float32]) -> (Tensor[(10, 9, 11), float32], Tensor[(16, 4, 7), float32], Tensor[(396), float32]) {
  %1428 = fn (%var_11013: Tensor[(396), float32]) -> (Tensor[(10, 9, 11), float32], Tensor[(16, 4, 7), float32], Tensor[(396), float32]) {
    %1420 = @func_2597() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %1421 = %1420.0;
    %1422 = cast(%1421, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
    %1423 = cast(%var_11013, dtype="float32") /* ty=Tensor[(396), float32] */;
    %1424 = reshape(%1423, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float32] */;
    %1425 = @func_3575(%1424) /* ty=(Tensor[(4, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) */;
    %1426 = sin(%1422) /* ty=Tensor[(10, 9, 11), float32] */;
    %1427 = %1425.2;
    (%1426, %1427, %var_11013)
  };
  %1428(%var_11016) /* ty=(Tensor[(10, 9, 11), float32], Tensor[(16, 4, 7), float32], Tensor[(396), float32]) */
}

def @func_1674() -> (Tensor[(15, 9, 15), float32],) {
  @func_1672() /* ty=(Tensor[(15, 9, 15), float32],) */
}

def @func_9040() -> (Tensor[(16, 4, 7), float32], Tensor[(2025), int64], Tensor[(2025), float32]) {
  @func_9038() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int64], Tensor[(2025), float32]) */
}

def @func_5486() -> (Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(15, 9, 15), float32]) {
  %1429 = @func_3936() /* ty=Tensor[(2025), float64] */;
  %1430 = cast(%1429, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %1431 = @func_2763() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) */;
  %1432 = @func_4948() /* ty=Tensor[(2025), int64] */;
  %1433 = atanh(%1430) /* ty=Tensor[(2025), float32] */;
  %1434 = %1431.0;
  (%1432, %1433, %1434)
}

def @func_7914() -> Tensor[(16, 4, 7), float32] {
  %1435 = @func_6278() /* ty=(Tensor[(2025), int64], Tensor[(16, 4, 7), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(44, 2), float64], Tensor[(66, 6), float32]) */;
  %1435.1
}

def @func_20153() -> Tensor[(10, 9, 11), float64] {
  %1437 = fn () -> Tensor[(10, 9, 11), float64] {
    %1436 = @func_8461() /* ty=(Tensor[(990), uint32], Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
    %1436.2
  };
  %1437() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_11788() -> (Tensor[(15, 9, 15), bool],) {
  %1438 = @func_4055() /* ty=(Tensor[(2025), float32], Tensor[(15, 9, 15), bool]) */;
  %1439 = %1438.1;
  (%1439,)
}

def @func_17756() -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) {
  @func_17754() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */
}

def @func_23198() -> (Tensor[(88), float64],) {
  %1442 = fn () -> (Tensor[(88), float64],) {
    %1440 = @func_13083() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(88), float64]) */;
    %1441 = %1440.1;
    (%1441,)
  };
  %1442() /* ty=(Tensor[(88), float64],) */
}

def @func_5632(%var_5593: Tensor[(15, 9, 15), float32]) -> (Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float64], Tensor[(2025), float64]) {
  %1443 = @func_5486() /* ty=(Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(15, 9, 15), float32]) */;
  %1444 = %1443.2;
  %1445 = cast(%var_5593, dtype="bool") /* ty=Tensor[(15, 9, 15), bool] */;
  %1446 = shape_of(%1444, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1447 = cast(%1444, dtype="bool") /* ty=Tensor[(15, 9, 15), bool] */;
  %1448 = dyn.reshape(%1445, %1446, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1449 = cast(%var_5593, dtype="float64") /* ty=Tensor[(15, 9, 15), float64] */;
  %1450 = logical_or(%1447, %1448) /* ty=Tensor[(15, 9, 15), bool] */;
  %1451 = erf(%1449) /* ty=Tensor[(15, 9, 15), float64] */;
  %1452 = @func_3936() /* ty=Tensor[(2025), float64] */;
  (%1450, %1451, %1452)
}

def @func_15607() -> (Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) {
  %1459 = fn () -> (Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) {
    %1453 = @func_6076() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool]) */;
    %1454 = @func_4077() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float32]) */;
    %1455 = @func_12751() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(88), float64], Tensor[(6, 66), float32], Tensor[(2025), float64], Tensor[(396), float32]) */;
    %1456 = %1453.1;
    %1457 = %1454.1;
    %1458 = %1455.4;
    (%1456, %1457, %1458)
  };
  %1459() /* ty=(Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) */
}

def @func_16593() -> (Tensor[(10, 9, 11), float32], Tensor[(2025), float64], Tensor[(2025), float64]) {
  %1460 = @func_15458() /* ty=(Tensor[(2025), float64],) */;
  %1461 = @func_11082() /* ty=(Tensor[(2025), float64],) */;
  %1462 = @func_9343() /* ty=Tensor[(10, 9, 11), float32] */;
  %1463 = %1460.0;
  %1464 = %1461.0;
  (%1462, %1463, %1464)
}

def @func_11974() -> Tensor[(2025), float64] {
  @func_11972() /* ty=Tensor[(2025), float64] */
}

def @func_22252() -> (Tensor[(10, 9, 11), float64],) {
  %1465 = @func_12100() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1466 = %1465.0;
  (%1466,)
}

def @func_17670() -> Tensor[(2025), float32] {
  %1468 = fn () -> Tensor[(2025), float32] {
    %1467 = @func_14756() /* ty=(Tensor[(2025), float32], Tensor[(10, 9, 11), uint32], Tensor[(16, 4, 7), float32]) */;
    %1467.0
  };
  %1468() /* ty=Tensor[(2025), float32] */
}

def @func_13451() -> (Tensor[(16, 4, 7), float32], Tensor[(2025), float64], Tensor[(396), float32], Tensor[(2025), int8], Tensor[(2025), float64]) {
  %1469 = cast(meta[relay.Constant][41] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %1470 = reshape(%1469, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %1471 = @func_11327(%1470) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float64], Tensor[(22, 4), float64], Tensor[(396), float32]) */;
  %1472 = @func_5787() /* ty=(Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */;
  %1473 = @func_6278() /* ty=(Tensor[(2025), int64], Tensor[(16, 4, 7), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(44, 2), float64], Tensor[(66, 6), float32]) */;
  %1474 = @func_10741() /* ty=Tensor[(16, 4, 7), float32] */;
  %1475 = %1471.2;
  %1476 = %1472.0;
  %1477 = %1473.2;
  (%1474, %1475, meta[relay.Constant][41] /* ty=Tensor[(396), float32] */, %1476, %1477)
}

def @func_8122() -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64]) {
  %1478 = @func_6365() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), int64]) */;
  %1479 = @func_7380() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1480 = %1478.0;
  %1481 = %1479.0;
  (%1480, %1481)
}

def @func_15849() -> (Tensor[(7, 9, 10), uint8], Tensor[(7, 9, 10), float32], Tensor[(2025), float64], Tensor[(2025), float64]) {
  @func_15847() /* ty=(Tensor[(7, 9, 10), uint8], Tensor[(7, 9, 10), float32], Tensor[(2025), float64], Tensor[(2025), float64]) */
}

def @func_3405() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32]) {
  %1490 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32]) {
    %1482 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %1483 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
    %1484 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
    %1485 = @func_1672() /* ty=(Tensor[(15, 9, 15), float32],) */;
    %1486 = %1482.0;
    %1487 = %1483.0;
    %1488 = %1484.2;
    %1489 = %1485.0;
    (%1486, %1487, %1488, %1489)
  };
  %1490() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32]) */
}

def @func_21965() -> (Tensor[(7, 9, 10), float32], Tensor[(6, 11, 6), float32]) {
  %1491 = @func_12204() /* ty=(Tensor[(7, 9, 10), float32],) */;
  %1492 = %1491.0;
  %1493 = cast(%1492, dtype="float32") /* ty=Tensor[(7, 9, 10), float32] */;
  %1494 = @func_18526() /* ty=(Tensor[(2025), int64], Tensor[(7, 9, 10), float32], Tensor[(6, 11, 6), float32], Tensor[(1, 396), float32]) */;
  %1495 = %1494.2;
  %1496 = cast(%1495, dtype="float32") /* ty=Tensor[(6, 11, 6), float32] */;
  %1497 = sqrt(%1493) /* ty=Tensor[(7, 9, 10), float32] */;
  %1498 = cos(%1496) /* ty=Tensor[(6, 11, 6), float32] */;
  (%1497, %1498)
}

def @func_3323(%var_3287: Tensor[(675, 3), float64]) -> (Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(675, 3), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32]) {
  %1499 = @func_2273() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) */;
  %1500 = cast(%var_3287, dtype="float64") /* ty=Tensor[(675, 3), float64] */;
  %1501 = reshape(%1500, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %1502 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %1503 = @func_2763() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), bool], Tensor[(16, 4, 7), float32]) */;
  %1504 = %1499.0;
  %1505 = @func_3097(%1501) /* ty=Tensor[(2025), bool] */;
  %1506 = %1502.0;
  %1507 = @func_1755() /* ty=Tensor[(16, 4, 7), float32] */;
  %1508 = %1503.2;
  (%1504, %1505, %var_3287, %1506, %1507, %1508)
}

def @func_6429() -> (Tensor[(2025), int64],) {
  %1509 = @func_2832() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(2025), int64]) */;
  %1510 = %1509.3;
  (%1510,)
}

def @func_9552() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), uint32]) {
  %1515 = fn () -> (Tensor[(2025), float64], Tensor[(10, 9, 11), uint32]) {
    %1511 = @func_1957() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
    %1512 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
    %1513 = %1511.0;
    %1514 = %1512.0;
    (%1513, %1514)
  };
  %1515() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), uint32]) */
}

def @func_22514(%var_22509: Tensor[(1, 16, 8), uint32]) -> Tensor[(4, 16, 8), uint32] {
  %1516 = cast(%var_22509, dtype="uint32") /* ty=Tensor[(1, 16, 8), uint32] */;
  %1517 = cast(meta[relay.Constant][42] /* ty=Tensor[(4, 16, 8), uint32] */, dtype="uint32") /* ty=Tensor[(4, 16, 8), uint32] */;
  left_shift(%1516, %1517) /* ty=Tensor[(4, 16, 8), uint32] */
}

def @func_22469() -> Tensor[(10, 9, 11), float64] {
  %1519 = fn () -> Tensor[(10, 9, 11), float64] {
    %1518 = @func_5867() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(3, 9, 2), float64]) */;
    %1518.0
  };
  %1519() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_14328() -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %1520 = @func_9142() /* ty=Tensor[(15, 9, 15), float32] */;
  %1521 = @func_1439() /* ty=Tensor[(10, 9, 11), float64] */;
  %1522 = @func_12506() /* ty=Tensor[(2025), float64] */;
  (%1520, %1521, %1522)
}

def @func_22899() -> Tensor[(104, 2), float32] {
  %1523 = @func_7519() /* ty=(Tensor[(104, 2), float32], Tensor[(10, 9, 11), float64]) */;
  %1523.0
}

def @func_2109() -> (Tensor[(10, 9, 11), float64],) {
  %1526 = fn () -> (Tensor[(10, 9, 11), float64],) {
    %1524 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %1525 = %1524.0;
    (%1525,)
  };
  %1526() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_19443() -> Tensor[(10, 9, 11), float32] {
  %1527 = @func_15606() /* ty=(Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float32], Tensor[(2025), float64]) */;
  %1527.1
}

def @func_21580() -> (Tensor[(10, 9, 11), float32], Tensor[(2025), float64], Tensor[(624), float64]) {
  %1528 = @func_8928() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(2025), float64]) */;
  %1529 = @func_12283() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(624), float64]) */;
  %1530 = @func_14892() /* ty=Tensor[(10, 9, 11), float32] */;
  %1531 = %1528.2;
  %1532 = %1529.2;
  (%1530, %1531, %1532)
}

def @func_13607() -> (Tensor[(7, 9, 10), float32], Tensor[(7, 9, 10), float32], Tensor[(88), float64], Tensor[(88), float64], Tensor[(990), uint32]) {
  %1533 = cast(meta[relay.Constant][43] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1534 = reshape(%1533, newshape=[88]) /* ty=Tensor[(88), float64] */;
  %1535 = @func_13254(%1534) /* ty=(Tensor[(16, 4, 7), float32], Tensor[(88, 1), float64], Tensor[(2025), float64], Tensor[(208, 1), float32], Tensor[(88), float64]) */;
  %1536 = @func_1535() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(990), uint32]) */;
  %1537 = @func_11048() /* ty=Tensor[(7, 9, 10), float32] */;
  %1538 = @func_10811() /* ty=Tensor[(7, 9, 10), float32] */;
  %1539 = %1535.4;
  %1540 = %1536.2;
  (%1537, %1538, %1539, meta[relay.Constant][43] /* ty=Tensor[(88), float64] */, %1540)
}

def @func_20519() -> (Tensor[(2025), float64], Tensor[(14, 3, 4), uint8], Tensor[(168), uint8], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) {
  %1541 = cast(meta[relay.Constant][44] /* ty=Tensor[(168), uint8] */, dtype="uint8") /* ty=Tensor[(168), uint8] */;
  %1542 = reshape(%1541, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), uint8] */;
  %1543 = @func_18854(%1542) /* ty=(Tensor[(14, 3, 4), uint8],) */;
  %1544 = @func_7519() /* ty=(Tensor[(104, 2), float32], Tensor[(10, 9, 11), float64]) */;
  %1545 = @func_19573() /* ty=(Tensor[(3, 5, 9), float64], Tensor[(2025), float64]) */;
  %1546 = @func_10110() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1547 = @func_15475() /* ty=Tensor[(2025), float64] */;
  %1548 = %1543.0;
  %1549 = %1544.1;
  %1550 = %1545.1;
  %1551 = @func_15710() /* ty=Tensor[(15, 9, 15), float32] */;
  %1552 = %1546.0;
  (%1547, %1548, meta[relay.Constant][44] /* ty=Tensor[(168), uint8] */, %1549, %1550, %1551, %1552)
}

def @func_4820(%var_4786: Tensor[(11, 1, 8), float64], %var_4793: Tensor[(2025), float64], %var_4807: Tensor[(6, 66), float32]) -> (Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) {
  %1553 = cast(%var_4786, dtype="float64") /* ty=Tensor[(11, 1, 8), float64] */;
  %1554 = cast(%var_4793, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1555 = reshape(%1554, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %1556 = @func_4778(%1555) /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */;
  %1557 = cast(%var_4807, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
  %1558 = reshape(%1557, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float32] */;
  %1559 = @func_3575(%1558) /* ty=(Tensor[(4, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32]) */;
  %1560 = log2(%1553) /* ty=Tensor[(11, 1, 8), float64] */;
  %1561 = %1556.0;
  %1562 = %1559.0;
  (%1560, %1561, %var_4793, %1562, %var_4807)
}

def @func_10135() -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  @func_10133() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */
}

def @func_23044() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(4, 192), int8], Tensor[(15, 9, 15), float64]) {
  %1573 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(4, 192), int8], Tensor[(15, 9, 15), float64]) {
    %1563 = @func_2832() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(2025), int64]) */;
    %1564 = @func_15138() /* ty=(Tensor[(2025), float64],) */;
    %1565 = @func_17721() /* ty=(Tensor[(4, 12, 16), int8], Tensor[(4, 192), int8], Tensor[(16, 4, 7), float64]) */;
    %1566 = %1564.0;
    %1567 = cast(%1566, dtype="bool") /* ty=Tensor[(2025), bool] */;
    %1568 = reshape(%1567, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), bool] */;
    %1569 = @func_12683(%1568) /* ty=(Tensor[(15, 9, 15), float64], Tensor[(2025), float64]) */;
    %1570 = %1563.2;
    %1571 = %1565.1;
    %1572 = %1569.0;
    (%1570, %1566, %1571, %1572)
  };
  %1573() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(4, 192), int8], Tensor[(15, 9, 15), float64]) */
}

def @func_24063() -> (Tensor[(2025), int64], Tensor[(7, 9, 10), float32], Tensor[(2025), int64], Tensor[(10, 9, 11), float64]) {
  %1574 = @func_7235() /* ty=(Tensor[(2025), int64],) */;
  %1575 = @func_22377() /* ty=(Tensor[(7, 9, 10), float32],) */;
  %1576 = @func_2567() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1577 = @func_18151() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1578 = %1574.0;
  %1579 = %1575.0;
  %1580 = %1576.0;
  %1581 = %1577.3;
  (%1578, %1579, %1580, %1581)
}

def @func_9057() -> (Tensor[(2025), float64],) {
  %1584 = fn () -> (Tensor[(2025), float64],) {
    %1582 = @func_5392() /* ty=(Tensor[(2025), float64],) */;
    %1583 = %1582.0;
    (%1583,)
  };
  %1584() /* ty=(Tensor[(2025), float64],) */
}

def @func_23112() -> (Tensor[(16, 4, 7), float32],) {
  %1585 = @func_10357() /* ty=Tensor[(16, 4, 7), float32] */;
  (%1585,)
}

def @func_9421() -> (Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float32]) {
  %1586 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1587 = %1586.0;
  %1588 = @func_9142() /* ty=Tensor[(15, 9, 15), float32] */;
  %1589 = @func_9343() /* ty=Tensor[(10, 9, 11), float32] */;
  (%1587, %1588, %1589)
}

def @func_8463() -> (Tensor[(990), uint32], Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  @func_8461() /* ty=(Tensor[(990), uint32], Tensor[(2025), int64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_22222() -> (Tensor[(10, 9, 11), float32], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64], Tensor[(180), int16]) {
  %1590 = @func_1535() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(990), uint32]) */;
  %1591 = @func_21145() /* ty=(Tensor[(16, 4, 7), float32],) */;
  %1592 = cast(meta[relay.Constant][45] /* ty=Tensor[(180), int16] */, dtype="int16") /* ty=Tensor[(180), int16] */;
  %1593 = cast(meta[relay.Constant][45] /* ty=Tensor[(180), int16] */, dtype="int16") /* ty=Tensor[(180), int16] */;
  %1594 = reshape(%1592, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), int16] */;
  %1595 = reshape(%1593, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), int16] */;
  %1596 = @func_19007(%1594, %1595) /* ty=(Tensor[(5, 12, 3), bool], Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1597 = %1590.1;
  %1598 = %1591.0;
  %1599 = %1596.2;
  (%1597, %1598, %1599, meta[relay.Constant][45] /* ty=Tensor[(180), int16] */)
}

def @func_11506() -> (Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(3, 9, 2), float64]) {
  @func_11504() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(3, 9, 2), float64]) */
}

def @func_23982() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), uint32]) {
  @func_23980() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), uint32]) */
}

def @func_20963() -> Tensor[(10, 9, 11), float64] {
  %1601 = fn () -> Tensor[(10, 9, 11), float64] {
    %1600 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %1600.0
  };
  %1601() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_13012() -> (Tensor[(2025), int64], Tensor[(15, 9, 15), bool]) {
  @func_13010() /* ty=(Tensor[(2025), int64], Tensor[(15, 9, 15), bool]) */
}

def @func_11141() -> (Tensor[(10, 9, 11), float64],) {
  %1602 = @func_3168() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1603 = %1602.0;
  (%1603,)
}

def @func_5516(%var_5514: Tensor[(88), float64], %var_5515: Tensor[(6, 66), float32]) -> (Tensor[(10, 9, 11), float64], Tensor[(4, 9, 11), float32], Tensor[(88), float64], Tensor[(3, 675), float64], Tensor[(6, 66), float32]) {
  %1613 = fn (%var_5509: Tensor[(88), float64], %var_5511: Tensor[(6, 66), float32]) -> (Tensor[(10, 9, 11), float64], Tensor[(4, 9, 11), float32], Tensor[(88), float64], Tensor[(3, 675), float64], Tensor[(6, 66), float32]) {
    %1604 = cast(%var_5509, dtype="float64") /* ty=Tensor[(88), float64] */;
    %1605 = cast(meta[relay.Constant][46] /* ty=Tensor[(3, 675), float64] */, dtype="float64") /* ty=Tensor[(3, 675), float64] */;
    %1606 = cast(%var_5511, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
    %1607 = reshape(%1604, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), float64] */;
    %1608 = reshape(%1605, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %1609 = reshape(%1606, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
    %1610 = @func_4820(%1607, %1608, %1609) /* ty=(Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) */;
    %1611 = @func_1827() /* ty=Tensor[(10, 9, 11), float64] */;
    %1612 = %1610.3;
    (%1611, %1612, %var_5509, meta[relay.Constant][46] /* ty=Tensor[(3, 675), float64] */, %var_5511)
  };
  %1613(%var_5514, %var_5515) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(4, 9, 11), float32], Tensor[(88), float64], Tensor[(3, 675), float64], Tensor[(6, 66), float32]) */
}

def @func_3116() -> (Tensor[(15, 9, 15), float32],) {
  %1614 = @func_1672() /* ty=(Tensor[(15, 9, 15), float32],) */;
  %1615 = %1614.0;
  (%1615,)
}

def @func_10110() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %1616 = @func_7686() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1617 = @func_2597() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1618 = %1616.0;
  %1619 = %1617.0;
  (%1618, %1619)
}

def @func_6057(%var_6011: Tensor[(27, 75), float64], %var_6033: Tensor[(208), float32], %var_6034: Tensor[(88, 1), float64]) -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(27, 75), float32], Tensor[(10, 9, 11), float64], Tensor[(208), float32], Tensor[(88, 1), float64]) {
  %1620 = cast(%var_6011, dtype="float64") /* ty=Tensor[(27, 75), float64] */;
  %1621 = reshape(%1620, newshape=[675, 3]) /* ty=Tensor[(675, 3), float64] */;
  %1622 = @func_3323(%1621) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(675, 3), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32]) */;
  %1623 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %1624 = @func_4861() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */;
  %1625 = cast(%var_6011, dtype="float32") /* ty=Tensor[(27, 75), float32] */;
  %1626 = cast(%var_6033, dtype="float32") /* ty=Tensor[(208), float32] */;
  %1627 = cast(%var_6033, dtype="float32") /* ty=Tensor[(208), float32] */;
  %1628 = cast(%var_6034, dtype="float64") /* ty=Tensor[(88, 1), float64] */;
  %1629 = reshape(%1626, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
  %1630 = reshape(%1627, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
  %1631 = reshape(%1628, newshape=[88]) /* ty=Tensor[(88), float64] */;
  %1632 = @func_5008(%1629, %1630, %1631) /* ty=(Tensor[(8, 13, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(88), float64], Tensor[(2025), float64], Tensor[(396), float32]) */;
  %1633 = @func_3412() /* ty=Tensor[(10, 9, 11), float64] */;
  %1634 = %1622.3;
  %1635 = %1623.1;
  %1636 = %1624.0;
  %1637 = atan(%1625) /* ty=Tensor[(27, 75), float32] */;
  %1638 = %1632.1;
  (%1633, %1634, %1635, %1636, %1637, %1638, %var_6033, %var_6034)
}

def @func_5392() -> (Tensor[(2025), float64],) {
  %1639 = @func_3059() /* ty=Tensor[(2025), float64] */;
  (%1639,)
}

def @func_17723() -> (Tensor[(4, 12, 16), int8], Tensor[(4, 192), int8], Tensor[(16, 4, 7), float64]) {
  @func_17721() /* ty=(Tensor[(4, 12, 16), int8], Tensor[(4, 192), int8], Tensor[(16, 4, 7), float64]) */
}

def @func_7519() -> (Tensor[(104, 2), float32], Tensor[(10, 9, 11), float64]) {
  %1640 = @func_5207() /* ty=(Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(104, 2), float32], Tensor[(88), float64]) */;
  %1641 = @func_7463() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1642 = %1640.2;
  %1643 = %1641.0;
  (%1642, %1643)
}

def @func_20987() -> (Tensor[(2025), int8],) {
  %1644 = @func_2935() /* ty=(Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) */;
  %1645 = %1644.0;
  (%1645,)
}

def @func_18352(%var_18350: Tensor[(11, 11, 14), float32], %var_18351: Tensor[(11, 11, 14), float32]) -> (Tensor[(11, 11, 14), float32],) {
  @func_18348(%var_18350, %var_18351) /* ty=(Tensor[(11, 11, 14), float32],) */
}

def @func_15181(%var_15178: Tensor[(14, 5, 6), float32]) -> (Tensor[(14, 5, 6), float32],) {
  %1646 = cast(%var_15178, dtype="float32") /* ty=Tensor[(14, 5, 6), float32] */;
  %1647 = acosh(%1646) /* ty=Tensor[(14, 5, 6), float32] */;
  (%1647,)
}

def @func_23980() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), uint32]) {
  %1648 = @func_12100() /* ty=(Tensor[(10, 9, 11), float64],) */;
  %1649 = @func_10034() /* ty=(Tensor[(10, 9, 11), uint32],) */;
  %1650 = @func_10154() /* ty=Tensor[(10, 9, 11), float64] */;
  %1651 = %1648.0;
  %1652 = %1649.0;
  (%1650, %1651, %1652)
}

def @func_3512() -> (Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) {
  %1659 = fn () -> (Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) {
    %1653 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
    %1654 = @func_2935() /* ty=(Tensor[(2025), int8], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32]) */;
    %1655 = @func_3404() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool], Tensor[(15, 9, 15), float32]) */;
    %1656 = %1653.0;
    %1657 = %1654.2;
    %1658 = %1655.3;
    (%1656, %1657, %1658)
  };
  %1659() /* ty=(Tensor[(2025), float64], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32]) */
}

def @func_17287() -> (Tensor[(16, 4, 7), float64], Tensor[(7, 9, 10), float32], Tensor[(88), float64]) {
  %1666 = fn () -> (Tensor[(16, 4, 7), float64], Tensor[(7, 9, 10), float32], Tensor[(88), float64]) {
    %1660 = @func_15387() /* ty=(Tensor[(16, 4, 7), float64],) */;
    %1661 = @func_15847() /* ty=(Tensor[(7, 9, 10), uint8], Tensor[(7, 9, 10), float32], Tensor[(2025), float64], Tensor[(2025), float64]) */;
    %1662 = @func_9874() /* ty=(Tensor[(2025), float64], Tensor[(88), float64]) */;
    %1663 = %1660.0;
    %1664 = %1661.1;
    %1665 = %1662.1;
    (%1663, %1664, %1665)
  };
  %1666() /* ty=(Tensor[(16, 4, 7), float64], Tensor[(7, 9, 10), float32], Tensor[(88), float64]) */
}

def @func_8179() -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
  %1671 = fn () -> (Tensor[(2025), float64], Tensor[(2025), float64]) {
    %1667 = @func_5392() /* ty=(Tensor[(2025), float64],) */;
    %1668 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
    %1669 = %1667.0;
    %1670 = %1668.0;
    (%1669, %1670)
  };
  %1671() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64]) */
}

def @func_20706() -> (Tensor[(2025), float64],) {
  %1674 = fn () -> (Tensor[(2025), float64],) {
    %1672 = @func_15458() /* ty=(Tensor[(2025), float64],) */;
    %1673 = %1672.0;
    (%1673,)
  };
  %1674() /* ty=(Tensor[(2025), float64],) */
}

def @func_2569() -> (Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  @func_2567() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_23114() -> (Tensor[(16, 4, 7), float32],) {
  @func_23112() /* ty=(Tensor[(16, 4, 7), float32],) */
}

def @func_13061() -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
  %1678 = fn () -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
    %1675 = @func_1957() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
    %1676 = @func_3936() /* ty=Tensor[(2025), float64] */;
    %1677 = %1675.1;
    (%1676, %1677)
  };
  %1678() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */
}

def @func_9505(%var_9503: Tensor[(13, 2), int16]) -> (Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(13, 2), int16]) {
  %1679 = @func_3207() /* ty=(Tensor[(15, 9, 15), bool],) */;
  %1680 = cast(%var_9503, dtype="int16") /* ty=Tensor[(13, 2), int16] */;
  %1681 = reshape(%1680, newshape=[26]) /* ty=Tensor[(26), int16] */;
  %1682 = @func_7888(%1681) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(13, 2, 1), int16], int16, Tensor[(26), int16]) */;
  %1683 = %1679.0;
  %1684 = %1682.0;
  (%1683, %1684, %var_9503)
}

def @func_14858(%var_14857: Tensor[(63), uint64]) -> (Tensor[(10, 9, 11), float64], Tensor[(1, 7, 9), uint64], uint64, Tensor[(63), uint64]) {
  %1693 = fn (%var_14841: Tensor[(63), uint64]) -> (Tensor[(10, 9, 11), float64], Tensor[(1, 7, 9), uint64], uint64, Tensor[(63), uint64]) {
    %1685 = @func_10205() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %1686 = cast(meta[relay.Constant][47] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %1687 = cast(%var_14841, dtype="uint64") /* ty=Tensor[(63), uint64] */;
    %1688 = reshape(%1686, newshape=[]) /* ty=uint64 */;
    %1689 = reshape(%1687, newshape=[1, 7, 9]) /* ty=Tensor[(1, 7, 9), uint64] */;
    %1690 = @func_5407(%1688, %1689) /* ty=(Tensor[(1, 7, 9), uint64],) */;
    %1691 = %1685.0;
    %1692 = %1690.0;
    (%1691, %1692, meta[relay.Constant][47] /* ty=uint64 */, %var_14841)
  };
  %1693(%var_14857) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(1, 7, 9), uint64], uint64, Tensor[(63), uint64]) */
}

def @func_1343() -> (Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) {
  %1694 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %1695 = @func_1060() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %1696 = %1695.1;
  %1697 = cast(%1696, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1698 = %1694.2;
  %1699 = log2(%1697) /* ty=Tensor[(2025), float64] */;
  (%1698, %1699)
}

def @func_15326() -> (Tensor[(10, 9, 11), uint32], Tensor[(63), uint64]) {
  %1704 = fn () -> (Tensor[(10, 9, 11), uint32], Tensor[(63), uint64]) {
    %1700 = @func_10034() /* ty=(Tensor[(10, 9, 11), uint32],) */;
    %1701 = @func_11451() /* ty=(Tensor[(63), uint64], Tensor[(990), uint32], Tensor[(2025), float64]) */;
    %1702 = %1700.0;
    %1703 = %1701.0;
    (%1702, %1703)
  };
  %1704() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(63), uint64]) */
}

def @func_8569() -> (Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool]) {
  %1705 = @func_7408() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), float64]) */;
  %1706 = @func_5146() /* ty=(Tensor[(15, 9, 15), bool],) */;
  %1707 = %1705.1;
  %1708 = @func_4466() /* ty=Tensor[(2025), float64] */;
  %1709 = %1706.0;
  (%1707, %1708, %1709)
}

def @func_6093() -> (Tensor[(10, 9, 11), float64],) {
  @func_6091() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_5868() -> (Tensor[(10, 9, 11), float64], Tensor[(3, 9, 2), float64]) {
  %1713 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(3, 9, 2), float64]) {
    %1710 = @func_1281() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %1711 = %1710.0;
    %1712 = @func_3226() /* ty=Tensor[(3, 9, 2), float64] */;
    (%1711, %1712)
  };
  %1713() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(3, 9, 2), float64]) */
}

def @func_13590() -> Tensor[(10, 9, 11), float64] {
  %1714 = fn () -> Tensor[(10, 9, 11), float64] {
    @func_7173() /* ty=Tensor[(10, 9, 11), float64] */
  };
  %1714() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_10248() -> (Tensor[(10, 9, 11), uint32], Tensor[(2025), float64]) {
  @func_10246() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(2025), float64]) */
}

def @func_8571() -> (Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool]) {
  @func_8569() /* ty=(Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(15, 9, 15), bool]) */
}

def @func_20006() -> (Tensor[(2025), float64],) {
  @func_20004() /* ty=(Tensor[(2025), float64],) */
}

def @func_1623() -> (Tensor[(2025), int8], Tensor[(2025), int64]) {
  %1721 = fn () -> (Tensor[(2025), int8], Tensor[(2025), int64]) {
    %1715 = @func_1060() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
    %1716 = %1715.0;
    %1717 = cast(%1716, dtype="float32") /* ty=Tensor[(2025), float32] */;
    %1718 = reshape(%1717, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
    %1719 = @func_984(%1718) /* ty=(Tensor[(2025), int64],) */;
    %1720 = %1719.0;
    (%1716, %1720)
  };
  %1721() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */
}

def @func_21381() -> (Tensor[(10, 9, 11), float64],) {
  @func_21379() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_5488() -> (Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(15, 9, 15), float32]) {
  @func_5486() /* ty=(Tensor[(2025), int64], Tensor[(2025), float32], Tensor[(15, 9, 15), float32]) */
}

def @func_2273() -> (Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), int64], Tensor[(15, 9, 15), bool]) {
  %1722 = @func_1572() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
  %1723 = @func_1343() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(2025), float64]) */;
  %1724 = %1723.0;
  %1725 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 9, 15), float32] */, dtype="int64") /* ty=Tensor[(15, 9, 15), int64] */;
  %1726 = shape_of(%1724, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1727 = cast(%1724, dtype="int64") /* ty=Tensor[(15, 9, 15), int64] */;
  %1728 = dyn.reshape(%1725, %1726, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1729 = cast(meta[relay.Constant][49] /* ty=Tensor[(15, 9, 15), float32] */, dtype="bool") /* ty=Tensor[(15, 9, 15), bool] */;
  %1730 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(15, 9, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1731 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 9, 15), float32] */, dtype="bool") /* ty=Tensor[(15, 9, 15), bool] */;
  %1732 = dyn.reshape(%1729, %1730, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1733 = %1722.0;
  %1734 = bitwise_or(%1727, %1728) /* ty=Tensor[(15, 9, 15), int64] */;
  %1735 = not_equal(%1731, %1732) /* ty=Tensor[(15, 9, 15), bool] */;
  (%1733, %1734, %1735)
}

def @func_15531(%var_15529: Tensor[(2, 8, 7), float64]) -> Tensor[(2, 8, 7), float64] {
  @func_15528(%var_15529) /* ty=Tensor[(2, 8, 7), float64] */
}

def @func_20590() -> (Tensor[(2025), float64],) {
  %1737 = fn () -> (Tensor[(2025), float64],) {
    %1736 = @func_12506() /* ty=Tensor[(2025), float64] */;
    (%1736,)
  };
  %1737() /* ty=(Tensor[(2025), float64],) */
}

def @func_9592() -> Tensor[(10, 9, 11), uint32] {
  %1739 = fn () -> Tensor[(10, 9, 11), uint32] {
    %1738 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
    %1738.0
  };
  %1739() /* ty=Tensor[(10, 9, 11), uint32] */
}

def @func_11876(%var_11872: Tensor[(396), float32]) -> (Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(88), float64], Tensor[(396), float32]) {
  %1740 = @func_3919() /* ty=(Tensor[(2025), float64],) */;
  %1741 = cast(meta[relay.Constant][50] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1742 = %1740.0;
  %1743 = cast(%1742, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %1744 = cast(%var_11872, dtype="float32") /* ty=Tensor[(396), float32] */;
  %1745 = reshape(%1741, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), float64] */;
  %1746 = reshape(%1743, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
  %1747 = reshape(%1744, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %1748 = @func_4820(%1745, %1746, %1747) /* ty=(Tensor[(11, 1, 8), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(4, 9, 11), float32], Tensor[(6, 66), float32]) */;
  %1749 = %1748.2;
  (%1742, %1749, meta[relay.Constant][50] /* ty=Tensor[(88), float64] */, %var_11872)
}

def @func_23380() -> Tensor[(10, 9, 11), float64] {
  %1751 = fn () -> Tensor[(10, 9, 11), float64] {
    %1750 = @func_2832() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(15, 9, 15), bool], Tensor[(10, 9, 11), float64], Tensor[(2025), int64]) */;
    %1750.2
  };
  %1751() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_13256(%var_13255: Tensor[(88), float64]) -> (Tensor[(16, 4, 7), float32], Tensor[(88, 1), float64], Tensor[(2025), float64], Tensor[(208, 1), float32], Tensor[(88), float64]) {
  %1762 = fn (%var_13248: Tensor[(88), float64]) -> (Tensor[(16, 4, 7), float32], Tensor[(88, 1), float64], Tensor[(2025), float64], Tensor[(208, 1), float32], Tensor[(88), float64]) {
    %1752 = @func_13060() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
    %1753 = cast(meta[relay.Constant][51] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %1754 = cast(meta[relay.Constant][52] /* ty=Tensor[(208, 1), float32] */, dtype="float32") /* ty=Tensor[(208, 1), float32] */;
    %1755 = cast(%var_13248, dtype="float64") /* ty=Tensor[(88), float64] */;
    %1756 = reshape(%1753, newshape=[27, 75]) /* ty=Tensor[(27, 75), float64] */;
    %1757 = reshape(%1754, newshape=[208]) /* ty=Tensor[(208), float32] */;
    %1758 = reshape(%1755, newshape=[88, 1]) /* ty=Tensor[(88, 1), float64] */;
    %1759 = @func_6057(%1756, %1757, %1758) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(27, 75), float32], Tensor[(10, 9, 11), float64], Tensor[(208), float32], Tensor[(88, 1), float64]) */;
    %1760 = %1752.1;
    %1761 = %1759.7;
    (%1760, %1761, meta[relay.Constant][51] /* ty=Tensor[(2025), float64] */, meta[relay.Constant][52] /* ty=Tensor[(208, 1), float32] */, %var_13248)
  };
  %1762(%var_13255) /* ty=(Tensor[(16, 4, 7), float32], Tensor[(88, 1), float64], Tensor[(2025), float64], Tensor[(208, 1), float32], Tensor[(88), float64]) */
}

def @func_5064() -> Tensor[(10, 9, 11), float64] {
  %1764 = fn () -> Tensor[(10, 9, 11), float64] {
    %1763 = @func_2567() /* ty=(Tensor[(2025), int64], Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
    %1763.2
  };
  %1764() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_14025() -> (Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) {
  %1768 = fn () -> (Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) {
    %1765 = @func_7192() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %1766 = @func_9343() /* ty=Tensor[(10, 9, 11), float32] */;
    %1767 = %1765.0;
    (%1766, %1767)
  };
  %1768() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(10, 9, 11), float64]) */
}

def @func_14379() -> Tensor[(2025), float64] {
  %1770 = fn () -> Tensor[(2025), float64] {
    %1769 = @func_5392() /* ty=(Tensor[(2025), float64],) */;
    %1769.0
  };
  %1770() /* ty=Tensor[(2025), float64] */
}

def @func_8929() -> (Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(2025), float64]) {
  %1776 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(2025), float64]) {
    %1771 = @func_5267() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */;
    %1772 = cast(meta[relay.Constant][53] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %1773 = reshape(%1772, newshape=[2025]) /* ty=Tensor[(2025), float64] */;
    %1774 = %1771.0;
    %1775 = @func_3097(%1773) /* ty=Tensor[(2025), bool] */;
    (%1774, %1775, meta[relay.Constant][53] /* ty=Tensor[(2025), float64] */)
  };
  %1776() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(2025), float64]) */
}

def @func_5394() -> (Tensor[(2025), float64],) {
  @func_5392() /* ty=(Tensor[(2025), float64],) */
}

def @func_11545() -> (Tensor[(10, 9, 11), float64],) {
  %1777 = @func_7519() /* ty=(Tensor[(104, 2), float32], Tensor[(10, 9, 11), float64]) */;
  %1778 = %1777.1;
  (%1778,)
}

def @func_15912() -> (Tensor[(2025), int64], Tensor[(10, 9, 11), float32]) {
  @func_15910() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float32]) */
}

def @func_19192() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), float64]) {
  @func_19190() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), uint32], Tensor[(2025), float64]) */
}

def @func_961(%var_953: Tensor[(10, 9, 11), uint32]) -> Tensor[(10, 9, 11), float32] {
  %1779 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
  %1780 = %1779.0;
  %1781 = cast(%var_953, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
  %1782 = shape_of(%1780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1783 = cast(%1780, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
  %1784 = dyn.reshape(%1781, %1782, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  subtract(%1783, %1784) /* ty=Tensor[(10, 9, 11), float32] */
}

def @func_8339(%var_8338: Tensor[(14, 15, 10), float64]) -> (Tensor[(10, 9, 11), float64], Tensor[(26), int16], Tensor[(14, 15, 10), int8], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32], Tensor[(2025), int64]) {
  %1802 = fn (%var_8275: Tensor[(14, 15, 10), float64]) -> (Tensor[(10, 9, 11), float64], Tensor[(26), int16], Tensor[(14, 15, 10), int8], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32], Tensor[(2025), int64]) {
    %1785 = cast(meta[relay.Constant][54] /* ty=Tensor[(26), int16] */, dtype="int16") /* ty=Tensor[(26), int16] */;
    %1786 = reshape(%1785, newshape=[26]) /* ty=Tensor[(26), int16] */;
    %1787 = @func_7888(%1786) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(13, 2, 1), int16], int16, Tensor[(26), int16]) */;
    %1788 = cast(%var_8275, dtype="float64") /* ty=Tensor[(14, 15, 10), float64] */;
    %1789 = sinh(%1788) /* ty=Tensor[(14, 15, 10), float64] */;
    %1790 = cast(%var_8275, dtype="int8") /* ty=Tensor[(14, 15, 10), int8] */;
    %1791 = shape_of(%1789, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1792 = cast(%1789, dtype="int8") /* ty=Tensor[(14, 15, 10), int8] */;
    %1793 = dyn.reshape(%1790, %1791, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1794 = @func_8019() /* ty=(Tensor[(15, 9, 15), float32],) */;
    %1795 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
    %1796 = @func_6657() /* ty=(Tensor[(2025), float64], Tensor[(2025), int64], Tensor[(16, 4, 7), float32]) */;
    %1797 = %1787.0;
    %1798 = maximum(%1792, %1793) /* ty=Tensor[(14, 15, 10), int8] */;
    %1799 = %1794.0;
    %1800 = %1795.2;
    %1801 = %1796.1;
    (%1797, meta[relay.Constant][54] /* ty=Tensor[(26), int16] */, %1798, %1799, %1800, %1801)
  };
  %1802(%var_8338) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(26), int16], Tensor[(14, 15, 10), int8], Tensor[(15, 9, 15), float32], Tensor[(15, 9, 15), float32], Tensor[(2025), int64]) */
}

def @func_3326(%var_3324: Tensor[(675, 3), float64]) -> (Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(675, 3), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32]) {
  @func_3323(%var_3324) /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), bool], Tensor[(675, 3), float64], Tensor[(10, 9, 11), float64], Tensor[(16, 4, 7), float32], Tensor[(16, 4, 7), float32]) */
}

def @func_16477() -> Tensor[(2025), float32] {
  %1803 = @func_10536() /* ty=(Tensor[(2025), float32],) */;
  %1803.0
}

def @func_12508() -> Tensor[(2025), float64] {
  @func_12506() /* ty=Tensor[(2025), float64] */
}

def @func_950() -> (Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) {
  %1815 = fn () -> (Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) {
    %1804 = cast(meta[relay.Constant][55] /* ty=Tensor[(10, 9, 1), uint32] */, dtype="uint32") /* ty=Tensor[(10, 9, 1), uint32] */;
    %1805 = cast(meta[relay.Constant][56] /* ty=Tensor[(10, 9, 11), uint32] */, dtype="uint32") /* ty=Tensor[(10, 9, 11), uint32] */;
    %1806 = cast(meta[relay.Constant][56] /* ty=Tensor[(10, 9, 11), uint32] */, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
    %1807 = sqrt(%1806) /* ty=Tensor[(10, 9, 11), float32] */;
    %1808 = cast(%1807, dtype="float64") /* ty=Tensor[(10, 9, 11), float64] */;
    %1809 = cast(meta[relay.Constant][57] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
    %1810 = reshape(%1809, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), float32] */;
    %1811 = @func_139(%1810) /* ty=(Tensor[(15, 9, 15), float32],) */;
    %1812 = bitwise_and(%1804, %1805) /* ty=Tensor[(10, 9, 11), uint32] */;
    %1813 = exp(%1808) /* ty=Tensor[(10, 9, 11), float64] */;
    %1814 = %1811.0;
    (%1812, %1813, %1814, meta[relay.Constant][57] /* ty=Tensor[(2025), float32] */)
  };
  %1815() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */
}

def @func_19363() -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) {
  %1819 = fn () -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) {
    %1816 = @func_6657() /* ty=(Tensor[(2025), float64], Tensor[(2025), int64], Tensor[(16, 4, 7), float32]) */;
    %1817 = %1816.2;
    %1818 = @func_10154() /* ty=Tensor[(10, 9, 11), float64] */;
    (%1817, %1818)
  };
  %1819() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */
}

def @func_1282() -> (Tensor[(10, 9, 11), float64],) {
  %1822 = fn () -> (Tensor[(10, 9, 11), float64],) {
    %1820 = @func_949() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(15, 9, 15), float32], Tensor[(2025), float32]) */;
    %1821 = %1820.1;
    (%1821,)
  };
  %1822() /* ty=(Tensor[(10, 9, 11), float64],) */
}

def @func_22378() -> (Tensor[(7, 9, 10), float32],) {
  %1824 = fn () -> (Tensor[(7, 9, 10), float32],) {
    %1823 = @func_10811() /* ty=Tensor[(7, 9, 10), float32] */;
    (%1823,)
  };
  %1824() /* ty=(Tensor[(7, 9, 10), float32],) */
}

def @func_5971() -> Tensor[(2025), float32] {
  %1828 = fn () -> Tensor[(2025), float32] {
    %1825 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
    %1826 = %1825.1;
    %1827 = cast(%1826, dtype="float32") /* ty=Tensor[(2025), float32] */;
    cos(%1827) /* ty=Tensor[(2025), float32] */
  };
  %1828() /* ty=Tensor[(2025), float32] */
}

def @func_5208() -> (Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(104, 2), float32], Tensor[(88), float64]) {
  %1839 = fn () -> (Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(104, 2), float32], Tensor[(88), float64]) {
    %1829 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
    %1830 = cast(meta[relay.Constant][58] /* ty=Tensor[(104, 2), float32] */, dtype="float32") /* ty=Tensor[(104, 2), float32] */;
    %1831 = cast(meta[relay.Constant][58] /* ty=Tensor[(104, 2), float32] */, dtype="float32") /* ty=Tensor[(104, 2), float32] */;
    %1832 = cast(meta[relay.Constant][59] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
    %1833 = reshape(%1830, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
    %1834 = reshape(%1831, newshape=[8, 13, 2]) /* ty=Tensor[(8, 13, 2), float32] */;
    %1835 = reshape(%1832, newshape=[88]) /* ty=Tensor[(88), float64] */;
    %1836 = @func_5008(%1833, %1834, %1835) /* ty=(Tensor[(8, 13, 2), float32], Tensor[(10, 9, 11), float64], Tensor[(6, 66), float32], Tensor[(88), float64], Tensor[(2025), float64], Tensor[(396), float32]) */;
    %1837 = %1829.0;
    %1838 = %1836.2;
    (%1837, %1838, meta[relay.Constant][58] /* ty=Tensor[(104, 2), float32] */, meta[relay.Constant][59] /* ty=Tensor[(88), float64] */)
  };
  %1839() /* ty=(Tensor[(2025), float64], Tensor[(6, 66), float32], Tensor[(104, 2), float32], Tensor[(88), float64]) */
}

def @func_19524() -> (Tensor[(2025), int8], Tensor[(2025), float64]) {
  %1843 = fn () -> (Tensor[(2025), int8], Tensor[(2025), float64]) {
    %1840 = @func_9850() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), int8]) */;
    %1841 = %1840.3;
    %1842 = @func_16871() /* ty=Tensor[(2025), float64] */;
    (%1841, %1842)
  };
  %1843() /* ty=(Tensor[(2025), int8], Tensor[(2025), float64]) */
}

def @func_8124() -> (Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64]) {
  @func_8122() /* ty=(Tensor[(15, 9, 15), float32], Tensor[(10, 9, 11), float64]) */
}

def @func_1880() -> Tensor[(2025), float64] {
  %1844 = @func_1622() /* ty=(Tensor[(2025), int8], Tensor[(2025), int64]) */;
  %1845 = %1844.1;
  %1846 = cast(%1845, dtype="float64") /* ty=Tensor[(2025), float64] */;
  sinh(%1846) /* ty=Tensor[(2025), float64] */
}

def @func_14601() -> (Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) {
  %1847 = @func_1808() /* ty=(Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) */;
  %1848 = @func_7914() /* ty=Tensor[(16, 4, 7), float32] */;
  %1849 = %1847.1;
  (%1848, %1849)
}

def @func_16814() -> Tensor[(10, 9, 11), float64] {
  %1850 = fn () -> Tensor[(10, 9, 11), float64] {
    @func_6672() /* ty=Tensor[(10, 9, 11), float64] */
  };
  %1850() /* ty=Tensor[(10, 9, 11), float64] */
}

def @func_20352() -> Tensor[(10, 9, 11), float64] {
  %1851 = @func_9850() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(2025), float64], Tensor[(2025), float64], Tensor[(2025), int8]) */;
  %1851.0
}

def @func_4863() -> (Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) {
  @func_4861() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(2025), int8], Tensor[(2025), int8], Tensor[(16, 4, 7), float32]) */
}

def @func_13084() -> (Tensor[(10, 9, 11), float32], Tensor[(88), float64]) {
  %1855 = fn () -> (Tensor[(10, 9, 11), float32], Tensor[(88), float64]) {
    %1852 = @func_12751() /* ty=(Tensor[(10, 9, 11), uint32], Tensor[(10, 9, 11), float64], Tensor[(88), float64], Tensor[(6, 66), float32], Tensor[(2025), float64], Tensor[(396), float32]) */;
    %1853 = @func_9343() /* ty=Tensor[(10, 9, 11), float32] */;
    %1854 = %1852.2;
    (%1853, %1854)
  };
  %1855() /* ty=(Tensor[(10, 9, 11), float32], Tensor[(88), float64]) */
}

def @func_9683() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64]) {
  %1856 = @func_3129() /* ty=(Tensor[(2025), float64],) */;
  %1857 = @func_4382() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float64]) */;
  %1858 = %1856.0;
  %1859 = %1857.2;
  (%1858, %1859)
}

def @func_13970(%var_13968: Tensor[(4, 12, 16), int8], %var_13969: Tensor[(4, 12, 16), int8]) -> Tensor[(4, 12, 16), int8] {
  %1864 = fn (%var_13962: Tensor[(4, 12, 16), int8], %var_13963: Tensor[(4, 12, 16), int8]) -> Tensor[(4, 12, 16), int8] {
    %1860 = cast(%var_13963, dtype="int8") /* ty=Tensor[(4, 12, 16), int8] */;
    %1861 = shape_of(%var_13962, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1862 = cast(%var_13962, dtype="int8") /* ty=Tensor[(4, 12, 16), int8] */;
    %1863 = dyn.reshape(%1860, %1861, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    logical_xor(%1862, %1863) /* ty=Tensor[(4, 12, 16), int8] */
  };
  %1864(%var_13968, %var_13969) /* ty=Tensor[(4, 12, 16), int8] */
}

def @func_3061() -> Tensor[(2025), float64] {
  @func_3059() /* ty=Tensor[(2025), float64] */
}

def @func_10914() -> (Tensor[(2025), float64], Tensor[(10, 9, 11), float64], Tensor[(2025), float64]) {
  %1865 = @func_4327() /* ty=(Tensor[(2025), float64],) */;
  %1866 = %1865.0;
  %1867 = @func_1827() /* ty=Tensor[(10, 9, 11), float64] */;
  %1868 = @func_7641() /* ty=Tensor[(2025), float64] */;
  (%1866, %1867, %1868)
}

def @func_18740() -> (Tensor[(10, 9, 11), uint32],) {
  @func_18738() /* ty=(Tensor[(10, 9, 11), uint32],) */
}

def @func_21373() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  @func_21371() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_10069(%var_10041: Tensor[(5, 12, 2), float64]) -> (Tensor[(5, 12, 2), float32], Tensor[(5, 12, 2), float32]) {
  %1869 = cast(%var_10041, dtype="float64") /* ty=Tensor[(5, 12, 2), float64] */;
  %1870 = cos(%1869) /* ty=Tensor[(5, 12, 2), float64] */;
  %1871 = cast(%1870, dtype="float32") /* ty=Tensor[(5, 12, 2), float32] */;
  %1872 = cast(%1870, dtype="float32") /* ty=Tensor[(5, 12, 2), float32] */;
  %1873 = atan(%1871) /* ty=Tensor[(5, 12, 2), float32] */;
  %1874 = sinh(%1872) /* ty=Tensor[(5, 12, 2), float32] */;
  (%1873, %1874)
}

def @func_16753() -> (Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) {
  %1875 = @func_1957() /* ty=(Tensor[(2025), float64], Tensor[(16, 4, 7), float32]) */;
  %1876 = @func_16221() /* ty=(Tensor[(16, 4, 7), float32], Tensor[(10, 9, 11), float32]) */;
  %1877 = %1875.0;
  %1878 = %1876.0;
  (%1877, %1878)
}

def @func_10072(%var_10070: Tensor[(5, 12, 2), float64]) -> (Tensor[(5, 12, 2), float32], Tensor[(5, 12, 2), float32]) {
  @func_10069(%var_10070) /* ty=(Tensor[(5, 12, 2), float32], Tensor[(5, 12, 2), float32]) */
}

def @func_3888() -> Tensor[(10, 9, 11), float32] {
  %1879 = @func_1535() /* ty=(Tensor[(2025), int64], Tensor[(10, 9, 11), float32], Tensor[(990), uint32]) */;
  %1879.1
}

def @func_11083() -> (Tensor[(2025), float64],) {
  %1882 = fn () -> (Tensor[(2025), float64],) {
    %1880 = @func_9100() /* ty=(Tensor[(2025), float64],) */;
    %1881 = %1880.0;
    (%1881,)
  };
  %1882() /* ty=(Tensor[(2025), float64],) */
}

def @func_8258() -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
  %1889 = fn () -> (Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) {
    %1883 = @func_3168() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %1884 = @func_7857() /* ty=(Tensor[(10, 9, 11), float64],) */;
    %1885 = @func_7519() /* ty=(Tensor[(104, 2), float32], Tensor[(10, 9, 11), float64]) */;
    %1886 = %1883.0;
    %1887 = %1884.0;
    %1888 = %1885.1;
    (%1886, %1887, %1888)
  };
  %1889() /* ty=(Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64], Tensor[(10, 9, 11), float64]) */
}

def @func_15499(%var_15490: Tensor[(5, 12, 11), float64]) -> Tensor[(5, 12, 11), float64] {
  %1890 = cast(%var_15490, dtype="float64") /* ty=Tensor[(5, 12, 11), float64] */;
  %1891 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(5, 12, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1892 = cast(meta[relay.Constant][60] /* ty=Tensor[(5, 12, 11), float64] */, dtype="float64") /* ty=Tensor[(5, 12, 11), float64] */;
  %1893 = dyn.reshape(%1890, %1891, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%1892, %1893) /* ty=Tensor[(5, 12, 11), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen910/build/output.py", line 7521, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  98: TVMFuncCall
  97: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  96: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  95: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  94: tvm::transform::Pass::operator()(tvm::IRModule) const
  93: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  92: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  91: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  90: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  89: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  88: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  87: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  86: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  85: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  84: _ZN3tvm5relay1
  83: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  82: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  81: _ZZN3tvm5relay11ExprFunc
  80: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  79: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  78: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  77: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  76: _ZN3tvm5relay1
  75: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  74: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  73: _ZZN3tvm5relay11ExprFunc
  72: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  71: tvm::relay::DynamicToStaticMutator::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  70: std::_Function_handler<tvm::RelayExpr (tvm::relay::CallNode const*), tvm::relay::DynamicToStaticMutator::DynamicToStaticMutator(tvm::IRModule, tvm::relay::Function)::{lambda(tvm::relay::CallNode const*)#1}>::_M_invoke(std::_Any_data const&, tvm::relay::CallNode const*&&)
  69: tvm::relay::DynamicToStaticMutator::PrepareArgs(tvm::relay::CallNode const*)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:44:01] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


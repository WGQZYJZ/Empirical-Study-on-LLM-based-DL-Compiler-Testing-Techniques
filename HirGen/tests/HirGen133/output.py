import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_417 = relay.var("var_417", dtype = "float64", shape = (11, 12, 12))#candidate|417|(11, 12, 12)|var|float64
uop_418 = relay.sqrt(var_417.astype('float64')) # shape=(11, 12, 12)
bop_440 = relay.logical_xor(uop_418.astype('uint32'), relay.reshape(var_417.astype('uint32'), relay.shape_of(uop_418))) # shape=(11, 12, 12)
output = relay.Tuple([bop_440,])
output2 = relay.Tuple([bop_440,])
func_501 = relay.Function([var_417,], output)
mod['func_501'] = func_501
mod = relay.transform.InferType()(mod)
var_502 = relay.var("var_502", dtype = "float64", shape = (11, 12, 12))#candidate|502|(11, 12, 12)|var|float64
output = func_501(var_502)
func_503 = relay.Function([var_502], output)
mutated_mod['func_503'] = func_503
mutated_mod = relay.transform.InferType()(mutated_mod)
const_505 = relay.const([[[9.340582,-4.125961,7.995963,3.687852,-7.801158,0.304055,-1.575383,-2.198195,3.308935,8.001673,9.650705],[-8.059247,4.108838,4.047403,2.081037,-3.455937,-0.331413,3.185632,-1.876183,6.267130,-6.926626,-7.241075]],[[-0.913901,2.056623,8.099058,-2.548465,7.889772,-0.052843,-0.416168,5.894720,-7.070358,-8.462233,4.214273],[-8.172710,-7.007799,-6.186000,-5.286176,-7.633735,6.407652,-0.605536,-2.258393,0.812234,-3.313703,-0.732779]],[[1.868196,-1.041468,-6.733678,-5.004848,2.630018,3.073453,-4.526355,-5.247293,-0.266707,3.552655,5.762968],[0.725904,5.435912,6.265659,-4.696723,-4.259982,1.223700,1.503642,0.108823,0.442245,7.673685,-0.105428]],[[-3.269316,-5.140000,6.482621,-6.495486,-7.262462,3.316666,-0.118682,8.953745,-4.679064,-1.565922,-7.612955],[8.055237,1.473469,-7.536585,-2.220072,-6.992081,-8.908311,3.201176,6.916717,-8.695866,7.285540,4.084992]],[[-8.015408,-1.502926,-7.473623,-8.503104,2.905624,-1.693905,3.853301,5.475531,0.597401,-1.381446,-6.479013],[-1.214780,-3.477787,2.743365,-0.407840,7.612985,5.153632,8.069628,5.425256,5.476378,-5.839560,8.484254]],[[-4.977819,0.577145,1.236545,0.312463,8.175418,1.193941,-3.160208,-6.210715,1.351186,5.758113,5.051551],[-2.425986,1.122946,4.552930,3.435533,7.757963,1.940132,6.767610,-2.959065,1.968072,-2.156714,8.779701]],[[8.181653,8.147215,-0.715617,-6.167694,-2.199901,-6.680073,-9.038285,9.281908,-7.707240,6.078588,3.792433],[-1.385206,-9.148642,7.756058,-3.945274,5.637503,-2.094676,-5.525762,-9.203575,6.583828,1.470386,-5.369373]],[[7.023243,5.193243,-0.542186,-5.549937,-4.396381,6.328477,-4.731024,1.994522,-7.241598,-9.699387,-0.489635],[4.250235,6.108522,6.589647,-5.275345,-5.651482,9.844314,7.010245,2.234708,1.269155,5.217148,-7.693206]],[[2.876050,-9.666089,-8.829884,5.154368,-6.841707,4.485675,3.115499,-3.385981,-5.431532,7.067725,6.332212],[3.692605,-9.037168,-2.166690,-5.931546,5.021406,-3.715945,6.149961,9.709456,5.845468,6.988477,2.743482]]], dtype = "float64")#candidate|505|(9, 2, 11)|const|float64
var_506 = relay.var("var_506", dtype = "float64", shape = (9, 2, 11))#candidate|506|(9, 2, 11)|var|float64
bop_507 = relay.floor_divide(const_505.astype('float64'), relay.reshape(var_506.astype('float64'), relay.shape_of(const_505))) # shape=(9, 2, 11)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
var_518 = relay.var("var_518", dtype = "float64", shape = (1584, 1))#candidate|518|(1584, 1)|var|float64
call_517 = relay.TupleGetItem(func_501_call(relay.reshape(var_518.astype('float64'), [11, 12, 12])), 0)
call_519 = relay.TupleGetItem(func_503_call(relay.reshape(var_518.astype('float64'), [11, 12, 12])), 0)
uop_522 = relay.tan(const_505.astype('float64')) # shape=(9, 2, 11)
output = relay.Tuple([bop_507,call_517,var_518,uop_522,])
output2 = relay.Tuple([bop_507,call_519,var_518,uop_522,])
func_526 = relay.Function([var_506,var_518,], output)
mod['func_526'] = func_526
mod = relay.transform.InferType()(mod)
mutated_mod['func_526'] = func_526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_526_call = mutated_mod.get_global_var('func_526')
var_528 = relay.var("var_528", dtype = "float64", shape = (9, 2, 11))#candidate|528|(9, 2, 11)|var|float64
var_529 = relay.var("var_529", dtype = "float64", shape = (1584, 1))#candidate|529|(1584, 1)|var|float64
call_527 = func_526_call(var_528,var_529,)
output = call_527
func_530 = relay.Function([var_528,var_529,], output)
mutated_mod['func_530'] = func_530
mutated_mod = relay.transform.InferType()(mutated_mod)
var_681 = relay.var("var_681", dtype = "float32", shape = (6, 3, 4))#candidate|681|(6, 3, 4)|var|float32
uop_682 = relay.sigmoid(var_681.astype('float32')) # shape=(6, 3, 4)
func_526_call = mod.get_global_var('func_526')
func_530_call = mutated_mod.get_global_var('func_530')
var_685 = relay.var("var_685", dtype = "float64", shape = (198,))#candidate|685|(198,)|var|float64
var_686 = relay.var("var_686", dtype = "float64", shape = (1584,))#candidate|686|(1584,)|var|float64
call_684 = relay.TupleGetItem(func_526_call(relay.reshape(var_685.astype('float64'), [9, 2, 11]), relay.reshape(var_686.astype('float64'), [1584, 1]), ), 2)
call_687 = relay.TupleGetItem(func_530_call(relay.reshape(var_685.astype('float64'), [9, 2, 11]), relay.reshape(var_686.astype('float64'), [1584, 1]), ), 2)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
call_698 = relay.TupleGetItem(func_501_call(relay.reshape(call_684.astype('float64'), [11, 12, 12])), 0)
call_699 = relay.TupleGetItem(func_503_call(relay.reshape(call_684.astype('float64'), [11, 12, 12])), 0)
func_526_call = mod.get_global_var('func_526')
func_530_call = mutated_mod.get_global_var('func_530')
call_709 = relay.TupleGetItem(func_526_call(relay.reshape(var_685.astype('float64'), [9, 2, 11]), relay.reshape(call_698.astype('float64'), [1584, 1]), ), 2)
call_710 = relay.TupleGetItem(func_530_call(relay.reshape(var_685.astype('float64'), [9, 2, 11]), relay.reshape(call_698.astype('float64'), [1584, 1]), ), 2)
bop_718 = relay.floor_divide(call_709.astype('float64'), var_685.astype('float64')) # shape=(1584, 198)
bop_721 = relay.floor_divide(call_710.astype('float64'), var_685.astype('float64')) # shape=(1584, 198)
uop_725 = relay.exp(uop_682.astype('float64')) # shape=(6, 3, 4)
bop_729 = relay.bitwise_xor(uop_725.astype('int32'), relay.reshape(var_681.astype('int32'), relay.shape_of(uop_725))) # shape=(6, 3, 4)
uop_743 = relay.tan(bop_729.astype('float32')) # shape=(6, 3, 4)
output = relay.Tuple([call_684,var_686,call_698,bop_718,uop_743,])
output2 = relay.Tuple([call_687,var_686,call_699,bop_721,uop_743,])
func_751 = relay.Function([var_681,var_685,var_686,], output)
mod['func_751'] = func_751
mod = relay.transform.InferType()(mod)
mutated_mod['func_751'] = func_751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_751_call = mutated_mod.get_global_var('func_751')
var_753 = relay.var("var_753", dtype = "float32", shape = (6, 3, 4))#candidate|753|(6, 3, 4)|var|float32
var_754 = relay.var("var_754", dtype = "float64", shape = (198,))#candidate|754|(198,)|var|float64
var_755 = relay.var("var_755", dtype = "float64", shape = (1584,))#candidate|755|(1584,)|var|float64
call_752 = func_751_call(var_753,var_754,var_755,)
output = call_752
func_756 = relay.Function([var_753,var_754,var_755,], output)
mutated_mod['func_756'] = func_756
mutated_mod = relay.transform.InferType()(mutated_mod)
var_984 = relay.var("var_984", dtype = "float64", shape = ())#candidate|984|()|var|float64
var_985 = relay.var("var_985", dtype = "float64", shape = (10, 9, 12))#candidate|985|(10, 9, 12)|var|float64
bop_986 = relay.power(var_984.astype('float64'), var_985.astype('float64')) # shape=(10, 9, 12)
output = bop_986
output2 = bop_986
func_999 = relay.Function([var_984,var_985,], output)
mod['func_999'] = func_999
mod = relay.transform.InferType()(mod)
var_1000 = relay.var("var_1000", dtype = "float64", shape = ())#candidate|1000|()|var|float64
var_1001 = relay.var("var_1001", dtype = "float64", shape = (10, 9, 12))#candidate|1001|(10, 9, 12)|var|float64
output = func_999(var_1000,var_1001,)
func_1002 = relay.Function([var_1000,var_1001,], output)
mutated_mod['func_1002'] = func_1002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1028 = relay.var("var_1028", dtype = "float32", shape = (14, 12, 2))#candidate|1028|(14, 12, 2)|var|float32
uop_1029 = relay.atan(var_1028.astype('float32')) # shape=(14, 12, 2)
output = uop_1029
output2 = uop_1029
func_1035 = relay.Function([var_1028,], output)
mod['func_1035'] = func_1035
mod = relay.transform.InferType()(mod)
mutated_mod['func_1035'] = func_1035
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1036 = relay.var("var_1036", dtype = "float32", shape = (14, 12, 2))#candidate|1036|(14, 12, 2)|var|float32
func_1035_call = mutated_mod.get_global_var('func_1035')
call_1037 = func_1035_call(var_1036)
output = call_1037
func_1038 = relay.Function([var_1036], output)
mutated_mod['func_1038'] = func_1038
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1040 = relay.const([[[-8.392302,7.051905,-9.731349,-9.460785,6.131682,4.744460,-1.031175,0.371216,-7.402928,6.998822],[-4.291297,-2.462454,-0.045321,-9.963905,3.166306,0.449196,-0.725241,-6.515999,0.308862,-7.811481],[-3.749469,-7.629359,9.871477,-1.750163,-3.325052,-0.374922,-5.134173,5.693000,7.960149,8.804845],[-8.552295,-0.704018,2.862233,3.250278,6.468198,4.109367,2.545906,0.211832,-8.518509,-0.246594],[6.154974,7.794429,5.243975,-1.689643,1.477673,1.831458,-1.164535,-6.657919,-8.880326,5.364086],[3.427078,-4.239015,-0.854216,7.846541,7.353201,1.538705,5.814892,-8.536456,3.370552,3.566773],[-3.111216,-2.143371,-0.400088,1.737115,-9.404978,-5.407404,0.433336,-3.034959,-9.753618,-2.710067],[5.628586,-6.409174,4.127186,1.385269,-2.101010,0.330359,-0.849106,6.637988,-9.926586,6.536600],[7.780116,-8.458760,-5.818057,-1.894995,7.414634,8.482543,-3.016320,1.875048,-4.210975,0.151435],[9.101887,-4.014205,-8.789437,-1.956675,-1.211545,-6.957826,5.563959,-1.863051,8.677106,1.617531],[-4.042316,-6.393997,-6.983958,-1.905812,-3.882478,8.089887,-8.669219,8.213252,-0.921239,3.583917],[-6.878050,-9.740230,-7.886638,6.132723,-8.232674,-8.683877,8.119305,9.281421,-0.447270,8.779558],[1.976216,-6.006473,-7.701486,5.036425,0.786000,0.687580,-3.588561,-0.930336,-2.203772,-3.244498],[-2.262232,0.466782,8.289574,5.810224,-9.111349,6.336555,-0.798399,2.343227,4.200006,1.739214],[1.046998,-4.905570,-9.205967,1.916231,5.283585,8.309833,-8.724785,6.197288,-4.457813,-0.796026]],[[3.549622,-0.152549,6.207957,-1.681643,-2.570965,-8.270432,-1.816542,9.258884,4.304503,-3.408492],[3.533916,-3.980692,-5.781360,2.314639,-6.703802,-3.611997,8.426694,6.917788,-9.327332,-5.174694],[1.876724,8.985598,9.763629,9.293006,9.965502,6.183074,2.725717,-3.198942,-9.561374,-5.747173],[8.553647,-3.173031,-9.123256,-9.479649,-8.144656,0.402025,9.610538,6.468058,-4.866552,4.518392],[-1.218726,-6.171521,-8.803480,-9.742897,-0.737368,9.816788,3.607412,5.764195,-1.188443,-5.643556],[-5.676897,-5.916262,-9.003357,-8.851041,-6.942347,-9.466358,2.680261,9.785258,-6.802321,-1.128814],[-4.388293,-8.700354,0.552232,5.819904,8.980554,-7.766514,-6.911563,4.820629,4.649053,4.362306],[2.273425,-4.953955,-9.260463,-0.195110,3.184289,6.842733,4.685680,5.496252,9.044430,-4.407275],[9.364810,-6.861205,9.561010,-3.374836,-3.878105,5.545163,-8.342610,-2.206573,3.678064,8.765528],[7.161154,-3.499603,-8.824046,1.204502,3.633634,0.125619,8.252460,-2.317946,0.975785,5.635322],[-1.496425,-2.157976,-3.831562,6.570441,9.300763,4.395762,7.355071,4.214727,5.446882,-9.793806],[-4.937867,2.003091,2.024008,1.889516,3.947776,-2.752620,9.266148,-2.781396,2.630543,0.111597],[-4.628297,5.210373,-6.224555,9.191958,-3.564398,-7.655835,4.402947,-5.326942,5.638610,-6.601051],[-0.080811,-6.444408,6.855912,0.187189,-2.830897,1.377795,5.901529,5.486423,-3.210485,-2.486344],[-0.613538,2.090627,-0.937766,-1.572471,0.201929,-4.347780,-7.086446,2.807865,5.695487,-5.319636]],[[8.085543,-7.549948,3.378421,2.815968,7.802267,-0.742593,-7.794231,6.185901,5.368631,9.307695],[-3.216762,-2.400219,-3.280119,-8.327486,-4.159978,-8.980184,5.999758,2.087422,-7.379691,-9.560442],[-3.124279,5.619674,-4.971658,0.207317,-2.305795,4.574272,3.608383,5.535270,3.352595,0.540816],[4.788421,-2.636191,2.529894,9.819004,-1.618723,6.240938,-8.939583,8.073967,3.787110,-4.002617],[3.941345,8.172477,4.359909,4.413274,-2.891761,-8.993794,-6.881156,-1.558685,-4.012331,4.322035],[7.953786,5.050422,2.594081,4.613662,-4.483900,-9.077676,5.417069,-8.292037,7.278915,4.150560],[-0.539825,6.100584,-6.861151,-6.521448,2.156230,3.207035,-3.677686,-8.156197,-4.435454,6.388809],[2.380095,-7.266418,3.936793,4.426726,-5.174758,-5.643353,-5.004751,5.571082,-6.889716,-2.451950],[7.476947,-4.033667,-0.693707,1.687241,-4.378069,5.624278,9.698250,-5.655364,-1.110196,6.626154],[5.258175,-3.521934,0.845339,-4.951402,3.076285,5.275089,0.578009,1.996407,-2.561030,-5.899227],[6.698913,-2.805980,8.129101,5.534209,-3.672867,2.331077,-4.755897,1.055468,8.253995,5.389841],[-6.008051,-1.588383,3.317086,-9.395770,-7.637393,-3.911242,-6.031800,-4.215721,-7.703968,-6.173144],[-5.460375,-0.733927,2.194479,-5.416456,5.616332,5.457658,-6.003898,6.035036,5.301739,4.547910],[-0.439096,0.094002,-9.367695,8.442043,8.234275,4.274897,0.693909,2.634249,-3.976423,7.167896],[7.017260,0.328703,-7.587960,0.590907,-5.580369,-3.119996,0.328472,-0.925614,9.152992,-3.331036]],[[3.103263,3.827273,5.681404,8.898985,-3.283693,1.214884,1.437805,-2.837570,-6.093101,-4.357315],[-9.328299,0.207371,-7.123590,-1.832183,9.749471,9.699597,-6.062598,2.229128,9.713589,5.493599],[-3.270879,6.741830,-7.504813,3.698792,-0.498904,8.293609,-1.412435,-9.610196,-1.037418,2.892612],[9.961778,-5.118688,9.665829,9.696687,-9.618869,-1.442805,1.701317,5.647483,6.008663,-5.386468],[-2.035024,9.320534,6.371611,1.319403,-2.624465,8.676490,9.986740,2.646287,-8.726630,2.128510],[-7.198065,8.964903,-7.382330,1.111203,7.105783,5.657049,6.802116,4.401758,-3.724231,3.741292],[1.458544,-5.405834,-9.444627,6.559231,-1.019392,-9.653527,-5.509365,-3.848965,-9.578435,4.738873],[-6.924656,3.700254,2.949774,-5.715656,9.150383,-6.989022,-7.205737,-4.955600,-9.081842,5.479148],[-5.347955,9.040446,5.831644,4.116773,0.500751,-1.338246,0.640534,-2.477513,-9.502442,-4.935363],[-6.908020,-1.642687,3.694206,7.315360,-1.580495,-5.712918,-1.720154,9.888521,-0.965423,6.199548],[7.979020,1.252894,3.499646,0.524630,-3.871962,-4.158896,-6.047611,8.964146,7.123753,-1.785605],[-7.097850,-5.609544,-5.541662,-1.451300,1.837691,0.605778,7.143935,4.775377,-1.208273,-9.462228],[8.019294,8.337706,3.654579,4.207870,4.991618,-6.580503,0.291021,7.511994,9.009689,-7.343519],[5.210980,8.310107,-8.970535,-1.498647,-7.043439,8.059028,9.684207,2.370398,5.947213,2.522155],[-0.886151,-5.810789,-0.219592,-5.798026,-2.835949,-1.333209,-0.900047,-8.817537,9.647726,8.495540]],[[-7.492506,1.820510,9.201319,-1.712990,7.134141,1.989971,-5.541641,0.842012,7.222433,-4.750516],[-6.493069,-2.744334,-3.712231,3.879373,3.882326,4.602466,1.190666,3.279322,-0.945622,-4.852790],[6.237901,0.853740,3.504551,-0.903372,-4.812498,-1.870687,-4.316280,1.856294,-6.402417,-2.987153],[0.931071,3.376584,-7.827459,4.044762,-7.178425,-3.263586,-6.346132,4.513704,6.390553,-0.311098],[-0.937514,-7.114627,8.756555,-8.389774,9.758277,3.643394,-3.092731,8.112911,5.953848,9.330166],[-6.872310,2.749473,-4.105953,7.013799,3.130603,3.584357,-3.004378,-8.791208,-9.351542,9.793816],[8.257476,-6.241089,5.535123,-3.502692,6.148508,8.680275,8.067330,-4.313375,4.267051,4.453065],[0.702738,5.882819,6.813924,-4.459264,-4.188036,1.795065,-6.152547,5.185426,4.252928,4.258202],[-1.600965,0.010691,6.803515,8.667847,4.693757,1.593538,6.856772,-1.283197,-9.620344,-9.397304],[9.655608,-8.073048,-9.976534,2.230659,8.789694,-2.814837,2.854832,-3.369164,5.720497,-5.799408],[-4.024263,3.569121,-5.902638,-3.202027,-5.123734,7.690327,-7.011919,-2.231560,4.073282,7.074751],[-6.120385,-3.464059,1.743328,-4.311660,-4.859023,8.430917,1.854628,4.286559,-5.709087,-5.315237],[-3.940428,-4.626280,-3.368168,8.051492,9.530623,-4.930233,-2.753634,0.187809,9.710523,-8.896386],[-0.325011,2.116461,9.262686,4.990180,-0.286036,-4.749456,2.986274,-2.021045,8.348904,-6.013937],[-8.599018,-8.482389,6.289232,-8.048940,-7.830739,2.000574,-0.128806,-0.321761,5.579060,5.346931]],[[8.487387,-8.439388,3.074916,-7.953257,7.051503,7.437530,-7.605478,-9.776519,5.775392,-7.297393],[-7.056085,3.037604,-4.578163,-6.909500,2.136050,-7.759331,0.927895,-3.739104,8.234018,-8.087515],[9.369581,-3.721522,3.900682,8.891397,1.194691,-0.976163,9.737214,-7.613093,5.457535,4.959008],[-7.354576,-7.869776,1.025839,-4.413972,5.138661,7.417387,-9.068427,-3.354291,-4.186702,0.344071],[-3.151125,0.918630,3.779451,8.545673,-8.233359,6.752205,-2.021858,6.670500,-9.241207,-2.102621],[-1.940802,-5.707512,6.369855,-5.511670,2.815626,7.555477,-8.429609,4.369204,-1.967891,-0.625518],[-1.463747,-1.002761,2.580787,-5.783663,9.539393,-8.064097,-3.258276,3.426662,6.232056,2.817127],[6.449756,-0.886991,-5.865245,0.382265,3.703748,1.585221,6.350688,-2.272173,5.879492,4.598178],[-5.125810,-9.010690,-0.038889,-5.844421,-9.941191,-8.100084,9.961829,0.097517,4.268414,-5.448504],[-9.670953,-9.647480,6.699779,4.491097,5.073797,-9.283827,-0.686508,-0.618681,-9.206617,-8.902390],[-9.880778,-7.365588,-3.317378,0.643105,-3.406115,-7.461095,-3.377554,-0.923415,6.719286,-7.529292],[-5.101880,-0.688536,-7.398913,-7.317611,-1.893917,6.785097,4.809274,-4.779792,0.734195,1.356939],[4.381816,-7.928722,-3.331807,-1.960478,-7.154216,-3.186709,1.469391,6.653592,6.661968,-7.645159],[5.584636,6.171751,1.247325,-8.206824,0.365693,-2.793669,3.836531,-6.620649,7.931010,0.123547],[-3.653382,7.115275,5.188444,6.639833,-5.407611,-9.558224,9.893470,-4.811172,1.485933,1.358875]]], dtype = "float32")#candidate|1040|(6, 15, 10)|const|float32
uop_1041 = relay.sinh(const_1040.astype('float32')) # shape=(6, 15, 10)
uop_1051 = relay.asin(const_1040.astype('float32')) # shape=(6, 15, 10)
bop_1057 = relay.add(uop_1041.astype('int8'), relay.reshape(uop_1051.astype('int8'), relay.shape_of(uop_1041))) # shape=(6, 15, 10)
func_751_call = mod.get_global_var('func_751')
func_756_call = mutated_mod.get_global_var('func_756')
var_1066 = relay.var("var_1066", dtype = "float32", shape = (72,))#candidate|1066|(72,)|var|float32
var_1067 = relay.var("var_1067", dtype = "float64", shape = (198,))#candidate|1067|(198,)|var|float64
var_1068 = relay.var("var_1068", dtype = "float64", shape = (1584,))#candidate|1068|(1584,)|var|float64
call_1065 = relay.TupleGetItem(func_751_call(relay.reshape(var_1066.astype('float32'), [6, 3, 4]), relay.reshape(var_1067.astype('float64'), [198,]), relay.reshape(var_1068.astype('float64'), [1584,]), ), 3)
call_1069 = relay.TupleGetItem(func_756_call(relay.reshape(var_1066.astype('float32'), [6, 3, 4]), relay.reshape(var_1067.astype('float64'), [198,]), relay.reshape(var_1068.astype('float64'), [1584,]), ), 3)
output = relay.Tuple([bop_1057,call_1065,var_1066,var_1067,var_1068,])
output2 = relay.Tuple([bop_1057,call_1069,var_1066,var_1067,var_1068,])
func_1077 = relay.Function([var_1066,var_1067,var_1068,], output)
mod['func_1077'] = func_1077
mod = relay.transform.InferType()(mod)
mutated_mod['func_1077'] = func_1077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1077_call = mutated_mod.get_global_var('func_1077')
var_1079 = relay.var("var_1079", dtype = "float32", shape = (72,))#candidate|1079|(72,)|var|float32
var_1080 = relay.var("var_1080", dtype = "float64", shape = (198,))#candidate|1080|(198,)|var|float64
var_1081 = relay.var("var_1081", dtype = "float64", shape = (1584,))#candidate|1081|(1584,)|var|float64
call_1078 = func_1077_call(var_1079,var_1080,var_1081,)
output = call_1078
func_1082 = relay.Function([var_1079,var_1080,var_1081,], output)
mutated_mod['func_1082'] = func_1082
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1094 = relay.const([[1.320760,7.826414,1.516966,-1.617095,-2.180248,2.951361,1.125971],[-9.890971,-0.040368,-5.054532,-6.996117,9.553145,-0.228359,0.434387],[-4.337849,-2.146506,-5.527878,6.257878,-5.406902,-4.226936,-8.097690],[-0.925451,-2.801300,4.809868,6.371200,-6.702848,9.129977,5.639849],[-7.726578,8.788316,-8.274162,6.123489,6.749088,-9.957819,-0.957514],[-5.304347,-8.806984,-2.865059,2.262639,3.154719,6.143630,-0.669291],[1.673790,-3.811990,-4.756769,9.421465,7.671682,-8.181807,7.218182]], dtype = "float64")#candidate|1094|(7, 7)|const|float64
uop_1095 = relay.tan(const_1094.astype('float64')) # shape=(7, 7)
func_1035_call = mod.get_global_var('func_1035')
func_1038_call = mutated_mod.get_global_var('func_1038')
const_1104 = relay.const([3.905997,4.594214,3.070197,2.706113,2.055529,-0.353692,-1.157794,8.186497,-5.284804,0.654125,6.237772,-8.717374,-2.432184,7.919731,9.065121,8.735511,4.318741,8.686020,2.202258,-8.678995,9.965445,-8.187848,-3.189803,5.121876,-8.308464,-2.171748,-1.464928,-8.909589,2.383965,-9.101997,0.625183,7.091905,-9.754864,-3.742182,-7.145899,-3.101121,6.863675,8.543934,7.378688,-8.545622,6.797342,3.983915,9.726497,-4.960514,3.225202,3.048167,2.628452,4.095836,1.920949,0.199256,7.628211,4.289241,-8.323660,-1.697250,-8.311209,7.063567,-9.054856,5.908125,-4.065158,-2.922590,-2.185129,9.007099,-3.761120,-8.893459,-5.923193,9.746135,3.660891,-6.386324,1.508484,2.697447,0.595026,9.700191,2.204107,2.896237,4.551477,-3.372146,5.945407,9.984016,-2.716762,4.541258,0.234382,-7.107937,5.208639,-4.101486,-2.190166,-5.805517,-7.802942,3.644596,-8.496150,-4.529023,-4.539923,-0.857364,-3.093174,1.783365,2.451786,6.528234,-6.952146,8.833519,-0.475894,-4.744919,-1.282807,-9.739743,9.218692,-8.036408,-2.563974,5.938168,5.592607,-9.445658,7.550026,9.576069,-0.098589,5.540519,-1.354489,-8.315117,-6.463265,1.656083,-9.848654,2.707151,4.686593,3.289150,-9.191093,-9.822063,-0.258857,6.634255,7.977013,-2.435206,6.958305,-2.449081,9.604804,-2.587073,0.293424,-3.096508,6.474234,1.994962,5.785179,-3.354941,2.998840,-2.203282,6.875242,6.276882,-7.626105,-7.572728,3.750995,8.051989,-7.064573,-3.649522,-7.836101,7.854301,3.813024,-1.348513,1.388175,-2.653484,-6.243248,8.847525,1.444277,-6.123926,-5.676276,0.986985,0.075047,-5.700538,6.741996,5.618816,2.913738,9.134092,-3.035213,-4.728424,5.358257,-6.780106,1.674969,5.625494,8.269878,-6.601826,2.589133,0.154416,-5.768044,-1.903864,3.779444,1.226709,-5.851339,6.105532,1.875757,-4.044023,-7.310013,-0.675451,-9.231731,-4.972567,0.169569,-6.622368,8.381488,9.070251,3.843415,4.175271,5.357358,-2.241210,3.049385,-7.950038,4.987189,5.123638,-5.414249,3.789351,-6.668511,-9.722480,-0.254704,-7.603342,-3.845893,5.457450,0.065314,-6.719535,-3.167493,-2.014973,-7.741448,-6.406605,3.325340,-0.327707,4.062420,0.421615,3.534587,5.620354,-1.827263,6.799608,3.669375,-8.397821,8.890535,6.151729,6.100357,-0.156166,1.679044,4.918929,-4.805805,-1.177282,0.419472,5.216025,7.285488,-8.935397,-2.874641,-7.445911,1.565270,-6.310173,-5.974243,-9.966465,0.574276,1.144793,9.334169,-9.724118,-7.931549,9.691485,-4.036237,5.396909,3.659288,0.807277,5.870375,6.917479,-7.528633,-1.917708,3.935544,9.067124,1.517722,7.897995,7.319231,-8.648982,-5.659395,-1.617595,5.461523,-2.757063,9.891369,-5.838479,-1.977419,5.453530,-5.844085,3.540285,-3.058807,-7.179900,5.842188,-9.864615,6.975992,8.650061,-3.225845,-3.696275,4.581768,-5.935546,-6.616904,6.753729,-0.442810,-9.674547,-2.674583,4.404519,-8.252476,-4.106373,3.951464,-0.503222,-5.183148,3.525567,8.494212,-0.425411,-1.305056,-3.143642,4.503375,0.516985,-3.913869,-0.867923,7.924857,-2.423057,-8.015035,-3.616323,3.243575,-8.413659,-8.025499,7.845904,-3.934730,-2.410523,-4.892825,5.022110,-1.484766,-3.813911,-7.922608,-5.207524,-9.077491,0.236158,8.920199,-6.557520,8.004072,-5.431610,-7.652468,8.550281,9.164091,-6.947682,-6.472940,-7.511386,-4.283415,-2.938752,5.577131,3.450694,4.942092,-0.360281,-8.232831,2.414689], dtype = "float32")#candidate|1104|(336,)|const|float32
call_1103 = func_1035_call(relay.reshape(const_1104.astype('float32'), [14, 12, 2]))
call_1105 = func_1035_call(relay.reshape(const_1104.astype('float32'), [14, 12, 2]))
func_1077_call = mod.get_global_var('func_1077')
func_1082_call = mutated_mod.get_global_var('func_1082')
const_1112 = relay.const([[4.628039,6.444731,-5.045592,6.321457,9.863062,0.126738,7.993748,8.515091,-4.696495,-0.033893,0.447432,-0.375784,-4.560703,-9.265116,2.113089,-2.505062,-1.695367,7.284304,1.714983,7.701308,-2.186854,8.598945,1.888798,5.427264,1.037057,-2.723841,-8.247259,5.867732,-9.383448,-1.395392,3.351974,-5.980964,-3.598832,3.376060,-2.894240,8.011953,9.813310,-6.767140,3.889195,-7.732162,7.282039,1.891869,-3.134064,8.589597,-7.814689,-1.073741,-8.818887,3.564534,-8.129080,-7.474621,-5.045403,7.630819,9.204791,-0.109432,-9.060164,4.173245,3.004145,3.516172,8.099991,-1.318186,-5.939169,-3.811574,8.077022,-6.961994,-9.995518,7.254742,-9.711143,-3.748915,-7.136556,-4.008461,-2.109297,4.264636]], dtype = "float32")#candidate|1112|(1, 72)|const|float32
var_1113 = relay.var("var_1113", dtype = "float64", shape = (198,))#candidate|1113|(198,)|var|float64
const_1114 = relay.const([-7.945839,-0.102870,-3.350419,1.612696,-6.081482,2.971763,-5.509870,-0.821954,-4.438566,7.230214,-8.354302,4.527062,8.168162,0.260203,-1.024174,9.911496,-1.612573,5.289273,-2.102525,7.818952,9.932941,7.704756,-0.005653,-3.874898,-2.165078,1.988286,-9.091294,6.240480,1.654290,-8.153972,2.818651,-0.033348,-2.281641,-2.372495,4.959642,8.005336,-9.845785,-9.905033,-7.218642,-9.671022,-6.839197,1.548263,-0.178198,-6.471493,7.482673,5.697017,-7.676327,-4.974473,9.448013,2.358575,-3.440566,7.616837,3.852351,-5.529889,0.443170,-7.362421,-8.219438,-3.013575,-7.846359,1.491968,-3.709070,1.785703,-4.053572,8.982173,-6.982716,-4.790239,5.734433,-1.503991,6.652839,-6.152110,9.250027,-4.539842,-9.931469,-4.329148,-3.588510,7.334779,-5.543085,5.299518,-6.300891,5.315413,-2.181213,-6.447074,8.658524,-7.799334,5.711424,0.283979,-1.808098,-2.028028,0.109167,7.048004,-5.952057,-5.803411,9.704125,-9.511342,-4.376610,3.191418,6.900057,-8.420376,-0.071137,-3.426737,7.049737,-3.635270,1.925712,-5.528113,8.924481,-6.200982,-1.745753,-0.137336,5.550144,-5.272875,-4.674851,-8.506961,9.065840,8.148695,6.244165,2.412349,0.136719,-2.321585,-7.009170,8.074285,9.677375,-5.015391,-5.671754,1.530085,0.968686,3.468358,6.216806,0.734449,-9.821379,-2.293464,-4.825292,-3.109920,5.680279,7.171808,-7.542705,7.442477,-8.073047,3.050525,4.978155,-5.610278,-2.016671,-1.300028,0.106429,-2.474909,-0.479949,-1.419238,-7.891413,4.105402,7.733079,-8.399131,8.543089,1.843245,7.475312,7.703799,-0.117118,0.633812,2.598764,-1.608622,6.772516,7.799895,-6.485699,5.250341,-4.186554,-5.633681,3.500882,8.969425,3.623855,-2.325782,-1.563847,6.202389,-9.977030,4.543269,-5.731683,-1.389653,3.074698,-0.473805,9.507688,-3.006245,-7.493471,-4.812260,9.255596,-6.411837,-3.207997,9.800171,-9.347674,8.113452,2.269275,0.302392,7.437451,-5.285164,1.160755,-5.783821,-0.277029,-0.166082,7.170103,-9.742694,8.583144,4.963603,3.248314,-7.942579,4.596607,-6.688289,-6.800261,3.440454,-1.683654,-0.889726,-7.526936,-6.649432,-5.636772,8.356235,0.199797,-3.155881,-5.763687,6.570651,8.786307,-2.114316,3.826250,8.580815,-5.105634,4.948201,-2.544094,-5.005060,-1.709237,5.951243,3.380854,6.923831,-5.806264,0.110013,2.507287,5.940554,-5.602623,-1.203277,-0.349578,-7.887832,-5.363583,5.556869,3.181333,3.868224,7.564565,-7.201068,4.410301,2.238569,-2.013592,-1.740790,2.090764,-6.452512,2.410316,-2.184913,-5.013057,-3.454081,-4.289005,-6.398767,3.587718,-9.620335,-8.243875,-3.524123,-2.399719,-2.277021,-7.788695,-2.265343,-5.559442,-2.316583,2.567230,2.492501,2.036125,-4.276706,-4.348810,5.105456,-9.637173,-9.769851,7.953292,-5.194961,-7.977229,-1.377887,-5.418415,9.575807,9.999752,-4.248710,-6.829337,-7.160294,-5.855328,3.357683,3.096728,-5.365253,-3.866545,4.616393,7.898284,7.423026,-5.438576,8.383967,0.119263,7.281044,-9.909975,9.512405,3.625732,-3.204710,3.499641,-3.980262,-8.668871,-0.466048,4.527840,-1.144994,-0.510223,7.580700,9.877970,1.473772,9.862700,3.156379,-8.662309,-7.902563,5.386448,8.904156,-9.183049,0.611071,3.123563,-7.453895,6.079573,5.841046,-8.902357,-5.209492,6.885444,-5.343043,-6.113195,-9.710851,6.642309,7.441569,4.609600,3.927519,-1.585385,2.640390,-5.768890,6.911526,-7.798875,2.604102,3.804840,6.441324,4.094143,5.721455,0.734171,1.133075,-4.497924,8.086009,0.525303,2.491601,-9.129334,3.136892,-6.545317,-8.348236,-0.862859,-0.027248,-5.554725,-1.873676,5.899842,9.923756,-6.508972,2.623698,2.171001,-7.510232,5.776536,6.622826,-3.482202,8.144946,8.695611,-3.683053,2.463301,4.091551,-8.409197,-5.822185,8.307901,-4.844542,-6.657429,-5.907786,4.251492,-3.373426,-0.160780,-5.378627,3.551461,-3.645540,4.757720,-4.366244,1.977236,-7.317874,1.177596,7.980021,8.729890,-7.257319,-2.722788,8.392177,-0.962538,-1.620754,5.860202,4.340334,-0.729047,5.551793,-6.248756,3.169603,9.381484,0.746761,-0.075140,3.152575,9.359727,0.533291,-9.601552,3.072814,-2.953287,-8.582137,-6.731758,-2.531035,5.709316,-0.479608,7.762536,6.765847,-9.067302,-7.109882,9.371268,-9.917905,7.671699,-4.604673,-6.384364,-0.833507,-6.572560,9.740375,4.933038,7.209575,2.419470,-4.175495,8.842046,-0.963438,2.412913,-5.025459,-5.471801,8.670225,-3.849760,-0.349156,0.536703,-7.659725,7.763598,-7.107017,5.291231,1.312250,7.141424,-3.905019,5.569251,-2.795234,5.216351,7.035057,4.994938,7.508666,0.325248,3.573031,4.667182,-3.346696,2.203668,6.526158,-8.861831,3.551421,-2.933988,8.611081,-7.789222,-8.804886,-0.953212,-5.854946,-5.306841,-5.604426,9.518210,-7.334698,6.829625,3.303191,2.631056,3.319705,9.472692,-5.343404,-4.681696,9.489092,1.354630,-7.399995,0.698141,-9.627159,3.107644,5.391181,-1.816469,6.397317,-8.782674,-3.283430,4.936864,-3.231501,-0.997409,-9.662115,-9.967534,-8.668662,-5.623660,5.705246,0.152378,9.721262,-7.031648,4.163443,9.630275,-7.900604,4.490794,4.542120,2.964309,0.241444,-5.153084,-3.491408,1.235199,7.593589,-1.551940,7.528162,-9.235579,-1.708381,-4.881478,2.164912,-9.866318,2.376502,-8.991880,-6.494167,-1.089494,1.506489,8.968183,5.796922,-5.687967,-2.282639,-4.613139,-5.957626,6.566263,5.185854,-6.634775,1.842614,0.625462,-6.032872,8.202059,9.591637,-4.885152,6.767273,-0.540517,-2.930851,5.027728,8.261973,5.945711,-3.894203,-3.758570,-3.053509,-0.730835,4.903462,-8.274770,4.000902,-0.724063,-1.640387,6.942133,2.956591,-8.081414,3.765482,-4.438411,4.594565,-2.595931,-6.364350,-6.861164,-8.796129,-9.203993,-7.676744,3.881162,8.936274,-5.511688,9.952354,8.595252,7.666905,-0.939497,3.260636,-1.895870,-9.502366,-9.589979,5.811794,4.652795,4.354389,-2.127026,9.433919,0.852791,0.798924,-1.950493,2.737170,3.793638,4.587427,4.934739,9.398178,-5.097997,9.615221,-5.681381,2.496944,-2.589634,-7.043976,-0.409361,-3.272414,-0.690394,4.955094,-4.181874,-4.961353,4.676605,-6.044574,-6.643284,-1.211459,2.402214,8.437453,7.753780,-0.629279,8.143077,-1.268136,-6.315676,7.054758,-9.218814,8.424229,6.099751,1.618764,6.042331,-8.972783,8.309760,-1.274598,-9.086047,-6.770919,-5.344767,5.045643,5.113450,6.491805,-8.305464,-4.275797,6.807265,-3.775375,8.561275,-3.659144,2.980556,-6.009435,9.744378,8.781760,-0.667461,1.322139,-8.798539,-4.947014,-0.229831,1.041849,-9.780223,-8.084480,8.284393,2.696078,-9.525863,-5.174388,-1.940279,-9.229064,6.712791,5.364746,6.861104,1.642577,2.593106,-0.836164,8.758634,-1.983988,1.711916,-8.064139,8.710389,-4.954357,1.789034,4.835435,1.787203,3.996421,-2.729557,9.417928,-0.118603,7.433614,-1.753827,3.086946,-6.904194,-9.921377,-6.385002,-5.729912,-9.914964,7.724493,5.264528,3.887298,-2.154330,-8.120276,3.195035,7.744765,-5.299939,3.135543,-4.097366,-4.795754,-1.525664,-6.184616,8.611618,8.881667,7.081390,9.358985,3.676585,-4.088136,-6.076044,-7.695969,-6.068641,0.597566,4.147563,4.683994,2.240273,-5.262622,-7.624400,0.901655,1.042233,0.403627,3.200197,-4.600988,3.342791,4.655174,9.909528,7.576502,8.581943,-8.023737,0.947406,-0.921257,0.555994,5.482204,9.317059,-0.696123,3.796579,-7.609068,-4.074566,1.562514,6.475424,7.788796,6.078213,-0.343728,0.684029,6.322060,-8.413100,-2.101060,-2.659010,-7.527697,-2.969784,-9.044559,-3.356794,-7.117237,5.782557,3.302395,-0.298510,1.275376,9.026595,-1.560230,-0.092154,-7.935687,5.284602,5.900980,-4.571822,-1.656639,-7.186094,-9.360771,0.643838,3.702734,-4.190254,3.031035,-4.871267,-1.627543,-5.869906,-3.506512,-9.256384,0.960713,3.620578,3.812979,-3.446961,-0.837586,3.757864,-1.635997,-0.172169,4.189003,-6.023116,0.128094,-2.567822,-6.033683,3.074082,0.780701,3.272993,7.863722,3.154557,-2.129366,-6.698116,-2.132924,7.087172,-6.040360,7.344352,6.738343,-4.415979,-2.270700,-1.969867,8.202167,8.348500,-1.791989,-1.446982,-9.678674,-2.636752,4.903512,9.679198,-0.720020,-6.392731,-8.370849,7.523061,7.138676,3.381607,-4.663775,0.230304,6.071528,-8.128098,9.260362,4.309590,7.126696,3.141200,0.648017,-8.027455,4.455080,-9.432076,-6.186427,7.577975,-8.297533,9.757941,5.559260,-9.995962,-8.636987,-6.632037,0.157918,2.358902,6.071854,-1.895526,0.331564,1.754928,1.624071,6.747381,3.357292,-6.701469,1.331322,-9.128557,-9.939551,1.512835,5.846003,-2.380635,6.872498,1.023052,-4.612543,4.090076,3.963546,9.984235,7.784354,-8.918333,7.490906,-2.944201,3.640658,6.914590,7.921050,-7.413005,-3.150390,-7.940838,-8.323560,6.425039,9.743440,-2.479120,8.780327,6.271089,-1.321578,6.178284,-8.125502,-3.177084,-7.790461,4.399297,-4.069159,-2.654795,5.800696,0.062231,0.228459,-9.599772,3.957599,2.586372,-0.549960,0.977540,-6.154674,4.691400,-4.902616,-0.139407,5.436405,5.508461,5.153063,7.191244,-0.196451,-9.242337,7.405442,-0.954071,-5.499809,5.638816,-8.051684,0.349836,0.642481,-1.833333,7.266247,-4.614064,-2.355514,-8.099504,8.787352,-0.402234,-6.909014,9.682611,-8.514827,3.192822,4.297351,3.618148,1.769455,6.368878,1.481314,6.646166,-6.061623,-7.290748,6.112799,3.821348,-9.290926,-6.465627,-4.422761,-1.450255,6.858231,3.787006,-3.461435,-9.183128,-5.778138,-0.571777,0.658021,-6.247854,3.066507,3.315985,0.494257,8.101863,-5.416233,2.806288,-7.249268,7.717543,1.973261,-6.049551,-7.017462,1.343499,-5.895806,-9.134078,7.347816,-2.739806,6.671445,5.480488,-2.066779,-2.323251,-3.257975,9.360014,7.029951,-0.521891,-7.919846,-4.725335,-9.403112,8.702568,9.933709,-6.678160,-7.703366,1.336885,-1.136296,-7.206390,-5.536545,-7.589803,-2.580806,4.072657,-7.484600,-8.068541,-9.879263,3.248417,0.021056,-8.168544,1.027458,9.437634,8.041442,9.555345,-7.309876,-0.042205,2.156680,7.137939,-3.525940,5.723267,4.582718,5.660669,3.405253,-1.039711,5.666660,8.085636,1.022805,-4.365274,-5.916691,6.256149,-9.130237,3.140296,-4.736966,5.402760,1.334982,6.441048,1.566679,-6.459253,-5.265931,9.190712,3.092231,-3.473543,6.734630,3.342054,-4.275340,-2.897560,-7.374727,-2.154200,8.611999,-3.547712,7.968760,4.306665,-9.072834,2.969907,-4.627743,4.801207,9.456676,-6.410194,-9.132685,-7.890686,-0.974145,1.879972,-5.530262,7.480285,-1.781752,-0.222709,-6.388525,-7.522170,-8.045302,7.727339,-2.838162,-2.527491,-0.960028,-9.750649,7.262165,5.509527,-4.978781,-3.104878,3.569263,-7.619389,9.230381,1.970337,-6.810811,5.304076,8.410246,1.147117,4.188543,7.404291,-7.061999,-5.287339,6.447531,-8.704391,5.026624,-3.931819,-3.357350,-9.740178,-7.551557,3.249354,0.575069,7.356597,4.875063,-5.044592,-4.064947,-1.306394,1.942560,-2.963632,5.601135,-1.601473,-5.457853,0.050931,8.848795,-0.917996,2.702005,-2.654040,-2.963315,7.872295,-6.098092,-4.608790,4.243792,-6.354195,-7.217789,9.224139,2.640374,-1.445637,3.000573,-3.870713,4.608893,-6.189852,4.241489,7.320378,-5.019104,2.545466,-4.174945,3.212198,9.381715,-5.526757,8.260538,8.553280,-0.601861,-4.352860,7.524069,-8.891417,6.927714,5.934733,-0.211949,6.300912,0.875860,9.904978,-2.017505,1.704182,-0.385548,6.576286,-2.146059,-2.015925,-7.364325,-6.206266,-4.773592,-2.560619,2.442000,-1.115865,-1.225203,-9.518402,-1.558652,0.085767,-0.600490,-0.051898,8.953756,-9.912570,-8.371262,-0.485200,4.838256,-9.355139,5.123644,-0.865122,-9.925764,-9.995193,-7.737661,-3.492030,1.630681,4.581611,5.422986,-4.548073,-4.490367,-6.722375,-9.167902,5.809434,5.113381,6.996442,0.753095,7.813280,-0.344965,-6.820644,-5.425524,1.636438,4.176057,5.262086,2.528864,0.021811,6.887212,-4.202185,-6.281177,7.069217,-2.932298,-1.166100,-3.095231,9.014714,-0.716441,7.980509,2.314106,-7.211540,-4.184986,4.009334,7.497257,4.004630,-7.926001,-8.181309,8.678039,-7.564506,-1.201086,8.426674,-6.933472,1.607579,4.462941,2.221883,-5.281753,7.777245,5.859388,-2.766632,4.068338,4.448689,6.885541,-6.018274,-9.627011,-4.831419,3.321551,2.885003,4.716970,-4.258652,-5.068937,7.551986,0.370253,6.663038,8.929222,-1.561864,3.170159,-8.614168,8.601893,4.232252,0.956685,9.028895,-5.473493,-3.009592,6.465572,-8.747535,-7.067067,-7.044669,-4.484647,-6.119451,3.853226,-3.251649,0.453311,-5.398860,5.158367,-9.367056,8.165204,2.859314,-5.376698,4.068501,3.640640,4.057211,4.151460,3.071053,1.915298,2.769578,-3.180553,8.758387,-5.670178,0.529127,-3.972614,-7.993899,8.725560,4.960740,0.751517,2.523245,-8.017233,-5.541928,4.910805,7.573947,-0.309862,4.499033,-5.695033,-3.399718,-5.618576,-6.159070,1.808952,0.508401,-7.841220,-6.539850,5.442073,-9.438093,4.570188,-6.885820,2.586983,1.839082,-2.263262,-7.269578,-5.683624,-0.879343,-2.799026,0.557375,4.706826,-6.862051,3.789830,-6.994244,7.513949,-6.124115,2.075699,5.137075,-8.974760,-6.036235,0.612300,7.515714,0.406840,0.968452,-4.902390,3.646899,6.317147,1.653908,9.769368,1.864762,0.046026,3.863395,-2.798400,5.126797,3.555734,-1.925766,-2.870604,-4.318405,1.735374,-4.164550,-2.259856,0.635665,3.536499,-0.055471,-7.615999,4.432573,6.901369,9.015023,0.363552,-8.515114,-6.287234,-9.001408,-2.120957,4.372381,-0.718150,0.268592,0.433024,-3.129281,-7.175086,4.316682,-6.249888,-0.221745,4.178222,-1.508048,-1.335742,-1.842609,7.128741,5.424132,2.873368,9.155381,-0.813858,7.622932,4.355091,8.472520,-1.969746,1.114670,8.672910,0.576084,7.149895,-3.221768,-2.395571,-4.028904,5.848191,-2.769506,-8.414846,-2.328577,-7.537272,1.272361,7.449294,1.885755,6.433244,-3.391682,-0.720746,-8.832149,6.544103,1.571780,6.966590,6.340769,-7.029084,9.350343,0.879247,8.067773,5.863288,-3.171834,1.429622,3.100850,-7.427468,-7.762006,9.080302,-9.262484,2.331445,-8.625002,5.108897,5.545156,8.116490,1.655077,-7.363542,3.213963,7.323244,-1.794659,4.673524,5.937324,7.710446,0.419696,-0.727092,-6.014189,7.603794,-5.204804,-9.727827,-1.080321,9.836624,4.541605,0.389447,4.389497,-3.841289,6.223251,0.486249,9.673872,-6.851487,5.340271,-5.467965,-7.035687,2.329850,-0.548502,-4.459075,6.072467,-5.195611,1.495887,9.206624,-3.317445,-1.567207,-1.078947,9.681524,3.501390,-8.116737,-6.831943,-9.766673,-7.535955,-8.035079,9.445227,-3.234476,-4.969702,5.807408,-3.735274,-7.241425,-9.874000,-6.450793,0.607213,-2.474024,-1.948012,3.694748,6.963816,3.445633,1.919713,5.092830,9.528897,-6.758976,-4.181927,1.696750,-7.904689,-2.709579,6.712500,2.384355,-2.452106,8.874426,-6.620303,5.292135,-1.299355,-2.402015,-3.674713,-1.471570,6.923842,7.095682,0.922235,-4.632731,9.237482,-7.582568,0.970236,9.193656,-2.691611,-4.934666,5.220885,-7.247796,3.622511,-0.086210,-2.247484,0.665843,0.939956,-3.414926,9.167844,-9.533519,8.011503,3.956059,6.298644,-4.134596,3.629650,-8.388258,-6.989002,-6.486775,0.713271,-9.803989,-5.970812,6.789990,-8.480828,-1.122679,-1.237672,-1.313946,0.864351,0.908119,-1.340140,-1.192298,-8.845554,7.173092,-9.786422,-2.733582,-4.321859,6.693394,-9.466307,-5.937609,-2.751305,2.514256,2.301186,-4.096869,5.139497,4.875687,7.431832,-7.439218,9.180365,7.375396,5.924220,8.776302,-9.069456,-6.704025,-6.518795,3.825581,3.487426,4.111779,9.944994,-8.940168,0.414520,-9.917455,7.804441,2.688740,-7.318743,-8.234235,-0.581957,9.646362,1.476367,-2.748515,-5.066075,-8.343580,-7.872651,4.590462,-5.101832,-4.561608,4.888194,-2.580100,5.419803,5.583521,-4.099216,-1.708182,-3.189446,5.854625,3.197511,4.602579,-0.518767,-9.909130,5.328162,-1.517398,2.542441,-5.046198,8.402964,6.856029,-6.739604,5.038167,9.513740,6.257167,0.020870,0.953693,-1.194161,8.930619,-9.603947,4.670037,5.573701,0.508770,3.337924,0.704540,5.624809,8.231906,-2.390087,-9.948236,-7.009910,1.082082,7.562207,2.648750,3.769446,-0.308078,-3.275184,5.954268,9.894963,-5.768561,-5.801679,7.214174,-6.795449,6.203982], dtype = "float64")#candidate|1114|(1584,)|const|float64
call_1111 = relay.TupleGetItem(func_1077_call(relay.reshape(const_1112.astype('float32'), [72,]), relay.reshape(var_1113.astype('float64'), [198,]), relay.reshape(const_1114.astype('float64'), [1584,]), ), 4)
call_1115 = relay.TupleGetItem(func_1082_call(relay.reshape(const_1112.astype('float32'), [72,]), relay.reshape(var_1113.astype('float64'), [198,]), relay.reshape(const_1114.astype('float64'), [1584,]), ), 4)
func_526_call = mod.get_global_var('func_526')
func_530_call = mutated_mod.get_global_var('func_530')
call_1123 = relay.TupleGetItem(func_526_call(relay.reshape(var_1113.astype('float64'), [9, 2, 11]), relay.reshape(const_1114.astype('float64'), [1584, 1]), ), 0)
call_1124 = relay.TupleGetItem(func_530_call(relay.reshape(var_1113.astype('float64'), [9, 2, 11]), relay.reshape(const_1114.astype('float64'), [1584, 1]), ), 0)
func_751_call = mod.get_global_var('func_751')
func_756_call = mutated_mod.get_global_var('func_756')
call_1127 = relay.TupleGetItem(func_751_call(relay.reshape(const_1112.astype('float32'), [6, 3, 4]), relay.reshape(var_1113.astype('float64'), [198,]), relay.reshape(call_1111.astype('float64'), [1584,]), ), 1)
call_1128 = relay.TupleGetItem(func_756_call(relay.reshape(const_1112.astype('float32'), [6, 3, 4]), relay.reshape(var_1113.astype('float64'), [198,]), relay.reshape(call_1111.astype('float64'), [1584,]), ), 1)
output = relay.Tuple([uop_1095,call_1103,const_1104,call_1111,const_1112,var_1113,const_1114,call_1123,call_1127,])
output2 = relay.Tuple([uop_1095,call_1105,const_1104,call_1115,const_1112,var_1113,const_1114,call_1124,call_1128,])
func_1133 = relay.Function([var_1113,], output)
mod['func_1133'] = func_1133
mod = relay.transform.InferType()(mod)
var_1134 = relay.var("var_1134", dtype = "float64", shape = (198,))#candidate|1134|(198,)|var|float64
output = func_1133(var_1134)
func_1135 = relay.Function([var_1134], output)
mutated_mod['func_1135'] = func_1135
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1197 = relay.const([[[-2.406004,7.825440,-6.549915,1.099377]],[[6.801413,-1.437569,-1.794354,4.861439]],[[7.614049,7.700865,2.691896,1.721109]],[[-4.775640,-2.079571,-0.432970,1.936664]],[[5.582626,-0.412688,-9.744725,-8.894029]]], dtype = "float32")#candidate|1197|(5, 1, 4)|const|float32
uop_1198 = relay.log10(const_1197.astype('float32')) # shape=(5, 1, 4)
output = uop_1198
output2 = uop_1198
func_1203 = relay.Function([], output)
mod['func_1203'] = func_1203
mod = relay.transform.InferType()(mod)
output = func_1203()
func_1204 = relay.Function([], output)
mutated_mod['func_1204'] = func_1204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1203_call = mod.get_global_var('func_1203')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_1231 = func_1203_call()
call_1232 = func_1203_call()
output = call_1231
output2 = call_1232
func_1235 = relay.Function([], output)
mod['func_1235'] = func_1235
mod = relay.transform.InferType()(mod)
mutated_mod['func_1235'] = func_1235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mutated_mod.get_global_var('func_1235')
call_1236 = func_1235_call()
output = call_1236
func_1237 = relay.Function([], output)
mutated_mod['func_1237'] = func_1237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_1245 = func_1235_call()
call_1246 = func_1235_call()
func_1035_call = mod.get_global_var('func_1035')
func_1038_call = mutated_mod.get_global_var('func_1038')
var_1249 = relay.var("var_1249", dtype = "float32", shape = (336,))#candidate|1249|(336,)|var|float32
call_1248 = func_1035_call(relay.reshape(var_1249.astype('float32'), [14, 12, 2]))
call_1250 = func_1035_call(relay.reshape(var_1249.astype('float32'), [14, 12, 2]))
func_1035_call = mod.get_global_var('func_1035')
func_1038_call = mutated_mod.get_global_var('func_1038')
call_1255 = func_1035_call(relay.reshape(call_1248.astype('float32'), [14, 12, 2]))
call_1256 = func_1035_call(relay.reshape(call_1248.astype('float32'), [14, 12, 2]))
output = relay.Tuple([call_1245,call_1248,var_1249,call_1255,])
output2 = relay.Tuple([call_1246,call_1250,var_1249,call_1256,])
func_1257 = relay.Function([var_1249,], output)
mod['func_1257'] = func_1257
mod = relay.transform.InferType()(mod)
mutated_mod['func_1257'] = func_1257
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1258 = relay.var("var_1258", dtype = "float32", shape = (336,))#candidate|1258|(336,)|var|float32
func_1257_call = mutated_mod.get_global_var('func_1257')
call_1259 = func_1257_call(var_1258)
output = call_1259
func_1260 = relay.Function([var_1258], output)
mutated_mod['func_1260'] = func_1260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_1265 = func_1235_call()
call_1266 = func_1235_call()
output = call_1265
output2 = call_1266
func_1276 = relay.Function([], output)
mod['func_1276'] = func_1276
mod = relay.transform.InferType()(mod)
output = func_1276()
func_1277 = relay.Function([], output)
mutated_mod['func_1277'] = func_1277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1276_call = mod.get_global_var('func_1276')
func_1277_call = mutated_mod.get_global_var('func_1277')
call_1304 = func_1276_call()
call_1305 = func_1276_call()
func_1203_call = mod.get_global_var('func_1203')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_1308 = func_1203_call()
call_1309 = func_1203_call()
bop_1327 = relay.equal(call_1308.astype('bool'), relay.reshape(call_1304.astype('bool'), relay.shape_of(call_1308))) # shape=(5, 1, 4)
bop_1330 = relay.equal(call_1309.astype('bool'), relay.reshape(call_1305.astype('bool'), relay.shape_of(call_1309))) # shape=(5, 1, 4)
output = bop_1327
output2 = bop_1330
func_1331 = relay.Function([], output)
mod['func_1331'] = func_1331
mod = relay.transform.InferType()(mod)
output = func_1331()
func_1332 = relay.Function([], output)
mutated_mod['func_1332'] = func_1332
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1366 = relay.var("var_1366", dtype = "int64", shape = (9, 2, 14))#candidate|1366|(9, 2, 14)|var|int64
var_1367 = relay.var("var_1367", dtype = "int64", shape = (9, 2, 14))#candidate|1367|(9, 2, 14)|var|int64
bop_1368 = relay.right_shift(var_1366.astype('int64'), relay.reshape(var_1367.astype('int64'), relay.shape_of(var_1366))) # shape=(9, 2, 14)
func_1203_call = mod.get_global_var('func_1203')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_1373 = func_1203_call()
call_1374 = func_1203_call()
output = relay.Tuple([bop_1368,call_1373,])
output2 = relay.Tuple([bop_1368,call_1374,])
func_1375 = relay.Function([var_1366,var_1367,], output)
mod['func_1375'] = func_1375
mod = relay.transform.InferType()(mod)
mutated_mod['func_1375'] = func_1375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1375_call = mutated_mod.get_global_var('func_1375')
var_1377 = relay.var("var_1377", dtype = "int64", shape = (9, 2, 14))#candidate|1377|(9, 2, 14)|var|int64
var_1378 = relay.var("var_1378", dtype = "int64", shape = (9, 2, 14))#candidate|1378|(9, 2, 14)|var|int64
call_1376 = func_1375_call(var_1377,var_1378,)
output = call_1376
func_1379 = relay.Function([var_1377,var_1378,], output)
mutated_mod['func_1379'] = func_1379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1203_call = mod.get_global_var('func_1203')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_1383 = func_1203_call()
call_1384 = func_1203_call()
uop_1399 = relay.log(call_1383.astype('float32')) # shape=(5, 1, 4)
uop_1401 = relay.log(call_1384.astype('float32')) # shape=(5, 1, 4)
output = uop_1399
output2 = uop_1401
func_1415 = relay.Function([], output)
mod['func_1415'] = func_1415
mod = relay.transform.InferType()(mod)
mutated_mod['func_1415'] = func_1415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1415_call = mutated_mod.get_global_var('func_1415')
call_1416 = func_1415_call()
output = call_1416
func_1417 = relay.Function([], output)
mutated_mod['func_1417'] = func_1417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1331_call = mod.get_global_var('func_1331')
func_1332_call = mutated_mod.get_global_var('func_1332')
call_1440 = func_1331_call()
call_1441 = func_1331_call()
func_1133_call = mod.get_global_var('func_1133')
func_1135_call = mutated_mod.get_global_var('func_1135')
var_1459 = relay.var("var_1459", dtype = "float64", shape = (198,))#candidate|1459|(198,)|var|float64
call_1458 = relay.TupleGetItem(func_1133_call(relay.reshape(var_1459.astype('float64'), [198,])), 6)
call_1460 = relay.TupleGetItem(func_1135_call(relay.reshape(var_1459.astype('float64'), [198,])), 6)
output = relay.Tuple([call_1440,call_1458,var_1459,])
output2 = relay.Tuple([call_1441,call_1460,var_1459,])
func_1466 = relay.Function([var_1459,], output)
mod['func_1466'] = func_1466
mod = relay.transform.InferType()(mod)
mutated_mod['func_1466'] = func_1466
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1467 = relay.var("var_1467", dtype = "float64", shape = (198,))#candidate|1467|(198,)|var|float64
func_1466_call = mutated_mod.get_global_var('func_1466')
call_1468 = func_1466_call(var_1467)
output = call_1468
func_1469 = relay.Function([var_1467], output)
mutated_mod['func_1469'] = func_1469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1331_call = mod.get_global_var('func_1331')
func_1332_call = mutated_mod.get_global_var('func_1332')
call_1482 = func_1331_call()
call_1483 = func_1331_call()
uop_1490 = relay.cos(call_1482.astype('float32')) # shape=(5, 1, 4)
uop_1492 = relay.cos(call_1483.astype('float32')) # shape=(5, 1, 4)
func_1331_call = mod.get_global_var('func_1331')
func_1332_call = mutated_mod.get_global_var('func_1332')
call_1495 = func_1331_call()
call_1496 = func_1331_call()
func_1415_call = mod.get_global_var('func_1415')
func_1417_call = mutated_mod.get_global_var('func_1417')
call_1504 = func_1415_call()
call_1505 = func_1415_call()
func_526_call = mod.get_global_var('func_526')
func_530_call = mutated_mod.get_global_var('func_530')
const_1507 = relay.const([-9.420452,0.804472,-1.017878,8.334980,-6.523970,8.170692,5.828292,-3.604420,-3.891797,-8.836982,-9.256180,7.426978,9.984038,1.172984,2.938574,-3.344698,-9.358588,5.865551,-7.087021,-1.999423,-7.890633,7.422255,1.002712,4.023631,-2.298240,-1.465138,6.648054,-1.505925,3.339446,1.799820,1.992363,-2.815782,-4.364596,-1.613048,-1.218653,1.524862,-4.889341,-1.613581,0.884754,-1.589072,4.133468,-4.396740,-5.407452,2.107849,-2.691541,-3.916905,-8.372035,7.116034,-7.288636,8.000103,-7.273847,3.219477,-0.633314,-4.647141,-7.572603,5.310538,-4.249312,-6.772437,-7.169081,-9.515289,-5.276331,-8.776908,3.085396,2.671025,-4.314755,-3.084440,-8.210851,4.997987,2.441373,-8.179405,-8.136705,6.616656,9.374641,7.914764,4.115316,-6.253718,-5.723993,-2.508638,-3.332173,0.445819,-3.089704,-4.902928,-4.965181,0.716710,3.767515,8.037953,0.516028,-6.125515,-9.938956,3.968306,5.919856,2.104256,-6.248859,7.311125,-5.300235,3.472985,-0.617495,7.402786,-1.640808,-5.913283,-9.711455,5.067907,-8.629211,-2.444156,-6.180439,-6.710542,1.107319,1.943295,6.999970,-6.004990,-8.732373,2.957091,0.014537,4.961249,8.714617,-7.894252,6.822501,-8.790493,5.140780,-3.542864,-9.646109,-8.341516,-1.464337,6.097308,-6.998559,8.509872,-6.578071,-6.280630,6.853737,7.159634,9.355210,-4.612548,1.823398,6.084718,6.562024,-6.929538,-9.322221,7.432826,9.588883,6.560923,4.068945,-4.913312,2.280446,8.902845,-9.882911,9.912318,-6.971547,-6.732997,-5.092440,2.594402,3.919532,2.863367,-5.848455,-6.417757,-9.323801,9.570287,4.884465,9.902168,-0.979550,6.814061,4.017864,2.205464,6.167742,5.938773,0.820874,7.665397,9.343775,-8.824444,-4.104573,4.598743,-4.949974,-8.150648,-0.441518,-1.319097,-6.462275,6.956795,4.249009,-2.691721,-9.430206,-9.125835,-1.433671,-7.737976,5.909517,2.350776,7.691110,-2.156877,3.746244,0.822273,-1.386928,3.249148,-2.912184,-3.980974,6.570515,-1.246989,-4.351391,5.749712,-7.512028,-2.094585], dtype = "float64")#candidate|1507|(198,)|const|float64
var_1508 = relay.var("var_1508", dtype = "float64", shape = (1584,))#candidate|1508|(1584,)|var|float64
call_1506 = relay.TupleGetItem(func_526_call(relay.reshape(const_1507.astype('float64'), [9, 2, 11]), relay.reshape(var_1508.astype('float64'), [1584, 1]), ), 0)
call_1509 = relay.TupleGetItem(func_530_call(relay.reshape(const_1507.astype('float64'), [9, 2, 11]), relay.reshape(var_1508.astype('float64'), [1584, 1]), ), 0)
uop_1510 = relay.asinh(uop_1490.astype('float32')) # shape=(5, 1, 4)
uop_1512 = relay.asinh(uop_1492.astype('float32')) # shape=(5, 1, 4)
output = relay.Tuple([call_1495,call_1504,call_1506,const_1507,var_1508,uop_1510,])
output2 = relay.Tuple([call_1496,call_1505,call_1509,const_1507,var_1508,uop_1512,])
func_1513 = relay.Function([var_1508,], output)
mod['func_1513'] = func_1513
mod = relay.transform.InferType()(mod)
mutated_mod['func_1513'] = func_1513
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1514 = relay.var("var_1514", dtype = "float64", shape = (1584,))#candidate|1514|(1584,)|var|float64
func_1513_call = mutated_mod.get_global_var('func_1513')
call_1515 = func_1513_call(var_1514)
output = call_1515
func_1516 = relay.Function([var_1514], output)
mutated_mod['func_1516'] = func_1516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1415_call = mod.get_global_var('func_1415')
func_1417_call = mutated_mod.get_global_var('func_1417')
call_1704 = func_1415_call()
call_1705 = func_1415_call()
func_1133_call = mod.get_global_var('func_1133')
func_1135_call = mutated_mod.get_global_var('func_1135')
const_1707 = relay.const([[2.423494,-5.480914,5.120017,-7.370197,5.077599,-8.366689,-5.792177,-9.178022,0.744263,7.952887,-0.950583,3.585550,1.934177,2.939770,-5.170523,2.329765,-9.908614,-7.220103,0.003456,2.062753,-8.173407,7.863706,0.953275,1.611231,-3.124068,0.810727,8.783515,-6.691023,-9.432632,8.588475,8.774822,-1.258099,-2.957032,0.498782,7.888589,-2.480999,1.328637,-3.531407,7.367600,0.331970,3.514439,-9.715597,1.811552,1.567678,-5.465383,-6.569686,-1.055473,-9.068780,3.859935,-7.911395,-5.067882,-5.281888,-5.576236,-4.438875,0.619634,-7.719085,4.857186,1.532980,6.496730,-6.782777,5.796536,0.391588,2.274574,0.261903,4.309472,8.179505],[-1.842693,5.214662,2.646719,7.183517,2.157256,2.978392,-6.330501,8.392001,4.894053,-5.034640,-9.682611,-7.079585,3.442461,1.382249,-1.367596,-1.342309,-4.273670,0.077922,-0.769159,-7.826000,-0.115833,-2.668906,9.035780,-1.099981,3.319294,2.220061,-9.077383,0.189078,0.017630,7.453510,7.182453,1.949187,5.086760,8.497339,7.022262,-6.526969,6.982768,-8.570169,-9.523708,-6.071030,7.605967,-5.777160,9.027483,8.551210,-7.218932,-6.347155,8.235355,0.052395,0.456840,-5.195282,6.086949,-5.720844,1.168441,2.365970,-6.821962,2.422301,7.480487,5.272364,5.166857,-9.059421,1.028827,2.358125,-4.474911,-6.238987,-6.507766,-8.447444],[7.191346,-0.599982,3.187457,-9.218066,1.873689,-1.106383,6.866982,-1.998280,-1.197787,-7.076688,2.780410,-3.568091,0.004969,9.935859,7.836278,9.633317,5.502302,1.009480,2.969300,-3.970007,9.856746,0.223922,-7.653521,3.058214,-4.703919,1.225048,-1.237955,5.077635,-7.937095,8.645332,-8.845201,-5.146244,-4.082918,3.694983,8.629886,2.644667,-6.076105,-7.722523,-9.165114,9.167560,4.979947,-7.740877,9.071244,0.145303,3.764901,5.682507,9.943970,3.405509,-4.899585,2.850715,-9.365198,-9.107296,-9.298131,1.792351,9.045856,3.599062,3.264142,-1.428146,-3.893696,-8.468363,-4.148129,1.266866,9.308148,0.512926,9.096780,-9.312619]], dtype = "float64")#candidate|1707|(3, 66)|const|float64
call_1706 = relay.TupleGetItem(func_1133_call(relay.reshape(const_1707.astype('float64'), [198,])), 6)
call_1708 = relay.TupleGetItem(func_1135_call(relay.reshape(const_1707.astype('float64'), [198,])), 6)
func_1415_call = mod.get_global_var('func_1415')
func_1417_call = mutated_mod.get_global_var('func_1417')
call_1725 = func_1415_call()
call_1726 = func_1415_call()
output = relay.Tuple([call_1704,call_1706,const_1707,call_1725,])
output2 = relay.Tuple([call_1705,call_1708,const_1707,call_1726,])
func_1727 = relay.Function([], output)
mod['func_1727'] = func_1727
mod = relay.transform.InferType()(mod)
output = func_1727()
func_1728 = relay.Function([], output)
mutated_mod['func_1728'] = func_1728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1203_call = mod.get_global_var('func_1203')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_1825 = func_1203_call()
call_1826 = func_1203_call()
var_1832 = relay.var("var_1832", dtype = "float32", shape = (5, 1, 4))#candidate|1832|(5, 1, 4)|var|float32
bop_1833 = relay.add(call_1825.astype('int8'), relay.reshape(var_1832.astype('int8'), relay.shape_of(call_1825))) # shape=(5, 1, 4)
bop_1836 = relay.add(call_1826.astype('int8'), relay.reshape(var_1832.astype('int8'), relay.shape_of(call_1826))) # shape=(5, 1, 4)
uop_1837 = relay.sigmoid(var_1832.astype('float32')) # shape=(5, 1, 4)
func_1331_call = mod.get_global_var('func_1331')
func_1332_call = mutated_mod.get_global_var('func_1332')
call_1839 = func_1331_call()
call_1840 = func_1331_call()
output = relay.Tuple([bop_1833,uop_1837,call_1839,])
output2 = relay.Tuple([bop_1836,uop_1837,call_1840,])
func_1848 = relay.Function([var_1832,], output)
mod['func_1848'] = func_1848
mod = relay.transform.InferType()(mod)
mutated_mod['func_1848'] = func_1848
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1849 = relay.var("var_1849", dtype = "float32", shape = (5, 1, 4))#candidate|1849|(5, 1, 4)|var|float32
func_1848_call = mutated_mod.get_global_var('func_1848')
call_1850 = func_1848_call(var_1849)
output = call_1850
func_1851 = relay.Function([var_1849], output)
mutated_mod['func_1851'] = func_1851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1276_call = mod.get_global_var('func_1276')
func_1277_call = mutated_mod.get_global_var('func_1277')
call_1884 = func_1276_call()
call_1885 = func_1276_call()
uop_1886 = relay.acosh(call_1884.astype('float64')) # shape=(5, 1, 4)
uop_1888 = relay.acosh(call_1885.astype('float64')) # shape=(5, 1, 4)
func_1035_call = mod.get_global_var('func_1035')
func_1038_call = mutated_mod.get_global_var('func_1038')
var_1891 = relay.var("var_1891", dtype = "float32", shape = (2, 168))#candidate|1891|(2, 168)|var|float32
call_1890 = func_1035_call(relay.reshape(var_1891.astype('float32'), [14, 12, 2]))
call_1892 = func_1035_call(relay.reshape(var_1891.astype('float32'), [14, 12, 2]))
bop_1896 = relay.bitwise_or(uop_1886.astype('uint64'), relay.reshape(call_1884.astype('uint64'), relay.shape_of(uop_1886))) # shape=(5, 1, 4)
bop_1899 = relay.bitwise_or(uop_1888.astype('uint64'), relay.reshape(call_1885.astype('uint64'), relay.shape_of(uop_1888))) # shape=(5, 1, 4)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
var_1901 = relay.var("var_1901", dtype = "float64", shape = (1584,))#candidate|1901|(1584,)|var|float64
call_1900 = relay.TupleGetItem(func_501_call(relay.reshape(var_1901.astype('float64'), [11, 12, 12])), 0)
call_1902 = relay.TupleGetItem(func_503_call(relay.reshape(var_1901.astype('float64'), [11, 12, 12])), 0)
output = relay.Tuple([call_1890,var_1891,bop_1896,call_1900,var_1901,])
output2 = relay.Tuple([call_1892,var_1891,bop_1899,call_1902,var_1901,])
func_1905 = relay.Function([var_1891,var_1901,], output)
mod['func_1905'] = func_1905
mod = relay.transform.InferType()(mod)
mutated_mod['func_1905'] = func_1905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1905_call = mutated_mod.get_global_var('func_1905')
var_1907 = relay.var("var_1907", dtype = "float32", shape = (2, 168))#candidate|1907|(2, 168)|var|float32
var_1908 = relay.var("var_1908", dtype = "float64", shape = (1584,))#candidate|1908|(1584,)|var|float64
call_1906 = func_1905_call(var_1907,var_1908,)
output = call_1906
func_1909 = relay.Function([var_1907,var_1908,], output)
mutated_mod['func_1909'] = func_1909
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2017 = relay.var("var_2017", dtype = "int16", shape = ())#candidate|2017|()|var|int16
var_2018 = relay.var("var_2018", dtype = "int16", shape = (16, 16, 9))#candidate|2018|(16, 16, 9)|var|int16
bop_2019 = relay.minimum(var_2017.astype('int16'), var_2018.astype('int16')) # shape=(16, 16, 9)
output = relay.Tuple([bop_2019,])
output2 = relay.Tuple([bop_2019,])
func_2033 = relay.Function([var_2017,var_2018,], output)
mod['func_2033'] = func_2033
mod = relay.transform.InferType()(mod)
var_2034 = relay.var("var_2034", dtype = "int16", shape = ())#candidate|2034|()|var|int16
var_2035 = relay.var("var_2035", dtype = "int16", shape = (16, 16, 9))#candidate|2035|(16, 16, 9)|var|int16
output = func_2033(var_2034,var_2035,)
func_2036 = relay.Function([var_2034,var_2035,], output)
mutated_mod['func_2036'] = func_2036
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2078 = relay.var("var_2078", dtype = "bool", shape = (15, 10, 4))#candidate|2078|(15, 10, 4)|var|bool
var_2079 = relay.var("var_2079", dtype = "bool", shape = (15, 10, 4))#candidate|2079|(15, 10, 4)|var|bool
bop_2080 = relay.logical_or(var_2078.astype('bool'), relay.reshape(var_2079.astype('bool'), relay.shape_of(var_2078))) # shape=(15, 10, 4)
output = relay.Tuple([bop_2080,])
output2 = relay.Tuple([bop_2080,])
func_2089 = relay.Function([var_2078,var_2079,], output)
mod['func_2089'] = func_2089
mod = relay.transform.InferType()(mod)
mutated_mod['func_2089'] = func_2089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2089_call = mutated_mod.get_global_var('func_2089')
var_2091 = relay.var("var_2091", dtype = "bool", shape = (15, 10, 4))#candidate|2091|(15, 10, 4)|var|bool
var_2092 = relay.var("var_2092", dtype = "bool", shape = (15, 10, 4))#candidate|2092|(15, 10, 4)|var|bool
call_2090 = func_2089_call(var_2091,var_2092,)
output = call_2090
func_2093 = relay.Function([var_2091,var_2092,], output)
mutated_mod['func_2093'] = func_2093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1276_call = mod.get_global_var('func_1276')
func_1277_call = mutated_mod.get_global_var('func_1277')
call_2150 = func_1276_call()
call_2151 = func_1276_call()
output = relay.Tuple([call_2150,])
output2 = relay.Tuple([call_2151,])
func_2154 = relay.Function([], output)
mod['func_2154'] = func_2154
mod = relay.transform.InferType()(mod)
output = func_2154()
func_2155 = relay.Function([], output)
mutated_mod['func_2155'] = func_2155
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2160 = relay.var("var_2160", dtype = "float32", shape = (6, 14, 6))#candidate|2160|(6, 14, 6)|var|float32
uop_2161 = relay.cosh(var_2160.astype('float32')) # shape=(6, 14, 6)
func_1848_call = mod.get_global_var('func_1848')
func_1851_call = mutated_mod.get_global_var('func_1851')
var_2164 = relay.var("var_2164", dtype = "float32", shape = (20,))#candidate|2164|(20,)|var|float32
call_2163 = relay.TupleGetItem(func_1848_call(relay.reshape(var_2164.astype('float32'), [5, 1, 4])), 2)
call_2165 = relay.TupleGetItem(func_1851_call(relay.reshape(var_2164.astype('float32'), [5, 1, 4])), 2)
func_1513_call = mod.get_global_var('func_1513')
func_1516_call = mutated_mod.get_global_var('func_1516')
var_2176 = relay.var("var_2176", dtype = "float64", shape = (1584,))#candidate|2176|(1584,)|var|float64
call_2175 = relay.TupleGetItem(func_1513_call(relay.reshape(var_2176.astype('float64'), [1584,])), 2)
call_2177 = relay.TupleGetItem(func_1516_call(relay.reshape(var_2176.astype('float64'), [1584,])), 2)
func_751_call = mod.get_global_var('func_751')
func_756_call = mutated_mod.get_global_var('func_756')
var_2182 = relay.var("var_2182", dtype = "float32", shape = (72,))#candidate|2182|(72,)|var|float32
call_2181 = relay.TupleGetItem(func_751_call(relay.reshape(var_2182.astype('float32'), [6, 3, 4]), relay.reshape(call_2175.astype('float64'), [198,]), relay.reshape(var_2176.astype('float64'), [1584,]), ), 0)
call_2183 = relay.TupleGetItem(func_756_call(relay.reshape(var_2182.astype('float32'), [6, 3, 4]), relay.reshape(call_2175.astype('float64'), [198,]), relay.reshape(var_2176.astype('float64'), [1584,]), ), 0)
func_1203_call = mod.get_global_var('func_1203')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_2186 = func_1203_call()
call_2187 = func_1203_call()
func_1905_call = mod.get_global_var('func_1905')
func_1909_call = mutated_mod.get_global_var('func_1909')
const_2196 = relay.const([-7.293853,9.111025,-5.400266,7.099753,-1.907945,-6.501981,-0.754201,2.818469,9.459247,-6.636749,0.656613,0.557693,0.657948,4.232915,7.329015,3.187976,8.298847,2.835895,-0.306706,-1.041887,-7.966084,1.915180,-1.554860,-8.268954,-4.363325,-2.707720,3.842898,-7.276570,-9.753447,9.991485,-2.601523,2.577847,2.737160,0.747131,-6.363255,-5.861160,-4.270880,9.916425,6.962076,-8.885265,-1.711864,5.218948,0.698614,7.051970,8.789558,1.752041,8.317609,0.382600,7.667541,-3.271903,7.430873,-0.148405,-8.824491,-5.816513,9.829987,-3.442036,-7.632980,3.944105,5.054340,4.039271,-2.335953,-7.284872,2.419073,-5.917188,-9.265788,-0.941012,-2.143491,-5.774945,5.335611,-0.766215,6.300560,-6.539566,-4.526406,9.418896,-2.869098,-5.208407,7.078255,-7.721641,6.709416,-6.504127,-4.484864,9.698895,0.733948,7.820515,-8.391755,-5.698535,-1.073324,5.113318,-6.153243,5.287399,8.654313,4.665759,-4.944175,-4.171853,1.348079,-6.854553,0.474046,-7.229229,8.331432,1.524182,3.885717,0.476086,2.282487,-9.052065,-7.599537,-0.293271,4.822738,-2.084624,-9.004664,0.060666,8.339168,2.083185,3.240700,-2.970415,4.443523,1.107214,6.474189,3.036335,6.948302,-7.768622,0.665672,-9.274751,1.123683,-8.508751,8.852814,4.271170,5.477368,1.326651,-8.807471,7.012858,-7.358936,-8.415817,-4.574290,-7.002820,7.935991,6.329534,4.340511,2.607406,-8.005031,-7.774299,-2.600265,1.416385,-4.106419,-9.592378,-0.243910,9.502967,-6.307820,-8.947370,6.428596,9.303397,4.487746,4.139481,-0.333915,7.546780,-6.772646,-3.695700,6.640287,1.605680,-7.237027,-3.321851,6.697828,9.542576,8.310262,-3.345197,-9.963657,4.696808,-3.338942,7.716204,-5.288808,-3.598762,-7.346494,2.394180,-0.692041,-4.926431,-4.772780,5.079727,-2.751884,-5.267356,-9.639003,-4.943998,-8.477410,-8.131761,-7.104260,2.351738,2.143516,7.522137,-2.367840,8.637685,9.918652,0.635065,2.034611,-1.779633,-4.874384,1.469699,6.548542,4.046035,-5.694246,5.314946,7.913561,0.410314,-8.639985,1.117391,0.272479,5.222938,-1.328692,-7.727783,5.711731,1.919230,9.235948,-6.213443,-6.270370,-2.631734,6.152883,8.137145,-3.473950,2.844535,2.092538,2.700999,-8.260528,-0.738648,-8.351596,-6.492211,0.981628,2.677794,-1.046573,3.060973,4.753339,4.171986,1.329129,-5.742724,0.035267,-5.406212,-3.933002,9.390848,-1.736497,0.949073,6.818838,-8.299009,4.044800,7.066795,6.710879,-4.188599,3.199914,-7.063435,-6.419931,-8.968413,-0.251030,-0.960225,4.114046,1.864833,2.025992,-7.263649,-3.675511,8.149261,-2.816982,-4.941343,-6.414648,-8.187781,-4.609741,-7.709963,7.779453,1.580205,-0.308682,-7.654533,8.554697,7.139355,-0.281290,0.554515,5.506721,-8.256239,-5.670189,6.964265,0.520490,-2.343497,-7.945844,-3.069842,5.213122,-9.508562,-2.481907,7.159039,-2.986127,-5.700286,-1.676167,-4.958135,8.586861,2.451574,5.842486,-5.552685,9.715942,-7.794323,1.612294,6.077154,-5.193940,-6.048370,0.003735,8.325465,9.170628,-5.312136,5.838552,8.461605,-3.681810,-3.963333,5.937964,-1.768556,0.444526,6.871561,-9.807286,-5.252607,-5.874339,1.068007,-8.903663,8.950718,-3.119642,-2.331561,-2.049532,-7.918924,-2.376015,-8.908956,8.760884,-6.420534,-4.316901,-7.593081,5.452631,0.372056,5.669219,1.972361,6.810098,9.501535,-1.318367,-5.249527,9.039971,5.820406,1.516041,-0.846589,8.014028,-2.965793], dtype = "float32")#candidate|2196|(336,)|const|float32
call_2195 = relay.TupleGetItem(func_1905_call(relay.reshape(const_2196.astype('float32'), [2, 168]), relay.reshape(call_2181.astype('float64'), [1584,]), ), 2)
call_2197 = relay.TupleGetItem(func_1909_call(relay.reshape(const_2196.astype('float32'), [2, 168]), relay.reshape(call_2181.astype('float64'), [1584,]), ), 2)
output = relay.Tuple([uop_2161,call_2163,var_2164,call_2175,var_2176,call_2181,var_2182,call_2186,call_2195,const_2196,])
output2 = relay.Tuple([uop_2161,call_2165,var_2164,call_2177,var_2176,call_2183,var_2182,call_2187,call_2197,const_2196,])
func_2200 = relay.Function([var_2160,var_2164,var_2176,var_2182,], output)
mod['func_2200'] = func_2200
mod = relay.transform.InferType()(mod)
var_2201 = relay.var("var_2201", dtype = "float32", shape = (6, 14, 6))#candidate|2201|(6, 14, 6)|var|float32
var_2202 = relay.var("var_2202", dtype = "float32", shape = (20,))#candidate|2202|(20,)|var|float32
var_2203 = relay.var("var_2203", dtype = "float64", shape = (1584,))#candidate|2203|(1584,)|var|float64
var_2204 = relay.var("var_2204", dtype = "float32", shape = (72,))#candidate|2204|(72,)|var|float32
output = func_2200(var_2201,var_2202,var_2203,var_2204,)
func_2205 = relay.Function([var_2201,var_2202,var_2203,var_2204,], output)
mutated_mod['func_2205'] = func_2205
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2243 = relay.var("var_2243", dtype = "float32", shape = (7, 4, 13))#candidate|2243|(7, 4, 13)|var|float32
uop_2244 = relay.atan(var_2243.astype('float32')) # shape=(7, 4, 13)
output = uop_2244
output2 = uop_2244
func_2250 = relay.Function([var_2243,], output)
mod['func_2250'] = func_2250
mod = relay.transform.InferType()(mod)
mutated_mod['func_2250'] = func_2250
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2251 = relay.var("var_2251", dtype = "float32", shape = (7, 4, 13))#candidate|2251|(7, 4, 13)|var|float32
func_2250_call = mutated_mod.get_global_var('func_2250')
call_2252 = func_2250_call(var_2251)
output = call_2252
func_2253 = relay.Function([var_2251], output)
mutated_mod['func_2253'] = func_2253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1415_call = mod.get_global_var('func_1415')
func_1417_call = mutated_mod.get_global_var('func_1417')
call_2335 = func_1415_call()
call_2336 = func_1415_call()
output = call_2335
output2 = call_2336
func_2337 = relay.Function([], output)
mod['func_2337'] = func_2337
mod = relay.transform.InferType()(mod)
mutated_mod['func_2337'] = func_2337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2337_call = mutated_mod.get_global_var('func_2337')
call_2338 = func_2337_call()
output = call_2338
func_2339 = relay.Function([], output)
mutated_mod['func_2339'] = func_2339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1203_call = mod.get_global_var('func_1203')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_2362 = func_1203_call()
call_2363 = func_1203_call()
output = call_2362
output2 = call_2363
func_2375 = relay.Function([], output)
mod['func_2375'] = func_2375
mod = relay.transform.InferType()(mod)
output = func_2375()
func_2376 = relay.Function([], output)
mutated_mod['func_2376'] = func_2376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2375_call = mod.get_global_var('func_2375')
func_2376_call = mutated_mod.get_global_var('func_2376')
call_2426 = func_2375_call()
call_2427 = func_2375_call()
output = call_2426
output2 = call_2427
func_2451 = relay.Function([], output)
mod['func_2451'] = func_2451
mod = relay.transform.InferType()(mod)
output = func_2451()
func_2452 = relay.Function([], output)
mutated_mod['func_2452'] = func_2452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2375_call = mod.get_global_var('func_2375')
func_2376_call = mutated_mod.get_global_var('func_2376')
call_2471 = func_2375_call()
call_2472 = func_2375_call()
func_1375_call = mod.get_global_var('func_1375')
func_1379_call = mutated_mod.get_global_var('func_1379')
var_2477 = relay.var("var_2477", dtype = "int64", shape = (6, 42))#candidate|2477|(6, 42)|var|int64
call_2476 = relay.TupleGetItem(func_1375_call(relay.reshape(var_2477.astype('int64'), [9, 2, 14]), relay.reshape(var_2477.astype('int64'), [9, 2, 14]), ), 0)
call_2478 = relay.TupleGetItem(func_1379_call(relay.reshape(var_2477.astype('int64'), [9, 2, 14]), relay.reshape(var_2477.astype('int64'), [9, 2, 14]), ), 0)
func_2033_call = mod.get_global_var('func_2033')
func_2036_call = mutated_mod.get_global_var('func_2036')
var_2501 = relay.var("var_2501", dtype = "int16", shape = ())#candidate|2501|()|var|int16
const_2502 = relay.const([-10,8,-7,-8,-9,9,-8,1,2,-5,2,5,-2,-1,5,8,-8,-7,3,-9,-2,6,-7,-9,1,-7,-1,-8,-1,9,9,-1,-4,-10,-6,1,5,-8,-6,-1,-9,2,3,3,1,7,-1,-4,9,-6,-3,2,6,-2,7,1,-4,-7,3,8,-4,-3,-5,4,5,8,-6,-7,10,-5,5,-4,9,5,-3,-7,9,-4,8,-8,-7,-10,9,-5,7,6,6,-10,-1,-8,-9,3,-4,4,-6,-5,-1,6,-2,-6,1,-2,4,-3,-8,-1,-3,-7,-1,10,-3,10,10,1,7,3,-3,-8,-9,-4,-1,6,-9,-2,3,-8,5,-10,4,-8,-1,10,6,-1,-6,-1,-7,-10,7,-7,-3,9,-2,4,-10,-4,1,-7,1,-1,-10,-3,-9,-5,6,9,8,-7,4,-4,-4,-9,4,4,-3,-2,9,-2,-10,-5,1,-6,-9,-9,4,1,-4,5,-6,5,3,-2,3,-1,3,9,-9,4,8,2,9,-2,-6,2,5,9,5,10,-5,10,6,-1,2,2,-1,6,2,2,4,-7,-1,6,-6,-3,7,9,1,-10,-7,5,-1,-5,-8,10,-1,10,3,-8,-2,2,-4,-5,-10,8,-9,3,-7,-2,5,6,7,10,9,1,-10,-3,1,-9,-2,8,3,1,2,-2,3,7,-5,-2,-6,8,-5,10,6,8,-6,9,-2,7,4,-4,-9,-9,-7,-9,-3,7,-7,-7,-6,-2,3,-10,-4,10,-6,4,-5,-2,-3,5,9,7,1,-8,9,7,-1,-9,-6,2,-3,-9,-9,-3,3,10,2,-7,-1,9,-5,2,-7,-3,-7,-5,3,-3,7,7,-5,-2,-6,1,-4,-5,-9,8,-7,-9,8,-7,9,7,7,6,3,-9,6,8,2,-10,-2,9,9,-4,-3,2,-2,-8,3,10,-3,-8,-1,-1,-2,4,-9,-1,-10,-7,-7,-4,8,-7,5,10,8,-7,4,2,8,8,-8,6,-6,-10,2,2,-4,-2,6,-9,9,3,-5,-7,-10,10,6,3,-1,-4,7,-4,5,-1,7,5,-7,9,-3,7,-5,-1,-5,4,-9,8,2,-6,9,8,-7,-3,-3,-10,-1,10,-4,-7,-5,-6,9,10,-7,10,4,-1,3,7,6,-2,4,5,3,8,2,4,-9,5,-1,-1,3,5,-6,1,8,1,5,2,7,-8,4,-2,-6,-9,4,-9,-2,4,-7,-1,8,8,9,3,-10,7,-3,-8,-10,6,-7,-10,1,6,-10,-4,-1,4,-2,8,-8,-7,7,-1,-2,-10,6,-7,-5,7,-2,-4,5,4,6,3,-8,4,8,2,-4,9,2,9,7,-5,-10,1,-8,5,7,-8,10,10,-9,6,-5,-7,10,-6,-3,5,9,-9,5,1,-3,8,-2,1,-1,7,3,2,-10,-10,9,-8,-3,7,2,9,8,-1,6,-4,-9,2,4,5,4,9,-1,6,-4,4,-3,-3,2,3,-8,-6,7,10,6,7,1,5,-5,-7,-4,-6,8,9,-5,-8,7,-1,4,6,-7,9,-9,9,7,-2,1,-7,-1,-6,7,1,-10,10,2,-5,9,6,-10,3,-2,-8,4,9,2,-2,-3,-6,-5,-8,-2,-5,-7,-10,-5,6,-7,10,10,9,-9,2,5,-5,-2,-7,-8,-5,1,-3,8,4,4,1,7,5,-2,-6,-6,-7,-7,-5,7,9,-7,6,2,3,8,-9,3,-9,-2,1,-9,6,-7,9,3,3,10,3,3,-7,7,4,-9,-4,9,1,-6,-3,10,-8,-10,2,2,2,-1,-6,5,10,-4,-7,2,10,6,2,5,-10,-10,-5,-8,-8,5,9,4,4,-6,1,-10,7,-4,4,6,4,-6,8,5,-3,8,8,3,-9,6,8,-9,-4,3,-4,-3,7,-7,-5,1,-3,-2,-2,-5,-8,9,9,-1,2,-2,-3,5,6,6,-6,-1,-5,-10,-10,8,-7,3,4,8,6,-4,-7,-10,5,-4,3,10,8,5,-6,-5,-9,-9,-2,2,-7,10,9,6,-8,-5,-8,8,-2,8,-7,10,-3,10,-6,-5,9,8,7,-2,-8,5,9,-4,8,10,4,1,9,-3,4,-7,-5,-2,10,-5,-8,-4,4,9,-9,9,-9,3,2,2,-7,-10,5,-3,6,3,10,3,5,-8,-1,10,-7,-5,-2,-6,7,9,10,6,2,1,7,6,4,-6,10,4,-2,6,-5,1,2,3,-4,9,-8,-9,-2,7,-10,-2,3,-8,4,-7,8,-2,-1,-2,6,2,2,1,6,-2,2,-7,-10,8,-6,-3,-6,-5,-2,4,8,1,7,4,9,10,-1,-4,1,-7,8,3,6,1,-5,-3,-10,3,-6,3,-6,-7,-1,10,-3,-10,8,7,1,4,-2,9,3,1,2,7,8,-6,2,-2,-6,8,-4,-10,2,1,10,9,-5,-5,6,-6,3,-3,2,4,8,2,8,8,-5,-5,10,-10,-4,-5,-6,-5,5,-8,5,-4,5,-4,-9,10,-3,3,-8,-10,8,3,8,-5,-5,-1,4,-3,5,-9,-2,-10,-5,-8,-6,5,6,9,5,-7,6,3,5,-10,-5,-5,-9,10,10,7,6,9,4,-6,-2,1,2,10,10,-10,-9,10,1,-2,-7,6,-4,5,-3,-7,5,2,10,5,-10,-4,9,6,3,-1,-8,-6,-2,-10,-4,-9,-3,-6,-3,-4,7,5,-2,-8,-1,-7,-7,-3,4,3,10,-4,-5,9,-3,-4,-1,-6,9,9,-2,9,9,-8,5,8,-5,10,5,1,-2,-8,-3,-5,-8,-2,-3,10,3,3,-9,-3,7,8,3,-2,6,8,-4,-4,9,3,-9,4,-8,1,-1,-4,10,-10,3,7,-2,9,-10,-8,-8,-1,-3,10,3,1,-8,10,-8,10,-2,9,4,2,10,2,-3,7,-7,7,10,2,2,-5,-2,-2,-4,2,8,1,-4,-7,6,-2,5,-1,-7,3,4,-2,3,-5,-4,6,-1,-1,9,-3,-6,-6,-4,5,9,-5,-6,-3,10,5,-5,9,7,2,-1,-9,-9,7,-1,9,10,6,10,4,-9,7,9,9,-7,2,-7,-5,5,2,-4,-9,-2,2,-6,3,5,-9,-3,10,1,-7,4,-5,-4,6,-5,-6,-10,10,-3,1,-2,-2,-9,4,-6,-6,-3,-9,7,8,-10,10,1,8,-4,1,7,8,6,6,5,2,5,8,7,-4,8,-9,-6,4,5,-4,9,-10,8,-6,-10,-4,2,-8,7,7,8,6,-4,1,-6,-4,9,-9,-2,1,-7,-8,6,-9,-8,8,-4,-9,5,-2,7,5,1,-4,-10,4,9,-6,8,7,2,3,10,-8,1,7,5,-5,-7,-9,7,4,-5,-2,6,2,-3,-5,6,9,3,-7,-7,5,5,-10,-7,-8,-3,-9,10,-6,-6,-7,4,10,-9,8,-1,-9,-8,7,-3,10,-5,-6,10,-7,5,-9,-9,8,7,-5,2,-5,5,6,8,6,2,-10,6,-9,1,-1,8,-8,7,3,9,10,9,4,9,-1,-5,-5,8,1,-3,-10,4,-8,-5,-2,9,10,7,5,5,-9,7,-1,-10,-6,7,-6,8,-5,4,-7,9,-3,1,-4,-6,-7,9,-9,2,-3,-3,-1,-2,-4,-4,-1,6,1,4,6,-10,-4,-2,-9,-10,3,-1,4,3,-2,-9,-9,-7,-4,8,10,2,-9,6,-9,8,10,8,-5,-4,-7,-7,9,9,-4,1,6,-7,8,-1,-10,8,-2,-5,-7,-1,-3,-3,4,-4,-10,4,8,1,5,-10,-4,-4,-5,3,-10,-6,-5,-5,-2,1,6,8,-7,10,4,6,10,-6,2,7,-4,-7,4,1,-1,-6,6,-10,6,6,4,9,3,-9,5,-9,10,9,7,8,2,6,-1,-2,10,8,-1,8,-2,-1,4,7,5,8,8,2,3,10,6,-2,10,-10,6,-5,6,5,-5,4,10,3,-7,8,3,-3,-9,-9,4,2,-9,8,2,-3,-8,8,-8,-6,6,-4,-1,1,-5,-1,-10,-9,-1,-2,2,1,-2,-10,9,-5,9,5,-10,1,5,-4,-6,-1,2,9,1,-8,10,3,-1,6,2,9,8,-7,2,7,6,5,3,4,6,9,7,7,2,7,7,-6,-5,-9,6,-7,7,-10,5,-6,-7,9,9,-3,1,5,-7,-4,-5,1,2,4,9,-2,10,-7,5,1,10,-4,-4,-1,-1,-3,-2,8,4,3,-7,-8,-5,2,-1,-3,-6,3,6,-1,9,-5,-10,-4,6,8,4,-8,2,-8,-4,-3,-6,10,-10,-2,7,-1,2,-1,-5,-2,6,-8,2,1,-5,-8,-1,-4,1,10,-5,5,8,-4,7,-10,7,-3,-1,7,-1,8,5,-4,10,-4,-7,-10,7,6,3,-6,3,9,4,-4,1,8,6,2,-6,-10,-7,7,-8,7,8,-10,-3,-9,-5,3,-4,3,2,5,6,-2,6,9,10,-5,-9,3,4,-10,-6,-6,-5,10,6,5,1,-7,7,-2,1,-7,-2,4,-4,-6,9,-1,-5,-2,-6,-5,6,-5,7,10,-7,-10,-9,7,-1,4,-7,6,7,4,-7,-2,10,-6,7,5,-6,10,-9,1,-2,-2,1,2,8,-1,3,-9,-1,10,-4,-9,-7,-4,-10,6,9,2,10,9,-7,4,-4,-5,-10,4,-7,4,5,-2,-2,-6,8,4,1,-5,-2,2,-4,4,1,7,2,-4,9,2,6,-6,-8,-2,4,7,8,5,-6,5,-6,7,-6,-6,9,-10,-8,9,9,-4,1,-8,-3,-1,1,-8,10,4,8,-3,-10,2,-1,5,-2,-2,2,-4,-2,-6,2,-9,-3,10,-7,-10,8,-4,-5,-1,-7,2,3,-6,10,10,-10,-4,-6,-4,-9,-7,-8,-8,-9,2,1,7,7,-1,-7,-8,-9,-10,7,7,2,-5,-4,-5,-3,3,10,-8,-5,-5,7,1,-6,-3,9,-10,-4,1,-9,3,3,4,7,-2,10,-7,9,-4,-1,9,-7,-10,4,-8,-10,-5,-8,8,-2,8,-6,-8,4,-1,9,4,-8,6,8,7,5,-10,-2,8,9,-5,-2,-1,4,-1,3,-8,2,3,8,-5,-1,-7,3,6,-3,8,-5,-10,-10,-4,8,4,-6,9,8,-8,-1,3,-10,8,1,9,-3,-4,1,8,10,9,-2,1,-2,-8,-5,9,-9,9,10,-5,-8,-10,7,-8,3,-2,-6,2,3,3,2,-3,6,2,-1,-1,-5,6,10,-8,1,-7,-2,-9,10,3,1,-4,8,-4,-2,-6,7,-9,-7,-1,7,-7,8,6,-7,1,-2,6,-10,9,-7,-1,8,-5,-8,-3,-4,-8,8,10,2,3,8,-6,-2,-2,-1,-5,-4,-3,-7,-1,-1,-5,2,4,9,-10,7,-5,2,-7,-2,-1,3,1,4,-4,9,-6,9,5,-7,4,10,4,9,-4,-4,-7,10,-10,8,-1,-3,7,7,9,8,8,7,9,-3,-8,9,5,-3,-6,-9,9,-6,-6,-10,-4,2,-6,4,-6,-10,6,-8,-1,-6,-4,-5,-10,9,1,3,-10,9,-4,3,4,2,3,10,5,-10,-4,-9,-8,-8,-10,6,6,5,-2,9,10,-3,5,6,1,6,2,8,6,1,-9,-5,4,-6,-8,2,6,4,1,1,7,7,-3,-1,5,4,-9,-10,10,-1,10,-10,-1,10,-4,3,-8,-3,7,9,-6,-5,-5,9,-10,-8,6,-9,-4,-8,-7,2,-3,-6,8,4,10,2,4,-3,-4,5,8,-8,2,-1,-8,4,-7,-4,8,3,-7,3,6,8,-4,-9,-8,5,2,-8,-6,-4,5,-9,7,-10,7,-8,1,3,8,10,-1,-5,-10,5,-7,10,-8,6,-3,10,4,-10,-3,-2,7,8,-8,2,7,-3,-6,-8,-4,-10,3,-4,7,1,9,10,7,5,-10,-3,-2,-5,9,-5,-10,-9,-4,-9,1,8,3,-7,7,-6,-6,-5,-3,-1,4,9,-8,6,-3,2,2,3,9,6,1,4,-8,10,-1], dtype = "int16")#candidate|2502|(2304,)|const|int16
call_2500 = relay.TupleGetItem(func_2033_call(relay.reshape(var_2501.astype('int16'), []), relay.reshape(const_2502.astype('int16'), [16, 16, 9]), ), 0)
call_2503 = relay.TupleGetItem(func_2036_call(relay.reshape(var_2501.astype('int16'), []), relay.reshape(const_2502.astype('int16'), [16, 16, 9]), ), 0)
func_1727_call = mod.get_global_var('func_1727')
func_1728_call = mutated_mod.get_global_var('func_1728')
call_2505 = relay.TupleGetItem(func_1727_call(), 1)
call_2506 = relay.TupleGetItem(func_1728_call(), 1)
uop_2524 = relay.cos(call_2476.astype('float32')) # shape=(9, 2, 14)
uop_2526 = relay.cos(call_2478.astype('float32')) # shape=(9, 2, 14)
output = relay.Tuple([call_2471,var_2477,call_2500,var_2501,const_2502,call_2505,uop_2524,])
output2 = relay.Tuple([call_2472,var_2477,call_2503,var_2501,const_2502,call_2506,uop_2526,])
func_2527 = relay.Function([var_2477,var_2501,], output)
mod['func_2527'] = func_2527
mod = relay.transform.InferType()(mod)
var_2528 = relay.var("var_2528", dtype = "int64", shape = (6, 42))#candidate|2528|(6, 42)|var|int64
var_2529 = relay.var("var_2529", dtype = "int16", shape = ())#candidate|2529|()|var|int16
output = func_2527(var_2528,var_2529,)
func_2530 = relay.Function([var_2528,var_2529,], output)
mutated_mod['func_2530'] = func_2530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2337_call = mod.get_global_var('func_2337')
func_2339_call = mutated_mod.get_global_var('func_2339')
call_2555 = func_2337_call()
call_2556 = func_2337_call()
output = call_2555
output2 = call_2556
func_2557 = relay.Function([], output)
mod['func_2557'] = func_2557
mod = relay.transform.InferType()(mod)
mutated_mod['func_2557'] = func_2557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2557_call = mutated_mod.get_global_var('func_2557')
call_2558 = func_2557_call()
output = call_2558
func_2559 = relay.Function([], output)
mutated_mod['func_2559'] = func_2559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2375_call = mod.get_global_var('func_2375')
func_2376_call = mutated_mod.get_global_var('func_2376')
call_2582 = func_2375_call()
call_2583 = func_2375_call()
output = relay.Tuple([call_2582,])
output2 = relay.Tuple([call_2583,])
func_2593 = relay.Function([], output)
mod['func_2593'] = func_2593
mod = relay.transform.InferType()(mod)
mutated_mod['func_2593'] = func_2593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2593_call = mutated_mod.get_global_var('func_2593')
call_2594 = func_2593_call()
output = call_2594
func_2595 = relay.Function([], output)
mutated_mod['func_2595'] = func_2595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1331_call = mod.get_global_var('func_1331')
func_1332_call = mutated_mod.get_global_var('func_1332')
call_2634 = func_1331_call()
call_2635 = func_1331_call()
func_2527_call = mod.get_global_var('func_2527')
func_2530_call = mutated_mod.get_global_var('func_2530')
var_2637 = relay.var("var_2637", dtype = "int64", shape = (252,))#candidate|2637|(252,)|var|int64
var_2638 = relay.var("var_2638", dtype = "int16", shape = ())#candidate|2638|()|var|int16
call_2636 = relay.TupleGetItem(func_2527_call(relay.reshape(var_2637.astype('int64'), [6, 42]), relay.reshape(var_2638.astype('int16'), []), ), 2)
call_2639 = relay.TupleGetItem(func_2530_call(relay.reshape(var_2637.astype('int64'), [6, 42]), relay.reshape(var_2638.astype('int16'), []), ), 2)
var_2642 = relay.var("var_2642", dtype = "bool", shape = (5, 8, 4))#candidate|2642|(5, 8, 4)|var|bool
bop_2643 = relay.greater_equal(call_2634.astype('bool'), var_2642.astype('bool')) # shape=(5, 8, 4)
bop_2646 = relay.greater_equal(call_2635.astype('bool'), var_2642.astype('bool')) # shape=(5, 8, 4)
output = relay.Tuple([call_2636,var_2637,var_2638,bop_2643,])
output2 = relay.Tuple([call_2639,var_2637,var_2638,bop_2646,])
func_2647 = relay.Function([var_2637,var_2638,var_2642,], output)
mod['func_2647'] = func_2647
mod = relay.transform.InferType()(mod)
var_2648 = relay.var("var_2648", dtype = "int64", shape = (252,))#candidate|2648|(252,)|var|int64
var_2649 = relay.var("var_2649", dtype = "int16", shape = ())#candidate|2649|()|var|int16
var_2650 = relay.var("var_2650", dtype = "bool", shape = (5, 8, 4))#candidate|2650|(5, 8, 4)|var|bool
output = func_2647(var_2648,var_2649,var_2650,)
func_2651 = relay.Function([var_2648,var_2649,var_2650,], output)
mutated_mod['func_2651'] = func_2651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1203_call = mod.get_global_var('func_1203')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_2656 = func_1203_call()
call_2657 = func_1203_call()
func_999_call = mod.get_global_var('func_999')
func_1002_call = mutated_mod.get_global_var('func_1002')
var_2661 = relay.var("var_2661", dtype = "float64", shape = ())#candidate|2661|()|var|float64
const_2662 = relay.const([[-3.398812],[2.750765],[2.558877],[-6.327924],[9.713918],[5.882064],[-2.607579],[-3.856613],[-0.107748],[3.705990],[1.556197],[-6.790602],[-3.352940],[4.759234],[6.687810],[-8.568391],[3.017995],[0.003751],[0.019534],[9.197220],[-1.252499],[0.042552],[0.486329],[-7.587954],[-4.104314],[5.438814],[-0.201875],[4.454664],[1.383223],[9.976327],[-1.204282],[-6.769118],[2.645236],[-2.361688],[5.240374],[1.478014],[7.522495],[-8.294807],[0.664982],[-0.071020],[3.937447],[8.294498],[-1.488495],[-0.028935],[1.901814],[-8.305499],[4.977060],[9.953866],[-1.743038],[-0.741715],[-0.210729],[2.239505],[-0.098451],[-2.029580],[-7.785093],[5.360992],[-9.865392],[1.286202],[5.461407],[4.094729],[5.994973],[-3.606531],[-1.426557],[-5.832045],[6.304595],[7.047345],[-7.603459],[2.108983],[-3.173496],[-5.981814],[2.875785],[-9.698164],[-5.247271],[-1.426835],[8.819076],[7.251671],[1.197676],[-6.848433],[5.591783],[-0.020507],[8.900718],[-6.254106],[5.298880],[-9.676042],[-4.059017],[-3.426828],[-6.680192],[5.313774],[2.942641],[-0.187504],[9.009310],[9.537404],[7.433482],[9.832773],[-9.510757],[1.307627],[8.425638],[-7.545082],[-3.104210],[-3.151364],[1.202234],[-6.563742],[-5.056643],[3.528203],[7.404268],[-0.122734],[7.254500],[6.449576],[5.419001],[1.615587],[-5.094566],[7.719470],[7.450053],[-8.252983],[-0.266041],[-0.754505],[-6.342763],[5.107010],[-0.086642],[-1.276707],[-2.075629],[6.519556],[-0.592734],[-5.677055],[9.843627],[-8.422636],[8.355623],[0.260158],[0.028349],[-2.497152],[-3.418124],[3.823857],[6.457198],[1.137997],[2.764058],[5.489918],[2.539886],[3.901375],[6.003082],[9.835705],[-2.752993],[-6.715650],[-3.556314],[-1.790342],[-6.610161],[8.484703],[7.038429],[3.199175],[-9.982345],[-2.145918],[-6.228463],[6.964885],[-4.958047],[4.851433],[7.213393],[-0.015330],[-0.491616],[9.598984],[-2.047559],[-0.693372],[-4.465814],[-6.448817],[7.985106],[-5.257207],[-8.366531],[5.983569],[-6.980607],[-4.101775],[-4.850523],[-3.023758],[7.883427],[9.017603],[1.435620],[-2.190547],[-8.300124],[-2.114389],[-8.325332],[-6.665297],[-7.041797],[6.127268],[9.904530],[4.822860],[-8.060248],[9.342607],[-6.508020],[-8.755325],[-4.689749],[9.498446],[-2.167013],[-3.830857],[2.244424],[1.966326],[4.329181],[5.040928],[-0.250620],[-0.592672],[1.061236],[2.169946],[-7.351847],[-9.846604],[-5.514315],[-2.981009],[-6.154665],[-2.607295],[2.044558],[3.615472],[-8.181294],[-4.822303],[-7.164867],[3.596405],[9.533828],[9.478917],[-5.131483],[-5.290972],[6.083157],[5.456311],[4.432797],[-8.289616],[1.312179],[-5.073461],[2.408925],[1.579853],[-2.894073],[4.456739],[1.114434],[5.611367],[4.758840],[-3.052271],[6.756026],[-7.757610],[8.474014],[-6.214847],[5.043102],[6.477206],[8.055262],[3.918281],[4.662158],[-0.057844],[-9.192628],[1.182566],[9.192595],[-2.407136],[5.170292],[-7.262531],[1.158482],[0.774187],[-1.888348],[0.645106],[-8.670333],[-2.513473],[-7.568005],[1.072733],[1.248537],[7.854291],[4.583671],[9.618190],[8.907080],[8.078746],[-8.317536],[4.599849],[-4.864052],[2.183628],[-0.160662],[-4.165899],[0.463087],[0.816377],[-5.251710],[3.695520],[-2.118352],[-0.842631],[2.942993],[-9.264349],[1.168613],[1.640727],[0.822054],[-2.443969],[9.822010],[-1.439481],[-4.844618],[7.737383],[-8.812374],[-1.598251],[9.759752],[-0.777770],[-5.447367],[9.029379],[-2.916821],[2.846495],[-0.939281],[-1.392776],[4.168399],[6.070914],[-8.569666],[6.025049],[6.000055],[-8.521770],[3.455368],[-5.308197],[-4.280295],[-1.665558],[2.951501],[9.527990],[-6.329732],[-8.416041],[6.139777],[-9.534626],[0.779408],[-2.442368],[-1.941577],[-4.438817],[-7.316102],[6.020110],[5.410889],[-8.681229],[-9.978520],[7.860652],[-6.809831],[8.161362],[1.873194],[5.463014],[-9.554496],[0.801528],[-9.469912],[6.291584],[2.000315],[-8.390499],[-4.402598],[3.620033],[2.263663],[-0.316484],[8.604568],[-5.863232],[-4.247965],[-1.979857],[1.104337],[-5.940358],[7.363771],[0.475166],[7.262407],[-0.178977],[-7.979396],[-9.520021],[-5.380946],[5.663060],[0.298455],[7.849130],[1.188670],[1.490143],[-0.472171],[0.223737],[3.357931],[1.436236],[2.603185],[-0.813344],[-0.046433],[-2.591395],[7.942280],[8.757319],[-3.144594],[-3.940507],[-5.363033],[-9.821439],[3.926265],[0.049799],[4.377474],[5.748930],[9.256963],[-5.697599],[2.301523],[9.982817],[3.448369],[-3.397515],[0.510752],[8.088138],[-7.517754],[0.602940],[6.270973],[-4.603335],[9.405869],[-6.947045],[-0.913567],[-5.058625],[3.902043],[0.049922],[0.283230],[-3.477058],[-6.081467],[-1.443274],[-5.477698],[7.453441],[7.408353],[-8.387178],[6.090148],[1.968429],[-8.962808],[2.276185],[1.697522],[-2.658115],[-4.975867],[7.342871],[6.052013],[8.383997],[-4.066071],[3.497072],[5.218577],[-2.335498],[1.272883],[0.680279],[6.091511],[-2.945181],[4.438640],[8.394555],[6.121109],[2.894614],[0.442634],[1.240196],[-4.680019],[-6.923315],[-9.233484],[5.645459],[-4.792343],[-6.090538],[-6.116408],[-6.740528],[-1.375669],[-9.008347],[6.817814],[-9.125553],[8.985305],[-5.825455],[-5.555661],[8.933488],[-3.694665],[-2.060228],[7.058147],[-2.546787],[0.833789],[-2.474171],[2.391857],[4.414497],[6.712553],[4.427121],[0.293177],[2.987421],[1.981129],[2.547588],[6.995263],[-2.232746],[-0.646421],[2.772107],[-4.138778],[-9.946326],[-0.702829],[-2.868723],[3.670080],[-2.449423],[4.976736],[7.504138],[9.205858],[4.814124],[7.426302],[9.373581],[-8.736710],[-8.467453],[-8.287535],[-7.423898],[-9.047778],[-8.510180],[2.960844],[-4.351118],[-4.025360],[2.524584],[-6.151013],[2.040291],[2.671760],[-2.064731],[6.478624],[-8.649485],[5.001983],[5.994344],[-2.807823],[-4.737152],[-2.432778],[1.059405],[3.386343],[-5.061382],[-4.331039],[4.459975],[7.877280],[7.409693],[-4.834637],[6.871254],[2.136838],[8.229842],[-8.666501],[-0.909498],[-7.097408],[9.206890],[1.677785],[7.567183],[-4.710519],[-0.036037],[1.706135],[5.623913],[-0.584657],[-9.419618],[-1.526047],[5.653348],[0.243227],[-7.317004],[2.619276],[-4.449850],[-2.213654],[-8.323396],[-9.251144],[-6.870121],[7.444630],[-9.241334],[6.776691],[1.282562],[-1.518205],[-9.963648],[4.923865],[-5.449791],[-7.739858],[7.085776],[8.755552],[0.059480],[7.760688],[7.123414],[8.558886],[7.487342],[-5.781898],[-3.462008],[8.784281],[-7.326405],[2.642119],[2.627857],[-3.749847],[2.212387],[-5.324844],[-4.635573],[-7.494746],[0.611605],[3.570051],[8.154041],[5.800314],[7.142268],[-8.663459],[7.561073],[-7.759487],[0.697863],[-1.250760],[-1.016472],[-3.484357],[7.792571],[-4.882056],[-5.455357],[8.473560],[6.757886],[-6.590054],[-7.614651],[2.390384],[-2.741585],[2.542295],[7.466915],[1.092470],[6.699884],[0.595230],[-5.635522],[4.631166],[0.794809],[4.840020],[-0.209858],[3.845486],[2.573599],[-3.541391],[7.238212],[9.167449],[-0.712485],[2.882933],[-2.040395],[-2.050066],[-2.200321],[-2.570539],[-2.280064],[-2.322540],[8.270333],[0.413666],[2.999525],[2.883897],[0.098530],[-9.295611],[3.031836],[-6.573392],[-8.480962],[-6.882488],[-1.568266],[-4.166944],[-6.516896],[5.020086],[-5.091365],[-7.118893],[4.612984],[1.523376],[0.461213],[8.332351],[-1.386985],[6.800006],[3.287472],[7.847701],[-4.615100],[2.306584],[2.818965],[9.723995],[-2.283449],[-4.585134],[8.802844],[-4.942007],[-6.155094],[7.707727],[2.071785],[-0.671116],[-6.069223],[8.910037],[3.176994],[3.825933],[-8.472845],[-0.202504],[-9.181791],[-2.469829],[-8.501239],[9.976756],[1.177591],[-1.959845],[9.359265],[1.039200],[-8.330693],[-3.679462],[-9.067918],[3.379891],[8.003050],[1.452868],[3.538430],[8.274161],[8.678763],[-3.197012],[-9.819092],[8.509805],[7.304763],[9.550779],[5.079983],[2.654720],[7.900922],[-1.310801],[-1.611618],[1.408317],[-0.382247],[0.907702],[5.402778],[1.283307],[-1.681452],[-5.354274],[5.593083],[7.124557],[-7.889802],[0.543577],[2.581851],[4.641555],[6.476715],[-9.007114],[7.609998],[9.763469],[-4.076989],[8.181607],[7.106933],[0.897008],[-3.063906],[-7.127665],[4.769130],[4.811651],[-1.594040],[-8.635406],[1.065132],[-3.193680],[5.991258],[-9.539299],[8.309045],[1.806771],[7.099019],[2.199236],[6.230159],[-4.329787],[-4.161893],[-9.988001],[-8.819216],[5.328656],[-9.596216],[5.094715],[-3.731554],[-8.115620],[-3.452963],[-6.765711],[-1.160114],[-2.368984],[9.038451],[-8.403068],[-1.044741],[-2.172082],[8.672271],[-3.601938],[-6.730828],[8.044664],[3.976624],[4.372496],[-7.035485],[-5.870902],[-9.708931],[-8.555019],[-6.091781],[-4.429518],[-7.448801],[-0.524188],[-1.253132],[-1.005409],[3.480489],[2.794550],[-0.857012],[6.997292],[0.809037],[0.362379],[-8.841464],[7.533873],[9.495174],[-3.663687],[-5.217365],[4.076475],[4.196804],[6.429065],[-5.247178],[-4.627285],[-5.196469],[-9.851037],[-3.203705],[0.360995],[-4.627457],[2.461596],[-9.230578],[4.315874],[8.433916],[6.213232],[1.130302],[-7.995686],[-0.588741],[-9.884748],[3.068562],[4.942121],[-2.015687],[6.542994],[4.761737],[7.684004],[3.290781],[-4.389407],[2.267014],[4.954679],[1.394929],[-9.931935],[8.762156],[-9.897458],[-1.497422],[3.546559],[1.916916],[2.561390],[-1.249910],[-6.961256],[9.747805],[3.341523],[-1.017335],[-0.439397],[4.053975],[-5.449179],[-4.210135],[0.824651],[-7.505649],[-6.402833],[-0.199235],[-1.852928],[-2.480188],[-0.914461],[-4.776528],[-4.446045],[-1.658864],[4.872370],[5.386814],[-3.474376],[3.274392],[-1.709895],[9.618207],[-1.682148],[7.873419],[-8.687869],[-2.534639],[4.992431],[-5.974894],[2.843171],[-5.499710],[7.779585],[4.783396],[3.302721],[-2.089294],[8.108975],[1.352591],[-2.389988],[-3.299519],[-9.329599],[2.499266],[9.961850],[3.390234],[-4.223366],[-7.849167],[3.061439],[8.386371],[0.703913],[1.953225],[7.361908],[-2.826038],[2.528853],[-0.442644],[-4.889466],[-3.906280],[-8.528489],[7.030103],[4.647600],[-9.569439],[3.947853],[7.425142],[7.007984],[1.939335],[0.908813],[-3.185131],[-9.023557],[-6.301633],[-0.193235],[2.753285],[1.323577],[3.942735],[0.615206],[0.625586],[0.298832],[-8.457496],[5.867802],[9.447526],[-8.142205],[2.214234],[3.905548],[1.074226],[2.143019],[-8.316497],[-1.040761],[-6.085233],[7.018967],[-0.178836],[7.415825],[-2.832950],[3.778892],[2.579401],[-4.550565],[-8.154566],[4.925643],[8.579642],[0.147061],[-2.003715],[-1.419172],[-3.616846],[0.607796],[-4.256372],[-7.871176],[0.361876],[-2.551567],[-5.049493],[6.505323],[-8.343699],[0.140425],[-8.506595],[3.654746],[1.756199],[-0.826505],[7.649864],[-5.527062],[-1.815175],[-3.798678],[0.815893],[2.951882],[-1.112605],[-8.435211],[5.221121],[-9.468979],[3.342033],[-5.033987],[-1.028310],[3.504468],[-0.137151],[-8.350307],[-6.894400],[0.264671],[-9.610571],[6.772018],[-5.420831],[-0.357786],[2.528968],[-1.795705],[-8.164879],[-1.380389],[-8.897330],[-6.160219],[-6.465161],[-9.803250],[6.412741],[-9.141904],[-9.681419],[-3.250318],[-6.375741],[-2.552700],[-0.213020],[2.632086],[9.094172],[2.754143],[4.380880],[5.698183],[-8.191994],[-5.428734],[-2.652197],[-1.799678],[2.789795],[8.389952],[-8.635685],[-1.166733],[-7.676528],[-3.471856],[-0.850982],[-6.816600],[2.312057],[9.097218],[1.950271],[-4.594603],[-5.499280],[2.677063],[5.197566],[5.549643],[-2.748225],[-4.572102],[-3.452384],[0.657188],[1.514473],[-4.579164],[-3.452237],[0.278629],[-8.634587],[-2.314634],[-8.186276],[5.263307],[9.224860],[7.948681],[-7.689006],[-6.773195],[3.645033],[-9.408911],[8.392772],[-0.289006],[8.370975],[-5.011904],[7.276710],[3.323626],[0.039318],[-4.014241],[-0.642311],[-1.171221],[-7.839907],[-0.020593],[-6.022396],[2.946005],[-9.598043],[-2.414896],[-4.664473],[-8.020194],[9.541033],[7.077400],[0.282479],[-8.092894],[-7.607526],[-3.926254],[-8.402271],[-1.112371],[-2.373755],[-6.292172],[4.366097],[-7.702596],[8.483537],[-8.835184],[-3.670765],[1.563783],[4.762795],[-7.414863],[6.828577],[7.507404],[6.834445],[-5.304003],[5.174885],[-3.613186],[3.055972],[-0.806523],[2.198905],[-9.559677],[9.082256],[-5.746618],[-5.167445],[4.166227],[-7.697707],[-2.073536],[-3.136644],[6.459629],[7.649644],[-4.233728],[-7.470787],[-2.958148],[9.444739],[4.813687],[9.105601],[0.612571],[-4.495676],[-4.076981],[8.251155],[-4.866408],[-4.232686],[6.346956],[5.355506],[-6.202782],[-2.188422],[0.843853],[-7.070006],[-4.188445],[-1.540831],[-9.248487],[-1.953195],[4.337596],[7.971992],[1.995782],[2.760414],[-4.822275],[-6.780421],[0.180591],[-6.228047],[-0.387195],[-9.996384],[9.215678],[6.645658],[-5.827166],[3.891733],[5.044836],[-3.840929],[-7.690510],[1.623720],[-2.537024],[-3.493406],[-3.182320],[-1.569042],[-2.716307],[4.818025],[5.288526],[-4.276886],[-9.907251],[-9.423556],[0.993226],[2.803716],[5.037995],[8.962710],[1.451217],[2.713443],[-3.199287],[-7.730716]], dtype = "float64")#candidate|2662|(1080, 1)|const|float64
call_2660 = func_999_call(relay.reshape(var_2661.astype('float64'), []), relay.reshape(const_2662.astype('float64'), [10, 9, 12]), )
call_2663 = func_999_call(relay.reshape(var_2661.astype('float64'), []), relay.reshape(const_2662.astype('float64'), [10, 9, 12]), )
func_1035_call = mod.get_global_var('func_1035')
func_1038_call = mutated_mod.get_global_var('func_1038')
const_2667 = relay.const([4.885961,0.743759,9.271442,9.366746,-4.104166,6.246486,2.708869,0.523163,-0.494557,-0.984266,5.194962,8.075130,2.794393,2.937459,-5.422269,-5.341696,5.555599,-6.122327,2.076256,-3.599578,5.611049,-0.965893,7.142585,1.467262,2.226043,-5.409841,-6.547879,8.943591,-3.898890,-4.261072,-7.770013,-1.093066,-7.551930,-0.192261,-3.480003,8.032712,6.931301,8.370870,0.696066,-7.794609,-4.286301,-3.794519,-7.717750,-4.391388,-2.856246,3.955862,3.926326,-2.885259,-0.970846,0.546422,7.065426,-7.635100,7.725144,3.966885,-0.061004,6.122204,-1.290640,2.715026,-0.544718,5.099667,-9.256311,3.167447,7.483242,6.220566,5.240471,-4.196082,7.693824,1.996229,-9.619330,-2.290579,-7.467675,5.687625,2.156416,9.925666,7.298052,-4.250128,8.659028,0.041834,5.420404,-5.553285,-1.537016,-7.095588,7.682152,-8.239966,-9.852575,-3.338369,-2.264113,-8.153570,-9.490270,2.822879,-6.583183,1.612555,-3.635849,-1.119048,5.465478,-3.297274,-8.661981,1.320423,-2.154989,7.786873,-3.940104,7.844858,-6.130848,-3.069676,9.718410,-2.707402,7.950752,2.628355,-7.259449,-9.079136,-4.823316,3.675171,5.020560,-4.242088,-9.175175,-1.117009,8.740631,-2.114145,3.064094,-0.707117,-3.313722,6.479501,-5.960601,6.582240,-8.742251,-4.444556,-7.024920,3.415545,-9.232692,5.141858,-2.255119,-7.348053,1.920608,5.245610,2.113582,9.085048,-1.495840,-2.473569,7.617213,4.317167,0.345348,-0.686997,-9.668378,3.310823,1.331175,8.124105,-2.701184,9.983725,-1.385932,5.295889,-1.047538,-8.093987,8.378478,1.362484,-6.480380,-6.412179,-2.720742,-2.952630,2.417669,-4.462687,-6.236634,-9.315308,6.073942,2.350688,-2.997914,9.826951,2.480325,5.412110,-3.439036,-9.842985,9.779281,-4.737316,7.832378,-1.893629,-6.303692,-0.611363,6.398109,-4.023559,-6.060039,-1.113136,-0.879305,-0.427007,9.155411,-7.094104,-4.799062,7.139533,0.214075,-3.378552,-7.203854,6.745873,0.555694,6.666754,-1.814340,3.262400,3.080924,9.400310,1.738640,-5.404964,1.584037,4.420678,7.869035,-7.334119,-6.664698,6.422259,9.119825,-3.298626,-9.066389,2.750089,0.551829,-3.722964,1.181251,-4.238362,4.544975,3.814173,4.693633,-1.915533,4.005999,7.098985,3.165501,-6.677850,-2.793269,2.428526,7.079394,1.811691,4.327639,8.592219,-8.510090,-5.963373,-1.686739,-4.952176,-6.610928,-0.812392,6.580967,1.539664,9.355277,-9.347677,-0.144851,-1.073388,-5.369856,-1.301372,2.310064,-6.622428,4.833155,7.978097,7.247894,6.967196,7.463837,8.599912,-6.912695,1.795828,6.565828,0.694774,-4.511169,7.646595,7.023347,-0.482254,5.545047,-0.845629,3.603462,0.663474,-3.880981,-3.845495,-4.844649,-4.425883,1.773606,-5.420810,7.440262,-1.780012,-3.451097,8.713169,-9.060107,-4.760107,-6.830035,-3.854537,1.406734,-2.109168,4.120486,1.959486,5.483380,-1.654551,6.871876,3.501616,-6.657138,-6.499128,1.938529,-1.146941,-7.017049,8.338192,-3.024615,-3.607790,4.669916,8.047407,-8.613723,7.827165,-0.381429,-8.978622,-1.281858,5.868926,7.571362,9.814013,6.667875,-2.953752,7.603481,-0.956994,-1.729741,7.063089,-2.199003,-9.670376,8.610411,-7.221720,8.444456,2.661185,-7.806864,-6.288523,7.135973,-7.722807,4.322311,-5.285979,-7.836277,-4.034300,1.732462,4.517936,-4.060451,-6.145981,0.753513,-5.216961,9.978145,-7.144646,-2.399825,-2.594681,1.137416,-3.676416,6.650994,3.138861,0.560432,-3.318431], dtype = "float32")#candidate|2667|(336,)|const|float32
call_2666 = func_1035_call(relay.reshape(const_2667.astype('float32'), [14, 12, 2]))
call_2668 = func_1035_call(relay.reshape(const_2667.astype('float32'), [14, 12, 2]))
func_1077_call = mod.get_global_var('func_1077')
func_1082_call = mutated_mod.get_global_var('func_1082')
const_2688 = relay.const([-2.798590,-1.473463,-8.505747,-0.724208,-7.779821,-7.946834,2.893742,-6.848162,-6.904840,0.627980,-6.194582,5.608278,-3.115425,8.515920,-2.133127,3.122531,0.535691,5.518852,0.428594,5.156251,9.908348,-2.122492,7.346722,6.686496,0.343359,4.497627,1.634857,-6.061509,7.034630,7.159163,-1.026108,-0.964215,-0.912862,5.690972,1.335414,0.544207,6.781494,1.370582,-6.536909,-0.321337,8.484713,-9.897230,-6.576018,4.473056,-9.672753,5.300372,4.591467,-2.178684,-0.760851,1.837566,8.500192,-5.117327,-7.836045,0.915487,8.149148,7.495786,3.504843,3.452152,-8.209950,6.931689,7.959497,8.324025,-0.791180,7.933159,6.795706,-1.633505,0.969594,3.207771,2.592137,0.671590,7.561925,2.013876], dtype = "float32")#candidate|2688|(72,)|const|float32
var_2689 = relay.var("var_2689", dtype = "float64", shape = (3, 66))#candidate|2689|(3, 66)|var|float64
const_2690 = relay.const([6.790340,-2.357410,-9.809085,-2.351671,-8.655214,5.595770,9.236018,-2.625630,1.548026,2.287620,-9.228362,7.263347,-9.400738,-9.753026,-9.359969,-0.839408,6.396007,-6.211627,3.995941,8.834075,-1.181902,1.060064,9.645896,-9.893907,3.950906,3.063544,7.628633,0.567547,-9.271930,9.802392,2.633040,-9.599604,2.914481,-8.050125,6.236749,-1.102333,-8.034699,-4.337225,-1.838799,7.162343,-4.789143,9.875590,9.817357,-0.111168,0.929329,-5.818146,0.816461,1.228921,4.652178,8.628506,9.205610,9.879040,-5.660059,1.458579,-0.912075,-0.512379,-8.054012,9.608307,-7.306437,5.700383,3.001368,-7.232354,-1.273007,2.695262,6.416715,7.487108,4.675869,4.864331,-9.330517,-8.480986,5.393118,4.748376,-5.642985,3.105640,-3.959100,-8.541681,9.358094,7.760311,7.435459,2.111575,2.833087,6.272417,5.691597,-2.907176,-6.987674,8.408400,-3.758593,9.790017,3.277188,9.459813,5.466305,4.891042,5.051066,-8.102796,-1.081562,5.784882,-6.404886,-5.014124,2.333877,9.181412,0.698929,1.934288,-4.703550,-6.116104,-4.585538,2.603432,-9.482702,-7.482139,8.239269,-4.539313,-7.496872,-8.207258,-5.548917,6.430897,6.940662,8.415356,3.042827,-2.167978,8.515834,9.769440,8.752531,2.761710,9.326001,5.733525,7.469346,-9.526796,7.890016,-7.929761,7.593526,-5.138981,7.120816,1.061906,-1.454806,-3.234175,5.099371,2.960700,-1.108378,-1.309081,-9.084308,8.139579,6.982157,-7.999362,-8.707748,-9.544569,-9.228249,-8.146609,9.935855,-6.985255,-7.513030,2.228908,-3.177203,-5.752348,-4.300095,-3.847709,-6.236953,-5.250358,-6.367957,-3.690054,2.346128,-4.483577,7.191080,2.992082,2.241156,9.602449,-2.706260,2.771159,0.882918,-5.883913,-4.665365,6.787933,-0.107480,-5.077957,-2.759601,3.349718,4.430013,7.213528,-2.573736,2.824575,-5.609965,0.676895,-1.240992,4.428544,-4.867803,9.174004,-6.148743,7.572246,-8.175500,0.310393,8.438580,-4.059579,1.839905,9.444662,2.126904,9.969141,2.339438,-2.323455,1.901567,-8.474310,5.614693,-2.545889,-1.461391,-5.907516,0.441294,0.145352,-9.723555,6.702129,9.433686,-2.181882,-4.044141,-7.541361,-8.092269,1.293045,-4.771262,-9.525040,5.891669,6.998997,-6.347193,-8.127388,-0.935937,-3.608546,0.881206,-7.427860,8.003410,0.697246,-6.551201,8.436286,9.334988,-2.491168,-8.324660,6.916933,8.589262,9.075762,5.329955,0.838966,7.751111,-2.863966,2.471321,6.138271,3.567884,-8.017061,-6.221560,4.433857,-7.644657,6.799825,-8.501595,-5.703150,-1.677510,5.438675,9.832387,7.273147,0.574599,-4.965945,-0.564339,9.874490,-1.643704,6.420273,2.169760,-5.952147,-6.517916,1.891904,2.027949,-4.108031,7.401642,5.982086,-8.428546,-3.209196,-9.467264,-8.565541,-8.298104,8.554451,-1.764286,-4.778982,6.013913,5.570339,-4.460966,-1.150818,5.837262,8.744217,-5.800782,6.771939,5.894359,-3.771029,-2.852860,-4.038233,-1.199438,-4.563124,-9.986691,6.465044,0.972856,2.327063,4.754562,5.352526,-0.416452,5.926072,1.192837,7.260703,-6.571899,7.183790,5.849317,-1.191427,0.509990,-1.683396,2.113071,6.662029,-5.342911,-6.725624,-5.139769,-2.567638,6.872363,3.253219,0.643279,7.716454,0.493064,-6.137295,2.773074,-0.936044,7.989755,-5.839386,-9.331210,-1.788132,0.570448,-8.057444,-4.888279,-9.760130,5.040013,4.619865,1.982018,-4.698118,4.101143,1.414083,3.748007,9.833463,-9.000329,8.018151,3.323783,8.771708,7.075050,-8.890022,6.572657,4.335075,-7.984420,6.976053,0.071585,-5.478876,-8.742038,9.604250,-3.424512,2.419563,1.094529,0.634120,-3.002701,6.244951,1.871858,0.923145,-8.541426,7.908104,7.090966,-4.166843,-9.573231,0.280870,-2.664099,2.479631,4.146677,5.879907,4.718065,3.737086,-6.220354,0.453059,-5.501804,-7.112839,2.054825,-3.322161,-6.122357,-1.778853,3.421143,8.986492,-5.392349,-8.584911,1.966117,-9.796614,1.922212,-1.536499,-8.295418,0.515318,0.586332,-8.303213,0.342643,1.149268,7.460844,-4.945232,-9.797095,8.740509,-3.364361,-7.165900,3.742341,9.113896,0.995485,-6.152059,5.566042,-8.488793,6.783029,-4.994634,4.599384,-8.247762,3.283521,-4.231793,4.761008,-4.599602,4.228621,7.237950,-4.611259,8.131278,8.039157,5.293136,6.038009,0.384234,-1.291900,3.860672,8.972876,2.903815,8.128694,-5.168308,7.820124,-1.678236,-3.101012,2.112463,-7.506161,-9.612965,0.151710,6.684996,9.298826,2.181284,-7.816922,-1.330972,2.235318,-2.439059,9.556468,8.277852,2.539378,8.194657,2.547930,-1.811844,-4.935494,8.241813,1.503963,-8.263592,3.279911,-3.766329,1.886666,-4.803552,-2.971417,0.651449,1.322422,-6.760616,-8.978484,-6.919782,4.779364,-8.013809,7.211234,0.910836,-8.725522,-7.251165,9.266668,9.258432,3.961733,4.989879,-5.211216,3.570032,5.630129,-9.220813,8.812480,-0.181373,-7.210984,-8.946034,-8.790112,-9.778366,-2.954478,1.835953,7.783952,-3.500652,-6.767370,4.533039,-7.661340,-3.392657,-4.452858,9.901206,-2.589325,-9.413652,-2.050020,-1.354203,-8.722666,4.298399,4.926811,9.539337,9.524106,8.761960,2.353328,-1.174815,3.986578,-7.804947,-1.610040,-0.104933,2.791594,1.950176,7.215636,-3.673918,-3.490019,-4.070569,-9.284023,-6.809019,0.088508,1.340933,-7.598188,-6.615178,5.939924,-4.337201,9.862944,-7.785804,7.512457,-6.119104,5.724874,8.730090,4.675946,-4.156707,6.465819,2.237698,-1.454855,2.962550,4.318028,0.290680,-9.899347,-9.259806,-3.381463,-4.268908,-8.676278,-4.780086,-2.113849,0.830994,-1.905557,0.137695,-0.667780,-8.919257,-6.542670,-5.695980,-2.502682,-5.765961,8.057222,-1.361034,3.869228,9.774240,1.684445,6.875315,8.651725,6.409728,-0.979857,9.279379,-5.039588,-5.365334,-7.649628,-8.696149,-8.333763,5.337148,0.976105,1.950191,7.097392,-1.873676,-3.026044,-6.071258,-5.508441,9.612533,-0.436725,8.533792,8.330035,6.941588,-2.650932,-6.299714,-8.480532,-7.210281,1.290992,-7.909508,0.131148,6.842406,6.283857,4.064609,-8.304563,-1.045542,-8.190376,1.093613,4.507054,4.230044,-8.575505,-7.875265,9.603211,-0.814038,-7.169676,7.196274,2.219987,-6.753815,-6.848305,-4.392339,-5.151237,-0.224888,-0.231215,-4.552695,-6.017469,-3.715475,6.183055,-3.372713,5.880615,3.910567,6.505361,7.524898,-7.498518,2.903581,-4.768430,5.554095,6.842123,5.172467,2.252476,0.386347,2.452703,-5.013967,6.708683,9.737547,1.908050,-1.138987,-2.723060,6.142224,3.858009,2.546418,-0.527878,4.845374,-9.702710,6.132634,-8.783697,-5.676444,-5.019547,4.668209,7.843066,4.974401,7.516539,4.628908,6.263893,-9.083804,-8.759132,-5.904052,-6.975907,-7.458586,-1.879263,-0.776448,-7.882208,-8.678998,9.796921,-2.676720,0.846138,5.960010,-4.123913,-9.743110,4.689670,-0.357692,-2.753648,-3.529593,-0.650407,-1.114249,3.915028,-1.598535,9.940444,-3.062530,-4.168476,3.833871,-2.458933,-6.000639,0.900158,8.805806,-6.344279,-0.143926,-7.719600,4.348539,8.640663,-7.739578,1.024142,7.393614,2.812903,6.721749,-0.894373,6.674848,-0.884176,2.114778,-4.196239,-9.847685,5.813459,-4.841755,-6.398953,-3.709387,5.226616,-5.669434,9.157208,1.953136,7.233365,-8.294277,8.515038,2.769975,-3.297136,3.817294,9.485759,9.074217,4.207426,-8.829929,6.368446,0.903608,8.446376,6.446248,7.233191,-1.652374,-7.759832,4.773197,-3.218980,5.821792,7.936103,-0.979322,-4.628212,3.843840,1.288635,9.098807,4.886437,9.074989,-9.313100,9.619130,3.018001,8.194463,9.398106,7.751972,4.699077,-7.689027,9.520218,4.096326,-8.640676,8.058916,-6.683118,-2.369569,-0.700315,1.849892,8.430220,-5.533174,-7.943567,-3.049570,-7.655147,6.870857,-4.092179,8.167689,-0.511344,1.500568,6.867621,-6.008902,-2.667822,3.233098,-9.644900,6.836788,-5.738373,-7.950426,7.699280,-1.610539,-4.339127,5.126614,5.988099,8.454446,0.783111,-9.470509,0.977380,9.452833,7.422723,-3.526904,4.549381,7.614619,-8.855110,-3.472815,-8.025191,3.486113,-9.724622,1.093418,4.832989,-1.721850,-9.876117,-0.913108,9.745602,6.707486,-6.348924,3.082476,9.696462,2.482580,-5.239559,-2.151687,-1.486242,-5.657521,-4.497496,-5.999639,-6.298380,5.926546,0.950608,-7.277581,1.707437,-0.077775,-2.518716,1.942130,-8.542256,6.976411,-1.198595,-6.762551,7.260505,0.799013,-8.886322,-0.468878,-3.163373,0.916951,5.056906,3.695468,3.535222,-1.270824,3.845491,-8.314154,5.865235,-7.698393,7.197088,-5.288892,6.373934,-5.952023,-4.466806,-0.554139,-5.767780,-7.955127,-9.678353,-0.918943,1.234662,2.193704,-8.313327,5.233211,1.534537,1.964920,-4.475696,3.721977,-1.852842,9.363715,-5.211804,4.984954,-9.135730,-8.818062,2.333822,-9.237057,-4.735645,3.045524,4.728952,-3.414525,9.893232,4.092645,8.959803,6.737137,8.412466,-2.562948,9.874472,-0.170275,-2.335480,-7.056748,-1.965423,-6.306831,-1.958451,2.926013,-7.784029,-6.907400,-7.147665,2.612537,-1.315515,6.420025,-7.046735,-9.345769,1.847888,4.900457,1.328965,-8.948487,-7.324292,-2.544640,-2.903873,5.184718,0.646569,-1.810263,8.437895,-2.003914,4.059192,9.382317,7.269619,0.547387,9.981607,-5.375221,-9.956168,-6.073950,-3.589968,5.862061,-1.661223,0.838057,-1.330010,4.497225,-7.779112,5.887678,4.504067,0.515511,-3.927816,-4.703615,4.124751,5.035860,1.629110,-1.614870,-0.086063,-1.610800,-4.019504,6.079216,-7.149688,0.626218,-2.003586,-0.329852,4.305586,-9.661789,-9.452293,6.310932,-3.964244,7.392428,-8.184512,6.244565,1.422444,-9.353918,7.973561,-5.324010,-9.130029,-2.164185,-5.294593,4.108565,-0.109940,-4.607304,-5.726492,-5.101531,-7.929868,-1.278088,-6.400704,1.345434,1.928841,3.998299,4.138693,-3.875804,9.239780,-7.256215,6.717673,-6.061333,-2.193670,-9.847644,-4.771985,5.563253,-5.116768,-7.513333,5.357500,-9.545166,0.858197,6.953465,5.622761,-7.908109,2.533069,7.061813,-5.671728,-2.649596,-6.898078,4.512106,-7.617122,8.619823,-6.812301,1.224778,1.580475,1.505343,7.746429,-2.349721,-4.698072,-4.884314,0.372967,3.104181,8.217083,-9.052841,-2.138834,-3.722304,-5.856773,-9.257484,7.272518,-8.768479,9.229069,2.988983,9.415241,-8.073641,5.033191,2.762875,-8.681605,-3.102499,-3.607657,1.364851,8.239946,2.240574,1.194855,-7.111634,8.714089,2.604797,-5.348712,-9.148377,-8.892932,-3.456254,7.201816,2.412673,-3.340736,3.703283,-3.142018,7.302870,-3.076575,-1.713670,-8.315720,2.353732,3.099030,5.765240,8.026318,7.701205,-5.074947,1.804441,0.313531,2.362338,8.354264,1.696882,6.813152,5.010736,7.855824,1.216771,-9.622699,-9.785262,1.823536,-7.607452,3.068257,8.509317,7.542014,9.877944,9.932262,-3.070977,7.518659,-6.595103,-6.137593,-9.373732,2.876400,-9.899424,-5.562645,-5.715779,-0.195631,6.344402,-8.138424,3.793341,9.750705,6.009592,7.352954,7.035193,4.855550,9.533129,7.785019,1.617104,1.379574,1.657269,-5.689785,9.095774,-7.267312,-6.841659,2.280649,-1.400549,-6.043103,9.271464,6.649966,-9.016613,7.221153,-3.233570,-1.961293,6.437293,5.889325,9.187030,-1.805147,-0.097038,5.819377,-0.350314,-9.858865,-7.341882,-8.283592,-7.694455,-1.392858,-5.892020,-8.807233,6.458997,-4.016347,-5.649593,4.044293,-2.585366,1.944323,-2.695046,8.746492,6.564851,9.156198,2.314366,-1.342781,4.065861,-9.698790,-4.096269,-9.580848,8.376290,-2.158378,9.596843,-7.568534,-4.642416,-2.715799,-0.211062,4.561977,-2.090377,5.280526,-5.754814,3.682580,4.396248,8.637227,1.047708,1.380251,-4.380050,-1.533022,2.855132,0.959652,-7.852655,-0.843182,-6.419507,9.768341,-2.209920,-8.471693,-0.205366,-6.951972,9.024086,7.146141,5.145652,-8.577785,-0.040316,4.378303,7.408046,6.461865,9.002680,-4.925048,2.702519,-6.147526,9.020993,-3.765312,-9.584276,3.091011,-9.361831,-1.362355,8.991632,-5.711011,-8.675344,7.671293,-8.238107,7.289699,-8.550488,0.781818,3.417157,4.018899,-4.825999,-1.791902,-6.449954,3.756035,-1.269350,-1.889018,-2.240909,-8.901748,7.767292,-6.724187,-3.082354,1.674335,9.676411,4.802986,-8.290507,9.258742,-5.785151,4.483707,3.556175,-3.919562,9.214292,4.176663,8.808378,-8.864396,0.251102,-2.890686,-2.808843,-5.214938,8.117941,7.397284,-7.308999,-2.862551,-0.177618,2.651067,-0.684103,-6.554835,4.821944,2.854253,3.193588,7.523528,-9.153739,-4.620151,4.865121,3.481655,-1.947591,-9.902985,8.767584,-3.223736,-1.059845,-3.504811,0.504204,-2.304478,-3.272820,8.105941,5.143240,8.558103,-5.256836,4.814918,-6.030999,-7.071062,4.518073,-8.240535,-4.762536,-4.225452,-5.616286,8.522294,8.532714,-8.043087,-8.075636,1.246595,-7.941301,9.452739,4.105741,-8.317354,3.584320,-2.947229,4.584444,-0.570240,1.465492,3.149713,2.184670,8.465346,-8.707011,-1.398333,3.704989,7.421849,-1.752306,0.727593,5.509612,-7.871815,-4.990748,7.421014,5.302695,9.908467,-5.064380,-5.912339,-9.094146,1.630146,-1.434987,3.671540,6.284633,9.075285,9.339389,9.685008,3.814036,-8.032173,8.354115,1.074175,7.686122,3.229582,7.715417,4.297783,-7.877256,3.812486,-3.810083,-5.115355,4.648026,-2.211139,-7.490999,6.165519,2.495789,-0.215014,4.435180,4.255163,-4.593181,-8.701548,-6.022186,0.997397,-0.708003,1.098834,0.813258,4.969910,-5.035148,-7.711365,4.637096,-2.063335,5.192646,5.351099,-7.558268,6.477021,-5.004488,7.171943,3.045792,5.027293,2.566358,-4.358630,-3.399385,6.991414,0.006952,-4.489436,5.144315,6.121368,0.678399,6.497848,2.958157,-4.167718,-2.984058,6.102264,2.925532,-5.841622,3.227430,7.690076,-6.912178,-3.905897,-7.297912,-4.625434,3.104613,-8.224488,0.381322,2.391151,-3.107720,-5.912273,9.548586,-4.002349,-2.087372,2.520612,-4.331751,0.462544,9.867661,-7.906090,-3.998708,8.312930,7.656116,-1.876722,0.805098,2.496785,-4.247030,-1.774622,2.677638,-2.347058,2.293086,-6.711964,-9.325816,-0.942301,8.066614,-9.103677,-8.909731,-7.190111,6.074452,-3.743876,-2.038339,8.558452,3.320673,-0.572976,-7.166764,-2.177755,-8.596946,7.346758,-2.296307,-0.113387,8.911005,-9.750538,-1.221173,9.399558,3.912769,-7.367090,6.481387,-1.026446,9.039501,-8.013482,8.307675,-9.193799,6.879480,6.166674,0.655215,6.247149,-8.163389,-9.763141,-2.877357,-7.938910,3.726343,2.057809,-1.190099,9.124458,-0.006119,-8.026993,-8.056487,5.511320,-7.713870,-2.854156,-0.162868,-5.274108,4.559682,3.895561,-3.100977,6.331531,-9.093290,5.876410,2.557562,1.448447,-8.402406,2.026426,-3.804164,-9.247168,6.747382,-5.342710,-2.000593,-3.853988,-5.857264,-6.825658,-7.704683,-4.080263,-5.646480,8.429967,5.860877,-9.498054,-2.785587,-4.468857,-6.770011,-3.731894,2.715193,-0.049697,9.445439,1.542213,-0.969283,1.042162,-6.692330,-8.220100,3.055603,-8.299049,-0.872853,-4.801077,-3.562016,1.343572,0.283574,1.992473,-4.611825,-0.485218,-5.438363,8.700558,9.403830,4.072531,0.733094,9.085596,-4.518054,0.115032,-8.703251,8.007187,-4.865119,3.589319,-3.378778,5.540304,-8.753690,5.088634,5.510924,-4.428575,0.004216,-3.544526,4.151052,2.454293,4.175590,-2.422772,-3.801478,1.137316,-0.003934,-4.680978,6.089342,7.404887,3.431527,-7.265227,-0.873511,-3.729148,7.785256,-3.825922,-1.649358,-9.221933,-8.868433,2.754628,-8.886659,8.579797,9.456207,-0.034960,8.290273,4.077005,-1.230732,-6.573401,-8.637654,-2.771297,0.787238,-4.734448,-1.522577,-6.854275,6.037622,9.313417,-4.271092,-9.786983,-1.186734,-9.669816,-4.855868,-6.168841,5.553796,3.491102,3.061376,3.386138,-2.712549,-4.557758,-7.202733,7.996814,-1.829929,-7.472169,-6.817726,0.538381,3.686497,-3.706657,1.283409,-9.992449,7.868079,-1.894188,9.078883,-3.111239,2.208112,-6.032798,5.236718,8.638735,-9.490652,-4.135743,-4.655025,0.460677,2.688120,4.267196,-8.308031,8.274545,-8.258543,3.197411,-7.159157,7.850298,-1.429368,2.238702,-6.838559,-8.051796,-0.324822,5.840757,-9.897005,-4.858530,-2.052410,-0.751996,8.796894,3.424082,7.552039,0.855029,-3.702685,4.510288,-2.098282,-2.662706,9.335381,0.327150,1.679560,-8.687004,0.992315,3.060567,-0.046753,7.669015,5.038943,0.166173,0.253728,-4.463575,-3.159474,-2.337328,7.373297,7.350325,6.883316], dtype = "float64")#candidate|2690|(1584,)|const|float64
call_2687 = relay.TupleGetItem(func_1077_call(relay.reshape(const_2688.astype('float32'), [72,]), relay.reshape(var_2689.astype('float64'), [198,]), relay.reshape(const_2690.astype('float64'), [1584,]), ), 4)
call_2691 = relay.TupleGetItem(func_1082_call(relay.reshape(const_2688.astype('float32'), [72,]), relay.reshape(var_2689.astype('float64'), [198,]), relay.reshape(const_2690.astype('float64'), [1584,]), ), 4)
func_1905_call = mod.get_global_var('func_1905')
func_1909_call = mutated_mod.get_global_var('func_1909')
call_2699 = relay.TupleGetItem(func_1905_call(relay.reshape(call_2666.astype('float32'), [2, 168]), relay.reshape(const_2690.astype('float64'), [1584,]), ), 2)
call_2700 = relay.TupleGetItem(func_1909_call(relay.reshape(call_2666.astype('float32'), [2, 168]), relay.reshape(const_2690.astype('float64'), [1584,]), ), 2)
var_2702 = relay.var("var_2702", dtype = "float64", shape = (1, 2, 14))#candidate|2702|(1, 2, 14)|var|float64
bop_2703 = relay.floor_divide(var_2661.astype('float64'), var_2702.astype('float64')) # shape=(1, 2, 14)
output = relay.Tuple([call_2656,call_2660,const_2662,call_2666,const_2667,call_2687,const_2688,var_2689,const_2690,call_2699,bop_2703,])
output2 = relay.Tuple([call_2657,call_2663,const_2662,call_2668,const_2667,call_2691,const_2688,var_2689,const_2690,call_2700,bop_2703,])
func_2707 = relay.Function([var_2661,var_2689,var_2702,], output)
mod['func_2707'] = func_2707
mod = relay.transform.InferType()(mod)
mutated_mod['func_2707'] = func_2707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2707_call = mutated_mod.get_global_var('func_2707')
var_2709 = relay.var("var_2709", dtype = "float64", shape = ())#candidate|2709|()|var|float64
var_2710 = relay.var("var_2710", dtype = "float64", shape = (3, 66))#candidate|2710|(3, 66)|var|float64
var_2711 = relay.var("var_2711", dtype = "float64", shape = (1, 2, 14))#candidate|2711|(1, 2, 14)|var|float64
call_2708 = func_2707_call(var_2709,var_2710,var_2711,)
output = call_2708
func_2712 = relay.Function([var_2709,var_2710,var_2711,], output)
mutated_mod['func_2712'] = func_2712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2154_call = mod.get_global_var('func_2154')
func_2155_call = mutated_mod.get_global_var('func_2155')
call_2737 = relay.TupleGetItem(func_2154_call(), 0)
call_2738 = relay.TupleGetItem(func_2155_call(), 0)
func_1727_call = mod.get_global_var('func_1727')
func_1728_call = mutated_mod.get_global_var('func_1728')
call_2754 = relay.TupleGetItem(func_1727_call(), 0)
call_2755 = relay.TupleGetItem(func_1728_call(), 0)
func_2250_call = mod.get_global_var('func_2250')
func_2253_call = mutated_mod.get_global_var('func_2253')
const_2771 = relay.const([-9.296291,-8.661267,-7.396709,-3.763910,7.647986,2.298492,-0.342219,-6.332745,5.700020,-3.720947,1.562910,-2.278480,8.850581,-6.345945,1.371207,9.208373,3.318748,-5.285097,-5.745249,-0.799792,2.180670,1.865377,0.577639,-7.123731,-1.007316,6.472699,-6.835780,4.556273,-5.349149,-3.527160,2.440667,-1.828572,-2.933921,-8.812540,8.488516,-3.877036,-1.878161,-4.446026,6.411656,-0.352079,2.564633,2.227041,-9.170002,-4.621276,9.138914,-3.934918,-9.970269,3.733307,5.184127,6.029743,-9.998875,-0.989585,-9.220793,-5.861757,5.614148,4.136526,-5.041352,-7.892692,-4.642775,-3.888302,-6.408958,-5.436360,3.633531,2.816411,-3.580417,1.533737,-1.230506,5.229971,7.457597,-2.740448,9.953145,2.397366,-8.700554,-9.781975,-0.988683,-1.962506,1.542665,7.092945,-2.535105,9.931222,-6.077424,1.496659,-8.237605,4.950947,-1.482031,-5.946310,8.638911,-8.661935,-5.581552,-6.434259,1.906884,7.118626,-5.283978,5.217650,4.558326,8.697298,8.097083,-6.119260,3.015351,3.880582,5.706222,6.934920,-2.819063,-1.579650,-7.127684,2.290320,-4.274971,-5.685780,-1.012765,0.618235,4.327143,8.853140,-0.412648,-2.830251,0.888823,4.003964,-4.951938,6.352233,-1.757617,2.630296,6.430094,-9.616613,3.537476,-5.989530,-7.726915,4.749520,-1.635651,1.709163,-7.270027,-2.063330,1.663202,-8.256055,5.247703,-1.056988,1.107682,-1.591567,5.601821,-3.408961,-2.225604,-7.974593,4.902655,-8.668368,-9.001199,-1.977363,3.218588,-7.064493,-4.201169,-9.989615,-7.547698,-9.240097,-0.148569,-8.845146,2.085302,-1.195630,9.345856,3.040089,-3.198141,-0.723350,4.975207,1.839286,-7.069036,1.501968,-9.079175,-5.764079,2.274379,6.519715,3.406225,2.952133,-6.313477,-5.551730,-3.632998,-4.194795,6.057833,4.357534,3.114822,-5.505916,-2.452186,3.286839,6.762638,7.211761,-7.898411,0.560532,9.291008,-0.813034,-6.139290,9.014889,-8.142052,-7.290722,5.045117,-5.231247,-4.039689,-7.086471,2.691477,-1.886531,9.875586,2.369307,-3.842945,6.718381,8.319954,5.294026,6.097841,-8.743009,7.422180,3.119434,-9.303448,0.061973,-3.886546,5.004816,2.479414,7.952533,5.680599,-5.770191,5.304147,5.178830,-6.740088,-8.391232,-6.905401,6.471904,9.654979,-4.290369,4.488562,7.283443,0.577771,3.745594,-2.973962,4.076693,8.327298,2.436799,7.171535,5.204622,4.467498,5.125772,-0.549230,0.736972,-2.712693,1.201264,-7.238039,6.697513,7.196791,-0.618610,3.363416,2.504223,-6.359247,5.448702,-0.077629,7.129803,3.881396,3.231607,1.453208,2.199115,-5.387523,1.651816,1.960373,-4.955340,3.240379,-9.457158,-1.459297,5.088111,-4.393240,-3.489551,1.986932,7.874508,9.047609,-9.616849,3.493491,-7.690331,-6.271557,-7.997396,-5.888678,-0.040010,-3.101479,0.718739,2.123666,0.191653,0.894260,-8.676805,7.885903,1.072136,-4.139599,1.457874,-0.883938,9.821749,-6.963512,-8.661045,-3.454110,-7.384889,-9.329022,4.984522,0.714886,0.150614,-6.087442,3.051792,1.881274,-6.548177,5.500833,-1.760828,3.847754,-9.800542,4.367748,0.382120,-7.940357,-9.034908,7.768777,-3.685300,-6.415264,2.820742,1.157000,-4.823067,-9.283858,-2.549010,8.825795,8.563725,-5.619971,-8.688177,-0.469862,9.034164,0.743408,3.858749,9.521673,3.189617,-1.458806,-4.268055,-6.931574,-9.733849,-3.951901,-5.022194,4.325076,-9.295548,9.879540,-6.750443,-2.644141,-7.316299,5.567578,-6.648551,5.069246,8.573783,1.194335,9.583894,-3.871684,-3.877218,-6.599851,-8.793668,-4.652448,0.868511,6.723472,6.744255,1.682468,-7.094512,-5.155289,6.493777,-8.008533,0.183147,5.184243,6.083598,-3.033108,-1.614697,-9.579977,6.595270,5.314575,1.257123,-6.119357,9.062550,-4.122202,-4.812200], dtype = "float32")#candidate|2771|(364,)|const|float32
call_2770 = func_2250_call(relay.reshape(const_2771.astype('float32'), [7, 4, 13]))
call_2772 = func_2250_call(relay.reshape(const_2771.astype('float32'), [7, 4, 13]))
output = relay.Tuple([call_2737,call_2754,call_2770,const_2771,])
output2 = relay.Tuple([call_2738,call_2755,call_2772,const_2771,])
func_2777 = relay.Function([], output)
mod['func_2777'] = func_2777
mod = relay.transform.InferType()(mod)
output = func_2777()
func_2778 = relay.Function([], output)
mutated_mod['func_2778'] = func_2778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2557_call = mod.get_global_var('func_2557')
func_2559_call = mutated_mod.get_global_var('func_2559')
call_2824 = func_2557_call()
call_2825 = func_2557_call()
func_2375_call = mod.get_global_var('func_2375')
func_2376_call = mutated_mod.get_global_var('func_2376')
call_2836 = func_2375_call()
call_2837 = func_2375_call()
output = relay.Tuple([call_2824,call_2836,])
output2 = relay.Tuple([call_2825,call_2837,])
func_2841 = relay.Function([], output)
mod['func_2841'] = func_2841
mod = relay.transform.InferType()(mod)
output = func_2841()
func_2842 = relay.Function([], output)
mutated_mod['func_2842'] = func_2842
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2847 = relay.var("var_2847", dtype = "float32", shape = (7, 4, 9))#candidate|2847|(7, 4, 9)|var|float32
uop_2848 = relay.sigmoid(var_2847.astype('float32')) # shape=(7, 4, 9)
bop_2858 = relay.multiply(var_2847.astype('int16'), relay.reshape(uop_2848.astype('int16'), relay.shape_of(var_2847))) # shape=(7, 4, 9)
output = bop_2858
output2 = bop_2858
func_2879 = relay.Function([var_2847,], output)
mod['func_2879'] = func_2879
mod = relay.transform.InferType()(mod)
var_2880 = relay.var("var_2880", dtype = "float32", shape = (7, 4, 9))#candidate|2880|(7, 4, 9)|var|float32
output = func_2879(var_2880)
func_2881 = relay.Function([var_2880], output)
mutated_mod['func_2881'] = func_2881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2375_call = mod.get_global_var('func_2375')
func_2376_call = mutated_mod.get_global_var('func_2376')
call_2883 = func_2375_call()
call_2884 = func_2375_call()
output = relay.Tuple([call_2883,])
output2 = relay.Tuple([call_2884,])
func_2886 = relay.Function([], output)
mod['func_2886'] = func_2886
mod = relay.transform.InferType()(mod)
output = func_2886()
func_2887 = relay.Function([], output)
mutated_mod['func_2887'] = func_2887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1727_call = mod.get_global_var('func_1727')
func_1728_call = mutated_mod.get_global_var('func_1728')
call_2945 = relay.TupleGetItem(func_1727_call(), 0)
call_2946 = relay.TupleGetItem(func_1728_call(), 0)
func_1905_call = mod.get_global_var('func_1905')
func_1909_call = mutated_mod.get_global_var('func_1909')
const_2956 = relay.const([4.842893,6.827613,-9.225368,6.157043,-2.213459,-6.711292,8.510003,3.385673,-2.147695,6.979821,1.913421,2.252488,-0.627174,-3.918564,7.922845,5.953164,7.858810,-1.475054,4.001025,-6.963647,-8.994221,0.615346,-0.888534,6.691056,2.418266,-0.525994,-2.185540,5.777218,6.835467,-9.031167,7.946173,9.322323,3.591375,-8.995559,7.871285,-4.742157,9.473934,4.738185,-7.703432,-8.021776,-3.307999,-2.164079,8.139273,9.904517,3.175324,6.202051,4.267773,-1.737768,-1.251546,4.814911,9.079117,9.750879,-3.157934,-5.671034,7.208303,-3.086469,-4.704172,-5.326876,-2.184459,-7.253013,-0.342360,-6.518217,-2.631566,-2.491748,-6.386355,5.206227,4.837367,-2.886082,0.757675,-7.484838,-3.410609,-8.718895,-6.531534,-1.235871,-7.952825,-9.414382,-9.897556,4.708773,2.619213,-7.127489,2.328301,-1.685666,-9.999348,-0.451838,9.530367,2.646387,2.193281,-0.389855,-2.513203,-2.752267,8.881114,6.913567,-0.463580,5.532520,-3.594958,4.858883,5.315676,-5.856145,-9.882915,9.602765,-4.199020,1.357799,4.068967,5.619384,-8.876832,-1.566108,-7.950149,-8.428089,-2.138849,8.123710,5.335702,0.178309,-4.993943,-4.983621,-3.541452,-6.836946,-4.460421,2.525398,-2.942896,-0.310846,-5.201322,-0.822677,-1.081918,6.118186,-5.407079,-5.283307,9.292821,-9.579856,8.478474,5.489399,6.533581,-3.323163,4.004019,6.934274,-2.304940,6.166173,-5.743683,-1.029706,-3.565086,-8.661256,-4.151464,-9.750083,-6.128218,5.052697,6.856238,6.924804,-6.778817,7.100547,3.667220,1.231210,-0.967576,5.418026,0.032747,9.892365,5.506294,-9.342376,-4.584773,-6.174992,-2.205711,4.043119,-0.721444,-6.058657,-5.077636,-9.042977,-0.386586,-6.876888,-0.197452,9.026238,1.147884,2.555375,-9.638023,-8.752830,-5.998311,1.805782,-0.151076,8.176194,-0.855561,3.952505,0.530412,-2.418198,-5.083053,-6.789874,-8.614258,-0.854208,-6.794381,8.478964,1.777779,-8.780263,-5.107889,-8.009240,-9.656749,5.827578,2.175215,1.138657,-1.451276,-8.694494,-2.951032,-0.170968,7.050116,-1.849426,-8.031767,-7.986933,0.802634,-0.548353,0.597724,-7.825798,-1.528163,-8.856260,5.525355,-9.096731,3.250385,-8.467645,2.656912,4.111055,2.947511,-6.015477,7.679370,1.372797,0.402417,-3.462183,9.113301,-7.774900,-7.075351,4.759930,9.199217,5.564963,1.562219,-3.976480,-2.141905,5.625316,-6.150796,-9.832117,-9.078595,-1.033909,6.815644,-2.138155,-1.489744,-3.412182,7.523938,-9.085001,1.038206,-3.646879,1.137172,0.169728,-4.388977,3.343615,-0.727335,-2.509224,5.203768,7.419471,2.733245,6.213354,-6.597170,-6.828410,-4.798988,-9.156569,-3.959417,-8.205155,-4.622540,-8.332634,-2.529353,7.419159,1.651418,9.844124,-6.803969,7.547795,6.281055,6.296383,-3.503322,8.809604,-9.811825,-6.886308,-0.409697,-9.223838,-5.701315,8.511709,-5.356666,4.449025,-1.328711,3.961285,3.400532,-7.842196,3.100180,4.880953,0.779791,-4.678231,-5.307166,1.085886,4.910783,5.460478,-1.356252,-9.615279,5.586152,-0.449582,4.474208,0.225918,-6.428355,4.586387,6.275701,6.773185,9.228781,5.674698,-4.360251,4.284097,-5.832831,9.064528,0.764778,-0.533827,2.701196,4.127358,-2.352406,-2.834466,-2.928936,-5.507878,-3.060696,1.140702,-0.447685,7.792371,9.611066,-0.793246,-7.788510,-9.026047,-1.042250,-1.045472,8.692754,-4.658714,-1.496989,-8.798271,-0.550902,4.243512,-2.110591,-2.284888,6.373824,3.566051,-4.573558,-6.393718], dtype = "float32")#candidate|2956|(336,)|const|float32
const_2957 = relay.const([0.722640,7.787428,4.815071,-5.496891,-0.755732,-9.970592,-9.536808,0.126580,-5.276742,7.725778,-2.246488,-7.603069,-7.610314,5.033092,1.502073,8.285371,-2.326299,6.422745,-4.091210,-1.143735,-7.945407,5.936444,-1.600122,7.277211,7.342280,-3.817383,8.034400,-2.169770,9.504838,1.511575,-1.213490,-7.763951,-2.744234,-1.542006,9.433645,0.999030,-9.658331,-7.526056,-7.747090,6.825126,-9.658539,1.999971,8.133239,-2.862036,7.254718,0.840049,-9.474080,-2.896371,-3.832052,-0.176062,5.589596,5.506572,-6.103095,-6.311920,-8.808200,-6.803319,9.491162,-2.569138,-6.431806,-6.432785,8.809071,6.885729,6.583740,-1.735889,9.605051,7.610807,-4.427806,-4.004251,6.481834,0.891605,-9.032244,-9.174827,0.069988,-2.352364,8.780629,7.711009,4.288812,3.350817,4.911134,-4.286633,-9.083372,6.292450,-7.680934,8.488266,1.452080,4.562222,3.453150,4.720990,3.133905,-4.698772,-6.358883,6.389956,-1.821198,-7.292003,-6.818632,-2.879832,8.095597,1.420818,8.630180,2.651142,-0.172593,5.689595,-6.394728,-1.036951,-9.130953,2.055125,6.346265,-0.671225,9.500101,6.045013,0.802576,-9.197508,3.142147,5.017797,-4.356179,3.327648,9.267235,-5.801704,-8.638476,1.959960,5.616042,5.126968,9.015502,4.219002,3.957948,-2.554013,-0.480041,0.983639,7.855772,9.925830,4.783581,-6.116743,9.726802,-9.030256,4.102055,-1.882115,-2.592231,5.561299,-1.125879,-2.983716,0.804797,-0.975939,3.618670,-9.813890,-4.581800,4.415859,-5.000279,4.350480,-0.799529,6.571848,8.051273,4.379066,-3.581757,-5.404324,2.775897,-0.250418,4.653885,-9.546388,-4.850126,6.520011,-2.303387,-3.139632,-6.577401,-4.154514,7.655999,5.794104,-2.835128,0.465671,0.153203,9.283002,-1.889765,-1.270741,-2.995824,9.441054,0.171556,-2.153929,5.929412,-5.662020,-0.591098,-9.104549,2.610655,-3.428546,-6.565239,-6.828227,6.234632,-2.296395,2.427326,-4.953658,-5.361752,-9.094221,-4.543329,9.139912,7.031580,-8.801291,5.257029,5.308397,-7.485961,-7.935097,1.919813,-3.548390,-0.558534,4.273774,8.004612,4.130763,1.826374,6.307590,-1.885706,6.384692,7.732712,5.015909,-9.076785,3.710653,4.329199,-9.642357,-3.885197,3.713947,1.623374,-9.806182,-0.139856,-2.530012,8.510963,-7.677123,4.482423,2.247062,7.916054,6.745763,6.670313,-7.048784,-6.891230,-4.981656,3.357867,8.000466,-7.679708,-7.035963,5.548541,-3.653050,-6.135163,8.238744,-4.696437,-0.144867,4.262043,9.084481,-0.725213,0.250230,-4.032517,8.517505,-2.783789,3.734096,-6.915929,3.117515,-5.541187,-5.423569,-3.440422,-6.922530,-7.712930,-7.551620,-3.788865,4.636639,2.561008,4.231553,-6.474356,-9.202414,9.905400,4.944974,2.165778,-7.234808,-6.984773,-9.861460,-4.732683,3.432758,-7.516529,-8.552405,3.326819,6.059803,0.298142,0.424697,-1.153706,-9.963021,2.951595,8.879005,-0.436095,-2.507357,7.730151,-1.860001,-2.077434,-7.877310,7.285798,1.919903,-2.375481,-2.560573,-5.792458,6.465249,4.371909,-9.596486,3.174742,4.203537,9.725192,-2.519103,-9.176935,-9.326478,-0.973590,9.566964,-0.663023,3.978723,-6.257427,-0.384590,9.268056,3.740493,3.810693,3.605013,8.645053,-6.371746,-8.009356,2.572927,8.112215,9.727834,6.007681,-4.419703,-3.908649,-3.235263,5.586564,6.443203,1.372912,2.696548,-9.934584,8.259307,6.626581,5.763853,1.145710,-5.078772,-6.419374,-2.457959,8.062142,3.842034,-1.529416,-9.044223,-2.606861,-7.789764,-4.715653,-8.660967,-5.104525,-0.693917,-7.347484,-2.025207,0.284487,-2.909794,-6.691791,0.652017,8.261652,7.505471,-4.178874,6.876331,0.020042,-1.504884,9.108337,5.633157,1.803559,4.699428,3.468918,9.472235,7.166294,-6.765627,-9.305186,7.132097,1.837120,-2.197911,-6.757327,-2.802162,9.738693,4.151138,-4.572747,4.301570,-4.511570,4.283768,-0.581954,-4.301997,-4.584382,4.505949,-4.536565,8.757731,-1.684947,-2.205109,3.279578,-5.802496,3.704674,-4.266385,-6.327291,9.497785,-0.219950,-7.577272,2.268389,-1.842965,-6.671769,3.521224,-6.112432,-8.177412,-6.752702,0.181931,5.874370,-6.587100,0.003487,-7.901301,-2.549134,3.674879,-1.980844,1.139768,-0.810727,-1.597992,-2.838334,-6.885355,-1.651072,1.587007,0.442791,-0.272235,-8.163385,2.362030,9.470070,-6.137286,-7.435353,4.046361,4.697544,-6.934025,-3.293835,-5.512451,-7.922364,-0.144503,8.903010,2.874160,-9.675230,-0.541506,1.776941,1.839780,3.847312,-6.557681,3.655531,2.180648,6.759900,-2.184183,-6.074999,-9.413695,0.138755,7.223209,-1.670255,7.517080,-4.969377,5.278714,-5.141127,9.904563,-4.033581,8.255679,0.585677,2.092814,-7.650032,-2.637085,-8.320276,-7.869676,3.171053,4.607713,-4.722855,6.936751,-6.670718,-1.013971,1.772169,-2.744445,-4.677815,7.459283,-3.886436,-6.847532,-6.370170,7.491042,2.856703,8.383528,1.769955,-2.292092,5.521696,4.647535,-8.410159,-2.357919,7.239044,-1.413487,-7.639527,0.753786,-1.685601,-4.613914,-7.709270,8.152510,3.807105,5.337963,7.839917,-0.125433,7.785031,-6.974120,-0.272246,2.955566,-7.394764,1.848337,2.470957,4.684632,-8.355109,-2.759620,-3.480095,-5.065140,-5.848099,-4.635049,1.244379,9.234240,-5.009176,-7.524685,-0.158080,-3.733758,8.231260,-3.369541,-3.888959,-8.320966,8.938194,-5.297961,6.693736,7.293607,-4.232583,6.667237,-4.031888,-0.971325,6.551561,2.766623,-5.605651,-4.680330,2.865022,-4.644506,-9.338430,-8.658369,2.633670,5.602607,5.528860,0.704953,7.790787,6.131503,5.752730,-8.087765,0.263445,-3.996537,-1.516556,4.343533,0.347198,6.636598,3.690150,1.724028,-8.422847,9.755021,0.906980,6.811343,5.215455,0.829621,-6.426007,2.011422,3.574796,6.639913,-6.330013,-2.619899,-9.135638,-5.946620,7.419833,0.573527,-9.035575,-8.949951,6.225852,-2.346713,-0.157836,1.631804,-5.875577,-1.020326,-6.362857,0.274538,9.519485,6.716153,1.198310,5.285053,6.422798,2.816048,7.682492,-0.104974,8.831504,7.617877,-5.311733,1.322451,-9.072808,-7.227099,3.767856,8.978348,8.122565,2.917260,-0.997983,-9.352238,8.882021,-1.110699,5.804900,0.436056,4.711674,-0.638783,5.421439,-3.655463,-0.473002,-5.609015,-5.167193,-2.382653,-2.919379,4.738220,-5.799569,6.857530,8.999512,-2.050523,-9.118487,1.157992,-9.612059,3.801264,1.430667,3.741638,-8.232727,-5.462652,-6.222240,5.526124,-7.978019,9.712639,-6.749875,-0.282834,-9.640000,-1.003299,-2.950404,4.906909,0.825307,-8.839222,-5.610268,-5.743999,4.996989,-5.339163,7.601536,6.830293,-4.650727,-3.568376,6.242460,-4.931022,0.514879,-5.165630,-8.581466,9.327381,-0.621827,2.756892,9.726628,8.197756,-5.258601,-5.327858,3.885331,5.277493,3.193245,-2.195440,-8.474248,-9.928226,5.970780,8.930769,-6.329886,-4.266547,-3.126847,-3.689206,8.535454,-0.988572,8.563063,-6.998516,-0.884688,-0.958699,7.130421,-1.963488,2.891535,-3.608569,6.507907,-5.826940,-8.870218,-5.524598,-9.556567,-3.872264,4.511391,8.408494,-5.201533,8.512498,5.797747,-4.523759,2.545474,-2.423672,9.867374,0.467979,-0.756024,1.149408,-4.843849,3.717665,-7.953440,7.351436,3.166692,-6.194575,-6.805902,-9.860848,2.074170,-4.599077,-7.355814,1.762865,6.960144,-6.324368,-9.544756,-3.887939,-6.293151,-2.957319,-9.516722,-1.916511,-1.470063,4.422896,-1.464117,3.140412,-0.775143,-3.214889,-7.674956,-6.422200,9.173340,-3.358341,-9.206723,-5.551057,-8.585554,0.981753,-6.598183,-4.865767,-6.776864,8.390196,-2.476990,-0.378972,6.620184,9.113429,-7.544552,7.328858,-5.053428,-0.363403,8.666598,7.092808,0.619949,-4.133066,-1.513893,-6.378849,-5.969050,-9.586592,-4.312790,4.027335,1.384806,-3.748933,-3.096030,2.301117,0.280796,-2.018186,2.561586,-9.904715,-0.521907,-1.248560,-1.348293,-2.646430,5.661961,8.840245,3.541036,6.550491,2.670182,0.500188,0.643306,-1.612748,-1.725128,9.026479,1.024789,-3.679196,-2.626323,-2.930823,3.544103,9.377227,1.984900,4.893698,9.267815,-5.172249,-0.340763,0.988248,-1.050281,-8.550375,-1.936928,-1.130061,3.049150,3.114704,-9.785469,-5.439005,-7.746316,-2.938837,-4.379290,1.802806,-3.576892,-3.173208,6.695349,-5.933210,-8.478595,-8.876610,0.876142,-4.931433,6.198844,-1.140794,6.812804,2.916462,0.868174,-2.465952,1.250991,2.687070,7.814812,-7.647363,3.415459,-1.869615,3.211432,-6.988974,-3.571477,-1.897781,4.366784,3.704502,5.966960,-5.504170,-5.094549,1.685530,-1.120346,2.464682,-4.652653,-3.310256,-3.764419,8.356960,4.099600,-9.025846,-2.926441,4.107079,-5.463955,8.939470,-0.442288,-0.426456,-1.479701,-3.961892,-6.497620,-0.712130,-7.459505,6.189172,7.870024,-4.380636,-7.807614,-0.559612,5.316393,-5.210305,-9.497668,-0.326655,-1.353145,1.337013,-9.529552,1.654891,9.869895,7.211119,9.417903,4.896102,-3.177730,2.843208,-2.698934,5.613797,-3.680372,1.723671,4.012325,3.970540,-8.441666,-7.195663,-2.598771,-2.993537,6.008286,8.366459,-1.352812,-7.281648,4.471589,7.393342,9.755829,7.523081,2.008833,5.628693,-8.877384,-8.621979,5.654761,6.679199,-7.137536,-6.855801,-2.418062,-6.607324,-3.830489,1.813930,4.033046,7.711877,5.601524,-4.041435,-0.179156,-5.384744,-3.537696,5.820515,0.669178,4.789434,-6.141411,-5.657830,-0.896021,8.293182,6.375790,-3.984228,-1.387594,0.850947,-9.176626,-0.907435,3.888541,-1.062885,6.791621,-9.309965,-5.618749,-9.254133,0.005433,8.774091,-2.371350,-8.738399,2.179666,-2.649611,-7.111834,-2.106224,2.677456,3.350910,7.195009,-3.215079,-3.738378,3.833178,-0.467593,7.403813,-4.152433,6.370916,-2.461467,-2.878771,-7.515135,2.371299,5.446538,-8.697576,-2.073169,5.641866,7.071371,-5.241212,-8.821686,-8.540949,0.023248,-6.033988,4.545119,-4.464605,8.454523,8.780300,3.217545,2.050793,-1.620380,7.850051,8.302490,-7.511345,-5.191689,-0.471329,9.789858,-8.429088,4.822723,-9.654278,-8.506259,-1.783973,-3.587210,-6.510798,-4.211872,-1.064298,1.090268,0.617718,-0.978896,8.995450,-2.229623,-2.848990,-7.981718,-8.371410,9.913699,-0.832571,-3.789800,-0.504173,3.805221,-3.048834,-5.001876,-2.721331,1.887913,-2.731790,-3.674648,-5.400991,-7.073002,-4.539775,0.797328,-4.751943,0.214016,6.262834,4.380426,-3.913099,-1.350088,-9.747337,4.918462,-3.479448,-2.754067,5.384868,-7.254706,1.011071,-8.872373,3.462901,-5.812269,-4.616444,1.718481,3.316188,9.046039,2.483586,3.653589,-4.569185,-9.414008,7.838838,-0.357579,0.378655,-0.176740,7.869802,-0.576484,8.713862,-5.920871,2.261624,1.236303,-2.227079,-5.067922,-1.516811,2.800557,6.532208,5.276952,-0.065023,0.617685,-9.971533,-2.119518,-6.397005,-2.807346,7.737392,0.195457,-7.367317,-5.524293,-1.227801,-9.788370,-2.437228,9.020515,-8.173564,-1.984110,-2.645423,-3.017037,7.889636,-7.020873,-4.746472,5.010453,4.564354,-6.116541,2.609853,-2.751735,8.506564,-6.690128,-7.971773,8.481429,-4.201694,3.339512,9.655278,3.061674,-7.731132,-7.142486,2.536415,0.957272,0.192806,-9.053062,-2.142443,-1.506890,-5.704899,2.726971,-4.944491,0.404585,-5.600500,-4.994175,-4.988623,-6.162825,1.840761,6.741074,6.262326,-7.799903,-8.314289,8.245480,9.253735,4.998296,8.195711,4.032877,4.106536,-7.080049,7.367150,-3.056042,8.779966,8.060635,9.195634,0.214286,1.546898,1.880419,-2.981134,-9.522881,-4.658907,2.903270,-4.534924,-4.073981,0.891295,8.394792,1.487959,4.310665,-0.966013,4.874243,8.514398,-0.251232,-4.060997,0.680437,0.256119,0.078782,8.944380,1.586711,2.604359,2.833635,-0.174377,9.468035,-4.944374,-8.849089,1.826993,3.208322,-1.312934,5.966251,6.188675,-2.543384,-6.218589,3.976001,-1.029781,9.220169,-0.770915,9.699341,8.278062,-8.925778,0.154155,8.378324,-4.649430,1.170755,-5.626191,-7.039502,4.631577,-8.560346,-2.048205,3.247673,-6.259832,-0.231143,-5.151046,-4.010820,-5.402361,7.636752,7.155873,3.651376,1.925354,3.814186,8.782134,-4.471121,-7.268789,9.662391,-2.561060,8.333209,6.172171,8.872236,5.277726,-6.549035,-4.102281,8.299501,-6.431219,7.458919,-4.702317,8.296772,-2.861978,-7.376174,3.011664,8.101227,2.178579,-1.939281,-1.849777,-8.920585,3.464196,-8.524069,-0.441235,-1.968756,-0.525230,1.714822,-7.965303,-4.040214,-9.448782,9.137422,-9.642566,4.962639,5.394485,9.394320,0.820651,-2.809757,-5.659436,-7.384007,-2.556915,1.270444,-8.650575,3.543632,4.717798,-9.766834,3.188973,8.001382,-3.145051,1.889097,5.638658,-5.680273,-7.519403,7.101009,7.624135,4.448583,-6.619631,-3.850742,3.462155,2.219002,9.222914,-7.142870,0.923074,7.742202,-1.213148,-7.581790,7.412580,-5.395547,1.847444,-5.515315,9.178642,-8.558719,-8.548820,6.636456,8.179326,-3.617428,-4.294840,1.205857,8.235407,5.317385,1.796159,8.601122,-0.989632,-3.510047,0.610810,-3.997357,-9.621931,8.381100,0.222601,7.202535,0.415851,-7.248120,-8.559693,-6.763824,-3.975916,-7.253532,6.328605,-9.032258,2.888495,8.231098,6.751049,-7.500769,-6.494793,-2.681239,-2.058445,-4.728485,4.476530,2.101179,-3.653918,9.621954,0.348539,-9.196472,6.010264,8.787214,4.427649,-8.980922,-7.408268,3.659644,-1.095533,3.155610,6.354133,-7.082526,-8.999799,-5.844389,8.397527,1.394118,9.106748,2.100287,-2.951103,-3.692512,7.399766,-9.773206,9.852116,7.892276,7.506984,-4.829442,-5.598109,8.832136,-4.849844,-0.764140,-4.409211,-2.200497,3.251957,-1.725294,-5.005278,-7.630329,6.152391,-1.312169,-7.796133,-0.874797,-9.053652,-7.421530,-5.194061,9.226419,6.090914,-3.443752,6.020932,-1.802450,3.139323,-3.488648,7.770105,7.295782,1.793390,1.363707,7.358270,9.060115,-6.303694,0.442944,6.324729,4.409070,-5.608896,-3.389988,-7.795750,-6.741948,-9.720552,-6.660570,0.605062,-4.446595,2.562911,-6.862825,-9.586127,-5.991611,0.174459,8.067405,-1.600126,-7.658411,-6.792430,-5.294219,4.588508,-8.096685,0.044345,5.404615,0.658458,0.592947,8.096126,7.963321,4.536097,-4.896173,5.831686,9.447197,-9.990233,-0.586052,5.125146,1.566403,-9.789313,-8.252863,-8.422171,-3.557376,3.302941,-1.016568,-5.918433,-8.784963,3.039161,-0.208003,-8.994958,-4.606534,1.656013,-7.055940,2.505435,2.577808,2.324182,9.348823,2.742838,0.190982,0.963131,5.687241,-9.242654,0.315842,-2.510902,-3.983805,-1.016131,2.914512,-4.478498,-6.087321,-4.081102,0.985453,9.330047,4.739022,-8.025909,4.159684,3.219355,7.661521,3.327032,7.282134,4.658711,-8.939567,4.653218,9.369185,2.563613,7.161805,-8.948067,-4.730490,-3.258486,-0.443362,-5.707932,-2.722977,4.987918,4.219928,7.059396,-8.570144,6.393503,-3.472472,0.204245,-2.269638,3.394435,-4.587205,-3.326528,5.050607,-6.016423,6.989087,5.556319,-5.279443,-4.308755,8.023137,1.401225,-9.744257,2.033597,9.046462,-2.812334,8.766725,3.576329,6.440193,-4.330457,-2.998118,7.936655,-1.572143,-9.754196,3.795694,-3.478596,-8.695100,-7.078196,-0.934298,2.051787,-1.440196,8.312472,9.391590,1.585821,-8.530920,4.679354,3.629989,1.005694,9.992125,-5.601032,-8.005383,-5.788473,-2.263443,2.614221,-9.603539,-0.275320,-2.238669,-3.872048,4.293295,7.295187,-4.168920,-7.293360,1.009048,2.173852,7.620856,3.453839,-6.332247,-4.171901,-8.345413,-9.084247,-4.941645,-3.268479,-7.505531,-6.361918,-1.805721,-6.415620,-2.316127,-0.021307,-7.187535,3.439096,-8.423243,0.753721,-0.607557,7.944835,9.851596,6.931779,1.294938,-9.945462,-6.865423,0.810272,-0.192506,4.796231,-1.405670,-7.824026,5.199664,7.831038,-7.475481,3.193483,-1.867440,-4.570231,-9.786526,-1.267555,3.462317,1.610034,2.350277,-0.472850,-3.809386,4.825041,-2.265219,0.029289,4.708007,7.989034,5.893158,-0.237219,1.457712,1.727018,-1.663223,7.755668,6.280347,7.038309,3.088088,-2.618588,-1.780319,0.984919,-1.540915,-1.104192,5.871270,4.436410,-3.721709,-5.256003,-1.541169,0.849204,2.095645,-2.206135,-4.724316,-8.840460,-0.802709,1.033956,-5.146336,8.452526,-2.225396,-1.665063,1.891816,-6.474969,1.996224,6.987637,8.651771,-8.742461,-5.566554,7.983126,-1.439675,-1.352934,-7.624064,3.215723,-8.720204,4.761793,1.606697,-9.707564,-7.282779,-9.074294,-6.464008,0.340938,4.872448,-1.544713,9.289444,-7.040717], dtype = "float64")#candidate|2957|(1584,)|const|float64
call_2955 = relay.TupleGetItem(func_1905_call(relay.reshape(const_2956.astype('float32'), [2, 168]), relay.reshape(const_2957.astype('float64'), [1584,]), ), 0)
call_2958 = relay.TupleGetItem(func_1909_call(relay.reshape(const_2956.astype('float32'), [2, 168]), relay.reshape(const_2957.astype('float64'), [1584,]), ), 0)
func_1375_call = mod.get_global_var('func_1375')
func_1379_call = mutated_mod.get_global_var('func_1379')
var_2961 = relay.var("var_2961", dtype = "int64", shape = (252,))#candidate|2961|(252,)|var|int64
call_2960 = relay.TupleGetItem(func_1375_call(relay.reshape(var_2961.astype('int64'), [9, 2, 14]), relay.reshape(var_2961.astype('int64'), [9, 2, 14]), ), 0)
call_2962 = relay.TupleGetItem(func_1379_call(relay.reshape(var_2961.astype('int64'), [9, 2, 14]), relay.reshape(var_2961.astype('int64'), [9, 2, 14]), ), 0)
output = relay.Tuple([call_2945,call_2955,const_2956,const_2957,call_2960,var_2961,])
output2 = relay.Tuple([call_2946,call_2958,const_2956,const_2957,call_2962,var_2961,])
func_2964 = relay.Function([var_2961,], output)
mod['func_2964'] = func_2964
mod = relay.transform.InferType()(mod)
mutated_mod['func_2964'] = func_2964
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2965 = relay.var("var_2965", dtype = "int64", shape = (252,))#candidate|2965|(252,)|var|int64
func_2964_call = mutated_mod.get_global_var('func_2964')
call_2966 = func_2964_call(var_2965)
output = call_2966
func_2967 = relay.Function([var_2965], output)
mutated_mod['func_2967'] = func_2967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1276_call = mod.get_global_var('func_1276')
func_1277_call = mutated_mod.get_global_var('func_1277')
call_2988 = func_1276_call()
call_2989 = func_1276_call()
func_1415_call = mod.get_global_var('func_1415')
func_1417_call = mutated_mod.get_global_var('func_1417')
call_2999 = func_1415_call()
call_3000 = func_1415_call()
func_2033_call = mod.get_global_var('func_2033')
func_2036_call = mutated_mod.get_global_var('func_2036')
var_3006 = relay.var("var_3006", dtype = "int16", shape = ())#candidate|3006|()|var|int16
const_3007 = relay.const([4,4,10,6,-7,10,-10,-8,10,-9,5,-5,9,8,-10,-5,10,8,9,1,1,-3,-10,5,9,4,7,-2,7,2,-10,-10,4,-8,3,10,-3,-4,6,-4,-3,-2,8,-1,-5,-10,7,5,1,-8,-3,8,-1,-10,4,-3,-2,9,10,-5,-2,8,-7,3,-6,-2,-9,-6,5,-9,-8,5,-9,2,-4,-2,1,6,-5,-6,9,-10,2,-9,10,5,-2,9,-9,-3,-7,-1,-7,8,7,-2,4,5,8,3,3,7,2,-1,9,4,-8,-6,-2,-8,-10,5,2,10,-5,-9,4,-6,-4,-9,-10,10,-8,5,-3,-8,3,7,-5,-7,-1,-1,-2,5,-5,-10,-5,-4,-1,4,-4,-4,-8,-4,9,5,8,7,4,-10,4,3,2,-6,-8,6,-5,-9,-1,-7,-4,10,-10,-6,1,-3,-5,8,-6,2,-5,8,-9,2,-1,2,-3,9,-3,8,-10,1,-9,-5,-3,3,-5,7,-9,8,10,-5,-2,8,1,9,9,9,9,7,2,8,-2,-3,-6,8,1,-10,-10,-8,8,-4,-7,7,6,-8,5,-6,-2,5,-10,-3,8,3,6,1,-1,9,6,6,3,10,9,-4,-5,-9,3,7,7,-1,3,5,5,-6,3,4,-7,3,-2,-6,-7,3,9,3,-2,-1,6,-3,-3,3,10,-1,4,2,2,-5,5,2,10,1,2,8,-9,9,9,-5,1,-5,-1,-1,7,3,3,-7,1,-4,-2,-10,-5,-1,3,3,-4,-9,7,8,-3,7,8,-1,-4,1,9,-4,-4,-7,3,-3,10,1,-1,1,-4,1,4,9,9,5,5,2,-6,-8,-1,-5,-2,-6,9,-6,8,3,1,4,-5,-6,8,-10,9,5,-1,-8,-9,4,4,1,1,-5,-5,10,8,10,6,-10,10,-2,6,-3,-4,4,-9,9,-6,-10,-5,-1,-8,9,-3,-8,4,5,2,6,-5,4,-3,3,9,-2,-6,7,6,-10,5,-3,2,1,-3,9,-9,-1,-8,-6,8,1,-1,-1,-4,-7,3,-10,-5,6,-9,-6,-8,5,-1,-4,6,-6,6,5,8,-1,-1,5,-1,8,6,10,-10,1,-3,2,-2,8,6,8,-7,-7,7,8,3,-9,1,4,-4,5,-1,9,-7,-9,-4,9,5,2,7,3,-8,-8,2,10,-6,5,4,-9,5,-6,-7,10,10,-8,-6,7,-3,-2,-7,-3,9,-10,-4,-6,9,7,6,1,-1,-2,-10,-10,-4,-8,-7,3,8,1,-2,-2,10,10,7,1,-2,7,-4,7,-9,8,-7,-4,-2,-9,-3,-7,10,-8,-9,-5,3,-5,8,6,6,-7,-3,-7,7,1,-5,-2,6,-2,-2,7,10,4,-1,-7,-2,-9,-5,-10,-2,-4,-9,-2,8,-1,-4,8,2,3,-2,-2,7,9,-8,6,-10,-7,-7,-6,-4,7,-7,1,5,-3,-4,-1,-6,3,-1,-4,-9,2,1,-1,4,2,-1,1,6,-4,8,-3,10,-8,7,4,2,-10,-3,-7,-8,-8,-3,8,-2,-2,-2,5,-3,2,5,-5,-1,8,-7,1,-4,-8,-8,8,1,-2,-7,4,2,-1,2,-1,-1,9,6,5,8,6,-8,-8,6,-1,-9,-2,-2,7,9,9,9,-7,-7,-4,4,1,-6,-2,-8,-3,9,-1,10,-7,8,-6,5,3,-6,4,-8,-1,-1,7,7,10,7,8,-1,-4,-2,-7,6,6,-8,-1,5,-3,6,-10,9,-10,3,-4,3,-3,-10,2,2,-9,8,9,3,-2,1,1,-1,-6,9,7,8,8,10,-8,-8,3,7,9,-3,9,2,1,3,6,-7,-5,-4,-5,-3,-7,7,6,3,4,-8,-9,2,-2,9,-8,-2,1,6,-2,-6,1,-10,-9,-4,-8,-5,3,-9,4,-4,2,5,-3,9,1,4,-1,1,-7,3,9,2,-7,6,9,-4,-5,-6,10,-4,1,5,2,1,4,5,-2,-5,10,-2,3,-1,3,-9,-5,5,8,-9,7,10,-4,5,3,-6,-3,-3,-2,-5,4,-7,-4,4,-2,4,2,1,10,1,5,-6,4,5,4,1,3,-6,2,-2,-2,6,-2,-10,-2,-4,8,7,9,-8,-1,10,10,-2,-7,-7,-1,-5,-9,-3,-5,9,-7,5,-8,9,-5,5,7,6,-4,-7,7,7,-8,-6,-9,6,1,2,-6,1,3,7,-5,-6,-7,1,-6,9,-1,6,-9,-6,6,10,-10,-5,6,5,-4,-10,5,-4,-2,-2,7,-2,2,5,-7,-2,-5,-2,-9,-4,-7,2,8,10,9,2,1,10,-2,-3,-1,8,4,-1,-6,-3,-1,-2,5,8,5,9,4,1,-8,6,1,-7,5,-7,-5,3,-9,5,-8,-7,-1,-1,8,4,10,5,-6,-8,2,-2,-8,-3,10,3,10,-3,8,9,-7,2,-3,-1,-1,7,-4,2,-4,3,4,-1,7,9,-7,-3,-9,4,-6,-10,3,2,-8,3,1,3,-3,-4,-8,8,-9,-10,8,10,-10,-10,-8,2,9,8,-3,-9,-5,7,-6,-9,-7,-3,4,8,-6,8,-3,1,-6,-3,-10,-5,7,-8,-8,8,-5,-10,-6,2,-7,5,-1,-3,3,-7,-10,8,6,-10,3,10,7,-7,-8,-5,1,6,-6,10,7,-2,2,4,-8,-4,10,-6,-6,2,-4,-1,-8,-7,-8,-4,4,9,10,4,8,6,4,7,-7,-3,7,-7,1,-9,-1,-3,1,-3,-7,-8,6,3,7,7,-10,-6,4,-1,-7,5,3,5,10,-6,4,4,-7,-8,-8,8,-7,4,-10,-8,5,-5,3,-4,-5,-2,4,6,2,8,1,9,-2,1,7,-9,5,3,-1,3,-9,4,10,7,-6,-3,2,-4,4,-6,-5,7,6,-9,9,2,8,5,8,1,8,-10,5,-5,-1,4,-6,7,-1,9,-10,-9,-1,-6,8,-2,1,-5,7,-9,-10,6,2,-8,-10,4,-1,6,-7,10,10,-2,-3,-1,-8,1,-1,-4,8,5,-10,-8,2,-3,-8,6,5,1,6,10,-2,2,8,6,9,-8,2,9,1,5,-5,1,1,-7,6,3,-10,9,2,-8,9,-9,1,5,10,-5,-4,-6,-8,4,-2,-10,-3,-2,6,-5,5,4,-1,-10,-10,5,-1,1,-4,1,-3,10,-2,10,-4,1,-6,-5,-7,-8,-10,-2,-6,10,7,7,4,5,-10,4,-1,-3,-3,6,3,-6,8,6,1,3,-7,10,-8,7,-2,-3,-9,10,5,1,-9,-3,-5,1,4,7,-4,3,4,1,-5,8,1,6,-5,5,4,-3,8,-8,-7,6,-10,5,-2,-9,-3,1,-9,1,3,-10,-8,7,-4,-10,10,2,6,-3,6,-3,2,-4,-2,5,-2,4,7,-6,6,1,4,7,3,-6,3,7,-5,4,-5,-3,-5,7,-8,-2,10,2,9,4,9,-2,-3,-8,9,8,-3,10,-7,8,1,4,5,7,-5,-7,-1,9,-7,2,8,-1,10,9,-2,7,-6,5,6,7,-3,8,-3,-7,1,-8,1,10,-5,-3,7,-8,-8,6,5,5,-6,-3,7,9,3,-9,-9,8,-9,8,-8,8,-1,9,-6,5,7,-10,10,-4,-9,7,-3,9,-3,-9,7,-6,2,8,10,-1,-3,-3,2,-4,-2,8,-6,-9,-6,-2,6,3,5,-7,5,2,-10,-1,-2,-3,5,-2,-10,10,9,-1,1,-4,-5,9,-8,-8,-8,1,3,6,7,9,-9,3,2,-7,-10,-7,-10,3,-1,-6,-9,1,-1,9,7,5,-10,7,4,5,3,-7,2,10,-4,-4,-3,4,-4,-2,-3,-6,-5,3,7,3,3,2,3,-9,-10,9,-8,7,-6,-2,8,-9,2,-4,1,-8,9,-10,-2,9,-1,-7,-9,-10,5,-1,-3,6,2,4,-7,-10,2,9,6,-8,-6,6,9,-10,2,-9,-4,10,-5,1,-7,-10,-10,3,-9,-3,-5,-10,-6,1,4,3,-7,3,-7,5,7,1,6,-3,4,-10,6,-3,2,2,-6,-5,-8,-4,-5,9,6,-9,-3,-9,-10,-3,-1,-3,-2,1,2,2,4,-6,-7,-1,4,-7,-4,-1,-7,5,3,-3,6,5,-1,9,3,6,-2,-6,9,-3,-2,-1,1,7,7,8,-5,1,-10,-3,8,6,6,-8,5,-2,-8,-6,-1,2,2,-1,-3,-4,5,-7,-7,-4,-4,2,4,6,8,-10,4,9,9,6,-4,-6,-10,-3,5,1,-10,9,-8,-7,-7,-7,8,-1,-6,1,-7,-9,10,-3,-9,-6,-9,4,-2,-4,-7,-1,5,-4,-9,2,-3,-3,5,10,2,3,-3,-9,-10,-5,1,4,10,-10,-2,-4,-5,8,3,-4,-5,6,-5,-4,-7,-4,5,-6,-5,-1,-1,3,-2,-8,10,9,2,-7,2,4,8,-8,5,7,2,-8,-5,-3,-2,1,6,1,-7,4,8,7,-7,1,10,-3,-6,-9,2,7,4,7,-7,-7,5,-4,-1,-10,-7,-10,9,-3,-6,7,6,-1,-1,10,5,2,9,6,8,-8,-9,4,-4,6,-9,8,-6,-6,5,4,-1,3,-4,-2,7,7,-10,7,-8,-6,5,-2,2,7,-4,-1,-9,7,-5,6,-10,-1,6,8,10,-2,-9,5,2,1,5,1,8,7,-6,5,-8,8,-4,-9,-10,9,-5,1,8,-1,3,5,9,-5,5,-3,-8,-8,-5,7,7,-5,10,-8,-9,9,1,3,6,-7,8,5,-10,8,-1,3,9,-10,7,5,-7,5,-8,1,6,8,-9,10,7,7,1,6,1,8,4,-1,10,10,-4,-4,9,4,5,7,10,-2,5,10,3,-3,3,-7,-2,3,-10,-6,-8,-6,4,9,-1,-6,8,-4,6,-10,-1,-4,-6,9,-3,-4,7,8,-7,-7,7,-7,-9,-9,-8,6,6,2,-6,-9,-10,-3,-4,8,7,2,-9,10,7,5,-8,5,-10,7,2,6,-8,-8,-10,-8,2,-3,-8,-10,-4,-2,-3,-6,8,10,9,9,-5,-4,3,-1,1,-7,7,-5,2,3,6,10,-5,1,6,-3,-9,3,-8,-9,8,-9,-5,8,-10,3,-2,-10,-3,3,3,10,5,-3,8,4,-8,-3,-7,-10,-3,5,-8,-4,-3,2,-7,7,-6,6,2,9,5,3,-2,9,8,1,-6,-6,-4,-7,1,-10,4,-10,-8,-6,-1,-2,-4,8,-4,7,-4,3,3,6,5,10,3,-6,9,5,3,-4,-10,-6,-9,-6,-7,-10,8,4,-3,-3,-6,-1,-10,-6,-4,9,-1,8,-9,-5,-3,5,-1,5,5,2,6,8,-10,1,7,5,5,9,8,-10,-9,4,-6,-5,8,6,-3,-2,-1,4,-2,-5,4,3,-8,-5,-8,8,-10,8,-2,-2,9,5,-6,7,2,7,5,-10,-2,9,-5,-7,8,3,-8,-5,8,6,-3,-3,4,-10,9,10,-4,5,-6,6,-6,5,3,-10,2,-6,10,9,-7,-10,7,-2,-1,-2,-9,-2,-7,-8,9,-3,7,-5,9,8,-2,-6,10,-2,5,7,-2,7,-10,-4,-7,9,8,-9,-9,-3,-5,10,7,4,3,3,4,9,-9,4,-9,7,8,-2,-3,8,6,-3,7,4,-3,-9,9,3,-8,3,10,5,-10,-5,-4,10,2,-2,3,10,2,-2,-7,2,-2,3,7,-9,4,9,-8,7,-4,-8,-4,-4,-10,-1,3,-4,-8,-4,4,-1,7,8,1,-7,6,-6,6,9,8,4,-3,6,-5,4,4,-10,9,8,5,7,-1,-4,-4,-4,2,6,4,7,-2,9,-8,1,-6,7,6,-1,-10,-5,-7,-9,-7,-6,-6,-10,-4,6,-9,1,-6,5,4,-9,2,-9,3,1,2,10,-10,6,-1,-8,-9,-6,-7,7,10,6,-9,4,-4,1,4,-3,4,-10,4,-9,-9,10,-7,-9,-4,-10,3,-7,9,-2,1,-7,7,-4,-7,5,-8,-4,-1,-2,10,-8,-6,-10,2], dtype = "int16")#candidate|3007|(2304,)|const|int16
call_3005 = relay.TupleGetItem(func_2033_call(relay.reshape(var_3006.astype('int16'), []), relay.reshape(const_3007.astype('int16'), [16, 16, 9]), ), 0)
call_3008 = relay.TupleGetItem(func_2036_call(relay.reshape(var_3006.astype('int16'), []), relay.reshape(const_3007.astype('int16'), [16, 16, 9]), ), 0)
func_1905_call = mod.get_global_var('func_1905')
func_1909_call = mutated_mod.get_global_var('func_1909')
const_3012 = relay.const([5.816022,-1.334047,-7.231130,-1.843745,1.631581,5.803945,7.511431,-6.800748,-8.337164,-6.891947,3.080828,1.280379,-8.604332,-4.024875,-5.306839,1.966370,8.722596,-8.813529,3.743320,8.708279,-8.952710,-8.308800,-0.053665,8.192044,-4.915963,1.520529,-1.977262,-0.519838,4.907972,-2.390604,-7.741184,4.133501,6.223696,7.796642,-5.202297,2.553399,3.217541,-1.440757,3.561628,6.042837,-8.610349,5.836966,2.055291,4.158841,-4.850304,9.275640,4.749815,-1.420082,-2.082491,5.724393,-4.982416,3.721659,-5.221572,-2.132508,4.464493,-1.867609,-1.488171,-7.921288,6.795591,-1.869471,2.264917,-6.343157,-3.645144,7.648269,-1.473090,6.897962,-6.070816,7.325630,7.137987,-0.231510,6.536712,-6.810488,-2.753780,3.857173,-2.868150,0.829428,1.860594,-7.093219,-5.062677,-7.540479,-5.841258,0.381104,-7.859022,-2.678353,-3.313575,1.996974,3.972808,-0.294913,-6.014245,0.672175,7.845020,7.523994,-8.393930,0.272413,9.330684,0.919110,0.174466,-7.749677,0.377459,4.687853,7.300193,5.179159,-5.784909,-2.557617,-6.928212,4.139417,-9.164409,-5.606587,-9.264545,2.264753,-0.435659,-5.514729,-6.625467,6.081750,0.448737,2.561748,0.944365,9.023678,-7.120535,2.842894,6.006839,5.703034,1.268168,-7.674399,4.174446,4.650806,-5.846308,7.988148,1.023000,5.189384,-6.841143,7.092941,8.045400,2.009364,9.935621,-4.306865,-9.115741,-8.996940,-8.432794,0.251210,5.917276,4.010626,-7.835602,-2.811909,8.223318,-1.081622,-2.905172,-3.944892,-0.488730,-2.824835,-6.481816,-6.929930,-0.221987,-1.179579,5.952000,-9.598103,-6.808851,4.343226,-5.616612,-9.950782,9.179365,5.426037,3.097467,6.886513,-4.653596,2.716297,0.875067,7.208525,-5.580845,-8.176769,6.817387,-6.563497,-2.296564,9.561492,9.831937,-0.900393,-3.050813,0.908030,2.924757,-5.711853,-7.521736,-6.178831,6.922777,6.735011,9.225371,-5.555542,-5.640053,4.178492,-2.577123,2.888964,-2.814596,-6.608395,-5.404361,-2.546005,-9.120095,3.898223,-9.374140,-1.234403,4.231387,-1.860111,0.210789,8.993320,7.252232,-2.953856,0.568621,-4.798111,-7.853056,8.914373,-0.178318,-5.710380,-9.072772,6.500653,-9.619096,-0.173733,2.999167,-4.971858,4.404969,-6.058904,-1.058148,-5.619655,-3.063727,-5.478964,9.989375,0.996270,5.463554,2.796080,5.583018,7.689850,-8.907770,6.948101,-4.638192,9.408133,-6.283161,-9.816471,-3.877185,-9.021254,9.126034,6.712909,-1.685619,-1.947763,3.388722,6.839748,-2.095360,-5.559937,4.881170,-1.447568,9.958941,8.675645,1.419810,2.308506,2.962983,0.501604,-1.045736,9.592441,8.068455,-8.155549,7.401518,-5.546380,-9.584881,4.797758,-3.824909,4.190275,9.445062,2.853588,6.345583,-4.207069,3.541764,1.393638,6.049395,-1.070483,9.247702,4.824809,2.497457,-7.808515,-0.888541,8.864515,-8.171678,-0.539606,2.723168,-3.586472,-5.050360,3.334520,-7.599374,4.453598,-8.093337,7.096844,7.752353,-2.300948,-0.789202,-4.480099,-8.815086,5.516953,7.998003,-4.110879,-6.383100,6.809428,-1.675268,-6.911144,3.742883,-0.704178,1.509491,8.627739,-8.185516,9.928676,3.640633,8.419386,8.829390,-1.718177,-8.166134,-1.812905,4.468174,-8.494103,-4.379979,8.605236,-0.434374,9.716889,2.943411,-6.178523,9.295213,-8.889149,-4.991466,-3.046013,-3.963551,-2.240808,-1.855484,3.601043,-1.916384,7.481776,-1.786522,-3.060684,-1.485321,7.358868,2.936165,0.761421,6.059281,9.616501], dtype = "float32")#candidate|3012|(336,)|const|float32
const_3013 = relay.const([[-9.979698],[1.336246],[-8.906028],[7.964076],[-0.696020],[-1.249039],[8.327663],[4.131904],[-3.606133],[-8.404029],[0.304780],[4.238397],[0.424086],[-0.797478],[4.665362],[-7.900120],[8.458623],[3.079513],[6.539367],[6.979859],[8.476078],[8.122018],[-5.826722],[9.115036],[1.655420],[-6.631336],[8.211362],[4.802251],[-6.045665],[-3.412631],[-3.847079],[-5.937873],[-9.073243],[8.763024],[-9.524788],[-7.691593],[1.874988],[-4.925070],[-3.198939],[-6.474986],[-6.459150],[-7.535156],[0.752884],[-5.438066],[3.220296],[9.084320],[-4.639023],[-1.033936],[1.750723],[-4.407376],[-9.887129],[2.295283],[-8.913993],[-5.626333],[6.969320],[-5.300794],[0.954117],[-0.932104],[-9.316694],[0.451760],[8.356391],[8.121892],[-4.397840],[0.424262],[-4.429491],[1.967886],[-5.508035],[-5.238613],[6.895368],[8.875798],[4.593104],[-7.376702],[-9.589094],[6.954966],[5.529786],[-7.654141],[9.984883],[-2.963685],[8.104240],[-6.136126],[-8.117044],[8.351741],[-1.701448],[0.886239],[-1.599558],[5.900412],[3.317369],[-8.194049],[-6.295167],[-9.633534],[-9.383106],[-7.700802],[4.631312],[4.244494],[-2.401241],[-9.159039],[-7.081965],[5.506359],[6.362011],[-8.826285],[9.321474],[3.238727],[4.291529],[-5.277493],[-7.213533],[8.183811],[-9.174232],[-1.341373],[4.216989],[-4.951014],[1.184279],[-4.673845],[-5.852006],[8.554895],[-1.993614],[5.332516],[0.277772],[-2.989505],[8.657729],[-7.039492],[-7.001098],[-3.147225],[0.263805],[-8.355588],[1.522239],[3.434556],[6.877130],[-7.429820],[0.672796],[0.121852],[4.581819],[-5.806208],[1.641648],[5.351309],[7.944171],[-4.932575],[3.576111],[-4.230022],[-9.125427],[9.529151],[-5.768847],[-7.852801],[-9.337815],[1.156625],[-7.243461],[-3.851535],[-0.227960],[-6.527104],[5.070859],[-2.860647],[3.744440],[-0.559135],[5.397283],[-0.456661],[1.373151],[8.345098],[-8.009626],[7.860977],[-3.616514],[-8.009887],[8.513921],[-5.040983],[6.965319],[-3.157783],[-5.046698],[-8.433413],[1.406402],[7.469652],[0.491850],[-3.381949],[4.521800],[-1.623550],[-6.950029],[5.434578],[4.034673],[0.181489],[-1.738651],[-2.396729],[8.359272],[-1.846477],[7.910081],[7.058561],[-1.353966],[4.294932],[-9.013391],[-3.675450],[-1.829477],[9.573510],[0.538510],[8.228296],[5.556179],[1.716267],[2.190079],[0.292273],[-9.934845],[-0.402319],[-2.011986],[2.802876],[-9.247668],[2.310737],[-2.360854],[3.534911],[-4.048663],[5.941477],[5.409180],[-6.595495],[-0.483529],[-1.143639],[3.809030],[-6.221449],[9.056290],[7.973037],[-0.475781],[-4.514715],[-7.787401],[-9.668173],[-1.974099],[7.120220],[-8.798094],[-8.439946],[1.599450],[-5.746882],[-8.218938],[5.627906],[9.070877],[-6.657068],[2.233154],[-8.518207],[-8.931397],[-1.130519],[-7.104451],[7.432684],[-8.766286],[-4.030720],[-5.748712],[-8.159682],[4.480871],[6.047407],[9.320204],[-2.092868],[-8.022426],[-3.119232],[-6.894662],[1.084998],[6.867285],[2.194005],[-4.588301],[-8.908847],[0.540367],[-5.069891],[5.018750],[-3.420285],[9.833676],[0.954289],[-9.384576],[1.960009],[-2.491532],[-7.322875],[1.006161],[8.683020],[-7.663197],[-9.235694],[6.453843],[0.020538],[0.739078],[-0.065179],[9.874615],[-6.528166],[-4.869712],[4.255784],[3.414491],[8.400736],[-5.072366],[-4.915906],[-2.284102],[5.161977],[7.867278],[5.604938],[-3.390405],[2.249812],[-4.766191],[6.231420],[-5.485199],[9.410715],[1.316680],[-1.919812],[3.858108],[-8.677552],[8.410299],[6.148354],[-5.868128],[-1.104418],[3.193522],[-4.178732],[3.482517],[9.834628],[-1.380745],[1.151143],[-1.489919],[9.375313],[0.471226],[-9.774194],[-8.298796],[3.779401],[-4.947879],[6.853481],[6.176950],[-4.799378],[8.210824],[-4.593112],[-0.880365],[7.993351],[-3.446026],[-6.111390],[5.086787],[-3.893814],[9.832284],[5.751610],[8.925385],[0.212510],[-2.875504],[-7.322936],[5.016414],[-1.338878],[-0.206483],[3.711596],[-5.002808],[4.123402],[3.158746],[-5.483510],[6.059566],[4.229222],[1.808111],[-9.130672],[9.496938],[-6.688178],[-4.328508],[6.957321],[5.116615],[8.426089],[5.631897],[5.810856],[2.390320],[-9.130873],[-1.549592],[3.009028],[-6.023683],[-7.548994],[5.230371],[-3.142622],[-1.245811],[-2.505084],[-3.285821],[-8.952207],[0.093387],[2.825407],[-9.010788],[3.366569],[1.510007],[-9.040323],[-8.958975],[5.390238],[7.693115],[-5.869147],[8.580411],[9.238178],[-0.330818],[-1.550728],[-2.977959],[-4.211441],[-7.700039],[-2.034689],[-3.343476],[-4.294938],[2.180529],[1.891787],[-9.385782],[-3.513504],[-0.279762],[5.328584],[-0.111586],[-9.578826],[-0.729609],[8.545931],[6.684677],[3.694168],[1.229839],[2.917128],[8.303398],[3.082172],[-6.550065],[-4.486828],[2.221632],[-1.277950],[2.016270],[6.775855],[4.133675],[-7.172244],[7.833449],[-6.104868],[-1.271598],[-9.014052],[4.586876],[6.845559],[-1.578468],[9.334605],[-6.084099],[8.432554],[6.390032],[2.344494],[8.121284],[-3.132906],[-7.919524],[7.423586],[-4.331695],[0.683667],[5.535542],[-9.201225],[0.311013],[1.567505],[-8.541428],[-6.738318],[-8.446909],[-5.454187],[-2.940076],[-4.525412],[6.340231],[-9.637913],[-0.190651],[4.368009],[8.303905],[0.698997],[-0.438290],[1.393835],[9.866526],[1.962889],[1.658454],[-6.081400],[-6.205874],[8.373386],[9.575468],[-0.632149],[-4.632205],[-7.133973],[-5.453876],[8.787353],[-9.233019],[-0.445784],[-3.273026],[-0.189960],[-1.915848],[8.646619],[-1.234576],[4.275850],[4.598366],[4.215506],[3.391812],[5.222962],[-9.882302],[-2.536487],[8.083837],[-3.318280],[-8.750330],[-8.822261],[-9.897602],[-1.430808],[7.427527],[-0.095217],[-5.861849],[-2.513021],[6.244683],[-7.244438],[1.362926],[-4.144241],[9.446714],[6.949628],[1.337198],[9.953116],[-1.012016],[-1.697444],[-1.481224],[-8.740813],[3.502133],[7.248469],[-5.693786],[2.405891],[4.347079],[-5.648432],[0.412970],[-2.341796],[8.031872],[2.414772],[7.572101],[-3.172018],[-1.560951],[-9.903718],[-2.538741],[-2.097259],[-5.908016],[6.283773],[3.020707],[-4.810457],[-1.639590],[-5.956775],[8.319588],[-8.445493],[-3.231031],[0.813887],[-3.370953],[2.433407],[1.530251],[-9.031629],[-4.126853],[6.590224],[-8.639710],[-9.085262],[4.740595],[5.510678],[5.004307],[4.110789],[-2.317472],[-5.028361],[6.203767],[1.594717],[9.586856],[-7.005761],[-2.836816],[-3.744052],[-0.038197],[7.380471],[-7.373120],[-4.384274],[-0.830760],[2.514669],[8.244131],[8.596246],[1.855127],[-2.869528],[2.046917],[-8.890262],[1.968574],[3.379020],[2.151307],[-8.673151],[1.465794],[4.421079],[1.362287],[3.946905],[9.002376],[-2.012182],[4.507965],[-2.990404],[0.714308],[9.086776],[-2.233099],[9.556387],[2.732627],[-9.038130],[9.051916],[-1.997892],[-4.936088],[-8.413888],[9.945331],[-7.775220],[2.250988],[-0.149191],[-4.922146],[5.945966],[5.368113],[-0.719535],[-5.546647],[2.880806],[1.083514],[2.881815],[9.504764],[3.379793],[3.738599],[0.116916],[-4.863179],[5.765088],[-0.072592],[-6.370545],[-9.166528],[-6.888780],[1.651264],[-4.564957],[8.526653],[8.664882],[0.019902],[4.646301],[-0.004209],[-3.546924],[-9.264371],[-9.026310],[7.983960],[-2.224334],[0.235738],[-6.380553],[-3.288297],[-5.595041],[-0.746689],[-4.519877],[-3.336433],[-4.970872],[-1.802135],[-0.135277],[-0.331441],[-8.187010],[9.812165],[4.680215],[-4.730717],[-4.130354],[7.865686],[8.767331],[-5.691415],[7.119809],[-3.041851],[-9.716598],[8.597257],[-4.122845],[-1.169185],[-3.910124],[-4.613431],[8.185817],[2.820731],[-5.736264],[1.323271],[-8.848755],[-5.313714],[-7.780479],[7.319395],[5.039887],[1.395676],[-0.279362],[-8.727690],[-0.053988],[-7.154786],[8.065345],[5.272882],[-8.331232],[-8.242353],[-8.706132],[8.605210],[-7.694611],[9.492423],[-6.341686],[-1.408475],[-3.845179],[3.431047],[-9.305703],[-2.571106],[-8.032907],[1.077698],[0.952021],[8.562533],[0.981226],[-0.888528],[0.491379],[-0.399844],[2.685825],[-5.806966],[-6.289368],[9.562354],[8.011079],[-8.066095],[-0.822283],[-1.382880],[6.185179],[4.590233],[5.468244],[-0.155816],[-4.878437],[-6.043808],[-7.588681],[4.377361],[-6.831015],[-6.734981],[-5.750251],[-3.886888],[-5.542928],[7.467916],[4.617873],[-9.063717],[0.066663],[8.506142],[-2.616365],[6.711478],[-1.416066],[-8.468384],[0.555769],[4.531602],[1.083451],[-7.549778],[5.944209],[4.528654],[9.440723],[2.547843],[1.054697],[5.070431],[2.712608],[4.166126],[-0.710800],[-4.277728],[-8.573205],[-1.130894],[-0.497750],[-4.926118],[6.258388],[5.445269],[2.482432],[-2.607664],[9.944060],[4.355659],[6.174027],[5.592233],[8.732877],[-1.772638],[7.356257],[-8.757263],[8.402364],[3.462997],[-1.411538],[-4.121291],[0.976418],[3.851186],[-7.381387],[8.926296],[6.526190],[-9.762897],[-3.837144],[2.923556],[-0.302453],[3.617006],[-9.470202],[-1.528981],[-1.511057],[7.387939],[3.246803],[-0.254399],[3.693062],[9.289130],[-7.025850],[7.796918],[8.110661],[-8.713929],[9.150305],[5.072721],[-1.757149],[9.943650],[-5.175726],[-2.847235],[-4.989510],[-2.308293],[3.449459],[-0.486066],[-9.044934],[4.354695],[-8.758778],[-8.231652],[-1.383719],[3.504623],[-3.855341],[-4.882696],[-5.118418],[6.698829],[5.893730],[6.947407],[1.298593],[4.477237],[3.545189],[8.192642],[4.715500],[-3.266411],[4.131338],[4.097358],[5.104498],[1.629400],[3.719174],[-4.259697],[6.305417],[-8.170107],[-6.063566],[-3.888892],[6.971767],[-5.461135],[2.499374],[-1.917354],[-8.274980],[0.928315],[0.821570],[-4.280403],[5.648018],[-0.474901],[8.024272],[-2.556210],[-8.477866],[3.355627],[5.841383],[-0.790236],[8.378290],[3.956894],[-8.039479],[7.561611],[-9.041199],[-4.011270],[6.192265],[-4.265546],[-2.864749],[8.370898],[-9.237794],[7.961704],[-9.480557],[6.163512],[-3.515211],[9.291160],[-7.399403],[7.020838],[-6.905987],[-0.909715],[4.593370],[6.545060],[7.344609],[7.056915],[-7.902747],[2.109109],[0.163601],[-6.835329],[7.336054],[1.773505],[7.248222],[6.410697],[9.388968],[5.928911],[0.220976],[-1.390092],[-9.754043],[6.344383],[5.744064],[-6.056996],[7.879541],[-9.238598],[-6.850080],[-7.519102],[-4.219286],[6.721733],[-5.259675],[-4.949546],[5.668507],[-0.616791],[7.242056],[7.858014],[-9.371245],[7.384975],[-3.506874],[3.971367],[3.610902],[-7.425007],[-4.964137],[1.819173],[-2.883147],[3.456923],[5.701101],[-9.475525],[5.711602],[7.179808],[6.652926],[-9.427115],[7.743971],[9.940998],[4.044267],[9.002665],[1.190950],[-2.364624],[-5.265156],[-9.119507],[4.847111],[-1.115484],[7.157222],[2.671632],[4.802064],[4.703263],[-4.714755],[-9.861799],[9.205739],[3.572615],[-6.594875],[4.155543],[-7.222067],[-0.400446],[0.384769],[3.898889],[-5.162875],[9.037199],[-3.459114],[-7.158341],[2.400884],[-6.173178],[5.167185],[3.335178],[-9.496234],[-0.146100],[3.509588],[-2.017668],[3.092055],[0.890183],[-8.013009],[3.915490],[-6.050111],[-3.317860],[-4.017330],[-7.668995],[4.373985],[8.994577],[1.283469],[0.076358],[5.546167],[-0.017048],[-1.215539],[-6.111506],[2.374453],[-1.140079],[-3.233334],[-6.063795],[4.656202],[5.801576],[5.906397],[0.335491],[-2.724090],[-3.415297],[-5.663922],[6.959046],[6.267274],[-8.358879],[0.789935],[9.565070],[-3.140041],[-7.678349],[-2.193883],[9.918221],[8.323035],[3.312640],[-9.621248],[5.641569],[3.178712],[-9.093400],[-5.174814],[7.698595],[-0.448212],[5.318993],[-9.670174],[-1.652207],[-4.197854],[1.563914],[-3.713379],[-7.272380],[6.323487],[-8.268921],[9.601837],[-5.042151],[4.443606],[-3.655480],[-8.379307],[9.140253],[9.401012],[-1.848057],[-0.367137],[3.004027],[6.552520],[6.462210],[9.890454],[-1.810281],[1.061291],[5.238331],[-7.932542],[2.757780],[-1.297936],[1.150721],[4.763745],[9.560707],[3.525377],[-3.829170],[6.707535],[0.009768],[-7.514093],[-8.342271],[-9.763421],[-6.604056],[8.957120],[-8.527749],[6.461425],[-7.188770],[1.548805],[-6.544088],[-0.429621],[-2.050966],[-0.005600],[6.796124],[-9.399781],[-0.157258],[3.297073],[-7.430399],[6.039136],[4.284042],[-3.549994],[6.945464],[0.728498],[-4.853726],[1.066021],[8.925726],[-5.348083],[-9.805179],[-4.230389],[-0.400014],[-0.434428],[2.998323],[5.273527],[8.581484],[-7.477274],[-1.487925],[1.703704],[-3.941100],[0.217194],[2.062033],[-5.528875],[-8.102733],[-1.230158],[9.124632],[0.543908],[3.291780],[-2.756745],[8.495458],[0.893389],[0.167178],[-3.459560],[-9.311311],[4.966057],[-8.700683],[8.474753],[6.195777],[1.617522],[4.291944],[-8.792704],[-2.191397],[-6.226018],[0.378465],[0.642675],[7.387648],[-7.263343],[-3.318236],[-6.689439],[-3.242301],[-2.933437],[-6.806779],[-9.026962],[0.330837],[9.410154],[-8.483021],[6.776744],[2.954534],[-9.106681],[-2.144622],[-6.383279],[-1.758391],[-4.847628],[9.277735],[-1.919126],[-3.484665],[-9.803652],[-7.605952],[3.300056],[-5.928436],[-8.739692],[-9.515623],[-7.292647],[-7.565614],[0.586903],[-5.452831],[-6.099403],[-0.504688],[4.588055],[2.401773],[1.560366],[-0.706074],[-0.529727],[-7.393154],[-8.806618],[-6.454918],[8.507998],[-0.969307],[3.127614],[2.112704],[-2.149096],[-8.470945],[-4.334696],[8.207521],[-7.013357],[4.823272],[9.198639],[2.383689],[7.330145],[7.487289],[7.518980],[-6.203968],[-0.810028],[-6.146671],[2.680163],[-9.986793],[8.282813],[-6.935489],[6.394100],[9.406374],[-8.134172],[8.920053],[3.682755],[3.357310],[2.759106],[-3.292281],[3.140680],[4.487721],[-1.665656],[8.859813],[5.622427],[3.996050],[-9.891086],[5.262915],[1.992152],[1.829953],[7.832991],[5.320806],[3.258365],[4.163008],[1.597605],[2.741069],[9.995362],[5.760000],[-8.833925],[2.895619],[-9.726184],[-3.771894],[4.424404],[2.894206],[9.189198],[-1.711872],[5.474724],[3.860464],[7.018666],[5.919791],[-9.281214],[3.813819],[-5.751786],[8.528787],[9.872867],[-5.481089],[7.266489],[-0.399243],[-5.672092],[-8.974527],[-2.037967],[0.826548],[-8.827320],[-2.745616],[8.206095],[5.532135],[3.389594],[3.255563],[1.946401],[-5.171725],[-5.182215],[-9.908643],[-7.204709],[-2.855475],[-0.669555],[-3.554564],[8.714349],[1.118611],[-1.938168],[6.171959],[6.872737],[9.423577],[9.721431],[-2.936164],[-5.302859],[3.419493],[-5.487470],[-8.464421],[-8.060326],[0.750394],[3.797008],[5.858252],[0.603726],[8.780891],[9.669401],[-6.076838],[6.461078],[9.532192],[-3.833599],[2.336508],[-9.568158],[7.373065],[-1.459757],[3.657622],[-0.199389],[-6.582858],[-2.274742],[5.141979],[-4.698730],[3.590440],[1.425213],[-2.216189],[-8.074560],[-7.518605],[-6.699798],[6.134027],[-5.266943],[9.687754],[-0.178506],[-2.515877],[0.609352],[2.935706],[-1.358353],[-8.998415],[1.470289],[-8.296937],[4.483705],[1.703710],[-5.431125],[-0.520259],[5.721967],[-1.421836],[0.980789],[-7.109206],[-8.810468],[-5.744081],[2.658558],[-1.539459],[-3.652688],[-8.305665],[-7.960453],[7.385344],[-6.142884],[2.465135],[-0.828796],[5.172855],[1.218280],[5.052909],[8.425356],[7.834625],[-1.587498],[8.976436],[6.285429],[-4.504324],[-6.051079],[7.842120],[6.108305],[-8.045944],[6.832612],[5.697745],[-8.492981],[2.629719],[-0.093359],[-2.793302],[-4.419146],[5.190410],[6.810901],[5.885159],[-8.114078],[7.679674],[-0.519573],[-0.228037],[6.886746],[6.181694],[-4.753795],[-6.901595],[5.463427],[4.797886],[-4.138131],[1.922170],[9.110755],[-4.691102],[-2.453337],[8.526320],[5.698002],[6.532188],[3.240087],[0.051137],[3.596627],[1.025233],[8.217048],[-2.516877],[2.218120],[-9.261483],[2.922189],[-6.048246],[8.958711],[7.523885],[-4.149508],[-4.443894],[7.148292],[-3.174518],[4.103253],[6.901111],[-9.723818],[9.969697],[-5.937735],[4.280132],[9.981139],[-6.111977],[3.974436],[8.539013],[9.240349],[-2.285305],[5.205766],[8.326607],[0.356259],[6.910550],[8.223784],[3.751263],[7.507356],[-6.795347],[-0.125846],[8.640637],[4.304168],[-1.041333],[-8.475194],[3.452499],[-5.446744],[-6.055934],[4.125340],[0.418746],[5.525327],[4.687168],[9.137690],[-8.785764],[1.607894],[7.121963],[-3.627889],[2.152486],[-1.114981],[6.684563],[1.014117],[-8.173656],[-9.867501],[8.086741],[-4.655285],[-7.561546],[2.605776],[-5.158494],[-7.990012],[3.063692],[7.495147],[8.028582],[8.058944],[-9.426801],[-6.924665],[8.680330],[-5.280793],[-4.104140],[-3.275870],[-6.627963],[-4.334587],[-7.468272],[3.875771],[-5.791663],[8.951754],[6.528701],[-6.653978],[1.082335],[-8.057800],[1.670576],[6.170460],[-2.467711],[-7.248342],[-9.173014],[6.409532],[8.520176],[-6.113059],[3.180756],[9.858537],[5.006518],[-8.579702],[7.677200],[-7.772743],[-3.607646],[-3.855010],[7.104065],[-0.380869],[-2.737678],[-8.823193],[3.650231],[1.636635],[7.778020],[-2.779906],[7.556980],[7.980474],[6.235596],[-4.208325],[-8.540052],[2.039721],[0.348198],[3.341758],[6.229831],[-5.427572],[-3.048048],[-1.182801],[-9.692551],[7.098089],[7.497239],[4.112026],[2.090491],[-5.462100],[-2.827068],[6.459191],[8.147213],[8.130826],[6.883051],[4.135125],[2.430546],[-7.087999],[3.369512],[8.293684],[-8.549766],[4.883049],[4.892912],[1.696354],[7.398156],[4.990663],[-3.020991],[8.940986],[8.623388],[-0.130075],[7.907939],[6.335001],[0.582160],[-9.177419],[-0.597092],[3.291731],[-9.086899],[4.032605],[2.609353],[-2.089480],[-4.932635],[-1.114459],[1.835975],[-5.672766],[-7.869315],[8.208268],[-6.403919],[-8.377637],[-7.874792],[-5.524263],[1.409877],[5.814353],[7.139786],[7.207006],[8.591987],[2.309107],[9.816576],[-6.085488],[7.752646],[8.563842],[8.155014],[6.539937],[5.449556],[-4.738487],[5.865801],[-1.509247],[-6.800487],[-1.839596],[-7.224522],[-3.941316],[-9.472276],[2.261122],[0.981490],[-5.256068],[-8.144924],[-1.340245],[-1.273758],[-6.722062],[-8.245704],[1.603902],[4.576721],[-1.966208],[9.647361],[7.944589],[-8.241430],[-6.661048],[-6.658825],[-3.476203],[8.297483],[-3.452695],[-8.333442],[-4.192891],[2.864562],[-3.001186],[7.418510],[1.052569],[6.095594],[-4.771669],[-1.902154],[2.596726],[5.243244],[0.999706],[1.742845],[8.466059],[-2.336183],[9.245171],[-1.153777],[8.313914],[-9.495918],[8.191762],[0.386007],[-0.293242],[-2.015992],[-0.368529],[0.325689],[8.385318],[8.429450],[-0.609247],[-3.294282],[1.651840],[4.356429],[4.250335],[-7.194560],[8.252781],[-2.065715],[-1.546253],[8.180019],[1.987545],[1.717234],[0.894955],[2.144595],[9.368408],[8.642167],[2.894090],[3.808125],[6.283471],[4.609794],[7.061697],[2.685291],[-8.551371],[9.033826],[-7.510173],[-0.221785],[4.961842],[2.658200],[-6.783267],[5.179899],[1.125777],[2.252532],[7.423141],[6.887019],[7.441428],[6.631861],[5.479957],[-4.209594],[3.033513],[-6.903252],[-9.863628],[1.764205],[3.828270],[-9.053678],[7.394901],[2.841096],[4.334251],[9.351301],[-7.103844],[7.099824],[-0.428180],[-3.720830],[3.943475],[8.084623],[-2.693884],[-7.323056],[-8.955772],[-1.871259],[-8.319152],[0.030537],[1.792641],[-3.724555],[2.667949],[1.773489],[6.565329],[-9.278220],[9.943928]], dtype = "float64")#candidate|3013|(1584, 1)|const|float64
call_3011 = relay.TupleGetItem(func_1905_call(relay.reshape(const_3012.astype('float32'), [2, 168]), relay.reshape(const_3013.astype('float64'), [1584,]), ), 3)
call_3014 = relay.TupleGetItem(func_1909_call(relay.reshape(const_3012.astype('float32'), [2, 168]), relay.reshape(const_3013.astype('float64'), [1584,]), ), 3)
func_1276_call = mod.get_global_var('func_1276')
func_1277_call = mutated_mod.get_global_var('func_1277')
call_3017 = func_1276_call()
call_3018 = func_1276_call()
output = relay.Tuple([call_2988,call_2999,call_3005,var_3006,const_3007,call_3011,const_3012,const_3013,call_3017,])
output2 = relay.Tuple([call_2989,call_3000,call_3008,var_3006,const_3007,call_3014,const_3012,const_3013,call_3018,])
func_3020 = relay.Function([var_3006,], output)
mod['func_3020'] = func_3020
mod = relay.transform.InferType()(mod)
var_3021 = relay.var("var_3021", dtype = "int16", shape = ())#candidate|3021|()|var|int16
output = func_3020(var_3021)
func_3022 = relay.Function([var_3021], output)
mutated_mod['func_3022'] = func_3022
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3057 = relay.var("var_3057", dtype = "float32", shape = (5, 3, 8))#candidate|3057|(5, 3, 8)|var|float32
uop_3058 = relay.acos(var_3057.astype('float32')) # shape=(5, 3, 8)
output = uop_3058
output2 = uop_3058
func_3062 = relay.Function([var_3057,], output)
mod['func_3062'] = func_3062
mod = relay.transform.InferType()(mod)
var_3063 = relay.var("var_3063", dtype = "float32", shape = (5, 3, 8))#candidate|3063|(5, 3, 8)|var|float32
output = func_3062(var_3063)
func_3064 = relay.Function([var_3063], output)
mutated_mod['func_3064'] = func_3064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2593_call = mod.get_global_var('func_2593')
func_2595_call = mutated_mod.get_global_var('func_2595')
call_3113 = relay.TupleGetItem(func_2593_call(), 0)
call_3114 = relay.TupleGetItem(func_2595_call(), 0)
func_1331_call = mod.get_global_var('func_1331')
func_1332_call = mutated_mod.get_global_var('func_1332')
call_3119 = func_1331_call()
call_3120 = func_1331_call()
output = relay.Tuple([call_3113,call_3119,])
output2 = relay.Tuple([call_3114,call_3120,])
func_3123 = relay.Function([], output)
mod['func_3123'] = func_3123
mod = relay.transform.InferType()(mod)
mutated_mod['func_3123'] = func_3123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3123_call = mutated_mod.get_global_var('func_3123')
call_3124 = func_3123_call()
output = call_3124
func_3125 = relay.Function([], output)
mutated_mod['func_3125'] = func_3125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2557_call = mod.get_global_var('func_2557')
func_2559_call = mutated_mod.get_global_var('func_2559')
call_3128 = func_2557_call()
call_3129 = func_2557_call()
func_1415_call = mod.get_global_var('func_1415')
func_1417_call = mutated_mod.get_global_var('func_1417')
call_3165 = func_1415_call()
call_3166 = func_1415_call()
func_1331_call = mod.get_global_var('func_1331')
func_1332_call = mutated_mod.get_global_var('func_1332')
call_3167 = func_1331_call()
call_3168 = func_1331_call()
func_1276_call = mod.get_global_var('func_1276')
func_1277_call = mutated_mod.get_global_var('func_1277')
call_3181 = func_1276_call()
call_3182 = func_1276_call()
output = relay.Tuple([call_3128,call_3165,call_3167,call_3181,])
output2 = relay.Tuple([call_3129,call_3166,call_3168,call_3182,])
func_3186 = relay.Function([], output)
mod['func_3186'] = func_3186
mod = relay.transform.InferType()(mod)
mutated_mod['func_3186'] = func_3186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3186_call = mutated_mod.get_global_var('func_3186')
call_3187 = func_3186_call()
output = call_3187
func_3188 = relay.Function([], output)
mutated_mod['func_3188'] = func_3188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2337_call = mod.get_global_var('func_2337')
func_2339_call = mutated_mod.get_global_var('func_2339')
call_3200 = func_2337_call()
call_3201 = func_2337_call()
func_1077_call = mod.get_global_var('func_1077')
func_1082_call = mutated_mod.get_global_var('func_1082')
const_3232 = relay.const([-6.611437,-4.720636,4.811820,5.012309,2.435156,5.479536,4.517432,-9.354516,-4.684464,2.993466,-6.656453,6.983292,-9.314399,1.460375,-5.482362,-3.394049,3.487143,7.522345,-3.843077,-9.423900,6.170241,2.032164,-1.702636,5.936323,-5.614237,-8.441964,-7.032358,-9.165593,1.205831,-4.738234,-9.465985,-3.487659,-6.517010,0.586526,5.369131,-2.971951,6.830881,7.688698,9.963247,-5.360971,0.365218,-1.597673,-0.034010,8.449130,-6.351842,4.931683,-3.928197,-7.744096,-5.630773,6.166190,-4.238581,-8.764530,8.985043,6.393718,-2.311870,0.364165,6.063919,7.177328,-3.126395,9.204895,-9.776041,9.675190,5.904649,6.877483,2.743260,4.937800,-3.276236,-6.529349,9.032008,-8.667188,4.870913,-7.536773], dtype = "float32")#candidate|3232|(72,)|const|float32
const_3233 = relay.const([-0.490463,4.960549,1.807606,8.506602,-5.574909,-0.399875,1.545712,6.141081,5.815613,9.532209,-0.770043,-7.441671,0.043167,-3.498675,-2.156404,-9.145240,-0.094939,-8.010330,9.464735,-7.859570,-9.350649,5.990259,-1.589385,-6.929313,-4.637195,2.678209,7.276126,4.308275,-3.523676,-9.154397,9.368357,0.189859,-5.882110,6.817234,9.998434,2.284228,0.885857,6.126505,-1.016959,5.677269,9.689450,8.865951,0.654588,-0.946136,-3.350923,-6.558733,0.380631,6.163141,6.449561,1.070370,6.317653,4.236714,-7.510046,-8.030846,-1.786432,6.531717,-1.653241,-1.661832,5.511437,8.057056,4.647979,4.823149,7.326230,-4.187709,-2.111940,9.407666,3.609213,-4.001608,9.167437,-2.783281,-4.413605,-6.346666,-4.933448,-6.589253,8.893574,2.705240,-2.500970,8.828131,9.851322,-7.430302,-5.612746,0.457262,-9.881952,4.611635,0.479528,5.616982,1.734893,-2.959587,2.950692,-8.341508,6.214743,9.201116,-8.602507,6.332412,6.497829,0.280219,-7.945886,5.062885,-9.026930,-0.997347,-0.606255,-2.311945,5.917311,8.124382,8.519458,2.051254,0.309408,-8.391573,-5.775244,0.734036,-6.818590,0.373606,-6.855740,7.141606,9.071579,-0.417331,-8.955399,0.082241,8.971163,-3.774505,-8.942474,0.246801,-6.605807,-9.796947,-7.259208,-9.893924,-6.438979,8.307095,-2.337702,-1.077538,-6.786342,7.144833,1.108487,7.103855,3.970923,2.118017,6.703234,9.075262,2.106387,-3.546358,-6.284273,-0.791821,-8.218056,1.135785,-5.300024,-4.551829,-6.097437,0.434032,6.632563,-3.971593,-1.732702,-8.774848,0.130454,-3.269663,7.286039,-6.426506,1.440515,1.538792,-2.093105,9.999016,-2.718536,3.170596,6.116300,-9.185560,5.337247,-0.675143,-5.567509,-5.747397,-4.499032,-1.574259,7.031851,5.734474,4.056218,0.530638,6.573401,4.795868,-6.115871,-9.349874,2.123095,-5.960657,-5.605415,3.716326,-0.616889,-5.443748,-4.215396,-4.954660,8.243998,-2.318320,-8.697113,-9.434199,-3.861297,9.445645,-9.055640,1.214346,-5.283631,3.171353,-6.518502,-9.893296], dtype = "float64")#candidate|3233|(198,)|const|float64
var_3234 = relay.var("var_3234", dtype = "float64", shape = (1584,))#candidate|3234|(1584,)|var|float64
call_3231 = relay.TupleGetItem(func_1077_call(relay.reshape(const_3232.astype('float32'), [72,]), relay.reshape(const_3233.astype('float64'), [198,]), relay.reshape(var_3234.astype('float64'), [1584,]), ), 4)
call_3235 = relay.TupleGetItem(func_1082_call(relay.reshape(const_3232.astype('float32'), [72,]), relay.reshape(const_3233.astype('float64'), [198,]), relay.reshape(var_3234.astype('float64'), [1584,]), ), 4)
output = relay.Tuple([call_3200,call_3231,const_3232,const_3233,var_3234,])
output2 = relay.Tuple([call_3201,call_3235,const_3232,const_3233,var_3234,])
func_3241 = relay.Function([var_3234,], output)
mod['func_3241'] = func_3241
mod = relay.transform.InferType()(mod)
mutated_mod['func_3241'] = func_3241
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3242 = relay.var("var_3242", dtype = "float64", shape = (1584,))#candidate|3242|(1584,)|var|float64
func_3241_call = mutated_mod.get_global_var('func_3241')
call_3243 = func_3241_call(var_3242)
output = call_3243
func_3244 = relay.Function([var_3242], output)
mutated_mod['func_3244'] = func_3244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1203_call = mod.get_global_var('func_1203')
func_1204_call = mutated_mod.get_global_var('func_1204')
call_3281 = func_1203_call()
call_3282 = func_1203_call()
var_3287 = relay.var("var_3287", dtype = "float32", shape = (5, 1, 4))#candidate|3287|(5, 1, 4)|var|float32
bop_3288 = relay.right_shift(call_3281.astype('int8'), relay.reshape(var_3287.astype('int8'), relay.shape_of(call_3281))) # shape=(5, 1, 4)
bop_3291 = relay.right_shift(call_3282.astype('int8'), relay.reshape(var_3287.astype('int8'), relay.shape_of(call_3282))) # shape=(5, 1, 4)
func_3020_call = mod.get_global_var('func_3020')
func_3022_call = mutated_mod.get_global_var('func_3022')
const_3293 = relay.const(4, dtype = "int16")#candidate|3293|()|const|int16
call_3292 = relay.TupleGetItem(func_3020_call(relay.reshape(const_3293.astype('int16'), [])), 1)
call_3294 = relay.TupleGetItem(func_3022_call(relay.reshape(const_3293.astype('int16'), [])), 1)
output = relay.Tuple([bop_3288,call_3292,const_3293,])
output2 = relay.Tuple([bop_3291,call_3294,const_3293,])
func_3295 = relay.Function([var_3287,], output)
mod['func_3295'] = func_3295
mod = relay.transform.InferType()(mod)
mutated_mod['func_3295'] = func_3295
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3296 = relay.var("var_3296", dtype = "float32", shape = (5, 1, 4))#candidate|3296|(5, 1, 4)|var|float32
func_3295_call = mutated_mod.get_global_var('func_3295')
call_3297 = func_3295_call(var_3296)
output = call_3297
func_3298 = relay.Function([var_3296], output)
mutated_mod['func_3298'] = func_3298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2451_call = mod.get_global_var('func_2451')
func_2452_call = mutated_mod.get_global_var('func_2452')
call_3317 = func_2451_call()
call_3318 = func_2451_call()
output = call_3317
output2 = call_3318
func_3335 = relay.Function([], output)
mod['func_3335'] = func_3335
mod = relay.transform.InferType()(mod)
mutated_mod['func_3335'] = func_3335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3335_call = mutated_mod.get_global_var('func_3335')
call_3336 = func_3335_call()
output = call_3336
func_3337 = relay.Function([], output)
mutated_mod['func_3337'] = func_3337
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3338 = relay.var("var_3338", dtype = "float32", shape = (5, 14, 1))#candidate|3338|(5, 14, 1)|var|float32
const_3339 = relay.const([[[5.174176,-6.800970,3.697785,-2.301699,0.698699,-2.230346,-9.210915,-4.539797,4.767696],[-6.325383,-3.690057,0.950097,9.160625,-6.017582,-4.018135,-5.767587,5.505791,5.907340],[1.222072,-7.853986,1.940849,-5.951432,5.970076,-9.929404,9.939813,2.552553,9.804262],[9.077604,-6.848157,2.239572,2.366418,-5.552864,9.315912,7.201035,-0.659029,9.585897],[-3.526574,9.606603,-7.117918,4.142461,-8.079388,7.249228,6.536461,1.153743,4.778601],[-6.339303,-0.127830,4.912199,-5.403593,7.255963,-5.112438,4.149639,-6.959376,-4.569619],[-7.781716,-9.476274,6.442512,2.086578,-7.484461,-4.609693,5.177319,9.918723,-7.179987],[0.546388,2.158535,1.113605,5.634833,9.747071,9.654512,5.495721,9.790825,9.201174],[8.369744,4.918045,9.443392,6.805072,-9.460175,-2.705290,3.986771,-7.139810,-9.948351],[9.277626,-3.950087,3.022240,-0.977754,7.474115,-6.468044,-7.874600,5.837720,-6.057249],[-8.118520,-6.548472,-3.210446,1.917267,-5.929015,-5.514970,8.656547,8.124622,-0.870747],[8.039925,2.689426,-4.119233,1.676055,1.258093,-9.511292,1.766123,-1.261577,-0.465648],[2.199156,-5.534519,1.687131,-8.168624,-4.388806,-8.744734,2.706672,-3.526732,-0.488704],[-6.868794,4.037572,0.722329,5.374014,-4.206089,-7.903851,-6.647535,-6.419135,3.213873]],[[-7.877542,-7.327463,9.375894,7.329220,4.465140,8.716019,7.496275,7.431476,-3.610394],[-9.082004,-5.266178,7.113451,6.278586,-9.950669,-5.725031,1.667865,3.436264,-3.523136],[-1.977792,8.869641,8.877086,-5.710616,1.616262,6.680044,-4.961256,3.999242,5.658561],[8.448888,0.595052,-5.859954,8.839984,-6.459848,-9.169054,-8.510295,-0.186063,-4.685483],[-5.875404,-1.645377,-2.129564,7.483358,-2.579339,8.779870,6.522585,-0.189693,-3.146995],[6.399129,6.379222,5.632648,-5.847252,-7.947960,8.031728,-2.633664,4.963052,9.751564],[-0.043323,-7.592363,-3.877088,-8.528331,-8.225100,-6.781774,-2.554707,3.059624,5.804834],[6.685642,-0.044054,-3.754667,-6.000708,8.635649,-4.093204,3.865952,-9.261695,1.146130],[-2.864864,-8.547916,-5.785475,6.289320,-4.811319,-0.581856,8.795259,5.490999,-0.190758],[-6.620738,-3.171016,-4.964328,-3.551490,-9.009849,-2.964228,3.816959,7.590790,6.933368],[-6.938938,-9.968873,7.329423,-9.442982,-5.618326,-9.891118,-6.568250,2.365781,9.527858],[5.651910,-1.480397,-4.390446,2.042249,7.443796,7.591703,-7.995194,4.882222,4.390625],[-3.577469,-8.686665,6.612124,9.937838,1.675751,2.707727,-4.815721,-5.128401,-8.027667],[7.905543,5.577597,-7.899281,-0.934445,-1.151088,-5.415681,-2.273086,-7.403086,4.245276]],[[-7.899614,4.368706,-9.760496,-1.155033,1.765999,9.533063,5.061152,4.200066,5.948934],[2.081461,-1.038681,2.214710,2.081052,6.499040,-3.309775,-9.983457,6.072002,-9.834078],[-2.836373,4.187621,-4.773409,6.539399,2.615262,-6.000821,-5.056308,-0.226919,1.556574],[6.683733,-9.678470,-4.099447,-5.674979,8.809629,-7.309622,9.553467,-1.534707,-5.124252],[6.993131,-0.136368,-6.409733,8.444924,-0.275796,-5.887235,5.417257,9.283070,-3.667767],[4.773229,-1.243521,5.655760,-5.496471,6.882411,3.440002,2.726379,8.679197,0.113004],[-0.924478,-7.112441,8.085373,9.995060,5.221415,-4.907356,-2.219083,-7.761797,-4.332931],[-6.159077,-8.911208,6.545801,2.593649,-4.847286,-5.020342,9.583286,-3.238249,1.159220],[-9.097636,-2.804441,0.278389,4.397437,-6.204205,-4.878852,1.128445,-4.133452,-6.874051],[3.087215,-9.007042,-0.277548,-1.926773,-7.933971,-2.282454,-2.760070,-6.810911,-8.607826],[8.980942,9.857917,4.330067,-5.425742,-6.002422,-9.854933,-8.988486,5.466645,1.175602],[7.661918,6.980439,-1.390517,4.757827,-2.568459,6.353750,-7.179297,-3.767952,3.285877],[9.894477,1.367642,-1.649718,9.389500,1.652410,2.412585,-9.251997,-5.372388,-8.058552],[5.944650,9.515223,3.820071,-2.464144,4.272925,-0.213470,-8.352333,-7.624862,9.292608]],[[0.726605,3.004040,4.309151,5.429841,9.471416,6.051551,-8.303534,-5.458174,-9.367992],[3.424075,2.436316,-9.995184,6.134714,7.545828,-3.327641,-8.094851,9.225096,-3.772032],[-3.641319,7.345032,-7.351845,-6.669111,6.600336,-2.742354,-1.281987,8.741635,2.347201],[7.117708,-0.902302,-5.926889,-9.073622,2.328885,9.762190,-1.112798,6.330756,6.952043],[5.636306,0.943003,-1.905558,-5.451414,3.671543,-0.486596,9.494839,6.985851,3.820163],[-4.394361,-1.254321,5.088790,-3.509130,7.772392,1.433986,6.430453,-0.784974,-6.152420],[-3.716721,-2.421143,-8.917749,-6.756691,-0.203335,4.335131,-4.608233,4.085501,6.795855],[-2.217586,7.251223,-2.910667,-3.182728,6.961400,-9.294728,-6.171456,-2.018661,-7.119388],[7.807997,3.858332,-4.420781,1.332020,-0.478954,3.609501,-9.101682,5.725780,5.756245],[-5.586784,8.377293,6.971402,4.486593,4.186722,-3.180420,-8.838368,-1.505601,2.783349],[2.170166,7.629456,-0.582248,5.770138,-4.953509,-2.072191,-0.609736,-5.352744,-5.057060],[3.535502,7.206936,9.923835,-6.198797,0.669133,9.374300,9.768563,-9.939506,6.004922],[3.135940,5.260391,6.562077,-3.439610,-6.893057,-8.254071,-8.533890,4.621508,-3.520591],[4.659704,-1.830400,9.069897,6.554129,-3.615563,-1.911307,-8.185211,7.825909,0.144732]],[[9.581755,-6.339589,-7.599340,-0.497982,3.555287,-1.329740,9.871128,-1.631171,8.539281],[3.237556,3.568312,-9.502807,2.575846,6.014351,-3.687597,-6.600335,-7.670525,7.980737],[2.761858,1.140614,4.155362,-9.797414,0.627403,4.206882,-6.218571,-2.618205,-0.815237],[2.625598,6.865392,-4.632344,-0.876963,-4.307625,-5.997854,3.547146,7.965860,-9.003398],[1.526379,2.930802,2.294559,2.416796,-2.365538,2.723212,-0.943041,-8.352876,-6.467371],[5.681965,6.450528,4.592767,0.726090,8.868988,-1.401206,-1.972637,-6.921318,-2.922070],[-1.661046,-6.224673,8.767320,9.892375,-7.446407,-2.132218,4.013991,1.748782,2.155004],[-2.423735,-5.305137,6.108656,5.691582,-1.039061,-6.340619,3.087672,-6.912519,0.838477],[-7.020756,5.614683,-2.762382,5.870257,3.204115,5.616781,2.564744,1.116681,5.862875],[-3.400001,-4.208655,4.198920,-3.507287,6.611323,-2.839655,-4.355630,-4.619328,7.986241],[8.926897,-6.748606,-4.528344,7.021643,3.633661,6.622719,-1.492352,7.457988,-6.298870],[4.281421,3.073636,0.822891,7.333312,-5.276331,9.265261,-2.992179,-1.400628,2.381573],[-8.909601,4.820234,0.744763,9.253272,-5.722832,9.417116,5.842953,6.391787,3.571434],[-2.535339,0.235827,-2.556275,-8.773050,5.499825,8.978120,6.358304,-0.268315,1.186031]]], dtype = "float32")#candidate|3339|(5, 14, 9)|const|float32
bop_3340 = relay.mod(var_3338.astype('float32'), const_3339.astype('float32')) # shape=(5, 14, 9)
output = relay.Tuple([bop_3340,])
output2 = relay.Tuple([bop_3340,])
func_3345 = relay.Function([var_3338,], output)
mod['func_3345'] = func_3345
mod = relay.transform.InferType()(mod)
mutated_mod['func_3345'] = func_3345
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3346 = relay.var("var_3346", dtype = "float32", shape = (5, 14, 1))#candidate|3346|(5, 14, 1)|var|float32
func_3345_call = mutated_mod.get_global_var('func_3345')
call_3347 = func_3345_call(var_3346)
output = call_3347
func_3348 = relay.Function([var_3346], output)
mutated_mod['func_3348'] = func_3348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2451_call = mod.get_global_var('func_2451')
func_2452_call = mutated_mod.get_global_var('func_2452')
call_3399 = func_2451_call()
call_3400 = func_2451_call()
uop_3409 = relay.acos(call_3399.astype('float32')) # shape=(5, 1, 4)
uop_3411 = relay.acos(call_3400.astype('float32')) # shape=(5, 1, 4)
output = uop_3409
output2 = uop_3411
func_3420 = relay.Function([], output)
mod['func_3420'] = func_3420
mod = relay.transform.InferType()(mod)
mutated_mod['func_3420'] = func_3420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3420_call = mutated_mod.get_global_var('func_3420')
call_3421 = func_3420_call()
output = call_3421
func_3422 = relay.Function([], output)
mutated_mod['func_3422'] = func_3422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3186_call = mod.get_global_var('func_3186')
func_3188_call = mutated_mod.get_global_var('func_3188')
call_3430 = relay.TupleGetItem(func_3186_call(), 3)
call_3431 = relay.TupleGetItem(func_3188_call(), 3)
output = relay.Tuple([call_3430,])
output2 = relay.Tuple([call_3431,])
func_3437 = relay.Function([], output)
mod['func_3437'] = func_3437
mod = relay.transform.InferType()(mod)
mutated_mod['func_3437'] = func_3437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3437_call = mutated_mod.get_global_var('func_3437')
call_3438 = func_3437_call()
output = call_3438
func_3439 = relay.Function([], output)
mutated_mod['func_3439'] = func_3439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2777_call = mod.get_global_var('func_2777')
func_2778_call = mutated_mod.get_global_var('func_2778')
call_3504 = relay.TupleGetItem(func_2777_call(), 0)
call_3505 = relay.TupleGetItem(func_2778_call(), 0)
const_3507 = relay.const([[[-1.016134,-5.575840,4.737299,-8.269079],[-1.915383,-4.440304,1.910717,-4.968123],[-5.788784,4.191524,7.787110,-3.044307],[-2.173465,3.879120,-2.798940,4.089408],[-6.442136,-9.058912,7.150968,-1.775336],[6.945141,-7.471057,5.435738,-5.953244]],[[-9.481147,-0.724635,-9.159190,7.817668],[-2.606817,-4.208009,6.479642,6.569625],[7.151460,2.919462,-5.655325,-0.838040],[-9.346447,-0.237069,5.175553,-9.734586],[-6.639398,-1.682713,9.330047,3.363788],[-2.246597,7.928071,7.766438,3.966510]],[[-1.104737,1.165569,6.757237,-7.872173],[8.475447,0.667767,-6.056715,-7.410736],[5.863215,0.189216,-3.125706,-0.091129],[-9.643690,-7.131527,-4.200850,4.511963],[0.620615,2.937555,-7.714016,-7.333846],[-2.012275,2.277724,8.037233,0.500050]],[[-0.921443,-3.010905,2.615493,2.472577],[-4.069199,3.509912,0.211742,5.949721],[9.084603,9.060774,8.636500,4.536384],[-6.484731,-8.170294,7.914848,-8.311492],[-6.310716,-4.810133,0.743969,-6.504856],[-1.550534,-7.764651,-8.755901,-7.804578]],[[-2.674772,8.851312,5.497231,8.284282],[3.212146,-5.102290,2.418782,-8.899569],[7.338587,0.775380,-0.330525,-6.409301],[0.797118,6.387431,-1.474520,2.034448],[1.926809,-2.962372,-1.400058,-5.330592],[5.667910,-7.755368,2.985530,1.779241]]], dtype = "float32")#candidate|3507|(5, 6, 4)|const|float32
bop_3508 = relay.add(call_3504.astype('uint16'), const_3507.astype('uint16')) # shape=(5, 6, 4)
bop_3511 = relay.add(call_3505.astype('uint16'), const_3507.astype('uint16')) # shape=(5, 6, 4)
uop_3520 = relay.sqrt(bop_3508.astype('float32')) # shape=(5, 6, 4)
uop_3522 = relay.sqrt(bop_3511.astype('float32')) # shape=(5, 6, 4)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_3523 = func_1235_call()
call_3524 = func_1235_call()
bop_3525 = relay.floor_divide(uop_3520.astype('float32'), call_3504.astype('float32')) # shape=(5, 6, 4)
bop_3528 = relay.floor_divide(uop_3522.astype('float32'), call_3505.astype('float32')) # shape=(5, 6, 4)
func_3345_call = mod.get_global_var('func_3345')
func_3348_call = mutated_mod.get_global_var('func_3348')
var_3530 = relay.var("var_3530", dtype = "float32", shape = (70,))#candidate|3530|(70,)|var|float32
call_3529 = relay.TupleGetItem(func_3345_call(relay.reshape(var_3530.astype('float32'), [5, 14, 1])), 0)
call_3531 = relay.TupleGetItem(func_3348_call(relay.reshape(var_3530.astype('float32'), [5, 14, 1])), 0)
bop_3538 = relay.subtract(uop_3520.astype('int16'), relay.reshape(bop_3525.astype('int16'), relay.shape_of(uop_3520))) # shape=(5, 6, 4)
bop_3541 = relay.subtract(uop_3522.astype('int16'), relay.reshape(bop_3528.astype('int16'), relay.shape_of(uop_3522))) # shape=(5, 6, 4)
func_1077_call = mod.get_global_var('func_1077')
func_1082_call = mutated_mod.get_global_var('func_1082')
var_3544 = relay.var("var_3544", dtype = "float32", shape = (72,))#candidate|3544|(72,)|var|float32
var_3545 = relay.var("var_3545", dtype = "float64", shape = (198,))#candidate|3545|(198,)|var|float64
const_3546 = relay.const([7.443811,1.612984,0.931009,-0.590973,4.485429,-3.656332,-1.625581,5.116939,0.696433,-2.485071,-4.559190,0.251337,7.490750,1.746022,8.960054,-8.487358,4.812687,4.813182,-0.469311,-8.763874,-6.889946,3.061842,-4.529920,2.340427,-4.272524,0.259537,-5.165969,3.460455,5.602704,8.593598,-1.833412,-1.415659,0.726478,-0.345774,0.957035,8.432046,6.773460,-9.315333,7.944851,7.286242,1.731539,-9.905454,6.871649,-5.028480,1.670373,5.419432,8.296313,1.155569,5.367098,-1.226106,-6.749351,5.920477,-7.982323,1.480595,6.211631,8.163345,-9.918213,-9.976337,0.695497,-1.661184,-9.936491,-6.263032,7.957913,-4.849835,1.985288,9.440972,-0.063654,-9.308462,-8.476940,0.662875,-6.186026,1.574457,-3.709415,3.595385,-5.139050,-8.618611,5.568760,-9.501173,-7.122835,-8.766073,7.005671,-3.694841,-8.841135,-6.017982,-2.318979,-4.639567,2.469571,2.843211,1.853459,0.489567,5.788173,0.453314,1.630008,4.457000,-3.155156,7.216653,-4.916906,-2.620407,-1.966785,3.154312,-6.879157,-2.012409,1.987491,0.117117,-1.525872,-7.791304,3.018145,-0.714500,4.853359,-2.141990,1.194251,0.368706,1.168076,-8.248234,6.024624,0.469852,7.317121,0.819394,5.789328,-7.789214,2.709716,7.113765,-1.643602,3.667215,-9.931741,4.135833,-4.415502,6.073690,-7.464618,2.024397,8.854573,7.205387,-0.966028,-1.737311,-9.415228,7.157235,0.583017,-6.105386,7.948269,-8.944447,9.678853,5.492849,-3.736227,-9.364641,8.025518,-1.891315,-8.210463,6.524992,-2.258379,-8.919385,-4.524364,2.176822,5.927818,1.369229,2.168763,-4.880028,-9.829992,-3.865231,-4.850989,6.702645,6.857853,-8.067232,-9.626833,-6.096311,0.872465,9.401750,6.141316,-6.895244,-9.395719,4.597672,4.240413,-3.834655,8.919620,-4.941712,5.487708,7.760091,-7.351576,-2.862702,-8.211180,4.595318,-3.857222,8.972896,6.556413,-3.171038,-4.957160,-9.069863,0.180960,5.134043,9.020719,-4.048216,4.022922,1.135056,3.295434,-5.423594,6.343965,-8.105845,-2.040968,3.323620,4.272902,1.895541,6.846772,5.713636,5.413454,2.751000,-4.439174,5.541091,-2.521796,1.810492,9.576502,2.792262,-8.159021,-1.650318,4.541714,-9.017853,7.965841,-6.480965,5.731777,2.135885,-5.558919,-2.918288,-5.629370,5.294066,-3.687150,-7.365772,-8.715229,-8.369816,4.712089,-4.519465,-8.426553,4.462386,-4.305750,-9.730537,2.377822,-1.528100,4.560606,6.213164,9.195243,-2.772732,0.482698,7.468939,-5.312565,-0.364729,-4.658231,-4.676135,-7.236407,-5.204394,-6.989871,-3.366644,-7.502777,0.787122,6.806626,0.549454,6.897322,5.433978,-3.206525,2.621606,-3.630381,4.254882,-6.189679,-7.513011,2.515187,7.374528,5.154810,-6.590319,1.828177,3.641553,-0.658152,2.776555,-2.070496,-2.181267,1.746645,8.804886,-0.577055,-7.007299,1.387720,2.636100,3.317947,-0.920436,-6.943782,-3.420925,-8.254007,8.980271,-0.340743,1.499676,5.426501,3.853362,3.526850,-1.436446,5.820942,-0.452950,7.790026,-8.520839,-9.898013,-9.730727,7.826160,-9.655712,-0.192915,-0.709929,-8.771787,-7.913219,6.683762,-3.731769,-5.307197,-8.148761,8.037553,-0.851112,-5.950894,5.042793,5.240004,-7.581049,-0.459355,5.149472,-3.764626,9.215806,5.817036,-6.892696,-5.164500,7.017191,0.352076,-8.549533,-6.813607,-8.088162,1.412173,3.361677,7.381361,9.483169,5.935100,-0.036636,-6.784633,-8.937854,8.365948,8.417428,-3.507713,3.685278,-4.673395,-3.215032,-6.813344,-5.077202,5.949225,7.635160,7.099228,-7.789149,6.756162,-6.097357,0.695634,5.361577,5.976423,-2.592201,4.573349,0.641093,5.416938,-6.967118,-7.607635,-6.827168,-4.309203,-2.409711,-0.112676,-5.249013,-3.026852,-5.880067,-1.539875,-3.239567,-9.885171,8.329814,-4.404891,5.660169,-3.779151,-2.133013,-2.128602,-5.096143,-4.659047,-8.500888,-4.530843,-4.214648,2.696783,-3.735595,-4.643782,3.502317,8.483952,-0.182725,-0.198611,9.888994,1.489374,7.399974,-7.436208,-7.635065,5.935882,-1.979292,-8.271571,-7.289173,1.305608,9.818902,8.514768,-2.648788,8.537553,8.178747,-5.441976,-9.745212,-0.959949,-0.258130,-3.640331,4.037055,4.253583,3.318224,-5.291846,-3.307208,-1.668841,1.464808,-0.973694,-1.918319,-7.790689,5.798743,-5.296600,-4.237123,-3.129524,-9.248136,6.112204,-9.552621,7.518235,-7.773604,1.609885,3.326159,-3.606512,6.108697,-5.953620,-0.767126,7.268792,7.164339,-1.051074,-3.224963,-1.573755,1.542539,-3.444378,1.706728,5.294934,6.855407,-9.652712,-9.645991,8.167611,7.456282,0.885214,-6.350218,-9.187718,-1.668754,3.000389,5.926474,7.676579,-3.639174,-4.851962,1.646141,9.308560,-8.784786,2.357381,3.486607,-9.499667,-3.414187,-5.408006,4.606228,9.848401,7.141726,-6.378250,-1.626548,3.957561,-6.123081,-5.404558,2.727871,-8.811108,2.026368,-1.658075,4.930742,-1.504814,-7.211979,-3.496496,7.815623,-7.236039,6.695736,5.369217,-6.353566,-0.987187,-4.103831,2.169582,-9.870491,5.290810,8.605324,-3.794498,-8.828934,4.574013,-7.706990,-8.874192,0.709944,-5.172167,-5.881432,-0.125838,6.909387,8.974353,-4.885064,0.794907,-3.477116,-9.595644,0.501534,-6.409386,4.401402,-6.752997,-2.067019,0.424297,5.643168,-8.456520,8.102554,5.489403,7.699053,-8.976006,9.072775,-8.547503,-4.468159,2.402351,-7.074680,-5.821965,1.969091,5.540805,8.191635,6.310400,-3.905081,-1.545057,8.579907,-5.793915,-0.446898,-5.046162,8.230845,-7.627704,2.165235,3.515819,7.383415,-8.588120,-1.975153,-4.285765,-2.795641,4.465204,6.164008,9.633470,5.146745,9.840189,-9.141209,5.212845,9.355674,-2.704456,8.965100,-7.939819,4.266430,-6.752672,-4.098198,7.852294,-5.599728,7.073328,9.716825,-2.283300,3.640120,-0.949993,0.379015,2.841641,7.968254,-4.051919,9.058853,-3.353335,4.541015,-2.883476,8.392404,-8.385241,-4.578666,-1.858959,-7.499776,-7.515345,-4.882713,-7.634783,-4.554334,-8.819072,8.922658,3.560850,8.395634,1.760206,-1.335963,-3.599043,7.316118,6.830131,3.558148,1.283612,3.893717,9.509425,2.549573,5.566415,8.398784,4.966057,-9.307000,7.225793,-5.721619,-3.097817,-5.972228,6.909643,-1.501438,-8.495553,-9.483509,5.486030,2.540218,8.497764,-4.907991,2.469976,5.263852,-7.731792,4.780028,9.359608,-6.330348,-3.584955,2.720068,6.157642,-7.171170,5.946930,5.312495,-5.288236,2.208543,9.997385,1.847625,1.327625,-0.440642,-6.980541,7.357168,9.245193,-3.639370,-2.501126,1.444002,5.669105,8.925228,-2.797757,4.033490,-1.877225,1.040102,2.201636,-4.791583,3.205851,-7.234979,-8.694539,0.828918,-4.879557,8.150112,5.109284,-2.030030,-9.827069,7.732995,-0.271754,-9.426457,8.013380,1.259022,-3.885646,8.503048,-2.528483,1.019675,0.009125,-5.970598,-2.003786,3.222801,8.646448,-5.438767,6.854842,-6.574351,0.672244,-5.989152,-3.486536,0.428556,9.199061,-3.864210,-3.098048,-7.055375,6.205351,2.058083,-4.665417,8.417602,-0.617230,-5.693785,-9.757300,-6.228640,8.944696,-5.578611,-1.298205,-1.768766,5.008145,3.347519,-0.188034,3.349023,-4.690099,-9.804424,6.795663,-1.113918,1.701035,-4.352054,-3.415133,6.872335,9.992180,2.557178,4.312619,-2.772143,2.614323,9.309494,9.226373,6.671283,5.763242,5.423023,2.617031,5.424770,-0.447779,-1.471501,-5.266401,-6.815820,-9.961512,5.571796,4.845029,-0.134458,9.576934,-5.733531,-3.109952,-2.167808,5.132581,1.877568,-4.820512,-4.448668,-5.266220,0.904911,-7.488775,-1.163664,8.941497,1.626259,1.334176,5.851499,2.405528,-7.312054,6.802068,8.018606,-4.378528,-1.640466,9.038839,5.963319,7.199137,-4.156824,-2.109955,-8.528612,-2.260905,-9.520882,3.675551,-9.496030,6.082421,8.349748,-8.981572,-9.537002,8.743292,4.057982,0.011508,-8.528303,5.116597,-4.784774,8.065530,6.104556,-5.347229,-0.812068,-0.534903,-1.008778,4.418305,-5.391190,1.628770,-7.964192,0.285458,0.594081,-0.544655,-5.634580,4.945262,4.343719,8.568079,-4.537318,-8.754864,-2.874807,-5.064179,-6.950802,-0.657434,4.125352,1.135845,-0.610720,4.220961,6.869089,1.298522,0.011607,8.042676,9.148837,3.298028,-4.479100,-9.577701,-7.138449,-9.716301,-5.562473,-9.771223,-8.063804,7.471559,-5.426048,-9.302286,-5.228950,6.707955,-0.841588,-0.006056,-3.134611,-8.648549,5.861252,5.541992,9.693390,2.260856,-9.248316,2.492306,4.581043,4.797133,1.487222,-9.505785,6.765954,7.769889,-1.944606,9.100551,1.922208,9.547180,9.195764,2.198030,-5.034148,-8.587025,-2.155579,2.719132,6.004955,6.582700,9.496565,-9.856924,-5.856076,-0.162696,-1.805230,5.583445,9.594763,-3.292926,9.085430,1.247841,-9.302964,-8.135535,0.761827,5.710733,-5.960145,3.381854,-3.020743,-8.108210,3.465671,0.670445,-3.629382,-3.564552,9.585377,-9.852228,-3.098087,9.276529,-1.375171,2.514223,2.440864,-4.808328,7.956980,1.973168,5.928382,-2.905371,1.602688,-1.879184,-9.799787,9.748463,-1.519994,-8.142442,-2.449939,2.841689,0.577545,-2.521594,6.944438,-8.602684,5.413118,-6.763086,7.470543,3.382380,-0.379531,0.469009,-1.655811,6.726515,-6.142390,7.433914,8.230497,6.783376,8.252572,6.590373,-2.657226,-1.187312,-6.727639,3.643144,8.121103,-4.986803,-0.845762,6.623989,-1.998878,6.132581,-4.505801,2.589694,-1.401239,1.633702,5.497702,-1.073031,-5.559438,7.845009,-5.079403,0.053006,5.874864,8.550116,4.489658,9.279925,2.819588,-9.360719,1.608660,4.916869,8.951373,-6.882479,-6.431074,-3.215705,0.771441,8.047191,-7.167477,1.322653,-5.195299,-5.159597,8.449662,5.389828,-8.564555,8.861510,-9.149783,7.980066,9.867591,-5.808071,8.942465,-7.181258,-7.501216,-4.653913,-0.046108,-8.296723,-9.515457,-1.069066,-2.475987,3.658534,-4.605756,2.538631,5.437098,-0.376753,-1.373990,-1.895651,5.169186,-8.579310,-9.491771,7.030613,-6.486002,2.983063,-0.754469,8.522930,-3.586200,7.670640,9.939852,0.398679,-8.258850,5.778822,-5.481635,-1.907583,-8.425304,1.697145,6.049198,-7.499371,-5.078236,-9.009613,9.207788,-3.034691,-3.443505,-9.121848,-4.603216,7.793060,8.765354,6.901988,-5.030962,-9.339945,-7.490876,-3.958963,-0.871202,7.149282,-6.963960,9.950261,4.538422,1.299826,5.077352,2.442726,5.027770,-0.557591,9.038713,-2.299158,1.944124,0.967079,-4.689286,7.567618,-2.874716,-6.754169,5.444237,-2.768470,5.575017,-5.998451,-6.468420,-1.898896,-2.055417,-2.006551,-1.482984,-7.176077,1.398450,3.113285,2.363490,-2.483104,0.596139,-1.927811,-6.696849,-9.951150,9.571066,0.460074,-6.016543,1.226395,-2.081098,5.005899,8.987456,9.202644,0.876992,-4.965701,3.275602,-8.287471,0.446816,3.438454,6.423308,0.972485,4.682929,-9.133585,-1.098299,-1.920147,-6.291111,5.269973,2.267665,-9.672634,3.705191,5.702416,-8.204671,-4.087988,7.702469,5.791996,1.334301,9.609864,1.760430,-3.908690,6.230040,0.421638,-3.261859,3.849953,1.249704,-3.911183,5.076124,2.784969,9.778812,2.120098,-4.519941,-5.939074,-8.979750,-3.666193,2.681469,3.883174,7.815132,-3.345347,-5.002531,-2.938046,-8.228979,-8.234809,-2.616586,9.649677,1.449817,-6.756432,7.348044,0.916101,-9.044029,-2.863071,0.665554,1.270963,-2.696446,-2.769778,1.985569,-0.416116,-5.757012,0.715864,-3.768226,-6.336256,-0.703782,2.470205,5.190246,2.282261,-1.150411,-7.910529,3.261908,7.345592,8.216933,-4.863765,-6.751120,-8.290371,-8.216567,6.729781,-4.375870,-1.541690,6.178024,9.177176,0.588680,-5.811535,-1.824196,1.580762,-9.699085,8.027139,-1.729311,6.767624,-8.373212,7.891104,4.891693,1.393744,1.278389,-9.211365,-9.727480,2.178016,-6.914132,8.762721,-4.966147,2.184552,7.196809,7.707294,-1.212579,-7.499174,-8.416784,5.447956,7.372521,-7.795450,8.446649,1.204153,-5.818370,5.451232,-8.524431,8.325636,9.077386,-2.005470,6.796981,-0.957035,-3.759380,-2.255000,0.495681,-5.755878,-5.522861,7.168042,-2.623568,2.590856,8.515885,5.042432,-9.210066,2.866488,3.057901,-8.323443,6.187056,1.330307,-2.217539,-3.049081,2.940757,-1.272473,7.433989,4.056205,-8.235192,-7.626567,8.478278,7.145774,-0.839428,9.070587,-4.479130,-9.967478,4.789695,0.567669,2.647430,4.330580,6.689389,0.963601,5.881595,-5.651681,7.961381,8.591344,-5.692770,-7.128793,3.373880,6.564635,-5.338959,5.220072,4.469140,6.038871,4.363244,6.361652,-8.189195,7.450513,-0.994413,0.405933,5.917895,-0.053786,8.743415,-3.042165,9.535199,2.488689,-3.028238,6.107904,1.813963,-5.341130,2.319085,1.100554,-7.224276,2.561821,-2.168773,0.201678,9.077040,-6.202734,-8.194912,-0.900574,-6.447452,3.796780,-2.199395,-4.164135,9.800340,-0.411062,-4.539179,-4.820807,2.831731,5.862586,-1.707894,6.243386,0.156139,4.085135,-6.299067,7.351154,4.813297,7.231659,8.305782,1.001182,8.781609,2.408405,-3.383177,-4.992669,5.421406,5.170684,-7.037742,2.186715,-9.011346,-1.775546,-0.136722,1.324423,-9.351220,-3.213343,-8.676898,4.001984,4.979732,-0.310079,-9.029107,4.948477,-9.068999,-4.555919,8.545763,-0.874661,-2.668605,5.500069,-8.583869,-3.564490,6.539352,-9.672419,-9.856773,6.340879,-2.705432,8.435856,7.092440,-8.331652,-6.609851,-9.791037,4.990839,1.841135,8.266558,-8.688829,-5.287205,9.680506,7.485985,6.074300,8.597911,-7.834436,-9.789236,-5.327129,-5.482633,-4.647942,2.906359,9.047137,6.220492,-4.210626,1.791583,4.348757,6.658089,6.749816,-7.467611,5.880080,-4.895536,-9.367362,7.931603,-1.418202,6.985173,-8.180912,1.980944,4.250580,1.977366,-3.352429,1.015588,-8.781738,-3.551099,8.857639,-1.625717,-7.696817,-5.125596,-0.218283,2.066335,-8.296310,1.416714,-8.744435,-3.503712,9.828911,9.690554,-3.669556,2.600224,-6.529243,-1.241442,0.572259,-0.981042,6.696656,-3.436523,-5.911550,-6.696123,-3.193968,-6.391434,2.022087,3.314689,-9.894249,-8.619780,3.858877,7.356074,7.719927,3.027135,-8.969374,-3.897725,4.394894,3.503073,-9.634579,-6.603438,1.395457,6.256192,2.616086,-0.099385,-1.527776,-2.592207,-6.070951,1.352171,5.031851,-3.084763,-9.372874,-1.648448,3.603557,1.582291,1.732235,7.431751,-0.987925,3.894381,3.455797,2.536520,-3.589759,5.629258,1.107972,-5.269666,8.241936,6.032913,8.894870,1.732562,3.775064,2.497685,-3.419834,-2.981854,9.308397,-6.532296,2.174710,-8.366238,1.069528,-0.213417,-8.551463,-4.672724,-3.956210,4.398889,8.689855,-9.581601,-8.095844,5.580500,-5.284056,8.140953,-3.715634,-8.550345,-7.693376,5.107136,-3.364501,-6.853975,9.810338,8.188684,-8.318320,6.197013,1.847699,3.384129,7.239608,4.435530,-2.664605,-1.535763,-0.714600,-0.916308,6.247934,1.509023,3.626953,9.416953,-7.971924,-2.588642,2.210888,-9.537577,-4.956392,-2.350372,-2.356583,4.119960,5.005487,2.431610,8.615882,-2.628923,-8.085747,-3.522242,9.896179,-9.109050,-2.736128,2.146068,-9.496652,5.969574,8.135156,4.915917,7.171543,-9.017050,-2.243622,-7.258528,5.503057,-9.007579,-2.944471,8.170106,-9.559473,5.091869,7.032549,9.864876,-1.820896,-4.843081,-5.921631,-1.907647,-8.964532,-9.022287,-7.101763,-0.458904,4.049299,0.948951,-1.470169,-1.805357,-3.403604,0.283161,-7.644020,-6.038167,1.391171,-5.384063,-3.249666,2.412834,0.487347,8.208428,1.230171,8.261340,-6.618427,-1.385147,7.755487,-4.960446,4.504801,9.794315,-2.921197,-3.550883,-3.570545,1.123560,8.138223,-2.067061,1.681200,6.903791,5.302049,8.439718,1.378159,-0.646554,-4.150127,9.113675,8.499720,0.179097,-4.710687,3.011461,-7.669539,2.898229,-9.940553,-3.445009,7.204691,-3.045467,-0.671153,-6.964850,4.859084,9.991868,7.028218,0.668000,5.191443,-7.602705,6.560295,4.775941,2.492052,8.126705,-5.160829,3.165397,2.425917,-4.615965,2.761373,-7.959674,-0.602277,8.326898,-5.704108,-7.982063,7.274468,5.408694,-5.123960,5.945188,2.355195,4.554034,-4.265859,4.011584,-7.759930,-3.830279,-2.812859,0.545402,-1.238827,6.220211,2.081358,-6.190004,-4.833954,3.688327,-9.569696,-3.869198,-0.490522,8.699780,-2.041792,-1.242447,3.668956,0.360858,6.559445,-3.878612,0.953713,-3.279495,6.273862,7.581354,-6.346545,-0.266154,0.259023,-1.161954,2.489531,4.186790,-5.041217,-2.584126,-3.875741,-0.259569,-9.378552,5.333393,-8.662653,1.652260], dtype = "float64")#candidate|3546|(1584,)|const|float64
call_3543 = relay.TupleGetItem(func_1077_call(relay.reshape(var_3544.astype('float32'), [72,]), relay.reshape(var_3545.astype('float64'), [198,]), relay.reshape(const_3546.astype('float64'), [1584,]), ), 0)
call_3547 = relay.TupleGetItem(func_1082_call(relay.reshape(var_3544.astype('float32'), [72,]), relay.reshape(var_3545.astype('float64'), [198,]), relay.reshape(const_3546.astype('float64'), [1584,]), ), 0)
output = relay.Tuple([call_3523,call_3529,var_3530,bop_3538,call_3543,var_3544,var_3545,const_3546,])
output2 = relay.Tuple([call_3524,call_3531,var_3530,bop_3541,call_3547,var_3544,var_3545,const_3546,])
func_3558 = relay.Function([var_3530,var_3544,var_3545,], output)
mod['func_3558'] = func_3558
mod = relay.transform.InferType()(mod)
mutated_mod['func_3558'] = func_3558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3558_call = mutated_mod.get_global_var('func_3558')
var_3560 = relay.var("var_3560", dtype = "float32", shape = (70,))#candidate|3560|(70,)|var|float32
var_3561 = relay.var("var_3561", dtype = "float32", shape = (72,))#candidate|3561|(72,)|var|float32
var_3562 = relay.var("var_3562", dtype = "float64", shape = (198,))#candidate|3562|(198,)|var|float64
call_3559 = func_3558_call(var_3560,var_3561,var_3562,)
output = call_3559
func_3563 = relay.Function([var_3560,var_3561,var_3562,], output)
mutated_mod['func_3563'] = func_3563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2841_call = mod.get_global_var('func_2841')
func_2842_call = mutated_mod.get_global_var('func_2842')
call_3598 = relay.TupleGetItem(func_2841_call(), 1)
call_3599 = relay.TupleGetItem(func_2842_call(), 1)
var_3616 = relay.var("var_3616", dtype = "float32", shape = (5, 3, 4))#candidate|3616|(5, 3, 4)|var|float32
bop_3617 = relay.power(call_3598.astype('float64'), var_3616.astype('float64')) # shape=(5, 3, 4)
bop_3620 = relay.power(call_3599.astype('float64'), var_3616.astype('float64')) # shape=(5, 3, 4)
func_1035_call = mod.get_global_var('func_1035')
func_1038_call = mutated_mod.get_global_var('func_1038')
var_3627 = relay.var("var_3627", dtype = "float32", shape = (336,))#candidate|3627|(336,)|var|float32
call_3626 = func_1035_call(relay.reshape(var_3627.astype('float32'), [14, 12, 2]))
call_3628 = func_1035_call(relay.reshape(var_3627.astype('float32'), [14, 12, 2]))
func_999_call = mod.get_global_var('func_999')
func_1002_call = mutated_mod.get_global_var('func_1002')
const_3644 = relay.const(5.552493, dtype = "float64")#candidate|3644|()|const|float64
const_3645 = relay.const([4.900930,4.655674,5.286870,-5.822319,-1.363120,-8.771320,-4.452369,1.142940,2.363116,2.621176,-5.723140,9.859366,-0.432074,8.336442,1.698522,-7.511101,3.652486,-5.038007,-1.525265,-3.023249,2.870080,-4.430022,-3.259451,-4.982028,-6.026027,9.082928,9.976762,-8.854237,6.400034,-2.222060,8.980509,-7.834518,-6.308267,6.600254,3.683050,0.227470,-0.169608,-7.308673,-9.602254,8.445907,-4.051478,3.903216,1.195253,-7.399818,1.512453,-0.277549,7.588852,4.753529,9.122225,-6.306781,0.861960,8.351810,1.792631,-6.340121,2.030747,-3.682460,-2.427051,0.367447,7.045957,-1.212567,-3.120725,7.395207,3.219583,-1.036698,3.899014,4.030385,-6.903969,4.722910,-4.576406,5.957642,8.183563,-4.780026,2.315186,2.008792,1.252602,7.701693,-7.802282,5.410399,-8.755592,0.353640,-7.922915,-2.034485,9.384984,-2.835367,2.972101,1.957206,9.124633,-8.910947,-8.033656,5.763644,0.313573,9.554963,4.482406,-0.003008,-6.407258,7.132019,-8.608536,-2.217364,9.945975,-3.098798,-6.985985,6.713599,3.292887,0.160722,-9.425695,4.935664,2.463942,2.928894,5.380131,-5.743839,0.981011,-8.796295,9.422091,-2.494330,8.231382,2.153820,-6.458030,4.701849,-1.948884,2.284809,3.773343,4.925577,-9.392244,7.914514,-4.296480,5.464943,0.548478,7.068525,-0.536609,-4.779999,-9.345801,-1.994859,-0.874257,-2.716196,-1.636019,0.824887,-2.667562,-9.090926,-7.785827,-5.272937,-4.291828,-9.008240,2.552406,-2.548333,5.228998,3.191311,8.374965,9.356289,7.722929,-9.045244,5.847556,1.618436,-5.973015,-0.250868,6.341439,3.691090,2.342921,-4.730114,-1.823047,-9.834945,4.144851,7.360067,7.774582,-4.842508,7.836083,-4.819647,0.743837,-7.746837,-4.760832,-3.676204,-5.422333,3.909685,2.410941,-3.120333,-7.020709,-6.455767,2.891432,-8.267693,-7.625733,3.520740,-2.594069,-3.644131,-3.472033,2.938576,-0.256557,-5.684909,-1.111567,-3.950257,9.802277,5.531954,1.318655,4.769351,0.130215,-0.869446,5.297378,9.924914,4.283112,9.877293,6.282427,-9.023936,-5.868334,-6.443696,-5.824092,-0.707419,9.827571,-8.858613,2.517652,4.370750,7.456811,-1.679273,-0.422454,-6.964855,-5.218039,6.207719,8.655769,0.890200,-8.315736,-4.829207,-6.755770,0.540945,-1.954490,-5.450945,3.056408,-8.806197,7.243386,2.200097,1.715657,-5.812654,6.761891,4.644181,1.383917,-7.476701,-9.248049,0.007278,-7.014495,-8.984417,-4.802220,-3.564565,7.070372,-5.232473,-9.742720,-1.040588,-2.811277,6.580148,-3.289832,-2.097735,8.532163,6.653920,9.022111,-9.872372,2.390934,-9.985727,2.712148,-6.518377,2.817595,-3.817335,-6.249241,4.048714,2.320748,3.852602,9.042791,2.327367,-3.862773,-5.744667,7.856036,0.170404,-5.900170,-3.372314,8.358198,-8.049978,-9.164539,-8.012302,1.828679,4.037729,-6.389826,-1.485877,-2.846963,-8.796023,-3.967610,-6.863195,5.738023,9.614724,2.604570,4.556908,-5.002689,7.803090,-6.405934,8.660306,-7.148450,-1.484885,1.872092,-3.452106,0.828556,2.017284,-8.186036,4.212735,4.311671,1.439165,5.569181,4.478079,-5.386742,-6.010331,-9.299612,-9.131206,-0.798361,5.430620,1.434644,5.867726,-9.330161,-9.560912,-4.796579,-2.192540,-3.696464,-6.543010,8.593946,2.149936,-5.453977,-3.523260,-3.994871,7.309509,-1.786782,-1.704445,9.125616,-1.078644,-4.799027,-0.585455,-5.014188,7.233349,-9.904116,-8.223087,4.130734,7.179783,6.381831,2.423362,-2.339808,-7.571945,3.018277,-6.745307,-5.215002,8.031416,4.820183,7.884678,-8.427139,7.784954,-7.827105,-2.963280,2.676819,-9.899409,-7.826923,-9.466003,-8.736713,9.665584,-2.609341,-3.855254,-1.256566,6.352692,4.914045,7.246798,3.376922,-9.662968,1.938467,-9.188202,-5.942965,3.122278,-5.095405,9.985705,4.217686,-0.806293,-1.141421,-9.517782,-5.102395,5.375863,3.964689,-5.747635,5.001834,-0.897772,4.268291,6.783826,7.273810,-6.808211,9.891610,8.993094,-2.375609,-7.270431,-9.947125,8.296141,-6.309869,6.699016,-3.146437,7.676245,-7.423472,-7.195844,-8.810122,-4.975395,-9.353511,3.786685,-6.468209,-8.932520,-9.203666,-7.727914,-8.325616,-3.914535,-5.876563,-4.569231,5.764685,-1.579480,2.605974,4.415464,-1.691796,-2.324187,8.626599,-3.632444,-2.725098,-9.910184,0.784475,0.897837,8.035864,3.553901,2.317209,-4.496202,8.530598,2.981506,8.925171,-5.598030,-2.862507,-3.176280,-7.406757,3.053058,-2.729203,0.669529,-5.789104,5.816341,-8.817174,8.020752,-7.417081,-3.749867,-3.986654,-4.002948,5.134094,-4.475460,5.543961,1.040898,8.160640,-6.471294,-2.711290,-5.073127,9.550271,-7.649860,-0.451933,1.315147,1.902898,-5.119244,9.570899,9.187802,3.066388,-9.517905,9.117499,-8.905280,8.583674,-7.360509,-0.157594,-0.083112,-5.918214,-7.871395,4.891797,3.942492,5.234238,-1.716830,-6.151604,2.788461,2.745605,6.069393,4.585569,-8.456138,-9.247613,3.537904,6.192029,-2.080644,-5.535214,-9.257257,0.182343,8.141472,0.069151,0.259643,7.452973,2.327412,1.452858,6.380679,-1.237171,5.192369,-5.255464,6.316620,-4.862305,3.105647,-2.296032,-0.247295,0.610835,4.537259,-9.010751,0.747123,2.125545,-8.101133,4.082870,-6.912922,4.459376,-3.761661,-5.180113,1.462783,-4.949427,5.033400,-5.245544,-8.551963,2.387084,-9.101282,-1.959753,-2.594903,-6.697197,-7.564707,-6.713362,6.185321,-0.530090,-3.014166,-9.786874,-0.359117,-3.176209,8.183139,2.736857,5.496976,0.110435,-5.211227,6.240657,-4.828026,-8.573971,3.569186,0.044709,-9.292998,-3.350297,-5.454955,3.012515,3.298118,-3.703094,-5.385430,-6.325871,2.627819,-3.673250,-5.852907,-5.155093,9.105143,5.629793,6.056593,-9.196752,3.538250,-6.370454,7.576609,-7.849843,-8.776451,2.138354,-0.149831,-5.297801,-0.920999,-6.569516,-5.053832,1.428789,6.988840,-9.173783,1.320256,-3.813512,2.100242,-8.267152,-1.008748,-0.714680,2.853247,-8.475898,9.776626,8.095940,3.477757,-0.404274,-6.310577,8.137385,5.279748,2.040494,-0.583262,5.422348,-3.678675,-7.830507,-5.435464,9.854231,6.371185,4.763424,-9.921601,-5.826286,-3.438844,1.742434,-2.178161,-5.304506,-9.099628,-4.058829,-9.942941,8.760949,2.747724,9.892335,-5.988830,5.113964,-5.864412,-9.508018,-9.040728,-8.845466,-5.904620,3.849163,9.612608,-1.296516,0.469636,-5.627807,-5.935041,9.791526,-1.957161,7.090522,6.685655,-9.989981,8.928057,7.974465,4.690034,0.304170,7.337159,-9.466784,-6.630416,4.019750,3.671499,5.089947,8.772406,1.158948,-7.088801,-0.238870,7.233464,9.282087,8.568874,-0.351767,1.877606,-2.824219,7.536023,9.421879,3.208363,0.735362,-5.488475,-4.555584,4.498042,7.165779,-9.219445,-8.468877,-7.304452,1.154467,-0.557790,-4.774421,9.005166,-7.328318,6.949990,-4.984235,-6.191094,0.147408,1.710958,-0.579875,7.369462,-9.446382,1.603131,-1.012881,-7.480056,-2.790687,4.043765,-2.522628,3.446181,4.374383,-5.949956,-7.877113,-6.455115,-8.143040,2.367519,-2.228677,-2.306903,3.612570,7.435874,-2.102083,0.626424,-2.881957,8.577132,4.222329,-2.907260,-4.169345,-2.735851,1.339105,-6.060869,-1.891711,4.573755,7.785995,3.747895,0.400635,-9.779590,0.258000,-4.270444,-0.847582,-7.723223,6.122033,8.881698,-5.259321,-8.465414,-9.214406,3.804171,-5.349614,1.814991,-6.654084,-6.300325,-6.978801,8.997701,-8.680910,2.081891,-4.745078,-8.676529,-0.814779,9.735010,-0.565289,1.617581,-8.159360,8.378167,3.311769,-7.733378,-6.462923,4.506078,4.522094,-4.003828,1.129524,2.816776,2.033517,8.536550,7.130827,-9.684028,-3.142148,-6.021149,-5.411687,1.782929,-8.604214,-6.026085,4.494860,7.659118,-7.765815,-8.889840,-8.502377,4.565536,-4.089223,5.368543,2.229950,7.475085,4.766812,9.943746,5.675378,0.171304,-4.432961,-0.139343,-5.005950,5.439757,1.742869,-1.363929,9.933401,-6.213965,-1.660575,6.344149,7.173452,4.673689,-9.281029,1.816530,7.307658,3.805760,-0.041039,1.165801,-4.870012,5.884133,5.542565,9.213074,-3.204876,-5.836579,8.818234,-2.094091,-0.792692,-5.880388,-5.022689,-1.201011,-2.499696,-6.393766,-9.414754,1.879380,-0.207459,-3.003436,-6.027334,-8.052834,4.392369,5.855875,-4.345075,-5.986104,0.798260,6.923740,-9.836563,-9.104040,4.632155,9.660600,-4.745334,-5.270128,6.579335,-0.128247,-0.833080,-9.163662,8.635661,4.643821,-9.411964,-2.344775,-9.404016,7.028520,-1.917385,7.696462,-3.344615,7.920311,-7.579591,5.940055,-4.633676,2.274140,-2.496234,0.728404,-4.253945,7.402789,-6.728198,-3.787879,1.780910,4.584036,4.678480,-9.701305,9.346639,8.576330,2.811573,6.391976,-8.857394,2.060778,4.820904,3.142198,8.106517,-8.739936,-9.081699,-3.636479,-7.569829,7.323536,-3.348382,-8.015080,9.806191,3.172833,-7.336520,0.532579,-6.711835,-1.291760,4.777284,7.942152,-2.369606,-7.523048,-6.678991,2.734188,-5.598013,2.161168,-2.930616,-5.800607,6.248123,-4.433244,-6.340413,-9.640092,-4.322045,-1.405155,-8.439014,-6.587868,1.280834,-7.283504,8.123090,1.363829,-9.591285,4.372083,-0.363637,0.977985,1.694305,3.572170,8.692106,-6.491634,-0.797862,3.251744,-2.623909,-5.270873,-4.125671,-8.945877,-1.832962,3.008907,-5.318731,1.743981,-6.312075,-1.926732,-8.593915,4.107234,4.318784,-7.981928,1.030262,4.049987,2.659094,4.285036,-2.945520,-1.064195,1.654331,6.083242,-1.252763,-7.368841,8.751246,-7.857475,0.843662,6.710163,-8.025995,-1.953313,3.280616,4.621873,5.295383,-3.055638,-1.948868,-0.600755,-9.335593,9.884054,-2.464879,9.897603,-3.739076,-3.680029,-6.767470,0.008935,3.914245,-9.583926,3.393156,1.516024,-9.113261,-2.683282,-7.739433,9.785864,-0.143012,5.456151,-5.926785,0.316515,1.372138,-4.484186,9.251402,-5.055631,-3.046953,-2.346852,-7.328295,-6.628958,1.857375,-0.560894,-8.105454,6.866673,-5.733609,4.250519,1.091214,-3.344430,-1.591553,-1.858230,-6.511526,-7.533208,6.390061,-8.867853,2.782633,5.006807,1.106933,-0.540813,6.439705,-4.066240,5.128421,-9.619539,-8.879350,7.949674,-8.170459,8.700812,-3.843572,7.522076,-9.056890,8.045834,-5.330871,-2.199597,-5.874256,6.046106,-2.453624,-3.006601,-5.196363,0.625354,9.757076,5.882351,-2.398674,-4.019152,4.434421,0.689113,8.078069,5.450608,9.514660,2.193719,-7.840704,6.651004,-2.270246,-1.209052,-5.093458,-6.156955,-0.866591,7.161520,-7.705437,9.798276,5.153465,3.307275,-1.023531,2.202872,-9.321182,1.823627,9.471253,-0.436324,-6.042056,-4.206299,-8.381093,-6.800130,7.004140,4.905192,4.496509,5.558078,6.638020,1.806415,9.481888,6.291100,9.642537,-5.802869,6.516270,8.832646,-3.833469,7.347103,-6.866820,0.631324,7.009993,8.956551,-6.887308,-1.791281,7.777756,9.956426,-0.137920,-7.677760,6.030967,-1.592129,1.583694,7.758666,-7.525458,-5.694711,-8.278298,-5.172340,7.423406,8.323583,-9.912053,6.303556,4.545775,-3.546732,-3.483153,-2.605942,3.650418,-8.366594,-1.398381,-5.596895,-8.565422,8.337584,0.997405,6.155498,9.529470,-4.307658,-7.601025,4.495882,-6.769653,9.019472,-7.458729,-3.941622,-4.369288,4.035319,-6.486863,1.769208], dtype = "float64")#candidate|3645|(1080,)|const|float64
call_3643 = func_999_call(relay.reshape(const_3644.astype('float64'), []), relay.reshape(const_3645.astype('float64'), [10, 9, 12]), )
call_3646 = func_999_call(relay.reshape(const_3644.astype('float64'), []), relay.reshape(const_3645.astype('float64'), [10, 9, 12]), )
func_3420_call = mod.get_global_var('func_3420')
func_3422_call = mutated_mod.get_global_var('func_3422')
call_3651 = func_3420_call()
call_3652 = func_3420_call()
output = relay.Tuple([bop_3617,call_3626,var_3627,call_3643,const_3644,const_3645,call_3651,])
output2 = relay.Tuple([bop_3620,call_3628,var_3627,call_3646,const_3644,const_3645,call_3652,])
func_3663 = relay.Function([var_3616,var_3627,], output)
mod['func_3663'] = func_3663
mod = relay.transform.InferType()(mod)
var_3664 = relay.var("var_3664", dtype = "float32", shape = (5, 3, 4))#candidate|3664|(5, 3, 4)|var|float32
var_3665 = relay.var("var_3665", dtype = "float32", shape = (336,))#candidate|3665|(336,)|var|float32
output = func_3663(var_3664,var_3665,)
func_3666 = relay.Function([var_3664,var_3665,], output)
mutated_mod['func_3666'] = func_3666
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3702 = relay.var("var_3702", dtype = "uint64", shape = (8, 3, 5))#candidate|3702|(8, 3, 5)|var|uint64
var_3703 = relay.var("var_3703", dtype = "uint64", shape = (8, 3, 5))#candidate|3703|(8, 3, 5)|var|uint64
bop_3704 = relay.bitwise_or(var_3702.astype('uint64'), relay.reshape(var_3703.astype('uint64'), relay.shape_of(var_3702))) # shape=(8, 3, 5)
func_2527_call = mod.get_global_var('func_2527')
func_2530_call = mutated_mod.get_global_var('func_2530')
var_3712 = relay.var("var_3712", dtype = "int64", shape = (252,))#candidate|3712|(252,)|var|int64
var_3713 = relay.var("var_3713", dtype = "int16", shape = ())#candidate|3713|()|var|int16
call_3711 = relay.TupleGetItem(func_2527_call(relay.reshape(var_3712.astype('int64'), [6, 42]), relay.reshape(var_3713.astype('int16'), []), ), 6)
call_3714 = relay.TupleGetItem(func_2530_call(relay.reshape(var_3712.astype('int64'), [6, 42]), relay.reshape(var_3713.astype('int16'), []), ), 6)
output = relay.Tuple([bop_3704,call_3711,var_3712,var_3713,])
output2 = relay.Tuple([bop_3704,call_3714,var_3712,var_3713,])
func_3717 = relay.Function([var_3702,var_3703,var_3712,var_3713,], output)
mod['func_3717'] = func_3717
mod = relay.transform.InferType()(mod)
var_3718 = relay.var("var_3718", dtype = "uint64", shape = (8, 3, 5))#candidate|3718|(8, 3, 5)|var|uint64
var_3719 = relay.var("var_3719", dtype = "uint64", shape = (8, 3, 5))#candidate|3719|(8, 3, 5)|var|uint64
var_3720 = relay.var("var_3720", dtype = "int64", shape = (252,))#candidate|3720|(252,)|var|int64
var_3721 = relay.var("var_3721", dtype = "int16", shape = ())#candidate|3721|()|var|int16
output = func_3717(var_3718,var_3719,var_3720,var_3721,)
func_3722 = relay.Function([var_3718,var_3719,var_3720,var_3721,], output)
mutated_mod['func_3722'] = func_3722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1415_call = mod.get_global_var('func_1415')
func_1417_call = mutated_mod.get_global_var('func_1417')
call_3739 = func_1415_call()
call_3740 = func_1415_call()
var_3754 = relay.var("var_3754", dtype = "float32", shape = (5, 13, 4))#candidate|3754|(5, 13, 4)|var|float32
bop_3755 = relay.add(call_3739.astype('float32'), var_3754.astype('float32')) # shape=(5, 13, 4)
bop_3758 = relay.add(call_3740.astype('float32'), var_3754.astype('float32')) # shape=(5, 13, 4)
uop_3760 = relay.rsqrt(call_3739.astype('float32')) # shape=(5, 1, 4)
uop_3762 = relay.rsqrt(call_3740.astype('float32')) # shape=(5, 1, 4)
bop_3763 = relay.bitwise_or(call_3739.astype('uint8'), bop_3755.astype('uint8')) # shape=(5, 13, 4)
bop_3766 = relay.bitwise_or(call_3740.astype('uint8'), bop_3758.astype('uint8')) # shape=(5, 13, 4)
const_3767 = relay.const([[[-9.932560,-6.665702,9.116964,-1.937511],[8.123203,-5.745412,1.146242,-4.184287],[7.953953,7.932909,7.068128,-6.587531],[-7.181631,-7.660523,3.352120,-5.818524],[7.712989,-1.571958,-3.908577,-5.270685],[-1.147534,-3.627624,-6.213202,7.945832],[3.949485,-4.361682,9.854966,3.073318],[9.803565,9.752285,1.600377,-7.878706],[7.060224,-2.593459,5.050943,2.318713],[7.013689,8.702187,-1.412213,-7.708275],[-8.899818,-3.417851,9.727163,0.823053],[5.308727,2.603913,-0.278366,-0.850866],[1.730356,5.813942,8.791902,-5.454173]],[[5.471987,-6.410738,-8.264342,2.583724],[6.181129,-9.561597,1.969050,3.420234],[8.515701,-7.729840,2.687872,0.428687],[3.099084,0.716086,7.038597,5.528002],[-7.673105,-9.279703,-5.265184,8.532905],[-2.315565,-9.313578,3.509672,-8.761111],[9.783964,-3.227678,7.588017,6.137644],[0.666100,8.063216,-7.076018,8.677430],[5.186754,5.536050,1.514315,4.342198],[2.821814,-4.031921,-4.268892,5.987627],[3.387854,-0.537254,4.305106,5.797484],[-8.956835,1.582488,7.515377,1.860436],[-5.637197,8.995832,2.059400,5.288908]],[[-4.058551,3.738387,0.087397,-9.257233],[1.790762,2.795915,-8.938440,4.602131],[-4.439585,0.856276,3.797656,-3.248690],[-8.338503,8.073818,-4.749246,-6.361895],[-1.840679,1.894827,-5.910276,-6.969680],[-1.585315,-8.972012,-0.399579,-3.153024],[-4.329214,7.523989,-7.129929,5.303825],[6.308982,2.102622,-6.237608,-3.038584],[2.641556,-3.492313,-9.040173,7.419661],[-9.485938,8.899975,3.227282,7.496429],[-0.918558,4.974668,-3.190394,7.950431],[-7.265207,-0.764002,-1.269825,8.312457],[-8.989898,7.742865,8.570553,-9.179711]],[[-2.711626,-3.064783,2.285884,6.847564],[-0.130265,-2.546890,5.418201,-4.358498],[-1.620219,-8.029590,-7.134983,8.249766],[0.278432,6.839996,7.371446,9.377892],[9.876346,-5.368679,3.893063,-4.333808],[-7.905929,0.435805,-0.052820,9.992498],[-2.615730,5.366557,-2.144812,7.135526],[6.337563,-1.676883,-6.289428,-8.058685],[4.203160,-8.380105,-9.760995,9.015178],[-4.156245,0.251786,-3.216613,0.564780],[-4.589956,2.512640,1.061769,3.993500],[8.127173,-7.526001,5.916321,-1.161792],[3.423992,0.380143,4.874245,-7.307532]],[[3.460527,1.363068,0.190144,-6.975859],[0.935579,-7.935274,8.557378,-3.358638],[7.947883,-9.980012,6.338602,3.132234],[-8.240338,6.641425,8.042961,0.936057],[6.389508,7.564356,4.629520,-0.993946],[0.537339,-4.220422,-9.708176,-2.909110],[5.559153,-1.359439,6.252766,0.496115],[3.700140,4.913419,-3.053967,0.209691],[5.000370,-5.978403,9.389147,-5.519339],[8.474579,7.290221,1.159900,5.945837],[-7.077008,2.901341,-5.517953,7.838394],[1.205164,-7.269179,9.678117,2.813766],[-4.790292,-6.503218,8.990379,0.602487]]], dtype = "float32")#candidate|3767|(5, 13, 4)|const|float32
bop_3768 = relay.equal(uop_3760.astype('bool'), const_3767.astype('bool')) # shape=(5, 13, 4)
bop_3771 = relay.equal(uop_3762.astype('bool'), const_3767.astype('bool')) # shape=(5, 13, 4)
uop_3772 = relay.sin(const_3767.astype('float32')) # shape=(5, 13, 4)
output = relay.Tuple([bop_3763,bop_3768,uop_3772,])
output2 = relay.Tuple([bop_3766,bop_3771,uop_3772,])
func_3780 = relay.Function([var_3754,], output)
mod['func_3780'] = func_3780
mod = relay.transform.InferType()(mod)
var_3781 = relay.var("var_3781", dtype = "float32", shape = (5, 13, 4))#candidate|3781|(5, 13, 4)|var|float32
output = func_3780(var_3781)
func_3782 = relay.Function([var_3781], output)
mutated_mod['func_3782'] = func_3782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2154_call = mod.get_global_var('func_2154')
func_2155_call = mutated_mod.get_global_var('func_2155')
call_3804 = relay.TupleGetItem(func_2154_call(), 0)
call_3805 = relay.TupleGetItem(func_2155_call(), 0)
var_3809 = relay.var("var_3809", dtype = "float32", shape = (5, 9, 4))#candidate|3809|(5, 9, 4)|var|float32
bop_3810 = relay.mod(call_3804.astype('float64'), var_3809.astype('float64')) # shape=(5, 9, 4)
bop_3813 = relay.mod(call_3805.astype('float64'), var_3809.astype('float64')) # shape=(5, 9, 4)
output = bop_3810
output2 = bop_3813
func_3822 = relay.Function([var_3809,], output)
mod['func_3822'] = func_3822
mod = relay.transform.InferType()(mod)
var_3823 = relay.var("var_3823", dtype = "float32", shape = (5, 9, 4))#candidate|3823|(5, 9, 4)|var|float32
output = func_3822(var_3823)
func_3824 = relay.Function([var_3823], output)
mutated_mod['func_3824'] = func_3824
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3826 = relay.const([[[-1.056807,0.464813,0.040928,2.421862,8.414046,6.512326,-4.305249,8.528399,1.315589,-2.981315],[-0.348251,-1.262280,-2.812877,8.737582,1.551927,-1.375367,-8.132897,6.533701,1.629196,-3.342309],[1.757727,5.055521,3.579018,-0.582305,-7.161657,9.646464,3.898768,-9.614246,9.676927,0.279546],[0.329755,-2.035345,6.090354,6.116731,-2.073483,5.408026,-1.576472,6.051748,0.112879,-2.813670],[-6.486782,4.446210,1.718763,3.013687,8.068385,-5.036157,8.118577,-2.503497,-4.191555,0.038077],[-5.238755,-7.917313,6.593969,-7.584578,-0.900927,-5.472950,-7.947624,-3.014091,-6.899959,-5.650491],[-1.409410,-9.095325,4.959132,-9.251296,-8.287684,-5.427409,6.247230,4.407096,-1.918722,1.563393],[-4.103320,-4.116491,3.579043,5.920729,-5.434014,-8.476939,-1.372534,-8.816792,3.725807,8.835007],[0.078647,-8.731526,9.735777,6.138954,2.455746,-6.136503,1.942286,-3.190268,6.566948,-4.480074]],[[5.741598,2.571868,2.283032,4.311138,-8.417641,-5.707420,-4.734349,-2.946994,6.056978,-2.474660],[9.377190,-0.346989,4.939532,6.119780,-9.286608,-9.133079,-2.711086,8.162096,-2.774127,0.831432],[-0.523657,-5.837670,-4.143391,-2.831280,-9.067430,6.488687,9.174477,-1.162838,-1.785325,0.572759],[7.035802,8.042414,6.750882,4.628703,3.645358,8.248756,1.113503,8.163494,-9.078712,3.536036],[-0.143069,-7.211298,-4.876634,-8.788814,9.268537,-2.152091,3.307727,-8.718381,-6.080571,-4.020370],[-7.742524,1.021054,4.614625,-6.168861,-9.737231,5.466873,-1.640749,-2.143041,-8.617733,6.149334],[5.785343,1.425182,4.367432,9.834796,5.177496,-3.295537,8.275252,9.099091,-7.515517,7.739131],[8.512537,2.128233,-8.278108,1.170598,-8.415134,-1.043774,-4.848338,-0.692558,-3.971000,8.577822],[-6.285022,6.383491,-8.901844,-0.815793,-6.240240,1.778652,-6.674557,2.928851,5.685370,-2.865359]],[[-2.559793,9.163708,-3.499779,-7.227106,8.608197,-7.170199,3.817788,-1.039893,3.335903,-3.516721],[-9.965383,2.251818,-8.651975,3.958952,8.849854,4.592860,0.995159,-0.668692,8.515023,-1.157255],[5.571780,-2.262941,-4.550543,-5.213211,5.160752,-4.436315,-3.698230,2.031547,-0.130212,-7.480306],[-3.192349,7.178674,-2.610813,4.410560,9.464313,7.461278,-0.405769,8.439616,-0.278335,-6.796208],[4.435053,7.056553,0.117719,-9.364332,3.637753,8.389328,5.150280,4.428524,3.819879,3.700036],[-6.589948,0.799040,-5.857885,-2.577001,-8.219861,-5.768265,7.351323,2.781580,-1.387900,-2.250870],[9.020941,2.510680,1.593818,-3.688878,6.134041,5.589485,-6.029351,5.397116,4.829354,6.622047],[-3.924099,1.497643,2.939948,-7.903078,0.959711,-8.671780,7.434129,7.772451,-6.713224,9.453486],[6.850288,-5.514335,2.393311,-2.236912,7.420360,-0.576730,5.234425,1.908747,-9.424461,0.028481]],[[-7.369522,-9.907122,7.706882,-1.868677,-7.037654,-4.915158,-9.961413,2.323598,-8.285411,0.787472],[-4.316057,7.559214,7.649347,-0.895055,1.590619,7.206086,3.113310,8.146922,3.638559,2.547865],[8.093799,3.116579,-7.830606,9.190078,-2.547970,-0.402784,-4.744238,2.114710,-6.030040,4.846219],[6.965816,3.471285,6.536487,3.859351,1.945258,-3.915897,-7.541680,-1.041673,-1.800807,2.335004],[-3.311552,2.350603,-1.982084,9.426658,2.739768,-7.796970,7.038073,9.015470,-8.996304,-1.867461],[4.915441,-4.552419,-1.484213,-2.257109,-8.119872,-2.593297,0.855894,4.861594,-9.239876,-3.602458],[1.752516,-6.267101,5.682806,2.487050,-9.705428,9.383143,-7.701922,-6.568107,-9.496185,-7.457875],[-5.701666,-1.743746,-1.867355,1.670205,-4.906576,-2.651087,-7.194942,-1.052707,2.397529,9.646540],[6.745974,2.513019,-0.208041,0.642658,2.053143,4.556611,-7.875108,2.948082,6.767123,6.670460]],[[0.119765,-8.671438,-1.470417,0.923056,-7.030253,5.044811,0.278286,-7.877679,-2.437192,-0.113545],[9.889638,-4.423193,3.331240,-3.343277,-3.084259,-9.678353,-8.082228,-7.019807,-0.003732,-8.871597],[-3.033916,-8.453847,-4.624376,-3.462934,-0.883856,-6.166742,-8.314318,1.498932,7.581810,5.010090],[7.366775,7.165680,-4.598066,-5.121461,0.881195,5.183685,3.762544,1.901276,-1.612406,-0.423371],[-7.470666,-5.893569,8.261861,7.754002,-1.204050,3.097580,-2.618018,5.662447,-2.280212,2.378083],[-8.109072,4.900954,5.400919,9.041281,-2.559894,-0.679043,4.284348,-8.136179,7.991883,6.061850],[-0.628289,7.673042,9.995811,0.965306,2.947438,9.848296,7.078153,3.567684,9.843415,4.473835],[-8.339151,-3.349422,-6.138396,9.786052,-7.427057,6.806502,6.113651,-1.834185,6.242530,-0.285777],[-6.344264,-1.770044,-4.821193,-9.515037,5.355250,-1.661284,-6.787800,0.853594,3.363214,-3.896180]],[[9.517164,-8.125452,-9.447257,3.199005,-3.628751,-8.449641,2.695248,-9.296600,-0.383961,8.369725],[-9.631156,-3.718506,-6.347956,-2.344639,-9.357401,-5.245269,-1.714663,-2.905187,9.574300,3.082715],[6.377096,-9.064610,-6.878675,-3.315672,-7.088481,-8.591548,6.206064,9.718183,-2.981953,9.254875],[-2.236508,-8.011082,-9.546812,6.048727,-1.122091,2.996580,6.254343,-6.693870,1.432750,-0.889860],[-8.384387,-9.947078,4.776887,-9.644157,8.154455,-2.962751,8.466275,1.656382,2.743509,4.048014],[9.577391,7.480466,-3.885671,-0.591656,1.656267,4.674579,-7.139027,2.999998,4.995661,4.743325],[-9.459583,-8.298144,8.449428,1.992329,8.191409,-2.569059,-5.184143,8.057502,-4.085662,-6.241924],[-7.031453,3.387217,5.562538,6.220728,-4.292850,-8.414537,-6.607526,-8.907386,-4.575924,5.777898],[-1.633710,-7.827913,2.399751,-7.338276,6.084376,1.716233,-5.022415,-2.403003,-2.438780,2.298034]],[[2.642272,5.464654,-3.279200,2.746861,2.656288,-3.486534,-5.643965,-9.551911,-7.410418,4.758972],[5.984348,-4.739707,-0.696902,-4.418340,-5.552597,9.817702,7.866735,9.566322,7.220799,-7.974865],[4.247101,-1.885591,2.540625,-7.819793,4.934611,9.101128,-9.737863,6.488528,0.142322,3.468684],[0.282083,4.486082,5.556306,-1.551302,0.476809,-2.548127,-4.236567,-9.695941,1.817177,0.092128],[1.794344,-6.710949,-3.424415,-7.726401,3.133751,1.708567,-0.276030,9.393286,-4.096586,-7.377552],[-2.434719,-1.505079,-9.099746,-2.568298,7.715513,-5.514686,-7.429390,6.767423,-4.513100,-9.197838],[1.851588,-6.688721,-7.278829,-0.513129,-9.881202,-8.396399,5.012239,5.579961,-7.283552,2.006500],[4.765190,-4.131286,-6.656069,7.638943,9.893841,-4.237975,4.906820,-4.806993,-0.847292,-7.064109],[-0.410005,3.185754,-1.159203,4.167417,-7.226708,-9.468279,-7.058287,-3.354897,-0.117584,-1.045663]]], dtype = "float64")#candidate|3826|(7, 9, 10)|const|float64
var_3827 = relay.var("var_3827", dtype = "float64", shape = (7, 9, 10))#candidate|3827|(7, 9, 10)|var|float64
bop_3828 = relay.power(const_3826.astype('float64'), relay.reshape(var_3827.astype('float64'), relay.shape_of(const_3826))) # shape=(7, 9, 10)
output = bop_3828
output2 = bop_3828
func_3832 = relay.Function([var_3827,], output)
mod['func_3832'] = func_3832
mod = relay.transform.InferType()(mod)
var_3833 = relay.var("var_3833", dtype = "float64", shape = (7, 9, 10))#candidate|3833|(7, 9, 10)|var|float64
output = func_3832(var_3833)
func_3834 = relay.Function([var_3833], output)
mutated_mod['func_3834'] = func_3834
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3876 = relay.const([[2.094557,4.912013,-1.457181,9.997950,-3.847722,0.771393,-9.070952,0.848954,-9.843390],[1.750814,-9.847177,-5.608780,8.537670,-0.796442,8.977744,5.326711,6.777513,-6.881496],[6.300111,-6.674347,-8.345124,-5.176635,-3.804507,0.506704,1.972764,-9.990776,7.451049],[9.313526,3.735450,3.856581,4.431801,-6.902904,6.977538,-1.056410,-4.420081,-3.774853],[-5.589413,-8.406502,-8.169697,-6.610346,-6.931902,-4.250505,4.869809,6.137443,9.356447],[1.164025,2.484927,2.843715,-9.587164,1.816716,-9.951958,9.915013,-8.868330,2.618906],[-5.998554,-7.434839,-6.286029,-3.322749,-3.980153,1.645388,-4.294586,5.853626,-0.769359],[6.977102,-4.064338,3.757904,-3.143865,-4.574547,-1.868042,-3.137753,3.974511,-8.649689],[4.626888,9.840753,-4.149791,6.272337,4.880170,-7.302372,6.669678,-1.794287,-8.311620],[-2.052025,8.079446,2.365972,8.605798,-5.083729,-7.447366,-9.547088,6.909795,8.544330]], dtype = "float32")#candidate|3876|(10, 9)|const|float32
uop_3877 = relay.log2(const_3876.astype('float32')) # shape=(10, 9)
func_3345_call = mod.get_global_var('func_3345')
func_3348_call = mutated_mod.get_global_var('func_3348')
const_3909 = relay.const([-4.771138,9.364769,-3.987521,5.980169,-7.435740,2.564143,-1.864293,8.291529,-9.113182,-3.981093,-0.982188,-6.880713,-6.100129,1.180325,-2.770863,-9.966976,-3.042035,-6.894360,-6.251974,-0.972617,8.276501,-9.333039,-2.623776,-2.292878,8.364407,-0.921176,3.946620,5.165797,-1.809184,5.735176,3.304377,3.577463,2.515853,1.877384,7.915875,6.554890,3.862506,-7.037190,9.120373,4.094937,-2.745893,8.626077,-1.535858,5.753741,7.019231,3.187729,1.864152,-2.126812,-1.389219,-4.873086,3.419590,-2.840044,8.863253,2.877892,0.712849,4.925820,-2.579215,7.115043,-9.772438,4.788075,0.270797,-5.388537,9.754504,5.047544,-0.128023,-1.161411,1.961876,1.688719,4.203725,-6.977962], dtype = "float32")#candidate|3909|(70,)|const|float32
call_3908 = relay.TupleGetItem(func_3345_call(relay.reshape(const_3909.astype('float32'), [5, 14, 1])), 0)
call_3910 = relay.TupleGetItem(func_3348_call(relay.reshape(const_3909.astype('float32'), [5, 14, 1])), 0)
output = relay.Tuple([uop_3877,call_3908,const_3909,])
output2 = relay.Tuple([uop_3877,call_3910,const_3909,])
func_3918 = relay.Function([], output)
mod['func_3918'] = func_3918
mod = relay.transform.InferType()(mod)
mutated_mod['func_3918'] = func_3918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3918_call = mutated_mod.get_global_var('func_3918')
call_3919 = func_3918_call()
output = call_3919
func_3920 = relay.Function([], output)
mutated_mod['func_3920'] = func_3920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2593_call = mod.get_global_var('func_2593')
func_2595_call = mutated_mod.get_global_var('func_2595')
call_3977 = relay.TupleGetItem(func_2593_call(), 0)
call_3978 = relay.TupleGetItem(func_2595_call(), 0)
output = call_3977
output2 = call_3978
func_3981 = relay.Function([], output)
mod['func_3981'] = func_3981
mod = relay.transform.InferType()(mod)
mutated_mod['func_3981'] = func_3981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mutated_mod.get_global_var('func_3981')
call_3982 = func_3981_call()
output = call_3982
func_3983 = relay.Function([], output)
mutated_mod['func_3983'] = func_3983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1276_call = mod.get_global_var('func_1276')
func_1277_call = mutated_mod.get_global_var('func_1277')
call_4045 = func_1276_call()
call_4046 = func_1276_call()
const_4052 = relay.const([[[-1.532304,-6.732440,-7.224898,-3.295767],[-6.322619,-9.122613,-0.320907,-4.432585],[-5.329491,-7.953799,0.003145,5.725285],[-8.535678,8.426588,4.803649,6.335127],[-6.006412,-2.459783,-8.186314,3.587723],[-8.309303,-0.631507,0.587149,-8.787611],[4.110645,-1.512764,-1.591511,-6.913403]],[[-4.740961,-6.121787,-0.284953,1.997033],[-6.075630,-6.922668,2.802048,9.117094],[8.430799,-4.228760,8.083322,-2.611199],[-8.396463,1.378606,-9.134701,9.967582],[-4.895094,-5.599217,9.797872,2.789254],[4.333641,-3.481648,-7.591258,-1.407653],[4.735996,-6.993551,-0.564063,6.783150]],[[6.228645,3.400583,3.836870,-0.332614],[-1.429266,-8.369180,7.354354,5.713265],[6.960842,8.397832,-5.714577,2.848858],[-4.946388,-0.118645,-1.113752,0.028357],[-6.093791,-5.267828,5.238417,2.940567],[5.526136,5.748492,-5.898026,-4.505536],[-2.638533,4.576720,8.651258,-5.780439]],[[-6.962262,-4.703572,3.920756,-4.404198],[-3.054222,5.575315,4.185629,-4.261826],[-6.413789,8.539263,-7.232451,4.078226],[7.961250,8.284309,9.872700,9.643195],[-8.183325,9.218617,6.133402,-0.770430],[-5.378667,-3.785913,-4.544378,-4.399487],[-3.409988,0.572688,0.277670,-9.831233]],[[9.725758,-9.283052,8.302221,-1.692129],[9.216512,0.595469,8.938852,5.542348],[8.647775,-2.939598,-9.769626,8.261363],[-6.300023,5.942258,2.455965,4.239494],[-9.918775,3.665060,7.336904,6.123092],[5.317557,1.244543,-1.128259,-5.100104],[-8.706460,-9.028146,-1.716640,-2.331929]]], dtype = "float32")#candidate|4052|(5, 7, 4)|const|float32
bop_4053 = relay.power(call_4045.astype('float32'), const_4052.astype('float32')) # shape=(5, 7, 4)
bop_4056 = relay.power(call_4046.astype('float32'), const_4052.astype('float32')) # shape=(5, 7, 4)
output = bop_4053
output2 = bop_4056
func_4057 = relay.Function([], output)
mod['func_4057'] = func_4057
mod = relay.transform.InferType()(mod)
mutated_mod['func_4057'] = func_4057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4057_call = mutated_mod.get_global_var('func_4057')
call_4058 = func_4057_call()
output = call_4058
func_4059 = relay.Function([], output)
mutated_mod['func_4059'] = func_4059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_4088 = func_1235_call()
call_4089 = func_1235_call()
uop_4091 = relay.tan(call_4088.astype('float64')) # shape=(5, 1, 4)
uop_4093 = relay.tan(call_4089.astype('float64')) # shape=(5, 1, 4)
func_4057_call = mod.get_global_var('func_4057')
func_4059_call = mutated_mod.get_global_var('func_4059')
call_4114 = func_4057_call()
call_4115 = func_4057_call()
func_751_call = mod.get_global_var('func_751')
func_756_call = mutated_mod.get_global_var('func_756')
var_4129 = relay.var("var_4129", dtype = "float32", shape = (72,))#candidate|4129|(72,)|var|float32
var_4130 = relay.var("var_4130", dtype = "float64", shape = (198,))#candidate|4130|(198,)|var|float64
const_4131 = relay.const([-1.887982,9.724489,8.878310,-8.568430,9.096441,1.358752,3.296721,8.573772,1.366640,-3.501597,-0.695918,-7.029605,-6.749985,0.432484,5.978283,1.123960,-3.776779,4.986372,-0.785960,-2.257493,6.542118,-8.927560,9.465650,2.770448,3.037850,-9.731935,-2.051343,3.694022,4.093398,-0.101667,-0.513981,-3.981914,1.178607,-5.890008,7.425458,1.853485,-0.830558,2.676554,9.331316,-4.532978,-4.130945,1.231810,-2.413458,-5.684598,3.128776,-7.547008,-8.651635,-6.512195,-8.238525,7.652179,4.675136,-9.078342,4.410167,9.692021,8.183318,0.312508,-8.939589,-9.033053,4.978320,2.501727,4.273625,5.580796,-1.743254,2.012742,-4.209390,0.017145,-5.268769,-8.843573,1.584269,-0.996146,9.135891,4.357822,-7.008001,-1.666350,-6.982875,5.057794,8.134769,6.379883,-2.508666,-6.416949,-4.778010,1.024538,-2.923549,-9.796723,0.393641,-9.702553,-2.526626,6.742733,3.388466,7.901133,8.108385,0.265057,5.571158,-1.923733,-7.112345,-7.899412,-7.941199,4.945191,2.484962,8.695372,-6.428650,-4.135964,7.675828,-8.016393,2.037922,-7.591440,-7.931165,-4.794274,-4.528975,7.531246,0.092541,2.168390,6.819701,-6.516572,-0.803648,-3.470978,8.510677,-6.684656,-1.063445,0.146171,-0.571175,-2.121498,-3.728602,-5.313368,9.742382,2.261828,0.264593,9.211072,2.236723,-7.485255,2.812678,-9.421212,9.935691,8.271558,6.300408,1.440837,-2.683306,-4.713871,-7.305359,9.037785,5.549309,6.005541,-1.298150,8.636553,-4.409118,1.118419,-3.344366,5.265936,-9.076464,2.708625,8.482820,7.724673,-9.613435,-9.526538,-4.724588,0.422107,-4.515312,0.211725,2.945084,-5.195326,-4.664598,9.131217,-2.377733,-7.195593,3.546527,-9.980631,-0.684199,-6.681109,-5.980017,-5.684181,-3.429823,-8.492943,-6.344057,0.490717,-0.409941,6.361188,-3.338310,-9.596636,8.505168,8.090607,-2.342191,-1.194336,-1.813332,-7.387259,0.192058,6.210894,-9.377485,4.656773,2.778847,-7.204248,-3.681663,-1.947355,-1.482171,6.592540,2.328058,-3.365056,6.558287,4.653138,4.050370,-1.496946,-3.925788,-9.779509,8.789435,6.823250,1.819680,-8.417856,6.918778,-4.392639,9.300996,-5.954969,-5.066416,1.783296,0.941414,4.288202,-5.415982,4.096905,-2.195817,5.239551,0.727918,-6.059836,-3.871704,7.946157,-7.367697,0.938224,6.113475,-2.597443,-6.291007,4.366101,-4.954840,-4.847223,-5.260022,1.273934,6.340249,-9.924539,5.487422,9.078379,-1.599509,-5.212217,-3.513388,-5.770682,3.911938,-2.822965,-8.686575,8.085519,-8.029567,3.206957,9.339910,5.863065,7.338269,-9.790678,4.846833,-5.362634,-2.857642,-4.328324,-7.939407,-8.442353,5.926646,9.890491,6.134954,1.256405,-8.885182,-7.785782,3.226090,5.864007,-6.916719,-2.825085,1.951594,9.838506,1.004069,7.932494,-0.579819,8.809312,-0.388275,-7.324220,6.405386,8.789205,-8.028000,8.369726,-3.146473,7.602555,-7.257690,-2.530730,-9.998241,3.883563,9.587008,-7.719534,9.571863,5.097041,-5.498202,4.133143,3.360186,-8.192531,-4.137026,-2.016987,-2.258826,3.847552,4.777381,-1.641670,2.903795,8.426765,-5.882683,2.346187,9.139449,3.607137,-2.988007,1.760081,-2.765183,5.646673,9.946173,3.077576,8.543913,3.444175,-4.759404,6.350641,4.795176,-3.466810,-8.338729,9.432573,-1.143009,8.276299,4.567928,7.533595,-1.267480,2.364832,-4.431969,8.001138,1.995473,-0.105505,5.756332,-8.291529,-7.699911,-9.607880,-1.619634,-5.436815,3.155362,8.381632,-5.849907,-4.519661,0.861281,-9.837529,-0.952686,-2.642875,-7.740490,2.810177,-9.534555,8.774468,-2.265753,9.933757,7.841217,3.529785,0.971202,-4.425614,5.694361,6.939021,-9.923705,-0.513503,2.245314,-5.562008,4.752863,9.510496,0.899149,-1.903698,5.453259,-2.595604,8.437556,8.110390,-2.857372,-6.774187,-3.640889,3.064233,-1.030104,1.881878,-3.652399,3.363969,4.158889,4.766659,3.098956,-7.512570,7.391483,-3.552706,-2.782362,4.263825,5.107799,8.353331,5.975614,-6.696873,-8.484679,-1.034836,6.406637,7.376828,-0.132568,-7.460510,-7.304660,-7.399651,8.283140,8.511046,-6.534758,0.587699,-7.582304,0.564864,2.967440,8.844771,4.848512,-2.787970,-6.403931,4.030843,-6.813331,-4.218650,-8.488525,-5.775108,0.426470,-4.422105,-9.099169,7.795942,-9.418195,2.387811,-4.171328,6.502295,-5.698524,4.748165,8.002536,0.399339,-4.309404,2.697242,8.617190,-5.305250,9.635917,-0.890103,-6.922546,-5.175398,3.635928,-8.667729,8.064477,4.109767,2.757267,-7.199534,-1.341054,-7.070470,4.220962,1.639010,9.714596,-3.140657,-6.275445,2.038852,-8.026214,6.683223,9.799066,-0.368305,-1.891474,-0.204386,-2.581259,-0.752482,-9.252401,9.183496,-6.041969,-1.851820,-7.985401,-7.718838,-7.338333,-9.875200,-3.316726,-8.540362,0.895149,-0.449398,-1.910819,-4.487785,6.773803,7.285347,3.446101,7.117253,-9.188115,-9.454513,-3.841925,4.168381,-5.519965,-1.245356,-5.294261,-5.137685,1.934858,9.658359,1.911572,-2.243926,-1.553886,-2.614297,-5.628187,-6.558626,-5.923117,4.143698,8.727930,4.560158,-4.350164,-3.636466,-9.296061,8.799512,1.803473,6.191144,-4.055926,8.658029,-8.302689,-3.651866,-8.589289,6.647834,0.736715,5.538130,4.033883,-6.467597,-5.220876,-2.253717,1.396757,-1.694809,-8.267371,2.202057,6.872008,-7.842199,0.980590,-6.200999,5.730414,-8.698364,6.257811,2.271538,-8.035416,-7.684173,5.725735,4.376723,-1.861863,7.182201,3.263982,9.666762,-7.049761,-6.452704,0.980765,4.888245,-3.446825,8.149396,9.188080,3.609165,3.424688,3.760406,-5.194392,6.810041,-2.608656,-8.510217,-3.991926,8.127489,7.919924,-3.734095,-2.229108,1.538648,6.655861,-3.837766,7.312470,-1.659937,-1.309230,2.283272,-1.137527,3.431230,-0.508603,-2.309759,-7.402301,1.226809,-2.769322,-0.724105,9.877989,3.131205,-4.564337,0.831789,7.070832,-0.194907,8.684735,7.376919,1.799002,1.750371,-7.684881,-7.859666,9.125495,-2.272728,7.287223,-3.715756,-9.593225,7.025384,-2.235140,-1.959524,-9.209481,7.844503,2.860829,4.454390,9.426080,-2.899552,-4.193559,-6.366791,-2.358606,6.777031,2.738994,-6.819684,-7.477943,0.095422,-1.952357,-4.190990,-9.281017,5.713044,-9.176139,-6.134394,5.554602,3.233274,0.667971,6.418184,-5.302748,8.456429,-7.858535,6.947344,1.159808,8.710374,1.305270,-0.406387,7.246710,0.123037,-0.197536,-0.427669,-6.450145,-7.019780,2.035664,8.038050,-8.446928,-1.278188,-9.982363,9.665895,-9.193345,0.286006,4.752439,9.680454,7.973500,-1.940846,2.772215,8.283173,3.116771,8.978119,7.924199,-0.591005,-1.733698,3.842843,9.871072,-5.101204,3.205895,9.546282,-1.193645,-9.628808,0.624311,5.462766,2.113309,-7.954657,-5.299876,8.030812,-9.559369,-5.401302,-8.850259,2.261947,-2.199708,3.501854,5.454716,-6.673781,-6.829011,-6.115981,-4.512288,-2.067888,-0.722632,-3.108968,-0.616657,9.265092,5.957700,9.846896,2.735004,0.444345,8.545973,0.981075,0.971524,-8.628957,-6.732691,0.172255,-2.463690,-3.299258,-5.577389,-4.400394,9.023266,4.035371,8.980836,-2.075350,7.897358,-4.951959,5.382111,-5.140762,-7.971584,-3.734936,0.832929,9.032876,0.577190,-5.854109,-7.354160,-2.520627,-1.008391,-3.760667,4.263961,-0.314042,6.448589,8.858265,7.588628,4.156972,-4.585893,-5.894196,-1.308975,7.746237,-9.730716,9.157279,-3.834370,-9.208554,-3.285958,-1.743508,4.343952,-0.309086,-8.310740,4.549549,7.407912,6.765544,-5.533610,2.180553,8.328473,-0.564391,9.702224,-3.415167,-8.041648,-3.981452,7.406986,-0.079112,-7.162498,0.601517,-4.656050,-5.591486,-2.045188,1.502250,0.324631,7.893541,6.600793,-8.692037,0.259633,4.678277,2.769986,-0.622409,-8.633527,-8.820428,-0.827961,2.824394,-4.132750,-7.493794,0.681320,-9.167959,4.765680,0.365442,1.770728,8.540698,-3.734383,-4.943064,-1.309282,9.665911,5.242214,3.794300,4.822845,-4.207496,-9.966693,-3.832992,-6.511324,4.978697,-3.766034,4.852911,-1.070782,3.652609,4.853931,9.837621,-4.211623,-0.706889,-6.427284,5.450297,3.580950,9.572106,7.528497,8.399060,-1.860317,4.814850,-1.366855,2.922362,3.472363,5.770157,-5.036790,-7.520813,7.382466,0.753241,3.069809,-2.360730,-1.816207,-9.119435,4.414334,-7.530138,-3.287338,9.476084,-0.674393,-4.105174,5.691314,-2.776044,-4.951137,-5.090893,5.738149,1.932091,3.393413,0.044657,2.009339,3.622544,-6.022941,4.595210,9.649868,1.357430,8.999430,5.627636,5.303019,-4.540237,-4.705402,-8.035213,-0.006422,-6.355181,6.927812,-9.505525,-4.458949,6.529098,9.499841,9.714438,5.444118,-4.620066,-5.160027,3.347067,5.149558,2.202873,6.328059,9.295706,7.905432,9.885251,-8.522010,-3.478485,5.874359,1.963166,-2.019793,3.231388,1.187512,-2.126875,6.007797,5.581596,6.603003,-4.628177,-5.108008,5.103426,-2.281309,-8.896823,-3.117553,6.976376,1.256856,-8.663065,9.204785,2.223986,7.101407,3.860973,-9.482426,5.416611,8.663360,-7.618562,4.480981,-7.040324,-5.544797,-5.804523,2.186015,-8.639676,-8.399604,-7.797009,-8.702094,-3.550853,2.594884,-7.407436,3.218022,1.611084,6.743757,-3.955271,4.834943,-3.409325,-1.531700,-4.949784,-3.656700,-6.610869,9.359345,3.419551,-7.136928,6.012482,1.232954,4.363243,8.821479,9.860862,-8.128844,-9.921788,-8.266831,6.229460,1.047697,-1.997574,-1.069117,1.066538,1.602250,4.225392,-2.776077,2.791254,-5.254069,-3.269574,-9.220020,8.022031,-0.036954,-9.718326,-5.837422,7.872655,-3.543224,-1.472655,-4.824312,-8.407708,-1.550045,5.152312,3.404270,-0.248422,-4.197727,0.995609,-4.662372,7.867700,-8.356070,-1.069186,-7.386675,2.695804,4.984977,8.223987,7.919305,-0.521856,-3.287573,-5.670702,-7.831307,6.715713,-1.717327,6.875304,9.252708,6.612382,6.320982,3.114485,2.705814,-8.822085,-6.003518,-7.698199,8.488826,3.808236,-2.506246,9.669020,-9.776040,3.244807,-4.212381,6.915218,-9.884166,5.186579,-1.853817,7.606224,0.725269,0.113861,5.747632,3.432030,-8.838918,-9.942134,8.949537,7.464850,2.286911,-1.964556,-4.267288,5.370685,-7.050539,-0.380183,0.369695,-9.601880,1.309313,-2.392004,5.735909,6.078500,-7.180591,-4.711186,-6.390700,0.095221,4.734250,5.177144,-9.250997,-7.246520,6.839145,5.321547,-5.210376,-5.755347,8.566612,-7.067374,-1.631309,-8.540179,-4.123522,-7.894274,6.903505,-8.328571,0.066318,-9.113998,-7.017540,-4.591726,5.953950,4.197469,6.784887,9.559663,-0.218656,1.024959,5.085947,-7.031493,0.824413,-7.361227,-4.673230,4.325973,-3.110842,2.603607,-3.766419,9.025228,-8.040637,0.397871,-2.677961,-9.643233,-5.183210,1.617108,-6.573634,5.678508,5.875946,-2.336350,-1.715964,5.522322,0.192650,-9.490577,2.162851,5.282842,-9.548529,9.786358,4.033994,5.230611,-2.513817,7.699933,-8.882003,-1.755617,2.960610,-9.499248,-1.913567,-4.949793,-7.817034,5.416971,-1.514940,1.376378,8.827292,9.257053,3.333222,-1.849157,-4.171024,-8.713884,4.989354,-3.374251,9.687604,-9.788892,-9.581946,4.205392,7.257421,-2.111308,9.595753,-4.305472,1.247171,9.787454,6.935027,-1.287386,0.360096,-2.136012,5.508333,4.734193,7.177247,-3.010237,1.180369,3.362856,-6.298903,-0.401896,9.633697,-8.120893,8.453026,6.695227,5.546905,-8.004259,-4.294128,4.802957,5.974278,-6.542027,9.746976,-0.482566,-3.006337,6.406180,-5.480127,-3.517680,5.799416,-5.440167,-9.294452,9.724230,0.226657,9.795090,-9.379883,5.752814,1.521522,3.686592,-3.542405,2.857786,2.879869,2.161092,0.348280,6.749864,-0.730889,0.069938,-7.962146,-0.896950,-9.316568,4.842410,5.251519,-3.529087,3.743953,8.867700,8.862172,-5.182739,9.268847,-8.492215,-1.172359,6.369814,3.985346,9.762673,1.784699,1.542109,5.644319,9.138266,6.551646,-3.036145,7.158249,-3.025096,-2.725462,3.952673,-9.613593,-0.370168,2.058768,4.830208,-0.211621,-9.655237,6.501353,3.853904,0.030898,9.491170,-0.384017,1.890349,6.012619,9.418241,-4.553603,6.241634,-4.978017,6.917586,-5.120723,0.963449,-7.572717,-5.442221,1.427543,-9.579935,-5.818392,-6.499228,4.726457,-0.074894,9.011865,8.708917,-2.109646,2.826664,-6.637438,6.203915,9.543134,-8.506251,-0.904509,0.967616,-0.142981,-0.524096,7.033422,-1.263534,-1.649804,9.175618,-1.458846,-7.742610,-0.079090,7.475911,-1.453139,4.849468,7.813936,1.994034,-3.236030,-0.827559,1.945736,-1.220558,4.787795,7.854556,4.740060,3.952898,3.121860,0.637896,4.092169,2.045615,5.538509,-4.913106,-4.012972,-2.723579,-8.308700,3.608270,-1.659181,0.507536,-9.974078,2.223490,8.759453,1.492811,-5.179972,-4.586364,-9.276424,-3.511544,-6.576731,-1.702057,-0.690046,-8.249619,2.723163,-0.015018,5.966160,1.553726,0.578286,5.181574,-1.693439,2.057367,8.955364,-0.042684,5.243904,1.119198,4.402899,-4.618612,2.589962,4.633318,3.644345,-8.570646,3.782389,-5.125006,-0.314544,4.097249,4.680118,-9.225600,4.215395,-3.883002,8.517323,-9.084783,7.304769,-8.929513,7.573011,-9.178172,-5.331672,9.931542,-4.164983,-1.063280,-7.044933,2.655751,-8.415207,-3.051293,5.346139,3.103474,1.940978,4.150992,-4.140029,5.215561,9.452954,-1.234654,-1.690107,6.663532,-4.276746,7.571220,-6.537812,-2.416109,-5.935535,-3.682835,6.476249,-0.896548,5.903238,5.610147,-7.136627,-2.143719,-7.810860,7.736243,-6.940358,-7.904751,-9.468266,9.255919,-1.875379,9.897961,8.093435,-5.805211,1.728605,2.903760,3.827762,2.538105,9.956298,7.849204,-9.596800,-8.153301,-2.181190,9.870312,-2.239281,9.073143,-9.882358,-8.895825,-0.293732,-7.242134,0.634367,-6.208959,3.091217,-6.948891,9.083830,-1.929258,-4.708227,5.457088,8.749455,0.204124,7.869126,7.577031,-8.821293,4.925984,-3.705252,-5.784646,0.043561,-3.230127,-5.537536,4.878465,7.301423,-9.166019,-5.202727,-4.545715,-3.244434,-0.032322,-2.615342,-6.346818,9.352620,1.442573,3.200241,2.031443,-0.960853,8.228298,0.974250,9.574925,8.100081,-0.346086,1.807550,4.239704,7.049790,0.800160,5.691258,-7.296617,-0.053091,3.215442,6.400973,-0.949532,-9.303833,9.514060,0.002099,-2.033360,-0.662976,-7.086814,8.668234,0.381575,1.493516,-6.757621,-7.562742,0.778102,-0.499035,1.675674,-1.425745,-1.395104,9.043898,-7.562712,-6.539065,0.311356,3.728020,-3.923979,-6.523482,3.242607,-1.451419,-2.908085,-6.865206,1.404377,-7.507906,1.761643,2.510118,-4.619241,0.849081,9.810415,2.346720,-4.231044,-2.785048,-3.501871,-6.390107,7.399785,5.273600,-5.305262,4.363980,5.905250,-1.373821,-1.029764,-9.823801,-3.463061,8.370109,1.935271,6.032973,-6.576794,-2.584697,-1.679039,-9.293517,7.685527,1.430272,-1.438542,-9.135871,8.785995,-7.227947,-5.319590,-2.394215,-8.355164,-3.338751,-0.112659,5.225060,4.350329,1.740697,-9.784258,0.720134,-2.651567,0.986196,-3.713179,-7.759280,-9.200970,2.072104,6.590361,-9.552597,-9.993679,5.308431,-0.982353,5.401913,-9.962303,4.812380,-9.887714,-5.752557,9.250323,1.481446,4.565021,8.959285,-8.526669,-9.214584,-3.859521,8.835592,0.908485,-6.004714,2.935109,-8.545053,-8.508658,8.537197,-3.055404,7.558741,8.708200,9.705010,-6.152789,4.201928,-2.603124,-0.245127,-0.661351,4.486691,-3.720311,9.657404,5.135939,9.988839,3.317831,-0.926635,8.458290,2.812703,5.238262,1.884409,-3.404548,-3.150012,3.493737,3.999030,1.219966,6.235687,-5.990594,9.348741,-8.419449,-0.710682,6.732452,-1.965801,-4.103556,-2.098178,-5.130977,-2.118327,-9.957644,3.994426,2.767783,6.712567,7.762449,0.795770,6.086143,0.134215,1.209421,5.301115,1.358105,9.461809,1.476522,4.730634,-6.751554,-5.209221,-6.167182,-3.892752,2.951805,-9.751199,-4.902131,-4.478609,4.514977,-3.982353,4.290636,7.055315,3.852984,2.660408,-8.439122,-6.137842,-3.781124,8.828061,8.971341,-8.617137,2.187853,0.768629,-7.042693,1.988627,-8.347572,3.893659,7.438718,-2.149948,0.891361,-2.039297,-0.692472,-5.591416,7.593881,4.300428,8.096771,7.777749,3.477596,3.773451,9.914344,7.183108,-0.867931,9.231569,5.081492,-9.338075,5.496226,8.242784,9.092952,-1.689407,2.146855,6.140749,-7.987803,-8.579570,-5.855606,4.939296,-6.853074,1.780223,0.647424,3.950721,-5.588530,-7.244210,-2.324332,2.444677,0.936599,-7.019564,2.976509], dtype = "float64")#candidate|4131|(1584,)|const|float64
call_4128 = relay.TupleGetItem(func_751_call(relay.reshape(var_4129.astype('float32'), [6, 3, 4]), relay.reshape(var_4130.astype('float64'), [198,]), relay.reshape(const_4131.astype('float64'), [1584,]), ), 0)
call_4132 = relay.TupleGetItem(func_756_call(relay.reshape(var_4129.astype('float32'), [6, 3, 4]), relay.reshape(var_4130.astype('float64'), [198,]), relay.reshape(const_4131.astype('float64'), [1584,]), ), 0)
func_2250_call = mod.get_global_var('func_2250')
func_2253_call = mutated_mod.get_global_var('func_2253')
const_4139 = relay.const([-8.962449,-6.646368,-3.093469,5.812257,9.276494,3.483929,8.809270,-8.758860,-5.147227,8.132013,3.643377,5.588191,3.943896,-4.699678,-4.506071,8.460414,-5.957966,-2.916426,5.456186,1.165080,-2.901006,4.016047,4.226314,-2.922914,-6.906804,-9.140684,-7.176012,6.670793,9.583660,-8.945705,0.036357,7.034746,6.961241,0.308055,3.714565,4.445187,3.927878,2.133301,2.083918,-2.765093,-0.404065,2.735333,-4.618723,-8.257862,9.915006,-7.049643,-8.139156,-4.655523,5.438987,-5.868142,8.176160,-9.130764,-5.265641,7.576320,3.146276,9.886862,-9.100201,6.985004,-8.878346,-5.310509,-3.729506,-6.460180,-3.997456,1.735122,-4.989019,7.273215,1.154400,-2.026075,9.197859,3.120143,-6.839980,-4.830725,-2.079008,8.613962,9.664387,-7.967050,-0.059444,4.032430,9.141148,-0.600113,-2.087741,3.857474,-2.658774,-8.923043,8.606912,-9.581780,-8.794942,-6.912371,-3.279785,6.161921,-1.493295,-0.461515,7.699291,7.335517,-4.683174,-0.334842,4.820221,-1.346683,-7.654485,-5.832424,5.188174,7.675969,1.708390,-0.626306,4.699888,-5.804642,6.188913,1.707155,-5.708117,1.674422,-4.717962,7.949937,-3.218241,3.976658,-3.445016,-0.343158,9.567973,-3.118697,-7.927717,-5.267341,-4.554613,4.092834,0.719097,-1.671743,2.523352,-7.423422,-5.443216,-9.496134,-6.422331,1.659249,5.479687,-6.681409,4.575626,9.797214,2.928530,4.088330,-2.916728,0.356221,6.674013,0.290246,4.764374,5.246345,-0.509640,-8.660999,2.908140,8.519064,-7.970443,5.769705,-1.673641,4.031793,5.064594,-0.722844,9.951856,9.610589,6.422268,0.019665,5.303578,-6.567611,-8.810422,-1.023005,-6.392410,-9.829346,6.939918,-9.995178,1.045777,0.969834,7.497730,-0.026974,2.171102,4.000031,2.254679,3.276178,3.354089,-8.852108,8.007404,-5.453173,-2.665608,-3.019521,-0.527682,-8.059850,-2.890330,-5.808899,7.114835,-2.582637,9.754415,8.205781,-0.701738,2.866358,5.899451,-7.965028,-1.408720,-4.663006,1.476032,-9.920860,-8.576717,7.503073,-1.874995,-8.590235,2.309678,-6.186137,-9.412612,9.577623,-0.560118,0.193075,-1.110282,-8.658787,-1.017808,2.315912,6.014059,6.888616,-3.590164,-2.428820,9.419237,-4.142637,7.396403,1.841599,7.340393,1.898241,5.365500,2.422267,-2.009302,-9.731858,-7.866487,-8.145655,6.496547,6.593413,1.343895,-7.684905,-6.693786,0.066019,0.320012,-1.750819,4.040408,-4.742438,-0.545788,-8.418727,-2.288428,1.053541,-0.963944,-0.952078,9.082867,-7.870786,-0.727517,2.001005,5.327019,-3.504847,9.959733,8.475213,-2.332357,3.851917,6.734568,4.560491,-2.315598,3.971388,4.046602,-1.785752,0.335209,6.233747,4.939077,4.700566,8.532108,9.352912,-6.926063,4.114691,6.970822,3.695198,-7.658159,-0.503500,0.800431,7.402370,6.772851,5.629630,-2.902224,-1.135874,-5.548425,6.154906,-3.357090,-3.017538,3.453771,6.031104,0.351177,-0.101558,-1.987772,-0.357571,-0.319636,-7.843906,-3.284555,-8.834347,-4.332259,-1.575010,-0.142397,-5.593997,0.348642,2.331315,-7.071306,5.084022,8.249251,3.970985,-0.226021,2.361691,9.756254,-7.169626,-3.498895,8.192326,-2.454098,6.921309,1.134483,5.206519,-7.847873,0.716406,0.428649,-9.549069,-9.539235,-3.261185,-5.851496,8.949265,6.654787,8.533619,5.062031,-6.424235,-5.518907,-9.349547,9.110366,-8.381019,3.675384,-9.545222,-5.488225,5.072313,-3.108572,7.996638,-6.658395,5.355404,6.658386,2.607947,8.169530,-5.827214,1.781749,2.702555,-4.685749,-3.212363,8.069841,-5.508690,-8.268659,5.609021,-2.603460,5.170242,4.669897,-1.642260,0.476330,6.178094,-2.218498,-7.348312,9.710796,-0.764158,-5.873050,1.887972,-9.542426,2.888544,8.938509,4.850030,-2.237599,-7.246742,4.247833,-6.647055], dtype = "float32")#candidate|4139|(364,)|const|float32
call_4138 = func_2250_call(relay.reshape(const_4139.astype('float32'), [7, 4, 13]))
call_4140 = func_2250_call(relay.reshape(const_4139.astype('float32'), [7, 4, 13]))
func_2879_call = mod.get_global_var('func_2879')
func_2881_call = mutated_mod.get_global_var('func_2881')
const_4151 = relay.const([-3.686309,4.102070,5.056488,-0.788429,-4.853443,9.930153,2.922682,8.739619,0.952557,-3.831004,-2.539299,0.245407,3.414359,-7.804998,0.960416,-3.785244,0.913896,4.524124,-4.145944,-3.565474,-7.075825,5.047421,-3.971434,-4.762629,-3.402633,-3.642226,-9.406686,7.406331,-5.139857,-5.898749,0.727561,9.736119,-8.114189,7.453041,-4.442277,3.117119,4.201137,5.082554,8.572090,7.513496,-4.458480,-6.151572,5.372418,-4.319374,0.489695,-5.791468,4.753965,6.054859,-9.511749,9.479804,-2.497023,2.108862,6.624977,6.148159,-0.004766,-2.494867,5.620110,4.016841,-2.556681,-6.189666,-6.663338,-4.406401,8.420273,7.986134,-2.445865,-0.458918,6.066472,-9.116373,-1.055718,-2.505489,-7.999977,7.749439,0.355344,6.746829,-8.790250,-2.701616,-9.051687,2.869262,-1.296658,1.824164,1.034732,-3.058679,7.717912,4.688549,-8.537253,-9.573898,-8.713222,-2.759463,-2.410876,-2.564948,-9.250551,3.398625,6.653630,-8.901721,0.193784,5.205147,0.955338,0.859985,-1.631031,6.042564,-6.577989,-1.392497,3.840568,6.494399,-4.955777,4.220170,-9.674896,0.172871,6.253677,7.614703,9.927140,6.892467,-0.533199,9.454772,0.942185,-1.706883,-5.294613,-1.839465,9.448776,7.896948,3.707195,-7.652898,3.354260,-1.693389,3.463812,2.853510,-3.191273,-4.501094,9.771567,8.861904,-4.437034,8.558363,-9.531687,-9.771660,5.854454,4.678736,-6.216286,-3.114382,6.238938,-9.921897,-3.852147,9.187001,-2.830776,-2.165874,3.276814,-3.469354,6.957785,-8.500266,-5.064453,8.340390,-2.793548,-9.722331,5.937861,-2.731994,1.619294,1.190299,-0.927010,-7.091431,-1.944829,2.103327,2.525093,5.671903,3.256627,-1.852215,1.802321,0.938317,6.391725,-9.380658,-2.512696,7.920140,-9.877415,4.880855,-9.038534,1.127320,-0.439195,-6.167791,1.637608,-1.139477,-2.530612,-2.080943,2.628884,0.551956,2.842476,2.732574,2.300311,-0.204759,4.373570,-0.354295,0.488263,2.707673,-6.841582,9.656915,1.001467,-1.034768,6.684752,3.133707,-8.692724,8.654791,8.434372,7.203432,3.821384,-8.871863,-2.229856,-2.815927,-5.155084,2.388775,-7.450716,-8.457524,3.748579,1.277250,6.285872,1.571823,3.192787,-9.869830,7.337198,3.807596,4.230887,4.282557,4.833592,2.992289,2.693480,-5.743050,-2.369317,-1.525196,-9.830757,-2.201776,-3.445816,9.551700,-7.434280,-2.762541,-9.314207,-1.640167,2.067057,5.064493,-6.013138,4.232180,7.301980,8.849056,-0.059723,5.154572,0.631013,6.307428,1.769992,8.154617,-5.314314,2.027979,-4.056447,-1.127440,-4.496475,-6.973258,-1.847485,-7.612053], dtype = "float32")#candidate|4151|(252,)|const|float32
call_4150 = func_2879_call(relay.reshape(const_4151.astype('float32'), [7, 4, 9]))
call_4152 = func_2879_call(relay.reshape(const_4151.astype('float32'), [7, 4, 9]))
uop_4156 = relay.atanh(uop_4091.astype('float32')) # shape=(5, 1, 4)
uop_4158 = relay.atanh(uop_4093.astype('float32')) # shape=(5, 1, 4)
bop_4169 = relay.logical_and(uop_4156.astype('bool'), relay.reshape(call_4088.astype('bool'), relay.shape_of(uop_4156))) # shape=(5, 1, 4)
bop_4172 = relay.logical_and(uop_4158.astype('bool'), relay.reshape(call_4089.astype('bool'), relay.shape_of(uop_4158))) # shape=(5, 1, 4)
output = relay.Tuple([call_4114,call_4128,var_4129,var_4130,const_4131,call_4138,const_4139,call_4150,const_4151,bop_4169,])
output2 = relay.Tuple([call_4115,call_4132,var_4129,var_4130,const_4131,call_4140,const_4139,call_4152,const_4151,bop_4172,])
func_4176 = relay.Function([var_4129,var_4130,], output)
mod['func_4176'] = func_4176
mod = relay.transform.InferType()(mod)
var_4177 = relay.var("var_4177", dtype = "float32", shape = (72,))#candidate|4177|(72,)|var|float32
var_4178 = relay.var("var_4178", dtype = "float64", shape = (198,))#candidate|4178|(198,)|var|float64
output = func_4176(var_4177,var_4178,)
func_4179 = relay.Function([var_4177,var_4178,], output)
mutated_mod['func_4179'] = func_4179
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4189 = relay.var("var_4189", dtype = "bool", shape = (4, 5, 6))#candidate|4189|(4, 5, 6)|var|bool
var_4190 = relay.var("var_4190", dtype = "bool", shape = (4, 5, 6))#candidate|4190|(4, 5, 6)|var|bool
bop_4191 = relay.logical_and(var_4189.astype('bool'), relay.reshape(var_4190.astype('bool'), relay.shape_of(var_4189))) # shape=(4, 5, 6)
func_526_call = mod.get_global_var('func_526')
func_530_call = mutated_mod.get_global_var('func_530')
const_4201 = relay.const([-5.656120,-6.748052,-6.606289,-2.716507,1.302435,0.376356,-8.005076,2.439463,1.402439,-9.378894,-6.287881,-5.030509,-4.520591,3.792646,4.906089,5.789046,-1.071167,-2.947341,8.861095,-0.980608,-9.302531,7.032072,-1.710849,7.948110,-9.261658,-7.423258,-1.055841,3.013695,-2.783175,-3.779491,-9.021942,9.919519,3.371545,1.320330,-3.233700,-8.370502,-2.711732,-2.972303,-6.246596,-2.405591,9.295599,8.725798,7.574593,-4.942007,-3.701849,6.092484,-4.367791,6.047726,-2.375633,-8.410762,-7.224310,4.821674,-0.591224,7.217974,7.064638,-2.678455,7.284869,-3.657684,-1.871750,-5.639473,-3.103816,-1.770357,6.484403,-1.484103,-5.560454,-9.395380,0.917797,0.783300,9.193727,-4.406334,-2.161514,2.062838,9.667217,-3.391529,-9.763124,-6.456133,4.134153,3.375632,-2.851025,-4.805364,6.303252,3.163541,2.242787,-9.136874,-8.790172,2.699790,5.416367,-6.757872,4.664639,1.513440,9.907049,-1.702220,-4.129121,2.926492,7.151164,2.017506,0.169935,-8.657844,-4.322063,4.950768,1.541844,7.963133,-0.375428,2.220030,8.792532,6.100767,-8.743758,4.740324,-5.074954,6.476022,-1.684411,-4.777238,-5.454518,-7.478521,4.857497,5.183416,3.057359,-7.046814,-9.561423,0.589209,-5.503109,-7.531189,-8.236185,9.348336,9.726508,-9.555879,7.464024,0.708043,7.801084,-4.103197,7.558212,-5.683397,8.115879,-6.345872,-9.882585,8.520504,1.400986,-2.536165,7.348624,-3.672082,-2.301969,-3.696423,8.549661,8.175736,-5.315564,3.781093,4.264989,-7.434069,-7.843111,-3.793015,-2.907665,0.713128,-6.779080,0.196310,0.265165,-2.114797,-5.383559,-1.221842,-9.107204,5.875658,2.556011,-2.376543,-7.520699,9.398944,-5.711186,2.325138,7.432557,-8.361175,-0.983440,2.084095,4.182225,-0.387696,2.099238,0.147420,-4.791326,-8.560288,5.930591,3.283224,5.805445,8.831894,-2.527135,-7.321624,0.550664,7.233800,-7.632073,-1.851007,-0.098944,5.635086,2.576939,4.949002,3.390526,5.069198,6.365174,-4.190161,-4.981330,-6.378940,8.030717,-4.020440], dtype = "float64")#candidate|4201|(198,)|const|float64
const_4202 = relay.const([[6.243601,8.926135,5.413281,5.461499,6.573130,-7.516307,5.907760,2.616748,-4.251259,1.241185,-7.087825,9.224222,-8.721327,3.037370,-9.429185,5.436855,-3.702511,-0.211413,9.234210,3.145630,2.101485,3.646217,0.401654,-3.149003,-3.888941,-5.650422,-2.074790,-7.744869,-2.728373,-4.778505,-6.854756,-3.856345,-9.561371,-5.827987,-3.538134,-6.156790,7.563103,-1.969551,-6.901062,-7.743435,2.482551,-4.609458,-3.318039,-5.139957,-2.367194,1.713910,-8.020528,0.212261,-4.836550,-5.471009,2.746598,-7.264154,-1.224415,1.016149,-1.699413,-6.069748,-1.923145,7.495322,0.481113,2.857436,-6.809661,-5.476236,-3.642351,-1.785883,1.539831,5.125325,4.293999,4.458102,5.374228,3.676515,-7.051495,1.154349,-5.488648,2.985157,-6.489833,2.523408,9.107935,6.998635,2.261647,-7.323066,-3.284109,-2.646124,-3.169669,2.776515,-5.843905,4.611573,-4.756810,-7.697616,2.794345,-9.929122,-0.939419,8.264983,4.802147,-9.421163,-7.559858,3.446375,-7.228927,-9.576851,7.063869,-0.208660,-4.280687,-8.113689,-3.746763,6.373022,-5.276743,2.858018,6.813750,-5.480989,7.365511,-7.608251,-3.535450,-9.306883,3.783825,5.043139,5.901195,-2.500946,7.029635,-8.738734,8.588191,4.332985,-4.019328,9.306016,1.429989,-8.098108,-6.257530,-4.776714,8.227968,1.353937,-3.615121,5.647291,4.063568,0.354999,1.738359,-0.063015,-5.963530,-6.261711,3.548742,-4.675392,-1.613190,2.499748,5.261947,7.032359,9.979569,9.127674,9.437861,5.160936,7.213206,8.433037,-0.074439,8.623072,3.702381,5.824674,4.181828,-2.106135,1.455034,-4.315554,5.830837,0.962819,9.429338,-9.671891,6.614518,0.850536,4.179815,8.126478,-4.464510,-0.049257,1.383993,-9.595719,1.351852,-8.076335,1.175474,-1.220290,-5.895185,1.852733,-2.769248,-9.550018,1.158227,-5.426987,-2.295321,-5.893603,3.616491,-0.009779,1.914032,2.783113,6.156535,1.472813,1.485029,-0.560267,6.218329,4.274541,9.266797,0.273114,5.302832,6.957641,-5.981495,-6.131877,-8.068794,-6.100362,-0.728088,4.000764,6.455109,-0.511514,-9.556161,-0.059257,-3.948572,0.314747,4.718776,-1.834268,6.836757,-6.010138,8.678251,9.427769,2.639537,3.773350,6.925560,-7.132380,2.994332,9.300256,2.179368,1.155849,6.428935,9.569865,-8.313345,8.836624,-8.204894,6.484024,1.150172,6.052610,-7.439100,-5.026291,9.022342,-4.885366,3.802063,-3.326793,7.107485,-8.264728,3.715844,3.389003,6.102574,4.167960,-8.848211,0.957072,8.567671,-0.287792,-8.380589,1.924671,6.910779,-6.326176,-6.829456,1.709701,6.009542,-5.396477,-5.104008,-6.383782,2.290949,5.516931,-3.247059,1.158304,6.345273,4.652331,-1.512742,-0.167127,-6.315627,-5.825225,2.245696,-2.865937,6.505964,4.659617,-6.367734,1.353609,0.850195,7.856105,1.971902,9.264087,-0.642763,-3.127886,-1.298676,5.620349,-6.766031,5.488724,9.903277,-6.435434,-5.274431,-4.005512,1.488985,-0.841737,-8.619325,-5.448646,-8.116618,4.361048,-4.930623,4.866338,-4.282546,0.450457,-4.992561,-4.198752,-8.310424,-4.282915,3.978196,4.528960,-5.558209,4.128539,6.039756,2.009273,-2.300359,-9.017869,-8.311661,7.846265,-0.012708,3.962005,8.128901,0.029973,-6.015998,-1.737782,-9.197925,-1.179874,-3.580413,-1.363982,2.906078,4.280236,-6.550889,-1.810756,-9.210624,9.241046,-3.745016,2.609717,-6.064038,3.828200,7.335762,-7.123657,7.739074,-2.440770,7.634290,3.636699,-0.843794,-0.008277,6.138886,-8.116238,-9.190222,-4.724089,-4.118343,-4.871602,-7.246971,-7.614261,8.229568,-2.347320,2.663481,-5.706608,5.485085,-2.127115,8.820700,-7.254325,3.984481,-0.595577,-9.241378,2.006270,-4.770650,0.205375,1.012834,-7.506405,9.338590,-5.467146,-6.395413,7.827769,-0.040697,9.563157,-9.563835,-8.921796,-6.251237,2.745106,-4.107006,-9.151190,-9.657616,6.934089,6.401248,-7.152631,-1.473471,4.531268,-8.117566,-4.055506,-1.777471,-9.970519,7.392130,1.053371,6.946447,-8.816107,1.016801,-2.347675,4.229622,5.060513,-2.514905,1.167336,-8.506326,5.358115,2.150920,-0.571459],[1.777220,-8.236964,1.527524,8.552730,-3.242644,-7.784808,-1.877474,5.690817,2.135774,-5.489933,-0.999920,-6.702576,-0.181559,3.135244,-7.119832,-3.086669,-0.806287,-7.430767,-1.505670,-9.990920,-4.132647,-7.132266,-3.067124,-8.723401,-6.208479,1.907428,-8.553075,-6.988345,1.230025,-4.938532,0.791424,6.285161,5.327599,5.007334,5.353118,-2.020495,7.377219,-2.307064,-5.432845,5.600605,6.276116,9.361174,-2.659106,3.450420,-9.930801,1.831562,-2.737253,0.988872,8.201199,7.011806,9.190058,-2.220114,-4.502108,-9.996190,3.656080,8.884550,-0.128777,-2.261282,-9.500729,-9.992198,5.944678,-9.994469,-1.126658,4.421716,0.539645,0.470471,-7.593391,0.438241,-3.900163,1.970098,3.347169,9.103750,2.204051,-9.668343,7.430921,-0.637328,7.401655,-2.781730,5.672282,8.053262,-8.359767,1.341610,-8.372007,5.747370,-9.815506,-9.807936,7.380793,6.499569,7.371778,0.343994,-1.333954,2.737934,-4.420187,6.551535,8.514050,-9.632021,7.866053,-1.861861,-7.391360,3.180101,-4.436814,-3.470972,5.879119,-1.356811,-8.348373,9.454527,-4.318462,-2.082184,-4.028469,-7.197932,-4.861654,8.499106,-5.398463,5.912585,2.967297,7.155965,-2.329054,0.843979,6.100608,-2.471033,4.971521,-5.627385,-0.838222,1.031345,-8.066037,-8.759095,-3.186613,1.684616,8.650571,-0.533823,1.753762,-0.737115,5.927093,7.581549,0.397691,-1.807275,8.318118,-7.853594,9.591981,-5.317800,8.127748,-0.903398,-5.345881,-7.589794,-3.347883,-3.561024,-8.093118,2.306038,-6.856444,-4.382435,-1.930072,8.582733,1.794378,7.251451,1.210861,6.001933,-4.672592,-1.388150,6.025544,-8.039192,7.360357,4.394019,5.279296,-9.724483,2.498686,-7.864014,0.448354,7.302472,5.042156,-9.844941,-0.656166,-7.317848,0.620798,8.042354,8.476411,0.632976,-4.429527,2.666471,6.773479,6.557333,-3.453922,8.421206,6.217785,1.520291,0.002333,0.667687,0.682613,3.809479,9.961966,0.336438,-2.854853,7.520616,7.509842,8.985526,-1.379654,5.566243,-2.590911,1.366149,4.652775,-0.871482,-0.788844,-6.608713,6.388431,-5.631088,-6.999213,-6.190079,-5.778955,3.682619,-4.633591,9.271138,2.103504,8.080029,1.766965,-6.690057,5.311992,7.150086,-2.855218,8.049122,7.629162,-1.415993,1.027832,7.589012,2.977387,5.029226,4.492015,-6.883902,0.152082,-5.529765,-7.297788,2.638693,5.769640,5.024763,-9.811445,-9.429623,8.319220,1.650851,4.940542,-9.008962,6.420935,-4.713738,-8.779364,-6.583417,-4.505420,-2.546772,1.919710,3.848388,0.523851,-0.556430,8.622319,7.763478,-9.283923,-9.491351,1.564674,-4.878030,-8.514012,2.885127,8.303477,1.345334,-7.469590,6.601169,4.945515,2.707439,0.320130,5.736629,-6.071271,9.475387,3.710215,-6.293558,1.680877,-2.946632,7.725829,-1.532591,0.279277,-5.693005,-5.856847,7.531850,-4.476881,-9.248659,-5.883033,2.820864,-9.232866,5.552346,-3.121156,1.097450,-9.932742,6.617404,9.377294,2.146221,9.450349,2.640042,1.446756,-0.488541,9.000676,8.141837,-8.759992,-6.933121,-2.030052,-2.348513,6.438128,-9.509656,4.111620,5.431446,5.361877,0.853141,-5.799643,-5.481263,5.595184,-4.002596,0.286457,4.313775,-8.712100,9.535347,2.523975,7.238011,0.773965,0.361118,0.890990,4.148167,4.944509,-1.661795,9.179354,9.243452,6.620023,7.360404,4.148950,-7.693003,-6.309081,-6.107068,9.746438,-9.718452,3.640743,-6.388704,-9.320520,-0.287487,-8.389844,-9.117263,8.879366,0.945106,5.231257,-3.051397,6.348054,-9.222246,-4.431786,9.554678,-7.294404,-1.102498,2.926664,-9.748008,-3.731939,0.157884,4.113677,0.025725,0.450778,3.269603,6.658839,-8.299813,-3.602137,0.615255,1.494884,8.157596,-0.786665,-4.769284,-4.601406,-8.149684,6.277448,0.013919,1.763352,8.496833,7.416582,8.563493,-8.883508,9.222128,-6.036316,5.687449,-3.636536,9.805064,-0.378443,-7.990922,-0.654442,-0.190899,5.650400,3.248799,-3.305243,5.771589,4.263139,-5.983067,-7.868880,3.502118,-0.895172,2.341389,5.565799,-9.036500,-6.127024,-9.008588,0.342637,-9.166488],[-3.246530,1.219389,-5.271130,3.794041,4.459662,-6.782386,3.510376,-9.762038,-2.021162,-9.083988,-4.565914,-2.619884,-7.291189,5.327031,2.709421,-6.098013,6.904476,-3.158522,-1.564926,-0.429844,9.478498,-1.244995,-7.846013,7.308705,-4.889887,-3.080963,-3.212609,0.277498,2.624546,-6.845935,-7.883411,-4.265702,-4.513953,8.197045,-0.581001,-0.875838,-5.513172,8.500455,6.168512,-9.383870,-3.070777,-5.057526,3.666076,7.527997,-7.731689,5.518561,-5.757218,4.055871,-7.748946,-5.890532,-5.201679,-3.395786,8.686801,0.975975,-1.039606,-5.293924,-1.384131,1.640337,-0.241408,-1.794884,-4.470677,4.261933,5.882799,8.783545,2.354024,1.008811,-0.504442,6.985945,2.117175,-2.159299,-0.201138,-8.897978,5.614966,-3.049477,6.398366,1.453458,-2.421381,-8.907865,3.241457,6.257636,0.523085,-9.351501,-2.628103,8.553413,-6.513048,-8.865405,-2.304908,5.174128,-1.353512,9.719983,-6.567254,-6.978507,8.369059,-2.326578,-1.055183,-4.800146,-5.720832,-6.494657,-1.073875,-6.804200,9.698165,8.559133,-3.158008,-2.084540,-3.924383,-3.727711,-3.241364,7.579776,8.245168,-0.708645,9.226643,-1.574946,2.650982,-6.315482,-2.586519,-5.342802,0.297857,-6.037556,-8.384845,3.632463,-0.157011,3.189027,-3.430200,2.380999,-1.725143,5.669080,-1.032812,-0.849397,-3.557538,3.031542,3.223163,4.107109,9.339986,-1.680808,-0.038460,-5.079548,6.789248,6.668551,-7.879943,-5.138565,-9.488815,-0.784494,3.159917,-4.845874,3.749511,-1.741998,1.914820,-8.584815,7.388527,-0.103512,-1.826238,1.315101,-9.135398,6.153565,7.148576,9.809104,1.380114,-3.087123,-7.253769,4.982230,-7.290362,0.757652,0.020069,-0.938274,-6.224125,-9.538834,4.136106,9.870522,-1.847898,-1.130809,-4.409192,0.807044,6.334971,-4.768652,-7.603796,7.964762,8.477760,-4.700075,-5.564726,-8.056687,5.350515,6.236434,-0.125875,-7.130158,6.408662,-7.313669,-4.854592,-4.676854,5.498816,-0.541508,-2.132687,-0.655819,-1.291708,-7.289462,5.150601,5.796696,7.699781,5.699519,8.062312,-8.460392,-4.901298,-0.588603,-0.082636,-9.682971,2.151368,8.949829,-3.831031,-0.798291,-6.803788,-2.533714,6.207434,-0.979776,-1.878695,-9.669487,6.985726,6.830062,5.836982,-2.169622,-1.026023,8.172449,8.015001,8.966625,-7.114966,-7.132657,-8.415501,-1.690372,5.565876,-7.170205,-8.823837,0.321972,2.867690,1.463602,5.094265,-9.963484,-0.215648,1.724162,-2.823375,4.770348,-8.156913,0.590346,-5.646944,-4.035866,-0.492337,-0.651477,4.314479,-4.658897,-8.142311,7.154407,3.047698,9.152924,7.302462,-9.167547,7.827331,-4.984598,8.049429,-3.052587,1.739737,7.100037,2.730230,-9.256213,-5.362261,2.290714,-8.653034,-1.629548,-4.268147,0.125933,-7.960310,3.791573,-0.099221,-7.977276,8.206172,9.024572,8.873345,-0.620713,-5.197401,-0.046548,9.772954,3.769810,-8.484422,7.017082,8.499829,7.708002,-0.932926,1.176769,-6.991790,5.167728,-9.525582,6.624201,5.025344,-8.812289,-6.389695,-9.704883,-3.525773,-1.133473,2.691424,3.796927,-9.254091,4.071524,3.528370,4.320812,-1.457982,8.483795,-3.466157,-9.776686,-6.853569,2.666598,1.160013,-8.570673,-7.404240,2.793354,8.991323,-7.995534,1.979428,-8.628148,0.326989,-8.962710,-9.578445,-3.915133,-4.236291,1.677001,-5.557681,-7.380629,-6.254136,8.492134,8.911834,0.880411,-4.198695,-8.601401,7.486326,-1.770199,8.873762,-8.938634,7.805400,-0.233855,7.040345,-6.559078,-0.529670,-1.353123,-0.358437,1.626717,-1.559884,-8.685448,3.183262,-5.712838,3.392240,0.985838,5.059755,5.880989,-0.622964,4.104890,7.978225,5.243864,-4.579710,-8.310085,-7.578095,-2.875838,-4.919153,5.133593,3.866826,-5.346612,-9.849953,9.484209,6.938922,-4.581719,-7.630341,-7.551064,-3.923314,-2.673595,2.768761,2.799622,-6.344629,-5.748888,-3.550773,-2.573437,4.563905,-2.738949,-1.267527,1.020686,-7.033366,-9.010436,5.853828,-8.120002,-1.442217,-8.265518,-9.394787,4.581589,7.811849,4.236573,1.614921,-2.948838,8.212046,6.824687,-1.274841,2.710672,-1.318684,-2.422285],[-5.885273,7.739151,2.679454,-5.127690,0.425034,-6.275518,3.360019,-1.599944,-4.376761,1.384245,-0.416800,4.434233,-2.222091,5.871610,-1.728485,-0.780531,6.851283,-3.483206,-8.179276,-0.976171,-6.645355,-3.368422,-0.716486,0.307473,4.851524,-7.063698,2.628778,2.004792,3.460271,-1.590069,-8.493021,-3.208929,5.649584,-4.138732,-3.644354,2.618676,8.598581,-1.485383,3.115879,-0.339967,4.255545,-0.447391,4.209422,-7.364041,-0.642100,-5.228843,0.511902,-0.375204,6.044748,-6.800130,5.615163,9.482522,-8.130488,0.457707,3.842619,-5.296562,-5.028434,3.291112,-4.688942,-0.604260,-9.197927,8.122859,-6.778544,-1.016884,-1.342644,8.237586,2.714784,1.482407,-3.003132,1.067212,-2.177424,-7.590649,-4.298520,-2.452444,2.586249,9.986457,-3.445656,-1.490598,4.388007,-7.000453,9.628941,0.891571,-6.863705,-0.309215,1.294850,-1.647280,-8.289093,7.397395,-6.421486,7.731459,-3.149837,-0.345493,-8.042476,7.308563,9.250556,2.058870,7.205835,9.015729,8.349302,9.919102,0.628407,2.255779,-1.297377,-3.094712,-0.286179,2.008328,4.606856,2.799670,-2.881015,5.994700,1.603160,-2.600950,4.052402,-3.098114,-8.302521,-5.758570,-1.965585,9.887321,-4.269842,8.645284,4.250744,1.855427,-6.512148,-8.299119,-9.459641,4.592931,8.561568,-8.542686,0.292831,4.991006,-4.035810,-0.493185,1.656872,-9.693632,7.184747,0.441948,-3.568521,5.784691,2.408332,7.063094,2.209329,7.038343,-0.773102,-9.844651,4.951735,5.968668,8.114063,-9.018929,2.799457,-2.425584,-7.459046,-9.818135,-9.421514,-2.601604,3.462448,4.187384,-1.435809,5.158149,0.772118,-3.144466,-1.651392,-6.811211,7.788236,-2.028247,2.467549,-2.141471,-2.430085,-5.608727,-9.160363,8.749637,-9.136964,7.475309,0.726019,-2.116338,-6.334740,0.252361,-6.753406,-1.085275,-5.290900,8.886808,2.091412,-2.004636,-8.229110,-3.554867,6.594749,-8.662859,5.841797,-5.726673,3.483063,7.108825,5.049266,-8.869851,-5.836205,-6.199804,5.339813,5.380750,9.207568,0.902541,-3.336114,-8.371142,3.710753,-6.784674,-9.478090,2.813491,2.420202,8.354178,-1.997306,-3.815066,-4.807593,5.280219,-4.776596,-1.744179,-6.819649,4.186967,-2.281784,-8.124448,8.703010,-2.964628,0.253441,4.559227,-1.124926,-1.625707,-4.856217,8.716094,7.465239,-6.510200,7.155407,8.877154,-8.800886,0.834363,-3.384941,-5.444002,-3.672961,-0.458017,4.837539,-4.717496,-4.925014,-3.192141,0.720074,-3.111984,-7.942655,8.562715,3.204282,-7.104108,8.738995,-4.359441,5.642761,9.775607,1.630332,-1.882355,0.214233,-4.226306,6.358313,-0.231063,7.384838,9.351832,-1.246672,9.464223,8.905044,1.358259,3.528168,-1.567700,3.663645,-1.783285,1.640298,2.899075,4.730424,6.831626,-2.228904,-9.234714,-5.118215,6.760472,-6.050220,-8.939747,-2.252212,-4.009172,-3.898700,3.643736,1.242806,-4.777267,-5.715213,6.624465,-5.988695,-3.271123,9.634213,-7.193494,-6.940654,-5.630605,-5.105029,-6.486068,-4.509378,3.881284,3.348305,-3.888985,-1.960892,-8.910292,-7.622903,0.741433,-2.153394,0.909029,-2.549782,1.201651,-7.289523,6.489210,-8.919121,5.010271,-7.559096,0.786075,0.567410,-0.539637,5.926602,-9.263093,7.542791,-7.981592,1.786019,2.134966,8.814237,-9.683540,-2.085686,-9.379724,7.391881,5.739557,-6.660930,-8.672838,8.865680,-3.746998,3.883777,-8.601634,-3.278909,-7.833786,4.648971,4.320538,-9.794425,-5.706163,1.986252,7.723570,-1.843304,-4.756804,-1.167376,5.184389,-7.125279,-0.802929,-9.121947,-8.573532,7.242406,4.390618,-0.874786,6.312213,-5.528279,0.988631,-2.386400,2.235197,9.182765,-4.715656,-4.826735,9.201919,4.346484,-6.888180,3.333025,-2.474730,0.987861,0.176170,-4.618762,-0.896691,-6.276717,-4.189920,-5.692380,7.028221,2.740640,0.166655,8.848297,-2.935647,-8.618197,5.608764,3.267296,-0.797762,9.741165,-9.479238,-6.864401,-6.504426,-8.997375,-9.220803,-0.441441,7.399373,5.626956,5.022924,4.342882,8.076178,-6.521605,9.191088,-0.107394,-1.440197,8.952191,1.642833,6.555251,-7.757310]], dtype = "float64")#candidate|4202|(4, 396)|const|float64
call_4200 = relay.TupleGetItem(func_526_call(relay.reshape(const_4201.astype('float64'), [9, 2, 11]), relay.reshape(const_4202.astype('float64'), [1584, 1]), ), 2)
call_4203 = relay.TupleGetItem(func_530_call(relay.reshape(const_4201.astype('float64'), [9, 2, 11]), relay.reshape(const_4202.astype('float64'), [1584, 1]), ), 2)
bop_4212 = relay.greater_equal(bop_4191.astype('bool'), relay.reshape(var_4189.astype('bool'), relay.shape_of(bop_4191))) # shape=(4, 5, 6)
output = relay.Tuple([call_4200,const_4201,const_4202,bop_4212,])
output2 = relay.Tuple([call_4203,const_4201,const_4202,bop_4212,])
func_4218 = relay.Function([var_4189,var_4190,], output)
mod['func_4218'] = func_4218
mod = relay.transform.InferType()(mod)
mutated_mod['func_4218'] = func_4218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4218_call = mutated_mod.get_global_var('func_4218')
var_4220 = relay.var("var_4220", dtype = "bool", shape = (4, 5, 6))#candidate|4220|(4, 5, 6)|var|bool
var_4221 = relay.var("var_4221", dtype = "bool", shape = (4, 5, 6))#candidate|4221|(4, 5, 6)|var|bool
call_4219 = func_4218_call(var_4220,var_4221,)
output = call_4219
func_4222 = relay.Function([var_4220,var_4221,], output)
mutated_mod['func_4222'] = func_4222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3335_call = mod.get_global_var('func_3335')
func_3337_call = mutated_mod.get_global_var('func_3337')
call_4227 = func_3335_call()
call_4228 = func_3335_call()
output = call_4227
output2 = call_4228
func_4243 = relay.Function([], output)
mod['func_4243'] = func_4243
mod = relay.transform.InferType()(mod)
mutated_mod['func_4243'] = func_4243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4243_call = mutated_mod.get_global_var('func_4243')
call_4244 = func_4243_call()
output = call_4244
func_4245 = relay.Function([], output)
mutated_mod['func_4245'] = func_4245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3123_call = mod.get_global_var('func_3123')
func_3125_call = mutated_mod.get_global_var('func_3125')
call_4270 = relay.TupleGetItem(func_3123_call(), 0)
call_4271 = relay.TupleGetItem(func_3125_call(), 0)
func_1375_call = mod.get_global_var('func_1375')
func_1379_call = mutated_mod.get_global_var('func_1379')
const_4278 = relay.const([3,-4,2,-2,10,-6,1,-7,-10,-1,-10,-5,7,-4,-6,-1,-8,-4,5,-3,-3,7,-10,-8,3,-1,2,-3,-6,2,-1,1,-7,10,-10,-6,2,9,-8,-2,10,-6,-9,-3,-6,-5,9,-6,10,8,-9,-2,-8,10,-2,6,8,-6,9,-2,-6,1,2,2,3,3,-4,2,-8,7,7,-1,5,1,-9,-10,9,-10,1,4,-2,8,2,10,-4,-1,2,7,-1,3,3,-5,-7,5,7,-3,-8,6,9,-1,3,-6,-6,-2,1,-7,9,7,8,-3,3,5,7,3,-7,10,8,5,-7,3,2,-4,-3,-6,-5,10,-7,1,-6,9,-1,-5,3,3,9,-9,5,10,4,-2,7,7,7,-5,4,-8,2,-4,-5,4,4,-3,-7,-10,10,-2,-2,-10,-8,-1,10,-7,-5,5,9,-4,-5,3,-1,-4,5,-2,4,-5,9,-3,5,1,-1,10,8,-5,2,-6,3,7,-6,4,-1,4,-4,8,9,1,-8,1,6,8,6,-2,5,-6,8,-5,-10,8,-6,-5,-8,4,-9,1,-1,-5,4,-7,-7,-2,-4,6,3,-9,-2,3,-3,5,10,-9,-6,9,2,-1,-10,7,-1,1,7,-5,6,-1,3,-5,4,5,8,10,-1,-10,5,6,-8,-9], dtype = "int64")#candidate|4278|(252,)|const|int64
call_4277 = relay.TupleGetItem(func_1375_call(relay.reshape(const_4278.astype('int64'), [9, 2, 14]), relay.reshape(const_4278.astype('int64'), [9, 2, 14]), ), 1)
call_4279 = relay.TupleGetItem(func_1379_call(relay.reshape(const_4278.astype('int64'), [9, 2, 14]), relay.reshape(const_4278.astype('int64'), [9, 2, 14]), ), 1)
uop_4308 = relay.erf(call_4270.astype('float32')) # shape=(5, 1, 4)
uop_4310 = relay.erf(call_4271.astype('float32')) # shape=(5, 1, 4)
output = relay.Tuple([call_4277,const_4278,uop_4308,])
output2 = relay.Tuple([call_4279,const_4278,uop_4310,])
func_4314 = relay.Function([], output)
mod['func_4314'] = func_4314
mod = relay.transform.InferType()(mod)
mutated_mod['func_4314'] = func_4314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4314_call = mutated_mod.get_global_var('func_4314')
call_4315 = func_4314_call()
output = call_4315
func_4316 = relay.Function([], output)
mutated_mod['func_4316'] = func_4316
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4342 = relay.var("var_4342", dtype = "uint32", shape = (14, 12, 14))#candidate|4342|(14, 12, 14)|var|uint32
const_4343 = relay.const([[[-2,-9,-6,3,10,2,-2,-1,5,-8,-4,1,-6,3],[-1,-5,3,8,-9,-3,8,4,2,-2,1,-9,2,9],[9,6,-6,-7,-5,8,7,-10,-9,-7,-10,-7,9,-5],[8,-9,-5,-8,-5,10,9,3,1,1,10,10,-4,-10],[-7,-4,-9,1,-7,5,-4,-4,-4,1,2,5,1,-1],[-6,-10,6,-5,6,-10,-7,-4,9,5,7,-7,7,1],[9,5,-3,-8,6,5,-1,4,10,-8,8,-10,-9,-3],[1,4,-4,-7,3,-7,9,10,8,8,6,5,-9,-8],[-4,-5,-5,-8,8,-7,1,10,7,-1,-6,1,5,5],[-10,2,-3,10,-6,8,-4,-4,10,-8,-4,4,-10,-3],[10,10,-10,-8,7,-3,-8,6,-8,8,4,7,-9,-9],[5,-3,-9,-8,5,-4,-4,7,9,-4,4,7,2,-6]],[[-4,-7,7,5,-4,7,-9,-4,-9,6,6,7,6,10],[9,-8,-2,-3,6,9,2,-1,-6,-7,10,6,-5,-8],[8,-8,7,-1,2,10,-3,10,-4,10,10,8,1,5],[-7,-9,-4,-4,-5,-10,1,5,-10,1,7,-5,-9,6],[6,-7,4,-10,7,9,-10,-8,-10,3,7,-5,5,3],[4,-3,-9,-5,-8,-3,-10,-6,-3,9,7,-5,-8,-1],[10,-7,1,7,2,-7,9,-7,2,9,-8,-9,2,1],[4,-5,8,-1,1,3,9,6,-9,9,6,9,8,-1],[1,2,-8,10,-8,6,-10,-3,-8,9,1,1,5,1],[7,4,6,3,-3,-1,-5,-10,-8,4,-3,-5,10,-2],[-7,8,5,-2,-10,-6,-10,-5,3,-8,10,9,4,10],[10,-10,-4,-1,-2,3,-9,-6,5,-4,7,-3,3,-4]],[[6,2,5,4,-10,-10,9,-6,-2,7,-4,-10,-2,-9],[3,-3,-7,-4,5,-4,5,9,5,2,6,7,-2,-10],[-7,9,-4,10,7,6,2,-9,3,-10,-1,-8,-4,6],[1,10,9,-2,2,-8,4,3,5,-4,7,-7,-6,5],[1,6,9,3,-5,-3,-5,-8,-5,6,10,-6,-3,5],[-9,1,-4,-3,-1,3,1,3,-4,-4,1,-9,-1,-7],[-10,-6,-5,-1,4,-3,2,10,-9,9,5,2,-5,-6],[6,5,-6,-6,-9,-1,5,-7,8,-2,2,10,-7,3],[5,-10,-1,-8,-7,-9,5,7,-3,-9,-2,8,2,-1],[-4,1,-4,-10,-8,-3,5,1,-5,2,-5,-9,-1,2],[8,-10,-10,2,4,8,-2,-6,6,-9,-6,-8,-1,7],[-7,3,4,8,8,7,-1,5,9,-10,-9,-5,9,7]],[[10,10,-4,-3,-8,-4,10,-10,8,4,-7,10,5,-4],[-9,-4,6,8,-9,-10,-1,-5,4,4,9,9,4,3],[-7,4,7,-8,-2,-4,-7,-7,-7,-1,-8,-4,1,-4],[-5,4,5,9,-6,6,1,-8,-2,-7,9,-1,1,5],[-1,8,-9,5,10,7,-10,3,-3,-10,-8,-6,-6,-6],[-4,-10,-2,-10,-3,-5,10,-1,3,10,7,-10,8,1],[-5,-3,-10,6,3,2,-1,-3,7,9,-9,7,-2,10],[5,4,-10,2,9,-1,4,-10,-10,-3,-6,10,-3,1],[4,-5,-3,-2,7,-5,2,3,-1,8,-8,10,-5,-9],[-5,-6,-10,-1,-4,-7,5,-1,10,-2,7,-10,-10,8],[1,8,8,9,6,4,-1,1,5,-4,6,-3,5,-1],[-6,-2,8,6,-1,5,-3,7,2,-1,-2,9,10,-4]],[[-9,-9,3,3,9,-9,-2,-10,-3,-10,-7,-1,5,-8],[4,-9,-6,-10,-10,-2,4,-1,-6,-3,8,-4,-4,3],[-5,-6,4,3,-6,10,-8,6,4,8,8,8,7,-2],[-9,10,-9,-4,-2,4,-2,3,-9,-3,6,-4,5,4],[-6,-2,-5,-8,9,-7,2,10,-6,-5,-1,7,-2,-6],[4,8,6,6,2,-6,-7,1,-2,5,-3,-2,-9,-6],[1,7,-9,7,4,-9,-7,-7,-7,6,-1,-9,1,1],[-2,10,-6,-1,1,2,-1,-4,-5,-5,-1,-2,-1,-7],[2,-2,-4,8,-1,-6,-6,2,9,-4,-6,7,-9,8],[-9,4,-4,6,3,9,-4,8,3,-5,-3,7,9,7],[-2,-10,1,-4,2,-2,-5,-7,-5,-7,5,1,3,9],[1,-10,2,-5,5,7,-1,-2,-9,-5,6,-3,8,-10]],[[1,2,7,6,-3,-2,2,8,10,2,-9,-4,-1,-5],[-10,-9,-6,2,5,3,-10,-8,6,-8,4,-6,8,-7],[8,9,8,-8,1,10,-1,-3,9,5,-7,-10,4,-5],[5,-3,-5,2,2,-2,1,6,6,-4,3,8,4,-3],[3,3,4,-2,8,-4,3,3,7,-7,9,8,1,-3],[4,-5,6,7,-6,8,-3,6,10,2,-9,2,2,-9],[4,10,-8,6,-5,-5,-2,-4,-7,2,10,-5,-7,-4],[-7,-2,6,10,8,-1,9,-1,9,7,-8,1,5,4],[5,10,4,4,5,6,-9,6,3,8,-5,-5,-4,-10],[6,-2,3,-2,4,-8,7,-2,-3,4,-6,-7,9,-5],[-2,-5,-8,-7,9,-9,-5,-3,3,1,-4,3,1,-4],[-3,3,-3,-2,-5,3,10,6,8,-2,-7,-8,-9,-2]],[[10,1,4,-9,-4,5,3,3,9,-1,-1,2,7,8],[1,-8,-5,-6,-5,-5,7,-10,9,6,-3,6,1,1],[-8,-5,8,-9,2,-1,2,8,7,2,1,3,-6,-7],[9,-4,-6,7,2,-6,-3,3,-4,-7,-9,6,-6,4],[-10,-8,1,-7,10,-9,-1,-7,2,10,-5,7,-5,-5],[-2,4,2,-2,-3,-9,4,-5,5,-7,-6,-4,-5,4],[-6,2,8,1,-9,4,-3,-7,3,1,-4,6,5,-10],[3,-10,-10,6,-2,7,-1,5,6,-10,-4,8,9,-9],[-3,7,-2,6,1,10,-10,-7,10,4,4,6,5,9],[5,10,-6,8,4,-9,-6,10,-8,7,-9,-5,-7,2],[-2,-7,10,6,4,3,8,5,-1,-1,2,-8,-1,5],[-3,-9,9,-1,-3,2,-3,-7,8,-4,-9,-9,-3,1]],[[9,1,4,-4,-5,-9,-4,-8,-9,-7,-9,6,-7,8],[-10,-3,6,1,-3,-10,-2,7,-3,2,-1,8,3,5],[-7,-10,-1,-7,7,6,3,-8,-6,-10,3,-10,-4,-2],[10,-4,10,7,-9,10,-2,-7,2,-9,-4,7,4,10],[6,2,-1,7,10,-5,-8,-6,9,5,-1,-10,-7,10],[6,7,4,-10,-6,8,-2,-9,-8,-1,8,-8,4,2],[5,-3,4,3,-1,-4,-1,-7,5,-3,10,-8,2,5],[-4,-9,1,-9,4,-4,4,-2,-10,10,-4,8,9,-2],[4,6,6,-6,-7,-3,-7,-6,7,-8,8,2,-10,-7],[8,9,7,-7,-3,2,-8,-3,-4,-5,-6,7,10,-7],[2,9,-1,10,-6,-5,-4,10,-3,-8,-9,-7,-8,8],[-6,8,9,7,-8,10,-8,4,1,3,-5,1,3,-9]],[[-2,9,-4,-5,-8,4,1,-1,-8,-10,-9,3,3,-7],[1,9,7,-3,-7,-5,-1,3,3,-3,-1,10,-6,-3],[8,-9,-8,-4,6,-5,6,-10,-8,-10,-8,-2,6,8],[-6,2,1,-4,-10,3,6,3,-9,-8,7,-8,3,-4],[1,-2,1,2,5,-10,-4,3,2,-1,-8,-9,-9,9],[-6,-10,3,5,-5,-5,-3,-7,9,-7,7,-5,9,1],[-1,-7,-3,6,-8,-9,6,-3,-10,-7,2,3,4,-6],[2,-10,-8,-1,-5,-5,6,3,-10,4,-9,-3,5,-10],[-4,3,-4,10,-1,10,-8,6,-1,-7,-7,4,-1,9],[-3,-8,-7,-4,5,10,-4,1,-9,7,8,-2,-6,3],[3,5,2,4,4,8,-1,5,-3,9,-5,-2,2,-2],[-2,6,-8,3,6,-7,3,-2,-8,-2,-5,-10,7,5]],[[-8,6,1,-5,-4,-9,6,-1,-3,-7,-1,-9,8,-9],[3,-4,1,1,3,3,8,8,-9,-5,3,1,-1,-10],[-4,-5,3,8,-1,-7,8,-2,3,-10,-10,-5,9,6],[-10,8,-5,1,-4,1,-9,-8,8,1,1,-6,-6,-3],[-8,-4,5,-2,-7,-8,1,4,6,7,5,9,-9,8],[-5,10,-2,-4,6,-9,9,4,5,-2,-4,-8,4,7],[-2,1,-6,5,-5,6,6,-6,1,7,-2,10,7,-6],[-5,6,-8,7,8,-1,-10,6,-2,-3,6,2,8,-5],[10,-7,6,2,-8,7,10,1,-7,-8,-1,6,10,5],[-10,4,-2,6,-2,-2,-7,8,-9,9,-6,-6,5,-4],[2,4,8,3,-7,-9,-7,-3,2,-4,-10,8,8,-5],[-8,8,8,3,8,-7,-6,7,-9,-10,2,3,-4,2]],[[-7,-5,-5,6,-4,9,-8,10,5,9,-8,9,10,-3],[-3,8,-1,-4,7,10,-10,7,7,3,-5,-10,-9,4],[-8,-8,2,-2,1,9,-7,-1,-2,-6,6,-3,-2,-5],[-9,-2,3,-2,8,-8,-10,-6,10,4,6,10,-9,-2],[-5,2,5,5,-6,5,-8,2,3,-3,-5,-4,-8,2],[7,-8,2,-8,-6,7,7,5,-6,-3,4,10,4,-2],[-8,2,2,-8,2,3,7,1,3,-1,-4,6,10,-1],[1,9,-10,5,-10,8,6,-9,3,-9,7,-3,-4,-1],[6,3,5,-7,2,7,-4,4,-8,5,5,6,-5,3],[10,6,-3,-5,10,3,3,-5,-9,-9,6,-8,9,2],[-5,-5,-10,2,9,-4,-1,-4,9,3,10,4,-5,8],[-6,-10,-7,5,6,-1,-5,8,1,2,3,7,5,-1]],[[4,4,10,-1,1,-4,-3,3,-1,-6,5,2,1,-1],[-3,-9,-2,8,-9,10,-5,6,-3,-10,10,-7,-3,-2],[10,-3,6,3,4,-1,-10,-2,9,-7,-7,-7,10,-3],[-4,-9,8,9,-1,3,2,8,-7,9,8,-10,-2,1],[10,-6,9,-9,5,-3,10,4,10,-6,-2,-6,-2,5],[-3,7,-2,-10,-8,10,-6,-2,8,10,7,8,-2,10],[-1,7,3,9,-7,-8,7,10,2,-10,7,-8,-6,4],[1,2,-10,5,-3,1,-1,-6,-9,-2,10,1,3,-2],[8,-9,-1,-2,-9,4,-1,-5,6,-3,-10,5,-8,-9],[-6,4,-8,-2,3,2,10,8,-3,-6,-6,3,3,-8],[-2,3,-8,1,-7,7,-8,-4,6,-2,4,-9,4,-4],[8,9,9,-10,-7,2,-8,6,9,6,1,-6,5,-3]],[[7,-7,1,7,-8,-4,-9,-10,9,-3,-5,4,9,1],[5,-7,1,-7,10,2,-2,4,5,10,-10,-2,4,-3],[8,-8,-7,-7,-9,-3,-10,-8,1,6,5,-10,1,-2],[-10,9,-8,-10,2,-5,4,1,-5,8,10,-4,10,-10],[7,-5,6,4,-10,10,4,2,-7,3,3,-10,5,-10],[9,9,3,-5,-9,4,5,-1,1,-10,10,2,5,6],[5,9,5,4,-2,-6,9,-10,4,-7,9,-7,1,10],[-1,-9,2,2,6,5,6,10,-1,-10,-4,-2,-4,-3],[8,2,2,6,9,-1,-6,4,-8,-5,-5,-4,4,3],[6,-5,-1,-4,6,7,9,-10,-8,7,7,5,-1,-2],[-6,2,-2,6,4,8,-9,-5,7,-5,10,-1,8,-10],[6,1,-10,3,2,7,1,-7,-10,-1,10,2,-10,8]],[[6,6,-3,-3,1,-4,7,-10,7,-1,2,6,9,-1],[-10,8,10,-7,10,5,-7,-8,-4,-5,8,10,7,1],[5,-7,-2,10,-1,-6,-8,-6,-1,3,5,-6,3,2],[-5,8,-4,4,3,9,-2,7,-5,9,7,1,10,-4],[7,-3,-10,4,-9,1,2,-6,-4,-8,-3,-7,7,-2],[-9,-9,4,-9,-4,-2,1,3,-5,10,1,10,-5,4],[-5,8,-3,-10,-9,-5,4,-6,-1,10,9,5,8,-1],[2,-4,2,-1,-8,-5,-2,10,6,-10,-6,-2,10,4],[-5,-2,2,4,-7,10,5,-2,4,2,-9,-6,3,-9],[-7,1,-8,7,-9,4,5,3,9,-9,-9,-2,5,5],[-8,-9,9,-7,2,-7,-4,-7,6,2,-5,-8,-4,-7],[10,7,6,5,7,-2,-5,-10,-3,9,-6,7,-2,10]]], dtype = "uint32")#candidate|4343|(14, 12, 14)|const|uint32
bop_4344 = relay.greater(var_4342.astype('bool'), relay.reshape(const_4343.astype('bool'), relay.shape_of(var_4342))) # shape=(14, 12, 14)
output = relay.Tuple([bop_4344,])
output2 = relay.Tuple([bop_4344,])
func_4351 = relay.Function([var_4342,], output)
mod['func_4351'] = func_4351
mod = relay.transform.InferType()(mod)
mutated_mod['func_4351'] = func_4351
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4352 = relay.var("var_4352", dtype = "uint32", shape = (14, 12, 14))#candidate|4352|(14, 12, 14)|var|uint32
func_4351_call = mutated_mod.get_global_var('func_4351')
call_4353 = func_4351_call(var_4352)
output = call_4353
func_4354 = relay.Function([var_4352], output)
mutated_mod['func_4354'] = func_4354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1727_call = mod.get_global_var('func_1727')
func_1728_call = mutated_mod.get_global_var('func_1728')
call_4380 = relay.TupleGetItem(func_1727_call(), 0)
call_4381 = relay.TupleGetItem(func_1728_call(), 0)
func_1415_call = mod.get_global_var('func_1415')
func_1417_call = mutated_mod.get_global_var('func_1417')
call_4383 = func_1415_call()
call_4384 = func_1415_call()
func_2089_call = mod.get_global_var('func_2089')
func_2093_call = mutated_mod.get_global_var('func_2093')
const_4391 = relay.const([[True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,False,False,False,True,False,True,False,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,True,False,True,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,False,True,False,False,True,False],[False,False,False,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,True,False,False,True,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,True,False,False,True,True,True,False,True,True,True,True,True,True,False,False,False,False,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False],[False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,True,True,False,False,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,False,False,False,False,False,False,False,False],[True,False,False,True,False,True,False,False,False,False,False,False,False,True,False,True,False,False,False,True,False,False,False,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,True,True,False,True,True,False,True,False,False,False,True,False,False,False,True,True,False,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,True,True,False,False,True,False,False,True,False,True,False,False,False,True,True,False,False,True,True,False,True,False,True],[False,True,True,False,False,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,True,False,True,True,True,True,False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,False,False,False,True,False],[False,True,False,True,False,False,True,True,False,True,True,True,True,True,False,True,False,True,False,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,False,True,False,False,False,False,False,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,False,False,True,False,False,True,True,True,True,True,False,True,False,False,False,False,True,True,True]], dtype = "bool")#candidate|4391|(6, 100)|const|bool
call_4390 = relay.TupleGetItem(func_2089_call(relay.reshape(const_4391.astype('bool'), [15, 10, 4]), relay.reshape(const_4391.astype('bool'), [15, 10, 4]), ), 0)
call_4392 = relay.TupleGetItem(func_2093_call(relay.reshape(const_4391.astype('bool'), [15, 10, 4]), relay.reshape(const_4391.astype('bool'), [15, 10, 4]), ), 0)
uop_4396 = relay.log10(const_4391.astype('float64')) # shape=(6, 100)
output = relay.Tuple([call_4380,call_4383,call_4390,uop_4396,])
output2 = relay.Tuple([call_4381,call_4384,call_4392,uop_4396,])
func_4405 = relay.Function([], output)
mod['func_4405'] = func_4405
mod = relay.transform.InferType()(mod)
mutated_mod['func_4405'] = func_4405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4405_call = mutated_mod.get_global_var('func_4405')
call_4406 = func_4405_call()
output = call_4406
func_4407 = relay.Function([], output)
mutated_mod['func_4407'] = func_4407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4405_call = mod.get_global_var('func_4405')
func_4407_call = mutated_mod.get_global_var('func_4407')
call_4410 = relay.TupleGetItem(func_4405_call(), 2)
call_4411 = relay.TupleGetItem(func_4407_call(), 2)
output = relay.Tuple([call_4410,])
output2 = relay.Tuple([call_4411,])
func_4416 = relay.Function([], output)
mod['func_4416'] = func_4416
mod = relay.transform.InferType()(mod)
mutated_mod['func_4416'] = func_4416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4416_call = mutated_mod.get_global_var('func_4416')
call_4417 = func_4416_call()
output = call_4417
func_4418 = relay.Function([], output)
mutated_mod['func_4418'] = func_4418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4405_call = mod.get_global_var('func_4405')
func_4407_call = mutated_mod.get_global_var('func_4407')
call_4438 = relay.TupleGetItem(func_4405_call(), 0)
call_4439 = relay.TupleGetItem(func_4407_call(), 0)
output = call_4438
output2 = call_4439
func_4452 = relay.Function([], output)
mod['func_4452'] = func_4452
mod = relay.transform.InferType()(mod)
mutated_mod['func_4452'] = func_4452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4452_call = mutated_mod.get_global_var('func_4452')
call_4453 = func_4452_call()
output = call_4453
func_4454 = relay.Function([], output)
mutated_mod['func_4454'] = func_4454
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4461 = relay.const(9.639166, dtype = "float32")#candidate|4461|()|const|float32
const_4462 = relay.const([[[2.993427,4.246799,1.264875,-8.106732,-2.160016,-2.478462,-9.908334,-9.420017,0.618058,-9.920529]],[[-9.298528,8.350376,0.211075,-8.293847,-7.621778,1.242939,-6.110384,-1.262704,-7.466561,0.604397]],[[9.358867,-2.740807,-6.786846,-7.443084,-3.861334,6.765028,0.288165,-0.418398,4.604370,-3.685071]],[[-6.146585,2.013555,-4.235925,-8.921185,8.405018,0.242501,3.433017,-9.455388,5.251750,-9.851409]],[[7.430788,-2.409322,-5.347032,3.333606,2.068472,9.577021,0.731436,7.960737,-0.204531,6.202218]],[[7.928053,-7.111266,-2.701597,6.378351,0.457235,-8.466619,0.520644,1.379135,8.711691,4.097699]],[[-6.933150,9.051543,-4.162715,0.078718,-3.255276,-6.384352,-3.411487,2.787855,0.490908,-1.579293]]], dtype = "float32")#candidate|4462|(7, 1, 10)|const|float32
bop_4463 = relay.mod(const_4461.astype('float32'), const_4462.astype('float32')) # shape=(7, 1, 10)
output = relay.Tuple([bop_4463,])
output2 = relay.Tuple([bop_4463,])
func_4468 = relay.Function([], output)
mod['func_4468'] = func_4468
mod = relay.transform.InferType()(mod)
mutated_mod['func_4468'] = func_4468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4468_call = mutated_mod.get_global_var('func_4468')
call_4469 = func_4468_call()
output = call_4469
func_4470 = relay.Function([], output)
mutated_mod['func_4470'] = func_4470
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4471 = relay.var("var_4471", dtype = "uint64", shape = (7, 6, 12))#candidate|4471|(7, 6, 12)|var|uint64
var_4472 = relay.var("var_4472", dtype = "uint64", shape = (7, 6, 12))#candidate|4472|(7, 6, 12)|var|uint64
bop_4473 = relay.bitwise_or(var_4471.astype('uint64'), relay.reshape(var_4472.astype('uint64'), relay.shape_of(var_4471))) # shape=(7, 6, 12)
output = bop_4473
output2 = bop_4473
func_4512 = relay.Function([var_4471,var_4472,], output)
mod['func_4512'] = func_4512
mod = relay.transform.InferType()(mod)
var_4513 = relay.var("var_4513", dtype = "uint64", shape = (7, 6, 12))#candidate|4513|(7, 6, 12)|var|uint64
var_4514 = relay.var("var_4514", dtype = "uint64", shape = (7, 6, 12))#candidate|4514|(7, 6, 12)|var|uint64
output = func_4512(var_4513,var_4514,)
func_4515 = relay.Function([var_4513,var_4514,], output)
mutated_mod['func_4515'] = func_4515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2154_call = mod.get_global_var('func_2154')
func_2155_call = mutated_mod.get_global_var('func_2155')
call_4538 = relay.TupleGetItem(func_2154_call(), 0)
call_4539 = relay.TupleGetItem(func_2155_call(), 0)
func_751_call = mod.get_global_var('func_751')
func_756_call = mutated_mod.get_global_var('func_756')
const_4546 = relay.const([-9.863595,-2.005574,9.487189,-6.588532,-4.033227,-7.665836,-3.696928,-8.901298,2.151735,2.759103,5.119235,-1.040683,-3.961873,5.199808,1.104563,6.074305,4.688337,-4.227042,3.117414,6.690960,7.106591,9.022221,-2.797432,-0.812415,-5.209212,-8.337024,8.495160,4.340149,-8.439385,8.704919,7.901154,6.056360,-6.398867,1.570015,3.092541,5.289257,3.358204,-0.540511,5.887012,7.762334,-5.098422,1.117994,9.369120,5.224411,7.191659,9.094026,7.868427,-4.455647,0.768087,-7.881387,-2.481529,1.203300,-7.463753,8.177115,3.858367,4.139150,5.551698,3.299048,8.568494,-4.140747,-3.566653,9.072985,7.264727,1.930088,-9.573972,9.864011,-9.166323,-1.435608,-0.561942,-3.558576,-8.575790,6.020262], dtype = "float32")#candidate|4546|(72,)|const|float32
var_4547 = relay.var("var_4547", dtype = "float64", shape = (198,))#candidate|4547|(198,)|var|float64
const_4548 = relay.const([2.819157,7.365521,8.864251,7.378818,-5.421466,5.390810,5.412228,2.774898,1.641168,4.535448,-9.474424,8.712878,-6.571999,-1.862204,1.612974,8.979650,8.073048,0.914298,1.303784,-4.982565,4.670381,-1.526349,4.946563,-8.359143,9.352214,-2.763181,-7.139581,-2.975405,-9.596662,-7.911631,-7.058148,-4.844468,-1.590344,-1.416544,-8.341231,-5.756425,-6.242356,-4.061690,-0.585819,2.196613,0.096349,2.639371,2.424801,-6.150038,9.981007,6.141115,-4.830932,1.229391,0.397390,-7.651878,-5.504041,8.202301,-0.129617,-7.552010,-8.240980,-4.167356,1.964253,0.529549,-2.689546,-8.161839,-8.252466,7.732081,4.579367,-2.681443,-2.993260,-6.987608,2.249448,-3.252370,-4.706977,-3.644701,-8.409125,-9.339329,0.771595,-0.385028,7.276025,2.428561,5.871294,-7.130713,6.601732,2.488883,6.580902,-3.166741,-1.332429,-9.239400,8.280277,7.717547,-4.415147,8.745123,-5.953643,0.153824,2.297022,3.477603,9.915811,2.654054,-0.024330,-7.118458,2.301963,-5.017177,7.185866,-0.805329,-7.300961,-9.619984,1.602417,-5.898686,-8.873711,7.128832,-1.044533,-9.371598,-8.601954,-3.394578,-1.402740,-2.365752,9.874831,6.476670,-8.785541,4.051214,-5.114833,9.823916,4.620435,8.902961,9.539912,3.844443,6.042551,8.238580,-9.483188,7.921831,-4.609923,-0.705186,-9.278460,9.517647,9.840050,4.715101,-2.884010,4.942845,-2.108213,0.188416,0.682448,4.760635,-6.274946,-3.259117,-0.608883,-9.955273,5.657773,-1.208174,-9.887486,-5.768669,-3.997284,7.588258,-0.884261,7.833359,2.992763,-2.737605,9.082922,-5.677004,-4.733907,-3.035343,-9.228547,-9.670744,7.393594,1.501931,-5.015135,3.028505,-4.135072,0.635884,6.218433,9.717369,-7.022578,8.953993,-3.361977,9.102995,-6.398264,9.948490,-2.153732,9.569478,2.639619,-1.782607,-2.433278,-3.380443,-1.185780,-4.718185,-4.547631,9.274105,5.423106,5.892593,-4.733338,3.997734,-1.916343,9.897874,-7.805994,2.201476,3.699198,4.387078,2.193363,-3.999861,3.716806,-3.852698,4.673728,-1.219708,-6.305566,-8.448500,8.308891,-5.982672,-5.514040,-7.910017,-6.140407,-2.953847,9.548339,1.028838,-0.072295,1.099512,-8.334317,2.276732,5.812297,8.159371,1.134976,-9.022577,6.906679,6.859821,-2.919407,-5.362602,7.043033,-8.773655,-3.709445,5.779602,-9.914092,-6.737738,-7.641335,-1.345142,-9.600958,-8.197775,8.583881,-5.683113,0.761224,-0.436834,6.040502,-5.133970,-7.935870,-3.417197,-0.186124,0.663948,-6.801285,-9.924433,8.492822,-5.023488,-9.650703,-4.893563,7.297324,-7.510994,-0.317247,-7.781972,3.811379,-8.368043,4.162647,-5.749646,-1.019273,-3.448273,1.025730,-1.520783,9.430035,-4.849810,4.460046,4.777561,2.143515,3.599931,0.054489,-1.735283,-0.115021,-2.085474,1.041549,8.568745,-5.972408,-2.462849,-2.686379,-7.092425,5.821289,5.145961,7.170038,9.276721,-5.774355,-7.184936,-1.806357,-2.858945,1.323806,-9.984689,0.394128,7.265932,-1.501485,-6.247812,-7.309675,-3.715121,6.334178,-5.442018,7.544803,-2.301902,-4.184717,8.612940,0.727328,3.016382,-7.916793,6.336721,5.873376,7.267004,-9.503985,9.418330,-4.763937,-2.449368,3.188330,0.500827,-0.603876,5.763561,-7.995376,1.174044,-9.255370,6.548801,-9.670309,6.825217,1.408574,0.729338,-6.933342,-7.288390,1.406365,-7.581063,6.571287,0.246019,0.970908,-1.614224,9.687055,0.851627,-3.883924,-1.493715,6.458276,-6.681636,-7.036056,-9.004973,-8.062733,4.945640,0.994613,6.933353,5.465028,-0.473762,7.044066,3.219199,-5.309536,-6.069907,5.720131,-0.974401,-5.275427,5.010400,-9.886895,6.663691,-9.526302,-1.150358,8.835582,-3.987661,-2.968905,9.658536,2.758697,-4.748419,-0.110535,-6.690353,8.879960,-2.268385,3.980435,-4.170000,-8.690514,6.297932,1.042849,-1.876350,1.295417,8.705005,-8.121379,4.439453,6.013701,4.041829,-1.091596,9.683679,-8.232432,-0.012152,5.863265,-2.709337,-9.206267,-8.362498,7.892771,-0.384385,9.075632,9.810654,9.596433,7.535313,-9.166643,-5.625621,-8.462216,8.022306,0.087912,5.722461,-9.165191,-3.594139,9.456407,-7.106450,-9.767989,4.236857,9.426264,5.853202,6.038612,7.091675,7.141204,-4.301203,-8.430927,8.006481,4.780113,-6.292971,-7.127258,1.250474,-4.267469,-4.515503,-0.985635,-3.240997,-2.094145,-1.353841,8.882353,-4.551586,9.931222,-5.622765,-5.553493,-1.931721,-0.304249,1.669180,0.903509,-2.261733,0.528746,-4.003914,-8.923887,4.920779,-2.530284,-8.311913,7.954212,3.478901,-4.944452,-0.431807,0.774812,-0.150869,-8.963188,-7.402043,-4.764582,2.174399,8.261369,-3.304267,-1.301421,5.256886,1.898650,-9.201257,-3.304171,-8.426285,-4.472926,0.953570,8.914627,0.418294,7.672675,5.972811,8.209473,7.092785,6.639935,-0.575184,9.073586,-5.438024,-4.438506,-6.133755,-9.189761,4.523147,1.084993,-9.609719,-3.904207,-2.886098,9.141334,-4.202020,-0.443741,-0.185351,7.903698,-1.475172,-4.831905,5.276903,4.785660,1.039420,-3.728572,-3.766564,1.688673,-0.246455,7.498083,0.223111,8.126233,1.131157,-8.211360,6.992179,-6.212603,-0.652688,-5.430680,2.870206,9.080635,-0.597204,7.797526,-7.560445,8.831573,4.923538,8.480838,-1.644184,-6.577932,4.024473,2.342219,-1.540983,-0.863268,-3.864245,-9.027270,-3.640741,-0.503828,-1.917223,-0.261212,-0.905523,2.884701,-8.463143,-8.894199,1.266819,-7.688511,9.008543,3.887638,2.151989,9.189819,6.455298,-8.993414,9.746399,-8.277795,-4.949747,-1.737216,-8.233040,-7.520641,4.436728,1.130776,3.069975,9.721837,8.287466,-2.256767,-4.722377,-4.566907,-0.655249,1.811516,2.946175,4.072912,-5.549944,-1.684842,6.712243,0.250885,-4.653409,-6.351107,-6.969675,-9.108250,-3.377744,2.703550,-9.239779,-9.474871,-0.659416,5.383739,5.051548,5.992633,-9.479618,7.587838,7.605337,-2.794244,1.846602,3.233091,-5.010690,-3.283827,7.104680,0.878472,9.421654,-0.549898,-8.944962,-8.785448,-4.683975,3.232957,6.441596,-4.251637,-3.884275,-2.762346,2.631614,1.393209,-8.256636,9.372426,6.366836,4.757345,-1.170768,-7.205810,5.221971,3.828129,9.118709,0.752701,5.394244,0.717741,-2.886342,1.208737,2.520736,-1.528112,-0.722905,2.351783,-8.129270,3.178334,-2.940144,2.095793,-4.595100,1.962015,-9.547077,-4.930587,7.991484,1.276491,-3.295406,0.956391,1.531449,1.430227,1.042902,-4.975494,2.564071,7.164155,5.077401,-5.797812,8.477867,8.652596,-8.926135,8.135334,3.258392,0.065128,4.833768,-0.709902,-8.279462,4.988396,-7.702849,-4.680497,4.084786,-6.262272,-0.768042,-9.361976,-8.950610,4.807450,8.930938,-5.305985,0.594874,-6.550209,7.336957,-0.584339,-9.786368,1.956898,1.957059,5.557070,0.953977,2.362472,-1.608662,4.643967,-5.294318,8.986147,6.499676,-8.825203,5.145492,-7.994024,6.571728,9.261531,-1.954810,4.899841,-9.978917,-5.352411,-5.963416,8.012571,9.967620,1.419540,-9.400838,9.968805,0.978818,-4.052649,8.878975,3.497161,1.134622,-0.904667,2.242771,0.002767,-0.468227,-5.220272,-1.009188,0.823974,-6.213820,4.901994,9.745841,2.384771,-9.980082,-4.755610,-9.739133,8.779149,-1.080790,5.490584,0.526911,7.023413,-0.336143,-3.236281,9.720656,-6.482482,-7.675614,-0.695211,-6.933961,-6.134304,-8.464864,-2.764566,-8.316402,-1.676658,-6.661664,4.204966,9.155737,5.281676,-5.516978,-8.808336,-8.463844,3.509030,-6.158397,-8.660887,0.755414,6.755177,9.090798,-0.018937,1.846971,-8.948090,-4.893240,9.879003,-2.053468,8.488707,-9.214690,8.228440,-4.908660,-0.297499,-2.931814,-0.504242,7.513123,9.279839,9.069681,3.306202,4.218981,-2.657254,4.957879,2.505064,1.701978,-9.178930,-1.212757,-0.174240,-4.623904,4.393424,8.600356,6.352857,9.191448,-6.696965,-8.653250,-2.134436,7.574774,-2.851649,-5.764374,2.274664,-1.509462,-5.456160,3.728927,-5.323540,5.388349,-9.918901,5.026443,7.399576,6.800904,3.451871,5.222422,1.332884,2.177117,5.884138,9.905450,9.360222,-9.231955,-6.773121,-6.144917,-6.918622,-9.732166,-8.551172,-2.087620,-5.755848,2.829337,2.409550,7.276077,-4.356153,-2.773814,5.094828,-4.055166,-9.349376,-1.626423,-2.430694,7.810102,-8.771805,7.852560,3.117968,-0.512775,2.115508,9.272605,8.998928,2.530399,1.331902,3.321540,6.474505,6.522311,8.603516,-3.030335,-8.260707,-5.883141,3.356741,-2.921951,1.447636,0.428706,-4.937344,1.510691,5.235868,5.378503,1.322429,1.441344,-7.916769,-7.642320,-0.075061,6.415719,-9.714667,5.695096,-9.840156,-3.472597,5.298547,-7.855835,-7.816377,8.230019,7.344781,2.248327,3.991189,8.453856,8.264137,7.272781,7.445988,1.290405,-6.573864,1.555709,-6.966374,-5.345678,5.403074,8.359387,0.389135,-6.936275,-7.350309,8.500658,-3.159507,6.260110,-3.976512,-7.799449,-2.569025,0.326509,-1.150650,2.108725,-9.325940,-6.441632,-0.716181,7.343757,-4.957559,-2.221484,4.726792,7.002420,8.498369,-7.691859,1.370589,5.129186,-9.124858,1.418853,8.221322,9.310510,-4.375359,-8.734016,3.991134,-7.697991,4.464902,-6.512867,-7.777248,-5.845719,6.874505,8.559463,6.842227,-7.670139,1.723037,9.638876,-7.834896,-9.202530,-2.847296,5.405356,4.211188,-2.321261,8.842761,6.112278,-2.458613,4.184270,-0.308325,-3.133641,2.373856,9.159344,-4.029869,2.422208,4.602578,-5.884110,-2.874312,-8.310037,2.021614,-8.517943,0.766245,1.789320,-5.154870,1.745424,0.480348,-6.818423,-3.894310,-2.438373,-3.399376,3.018316,5.021798,-1.257656,-8.540600,0.399159,8.959495,-0.171565,-0.505296,-1.589308,-0.058273,3.702782,7.340913,-3.814339,-4.493184,1.724966,-1.350215,-3.413217,-8.415707,-7.781963,0.111886,-9.348799,2.968357,-5.944684,-2.934340,-2.598809,-2.714969,7.924764,-8.755084,-7.981139,-4.642276,8.259718,-4.200117,-8.753885,-6.132554,4.409314,2.616765,-6.823363,-4.390459,-2.096457,3.504438,9.040722,-3.583859,-6.232424,-2.372266,8.588333,-2.808793,-9.358212,2.191627,6.814519,9.548597,0.176255,-9.473761,6.484069,-9.290067,-3.894458,4.013189,-7.228954,-4.091288,-4.109893,1.531629,9.595348,-3.261200,-0.045477,-4.154354,-5.230062,8.694586,-9.584739,6.288940,-5.929671,3.226339,-6.117339,7.131753,9.525860,6.648790,-5.882916,6.939199,-1.084363,8.249525,2.928609,-8.445531,5.220709,-5.925459,1.283535,-8.185318,5.950676,-2.118190,-7.034705,-1.942500,4.874533,4.151718,-8.885318,6.232036,-0.117579,-7.379362,4.096171,8.984813,-9.484520,-6.382369,-8.864805,6.037097,0.600477,4.609419,3.758101,2.013152,1.152831,9.738657,1.725865,-3.163339,6.063038,-4.362879,0.720826,-0.099814,1.121259,4.364318,5.689095,7.050932,1.185274,-1.584358,4.728325,4.663430,-5.232563,-2.259760,-9.886377,8.314280,6.811416,-9.513538,-3.095213,-7.131422,0.432393,9.819552,7.322270,5.330147,1.648065,5.578231,3.232402,2.616563,1.336867,-6.160817,-2.948426,-1.238334,9.076326,-2.238194,9.112788,6.425830,-3.346491,4.620122,6.316795,-1.073563,-4.951599,1.446673,8.626184,0.296011,6.334359,-5.923638,7.325983,3.388010,7.909128,-8.163507,6.428515,8.319570,-9.237907,8.333084,-3.076932,-3.719844,2.816668,-5.388782,-4.844615,-6.639272,1.987246,2.895562,4.646089,9.904056,-6.982906,2.055863,8.503732,-2.980178,5.651309,-5.489676,0.353674,-1.621254,-1.612268,8.706162,-8.679967,-4.874022,-2.500970,-2.914584,8.889413,-9.230940,-0.338445,2.482290,1.321154,9.957075,1.913240,-1.650105,2.675057,3.790996,3.767897,-4.728657,-5.398599,-6.712455,9.925515,-0.726080,-1.965364,-9.912931,-6.689635,9.684199,4.655574,-6.718322,-1.843894,-4.937480,1.288335,6.736719,-1.717965,-5.668376,2.459729,-0.526984,-4.307220,5.664706,9.475801,8.636955,9.219029,4.117431,3.872801,9.919774,-8.401833,1.851720,7.430167,9.781609,6.239151,9.857869,-4.786974,1.621817,-4.913096,9.710120,-4.098356,-9.321382,8.353205,9.884994,3.444279,-3.037834,-6.151697,-7.420574,0.284250,8.751088,0.880656,0.866909,-1.803162,-8.730207,4.960223,2.367309,-9.035830,9.478595,3.999844,7.514111,5.497849,0.216436,2.503394,6.223156,3.552237,2.431563,8.869393,-8.633303,0.278656,5.331747,-4.641801,6.738487,-7.265029,4.223944,4.890994,-5.258046,-1.862177,-9.714010,9.604393,-6.274307,-0.368923,-7.773893,-2.591598,-5.141885,1.801478,-0.425275,-5.242054,6.545828,-5.160264,-9.230169,7.124685,-9.800140,-2.336077,5.556703,8.934556,-6.266264,-6.824920,6.848021,3.089849,-7.786465,2.939191,8.653793,-9.808410,-0.590817,3.851771,-9.035372,-7.462660,-4.674063,8.187976,-9.462697,-2.616943,8.680460,8.564600,7.530267,-9.613307,-7.450241,4.754240,1.353236,-8.989556,-6.529581,-5.898010,-4.657503,-7.627540,-5.883687,-1.882135,-5.277208,0.460078,1.212856,-4.776916,-4.716156,4.384625,4.664078,-6.557742,-4.598056,-8.357164,-4.056707,-3.587219,6.214203,8.093566,-9.080229,2.972301,-3.097118,-6.749677,7.617678,1.079199,5.949731,-1.337217,6.939221,5.334552,6.115395,-9.868319,6.591024,-3.014466,8.413170,-9.048262,-3.898080,-3.780456,-0.740959,-1.529010,-5.318787,8.452164,-1.003036,-0.026753,-0.457486,-1.115871,8.043037,7.914589,5.072981,-6.208516,-2.580188,-4.935077,-2.659662,3.604824,-1.785050,-1.365854,3.026301,-2.169423,-9.673531,0.793018,4.670273,-9.896177,9.804186,1.828229,-7.665895,3.697980,-2.563291,5.089790,2.584084,4.298874,-3.143410,-4.874922,-2.989187,-5.893785,1.396600,6.932003,2.202631,4.726162,-6.240471,5.039262,-5.547023,2.118122,-4.820559,9.174767,5.851308,5.335050,2.679583,-5.220407,2.491683,-5.907353,-8.464370,9.761189,5.791119,-6.148869,1.997016,-3.560544,2.563472,-9.075660,-2.928113,3.718996,-1.726299,-0.186191,-4.236457,2.637619,0.442633,-5.705683,-6.018542,8.491391,-0.284642,2.146549,5.349303,-1.273090,3.448670,-5.115383,-5.373921,5.457660,8.569285,-5.583494,-6.833344,5.014485,7.325932,-4.575468,5.730095,-3.631192,4.065183,6.385296,9.579023,1.458296,-8.526330,1.800575,2.834788,0.847182,-6.877103,-0.959690,-3.677766,-4.071374,7.877726,1.354214,-7.961805,6.936780,2.431375,-6.802236,-6.107483,3.316762,2.334110,3.408641,0.949190,6.578693,5.819929,5.962820,5.304653,5.310110,-5.624588,3.222092,-6.969671,-7.239119,3.540905,2.332597,5.672096,-1.324640,2.694776,9.146510,7.270813,-4.947832,6.506362,-8.429677,0.100654,6.669644,-1.353553,-3.160704,3.485118,-5.943759,2.367220,-0.295935,-3.337820,1.848574,1.118840,-3.663893,-8.438837,7.619110,-6.182665,-4.932214,2.262716,5.478653,8.318841,9.265510,8.230563,7.081560,9.044937,8.957315,0.296241,7.004314,9.380171,0.275469,-6.619074,4.881420,-5.008063,-2.171174,-8.371645,4.075989,7.700334,-6.389625,-6.869266,4.260003,-1.294750,3.334692,4.304768,-2.270347,-1.373905,-4.569975,-8.253351,-7.968250,-4.859739,-8.079818,-7.836626,-5.379663,-8.006661,-8.161551,-9.958315,-0.822842,-3.971182,-0.416729,-7.738630,6.698259,-9.880390,7.799709,9.514143,9.551486,-0.712729,-7.234355,7.913997,-7.748933,-9.195857,-5.206795,-0.189202,0.443059,-4.871711,4.356291,-1.089733,-9.767578,-4.743091,8.607277,8.999886,9.365929,-4.734757,-9.003902,-9.501011,-0.519625,-2.288404,-8.978130,1.534739,9.328070,4.320108,8.289047,9.738062,2.713080,5.242759,-9.750985,5.763953,3.999397,8.846699,-4.319117,-3.951659,-4.318124,0.240948,-1.420288,-8.298188,4.114964,-2.162887,4.509210,-7.472526,6.657969,6.642378,-4.393898,-6.810610,2.262906,6.953043,8.236279,-7.601458,-1.248909,-3.493279,-0.584387,1.623995,0.105245,-5.416223,4.712432,9.403162,0.846010,-1.730460,3.489925,6.429740,3.407126,-4.053102,-1.588670,-1.295847,4.752113,7.698577,-9.530950,0.344987,-3.240218,-0.601065,-4.394067,4.177930,8.310205,7.984672,-0.065658,9.410278,2.130387,-0.100781,-2.217443,5.317711,-2.548871,5.879027,0.472412,-9.670201,7.209540,1.469341,-8.151371,1.474716,5.189498,-5.248413,2.702996,3.222250,-0.830536,-4.445764,-2.820468,-9.603273,8.441124,3.923994,-8.090549,-2.907065,0.402711,5.835916,-7.202543,9.228349,1.650650,1.002640,5.419052,6.051876,7.464922,-6.103077,6.072665,-2.304655,-9.887065,1.107474,8.645701,-5.585035,-8.484093,-5.573699,-5.105816,-6.242093,8.903550,-5.146301,-9.862843], dtype = "float64")#candidate|4548|(1584,)|const|float64
call_4545 = relay.TupleGetItem(func_751_call(relay.reshape(const_4546.astype('float32'), [6, 3, 4]), relay.reshape(var_4547.astype('float64'), [198,]), relay.reshape(const_4548.astype('float64'), [1584,]), ), 2)
call_4549 = relay.TupleGetItem(func_756_call(relay.reshape(const_4546.astype('float32'), [6, 3, 4]), relay.reshape(var_4547.astype('float64'), [198,]), relay.reshape(const_4548.astype('float64'), [1584,]), ), 2)
func_4512_call = mod.get_global_var('func_4512')
func_4515_call = mutated_mod.get_global_var('func_4515')
var_4559 = relay.var("var_4559", dtype = "uint64", shape = (504,))#candidate|4559|(504,)|var|uint64
call_4558 = func_4512_call(relay.reshape(var_4559.astype('uint64'), [7, 6, 12]), relay.reshape(var_4559.astype('uint64'), [7, 6, 12]), )
call_4560 = func_4512_call(relay.reshape(var_4559.astype('uint64'), [7, 6, 12]), relay.reshape(var_4559.astype('uint64'), [7, 6, 12]), )
output = relay.Tuple([call_4538,call_4545,const_4546,var_4547,const_4548,call_4558,var_4559,])
output2 = relay.Tuple([call_4539,call_4549,const_4546,var_4547,const_4548,call_4560,var_4559,])
func_4574 = relay.Function([var_4547,var_4559,], output)
mod['func_4574'] = func_4574
mod = relay.transform.InferType()(mod)
var_4575 = relay.var("var_4575", dtype = "float64", shape = (198,))#candidate|4575|(198,)|var|float64
var_4576 = relay.var("var_4576", dtype = "uint64", shape = (504,))#candidate|4576|(504,)|var|uint64
output = func_4574(var_4575,var_4576,)
func_4577 = relay.Function([var_4575,var_4576,], output)
mutated_mod['func_4577'] = func_4577
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4615 = relay.var("var_4615", dtype = "float64", shape = (10, 15, 3))#candidate|4615|(10, 15, 3)|var|float64
uop_4616 = relay.cos(var_4615.astype('float64')) # shape=(10, 15, 3)
bop_4623 = relay.right_shift(uop_4616.astype('int32'), relay.reshape(var_4615.astype('int32'), relay.shape_of(uop_4616))) # shape=(10, 15, 3)
bop_4661 = relay.logical_and(uop_4616.astype('bool'), relay.reshape(bop_4623.astype('bool'), relay.shape_of(uop_4616))) # shape=(10, 15, 3)
var_4674 = relay.var("var_4674", dtype = "float64", shape = (10, 15, 3))#candidate|4674|(10, 15, 3)|var|float64
bop_4675 = relay.less(var_4615.astype('bool'), relay.reshape(var_4674.astype('bool'), relay.shape_of(var_4615))) # shape=(10, 15, 3)
uop_4691 = relay.sigmoid(bop_4675.astype('float64')) # shape=(10, 15, 3)
func_2033_call = mod.get_global_var('func_2033')
func_2036_call = mutated_mod.get_global_var('func_2036')
const_4697 = relay.const(-6, dtype = "int16")#candidate|4697|()|const|int16
var_4698 = relay.var("var_4698", dtype = "int16", shape = (2304,))#candidate|4698|(2304,)|var|int16
call_4696 = relay.TupleGetItem(func_2033_call(relay.reshape(const_4697.astype('int16'), []), relay.reshape(var_4698.astype('int16'), [16, 16, 9]), ), 0)
call_4699 = relay.TupleGetItem(func_2036_call(relay.reshape(const_4697.astype('int16'), []), relay.reshape(var_4698.astype('int16'), [16, 16, 9]), ), 0)
func_1513_call = mod.get_global_var('func_1513')
func_1516_call = mutated_mod.get_global_var('func_1516')
const_4703 = relay.const([-4.329476,0.783586,-9.080820,2.195157,-0.667453,-6.481928,-8.489943,7.171377,3.953599,-9.540753,6.994808,-6.057468,-2.607898,-2.424170,0.936549,0.405106,2.086294,4.407095,-6.912841,-8.471489,-7.619994,-8.208412,6.728025,1.445893,-9.429377,1.062806,1.105121,-4.221835,-6.498677,0.146005,3.319787,-9.496118,-3.130344,3.662241,-9.260200,5.663545,-7.930477,8.450426,-2.332919,-8.883991,-6.541783,-1.219972,-1.147638,2.141400,-0.844342,-6.413734,3.258076,-7.875613,-8.848783,1.873186,7.091010,2.924838,-6.552979,9.441269,-7.625028,4.190119,8.122491,-0.583550,5.663633,7.988595,-1.920140,1.906648,-8.295464,0.558405,6.874035,2.237026,-8.110491,4.130566,0.122448,8.494302,-3.876410,-0.428559,-9.905683,6.015880,7.220789,3.667077,-3.704518,4.311392,-6.224565,4.080564,9.886384,-9.213483,-8.391819,-4.813099,-3.906396,2.358160,5.126288,8.640361,-3.387290,6.150092,8.317963,2.709421,5.746576,-3.816916,-9.121286,-5.463792,-4.077274,5.807291,-8.603300,-9.635879,4.229549,4.807742,1.324655,-2.326498,-0.226378,4.542748,2.853376,9.377815,-5.862463,-2.554298,-6.899673,-5.187851,-8.234323,6.162804,-4.248244,2.757672,0.657196,-7.607534,0.467685,-9.689626,-8.046067,3.180675,-9.805477,-4.661666,-6.877335,5.254672,7.156907,4.654318,9.117086,-4.797525,-7.416640,7.972042,1.449044,5.081223,5.763955,-0.605712,4.866620,3.292614,-0.790874,-7.189960,-3.441321,5.247182,-7.434253,6.105871,4.199373,9.860262,-7.017780,6.037480,-3.845438,-7.941731,-6.766108,6.399351,9.010918,-2.408258,-3.649764,-7.089835,-1.547403,2.322478,3.401180,0.018232,-2.066671,-3.430312,3.635448,-9.771738,-8.908936,2.635888,0.919481,9.694168,8.320423,2.332322,-8.037215,3.455068,5.484062,5.462394,7.322319,-8.140199,8.787590,-6.687912,-6.471956,-6.540958,-6.164496,-4.891853,-6.089565,-9.776858,7.031859,-7.076726,5.544422,-1.943256,-3.031842,2.244829,-5.863997,1.020144,7.403667,4.606680,4.536622,-9.863532,4.085382,1.910001,-9.295458,-8.982312,2.664725,-5.458242,-4.004243,-2.233289,-1.688044,-5.650449,3.316787,2.038944,-4.594829,-8.411172,-7.044380,3.639654,4.377330,-1.303648,-3.158143,8.804609,9.672850,-5.023934,6.807949,-9.099111,1.350656,-2.775775,-2.752809,4.172138,-6.362574,-2.567846,-4.156277,3.454937,0.392613,-4.517752,-1.244478,5.461078,8.349252,8.447247,-2.696673,-2.433892,-1.345274,-1.057515,-3.250855,5.573180,-7.910873,-0.205660,5.511354,-9.394678,4.599512,-7.854757,8.012997,1.070881,-5.414734,9.522491,-4.367584,-6.456004,-2.088974,0.876367,-5.703331,-1.118970,0.358025,5.546695,-2.391728,0.764207,-9.327313,4.158605,1.230410,-2.660661,2.973143,5.876286,-1.195348,-0.864944,-8.948880,1.556482,5.614579,0.564896,-1.659238,9.844117,0.729952,-8.298194,8.795342,6.090180,-1.130292,-2.422120,0.738709,6.932048,5.651747,-6.680134,-9.538225,-2.294268,6.365622,-6.780091,-7.550639,-1.641029,-3.011318,-8.444689,-1.349425,-6.741702,7.903697,-7.247162,-1.096341,-0.921199,-9.595500,-4.410286,5.499588,-1.680160,-6.392915,-7.900202,-7.978444,-8.470015,-8.968223,-3.021503,-9.447336,1.030306,7.368622,-7.162646,-0.236718,7.724498,-3.181206,4.740497,-8.452779,-2.289339,-7.398144,-6.762620,-4.379814,3.193271,8.529572,1.607704,-7.594501,7.228541,5.399718,-0.555529,4.951506,-7.818913,1.198604,6.377596,1.618890,-4.884881,-5.580493,-5.481634,-3.277643,2.703109,-2.860941,2.961538,-7.096279,-2.407987,3.144328,8.278244,9.182594,-7.609969,5.117890,-5.697210,6.189949,-7.951902,1.195244,-2.970384,-3.123330,8.358376,7.028526,7.623287,-7.497191,5.542770,-8.911040,-7.861947,-4.456995,-9.345172,-8.998848,-4.015015,-3.789706,6.444666,2.880758,4.373502,-0.040923,-3.215204,0.108680,0.492757,-0.395605,5.037966,8.994688,-1.091088,-5.889899,9.456626,1.965750,9.444852,-0.661176,-1.642562,-9.887786,7.454559,-1.086420,-1.144316,0.151335,9.135263,-7.301064,7.210479,-4.823605,0.749183,-3.487011,6.167321,-1.978866,9.869534,-6.871944,3.864105,1.310302,8.726272,-4.269773,-2.995210,2.375472,8.445658,-3.130026,3.334864,-4.992233,-2.908357,5.112052,6.115175,-7.341676,-6.454514,-2.338023,9.861075,-4.072670,4.987148,7.313990,-1.290389,-9.597343,-9.118430,-4.711206,0.046581,7.548146,-3.978902,-0.354435,-4.098838,-5.732695,7.547924,-8.716149,4.842820,6.213352,-8.887427,-7.784153,8.239915,-0.968381,3.387683,6.826946,-6.812544,-1.445049,2.595631,-8.915709,2.926343,-2.378151,2.528897,-1.827148,1.288798,9.414570,-0.522392,-2.125255,-2.027685,7.364144,-8.765156,4.149475,4.741466,6.667373,-7.416569,9.555426,-4.076600,-8.842017,-8.465994,-1.935148,-0.363359,1.357547,8.982798,-6.294842,1.003280,-8.733987,-8.722036,-5.875835,1.098585,-6.566635,1.624659,-2.406208,1.715258,2.624559,6.590675,0.388770,6.082702,-9.298425,-5.937914,3.450103,-7.531049,4.211651,1.567974,0.045667,1.657007,-7.550810,3.599765,2.866805,3.346283,-2.371606,-6.477826,-4.599536,2.707964,3.784793,0.652677,3.023353,-7.913858,-9.743337,-9.759984,-9.378336,6.478889,-5.821464,5.069562,2.946732,-9.908021,4.290049,7.974765,-9.994906,-5.776102,-3.622396,-4.359837,-5.256401,8.119633,-4.359808,-4.576577,1.877179,9.585988,-8.756592,0.490644,8.560889,3.830252,3.022146,-7.530238,3.011702,1.430589,-5.110441,6.909037,-8.911843,6.067949,-3.848649,2.080220,3.364668,5.384103,-0.745895,1.648662,-6.761639,-5.705936,4.085901,-3.965518,-7.374010,3.474762,3.190445,3.362597,1.062776,9.619686,-6.076838,0.269175,6.145871,0.833985,-5.290835,-4.782946,9.229231,-7.533323,7.044741,-4.818661,-4.257183,6.514212,-4.632722,7.983468,4.443732,-2.397027,2.086886,-9.577045,-9.478141,-2.418150,-7.266162,-6.301456,-8.827122,9.954953,5.191527,4.576879,9.124036,0.664008,1.087831,8.617632,6.373018,-9.526266,4.479989,-2.077218,-4.856337,-4.431692,3.353696,-7.745643,1.234126,2.581012,4.620943,-8.433242,8.154603,3.014333,-8.815845,-2.500445,-2.157130,1.252673,8.340593,5.002064,-2.827842,-4.718501,-3.803465,7.704025,-0.226187,-8.475871,7.416179,-2.376467,9.428923,9.360712,-7.101962,8.955041,-7.325370,8.610379,-5.368636,2.227559,-8.025078,-2.126791,8.362167,5.968551,9.214478,8.160640,-3.488538,8.603165,9.366887,-1.011638,-6.604258,-7.580022,-4.996186,-8.687127,6.761273,3.895064,-4.286651,-6.184954,-9.660211,8.720853,-2.923506,-9.870322,4.249180,-6.739731,8.960705,-5.121403,-4.287188,-7.773682,-7.168727,-2.353949,6.700225,-7.142325,0.305268,0.705045,-5.565981,8.537685,3.596968,3.446236,-8.466401,-8.220348,-6.446262,2.280542,0.158928,7.840648,3.414679,6.338412,-2.266336,-9.507466,2.799539,9.760833,-7.223961,-5.652869,-0.234139,-7.675448,3.137160,-2.196280,-0.953188,-1.314579,-8.518924,1.322727,1.166900,-7.724867,-1.960840,-3.426231,-9.595444,7.428439,-4.831436,-4.816203,-9.730407,6.320405,3.140509,4.783038,-2.870302,-7.666214,-8.157041,-9.491181,-5.324597,2.827052,5.779235,-7.557767,1.102403,-9.078224,9.060664,-2.652638,-9.731739,0.673979,-7.265345,2.540511,2.199529,7.905742,2.006473,0.166363,-0.877227,5.456091,-1.855988,0.476637,2.692852,-2.638796,-8.936843,-7.324679,-1.369663,0.255446,8.905518,5.316681,-8.491546,-3.057770,-6.491119,0.460312,-0.675815,-8.350174,0.519579,-2.774606,-5.246542,3.104950,2.941771,1.279697,-9.999126,-1.173288,1.998838,-7.328530,-1.725450,2.097320,-9.471968,0.500232,5.714831,-7.227350,2.289320,-6.267379,1.820065,1.574162,4.243592,-4.220414,7.349805,9.779727,2.880248,-5.822425,-8.890840,-9.619443,-3.522403,5.599300,-4.419536,-2.191675,-6.670675,9.033977,9.178184,6.525857,6.322595,-8.107776,-1.518984,0.981479,8.004070,-1.272081,2.777077,-2.187452,-3.480551,-9.259101,2.542102,3.098724,1.517772,5.438422,1.950285,1.034481,9.950412,1.378623,-8.826386,9.851758,-4.101746,7.835032,-0.407294,1.564503,-6.162920,8.397815,4.334557,7.499541,6.365418,4.916355,8.248873,4.181737,-2.830640,1.746954,7.597405,-2.707074,-0.697999,-2.113495,7.793332,3.202064,1.037111,-5.606003,6.290148,7.431537,-4.128096,0.710532,4.123583,-3.460403,2.112698,-8.951675,-0.300468,-3.098965,5.391509,-9.832637,8.832002,-6.964147,-4.827093,0.199790,-9.363014,0.816587,6.101699,7.059940,4.135477,-6.354344,1.295705,-6.185177,3.777248,-5.076971,4.705728,4.259808,-6.883941,1.868001,-0.785932,7.879314,3.948164,-9.869032,1.076794,4.634279,8.140229,-7.799291,2.910976,8.615296,2.335521,8.366485,-9.631859,7.319629,-6.667111,1.274337,9.164074,0.362698,0.187608,6.328248,5.628476,-5.585570,-3.964848,1.174783,6.618779,-1.079669,-9.722194,2.350734,6.420593,-7.709007,2.664543,-2.820878,-9.852163,2.923194,5.891758,-1.233421,0.780857,-6.431749,2.697326,6.840161,-9.516151,-7.653137,0.231381,3.042372,-5.965736,-4.449835,5.778473,5.403970,4.889630,-2.721308,5.993208,3.059889,4.159981,4.732898,-1.188168,0.232778,-2.885646,0.060875,7.531964,-2.524845,-0.928245,3.601876,-8.930912,4.295394,8.845031,-4.849332,6.935793,4.751517,4.377029,9.604461,-8.468378,-9.450365,-6.884384,-0.884602,-3.128656,-0.008846,-2.995445,9.476277,-7.097328,-3.857649,-9.554667,-6.337970,-4.228027,-6.708881,-3.692650,1.633630,-0.075802,-6.849054,-6.758138,-6.824529,5.667403,9.887862,-4.907371,-7.369900,-8.083187,-9.081118,-5.122581,-8.541119,-5.386556,-1.928073,-8.006679,8.565466,-0.411420,-7.009654,2.053979,6.538376,2.313082,-0.304029,3.864127,-5.867127,4.242334,-7.159003,0.258313,-4.045261,3.269167,2.044416,8.574851,-2.691563,-2.042019,-5.760836,9.736628,-5.651974,-0.783476,-5.776362,-9.665994,3.428954,6.426111,2.940526,-3.337671,0.830343,-9.355114,-9.070116,4.921542,2.694240,8.561642,6.079764,-3.647313,4.580361,-2.314731,-8.791057,-2.480225,-1.890006,-8.395290,-9.318351,-2.091289,-0.054179,-1.501976,-4.418560,-7.500115,6.763796,4.612052,-8.970893,9.394311,-8.452119,-5.469310,-8.433743,8.961436,-5.424894,-6.260183,-1.024624,-7.411831,0.196531,2.331274,4.578762,-1.824433,9.539523,2.570002,3.506591,1.333700,2.271707,-8.942865,-2.922744,-6.622972,1.882292,-4.044075,5.987451,0.037204,7.587440,-7.537368,-3.809918,-3.760603,-2.437195,5.312007,-5.272371,-6.903244,-9.968727,0.503868,-0.493793,-4.967730,-6.985025,5.105577,1.316787,-6.057108,-6.321317,2.318339,6.827147,-8.055907,-4.082383,1.223723,2.355479,-9.111545,4.082899,-7.880292,5.882929,6.161325,5.719085,-7.046445,7.526947,-6.512254,2.690832,-2.904489,2.967328,4.965615,6.356319,-8.469767,-4.198898,-5.386982,-6.610906,8.803425,0.751638,1.934589,8.745103,-2.009524,-4.538097,-9.140827,-6.206724,2.947599,-1.778455,5.089129,4.508805,-2.910502,-2.296922,9.090477,6.781483,5.255121,-9.722483,-7.104639,-0.237100,-9.670965,1.901707,-5.894869,-4.210474,4.762506,-2.924114,-2.959067,-2.913727,3.594816,7.710674,2.620615,5.647221,-0.389337,6.933619,-3.128348,0.313461,-0.420227,7.016767,-1.160305,-8.437046,-8.768498,3.171857,7.871953,3.773488,-0.146573,9.248952,-7.223258,-4.602150,-2.079416,8.069988,2.848588,-8.039163,0.381658,2.137047,6.372906,3.720344,-3.218150,-0.216237,-4.128416,6.292301,-9.528604,-6.251252,0.462132,0.279159,-9.317065,-6.743223,0.291649,2.923321,4.641105,4.128274,3.607918,-4.012143,4.711350,4.841775,7.345196,-7.783390,1.485607,-3.955181,-8.474848,1.601922,-9.583312,-1.353166,-4.158553,-9.133029,-9.980572,-3.825793,-6.051703,-7.642012,9.864388,5.558715,-6.912408,-7.217290,-1.275716,-4.104165,1.335722,5.977988,-2.871251,9.391509,0.182461,-3.979670,1.011241,8.775080,1.265722,2.808703,2.053192,9.279125,1.796349,-7.467652,-5.339121,-9.082079,-9.560792,4.696912,6.937663,9.966907,-7.287149,1.128989,-2.325603,8.863376,-3.845073,-4.495855,1.477360,7.282101,4.004336,-7.432525,-2.590899,1.375483,-4.317592,8.797946,-1.602817,1.986843,-2.546306,-2.366757,8.716704,9.211010,7.229901,-6.908655,6.431374,3.984999,1.902499,8.680042,-5.137182,-1.646016,2.567588,-5.843193,-5.272502,6.658171,-1.560016,8.950001,7.255766,2.100108,-6.389421,-1.936937,4.210845,-1.206348,6.298629,5.354354,1.220742,1.996541,1.153345,-0.942939,8.545605,8.566585,0.186854,0.833579,1.165673,6.450051,-6.297870,5.683199,6.488909,-6.432839,9.613135,-3.974614,0.819401,-0.684670,-6.074642,-3.010920,-7.539800,1.728701,-8.449504,-7.910370,-4.273471,2.298299,7.622177,-5.484273,5.603578,-2.878325,-5.563256,4.569323,-5.350910,0.013965,-9.098614,-9.514066,2.065182,-5.021059,-3.728019,6.303858,3.532445,-7.714976,4.445433,3.024179,6.961763,-5.362715,1.366601,-2.876790,1.033802,-1.392634,2.106317,-7.836545,-1.169864,4.316070,6.851751,8.168849,6.909649,-4.758053,4.826967,5.039746,6.071959,-5.640071,1.338964,-2.296042,-9.934140,-0.970641,9.357939,-3.484790,-5.982674,-0.369887,-9.980375,-1.534627,5.204092,6.026097,-0.778459,-0.791902,-5.657288,-4.859556,3.245113,-4.683302,2.435940,6.427027,5.605959,4.994343,2.130255,3.441233,6.489853,-8.100154,-4.821617,2.394974,-8.602734,-5.608544,5.038744,4.028917,3.364886,-9.847298,-4.143993,8.591622,-7.279514,2.735250,1.274441,2.133362,-7.013156,5.990305,5.092977,-2.702596,-2.571290,-2.085247,3.017982,-3.365886,0.631830,-4.299314,9.284779,2.747734,-1.938429,6.073882,-1.535541,-0.486181,-0.152830,6.055252,2.363044,-5.740201,7.854703,0.565662,-5.474940,9.124611,-5.580864,4.942874,-5.186094,5.608838,-0.158852,-0.502685,-9.431365,1.477435,-1.290936,-4.205147,-7.195962,-2.945832,-7.414914,7.133986,0.147093,-1.538633,-5.361969,1.187244,3.730438,0.645752,-7.784185,-5.813309,-3.173065,4.574280,-2.920923,-1.238080,-2.425435,-0.805505,-4.443838,7.194557,4.560775,-8.828791,-5.159051,-1.268275,-8.169824,2.876006,4.740058,2.942319,8.424013,-0.764874,4.649078,1.061248,7.596120,-4.772553,8.242681,-6.262148,8.588145,-6.702126,-3.983070,4.759812,-2.152444,4.193462,-7.587649,8.293992,-6.179052,-2.266870,1.321614,8.243716,0.461356,-1.306685,-3.489735,8.020337,7.697057,1.700011,-9.847893,8.520592,1.529580,-7.656265,0.596879,0.215034,-0.059146,9.850031,2.404711,-0.599586,-3.022235,2.465212,8.606965,6.074244,-4.023228,4.192867,9.060504,1.013312,8.155969,0.524744,-6.127254,-1.409468,-9.686299,-6.295439,8.221819,-4.527418,6.409188,-9.422710,9.751018,-9.918370,-7.483463,-5.697613,-6.917794,-3.467552,-7.943860,-2.857921,-1.644339,2.471348,0.780935,5.115251,-9.565017,-3.673523,5.852810,7.477463,-8.203816,9.549876,5.918204,8.137386,6.467155,2.148315,9.864966,-1.156280,7.087971,-7.315997,8.535353,7.192091,2.875974,-7.348606,-7.392610,2.935407,0.053862,2.979631,7.428834,-4.778895,-6.998677,-1.934438,9.422993,4.359095,-6.651123,8.589748,0.007800,5.659062,1.631137,-7.796504,8.476840,-2.375818,-9.010904,2.028286,-0.876294,-2.440123,-8.038416,-6.615600,-1.283374,-5.794370,5.460554,-8.271411,-7.085759,-3.029556,9.203955,1.985019,-6.476963,7.302114,0.373759,-6.805246,-4.852761,-0.539943,1.020505,0.317892,-4.064592,-3.352635,3.745158,8.003564,0.690833,4.857330,-4.433525,3.513549,6.188225,0.496562,-5.359861,-0.813721,-6.514541,9.721987,-8.249317,6.396889,-0.626162,-7.320164,9.223646,5.914131,2.523071,9.140354,1.792187,2.858264,-3.541290,8.057796,-3.782804,5.913626,-8.479498,9.240556,8.664718,5.449641,-4.298006,-1.664431,7.021977,-1.617460,-8.210883,-1.280522,1.380884,-1.106165,-1.558894,-8.224414,-6.259873,-5.268400,-3.600789,5.232247,-9.067896,1.014418,-3.994375,-2.035401,6.471967,4.207962,2.341346,6.994950,4.452194,-3.133756,8.042069,-8.043438,-5.887030,-6.812975,-8.653271,9.225167,-0.330721,-0.124403,-6.898476,6.044856,1.879970,8.562412,-3.544041,6.678071,2.955270,-8.956651,-6.966474,-5.670480,0.558826,1.600078,-1.889232,-9.228689,4.796460,0.085209,-1.822196,0.802752,2.313033,-5.427825,1.464453,0.275724,4.627242,4.490807,6.149512,-7.032729,-2.165870,-4.651825], dtype = "float64")#candidate|4703|(1584,)|const|float64
call_4702 = relay.TupleGetItem(func_1513_call(relay.reshape(const_4703.astype('float64'), [1584,])), 5)
call_4704 = relay.TupleGetItem(func_1516_call(relay.reshape(const_4703.astype('float64'), [1584,])), 5)
var_4722 = relay.var("var_4722", dtype = "bool", shape = (10, 15, 3))#candidate|4722|(10, 15, 3)|var|bool
bop_4723 = relay.mod(bop_4661.astype('float32'), relay.reshape(var_4722.astype('float32'), relay.shape_of(bop_4661))) # shape=(10, 15, 3)
func_3437_call = mod.get_global_var('func_3437')
func_3439_call = mutated_mod.get_global_var('func_3439')
call_4729 = relay.TupleGetItem(func_3437_call(), 0)
call_4730 = relay.TupleGetItem(func_3439_call(), 0)
var_4734 = relay.var("var_4734", dtype = "bool", shape = (10, 15, 3))#candidate|4734|(10, 15, 3)|var|bool
bop_4735 = relay.subtract(bop_4661.astype('uint16'), relay.reshape(var_4734.astype('uint16'), relay.shape_of(bop_4661))) # shape=(10, 15, 3)
output = relay.Tuple([uop_4691,call_4696,const_4697,var_4698,call_4702,const_4703,bop_4723,call_4729,bop_4735,])
output2 = relay.Tuple([uop_4691,call_4699,const_4697,var_4698,call_4704,const_4703,bop_4723,call_4730,bop_4735,])
func_4745 = relay.Function([var_4615,var_4674,var_4698,var_4722,var_4734,], output)
mod['func_4745'] = func_4745
mod = relay.transform.InferType()(mod)
mutated_mod['func_4745'] = func_4745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4745_call = mutated_mod.get_global_var('func_4745')
var_4747 = relay.var("var_4747", dtype = "float64", shape = (10, 15, 3))#candidate|4747|(10, 15, 3)|var|float64
var_4748 = relay.var("var_4748", dtype = "float64", shape = (10, 15, 3))#candidate|4748|(10, 15, 3)|var|float64
var_4749 = relay.var("var_4749", dtype = "int16", shape = (2304,))#candidate|4749|(2304,)|var|int16
var_4750 = relay.var("var_4750", dtype = "bool", shape = (10, 15, 3))#candidate|4750|(10, 15, 3)|var|bool
var_4751 = relay.var("var_4751", dtype = "bool", shape = (10, 15, 3))#candidate|4751|(10, 15, 3)|var|bool
call_4746 = func_4745_call(var_4747,var_4748,var_4749,var_4750,var_4751,)
output = call_4746
func_4752 = relay.Function([var_4747,var_4748,var_4749,var_4750,var_4751,], output)
mutated_mod['func_4752'] = func_4752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3335_call = mod.get_global_var('func_3335')
func_3337_call = mutated_mod.get_global_var('func_3337')
call_4893 = func_3335_call()
call_4894 = func_3335_call()
func_999_call = mod.get_global_var('func_999')
func_1002_call = mutated_mod.get_global_var('func_1002')
var_4908 = relay.var("var_4908", dtype = "float64", shape = ())#candidate|4908|()|var|float64
const_4909 = relay.const([-6.214894,-6.398239,8.454809,8.476621,-0.431269,-0.760758,-3.805399,-2.281240,5.315188,0.019404,2.356719,-0.556310,2.374070,9.359156,-0.588825,-4.154907,9.071283,4.857222,-7.719177,-3.637850,0.712053,-9.264499,9.638487,-4.819934,-6.834484,-7.311678,-7.167346,9.319226,-4.355782,3.548113,6.594666,3.009914,-0.046749,5.092085,-2.942302,-8.003168,-0.510232,7.029923,2.614959,3.805284,2.511003,1.865970,-1.751261,6.366383,2.665611,-3.483341,-1.408219,5.408672,-4.478735,0.193571,5.121156,9.501386,0.890168,1.063102,-5.695392,-7.812508,-3.054186,8.201345,-1.308050,8.321829,1.455535,8.666218,-2.775835,9.641854,8.032123,5.089842,-6.342090,2.357669,7.582112,-6.682502,7.808724,9.041699,8.620032,-0.842980,5.913791,9.881118,9.508936,-0.783921,-1.909707,5.290332,9.662776,-7.812213,3.099434,1.124845,-3.646366,-9.727487,-0.150652,6.085857,-8.615335,7.820442,-9.974924,1.291230,3.017937,3.404722,2.031672,-2.513470,2.360749,-4.378252,-4.548710,1.248333,0.366866,-0.966785,2.815868,9.588000,2.793102,4.263174,-4.701375,-2.022785,-8.743638,3.549919,-5.420714,-2.457455,-1.277937,-2.448899,-2.555614,4.535440,5.346304,9.649500,9.975093,-8.494425,-4.994769,-9.028216,-9.016985,-9.427948,-3.529916,-4.509614,7.767295,-8.706602,4.094751,-1.023439,-5.970562,-0.180229,5.452180,-7.346132,-4.896686,-0.186236,-2.684215,1.531060,0.909254,-8.508273,5.334859,-3.408669,4.323027,-1.510685,6.401302,9.469905,-2.086902,0.336886,0.546018,1.545315,-2.501666,-2.846882,-6.932528,-4.872120,-8.191112,-2.949778,8.412858,-5.131962,2.493115,-8.695109,-2.982571,4.549376,6.127831,-5.871878,-1.856563,-8.551107,4.732555,-6.530311,3.949083,5.178251,6.943900,6.119227,-3.042187,7.860092,7.084820,-2.718811,9.982213,-3.346456,-8.777382,-4.673643,-2.278816,-6.044705,2.181376,-1.231126,2.524068,-4.676480,1.982705,1.830243,-1.687267,9.783731,-0.326191,8.425814,4.133123,-7.918817,-7.116659,1.902148,-0.258296,3.291801,-4.200151,-9.994564,5.093225,-7.505211,-9.215522,1.363175,-2.265878,-3.204168,-4.356423,8.740467,-4.691294,-9.672659,-0.956965,1.226629,4.358734,-6.791977,-0.633134,1.428785,-4.944375,-8.679113,1.086630,9.925076,2.785758,8.586424,3.754681,8.785947,-6.623977,-1.922110,8.097903,3.559212,-8.417114,-3.450227,-2.837793,5.512243,1.170272,-8.435160,0.150305,6.503179,8.033502,-2.566622,4.225879,-3.150951,1.813780,-2.170055,5.884756,7.475641,8.756676,-7.331086,1.059581,-9.061660,-2.508481,-3.357701,-9.524224,-5.996394,-9.662131,-5.032447,-0.027356,8.065043,-3.131012,0.489623,-4.920982,2.479892,-3.535627,2.691939,9.030755,8.909312,-6.323234,0.502410,9.020561,9.699081,6.022171,1.804903,-6.510782,9.906138,-9.561161,-6.831106,-7.422154,-1.770266,-9.031593,-2.787975,-4.094815,6.822164,0.884666,3.202810,-0.370322,-2.030931,4.290246,1.668213,6.828778,-8.698663,3.794286,-2.424698,-2.897696,0.636582,-8.084642,3.865733,2.775064,-2.431372,5.701434,9.418238,-9.225613,1.541803,5.351306,9.135774,-4.472345,-6.978033,6.094000,4.568035,8.074430,-2.674090,-0.135124,-2.598714,-7.829047,2.278723,6.993458,4.625558,-6.182136,4.897247,6.542144,-0.378990,-5.307169,-7.031883,8.454594,3.122279,-1.603296,2.989883,8.383755,-1.217376,-9.948517,-0.172862,-0.549966,2.260361,-4.543702,-6.157449,5.875939,1.542139,2.431102,5.865693,6.194352,8.496807,-5.449532,4.213534,4.991668,1.980273,2.347723,4.903461,2.109835,-0.257474,9.370104,-8.034302,-5.204234,-2.623123,7.386361,-4.309668,-8.735379,-4.330913,-9.888484,1.367025,6.951152,0.785678,-1.133415,-7.300638,0.369075,7.254750,4.193473,-7.804026,-9.262837,9.638461,-0.509941,-7.567541,3.169644,-8.080801,-0.239722,2.083046,-1.100359,-3.174033,4.572010,6.937064,-7.998483,2.756447,-7.454998,7.551024,-4.098914,-5.220583,-0.033627,-0.389390,2.644071,-4.817234,-7.425258,0.727442,-1.963131,7.767587,-2.572587,8.991364,8.543978,-8.989540,-4.417298,-9.084094,-9.324678,5.781725,-5.999318,-6.337127,-2.126815,5.699121,2.250992,-2.537519,4.393106,6.495541,-4.281787,-4.376152,-1.523417,9.170988,-9.083782,5.937622,-0.215206,7.144135,-1.908343,-7.022828,-6.758491,5.392155,-7.320233,-3.102219,8.523878,6.711936,-9.355968,-2.110809,-7.492631,8.669492,6.238800,2.121336,0.384563,-1.602215,-9.677041,4.731511,4.576094,-6.554331,-3.825792,6.019636,8.822814,1.043069,-2.761383,-4.810981,1.576763,0.692160,-2.094653,-2.500746,4.382493,-5.767987,9.513362,7.851238,-1.506407,-5.974079,-7.312990,1.502856,-1.746889,6.943209,-5.308742,4.611407,4.378883,-5.169328,5.540573,9.599972,-7.173440,-7.723490,6.615238,-4.023285,-5.549519,-4.234893,-9.943223,-4.460833,-8.222905,9.255658,5.205386,-9.610462,2.474805,-3.516362,7.276651,6.606663,8.611347,5.807110,1.993775,1.426863,-7.351585,-9.786427,4.728237,2.094404,-8.893387,-1.890645,7.095652,-1.263372,1.726124,2.176915,5.351311,-5.112864,7.524921,9.809468,8.338979,-3.872708,1.483799,-5.847013,9.726765,-8.275866,-7.772260,2.711278,-1.334845,-0.898437,-4.198993,-7.920454,7.625368,2.747572,5.009265,2.748139,0.543468,-1.109351,9.549213,8.889283,7.641336,-7.908372,-6.829635,6.664762,-2.118184,-2.292552,-6.095152,-9.297088,-1.149739,-2.858312,-2.126272,-1.895333,0.852057,-8.702182,-9.243983,0.777219,-0.529124,4.431230,3.035257,0.821654,1.072888,-8.750082,-3.071064,2.428567,-3.658112,-4.224419,6.796574,-1.695629,-8.856296,0.538086,-4.197469,-2.822649,9.678695,1.913309,-2.977856,-7.918163,5.309866,3.049520,7.003546,-1.642864,-1.074349,-4.692611,0.588469,-5.799791,-6.519453,-6.965602,-5.296454,7.351337,6.695366,-5.762146,9.174511,2.798945,-7.916571,-5.768712,4.542494,8.710285,-7.370869,4.529710,2.255240,0.404436,-3.439209,-3.310437,-7.167333,-0.103976,9.384454,3.143616,4.989224,5.448045,-5.725295,2.607378,-4.739615,8.816088,-2.545433,-1.224965,6.347648,4.090901,-5.104886,-5.211485,6.662750,-5.362645,-5.888668,5.004819,-3.959448,6.714097,2.247028,-3.904703,2.369154,-9.347415,-6.165376,8.210724,-9.932514,9.420300,8.860501,0.520951,-5.838017,5.146648,9.833701,-1.710295,3.670878,-9.621214,-3.410609,-1.933735,3.533204,-2.566534,9.164196,6.931006,-5.593259,-4.454614,-7.627136,9.391900,8.314478,3.831222,4.543804,-7.775368,5.372638,3.365662,3.188369,-4.032099,-0.620591,7.970009,-2.240465,5.844240,2.098001,-1.946283,2.469757,0.829622,-0.221953,-7.648685,-5.447306,-4.542518,1.545795,-0.950868,8.673392,8.726525,8.556212,-0.698197,3.774684,-4.836490,1.232057,3.809859,-8.277793,-5.181723,9.447045,5.827458,5.736049,-1.350180,3.253918,-7.966062,3.683299,1.330205,-8.536710,-2.324543,3.159249,-0.569367,-8.192961,-3.983954,-9.125682,5.593544,3.682593,-8.504160,5.678066,6.003726,4.824402,2.753641,-3.818812,6.917293,-3.086492,-4.035828,-7.146493,2.244236,-6.939528,-7.421933,-2.850648,8.698918,-6.324423,-4.079507,-1.535481,-7.628455,3.914468,-5.650257,-6.493497,-4.498331,6.722896,0.171371,-3.538828,-2.219181,-1.143932,7.527820,6.048970,-3.170768,-1.245810,9.270424,-1.224797,-9.930431,2.891848,7.813676,-1.207849,9.049985,2.931963,-0.824796,6.412326,-7.842358,0.794423,-9.912328,-9.031582,-6.167831,5.281071,7.350725,3.124062,-3.392623,-8.123736,4.868607,4.302812,8.469159,5.544021,-6.297137,-0.635862,-0.088351,8.657126,-6.273782,3.010882,-9.962282,-4.631222,-1.555081,-8.089784,0.679490,8.368730,3.753937,0.589081,5.601112,-9.498402,2.343916,-4.965648,-4.321414,-5.486318,-0.019948,4.525591,-4.203737,-2.974927,-8.158885,5.556834,-8.567547,-1.733725,-4.592236,-4.983824,-0.023229,9.525237,3.458305,9.032868,9.521997,5.412656,8.348895,0.747308,-5.957232,-3.537098,-0.572935,-6.681692,-8.731988,-8.797423,-1.323397,-5.908650,-6.962931,-8.245663,-5.264810,4.756139,4.914637,5.506698,-4.011082,9.121898,-1.866570,8.584453,4.715191,2.209780,-1.889140,-2.064206,-1.732465,7.043833,4.178182,7.828105,5.698942,6.126885,2.195807,9.373615,9.716473,-2.425038,-0.304919,-7.917716,-2.043461,-4.801630,-8.603781,2.874537,3.280762,2.216349,3.590630,-4.683778,2.088593,6.207504,-5.670896,-2.044838,7.826138,-7.526338,-7.622060,-9.821030,-3.321679,2.373542,9.832176,-7.768400,5.127567,7.819734,-9.543199,7.669382,-2.101194,-7.691212,7.314051,-6.336511,5.733774,2.031603,-9.828669,-6.118472,-2.398869,6.621911,7.957395,-6.659185,1.300580,3.394567,-2.140503,5.755960,3.288768,7.082324,9.264208,-3.696404,-9.714271,-4.972672,9.505756,-0.568980,1.157666,0.984056,5.716519,7.085323,-9.648049,-9.035119,-1.682793,2.188874,4.537352,-7.792165,-0.602065,1.800798,-3.053226,8.893385,7.785270,9.275092,7.277211,7.328537,2.897081,6.126505,2.634027,-9.187098,-9.933797,9.215097,-2.793176,-0.789988,-3.516291,-0.092968,9.560213,-5.280547,8.523586,8.929158,3.133495,1.830667,-0.153801,-7.694326,-5.832161,4.772331,-9.341486,-6.250384,-7.535672,6.426328,-6.044276,-0.887519,-3.565864,-2.518377,-9.154843,-1.137907,-6.169743,-2.648304,7.920257,-2.789838,3.117784,-9.389343,9.470092,0.405810,0.596301,-9.175054,-2.791334,0.914574,-4.746774,-7.473604,-0.510978,-9.423870,-4.355723,5.634866,5.550246,2.321690,6.089977,-9.688540,-6.809360,-1.957890,-9.676971,2.467338,9.158824,0.398406,3.172542,5.626384,1.345466,-2.078831,-1.276806,9.435015,-0.367483,2.341079,-0.377463,-2.038871,1.527391,-9.628787,3.393788,-5.933365,-8.556669,-0.091193,1.676119,3.008572,5.503446,-7.624674,3.987575,1.355716,-0.007184,5.139533,-2.981051,4.122756,8.136069,-3.954877,1.930162,4.365937,-2.340956,4.605981,5.212946,-4.104595,9.718481,7.709045,-0.245676,-8.266119,1.542970,6.061097,8.609469,0.877970,-6.157726,4.490647,-8.410177,-6.970261,3.235461,-2.639316,-6.711807,8.074376,0.080093,7.946375,-3.871117,-2.871254,0.043353,1.061093,-7.946193,7.550469,-6.098286,-6.212016,-5.621155,-7.183279,3.573214,-9.409636,9.437902,9.083026,-7.208610,2.560164,-9.737576,-4.613023,5.702536,-4.121964,-3.149784,6.047711,-6.008438,1.539727,-2.529823,-8.586371,-3.231198,5.560546,8.640902,-4.240117,5.646384,-8.478182,3.496275,-1.785633,-1.446670,-5.823729,-6.744338,-2.885215,-2.734101,8.753625,5.643449,-3.226735,8.583721,6.172611,-4.235551,-3.774559,5.948064,8.740741,-6.813462,-4.601820,-5.568400,7.309492,-6.538991,3.865477,-9.523706,1.530387,9.716610,5.563679,3.714139,7.077529,9.212914,-3.154549,-4.161962,9.976486,8.666651,1.401622,3.226981,-6.582246,-6.985985,-1.062606,5.507922,-7.960008,9.785457,0.645852,1.744513,-2.851389,-0.581912,9.279438,-6.413761,0.610318,-0.465918,6.372022,-6.959023,1.702860,6.256677,0.771119,1.145289,3.983375,0.089667,-1.697358,1.677444,7.891834,1.549782,-8.244596,-6.897725,6.747929,8.789896,-9.100878,-0.040342,-7.741705,2.289418,-9.450598,-7.946789], dtype = "float64")#candidate|4909|(1080,)|const|float64
call_4907 = func_999_call(relay.reshape(var_4908.astype('float64'), []), relay.reshape(const_4909.astype('float64'), [10, 9, 12]), )
call_4910 = func_999_call(relay.reshape(var_4908.astype('float64'), []), relay.reshape(const_4909.astype('float64'), [10, 9, 12]), )
uop_4911 = relay.sinh(call_4907.astype('float32')) # shape=(10, 9, 12)
uop_4913 = relay.sinh(call_4910.astype('float32')) # shape=(10, 9, 12)
func_1257_call = mod.get_global_var('func_1257')
func_1260_call = mutated_mod.get_global_var('func_1260')
var_4919 = relay.var("var_4919", dtype = "float32", shape = (336,))#candidate|4919|(336,)|var|float32
call_4918 = relay.TupleGetItem(func_1257_call(relay.reshape(var_4919.astype('float32'), [336,])), 3)
call_4920 = relay.TupleGetItem(func_1260_call(relay.reshape(var_4919.astype('float32'), [336,])), 3)
func_751_call = mod.get_global_var('func_751')
func_756_call = mutated_mod.get_global_var('func_756')
var_4924 = relay.var("var_4924", dtype = "float32", shape = (72, 1))#candidate|4924|(72, 1)|var|float32
const_4925 = relay.const([8.929602,-5.532280,-3.655993,-1.371766,1.690093,3.205294,-0.749436,8.577751,-9.419363,2.393238,-2.548322,4.784526,-6.576417,3.252333,1.928184,-7.561136,9.154925,-5.807585,5.234205,6.001213,-3.204081,-8.234079,-2.053718,7.394169,-2.700900,-3.040137,-0.011059,8.128521,-6.333545,7.294750,-1.535443,-8.284943,-6.854585,7.893968,1.645931,-5.744356,3.477168,-8.534431,-7.102352,3.663812,1.052712,-2.992323,5.701525,-2.045151,-3.351503,8.319011,2.870593,-7.150944,-5.075558,5.953182,-3.881075,3.693093,-0.679830,-2.489948,5.482026,3.974314,2.921689,7.602108,-7.281211,-1.697375,5.051019,3.584578,0.695333,-6.587753,8.440838,-1.436215,-4.756029,-7.590385,8.776310,4.576218,-7.213642,8.497590,-0.120891,-4.502407,-5.739146,3.796550,-2.621799,7.222659,-3.694739,5.157946,4.401229,-1.741864,8.491443,4.386284,6.773371,-3.110674,3.632901,7.233744,-6.465970,-4.591097,8.411171,-8.365180,-0.157284,9.856486,3.297799,1.482805,-3.881079,-1.526008,-3.734686,1.191198,2.200529,6.669383,2.075093,-1.752649,-0.241501,2.239479,7.943359,5.011104,5.573550,-4.839891,1.053138,2.390919,4.340419,1.277904,9.769742,7.846556,-8.055141,-4.088182,-6.711049,0.769629,8.055097,-7.220693,-3.782068,8.677265,-9.000134,1.140392,4.419388,-4.507911,-5.733343,-3.791748,-6.866749,-2.713274,-0.867819,-3.371602,-6.345859,8.083925,-3.086117,-2.652109,0.083072,-0.969728,7.310944,4.722288,7.426281,-6.138643,8.816893,7.135485,-0.880721,4.662003,-0.964000,0.746358,1.048735,8.204947,-7.178272,4.206129,1.437382,-4.649023,8.356918,0.441215,1.285969,-9.705701,-0.408084,-4.598860,-7.545064,2.455344,3.902808,5.528605,4.750295,0.797688,-7.584024,6.387690,-2.697890,-3.368262,4.075551,-2.614881,5.248278,6.425179,6.828177,9.713859,5.233467,-8.338303,6.246705,-1.539458,-4.309030,4.156925,-6.728431,-5.636044,-1.467146,-9.756345,-8.407682,-1.008691,6.601512,2.402688,5.815224,-8.440251,0.671275,0.840293,-6.726033,3.519740], dtype = "float64")#candidate|4925|(198,)|const|float64
const_4926 = relay.const([7.978867,0.255720,7.112193,1.660552,-2.615028,3.424111,-5.095061,-7.651645,7.695835,-3.399167,-9.977682,-7.305153,3.921580,0.741731,-1.364101,-0.376724,8.052114,4.414960,0.675448,-4.166098,-8.933021,-2.948186,3.729190,-7.653907,1.279222,4.249374,-1.190383,8.685157,-7.038176,3.487688,7.604391,-2.130480,2.551218,1.104675,8.797290,-5.463941,-2.010935,-6.285183,-4.272354,-6.918306,1.394037,4.604130,9.619763,-2.923990,8.037687,-5.833493,6.199195,8.093467,-6.794571,-3.740506,7.404293,5.590402,7.138203,0.190287,-3.788250,7.731260,6.085976,-3.402547,3.353719,-1.862437,-5.489399,-6.039635,-5.889626,-7.935093,-6.488127,-1.951346,4.509826,9.738817,7.572404,-5.856606,9.903233,4.829679,-5.862045,7.846894,-8.719448,9.910832,7.307128,5.595620,9.790229,-5.040950,-1.751683,9.872034,8.293855,-7.506581,0.358343,-6.799241,-7.110269,-7.176067,2.011368,1.037952,3.784744,-3.084581,-5.707323,-2.889475,9.145693,0.488082,0.815230,-4.346674,-9.934622,9.859593,7.037473,-6.982692,-6.422988,8.194897,-3.798964,7.396241,5.914208,-9.060646,1.677023,6.723627,-7.262282,-8.766941,-6.783746,-4.468941,9.507935,-9.936773,7.230190,0.147686,2.554987,-5.453698,0.787555,-8.201422,5.585610,-8.472578,5.161056,-0.235730,-5.819213,-4.843153,9.095343,1.929580,-9.774763,7.302238,-6.773463,8.880217,0.762288,-7.753333,-6.157597,6.366260,1.089374,-8.324233,-2.417388,-6.409183,-4.776806,2.139009,9.319674,-2.573397,-1.860027,-7.994649,-6.886714,6.570471,2.294286,-2.828683,-2.387133,1.340187,7.676329,-6.186435,-3.515080,3.083459,7.168723,-0.824952,6.793889,1.035520,3.529168,1.536227,7.303150,8.492823,-4.975605,-2.966731,-4.301614,-1.423070,-0.302674,2.492605,-8.547055,8.900334,6.796846,-6.770909,-6.993914,-3.198270,8.311440,-4.998289,-9.854717,8.406625,1.750011,7.318633,-2.050780,-6.348041,3.132689,0.422038,-2.234932,6.132543,9.570790,-0.758675,5.273145,3.473315,-5.439649,-5.900284,5.195825,5.962066,8.811915,-2.788125,3.882225,-3.916687,-3.147886,-0.279178,-1.875148,-7.167458,2.691673,-1.119812,-6.056659,-3.422830,0.485928,6.648339,-5.166256,1.862028,-7.878914,7.017158,-3.500605,-4.892084,-9.690599,8.261701,-4.909831,-5.053562,4.874413,0.713512,-2.214403,-8.146532,-2.031987,-0.538839,8.889712,-5.723334,-2.040666,6.348895,-7.116634,3.658343,-0.181235,0.527056,2.485337,-1.497216,-6.533536,-2.094574,9.949335,-7.824096,-6.948339,4.541550,5.454040,3.309983,7.019426,-4.025272,-4.191043,-6.291300,4.733189,-3.738303,5.993726,2.896615,-8.072453,-9.433973,-7.820557,3.402517,-5.363733,-2.214877,-6.208309,5.528877,-5.885072,9.608383,8.785626,1.618234,-7.797646,7.218931,0.470240,1.495820,-2.873082,5.930274,6.098169,-4.178556,8.535404,2.357293,-6.188356,-6.192038,-8.458615,-8.111255,3.524566,-7.289698,5.771219,-8.174284,-2.024885,-5.196438,5.064273,-0.134418,-6.452219,-0.645139,5.889719,1.774673,-2.135172,0.932238,-4.659010,1.699833,3.884103,6.784273,5.767308,6.790272,0.990566,7.771102,-6.588491,4.534362,-5.437044,-1.061932,8.090621,2.929482,3.864090,1.807733,-6.436926,-3.341899,-8.737862,-6.828357,7.048231,-5.799321,8.559738,9.500755,3.405790,-6.813320,8.653876,2.001950,3.347607,-7.280721,2.459354,-7.409119,-4.964670,-1.818225,-4.056347,6.817080,-3.776817,-9.738209,1.973126,1.478038,7.402252,-0.764318,6.006696,1.553925,-9.333912,6.488904,5.306617,-3.779761,-8.828794,1.984566,9.184185,-8.557751,-8.033679,-9.654497,4.104107,-5.166953,3.607260,5.733288,-5.229704,8.683448,-7.503871,4.588310,-0.610689,-2.313614,-6.334159,6.707016,-1.939848,8.593773,5.816181,-7.032738,-5.787899,4.375735,3.220041,-8.965203,4.297876,-5.181711,-3.674385,-7.213231,7.893929,-4.968344,-9.423622,-4.450565,5.006890,0.720860,5.741517,4.197077,-6.721181,3.630726,5.474190,2.842830,-3.808465,6.687249,5.688053,8.583418,-8.555594,-9.134575,-8.852836,0.027357,2.895381,-9.627052,-2.637056,-6.369002,-7.560655,-0.893367,9.245007,-2.926182,9.984498,-0.924344,1.982212,-0.870591,9.416251,-1.929201,3.497334,-1.737350,-1.355429,7.081274,-8.675591,8.064260,5.994019,3.939364,-4.044314,-5.445022,2.622387,-4.473594,5.744757,-9.846780,-9.447793,-1.995903,-6.780022,-7.646911,6.103605,4.311258,7.613461,-9.944355,-5.174421,3.464063,7.092177,-9.196635,-1.797822,-9.587322,7.952246,8.138640,4.466122,2.632272,-7.477164,5.177117,9.393303,0.421797,6.397673,-2.883310,7.919556,-4.130867,8.589273,1.747851,-8.932454,4.570760,-6.048904,9.892758,-0.509431,8.320277,-6.647689,-6.294361,4.844459,-4.171142,4.267486,-8.264380,-0.356316,-2.385746,-1.538751,3.982028,4.840246,-9.620019,7.475249,4.435782,6.652419,-2.069298,7.419361,6.523218,7.688990,-5.621429,-2.186105,8.125659,5.074869,2.861324,-0.911954,-0.542893,0.509591,3.488289,-9.396458,4.646925,-8.540975,1.193414,-4.301729,-9.597083,-1.723880,9.613281,-7.637414,2.762584,-5.051007,9.578835,-5.802870,-1.782667,-3.367434,-5.751611,-2.316402,-2.550254,-7.908178,6.586140,7.409536,-3.727186,-4.258107,-1.821817,-4.599816,-9.867177,-1.212765,3.701528,-9.516797,6.567798,-0.202814,6.241613,4.128524,2.798965,-2.433483,-1.357751,-4.552917,9.964032,-5.433218,3.487158,-7.047423,9.699569,2.934511,1.358171,-7.466092,3.889338,-5.727009,-8.197465,-8.313578,2.675708,-4.479244,-8.056888,-3.965945,2.904167,-6.802119,-2.253920,-4.310528,0.873210,-9.821479,1.921524,3.315277,0.789260,-9.341486,3.850405,9.373819,3.377170,3.407278,1.659536,7.690227,-8.040084,4.977903,-6.805479,3.698807,-9.918650,-9.512330,-8.583153,-4.182908,-6.603515,9.994629,9.735294,-0.456063,-2.172721,9.991743,-4.761717,-2.892353,-9.292315,9.348475,-5.601325,-6.373308,-9.580158,-4.676015,7.248875,3.370671,4.335114,4.857663,7.460327,5.276071,9.852797,0.968199,-0.636574,7.668384,-3.572823,0.906718,1.739920,1.416928,4.873200,-7.316413,-2.543119,-3.235901,1.153491,-8.733884,9.725164,-4.928317,-8.541566,-4.898183,-0.591022,4.664846,-2.015923,4.185469,4.756480,-1.358498,-4.879099,4.279567,-5.650929,9.447022,9.087866,-8.017714,1.260666,-9.724438,7.297855,-8.509281,-5.495359,-8.237494,9.795814,-9.900500,-9.180749,4.699486,5.475035,6.570029,-4.298474,9.288855,-0.195137,-1.908720,2.529845,-7.505795,-8.423717,-8.654994,-9.219165,7.712368,-6.006556,-4.749410,-0.900560,8.442852,-7.750970,6.075046,5.108470,6.011382,4.843271,-8.059282,-7.934463,7.113404,4.085323,6.410290,-4.040042,7.181956,-8.112679,9.610088,3.567029,-2.579224,7.319114,-3.352426,7.911507,-4.662603,-5.892787,2.743703,2.193912,1.170751,-9.345989,9.015859,6.145330,4.571933,-7.867715,4.258165,0.167311,-7.237592,5.557252,-3.586260,-7.281421,7.106390,4.749494,3.311108,5.754019,8.264169,5.938479,-2.260013,-3.121614,-3.875057,-7.514454,-6.967309,3.874481,-5.438215,-9.967691,7.151953,-9.256148,9.600095,9.154507,-9.582720,3.477960,-7.121127,-5.925687,7.590832,-7.346930,-7.031062,3.304154,1.578292,9.559585,-4.049388,-6.148268,-5.509729,-9.136207,-1.192489,-6.999934,7.881870,-0.758635,-7.257022,-6.565739,7.099591,6.074857,-6.034252,5.865447,1.148666,3.127014,-4.573090,-8.321841,-9.800475,-2.288451,-9.791004,-0.887373,-0.960535,-3.159140,7.145141,-7.688389,8.217407,-0.725658,1.097286,6.673518,-6.835205,-7.744214,-0.949969,6.635706,8.802464,4.770173,-6.145469,3.795758,1.682960,0.663962,1.550116,9.772605,4.445726,-4.535010,4.929486,-7.499851,-5.499922,-5.641564,0.733418,-7.576617,3.881140,-1.758688,5.179507,-5.687058,4.446958,1.344505,-3.256556,-5.595768,2.130901,-9.514474,-0.457052,-3.234708,5.493153,-0.572292,4.746562,4.548270,-5.391590,-2.798618,-8.413442,-4.334295,9.554102,-5.804967,7.056549,4.136444,4.254796,3.702070,-8.176784,-3.128302,2.368839,-8.940257,1.814097,0.912722,-6.501168,3.037581,1.244592,-7.738579,-2.353592,-5.573963,7.105213,-5.975322,2.206226,9.595781,5.191039,6.458565,-6.808137,5.602502,5.174668,3.797519,3.478674,-6.482736,3.010571,8.078466,9.207206,6.365610,8.878628,2.254824,2.919286,2.203720,7.881170,9.140959,-4.739106,8.633134,-6.749421,2.451183,-9.425920,-1.440030,4.177373,4.799128,9.539880,6.535055,-8.342452,8.695561,8.161400,-6.769195,8.158579,-7.238079,1.312990,8.805377,9.051288,9.544569,0.365493,5.282565,4.328503,7.003924,7.077448,7.908746,-9.160659,2.469349,7.816622,-7.786521,-5.187771,8.869054,-5.713126,3.542527,8.432826,8.067328,-6.462773,2.515149,1.889158,-7.478955,-1.808178,-6.258755,-4.967501,-5.583818,-1.360041,-3.826966,-4.975485,-9.853173,-7.001646,-6.943998,-1.814438,-1.984285,-0.002012,-2.063935,8.752411,-2.010947,-9.222287,-5.339023,-1.062106,9.687848,7.644104,2.846651,8.540686,-3.134197,1.937347,2.102702,6.175375,-7.065074,-8.495748,6.268501,2.806670,4.467513,8.958903,-1.797042,-7.295853,-3.378347,2.296370,4.061893,2.612767,1.581510,-4.651120,-2.132073,-0.708229,8.344073,9.066151,-0.043779,-7.606907,-4.213904,5.464245,-5.376337,-3.754493,6.178752,-6.854504,-1.897527,8.465370,2.950533,6.127579,6.091437,-4.442116,-6.349570,3.903922,3.061985,-4.185903,6.661370,-2.502932,2.703250,-9.756582,7.735752,-7.519679,-7.483044,8.488693,5.592486,7.506596,-6.493909,-2.519153,7.125766,-2.772144,2.117786,0.550269,-8.715317,-8.550241,-8.773165,3.322411,-9.469343,-3.128463,7.805278,-0.222275,-7.630419,2.488746,2.780330,1.617344,4.449772,7.342888,-0.064162,-6.395662,6.291322,-7.381271,3.392031,2.685502,5.443666,4.079085,8.965624,-1.483498,8.760445,-9.212672,8.274135,-3.350517,6.384262,7.248095,-5.715513,6.903384,3.240211,0.126059,3.065292,-0.364554,-4.952854,7.129683,3.705998,4.254819,9.540795,8.299463,3.246778,6.237219,-6.204390,-7.081135,-2.967725,-9.740030,-8.791605,8.881332,-5.472956,-3.331771,5.976254,-8.271878,5.185699,9.576571,6.561253,9.945881,-9.710756,-7.322514,-9.684608,2.741370,-0.319451,-7.439942,-1.000152,-7.936627,0.477182,2.532769,-6.968011,0.571548,-0.167552,-1.327468,5.124181,-0.988209,-9.150822,-3.597228,-6.833440,-5.165443,5.011665,5.702426,-4.959449,-7.321919,-5.783969,-0.864702,3.656369,1.587105,-8.929186,-8.644241,6.679340,-4.347639,2.502780,-5.533678,-8.866023,-8.454823,3.768148,5.635164,1.619669,3.852822,-5.884501,-3.687599,5.352167,8.230238,6.388799,-3.989518,-9.679514,-7.647492,2.610785,5.593325,6.661745,-7.224549,5.073769,-3.672009,3.576515,9.737943,3.013570,-4.363345,6.238747,2.310225,1.370578,1.763597,-8.567261,2.380819,6.443731,3.002010,-7.548540,1.700193,-7.920408,-6.318611,-7.599211,8.928437,2.435511,-4.684714,8.043992,5.742337,5.878563,-7.358756,-0.833773,-3.168004,9.699443,6.096023,0.146324,4.331968,-3.159503,0.657670,6.135898,0.403123,-2.235440,9.070354,0.909905,-4.316450,-0.966233,-3.999980,-8.115499,-3.172753,-7.775359,4.290393,-8.010491,3.833868,-0.596588,2.787022,1.136544,-2.743966,1.692951,5.347064,-4.655570,0.548070,6.833422,-6.803694,-1.061649,3.206660,-8.340517,-6.715300,2.251702,3.917937,1.077957,-4.901458,9.502047,-9.277634,-0.945308,4.600310,-8.944161,9.411178,-9.160490,7.186102,-9.751119,-8.940086,-1.323147,-1.657120,-4.272659,4.645513,-4.296892,7.457921,0.229987,-0.820269,2.112508,-7.326368,6.894788,6.720382,5.784415,-6.225808,2.440523,-5.615011,-7.059277,-1.047902,0.432605,-6.683723,9.494369,6.517052,8.613179,-1.441288,-4.365385,-0.836865,7.288254,6.311469,9.374831,-2.694540,-4.316862,-4.517297,7.009296,-0.477119,-8.398462,6.240947,-6.531209,-3.883519,-9.065598,-0.332789,-7.460000,-8.198147,6.612448,-7.386653,-5.496569,5.688567,-4.427687,2.169768,-3.906142,-5.129892,-2.174021,-6.200540,-3.032135,-3.426603,-7.339028,8.792257,-6.492460,-8.658602,-5.907826,-1.207620,1.143870,7.790707,5.594961,-5.267809,-7.634967,-7.161033,-1.005285,9.651959,-0.094705,9.771362,3.510162,2.160014,2.115551,4.473814,-7.777792,-6.060611,8.509707,2.465965,-5.247615,5.043873,-2.990707,0.079752,-5.426500,-9.000667,-0.296044,4.894734,-9.479177,2.854893,-4.504475,4.778362,-9.170615,8.044430,-6.647445,-4.935565,-6.681952,2.680450,-1.644779,1.221838,-9.860996,3.950137,8.060846,-2.893116,5.315640,6.753613,-9.687771,-3.778839,-7.628672,-9.438711,8.687509,6.988413,-3.609087,-8.318515,9.285871,-5.011243,3.522766,3.193272,-0.115739,5.317872,5.958212,-4.248339,9.063125,9.613778,-7.054498,-3.373234,-6.240925,2.384499,3.029397,8.823976,0.654112,-6.867179,4.491246,3.080348,6.576769,0.176881,-9.817113,-9.054615,0.664904,2.766609,8.367553,4.499773,-8.641126,7.787806,-7.398040,-6.405978,-8.130839,4.812140,-5.920682,6.495091,1.653433,8.833837,-3.672813,8.000785,9.726805,4.318448,7.011819,-2.211888,2.946477,9.255551,2.617072,3.274674,-9.656724,7.987352,-9.669500,-3.008782,-0.575361,3.830533,3.354232,-4.089501,6.050701,0.707257,-0.953088,-1.963047,6.243443,6.688245,-3.605551,-0.756513,8.228590,8.254018,9.964234,4.616112,8.084101,-9.003333,-1.364587,5.377753,4.877597,-2.786250,3.964252,4.520804,-1.884802,6.411553,-3.684084,6.726903,7.088138,3.238585,-3.859812,-2.277065,6.810151,-1.767339,0.134983,2.898327,-5.452656,-0.750324,6.214059,1.836201,1.993460,-1.726810,-0.758699,0.530066,-7.350899,-2.060115,-8.811640,7.484497,-1.354109,1.964563,1.626757,-5.945441,-3.462876,4.142084,-7.857426,6.933631,7.094609,7.808369,6.320770,-7.030679,9.552271,-1.134090,9.994576,8.193895,2.166988,-3.719289,-8.397815,-4.269294,2.154402,-0.716483,-0.085496,3.627973,8.123288,-3.640354,-5.965925,-0.843567,6.599976,9.457998,-3.596212,-6.331594,3.638046,0.493715,1.510156,-3.811705,1.221159,9.452980,-6.319095,-6.862217,0.639986,-7.000406,2.087115,-0.108031,7.269782,4.982180,-7.443448,5.819841,-7.234559,8.606772,-0.708744,1.180375,-3.108598,-2.065610,3.985163,-9.548192,8.752735,-2.305188,-4.397475,8.659175,-8.050850,2.568226,3.951089,-7.298842,9.437711,6.555665,0.367236,-3.042338,8.336822,-1.279959,6.144663,-9.189290,3.791624,1.304509,3.761883,5.135416,9.433459,-9.673489,4.022593,0.292564,6.078105,5.825696,8.075258,-3.794763,-5.693175,6.667261,-9.777994,-2.785508,4.911860,9.920706,-3.424114,-7.729495,2.221859,-6.402040,-5.696941,-5.769928,0.592927,-0.054987,2.389220,7.616363,-7.796402,0.259085,-1.299594,-7.101639,9.146764,-4.378289,3.989845,0.202267,-1.483137,1.046499,4.648398,-7.553272,5.806822,0.875666,4.810174,-8.926077,-2.266211,-2.679683,6.570128,-7.492133,-8.401334,6.382977,9.550755,3.427309,-4.465289,-4.485873,-8.966061,-1.189812,-6.618964,-8.327747,6.142076,1.443166,-6.063565,-0.081765,-5.698463,-1.477192,-3.716264,-0.234918,-6.704665,1.235120,6.453872,5.592442,-3.462272,5.716687,5.122365,-2.096880,5.331877,-6.244220,-1.432847,2.659726,2.561070,1.541606,6.988457,-9.985040,5.533011,7.234204,4.651176,-6.074471,-4.421724,-1.169045,4.944642,-8.653308,-6.766298,-3.863961,-1.136674,-0.087077,2.476857,4.604816,1.639301,7.848968,1.057905,0.047063,0.291514,-9.612064,-3.626562,5.456240,1.062341,-7.070177,9.856691,-3.774141,-8.297442,6.604691,4.922749,6.065909,-0.785126,9.697182,8.707237,8.569465,7.288381,-1.317343,-5.163878,9.536433,-1.771570,-6.058665,4.732729,9.745708,3.538332,8.133034,5.876539,8.679322,7.900331,6.631417,-4.900842,3.298073,-1.918936,3.477123,-8.757967,-6.777028,-6.042487,-6.547919,-9.362884,1.513134,-0.302085,-0.741548,7.903020,-4.762601,-8.299514,3.954360,-5.909113,-8.919319,3.646249,4.777380,2.887112,-3.384447,-7.940474,5.899650,-0.335970,-3.883927,0.577074,-7.341799,5.613162,-8.988504,-2.536797,-5.582503,-6.985699,7.583072,-1.516537,4.331262,-6.129396,2.787146,-9.779738,0.398718,3.129886,-4.990365,-0.976616,-0.931297,0.046201,-9.748320,-7.535557,-9.857449,1.140055,-4.185042,-3.547985,1.571767,3.546212,-1.256576,0.246948,-1.062318,4.362366], dtype = "float64")#candidate|4926|(1584,)|const|float64
call_4923 = relay.TupleGetItem(func_751_call(relay.reshape(var_4924.astype('float32'), [6, 3, 4]), relay.reshape(const_4925.astype('float64'), [198,]), relay.reshape(const_4926.astype('float64'), [1584,]), ), 0)
call_4927 = relay.TupleGetItem(func_756_call(relay.reshape(var_4924.astype('float32'), [6, 3, 4]), relay.reshape(const_4925.astype('float64'), [198,]), relay.reshape(const_4926.astype('float64'), [1584,]), ), 0)
output = relay.Tuple([call_4893,var_4908,const_4909,uop_4911,call_4918,var_4919,call_4923,var_4924,const_4925,const_4926,])
output2 = relay.Tuple([call_4894,var_4908,const_4909,uop_4913,call_4920,var_4919,call_4927,var_4924,const_4925,const_4926,])
func_4930 = relay.Function([var_4908,var_4919,var_4924,], output)
mod['func_4930'] = func_4930
mod = relay.transform.InferType()(mod)
var_4931 = relay.var("var_4931", dtype = "float64", shape = ())#candidate|4931|()|var|float64
var_4932 = relay.var("var_4932", dtype = "float32", shape = (336,))#candidate|4932|(336,)|var|float32
var_4933 = relay.var("var_4933", dtype = "float32", shape = (72, 1))#candidate|4933|(72, 1)|var|float32
output = func_4930(var_4931,var_4932,var_4933,)
func_4934 = relay.Function([var_4931,var_4932,var_4933,], output)
mutated_mod['func_4934'] = func_4934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2375_call = mod.get_global_var('func_2375')
func_2376_call = mutated_mod.get_global_var('func_2376')
call_4947 = func_2375_call()
call_4948 = func_2375_call()
var_4957 = relay.var("var_4957", dtype = "float32", shape = (5, 11, 4))#candidate|4957|(5, 11, 4)|var|float32
bop_4958 = relay.greater_equal(call_4947.astype('bool'), var_4957.astype('bool')) # shape=(5, 11, 4)
bop_4961 = relay.greater_equal(call_4948.astype('bool'), var_4957.astype('bool')) # shape=(5, 11, 4)
output = bop_4958
output2 = bop_4961
func_4964 = relay.Function([var_4957,], output)
mod['func_4964'] = func_4964
mod = relay.transform.InferType()(mod)
var_4965 = relay.var("var_4965", dtype = "float32", shape = (5, 11, 4))#candidate|4965|(5, 11, 4)|var|float32
output = func_4964(var_4965)
func_4966 = relay.Function([var_4965], output)
mutated_mod['func_4966'] = func_4966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1415_call = mod.get_global_var('func_1415')
func_1417_call = mutated_mod.get_global_var('func_1417')
call_4971 = func_1415_call()
call_4972 = func_1415_call()
func_1848_call = mod.get_global_var('func_1848')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_4975 = relay.TupleGetItem(func_1848_call(relay.reshape(call_4971.astype('float32'), [5, 1, 4])), 0)
call_4976 = relay.TupleGetItem(func_1851_call(relay.reshape(call_4971.astype('float32'), [5, 1, 4])), 0)
output = relay.Tuple([call_4971,call_4975,])
output2 = relay.Tuple([call_4972,call_4976,])
func_4978 = relay.Function([], output)
mod['func_4978'] = func_4978
mod = relay.transform.InferType()(mod)
output = func_4978()
func_4979 = relay.Function([], output)
mutated_mod['func_4979'] = func_4979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2557_call = mod.get_global_var('func_2557')
func_2559_call = mutated_mod.get_global_var('func_2559')
call_5002 = func_2557_call()
call_5003 = func_2557_call()
func_4243_call = mod.get_global_var('func_4243')
func_4245_call = mutated_mod.get_global_var('func_4245')
call_5017 = func_4243_call()
call_5018 = func_4243_call()
output = relay.Tuple([call_5002,call_5017,])
output2 = relay.Tuple([call_5003,call_5018,])
func_5022 = relay.Function([], output)
mod['func_5022'] = func_5022
mod = relay.transform.InferType()(mod)
mutated_mod['func_5022'] = func_5022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5022_call = mutated_mod.get_global_var('func_5022')
call_5023 = func_5022_call()
output = call_5023
func_5024 = relay.Function([], output)
mutated_mod['func_5024'] = func_5024
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5046 = relay.const([[[-1.417236,-7.443555,8.980645]],[[-0.374734,7.566174,2.041163]],[[8.508687,-2.273749,-8.949888]],[[-3.889618,-6.369367,-0.925094]],[[2.272119,7.460332,-3.086770]],[[-1.220595,0.684532,-4.318215]],[[-2.043431,3.712484,-1.392321]],[[2.572593,1.369423,-1.714872]],[[4.584747,7.672392,5.225019]],[[-7.591260,4.816568,6.667290]],[[-3.156771,1.857941,-1.092829]],[[-4.387041,-7.956907,6.290917]],[[-5.470979,-8.953755,-5.641774]],[[0.231666,2.352316,3.285016]]], dtype = "float64")#candidate|5046|(14, 1, 3)|const|float64
uop_5047 = relay.asinh(const_5046.astype('float64')) # shape=(14, 1, 3)
uop_5054 = relay.sin(const_5046.astype('float32')) # shape=(14, 1, 3)
bop_5057 = relay.bitwise_and(const_5046.astype('uint32'), relay.reshape(uop_5047.astype('uint32'), relay.shape_of(const_5046))) # shape=(14, 1, 3)
bop_5062 = relay.equal(uop_5054.astype('bool'), relay.reshape(bop_5057.astype('bool'), relay.shape_of(uop_5054))) # shape=(14, 1, 3)
func_526_call = mod.get_global_var('func_526')
func_530_call = mutated_mod.get_global_var('func_530')
var_5066 = relay.var("var_5066", dtype = "float64", shape = (33, 6))#candidate|5066|(33, 6)|var|float64
var_5067 = relay.var("var_5067", dtype = "float64", shape = (1584,))#candidate|5067|(1584,)|var|float64
call_5065 = relay.TupleGetItem(func_526_call(relay.reshape(var_5066.astype('float64'), [9, 2, 11]), relay.reshape(var_5067.astype('float64'), [1584, 1]), ), 3)
call_5068 = relay.TupleGetItem(func_530_call(relay.reshape(var_5066.astype('float64'), [9, 2, 11]), relay.reshape(var_5067.astype('float64'), [1584, 1]), ), 3)
output = relay.Tuple([bop_5062,call_5065,var_5066,var_5067,])
output2 = relay.Tuple([bop_5062,call_5068,var_5066,var_5067,])
func_5073 = relay.Function([var_5066,var_5067,], output)
mod['func_5073'] = func_5073
mod = relay.transform.InferType()(mod)
mutated_mod['func_5073'] = func_5073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5073_call = mutated_mod.get_global_var('func_5073')
var_5075 = relay.var("var_5075", dtype = "float64", shape = (33, 6))#candidate|5075|(33, 6)|var|float64
var_5076 = relay.var("var_5076", dtype = "float64", shape = (1584,))#candidate|5076|(1584,)|var|float64
call_5074 = func_5073_call(var_5075,var_5076,)
output = call_5074
func_5077 = relay.Function([var_5075,var_5076,], output)
mutated_mod['func_5077'] = func_5077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3335_call = mod.get_global_var('func_3335')
func_3337_call = mutated_mod.get_global_var('func_3337')
call_5083 = func_3335_call()
call_5084 = func_3335_call()
output = call_5083
output2 = call_5084
func_5086 = relay.Function([], output)
mod['func_5086'] = func_5086
mod = relay.transform.InferType()(mod)
mutated_mod['func_5086'] = func_5086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5086_call = mutated_mod.get_global_var('func_5086')
call_5087 = func_5086_call()
output = call_5087
func_5088 = relay.Function([], output)
mutated_mod['func_5088'] = func_5088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4452_call = mod.get_global_var('func_4452')
func_4454_call = mutated_mod.get_global_var('func_4454')
call_5110 = func_4452_call()
call_5111 = func_4452_call()
func_2647_call = mod.get_global_var('func_2647')
func_2651_call = mutated_mod.get_global_var('func_2651')
const_5115 = relay.const([[-4,10,-8,1,-7,-6,1,-5,-10,3,5,4,-8,7,-6,3,-5,8,-7,-5,-7,-3,7,-9,4,-4,-8,2,-5,-5,-7,-3,-3,-6,-1,5,3,4,7,-7,-5,-1],[1,9,4,9,6,4,4,-2,-4,-10,-4,-9,10,-1,6,10,-7,3,4,-3,-5,-2,8,3,10,10,-10,4,-4,-6,8,10,-4,-7,5,3,-6,7,10,7,-5,-3],[-8,6,-3,-4,10,-6,-5,5,2,9,4,1,8,-3,7,-10,2,-6,-2,-7,4,-7,8,-10,1,-8,5,-8,-7,8,4,10,-7,2,-9,-10,-6,-2,8,-5,-1,-3],[-2,3,-9,-7,10,10,4,-7,-4,-5,-3,-5,1,9,2,-2,2,-6,-8,-7,-10,8,-10,6,1,4,-8,-2,-8,-3,-4,7,-10,-8,-5,7,-1,-9,9,6,-7,-1],[-9,4,-5,-8,-1,6,7,10,-10,-9,-3,5,-4,-1,3,-5,-6,-2,7,-9,-4,-2,10,6,2,-2,-4,8,-7,-10,-2,3,-8,-8,-4,3,-3,-2,8,4,3,-4],[10,-6,10,7,3,-9,-2,5,-5,5,-5,2,3,1,1,-3,-5,8,-7,7,-5,-2,-1,-5,5,-6,-7,2,-4,9,8,4,3,9,9,1,-10,2,-7,-10,9,3]], dtype = "int64")#candidate|5115|(6, 42)|const|int64
var_5116 = relay.var("var_5116", dtype = "int16", shape = ())#candidate|5116|()|var|int16
var_5117 = relay.var("var_5117", dtype = "bool", shape = (160,))#candidate|5117|(160,)|var|bool
call_5114 = relay.TupleGetItem(func_2647_call(relay.reshape(const_5115.astype('int64'), [252,]), relay.reshape(var_5116.astype('int16'), []), relay.reshape(var_5117.astype('bool'), [5, 8, 4]), ), 0)
call_5118 = relay.TupleGetItem(func_2651_call(relay.reshape(const_5115.astype('int64'), [252,]), relay.reshape(var_5116.astype('int16'), []), relay.reshape(var_5117.astype('bool'), [5, 8, 4]), ), 0)
func_2089_call = mod.get_global_var('func_2089')
func_2093_call = mutated_mod.get_global_var('func_2093')
const_5136 = relay.const([True,False,False,True,True,False,True,True,False,True,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,False,True,True,True,False,False,False,False,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,False,False,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,True,True,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,True,False,False,False,False,True,True,False,False,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,False,False,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,True,True,False,False,False,False,False,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,False,False,False,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,True,False,True,False,False,True,True,False,True,True,False,False,True,False,False,True,False,False,False,False,False,True,True,False,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,True,True,False,True,True,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,False,False,False,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,False,False,False,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,True,True,False,True,True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,False,True,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,True,True,True,True,False,True,True,True,False,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False,False,False,True,False,True,True,False,True,False,True,True,True,True,False,False,True,False,True,True,False,False,False,False,True,True,False], dtype = "bool")#candidate|5136|(600,)|const|bool
call_5135 = relay.TupleGetItem(func_2089_call(relay.reshape(const_5136.astype('bool'), [15, 10, 4]), relay.reshape(const_5136.astype('bool'), [15, 10, 4]), ), 0)
call_5137 = relay.TupleGetItem(func_2093_call(relay.reshape(const_5136.astype('bool'), [15, 10, 4]), relay.reshape(const_5136.astype('bool'), [15, 10, 4]), ), 0)
func_2841_call = mod.get_global_var('func_2841')
func_2842_call = mutated_mod.get_global_var('func_2842')
call_5155 = relay.TupleGetItem(func_2841_call(), 1)
call_5156 = relay.TupleGetItem(func_2842_call(), 1)
func_2337_call = mod.get_global_var('func_2337')
func_2339_call = mutated_mod.get_global_var('func_2339')
call_5178 = func_2337_call()
call_5179 = func_2337_call()
output = relay.Tuple([call_5110,call_5114,const_5115,var_5116,var_5117,call_5135,const_5136,call_5155,call_5178,])
output2 = relay.Tuple([call_5111,call_5118,const_5115,var_5116,var_5117,call_5137,const_5136,call_5156,call_5179,])
func_5180 = relay.Function([var_5116,var_5117,], output)
mod['func_5180'] = func_5180
mod = relay.transform.InferType()(mod)
var_5181 = relay.var("var_5181", dtype = "int16", shape = ())#candidate|5181|()|var|int16
var_5182 = relay.var("var_5182", dtype = "bool", shape = (160,))#candidate|5182|(160,)|var|bool
output = func_5180(var_5181,var_5182,)
func_5183 = relay.Function([var_5181,var_5182,], output)
mutated_mod['func_5183'] = func_5183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5086_call = mod.get_global_var('func_5086')
func_5088_call = mutated_mod.get_global_var('func_5088')
call_5301 = func_5086_call()
call_5302 = func_5086_call()
func_3186_call = mod.get_global_var('func_3186')
func_3188_call = mutated_mod.get_global_var('func_3188')
call_5304 = relay.TupleGetItem(func_3186_call(), 3)
call_5305 = relay.TupleGetItem(func_3188_call(), 3)
func_1466_call = mod.get_global_var('func_1466')
func_1469_call = mutated_mod.get_global_var('func_1469')
const_5309 = relay.const([-7.136214,-3.017525,4.518115,-2.176131,3.529072,-2.806519,2.373215,-7.045050,-6.957725,9.138135,-0.742099,9.746047,1.286220,-9.911555,2.667037,-1.011775,2.527033,4.404943,-3.879956,0.753310,-6.941279,-1.831132,2.154667,-9.048745,-5.824732,0.018180,8.360613,-2.280430,-3.372569,0.422375,-8.518456,-9.934322,-9.635526,-2.700896,2.404733,5.208247,-6.804520,6.878628,-3.814223,6.171631,7.494885,-3.068747,-0.993935,-3.054572,9.116581,-6.863317,0.844669,-0.474035,-2.838073,-5.617767,-1.280475,6.236306,-1.781275,-4.999924,-6.528368,9.712685,-6.976143,-8.562001,-6.745638,-5.576894,2.311258,1.431138,9.411856,-4.000414,-9.841759,2.734464,-6.148312,7.128897,3.594264,-6.449894,-1.928695,3.295874,1.939676,8.608922,-9.510606,4.636610,-9.637264,-1.481404,-0.699267,7.480904,-6.871305,-4.907352,0.303369,7.184229,1.268679,-4.486131,7.703905,8.141909,5.931776,-6.684962,-2.755564,9.053073,-8.045686,-6.149831,0.132466,0.221681,-1.681926,-7.503669,-6.953437,-3.603450,9.891287,4.260556,-1.925568,1.058672,0.573251,-3.000243,-3.348449,-3.362803,2.667816,7.340809,-9.290837,-1.818816,-2.229651,-6.525877,-6.252208,1.457272,2.371176,-3.822310,0.750472,8.564972,9.416039,-4.503936,-0.609508,-8.221745,9.922759,-3.448232,4.800744,-1.684399,6.619841,-0.229740,5.469893,-8.572003,-4.543054,-3.173786,-2.170013,-3.654313,0.755937,5.572327,4.979788,-7.634106,-3.291551,-5.538871,3.110446,9.506542,8.874724,7.037817,1.748347,4.590806,-9.621816,4.904377,1.770559,5.397280,-1.396727,-9.807973,-6.394475,-6.303381,7.987325,-8.586557,9.631970,-4.773499,3.044216,1.080590,9.332558,-2.871845,3.629741,-0.523396,5.267385,6.412908,0.389762,3.419080,-8.875651,-9.983416,-7.869360,2.718254,-8.257988,-1.877371,2.012567,6.932894,-5.473083,-6.288261,6.151823,0.102947,-8.414001,8.286122,-3.767544,-7.422804,-1.440433,2.140473,1.003421,3.203527,-2.654352,-1.569047,1.359994,-3.044596,3.459293,9.329775,5.957017,-4.008323], dtype = "float64")#candidate|5309|(198,)|const|float64
call_5308 = relay.TupleGetItem(func_1466_call(relay.reshape(const_5309.astype('float64'), [198,])), 0)
call_5310 = relay.TupleGetItem(func_1469_call(relay.reshape(const_5309.astype('float64'), [198,])), 0)
uop_5320 = relay.asinh(const_5309.astype('float32')) # shape=(198,)
var_5322 = relay.var("var_5322", dtype = "float64", shape = (198,))#candidate|5322|(198,)|var|float64
bop_5323 = relay.maximum(const_5309.astype('int16'), relay.reshape(var_5322.astype('int16'), relay.shape_of(const_5309))) # shape=(198,)
func_3822_call = mod.get_global_var('func_3822')
func_3824_call = mutated_mod.get_global_var('func_3824')
var_5328 = relay.var("var_5328", dtype = "float32", shape = (180,))#candidate|5328|(180,)|var|float32
call_5327 = func_3822_call(relay.reshape(var_5328.astype('float32'), [5, 9, 4]))
call_5329 = func_3822_call(relay.reshape(var_5328.astype('float32'), [5, 9, 4]))
output = relay.Tuple([call_5301,call_5304,call_5308,uop_5320,bop_5323,call_5327,var_5328,])
output2 = relay.Tuple([call_5302,call_5305,call_5310,uop_5320,bop_5323,call_5329,var_5328,])
func_5330 = relay.Function([var_5322,var_5328,], output)
mod['func_5330'] = func_5330
mod = relay.transform.InferType()(mod)
mutated_mod['func_5330'] = func_5330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5330_call = mutated_mod.get_global_var('func_5330')
var_5332 = relay.var("var_5332", dtype = "float64", shape = (198,))#candidate|5332|(198,)|var|float64
var_5333 = relay.var("var_5333", dtype = "float32", shape = (180,))#candidate|5333|(180,)|var|float32
call_5331 = func_5330_call(var_5332,var_5333,)
output = call_5331
func_5334 = relay.Function([var_5332,var_5333,], output)
mutated_mod['func_5334'] = func_5334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4314_call = mod.get_global_var('func_4314')
func_4316_call = mutated_mod.get_global_var('func_4316')
call_5336 = relay.TupleGetItem(func_4314_call(), 1)
call_5337 = relay.TupleGetItem(func_4316_call(), 1)
output = relay.Tuple([call_5336,])
output2 = relay.Tuple([call_5337,])
func_5347 = relay.Function([], output)
mod['func_5347'] = func_5347
mod = relay.transform.InferType()(mod)
output = func_5347()
func_5348 = relay.Function([], output)
mutated_mod['func_5348'] = func_5348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2886_call = mod.get_global_var('func_2886')
func_2887_call = mutated_mod.get_global_var('func_2887')
call_5374 = relay.TupleGetItem(func_2886_call(), 0)
call_5375 = relay.TupleGetItem(func_2887_call(), 0)
output = call_5374
output2 = call_5375
func_5384 = relay.Function([], output)
mod['func_5384'] = func_5384
mod = relay.transform.InferType()(mod)
mutated_mod['func_5384'] = func_5384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5384_call = mutated_mod.get_global_var('func_5384')
call_5385 = func_5384_call()
output = call_5385
func_5386 = relay.Function([], output)
mutated_mod['func_5386'] = func_5386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4416_call = mod.get_global_var('func_4416')
func_4418_call = mutated_mod.get_global_var('func_4418')
call_5396 = relay.TupleGetItem(func_4416_call(), 0)
call_5397 = relay.TupleGetItem(func_4418_call(), 0)
func_1331_call = mod.get_global_var('func_1331')
func_1332_call = mutated_mod.get_global_var('func_1332')
call_5398 = func_1331_call()
call_5399 = func_1331_call()
output = relay.Tuple([call_5396,call_5398,])
output2 = relay.Tuple([call_5397,call_5399,])
func_5404 = relay.Function([], output)
mod['func_5404'] = func_5404
mod = relay.transform.InferType()(mod)
mutated_mod['func_5404'] = func_5404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5404_call = mutated_mod.get_global_var('func_5404')
call_5405 = func_5404_call()
output = call_5405
func_5406 = relay.Function([], output)
mutated_mod['func_5406'] = func_5406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2154_call = mod.get_global_var('func_2154')
func_2155_call = mutated_mod.get_global_var('func_2155')
call_5477 = relay.TupleGetItem(func_2154_call(), 0)
call_5478 = relay.TupleGetItem(func_2155_call(), 0)
output = call_5477
output2 = call_5478
func_5488 = relay.Function([], output)
mod['func_5488'] = func_5488
mod = relay.transform.InferType()(mod)
output = func_5488()
func_5489 = relay.Function([], output)
mutated_mod['func_5489'] = func_5489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3123_call = mod.get_global_var('func_3123')
func_3125_call = mutated_mod.get_global_var('func_3125')
call_5537 = relay.TupleGetItem(func_3123_call(), 1)
call_5538 = relay.TupleGetItem(func_3125_call(), 1)
output = call_5537
output2 = call_5538
func_5544 = relay.Function([], output)
mod['func_5544'] = func_5544
mod = relay.transform.InferType()(mod)
output = func_5544()
func_5545 = relay.Function([], output)
mutated_mod['func_5545'] = func_5545
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5553 = relay.var("var_5553", dtype = "int32", shape = (3, 5, 7))#candidate|5553|(3, 5, 7)|var|int32
var_5554 = relay.var("var_5554", dtype = "int32", shape = (3, 5, 7))#candidate|5554|(3, 5, 7)|var|int32
bop_5555 = relay.greater(var_5553.astype('bool'), relay.reshape(var_5554.astype('bool'), relay.shape_of(var_5553))) # shape=(3, 5, 7)
output = bop_5555
output2 = bop_5555
func_5558 = relay.Function([var_5553,var_5554,], output)
mod['func_5558'] = func_5558
mod = relay.transform.InferType()(mod)
var_5559 = relay.var("var_5559", dtype = "int32", shape = (3, 5, 7))#candidate|5559|(3, 5, 7)|var|int32
var_5560 = relay.var("var_5560", dtype = "int32", shape = (3, 5, 7))#candidate|5560|(3, 5, 7)|var|int32
output = func_5558(var_5559,var_5560,)
func_5561 = relay.Function([var_5559,var_5560,], output)
mutated_mod['func_5561'] = func_5561
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5639 = relay.const([[[5.180364,8.930103,7.692603,5.809471,-0.926176,-2.801231,-8.719584,8.502172,-3.921855,-0.186527],[0.812779,-3.446544,8.034542,-4.855883,3.878211,5.710649,-0.309490,-2.633755,-4.536628,-6.622958],[6.332250,-5.568412,4.339660,-0.272423,0.376651,7.900775,2.562194,-3.309053,-9.103413,1.928462],[-7.657408,7.775419,8.101126,7.751962,8.305132,-7.451932,-5.971586,-3.203867,6.403010,7.539563]],[[-0.435860,9.167306,4.407919,-6.149855,4.596874,9.885966,-5.428620,-8.704527,5.764931,-3.764585],[9.579114,0.877010,1.827168,-4.440657,-6.682050,4.223674,-7.296550,2.016426,-0.955359,-6.882175],[5.886043,8.720429,-1.331446,4.582737,4.945408,-6.174300,-9.139280,-1.333230,-1.114859,-9.826111],[5.244042,5.985753,6.714202,4.192525,-6.430213,3.187219,2.806146,-7.281261,-9.192267,5.905436]]], dtype = "float64")#candidate|5639|(2, 4, 10)|const|float64
uop_5640 = relay.log2(const_5639.astype('float64')) # shape=(2, 4, 10)
bop_5652 = relay.divide(const_5639.astype('float32'), relay.reshape(uop_5640.astype('float32'), relay.shape_of(const_5639))) # shape=(2, 4, 10)
output = relay.Tuple([bop_5652,])
output2 = relay.Tuple([bop_5652,])
func_5670 = relay.Function([], output)
mod['func_5670'] = func_5670
mod = relay.transform.InferType()(mod)
output = func_5670()
func_5671 = relay.Function([], output)
mutated_mod['func_5671'] = func_5671
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5853 = relay.var("var_5853", dtype = "float64", shape = (5, 2, 1))#candidate|5853|(5, 2, 1)|var|float64
uop_5854 = relay.tan(var_5853.astype('float64')) # shape=(5, 2, 1)
func_2154_call = mod.get_global_var('func_2154')
func_2155_call = mutated_mod.get_global_var('func_2155')
call_5858 = relay.TupleGetItem(func_2154_call(), 0)
call_5859 = relay.TupleGetItem(func_2155_call(), 0)
func_2707_call = mod.get_global_var('func_2707')
func_2712_call = mutated_mod.get_global_var('func_2712')
const_5861 = relay.const(-0.121111, dtype = "float64")#candidate|5861|()|const|float64
const_5862 = relay.const([8.252367,-8.134978,6.021990,1.098436,-5.474072,-8.963037,4.669038,-8.394852,8.381574,-6.971740,-0.217433,7.308530,-5.687213,-1.602635,4.853458,5.858147,-5.401869,5.299359,0.392241,-3.438878,1.259238,9.706252,5.231460,-1.964485,7.615866,2.826715,7.271087,-1.436940,9.860247,-4.740563,-2.338259,1.146703,2.594989,-6.822328,7.854498,-3.429500,2.879856,0.661886,9.003784,3.307848,5.011522,-1.815115,-1.386362,-5.370609,4.273615,-6.558188,8.449027,1.318682,-9.915173,5.788430,-7.382916,-0.423538,2.532408,6.849424,-3.704990,-1.749190,2.993560,-3.912301,5.757816,8.429001,0.010774,-9.554604,-3.976235,2.273880,3.130727,-4.730339,0.673048,3.774938,5.561788,4.605573,-8.832606,9.789360,2.490750,6.004620,-7.335537,3.854263,-9.934410,-0.859428,3.339817,-1.473166,4.408261,3.456071,1.959221,0.023333,1.338198,-2.030752,-6.890055,8.836694,-5.422870,-0.761329,-0.532739,-1.081755,2.559849,5.345722,5.241440,8.919216,-2.394628,9.390252,-2.530887,-6.617614,3.839759,7.580860,-5.498369,9.095645,3.915350,-9.015476,-2.655744,-2.780934,8.923602,-9.453031,9.411458,0.668055,-4.472384,-0.852092,-8.073783,-7.319325,1.672671,9.335158,9.607112,-5.974598,3.639761,-5.002334,-2.031921,4.283764,-6.125865,-5.005214,-7.631282,7.872174,-1.599864,7.514757,4.184563,-8.588647,5.355243,-7.160480,1.154136,0.985392,2.735803,-4.298463,-2.704363,-1.936708,1.091144,6.709912,-4.863524,0.115313,-1.508224,9.699960,-9.973751,-9.567883,-3.317966,-2.303308,-9.320662,-1.576571,3.885201,3.492145,-5.093925,-0.734800,-2.995170,9.649776,9.507801,4.176757,8.535885,4.203669,-0.980923,3.954150,-1.661361,-8.893759,1.816292,2.035314,1.667645,6.546115,-0.641365,-0.795362,0.109195,8.378912,-8.665394,-2.186176,-9.944685,1.017133,4.231292,8.562046,2.810575,-4.301905,-7.579448,0.530970,-6.258680,9.818010,0.634242,9.236877,-1.252865,0.979676,0.436920,-8.034915,5.945983,2.599682,4.310846,-9.336323,-7.112857,8.899243], dtype = "float64")#candidate|5862|(198,)|const|float64
var_5863 = relay.var("var_5863", dtype = "float64", shape = (28,))#candidate|5863|(28,)|var|float64
call_5860 = relay.TupleGetItem(func_2707_call(relay.reshape(const_5861.astype('float64'), []), relay.reshape(const_5862.astype('float64'), [3, 66]), relay.reshape(var_5863.astype('float64'), [1, 2, 14]), ), 1)
call_5864 = relay.TupleGetItem(func_2712_call(relay.reshape(const_5861.astype('float64'), []), relay.reshape(const_5862.astype('float64'), [3, 66]), relay.reshape(var_5863.astype('float64'), [1, 2, 14]), ), 1)
output = relay.Tuple([uop_5854,call_5858,call_5860,const_5861,const_5862,var_5863,])
output2 = relay.Tuple([uop_5854,call_5859,call_5864,const_5861,const_5862,var_5863,])
func_5875 = relay.Function([var_5853,var_5863,], output)
mod['func_5875'] = func_5875
mod = relay.transform.InferType()(mod)
mutated_mod['func_5875'] = func_5875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5875_call = mutated_mod.get_global_var('func_5875')
var_5877 = relay.var("var_5877", dtype = "float64", shape = (5, 2, 1))#candidate|5877|(5, 2, 1)|var|float64
var_5878 = relay.var("var_5878", dtype = "float64", shape = (28,))#candidate|5878|(28,)|var|float64
call_5876 = func_5875_call(var_5877,var_5878,)
output = call_5876
func_5879 = relay.Function([var_5877,var_5878,], output)
mutated_mod['func_5879'] = func_5879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2451_call = mod.get_global_var('func_2451')
func_2452_call = mutated_mod.get_global_var('func_2452')
call_5884 = func_2451_call()
call_5885 = func_2451_call()
output = call_5884
output2 = call_5885
func_5886 = relay.Function([], output)
mod['func_5886'] = func_5886
mod = relay.transform.InferType()(mod)
output = func_5886()
func_5887 = relay.Function([], output)
mutated_mod['func_5887'] = func_5887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4468_call = mod.get_global_var('func_4468')
func_4470_call = mutated_mod.get_global_var('func_4470')
call_5907 = relay.TupleGetItem(func_4468_call(), 0)
call_5908 = relay.TupleGetItem(func_4470_call(), 0)
uop_5915 = relay.atanh(call_5907.astype('float64')) # shape=(7, 1, 10)
uop_5917 = relay.atanh(call_5908.astype('float64')) # shape=(7, 1, 10)
uop_5920 = relay.erf(call_5907.astype('float64')) # shape=(7, 1, 10)
uop_5922 = relay.erf(call_5908.astype('float64')) # shape=(7, 1, 10)
func_5022_call = mod.get_global_var('func_5022')
func_5024_call = mutated_mod.get_global_var('func_5024')
call_5923 = relay.TupleGetItem(func_5022_call(), 1)
call_5924 = relay.TupleGetItem(func_5024_call(), 1)
bop_5931 = relay.floor_mod(uop_5915.astype('float32'), relay.reshape(uop_5920.astype('float32'), relay.shape_of(uop_5915))) # shape=(7, 1, 10)
bop_5934 = relay.floor_mod(uop_5917.astype('float32'), relay.reshape(uop_5922.astype('float32'), relay.shape_of(uop_5917))) # shape=(7, 1, 10)
bop_5940 = relay.logical_or(bop_5931.astype('bool'), relay.reshape(uop_5915.astype('bool'), relay.shape_of(bop_5931))) # shape=(7, 1, 10)
bop_5943 = relay.logical_or(bop_5934.astype('bool'), relay.reshape(uop_5917.astype('bool'), relay.shape_of(bop_5934))) # shape=(7, 1, 10)
output = relay.Tuple([call_5923,bop_5940,])
output2 = relay.Tuple([call_5924,bop_5943,])
func_5960 = relay.Function([], output)
mod['func_5960'] = func_5960
mod = relay.transform.InferType()(mod)
mutated_mod['func_5960'] = func_5960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5960_call = mutated_mod.get_global_var('func_5960')
call_5961 = func_5960_call()
output = call_5961
func_5962 = relay.Function([], output)
mutated_mod['func_5962'] = func_5962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4452_call = mod.get_global_var('func_4452')
func_4454_call = mutated_mod.get_global_var('func_4454')
call_6039 = func_4452_call()
call_6040 = func_4452_call()
output = relay.Tuple([call_6039,])
output2 = relay.Tuple([call_6040,])
func_6051 = relay.Function([], output)
mod['func_6051'] = func_6051
mod = relay.transform.InferType()(mod)
mutated_mod['func_6051'] = func_6051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6051_call = mutated_mod.get_global_var('func_6051')
call_6052 = func_6051_call()
output = call_6052
func_6053 = relay.Function([], output)
mutated_mod['func_6053'] = func_6053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2557_call = mod.get_global_var('func_2557')
func_2559_call = mutated_mod.get_global_var('func_2559')
call_6086 = func_2557_call()
call_6087 = func_2557_call()
uop_6088 = relay.atan(call_6086.astype('float32')) # shape=(5, 1, 4)
uop_6090 = relay.atan(call_6087.astype('float32')) # shape=(5, 1, 4)
output = relay.Tuple([uop_6088,])
output2 = relay.Tuple([uop_6090,])
func_6091 = relay.Function([], output)
mod['func_6091'] = func_6091
mod = relay.transform.InferType()(mod)
output = func_6091()
func_6092 = relay.Function([], output)
mutated_mod['func_6092'] = func_6092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4978_call = mod.get_global_var('func_4978')
func_4979_call = mutated_mod.get_global_var('func_4979')
call_6158 = relay.TupleGetItem(func_4978_call(), 1)
call_6159 = relay.TupleGetItem(func_4979_call(), 1)
output = relay.Tuple([call_6158,])
output2 = relay.Tuple([call_6159,])
func_6183 = relay.Function([], output)
mod['func_6183'] = func_6183
mod = relay.transform.InferType()(mod)
mutated_mod['func_6183'] = func_6183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6183_call = mutated_mod.get_global_var('func_6183')
call_6184 = func_6183_call()
output = call_6184
func_6185 = relay.Function([], output)
mutated_mod['func_6185'] = func_6185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4416_call = mod.get_global_var('func_4416')
func_4418_call = mutated_mod.get_global_var('func_4418')
call_6193 = relay.TupleGetItem(func_4416_call(), 0)
call_6194 = relay.TupleGetItem(func_4418_call(), 0)
output = call_6193
output2 = call_6194
func_6195 = relay.Function([], output)
mod['func_6195'] = func_6195
mod = relay.transform.InferType()(mod)
output = func_6195()
func_6196 = relay.Function([], output)
mutated_mod['func_6196'] = func_6196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5886_call = mod.get_global_var('func_5886')
func_5887_call = mutated_mod.get_global_var('func_5887')
call_6205 = func_5886_call()
call_6206 = func_5886_call()
output = call_6205
output2 = call_6206
func_6214 = relay.Function([], output)
mod['func_6214'] = func_6214
mod = relay.transform.InferType()(mod)
output = func_6214()
func_6215 = relay.Function([], output)
mutated_mod['func_6215'] = func_6215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2154_call = mod.get_global_var('func_2154')
func_2155_call = mutated_mod.get_global_var('func_2155')
call_6216 = relay.TupleGetItem(func_2154_call(), 0)
call_6217 = relay.TupleGetItem(func_2155_call(), 0)
func_5086_call = mod.get_global_var('func_5086')
func_5088_call = mutated_mod.get_global_var('func_5088')
call_6245 = func_5086_call()
call_6246 = func_5086_call()
output = relay.Tuple([call_6216,call_6245,])
output2 = relay.Tuple([call_6217,call_6246,])
func_6259 = relay.Function([], output)
mod['func_6259'] = func_6259
mod = relay.transform.InferType()(mod)
output = func_6259()
func_6260 = relay.Function([], output)
mutated_mod['func_6260'] = func_6260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4243_call = mod.get_global_var('func_4243')
func_4245_call = mutated_mod.get_global_var('func_4245')
call_6264 = func_4243_call()
call_6265 = func_4243_call()
output = relay.Tuple([call_6264,])
output2 = relay.Tuple([call_6265,])
func_6266 = relay.Function([], output)
mod['func_6266'] = func_6266
mod = relay.transform.InferType()(mod)
mutated_mod['func_6266'] = func_6266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6266_call = mutated_mod.get_global_var('func_6266')
call_6267 = func_6266_call()
output = call_6267
func_6268 = relay.Function([], output)
mutated_mod['func_6268'] = func_6268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1415_call = mod.get_global_var('func_1415')
func_1417_call = mutated_mod.get_global_var('func_1417')
call_6285 = func_1415_call()
call_6286 = func_1415_call()
output = relay.Tuple([call_6285,])
output2 = relay.Tuple([call_6286,])
func_6291 = relay.Function([], output)
mod['func_6291'] = func_6291
mod = relay.transform.InferType()(mod)
output = func_6291()
func_6292 = relay.Function([], output)
mutated_mod['func_6292'] = func_6292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1331_call = mod.get_global_var('func_1331')
func_1332_call = mutated_mod.get_global_var('func_1332')
call_6307 = func_1331_call()
call_6308 = func_1331_call()
func_5073_call = mod.get_global_var('func_5073')
func_5077_call = mutated_mod.get_global_var('func_5077')
const_6346 = relay.const([[6.414347,4.868402,6.691359,-7.344674,-2.772710,-4.404071],[1.478472,9.392788,5.756102,2.677185,1.738822,8.408831],[-2.666653,1.583997,-6.496345,2.012272,7.565110,0.593957],[-1.834434,0.155589,-2.666361,3.089137,7.759709,9.968872],[0.949851,8.448672,5.150478,0.564139,1.732456,-0.835930],[-7.343660,6.675916,5.310128,6.207444,1.569354,-7.654917],[-5.498042,8.816596,-7.353203,-6.761370,7.767084,-7.179452],[-9.616698,-7.385534,6.476999,-2.918669,5.349341,2.959895],[-9.692714,-9.226213,-8.062086,4.649403,-6.751724,-6.630486],[5.294385,-1.489050,0.004343,5.926796,-8.325640,5.108355],[6.831036,-9.297080,-2.035073,8.661833,-4.560481,-9.131535],[-9.171775,4.395393,-7.119663,0.296743,-8.698036,-9.146681],[-3.425847,2.568721,-0.722266,-0.192531,-7.116453,-6.366493],[7.757823,4.114899,5.494919,-7.328643,-9.212137,-1.697566],[3.533490,-7.860042,8.499144,7.720614,2.719200,6.686321],[-4.031336,6.650433,-2.978769,8.517649,3.483681,4.869328],[-4.428329,-0.948652,8.443124,0.469845,-6.591636,-8.252881],[-3.003729,8.299248,-0.079344,2.671481,7.317869,-5.055461],[-3.584759,2.478988,-3.045940,-7.564577,-3.892132,2.632635],[3.783435,-5.562013,4.011621,-9.044488,2.688065,0.719780],[-3.006224,-7.624777,0.801493,8.442514,-5.724974,9.676699],[9.767322,2.768989,-1.349876,8.552622,4.365021,7.855953],[-8.281093,-8.579097,7.380002,5.259457,0.493257,2.534679],[-9.508936,-6.742967,6.128007,-3.106303,-7.285428,-6.536041],[-3.173382,-2.109965,-5.628894,-6.269463,5.541411,-6.520539],[-2.351039,-7.113715,3.391165,-1.546845,-2.557099,-9.330319],[-9.638851,-4.269948,-2.228963,3.841174,-7.440084,-1.988889],[4.232447,1.186732,0.591268,-3.580504,-1.958982,2.999514],[-3.614922,2.281102,1.723860,2.161913,-9.951170,-2.970522],[-6.146572,-5.558791,3.427181,4.754764,4.224576,-3.906342],[-8.826033,9.304917,0.342303,-1.358454,-7.748717,5.338109],[8.603237,-4.611364,-2.552977,-3.255027,-7.760027,-4.995646],[6.497115,7.716134,-7.706225,-4.163681,-5.108098,1.256315]], dtype = "float64")#candidate|6346|(33, 6)|const|float64
var_6347 = relay.var("var_6347", dtype = "float64", shape = (1584,))#candidate|6347|(1584,)|var|float64
call_6345 = relay.TupleGetItem(func_5073_call(relay.reshape(const_6346.astype('float64'), [33, 6]), relay.reshape(var_6347.astype('float64'), [1584,]), ), 1)
call_6348 = relay.TupleGetItem(func_5077_call(relay.reshape(const_6346.astype('float64'), [33, 6]), relay.reshape(var_6347.astype('float64'), [1584,]), ), 1)
const_6352 = relay.const([0.657729,-2.205565,4.576883,-2.557581,3.548330,3.532118,8.091839,-1.573582,-6.512727,-6.174039,5.451315,-1.540620,3.270948,2.826470,8.841894,8.109244,9.282566,0.914230,3.470166,-1.272324,7.170583,2.917693,-5.138158,4.652172,8.553943,4.056500,6.401032,-0.225074,5.291163,9.760808,1.726304,4.185481,-0.747763,1.768259,-0.745788,-0.568620,9.590287,3.330863,3.158488,-6.844720,-0.060057,-1.011271,9.815847,-0.301510,-4.320053,6.755904,-9.173158,-1.711279,6.251917,-2.558333,-5.896000,-5.368979,-7.164728,3.717768,-1.113698,-2.381410,7.656071,-3.092328,-5.246470,-7.336477,-0.341665,-8.625920,-5.680264,-5.177045,-3.648042,-9.040347,5.877012,-2.030979,-6.953818,-5.373851,6.575103,2.016087,7.242452,9.109113,-1.216430,-7.993212,-2.485615,3.775107,0.428650,-0.643397,7.599019,-1.976248,0.234145,-4.159966,6.982618,4.788682,-7.480611,0.652564,-6.534093,4.477737,-1.578490,-3.746440,-8.388995,-5.846373,0.999266,6.284518,2.270727,6.558467,-7.043358,-0.787394,-4.156036,-9.581172,-0.024475,-0.364839,-6.797181,6.473969,3.096434,5.817728,2.332857,-2.514592,3.885896,2.101889,2.022337,5.938864,7.505613,5.401325,5.839059,-7.888881,-0.033366,6.159029,-5.233899,1.300568,-6.391822,2.691975,-5.245908,-4.357510,0.727268,-5.673989,-0.273506,-4.528019,4.290995,-7.306902,1.500010,-7.099509,2.953230,-9.727931,-7.402105,-2.698500,0.739580,6.236279,4.451961,5.926103,7.854517,8.362086,3.576439,6.941938,-8.211246,-8.339096,-2.989636,4.452300,-1.493774,2.139495,6.912083,0.417245,3.134777,8.031580,-1.937056,4.671805,-1.136900,6.252068,-8.920651,5.210130,-0.773487,-2.281929,-1.107501,1.483224,-4.382350,-9.987334,-8.341075,-0.188221,-5.250129,-8.505087,-6.750798,-6.463871,-6.551682,-3.177393,6.300926,8.774691,6.794793,-2.041188,0.148456,-1.076432,3.318086,-7.227865,-1.713264,9.064214,-2.974742,2.032259,-9.596052,6.363144,-2.216803,5.043359,5.544918,1.378193,5.323340,3.252119,5.191985,-9.255699,-1.128025,-6.496760,5.464821,7.586173,5.896641,-8.040234,-6.400724,0.066869,5.828100,-4.549598,6.437722,-8.258242,-1.052256,-8.054958,3.198763,-7.404462,3.556797,5.124092,-9.525218,-2.835718,2.706662,1.736975,-7.567572,-0.021137,-1.245079,8.853529,1.339174,-0.916100,0.863949,7.594026,0.779403,-7.737534,4.520067,1.180310,-7.114638,5.228826,-6.996473,2.239668,7.131592,-5.724730,0.252236,-9.246981,3.374592,-1.349514,3.739894,-9.163555,3.983397,3.140382,-5.035493,-9.666229,-9.397178,-4.562403,1.175560,9.051975,-5.635957,-6.903217,1.316532,-2.926567,0.203864,0.831343,-0.369661,0.162331,-0.533778,-7.828443,9.478345,9.679391,9.379424,-4.198467,-3.173437,9.236445,3.854133,-9.519231,-3.947464,-1.442830,3.620810,-8.427972,3.945097,4.605811,-7.201217,-6.132026,-9.291527,5.801083,9.932478,-6.537070,-8.193700,-6.877803,8.112539,-5.832393,6.391181,8.041837,0.874893,0.510822,8.301330,-7.201742,-3.882834,6.480122,0.932679,-2.661666,-1.834635,-8.902608,0.617834,9.377440,8.046390,-9.654305,-4.841714,8.663447,-7.171440,-5.632386,4.211112,4.043892,3.392931,-0.437710,-6.696661,9.904381,-3.283254,1.009266,4.616214,-8.255288,-6.601089,2.226036,9.861813,-2.782662,2.606732,5.363246,-0.302292,6.878562,-6.650410,-1.222245,-3.861457,4.704943,9.553127,-5.282774,8.959540,3.867001,-7.311036,-7.651567,3.071769,8.222018,1.138348,9.591468,3.865352,4.876140,-5.642533,-7.223719,-5.064047,1.449618,-9.332580,-1.816847,8.672009,-1.093317,-3.138871,3.601119,5.618325,3.809097,2.593114,-5.895156,3.089821,-9.948699,6.738533,-7.957522,1.882039,3.166775,-9.139664,7.187618,4.866003,9.168135,1.240482,3.320055,5.770368,8.327585,6.821801,9.804343,-9.337186,9.425384,9.382579,3.738990,0.152949,-4.636900,-7.256528,5.740426,2.696421,5.242372,8.671955,-6.068077,1.069202,-5.641968,4.181279,1.531898,6.695541,-0.289260,3.640281,8.410987,-1.109317,-9.465272,-5.360582,1.518878,-3.790795,-7.911811,0.311045,-1.747577,-8.859217,-6.827281,-6.511013,6.349088,-5.148151,-0.279813,7.736559,-0.908458,-6.745432,-0.659656,3.687119,-1.989617,9.763051,8.754150,2.605428,6.853933,-4.845921,-8.593520,-1.992721,9.108642,8.893983,-8.539687,7.380031,-6.963318,1.440062,-3.373273,-7.625003,-1.854158,8.320057,5.590726,7.430259,4.810248,-5.408300,-9.115150,1.807829,5.251623,-6.128134,-3.028161,-5.716825,6.743750,4.815662,-6.079880,-2.149446,9.790736,4.895567,1.556826,-3.345233,-9.507264,-1.082642,2.265148,-7.230749,-2.505628,-7.486397,2.939277,0.167071,-0.148583,-0.243980,2.575284,2.779016,7.329443,4.864890,4.421665,3.294426,-3.990137,-8.496998,1.767554,-1.170086,9.514409,-9.977598,5.751324,0.923597,6.152252,5.211276,6.567953,0.203254,1.085317,7.139857,-0.685738,-1.059960,-9.460978,-3.202653,-7.603294,3.943200,0.988421,-3.450911,9.509258,-3.033531,6.551293,4.873719,-6.881348,0.016432,2.085653,-0.908189,8.371986,-9.098849,-4.999540,-3.747259,8.680783,-3.607626,5.054486,-7.643727,6.948461,4.468787,-8.226885,7.773217,-2.072125,-9.160187,4.824199,3.989894,9.937962,-8.196836,2.076266,-8.180876,-8.203916,1.340983,9.015504,-2.577324,3.515885,-8.963356,6.831903,-0.537539,-2.623196,9.881548,-2.816667,0.312015,7.190803,1.035679,-9.900182,7.060706,-0.279184,-8.936703,-8.010735,-7.762961,8.356540,6.389063,-8.584640,-0.419427,-0.337881,-4.202997,-8.106025,1.763485,6.742591,-2.661116,-4.413050,-7.880301,8.525151,0.984342,-5.476724,1.603838,-3.981279,-9.552626,-3.372352,0.647587,-8.737312,5.296900,6.226855,-2.555837,8.524185,-6.222891,7.035046,1.069679,-3.993930,-2.004154,-6.705699,-0.758844,6.438106,-6.262450,5.620970,-3.678732,4.389037,-0.521565,-5.276784,-0.642378,-1.328912,-9.639863,9.721018,-4.561925,-2.416306,-1.692058,-9.414857,2.673464,6.453512,5.774420,3.719711,3.047311,-1.675910,-7.816657,-1.407774,-4.484548,4.283592,-7.444156,-4.463059,-8.589010,-6.562104,-4.061092,2.238683,-3.123588,9.893749,0.187265,4.341952,2.493060,3.862477,0.026108,-7.281042,-2.817578,-0.722534,6.136417,2.176938,0.515424,-3.905325,-0.704703,7.018925,8.429075,-2.101880,7.233756,2.771382,6.602769,-7.142874,-2.846001,6.770254,8.995207,-8.187949,-6.874185,-1.608234,3.024904,1.296870,1.852174,-1.278456,7.514993,5.510079,-7.242009,-8.880911,1.440297,-7.118680,8.033626,-1.225744,9.535977,5.230641,-2.253327,9.471374,8.750784,1.957204,4.416187,9.363728,1.813038,-8.823002,4.433553,8.664382,6.216463,-9.290736,8.768550,0.989797,5.061488,3.964386,4.685329,1.080381,3.281656,7.567022,-8.495791,-6.214730,6.627709,-2.249732,2.056090,-6.646821,8.009627,0.700424,6.043325,-3.590918,-7.140029,0.378058,-2.678168,-8.018915,9.282255,0.351730,-8.007350,9.573894,-7.772084,-5.844350,-0.960293,-8.932936,9.376219,-0.619654,7.051032,-1.274111,-0.602068,2.208073,-9.714753,4.023553,3.740953,-8.258829,-4.574276,8.332632,1.021286,-2.590767,-8.145614,6.601076,-1.889806,2.568906,-3.260467,3.981166,4.402944,-5.193860,-3.459657,4.584934,-0.523111,0.285656,-8.366422,3.292042,-9.964373,9.075256,-4.129834,8.400258,-5.320036,-0.316762,-8.558967,-4.545515,-6.101276,6.325478,-8.053741,-6.703017,-3.554754,7.037882,6.917908,-5.164145,-1.369620,-5.369419,6.935669,5.800484,-5.962758,-6.152667,-3.030822,-1.476206,3.008231,8.233382,7.612147,-5.223117,-5.764634,-6.418475,-1.270390,6.727250,-3.592003,-1.216530,5.953239,3.582114,4.081778,-4.309873,-0.197299,8.138063,0.970423,6.035199,-0.712877,-0.718713,7.117482,-6.650402,-7.178917,-6.858247,-8.452024,-8.777226,0.931632,8.269474,7.594288,-8.035388,5.938033,-0.773613,-9.864012,8.502951,5.882855,8.019180,-3.356903,2.820128,-2.843954,8.780358,-4.995597,-0.537691,6.493336,-2.056487,-0.366272,5.563172,-4.770685,-5.059435,4.767149,-2.681267,8.863643,-2.041922,0.305689,-5.566180,5.714984,-6.928341,9.841992,7.292590,0.854698,-0.374771,-4.355461,0.772256,0.220998,-1.706828,4.394718,7.632667,-0.464197,-7.994623,8.741649,6.617777,-8.406471,-5.938009,4.471385,-9.606894,-9.846401,-9.707427,-4.828242,4.348803,8.379464,2.989422,-2.854569,5.433053,-7.378846,3.731194,1.959123,-4.803124,-9.510591,3.489853,4.526748,-2.908732,-4.338948,-8.567150,-7.459804,-7.350059,6.310158,-6.553613,2.392830,5.316529,5.945139,0.012394,5.175942,-9.053436,3.722948,4.909982,-3.429299,-0.780673,-5.016064,5.882203,-5.743966,-0.434615,9.966410,-7.588483,5.464893,-8.468830,-0.625983,2.118132,-6.415275,7.609717,5.289210,-9.283270,9.103890,4.006890,9.450483,-7.265369,-6.839886,-4.890557,-5.653903,-4.451895,-1.881508,-8.862279,7.966509,-5.671963,-2.653383,6.638423,2.540699,9.237956,-6.334155,-0.436819,6.046823,1.204519,-2.576314,-8.638161,-4.344043,-6.094501,8.557695,1.146755,-7.241989,-5.194386,-8.628656,-5.933000,2.271642,-3.654527,-0.498794,-5.390839,8.340775,-6.175484,8.613902,-8.588327,9.241700,-5.915204,-5.038107,3.116855,7.908518,9.253119,2.077082,0.221104,9.347233,-6.885741,7.974737,2.935782,7.817192,-5.931120,-3.766711,-5.037096,4.221097,6.953428,5.029708,-1.289074,-9.088703,-7.519468,6.932241,3.420652,8.452586,5.653753,-8.586367,3.740826,-3.791924,-1.070189,5.094742,-3.666344,4.082181,-4.452551,6.910573,8.126150,-3.856322,8.591189,-6.297863,-3.726153,2.945409,-9.353433,-8.955697,9.003050,8.836591,-5.790966,-8.526783,5.027427,-6.521638,-4.719554,-4.328945,9.487689,7.036325,-1.621141,9.731513,9.166944,-5.162145,-7.379562,-1.131257,5.445609,2.482141,-2.589738,8.008616,0.052206,5.944284,6.648405,-7.949569,-6.904916,0.220009,0.504039,0.077937,2.990042,-8.176731,-9.174950,9.287466,-7.331898,0.884614,3.700974,-0.110661,-1.179191,-4.306290,9.353071,8.553561,0.845539,-2.472026,8.836394,4.702203,-7.475209,4.988099,-9.457590,-8.639897,5.779658,0.824563,-6.661744,-5.208569,6.348889,-8.489013,4.380664,-6.228542,5.324688,1.438378,-1.174738,5.504240,-4.912864,-4.313126,-1.455119,5.089181,-5.516262,-5.258804,-4.124385,-7.078108,6.676878,-1.259106,-7.703518,9.322347,6.250101,-6.355590,-4.168116,-5.350009,-6.048013,7.377233,-4.616019,1.595149,-7.952931,8.500213,-3.416822,-1.838536,6.296272,-8.852063,-4.107317,9.243071,-2.692997,9.237994,0.237839,1.212047,-3.533950,-3.066974,1.826204,-1.346368,9.220830,-3.211603,6.638414,-6.659737,1.183682,-0.853531,-7.797778,9.855540,4.141729,7.822092,6.202205,0.924376,-4.628215,-6.962378,8.239098,8.910313,-8.446355,-4.685517,-6.508601,-0.273504,5.571634,4.308504,-6.215298,-1.446827,-1.001754,1.913192,-5.607911,6.404599,-6.844852,-5.860146,-2.313341,9.318188,8.856505,-3.262929,-2.782244,4.878320,4.780344,6.031956,8.055930,-3.274588,-4.327189,8.156207,-5.186676,5.780868,-5.411318,-4.809801,2.176767,-0.991721,5.079875,-2.453241,9.061804,5.154491,2.467715,4.559476,-8.694380,-0.084983,2.754182,0.184309,-3.330663,-0.111636,-9.048335,-9.731978,-3.745016,-8.650685,4.364945,6.524827,-5.834506,-6.369518,-7.986052,-8.997721,9.169663,5.611111,8.107829,-0.751707,6.329815,-2.109859,1.367498,9.278371,0.186353,9.022893,-1.805121,-0.731625,9.489286,-6.158097,-8.563365,-1.213243,4.562041,-7.253229,-9.534569,8.778697,7.279337,6.500029,-8.760941,2.844555,-9.161641,-1.538596,0.779879,6.994095,6.040788,-9.532485,-1.456608,8.322160,-4.324472,-8.375889,-9.744472,-6.393815,-3.308913,-1.890080,-2.353899,-6.354754,-5.509982,-2.037967,6.201335,-9.350032,3.746609,-0.622625,9.743586,-3.551536,2.173252,-1.656734,-6.510442,-5.068882,-5.851218,3.532258,-7.439380,4.836768,-0.509727,-9.537636,7.087915,5.593425,-9.330153,1.879078,0.954990,6.297758,-1.399137,0.227307,2.228410,2.423144,-1.004940,-4.588744,8.278039,-4.005702,3.855285,2.672685,9.165444,-5.931353,5.524458,-7.567801,4.951610,8.251153,0.662158,-5.998127,-5.581297,4.062290,-2.677839,8.690930,7.207298,1.539081,9.977528,-6.883652,9.079996,-1.981450,-1.667592,-6.993263,-3.718840,8.299835,-4.513774,-4.096571,-4.470139,2.408171,-4.409468,-4.562425,-7.403354,-4.914568,-4.775991,6.839189,2.542145,-8.057303,-0.631938,1.628615,8.132869,-6.488407,-5.277372,-4.071958,-4.890286,6.760045,9.396386,8.422665,-7.418522,1.221678,-5.062004,-3.225268,-8.288109,8.378039,3.272922,4.370395,7.822876,-7.287479,9.140535,-5.758638,6.032690,-0.445283,7.455085,-7.763293,9.437117,5.604176,-1.818763,-9.507644,-2.489482,9.986317,-3.746293,-6.980723,9.130177,-7.394425,-8.014837,-6.171305,-2.052168,-3.238673,-2.514877,7.862421,-7.766926,9.054517,9.614625,8.283883,9.222407,0.500467,7.665569,-0.939007,4.067029,2.346247,1.290194,9.840685,-8.019798,-7.926172,-5.234129,1.609200,-8.698650,-6.304069,-5.737418,1.296931,-3.250632,3.631515,1.877203,-0.100372,-8.564808,-8.252288,-8.628320,-2.807332,7.562575,1.476346,-5.286625,-9.041768,-5.237822,-6.269240,-8.317257,-2.391946,1.693358,-6.625104,2.331465,5.869783,2.904311,-8.176353,6.235332,-4.968681,8.528456,-4.734903,-3.048481,-3.930627,7.215688,7.991240,-0.805775,4.675109,-4.927853,-7.937390,-0.699078,0.892818,9.782676,5.650908,-9.740955,6.493086,-2.145992,-1.064282,-8.383812,0.640892,1.514717,0.703159,-4.581366,0.340610,3.012132,0.572708,6.306507,1.298970,-5.173879,7.886149,-9.041903,-1.437344,2.264336,-5.989841,0.032463,4.699284,-8.231730,-3.545339,4.648088,4.835908,-7.502116,2.829270,-8.934089,-1.292613,5.353896,4.418025,2.740876,-4.875024,-6.986522,-4.876400,-1.927682,4.548910,0.027741,-9.234826,3.071317,8.846040,-2.508854,-1.753606,1.693414,2.385376,-0.045420,-6.827980,-9.755375,-1.729182,1.261514,-4.497616,8.271936,4.089653,2.616411,0.709337,0.791097,-8.488637,2.633262,-0.970501,-8.089921,-9.799747,4.494549,-0.041377,1.404910,-3.808256,2.506573,0.560232,-2.305354,6.003480,-9.792387,3.429443,9.138558,1.718521,-0.415140,5.284438,3.893208,7.105085,8.265852,-2.483625,2.657951,3.836332,9.494613,3.068662,8.516096,6.992282,4.237155,-3.057253,5.190585,-0.943837,5.471980,-5.681742,6.272759,8.303344,9.970996,5.874031,4.769217,5.503984,7.516293,-4.565588,-6.640203,-4.211346,-3.136894,-3.320078,-4.633821,0.600956,5.302464,-0.336374,-6.976492,5.574934,2.936727,-6.598755,6.332444,0.565385,-9.654203,-1.280505,-2.182968,-4.718156,1.763255,-7.921762,7.243609,9.891713,7.244797,6.421355,-7.156513,9.918547,-9.941801,-4.101180,9.713128,-8.188104,3.388895,-9.479517,-2.424216,3.779797,-0.645144,2.784205,0.919976,-5.377506,7.351126,-6.822123,-1.014964,0.180726,9.697681,-4.995543,-6.180110,-5.556697,3.149635,8.416929,-7.159759,3.313499,-4.502005,-8.135151,-8.519959,-2.203064,5.827779,6.513429,-4.175645,-9.608628,-6.281929,-6.473069,0.318434,-5.399860,-5.619526,-5.204781,-2.347265,8.504687,9.595107,9.639629,-5.994630,7.476232,-3.200207,6.451390,5.792860,4.632793,-8.609532,-1.106002,-5.249318,9.810693,-9.473233,6.384550,5.309316,8.845978,3.846508,-0.405244,-9.378001,8.733776,-6.994157,7.712665,-6.254222,6.039566,6.178947,-6.774889,1.233928,-3.710840,-8.046628,-9.590115,-4.203459,-9.892373,-5.852876,7.670081,-1.598795,-9.576826,2.550106,-5.179450,-7.000796,-7.418344,-7.441541,8.167765,-9.708089,5.022192,-2.511451,4.918581,-9.535058,-1.492306,-9.857847,8.696998,-3.689128,-5.867414,-3.076214,3.496621,-4.032897,-6.232277,-3.636158,-0.447752,4.386395,4.392915,-0.663597,-9.893574,-6.053968,0.551011,-0.392170,1.753072,-1.882350,-2.150632,9.266914,6.019283,0.353724,-2.578430,-2.388343,9.693487,-0.688329,3.552838,8.767020,9.183742,-2.730170,-3.181296,-5.730932,6.971233,1.708743,3.831770,4.260018,5.719004,-4.397782,-2.891018,-1.577433,-0.590198,3.115930,2.137652,2.897288,-0.556968,-7.485783,-4.588069,3.455076,6.250972,4.062760,4.315989,-5.428547,4.734915,-0.169075,7.357652,6.829417,1.941856,9.506245,3.511071,-8.620074,-1.387335,5.871940,1.164030,-9.761033], dtype = "float64")#candidate|6352|(1584,)|const|float64
bop_6353 = relay.floor_divide(var_6347.astype('float32'), relay.reshape(const_6352.astype('float32'), relay.shape_of(var_6347))) # shape=(1584,)
output = relay.Tuple([call_6307,call_6345,const_6346,bop_6353,])
output2 = relay.Tuple([call_6308,call_6348,const_6346,bop_6353,])
func_6359 = relay.Function([var_6347,], output)
mod['func_6359'] = func_6359
mod = relay.transform.InferType()(mod)
var_6360 = relay.var("var_6360", dtype = "float64", shape = (1584,))#candidate|6360|(1584,)|var|float64
output = func_6359(var_6360)
func_6361 = relay.Function([var_6360], output)
mutated_mod['func_6361'] = func_6361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5960_call = mod.get_global_var('func_5960')
func_5962_call = mutated_mod.get_global_var('func_5962')
call_6377 = relay.TupleGetItem(func_5960_call(), 1)
call_6378 = relay.TupleGetItem(func_5962_call(), 1)
output = call_6377
output2 = call_6378
func_6390 = relay.Function([], output)
mod['func_6390'] = func_6390
mod = relay.transform.InferType()(mod)
output = func_6390()
func_6391 = relay.Function([], output)
mutated_mod['func_6391'] = func_6391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4057_call = mod.get_global_var('func_4057')
func_4059_call = mutated_mod.get_global_var('func_4059')
call_6398 = func_4057_call()
call_6399 = func_4057_call()
uop_6417 = relay.sqrt(call_6398.astype('float64')) # shape=(5, 7, 4)
uop_6419 = relay.sqrt(call_6399.astype('float64')) # shape=(5, 7, 4)
uop_6426 = relay.erf(uop_6417.astype('float32')) # shape=(5, 7, 4)
uop_6428 = relay.erf(uop_6419.astype('float32')) # shape=(5, 7, 4)
bop_6429 = relay.floor_divide(call_6398.astype('float32'), relay.reshape(uop_6417.astype('float32'), relay.shape_of(call_6398))) # shape=(5, 7, 4)
bop_6432 = relay.floor_divide(call_6399.astype('float32'), relay.reshape(uop_6419.astype('float32'), relay.shape_of(call_6399))) # shape=(5, 7, 4)
func_2200_call = mod.get_global_var('func_2200')
func_2205_call = mutated_mod.get_global_var('func_2205')
const_6435 = relay.const([6.697895,6.409430,0.550978,2.263287,-8.632671,6.704242,2.067468,-8.855481,4.269539,8.914968,8.336013,-1.273761,4.315033,9.704739,-4.359205,9.136897,0.919339,8.750824,-0.135488,-0.151892,7.203560,-9.259614,-9.896143,-8.746936,-5.116272,-5.091916,-9.413375,6.656065,8.803425,3.114695,5.923376,-0.197846,7.547059,3.630088,-1.106689,-7.102562,3.768737,-2.243525,-2.287416,2.257342,1.557314,-3.793682,-9.052612,7.509758,-2.950270,-6.382953,1.517970,-3.495208,-1.732881,9.682556,-8.696172,8.279321,-9.803683,6.825146,-2.115730,-5.916834,-9.306619,2.136919,-7.379708,7.364336,2.263757,-0.991997,-1.231295,1.609345,-5.618484,5.090975,8.364822,-1.046866,-7.006888,-3.756522,-4.630944,-5.193607,6.544217,3.329763,4.597263,-6.376854,-7.354202,9.585470,-3.889675,-7.498509,5.732663,9.731366,-9.361937,5.812040,0.334338,9.140710,-8.898958,6.914907,8.540664,7.312856,8.922172,-6.221323,-3.781559,-6.354859,-1.780236,5.035078,-3.045856,-9.493493,-3.650443,4.402979,1.084283,1.681174,8.315854,9.609235,0.827078,5.325173,3.427176,0.607171,1.225997,-2.092518,-9.718994,-4.074165,-1.593936,0.062432,-1.423035,-0.459221,9.613437,4.349012,-3.827388,0.307057,6.582839,-3.865618,-8.535238,-6.787515,3.934342,-7.781621,-7.679288,-5.916960,4.564627,0.495744,6.535343,-8.974071,0.086530,8.810073,-0.066250,4.543489,1.050203,-7.801830,5.861466,4.980336,8.095279,-3.748100,-5.129935,-7.706760,-3.461034,6.449067,-2.291192,-0.963921,9.332057,1.482637,4.742911,0.111590,6.016416,-4.694026,-5.737617,7.694145,1.197733,4.104086,7.864293,-7.146897,1.014084,1.438762,7.442034,0.806003,6.252294,-7.838285,-6.160900,6.692744,-3.716306,-2.712847,6.513402,-8.032955,-9.447077,1.334814,-3.343819,5.286221,6.780878,4.486910,3.746140,-0.034600,8.973454,8.693927,-3.284023,1.632227,-4.380744,-1.683981,-8.149371,1.874433,-7.511775,-1.750980,-3.339949,7.303122,-7.834871,-3.331739,4.490201,-7.267482,5.867795,-8.848543,-0.030541,-2.596719,-6.423728,-6.400710,-6.117642,9.186913,-0.614787,8.991597,5.560826,0.998980,7.173925,8.996743,-4.267695,3.349575,8.832403,1.380591,-6.916066,1.600874,-7.106369,2.279275,2.052965,-8.594632,-3.442037,-4.664840,-2.388368,0.085248,6.148925,-9.294726,-5.745716,3.891486,-6.924604,4.438863,5.993561,9.255278,-2.964820,-2.933883,6.478398,-8.811464,-6.257930,2.680568,-1.732994,-4.124353,-6.495833,7.915789,-1.046061,-0.162430,2.466284,3.371620,-6.145269,8.811810,3.861828,-5.928978,-0.352792,-0.367671,5.474869,0.047027,-5.002081,9.450291,-6.994432,0.364416,-1.989369,8.188682,1.349794,-1.136600,6.500402,3.239796,2.751474,7.076185,-0.699778,-0.498845,-5.605427,7.204731,9.222195,4.019593,7.347492,-1.199470,-1.313366,4.466503,2.465800,-4.683939,8.798949,9.665560,9.120793,-6.271589,1.636240,-7.971699,-7.980140,-4.099380,-5.621327,-9.870761,2.782021,2.608957,-3.581924,3.196806,-1.790648,8.750847,9.649324,-5.301551,2.987205,-7.670454,4.337604,-2.296422,-2.746620,4.874939,-0.713638,-8.812266,0.702157,-8.369846,3.202671,1.661980,7.502100,2.274222,7.977083,5.066733,7.477049,5.913761,-9.204860,-0.031747,1.432832,-7.200532,4.835416,2.918746,-1.475337,2.102944,7.048659,-5.473265,3.718564,-3.482021,5.988622,0.312832,4.830682,-0.696676,5.817126,8.200257,-5.875831,-2.585001,-8.080314,-8.039190,8.245512,-6.300048,-9.037984,0.580730,2.431920,7.882619,-2.326982,1.487312,6.803100,8.946982,-3.232210,9.499413,-3.123659,6.618418,8.533944,-4.351576,3.704254,-9.340627,2.236165,1.020316,1.039868,5.499520,0.811693,8.629731,-3.024422,0.432367,0.512466,-9.566512,6.345716,1.845561,1.439239,1.969613,-7.197259,1.059351,-8.130866,-9.681884,1.353093,2.634042,-8.749717,1.267853,3.506465,-2.113564,-6.322886,4.106113,-5.315344,-5.758832,-9.183474,-6.782537,2.195021,-1.662740,-5.866035,8.210500,-8.413657,-9.798798,-2.138404,-3.803146,1.019383,-8.697649,0.272338,5.470513,-6.649883,0.714953,0.543605,-2.360104,3.117324,-9.526554,4.193376,3.265094,-4.373443,8.389137,-3.354861,8.936126,-1.294534,1.902939,0.191071,5.414202,-4.577794,-9.167034,-3.767599,8.614508,3.073411,9.992407,4.706318,-2.029151,-5.777297,-3.437124,1.741858,-6.675492,-4.441642,5.889367,-4.429881,4.106917,-6.571675,9.214503,-0.408805,-0.768363,-1.388061,5.941036,4.984531,-9.344304,9.658230,-0.479527,-3.273208,-7.825581,-3.964645,-4.810217,-8.088424,9.874794,0.334371,9.299399,4.965193,1.787196,2.663936,-4.599063,-7.966654,-5.249744,2.535873,4.454924,-7.867403,-3.183362,1.742244,5.564028,9.077228,-8.338848,2.295019,-3.646433,-7.334328,8.642503,-0.548279,-4.611967,-8.518862,-7.129529,0.612602,6.442376,7.868364,-5.705004,-7.797249,-8.348567,-1.234418,-1.532245,-1.703960,3.269760,-4.138622,-4.223601,-0.020350,1.073257,-3.169962,-5.508998,7.190094,8.252479,-8.962058,-1.524540,9.666792,-3.142016,5.343134,-8.356287,6.718266,-9.251410,-4.231699,3.042487,7.278530,8.406892,-5.693457,4.576431,9.114547,7.990508,-4.518664,-6.093956], dtype = "float32")#candidate|6435|(504,)|const|float32
var_6436 = relay.var("var_6436", dtype = "float32", shape = (10, 2))#candidate|6436|(10, 2)|var|float32
var_6437 = relay.var("var_6437", dtype = "float64", shape = (1584, 1))#candidate|6437|(1584, 1)|var|float64
const_6438 = relay.const([-3.513362,-2.196128,-0.903218,3.405256,-3.673647,3.842018,-2.923003,5.774764,-4.711637,-6.804467,-6.414363,7.552999,-5.485436,6.767727,8.976642,-3.095530,9.784143,-2.531831,1.701687,2.457733,-9.744352,-8.758029,-1.134505,-9.135565,6.782494,-7.970199,0.806128,-4.207902,0.292437,7.623988,-8.978465,-4.152234,4.533952,-6.785242,-4.119675,-2.367126,-0.584905,6.046612,-4.486465,-9.408092,2.909384,8.898177,-3.965522,-9.635382,8.894047,-4.602259,4.615755,1.883354,3.327093,9.328954,2.283860,1.536023,9.228129,-0.899628,-8.744839,5.099214,1.188994,-6.286533,6.784136,9.758692,-8.361236,-5.964405,0.471897,-8.739513,0.209762,-2.563745,-3.247969,1.154141,5.931466,7.916710,-4.194405,7.115732], dtype = "float32")#candidate|6438|(72,)|const|float32
call_6434 = relay.TupleGetItem(func_2200_call(relay.reshape(const_6435.astype('float32'), [6, 14, 6]), relay.reshape(var_6436.astype('float32'), [20,]), relay.reshape(var_6437.astype('float64'), [1584,]), relay.reshape(const_6438.astype('float32'), [72,]), ), 3)
call_6439 = relay.TupleGetItem(func_2205_call(relay.reshape(const_6435.astype('float32'), [6, 14, 6]), relay.reshape(var_6436.astype('float32'), [20,]), relay.reshape(var_6437.astype('float64'), [1584,]), relay.reshape(const_6438.astype('float32'), [72,]), ), 3)
output = relay.Tuple([uop_6426,bop_6429,call_6434,const_6435,var_6436,var_6437,const_6438,])
output2 = relay.Tuple([uop_6428,bop_6432,call_6439,const_6435,var_6436,var_6437,const_6438,])
func_6457 = relay.Function([var_6436,var_6437,], output)
mod['func_6457'] = func_6457
mod = relay.transform.InferType()(mod)
mutated_mod['func_6457'] = func_6457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6457_call = mutated_mod.get_global_var('func_6457')
var_6459 = relay.var("var_6459", dtype = "float32", shape = (10, 2))#candidate|6459|(10, 2)|var|float32
var_6460 = relay.var("var_6460", dtype = "float64", shape = (1584, 1))#candidate|6460|(1584, 1)|var|float64
call_6458 = func_6457_call(var_6459,var_6460,)
output = call_6458
func_6461 = relay.Function([var_6459,var_6460,], output)
mutated_mod['func_6461'] = func_6461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6195_call = mod.get_global_var('func_6195')
func_6196_call = mutated_mod.get_global_var('func_6196')
call_6528 = func_6195_call()
call_6529 = func_6195_call()
output = relay.Tuple([call_6528,])
output2 = relay.Tuple([call_6529,])
func_6538 = relay.Function([], output)
mod['func_6538'] = func_6538
mod = relay.transform.InferType()(mod)
output = func_6538()
func_6539 = relay.Function([], output)
mutated_mod['func_6539'] = func_6539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2375_call = mod.get_global_var('func_2375')
func_2376_call = mutated_mod.get_global_var('func_2376')
call_6543 = func_2375_call()
call_6544 = func_2375_call()
func_5670_call = mod.get_global_var('func_5670')
func_5671_call = mutated_mod.get_global_var('func_5671')
call_6549 = relay.TupleGetItem(func_5670_call(), 0)
call_6550 = relay.TupleGetItem(func_5671_call(), 0)
output = relay.Tuple([call_6543,call_6549,])
output2 = relay.Tuple([call_6544,call_6550,])
func_6558 = relay.Function([], output)
mod['func_6558'] = func_6558
mod = relay.transform.InferType()(mod)
output = func_6558()
func_6559 = relay.Function([], output)
mutated_mod['func_6559'] = func_6559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2375_call = mod.get_global_var('func_2375')
func_2376_call = mutated_mod.get_global_var('func_2376')
call_6609 = func_2375_call()
call_6610 = func_2375_call()
func_3717_call = mod.get_global_var('func_3717')
func_3722_call = mutated_mod.get_global_var('func_3722')
var_6623 = relay.var("var_6623", dtype = "uint64", shape = (120, 1))#candidate|6623|(120, 1)|var|uint64
const_6624 = relay.const([6,2,4,4,-5,-1,-7,8,2,6,3,-9,9,-5,2,3,-1,-9,-2,-9,7,4,4,10,5,7,3,4,-5,-1,10,7,8,-8,-1,7,-8,2,5,5,7,8,10,-2,-3,-4,-8,6,-8,-6,3,7,-8,-3,-10,-5,-4,6,4,-1,-2,2,7,-6,6,6,-9,1,1,-2,-6,-7,-9,4,-1,-2,9,3,-6,3,-2,1,1,1,-10,2,-10,-4,-1,2,-3,-7,10,8,-2,8,-9,7,3,-1,-1,-6,-3,-9,9,8,-6,4,-6,4,5,-4,-10,-2,9,3,6,8,-2,-4,8,4,-9,-2,3,5,-7,-10,-9,10,-6,7,-4,1,-2,8,-9,6,1,6,-5,9,1,-10,2,8,5,-9,-10,7,-7,2,7,5,7,9,-4,5,-8,6,5,9,9,2,-10,1,-4,-5,-2,-9,2,10,-6,1,-8,-5,1,6,2,7,-7,-9,-3,1,7,-2,-6,6,5,-10,-2,-9,-1,-3,3,4,10,8,-10,-7,-9,-5,-3,-8,8,-3,-5,3,7,8,6,9,-9,-9,6,-5,7,9,-1,-10,9,9,-6,-9,-8,5,10,2,-1,-8,7,3,5,5,2,-5,9,-4,-8,-1,1,2,10,-3,-5,1,4,7,9,-5,9,2], dtype = "int64")#candidate|6624|(252,)|const|int64
var_6625 = relay.var("var_6625", dtype = "int16", shape = ())#candidate|6625|()|var|int16
call_6622 = relay.TupleGetItem(func_3717_call(relay.reshape(var_6623.astype('uint64'), [8, 3, 5]), relay.reshape(var_6623.astype('uint64'), [8, 3, 5]), relay.reshape(const_6624.astype('int64'), [252,]), relay.reshape(var_6625.astype('int16'), []), ), 1)
call_6626 = relay.TupleGetItem(func_3722_call(relay.reshape(var_6623.astype('uint64'), [8, 3, 5]), relay.reshape(var_6623.astype('uint64'), [8, 3, 5]), relay.reshape(const_6624.astype('int64'), [252,]), relay.reshape(var_6625.astype('int16'), []), ), 1)
func_2527_call = mod.get_global_var('func_2527')
func_2530_call = mutated_mod.get_global_var('func_2530')
call_6634 = relay.TupleGetItem(func_2527_call(relay.reshape(const_6624.astype('int64'), [6, 42]), relay.reshape(var_6625.astype('int16'), []), ), 1)
call_6635 = relay.TupleGetItem(func_2530_call(relay.reshape(const_6624.astype('int64'), [6, 42]), relay.reshape(var_6625.astype('int16'), []), ), 1)
func_5544_call = mod.get_global_var('func_5544')
func_5545_call = mutated_mod.get_global_var('func_5545')
call_6640 = func_5544_call()
call_6641 = func_5544_call()
output = relay.Tuple([call_6609,call_6622,var_6623,const_6624,var_6625,call_6634,call_6640,])
output2 = relay.Tuple([call_6610,call_6626,var_6623,const_6624,var_6625,call_6635,call_6641,])
func_6649 = relay.Function([var_6623,var_6625,], output)
mod['func_6649'] = func_6649
mod = relay.transform.InferType()(mod)
mutated_mod['func_6649'] = func_6649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6649_call = mutated_mod.get_global_var('func_6649')
var_6651 = relay.var("var_6651", dtype = "uint64", shape = (120, 1))#candidate|6651|(120, 1)|var|uint64
var_6652 = relay.var("var_6652", dtype = "int16", shape = ())#candidate|6652|()|var|int16
call_6650 = func_6649_call(var_6651,var_6652,)
output = call_6650
func_6653 = relay.Function([var_6651,var_6652,], output)
mutated_mod['func_6653'] = func_6653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_6735 = func_1235_call()
call_6736 = func_1235_call()
output = relay.Tuple([call_6735,])
output2 = relay.Tuple([call_6736,])
func_6739 = relay.Function([], output)
mod['func_6739'] = func_6739
mod = relay.transform.InferType()(mod)
mutated_mod['func_6739'] = func_6739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6739_call = mutated_mod.get_global_var('func_6739')
call_6740 = func_6739_call()
output = call_6740
func_6741 = relay.Function([], output)
mutated_mod['func_6741'] = func_6741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3335_call = mod.get_global_var('func_3335')
func_3337_call = mutated_mod.get_global_var('func_3337')
call_6748 = func_3335_call()
call_6749 = func_3335_call()
func_1375_call = mod.get_global_var('func_1375')
func_1379_call = mutated_mod.get_global_var('func_1379')
var_6763 = relay.var("var_6763", dtype = "int64", shape = (252,))#candidate|6763|(252,)|var|int64
call_6762 = relay.TupleGetItem(func_1375_call(relay.reshape(var_6763.astype('int64'), [9, 2, 14]), relay.reshape(var_6763.astype('int64'), [9, 2, 14]), ), 1)
call_6764 = relay.TupleGetItem(func_1379_call(relay.reshape(var_6763.astype('int64'), [9, 2, 14]), relay.reshape(var_6763.astype('int64'), [9, 2, 14]), ), 1)
func_1331_call = mod.get_global_var('func_1331')
func_1332_call = mutated_mod.get_global_var('func_1332')
call_6768 = func_1331_call()
call_6769 = func_1331_call()
output = relay.Tuple([call_6748,call_6762,var_6763,call_6768,])
output2 = relay.Tuple([call_6749,call_6764,var_6763,call_6769,])
func_6780 = relay.Function([var_6763,], output)
mod['func_6780'] = func_6780
mod = relay.transform.InferType()(mod)
mutated_mod['func_6780'] = func_6780
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6781 = relay.var("var_6781", dtype = "int64", shape = (252,))#candidate|6781|(252,)|var|int64
func_6780_call = mutated_mod.get_global_var('func_6780')
call_6782 = func_6780_call(var_6781)
output = call_6782
func_6783 = relay.Function([var_6781], output)
mutated_mod['func_6783'] = func_6783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5347_call = mod.get_global_var('func_5347')
func_5348_call = mutated_mod.get_global_var('func_5348')
call_6808 = relay.TupleGetItem(func_5347_call(), 0)
call_6809 = relay.TupleGetItem(func_5348_call(), 0)
func_2089_call = mod.get_global_var('func_2089')
func_2093_call = mutated_mod.get_global_var('func_2093')
var_6817 = relay.var("var_6817", dtype = "bool", shape = (600,))#candidate|6817|(600,)|var|bool
call_6816 = relay.TupleGetItem(func_2089_call(relay.reshape(var_6817.astype('bool'), [15, 10, 4]), relay.reshape(var_6817.astype('bool'), [15, 10, 4]), ), 0)
call_6818 = relay.TupleGetItem(func_2093_call(relay.reshape(var_6817.astype('bool'), [15, 10, 4]), relay.reshape(var_6817.astype('bool'), [15, 10, 4]), ), 0)
output = relay.Tuple([call_6808,call_6816,var_6817,])
output2 = relay.Tuple([call_6809,call_6818,var_6817,])
func_6835 = relay.Function([var_6817,], output)
mod['func_6835'] = func_6835
mod = relay.transform.InferType()(mod)
mutated_mod['func_6835'] = func_6835
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6836 = relay.var("var_6836", dtype = "bool", shape = (600,))#candidate|6836|(600,)|var|bool
func_6835_call = mutated_mod.get_global_var('func_6835')
call_6837 = func_6835_call(var_6836)
output = call_6837
func_6838 = relay.Function([var_6836], output)
mutated_mod['func_6838'] = func_6838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1727_call = mod.get_global_var('func_1727')
func_1728_call = mutated_mod.get_global_var('func_1728')
call_6865 = relay.TupleGetItem(func_1727_call(), 1)
call_6866 = relay.TupleGetItem(func_1728_call(), 1)
func_6538_call = mod.get_global_var('func_6538')
func_6539_call = mutated_mod.get_global_var('func_6539')
call_6869 = relay.TupleGetItem(func_6538_call(), 0)
call_6870 = relay.TupleGetItem(func_6539_call(), 0)
uop_6875 = relay.log10(call_6865.astype('float32')) # shape=(1584,)
uop_6877 = relay.log10(call_6866.astype('float32')) # shape=(1584,)
output = relay.Tuple([call_6869,uop_6875,])
output2 = relay.Tuple([call_6870,uop_6877,])
func_6891 = relay.Function([], output)
mod['func_6891'] = func_6891
mod = relay.transform.InferType()(mod)
mutated_mod['func_6891'] = func_6891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6891_call = mutated_mod.get_global_var('func_6891')
call_6892 = func_6891_call()
output = call_6892
func_6893 = relay.Function([], output)
mutated_mod['func_6893'] = func_6893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6183_call = mod.get_global_var('func_6183')
func_6185_call = mutated_mod.get_global_var('func_6185')
call_6924 = relay.TupleGetItem(func_6183_call(), 0)
call_6925 = relay.TupleGetItem(func_6185_call(), 0)
uop_6938 = relay.cosh(call_6924.astype('float64')) # shape=(5, 1, 4)
uop_6940 = relay.cosh(call_6925.astype('float64')) # shape=(5, 1, 4)
bop_6949 = relay.bitwise_xor(uop_6938.astype('int32'), relay.reshape(call_6924.astype('int32'), relay.shape_of(uop_6938))) # shape=(5, 1, 4)
bop_6952 = relay.bitwise_xor(uop_6940.astype('int32'), relay.reshape(call_6925.astype('int32'), relay.shape_of(uop_6940))) # shape=(5, 1, 4)
output = bop_6949
output2 = bop_6952
func_6960 = relay.Function([], output)
mod['func_6960'] = func_6960
mod = relay.transform.InferType()(mod)
mutated_mod['func_6960'] = func_6960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6960_call = mutated_mod.get_global_var('func_6960')
call_6961 = func_6960_call()
output = call_6961
func_6962 = relay.Function([], output)
mutated_mod['func_6962'] = func_6962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6739_call = mod.get_global_var('func_6739')
func_6741_call = mutated_mod.get_global_var('func_6741')
call_6965 = relay.TupleGetItem(func_6739_call(), 0)
call_6966 = relay.TupleGetItem(func_6741_call(), 0)
output = relay.Tuple([call_6965,])
output2 = relay.Tuple([call_6966,])
func_6967 = relay.Function([], output)
mod['func_6967'] = func_6967
mod = relay.transform.InferType()(mod)
output = func_6967()
func_6968 = relay.Function([], output)
mutated_mod['func_6968'] = func_6968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1727_call = mod.get_global_var('func_1727')
func_1728_call = mutated_mod.get_global_var('func_1728')
call_6981 = relay.TupleGetItem(func_1727_call(), 1)
call_6982 = relay.TupleGetItem(func_1728_call(), 1)
var_6985 = relay.var("var_6985", dtype = "float64", shape = (1584,))#candidate|6985|(1584,)|var|float64
bop_6986 = relay.less(call_6981.astype('bool'), relay.reshape(var_6985.astype('bool'), relay.shape_of(call_6981))) # shape=(1584,)
bop_6989 = relay.less(call_6982.astype('bool'), relay.reshape(var_6985.astype('bool'), relay.shape_of(call_6982))) # shape=(1584,)
uop_6991 = relay.log2(bop_6986.astype('float32')) # shape=(1584,)
uop_6993 = relay.log2(bop_6989.astype('float32')) # shape=(1584,)
func_2557_call = mod.get_global_var('func_2557')
func_2559_call = mutated_mod.get_global_var('func_2559')
call_7003 = func_2557_call()
call_7004 = func_2557_call()
func_4416_call = mod.get_global_var('func_4416')
func_4418_call = mutated_mod.get_global_var('func_4418')
call_7009 = relay.TupleGetItem(func_4416_call(), 0)
call_7010 = relay.TupleGetItem(func_4418_call(), 0)
bop_7013 = relay.less_equal(uop_6991.astype('bool'), relay.reshape(bop_6986.astype('bool'), relay.shape_of(uop_6991))) # shape=(1584,)
bop_7016 = relay.less_equal(uop_6993.astype('bool'), relay.reshape(bop_6989.astype('bool'), relay.shape_of(uop_6993))) # shape=(1584,)
bop_7025 = relay.maximum(bop_7013.astype('int64'), relay.reshape(var_6985.astype('int64'), relay.shape_of(bop_7013))) # shape=(1584,)
bop_7028 = relay.maximum(bop_7016.astype('int64'), relay.reshape(var_6985.astype('int64'), relay.shape_of(bop_7016))) # shape=(1584,)
output = relay.Tuple([call_7003,call_7009,bop_7025,])
output2 = relay.Tuple([call_7004,call_7010,bop_7028,])
func_7035 = relay.Function([var_6985,], output)
mod['func_7035'] = func_7035
mod = relay.transform.InferType()(mod)
var_7036 = relay.var("var_7036", dtype = "float64", shape = (1584,))#candidate|7036|(1584,)|var|float64
output = func_7035(var_7036)
func_7037 = relay.Function([var_7036], output)
mutated_mod['func_7037'] = func_7037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6960_call = mod.get_global_var('func_6960')
func_6962_call = mutated_mod.get_global_var('func_6962')
call_7095 = func_6960_call()
call_7096 = func_6960_call()
const_7110 = relay.const([[[3,3,4,5],[6,-4,7,-2],[-6,-2,1,-1]],[[6,-8,8,10],[5,-1,-7,-2],[-2,-4,4,1]],[[-2,-7,10,-7],[5,-3,3,2],[7,9,-2,10]],[[7,4,-9,3],[9,-4,7,7],[-7,5,-6,-1]],[[4,8,1,1],[-2,-1,-1,2],[-4,1,8,-5]]], dtype = "int32")#candidate|7110|(5, 3, 4)|const|int32
bop_7111 = relay.subtract(call_7095.astype('uint32'), const_7110.astype('uint32')) # shape=(5, 3, 4)
bop_7114 = relay.subtract(call_7096.astype('uint32'), const_7110.astype('uint32')) # shape=(5, 3, 4)
output = bop_7111
output2 = bop_7114
func_7121 = relay.Function([], output)
mod['func_7121'] = func_7121
mod = relay.transform.InferType()(mod)
mutated_mod['func_7121'] = func_7121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7121_call = mutated_mod.get_global_var('func_7121')
call_7122 = func_7121_call()
output = call_7122
func_7123 = relay.Function([], output)
mutated_mod['func_7123'] = func_7123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6538_call = mod.get_global_var('func_6538')
func_6539_call = mutated_mod.get_global_var('func_6539')
call_7133 = relay.TupleGetItem(func_6538_call(), 0)
call_7134 = relay.TupleGetItem(func_6539_call(), 0)
output = call_7133
output2 = call_7134
func_7136 = relay.Function([], output)
mod['func_7136'] = func_7136
mod = relay.transform.InferType()(mod)
output = func_7136()
func_7137 = relay.Function([], output)
mutated_mod['func_7137'] = func_7137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6195_call = mod.get_global_var('func_6195')
func_6196_call = mutated_mod.get_global_var('func_6196')
call_7237 = func_6195_call()
call_7238 = func_6195_call()
uop_7253 = relay.log(call_7237.astype('float32')) # shape=(15, 10, 4)
uop_7255 = relay.log(call_7238.astype('float32')) # shape=(15, 10, 4)
output = relay.Tuple([uop_7253,])
output2 = relay.Tuple([uop_7255,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_4030(%var_3953: Tensor[(630), int32], %var_3980: Tensor[(1320), float32], %var_3981: Tensor[(1176), float32]) -> (Tensor[(5, 1, 9), float32], Tensor[(14, 9, 5), int32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(1, 375), float64], Tensor[(1, 375), float64], Tensor[(7, 8, 9), int16], Tensor[(5, 1, 9), float32]) {
  %0 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
  %1 = cast(%var_3953, dtype="int32") /* ty=Tensor[(630), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %3 = reshape(%1, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), int32] */;
  %4 = reshape(%2, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %5 = @func_2284(%3, %4) /* ty=(Tensor[(14, 9, 5), int32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
  %6 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
  %7 = cast(%var_3980, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %8 = cast(%var_3981, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 375), float64] */, dtype="float64") /* ty=Tensor[(1, 375), float64] */;
  %10 = reshape(%7, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
  %11 = reshape(%8, newshape=[588, 2]) /* ty=Tensor[(588, 2), float32] */;
  %12 = reshape(%9, newshape=[1, 375]) /* ty=Tensor[(1, 375), float64] */;
  %13 = @func_1165(%10, %11, %12) /* ty=(Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) */;
  %14 = cast(%var_3980, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %15 = cast(%var_3981, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 375), float64] */, dtype="float64") /* ty=Tensor[(1, 375), float64] */;
  %17 = reshape(%14, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
  %18 = reshape(%15, newshape=[588, 2]) /* ty=Tensor[(588, 2), float32] */;
  %19 = reshape(%16, newshape=[1, 375]) /* ty=Tensor[(1, 375), float64] */;
  %20 = @func_1165(%17, %18, %19) /* ty=(Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) */;
  %21 = @func_3834() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(504), int16]) */;
  %22 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
  %23 = %0.1;
  %24 = %5.0;
  %25 = %6.1;
  %26 = %13.3;
  %27 = %20.4;
  %28 = %21.1;
  %29 = %22.2;
  (%23, %24, %var_3953, meta[relay.Constant][0] /* ty=Tensor[(96), float32] */, %25, %26, %var_3980, %var_3981, meta[relay.Constant][1] /* ty=Tensor[(1, 375), float64] */, %27, %28, %29)
}

def @func_5260(%var_5235: Tensor[(1320), float32], %var_5237: Tensor[(125, 3), float64], %var_5242: Tensor[(135), uint32]) -> (Tensor[(5, 2, 9), bool], Tensor[(5, 2, 9), bool], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(125, 3), float64], Tensor[(9, 3, 5), uint32], Tensor[(135), uint32], Tensor[(5, 2, 9), bool], Tensor[(7, 14, 9), float64], Tensor[(294, 3), float64]) {
  %30 = cast(%var_5235, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %31 = cast(meta[relay.Constant][2] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %32 = cast(%var_5237, dtype="float64") /* ty=Tensor[(125, 3), float64] */;
  %33 = reshape(%30, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
  %34 = reshape(%31, newshape=[588, 2]) /* ty=Tensor[(588, 2), float32] */;
  %35 = reshape(%32, newshape=[1, 375]) /* ty=Tensor[(1, 375), float64] */;
  %36 = @func_1165(%33, %34, %35) /* ty=(Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) */;
  %37 = cast(%var_5242, dtype="uint32") /* ty=Tensor[(135), uint32] */;
  %38 = cast(%var_5242, dtype="uint32") /* ty=Tensor[(135), uint32] */;
  %39 = reshape(%37, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), uint32] */;
  %40 = reshape(%38, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), uint32] */;
  %41 = cast(meta[relay.Constant][3] /* ty=Tensor[(294, 3), float64] */, dtype="float64") /* ty=Tensor[(294, 3), float64] */;
  %42 = reshape(%41, newshape=[7, 14, 9]) /* ty=Tensor[(7, 14, 9), float64] */;
  %43 = @func_1916(%42) /* ty=(Tensor[(7, 14, 9), float64], Tensor[(7, 14, 9), float64]) */;
  %44 = @func_4312() /* ty=Tensor[(5, 2, 9), bool] */;
  %45 = @func_4312() /* ty=Tensor[(5, 2, 9), bool] */;
  %46 = %36.3;
  %47 = @func_1078(%39, %40) /* ty=Tensor[(9, 3, 5), uint32] */;
  %48 = @func_4312() /* ty=Tensor[(5, 2, 9), bool] */;
  %49 = %43.0;
  (%44, %45, %46, %var_5235, meta[relay.Constant][2] /* ty=Tensor[(1176), float32] */, %var_5237, %47, %var_5242, %48, %49, meta[relay.Constant][3] /* ty=Tensor[(294, 3), float64] */)
}

def @func_6186(%var_6164: Tensor[(3, 7, 7), float64], %var_6172: Tensor[(900), bool], %var_6174: Tensor[(2, 588), float32], %var_6175: Tensor[(630), int32]) -> (Tensor[(5, 1, 9), float32], Tensor[(900), bool], Tensor[(1320), float32], Tensor[(2, 588), float32], Tensor[(630), int32], Tensor[(2, 144), float64], Tensor[(3, 7, 7), float32]) {
  %50 = cast(%var_6172, dtype="bool") /* ty=Tensor[(900), bool] */;
  %51 = cast(meta[relay.Constant][4] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %52 = cast(%var_6174, dtype="float32") /* ty=Tensor[(2, 588), float32] */;
  %53 = cast(%var_6172, dtype="bool") /* ty=Tensor[(900), bool] */;
  %54 = cast(%var_6175, dtype="int32") /* ty=Tensor[(630), int32] */;
  %55 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 144), float64] */, dtype="float64") /* ty=Tensor[(2, 144), float64] */;
  %56 = cast(%var_6172, dtype="float64") /* ty=Tensor[(900), float64] */;
  %57 = reshape(%50, newshape=[3, 300]) /* ty=Tensor[(3, 300), bool] */;
  %58 = reshape(%51, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %59 = reshape(%52, newshape=[84, 14]) /* ty=Tensor[(84, 14), float32] */;
  %60 = reshape(%53, newshape=[3, 300]) /* ty=Tensor[(3, 300), bool] */;
  %61 = reshape(%54, newshape=[5, 126]) /* ty=Tensor[(5, 126), int32] */;
  %62 = reshape(%55, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %63 = reshape(%56, newshape=[3, 300]) /* ty=Tensor[(3, 300), float64] */;
  %64 = @func_5498(%57, %58, %59, %60, %61, %62, %63) /* ty=(Tensor[(1320), float32], Tensor[(84, 14), float32], Tensor[(5, 375, 9), bool], Tensor[(?, 375), bool], Tensor[(5, 1, 9), float32], Tensor[(5, 126), int32], Tensor[(12, 8, 3), float32], Tensor[(288), float64], Tensor[(3, 300), int16]) */;
  %65 = cast(%var_6164, dtype="float64") /* ty=Tensor[(3, 7, 7), float64] */;
  %66 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(3, 7, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 7, 7), float64] */, dtype="float64") /* ty=Tensor[(3, 7, 7), float64] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %69 = power(%67, %68) /* ty=Tensor[(3, 7, 7), float64] */;
  %70 = cast(%69, dtype="float32") /* ty=Tensor[(3, 7, 7), float32] */;
  %71 = %64.4;
  %72 = atan(%70) /* ty=Tensor[(3, 7, 7), float32] */;
  (%71, %var_6172, meta[relay.Constant][4] /* ty=Tensor[(1320), float32] */, %var_6174, %var_6175, meta[relay.Constant][5] /* ty=Tensor[(2, 144), float64] */, %72)
}

def @func_4218(%var_4137: Tensor[(5, 14, 9), float32]) -> (Tensor[(5, 14, 9), bool], Tensor[(3, 13, 9), float32], Tensor[(1176), float32]) {
  %73 = @func_4105() /* ty=(Tensor[(5, 1, 9), float32],) */;
  %74 = %73.0;
  %75 = cast(%74, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
  %76 = erf(%75) /* ty=Tensor[(5, 1, 9), float32] */;
  %77 = cast(%74, dtype="int16") /* ty=Tensor[(5, 1, 9), int16] */;
  %78 = cast(%var_4137, dtype="int16") /* ty=Tensor[(5, 14, 9), int16] */;
  %79 = maximum(%77, %78) /* ty=Tensor[(5, 14, 9), int16] */;
  %80 = cast(%76, dtype="bool") /* ty=Tensor[(5, 1, 9), bool] */;
  %81 = cast(%79, dtype="bool") /* ty=Tensor[(5, 14, 9), bool] */;
  %82 = cast(meta[relay.Constant][7] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %83 = reshape(%82, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float32] */;
  %84 = @func_145(%83) /* ty=(Tensor[(12, 7, 14), float32], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(3, 13, 9), float32]) */;
  %85 = logical_or(%80, %81) /* ty=Tensor[(5, 14, 9), bool] */;
  %86 = %84.1;
  (%85, %86, meta[relay.Constant][7] /* ty=Tensor[(1176), float32] */)
}

def @main(%var_7485: Tensor[(14, 13, 3), uint64], %var_7486: Tensor[(14, 13, 3), uint64]) -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) {
  %87 = cast(%var_7486, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %88 = shape_of(%var_7485, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%var_7485, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %91 = cast(%var_7486, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %92 = greater_equal(%89, %90) /* ty=Tensor[(14, 13, 3), bool] */;
  %93 = rsqrt(%91) /* ty=Tensor[(14, 13, 3), float64] */;
  (%92, %93)
}

def @func_58(%var_45: Tensor[(13, 7, 16), float64], %var_53: Tensor[(3, 117), float32]) -> (Tensor[(13, 7, 16), float64], Tensor[(3, 13, 9), float32], Tensor[(3, 117), float32]) {
  %94 = cast(%var_45, dtype="float64") /* ty=Tensor[(13, 7, 16), float64] */;
  %95 = cast(%var_53, dtype="float32") /* ty=Tensor[(3, 117), float32] */;
  %96 = reshape(%95, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float32] */;
  %97 = @func_38(%96) /* ty=(Tensor[(3, 13, 9), float32],) */;
  %98 = asin(%94) /* ty=Tensor[(13, 7, 16), float64] */;
  %99 = %97.0;
  (%98, %99, %var_53)
}

def @func_6297(%var_6257: Tensor[(640), float64]) -> (Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(640), float64], Tensor[(?, 1404), float32]) {
  %100 = cast(%var_6257, dtype="float64") /* ty=Tensor[(640), float64] */;
  %101 = reshape(%100, newshape=[4, 10, 16]) /* ty=Tensor[(4, 10, 16), float64] */;
  %102 = @func_4888(%101) /* ty=(Tensor[(4, 10, 16), float64], Tensor[(5, 1, 9), float32]) */;
  %103 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 1404), float64] */, dtype="float64") /* ty=Tensor[(1, 1404), float64] */;
  %104 = reshape(%103, newshape=[12, 9, 13]) /* ty=Tensor[(12, 9, 13), float64] */;
  %105 = @func_5800(%104) /* ty=Tensor[(12, 9, 13), float64] */;
  %106 = cast(%105, dtype="float32") /* ty=Tensor[(12, 9, 13), float32] */;
  %107 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(1, 1404), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %108 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 1404), float64] */, dtype="float32") /* ty=Tensor[(1, 1404), float32] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %110 = @func_3868() /* ty=Tensor[(5, 1, 9), float32] */;
  %111 = %102.1;
  %112 = divide(%108, %109) /* ty=Tensor[(?, 1404), float32] */;
  (%110, %111, %var_6257, %112)
}

def @func_4275() -> Tensor[(5, 1, 9), float32] {
  %113 = @func_3834() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(504), int16]) */;
  %114 = %113.0;
  %115 = cast(%114, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
  acos(%115) /* ty=Tensor[(5, 1, 9), float32] */
}

def @func_6203() -> Tensor[(5, 2, 9), bool] {
  @func_4312() /* ty=Tensor[(5, 2, 9), bool] */
}

def @func_5828() -> (Tensor[(5, 1, 9), float32],) {
  %116 = @func_4286() /* ty=Tensor[(5, 1, 9), float32] */;
  (%116,)
}

def @func_1524(%var_1492: Tensor[(12, 42), int16], %var_1496: Tensor[(1456), float64]) -> (Tensor[(2, 16, 1), float64], Tensor[(7, 8, 9), int16], Tensor[(12, 42), int16], Tensor[(3, 117), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(14, 6, 11), float64], Tensor[(924), float64], Tensor[(288), float64], Tensor[(2, 16, 1), float64]) {
  %117 = cast(-7.31059f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %118 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 16, 1), float64] */, dtype="float64") /* ty=Tensor[(2, 16, 1), float64] */;
  %119 = cast(%var_1492, dtype="int16") /* ty=Tensor[(12, 42), int16] */;
  %120 = cast(%var_1492, dtype="int16") /* ty=Tensor[(12, 42), int16] */;
  %121 = reshape(%119, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), int16] */;
  %122 = reshape(%120, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), int16] */;
  %123 = @func_997(%121, %122) /* ty=(Tensor[(7, 8, 9), int16],) */;
  %124 = cast(%var_1496, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %125 = cast(meta[relay.Constant][10] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
  %126 = reshape(%124, newshape=[13, 7, 16]) /* ty=Tensor[(13, 7, 16), float64] */;
  %127 = reshape(%125, newshape=[3, 117]) /* ty=Tensor[(3, 117), float32] */;
  %128 = @func_58(%126, %127) /* ty=(Tensor[(13, 7, 16), float64], Tensor[(3, 13, 9), float32], Tensor[(3, 117), float32]) */;
  %129 = cast(meta[relay.Constant][11] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %130 = cast(meta[relay.Constant][12] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %131 = reshape(%129, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), float64] */;
  %132 = reshape(%130, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %133 = @func_1035(%131, %132) /* ty=(Tensor[(14, 6, 11), float64], Tensor[(2, 8, 6), float32], Tensor[(288), float64]) */;
  %134 = cast(-7.31059f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %135 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 16, 1), float64] */, dtype="bool") /* ty=Tensor[(2, 16, 1), bool] */;
  %136 = greater_equal(%134, %135) /* ty=Tensor[(2, 16, 1), bool] */;
  %137 = cast(%136, dtype="float32") /* ty=Tensor[(2, 16, 1), float32] */;
  %138 = log2(%137) /* ty=Tensor[(2, 16, 1), float32] */;
  %139 = cast(%138, dtype="float64") /* ty=Tensor[(2, 16, 1), float64] */;
  %140 = floor_divide(%117, %118) /* ty=Tensor[(2, 16, 1), float64] */;
  %141 = %123.0;
  %142 = %128.2;
  %143 = %133.0;
  %144 = exp(%139) /* ty=Tensor[(2, 16, 1), float64] */;
  (%140, %141, %var_1492, %142, %var_1496, meta[relay.Constant][10] /* ty=Tensor[(351), float32] */, %143, meta[relay.Constant][11] /* ty=Tensor[(924), float64] */, meta[relay.Constant][12] /* ty=Tensor[(288), float64] */, %144)
}

def @func_6996(%var_6981: Tensor[(5, 12, 9), float32]) -> Tensor[(5, 12, 9), float64] {
  %145 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
  %146 = %145.0;
  %147 = cast(%146, dtype="float64") /* ty=Tensor[(5, 1, 9), float64] */;
  %148 = cast(%var_6981, dtype="float64") /* ty=Tensor[(5, 12, 9), float64] */;
  power(%147, %148) /* ty=Tensor[(5, 12, 9), float64] */
}

def @func_5314(%var_5276: Tensor[(9, 13, 7), float32], %var_5294: Tensor[(375), float64]) -> (Tensor[(135), uint32], Tensor[(60, 22), float32], Tensor[(375), float64], Tensor[(135), uint32], Tensor[(9, 13, 7), bool]) {
  %149 = cast(meta[relay.Constant][13] /* ty=Tensor[(60, 22), float32] */, dtype="float32") /* ty=Tensor[(60, 22), float32] */;
  %150 = cast(%var_5294, dtype="float64") /* ty=Tensor[(375), float64] */;
  %151 = cast(meta[relay.Constant][14] /* ty=Tensor[(135), uint32] */, dtype="uint32") /* ty=Tensor[(135), uint32] */;
  %152 = reshape(%149, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %153 = reshape(%150, newshape=[125, 3]) /* ty=Tensor[(125, 3), float64] */;
  %154 = reshape(%151, newshape=[135]) /* ty=Tensor[(135), uint32] */;
  %155 = @func_5260(%152, %153, %154) /* ty=(Tensor[(5, 2, 9), bool], Tensor[(5, 2, 9), bool], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(125, 3), float64], Tensor[(9, 3, 5), uint32], Tensor[(135), uint32], Tensor[(5, 2, 9), bool], Tensor[(7, 14, 9), float64], Tensor[(294, 3), float64]) */;
  %156 = cast(%var_5276, dtype="float32") /* ty=Tensor[(9, 13, 7), float32] */;
  %157 = sinh(%156) /* ty=Tensor[(9, 13, 7), float32] */;
  %158 = cast(%157, dtype="float64") /* ty=Tensor[(9, 13, 7), float64] */;
  %159 = atan(%158) /* ty=Tensor[(9, 13, 7), float64] */;
  %160 = cast(%157, dtype="float32") /* ty=Tensor[(9, 13, 7), float32] */;
  %161 = shape_of(%var_5276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %162 = cast(%var_5276, dtype="float32") /* ty=Tensor[(9, 13, 7), float32] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %164 = mod(%162, %163) /* ty=Tensor[(9, 13, 7), float32] */;
  %165 = cast(%164, dtype="bool") /* ty=Tensor[(9, 13, 7), bool] */;
  %166 = shape_of(%159, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%159, dtype="bool") /* ty=Tensor[(9, 13, 7), bool] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %169 = %155.7;
  %170 = greater_equal(%167, %168) /* ty=Tensor[(9, 13, 7), bool] */;
  (%169, meta[relay.Constant][13] /* ty=Tensor[(60, 22), float32] */, %var_5294, meta[relay.Constant][14] /* ty=Tensor[(135), uint32] */, %170)
}

def @func_2284(%var_2253: Tensor[(14, 9, 5), int32], %var_2273: Tensor[(96), float32]) -> (Tensor[(14, 9, 5), int32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) {
  %171 = cast(meta[relay.Constant][15] /* ty=Tensor[(14, 9, 5), int32] */, dtype="int32") /* ty=Tensor[(14, 9, 5), int32] */;
  %172 = shape_of(%var_2253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%var_2253, dtype="int32") /* ty=Tensor[(14, 9, 5), int32] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %175 = cast(%var_2273, dtype="float32") /* ty=Tensor[(96), float32] */;
  %176 = reshape(%175, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
  %177 = minimum(%173, %174) /* ty=Tensor[(14, 9, 5), int32] */;
  %178 = @func_210(%176) /* ty=Tensor[(2, 8, 6), float32] */;
  (%177, %178, %var_2273)
}

def @func_4452(%var_4396: Tensor[(1176), float32]) -> (Tensor[(5, 2, 9), bool], Tensor[(3, 13, 9), float32], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(96), float32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(14, 9, 5), int32], Tensor[(375), float64]) {
  %179 = cast(meta[relay.Constant][16] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %180 = cast(%var_4396, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %181 = cast(meta[relay.Constant][17] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %182 = reshape(%179, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
  %183 = reshape(%180, newshape=[588, 2]) /* ty=Tensor[(588, 2), float32] */;
  %184 = reshape(%181, newshape=[1, 375]) /* ty=Tensor[(1, 375), float64] */;
  %185 = @func_1165(%182, %183, %184) /* ty=(Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) */;
  %186 = cast(meta[relay.Constant][18] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %187 = cast(meta[relay.Constant][19] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %188 = reshape(%186, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), int32] */;
  %189 = reshape(%187, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %190 = @func_2284(%188, %189) /* ty=(Tensor[(14, 9, 5), int32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
  %191 = cast(meta[relay.Constant][18] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %192 = cast(meta[relay.Constant][16] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %193 = cast(%var_4396, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %194 = reshape(%191, newshape=[630]) /* ty=Tensor[(630), int32] */;
  %195 = reshape(%192, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %196 = reshape(%193, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %197 = @func_4030(%194, %195, %196) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(14, 9, 5), int32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(1, 375), float64], Tensor[(1, 375), float64], Tensor[(7, 8, 9), int16], Tensor[(5, 1, 9), float32]) */;
  %198 = cast(meta[relay.Constant][17] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %199 = sinh(%198) /* ty=Tensor[(375), float64] */;
  %200 = cast(%199, dtype="float64") /* ty=Tensor[(375), float64] */;
  %201 = @func_4312() /* ty=Tensor[(5, 2, 9), bool] */;
  %202 = %185.1;
  %203 = %190.2;
  %204 = %197.1;
  %205 = log(%200) /* ty=Tensor[(375), float64] */;
  (%201, %202, meta[relay.Constant][16] /* ty=Tensor[(1320), float32] */, %var_4396, %203, meta[relay.Constant][18] /* ty=Tensor[(630), int32] */, meta[relay.Constant][19] /* ty=Tensor[(96), float32] */, %204, %205)
}

def @func_5800(%var_5772: Tensor[(12, 9, 13), float64]) -> Tensor[(12, 9, 13), float64] {
  %206 = cast(%var_5772, dtype="float64") /* ty=Tensor[(12, 9, 13), float64] */;
  sigmoid(%206) /* ty=Tensor[(12, 9, 13), float64] */
}

def @func_7322(%var_7286: Tensor[(10, 14, 16), float32]) -> (Tensor[(10, 14, 16), float32],) {
  %207 = cast(%var_7286, dtype="float32") /* ty=Tensor[(10, 14, 16), float32] */;
  %208 = sqrt(%207) /* ty=Tensor[(10, 14, 16), float32] */;
  %209 = cast(%208, dtype="float32") /* ty=Tensor[(10, 14, 16), float32] */;
  %210 = cos(%209) /* ty=Tensor[(10, 14, 16), float32] */;
  (%210,)
}

def @func_6664(%var_6649: Tensor[(96), float32]) -> (Tensor[(5, 1, 9), float32], Tensor[(2, 8, 6), float64], Tensor[(5, 1, 9), float32]) {
  %211 = cast(%var_6649, dtype="float32") /* ty=Tensor[(96), float32] */;
  %212 = reshape(%211, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
  %213 = @func_210(%212) /* ty=Tensor[(2, 8, 6), float32] */;
  %214 = cast(%var_6649, dtype="float64") /* ty=Tensor[(96), float64] */;
  %215 = shape_of(%213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%213, dtype="float64") /* ty=Tensor[(2, 8, 6), float64] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %218 = @func_3868() /* ty=Tensor[(5, 1, 9), float32] */;
  %219 = mod(%216, %217) /* ty=Tensor[(2, 8, 6), float64] */;
  %220 = @func_6459() /* ty=Tensor[(5, 1, 9), float32] */;
  (%218, %219, %220)
}

def @func_997(%var_989: Tensor[(7, 8, 9), int16], %var_990: Tensor[(7, 8, 9), int16]) -> (Tensor[(7, 8, 9), int16],) {
  %221 = cast(%var_990, dtype="int16") /* ty=Tensor[(7, 8, 9), int16] */;
  %222 = shape_of(%var_989, dtype="int32") /* ty=Tensor[(3), int32] */;
  %223 = cast(%var_989, dtype="int16") /* ty=Tensor[(7, 8, 9), int16] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %225 = bitwise_xor(%223, %224) /* ty=Tensor[(7, 8, 9), int16] */;
  (%225,)
}

def @func_5540(%var_5512: Tensor[(12, 4, 10), float64]) -> (Tensor[(12, 4, 10), float64],) {
  %226 = cast(5.21145f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %227 = cast(%var_5512, dtype="float64") /* ty=Tensor[(12, 4, 10), float64] */;
  %228 = power(%226, %227) /* ty=Tensor[(12, 4, 10), float64] */;
  (%228,)
}

def @func_3868() -> Tensor[(5, 1, 9), float32] {
  %229 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
  %230 = %229.1;
  %231 = cast(%230, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
  log(%231) /* ty=Tensor[(5, 1, 9), float32] */
}

def @func_4286() -> Tensor[(5, 1, 9), float32] {
  @func_3868() /* ty=Tensor[(5, 1, 9), float32] */
}

def @func_4105() -> (Tensor[(5, 1, 9), float32],) {
  %232 = @func_3868() /* ty=Tensor[(5, 1, 9), float32] */;
  (%232,)
}

def @func_6108(%var_6089: Tensor[(819), float32], %var_6093: Tensor[(1176), float32]) -> (Tensor[(5, 1, 9), float32], Tensor[(135), uint32], Tensor[(819), float32], Tensor[(375), float64], Tensor[(630), int32], Tensor[(1176), float32]) {
  %233 = @func_5828() /* ty=(Tensor[(5, 1, 9), float32],) */;
  %234 = cast(%var_6089, dtype="float32") /* ty=Tensor[(819), float32] */;
  %235 = cast(meta[relay.Constant][20] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %236 = reshape(%234, newshape=[9, 13, 7]) /* ty=Tensor[(9, 13, 7), float32] */;
  %237 = reshape(%235, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %238 = @func_5314(%236, %237) /* ty=(Tensor[(135), uint32], Tensor[(60, 22), float32], Tensor[(375), float64], Tensor[(135), uint32], Tensor[(9, 13, 7), bool]) */;
  %239 = cast(%var_6093, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %240 = reshape(%239, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %241 = @func_4452(%240) /* ty=(Tensor[(5, 2, 9), bool], Tensor[(3, 13, 9), float32], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(96), float32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(14, 9, 5), int32], Tensor[(375), float64]) */;
  %242 = %233.0;
  %243 = %238.0;
  %244 = %241.5;
  (%242, %243, %var_6089, meta[relay.Constant][20] /* ty=Tensor[(375), float64] */, %244, %var_6093)
}

def @func_1035(%var_1026: Tensor[(14, 6, 11), float64], %var_1033: Tensor[(288), float64]) -> (Tensor[(14, 6, 11), float64], Tensor[(2, 8, 6), float32], Tensor[(288), float64]) {
  %245 = cast(%var_1026, dtype="float64") /* ty=Tensor[(14, 6, 11), float64] */;
  %246 = cast(%var_1033, dtype="float64") /* ty=Tensor[(288), float64] */;
  %247 = cast(%var_1033, dtype="float64") /* ty=Tensor[(288), float64] */;
  %248 = reshape(%246, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %249 = reshape(%247, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %250 = @func_350(%248, %249) /* ty=(Tensor[(12, 8, 3), float64], Tensor[(12, 8, 3), float32], Tensor[(12, 8, 3), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
  %251 = exp(%245) /* ty=Tensor[(14, 6, 11), float64] */;
  %252 = %250.3;
  (%251, %252, %var_1033)
}

def @func_4312() -> Tensor[(5, 2, 9), bool] {
  %253 = @func_3868() /* ty=Tensor[(5, 1, 9), float32] */;
  %254 = cast(%253, dtype="bool") /* ty=Tensor[(5, 1, 9), bool] */;
  %255 = cast(meta[relay.Constant][21] /* ty=Tensor[(5, 2, 9), float32] */, dtype="bool") /* ty=Tensor[(5, 2, 9), bool] */;
  not_equal(%254, %255) /* ty=Tensor[(5, 2, 9), bool] */
}

def @func_210(%var_202: Tensor[(2, 8, 6), float32]) -> Tensor[(2, 8, 6), float32] {
  %256 = cast(%var_202, dtype="float32") /* ty=Tensor[(2, 8, 6), float32] */;
  tan(%256) /* ty=Tensor[(2, 8, 6), float32] */
}

def @func_4983(%var_4936: Tensor[(1320), float32], %var_4968: Tensor[(208), float32]) -> (Tensor[(1320), float32], Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(1176), float32], Tensor[(5, 1, 9), float32], Tensor[(640), float64], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(5, 2, 9), bool]) {
  %257 = @func_4349() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(1176), float32]) */;
  %258 = %257.3;
  %259 = cast(%var_4936, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %260 = shape_of(%258, dtype="int32") /* ty=Tensor[(1), int32] */;
  %261 = cast(%258, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?), float32] */;
  %263 = cast(meta[relay.Constant][22] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %264 = cast(%258, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %265 = cast(meta[relay.Constant][23] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %266 = reshape(%263, newshape=[630]) /* ty=Tensor[(630), int32] */;
  %267 = reshape(%264, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %268 = reshape(%265, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %269 = @func_4030(%266, %267, %268) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(14, 9, 5), int32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(1, 375), float64], Tensor[(1, 375), float64], Tensor[(7, 8, 9), int16], Tensor[(5, 1, 9), float32]) */;
  %270 = cast(meta[relay.Constant][24] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %271 = reshape(%270, newshape=[4, 10, 16]) /* ty=Tensor[(4, 10, 16), float64] */;
  %272 = @func_4888(%271) /* ty=(Tensor[(4, 10, 16), float64], Tensor[(5, 1, 9), float32]) */;
  %273 = cast(%var_4968, dtype="float32") /* ty=Tensor[(208), float32] */;
  %274 = reshape(%273, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float32] */;
  %275 = power(%261, %262) /* ty=Tensor[(1320), float32] */;
  %276 = %269.4;
  %277 = %272.1;
  %278 = @func_1225(%274) /* ty=Tensor[(13, 8, 2), float32] */;
  %279 = @func_4312() /* ty=Tensor[(5, 2, 9), bool] */;
  (%275, %276, meta[relay.Constant][22] /* ty=Tensor[(630), int32] */, meta[relay.Constant][23] /* ty=Tensor[(1176), float32] */, %277, meta[relay.Constant][24] /* ty=Tensor[(640), float64] */, %278, %var_4968, %279)
}

def @func_5154() -> (Tensor[(504), int16],) {
  %280 = @func_3834() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(504), int16]) */;
  %281 = %280.2;
  (%281,)
}

def @func_6224() -> (Tensor[(5, 1, 9), float32],) {
  %282 = @func_6211() /* ty=(Tensor[(5, 1, 9), float32],) */;
  %283 = %282.0;
  (%283,)
}

def @func_7261(%var_7230: Tensor[(1320), float32]) -> (Tensor[(5, 1, 9), float32], Tensor[(1320), float32], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(6, 196), float32]) {
  %284 = cast(meta[relay.Constant][25] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %285 = cast(%var_7230, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %286 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 196), float32] */, dtype="float32") /* ty=Tensor[(6, 196), float32] */;
  %287 = reshape(%284, newshape=[630]) /* ty=Tensor[(630), int32] */;
  %288 = reshape(%285, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %289 = reshape(%286, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %290 = @func_4030(%287, %288, %289) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(14, 9, 5), int32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(1, 375), float64], Tensor[(1, 375), float64], Tensor[(7, 8, 9), int16], Tensor[(5, 1, 9), float32]) */;
  %291 = @func_4470() /* ty=Tensor[(5, 1, 9), float32] */;
  %292 = %290.6;
  (%291, %292, meta[relay.Constant][25] /* ty=Tensor[(630), int32] */, %var_7230, meta[relay.Constant][26] /* ty=Tensor[(6, 196), float32] */)
}

def @func_4888(%var_4875: Tensor[(4, 10, 16), float64]) -> (Tensor[(4, 10, 16), float64], Tensor[(5, 1, 9), float32]) {
  %293 = cast(%var_4875, dtype="float64") /* ty=Tensor[(4, 10, 16), float64] */;
  %294 = acosh(%293) /* ty=Tensor[(4, 10, 16), float64] */;
  %295 = @func_4275() /* ty=Tensor[(5, 1, 9), float32] */;
  (%294, %295)
}

def @func_5498(%var_5376: Tensor[(3, 300), bool], %var_5377: Tensor[(1320), float32], %var_5378: Tensor[(84, 14), float32], %var_5403: Tensor[(3, 300), bool], %var_5436: Tensor[(5, 126), int32], %var_5446: Tensor[(288), float64], %var_5471: Tensor[(3, 300), float64]) -> (Tensor[(1320), float32], Tensor[(84, 14), float32], Tensor[(5, 375, 9), bool], Tensor[(?, 375), bool], Tensor[(5, 1, 9), float32], Tensor[(5, 126), int32], Tensor[(12, 8, 3), float32], Tensor[(288), float64], Tensor[(3, 300), int16]) {
  %296 = @func_5035() /* ty=(Tensor[(5, ?, 9), bool],) */;
  %297 = %296.0;
  %298 = cast(%297, dtype="bool") /* ty=Tensor[(5, ?, 9), bool] */;
  %299 = cast(meta[relay.Constant][27] /* ty=Tensor[(375, 1), float64] */, dtype="bool") /* ty=Tensor[(375, 1), bool] */;
  %300 = cast(%var_5376, dtype="bool") /* ty=Tensor[(3, 300), bool] */;
  %301 = cast(%var_5376, dtype="bool") /* ty=Tensor[(3, 300), bool] */;
  %302 = cast(%var_5377, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %303 = cast(%var_5378, dtype="float32") /* ty=Tensor[(84, 14), float32] */;
  %304 = cast(meta[relay.Constant][27] /* ty=Tensor[(375, 1), float64] */, dtype="float64") /* ty=Tensor[(375, 1), float64] */;
  %305 = reshape(%300, newshape=[5, 12, 15]) /* ty=Tensor[(5, 12, 15), bool] */;
  %306 = reshape(%301, newshape=[5, 12, 15]) /* ty=Tensor[(5, 12, 15), bool] */;
  %307 = reshape(%302, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %308 = reshape(%303, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %309 = reshape(%304, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %310 = @func_2096(%305, %306, %307, %308, %309) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(1, 375), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64]) */;
  %311 = %310.3;
  %312 = cast(meta[relay.Constant][27] /* ty=Tensor[(375, 1), float64] */, dtype="bool") /* ty=Tensor[(375, 1), bool] */;
  %313 = shape_of(%311, dtype="int32") /* ty=Tensor[(2), int32] */;
  %314 = cast(%311, dtype="bool") /* ty=Tensor[(1, 375), bool] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %316 = cast(%var_5436, dtype="int32") /* ty=Tensor[(5, 126), int32] */;
  %317 = cast(%var_5377, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %318 = cast(%var_5378, dtype="float32") /* ty=Tensor[(84, 14), float32] */;
  %319 = reshape(%316, newshape=[630]) /* ty=Tensor[(630), int32] */;
  %320 = reshape(%317, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %321 = reshape(%318, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %322 = @func_4030(%319, %320, %321) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(14, 9, 5), int32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(1, 375), float64], Tensor[(1, 375), float64], Tensor[(7, 8, 9), int16], Tensor[(5, 1, 9), float32]) */;
  %323 = cast(%var_5446, dtype="float64") /* ty=Tensor[(288), float64] */;
  %324 = cast(%var_5446, dtype="float64") /* ty=Tensor[(288), float64] */;
  %325 = reshape(%323, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %326 = reshape(%324, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %327 = @func_350(%325, %326) /* ty=(Tensor[(12, 8, 3), float64], Tensor[(12, 8, 3), float32], Tensor[(12, 8, 3), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
  %328 = cast(%var_5403, dtype="float64") /* ty=Tensor[(3, 300), float64] */;
  %329 = atan(%328) /* ty=Tensor[(3, 300), float64] */;
  %330 = cast(%var_5471, dtype="uint16") /* ty=Tensor[(3, 300), uint16] */;
  %331 = shape_of(%329, dtype="int32") /* ty=Tensor[(2), int32] */;
  %332 = cast(%329, dtype="uint16") /* ty=Tensor[(3, 300), uint16] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %334 = add(%332, %333) /* ty=Tensor[(3, 300), uint16] */;
  %335 = cast(%var_5403, dtype="float32") /* ty=Tensor[(3, 300), float32] */;
  %336 = shape_of(%var_5376, dtype="int32") /* ty=Tensor[(2), int32] */;
  %337 = cast(%var_5376, dtype="float32") /* ty=Tensor[(3, 300), float32] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %339 = power(%337, %338) /* ty=Tensor[(3, 300), float32] */;
  %340 = cast(%339, dtype="uint8") /* ty=Tensor[(3, 300), uint8] */;
  %341 = shape_of(%329, dtype="int32") /* ty=Tensor[(2), int32] */;
  %342 = cast(%329, dtype="uint8") /* ty=Tensor[(3, 300), uint8] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %344 = multiply(%342, %343) /* ty=Tensor[(3, 300), uint8] */;
  %345 = cast(%344, dtype="int16") /* ty=Tensor[(3, 300), int16] */;
  %346 = shape_of(%334, dtype="int32") /* ty=Tensor[(2), int32] */;
  %347 = cast(%334, dtype="int16") /* ty=Tensor[(3, 300), int16] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %349 = equal(%298, %299) /* ty=Tensor[(5, 375, 9), bool] */;
  %350 = greater(%314, %315) /* ty=Tensor[(?, 375), bool] */;
  %351 = %322.4;
  %352 = %327.1;
  %353 = bitwise_and(%347, %348) /* ty=Tensor[(3, 300), int16] */;
  (%var_5377, %var_5378, %349, %350, %351, %var_5436, %352, %var_5446, %353)
}

def @func_6459() -> Tensor[(5, 1, 9), float32] {
  @func_4286() /* ty=Tensor[(5, 1, 9), float32] */
}

def @func_350(%var_293: Tensor[(12, 8, 3), float64], %var_294: Tensor[(12, 8, 3), float64]) -> (Tensor[(12, 8, 3), float64], Tensor[(12, 8, 3), float32], Tensor[(12, 8, 3), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) {
  %354 = cast(%var_294, dtype="float64") /* ty=Tensor[(12, 8, 3), float64] */;
  %355 = shape_of(%var_293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%var_293, dtype="float64") /* ty=Tensor[(12, 8, 3), float64] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %358 = cast(%var_294, dtype="float32") /* ty=Tensor[(12, 8, 3), float32] */;
  %359 = cast(%var_293, dtype="float32") /* ty=Tensor[(12, 8, 3), float32] */;
  %360 = cast(meta[relay.Constant][28] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %361 = reshape(%360, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
  %362 = mod(%356, %357) /* ty=Tensor[(12, 8, 3), float64] */;
  %363 = sqrt(%358) /* ty=Tensor[(12, 8, 3), float32] */;
  %364 = atan(%359) /* ty=Tensor[(12, 8, 3), float32] */;
  %365 = @func_210(%361) /* ty=Tensor[(2, 8, 6), float32] */;
  (%362, %363, %364, %365, meta[relay.Constant][28] /* ty=Tensor[(96), float32] */)
}

def @func_2617(%var_2578: Tensor[(5, 4, 3), float32], %var_2579: Tensor[(5, 4, 3), float32]) -> (Tensor[(5, 4, 3), float32], Tensor[(15, 5, 5), bool], Tensor[(375), float64]) {
  %366 = cast(%var_2579, dtype="float32") /* ty=Tensor[(5, 4, 3), float32] */;
  %367 = shape_of(%var_2578, dtype="int32") /* ty=Tensor[(3), int32] */;
  %368 = cast(%var_2578, dtype="float32") /* ty=Tensor[(5, 4, 3), float32] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %370 = cast(meta[relay.Constant][29] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %371 = cast(meta[relay.Constant][29] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %372 = reshape(%370, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %373 = reshape(%371, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %374 = @func_822(%372, %373) /* ty=(Tensor[(15, 5, 5), bool], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32]) */;
  %375 = multiply(%368, %369) /* ty=Tensor[(5, 4, 3), float32] */;
  %376 = %374.0;
  (%375, %376, meta[relay.Constant][29] /* ty=Tensor[(375), float64] */)
}

def @func_4641(%var_4502: Tensor[(14, 14, 12), float32], %var_4512: Tensor[(1176), float32], %var_4523: Tensor[(1320), float32], %var_4569: Tensor[(48), float64], %var_4570: Tensor[(208), float32], %var_4617: Tensor[(1456), float64], %var_4626: Tensor[(630), int32], %var_4631: Tensor[(208), float32]) -> (Tensor[(5, 2, 9), bool], Tensor[(1176), float32], Tensor[(1320), float32], Tensor[(375), float64], Tensor[(5, 1, 9), float32], Tensor[(16, 1, 3), float64], Tensor[(48), float64], Tensor[(351), float32], Tensor[(3, 13, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), bool], Tensor[(14, 14, 12), int64], Tensor[(96), float32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(208), int8]) {
  %377 = cast(%var_4512, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %378 = reshape(%377, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %379 = @func_4452(%378) /* ty=(Tensor[(5, 2, 9), bool], Tensor[(3, 13, 9), float32], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(96), float32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(14, 9, 5), int32], Tensor[(375), float64]) */;
  %380 = cast(%var_4569, dtype="float64") /* ty=Tensor[(48), float64] */;
  %381 = cast(%var_4570, dtype="float32") /* ty=Tensor[(208), float32] */;
  %382 = cast(%var_4523, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %383 = cast(%var_4512, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %384 = cast(meta[relay.Constant][30] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %385 = reshape(%382, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
  %386 = reshape(%383, newshape=[588, 2]) /* ty=Tensor[(588, 2), float32] */;
  %387 = reshape(%384, newshape=[1, 375]) /* ty=Tensor[(1, 375), float64] */;
  %388 = @func_1165(%385, %386, %387) /* ty=(Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) */;
  %389 = %388.3;
  %390 = cast(%389, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %391 = cast(meta[relay.Constant][31] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
  %392 = reshape(%380, newshape=[16, 1, 3]) /* ty=Tensor[(16, 1, 3), float64] */;
  %393 = reshape(%381, newshape=[208]) /* ty=Tensor[(208), float32] */;
  %394 = reshape(%390, newshape=[1456]) /* ty=Tensor[(1456), float64] */;
  %395 = reshape(%391, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %396 = @func_1629(%392, %393, %394, %395) /* ty=(Tensor[(16, ?, 3), float32], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(16, ?, 3), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(13, 8, 2), float32], Tensor[(16, 1, 3), float64]) */;
  %397 = cast(meta[relay.Constant][30] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %398 = cast(meta[relay.Constant][30] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %399 = reshape(%397, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %400 = reshape(%398, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %401 = @func_822(%399, %400) /* ty=(Tensor[(15, 5, 5), bool], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32]) */;
  %402 = %401.1;
  %403 = cast(%402, dtype="float32") /* ty=Tensor[(3, 13, 9), float32] */;
  %404 = cast(%var_4617, dtype="bool") /* ty=Tensor[(1456), bool] */;
  %405 = shape_of(%389, dtype="int32") /* ty=Tensor[(1), int32] */;
  %406 = cast(%389, dtype="bool") /* ty=Tensor[(1456), bool] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?), bool] */;
  %408 = cast(%var_4502, dtype="float32") /* ty=Tensor[(14, 14, 12), float32] */;
  %409 = rsqrt(%408) /* ty=Tensor[(14, 14, 12), float32] */;
  %410 = cast(%var_4502, dtype="int64") /* ty=Tensor[(14, 14, 12), int64] */;
  %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%409, dtype="int64") /* ty=Tensor[(14, 14, 12), int64] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %414 = cast(%var_4626, dtype="int32") /* ty=Tensor[(630), int32] */;
  %415 = cast(meta[relay.Constant][32] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %416 = reshape(%414, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), int32] */;
  %417 = reshape(%415, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %418 = @func_2284(%416, %417) /* ty=(Tensor[(14, 9, 5), int32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
  %419 = cast(%var_4631, dtype="int8") /* ty=Tensor[(208), int8] */;
  %420 = shape_of(%var_4570, dtype="int32") /* ty=Tensor[(1), int32] */;
  %421 = cast(%var_4570, dtype="int8") /* ty=Tensor[(208), int8] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?), int8] */;
  %423 = %379.0;
  %424 = @func_4275() /* ty=Tensor[(5, 1, 9), float32] */;
  %425 = %396.10;
  %426 = rsqrt(%403) /* ty=Tensor[(3, 13, 9), float32] */;
  %427 = @func_4470() /* ty=Tensor[(5, 1, 9), float32] */;
  %428 = greater_equal(%406, %407) /* ty=Tensor[(1456), bool] */;
  %429 = bitwise_xor(%412, %413) /* ty=Tensor[(14, 14, 12), int64] */;
  %430 = %418.2;
  %431 = bitwise_xor(%421, %422) /* ty=Tensor[(208), int8] */;
  (%423, %var_4512, %var_4523, meta[relay.Constant][30] /* ty=Tensor[(375), float64] */, %424, %425, %var_4569, meta[relay.Constant][31] /* ty=Tensor[(351), float32] */, %426, %427, %428, %429, %430, %var_4626, meta[relay.Constant][32] /* ty=Tensor[(96), float32] */, %431)
}

def @func_38(%var_35: Tensor[(3, 13, 9), float32]) -> (Tensor[(3, 13, 9), float32],) {
  %432 = cast(%var_35, dtype="float32") /* ty=Tensor[(3, 13, 9), float32] */;
  %433 = exp(%432) /* ty=Tensor[(3, 13, 9), float32] */;
  (%433,)
}

def @func_1629(%var_1551: Tensor[(16, 1, 3), float64], %var_1587: Tensor[(208), float32], %var_1603: Tensor[(1456), float64], %var_1604: Tensor[(351), float32]) -> (Tensor[(16, ?, 3), float32], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(16, ?, 3), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(13, 8, 2), float32], Tensor[(16, 1, 3), float64]) {
  %434 = cast(%var_1551, dtype="float64") /* ty=Tensor[(16, 1, 3), float64] */;
  %435 = sigmoid(%434) /* ty=Tensor[(16, 1, 3), float64] */;
  %436 = cast(%var_1551, dtype="uint16") /* ty=Tensor[(16, 1, 3), uint16] */;
  %437 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%435, dtype="uint16") /* ty=Tensor[(16, 1, 3), uint16] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %440 = left_shift(%438, %439) /* ty=Tensor[(16, ?, 3), uint16] */;
  %441 = cast(%440, dtype="uint32") /* ty=Tensor[(16, ?, 3), uint32] */;
  %442 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%435, dtype="uint32") /* ty=Tensor[(16, 1, 3), uint32] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %445 = multiply(%443, %444) /* ty=Tensor[(16, ?, 3), uint32] */;
  %446 = cast(%445, dtype="float64") /* ty=Tensor[(16, ?, 3), float64] */;
  %447 = rsqrt(%446) /* ty=Tensor[(16, ?, 3), float64] */;
  %448 = cast(%447, dtype="float32") /* ty=Tensor[(16, ?, 3), float32] */;
  %449 = shape_of(%440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%440, dtype="float32") /* ty=Tensor[(16, ?, 3), float32] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %452 = cast(%var_1587, dtype="float32") /* ty=Tensor[(208), float32] */;
  %453 = reshape(%452, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float32] */;
  %454 = cast(%440, dtype="float32") /* ty=Tensor[(16, ?, 3), float32] */;
  %455 = cast(meta[relay.Constant][33] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %456 = reshape(%455, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
  %457 = cast(%var_1603, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %458 = cast(%var_1604, dtype="float32") /* ty=Tensor[(351), float32] */;
  %459 = reshape(%457, newshape=[13, 7, 16]) /* ty=Tensor[(13, 7, 16), float64] */;
  %460 = reshape(%458, newshape=[3, 117]) /* ty=Tensor[(3, 117), float32] */;
  %461 = @func_58(%459, %460) /* ty=(Tensor[(13, 7, 16), float64], Tensor[(3, 13, 9), float32], Tensor[(3, 117), float32]) */;
  %462 = cast(%var_1587, dtype="float32") /* ty=Tensor[(208), float32] */;
  %463 = reshape(%462, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float32] */;
  %464 = cast(%435, dtype="float64") /* ty=Tensor[(16, 1, 3), float64] */;
  %465 = divide(%450, %451) /* ty=Tensor[(16, ?, 3), float32] */;
  %466 = @func_1225(%453) /* ty=Tensor[(13, 8, 2), float32] */;
  %467 = acos(%454) /* ty=Tensor[(16, ?, 3), float32] */;
  %468 = @func_210(%456) /* ty=Tensor[(2, 8, 6), float32] */;
  %469 = %461.1;
  %470 = @func_1225(%463) /* ty=Tensor[(13, 8, 2), float32] */;
  %471 = asinh(%464) /* ty=Tensor[(16, 1, 3), float64] */;
  (%465, %466, %var_1587, %467, %468, meta[relay.Constant][33] /* ty=Tensor[(96), float32] */, %469, %var_1603, %var_1604, %470, %471)
}

def @func_5907(%var_5905: Tensor[(480, 1), uint64]) -> (Tensor[(5, 2, 9), float64], Tensor[(12, 8, 5), uint32], Tensor[(480, 1), uint64]) {
  %472 = @func_5743() /* ty=(Tensor[(5, 2, 9), bool],) */;
  %473 = %472.0;
  %474 = cast(%473, dtype="float64") /* ty=Tensor[(5, 2, 9), float64] */;
  %475 = cast(%var_5905, dtype="uint64") /* ty=Tensor[(480, 1), uint64] */;
  %476 = reshape(%475, newshape=[12, 8, 5]) /* ty=Tensor[(12, 8, 5), uint64] */;
  %477 = atanh(%474) /* ty=Tensor[(5, 2, 9), float64] */;
  %478 = @func_2810(%476) /* ty=Tensor[(12, 8, 5), uint32] */;
  (%477, %478, %var_5905)
}

def @func_4251(%var_4241: Tensor[(900, 1), bool], %var_4242: Tensor[(1320), float32], %var_4243: Tensor[(1176), float32], %var_4244: Tensor[(375), float64]) -> (Tensor[(504), int16], Tensor[(1320), float32], Tensor[(900, 1), bool], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64]) {
  %479 = @func_3834() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(504), int16]) */;
  %480 = cast(%var_4241, dtype="bool") /* ty=Tensor[(900, 1), bool] */;
  %481 = cast(%var_4241, dtype="bool") /* ty=Tensor[(900, 1), bool] */;
  %482 = cast(%var_4242, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %483 = cast(%var_4243, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %484 = cast(%var_4244, dtype="float64") /* ty=Tensor[(375), float64] */;
  %485 = reshape(%480, newshape=[5, 12, 15]) /* ty=Tensor[(5, 12, 15), bool] */;
  %486 = reshape(%481, newshape=[5, 12, 15]) /* ty=Tensor[(5, 12, 15), bool] */;
  %487 = reshape(%482, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %488 = reshape(%483, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %489 = reshape(%484, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %490 = @func_2096(%485, %486, %487, %488, %489) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(1, 375), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64]) */;
  %491 = %479.2;
  %492 = %490.4;
  (%491, %492, %var_4241, %var_4242, %var_4243, %var_4244)
}

def @func_6876(%var_6871: Tensor[(480), float64]) -> (Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(5, 1, 9), float32], Tensor[(12, 4, 10), float64], Tensor[(480), float64]) {
  %493 = cast(meta[relay.Constant][34] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %494 = reshape(%493, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float32] */;
  %495 = @func_4470() /* ty=Tensor[(5, 1, 9), float32] */;
  %496 = cast(%495, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
  %497 = asin(%496) /* ty=Tensor[(5, 1, 9), float32] */;
  %498 = cast(%497, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
  %499 = cast(%var_6871, dtype="float64") /* ty=Tensor[(480), float64] */;
  %500 = reshape(%499, newshape=[12, 4, 10]) /* ty=Tensor[(12, 4, 10), float64] */;
  %501 = @func_5540(%500) /* ty=(Tensor[(12, 4, 10), float64],) */;
  %502 = @func_1225(%494) /* ty=Tensor[(13, 8, 2), float32] */;
  %503 = log10(%498) /* ty=Tensor[(5, 1, 9), float32] */;
  %504 = %501.0;
  (%502, meta[relay.Constant][34] /* ty=Tensor[(208), float32] */, %503, %504, %var_6871)
}

def @func_5941() -> (Tensor[(5, 1, 9), float32],) {
  %505 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
  %506 = %505.2;
  (%506,)
}

def @func_7024() -> (Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(5, 1, 9), float32]) {
  %507 = @func_6828() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(504), int16], Tensor[(7, 8, 9), float32], Tensor[(630), int32]) */;
  %508 = @func_6211() /* ty=(Tensor[(5, 1, 9), float32],) */;
  %509 = @func_4275() /* ty=Tensor[(5, 1, 9), float32] */;
  %510 = %507.3;
  %511 = %508.0;
  (%509, %510, %511)
}

def @func_6421(%var_6408: Tensor[(2352), float32], %var_6409: Tensor[(2, 588), float32], %var_6410: Tensor[(1320), float32], %var_6411: Tensor[(48), float64], %var_6412: Tensor[(208), float32], %var_6413: Tensor[(728, 2), float64], %var_6414: Tensor[(210, 3), int32]) -> (Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(252, 2), int16], Tensor[(5, ?, 9), bool], Tensor[(1176), float32], Tensor[(2352), float32], Tensor[(2, 588), float32], Tensor[(1320), float32], Tensor[(48), float64], Tensor[(208), float32], Tensor[(728, 2), float64], Tensor[(210, 3), int32]) {
  %512 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
  %513 = cast(meta[relay.Constant][35] /* ty=Tensor[(252, 2), int16] */, dtype="int16") /* ty=Tensor[(252, 2), int16] */;
  %514 = cast(meta[relay.Constant][35] /* ty=Tensor[(252, 2), int16] */, dtype="int16") /* ty=Tensor[(252, 2), int16] */;
  %515 = reshape(%513, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), int16] */;
  %516 = reshape(%514, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), int16] */;
  %517 = @func_997(%515, %516) /* ty=(Tensor[(7, 8, 9), int16],) */;
  %518 = @func_3798() /* ty=(Tensor[(5, ?, 9), bool], Tensor[(5, ?, 9), bool], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
  %519 = cast(%var_6408, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %520 = cast(%var_6409, dtype="float32") /* ty=Tensor[(2, 588), float32] */;
  %521 = cast(%var_6410, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %522 = cast(%var_6411, dtype="float64") /* ty=Tensor[(48), float64] */;
  %523 = cast(%var_6412, dtype="float32") /* ty=Tensor[(208), float32] */;
  %524 = cast(%var_6413, dtype="float64") /* ty=Tensor[(728, 2), float64] */;
  %525 = cast(%var_6414, dtype="int32") /* ty=Tensor[(210, 3), int32] */;
  %526 = cast(%var_6412, dtype="float32") /* ty=Tensor[(208), float32] */;
  %527 = reshape(%519, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), float32] */;
  %528 = reshape(%520, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %529 = reshape(%521, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %530 = reshape(%522, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %531 = reshape(%523, newshape=[208]) /* ty=Tensor[(208), float32] */;
  %532 = reshape(%524, newshape=[1456]) /* ty=Tensor[(1456), float64] */;
  %533 = reshape(%525, newshape=[630]) /* ty=Tensor[(630), int32] */;
  %534 = reshape(%526, newshape=[208]) /* ty=Tensor[(208), float32] */;
  %535 = @func_4641(%527, %528, %529, %530, %531, %532, %533, %534) /* ty=(Tensor[(5, 2, 9), bool], Tensor[(1176), float32], Tensor[(1320), float32], Tensor[(375), float64], Tensor[(5, 1, 9), float32], Tensor[(16, 1, 3), float64], Tensor[(48), float64], Tensor[(351), float32], Tensor[(3, 13, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), bool], Tensor[(14, 14, 12), int64], Tensor[(96), float32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(208), int8]) */;
  %536 = %512.0;
  %537 = %517.0;
  %538 = %518.0;
  %539 = %535.1;
  (%536, %537, meta[relay.Constant][35] /* ty=Tensor[(252, 2), int16] */, %538, %539, %var_6408, %var_6409, %var_6410, %var_6411, %var_6412, %var_6413, %var_6414)
}

def @func_6948(%var_6942: Tensor[(13, 4, 13), float32]) -> (Tensor[(13, 4, 13), float32],) {
  %540 = cast(%var_6942, dtype="float32") /* ty=Tensor[(13, 4, 13), float32] */;
  %541 = cos(%540) /* ty=Tensor[(13, 4, 13), float32] */;
  (%541,)
}

def @func_1225(%var_1193: Tensor[(13, 8, 2), float32]) -> Tensor[(13, 8, 2), float32] {
  %542 = cast(%var_1193, dtype="float32") /* ty=Tensor[(13, 8, 2), float32] */;
  %543 = cosh(%542) /* ty=Tensor[(13, 8, 2), float32] */;
  %544 = cast(%543, dtype="float32") /* ty=Tensor[(13, 8, 2), float32] */;
  %545 = sinh(%544) /* ty=Tensor[(13, 8, 2), float32] */;
  %546 = cast(%545, dtype="float32") /* ty=Tensor[(13, 8, 2), float32] */;
  asinh(%546) /* ty=Tensor[(13, 8, 2), float32] */
}

def @func_4373() -> Tensor[(5, 1, 9), float32] {
  @func_3868() /* ty=Tensor[(5, 1, 9), float32] */
}

def @func_7377(%var_7357: Tensor[(7, 2, 6), int8], %var_7358: Tensor[(7, 2, 6), int8]) -> (Tensor[(7, 2, 6), uint64],) {
  %547 = cast(%var_7358, dtype="int8") /* ty=Tensor[(7, 2, 6), int8] */;
  %548 = shape_of(%var_7357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%var_7357, dtype="int8") /* ty=Tensor[(7, 2, 6), int8] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %551 = bitwise_and(%549, %550) /* ty=Tensor[(7, 2, 6), int8] */;
  %552 = cast(%var_7358, dtype="uint64") /* ty=Tensor[(7, 2, 6), uint64] */;
  %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%551, dtype="uint64") /* ty=Tensor[(7, 2, 6), uint64] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %556 = logical_xor(%554, %555) /* ty=Tensor[(7, 2, 6), uint64] */;
  (%556,)
}

def @func_1078(%var_1069: Tensor[(9, 3, 5), uint32], %var_1070: Tensor[(9, 3, 5), uint32]) -> Tensor[(9, 3, 5), uint32] {
  %557 = cast(%var_1070, dtype="uint32") /* ty=Tensor[(9, 3, 5), uint32] */;
  %558 = shape_of(%var_1069, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(%var_1069, dtype="uint32") /* ty=Tensor[(9, 3, 5), uint32] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  add(%559, %560) /* ty=Tensor[(9, 3, 5), uint32] */
}

def @func_5743() -> (Tensor[(5, 2, 9), bool],) {
  %561 = @func_4312() /* ty=Tensor[(5, 2, 9), bool] */;
  (%561,)
}

def @func_5657() -> (Tensor[(5, 1, 9), float64],) {
  %562 = @func_4105() /* ty=(Tensor[(5, 1, 9), float32],) */;
  %563 = %562.0;
  %564 = cast(%563, dtype="float64") /* ty=Tensor[(5, 1, 9), float64] */;
  %565 = sin(%564) /* ty=Tensor[(5, 1, 9), float64] */;
  (%565,)
}

def @func_3834() -> (Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(504), int16]) {
  %566 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
  %567 = cast(meta[relay.Constant][36] /* ty=Tensor[(504), int16] */, dtype="int16") /* ty=Tensor[(504), int16] */;
  %568 = cast(meta[relay.Constant][36] /* ty=Tensor[(504), int16] */, dtype="int16") /* ty=Tensor[(504), int16] */;
  %569 = reshape(%567, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), int16] */;
  %570 = reshape(%568, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), int16] */;
  %571 = @func_997(%569, %570) /* ty=(Tensor[(7, 8, 9), int16],) */;
  %572 = %566.1;
  %573 = %571.0;
  (%572, %573, meta[relay.Constant][36] /* ty=Tensor[(504), int16] */)
}

def @func_3698() -> (Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) {
  %574 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 1, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
  %575 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 1, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
  %576 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 1, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
  %577 = exp(%574) /* ty=Tensor[(5, 1, 9), float32] */;
  %578 = log2(%575) /* ty=Tensor[(5, 1, 9), float32] */;
  %579 = atan(%576) /* ty=Tensor[(5, 1, 9), float32] */;
  (%577, %578, %579)
}

def @func_1916(%var_1901: Tensor[(7, 14, 9), float64]) -> (Tensor[(7, 14, 9), float64], Tensor[(7, 14, 9), float64]) {
  %580 = cast(%var_1901, dtype="float64") /* ty=Tensor[(7, 14, 9), float64] */;
  %581 = cast(%var_1901, dtype="float64") /* ty=Tensor[(7, 14, 9), float64] */;
  %582 = sigmoid(%581) /* ty=Tensor[(7, 14, 9), float64] */;
  %583 = cast(%var_1901, dtype="float64") /* ty=Tensor[(7, 14, 9), float64] */;
  %584 = shape_of(%582, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(%582, dtype="float64") /* ty=Tensor[(7, 14, 9), float64] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %587 = log(%580) /* ty=Tensor[(7, 14, 9), float64] */;
  %588 = floor_divide(%585, %586) /* ty=Tensor[(7, 14, 9), float64] */;
  (%587, %588)
}

def @func_5712(%var_5707: Tensor[(3, 5, 6), float32]) -> (Tensor[(3, 5, 6), float32],) {
  %589 = cast(%var_5707, dtype="float32") /* ty=Tensor[(3, 5, 6), float32] */;
  %590 = sqrt(%589) /* ty=Tensor[(3, 5, 6), float32] */;
  (%590,)
}

def @func_822(%var_806: Tensor[(15, 5, 5), float64], %var_811: Tensor[(15, 5, 5), float64]) -> (Tensor[(15, 5, 5), bool], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32]) {
  %591 = cast(%var_806, dtype="float64") /* ty=Tensor[(15, 5, 5), float64] */;
  %592 = cos(%591) /* ty=Tensor[(15, 5, 5), float64] */;
  %593 = cast(%var_811, dtype="bool") /* ty=Tensor[(15, 5, 5), bool] */;
  %594 = shape_of(%592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%592, dtype="bool") /* ty=Tensor[(15, 5, 5), bool] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %597 = cast(meta[relay.Constant][38] /* ty=Tensor[(1456), float64] */, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %598 = cast(meta[relay.Constant][39] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
  %599 = reshape(%597, newshape=[13, 7, 16]) /* ty=Tensor[(13, 7, 16), float64] */;
  %600 = reshape(%598, newshape=[3, 117]) /* ty=Tensor[(3, 117), float32] */;
  %601 = @func_58(%599, %600) /* ty=(Tensor[(13, 7, 16), float64], Tensor[(3, 13, 9), float32], Tensor[(3, 117), float32]) */;
  %602 = not_equal(%595, %596) /* ty=Tensor[(15, 5, 5), bool] */;
  %603 = %601.1;
  (%602, %603, meta[relay.Constant][38] /* ty=Tensor[(1456), float64] */, meta[relay.Constant][39] /* ty=Tensor[(351), float32] */)
}

def @func_3798() -> (Tensor[(5, ?, 9), bool], Tensor[(5, ?, 9), bool], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) {
  %604 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
  %605 = %604.0;
  %606 = cast(meta[relay.Constant][40] /* ty=Tensor[(5, 1, 9), float32] */, dtype="bool") /* ty=Tensor[(5, 1, 9), bool] */;
  %607 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(%605, dtype="bool") /* ty=Tensor[(5, 1, 9), bool] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %610 = cast(meta[relay.Constant][40] /* ty=Tensor[(5, 1, 9), float32] */, dtype="bool") /* ty=Tensor[(5, 1, 9), bool] */;
  %611 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%605, dtype="bool") /* ty=Tensor[(5, 1, 9), bool] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %614 = cast(meta[relay.Constant][41] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %615 = reshape(%614, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
  %616 = less_equal(%608, %609) /* ty=Tensor[(5, ?, 9), bool] */;
  %617 = greater(%612, %613) /* ty=Tensor[(5, ?, 9), bool] */;
  %618 = @func_210(%615) /* ty=Tensor[(2, 8, 6), float32] */;
  (%616, %617, %618, meta[relay.Constant][41] /* ty=Tensor[(96), float32] */)
}

def @func_2810(%var_2791: Tensor[(12, 8, 5), uint64]) -> Tensor[(12, 8, 5), uint32] {
  %619 = cast(%var_2791, dtype="bool") /* ty=Tensor[(12, 8, 5), bool] */;
  %620 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(12, 8, 5), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %621 = cast(meta[relay.Constant][42] /* ty=Tensor[(12, 8, 5), uint64] */, dtype="bool") /* ty=Tensor[(12, 8, 5), bool] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %623 = greater(%621, %622) /* ty=Tensor[(12, 8, 5), bool] */;
  %624 = cast(%var_2791, dtype="uint32") /* ty=Tensor[(12, 8, 5), uint32] */;
  %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %626 = cast(%623, dtype="uint32") /* ty=Tensor[(12, 8, 5), uint32] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  maximum(%626, %627) /* ty=Tensor[(12, 8, 5), uint32] */
}

def @func_5619() -> Tensor[(5, 1, 9), float32] {
  @func_4373() /* ty=Tensor[(5, 1, 9), float32] */
}

def @func_6922(%var_6906: Tensor[(90), float32], %var_6909: Tensor[(900, 1), bool], %var_6911: Tensor[(1176), float32], %var_6912: Tensor[(375), float64]) -> (Tensor[(5, ?, 9), bool], Tensor[(3, 5, 6), float32], Tensor[(90), float32], Tensor[(1176), float32], Tensor[(900, 1), bool], Tensor[(12, 110), float32], Tensor[(1176), float32], Tensor[(375), float64], Tensor[(5, 1, 9), float32]) {
  %628 = @func_5035() /* ty=(Tensor[(5, ?, 9), bool],) */;
  %629 = cast(%var_6906, dtype="float32") /* ty=Tensor[(90), float32] */;
  %630 = reshape(%629, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), float32] */;
  %631 = @func_5712(%630) /* ty=(Tensor[(3, 5, 6), float32],) */;
  %632 = cast(%var_6909, dtype="bool") /* ty=Tensor[(900, 1), bool] */;
  %633 = cast(meta[relay.Constant][43] /* ty=Tensor[(12, 110), float32] */, dtype="float32") /* ty=Tensor[(12, 110), float32] */;
  %634 = cast(%var_6911, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %635 = cast(%var_6912, dtype="float64") /* ty=Tensor[(375), float64] */;
  %636 = reshape(%632, newshape=[900, 1]) /* ty=Tensor[(900, 1), bool] */;
  %637 = reshape(%633, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %638 = reshape(%634, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %639 = reshape(%635, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %640 = @func_4251(%636, %637, %638, %639) /* ty=(Tensor[(504), int16], Tensor[(1320), float32], Tensor[(900, 1), bool], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64]) */;
  %641 = %628.0;
  %642 = %631.0;
  %643 = %640.4;
  %644 = @func_3868() /* ty=Tensor[(5, 1, 9), float32] */;
  (%641, %642, %var_6906, %643, %var_6909, meta[relay.Constant][43] /* ty=Tensor[(12, 110), float32] */, %var_6911, %var_6912, %644)
}

def @func_6728(%var_6677: Tensor[(1176), float32], %var_6689: Tensor[(48), float64], %var_6690: Tensor[(208), float32]) -> (Tensor[(5, 2, 9), bool], Tensor[(1, 375), float64], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(135), uint32], Tensor[(48), float64], Tensor[(2352), float32], Tensor[(48), float64], Tensor[(208), float32], Tensor[(1456, 1), float64], Tensor[(9, 3, 5), float32], Tensor[(9, 3, 5), bool]) {
  %645 = cast(meta[relay.Constant][44] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %646 = cast(meta[relay.Constant][45] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %647 = cast(%var_6677, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %648 = reshape(%645, newshape=[630]) /* ty=Tensor[(630), int32] */;
  %649 = reshape(%646, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %650 = reshape(%647, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %651 = @func_4030(%648, %649, %650) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(14, 9, 5), int32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(1, 375), float64], Tensor[(1, 375), float64], Tensor[(7, 8, 9), int16], Tensor[(5, 1, 9), float32]) */;
  %652 = cast(meta[relay.Constant][47] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %653 = cast(%var_6677, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %654 = cast(meta[relay.Constant][45] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %655 = cast(%var_6689, dtype="float64") /* ty=Tensor[(48), float64] */;
  %656 = cast(%var_6690, dtype="float32") /* ty=Tensor[(208), float32] */;
  %657 = cast(meta[relay.Constant][48] /* ty=Tensor[(1456, 1), float64] */, dtype="float64") /* ty=Tensor[(1456, 1), float64] */;
  %658 = cast(meta[relay.Constant][44] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %659 = reshape(%652, newshape=[2352]) /* ty=Tensor[(2352), float32] */;
  %660 = reshape(%653, newshape=[2, 588]) /* ty=Tensor[(2, 588), float32] */;
  %661 = reshape(%654, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %662 = reshape(%655, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %663 = reshape(%656, newshape=[208]) /* ty=Tensor[(208), float32] */;
  %664 = reshape(%657, newshape=[728, 2]) /* ty=Tensor[(728, 2), float64] */;
  %665 = reshape(%658, newshape=[210, 3]) /* ty=Tensor[(210, 3), int32] */;
  %666 = @func_6421(%659, %660, %661, %662, %663, %664, %665) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(252, 2), int16], Tensor[(5, ?, 9), bool], Tensor[(1176), float32], Tensor[(2352), float32], Tensor[(2, 588), float32], Tensor[(1320), float32], Tensor[(48), float64], Tensor[(208), float32], Tensor[(728, 2), float64], Tensor[(210, 3), int32]) */;
  %667 = cast(meta[relay.Constant][46] /* ty=Tensor[(135), uint32] */, dtype="uint32") /* ty=Tensor[(135), uint32] */;
  %668 = cast(meta[relay.Constant][46] /* ty=Tensor[(135), uint32] */, dtype="uint32") /* ty=Tensor[(135), uint32] */;
  %669 = reshape(%667, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), uint32] */;
  %670 = reshape(%668, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), uint32] */;
  %671 = @func_1078(%669, %670) /* ty=Tensor[(9, 3, 5), uint32] */;
  %672 = cast(%671, dtype="float64") /* ty=Tensor[(9, 3, 5), float64] */;
  %673 = sinh(%672) /* ty=Tensor[(9, 3, 5), float64] */;
  %674 = cast(%673, dtype="float64") /* ty=Tensor[(9, 3, 5), float64] */;
  %675 = log(%674) /* ty=Tensor[(9, 3, 5), float64] */;
  %676 = cast(%675, dtype="float32") /* ty=Tensor[(9, 3, 5), float32] */;
  %677 = cast(meta[relay.Constant][49] /* ty=Tensor[(9, 3, 5), float64] */, dtype="bool") /* ty=Tensor[(9, 3, 5), bool] */;
  %678 = shape_of(%675, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(%675, dtype="bool") /* ty=Tensor[(9, 3, 5), bool] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %681 = @func_6203() /* ty=Tensor[(5, 2, 9), bool] */;
  %682 = %651.8;
  %683 = %666.8;
  %684 = sigmoid(%676) /* ty=Tensor[(9, 3, 5), float32] */;
  %685 = equal(%679, %680) /* ty=Tensor[(9, 3, 5), bool] */;
  (%681, %682, meta[relay.Constant][44] /* ty=Tensor[(630), int32] */, meta[relay.Constant][45] /* ty=Tensor[(1320), float32] */, %var_6677, meta[relay.Constant][46] /* ty=Tensor[(135), uint32] */, %683, meta[relay.Constant][47] /* ty=Tensor[(2352), float32] */, %var_6689, %var_6690, meta[relay.Constant][48] /* ty=Tensor[(1456, 1), float64] */, %684, %685)
}

def @func_6211() -> (Tensor[(5, 1, 9), float32],) {
  %686 = @func_5941() /* ty=(Tensor[(5, 1, 9), float32],) */;
  %687 = %686.0;
  (%687,)
}

def @func_4349() -> (Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(1176), float32]) {
  %688 = cast(meta[relay.Constant][50] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %689 = cast(meta[relay.Constant][51] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %690 = cast(meta[relay.Constant][52] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %691 = reshape(%688, newshape=[630]) /* ty=Tensor[(630), int32] */;
  %692 = reshape(%689, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %693 = reshape(%690, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %694 = @func_4030(%691, %692, %693) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(14, 9, 5), int32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(1, 375), float64], Tensor[(1, 375), float64], Tensor[(7, 8, 9), int16], Tensor[(5, 1, 9), float32]) */;
  %695 = @func_3868() /* ty=Tensor[(5, 1, 9), float32] */;
  %696 = %694.4;
  (%695, %696, meta[relay.Constant][50] /* ty=Tensor[(630), int32] */, meta[relay.Constant][51] /* ty=Tensor[(1320), float32] */, meta[relay.Constant][52] /* ty=Tensor[(1176), float32] */)
}

def @func_7430() -> (Tensor[(10, 12, 13), float64], Tensor[(10, 12, 13), float64]) {
  %697 = cast(meta[relay.Constant][53] /* ty=Tensor[(10, 12, 13), float64] */, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
  %698 = cast(meta[relay.Constant][53] /* ty=Tensor[(10, 12, 13), float64] */, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
  %699 = tan(%697) /* ty=Tensor[(10, 12, 13), float64] */;
  %700 = atan(%698) /* ty=Tensor[(10, 12, 13), float64] */;
  (%699, %700)
}

def @func_4470() -> Tensor[(5, 1, 9), float32] {
  @func_4373() /* ty=Tensor[(5, 1, 9), float32] */
}

def @func_1804(%var_1729: Tensor[(7, 7, 10), int32], %var_1730: Tensor[(7, 7, 10), int32], %var_1746: Tensor[(288), float64], %var_1768: Tensor[(351), float32], %var_1790: Tensor[(7, 7, 10), float64]) -> (Tensor[(2, 8, 6), float32], Tensor[(288), float64], Tensor[(3, 13, 9), float32], Tensor[(351), float32], Tensor[(3, 13, 9), float32], Tensor[(3, 13, 9), float32], Tensor[(7, 7, 10), bool]) {
  %701 = cast(%var_1746, dtype="float64") /* ty=Tensor[(288), float64] */;
  %702 = cast(%var_1746, dtype="float64") /* ty=Tensor[(288), float64] */;
  %703 = reshape(%701, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %704 = reshape(%702, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %705 = @func_350(%703, %704) /* ty=(Tensor[(12, 8, 3), float64], Tensor[(12, 8, 3), float32], Tensor[(12, 8, 3), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
  %706 = cast(%var_1768, dtype="float32") /* ty=Tensor[(351), float32] */;
  %707 = reshape(%706, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float32] */;
  %708 = @func_38(%707) /* ty=(Tensor[(3, 13, 9), float32],) */;
  %709 = %708.0;
  %710 = cast(%709, dtype="float32") /* ty=Tensor[(3, 13, 9), float32] */;
  %711 = reshape(%710, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float32] */;
  %712 = @func_38(%711) /* ty=(Tensor[(3, 13, 9), float32],) */;
  %713 = %712.0;
  %714 = cast(%713, dtype="float32") /* ty=Tensor[(3, 13, 9), float32] */;
  %715 = reshape(%714, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float32] */;
  %716 = @func_38(%715) /* ty=(Tensor[(3, 13, 9), float32],) */;
  %717 = cast(%var_1730, dtype="int32") /* ty=Tensor[(7, 7, 10), int32] */;
  %718 = shape_of(%var_1729, dtype="int32") /* ty=Tensor[(3), int32] */;
  %719 = cast(%var_1729, dtype="int32") /* ty=Tensor[(7, 7, 10), int32] */;
  %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %721 = logical_xor(%719, %720) /* ty=Tensor[(7, 7, 10), int32] */;
  %722 = cast(%var_1730, dtype="float64") /* ty=Tensor[(7, 7, 10), float64] */;
  %723 = shape_of(%721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %724 = cast(%721, dtype="float64") /* ty=Tensor[(7, 7, 10), float64] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %726 = divide(%724, %725) /* ty=Tensor[(7, 7, 10), float64] */;
  %727 = cast(%var_1790, dtype="bool") /* ty=Tensor[(7, 7, 10), bool] */;
  %728 = shape_of(%726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%726, dtype="bool") /* ty=Tensor[(7, 7, 10), bool] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %731 = %705.3;
  %732 = %716.0;
  %733 = logical_or(%729, %730) /* ty=Tensor[(7, 7, 10), bool] */;
  (%731, %var_1746, %709, %var_1768, %713, %732, %733)
}

def @func_6568() -> (Tensor[(5, 1, 9), float32],) {
  %734 = @func_4349() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(1176), float32]) */;
  %735 = %734.1;
  (%735,)
}

def @func_1165(%var_1124: Tensor[(11, 8, 15), float32], %var_1134: Tensor[(588, 2), float32], %var_1138: Tensor[(1, 375), float64]) -> (Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) {
  %736 = cast(%var_1124, dtype="float32") /* ty=Tensor[(11, 8, 15), float32] */;
  %737 = cast(%var_1134, dtype="float32") /* ty=Tensor[(588, 2), float32] */;
  %738 = reshape(%737, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float32] */;
  %739 = @func_145(%738) /* ty=(Tensor[(12, 7, 14), float32], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(3, 13, 9), float32]) */;
  %740 = cast(%var_1138, dtype="float64") /* ty=Tensor[(1, 375), float64] */;
  %741 = cast(%var_1138, dtype="float64") /* ty=Tensor[(1, 375), float64] */;
  %742 = reshape(%740, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %743 = reshape(%741, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %744 = @func_822(%742, %743) /* ty=(Tensor[(15, 5, 5), bool], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32]) */;
  %745 = %739.1;
  %746 = cast(%745, dtype="float32") /* ty=Tensor[(3, 13, 9), float32] */;
  %747 = reshape(%746, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float32] */;
  %748 = @func_38(%747) /* ty=(Tensor[(3, 13, 9), float32],) */;
  %749 = cast(meta[relay.Constant][54] /* ty=Tensor[(14, 66), float64] */, dtype="float64") /* ty=Tensor[(14, 66), float64] */;
  %750 = cast(meta[relay.Constant][55] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %751 = reshape(%749, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), float64] */;
  %752 = reshape(%750, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %753 = @func_1035(%751, %752) /* ty=(Tensor[(14, 6, 11), float64], Tensor[(2, 8, 6), float32], Tensor[(288), float64]) */;
  %754 = sin(%736) /* ty=Tensor[(11, 8, 15), float32] */;
  %755 = %744.2;
  %756 = %748.0;
  %757 = %753.2;
  (%754, %745, %var_1134, %755, %var_1138, %756, %757, meta[relay.Constant][54] /* ty=Tensor[(14, 66), float64] */, meta[relay.Constant][55] /* ty=Tensor[(288), float64] */)
}

def @func_6327(%var_6321: Tensor[(208), float32]) -> (Tensor[(5, ?, 9), bool], Tensor[(13, 8, 2), float32], Tensor[(208), float32]) {
  %758 = @func_5035() /* ty=(Tensor[(5, ?, 9), bool],) */;
  %759 = cast(%var_6321, dtype="float32") /* ty=Tensor[(208), float32] */;
  %760 = reshape(%759, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float32] */;
  %761 = %758.0;
  %762 = @func_1225(%760) /* ty=Tensor[(13, 8, 2), float32] */;
  (%761, %762, %var_6321)
}

def @func_5035() -> (Tensor[(5, ?, 9), bool],) {
  %763 = @func_3798() /* ty=(Tensor[(5, ?, 9), bool], Tensor[(5, ?, 9), bool], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
  %764 = %763.0;
  (%764,)
}

def @func_3112(%var_3076: Tensor[(8, 13, 2), float64], %var_3086: Tensor[(4, 24), float32]) -> (Tensor[(2, 8, 6), float32], Tensor[(4, 24), float32], Tensor[(8, 13, 2), float32]) {
  %765 = cast(%var_3086, dtype="float32") /* ty=Tensor[(4, 24), float32] */;
  %766 = reshape(%765, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
  %767 = cast(%var_3076, dtype="float64") /* ty=Tensor[(8, 13, 2), float64] */;
  %768 = sinh(%767) /* ty=Tensor[(8, 13, 2), float64] */;
  %769 = cast(%768, dtype="float32") /* ty=Tensor[(8, 13, 2), float32] */;
  %770 = @func_210(%766) /* ty=Tensor[(2, 8, 6), float32] */;
  %771 = exp(%769) /* ty=Tensor[(8, 13, 2), float32] */;
  (%770, %var_3086, %771)
}

def @func_6373(%var_6360: Tensor[(5, 8, 9), float32]) -> (Tensor[(5, 8, 9), bool],) {
  %772 = @func_4105() /* ty=(Tensor[(5, 1, 9), float32],) */;
  %773 = %772.0;
  %774 = cast(%773, dtype="bool") /* ty=Tensor[(5, 1, 9), bool] */;
  %775 = cast(%var_6360, dtype="bool") /* ty=Tensor[(5, 8, 9), bool] */;
  %776 = greater(%774, %775) /* ty=Tensor[(5, 8, 9), bool] */;
  (%776,)
}

def @func_145(%var_109: Tensor[(12, 7, 14), float32]) -> (Tensor[(12, 7, 14), float32], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(3, 13, 9), float32]) {
  %777 = cast(%var_109, dtype="float32") /* ty=Tensor[(12, 7, 14), float32] */;
  %778 = cast(meta[relay.Constant][56] /* ty=Tensor[(1456), float64] */, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %779 = cast(meta[relay.Constant][57] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
  %780 = reshape(%778, newshape=[13, 7, 16]) /* ty=Tensor[(13, 7, 16), float64] */;
  %781 = reshape(%779, newshape=[3, 117]) /* ty=Tensor[(3, 117), float32] */;
  %782 = @func_58(%780, %781) /* ty=(Tensor[(13, 7, 16), float64], Tensor[(3, 13, 9), float32], Tensor[(3, 117), float32]) */;
  %783 = %782.1;
  %784 = cast(%783, dtype="float32") /* ty=Tensor[(3, 13, 9), float32] */;
  %785 = reshape(%784, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float32] */;
  %786 = @func_38(%785) /* ty=(Tensor[(3, 13, 9), float32],) */;
  %787 = tan(%777) /* ty=Tensor[(12, 7, 14), float32] */;
  %788 = %786.0;
  (%787, %783, meta[relay.Constant][56] /* ty=Tensor[(1456), float64] */, meta[relay.Constant][57] /* ty=Tensor[(351), float32] */, %788)
}

def @func_2096(%var_2081: Tensor[(5, 12, 15), bool], %var_2082: Tensor[(5, 12, 15), bool], %var_2091: Tensor[(1320), float32], %var_2092: Tensor[(1176), float32], %var_2093: Tensor[(375), float64]) -> (Tensor[(5, 12, 15), bool], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(1, 375), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64]) {
  %789 = cast(%var_2082, dtype="bool") /* ty=Tensor[(5, 12, 15), bool] */;
  %790 = shape_of(%var_2081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %791 = cast(%var_2081, dtype="bool") /* ty=Tensor[(5, 12, 15), bool] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %793 = cast(meta[relay.Constant][58] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %794 = reshape(%793, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float32] */;
  %795 = cast(%var_2091, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %796 = cast(%var_2092, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %797 = cast(%var_2093, dtype="float64") /* ty=Tensor[(375), float64] */;
  %798 = reshape(%795, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
  %799 = reshape(%796, newshape=[588, 2]) /* ty=Tensor[(588, 2), float32] */;
  %800 = reshape(%797, newshape=[1, 375]) /* ty=Tensor[(1, 375), float64] */;
  %801 = @func_1165(%798, %799, %800) /* ty=(Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) */;
  %802 = logical_and(%791, %792) /* ty=Tensor[(5, 12, 15), bool] */;
  %803 = @func_1225(%794) /* ty=Tensor[(13, 8, 2), float32] */;
  %804 = %801.4;
  (%802, %803, meta[relay.Constant][58] /* ty=Tensor[(208), float32] */, %804, %var_2091, %var_2092, %var_2093)
}

def @func_6828() -> (Tensor[(5, 1, 9), float32], Tensor[(504), int16], Tensor[(7, 8, 9), float32], Tensor[(630), int32]) {
  %805 = @func_4349() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(1176), float32]) */;
  %806 = cast(meta[relay.Constant][59] /* ty=Tensor[(504), int16] */, dtype="int16") /* ty=Tensor[(504), int16] */;
  %807 = cast(meta[relay.Constant][59] /* ty=Tensor[(504), int16] */, dtype="int16") /* ty=Tensor[(504), int16] */;
  %808 = reshape(%806, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), int16] */;
  %809 = reshape(%807, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), int16] */;
  %810 = @func_997(%808, %809) /* ty=(Tensor[(7, 8, 9), int16],) */;
  %811 = %810.0;
  %812 = cast(%811, dtype="float32") /* ty=Tensor[(7, 8, 9), float32] */;
  %813 = @func_4349() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(1176), float32]) */;
  %814 = %805.0;
  %815 = atan(%812) /* ty=Tensor[(7, 8, 9), float32] */;
  %816 = %813.2;
  (%814, meta[relay.Constant][59] /* ty=Tensor[(504), int16] */, %815, %816)
}

def @func_5108(%var_5071: Tensor[(11, 14, 2), int8], %var_5072: Tensor[(11, 14, 2), int8], %var_5086: Tensor[(1176), float32], %var_5098: Tensor[(900), bool], %var_5104: Tensor[(4, 24), float32]) -> (Tensor[(11, 14, 2), float64], Tensor[(14, 66), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64], Tensor[(504), int16], Tensor[(900, 1), bool], Tensor[(900), bool], Tensor[(2, 8, 6), float32], Tensor[(630), int32], Tensor[(4, 24), float32]) {
  %817 = cast(%var_5072, dtype="bool") /* ty=Tensor[(11, 14, 2), bool] */;
  %818 = shape_of(%var_5071, dtype="int32") /* ty=Tensor[(3), int32] */;
  %819 = cast(%var_5071, dtype="bool") /* ty=Tensor[(11, 14, 2), bool] */;
  %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %821 = greater(%819, %820) /* ty=Tensor[(11, 14, 2), bool] */;
  %822 = cast(%821, dtype="float64") /* ty=Tensor[(11, 14, 2), float64] */;
  %823 = cast(meta[relay.Constant][60] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %824 = cast(%var_5086, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %825 = cast(meta[relay.Constant][61] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %826 = reshape(%823, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
  %827 = reshape(%824, newshape=[588, 2]) /* ty=Tensor[(588, 2), float32] */;
  %828 = reshape(%825, newshape=[1, 375]) /* ty=Tensor[(1, 375), float64] */;
  %829 = @func_1165(%826, %827, %828) /* ty=(Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) */;
  %830 = @func_3834() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(504), int16]) */;
  %831 = cast(%var_5098, dtype="bool") /* ty=Tensor[(900), bool] */;
  %832 = cast(meta[relay.Constant][60] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %833 = cast(%var_5086, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %834 = cast(meta[relay.Constant][61] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %835 = reshape(%831, newshape=[900, 1]) /* ty=Tensor[(900, 1), bool] */;
  %836 = reshape(%832, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %837 = reshape(%833, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %838 = reshape(%834, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %839 = @func_4251(%835, %836, %837, %838) /* ty=(Tensor[(504), int16], Tensor[(1320), float32], Tensor[(900, 1), bool], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64]) */;
  %840 = cast(meta[relay.Constant][62] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %841 = cast(%var_5104, dtype="float32") /* ty=Tensor[(4, 24), float32] */;
  %842 = reshape(%840, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), int32] */;
  %843 = reshape(%841, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %844 = @func_2284(%842, %843) /* ty=(Tensor[(14, 9, 5), int32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
  %845 = tan(%822) /* ty=Tensor[(11, 14, 2), float64] */;
  %846 = %829.7;
  %847 = %830.2;
  %848 = %839.2;
  %849 = %844.1;
  (%845, %846, meta[relay.Constant][60] /* ty=Tensor[(1320), float32] */, %var_5086, meta[relay.Constant][61] /* ty=Tensor[(375), float64] */, %847, %848, %var_5098, %849, meta[relay.Constant][62] /* ty=Tensor[(630), int32] */, %var_5104)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4312() -> Tensor[(5, 2, 9), bool] {
  %0 = @func_3868() /* ty=Tensor[(5, 1, 9), float32] */;
  %1 = cast(%0, dtype="bool") /* ty=Tensor[(5, 1, 9), bool] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 2, 9), float32] */, dtype="bool") /* ty=Tensor[(5, 2, 9), bool] */;
  not_equal(%1, %2) /* ty=Tensor[(5, 2, 9), bool] */
}

def @func_6460() -> Tensor[(5, 1, 9), float32] {
  %3 = fn () -> Tensor[(5, 1, 9), float32] {
    @func_4286() /* ty=Tensor[(5, 1, 9), float32] */
  };
  %3() /* ty=Tensor[(5, 1, 9), float32] */
}

def @func_147(%var_146: Tensor[(12, 7, 14), float32]) -> (Tensor[(12, 7, 14), float32], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(3, 13, 9), float32]) {
  %16 = fn (%var_109: Tensor[(12, 7, 14), float32]) -> (Tensor[(12, 7, 14), float32], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(3, 13, 9), float32]) {
    %4 = cast(%var_109, dtype="float32") /* ty=Tensor[(12, 7, 14), float32] */;
    %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(1456), float64] */, dtype="float64") /* ty=Tensor[(1456), float64] */;
    %6 = cast(meta[relay.Constant][2] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
    %7 = reshape(%5, newshape=[13, 7, 16]) /* ty=Tensor[(13, 7, 16), float64] */;
    %8 = reshape(%6, newshape=[3, 117]) /* ty=Tensor[(3, 117), float32] */;
    %9 = @func_58(%7, %8) /* ty=(Tensor[(13, 7, 16), float64], Tensor[(3, 13, 9), float32], Tensor[(3, 117), float32]) */;
    %10 = %9.1;
    %11 = cast(%10, dtype="float32") /* ty=Tensor[(3, 13, 9), float32] */;
    %12 = reshape(%11, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float32] */;
    %13 = @func_38(%12) /* ty=(Tensor[(3, 13, 9), float32],) */;
    %14 = tan(%4) /* ty=Tensor[(12, 7, 14), float32] */;
    %15 = %13.0;
    (%14, %10, meta[relay.Constant][1] /* ty=Tensor[(1456), float64] */, meta[relay.Constant][2] /* ty=Tensor[(351), float32] */, %15)
  };
  %16(%var_146) /* ty=(Tensor[(12, 7, 14), float32], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(3, 13, 9), float32]) */
}

def @main(%var_7485: Tensor[(14, 13, 3), uint64], %var_7486: Tensor[(14, 13, 3), uint64]) -> (Tensor[(14, 13, 3), bool], Tensor[(14, 13, 3), float64]) {
  %17 = cast(%var_7486, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %18 = shape_of(%var_7485, dtype="int32") /* ty=Tensor[(3), int32] */;
  %19 = cast(%var_7485, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %21 = cast(%var_7486, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %22 = greater_equal(%19, %20) /* ty=Tensor[(14, 13, 3), bool] */;
  %23 = rsqrt(%21) /* ty=Tensor[(14, 13, 3), float64] */;
  (%22, %23)
}

def @func_4277() -> Tensor[(5, 1, 9), float32] {
  @func_4275() /* ty=Tensor[(5, 1, 9), float32] */
}

def @func_6108(%var_6089: Tensor[(819), float32], %var_6093: Tensor[(1176), float32]) -> (Tensor[(5, 1, 9), float32], Tensor[(135), uint32], Tensor[(819), float32], Tensor[(375), float64], Tensor[(630), int32], Tensor[(1176), float32]) {
  %24 = @func_5828() /* ty=(Tensor[(5, 1, 9), float32],) */;
  %25 = cast(%var_6089, dtype="float32") /* ty=Tensor[(819), float32] */;
  %26 = cast(meta[relay.Constant][3] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %27 = reshape(%25, newshape=[9, 13, 7]) /* ty=Tensor[(9, 13, 7), float32] */;
  %28 = reshape(%26, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %29 = @func_5314(%27, %28) /* ty=(Tensor[(135), uint32], Tensor[(60, 22), float32], Tensor[(375), float64], Tensor[(135), uint32], Tensor[(9, 13, 7), bool]) */;
  %30 = cast(%var_6093, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %31 = reshape(%30, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %32 = @func_4452(%31) /* ty=(Tensor[(5, 2, 9), bool], Tensor[(3, 13, 9), float32], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(96), float32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(14, 9, 5), int32], Tensor[(375), float64]) */;
  %33 = %24.0;
  %34 = %29.0;
  %35 = %32.5;
  (%33, %34, %var_6089, meta[relay.Constant][3] /* ty=Tensor[(375), float64] */, %35, %var_6093)
}

def @func_5828() -> (Tensor[(5, 1, 9), float32],) {
  %36 = @func_4286() /* ty=Tensor[(5, 1, 9), float32] */;
  (%36,)
}

def @func_5318(%var_5316: Tensor[(9, 13, 7), float32], %var_5317: Tensor[(375), float64]) -> (Tensor[(135), uint32], Tensor[(60, 22), float32], Tensor[(375), float64], Tensor[(135), uint32], Tensor[(9, 13, 7), bool]) {
  @func_5314(%var_5316, %var_5317) /* ty=(Tensor[(135), uint32], Tensor[(60, 22), float32], Tensor[(375), float64], Tensor[(135), uint32], Tensor[(9, 13, 7), bool]) */
}

def @func_6186(%var_6164: Tensor[(3, 7, 7), float64], %var_6172: Tensor[(900), bool], %var_6174: Tensor[(2, 588), float32], %var_6175: Tensor[(630), int32]) -> (Tensor[(5, 1, 9), float32], Tensor[(900), bool], Tensor[(1320), float32], Tensor[(2, 588), float32], Tensor[(630), int32], Tensor[(2, 144), float64], Tensor[(3, 7, 7), float32]) {
  %37 = cast(%var_6172, dtype="bool") /* ty=Tensor[(900), bool] */;
  %38 = cast(meta[relay.Constant][4] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %39 = cast(%var_6174, dtype="float32") /* ty=Tensor[(2, 588), float32] */;
  %40 = cast(%var_6172, dtype="bool") /* ty=Tensor[(900), bool] */;
  %41 = cast(%var_6175, dtype="int32") /* ty=Tensor[(630), int32] */;
  %42 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 144), float64] */, dtype="float64") /* ty=Tensor[(2, 144), float64] */;
  %43 = cast(%var_6172, dtype="float64") /* ty=Tensor[(900), float64] */;
  %44 = reshape(%37, newshape=[3, 300]) /* ty=Tensor[(3, 300), bool] */;
  %45 = reshape(%38, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %46 = reshape(%39, newshape=[84, 14]) /* ty=Tensor[(84, 14), float32] */;
  %47 = reshape(%40, newshape=[3, 300]) /* ty=Tensor[(3, 300), bool] */;
  %48 = reshape(%41, newshape=[5, 126]) /* ty=Tensor[(5, 126), int32] */;
  %49 = reshape(%42, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %50 = reshape(%43, newshape=[3, 300]) /* ty=Tensor[(3, 300), float64] */;
  %51 = @func_5498(%44, %45, %46, %47, %48, %49, %50) /* ty=(Tensor[(1320), float32], Tensor[(84, 14), float32], Tensor[(5, 375, 9), bool], Tensor[(?, 375), bool], Tensor[(5, 1, 9), float32], Tensor[(5, 126), int32], Tensor[(12, 8, 3), float32], Tensor[(288), float64], Tensor[(3, 300), int16]) */;
  %52 = cast(%var_6164, dtype="float64") /* ty=Tensor[(3, 7, 7), float64] */;
  %53 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(3, 7, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %54 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 7, 7), float64] */, dtype="float64") /* ty=Tensor[(3, 7, 7), float64] */;
  %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %56 = power(%54, %55) /* ty=Tensor[(3, 7, 7), float64] */;
  %57 = cast(%56, dtype="float32") /* ty=Tensor[(3, 7, 7), float32] */;
  %58 = %51.4;
  %59 = atan(%57) /* ty=Tensor[(3, 7, 7), float32] */;
  (%58, %var_6172, meta[relay.Constant][4] /* ty=Tensor[(1320), float32] */, %var_6174, %var_6175, meta[relay.Constant][5] /* ty=Tensor[(2, 144), float64] */, %59)
}

def @func_212(%var_211: Tensor[(2, 8, 6), float32]) -> Tensor[(2, 8, 6), float32] {
  %61 = fn (%var_202: Tensor[(2, 8, 6), float32]) -> Tensor[(2, 8, 6), float32] {
    %60 = cast(%var_202, dtype="float32") /* ty=Tensor[(2, 8, 6), float32] */;
    tan(%60) /* ty=Tensor[(2, 8, 6), float32] */
  };
  %61(%var_211) /* ty=Tensor[(2, 8, 6), float32] */
}

def @func_4106() -> (Tensor[(5, 1, 9), float32],) {
  %63 = fn () -> (Tensor[(5, 1, 9), float32],) {
    %62 = @func_3868() /* ty=Tensor[(5, 1, 9), float32] */;
    (%62,)
  };
  %63() /* ty=(Tensor[(5, 1, 9), float32],) */
}

def @func_822(%var_806: Tensor[(15, 5, 5), float64], %var_811: Tensor[(15, 5, 5), float64]) -> (Tensor[(15, 5, 5), bool], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32]) {
  %64 = cast(%var_806, dtype="float64") /* ty=Tensor[(15, 5, 5), float64] */;
  %65 = cos(%64) /* ty=Tensor[(15, 5, 5), float64] */;
  %66 = cast(%var_811, dtype="bool") /* ty=Tensor[(15, 5, 5), bool] */;
  %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(3), int32] */;
  %68 = cast(%65, dtype="bool") /* ty=Tensor[(15, 5, 5), bool] */;
  %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %70 = cast(meta[relay.Constant][7] /* ty=Tensor[(1456), float64] */, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %71 = cast(meta[relay.Constant][8] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
  %72 = reshape(%70, newshape=[13, 7, 16]) /* ty=Tensor[(13, 7, 16), float64] */;
  %73 = reshape(%71, newshape=[3, 117]) /* ty=Tensor[(3, 117), float32] */;
  %74 = @func_58(%72, %73) /* ty=(Tensor[(13, 7, 16), float64], Tensor[(3, 13, 9), float32], Tensor[(3, 117), float32]) */;
  %75 = not_equal(%68, %69) /* ty=Tensor[(15, 5, 5), bool] */;
  %76 = %74.1;
  (%75, %76, meta[relay.Constant][7] /* ty=Tensor[(1456), float64] */, meta[relay.Constant][8] /* ty=Tensor[(351), float32] */)
}

def @func_4650(%var_4642: Tensor[(14, 14, 12), float32], %var_4643: Tensor[(1176), float32], %var_4644: Tensor[(1320), float32], %var_4645: Tensor[(48), float64], %var_4646: Tensor[(208), float32], %var_4647: Tensor[(1456), float64], %var_4648: Tensor[(630), int32], %var_4649: Tensor[(208), float32]) -> (Tensor[(5, 2, 9), bool], Tensor[(1176), float32], Tensor[(1320), float32], Tensor[(375), float64], Tensor[(5, 1, 9), float32], Tensor[(16, 1, 3), float64], Tensor[(48), float64], Tensor[(351), float32], Tensor[(3, 13, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), bool], Tensor[(14, 14, 12), int64], Tensor[(96), float32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(208), int8]) {
  %132 = fn (%var_4502: Tensor[(14, 14, 12), float32], %var_4512: Tensor[(1176), float32], %var_4523: Tensor[(1320), float32], %var_4569: Tensor[(48), float64], %var_4570: Tensor[(208), float32], %var_4617: Tensor[(1456), float64], %var_4626: Tensor[(630), int32], %var_4631: Tensor[(208), float32]) -> (Tensor[(5, 2, 9), bool], Tensor[(1176), float32], Tensor[(1320), float32], Tensor[(375), float64], Tensor[(5, 1, 9), float32], Tensor[(16, 1, 3), float64], Tensor[(48), float64], Tensor[(351), float32], Tensor[(3, 13, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), bool], Tensor[(14, 14, 12), int64], Tensor[(96), float32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(208), int8]) {
    %77 = cast(%var_4512, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %78 = reshape(%77, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
    %79 = @func_4452(%78) /* ty=(Tensor[(5, 2, 9), bool], Tensor[(3, 13, 9), float32], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(96), float32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(14, 9, 5), int32], Tensor[(375), float64]) */;
    %80 = cast(%var_4569, dtype="float64") /* ty=Tensor[(48), float64] */;
    %81 = cast(%var_4570, dtype="float32") /* ty=Tensor[(208), float32] */;
    %82 = cast(%var_4523, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %83 = cast(%var_4512, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %84 = cast(meta[relay.Constant][9] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
    %85 = reshape(%82, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
    %86 = reshape(%83, newshape=[588, 2]) /* ty=Tensor[(588, 2), float32] */;
    %87 = reshape(%84, newshape=[1, 375]) /* ty=Tensor[(1, 375), float64] */;
    %88 = @func_1165(%85, %86, %87) /* ty=(Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) */;
    %89 = %88.3;
    %90 = cast(%89, dtype="float64") /* ty=Tensor[(1456), float64] */;
    %91 = cast(meta[relay.Constant][10] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
    %92 = reshape(%80, newshape=[16, 1, 3]) /* ty=Tensor[(16, 1, 3), float64] */;
    %93 = reshape(%81, newshape=[208]) /* ty=Tensor[(208), float32] */;
    %94 = reshape(%90, newshape=[1456]) /* ty=Tensor[(1456), float64] */;
    %95 = reshape(%91, newshape=[351]) /* ty=Tensor[(351), float32] */;
    %96 = @func_1629(%92, %93, %94, %95) /* ty=(Tensor[(16, ?, 3), float32], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(16, ?, 3), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(13, 8, 2), float32], Tensor[(16, 1, 3), float64]) */;
    %97 = cast(meta[relay.Constant][9] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
    %98 = cast(meta[relay.Constant][9] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
    %99 = reshape(%97, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
    %100 = reshape(%98, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
    %101 = @func_822(%99, %100) /* ty=(Tensor[(15, 5, 5), bool], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32]) */;
    %102 = %101.1;
    %103 = cast(%102, dtype="float32") /* ty=Tensor[(3, 13, 9), float32] */;
    %104 = cast(%var_4617, dtype="bool") /* ty=Tensor[(1456), bool] */;
    %105 = shape_of(%89, dtype="int32") /* ty=Tensor[(1), int32] */;
    %106 = cast(%89, dtype="bool") /* ty=Tensor[(1456), bool] */;
    %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?), bool] */;
    %108 = cast(%var_4502, dtype="float32") /* ty=Tensor[(14, 14, 12), float32] */;
    %109 = rsqrt(%108) /* ty=Tensor[(14, 14, 12), float32] */;
    %110 = cast(%var_4502, dtype="int64") /* ty=Tensor[(14, 14, 12), int64] */;
    %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
    %112 = cast(%109, dtype="int64") /* ty=Tensor[(14, 14, 12), int64] */;
    %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %114 = cast(%var_4626, dtype="int32") /* ty=Tensor[(630), int32] */;
    %115 = cast(meta[relay.Constant][11] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %116 = reshape(%114, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), int32] */;
    %117 = reshape(%115, newshape=[96]) /* ty=Tensor[(96), float32] */;
    %118 = @func_2284(%116, %117) /* ty=(Tensor[(14, 9, 5), int32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
    %119 = cast(%var_4631, dtype="int8") /* ty=Tensor[(208), int8] */;
    %120 = shape_of(%var_4570, dtype="int32") /* ty=Tensor[(1), int32] */;
    %121 = cast(%var_4570, dtype="int8") /* ty=Tensor[(208), int8] */;
    %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?), int8] */;
    %123 = %79.0;
    %124 = @func_4275() /* ty=Tensor[(5, 1, 9), float32] */;
    %125 = %96.10;
    %126 = rsqrt(%103) /* ty=Tensor[(3, 13, 9), float32] */;
    %127 = @func_4470() /* ty=Tensor[(5, 1, 9), float32] */;
    %128 = greater_equal(%106, %107) /* ty=Tensor[(1456), bool] */;
    %129 = bitwise_xor(%112, %113) /* ty=Tensor[(14, 14, 12), int64] */;
    %130 = %118.2;
    %131 = bitwise_xor(%121, %122) /* ty=Tensor[(208), int8] */;
    (%123, %var_4512, %var_4523, meta[relay.Constant][9] /* ty=Tensor[(375), float64] */, %124, %125, %var_4569, meta[relay.Constant][10] /* ty=Tensor[(351), float32] */, %126, %127, %128, %129, %130, %var_4626, meta[relay.Constant][11] /* ty=Tensor[(96), float32] */, %131)
  };
  %132(%var_4642, %var_4643, %var_4644, %var_4645, %var_4646, %var_4647, %var_4648, %var_4649) /* ty=(Tensor[(5, 2, 9), bool], Tensor[(1176), float32], Tensor[(1320), float32], Tensor[(375), float64], Tensor[(5, 1, 9), float32], Tensor[(16, 1, 3), float64], Tensor[(48), float64], Tensor[(351), float32], Tensor[(3, 13, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), bool], Tensor[(14, 14, 12), int64], Tensor[(96), float32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(208), int8]) */
}

def @func_4221(%var_4219: Tensor[(5, 14, 9), float32]) -> (Tensor[(5, 14, 9), bool], Tensor[(3, 13, 9), float32], Tensor[(1176), float32]) {
  @func_4218(%var_4219) /* ty=(Tensor[(5, 14, 9), bool], Tensor[(3, 13, 9), float32], Tensor[(1176), float32]) */
}

def @func_5657() -> (Tensor[(5, 1, 9), float64],) {
  %133 = @func_4105() /* ty=(Tensor[(5, 1, 9), float32],) */;
  %134 = %133.0;
  %135 = cast(%134, dtype="float64") /* ty=Tensor[(5, 1, 9), float64] */;
  %136 = sin(%135) /* ty=Tensor[(5, 1, 9), float64] */;
  (%136,)
}

def @func_6666(%var_6665: Tensor[(96), float32]) -> (Tensor[(5, 1, 9), float32], Tensor[(2, 8, 6), float64], Tensor[(5, 1, 9), float32]) {
  %147 = fn (%var_6649: Tensor[(96), float32]) -> (Tensor[(5, 1, 9), float32], Tensor[(2, 8, 6), float64], Tensor[(5, 1, 9), float32]) {
    %137 = cast(%var_6649, dtype="float32") /* ty=Tensor[(96), float32] */;
    %138 = reshape(%137, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
    %139 = @func_210(%138) /* ty=Tensor[(2, 8, 6), float32] */;
    %140 = cast(%var_6649, dtype="float64") /* ty=Tensor[(96), float64] */;
    %141 = shape_of(%139, dtype="int32") /* ty=Tensor[(3), int32] */;
    %142 = cast(%139, dtype="float64") /* ty=Tensor[(2, 8, 6), float64] */;
    %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %144 = @func_3868() /* ty=Tensor[(5, 1, 9), float32] */;
    %145 = mod(%142, %143) /* ty=Tensor[(2, 8, 6), float64] */;
    %146 = @func_6459() /* ty=Tensor[(5, 1, 9), float32] */;
    (%144, %145, %146)
  };
  %147(%var_6665) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(2, 8, 6), float64], Tensor[(5, 1, 9), float32]) */
}

def @func_5800(%var_5772: Tensor[(12, 9, 13), float64]) -> Tensor[(12, 9, 13), float64] {
  %148 = cast(%var_5772, dtype="float64") /* ty=Tensor[(12, 9, 13), float64] */;
  sigmoid(%148) /* ty=Tensor[(12, 9, 13), float64] */
}

def @func_6430(%var_6423: Tensor[(2352), float32], %var_6424: Tensor[(2, 588), float32], %var_6425: Tensor[(1320), float32], %var_6426: Tensor[(48), float64], %var_6427: Tensor[(208), float32], %var_6428: Tensor[(728, 2), float64], %var_6429: Tensor[(210, 3), int32]) -> (Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(252, 2), int16], Tensor[(5, ?, 9), bool], Tensor[(1176), float32], Tensor[(2352), float32], Tensor[(2, 588), float32], Tensor[(1320), float32], Tensor[(48), float64], Tensor[(208), float32], Tensor[(728, 2), float64], Tensor[(210, 3), int32]) {
  @func_6421(%var_6423, %var_6424, %var_6425, %var_6426, %var_6427, %var_6428, %var_6429) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(252, 2), int16], Tensor[(5, ?, 9), bool], Tensor[(1176), float32], Tensor[(2352), float32], Tensor[(2, 588), float32], Tensor[(1320), float32], Tensor[(48), float64], Tensor[(208), float32], Tensor[(728, 2), float64], Tensor[(210, 3), int32]) */
}

def @func_7261(%var_7230: Tensor[(1320), float32]) -> (Tensor[(5, 1, 9), float32], Tensor[(1320), float32], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(6, 196), float32]) {
  %149 = cast(meta[relay.Constant][12] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %150 = cast(%var_7230, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %151 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 196), float32] */, dtype="float32") /* ty=Tensor[(6, 196), float32] */;
  %152 = reshape(%149, newshape=[630]) /* ty=Tensor[(630), int32] */;
  %153 = reshape(%150, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %154 = reshape(%151, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %155 = @func_4030(%152, %153, %154) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(14, 9, 5), int32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(1, 375), float64], Tensor[(1, 375), float64], Tensor[(7, 8, 9), int16], Tensor[(5, 1, 9), float32]) */;
  %156 = @func_4470() /* ty=Tensor[(5, 1, 9), float32] */;
  %157 = %155.6;
  (%156, %157, meta[relay.Constant][12] /* ty=Tensor[(630), int32] */, %var_7230, meta[relay.Constant][13] /* ty=Tensor[(6, 196), float32] */)
}

def @func_3835() -> (Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(504), int16]) {
  %166 = fn () -> (Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(504), int16]) {
    %158 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
    %159 = cast(meta[relay.Constant][14] /* ty=Tensor[(504), int16] */, dtype="int16") /* ty=Tensor[(504), int16] */;
    %160 = cast(meta[relay.Constant][14] /* ty=Tensor[(504), int16] */, dtype="int16") /* ty=Tensor[(504), int16] */;
    %161 = reshape(%159, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), int16] */;
    %162 = reshape(%160, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), int16] */;
    %163 = @func_997(%161, %162) /* ty=(Tensor[(7, 8, 9), int16],) */;
    %164 = %158.1;
    %165 = %163.0;
    (%164, %165, meta[relay.Constant][14] /* ty=Tensor[(504), int16] */)
  };
  %166() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(504), int16]) */
}

def @func_5264(%var_5261: Tensor[(1320), float32], %var_5262: Tensor[(125, 3), float64], %var_5263: Tensor[(135), uint32]) -> (Tensor[(5, 2, 9), bool], Tensor[(5, 2, 9), bool], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(125, 3), float64], Tensor[(9, 3, 5), uint32], Tensor[(135), uint32], Tensor[(5, 2, 9), bool], Tensor[(7, 14, 9), float64], Tensor[(294, 3), float64]) {
  %187 = fn (%var_5235: Tensor[(1320), float32], %var_5237: Tensor[(125, 3), float64], %var_5242: Tensor[(135), uint32]) -> (Tensor[(5, 2, 9), bool], Tensor[(5, 2, 9), bool], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(125, 3), float64], Tensor[(9, 3, 5), uint32], Tensor[(135), uint32], Tensor[(5, 2, 9), bool], Tensor[(7, 14, 9), float64], Tensor[(294, 3), float64]) {
    %167 = cast(%var_5235, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %168 = cast(meta[relay.Constant][15] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %169 = cast(%var_5237, dtype="float64") /* ty=Tensor[(125, 3), float64] */;
    %170 = reshape(%167, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
    %171 = reshape(%168, newshape=[588, 2]) /* ty=Tensor[(588, 2), float32] */;
    %172 = reshape(%169, newshape=[1, 375]) /* ty=Tensor[(1, 375), float64] */;
    %173 = @func_1165(%170, %171, %172) /* ty=(Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) */;
    %174 = cast(%var_5242, dtype="uint32") /* ty=Tensor[(135), uint32] */;
    %175 = cast(%var_5242, dtype="uint32") /* ty=Tensor[(135), uint32] */;
    %176 = reshape(%174, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), uint32] */;
    %177 = reshape(%175, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), uint32] */;
    %178 = cast(meta[relay.Constant][16] /* ty=Tensor[(294, 3), float64] */, dtype="float64") /* ty=Tensor[(294, 3), float64] */;
    %179 = reshape(%178, newshape=[7, 14, 9]) /* ty=Tensor[(7, 14, 9), float64] */;
    %180 = @func_1916(%179) /* ty=(Tensor[(7, 14, 9), float64], Tensor[(7, 14, 9), float64]) */;
    %181 = @func_4312() /* ty=Tensor[(5, 2, 9), bool] */;
    %182 = @func_4312() /* ty=Tensor[(5, 2, 9), bool] */;
    %183 = %173.3;
    %184 = @func_1078(%176, %177) /* ty=Tensor[(9, 3, 5), uint32] */;
    %185 = @func_4312() /* ty=Tensor[(5, 2, 9), bool] */;
    %186 = %180.0;
    (%181, %182, %183, %var_5235, meta[relay.Constant][15] /* ty=Tensor[(1176), float32] */, %var_5237, %184, %var_5242, %185, %186, meta[relay.Constant][16] /* ty=Tensor[(294, 3), float64] */)
  };
  %187(%var_5261, %var_5262, %var_5263) /* ty=(Tensor[(5, 2, 9), bool], Tensor[(5, 2, 9), bool], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(125, 3), float64], Tensor[(9, 3, 5), uint32], Tensor[(135), uint32], Tensor[(5, 2, 9), bool], Tensor[(7, 14, 9), float64], Tensor[(294, 3), float64]) */
}

def @func_5743() -> (Tensor[(5, 2, 9), bool],) {
  %188 = @func_4312() /* ty=Tensor[(5, 2, 9), bool] */;
  (%188,)
}

def @func_1039(%var_1037: Tensor[(14, 6, 11), float64], %var_1038: Tensor[(288), float64]) -> (Tensor[(14, 6, 11), float64], Tensor[(2, 8, 6), float32], Tensor[(288), float64]) {
  @func_1035(%var_1037, %var_1038) /* ty=(Tensor[(14, 6, 11), float64], Tensor[(2, 8, 6), float32], Tensor[(288), float64]) */
}

def @func_4351() -> (Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(1176), float32]) {
  @func_4349() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(1176), float32]) */
}

def @func_4888(%var_4875: Tensor[(4, 10, 16), float64]) -> (Tensor[(4, 10, 16), float64], Tensor[(5, 1, 9), float32]) {
  %189 = cast(%var_4875, dtype="float64") /* ty=Tensor[(4, 10, 16), float64] */;
  %190 = acosh(%189) /* ty=Tensor[(4, 10, 16), float64] */;
  %191 = @func_4275() /* ty=Tensor[(5, 1, 9), float32] */;
  (%190, %191)
}

def @func_7325(%var_7323: Tensor[(10, 14, 16), float32]) -> (Tensor[(10, 14, 16), float32],) {
  @func_7322(%var_7323) /* ty=(Tensor[(10, 14, 16), float32],) */
}

def @func_3869() -> Tensor[(5, 1, 9), float32] {
  %195 = fn () -> Tensor[(5, 1, 9), float32] {
    %192 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
    %193 = %192.1;
    %194 = cast(%193, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
    log(%194) /* ty=Tensor[(5, 1, 9), float32] */
  };
  %195() /* ty=Tensor[(5, 1, 9), float32] */
}

def @func_3116(%var_3114: Tensor[(8, 13, 2), float64], %var_3115: Tensor[(4, 24), float32]) -> (Tensor[(2, 8, 6), float32], Tensor[(4, 24), float32], Tensor[(8, 13, 2), float32]) {
  @func_3112(%var_3114, %var_3115) /* ty=(Tensor[(2, 8, 6), float32], Tensor[(4, 24), float32], Tensor[(8, 13, 2), float32]) */
}

def @func_997(%var_989: Tensor[(7, 8, 9), int16], %var_990: Tensor[(7, 8, 9), int16]) -> (Tensor[(7, 8, 9), int16],) {
  %196 = cast(%var_990, dtype="int16") /* ty=Tensor[(7, 8, 9), int16] */;
  %197 = shape_of(%var_989, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%var_989, dtype="int16") /* ty=Tensor[(7, 8, 9), int16] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %200 = bitwise_xor(%198, %199) /* ty=Tensor[(7, 8, 9), int16] */;
  (%200,)
}

def @func_7432() -> (Tensor[(10, 12, 13), float64], Tensor[(10, 12, 13), float64]) {
  @func_7430() /* ty=(Tensor[(10, 12, 13), float64], Tensor[(10, 12, 13), float64]) */
}

def @func_5114(%var_5109: Tensor[(11, 14, 2), int8], %var_5110: Tensor[(11, 14, 2), int8], %var_5111: Tensor[(1176), float32], %var_5112: Tensor[(900), bool], %var_5113: Tensor[(4, 24), float32]) -> (Tensor[(11, 14, 2), float64], Tensor[(14, 66), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64], Tensor[(504), int16], Tensor[(900, 1), bool], Tensor[(900), bool], Tensor[(2, 8, 6), float32], Tensor[(630), int32], Tensor[(4, 24), float32]) {
  %234 = fn (%var_5071: Tensor[(11, 14, 2), int8], %var_5072: Tensor[(11, 14, 2), int8], %var_5086: Tensor[(1176), float32], %var_5098: Tensor[(900), bool], %var_5104: Tensor[(4, 24), float32]) -> (Tensor[(11, 14, 2), float64], Tensor[(14, 66), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64], Tensor[(504), int16], Tensor[(900, 1), bool], Tensor[(900), bool], Tensor[(2, 8, 6), float32], Tensor[(630), int32], Tensor[(4, 24), float32]) {
    %201 = cast(%var_5072, dtype="bool") /* ty=Tensor[(11, 14, 2), bool] */;
    %202 = shape_of(%var_5071, dtype="int32") /* ty=Tensor[(3), int32] */;
    %203 = cast(%var_5071, dtype="bool") /* ty=Tensor[(11, 14, 2), bool] */;
    %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %205 = greater(%203, %204) /* ty=Tensor[(11, 14, 2), bool] */;
    %206 = cast(%205, dtype="float64") /* ty=Tensor[(11, 14, 2), float64] */;
    %207 = cast(meta[relay.Constant][17] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %208 = cast(%var_5086, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %209 = cast(meta[relay.Constant][18] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
    %210 = reshape(%207, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
    %211 = reshape(%208, newshape=[588, 2]) /* ty=Tensor[(588, 2), float32] */;
    %212 = reshape(%209, newshape=[1, 375]) /* ty=Tensor[(1, 375), float64] */;
    %213 = @func_1165(%210, %211, %212) /* ty=(Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) */;
    %214 = @func_3834() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(504), int16]) */;
    %215 = cast(%var_5098, dtype="bool") /* ty=Tensor[(900), bool] */;
    %216 = cast(meta[relay.Constant][17] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %217 = cast(%var_5086, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %218 = cast(meta[relay.Constant][18] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
    %219 = reshape(%215, newshape=[900, 1]) /* ty=Tensor[(900, 1), bool] */;
    %220 = reshape(%216, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
    %221 = reshape(%217, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
    %222 = reshape(%218, newshape=[375]) /* ty=Tensor[(375), float64] */;
    %223 = @func_4251(%219, %220, %221, %222) /* ty=(Tensor[(504), int16], Tensor[(1320), float32], Tensor[(900, 1), bool], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64]) */;
    %224 = cast(meta[relay.Constant][19] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
    %225 = cast(%var_5104, dtype="float32") /* ty=Tensor[(4, 24), float32] */;
    %226 = reshape(%224, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), int32] */;
    %227 = reshape(%225, newshape=[96]) /* ty=Tensor[(96), float32] */;
    %228 = @func_2284(%226, %227) /* ty=(Tensor[(14, 9, 5), int32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
    %229 = tan(%206) /* ty=Tensor[(11, 14, 2), float64] */;
    %230 = %213.7;
    %231 = %214.2;
    %232 = %223.2;
    %233 = %228.1;
    (%229, %230, meta[relay.Constant][17] /* ty=Tensor[(1320), float32] */, %var_5086, meta[relay.Constant][18] /* ty=Tensor[(375), float64] */, %231, %232, %var_5098, %233, meta[relay.Constant][19] /* ty=Tensor[(630), int32] */, %var_5104)
  };
  %234(%var_5109, %var_5110, %var_5111, %var_5112, %var_5113) /* ty=(Tensor[(11, 14, 2), float64], Tensor[(14, 66), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64], Tensor[(504), int16], Tensor[(900, 1), bool], Tensor[(900), bool], Tensor[(2, 8, 6), float32], Tensor[(630), int32], Tensor[(4, 24), float32]) */
}

def @func_6999(%var_6997: Tensor[(5, 12, 9), float32]) -> Tensor[(5, 12, 9), float64] {
  @func_6996(%var_6997) /* ty=Tensor[(5, 12, 9), float64] */
}

def @func_6112(%var_6110: Tensor[(819), float32], %var_6111: Tensor[(1176), float32]) -> (Tensor[(5, 1, 9), float32], Tensor[(135), uint32], Tensor[(819), float32], Tensor[(375), float64], Tensor[(630), int32], Tensor[(1176), float32]) {
  @func_6108(%var_6110, %var_6111) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(135), uint32], Tensor[(819), float32], Tensor[(375), float64], Tensor[(630), int32], Tensor[(1176), float32]) */
}

def @func_4891(%var_4889: Tensor[(4, 10, 16), float64]) -> (Tensor[(4, 10, 16), float64], Tensor[(5, 1, 9), float32]) {
  @func_4888(%var_4889) /* ty=(Tensor[(4, 10, 16), float64], Tensor[(5, 1, 9), float32]) */
}

def @func_5506(%var_5499: Tensor[(3, 300), bool], %var_5500: Tensor[(1320), float32], %var_5501: Tensor[(84, 14), float32], %var_5502: Tensor[(3, 300), bool], %var_5503: Tensor[(5, 126), int32], %var_5504: Tensor[(288), float64], %var_5505: Tensor[(3, 300), float64]) -> (Tensor[(1320), float32], Tensor[(84, 14), float32], Tensor[(5, 375, 9), bool], Tensor[(?, 375), bool], Tensor[(5, 1, 9), float32], Tensor[(5, 126), int32], Tensor[(12, 8, 3), float32], Tensor[(288), float64], Tensor[(3, 300), int16]) {
  %293 = fn (%var_5376: Tensor[(3, 300), bool], %var_5377: Tensor[(1320), float32], %var_5378: Tensor[(84, 14), float32], %var_5403: Tensor[(3, 300), bool], %var_5436: Tensor[(5, 126), int32], %var_5446: Tensor[(288), float64], %var_5471: Tensor[(3, 300), float64]) -> (Tensor[(1320), float32], Tensor[(84, 14), float32], Tensor[(5, 375, 9), bool], Tensor[(?, 375), bool], Tensor[(5, 1, 9), float32], Tensor[(5, 126), int32], Tensor[(12, 8, 3), float32], Tensor[(288), float64], Tensor[(3, 300), int16]) {
    %235 = @func_5035() /* ty=(Tensor[(5, ?, 9), bool],) */;
    %236 = %235.0;
    %237 = cast(%236, dtype="bool") /* ty=Tensor[(5, ?, 9), bool] */;
    %238 = cast(meta[relay.Constant][20] /* ty=Tensor[(375, 1), float64] */, dtype="bool") /* ty=Tensor[(375, 1), bool] */;
    %239 = cast(%var_5376, dtype="bool") /* ty=Tensor[(3, 300), bool] */;
    %240 = cast(%var_5376, dtype="bool") /* ty=Tensor[(3, 300), bool] */;
    %241 = cast(%var_5377, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %242 = cast(%var_5378, dtype="float32") /* ty=Tensor[(84, 14), float32] */;
    %243 = cast(meta[relay.Constant][20] /* ty=Tensor[(375, 1), float64] */, dtype="float64") /* ty=Tensor[(375, 1), float64] */;
    %244 = reshape(%239, newshape=[5, 12, 15]) /* ty=Tensor[(5, 12, 15), bool] */;
    %245 = reshape(%240, newshape=[5, 12, 15]) /* ty=Tensor[(5, 12, 15), bool] */;
    %246 = reshape(%241, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
    %247 = reshape(%242, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
    %248 = reshape(%243, newshape=[375]) /* ty=Tensor[(375), float64] */;
    %249 = @func_2096(%244, %245, %246, %247, %248) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(1, 375), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64]) */;
    %250 = %249.3;
    %251 = cast(meta[relay.Constant][20] /* ty=Tensor[(375, 1), float64] */, dtype="bool") /* ty=Tensor[(375, 1), bool] */;
    %252 = shape_of(%250, dtype="int32") /* ty=Tensor[(2), int32] */;
    %253 = cast(%250, dtype="bool") /* ty=Tensor[(1, 375), bool] */;
    %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %255 = cast(%var_5436, dtype="int32") /* ty=Tensor[(5, 126), int32] */;
    %256 = cast(%var_5377, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %257 = cast(%var_5378, dtype="float32") /* ty=Tensor[(84, 14), float32] */;
    %258 = reshape(%255, newshape=[630]) /* ty=Tensor[(630), int32] */;
    %259 = reshape(%256, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
    %260 = reshape(%257, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
    %261 = @func_4030(%258, %259, %260) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(14, 9, 5), int32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(1, 375), float64], Tensor[(1, 375), float64], Tensor[(7, 8, 9), int16], Tensor[(5, 1, 9), float32]) */;
    %262 = cast(%var_5446, dtype="float64") /* ty=Tensor[(288), float64] */;
    %263 = cast(%var_5446, dtype="float64") /* ty=Tensor[(288), float64] */;
    %264 = reshape(%262, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
    %265 = reshape(%263, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
    %266 = @func_350(%264, %265) /* ty=(Tensor[(12, 8, 3), float64], Tensor[(12, 8, 3), float32], Tensor[(12, 8, 3), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
    %267 = cast(%var_5403, dtype="float64") /* ty=Tensor[(3, 300), float64] */;
    %268 = atan(%267) /* ty=Tensor[(3, 300), float64] */;
    %269 = cast(%var_5471, dtype="uint16") /* ty=Tensor[(3, 300), uint16] */;
    %270 = shape_of(%268, dtype="int32") /* ty=Tensor[(2), int32] */;
    %271 = cast(%268, dtype="uint16") /* ty=Tensor[(3, 300), uint16] */;
    %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %273 = add(%271, %272) /* ty=Tensor[(3, 300), uint16] */;
    %274 = cast(%var_5403, dtype="float32") /* ty=Tensor[(3, 300), float32] */;
    %275 = shape_of(%var_5376, dtype="int32") /* ty=Tensor[(2), int32] */;
    %276 = cast(%var_5376, dtype="float32") /* ty=Tensor[(3, 300), float32] */;
    %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %278 = power(%276, %277) /* ty=Tensor[(3, 300), float32] */;
    %279 = cast(%278, dtype="uint8") /* ty=Tensor[(3, 300), uint8] */;
    %280 = shape_of(%268, dtype="int32") /* ty=Tensor[(2), int32] */;
    %281 = cast(%268, dtype="uint8") /* ty=Tensor[(3, 300), uint8] */;
    %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %283 = multiply(%281, %282) /* ty=Tensor[(3, 300), uint8] */;
    %284 = cast(%283, dtype="int16") /* ty=Tensor[(3, 300), int16] */;
    %285 = shape_of(%273, dtype="int32") /* ty=Tensor[(2), int32] */;
    %286 = cast(%273, dtype="int16") /* ty=Tensor[(3, 300), int16] */;
    %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %288 = equal(%237, %238) /* ty=Tensor[(5, 375, 9), bool] */;
    %289 = greater(%253, %254) /* ty=Tensor[(?, 375), bool] */;
    %290 = %261.4;
    %291 = %266.1;
    %292 = bitwise_and(%286, %287) /* ty=Tensor[(3, 300), int16] */;
    (%var_5377, %var_5378, %288, %289, %290, %var_5436, %291, %var_5446, %292)
  };
  %293(%var_5499, %var_5500, %var_5501, %var_5502, %var_5503, %var_5504, %var_5505) /* ty=(Tensor[(1320), float32], Tensor[(84, 14), float32], Tensor[(5, 375, 9), bool], Tensor[(?, 375), bool], Tensor[(5, 1, 9), float32], Tensor[(5, 126), int32], Tensor[(12, 8, 3), float32], Tensor[(288), float64], Tensor[(3, 300), int16]) */
}

def @func_1918(%var_1917: Tensor[(7, 14, 9), float64]) -> (Tensor[(7, 14, 9), float64], Tensor[(7, 14, 9), float64]) {
  %303 = fn (%var_1901: Tensor[(7, 14, 9), float64]) -> (Tensor[(7, 14, 9), float64], Tensor[(7, 14, 9), float64]) {
    %294 = cast(%var_1901, dtype="float64") /* ty=Tensor[(7, 14, 9), float64] */;
    %295 = cast(%var_1901, dtype="float64") /* ty=Tensor[(7, 14, 9), float64] */;
    %296 = sigmoid(%295) /* ty=Tensor[(7, 14, 9), float64] */;
    %297 = cast(%var_1901, dtype="float64") /* ty=Tensor[(7, 14, 9), float64] */;
    %298 = shape_of(%296, dtype="int32") /* ty=Tensor[(3), int32] */;
    %299 = cast(%296, dtype="float64") /* ty=Tensor[(7, 14, 9), float64] */;
    %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %301 = log(%294) /* ty=Tensor[(7, 14, 9), float64] */;
    %302 = floor_divide(%299, %300) /* ty=Tensor[(7, 14, 9), float64] */;
    (%301, %302)
  };
  %303(%var_1917) /* ty=(Tensor[(7, 14, 9), float64], Tensor[(7, 14, 9), float64]) */
}

def @func_6212() -> (Tensor[(5, 1, 9), float32],) {
  %306 = fn () -> (Tensor[(5, 1, 9), float32],) {
    %304 = @func_5941() /* ty=(Tensor[(5, 1, 9), float32],) */;
    %305 = %304.0;
    (%305,)
  };
  %306() /* ty=(Tensor[(5, 1, 9), float32],) */
}

def @func_4218(%var_4137: Tensor[(5, 14, 9), float32]) -> (Tensor[(5, 14, 9), bool], Tensor[(3, 13, 9), float32], Tensor[(1176), float32]) {
  %307 = @func_4105() /* ty=(Tensor[(5, 1, 9), float32],) */;
  %308 = %307.0;
  %309 = cast(%308, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
  %310 = erf(%309) /* ty=Tensor[(5, 1, 9), float32] */;
  %311 = cast(%308, dtype="int16") /* ty=Tensor[(5, 1, 9), int16] */;
  %312 = cast(%var_4137, dtype="int16") /* ty=Tensor[(5, 14, 9), int16] */;
  %313 = maximum(%311, %312) /* ty=Tensor[(5, 14, 9), int16] */;
  %314 = cast(%310, dtype="bool") /* ty=Tensor[(5, 1, 9), bool] */;
  %315 = cast(%313, dtype="bool") /* ty=Tensor[(5, 14, 9), bool] */;
  %316 = cast(meta[relay.Constant][21] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %317 = reshape(%316, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float32] */;
  %318 = @func_145(%317) /* ty=(Tensor[(12, 7, 14), float32], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(3, 13, 9), float32]) */;
  %319 = logical_or(%314, %315) /* ty=Tensor[(5, 14, 9), bool] */;
  %320 = %318.1;
  (%319, %320, meta[relay.Constant][21] /* ty=Tensor[(1176), float32] */)
}

def @func_5154() -> (Tensor[(504), int16],) {
  %321 = @func_3834() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(504), int16]) */;
  %322 = %321.2;
  (%322,)
}

def @func_7381(%var_7379: Tensor[(7, 2, 6), int8], %var_7380: Tensor[(7, 2, 6), int8]) -> (Tensor[(7, 2, 6), uint64],) {
  @func_7377(%var_7379, %var_7380) /* ty=(Tensor[(7, 2, 6), uint64],) */
}

def @func_4256(%var_4252: Tensor[(900, 1), bool], %var_4253: Tensor[(1320), float32], %var_4254: Tensor[(1176), float32], %var_4255: Tensor[(375), float64]) -> (Tensor[(504), int16], Tensor[(1320), float32], Tensor[(900, 1), bool], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64]) {
  %337 = fn (%var_4241: Tensor[(900, 1), bool], %var_4242: Tensor[(1320), float32], %var_4243: Tensor[(1176), float32], %var_4244: Tensor[(375), float64]) -> (Tensor[(504), int16], Tensor[(1320), float32], Tensor[(900, 1), bool], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64]) {
    %323 = @func_3834() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(504), int16]) */;
    %324 = cast(%var_4241, dtype="bool") /* ty=Tensor[(900, 1), bool] */;
    %325 = cast(%var_4241, dtype="bool") /* ty=Tensor[(900, 1), bool] */;
    %326 = cast(%var_4242, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %327 = cast(%var_4243, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %328 = cast(%var_4244, dtype="float64") /* ty=Tensor[(375), float64] */;
    %329 = reshape(%324, newshape=[5, 12, 15]) /* ty=Tensor[(5, 12, 15), bool] */;
    %330 = reshape(%325, newshape=[5, 12, 15]) /* ty=Tensor[(5, 12, 15), bool] */;
    %331 = reshape(%326, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
    %332 = reshape(%327, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
    %333 = reshape(%328, newshape=[375]) /* ty=Tensor[(375), float64] */;
    %334 = @func_2096(%329, %330, %331, %332, %333) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(1, 375), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64]) */;
    %335 = %323.2;
    %336 = %334.4;
    (%335, %336, %var_4241, %var_4242, %var_4243, %var_4244)
  };
  %337(%var_4252, %var_4253, %var_4254, %var_4255) /* ty=(Tensor[(504), int16], Tensor[(1320), float32], Tensor[(900, 1), bool], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64]) */
}

def @func_5830() -> (Tensor[(5, 1, 9), float32],) {
  @func_5828() /* ty=(Tensor[(5, 1, 9), float32],) */
}

def @func_3698() -> (Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) {
  %338 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 1, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
  %339 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 1, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
  %340 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 1, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
  %341 = exp(%338) /* ty=Tensor[(5, 1, 9), float32] */;
  %342 = log2(%339) /* ty=Tensor[(5, 1, 9), float32] */;
  %343 = atan(%340) /* ty=Tensor[(5, 1, 9), float32] */;
  (%341, %342, %343)
}

def @func_5314(%var_5276: Tensor[(9, 13, 7), float32], %var_5294: Tensor[(375), float64]) -> (Tensor[(135), uint32], Tensor[(60, 22), float32], Tensor[(375), float64], Tensor[(135), uint32], Tensor[(9, 13, 7), bool]) {
  %344 = cast(meta[relay.Constant][23] /* ty=Tensor[(60, 22), float32] */, dtype="float32") /* ty=Tensor[(60, 22), float32] */;
  %345 = cast(%var_5294, dtype="float64") /* ty=Tensor[(375), float64] */;
  %346 = cast(meta[relay.Constant][24] /* ty=Tensor[(135), uint32] */, dtype="uint32") /* ty=Tensor[(135), uint32] */;
  %347 = reshape(%344, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %348 = reshape(%345, newshape=[125, 3]) /* ty=Tensor[(125, 3), float64] */;
  %349 = reshape(%346, newshape=[135]) /* ty=Tensor[(135), uint32] */;
  %350 = @func_5260(%347, %348, %349) /* ty=(Tensor[(5, 2, 9), bool], Tensor[(5, 2, 9), bool], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(125, 3), float64], Tensor[(9, 3, 5), uint32], Tensor[(135), uint32], Tensor[(5, 2, 9), bool], Tensor[(7, 14, 9), float64], Tensor[(294, 3), float64]) */;
  %351 = cast(%var_5276, dtype="float32") /* ty=Tensor[(9, 13, 7), float32] */;
  %352 = sinh(%351) /* ty=Tensor[(9, 13, 7), float32] */;
  %353 = cast(%352, dtype="float64") /* ty=Tensor[(9, 13, 7), float64] */;
  %354 = atan(%353) /* ty=Tensor[(9, 13, 7), float64] */;
  %355 = cast(%352, dtype="float32") /* ty=Tensor[(9, 13, 7), float32] */;
  %356 = shape_of(%var_5276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%var_5276, dtype="float32") /* ty=Tensor[(9, 13, 7), float32] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %359 = mod(%357, %358) /* ty=Tensor[(9, 13, 7), float32] */;
  %360 = cast(%359, dtype="bool") /* ty=Tensor[(9, 13, 7), bool] */;
  %361 = shape_of(%354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%354, dtype="bool") /* ty=Tensor[(9, 13, 7), bool] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %364 = %350.7;
  %365 = greater_equal(%362, %363) /* ty=Tensor[(9, 13, 7), bool] */;
  (%364, meta[relay.Constant][23] /* ty=Tensor[(60, 22), float32] */, %var_5294, meta[relay.Constant][24] /* ty=Tensor[(135), uint32] */, %365)
}

def @func_4030(%var_3953: Tensor[(630), int32], %var_3980: Tensor[(1320), float32], %var_3981: Tensor[(1176), float32]) -> (Tensor[(5, 1, 9), float32], Tensor[(14, 9, 5), int32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(1, 375), float64], Tensor[(1, 375), float64], Tensor[(7, 8, 9), int16], Tensor[(5, 1, 9), float32]) {
  %366 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
  %367 = cast(%var_3953, dtype="int32") /* ty=Tensor[(630), int32] */;
  %368 = cast(meta[relay.Constant][25] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %369 = reshape(%367, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), int32] */;
  %370 = reshape(%368, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %371 = @func_2284(%369, %370) /* ty=(Tensor[(14, 9, 5), int32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
  %372 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
  %373 = cast(%var_3980, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %374 = cast(%var_3981, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %375 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 375), float64] */, dtype="float64") /* ty=Tensor[(1, 375), float64] */;
  %376 = reshape(%373, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
  %377 = reshape(%374, newshape=[588, 2]) /* ty=Tensor[(588, 2), float32] */;
  %378 = reshape(%375, newshape=[1, 375]) /* ty=Tensor[(1, 375), float64] */;
  %379 = @func_1165(%376, %377, %378) /* ty=(Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) */;
  %380 = cast(%var_3980, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %381 = cast(%var_3981, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %382 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 375), float64] */, dtype="float64") /* ty=Tensor[(1, 375), float64] */;
  %383 = reshape(%380, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
  %384 = reshape(%381, newshape=[588, 2]) /* ty=Tensor[(588, 2), float32] */;
  %385 = reshape(%382, newshape=[1, 375]) /* ty=Tensor[(1, 375), float64] */;
  %386 = @func_1165(%383, %384, %385) /* ty=(Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) */;
  %387 = @func_3834() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(504), int16]) */;
  %388 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
  %389 = %366.1;
  %390 = %371.0;
  %391 = %372.1;
  %392 = %379.3;
  %393 = %386.4;
  %394 = %387.1;
  %395 = %388.2;
  (%389, %390, %var_3953, meta[relay.Constant][25] /* ty=Tensor[(96), float32] */, %391, %392, %var_3980, %var_3981, meta[relay.Constant][26] /* ty=Tensor[(1, 375), float64] */, %393, %394, %395)
}

def @func_6225() -> (Tensor[(5, 1, 9), float32],) {
  %398 = fn () -> (Tensor[(5, 1, 9), float32],) {
    %396 = @func_6211() /* ty=(Tensor[(5, 1, 9), float32],) */;
    %397 = %396.0;
    (%397,)
  };
  %398() /* ty=(Tensor[(5, 1, 9), float32],) */
}

def @func_5909(%var_5908: Tensor[(480, 1), uint64]) -> (Tensor[(5, 2, 9), float64], Tensor[(12, 8, 5), uint32], Tensor[(480, 1), uint64]) {
  %406 = fn (%var_5905: Tensor[(480, 1), uint64]) -> (Tensor[(5, 2, 9), float64], Tensor[(12, 8, 5), uint32], Tensor[(480, 1), uint64]) {
    %399 = @func_5743() /* ty=(Tensor[(5, 2, 9), bool],) */;
    %400 = %399.0;
    %401 = cast(%400, dtype="float64") /* ty=Tensor[(5, 2, 9), float64] */;
    %402 = cast(%var_5905, dtype="uint64") /* ty=Tensor[(480, 1), uint64] */;
    %403 = reshape(%402, newshape=[12, 8, 5]) /* ty=Tensor[(12, 8, 5), uint64] */;
    %404 = atanh(%401) /* ty=Tensor[(5, 2, 9), float64] */;
    %405 = @func_2810(%403) /* ty=Tensor[(12, 8, 5), uint32] */;
    (%404, %405, %var_5905)
  };
  %406(%var_5908) /* ty=(Tensor[(5, 2, 9), float64], Tensor[(12, 8, 5), uint32], Tensor[(480, 1), uint64]) */
}

def @func_7322(%var_7286: Tensor[(10, 14, 16), float32]) -> (Tensor[(10, 14, 16), float32],) {
  %407 = cast(%var_7286, dtype="float32") /* ty=Tensor[(10, 14, 16), float32] */;
  %408 = sqrt(%407) /* ty=Tensor[(10, 14, 16), float32] */;
  %409 = cast(%408, dtype="float32") /* ty=Tensor[(10, 14, 16), float32] */;
  %410 = cos(%409) /* ty=Tensor[(10, 14, 16), float32] */;
  (%410,)
}

def @func_6951(%var_6949: Tensor[(13, 4, 13), float32]) -> (Tensor[(13, 4, 13), float32],) {
  @func_6948(%var_6949) /* ty=(Tensor[(13, 4, 13), float32],) */
}

def @func_4987(%var_4985: Tensor[(1320), float32], %var_4986: Tensor[(208), float32]) -> (Tensor[(1320), float32], Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(1176), float32], Tensor[(5, 1, 9), float32], Tensor[(640), float64], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(5, 2, 9), bool]) {
  @func_4983(%var_4985, %var_4986) /* ty=(Tensor[(1320), float32], Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(1176), float32], Tensor[(5, 1, 9), float32], Tensor[(640), float64], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(5, 2, 9), bool]) */
}

def @func_2810(%var_2791: Tensor[(12, 8, 5), uint64]) -> Tensor[(12, 8, 5), uint32] {
  %411 = cast(%var_2791, dtype="bool") /* ty=Tensor[(12, 8, 5), bool] */;
  %412 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(12, 8, 5), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 8, 5), uint64] */, dtype="bool") /* ty=Tensor[(12, 8, 5), bool] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %415 = greater(%413, %414) /* ty=Tensor[(12, 8, 5), bool] */;
  %416 = cast(%var_2791, dtype="uint32") /* ty=Tensor[(12, 8, 5), uint32] */;
  %417 = shape_of(%415, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%415, dtype="uint32") /* ty=Tensor[(12, 8, 5), uint32] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  maximum(%418, %419) /* ty=Tensor[(12, 8, 5), uint32] */
}

def @func_6203() -> Tensor[(5, 2, 9), bool] {
  @func_4312() /* ty=Tensor[(5, 2, 9), bool] */
}

def @func_5156() -> (Tensor[(504), int16],) {
  @func_5154() /* ty=(Tensor[(504), int16],) */
}

def @func_6300(%var_6298: Tensor[(640), float64]) -> (Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(640), float64], Tensor[(?, 1404), float32]) {
  @func_6297(%var_6298) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(640), float64], Tensor[(?, 1404), float32]) */
}

def @func_5712(%var_5707: Tensor[(3, 5, 6), float32]) -> (Tensor[(3, 5, 6), float32],) {
  %420 = cast(%var_5707, dtype="float32") /* ty=Tensor[(3, 5, 6), float32] */;
  %421 = sqrt(%420) /* ty=Tensor[(3, 5, 6), float32] */;
  (%421,)
}

def @func_6829() -> (Tensor[(5, 1, 9), float32], Tensor[(504), int16], Tensor[(7, 8, 9), float32], Tensor[(630), int32]) {
  %434 = fn () -> (Tensor[(5, 1, 9), float32], Tensor[(504), int16], Tensor[(7, 8, 9), float32], Tensor[(630), int32]) {
    %422 = @func_4349() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(1176), float32]) */;
    %423 = cast(meta[relay.Constant][28] /* ty=Tensor[(504), int16] */, dtype="int16") /* ty=Tensor[(504), int16] */;
    %424 = cast(meta[relay.Constant][28] /* ty=Tensor[(504), int16] */, dtype="int16") /* ty=Tensor[(504), int16] */;
    %425 = reshape(%423, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), int16] */;
    %426 = reshape(%424, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), int16] */;
    %427 = @func_997(%425, %426) /* ty=(Tensor[(7, 8, 9), int16],) */;
    %428 = %427.0;
    %429 = cast(%428, dtype="float32") /* ty=Tensor[(7, 8, 9), float32] */;
    %430 = @func_4349() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(1176), float32]) */;
    %431 = %422.0;
    %432 = atan(%429) /* ty=Tensor[(7, 8, 9), float32] */;
    %433 = %430.2;
    (%431, meta[relay.Constant][28] /* ty=Tensor[(504), int16] */, %432, %433)
  };
  %434() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(504), int16], Tensor[(7, 8, 9), float32], Tensor[(630), int32]) */
}

def @func_61(%var_59: Tensor[(13, 7, 16), float64], %var_60: Tensor[(3, 117), float32]) -> (Tensor[(13, 7, 16), float64], Tensor[(3, 13, 9), float32], Tensor[(3, 117), float32]) {
  %441 = fn (%var_45: Tensor[(13, 7, 16), float64], %var_53: Tensor[(3, 117), float32]) -> (Tensor[(13, 7, 16), float64], Tensor[(3, 13, 9), float32], Tensor[(3, 117), float32]) {
    %435 = cast(%var_45, dtype="float64") /* ty=Tensor[(13, 7, 16), float64] */;
    %436 = cast(%var_53, dtype="float32") /* ty=Tensor[(3, 117), float32] */;
    %437 = reshape(%436, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float32] */;
    %438 = @func_38(%437) /* ty=(Tensor[(3, 13, 9), float32],) */;
    %439 = asin(%435) /* ty=Tensor[(13, 7, 16), float64] */;
    %440 = %438.0;
    (%439, %440, %var_53)
  };
  %441(%var_59, %var_60) /* ty=(Tensor[(13, 7, 16), float64], Tensor[(3, 13, 9), float32], Tensor[(3, 117), float32]) */
}

def @func_4035(%var_4032: Tensor[(630), int32], %var_4033: Tensor[(1320), float32], %var_4034: Tensor[(1176), float32]) -> (Tensor[(5, 1, 9), float32], Tensor[(14, 9, 5), int32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(1, 375), float64], Tensor[(1, 375), float64], Tensor[(7, 8, 9), int16], Tensor[(5, 1, 9), float32]) {
  @func_4030(%var_4032, %var_4033, %var_4034) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(14, 9, 5), int32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(1, 375), float64], Tensor[(1, 375), float64], Tensor[(7, 8, 9), int16], Tensor[(5, 1, 9), float32]) */
}

def @func_350(%var_293: Tensor[(12, 8, 3), float64], %var_294: Tensor[(12, 8, 3), float64]) -> (Tensor[(12, 8, 3), float64], Tensor[(12, 8, 3), float32], Tensor[(12, 8, 3), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) {
  %442 = cast(%var_294, dtype="float64") /* ty=Tensor[(12, 8, 3), float64] */;
  %443 = shape_of(%var_293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%var_293, dtype="float64") /* ty=Tensor[(12, 8, 3), float64] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %446 = cast(%var_294, dtype="float32") /* ty=Tensor[(12, 8, 3), float32] */;
  %447 = cast(%var_293, dtype="float32") /* ty=Tensor[(12, 8, 3), float32] */;
  %448 = cast(meta[relay.Constant][29] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %449 = reshape(%448, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
  %450 = mod(%444, %445) /* ty=Tensor[(12, 8, 3), float64] */;
  %451 = sqrt(%446) /* ty=Tensor[(12, 8, 3), float32] */;
  %452 = atan(%447) /* ty=Tensor[(12, 8, 3), float32] */;
  %453 = @func_210(%449) /* ty=Tensor[(2, 8, 6), float32] */;
  (%450, %451, %452, %453, meta[relay.Constant][29] /* ty=Tensor[(96), float32] */)
}

def @func_1528(%var_1526: Tensor[(12, 42), int16], %var_1527: Tensor[(1456), float64]) -> (Tensor[(2, 16, 1), float64], Tensor[(7, 8, 9), int16], Tensor[(12, 42), int16], Tensor[(3, 117), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(14, 6, 11), float64], Tensor[(924), float64], Tensor[(288), float64], Tensor[(2, 16, 1), float64]) {
  @func_1524(%var_1526, %var_1527) /* ty=(Tensor[(2, 16, 1), float64], Tensor[(7, 8, 9), int16], Tensor[(12, 42), int16], Tensor[(3, 117), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(14, 6, 11), float64], Tensor[(924), float64], Tensor[(288), float64], Tensor[(2, 16, 1), float64]) */
}

def @func_4454(%var_4453: Tensor[(1176), float32]) -> (Tensor[(5, 2, 9), bool], Tensor[(3, 13, 9), float32], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(96), float32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(14, 9, 5), int32], Tensor[(375), float64]) {
  %481 = fn (%var_4396: Tensor[(1176), float32]) -> (Tensor[(5, 2, 9), bool], Tensor[(3, 13, 9), float32], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(96), float32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(14, 9, 5), int32], Tensor[(375), float64]) {
    %454 = cast(meta[relay.Constant][30] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %455 = cast(%var_4396, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %456 = cast(meta[relay.Constant][31] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
    %457 = reshape(%454, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
    %458 = reshape(%455, newshape=[588, 2]) /* ty=Tensor[(588, 2), float32] */;
    %459 = reshape(%456, newshape=[1, 375]) /* ty=Tensor[(1, 375), float64] */;
    %460 = @func_1165(%457, %458, %459) /* ty=(Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) */;
    %461 = cast(meta[relay.Constant][32] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
    %462 = cast(meta[relay.Constant][33] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %463 = reshape(%461, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), int32] */;
    %464 = reshape(%462, newshape=[96]) /* ty=Tensor[(96), float32] */;
    %465 = @func_2284(%463, %464) /* ty=(Tensor[(14, 9, 5), int32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
    %466 = cast(meta[relay.Constant][32] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
    %467 = cast(meta[relay.Constant][30] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %468 = cast(%var_4396, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %469 = reshape(%466, newshape=[630]) /* ty=Tensor[(630), int32] */;
    %470 = reshape(%467, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
    %471 = reshape(%468, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
    %472 = @func_4030(%469, %470, %471) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(14, 9, 5), int32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(1, 375), float64], Tensor[(1, 375), float64], Tensor[(7, 8, 9), int16], Tensor[(5, 1, 9), float32]) */;
    %473 = cast(meta[relay.Constant][31] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
    %474 = sinh(%473) /* ty=Tensor[(375), float64] */;
    %475 = cast(%474, dtype="float64") /* ty=Tensor[(375), float64] */;
    %476 = @func_4312() /* ty=Tensor[(5, 2, 9), bool] */;
    %477 = %460.1;
    %478 = %465.2;
    %479 = %472.1;
    %480 = log(%475) /* ty=Tensor[(375), float64] */;
    (%476, %477, meta[relay.Constant][30] /* ty=Tensor[(1320), float32] */, %var_4396, %478, meta[relay.Constant][32] /* ty=Tensor[(630), int32] */, meta[relay.Constant][33] /* ty=Tensor[(96), float32] */, %479, %480)
  };
  %481(%var_4453) /* ty=(Tensor[(5, 2, 9), bool], Tensor[(3, 13, 9), float32], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(96), float32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(14, 9, 5), int32], Tensor[(375), float64]) */
}

def @func_1035(%var_1026: Tensor[(14, 6, 11), float64], %var_1033: Tensor[(288), float64]) -> (Tensor[(14, 6, 11), float64], Tensor[(2, 8, 6), float32], Tensor[(288), float64]) {
  %482 = cast(%var_1026, dtype="float64") /* ty=Tensor[(14, 6, 11), float64] */;
  %483 = cast(%var_1033, dtype="float64") /* ty=Tensor[(288), float64] */;
  %484 = cast(%var_1033, dtype="float64") /* ty=Tensor[(288), float64] */;
  %485 = reshape(%483, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %486 = reshape(%484, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %487 = @func_350(%485, %486) /* ty=(Tensor[(12, 8, 3), float64], Tensor[(12, 8, 3), float32], Tensor[(12, 8, 3), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
  %488 = exp(%482) /* ty=Tensor[(14, 6, 11), float64] */;
  %489 = %487.3;
  (%488, %489, %var_1033)
}

def @func_4471() -> Tensor[(5, 1, 9), float32] {
  %490 = fn () -> Tensor[(5, 1, 9), float32] {
    @func_4373() /* ty=Tensor[(5, 1, 9), float32] */
  };
  %490() /* ty=Tensor[(5, 1, 9), float32] */
}

def @func_6297(%var_6257: Tensor[(640), float64]) -> (Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(640), float64], Tensor[(?, 1404), float32]) {
  %491 = cast(%var_6257, dtype="float64") /* ty=Tensor[(640), float64] */;
  %492 = reshape(%491, newshape=[4, 10, 16]) /* ty=Tensor[(4, 10, 16), float64] */;
  %493 = @func_4888(%492) /* ty=(Tensor[(4, 10, 16), float64], Tensor[(5, 1, 9), float32]) */;
  %494 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 1404), float64] */, dtype="float64") /* ty=Tensor[(1, 1404), float64] */;
  %495 = reshape(%494, newshape=[12, 9, 13]) /* ty=Tensor[(12, 9, 13), float64] */;
  %496 = @func_5800(%495) /* ty=Tensor[(12, 9, 13), float64] */;
  %497 = cast(%496, dtype="float32") /* ty=Tensor[(12, 9, 13), float32] */;
  %498 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(1, 1404), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %499 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 1404), float64] */, dtype="float32") /* ty=Tensor[(1, 1404), float32] */;
  %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %501 = @func_3868() /* ty=Tensor[(5, 1, 9), float32] */;
  %502 = %493.1;
  %503 = divide(%499, %500) /* ty=Tensor[(?, 1404), float32] */;
  (%501, %502, %var_6257, %503)
}

def @func_6329(%var_6328: Tensor[(208), float32]) -> (Tensor[(5, ?, 9), bool], Tensor[(13, 8, 2), float32], Tensor[(208), float32]) {
  %509 = fn (%var_6321: Tensor[(208), float32]) -> (Tensor[(5, ?, 9), bool], Tensor[(13, 8, 2), float32], Tensor[(208), float32]) {
    %504 = @func_5035() /* ty=(Tensor[(5, ?, 9), bool],) */;
    %505 = cast(%var_6321, dtype="float32") /* ty=Tensor[(208), float32] */;
    %506 = reshape(%505, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float32] */;
    %507 = %504.0;
    %508 = @func_1225(%506) /* ty=Tensor[(13, 8, 2), float32] */;
    (%507, %508, %var_6321)
  };
  %509(%var_6328) /* ty=(Tensor[(5, ?, 9), bool], Tensor[(13, 8, 2), float32], Tensor[(208), float32]) */
}

def @func_6948(%var_6942: Tensor[(13, 4, 13), float32]) -> (Tensor[(13, 4, 13), float32],) {
  %510 = cast(%var_6942, dtype="float32") /* ty=Tensor[(13, 4, 13), float32] */;
  %511 = cos(%510) /* ty=Tensor[(13, 4, 13), float32] */;
  (%511,)
}

def @func_4275() -> Tensor[(5, 1, 9), float32] {
  %512 = @func_3834() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(504), int16]) */;
  %513 = %512.0;
  %514 = cast(%513, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
  acos(%514) /* ty=Tensor[(5, 1, 9), float32] */
}

def @func_7377(%var_7357: Tensor[(7, 2, 6), int8], %var_7358: Tensor[(7, 2, 6), int8]) -> (Tensor[(7, 2, 6), uint64],) {
  %515 = cast(%var_7358, dtype="int8") /* ty=Tensor[(7, 2, 6), int8] */;
  %516 = shape_of(%var_7357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(%var_7357, dtype="int8") /* ty=Tensor[(7, 2, 6), int8] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %519 = bitwise_and(%517, %518) /* ty=Tensor[(7, 2, 6), int8] */;
  %520 = cast(%var_7358, dtype="uint64") /* ty=Tensor[(7, 2, 6), uint64] */;
  %521 = shape_of(%519, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%519, dtype="uint64") /* ty=Tensor[(7, 2, 6), uint64] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %524 = logical_xor(%522, %523) /* ty=Tensor[(7, 2, 6), uint64] */;
  (%524,)
}

def @func_2287(%var_2285: Tensor[(14, 9, 5), int32], %var_2286: Tensor[(96), float32]) -> (Tensor[(14, 9, 5), int32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) {
  %533 = fn (%var_2253: Tensor[(14, 9, 5), int32], %var_2273: Tensor[(96), float32]) -> (Tensor[(14, 9, 5), int32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) {
    %525 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 9, 5), int32] */, dtype="int32") /* ty=Tensor[(14, 9, 5), int32] */;
    %526 = shape_of(%var_2253, dtype="int32") /* ty=Tensor[(3), int32] */;
    %527 = cast(%var_2253, dtype="int32") /* ty=Tensor[(14, 9, 5), int32] */;
    %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %529 = cast(%var_2273, dtype="float32") /* ty=Tensor[(96), float32] */;
    %530 = reshape(%529, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
    %531 = minimum(%527, %528) /* ty=Tensor[(14, 9, 5), int32] */;
    %532 = @func_210(%530) /* ty=Tensor[(2, 8, 6), float32] */;
    (%531, %532, %var_2273)
  };
  %533(%var_2285, %var_2286) /* ty=(Tensor[(14, 9, 5), int32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */
}

def @func_6421(%var_6408: Tensor[(2352), float32], %var_6409: Tensor[(2, 588), float32], %var_6410: Tensor[(1320), float32], %var_6411: Tensor[(48), float64], %var_6412: Tensor[(208), float32], %var_6413: Tensor[(728, 2), float64], %var_6414: Tensor[(210, 3), int32]) -> (Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(252, 2), int16], Tensor[(5, ?, 9), bool], Tensor[(1176), float32], Tensor[(2352), float32], Tensor[(2, 588), float32], Tensor[(1320), float32], Tensor[(48), float64], Tensor[(208), float32], Tensor[(728, 2), float64], Tensor[(210, 3), int32]) {
  %534 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
  %535 = cast(meta[relay.Constant][36] /* ty=Tensor[(252, 2), int16] */, dtype="int16") /* ty=Tensor[(252, 2), int16] */;
  %536 = cast(meta[relay.Constant][36] /* ty=Tensor[(252, 2), int16] */, dtype="int16") /* ty=Tensor[(252, 2), int16] */;
  %537 = reshape(%535, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), int16] */;
  %538 = reshape(%536, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), int16] */;
  %539 = @func_997(%537, %538) /* ty=(Tensor[(7, 8, 9), int16],) */;
  %540 = @func_3798() /* ty=(Tensor[(5, ?, 9), bool], Tensor[(5, ?, 9), bool], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
  %541 = cast(%var_6408, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %542 = cast(%var_6409, dtype="float32") /* ty=Tensor[(2, 588), float32] */;
  %543 = cast(%var_6410, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %544 = cast(%var_6411, dtype="float64") /* ty=Tensor[(48), float64] */;
  %545 = cast(%var_6412, dtype="float32") /* ty=Tensor[(208), float32] */;
  %546 = cast(%var_6413, dtype="float64") /* ty=Tensor[(728, 2), float64] */;
  %547 = cast(%var_6414, dtype="int32") /* ty=Tensor[(210, 3), int32] */;
  %548 = cast(%var_6412, dtype="float32") /* ty=Tensor[(208), float32] */;
  %549 = reshape(%541, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), float32] */;
  %550 = reshape(%542, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %551 = reshape(%543, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %552 = reshape(%544, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %553 = reshape(%545, newshape=[208]) /* ty=Tensor[(208), float32] */;
  %554 = reshape(%546, newshape=[1456]) /* ty=Tensor[(1456), float64] */;
  %555 = reshape(%547, newshape=[630]) /* ty=Tensor[(630), int32] */;
  %556 = reshape(%548, newshape=[208]) /* ty=Tensor[(208), float32] */;
  %557 = @func_4641(%549, %550, %551, %552, %553, %554, %555, %556) /* ty=(Tensor[(5, 2, 9), bool], Tensor[(1176), float32], Tensor[(1320), float32], Tensor[(375), float64], Tensor[(5, 1, 9), float32], Tensor[(16, 1, 3), float64], Tensor[(48), float64], Tensor[(351), float32], Tensor[(3, 13, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), bool], Tensor[(14, 14, 12), int64], Tensor[(96), float32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(208), int8]) */;
  %558 = %534.0;
  %559 = %539.0;
  %560 = %540.0;
  %561 = %557.1;
  (%558, %559, meta[relay.Constant][36] /* ty=Tensor[(252, 2), int16] */, %560, %561, %var_6408, %var_6409, %var_6410, %var_6411, %var_6412, %var_6413, %var_6414)
}

def @func_5803(%var_5801: Tensor[(12, 9, 13), float64]) -> Tensor[(12, 9, 13), float64] {
  @func_5800(%var_5801) /* ty=Tensor[(12, 9, 13), float64] */
}

def @func_6878(%var_6877: Tensor[(480), float64]) -> (Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(5, 1, 9), float32], Tensor[(12, 4, 10), float64], Tensor[(480), float64]) {
  %574 = fn (%var_6871: Tensor[(480), float64]) -> (Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(5, 1, 9), float32], Tensor[(12, 4, 10), float64], Tensor[(480), float64]) {
    %562 = cast(meta[relay.Constant][37] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
    %563 = reshape(%562, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float32] */;
    %564 = @func_4470() /* ty=Tensor[(5, 1, 9), float32] */;
    %565 = cast(%564, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
    %566 = asin(%565) /* ty=Tensor[(5, 1, 9), float32] */;
    %567 = cast(%566, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
    %568 = cast(%var_6871, dtype="float64") /* ty=Tensor[(480), float64] */;
    %569 = reshape(%568, newshape=[12, 4, 10]) /* ty=Tensor[(12, 4, 10), float64] */;
    %570 = @func_5540(%569) /* ty=(Tensor[(12, 4, 10), float64],) */;
    %571 = @func_1225(%563) /* ty=Tensor[(13, 8, 2), float32] */;
    %572 = log10(%567) /* ty=Tensor[(5, 1, 9), float32] */;
    %573 = %570.0;
    (%571, meta[relay.Constant][37] /* ty=Tensor[(208), float32] */, %572, %573, %var_6871)
  };
  %574(%var_6877) /* ty=(Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(5, 1, 9), float32], Tensor[(12, 4, 10), float64], Tensor[(480), float64]) */
}

def @func_1810(%var_1805: Tensor[(7, 7, 10), int32], %var_1806: Tensor[(7, 7, 10), int32], %var_1807: Tensor[(288), float64], %var_1808: Tensor[(351), float32], %var_1809: Tensor[(7, 7, 10), float64]) -> (Tensor[(2, 8, 6), float32], Tensor[(288), float64], Tensor[(3, 13, 9), float32], Tensor[(351), float32], Tensor[(3, 13, 9), float32], Tensor[(3, 13, 9), float32], Tensor[(7, 7, 10), bool]) {
  %608 = fn (%var_1729: Tensor[(7, 7, 10), int32], %var_1730: Tensor[(7, 7, 10), int32], %var_1746: Tensor[(288), float64], %var_1768: Tensor[(351), float32], %var_1790: Tensor[(7, 7, 10), float64]) -> (Tensor[(2, 8, 6), float32], Tensor[(288), float64], Tensor[(3, 13, 9), float32], Tensor[(351), float32], Tensor[(3, 13, 9), float32], Tensor[(3, 13, 9), float32], Tensor[(7, 7, 10), bool]) {
    %575 = cast(%var_1746, dtype="float64") /* ty=Tensor[(288), float64] */;
    %576 = cast(%var_1746, dtype="float64") /* ty=Tensor[(288), float64] */;
    %577 = reshape(%575, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
    %578 = reshape(%576, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
    %579 = @func_350(%577, %578) /* ty=(Tensor[(12, 8, 3), float64], Tensor[(12, 8, 3), float32], Tensor[(12, 8, 3), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
    %580 = cast(%var_1768, dtype="float32") /* ty=Tensor[(351), float32] */;
    %581 = reshape(%580, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float32] */;
    %582 = @func_38(%581) /* ty=(Tensor[(3, 13, 9), float32],) */;
    %583 = %582.0;
    %584 = cast(%583, dtype="float32") /* ty=Tensor[(3, 13, 9), float32] */;
    %585 = reshape(%584, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float32] */;
    %586 = @func_38(%585) /* ty=(Tensor[(3, 13, 9), float32],) */;
    %587 = %586.0;
    %588 = cast(%587, dtype="float32") /* ty=Tensor[(3, 13, 9), float32] */;
    %589 = reshape(%588, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float32] */;
    %590 = @func_38(%589) /* ty=(Tensor[(3, 13, 9), float32],) */;
    %591 = cast(%var_1730, dtype="int32") /* ty=Tensor[(7, 7, 10), int32] */;
    %592 = shape_of(%var_1729, dtype="int32") /* ty=Tensor[(3), int32] */;
    %593 = cast(%var_1729, dtype="int32") /* ty=Tensor[(7, 7, 10), int32] */;
    %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %595 = logical_xor(%593, %594) /* ty=Tensor[(7, 7, 10), int32] */;
    %596 = cast(%var_1730, dtype="float64") /* ty=Tensor[(7, 7, 10), float64] */;
    %597 = shape_of(%595, dtype="int32") /* ty=Tensor[(3), int32] */;
    %598 = cast(%595, dtype="float64") /* ty=Tensor[(7, 7, 10), float64] */;
    %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %600 = divide(%598, %599) /* ty=Tensor[(7, 7, 10), float64] */;
    %601 = cast(%var_1790, dtype="bool") /* ty=Tensor[(7, 7, 10), bool] */;
    %602 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
    %603 = cast(%600, dtype="bool") /* ty=Tensor[(7, 7, 10), bool] */;
    %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %605 = %579.3;
    %606 = %590.0;
    %607 = logical_or(%603, %604) /* ty=Tensor[(7, 7, 10), bool] */;
    (%605, %var_1746, %583, %var_1768, %587, %606, %607)
  };
  %608(%var_1805, %var_1806, %var_1807, %var_1808, %var_1809) /* ty=(Tensor[(2, 8, 6), float32], Tensor[(288), float64], Tensor[(3, 13, 9), float32], Tensor[(351), float32], Tensor[(3, 13, 9), float32], Tensor[(3, 13, 9), float32], Tensor[(7, 7, 10), bool]) */
}

def @func_4314() -> Tensor[(5, 2, 9), bool] {
  @func_4312() /* ty=Tensor[(5, 2, 9), bool] */
}

def @func_6732(%var_6729: Tensor[(1176), float32], %var_6730: Tensor[(48), float64], %var_6731: Tensor[(208), float32]) -> (Tensor[(5, 2, 9), bool], Tensor[(1, 375), float64], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(135), uint32], Tensor[(48), float64], Tensor[(2352), float32], Tensor[(48), float64], Tensor[(208), float32], Tensor[(1456, 1), float64], Tensor[(9, 3, 5), float32], Tensor[(9, 3, 5), bool]) {
  %650 = fn (%var_6677: Tensor[(1176), float32], %var_6689: Tensor[(48), float64], %var_6690: Tensor[(208), float32]) -> (Tensor[(5, 2, 9), bool], Tensor[(1, 375), float64], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(135), uint32], Tensor[(48), float64], Tensor[(2352), float32], Tensor[(48), float64], Tensor[(208), float32], Tensor[(1456, 1), float64], Tensor[(9, 3, 5), float32], Tensor[(9, 3, 5), bool]) {
    %609 = cast(meta[relay.Constant][38] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
    %610 = cast(meta[relay.Constant][39] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %611 = cast(%var_6677, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %612 = reshape(%609, newshape=[630]) /* ty=Tensor[(630), int32] */;
    %613 = reshape(%610, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
    %614 = reshape(%611, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
    %615 = @func_4030(%612, %613, %614) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(14, 9, 5), int32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(1, 375), float64], Tensor[(1, 375), float64], Tensor[(7, 8, 9), int16], Tensor[(5, 1, 9), float32]) */;
    %616 = cast(meta[relay.Constant][41] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %617 = cast(%var_6677, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %618 = cast(meta[relay.Constant][39] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %619 = cast(%var_6689, dtype="float64") /* ty=Tensor[(48), float64] */;
    %620 = cast(%var_6690, dtype="float32") /* ty=Tensor[(208), float32] */;
    %621 = cast(meta[relay.Constant][42] /* ty=Tensor[(1456, 1), float64] */, dtype="float64") /* ty=Tensor[(1456, 1), float64] */;
    %622 = cast(meta[relay.Constant][38] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
    %623 = reshape(%616, newshape=[2352]) /* ty=Tensor[(2352), float32] */;
    %624 = reshape(%617, newshape=[2, 588]) /* ty=Tensor[(2, 588), float32] */;
    %625 = reshape(%618, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
    %626 = reshape(%619, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %627 = reshape(%620, newshape=[208]) /* ty=Tensor[(208), float32] */;
    %628 = reshape(%621, newshape=[728, 2]) /* ty=Tensor[(728, 2), float64] */;
    %629 = reshape(%622, newshape=[210, 3]) /* ty=Tensor[(210, 3), int32] */;
    %630 = @func_6421(%623, %624, %625, %626, %627, %628, %629) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(7, 8, 9), int16], Tensor[(252, 2), int16], Tensor[(5, ?, 9), bool], Tensor[(1176), float32], Tensor[(2352), float32], Tensor[(2, 588), float32], Tensor[(1320), float32], Tensor[(48), float64], Tensor[(208), float32], Tensor[(728, 2), float64], Tensor[(210, 3), int32]) */;
    %631 = cast(meta[relay.Constant][40] /* ty=Tensor[(135), uint32] */, dtype="uint32") /* ty=Tensor[(135), uint32] */;
    %632 = cast(meta[relay.Constant][40] /* ty=Tensor[(135), uint32] */, dtype="uint32") /* ty=Tensor[(135), uint32] */;
    %633 = reshape(%631, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), uint32] */;
    %634 = reshape(%632, newshape=[9, 3, 5]) /* ty=Tensor[(9, 3, 5), uint32] */;
    %635 = @func_1078(%633, %634) /* ty=Tensor[(9, 3, 5), uint32] */;
    %636 = cast(%635, dtype="float64") /* ty=Tensor[(9, 3, 5), float64] */;
    %637 = sinh(%636) /* ty=Tensor[(9, 3, 5), float64] */;
    %638 = cast(%637, dtype="float64") /* ty=Tensor[(9, 3, 5), float64] */;
    %639 = log(%638) /* ty=Tensor[(9, 3, 5), float64] */;
    %640 = cast(%639, dtype="float32") /* ty=Tensor[(9, 3, 5), float32] */;
    %641 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 3, 5), float64] */, dtype="bool") /* ty=Tensor[(9, 3, 5), bool] */;
    %642 = shape_of(%639, dtype="int32") /* ty=Tensor[(3), int32] */;
    %643 = cast(%639, dtype="bool") /* ty=Tensor[(9, 3, 5), bool] */;
    %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %645 = @func_6203() /* ty=Tensor[(5, 2, 9), bool] */;
    %646 = %615.8;
    %647 = %630.8;
    %648 = sigmoid(%640) /* ty=Tensor[(9, 3, 5), float32] */;
    %649 = equal(%643, %644) /* ty=Tensor[(9, 3, 5), bool] */;
    (%645, %646, meta[relay.Constant][38] /* ty=Tensor[(630), int32] */, meta[relay.Constant][39] /* ty=Tensor[(1320), float32] */, %var_6677, meta[relay.Constant][40] /* ty=Tensor[(135), uint32] */, %647, meta[relay.Constant][41] /* ty=Tensor[(2352), float32] */, %var_6689, %var_6690, meta[relay.Constant][42] /* ty=Tensor[(1456, 1), float64] */, %648, %649)
  };
  %650(%var_6729, %var_6730, %var_6731) /* ty=(Tensor[(5, 2, 9), bool], Tensor[(1, 375), float64], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(135), uint32], Tensor[(48), float64], Tensor[(2352), float32], Tensor[(48), float64], Tensor[(208), float32], Tensor[(1456, 1), float64], Tensor[(9, 3, 5), float32], Tensor[(9, 3, 5), bool]) */
}

def @func_1081(%var_1079: Tensor[(9, 3, 5), uint32], %var_1080: Tensor[(9, 3, 5), uint32]) -> Tensor[(9, 3, 5), uint32] {
  %655 = fn (%var_1069: Tensor[(9, 3, 5), uint32], %var_1070: Tensor[(9, 3, 5), uint32]) -> Tensor[(9, 3, 5), uint32] {
    %651 = cast(%var_1070, dtype="uint32") /* ty=Tensor[(9, 3, 5), uint32] */;
    %652 = shape_of(%var_1069, dtype="int32") /* ty=Tensor[(3), int32] */;
    %653 = cast(%var_1069, dtype="uint32") /* ty=Tensor[(9, 3, 5), uint32] */;
    %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    add(%653, %654) /* ty=Tensor[(9, 3, 5), uint32] */
  };
  %655(%var_1079, %var_1080) /* ty=Tensor[(9, 3, 5), uint32] */
}

def @func_5659() -> (Tensor[(5, 1, 9), float64],) {
  @func_5657() /* ty=(Tensor[(5, 1, 9), float64],) */
}

def @func_5715(%var_5713: Tensor[(3, 5, 6), float32]) -> (Tensor[(3, 5, 6), float32],) {
  @func_5712(%var_5713) /* ty=(Tensor[(3, 5, 6), float32],) */
}

def @func_5745() -> (Tensor[(5, 2, 9), bool],) {
  @func_5743() /* ty=(Tensor[(5, 2, 9), bool],) */
}

def @func_7430() -> (Tensor[(10, 12, 13), float64], Tensor[(10, 12, 13), float64]) {
  %656 = cast(meta[relay.Constant][44] /* ty=Tensor[(10, 12, 13), float64] */, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
  %657 = cast(meta[relay.Constant][44] /* ty=Tensor[(10, 12, 13), float64] */, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
  %658 = tan(%656) /* ty=Tensor[(10, 12, 13), float64] */;
  %659 = atan(%657) /* ty=Tensor[(10, 12, 13), float64] */;
  (%658, %659)
}

def @func_4373() -> Tensor[(5, 1, 9), float32] {
  @func_3868() /* ty=Tensor[(5, 1, 9), float32] */
}

def @func_5620() -> Tensor[(5, 1, 9), float32] {
  %660 = fn () -> Tensor[(5, 1, 9), float32] {
    @func_4373() /* ty=Tensor[(5, 1, 9), float32] */
  };
  %660() /* ty=Tensor[(5, 1, 9), float32] */
}

def @func_1001(%var_999: Tensor[(7, 8, 9), int16], %var_1000: Tensor[(7, 8, 9), int16]) -> (Tensor[(7, 8, 9), int16],) {
  @func_997(%var_999, %var_1000) /* ty=(Tensor[(7, 8, 9), int16],) */
}

def @func_5542(%var_5541: Tensor[(12, 4, 10), float64]) -> (Tensor[(12, 4, 10), float64],) {
  %664 = fn (%var_5512: Tensor[(12, 4, 10), float64]) -> (Tensor[(12, 4, 10), float64],) {
    %661 = cast(5.21145f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %662 = cast(%var_5512, dtype="float64") /* ty=Tensor[(12, 4, 10), float64] */;
    %663 = power(%661, %662) /* ty=Tensor[(12, 4, 10), float64] */;
    (%663,)
  };
  %664(%var_5541) /* ty=(Tensor[(12, 4, 10), float64],) */
}

def @func_1524(%var_1492: Tensor[(12, 42), int16], %var_1496: Tensor[(1456), float64]) -> (Tensor[(2, 16, 1), float64], Tensor[(7, 8, 9), int16], Tensor[(12, 42), int16], Tensor[(3, 117), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(14, 6, 11), float64], Tensor[(924), float64], Tensor[(288), float64], Tensor[(2, 16, 1), float64]) {
  %665 = cast(-7.31059f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %666 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 16, 1), float64] */, dtype="float64") /* ty=Tensor[(2, 16, 1), float64] */;
  %667 = cast(%var_1492, dtype="int16") /* ty=Tensor[(12, 42), int16] */;
  %668 = cast(%var_1492, dtype="int16") /* ty=Tensor[(12, 42), int16] */;
  %669 = reshape(%667, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), int16] */;
  %670 = reshape(%668, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), int16] */;
  %671 = @func_997(%669, %670) /* ty=(Tensor[(7, 8, 9), int16],) */;
  %672 = cast(%var_1496, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %673 = cast(meta[relay.Constant][46] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
  %674 = reshape(%672, newshape=[13, 7, 16]) /* ty=Tensor[(13, 7, 16), float64] */;
  %675 = reshape(%673, newshape=[3, 117]) /* ty=Tensor[(3, 117), float32] */;
  %676 = @func_58(%674, %675) /* ty=(Tensor[(13, 7, 16), float64], Tensor[(3, 13, 9), float32], Tensor[(3, 117), float32]) */;
  %677 = cast(meta[relay.Constant][47] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %678 = cast(meta[relay.Constant][48] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %679 = reshape(%677, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), float64] */;
  %680 = reshape(%678, newshape=[288]) /* ty=Tensor[(288), float64] */;
  %681 = @func_1035(%679, %680) /* ty=(Tensor[(14, 6, 11), float64], Tensor[(2, 8, 6), float32], Tensor[(288), float64]) */;
  %682 = cast(-7.31059f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %683 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 16, 1), float64] */, dtype="bool") /* ty=Tensor[(2, 16, 1), bool] */;
  %684 = greater_equal(%682, %683) /* ty=Tensor[(2, 16, 1), bool] */;
  %685 = cast(%684, dtype="float32") /* ty=Tensor[(2, 16, 1), float32] */;
  %686 = log2(%685) /* ty=Tensor[(2, 16, 1), float32] */;
  %687 = cast(%686, dtype="float64") /* ty=Tensor[(2, 16, 1), float64] */;
  %688 = floor_divide(%665, %666) /* ty=Tensor[(2, 16, 1), float64] */;
  %689 = %671.0;
  %690 = %676.2;
  %691 = %681.0;
  %692 = exp(%687) /* ty=Tensor[(2, 16, 1), float64] */;
  (%688, %689, %var_1492, %690, %var_1496, meta[relay.Constant][46] /* ty=Tensor[(351), float32] */, %691, meta[relay.Constant][47] /* ty=Tensor[(924), float64] */, meta[relay.Constant][48] /* ty=Tensor[(288), float64] */, %692)
}

def @func_6192(%var_6188: Tensor[(3, 7, 7), float64], %var_6189: Tensor[(900), bool], %var_6190: Tensor[(2, 588), float32], %var_6191: Tensor[(630), int32]) -> (Tensor[(5, 1, 9), float32], Tensor[(900), bool], Tensor[(1320), float32], Tensor[(2, 588), float32], Tensor[(630), int32], Tensor[(2, 144), float64], Tensor[(3, 7, 7), float32]) {
  @func_6186(%var_6188, %var_6189, %var_6190, %var_6191) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(900), bool], Tensor[(1320), float32], Tensor[(2, 588), float32], Tensor[(630), int32], Tensor[(2, 144), float64], Tensor[(3, 7, 7), float32]) */
}

def @func_2813(%var_2811: Tensor[(12, 8, 5), uint64]) -> Tensor[(12, 8, 5), uint32] {
  @func_2810(%var_2811) /* ty=Tensor[(12, 8, 5), uint32] */
}

def @func_6927(%var_6923: Tensor[(90), float32], %var_6924: Tensor[(900, 1), bool], %var_6925: Tensor[(1176), float32], %var_6926: Tensor[(375), float64]) -> (Tensor[(5, ?, 9), bool], Tensor[(3, 5, 6), float32], Tensor[(90), float32], Tensor[(1176), float32], Tensor[(900, 1), bool], Tensor[(12, 110), float32], Tensor[(1176), float32], Tensor[(375), float64], Tensor[(5, 1, 9), float32]) {
  %710 = fn (%var_6906: Tensor[(90), float32], %var_6909: Tensor[(900, 1), bool], %var_6911: Tensor[(1176), float32], %var_6912: Tensor[(375), float64]) -> (Tensor[(5, ?, 9), bool], Tensor[(3, 5, 6), float32], Tensor[(90), float32], Tensor[(1176), float32], Tensor[(900, 1), bool], Tensor[(12, 110), float32], Tensor[(1176), float32], Tensor[(375), float64], Tensor[(5, 1, 9), float32]) {
    %693 = @func_5035() /* ty=(Tensor[(5, ?, 9), bool],) */;
    %694 = cast(%var_6906, dtype="float32") /* ty=Tensor[(90), float32] */;
    %695 = reshape(%694, newshape=[3, 5, 6]) /* ty=Tensor[(3, 5, 6), float32] */;
    %696 = @func_5712(%695) /* ty=(Tensor[(3, 5, 6), float32],) */;
    %697 = cast(%var_6909, dtype="bool") /* ty=Tensor[(900, 1), bool] */;
    %698 = cast(meta[relay.Constant][49] /* ty=Tensor[(12, 110), float32] */, dtype="float32") /* ty=Tensor[(12, 110), float32] */;
    %699 = cast(%var_6911, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %700 = cast(%var_6912, dtype="float64") /* ty=Tensor[(375), float64] */;
    %701 = reshape(%697, newshape=[900, 1]) /* ty=Tensor[(900, 1), bool] */;
    %702 = reshape(%698, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
    %703 = reshape(%699, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
    %704 = reshape(%700, newshape=[375]) /* ty=Tensor[(375), float64] */;
    %705 = @func_4251(%701, %702, %703, %704) /* ty=(Tensor[(504), int16], Tensor[(1320), float32], Tensor[(900, 1), bool], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64]) */;
    %706 = %693.0;
    %707 = %696.0;
    %708 = %705.4;
    %709 = @func_3868() /* ty=Tensor[(5, 1, 9), float32] */;
    (%706, %707, %var_6906, %708, %var_6909, meta[relay.Constant][49] /* ty=Tensor[(12, 110), float32] */, %var_6911, %var_6912, %709)
  };
  %710(%var_6923, %var_6924, %var_6925, %var_6926) /* ty=(Tensor[(5, ?, 9), bool], Tensor[(3, 5, 6), float32], Tensor[(90), float32], Tensor[(1176), float32], Tensor[(900, 1), bool], Tensor[(12, 110), float32], Tensor[(1176), float32], Tensor[(375), float64], Tensor[(5, 1, 9), float32]) */
}

def @func_6373(%var_6360: Tensor[(5, 8, 9), float32]) -> (Tensor[(5, 8, 9), bool],) {
  %711 = @func_4105() /* ty=(Tensor[(5, 1, 9), float32],) */;
  %712 = %711.0;
  %713 = cast(%712, dtype="bool") /* ty=Tensor[(5, 1, 9), bool] */;
  %714 = cast(%var_6360, dtype="bool") /* ty=Tensor[(5, 8, 9), bool] */;
  %715 = greater(%713, %714) /* ty=Tensor[(5, 8, 9), bool] */;
  (%715,)
}

def @func_6376(%var_6374: Tensor[(5, 8, 9), float32]) -> (Tensor[(5, 8, 9), bool],) {
  @func_6373(%var_6374) /* ty=(Tensor[(5, 8, 9), bool],) */
}

def @func_4349() -> (Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(1176), float32]) {
  %716 = cast(meta[relay.Constant][50] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %717 = cast(meta[relay.Constant][51] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %718 = cast(meta[relay.Constant][52] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %719 = reshape(%716, newshape=[630]) /* ty=Tensor[(630), int32] */;
  %720 = reshape(%717, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %721 = reshape(%718, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %722 = @func_4030(%719, %720, %721) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(14, 9, 5), int32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(1, 375), float64], Tensor[(1, 375), float64], Tensor[(7, 8, 9), int16], Tensor[(5, 1, 9), float32]) */;
  %723 = @func_3868() /* ty=Tensor[(5, 1, 9), float32] */;
  %724 = %722.4;
  (%723, %724, meta[relay.Constant][50] /* ty=Tensor[(630), int32] */, meta[relay.Constant][51] /* ty=Tensor[(1320), float32] */, meta[relay.Constant][52] /* ty=Tensor[(1176), float32] */)
}

def @func_5037() -> (Tensor[(5, ?, 9), bool],) {
  @func_5035() /* ty=(Tensor[(5, ?, 9), bool],) */
}

def @func_3700() -> (Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) {
  @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */
}

def @func_5035() -> (Tensor[(5, ?, 9), bool],) {
  %725 = @func_3798() /* ty=(Tensor[(5, ?, 9), bool], Tensor[(5, ?, 9), bool], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */;
  %726 = %725.0;
  (%726,)
}

def @func_7025() -> (Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(5, 1, 9), float32]) {
  %732 = fn () -> (Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(5, 1, 9), float32]) {
    %727 = @func_6828() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(504), int16], Tensor[(7, 8, 9), float32], Tensor[(630), int32]) */;
    %728 = @func_6211() /* ty=(Tensor[(5, 1, 9), float32],) */;
    %729 = @func_4275() /* ty=Tensor[(5, 1, 9), float32] */;
    %730 = %727.3;
    %731 = %728.0;
    (%729, %730, %731)
  };
  %732() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(5, 1, 9), float32]) */
}

def @func_6205() -> Tensor[(5, 2, 9), bool] {
  @func_6203() /* ty=Tensor[(5, 2, 9), bool] */
}

def @func_354(%var_352: Tensor[(12, 8, 3), float64], %var_353: Tensor[(12, 8, 3), float64]) -> (Tensor[(12, 8, 3), float64], Tensor[(12, 8, 3), float32], Tensor[(12, 8, 3), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) {
  @func_350(%var_352, %var_353) /* ty=(Tensor[(12, 8, 3), float64], Tensor[(12, 8, 3), float32], Tensor[(12, 8, 3), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */
}

def @func_2620(%var_2618: Tensor[(5, 4, 3), float32], %var_2619: Tensor[(5, 4, 3), float32]) -> (Tensor[(5, 4, 3), float32], Tensor[(15, 5, 5), bool], Tensor[(375), float64]) {
  %744 = fn (%var_2578: Tensor[(5, 4, 3), float32], %var_2579: Tensor[(5, 4, 3), float32]) -> (Tensor[(5, 4, 3), float32], Tensor[(15, 5, 5), bool], Tensor[(375), float64]) {
    %733 = cast(%var_2579, dtype="float32") /* ty=Tensor[(5, 4, 3), float32] */;
    %734 = shape_of(%var_2578, dtype="int32") /* ty=Tensor[(3), int32] */;
    %735 = cast(%var_2578, dtype="float32") /* ty=Tensor[(5, 4, 3), float32] */;
    %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %737 = cast(meta[relay.Constant][53] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
    %738 = cast(meta[relay.Constant][53] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
    %739 = reshape(%737, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
    %740 = reshape(%738, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
    %741 = @func_822(%739, %740) /* ty=(Tensor[(15, 5, 5), bool], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32]) */;
    %742 = multiply(%735, %736) /* ty=Tensor[(5, 4, 3), float32] */;
    %743 = %741.0;
    (%742, %743, meta[relay.Constant][53] /* ty=Tensor[(375), float64] */)
  };
  %744(%var_2618, %var_2619) /* ty=(Tensor[(5, 4, 3), float32], Tensor[(15, 5, 5), bool], Tensor[(375), float64]) */
}

def @func_5941() -> (Tensor[(5, 1, 9), float32],) {
  %745 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
  %746 = %745.2;
  (%746,)
}

def @func_826(%var_824: Tensor[(15, 5, 5), float64], %var_825: Tensor[(15, 5, 5), float64]) -> (Tensor[(15, 5, 5), bool], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32]) {
  @func_822(%var_824, %var_825) /* ty=(Tensor[(15, 5, 5), bool], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32]) */
}

def @func_2102(%var_2097: Tensor[(5, 12, 15), bool], %var_2098: Tensor[(5, 12, 15), bool], %var_2099: Tensor[(1320), float32], %var_2100: Tensor[(1176), float32], %var_2101: Tensor[(375), float64]) -> (Tensor[(5, 12, 15), bool], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(1, 375), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64]) {
  %763 = fn (%var_2081: Tensor[(5, 12, 15), bool], %var_2082: Tensor[(5, 12, 15), bool], %var_2091: Tensor[(1320), float32], %var_2092: Tensor[(1176), float32], %var_2093: Tensor[(375), float64]) -> (Tensor[(5, 12, 15), bool], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(1, 375), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64]) {
    %747 = cast(%var_2082, dtype="bool") /* ty=Tensor[(5, 12, 15), bool] */;
    %748 = shape_of(%var_2081, dtype="int32") /* ty=Tensor[(3), int32] */;
    %749 = cast(%var_2081, dtype="bool") /* ty=Tensor[(5, 12, 15), bool] */;
    %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %751 = cast(meta[relay.Constant][54] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
    %752 = reshape(%751, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float32] */;
    %753 = cast(%var_2091, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %754 = cast(%var_2092, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %755 = cast(%var_2093, dtype="float64") /* ty=Tensor[(375), float64] */;
    %756 = reshape(%753, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
    %757 = reshape(%754, newshape=[588, 2]) /* ty=Tensor[(588, 2), float32] */;
    %758 = reshape(%755, newshape=[1, 375]) /* ty=Tensor[(1, 375), float64] */;
    %759 = @func_1165(%756, %757, %758) /* ty=(Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) */;
    %760 = logical_and(%749, %750) /* ty=Tensor[(5, 12, 15), bool] */;
    %761 = @func_1225(%752) /* ty=Tensor[(13, 8, 2), float32] */;
    %762 = %759.4;
    (%760, %761, meta[relay.Constant][54] /* ty=Tensor[(208), float32] */, %762, %var_2091, %var_2092, %var_2093)
  };
  %763(%var_2097, %var_2098, %var_2099, %var_2100, %var_2101) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(1, 375), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(375), float64]) */
}

def @func_1634(%var_1630: Tensor[(16, 1, 3), float64], %var_1631: Tensor[(208), float32], %var_1632: Tensor[(1456), float64], %var_1633: Tensor[(351), float32]) -> (Tensor[(16, ?, 3), float32], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(16, ?, 3), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(13, 8, 2), float32], Tensor[(16, 1, 3), float64]) {
  %802 = fn (%var_1551: Tensor[(16, 1, 3), float64], %var_1587: Tensor[(208), float32], %var_1603: Tensor[(1456), float64], %var_1604: Tensor[(351), float32]) -> (Tensor[(16, ?, 3), float32], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(16, ?, 3), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(13, 8, 2), float32], Tensor[(16, 1, 3), float64]) {
    %764 = cast(%var_1551, dtype="float64") /* ty=Tensor[(16, 1, 3), float64] */;
    %765 = sigmoid(%764) /* ty=Tensor[(16, 1, 3), float64] */;
    %766 = cast(%var_1551, dtype="uint16") /* ty=Tensor[(16, 1, 3), uint16] */;
    %767 = shape_of(%765, dtype="int32") /* ty=Tensor[(3), int32] */;
    %768 = cast(%765, dtype="uint16") /* ty=Tensor[(16, 1, 3), uint16] */;
    %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %770 = left_shift(%768, %769) /* ty=Tensor[(16, ?, 3), uint16] */;
    %771 = cast(%770, dtype="uint32") /* ty=Tensor[(16, ?, 3), uint32] */;
    %772 = shape_of(%765, dtype="int32") /* ty=Tensor[(3), int32] */;
    %773 = cast(%765, dtype="uint32") /* ty=Tensor[(16, 1, 3), uint32] */;
    %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %775 = multiply(%773, %774) /* ty=Tensor[(16, ?, 3), uint32] */;
    %776 = cast(%775, dtype="float64") /* ty=Tensor[(16, ?, 3), float64] */;
    %777 = rsqrt(%776) /* ty=Tensor[(16, ?, 3), float64] */;
    %778 = cast(%777, dtype="float32") /* ty=Tensor[(16, ?, 3), float32] */;
    %779 = shape_of(%770, dtype="int32") /* ty=Tensor[(3), int32] */;
    %780 = cast(%770, dtype="float32") /* ty=Tensor[(16, ?, 3), float32] */;
    %781 = dyn.reshape(%778, %779, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %782 = cast(%var_1587, dtype="float32") /* ty=Tensor[(208), float32] */;
    %783 = reshape(%782, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float32] */;
    %784 = cast(%770, dtype="float32") /* ty=Tensor[(16, ?, 3), float32] */;
    %785 = cast(meta[relay.Constant][55] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %786 = reshape(%785, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
    %787 = cast(%var_1603, dtype="float64") /* ty=Tensor[(1456), float64] */;
    %788 = cast(%var_1604, dtype="float32") /* ty=Tensor[(351), float32] */;
    %789 = reshape(%787, newshape=[13, 7, 16]) /* ty=Tensor[(13, 7, 16), float64] */;
    %790 = reshape(%788, newshape=[3, 117]) /* ty=Tensor[(3, 117), float32] */;
    %791 = @func_58(%789, %790) /* ty=(Tensor[(13, 7, 16), float64], Tensor[(3, 13, 9), float32], Tensor[(3, 117), float32]) */;
    %792 = cast(%var_1587, dtype="float32") /* ty=Tensor[(208), float32] */;
    %793 = reshape(%792, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float32] */;
    %794 = cast(%765, dtype="float64") /* ty=Tensor[(16, 1, 3), float64] */;
    %795 = divide(%780, %781) /* ty=Tensor[(16, ?, 3), float32] */;
    %796 = @func_1225(%783) /* ty=Tensor[(13, 8, 2), float32] */;
    %797 = acos(%784) /* ty=Tensor[(16, ?, 3), float32] */;
    %798 = @func_210(%786) /* ty=Tensor[(2, 8, 6), float32] */;
    %799 = %791.1;
    %800 = @func_1225(%793) /* ty=Tensor[(13, 8, 2), float32] */;
    %801 = asinh(%794) /* ty=Tensor[(16, 1, 3), float64] */;
    (%795, %796, %var_1587, %797, %798, meta[relay.Constant][55] /* ty=Tensor[(96), float32] */, %799, %var_1603, %var_1604, %800, %801)
  };
  %802(%var_1630, %var_1631, %var_1632, %var_1633) /* ty=(Tensor[(16, ?, 3), float32], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(16, ?, 3), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(13, 8, 2), float32], Tensor[(16, 1, 3), float64]) */
}

def @func_4287() -> Tensor[(5, 1, 9), float32] {
  %803 = fn () -> Tensor[(5, 1, 9), float32] {
    @func_3868() /* ty=Tensor[(5, 1, 9), float32] */
  };
  %803() /* ty=Tensor[(5, 1, 9), float32] */
}

def @func_4375() -> Tensor[(5, 1, 9), float32] {
  @func_4373() /* ty=Tensor[(5, 1, 9), float32] */
}

def @func_5943() -> (Tensor[(5, 1, 9), float32],) {
  @func_5941() /* ty=(Tensor[(5, 1, 9), float32],) */
}

def @func_6996(%var_6981: Tensor[(5, 12, 9), float32]) -> Tensor[(5, 12, 9), float64] {
  %804 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
  %805 = %804.0;
  %806 = cast(%805, dtype="float64") /* ty=Tensor[(5, 1, 9), float64] */;
  %807 = cast(%var_6981, dtype="float64") /* ty=Tensor[(5, 12, 9), float64] */;
  power(%806, %807) /* ty=Tensor[(5, 12, 9), float64] */
}

def @func_7264(%var_7262: Tensor[(1320), float32]) -> (Tensor[(5, 1, 9), float32], Tensor[(1320), float32], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(6, 196), float32]) {
  @func_7261(%var_7262) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(1320), float32], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(6, 196), float32]) */
}

def @func_6569() -> (Tensor[(5, 1, 9), float32],) {
  %810 = fn () -> (Tensor[(5, 1, 9), float32],) {
    %808 = @func_4349() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(1176), float32]) */;
    %809 = %808.1;
    (%809,)
  };
  %810() /* ty=(Tensor[(5, 1, 9), float32],) */
}

def @func_4983(%var_4936: Tensor[(1320), float32], %var_4968: Tensor[(208), float32]) -> (Tensor[(1320), float32], Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(1176), float32], Tensor[(5, 1, 9), float32], Tensor[(640), float64], Tensor[(13, 8, 2), float32], Tensor[(208), float32], Tensor[(5, 2, 9), bool]) {
  %811 = @func_4349() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(630), int32], Tensor[(1320), float32], Tensor[(1176), float32]) */;
  %812 = %811.3;
  %813 = cast(%var_4936, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %814 = shape_of(%812, dtype="int32") /* ty=Tensor[(1), int32] */;
  %815 = cast(%812, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?), float32] */;
  %817 = cast(meta[relay.Constant][56] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %818 = cast(%812, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %819 = cast(meta[relay.Constant][57] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %820 = reshape(%817, newshape=[630]) /* ty=Tensor[(630), int32] */;
  %821 = reshape(%818, newshape=[1320]) /* ty=Tensor[(1320), float32] */;
  %822 = reshape(%819, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %823 = @func_4030(%820, %821, %822) /* ty=(Tensor[(5, 1, 9), float32], Tensor[(14, 9, 5), int32], Tensor[(630), int32], Tensor[(96), float32], Tensor[(5, 1, 9), float32], Tensor[(1456), float64], Tensor[(1320), float32], Tensor[(1176), float32], Tensor[(1, 375), float64], Tensor[(1, 375), float64], Tensor[(7, 8, 9), int16], Tensor[(5, 1, 9), float32]) */;
  %824 = cast(meta[relay.Constant][58] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %825 = reshape(%824, newshape=[4, 10, 16]) /* ty=Tensor[(4, 10, 16), float64] */;
  %826 = @func_4888(%825) /* ty=(Tensor[(4, 10, 16), float64], Tensor[(5, 1, 9), float32]) */;
  %827 = cast(%var_4968, dtype="float32") /* ty=Tensor[(208), float32] */;
  %828 = reshape(%827, newshape=[13, 8, 2]) /* ty=Tensor[(13, 8, 2), float32] */;
  %829 = power(%815, %816) /* ty=Tensor[(1320), float32] */;
  %830 = %823.4;
  %831 = %826.1;
  %832 = @func_1225(%828) /* ty=Tensor[(13, 8, 2), float32] */;
  %833 = @func_4312() /* ty=Tensor[(5, 2, 9), bool] */;
  (%829, %830, meta[relay.Constant][56] /* ty=Tensor[(630), int32] */, meta[relay.Constant][57] /* ty=Tensor[(1176), float32] */, %831, meta[relay.Constant][58] /* ty=Tensor[(640), float64] */, %832, %var_4968, %833)
}

def @func_1169(%var_1166: Tensor[(11, 8, 15), float32], %var_1167: Tensor[(588, 2), float32], %var_1168: Tensor[(1, 375), float64]) -> (Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) {
  %856 = fn (%var_1124: Tensor[(11, 8, 15), float32], %var_1134: Tensor[(588, 2), float32], %var_1138: Tensor[(1, 375), float64]) -> (Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) {
    %834 = cast(%var_1124, dtype="float32") /* ty=Tensor[(11, 8, 15), float32] */;
    %835 = cast(%var_1134, dtype="float32") /* ty=Tensor[(588, 2), float32] */;
    %836 = reshape(%835, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float32] */;
    %837 = @func_145(%836) /* ty=(Tensor[(12, 7, 14), float32], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32], Tensor[(3, 13, 9), float32]) */;
    %838 = cast(%var_1138, dtype="float64") /* ty=Tensor[(1, 375), float64] */;
    %839 = cast(%var_1138, dtype="float64") /* ty=Tensor[(1, 375), float64] */;
    %840 = reshape(%838, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
    %841 = reshape(%839, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
    %842 = @func_822(%840, %841) /* ty=(Tensor[(15, 5, 5), bool], Tensor[(3, 13, 9), float32], Tensor[(1456), float64], Tensor[(351), float32]) */;
    %843 = %837.1;
    %844 = cast(%843, dtype="float32") /* ty=Tensor[(3, 13, 9), float32] */;
    %845 = reshape(%844, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), float32] */;
    %846 = @func_38(%845) /* ty=(Tensor[(3, 13, 9), float32],) */;
    %847 = cast(meta[relay.Constant][59] /* ty=Tensor[(14, 66), float64] */, dtype="float64") /* ty=Tensor[(14, 66), float64] */;
    %848 = cast(meta[relay.Constant][60] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
    %849 = reshape(%847, newshape=[14, 6, 11]) /* ty=Tensor[(14, 6, 11), float64] */;
    %850 = reshape(%848, newshape=[288]) /* ty=Tensor[(288), float64] */;
    %851 = @func_1035(%849, %850) /* ty=(Tensor[(14, 6, 11), float64], Tensor[(2, 8, 6), float32], Tensor[(288), float64]) */;
    %852 = sin(%834) /* ty=Tensor[(11, 8, 15), float32] */;
    %853 = %842.2;
    %854 = %846.0;
    %855 = %851.2;
    (%852, %843, %var_1134, %853, %var_1138, %854, %855, meta[relay.Constant][59] /* ty=Tensor[(14, 66), float64] */, meta[relay.Constant][60] /* ty=Tensor[(288), float64] */)
  };
  %856(%var_1166, %var_1167, %var_1168) /* ty=(Tensor[(11, 8, 15), float32], Tensor[(3, 13, 9), float32], Tensor[(588, 2), float32], Tensor[(1456), float64], Tensor[(1, 375), float64], Tensor[(3, 13, 9), float32], Tensor[(288), float64], Tensor[(14, 66), float64], Tensor[(288), float64]) */
}

def @func_1227(%var_1226: Tensor[(13, 8, 2), float32]) -> Tensor[(13, 8, 2), float32] {
  %862 = fn (%var_1193: Tensor[(13, 8, 2), float32]) -> Tensor[(13, 8, 2), float32] {
    %857 = cast(%var_1193, dtype="float32") /* ty=Tensor[(13, 8, 2), float32] */;
    %858 = cosh(%857) /* ty=Tensor[(13, 8, 2), float32] */;
    %859 = cast(%858, dtype="float32") /* ty=Tensor[(13, 8, 2), float32] */;
    %860 = sinh(%859) /* ty=Tensor[(13, 8, 2), float32] */;
    %861 = cast(%860, dtype="float32") /* ty=Tensor[(13, 8, 2), float32] */;
    asinh(%861) /* ty=Tensor[(13, 8, 2), float32] */
  };
  %862(%var_1226) /* ty=Tensor[(13, 8, 2), float32] */
}

def @func_3799() -> (Tensor[(5, ?, 9), bool], Tensor[(5, ?, 9), bool], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) {
  %878 = fn () -> (Tensor[(5, ?, 9), bool], Tensor[(5, ?, 9), bool], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) {
    %863 = @func_3698() /* ty=(Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32], Tensor[(5, 1, 9), float32]) */;
    %864 = %863.0;
    %865 = cast(meta[relay.Constant][61] /* ty=Tensor[(5, 1, 9), float32] */, dtype="bool") /* ty=Tensor[(5, 1, 9), bool] */;
    %866 = shape_of(%864, dtype="int32") /* ty=Tensor[(3), int32] */;
    %867 = cast(%864, dtype="bool") /* ty=Tensor[(5, 1, 9), bool] */;
    %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %869 = cast(meta[relay.Constant][61] /* ty=Tensor[(5, 1, 9), float32] */, dtype="bool") /* ty=Tensor[(5, 1, 9), bool] */;
    %870 = shape_of(%864, dtype="int32") /* ty=Tensor[(3), int32] */;
    %871 = cast(%864, dtype="bool") /* ty=Tensor[(5, 1, 9), bool] */;
    %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %873 = cast(meta[relay.Constant][62] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %874 = reshape(%873, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
    %875 = less_equal(%867, %868) /* ty=Tensor[(5, ?, 9), bool] */;
    %876 = greater(%871, %872) /* ty=Tensor[(5, ?, 9), bool] */;
    %877 = @func_210(%874) /* ty=Tensor[(2, 8, 6), float32] */;
    (%875, %876, %877, meta[relay.Constant][62] /* ty=Tensor[(96), float32] */)
  };
  %878() /* ty=(Tensor[(5, ?, 9), bool], Tensor[(5, ?, 9), bool], Tensor[(2, 8, 6), float32], Tensor[(96), float32]) */
}

def @func_40(%var_39: Tensor[(3, 13, 9), float32]) -> (Tensor[(3, 13, 9), float32],) {
  %881 = fn (%var_35: Tensor[(3, 13, 9), float32]) -> (Tensor[(3, 13, 9), float32],) {
    %879 = cast(%var_35, dtype="float32") /* ty=Tensor[(3, 13, 9), float32] */;
    %880 = exp(%879) /* ty=Tensor[(3, 13, 9), float32] */;
    (%880,)
  };
  %881(%var_39) /* ty=(Tensor[(3, 13, 9), float32],) */
}

def @func_3112(%var_3076: Tensor[(8, 13, 2), float64], %var_3086: Tensor[(4, 24), float32]) -> (Tensor[(2, 8, 6), float32], Tensor[(4, 24), float32], Tensor[(8, 13, 2), float32]) {
  %882 = cast(%var_3086, dtype="float32") /* ty=Tensor[(4, 24), float32] */;
  %883 = reshape(%882, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
  %884 = cast(%var_3076, dtype="float64") /* ty=Tensor[(8, 13, 2), float64] */;
  %885 = sinh(%884) /* ty=Tensor[(8, 13, 2), float64] */;
  %886 = cast(%885, dtype="float32") /* ty=Tensor[(8, 13, 2), float32] */;
  %887 = @func_210(%883) /* ty=Tensor[(2, 8, 6), float32] */;
  %888 = exp(%886) /* ty=Tensor[(8, 13, 2), float32] */;
  (%887, %var_3086, %888)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen280/build/output.py:1809: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen280/build/output.py", line 1814, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(546) tvmgen_default_fused_cast_cast_reshape_greater_equal_kernel0(signed char* __restrict__ T_greater_equal, uint64_t* __restrict__ placeholder, uint64_t* __restrict__ placeholder1) {
  T_greater_equal[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) <= ((bool)placeholder1[(((int)threadIdx.x))])));
}

extern "C" __global__ void __launch_bounds__(546) tvmgen_default_fused_cast_rsqrt_kernel0(double* __restrict__ tensor, uint64_t* __restrict__ placeholder) {
  tensor[(((int)threadIdx.x))] = (1.000000e+00 / sqrt(((double)placeholder[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


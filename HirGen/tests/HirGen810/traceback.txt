==========mod==========
#[version = "0.0.5"]
def @func_10332() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  %0 = @func_9299() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %1 = @func_9726() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %2 = %0.0;
  %3 = %1.0;
  (%2, %3)
}

def @func_6499(%var_6455: Tensor[(7, 10, 3), float64], %var_6472: Tensor[(7, 6), int8], %var_6473: Tensor[(36, 1), float64], %var_6490: Tensor[(2112), float32]) -> (Tensor[(7, 10, 3), float64], Tensor[(3, 2, 7), bool], Tensor[(7, 6), int8], Tensor[(36, 1), float64], Tensor[(11, 16, 12), float32], Tensor[(2112), float32]) {
  %4 = cast(%var_6455, dtype="float64") /* ty=Tensor[(7, 10, 3), float64] */;
  %5 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(7, 10, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(7, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 3), float64] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %8 = cast(%var_6472, dtype="int8") /* ty=Tensor[(7, 6), int8] */;
  %9 = cast(%var_6472, dtype="int8") /* ty=Tensor[(7, 6), int8] */;
  %10 = cast(%var_6473, dtype="float64") /* ty=Tensor[(36, 1), float64] */;
  %11 = reshape(%8, newshape=[3, 2, 7]) /* ty=Tensor[(3, 2, 7), int8] */;
  %12 = reshape(%9, newshape=[3, 2, 7]) /* ty=Tensor[(3, 2, 7), int8] */;
  %13 = reshape(%10, newshape=[9, 4]) /* ty=Tensor[(9, 4), float64] */;
  %14 = @func_3534(%11, %12, %13) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(9, 4), float64], Tensor[(2, 3, 6), float64], Tensor[(3, 2, 7), bool]) */;
  %15 = cast(%var_6490, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %16 = reshape(%15, newshape=[11, 16, 12]) /* ty=Tensor[(11, 16, 12), float32] */;
  %17 = @func_1780(%16) /* ty=(Tensor[(11, 16, 12), uint64], Tensor[(11, 16, 12), float32]) */;
  %18 = floor_mod(%6, %7) /* ty=Tensor[(7, 10, 3), float64] */;
  %19 = %14.3;
  %20 = %17.1;
  (%18, %19, %var_6472, %var_6473, %20, %var_6490)
}

def @func_8701() -> (Tensor[(3, 12, 4), float32],) {
  %21 = @func_8608() /* ty=Tensor[(3, 12, 4), float32] */;
  (%21,)
}

def @func_9603() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) {
  %22 = @func_8701() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %23 = %22.0;
  %24 = cast(%23, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %25 = reshape(%24, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float32] */;
  %26 = @func_9299() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %27 = @func_8801(%25) /* ty=Tensor[(3, 12, 4), bool] */;
  %28 = %26.0;
  (%23, %27, %28)
}

def @func_13967() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 15, 4), int8], Tensor[(180), int8]) {
  %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(180), int8] */, dtype="int8") /* ty=Tensor[(180), int8] */;
  %30 = cast(meta[relay.Constant][1] /* ty=Tensor[(180), int8] */, dtype="int8") /* ty=Tensor[(180), int8] */;
  %31 = reshape(%29, newshape=[3, 15, 4]) /* ty=Tensor[(3, 15, 4), int8] */;
  %32 = reshape(%30, newshape=[3, 15, 4]) /* ty=Tensor[(3, 15, 4), int8] */;
  %33 = @func_5572(%31, %32) /* ty=(Tensor[(3, 15, 4), int8],) */;
  %34 = @func_10717() /* ty=Tensor[(3, 12, 4), float32] */;
  %35 = %33.0;
  (%34, %35, meta[relay.Constant][1] /* ty=Tensor[(180), int8] */)
}

def @func_9192() -> Tensor[(3, 12, 4), float32] {
  %36 = @func_9129() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %36.0
}

def @func_13984() -> (Tensor[(3, 12, 4), float64],) {
  %37 = @func_9487() /* ty=(Tensor[(3, 12, 4), float64], Tensor[(6, 1, 450), bool], Tensor[(6, 1, 450), uint16], Tensor[(3, 12, 4), float32]) */;
  %38 = %37.0;
  (%38,)
}

def @func_13998() -> Tensor[(3, 12, 4), float32] {
  %39 = @func_10043() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %39.0
}

def @func_10651() -> Tensor[(3, 12, 4), bool] {
  %40 = @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
  %40.1
}

def @func_14042() -> (Tensor[(3, 12, 4), float32],) {
  %41 = @func_11977() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %42 = %41.0;
  (%42,)
}

def @func_9264(%var_9219: Tensor[(9, 4), float64], %var_9251: Tensor[(672, 2), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(9, 4), float64], Tensor[(42), int8], Tensor[(9, 4), float64], Tensor[(7, 4, 9), uint64], Tensor[(36), float64], Tensor[(96), uint8], Tensor[(3, 12, 4), float32], Tensor[(672, 2), uint16]) {
  %43 = @func_8701() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %44 = @func_8907() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(42), int8] */, dtype="int8") /* ty=Tensor[(42), int8] */;
  %46 = cast(meta[relay.Constant][2] /* ty=Tensor[(42), int8] */, dtype="int8") /* ty=Tensor[(42), int8] */;
  %47 = cast(%var_9219, dtype="float64") /* ty=Tensor[(9, 4), float64] */;
  %48 = reshape(%45, newshape=[3, 2, 7]) /* ty=Tensor[(3, 2, 7), int8] */;
  %49 = reshape(%46, newshape=[3, 2, 7]) /* ty=Tensor[(3, 2, 7), int8] */;
  %50 = reshape(%47, newshape=[9, 4]) /* ty=Tensor[(9, 4), float64] */;
  %51 = @func_3534(%48, %49, %50) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(9, 4), float64], Tensor[(2, 3, 6), float64], Tensor[(3, 2, 7), bool]) */;
  %52 = cast(%var_9219, dtype="float64") /* ty=Tensor[(9, 4), float64] */;
  %53 = reshape(%52, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %54 = @func_841(%53) /* ty=(Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) */;
  %55 = cast(meta[relay.Constant][3] /* ty=Tensor[(96), uint8] */, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %56 = cast(meta[relay.Constant][4] /* ty=Tensor[(672, 2), uint8] */, dtype="uint8") /* ty=Tensor[(672, 2), uint8] */;
  %57 = %54.1;
  %58 = cast(%57, dtype="uint64") /* ty=Tensor[(7, 4, 9), uint64] */;
  %59 = reshape(%55, newshape=[12, 8, 1]) /* ty=Tensor[(12, 8, 1), uint8] */;
  %60 = reshape(%56, newshape=[12, 8, 14]) /* ty=Tensor[(12, 8, 14), uint8] */;
  %61 = reshape(%58, newshape=[252]) /* ty=Tensor[(252), uint64] */;
  %62 = @func_1749(%59, %60, %61) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(12, 8, 14), float32], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(7, 4, 9), uint64]) */;
  %63 = %43.0;
  %64 = cast(%63, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %65 = reshape(%64, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float32] */;
  %66 = @func_8866(%65) /* ty=(Tensor[(3, 12, 4), uint64], Tensor[(3, 12, 4), float32]) */;
  %67 = cast(meta[relay.Constant][4] /* ty=Tensor[(672, 2), uint8] */, dtype="float64") /* ty=Tensor[(672, 2), float64] */;
  %68 = log(%67) /* ty=Tensor[(672, 2), float64] */;
  %69 = cast(%var_9251, dtype="uint16") /* ty=Tensor[(672, 2), uint16] */;
  %70 = shape_of(%68, dtype="int32") /* ty=Tensor[(2), int32] */;
  %71 = cast(%68, dtype="uint16") /* ty=Tensor[(672, 2), uint16] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %73 = %44.0;
  %74 = %51.1;
  %75 = %62.5;
  %76 = %66.1;
  %77 = multiply(%71, %72) /* ty=Tensor[(672, 2), uint16] */;
  (%63, %73, %74, meta[relay.Constant][2] /* ty=Tensor[(42), int8] */, %var_9219, %57, %75, meta[relay.Constant][3] /* ty=Tensor[(96), uint8] */, %76, %77)
}

def @func_6365(%var_6335: Tensor[(11, 3, 13), float64], %var_6350: Tensor[(4, 44), int8], %var_6359: Tensor[(252), uint64]) -> (Tensor[(11, 3, 13), float64], Tensor[(2, 3, 6), float64], Tensor[(1716), float64], Tensor[(2, 48), uint8], Tensor[(4, 44), int8], Tensor[(2, 48), uint8], Tensor[(252), uint64], Tensor[(90), float32]) {
  %78 = cast(%var_6335, dtype="float64") /* ty=Tensor[(11, 3, 13), float64] */;
  %79 = cast(meta[relay.Constant][5] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %80 = reshape(%79, newshape=[12, 13, 11]) /* ty=Tensor[(12, 13, 11), float64] */;
  %81 = @func_1279(%80) /* ty=(Tensor[(12, 13, 11), float64], Tensor[(2, 3, 6), float64], Tensor[(36), float64]) */;
  %82 = cast(%var_6350, dtype="int8") /* ty=Tensor[(4, 44), int8] */;
  %83 = cast(%var_6350, dtype="int8") /* ty=Tensor[(4, 44), int8] */;
  %84 = reshape(%82, newshape=[11, 4, 4]) /* ty=Tensor[(11, 4, 4), int8] */;
  %85 = reshape(%83, newshape=[11, 4, 4]) /* ty=Tensor[(11, 4, 4), int8] */;
  %86 = @func_4157(%84, %85) /* ty=(Tensor[(11, 4, 4), bool], Tensor[(36), float64], Tensor[(128), float32], Tensor[(2, 48), uint8]) */;
  %87 = %86.3;
  %88 = cast(%87, dtype="uint8") /* ty=Tensor[(2, 48), uint8] */;
  %89 = cast(%var_6359, dtype="uint64") /* ty=Tensor[(252), uint64] */;
  %90 = cast(meta[relay.Constant][6] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %91 = reshape(%88, newshape=[2, 48]) /* ty=Tensor[(2, 48), uint8] */;
  %92 = reshape(%89, newshape=[252]) /* ty=Tensor[(252), uint64] */;
  %93 = reshape(%90, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %94 = @func_2419(%91, %92, %93) /* ty=(Tensor[(3, 5, 7), float64], Tensor[(252), uint64], Tensor[(2, 48), uint8], Tensor[(1344), uint8], Tensor[(252), uint64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(2, 3, 6), float64]) */;
  %95 = acos(%78) /* ty=Tensor[(11, 3, 13), float64] */;
  %96 = %81.1;
  %97 = %94.2;
  (%95, %96, meta[relay.Constant][5] /* ty=Tensor[(1716), float64] */, %87, %var_6350, %97, %var_6359, meta[relay.Constant][6] /* ty=Tensor[(90), float32] */)
}

def @func_8866(%var_8844: Tensor[(3, 12, 4), float32]) -> (Tensor[(3, 12, 4), uint64], Tensor[(3, 12, 4), float32]) {
  %98 = @func_8556() /* ty=Tensor[(3, 12, 4), float32] */;
  %99 = cast(%var_8844, dtype="uint64") /* ty=Tensor[(3, 12, 4), uint64] */;
  %100 = shape_of(%98, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%98, dtype="uint64") /* ty=Tensor[(3, 12, 4), uint64] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %103 = cast(%var_8844, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %104 = bitwise_and(%101, %102) /* ty=Tensor[(3, 12, 4), uint64] */;
  %105 = erf(%103) /* ty=Tensor[(3, 12, 4), float32] */;
  (%104, %105)
}

def @func_9931(%var_9915: Tensor[(2688), float32], %var_9919: Tensor[(1680), int32]) -> (Tensor[(6, 1, 450), float32], uint64, Tensor[(2688), float32], Tensor[(64, 2), float32], uint64, Tensor[(3, 60), uint64], Tensor[(1680), int32], Tensor[(176), int8]) {
  %106 = @func_9657() /* ty=(Tensor[(6, 1, 450), float32],) */;
  %107 = cast(%var_9915, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %108 = cast(meta[relay.Constant][7] /* ty=Tensor[(64, 2), float32] */, dtype="float32") /* ty=Tensor[(64, 2), float32] */;
  %109 = cast(meta[relay.Constant][8] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %110 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 60), uint64] */, dtype="uint64") /* ty=Tensor[(3, 60), uint64] */;
  %111 = cast(%var_9919, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %112 = cast(meta[relay.Constant][10] /* ty=Tensor[(176), int8] */, dtype="int8") /* ty=Tensor[(176), int8] */;
  %113 = reshape(%107, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
  %114 = reshape(%108, newshape=[4, 32]) /* ty=Tensor[(4, 32), float32] */;
  %115 = reshape(%109, newshape=[]) /* ty=uint64 */;
  %116 = reshape(%110, newshape=[180]) /* ty=Tensor[(180), uint64] */;
  %117 = reshape(%111, newshape=[1680]) /* ty=Tensor[(1680), int32] */;
  %118 = reshape(%112, newshape=[176]) /* ty=Tensor[(176), int8] */;
  %119 = @func_4380(%113, %114, %115, %116, %117, %118) /* ty=(Tensor[(8, 2, 8), float32], Tensor[(4, 32), float32], Tensor[(96), uint8], Tensor[(14, 16, 12), float64], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64], Tensor[(12, 14, 10), bool], Tensor[(1680), int32], Tensor[(36), float64], Tensor[(176), int8]) */;
  %120 = %106.0;
  %121 = %119.5;
  (%120, %121, %var_9915, meta[relay.Constant][7] /* ty=Tensor[(64, 2), float32] */, meta[relay.Constant][8] /* ty=uint64 */, meta[relay.Constant][9] /* ty=Tensor[(3, 60), uint64] */, %var_9919, meta[relay.Constant][10] /* ty=Tensor[(176), int8] */)
}

def @func_14844() -> Tensor[(3, 12, 4), float32] {
  %122 = @func_13045() /* ty=(Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
  %122.1
}

def @func_5960(%var_5939: Tensor[(7, 11, 15), float32]) -> Tensor[(7, 11, 15), float32] {
  %123 = cast(%var_5939, dtype="float32") /* ty=Tensor[(7, 11, 15), float32] */;
  atan(%123) /* ty=Tensor[(7, 11, 15), float32] */
}

def @func_10536(%var_10474: uint64, %var_10475: Tensor[(180), uint64], %var_10526: Tensor[(3, 12, 4), float32]) -> (Tensor[(5, 9, 4), bool], Tensor[(180), uint64], Tensor[(7, 11, 15), float32], Tensor[(1155, 1), float32], Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), float32], Tensor[(252), uint64], Tensor[(36), float64]) {
  %124 = cast(%var_10474, dtype="uint64") /* ty=uint64 */;
  %125 = cast(%var_10475, dtype="uint64") /* ty=Tensor[(180), uint64] */;
  %126 = reshape(%124, newshape=[]) /* ty=uint64 */;
  %127 = reshape(%125, newshape=[5, 9, 4]) /* ty=Tensor[(5, 9, 4), uint64] */;
  %128 = cast(meta[relay.Constant][11] /* ty=Tensor[(1155, 1), float32] */, dtype="float32") /* ty=Tensor[(1155, 1), float32] */;
  %129 = reshape(%128, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %130 = cast(meta[relay.Constant][11] /* ty=Tensor[(1155, 1), float32] */, dtype="float32") /* ty=Tensor[(1155, 1), float32] */;
  %131 = cast(%var_10474, dtype="float32") /* ty=float32 */;
  %132 = @func_9424() /* ty=(Tensor[(5, 6, 16), int8], int8, Tensor[(480), int8], Tensor[(3, 12, 4), float64]) */;
  %133 = @func_9665() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %134 = %133.0;
  %135 = cast(%134, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %136 = asin(%135) /* ty=Tensor[(3, 12, 4), float32] */;
  %137 = cast(%var_10526, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %138 = shape_of(%136, dtype="int32") /* ty=Tensor[(3), int32] */;
  %139 = cast(%136, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %141 = cast(meta[relay.Constant][12] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %142 = reshape(%141, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %143 = @func_841(%142) /* ty=(Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) */;
  %144 = @func_976(%126, %127) /* ty=Tensor[(5, 9, 4), bool] */;
  %145 = @func_5960(%129) /* ty=Tensor[(7, 11, 15), float32] */;
  %146 = minimum(%130, %131) /* ty=Tensor[(1155, 1), float32] */;
  %147 = %132.3;
  %148 = divide(%139, %140) /* ty=Tensor[(3, 12, 4), float32] */;
  %149 = %143.2;
  (%144, %var_10475, %145, %146, %147, %148, %149, meta[relay.Constant][12] /* ty=Tensor[(36), float64] */)
}

def @func_4703(%var_4690: Tensor[(10, 8, 7), float64], %var_4691: Tensor[(10, 8, 7), float64]) -> (Tensor[(10, 8, 7), float64],) {
  %150 = cast(%var_4691, dtype="float64") /* ty=Tensor[(10, 8, 7), float64] */;
  %151 = shape_of(%var_4690, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(%var_4690, dtype="float64") /* ty=Tensor[(10, 8, 7), float64] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %154 = mod(%152, %153) /* ty=Tensor[(10, 8, 7), float64] */;
  (%154,)
}

def @func_10840() -> (Tensor[(3, 12, 4), float32],) {
  %155 = @func_8907() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %156 = %155.0;
  (%156,)
}

def @func_10717() -> Tensor[(3, 12, 4), float32] {
  @func_9641() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_14724() -> (Tensor[(3, 12, 4), float32],) {
  %157 = @func_14042() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %158 = %157.0;
  (%158,)
}

def @func_13093() -> (Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), float32]) {
  %159 = @func_9424() /* ty=(Tensor[(5, 6, 16), int8], int8, Tensor[(480), int8], Tensor[(3, 12, 4), float64]) */;
  %160 = @func_10598() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %161 = %159.3;
  %162 = %160.0;
  (%161, %162)
}

def @func_3534(%var_3494: Tensor[(3, 2, 7), int8], %var_3495: Tensor[(3, 2, 7), int8], %var_3507: Tensor[(9, 4), float64]) -> (Tensor[(7, 4, 9), uint64], Tensor[(9, 4), float64], Tensor[(2, 3, 6), float64], Tensor[(3, 2, 7), bool]) {
  %163 = cast(%var_3507, dtype="float64") /* ty=Tensor[(9, 4), float64] */;
  %164 = reshape(%163, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %165 = @func_841(%164) /* ty=(Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) */;
  %166 = cast(%var_3507, dtype="float64") /* ty=Tensor[(9, 4), float64] */;
  %167 = reshape(%166, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %168 = @func_841(%167) /* ty=(Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) */;
  %169 = cast(%var_3495, dtype="int8") /* ty=Tensor[(3, 2, 7), int8] */;
  %170 = shape_of(%var_3494, dtype="int32") /* ty=Tensor[(3), int32] */;
  %171 = cast(%var_3494, dtype="int8") /* ty=Tensor[(3, 2, 7), int8] */;
  %172 = dyn.reshape(%169, %170, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %173 = left_shift(%171, %172) /* ty=Tensor[(3, 2, 7), int8] */;
  %174 = cast(%173, dtype="bool") /* ty=Tensor[(3, 2, 7), bool] */;
  %175 = shape_of(%var_3495, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%var_3495, dtype="bool") /* ty=Tensor[(3, 2, 7), bool] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %178 = %165.1;
  %179 = %168.0;
  %180 = logical_or(%176, %177) /* ty=Tensor[(3, 2, 7), bool] */;
  (%178, %var_3507, %179, %180)
}

def @func_13950(%var_13937: Tensor[(1, 1680), int32]) -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(12, 14, 10), bool], Tensor[(1, 1680), int32]) {
  %181 = @func_11695() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %182 = cast(%var_13937, dtype="int32") /* ty=Tensor[(1, 1680), int32] */;
  %183 = reshape(%182, newshape=[12, 14, 10]) /* ty=Tensor[(12, 14, 10), int32] */;
  %184 = @func_8556() /* ty=Tensor[(3, 12, 4), float32] */;
  %185 = %181.0;
  %186 = @func_3828(%183) /* ty=Tensor[(12, 14, 10), bool] */;
  (%184, %185, %186, %var_13937)
}

def @func_10280(%var_10160: Tensor[(3, 12, 4), float64], %var_10248: Tensor[(286, 2), float64], %var_10249: Tensor[(450), float32]) -> (Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(11, 4, 13), float64], Tensor[(286, 2), float64], Tensor[(450), float32]) {
  %187 = @func_9665() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %188 = %187.0;
  %189 = cast(%188, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %190 = atanh(%189) /* ty=Tensor[(3, 12, 4), float64] */;
  %191 = cast(%var_10160, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
  %192 = shape_of(%190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(%190, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %195 = @func_9665() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %196 = cast(%var_10248, dtype="float64") /* ty=Tensor[(286, 2), float64] */;
  %197 = cast(%var_10249, dtype="float32") /* ty=Tensor[(450), float32] */;
  %198 = reshape(%196, newshape=[11, 4, 13]) /* ty=Tensor[(11, 4, 13), float64] */;
  %199 = reshape(%197, newshape=[450]) /* ty=Tensor[(450), float32] */;
  %200 = @func_9385(%198, %199) /* ty=(Tensor[(11, 4, 13), float64], Tensor[(6, 15, 5), uint32], Tensor[(450), float32]) */;
  %201 = not_equal(%193, %194) /* ty=Tensor[(3, 12, 4), bool] */;
  %202 = @func_9685() /* ty=Tensor[(3, 12, 4), float32] */;
  %203 = %195.0;
  %204 = %200.0;
  (%201, %202, %203, %204, %var_10248, %var_10249)
}

def @func_14191() -> Tensor[(3, 12, 4), bool] {
  %205 = @func_12163() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %205.0
}

def @func_6130(%var_6098: Tensor[(6, 16, 1), bool], %var_6108: Tensor[(560), float64]) -> (Tensor[(6, 16, 7), int32], Tensor[(10, 8, 7), float64], Tensor[(560), float64]) {
  %206 = cast(%var_6098, dtype="bool") /* ty=Tensor[(6, 16, 1), bool] */;
  %207 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 16, 7), bool] */, dtype="bool") /* ty=Tensor[(6, 16, 7), bool] */;
  %208 = logical_or(%206, %207) /* ty=Tensor[(6, 16, 7), bool] */;
  %209 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 16, 7), bool] */, dtype="int32") /* ty=Tensor[(6, 16, 7), int32] */;
  %210 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %211 = cast(%208, dtype="int32") /* ty=Tensor[(6, 16, 7), int32] */;
  %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %213 = cast(%var_6108, dtype="float64") /* ty=Tensor[(560), float64] */;
  %214 = cast(%var_6108, dtype="float64") /* ty=Tensor[(560), float64] */;
  %215 = reshape(%213, newshape=[10, 8, 7]) /* ty=Tensor[(10, 8, 7), float64] */;
  %216 = reshape(%214, newshape=[10, 8, 7]) /* ty=Tensor[(10, 8, 7), float64] */;
  %217 = @func_4703(%215, %216) /* ty=(Tensor[(10, 8, 7), float64],) */;
  %218 = multiply(%211, %212) /* ty=Tensor[(6, 16, 7), int32] */;
  %219 = %217.0;
  (%218, %219, %var_6108)
}

def @func_10386() -> Tensor[(3, 12, 4), float32] {
  %220 = @func_9129() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %220.0
}

def @func_14348() -> (Tensor[(3, 12, 4), bool],) {
  %221 = @func_12163() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %222 = %221.0;
  (%222,)
}

def @func_14359() -> Tensor[(3, 12, 4), float32] {
  %223 = @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
  %223.0
}

def @func_9147() -> Tensor[(3, 12, 4), float32] {
  %224 = @func_8907() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %224.0
}

def @func_12260() -> (Tensor[(3, 12, 4), bool],) {
  %225 = @func_11727() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %226 = %225.0;
  (%226,)
}

def @func_3828(%var_3814: Tensor[(12, 14, 10), int32]) -> Tensor[(12, 14, 10), bool] {
  %227 = cast(-3 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %228 = cast(%var_3814, dtype="bool") /* ty=Tensor[(12, 14, 10), bool] */;
  less(%227, %228) /* ty=Tensor[(12, 14, 10), bool] */
}

def @func_14982() -> Tensor[(3, 5, 13), int16] {
  %229 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 5, 13), int16] */, dtype="int16") /* ty=Tensor[(3, 5, 13), int16] */;
  %230 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(3, 5, 13), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 5, 13), int16] */, dtype="int16") /* ty=Tensor[(3, 5, 13), int16] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  right_shift(%231, %232) /* ty=Tensor[(3, 5, 13), int16] */
}

def @func_14938(%var_14879: Tensor[(10, 12, 10), float32]) -> (Tensor[(10, 12, 10), float64], Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), bool]) {
  %233 = cast(%var_14879, dtype="float32") /* ty=Tensor[(10, 12, 10), float32] */;
  %234 = asinh(%233) /* ty=Tensor[(10, 12, 10), float32] */;
  %235 = cast(%234, dtype="float64") /* ty=Tensor[(10, 12, 10), float64] */;
  %236 = cast(meta[relay.Constant][16] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %237 = reshape(%236, newshape=[]) /* ty=int8 */;
  %238 = @func_12445(%237) /* ty=(Tensor[(3, 12, 4), float32], int8, Tensor[(3, 12, 4), float32], Tensor[(5, 6, 16), bool], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool]) */;
  %239 = %238.6;
  %240 = cast(%239, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %241 = cast(meta[relay.Constant][16] /* ty=int8 */, dtype="float64") /* ty=float64 */;
  %242 = @func_9665() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %243 = rsqrt(%235) /* ty=Tensor[(10, 12, 10), float64] */;
  %244 = floor_divide(%240, %241) /* ty=Tensor[(3, 12, 4), float64] */;
  %245 = %242.0;
  (%243, %244, %245)
}

def @func_13421(%var_13379: Tensor[(36), float64]) -> (Tensor[(3, 12, 4), bool], Tensor[(1344), uint8], Tensor[(90), float32], Tensor[(84, 16), uint8], Tensor[(42), int8], Tensor[(36), float64], Tensor[(3, 12, 4), float32]) {
  %246 = @func_11205() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool]) */;
  %247 = cast(meta[relay.Constant][17] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %248 = cast(meta[relay.Constant][18] /* ty=Tensor[(84, 16), uint8] */, dtype="uint8") /* ty=Tensor[(84, 16), uint8] */;
  %249 = reshape(%247, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %250 = reshape(%248, newshape=[1344]) /* ty=Tensor[(1344), uint8] */;
  %251 = @func_12541(%249, %250) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(11, 4, 16), float32], Tensor[(704), float32], Tensor[(36), float64], Tensor[(90), float32], Tensor[(175, 3), float32], Tensor[(1680), int32], Tensor[(1344), uint8]) */;
  %252 = cast(%var_13379, dtype="float64") /* ty=Tensor[(36), float64] */;
  %253 = cast(meta[relay.Constant][18] /* ty=Tensor[(84, 16), uint8] */, dtype="float64") /* ty=Tensor[(84, 16), float64] */;
  %254 = reshape(%252, newshape=[9, 4]) /* ty=Tensor[(9, 4), float64] */;
  %255 = reshape(%253, newshape=[672, 2]) /* ty=Tensor[(672, 2), float64] */;
  %256 = @func_9264(%254, %255) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(9, 4), float64], Tensor[(42), int8], Tensor[(9, 4), float64], Tensor[(7, 4, 9), uint64], Tensor[(36), float64], Tensor[(96), uint8], Tensor[(3, 12, 4), float32], Tensor[(672, 2), uint16]) */;
  %257 = @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
  %258 = %246.1;
  %259 = %251.7;
  %260 = %256.3;
  %261 = %257.0;
  (%258, %259, meta[relay.Constant][17] /* ty=Tensor[(90), float32] */, meta[relay.Constant][18] /* ty=Tensor[(84, 16), uint8] */, %260, %var_13379, %261)
}

def @func_15011(%var_15002: Tensor[(12, 11, 15), float32]) -> Tensor[(12, 11, 15), float32] {
  %262 = cast(%var_15002, dtype="float32") /* ty=Tensor[(12, 11, 15), float32] */;
  asinh(%262) /* ty=Tensor[(12, 11, 15), float32] */
}

def @func_14556() -> Tensor[(3, 12, 4), float32] {
  %263 = @func_10332() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %263.1
}

def @func_11179(%var_11136: Tensor[(3, 12, 4), float32]) -> (Tensor[(3, 12, 4), int64], Tensor[(3, 12, 4), float32]) {
  %264 = @func_9299() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %265 = %264.0;
  %266 = cast(%var_11136, dtype="int64") /* ty=Tensor[(3, 12, 4), int64] */;
  %267 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(%265, dtype="int64") /* ty=Tensor[(3, 12, 4), int64] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %270 = @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
  %271 = maximum(%268, %269) /* ty=Tensor[(3, 12, 4), int64] */;
  %272 = %270.0;
  (%271, %272)
}

def @func_11666() -> (Tensor[(3, 12, 4), bool],) {
  %273 = @func_10381() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %274 = %273.0;
  %275 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 12, 4), float32] */, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
  %276 = shape_of(%274, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%274, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %279 = greater(%277, %278) /* ty=Tensor[(3, 12, 4), bool] */;
  (%279,)
}

def @func_11915(%var_11912: Tensor[(54), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(3, 3, 6), float32], Tensor[(54), float64]) {
  %280 = @func_9966() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %281 = cast(meta[relay.Constant][20] /* ty=Tensor[(252), uint64] */, dtype="uint64") /* ty=Tensor[(252), uint64] */;
  %282 = reshape(%281, newshape=[7, 4, 9]) /* ty=Tensor[(7, 4, 9), uint64] */;
  %283 = @func_197(%282) /* ty=(Tensor[(7, 4, 9), uint64],) */;
  %284 = cast(%var_11912, dtype="float64") /* ty=Tensor[(54), float64] */;
  %285 = reshape(%284, newshape=[3, 3, 6]) /* ty=Tensor[(3, 3, 6), float64] */;
  %286 = @func_6759(%285) /* ty=(Tensor[(3, 3, 6), bool], Tensor[(3, 3, 6), float32], Tensor[(12, 13, 11), float64], Tensor[(1716), float64]) */;
  %287 = %280.0;
  %288 = %283.0;
  %289 = %286.1;
  (%287, %288, meta[relay.Constant][20] /* ty=Tensor[(252), uint64] */, %289, %var_11912)
}

def @func_4157(%var_4142: Tensor[(11, 4, 4), int8], %var_4143: Tensor[(11, 4, 4), int8]) -> (Tensor[(11, 4, 4), bool], Tensor[(36), float64], Tensor[(128), float32], Tensor[(2, 48), uint8]) {
  %290 = cast(%var_4143, dtype="bool") /* ty=Tensor[(11, 4, 4), bool] */;
  %291 = shape_of(%var_4142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %292 = cast(%var_4142, dtype="bool") /* ty=Tensor[(11, 4, 4), bool] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %294 = cast(meta[relay.Constant][21] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %295 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 48), uint8] */, dtype="uint8") /* ty=Tensor[(2, 48), uint8] */;
  %296 = reshape(%294, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), float32] */;
  %297 = reshape(%295, newshape=[4, 24]) /* ty=Tensor[(4, 24), uint8] */;
  %298 = @func_3928(%296, %297) /* ty=(Tensor[(8, 2, 8), float32], Tensor[(36), float64], Tensor[(4, 24), uint8], Tensor[(1344), uint8], Tensor[(252, 1), uint64]) */;
  %299 = equal(%292, %293) /* ty=Tensor[(11, 4, 4), bool] */;
  %300 = %298.1;
  (%299, %300, meta[relay.Constant][21] /* ty=Tensor[(128), float32] */, meta[relay.Constant][22] /* ty=Tensor[(2, 48), uint8] */)
}

def @func_15331(%var_15278: Tensor[(6, 10, 14), float32]) -> (Tensor[(3, 12, 4), float32], Tensor[(6, 10, 14), float32], Tensor[(6, 10, 14), float64], Tensor[(3, 12, 4), bool]) {
  %301 = cast(%var_15278, dtype="float32") /* ty=Tensor[(6, 10, 14), float32] */;
  %302 = log2(%301) /* ty=Tensor[(6, 10, 14), float32] */;
  %303 = @func_12480() /* ty=Tensor[(6, 10, 14), float32] */;
  %304 = cast(%var_15278, dtype="bool") /* ty=Tensor[(6, 10, 14), bool] */;
  %305 = shape_of(%303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %306 = cast(%303, dtype="bool") /* ty=Tensor[(6, 10, 14), bool] */;
  %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %308 = greater_equal(%306, %307) /* ty=Tensor[(6, 10, 14), bool] */;
  %309 = cast(%308, dtype="float32") /* ty=Tensor[(6, 10, 14), float32] */;
  %310 = shape_of(%302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %311 = cast(%302, dtype="float32") /* ty=Tensor[(6, 10, 14), float32] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %313 = cast(%302, dtype="float64") /* ty=Tensor[(6, 10, 14), float64] */;
  %314 = @func_11879() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %315 = @func_13482() /* ty=Tensor[(3, 12, 4), float32] */;
  %316 = divide(%311, %312) /* ty=Tensor[(6, 10, 14), float32] */;
  %317 = sinh(%313) /* ty=Tensor[(6, 10, 14), float64] */;
  %318 = %314.0;
  (%315, %316, %317, %318)
}

def @func_12971() -> (Tensor[(3, 12, 4), float32],) {
  %319 = @func_8556() /* ty=Tensor[(3, 12, 4), float32] */;
  (%319,)
}

def @func_12129(%var_12112: Tensor[(77, 15), float32]) -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(77, 15), float64], Tensor[(3, 12, 4), float32]) {
  %320 = @func_10043() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %321 = cast(%var_12112, dtype="float32") /* ty=Tensor[(77, 15), float32] */;
  %322 = reshape(%321, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
  %323 = @func_10574(%322) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) */;
  %324 = @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
  %325 = cast(%var_12112, dtype="float64") /* ty=Tensor[(77, 15), float64] */;
  %326 = @func_8907() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %327 = %320.1;
  %328 = %323.0;
  %329 = %324.0;
  %330 = atanh(%325) /* ty=Tensor[(77, 15), float64] */;
  %331 = %326.0;
  (%327, %328, %329, %330, %331)
}

def @func_7183(%var_7158: Tensor[(6, 15, 5), float32]) -> (Tensor[(6, 15, 5), uint32], Tensor[(6, 1, 1), float64]) {
  %332 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 1, 1), float32] */, dtype="uint32") /* ty=Tensor[(6, 1, 1), uint32] */;
  %333 = cast(%var_7158, dtype="uint32") /* ty=Tensor[(6, 15, 5), uint32] */;
  %334 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 1, 1), float32] */, dtype="float32") /* ty=Tensor[(6, 1, 1), float32] */;
  %335 = erf(%334) /* ty=Tensor[(6, 1, 1), float32] */;
  %336 = cast(%335, dtype="float64") /* ty=Tensor[(6, 1, 1), float64] */;
  %337 = multiply(%332, %333) /* ty=Tensor[(6, 15, 5), uint32] */;
  %338 = sinh(%336) /* ty=Tensor[(6, 1, 1), float64] */;
  (%337, %338)
}

def @func_10888() -> (Tensor[(3, 12, 4), float32],) {
  %339 = @func_10840() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %340 = %339.0;
  (%340,)
}

def @func_14856() -> (Tensor[(3, 15, 4), int8],) {
  %341 = @func_13967() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 15, 4), int8], Tensor[(180), int8]) */;
  %342 = %341.1;
  (%342,)
}

def @func_12445(%var_12377: int8) -> (Tensor[(3, 12, 4), float32], int8, Tensor[(3, 12, 4), float32], Tensor[(5, 6, 16), bool], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool]) {
  %343 = cast(%var_12377, dtype="int8") /* ty=int8 */;
  %344 = cast(meta[relay.Constant][24] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %345 = reshape(%343, newshape=[]) /* ty=int8 */;
  %346 = reshape(%344, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int8] */;
  %347 = @func_5537(%345, %346) /* ty=Tensor[(5, 6, 16), int8] */;
  %348 = cast(meta[relay.Constant][24] /* ty=Tensor[(480), int8] */, dtype="bool") /* ty=Tensor[(480), bool] */;
  %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%347, dtype="bool") /* ty=Tensor[(5, 6, 16), bool] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %352 = @func_9685() /* ty=Tensor[(3, 12, 4), float32] */;
  %353 = cast(%352, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %354 = reshape(%353, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float32] */;
  %355 = @func_9009(%354) /* ty=(Tensor[(3, 12, 4), bool],) */;
  %356 = @func_11879() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %357 = @func_12297() /* ty=Tensor[(3, 12, 4), float32] */;
  %358 = less_equal(%350, %351) /* ty=Tensor[(5, 6, 16), bool] */;
  %359 = %355.0;
  %360 = @func_9641() /* ty=Tensor[(3, 12, 4), float32] */;
  %361 = %356.0;
  (%352, %var_12377, %357, %358, %359, %360, %361)
}

def @func_3928(%var_3898: Tensor[(8, 2, 8), float32], %var_3920: Tensor[(4, 24), uint8]) -> (Tensor[(8, 2, 8), float32], Tensor[(36), float64], Tensor[(4, 24), uint8], Tensor[(1344), uint8], Tensor[(252, 1), uint64]) {
  %362 = cast(%var_3898, dtype="float32") /* ty=Tensor[(8, 2, 8), float32] */;
  %363 = cast(%var_3920, dtype="uint8") /* ty=Tensor[(4, 24), uint8] */;
  %364 = cast(meta[relay.Constant][25] /* ty=Tensor[(1344), uint8] */, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
  %365 = cast(meta[relay.Constant][26] /* ty=Tensor[(252, 1), uint64] */, dtype="uint64") /* ty=Tensor[(252, 1), uint64] */;
  %366 = reshape(%363, newshape=[12, 8, 1]) /* ty=Tensor[(12, 8, 1), uint8] */;
  %367 = reshape(%364, newshape=[12, 8, 14]) /* ty=Tensor[(12, 8, 14), uint8] */;
  %368 = reshape(%365, newshape=[252]) /* ty=Tensor[(252), uint64] */;
  %369 = @func_1749(%366, %367, %368) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(12, 8, 14), float32], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(7, 4, 9), uint64]) */;
  %370 = erf(%362) /* ty=Tensor[(8, 2, 8), float32] */;
  %371 = %369.5;
  (%370, %371, %var_3920, meta[relay.Constant][25] /* ty=Tensor[(1344), uint8] */, meta[relay.Constant][26] /* ty=Tensor[(252, 1), uint64] */)
}

def @func_9966() -> (Tensor[(3, 12, 4), float32],) {
  %372 = @func_8556() /* ty=Tensor[(3, 12, 4), float32] */;
  (%372,)
}

def @func_9487() -> (Tensor[(3, 12, 4), float64], Tensor[(6, 1, 450), bool], Tensor[(6, 1, 450), uint16], Tensor[(3, 12, 4), float32]) {
  %373 = @func_9424() /* ty=(Tensor[(5, 6, 16), int8], int8, Tensor[(480), int8], Tensor[(3, 12, 4), float64]) */;
  %374 = cast(meta[relay.Constant][27] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %375 = reshape(%374, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float32] */;
  %376 = @func_7183(%375) /* ty=(Tensor[(6, 15, 5), uint32], Tensor[(6, 1, 1), float64]) */;
  %377 = %376.1;
  %378 = cast(%377, dtype="bool") /* ty=Tensor[(6, 1, 1), bool] */;
  %379 = cast(meta[relay.Constant][27] /* ty=Tensor[(450), float32] */, dtype="bool") /* ty=Tensor[(450), bool] */;
  %380 = cast(%377, dtype="uint16") /* ty=Tensor[(6, 1, 1), uint16] */;
  %381 = cast(meta[relay.Constant][27] /* ty=Tensor[(450), float32] */, dtype="uint16") /* ty=Tensor[(450), uint16] */;
  %382 = %373.3;
  %383 = not_equal(%378, %379) /* ty=Tensor[(6, 1, 450), bool] */;
  %384 = bitwise_and(%380, %381) /* ty=Tensor[(6, 1, 450), uint16] */;
  %385 = @func_8556() /* ty=Tensor[(3, 12, 4), float32] */;
  (%382, %383, %384, %385)
}

def @func_12981() -> (Tensor[(3, 12, 4), float32],) {
  %386 = @func_8701() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %387 = %386.0;
  (%387,)
}

def @func_13716() -> Tensor[(3, 12, 4), float32] {
  %388 = @func_11561() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %388.0
}

def @func_11780(%var_11777: Tensor[(16, 4, 3), float32]) -> (Tensor[(16, 4, 3), float32],) {
  %389 = cast(%var_11777, dtype="float32") /* ty=Tensor[(16, 4, 3), float32] */;
  %390 = sin(%389) /* ty=Tensor[(16, 4, 3), float32] */;
  (%390,)
}

def @func_14766(%var_14741: uint64, %var_14742: Tensor[(180), uint64], %var_14753: Tensor[(560), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64], Tensor[(10, 8, 7), float64], Tensor[(560), float64], Tensor[(3, 12, 4), float32], Tensor[(96), uint8], Tensor[(36), float64], Tensor[(4, 24), uint8]) {
  %391 = cast(%var_14741, dtype="uint64") /* ty=uint64 */;
  %392 = cast(%var_14742, dtype="uint64") /* ty=Tensor[(180), uint64] */;
  %393 = reshape(%391, newshape=[]) /* ty=uint64 */;
  %394 = reshape(%392, newshape=[5, 9, 4]) /* ty=Tensor[(5, 9, 4), uint64] */;
  %395 = cast(%var_14753, dtype="float64") /* ty=Tensor[(560), float64] */;
  %396 = cast(%var_14753, dtype="float64") /* ty=Tensor[(560), float64] */;
  %397 = reshape(%395, newshape=[10, 8, 7]) /* ty=Tensor[(10, 8, 7), float64] */;
  %398 = reshape(%396, newshape=[10, 8, 7]) /* ty=Tensor[(10, 8, 7), float64] */;
  %399 = @func_4703(%397, %398) /* ty=(Tensor[(10, 8, 7), float64],) */;
  %400 = @func_8701() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %401 = %400.0;
  %402 = cast(%401, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %403 = cast(meta[relay.Constant][28] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %404 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 24), uint8] */, dtype="uint8") /* ty=Tensor[(4, 24), uint8] */;
  %405 = reshape(%402, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float32] */;
  %406 = reshape(%403, newshape=[36]) /* ty=Tensor[(36), float64] */;
  %407 = reshape(%404, newshape=[96]) /* ty=Tensor[(96), uint8] */;
  %408 = @func_9581(%405, %406, %407) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(7, 4, 9), uint64], Tensor[(36), float64], Tensor[(1344), uint8], Tensor[(96), uint8], Tensor[(1344), uint8], Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), float32]) */;
  %409 = @func_8608() /* ty=Tensor[(3, 12, 4), float32] */;
  %410 = @func_976(%393, %394) /* ty=Tensor[(5, 9, 4), bool] */;
  %411 = %399.0;
  %412 = %408.4;
  (%409, %410, %var_14741, %var_14742, %411, %var_14753, %401, %412, meta[relay.Constant][28] /* ty=Tensor[(36), float64] */, meta[relay.Constant][29] /* ty=Tensor[(4, 24), uint8] */)
}

def @func_10043() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  %413 = @func_9299() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %414 = @func_9966() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %415 = %413.0;
  %416 = %414.0;
  (%415, %416)
}

def @func_12865() -> (Tensor[(3, 12, 4), float32],) {
  %417 = @func_12805() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %418 = %417.0;
  (%418,)
}

def @func_7431(%var_7394: Tensor[(15, 7, 5), float32], %var_7403: Tensor[(1680), int32], %var_7409: Tensor[(14, 96), uint8], %var_7413: Tensor[(1, 1155), float32], %var_7420: uint64, %var_7422: Tensor[(176), int8]) -> (Tensor[(15, 7, 5), float32], Tensor[(12, 14, 10), bool], Tensor[(1680), int32], Tensor[(36), float64], Tensor[(96), uint8], Tensor[(14, 96), uint8], Tensor[(126, 2), uint64], Tensor[(7, 11, 15), float32], Tensor[(1, 1155), float32], Tensor[(4, 32), float32], Tensor[(2688), float32], Tensor[(128), float32], uint64, Tensor[(180), uint64], Tensor[(176), int8]) {
  %419 = cast(%var_7394, dtype="float32") /* ty=Tensor[(15, 7, 5), float32] */;
  %420 = cast(%var_7403, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %421 = reshape(%420, newshape=[12, 14, 10]) /* ty=Tensor[(12, 14, 10), int32] */;
  %422 = cast(meta[relay.Constant][30] /* ty=Tensor[(96), uint8] */, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %423 = cast(%var_7409, dtype="uint8") /* ty=Tensor[(14, 96), uint8] */;
  %424 = cast(meta[relay.Constant][31] /* ty=Tensor[(126, 2), uint64] */, dtype="uint64") /* ty=Tensor[(126, 2), uint64] */;
  %425 = reshape(%422, newshape=[12, 8, 1]) /* ty=Tensor[(12, 8, 1), uint8] */;
  %426 = reshape(%423, newshape=[12, 8, 14]) /* ty=Tensor[(12, 8, 14), uint8] */;
  %427 = reshape(%424, newshape=[252]) /* ty=Tensor[(252), uint64] */;
  %428 = @func_1749(%425, %426, %427) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(12, 8, 14), float32], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(7, 4, 9), uint64]) */;
  %429 = cast(%var_7413, dtype="float32") /* ty=Tensor[(1, 1155), float32] */;
  %430 = reshape(%429, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %431 = cast(meta[relay.Constant][32] /* ty=Tensor[(2688), float32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %432 = cast(meta[relay.Constant][33] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %433 = cast(%var_7420, dtype="uint64") /* ty=uint64 */;
  %434 = cast(meta[relay.Constant][34] /* ty=Tensor[(180), uint64] */, dtype="uint64") /* ty=Tensor[(180), uint64] */;
  %435 = @func_3828(%421) /* ty=Tensor[(12, 14, 10), bool] */;
  %436 = cast(%435, dtype="int32") /* ty=Tensor[(12, 14, 10), int32] */;
  %437 = cast(%var_7422, dtype="int8") /* ty=Tensor[(176), int8] */;
  %438 = reshape(%431, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
  %439 = reshape(%432, newshape=[4, 32]) /* ty=Tensor[(4, 32), float32] */;
  %440 = reshape(%433, newshape=[]) /* ty=uint64 */;
  %441 = reshape(%434, newshape=[180]) /* ty=Tensor[(180), uint64] */;
  %442 = reshape(%436, newshape=[1680]) /* ty=Tensor[(1680), int32] */;
  %443 = reshape(%437, newshape=[176]) /* ty=Tensor[(176), int8] */;
  %444 = @func_4380(%438, %439, %440, %441, %442, %443) /* ty=(Tensor[(8, 2, 8), float32], Tensor[(4, 32), float32], Tensor[(96), uint8], Tensor[(14, 16, 12), float64], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64], Tensor[(12, 14, 10), bool], Tensor[(1680), int32], Tensor[(36), float64], Tensor[(176), int8]) */;
  %445 = cos(%419) /* ty=Tensor[(15, 7, 5), float32] */;
  %446 = %428.5;
  %447 = @func_5960(%430) /* ty=Tensor[(7, 11, 15), float32] */;
  %448 = %444.1;
  (%445, %435, %var_7403, %446, meta[relay.Constant][30] /* ty=Tensor[(96), uint8] */, %var_7409, meta[relay.Constant][31] /* ty=Tensor[(126, 2), uint64] */, %447, %var_7413, %448, meta[relay.Constant][32] /* ty=Tensor[(2688), float32] */, meta[relay.Constant][33] /* ty=Tensor[(128), float32] */, %var_7420, meta[relay.Constant][34] /* ty=Tensor[(180), uint64] */, %var_7422)
}

def @func_976(%var_969: uint64, %var_970: Tensor[(5, 9, 4), uint64]) -> Tensor[(5, 9, 4), bool] {
  %449 = cast(%var_969, dtype="bool") /* ty=bool */;
  %450 = cast(%var_970, dtype="bool") /* ty=Tensor[(5, 9, 4), bool] */;
  less_equal(%449, %450) /* ty=Tensor[(5, 9, 4), bool] */
}

def @func_12163() -> (Tensor[(3, 12, 4), bool],) {
  %451 = @func_11727() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %452 = %451.0;
  (%452,)
}

def @func_9105() -> (Tensor[(3, 12, 4), float32], Tensor[(6, 1, 1), float64], Tensor[(450), float32]) {
  %453 = cast(meta[relay.Constant][35] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %454 = reshape(%453, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float32] */;
  %455 = @func_7183(%454) /* ty=(Tensor[(6, 15, 5), uint32], Tensor[(6, 1, 1), float64]) */;
  %456 = @func_8556() /* ty=Tensor[(3, 12, 4), float32] */;
  %457 = %455.1;
  (%456, %457, meta[relay.Constant][35] /* ty=Tensor[(450), float32] */)
}

def @func_13045() -> (Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) {
  %458 = @func_12163() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %459 = %458.0;
  %460 = @func_9192() /* ty=Tensor[(3, 12, 4), float32] */;
  (%459, %460)
}

def @func_8907() -> (Tensor[(3, 12, 4), float32],) {
  %461 = @func_8556() /* ty=Tensor[(3, 12, 4), float32] */;
  (%461,)
}

def @func_11205() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool]) {
  %462 = @func_9726() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %463 = @func_9665() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %464 = %462.0;
  %465 = %463.0;
  (%464, %465)
}

def @func_9665() -> (Tensor[(3, 12, 4), bool],) {
  %466 = @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
  %467 = %466.1;
  (%467,)
}

def @func_12805() -> (Tensor[(3, 12, 4), float32],) {
  %468 = @func_9641() /* ty=Tensor[(3, 12, 4), float32] */;
  (%468,)
}

def @func_14528(%var_14490: Tensor[(1716), float64]) -> (Tensor[(3, 12, 4), bool], Tensor[(1716), int16], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(3, 12, 4), float32], int8, Tensor[(2, 3, 6), float64]) {
  %469 = @func_12163() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %470 = cast(%var_14490, dtype="int16") /* ty=Tensor[(1716), int16] */;
  %471 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(1716), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %472 = cast(meta[relay.Constant][36] /* ty=Tensor[(1716), float64] */, dtype="int16") /* ty=Tensor[(1716), int16] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?), int16] */;
  %474 = cast(meta[relay.Constant][37] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %475 = cast(meta[relay.Constant][36] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %476 = reshape(%475, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %477 = @func_12941(%476) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(2, 3, 6), float64], Tensor[(1716), float64]) */;
  %478 = %477.1;
  %479 = cast(%478, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
  %480 = reshape(%474, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float32] */;
  %481 = reshape(%479, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %482 = @func_1362(%480, %481) /* ty=(Tensor[(10, 9, 1716), uint8], Tensor[(2, 3, 6), float64], Tensor[(12, 13, 11), float64]) */;
  %483 = cast(meta[relay.Constant][38] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %484 = reshape(%483, newshape=[]) /* ty=int8 */;
  %485 = @func_12445(%484) /* ty=(Tensor[(3, 12, 4), float32], int8, Tensor[(3, 12, 4), float32], Tensor[(5, 6, 16), bool], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool]) */;
  %486 = cast(%478, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
  %487 = %469.0;
  %488 = minimum(%472, %473) /* ty=Tensor[(1716), int16] */;
  %489 = %482.1;
  %490 = %485.2;
  %491 = log10(%486) /* ty=Tensor[(2, 3, 6), float64] */;
  (%487, %488, %489, meta[relay.Constant][37] /* ty=Tensor[(90), float32] */, %490, meta[relay.Constant][38] /* ty=int8 */, %491)
}

def @func_9657() -> (Tensor[(6, 1, 450), float32],) {
  %492 = @func_9487() /* ty=(Tensor[(3, 12, 4), float64], Tensor[(6, 1, 450), bool], Tensor[(6, 1, 450), uint16], Tensor[(3, 12, 4), float32]) */;
  %493 = %492.1;
  %494 = cast(%493, dtype="float32") /* ty=Tensor[(6, 1, 450), float32] */;
  %495 = acos(%494) /* ty=Tensor[(6, 1, 450), float32] */;
  (%495,)
}

def @func_10292() -> Tensor[(3, 12, 4), float32] {
  %496 = @func_9129() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %496.0
}

def @func_1749(%var_1698: Tensor[(12, 8, 1), uint8], %var_1699: Tensor[(12, 8, 14), uint8], %var_1707: Tensor[(252), uint64]) -> (Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(12, 8, 14), float32], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(7, 4, 9), uint64]) {
  %497 = cast(%var_1707, dtype="uint64") /* ty=Tensor[(252), uint64] */;
  %498 = reshape(%497, newshape=[7, 4, 9]) /* ty=Tensor[(7, 4, 9), uint64] */;
  %499 = @func_197(%498) /* ty=(Tensor[(7, 4, 9), uint64],) */;
  %500 = cast(%var_1698, dtype="uint8") /* ty=Tensor[(12, 8, 1), uint8] */;
  %501 = cast(%var_1699, dtype="uint8") /* ty=Tensor[(12, 8, 14), uint8] */;
  %502 = bitwise_and(%500, %501) /* ty=Tensor[(12, 8, 14), uint8] */;
  %503 = cast(%var_1698, dtype="float32") /* ty=Tensor[(12, 8, 1), float32] */;
  %504 = cast(%502, dtype="float32") /* ty=Tensor[(12, 8, 14), float32] */;
  %505 = cast(meta[relay.Constant][39] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %506 = cast(meta[relay.Constant][40] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %507 = reshape(%505, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float32] */;
  %508 = reshape(%506, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %509 = @func_1362(%507, %508) /* ty=(Tensor[(10, 9, 1716), uint8], Tensor[(2, 3, 6), float64], Tensor[(12, 13, 11), float64]) */;
  %510 = %509.1;
  %511 = cast(%510, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
  %512 = reshape(%511, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %513 = @func_841(%512) /* ty=(Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) */;
  %514 = %499.0;
  %515 = mod(%503, %504) /* ty=Tensor[(12, 8, 14), float32] */;
  %516 = %513.3;
  (%514, %var_1707, %515, %510, meta[relay.Constant][39] /* ty=Tensor[(90), float32] */, meta[relay.Constant][40] /* ty=Tensor[(36), float64] */, %516)
}

def @func_13070(%var_13057: Tensor[(560), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(128), float32], Tensor[(560), float64]) {
  %517 = cast(%var_13057, dtype="float64") /* ty=Tensor[(560), float64] */;
  %518 = @func_10292() /* ty=Tensor[(3, 12, 4), float32] */;
  %519 = cast(%518, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %520 = reshape(%517, newshape=[4, 140]) /* ty=Tensor[(4, 140), float64] */;
  %521 = reshape(%519, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %522 = @func_9878(%520, %521) /* ty=(Tensor[(6, 1, 450), bool], Tensor[(6, 16, 7), int32], Tensor[(96), bool], Tensor[(4, 140), float64], Tensor[(36), float64], Tensor[(128), float32], Tensor[(3, 12, 4), float32], Tensor[(144), float32]) */;
  %523 = %522.5;
  (%518, %523, %var_13057)
}

def @func_14298() -> (Tensor[(3, 12, 4), float32],) {
  %524 = @func_10043() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %525 = %524.0;
  (%525,)
}

def @func_10110() -> Tensor[(3, 12, 4), float32] {
  %526 = @func_9726() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %526.0
}

def @func_9641() -> Tensor[(3, 12, 4), float32] {
  %527 = @func_9299() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %527.0
}

def @func_9726() -> (Tensor[(3, 12, 4), float32],) {
  %528 = @func_9105() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(6, 1, 1), float64], Tensor[(450), float32]) */;
  %529 = %528.0;
  (%529,)
}

def @func_11487() -> (Tensor[(3, 12, 4), float32],) {
  %530 = @func_9726() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %531 = %530.0;
  (%531,)
}

def @func_14605() -> Tensor[(450), float32] {
  @func_10963() /* ty=Tensor[(450), float32] */
}

def @func_12480() -> Tensor[(6, 10, 14), float32] {
  %532 = cast(meta[relay.Constant][41] /* ty=Tensor[(6, 10, 14), float32] */, dtype="float32") /* ty=Tensor[(6, 10, 14), float32] */;
  cosh(%532) /* ty=Tensor[(6, 10, 14), float32] */
}

def @func_1362(%var_1322: Tensor[(10, 9, 1), float32], %var_1353: Tensor[(2, 3, 6), float64]) -> (Tensor[(10, 9, 1716), uint8], Tensor[(2, 3, 6), float64], Tensor[(12, 13, 11), float64]) {
  %533 = cast(%var_1322, dtype="float32") /* ty=Tensor[(10, 9, 1), float32] */;
  %534 = rsqrt(%533) /* ty=Tensor[(10, 9, 1), float32] */;
  %535 = cast(%534, dtype="uint8") /* ty=Tensor[(10, 9, 1), uint8] */;
  %536 = cast(meta[relay.Constant][42] /* ty=Tensor[(1716), float64] */, dtype="uint8") /* ty=Tensor[(1716), uint8] */;
  %537 = cast(meta[relay.Constant][42] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %538 = reshape(%537, newshape=[12, 13, 11]) /* ty=Tensor[(12, 13, 11), float64] */;
  %539 = @func_1279(%538) /* ty=(Tensor[(12, 13, 11), float64], Tensor[(2, 3, 6), float64], Tensor[(36), float64]) */;
  %540 = %539.1;
  %541 = cast(%var_1353, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
  %542 = shape_of(%540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(%540, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %545 = cast(meta[relay.Constant][42] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %546 = reshape(%545, newshape=[12, 13, 11]) /* ty=Tensor[(12, 13, 11), float64] */;
  %547 = @func_1279(%546) /* ty=(Tensor[(12, 13, 11), float64], Tensor[(2, 3, 6), float64], Tensor[(36), float64]) */;
  %548 = multiply(%535, %536) /* ty=Tensor[(10, 9, 1716), uint8] */;
  %549 = multiply(%543, %544) /* ty=Tensor[(2, 3, 6), float64] */;
  %550 = %547.0;
  (%548, %549, %550)
}

def @func_12467() -> (Tensor[(3, 12, 4), int8],) {
  %551 = @func_10651() /* ty=Tensor[(3, 12, 4), bool] */;
  %552 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 12, 4), bool] */, dtype="int8") /* ty=Tensor[(3, 12, 4), int8] */;
  %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%551, dtype="int8") /* ty=Tensor[(3, 12, 4), int8] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %556 = bitwise_or(%554, %555) /* ty=Tensor[(3, 12, 4), int8] */;
  (%556,)
}

def @func_9385(%var_9359: Tensor[(11, 4, 13), float64], %var_9369: Tensor[(450), float32]) -> (Tensor[(11, 4, 13), float64], Tensor[(6, 15, 5), uint32], Tensor[(450), float32]) {
  %557 = cast(%var_9359, dtype="float64") /* ty=Tensor[(11, 4, 13), float64] */;
  %558 = log(%557) /* ty=Tensor[(11, 4, 13), float64] */;
  %559 = cast(%558, dtype="float64") /* ty=Tensor[(11, 4, 13), float64] */;
  %560 = shape_of(%var_9359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%var_9359, dtype="float64") /* ty=Tensor[(11, 4, 13), float64] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %563 = cast(%var_9369, dtype="float32") /* ty=Tensor[(450), float32] */;
  %564 = reshape(%563, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float32] */;
  %565 = @func_7183(%564) /* ty=(Tensor[(6, 15, 5), uint32], Tensor[(6, 1, 1), float64]) */;
  %566 = floor_mod(%561, %562) /* ty=Tensor[(11, 4, 13), float64] */;
  %567 = %565.0;
  (%566, %567, %var_9369)
}

def @func_14106() -> Tensor[(3, 12, 4), float32] {
  %568 = @func_12895() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %568.1
}

def @func_10343() -> Tensor[(3, 12, 4), int16] {
  %569 = @func_8608() /* ty=Tensor[(3, 12, 4), float32] */;
  %570 = cast(meta[relay.Constant][44] /* ty=Tensor[(3, 12, 4), float32] */, dtype="int16") /* ty=Tensor[(3, 12, 4), int16] */;
  %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%569, dtype="int16") /* ty=Tensor[(3, 12, 4), int16] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  logical_xor(%572, %573) /* ty=Tensor[(3, 12, 4), int16] */
}

def @func_2029(%var_1998: Tensor[(96), uint8], %var_1999: Tensor[(1344), uint8]) -> (Tensor[(7, 4, 9), uint64], Tensor[(96), uint8], Tensor[(1344), uint8], Tensor[(252), uint64], Tensor[(7, 6, 10), float32], Tensor[(5, 16, 8), bool], Tensor[(640), float64], Tensor[(12, 13, 11), float64], Tensor[(3, 30), float32], Tensor[(36), float64]) {
  %574 = cast(%var_1998, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %575 = cast(%var_1999, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
  %576 = cast(meta[relay.Constant][45] /* ty=Tensor[(252), uint64] */, dtype="uint64") /* ty=Tensor[(252), uint64] */;
  %577 = reshape(%574, newshape=[12, 8, 1]) /* ty=Tensor[(12, 8, 1), uint8] */;
  %578 = reshape(%575, newshape=[12, 8, 14]) /* ty=Tensor[(12, 8, 14), uint8] */;
  %579 = reshape(%576, newshape=[252]) /* ty=Tensor[(252), uint64] */;
  %580 = @func_1749(%577, %578, %579) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(12, 8, 14), float32], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(7, 4, 9), uint64]) */;
  %581 = cast(meta[relay.Constant][46] /* ty=Tensor[(7, 6, 10), float32] */, dtype="float32") /* ty=Tensor[(7, 6, 10), float32] */;
  %582 = tan(%581) /* ty=Tensor[(7, 6, 10), float32] */;
  %583 = cast(%582, dtype="float32") /* ty=Tensor[(7, 6, 10), float32] */;
  %584 = cast(meta[relay.Constant][47] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %585 = reshape(%584, newshape=[5, 16, 8]) /* ty=Tensor[(5, 16, 8), float64] */;
  %586 = @func_1631(%585) /* ty=(Tensor[(5, 16, 8), bool],) */;
  %587 = cast(meta[relay.Constant][48] /* ty=Tensor[(3, 30), float32] */, dtype="float32") /* ty=Tensor[(3, 30), float32] */;
  %588 = cast(meta[relay.Constant][49] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %589 = reshape(%587, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float32] */;
  %590 = reshape(%588, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %591 = @func_1362(%589, %590) /* ty=(Tensor[(10, 9, 1716), uint8], Tensor[(2, 3, 6), float64], Tensor[(12, 13, 11), float64]) */;
  %592 = %580.0;
  %593 = asinh(%583) /* ty=Tensor[(7, 6, 10), float32] */;
  %594 = %586.0;
  %595 = %591.2;
  (%592, %var_1998, %var_1999, meta[relay.Constant][45] /* ty=Tensor[(252), uint64] */, %593, %594, meta[relay.Constant][47] /* ty=Tensor[(640), float64] */, %595, meta[relay.Constant][48] /* ty=Tensor[(3, 30), float32] */, meta[relay.Constant][49] /* ty=Tensor[(36), float64] */)
}

def @func_12043(%var_12039: Tensor[(560), float64]) -> (Tensor[(3, 12, 4), int16], Tensor[(10, 8, 7), float64], Tensor[(560), float64]) {
  %596 = cast(%var_12039, dtype="float64") /* ty=Tensor[(560), float64] */;
  %597 = cast(%var_12039, dtype="float64") /* ty=Tensor[(560), float64] */;
  %598 = reshape(%596, newshape=[10, 8, 7]) /* ty=Tensor[(10, 8, 7), float64] */;
  %599 = reshape(%597, newshape=[10, 8, 7]) /* ty=Tensor[(10, 8, 7), float64] */;
  %600 = @func_4703(%598, %599) /* ty=(Tensor[(10, 8, 7), float64],) */;
  %601 = @func_10343() /* ty=Tensor[(3, 12, 4), int16] */;
  %602 = %600.0;
  (%601, %602, %var_12039)
}

def @func_13482() -> Tensor[(3, 12, 4), float32] {
  @func_10110() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_1631(%var_1625: Tensor[(5, 16, 8), float64]) -> (Tensor[(5, 16, 8), bool],) {
  %603 = cast(9.4351f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %604 = cast(%var_1625, dtype="bool") /* ty=Tensor[(5, 16, 8), bool] */;
  %605 = greater(%603, %604) /* ty=Tensor[(5, 16, 8), bool] */;
  (%605,)
}

def @func_12941(%var_12939: Tensor[(1716), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(2, 3, 6), float64], Tensor[(1716), float64]) {
  %606 = cast(%var_12939, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %607 = reshape(%606, newshape=[12, 13, 11]) /* ty=Tensor[(12, 13, 11), float64] */;
  %608 = @func_1279(%607) /* ty=(Tensor[(12, 13, 11), float64], Tensor[(2, 3, 6), float64], Tensor[(36), float64]) */;
  %609 = @func_12297() /* ty=Tensor[(3, 12, 4), float32] */;
  %610 = %608.1;
  (%609, %610, %var_12939)
}

def @func_4380(%var_4306: Tensor[(14, 16, 12), float32], %var_4319: Tensor[(4, 32), float32], %var_4349: uint64, %var_4350: Tensor[(180), uint64], %var_4354: Tensor[(1680), int32], %var_4371: Tensor[(176), int8]) -> (Tensor[(8, 2, 8), float32], Tensor[(4, 32), float32], Tensor[(96), uint8], Tensor[(14, 16, 12), float64], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64], Tensor[(12, 14, 10), bool], Tensor[(1680), int32], Tensor[(36), float64], Tensor[(176), int8]) {
  %611 = cast(%var_4319, dtype="float32") /* ty=Tensor[(4, 32), float32] */;
  %612 = cast(meta[relay.Constant][50] /* ty=Tensor[(96), uint8] */, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %613 = reshape(%611, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), float32] */;
  %614 = reshape(%612, newshape=[4, 24]) /* ty=Tensor[(4, 24), uint8] */;
  %615 = @func_3928(%613, %614) /* ty=(Tensor[(8, 2, 8), float32], Tensor[(36), float64], Tensor[(4, 24), uint8], Tensor[(1344), uint8], Tensor[(252, 1), uint64]) */;
  %616 = cast(%var_4306, dtype="float32") /* ty=Tensor[(14, 16, 12), float32] */;
  %617 = sqrt(%616) /* ty=Tensor[(14, 16, 12), float32] */;
  %618 = cast(%617, dtype="int16") /* ty=Tensor[(14, 16, 12), int16] */;
  %619 = shape_of(%var_4306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%var_4306, dtype="int16") /* ty=Tensor[(14, 16, 12), int16] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %622 = add(%620, %621) /* ty=Tensor[(14, 16, 12), int16] */;
  %623 = cast(%622, dtype="float64") /* ty=Tensor[(14, 16, 12), float64] */;
  %624 = cast(%var_4349, dtype="uint64") /* ty=uint64 */;
  %625 = cast(%var_4350, dtype="uint64") /* ty=Tensor[(180), uint64] */;
  %626 = reshape(%624, newshape=[]) /* ty=uint64 */;
  %627 = reshape(%625, newshape=[5, 9, 4]) /* ty=Tensor[(5, 9, 4), uint64] */;
  %628 = cast(%var_4354, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %629 = reshape(%628, newshape=[12, 14, 10]) /* ty=Tensor[(12, 14, 10), int32] */;
  %630 = cast(%var_4371, dtype="int8") /* ty=Tensor[(176), int8] */;
  %631 = cast(%var_4371, dtype="int8") /* ty=Tensor[(176), int8] */;
  %632 = reshape(%630, newshape=[11, 4, 4]) /* ty=Tensor[(11, 4, 4), int8] */;
  %633 = reshape(%631, newshape=[11, 4, 4]) /* ty=Tensor[(11, 4, 4), int8] */;
  %634 = @func_4157(%632, %633) /* ty=(Tensor[(11, 4, 4), bool], Tensor[(36), float64], Tensor[(128), float32], Tensor[(2, 48), uint8]) */;
  %635 = %615.0;
  %636 = cos(%623) /* ty=Tensor[(14, 16, 12), float64] */;
  %637 = @func_976(%626, %627) /* ty=Tensor[(5, 9, 4), bool] */;
  %638 = @func_3828(%629) /* ty=Tensor[(12, 14, 10), bool] */;
  %639 = %634.1;
  (%635, %var_4319, meta[relay.Constant][50] /* ty=Tensor[(96), uint8] */, %636, %637, %var_4349, %var_4350, %638, %var_4354, %639, %var_4371)
}

def @func_9439() -> (Tensor[(3, 12, 4), float32],) {
  %640 = @func_9192() /* ty=Tensor[(3, 12, 4), float32] */;
  (%640,)
}

def @func_10574(%var_10562: Tensor[(1155), float32]) -> (Tensor[(3, 12, 4), float32], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) {
  %641 = cast(%var_10562, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %642 = reshape(%641, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %643 = cast(%var_10562, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %644 = @func_10386() /* ty=Tensor[(3, 12, 4), float32] */;
  %645 = @func_5960(%642) /* ty=Tensor[(7, 11, 15), float32] */;
  %646 = log10(%643) /* ty=Tensor[(1155), float32] */;
  (%644, %645, %646)
}

def @func_11420(%var_11415: Tensor[(5, 8, 5), float64]) -> Tensor[(5, 8, 5), float64] {
  %647 = cast(%var_11415, dtype="float64") /* ty=Tensor[(5, 8, 5), float64] */;
  %648 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(5, 8, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(meta[relay.Constant][51] /* ty=Tensor[(5, 8, 5), float64] */, dtype="float64") /* ty=Tensor[(5, 8, 5), float64] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  maximum(%649, %650) /* ty=Tensor[(5, 8, 5), float64] */
}

def @func_14450(%var_14436: Tensor[(6864), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(6, 15, 5), bool], Tensor[(6864), float64]) {
  %651 = @func_12895() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %652 = cast(%var_14436, dtype="float64") /* ty=Tensor[(6864), float64] */;
  %653 = reshape(%652, newshape=[12, 572]) /* ty=Tensor[(12, 572), float64] */;
  %654 = @func_13264(%653) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(12, 572), bool], Tensor[(6, 15, 5), bool], Tensor[(12, 572), float32], Tensor[(3, 12, 4), float32]) */;
  %655 = %651.0;
  %656 = %654.3;
  (%655, %656, %var_14436)
}

def @func_11819(%var_11814: Tensor[(560), float64]) -> (Tensor[(3, 12, 4), bool], Tensor[(10, 8, 7), float64], Tensor[(560), float64]) {
  %657 = cast(%var_11814, dtype="float64") /* ty=Tensor[(560), float64] */;
  %658 = cast(%var_11814, dtype="float64") /* ty=Tensor[(560), float64] */;
  %659 = reshape(%657, newshape=[10, 8, 7]) /* ty=Tensor[(10, 8, 7), float64] */;
  %660 = reshape(%658, newshape=[10, 8, 7]) /* ty=Tensor[(10, 8, 7), float64] */;
  %661 = @func_4703(%659, %660) /* ty=(Tensor[(10, 8, 7), float64],) */;
  %662 = @func_10651() /* ty=Tensor[(3, 12, 4), bool] */;
  %663 = %661.0;
  (%662, %663, %var_11814)
}

def @func_13315() -> Tensor[(450), float32] {
  %664 = @func_9105() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(6, 1, 1), float64], Tensor[(450), float32]) */;
  %664.2
}

def @func_12895() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  %665 = @func_12297() /* ty=Tensor[(3, 12, 4), float32] */;
  %666 = cast(%665, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %667 = tan(%666) /* ty=Tensor[(3, 12, 4), float32] */;
  %668 = @func_9641() /* ty=Tensor[(3, 12, 4), float32] */;
  (%667, %668)
}

def @func_12072() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(11, 4, 15), uint32], Tensor[(660), uint8], Tensor[(3, 12, 4), float32]) {
  %669 = @func_8907() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %670 = @func_9726() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %671 = cast(meta[relay.Constant][52] /* ty=Tensor[(660), uint8] */, dtype="uint8") /* ty=Tensor[(660), uint8] */;
  %672 = reshape(%671, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), uint8] */;
  %673 = @func_7078(%672) /* ty=(Tensor[(11, 4, 15), uint8], Tensor[(11, 4, 15), uint32]) */;
  %674 = @func_8701() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %675 = %669.0;
  %676 = %670.0;
  %677 = %673.1;
  %678 = %674.0;
  (%675, %676, %677, meta[relay.Constant][52] /* ty=Tensor[(660), uint8] */, %678)
}

def @func_8801(%var_8788: Tensor[(3, 12, 4), float32]) -> Tensor[(3, 12, 4), bool] {
  %679 = @func_8556() /* ty=Tensor[(3, 12, 4), float32] */;
  %680 = cast(%var_8788, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
  %681 = shape_of(%679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%679, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%682, %683) /* ty=Tensor[(3, 12, 4), bool] */
}

def @func_14150() -> (Tensor[(3, 12, 4), float32],) {
  %684 = @func_12895() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %685 = %684.0;
  (%685,)
}

def @func_9878(%var_9841: Tensor[(4, 140), float64], %var_9873: Tensor[(144), float32]) -> (Tensor[(6, 1, 450), bool], Tensor[(6, 16, 7), int32], Tensor[(96), bool], Tensor[(4, 140), float64], Tensor[(36), float64], Tensor[(128), float32], Tensor[(3, 12, 4), float32], Tensor[(144), float32]) {
  %686 = @func_9487() /* ty=(Tensor[(3, 12, 4), float64], Tensor[(6, 1, 450), bool], Tensor[(6, 1, 450), uint16], Tensor[(3, 12, 4), float32]) */;
  %687 = cast(meta[relay.Constant][53] /* ty=Tensor[(96), bool] */, dtype="bool") /* ty=Tensor[(96), bool] */;
  %688 = cast(%var_9841, dtype="float64") /* ty=Tensor[(4, 140), float64] */;
  %689 = reshape(%687, newshape=[6, 16, 1]) /* ty=Tensor[(6, 16, 1), bool] */;
  %690 = reshape(%688, newshape=[560]) /* ty=Tensor[(560), float64] */;
  %691 = @func_6130(%689, %690) /* ty=(Tensor[(6, 16, 7), int32], Tensor[(10, 8, 7), float64], Tensor[(560), float64]) */;
  %692 = cast(meta[relay.Constant][54] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %693 = cast(meta[relay.Constant][53] /* ty=Tensor[(96), bool] */, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %694 = reshape(%692, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), float32] */;
  %695 = reshape(%693, newshape=[4, 24]) /* ty=Tensor[(4, 24), uint8] */;
  %696 = @func_3928(%694, %695) /* ty=(Tensor[(8, 2, 8), float32], Tensor[(36), float64], Tensor[(4, 24), uint8], Tensor[(1344), uint8], Tensor[(252, 1), uint64]) */;
  %697 = cast(%var_9873, dtype="float32") /* ty=Tensor[(144), float32] */;
  %698 = reshape(%697, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float32] */;
  %699 = @func_8866(%698) /* ty=(Tensor[(3, 12, 4), uint64], Tensor[(3, 12, 4), float32]) */;
  %700 = %686.1;
  %701 = %691.0;
  %702 = %696.1;
  %703 = %699.1;
  (%700, %701, meta[relay.Constant][53] /* ty=Tensor[(96), bool] */, %var_9841, %702, meta[relay.Constant][54] /* ty=Tensor[(128), float32] */, %703, %var_9873)
}

def @func_13355() -> (Tensor[(6, 11, 14), float64],) {
  %704 = cast(meta[relay.Constant][55] /* ty=Tensor[(6, 11, 14), float64] */, dtype="float64") /* ty=Tensor[(6, 11, 14), float64] */;
  %705 = sigmoid(%704) /* ty=Tensor[(6, 11, 14), float64] */;
  (%705,)
}

def @func_5572(%var_5566: Tensor[(3, 15, 4), int8], %var_5567: Tensor[(3, 15, 4), int8]) -> (Tensor[(3, 15, 4), int8],) {
  %706 = cast(%var_5567, dtype="int8") /* ty=Tensor[(3, 15, 4), int8] */;
  %707 = shape_of(%var_5566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %708 = cast(%var_5566, dtype="int8") /* ty=Tensor[(3, 15, 4), int8] */;
  %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %710 = bitwise_and(%708, %709) /* ty=Tensor[(3, 15, 4), int8] */;
  (%710,)
}

def @func_6759(%var_6720: Tensor[(3, 3, 6), float64]) -> (Tensor[(3, 3, 6), bool], Tensor[(3, 3, 6), float32], Tensor[(12, 13, 11), float64], Tensor[(1716), float64]) {
  %711 = cast(meta[relay.Constant][56] /* ty=Tensor[(3, 3, 6), float64] */, dtype="float64") /* ty=Tensor[(3, 3, 6), float64] */;
  %712 = shape_of(%var_6720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %713 = cast(%var_6720, dtype="float64") /* ty=Tensor[(3, 3, 6), float64] */;
  %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %715 = floor_divide(%713, %714) /* ty=Tensor[(3, 3, 6), float64] */;
  %716 = cast(%715, dtype="bool") /* ty=Tensor[(3, 3, 6), bool] */;
  %717 = shape_of(%var_6720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %718 = cast(%var_6720, dtype="bool") /* ty=Tensor[(3, 3, 6), bool] */;
  %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %720 = cast(%715, dtype="float32") /* ty=Tensor[(3, 3, 6), float32] */;
  %721 = cast(meta[relay.Constant][57] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %722 = reshape(%721, newshape=[12, 13, 11]) /* ty=Tensor[(12, 13, 11), float64] */;
  %723 = @func_1279(%722) /* ty=(Tensor[(12, 13, 11), float64], Tensor[(2, 3, 6), float64], Tensor[(36), float64]) */;
  %724 = logical_and(%718, %719) /* ty=Tensor[(3, 3, 6), bool] */;
  %725 = erf(%720) /* ty=Tensor[(3, 3, 6), float32] */;
  %726 = %723.0;
  (%724, %725, %726, meta[relay.Constant][57] /* ty=Tensor[(1716), float64] */)
}

def @func_11977() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  %727 = @func_9966() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %728 = @func_8701() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %729 = %727.0;
  %730 = %728.0;
  (%729, %730)
}

def @func_13578() -> Tensor[(3, 12, 4), float32] {
  %731 = @func_12981() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %731.0
}

def @func_11404(%var_11373: Tensor[(90), float32], %var_11397: Tensor[(525), float32], %var_11398: Tensor[(1680), int32], %var_11399: Tensor[(2, 672), uint8]) -> (Tensor[(3, 12, 4), float32], Tensor[(12, 13, 11), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(14, 96), uint8], Tensor[(525), float32], Tensor[(1680), int32], Tensor[(2, 672), uint8], Tensor[(1155), float32], uint64, Tensor[(176), int8]) {
  %732 = @func_10840() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %733 = cast(%var_11373, dtype="float32") /* ty=Tensor[(90), float32] */;
  %734 = cast(meta[relay.Constant][58] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %735 = reshape(%733, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float32] */;
  %736 = reshape(%734, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %737 = @func_1362(%735, %736) /* ty=(Tensor[(10, 9, 1716), uint8], Tensor[(2, 3, 6), float64], Tensor[(12, 13, 11), float64]) */;
  %738 = cast(%var_11397, dtype="float32") /* ty=Tensor[(525), float32] */;
  %739 = cast(%var_11398, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %740 = cast(%var_11399, dtype="uint8") /* ty=Tensor[(2, 672), uint8] */;
  %741 = cast(meta[relay.Constant][59] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %742 = cast(meta[relay.Constant][60] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %743 = cast(meta[relay.Constant][61] /* ty=Tensor[(176), int8] */, dtype="int8") /* ty=Tensor[(176), int8] */;
  %744 = reshape(%738, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), float32] */;
  %745 = reshape(%739, newshape=[1680]) /* ty=Tensor[(1680), int32] */;
  %746 = reshape(%740, newshape=[14, 96]) /* ty=Tensor[(14, 96), uint8] */;
  %747 = reshape(%741, newshape=[1, 1155]) /* ty=Tensor[(1, 1155), float32] */;
  %748 = reshape(%742, newshape=[]) /* ty=uint64 */;
  %749 = reshape(%743, newshape=[176]) /* ty=Tensor[(176), int8] */;
  %750 = @func_7431(%744, %745, %746, %747, %748, %749) /* ty=(Tensor[(15, 7, 5), float32], Tensor[(12, 14, 10), bool], Tensor[(1680), int32], Tensor[(36), float64], Tensor[(96), uint8], Tensor[(14, 96), uint8], Tensor[(126, 2), uint64], Tensor[(7, 11, 15), float32], Tensor[(1, 1155), float32], Tensor[(4, 32), float32], Tensor[(2688), float32], Tensor[(128), float32], uint64, Tensor[(180), uint64], Tensor[(176), int8]) */;
  %751 = %732.0;
  %752 = %737.2;
  %753 = %750.5;
  (%751, %752, %var_11373, meta[relay.Constant][58] /* ty=Tensor[(36), float64] */, %753, %var_11397, %var_11398, %var_11399, meta[relay.Constant][59] /* ty=Tensor[(1155), float32] */, meta[relay.Constant][60] /* ty=uint64 */, meta[relay.Constant][61] /* ty=Tensor[(176), int8] */)
}

def @func_9009(%var_9004: Tensor[(3, 12, 4), float32]) -> (Tensor[(3, 12, 4), bool],) {
  %754 = @func_8608() /* ty=Tensor[(3, 12, 4), float32] */;
  %755 = cast(%var_9004, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
  %756 = shape_of(%754, dtype="int32") /* ty=Tensor[(3), int32] */;
  %757 = cast(%754, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
  %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %759 = logical_or(%757, %758) /* ty=Tensor[(3, 12, 4), bool] */;
  (%759,)
}

def @func_13908() -> (Tensor[(3, 12, 4), float64], Tensor[(96), bool], Tensor[(560), float64]) {
  %760 = @func_9424() /* ty=(Tensor[(5, 6, 16), int8], int8, Tensor[(480), int8], Tensor[(3, 12, 4), float64]) */;
  %761 = cast(meta[relay.Constant][62] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %762 = %760.3;
  %763 = cast(%762, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %764 = reshape(%761, newshape=[4, 140]) /* ty=Tensor[(4, 140), float64] */;
  %765 = reshape(%763, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %766 = @func_9878(%764, %765) /* ty=(Tensor[(6, 1, 450), bool], Tensor[(6, 16, 7), int32], Tensor[(96), bool], Tensor[(4, 140), float64], Tensor[(36), float64], Tensor[(128), float32], Tensor[(3, 12, 4), float32], Tensor[(144), float32]) */;
  %767 = %766.2;
  (%762, %767, meta[relay.Constant][62] /* ty=Tensor[(560), float64] */)
}

def @func_14689(%var_14642: Tensor[(210), float64], %var_14645: Tensor[(2112), float32]) -> (Tensor[(3, 12, 4), float32], Tensor[(7, 6), int8], Tensor[(210), float64], Tensor[(7, 6), int8], Tensor[(36), float64], Tensor[(2112), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  %768 = cast(%var_14642, dtype="float64") /* ty=Tensor[(210), float64] */;
  %769 = cast(meta[relay.Constant][63] /* ty=Tensor[(7, 6), int8] */, dtype="int8") /* ty=Tensor[(7, 6), int8] */;
  %770 = cast(meta[relay.Constant][64] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %771 = cast(%var_14645, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %772 = reshape(%768, newshape=[7, 10, 3]) /* ty=Tensor[(7, 10, 3), float64] */;
  %773 = reshape(%769, newshape=[7, 6]) /* ty=Tensor[(7, 6), int8] */;
  %774 = reshape(%770, newshape=[36, 1]) /* ty=Tensor[(36, 1), float64] */;
  %775 = reshape(%771, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %776 = @func_6499(%772, %773, %774, %775) /* ty=(Tensor[(7, 10, 3), float64], Tensor[(3, 2, 7), bool], Tensor[(7, 6), int8], Tensor[(36, 1), float64], Tensor[(11, 16, 12), float32], Tensor[(2112), float32]) */;
  %777 = @func_12865() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %778 = @func_10332() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %779 = @func_11609() /* ty=Tensor[(3, 12, 4), float32] */;
  %780 = %776.2;
  %781 = %777.0;
  %782 = %778.1;
  (%779, %780, %var_14642, meta[relay.Constant][63] /* ty=Tensor[(7, 6), int8] */, meta[relay.Constant][64] /* ty=Tensor[(36), float64] */, %var_14645, %781, %782)
}

def @func_8556() -> Tensor[(3, 12, 4), float32] {
  %783 = cast(meta[relay.Constant][65] /* ty=Tensor[(3, 12, 4), float32] */, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  cosh(%783) /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_12297() -> Tensor[(3, 12, 4), float32] {
  @func_10386() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_14241() -> (Tensor[(3, 12, 4), int16],) {
  %784 = @func_10343() /* ty=Tensor[(3, 12, 4), int16] */;
  (%784,)
}

def @func_11695() -> (Tensor[(3, 12, 4), float32],) {
  %785 = @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
  %786 = %785.2;
  (%786,)
}

def @func_11561() -> (Tensor[(3, 12, 4), float32],) {
  %787 = @func_8608() /* ty=Tensor[(3, 12, 4), float32] */;
  (%787,)
}

def @func_1279(%var_1260: Tensor[(12, 13, 11), float64]) -> (Tensor[(12, 13, 11), float64], Tensor[(2, 3, 6), float64], Tensor[(36), float64]) {
  %788 = cast(%var_1260, dtype="float64") /* ty=Tensor[(12, 13, 11), float64] */;
  %789 = cast(meta[relay.Constant][66] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %790 = reshape(%789, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %791 = @func_841(%790) /* ty=(Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) */;
  %792 = log(%788) /* ty=Tensor[(12, 13, 11), float64] */;
  %793 = %791.0;
  (%792, %793, meta[relay.Constant][66] /* ty=Tensor[(36), float64] */)
}

def @func_2419(%var_2388: Tensor[(2, 48), uint8], %var_2390: Tensor[(252), uint64], %var_2394: Tensor[(90), float32]) -> (Tensor[(3, 5, 7), float64], Tensor[(252), uint64], Tensor[(2, 48), uint8], Tensor[(1344), uint8], Tensor[(252), uint64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(2, 3, 6), float64]) {
  %794 = cast(meta[relay.Constant][67] /* ty=Tensor[(3, 5, 7), float64] */, dtype="float64") /* ty=Tensor[(3, 5, 7), float64] */;
  %795 = cast(%var_2388, dtype="uint8") /* ty=Tensor[(2, 48), uint8] */;
  %796 = cast(meta[relay.Constant][68] /* ty=Tensor[(1344), uint8] */, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
  %797 = cast(%var_2390, dtype="uint64") /* ty=Tensor[(252), uint64] */;
  %798 = reshape(%795, newshape=[12, 8, 1]) /* ty=Tensor[(12, 8, 1), uint8] */;
  %799 = reshape(%796, newshape=[12, 8, 14]) /* ty=Tensor[(12, 8, 14), uint8] */;
  %800 = reshape(%797, newshape=[252]) /* ty=Tensor[(252), uint64] */;
  %801 = @func_1749(%798, %799, %800) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(12, 8, 14), float32], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(7, 4, 9), uint64]) */;
  %802 = cast(%var_2394, dtype="float32") /* ty=Tensor[(90), float32] */;
  %803 = cast(meta[relay.Constant][69] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %804 = reshape(%802, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float32] */;
  %805 = reshape(%803, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %806 = @func_1362(%804, %805) /* ty=(Tensor[(10, 9, 1716), uint8], Tensor[(2, 3, 6), float64], Tensor[(12, 13, 11), float64]) */;
  %807 = %806.1;
  %808 = cast(%807, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
  %809 = sinh(%794) /* ty=Tensor[(3, 5, 7), float64] */;
  %810 = %801.1;
  %811 = acos(%808) /* ty=Tensor[(2, 3, 6), float64] */;
  (%809, %810, %var_2388, meta[relay.Constant][68] /* ty=Tensor[(1344), uint8] */, %var_2390, %var_2394, meta[relay.Constant][69] /* ty=Tensor[(36), float64] */, %811)
}

def @func_15117() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  %812 = @func_10292() /* ty=Tensor[(3, 12, 4), float32] */;
  %813 = @func_10110() /* ty=Tensor[(3, 12, 4), float32] */;
  %814 = @func_14556() /* ty=Tensor[(3, 12, 4), float32] */;
  (%812, %813, %814)
}

def @func_12732(%var_12701: Tensor[(2688), float32], %var_12702: Tensor[(1, 128), float32]) -> (Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), bool], Tensor[(180), uint64], Tensor[(1, 128), float32], uint64, Tensor[(180), uint64], Tensor[(1680), int32], Tensor[(176), int8], Tensor[(5, 8, 5), float64], Tensor[(200), float64], Tensor[(2688), float32]) {
  %815 = @func_12163() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %816 = @func_10381() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %817 = @func_12163() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %818 = @func_9487() /* ty=(Tensor[(3, 12, 4), float64], Tensor[(6, 1, 450), bool], Tensor[(6, 1, 450), uint16], Tensor[(3, 12, 4), float32]) */;
  %819 = %818.3;
  %820 = cast(%819, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %821 = reshape(%820, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float32] */;
  %822 = @func_9009(%821) /* ty=(Tensor[(3, 12, 4), bool],) */;
  %823 = @func_9665() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %824 = cast(%var_12701, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %825 = cast(%var_12702, dtype="float32") /* ty=Tensor[(1, 128), float32] */;
  %826 = cast(meta[relay.Constant][70] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %827 = cast(meta[relay.Constant][71] /* ty=Tensor[(180), uint64] */, dtype="uint64") /* ty=Tensor[(180), uint64] */;
  %828 = cast(meta[relay.Constant][72] /* ty=Tensor[(1680), int32] */, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %829 = cast(meta[relay.Constant][73] /* ty=Tensor[(176), int8] */, dtype="int8") /* ty=Tensor[(176), int8] */;
  %830 = reshape(%824, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
  %831 = reshape(%825, newshape=[4, 32]) /* ty=Tensor[(4, 32), float32] */;
  %832 = reshape(%826, newshape=[]) /* ty=uint64 */;
  %833 = reshape(%827, newshape=[180]) /* ty=Tensor[(180), uint64] */;
  %834 = reshape(%828, newshape=[1680]) /* ty=Tensor[(1680), int32] */;
  %835 = reshape(%829, newshape=[176]) /* ty=Tensor[(176), int8] */;
  %836 = @func_4380(%830, %831, %832, %833, %834, %835) /* ty=(Tensor[(8, 2, 8), float32], Tensor[(4, 32), float32], Tensor[(96), uint8], Tensor[(14, 16, 12), float64], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64], Tensor[(12, 14, 10), bool], Tensor[(1680), int32], Tensor[(36), float64], Tensor[(176), int8]) */;
  %837 = cast(meta[relay.Constant][74] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %838 = reshape(%837, newshape=[5, 8, 5]) /* ty=Tensor[(5, 8, 5), float64] */;
  %839 = cast(%var_12701, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %840 = %815.0;
  %841 = %816.0;
  %842 = %817.0;
  %843 = %822.0;
  %844 = %823.0;
  %845 = %836.6;
  %846 = @func_11420(%838) /* ty=Tensor[(5, 8, 5), float64] */;
  %847 = log(%839) /* ty=Tensor[(2688), float32] */;
  (%840, %841, %842, %819, %843, %844, %845, %var_12702, meta[relay.Constant][70] /* ty=uint64 */, meta[relay.Constant][71] /* ty=Tensor[(180), uint64] */, meta[relay.Constant][72] /* ty=Tensor[(1680), int32] */, meta[relay.Constant][73] /* ty=Tensor[(176), int8] */, %846, meta[relay.Constant][74] /* ty=Tensor[(200), float64] */, %847)
}

def @func_13264(%var_13222: Tensor[(12, 572), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(12, 572), bool], Tensor[(6, 15, 5), bool], Tensor[(12, 572), float32], Tensor[(3, 12, 4), float32]) {
  %848 = @func_12072() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(11, 4, 15), uint32], Tensor[(660), uint8], Tensor[(3, 12, 4), float32]) */;
  %849 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 572), float64] */, dtype="bool") /* ty=Tensor[(1, 572), bool] */;
  %850 = cast(%var_13222, dtype="bool") /* ty=Tensor[(12, 572), bool] */;
  %851 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 572), float64] */, dtype="float64") /* ty=Tensor[(1, 572), float64] */;
  %852 = cast(meta[relay.Constant][76] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %853 = reshape(%851, newshape=[11, 4, 13]) /* ty=Tensor[(11, 4, 13), float64] */;
  %854 = reshape(%852, newshape=[450]) /* ty=Tensor[(450), float32] */;
  %855 = @func_9385(%853, %854) /* ty=(Tensor[(11, 4, 13), float64], Tensor[(6, 15, 5), uint32], Tensor[(450), float32]) */;
  %856 = %855.1;
  %857 = cast(meta[relay.Constant][76] /* ty=Tensor[(450), float32] */, dtype="bool") /* ty=Tensor[(450), bool] */;
  %858 = shape_of(%856, dtype="int32") /* ty=Tensor[(3), int32] */;
  %859 = cast(%856, dtype="bool") /* ty=Tensor[(6, 15, 5), bool] */;
  %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %861 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 572), float64] */, dtype="float32") /* ty=Tensor[(1, 572), float32] */;
  %862 = cast(%var_13222, dtype="float32") /* ty=Tensor[(12, 572), float32] */;
  %863 = %848.1;
  %864 = @func_9641() /* ty=Tensor[(3, 12, 4), float32] */;
  %865 = less(%849, %850) /* ty=Tensor[(12, 572), bool] */;
  %866 = equal(%859, %860) /* ty=Tensor[(6, 15, 5), bool] */;
  %867 = floor_mod(%861, %862) /* ty=Tensor[(12, 572), float32] */;
  %868 = @func_9147() /* ty=Tensor[(3, 12, 4), float32] */;
  (%863, %864, %865, %866, %867, %868)
}

def @func_12367(%var_12334: Tensor[(1, 16, 4), float32]) -> Tensor[(16, 16, 4), float64] {
  %869 = cast(%var_12334, dtype="float32") /* ty=Tensor[(1, 16, 4), float32] */;
  %870 = cast(meta[relay.Constant][77] /* ty=Tensor[(16, 16, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 16, 4), float32] */;
  %871 = mod(%869, %870) /* ty=Tensor[(16, 16, 4), float32] */;
  %872 = cast(%871, dtype="float64") /* ty=Tensor[(16, 16, 4), float64] */;
  atanh(%872) /* ty=Tensor[(16, 16, 4), float64] */
}

def @func_7078(%var_7052: Tensor[(11, 4, 15), uint8]) -> (Tensor[(11, 4, 15), uint8], Tensor[(11, 4, 15), uint32]) {
  %873 = cast(meta[relay.Constant][78] /* ty=Tensor[(11, 4, 15), uint8] */, dtype="uint8") /* ty=Tensor[(11, 4, 15), uint8] */;
  %874 = shape_of(%var_7052, dtype="int32") /* ty=Tensor[(3), int32] */;
  %875 = cast(%var_7052, dtype="uint8") /* ty=Tensor[(11, 4, 15), uint8] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %877 = cast(meta[relay.Constant][78] /* ty=Tensor[(11, 4, 15), uint8] */, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %878 = log(%877) /* ty=Tensor[(11, 4, 15), float64] */;
  %879 = cast(%var_7052, dtype="uint32") /* ty=Tensor[(11, 4, 15), uint32] */;
  %880 = shape_of(%878, dtype="int32") /* ty=Tensor[(3), int32] */;
  %881 = cast(%878, dtype="uint32") /* ty=Tensor[(11, 4, 15), uint32] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %883 = bitwise_xor(%875, %876) /* ty=Tensor[(11, 4, 15), uint8] */;
  %884 = left_shift(%881, %882) /* ty=Tensor[(11, 4, 15), uint32] */;
  (%883, %884)
}

def @func_9685() -> Tensor[(3, 12, 4), float32] {
  %885 = @func_9129() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %885.0
}

def @func_11096(%var_11072: Tensor[(36), float64], %var_11073: Tensor[(4, 24), uint8], %var_11078: Tensor[(4, 24), uint8]) -> (Tensor[(3, 12, 4), float64], Tensor[(1344), uint8], Tensor[(36), float64], Tensor[(4, 24), bool]) {
  %886 = @func_10043() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %887 = %886.1;
  %888 = cast(meta[relay.Constant][79] /* ty=Tensor[(3, 12, 4), float32] */, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %889 = shape_of(%887, dtype="int32") /* ty=Tensor[(3), int32] */;
  %890 = cast(%887, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %892 = floor_mod(%890, %891) /* ty=Tensor[(3, 12, 4), float64] */;
  %893 = cast(%892, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %894 = cast(%var_11072, dtype="float64") /* ty=Tensor[(36), float64] */;
  %895 = cast(%var_11073, dtype="uint8") /* ty=Tensor[(4, 24), uint8] */;
  %896 = reshape(%893, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float32] */;
  %897 = reshape(%894, newshape=[36]) /* ty=Tensor[(36), float64] */;
  %898 = reshape(%895, newshape=[96]) /* ty=Tensor[(96), uint8] */;
  %899 = @func_9581(%896, %897, %898) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(7, 4, 9), uint64], Tensor[(36), float64], Tensor[(1344), uint8], Tensor[(96), uint8], Tensor[(1344), uint8], Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), float32]) */;
  %900 = cast(%var_11078, dtype="bool") /* ty=Tensor[(4, 24), bool] */;
  %901 = shape_of(%var_11073, dtype="int32") /* ty=Tensor[(2), int32] */;
  %902 = cast(%var_11073, dtype="bool") /* ty=Tensor[(4, 24), bool] */;
  %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %904 = %899.3;
  %905 = logical_or(%902, %903) /* ty=Tensor[(4, 24), bool] */;
  (%892, %904, %var_11072, %905)
}

def @func_13515(%var_13503: Tensor[(2112), float32]) -> (Tensor[(3, 12, 4), bool], Tensor[(11, 16, 12), uint64], Tensor[(2112), float32], Tensor[(3, 12, 4), float64]) {
  %906 = cast(%var_13503, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %907 = reshape(%906, newshape=[11, 16, 12]) /* ty=Tensor[(11, 16, 12), float32] */;
  %908 = @func_1780(%907) /* ty=(Tensor[(11, 16, 12), uint64], Tensor[(11, 16, 12), float32]) */;
  %909 = @func_9424() /* ty=(Tensor[(5, 6, 16), int8], int8, Tensor[(480), int8], Tensor[(3, 12, 4), float64]) */;
  %910 = @func_10651() /* ty=Tensor[(3, 12, 4), bool] */;
  %911 = %908.0;
  %912 = %909.3;
  (%910, %911, %var_13503, %912)
}

def @func_10963() -> Tensor[(450), float32] {
  %913 = @func_9105() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(6, 1, 1), float64], Tensor[(450), float32]) */;
  %913.2
}

def @func_14173() -> Tensor[(3, 12, 4), float32] {
  %914 = @func_9726() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %914.0
}

def @func_12541(%var_12528: Tensor[(90), float32], %var_12531: Tensor[(1344), uint8]) -> (Tensor[(3, 12, 4), float32], Tensor[(11, 4, 16), float32], Tensor[(704), float32], Tensor[(36), float64], Tensor[(90), float32], Tensor[(175, 3), float32], Tensor[(1680), int32], Tensor[(1344), uint8]) {
  %915 = cast(meta[relay.Constant][80] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %916 = reshape(%915, newshape=[11, 4, 16]) /* ty=Tensor[(11, 4, 16), float32] */;
  %917 = cast(%var_12528, dtype="float32") /* ty=Tensor[(90), float32] */;
  %918 = cast(meta[relay.Constant][81] /* ty=Tensor[(175, 3), float32] */, dtype="float32") /* ty=Tensor[(175, 3), float32] */;
  %919 = cast(meta[relay.Constant][82] /* ty=Tensor[(1680), int32] */, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %920 = cast(%var_12531, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
  %921 = reshape(%917, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %922 = reshape(%918, newshape=[525]) /* ty=Tensor[(525), float32] */;
  %923 = reshape(%919, newshape=[1680]) /* ty=Tensor[(1680), int32] */;
  %924 = reshape(%920, newshape=[2, 672]) /* ty=Tensor[(2, 672), uint8] */;
  %925 = @func_11404(%921, %922, %923, %924) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(12, 13, 11), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(14, 96), uint8], Tensor[(525), float32], Tensor[(1680), int32], Tensor[(2, 672), uint8], Tensor[(1155), float32], uint64, Tensor[(176), int8]) */;
  %926 = @func_9685() /* ty=Tensor[(3, 12, 4), float32] */;
  %927 = @func_10657(%916) /* ty=Tensor[(11, 4, 16), float32] */;
  %928 = %925.3;
  (%926, %927, meta[relay.Constant][80] /* ty=Tensor[(704), float32] */, %928, %var_12528, meta[relay.Constant][81] /* ty=Tensor[(175, 3), float32] */, meta[relay.Constant][82] /* ty=Tensor[(1680), int32] */, %var_12531)
}

def @func_1780(%var_1762: Tensor[(11, 16, 12), float32]) -> (Tensor[(11, 16, 12), uint64], Tensor[(11, 16, 12), float32]) {
  %929 = cast(%var_1762, dtype="float32") /* ty=Tensor[(11, 16, 12), float32] */;
  %930 = log2(%929) /* ty=Tensor[(11, 16, 12), float32] */;
  %931 = cast(%930, dtype="uint64") /* ty=Tensor[(11, 16, 12), uint64] */;
  %932 = shape_of(%var_1762, dtype="int32") /* ty=Tensor[(3), int32] */;
  %933 = cast(%var_1762, dtype="uint64") /* ty=Tensor[(11, 16, 12), uint64] */;
  %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %935 = cast(%930, dtype="float32") /* ty=Tensor[(11, 16, 12), float32] */;
  %936 = left_shift(%933, %934) /* ty=Tensor[(11, 16, 12), uint64] */;
  %937 = asin(%935) /* ty=Tensor[(11, 16, 12), float32] */;
  (%936, %937)
}

def @func_13649() -> (Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  %938 = @func_11727() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %939 = @func_10332() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %940 = @func_9439() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %941 = @func_10043() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %942 = %938.0;
  %943 = %939.1;
  %944 = %940.0;
  %945 = %941.1;
  (%942, %943, %944, %945)
}

def @func_8608() -> Tensor[(3, 12, 4), float32] {
  @func_8556() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_10381() -> (Tensor[(3, 12, 4), float32],) {
  %946 = @func_9685() /* ty=Tensor[(3, 12, 4), float32] */;
  (%946,)
}

def @func_9993(%var_9987: Tensor[(7, 13, 12), float64]) -> (Tensor[(7, 13, 12), float64],) {
  %947 = cast(%var_9987, dtype="float64") /* ty=Tensor[(7, 13, 12), float64] */;
  %948 = atanh(%947) /* ty=Tensor[(7, 13, 12), float64] */;
  (%948,)
}

def @main() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(6, 7, 450), float64]) {
  %949 = @func_9439() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %950 = @func_12805() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %951 = @func_12895() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %952 = @func_9487() /* ty=(Tensor[(3, 12, 4), float64], Tensor[(6, 1, 450), bool], Tensor[(6, 1, 450), uint16], Tensor[(3, 12, 4), float32]) */;
  %953 = %952.1;
  %954 = cast(%953, dtype="float64") /* ty=Tensor[(6, 1, 450), float64] */;
  %955 = cast(meta[relay.Constant][83] /* ty=Tensor[(6, 7, 450), bool] */, dtype="float64") /* ty=Tensor[(6, 7, 450), float64] */;
  %956 = @func_12297() /* ty=Tensor[(3, 12, 4), float32] */;
  %957 = %949.0;
  %958 = %950.0;
  %959 = %951.1;
  %960 = @func_13482() /* ty=Tensor[(3, 12, 4), float32] */;
  %961 = add(%954, %955) /* ty=Tensor[(6, 7, 450), float64] */;
  (%956, %957, %958, %959, %960, %961)
}

def @func_11609() -> Tensor[(3, 12, 4), float32] {
  @func_8608() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_11745(%var_11741: uint64, %var_11742: Tensor[(180), uint64]) -> (Tensor[(3, 12, 4), float32], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64]) {
  %962 = cast(%var_11741, dtype="uint64") /* ty=uint64 */;
  %963 = cast(%var_11742, dtype="uint64") /* ty=Tensor[(180), uint64] */;
  %964 = reshape(%962, newshape=[]) /* ty=uint64 */;
  %965 = reshape(%963, newshape=[5, 9, 4]) /* ty=Tensor[(5, 9, 4), uint64] */;
  %966 = @func_10292() /* ty=Tensor[(3, 12, 4), float32] */;
  %967 = @func_976(%964, %965) /* ty=Tensor[(5, 9, 4), bool] */;
  (%966, %967, %var_11741, %var_11742)
}

def @func_197(%var_177: Tensor[(7, 4, 9), uint64]) -> (Tensor[(7, 4, 9), uint64],) {
  %968 = cast(%var_177, dtype="float32") /* ty=Tensor[(7, 4, 9), float32] */;
  %969 = exp(%968) /* ty=Tensor[(7, 4, 9), float32] */;
  %970 = cast(%var_177, dtype="uint64") /* ty=Tensor[(7, 4, 9), uint64] */;
  %971 = shape_of(meta[relay.Constant][84] /* ty=Tensor[(7, 4, 9), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %972 = cast(meta[relay.Constant][84] /* ty=Tensor[(7, 4, 9), uint64] */, dtype="uint64") /* ty=Tensor[(7, 4, 9), uint64] */;
  %973 = dyn.reshape(%970, %971, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %974 = right_shift(%972, %973) /* ty=Tensor[(7, 4, 9), uint64] */;
  %975 = cast(%974, dtype="uint64") /* ty=Tensor[(7, 4, 9), uint64] */;
  %976 = shape_of(%969, dtype="int32") /* ty=Tensor[(3), int32] */;
  %977 = cast(%969, dtype="uint64") /* ty=Tensor[(7, 4, 9), uint64] */;
  %978 = dyn.reshape(%975, %976, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %979 = bitwise_and(%977, %978) /* ty=Tensor[(7, 4, 9), uint64] */;
  (%979,)
}

def @func_9581(%var_9511: Tensor[(3, 12, 4), float32], %var_9518: Tensor[(36), float64], %var_9532: Tensor[(96), uint8]) -> (Tensor[(3, 12, 4), float32], Tensor[(7, 4, 9), uint64], Tensor[(36), float64], Tensor[(1344), uint8], Tensor[(96), uint8], Tensor[(1344), uint8], Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), float32]) {
  %980 = @func_8701() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %981 = %980.0;
  %982 = cast(%var_9511, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %983 = shape_of(%981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %984 = cast(%981, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %986 = cast(%var_9518, dtype="float64") /* ty=Tensor[(36), float64] */;
  %987 = reshape(%986, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %988 = @func_841(%987) /* ty=(Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) */;
  %989 = cast(%var_9532, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %990 = cast(meta[relay.Constant][85] /* ty=Tensor[(1344), uint8] */, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
  %991 = reshape(%989, newshape=[96]) /* ty=Tensor[(96), uint8] */;
  %992 = reshape(%990, newshape=[1344]) /* ty=Tensor[(1344), uint8] */;
  %993 = @func_2029(%991, %992) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(96), uint8], Tensor[(1344), uint8], Tensor[(252), uint64], Tensor[(7, 6, 10), float32], Tensor[(5, 16, 8), bool], Tensor[(640), float64], Tensor[(12, 13, 11), float64], Tensor[(3, 30), float32], Tensor[(36), float64]) */;
  %994 = cast(%var_9511, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %995 = cast(%var_9511, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %996 = mod(%984, %985) /* ty=Tensor[(3, 12, 4), float32] */;
  %997 = %988.3;
  %998 = %993.2;
  %999 = sqrt(%994) /* ty=Tensor[(3, 12, 4), float64] */;
  %1000 = log10(%995) /* ty=Tensor[(3, 12, 4), float32] */;
  (%996, %997, %var_9518, %998, %var_9532, meta[relay.Constant][85] /* ty=Tensor[(1344), uint8] */, %999, %1000)
}

def @func_10598() -> (Tensor[(3, 12, 4), float32],) {
  %1001 = @func_9685() /* ty=Tensor[(3, 12, 4), float32] */;
  (%1001,)
}

def @func_841(%var_812: Tensor[(2, 3, 6), float64]) -> (Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) {
  %1002 = cast(%var_812, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
  %1003 = cast(meta[relay.Constant][86] /* ty=Tensor[(252), uint64] */, dtype="uint64") /* ty=Tensor[(252), uint64] */;
  %1004 = reshape(%1003, newshape=[7, 4, 9]) /* ty=Tensor[(7, 4, 9), uint64] */;
  %1005 = @func_197(%1004) /* ty=(Tensor[(7, 4, 9), uint64],) */;
  %1006 = %1005.0;
  %1007 = cast(%1006, dtype="uint64") /* ty=Tensor[(7, 4, 9), uint64] */;
  %1008 = reshape(%1007, newshape=[7, 4, 9]) /* ty=Tensor[(7, 4, 9), uint64] */;
  %1009 = @func_197(%1008) /* ty=(Tensor[(7, 4, 9), uint64],) */;
  %1010 = acosh(%1002) /* ty=Tensor[(2, 3, 6), float64] */;
  %1011 = %1009.0;
  (%1010, %1006, meta[relay.Constant][86] /* ty=Tensor[(252), uint64] */, %1011)
}

def @func_9299() -> (Tensor[(3, 12, 4), float32],) {
  %1012 = @func_9147() /* ty=Tensor[(3, 12, 4), float32] */;
  (%1012,)
}

def @func_11727() -> (Tensor[(3, 12, 4), bool],) {
  %1013 = @func_11666() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %1014 = %1013.0;
  (%1014,)
}

def @func_10657(%var_10653: Tensor[(11, 4, 16), float32]) -> Tensor[(11, 4, 16), float32] {
  %1015 = cast(%var_10653, dtype="float32") /* ty=Tensor[(11, 4, 16), float32] */;
  sqrt(%1015) /* ty=Tensor[(11, 4, 16), float32] */
}

def @func_9424() -> (Tensor[(5, 6, 16), int8], int8, Tensor[(480), int8], Tensor[(3, 12, 4), float64]) {
  %1016 = cast(meta[relay.Constant][87] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1017 = cast(meta[relay.Constant][88] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %1018 = reshape(%1016, newshape=[]) /* ty=int8 */;
  %1019 = reshape(%1017, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int8] */;
  %1020 = @func_9299() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %1021 = %1020.0;
  %1022 = cast(%1021, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %1023 = @func_5537(%1018, %1019) /* ty=Tensor[(5, 6, 16), int8] */;
  %1024 = cos(%1022) /* ty=Tensor[(3, 12, 4), float64] */;
  (%1023, meta[relay.Constant][87] /* ty=int8 */, meta[relay.Constant][88] /* ty=Tensor[(480), int8] */, %1024)
}

def @func_11879() -> (Tensor[(3, 12, 4), bool],) {
  %1025 = @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
  %1026 = %1025.1;
  (%1026,)
}

def @func_5537(%var_5507: int8, %var_5508: Tensor[(5, 6, 16), int8]) -> Tensor[(5, 6, 16), int8] {
  %1027 = cast(%var_5507, dtype="int8") /* ty=int8 */;
  %1028 = cast(%var_5508, dtype="int8") /* ty=Tensor[(5, 6, 16), int8] */;
  bitwise_and(%1027, %1028) /* ty=Tensor[(5, 6, 16), int8] */
}

def @func_14966(%var_14954: Tensor[(210), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(7, 6), int8], Tensor[(210), float64], Tensor[(2112), float32]) {
  %1029 = @func_8907() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %1030 = cast(%var_14954, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1031 = cast(meta[relay.Constant][89] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %1032 = reshape(%1030, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1033 = reshape(%1031, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %1034 = @func_14689(%1032, %1033) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(7, 6), int8], Tensor[(210), float64], Tensor[(7, 6), int8], Tensor[(36), float64], Tensor[(2112), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %1035 = %1029.0;
  %1036 = %1034.3;
  (%1035, %1036, %var_14954, meta[relay.Constant][89] /* ty=Tensor[(2112), float32] */)
}

def @func_9129() -> (Tensor[(3, 12, 4), float32],) {
  %1037 = @func_9105() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(6, 1, 1), float64], Tensor[(450), float32]) */;
  %1038 = %1037.0;
  (%1038,)
}

def @func_13076() -> Tensor[(3, 12, 4), float32] {
  %1039 = @func_12971() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %1039.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10381() -> (Tensor[(3, 12, 4), float32],) {
  %0 = @func_9685() /* ty=Tensor[(3, 12, 4), float32] */;
  (%0,)
}

def @func_14770(%var_14767: uint64, %var_14768: Tensor[(180), uint64], %var_14769: Tensor[(560), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64], Tensor[(10, 8, 7), float64], Tensor[(560), float64], Tensor[(3, 12, 4), float32], Tensor[(96), uint8], Tensor[(36), float64], Tensor[(4, 24), uint8]) {
  %23 = fn (%var_14741: uint64, %var_14742: Tensor[(180), uint64], %var_14753: Tensor[(560), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64], Tensor[(10, 8, 7), float64], Tensor[(560), float64], Tensor[(3, 12, 4), float32], Tensor[(96), uint8], Tensor[(36), float64], Tensor[(4, 24), uint8]) {
    %1 = cast(%var_14741, dtype="uint64") /* ty=uint64 */;
    %2 = cast(%var_14742, dtype="uint64") /* ty=Tensor[(180), uint64] */;
    %3 = reshape(%1, newshape=[]) /* ty=uint64 */;
    %4 = reshape(%2, newshape=[5, 9, 4]) /* ty=Tensor[(5, 9, 4), uint64] */;
    %5 = cast(%var_14753, dtype="float64") /* ty=Tensor[(560), float64] */;
    %6 = cast(%var_14753, dtype="float64") /* ty=Tensor[(560), float64] */;
    %7 = reshape(%5, newshape=[10, 8, 7]) /* ty=Tensor[(10, 8, 7), float64] */;
    %8 = reshape(%6, newshape=[10, 8, 7]) /* ty=Tensor[(10, 8, 7), float64] */;
    %9 = @func_4703(%7, %8) /* ty=(Tensor[(10, 8, 7), float64],) */;
    %10 = @func_8701() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %11 = %10.0;
    %12 = cast(%11, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
    %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
    %14 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 24), uint8] */, dtype="uint8") /* ty=Tensor[(4, 24), uint8] */;
    %15 = reshape(%12, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float32] */;
    %16 = reshape(%13, newshape=[36]) /* ty=Tensor[(36), float64] */;
    %17 = reshape(%14, newshape=[96]) /* ty=Tensor[(96), uint8] */;
    %18 = @func_9581(%15, %16, %17) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(7, 4, 9), uint64], Tensor[(36), float64], Tensor[(1344), uint8], Tensor[(96), uint8], Tensor[(1344), uint8], Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), float32]) */;
    %19 = @func_8608() /* ty=Tensor[(3, 12, 4), float32] */;
    %20 = @func_976(%3, %4) /* ty=Tensor[(5, 9, 4), bool] */;
    %21 = %9.0;
    %22 = %18.4;
    (%19, %20, %var_14741, %var_14742, %21, %var_14753, %11, %22, meta[relay.Constant][0] /* ty=Tensor[(36), float64] */, meta[relay.Constant][1] /* ty=Tensor[(4, 24), uint8] */)
  };
  %23(%var_14767, %var_14768, %var_14769) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64], Tensor[(10, 8, 7), float64], Tensor[(560), float64], Tensor[(3, 12, 4), float32], Tensor[(96), uint8], Tensor[(36), float64], Tensor[(4, 24), uint8]) */
}

def @func_12480() -> Tensor[(6, 10, 14), float32] {
  %24 = cast(meta[relay.Constant][2] /* ty=Tensor[(6, 10, 14), float32] */, dtype="float32") /* ty=Tensor[(6, 10, 14), float32] */;
  cosh(%24) /* ty=Tensor[(6, 10, 14), float32] */
}

def @func_12073() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(11, 4, 15), uint32], Tensor[(660), uint8], Tensor[(3, 12, 4), float32]) {
  %35 = fn () -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(11, 4, 15), uint32], Tensor[(660), uint8], Tensor[(3, 12, 4), float32]) {
    %25 = @func_8907() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %26 = @func_9726() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %27 = cast(meta[relay.Constant][3] /* ty=Tensor[(660), uint8] */, dtype="uint8") /* ty=Tensor[(660), uint8] */;
    %28 = reshape(%27, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), uint8] */;
    %29 = @func_7078(%28) /* ty=(Tensor[(11, 4, 15), uint8], Tensor[(11, 4, 15), uint32]) */;
    %30 = @func_8701() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %31 = %25.0;
    %32 = %26.0;
    %33 = %29.1;
    %34 = %30.0;
    (%31, %32, %33, meta[relay.Constant][3] /* ty=Tensor[(660), uint8] */, %34)
  };
  %35() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(11, 4, 15), uint32], Tensor[(660), uint8], Tensor[(3, 12, 4), float32]) */
}

def @func_10111() -> Tensor[(3, 12, 4), float32] {
  %37 = fn () -> Tensor[(3, 12, 4), float32] {
    %36 = @func_9726() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %36.0
  };
  %37() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_12164() -> (Tensor[(3, 12, 4), bool],) {
  %40 = fn () -> (Tensor[(3, 12, 4), bool],) {
    %38 = @func_11727() /* ty=(Tensor[(3, 12, 4), bool],) */;
    %39 = %38.0;
    (%39,)
  };
  %40() /* ty=(Tensor[(3, 12, 4), bool],) */
}

def @func_9264(%var_9219: Tensor[(9, 4), float64], %var_9251: Tensor[(672, 2), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(9, 4), float64], Tensor[(42), int8], Tensor[(9, 4), float64], Tensor[(7, 4, 9), uint64], Tensor[(36), float64], Tensor[(96), uint8], Tensor[(3, 12, 4), float32], Tensor[(672, 2), uint16]) {
  %41 = @func_8701() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %42 = @func_8907() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %43 = cast(meta[relay.Constant][4] /* ty=Tensor[(42), int8] */, dtype="int8") /* ty=Tensor[(42), int8] */;
  %44 = cast(meta[relay.Constant][4] /* ty=Tensor[(42), int8] */, dtype="int8") /* ty=Tensor[(42), int8] */;
  %45 = cast(%var_9219, dtype="float64") /* ty=Tensor[(9, 4), float64] */;
  %46 = reshape(%43, newshape=[3, 2, 7]) /* ty=Tensor[(3, 2, 7), int8] */;
  %47 = reshape(%44, newshape=[3, 2, 7]) /* ty=Tensor[(3, 2, 7), int8] */;
  %48 = reshape(%45, newshape=[9, 4]) /* ty=Tensor[(9, 4), float64] */;
  %49 = @func_3534(%46, %47, %48) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(9, 4), float64], Tensor[(2, 3, 6), float64], Tensor[(3, 2, 7), bool]) */;
  %50 = cast(%var_9219, dtype="float64") /* ty=Tensor[(9, 4), float64] */;
  %51 = reshape(%50, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %52 = @func_841(%51) /* ty=(Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) */;
  %53 = cast(meta[relay.Constant][5] /* ty=Tensor[(96), uint8] */, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %54 = cast(meta[relay.Constant][6] /* ty=Tensor[(672, 2), uint8] */, dtype="uint8") /* ty=Tensor[(672, 2), uint8] */;
  %55 = %52.1;
  %56 = cast(%55, dtype="uint64") /* ty=Tensor[(7, 4, 9), uint64] */;
  %57 = reshape(%53, newshape=[12, 8, 1]) /* ty=Tensor[(12, 8, 1), uint8] */;
  %58 = reshape(%54, newshape=[12, 8, 14]) /* ty=Tensor[(12, 8, 14), uint8] */;
  %59 = reshape(%56, newshape=[252]) /* ty=Tensor[(252), uint64] */;
  %60 = @func_1749(%57, %58, %59) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(12, 8, 14), float32], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(7, 4, 9), uint64]) */;
  %61 = %41.0;
  %62 = cast(%61, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %63 = reshape(%62, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float32] */;
  %64 = @func_8866(%63) /* ty=(Tensor[(3, 12, 4), uint64], Tensor[(3, 12, 4), float32]) */;
  %65 = cast(meta[relay.Constant][6] /* ty=Tensor[(672, 2), uint8] */, dtype="float64") /* ty=Tensor[(672, 2), float64] */;
  %66 = log(%65) /* ty=Tensor[(672, 2), float64] */;
  %67 = cast(%var_9251, dtype="uint16") /* ty=Tensor[(672, 2), uint16] */;
  %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(2), int32] */;
  %69 = cast(%66, dtype="uint16") /* ty=Tensor[(672, 2), uint16] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %71 = %42.0;
  %72 = %49.1;
  %73 = %60.5;
  %74 = %64.1;
  %75 = multiply(%69, %70) /* ty=Tensor[(672, 2), uint16] */;
  (%61, %71, %72, meta[relay.Constant][4] /* ty=Tensor[(42), int8] */, %var_9219, %55, %73, meta[relay.Constant][5] /* ty=Tensor[(96), uint8] */, %74, %75)
}

def @func_12973() -> (Tensor[(3, 12, 4), float32],) {
  @func_12971() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_7183(%var_7158: Tensor[(6, 15, 5), float32]) -> (Tensor[(6, 15, 5), uint32], Tensor[(6, 1, 1), float64]) {
  %76 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 1, 1), float32] */, dtype="uint32") /* ty=Tensor[(6, 1, 1), uint32] */;
  %77 = cast(%var_7158, dtype="uint32") /* ty=Tensor[(6, 15, 5), uint32] */;
  %78 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 1, 1), float32] */, dtype="float32") /* ty=Tensor[(6, 1, 1), float32] */;
  %79 = erf(%78) /* ty=Tensor[(6, 1, 1), float32] */;
  %80 = cast(%79, dtype="float64") /* ty=Tensor[(6, 1, 1), float64] */;
  %81 = multiply(%76, %77) /* ty=Tensor[(6, 15, 5), uint32] */;
  %82 = sinh(%80) /* ty=Tensor[(6, 1, 1), float64] */;
  (%81, %82)
}

def @func_10386() -> Tensor[(3, 12, 4), float32] {
  %83 = @func_9129() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %83.0
}

def @func_12541(%var_12528: Tensor[(90), float32], %var_12531: Tensor[(1344), uint8]) -> (Tensor[(3, 12, 4), float32], Tensor[(11, 4, 16), float32], Tensor[(704), float32], Tensor[(36), float64], Tensor[(90), float32], Tensor[(175, 3), float32], Tensor[(1680), int32], Tensor[(1344), uint8]) {
  %84 = cast(meta[relay.Constant][8] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %85 = reshape(%84, newshape=[11, 4, 16]) /* ty=Tensor[(11, 4, 16), float32] */;
  %86 = cast(%var_12528, dtype="float32") /* ty=Tensor[(90), float32] */;
  %87 = cast(meta[relay.Constant][9] /* ty=Tensor[(175, 3), float32] */, dtype="float32") /* ty=Tensor[(175, 3), float32] */;
  %88 = cast(meta[relay.Constant][10] /* ty=Tensor[(1680), int32] */, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %89 = cast(%var_12531, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
  %90 = reshape(%86, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %91 = reshape(%87, newshape=[525]) /* ty=Tensor[(525), float32] */;
  %92 = reshape(%88, newshape=[1680]) /* ty=Tensor[(1680), int32] */;
  %93 = reshape(%89, newshape=[2, 672]) /* ty=Tensor[(2, 672), uint8] */;
  %94 = @func_11404(%90, %91, %92, %93) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(12, 13, 11), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(14, 96), uint8], Tensor[(525), float32], Tensor[(1680), int32], Tensor[(2, 672), uint8], Tensor[(1155), float32], uint64, Tensor[(176), int8]) */;
  %95 = @func_9685() /* ty=Tensor[(3, 12, 4), float32] */;
  %96 = @func_10657(%85) /* ty=Tensor[(11, 4, 16), float32] */;
  %97 = %94.3;
  (%95, %96, meta[relay.Constant][8] /* ty=Tensor[(704), float32] */, %97, %var_12528, meta[relay.Constant][9] /* ty=Tensor[(175, 3), float32] */, meta[relay.Constant][10] /* ty=Tensor[(1680), int32] */, %var_12531)
}

def @func_5962(%var_5961: Tensor[(7, 11, 15), float32]) -> Tensor[(7, 11, 15), float32] {
  %99 = fn (%var_5939: Tensor[(7, 11, 15), float32]) -> Tensor[(7, 11, 15), float32] {
    %98 = cast(%var_5939, dtype="float32") /* ty=Tensor[(7, 11, 15), float32] */;
    atan(%98) /* ty=Tensor[(7, 11, 15), float32] */
  };
  %99(%var_5961) /* ty=Tensor[(7, 11, 15), float32] */
}

def @func_9685() -> Tensor[(3, 12, 4), float32] {
  %100 = @func_9129() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %100.0
}

def @func_9687() -> Tensor[(3, 12, 4), float32] {
  @func_9685() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_4157(%var_4142: Tensor[(11, 4, 4), int8], %var_4143: Tensor[(11, 4, 4), int8]) -> (Tensor[(11, 4, 4), bool], Tensor[(36), float64], Tensor[(128), float32], Tensor[(2, 48), uint8]) {
  %101 = cast(%var_4143, dtype="bool") /* ty=Tensor[(11, 4, 4), bool] */;
  %102 = shape_of(%var_4142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %103 = cast(%var_4142, dtype="bool") /* ty=Tensor[(11, 4, 4), bool] */;
  %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %105 = cast(meta[relay.Constant][11] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %106 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 48), uint8] */, dtype="uint8") /* ty=Tensor[(2, 48), uint8] */;
  %107 = reshape(%105, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), float32] */;
  %108 = reshape(%106, newshape=[4, 24]) /* ty=Tensor[(4, 24), uint8] */;
  %109 = @func_3928(%107, %108) /* ty=(Tensor[(8, 2, 8), float32], Tensor[(36), float64], Tensor[(4, 24), uint8], Tensor[(1344), uint8], Tensor[(252, 1), uint64]) */;
  %110 = equal(%103, %104) /* ty=Tensor[(11, 4, 4), bool] */;
  %111 = %109.1;
  (%110, %111, meta[relay.Constant][11] /* ty=Tensor[(128), float32] */, meta[relay.Constant][12] /* ty=Tensor[(2, 48), uint8] */)
}

def @func_2424(%var_2421: Tensor[(2, 48), uint8], %var_2422: Tensor[(252), uint64], %var_2423: Tensor[(90), float32]) -> (Tensor[(3, 5, 7), float64], Tensor[(252), uint64], Tensor[(2, 48), uint8], Tensor[(1344), uint8], Tensor[(252), uint64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(2, 3, 6), float64]) {
  @func_2419(%var_2421, %var_2422, %var_2423) /* ty=(Tensor[(3, 5, 7), float64], Tensor[(252), uint64], Tensor[(2, 48), uint8], Tensor[(1344), uint8], Tensor[(252), uint64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(2, 3, 6), float64]) */
}

def @func_7438(%var_7432: Tensor[(15, 7, 5), float32], %var_7433: Tensor[(1680), int32], %var_7434: Tensor[(14, 96), uint8], %var_7435: Tensor[(1, 1155), float32], %var_7436: uint64, %var_7437: Tensor[(176), int8]) -> (Tensor[(15, 7, 5), float32], Tensor[(12, 14, 10), bool], Tensor[(1680), int32], Tensor[(36), float64], Tensor[(96), uint8], Tensor[(14, 96), uint8], Tensor[(126, 2), uint64], Tensor[(7, 11, 15), float32], Tensor[(1, 1155), float32], Tensor[(4, 32), float32], Tensor[(2688), float32], Tensor[(128), float32], uint64, Tensor[(180), uint64], Tensor[(176), int8]) {
  %142 = fn (%var_7394: Tensor[(15, 7, 5), float32], %var_7403: Tensor[(1680), int32], %var_7409: Tensor[(14, 96), uint8], %var_7413: Tensor[(1, 1155), float32], %var_7420: uint64, %var_7422: Tensor[(176), int8]) -> (Tensor[(15, 7, 5), float32], Tensor[(12, 14, 10), bool], Tensor[(1680), int32], Tensor[(36), float64], Tensor[(96), uint8], Tensor[(14, 96), uint8], Tensor[(126, 2), uint64], Tensor[(7, 11, 15), float32], Tensor[(1, 1155), float32], Tensor[(4, 32), float32], Tensor[(2688), float32], Tensor[(128), float32], uint64, Tensor[(180), uint64], Tensor[(176), int8]) {
    %112 = cast(%var_7394, dtype="float32") /* ty=Tensor[(15, 7, 5), float32] */;
    %113 = cast(%var_7403, dtype="int32") /* ty=Tensor[(1680), int32] */;
    %114 = reshape(%113, newshape=[12, 14, 10]) /* ty=Tensor[(12, 14, 10), int32] */;
    %115 = cast(meta[relay.Constant][13] /* ty=Tensor[(96), uint8] */, dtype="uint8") /* ty=Tensor[(96), uint8] */;
    %116 = cast(%var_7409, dtype="uint8") /* ty=Tensor[(14, 96), uint8] */;
    %117 = cast(meta[relay.Constant][14] /* ty=Tensor[(126, 2), uint64] */, dtype="uint64") /* ty=Tensor[(126, 2), uint64] */;
    %118 = reshape(%115, newshape=[12, 8, 1]) /* ty=Tensor[(12, 8, 1), uint8] */;
    %119 = reshape(%116, newshape=[12, 8, 14]) /* ty=Tensor[(12, 8, 14), uint8] */;
    %120 = reshape(%117, newshape=[252]) /* ty=Tensor[(252), uint64] */;
    %121 = @func_1749(%118, %119, %120) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(12, 8, 14), float32], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(7, 4, 9), uint64]) */;
    %122 = cast(%var_7413, dtype="float32") /* ty=Tensor[(1, 1155), float32] */;
    %123 = reshape(%122, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
    %124 = cast(meta[relay.Constant][15] /* ty=Tensor[(2688), float32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %125 = cast(meta[relay.Constant][16] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
    %126 = cast(%var_7420, dtype="uint64") /* ty=uint64 */;
    %127 = cast(meta[relay.Constant][17] /* ty=Tensor[(180), uint64] */, dtype="uint64") /* ty=Tensor[(180), uint64] */;
    %128 = @func_3828(%114) /* ty=Tensor[(12, 14, 10), bool] */;
    %129 = cast(%128, dtype="int32") /* ty=Tensor[(12, 14, 10), int32] */;
    %130 = cast(%var_7422, dtype="int8") /* ty=Tensor[(176), int8] */;
    %131 = reshape(%124, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
    %132 = reshape(%125, newshape=[4, 32]) /* ty=Tensor[(4, 32), float32] */;
    %133 = reshape(%126, newshape=[]) /* ty=uint64 */;
    %134 = reshape(%127, newshape=[180]) /* ty=Tensor[(180), uint64] */;
    %135 = reshape(%129, newshape=[1680]) /* ty=Tensor[(1680), int32] */;
    %136 = reshape(%130, newshape=[176]) /* ty=Tensor[(176), int8] */;
    %137 = @func_4380(%131, %132, %133, %134, %135, %136) /* ty=(Tensor[(8, 2, 8), float32], Tensor[(4, 32), float32], Tensor[(96), uint8], Tensor[(14, 16, 12), float64], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64], Tensor[(12, 14, 10), bool], Tensor[(1680), int32], Tensor[(36), float64], Tensor[(176), int8]) */;
    %138 = cos(%112) /* ty=Tensor[(15, 7, 5), float32] */;
    %139 = %121.5;
    %140 = @func_5960(%123) /* ty=Tensor[(7, 11, 15), float32] */;
    %141 = %137.1;
    (%138, %128, %var_7403, %139, meta[relay.Constant][13] /* ty=Tensor[(96), uint8] */, %var_7409, meta[relay.Constant][14] /* ty=Tensor[(126, 2), uint64] */, %140, %var_7413, %141, meta[relay.Constant][15] /* ty=Tensor[(2688), float32] */, meta[relay.Constant][16] /* ty=Tensor[(128), float32] */, %var_7420, meta[relay.Constant][17] /* ty=Tensor[(180), uint64] */, %var_7422)
  };
  %142(%var_7432, %var_7433, %var_7434, %var_7435, %var_7436, %var_7437) /* ty=(Tensor[(15, 7, 5), float32], Tensor[(12, 14, 10), bool], Tensor[(1680), int32], Tensor[(36), float64], Tensor[(96), uint8], Tensor[(14, 96), uint8], Tensor[(126, 2), uint64], Tensor[(7, 11, 15), float32], Tensor[(1, 1155), float32], Tensor[(4, 32), float32], Tensor[(2688), float32], Tensor[(128), float32], uint64, Tensor[(180), uint64], Tensor[(176), int8]) */
}

def @func_12944(%var_12942: Tensor[(1716), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(2, 3, 6), float64], Tensor[(1716), float64]) {
  @func_12941(%var_12942) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(2, 3, 6), float64], Tensor[(1716), float64]) */
}

def @func_9727() -> (Tensor[(3, 12, 4), float32],) {
  %145 = fn () -> (Tensor[(3, 12, 4), float32],) {
    %143 = @func_9105() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(6, 1, 1), float64], Tensor[(450), float32]) */;
    %144 = %143.0;
    (%144,)
  };
  %145() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_11489() -> (Tensor[(3, 12, 4), float32],) {
  @func_11487() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_3830(%var_3829: Tensor[(12, 14, 10), int32]) -> Tensor[(12, 14, 10), bool] {
  %148 = fn (%var_3814: Tensor[(12, 14, 10), int32]) -> Tensor[(12, 14, 10), bool] {
    %146 = cast(-3 /* ty=int32 */, dtype="bool") /* ty=bool */;
    %147 = cast(%var_3814, dtype="bool") /* ty=Tensor[(12, 14, 10), bool] */;
    less(%146, %147) /* ty=Tensor[(12, 14, 10), bool] */
  };
  %148(%var_3829) /* ty=Tensor[(12, 14, 10), bool] */
}

def @func_10652() -> Tensor[(3, 12, 4), bool] {
  %150 = fn () -> Tensor[(3, 12, 4), bool] {
    %149 = @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
    %149.1
  };
  %150() /* ty=Tensor[(3, 12, 4), bool] */
}

def @func_11609() -> Tensor[(3, 12, 4), float32] {
  @func_8608() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_12297() -> Tensor[(3, 12, 4), float32] {
  @func_10386() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_13421(%var_13379: Tensor[(36), float64]) -> (Tensor[(3, 12, 4), bool], Tensor[(1344), uint8], Tensor[(90), float32], Tensor[(84, 16), uint8], Tensor[(42), int8], Tensor[(36), float64], Tensor[(3, 12, 4), float32]) {
  %151 = @func_11205() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool]) */;
  %152 = cast(meta[relay.Constant][18] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %153 = cast(meta[relay.Constant][19] /* ty=Tensor[(84, 16), uint8] */, dtype="uint8") /* ty=Tensor[(84, 16), uint8] */;
  %154 = reshape(%152, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %155 = reshape(%153, newshape=[1344]) /* ty=Tensor[(1344), uint8] */;
  %156 = @func_12541(%154, %155) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(11, 4, 16), float32], Tensor[(704), float32], Tensor[(36), float64], Tensor[(90), float32], Tensor[(175, 3), float32], Tensor[(1680), int32], Tensor[(1344), uint8]) */;
  %157 = cast(%var_13379, dtype="float64") /* ty=Tensor[(36), float64] */;
  %158 = cast(meta[relay.Constant][19] /* ty=Tensor[(84, 16), uint8] */, dtype="float64") /* ty=Tensor[(84, 16), float64] */;
  %159 = reshape(%157, newshape=[9, 4]) /* ty=Tensor[(9, 4), float64] */;
  %160 = reshape(%158, newshape=[672, 2]) /* ty=Tensor[(672, 2), float64] */;
  %161 = @func_9264(%159, %160) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(9, 4), float64], Tensor[(42), int8], Tensor[(9, 4), float64], Tensor[(7, 4, 9), uint64], Tensor[(36), float64], Tensor[(96), uint8], Tensor[(3, 12, 4), float32], Tensor[(672, 2), uint16]) */;
  %162 = @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
  %163 = %151.1;
  %164 = %156.7;
  %165 = %161.3;
  %166 = %162.0;
  (%163, %164, meta[relay.Constant][18] /* ty=Tensor[(90), float32] */, meta[relay.Constant][19] /* ty=Tensor[(84, 16), uint8] */, %165, %var_13379, %166)
}

def @func_14173() -> Tensor[(3, 12, 4), float32] {
  %167 = @func_9726() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %167.0
}

def @func_9666() -> (Tensor[(3, 12, 4), bool],) {
  %170 = fn () -> (Tensor[(3, 12, 4), bool],) {
    %168 = @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
    %169 = %168.1;
    (%169,)
  };
  %170() /* ty=(Tensor[(3, 12, 4), bool],) */
}

def @func_7081(%var_7079: Tensor[(11, 4, 15), uint8]) -> (Tensor[(11, 4, 15), uint8], Tensor[(11, 4, 15), uint32]) {
  @func_7078(%var_7079) /* ty=(Tensor[(11, 4, 15), uint8], Tensor[(11, 4, 15), uint32]) */
}

def @func_2032(%var_2030: Tensor[(96), uint8], %var_2031: Tensor[(1344), uint8]) -> (Tensor[(7, 4, 9), uint64], Tensor[(96), uint8], Tensor[(1344), uint8], Tensor[(252), uint64], Tensor[(7, 6, 10), float32], Tensor[(5, 16, 8), bool], Tensor[(640), float64], Tensor[(12, 13, 11), float64], Tensor[(3, 30), float32], Tensor[(36), float64]) {
  %193 = fn (%var_1998: Tensor[(96), uint8], %var_1999: Tensor[(1344), uint8]) -> (Tensor[(7, 4, 9), uint64], Tensor[(96), uint8], Tensor[(1344), uint8], Tensor[(252), uint64], Tensor[(7, 6, 10), float32], Tensor[(5, 16, 8), bool], Tensor[(640), float64], Tensor[(12, 13, 11), float64], Tensor[(3, 30), float32], Tensor[(36), float64]) {
    %171 = cast(%var_1998, dtype="uint8") /* ty=Tensor[(96), uint8] */;
    %172 = cast(%var_1999, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
    %173 = cast(meta[relay.Constant][20] /* ty=Tensor[(252), uint64] */, dtype="uint64") /* ty=Tensor[(252), uint64] */;
    %174 = reshape(%171, newshape=[12, 8, 1]) /* ty=Tensor[(12, 8, 1), uint8] */;
    %175 = reshape(%172, newshape=[12, 8, 14]) /* ty=Tensor[(12, 8, 14), uint8] */;
    %176 = reshape(%173, newshape=[252]) /* ty=Tensor[(252), uint64] */;
    %177 = @func_1749(%174, %175, %176) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(12, 8, 14), float32], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(7, 4, 9), uint64]) */;
    %178 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 6, 10), float32] */, dtype="float32") /* ty=Tensor[(7, 6, 10), float32] */;
    %179 = tan(%178) /* ty=Tensor[(7, 6, 10), float32] */;
    %180 = cast(%179, dtype="float32") /* ty=Tensor[(7, 6, 10), float32] */;
    %181 = cast(meta[relay.Constant][22] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
    %182 = reshape(%181, newshape=[5, 16, 8]) /* ty=Tensor[(5, 16, 8), float64] */;
    %183 = @func_1631(%182) /* ty=(Tensor[(5, 16, 8), bool],) */;
    %184 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 30), float32] */, dtype="float32") /* ty=Tensor[(3, 30), float32] */;
    %185 = cast(meta[relay.Constant][24] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
    %186 = reshape(%184, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float32] */;
    %187 = reshape(%185, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
    %188 = @func_1362(%186, %187) /* ty=(Tensor[(10, 9, 1716), uint8], Tensor[(2, 3, 6), float64], Tensor[(12, 13, 11), float64]) */;
    %189 = %177.0;
    %190 = asinh(%180) /* ty=Tensor[(7, 6, 10), float32] */;
    %191 = %183.0;
    %192 = %188.2;
    (%189, %var_1998, %var_1999, meta[relay.Constant][20] /* ty=Tensor[(252), uint64] */, %190, %191, meta[relay.Constant][22] /* ty=Tensor[(640), float64] */, %192, meta[relay.Constant][23] /* ty=Tensor[(3, 30), float32] */, meta[relay.Constant][24] /* ty=Tensor[(36), float64] */)
  };
  %193(%var_2030, %var_2031) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(96), uint8], Tensor[(1344), uint8], Tensor[(252), uint64], Tensor[(7, 6, 10), float32], Tensor[(5, 16, 8), bool], Tensor[(640), float64], Tensor[(12, 13, 11), float64], Tensor[(3, 30), float32], Tensor[(36), float64]) */
}

def @func_11728() -> (Tensor[(3, 12, 4), bool],) {
  %196 = fn () -> (Tensor[(3, 12, 4), bool],) {
    %194 = @func_11666() /* ty=(Tensor[(3, 12, 4), bool],) */;
    %195 = %194.0;
    (%195,)
  };
  %196() /* ty=(Tensor[(3, 12, 4), bool],) */
}

def @func_10600() -> (Tensor[(3, 12, 4), float32],) {
  @func_10598() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_11096(%var_11072: Tensor[(36), float64], %var_11073: Tensor[(4, 24), uint8], %var_11078: Tensor[(4, 24), uint8]) -> (Tensor[(3, 12, 4), float64], Tensor[(1344), uint8], Tensor[(36), float64], Tensor[(4, 24), bool]) {
  %197 = @func_10043() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %198 = %197.1;
  %199 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 12, 4), float32] */, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %200 = shape_of(%198, dtype="int32") /* ty=Tensor[(3), int32] */;
  %201 = cast(%198, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %203 = floor_mod(%201, %202) /* ty=Tensor[(3, 12, 4), float64] */;
  %204 = cast(%203, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %205 = cast(%var_11072, dtype="float64") /* ty=Tensor[(36), float64] */;
  %206 = cast(%var_11073, dtype="uint8") /* ty=Tensor[(4, 24), uint8] */;
  %207 = reshape(%204, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float32] */;
  %208 = reshape(%205, newshape=[36]) /* ty=Tensor[(36), float64] */;
  %209 = reshape(%206, newshape=[96]) /* ty=Tensor[(96), uint8] */;
  %210 = @func_9581(%207, %208, %209) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(7, 4, 9), uint64], Tensor[(36), float64], Tensor[(1344), uint8], Tensor[(96), uint8], Tensor[(1344), uint8], Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), float32]) */;
  %211 = cast(%var_11078, dtype="bool") /* ty=Tensor[(4, 24), bool] */;
  %212 = shape_of(%var_11073, dtype="int32") /* ty=Tensor[(2), int32] */;
  %213 = cast(%var_11073, dtype="bool") /* ty=Tensor[(4, 24), bool] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %215 = %210.3;
  %216 = logical_or(%213, %214) /* ty=Tensor[(4, 24), bool] */;
  (%203, %215, %var_11072, %216)
}

def @func_4706(%var_4704: Tensor[(10, 8, 7), float64], %var_4705: Tensor[(10, 8, 7), float64]) -> (Tensor[(10, 8, 7), float64],) {
  %222 = fn (%var_4690: Tensor[(10, 8, 7), float64], %var_4691: Tensor[(10, 8, 7), float64]) -> (Tensor[(10, 8, 7), float64],) {
    %217 = cast(%var_4691, dtype="float64") /* ty=Tensor[(10, 8, 7), float64] */;
    %218 = shape_of(%var_4690, dtype="int32") /* ty=Tensor[(3), int32] */;
    %219 = cast(%var_4690, dtype="float64") /* ty=Tensor[(10, 8, 7), float64] */;
    %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %221 = mod(%219, %220) /* ty=Tensor[(10, 8, 7), float64] */;
    (%221,)
  };
  %222(%var_4704, %var_4705) /* ty=(Tensor[(10, 8, 7), float64],) */
}

def @func_14450(%var_14436: Tensor[(6864), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(6, 15, 5), bool], Tensor[(6864), float64]) {
  %223 = @func_12895() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %224 = cast(%var_14436, dtype="float64") /* ty=Tensor[(6864), float64] */;
  %225 = reshape(%224, newshape=[12, 572]) /* ty=Tensor[(12, 572), float64] */;
  %226 = @func_13264(%225) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(12, 572), bool], Tensor[(6, 15, 5), bool], Tensor[(12, 572), float32], Tensor[(3, 12, 4), float32]) */;
  %227 = %223.0;
  %228 = %226.3;
  (%227, %228, %var_14436)
}

def @func_9268(%var_9266: Tensor[(9, 4), float64], %var_9267: Tensor[(672, 2), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(9, 4), float64], Tensor[(42), int8], Tensor[(9, 4), float64], Tensor[(7, 4, 9), uint64], Tensor[(36), float64], Tensor[(96), uint8], Tensor[(3, 12, 4), float32], Tensor[(672, 2), uint16]) {
  @func_9264(%var_9266, %var_9267) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(9, 4), float64], Tensor[(42), int8], Tensor[(9, 4), float64], Tensor[(7, 4, 9), uint64], Tensor[(36), float64], Tensor[(96), uint8], Tensor[(3, 12, 4), float32], Tensor[(672, 2), uint16]) */
}

def @func_8701() -> (Tensor[(3, 12, 4), float32],) {
  %229 = @func_8608() /* ty=Tensor[(3, 12, 4), float32] */;
  (%229,)
}

def @func_13267(%var_13265: Tensor[(12, 572), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(12, 572), bool], Tensor[(6, 15, 5), bool], Tensor[(12, 572), float32], Tensor[(3, 12, 4), float32]) {
  @func_13264(%var_13265) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(12, 572), bool], Tensor[(6, 15, 5), bool], Tensor[(12, 572), float32], Tensor[(3, 12, 4), float32]) */
}

def @func_12807() -> (Tensor[(3, 12, 4), float32],) {
  @func_12805() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_14726() -> (Tensor[(3, 12, 4), float32],) {
  @func_14724() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_1631(%var_1625: Tensor[(5, 16, 8), float64]) -> (Tensor[(5, 16, 8), bool],) {
  %230 = cast(9.4351f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %231 = cast(%var_1625, dtype="bool") /* ty=Tensor[(5, 16, 8), bool] */;
  %232 = greater(%230, %231) /* ty=Tensor[(5, 16, 8), bool] */;
  (%232,)
}

def @func_5540(%var_5538: int8, %var_5539: Tensor[(5, 6, 16), int8]) -> Tensor[(5, 6, 16), int8] {
  %235 = fn (%var_5507: int8, %var_5508: Tensor[(5, 6, 16), int8]) -> Tensor[(5, 6, 16), int8] {
    %233 = cast(%var_5507, dtype="int8") /* ty=int8 */;
    %234 = cast(%var_5508, dtype="int8") /* ty=Tensor[(5, 6, 16), int8] */;
    bitwise_and(%233, %234) /* ty=Tensor[(5, 6, 16), int8] */
  };
  %235(%var_5538, %var_5539) /* ty=Tensor[(5, 6, 16), int8] */
}

def @func_12299() -> Tensor[(3, 12, 4), float32] {
  @func_12297() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_13094() -> (Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), float32]) {
  %240 = fn () -> (Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), float32]) {
    %236 = @func_9424() /* ty=(Tensor[(5, 6, 16), int8], int8, Tensor[(480), int8], Tensor[(3, 12, 4), float64]) */;
    %237 = @func_10598() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %238 = %236.3;
    %239 = %237.0;
    (%238, %239)
  };
  %240() /* ty=(Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), float32]) */
}

def @func_6133(%var_6131: Tensor[(6, 16, 1), bool], %var_6132: Tensor[(560), float64]) -> (Tensor[(6, 16, 7), int32], Tensor[(10, 8, 7), float64], Tensor[(560), float64]) {
  %255 = fn (%var_6098: Tensor[(6, 16, 1), bool], %var_6108: Tensor[(560), float64]) -> (Tensor[(6, 16, 7), int32], Tensor[(10, 8, 7), float64], Tensor[(560), float64]) {
    %241 = cast(%var_6098, dtype="bool") /* ty=Tensor[(6, 16, 1), bool] */;
    %242 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 16, 7), bool] */, dtype="bool") /* ty=Tensor[(6, 16, 7), bool] */;
    %243 = logical_or(%241, %242) /* ty=Tensor[(6, 16, 7), bool] */;
    %244 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 16, 7), bool] */, dtype="int32") /* ty=Tensor[(6, 16, 7), int32] */;
    %245 = shape_of(%243, dtype="int32") /* ty=Tensor[(3), int32] */;
    %246 = cast(%243, dtype="int32") /* ty=Tensor[(6, 16, 7), int32] */;
    %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %248 = cast(%var_6108, dtype="float64") /* ty=Tensor[(560), float64] */;
    %249 = cast(%var_6108, dtype="float64") /* ty=Tensor[(560), float64] */;
    %250 = reshape(%248, newshape=[10, 8, 7]) /* ty=Tensor[(10, 8, 7), float64] */;
    %251 = reshape(%249, newshape=[10, 8, 7]) /* ty=Tensor[(10, 8, 7), float64] */;
    %252 = @func_4703(%250, %251) /* ty=(Tensor[(10, 8, 7), float64],) */;
    %253 = multiply(%246, %247) /* ty=Tensor[(6, 16, 7), int32] */;
    %254 = %252.0;
    (%253, %254, %var_6108)
  };
  %255(%var_6131, %var_6132) /* ty=(Tensor[(6, 16, 7), int32], Tensor[(10, 8, 7), float64], Tensor[(560), float64]) */
}

def @func_11101(%var_11098: Tensor[(36), float64], %var_11099: Tensor[(4, 24), uint8], %var_11100: Tensor[(4, 24), uint8]) -> (Tensor[(3, 12, 4), float64], Tensor[(1344), uint8], Tensor[(36), float64], Tensor[(4, 24), bool]) {
  @func_11096(%var_11098, %var_11099, %var_11100) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(1344), uint8], Tensor[(36), float64], Tensor[(4, 24), bool]) */
}

def @func_11422(%var_11421: Tensor[(5, 8, 5), float64]) -> Tensor[(5, 8, 5), float64] {
  %260 = fn (%var_11415: Tensor[(5, 8, 5), float64]) -> Tensor[(5, 8, 5), float64] {
    %256 = cast(%var_11415, dtype="float64") /* ty=Tensor[(5, 8, 5), float64] */;
    %257 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(5, 8, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %258 = cast(meta[relay.Constant][27] /* ty=Tensor[(5, 8, 5), float64] */, dtype="float64") /* ty=Tensor[(5, 8, 5), float64] */;
    %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    maximum(%258, %259) /* ty=Tensor[(5, 8, 5), float64] */
  };
  %260(%var_11421) /* ty=Tensor[(5, 8, 5), float64] */
}

def @func_10719() -> Tensor[(3, 12, 4), float32] {
  @func_10717() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_12545(%var_12543: Tensor[(90), float32], %var_12544: Tensor[(1344), uint8]) -> (Tensor[(3, 12, 4), float32], Tensor[(11, 4, 16), float32], Tensor[(704), float32], Tensor[(36), float64], Tensor[(90), float32], Tensor[(175, 3), float32], Tensor[(1680), int32], Tensor[(1344), uint8]) {
  @func_12541(%var_12543, %var_12544) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(11, 4, 16), float32], Tensor[(704), float32], Tensor[(36), float64], Tensor[(90), float32], Tensor[(175, 3), float32], Tensor[(1680), int32], Tensor[(1344), uint8]) */
}

def @func_10332() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  %261 = @func_9299() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %262 = @func_9726() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %263 = %261.0;
  %264 = %262.0;
  (%263, %264)
}

def @func_8609() -> Tensor[(3, 12, 4), float32] {
  %265 = fn () -> Tensor[(3, 12, 4), float32] {
    @func_8556() /* ty=Tensor[(3, 12, 4), float32] */
  };
  %265() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_9659() -> (Tensor[(6, 1, 450), float32],) {
  @func_9657() /* ty=(Tensor[(6, 1, 450), float32],) */
}

def @func_11819(%var_11814: Tensor[(560), float64]) -> (Tensor[(3, 12, 4), bool], Tensor[(10, 8, 7), float64], Tensor[(560), float64]) {
  %266 = cast(%var_11814, dtype="float64") /* ty=Tensor[(560), float64] */;
  %267 = cast(%var_11814, dtype="float64") /* ty=Tensor[(560), float64] */;
  %268 = reshape(%266, newshape=[10, 8, 7]) /* ty=Tensor[(10, 8, 7), float64] */;
  %269 = reshape(%267, newshape=[10, 8, 7]) /* ty=Tensor[(10, 8, 7), float64] */;
  %270 = @func_4703(%268, %269) /* ty=(Tensor[(10, 8, 7), float64],) */;
  %271 = @func_10651() /* ty=Tensor[(3, 12, 4), bool] */;
  %272 = %270.0;
  (%271, %272, %var_11814)
}

def @func_14299() -> (Tensor[(3, 12, 4), float32],) {
  %275 = fn () -> (Tensor[(3, 12, 4), float32],) {
    %273 = @func_10043() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
    %274 = %273.0;
    (%274,)
  };
  %275() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_8907() -> (Tensor[(3, 12, 4), float32],) {
  %276 = @func_8556() /* ty=Tensor[(3, 12, 4), float32] */;
  (%276,)
}

def @func_13984() -> (Tensor[(3, 12, 4), float64],) {
  %277 = @func_9487() /* ty=(Tensor[(3, 12, 4), float64], Tensor[(6, 1, 450), bool], Tensor[(6, 1, 450), uint16], Tensor[(3, 12, 4), float32]) */;
  %278 = %277.0;
  (%278,)
}

def @func_11667() -> (Tensor[(3, 12, 4), bool],) {
  %286 = fn () -> (Tensor[(3, 12, 4), bool],) {
    %279 = @func_10381() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %280 = %279.0;
    %281 = cast(meta[relay.Constant][28] /* ty=Tensor[(3, 12, 4), float32] */, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
    %282 = shape_of(%280, dtype="int32") /* ty=Tensor[(3), int32] */;
    %283 = cast(%280, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
    %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %285 = greater(%283, %284) /* ty=Tensor[(3, 12, 4), bool] */;
    (%285,)
  };
  %286() /* ty=(Tensor[(3, 12, 4), bool],) */
}

def @func_8703() -> (Tensor[(3, 12, 4), float32],) {
  @func_8701() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_12732(%var_12701: Tensor[(2688), float32], %var_12702: Tensor[(1, 128), float32]) -> (Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), bool], Tensor[(180), uint64], Tensor[(1, 128), float32], uint64, Tensor[(180), uint64], Tensor[(1680), int32], Tensor[(176), int8], Tensor[(5, 8, 5), float64], Tensor[(200), float64], Tensor[(2688), float32]) {
  %287 = @func_12163() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %288 = @func_10381() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %289 = @func_12163() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %290 = @func_9487() /* ty=(Tensor[(3, 12, 4), float64], Tensor[(6, 1, 450), bool], Tensor[(6, 1, 450), uint16], Tensor[(3, 12, 4), float32]) */;
  %291 = %290.3;
  %292 = cast(%291, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %293 = reshape(%292, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float32] */;
  %294 = @func_9009(%293) /* ty=(Tensor[(3, 12, 4), bool],) */;
  %295 = @func_9665() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %296 = cast(%var_12701, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %297 = cast(%var_12702, dtype="float32") /* ty=Tensor[(1, 128), float32] */;
  %298 = cast(meta[relay.Constant][29] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %299 = cast(meta[relay.Constant][30] /* ty=Tensor[(180), uint64] */, dtype="uint64") /* ty=Tensor[(180), uint64] */;
  %300 = cast(meta[relay.Constant][31] /* ty=Tensor[(1680), int32] */, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %301 = cast(meta[relay.Constant][32] /* ty=Tensor[(176), int8] */, dtype="int8") /* ty=Tensor[(176), int8] */;
  %302 = reshape(%296, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
  %303 = reshape(%297, newshape=[4, 32]) /* ty=Tensor[(4, 32), float32] */;
  %304 = reshape(%298, newshape=[]) /* ty=uint64 */;
  %305 = reshape(%299, newshape=[180]) /* ty=Tensor[(180), uint64] */;
  %306 = reshape(%300, newshape=[1680]) /* ty=Tensor[(1680), int32] */;
  %307 = reshape(%301, newshape=[176]) /* ty=Tensor[(176), int8] */;
  %308 = @func_4380(%302, %303, %304, %305, %306, %307) /* ty=(Tensor[(8, 2, 8), float32], Tensor[(4, 32), float32], Tensor[(96), uint8], Tensor[(14, 16, 12), float64], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64], Tensor[(12, 14, 10), bool], Tensor[(1680), int32], Tensor[(36), float64], Tensor[(176), int8]) */;
  %309 = cast(meta[relay.Constant][33] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %310 = reshape(%309, newshape=[5, 8, 5]) /* ty=Tensor[(5, 8, 5), float64] */;
  %311 = cast(%var_12701, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %312 = %287.0;
  %313 = %288.0;
  %314 = %289.0;
  %315 = %294.0;
  %316 = %295.0;
  %317 = %308.6;
  %318 = @func_11420(%310) /* ty=Tensor[(5, 8, 5), float64] */;
  %319 = log(%311) /* ty=Tensor[(2688), float32] */;
  (%312, %313, %314, %291, %315, %316, %317, %var_12702, meta[relay.Constant][29] /* ty=uint64 */, meta[relay.Constant][30] /* ty=Tensor[(180), uint64] */, meta[relay.Constant][31] /* ty=Tensor[(1680), int32] */, meta[relay.Constant][32] /* ty=Tensor[(176), int8] */, %318, meta[relay.Constant][33] /* ty=Tensor[(200), float64] */, %319)
}

def @func_12445(%var_12377: int8) -> (Tensor[(3, 12, 4), float32], int8, Tensor[(3, 12, 4), float32], Tensor[(5, 6, 16), bool], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool]) {
  %320 = cast(%var_12377, dtype="int8") /* ty=int8 */;
  %321 = cast(meta[relay.Constant][34] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %322 = reshape(%320, newshape=[]) /* ty=int8 */;
  %323 = reshape(%321, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int8] */;
  %324 = @func_5537(%322, %323) /* ty=Tensor[(5, 6, 16), int8] */;
  %325 = cast(meta[relay.Constant][34] /* ty=Tensor[(480), int8] */, dtype="bool") /* ty=Tensor[(480), bool] */;
  %326 = shape_of(%324, dtype="int32") /* ty=Tensor[(3), int32] */;
  %327 = cast(%324, dtype="bool") /* ty=Tensor[(5, 6, 16), bool] */;
  %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %329 = @func_9685() /* ty=Tensor[(3, 12, 4), float32] */;
  %330 = cast(%329, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %331 = reshape(%330, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float32] */;
  %332 = @func_9009(%331) /* ty=(Tensor[(3, 12, 4), bool],) */;
  %333 = @func_11879() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %334 = @func_12297() /* ty=Tensor[(3, 12, 4), float32] */;
  %335 = less_equal(%327, %328) /* ty=Tensor[(5, 6, 16), bool] */;
  %336 = %332.0;
  %337 = @func_9641() /* ty=Tensor[(3, 12, 4), float32] */;
  %338 = %333.0;
  (%329, %var_12377, %334, %335, %336, %337, %338)
}

def @func_13317() -> Tensor[(450), float32] {
  @func_13315() /* ty=Tensor[(450), float32] */
}

def @func_9489() -> (Tensor[(3, 12, 4), float64], Tensor[(6, 1, 450), bool], Tensor[(6, 1, 450), uint16], Tensor[(3, 12, 4), float32]) {
  @func_9487() /* ty=(Tensor[(3, 12, 4), float64], Tensor[(6, 1, 450), bool], Tensor[(6, 1, 450), uint16], Tensor[(3, 12, 4), float32]) */
}

def @func_9300() -> (Tensor[(3, 12, 4), float32],) {
  %340 = fn () -> (Tensor[(3, 12, 4), float32],) {
    %339 = @func_9147() /* ty=Tensor[(3, 12, 4), float32] */;
    (%339,)
  };
  %340() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_9487() -> (Tensor[(3, 12, 4), float64], Tensor[(6, 1, 450), bool], Tensor[(6, 1, 450), uint16], Tensor[(3, 12, 4), float32]) {
  %341 = @func_9424() /* ty=(Tensor[(5, 6, 16), int8], int8, Tensor[(480), int8], Tensor[(3, 12, 4), float64]) */;
  %342 = cast(meta[relay.Constant][35] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %343 = reshape(%342, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float32] */;
  %344 = @func_7183(%343) /* ty=(Tensor[(6, 15, 5), uint32], Tensor[(6, 1, 1), float64]) */;
  %345 = %344.1;
  %346 = cast(%345, dtype="bool") /* ty=Tensor[(6, 1, 1), bool] */;
  %347 = cast(meta[relay.Constant][35] /* ty=Tensor[(450), float32] */, dtype="bool") /* ty=Tensor[(450), bool] */;
  %348 = cast(%345, dtype="uint16") /* ty=Tensor[(6, 1, 1), uint16] */;
  %349 = cast(meta[relay.Constant][35] /* ty=Tensor[(450), float32] */, dtype="uint16") /* ty=Tensor[(450), uint16] */;
  %350 = %341.3;
  %351 = not_equal(%346, %347) /* ty=Tensor[(6, 1, 450), bool] */;
  %352 = bitwise_and(%348, %349) /* ty=Tensor[(6, 1, 450), uint16] */;
  %353 = @func_8556() /* ty=Tensor[(3, 12, 4), float32] */;
  (%350, %351, %352, %353)
}

def @func_14106() -> Tensor[(3, 12, 4), float32] {
  %354 = @func_12895() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %354.1
}

def @func_14557() -> Tensor[(3, 12, 4), float32] {
  %356 = fn () -> Tensor[(3, 12, 4), float32] {
    %355 = @func_10332() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
    %355.1
  };
  %356() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_9995(%var_9994: Tensor[(7, 13, 12), float64]) -> (Tensor[(7, 13, 12), float64],) {
  %359 = fn (%var_9987: Tensor[(7, 13, 12), float64]) -> (Tensor[(7, 13, 12), float64],) {
    %357 = cast(%var_9987, dtype="float64") /* ty=Tensor[(7, 13, 12), float64] */;
    %358 = atanh(%357) /* ty=Tensor[(7, 13, 12), float64] */;
    (%358,)
  };
  %359(%var_9994) /* ty=(Tensor[(7, 13, 12), float64],) */
}

def @func_9878(%var_9841: Tensor[(4, 140), float64], %var_9873: Tensor[(144), float32]) -> (Tensor[(6, 1, 450), bool], Tensor[(6, 16, 7), int32], Tensor[(96), bool], Tensor[(4, 140), float64], Tensor[(36), float64], Tensor[(128), float32], Tensor[(3, 12, 4), float32], Tensor[(144), float32]) {
  %360 = @func_9487() /* ty=(Tensor[(3, 12, 4), float64], Tensor[(6, 1, 450), bool], Tensor[(6, 1, 450), uint16], Tensor[(3, 12, 4), float32]) */;
  %361 = cast(meta[relay.Constant][36] /* ty=Tensor[(96), bool] */, dtype="bool") /* ty=Tensor[(96), bool] */;
  %362 = cast(%var_9841, dtype="float64") /* ty=Tensor[(4, 140), float64] */;
  %363 = reshape(%361, newshape=[6, 16, 1]) /* ty=Tensor[(6, 16, 1), bool] */;
  %364 = reshape(%362, newshape=[560]) /* ty=Tensor[(560), float64] */;
  %365 = @func_6130(%363, %364) /* ty=(Tensor[(6, 16, 7), int32], Tensor[(10, 8, 7), float64], Tensor[(560), float64]) */;
  %366 = cast(meta[relay.Constant][37] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %367 = cast(meta[relay.Constant][36] /* ty=Tensor[(96), bool] */, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %368 = reshape(%366, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), float32] */;
  %369 = reshape(%367, newshape=[4, 24]) /* ty=Tensor[(4, 24), uint8] */;
  %370 = @func_3928(%368, %369) /* ty=(Tensor[(8, 2, 8), float32], Tensor[(36), float64], Tensor[(4, 24), uint8], Tensor[(1344), uint8], Tensor[(252, 1), uint64]) */;
  %371 = cast(%var_9873, dtype="float32") /* ty=Tensor[(144), float32] */;
  %372 = reshape(%371, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float32] */;
  %373 = @func_8866(%372) /* ty=(Tensor[(3, 12, 4), uint64], Tensor[(3, 12, 4), float32]) */;
  %374 = %360.1;
  %375 = %365.0;
  %376 = %370.1;
  %377 = %373.1;
  (%374, %375, meta[relay.Constant][36] /* ty=Tensor[(96), bool] */, %var_9841, %376, meta[relay.Constant][37] /* ty=Tensor[(128), float32] */, %377, %var_9873)
}

def @func_11409(%var_11405: Tensor[(90), float32], %var_11406: Tensor[(525), float32], %var_11407: Tensor[(1680), int32], %var_11408: Tensor[(2, 672), uint8]) -> (Tensor[(3, 12, 4), float32], Tensor[(12, 13, 11), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(14, 96), uint8], Tensor[(525), float32], Tensor[(1680), int32], Tensor[(2, 672), uint8], Tensor[(1155), float32], uint64, Tensor[(176), int8]) {
  %400 = fn (%var_11373: Tensor[(90), float32], %var_11397: Tensor[(525), float32], %var_11398: Tensor[(1680), int32], %var_11399: Tensor[(2, 672), uint8]) -> (Tensor[(3, 12, 4), float32], Tensor[(12, 13, 11), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(14, 96), uint8], Tensor[(525), float32], Tensor[(1680), int32], Tensor[(2, 672), uint8], Tensor[(1155), float32], uint64, Tensor[(176), int8]) {
    %378 = @func_10840() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %379 = cast(%var_11373, dtype="float32") /* ty=Tensor[(90), float32] */;
    %380 = cast(meta[relay.Constant][38] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
    %381 = reshape(%379, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float32] */;
    %382 = reshape(%380, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
    %383 = @func_1362(%381, %382) /* ty=(Tensor[(10, 9, 1716), uint8], Tensor[(2, 3, 6), float64], Tensor[(12, 13, 11), float64]) */;
    %384 = cast(%var_11397, dtype="float32") /* ty=Tensor[(525), float32] */;
    %385 = cast(%var_11398, dtype="int32") /* ty=Tensor[(1680), int32] */;
    %386 = cast(%var_11399, dtype="uint8") /* ty=Tensor[(2, 672), uint8] */;
    %387 = cast(meta[relay.Constant][39] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %388 = cast(meta[relay.Constant][40] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %389 = cast(meta[relay.Constant][41] /* ty=Tensor[(176), int8] */, dtype="int8") /* ty=Tensor[(176), int8] */;
    %390 = reshape(%384, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), float32] */;
    %391 = reshape(%385, newshape=[1680]) /* ty=Tensor[(1680), int32] */;
    %392 = reshape(%386, newshape=[14, 96]) /* ty=Tensor[(14, 96), uint8] */;
    %393 = reshape(%387, newshape=[1, 1155]) /* ty=Tensor[(1, 1155), float32] */;
    %394 = reshape(%388, newshape=[]) /* ty=uint64 */;
    %395 = reshape(%389, newshape=[176]) /* ty=Tensor[(176), int8] */;
    %396 = @func_7431(%390, %391, %392, %393, %394, %395) /* ty=(Tensor[(15, 7, 5), float32], Tensor[(12, 14, 10), bool], Tensor[(1680), int32], Tensor[(36), float64], Tensor[(96), uint8], Tensor[(14, 96), uint8], Tensor[(126, 2), uint64], Tensor[(7, 11, 15), float32], Tensor[(1, 1155), float32], Tensor[(4, 32), float32], Tensor[(2688), float32], Tensor[(128), float32], uint64, Tensor[(180), uint64], Tensor[(176), int8]) */;
    %397 = %378.0;
    %398 = %383.2;
    %399 = %396.5;
    (%397, %398, %var_11373, meta[relay.Constant][38] /* ty=Tensor[(36), float64] */, %399, %var_11397, %var_11398, %var_11399, meta[relay.Constant][39] /* ty=Tensor[(1155), float32] */, meta[relay.Constant][40] /* ty=uint64 */, meta[relay.Constant][41] /* ty=Tensor[(176), int8] */)
  };
  %400(%var_11405, %var_11406, %var_11407, %var_11408) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(12, 13, 11), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(14, 96), uint8], Tensor[(525), float32], Tensor[(1680), int32], Tensor[(2, 672), uint8], Tensor[(1155), float32], uint64, Tensor[(176), int8]) */
}

def @func_11917(%var_11916: Tensor[(54), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(3, 3, 6), float32], Tensor[(54), float64]) {
  %411 = fn (%var_11912: Tensor[(54), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(3, 3, 6), float32], Tensor[(54), float64]) {
    %401 = @func_9966() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %402 = cast(meta[relay.Constant][42] /* ty=Tensor[(252), uint64] */, dtype="uint64") /* ty=Tensor[(252), uint64] */;
    %403 = reshape(%402, newshape=[7, 4, 9]) /* ty=Tensor[(7, 4, 9), uint64] */;
    %404 = @func_197(%403) /* ty=(Tensor[(7, 4, 9), uint64],) */;
    %405 = cast(%var_11912, dtype="float64") /* ty=Tensor[(54), float64] */;
    %406 = reshape(%405, newshape=[3, 3, 6]) /* ty=Tensor[(3, 3, 6), float64] */;
    %407 = @func_6759(%406) /* ty=(Tensor[(3, 3, 6), bool], Tensor[(3, 3, 6), float32], Tensor[(12, 13, 11), float64], Tensor[(1716), float64]) */;
    %408 = %401.0;
    %409 = %404.0;
    %410 = %407.1;
    (%408, %409, meta[relay.Constant][42] /* ty=Tensor[(252), uint64] */, %410, %var_11912)
  };
  %411(%var_11916) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(3, 3, 6), float32], Tensor[(54), float64]) */
}

def @func_13998() -> Tensor[(3, 12, 4), float32] {
  %412 = @func_10043() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %412.0
}

def @func_12132(%var_12130: Tensor[(77, 15), float32]) -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(77, 15), float64], Tensor[(3, 12, 4), float32]) {
  @func_12129(%var_12130) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(77, 15), float64], Tensor[(3, 12, 4), float32]) */
}

def @func_12260() -> (Tensor[(3, 12, 4), bool],) {
  %413 = @func_11727() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %414 = %413.0;
  (%414,)
}

def @func_979(%var_977: uint64, %var_978: Tensor[(5, 9, 4), uint64]) -> Tensor[(5, 9, 4), bool] {
  %417 = fn (%var_969: uint64, %var_970: Tensor[(5, 9, 4), uint64]) -> Tensor[(5, 9, 4), bool] {
    %415 = cast(%var_969, dtype="bool") /* ty=bool */;
    %416 = cast(%var_970, dtype="bool") /* ty=Tensor[(5, 9, 4), bool] */;
    less_equal(%415, %416) /* ty=Tensor[(5, 9, 4), bool] */
  };
  %417(%var_977, %var_978) /* ty=Tensor[(5, 9, 4), bool] */
}

def @func_14846() -> Tensor[(3, 12, 4), float32] {
  @func_14844() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_6505(%var_6501: Tensor[(7, 10, 3), float64], %var_6502: Tensor[(7, 6), int8], %var_6503: Tensor[(36, 1), float64], %var_6504: Tensor[(2112), float32]) -> (Tensor[(7, 10, 3), float64], Tensor[(3, 2, 7), bool], Tensor[(7, 6), int8], Tensor[(36, 1), float64], Tensor[(11, 16, 12), float32], Tensor[(2112), float32]) {
  @func_6499(%var_6501, %var_6502, %var_6503, %var_6504) /* ty=(Tensor[(7, 10, 3), float64], Tensor[(3, 2, 7), bool], Tensor[(7, 6), int8], Tensor[(36, 1), float64], Tensor[(11, 16, 12), float32], Tensor[(2112), float32]) */
}

def @func_1782(%var_1781: Tensor[(11, 16, 12), float32]) -> (Tensor[(11, 16, 12), uint64], Tensor[(11, 16, 12), float32]) {
  %427 = fn (%var_1762: Tensor[(11, 16, 12), float32]) -> (Tensor[(11, 16, 12), uint64], Tensor[(11, 16, 12), float32]) {
    %418 = cast(%var_1762, dtype="float32") /* ty=Tensor[(11, 16, 12), float32] */;
    %419 = log2(%418) /* ty=Tensor[(11, 16, 12), float32] */;
    %420 = cast(%419, dtype="uint64") /* ty=Tensor[(11, 16, 12), uint64] */;
    %421 = shape_of(%var_1762, dtype="int32") /* ty=Tensor[(3), int32] */;
    %422 = cast(%var_1762, dtype="uint64") /* ty=Tensor[(11, 16, 12), uint64] */;
    %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %424 = cast(%419, dtype="float32") /* ty=Tensor[(11, 16, 12), float32] */;
    %425 = left_shift(%422, %423) /* ty=Tensor[(11, 16, 12), uint64] */;
    %426 = asin(%424) /* ty=Tensor[(11, 16, 12), float32] */;
    (%425, %426)
  };
  %427(%var_1781) /* ty=(Tensor[(11, 16, 12), uint64], Tensor[(11, 16, 12), float32]) */
}

def @func_12866() -> (Tensor[(3, 12, 4), float32],) {
  %430 = fn () -> (Tensor[(3, 12, 4), float32],) {
    %428 = @func_12805() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %429 = %428.0;
    (%429,)
  };
  %430() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_14043() -> (Tensor[(3, 12, 4), float32],) {
  %433 = fn () -> (Tensor[(3, 12, 4), float32],) {
    %431 = @func_11977() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
    %432 = %431.0;
    (%432,)
  };
  %433() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_12129(%var_12112: Tensor[(77, 15), float32]) -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(77, 15), float64], Tensor[(3, 12, 4), float32]) {
  %434 = @func_10043() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %435 = cast(%var_12112, dtype="float32") /* ty=Tensor[(77, 15), float32] */;
  %436 = reshape(%435, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
  %437 = @func_10574(%436) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) */;
  %438 = @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
  %439 = cast(%var_12112, dtype="float64") /* ty=Tensor[(77, 15), float64] */;
  %440 = @func_8907() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %441 = %434.1;
  %442 = %437.0;
  %443 = %438.0;
  %444 = atanh(%439) /* ty=Tensor[(77, 15), float64] */;
  %445 = %440.0;
  (%441, %442, %443, %444, %445)
}

def @func_14982() -> Tensor[(3, 5, 13), int16] {
  %446 = cast(meta[relay.Constant][44] /* ty=Tensor[(3, 5, 13), int16] */, dtype="int16") /* ty=Tensor[(3, 5, 13), int16] */;
  %447 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(3, 5, 13), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 5, 13), int16] */, dtype="int16") /* ty=Tensor[(3, 5, 13), int16] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  right_shift(%448, %449) /* ty=Tensor[(3, 5, 13), int16] */
}

def @func_10964() -> Tensor[(450), float32] {
  %451 = fn () -> Tensor[(450), float32] {
    %450 = @func_9105() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(6, 1, 1), float64], Tensor[(450), float32]) */;
    %450.2
  };
  %451() /* ty=Tensor[(450), float32] */
}

def @func_12045(%var_12044: Tensor[(560), float64]) -> (Tensor[(3, 12, 4), int16], Tensor[(10, 8, 7), float64], Tensor[(560), float64]) {
  %459 = fn (%var_12039: Tensor[(560), float64]) -> (Tensor[(3, 12, 4), int16], Tensor[(10, 8, 7), float64], Tensor[(560), float64]) {
    %452 = cast(%var_12039, dtype="float64") /* ty=Tensor[(560), float64] */;
    %453 = cast(%var_12039, dtype="float64") /* ty=Tensor[(560), float64] */;
    %454 = reshape(%452, newshape=[10, 8, 7]) /* ty=Tensor[(10, 8, 7), float64] */;
    %455 = reshape(%453, newshape=[10, 8, 7]) /* ty=Tensor[(10, 8, 7), float64] */;
    %456 = @func_4703(%454, %455) /* ty=(Tensor[(10, 8, 7), float64],) */;
    %457 = @func_10343() /* ty=Tensor[(3, 12, 4), int16] */;
    %458 = %456.0;
    (%457, %458, %var_12039)
  };
  %459(%var_12044) /* ty=(Tensor[(3, 12, 4), int16], Tensor[(10, 8, 7), float64], Tensor[(560), float64]) */
}

def @func_9192() -> Tensor[(3, 12, 4), float32] {
  %460 = @func_9129() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %460.0
}

def @func_13424(%var_13422: Tensor[(36), float64]) -> (Tensor[(3, 12, 4), bool], Tensor[(1344), uint8], Tensor[(90), float32], Tensor[(84, 16), uint8], Tensor[(42), int8], Tensor[(36), float64], Tensor[(3, 12, 4), float32]) {
  @func_13421(%var_13422) /* ty=(Tensor[(3, 12, 4), bool], Tensor[(1344), uint8], Tensor[(90), float32], Tensor[(84, 16), uint8], Tensor[(42), int8], Tensor[(36), float64], Tensor[(3, 12, 4), float32]) */
}

def @func_6759(%var_6720: Tensor[(3, 3, 6), float64]) -> (Tensor[(3, 3, 6), bool], Tensor[(3, 3, 6), float32], Tensor[(12, 13, 11), float64], Tensor[(1716), float64]) {
  %461 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 3, 6), float64] */, dtype="float64") /* ty=Tensor[(3, 3, 6), float64] */;
  %462 = shape_of(%var_6720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%var_6720, dtype="float64") /* ty=Tensor[(3, 3, 6), float64] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %465 = floor_divide(%463, %464) /* ty=Tensor[(3, 3, 6), float64] */;
  %466 = cast(%465, dtype="bool") /* ty=Tensor[(3, 3, 6), bool] */;
  %467 = shape_of(%var_6720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %468 = cast(%var_6720, dtype="bool") /* ty=Tensor[(3, 3, 6), bool] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %470 = cast(%465, dtype="float32") /* ty=Tensor[(3, 3, 6), float32] */;
  %471 = cast(meta[relay.Constant][46] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %472 = reshape(%471, newshape=[12, 13, 11]) /* ty=Tensor[(12, 13, 11), float64] */;
  %473 = @func_1279(%472) /* ty=(Tensor[(12, 13, 11), float64], Tensor[(2, 3, 6), float64], Tensor[(36), float64]) */;
  %474 = logical_and(%468, %469) /* ty=Tensor[(3, 3, 6), bool] */;
  %475 = erf(%470) /* ty=Tensor[(3, 3, 6), float32] */;
  %476 = %473.0;
  (%474, %475, %476, meta[relay.Constant][46] /* ty=Tensor[(1716), float64] */)
}

def @func_12468() -> (Tensor[(3, 12, 4), int8],) {
  %483 = fn () -> (Tensor[(3, 12, 4), int8],) {
    %477 = @func_10651() /* ty=Tensor[(3, 12, 4), bool] */;
    %478 = cast(meta[relay.Constant][47] /* ty=Tensor[(3, 12, 4), bool] */, dtype="int8") /* ty=Tensor[(3, 12, 4), int8] */;
    %479 = shape_of(%477, dtype="int32") /* ty=Tensor[(3), int32] */;
    %480 = cast(%477, dtype="int8") /* ty=Tensor[(3, 12, 4), int8] */;
    %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %482 = bitwise_or(%480, %481) /* ty=Tensor[(3, 12, 4), int8] */;
    (%482,)
  };
  %483() /* ty=(Tensor[(3, 12, 4), int8],) */
}

def @func_10285(%var_10282: Tensor[(3, 12, 4), float64], %var_10283: Tensor[(286, 2), float64], %var_10284: Tensor[(450), float32]) -> (Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(11, 4, 13), float64], Tensor[(286, 2), float64], Tensor[(450), float32]) {
  @func_10280(%var_10282, %var_10283, %var_10284) /* ty=(Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(11, 4, 13), float64], Tensor[(286, 2), float64], Tensor[(450), float32]) */
}

def @func_10576(%var_10575: Tensor[(1155), float32]) -> (Tensor[(3, 12, 4), float32], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) {
  %490 = fn (%var_10562: Tensor[(1155), float32]) -> (Tensor[(3, 12, 4), float32], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) {
    %484 = cast(%var_10562, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %485 = reshape(%484, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
    %486 = cast(%var_10562, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %487 = @func_10386() /* ty=Tensor[(3, 12, 4), float32] */;
    %488 = @func_5960(%485) /* ty=Tensor[(7, 11, 15), float32] */;
    %489 = log10(%486) /* ty=Tensor[(1155), float32] */;
    (%487, %488, %489)
  };
  %490(%var_10575) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) */
}

def @func_15331(%var_15278: Tensor[(6, 10, 14), float32]) -> (Tensor[(3, 12, 4), float32], Tensor[(6, 10, 14), float32], Tensor[(6, 10, 14), float64], Tensor[(3, 12, 4), bool]) {
  %491 = cast(%var_15278, dtype="float32") /* ty=Tensor[(6, 10, 14), float32] */;
  %492 = log2(%491) /* ty=Tensor[(6, 10, 14), float32] */;
  %493 = @func_12480() /* ty=Tensor[(6, 10, 14), float32] */;
  %494 = cast(%var_15278, dtype="bool") /* ty=Tensor[(6, 10, 14), bool] */;
  %495 = shape_of(%493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%493, dtype="bool") /* ty=Tensor[(6, 10, 14), bool] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %498 = greater_equal(%496, %497) /* ty=Tensor[(6, 10, 14), bool] */;
  %499 = cast(%498, dtype="float32") /* ty=Tensor[(6, 10, 14), float32] */;
  %500 = shape_of(%492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%492, dtype="float32") /* ty=Tensor[(6, 10, 14), float32] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %503 = cast(%492, dtype="float64") /* ty=Tensor[(6, 10, 14), float64] */;
  %504 = @func_11879() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %505 = @func_13482() /* ty=Tensor[(3, 12, 4), float32] */;
  %506 = divide(%501, %502) /* ty=Tensor[(6, 10, 14), float32] */;
  %507 = sinh(%503) /* ty=Tensor[(6, 10, 14), float64] */;
  %508 = %504.0;
  (%505, %506, %507, %508)
}

def @func_11487() -> (Tensor[(3, 12, 4), float32],) {
  %509 = @func_9726() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %510 = %509.0;
  (%510,)
}

def @func_1753(%var_1750: Tensor[(12, 8, 1), uint8], %var_1751: Tensor[(12, 8, 14), uint8], %var_1752: Tensor[(252), uint64]) -> (Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(12, 8, 14), float32], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(7, 4, 9), uint64]) {
  %531 = fn (%var_1698: Tensor[(12, 8, 1), uint8], %var_1699: Tensor[(12, 8, 14), uint8], %var_1707: Tensor[(252), uint64]) -> (Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(12, 8, 14), float32], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(7, 4, 9), uint64]) {
    %511 = cast(%var_1707, dtype="uint64") /* ty=Tensor[(252), uint64] */;
    %512 = reshape(%511, newshape=[7, 4, 9]) /* ty=Tensor[(7, 4, 9), uint64] */;
    %513 = @func_197(%512) /* ty=(Tensor[(7, 4, 9), uint64],) */;
    %514 = cast(%var_1698, dtype="uint8") /* ty=Tensor[(12, 8, 1), uint8] */;
    %515 = cast(%var_1699, dtype="uint8") /* ty=Tensor[(12, 8, 14), uint8] */;
    %516 = bitwise_and(%514, %515) /* ty=Tensor[(12, 8, 14), uint8] */;
    %517 = cast(%var_1698, dtype="float32") /* ty=Tensor[(12, 8, 1), float32] */;
    %518 = cast(%516, dtype="float32") /* ty=Tensor[(12, 8, 14), float32] */;
    %519 = cast(meta[relay.Constant][48] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %520 = cast(meta[relay.Constant][49] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
    %521 = reshape(%519, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float32] */;
    %522 = reshape(%520, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
    %523 = @func_1362(%521, %522) /* ty=(Tensor[(10, 9, 1716), uint8], Tensor[(2, 3, 6), float64], Tensor[(12, 13, 11), float64]) */;
    %524 = %523.1;
    %525 = cast(%524, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
    %526 = reshape(%525, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
    %527 = @func_841(%526) /* ty=(Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) */;
    %528 = %513.0;
    %529 = mod(%517, %518) /* ty=Tensor[(12, 8, 14), float32] */;
    %530 = %527.3;
    (%528, %var_1707, %529, %524, meta[relay.Constant][48] /* ty=Tensor[(90), float32] */, meta[relay.Constant][49] /* ty=Tensor[(36), float64] */, %530)
  };
  %531(%var_1750, %var_1751, %var_1752) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(12, 8, 14), float32], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(7, 4, 9), uint64]) */
}

def @func_11822(%var_11820: Tensor[(560), float64]) -> (Tensor[(3, 12, 4), bool], Tensor[(10, 8, 7), float64], Tensor[(560), float64]) {
  @func_11819(%var_11820) /* ty=(Tensor[(3, 12, 4), bool], Tensor[(10, 8, 7), float64], Tensor[(560), float64]) */
}

def @func_11881() -> (Tensor[(3, 12, 4), bool],) {
  @func_11879() /* ty=(Tensor[(3, 12, 4), bool],) */
}

def @func_10659(%var_10658: Tensor[(11, 4, 16), float32]) -> Tensor[(11, 4, 16), float32] {
  %533 = fn (%var_10653: Tensor[(11, 4, 16), float32]) -> Tensor[(11, 4, 16), float32] {
    %532 = cast(%var_10653, dtype="float32") /* ty=Tensor[(11, 4, 16), float32] */;
    sqrt(%532) /* ty=Tensor[(11, 4, 16), float32] */
  };
  %533(%var_10658) /* ty=Tensor[(11, 4, 16), float32] */
}

def @func_6762(%var_6760: Tensor[(3, 3, 6), float64]) -> (Tensor[(3, 3, 6), bool], Tensor[(3, 3, 6), float32], Tensor[(12, 13, 11), float64], Tensor[(1716), float64]) {
  @func_6759(%var_6760) /* ty=(Tensor[(3, 3, 6), bool], Tensor[(3, 3, 6), float32], Tensor[(12, 13, 11), float64], Tensor[(1716), float64]) */
}

def @func_13650() -> (Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  %542 = fn () -> (Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
    %534 = @func_11727() /* ty=(Tensor[(3, 12, 4), bool],) */;
    %535 = @func_10332() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
    %536 = @func_9439() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %537 = @func_10043() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
    %538 = %534.0;
    %539 = %535.1;
    %540 = %536.0;
    %541 = %537.1;
    (%538, %539, %540, %541)
  };
  %542() /* ty=(Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */
}

def @func_14151() -> (Tensor[(3, 12, 4), float32],) {
  %545 = fn () -> (Tensor[(3, 12, 4), float32],) {
    %543 = @func_12895() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
    %544 = %543.0;
    (%544,)
  };
  %545() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_14938(%var_14879: Tensor[(10, 12, 10), float32]) -> (Tensor[(10, 12, 10), float64], Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), bool]) {
  %546 = cast(%var_14879, dtype="float32") /* ty=Tensor[(10, 12, 10), float32] */;
  %547 = asinh(%546) /* ty=Tensor[(10, 12, 10), float32] */;
  %548 = cast(%547, dtype="float64") /* ty=Tensor[(10, 12, 10), float64] */;
  %549 = cast(meta[relay.Constant][50] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %550 = reshape(%549, newshape=[]) /* ty=int8 */;
  %551 = @func_12445(%550) /* ty=(Tensor[(3, 12, 4), float32], int8, Tensor[(3, 12, 4), float32], Tensor[(5, 6, 16), bool], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool]) */;
  %552 = %551.6;
  %553 = cast(%552, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %554 = cast(meta[relay.Constant][50] /* ty=int8 */, dtype="float64") /* ty=float64 */;
  %555 = @func_9665() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %556 = rsqrt(%548) /* ty=Tensor[(10, 12, 10), float64] */;
  %557 = floor_divide(%553, %554) /* ty=Tensor[(3, 12, 4), float64] */;
  %558 = %555.0;
  (%556, %557, %558)
}

def @func_9882(%var_9880: Tensor[(4, 140), float64], %var_9881: Tensor[(144), float32]) -> (Tensor[(6, 1, 450), bool], Tensor[(6, 16, 7), int32], Tensor[(96), bool], Tensor[(4, 140), float64], Tensor[(36), float64], Tensor[(128), float32], Tensor[(3, 12, 4), float32], Tensor[(144), float32]) {
  @func_9878(%var_9880, %var_9881) /* ty=(Tensor[(6, 1, 450), bool], Tensor[(6, 16, 7), int32], Tensor[(96), bool], Tensor[(4, 140), float64], Tensor[(36), float64], Tensor[(128), float32], Tensor[(3, 12, 4), float32], Tensor[(144), float32]) */
}

def @func_9440() -> (Tensor[(3, 12, 4), float32],) {
  %560 = fn () -> (Tensor[(3, 12, 4), float32],) {
    %559 = @func_9192() /* ty=Tensor[(3, 12, 4), float32] */;
    (%559,)
  };
  %560() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_11879() -> (Tensor[(3, 12, 4), bool],) {
  %561 = @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
  %562 = %561.1;
  (%562,)
}

def @func_9657() -> (Tensor[(6, 1, 450), float32],) {
  %563 = @func_9487() /* ty=(Tensor[(3, 12, 4), float64], Tensor[(6, 1, 450), bool], Tensor[(6, 1, 450), uint16], Tensor[(3, 12, 4), float32]) */;
  %564 = %563.1;
  %565 = cast(%564, dtype="float32") /* ty=Tensor[(6, 1, 450), float32] */;
  %566 = acos(%565) /* ty=Tensor[(6, 1, 450), float32] */;
  (%566,)
}

def @func_10888() -> (Tensor[(3, 12, 4), float32],) {
  %567 = @func_10840() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %568 = %567.0;
  (%568,)
}

def @func_10344() -> Tensor[(3, 12, 4), int16] {
  %574 = fn () -> Tensor[(3, 12, 4), int16] {
    %569 = @func_8608() /* ty=Tensor[(3, 12, 4), float32] */;
    %570 = cast(meta[relay.Constant][51] /* ty=Tensor[(3, 12, 4), float32] */, dtype="int16") /* ty=Tensor[(3, 12, 4), int16] */;
    %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
    %572 = cast(%569, dtype="int16") /* ty=Tensor[(3, 12, 4), int16] */;
    %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    logical_xor(%572, %573) /* ty=Tensor[(3, 12, 4), int16] */
  };
  %574() /* ty=Tensor[(3, 12, 4), int16] */
}

def @func_3539(%var_3536: Tensor[(3, 2, 7), int8], %var_3537: Tensor[(3, 2, 7), int8], %var_3538: Tensor[(9, 4), float64]) -> (Tensor[(7, 4, 9), uint64], Tensor[(9, 4), float64], Tensor[(2, 3, 6), float64], Tensor[(3, 2, 7), bool]) {
  @func_3534(%var_3536, %var_3537, %var_3538) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(9, 4), float64], Tensor[(2, 3, 6), float64], Tensor[(3, 2, 7), bool]) */
}

def @func_12482() -> Tensor[(6, 10, 14), float32] {
  @func_12480() /* ty=Tensor[(6, 10, 14), float32] */
}

def @func_10598() -> (Tensor[(3, 12, 4), float32],) {
  %575 = @func_9685() /* ty=Tensor[(3, 12, 4), float32] */;
  (%575,)
}

def @func_6499(%var_6455: Tensor[(7, 10, 3), float64], %var_6472: Tensor[(7, 6), int8], %var_6473: Tensor[(36, 1), float64], %var_6490: Tensor[(2112), float32]) -> (Tensor[(7, 10, 3), float64], Tensor[(3, 2, 7), bool], Tensor[(7, 6), int8], Tensor[(36, 1), float64], Tensor[(11, 16, 12), float32], Tensor[(2112), float32]) {
  %576 = cast(%var_6455, dtype="float64") /* ty=Tensor[(7, 10, 3), float64] */;
  %577 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(7, 10, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(meta[relay.Constant][52] /* ty=Tensor[(7, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 3), float64] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %580 = cast(%var_6472, dtype="int8") /* ty=Tensor[(7, 6), int8] */;
  %581 = cast(%var_6472, dtype="int8") /* ty=Tensor[(7, 6), int8] */;
  %582 = cast(%var_6473, dtype="float64") /* ty=Tensor[(36, 1), float64] */;
  %583 = reshape(%580, newshape=[3, 2, 7]) /* ty=Tensor[(3, 2, 7), int8] */;
  %584 = reshape(%581, newshape=[3, 2, 7]) /* ty=Tensor[(3, 2, 7), int8] */;
  %585 = reshape(%582, newshape=[9, 4]) /* ty=Tensor[(9, 4), float64] */;
  %586 = @func_3534(%583, %584, %585) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(9, 4), float64], Tensor[(2, 3, 6), float64], Tensor[(3, 2, 7), bool]) */;
  %587 = cast(%var_6490, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %588 = reshape(%587, newshape=[11, 16, 12]) /* ty=Tensor[(11, 16, 12), float32] */;
  %589 = @func_1780(%588) /* ty=(Tensor[(11, 16, 12), uint64], Tensor[(11, 16, 12), float32]) */;
  %590 = floor_mod(%578, %579) /* ty=Tensor[(7, 10, 3), float64] */;
  %591 = %586.3;
  %592 = %589.1;
  (%590, %591, %var_6472, %var_6473, %592, %var_6490)
}

def @func_9605() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) {
  @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */
}

def @func_9642() -> Tensor[(3, 12, 4), float32] {
  %594 = fn () -> Tensor[(3, 12, 4), float32] {
    %593 = @func_9299() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %593.0
  };
  %594() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_9107() -> (Tensor[(3, 12, 4), float32], Tensor[(6, 1, 1), float64], Tensor[(450), float32]) {
  @func_9105() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(6, 1, 1), float64], Tensor[(450), float32]) */
}

def @func_12971() -> (Tensor[(3, 12, 4), float32],) {
  %595 = @func_8556() /* ty=Tensor[(3, 12, 4), float32] */;
  (%595,)
}

def @func_14192() -> Tensor[(3, 12, 4), bool] {
  %597 = fn () -> Tensor[(3, 12, 4), bool] {
    %596 = @func_12163() /* ty=(Tensor[(3, 12, 4), bool],) */;
    %596.0
  };
  %597() /* ty=Tensor[(3, 12, 4), bool] */
}

def @func_13950(%var_13937: Tensor[(1, 1680), int32]) -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(12, 14, 10), bool], Tensor[(1, 1680), int32]) {
  %598 = @func_11695() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %599 = cast(%var_13937, dtype="int32") /* ty=Tensor[(1, 1680), int32] */;
  %600 = reshape(%599, newshape=[12, 14, 10]) /* ty=Tensor[(12, 14, 10), int32] */;
  %601 = @func_8556() /* ty=Tensor[(3, 12, 4), float32] */;
  %602 = %598.0;
  %603 = @func_3828(%600) /* ty=Tensor[(12, 14, 10), bool] */;
  (%601, %602, %603, %var_13937)
}

def @func_10280(%var_10160: Tensor[(3, 12, 4), float64], %var_10248: Tensor[(286, 2), float64], %var_10249: Tensor[(450), float32]) -> (Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(11, 4, 13), float64], Tensor[(286, 2), float64], Tensor[(450), float32]) {
  %604 = @func_9665() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %605 = %604.0;
  %606 = cast(%605, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %607 = atanh(%606) /* ty=Tensor[(3, 12, 4), float64] */;
  %608 = cast(%var_10160, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
  %609 = shape_of(%607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(%607, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %612 = @func_9665() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %613 = cast(%var_10248, dtype="float64") /* ty=Tensor[(286, 2), float64] */;
  %614 = cast(%var_10249, dtype="float32") /* ty=Tensor[(450), float32] */;
  %615 = reshape(%613, newshape=[11, 4, 13]) /* ty=Tensor[(11, 4, 13), float64] */;
  %616 = reshape(%614, newshape=[450]) /* ty=Tensor[(450), float32] */;
  %617 = @func_9385(%615, %616) /* ty=(Tensor[(11, 4, 13), float64], Tensor[(6, 15, 5), uint32], Tensor[(450), float32]) */;
  %618 = not_equal(%610, %611) /* ty=Tensor[(3, 12, 4), bool] */;
  %619 = @func_9685() /* ty=Tensor[(3, 12, 4), float32] */;
  %620 = %612.0;
  %621 = %617.0;
  (%618, %619, %620, %621, %var_10248, %var_10249)
}

def @func_14175() -> Tensor[(3, 12, 4), float32] {
  @func_14173() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_14349() -> (Tensor[(3, 12, 4), bool],) {
  %624 = fn () -> (Tensor[(3, 12, 4), bool],) {
    %622 = @func_12163() /* ty=(Tensor[(3, 12, 4), bool],) */;
    %623 = %622.0;
    (%623,)
  };
  %624() /* ty=(Tensor[(3, 12, 4), bool],) */
}

def @func_13484() -> Tensor[(3, 12, 4), float32] {
  @func_13482() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_9011(%var_9010: Tensor[(3, 12, 4), float32]) -> (Tensor[(3, 12, 4), bool],) {
  %631 = fn (%var_9004: Tensor[(3, 12, 4), float32]) -> (Tensor[(3, 12, 4), bool],) {
    %625 = @func_8608() /* ty=Tensor[(3, 12, 4), float32] */;
    %626 = cast(%var_9004, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
    %627 = shape_of(%625, dtype="int32") /* ty=Tensor[(3), int32] */;
    %628 = cast(%625, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
    %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %630 = logical_or(%628, %629) /* ty=Tensor[(3, 12, 4), bool] */;
    (%630,)
  };
  %631(%var_9010) /* ty=(Tensor[(3, 12, 4), bool],) */
}

def @func_1634(%var_1632: Tensor[(5, 16, 8), float64]) -> (Tensor[(5, 16, 8), bool],) {
  @func_1631(%var_1632) /* ty=(Tensor[(5, 16, 8), bool],) */
}

def @func_14605() -> Tensor[(450), float32] {
  @func_10963() /* ty=Tensor[(450), float32] */
}

def @func_9425() -> (Tensor[(5, 6, 16), int8], int8, Tensor[(480), int8], Tensor[(3, 12, 4), float64]) {
  %641 = fn () -> (Tensor[(5, 6, 16), int8], int8, Tensor[(480), int8], Tensor[(3, 12, 4), float64]) {
    %632 = cast(meta[relay.Constant][53] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %633 = cast(meta[relay.Constant][54] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
    %634 = reshape(%632, newshape=[]) /* ty=int8 */;
    %635 = reshape(%633, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int8] */;
    %636 = @func_9299() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %637 = %636.0;
    %638 = cast(%637, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
    %639 = @func_5537(%634, %635) /* ty=Tensor[(5, 6, 16), int8] */;
    %640 = cos(%638) /* ty=Tensor[(3, 12, 4), float64] */;
    (%639, meta[relay.Constant][53] /* ty=int8 */, meta[relay.Constant][54] /* ty=Tensor[(480), int8] */, %640)
  };
  %641() /* ty=(Tensor[(5, 6, 16), int8], int8, Tensor[(480), int8], Tensor[(3, 12, 4), float64]) */
}

def @func_8803(%var_8802: Tensor[(3, 12, 4), float32]) -> Tensor[(3, 12, 4), bool] {
  %647 = fn (%var_8788: Tensor[(3, 12, 4), float32]) -> Tensor[(3, 12, 4), bool] {
    %642 = @func_8556() /* ty=Tensor[(3, 12, 4), float32] */;
    %643 = cast(%var_8788, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
    %644 = shape_of(%642, dtype="int32") /* ty=Tensor[(3), int32] */;
    %645 = cast(%642, dtype="bool") /* ty=Tensor[(3, 12, 4), bool] */;
    %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%645, %646) /* ty=Tensor[(3, 12, 4), bool] */
  };
  %647(%var_8802) /* ty=Tensor[(3, 12, 4), bool] */
}

def @func_13072(%var_13071: Tensor[(560), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(128), float32], Tensor[(560), float64]) {
  %655 = fn (%var_13057: Tensor[(560), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(128), float32], Tensor[(560), float64]) {
    %648 = cast(%var_13057, dtype="float64") /* ty=Tensor[(560), float64] */;
    %649 = @func_10292() /* ty=Tensor[(3, 12, 4), float32] */;
    %650 = cast(%649, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
    %651 = reshape(%648, newshape=[4, 140]) /* ty=Tensor[(4, 140), float64] */;
    %652 = reshape(%650, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %653 = @func_9878(%651, %652) /* ty=(Tensor[(6, 1, 450), bool], Tensor[(6, 16, 7), int32], Tensor[(96), bool], Tensor[(4, 140), float64], Tensor[(36), float64], Tensor[(128), float32], Tensor[(3, 12, 4), float32], Tensor[(144), float32]) */;
    %654 = %653.5;
    (%649, %654, %var_13057)
  };
  %655(%var_13071) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(128), float32], Tensor[(560), float64]) */
}

def @func_14361() -> Tensor[(3, 12, 4), float32] {
  @func_14359() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_13315() -> Tensor[(450), float32] {
  %656 = @func_9105() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(6, 1, 1), float64], Tensor[(450), float32]) */;
  %656.2
}

def @func_12941(%var_12939: Tensor[(1716), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(2, 3, 6), float64], Tensor[(1716), float64]) {
  %657 = cast(%var_12939, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %658 = reshape(%657, newshape=[12, 13, 11]) /* ty=Tensor[(12, 13, 11), float64] */;
  %659 = @func_1279(%658) /* ty=(Tensor[(12, 13, 11), float64], Tensor[(2, 3, 6), float64], Tensor[(36), float64]) */;
  %660 = @func_12297() /* ty=Tensor[(3, 12, 4), float32] */;
  %661 = %659.1;
  (%660, %661, %var_12939)
}

def @func_843(%var_842: Tensor[(2, 3, 6), float64]) -> (Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) {
  %672 = fn (%var_812: Tensor[(2, 3, 6), float64]) -> (Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) {
    %662 = cast(%var_812, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
    %663 = cast(meta[relay.Constant][55] /* ty=Tensor[(252), uint64] */, dtype="uint64") /* ty=Tensor[(252), uint64] */;
    %664 = reshape(%663, newshape=[7, 4, 9]) /* ty=Tensor[(7, 4, 9), uint64] */;
    %665 = @func_197(%664) /* ty=(Tensor[(7, 4, 9), uint64],) */;
    %666 = %665.0;
    %667 = cast(%666, dtype="uint64") /* ty=Tensor[(7, 4, 9), uint64] */;
    %668 = reshape(%667, newshape=[7, 4, 9]) /* ty=Tensor[(7, 4, 9), uint64] */;
    %669 = @func_197(%668) /* ty=(Tensor[(7, 4, 9), uint64],) */;
    %670 = acosh(%662) /* ty=Tensor[(2, 3, 6), float64] */;
    %671 = %669.0;
    (%670, %666, meta[relay.Constant][55] /* ty=Tensor[(252), uint64] */, %671)
  };
  %672(%var_842) /* ty=(Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) */
}

def @func_13046() -> (Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) {
  %676 = fn () -> (Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) {
    %673 = @func_12163() /* ty=(Tensor[(3, 12, 4), bool],) */;
    %674 = %673.0;
    %675 = @func_9192() /* ty=Tensor[(3, 12, 4), float32] */;
    (%674, %675)
  };
  %676() /* ty=(Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */
}

def @func_14359() -> Tensor[(3, 12, 4), float32] {
  %677 = @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
  %677.0
}

def @func_1279(%var_1260: Tensor[(12, 13, 11), float64]) -> (Tensor[(12, 13, 11), float64], Tensor[(2, 3, 6), float64], Tensor[(36), float64]) {
  %678 = cast(%var_1260, dtype="float64") /* ty=Tensor[(12, 13, 11), float64] */;
  %679 = cast(meta[relay.Constant][56] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %680 = reshape(%679, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %681 = @func_841(%680) /* ty=(Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) */;
  %682 = log(%678) /* ty=Tensor[(12, 13, 11), float64] */;
  %683 = %681.0;
  (%682, %683, meta[relay.Constant][56] /* ty=Tensor[(36), float64] */)
}

def @func_13909() -> (Tensor[(3, 12, 4), float64], Tensor[(96), bool], Tensor[(560), float64]) {
  %692 = fn () -> (Tensor[(3, 12, 4), float64], Tensor[(96), bool], Tensor[(560), float64]) {
    %684 = @func_9424() /* ty=(Tensor[(5, 6, 16), int8], int8, Tensor[(480), int8], Tensor[(3, 12, 4), float64]) */;
    %685 = cast(meta[relay.Constant][57] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
    %686 = %684.3;
    %687 = cast(%686, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
    %688 = reshape(%685, newshape=[4, 140]) /* ty=Tensor[(4, 140), float64] */;
    %689 = reshape(%687, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %690 = @func_9878(%688, %689) /* ty=(Tensor[(6, 1, 450), bool], Tensor[(6, 16, 7), int32], Tensor[(96), bool], Tensor[(4, 140), float64], Tensor[(36), float64], Tensor[(128), float32], Tensor[(3, 12, 4), float32], Tensor[(144), float32]) */;
    %691 = %690.2;
    (%686, %691, meta[relay.Constant][57] /* ty=Tensor[(560), float64] */)
  };
  %692() /* ty=(Tensor[(3, 12, 4), float64], Tensor[(96), bool], Tensor[(560), float64]) */
}

def @func_10840() -> (Tensor[(3, 12, 4), float32],) {
  %693 = @func_8907() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %694 = %693.0;
  (%694,)
}

def @func_14530(%var_14529: Tensor[(1716), float64]) -> (Tensor[(3, 12, 4), bool], Tensor[(1716), int16], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(3, 12, 4), float32], int8, Tensor[(2, 3, 6), float64]) {
  %718 = fn (%var_14490: Tensor[(1716), float64]) -> (Tensor[(3, 12, 4), bool], Tensor[(1716), int16], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(3, 12, 4), float32], int8, Tensor[(2, 3, 6), float64]) {
    %695 = @func_12163() /* ty=(Tensor[(3, 12, 4), bool],) */;
    %696 = cast(%var_14490, dtype="int16") /* ty=Tensor[(1716), int16] */;
    %697 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(1716), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %698 = cast(meta[relay.Constant][58] /* ty=Tensor[(1716), float64] */, dtype="int16") /* ty=Tensor[(1716), int16] */;
    %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?), int16] */;
    %700 = cast(meta[relay.Constant][59] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %701 = cast(meta[relay.Constant][58] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
    %702 = reshape(%701, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
    %703 = @func_12941(%702) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(2, 3, 6), float64], Tensor[(1716), float64]) */;
    %704 = %703.1;
    %705 = cast(%704, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
    %706 = reshape(%700, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float32] */;
    %707 = reshape(%705, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
    %708 = @func_1362(%706, %707) /* ty=(Tensor[(10, 9, 1716), uint8], Tensor[(2, 3, 6), float64], Tensor[(12, 13, 11), float64]) */;
    %709 = cast(meta[relay.Constant][60] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %710 = reshape(%709, newshape=[]) /* ty=int8 */;
    %711 = @func_12445(%710) /* ty=(Tensor[(3, 12, 4), float32], int8, Tensor[(3, 12, 4), float32], Tensor[(5, 6, 16), bool], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool]) */;
    %712 = cast(%704, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
    %713 = %695.0;
    %714 = minimum(%698, %699) /* ty=Tensor[(1716), int16] */;
    %715 = %708.1;
    %716 = %711.2;
    %717 = log10(%712) /* ty=Tensor[(2, 3, 6), float64] */;
    (%713, %714, %715, meta[relay.Constant][59] /* ty=Tensor[(90), float32] */, %716, meta[relay.Constant][60] /* ty=int8 */, %717)
  };
  %718(%var_14529) /* ty=(Tensor[(3, 12, 4), bool], Tensor[(1716), int16], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(3, 12, 4), float32], int8, Tensor[(2, 3, 6), float64]) */
}

def @func_12805() -> (Tensor[(3, 12, 4), float32],) {
  %719 = @func_9641() /* ty=Tensor[(3, 12, 4), float32] */;
  (%719,)
}

def @func_13579() -> Tensor[(3, 12, 4), float32] {
  %721 = fn () -> Tensor[(3, 12, 4), float32] {
    %720 = @func_12981() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %720.0
  };
  %721() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_11696() -> (Tensor[(3, 12, 4), float32],) {
  %724 = fn () -> (Tensor[(3, 12, 4), float32],) {
    %722 = @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
    %723 = %722.2;
    (%723,)
  };
  %724() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_13718() -> Tensor[(3, 12, 4), float32] {
  @func_13716() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_8557() -> Tensor[(3, 12, 4), float32] {
  %726 = fn () -> Tensor[(3, 12, 4), float32] {
    %725 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 12, 4), float32] */, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
    cosh(%725) /* ty=Tensor[(3, 12, 4), float32] */
  };
  %726() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_9585(%var_9582: Tensor[(3, 12, 4), float32], %var_9583: Tensor[(36), float64], %var_9584: Tensor[(96), uint8]) -> (Tensor[(3, 12, 4), float32], Tensor[(7, 4, 9), uint64], Tensor[(36), float64], Tensor[(1344), uint8], Tensor[(96), uint8], Tensor[(1344), uint8], Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), float32]) {
  %748 = fn (%var_9511: Tensor[(3, 12, 4), float32], %var_9518: Tensor[(36), float64], %var_9532: Tensor[(96), uint8]) -> (Tensor[(3, 12, 4), float32], Tensor[(7, 4, 9), uint64], Tensor[(36), float64], Tensor[(1344), uint8], Tensor[(96), uint8], Tensor[(1344), uint8], Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), float32]) {
    %727 = @func_8701() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %728 = %727.0;
    %729 = cast(%var_9511, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
    %730 = shape_of(%728, dtype="int32") /* ty=Tensor[(3), int32] */;
    %731 = cast(%728, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
    %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %733 = cast(%var_9518, dtype="float64") /* ty=Tensor[(36), float64] */;
    %734 = reshape(%733, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
    %735 = @func_841(%734) /* ty=(Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) */;
    %736 = cast(%var_9532, dtype="uint8") /* ty=Tensor[(96), uint8] */;
    %737 = cast(meta[relay.Constant][62] /* ty=Tensor[(1344), uint8] */, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
    %738 = reshape(%736, newshape=[96]) /* ty=Tensor[(96), uint8] */;
    %739 = reshape(%737, newshape=[1344]) /* ty=Tensor[(1344), uint8] */;
    %740 = @func_2029(%738, %739) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(96), uint8], Tensor[(1344), uint8], Tensor[(252), uint64], Tensor[(7, 6, 10), float32], Tensor[(5, 16, 8), bool], Tensor[(640), float64], Tensor[(12, 13, 11), float64], Tensor[(3, 30), float32], Tensor[(36), float64]) */;
    %741 = cast(%var_9511, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
    %742 = cast(%var_9511, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
    %743 = mod(%731, %732) /* ty=Tensor[(3, 12, 4), float32] */;
    %744 = %735.3;
    %745 = %740.2;
    %746 = sqrt(%741) /* ty=Tensor[(3, 12, 4), float64] */;
    %747 = log10(%742) /* ty=Tensor[(3, 12, 4), float32] */;
    (%743, %744, %var_9518, %745, %var_9532, meta[relay.Constant][62] /* ty=Tensor[(1344), uint8] */, %746, %747)
  };
  %748(%var_9582, %var_9583, %var_9584) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(7, 4, 9), uint64], Tensor[(36), float64], Tensor[(1344), uint8], Tensor[(96), uint8], Tensor[(1344), uint8], Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), float32]) */
}

def @func_13716() -> Tensor[(3, 12, 4), float32] {
  %749 = @func_11561() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %749.0
}

def @func_12736(%var_12734: Tensor[(2688), float32], %var_12735: Tensor[(1, 128), float32]) -> (Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), bool], Tensor[(180), uint64], Tensor[(1, 128), float32], uint64, Tensor[(180), uint64], Tensor[(1680), int32], Tensor[(176), int8], Tensor[(5, 8, 5), float64], Tensor[(200), float64], Tensor[(2688), float32]) {
  @func_12732(%var_12734, %var_12735) /* ty=(Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), bool], Tensor[(180), uint64], Tensor[(1, 128), float32], uint64, Tensor[(180), uint64], Tensor[(1680), int32], Tensor[(176), int8], Tensor[(5, 8, 5), float64], Tensor[(200), float64], Tensor[(2688), float32]) */
}

def @func_13355() -> (Tensor[(6, 11, 14), float64],) {
  %750 = cast(meta[relay.Constant][63] /* ty=Tensor[(6, 11, 14), float64] */, dtype="float64") /* ty=Tensor[(6, 11, 14), float64] */;
  %751 = sigmoid(%750) /* ty=Tensor[(6, 11, 14), float64] */;
  (%751,)
}

def @func_5576(%var_5574: Tensor[(3, 15, 4), int8], %var_5575: Tensor[(3, 15, 4), int8]) -> (Tensor[(3, 15, 4), int8],) {
  @func_5572(%var_5574, %var_5575) /* ty=(Tensor[(3, 15, 4), int8],) */
}

def @func_10388() -> Tensor[(3, 12, 4), float32] {
  @func_10386() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_12448(%var_12446: int8) -> (Tensor[(3, 12, 4), float32], int8, Tensor[(3, 12, 4), float32], Tensor[(5, 6, 16), bool], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool]) {
  @func_12445(%var_12446) /* ty=(Tensor[(3, 12, 4), float32], int8, Tensor[(3, 12, 4), float32], Tensor[(5, 6, 16), bool], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool]) */
}

def @func_9194() -> Tensor[(3, 12, 4), float32] {
  @func_9192() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_13078() -> Tensor[(3, 12, 4), float32] {
  @func_13076() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_14984() -> Tensor[(3, 5, 13), int16] {
  @func_14982() /* ty=Tensor[(3, 5, 13), int16] */
}

def @func_10044() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  %756 = fn () -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
    %752 = @func_9299() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %753 = @func_9966() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %754 = %752.0;
    %755 = %753.0;
    (%754, %755)
  };
  %756() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */
}

def @func_5572(%var_5566: Tensor[(3, 15, 4), int8], %var_5567: Tensor[(3, 15, 4), int8]) -> (Tensor[(3, 15, 4), int8],) {
  %757 = cast(%var_5567, dtype="int8") /* ty=Tensor[(3, 15, 4), int8] */;
  %758 = shape_of(%var_5566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%var_5566, dtype="int8") /* ty=Tensor[(3, 15, 4), int8] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %761 = bitwise_and(%759, %760) /* ty=Tensor[(3, 15, 4), int8] */;
  (%761,)
}

def @func_8909() -> (Tensor[(3, 12, 4), float32],) {
  @func_8907() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_1282(%var_1280: Tensor[(12, 13, 11), float64]) -> (Tensor[(12, 13, 11), float64], Tensor[(2, 3, 6), float64], Tensor[(36), float64]) {
  @func_1279(%var_1280) /* ty=(Tensor[(12, 13, 11), float64], Tensor[(2, 3, 6), float64], Tensor[(36), float64]) */
}

def @func_9603() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) {
  %762 = @func_8701() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %763 = %762.0;
  %764 = cast(%763, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
  %765 = reshape(%764, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float32] */;
  %766 = @func_9299() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %767 = @func_8801(%765) /* ty=Tensor[(3, 12, 4), bool] */;
  %768 = %766.0;
  (%763, %767, %768)
}

def @func_14108() -> Tensor[(3, 12, 4), float32] {
  @func_14106() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_14242() -> (Tensor[(3, 12, 4), int16],) {
  %770 = fn () -> (Tensor[(3, 12, 4), int16],) {
    %769 = @func_10343() /* ty=Tensor[(3, 12, 4), int16] */;
    (%769,)
  };
  %770() /* ty=(Tensor[(3, 12, 4), int16],) */
}

def @func_14724() -> (Tensor[(3, 12, 4), float32],) {
  %771 = @func_14042() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %772 = %771.0;
  (%772,)
}

def @func_2419(%var_2388: Tensor[(2, 48), uint8], %var_2390: Tensor[(252), uint64], %var_2394: Tensor[(90), float32]) -> (Tensor[(3, 5, 7), float64], Tensor[(252), uint64], Tensor[(2, 48), uint8], Tensor[(1344), uint8], Tensor[(252), uint64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(2, 3, 6), float64]) {
  %773 = cast(meta[relay.Constant][64] /* ty=Tensor[(3, 5, 7), float64] */, dtype="float64") /* ty=Tensor[(3, 5, 7), float64] */;
  %774 = cast(%var_2388, dtype="uint8") /* ty=Tensor[(2, 48), uint8] */;
  %775 = cast(meta[relay.Constant][65] /* ty=Tensor[(1344), uint8] */, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
  %776 = cast(%var_2390, dtype="uint64") /* ty=Tensor[(252), uint64] */;
  %777 = reshape(%774, newshape=[12, 8, 1]) /* ty=Tensor[(12, 8, 1), uint8] */;
  %778 = reshape(%775, newshape=[12, 8, 14]) /* ty=Tensor[(12, 8, 14), uint8] */;
  %779 = reshape(%776, newshape=[252]) /* ty=Tensor[(252), uint64] */;
  %780 = @func_1749(%777, %778, %779) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(12, 8, 14), float32], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(7, 4, 9), uint64]) */;
  %781 = cast(%var_2394, dtype="float32") /* ty=Tensor[(90), float32] */;
  %782 = cast(meta[relay.Constant][66] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %783 = reshape(%781, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float32] */;
  %784 = reshape(%782, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %785 = @func_1362(%783, %784) /* ty=(Tensor[(10, 9, 1716), uint8], Tensor[(2, 3, 6), float64], Tensor[(12, 13, 11), float64]) */;
  %786 = %785.1;
  %787 = cast(%786, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
  %788 = sinh(%773) /* ty=Tensor[(3, 5, 7), float64] */;
  %789 = %780.1;
  %790 = acos(%787) /* ty=Tensor[(2, 3, 6), float64] */;
  (%788, %789, %var_2388, meta[relay.Constant][65] /* ty=Tensor[(1344), uint8] */, %var_2390, %var_2394, meta[relay.Constant][66] /* ty=Tensor[(36), float64] */, %790)
}

def @func_9130() -> (Tensor[(3, 12, 4), float32],) {
  %793 = fn () -> (Tensor[(3, 12, 4), float32],) {
    %791 = @func_9105() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(6, 1, 1), float64], Tensor[(450), float32]) */;
    %792 = %791.0;
    (%792,)
  };
  %793() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_10293() -> Tensor[(3, 12, 4), float32] {
  %795 = fn () -> Tensor[(3, 12, 4), float32] {
    %794 = @func_9129() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %794.0
  };
  %795() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_7078(%var_7052: Tensor[(11, 4, 15), uint8]) -> (Tensor[(11, 4, 15), uint8], Tensor[(11, 4, 15), uint32]) {
  %796 = cast(meta[relay.Constant][67] /* ty=Tensor[(11, 4, 15), uint8] */, dtype="uint8") /* ty=Tensor[(11, 4, 15), uint8] */;
  %797 = shape_of(%var_7052, dtype="int32") /* ty=Tensor[(3), int32] */;
  %798 = cast(%var_7052, dtype="uint8") /* ty=Tensor[(11, 4, 15), uint8] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %800 = cast(meta[relay.Constant][67] /* ty=Tensor[(11, 4, 15), uint8] */, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %801 = log(%800) /* ty=Tensor[(11, 4, 15), float64] */;
  %802 = cast(%var_7052, dtype="uint32") /* ty=Tensor[(11, 4, 15), uint32] */;
  %803 = shape_of(%801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %804 = cast(%801, dtype="uint32") /* ty=Tensor[(11, 4, 15), uint32] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %806 = bitwise_xor(%798, %799) /* ty=Tensor[(11, 4, 15), uint8] */;
  %807 = left_shift(%804, %805) /* ty=Tensor[(11, 4, 15), uint32] */;
  (%806, %807)
}

def @func_10540(%var_10537: uint64, %var_10538: Tensor[(180), uint64], %var_10539: Tensor[(3, 12, 4), float32]) -> (Tensor[(5, 9, 4), bool], Tensor[(180), uint64], Tensor[(7, 11, 15), float32], Tensor[(1155, 1), float32], Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), float32], Tensor[(252), uint64], Tensor[(36), float64]) {
  %834 = fn (%var_10474: uint64, %var_10475: Tensor[(180), uint64], %var_10526: Tensor[(3, 12, 4), float32]) -> (Tensor[(5, 9, 4), bool], Tensor[(180), uint64], Tensor[(7, 11, 15), float32], Tensor[(1155, 1), float32], Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), float32], Tensor[(252), uint64], Tensor[(36), float64]) {
    %808 = cast(%var_10474, dtype="uint64") /* ty=uint64 */;
    %809 = cast(%var_10475, dtype="uint64") /* ty=Tensor[(180), uint64] */;
    %810 = reshape(%808, newshape=[]) /* ty=uint64 */;
    %811 = reshape(%809, newshape=[5, 9, 4]) /* ty=Tensor[(5, 9, 4), uint64] */;
    %812 = cast(meta[relay.Constant][68] /* ty=Tensor[(1155, 1), float32] */, dtype="float32") /* ty=Tensor[(1155, 1), float32] */;
    %813 = reshape(%812, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
    %814 = cast(meta[relay.Constant][68] /* ty=Tensor[(1155, 1), float32] */, dtype="float32") /* ty=Tensor[(1155, 1), float32] */;
    %815 = cast(%var_10474, dtype="float32") /* ty=float32 */;
    %816 = @func_9424() /* ty=(Tensor[(5, 6, 16), int8], int8, Tensor[(480), int8], Tensor[(3, 12, 4), float64]) */;
    %817 = @func_9665() /* ty=(Tensor[(3, 12, 4), bool],) */;
    %818 = %817.0;
    %819 = cast(%818, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
    %820 = asin(%819) /* ty=Tensor[(3, 12, 4), float32] */;
    %821 = cast(%var_10526, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
    %822 = shape_of(%820, dtype="int32") /* ty=Tensor[(3), int32] */;
    %823 = cast(%820, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
    %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %825 = cast(meta[relay.Constant][69] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
    %826 = reshape(%825, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
    %827 = @func_841(%826) /* ty=(Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) */;
    %828 = @func_976(%810, %811) /* ty=Tensor[(5, 9, 4), bool] */;
    %829 = @func_5960(%813) /* ty=Tensor[(7, 11, 15), float32] */;
    %830 = minimum(%814, %815) /* ty=Tensor[(1155, 1), float32] */;
    %831 = %816.3;
    %832 = divide(%823, %824) /* ty=Tensor[(3, 12, 4), float32] */;
    %833 = %827.2;
    (%828, %var_10475, %829, %830, %831, %832, %833, meta[relay.Constant][69] /* ty=Tensor[(36), float64] */)
  };
  %834(%var_10537, %var_10538, %var_10539) /* ty=(Tensor[(5, 9, 4), bool], Tensor[(180), uint64], Tensor[(7, 11, 15), float32], Tensor[(1155, 1), float32], Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), float32], Tensor[(252), uint64], Tensor[(36), float64]) */
}

def @func_13967() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 15, 4), int8], Tensor[(180), int8]) {
  %835 = cast(meta[relay.Constant][70] /* ty=Tensor[(180), int8] */, dtype="int8") /* ty=Tensor[(180), int8] */;
  %836 = cast(meta[relay.Constant][70] /* ty=Tensor[(180), int8] */, dtype="int8") /* ty=Tensor[(180), int8] */;
  %837 = reshape(%835, newshape=[3, 15, 4]) /* ty=Tensor[(3, 15, 4), int8] */;
  %838 = reshape(%836, newshape=[3, 15, 4]) /* ty=Tensor[(3, 15, 4), int8] */;
  %839 = @func_5572(%837, %838) /* ty=(Tensor[(3, 15, 4), int8],) */;
  %840 = @func_10717() /* ty=Tensor[(3, 12, 4), float32] */;
  %841 = %839.0;
  (%840, %841, meta[relay.Constant][70] /* ty=Tensor[(180), int8] */)
}

def @func_11611() -> Tensor[(3, 12, 4), float32] {
  @func_11609() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_12262() -> (Tensor[(3, 12, 4), bool],) {
  @func_12260() /* ty=(Tensor[(3, 12, 4), bool],) */
}

def @func_13076() -> Tensor[(3, 12, 4), float32] {
  %842 = @func_12971() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %842.0
}

def @func_13986() -> (Tensor[(3, 12, 4), float64],) {
  @func_13984() /* ty=(Tensor[(3, 12, 4), float64],) */
}

def @func_12369(%var_12368: Tensor[(1, 16, 4), float32]) -> Tensor[(16, 16, 4), float64] {
  %847 = fn (%var_12334: Tensor[(1, 16, 4), float32]) -> Tensor[(16, 16, 4), float64] {
    %843 = cast(%var_12334, dtype="float32") /* ty=Tensor[(1, 16, 4), float32] */;
    %844 = cast(meta[relay.Constant][71] /* ty=Tensor[(16, 16, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 16, 4), float32] */;
    %845 = mod(%843, %844) /* ty=Tensor[(16, 16, 4), float32] */;
    %846 = cast(%845, dtype="float64") /* ty=Tensor[(16, 16, 4), float64] */;
    atanh(%846) /* ty=Tensor[(16, 16, 4), float64] */
  };
  %847(%var_12368) /* ty=Tensor[(16, 16, 4), float64] */
}

def @func_12896() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  %852 = fn () -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
    %848 = @func_12297() /* ty=Tensor[(3, 12, 4), float32] */;
    %849 = cast(%848, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
    %850 = tan(%849) /* ty=Tensor[(3, 12, 4), float32] */;
    %851 = @func_9641() /* ty=Tensor[(3, 12, 4), float32] */;
    (%850, %851)
  };
  %852() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */
}

def @func_15118() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  %856 = fn () -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
    %853 = @func_10292() /* ty=Tensor[(3, 12, 4), float32] */;
    %854 = @func_10110() /* ty=Tensor[(3, 12, 4), float32] */;
    %855 = @func_14556() /* ty=Tensor[(3, 12, 4), float32] */;
    (%853, %854, %855)
  };
  %856() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */
}

def @func_11748(%var_11746: uint64, %var_11747: Tensor[(180), uint64]) -> (Tensor[(3, 12, 4), float32], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64]) {
  %863 = fn (%var_11741: uint64, %var_11742: Tensor[(180), uint64]) -> (Tensor[(3, 12, 4), float32], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64]) {
    %857 = cast(%var_11741, dtype="uint64") /* ty=uint64 */;
    %858 = cast(%var_11742, dtype="uint64") /* ty=Tensor[(180), uint64] */;
    %859 = reshape(%857, newshape=[]) /* ty=uint64 */;
    %860 = reshape(%858, newshape=[5, 9, 4]) /* ty=Tensor[(5, 9, 4), uint64] */;
    %861 = @func_10292() /* ty=Tensor[(3, 12, 4), float32] */;
    %862 = @func_976(%859, %860) /* ty=Tensor[(5, 9, 4), bool] */;
    (%861, %862, %var_11741, %var_11742)
  };
  %863(%var_11746, %var_11747) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64]) */
}

def @func_10717() -> Tensor[(3, 12, 4), float32] {
  @func_9641() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_9105() -> (Tensor[(3, 12, 4), float32], Tensor[(6, 1, 1), float64], Tensor[(450), float32]) {
  %864 = cast(meta[relay.Constant][72] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %865 = reshape(%864, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float32] */;
  %866 = @func_7183(%865) /* ty=(Tensor[(6, 15, 5), uint32], Tensor[(6, 1, 1), float64]) */;
  %867 = @func_8556() /* ty=Tensor[(3, 12, 4), float32] */;
  %868 = %866.1;
  (%867, %868, meta[relay.Constant][72] /* ty=Tensor[(450), float32] */)
}

def @func_14857() -> (Tensor[(3, 15, 4), int8],) {
  %871 = fn () -> (Tensor[(3, 15, 4), int8],) {
    %869 = @func_13967() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 15, 4), int8], Tensor[(180), int8]) */;
    %870 = %869.1;
    (%870,)
  };
  %871() /* ty=(Tensor[(3, 15, 4), int8],) */
}

def @func_15334(%var_15332: Tensor[(6, 10, 14), float32]) -> (Tensor[(3, 12, 4), float32], Tensor[(6, 10, 14), float32], Tensor[(6, 10, 14), float64], Tensor[(3, 12, 4), bool]) {
  @func_15331(%var_15332) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(6, 10, 14), float32], Tensor[(6, 10, 14), float64], Tensor[(3, 12, 4), bool]) */
}

def @func_3931(%var_3929: Tensor[(8, 2, 8), float32], %var_3930: Tensor[(4, 24), uint8]) -> (Tensor[(8, 2, 8), float32], Tensor[(36), float64], Tensor[(4, 24), uint8], Tensor[(1344), uint8], Tensor[(252, 1), uint64]) {
  %882 = fn (%var_3898: Tensor[(8, 2, 8), float32], %var_3920: Tensor[(4, 24), uint8]) -> (Tensor[(8, 2, 8), float32], Tensor[(36), float64], Tensor[(4, 24), uint8], Tensor[(1344), uint8], Tensor[(252, 1), uint64]) {
    %872 = cast(%var_3898, dtype="float32") /* ty=Tensor[(8, 2, 8), float32] */;
    %873 = cast(%var_3920, dtype="uint8") /* ty=Tensor[(4, 24), uint8] */;
    %874 = cast(meta[relay.Constant][73] /* ty=Tensor[(1344), uint8] */, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
    %875 = cast(meta[relay.Constant][74] /* ty=Tensor[(252, 1), uint64] */, dtype="uint64") /* ty=Tensor[(252, 1), uint64] */;
    %876 = reshape(%873, newshape=[12, 8, 1]) /* ty=Tensor[(12, 8, 1), uint8] */;
    %877 = reshape(%874, newshape=[12, 8, 14]) /* ty=Tensor[(12, 8, 14), uint8] */;
    %878 = reshape(%875, newshape=[252]) /* ty=Tensor[(252), uint64] */;
    %879 = @func_1749(%876, %877, %878) /* ty=(Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(12, 8, 14), float32], Tensor[(2, 3, 6), float64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(7, 4, 9), uint64]) */;
    %880 = erf(%872) /* ty=Tensor[(8, 2, 8), float32] */;
    %881 = %879.5;
    (%880, %881, %var_3920, meta[relay.Constant][73] /* ty=Tensor[(1344), uint8] */, meta[relay.Constant][74] /* ty=Tensor[(252, 1), uint64] */)
  };
  %882(%var_3929, %var_3930) /* ty=(Tensor[(8, 2, 8), float32], Tensor[(36), float64], Tensor[(4, 24), uint8], Tensor[(1344), uint8], Tensor[(252, 1), uint64]) */
}

def @func_10842() -> (Tensor[(3, 12, 4), float32],) {
  @func_10840() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_200(%var_198: Tensor[(7, 4, 9), uint64]) -> (Tensor[(7, 4, 9), uint64],) {
  @func_197(%var_198) /* ty=(Tensor[(7, 4, 9), uint64],) */
}

def @func_9148() -> Tensor[(3, 12, 4), float32] {
  %884 = fn () -> Tensor[(3, 12, 4), float32] {
    %883 = @func_8907() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %883.0
  };
  %884() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_14693(%var_14691: Tensor[(210), float64], %var_14692: Tensor[(2112), float32]) -> (Tensor[(3, 12, 4), float32], Tensor[(7, 6), int8], Tensor[(210), float64], Tensor[(7, 6), int8], Tensor[(36), float64], Tensor[(2112), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  @func_14689(%var_14691, %var_14692) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(7, 6), int8], Tensor[(210), float64], Tensor[(7, 6), int8], Tensor[(36), float64], Tensor[(2112), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */
}

def @func_11205() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool]) {
  %885 = @func_9726() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %886 = @func_9665() /* ty=(Tensor[(3, 12, 4), bool],) */;
  %887 = %885.0;
  %888 = %886.0;
  (%887, %888)
}

def @func_7186(%var_7184: Tensor[(6, 15, 5), float32]) -> (Tensor[(6, 15, 5), uint32], Tensor[(6, 1, 1), float64]) {
  @func_7183(%var_7184) /* ty=(Tensor[(6, 15, 5), uint32], Tensor[(6, 1, 1), float64]) */
}

def @func_14689(%var_14642: Tensor[(210), float64], %var_14645: Tensor[(2112), float32]) -> (Tensor[(3, 12, 4), float32], Tensor[(7, 6), int8], Tensor[(210), float64], Tensor[(7, 6), int8], Tensor[(36), float64], Tensor[(2112), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  %889 = cast(%var_14642, dtype="float64") /* ty=Tensor[(210), float64] */;
  %890 = cast(meta[relay.Constant][75] /* ty=Tensor[(7, 6), int8] */, dtype="int8") /* ty=Tensor[(7, 6), int8] */;
  %891 = cast(meta[relay.Constant][76] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %892 = cast(%var_14645, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %893 = reshape(%889, newshape=[7, 10, 3]) /* ty=Tensor[(7, 10, 3), float64] */;
  %894 = reshape(%890, newshape=[7, 6]) /* ty=Tensor[(7, 6), int8] */;
  %895 = reshape(%891, newshape=[36, 1]) /* ty=Tensor[(36, 1), float64] */;
  %896 = reshape(%892, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %897 = @func_6499(%893, %894, %895, %896) /* ty=(Tensor[(7, 10, 3), float64], Tensor[(3, 2, 7), bool], Tensor[(7, 6), int8], Tensor[(36, 1), float64], Tensor[(11, 16, 12), float32], Tensor[(2112), float32]) */;
  %898 = @func_12865() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %899 = @func_10332() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %900 = @func_11609() /* ty=Tensor[(3, 12, 4), float32] */;
  %901 = %897.2;
  %902 = %898.0;
  %903 = %899.1;
  (%900, %901, %var_14642, meta[relay.Constant][75] /* ty=Tensor[(7, 6), int8] */, meta[relay.Constant][76] /* ty=Tensor[(36), float64] */, %var_14645, %902, %903)
}

def @func_13264(%var_13222: Tensor[(12, 572), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(12, 572), bool], Tensor[(6, 15, 5), bool], Tensor[(12, 572), float32], Tensor[(3, 12, 4), float32]) {
  %904 = @func_12072() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(11, 4, 15), uint32], Tensor[(660), uint8], Tensor[(3, 12, 4), float32]) */;
  %905 = cast(meta[relay.Constant][77] /* ty=Tensor[(1, 572), float64] */, dtype="bool") /* ty=Tensor[(1, 572), bool] */;
  %906 = cast(%var_13222, dtype="bool") /* ty=Tensor[(12, 572), bool] */;
  %907 = cast(meta[relay.Constant][77] /* ty=Tensor[(1, 572), float64] */, dtype="float64") /* ty=Tensor[(1, 572), float64] */;
  %908 = cast(meta[relay.Constant][78] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %909 = reshape(%907, newshape=[11, 4, 13]) /* ty=Tensor[(11, 4, 13), float64] */;
  %910 = reshape(%908, newshape=[450]) /* ty=Tensor[(450), float32] */;
  %911 = @func_9385(%909, %910) /* ty=(Tensor[(11, 4, 13), float64], Tensor[(6, 15, 5), uint32], Tensor[(450), float32]) */;
  %912 = %911.1;
  %913 = cast(meta[relay.Constant][78] /* ty=Tensor[(450), float32] */, dtype="bool") /* ty=Tensor[(450), bool] */;
  %914 = shape_of(%912, dtype="int32") /* ty=Tensor[(3), int32] */;
  %915 = cast(%912, dtype="bool") /* ty=Tensor[(6, 15, 5), bool] */;
  %916 = dyn.reshape(%913, %914, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %917 = cast(meta[relay.Constant][77] /* ty=Tensor[(1, 572), float64] */, dtype="float32") /* ty=Tensor[(1, 572), float32] */;
  %918 = cast(%var_13222, dtype="float32") /* ty=Tensor[(12, 572), float32] */;
  %919 = %904.1;
  %920 = @func_9641() /* ty=Tensor[(3, 12, 4), float32] */;
  %921 = less(%905, %906) /* ty=Tensor[(12, 572), bool] */;
  %922 = equal(%915, %916) /* ty=Tensor[(6, 15, 5), bool] */;
  %923 = floor_mod(%917, %918) /* ty=Tensor[(12, 572), float32] */;
  %924 = @func_9147() /* ty=Tensor[(3, 12, 4), float32] */;
  (%919, %920, %921, %922, %923, %924)
}

def @func_14844() -> Tensor[(3, 12, 4), float32] {
  %925 = @func_13045() /* ty=(Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
  %925.1
}

def @func_11782(%var_11781: Tensor[(16, 4, 3), float32]) -> (Tensor[(16, 4, 3), float32],) {
  %928 = fn (%var_11777: Tensor[(16, 4, 3), float32]) -> (Tensor[(16, 4, 3), float32],) {
    %926 = cast(%var_11777, dtype="float32") /* ty=Tensor[(16, 4, 3), float32] */;
    %927 = sin(%926) /* ty=Tensor[(16, 4, 3), float32] */;
    (%927,)
  };
  %928(%var_11781) /* ty=(Tensor[(16, 4, 3), float32],) */
}

def @func_4387(%var_4381: Tensor[(14, 16, 12), float32], %var_4382: Tensor[(4, 32), float32], %var_4383: uint64, %var_4384: Tensor[(180), uint64], %var_4385: Tensor[(1680), int32], %var_4386: Tensor[(176), int8]) -> (Tensor[(8, 2, 8), float32], Tensor[(4, 32), float32], Tensor[(96), uint8], Tensor[(14, 16, 12), float64], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64], Tensor[(12, 14, 10), bool], Tensor[(1680), int32], Tensor[(36), float64], Tensor[(176), int8]) {
  %958 = fn (%var_4306: Tensor[(14, 16, 12), float32], %var_4319: Tensor[(4, 32), float32], %var_4349: uint64, %var_4350: Tensor[(180), uint64], %var_4354: Tensor[(1680), int32], %var_4371: Tensor[(176), int8]) -> (Tensor[(8, 2, 8), float32], Tensor[(4, 32), float32], Tensor[(96), uint8], Tensor[(14, 16, 12), float64], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64], Tensor[(12, 14, 10), bool], Tensor[(1680), int32], Tensor[(36), float64], Tensor[(176), int8]) {
    %929 = cast(%var_4319, dtype="float32") /* ty=Tensor[(4, 32), float32] */;
    %930 = cast(meta[relay.Constant][79] /* ty=Tensor[(96), uint8] */, dtype="uint8") /* ty=Tensor[(96), uint8] */;
    %931 = reshape(%929, newshape=[8, 2, 8]) /* ty=Tensor[(8, 2, 8), float32] */;
    %932 = reshape(%930, newshape=[4, 24]) /* ty=Tensor[(4, 24), uint8] */;
    %933 = @func_3928(%931, %932) /* ty=(Tensor[(8, 2, 8), float32], Tensor[(36), float64], Tensor[(4, 24), uint8], Tensor[(1344), uint8], Tensor[(252, 1), uint64]) */;
    %934 = cast(%var_4306, dtype="float32") /* ty=Tensor[(14, 16, 12), float32] */;
    %935 = sqrt(%934) /* ty=Tensor[(14, 16, 12), float32] */;
    %936 = cast(%935, dtype="int16") /* ty=Tensor[(14, 16, 12), int16] */;
    %937 = shape_of(%var_4306, dtype="int32") /* ty=Tensor[(3), int32] */;
    %938 = cast(%var_4306, dtype="int16") /* ty=Tensor[(14, 16, 12), int16] */;
    %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %940 = add(%938, %939) /* ty=Tensor[(14, 16, 12), int16] */;
    %941 = cast(%940, dtype="float64") /* ty=Tensor[(14, 16, 12), float64] */;
    %942 = cast(%var_4349, dtype="uint64") /* ty=uint64 */;
    %943 = cast(%var_4350, dtype="uint64") /* ty=Tensor[(180), uint64] */;
    %944 = reshape(%942, newshape=[]) /* ty=uint64 */;
    %945 = reshape(%943, newshape=[5, 9, 4]) /* ty=Tensor[(5, 9, 4), uint64] */;
    %946 = cast(%var_4354, dtype="int32") /* ty=Tensor[(1680), int32] */;
    %947 = reshape(%946, newshape=[12, 14, 10]) /* ty=Tensor[(12, 14, 10), int32] */;
    %948 = cast(%var_4371, dtype="int8") /* ty=Tensor[(176), int8] */;
    %949 = cast(%var_4371, dtype="int8") /* ty=Tensor[(176), int8] */;
    %950 = reshape(%948, newshape=[11, 4, 4]) /* ty=Tensor[(11, 4, 4), int8] */;
    %951 = reshape(%949, newshape=[11, 4, 4]) /* ty=Tensor[(11, 4, 4), int8] */;
    %952 = @func_4157(%950, %951) /* ty=(Tensor[(11, 4, 4), bool], Tensor[(36), float64], Tensor[(128), float32], Tensor[(2, 48), uint8]) */;
    %953 = %933.0;
    %954 = cos(%941) /* ty=Tensor[(14, 16, 12), float64] */;
    %955 = @func_976(%944, %945) /* ty=Tensor[(5, 9, 4), bool] */;
    %956 = @func_3828(%947) /* ty=Tensor[(12, 14, 10), bool] */;
    %957 = %952.1;
    (%953, %var_4319, meta[relay.Constant][79] /* ty=Tensor[(96), uint8] */, %954, %955, %var_4349, %var_4350, %956, %var_4354, %957, %var_4371)
  };
  %958(%var_4381, %var_4382, %var_4383, %var_4384, %var_4385, %var_4386) /* ty=(Tensor[(8, 2, 8), float32], Tensor[(4, 32), float32], Tensor[(96), uint8], Tensor[(14, 16, 12), float64], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64], Tensor[(12, 14, 10), bool], Tensor[(1680), int32], Tensor[(36), float64], Tensor[(176), int8]) */
}

def @func_14607() -> Tensor[(450), float32] {
  @func_14605() /* ty=Tensor[(450), float32] */
}

def @func_13357() -> (Tensor[(6, 11, 14), float64],) {
  @func_13355() /* ty=(Tensor[(6, 11, 14), float64],) */
}

def @func_8868(%var_8867: Tensor[(3, 12, 4), float32]) -> (Tensor[(3, 12, 4), uint64], Tensor[(3, 12, 4), float32]) {
  %967 = fn (%var_8844: Tensor[(3, 12, 4), float32]) -> (Tensor[(3, 12, 4), uint64], Tensor[(3, 12, 4), float32]) {
    %959 = @func_8556() /* ty=Tensor[(3, 12, 4), float32] */;
    %960 = cast(%var_8844, dtype="uint64") /* ty=Tensor[(3, 12, 4), uint64] */;
    %961 = shape_of(%959, dtype="int32") /* ty=Tensor[(3), int32] */;
    %962 = cast(%959, dtype="uint64") /* ty=Tensor[(3, 12, 4), uint64] */;
    %963 = dyn.reshape(%960, %961, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %964 = cast(%var_8844, dtype="float32") /* ty=Tensor[(3, 12, 4), float32] */;
    %965 = bitwise_and(%962, %963) /* ty=Tensor[(3, 12, 4), uint64] */;
    %966 = erf(%964) /* ty=Tensor[(3, 12, 4), float32] */;
    (%965, %966)
  };
  %967(%var_8867) /* ty=(Tensor[(3, 12, 4), uint64], Tensor[(3, 12, 4), float32]) */
}

def @func_11181(%var_11180: Tensor[(3, 12, 4), float32]) -> (Tensor[(3, 12, 4), int64], Tensor[(3, 12, 4), float32]) {
  %977 = fn (%var_11136: Tensor[(3, 12, 4), float32]) -> (Tensor[(3, 12, 4), int64], Tensor[(3, 12, 4), float32]) {
    %968 = @func_9299() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %969 = %968.0;
    %970 = cast(%var_11136, dtype="int64") /* ty=Tensor[(3, 12, 4), int64] */;
    %971 = shape_of(%969, dtype="int32") /* ty=Tensor[(3), int32] */;
    %972 = cast(%969, dtype="int64") /* ty=Tensor[(3, 12, 4), int64] */;
    %973 = dyn.reshape(%970, %971, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %974 = @func_9603() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool], Tensor[(3, 12, 4), float32]) */;
    %975 = maximum(%972, %973) /* ty=Tensor[(3, 12, 4), int64] */;
    %976 = %974.0;
    (%975, %976)
  };
  %977(%var_11180) /* ty=(Tensor[(3, 12, 4), int64], Tensor[(3, 12, 4), float32]) */
}

def @func_11979() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  @func_11977() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */
}

def @func_4161(%var_4159: Tensor[(11, 4, 4), int8], %var_4160: Tensor[(11, 4, 4), int8]) -> (Tensor[(11, 4, 4), bool], Tensor[(36), float64], Tensor[(128), float32], Tensor[(2, 48), uint8]) {
  @func_4157(%var_4159, %var_4160) /* ty=(Tensor[(11, 4, 4), bool], Tensor[(36), float64], Tensor[(128), float32], Tensor[(2, 48), uint8]) */
}

def @func_13953(%var_13951: Tensor[(1, 1680), int32]) -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(12, 14, 10), bool], Tensor[(1, 1680), int32]) {
  @func_13950(%var_13951) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(12, 14, 10), bool], Tensor[(1, 1680), int32]) */
}

def @func_3534(%var_3494: Tensor[(3, 2, 7), int8], %var_3495: Tensor[(3, 2, 7), int8], %var_3507: Tensor[(9, 4), float64]) -> (Tensor[(7, 4, 9), uint64], Tensor[(9, 4), float64], Tensor[(2, 3, 6), float64], Tensor[(3, 2, 7), bool]) {
  %978 = cast(%var_3507, dtype="float64") /* ty=Tensor[(9, 4), float64] */;
  %979 = reshape(%978, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %980 = @func_841(%979) /* ty=(Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) */;
  %981 = cast(%var_3507, dtype="float64") /* ty=Tensor[(9, 4), float64] */;
  %982 = reshape(%981, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), float64] */;
  %983 = @func_841(%982) /* ty=(Tensor[(2, 3, 6), float64], Tensor[(7, 4, 9), uint64], Tensor[(252), uint64], Tensor[(7, 4, 9), uint64]) */;
  %984 = cast(%var_3495, dtype="int8") /* ty=Tensor[(3, 2, 7), int8] */;
  %985 = shape_of(%var_3494, dtype="int32") /* ty=Tensor[(3), int32] */;
  %986 = cast(%var_3494, dtype="int8") /* ty=Tensor[(3, 2, 7), int8] */;
  %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %988 = left_shift(%986, %987) /* ty=Tensor[(3, 2, 7), int8] */;
  %989 = cast(%988, dtype="bool") /* ty=Tensor[(3, 2, 7), bool] */;
  %990 = shape_of(%var_3495, dtype="int32") /* ty=Tensor[(3), int32] */;
  %991 = cast(%var_3495, dtype="bool") /* ty=Tensor[(3, 2, 7), bool] */;
  %992 = dyn.reshape(%989, %990, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %993 = %980.1;
  %994 = %983.0;
  %995 = logical_or(%991, %992) /* ty=Tensor[(3, 2, 7), bool] */;
  (%993, %var_3507, %994, %995)
}

def @func_11207() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool]) {
  @func_11205() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), bool]) */
}

def @func_10383() -> (Tensor[(3, 12, 4), float32],) {
  @func_10381() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_9934(%var_9932: Tensor[(2688), float32], %var_9933: Tensor[(1680), int32]) -> (Tensor[(6, 1, 450), float32], uint64, Tensor[(2688), float32], Tensor[(64, 2), float32], uint64, Tensor[(3, 60), uint64], Tensor[(1680), int32], Tensor[(176), int8]) {
  %1012 = fn (%var_9915: Tensor[(2688), float32], %var_9919: Tensor[(1680), int32]) -> (Tensor[(6, 1, 450), float32], uint64, Tensor[(2688), float32], Tensor[(64, 2), float32], uint64, Tensor[(3, 60), uint64], Tensor[(1680), int32], Tensor[(176), int8]) {
    %996 = @func_9657() /* ty=(Tensor[(6, 1, 450), float32],) */;
    %997 = cast(%var_9915, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %998 = cast(meta[relay.Constant][80] /* ty=Tensor[(64, 2), float32] */, dtype="float32") /* ty=Tensor[(64, 2), float32] */;
    %999 = cast(meta[relay.Constant][81] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %1000 = cast(meta[relay.Constant][82] /* ty=Tensor[(3, 60), uint64] */, dtype="uint64") /* ty=Tensor[(3, 60), uint64] */;
    %1001 = cast(%var_9919, dtype="int32") /* ty=Tensor[(1680), int32] */;
    %1002 = cast(meta[relay.Constant][83] /* ty=Tensor[(176), int8] */, dtype="int8") /* ty=Tensor[(176), int8] */;
    %1003 = reshape(%997, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
    %1004 = reshape(%998, newshape=[4, 32]) /* ty=Tensor[(4, 32), float32] */;
    %1005 = reshape(%999, newshape=[]) /* ty=uint64 */;
    %1006 = reshape(%1000, newshape=[180]) /* ty=Tensor[(180), uint64] */;
    %1007 = reshape(%1001, newshape=[1680]) /* ty=Tensor[(1680), int32] */;
    %1008 = reshape(%1002, newshape=[176]) /* ty=Tensor[(176), int8] */;
    %1009 = @func_4380(%1003, %1004, %1005, %1006, %1007, %1008) /* ty=(Tensor[(8, 2, 8), float32], Tensor[(4, 32), float32], Tensor[(96), uint8], Tensor[(14, 16, 12), float64], Tensor[(5, 9, 4), bool], uint64, Tensor[(180), uint64], Tensor[(12, 14, 10), bool], Tensor[(1680), int32], Tensor[(36), float64], Tensor[(176), int8]) */;
    %1010 = %996.0;
    %1011 = %1009.5;
    (%1010, %1011, %var_9915, meta[relay.Constant][80] /* ty=Tensor[(64, 2), float32] */, meta[relay.Constant][81] /* ty=uint64 */, meta[relay.Constant][82] /* ty=Tensor[(3, 60), uint64] */, %var_9919, meta[relay.Constant][83] /* ty=Tensor[(176), int8] */)
  };
  %1012(%var_9932, %var_9933) /* ty=(Tensor[(6, 1, 450), float32], uint64, Tensor[(2688), float32], Tensor[(64, 2), float32], uint64, Tensor[(3, 60), uint64], Tensor[(1680), int32], Tensor[(176), int8]) */
}

def @func_10890() -> (Tensor[(3, 12, 4), float32],) {
  @func_10888() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_11562() -> (Tensor[(3, 12, 4), float32],) {
  %1014 = fn () -> (Tensor[(3, 12, 4), float32],) {
    %1013 = @func_8608() /* ty=Tensor[(3, 12, 4), float32] */;
    (%1013,)
  };
  %1014() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_197(%var_177: Tensor[(7, 4, 9), uint64]) -> (Tensor[(7, 4, 9), uint64],) {
  %1015 = cast(%var_177, dtype="float32") /* ty=Tensor[(7, 4, 9), float32] */;
  %1016 = exp(%1015) /* ty=Tensor[(7, 4, 9), float32] */;
  %1017 = cast(%var_177, dtype="uint64") /* ty=Tensor[(7, 4, 9), uint64] */;
  %1018 = shape_of(meta[relay.Constant][84] /* ty=Tensor[(7, 4, 9), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1019 = cast(meta[relay.Constant][84] /* ty=Tensor[(7, 4, 9), uint64] */, dtype="uint64") /* ty=Tensor[(7, 4, 9), uint64] */;
  %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1021 = right_shift(%1019, %1020) /* ty=Tensor[(7, 4, 9), uint64] */;
  %1022 = cast(%1021, dtype="uint64") /* ty=Tensor[(7, 4, 9), uint64] */;
  %1023 = shape_of(%1016, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1024 = cast(%1016, dtype="uint64") /* ty=Tensor[(7, 4, 9), uint64] */;
  %1025 = dyn.reshape(%1022, %1023, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1026 = bitwise_and(%1024, %1025) /* ty=Tensor[(7, 4, 9), uint64] */;
  (%1026,)
}

def @func_12982() -> (Tensor[(3, 12, 4), float32],) {
  %1029 = fn () -> (Tensor[(3, 12, 4), float32],) {
    %1027 = @func_8701() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %1028 = %1027.0;
    (%1028,)
  };
  %1029() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_9967() -> (Tensor[(3, 12, 4), float32],) {
  %1031 = fn () -> (Tensor[(3, 12, 4), float32],) {
    %1030 = @func_8556() /* ty=Tensor[(3, 12, 4), float32] */;
    (%1030,)
  };
  %1031() /* ty=(Tensor[(3, 12, 4), float32],) */
}

def @func_13969() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 15, 4), int8], Tensor[(180), int8]) {
  @func_13967() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 15, 4), int8], Tensor[(180), int8]) */
}

def @func_15013(%var_15012: Tensor[(12, 11, 15), float32]) -> Tensor[(12, 11, 15), float32] {
  %1033 = fn (%var_15002: Tensor[(12, 11, 15), float32]) -> Tensor[(12, 11, 15), float32] {
    %1032 = cast(%var_15002, dtype="float32") /* ty=Tensor[(12, 11, 15), float32] */;
    asinh(%1032) /* ty=Tensor[(12, 11, 15), float32] */
  };
  %1033(%var_15012) /* ty=Tensor[(12, 11, 15), float32] */
}

def @func_14000() -> Tensor[(3, 12, 4), float32] {
  @func_13998() /* ty=Tensor[(3, 12, 4), float32] */
}

def @main() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32], Tensor[(6, 7, 450), float64]) {
  %1034 = @func_9440() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %1035 = @func_12807() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %1036 = @func_12896() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
  %1037 = @func_9489() /* ty=(Tensor[(3, 12, 4), float64], Tensor[(6, 1, 450), bool], Tensor[(6, 1, 450), uint16], Tensor[(3, 12, 4), float32]) */;
  %1038 = %1037.1;
  %1039 = cast(%1038, dtype="float64") /* ty=Tensor[(6, 1, 450), float64] */;
  %1040 = cast(meta[relay.Constant][85] /* ty=Tensor[(6, 7, 450), bool] */, dtype="float64") /* ty=Tensor[(6, 7, 450), float64] */;
  %1041 = @func_12297() /* ty=Tensor[(3, 12, 4), float32] */;
  %1042 = %1034.0;
  %1043 = %1035.0;
  %1044 = %1036.1;
  %1045 = @func_13482() /* ty=Tensor[(3, 12, 4), float32] */;
  %1046 = add(%1039, %1040) /* ty=Tensor[(6, 7, 450), float64] */;
  (%1041, %1042, %1043, %1044, %1045, %1046)
}

def @func_9389(%var_9387: Tensor[(11, 4, 13), float64], %var_9388: Tensor[(450), float32]) -> (Tensor[(11, 4, 13), float64], Tensor[(6, 15, 5), uint32], Tensor[(450), float32]) {
  @func_9385(%var_9387, %var_9388) /* ty=(Tensor[(11, 4, 13), float64], Tensor[(6, 15, 5), uint32], Tensor[(450), float32]) */
}

def @func_13482() -> Tensor[(3, 12, 4), float32] {
  @func_10110() /* ty=Tensor[(3, 12, 4), float32] */
}

def @func_11977() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  %1047 = @func_9966() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %1048 = @func_8701() /* ty=(Tensor[(3, 12, 4), float32],) */;
  %1049 = %1047.0;
  %1050 = %1048.0;
  (%1049, %1050)
}

def @func_14968(%var_14967: Tensor[(210), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(7, 6), int8], Tensor[(210), float64], Tensor[(2112), float32]) {
  %1059 = fn (%var_14954: Tensor[(210), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(7, 6), int8], Tensor[(210), float64], Tensor[(2112), float32]) {
    %1051 = @func_8907() /* ty=(Tensor[(3, 12, 4), float32],) */;
    %1052 = cast(%var_14954, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1053 = cast(meta[relay.Constant][86] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %1054 = reshape(%1052, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %1055 = reshape(%1053, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
    %1056 = @func_14689(%1054, %1055) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(7, 6), int8], Tensor[(210), float64], Tensor[(7, 6), int8], Tensor[(36), float64], Tensor[(2112), float32], Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */;
    %1057 = %1051.0;
    %1058 = %1056.3;
    (%1057, %1058, %var_14954, meta[relay.Constant][86] /* ty=Tensor[(2112), float32] */)
  };
  %1059(%var_14967) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(7, 6), int8], Tensor[(210), float64], Tensor[(2112), float32]) */
}

def @func_6369(%var_6366: Tensor[(11, 3, 13), float64], %var_6367: Tensor[(4, 44), int8], %var_6368: Tensor[(252), uint64]) -> (Tensor[(11, 3, 13), float64], Tensor[(2, 3, 6), float64], Tensor[(1716), float64], Tensor[(2, 48), uint8], Tensor[(4, 44), int8], Tensor[(2, 48), uint8], Tensor[(252), uint64], Tensor[(90), float32]) {
  %1080 = fn (%var_6335: Tensor[(11, 3, 13), float64], %var_6350: Tensor[(4, 44), int8], %var_6359: Tensor[(252), uint64]) -> (Tensor[(11, 3, 13), float64], Tensor[(2, 3, 6), float64], Tensor[(1716), float64], Tensor[(2, 48), uint8], Tensor[(4, 44), int8], Tensor[(2, 48), uint8], Tensor[(252), uint64], Tensor[(90), float32]) {
    %1060 = cast(%var_6335, dtype="float64") /* ty=Tensor[(11, 3, 13), float64] */;
    %1061 = cast(meta[relay.Constant][87] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
    %1062 = reshape(%1061, newshape=[12, 13, 11]) /* ty=Tensor[(12, 13, 11), float64] */;
    %1063 = @func_1279(%1062) /* ty=(Tensor[(12, 13, 11), float64], Tensor[(2, 3, 6), float64], Tensor[(36), float64]) */;
    %1064 = cast(%var_6350, dtype="int8") /* ty=Tensor[(4, 44), int8] */;
    %1065 = cast(%var_6350, dtype="int8") /* ty=Tensor[(4, 44), int8] */;
    %1066 = reshape(%1064, newshape=[11, 4, 4]) /* ty=Tensor[(11, 4, 4), int8] */;
    %1067 = reshape(%1065, newshape=[11, 4, 4]) /* ty=Tensor[(11, 4, 4), int8] */;
    %1068 = @func_4157(%1066, %1067) /* ty=(Tensor[(11, 4, 4), bool], Tensor[(36), float64], Tensor[(128), float32], Tensor[(2, 48), uint8]) */;
    %1069 = %1068.3;
    %1070 = cast(%1069, dtype="uint8") /* ty=Tensor[(2, 48), uint8] */;
    %1071 = cast(%var_6359, dtype="uint64") /* ty=Tensor[(252), uint64] */;
    %1072 = cast(meta[relay.Constant][88] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %1073 = reshape(%1070, newshape=[2, 48]) /* ty=Tensor[(2, 48), uint8] */;
    %1074 = reshape(%1071, newshape=[252]) /* ty=Tensor[(252), uint64] */;
    %1075 = reshape(%1072, newshape=[90]) /* ty=Tensor[(90), float32] */;
    %1076 = @func_2419(%1073, %1074, %1075) /* ty=(Tensor[(3, 5, 7), float64], Tensor[(252), uint64], Tensor[(2, 48), uint8], Tensor[(1344), uint8], Tensor[(252), uint64], Tensor[(90), float32], Tensor[(36), float64], Tensor[(2, 3, 6), float64]) */;
    %1077 = acos(%1060) /* ty=Tensor[(11, 3, 13), float64] */;
    %1078 = %1063.1;
    %1079 = %1076.2;
    (%1077, %1078, meta[relay.Constant][87] /* ty=Tensor[(1716), float64] */, %1069, %var_6350, %1079, %var_6359, meta[relay.Constant][88] /* ty=Tensor[(90), float32] */)
  };
  %1080(%var_6366, %var_6367, %var_6368) /* ty=(Tensor[(11, 3, 13), float64], Tensor[(2, 3, 6), float64], Tensor[(1716), float64], Tensor[(2, 48), uint8], Tensor[(4, 44), int8], Tensor[(2, 48), uint8], Tensor[(252), uint64], Tensor[(90), float32]) */
}

def @func_14941(%var_14939: Tensor[(10, 12, 10), float32]) -> (Tensor[(10, 12, 10), float64], Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), bool]) {
  @func_14938(%var_14939) /* ty=(Tensor[(10, 12, 10), float64], Tensor[(3, 12, 4), float64], Tensor[(3, 12, 4), bool]) */
}

def @func_10334() -> (Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) {
  @func_10332() /* ty=(Tensor[(3, 12, 4), float32], Tensor[(3, 12, 4), float32]) */
}

def @func_1365(%var_1363: Tensor[(10, 9, 1), float32], %var_1364: Tensor[(2, 3, 6), float64]) -> (Tensor[(10, 9, 1716), uint8], Tensor[(2, 3, 6), float64], Tensor[(12, 13, 11), float64]) {
  %1099 = fn (%var_1322: Tensor[(10, 9, 1), float32], %var_1353: Tensor[(2, 3, 6), float64]) -> (Tensor[(10, 9, 1716), uint8], Tensor[(2, 3, 6), float64], Tensor[(12, 13, 11), float64]) {
    %1081 = cast(%var_1322, dtype="float32") /* ty=Tensor[(10, 9, 1), float32] */;
    %1082 = rsqrt(%1081) /* ty=Tensor[(10, 9, 1), float32] */;
    %1083 = cast(%1082, dtype="uint8") /* ty=Tensor[(10, 9, 1), uint8] */;
    %1084 = cast(meta[relay.Constant][89] /* ty=Tensor[(1716), float64] */, dtype="uint8") /* ty=Tensor[(1716), uint8] */;
    %1085 = cast(meta[relay.Constant][89] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
    %1086 = reshape(%1085, newshape=[12, 13, 11]) /* ty=Tensor[(12, 13, 11), float64] */;
    %1087 = @func_1279(%1086) /* ty=(Tensor[(12, 13, 11), float64], Tensor[(2, 3, 6), float64], Tensor[(36), float64]) */;
    %1088 = %1087.1;
    %1089 = cast(%var_1353, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
    %1090 = shape_of(%1088, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1091 = cast(%1088, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
    %1092 = dyn.reshape(%1089, %1090, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1093 = cast(meta[relay.Constant][89] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
    %1094 = reshape(%1093, newshape=[12, 13, 11]) /* ty=Tensor[(12, 13, 11), float64] */;
    %1095 = @func_1279(%1094) /* ty=(Tensor[(12, 13, 11), float64], Tensor[(2, 3, 6), float64], Tensor[(36), float64]) */;
    %1096 = multiply(%1083, %1084) /* ty=Tensor[(10, 9, 1716), uint8] */;
    %1097 = multiply(%1091, %1092) /* ty=Tensor[(2, 3, 6), float64] */;
    %1098 = %1095.0;
    (%1096, %1097, %1098)
  };
  %1099(%var_1363, %var_1364) /* ty=(Tensor[(10, 9, 1716), uint8], Tensor[(2, 3, 6), float64], Tensor[(12, 13, 11), float64]) */
}

def @func_13517(%var_13516: Tensor[(2112), float32]) -> (Tensor[(3, 12, 4), bool], Tensor[(11, 16, 12), uint64], Tensor[(2112), float32], Tensor[(3, 12, 4), float64]) {
  %1107 = fn (%var_13503: Tensor[(2112), float32]) -> (Tensor[(3, 12, 4), bool], Tensor[(11, 16, 12), uint64], Tensor[(2112), float32], Tensor[(3, 12, 4), float64]) {
    %1100 = cast(%var_13503, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %1101 = reshape(%1100, newshape=[11, 16, 12]) /* ty=Tensor[(11, 16, 12), float32] */;
    %1102 = @func_1780(%1101) /* ty=(Tensor[(11, 16, 12), uint64], Tensor[(11, 16, 12), float32]) */;
    %1103 = @func_9424() /* ty=(Tensor[(5, 6, 16), int8], int8, Tensor[(480), int8], Tensor[(3, 12, 4), float64]) */;
    %1104 = @func_10651() /* ty=Tensor[(3, 12, 4), bool] */;
    %1105 = %1102.0;
    %1106 = %1103.3;
    (%1104, %1105, %var_13503, %1106)
  };
  %1107(%var_13516) /* ty=(Tensor[(3, 12, 4), bool], Tensor[(11, 16, 12), uint64], Tensor[(2112), float32], Tensor[(3, 12, 4), float64]) */
}

def @func_9385(%var_9359: Tensor[(11, 4, 13), float64], %var_9369: Tensor[(450), float32]) -> (Tensor[(11, 4, 13), float64], Tensor[(6, 15, 5), uint32], Tensor[(450), float32]) {
  %1108 = cast(%var_9359, dtype="float64") /* ty=Tensor[(11, 4, 13), float64] */;
  %1109 = log(%1108) /* ty=Tensor[(11, 4, 13), float64] */;
  %1110 = cast(%1109, dtype="float64") /* ty=Tensor[(11, 4, 13), float64] */;
  %1111 = shape_of(%var_9359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1112 = cast(%var_9359, dtype="float64") /* ty=Tensor[(11, 4, 13), float64] */;
  %1113 = dyn.reshape(%1110, %1111, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1114 = cast(%var_9369, dtype="float32") /* ty=Tensor[(450), float32] */;
  %1115 = reshape(%1114, newshape=[6, 15, 5]) /* ty=Tensor[(6, 15, 5), float32] */;
  %1116 = @func_7183(%1115) /* ty=(Tensor[(6, 15, 5), uint32], Tensor[(6, 1, 1), float64]) */;
  %1117 = floor_mod(%1112, %1113) /* ty=Tensor[(11, 4, 13), float64] */;
  %1118 = %1116.0;
  (%1117, %1118, %var_9369)
}

def @func_14453(%var_14451: Tensor[(6864), float64]) -> (Tensor[(3, 12, 4), float32], Tensor[(6, 15, 5), bool], Tensor[(6864), float64]) {
  @func_14450(%var_14451) /* ty=(Tensor[(3, 12, 4), float32], Tensor[(6, 15, 5), bool], Tensor[(6864), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

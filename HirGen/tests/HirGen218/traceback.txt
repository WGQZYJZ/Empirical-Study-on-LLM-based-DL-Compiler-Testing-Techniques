==========mod==========
#[version = "0.0.5"]
def @func_4873() -> Tensor[(7, 14, 3), float64] {
  %0 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %0.0
}

def @func_2312() -> (Tensor[(7, 4, 11), float64],) {
  %1 = @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %2 = %1.0;
  (%2,)
}

def @func_5378() -> Tensor[(728), bool] {
  @func_5356() /* ty=Tensor[(728), bool] */
}

def @func_4975() -> (Tensor[(7, 14, 3), float64], Tensor[(720), float64], int16, Tensor[(768), int16], Tensor[(7), float32]) {
  %3 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %4 = cast(meta[relay.Constant][0] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(768), int16] */, dtype="int16") /* ty=Tensor[(768), int16] */;
  %6 = cast(meta[relay.Constant][2] /* ty=Tensor[(7), float32] */, dtype="float32") /* ty=Tensor[(7), float32] */;
  %7 = reshape(%4, newshape=[]) /* ty=int16 */;
  %8 = reshape(%5, newshape=[6, 16, 8]) /* ty=Tensor[(6, 16, 8), int16] */;
  %9 = reshape(%6, newshape=[7]) /* ty=Tensor[(7), float32] */;
  %10 = @func_2796(%7, %8, %9) /* ty=(Tensor[(6, 16, 8), bool], Tensor[(16, 26), int64], Tensor[(7), float32], Tensor[(720), float64], Tensor[(360), float32]) */;
  %11 = %3.0;
  %12 = %10.3;
  (%11, %12, meta[relay.Constant][0] /* ty=int16 */, meta[relay.Constant][1] /* ty=Tensor[(768), int16] */, meta[relay.Constant][2] /* ty=Tensor[(7), float32] */)
}

def @func_2986() -> (Tensor[(7, 14, 3), float32],) {
  %13 = @func_2815() /* ty=(Tensor[(720), float64], Tensor[(7, 14, 3), float32]) */;
  %14 = %13.1;
  (%14,)
}

def @func_2543() -> (Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) {
  %15 = @func_1958() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %16 = cast(meta[relay.Constant][3] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %17 = reshape(%16, newshape=[7, 4, 11]) /* ty=Tensor[(7, 4, 11), float64] */;
  %18 = @func_2291(%17) /* ty=(Tensor[(7, 4, 11), uint64],) */;
  %19 = %15.0;
  %20 = %18.0;
  (%19, %20, meta[relay.Constant][3] /* ty=Tensor[(308), float64] */)
}

def @func_3892() -> (Tensor[(7, 14, 3), float32],) {
  %21 = @func_1804() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
  %22 = %21.0;
  (%22,)
}

def @func_2760(%var_2722: Tensor[(1, 22), uint16]) -> (Tensor[(7, 4, 11), float64], Tensor[(1, 22), uint16], Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), bool], Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), float64]) {
  %23 = @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %24 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %25 = cast(meta[relay.Constant][4] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %26 = cast(%var_2722, dtype="uint16") /* ty=Tensor[(1, 22), uint16] */;
  %27 = reshape(%25, newshape=[]) /* ty=uint16 */;
  %28 = reshape(%26, newshape=[11, 2, 1]) /* ty=Tensor[(11, 2, 1), uint16] */;
  %29 = @func_162(%27, %28) /* ty=(Tensor[(11, 2, 1), uint16],) */;
  %30 = %29.0;
  %31 = cast(meta[relay.Constant][4] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %32 = cast(%30, dtype="bool") /* ty=Tensor[(11, 2, 1), bool] */;
  %33 = @func_1804() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
  %34 = cast(%30, dtype="float64") /* ty=Tensor[(11, 2, 1), float64] */;
  %35 = %23.0;
  %36 = %24.0;
  %37 = equal(%31, %32) /* ty=Tensor[(11, 2, 1), bool] */;
  %38 = %33.1;
  %39 = sin(%34) /* ty=Tensor[(11, 2, 1), float64] */;
  (%35, %var_2722, %36, %37, %38, %39)
}

def @func_945() -> (Tensor[(7, 14, 3), float64],) {
  %40 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 14, 3), float64] */, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %41 = tan(%40) /* ty=Tensor[(7, 14, 3), float64] */;
  (%41,)
}

def @func_2815() -> (Tensor[(720), float64], Tensor[(7, 14, 3), float32]) {
  %42 = @func_1804() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
  %43 = @func_1713() /* ty=Tensor[(7, 14, 3), float64] */;
  %44 = cast(%43, dtype="float32") /* ty=Tensor[(7, 14, 3), float32] */;
  %45 = %42.3;
  %46 = log2(%44) /* ty=Tensor[(7, 14, 3), float32] */;
  (%45, %46)
}

def @func_6198(%var_6165: Tensor[(1092), float32]) -> (Tensor[(720), float64], Tensor[(8, 7, 13), float32], Tensor[(728), float32], Tensor[(1092), float32]) {
  %47 = @func_5271() /* ty=(Tensor[(308), float64], Tensor[(2, 360), float32], Tensor[(8, 448), float32], Tensor[(720), float64]) */;
  %48 = cast(meta[relay.Constant][6] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
  %49 = cast(%var_6165, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %50 = reshape(%48, newshape=[728]) /* ty=Tensor[(728), float32] */;
  %51 = reshape(%49, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %52 = @func_5123(%50, %51) /* ty=(Tensor[(7, 14, 3), float32], Tensor[(8, 7, 13), float32], Tensor[(728), float32], Tensor[(1092), float32], Tensor[(13, 14, 6), bool]) */;
  %53 = %47.3;
  %54 = %52.1;
  (%53, %54, meta[relay.Constant][6] /* ty=Tensor[(728), float32] */, %var_6165)
}

def @func_1151(%var_1129: Tensor[(3584), float32], %var_1130: Tensor[(720), float64]) -> (Tensor[(7, 14, 3), float64], Tensor[(2, 360), float32], Tensor[(720), float64], Tensor[(3584), uint16]) {
  %55 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %56 = cast(%var_1129, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %57 = cast(%var_1130, dtype="float64") /* ty=Tensor[(720), float64] */;
  %58 = reshape(%56, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %59 = reshape(%57, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
  %60 = @func_721(%58, %59) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(2, 360), float32]) */;
  %61 = cast(%var_1129, dtype="float64") /* ty=Tensor[(3584), float64] */;
  %62 = asin(%61) /* ty=Tensor[(3584), float64] */;
  %63 = cast(%var_1129, dtype="uint16") /* ty=Tensor[(3584), uint16] */;
  %64 = shape_of(%62, dtype="int32") /* ty=Tensor[(1), int32] */;
  %65 = cast(%62, dtype="uint16") /* ty=Tensor[(3584), uint16] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %67 = %55.0;
  %68 = %60.1;
  %69 = subtract(%65, %66) /* ty=Tensor[(3584), uint16] */;
  (%67, %68, %var_1130, %69)
}

def @func_5323(%var_5309: Tensor[(11, 15, 11), float32]) -> (Tensor[(11, 15, 11), float32], Tensor[(308), float64]) {
  %70 = cast(%var_5309, dtype="float32") /* ty=Tensor[(11, 15, 11), float32] */;
  %71 = @func_5150() /* ty=(Tensor[(308), float64],) */;
  %72 = asinh(%70) /* ty=Tensor[(11, 15, 11), float32] */;
  %73 = %71.0;
  (%72, %73)
}

def @func_5356() -> Tensor[(728), bool] {
  %74 = @func_3589() /* ty=(Tensor[(728), bool],) */;
  %74.0
}

def @func_1924(%var_1903: Tensor[(308), float64], %var_1914: Tensor[(416), int64]) -> (Tensor[(308), uint16], Tensor[(7), float32], Tensor[(416), int64], Tensor[(7), float32], Tensor[(70, 1), float32], Tensor[(16, 12, 16), float32], Tensor[(3072), float32]) {
  %75 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
  %76 = %75.2;
  %77 = cast(%var_1903, dtype="uint16") /* ty=Tensor[(308), uint16] */;
  %78 = shape_of(%76, dtype="int32") /* ty=Tensor[(1), int32] */;
  %79 = cast(%76, dtype="uint16") /* ty=Tensor[(308), uint16] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %81 = cast(%var_1914, dtype="int64") /* ty=Tensor[(416), int64] */;
  %82 = cast(meta[relay.Constant][7] /* ty=Tensor[(7), float32] */, dtype="float32") /* ty=Tensor[(7), float32] */;
  %83 = cast(meta[relay.Constant][8] /* ty=Tensor[(70, 1), float32] */, dtype="float32") /* ty=Tensor[(70, 1), float32] */;
  %84 = reshape(%81, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), int64] */;
  %85 = reshape(%82, newshape=[7]) /* ty=Tensor[(7), float32] */;
  %86 = reshape(%83, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %87 = @func_1764(%84, %85, %86) /* ty=(Tensor[(2, 16, 13), int64], Tensor[(6, 7, 5), bool], Tensor[(7), float32], Tensor[(70), float32], uint16, Tensor[(2, 16, 13), float32]) */;
  %88 = cast(meta[relay.Constant][9] /* ty=Tensor[(3072), float32] */, dtype="float32") /* ty=Tensor[(3072), float32] */;
  %89 = reshape(%88, newshape=[16, 12, 16]) /* ty=Tensor[(16, 12, 16), float32] */;
  %90 = @func_25(%89) /* ty=(Tensor[(16, 12, 16), float32],) */;
  %91 = left_shift(%79, %80) /* ty=Tensor[(308), uint16] */;
  %92 = %87.2;
  %93 = %90.0;
  (%91, %92, %var_1914, meta[relay.Constant][7] /* ty=Tensor[(7), float32] */, meta[relay.Constant][8] /* ty=Tensor[(70, 1), float32] */, %93, meta[relay.Constant][9] /* ty=Tensor[(3072), float32] */)
}

def @func_6307(%var_6272: Tensor[(2, 360), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(13, 14, 6), float32], Tensor[(14, 78), float32], Tensor[(3584), float32], Tensor[(2, 360), float32], Tensor[(308), float64]) {
  %94 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %95 = cast(meta[relay.Constant][10] /* ty=Tensor[(14, 78), float32] */, dtype="float32") /* ty=Tensor[(14, 78), float32] */;
  %96 = cast(meta[relay.Constant][10] /* ty=Tensor[(14, 78), float32] */, dtype="float32") /* ty=Tensor[(14, 78), float32] */;
  %97 = reshape(%95, newshape=[13, 14, 6]) /* ty=Tensor[(13, 14, 6), float32] */;
  %98 = reshape(%96, newshape=[13, 14, 6]) /* ty=Tensor[(13, 14, 6), float32] */;
  %99 = cast(meta[relay.Constant][11] /* ty=Tensor[(3584), float32] */, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %100 = cast(%var_6272, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
  %101 = reshape(%99, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %102 = reshape(%100, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
  %103 = @func_721(%101, %102) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(2, 360), float32]) */;
  %104 = %103.1;
  %105 = cast(%var_6272, dtype="float32") /* ty=Tensor[(2, 360), float32] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(2), int32] */;
  %107 = cast(%104, dtype="float32") /* ty=Tensor[(2, 360), float32] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %109 = @func_5041() /* ty=(Tensor[(308), float64],) */;
  %110 = %94.0;
  %111 = @func_3490(%97, %98) /* ty=Tensor[(13, 14, 6), float32] */;
  %112 = floor_divide(%107, %108) /* ty=Tensor[(2, 360), float32] */;
  %113 = %109.0;
  (%110, %111, meta[relay.Constant][10] /* ty=Tensor[(14, 78), float32] */, meta[relay.Constant][11] /* ty=Tensor[(3584), float32] */, %112, %113)
}

def @func_5706() -> (Tensor[(8, 448), float32], Tensor[(308), float64], Tensor[(308), float64], Tensor[(1815), float32]) {
  %114 = @func_5271() /* ty=(Tensor[(308), float64], Tensor[(2, 360), float32], Tensor[(8, 448), float32], Tensor[(720), float64]) */;
  %115 = @func_5669() /* ty=(Tensor[(308), float64],) */;
  %116 = cast(meta[relay.Constant][12] /* ty=Tensor[(1815), float32] */, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %117 = reshape(%116, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), float32] */;
  %118 = @func_5323(%117) /* ty=(Tensor[(11, 15, 11), float32], Tensor[(308), float64]) */;
  %119 = %114.2;
  %120 = %115.0;
  %121 = %118.1;
  (%119, %120, %121, meta[relay.Constant][12] /* ty=Tensor[(1815), float32] */)
}

def @func_2674(%var_2653: Tensor[(2, 8, 2), int8], %var_2654: Tensor[(2, 8, 2), int8], %var_2667: uint16, %var_2668: Tensor[(416), int64], %var_2669: Tensor[(7), float32]) -> (Tensor[(2, 8, 2), int8], Tensor[(720), float64], uint16, Tensor[(416), int64], Tensor[(7), float32], Tensor[(7, 4, 11), float64]) {
  %122 = cast(%var_2654, dtype="int8") /* ty=Tensor[(2, 8, 2), int8] */;
  %123 = shape_of(%var_2653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %124 = cast(%var_2653, dtype="int8") /* ty=Tensor[(2, 8, 2), int8] */;
  %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %126 = cast(%var_2667, dtype="uint16") /* ty=uint16 */;
  %127 = cast(%var_2668, dtype="int64") /* ty=Tensor[(416), int64] */;
  %128 = cast(%var_2669, dtype="float32") /* ty=Tensor[(7), float32] */;
  %129 = reshape(%126, newshape=[]) /* ty=uint16 */;
  %130 = reshape(%127, newshape=[8, 52]) /* ty=Tensor[(8, 52), int64] */;
  %131 = reshape(%128, newshape=[7, 1]) /* ty=Tensor[(7, 1), float32] */;
  %132 = @func_2522(%129, %130, %131) /* ty=(Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 4, 11), float32], Tensor[(7, 4, 11), float64], Tensor[(720), float64], Tensor[(2, 16, 13), int64], Tensor[(8, 52), int64], Tensor[(7, 1), float32], Tensor[(70), float32]) */;
  %133 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
  %134 = multiply(%124, %125) /* ty=Tensor[(2, 8, 2), int8] */;
  %135 = %132.5;
  %136 = %133.1;
  (%134, %135, %var_2667, %var_2668, %var_2669, %136)
}

def @func_6580() -> (Tensor[(7, 4, 11), uint64],) {
  %137 = @func_2543() /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
  %138 = %137.1;
  (%138,)
}

def @func_5299(%var_5294: Tensor[(2, 10, 3), float64]) -> (Tensor[(2, 10, 3), float64],) {
  %139 = cast(%var_5294, dtype="float64") /* ty=Tensor[(2, 10, 3), float64] */;
  %140 = cos(%139) /* ty=Tensor[(2, 10, 3), float64] */;
  (%140,)
}

def @func_5271() -> (Tensor[(308), float64], Tensor[(2, 360), float32], Tensor[(8, 448), float32], Tensor[(720), float64]) {
  %141 = @func_5041() /* ty=(Tensor[(308), float64],) */;
  %142 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 448), float32] */, dtype="float32") /* ty=Tensor[(8, 448), float32] */;
  %143 = cast(meta[relay.Constant][14] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %144 = reshape(%142, newshape=[3584]) /* ty=Tensor[(3584), float32] */;
  %145 = reshape(%143, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %146 = @func_1151(%144, %145) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(2, 360), float32], Tensor[(720), float64], Tensor[(3584), uint16]) */;
  %147 = %141.0;
  %148 = %146.1;
  (%147, %148, meta[relay.Constant][13] /* ty=Tensor[(8, 448), float32] */, meta[relay.Constant][14] /* ty=Tensor[(720), float64] */)
}

def @func_317(%var_289: Tensor[(6, 7, 5), int64], %var_290: Tensor[(6, 7, 5), int64], %var_297: Tensor[(308), float64], %var_311: uint16, %var_312: Tensor[(22), uint16]) -> (Tensor[(6, 7, 5), bool], Tensor[(7, 4, 11), float64], Tensor[(308), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) {
  %149 = cast(%var_290, dtype="bool") /* ty=Tensor[(6, 7, 5), bool] */;
  %150 = shape_of(%var_289, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(%var_289, dtype="bool") /* ty=Tensor[(6, 7, 5), bool] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %153 = cast(%var_297, dtype="float64") /* ty=Tensor[(308), float64] */;
  %154 = reshape(%153, newshape=[7, 4, 11]) /* ty=Tensor[(7, 4, 11), float64] */;
  %155 = @func_131(%154) /* ty=(Tensor[(7, 4, 11), float64],) */;
  %156 = cast(%var_297, dtype="float64") /* ty=Tensor[(308), float64] */;
  %157 = cast(%var_311, dtype="uint16") /* ty=uint16 */;
  %158 = cast(%var_312, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %159 = reshape(%157, newshape=[]) /* ty=uint16 */;
  %160 = reshape(%158, newshape=[11, 2, 1]) /* ty=Tensor[(11, 2, 1), uint16] */;
  %161 = @func_162(%159, %160) /* ty=(Tensor[(11, 2, 1), uint16],) */;
  %162 = not_equal(%151, %152) /* ty=Tensor[(6, 7, 5), bool] */;
  %163 = %155.0;
  %164 = asinh(%156) /* ty=Tensor[(308), float64] */;
  %165 = %161.0;
  (%162, %163, %164, %165, %var_311, %var_312)
}

def @func_4735(%var_4714: Tensor[(11, 8, 16), float64]) -> (Tensor[(11, 8, 16), float64], Tensor[(360), float32], Tensor[(360), float32], Tensor[(7, 4, 11), float64], Tensor[(720), float64]) {
  %166 = cast(%var_4714, dtype="float64") /* ty=Tensor[(11, 8, 16), float64] */;
  %167 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(11, 8, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(meta[relay.Constant][15] /* ty=Tensor[(11, 8, 16), float64] */, dtype="float64") /* ty=Tensor[(11, 8, 16), float64] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %170 = cast(meta[relay.Constant][16] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %171 = reshape(%170, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %172 = @func_2248(%171) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64]) */;
  %173 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %174 = @func_2815() /* ty=(Tensor[(720), float64], Tensor[(7, 14, 3), float32]) */;
  %175 = maximum(%168, %169) /* ty=Tensor[(11, 8, 16), float64] */;
  %176 = %172.2;
  %177 = %173.0;
  %178 = %174.0;
  (%175, %176, meta[relay.Constant][16] /* ty=Tensor[(360), float32] */, %177, %178)
}

def @func_4844(%var_4833: uint16, %var_4834: Tensor[(22), uint16]) -> (Tensor[(7, 14, 3), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 14, 3), float32]) {
  %179 = @func_4273() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %180 = cast(%var_4833, dtype="uint16") /* ty=uint16 */;
  %181 = cast(%var_4834, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %182 = reshape(%180, newshape=[]) /* ty=uint16 */;
  %183 = reshape(%181, newshape=[11, 2, 1]) /* ty=Tensor[(11, 2, 1), uint16] */;
  %184 = @func_162(%182, %183) /* ty=(Tensor[(11, 2, 1), uint16],) */;
  %185 = @func_3892() /* ty=(Tensor[(7, 14, 3), float32],) */;
  %186 = %179.0;
  %187 = %184.0;
  %188 = %185.0;
  (%186, %187, %var_4833, %var_4834, %188)
}

def @func_6417() -> (Tensor[(308), float64], Tensor[(16, 12, 16), float64], Tensor[(3072), bool]) {
  %189 = @func_5669() /* ty=(Tensor[(308), float64],) */;
  %190 = cast(meta[relay.Constant][17] /* ty=Tensor[(3072), float32] */, dtype="float32") /* ty=Tensor[(3072), float32] */;
  %191 = reshape(%190, newshape=[16, 12, 16]) /* ty=Tensor[(16, 12, 16), float32] */;
  %192 = @func_25(%191) /* ty=(Tensor[(16, 12, 16), float32],) */;
  %193 = %192.0;
  %194 = cast(meta[relay.Constant][17] /* ty=Tensor[(3072), float32] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %195 = shape_of(%193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %196 = cast(%193, dtype="float64") /* ty=Tensor[(16, 12, 16), float64] */;
  %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %198 = cast(%193, dtype="bool") /* ty=Tensor[(16, 12, 16), bool] */;
  %199 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(3072), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %200 = cast(meta[relay.Constant][17] /* ty=Tensor[(3072), float32] */, dtype="bool") /* ty=Tensor[(3072), bool] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?), bool] */;
  %202 = %189.0;
  %203 = floor_divide(%196, %197) /* ty=Tensor[(16, 12, 16), float64] */;
  %204 = greater_equal(%200, %201) /* ty=Tensor[(3072), bool] */;
  (%202, %203, %204)
}

def @func_1231(%var_1157: Tensor[(7, 1), float32], %var_1158: Tensor[(7, 10), float32], %var_1220: uint16) -> (Tensor[(7, 10), float32], Tensor[(6, 7, 5), bool], Tensor[(1, 210), int64], Tensor[(308), float64], uint16, Tensor[(22), uint16]) {
  %205 = cast(%var_1157, dtype="float32") /* ty=Tensor[(7, 1), float32] */;
  %206 = cast(%var_1158, dtype="float32") /* ty=Tensor[(7, 10), float32] */;
  %207 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 210), int64] */, dtype="int64") /* ty=Tensor[(1, 210), int64] */;
  %208 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 210), int64] */, dtype="int64") /* ty=Tensor[(1, 210), int64] */;
  %209 = cast(meta[relay.Constant][19] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %210 = cast(%var_1220, dtype="uint16") /* ty=uint16 */;
  %211 = cast(meta[relay.Constant][20] /* ty=Tensor[(22), uint16] */, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %212 = reshape(%207, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), int64] */;
  %213 = reshape(%208, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), int64] */;
  %214 = reshape(%209, newshape=[308]) /* ty=Tensor[(308), float64] */;
  %215 = reshape(%210, newshape=[]) /* ty=uint16 */;
  %216 = reshape(%211, newshape=[22]) /* ty=Tensor[(22), uint16] */;
  %217 = @func_317(%212, %213, %214, %215, %216) /* ty=(Tensor[(6, 7, 5), bool], Tensor[(7, 4, 11), float64], Tensor[(308), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) */;
  %218 = floor_divide(%205, %206) /* ty=Tensor[(7, 10), float32] */;
  %219 = %217.0;
  (%218, %219, meta[relay.Constant][18] /* ty=Tensor[(1, 210), int64] */, meta[relay.Constant][19] /* ty=Tensor[(308), float64] */, %var_1220, meta[relay.Constant][20] /* ty=Tensor[(22), uint16] */)
}

def @func_5150() -> (Tensor[(308), float64],) {
  %220 = @func_5068() /* ty=(Tensor[(7, 14, 3), float64], Tensor[(308), float64]) */;
  %221 = %220.1;
  (%221,)
}

def @func_6104() -> (Tensor[(7, 14, 3), float64],) {
  %222 = @func_1713() /* ty=Tensor[(7, 14, 3), float64] */;
  (%222,)
}

def @func_558(%var_551: Tensor[(12, 10, 6), float64]) -> Tensor[(12, 10, 6), float64] {
  %223 = cast(%var_551, dtype="float64") /* ty=Tensor[(12, 10, 6), float64] */;
  sinh(%223) /* ty=Tensor[(12, 10, 6), float64] */
}

def @func_6658(%var_6647: Tensor[(7), float32], %var_6648: Tensor[(70), float32]) -> (Tensor[(7, 14, 3), float64], Tensor[(308), float64], Tensor[(728), bool], Tensor[(16, 12, 16), float32], Tensor[(3072), float32], Tensor[(1, 210), int64], Tensor[(7), float32], Tensor[(70), float32], uint16, Tensor[(728), bool]) {
  %224 = @func_6104() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %225 = @func_2592() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
  %226 = @func_4379() /* ty=(Tensor[(728), bool], Tensor[(7, 14, 3), float64]) */;
  %227 = cast(meta[relay.Constant][21] /* ty=Tensor[(3072), float32] */, dtype="float32") /* ty=Tensor[(3072), float32] */;
  %228 = reshape(%227, newshape=[16, 12, 16]) /* ty=Tensor[(16, 12, 16), float32] */;
  %229 = @func_25(%228) /* ty=(Tensor[(16, 12, 16), float32],) */;
  %230 = cast(%var_6647, dtype="float32") /* ty=Tensor[(7), float32] */;
  %231 = cast(%var_6648, dtype="float32") /* ty=Tensor[(70), float32] */;
  %232 = cast(meta[relay.Constant][22] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %233 = reshape(%230, newshape=[7, 1]) /* ty=Tensor[(7, 1), float32] */;
  %234 = reshape(%231, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %235 = reshape(%232, newshape=[]) /* ty=uint16 */;
  %236 = @func_1231(%233, %234, %235) /* ty=(Tensor[(7, 10), float32], Tensor[(6, 7, 5), bool], Tensor[(1, 210), int64], Tensor[(308), float64], uint16, Tensor[(22), uint16]) */;
  %237 = %224.0;
  %238 = %225.2;
  %239 = %226.0;
  %240 = %229.0;
  %241 = %236.2;
  %242 = @func_5378() /* ty=Tensor[(728), bool] */;
  (%237, %238, %239, %240, meta[relay.Constant][21] /* ty=Tensor[(3072), float32] */, %241, %var_6647, %var_6648, meta[relay.Constant][22] /* ty=uint16 */, %242)
}

def @func_5068() -> (Tensor[(7, 14, 3), float64], Tensor[(308), float64]) {
  %243 = @func_4273() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %244 = @func_5041() /* ty=(Tensor[(308), float64],) */;
  %245 = %243.0;
  %246 = %244.0;
  (%245, %246)
}

def @func_5860(%var_5804: Tensor[(12, 60), float64], %var_5829: Tensor[(308), float64], %var_5854: Tensor[(30, 2), float64]) -> (Tensor[(7, 14, 3), float32], Tensor[(6, 60), bool], Tensor[(7, 4, 11), uint64], Tensor[(308), float64], Tensor[(12, 60), int64], Tensor[(2, 10, 3), float64], Tensor[(30, 2), float64], Tensor[(8, 7, 13), float32]) {
  %247 = @func_2815() /* ty=(Tensor[(720), float64], Tensor[(7, 14, 3), float32]) */;
  %248 = cast(meta[relay.Constant][24] /* ty=Tensor[(6, 60), float32] */, dtype="bool") /* ty=Tensor[(6, 60), bool] */;
  %249 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(6, 60), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %250 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 60), float32] */, dtype="bool") /* ty=Tensor[(6, 60), bool] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %252 = cast(%var_5829, dtype="float64") /* ty=Tensor[(308), float64] */;
  %253 = reshape(%252, newshape=[7, 4, 11]) /* ty=Tensor[(7, 4, 11), float64] */;
  %254 = @func_2291(%253) /* ty=(Tensor[(7, 4, 11), uint64],) */;
  %255 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 60), float32] */, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
  %256 = cast(%var_5804, dtype="float64") /* ty=Tensor[(12, 60), float64] */;
  %257 = reshape(%255, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
  %258 = reshape(%256, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %259 = @func_1378(%257, %258) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(6, 10, 6), float32], Tensor[(6, 60), float32], Tensor[(720), float64], Tensor[(720), float64]) */;
  %260 = %259.4;
  %261 = cast(%260, dtype="int64") /* ty=Tensor[(720), int64] */;
  %262 = shape_of(%var_5804, dtype="int32") /* ty=Tensor[(2), int32] */;
  %263 = cast(%var_5804, dtype="int64") /* ty=Tensor[(12, 60), int64] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %265 = cast(%var_5854, dtype="float64") /* ty=Tensor[(30, 2), float64] */;
  %266 = reshape(%265, newshape=[2, 10, 3]) /* ty=Tensor[(2, 10, 3), float64] */;
  %267 = @func_5299(%266) /* ty=(Tensor[(2, 10, 3), float64],) */;
  %268 = @func_4576() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(550, 3), float64], Tensor[(308), uint32], Tensor[(360), float32]) */;
  %269 = %268.1;
  %270 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 7, 13), float32] */, dtype="int32") /* ty=Tensor[(8, 7, 13), int32] */;
  %271 = shape_of(%269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %272 = cast(%269, dtype="int32") /* ty=Tensor[(8, 7, 13), int32] */;
  %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %274 = bitwise_and(%272, %273) /* ty=Tensor[(8, 7, 13), int32] */;
  %275 = cast(%274, dtype="float32") /* ty=Tensor[(8, 7, 13), float32] */;
  %276 = %247.1;
  %277 = less(%250, %251) /* ty=Tensor[(6, 60), bool] */;
  %278 = %254.0;
  %279 = left_shift(%263, %264) /* ty=Tensor[(12, 60), int64] */;
  %280 = %267.0;
  %281 = sinh(%275) /* ty=Tensor[(8, 7, 13), float32] */;
  (%276, %277, %278, %var_5829, %279, %280, %var_5854, %281)
}

def @func_2849() -> (Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), float64], Tensor[(11, 2), uint16]) {
  %282 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %283 = cast(meta[relay.Constant][26] /* ty=Tensor[(11, 2), uint16] */, dtype="uint16") /* ty=Tensor[(11, 2), uint16] */;
  %284 = reshape(%283, newshape=[1, 22]) /* ty=Tensor[(1, 22), uint16] */;
  %285 = @func_2760(%284) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(1, 22), uint16], Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), bool], Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), float64]) */;
  %286 = %282.0;
  %287 = %285.5;
  (%286, %287, meta[relay.Constant][26] /* ty=Tensor[(11, 2), uint16] */)
}

def @func_1981(%var_1970: Tensor[(360), float32], %var_1971: Tensor[(210), int64]) -> (Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(720), float64], Tensor[(1, 294), float64], Tensor[(360), float32], Tensor[(210), int64], Tensor[(728), int16]) {
  %288 = @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %289 = cast(meta[relay.Constant][27] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
  %290 = reshape(%289, newshape=[8, 7, 13]) /* ty=Tensor[(8, 7, 13), float32] */;
  %291 = @func_1093(%290) /* ty=(Tensor[(8, 7, 13), float32],) */;
  %292 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 294), float64] */, dtype="float64") /* ty=Tensor[(1, 294), float64] */;
  %293 = cast(%var_1970, dtype="float32") /* ty=Tensor[(360), float32] */;
  %294 = cast(%var_1971, dtype="int64") /* ty=Tensor[(210), int64] */;
  %295 = %288.0;
  %296 = cast(%295, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %297 = cast(meta[relay.Constant][29] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %298 = reshape(%292, newshape=[7, 14, 3]) /* ty=Tensor[(7, 14, 3), float64] */;
  %299 = reshape(%293, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %300 = reshape(%294, newshape=[210]) /* ty=Tensor[(210), int64] */;
  %301 = reshape(%296, newshape=[308]) /* ty=Tensor[(308), float64] */;
  %302 = reshape(%297, newshape=[]) /* ty=uint16 */;
  %303 = @func_1661(%298, %299, %300, %301, %302) /* ty=(Tensor[(7, 14, 3), int8], Tensor[(720), float64], Tensor[(360), float32], Tensor[(720), float64], Tensor[(11, 2, 1), uint16], Tensor[(210), int64], Tensor[(308), float64], uint16, Tensor[(11, 2), uint16], Tensor[(2, 360), float32], Tensor[(1, 3584), float32], Tensor[(7, 14, 3), int8], Tensor[(6, 10, 6), float32]) */;
  %304 = cast(meta[relay.Constant][27] /* ty=Tensor[(728), float32] */, dtype="int16") /* ty=Tensor[(728), int16] */;
  %305 = cast(meta[relay.Constant][29] /* ty=uint16 */, dtype="int16") /* ty=int16 */;
  %306 = %291.0;
  %307 = %303.3;
  %308 = minimum(%304, %305) /* ty=Tensor[(728), int16] */;
  (%295, %306, %307, meta[relay.Constant][28] /* ty=Tensor[(1, 294), float64] */, %var_1970, %var_1971, %308)
}

def @func_3138(%var_3119: Tensor[(16, 5, 1), float32]) -> (Tensor[(16, 5, 1), float32],) {
  %309 = cast(%var_3119, dtype="float32") /* ty=Tensor[(16, 5, 1), float32] */;
  %310 = sqrt(%309) /* ty=Tensor[(16, 5, 1), float32] */;
  (%310,)
}

def @func_2074() -> (Tensor[(7, 4, 11), float64],) {
  %311 = @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %312 = %311.0;
  (%312,)
}

def @func_2796(%var_2772: int16, %var_2773: Tensor[(6, 16, 8), int16], %var_2785: Tensor[(7), float32]) -> (Tensor[(6, 16, 8), bool], Tensor[(16, 26), int64], Tensor[(7), float32], Tensor[(720), float64], Tensor[(360), float32]) {
  %313 = cast(%var_2772, dtype="bool") /* ty=bool */;
  %314 = cast(%var_2773, dtype="bool") /* ty=Tensor[(6, 16, 8), bool] */;
  %315 = cast(%var_2785, dtype="float32") /* ty=Tensor[(7), float32] */;
  %316 = reshape(%315, newshape=[7, 1]) /* ty=Tensor[(7, 1), float32] */;
  %317 = @func_2481(%316) /* ty=(Tensor[(720), float64], Tensor[(1, 360), float32], Tensor[(7), float32], Tensor[(16, 26), int64], Tensor[(7, 1), float32], Tensor[(70, 1), float32], Tensor[(7, 14, 3), float32]) */;
  %318 = cast(meta[relay.Constant][30] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %319 = reshape(%318, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %320 = @func_2248(%319) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64]) */;
  %321 = less(%313, %314) /* ty=Tensor[(6, 16, 8), bool] */;
  %322 = %317.3;
  %323 = %320.3;
  (%321, %322, %var_2785, %323, meta[relay.Constant][30] /* ty=Tensor[(360), float32] */)
}

def @func_4068(%var_4051: Tensor[(308), float64], %var_4064: Tensor[(720), float64], %var_4065: Tensor[(48, 64), float32], %var_4066: Tensor[(3584), float32]) -> (Tensor[(7, 14, 3), float64], Tensor[(308), float64], Tensor[(210), int64], Tensor[(308), float64], uint16, Tensor[(22), uint16], Tensor[(70, 1), float32], Tensor[(720), float64], Tensor[(48, 64), float32], Tensor[(3584), float32]) {
  %324 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %325 = cast(meta[relay.Constant][31] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %326 = cast(meta[relay.Constant][31] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %327 = cast(%var_4051, dtype="float64") /* ty=Tensor[(308), float64] */;
  %328 = cast(meta[relay.Constant][32] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %329 = cast(meta[relay.Constant][33] /* ty=Tensor[(22), uint16] */, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %330 = reshape(%325, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), int64] */;
  %331 = reshape(%326, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), int64] */;
  %332 = reshape(%327, newshape=[308]) /* ty=Tensor[(308), float64] */;
  %333 = reshape(%328, newshape=[]) /* ty=uint16 */;
  %334 = reshape(%329, newshape=[22]) /* ty=Tensor[(22), uint16] */;
  %335 = @func_317(%330, %331, %332, %333, %334) /* ty=(Tensor[(6, 7, 5), bool], Tensor[(7, 4, 11), float64], Tensor[(308), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) */;
  %336 = cast(%var_4064, dtype="float64") /* ty=Tensor[(720), float64] */;
  %337 = cast(%var_4065, dtype="float32") /* ty=Tensor[(48, 64), float32] */;
  %338 = cast(%var_4066, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %339 = cast(meta[relay.Constant][33] /* ty=Tensor[(22), uint16] */, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %340 = reshape(%336, newshape=[12, 60]) /* ty=Tensor[(12, 60), float64] */;
  %341 = reshape(%337, newshape=[3072]) /* ty=Tensor[(3072), float32] */;
  %342 = reshape(%338, newshape=[3584]) /* ty=Tensor[(3584), float32] */;
  %343 = reshape(%339, newshape=[22]) /* ty=Tensor[(22), uint16] */;
  %344 = @func_3360(%340, %341, %342, %343) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(70, 1), float32], Tensor[(416), int64], Tensor[(16, 12, 16), float32], Tensor[(12, 10, 6), float64], Tensor[(12, 60), float64], Tensor[(3072), uint8], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) */;
  %345 = %324.0;
  %346 = %335.2;
  %347 = %344.1;
  (%345, %346, meta[relay.Constant][31] /* ty=Tensor[(210), int64] */, %var_4051, meta[relay.Constant][32] /* ty=uint16 */, meta[relay.Constant][33] /* ty=Tensor[(22), uint16] */, %347, %var_4064, %var_4065, %var_4066)
}

def @func_2592() -> (Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) {
  %348 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
  %349 = cast(meta[relay.Constant][34] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %350 = reshape(%349, newshape=[7, 4, 11]) /* ty=Tensor[(7, 4, 11), float64] */;
  %351 = @func_2291(%350) /* ty=(Tensor[(7, 4, 11), uint64],) */;
  %352 = %348.0;
  %353 = %351.0;
  (%352, %353, meta[relay.Constant][34] /* ty=Tensor[(308), float64] */)
}

def @func_1093(%var_1087: Tensor[(8, 7, 13), float32]) -> (Tensor[(8, 7, 13), float32],) {
  %354 = cast(%var_1087, dtype="float32") /* ty=Tensor[(8, 7, 13), float32] */;
  %355 = cos(%354) /* ty=Tensor[(8, 7, 13), float32] */;
  (%355,)
}

def @func_4012(%var_3984: Tensor[(720), float64]) -> (Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(7, 4, 11), float64]) {
  %356 = cast(%var_3984, dtype="float64") /* ty=Tensor[(720), float64] */;
  %357 = reshape(%356, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), float64] */;
  %358 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %359 = %358.0;
  %360 = cast(%359, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %361 = @func_558(%357) /* ty=Tensor[(12, 10, 6), float64] */;
  %362 = atan(%360) /* ty=Tensor[(7, 4, 11), float64] */;
  (%361, %var_3984, %362)
}

def @func_1243() -> (Tensor[(7, 4, 11), float64],) {
  %363 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
  %364 = %363.1;
  (%364,)
}

def @func_2131(%var_2096: Tensor[(720), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(7, 4, 11), int64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64], Tensor[(7, 4, 11), float64]) {
  %365 = @func_1804() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
  %366 = @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %367 = %366.0;
  %368 = cast(meta[relay.Constant][35] /* ty=Tensor[(7, 4, 11), float64] */, dtype="int64") /* ty=Tensor[(7, 4, 11), int64] */;
  %369 = shape_of(%367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%367, dtype="int64") /* ty=Tensor[(7, 4, 11), int64] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %372 = cast(meta[relay.Constant][36] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %373 = cast(%var_2096, dtype="float64") /* ty=Tensor[(720), float64] */;
  %374 = reshape(%372, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
  %375 = reshape(%373, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %376 = @func_1378(%374, %375) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(6, 10, 6), float32], Tensor[(6, 60), float32], Tensor[(720), float64], Tensor[(720), float64]) */;
  %377 = @func_2074() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %378 = %365.1;
  %379 = bitwise_and(%370, %371) /* ty=Tensor[(7, 4, 11), int64] */;
  %380 = %376.0;
  %381 = %377.0;
  (%378, %379, %380, meta[relay.Constant][36] /* ty=Tensor[(360), float32] */, %var_2096, %381)
}

def @func_648(%var_636: Tensor[(6, 10, 6), float32]) -> (Tensor[(6, 10, 6), float32],) {
  %382 = cast(%var_636, dtype="float32") /* ty=Tensor[(6, 10, 6), float32] */;
  %383 = sinh(%382) /* ty=Tensor[(6, 10, 6), float32] */;
  (%383,)
}

def @func_3360(%var_3329: Tensor[(12, 60), float64], %var_3336: Tensor[(3072), float32], %var_3346: Tensor[(3584), float32], %var_3351: Tensor[(22), uint16]) -> (Tensor[(7, 4, 11), float64], Tensor[(70, 1), float32], Tensor[(416), int64], Tensor[(16, 12, 16), float32], Tensor[(12, 10, 6), float64], Tensor[(12, 60), float64], Tensor[(3072), uint8], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) {
  %384 = @func_2543() /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
  %385 = %384.1;
  %386 = cast(%385, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %387 = cos(%386) /* ty=Tensor[(7, 4, 11), float64] */;
  %388 = cast(%387, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %389 = cast(meta[relay.Constant][37] /* ty=Tensor[(416), int64] */, dtype="int64") /* ty=Tensor[(416), int64] */;
  %390 = reshape(%388, newshape=[308]) /* ty=Tensor[(308), float64] */;
  %391 = reshape(%389, newshape=[416]) /* ty=Tensor[(416), int64] */;
  %392 = @func_1924(%390, %391) /* ty=(Tensor[(308), uint16], Tensor[(7), float32], Tensor[(416), int64], Tensor[(7), float32], Tensor[(70, 1), float32], Tensor[(16, 12, 16), float32], Tensor[(3072), float32]) */;
  %393 = cast(meta[relay.Constant][38] /* ty=Tensor[(3072), float32] */, dtype="float32") /* ty=Tensor[(3072), float32] */;
  %394 = reshape(%393, newshape=[16, 12, 16]) /* ty=Tensor[(16, 12, 16), float32] */;
  %395 = @func_25(%394) /* ty=(Tensor[(16, 12, 16), float32],) */;
  %396 = cast(%var_3329, dtype="float64") /* ty=Tensor[(12, 60), float64] */;
  %397 = reshape(%396, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), float64] */;
  %398 = cast(%var_3336, dtype="uint8") /* ty=Tensor[(3072), uint8] */;
  %399 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(3072), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %400 = cast(meta[relay.Constant][38] /* ty=Tensor[(3072), float32] */, dtype="uint8") /* ty=Tensor[(3072), uint8] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %402 = cast(%var_3346, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %403 = cast(%var_3329, dtype="float64") /* ty=Tensor[(12, 60), float64] */;
  %404 = reshape(%402, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %405 = reshape(%403, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
  %406 = @func_721(%404, %405) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(2, 360), float32]) */;
  %407 = cast(meta[relay.Constant][39] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %408 = cast(%var_3351, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %409 = reshape(%407, newshape=[]) /* ty=uint16 */;
  %410 = reshape(%408, newshape=[11, 2, 1]) /* ty=Tensor[(11, 2, 1), uint16] */;
  %411 = @func_162(%409, %410) /* ty=(Tensor[(11, 2, 1), uint16],) */;
  %412 = %392.4;
  %413 = %395.0;
  %414 = @func_558(%397) /* ty=Tensor[(12, 10, 6), float64] */;
  %415 = logical_xor(%400, %401) /* ty=Tensor[(3072), uint8] */;
  %416 = %406.0;
  %417 = %411.0;
  (%387, %412, meta[relay.Constant][37] /* ty=Tensor[(416), int64] */, %413, %414, %var_3329, %415, %416, %var_3346, %417, meta[relay.Constant][39] /* ty=uint16 */, %var_3351)
}

def @func_5041() -> (Tensor[(308), float64],) {
  %418 = @func_2592() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
  %419 = %418.2;
  (%419,)
}

def @func_25(%var_22: Tensor[(16, 12, 16), float32]) -> (Tensor[(16, 12, 16), float32],) {
  %420 = cast(%var_22, dtype="float32") /* ty=Tensor[(16, 12, 16), float32] */;
  %421 = erf(%420) /* ty=Tensor[(16, 12, 16), float32] */;
  (%421,)
}

def @func_3171(%var_3159: Tensor[(3, 14, 14), int8], %var_3160: Tensor[(3, 14, 14), int8]) -> Tensor[(3, 14, 14), float64] {
  %422 = cast(%var_3160, dtype="bool") /* ty=Tensor[(3, 14, 14), bool] */;
  %423 = shape_of(%var_3159, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(%var_3159, dtype="bool") /* ty=Tensor[(3, 14, 14), bool] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %426 = greater(%424, %425) /* ty=Tensor[(3, 14, 14), bool] */;
  %427 = cast(%var_3160, dtype="float64") /* ty=Tensor[(3, 14, 14), float64] */;
  %428 = shape_of(%426, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%426, dtype="float64") /* ty=Tensor[(3, 14, 14), float64] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%429, %430) /* ty=Tensor[(3, 14, 14), float64] */
}

def @func_5198() -> (Tensor[(7, 14, 3), float64],) {
  %431 = @func_4772() /* ty=Tensor[(7, 14, 3), float64] */;
  (%431,)
}

def @func_3783(%var_3778: uint16, %var_3779: Tensor[(416), int64]) -> (Tensor[(11, 2), uint16], Tensor[(7, 4, 11), float64], Tensor[(720), float64], uint16, Tensor[(416), int64], Tensor[(7), float32]) {
  %432 = @func_2849() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), float64], Tensor[(11, 2), uint16]) */;
  %433 = cast(%var_3778, dtype="uint16") /* ty=uint16 */;
  %434 = cast(%var_3779, dtype="int64") /* ty=Tensor[(416), int64] */;
  %435 = cast(meta[relay.Constant][40] /* ty=Tensor[(7), float32] */, dtype="float32") /* ty=Tensor[(7), float32] */;
  %436 = reshape(%433, newshape=[]) /* ty=uint16 */;
  %437 = reshape(%434, newshape=[8, 52]) /* ty=Tensor[(8, 52), int64] */;
  %438 = reshape(%435, newshape=[7, 1]) /* ty=Tensor[(7, 1), float32] */;
  %439 = @func_2522(%436, %437, %438) /* ty=(Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 4, 11), float32], Tensor[(7, 4, 11), float64], Tensor[(720), float64], Tensor[(2, 16, 13), int64], Tensor[(8, 52), int64], Tensor[(7, 1), float32], Tensor[(70), float32]) */;
  %440 = %432.2;
  %441 = @func_3454() /* ty=Tensor[(7, 4, 11), float64] */;
  %442 = %439.5;
  (%440, %441, %442, %var_3778, %var_3779, meta[relay.Constant][40] /* ty=Tensor[(7), float32] */)
}

def @func_6371() -> (Tensor[(308), float32], Tensor[(308), float32], Tensor[(308), int64]) {
  %443 = @func_2707() /* ty=(Tensor[(308), uint32],) */;
  %444 = %443.0;
  %445 = cast(%444, dtype="float32") /* ty=Tensor[(308), float32] */;
  %446 = cast(%444, dtype="float32") /* ty=Tensor[(308), float32] */;
  %447 = cast(meta[relay.Constant][41] /* ty=Tensor[(308), uint32] */, dtype="int64") /* ty=Tensor[(308), int64] */;
  %448 = shape_of(%444, dtype="int32") /* ty=Tensor[(1), int32] */;
  %449 = cast(%444, dtype="int64") /* ty=Tensor[(308), int64] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?), int64] */;
  %451 = acos(%445) /* ty=Tensor[(308), float32] */;
  %452 = asin(%446) /* ty=Tensor[(308), float32] */;
  %453 = minimum(%449, %450) /* ty=Tensor[(308), int64] */;
  (%451, %452, %453)
}

def @func_1078(%var_1038: Tensor[(720), float64], %var_1054: Tensor[(308), float64]) -> (Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(308), float32], Tensor[(308), float64], Tensor[(7, 14, 3), float64]) {
  %454 = cast(%var_1038, dtype="float64") /* ty=Tensor[(720), float64] */;
  %455 = reshape(%454, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), float64] */;
  %456 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
  %457 = %456.2;
  %458 = cast(%var_1054, dtype="uint32") /* ty=Tensor[(308), uint32] */;
  %459 = shape_of(%457, dtype="int32") /* ty=Tensor[(1), int32] */;
  %460 = cast(%457, dtype="uint32") /* ty=Tensor[(308), uint32] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %462 = bitwise_xor(%460, %461) /* ty=Tensor[(308), uint32] */;
  %463 = cast(%462, dtype="float32") /* ty=Tensor[(308), float32] */;
  %464 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
  %465 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %466 = @func_558(%455) /* ty=Tensor[(12, 10, 6), float64] */;
  %467 = log2(%463) /* ty=Tensor[(308), float32] */;
  %468 = %464.2;
  %469 = %465.0;
  (%466, %var_1038, %467, %468, %469)
}

def @func_5583(%var_5553: Tensor[(16, 10, 12), uint16]) -> (Tensor[(16, 10, 12), bool], Tensor[(16, 10, 12), float64]) {
  %470 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 10, 12), uint16] */, dtype="uint16") /* ty=Tensor[(16, 10, 12), uint16] */;
  %471 = shape_of(%var_5553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %472 = cast(%var_5553, dtype="uint16") /* ty=Tensor[(16, 10, 12), uint16] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %474 = right_shift(%472, %473) /* ty=Tensor[(16, 10, 12), uint16] */;
  %475 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 10, 12), uint16] */, dtype="bool") /* ty=Tensor[(16, 10, 12), bool] */;
  %476 = shape_of(%474, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%474, dtype="bool") /* ty=Tensor[(16, 10, 12), bool] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %479 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 10, 12), uint16] */, dtype="float64") /* ty=Tensor[(16, 10, 12), float64] */;
  %480 = logical_and(%477, %478) /* ty=Tensor[(16, 10, 12), bool] */;
  %481 = acosh(%479) /* ty=Tensor[(16, 10, 12), float64] */;
  (%480, %481)
}

def @func_6005(%var_5966: Tensor[(11, 13), float32], %var_5994: Tensor[(720), float64], %var_5995: Tensor[(308), float64]) -> (Tensor[(11, 13), float32], Tensor[(7, 14, 3), float32], Tensor[(720), float64], Tensor[(308), float64], Tensor[(60), float64]) {
  %482 = cast(%var_5966, dtype="float32") /* ty=Tensor[(11, 13), float32] */;
  %483 = cast(%var_5994, dtype="float64") /* ty=Tensor[(720), float64] */;
  %484 = cast(%var_5995, dtype="float64") /* ty=Tensor[(308), float64] */;
  %485 = cast(meta[relay.Constant][43] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %486 = reshape(%483, newshape=[12, 60]) /* ty=Tensor[(12, 60), float64] */;
  %487 = reshape(%484, newshape=[308]) /* ty=Tensor[(308), float64] */;
  %488 = reshape(%485, newshape=[30, 2]) /* ty=Tensor[(30, 2), float64] */;
  %489 = @func_5860(%486, %487, %488) /* ty=(Tensor[(7, 14, 3), float32], Tensor[(6, 60), bool], Tensor[(7, 4, 11), uint64], Tensor[(308), float64], Tensor[(12, 60), int64], Tensor[(2, 10, 3), float64], Tensor[(30, 2), float64], Tensor[(8, 7, 13), float32]) */;
  %490 = asin(%482) /* ty=Tensor[(11, 13), float32] */;
  %491 = %489.0;
  (%490, %491, %var_5994, %var_5995, meta[relay.Constant][43] /* ty=Tensor[(60), float64] */)
}

def @func_2481(%var_2451: Tensor[(7, 1), float32]) -> (Tensor[(720), float64], Tensor[(1, 360), float32], Tensor[(7), float32], Tensor[(16, 26), int64], Tensor[(7, 1), float32], Tensor[(70, 1), float32], Tensor[(7, 14, 3), float32]) {
  %492 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 360), float32] */, dtype="float32") /* ty=Tensor[(1, 360), float32] */;
  %493 = reshape(%492, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %494 = @func_2248(%493) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64]) */;
  %495 = cast(meta[relay.Constant][45] /* ty=Tensor[(16, 26), int64] */, dtype="int64") /* ty=Tensor[(16, 26), int64] */;
  %496 = cast(%var_2451, dtype="float32") /* ty=Tensor[(7, 1), float32] */;
  %497 = cast(meta[relay.Constant][46] /* ty=Tensor[(70, 1), float32] */, dtype="float32") /* ty=Tensor[(70, 1), float32] */;
  %498 = reshape(%495, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), int64] */;
  %499 = reshape(%496, newshape=[7]) /* ty=Tensor[(7), float32] */;
  %500 = reshape(%497, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %501 = @func_1764(%498, %499, %500) /* ty=(Tensor[(2, 16, 13), int64], Tensor[(6, 7, 5), bool], Tensor[(7), float32], Tensor[(70), float32], uint16, Tensor[(2, 16, 13), float32]) */;
  %502 = @func_1958() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %503 = %502.0;
  %504 = cast(%503, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %505 = atan(%504) /* ty=Tensor[(7, 14, 3), float64] */;
  %506 = cast(%505, dtype="float32") /* ty=Tensor[(7, 14, 3), float32] */;
  %507 = %494.3;
  %508 = %501.2;
  %509 = sigmoid(%506) /* ty=Tensor[(7, 14, 3), float32] */;
  (%507, meta[relay.Constant][44] /* ty=Tensor[(1, 360), float32] */, %508, meta[relay.Constant][45] /* ty=Tensor[(16, 26), int64] */, %var_2451, meta[relay.Constant][46] /* ty=Tensor[(70, 1), float32] */, %509)
}

def @func_1713() -> Tensor[(7, 14, 3), float64] {
  %510 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %510.0
}

def @func_5539() -> (Tensor[(308), float64],) {
  %511 = @func_2543() /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
  %512 = %511.2;
  (%512,)
}

def @func_6041() -> Tensor[(550, 3), float64] {
  %513 = @func_4576() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(550, 3), float64], Tensor[(308), uint32], Tensor[(360), float32]) */;
  %513.2
}

def @func_3589() -> (Tensor[(728), bool],) {
  %514 = @func_2902() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(728), float32]) */;
  %515 = %514.2;
  %516 = cast(%515, dtype="float64") /* ty=Tensor[(728), float64] */;
  %517 = asin(%516) /* ty=Tensor[(728), float64] */;
  %518 = cast(%515, dtype="bool") /* ty=Tensor[(728), bool] */;
  %519 = shape_of(%517, dtype="int32") /* ty=Tensor[(1), int32] */;
  %520 = cast(%517, dtype="bool") /* ty=Tensor[(728), bool] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?), bool] */;
  %522 = logical_or(%520, %521) /* ty=Tensor[(728), bool] */;
  (%522,)
}

def @func_4273() -> (Tensor[(7, 14, 3), float64],) {
  %523 = @func_1958() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %524 = %523.0;
  (%524,)
}

def @func_6505() -> (Tensor[(728), bool], Tensor[(7, 14, 3), float64], Tensor[(3, 14, 14), float64], Tensor[(588), int8], Tensor[(728), float32], Tensor[(1092), float32]) {
  %525 = @func_3589() /* ty=(Tensor[(728), bool],) */;
  %526 = @func_4772() /* ty=Tensor[(7, 14, 3), float64] */;
  %527 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 14, 3), float64] */, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
  %528 = shape_of(%526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %529 = cast(%526, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %531 = greater_equal(%529, %530) /* ty=Tensor[(7, 14, 3), bool] */;
  %532 = cast(%531, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %533 = cast(meta[relay.Constant][48] /* ty=Tensor[(588), int8] */, dtype="int8") /* ty=Tensor[(588), int8] */;
  %534 = cast(meta[relay.Constant][48] /* ty=Tensor[(588), int8] */, dtype="int8") /* ty=Tensor[(588), int8] */;
  %535 = reshape(%533, newshape=[3, 14, 14]) /* ty=Tensor[(3, 14, 14), int8] */;
  %536 = reshape(%534, newshape=[3, 14, 14]) /* ty=Tensor[(3, 14, 14), int8] */;
  %537 = cast(meta[relay.Constant][49] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %538 = reshape(%537, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %539 = @func_6198(%538) /* ty=(Tensor[(720), float64], Tensor[(8, 7, 13), float32], Tensor[(728), float32], Tensor[(1092), float32]) */;
  %540 = %525.0;
  %541 = cos(%532) /* ty=Tensor[(7, 14, 3), float64] */;
  %542 = @func_3171(%535, %536) /* ty=Tensor[(3, 14, 14), float64] */;
  %543 = %539.2;
  (%540, %541, %542, meta[relay.Constant][48] /* ty=Tensor[(588), int8] */, %543, meta[relay.Constant][49] /* ty=Tensor[(1092), float32] */)
}

def @func_4187(%var_4131: Tensor[(22), uint16]) -> (Tensor[(11, 2, 1), bool], Tensor[(22), uint16], Tensor[(7, 4, 11), uint64], Tensor[(7, 4, 11), uint8]) {
  %544 = cast(%var_4131, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %545 = reshape(%544, newshape=[1, 22]) /* ty=Tensor[(1, 22), uint16] */;
  %546 = @func_2760(%545) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(1, 22), uint16], Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), bool], Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), float64]) */;
  %547 = @func_2592() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
  %548 = %547.1;
  %549 = cast(%548, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %550 = reshape(%549, newshape=[7, 4, 11]) /* ty=Tensor[(7, 4, 11), float64] */;
  %551 = @func_2291(%550) /* ty=(Tensor[(7, 4, 11), uint64],) */;
  %552 = @func_2592() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
  %553 = %552.1;
  %554 = cast(%548, dtype="int32") /* ty=Tensor[(7, 4, 11), int32] */;
  %555 = shape_of(%553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %556 = cast(%553, dtype="int32") /* ty=Tensor[(7, 4, 11), int32] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %558 = bitwise_or(%556, %557) /* ty=Tensor[(7, 4, 11), int32] */;
  %559 = cast(%558, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %560 = sin(%559) /* ty=Tensor[(7, 4, 11), float64] */;
  %561 = cast(%558, dtype="uint8") /* ty=Tensor[(7, 4, 11), uint8] */;
  %562 = shape_of(%560, dtype="int32") /* ty=Tensor[(3), int32] */;
  %563 = cast(%560, dtype="uint8") /* ty=Tensor[(7, 4, 11), uint8] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %565 = %546.3;
  %566 = %551.0;
  %567 = maximum(%563, %564) /* ty=Tensor[(7, 4, 11), uint8] */;
  (%565, %var_4131, %566, %567)
}

def @func_4343(%var_4309: Tensor[(22), uint16]) -> (Tensor[(7, 4, 11), float64], uint16, Tensor[(22), float32], Tensor[(1, 210), float64], Tensor[(728), bool]) {
  %568 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %569 = cast(%var_4309, dtype="float32") /* ty=Tensor[(22), float32] */;
  %570 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 210), int64] */, dtype="int64") /* ty=Tensor[(1, 210), int64] */;
  %571 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 210), int64] */, dtype="int64") /* ty=Tensor[(1, 210), int64] */;
  %572 = %568.0;
  %573 = cast(%572, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %574 = cast(meta[relay.Constant][50] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %575 = cast(%var_4309, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %576 = reshape(%570, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), int64] */;
  %577 = reshape(%571, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), int64] */;
  %578 = reshape(%573, newshape=[308]) /* ty=Tensor[(308), float64] */;
  %579 = reshape(%574, newshape=[]) /* ty=uint16 */;
  %580 = reshape(%575, newshape=[22]) /* ty=Tensor[(22), uint16] */;
  %581 = @func_317(%576, %577, %578, %579, %580) /* ty=(Tensor[(6, 7, 5), bool], Tensor[(7, 4, 11), float64], Tensor[(308), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) */;
  %582 = %581.4;
  %583 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 210), int64] */, dtype="float64") /* ty=Tensor[(1, 210), float64] */;
  %584 = cast(%582, dtype="float64") /* ty=float64 */;
  %585 = @func_3589() /* ty=(Tensor[(728), bool],) */;
  %586 = acosh(%569) /* ty=Tensor[(22), float32] */;
  %587 = minimum(%583, %584) /* ty=Tensor[(1, 210), float64] */;
  %588 = %585.0;
  (%572, meta[relay.Constant][50] /* ty=uint16 */, %586, %587, %588)
}

def @func_4379() -> (Tensor[(728), bool], Tensor[(7, 14, 3), float64]) {
  %589 = @func_3589() /* ty=(Tensor[(728), bool],) */;
  %590 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %591 = %589.0;
  %592 = %590.0;
  (%591, %592)
}

def @func_5944() -> (Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(720), float64], Tensor[(2, 360), float32], Tensor[(7, 14, 3), float64]) {
  %593 = cast(meta[relay.Constant][52] /* ty=Tensor[(3584), float32] */, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %594 = @func_5271() /* ty=(Tensor[(308), float64], Tensor[(2, 360), float32], Tensor[(8, 448), float32], Tensor[(720), float64]) */;
  %595 = %594.1;
  %596 = cast(%595, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
  %597 = reshape(%593, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %598 = reshape(%596, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
  %599 = @func_721(%597, %598) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(2, 360), float32]) */;
  %600 = cast(meta[relay.Constant][53] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %601 = cast(%595, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
  %602 = reshape(%600, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
  %603 = reshape(%601, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %604 = @func_1378(%602, %603) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(6, 10, 6), float32], Tensor[(6, 60), float32], Tensor[(720), float64], Tensor[(720), float64]) */;
  %605 = cast(meta[relay.Constant][53] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %606 = cast(%595, dtype="float32") /* ty=Tensor[(2, 360), float32] */;
  %607 = @func_5198() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %608 = %599.0;
  %609 = %604.4;
  %610 = maximum(%605, %606) /* ty=Tensor[(2, 360), float32] */;
  %611 = %607.0;
  (%608, meta[relay.Constant][52] /* ty=Tensor[(3584), float32] */, %609, %610, %611)
}

def @func_1958() -> (Tensor[(7, 14, 3), float64],) {
  %612 = @func_1713() /* ty=Tensor[(7, 14, 3), float64] */;
  (%612,)
}

def @func_5123(%var_5091: Tensor[(728), float32], %var_5096: Tensor[(1092), float32]) -> (Tensor[(7, 14, 3), float32], Tensor[(8, 7, 13), float32], Tensor[(728), float32], Tensor[(1092), float32], Tensor[(13, 14, 6), bool]) {
  %613 = @func_3892() /* ty=(Tensor[(7, 14, 3), float32],) */;
  %614 = cast(%var_5091, dtype="float32") /* ty=Tensor[(728), float32] */;
  %615 = reshape(%614, newshape=[8, 7, 13]) /* ty=Tensor[(8, 7, 13), float32] */;
  %616 = @func_1093(%615) /* ty=(Tensor[(8, 7, 13), float32],) */;
  %617 = cast(%var_5096, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %618 = cast(%var_5096, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %619 = reshape(%617, newshape=[13, 14, 6]) /* ty=Tensor[(13, 14, 6), float32] */;
  %620 = reshape(%618, newshape=[13, 14, 6]) /* ty=Tensor[(13, 14, 6), float32] */;
  %621 = @func_3490(%619, %620) /* ty=Tensor[(13, 14, 6), float32] */;
  %622 = cast(meta[relay.Constant][54] /* ty=Tensor[(13, 14, 6), float32] */, dtype="bool") /* ty=Tensor[(13, 14, 6), bool] */;
  %623 = shape_of(%621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%621, dtype="bool") /* ty=Tensor[(13, 14, 6), bool] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %626 = %613.0;
  %627 = %616.0;
  %628 = not_equal(%624, %625) /* ty=Tensor[(13, 14, 6), bool] */;
  (%626, %627, %var_5091, %var_5096, %628)
}

def @func_1804() -> (Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) {
  %629 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
  %630 = @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %631 = cast(meta[relay.Constant][55] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %632 = reshape(%631, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), float64] */;
  %633 = %629.0;
  %634 = %630.0;
  %635 = @func_558(%632) /* ty=Tensor[(12, 10, 6), float64] */;
  (%633, %634, %635, meta[relay.Constant][55] /* ty=Tensor[(720), float64] */)
}

def @func_5669() -> (Tensor[(308), float64],) {
  %636 = @func_5150() /* ty=(Tensor[(308), float64],) */;
  %637 = %636.0;
  (%637,)
}

def @main(%var_6675: Tensor[(12, 4, 10), float32]) -> (Tensor[(12, 4, 10), float32],) {
  %638 = cast(%var_6675, dtype="float32") /* ty=Tensor[(12, 4, 10), float32] */;
  %639 = exp(%638) /* ty=Tensor[(12, 4, 10), float32] */;
  (%639,)
}

def @func_162(%var_156: uint16, %var_157: Tensor[(11, 2, 1), uint16]) -> (Tensor[(11, 2, 1), uint16],) {
  %640 = cast(%var_156, dtype="uint16") /* ty=uint16 */;
  %641 = cast(%var_157, dtype="uint16") /* ty=Tensor[(11, 2, 1), uint16] */;
  %642 = maximum(%640, %641) /* ty=Tensor[(11, 2, 1), uint16] */;
  (%642,)
}

def @func_5627(%var_5614: Tensor[(13, 8, 9), uint16]) -> (Tensor[(13, 8, 9), uint16],) {
  %643 = cast(%var_5614, dtype="uint16") /* ty=Tensor[(13, 8, 9), uint16] */;
  %644 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(13, 8, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(meta[relay.Constant][56] /* ty=Tensor[(13, 8, 9), uint16] */, dtype="uint16") /* ty=Tensor[(13, 8, 9), uint16] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %647 = minimum(%645, %646) /* ty=Tensor[(13, 8, 9), uint16] */;
  (%647,)
}

def @func_3454() -> Tensor[(7, 4, 11), float64] {
  %648 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %648.0
}

def @func_5949() -> (Tensor[(7, 14, 3), float64],) {
  %649 = @func_4273() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %650 = %649.0;
  (%650,)
}

def @func_131(%var_122: Tensor[(7, 4, 11), float64]) -> (Tensor[(7, 4, 11), float64],) {
  %651 = cast(%var_122, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %652 = rsqrt(%651) /* ty=Tensor[(7, 4, 11), float64] */;
  (%652,)
}

def @func_4576() -> (Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(550, 3), float64], Tensor[(308), uint32], Tensor[(360), float32]) {
  %653 = @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %654 = cast(meta[relay.Constant][57] /* ty=Tensor[(550, 3), float32] */, dtype="float32") /* ty=Tensor[(550, 3), float32] */;
  %655 = reshape(%654, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
  %656 = @func_2189(%655) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(360), float32], Tensor[(35, 6), int64]) */;
  %657 = cast(meta[relay.Constant][57] /* ty=Tensor[(550, 3), float32] */, dtype="float32") /* ty=Tensor[(550, 3), float32] */;
  %658 = asinh(%657) /* ty=Tensor[(550, 3), float32] */;
  %659 = cast(%658, dtype="float64") /* ty=Tensor[(550, 3), float64] */;
  %660 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(550, 3), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %661 = cast(meta[relay.Constant][57] /* ty=Tensor[(550, 3), float32] */, dtype="float64") /* ty=Tensor[(550, 3), float64] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %663 = @func_2707() /* ty=(Tensor[(308), uint32],) */;
  %664 = cast(%658, dtype="float32") /* ty=Tensor[(550, 3), float32] */;
  %665 = reshape(%664, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
  %666 = @func_2189(%665) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(360), float32], Tensor[(35, 6), int64]) */;
  %667 = %653.0;
  %668 = %656.2;
  %669 = mod(%661, %662) /* ty=Tensor[(550, 3), float64] */;
  %670 = %663.0;
  %671 = %666.3;
  (%667, %668, %669, %670, %671)
}

def @func_2406(%var_2388: Tensor[(360), float32], %var_2391: Tensor[(7, 4, 11), float64]) -> (Tensor[(7, 14, 3), float64], Tensor[(360), float32], Tensor[(7, 4, 11), bool]) {
  %672 = cast(%var_2388, dtype="float32") /* ty=Tensor[(360), float32] */;
  %673 = reshape(%672, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %674 = @func_2248(%673) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64]) */;
  %675 = %674.1;
  %676 = cast(%var_2391, dtype="bool") /* ty=Tensor[(7, 4, 11), bool] */;
  %677 = shape_of(%675, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(%675, dtype="bool") /* ty=Tensor[(7, 4, 11), bool] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %680 = @func_1713() /* ty=Tensor[(7, 14, 3), float64] */;
  %681 = not_equal(%678, %679) /* ty=Tensor[(7, 4, 11), bool] */;
  (%680, %var_2388, %681)
}

def @func_3852() -> Tensor[(7, 4, 11), float64] {
  %682 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
  %682.1
}

def @func_2522(%var_2494: uint16, %var_2517: Tensor[(8, 52), int64], %var_2518: Tensor[(7, 1), float32]) -> (Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 4, 11), float32], Tensor[(7, 4, 11), float64], Tensor[(720), float64], Tensor[(2, 16, 13), int64], Tensor[(8, 52), int64], Tensor[(7, 1), float32], Tensor[(70), float32]) {
  %683 = cast(%var_2494, dtype="uint16") /* ty=uint16 */;
  %684 = cast(meta[relay.Constant][58] /* ty=Tensor[(22), uint16] */, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %685 = reshape(%683, newshape=[]) /* ty=uint16 */;
  %686 = reshape(%684, newshape=[11, 2, 1]) /* ty=Tensor[(11, 2, 1), uint16] */;
  %687 = @func_162(%685, %686) /* ty=(Tensor[(11, 2, 1), uint16],) */;
  %688 = @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %689 = %688.0;
  %690 = cast(%689, dtype="float32") /* ty=Tensor[(7, 4, 11), float32] */;
  %691 = cast(meta[relay.Constant][59] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %692 = reshape(%691, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %693 = @func_2131(%692) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(7, 4, 11), int64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64], Tensor[(7, 4, 11), float64]) */;
  %694 = cast(%var_2517, dtype="int64") /* ty=Tensor[(8, 52), int64] */;
  %695 = cast(%var_2518, dtype="float32") /* ty=Tensor[(7, 1), float32] */;
  %696 = cast(meta[relay.Constant][60] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %697 = reshape(%694, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), int64] */;
  %698 = reshape(%695, newshape=[7]) /* ty=Tensor[(7), float32] */;
  %699 = reshape(%696, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %700 = @func_1764(%697, %698, %699) /* ty=(Tensor[(2, 16, 13), int64], Tensor[(6, 7, 5), bool], Tensor[(7), float32], Tensor[(70), float32], uint16, Tensor[(2, 16, 13), float32]) */;
  %701 = %687.0;
  %702 = tan(%690) /* ty=Tensor[(7, 4, 11), float32] */;
  %703 = %693.2;
  %704 = %700.0;
  (%701, %var_2494, meta[relay.Constant][58] /* ty=Tensor[(22), uint16] */, %702, %703, meta[relay.Constant][59] /* ty=Tensor[(720), float64] */, %704, %var_2517, %var_2518, meta[relay.Constant][60] /* ty=Tensor[(70), float32] */)
}

def @func_1014() -> (Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) {
  %705 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %706 = %705.0;
  %707 = cast(%706, dtype="float32") /* ty=Tensor[(7, 14, 3), float32] */;
  %708 = cast(meta[relay.Constant][61] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %709 = reshape(%708, newshape=[7, 4, 11]) /* ty=Tensor[(7, 4, 11), float64] */;
  %710 = @func_131(%709) /* ty=(Tensor[(7, 4, 11), float64],) */;
  %711 = exp(%707) /* ty=Tensor[(7, 14, 3), float32] */;
  %712 = %710.0;
  (%711, %712, meta[relay.Constant][61] /* ty=Tensor[(308), float64] */)
}

def @func_5489(%var_5423: uint16, %var_5439: Tensor[(7), float32], %var_5440: Tensor[(70), float32]) -> (Tensor[(7, 14, 3), float32], uint16, Tensor[(22), uint16], Tensor[(7, 14, 3), float64], Tensor[(7, 14, 3), bool], uint16, Tensor[(416), int64], Tensor[(7), float32], Tensor[(70), float32]) {
  %713 = @func_2592() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
  %714 = @func_5198() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %715 = @func_4772() /* ty=Tensor[(7, 14, 3), float64] */;
  %716 = cast(%715, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %717 = atanh(%716) /* ty=Tensor[(7, 14, 3), float64] */;
  %718 = cast(%var_5423, dtype="uint16") /* ty=uint16 */;
  %719 = cast(meta[relay.Constant][62] /* ty=Tensor[(22), uint16] */, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %720 = reshape(%718, newshape=[]) /* ty=uint16 */;
  %721 = reshape(%719, newshape=[22]) /* ty=Tensor[(22), uint16] */;
  %722 = @func_4844(%720, %721) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 14, 3), float32]) */;
  %723 = %722.2;
  %724 = cast(%717, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
  %725 = cast(%723, dtype="bool") /* ty=bool */;
  %726 = cast(meta[relay.Constant][63] /* ty=Tensor[(416), int64] */, dtype="int64") /* ty=Tensor[(416), int64] */;
  %727 = cast(%var_5439, dtype="float32") /* ty=Tensor[(7), float32] */;
  %728 = cast(%var_5440, dtype="float32") /* ty=Tensor[(70), float32] */;
  %729 = reshape(%726, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), int64] */;
  %730 = reshape(%727, newshape=[7]) /* ty=Tensor[(7), float32] */;
  %731 = reshape(%728, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %732 = @func_1764(%729, %730, %731) /* ty=(Tensor[(2, 16, 13), int64], Tensor[(6, 7, 5), bool], Tensor[(7), float32], Tensor[(70), float32], uint16, Tensor[(2, 16, 13), float32]) */;
  %733 = %713.0;
  %734 = %714.0;
  %735 = logical_and(%724, %725) /* ty=Tensor[(7, 14, 3), bool] */;
  %736 = %732.4;
  (%733, %var_5423, meta[relay.Constant][62] /* ty=Tensor[(22), uint16] */, %734, %735, %736, meta[relay.Constant][63] /* ty=Tensor[(416), int64] */, %var_5439, %var_5440)
}

def @func_3683(%var_3678: Tensor[(7, 4, 11), float64]) -> Tensor[(7, 4, 11), int16] {
  %737 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %738 = %737.0;
  %739 = cast(%var_3678, dtype="int16") /* ty=Tensor[(7, 4, 11), int16] */;
  %740 = shape_of(%738, dtype="int32") /* ty=Tensor[(3), int32] */;
  %741 = cast(%738, dtype="int16") /* ty=Tensor[(7, 4, 11), int16] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  right_shift(%741, %742) /* ty=Tensor[(7, 4, 11), int16] */
}

def @func_2248(%var_2230: Tensor[(360), float32]) -> (Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64]) {
  %743 = cast(%var_2230, dtype="float32") /* ty=Tensor[(360), float32] */;
  %744 = cast(meta[relay.Constant][64] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %745 = reshape(%743, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
  %746 = reshape(%744, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %747 = @func_1378(%745, %746) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(6, 10, 6), float32], Tensor[(6, 60), float32], Tensor[(720), float64], Tensor[(720), float64]) */;
  %748 = @func_1713() /* ty=Tensor[(7, 14, 3), float64] */;
  %749 = %747.0;
  (%748, %749, %var_2230, meta[relay.Constant][64] /* ty=Tensor[(720), float64] */)
}

def @func_4772() -> Tensor[(7, 14, 3), float64] {
  %750 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %750.0
}

def @func_6083(%var_6063: Tensor[(210), int64]) -> (Tensor[(7, 4, 11), float64], Tensor[(2, 10, 3), uint32], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(210), int64], Tensor[(?, 60), int8]) {
  %751 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %752 = reshape(%751, newshape=[2, 10, 3]) /* ty=Tensor[(2, 10, 3), float64] */;
  %753 = @func_5299(%752) /* ty=(Tensor[(2, 10, 3), float64],) */;
  %754 = %753.0;
  %755 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 60), float64] */, dtype="uint32") /* ty=Tensor[(1, 60), uint32] */;
  %756 = shape_of(%754, dtype="int32") /* ty=Tensor[(3), int32] */;
  %757 = cast(%754, dtype="uint32") /* ty=Tensor[(2, 10, 3), uint32] */;
  %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %759 = cast(meta[relay.Constant][66] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %760 = cast(%var_6063, dtype="int64") /* ty=Tensor[(210), int64] */;
  %761 = reshape(%759, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %762 = reshape(%760, newshape=[210]) /* ty=Tensor[(210), int64] */;
  %763 = @func_1981(%761, %762) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(720), float64], Tensor[(1, 294), float64], Tensor[(360), float32], Tensor[(210), int64], Tensor[(728), int16]) */;
  %764 = cast(%754, dtype="int8") /* ty=Tensor[(2, 10, 3), int8] */;
  %765 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(1, 60), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %766 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 60), float64] */, dtype="int8") /* ty=Tensor[(1, 60), int8] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %768 = @func_3852() /* ty=Tensor[(7, 4, 11), float64] */;
  %769 = multiply(%757, %758) /* ty=Tensor[(2, 10, 3), uint32] */;
  %770 = %763.0;
  %771 = maximum(%766, %767) /* ty=Tensor[(?, 60), int8] */;
  (%768, %769, %770, meta[relay.Constant][66] /* ty=Tensor[(360), float32] */, %var_6063, %771)
}

def @func_3101(%var_3075: Tensor[(3072), float32]) -> (Tensor[(7, 4, 11), float64], Tensor[(3072), float32], Tensor[(6, 10, 6), float32], Tensor[(360), float32], Tensor[(16, 12, 16), float32]) {
  %772 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %773 = cast(meta[relay.Constant][67] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %774 = reshape(%773, newshape=[6, 10, 6]) /* ty=Tensor[(6, 10, 6), float32] */;
  %775 = @func_648(%774) /* ty=(Tensor[(6, 10, 6), float32],) */;
  %776 = cast(%var_3075, dtype="float32") /* ty=Tensor[(3072), float32] */;
  %777 = reshape(%776, newshape=[16, 12, 16]) /* ty=Tensor[(16, 12, 16), float32] */;
  %778 = @func_25(%777) /* ty=(Tensor[(16, 12, 16), float32],) */;
  %779 = %778.0;
  %780 = cast(%779, dtype="float32") /* ty=Tensor[(16, 12, 16), float32] */;
  %781 = %772.0;
  %782 = %775.0;
  %783 = sin(%780) /* ty=Tensor[(16, 12, 16), float32] */;
  (%781, %var_3075, %782, meta[relay.Constant][67] /* ty=Tensor[(360), float32] */, %783)
}

def @func_1661(%var_1535: Tensor[(7, 14, 3), float64], %var_1595: Tensor[(360), float32], %var_1599: Tensor[(210), int64], %var_1600: Tensor[(308), float64], %var_1601: uint16) -> (Tensor[(7, 14, 3), int8], Tensor[(720), float64], Tensor[(360), float32], Tensor[(720), float64], Tensor[(11, 2, 1), uint16], Tensor[(210), int64], Tensor[(308), float64], uint16, Tensor[(11, 2), uint16], Tensor[(2, 360), float32], Tensor[(1, 3584), float32], Tensor[(7, 14, 3), int8], Tensor[(6, 10, 6), float32]) {
  %784 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %785 = %784.0;
  %786 = cast(meta[relay.Constant][68] /* ty=Tensor[(7, 14, 3), float64] */, dtype="int16") /* ty=Tensor[(7, 14, 3), int16] */;
  %787 = shape_of(%785, dtype="int32") /* ty=Tensor[(3), int32] */;
  %788 = cast(%785, dtype="int16") /* ty=Tensor[(7, 14, 3), int16] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %790 = add(%788, %789) /* ty=Tensor[(7, 14, 3), int16] */;
  %791 = cast(%790, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %792 = cosh(%791) /* ty=Tensor[(7, 14, 3), float64] */;
  %793 = cast(%792, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %794 = log10(%793) /* ty=Tensor[(7, 14, 3), float64] */;
  %795 = cast(%var_1535, dtype="int8") /* ty=Tensor[(7, 14, 3), int8] */;
  %796 = shape_of(%785, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(%785, dtype="int8") /* ty=Tensor[(7, 14, 3), int8] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %799 = right_shift(%797, %798) /* ty=Tensor[(7, 14, 3), int8] */;
  %800 = cast(%799, dtype="int8") /* ty=Tensor[(7, 14, 3), int8] */;
  %801 = shape_of(%794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(%794, dtype="int8") /* ty=Tensor[(7, 14, 3), int8] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %804 = cast(%var_1595, dtype="float32") /* ty=Tensor[(360), float32] */;
  %805 = cast(meta[relay.Constant][69] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %806 = reshape(%804, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
  %807 = reshape(%805, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %808 = @func_1378(%806, %807) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(6, 10, 6), float32], Tensor[(6, 60), float32], Tensor[(720), float64], Tensor[(720), float64]) */;
  %809 = cast(%var_1599, dtype="int64") /* ty=Tensor[(210), int64] */;
  %810 = cast(%var_1599, dtype="int64") /* ty=Tensor[(210), int64] */;
  %811 = cast(%var_1600, dtype="float64") /* ty=Tensor[(308), float64] */;
  %812 = cast(%var_1601, dtype="uint16") /* ty=uint16 */;
  %813 = cast(meta[relay.Constant][70] /* ty=Tensor[(11, 2), uint16] */, dtype="uint16") /* ty=Tensor[(11, 2), uint16] */;
  %814 = reshape(%809, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), int64] */;
  %815 = reshape(%810, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), int64] */;
  %816 = reshape(%811, newshape=[308]) /* ty=Tensor[(308), float64] */;
  %817 = reshape(%812, newshape=[]) /* ty=uint16 */;
  %818 = reshape(%813, newshape=[22]) /* ty=Tensor[(22), uint16] */;
  %819 = @func_317(%814, %815, %816, %817, %818) /* ty=(Tensor[(6, 7, 5), bool], Tensor[(7, 4, 11), float64], Tensor[(308), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) */;
  %820 = cast(meta[relay.Constant][71] /* ty=Tensor[(1, 3584), float32] */, dtype="float32") /* ty=Tensor[(1, 3584), float32] */;
  %821 = cast(meta[relay.Constant][69] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %822 = reshape(%820, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %823 = reshape(%821, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
  %824 = @func_721(%822, %823) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(2, 360), float32]) */;
  %825 = cast(%792, dtype="float32") /* ty=Tensor[(7, 14, 3), float32] */;
  %826 = acosh(%825) /* ty=Tensor[(7, 14, 3), float32] */;
  %827 = cast(%799, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
  %828 = shape_of(%826, dtype="int32") /* ty=Tensor[(3), int32] */;
  %829 = cast(%826, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
  %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %831 = less(%829, %830) /* ty=Tensor[(7, 14, 3), bool] */;
  %832 = cast(%826, dtype="int8") /* ty=Tensor[(7, 14, 3), int8] */;
  %833 = shape_of(%831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %834 = cast(%831, dtype="int8") /* ty=Tensor[(7, 14, 3), int8] */;
  %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %836 = cast(%var_1595, dtype="float32") /* ty=Tensor[(360), float32] */;
  %837 = reshape(%836, newshape=[6, 10, 6]) /* ty=Tensor[(6, 10, 6), float32] */;
  %838 = @func_648(%837) /* ty=(Tensor[(6, 10, 6), float32],) */;
  %839 = bitwise_xor(%802, %803) /* ty=Tensor[(7, 14, 3), int8] */;
  %840 = %808.4;
  %841 = %819.3;
  %842 = %824.1;
  %843 = bitwise_or(%834, %835) /* ty=Tensor[(7, 14, 3), int8] */;
  %844 = %838.0;
  (%839, %840, %var_1595, meta[relay.Constant][69] /* ty=Tensor[(720), float64] */, %841, %var_1599, %var_1600, %var_1601, meta[relay.Constant][70] /* ty=Tensor[(11, 2), uint16] */, %842, meta[relay.Constant][71] /* ty=Tensor[(1, 3584), float32] */, %843, %844)
}

def @func_2902() -> (Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(728), float32]) {
  %845 = @func_2074() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %846 = cast(meta[relay.Constant][72] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
  %847 = reshape(%846, newshape=[8, 7, 13]) /* ty=Tensor[(8, 7, 13), float32] */;
  %848 = @func_1093(%847) /* ty=(Tensor[(8, 7, 13), float32],) */;
  %849 = %845.0;
  %850 = %848.0;
  (%849, %850, meta[relay.Constant][72] /* ty=Tensor[(728), float32] */)
}

def @func_1490(%var_1410: Tensor[(1, 5, 16), float32], %var_1416: Tensor[(360), float32], %var_1473: Tensor[(12, 5, 16), float32], %var_1478: Tensor[(10, 5, 16), float32]) -> (Tensor[(6, 10, 6), float32], Tensor[(360), float32], Tensor[(16, 5, 16), int16], Tensor[(7, 14, 3), float32], Tensor[(12, 5, 16), uint64], Tensor[(10, 5, 16), bool], Tensor[(7, 14, 3), float64], Tensor[(720), float64], Tensor[(308), float64]) {
  %851 = cast(%var_1416, dtype="float32") /* ty=Tensor[(360), float32] */;
  %852 = reshape(%851, newshape=[6, 10, 6]) /* ty=Tensor[(6, 10, 6), float32] */;
  %853 = @func_648(%852) /* ty=(Tensor[(6, 10, 6), float32],) */;
  %854 = cast(%var_1410, dtype="float32") /* ty=Tensor[(1, 5, 16), float32] */;
  %855 = sqrt(%854) /* ty=Tensor[(1, 5, 16), float32] */;
  %856 = cast(%855, dtype="int16") /* ty=Tensor[(1, 5, 16), int16] */;
  %857 = cast(meta[relay.Constant][73] /* ty=Tensor[(16, 5, 16), float32] */, dtype="int16") /* ty=Tensor[(16, 5, 16), int16] */;
  %858 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
  %859 = cast(%855, dtype="float32") /* ty=Tensor[(1, 5, 16), float32] */;
  %860 = erf(%859) /* ty=Tensor[(1, 5, 16), float32] */;
  %861 = cast(%860, dtype="uint64") /* ty=Tensor[(1, 5, 16), uint64] */;
  %862 = cast(%var_1473, dtype="uint64") /* ty=Tensor[(12, 5, 16), uint64] */;
  %863 = cast(%860, dtype="bool") /* ty=Tensor[(1, 5, 16), bool] */;
  %864 = cast(%var_1478, dtype="bool") /* ty=Tensor[(10, 5, 16), bool] */;
  %865 = cast(meta[relay.Constant][74] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %866 = cast(meta[relay.Constant][75] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %867 = reshape(%865, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %868 = reshape(%866, newshape=[308]) /* ty=Tensor[(308), float64] */;
  %869 = @func_1078(%867, %868) /* ty=(Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(308), float32], Tensor[(308), float64], Tensor[(7, 14, 3), float64]) */;
  %870 = %853.0;
  %871 = left_shift(%856, %857) /* ty=Tensor[(16, 5, 16), int16] */;
  %872 = %858.0;
  %873 = bitwise_and(%861, %862) /* ty=Tensor[(12, 5, 16), uint64] */;
  %874 = less(%863, %864) /* ty=Tensor[(10, 5, 16), bool] */;
  %875 = %869.4;
  (%870, %var_1416, %871, %872, %873, %874, %875, meta[relay.Constant][74] /* ty=Tensor[(720), float64] */, meta[relay.Constant][75] /* ty=Tensor[(308), float64] */)
}

def @func_1378(%var_1362: Tensor[(6, 60), float32], %var_1371: Tensor[(720), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(6, 10, 6), float32], Tensor[(6, 60), float32], Tensor[(720), float64], Tensor[(720), float64]) {
  %876 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
  %877 = cast(%var_1362, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
  %878 = reshape(%877, newshape=[6, 10, 6]) /* ty=Tensor[(6, 10, 6), float32] */;
  %879 = @func_648(%878) /* ty=(Tensor[(6, 10, 6), float32],) */;
  %880 = cast(%var_1371, dtype="float64") /* ty=Tensor[(720), float64] */;
  %881 = %876.1;
  %882 = cast(%881, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %883 = reshape(%880, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %884 = reshape(%882, newshape=[308]) /* ty=Tensor[(308), float64] */;
  %885 = @func_1078(%883, %884) /* ty=(Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(308), float32], Tensor[(308), float64], Tensor[(7, 14, 3), float64]) */;
  %886 = %879.0;
  %887 = %885.1;
  (%881, %886, %var_1362, %887, %var_1371)
}

def @func_4238(%var_4228: Tensor[(7, 14, 3), float64]) -> Tensor[(7, 14, 3), bool] {
  %888 = @func_1713() /* ty=Tensor[(7, 14, 3), float64] */;
  %889 = cast(%var_4228, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
  %890 = shape_of(%888, dtype="int32") /* ty=Tensor[(3), int32] */;
  %891 = cast(%888, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
  %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%891, %892) /* ty=Tensor[(7, 14, 3), bool] */
}

def @func_2707() -> (Tensor[(308), uint32],) {
  %893 = @func_2543() /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
  %894 = %893.2;
  %895 = cast(meta[relay.Constant][76] /* ty=Tensor[(308), float64] */, dtype="uint32") /* ty=Tensor[(308), uint32] */;
  %896 = shape_of(%894, dtype="int32") /* ty=Tensor[(1), int32] */;
  %897 = cast(%894, dtype="uint32") /* ty=Tensor[(308), uint32] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %899 = maximum(%897, %898) /* ty=Tensor[(308), uint32] */;
  (%899,)
}

def @func_3490(%var_3456: Tensor[(13, 14, 6), float32], %var_3457: Tensor[(13, 14, 6), float32]) -> Tensor[(13, 14, 6), float32] {
  %900 = cast(%var_3457, dtype="float32") /* ty=Tensor[(13, 14, 6), float32] */;
  %901 = shape_of(%var_3456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %902 = cast(%var_3456, dtype="float32") /* ty=Tensor[(13, 14, 6), float32] */;
  %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %904 = floor_mod(%902, %903) /* ty=Tensor[(13, 14, 6), float32] */;
  %905 = cast(%var_3457, dtype="float32") /* ty=Tensor[(13, 14, 6), float32] */;
  %906 = shape_of(%904, dtype="int32") /* ty=Tensor[(3), int32] */;
  %907 = cast(%904, dtype="float32") /* ty=Tensor[(13, 14, 6), float32] */;
  %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  add(%907, %908) /* ty=Tensor[(13, 14, 6), float32] */
}

def @func_1892(%var_1873: Tensor[(22), uint16]) -> (Tensor[(7, 14, 3), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 4, 11), uint32], Tensor[(7, 4, 11), float32]) {
  %909 = cast(meta[relay.Constant][77] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %910 = cast(%var_1873, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %911 = reshape(%909, newshape=[]) /* ty=uint16 */;
  %912 = reshape(%910, newshape=[11, 2, 1]) /* ty=Tensor[(11, 2, 1), uint16] */;
  %913 = @func_162(%911, %912) /* ty=(Tensor[(11, 2, 1), uint16],) */;
  %914 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
  %915 = %914.1;
  %916 = cast(%915, dtype="float32") /* ty=Tensor[(7, 4, 11), float32] */;
  %917 = log2(%916) /* ty=Tensor[(7, 4, 11), float32] */;
  %918 = cast(%917, dtype="float32") /* ty=Tensor[(7, 4, 11), float32] */;
  %919 = log(%918) /* ty=Tensor[(7, 4, 11), float32] */;
  %920 = cast(%919, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %921 = acos(%920) /* ty=Tensor[(7, 4, 11), float64] */;
  %922 = cast(%917, dtype="uint32") /* ty=Tensor[(7, 4, 11), uint32] */;
  %923 = shape_of(%921, dtype="int32") /* ty=Tensor[(3), int32] */;
  %924 = cast(%921, dtype="uint32") /* ty=Tensor[(7, 4, 11), uint32] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %926 = cast(%917, dtype="float32") /* ty=Tensor[(7, 4, 11), float32] */;
  %927 = shape_of(%919, dtype="int32") /* ty=Tensor[(3), int32] */;
  %928 = cast(%919, dtype="float32") /* ty=Tensor[(7, 4, 11), float32] */;
  %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %930 = @func_1713() /* ty=Tensor[(7, 14, 3), float64] */;
  %931 = %913.0;
  %932 = logical_xor(%924, %925) /* ty=Tensor[(7, 4, 11), uint32] */;
  %933 = divide(%928, %929) /* ty=Tensor[(7, 4, 11), float32] */;
  (%930, %931, meta[relay.Constant][77] /* ty=uint16 */, %var_1873, %932, %933)
}

def @func_1764(%var_1728: Tensor[(2, 16, 13), int64], %var_1741: Tensor[(7), float32], %var_1742: Tensor[(70), float32]) -> (Tensor[(2, 16, 13), int64], Tensor[(6, 7, 5), bool], Tensor[(7), float32], Tensor[(70), float32], uint16, Tensor[(2, 16, 13), float32]) {
  %934 = cast(meta[relay.Constant][78] /* ty=Tensor[(2, 16, 13), int64] */, dtype="int64") /* ty=Tensor[(2, 16, 13), int64] */;
  %935 = shape_of(%var_1728, dtype="int32") /* ty=Tensor[(3), int32] */;
  %936 = cast(%var_1728, dtype="int64") /* ty=Tensor[(2, 16, 13), int64] */;
  %937 = dyn.reshape(%934, %935, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %938 = cast(%var_1741, dtype="float32") /* ty=Tensor[(7), float32] */;
  %939 = cast(%var_1742, dtype="float32") /* ty=Tensor[(70), float32] */;
  %940 = cast(meta[relay.Constant][79] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %941 = reshape(%938, newshape=[7, 1]) /* ty=Tensor[(7, 1), float32] */;
  %942 = reshape(%939, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %943 = reshape(%940, newshape=[]) /* ty=uint16 */;
  %944 = @func_1231(%941, %942, %943) /* ty=(Tensor[(7, 10), float32], Tensor[(6, 7, 5), bool], Tensor[(1, 210), int64], Tensor[(308), float64], uint16, Tensor[(22), uint16]) */;
  %945 = cast(%var_1728, dtype="float32") /* ty=Tensor[(2, 16, 13), float32] */;
  %946 = minimum(%936, %937) /* ty=Tensor[(2, 16, 13), int64] */;
  %947 = %944.1;
  %948 = sigmoid(%945) /* ty=Tensor[(2, 16, 13), float32] */;
  (%946, %947, %var_1741, %var_1742, meta[relay.Constant][79] /* ty=uint16 */, %948)
}

def @func_721(%var_670: Tensor[(14, 16, 16), float32], %var_701: Tensor[(2, 360), float64]) -> (Tensor[(14, 16, 16), float32], Tensor[(2, 360), float32]) {
  %949 = cast(%var_670, dtype="float32") /* ty=Tensor[(14, 16, 16), float32] */;
  %950 = shape_of(meta[relay.Constant][80] /* ty=Tensor[(14, 16, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %951 = cast(meta[relay.Constant][80] /* ty=Tensor[(14, 16, 16), float32] */, dtype="float32") /* ty=Tensor[(14, 16, 16), float32] */;
  %952 = dyn.reshape(%949, %950, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %953 = cast(%var_701, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
  %954 = reshape(%953, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), float64] */;
  %955 = @func_558(%954) /* ty=Tensor[(12, 10, 6), float64] */;
  %956 = cast(%955, dtype="float32") /* ty=Tensor[(12, 10, 6), float32] */;
  %957 = shape_of(%var_701, dtype="int32") /* ty=Tensor[(2), int32] */;
  %958 = cast(%var_701, dtype="float32") /* ty=Tensor[(2, 360), float32] */;
  %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %960 = maximum(%951, %952) /* ty=Tensor[(14, 16, 16), float32] */;
  %961 = floor_mod(%958, %959) /* ty=Tensor[(2, 360), float32] */;
  (%960, %961)
}

def @func_2189(%var_2161: Tensor[(15, 10, 11), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(360), float32], Tensor[(35, 6), int64]) {
  %962 = cast(%var_2161, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %963 = cast(%var_2161, dtype="float64") /* ty=Tensor[(15, 10, 11), float64] */;
  %964 = cast(meta[relay.Constant][81] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %965 = cast(meta[relay.Constant][82] /* ty=Tensor[(35, 6), int64] */, dtype="int64") /* ty=Tensor[(35, 6), int64] */;
  %966 = reshape(%964, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %967 = reshape(%965, newshape=[210]) /* ty=Tensor[(210), int64] */;
  %968 = @func_1981(%966, %967) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(720), float64], Tensor[(1, 294), float64], Tensor[(360), float32], Tensor[(210), int64], Tensor[(728), int16]) */;
  %969 = exp(%962) /* ty=Tensor[(15, 10, 11), float32] */;
  %970 = erf(%963) /* ty=Tensor[(15, 10, 11), float64] */;
  %971 = %968.1;
  (%969, %970, %971, meta[relay.Constant][81] /* ty=Tensor[(360), float32] */, meta[relay.Constant][82] /* ty=Tensor[(35, 6), int64] */)
}

def @func_2291(%var_2276: Tensor[(7, 4, 11), float64]) -> (Tensor[(7, 4, 11), uint64],) {
  %972 = @func_2074() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %973 = %972.0;
  %974 = cast(%var_2276, dtype="uint64") /* ty=Tensor[(7, 4, 11), uint64] */;
  %975 = shape_of(%973, dtype="int32") /* ty=Tensor[(3), int32] */;
  %976 = cast(%973, dtype="uint64") /* ty=Tensor[(7, 4, 11), uint64] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %978 = bitwise_xor(%976, %977) /* ty=Tensor[(7, 4, 11), uint64] */;
  (%978,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2545() -> (Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) {
  @func_2543() /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */
}

def @func_3455() -> Tensor[(7, 4, 11), float64] {
  %1 = fn () -> Tensor[(7, 4, 11), float64] {
    %0 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %0.0
  };
  %1() /* ty=Tensor[(7, 4, 11), float64] */
}

def @func_6106() -> (Tensor[(7, 14, 3), float64],) {
  @func_6104() /* ty=(Tensor[(7, 14, 3), float64],) */
}

def @func_1713() -> Tensor[(7, 14, 3), float64] {
  %2 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %2.0
}

def @func_2680(%var_2675: Tensor[(2, 8, 2), int8], %var_2676: Tensor[(2, 8, 2), int8], %var_2677: uint16, %var_2678: Tensor[(416), int64], %var_2679: Tensor[(7), float32]) -> (Tensor[(2, 8, 2), int8], Tensor[(720), float64], uint16, Tensor[(416), int64], Tensor[(7), float32], Tensor[(7, 4, 11), float64]) {
  %18 = fn (%var_2653: Tensor[(2, 8, 2), int8], %var_2654: Tensor[(2, 8, 2), int8], %var_2667: uint16, %var_2668: Tensor[(416), int64], %var_2669: Tensor[(7), float32]) -> (Tensor[(2, 8, 2), int8], Tensor[(720), float64], uint16, Tensor[(416), int64], Tensor[(7), float32], Tensor[(7, 4, 11), float64]) {
    %3 = cast(%var_2654, dtype="int8") /* ty=Tensor[(2, 8, 2), int8] */;
    %4 = shape_of(%var_2653, dtype="int32") /* ty=Tensor[(3), int32] */;
    %5 = cast(%var_2653, dtype="int8") /* ty=Tensor[(2, 8, 2), int8] */;
    %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %7 = cast(%var_2667, dtype="uint16") /* ty=uint16 */;
    %8 = cast(%var_2668, dtype="int64") /* ty=Tensor[(416), int64] */;
    %9 = cast(%var_2669, dtype="float32") /* ty=Tensor[(7), float32] */;
    %10 = reshape(%7, newshape=[]) /* ty=uint16 */;
    %11 = reshape(%8, newshape=[8, 52]) /* ty=Tensor[(8, 52), int64] */;
    %12 = reshape(%9, newshape=[7, 1]) /* ty=Tensor[(7, 1), float32] */;
    %13 = @func_2522(%10, %11, %12) /* ty=(Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 4, 11), float32], Tensor[(7, 4, 11), float64], Tensor[(720), float64], Tensor[(2, 16, 13), int64], Tensor[(8, 52), int64], Tensor[(7, 1), float32], Tensor[(70), float32]) */;
    %14 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
    %15 = multiply(%5, %6) /* ty=Tensor[(2, 8, 2), int8] */;
    %16 = %13.5;
    %17 = %14.1;
    (%15, %16, %var_2667, %var_2668, %var_2669, %17)
  };
  %18(%var_2675, %var_2676, %var_2677, %var_2678, %var_2679) /* ty=(Tensor[(2, 8, 2), int8], Tensor[(720), float64], uint16, Tensor[(416), int64], Tensor[(7), float32], Tensor[(7, 4, 11), float64]) */
}

def @func_2133(%var_2132: Tensor[(720), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(7, 4, 11), int64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64], Tensor[(7, 4, 11), float64]) {
  %36 = fn (%var_2096: Tensor[(720), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(7, 4, 11), int64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64], Tensor[(7, 4, 11), float64]) {
    %19 = @func_1804() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
    %20 = @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %21 = %20.0;
    %22 = cast(meta[relay.Constant][0] /* ty=Tensor[(7, 4, 11), float64] */, dtype="int64") /* ty=Tensor[(7, 4, 11), int64] */;
    %23 = shape_of(%21, dtype="int32") /* ty=Tensor[(3), int32] */;
    %24 = cast(%21, dtype="int64") /* ty=Tensor[(7, 4, 11), int64] */;
    %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %26 = cast(meta[relay.Constant][1] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %27 = cast(%var_2096, dtype="float64") /* ty=Tensor[(720), float64] */;
    %28 = reshape(%26, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
    %29 = reshape(%27, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %30 = @func_1378(%28, %29) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(6, 10, 6), float32], Tensor[(6, 60), float32], Tensor[(720), float64], Tensor[(720), float64]) */;
    %31 = @func_2074() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %32 = %19.1;
    %33 = bitwise_and(%24, %25) /* ty=Tensor[(7, 4, 11), int64] */;
    %34 = %30.0;
    %35 = %31.0;
    (%32, %33, %34, meta[relay.Constant][1] /* ty=Tensor[(360), float32] */, %var_2096, %35)
  };
  %36(%var_2132) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(7, 4, 11), int64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64], Tensor[(7, 4, 11), float64]) */
}

def @func_2481(%var_2451: Tensor[(7, 1), float32]) -> (Tensor[(720), float64], Tensor[(1, 360), float32], Tensor[(7), float32], Tensor[(16, 26), int64], Tensor[(7, 1), float32], Tensor[(70, 1), float32], Tensor[(7, 14, 3), float32]) {
  %37 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 360), float32] */, dtype="float32") /* ty=Tensor[(1, 360), float32] */;
  %38 = reshape(%37, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %39 = @func_2248(%38) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64]) */;
  %40 = cast(meta[relay.Constant][3] /* ty=Tensor[(16, 26), int64] */, dtype="int64") /* ty=Tensor[(16, 26), int64] */;
  %41 = cast(%var_2451, dtype="float32") /* ty=Tensor[(7, 1), float32] */;
  %42 = cast(meta[relay.Constant][4] /* ty=Tensor[(70, 1), float32] */, dtype="float32") /* ty=Tensor[(70, 1), float32] */;
  %43 = reshape(%40, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), int64] */;
  %44 = reshape(%41, newshape=[7]) /* ty=Tensor[(7), float32] */;
  %45 = reshape(%42, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %46 = @func_1764(%43, %44, %45) /* ty=(Tensor[(2, 16, 13), int64], Tensor[(6, 7, 5), bool], Tensor[(7), float32], Tensor[(70), float32], uint16, Tensor[(2, 16, 13), float32]) */;
  %47 = @func_1958() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %48 = %47.0;
  %49 = cast(%48, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %50 = atan(%49) /* ty=Tensor[(7, 14, 3), float64] */;
  %51 = cast(%50, dtype="float32") /* ty=Tensor[(7, 14, 3), float32] */;
  %52 = %39.3;
  %53 = %46.2;
  %54 = sigmoid(%51) /* ty=Tensor[(7, 14, 3), float32] */;
  (%52, meta[relay.Constant][2] /* ty=Tensor[(1, 360), float32] */, %53, meta[relay.Constant][3] /* ty=Tensor[(16, 26), int64] */, %var_2451, meta[relay.Constant][4] /* ty=Tensor[(70, 1), float32] */, %54)
}

def @func_5541() -> (Tensor[(308), float64],) {
  @func_5539() /* ty=(Tensor[(308), float64],) */
}

def @func_5860(%var_5804: Tensor[(12, 60), float64], %var_5829: Tensor[(308), float64], %var_5854: Tensor[(30, 2), float64]) -> (Tensor[(7, 14, 3), float32], Tensor[(6, 60), bool], Tensor[(7, 4, 11), uint64], Tensor[(308), float64], Tensor[(12, 60), int64], Tensor[(2, 10, 3), float64], Tensor[(30, 2), float64], Tensor[(8, 7, 13), float32]) {
  %55 = @func_2815() /* ty=(Tensor[(720), float64], Tensor[(7, 14, 3), float32]) */;
  %56 = cast(meta[relay.Constant][6] /* ty=Tensor[(6, 60), float32] */, dtype="bool") /* ty=Tensor[(6, 60), bool] */;
  %57 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(6, 60), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %58 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 60), float32] */, dtype="bool") /* ty=Tensor[(6, 60), bool] */;
  %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %60 = cast(%var_5829, dtype="float64") /* ty=Tensor[(308), float64] */;
  %61 = reshape(%60, newshape=[7, 4, 11]) /* ty=Tensor[(7, 4, 11), float64] */;
  %62 = @func_2291(%61) /* ty=(Tensor[(7, 4, 11), uint64],) */;
  %63 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 60), float32] */, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
  %64 = cast(%var_5804, dtype="float64") /* ty=Tensor[(12, 60), float64] */;
  %65 = reshape(%63, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
  %66 = reshape(%64, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %67 = @func_1378(%65, %66) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(6, 10, 6), float32], Tensor[(6, 60), float32], Tensor[(720), float64], Tensor[(720), float64]) */;
  %68 = %67.4;
  %69 = cast(%68, dtype="int64") /* ty=Tensor[(720), int64] */;
  %70 = shape_of(%var_5804, dtype="int32") /* ty=Tensor[(2), int32] */;
  %71 = cast(%var_5804, dtype="int64") /* ty=Tensor[(12, 60), int64] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %73 = cast(%var_5854, dtype="float64") /* ty=Tensor[(30, 2), float64] */;
  %74 = reshape(%73, newshape=[2, 10, 3]) /* ty=Tensor[(2, 10, 3), float64] */;
  %75 = @func_5299(%74) /* ty=(Tensor[(2, 10, 3), float64],) */;
  %76 = @func_4576() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(550, 3), float64], Tensor[(308), uint32], Tensor[(360), float32]) */;
  %77 = %76.1;
  %78 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 7, 13), float32] */, dtype="int32") /* ty=Tensor[(8, 7, 13), int32] */;
  %79 = shape_of(%77, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%77, dtype="int32") /* ty=Tensor[(8, 7, 13), int32] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %82 = bitwise_and(%80, %81) /* ty=Tensor[(8, 7, 13), int32] */;
  %83 = cast(%82, dtype="float32") /* ty=Tensor[(8, 7, 13), float32] */;
  %84 = %55.1;
  %85 = less(%58, %59) /* ty=Tensor[(6, 60), bool] */;
  %86 = %62.0;
  %87 = left_shift(%71, %72) /* ty=Tensor[(12, 60), int64] */;
  %88 = %75.0;
  %89 = sinh(%83) /* ty=Tensor[(8, 7, 13), float32] */;
  (%84, %85, %86, %var_5829, %87, %88, %var_5854, %89)
}

def @func_1924(%var_1903: Tensor[(308), float64], %var_1914: Tensor[(416), int64]) -> (Tensor[(308), uint16], Tensor[(7), float32], Tensor[(416), int64], Tensor[(7), float32], Tensor[(70, 1), float32], Tensor[(16, 12, 16), float32], Tensor[(3072), float32]) {
  %90 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
  %91 = %90.2;
  %92 = cast(%var_1903, dtype="uint16") /* ty=Tensor[(308), uint16] */;
  %93 = shape_of(%91, dtype="int32") /* ty=Tensor[(1), int32] */;
  %94 = cast(%91, dtype="uint16") /* ty=Tensor[(308), uint16] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %96 = cast(%var_1914, dtype="int64") /* ty=Tensor[(416), int64] */;
  %97 = cast(meta[relay.Constant][8] /* ty=Tensor[(7), float32] */, dtype="float32") /* ty=Tensor[(7), float32] */;
  %98 = cast(meta[relay.Constant][9] /* ty=Tensor[(70, 1), float32] */, dtype="float32") /* ty=Tensor[(70, 1), float32] */;
  %99 = reshape(%96, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), int64] */;
  %100 = reshape(%97, newshape=[7]) /* ty=Tensor[(7), float32] */;
  %101 = reshape(%98, newshape=[70]) /* ty=Tensor[(70), float32] */;
  %102 = @func_1764(%99, %100, %101) /* ty=(Tensor[(2, 16, 13), int64], Tensor[(6, 7, 5), bool], Tensor[(7), float32], Tensor[(70), float32], uint16, Tensor[(2, 16, 13), float32]) */;
  %103 = cast(meta[relay.Constant][10] /* ty=Tensor[(3072), float32] */, dtype="float32") /* ty=Tensor[(3072), float32] */;
  %104 = reshape(%103, newshape=[16, 12, 16]) /* ty=Tensor[(16, 12, 16), float32] */;
  %105 = @func_25(%104) /* ty=(Tensor[(16, 12, 16), float32],) */;
  %106 = left_shift(%94, %95) /* ty=Tensor[(308), uint16] */;
  %107 = %102.2;
  %108 = %105.0;
  (%106, %107, %var_1914, meta[relay.Constant][8] /* ty=Tensor[(7), float32] */, meta[relay.Constant][9] /* ty=Tensor[(70, 1), float32] */, %108, meta[relay.Constant][10] /* ty=Tensor[(3072), float32] */)
}

def @func_1984(%var_1982: Tensor[(360), float32], %var_1983: Tensor[(210), int64]) -> (Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(720), float64], Tensor[(1, 294), float64], Tensor[(360), float32], Tensor[(210), int64], Tensor[(728), int16]) {
  %130 = fn (%var_1970: Tensor[(360), float32], %var_1971: Tensor[(210), int64]) -> (Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(720), float64], Tensor[(1, 294), float64], Tensor[(360), float32], Tensor[(210), int64], Tensor[(728), int16]) {
    %109 = @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %110 = cast(meta[relay.Constant][11] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
    %111 = reshape(%110, newshape=[8, 7, 13]) /* ty=Tensor[(8, 7, 13), float32] */;
    %112 = @func_1093(%111) /* ty=(Tensor[(8, 7, 13), float32],) */;
    %113 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 294), float64] */, dtype="float64") /* ty=Tensor[(1, 294), float64] */;
    %114 = cast(%var_1970, dtype="float32") /* ty=Tensor[(360), float32] */;
    %115 = cast(%var_1971, dtype="int64") /* ty=Tensor[(210), int64] */;
    %116 = %109.0;
    %117 = cast(%116, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
    %118 = cast(meta[relay.Constant][13] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %119 = reshape(%113, newshape=[7, 14, 3]) /* ty=Tensor[(7, 14, 3), float64] */;
    %120 = reshape(%114, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %121 = reshape(%115, newshape=[210]) /* ty=Tensor[(210), int64] */;
    %122 = reshape(%117, newshape=[308]) /* ty=Tensor[(308), float64] */;
    %123 = reshape(%118, newshape=[]) /* ty=uint16 */;
    %124 = @func_1661(%119, %120, %121, %122, %123) /* ty=(Tensor[(7, 14, 3), int8], Tensor[(720), float64], Tensor[(360), float32], Tensor[(720), float64], Tensor[(11, 2, 1), uint16], Tensor[(210), int64], Tensor[(308), float64], uint16, Tensor[(11, 2), uint16], Tensor[(2, 360), float32], Tensor[(1, 3584), float32], Tensor[(7, 14, 3), int8], Tensor[(6, 10, 6), float32]) */;
    %125 = cast(meta[relay.Constant][11] /* ty=Tensor[(728), float32] */, dtype="int16") /* ty=Tensor[(728), int16] */;
    %126 = cast(meta[relay.Constant][13] /* ty=uint16 */, dtype="int16") /* ty=int16 */;
    %127 = %112.0;
    %128 = %124.3;
    %129 = minimum(%125, %126) /* ty=Tensor[(728), int16] */;
    (%116, %127, %128, meta[relay.Constant][12] /* ty=Tensor[(1, 294), float64] */, %var_1970, %var_1971, %129)
  };
  %130(%var_1982, %var_1983) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(720), float64], Tensor[(1, 294), float64], Tensor[(360), float32], Tensor[(210), int64], Tensor[(728), int16]) */
}

def @func_5150() -> (Tensor[(308), float64],) {
  %131 = @func_5068() /* ty=(Tensor[(7, 14, 3), float64], Tensor[(308), float64]) */;
  %132 = %131.1;
  (%132,)
}

def @main(%var_6675: Tensor[(12, 4, 10), float32]) -> (Tensor[(12, 4, 10), float32],) {
  %133 = cast(%var_6675, dtype="float32") /* ty=Tensor[(12, 4, 10), float32] */;
  %134 = exp(%133) /* ty=Tensor[(12, 4, 10), float32] */;
  (%134,)
}

def @func_5325(%var_5324: Tensor[(11, 15, 11), float32]) -> (Tensor[(11, 15, 11), float32], Tensor[(308), float64]) {
  %139 = fn (%var_5309: Tensor[(11, 15, 11), float32]) -> (Tensor[(11, 15, 11), float32], Tensor[(308), float64]) {
    %135 = cast(%var_5309, dtype="float32") /* ty=Tensor[(11, 15, 11), float32] */;
    %136 = @func_5150() /* ty=(Tensor[(308), float64],) */;
    %137 = asinh(%135) /* ty=Tensor[(11, 15, 11), float32] */;
    %138 = %136.0;
    (%137, %138)
  };
  %139(%var_5324) /* ty=(Tensor[(11, 15, 11), float32], Tensor[(308), float64]) */
}

def @func_1151(%var_1129: Tensor[(3584), float32], %var_1130: Tensor[(720), float64]) -> (Tensor[(7, 14, 3), float64], Tensor[(2, 360), float32], Tensor[(720), float64], Tensor[(3584), uint16]) {
  %140 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %141 = cast(%var_1129, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %142 = cast(%var_1130, dtype="float64") /* ty=Tensor[(720), float64] */;
  %143 = reshape(%141, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %144 = reshape(%142, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
  %145 = @func_721(%143, %144) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(2, 360), float32]) */;
  %146 = cast(%var_1129, dtype="float64") /* ty=Tensor[(3584), float64] */;
  %147 = asin(%146) /* ty=Tensor[(3584), float64] */;
  %148 = cast(%var_1129, dtype="uint16") /* ty=Tensor[(3584), uint16] */;
  %149 = shape_of(%147, dtype="int32") /* ty=Tensor[(1), int32] */;
  %150 = cast(%147, dtype="uint16") /* ty=Tensor[(3584), uint16] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %152 = %140.0;
  %153 = %145.1;
  %154 = subtract(%150, %151) /* ty=Tensor[(3584), uint16] */;
  (%152, %153, %var_1130, %154)
}

def @func_3490(%var_3456: Tensor[(13, 14, 6), float32], %var_3457: Tensor[(13, 14, 6), float32]) -> Tensor[(13, 14, 6), float32] {
  %155 = cast(%var_3457, dtype="float32") /* ty=Tensor[(13, 14, 6), float32] */;
  %156 = shape_of(%var_3456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %157 = cast(%var_3456, dtype="float32") /* ty=Tensor[(13, 14, 6), float32] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %159 = floor_mod(%157, %158) /* ty=Tensor[(13, 14, 6), float32] */;
  %160 = cast(%var_3457, dtype="float32") /* ty=Tensor[(13, 14, 6), float32] */;
  %161 = shape_of(%159, dtype="int32") /* ty=Tensor[(3), int32] */;
  %162 = cast(%159, dtype="float32") /* ty=Tensor[(13, 14, 6), float32] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  add(%162, %163) /* ty=Tensor[(13, 14, 6), float32] */
}

def @func_28(%var_26: Tensor[(16, 12, 16), float32]) -> (Tensor[(16, 12, 16), float32],) {
  @func_25(%var_26) /* ty=(Tensor[(16, 12, 16), float32],) */
}

def @func_5379() -> Tensor[(728), bool] {
  %164 = fn () -> Tensor[(728), bool] {
    @func_5356() /* ty=Tensor[(728), bool] */
  };
  %164() /* ty=Tensor[(728), bool] */
}

def @func_721(%var_670: Tensor[(14, 16, 16), float32], %var_701: Tensor[(2, 360), float64]) -> (Tensor[(14, 16, 16), float32], Tensor[(2, 360), float32]) {
  %165 = cast(%var_670, dtype="float32") /* ty=Tensor[(14, 16, 16), float32] */;
  %166 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(14, 16, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 16, 16), float32] */, dtype="float32") /* ty=Tensor[(14, 16, 16), float32] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %169 = cast(%var_701, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
  %170 = reshape(%169, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), float64] */;
  %171 = @func_558(%170) /* ty=Tensor[(12, 10, 6), float64] */;
  %172 = cast(%171, dtype="float32") /* ty=Tensor[(12, 10, 6), float32] */;
  %173 = shape_of(%var_701, dtype="int32") /* ty=Tensor[(2), int32] */;
  %174 = cast(%var_701, dtype="float32") /* ty=Tensor[(2, 360), float32] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %176 = maximum(%167, %168) /* ty=Tensor[(14, 16, 16), float32] */;
  %177 = floor_mod(%174, %175) /* ty=Tensor[(2, 360), float32] */;
  (%176, %177)
}

def @func_2815() -> (Tensor[(720), float64], Tensor[(7, 14, 3), float32]) {
  %178 = @func_1804() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
  %179 = @func_1713() /* ty=Tensor[(7, 14, 3), float64] */;
  %180 = cast(%179, dtype="float32") /* ty=Tensor[(7, 14, 3), float32] */;
  %181 = %178.3;
  %182 = log2(%180) /* ty=Tensor[(7, 14, 3), float32] */;
  (%181, %182)
}

def @func_165(%var_163: uint16, %var_164: Tensor[(11, 2, 1), uint16]) -> (Tensor[(11, 2, 1), uint16],) {
  %186 = fn (%var_156: uint16, %var_157: Tensor[(11, 2, 1), uint16]) -> (Tensor[(11, 2, 1), uint16],) {
    %183 = cast(%var_156, dtype="uint16") /* ty=uint16 */;
    %184 = cast(%var_157, dtype="uint16") /* ty=Tensor[(11, 2, 1), uint16] */;
    %185 = maximum(%183, %184) /* ty=Tensor[(11, 2, 1), uint16] */;
    (%185,)
  };
  %186(%var_163, %var_164) /* ty=(Tensor[(11, 2, 1), uint16],) */
}

def @func_4345(%var_4344: Tensor[(22), uint16]) -> (Tensor[(7, 4, 11), float64], uint16, Tensor[(22), float32], Tensor[(1, 210), float64], Tensor[(728), bool]) {
  %208 = fn (%var_4309: Tensor[(22), uint16]) -> (Tensor[(7, 4, 11), float64], uint16, Tensor[(22), float32], Tensor[(1, 210), float64], Tensor[(728), bool]) {
    %187 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %188 = cast(%var_4309, dtype="float32") /* ty=Tensor[(22), float32] */;
    %189 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 210), int64] */, dtype="int64") /* ty=Tensor[(1, 210), int64] */;
    %190 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 210), int64] */, dtype="int64") /* ty=Tensor[(1, 210), int64] */;
    %191 = %187.0;
    %192 = cast(%191, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
    %193 = cast(meta[relay.Constant][15] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %194 = cast(%var_4309, dtype="uint16") /* ty=Tensor[(22), uint16] */;
    %195 = reshape(%189, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), int64] */;
    %196 = reshape(%190, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), int64] */;
    %197 = reshape(%192, newshape=[308]) /* ty=Tensor[(308), float64] */;
    %198 = reshape(%193, newshape=[]) /* ty=uint16 */;
    %199 = reshape(%194, newshape=[22]) /* ty=Tensor[(22), uint16] */;
    %200 = @func_317(%195, %196, %197, %198, %199) /* ty=(Tensor[(6, 7, 5), bool], Tensor[(7, 4, 11), float64], Tensor[(308), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) */;
    %201 = %200.4;
    %202 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 210), int64] */, dtype="float64") /* ty=Tensor[(1, 210), float64] */;
    %203 = cast(%201, dtype="float64") /* ty=float64 */;
    %204 = @func_3589() /* ty=(Tensor[(728), bool],) */;
    %205 = acosh(%188) /* ty=Tensor[(22), float32] */;
    %206 = minimum(%202, %203) /* ty=Tensor[(1, 210), float64] */;
    %207 = %204.0;
    (%191, meta[relay.Constant][15] /* ty=uint16 */, %205, %206, %207)
  };
  %208(%var_4344) /* ty=(Tensor[(7, 4, 11), float64], uint16, Tensor[(22), float32], Tensor[(1, 210), float64], Tensor[(728), bool]) */
}

def @func_5493(%var_5490: uint16, %var_5491: Tensor[(7), float32], %var_5492: Tensor[(70), float32]) -> (Tensor[(7, 14, 3), float32], uint16, Tensor[(22), uint16], Tensor[(7, 14, 3), float64], Tensor[(7, 14, 3), bool], uint16, Tensor[(416), int64], Tensor[(7), float32], Tensor[(70), float32]) {
  %233 = fn (%var_5423: uint16, %var_5439: Tensor[(7), float32], %var_5440: Tensor[(70), float32]) -> (Tensor[(7, 14, 3), float32], uint16, Tensor[(22), uint16], Tensor[(7, 14, 3), float64], Tensor[(7, 14, 3), bool], uint16, Tensor[(416), int64], Tensor[(7), float32], Tensor[(70), float32]) {
    %209 = @func_2592() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
    %210 = @func_5198() /* ty=(Tensor[(7, 14, 3), float64],) */;
    %211 = @func_4772() /* ty=Tensor[(7, 14, 3), float64] */;
    %212 = cast(%211, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
    %213 = atanh(%212) /* ty=Tensor[(7, 14, 3), float64] */;
    %214 = cast(%var_5423, dtype="uint16") /* ty=uint16 */;
    %215 = cast(meta[relay.Constant][17] /* ty=Tensor[(22), uint16] */, dtype="uint16") /* ty=Tensor[(22), uint16] */;
    %216 = reshape(%214, newshape=[]) /* ty=uint16 */;
    %217 = reshape(%215, newshape=[22]) /* ty=Tensor[(22), uint16] */;
    %218 = @func_4844(%216, %217) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 14, 3), float32]) */;
    %219 = %218.2;
    %220 = cast(%213, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
    %221 = cast(%219, dtype="bool") /* ty=bool */;
    %222 = cast(meta[relay.Constant][18] /* ty=Tensor[(416), int64] */, dtype="int64") /* ty=Tensor[(416), int64] */;
    %223 = cast(%var_5439, dtype="float32") /* ty=Tensor[(7), float32] */;
    %224 = cast(%var_5440, dtype="float32") /* ty=Tensor[(70), float32] */;
    %225 = reshape(%222, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), int64] */;
    %226 = reshape(%223, newshape=[7]) /* ty=Tensor[(7), float32] */;
    %227 = reshape(%224, newshape=[70]) /* ty=Tensor[(70), float32] */;
    %228 = @func_1764(%225, %226, %227) /* ty=(Tensor[(2, 16, 13), int64], Tensor[(6, 7, 5), bool], Tensor[(7), float32], Tensor[(70), float32], uint16, Tensor[(2, 16, 13), float32]) */;
    %229 = %209.0;
    %230 = %210.0;
    %231 = logical_and(%220, %221) /* ty=Tensor[(7, 14, 3), bool] */;
    %232 = %228.4;
    (%229, %var_5423, meta[relay.Constant][17] /* ty=Tensor[(22), uint16] */, %230, %231, %232, meta[relay.Constant][18] /* ty=Tensor[(416), int64] */, %var_5439, %var_5440)
  };
  %233(%var_5490, %var_5491, %var_5492) /* ty=(Tensor[(7, 14, 3), float32], uint16, Tensor[(22), uint16], Tensor[(7, 14, 3), float64], Tensor[(7, 14, 3), bool], uint16, Tensor[(416), int64], Tensor[(7), float32], Tensor[(70), float32]) */
}

def @func_1668(%var_1663: Tensor[(7, 14, 3), float64], %var_1664: Tensor[(360), float32], %var_1665: Tensor[(210), int64], %var_1666: Tensor[(308), float64], %var_1667: uint16) -> (Tensor[(7, 14, 3), int8], Tensor[(720), float64], Tensor[(360), float32], Tensor[(720), float64], Tensor[(11, 2, 1), uint16], Tensor[(210), int64], Tensor[(308), float64], uint16, Tensor[(11, 2), uint16], Tensor[(2, 360), float32], Tensor[(1, 3584), float32], Tensor[(7, 14, 3), int8], Tensor[(6, 10, 6), float32]) {
  @func_1661(%var_1663, %var_1664, %var_1665, %var_1666, %var_1667) /* ty=(Tensor[(7, 14, 3), int8], Tensor[(720), float64], Tensor[(360), float32], Tensor[(720), float64], Tensor[(11, 2, 1), uint16], Tensor[(210), int64], Tensor[(308), float64], uint16, Tensor[(11, 2), uint16], Tensor[(2, 360), float32], Tensor[(1, 3584), float32], Tensor[(7, 14, 3), int8], Tensor[(6, 10, 6), float32]) */
}

def @func_3589() -> (Tensor[(728), bool],) {
  %234 = @func_2902() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(728), float32]) */;
  %235 = %234.2;
  %236 = cast(%235, dtype="float64") /* ty=Tensor[(728), float64] */;
  %237 = asin(%236) /* ty=Tensor[(728), float64] */;
  %238 = cast(%235, dtype="bool") /* ty=Tensor[(728), bool] */;
  %239 = shape_of(%237, dtype="int32") /* ty=Tensor[(1), int32] */;
  %240 = cast(%237, dtype="bool") /* ty=Tensor[(728), bool] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?), bool] */;
  %242 = logical_or(%240, %241) /* ty=Tensor[(728), bool] */;
  (%242,)
}

def @func_3174(%var_3172: Tensor[(3, 14, 14), int8], %var_3173: Tensor[(3, 14, 14), int8]) -> Tensor[(3, 14, 14), float64] {
  %252 = fn (%var_3159: Tensor[(3, 14, 14), int8], %var_3160: Tensor[(3, 14, 14), int8]) -> Tensor[(3, 14, 14), float64] {
    %243 = cast(%var_3160, dtype="bool") /* ty=Tensor[(3, 14, 14), bool] */;
    %244 = shape_of(%var_3159, dtype="int32") /* ty=Tensor[(3), int32] */;
    %245 = cast(%var_3159, dtype="bool") /* ty=Tensor[(3, 14, 14), bool] */;
    %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %247 = greater(%245, %246) /* ty=Tensor[(3, 14, 14), bool] */;
    %248 = cast(%var_3160, dtype="float64") /* ty=Tensor[(3, 14, 14), float64] */;
    %249 = shape_of(%247, dtype="int32") /* ty=Tensor[(3), int32] */;
    %250 = cast(%247, dtype="float64") /* ty=Tensor[(3, 14, 14), float64] */;
    %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%250, %251) /* ty=Tensor[(3, 14, 14), float64] */
  };
  %252(%var_3172, %var_3173) /* ty=Tensor[(3, 14, 14), float64] */
}

def @func_5708() -> (Tensor[(8, 448), float32], Tensor[(308), float64], Tensor[(308), float64], Tensor[(1815), float32]) {
  @func_5706() /* ty=(Tensor[(8, 448), float32], Tensor[(308), float64], Tensor[(308), float64], Tensor[(1815), float32]) */
}

def @func_1928(%var_1926: Tensor[(308), float64], %var_1927: Tensor[(416), int64]) -> (Tensor[(308), uint16], Tensor[(7), float32], Tensor[(416), int64], Tensor[(7), float32], Tensor[(70, 1), float32], Tensor[(16, 12, 16), float32], Tensor[(3072), float32]) {
  @func_1924(%var_1926, %var_1927) /* ty=(Tensor[(308), uint16], Tensor[(7), float32], Tensor[(416), int64], Tensor[(7), float32], Tensor[(70, 1), float32], Tensor[(16, 12, 16), float32], Tensor[(3072), float32]) */
}

def @func_1231(%var_1157: Tensor[(7, 1), float32], %var_1158: Tensor[(7, 10), float32], %var_1220: uint16) -> (Tensor[(7, 10), float32], Tensor[(6, 7, 5), bool], Tensor[(1, 210), int64], Tensor[(308), float64], uint16, Tensor[(22), uint16]) {
  %253 = cast(%var_1157, dtype="float32") /* ty=Tensor[(7, 1), float32] */;
  %254 = cast(%var_1158, dtype="float32") /* ty=Tensor[(7, 10), float32] */;
  %255 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 210), int64] */, dtype="int64") /* ty=Tensor[(1, 210), int64] */;
  %256 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 210), int64] */, dtype="int64") /* ty=Tensor[(1, 210), int64] */;
  %257 = cast(meta[relay.Constant][20] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %258 = cast(%var_1220, dtype="uint16") /* ty=uint16 */;
  %259 = cast(meta[relay.Constant][21] /* ty=Tensor[(22), uint16] */, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %260 = reshape(%255, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), int64] */;
  %261 = reshape(%256, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), int64] */;
  %262 = reshape(%257, newshape=[308]) /* ty=Tensor[(308), float64] */;
  %263 = reshape(%258, newshape=[]) /* ty=uint16 */;
  %264 = reshape(%259, newshape=[22]) /* ty=Tensor[(22), uint16] */;
  %265 = @func_317(%260, %261, %262, %263, %264) /* ty=(Tensor[(6, 7, 5), bool], Tensor[(7, 4, 11), float64], Tensor[(308), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) */;
  %266 = floor_divide(%253, %254) /* ty=Tensor[(7, 10), float32] */;
  %267 = %265.0;
  (%266, %267, meta[relay.Constant][19] /* ty=Tensor[(1, 210), int64] */, meta[relay.Constant][20] /* ty=Tensor[(308), float64] */, %var_1220, meta[relay.Constant][21] /* ty=Tensor[(22), uint16] */)
}

def @func_1243() -> (Tensor[(7, 4, 11), float64],) {
  %268 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
  %269 = %268.1;
  (%269,)
}

def @func_2708() -> (Tensor[(308), uint32],) {
  %277 = fn () -> (Tensor[(308), uint32],) {
    %270 = @func_2543() /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
    %271 = %270.2;
    %272 = cast(meta[relay.Constant][22] /* ty=Tensor[(308), float64] */, dtype="uint32") /* ty=Tensor[(308), uint32] */;
    %273 = shape_of(%271, dtype="int32") /* ty=Tensor[(1), int32] */;
    %274 = cast(%271, dtype="uint32") /* ty=Tensor[(308), uint32] */;
    %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %276 = maximum(%274, %275) /* ty=Tensor[(308), uint32] */;
    (%276,)
  };
  %277() /* ty=(Tensor[(308), uint32],) */
}

def @func_6005(%var_5966: Tensor[(11, 13), float32], %var_5994: Tensor[(720), float64], %var_5995: Tensor[(308), float64]) -> (Tensor[(11, 13), float32], Tensor[(7, 14, 3), float32], Tensor[(720), float64], Tensor[(308), float64], Tensor[(60), float64]) {
  %278 = cast(%var_5966, dtype="float32") /* ty=Tensor[(11, 13), float32] */;
  %279 = cast(%var_5994, dtype="float64") /* ty=Tensor[(720), float64] */;
  %280 = cast(%var_5995, dtype="float64") /* ty=Tensor[(308), float64] */;
  %281 = cast(meta[relay.Constant][23] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %282 = reshape(%279, newshape=[12, 60]) /* ty=Tensor[(12, 60), float64] */;
  %283 = reshape(%280, newshape=[308]) /* ty=Tensor[(308), float64] */;
  %284 = reshape(%281, newshape=[30, 2]) /* ty=Tensor[(30, 2), float64] */;
  %285 = @func_5860(%282, %283, %284) /* ty=(Tensor[(7, 14, 3), float32], Tensor[(6, 60), bool], Tensor[(7, 4, 11), uint64], Tensor[(308), float64], Tensor[(12, 60), int64], Tensor[(2, 10, 3), float64], Tensor[(30, 2), float64], Tensor[(8, 7, 13), float32]) */;
  %286 = asin(%278) /* ty=Tensor[(11, 13), float32] */;
  %287 = %285.0;
  (%286, %287, %var_5994, %var_5995, meta[relay.Constant][23] /* ty=Tensor[(60), float64] */)
}

def @func_4187(%var_4131: Tensor[(22), uint16]) -> (Tensor[(11, 2, 1), bool], Tensor[(22), uint16], Tensor[(7, 4, 11), uint64], Tensor[(7, 4, 11), uint8]) {
  %288 = cast(%var_4131, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %289 = reshape(%288, newshape=[1, 22]) /* ty=Tensor[(1, 22), uint16] */;
  %290 = @func_2760(%289) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(1, 22), uint16], Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), bool], Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), float64]) */;
  %291 = @func_2592() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
  %292 = %291.1;
  %293 = cast(%292, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %294 = reshape(%293, newshape=[7, 4, 11]) /* ty=Tensor[(7, 4, 11), float64] */;
  %295 = @func_2291(%294) /* ty=(Tensor[(7, 4, 11), uint64],) */;
  %296 = @func_2592() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
  %297 = %296.1;
  %298 = cast(%292, dtype="int32") /* ty=Tensor[(7, 4, 11), int32] */;
  %299 = shape_of(%297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%297, dtype="int32") /* ty=Tensor[(7, 4, 11), int32] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %302 = bitwise_or(%300, %301) /* ty=Tensor[(7, 4, 11), int32] */;
  %303 = cast(%302, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %304 = sin(%303) /* ty=Tensor[(7, 4, 11), float64] */;
  %305 = cast(%302, dtype="uint8") /* ty=Tensor[(7, 4, 11), uint8] */;
  %306 = shape_of(%304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%304, dtype="uint8") /* ty=Tensor[(7, 4, 11), uint8] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %309 = %290.3;
  %310 = %295.0;
  %311 = maximum(%307, %308) /* ty=Tensor[(7, 4, 11), uint8] */;
  (%309, %var_4131, %310, %311)
}

def @func_2526(%var_2523: uint16, %var_2524: Tensor[(8, 52), int64], %var_2525: Tensor[(7, 1), float32]) -> (Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 4, 11), float32], Tensor[(7, 4, 11), float64], Tensor[(720), float64], Tensor[(2, 16, 13), int64], Tensor[(8, 52), int64], Tensor[(7, 1), float32], Tensor[(70), float32]) {
  %334 = fn (%var_2494: uint16, %var_2517: Tensor[(8, 52), int64], %var_2518: Tensor[(7, 1), float32]) -> (Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 4, 11), float32], Tensor[(7, 4, 11), float64], Tensor[(720), float64], Tensor[(2, 16, 13), int64], Tensor[(8, 52), int64], Tensor[(7, 1), float32], Tensor[(70), float32]) {
    %312 = cast(%var_2494, dtype="uint16") /* ty=uint16 */;
    %313 = cast(meta[relay.Constant][24] /* ty=Tensor[(22), uint16] */, dtype="uint16") /* ty=Tensor[(22), uint16] */;
    %314 = reshape(%312, newshape=[]) /* ty=uint16 */;
    %315 = reshape(%313, newshape=[11, 2, 1]) /* ty=Tensor[(11, 2, 1), uint16] */;
    %316 = @func_162(%314, %315) /* ty=(Tensor[(11, 2, 1), uint16],) */;
    %317 = @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %318 = %317.0;
    %319 = cast(%318, dtype="float32") /* ty=Tensor[(7, 4, 11), float32] */;
    %320 = cast(meta[relay.Constant][25] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %321 = reshape(%320, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %322 = @func_2131(%321) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(7, 4, 11), int64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64], Tensor[(7, 4, 11), float64]) */;
    %323 = cast(%var_2517, dtype="int64") /* ty=Tensor[(8, 52), int64] */;
    %324 = cast(%var_2518, dtype="float32") /* ty=Tensor[(7, 1), float32] */;
    %325 = cast(meta[relay.Constant][26] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
    %326 = reshape(%323, newshape=[2, 16, 13]) /* ty=Tensor[(2, 16, 13), int64] */;
    %327 = reshape(%324, newshape=[7]) /* ty=Tensor[(7), float32] */;
    %328 = reshape(%325, newshape=[70]) /* ty=Tensor[(70), float32] */;
    %329 = @func_1764(%326, %327, %328) /* ty=(Tensor[(2, 16, 13), int64], Tensor[(6, 7, 5), bool], Tensor[(7), float32], Tensor[(70), float32], uint16, Tensor[(2, 16, 13), float32]) */;
    %330 = %316.0;
    %331 = tan(%319) /* ty=Tensor[(7, 4, 11), float32] */;
    %332 = %322.2;
    %333 = %329.0;
    (%330, %var_2494, meta[relay.Constant][24] /* ty=Tensor[(22), uint16] */, %331, %332, meta[relay.Constant][25] /* ty=Tensor[(720), float64] */, %333, %var_2517, %var_2518, meta[relay.Constant][26] /* ty=Tensor[(70), float32] */)
  };
  %334(%var_2523, %var_2524, %var_2525) /* ty=(Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 4, 11), float32], Tensor[(7, 4, 11), float64], Tensor[(720), float64], Tensor[(2, 16, 13), int64], Tensor[(8, 52), int64], Tensor[(7, 1), float32], Tensor[(70), float32]) */
}

def @func_6309(%var_6308: Tensor[(2, 360), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(13, 14, 6), float32], Tensor[(14, 78), float32], Tensor[(3584), float32], Tensor[(2, 360), float32], Tensor[(308), float64]) {
  %355 = fn (%var_6272: Tensor[(2, 360), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(13, 14, 6), float32], Tensor[(14, 78), float32], Tensor[(3584), float32], Tensor[(2, 360), float32], Tensor[(308), float64]) {
    %335 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %336 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 78), float32] */, dtype="float32") /* ty=Tensor[(14, 78), float32] */;
    %337 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 78), float32] */, dtype="float32") /* ty=Tensor[(14, 78), float32] */;
    %338 = reshape(%336, newshape=[13, 14, 6]) /* ty=Tensor[(13, 14, 6), float32] */;
    %339 = reshape(%337, newshape=[13, 14, 6]) /* ty=Tensor[(13, 14, 6), float32] */;
    %340 = cast(meta[relay.Constant][28] /* ty=Tensor[(3584), float32] */, dtype="float32") /* ty=Tensor[(3584), float32] */;
    %341 = cast(%var_6272, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
    %342 = reshape(%340, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
    %343 = reshape(%341, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
    %344 = @func_721(%342, %343) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(2, 360), float32]) */;
    %345 = %344.1;
    %346 = cast(%var_6272, dtype="float32") /* ty=Tensor[(2, 360), float32] */;
    %347 = shape_of(%345, dtype="int32") /* ty=Tensor[(2), int32] */;
    %348 = cast(%345, dtype="float32") /* ty=Tensor[(2, 360), float32] */;
    %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %350 = @func_5041() /* ty=(Tensor[(308), float64],) */;
    %351 = %335.0;
    %352 = @func_3490(%338, %339) /* ty=Tensor[(13, 14, 6), float32] */;
    %353 = floor_divide(%348, %349) /* ty=Tensor[(2, 360), float32] */;
    %354 = %350.0;
    (%351, %352, meta[relay.Constant][27] /* ty=Tensor[(14, 78), float32] */, meta[relay.Constant][28] /* ty=Tensor[(3584), float32] */, %353, %354)
  };
  %355(%var_6308) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(13, 14, 6), float32], Tensor[(14, 78), float32], Tensor[(3584), float32], Tensor[(2, 360), float32], Tensor[(308), float64]) */
}

def @func_2987() -> (Tensor[(7, 14, 3), float32],) {
  %358 = fn () -> (Tensor[(7, 14, 3), float32],) {
    %356 = @func_2815() /* ty=(Tensor[(720), float64], Tensor[(7, 14, 3), float32]) */;
    %357 = %356.1;
    (%357,)
  };
  %358() /* ty=(Tensor[(7, 14, 3), float32],) */
}

def @func_1014() -> (Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) {
  %359 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %360 = %359.0;
  %361 = cast(%360, dtype="float32") /* ty=Tensor[(7, 14, 3), float32] */;
  %362 = cast(meta[relay.Constant][29] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %363 = reshape(%362, newshape=[7, 4, 11]) /* ty=Tensor[(7, 4, 11), float64] */;
  %364 = @func_131(%363) /* ty=(Tensor[(7, 4, 11), float64],) */;
  %365 = exp(%361) /* ty=Tensor[(7, 14, 3), float32] */;
  %366 = %364.0;
  (%365, %366, meta[relay.Constant][29] /* ty=Tensor[(308), float64] */)
}

def @func_2762(%var_2761: Tensor[(1, 22), uint16]) -> (Tensor[(7, 4, 11), float64], Tensor[(1, 22), uint16], Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), bool], Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), float64]) {
  %384 = fn (%var_2722: Tensor[(1, 22), uint16]) -> (Tensor[(7, 4, 11), float64], Tensor[(1, 22), uint16], Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), bool], Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), float64]) {
    %367 = @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %368 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %369 = cast(meta[relay.Constant][30] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %370 = cast(%var_2722, dtype="uint16") /* ty=Tensor[(1, 22), uint16] */;
    %371 = reshape(%369, newshape=[]) /* ty=uint16 */;
    %372 = reshape(%370, newshape=[11, 2, 1]) /* ty=Tensor[(11, 2, 1), uint16] */;
    %373 = @func_162(%371, %372) /* ty=(Tensor[(11, 2, 1), uint16],) */;
    %374 = %373.0;
    %375 = cast(meta[relay.Constant][30] /* ty=uint16 */, dtype="bool") /* ty=bool */;
    %376 = cast(%374, dtype="bool") /* ty=Tensor[(11, 2, 1), bool] */;
    %377 = @func_1804() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
    %378 = cast(%374, dtype="float64") /* ty=Tensor[(11, 2, 1), float64] */;
    %379 = %367.0;
    %380 = %368.0;
    %381 = equal(%375, %376) /* ty=Tensor[(11, 2, 1), bool] */;
    %382 = %377.1;
    %383 = sin(%378) /* ty=Tensor[(11, 2, 1), float64] */;
    (%379, %var_2722, %380, %381, %382, %383)
  };
  %384(%var_2761) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(1, 22), uint16], Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), bool], Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), float64]) */
}

def @func_4273() -> (Tensor[(7, 14, 3), float64],) {
  %385 = @func_1958() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %386 = %385.0;
  (%386,)
}

def @func_5670() -> (Tensor[(308), float64],) {
  %389 = fn () -> (Tensor[(308), float64],) {
    %387 = @func_5150() /* ty=(Tensor[(308), float64],) */;
    %388 = %387.0;
    (%388,)
  };
  %389() /* ty=(Tensor[(308), float64],) */
}

def @func_4847(%var_4845: uint16, %var_4846: Tensor[(22), uint16]) -> (Tensor[(7, 14, 3), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 14, 3), float32]) {
  %400 = fn (%var_4833: uint16, %var_4834: Tensor[(22), uint16]) -> (Tensor[(7, 14, 3), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 14, 3), float32]) {
    %390 = @func_4273() /* ty=(Tensor[(7, 14, 3), float64],) */;
    %391 = cast(%var_4833, dtype="uint16") /* ty=uint16 */;
    %392 = cast(%var_4834, dtype="uint16") /* ty=Tensor[(22), uint16] */;
    %393 = reshape(%391, newshape=[]) /* ty=uint16 */;
    %394 = reshape(%392, newshape=[11, 2, 1]) /* ty=Tensor[(11, 2, 1), uint16] */;
    %395 = @func_162(%393, %394) /* ty=(Tensor[(11, 2, 1), uint16],) */;
    %396 = @func_3892() /* ty=(Tensor[(7, 14, 3), float32],) */;
    %397 = %390.0;
    %398 = %395.0;
    %399 = %396.0;
    (%397, %398, %var_4833, %var_4834, %399)
  };
  %400(%var_4845, %var_4846) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 14, 3), float32]) */
}

def @func_6371() -> (Tensor[(308), float32], Tensor[(308), float32], Tensor[(308), int64]) {
  %401 = @func_2707() /* ty=(Tensor[(308), uint32],) */;
  %402 = %401.0;
  %403 = cast(%402, dtype="float32") /* ty=Tensor[(308), float32] */;
  %404 = cast(%402, dtype="float32") /* ty=Tensor[(308), float32] */;
  %405 = cast(meta[relay.Constant][31] /* ty=Tensor[(308), uint32] */, dtype="int64") /* ty=Tensor[(308), int64] */;
  %406 = shape_of(%402, dtype="int32") /* ty=Tensor[(1), int32] */;
  %407 = cast(%402, dtype="int64") /* ty=Tensor[(308), int64] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?), int64] */;
  %409 = acos(%403) /* ty=Tensor[(308), float32] */;
  %410 = asin(%404) /* ty=Tensor[(308), float32] */;
  %411 = minimum(%407, %408) /* ty=Tensor[(308), int64] */;
  (%409, %410, %411)
}

def @func_4190(%var_4188: Tensor[(22), uint16]) -> (Tensor[(11, 2, 1), bool], Tensor[(22), uint16], Tensor[(7, 4, 11), uint64], Tensor[(7, 4, 11), uint8]) {
  @func_4187(%var_4188) /* ty=(Tensor[(11, 2, 1), bool], Tensor[(22), uint16], Tensor[(7, 4, 11), uint64], Tensor[(7, 4, 11), uint8]) */
}

def @func_1715() -> Tensor[(7, 14, 3), float64] {
  @func_1713() /* ty=Tensor[(7, 14, 3), float64] */
}

def @func_3494(%var_3492: Tensor[(13, 14, 6), float32], %var_3493: Tensor[(13, 14, 6), float32]) -> Tensor[(13, 14, 6), float32] {
  @func_3490(%var_3492, %var_3493) /* ty=Tensor[(13, 14, 6), float32] */
}

def @func_6373() -> (Tensor[(308), float32], Tensor[(308), float32], Tensor[(308), int64]) {
  @func_6371() /* ty=(Tensor[(308), float32], Tensor[(308), float32], Tensor[(308), int64]) */
}

def @func_3853() -> Tensor[(7, 4, 11), float64] {
  %413 = fn () -> Tensor[(7, 4, 11), float64] {
    %412 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
    %412.1
  };
  %413() /* ty=Tensor[(7, 4, 11), float64] */
}

def @func_1960() -> (Tensor[(7, 14, 3), float64],) {
  @func_1958() /* ty=(Tensor[(7, 14, 3), float64],) */
}

def @func_3591() -> (Tensor[(728), bool],) {
  @func_3589() /* ty=(Tensor[(728), bool],) */
}

def @func_4073(%var_4069: Tensor[(308), float64], %var_4070: Tensor[(720), float64], %var_4071: Tensor[(48, 64), float32], %var_4072: Tensor[(3584), float32]) -> (Tensor[(7, 14, 3), float64], Tensor[(308), float64], Tensor[(210), int64], Tensor[(308), float64], uint16, Tensor[(22), uint16], Tensor[(70, 1), float32], Tensor[(720), float64], Tensor[(48, 64), float32], Tensor[(3584), float32]) {
  %438 = fn (%var_4051: Tensor[(308), float64], %var_4064: Tensor[(720), float64], %var_4065: Tensor[(48, 64), float32], %var_4066: Tensor[(3584), float32]) -> (Tensor[(7, 14, 3), float64], Tensor[(308), float64], Tensor[(210), int64], Tensor[(308), float64], uint16, Tensor[(22), uint16], Tensor[(70, 1), float32], Tensor[(720), float64], Tensor[(48, 64), float32], Tensor[(3584), float32]) {
    %414 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
    %415 = cast(meta[relay.Constant][32] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
    %416 = cast(meta[relay.Constant][32] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
    %417 = cast(%var_4051, dtype="float64") /* ty=Tensor[(308), float64] */;
    %418 = cast(meta[relay.Constant][33] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %419 = cast(meta[relay.Constant][34] /* ty=Tensor[(22), uint16] */, dtype="uint16") /* ty=Tensor[(22), uint16] */;
    %420 = reshape(%415, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), int64] */;
    %421 = reshape(%416, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), int64] */;
    %422 = reshape(%417, newshape=[308]) /* ty=Tensor[(308), float64] */;
    %423 = reshape(%418, newshape=[]) /* ty=uint16 */;
    %424 = reshape(%419, newshape=[22]) /* ty=Tensor[(22), uint16] */;
    %425 = @func_317(%420, %421, %422, %423, %424) /* ty=(Tensor[(6, 7, 5), bool], Tensor[(7, 4, 11), float64], Tensor[(308), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) */;
    %426 = cast(%var_4064, dtype="float64") /* ty=Tensor[(720), float64] */;
    %427 = cast(%var_4065, dtype="float32") /* ty=Tensor[(48, 64), float32] */;
    %428 = cast(%var_4066, dtype="float32") /* ty=Tensor[(3584), float32] */;
    %429 = cast(meta[relay.Constant][34] /* ty=Tensor[(22), uint16] */, dtype="uint16") /* ty=Tensor[(22), uint16] */;
    %430 = reshape(%426, newshape=[12, 60]) /* ty=Tensor[(12, 60), float64] */;
    %431 = reshape(%427, newshape=[3072]) /* ty=Tensor[(3072), float32] */;
    %432 = reshape(%428, newshape=[3584]) /* ty=Tensor[(3584), float32] */;
    %433 = reshape(%429, newshape=[22]) /* ty=Tensor[(22), uint16] */;
    %434 = @func_3360(%430, %431, %432, %433) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(70, 1), float32], Tensor[(416), int64], Tensor[(16, 12, 16), float32], Tensor[(12, 10, 6), float64], Tensor[(12, 60), float64], Tensor[(3072), uint8], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) */;
    %435 = %414.0;
    %436 = %425.2;
    %437 = %434.1;
    (%435, %436, meta[relay.Constant][32] /* ty=Tensor[(210), int64] */, %var_4051, meta[relay.Constant][33] /* ty=uint16 */, meta[relay.Constant][34] /* ty=Tensor[(22), uint16] */, %437, %var_4064, %var_4065, %var_4066)
  };
  %438(%var_4069, %var_4070, %var_4071, %var_4072) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(308), float64], Tensor[(210), int64], Tensor[(308), float64], uint16, Tensor[(22), uint16], Tensor[(70, 1), float32], Tensor[(720), float64], Tensor[(48, 64), float32], Tensor[(3584), float32]) */
}

def @func_6041() -> Tensor[(550, 3), float64] {
  %439 = @func_4576() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(550, 3), float64], Tensor[(308), uint32], Tensor[(360), float32]) */;
  %439.2
}

def @func_2849() -> (Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), float64], Tensor[(11, 2), uint16]) {
  %440 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %441 = cast(meta[relay.Constant][35] /* ty=Tensor[(11, 2), uint16] */, dtype="uint16") /* ty=Tensor[(11, 2), uint16] */;
  %442 = reshape(%441, newshape=[1, 22]) /* ty=Tensor[(1, 22), uint16] */;
  %443 = @func_2760(%442) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(1, 22), uint16], Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), bool], Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), float64]) */;
  %444 = %440.0;
  %445 = %443.5;
  (%444, %445, meta[relay.Constant][35] /* ty=Tensor[(11, 2), uint16] */)
}

def @func_2903() -> (Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(728), float32]) {
  %452 = fn () -> (Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(728), float32]) {
    %446 = @func_2074() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %447 = cast(meta[relay.Constant][36] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
    %448 = reshape(%447, newshape=[8, 7, 13]) /* ty=Tensor[(8, 7, 13), float32] */;
    %449 = @func_1093(%448) /* ty=(Tensor[(8, 7, 13), float32],) */;
    %450 = %446.0;
    %451 = %449.0;
    (%450, %451, meta[relay.Constant][36] /* ty=Tensor[(728), float32] */)
  };
  %452() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(728), float32]) */
}

def @func_5123(%var_5091: Tensor[(728), float32], %var_5096: Tensor[(1092), float32]) -> (Tensor[(7, 14, 3), float32], Tensor[(8, 7, 13), float32], Tensor[(728), float32], Tensor[(1092), float32], Tensor[(13, 14, 6), bool]) {
  %453 = @func_3892() /* ty=(Tensor[(7, 14, 3), float32],) */;
  %454 = cast(%var_5091, dtype="float32") /* ty=Tensor[(728), float32] */;
  %455 = reshape(%454, newshape=[8, 7, 13]) /* ty=Tensor[(8, 7, 13), float32] */;
  %456 = @func_1093(%455) /* ty=(Tensor[(8, 7, 13), float32],) */;
  %457 = cast(%var_5096, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %458 = cast(%var_5096, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %459 = reshape(%457, newshape=[13, 14, 6]) /* ty=Tensor[(13, 14, 6), float32] */;
  %460 = reshape(%458, newshape=[13, 14, 6]) /* ty=Tensor[(13, 14, 6), float32] */;
  %461 = @func_3490(%459, %460) /* ty=Tensor[(13, 14, 6), float32] */;
  %462 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 14, 6), float32] */, dtype="bool") /* ty=Tensor[(13, 14, 6), bool] */;
  %463 = shape_of(%461, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%461, dtype="bool") /* ty=Tensor[(13, 14, 6), bool] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %466 = %453.0;
  %467 = %456.0;
  %468 = not_equal(%464, %465) /* ty=Tensor[(13, 14, 6), bool] */;
  (%466, %467, %var_5091, %var_5096, %468)
}

def @func_6658(%var_6647: Tensor[(7), float32], %var_6648: Tensor[(70), float32]) -> (Tensor[(7, 14, 3), float64], Tensor[(308), float64], Tensor[(728), bool], Tensor[(16, 12, 16), float32], Tensor[(3072), float32], Tensor[(1, 210), int64], Tensor[(7), float32], Tensor[(70), float32], uint16, Tensor[(728), bool]) {
  %469 = @func_6104() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %470 = @func_2592() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
  %471 = @func_4379() /* ty=(Tensor[(728), bool], Tensor[(7, 14, 3), float64]) */;
  %472 = cast(meta[relay.Constant][38] /* ty=Tensor[(3072), float32] */, dtype="float32") /* ty=Tensor[(3072), float32] */;
  %473 = reshape(%472, newshape=[16, 12, 16]) /* ty=Tensor[(16, 12, 16), float32] */;
  %474 = @func_25(%473) /* ty=(Tensor[(16, 12, 16), float32],) */;
  %475 = cast(%var_6647, dtype="float32") /* ty=Tensor[(7), float32] */;
  %476 = cast(%var_6648, dtype="float32") /* ty=Tensor[(70), float32] */;
  %477 = cast(meta[relay.Constant][39] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %478 = reshape(%475, newshape=[7, 1]) /* ty=Tensor[(7, 1), float32] */;
  %479 = reshape(%476, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
  %480 = reshape(%477, newshape=[]) /* ty=uint16 */;
  %481 = @func_1231(%478, %479, %480) /* ty=(Tensor[(7, 10), float32], Tensor[(6, 7, 5), bool], Tensor[(1, 210), int64], Tensor[(308), float64], uint16, Tensor[(22), uint16]) */;
  %482 = %469.0;
  %483 = %470.2;
  %484 = %471.0;
  %485 = %474.0;
  %486 = %481.2;
  %487 = @func_5378() /* ty=Tensor[(728), bool] */;
  (%482, %483, %484, %485, meta[relay.Constant][38] /* ty=Tensor[(3072), float32] */, %486, %var_6647, %var_6648, meta[relay.Constant][39] /* ty=uint16 */, %487)
}

def @func_1082(%var_1080: Tensor[(720), float64], %var_1081: Tensor[(308), float64]) -> (Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(308), float32], Tensor[(308), float64], Tensor[(7, 14, 3), float64]) {
  @func_1078(%var_1080, %var_1081) /* ty=(Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(308), float32], Tensor[(308), float64], Tensor[(7, 14, 3), float64]) */
}

def @func_2817() -> (Tensor[(720), float64], Tensor[(7, 14, 3), float32]) {
  @func_2815() /* ty=(Tensor[(720), float64], Tensor[(7, 14, 3), float32]) */
}

def @func_2291(%var_2276: Tensor[(7, 4, 11), float64]) -> (Tensor[(7, 4, 11), uint64],) {
  %488 = @func_2074() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %489 = %488.0;
  %490 = cast(%var_2276, dtype="uint64") /* ty=Tensor[(7, 4, 11), uint64] */;
  %491 = shape_of(%489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%489, dtype="uint64") /* ty=Tensor[(7, 4, 11), uint64] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %494 = bitwise_xor(%492, %493) /* ty=Tensor[(7, 4, 11), uint64] */;
  (%494,)
}

def @func_4381() -> (Tensor[(728), bool], Tensor[(7, 14, 3), float64]) {
  @func_4379() /* ty=(Tensor[(728), bool], Tensor[(7, 14, 3), float64]) */
}

def @func_4735(%var_4714: Tensor[(11, 8, 16), float64]) -> (Tensor[(11, 8, 16), float64], Tensor[(360), float32], Tensor[(360), float32], Tensor[(7, 4, 11), float64], Tensor[(720), float64]) {
  %495 = cast(%var_4714, dtype="float64") /* ty=Tensor[(11, 8, 16), float64] */;
  %496 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(11, 8, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %497 = cast(meta[relay.Constant][40] /* ty=Tensor[(11, 8, 16), float64] */, dtype="float64") /* ty=Tensor[(11, 8, 16), float64] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %499 = cast(meta[relay.Constant][41] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %500 = reshape(%499, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %501 = @func_2248(%500) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64]) */;
  %502 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %503 = @func_2815() /* ty=(Tensor[(720), float64], Tensor[(7, 14, 3), float32]) */;
  %504 = maximum(%497, %498) /* ty=Tensor[(11, 8, 16), float64] */;
  %505 = %501.2;
  %506 = %502.0;
  %507 = %503.0;
  (%504, %505, meta[relay.Constant][41] /* ty=Tensor[(360), float32] */, %506, %507)
}

def @func_4576() -> (Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(550, 3), float64], Tensor[(308), uint32], Tensor[(360), float32]) {
  %508 = @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %509 = cast(meta[relay.Constant][42] /* ty=Tensor[(550, 3), float32] */, dtype="float32") /* ty=Tensor[(550, 3), float32] */;
  %510 = reshape(%509, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
  %511 = @func_2189(%510) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(360), float32], Tensor[(35, 6), int64]) */;
  %512 = cast(meta[relay.Constant][42] /* ty=Tensor[(550, 3), float32] */, dtype="float32") /* ty=Tensor[(550, 3), float32] */;
  %513 = asinh(%512) /* ty=Tensor[(550, 3), float32] */;
  %514 = cast(%513, dtype="float64") /* ty=Tensor[(550, 3), float64] */;
  %515 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(550, 3), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %516 = cast(meta[relay.Constant][42] /* ty=Tensor[(550, 3), float32] */, dtype="float64") /* ty=Tensor[(550, 3), float64] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %518 = @func_2707() /* ty=(Tensor[(308), uint32],) */;
  %519 = cast(%513, dtype="float32") /* ty=Tensor[(550, 3), float32] */;
  %520 = reshape(%519, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
  %521 = @func_2189(%520) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(360), float32], Tensor[(35, 6), int64]) */;
  %522 = %508.0;
  %523 = %511.2;
  %524 = mod(%516, %517) /* ty=Tensor[(550, 3), float64] */;
  %525 = %518.0;
  %526 = %521.3;
  (%522, %523, %524, %525, %526)
}

def @func_5199() -> (Tensor[(7, 14, 3), float64],) {
  %528 = fn () -> (Tensor[(7, 14, 3), float64],) {
    %527 = @func_4772() /* ty=Tensor[(7, 14, 3), float64] */;
    (%527,)
  };
  %528() /* ty=(Tensor[(7, 14, 3), float64],) */
}

def @func_134(%var_132: Tensor[(7, 4, 11), float64]) -> (Tensor[(7, 4, 11), float64],) {
  @func_131(%var_132) /* ty=(Tensor[(7, 4, 11), float64],) */
}

def @func_5944() -> (Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(720), float64], Tensor[(2, 360), float32], Tensor[(7, 14, 3), float64]) {
  %529 = cast(meta[relay.Constant][43] /* ty=Tensor[(3584), float32] */, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %530 = @func_5271() /* ty=(Tensor[(308), float64], Tensor[(2, 360), float32], Tensor[(8, 448), float32], Tensor[(720), float64]) */;
  %531 = %530.1;
  %532 = cast(%531, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
  %533 = reshape(%529, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %534 = reshape(%532, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
  %535 = @func_721(%533, %534) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(2, 360), float32]) */;
  %536 = cast(meta[relay.Constant][44] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %537 = cast(%531, dtype="float64") /* ty=Tensor[(2, 360), float64] */;
  %538 = reshape(%536, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
  %539 = reshape(%537, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %540 = @func_1378(%538, %539) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(6, 10, 6), float32], Tensor[(6, 60), float32], Tensor[(720), float64], Tensor[(720), float64]) */;
  %541 = cast(meta[relay.Constant][44] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %542 = cast(%531, dtype="float32") /* ty=Tensor[(2, 360), float32] */;
  %543 = @func_5198() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %544 = %535.0;
  %545 = %540.4;
  %546 = maximum(%541, %542) /* ty=Tensor[(2, 360), float32] */;
  %547 = %543.0;
  (%544, meta[relay.Constant][43] /* ty=Tensor[(3584), float32] */, %545, %546, %547)
}

def @func_1155(%var_1153: Tensor[(3584), float32], %var_1154: Tensor[(720), float64]) -> (Tensor[(7, 14, 3), float64], Tensor[(2, 360), float32], Tensor[(720), float64], Tensor[(3584), uint16]) {
  @func_1151(%var_1153, %var_1154) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(2, 360), float32], Tensor[(720), float64], Tensor[(3584), uint16]) */
}

def @func_5043() -> (Tensor[(308), float64],) {
  @func_5041() /* ty=(Tensor[(308), float64],) */
}

def @func_5127(%var_5125: Tensor[(728), float32], %var_5126: Tensor[(1092), float32]) -> (Tensor[(7, 14, 3), float32], Tensor[(8, 7, 13), float32], Tensor[(728), float32], Tensor[(1092), float32], Tensor[(13, 14, 6), bool]) {
  @func_5123(%var_5125, %var_5126) /* ty=(Tensor[(7, 14, 3), float32], Tensor[(8, 7, 13), float32], Tensor[(728), float32], Tensor[(1092), float32], Tensor[(13, 14, 6), bool]) */
}

def @func_4015(%var_4013: Tensor[(720), float64]) -> (Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(7, 4, 11), float64]) {
  @func_4012(%var_4013) /* ty=(Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(7, 4, 11), float64]) */
}

def @func_5069() -> (Tensor[(7, 14, 3), float64], Tensor[(308), float64]) {
  %552 = fn () -> (Tensor[(7, 14, 3), float64], Tensor[(308), float64]) {
    %548 = @func_4273() /* ty=(Tensor[(7, 14, 3), float64],) */;
    %549 = @func_5041() /* ty=(Tensor[(308), float64],) */;
    %550 = %548.0;
    %551 = %549.0;
    (%550, %551)
  };
  %552() /* ty=(Tensor[(7, 14, 3), float64], Tensor[(308), float64]) */
}

def @func_1245() -> (Tensor[(7, 4, 11), float64],) {
  @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */
}

def @func_4976() -> (Tensor[(7, 14, 3), float64], Tensor[(720), float64], int16, Tensor[(768), int16], Tensor[(7), float32]) {
  %563 = fn () -> (Tensor[(7, 14, 3), float64], Tensor[(720), float64], int16, Tensor[(768), int16], Tensor[(7), float32]) {
    %553 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
    %554 = cast(meta[relay.Constant][45] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %555 = cast(meta[relay.Constant][46] /* ty=Tensor[(768), int16] */, dtype="int16") /* ty=Tensor[(768), int16] */;
    %556 = cast(meta[relay.Constant][47] /* ty=Tensor[(7), float32] */, dtype="float32") /* ty=Tensor[(7), float32] */;
    %557 = reshape(%554, newshape=[]) /* ty=int16 */;
    %558 = reshape(%555, newshape=[6, 16, 8]) /* ty=Tensor[(6, 16, 8), int16] */;
    %559 = reshape(%556, newshape=[7]) /* ty=Tensor[(7), float32] */;
    %560 = @func_2796(%557, %558, %559) /* ty=(Tensor[(6, 16, 8), bool], Tensor[(16, 26), int64], Tensor[(7), float32], Tensor[(720), float64], Tensor[(360), float32]) */;
    %561 = %553.0;
    %562 = %560.3;
    (%561, %562, meta[relay.Constant][45] /* ty=int16 */, meta[relay.Constant][46] /* ty=Tensor[(768), int16] */, meta[relay.Constant][47] /* ty=Tensor[(7), float32] */)
  };
  %563() /* ty=(Tensor[(7, 14, 3), float64], Tensor[(720), float64], int16, Tensor[(768), int16], Tensor[(7), float32]) */
}

def @func_6200(%var_6199: Tensor[(1092), float32]) -> (Tensor[(720), float64], Tensor[(8, 7, 13), float32], Tensor[(728), float32], Tensor[(1092), float32]) {
  %572 = fn (%var_6165: Tensor[(1092), float32]) -> (Tensor[(720), float64], Tensor[(8, 7, 13), float32], Tensor[(728), float32], Tensor[(1092), float32]) {
    %564 = @func_5271() /* ty=(Tensor[(308), float64], Tensor[(2, 360), float32], Tensor[(8, 448), float32], Tensor[(720), float64]) */;
    %565 = cast(meta[relay.Constant][48] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
    %566 = cast(%var_6165, dtype="float32") /* ty=Tensor[(1092), float32] */;
    %567 = reshape(%565, newshape=[728]) /* ty=Tensor[(728), float32] */;
    %568 = reshape(%566, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
    %569 = @func_5123(%567, %568) /* ty=(Tensor[(7, 14, 3), float32], Tensor[(8, 7, 13), float32], Tensor[(728), float32], Tensor[(1092), float32], Tensor[(13, 14, 6), bool]) */;
    %570 = %564.3;
    %571 = %569.1;
    (%570, %571, meta[relay.Constant][48] /* ty=Tensor[(728), float32] */, %var_6165)
  };
  %572(%var_6199) /* ty=(Tensor[(720), float64], Tensor[(8, 7, 13), float32], Tensor[(728), float32], Tensor[(1092), float32]) */
}

def @func_6580() -> (Tensor[(7, 4, 11), uint64],) {
  %573 = @func_2543() /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
  %574 = %573.1;
  (%574,)
}

def @func_651(%var_649: Tensor[(6, 10, 6), float32]) -> (Tensor[(6, 10, 6), float32],) {
  @func_648(%var_649) /* ty=(Tensor[(6, 10, 6), float32],) */
}

def @func_2075() -> (Tensor[(7, 4, 11), float64],) {
  %577 = fn () -> (Tensor[(7, 4, 11), float64],) {
    %575 = @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %576 = %575.0;
    (%576,)
  };
  %577() /* ty=(Tensor[(7, 4, 11), float64],) */
}

def @func_2593() -> (Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) {
  %584 = fn () -> (Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) {
    %578 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
    %579 = cast(meta[relay.Constant][49] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
    %580 = reshape(%579, newshape=[7, 4, 11]) /* ty=Tensor[(7, 4, 11), float64] */;
    %581 = @func_2291(%580) /* ty=(Tensor[(7, 4, 11), uint64],) */;
    %582 = %578.0;
    %583 = %581.0;
    (%582, %583, meta[relay.Constant][49] /* ty=Tensor[(308), float64] */)
  };
  %584() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */
}

def @func_5041() -> (Tensor[(308), float64],) {
  %585 = @func_2592() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
  %586 = %585.2;
  (%586,)
}

def @func_5357() -> Tensor[(728), bool] {
  %588 = fn () -> Tensor[(728), bool] {
    %587 = @func_3589() /* ty=(Tensor[(728), bool],) */;
    %587.0
  };
  %588() /* ty=Tensor[(728), bool] */
}

def @func_648(%var_636: Tensor[(6, 10, 6), float32]) -> (Tensor[(6, 10, 6), float32],) {
  %589 = cast(%var_636, dtype="float32") /* ty=Tensor[(6, 10, 6), float32] */;
  %590 = sinh(%589) /* ty=Tensor[(6, 10, 6), float32] */;
  (%590,)
}

def @func_1095(%var_1094: Tensor[(8, 7, 13), float32]) -> (Tensor[(8, 7, 13), float32],) {
  %593 = fn (%var_1087: Tensor[(8, 7, 13), float32]) -> (Tensor[(8, 7, 13), float32],) {
    %591 = cast(%var_1087, dtype="float32") /* ty=Tensor[(8, 7, 13), float32] */;
    %592 = cos(%591) /* ty=Tensor[(8, 7, 13), float32] */;
    (%592,)
  };
  %593(%var_1094) /* ty=(Tensor[(8, 7, 13), float32],) */
}

def @func_4774() -> Tensor[(7, 14, 3), float64] {
  @func_4772() /* ty=Tensor[(7, 14, 3), float64] */
}

def @func_6662(%var_6660: Tensor[(7), float32], %var_6661: Tensor[(70), float32]) -> (Tensor[(7, 14, 3), float64], Tensor[(308), float64], Tensor[(728), bool], Tensor[(16, 12, 16), float32], Tensor[(3072), float32], Tensor[(1, 210), int64], Tensor[(7), float32], Tensor[(70), float32], uint16, Tensor[(728), bool]) {
  @func_6658(%var_6660, %var_6661) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(308), float64], Tensor[(728), bool], Tensor[(16, 12, 16), float32], Tensor[(3072), float32], Tensor[(1, 210), int64], Tensor[(7), float32], Tensor[(70), float32], uint16, Tensor[(728), bool]) */
}

def @func_324(%var_319: Tensor[(6, 7, 5), int64], %var_320: Tensor[(6, 7, 5), int64], %var_321: Tensor[(308), float64], %var_322: uint16, %var_323: Tensor[(22), uint16]) -> (Tensor[(6, 7, 5), bool], Tensor[(7, 4, 11), float64], Tensor[(308), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) {
  @func_317(%var_319, %var_320, %var_321, %var_322, %var_323) /* ty=(Tensor[(6, 7, 5), bool], Tensor[(7, 4, 11), float64], Tensor[(308), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) */
}

def @func_1768(%var_1765: Tensor[(2, 16, 13), int64], %var_1766: Tensor[(7), float32], %var_1767: Tensor[(70), float32]) -> (Tensor[(2, 16, 13), int64], Tensor[(6, 7, 5), bool], Tensor[(7), float32], Tensor[(70), float32], uint16, Tensor[(2, 16, 13), float32]) {
  %609 = fn (%var_1728: Tensor[(2, 16, 13), int64], %var_1741: Tensor[(7), float32], %var_1742: Tensor[(70), float32]) -> (Tensor[(2, 16, 13), int64], Tensor[(6, 7, 5), bool], Tensor[(7), float32], Tensor[(70), float32], uint16, Tensor[(2, 16, 13), float32]) {
    %594 = cast(meta[relay.Constant][50] /* ty=Tensor[(2, 16, 13), int64] */, dtype="int64") /* ty=Tensor[(2, 16, 13), int64] */;
    %595 = shape_of(%var_1728, dtype="int32") /* ty=Tensor[(3), int32] */;
    %596 = cast(%var_1728, dtype="int64") /* ty=Tensor[(2, 16, 13), int64] */;
    %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %598 = cast(%var_1741, dtype="float32") /* ty=Tensor[(7), float32] */;
    %599 = cast(%var_1742, dtype="float32") /* ty=Tensor[(70), float32] */;
    %600 = cast(meta[relay.Constant][51] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %601 = reshape(%598, newshape=[7, 1]) /* ty=Tensor[(7, 1), float32] */;
    %602 = reshape(%599, newshape=[7, 10]) /* ty=Tensor[(7, 10), float32] */;
    %603 = reshape(%600, newshape=[]) /* ty=uint16 */;
    %604 = @func_1231(%601, %602, %603) /* ty=(Tensor[(7, 10), float32], Tensor[(6, 7, 5), bool], Tensor[(1, 210), int64], Tensor[(308), float64], uint16, Tensor[(22), uint16]) */;
    %605 = cast(%var_1728, dtype="float32") /* ty=Tensor[(2, 16, 13), float32] */;
    %606 = minimum(%596, %597) /* ty=Tensor[(2, 16, 13), int64] */;
    %607 = %604.1;
    %608 = sigmoid(%605) /* ty=Tensor[(2, 16, 13), float32] */;
    (%606, %607, %var_1741, %var_1742, meta[relay.Constant][51] /* ty=uint16 */, %608)
  };
  %609(%var_1765, %var_1766, %var_1767) /* ty=(Tensor[(2, 16, 13), int64], Tensor[(6, 7, 5), bool], Tensor[(7), float32], Tensor[(70), float32], uint16, Tensor[(2, 16, 13), float32]) */
}

def @func_5302(%var_5300: Tensor[(2, 10, 3), float64]) -> (Tensor[(2, 10, 3), float64],) {
  @func_5299(%var_5300) /* ty=(Tensor[(2, 10, 3), float64],) */
}

def @func_2313() -> (Tensor[(7, 4, 11), float64],) {
  %612 = fn () -> (Tensor[(7, 4, 11), float64],) {
    %610 = @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %611 = %610.0;
    (%611,)
  };
  %612() /* ty=(Tensor[(7, 4, 11), float64],) */
}

def @func_2294(%var_2292: Tensor[(7, 4, 11), float64]) -> (Tensor[(7, 4, 11), uint64],) {
  @func_2291(%var_2292) /* ty=(Tensor[(7, 4, 11), uint64],) */
}

def @func_6104() -> (Tensor[(7, 14, 3), float64],) {
  %613 = @func_1713() /* ty=Tensor[(7, 14, 3), float64] */;
  (%613,)
}

def @func_560(%var_559: Tensor[(12, 10, 6), float64]) -> Tensor[(12, 10, 6), float64] {
  %615 = fn (%var_551: Tensor[(12, 10, 6), float64]) -> Tensor[(12, 10, 6), float64] {
    %614 = cast(%var_551, dtype="float64") /* ty=Tensor[(12, 10, 6), float64] */;
    sinh(%614) /* ty=Tensor[(12, 10, 6), float64] */
  };
  %615(%var_559) /* ty=Tensor[(12, 10, 6), float64] */
}

def @func_946() -> (Tensor[(7, 14, 3), float64],) {
  %618 = fn () -> (Tensor[(7, 14, 3), float64],) {
    %616 = cast(meta[relay.Constant][52] /* ty=Tensor[(7, 14, 3), float64] */, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
    %617 = tan(%616) /* ty=Tensor[(7, 14, 3), float64] */;
    (%617,)
  };
  %618() /* ty=(Tensor[(7, 14, 3), float64],) */
}

def @func_3893() -> (Tensor[(7, 14, 3), float32],) {
  %621 = fn () -> (Tensor[(7, 14, 3), float32],) {
    %619 = @func_1804() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */;
    %620 = %619.0;
    (%620,)
  };
  %621() /* ty=(Tensor[(7, 14, 3), float32],) */
}

def @func_3786(%var_3784: uint16, %var_3785: Tensor[(416), int64]) -> (Tensor[(11, 2), uint16], Tensor[(7, 4, 11), float64], Tensor[(720), float64], uint16, Tensor[(416), int64], Tensor[(7), float32]) {
  %633 = fn (%var_3778: uint16, %var_3779: Tensor[(416), int64]) -> (Tensor[(11, 2), uint16], Tensor[(7, 4, 11), float64], Tensor[(720), float64], uint16, Tensor[(416), int64], Tensor[(7), float32]) {
    %622 = @func_2849() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), float64], Tensor[(11, 2), uint16]) */;
    %623 = cast(%var_3778, dtype="uint16") /* ty=uint16 */;
    %624 = cast(%var_3779, dtype="int64") /* ty=Tensor[(416), int64] */;
    %625 = cast(meta[relay.Constant][53] /* ty=Tensor[(7), float32] */, dtype="float32") /* ty=Tensor[(7), float32] */;
    %626 = reshape(%623, newshape=[]) /* ty=uint16 */;
    %627 = reshape(%624, newshape=[8, 52]) /* ty=Tensor[(8, 52), int64] */;
    %628 = reshape(%625, newshape=[7, 1]) /* ty=Tensor[(7, 1), float32] */;
    %629 = @func_2522(%626, %627, %628) /* ty=(Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 4, 11), float32], Tensor[(7, 4, 11), float64], Tensor[(720), float64], Tensor[(2, 16, 13), int64], Tensor[(8, 52), int64], Tensor[(7, 1), float32], Tensor[(70), float32]) */;
    %630 = %622.2;
    %631 = @func_3454() /* ty=Tensor[(7, 4, 11), float64] */;
    %632 = %629.5;
    (%630, %631, %632, %var_3778, %var_3779, meta[relay.Constant][53] /* ty=Tensor[(7), float32] */)
  };
  %633(%var_3784, %var_3785) /* ty=(Tensor[(11, 2), uint16], Tensor[(7, 4, 11), float64], Tensor[(720), float64], uint16, Tensor[(416), int64], Tensor[(7), float32]) */
}

def @func_1958() -> (Tensor[(7, 14, 3), float64],) {
  %634 = @func_1713() /* ty=Tensor[(7, 14, 3), float64] */;
  (%634,)
}

def @func_5272() -> (Tensor[(308), float64], Tensor[(2, 360), float32], Tensor[(8, 448), float32], Tensor[(720), float64]) {
  %643 = fn () -> (Tensor[(308), float64], Tensor[(2, 360), float32], Tensor[(8, 448), float32], Tensor[(720), float64]) {
    %635 = @func_5041() /* ty=(Tensor[(308), float64],) */;
    %636 = cast(meta[relay.Constant][54] /* ty=Tensor[(8, 448), float32] */, dtype="float32") /* ty=Tensor[(8, 448), float32] */;
    %637 = cast(meta[relay.Constant][55] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %638 = reshape(%636, newshape=[3584]) /* ty=Tensor[(3584), float32] */;
    %639 = reshape(%637, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %640 = @func_1151(%638, %639) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(2, 360), float32], Tensor[(720), float64], Tensor[(3584), uint16]) */;
    %641 = %635.0;
    %642 = %640.1;
    (%641, %642, meta[relay.Constant][54] /* ty=Tensor[(8, 448), float32] */, meta[relay.Constant][55] /* ty=Tensor[(720), float64] */)
  };
  %643() /* ty=(Tensor[(308), float64], Tensor[(2, 360), float32], Tensor[(8, 448), float32], Tensor[(720), float64]) */
}

def @func_2484(%var_2482: Tensor[(7, 1), float32]) -> (Tensor[(720), float64], Tensor[(1, 360), float32], Tensor[(7), float32], Tensor[(16, 26), int64], Tensor[(7, 1), float32], Tensor[(70, 1), float32], Tensor[(7, 14, 3), float32]) {
  @func_2481(%var_2482) /* ty=(Tensor[(720), float64], Tensor[(1, 360), float32], Tensor[(7), float32], Tensor[(16, 26), int64], Tensor[(7, 1), float32], Tensor[(70, 1), float32], Tensor[(7, 14, 3), float32]) */
}

def @func_6417() -> (Tensor[(308), float64], Tensor[(16, 12, 16), float64], Tensor[(3072), bool]) {
  %644 = @func_5669() /* ty=(Tensor[(308), float64],) */;
  %645 = cast(meta[relay.Constant][56] /* ty=Tensor[(3072), float32] */, dtype="float32") /* ty=Tensor[(3072), float32] */;
  %646 = reshape(%645, newshape=[16, 12, 16]) /* ty=Tensor[(16, 12, 16), float32] */;
  %647 = @func_25(%646) /* ty=(Tensor[(16, 12, 16), float32],) */;
  %648 = %647.0;
  %649 = cast(meta[relay.Constant][56] /* ty=Tensor[(3072), float32] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %650 = shape_of(%648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %651 = cast(%648, dtype="float64") /* ty=Tensor[(16, 12, 16), float64] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %653 = cast(%648, dtype="bool") /* ty=Tensor[(16, 12, 16), bool] */;
  %654 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(3072), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %655 = cast(meta[relay.Constant][56] /* ty=Tensor[(3072), float32] */, dtype="bool") /* ty=Tensor[(3072), bool] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?), bool] */;
  %657 = %644.0;
  %658 = floor_divide(%651, %652) /* ty=Tensor[(16, 12, 16), float64] */;
  %659 = greater_equal(%655, %656) /* ty=Tensor[(3072), bool] */;
  (%657, %658, %659)
}

def @func_5946() -> (Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(720), float64], Tensor[(2, 360), float32], Tensor[(7, 14, 3), float64]) {
  @func_5944() /* ty=(Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(720), float64], Tensor[(2, 360), float32], Tensor[(7, 14, 3), float64]) */
}

def @func_4738(%var_4736: Tensor[(11, 8, 16), float64]) -> (Tensor[(11, 8, 16), float64], Tensor[(360), float32], Tensor[(360), float32], Tensor[(7, 4, 11), float64], Tensor[(720), float64]) {
  @func_4735(%var_4736) /* ty=(Tensor[(11, 8, 16), float64], Tensor[(360), float32], Tensor[(360), float32], Tensor[(7, 4, 11), float64], Tensor[(720), float64]) */
}

def @func_1495(%var_1491: Tensor[(1, 5, 16), float32], %var_1492: Tensor[(360), float32], %var_1493: Tensor[(12, 5, 16), float32], %var_1494: Tensor[(10, 5, 16), float32]) -> (Tensor[(6, 10, 6), float32], Tensor[(360), float32], Tensor[(16, 5, 16), int16], Tensor[(7, 14, 3), float32], Tensor[(12, 5, 16), uint64], Tensor[(10, 5, 16), bool], Tensor[(7, 14, 3), float64], Tensor[(720), float64], Tensor[(308), float64]) {
  %685 = fn (%var_1410: Tensor[(1, 5, 16), float32], %var_1416: Tensor[(360), float32], %var_1473: Tensor[(12, 5, 16), float32], %var_1478: Tensor[(10, 5, 16), float32]) -> (Tensor[(6, 10, 6), float32], Tensor[(360), float32], Tensor[(16, 5, 16), int16], Tensor[(7, 14, 3), float32], Tensor[(12, 5, 16), uint64], Tensor[(10, 5, 16), bool], Tensor[(7, 14, 3), float64], Tensor[(720), float64], Tensor[(308), float64]) {
    %660 = cast(%var_1416, dtype="float32") /* ty=Tensor[(360), float32] */;
    %661 = reshape(%660, newshape=[6, 10, 6]) /* ty=Tensor[(6, 10, 6), float32] */;
    %662 = @func_648(%661) /* ty=(Tensor[(6, 10, 6), float32],) */;
    %663 = cast(%var_1410, dtype="float32") /* ty=Tensor[(1, 5, 16), float32] */;
    %664 = sqrt(%663) /* ty=Tensor[(1, 5, 16), float32] */;
    %665 = cast(%664, dtype="int16") /* ty=Tensor[(1, 5, 16), int16] */;
    %666 = cast(meta[relay.Constant][57] /* ty=Tensor[(16, 5, 16), float32] */, dtype="int16") /* ty=Tensor[(16, 5, 16), int16] */;
    %667 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
    %668 = cast(%664, dtype="float32") /* ty=Tensor[(1, 5, 16), float32] */;
    %669 = erf(%668) /* ty=Tensor[(1, 5, 16), float32] */;
    %670 = cast(%669, dtype="uint64") /* ty=Tensor[(1, 5, 16), uint64] */;
    %671 = cast(%var_1473, dtype="uint64") /* ty=Tensor[(12, 5, 16), uint64] */;
    %672 = cast(%669, dtype="bool") /* ty=Tensor[(1, 5, 16), bool] */;
    %673 = cast(%var_1478, dtype="bool") /* ty=Tensor[(10, 5, 16), bool] */;
    %674 = cast(meta[relay.Constant][58] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %675 = cast(meta[relay.Constant][59] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
    %676 = reshape(%674, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %677 = reshape(%675, newshape=[308]) /* ty=Tensor[(308), float64] */;
    %678 = @func_1078(%676, %677) /* ty=(Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(308), float32], Tensor[(308), float64], Tensor[(7, 14, 3), float64]) */;
    %679 = %662.0;
    %680 = left_shift(%665, %666) /* ty=Tensor[(16, 5, 16), int16] */;
    %681 = %667.0;
    %682 = bitwise_and(%670, %671) /* ty=Tensor[(12, 5, 16), uint64] */;
    %683 = less(%672, %673) /* ty=Tensor[(10, 5, 16), bool] */;
    %684 = %678.4;
    (%679, %var_1416, %680, %681, %682, %683, %684, meta[relay.Constant][58] /* ty=Tensor[(720), float64] */, meta[relay.Constant][59] /* ty=Tensor[(308), float64] */)
  };
  %685(%var_1491, %var_1492, %var_1493, %var_1494) /* ty=(Tensor[(6, 10, 6), float32], Tensor[(360), float32], Tensor[(16, 5, 16), int16], Tensor[(7, 14, 3), float32], Tensor[(12, 5, 16), uint64], Tensor[(10, 5, 16), bool], Tensor[(7, 14, 3), float64], Tensor[(720), float64], Tensor[(308), float64]) */
}

def @func_25(%var_22: Tensor[(16, 12, 16), float32]) -> (Tensor[(16, 12, 16), float32],) {
  %686 = cast(%var_22, dtype="float32") /* ty=Tensor[(16, 12, 16), float32] */;
  %687 = erf(%686) /* ty=Tensor[(16, 12, 16), float32] */;
  (%687,)
}

def @func_5152() -> (Tensor[(308), float64],) {
  @func_5150() /* ty=(Tensor[(308), float64],) */
}

def @func_1661(%var_1535: Tensor[(7, 14, 3), float64], %var_1595: Tensor[(360), float32], %var_1599: Tensor[(210), int64], %var_1600: Tensor[(308), float64], %var_1601: uint16) -> (Tensor[(7, 14, 3), int8], Tensor[(720), float64], Tensor[(360), float32], Tensor[(720), float64], Tensor[(11, 2, 1), uint16], Tensor[(210), int64], Tensor[(308), float64], uint16, Tensor[(11, 2), uint16], Tensor[(2, 360), float32], Tensor[(1, 3584), float32], Tensor[(7, 14, 3), int8], Tensor[(6, 10, 6), float32]) {
  %688 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %689 = %688.0;
  %690 = cast(meta[relay.Constant][60] /* ty=Tensor[(7, 14, 3), float64] */, dtype="int16") /* ty=Tensor[(7, 14, 3), int16] */;
  %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%689, dtype="int16") /* ty=Tensor[(7, 14, 3), int16] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %694 = add(%692, %693) /* ty=Tensor[(7, 14, 3), int16] */;
  %695 = cast(%694, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %696 = cosh(%695) /* ty=Tensor[(7, 14, 3), float64] */;
  %697 = cast(%696, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %698 = log10(%697) /* ty=Tensor[(7, 14, 3), float64] */;
  %699 = cast(%var_1535, dtype="int8") /* ty=Tensor[(7, 14, 3), int8] */;
  %700 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %701 = cast(%689, dtype="int8") /* ty=Tensor[(7, 14, 3), int8] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %703 = right_shift(%701, %702) /* ty=Tensor[(7, 14, 3), int8] */;
  %704 = cast(%703, dtype="int8") /* ty=Tensor[(7, 14, 3), int8] */;
  %705 = shape_of(%698, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%698, dtype="int8") /* ty=Tensor[(7, 14, 3), int8] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %708 = cast(%var_1595, dtype="float32") /* ty=Tensor[(360), float32] */;
  %709 = cast(meta[relay.Constant][61] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %710 = reshape(%708, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
  %711 = reshape(%709, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %712 = @func_1378(%710, %711) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(6, 10, 6), float32], Tensor[(6, 60), float32], Tensor[(720), float64], Tensor[(720), float64]) */;
  %713 = cast(%var_1599, dtype="int64") /* ty=Tensor[(210), int64] */;
  %714 = cast(%var_1599, dtype="int64") /* ty=Tensor[(210), int64] */;
  %715 = cast(%var_1600, dtype="float64") /* ty=Tensor[(308), float64] */;
  %716 = cast(%var_1601, dtype="uint16") /* ty=uint16 */;
  %717 = cast(meta[relay.Constant][62] /* ty=Tensor[(11, 2), uint16] */, dtype="uint16") /* ty=Tensor[(11, 2), uint16] */;
  %718 = reshape(%713, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), int64] */;
  %719 = reshape(%714, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), int64] */;
  %720 = reshape(%715, newshape=[308]) /* ty=Tensor[(308), float64] */;
  %721 = reshape(%716, newshape=[]) /* ty=uint16 */;
  %722 = reshape(%717, newshape=[22]) /* ty=Tensor[(22), uint16] */;
  %723 = @func_317(%718, %719, %720, %721, %722) /* ty=(Tensor[(6, 7, 5), bool], Tensor[(7, 4, 11), float64], Tensor[(308), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) */;
  %724 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 3584), float32] */, dtype="float32") /* ty=Tensor[(1, 3584), float32] */;
  %725 = cast(meta[relay.Constant][61] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %726 = reshape(%724, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %727 = reshape(%725, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
  %728 = @func_721(%726, %727) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(2, 360), float32]) */;
  %729 = cast(%696, dtype="float32") /* ty=Tensor[(7, 14, 3), float32] */;
  %730 = acosh(%729) /* ty=Tensor[(7, 14, 3), float32] */;
  %731 = cast(%703, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
  %732 = shape_of(%730, dtype="int32") /* ty=Tensor[(3), int32] */;
  %733 = cast(%730, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %735 = less(%733, %734) /* ty=Tensor[(7, 14, 3), bool] */;
  %736 = cast(%730, dtype="int8") /* ty=Tensor[(7, 14, 3), int8] */;
  %737 = shape_of(%735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%735, dtype="int8") /* ty=Tensor[(7, 14, 3), int8] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %740 = cast(%var_1595, dtype="float32") /* ty=Tensor[(360), float32] */;
  %741 = reshape(%740, newshape=[6, 10, 6]) /* ty=Tensor[(6, 10, 6), float32] */;
  %742 = @func_648(%741) /* ty=(Tensor[(6, 10, 6), float32],) */;
  %743 = bitwise_xor(%706, %707) /* ty=Tensor[(7, 14, 3), int8] */;
  %744 = %712.4;
  %745 = %723.3;
  %746 = %728.1;
  %747 = bitwise_or(%738, %739) /* ty=Tensor[(7, 14, 3), int8] */;
  %748 = %742.0;
  (%743, %744, %var_1595, meta[relay.Constant][61] /* ty=Tensor[(720), float64] */, %745, %var_1599, %var_1600, %var_1601, meta[relay.Constant][62] /* ty=Tensor[(11, 2), uint16] */, %746, meta[relay.Constant][63] /* ty=Tensor[(1, 3584), float32] */, %747, %748)
}

def @func_2543() -> (Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) {
  %749 = @func_1958() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %750 = cast(meta[relay.Constant][64] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %751 = reshape(%750, newshape=[7, 4, 11]) /* ty=Tensor[(7, 4, 11), float64] */;
  %752 = @func_2291(%751) /* ty=(Tensor[(7, 4, 11), uint64],) */;
  %753 = %749.0;
  %754 = %752.0;
  (%753, %754, meta[relay.Constant][64] /* ty=Tensor[(308), float64] */)
}

def @func_1078(%var_1038: Tensor[(720), float64], %var_1054: Tensor[(308), float64]) -> (Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(308), float32], Tensor[(308), float64], Tensor[(7, 14, 3), float64]) {
  %755 = cast(%var_1038, dtype="float64") /* ty=Tensor[(720), float64] */;
  %756 = reshape(%755, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), float64] */;
  %757 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
  %758 = %757.2;
  %759 = cast(%var_1054, dtype="uint32") /* ty=Tensor[(308), uint32] */;
  %760 = shape_of(%758, dtype="int32") /* ty=Tensor[(1), int32] */;
  %761 = cast(%758, dtype="uint32") /* ty=Tensor[(308), uint32] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %763 = bitwise_xor(%761, %762) /* ty=Tensor[(308), uint32] */;
  %764 = cast(%763, dtype="float32") /* ty=Tensor[(308), float32] */;
  %765 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
  %766 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %767 = @func_558(%756) /* ty=Tensor[(12, 10, 6), float64] */;
  %768 = log2(%764) /* ty=Tensor[(308), float32] */;
  %769 = %765.2;
  %770 = %766.0;
  (%767, %var_1038, %768, %769, %770)
}

def @func_5629(%var_5628: Tensor[(13, 8, 9), uint16]) -> (Tensor[(13, 8, 9), uint16],) {
  %776 = fn (%var_5614: Tensor[(13, 8, 9), uint16]) -> (Tensor[(13, 8, 9), uint16],) {
    %771 = cast(%var_5614, dtype="uint16") /* ty=Tensor[(13, 8, 9), uint16] */;
    %772 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(13, 8, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %773 = cast(meta[relay.Constant][65] /* ty=Tensor[(13, 8, 9), uint16] */, dtype="uint16") /* ty=Tensor[(13, 8, 9), uint16] */;
    %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %775 = minimum(%773, %774) /* ty=Tensor[(13, 8, 9), uint16] */;
    (%775,)
  };
  %776(%var_5628) /* ty=(Tensor[(13, 8, 9), uint16],) */
}

def @func_6419() -> (Tensor[(308), float64], Tensor[(16, 12, 16), float64], Tensor[(3072), bool]) {
  @func_6417() /* ty=(Tensor[(308), float64], Tensor[(16, 12, 16), float64], Tensor[(3072), bool]) */
}

def @func_1016() -> (Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) {
  @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */
}

def @func_1894(%var_1893: Tensor[(22), uint16]) -> (Tensor[(7, 14, 3), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 4, 11), uint32], Tensor[(7, 4, 11), float32]) {
  %802 = fn (%var_1873: Tensor[(22), uint16]) -> (Tensor[(7, 14, 3), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 4, 11), uint32], Tensor[(7, 4, 11), float32]) {
    %777 = cast(meta[relay.Constant][66] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %778 = cast(%var_1873, dtype="uint16") /* ty=Tensor[(22), uint16] */;
    %779 = reshape(%777, newshape=[]) /* ty=uint16 */;
    %780 = reshape(%778, newshape=[11, 2, 1]) /* ty=Tensor[(11, 2, 1), uint16] */;
    %781 = @func_162(%779, %780) /* ty=(Tensor[(11, 2, 1), uint16],) */;
    %782 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
    %783 = %782.1;
    %784 = cast(%783, dtype="float32") /* ty=Tensor[(7, 4, 11), float32] */;
    %785 = log2(%784) /* ty=Tensor[(7, 4, 11), float32] */;
    %786 = cast(%785, dtype="float32") /* ty=Tensor[(7, 4, 11), float32] */;
    %787 = log(%786) /* ty=Tensor[(7, 4, 11), float32] */;
    %788 = cast(%787, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
    %789 = acos(%788) /* ty=Tensor[(7, 4, 11), float64] */;
    %790 = cast(%785, dtype="uint32") /* ty=Tensor[(7, 4, 11), uint32] */;
    %791 = shape_of(%789, dtype="int32") /* ty=Tensor[(3), int32] */;
    %792 = cast(%789, dtype="uint32") /* ty=Tensor[(7, 4, 11), uint32] */;
    %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %794 = cast(%785, dtype="float32") /* ty=Tensor[(7, 4, 11), float32] */;
    %795 = shape_of(%787, dtype="int32") /* ty=Tensor[(3), int32] */;
    %796 = cast(%787, dtype="float32") /* ty=Tensor[(7, 4, 11), float32] */;
    %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %798 = @func_1713() /* ty=Tensor[(7, 14, 3), float64] */;
    %799 = %781.0;
    %800 = logical_xor(%792, %793) /* ty=Tensor[(7, 4, 11), uint32] */;
    %801 = divide(%796, %797) /* ty=Tensor[(7, 4, 11), float32] */;
    (%798, %799, meta[relay.Constant][66] /* ty=uint16 */, %var_1873, %800, %801)
  };
  %802(%var_1893) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16], Tensor[(7, 4, 11), uint32], Tensor[(7, 4, 11), float32]) */
}

def @func_1805() -> (Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) {
  %810 = fn () -> (Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) {
    %803 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
    %804 = @func_1243() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %805 = cast(meta[relay.Constant][67] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %806 = reshape(%805, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), float64] */;
    %807 = %803.0;
    %808 = %804.0;
    %809 = @func_558(%806) /* ty=Tensor[(12, 10, 6), float64] */;
    (%807, %808, %809, meta[relay.Constant][67] /* ty=Tensor[(720), float64] */)
  };
  %810() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(12, 10, 6), float64], Tensor[(720), float64]) */
}

def @func_5299(%var_5294: Tensor[(2, 10, 3), float64]) -> (Tensor[(2, 10, 3), float64],) {
  %811 = cast(%var_5294, dtype="float64") /* ty=Tensor[(2, 10, 3), float64] */;
  %812 = cos(%811) /* ty=Tensor[(2, 10, 3), float64] */;
  (%812,)
}

def @func_2851() -> (Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), float64], Tensor[(11, 2), uint16]) {
  @func_2849() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(11, 2, 1), float64], Tensor[(11, 2), uint16]) */
}

def @func_6085(%var_6084: Tensor[(210), int64]) -> (Tensor[(7, 4, 11), float64], Tensor[(2, 10, 3), uint32], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(210), int64], Tensor[(?, 60), int8]) {
  %834 = fn (%var_6063: Tensor[(210), int64]) -> (Tensor[(7, 4, 11), float64], Tensor[(2, 10, 3), uint32], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(210), int64], Tensor[(?, 60), int8]) {
    %813 = cast(meta[relay.Constant][68] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
    %814 = reshape(%813, newshape=[2, 10, 3]) /* ty=Tensor[(2, 10, 3), float64] */;
    %815 = @func_5299(%814) /* ty=(Tensor[(2, 10, 3), float64],) */;
    %816 = %815.0;
    %817 = cast(meta[relay.Constant][68] /* ty=Tensor[(1, 60), float64] */, dtype="uint32") /* ty=Tensor[(1, 60), uint32] */;
    %818 = shape_of(%816, dtype="int32") /* ty=Tensor[(3), int32] */;
    %819 = cast(%816, dtype="uint32") /* ty=Tensor[(2, 10, 3), uint32] */;
    %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %821 = cast(meta[relay.Constant][69] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %822 = cast(%var_6063, dtype="int64") /* ty=Tensor[(210), int64] */;
    %823 = reshape(%821, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %824 = reshape(%822, newshape=[210]) /* ty=Tensor[(210), int64] */;
    %825 = @func_1981(%823, %824) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(720), float64], Tensor[(1, 294), float64], Tensor[(360), float32], Tensor[(210), int64], Tensor[(728), int16]) */;
    %826 = cast(%816, dtype="int8") /* ty=Tensor[(2, 10, 3), int8] */;
    %827 = shape_of(meta[relay.Constant][68] /* ty=Tensor[(1, 60), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %828 = cast(meta[relay.Constant][68] /* ty=Tensor[(1, 60), float64] */, dtype="int8") /* ty=Tensor[(1, 60), int8] */;
    %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %830 = @func_3852() /* ty=Tensor[(7, 4, 11), float64] */;
    %831 = multiply(%819, %820) /* ty=Tensor[(2, 10, 3), uint32] */;
    %832 = %825.0;
    %833 = maximum(%828, %829) /* ty=Tensor[(?, 60), int8] */;
    (%830, %831, %832, meta[relay.Constant][69] /* ty=Tensor[(360), float32] */, %var_6063, %833)
  };
  %834(%var_6084) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(2, 10, 3), uint32], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(210), int64], Tensor[(?, 60), int8]) */
}

def @func_1378(%var_1362: Tensor[(6, 60), float32], %var_1371: Tensor[(720), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(6, 10, 6), float32], Tensor[(6, 60), float32], Tensor[(720), float64], Tensor[(720), float64]) {
  %835 = @func_1014() /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 4, 11), float64], Tensor[(308), float64]) */;
  %836 = cast(%var_1362, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
  %837 = reshape(%836, newshape=[6, 10, 6]) /* ty=Tensor[(6, 10, 6), float32] */;
  %838 = @func_648(%837) /* ty=(Tensor[(6, 10, 6), float32],) */;
  %839 = cast(%var_1371, dtype="float64") /* ty=Tensor[(720), float64] */;
  %840 = %835.1;
  %841 = cast(%840, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %842 = reshape(%839, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %843 = reshape(%841, newshape=[308]) /* ty=Tensor[(308), float64] */;
  %844 = @func_1078(%842, %843) /* ty=(Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(308), float32], Tensor[(308), float64], Tensor[(7, 14, 3), float64]) */;
  %845 = %838.0;
  %846 = %844.1;
  (%840, %845, %var_1362, %846, %var_1371)
}

def @func_3685(%var_3684: Tensor[(7, 4, 11), float64]) -> Tensor[(7, 4, 11), int16] {
  %853 = fn (%var_3678: Tensor[(7, 4, 11), float64]) -> Tensor[(7, 4, 11), int16] {
    %847 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %848 = %847.0;
    %849 = cast(%var_3678, dtype="int16") /* ty=Tensor[(7, 4, 11), int16] */;
    %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(3), int32] */;
    %851 = cast(%848, dtype="int16") /* ty=Tensor[(7, 4, 11), int16] */;
    %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    right_shift(%851, %852) /* ty=Tensor[(7, 4, 11), int16] */
  };
  %853(%var_3684) /* ty=Tensor[(7, 4, 11), int16] */
}

def @func_6043() -> Tensor[(550, 3), float64] {
  @func_6041() /* ty=Tensor[(550, 3), float64] */
}

def @func_3140(%var_3139: Tensor[(16, 5, 1), float32]) -> (Tensor[(16, 5, 1), float32],) {
  %856 = fn (%var_3119: Tensor[(16, 5, 1), float32]) -> (Tensor[(16, 5, 1), float32],) {
    %854 = cast(%var_3119, dtype="float32") /* ty=Tensor[(16, 5, 1), float32] */;
    %855 = sqrt(%854) /* ty=Tensor[(16, 5, 1), float32] */;
    (%855,)
  };
  %856(%var_3139) /* ty=(Tensor[(16, 5, 1), float32],) */
}

def @func_2800(%var_2797: int16, %var_2798: Tensor[(6, 16, 8), int16], %var_2799: Tensor[(7), float32]) -> (Tensor[(6, 16, 8), bool], Tensor[(16, 26), int64], Tensor[(7), float32], Tensor[(720), float64], Tensor[(360), float32]) {
  %868 = fn (%var_2772: int16, %var_2773: Tensor[(6, 16, 8), int16], %var_2785: Tensor[(7), float32]) -> (Tensor[(6, 16, 8), bool], Tensor[(16, 26), int64], Tensor[(7), float32], Tensor[(720), float64], Tensor[(360), float32]) {
    %857 = cast(%var_2772, dtype="bool") /* ty=bool */;
    %858 = cast(%var_2773, dtype="bool") /* ty=Tensor[(6, 16, 8), bool] */;
    %859 = cast(%var_2785, dtype="float32") /* ty=Tensor[(7), float32] */;
    %860 = reshape(%859, newshape=[7, 1]) /* ty=Tensor[(7, 1), float32] */;
    %861 = @func_2481(%860) /* ty=(Tensor[(720), float64], Tensor[(1, 360), float32], Tensor[(7), float32], Tensor[(16, 26), int64], Tensor[(7, 1), float32], Tensor[(70, 1), float32], Tensor[(7, 14, 3), float32]) */;
    %862 = cast(meta[relay.Constant][70] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %863 = reshape(%862, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %864 = @func_2248(%863) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64]) */;
    %865 = less(%857, %858) /* ty=Tensor[(6, 16, 8), bool] */;
    %866 = %861.3;
    %867 = %864.3;
    (%865, %866, %var_2785, %867, meta[relay.Constant][70] /* ty=Tensor[(360), float32] */)
  };
  %868(%var_2797, %var_2798, %var_2799) /* ty=(Tensor[(6, 16, 8), bool], Tensor[(16, 26), int64], Tensor[(7), float32], Tensor[(720), float64], Tensor[(360), float32]) */
}

def @func_317(%var_289: Tensor[(6, 7, 5), int64], %var_290: Tensor[(6, 7, 5), int64], %var_297: Tensor[(308), float64], %var_311: uint16, %var_312: Tensor[(22), uint16]) -> (Tensor[(6, 7, 5), bool], Tensor[(7, 4, 11), float64], Tensor[(308), float64], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) {
  %869 = cast(%var_290, dtype="bool") /* ty=Tensor[(6, 7, 5), bool] */;
  %870 = shape_of(%var_289, dtype="int32") /* ty=Tensor[(3), int32] */;
  %871 = cast(%var_289, dtype="bool") /* ty=Tensor[(6, 7, 5), bool] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %873 = cast(%var_297, dtype="float64") /* ty=Tensor[(308), float64] */;
  %874 = reshape(%873, newshape=[7, 4, 11]) /* ty=Tensor[(7, 4, 11), float64] */;
  %875 = @func_131(%874) /* ty=(Tensor[(7, 4, 11), float64],) */;
  %876 = cast(%var_297, dtype="float64") /* ty=Tensor[(308), float64] */;
  %877 = cast(%var_311, dtype="uint16") /* ty=uint16 */;
  %878 = cast(%var_312, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %879 = reshape(%877, newshape=[]) /* ty=uint16 */;
  %880 = reshape(%878, newshape=[11, 2, 1]) /* ty=Tensor[(11, 2, 1), uint16] */;
  %881 = @func_162(%879, %880) /* ty=(Tensor[(11, 2, 1), uint16],) */;
  %882 = not_equal(%871, %872) /* ty=Tensor[(6, 7, 5), bool] */;
  %883 = %875.0;
  %884 = asinh(%876) /* ty=Tensor[(308), float64] */;
  %885 = %881.0;
  (%882, %883, %884, %885, %var_311, %var_312)
}

def @func_2191(%var_2190: Tensor[(15, 10, 11), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(360), float32], Tensor[(35, 6), int64]) {
  %896 = fn (%var_2161: Tensor[(15, 10, 11), float32]) -> (Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(360), float32], Tensor[(35, 6), int64]) {
    %886 = cast(%var_2161, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
    %887 = cast(%var_2161, dtype="float64") /* ty=Tensor[(15, 10, 11), float64] */;
    %888 = cast(meta[relay.Constant][71] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %889 = cast(meta[relay.Constant][72] /* ty=Tensor[(35, 6), int64] */, dtype="int64") /* ty=Tensor[(35, 6), int64] */;
    %890 = reshape(%888, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %891 = reshape(%889, newshape=[210]) /* ty=Tensor[(210), int64] */;
    %892 = @func_1981(%890, %891) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(720), float64], Tensor[(1, 294), float64], Tensor[(360), float32], Tensor[(210), int64], Tensor[(728), int16]) */;
    %893 = exp(%886) /* ty=Tensor[(15, 10, 11), float32] */;
    %894 = erf(%887) /* ty=Tensor[(15, 10, 11), float64] */;
    %895 = %892.1;
    (%893, %894, %895, meta[relay.Constant][71] /* ty=Tensor[(360), float32] */, meta[relay.Constant][72] /* ty=Tensor[(35, 6), int64] */)
  };
  %896(%var_2190) /* ty=(Tensor[(15, 10, 11), float32], Tensor[(15, 10, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(360), float32], Tensor[(35, 6), int64]) */
}

def @func_1236(%var_1233: Tensor[(7, 1), float32], %var_1234: Tensor[(7, 10), float32], %var_1235: uint16) -> (Tensor[(7, 10), float32], Tensor[(6, 7, 5), bool], Tensor[(1, 210), int64], Tensor[(308), float64], uint16, Tensor[(22), uint16]) {
  @func_1231(%var_1233, %var_1234, %var_1235) /* ty=(Tensor[(7, 10), float32], Tensor[(6, 7, 5), bool], Tensor[(1, 210), int64], Tensor[(308), float64], uint16, Tensor[(22), uint16]) */
}

def @func_725(%var_723: Tensor[(14, 16, 16), float32], %var_724: Tensor[(2, 360), float64]) -> (Tensor[(14, 16, 16), float32], Tensor[(2, 360), float32]) {
  @func_721(%var_723, %var_724) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(2, 360), float32]) */
}

def @func_5865(%var_5862: Tensor[(12, 60), float64], %var_5863: Tensor[(308), float64], %var_5864: Tensor[(30, 2), float64]) -> (Tensor[(7, 14, 3), float32], Tensor[(6, 60), bool], Tensor[(7, 4, 11), uint64], Tensor[(308), float64], Tensor[(12, 60), int64], Tensor[(2, 10, 3), float64], Tensor[(30, 2), float64], Tensor[(8, 7, 13), float32]) {
  @func_5860(%var_5862, %var_5863, %var_5864) /* ty=(Tensor[(7, 14, 3), float32], Tensor[(6, 60), bool], Tensor[(7, 4, 11), uint64], Tensor[(308), float64], Tensor[(12, 60), int64], Tensor[(2, 10, 3), float64], Tensor[(30, 2), float64], Tensor[(8, 7, 13), float32]) */
}

def @func_131(%var_122: Tensor[(7, 4, 11), float64]) -> (Tensor[(7, 4, 11), float64],) {
  %897 = cast(%var_122, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %898 = rsqrt(%897) /* ty=Tensor[(7, 4, 11), float64] */;
  (%898,)
}

def @func_5706() -> (Tensor[(8, 448), float32], Tensor[(308), float64], Tensor[(308), float64], Tensor[(1815), float32]) {
  %899 = @func_5271() /* ty=(Tensor[(308), float64], Tensor[(2, 360), float32], Tensor[(8, 448), float32], Tensor[(720), float64]) */;
  %900 = @func_5669() /* ty=(Tensor[(308), float64],) */;
  %901 = cast(meta[relay.Constant][73] /* ty=Tensor[(1815), float32] */, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %902 = reshape(%901, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), float32] */;
  %903 = @func_5323(%902) /* ty=(Tensor[(11, 15, 11), float32], Tensor[(308), float64]) */;
  %904 = %899.2;
  %905 = %900.0;
  %906 = %903.1;
  (%904, %905, %906, meta[relay.Constant][73] /* ty=Tensor[(1815), float32] */)
}

def @func_6010(%var_6007: Tensor[(11, 13), float32], %var_6008: Tensor[(720), float64], %var_6009: Tensor[(308), float64]) -> (Tensor[(11, 13), float32], Tensor[(7, 14, 3), float32], Tensor[(720), float64], Tensor[(308), float64], Tensor[(60), float64]) {
  @func_6005(%var_6007, %var_6008, %var_6009) /* ty=(Tensor[(11, 13), float32], Tensor[(7, 14, 3), float32], Tensor[(720), float64], Tensor[(308), float64], Tensor[(60), float64]) */
}

def @func_2409(%var_2407: Tensor[(360), float32], %var_2408: Tensor[(7, 4, 11), float64]) -> (Tensor[(7, 14, 3), float64], Tensor[(360), float32], Tensor[(7, 4, 11), bool]) {
  %917 = fn (%var_2388: Tensor[(360), float32], %var_2391: Tensor[(7, 4, 11), float64]) -> (Tensor[(7, 14, 3), float64], Tensor[(360), float32], Tensor[(7, 4, 11), bool]) {
    %907 = cast(%var_2388, dtype="float32") /* ty=Tensor[(360), float32] */;
    %908 = reshape(%907, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %909 = @func_2248(%908) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64]) */;
    %910 = %909.1;
    %911 = cast(%var_2391, dtype="bool") /* ty=Tensor[(7, 4, 11), bool] */;
    %912 = shape_of(%910, dtype="int32") /* ty=Tensor[(3), int32] */;
    %913 = cast(%910, dtype="bool") /* ty=Tensor[(7, 4, 11), bool] */;
    %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %915 = @func_1713() /* ty=Tensor[(7, 14, 3), float64] */;
    %916 = not_equal(%913, %914) /* ty=Tensor[(7, 4, 11), bool] */;
    (%915, %var_2388, %916)
  };
  %917(%var_2407, %var_2408) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(360), float32], Tensor[(7, 4, 11), bool]) */
}

def @func_4578() -> (Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(550, 3), float64], Tensor[(308), uint32], Tensor[(360), float32]) {
  @func_4576() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(550, 3), float64], Tensor[(308), uint32], Tensor[(360), float32]) */
}

def @func_4275() -> (Tensor[(7, 14, 3), float64],) {
  @func_4273() /* ty=(Tensor[(7, 14, 3), float64],) */
}

def @func_4240(%var_4239: Tensor[(7, 14, 3), float64]) -> Tensor[(7, 14, 3), bool] {
  %923 = fn (%var_4228: Tensor[(7, 14, 3), float64]) -> Tensor[(7, 14, 3), bool] {
    %918 = @func_1713() /* ty=Tensor[(7, 14, 3), float64] */;
    %919 = cast(%var_4228, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
    %920 = shape_of(%918, dtype="int32") /* ty=Tensor[(3), int32] */;
    %921 = cast(%918, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
    %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%921, %922) /* ty=Tensor[(7, 14, 3), bool] */
  };
  %923(%var_4239) /* ty=Tensor[(7, 14, 3), bool] */
}

def @func_4874() -> Tensor[(7, 14, 3), float64] {
  %925 = fn () -> Tensor[(7, 14, 3), float64] {
    %924 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
    %924.0
  };
  %925() /* ty=Tensor[(7, 14, 3), float64] */
}

def @func_4772() -> Tensor[(7, 14, 3), float64] {
  %926 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %926.0
}

def @func_5950() -> (Tensor[(7, 14, 3), float64],) {
  %929 = fn () -> (Tensor[(7, 14, 3), float64],) {
    %927 = @func_4273() /* ty=(Tensor[(7, 14, 3), float64],) */;
    %928 = %927.0;
    (%928,)
  };
  %929() /* ty=(Tensor[(7, 14, 3), float64],) */
}

def @func_5539() -> (Tensor[(308), float64],) {
  %930 = @func_2543() /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
  %931 = %930.2;
  (%931,)
}

def @func_2250(%var_2249: Tensor[(360), float32]) -> (Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64]) {
  %939 = fn (%var_2230: Tensor[(360), float32]) -> (Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64]) {
    %932 = cast(%var_2230, dtype="float32") /* ty=Tensor[(360), float32] */;
    %933 = cast(meta[relay.Constant][74] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %934 = reshape(%932, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
    %935 = reshape(%933, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %936 = @func_1378(%934, %935) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(6, 10, 6), float32], Tensor[(6, 60), float32], Tensor[(720), float64], Tensor[(720), float64]) */;
    %937 = @func_1713() /* ty=Tensor[(7, 14, 3), float64] */;
    %938 = %936.0;
    (%937, %938, %var_2230, meta[relay.Constant][74] /* ty=Tensor[(720), float64] */)
  };
  %939(%var_2249) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), float64], Tensor[(360), float32], Tensor[(720), float64]) */
}

def @func_4379() -> (Tensor[(728), bool], Tensor[(7, 14, 3), float64]) {
  %940 = @func_3589() /* ty=(Tensor[(728), bool],) */;
  %941 = @func_945() /* ty=(Tensor[(7, 14, 3), float64],) */;
  %942 = %940.0;
  %943 = %941.0;
  (%942, %943)
}

def @func_6582() -> (Tensor[(7, 4, 11), uint64],) {
  @func_6580() /* ty=(Tensor[(7, 4, 11), uint64],) */
}

def @func_6506() -> (Tensor[(728), bool], Tensor[(7, 14, 3), float64], Tensor[(3, 14, 14), float64], Tensor[(588), int8], Tensor[(728), float32], Tensor[(1092), float32]) {
  %963 = fn () -> (Tensor[(728), bool], Tensor[(7, 14, 3), float64], Tensor[(3, 14, 14), float64], Tensor[(588), int8], Tensor[(728), float32], Tensor[(1092), float32]) {
    %944 = @func_3589() /* ty=(Tensor[(728), bool],) */;
    %945 = @func_4772() /* ty=Tensor[(7, 14, 3), float64] */;
    %946 = cast(meta[relay.Constant][75] /* ty=Tensor[(7, 14, 3), float64] */, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
    %947 = shape_of(%945, dtype="int32") /* ty=Tensor[(3), int32] */;
    %948 = cast(%945, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
    %949 = dyn.reshape(%946, %947, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %950 = greater_equal(%948, %949) /* ty=Tensor[(7, 14, 3), bool] */;
    %951 = cast(%950, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
    %952 = cast(meta[relay.Constant][76] /* ty=Tensor[(588), int8] */, dtype="int8") /* ty=Tensor[(588), int8] */;
    %953 = cast(meta[relay.Constant][76] /* ty=Tensor[(588), int8] */, dtype="int8") /* ty=Tensor[(588), int8] */;
    %954 = reshape(%952, newshape=[3, 14, 14]) /* ty=Tensor[(3, 14, 14), int8] */;
    %955 = reshape(%953, newshape=[3, 14, 14]) /* ty=Tensor[(3, 14, 14), int8] */;
    %956 = cast(meta[relay.Constant][77] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
    %957 = reshape(%956, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
    %958 = @func_6198(%957) /* ty=(Tensor[(720), float64], Tensor[(8, 7, 13), float32], Tensor[(728), float32], Tensor[(1092), float32]) */;
    %959 = %944.0;
    %960 = cos(%951) /* ty=Tensor[(7, 14, 3), float64] */;
    %961 = @func_3171(%954, %955) /* ty=Tensor[(3, 14, 14), float64] */;
    %962 = %958.2;
    (%959, %960, %961, meta[relay.Constant][76] /* ty=Tensor[(588), int8] */, %962, meta[relay.Constant][77] /* ty=Tensor[(1092), float32] */)
  };
  %963() /* ty=(Tensor[(728), bool], Tensor[(7, 14, 3), float64], Tensor[(3, 14, 14), float64], Tensor[(588), int8], Tensor[(728), float32], Tensor[(1092), float32]) */
}

def @func_3365(%var_3361: Tensor[(12, 60), float64], %var_3362: Tensor[(3072), float32], %var_3363: Tensor[(3584), float32], %var_3364: Tensor[(22), uint16]) -> (Tensor[(7, 4, 11), float64], Tensor[(70, 1), float32], Tensor[(416), int64], Tensor[(16, 12, 16), float32], Tensor[(12, 10, 6), float64], Tensor[(12, 60), float64], Tensor[(3072), uint8], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) {
  %998 = fn (%var_3329: Tensor[(12, 60), float64], %var_3336: Tensor[(3072), float32], %var_3346: Tensor[(3584), float32], %var_3351: Tensor[(22), uint16]) -> (Tensor[(7, 4, 11), float64], Tensor[(70, 1), float32], Tensor[(416), int64], Tensor[(16, 12, 16), float32], Tensor[(12, 10, 6), float64], Tensor[(12, 60), float64], Tensor[(3072), uint8], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) {
    %964 = @func_2543() /* ty=(Tensor[(7, 14, 3), float64], Tensor[(7, 4, 11), uint64], Tensor[(308), float64]) */;
    %965 = %964.1;
    %966 = cast(%965, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
    %967 = cos(%966) /* ty=Tensor[(7, 4, 11), float64] */;
    %968 = cast(%967, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
    %969 = cast(meta[relay.Constant][78] /* ty=Tensor[(416), int64] */, dtype="int64") /* ty=Tensor[(416), int64] */;
    %970 = reshape(%968, newshape=[308]) /* ty=Tensor[(308), float64] */;
    %971 = reshape(%969, newshape=[416]) /* ty=Tensor[(416), int64] */;
    %972 = @func_1924(%970, %971) /* ty=(Tensor[(308), uint16], Tensor[(7), float32], Tensor[(416), int64], Tensor[(7), float32], Tensor[(70, 1), float32], Tensor[(16, 12, 16), float32], Tensor[(3072), float32]) */;
    %973 = cast(meta[relay.Constant][79] /* ty=Tensor[(3072), float32] */, dtype="float32") /* ty=Tensor[(3072), float32] */;
    %974 = reshape(%973, newshape=[16, 12, 16]) /* ty=Tensor[(16, 12, 16), float32] */;
    %975 = @func_25(%974) /* ty=(Tensor[(16, 12, 16), float32],) */;
    %976 = cast(%var_3329, dtype="float64") /* ty=Tensor[(12, 60), float64] */;
    %977 = reshape(%976, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), float64] */;
    %978 = cast(%var_3336, dtype="uint8") /* ty=Tensor[(3072), uint8] */;
    %979 = shape_of(meta[relay.Constant][79] /* ty=Tensor[(3072), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %980 = cast(meta[relay.Constant][79] /* ty=Tensor[(3072), float32] */, dtype="uint8") /* ty=Tensor[(3072), uint8] */;
    %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %982 = cast(%var_3346, dtype="float32") /* ty=Tensor[(3584), float32] */;
    %983 = cast(%var_3329, dtype="float64") /* ty=Tensor[(12, 60), float64] */;
    %984 = reshape(%982, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
    %985 = reshape(%983, newshape=[2, 360]) /* ty=Tensor[(2, 360), float64] */;
    %986 = @func_721(%984, %985) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(2, 360), float32]) */;
    %987 = cast(meta[relay.Constant][80] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %988 = cast(%var_3351, dtype="uint16") /* ty=Tensor[(22), uint16] */;
    %989 = reshape(%987, newshape=[]) /* ty=uint16 */;
    %990 = reshape(%988, newshape=[11, 2, 1]) /* ty=Tensor[(11, 2, 1), uint16] */;
    %991 = @func_162(%989, %990) /* ty=(Tensor[(11, 2, 1), uint16],) */;
    %992 = %972.4;
    %993 = %975.0;
    %994 = @func_558(%977) /* ty=Tensor[(12, 10, 6), float64] */;
    %995 = logical_xor(%980, %981) /* ty=Tensor[(3072), uint8] */;
    %996 = %986.0;
    %997 = %991.0;
    (%967, %992, meta[relay.Constant][78] /* ty=Tensor[(416), int64] */, %993, %994, %var_3329, %995, %996, %var_3346, %997, meta[relay.Constant][80] /* ty=uint16 */, %var_3351)
  };
  %998(%var_3361, %var_3362, %var_3363, %var_3364) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(70, 1), float32], Tensor[(416), int64], Tensor[(16, 12, 16), float32], Tensor[(12, 10, 6), float64], Tensor[(12, 60), float64], Tensor[(3072), uint8], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(11, 2, 1), uint16], uint16, Tensor[(22), uint16]) */
}

def @func_4012(%var_3984: Tensor[(720), float64]) -> (Tensor[(12, 10, 6), float64], Tensor[(720), float64], Tensor[(7, 4, 11), float64]) {
  %999 = cast(%var_3984, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1000 = reshape(%999, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), float64] */;
  %1001 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %1002 = %1001.0;
  %1003 = cast(%1002, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %1004 = @func_558(%1000) /* ty=Tensor[(12, 10, 6), float64] */;
  %1005 = atan(%1003) /* ty=Tensor[(7, 4, 11), float64] */;
  (%1004, %var_3984, %1005)
}

def @func_3103(%var_3102: Tensor[(3072), float32]) -> (Tensor[(7, 4, 11), float64], Tensor[(3072), float32], Tensor[(6, 10, 6), float32], Tensor[(360), float32], Tensor[(16, 12, 16), float32]) {
  %1018 = fn (%var_3075: Tensor[(3072), float32]) -> (Tensor[(7, 4, 11), float64], Tensor[(3072), float32], Tensor[(6, 10, 6), float32], Tensor[(360), float32], Tensor[(16, 12, 16), float32]) {
    %1006 = @func_2312() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %1007 = cast(meta[relay.Constant][81] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %1008 = reshape(%1007, newshape=[6, 10, 6]) /* ty=Tensor[(6, 10, 6), float32] */;
    %1009 = @func_648(%1008) /* ty=(Tensor[(6, 10, 6), float32],) */;
    %1010 = cast(%var_3075, dtype="float32") /* ty=Tensor[(3072), float32] */;
    %1011 = reshape(%1010, newshape=[16, 12, 16]) /* ty=Tensor[(16, 12, 16), float32] */;
    %1012 = @func_25(%1011) /* ty=(Tensor[(16, 12, 16), float32],) */;
    %1013 = %1012.0;
    %1014 = cast(%1013, dtype="float32") /* ty=Tensor[(16, 12, 16), float32] */;
    %1015 = %1006.0;
    %1016 = %1009.0;
    %1017 = sin(%1014) /* ty=Tensor[(16, 12, 16), float32] */;
    (%1015, %var_3075, %1016, meta[relay.Constant][81] /* ty=Tensor[(360), float32] */, %1017)
  };
  %1018(%var_3102) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(3072), float32], Tensor[(6, 10, 6), float32], Tensor[(360), float32], Tensor[(16, 12, 16), float32]) */
}

def @func_5585(%var_5584: Tensor[(16, 10, 12), uint16]) -> (Tensor[(16, 10, 12), bool], Tensor[(16, 10, 12), float64]) {
  %1031 = fn (%var_5553: Tensor[(16, 10, 12), uint16]) -> (Tensor[(16, 10, 12), bool], Tensor[(16, 10, 12), float64]) {
    %1019 = cast(meta[relay.Constant][82] /* ty=Tensor[(16, 10, 12), uint16] */, dtype="uint16") /* ty=Tensor[(16, 10, 12), uint16] */;
    %1020 = shape_of(%var_5553, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1021 = cast(%var_5553, dtype="uint16") /* ty=Tensor[(16, 10, 12), uint16] */;
    %1022 = dyn.reshape(%1019, %1020, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1023 = right_shift(%1021, %1022) /* ty=Tensor[(16, 10, 12), uint16] */;
    %1024 = cast(meta[relay.Constant][82] /* ty=Tensor[(16, 10, 12), uint16] */, dtype="bool") /* ty=Tensor[(16, 10, 12), bool] */;
    %1025 = shape_of(%1023, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1026 = cast(%1023, dtype="bool") /* ty=Tensor[(16, 10, 12), bool] */;
    %1027 = dyn.reshape(%1024, %1025, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1028 = cast(meta[relay.Constant][82] /* ty=Tensor[(16, 10, 12), uint16] */, dtype="float64") /* ty=Tensor[(16, 10, 12), float64] */;
    %1029 = logical_and(%1026, %1027) /* ty=Tensor[(16, 10, 12), bool] */;
    %1030 = acosh(%1028) /* ty=Tensor[(16, 10, 12), float64] */;
    (%1029, %1030)
  };
  %1031(%var_5584) /* ty=(Tensor[(16, 10, 12), bool], Tensor[(16, 10, 12), float64]) */
}

def @func_1382(%var_1380: Tensor[(6, 60), float32], %var_1381: Tensor[(720), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(6, 10, 6), float32], Tensor[(6, 60), float32], Tensor[(720), float64], Tensor[(720), float64]) {
  @func_1378(%var_1380, %var_1381) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(6, 10, 6), float32], Tensor[(6, 60), float32], Tensor[(720), float64], Tensor[(720), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen218/build/output.py:2253: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen218/build/output.py", line 2258, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(480) tvmgen_default_fused_exp_kernel0(float* __restrict__ T_exp, float* __restrict__ placeholder) {
  T_exp[(((int)threadIdx.x))] = __expf(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


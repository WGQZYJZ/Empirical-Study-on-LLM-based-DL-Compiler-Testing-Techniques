==========mod==========
#[version = "0.0.5"]
def @func_7553() -> (Tensor[(9, 16, 13), float64], Tensor[(1620), float64]) {
  %0 = @func_5223() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), float64]) */;
  %1 = @func_4800() /* ty=Tensor[(9, 16, 13), float64] */;
  %2 = %0.0;
  (%1, %2)
}

def @func_610(%var_599: Tensor[(1, 3, 11), float64]) -> Tensor[(1, 3, 11), float64] {
  %3 = cast(%var_599, dtype="float64") /* ty=Tensor[(1, 3, 11), float64] */;
  sin(%3) /* ty=Tensor[(1, 3, 11), float64] */
}

def @func_7396() -> Tensor[(9, 16, 13), bool] {
  %4 = @func_5242() /* ty=(Tensor[(9, 16, 13), bool],) */;
  %4.0
}

def @func_8794() -> (Tensor[(9, 16, 13), uint16], Tensor[(10, 5, 5), bool], Tensor[(250), int64], Tensor[(9, 16, 13), float64]) {
  %5 = @func_6814() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(250), int64] */, dtype="int64") /* ty=Tensor[(250), int64] */;
  %7 = reshape(%6, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), int64] */;
  %8 = @func_6091(%7) /* ty=(Tensor[(10, 5, 5), bool],) */;
  %9 = %5.0;
  %10 = %8.0;
  %11 = @func_4582() /* ty=Tensor[(9, 16, 13), float64] */;
  (%9, %10, meta[relay.Constant][0] /* ty=Tensor[(250), int64] */, %11)
}

def @func_10053(%var_10036: Tensor[(4, 7, 11), float32], %var_10037: Tensor[(4, 7, 11), float32]) -> (Tensor[(4, 7, 11), float32],) {
  %12 = cast(%var_10037, dtype="bool") /* ty=Tensor[(4, 7, 11), bool] */;
  %13 = shape_of(%var_10036, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%var_10036, dtype="bool") /* ty=Tensor[(4, 7, 11), bool] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %16 = greater(%14, %15) /* ty=Tensor[(4, 7, 11), bool] */;
  %17 = cast(%16, dtype="float32") /* ty=Tensor[(4, 7, 11), float32] */;
  %18 = asin(%17) /* ty=Tensor[(4, 7, 11), float32] */;
  (%18,)
}

def @func_6875() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) {
  %19 = @func_6507() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %20 = @func_6452() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %21 = %19.0;
  %22 = %20.0;
  (%21, %22)
}

def @func_10013(%var_9978: Tensor[(8, 8, 8), uint8], %var_9979: Tensor[(8, 8, 8), uint8]) -> (Tensor[(8, 8, 8), bool], Tensor[(8, 8, 8), float64], Tensor[(9, 15, 12), float64]) {
  %23 = cast(%var_9979, dtype="bool") /* ty=Tensor[(8, 8, 8), bool] */;
  %24 = shape_of(%var_9978, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%var_9978, dtype="bool") /* ty=Tensor[(8, 8, 8), bool] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %27 = cast(%var_9979, dtype="float64") /* ty=Tensor[(8, 8, 8), float64] */;
  %28 = @func_8499() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(1440), int8]) */;
  %29 = greater(%25, %26) /* ty=Tensor[(8, 8, 8), bool] */;
  %30 = log2(%27) /* ty=Tensor[(8, 8, 8), float64] */;
  %31 = %28.1;
  (%29, %30, %31)
}

def @func_9747() -> (Tensor[(9, 16, 13), uint16],) {
  %32 = @func_8918() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %33 = %32.1;
  (%33,)
}

def @func_11887() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(11, 15, 15), int32], int32, Tensor[(2475), int32]) {
  %34 = @func_7171() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %35 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %36 = cast(-10 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(2475), int32] */, dtype="int32") /* ty=Tensor[(2475), int32] */;
  %38 = reshape(%36, newshape=[]) /* ty=int32 */;
  %39 = reshape(%37, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), int32] */;
  %40 = @func_11420(%38, %39) /* ty=(Tensor[(11, 15, 15), int32],) */;
  %41 = %34.0;
  %42 = %35.0;
  %43 = %40.0;
  (%41, %42, %43, -10 /* ty=int32 */, meta[relay.Constant][1] /* ty=Tensor[(2475), int32] */)
}

def @func_5790() -> Tensor[(9, 16, 13), float64] {
  @func_5706() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_11390() -> (Tensor[(1620), float64],) {
  %44 = @func_4497() /* ty=(Tensor[(1620), float64],) */;
  %45 = %44.0;
  (%45,)
}

def @func_4484() -> Tensor[(9, 16, 13), bool] {
  %46 = @func_3424() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %47 = %46.0;
  %48 = @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */;
  %49 = cast(%48, dtype="bool") /* ty=Tensor[(9, 16, 13), bool] */;
  %50 = shape_of(%47, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(%47, dtype="bool") /* ty=Tensor[(9, 16, 13), bool] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%51, %52) /* ty=Tensor[(9, 16, 13), bool] */
}

def @func_1304(%var_1286: uint8) -> (Tensor[(3, 1, 5), uint8], Tensor[(16, 7, 9), float32], Tensor[(1008), float32]) {
  %53 = cast(%var_1286, dtype="uint8") /* ty=uint8 */;
  %54 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 1, 5), uint8] */, dtype="uint8") /* ty=Tensor[(3, 1, 5), uint8] */;
  %55 = cast(meta[relay.Constant][3] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %56 = reshape(%55, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float32] */;
  %57 = @func_1190(%56) /* ty=(Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) */;
  %58 = left_shift(%53, %54) /* ty=Tensor[(3, 1, 5), uint8] */;
  %59 = %57.0;
  (%58, %59, meta[relay.Constant][3] /* ty=Tensor[(1008), float32] */)
}

def @func_9934() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], float32) {
  %60 = @func_8794() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(10, 5, 5), bool], Tensor[(250), int64], Tensor[(9, 16, 13), float64]) */;
  %61 = @func_6452() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %62 = @func_5966() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %63 = cast(-6.2847f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %64 = reshape(%63, newshape=[]) /* ty=float32 */;
  %65 = @func_7953(%64) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(2, 4, 7), float64], Tensor[(9, 15, 12), float64], float32, Tensor[(384), float32], Tensor[(2, 4, 7), float32], Tensor[(9, 16, 13), bool]) */;
  %66 = %60.3;
  %67 = @func_6832() /* ty=Tensor[(9, 16, 13), uint16] */;
  %68 = %61.0;
  %69 = %62.0;
  %70 = @func_6999() /* ty=Tensor[(9, 16, 13), float64] */;
  %71 = %65.2;
  (%66, %67, %68, %69, %70, %71, -6.2847f /* ty=float32 */)
}

def @func_10893() -> (Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(308), int64], Tensor[(9, 16, 13), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) {
  %72 = cast(meta[relay.Constant][4] /* ty=Tensor[(308), int64] */, dtype="int64") /* ty=Tensor[(308), int64] */;
  %73 = reshape(%72, newshape=[308]) /* ty=Tensor[(308), int64] */;
  %74 = @func_3730(%73) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1620), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) */;
  %75 = cast(meta[relay.Constant][5] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %76 = reshape(%75, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %77 = @func_7818(%76) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %78 = @func_6606() /* ty=(Tensor[(1, 15, 5), float32], Tensor[(9, 16, 13), uint16]) */;
  %79 = @func_10838() /* ty=Tensor[(9, 16, 13), uint16] */;
  %80 = %74.2;
  %81 = %77.0;
  %82 = %78.1;
  (%79, %80, meta[relay.Constant][4] /* ty=Tensor[(308), int64] */, %81, meta[relay.Constant][5] /* ty=Tensor[(1620), float64] */, %82)
}

def @func_6270() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %83 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %84 = @func_3686() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) */;
  %85 = %83.0;
  %86 = %84.1;
  (%85, %86)
}

def @func_3151() -> (Tensor[(9, 16, 13), uint16],) {
  %87 = @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%87,)
}

def @func_1738(%var_1719: Tensor[(1008), float32]) -> (Tensor[(11, 4, 14), float32], Tensor[(1008), int64], Tensor[(1620), float64], Tensor[(715, 3), float32], Tensor[(1620), float64], Tensor[(9, 15, 12), float64]) {
  %88 = cast(meta[relay.Constant][6] /* ty=Tensor[(11, 4, 14), float32] */, dtype="float32") /* ty=Tensor[(11, 4, 14), float32] */;
  %89 = cast(%var_1719, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %90 = reshape(%89, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float32] */;
  %91 = @func_1190(%90) /* ty=(Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) */;
  %92 = %91.7;
  %93 = cast(%92, dtype="int64") /* ty=Tensor[(16, 7, 9), int64] */;
  %94 = shape_of(%var_1719, dtype="int32") /* ty=Tensor[(1), int32] */;
  %95 = cast(%var_1719, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?), int64] */;
  %97 = cast(meta[relay.Constant][7] /* ty=Tensor[(715, 3), float32] */, dtype="float32") /* ty=Tensor[(715, 3), float32] */;
  %98 = cast(meta[relay.Constant][8] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %99 = reshape(%97, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float32] */;
  %100 = reshape(%98, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %101 = @func_917(%99, %100) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %102 = %101.2;
  %103 = cast(%102, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %104 = reshape(%103, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
  %105 = @func_721(%104) /* ty=(Tensor[(9, 15, 12), float64],) */;
  %106 = log2(%88) /* ty=Tensor[(11, 4, 14), float32] */;
  %107 = bitwise_xor(%95, %96) /* ty=Tensor[(1008), int64] */;
  %108 = %105.0;
  (%106, %107, %102, meta[relay.Constant][7] /* ty=Tensor[(715, 3), float32] */, meta[relay.Constant][8] /* ty=Tensor[(1620), float64] */, %108)
}

def @func_11119() -> (Tensor[(1620), float64],) {
  %109 = @func_6886() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1620), float64]) */;
  %110 = %109.1;
  (%110,)
}

def @func_10144() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %111 = @func_8918() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %112 = @func_6814() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %113 = %111.0;
  %114 = %112.0;
  (%113, %114)
}

def @func_10415() -> Tensor[(9, 16, 13), uint16] {
  %115 = @func_8609() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(1620), float64]) */;
  %115.1
}

def @func_2932() -> Tensor[(9, 16, 13), uint16] {
  %116 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %116.0
}

def @func_5004() -> Tensor[(9, 15, 12), float64] {
  %117 = @func_4879() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(16, 7, 9), float32], Tensor[(1008), float32], Tensor[(9, 15, 12), float64], Tensor[(1, 1620), float32]) */;
  %117.5
}

def @func_8499() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(1440), int8]) {
  %118 = @func_3667() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1008), float32], Tensor[(9, 16, 13), float64]) */;
  %119 = cast(meta[relay.Constant][9] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %120 = reshape(%119, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
  %121 = @func_721(%120) /* ty=(Tensor[(9, 15, 12), float64],) */;
  %122 = @func_7629() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1440), int8], uint32, Tensor[(105), uint32], Tensor[(1, 33), float64]) */;
  %123 = %118.2;
  %124 = %121.0;
  %125 = %122.1;
  (%123, %124, meta[relay.Constant][9] /* ty=Tensor[(1620), float64] */, %125)
}

def @func_4039() -> Tensor[(9, 16, 13), uint16] {
  @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_9114(%var_9108: Tensor[(1008), float64]) -> (Tensor[(9, 16, 13), bool], Tensor[(126), uint32], Tensor[(540, 3), float64], Tensor[(1008), float64]) {
  %126 = cast(meta[relay.Constant][10] /* ty=Tensor[(540, 3), float64] */, dtype="float64") /* ty=Tensor[(540, 3), float64] */;
  %127 = cast(%var_9108, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %128 = reshape(%126, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %129 = reshape(%127, newshape=[84, 12]) /* ty=Tensor[(84, 12), float64] */;
  %130 = @func_7363(%128, %129) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float32], Tensor[(9, 16, 13), uint16], Tensor[(126), uint32], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(33), float64], Tensor[(84, 12), float64], Tensor[(9, 16, 13), float64]) */;
  %131 = @func_4484() /* ty=Tensor[(9, 16, 13), bool] */;
  %132 = %130.3;
  (%131, %132, meta[relay.Constant][10] /* ty=Tensor[(540, 3), float64] */, %var_9108)
}

def @func_10281(%var_10268: Tensor[(1872), float64], %var_10269: float32) -> (Tensor[(1440), int8], Tensor[(9, 16, 13), float64], Tensor[(1872), float64], float32, Tensor[(384), float32]) {
  %133 = @func_8499() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(1440), int8]) */;
  %134 = cast(%var_10268, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %135 = cast(%var_10269, dtype="float32") /* ty=float32 */;
  %136 = cast(meta[relay.Constant][11] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %137 = reshape(%134, newshape=[9, 16, 13]) /* ty=Tensor[(9, 16, 13), float64] */;
  %138 = reshape(%135, newshape=[]) /* ty=float32 */;
  %139 = reshape(%136, newshape=[48, 8]) /* ty=Tensor[(48, 8), float32] */;
  %140 = @func_5838(%137, %138, %139) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(6, 4, 16), float32], float32, Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(48, 8), float32]) */;
  %141 = %133.3;
  %142 = %140.3;
  (%141, %142, %var_10268, %var_10269, meta[relay.Constant][11] /* ty=Tensor[(384), float32] */)
}

def @func_5470() -> Tensor[(1620), float64] {
  %143 = @func_4571() /* ty=Tensor[(1620), float64] */;
  %144 = cast(%143, dtype="float64") /* ty=Tensor[(1620), float64] */;
  sqrt(%144) /* ty=Tensor[(1620), float64] */
}

def @func_10502() -> float32 {
  %145 = @func_10439() /* ty=(float32,) */;
  %145.0
}

def @func_10102(%var_10094: Tensor[(1, 13, 16), float64]) -> Tensor[(1, 13, 16), float64] {
  %146 = cast(-4.98468f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %147 = cast(%var_10094, dtype="float64") /* ty=Tensor[(1, 13, 16), float64] */;
  maximum(%146, %147) /* ty=Tensor[(1, 13, 16), float64] */
}

def @func_9072() -> (Tensor[(1440), int8],) {
  %148 = @func_8106() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), bool], Tensor[(1440), int8], Tensor[(1440), int8]) */;
  %149 = %148.3;
  (%149,)
}

def @func_6860() -> (Tensor[(9, 16, 13), uint16],) {
  %150 = @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%150,)
}

def @func_8707() -> Tensor[(9, 16, 13), uint16] {
  %151 = @func_4182() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %151.1
}

def @func_8447(%var_8441: Tensor[(308), int64], %var_8442: Tensor[(2145), float32], %var_8443: Tensor[(1620), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) {
  %152 = @func_7138() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) */;
  %153 = @func_4879() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(16, 7, 9), float32], Tensor[(1008), float32], Tensor[(9, 15, 12), float64], Tensor[(1, 1620), float32]) */;
  %154 = cast(%var_8441, dtype="int64") /* ty=Tensor[(308), int64] */;
  %155 = cast(%var_8441, dtype="int64") /* ty=Tensor[(308), int64] */;
  %156 = cast(%var_8442, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %157 = cast(%var_8443, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %158 = reshape(%154, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
  %159 = reshape(%155, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
  %160 = reshape(%156, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %161 = reshape(%157, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %162 = @func_3075(%158, %159, %160, %161) /* ty=(Tensor[(11, 4, 7), int64], Tensor[(1, 3, 11), float64], Tensor[(11, 3), float64], Tensor[(1620), float64], Tensor[(2145), float32], Tensor[(1620), float64]) */;
  %163 = %152.1;
  %164 = %153.2;
  %165 = %162.1;
  (%163, %164, %165, %var_8441, %var_8442, %var_8443)
}

def @func_9283() -> (Tensor[(1620), float64],) {
  %166 = @func_8499() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(1440), int8]) */;
  %167 = %166.2;
  (%167,)
}

def @func_5706() -> Tensor[(9, 16, 13), float64] {
  %168 = @func_5223() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), float64]) */;
  %168.1
}

def @func_12057() -> (Tensor[(9, 16, 13), float64],) {
  %169 = @func_11103() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), float64]) */;
  %170 = %169.2;
  (%170,)
}

def @func_4939() -> (Tensor[(9, 16, 13), uint16],) {
  %171 = @func_4277() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%171,)
}

def @func_6507() -> (Tensor[(9, 16, 13), float64],) {
  %172 = @func_4262() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) */;
  %173 = %172.1;
  (%173,)
}

def @func_2824(%var_2783: Tensor[(14, 2, 15), float32], %var_2784: Tensor[(14, 2, 15), float32], %var_2819: int8) -> (Tensor[(14, 2, 15), bool], Tensor[(14, 2, 15), float32], Tensor[(16, 7, 9), uint64], Tensor[(1008), float32], Tensor[(84, 12), float32], int8, Tensor[(1440), int8]) {
  %174 = cast(%var_2784, dtype="bool") /* ty=Tensor[(14, 2, 15), bool] */;
  %175 = shape_of(%var_2783, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%var_2783, dtype="bool") /* ty=Tensor[(14, 2, 15), bool] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %178 = cast(%var_2784, dtype="float32") /* ty=Tensor[(14, 2, 15), float32] */;
  %179 = cast(meta[relay.Constant][12] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %180 = reshape(%179, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float32] */;
  %181 = @func_1190(%180) /* ty=(Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) */;
  %182 = cast(%var_2819, dtype="int8") /* ty=int8 */;
  %183 = cast(meta[relay.Constant][13] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %184 = reshape(%182, newshape=[]) /* ty=int8 */;
  %185 = reshape(%183, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int8] */;
  %186 = @func_1492(%184, %185) /* ty=(Tensor[(9, 16, 10), uint64], Tensor[(16, 7, 9), uint64], Tensor[(84, 12), float32], Tensor[(33), float64], Tensor[(1, 3, 11), float64]) */;
  %187 = less_equal(%176, %177) /* ty=Tensor[(14, 2, 15), bool] */;
  %188 = atanh(%178) /* ty=Tensor[(14, 2, 15), float32] */;
  %189 = %181.1;
  %190 = %186.2;
  (%187, %188, %189, meta[relay.Constant][12] /* ty=Tensor[(1008), float32] */, %190, %var_2819, meta[relay.Constant][13] /* ty=Tensor[(1440), int8] */)
}

def @func_10838() -> Tensor[(9, 16, 13), uint16] {
  @func_10632() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_5223() -> (Tensor[(1620), float64], Tensor[(9, 16, 13), float64]) {
  %191 = @func_4497() /* ty=(Tensor[(1620), float64],) */;
  %192 = %191.0;
  %193 = @func_4582() /* ty=Tensor[(9, 16, 13), float64] */;
  (%192, %193)
}

def @func_9344() -> Tensor[(1440), int8] {
  %194 = @func_7629() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1440), int8], uint32, Tensor[(105), uint32], Tensor[(1, 33), float64]) */;
  %194.1
}

def @func_9573() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(1620), float64]) {
  %195 = @func_6860() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %196 = @func_8918() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %197 = @func_6507() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %198 = @func_7424() /* ty=(Tensor[(1620), float64],) */;
  %199 = %195.0;
  %200 = %196.0;
  %201 = %197.0;
  %202 = %198.0;
  (%199, %200, %201, %202)
}

def @func_10156() -> Tensor[(9, 16, 13), uint16] {
  %203 = @func_9305() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %203.1
}

def @func_4879() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(16, 7, 9), float32], Tensor[(1008), float32], Tensor[(9, 15, 12), float64], Tensor[(1, 1620), float32]) {
  %204 = @func_3424() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %205 = @func_3424() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %206 = cast(meta[relay.Constant][14] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %207 = reshape(%206, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float32] */;
  %208 = @func_1190(%207) /* ty=(Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) */;
  %209 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 1620), float64] */, dtype="float64") /* ty=Tensor[(1, 1620), float64] */;
  %210 = reshape(%209, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
  %211 = @func_721(%210) /* ty=(Tensor[(9, 15, 12), float64],) */;
  %212 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 1620), float64] */, dtype="float32") /* ty=Tensor[(1, 1620), float32] */;
  %213 = @func_4800() /* ty=Tensor[(9, 16, 13), float64] */;
  %214 = %204.0;
  %215 = %205.0;
  %216 = %208.0;
  %217 = %211.0;
  %218 = acosh(%212) /* ty=Tensor[(1, 1620), float32] */;
  (%213, %214, %215, %216, meta[relay.Constant][14] /* ty=Tensor[(1008), float32] */, %217, %218)
}

def @func_11842() -> (Tensor[(9, 16, 13), uint16],) {
  %219 = @func_5966() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %220 = %219.0;
  (%220,)
}

def @func_10080() -> (Tensor[(9, 16, 13), uint16],) {
  %221 = @func_4939() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %222 = %221.0;
  (%222,)
}

def @func_10350(%var_10337: Tensor[(14, 10, 4), uint32]) -> Tensor[(14, 10, 4), bool] {
  %223 = cast(%var_10337, dtype="bool") /* ty=Tensor[(14, 10, 4), bool] */;
  %224 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(14, 10, 4), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %225 = cast(meta[relay.Constant][16] /* ty=Tensor[(14, 10, 4), uint32] */, dtype="bool") /* ty=Tensor[(14, 10, 4), bool] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%225, %226) /* ty=Tensor[(14, 10, 4), bool] */
}

def @func_11551() -> (Tensor[(9, 16, 13), uint16],) {
  %227 = @func_10080() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %228 = %227.0;
  (%228,)
}

def @func_4088(%var_4060: Tensor[(9, 16, 13), uint16], %var_4072: Tensor[(1008), float64], %var_4073: Tensor[(33), float64]) -> (Tensor[(9, 16, 13), int64], Tensor[(9, 16, 13), uint16], Tensor[(33), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64]) {
  %229 = @func_3346() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %230 = %229.0;
  %231 = cast(%var_4060, dtype="int64") /* ty=Tensor[(9, 16, 13), int64] */;
  %232 = shape_of(%230, dtype="int32") /* ty=Tensor[(3), int32] */;
  %233 = cast(%230, dtype="int64") /* ty=Tensor[(9, 16, 13), int64] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %235 = @func_3667() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1008), float32], Tensor[(9, 16, 13), float64]) */;
  %236 = cast(%var_4072, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %237 = cast(%var_4072, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %238 = cast(%var_4073, dtype="float64") /* ty=Tensor[(33), float64] */;
  %239 = cast(meta[relay.Constant][17] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %240 = reshape(%236, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float64] */;
  %241 = reshape(%237, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float64] */;
  %242 = reshape(%238, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %243 = reshape(%239, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %244 = @func_1874(%240, %241, %242, %243) /* ty=(Tensor[(12, 7, 12), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(9, 15, 12), float64], Tensor[(715, 3), float32], Tensor[(1620), float32]) */;
  %245 = multiply(%233, %234) /* ty=Tensor[(9, 16, 13), int64] */;
  %246 = %235.0;
  %247 = %244.2;
  (%245, %246, %247, %var_4072, %var_4073, meta[relay.Constant][17] /* ty=Tensor[(1620), float64] */)
}

def @func_11494() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %248 = @func_6270() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %249 = %248.1;
  %250 = @func_10156() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%249, %250)
}

def @func_3969() -> (Tensor[(9, 16, 13), float64],) {
  %251 = @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %252 = %251.0;
  %253 = cast(%252, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %254 = asinh(%253) /* ty=Tensor[(9, 16, 13), float64] */;
  (%254,)
}

def @func_8139() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), bool]) {
  %255 = @func_6270() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %256 = %255.0;
  %257 = cast(%256, dtype="uint16") /* ty=Tensor[(9, 16, 13), uint16] */;
  %258 = reshape(%257, newshape=[9, 16, 13]) /* ty=Tensor[(9, 16, 13), uint16] */;
  %259 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
  %260 = @func_5122(%258) /* ty=Tensor[(9, 16, 13), bool] */;
  (%259, %256, %260)
}

def @func_9146(%var_9126: Tensor[(13, 11, 10), int32]) -> (Tensor[(13, 11, 10), bool], Tensor[(13, 11, 10), float32]) {
  %261 = cast(%var_9126, dtype="bool") /* ty=Tensor[(13, 11, 10), bool] */;
  %262 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(13, 11, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 11, 10), int32] */, dtype="bool") /* ty=Tensor[(13, 11, 10), bool] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %265 = cast(%var_9126, dtype="float32") /* ty=Tensor[(13, 11, 10), float32] */;
  %266 = not_equal(%263, %264) /* ty=Tensor[(13, 11, 10), bool] */;
  %267 = tan(%265) /* ty=Tensor[(13, 11, 10), float32] */;
  (%266, %267)
}

def @func_5966() -> (Tensor[(9, 16, 13), uint16],) {
  %268 = @func_3346() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %269 = %268.0;
  (%269,)
}

def @func_11798() -> (Tensor[(9, 16, 13), float64], Tensor[(308), int64], Tensor[(9, 16, 13), uint16]) {
  %270 = @func_10893() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(308), int64], Tensor[(9, 16, 13), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) */;
  %271 = @func_8671() /* ty=Tensor[(9, 16, 13), float64] */;
  %272 = %270.2;
  %273 = @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%271, %272, %273)
}

def @func_6639() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) {
  %274 = @func_6550() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %275 = @func_4800() /* ty=Tensor[(9, 16, 13), float64] */;
  %276 = %274.1;
  (%275, %276)
}

def @func_5282() -> (Tensor[(1, 15, 5), float32],) {
  %277 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 15, 5), float32] */, dtype="float32") /* ty=Tensor[(1, 15, 5), float32] */;
  %278 = tan(%277) /* ty=Tensor[(1, 15, 5), float32] */;
  (%278,)
}

def @func_6550() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %279 = @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %280 = @func_4039() /* ty=Tensor[(9, 16, 13), uint16] */;
  %281 = %279.0;
  (%280, %281)
}

def @func_9685() -> (Tensor[(9, 16, 13), uint16],) {
  %282 = @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%282,)
}

def @func_6484() -> (Tensor[(9, 16, 13), uint16],) {
  %283 = @func_4277() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%283,)
}

def @func_6832() -> Tensor[(9, 16, 13), uint16] {
  @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_8344() -> (Tensor[(9, 16, 13), uint16],) {
  %284 = @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%284,)
}

def @func_3537(%var_3516: Tensor[(21, 6), uint32], %var_3517: Tensor[(540, 3), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(21, 6), uint32], Tensor[(540, 3), float64]) {
  %285 = cast(%var_3516, dtype="uint32") /* ty=Tensor[(21, 6), uint32] */;
  %286 = cast(%var_3517, dtype="float64") /* ty=Tensor[(540, 3), float64] */;
  %287 = reshape(%285, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), uint32] */;
  %288 = reshape(%286, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %289 = @func_2438(%287, %288) /* ty=(Tensor[(7, 2, 9), uint32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %290 = cast(%var_3517, dtype="float64") /* ty=Tensor[(540, 3), float64] */;
  %291 = @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */;
  %292 = %289.1;
  %293 = rsqrt(%290) /* ty=Tensor[(540, 3), float64] */;
  (%291, %292, %var_3516, %293)
}

def @func_3424() -> (Tensor[(9, 16, 13), uint16],) {
  %294 = @func_3151() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %295 = %294.0;
  (%295,)
}

def @func_8545() -> Tensor[(9, 16, 13), float64] {
  %296 = @func_4879() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(16, 7, 9), float32], Tensor[(1008), float32], Tensor[(9, 15, 12), float64], Tensor[(1, 1620), float32]) */;
  %296.0
}

def @func_7171() -> (Tensor[(9, 16, 13), float64],) {
  %297 = @func_4262() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) */;
  %298 = %297.1;
  (%298,)
}

def @func_6428() -> Tensor[(9, 16, 13), float64] {
  %299 = @func_3969() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %299.0
}

def @func_10701() -> (Tensor[(9, 16, 13), uint16],) {
  %300 = @func_6452() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %301 = %300.0;
  (%301,)
}

def @func_6814() -> (Tensor[(9, 16, 13), uint16],) {
  %302 = @func_4762() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%302,)
}

def @main(%var_12237: Tensor[(7, 1, 16), float64]) -> Tensor[(7, 1, 16), float64] {
  %303 = cast(%var_12237, dtype="float64") /* ty=Tensor[(7, 1, 16), float64] */;
  sinh(%303) /* ty=Tensor[(7, 1, 16), float64] */
}

def @func_4892() -> (Tensor[(9, 16, 13), float64],) {
  %304 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
  (%304,)
}

def @func_6684(%var_6667: Tensor[(1008), float64]) -> (Tensor[(9, 16, 13), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), bool], Tensor[(7, 2, 9), uint32], Tensor[(1008), float64], Tensor[(33), float64]) {
  %305 = @func_3667() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1008), float32], Tensor[(9, 16, 13), float64]) */;
  %306 = @func_5223() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), float64]) */;
  %307 = @func_6639() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) */;
  %308 = @func_3151() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %309 = @func_5242() /* ty=(Tensor[(9, 16, 13), bool],) */;
  %310 = cast(%var_6667, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %311 = cast(meta[relay.Constant][20] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %312 = reshape(%310, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %313 = reshape(%311, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %314 = @func_4731(%312, %313) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(7, 2, 9), uint32], Tensor[(33), float64], Tensor[(1620), float64], Tensor[(1008), float64], Tensor[(9, 15, 12), float64], Tensor[(9, 16, 13), int8]) */;
  %315 = %305.2;
  %316 = %306.0;
  %317 = %307.0;
  %318 = %308.0;
  %319 = %309.0;
  %320 = %314.1;
  (%315, %316, %317, %318, %319, %320, %var_6667, meta[relay.Constant][20] /* ty=Tensor[(33), float64] */)
}

def @func_7424() -> (Tensor[(1620), float64],) {
  %321 = @func_6886() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1620), float64]) */;
  %322 = %321.1;
  (%322,)
}

def @func_11897() -> Tensor[(9, 16, 13), uint16] {
  %323 = @func_11494() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %323.1
}

def @func_4497() -> (Tensor[(1620), float64],) {
  %324 = @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %325 = %324.2;
  (%325,)
}

def @func_7818(%var_7812: Tensor[(1620), float64]) -> (Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) {
  %326 = cast(%var_7812, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %327 = reshape(%326, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
  %328 = @func_721(%327) /* ty=(Tensor[(9, 15, 12), float64],) */;
  %329 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
  %330 = %328.0;
  (%329, %330, %var_7812)
}

def @func_4443(%var_4426: Tensor[(84, 12), float64], %var_4427: Tensor[(33, 1), float64], %var_4428: Tensor[(1620), float64], %var_4438: Tensor[(84, 12), float64]) -> (Tensor[(9, 16, 13), float64], Tensor[(715, 3), float32], Tensor[(33, 1), float64], Tensor[(1620), float64], Tensor[(7, 2, 9), uint32], Tensor[(126), uint32], Tensor[(84, 12), int8]) {
  %331 = cast(%var_4426, dtype="float64") /* ty=Tensor[(84, 12), float64] */;
  %332 = cast(%var_4426, dtype="float64") /* ty=Tensor[(84, 12), float64] */;
  %333 = cast(%var_4427, dtype="float64") /* ty=Tensor[(33, 1), float64] */;
  %334 = cast(%var_4428, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %335 = reshape(%331, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float64] */;
  %336 = reshape(%332, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float64] */;
  %337 = reshape(%333, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %338 = reshape(%334, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %339 = @func_1874(%335, %336, %337, %338) /* ty=(Tensor[(12, 7, 12), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(9, 15, 12), float64], Tensor[(715, 3), float32], Tensor[(1620), float32]) */;
  %340 = cast(meta[relay.Constant][21] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %341 = cast(%var_4428, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %342 = reshape(%340, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), uint32] */;
  %343 = reshape(%341, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %344 = @func_2438(%342, %343) /* ty=(Tensor[(7, 2, 9), uint32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %345 = cast(%var_4438, dtype="int8") /* ty=Tensor[(84, 12), int8] */;
  %346 = shape_of(%var_4426, dtype="int32") /* ty=Tensor[(2), int32] */;
  %347 = cast(%var_4426, dtype="int8") /* ty=Tensor[(84, 12), int8] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %349 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
  %350 = %339.4;
  %351 = %344.0;
  %352 = bitwise_xor(%347, %348) /* ty=Tensor[(84, 12), int8] */;
  (%349, %350, %var_4427, %var_4428, %351, meta[relay.Constant][21] /* ty=Tensor[(126), uint32] */, %352)
}

def @func_11103() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), float64]) {
  %353 = @func_7171() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %354 = @func_8973() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(1620), float64]) */;
  %355 = @func_4892() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %356 = %353.0;
  %357 = %354.0;
  %358 = %355.0;
  (%356, %357, %358)
}

def @func_11420(%var_11402: int32, %var_11403: Tensor[(11, 15, 15), int32]) -> (Tensor[(11, 15, 15), int32],) {
  %359 = cast(%var_11402, dtype="int32") /* ty=int32 */;
  %360 = cast(%var_11403, dtype="int32") /* ty=Tensor[(11, 15, 15), int32] */;
  %361 = bitwise_and(%359, %360) /* ty=Tensor[(11, 15, 15), int32] */;
  (%361,)
}

def @func_9629() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %362 = @func_5050() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %363 = @func_5050() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %364 = %362.0;
  %365 = %363.0;
  (%364, %365)
}

def @func_8671() -> Tensor[(9, 16, 13), float64] {
  @func_6428() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_5081(%var_5070: Tensor[(1008), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64]) {
  %366 = @func_3151() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %367 = cast(%var_5070, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %368 = cast(%var_5070, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %369 = cast(meta[relay.Constant][22] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %370 = cast(meta[relay.Constant][23] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %371 = reshape(%367, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float64] */;
  %372 = reshape(%368, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float64] */;
  %373 = reshape(%369, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %374 = reshape(%370, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %375 = @func_1874(%371, %372, %373, %374) /* ty=(Tensor[(12, 7, 12), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(9, 15, 12), float64], Tensor[(715, 3), float32], Tensor[(1620), float32]) */;
  %376 = %366.0;
  %377 = %375.1;
  (%376, %377, %var_5070, meta[relay.Constant][22] /* ty=Tensor[(33), float64] */, meta[relay.Constant][23] /* ty=Tensor[(1620), float64] */)
}

def @func_5755() -> Tensor[(9, 16, 13), uint16] {
  %378 = @func_4939() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %378.0
}

def @func_3667() -> (Tensor[(9, 16, 13), uint16], Tensor[(1008), float32], Tensor[(9, 16, 13), float64]) {
  %379 = @func_3346() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %380 = %379.0;
  %381 = cast(%380, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %382 = reshape(%381, newshape=[9, 16, 13]) /* ty=Tensor[(9, 16, 13), float64] */;
  %383 = @func_3194(%382) /* ty=(Tensor[(9, 16, 13), bool], Tensor[(1008), float32], uint8) */;
  %384 = %383.1;
  %385 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
  (%380, %384, %385)
}

def @func_8609() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(1620), float64]) {
  %386 = @func_7424() /* ty=(Tensor[(1620), float64],) */;
  %387 = @func_4582() /* ty=Tensor[(9, 16, 13), float64] */;
  %388 = @func_4039() /* ty=Tensor[(9, 16, 13), uint16] */;
  %389 = %386.0;
  (%387, %388, %389)
}

def @func_11342(%var_11264: Tensor[(715, 2), int32], %var_11318: Tensor[(1620), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(13, 11, 10), float32], Tensor[(715, 2), int32], Tensor[(9, 16, 13), bool], Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(2145, 1), float32], Tensor[(1620), float64]) {
  %390 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %391 = cast(%var_11264, dtype="int32") /* ty=Tensor[(715, 2), int32] */;
  %392 = reshape(%391, newshape=[13, 11, 10]) /* ty=Tensor[(13, 11, 10), int32] */;
  %393 = @func_9146(%392) /* ty=(Tensor[(13, 11, 10), bool], Tensor[(13, 11, 10), float32]) */;
  %394 = cast(meta[relay.Constant][24] /* ty=Tensor[(308), int64] */, dtype="int64") /* ty=Tensor[(308), int64] */;
  %395 = cast(meta[relay.Constant][25] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %396 = cast(%var_11318, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %397 = reshape(%394, newshape=[308]) /* ty=Tensor[(308), int64] */;
  %398 = reshape(%395, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %399 = reshape(%396, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %400 = @func_8447(%397, %398, %399) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) */;
  %401 = %390.0;
  %402 = %393.1;
  %403 = @func_4484() /* ty=Tensor[(9, 16, 13), bool] */;
  %404 = %400.1;
  (%401, %402, %var_11264, %403, %404, meta[relay.Constant][24] /* ty=Tensor[(308), int64] */, meta[relay.Constant][25] /* ty=Tensor[(2145, 1), float32] */, %var_11318)
}

def @func_8056(%var_8038: Tensor[(1620), float64]) -> Tensor[(1620), bool] {
  %405 = @func_4571() /* ty=Tensor[(1620), float64] */;
  %406 = cast(%var_8038, dtype="bool") /* ty=Tensor[(1620), bool] */;
  %407 = shape_of(%405, dtype="int32") /* ty=Tensor[(1), int32] */;
  %408 = cast(%405, dtype="bool") /* ty=Tensor[(1620), bool] */;
  %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?), bool] */;
  equal(%408, %409) /* ty=Tensor[(1620), bool] */
}

def @func_7953(%var_7929: float32) -> (Tensor[(9, 16, 13), float64], Tensor[(2, 4, 7), float64], Tensor[(9, 15, 12), float64], float32, Tensor[(384), float32], Tensor[(2, 4, 7), float32], Tensor[(9, 16, 13), bool]) {
  %410 = @func_7171() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %411 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 4, 7), float64] */, dtype="float64") /* ty=Tensor[(2, 4, 7), float64] */;
  %412 = sqrt(%411) /* ty=Tensor[(2, 4, 7), float64] */;
  %413 = cast(%412, dtype="float64") /* ty=Tensor[(2, 4, 7), float64] */;
  %414 = atanh(%413) /* ty=Tensor[(2, 4, 7), float64] */;
  %415 = cast(%414, dtype="float64") /* ty=Tensor[(2, 4, 7), float64] */;
  %416 = shape_of(%412, dtype="int32") /* ty=Tensor[(3), int32] */;
  %417 = cast(%412, dtype="float64") /* ty=Tensor[(2, 4, 7), float64] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %419 = %410.0;
  %420 = cast(%419, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %421 = cast(%var_7929, dtype="float32") /* ty=float32 */;
  %422 = cast(meta[relay.Constant][27] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %423 = reshape(%420, newshape=[9, 16, 13]) /* ty=Tensor[(9, 16, 13), float64] */;
  %424 = reshape(%421, newshape=[]) /* ty=float32 */;
  %425 = reshape(%422, newshape=[48, 8]) /* ty=Tensor[(48, 8), float32] */;
  %426 = @func_5838(%423, %424, %425) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(6, 4, 16), float32], float32, Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(48, 8), float32]) */;
  %427 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 4, 7), float64] */, dtype="float32") /* ty=Tensor[(2, 4, 7), float32] */;
  %428 = shape_of(%412, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%412, dtype="float32") /* ty=Tensor[(2, 4, 7), float32] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %431 = multiply(%417, %418) /* ty=Tensor[(2, 4, 7), float64] */;
  %432 = %426.4;
  %433 = floor_mod(%429, %430) /* ty=Tensor[(2, 4, 7), float32] */;
  %434 = @func_4484() /* ty=Tensor[(9, 16, 13), bool] */;
  (%419, %431, %432, %var_7929, meta[relay.Constant][27] /* ty=Tensor[(384), float32] */, %433, %434)
}

def @func_11696() -> (Tensor[(9, 16, 13), uint16],) {
  %435 = @func_8344() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %436 = %435.0;
  (%436,)
}

def @func_6779(%var_6722: Tensor[(9, 14, 9), float32], %var_6751: Tensor[(2145), float32]) -> (Tensor[(9, 14, 9), float32], Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(9, 16, 13), uint16], Tensor[(2145), bool], Tensor[(11, 4, 7), int64], Tensor[(6, 270), float64], Tensor[(9, 16, 13), float64]) {
  %437 = cast(%var_6722, dtype="float32") /* ty=Tensor[(9, 14, 9), float32] */;
  %438 = @func_3686() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) */;
  %439 = cast(meta[relay.Constant][28] /* ty=Tensor[(308), int64] */, dtype="int64") /* ty=Tensor[(308), int64] */;
  %440 = reshape(%439, newshape=[308]) /* ty=Tensor[(308), int64] */;
  %441 = @func_3730(%440) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1620), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) */;
  %442 = %441.3;
  %443 = cast(%442, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %444 = log(%443) /* ty=Tensor[(2145), float32] */;
  %445 = cast(%var_6751, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %446 = shape_of(%444, dtype="int32") /* ty=Tensor[(1), int32] */;
  %447 = cast(%444, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?), bool] */;
  %449 = cast(meta[relay.Constant][28] /* ty=Tensor[(308), int64] */, dtype="int64") /* ty=Tensor[(308), int64] */;
  %450 = cast(meta[relay.Constant][28] /* ty=Tensor[(308), int64] */, dtype="int64") /* ty=Tensor[(308), int64] */;
  %451 = cast(%444, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %452 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 270), float64] */, dtype="float64") /* ty=Tensor[(6, 270), float64] */;
  %453 = reshape(%449, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
  %454 = reshape(%450, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
  %455 = reshape(%451, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %456 = reshape(%452, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %457 = @func_3075(%453, %454, %455, %456) /* ty=(Tensor[(11, 4, 7), int64], Tensor[(1, 3, 11), float64], Tensor[(11, 3), float64], Tensor[(1620), float64], Tensor[(2145), float32], Tensor[(1620), float64]) */;
  %458 = @func_6639() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) */;
  %459 = cosh(%437) /* ty=Tensor[(9, 14, 9), float32] */;
  %460 = %438.1;
  %461 = @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */;
  %462 = equal(%447, %448) /* ty=Tensor[(2145), bool] */;
  %463 = %457.0;
  %464 = %458.0;
  (%459, %460, meta[relay.Constant][28] /* ty=Tensor[(308), int64] */, %461, %462, %463, meta[relay.Constant][29] /* ty=Tensor[(6, 270), float64] */, %464)
}

def @func_10439() -> (float32,) {
  %465 = @func_9934() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], float32) */;
  %466 = %465.6;
  (%466,)
}

def @func_12122(%var_12119: Tensor[(1620), float64]) -> (Tensor[(9, 16, 13), float64], Tensor[(13, 11, 10), float32], Tensor[(1430), int32], Tensor[(1620), float64]) {
  %467 = cast(meta[relay.Constant][30] /* ty=Tensor[(1430), int32] */, dtype="int32") /* ty=Tensor[(1430), int32] */;
  %468 = cast(%var_12119, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %469 = reshape(%467, newshape=[715, 2]) /* ty=Tensor[(715, 2), int32] */;
  %470 = reshape(%468, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %471 = @func_11342(%469, %470) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(13, 11, 10), float32], Tensor[(715, 2), int32], Tensor[(9, 16, 13), bool], Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(2145, 1), float32], Tensor[(1620), float64]) */;
  %472 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
  %473 = %471.1;
  (%472, %473, meta[relay.Constant][30] /* ty=Tensor[(1430), int32] */, %var_12119)
}

def @func_11590() -> (Tensor[(16, 15, 5), bool],) {
  %474 = @func_5282() /* ty=(Tensor[(1, 15, 5), float32],) */;
  %475 = %474.0;
  %476 = cast(%475, dtype="bool") /* ty=Tensor[(1, 15, 5), bool] */;
  %477 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 15, 5), float32] */, dtype="bool") /* ty=Tensor[(16, 15, 5), bool] */;
  %478 = equal(%476, %477) /* ty=Tensor[(16, 15, 5), bool] */;
  (%478,)
}

def @func_3686() -> (Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) {
  %479 = @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %480 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %481 = %479.2;
  %482 = %480.0;
  (%481, %482)
}

def @func_5242() -> (Tensor[(9, 16, 13), bool],) {
  %483 = @func_4484() /* ty=Tensor[(9, 16, 13), bool] */;
  (%483,)
}

def @func_12211(%var_12185: Tensor[(1008), float64]) -> (Tensor[(1620), float64], Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], Tensor[(1008), float64]) {
  %484 = @func_10486() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %485 = @func_10966() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %486 = cast(%var_12185, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %487 = reshape(%486, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %488 = @func_5081(%487) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64]) */;
  %489 = %484.0;
  %490 = %485.0;
  %491 = %488.1;
  (%489, %490, %491, %var_12185)
}

def @func_10632() -> Tensor[(9, 16, 13), uint16] {
  @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_10486() -> (Tensor[(1620), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %492 = @func_6550() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %493 = @func_4571() /* ty=Tensor[(1620), float64] */;
  %494 = %492.1;
  %495 = @func_8707() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%493, %494, %495)
}

def @func_11962() -> (Tensor[(1, 15, 5), float32], Tensor[(3, 15, 5), float32]) {
  %496 = @func_6606() /* ty=(Tensor[(1, 15, 5), float32], Tensor[(9, 16, 13), uint16]) */;
  %497 = %496.0;
  %498 = cast(%497, dtype="float32") /* ty=Tensor[(1, 15, 5), float32] */;
  %499 = cast(%497, dtype="float64") /* ty=Tensor[(1, 15, 5), float64] */;
  %500 = sqrt(%499) /* ty=Tensor[(1, 15, 5), float64] */;
  %501 = cast(%500, dtype="float32") /* ty=Tensor[(1, 15, 5), float32] */;
  %502 = cast(meta[relay.Constant][32] /* ty=Tensor[(3, 15, 5), float64] */, dtype="float32") /* ty=Tensor[(3, 15, 5), float32] */;
  %503 = sin(%498) /* ty=Tensor[(1, 15, 5), float32] */;
  %504 = floor_mod(%501, %502) /* ty=Tensor[(3, 15, 5), float32] */;
  (%503, %504)
}

def @func_10538() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %505 = @func_6886() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1620), float64]) */;
  %506 = %505.0;
  %507 = @func_5755() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%506, %507)
}

def @func_8888() -> (Tensor[(1620), float64],) {
  %508 = @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %509 = %508.2;
  (%509,)
}

def @func_9305() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %510 = @func_3346() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %511 = @func_3424() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %512 = %510.0;
  %513 = %511.0;
  (%512, %513)
}

def @func_11626() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) {
  %514 = @func_6173() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %515 = @func_8671() /* ty=Tensor[(9, 16, 13), float64] */;
  %516 = %514.0;
  (%515, %516)
}

def @func_3480() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) {
  %517 = cast(meta[relay.Constant][33] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %518 = reshape(%517, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
  %519 = @func_721(%518) /* ty=(Tensor[(9, 15, 12), float64],) */;
  %520 = @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */;
  %521 = %519.0;
  (%520, %521, meta[relay.Constant][33] /* ty=Tensor[(1620), float64] */)
}

def @func_8759(%var_8733: float32, %var_8734: Tensor[(384), float32]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], float32, float32, Tensor[(384), float32], Tensor[(9, 16, 13), uint16]) {
  %522 = @func_7553() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(1620), float64]) */;
  %523 = %522.0;
  %524 = cast(%523, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %525 = cast(%var_8733, dtype="float32") /* ty=float32 */;
  %526 = cast(%var_8734, dtype="float32") /* ty=Tensor[(384), float32] */;
  %527 = reshape(%524, newshape=[9, 16, 13]) /* ty=Tensor[(9, 16, 13), float64] */;
  %528 = reshape(%525, newshape=[]) /* ty=float32 */;
  %529 = reshape(%526, newshape=[48, 8]) /* ty=Tensor[(48, 8), float32] */;
  %530 = @func_5838(%527, %528, %529) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(6, 4, 16), float32], float32, Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(48, 8), float32]) */;
  %531 = @func_6452() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %532 = @func_8707() /* ty=Tensor[(9, 16, 13), uint16] */;
  %533 = %530.2;
  %534 = %531.0;
  (%532, %523, %533, %var_8733, %var_8734, %534)
}

def @func_8866() -> Tensor[(9, 16, 13), float64] {
  %535 = @func_5446() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %535.0
}

def @func_9489() -> (Tensor[(9, 16, 13), uint16],) {
  %536 = @func_5050() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %537 = %536.0;
  (%537,)
}

def @func_11191(%var_11163: Tensor[(420), float32], %var_11164: int8) -> (Tensor[(9, 16, 13), uint16], Tensor[(14, 2, 15), float32], Tensor[(420), float32], int8, Tensor[(1620), float64], Tensor[(16, 7, 9), uint64]) {
  %538 = cast(%var_11163, dtype="float32") /* ty=Tensor[(420), float32] */;
  %539 = cast(%var_11163, dtype="float32") /* ty=Tensor[(420), float32] */;
  %540 = cast(%var_11164, dtype="int8") /* ty=int8 */;
  %541 = reshape(%538, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), float32] */;
  %542 = reshape(%539, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), float32] */;
  %543 = reshape(%540, newshape=[]) /* ty=int8 */;
  %544 = @func_2824(%541, %542, %543) /* ty=(Tensor[(14, 2, 15), bool], Tensor[(14, 2, 15), float32], Tensor[(16, 7, 9), uint64], Tensor[(1008), float32], Tensor[(84, 12), float32], int8, Tensor[(1440), int8]) */;
  %545 = @func_8888() /* ty=(Tensor[(1620), float64],) */;
  %546 = cast(%var_11163, dtype="float32") /* ty=Tensor[(420), float32] */;
  %547 = %544.1;
  %548 = cast(%547, dtype="float32") /* ty=Tensor[(14, 2, 15), float32] */;
  %549 = cast(%var_11164, dtype="int8") /* ty=int8 */;
  %550 = reshape(%546, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), float32] */;
  %551 = reshape(%548, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), float32] */;
  %552 = reshape(%549, newshape=[]) /* ty=int8 */;
  %553 = @func_2824(%550, %551, %552) /* ty=(Tensor[(14, 2, 15), bool], Tensor[(14, 2, 15), float32], Tensor[(16, 7, 9), uint64], Tensor[(1008), float32], Tensor[(84, 12), float32], int8, Tensor[(1440), int8]) */;
  %554 = @func_10838() /* ty=Tensor[(9, 16, 13), uint16] */;
  %555 = %545.0;
  %556 = %553.2;
  (%554, %547, %var_11163, %var_11164, %555, %556)
}

def @func_7782() -> Tensor[(9, 16, 13), uint16] {
  %557 = @func_3151() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %557.0
}

def @func_6886() -> (Tensor[(9, 16, 13), uint16], Tensor[(1620), float64]) {
  %558 = @func_5755() /* ty=Tensor[(9, 16, 13), uint16] */;
  %559 = @func_5470() /* ty=Tensor[(1620), float64] */;
  (%558, %559)
}

def @func_5838(%var_5815: Tensor[(9, 16, 13), float64], %var_5822: float32, %var_5823: Tensor[(48, 8), float32]) -> (Tensor[(9, 16, 13), float64], Tensor[(6, 4, 16), float32], float32, Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(48, 8), float32]) {
  %560 = @func_4892() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %561 = %560.0;
  %562 = cast(%var_5815, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %563 = shape_of(%561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%561, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %566 = cast(%var_5822, dtype="float32") /* ty=float32 */;
  %567 = cast(%var_5823, dtype="float32") /* ty=Tensor[(48, 8), float32] */;
  %568 = reshape(%566, newshape=[]) /* ty=float32 */;
  %569 = reshape(%567, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), float32] */;
  %570 = @func_5019(%568, %569) /* ty=(Tensor[(6, 4, 16), float32], Tensor[(9, 16, 13), uint16]) */;
  %571 = @func_4892() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %572 = cast(meta[relay.Constant][34] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %573 = reshape(%572, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
  %574 = @func_721(%573) /* ty=(Tensor[(9, 15, 12), float64],) */;
  %575 = cast(%var_5823, dtype="float32") /* ty=Tensor[(48, 8), float32] */;
  %576 = floor_divide(%564, %565) /* ty=Tensor[(9, 16, 13), float64] */;
  %577 = %570.0;
  %578 = %571.0;
  %579 = %574.0;
  %580 = log10(%575) /* ty=Tensor[(48, 8), float32] */;
  (%576, %577, %var_5822, %578, %579, meta[relay.Constant][34] /* ty=Tensor[(1620), float64] */, %580)
}

def @func_3194(%var_3183: Tensor[(9, 16, 13), float64]) -> (Tensor[(9, 16, 13), bool], Tensor[(1008), float32], uint8) {
  %581 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
  %582 = cast(%var_3183, dtype="bool") /* ty=Tensor[(9, 16, 13), bool] */;
  %583 = shape_of(%581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%581, dtype="bool") /* ty=Tensor[(9, 16, 13), bool] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %586 = cast(meta[relay.Constant][35] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %587 = reshape(%586, newshape=[]) /* ty=uint8 */;
  %588 = @func_1304(%587) /* ty=(Tensor[(3, 1, 5), uint8], Tensor[(16, 7, 9), float32], Tensor[(1008), float32]) */;
  %589 = greater_equal(%584, %585) /* ty=Tensor[(9, 16, 13), bool] */;
  %590 = %588.2;
  (%589, %590, meta[relay.Constant][35] /* ty=uint8 */)
}

def @func_6999() -> Tensor[(9, 16, 13), float64] {
  %591 = @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */;
  %592 = @func_5242() /* ty=(Tensor[(9, 16, 13), bool],) */;
  %593 = %592.0;
  %594 = cast(%593, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %595 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %596 = cast(%591, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  subtract(%596, %597) /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_5600(%var_5536: Tensor[(105), uint32], %var_5537: Tensor[(33), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], uint32, Tensor[(105), uint32], Tensor[(33), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) {
  %598 = @func_4262() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) */;
  %599 = cast(meta[relay.Constant][36] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %600 = cast(%var_5536, dtype="uint32") /* ty=Tensor[(105), uint32] */;
  %601 = cast(%var_5537, dtype="float64") /* ty=Tensor[(33), float64] */;
  %602 = reshape(%599, newshape=[]) /* ty=uint32 */;
  %603 = reshape(%600, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), uint32] */;
  %604 = reshape(%601, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %605 = @func_2669(%602, %603, %604) /* ty=(Tensor[(5, 7, 3), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(33), float64], Tensor[(1440), int8], Tensor[(9, 15, 12), float64], Tensor[(1008), float32], Tensor[(1, 3, 11), float64], Tensor[(16, 7, 9), float64]) */;
  %606 = cast(%var_5537, dtype="float64") /* ty=Tensor[(33), float64] */;
  %607 = %598.0;
  %608 = @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */;
  %609 = %605.7;
  %610 = exp(%606) /* ty=Tensor[(33), float64] */;
  %611 = @func_4813() /* ty=Tensor[(9, 16, 13), float64] */;
  %612 = @func_4277() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%607, %608, %609, meta[relay.Constant][36] /* ty=uint32 */, %var_5536, %610, %611, %612)
}

def @func_10966() -> (Tensor[(9, 16, 13), uint16],) {
  %613 = @func_5755() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%613,)
}

def @func_3492(%var_3489: Tensor[(420), float32], %var_3490: int8) -> (Tensor[(9, 16, 13), float64], Tensor[(16, 7, 9), uint64], Tensor[(420), float32], int8) {
  %614 = cast(%var_3489, dtype="float32") /* ty=Tensor[(420), float32] */;
  %615 = cast(%var_3489, dtype="float32") /* ty=Tensor[(420), float32] */;
  %616 = cast(%var_3490, dtype="int8") /* ty=int8 */;
  %617 = reshape(%614, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), float32] */;
  %618 = reshape(%615, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), float32] */;
  %619 = reshape(%616, newshape=[]) /* ty=int8 */;
  %620 = @func_2824(%617, %618, %619) /* ty=(Tensor[(14, 2, 15), bool], Tensor[(14, 2, 15), float32], Tensor[(16, 7, 9), uint64], Tensor[(1008), float32], Tensor[(84, 12), float32], int8, Tensor[(1440), int8]) */;
  %621 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
  %622 = %620.2;
  (%621, %622, %var_3489, %var_3490)
}

def @func_5446() -> (Tensor[(9, 16, 13), float64],) {
  %623 = @func_5223() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), float64]) */;
  %624 = %623.1;
  (%624,)
}

def @func_3730(%var_3720: Tensor[(308), int64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(1620), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) {
  %625 = @func_3346() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %626 = cast(%var_3720, dtype="int64") /* ty=Tensor[(308), int64] */;
  %627 = cast(%var_3720, dtype="int64") /* ty=Tensor[(308), int64] */;
  %628 = cast(meta[relay.Constant][37] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %629 = cast(meta[relay.Constant][38] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %630 = reshape(%626, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
  %631 = reshape(%627, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
  %632 = reshape(%628, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %633 = reshape(%629, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %634 = @func_3075(%630, %631, %632, %633) /* ty=(Tensor[(11, 4, 7), int64], Tensor[(1, 3, 11), float64], Tensor[(11, 3), float64], Tensor[(1620), float64], Tensor[(2145), float32], Tensor[(1620), float64]) */;
  %635 = %625.0;
  %636 = %634.5;
  (%635, %636, %var_3720, meta[relay.Constant][37] /* ty=Tensor[(2145), float32] */, meta[relay.Constant][38] /* ty=Tensor[(1620), float64] */)
}

def @func_10456() -> Tensor[(9, 16, 13), float64] {
  %637 = @func_9934() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], float32) */;
  %637.0
}

def @func_2669(%var_2597: uint32, %var_2598: Tensor[(5, 7, 3), uint32], %var_2630: Tensor[(33), float64]) -> (Tensor[(5, 7, 3), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(33), float64], Tensor[(1440), int8], Tensor[(9, 15, 12), float64], Tensor[(1008), float32], Tensor[(1, 3, 11), float64], Tensor[(16, 7, 9), float64]) {
  %638 = cast(%var_2597, dtype="uint32") /* ty=uint32 */;
  %639 = cast(%var_2598, dtype="uint32") /* ty=Tensor[(5, 7, 3), uint32] */;
  %640 = logical_xor(%638, %639) /* ty=Tensor[(5, 7, 3), uint32] */;
  %641 = cast(%640, dtype="bool") /* ty=Tensor[(5, 7, 3), bool] */;
  %642 = cast(%var_2597, dtype="bool") /* ty=bool */;
  %643 = cast(%var_2630, dtype="float64") /* ty=Tensor[(33), float64] */;
  %644 = reshape(%643, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
  %645 = cast(%var_2597, dtype="int8") /* ty=int8 */;
  %646 = cast(meta[relay.Constant][39] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %647 = reshape(%645, newshape=[]) /* ty=int8 */;
  %648 = reshape(%646, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int8] */;
  %649 = @func_1492(%647, %648) /* ty=(Tensor[(9, 16, 10), uint64], Tensor[(16, 7, 9), uint64], Tensor[(84, 12), float32], Tensor[(33), float64], Tensor[(1, 3, 11), float64]) */;
  %650 = cast(meta[relay.Constant][40] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %651 = reshape(%650, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %652 = @func_1738(%651) /* ty=(Tensor[(11, 4, 14), float32], Tensor[(1008), int64], Tensor[(1620), float64], Tensor[(715, 3), float32], Tensor[(1620), float64], Tensor[(9, 15, 12), float64]) */;
  %653 = cast(%var_2597, dtype="int8") /* ty=int8 */;
  %654 = cast(meta[relay.Constant][39] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %655 = reshape(%653, newshape=[]) /* ty=int8 */;
  %656 = reshape(%654, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int8] */;
  %657 = @func_1492(%655, %656) /* ty=(Tensor[(9, 16, 10), uint64], Tensor[(16, 7, 9), uint64], Tensor[(84, 12), float32], Tensor[(33), float64], Tensor[(1, 3, 11), float64]) */;
  %658 = cast(meta[relay.Constant][40] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %659 = reshape(%658, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float32] */;
  %660 = @func_1190(%659) /* ty=(Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) */;
  %661 = not_equal(%641, %642) /* ty=Tensor[(5, 7, 3), bool] */;
  %662 = @func_610(%644) /* ty=Tensor[(1, 3, 11), float64] */;
  %663 = %649.3;
  %664 = %652.5;
  %665 = %657.4;
  %666 = %660.7;
  (%661, %662, %var_2630, %663, meta[relay.Constant][39] /* ty=Tensor[(1440), int8] */, %664, meta[relay.Constant][40] /* ty=Tensor[(1008), float32] */, %665, %666)
}

def @func_4626(%var_4602: Tensor[(9, 16, 13), uint16]) -> Tensor[(9, 16, 13), int16] {
  %667 = @func_4182() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %668 = %667.1;
  %669 = cast(%var_4602, dtype="int16") /* ty=Tensor[(9, 16, 13), int16] */;
  %670 = shape_of(%668, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(%668, dtype="int16") /* ty=Tensor[(9, 16, 13), int16] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%671, %672) /* ty=Tensor[(9, 16, 13), int16] */
}

def @func_6606() -> (Tensor[(1, 15, 5), float32], Tensor[(9, 16, 13), uint16]) {
  %673 = @func_5282() /* ty=(Tensor[(1, 15, 5), float32],) */;
  %674 = @func_3424() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %675 = %673.0;
  %676 = %674.0;
  (%675, %676)
}

def @func_7138() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) {
  %677 = @func_5050() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %678 = @func_6999() /* ty=Tensor[(9, 16, 13), float64] */;
  %679 = %677.0;
  (%678, %679)
}

def @func_11370() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %680 = @func_9934() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], float32) */;
  %681 = @func_9409() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %682 = @func_10893() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(308), int64], Tensor[(9, 16, 13), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) */;
  %683 = %680.3;
  %684 = %681.0;
  %685 = %682.5;
  (%683, %684, %685)
}

def @func_9409() -> (Tensor[(9, 16, 13), uint16],) {
  %686 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %687 = %686.0;
  (%687,)
}

def @func_7670(%var_7666: Tensor[(1008), float64], %var_7668: Tensor[(6, 270), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(7, 2, 9), uint32], Tensor[(1008), float64], Tensor[(33, 1), float64], Tensor[(6, 270), float64]) {
  %688 = @func_5966() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %689 = @func_6270() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %690 = cast(%var_7666, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %691 = cast(meta[relay.Constant][41] /* ty=Tensor[(33, 1), float64] */, dtype="float64") /* ty=Tensor[(33, 1), float64] */;
  %692 = cast(%var_7668, dtype="float64") /* ty=Tensor[(6, 270), float64] */;
  %693 = cast(%var_7666, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %694 = reshape(%690, newshape=[84, 12]) /* ty=Tensor[(84, 12), float64] */;
  %695 = reshape(%691, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
  %696 = reshape(%692, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %697 = reshape(%693, newshape=[84, 12]) /* ty=Tensor[(84, 12), float64] */;
  %698 = @func_4443(%694, %695, %696, %697) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(715, 3), float32], Tensor[(33, 1), float64], Tensor[(1620), float64], Tensor[(7, 2, 9), uint32], Tensor[(126), uint32], Tensor[(84, 12), int8]) */;
  %699 = %688.0;
  %700 = %689.1;
  %701 = %698.4;
  (%699, %700, %701, %var_7666, meta[relay.Constant][41] /* ty=Tensor[(33, 1), float64] */, %var_7668)
}

def @func_4762() -> Tensor[(9, 16, 13), uint16] {
  @func_4039() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_5940(%var_5896: Tensor[(9, 15, 12), float64]) -> (Tensor[(9, 15, 12), int32], Tensor[(9, 15, 12), uint16], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(9, 16, 13), uint16]) {
  %702 = @func_5004() /* ty=Tensor[(9, 15, 12), float64] */;
  %703 = @func_5223() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), float64]) */;
  %704 = %703.0;
  %705 = cast(%704, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %706 = shape_of(%702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(%702, dtype="int32") /* ty=Tensor[(9, 15, 12), int32] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %709 = cast(%var_5896, dtype="uint16") /* ty=Tensor[(9, 15, 12), uint16] */;
  %710 = shape_of(%702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%702, dtype="uint16") /* ty=Tensor[(9, 15, 12), uint16] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %713 = @func_5223() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), float64]) */;
  %714 = @func_3424() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %715 = @func_4939() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %716 = bitwise_and(%707, %708) /* ty=Tensor[(9, 15, 12), int32] */;
  %717 = minimum(%711, %712) /* ty=Tensor[(9, 15, 12), uint16] */;
  %718 = %713.1;
  %719 = %714.0;
  %720 = @func_5004() /* ty=Tensor[(9, 15, 12), float64] */;
  %721 = %715.0;
  (%716, %717, %718, %719, %720, %721)
}

def @func_6063(%var_6046: Tensor[(16, 15, 5), float32]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(16, 15, 5), uint32]) {
  %722 = @func_5966() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %723 = @func_5282() /* ty=(Tensor[(1, 15, 5), float32],) */;
  %724 = %723.0;
  %725 = cast(%724, dtype="uint32") /* ty=Tensor[(1, 15, 5), uint32] */;
  %726 = cast(%var_6046, dtype="uint32") /* ty=Tensor[(16, 15, 5), uint32] */;
  %727 = %722.0;
  %728 = @func_4039() /* ty=Tensor[(9, 16, 13), uint16] */;
  %729 = @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */;
  %730 = multiply(%725, %726) /* ty=Tensor[(16, 15, 5), uint32] */;
  (%727, %728, %729, %730)
}

def @func_8106() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), bool], Tensor[(1440), int8], Tensor[(1440), int8]) {
  %731 = @func_5242() /* ty=(Tensor[(9, 16, 13), bool],) */;
  %732 = cast(meta[relay.Constant][42] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %733 = reshape(%732, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %734 = @func_3851(%733) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1440), int8], Tensor[(84, 12), int32]) */;
  %735 = @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */;
  %736 = %731.0;
  %737 = %734.1;
  (%735, %736, %737, meta[relay.Constant][42] /* ty=Tensor[(1440), int8] */)
}

def @func_4731(%var_4660: Tensor[(1008), float64], %var_4661: Tensor[(33), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(7, 2, 9), uint32], Tensor[(33), float64], Tensor[(1620), float64], Tensor[(1008), float64], Tensor[(9, 15, 12), float64], Tensor[(9, 16, 13), int8]) {
  %738 = cast(%var_4660, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %739 = cast(%var_4661, dtype="float64") /* ty=Tensor[(33), float64] */;
  %740 = cast(meta[relay.Constant][43] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %741 = cast(%var_4660, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %742 = reshape(%738, newshape=[84, 12]) /* ty=Tensor[(84, 12), float64] */;
  %743 = reshape(%739, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
  %744 = reshape(%740, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %745 = reshape(%741, newshape=[84, 12]) /* ty=Tensor[(84, 12), float64] */;
  %746 = @func_4443(%742, %743, %744, %745) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(715, 3), float32], Tensor[(33, 1), float64], Tensor[(1620), float64], Tensor[(7, 2, 9), uint32], Tensor[(126), uint32], Tensor[(84, 12), int8]) */;
  %747 = cast(%var_4660, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %748 = cast(meta[relay.Constant][43] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %749 = reshape(%748, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
  %750 = @func_721(%749) /* ty=(Tensor[(9, 15, 12), float64],) */;
  %751 = @func_4277() /* ty=Tensor[(9, 16, 13), uint16] */;
  %752 = @func_3151() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %753 = %752.0;
  %754 = cast(%753, dtype="float32") /* ty=Tensor[(9, 16, 13), float32] */;
  %755 = acosh(%754) /* ty=Tensor[(9, 16, 13), float32] */;
  %756 = cast(%755, dtype="int8") /* ty=Tensor[(9, 16, 13), int8] */;
  %757 = shape_of(%751, dtype="int32") /* ty=Tensor[(3), int32] */;
  %758 = cast(%751, dtype="int8") /* ty=Tensor[(9, 16, 13), int8] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %760 = @func_4039() /* ty=Tensor[(9, 16, 13), uint16] */;
  %761 = %746.4;
  %762 = cosh(%747) /* ty=Tensor[(1008), float64] */;
  %763 = %750.0;
  %764 = right_shift(%758, %759) /* ty=Tensor[(9, 16, 13), int8] */;
  (%760, %761, %var_4661, meta[relay.Constant][43] /* ty=Tensor[(1620), float64] */, %762, %763, %764)
}

def @func_5122(%var_5114: Tensor[(9, 16, 13), uint16]) -> Tensor[(9, 16, 13), bool] {
  %765 = @func_5050() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %766 = %765.0;
  %767 = cast(%var_5114, dtype="bool") /* ty=Tensor[(9, 16, 13), bool] */;
  %768 = shape_of(%766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%766, dtype="bool") /* ty=Tensor[(9, 16, 13), bool] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%769, %770) /* ty=Tensor[(9, 16, 13), bool] */
}

def @func_1190(%var_1111: Tensor[(16, 7, 9), float32]) -> (Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) {
  %771 = cast(%var_1111, dtype="float32") /* ty=Tensor[(16, 7, 9), float32] */;
  %772 = cast(%var_1111, dtype="float64") /* ty=Tensor[(16, 7, 9), float64] */;
  %773 = sqrt(%772) /* ty=Tensor[(16, 7, 9), float64] */;
  %774 = cast(%773, dtype="uint64") /* ty=Tensor[(16, 7, 9), uint64] */;
  %775 = shape_of(%var_1111, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%var_1111, dtype="uint64") /* ty=Tensor[(16, 7, 9), uint64] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %778 = cast(meta[relay.Constant][44] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %779 = reshape(%778, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
  %780 = @func_610(%779) /* ty=Tensor[(1, 3, 11), float64] */;
  %781 = cast(%780, dtype="bool") /* ty=Tensor[(1, 3, 11), bool] */;
  %782 = cast(meta[relay.Constant][45] /* ty=Tensor[(7, 3, 11), float64] */, dtype="bool") /* ty=Tensor[(7, 3, 11), bool] */;
  %783 = cast(meta[relay.Constant][46] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %784 = cast(meta[relay.Constant][47] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %785 = reshape(%783, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float32] */;
  %786 = reshape(%784, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %787 = @func_917(%785, %786) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %788 = cast(%773, dtype="float64") /* ty=Tensor[(16, 7, 9), float64] */;
  %789 = cast(%780, dtype="float64") /* ty=Tensor[(1, 3, 11), float64] */;
  %790 = reshape(%789, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
  %791 = log2(%771) /* ty=Tensor[(16, 7, 9), float32] */;
  %792 = right_shift(%776, %777) /* ty=Tensor[(16, 7, 9), uint64] */;
  %793 = less(%781, %782) /* ty=Tensor[(7, 3, 11), bool] */;
  %794 = %787.0;
  %795 = sinh(%788) /* ty=Tensor[(16, 7, 9), float64] */;
  %796 = @func_610(%790) /* ty=Tensor[(1, 3, 11), float64] */;
  (%791, %792, meta[relay.Constant][44] /* ty=Tensor[(33), float64] */, %793, %794, meta[relay.Constant][46] /* ty=Tensor[(2145), float32] */, meta[relay.Constant][47] /* ty=Tensor[(1620), float64] */, %795, %796)
}

def @func_4277() -> Tensor[(9, 16, 13), uint16] {
  @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_4813() -> Tensor[(9, 16, 13), float64] {
  @func_3129() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_7629() -> (Tensor[(9, 16, 13), uint16], Tensor[(1440), int8], uint32, Tensor[(105), uint32], Tensor[(1, 33), float64]) {
  %797 = cast(meta[relay.Constant][48] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %798 = cast(meta[relay.Constant][49] /* ty=Tensor[(105), uint32] */, dtype="uint32") /* ty=Tensor[(105), uint32] */;
  %799 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 33), float64] */, dtype="float64") /* ty=Tensor[(1, 33), float64] */;
  %800 = reshape(%797, newshape=[]) /* ty=uint32 */;
  %801 = reshape(%798, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), uint32] */;
  %802 = reshape(%799, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %803 = @func_2669(%800, %801, %802) /* ty=(Tensor[(5, 7, 3), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(33), float64], Tensor[(1440), int8], Tensor[(9, 15, 12), float64], Tensor[(1008), float32], Tensor[(1, 3, 11), float64], Tensor[(16, 7, 9), float64]) */;
  %804 = @func_4277() /* ty=Tensor[(9, 16, 13), uint16] */;
  %805 = %803.4;
  (%804, %805, meta[relay.Constant][48] /* ty=uint32 */, meta[relay.Constant][49] /* ty=Tensor[(105), uint32] */, meta[relay.Constant][50] /* ty=Tensor[(1, 33), float64] */)
}

def @func_10658() -> Tensor[(1620), float64] {
  %806 = @func_8888() /* ty=(Tensor[(1620), float64],) */;
  %806.0
}

def @func_10254(%var_10196: Tensor[(15, 11, 5), float64]) -> (Tensor[(15, 11, 5), float64], Tensor[(9, 16, 13), uint16]) {
  %807 = cast(%var_10196, dtype="float64") /* ty=Tensor[(15, 11, 5), float64] */;
  %808 = asin(%807) /* ty=Tensor[(15, 11, 5), float64] */;
  %809 = cast(%808, dtype="bool") /* ty=Tensor[(15, 11, 5), bool] */;
  %810 = shape_of(%var_10196, dtype="int32") /* ty=Tensor[(3), int32] */;
  %811 = cast(%var_10196, dtype="bool") /* ty=Tensor[(15, 11, 5), bool] */;
  %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %813 = logical_and(%811, %812) /* ty=Tensor[(15, 11, 5), bool] */;
  %814 = cast(%var_10196, dtype="float64") /* ty=Tensor[(15, 11, 5), float64] */;
  %815 = shape_of(%813, dtype="int32") /* ty=Tensor[(3), int32] */;
  %816 = cast(%813, dtype="float64") /* ty=Tensor[(15, 11, 5), float64] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %818 = mod(%816, %817) /* ty=Tensor[(15, 11, 5), float64] */;
  %819 = @func_4277() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%818, %819)
}

def @func_3129() -> Tensor[(9, 16, 13), float64] {
  %820 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %821 = %820.0;
  %822 = cast(%821, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  erf(%822) /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_4411(%var_4361: Tensor[(420), float32]) -> (Tensor[(1620), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(?, 3, 11), bool], Tensor[(9, 15, 12), float64], Tensor[(420), float32], int8, Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), float64], Tensor[(16, 7, 9), float32], Tensor[(9, 16, 13), float64], Tensor[(2145, 308), float64], Tensor[(9, 16, 13), float64]) {
  %823 = cast(meta[relay.Constant][52] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %824 = cast(meta[relay.Constant][51] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %825 = reshape(%823, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float32] */;
  %826 = reshape(%824, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %827 = @func_917(%825, %826) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %828 = cast(meta[relay.Constant][53] /* ty=Tensor[(308), int64] */, dtype="int64") /* ty=Tensor[(308), int64] */;
  %829 = cast(meta[relay.Constant][53] /* ty=Tensor[(308), int64] */, dtype="int64") /* ty=Tensor[(308), int64] */;
  %830 = cast(meta[relay.Constant][52] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %831 = cast(meta[relay.Constant][51] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %832 = reshape(%828, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
  %833 = reshape(%829, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
  %834 = reshape(%830, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %835 = reshape(%831, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %836 = @func_3075(%832, %833, %834, %835) /* ty=(Tensor[(11, 4, 7), int64], Tensor[(1, 3, 11), float64], Tensor[(11, 3), float64], Tensor[(1620), float64], Tensor[(2145), float32], Tensor[(1620), float64]) */;
  %837 = %836.1;
  %838 = cast(%837, dtype="float64") /* ty=Tensor[(1, 3, 11), float64] */;
  %839 = reshape(%838, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
  %840 = @func_610(%839) /* ty=Tensor[(1, 3, 11), float64] */;
  %841 = cast(%837, dtype="bool") /* ty=Tensor[(1, 3, 11), bool] */;
  %842 = shape_of(%840, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(%840, dtype="bool") /* ty=Tensor[(1, 3, 11), bool] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %845 = cast(meta[relay.Constant][52] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %846 = %827.1;
  %847 = cast(%846, dtype="float64") /* ty=Tensor[(9, 15, 12), float64] */;
  %848 = reshape(%845, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float32] */;
  %849 = reshape(%847, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %850 = @func_917(%848, %849) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %851 = cast(meta[relay.Constant][52] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %852 = cast(%846, dtype="float64") /* ty=Tensor[(9, 15, 12), float64] */;
  %853 = reshape(%851, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float32] */;
  %854 = reshape(%852, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %855 = @func_917(%853, %854) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %856 = cast(meta[relay.Constant][52] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %857 = %855.1;
  %858 = cast(%857, dtype="float64") /* ty=Tensor[(9, 15, 12), float64] */;
  %859 = reshape(%856, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float32] */;
  %860 = reshape(%858, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %861 = @func_917(%859, %860) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %862 = @func_4262() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) */;
  %863 = %862.1;
  %864 = cast(%863, dtype="float32") /* ty=Tensor[(9, 16, 13), float32] */;
  %865 = sigmoid(%864) /* ty=Tensor[(9, 16, 13), float32] */;
  %866 = cast(%var_4361, dtype="float32") /* ty=Tensor[(420), float32] */;
  %867 = cast(meta[relay.Constant][54] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %868 = reshape(%866, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %869 = reshape(%867, newshape=[]) /* ty=int8 */;
  %870 = @func_3492(%868, %869) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(16, 7, 9), uint64], Tensor[(420), float32], int8) */;
  %871 = %870.0;
  %872 = cast(%871, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %873 = shape_of(%865, dtype="int32") /* ty=Tensor[(3), int32] */;
  %874 = cast(%865, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %876 = @func_3667() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1008), float32], Tensor[(9, 16, 13), float64]) */;
  %877 = cast(meta[relay.Constant][54] /* ty=int8 */, dtype="uint8") /* ty=uint8 */;
  %878 = reshape(%877, newshape=[]) /* ty=uint8 */;
  %879 = @func_1304(%878) /* ty=(Tensor[(3, 1, 5), uint8], Tensor[(16, 7, 9), float32], Tensor[(1008), float32]) */;
  %880 = cast(%var_4361, dtype="float32") /* ty=Tensor[(420), float32] */;
  %881 = cast(meta[relay.Constant][54] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %882 = reshape(%880, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %883 = reshape(%881, newshape=[]) /* ty=int8 */;
  %884 = @func_3492(%882, %883) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(16, 7, 9), uint64], Tensor[(420), float32], int8) */;
  %885 = cast(meta[relay.Constant][52] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %886 = cast(meta[relay.Constant][53] /* ty=Tensor[(308), int64] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %887 = mod(%885, %886) /* ty=Tensor[(2145, 308), float32] */;
  %888 = cast(%887, dtype="bool") /* ty=Tensor[(2145, 308), bool] */;
  %889 = cast(meta[relay.Constant][53] /* ty=Tensor[(308), int64] */, dtype="bool") /* ty=Tensor[(308), bool] */;
  %890 = logical_and(%888, %889) /* ty=Tensor[(2145, 308), bool] */;
  %891 = cast(%890, dtype="float64") /* ty=Tensor[(2145, 308), float64] */;
  %892 = cast(%865, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %893 = atan(%892) /* ty=Tensor[(9, 16, 13), float64] */;
  %894 = cast(%865, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %895 = shape_of(%893, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(%893, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %898 = @func_4039() /* ty=Tensor[(9, 16, 13), uint16] */;
  %899 = equal(%843, %844) /* ty=Tensor[(?, 3, 11), bool] */;
  %900 = %850.1;
  %901 = %861.2;
  %902 = divide(%874, %875) /* ty=Tensor[(9, 16, 13), float64] */;
  %903 = %876.2;
  %904 = %879.1;
  %905 = %884.0;
  %906 = acosh(%891) /* ty=Tensor[(2145, 308), float64] */;
  %907 = floor_mod(%896, %897) /* ty=Tensor[(9, 16, 13), float64] */;
  (meta[relay.Constant][51] /* ty=Tensor[(1620), float64] */, %898, %846, %899, %900, %var_4361, meta[relay.Constant][54] /* ty=int8 */, %857, %901, %902, %903, %904, %905, %906, %907)
}

def @func_7363(%var_7262: Tensor[(1620), float64], %var_7355: Tensor[(84, 12), float64]) -> (Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float32], Tensor[(9, 16, 13), uint16], Tensor[(126), uint32], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(33), float64], Tensor[(84, 12), float64], Tensor[(9, 16, 13), float64]) {
  %908 = cast(%var_7262, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %909 = reshape(%908, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
  %910 = @func_721(%909) /* ty=(Tensor[(9, 15, 12), float64],) */;
  %911 = %910.0;
  %912 = cast(%var_7262, dtype="bool") /* ty=Tensor[(1620), bool] */;
  %913 = shape_of(%911, dtype="int32") /* ty=Tensor[(3), int32] */;
  %914 = cast(%911, dtype="bool") /* ty=Tensor[(9, 15, 12), bool] */;
  %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %916 = greater_equal(%914, %915) /* ty=Tensor[(9, 15, 12), bool] */;
  %917 = cast(%916, dtype="float32") /* ty=Tensor[(9, 15, 12), float32] */;
  %918 = cast(meta[relay.Constant][55] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %919 = cast(%var_7262, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %920 = reshape(%918, newshape=[21, 6]) /* ty=Tensor[(21, 6), uint32] */;
  %921 = reshape(%919, newshape=[540, 3]) /* ty=Tensor[(540, 3), float64] */;
  %922 = @func_3537(%920, %921) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(21, 6), uint32], Tensor[(540, 3), float64]) */;
  %923 = @func_6270() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %924 = cast(%var_7355, dtype="float64") /* ty=Tensor[(84, 12), float64] */;
  %925 = reshape(%924, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %926 = @func_6684(%925) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), bool], Tensor[(7, 2, 9), uint32], Tensor[(1008), float64], Tensor[(33), float64]) */;
  %927 = @func_4892() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %928 = @func_4800() /* ty=Tensor[(9, 16, 13), float64] */;
  %929 = acos(%917) /* ty=Tensor[(9, 15, 12), float32] */;
  %930 = %922.0;
  %931 = %923.0;
  %932 = @func_4582() /* ty=Tensor[(9, 16, 13), float64] */;
  %933 = %926.7;
  %934 = %927.0;
  (%928, %929, %930, meta[relay.Constant][55] /* ty=Tensor[(126), uint32] */, %931, %932, %933, %var_7355, %934)
}

def @func_4800() -> Tensor[(9, 16, 13), float64] {
  %935 = @func_3969() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %935.0
}

def @func_917(%var_895: Tensor[(15, 13, 11), float32], %var_901: Tensor[(1620), float64]) -> (Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) {
  %936 = cast(%var_895, dtype="float32") /* ty=Tensor[(15, 13, 11), float32] */;
  %937 = cast(%var_901, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %938 = reshape(%937, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
  %939 = @func_721(%938) /* ty=(Tensor[(9, 15, 12), float64],) */;
  %940 = cast(meta[relay.Constant][56] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %941 = shape_of(%var_901, dtype="int32") /* ty=Tensor[(1), int32] */;
  %942 = cast(%var_901, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?), float64] */;
  %944 = cos(%936) /* ty=Tensor[(15, 13, 11), float32] */;
  %945 = %939.0;
  %946 = divide(%942, %943) /* ty=Tensor[(1620), float64] */;
  (%944, %945, %946)
}

def @func_5019(%var_5010: float32, %var_5011: Tensor[(6, 4, 16), float32]) -> (Tensor[(6, 4, 16), float32], Tensor[(9, 16, 13), uint16]) {
  %947 = cast(%var_5010, dtype="float32") /* ty=float32 */;
  %948 = cast(%var_5011, dtype="float32") /* ty=Tensor[(6, 4, 16), float32] */;
  %949 = @func_3424() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %950 = floor_mod(%947, %948) /* ty=Tensor[(6, 4, 16), float32] */;
  %951 = %949.0;
  (%950, %951)
}

def @func_8388() -> Tensor[(9, 16, 13), float64] {
  @func_4800() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_9232(%var_9202: Tensor[(1008), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1620), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64], Tensor[(42), float64], Tensor[(9, 16, 13), uint16]) {
  %952 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %953 = @func_4262() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) */;
  %954 = cast(meta[relay.Constant][57] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %955 = cast(%var_9202, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %956 = reshape(%954, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %957 = reshape(%955, newshape=[84, 12]) /* ty=Tensor[(84, 12), float64] */;
  %958 = @func_7363(%956, %957) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float32], Tensor[(9, 16, 13), uint16], Tensor[(126), uint32], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(33), float64], Tensor[(84, 12), float64], Tensor[(9, 16, 13), float64]) */;
  %959 = cast(%var_9202, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %960 = reshape(%959, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float32] */;
  %961 = @func_1190(%960) /* ty=(Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) */;
  %962 = cast(meta[relay.Constant][58] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %963 = reshape(%962, newshape=[1, 7, 6]) /* ty=Tensor[(1, 7, 6), float64] */;
  %964 = @func_8256(%963) /* ty=(Tensor[(1620), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64], Tensor[(?, 7, 6), bool]) */;
  %965 = @func_3151() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %966 = %952.0;
  %967 = %953.0;
  %968 = %958.4;
  %969 = %961.2;
  %970 = %964.0;
  %971 = %965.0;
  (%966, %967, %968, meta[relay.Constant][57] /* ty=Tensor[(1620), float64] */, %var_9202, %969, %970, meta[relay.Constant][58] /* ty=Tensor[(42), float64] */, %971)
}

def @func_2438(%var_2405: Tensor[(7, 2, 9), uint32], %var_2429: Tensor[(1620), float64]) -> (Tensor[(7, 2, 9), uint32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) {
  %972 = cast(meta[relay.Constant][59] /* ty=Tensor[(7, 2, 1), uint32] */, dtype="uint32") /* ty=Tensor[(7, 2, 1), uint32] */;
  %973 = cast(%var_2405, dtype="uint32") /* ty=Tensor[(7, 2, 9), uint32] */;
  %974 = cast(%var_2429, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %975 = reshape(%974, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
  %976 = @func_721(%975) /* ty=(Tensor[(9, 15, 12), float64],) */;
  %977 = add(%972, %973) /* ty=Tensor[(7, 2, 9), uint32] */;
  %978 = %976.0;
  (%977, %978, %var_2429)
}

def @func_5050() -> (Tensor[(9, 16, 13), uint16],) {
  %979 = @func_4262() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) */;
  %980 = %979.0;
  (%980,)
}

def @func_1874(%var_1823: Tensor[(12, 7, 12), float64], %var_1824: Tensor[(12, 7, 12), float64], %var_1844: Tensor[(33), float64], %var_1854: Tensor[(1620), float64]) -> (Tensor[(12, 7, 12), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(9, 15, 12), float64], Tensor[(715, 3), float32], Tensor[(1620), float32]) {
  %981 = cast(%var_1824, dtype="float64") /* ty=Tensor[(12, 7, 12), float64] */;
  %982 = shape_of(%var_1823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %983 = cast(%var_1823, dtype="float64") /* ty=Tensor[(12, 7, 12), float64] */;
  %984 = dyn.reshape(%981, %982, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %985 = mod(%983, %984) /* ty=Tensor[(12, 7, 12), float64] */;
  %986 = cast(%var_1823, dtype="bool") /* ty=Tensor[(12, 7, 12), bool] */;
  %987 = shape_of(%985, dtype="int32") /* ty=Tensor[(3), int32] */;
  %988 = cast(%985, dtype="bool") /* ty=Tensor[(12, 7, 12), bool] */;
  %989 = dyn.reshape(%986, %987, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %990 = cast(%var_1844, dtype="float64") /* ty=Tensor[(33), float64] */;
  %991 = reshape(%990, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
  %992 = cast(meta[relay.Constant][60] /* ty=Tensor[(715, 3), float32] */, dtype="float32") /* ty=Tensor[(715, 3), float32] */;
  %993 = cast(%var_1854, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %994 = reshape(%992, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float32] */;
  %995 = reshape(%993, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %996 = @func_917(%994, %995) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %997 = cast(%var_1854, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %998 = greater(%988, %989) /* ty=Tensor[(12, 7, 12), bool] */;
  %999 = @func_610(%991) /* ty=Tensor[(1, 3, 11), float64] */;
  %1000 = %996.1;
  %1001 = sigmoid(%997) /* ty=Tensor[(1620), float32] */;
  (%998, %999, %var_1844, %1000, meta[relay.Constant][60] /* ty=Tensor[(715, 3), float32] */, %1001)
}

def @func_3621(%var_3614: Tensor[(308), int64], %var_3615: Tensor[(2145), float32], %var_3616: Tensor[(1620), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1620), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) {
  %1002 = @func_3424() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %1003 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %1004 = cast(%var_3614, dtype="int64") /* ty=Tensor[(308), int64] */;
  %1005 = cast(%var_3614, dtype="int64") /* ty=Tensor[(308), int64] */;
  %1006 = cast(%var_3615, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %1007 = cast(%var_3616, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %1008 = reshape(%1004, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
  %1009 = reshape(%1005, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
  %1010 = reshape(%1006, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %1011 = reshape(%1007, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %1012 = @func_3075(%1008, %1009, %1010, %1011) /* ty=(Tensor[(11, 4, 7), int64], Tensor[(1, 3, 11), float64], Tensor[(11, 3), float64], Tensor[(1620), float64], Tensor[(2145), float32], Tensor[(1620), float64]) */;
  %1013 = %1002.0;
  %1014 = %1003.0;
  %1015 = %1012.3;
  (%1013, %1014, %1015, %var_3614, %var_3615, %var_3616)
}

def @func_1492(%var_1455: int8, %var_1456: Tensor[(9, 16, 10), int8]) -> (Tensor[(9, 16, 10), uint64], Tensor[(16, 7, 9), uint64], Tensor[(84, 12), float32], Tensor[(33), float64], Tensor[(1, 3, 11), float64]) {
  %1016 = cast(%var_1455, dtype="bool") /* ty=bool */;
  %1017 = cast(%var_1456, dtype="bool") /* ty=Tensor[(9, 16, 10), bool] */;
  %1018 = less(%1016, %1017) /* ty=Tensor[(9, 16, 10), bool] */;
  %1019 = cast(%1018, dtype="float64") /* ty=Tensor[(9, 16, 10), float64] */;
  %1020 = atanh(%1019) /* ty=Tensor[(9, 16, 10), float64] */;
  %1021 = cast(%var_1456, dtype="uint64") /* ty=Tensor[(9, 16, 10), uint64] */;
  %1022 = shape_of(%1020, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1023 = cast(%1020, dtype="uint64") /* ty=Tensor[(9, 16, 10), uint64] */;
  %1024 = dyn.reshape(%1021, %1022, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1025 = cast(meta[relay.Constant][61] /* ty=Tensor[(84, 12), float32] */, dtype="float32") /* ty=Tensor[(84, 12), float32] */;
  %1026 = reshape(%1025, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float32] */;
  %1027 = @func_1190(%1026) /* ty=(Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) */;
  %1028 = cast(meta[relay.Constant][62] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %1029 = reshape(%1028, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
  %1030 = @func_610(%1029) /* ty=Tensor[(1, 3, 11), float64] */;
  %1031 = cast(%1030, dtype="float64") /* ty=Tensor[(1, 3, 11), float64] */;
  %1032 = bitwise_and(%1023, %1024) /* ty=Tensor[(9, 16, 10), uint64] */;
  %1033 = %1027.1;
  %1034 = sqrt(%1031) /* ty=Tensor[(1, 3, 11), float64] */;
  (%1032, %1033, meta[relay.Constant][61] /* ty=Tensor[(84, 12), float32] */, meta[relay.Constant][62] /* ty=Tensor[(33), float64] */, %1034)
}

def @func_8256(%var_8226: Tensor[(1, 7, 6), float64]) -> (Tensor[(1620), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64], Tensor[(?, 7, 6), bool]) {
  %1035 = cast(meta[relay.Constant][63] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %1036 = cast(meta[relay.Constant][64] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %1037 = cast(meta[relay.Constant][65] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %1038 = cast(meta[relay.Constant][63] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %1039 = reshape(%1035, newshape=[84, 12]) /* ty=Tensor[(84, 12), float64] */;
  %1040 = reshape(%1036, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
  %1041 = reshape(%1037, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %1042 = reshape(%1038, newshape=[84, 12]) /* ty=Tensor[(84, 12), float64] */;
  %1043 = @func_4443(%1039, %1040, %1041, %1042) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(715, 3), float32], Tensor[(33, 1), float64], Tensor[(1620), float64], Tensor[(7, 2, 9), uint32], Tensor[(126), uint32], Tensor[(84, 12), int8]) */;
  %1044 = cast(%var_8226, dtype="float64") /* ty=Tensor[(1, 7, 6), float64] */;
  %1045 = sigmoid(%1044) /* ty=Tensor[(1, 7, 6), float64] */;
  %1046 = cast(%1045, dtype="float32") /* ty=Tensor[(1, 7, 6), float32] */;
  %1047 = atan(%1046) /* ty=Tensor[(1, 7, 6), float32] */;
  %1048 = cast(%var_8226, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
  %1049 = shape_of(%1047, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1050 = cast(%1047, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
  %1051 = dyn.reshape(%1048, %1049, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1052 = %1043.3;
  %1053 = logical_or(%1050, %1051) /* ty=Tensor[(?, 7, 6), bool] */;
  (%1052, meta[relay.Constant][63] /* ty=Tensor[(1008), float64] */, meta[relay.Constant][64] /* ty=Tensor[(33), float64] */, meta[relay.Constant][65] /* ty=Tensor[(1620), float64] */, %1053)
}

def @func_10755(%var_10748: Tensor[(13, 9, 3), float32]) -> (Tensor[(13, 9, 3), float32],) {
  %1054 = cast(%var_10748, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %1055 = cos(%1054) /* ty=Tensor[(13, 9, 3), float32] */;
  (%1055,)
}

def @func_3998() -> Tensor[(9, 16, 13), uint16] {
  %1056 = @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %1056.0
}

def @func_6452() -> (Tensor[(9, 16, 13), uint16],) {
  %1057 = @func_6173() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %1058 = %1057.0;
  (%1058,)
}

def @func_3851(%var_3823: Tensor[(1440), int8]) -> (Tensor[(9, 16, 13), uint16], Tensor[(1440), int8], Tensor[(84, 12), int32]) {
  %1059 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %1060 = cast(meta[relay.Constant][66] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1061 = cast(%var_3823, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %1062 = reshape(%1060, newshape=[]) /* ty=int8 */;
  %1063 = reshape(%1061, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int8] */;
  %1064 = @func_1492(%1062, %1063) /* ty=(Tensor[(9, 16, 10), uint64], Tensor[(16, 7, 9), uint64], Tensor[(84, 12), float32], Tensor[(33), float64], Tensor[(1, 3, 11), float64]) */;
  %1065 = %1064.2;
  %1066 = cast(%1065, dtype="float64") /* ty=Tensor[(84, 12), float64] */;
  %1067 = cosh(%1066) /* ty=Tensor[(84, 12), float64] */;
  %1068 = cast(%1067, dtype="float64") /* ty=Tensor[(84, 12), float64] */;
  %1069 = acosh(%1068) /* ty=Tensor[(84, 12), float64] */;
  %1070 = cast(%1069, dtype="int32") /* ty=Tensor[(84, 12), int32] */;
  %1071 = cast(meta[relay.Constant][66] /* ty=int8 */, dtype="int32") /* ty=int32 */;
  %1072 = %1059.0;
  %1073 = bitwise_or(%1070, %1071) /* ty=Tensor[(84, 12), int32] */;
  (%1072, %var_3823, %1073)
}

def @func_9708() -> (Tensor[(9, 16, 13), float64],) {
  %1074 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
  (%1074,)
}

def @func_4182() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %1075 = @func_3686() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) */;
  %1076 = @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */;
  %1077 = %1075.1;
  (%1076, %1077)
}

def @func_6173() -> (Tensor[(9, 16, 13), uint16],) {
  %1078 = @func_4262() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) */;
  %1079 = %1078.0;
  (%1079,)
}

def @func_8973() -> (Tensor[(9, 16, 13), float64], Tensor[(1620), float64]) {
  %1080 = @func_7424() /* ty=(Tensor[(1620), float64],) */;
  %1081 = %1080.0;
  %1082 = cast(%1081, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %1083 = @func_8388() /* ty=Tensor[(9, 16, 13), float64] */;
  %1084 = cos(%1082) /* ty=Tensor[(1620), float64] */;
  (%1083, %1084)
}

def @func_4571() -> Tensor[(1620), float64] {
  %1085 = @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %1085.2
}

def @func_721(%var_701: Tensor[(9, 15, 12), float64]) -> (Tensor[(9, 15, 12), float64],) {
  %1086 = cast(%var_701, dtype="float64") /* ty=Tensor[(9, 15, 12), float64] */;
  %1087 = sqrt(%1086) /* ty=Tensor[(9, 15, 12), float64] */;
  %1088 = cast(%1087, dtype="float64") /* ty=Tensor[(9, 15, 12), float64] */;
  %1089 = cosh(%1088) /* ty=Tensor[(9, 15, 12), float64] */;
  (%1089,)
}

def @func_8918() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %1090 = @func_6270() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %1091 = @func_5050() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %1092 = %1090.1;
  %1093 = %1091.0;
  (%1092, %1093)
}

def @func_6091(%var_6073: Tensor[(10, 5, 5), int64]) -> (Tensor[(10, 5, 5), bool],) {
  %1094 = cast(%var_6073, dtype="bool") /* ty=Tensor[(10, 5, 5), bool] */;
  %1095 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(10, 5, 5), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1096 = cast(meta[relay.Constant][67] /* ty=Tensor[(10, 5, 5), int64] */, dtype="bool") /* ty=Tensor[(10, 5, 5), bool] */;
  %1097 = dyn.reshape(%1094, %1095, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1098 = less_equal(%1096, %1097) /* ty=Tensor[(10, 5, 5), bool] */;
  (%1098,)
}

def @func_7167() -> Tensor[(9, 16, 13), uint16] {
  @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_3346() -> (Tensor[(9, 16, 13), uint16],) {
  %1099 = @func_3151() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %1100 = %1099.0;
  (%1100,)
}

def @func_3075(%var_3031: Tensor[(11, 4, 7), int64], %var_3032: Tensor[(11, 4, 7), int64], %var_3070: Tensor[(2145), float32], %var_3071: Tensor[(1620), float64]) -> (Tensor[(11, 4, 7), int64], Tensor[(1, 3, 11), float64], Tensor[(11, 3), float64], Tensor[(1620), float64], Tensor[(2145), float32], Tensor[(1620), float64]) {
  %1101 = cast(%var_3032, dtype="int64") /* ty=Tensor[(11, 4, 7), int64] */;
  %1102 = shape_of(%var_3031, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1103 = cast(%var_3031, dtype="int64") /* ty=Tensor[(11, 4, 7), int64] */;
  %1104 = dyn.reshape(%1101, %1102, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1105 = cast(meta[relay.Constant][68] /* ty=Tensor[(11, 3), float64] */, dtype="float64") /* ty=Tensor[(11, 3), float64] */;
  %1106 = reshape(%1105, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
  %1107 = cast(%var_3070, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %1108 = cast(%var_3071, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %1109 = reshape(%1107, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float32] */;
  %1110 = reshape(%1108, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %1111 = @func_917(%1109, %1110) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %1112 = subtract(%1103, %1104) /* ty=Tensor[(11, 4, 7), int64] */;
  %1113 = @func_610(%1106) /* ty=Tensor[(1, 3, 11), float64] */;
  %1114 = %1111.2;
  (%1112, %1113, meta[relay.Constant][68] /* ty=Tensor[(11, 3), float64] */, %1114, %var_3070, %var_3071)
}

def @func_4262() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) {
  %1115 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %1116 = %1115.0;
  %1117 = cast(%1116, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %1118 = @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */;
  %1119 = log(%1117) /* ty=Tensor[(9, 16, 13), float64] */;
  (%1118, %1119)
}

def @func_5374(%var_5355: Tensor[(1008), float64], %var_5366: Tensor[(1620), float64]) -> (Tensor[(13, ?, 7), float32], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), int64], Tensor[(1008), float64], Tensor[(11, 3), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(13, ?, 7), bool]) {
  %1120 = cast(meta[relay.Constant][69] /* ty=Tensor[(13, 1, 7), float64] */, dtype="float64") /* ty=Tensor[(13, 1, 7), float64] */;
  %1121 = sinh(%1120) /* ty=Tensor[(13, 1, 7), float64] */;
  %1122 = cast(meta[relay.Constant][69] /* ty=Tensor[(13, 1, 7), float64] */, dtype="float32") /* ty=Tensor[(13, 1, 7), float32] */;
  %1123 = shape_of(%1121, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1124 = cast(%1121, dtype="float32") /* ty=Tensor[(13, 1, 7), float32] */;
  %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1126 = @func_4182() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %1127 = %1126.0;
  %1128 = cast(%1127, dtype="uint16") /* ty=Tensor[(9, 16, 13), uint16] */;
  %1129 = cast(%var_5355, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %1130 = cast(meta[relay.Constant][70] /* ty=Tensor[(11, 3), float64] */, dtype="float64") /* ty=Tensor[(11, 3), float64] */;
  %1131 = reshape(%1128, newshape=[9, 16, 13]) /* ty=Tensor[(9, 16, 13), uint16] */;
  %1132 = reshape(%1129, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %1133 = reshape(%1130, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %1134 = @func_4088(%1131, %1132, %1133) /* ty=(Tensor[(9, 16, 13), int64], Tensor[(9, 16, 13), uint16], Tensor[(33), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64]) */;
  %1135 = cast(%var_5366, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %1136 = reshape(%1135, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
  %1137 = @func_721(%1136) /* ty=(Tensor[(9, 15, 12), float64],) */;
  %1138 = cast(%1121, dtype="float32") /* ty=Tensor[(13, 1, 7), float32] */;
  %1139 = cos(%1138) /* ty=Tensor[(13, 1, 7), float32] */;
  %1140 = cast(%1121, dtype="bool") /* ty=Tensor[(13, 1, 7), bool] */;
  %1141 = shape_of(%1139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1142 = cast(%1139, dtype="bool") /* ty=Tensor[(13, 1, 7), bool] */;
  %1143 = dyn.reshape(%1140, %1141, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1144 = multiply(%1124, %1125) /* ty=Tensor[(13, ?, 7), float32] */;
  %1145 = %1134.0;
  %1146 = %1137.0;
  %1147 = less_equal(%1142, %1143) /* ty=Tensor[(13, ?, 7), bool] */;
  (%1144, %1127, %1145, %var_5355, meta[relay.Constant][70] /* ty=Tensor[(11, 3), float64] */, %1146, %var_5366, %1147)
}

def @func_4582() -> Tensor[(9, 16, 13), float64] {
  %1148 = @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %1149 = %1148.0;
  %1150 = cast(%1149, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  sin(%1150) /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_12140() -> (Tensor[(9, 16, 13), uint16],) {
  %1151 = @func_7629() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1440), int8], uint32, Tensor[(105), uint32], Tensor[(1, 33), float64]) */;
  %1152 = %1151.0;
  (%1152,)
}

def @func_2865() -> (Tensor[(9, 16, 13), uint16],) {
  %1153 = cast(meta[relay.Constant][72] /* ty=Tensor[(9, 16, 13), uint16] */, dtype="uint16") /* ty=Tensor[(9, 16, 13), uint16] */;
  %1154 = shape_of(meta[relay.Constant][71] /* ty=Tensor[(9, 16, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1155 = cast(meta[relay.Constant][71] /* ty=Tensor[(9, 16, 13), uint16] */, dtype="uint16") /* ty=Tensor[(9, 16, 13), uint16] */;
  %1156 = dyn.reshape(%1153, %1154, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1157 = left_shift(%1155, %1156) /* ty=Tensor[(9, 16, 13), uint16] */;
  (%1157,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11698() -> (Tensor[(9, 16, 13), uint16],) {
  @func_11696() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_3851(%var_3823: Tensor[(1440), int8]) -> (Tensor[(9, 16, 13), uint16], Tensor[(1440), int8], Tensor[(84, 12), int32]) {
  %0 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %1 = cast(meta[relay.Constant][0] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %2 = cast(%var_3823, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %3 = reshape(%1, newshape=[]) /* ty=int8 */;
  %4 = reshape(%2, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int8] */;
  %5 = @func_1492(%3, %4) /* ty=(Tensor[(9, 16, 10), uint64], Tensor[(16, 7, 9), uint64], Tensor[(84, 12), float32], Tensor[(33), float64], Tensor[(1, 3, 11), float64]) */;
  %6 = %5.2;
  %7 = cast(%6, dtype="float64") /* ty=Tensor[(84, 12), float64] */;
  %8 = cosh(%7) /* ty=Tensor[(84, 12), float64] */;
  %9 = cast(%8, dtype="float64") /* ty=Tensor[(84, 12), float64] */;
  %10 = acosh(%9) /* ty=Tensor[(84, 12), float64] */;
  %11 = cast(%10, dtype="int32") /* ty=Tensor[(84, 12), int32] */;
  %12 = cast(meta[relay.Constant][0] /* ty=int8 */, dtype="int32") /* ty=int32 */;
  %13 = %0.0;
  %14 = bitwise_or(%11, %12) /* ty=Tensor[(84, 12), int32] */;
  (%13, %var_3823, %14)
}

def @func_6686(%var_6685: Tensor[(1008), float64]) -> (Tensor[(9, 16, 13), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), bool], Tensor[(7, 2, 9), uint32], Tensor[(1008), float64], Tensor[(33), float64]) {
  %31 = fn (%var_6667: Tensor[(1008), float64]) -> (Tensor[(9, 16, 13), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), bool], Tensor[(7, 2, 9), uint32], Tensor[(1008), float64], Tensor[(33), float64]) {
    %15 = @func_3667() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1008), float32], Tensor[(9, 16, 13), float64]) */;
    %16 = @func_5223() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), float64]) */;
    %17 = @func_6639() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) */;
    %18 = @func_3151() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %19 = @func_5242() /* ty=(Tensor[(9, 16, 13), bool],) */;
    %20 = cast(%var_6667, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
    %22 = reshape(%20, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
    %23 = reshape(%21, newshape=[33]) /* ty=Tensor[(33), float64] */;
    %24 = @func_4731(%22, %23) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(7, 2, 9), uint32], Tensor[(33), float64], Tensor[(1620), float64], Tensor[(1008), float64], Tensor[(9, 15, 12), float64], Tensor[(9, 16, 13), int8]) */;
    %25 = %15.2;
    %26 = %16.0;
    %27 = %17.0;
    %28 = %18.0;
    %29 = %19.0;
    %30 = %24.1;
    (%25, %26, %27, %28, %29, %30, %var_6667, meta[relay.Constant][1] /* ty=Tensor[(33), float64] */)
  };
  %31(%var_6685) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), bool], Tensor[(7, 2, 9), uint32], Tensor[(1008), float64], Tensor[(33), float64]) */
}

def @func_2829(%var_2826: Tensor[(14, 2, 15), float32], %var_2827: Tensor[(14, 2, 15), float32], %var_2828: int8) -> (Tensor[(14, 2, 15), bool], Tensor[(14, 2, 15), float32], Tensor[(16, 7, 9), uint64], Tensor[(1008), float32], Tensor[(84, 12), float32], int8, Tensor[(1440), int8]) {
  @func_2824(%var_2826, %var_2827, %var_2828) /* ty=(Tensor[(14, 2, 15), bool], Tensor[(14, 2, 15), float32], Tensor[(16, 7, 9), uint64], Tensor[(1008), float32], Tensor[(84, 12), float32], int8, Tensor[(1440), int8]) */
}

def @func_4414(%var_4412: Tensor[(420), float32]) -> (Tensor[(1620), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(?, 3, 11), bool], Tensor[(9, 15, 12), float64], Tensor[(420), float32], int8, Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), float64], Tensor[(16, 7, 9), float32], Tensor[(9, 16, 13), float64], Tensor[(2145, 308), float64], Tensor[(9, 16, 13), float64]) {
  @func_4411(%var_4412) /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(?, 3, 11), bool], Tensor[(9, 15, 12), float64], Tensor[(420), float32], int8, Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), float64], Tensor[(16, 7, 9), float32], Tensor[(9, 16, 13), float64], Tensor[(2145, 308), float64], Tensor[(9, 16, 13), float64]) */
}

def @func_4183() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %35 = fn () -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
    %32 = @func_3686() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) */;
    %33 = @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */;
    %34 = %32.1;
    (%33, %34)
  };
  %35() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */
}

def @func_8888() -> (Tensor[(1620), float64],) {
  %36 = @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %37 = %36.2;
  (%37,)
}

def @func_7629() -> (Tensor[(9, 16, 13), uint16], Tensor[(1440), int8], uint32, Tensor[(105), uint32], Tensor[(1, 33), float64]) {
  %38 = cast(meta[relay.Constant][2] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %39 = cast(meta[relay.Constant][3] /* ty=Tensor[(105), uint32] */, dtype="uint32") /* ty=Tensor[(105), uint32] */;
  %40 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 33), float64] */, dtype="float64") /* ty=Tensor[(1, 33), float64] */;
  %41 = reshape(%38, newshape=[]) /* ty=uint32 */;
  %42 = reshape(%39, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), uint32] */;
  %43 = reshape(%40, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %44 = @func_2669(%41, %42, %43) /* ty=(Tensor[(5, 7, 3), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(33), float64], Tensor[(1440), int8], Tensor[(9, 15, 12), float64], Tensor[(1008), float32], Tensor[(1, 3, 11), float64], Tensor[(16, 7, 9), float64]) */;
  %45 = @func_4277() /* ty=Tensor[(9, 16, 13), uint16] */;
  %46 = %44.4;
  (%45, %46, meta[relay.Constant][2] /* ty=uint32 */, meta[relay.Constant][3] /* ty=Tensor[(105), uint32] */, meta[relay.Constant][4] /* ty=Tensor[(1, 33), float64] */)
}

def @func_5378(%var_5376: Tensor[(1008), float64], %var_5377: Tensor[(1620), float64]) -> (Tensor[(13, ?, 7), float32], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), int64], Tensor[(1008), float64], Tensor[(11, 3), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(13, ?, 7), bool]) {
  @func_5374(%var_5376, %var_5377) /* ty=(Tensor[(13, ?, 7), float32], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), int64], Tensor[(1008), float64], Tensor[(11, 3), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(13, ?, 7), bool]) */
}

def @func_6509() -> (Tensor[(9, 16, 13), float64],) {
  @func_6507() /* ty=(Tensor[(9, 16, 13), float64],) */
}

def @func_4041() -> Tensor[(9, 16, 13), uint16] {
  @func_4039() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_10503() -> float32 {
  %48 = fn () -> float32 {
    %47 = @func_10439() /* ty=(float32,) */;
    %47.0
  };
  %48() /* ty=float32 */
}

def @func_3732(%var_3731: Tensor[(308), int64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(1620), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) {
  %61 = fn (%var_3720: Tensor[(308), int64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(1620), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) {
    %49 = @func_3346() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %50 = cast(%var_3720, dtype="int64") /* ty=Tensor[(308), int64] */;
    %51 = cast(%var_3720, dtype="int64") /* ty=Tensor[(308), int64] */;
    %52 = cast(meta[relay.Constant][5] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %53 = cast(meta[relay.Constant][6] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %54 = reshape(%50, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
    %55 = reshape(%51, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
    %56 = reshape(%52, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
    %57 = reshape(%53, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
    %58 = @func_3075(%54, %55, %56, %57) /* ty=(Tensor[(11, 4, 7), int64], Tensor[(1, 3, 11), float64], Tensor[(11, 3), float64], Tensor[(1620), float64], Tensor[(2145), float32], Tensor[(1620), float64]) */;
    %59 = %49.0;
    %60 = %58.5;
    (%59, %60, %var_3720, meta[relay.Constant][5] /* ty=Tensor[(2145), float32] */, meta[relay.Constant][6] /* ty=Tensor[(1620), float64] */)
  };
  %61(%var_3731) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1620), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) */
}

def @func_4485() -> Tensor[(9, 16, 13), bool] {
  %69 = fn () -> Tensor[(9, 16, 13), bool] {
    %62 = @func_3424() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %63 = %62.0;
    %64 = @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */;
    %65 = cast(%64, dtype="bool") /* ty=Tensor[(9, 16, 13), bool] */;
    %66 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
    %67 = cast(%63, dtype="bool") /* ty=Tensor[(9, 16, 13), bool] */;
    %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%67, %68) /* ty=Tensor[(9, 16, 13), bool] */
  };
  %69() /* ty=Tensor[(9, 16, 13), bool] */
}

def @func_6641() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) {
  @func_6639() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) */
}

def @func_9146(%var_9126: Tensor[(13, 11, 10), int32]) -> (Tensor[(13, 11, 10), bool], Tensor[(13, 11, 10), float32]) {
  %70 = cast(%var_9126, dtype="bool") /* ty=Tensor[(13, 11, 10), bool] */;
  %71 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(13, 11, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %72 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 11, 10), int32] */, dtype="bool") /* ty=Tensor[(13, 11, 10), bool] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %74 = cast(%var_9126, dtype="float32") /* ty=Tensor[(13, 11, 10), float32] */;
  %75 = not_equal(%72, %73) /* ty=Tensor[(13, 11, 10), bool] */;
  %76 = tan(%74) /* ty=Tensor[(13, 11, 10), float32] */;
  (%75, %76)
}

def @func_8447(%var_8441: Tensor[(308), int64], %var_8442: Tensor[(2145), float32], %var_8443: Tensor[(1620), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) {
  %77 = @func_7138() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) */;
  %78 = @func_4879() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(16, 7, 9), float32], Tensor[(1008), float32], Tensor[(9, 15, 12), float64], Tensor[(1, 1620), float32]) */;
  %79 = cast(%var_8441, dtype="int64") /* ty=Tensor[(308), int64] */;
  %80 = cast(%var_8441, dtype="int64") /* ty=Tensor[(308), int64] */;
  %81 = cast(%var_8442, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %82 = cast(%var_8443, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %83 = reshape(%79, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
  %84 = reshape(%80, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
  %85 = reshape(%81, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %86 = reshape(%82, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %87 = @func_3075(%83, %84, %85, %86) /* ty=(Tensor[(11, 4, 7), int64], Tensor[(1, 3, 11), float64], Tensor[(11, 3), float64], Tensor[(1620), float64], Tensor[(2145), float32], Tensor[(1620), float64]) */;
  %88 = %77.1;
  %89 = %78.2;
  %90 = %87.1;
  (%88, %89, %90, %var_8441, %var_8442, %var_8443)
}

def @func_6861() -> (Tensor[(9, 16, 13), uint16],) {
  %92 = fn () -> (Tensor[(9, 16, 13), uint16],) {
    %91 = @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */;
    (%91,)
  };
  %92() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_10082() -> (Tensor[(9, 16, 13), uint16],) {
  @func_10080() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_3970() -> (Tensor[(9, 16, 13), float64],) {
  %97 = fn () -> (Tensor[(9, 16, 13), float64],) {
    %93 = @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
    %94 = %93.0;
    %95 = cast(%94, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
    %96 = asinh(%95) /* ty=Tensor[(9, 16, 13), float64] */;
    (%96,)
  };
  %97() /* ty=(Tensor[(9, 16, 13), float64],) */
}

def @func_10755(%var_10748: Tensor[(13, 9, 3), float32]) -> (Tensor[(13, 9, 3), float32],) {
  %98 = cast(%var_10748, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %99 = cos(%98) /* ty=Tensor[(13, 9, 3), float32] */;
  (%99,)
}

def @func_9283() -> (Tensor[(1620), float64],) {
  %100 = @func_8499() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(1440), int8]) */;
  %101 = %100.2;
  (%101,)
}

def @func_6888() -> (Tensor[(9, 16, 13), uint16], Tensor[(1620), float64]) {
  @func_6886() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1620), float64]) */
}

def @func_11342(%var_11264: Tensor[(715, 2), int32], %var_11318: Tensor[(1620), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(13, 11, 10), float32], Tensor[(715, 2), int32], Tensor[(9, 16, 13), bool], Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(2145, 1), float32], Tensor[(1620), float64]) {
  %102 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %103 = cast(%var_11264, dtype="int32") /* ty=Tensor[(715, 2), int32] */;
  %104 = reshape(%103, newshape=[13, 11, 10]) /* ty=Tensor[(13, 11, 10), int32] */;
  %105 = @func_9146(%104) /* ty=(Tensor[(13, 11, 10), bool], Tensor[(13, 11, 10), float32]) */;
  %106 = cast(meta[relay.Constant][8] /* ty=Tensor[(308), int64] */, dtype="int64") /* ty=Tensor[(308), int64] */;
  %107 = cast(meta[relay.Constant][9] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %108 = cast(%var_11318, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %109 = reshape(%106, newshape=[308]) /* ty=Tensor[(308), int64] */;
  %110 = reshape(%107, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %111 = reshape(%108, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %112 = @func_8447(%109, %110, %111) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) */;
  %113 = %102.0;
  %114 = %105.1;
  %115 = @func_4484() /* ty=Tensor[(9, 16, 13), bool] */;
  %116 = %112.1;
  (%113, %114, %var_11264, %115, %116, meta[relay.Constant][8] /* ty=Tensor[(308), int64] */, meta[relay.Constant][9] /* ty=Tensor[(2145, 1), float32] */, %var_11318)
}

def @func_6999() -> Tensor[(9, 16, 13), float64] {
  %117 = @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */;
  %118 = @func_5242() /* ty=(Tensor[(9, 16, 13), bool],) */;
  %119 = %118.0;
  %120 = cast(%119, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %121 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(%117, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  subtract(%122, %123) /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_9114(%var_9108: Tensor[(1008), float64]) -> (Tensor[(9, 16, 13), bool], Tensor[(126), uint32], Tensor[(540, 3), float64], Tensor[(1008), float64]) {
  %124 = cast(meta[relay.Constant][10] /* ty=Tensor[(540, 3), float64] */, dtype="float64") /* ty=Tensor[(540, 3), float64] */;
  %125 = cast(%var_9108, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %126 = reshape(%124, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %127 = reshape(%125, newshape=[84, 12]) /* ty=Tensor[(84, 12), float64] */;
  %128 = @func_7363(%126, %127) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float32], Tensor[(9, 16, 13), uint16], Tensor[(126), uint32], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(33), float64], Tensor[(84, 12), float64], Tensor[(9, 16, 13), float64]) */;
  %129 = @func_4484() /* ty=Tensor[(9, 16, 13), bool] */;
  %130 = %128.3;
  (%129, %130, meta[relay.Constant][10] /* ty=Tensor[(540, 3), float64] */, %var_9108)
}

def @func_4941() -> (Tensor[(9, 16, 13), uint16],) {
  @func_4939() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_8611() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(1620), float64]) {
  @func_8609() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(1620), float64]) */
}

def @func_9117(%var_9115: Tensor[(1008), float64]) -> (Tensor[(9, 16, 13), bool], Tensor[(126), uint32], Tensor[(540, 3), float64], Tensor[(1008), float64]) {
  @func_9114(%var_9115) /* ty=(Tensor[(9, 16, 13), bool], Tensor[(126), uint32], Tensor[(540, 3), float64], Tensor[(1008), float64]) */
}

def @func_2669(%var_2597: uint32, %var_2598: Tensor[(5, 7, 3), uint32], %var_2630: Tensor[(33), float64]) -> (Tensor[(5, 7, 3), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(33), float64], Tensor[(1440), int8], Tensor[(9, 15, 12), float64], Tensor[(1008), float32], Tensor[(1, 3, 11), float64], Tensor[(16, 7, 9), float64]) {
  %131 = cast(%var_2597, dtype="uint32") /* ty=uint32 */;
  %132 = cast(%var_2598, dtype="uint32") /* ty=Tensor[(5, 7, 3), uint32] */;
  %133 = logical_xor(%131, %132) /* ty=Tensor[(5, 7, 3), uint32] */;
  %134 = cast(%133, dtype="bool") /* ty=Tensor[(5, 7, 3), bool] */;
  %135 = cast(%var_2597, dtype="bool") /* ty=bool */;
  %136 = cast(%var_2630, dtype="float64") /* ty=Tensor[(33), float64] */;
  %137 = reshape(%136, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
  %138 = cast(%var_2597, dtype="int8") /* ty=int8 */;
  %139 = cast(meta[relay.Constant][11] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %140 = reshape(%138, newshape=[]) /* ty=int8 */;
  %141 = reshape(%139, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int8] */;
  %142 = @func_1492(%140, %141) /* ty=(Tensor[(9, 16, 10), uint64], Tensor[(16, 7, 9), uint64], Tensor[(84, 12), float32], Tensor[(33), float64], Tensor[(1, 3, 11), float64]) */;
  %143 = cast(meta[relay.Constant][12] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %144 = reshape(%143, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %145 = @func_1738(%144) /* ty=(Tensor[(11, 4, 14), float32], Tensor[(1008), int64], Tensor[(1620), float64], Tensor[(715, 3), float32], Tensor[(1620), float64], Tensor[(9, 15, 12), float64]) */;
  %146 = cast(%var_2597, dtype="int8") /* ty=int8 */;
  %147 = cast(meta[relay.Constant][11] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %148 = reshape(%146, newshape=[]) /* ty=int8 */;
  %149 = reshape(%147, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int8] */;
  %150 = @func_1492(%148, %149) /* ty=(Tensor[(9, 16, 10), uint64], Tensor[(16, 7, 9), uint64], Tensor[(84, 12), float32], Tensor[(33), float64], Tensor[(1, 3, 11), float64]) */;
  %151 = cast(meta[relay.Constant][12] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %152 = reshape(%151, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float32] */;
  %153 = @func_1190(%152) /* ty=(Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) */;
  %154 = not_equal(%134, %135) /* ty=Tensor[(5, 7, 3), bool] */;
  %155 = @func_610(%137) /* ty=Tensor[(1, 3, 11), float64] */;
  %156 = %142.3;
  %157 = %145.5;
  %158 = %150.4;
  %159 = %153.7;
  (%154, %155, %var_2630, %156, meta[relay.Constant][11] /* ty=Tensor[(1440), int8] */, %157, meta[relay.Constant][12] /* ty=Tensor[(1008), float32] */, %158, %159)
}

def @func_5084(%var_5082: Tensor[(1008), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64]) {
  @func_5081(%var_5082) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64]) */
}

def @func_12059() -> (Tensor[(9, 16, 13), float64],) {
  @func_12057() /* ty=(Tensor[(9, 16, 13), float64],) */
}

def @func_3669() -> (Tensor[(9, 16, 13), uint16], Tensor[(1008), float32], Tensor[(9, 16, 13), float64]) {
  @func_3667() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1008), float32], Tensor[(9, 16, 13), float64]) */
}

def @func_3999() -> Tensor[(9, 16, 13), uint16] {
  %161 = fn () -> Tensor[(9, 16, 13), uint16] {
    %160 = @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
    %160.0
  };
  %161() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_11103() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), float64]) {
  %162 = @func_7171() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %163 = @func_8973() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(1620), float64]) */;
  %164 = @func_4892() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %165 = %162.0;
  %166 = %163.0;
  %167 = %164.0;
  (%165, %166, %167)
}

def @func_12140() -> (Tensor[(9, 16, 13), uint16],) {
  %168 = @func_7629() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1440), int8], uint32, Tensor[(105), uint32], Tensor[(1, 33), float64]) */;
  %169 = %168.0;
  (%169,)
}

def @func_5374(%var_5355: Tensor[(1008), float64], %var_5366: Tensor[(1620), float64]) -> (Tensor[(13, ?, 7), float32], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), int64], Tensor[(1008), float64], Tensor[(11, 3), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(13, ?, 7), bool]) {
  %170 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 1, 7), float64] */, dtype="float64") /* ty=Tensor[(13, 1, 7), float64] */;
  %171 = sinh(%170) /* ty=Tensor[(13, 1, 7), float64] */;
  %172 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 1, 7), float64] */, dtype="float32") /* ty=Tensor[(13, 1, 7), float32] */;
  %173 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%171, dtype="float32") /* ty=Tensor[(13, 1, 7), float32] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %176 = @func_4182() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %177 = %176.0;
  %178 = cast(%177, dtype="uint16") /* ty=Tensor[(9, 16, 13), uint16] */;
  %179 = cast(%var_5355, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %180 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 3), float64] */, dtype="float64") /* ty=Tensor[(11, 3), float64] */;
  %181 = reshape(%178, newshape=[9, 16, 13]) /* ty=Tensor[(9, 16, 13), uint16] */;
  %182 = reshape(%179, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %183 = reshape(%180, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %184 = @func_4088(%181, %182, %183) /* ty=(Tensor[(9, 16, 13), int64], Tensor[(9, 16, 13), uint16], Tensor[(33), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64]) */;
  %185 = cast(%var_5366, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %186 = reshape(%185, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
  %187 = @func_721(%186) /* ty=(Tensor[(9, 15, 12), float64],) */;
  %188 = cast(%171, dtype="float32") /* ty=Tensor[(13, 1, 7), float32] */;
  %189 = cos(%188) /* ty=Tensor[(13, 1, 7), float32] */;
  %190 = cast(%171, dtype="bool") /* ty=Tensor[(13, 1, 7), bool] */;
  %191 = shape_of(%189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%189, dtype="bool") /* ty=Tensor[(13, 1, 7), bool] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %194 = multiply(%174, %175) /* ty=Tensor[(13, ?, 7), float32] */;
  %195 = %184.0;
  %196 = %187.0;
  %197 = less_equal(%192, %193) /* ty=Tensor[(13, ?, 7), bool] */;
  (%194, %177, %195, %var_5355, meta[relay.Constant][14] /* ty=Tensor[(11, 3), float64] */, %196, %var_5366, %197)
}

def @func_10256(%var_10255: Tensor[(15, 11, 5), float64]) -> (Tensor[(15, 11, 5), float64], Tensor[(9, 16, 13), uint16]) {
  %211 = fn (%var_10196: Tensor[(15, 11, 5), float64]) -> (Tensor[(15, 11, 5), float64], Tensor[(9, 16, 13), uint16]) {
    %198 = cast(%var_10196, dtype="float64") /* ty=Tensor[(15, 11, 5), float64] */;
    %199 = asin(%198) /* ty=Tensor[(15, 11, 5), float64] */;
    %200 = cast(%199, dtype="bool") /* ty=Tensor[(15, 11, 5), bool] */;
    %201 = shape_of(%var_10196, dtype="int32") /* ty=Tensor[(3), int32] */;
    %202 = cast(%var_10196, dtype="bool") /* ty=Tensor[(15, 11, 5), bool] */;
    %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %204 = logical_and(%202, %203) /* ty=Tensor[(15, 11, 5), bool] */;
    %205 = cast(%var_10196, dtype="float64") /* ty=Tensor[(15, 11, 5), float64] */;
    %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(3), int32] */;
    %207 = cast(%204, dtype="float64") /* ty=Tensor[(15, 11, 5), float64] */;
    %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %209 = mod(%207, %208) /* ty=Tensor[(15, 11, 5), float64] */;
    %210 = @func_4277() /* ty=Tensor[(9, 16, 13), uint16] */;
    (%209, %210)
  };
  %211(%var_10255) /* ty=(Tensor[(15, 11, 5), float64], Tensor[(9, 16, 13), uint16]) */
}

def @func_7426() -> (Tensor[(1620), float64],) {
  @func_7424() /* ty=(Tensor[(1620), float64],) */
}

def @func_1495(%var_1493: int8, %var_1494: Tensor[(9, 16, 10), int8]) -> (Tensor[(9, 16, 10), uint64], Tensor[(16, 7, 9), uint64], Tensor[(84, 12), float32], Tensor[(33), float64], Tensor[(1, 3, 11), float64]) {
  %231 = fn (%var_1455: int8, %var_1456: Tensor[(9, 16, 10), int8]) -> (Tensor[(9, 16, 10), uint64], Tensor[(16, 7, 9), uint64], Tensor[(84, 12), float32], Tensor[(33), float64], Tensor[(1, 3, 11), float64]) {
    %212 = cast(%var_1455, dtype="bool") /* ty=bool */;
    %213 = cast(%var_1456, dtype="bool") /* ty=Tensor[(9, 16, 10), bool] */;
    %214 = less(%212, %213) /* ty=Tensor[(9, 16, 10), bool] */;
    %215 = cast(%214, dtype="float64") /* ty=Tensor[(9, 16, 10), float64] */;
    %216 = atanh(%215) /* ty=Tensor[(9, 16, 10), float64] */;
    %217 = cast(%var_1456, dtype="uint64") /* ty=Tensor[(9, 16, 10), uint64] */;
    %218 = shape_of(%216, dtype="int32") /* ty=Tensor[(3), int32] */;
    %219 = cast(%216, dtype="uint64") /* ty=Tensor[(9, 16, 10), uint64] */;
    %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %221 = cast(meta[relay.Constant][15] /* ty=Tensor[(84, 12), float32] */, dtype="float32") /* ty=Tensor[(84, 12), float32] */;
    %222 = reshape(%221, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float32] */;
    %223 = @func_1190(%222) /* ty=(Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) */;
    %224 = cast(meta[relay.Constant][16] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
    %225 = reshape(%224, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
    %226 = @func_610(%225) /* ty=Tensor[(1, 3, 11), float64] */;
    %227 = cast(%226, dtype="float64") /* ty=Tensor[(1, 3, 11), float64] */;
    %228 = bitwise_and(%219, %220) /* ty=Tensor[(9, 16, 10), uint64] */;
    %229 = %223.1;
    %230 = sqrt(%227) /* ty=Tensor[(1, 3, 11), float64] */;
    (%228, %229, meta[relay.Constant][15] /* ty=Tensor[(84, 12), float32] */, meta[relay.Constant][16] /* ty=Tensor[(33), float64] */, %230)
  };
  %231(%var_1493, %var_1494) /* ty=(Tensor[(9, 16, 10), uint64], Tensor[(16, 7, 9), uint64], Tensor[(84, 12), float32], Tensor[(33), float64], Tensor[(1, 3, 11), float64]) */
}

def @func_9685() -> (Tensor[(9, 16, 13), uint16],) {
  %232 = @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%232,)
}

def @func_10658() -> Tensor[(1620), float64] {
  %233 = @func_8888() /* ty=(Tensor[(1620), float64],) */;
  %233.0
}

def @func_10353(%var_10351: Tensor[(14, 10, 4), uint32]) -> Tensor[(14, 10, 4), bool] {
  @func_10350(%var_10351) /* ty=Tensor[(14, 10, 4), bool] */
}

def @func_11194(%var_11192: Tensor[(420), float32], %var_11193: int8) -> (Tensor[(9, 16, 13), uint16], Tensor[(14, 2, 15), float32], Tensor[(420), float32], int8, Tensor[(1620), float64], Tensor[(16, 7, 9), uint64]) {
  %253 = fn (%var_11163: Tensor[(420), float32], %var_11164: int8) -> (Tensor[(9, 16, 13), uint16], Tensor[(14, 2, 15), float32], Tensor[(420), float32], int8, Tensor[(1620), float64], Tensor[(16, 7, 9), uint64]) {
    %234 = cast(%var_11163, dtype="float32") /* ty=Tensor[(420), float32] */;
    %235 = cast(%var_11163, dtype="float32") /* ty=Tensor[(420), float32] */;
    %236 = cast(%var_11164, dtype="int8") /* ty=int8 */;
    %237 = reshape(%234, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), float32] */;
    %238 = reshape(%235, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), float32] */;
    %239 = reshape(%236, newshape=[]) /* ty=int8 */;
    %240 = @func_2824(%237, %238, %239) /* ty=(Tensor[(14, 2, 15), bool], Tensor[(14, 2, 15), float32], Tensor[(16, 7, 9), uint64], Tensor[(1008), float32], Tensor[(84, 12), float32], int8, Tensor[(1440), int8]) */;
    %241 = @func_8888() /* ty=(Tensor[(1620), float64],) */;
    %242 = cast(%var_11163, dtype="float32") /* ty=Tensor[(420), float32] */;
    %243 = %240.1;
    %244 = cast(%243, dtype="float32") /* ty=Tensor[(14, 2, 15), float32] */;
    %245 = cast(%var_11164, dtype="int8") /* ty=int8 */;
    %246 = reshape(%242, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), float32] */;
    %247 = reshape(%244, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), float32] */;
    %248 = reshape(%245, newshape=[]) /* ty=int8 */;
    %249 = @func_2824(%246, %247, %248) /* ty=(Tensor[(14, 2, 15), bool], Tensor[(14, 2, 15), float32], Tensor[(16, 7, 9), uint64], Tensor[(1008), float32], Tensor[(84, 12), float32], int8, Tensor[(1440), int8]) */;
    %250 = @func_10838() /* ty=Tensor[(9, 16, 13), uint16] */;
    %251 = %241.0;
    %252 = %249.2;
    (%250, %243, %var_11163, %var_11164, %251, %252)
  };
  %253(%var_11192, %var_11193) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(14, 2, 15), float32], Tensor[(420), float32], int8, Tensor[(1620), float64], Tensor[(16, 7, 9), uint64]) */
}

def @func_11551() -> (Tensor[(9, 16, 13), uint16],) {
  %254 = @func_10080() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %255 = %254.0;
  (%255,)
}

def @func_4571() -> Tensor[(1620), float64] {
  %256 = @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %256.2
}

def @func_5283() -> (Tensor[(1, 15, 5), float32],) {
  %259 = fn () -> (Tensor[(1, 15, 5), float32],) {
    %257 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 15, 5), float32] */, dtype="float32") /* ty=Tensor[(1, 15, 5), float32] */;
    %258 = tan(%257) /* ty=Tensor[(1, 15, 5), float32] */;
    (%258,)
  };
  %259() /* ty=(Tensor[(1, 15, 5), float32],) */
}

def @func_12214(%var_12212: Tensor[(1008), float64]) -> (Tensor[(1620), float64], Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], Tensor[(1008), float64]) {
  @func_12211(%var_12212) /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], Tensor[(1008), float64]) */
}

def @func_3131() -> Tensor[(9, 16, 13), float64] {
  @func_3129() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_7820(%var_7819: Tensor[(1620), float64]) -> (Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) {
  %265 = fn (%var_7812: Tensor[(1620), float64]) -> (Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) {
    %260 = cast(%var_7812, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %261 = reshape(%260, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
    %262 = @func_721(%261) /* ty=(Tensor[(9, 15, 12), float64],) */;
    %263 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
    %264 = %262.0;
    (%263, %264, %var_7812)
  };
  %265(%var_7819) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */
}

def @func_6272() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  @func_6270() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */
}

def @func_8388() -> Tensor[(9, 16, 13), float64] {
  @func_4800() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_5706() -> Tensor[(9, 16, 13), float64] {
  %266 = @func_5223() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), float64]) */;
  %266.1
}

def @func_4880() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(16, 7, 9), float32], Tensor[(1008), float32], Tensor[(9, 15, 12), float64], Tensor[(1, 1620), float32]) {
  %282 = fn () -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(16, 7, 9), float32], Tensor[(1008), float32], Tensor[(9, 15, 12), float64], Tensor[(1, 1620), float32]) {
    %267 = @func_3424() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %268 = @func_3424() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %269 = cast(meta[relay.Constant][18] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %270 = reshape(%269, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float32] */;
    %271 = @func_1190(%270) /* ty=(Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) */;
    %272 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 1620), float64] */, dtype="float64") /* ty=Tensor[(1, 1620), float64] */;
    %273 = reshape(%272, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
    %274 = @func_721(%273) /* ty=(Tensor[(9, 15, 12), float64],) */;
    %275 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 1620), float64] */, dtype="float32") /* ty=Tensor[(1, 1620), float32] */;
    %276 = @func_4800() /* ty=Tensor[(9, 16, 13), float64] */;
    %277 = %267.0;
    %278 = %268.0;
    %279 = %271.0;
    %280 = %274.0;
    %281 = acosh(%275) /* ty=Tensor[(1, 1620), float32] */;
    (%276, %277, %278, %279, meta[relay.Constant][18] /* ty=Tensor[(1008), float32] */, %280, %281)
  };
  %282() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(16, 7, 9), float32], Tensor[(1008), float32], Tensor[(9, 15, 12), float64], Tensor[(1, 1620), float32]) */
}

def @func_5756() -> Tensor[(9, 16, 13), uint16] {
  %284 = fn () -> Tensor[(9, 16, 13), uint16] {
    %283 = @func_4939() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %283.0
  };
  %284() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_11424(%var_11422: int32, %var_11423: Tensor[(11, 15, 15), int32]) -> (Tensor[(11, 15, 15), int32],) {
  @func_11420(%var_11422, %var_11423) /* ty=(Tensor[(11, 15, 15), int32],) */
}

def @func_5472() -> Tensor[(1620), float64] {
  @func_5470() /* ty=Tensor[(1620), float64] */
}

def @func_10281(%var_10268: Tensor[(1872), float64], %var_10269: float32) -> (Tensor[(1440), int8], Tensor[(9, 16, 13), float64], Tensor[(1872), float64], float32, Tensor[(384), float32]) {
  %285 = @func_8499() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(1440), int8]) */;
  %286 = cast(%var_10268, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %287 = cast(%var_10269, dtype="float32") /* ty=float32 */;
  %288 = cast(meta[relay.Constant][20] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %289 = reshape(%286, newshape=[9, 16, 13]) /* ty=Tensor[(9, 16, 13), float64] */;
  %290 = reshape(%287, newshape=[]) /* ty=float32 */;
  %291 = reshape(%288, newshape=[48, 8]) /* ty=Tensor[(48, 8), float32] */;
  %292 = @func_5838(%289, %290, %291) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(6, 4, 16), float32], float32, Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(48, 8), float32]) */;
  %293 = %285.3;
  %294 = %292.3;
  (%293, %294, %var_10268, %var_10269, meta[relay.Constant][20] /* ty=Tensor[(384), float32] */)
}

def @func_7673(%var_7671: Tensor[(1008), float64], %var_7672: Tensor[(6, 270), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(7, 2, 9), uint32], Tensor[(1008), float64], Tensor[(33, 1), float64], Tensor[(6, 270), float64]) {
  %309 = fn (%var_7666: Tensor[(1008), float64], %var_7668: Tensor[(6, 270), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(7, 2, 9), uint32], Tensor[(1008), float64], Tensor[(33, 1), float64], Tensor[(6, 270), float64]) {
    %295 = @func_5966() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %296 = @func_6270() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
    %297 = cast(%var_7666, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %298 = cast(meta[relay.Constant][21] /* ty=Tensor[(33, 1), float64] */, dtype="float64") /* ty=Tensor[(33, 1), float64] */;
    %299 = cast(%var_7668, dtype="float64") /* ty=Tensor[(6, 270), float64] */;
    %300 = cast(%var_7666, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %301 = reshape(%297, newshape=[84, 12]) /* ty=Tensor[(84, 12), float64] */;
    %302 = reshape(%298, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
    %303 = reshape(%299, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
    %304 = reshape(%300, newshape=[84, 12]) /* ty=Tensor[(84, 12), float64] */;
    %305 = @func_4443(%301, %302, %303, %304) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(715, 3), float32], Tensor[(33, 1), float64], Tensor[(1620), float64], Tensor[(7, 2, 9), uint32], Tensor[(126), uint32], Tensor[(84, 12), int8]) */;
    %306 = %295.0;
    %307 = %296.1;
    %308 = %305.4;
    (%306, %307, %308, %var_7666, meta[relay.Constant][21] /* ty=Tensor[(33, 1), float64] */, %var_7668)
  };
  %309(%var_7671, %var_7672) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(7, 2, 9), uint32], Tensor[(1008), float64], Tensor[(33, 1), float64], Tensor[(6, 270), float64]) */
}

def @func_723(%var_722: Tensor[(9, 15, 12), float64]) -> (Tensor[(9, 15, 12), float64],) {
  %314 = fn (%var_701: Tensor[(9, 15, 12), float64]) -> (Tensor[(9, 15, 12), float64],) {
    %310 = cast(%var_701, dtype="float64") /* ty=Tensor[(9, 15, 12), float64] */;
    %311 = sqrt(%310) /* ty=Tensor[(9, 15, 12), float64] */;
    %312 = cast(%311, dtype="float64") /* ty=Tensor[(9, 15, 12), float64] */;
    %313 = cosh(%312) /* ty=Tensor[(9, 15, 12), float64] */;
    (%313,)
  };
  %314(%var_722) /* ty=(Tensor[(9, 15, 12), float64],) */
}

def @func_3667() -> (Tensor[(9, 16, 13), uint16], Tensor[(1008), float32], Tensor[(9, 16, 13), float64]) {
  %315 = @func_3346() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %316 = %315.0;
  %317 = cast(%316, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %318 = reshape(%317, newshape=[9, 16, 13]) /* ty=Tensor[(9, 16, 13), float64] */;
  %319 = @func_3194(%318) /* ty=(Tensor[(9, 16, 13), bool], Tensor[(1008), float32], uint8) */;
  %320 = %319.1;
  %321 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
  (%316, %320, %321)
}

def @func_6814() -> (Tensor[(9, 16, 13), uint16],) {
  %322 = @func_4762() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%322,)
}

def @func_11495() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %326 = fn () -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
    %323 = @func_6270() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
    %324 = %323.1;
    %325 = @func_10156() /* ty=Tensor[(9, 16, 13), uint16] */;
    (%324, %325)
  };
  %326() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */
}

def @func_12142() -> (Tensor[(9, 16, 13), uint16],) {
  @func_12140() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_3129() -> Tensor[(9, 16, 13), float64] {
  %327 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %328 = %327.0;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  erf(%329) /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_917(%var_895: Tensor[(15, 13, 11), float32], %var_901: Tensor[(1620), float64]) -> (Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) {
  %330 = cast(%var_895, dtype="float32") /* ty=Tensor[(15, 13, 11), float32] */;
  %331 = cast(%var_901, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %332 = reshape(%331, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
  %333 = @func_721(%332) /* ty=(Tensor[(9, 15, 12), float64],) */;
  %334 = cast(meta[relay.Constant][22] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %335 = shape_of(%var_901, dtype="int32") /* ty=Tensor[(1), int32] */;
  %336 = cast(%var_901, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?), float64] */;
  %338 = cos(%330) /* ty=Tensor[(15, 13, 11), float32] */;
  %339 = %333.0;
  %340 = divide(%336, %337) /* ty=Tensor[(1620), float64] */;
  (%338, %339, %340)
}

def @func_5790() -> Tensor[(9, 16, 13), float64] {
  @func_5706() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_6093(%var_6092: Tensor[(10, 5, 5), int64]) -> (Tensor[(10, 5, 5), bool],) {
  %346 = fn (%var_6073: Tensor[(10, 5, 5), int64]) -> (Tensor[(10, 5, 5), bool],) {
    %341 = cast(%var_6073, dtype="bool") /* ty=Tensor[(10, 5, 5), bool] */;
    %342 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(10, 5, 5), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %343 = cast(meta[relay.Constant][23] /* ty=Tensor[(10, 5, 5), int64] */, dtype="bool") /* ty=Tensor[(10, 5, 5), bool] */;
    %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %345 = less_equal(%343, %344) /* ty=Tensor[(10, 5, 5), bool] */;
    (%345,)
  };
  %346(%var_6092) /* ty=(Tensor[(10, 5, 5), bool],) */
}

def @func_4629(%var_4627: Tensor[(9, 16, 13), uint16]) -> Tensor[(9, 16, 13), int16] {
  @func_4626(%var_4627) /* ty=Tensor[(9, 16, 13), int16] */
}

def @func_12057() -> (Tensor[(9, 16, 13), float64],) {
  %347 = @func_11103() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), float64]) */;
  %348 = %347.2;
  (%348,)
}

def @func_10350(%var_10337: Tensor[(14, 10, 4), uint32]) -> Tensor[(14, 10, 4), bool] {
  %349 = cast(%var_10337, dtype="bool") /* ty=Tensor[(14, 10, 4), bool] */;
  %350 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(14, 10, 4), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %351 = cast(meta[relay.Constant][24] /* ty=Tensor[(14, 10, 4), uint32] */, dtype="bool") /* ty=Tensor[(14, 10, 4), bool] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%351, %352) /* ty=Tensor[(14, 10, 4), bool] */
}

def @func_5005() -> Tensor[(9, 15, 12), float64] {
  %354 = fn () -> Tensor[(9, 15, 12), float64] {
    %353 = @func_4879() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(16, 7, 9), float32], Tensor[(1008), float32], Tensor[(9, 15, 12), float64], Tensor[(1, 1620), float32]) */;
    %353.5
  };
  %354() /* ty=Tensor[(9, 15, 12), float64] */
}

def @func_10057(%var_10055: Tensor[(4, 7, 11), float32], %var_10056: Tensor[(4, 7, 11), float32]) -> (Tensor[(4, 7, 11), float32],) {
  @func_10053(%var_10055, %var_10056) /* ty=(Tensor[(4, 7, 11), float32],) */
}

def @func_2932() -> Tensor[(9, 16, 13), uint16] {
  %355 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %355.0
}

def @func_4411(%var_4361: Tensor[(420), float32]) -> (Tensor[(1620), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(?, 3, 11), bool], Tensor[(9, 15, 12), float64], Tensor[(420), float32], int8, Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), float64], Tensor[(16, 7, 9), float32], Tensor[(9, 16, 13), float64], Tensor[(2145, 308), float64], Tensor[(9, 16, 13), float64]) {
  %356 = cast(meta[relay.Constant][26] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %357 = cast(meta[relay.Constant][25] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %358 = reshape(%356, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float32] */;
  %359 = reshape(%357, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %360 = @func_917(%358, %359) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %361 = cast(meta[relay.Constant][27] /* ty=Tensor[(308), int64] */, dtype="int64") /* ty=Tensor[(308), int64] */;
  %362 = cast(meta[relay.Constant][27] /* ty=Tensor[(308), int64] */, dtype="int64") /* ty=Tensor[(308), int64] */;
  %363 = cast(meta[relay.Constant][26] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %364 = cast(meta[relay.Constant][25] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %365 = reshape(%361, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
  %366 = reshape(%362, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
  %367 = reshape(%363, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %368 = reshape(%364, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %369 = @func_3075(%365, %366, %367, %368) /* ty=(Tensor[(11, 4, 7), int64], Tensor[(1, 3, 11), float64], Tensor[(11, 3), float64], Tensor[(1620), float64], Tensor[(2145), float32], Tensor[(1620), float64]) */;
  %370 = %369.1;
  %371 = cast(%370, dtype="float64") /* ty=Tensor[(1, 3, 11), float64] */;
  %372 = reshape(%371, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
  %373 = @func_610(%372) /* ty=Tensor[(1, 3, 11), float64] */;
  %374 = cast(%370, dtype="bool") /* ty=Tensor[(1, 3, 11), bool] */;
  %375 = shape_of(%373, dtype="int32") /* ty=Tensor[(3), int32] */;
  %376 = cast(%373, dtype="bool") /* ty=Tensor[(1, 3, 11), bool] */;
  %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %378 = cast(meta[relay.Constant][26] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %379 = %360.1;
  %380 = cast(%379, dtype="float64") /* ty=Tensor[(9, 15, 12), float64] */;
  %381 = reshape(%378, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float32] */;
  %382 = reshape(%380, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %383 = @func_917(%381, %382) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %384 = cast(meta[relay.Constant][26] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %385 = cast(%379, dtype="float64") /* ty=Tensor[(9, 15, 12), float64] */;
  %386 = reshape(%384, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float32] */;
  %387 = reshape(%385, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %388 = @func_917(%386, %387) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %389 = cast(meta[relay.Constant][26] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %390 = %388.1;
  %391 = cast(%390, dtype="float64") /* ty=Tensor[(9, 15, 12), float64] */;
  %392 = reshape(%389, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float32] */;
  %393 = reshape(%391, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %394 = @func_917(%392, %393) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %395 = @func_4262() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) */;
  %396 = %395.1;
  %397 = cast(%396, dtype="float32") /* ty=Tensor[(9, 16, 13), float32] */;
  %398 = sigmoid(%397) /* ty=Tensor[(9, 16, 13), float32] */;
  %399 = cast(%var_4361, dtype="float32") /* ty=Tensor[(420), float32] */;
  %400 = cast(meta[relay.Constant][28] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %401 = reshape(%399, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %402 = reshape(%400, newshape=[]) /* ty=int8 */;
  %403 = @func_3492(%401, %402) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(16, 7, 9), uint64], Tensor[(420), float32], int8) */;
  %404 = %403.0;
  %405 = cast(%404, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %406 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %407 = cast(%398, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %409 = @func_3667() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1008), float32], Tensor[(9, 16, 13), float64]) */;
  %410 = cast(meta[relay.Constant][28] /* ty=int8 */, dtype="uint8") /* ty=uint8 */;
  %411 = reshape(%410, newshape=[]) /* ty=uint8 */;
  %412 = @func_1304(%411) /* ty=(Tensor[(3, 1, 5), uint8], Tensor[(16, 7, 9), float32], Tensor[(1008), float32]) */;
  %413 = cast(%var_4361, dtype="float32") /* ty=Tensor[(420), float32] */;
  %414 = cast(meta[relay.Constant][28] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %415 = reshape(%413, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %416 = reshape(%414, newshape=[]) /* ty=int8 */;
  %417 = @func_3492(%415, %416) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(16, 7, 9), uint64], Tensor[(420), float32], int8) */;
  %418 = cast(meta[relay.Constant][26] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %419 = cast(meta[relay.Constant][27] /* ty=Tensor[(308), int64] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %420 = mod(%418, %419) /* ty=Tensor[(2145, 308), float32] */;
  %421 = cast(%420, dtype="bool") /* ty=Tensor[(2145, 308), bool] */;
  %422 = cast(meta[relay.Constant][27] /* ty=Tensor[(308), int64] */, dtype="bool") /* ty=Tensor[(308), bool] */;
  %423 = logical_and(%421, %422) /* ty=Tensor[(2145, 308), bool] */;
  %424 = cast(%423, dtype="float64") /* ty=Tensor[(2145, 308), float64] */;
  %425 = cast(%398, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %426 = atan(%425) /* ty=Tensor[(9, 16, 13), float64] */;
  %427 = cast(%398, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %428 = shape_of(%426, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%426, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %431 = @func_4039() /* ty=Tensor[(9, 16, 13), uint16] */;
  %432 = equal(%376, %377) /* ty=Tensor[(?, 3, 11), bool] */;
  %433 = %383.1;
  %434 = %394.2;
  %435 = divide(%407, %408) /* ty=Tensor[(9, 16, 13), float64] */;
  %436 = %409.2;
  %437 = %412.1;
  %438 = %417.0;
  %439 = acosh(%424) /* ty=Tensor[(2145, 308), float64] */;
  %440 = floor_mod(%429, %430) /* ty=Tensor[(9, 16, 13), float64] */;
  (meta[relay.Constant][25] /* ty=Tensor[(1620), float64] */, %431, %379, %432, %433, %var_4361, meta[relay.Constant][28] /* ty=int8 */, %390, %434, %435, %436, %437, %438, %439, %440)
}

def @func_4893() -> (Tensor[(9, 16, 13), float64],) {
  %442 = fn () -> (Tensor[(9, 16, 13), float64],) {
    %441 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
    (%441,)
  };
  %442() /* ty=(Tensor[(9, 16, 13), float64],) */
}

def @func_6552() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  @func_6550() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */
}

def @func_4734(%var_4732: Tensor[(1008), float64], %var_4733: Tensor[(33), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(7, 2, 9), uint32], Tensor[(33), float64], Tensor[(1620), float64], Tensor[(1008), float64], Tensor[(9, 15, 12), float64], Tensor[(9, 16, 13), int8]) {
  %470 = fn (%var_4660: Tensor[(1008), float64], %var_4661: Tensor[(33), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(7, 2, 9), uint32], Tensor[(33), float64], Tensor[(1620), float64], Tensor[(1008), float64], Tensor[(9, 15, 12), float64], Tensor[(9, 16, 13), int8]) {
    %443 = cast(%var_4660, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %444 = cast(%var_4661, dtype="float64") /* ty=Tensor[(33), float64] */;
    %445 = cast(meta[relay.Constant][29] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %446 = cast(%var_4660, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %447 = reshape(%443, newshape=[84, 12]) /* ty=Tensor[(84, 12), float64] */;
    %448 = reshape(%444, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
    %449 = reshape(%445, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
    %450 = reshape(%446, newshape=[84, 12]) /* ty=Tensor[(84, 12), float64] */;
    %451 = @func_4443(%447, %448, %449, %450) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(715, 3), float32], Tensor[(33, 1), float64], Tensor[(1620), float64], Tensor[(7, 2, 9), uint32], Tensor[(126), uint32], Tensor[(84, 12), int8]) */;
    %452 = cast(%var_4660, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %453 = cast(meta[relay.Constant][29] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %454 = reshape(%453, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
    %455 = @func_721(%454) /* ty=(Tensor[(9, 15, 12), float64],) */;
    %456 = @func_4277() /* ty=Tensor[(9, 16, 13), uint16] */;
    %457 = @func_3151() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %458 = %457.0;
    %459 = cast(%458, dtype="float32") /* ty=Tensor[(9, 16, 13), float32] */;
    %460 = acosh(%459) /* ty=Tensor[(9, 16, 13), float32] */;
    %461 = cast(%460, dtype="int8") /* ty=Tensor[(9, 16, 13), int8] */;
    %462 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
    %463 = cast(%456, dtype="int8") /* ty=Tensor[(9, 16, 13), int8] */;
    %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %465 = @func_4039() /* ty=Tensor[(9, 16, 13), uint16] */;
    %466 = %451.4;
    %467 = cosh(%452) /* ty=Tensor[(1008), float64] */;
    %468 = %455.0;
    %469 = right_shift(%463, %464) /* ty=Tensor[(9, 16, 13), int8] */;
    (%465, %466, %var_4661, meta[relay.Constant][29] /* ty=Tensor[(1620), float64] */, %467, %468, %469)
  };
  %470(%var_4732, %var_4733) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(7, 2, 9), uint32], Tensor[(33), float64], Tensor[(1620), float64], Tensor[(1008), float64], Tensor[(9, 15, 12), float64], Tensor[(9, 16, 13), int8]) */
}

def @func_8867() -> Tensor[(9, 16, 13), float64] {
  %472 = fn () -> Tensor[(9, 16, 13), float64] {
    %471 = @func_5446() /* ty=(Tensor[(9, 16, 13), float64],) */;
    %471.0
  };
  %472() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_11844() -> (Tensor[(9, 16, 13), uint16],) {
  @func_11842() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_11420(%var_11402: int32, %var_11403: Tensor[(11, 15, 15), int32]) -> (Tensor[(11, 15, 15), int32],) {
  %473 = cast(%var_11402, dtype="int32") /* ty=int32 */;
  %474 = cast(%var_11403, dtype="int32") /* ty=Tensor[(11, 15, 15), int32] */;
  %475 = bitwise_and(%473, %474) /* ty=Tensor[(11, 15, 15), int32] */;
  (%475,)
}

def @func_3196(%var_3195: Tensor[(9, 16, 13), float64]) -> (Tensor[(9, 16, 13), bool], Tensor[(1008), float32], uint8) {
  %486 = fn (%var_3183: Tensor[(9, 16, 13), float64]) -> (Tensor[(9, 16, 13), bool], Tensor[(1008), float32], uint8) {
    %476 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
    %477 = cast(%var_3183, dtype="bool") /* ty=Tensor[(9, 16, 13), bool] */;
    %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(3), int32] */;
    %479 = cast(%476, dtype="bool") /* ty=Tensor[(9, 16, 13), bool] */;
    %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %481 = cast(meta[relay.Constant][30] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %482 = reshape(%481, newshape=[]) /* ty=uint8 */;
    %483 = @func_1304(%482) /* ty=(Tensor[(3, 1, 5), uint8], Tensor[(16, 7, 9), float32], Tensor[(1008), float32]) */;
    %484 = greater_equal(%479, %480) /* ty=Tensor[(9, 16, 13), bool] */;
    %485 = %483.2;
    (%484, %485, meta[relay.Constant][30] /* ty=uint8 */)
  };
  %486(%var_3195) /* ty=(Tensor[(9, 16, 13), bool], Tensor[(1008), float32], uint8) */
}

def @func_1879(%var_1875: Tensor[(12, 7, 12), float64], %var_1876: Tensor[(12, 7, 12), float64], %var_1877: Tensor[(33), float64], %var_1878: Tensor[(1620), float64]) -> (Tensor[(12, 7, 12), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(9, 15, 12), float64], Tensor[(715, 3), float32], Tensor[(1620), float32]) {
  %508 = fn (%var_1823: Tensor[(12, 7, 12), float64], %var_1824: Tensor[(12, 7, 12), float64], %var_1844: Tensor[(33), float64], %var_1854: Tensor[(1620), float64]) -> (Tensor[(12, 7, 12), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(9, 15, 12), float64], Tensor[(715, 3), float32], Tensor[(1620), float32]) {
    %487 = cast(%var_1824, dtype="float64") /* ty=Tensor[(12, 7, 12), float64] */;
    %488 = shape_of(%var_1823, dtype="int32") /* ty=Tensor[(3), int32] */;
    %489 = cast(%var_1823, dtype="float64") /* ty=Tensor[(12, 7, 12), float64] */;
    %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %491 = mod(%489, %490) /* ty=Tensor[(12, 7, 12), float64] */;
    %492 = cast(%var_1823, dtype="bool") /* ty=Tensor[(12, 7, 12), bool] */;
    %493 = shape_of(%491, dtype="int32") /* ty=Tensor[(3), int32] */;
    %494 = cast(%491, dtype="bool") /* ty=Tensor[(12, 7, 12), bool] */;
    %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %496 = cast(%var_1844, dtype="float64") /* ty=Tensor[(33), float64] */;
    %497 = reshape(%496, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
    %498 = cast(meta[relay.Constant][31] /* ty=Tensor[(715, 3), float32] */, dtype="float32") /* ty=Tensor[(715, 3), float32] */;
    %499 = cast(%var_1854, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %500 = reshape(%498, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float32] */;
    %501 = reshape(%499, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
    %502 = @func_917(%500, %501) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
    %503 = cast(%var_1854, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %504 = greater(%494, %495) /* ty=Tensor[(12, 7, 12), bool] */;
    %505 = @func_610(%497) /* ty=Tensor[(1, 3, 11), float64] */;
    %506 = %502.1;
    %507 = sigmoid(%503) /* ty=Tensor[(1620), float32] */;
    (%504, %505, %var_1844, %506, meta[relay.Constant][31] /* ty=Tensor[(715, 3), float32] */, %507)
  };
  %508(%var_1875, %var_1876, %var_1877, %var_1878) /* ty=(Tensor[(12, 7, 12), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(9, 15, 12), float64], Tensor[(715, 3), float32], Tensor[(1620), float32]) */
}

def @func_9149(%var_9147: Tensor[(13, 11, 10), int32]) -> (Tensor[(13, 11, 10), bool], Tensor[(13, 11, 10), float32]) {
  @func_9146(%var_9147) /* ty=(Tensor[(13, 11, 10), bool], Tensor[(13, 11, 10), float32]) */
}

def @func_6550() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %509 = @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %510 = @func_4039() /* ty=Tensor[(9, 16, 13), uint16] */;
  %511 = %509.0;
  (%510, %511)
}

def @func_8258(%var_8257: Tensor[(1, 7, 6), float64]) -> (Tensor[(1620), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64], Tensor[(?, 7, 6), bool]) {
  %531 = fn (%var_8226: Tensor[(1, 7, 6), float64]) -> (Tensor[(1620), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64], Tensor[(?, 7, 6), bool]) {
    %512 = cast(meta[relay.Constant][32] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %513 = cast(meta[relay.Constant][33] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
    %514 = cast(meta[relay.Constant][34] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %515 = cast(meta[relay.Constant][32] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %516 = reshape(%512, newshape=[84, 12]) /* ty=Tensor[(84, 12), float64] */;
    %517 = reshape(%513, newshape=[33, 1]) /* ty=Tensor[(33, 1), float64] */;
    %518 = reshape(%514, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
    %519 = reshape(%515, newshape=[84, 12]) /* ty=Tensor[(84, 12), float64] */;
    %520 = @func_4443(%516, %517, %518, %519) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(715, 3), float32], Tensor[(33, 1), float64], Tensor[(1620), float64], Tensor[(7, 2, 9), uint32], Tensor[(126), uint32], Tensor[(84, 12), int8]) */;
    %521 = cast(%var_8226, dtype="float64") /* ty=Tensor[(1, 7, 6), float64] */;
    %522 = sigmoid(%521) /* ty=Tensor[(1, 7, 6), float64] */;
    %523 = cast(%522, dtype="float32") /* ty=Tensor[(1, 7, 6), float32] */;
    %524 = atan(%523) /* ty=Tensor[(1, 7, 6), float32] */;
    %525 = cast(%var_8226, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
    %526 = shape_of(%524, dtype="int32") /* ty=Tensor[(3), int32] */;
    %527 = cast(%524, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
    %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %529 = %520.3;
    %530 = logical_or(%527, %528) /* ty=Tensor[(?, 7, 6), bool] */;
    (%529, meta[relay.Constant][32] /* ty=Tensor[(1008), float64] */, meta[relay.Constant][33] /* ty=Tensor[(33), float64] */, meta[relay.Constant][34] /* ty=Tensor[(1620), float64] */, %530)
  };
  %531(%var_8257) /* ty=(Tensor[(1620), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64], Tensor[(?, 7, 6), bool]) */
}

def @func_5600(%var_5536: Tensor[(105), uint32], %var_5537: Tensor[(33), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], uint32, Tensor[(105), uint32], Tensor[(33), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) {
  %532 = @func_4262() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) */;
  %533 = cast(meta[relay.Constant][35] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %534 = cast(%var_5536, dtype="uint32") /* ty=Tensor[(105), uint32] */;
  %535 = cast(%var_5537, dtype="float64") /* ty=Tensor[(33), float64] */;
  %536 = reshape(%533, newshape=[]) /* ty=uint32 */;
  %537 = reshape(%534, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), uint32] */;
  %538 = reshape(%535, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %539 = @func_2669(%536, %537, %538) /* ty=(Tensor[(5, 7, 3), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(33), float64], Tensor[(1440), int8], Tensor[(9, 15, 12), float64], Tensor[(1008), float32], Tensor[(1, 3, 11), float64], Tensor[(16, 7, 9), float64]) */;
  %540 = cast(%var_5537, dtype="float64") /* ty=Tensor[(33), float64] */;
  %541 = %532.0;
  %542 = @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */;
  %543 = %539.7;
  %544 = exp(%540) /* ty=Tensor[(33), float64] */;
  %545 = @func_4813() /* ty=Tensor[(9, 16, 13), float64] */;
  %546 = @func_4277() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%541, %542, %543, meta[relay.Constant][35] /* ty=uint32 */, %var_5536, %544, %545, %546)
}

def @func_6834() -> Tensor[(9, 16, 13), uint16] {
  @func_6832() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_11346(%var_11344: Tensor[(715, 2), int32], %var_11345: Tensor[(1620), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(13, 11, 10), float32], Tensor[(715, 2), int32], Tensor[(9, 16, 13), bool], Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(2145, 1), float32], Tensor[(1620), float64]) {
  @func_11342(%var_11344, %var_11345) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(13, 11, 10), float32], Tensor[(715, 2), int32], Tensor[(9, 16, 13), bool], Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(2145, 1), float32], Tensor[(1620), float64]) */
}

def @func_4443(%var_4426: Tensor[(84, 12), float64], %var_4427: Tensor[(33, 1), float64], %var_4428: Tensor[(1620), float64], %var_4438: Tensor[(84, 12), float64]) -> (Tensor[(9, 16, 13), float64], Tensor[(715, 3), float32], Tensor[(33, 1), float64], Tensor[(1620), float64], Tensor[(7, 2, 9), uint32], Tensor[(126), uint32], Tensor[(84, 12), int8]) {
  %547 = cast(%var_4426, dtype="float64") /* ty=Tensor[(84, 12), float64] */;
  %548 = cast(%var_4426, dtype="float64") /* ty=Tensor[(84, 12), float64] */;
  %549 = cast(%var_4427, dtype="float64") /* ty=Tensor[(33, 1), float64] */;
  %550 = cast(%var_4428, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %551 = reshape(%547, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float64] */;
  %552 = reshape(%548, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float64] */;
  %553 = reshape(%549, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %554 = reshape(%550, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %555 = @func_1874(%551, %552, %553, %554) /* ty=(Tensor[(12, 7, 12), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(9, 15, 12), float64], Tensor[(715, 3), float32], Tensor[(1620), float32]) */;
  %556 = cast(meta[relay.Constant][36] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %557 = cast(%var_4428, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %558 = reshape(%556, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), uint32] */;
  %559 = reshape(%557, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %560 = @func_2438(%558, %559) /* ty=(Tensor[(7, 2, 9), uint32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %561 = cast(%var_4438, dtype="int8") /* ty=Tensor[(84, 12), int8] */;
  %562 = shape_of(%var_4426, dtype="int32") /* ty=Tensor[(2), int32] */;
  %563 = cast(%var_4426, dtype="int8") /* ty=Tensor[(84, 12), int8] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %565 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
  %566 = %555.4;
  %567 = %560.0;
  %568 = bitwise_xor(%563, %564) /* ty=Tensor[(84, 12), int8] */;
  (%565, %566, %var_4427, %var_4428, %567, meta[relay.Constant][36] /* ty=Tensor[(126), uint32] */, %568)
}

def @func_11962() -> (Tensor[(1, 15, 5), float32], Tensor[(3, 15, 5), float32]) {
  %569 = @func_6606() /* ty=(Tensor[(1, 15, 5), float32], Tensor[(9, 16, 13), uint16]) */;
  %570 = %569.0;
  %571 = cast(%570, dtype="float32") /* ty=Tensor[(1, 15, 5), float32] */;
  %572 = cast(%570, dtype="float64") /* ty=Tensor[(1, 15, 5), float64] */;
  %573 = sqrt(%572) /* ty=Tensor[(1, 15, 5), float64] */;
  %574 = cast(%573, dtype="float32") /* ty=Tensor[(1, 15, 5), float32] */;
  %575 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 15, 5), float64] */, dtype="float32") /* ty=Tensor[(3, 15, 5), float32] */;
  %576 = sin(%571) /* ty=Tensor[(1, 15, 5), float32] */;
  %577 = floor_mod(%574, %575) /* ty=Tensor[(3, 15, 5), float32] */;
  (%576, %577)
}

def @func_6173() -> (Tensor[(9, 16, 13), uint16],) {
  %578 = @func_4262() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) */;
  %579 = %578.0;
  (%579,)
}

def @func_8920() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  @func_8918() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */
}

def @func_6270() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %580 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %581 = @func_3686() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) */;
  %582 = %580.0;
  %583 = %581.1;
  (%582, %583)
}

def @func_11696() -> (Tensor[(9, 16, 13), uint16],) {
  %584 = @func_8344() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %585 = %584.0;
  (%585,)
}

def @func_11799() -> (Tensor[(9, 16, 13), float64], Tensor[(308), int64], Tensor[(9, 16, 13), uint16]) {
  %590 = fn () -> (Tensor[(9, 16, 13), float64], Tensor[(308), int64], Tensor[(9, 16, 13), uint16]) {
    %586 = @func_10893() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(308), int64], Tensor[(9, 16, 13), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) */;
    %587 = @func_8671() /* ty=Tensor[(9, 16, 13), float64] */;
    %588 = %586.2;
    %589 = @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */;
    (%587, %588, %589)
  };
  %590() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(308), int64], Tensor[(9, 16, 13), uint16]) */
}

def @func_6875() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) {
  %591 = @func_6507() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %592 = @func_6452() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %593 = %591.0;
  %594 = %592.0;
  (%593, %594)
}

def @func_9687() -> (Tensor[(9, 16, 13), uint16],) {
  @func_9685() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_10080() -> (Tensor[(9, 16, 13), uint16],) {
  %595 = @func_4939() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %596 = %595.0;
  (%596,)
}

def @func_6886() -> (Tensor[(9, 16, 13), uint16], Tensor[(1620), float64]) {
  %597 = @func_5755() /* ty=Tensor[(9, 16, 13), uint16] */;
  %598 = @func_5470() /* ty=Tensor[(1620), float64] */;
  (%597, %598)
}

def @func_8140() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), bool]) {
  %605 = fn () -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), bool]) {
    %599 = @func_6270() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
    %600 = %599.0;
    %601 = cast(%600, dtype="uint16") /* ty=Tensor[(9, 16, 13), uint16] */;
    %602 = reshape(%601, newshape=[9, 16, 13]) /* ty=Tensor[(9, 16, 13), uint16] */;
    %603 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
    %604 = @func_5122(%602) /* ty=Tensor[(9, 16, 13), bool] */;
    (%603, %600, %604)
  };
  %605() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), bool]) */
}

def @func_2934() -> Tensor[(9, 16, 13), uint16] {
  @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_4449(%var_4445: Tensor[(84, 12), float64], %var_4446: Tensor[(33, 1), float64], %var_4447: Tensor[(1620), float64], %var_4448: Tensor[(84, 12), float64]) -> (Tensor[(9, 16, 13), float64], Tensor[(715, 3), float32], Tensor[(33, 1), float64], Tensor[(1620), float64], Tensor[(7, 2, 9), uint32], Tensor[(126), uint32], Tensor[(84, 12), int8]) {
  @func_4443(%var_4445, %var_4446, %var_4447, %var_4448) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(715, 3), float32], Tensor[(33, 1), float64], Tensor[(1620), float64], Tensor[(7, 2, 9), uint32], Tensor[(126), uint32], Tensor[(84, 12), int8]) */
}

def @func_8500() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(1440), int8]) {
  %614 = fn () -> (Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(1440), int8]) {
    %606 = @func_3667() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1008), float32], Tensor[(9, 16, 13), float64]) */;
    %607 = cast(meta[relay.Constant][38] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %608 = reshape(%607, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
    %609 = @func_721(%608) /* ty=(Tensor[(9, 15, 12), float64],) */;
    %610 = @func_7629() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1440), int8], uint32, Tensor[(105), uint32], Tensor[(1, 33), float64]) */;
    %611 = %606.2;
    %612 = %609.0;
    %613 = %610.1;
    (%611, %612, meta[relay.Constant][38] /* ty=Tensor[(1620), float64] */, %613)
  };
  %614() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(1440), int8]) */
}

def @func_3346() -> (Tensor[(9, 16, 13), uint16],) {
  %615 = @func_3151() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %616 = %615.0;
  (%616,)
}

def @func_4499() -> (Tensor[(1620), float64],) {
  @func_4497() /* ty=(Tensor[(1620), float64],) */
}

def @func_6877() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) {
  @func_6875() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) */
}

def @func_7631() -> (Tensor[(9, 16, 13), uint16], Tensor[(1440), int8], uint32, Tensor[(105), uint32], Tensor[(1, 33), float64]) {
  @func_7629() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1440), int8], uint32, Tensor[(105), uint32], Tensor[(1, 33), float64]) */
}

def @func_10053(%var_10036: Tensor[(4, 7, 11), float32], %var_10037: Tensor[(4, 7, 11), float32]) -> (Tensor[(4, 7, 11), float32],) {
  %617 = cast(%var_10037, dtype="bool") /* ty=Tensor[(4, 7, 11), bool] */;
  %618 = shape_of(%var_10036, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%var_10036, dtype="bool") /* ty=Tensor[(4, 7, 11), bool] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %621 = greater(%619, %620) /* ty=Tensor[(4, 7, 11), bool] */;
  %622 = cast(%621, dtype="float32") /* ty=Tensor[(4, 7, 11), float32] */;
  %623 = asin(%622) /* ty=Tensor[(4, 7, 11), float32] */;
  (%623,)
}

def @func_11897() -> Tensor[(9, 16, 13), uint16] {
  %624 = @func_11494() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %624.1
}

def @func_7397() -> Tensor[(9, 16, 13), bool] {
  %626 = fn () -> Tensor[(9, 16, 13), bool] {
    %625 = @func_5242() /* ty=(Tensor[(9, 16, 13), bool],) */;
    %625.0
  };
  %626() /* ty=Tensor[(9, 16, 13), bool] */
}

def @func_7782() -> Tensor[(9, 16, 13), uint16] {
  %627 = @func_3151() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %627.0
}

def @func_11120() -> (Tensor[(1620), float64],) {
  %630 = fn () -> (Tensor[(1620), float64],) {
    %628 = @func_6886() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1620), float64]) */;
    %629 = %628.1;
    (%629,)
  };
  %630() /* ty=(Tensor[(1620), float64],) */
}

def @func_3687() -> (Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) {
  %635 = fn () -> (Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) {
    %631 = @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
    %632 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %633 = %631.2;
    %634 = %632.0;
    (%633, %634)
  };
  %635() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) */
}

def @func_10145() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %640 = fn () -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
    %636 = @func_8918() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
    %637 = @func_6814() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %638 = %636.0;
    %639 = %637.0;
    (%638, %639)
  };
  %640() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */
}

def @func_4278() -> Tensor[(9, 16, 13), uint16] {
  %641 = fn () -> Tensor[(9, 16, 13), uint16] {
    @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */
  };
  %641() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_3152() -> (Tensor[(9, 16, 13), uint16],) {
  %643 = fn () -> (Tensor[(9, 16, 13), uint16],) {
    %642 = @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */;
    (%642,)
  };
  %643() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_8974() -> (Tensor[(9, 16, 13), float64], Tensor[(1620), float64]) {
  %649 = fn () -> (Tensor[(9, 16, 13), float64], Tensor[(1620), float64]) {
    %644 = @func_7424() /* ty=(Tensor[(1620), float64],) */;
    %645 = %644.0;
    %646 = cast(%645, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %647 = @func_8388() /* ty=Tensor[(9, 16, 13), float64] */;
    %648 = cos(%646) /* ty=Tensor[(1620), float64] */;
    (%647, %648)
  };
  %649() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(1620), float64]) */
}

def @func_4813() -> Tensor[(9, 16, 13), float64] {
  @func_3129() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_9710() -> (Tensor[(9, 16, 13), float64],) {
  @func_9708() /* ty=(Tensor[(9, 16, 13), float64],) */
}

def @func_7554() -> (Tensor[(9, 16, 13), float64], Tensor[(1620), float64]) {
  %653 = fn () -> (Tensor[(9, 16, 13), float64], Tensor[(1620), float64]) {
    %650 = @func_5223() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), float64]) */;
    %651 = @func_4800() /* ty=Tensor[(9, 16, 13), float64] */;
    %652 = %650.0;
    (%651, %652)
  };
  %653() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(1620), float64]) */
}

def @func_3425() -> (Tensor[(9, 16, 13), uint16],) {
  %656 = fn () -> (Tensor[(9, 16, 13), uint16],) {
    %654 = @func_3151() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %655 = %654.0;
    (%655,)
  };
  %656() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_3854(%var_3852: Tensor[(1440), int8]) -> (Tensor[(9, 16, 13), uint16], Tensor[(1440), int8], Tensor[(84, 12), int32]) {
  @func_3851(%var_3852) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1440), int8], Tensor[(84, 12), int32]) */
}

def @func_10440() -> (float32,) {
  %659 = fn () -> (float32,) {
    %657 = @func_9934() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], float32) */;
    %658 = %657.6;
    (%658,)
  };
  %659() /* ty=(float32,) */
}

def @func_10104(%var_10103: Tensor[(1, 13, 16), float64]) -> Tensor[(1, 13, 16), float64] {
  %662 = fn (%var_10094: Tensor[(1, 13, 16), float64]) -> Tensor[(1, 13, 16), float64] {
    %660 = cast(-4.98468f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %661 = cast(%var_10094, dtype="float64") /* ty=Tensor[(1, 13, 16), float64] */;
    maximum(%660, %661) /* ty=Tensor[(1, 13, 16), float64] */
  };
  %662(%var_10103) /* ty=Tensor[(1, 13, 16), float64] */
}

def @func_10840() -> Tensor[(9, 16, 13), uint16] {
  @func_10838() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_4497() -> (Tensor[(1620), float64],) {
  %663 = @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %664 = %663.2;
  (%664,)
}

def @func_8545() -> Tensor[(9, 16, 13), float64] {
  %665 = @func_4879() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(16, 7, 9), float32], Tensor[(1008), float32], Tensor[(9, 15, 12), float64], Tensor[(1, 1620), float32]) */;
  %665.0
}

def @func_3495(%var_3493: Tensor[(420), float32], %var_3494: int8) -> (Tensor[(9, 16, 13), float64], Tensor[(16, 7, 9), uint64], Tensor[(420), float32], int8) {
  %675 = fn (%var_3489: Tensor[(420), float32], %var_3490: int8) -> (Tensor[(9, 16, 13), float64], Tensor[(16, 7, 9), uint64], Tensor[(420), float32], int8) {
    %666 = cast(%var_3489, dtype="float32") /* ty=Tensor[(420), float32] */;
    %667 = cast(%var_3489, dtype="float32") /* ty=Tensor[(420), float32] */;
    %668 = cast(%var_3490, dtype="int8") /* ty=int8 */;
    %669 = reshape(%666, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), float32] */;
    %670 = reshape(%667, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), float32] */;
    %671 = reshape(%668, newshape=[]) /* ty=int8 */;
    %672 = @func_2824(%669, %670, %671) /* ty=(Tensor[(14, 2, 15), bool], Tensor[(14, 2, 15), float32], Tensor[(16, 7, 9), uint64], Tensor[(1008), float32], Tensor[(84, 12), float32], int8, Tensor[(1440), int8]) */;
    %673 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
    %674 = %672.2;
    (%673, %674, %var_3489, %var_3490)
  };
  %675(%var_3493, %var_3494) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(16, 7, 9), uint64], Tensor[(420), float32], int8) */
}

def @func_8344() -> (Tensor[(9, 16, 13), uint16],) {
  %676 = @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%676,)
}

def @func_11105() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), float64]) {
  @func_11103() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), float64]) */
}

def @func_4088(%var_4060: Tensor[(9, 16, 13), uint16], %var_4072: Tensor[(1008), float64], %var_4073: Tensor[(33), float64]) -> (Tensor[(9, 16, 13), int64], Tensor[(9, 16, 13), uint16], Tensor[(33), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64]) {
  %677 = @func_3346() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %678 = %677.0;
  %679 = cast(%var_4060, dtype="int64") /* ty=Tensor[(9, 16, 13), int64] */;
  %680 = shape_of(%678, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(%678, dtype="int64") /* ty=Tensor[(9, 16, 13), int64] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %683 = @func_3667() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1008), float32], Tensor[(9, 16, 13), float64]) */;
  %684 = cast(%var_4072, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %685 = cast(%var_4072, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %686 = cast(%var_4073, dtype="float64") /* ty=Tensor[(33), float64] */;
  %687 = cast(meta[relay.Constant][39] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %688 = reshape(%684, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float64] */;
  %689 = reshape(%685, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float64] */;
  %690 = reshape(%686, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %691 = reshape(%687, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %692 = @func_1874(%688, %689, %690, %691) /* ty=(Tensor[(12, 7, 12), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(9, 15, 12), float64], Tensor[(715, 3), float32], Tensor[(1620), float32]) */;
  %693 = multiply(%681, %682) /* ty=Tensor[(9, 16, 13), int64] */;
  %694 = %683.0;
  %695 = %692.2;
  (%693, %694, %695, %var_4072, %var_4073, meta[relay.Constant][39] /* ty=Tensor[(1620), float64] */)
}

def @func_8547() -> Tensor[(9, 16, 13), float64] {
  @func_8545() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_2441(%var_2439: Tensor[(7, 2, 9), uint32], %var_2440: Tensor[(1620), float64]) -> (Tensor[(7, 2, 9), uint32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) {
  %703 = fn (%var_2405: Tensor[(7, 2, 9), uint32], %var_2429: Tensor[(1620), float64]) -> (Tensor[(7, 2, 9), uint32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) {
    %696 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 2, 1), uint32] */, dtype="uint32") /* ty=Tensor[(7, 2, 1), uint32] */;
    %697 = cast(%var_2405, dtype="uint32") /* ty=Tensor[(7, 2, 9), uint32] */;
    %698 = cast(%var_2429, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %699 = reshape(%698, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
    %700 = @func_721(%699) /* ty=(Tensor[(9, 15, 12), float64],) */;
    %701 = add(%696, %697) /* ty=Tensor[(7, 2, 9), uint32] */;
    %702 = %700.0;
    (%701, %702, %var_2429)
  };
  %703(%var_2439, %var_2440) /* ty=(Tensor[(7, 2, 9), uint32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */
}

def @func_12122(%var_12119: Tensor[(1620), float64]) -> (Tensor[(9, 16, 13), float64], Tensor[(13, 11, 10), float32], Tensor[(1430), int32], Tensor[(1620), float64]) {
  %704 = cast(meta[relay.Constant][41] /* ty=Tensor[(1430), int32] */, dtype="int32") /* ty=Tensor[(1430), int32] */;
  %705 = cast(%var_12119, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %706 = reshape(%704, newshape=[715, 2]) /* ty=Tensor[(715, 2), int32] */;
  %707 = reshape(%705, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %708 = @func_11342(%706, %707) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(13, 11, 10), float32], Tensor[(715, 2), int32], Tensor[(9, 16, 13), bool], Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(2145, 1), float32], Tensor[(1620), float64]) */;
  %709 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
  %710 = %708.1;
  (%709, %710, meta[relay.Constant][41] /* ty=Tensor[(1430), int32] */, %var_12119)
}

def @func_12211(%var_12185: Tensor[(1008), float64]) -> (Tensor[(1620), float64], Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], Tensor[(1008), float64]) {
  %711 = @func_10486() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %712 = @func_10966() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %713 = cast(%var_12185, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %714 = reshape(%713, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %715 = @func_5081(%714) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64]) */;
  %716 = %711.0;
  %717 = %712.0;
  %718 = %715.1;
  (%716, %717, %718, %var_12185)
}

def @func_8794() -> (Tensor[(9, 16, 13), uint16], Tensor[(10, 5, 5), bool], Tensor[(250), int64], Tensor[(9, 16, 13), float64]) {
  %719 = @func_6814() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %720 = cast(meta[relay.Constant][42] /* ty=Tensor[(250), int64] */, dtype="int64") /* ty=Tensor[(250), int64] */;
  %721 = reshape(%720, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), int64] */;
  %722 = @func_6091(%721) /* ty=(Tensor[(10, 5, 5), bool],) */;
  %723 = %719.0;
  %724 = %722.0;
  %725 = @func_4582() /* ty=Tensor[(9, 16, 13), float64] */;
  (%723, %724, meta[relay.Constant][42] /* ty=Tensor[(250), int64] */, %725)
}

def @func_9234(%var_9233: Tensor[(1008), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1620), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64], Tensor[(42), float64], Tensor[(9, 16, 13), uint16]) {
  %746 = fn (%var_9202: Tensor[(1008), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1620), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64], Tensor[(42), float64], Tensor[(9, 16, 13), uint16]) {
    %726 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %727 = @func_4262() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) */;
    %728 = cast(meta[relay.Constant][43] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %729 = cast(%var_9202, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %730 = reshape(%728, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
    %731 = reshape(%729, newshape=[84, 12]) /* ty=Tensor[(84, 12), float64] */;
    %732 = @func_7363(%730, %731) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float32], Tensor[(9, 16, 13), uint16], Tensor[(126), uint32], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(33), float64], Tensor[(84, 12), float64], Tensor[(9, 16, 13), float64]) */;
    %733 = cast(%var_9202, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %734 = reshape(%733, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float32] */;
    %735 = @func_1190(%734) /* ty=(Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) */;
    %736 = cast(meta[relay.Constant][44] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
    %737 = reshape(%736, newshape=[1, 7, 6]) /* ty=Tensor[(1, 7, 6), float64] */;
    %738 = @func_8256(%737) /* ty=(Tensor[(1620), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64], Tensor[(?, 7, 6), bool]) */;
    %739 = @func_3151() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %740 = %726.0;
    %741 = %727.0;
    %742 = %732.4;
    %743 = %735.2;
    %744 = %738.0;
    %745 = %739.0;
    (%740, %741, %742, meta[relay.Constant][43] /* ty=Tensor[(1620), float64] */, %var_9202, %743, %744, meta[relay.Constant][44] /* ty=Tensor[(42), float64] */, %745)
  };
  %746(%var_9233) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1620), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64], Tensor[(42), float64], Tensor[(9, 16, 13), uint16]) */
}

def @func_9630() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %751 = fn () -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
    %747 = @func_5050() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %748 = @func_5050() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %749 = %747.0;
    %750 = %748.0;
    (%749, %750)
  };
  %751() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */
}

def @func_5940(%var_5896: Tensor[(9, 15, 12), float64]) -> (Tensor[(9, 15, 12), int32], Tensor[(9, 15, 12), uint16], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(9, 16, 13), uint16]) {
  %752 = @func_5004() /* ty=Tensor[(9, 15, 12), float64] */;
  %753 = @func_5223() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), float64]) */;
  %754 = %753.0;
  %755 = cast(%754, dtype="int32") /* ty=Tensor[(1620), int32] */;
  %756 = shape_of(%752, dtype="int32") /* ty=Tensor[(3), int32] */;
  %757 = cast(%752, dtype="int32") /* ty=Tensor[(9, 15, 12), int32] */;
  %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %759 = cast(%var_5896, dtype="uint16") /* ty=Tensor[(9, 15, 12), uint16] */;
  %760 = shape_of(%752, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(%752, dtype="uint16") /* ty=Tensor[(9, 15, 12), uint16] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %763 = @func_5223() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), float64]) */;
  %764 = @func_3424() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %765 = @func_4939() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %766 = bitwise_and(%757, %758) /* ty=Tensor[(9, 15, 12), int32] */;
  %767 = minimum(%761, %762) /* ty=Tensor[(9, 15, 12), uint16] */;
  %768 = %763.1;
  %769 = %764.0;
  %770 = @func_5004() /* ty=Tensor[(9, 15, 12), float64] */;
  %771 = %765.0;
  (%766, %767, %768, %769, %770, %771)
}

def @func_10416() -> Tensor[(9, 16, 13), uint16] {
  %773 = fn () -> Tensor[(9, 16, 13), uint16] {
    %772 = @func_8609() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(1620), float64]) */;
    %772.1
  };
  %773() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_10758(%var_10756: Tensor[(13, 9, 3), float32]) -> (Tensor[(13, 9, 3), float32],) {
  @func_10755(%var_10756) /* ty=(Tensor[(13, 9, 3), float32],) */
}

def @func_12125(%var_12123: Tensor[(1620), float64]) -> (Tensor[(9, 16, 13), float64], Tensor[(13, 11, 10), float32], Tensor[(1430), int32], Tensor[(1620), float64]) {
  @func_12122(%var_12123) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(13, 11, 10), float32], Tensor[(1430), int32], Tensor[(1620), float64]) */
}

def @func_10539() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %777 = fn () -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
    %774 = @func_6886() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1620), float64]) */;
    %775 = %774.0;
    %776 = @func_5755() /* ty=Tensor[(9, 16, 13), uint16] */;
    (%775, %776)
  };
  %777() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */
}

def @func_8918() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %778 = @func_6270() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %779 = @func_5050() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %780 = %778.1;
  %781 = %779.0;
  (%780, %781)
}

def @main(%var_12237: Tensor[(7, 1, 16), float64]) -> Tensor[(7, 1, 16), float64] {
  %782 = cast(%var_12237, dtype="float64") /* ty=Tensor[(7, 1, 16), float64] */;
  sinh(%782) /* ty=Tensor[(7, 1, 16), float64] */
}

def @func_7140() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) {
  @func_7138() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) */
}

def @func_5792() -> Tensor[(9, 16, 13), float64] {
  @func_5790() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_4583() -> Tensor[(9, 16, 13), float64] {
  %786 = fn () -> Tensor[(9, 16, 13), float64] {
    %783 = @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
    %784 = %783.0;
    %785 = cast(%784, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
    sin(%785) /* ty=Tensor[(9, 16, 13), float64] */
  };
  %786() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_7953(%var_7929: float32) -> (Tensor[(9, 16, 13), float64], Tensor[(2, 4, 7), float64], Tensor[(9, 15, 12), float64], float32, Tensor[(384), float32], Tensor[(2, 4, 7), float32], Tensor[(9, 16, 13), bool]) {
  %787 = @func_7171() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %788 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 4, 7), float64] */, dtype="float64") /* ty=Tensor[(2, 4, 7), float64] */;
  %789 = sqrt(%788) /* ty=Tensor[(2, 4, 7), float64] */;
  %790 = cast(%789, dtype="float64") /* ty=Tensor[(2, 4, 7), float64] */;
  %791 = atanh(%790) /* ty=Tensor[(2, 4, 7), float64] */;
  %792 = cast(%791, dtype="float64") /* ty=Tensor[(2, 4, 7), float64] */;
  %793 = shape_of(%789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %794 = cast(%789, dtype="float64") /* ty=Tensor[(2, 4, 7), float64] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %796 = %787.0;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %798 = cast(%var_7929, dtype="float32") /* ty=float32 */;
  %799 = cast(meta[relay.Constant][46] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %800 = reshape(%797, newshape=[9, 16, 13]) /* ty=Tensor[(9, 16, 13), float64] */;
  %801 = reshape(%798, newshape=[]) /* ty=float32 */;
  %802 = reshape(%799, newshape=[48, 8]) /* ty=Tensor[(48, 8), float32] */;
  %803 = @func_5838(%800, %801, %802) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(6, 4, 16), float32], float32, Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(48, 8), float32]) */;
  %804 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 4, 7), float64] */, dtype="float32") /* ty=Tensor[(2, 4, 7), float32] */;
  %805 = shape_of(%789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %806 = cast(%789, dtype="float32") /* ty=Tensor[(2, 4, 7), float32] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %808 = multiply(%794, %795) /* ty=Tensor[(2, 4, 7), float64] */;
  %809 = %803.4;
  %810 = floor_mod(%806, %807) /* ty=Tensor[(2, 4, 7), float32] */;
  %811 = @func_4484() /* ty=Tensor[(9, 16, 13), bool] */;
  (%796, %808, %809, %var_7929, meta[relay.Constant][46] /* ty=Tensor[(384), float32] */, %810, %811)
}

def @func_8452(%var_8449: Tensor[(308), int64], %var_8450: Tensor[(2145), float32], %var_8451: Tensor[(1620), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) {
  @func_8447(%var_8449, %var_8450, %var_8451) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) */
}

def @func_9747() -> (Tensor[(9, 16, 13), uint16],) {
  %812 = @func_8918() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %813 = %812.1;
  (%813,)
}

def @func_6485() -> (Tensor[(9, 16, 13), uint16],) {
  %815 = fn () -> (Tensor[(9, 16, 13), uint16],) {
    %814 = @func_4277() /* ty=Tensor[(9, 16, 13), uint16] */;
    (%814,)
  };
  %815() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_3080(%var_3076: Tensor[(11, 4, 7), int64], %var_3077: Tensor[(11, 4, 7), int64], %var_3078: Tensor[(2145), float32], %var_3079: Tensor[(1620), float64]) -> (Tensor[(11, 4, 7), int64], Tensor[(1, 3, 11), float64], Tensor[(11, 3), float64], Tensor[(1620), float64], Tensor[(2145), float32], Tensor[(1620), float64]) {
  %830 = fn (%var_3031: Tensor[(11, 4, 7), int64], %var_3032: Tensor[(11, 4, 7), int64], %var_3070: Tensor[(2145), float32], %var_3071: Tensor[(1620), float64]) -> (Tensor[(11, 4, 7), int64], Tensor[(1, 3, 11), float64], Tensor[(11, 3), float64], Tensor[(1620), float64], Tensor[(2145), float32], Tensor[(1620), float64]) {
    %816 = cast(%var_3032, dtype="int64") /* ty=Tensor[(11, 4, 7), int64] */;
    %817 = shape_of(%var_3031, dtype="int32") /* ty=Tensor[(3), int32] */;
    %818 = cast(%var_3031, dtype="int64") /* ty=Tensor[(11, 4, 7), int64] */;
    %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %820 = cast(meta[relay.Constant][47] /* ty=Tensor[(11, 3), float64] */, dtype="float64") /* ty=Tensor[(11, 3), float64] */;
    %821 = reshape(%820, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
    %822 = cast(%var_3070, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %823 = cast(%var_3071, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %824 = reshape(%822, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float32] */;
    %825 = reshape(%823, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
    %826 = @func_917(%824, %825) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
    %827 = subtract(%818, %819) /* ty=Tensor[(11, 4, 7), int64] */;
    %828 = @func_610(%821) /* ty=Tensor[(1, 3, 11), float64] */;
    %829 = %826.2;
    (%827, %828, meta[relay.Constant][47] /* ty=Tensor[(11, 3), float64] */, %829, %var_3070, %var_3071)
  };
  %830(%var_3076, %var_3077, %var_3078, %var_3079) /* ty=(Tensor[(11, 4, 7), int64], Tensor[(1, 3, 11), float64], Tensor[(11, 3), float64], Tensor[(1620), float64], Tensor[(2145), float32], Tensor[(1620), float64]) */
}

def @func_5124(%var_5123: Tensor[(9, 16, 13), uint16]) -> Tensor[(9, 16, 13), bool] {
  %837 = fn (%var_5114: Tensor[(9, 16, 13), uint16]) -> Tensor[(9, 16, 13), bool] {
    %831 = @func_5050() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %832 = %831.0;
    %833 = cast(%var_5114, dtype="bool") /* ty=Tensor[(9, 16, 13), bool] */;
    %834 = shape_of(%832, dtype="int32") /* ty=Tensor[(3), int32] */;
    %835 = cast(%832, dtype="bool") /* ty=Tensor[(9, 16, 13), bool] */;
    %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%835, %836) /* ty=Tensor[(9, 16, 13), bool] */
  };
  %837(%var_5123) /* ty=Tensor[(9, 16, 13), bool] */
}

def @func_5838(%var_5815: Tensor[(9, 16, 13), float64], %var_5822: float32, %var_5823: Tensor[(48, 8), float32]) -> (Tensor[(9, 16, 13), float64], Tensor[(6, 4, 16), float32], float32, Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(48, 8), float32]) {
  %838 = @func_4892() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %839 = %838.0;
  %840 = cast(%var_5815, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %841 = shape_of(%839, dtype="int32") /* ty=Tensor[(3), int32] */;
  %842 = cast(%839, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %844 = cast(%var_5822, dtype="float32") /* ty=float32 */;
  %845 = cast(%var_5823, dtype="float32") /* ty=Tensor[(48, 8), float32] */;
  %846 = reshape(%844, newshape=[]) /* ty=float32 */;
  %847 = reshape(%845, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), float32] */;
  %848 = @func_5019(%846, %847) /* ty=(Tensor[(6, 4, 16), float32], Tensor[(9, 16, 13), uint16]) */;
  %849 = @func_4892() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %850 = cast(meta[relay.Constant][48] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %851 = reshape(%850, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
  %852 = @func_721(%851) /* ty=(Tensor[(9, 15, 12), float64],) */;
  %853 = cast(%var_5823, dtype="float32") /* ty=Tensor[(48, 8), float32] */;
  %854 = floor_divide(%842, %843) /* ty=Tensor[(9, 16, 13), float64] */;
  %855 = %848.0;
  %856 = %849.0;
  %857 = %852.0;
  %858 = log10(%853) /* ty=Tensor[(48, 8), float32] */;
  (%854, %855, %var_5822, %856, %857, meta[relay.Constant][48] /* ty=Tensor[(1620), float64] */, %858)
}

def @func_9490() -> (Tensor[(9, 16, 13), uint16],) {
  %861 = fn () -> (Tensor[(9, 16, 13), uint16],) {
    %859 = @func_5050() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %860 = %859.0;
    (%860,)
  };
  %861() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_10016(%var_10014: Tensor[(8, 8, 8), uint8], %var_10015: Tensor[(8, 8, 8), uint8]) -> (Tensor[(8, 8, 8), bool], Tensor[(8, 8, 8), float64], Tensor[(9, 15, 12), float64]) {
  %871 = fn (%var_9978: Tensor[(8, 8, 8), uint8], %var_9979: Tensor[(8, 8, 8), uint8]) -> (Tensor[(8, 8, 8), bool], Tensor[(8, 8, 8), float64], Tensor[(9, 15, 12), float64]) {
    %862 = cast(%var_9979, dtype="bool") /* ty=Tensor[(8, 8, 8), bool] */;
    %863 = shape_of(%var_9978, dtype="int32") /* ty=Tensor[(3), int32] */;
    %864 = cast(%var_9978, dtype="bool") /* ty=Tensor[(8, 8, 8), bool] */;
    %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %866 = cast(%var_9979, dtype="float64") /* ty=Tensor[(8, 8, 8), float64] */;
    %867 = @func_8499() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(1440), int8]) */;
    %868 = greater(%864, %865) /* ty=Tensor[(8, 8, 8), bool] */;
    %869 = log2(%866) /* ty=Tensor[(8, 8, 8), float64] */;
    %870 = %867.1;
    (%868, %869, %870)
  };
  %871(%var_10014, %var_10015) /* ty=(Tensor[(8, 8, 8), bool], Tensor[(8, 8, 8), float64], Tensor[(9, 15, 12), float64]) */
}

def @func_4939() -> (Tensor[(9, 16, 13), uint16],) {
  %872 = @func_4277() /* ty=Tensor[(9, 16, 13), uint16] */;
  (%872,)
}

def @func_9574() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(1620), float64]) {
  %881 = fn () -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(1620), float64]) {
    %873 = @func_6860() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %874 = @func_8918() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
    %875 = @func_6507() /* ty=(Tensor[(9, 16, 13), float64],) */;
    %876 = @func_7424() /* ty=(Tensor[(1620), float64],) */;
    %877 = %873.0;
    %878 = %874.0;
    %879 = %875.0;
    %880 = %876.0;
    (%877, %878, %879, %880)
  };
  %881() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(1620), float64]) */
}

def @func_11899() -> Tensor[(9, 16, 13), uint16] {
  @func_11897() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_4815() -> Tensor[(9, 16, 13), float64] {
  @func_4813() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_11371() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %888 = fn () -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
    %882 = @func_9934() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], float32) */;
    %883 = @func_9409() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %884 = @func_10893() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(308), int64], Tensor[(9, 16, 13), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) */;
    %885 = %882.3;
    %886 = %883.0;
    %887 = %884.5;
    (%885, %886, %887)
  };
  %888() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */
}

def @func_6606() -> (Tensor[(1, 15, 5), float32], Tensor[(9, 16, 13), uint16]) {
  %889 = @func_5282() /* ty=(Tensor[(1, 15, 5), float32],) */;
  %890 = @func_3424() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %891 = %889.0;
  %892 = %890.0;
  (%891, %892)
}

def @func_3480() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) {
  %893 = cast(meta[relay.Constant][49] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %894 = reshape(%893, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
  %895 = @func_721(%894) /* ty=(Tensor[(9, 15, 12), float64],) */;
  %896 = @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */;
  %897 = %895.0;
  (%896, %897, meta[relay.Constant][49] /* ty=Tensor[(1620), float64] */)
}

def @func_5051() -> (Tensor[(9, 16, 13), uint16],) {
  %900 = fn () -> (Tensor[(9, 16, 13), uint16],) {
    %898 = @func_4262() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) */;
    %899 = %898.0;
    (%899,)
  };
  %900() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_5223() -> (Tensor[(1620), float64], Tensor[(9, 16, 13), float64]) {
  %901 = @func_4497() /* ty=(Tensor[(1620), float64],) */;
  %902 = %901.0;
  %903 = @func_4582() /* ty=Tensor[(9, 16, 13), float64] */;
  (%902, %903)
}

def @func_3540(%var_3538: Tensor[(21, 6), uint32], %var_3539: Tensor[(540, 3), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(21, 6), uint32], Tensor[(540, 3), float64]) {
  %913 = fn (%var_3516: Tensor[(21, 6), uint32], %var_3517: Tensor[(540, 3), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(21, 6), uint32], Tensor[(540, 3), float64]) {
    %904 = cast(%var_3516, dtype="uint32") /* ty=Tensor[(21, 6), uint32] */;
    %905 = cast(%var_3517, dtype="float64") /* ty=Tensor[(540, 3), float64] */;
    %906 = reshape(%904, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), uint32] */;
    %907 = reshape(%905, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
    %908 = @func_2438(%906, %907) /* ty=(Tensor[(7, 2, 9), uint32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
    %909 = cast(%var_3517, dtype="float64") /* ty=Tensor[(540, 3), float64] */;
    %910 = @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */;
    %911 = %908.1;
    %912 = rsqrt(%909) /* ty=Tensor[(540, 3), float64] */;
    (%910, %911, %var_3516, %912)
  };
  %913(%var_3538, %var_3539) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(21, 6), uint32], Tensor[(540, 3), float64]) */
}

def @func_5843(%var_5840: Tensor[(9, 16, 13), float64], %var_5841: float32, %var_5842: Tensor[(48, 8), float32]) -> (Tensor[(9, 16, 13), float64], Tensor[(6, 4, 16), float32], float32, Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(48, 8), float32]) {
  @func_5838(%var_5840, %var_5841, %var_5842) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(6, 4, 16), float32], float32, Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(48, 8), float32]) */
}

def @func_9410() -> (Tensor[(9, 16, 13), uint16],) {
  %916 = fn () -> (Tensor[(9, 16, 13), uint16],) {
    %914 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %915 = %914.0;
    (%915,)
  };
  %916() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_8672() -> Tensor[(9, 16, 13), float64] {
  %917 = fn () -> Tensor[(9, 16, 13), float64] {
    @func_6428() /* ty=Tensor[(9, 16, 13), float64] */
  };
  %917() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_2824(%var_2783: Tensor[(14, 2, 15), float32], %var_2784: Tensor[(14, 2, 15), float32], %var_2819: int8) -> (Tensor[(14, 2, 15), bool], Tensor[(14, 2, 15), float32], Tensor[(16, 7, 9), uint64], Tensor[(1008), float32], Tensor[(84, 12), float32], int8, Tensor[(1440), int8]) {
  %918 = cast(%var_2784, dtype="bool") /* ty=Tensor[(14, 2, 15), bool] */;
  %919 = shape_of(%var_2783, dtype="int32") /* ty=Tensor[(3), int32] */;
  %920 = cast(%var_2783, dtype="bool") /* ty=Tensor[(14, 2, 15), bool] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %922 = cast(%var_2784, dtype="float32") /* ty=Tensor[(14, 2, 15), float32] */;
  %923 = cast(meta[relay.Constant][50] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %924 = reshape(%923, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float32] */;
  %925 = @func_1190(%924) /* ty=(Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) */;
  %926 = cast(%var_2819, dtype="int8") /* ty=int8 */;
  %927 = cast(meta[relay.Constant][51] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %928 = reshape(%926, newshape=[]) /* ty=int8 */;
  %929 = reshape(%927, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int8] */;
  %930 = @func_1492(%928, %929) /* ty=(Tensor[(9, 16, 10), uint64], Tensor[(16, 7, 9), uint64], Tensor[(84, 12), float32], Tensor[(33), float64], Tensor[(1, 3, 11), float64]) */;
  %931 = less_equal(%920, %921) /* ty=Tensor[(14, 2, 15), bool] */;
  %932 = atanh(%922) /* ty=Tensor[(14, 2, 15), float32] */;
  %933 = %925.1;
  %934 = %930.2;
  (%931, %932, %933, meta[relay.Constant][50] /* ty=Tensor[(1008), float32] */, %934, %var_2819, meta[relay.Constant][51] /* ty=Tensor[(1440), int8] */)
}

def @func_2674(%var_2671: uint32, %var_2672: Tensor[(5, 7, 3), uint32], %var_2673: Tensor[(33), float64]) -> (Tensor[(5, 7, 3), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(33), float64], Tensor[(1440), int8], Tensor[(9, 15, 12), float64], Tensor[(1008), float32], Tensor[(1, 3, 11), float64], Tensor[(16, 7, 9), float64]) {
  @func_2669(%var_2671, %var_2672, %var_2673) /* ty=(Tensor[(5, 7, 3), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(33), float64], Tensor[(1440), int8], Tensor[(9, 15, 12), float64], Tensor[(1008), float32], Tensor[(1, 3, 11), float64], Tensor[(16, 7, 9), float64]) */
}

def @func_8796() -> (Tensor[(9, 16, 13), uint16], Tensor[(10, 5, 5), bool], Tensor[(250), int64], Tensor[(9, 16, 13), float64]) {
  @func_8794() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(10, 5, 5), bool], Tensor[(250), int64], Tensor[(9, 16, 13), float64]) */
}

def @func_2865() -> (Tensor[(9, 16, 13), uint16],) {
  %935 = cast(meta[relay.Constant][53] /* ty=Tensor[(9, 16, 13), uint16] */, dtype="uint16") /* ty=Tensor[(9, 16, 13), uint16] */;
  %936 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(9, 16, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %937 = cast(meta[relay.Constant][52] /* ty=Tensor[(9, 16, 13), uint16] */, dtype="uint16") /* ty=Tensor[(9, 16, 13), uint16] */;
  %938 = dyn.reshape(%935, %936, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %939 = left_shift(%937, %938) /* ty=Tensor[(9, 16, 13), uint16] */;
  (%939,)
}

def @func_5604(%var_5602: Tensor[(105), uint32], %var_5603: Tensor[(33), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], uint32, Tensor[(105), uint32], Tensor[(33), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) {
  @func_5600(%var_5602, %var_5603) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], uint32, Tensor[(105), uint32], Tensor[(33), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) */
}

def @func_8609() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(1620), float64]) {
  %940 = @func_7424() /* ty=(Tensor[(1620), float64],) */;
  %941 = @func_4582() /* ty=Tensor[(9, 16, 13), float64] */;
  %942 = @func_4039() /* ty=Tensor[(9, 16, 13), uint16] */;
  %943 = %940.0;
  (%941, %942, %943)
}

def @func_10285(%var_10283: Tensor[(1872), float64], %var_10284: float32) -> (Tensor[(1440), int8], Tensor[(9, 16, 13), float64], Tensor[(1872), float64], float32, Tensor[(384), float32]) {
  @func_10281(%var_10283, %var_10284) /* ty=(Tensor[(1440), int8], Tensor[(9, 16, 13), float64], Tensor[(1872), float64], float32, Tensor[(384), float32]) */
}

def @func_8390() -> Tensor[(9, 16, 13), float64] {
  @func_8388() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_6782(%var_6780: Tensor[(9, 14, 9), float32], %var_6781: Tensor[(2145), float32]) -> (Tensor[(9, 14, 9), float32], Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(9, 16, 13), uint16], Tensor[(2145), bool], Tensor[(11, 4, 7), int64], Tensor[(6, 270), float64], Tensor[(9, 16, 13), float64]) {
  %972 = fn (%var_6722: Tensor[(9, 14, 9), float32], %var_6751: Tensor[(2145), float32]) -> (Tensor[(9, 14, 9), float32], Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(9, 16, 13), uint16], Tensor[(2145), bool], Tensor[(11, 4, 7), int64], Tensor[(6, 270), float64], Tensor[(9, 16, 13), float64]) {
    %944 = cast(%var_6722, dtype="float32") /* ty=Tensor[(9, 14, 9), float32] */;
    %945 = @func_3686() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) */;
    %946 = cast(meta[relay.Constant][54] /* ty=Tensor[(308), int64] */, dtype="int64") /* ty=Tensor[(308), int64] */;
    %947 = reshape(%946, newshape=[308]) /* ty=Tensor[(308), int64] */;
    %948 = @func_3730(%947) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1620), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) */;
    %949 = %948.3;
    %950 = cast(%949, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %951 = log(%950) /* ty=Tensor[(2145), float32] */;
    %952 = cast(%var_6751, dtype="bool") /* ty=Tensor[(2145), bool] */;
    %953 = shape_of(%951, dtype="int32") /* ty=Tensor[(1), int32] */;
    %954 = cast(%951, dtype="bool") /* ty=Tensor[(2145), bool] */;
    %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?), bool] */;
    %956 = cast(meta[relay.Constant][54] /* ty=Tensor[(308), int64] */, dtype="int64") /* ty=Tensor[(308), int64] */;
    %957 = cast(meta[relay.Constant][54] /* ty=Tensor[(308), int64] */, dtype="int64") /* ty=Tensor[(308), int64] */;
    %958 = cast(%951, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %959 = cast(meta[relay.Constant][55] /* ty=Tensor[(6, 270), float64] */, dtype="float64") /* ty=Tensor[(6, 270), float64] */;
    %960 = reshape(%956, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
    %961 = reshape(%957, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
    %962 = reshape(%958, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
    %963 = reshape(%959, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
    %964 = @func_3075(%960, %961, %962, %963) /* ty=(Tensor[(11, 4, 7), int64], Tensor[(1, 3, 11), float64], Tensor[(11, 3), float64], Tensor[(1620), float64], Tensor[(2145), float32], Tensor[(1620), float64]) */;
    %965 = @func_6639() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) */;
    %966 = cosh(%944) /* ty=Tensor[(9, 14, 9), float32] */;
    %967 = %945.1;
    %968 = @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */;
    %969 = equal(%954, %955) /* ty=Tensor[(2145), bool] */;
    %970 = %964.0;
    %971 = %965.0;
    (%966, %967, meta[relay.Constant][54] /* ty=Tensor[(308), int64] */, %968, %969, %970, meta[relay.Constant][55] /* ty=Tensor[(6, 270), float64] */, %971)
  };
  %972(%var_6780, %var_6781) /* ty=(Tensor[(9, 14, 9), float32], Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(9, 16, 13), uint16], Tensor[(2145), bool], Tensor[(11, 4, 7), int64], Tensor[(6, 270), float64], Tensor[(9, 16, 13), float64]) */
}

def @func_11627() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) {
  %976 = fn () -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) {
    %973 = @func_6173() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %974 = @func_8671() /* ty=Tensor[(9, 16, 13), float64] */;
    %975 = %973.0;
    (%974, %975)
  };
  %976() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) */
}

def @func_612(%var_611: Tensor[(1, 3, 11), float64]) -> Tensor[(1, 3, 11), float64] {
  %978 = fn (%var_599: Tensor[(1, 3, 11), float64]) -> Tensor[(1, 3, 11), float64] {
    %977 = cast(%var_599, dtype="float64") /* ty=Tensor[(1, 3, 11), float64] */;
    sin(%977) /* ty=Tensor[(1, 3, 11), float64] */
  };
  %978(%var_611) /* ty=Tensor[(1, 3, 11), float64] */
}

def @func_11888() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(11, 15, 15), int32], int32, Tensor[(2475), int32]) {
  %989 = fn () -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(11, 15, 15), int32], int32, Tensor[(2475), int32]) {
    %979 = @func_7171() /* ty=(Tensor[(9, 16, 13), float64],) */;
    %980 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %981 = cast(-10 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %982 = cast(meta[relay.Constant][56] /* ty=Tensor[(2475), int32] */, dtype="int32") /* ty=Tensor[(2475), int32] */;
    %983 = reshape(%981, newshape=[]) /* ty=int32 */;
    %984 = reshape(%982, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), int32] */;
    %985 = @func_11420(%983, %984) /* ty=(Tensor[(11, 15, 15), int32],) */;
    %986 = %979.0;
    %987 = %980.0;
    %988 = %985.0;
    (%986, %987, %988, -10 /* ty=int32 */, meta[relay.Constant][56] /* ty=Tensor[(2475), int32] */)
  };
  %989() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(11, 15, 15), int32], int32, Tensor[(2475), int32]) */
}

def @func_10894() -> (Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(308), int64], Tensor[(9, 16, 13), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) {
  %1001 = fn () -> (Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(308), int64], Tensor[(9, 16, 13), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) {
    %990 = cast(meta[relay.Constant][57] /* ty=Tensor[(308), int64] */, dtype="int64") /* ty=Tensor[(308), int64] */;
    %991 = reshape(%990, newshape=[308]) /* ty=Tensor[(308), int64] */;
    %992 = @func_3730(%991) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1620), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) */;
    %993 = cast(meta[relay.Constant][58] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %994 = reshape(%993, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
    %995 = @func_7818(%994) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
    %996 = @func_6606() /* ty=(Tensor[(1, 15, 5), float32], Tensor[(9, 16, 13), uint16]) */;
    %997 = @func_10838() /* ty=Tensor[(9, 16, 13), uint16] */;
    %998 = %992.2;
    %999 = %995.0;
    %1000 = %996.1;
    (%997, %998, meta[relay.Constant][57] /* ty=Tensor[(308), int64] */, %999, meta[relay.Constant][58] /* ty=Tensor[(1620), float64] */, %1000)
  };
  %1001() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(308), int64], Tensor[(308), int64], Tensor[(9, 16, 13), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), uint16]) */
}

def @func_4764() -> Tensor[(9, 16, 13), uint16] {
  @func_4762() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_4762() -> Tensor[(9, 16, 13), uint16] {
  @func_4039() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_6608() -> (Tensor[(1, 15, 5), float32], Tensor[(9, 16, 13), uint16]) {
  @func_6606() /* ty=(Tensor[(1, 15, 5), float32], Tensor[(9, 16, 13), uint16]) */
}

def @func_5243() -> (Tensor[(9, 16, 13), bool],) {
  %1003 = fn () -> (Tensor[(9, 16, 13), bool],) {
    %1002 = @func_4484() /* ty=Tensor[(9, 16, 13), bool] */;
    (%1002,)
  };
  %1003() /* ty=(Tensor[(9, 16, 13), bool],) */
}

def @func_11553() -> (Tensor[(9, 16, 13), uint16],) {
  @func_11551() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_10633() -> Tensor[(9, 16, 13), uint16] {
  %1004 = fn () -> Tensor[(9, 16, 13), uint16] {
    @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */
  };
  %1004() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_7956(%var_7954: float32) -> (Tensor[(9, 16, 13), float64], Tensor[(2, 4, 7), float64], Tensor[(9, 15, 12), float64], float32, Tensor[(384), float32], Tensor[(2, 4, 7), float32], Tensor[(9, 16, 13), bool]) {
  @func_7953(%var_7954) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(2, 4, 7), float64], Tensor[(9, 15, 12), float64], float32, Tensor[(384), float32], Tensor[(2, 4, 7), float32], Tensor[(9, 16, 13), bool]) */
}

def @func_10487() -> (Tensor[(1620), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %1009 = fn () -> (Tensor[(1620), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
    %1005 = @func_6550() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
    %1006 = @func_4571() /* ty=Tensor[(1620), float64] */;
    %1007 = %1005.1;
    %1008 = @func_8707() /* ty=Tensor[(9, 16, 13), uint16] */;
    (%1006, %1007, %1008)
  };
  %1009() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */
}

def @func_6816() -> (Tensor[(9, 16, 13), uint16],) {
  @func_6814() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_5470() -> Tensor[(1620), float64] {
  %1010 = @func_4571() /* ty=Tensor[(1620), float64] */;
  %1011 = cast(%1010, dtype="float64") /* ty=Tensor[(1620), float64] */;
  sqrt(%1011) /* ty=Tensor[(1620), float64] */
}

def @func_5966() -> (Tensor[(9, 16, 13), uint16],) {
  %1012 = @func_3346() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %1013 = %1012.0;
  (%1013,)
}

def @func_10838() -> Tensor[(9, 16, 13), uint16] {
  @func_10632() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_9073() -> (Tensor[(1440), int8],) {
  %1016 = fn () -> (Tensor[(1440), int8],) {
    %1014 = @func_8106() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), bool], Tensor[(1440), int8], Tensor[(1440), int8]) */;
    %1015 = %1014.3;
    (%1015,)
  };
  %1016() /* ty=(Tensor[(1440), int8],) */
}

def @func_5081(%var_5070: Tensor[(1008), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(1, 3, 11), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64]) {
  %1017 = @func_3151() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %1018 = cast(%var_5070, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %1019 = cast(%var_5070, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %1020 = cast(meta[relay.Constant][59] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %1021 = cast(meta[relay.Constant][60] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %1022 = reshape(%1018, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float64] */;
  %1023 = reshape(%1019, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), float64] */;
  %1024 = reshape(%1020, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %1025 = reshape(%1021, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %1026 = @func_1874(%1022, %1023, %1024, %1025) /* ty=(Tensor[(12, 7, 12), bool], Tensor[(1, 3, 11), float64], Tensor[(33), float64], Tensor[(9, 15, 12), float64], Tensor[(715, 3), float32], Tensor[(1620), float32]) */;
  %1027 = %1017.0;
  %1028 = %1026.1;
  (%1027, %1028, %var_5070, meta[relay.Constant][59] /* ty=Tensor[(33), float64] */, meta[relay.Constant][60] /* ty=Tensor[(1620), float64] */)
}

def @func_11842() -> (Tensor[(9, 16, 13), uint16],) {
  %1029 = @func_5966() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %1030 = %1029.0;
  (%1030,)
}

def @func_1190(%var_1111: Tensor[(16, 7, 9), float32]) -> (Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) {
  %1031 = cast(%var_1111, dtype="float32") /* ty=Tensor[(16, 7, 9), float32] */;
  %1032 = cast(%var_1111, dtype="float64") /* ty=Tensor[(16, 7, 9), float64] */;
  %1033 = sqrt(%1032) /* ty=Tensor[(16, 7, 9), float64] */;
  %1034 = cast(%1033, dtype="uint64") /* ty=Tensor[(16, 7, 9), uint64] */;
  %1035 = shape_of(%var_1111, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1036 = cast(%var_1111, dtype="uint64") /* ty=Tensor[(16, 7, 9), uint64] */;
  %1037 = dyn.reshape(%1034, %1035, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1038 = cast(meta[relay.Constant][61] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %1039 = reshape(%1038, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
  %1040 = @func_610(%1039) /* ty=Tensor[(1, 3, 11), float64] */;
  %1041 = cast(%1040, dtype="bool") /* ty=Tensor[(1, 3, 11), bool] */;
  %1042 = cast(meta[relay.Constant][62] /* ty=Tensor[(7, 3, 11), float64] */, dtype="bool") /* ty=Tensor[(7, 3, 11), bool] */;
  %1043 = cast(meta[relay.Constant][63] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %1044 = cast(meta[relay.Constant][64] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %1045 = reshape(%1043, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float32] */;
  %1046 = reshape(%1044, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %1047 = @func_917(%1045, %1046) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
  %1048 = cast(%1033, dtype="float64") /* ty=Tensor[(16, 7, 9), float64] */;
  %1049 = cast(%1040, dtype="float64") /* ty=Tensor[(1, 3, 11), float64] */;
  %1050 = reshape(%1049, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
  %1051 = log2(%1031) /* ty=Tensor[(16, 7, 9), float32] */;
  %1052 = right_shift(%1036, %1037) /* ty=Tensor[(16, 7, 9), uint64] */;
  %1053 = less(%1041, %1042) /* ty=Tensor[(7, 3, 11), bool] */;
  %1054 = %1047.0;
  %1055 = sinh(%1048) /* ty=Tensor[(16, 7, 9), float64] */;
  %1056 = @func_610(%1050) /* ty=Tensor[(1, 3, 11), float64] */;
  (%1051, %1052, meta[relay.Constant][61] /* ty=Tensor[(33), float64] */, %1053, %1054, meta[relay.Constant][63] /* ty=Tensor[(2145), float32] */, meta[relay.Constant][64] /* ty=Tensor[(1620), float64] */, %1055, %1056)
}

def @func_10157() -> Tensor[(9, 16, 13), uint16] {
  %1058 = fn () -> Tensor[(9, 16, 13), uint16] {
    %1057 = @func_9305() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
    %1057.1
  };
  %1058() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_4264() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) {
  @func_4262() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) */
}

def @func_9285() -> (Tensor[(1620), float64],) {
  @func_9283() /* ty=(Tensor[(1620), float64],) */
}

def @func_6430() -> Tensor[(9, 16, 13), float64] {
  @func_6428() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_6428() -> Tensor[(9, 16, 13), float64] {
  %1059 = @func_3969() /* ty=(Tensor[(9, 16, 13), float64],) */;
  %1059.0
}

def @func_4039() -> Tensor[(9, 16, 13), uint16] {
  @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_1306(%var_1305: uint8) -> (Tensor[(3, 1, 5), uint8], Tensor[(16, 7, 9), float32], Tensor[(1008), float32]) {
  %1067 = fn (%var_1286: uint8) -> (Tensor[(3, 1, 5), uint8], Tensor[(16, 7, 9), float32], Tensor[(1008), float32]) {
    %1060 = cast(%var_1286, dtype="uint8") /* ty=uint8 */;
    %1061 = cast(meta[relay.Constant][65] /* ty=Tensor[(3, 1, 5), uint8] */, dtype="uint8") /* ty=Tensor[(3, 1, 5), uint8] */;
    %1062 = cast(meta[relay.Constant][66] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %1063 = reshape(%1062, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float32] */;
    %1064 = @func_1190(%1063) /* ty=(Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) */;
    %1065 = left_shift(%1060, %1061) /* ty=Tensor[(3, 1, 5), uint8] */;
    %1066 = %1064.0;
    (%1065, %1066, meta[relay.Constant][66] /* ty=Tensor[(1008), float32] */)
  };
  %1067(%var_1305) /* ty=(Tensor[(3, 1, 5), uint8], Tensor[(16, 7, 9), float32], Tensor[(1008), float32]) */
}

def @func_7366(%var_7364: Tensor[(1620), float64], %var_7365: Tensor[(84, 12), float64]) -> (Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float32], Tensor[(9, 16, 13), uint16], Tensor[(126), uint32], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(33), float64], Tensor[(84, 12), float64], Tensor[(9, 16, 13), float64]) {
  %1095 = fn (%var_7262: Tensor[(1620), float64], %var_7355: Tensor[(84, 12), float64]) -> (Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float32], Tensor[(9, 16, 13), uint16], Tensor[(126), uint32], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(33), float64], Tensor[(84, 12), float64], Tensor[(9, 16, 13), float64]) {
    %1068 = cast(%var_7262, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %1069 = reshape(%1068, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
    %1070 = @func_721(%1069) /* ty=(Tensor[(9, 15, 12), float64],) */;
    %1071 = %1070.0;
    %1072 = cast(%var_7262, dtype="bool") /* ty=Tensor[(1620), bool] */;
    %1073 = shape_of(%1071, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1074 = cast(%1071, dtype="bool") /* ty=Tensor[(9, 15, 12), bool] */;
    %1075 = dyn.reshape(%1072, %1073, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1076 = greater_equal(%1074, %1075) /* ty=Tensor[(9, 15, 12), bool] */;
    %1077 = cast(%1076, dtype="float32") /* ty=Tensor[(9, 15, 12), float32] */;
    %1078 = cast(meta[relay.Constant][67] /* ty=Tensor[(126), uint32] */, dtype="uint32") /* ty=Tensor[(126), uint32] */;
    %1079 = cast(%var_7262, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %1080 = reshape(%1078, newshape=[21, 6]) /* ty=Tensor[(21, 6), uint32] */;
    %1081 = reshape(%1079, newshape=[540, 3]) /* ty=Tensor[(540, 3), float64] */;
    %1082 = @func_3537(%1080, %1081) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(21, 6), uint32], Tensor[(540, 3), float64]) */;
    %1083 = @func_6270() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
    %1084 = cast(%var_7355, dtype="float64") /* ty=Tensor[(84, 12), float64] */;
    %1085 = reshape(%1084, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
    %1086 = @func_6684(%1085) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(1620), float64], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), bool], Tensor[(7, 2, 9), uint32], Tensor[(1008), float64], Tensor[(33), float64]) */;
    %1087 = @func_4892() /* ty=(Tensor[(9, 16, 13), float64],) */;
    %1088 = @func_4800() /* ty=Tensor[(9, 16, 13), float64] */;
    %1089 = acos(%1077) /* ty=Tensor[(9, 15, 12), float32] */;
    %1090 = %1082.0;
    %1091 = %1083.0;
    %1092 = @func_4582() /* ty=Tensor[(9, 16, 13), float64] */;
    %1093 = %1086.7;
    %1094 = %1087.0;
    (%1088, %1089, %1090, meta[relay.Constant][67] /* ty=Tensor[(126), uint32] */, %1091, %1092, %1093, %var_7355, %1094)
  };
  %1095(%var_7364, %var_7365) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float32], Tensor[(9, 16, 13), uint16], Tensor[(126), uint32], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(33), float64], Tensor[(84, 12), float64], Tensor[(9, 16, 13), float64]) */
}

def @func_2867() -> (Tensor[(9, 16, 13), uint16],) {
  @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_11391() -> (Tensor[(1620), float64],) {
  %1098 = fn () -> (Tensor[(1620), float64],) {
    %1096 = @func_4497() /* ty=(Tensor[(1620), float64],) */;
    %1097 = %1096.0;
    (%1097,)
  };
  %1098() /* ty=(Tensor[(1620), float64],) */
}

def @func_5022(%var_5020: float32, %var_5021: Tensor[(6, 4, 16), float32]) -> (Tensor[(6, 4, 16), float32], Tensor[(9, 16, 13), uint16]) {
  %1104 = fn (%var_5010: float32, %var_5011: Tensor[(6, 4, 16), float32]) -> (Tensor[(6, 4, 16), float32], Tensor[(9, 16, 13), uint16]) {
    %1099 = cast(%var_5010, dtype="float32") /* ty=float32 */;
    %1100 = cast(%var_5011, dtype="float32") /* ty=Tensor[(6, 4, 16), float32] */;
    %1101 = @func_3424() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %1102 = floor_mod(%1099, %1100) /* ty=Tensor[(6, 4, 16), float32] */;
    %1103 = %1101.0;
    (%1102, %1103)
  };
  %1104(%var_5020, %var_5021) /* ty=(Tensor[(6, 4, 16), float32], Tensor[(9, 16, 13), uint16]) */
}

def @func_8762(%var_8760: float32, %var_8761: Tensor[(384), float32]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], float32, float32, Tensor[(384), float32], Tensor[(9, 16, 13), uint16]) {
  %1118 = fn (%var_8733: float32, %var_8734: Tensor[(384), float32]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], float32, float32, Tensor[(384), float32], Tensor[(9, 16, 13), uint16]) {
    %1105 = @func_7553() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(1620), float64]) */;
    %1106 = %1105.0;
    %1107 = cast(%1106, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
    %1108 = cast(%var_8733, dtype="float32") /* ty=float32 */;
    %1109 = cast(%var_8734, dtype="float32") /* ty=Tensor[(384), float32] */;
    %1110 = reshape(%1107, newshape=[9, 16, 13]) /* ty=Tensor[(9, 16, 13), float64] */;
    %1111 = reshape(%1108, newshape=[]) /* ty=float32 */;
    %1112 = reshape(%1109, newshape=[48, 8]) /* ty=Tensor[(48, 8), float32] */;
    %1113 = @func_5838(%1110, %1111, %1112) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(6, 4, 16), float32], float32, Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], Tensor[(1620), float64], Tensor[(48, 8), float32]) */;
    %1114 = @func_6452() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %1115 = @func_8707() /* ty=Tensor[(9, 16, 13), uint16] */;
    %1116 = %1113.2;
    %1117 = %1114.0;
    (%1115, %1106, %1116, %var_8733, %var_8734, %1117)
  };
  %1118(%var_8760, %var_8761) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], float32, float32, Tensor[(384), float32], Tensor[(9, 16, 13), uint16]) */
}

def @func_6065(%var_6064: Tensor[(16, 15, 5), float32]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(16, 15, 5), uint32]) {
  %1128 = fn (%var_6046: Tensor[(16, 15, 5), float32]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(16, 15, 5), uint32]) {
    %1119 = @func_5966() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %1120 = @func_5282() /* ty=(Tensor[(1, 15, 5), float32],) */;
    %1121 = %1120.0;
    %1122 = cast(%1121, dtype="uint32") /* ty=Tensor[(1, 15, 5), uint32] */;
    %1123 = cast(%var_6046, dtype="uint32") /* ty=Tensor[(16, 15, 5), uint32] */;
    %1124 = %1119.0;
    %1125 = @func_4039() /* ty=Tensor[(9, 16, 13), uint16] */;
    %1126 = @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */;
    %1127 = multiply(%1122, %1123) /* ty=Tensor[(16, 15, 5), uint32] */;
    (%1124, %1125, %1126, %1127)
  };
  %1128(%var_6064) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(16, 15, 5), uint32]) */
}

def @func_5968() -> (Tensor[(9, 16, 13), uint16],) {
  @func_5966() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_11591() -> (Tensor[(16, 15, 5), bool],) {
  %1134 = fn () -> (Tensor[(16, 15, 5), bool],) {
    %1129 = @func_5282() /* ty=(Tensor[(1, 15, 5), float32],) */;
    %1130 = %1129.0;
    %1131 = cast(%1130, dtype="bool") /* ty=Tensor[(1, 15, 5), bool] */;
    %1132 = cast(meta[relay.Constant][68] /* ty=Tensor[(16, 15, 5), float32] */, dtype="bool") /* ty=Tensor[(16, 15, 5), bool] */;
    %1133 = equal(%1131, %1132) /* ty=Tensor[(16, 15, 5), bool] */;
    (%1133,)
  };
  %1134() /* ty=(Tensor[(16, 15, 5), bool],) */
}

def @func_8108() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), bool], Tensor[(1440), int8], Tensor[(1440), int8]) {
  @func_8106() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), bool], Tensor[(1440), int8], Tensor[(1440), int8]) */
}

def @func_3621(%var_3614: Tensor[(308), int64], %var_3615: Tensor[(2145), float32], %var_3616: Tensor[(1620), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1620), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) {
  %1135 = @func_3424() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %1136 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %1137 = cast(%var_3614, dtype="int64") /* ty=Tensor[(308), int64] */;
  %1138 = cast(%var_3614, dtype="int64") /* ty=Tensor[(308), int64] */;
  %1139 = cast(%var_3615, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %1140 = cast(%var_3616, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %1141 = reshape(%1137, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
  %1142 = reshape(%1138, newshape=[11, 4, 7]) /* ty=Tensor[(11, 4, 7), int64] */;
  %1143 = reshape(%1139, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %1144 = reshape(%1140, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
  %1145 = @func_3075(%1141, %1142, %1143, %1144) /* ty=(Tensor[(11, 4, 7), int64], Tensor[(1, 3, 11), float64], Tensor[(11, 3), float64], Tensor[(1620), float64], Tensor[(2145), float32], Tensor[(1620), float64]) */;
  %1146 = %1135.0;
  %1147 = %1136.0;
  %1148 = %1145.3;
  (%1146, %1147, %1148, %var_3614, %var_3615, %var_3616)
}

def @func_6832() -> Tensor[(9, 16, 13), uint16] {
  @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_4801() -> Tensor[(9, 16, 13), float64] {
  %1150 = fn () -> Tensor[(9, 16, 13), float64] {
    %1149 = @func_3969() /* ty=(Tensor[(9, 16, 13), float64],) */;
    %1149.0
  };
  %1150() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_8106() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), bool], Tensor[(1440), int8], Tensor[(1440), int8]) {
  %1151 = @func_5242() /* ty=(Tensor[(9, 16, 13), bool],) */;
  %1152 = cast(meta[relay.Constant][69] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %1153 = reshape(%1152, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %1154 = @func_3851(%1153) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1440), int8], Tensor[(84, 12), int32]) */;
  %1155 = @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */;
  %1156 = %1151.0;
  %1157 = %1154.1;
  (%1155, %1156, %1157, meta[relay.Constant][69] /* ty=Tensor[(1440), int8] */)
}

def @func_8708() -> Tensor[(9, 16, 13), uint16] {
  %1159 = fn () -> Tensor[(9, 16, 13), uint16] {
    %1158 = @func_4182() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
    %1158.1
  };
  %1159() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_1193(%var_1191: Tensor[(16, 7, 9), float32]) -> (Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) {
  @func_1190(%var_1191) /* ty=(Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) */
}

def @func_3626(%var_3623: Tensor[(308), int64], %var_3624: Tensor[(2145), float32], %var_3625: Tensor[(1620), float64]) -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1620), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) {
  @func_3621(%var_3623, %var_3624, %var_3625) /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(1620), float64], Tensor[(308), int64], Tensor[(2145), float32], Tensor[(1620), float64]) */
}

def @func_7424() -> (Tensor[(1620), float64],) {
  %1160 = @func_6886() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1620), float64]) */;
  %1161 = %1160.1;
  (%1161,)
}

def @func_6453() -> (Tensor[(9, 16, 13), uint16],) {
  %1164 = fn () -> (Tensor[(9, 16, 13), uint16],) {
    %1162 = @func_6173() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %1163 = %1162.0;
    (%1163,)
  };
  %1164() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_5447() -> (Tensor[(9, 16, 13), float64],) {
  %1167 = fn () -> (Tensor[(9, 16, 13), float64],) {
    %1165 = @func_5223() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), float64]) */;
    %1166 = %1165.1;
    (%1166,)
  };
  %1167() /* ty=(Tensor[(9, 16, 13), float64],) */
}

def @func_4626(%var_4602: Tensor[(9, 16, 13), uint16]) -> Tensor[(9, 16, 13), int16] {
  %1168 = @func_4182() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %1169 = %1168.1;
  %1170 = cast(%var_4602, dtype="int16") /* ty=Tensor[(9, 16, 13), int16] */;
  %1171 = shape_of(%1169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1172 = cast(%1169, dtype="int16") /* ty=Tensor[(9, 16, 13), int16] */;
  %1173 = dyn.reshape(%1170, %1171, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%1172, %1173) /* ty=Tensor[(9, 16, 13), int16] */
}

def @func_9749() -> (Tensor[(9, 16, 13), uint16],) {
  @func_9747() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_7784() -> Tensor[(9, 16, 13), uint16] {
  @func_7782() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_6639() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) {
  %1174 = @func_6550() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */;
  %1175 = @func_4800() /* ty=Tensor[(9, 16, 13), float64] */;
  %1176 = %1174.1;
  (%1175, %1176)
}

def @func_10702() -> (Tensor[(9, 16, 13), uint16],) {
  %1179 = fn () -> (Tensor[(9, 16, 13), uint16],) {
    %1177 = @func_6452() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %1178 = %1177.0;
    (%1178,)
  };
  %1179() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_9306() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
  %1184 = fn () -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) {
    %1180 = @func_3346() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %1181 = @func_3424() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %1182 = %1180.0;
    %1183 = %1181.0;
    (%1182, %1183)
  };
  %1184() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16]) */
}

def @func_1740(%var_1739: Tensor[(1008), float32]) -> (Tensor[(11, 4, 14), float32], Tensor[(1008), int64], Tensor[(1620), float64], Tensor[(715, 3), float32], Tensor[(1620), float64], Tensor[(9, 15, 12), float64]) {
  %1206 = fn (%var_1719: Tensor[(1008), float32]) -> (Tensor[(11, 4, 14), float32], Tensor[(1008), int64], Tensor[(1620), float64], Tensor[(715, 3), float32], Tensor[(1620), float64], Tensor[(9, 15, 12), float64]) {
    %1185 = cast(meta[relay.Constant][70] /* ty=Tensor[(11, 4, 14), float32] */, dtype="float32") /* ty=Tensor[(11, 4, 14), float32] */;
    %1186 = cast(%var_1719, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %1187 = reshape(%1186, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float32] */;
    %1188 = @func_1190(%1187) /* ty=(Tensor[(16, 7, 9), float32], Tensor[(16, 7, 9), uint64], Tensor[(33), float64], Tensor[(7, 3, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(2145), float32], Tensor[(1620), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 3, 11), float64]) */;
    %1189 = %1188.7;
    %1190 = cast(%1189, dtype="int64") /* ty=Tensor[(16, 7, 9), int64] */;
    %1191 = shape_of(%var_1719, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1192 = cast(%var_1719, dtype="int64") /* ty=Tensor[(1008), int64] */;
    %1193 = dyn.reshape(%1190, %1191, newshape=[]) /* ty=Tensor[(?), int64] */;
    %1194 = cast(meta[relay.Constant][71] /* ty=Tensor[(715, 3), float32] */, dtype="float32") /* ty=Tensor[(715, 3), float32] */;
    %1195 = cast(meta[relay.Constant][72] /* ty=Tensor[(1620), float64] */, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %1196 = reshape(%1194, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float32] */;
    %1197 = reshape(%1195, newshape=[1620]) /* ty=Tensor[(1620), float64] */;
    %1198 = @func_917(%1196, %1197) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */;
    %1199 = %1198.2;
    %1200 = cast(%1199, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %1201 = reshape(%1200, newshape=[9, 15, 12]) /* ty=Tensor[(9, 15, 12), float64] */;
    %1202 = @func_721(%1201) /* ty=(Tensor[(9, 15, 12), float64],) */;
    %1203 = log2(%1185) /* ty=Tensor[(11, 4, 14), float32] */;
    %1204 = bitwise_xor(%1192, %1193) /* ty=Tensor[(1008), int64] */;
    %1205 = %1202.0;
    (%1203, %1204, %1199, meta[relay.Constant][71] /* ty=Tensor[(715, 3), float32] */, meta[relay.Constant][72] /* ty=Tensor[(1620), float64] */, %1205)
  };
  %1206(%var_1739) /* ty=(Tensor[(11, 4, 14), float32], Tensor[(1008), int64], Tensor[(1620), float64], Tensor[(715, 3), float32], Tensor[(1620), float64], Tensor[(9, 15, 12), float64]) */
}

def @func_10967() -> (Tensor[(9, 16, 13), uint16],) {
  %1208 = fn () -> (Tensor[(9, 16, 13), uint16],) {
    %1207 = @func_5755() /* ty=Tensor[(9, 16, 13), uint16] */;
    (%1207,)
  };
  %1208() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_8890() -> (Tensor[(1620), float64],) {
  @func_8888() /* ty=(Tensor[(1620), float64],) */
}

def @func_3348() -> (Tensor[(9, 16, 13), uint16],) {
  @func_3346() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_5943(%var_5941: Tensor[(9, 15, 12), float64]) -> (Tensor[(9, 15, 12), int32], Tensor[(9, 15, 12), uint16], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(9, 16, 13), uint16]) {
  @func_5940(%var_5941) /* ty=(Tensor[(9, 15, 12), int32], Tensor[(9, 15, 12), uint16], Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(9, 16, 13), uint16]) */
}

def @func_4093(%var_4090: Tensor[(9, 16, 13), uint16], %var_4091: Tensor[(1008), float64], %var_4092: Tensor[(33), float64]) -> (Tensor[(9, 16, 13), int64], Tensor[(9, 16, 13), uint16], Tensor[(33), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64]) {
  @func_4088(%var_4090, %var_4091, %var_4092) /* ty=(Tensor[(9, 16, 13), int64], Tensor[(9, 16, 13), uint16], Tensor[(33), float64], Tensor[(1008), float64], Tensor[(33), float64], Tensor[(1620), float64]) */
}

def @func_9708() -> (Tensor[(9, 16, 13), float64],) {
  %1209 = @func_3129() /* ty=Tensor[(9, 16, 13), float64] */;
  (%1209,)
}

def @func_7172() -> (Tensor[(9, 16, 13), float64],) {
  %1212 = fn () -> (Tensor[(9, 16, 13), float64],) {
    %1210 = @func_4262() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) */;
    %1211 = %1210.1;
    (%1211,)
  };
  %1212() /* ty=(Tensor[(9, 16, 13), float64],) */
}

def @func_7001() -> Tensor[(9, 16, 13), float64] {
  @func_6999() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_10457() -> Tensor[(9, 16, 13), float64] {
  %1214 = fn () -> Tensor[(9, 16, 13), float64] {
    %1213 = @func_9934() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], float32) */;
    %1213.0
  };
  %1214() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_921(%var_919: Tensor[(15, 13, 11), float32], %var_920: Tensor[(1620), float64]) -> (Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) {
  @func_917(%var_919, %var_920) /* ty=(Tensor[(15, 13, 11), float32], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */
}

def @func_8058(%var_8057: Tensor[(1620), float64]) -> Tensor[(1620), bool] {
  %1220 = fn (%var_8038: Tensor[(1620), float64]) -> Tensor[(1620), bool] {
    %1215 = @func_4571() /* ty=Tensor[(1620), float64] */;
    %1216 = cast(%var_8038, dtype="bool") /* ty=Tensor[(1620), bool] */;
    %1217 = shape_of(%1215, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1218 = cast(%1215, dtype="bool") /* ty=Tensor[(1620), bool] */;
    %1219 = dyn.reshape(%1216, %1217, newshape=[]) /* ty=Tensor[(?), bool] */;
    equal(%1218, %1219) /* ty=Tensor[(1620), bool] */
  };
  %1220(%var_8057) /* ty=Tensor[(1620), bool] */
}

def @func_6175() -> (Tensor[(9, 16, 13), uint16],) {
  @func_6173() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

def @func_7138() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16]) {
  %1221 = @func_5050() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %1222 = @func_6999() /* ty=Tensor[(9, 16, 13), float64] */;
  %1223 = %1221.0;
  (%1222, %1223)
}

def @func_6507() -> (Tensor[(9, 16, 13), float64],) {
  %1224 = @func_4262() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) */;
  %1225 = %1224.1;
  (%1225,)
}

def @func_4573() -> Tensor[(1620), float64] {
  @func_4571() /* ty=Tensor[(1620), float64] */
}

def @func_5225() -> (Tensor[(1620), float64], Tensor[(9, 16, 13), float64]) {
  @func_5223() /* ty=(Tensor[(1620), float64], Tensor[(9, 16, 13), float64]) */
}

def @func_4262() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64]) {
  %1226 = @func_2865() /* ty=(Tensor[(9, 16, 13), uint16],) */;
  %1227 = %1226.0;
  %1228 = cast(%1227, dtype="float64") /* ty=Tensor[(9, 16, 13), float64] */;
  %1229 = @func_3998() /* ty=Tensor[(9, 16, 13), uint16] */;
  %1230 = log(%1228) /* ty=Tensor[(9, 16, 13), float64] */;
  (%1229, %1230)
}

def @func_7168() -> Tensor[(9, 16, 13), uint16] {
  %1231 = fn () -> Tensor[(9, 16, 13), uint16] {
    @func_2932() /* ty=Tensor[(9, 16, 13), uint16] */
  };
  %1231() /* ty=Tensor[(9, 16, 13), uint16] */
}

def @func_9935() -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], float32) {
  %1244 = fn () -> (Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], float32) {
    %1232 = @func_8794() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(10, 5, 5), bool], Tensor[(250), int64], Tensor[(9, 16, 13), float64]) */;
    %1233 = @func_6452() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %1234 = @func_5966() /* ty=(Tensor[(9, 16, 13), uint16],) */;
    %1235 = cast(-6.2847f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1236 = reshape(%1235, newshape=[]) /* ty=float32 */;
    %1237 = @func_7953(%1236) /* ty=(Tensor[(9, 16, 13), float64], Tensor[(2, 4, 7), float64], Tensor[(9, 15, 12), float64], float32, Tensor[(384), float32], Tensor[(2, 4, 7), float32], Tensor[(9, 16, 13), bool]) */;
    %1238 = %1232.3;
    %1239 = @func_6832() /* ty=Tensor[(9, 16, 13), uint16] */;
    %1240 = %1233.0;
    %1241 = %1234.0;
    %1242 = @func_6999() /* ty=Tensor[(9, 16, 13), float64] */;
    %1243 = %1237.2;
    (%1238, %1239, %1240, %1241, %1242, %1243, -6.2847f /* ty=float32 */)
  };
  %1244() /* ty=(Tensor[(9, 16, 13), float64], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), uint16], Tensor[(9, 16, 13), float64], Tensor[(9, 15, 12), float64], float32) */
}

def @func_11964() -> (Tensor[(1, 15, 5), float32], Tensor[(3, 15, 5), float32]) {
  @func_11962() /* ty=(Tensor[(1, 15, 5), float32], Tensor[(3, 15, 5), float32]) */
}

def @func_10660() -> Tensor[(1620), float64] {
  @func_10658() /* ty=Tensor[(1620), float64] */
}

def @func_9345() -> Tensor[(1440), int8] {
  %1246 = fn () -> Tensor[(1440), int8] {
    %1245 = @func_7629() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(1440), int8], uint32, Tensor[(105), uint32], Tensor[(1, 33), float64]) */;
    %1245.1
  };
  %1246() /* ty=Tensor[(1440), int8] */
}

def @func_3482() -> (Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) {
  @func_3480() /* ty=(Tensor[(9, 16, 13), uint16], Tensor[(9, 15, 12), float64], Tensor[(1620), float64]) */
}

def @func_5708() -> Tensor[(9, 16, 13), float64] {
  @func_5706() /* ty=Tensor[(9, 16, 13), float64] */
}

def @func_8346() -> (Tensor[(9, 16, 13), uint16],) {
  @func_8344() /* ty=(Tensor[(9, 16, 13), uint16],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen552/build/output.py:3604: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen552/build/output.py", line 3609, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(112) tvmgen_default_fused_sinh_kernel0(double* __restrict__ T_sinh, double* __restrict__ placeholder) {
  T_sinh[(((int)threadIdx.x))] = sinh(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


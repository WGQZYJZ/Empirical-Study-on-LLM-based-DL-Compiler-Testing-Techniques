==========mod==========
#[version = "0.0.5"]
def @func_9735() -> Tensor[(8, 11, 13), int8] {
  %0 = @func_7492() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %0.1
}

def @func_2077() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
  %1 = @func_423() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %2 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %3 = %1.0;
  %4 = %2.3;
  (%3, %4)
}

def @func_385() -> (Tensor[(8, 11, 13), int8],) {
  %5 = @func_179() /* ty=Tensor[(8, 11, 13), int8] */;
  (%5,)
}

def @func_13524(%var_13508: Tensor[(9, 16, 3), float64]) -> (Tensor[(9, 16, 3), float64], Tensor[(900), uint8], Tensor[(90, 10), uint8]) {
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 16, 3), float64] */, dtype="float64") /* ty=Tensor[(9, 16, 3), float64] */;
  %7 = shape_of(%var_13508, dtype="int32") /* ty=Tensor[(3), int32] */;
  %8 = cast(%var_13508, dtype="float64") /* ty=Tensor[(9, 16, 3), float64] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %10 = cast(meta[relay.Constant][1] /* ty=Tensor[(90, 10), uint8] */, dtype="uint8") /* ty=Tensor[(90, 10), uint8] */;
  %11 = reshape(%10, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %12 = @func_6461(%11) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(15, 10, 6), float32], Tensor[(900), uint8], Tensor[(8, 11, 13), int8]) */;
  %13 = mod(%8, %9) /* ty=Tensor[(9, 16, 3), float64] */;
  %14 = %12.2;
  (%13, %14, meta[relay.Constant][1] /* ty=Tensor[(90, 10), uint8] */)
}

def @func_9021() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) {
  %15 = @func_4007() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %16 = @func_954() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %17 = %15.0;
  %18 = %16.2;
  (%17, %18)
}

def @func_12691() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %19 = @func_2646() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */;
  %20 = @func_11270() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %21 = %19.1;
  %22 = %20.0;
  %23 = @func_640() /* ty=Tensor[(8, 11, 13), int8] */;
  (%21, %22, %23)
}

def @func_15780() -> Tensor[(8, 11, 13), int8] {
  %24 = @func_3410() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %24.1
}

def @func_8886() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %25 = @func_4945() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %26 = @func_3188() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */;
  %27 = @func_4403() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %28 = @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %29 = @func_2668() /* ty=Tensor[(8, 11, 13), int8] */;
  %30 = %25.0;
  %31 = %26.0;
  %32 = %27.1;
  %33 = %28.2;
  (%29, %30, %31, %32, %33)
}

def @func_15719() -> Tensor[(8, 11, 13), int8] {
  %34 = @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %34.1
}

def @func_15273() -> Tensor[(8, 11, 13), int8] {
  %35 = @func_14167() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %35.1
}

def @func_18709() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %36 = @func_16218() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %37 = @func_3188() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */;
  %38 = %36.1;
  %39 = %37.0;
  (%38, %39)
}

def @func_17290() -> (Tensor[(8, 11, 13), int8],) {
  %40 = @func_3315() /* ty=Tensor[(8, 11, 13), int8] */;
  (%40,)
}

def @func_7038() -> Tensor[(10, 8, 15), float64] {
  %41 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 8, 15), float64] */, dtype="float64") /* ty=Tensor[(10, 8, 15), float64] */;
  atanh(%41) /* ty=Tensor[(10, 8, 15), float64] */
}

def @func_6461(%var_6436: Tensor[(900), uint8]) -> (Tensor[(8, 11, 13), int8], Tensor[(15, 10, 6), float32], Tensor[(900), uint8], Tensor[(8, 11, 13), int8]) {
  %42 = @func_2856() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %43 = cast(%var_6436, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %44 = %42.1;
  %45 = cast(%44, dtype="int8") /* ty=Tensor[(8, 11, 13), int8] */;
  %46 = reshape(%43, newshape=[15, 10, 6]) /* ty=Tensor[(15, 10, 6), uint8] */;
  %47 = reshape(%45, newshape=[1144, 1]) /* ty=Tensor[(1144, 1), int8] */;
  %48 = @func_4163(%46, %47) /* ty=(Tensor[(15, 10, 6), uint8], Tensor[(6, 3, 15), int64], Tensor[(15, 10, 6), float32], Tensor[(8, 11, 13), bool], Tensor[(1144, 1), int8], Tensor[(8, 11, 13), int8]) */;
  %49 = @func_5742() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %50 = %48.2;
  %51 = %49.3;
  (%44, %50, %var_6436, %51)
}

def @func_3315() -> Tensor[(8, 11, 13), int8] {
  %52 = @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %52.1
}

def @func_7582() -> Tensor[(8, 11, 13), int8] {
  @func_219() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_1685() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %53 = @func_239() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %54 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %55 = @func_423() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %56 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %57 = @func_423() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %58 = %53.1;
  %59 = %54.0;
  %60 = %55.0;
  %61 = %56.0;
  %62 = %57.0;
  (%58, %59, %60, %61, %62)
}

def @func_11509() -> (Tensor[(7, 16, 9), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %63 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 16, 9), float32] */, dtype="float32") /* ty=Tensor[(7, 16, 9), float32] */;
  %64 = @func_7602() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %65 = exp(%63) /* ty=Tensor[(7, 16, 9), float32] */;
  %66 = %64.0;
  %67 = @func_7983() /* ty=Tensor[(8, 11, 13), int8] */;
  (%65, %66, %67)
}

def @func_16392() -> Tensor[(8, 11, 13), float64] {
  %68 = @func_954() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %68.2
}

def @func_16749() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(1664), float64]) {
  %69 = @func_8424() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %70 = @func_4545() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %71 = @func_7906() /* ty=(Tensor[(1664), float64],) */;
  %72 = %69.0;
  %73 = %70.0;
  %74 = %71.0;
  (%72, %73, %74)
}

def @func_19306() -> (Tensor[(8, 11, 13), int8],) {
  %75 = @func_9960() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %76 = %75.0;
  (%76,)
}

def @func_8659() -> (Tensor[(8, 11, 13), int8],) {
  %77 = @func_7722() /* ty=Tensor[(8, 11, 13), int8] */;
  (%77,)
}

def @func_1467() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %78 = @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %79 = @func_239() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %80 = %78.0;
  %81 = %79.1;
  (%80, %81)
}

def @func_5670() -> (Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %82 = @func_3361() /* ty=(Tensor[(8, 11, 13), float64],) */;
  %83 = @func_632() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %84 = @func_3545() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %85 = @func_4905() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %86 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %87 = %82.0;
  %88 = %83.1;
  %89 = %84.0;
  %90 = %85.0;
  %91 = %86.0;
  (%87, %88, %89, %90, %91)
}

def @func_11817() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 12), float32], int64) {
  %92 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %93 = reshape(%92, newshape=[]) /* ty=int64 */;
  %94 = @func_5254(%93) /* ty=(Tensor[(8, 11, 12), float32],) */;
  %95 = @func_3004() /* ty=Tensor[(8, 11, 13), int8] */;
  %96 = %94.0;
  (%95, %96, -1 /* ty=int64 */)
}

def @func_14373(%var_14358: Tensor[(13, 9, 13), float32]) -> (Tensor[(13, 9, 13), float32], Tensor[(8, 11, 13), int8]) {
  %97 = cast(%var_14358, dtype="float32") /* ty=Tensor[(13, 9, 13), float32] */;
  %98 = cos(%97) /* ty=Tensor[(13, 9, 13), float32] */;
  %99 = cast(%98, dtype="float32") /* ty=Tensor[(13, 9, 13), float32] */;
  %100 = @func_3545() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %101 = log(%99) /* ty=Tensor[(13, 9, 13), float32] */;
  %102 = %100.0;
  (%101, %102)
}

def @func_18591() -> Tensor[(8, 11, 13), int8] {
  %103 = @func_13732() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %103.0
}

def @func_12098() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  %104 = @func_4462() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %105 = @func_9863() /* ty=(Tensor[(8, 11, 13), uint32],) */;
  %106 = @func_2384() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %107 = %104.0;
  %108 = %105.0;
  %109 = %106.0;
  (%107, %108, %109)
}

def @func_7409() -> (Tensor[(8, 11, 13), int8],) {
  %110 = @func_6377() /* ty=Tensor[(8, 11, 13), int8] */;
  (%110,)
}

def @func_6518() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %111 = @func_1250() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %112 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
  %113 = %111.0;
  %114 = %112.1;
  (%113, %114)
}

def @func_13436() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), uint32]) {
  %115 = @func_5541() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %116 = %115.0;
  %117 = @func_3782() /* ty=Tensor[(8, 11, 13), uint32] */;
  (%116, %117)
}

def @func_2591() -> (Tensor[(8, 11, 13), float64], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %118 = @func_640() /* ty=Tensor[(8, 11, 13), int8] */;
  %119 = cast(%118, dtype="float64") /* ty=Tensor[(8, 11, 13), float64] */;
  %120 = @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %121 = @func_239() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %122 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %123 = sigmoid(%119) /* ty=Tensor[(8, 11, 13), float64] */;
  %124 = %120.0;
  %125 = %121.1;
  %126 = %122.0;
  (%123, %124, %125, %126)
}

def @func_15984() -> (Tensor[(8, 11, 13), int8], Tensor[(588), int16]) {
  %127 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %128 = @func_15073() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(588), int16], Tensor[(150, 2), int32], Tensor[(8, 11, 13), int8]) */;
  %129 = %127.0;
  %130 = %128.3;
  (%129, %130)
}

def @func_5966() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %131 = @func_2525() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %132 = @func_1637() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %133 = %131.0;
  %134 = %132.1;
  (%133, %134)
}

def @func_12517(%var_12505: Tensor[(1008, 2), uint16]) -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), bool], Tensor[(160), float64], uint16, Tensor[(1008, 2), bool]) {
  %135 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
  %136 = cast(meta[relay.Constant][4] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %137 = cast(meta[relay.Constant][5] /* ty=Tensor[(1008, 2), uint16] */, dtype="uint16") /* ty=Tensor[(1008, 2), uint16] */;
  %138 = reshape(%136, newshape=[]) /* ty=uint16 */;
  %139 = reshape(%137, newshape=[14, 9, 16]) /* ty=Tensor[(14, 9, 16), uint16] */;
  %140 = @func_8513(%138, %139) /* ty=(Tensor[(14, 9, 16), uint16], Tensor[(14, 9, 16), float32], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(160), float64]) */;
  %141 = cast(%var_12505, dtype="bool") /* ty=Tensor[(1008, 2), bool] */;
  %142 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(1008, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %143 = cast(meta[relay.Constant][5] /* ty=Tensor[(1008, 2), uint16] */, dtype="bool") /* ty=Tensor[(1008, 2), bool] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %145 = @func_9676() /* ty=Tensor[(8, 11, 13), float32] */;
  %146 = %135.2;
  %147 = %140.4;
  %148 = less(%143, %144) /* ty=Tensor[(1008, 2), bool] */;
  (%145, %146, %147, meta[relay.Constant][4] /* ty=uint16 */, %148)
}

def @func_10941() -> (Tensor[(8, 11, 13), int8],) {
  %149 = @func_7983() /* ty=Tensor[(8, 11, 13), int8] */;
  (%149,)
}

def @func_12869() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(52, 32), float64]) {
  %150 = @func_6631() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %151 = cast(meta[relay.Constant][6] /* ty=Tensor[(52, 32), float64] */, dtype="float64") /* ty=Tensor[(52, 32), float64] */;
  %152 = reshape(%151, newshape=[1664]) /* ty=Tensor[(1664), float64] */;
  %153 = @func_7548(%152) /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %154 = %150.0;
  %155 = %153.0;
  (%154, %155, meta[relay.Constant][6] /* ty=Tensor[(52, 32), float64] */)
}

def @func_10879(%var_10874: Tensor[(270), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(900), uint8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) {
  %156 = @func_2384() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %157 = @func_3507() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %158 = @func_6604() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32]) */;
  %159 = cast(meta[relay.Constant][7] /* ty=Tensor[(900), uint8] */, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %160 = %158.1;
  %161 = cast(%160, dtype="int8") /* ty=Tensor[(8, 11, 13), int8] */;
  %162 = reshape(%159, newshape=[15, 10, 6]) /* ty=Tensor[(15, 10, 6), uint8] */;
  %163 = reshape(%161, newshape=[1144, 1]) /* ty=Tensor[(1144, 1), int8] */;
  %164 = @func_4163(%162, %163) /* ty=(Tensor[(15, 10, 6), uint8], Tensor[(6, 3, 15), int64], Tensor[(15, 10, 6), float32], Tensor[(8, 11, 13), bool], Tensor[(1144, 1), int8], Tensor[(8, 11, 13), int8]) */;
  %165 = cast(%var_10874, dtype="int64") /* ty=Tensor[(270), int64] */;
  %166 = cast(%var_10874, dtype="int64") /* ty=Tensor[(270), int64] */;
  %167 = reshape(%165, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), int64] */;
  %168 = reshape(%166, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), int64] */;
  %169 = @func_1171(%167, %168) /* ty=(Tensor[(6, 3, 15), int64],) */;
  %170 = %156.0;
  %171 = %157.0;
  %172 = %164.5;
  %173 = %169.0;
  (%170, %171, %160, %172, meta[relay.Constant][7] /* ty=Tensor[(900), uint8] */, %173, %var_10874)
}

def @func_12621(%var_12593: Tensor[(10, 7, 4), uint16], %var_12594: Tensor[(10, 7, 4), uint16]) -> (Tensor[(10, 7, 4), bool], Tensor[(1664), float64]) {
  %174 = cast(%var_12594, dtype="bool") /* ty=Tensor[(10, 7, 4), bool] */;
  %175 = shape_of(%var_12593, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%var_12593, dtype="bool") /* ty=Tensor[(10, 7, 4), bool] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %178 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %179 = less(%176, %177) /* ty=Tensor[(10, 7, 4), bool] */;
  %180 = %178.3;
  (%179, %180)
}

def @func_2145() -> (Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %181 = @func_2077() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %182 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %183 = @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %184 = %181.1;
  %185 = %182.0;
  %186 = %183.0;
  (%184, %185, %186)
}

def @func_4221() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %187 = @func_1706() /* ty=Tensor[(8, 11, 13), int8] */;
  %188 = @func_2443() /* ty=Tensor[(8, 11, 13), int8] */;
  (%187, %188)
}

def @func_2525() -> (Tensor[(8, 11, 13), int8],) {
  %189 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %190 = %189.1;
  (%190,)
}

def @func_1446() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %191 = @func_1352() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %192 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %193 = %191.0;
  %194 = %192.0;
  (%193, %194)
}

def @func_8329() -> Tensor[(8, 11, 13), int8] {
  %195 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %195.0
}

def @func_9801() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %196 = @func_5966() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %197 = %196.0;
  %198 = @func_4209() /* ty=Tensor[(8, 11, 13), int8] */;
  (%197, %198)
}

def @func_9243() -> Tensor[(8, 11, 13), int8] {
  %199 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %199.0
}

def @func_14167() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) {
  %200 = @func_8269() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %201 = @func_8727() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %202 = @func_2421() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %203 = %200.0;
  %204 = %201.1;
  %205 = %202.1;
  (%203, %204, %205)
}

def @func_13452() -> (Tensor[(8, 11, 13), int8],) {
  %206 = @func_9350() /* ty=Tensor[(8, 11, 13), int8] */;
  (%206,)
}

def @func_14468() -> Tensor[(8, 11, 13), int8] {
  %207 = @func_9334() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %207.0
}

def @func_5626(%var_5596: Tensor[(5, 10, 15), uint64]) -> (Tensor[(5, 10, 15), uint64], Tensor[(8, 11, 13), int8], Tensor[(9, 8, 3), float32], Tensor[(36, 6), float32]) {
  %208 = cast(%var_5596, dtype="uint64") /* ty=Tensor[(5, 10, 15), uint64] */;
  %209 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(5, 10, 15), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 10, 15), uint64] */, dtype="uint64") /* ty=Tensor[(5, 10, 15), uint64] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %212 = @func_5541() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %213 = cast(meta[relay.Constant][9] /* ty=Tensor[(36, 6), float32] */, dtype="float32") /* ty=Tensor[(36, 6), float32] */;
  %214 = reshape(%213, newshape=[9, 8, 3]) /* ty=Tensor[(9, 8, 3), float32] */;
  %215 = bitwise_or(%210, %211) /* ty=Tensor[(5, 10, 15), uint64] */;
  %216 = %212.1;
  %217 = @func_3835(%214) /* ty=Tensor[(9, 8, 3), float32] */;
  (%215, %216, %217, meta[relay.Constant][9] /* ty=Tensor[(36, 6), float32] */)
}

def @func_11753() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %218 = @func_3264() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %219 = @func_4445() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %220 = %218.1;
  %221 = %219.0;
  (%220, %221)
}

def @func_7802() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), int8]) {
  %222 = @func_2856() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %223 = @func_5768() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), float64]) */;
  %224 = @func_3264() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %225 = %222.2;
  %226 = %223.1;
  %227 = %224.0;
  (%225, %226, %227)
}

def @func_7077() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), uint32]) {
  %228 = @func_4462() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %229 = @func_2646() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */;
  %230 = %228.0;
  %231 = @func_3021() /* ty=Tensor[(8, 11, 13), float64] */;
  %232 = %229.1;
  (%230, %231, %232)
}

def @func_5229() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), uint32]) {
  %233 = @func_4794() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %234 = %233.2;
  %235 = @func_3782() /* ty=Tensor[(8, 11, 13), uint32] */;
  (%234, %235)
}

def @func_12270() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %236 = @func_1088() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %237 = @func_9021() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %238 = @func_751() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %239 = %236.2;
  %240 = %237.0;
  %241 = %238.0;
  (%239, %240, %241)
}

def @func_4545() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %242 = @func_3545() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %243 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
  %244 = @func_3604() /* ty=Tensor[(8, 11, 13), float32] */;
  %245 = %242.0;
  %246 = %243.1;
  (%244, %245, %246)
}

def @func_6641() -> (Tensor[(8, 11, 13), float32],) {
  %247 = @func_3604() /* ty=Tensor[(8, 11, 13), float32] */;
  (%247,)
}

def @func_16383() -> (Tensor[(8, 11, 13), float32],) {
  %248 = @func_6349() /* ty=Tensor[(8, 11, 13), float32] */;
  (%248,)
}

def @func_9375() -> Tensor[(8, 11, 13), uint32] {
  %249 = @func_8083() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), float32]) */;
  %249.0
}

def @func_239() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %250 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
  %251 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
  (%250, %251)
}

def @func_14952() -> Tensor[(8, 11, 13), float64] {
  %252 = @func_13562() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %252.0
}

def @func_6687() -> (Tensor[(8, 11, 13), int8],) {
  %253 = @func_5098() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %254 = %253.0;
  (%254,)
}

def @func_11131(%var_11116: Tensor[(91), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(91), float64], Tensor[(13, 7, 1), float32]) {
  %255 = @func_9960() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %256 = @func_6145() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1, 750), float64], Tensor[(8, 11, 13), int8]) */;
  %257 = cast(%var_11116, dtype="float64") /* ty=Tensor[(91), float64] */;
  %258 = reshape(%257, newshape=[13, 7, 1]) /* ty=Tensor[(13, 7, 1), float64] */;
  %259 = @func_9981(%258) /* ty=(Tensor[(13, 7, 1), float64],) */;
  %260 = %259.0;
  %261 = cast(%260, dtype="float32") /* ty=Tensor[(13, 7, 1), float32] */;
  %262 = %255.0;
  %263 = @func_1706() /* ty=Tensor[(8, 11, 13), int8] */;
  %264 = %256.4;
  %265 = cos(%261) /* ty=Tensor[(13, 7, 1), float32] */;
  (%262, %263, %264, %var_11116, %265)
}

def @func_8818() -> Tensor[(8, 11, 13), int8] {
  %266 = @func_2646() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */;
  %266.0
}

def @func_12308() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %267 = @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %268 = @func_179() /* ty=Tensor[(8, 11, 13), int8] */;
  %269 = %267.0;
  (%268, %269)
}

def @func_17237() -> (Tensor[(8, 11, 13), int8], Tensor[(10, 8, 15), float32], Tensor[(1200), float64], Tensor[(8, 11, 13), int8], Tensor[(2240, ?), float64]) {
  %270 = @func_3821() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %271 = cast(meta[relay.Constant][10] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %272 = reshape(%271, newshape=[10, 8, 15]) /* ty=Tensor[(10, 8, 15), float64] */;
  %273 = @func_10772() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %274 = cast(meta[relay.Constant][11] /* ty=Tensor[(2240, 1), int8] */, dtype="int8") /* ty=Tensor[(2240, 1), int8] */;
  %275 = cast(meta[relay.Constant][11] /* ty=Tensor[(2240, 1), int8] */, dtype="int8") /* ty=Tensor[(2240, 1), int8] */;
  %276 = reshape(%274, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int8] */;
  %277 = reshape(%275, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int8] */;
  %278 = @func_3979(%276, %277) /* ty=(Tensor[(10, 14, 16), bool], Tensor[(8, 11, 13), int8]) */;
  %279 = %278.0;
  %280 = cast(%279, dtype="int64") /* ty=Tensor[(10, 14, 16), int64] */;
  %281 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(2240, 1), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %282 = cast(meta[relay.Constant][11] /* ty=Tensor[(2240, 1), int8] */, dtype="int64") /* ty=Tensor[(2240, 1), int64] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %284 = bitwise_or(%282, %283) /* ty=Tensor[(2240, ?), int64] */;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(2240, ?), float64] */;
  %286 = %270.0;
  %287 = @func_7184(%272) /* ty=Tensor[(10, 8, 15), float32] */;
  %288 = %273.0;
  %289 = asinh(%285) /* ty=Tensor[(2240, ?), float64] */;
  (%286, %287, meta[relay.Constant][10] /* ty=Tensor[(1200), float64] */, %288, %289)
}

def @func_17327() -> (Tensor[(8, 11, 13), float32],) {
  %290 = @func_5541() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %291 = %290.0;
  (%291,)
}

def @func_17162(%var_17136: Tensor[(195), float64], %var_17142: Tensor[(264), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(195), float64], Tensor[(264), float64], Tensor[(8, 11, 13), int8], Tensor[(2, 11, 12), float64]) {
  %292 = @func_10758() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(12, 5, 7), float64], Tensor[(420), float64]) */;
  %293 = cast(%var_17136, dtype="float64") /* ty=Tensor[(195), float64] */;
  %294 = reshape(%293, newshape=[1, 195]) /* ty=Tensor[(1, 195), float64] */;
  %295 = @func_14211(%294) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(3, 13, 5), float64], Tensor[(1, 195), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %296 = cast(%var_17142, dtype="float64") /* ty=Tensor[(264), float64] */;
  %297 = reshape(%296, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), float64] */;
  %298 = @func_8107(%297) /* ty=(Tensor[(2, 11, 12), float64],) */;
  %299 = %298.0;
  %300 = cast(%299, dtype="float64") /* ty=Tensor[(2, 11, 12), float64] */;
  %301 = %292.0;
  %302 = %295.3;
  %303 = @func_16931() /* ty=Tensor[(8, 11, 13), int8] */;
  %304 = log(%300) /* ty=Tensor[(2, 11, 12), float64] */;
  (%301, %302, %var_17136, %var_17142, %303, %304)
}

def @func_10772() -> (Tensor[(8, 11, 13), int8],) {
  %305 = @func_10681() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %306 = %305.0;
  (%306,)
}

def @func_15408(%var_15377: Tensor[(168), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(168), float64], Tensor[(420), float64]) {
  %307 = @func_9334() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %308 = @func_7679() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 7, 8), float64], Tensor[(448), float64]) */;
  %309 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %310 = cast(%var_15377, dtype="float64") /* ty=Tensor[(168), float64] */;
  %311 = reshape(%310, newshape=[2, 7, 12]) /* ty=Tensor[(2, 7, 12), float64] */;
  %312 = @func_12199(%311) /* ty=(Tensor[(2, 7, 12), float64], Tensor[(8, 11, 13), int8]) */;
  %313 = @func_10758() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(12, 5, 7), float64], Tensor[(420), float64]) */;
  %314 = @func_6377() /* ty=Tensor[(8, 11, 13), int8] */;
  %315 = %307.1;
  %316 = @func_14425() /* ty=Tensor[(8, 11, 13), int8] */;
  %317 = %308.0;
  %318 = @func_9676() /* ty=Tensor[(8, 11, 13), float32] */;
  %319 = %309.0;
  %320 = %312.1;
  %321 = %313.2;
  (%314, %315, %316, %317, %318, %319, %320, %var_15377, %321)
}

def @func_18956() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %322 = @func_4445() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %323 = @func_10286() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %324 = %322.0;
  %325 = %323.0;
  (%324, %325)
}

def @func_765(%var_753: Tensor[(13, 16, 8), float64]) -> (Tensor[(13, 16, 8), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %326 = cast(%var_753, dtype="float64") /* ty=Tensor[(13, 16, 8), float64] */;
  %327 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %328 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %329 = atanh(%326) /* ty=Tensor[(13, 16, 8), float64] */;
  %330 = %327.1;
  %331 = %328.0;
  (%329, %330, %331)
}

def @func_15672(%var_15625: Tensor[(270), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(6, 3, 15), int64], Tensor[(270), int64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %332 = @func_9334() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %333 = @func_7802() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), int8]) */;
  %334 = cast(%var_15625, dtype="int64") /* ty=Tensor[(270), int64] */;
  %335 = cast(%var_15625, dtype="int64") /* ty=Tensor[(270), int64] */;
  %336 = reshape(%334, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), int64] */;
  %337 = reshape(%335, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), int64] */;
  %338 = @func_1171(%336, %337) /* ty=(Tensor[(6, 3, 15), int64],) */;
  %339 = @func_3410() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %340 = @func_4221() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %341 = %332.1;
  %342 = %333.0;
  %343 = %338.0;
  %344 = %339.0;
  %345 = @func_2668() /* ty=Tensor[(8, 11, 13), int8] */;
  %346 = %340.0;
  (%341, %342, %343, %var_15625, %344, %345, %346)
}

def @func_1171(%var_1166: Tensor[(6, 3, 15), int64], %var_1167: Tensor[(6, 3, 15), int64]) -> (Tensor[(6, 3, 15), int64],) {
  %347 = cast(%var_1167, dtype="int64") /* ty=Tensor[(6, 3, 15), int64] */;
  %348 = shape_of(%var_1166, dtype="int32") /* ty=Tensor[(3), int32] */;
  %349 = cast(%var_1166, dtype="int64") /* ty=Tensor[(6, 3, 15), int64] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %351 = bitwise_or(%349, %350) /* ty=Tensor[(6, 3, 15), int64] */;
  (%351,)
}

def @func_5326(%var_5309: Tensor[(1664), float32]) -> (Tensor[(1664), bool], Tensor[(8, 11, 13), int8]) {
  %352 = @func_2591() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %353 = %352.1;
  %354 = cast(%353, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %355 = log2(%354) /* ty=Tensor[(1664), float32] */;
  %356 = cast(%var_5309, dtype="bool") /* ty=Tensor[(1664), bool] */;
  %357 = shape_of(%355, dtype="int32") /* ty=Tensor[(1), int32] */;
  %358 = cast(%355, dtype="bool") /* ty=Tensor[(1664), bool] */;
  %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?), bool] */;
  %360 = equal(%358, %359) /* ty=Tensor[(1664), bool] */;
  %361 = @func_2759() /* ty=Tensor[(8, 11, 13), int8] */;
  (%360, %361)
}

def @func_219() -> Tensor[(8, 11, 13), int8] {
  @func_179() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_10547() -> Tensor[(8, 11, 13), int8] {
  @func_6897() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_12175() -> (Tensor[(8, 11, 13), int8],) {
  %362 = @func_10547() /* ty=Tensor[(8, 11, 13), int8] */;
  (%362,)
}

def @func_954() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) {
  %363 = @func_632() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %364 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %365 = %364.0;
  %366 = cast(%365, dtype="float64") /* ty=Tensor[(8, 11, 13), float64] */;
  %367 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
  %368 = %363.0;
  %369 = tan(%366) /* ty=Tensor[(8, 11, 13), float64] */;
  (%367, %368, %369)
}

def @func_10425() -> Tensor[(8, 11, 13), float32] {
  %370 = @func_5541() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %370.0
}

def @func_357() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %371 = @func_239() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %372 = %371.1;
  %373 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
  (%372, %373)
}

def @func_2668() -> Tensor[(8, 11, 13), int8] {
  %374 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %374.0
}

def @func_18875() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(270), int64]) {
  %375 = @func_6229() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %376 = @func_3085() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) */;
  %377 = %375.1;
  %378 = @func_2759() /* ty=Tensor[(8, 11, 13), int8] */;
  %379 = %376.3;
  (%377, %378, %379)
}

def @func_1615(%var_1592: Tensor[(8, 8, 4), int64], %var_1600: Tensor[(8, 8, 4), bool]) -> (Tensor[(8, 8, 4), uint32],) {
  %380 = cast(%var_1592, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
  %381 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(8, 8, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(meta[relay.Constant][12] /* ty=Tensor[(8, 8, 4), int64] */, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %384 = greater_equal(%382, %383) /* ty=Tensor[(8, 8, 4), bool] */;
  %385 = cast(%var_1600, dtype="uint32") /* ty=Tensor[(8, 8, 4), uint32] */;
  %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%384, dtype="uint32") /* ty=Tensor[(8, 8, 4), uint32] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %389 = logical_xor(%387, %388) /* ty=Tensor[(8, 8, 4), uint32] */;
  (%389,)
}

def @func_19089() -> Tensor[(8, 11, 13), uint32] {
  @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_17452() -> (Tensor[(8, 11, 13), int8],) {
  %390 = @func_16054() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %391 = %390.0;
  (%391,)
}

def @func_2443() -> Tensor[(8, 11, 13), int8] {
  %392 = @func_1467() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %392.1
}

def @main(%var_19481: Tensor[(4, 4, 14), uint64], %var_19482: Tensor[(4, 4, 14), uint64]) -> Tensor[(4, 4, 14), bool] {
  %393 = cast(%var_19482, dtype="bool") /* ty=Tensor[(4, 4, 14), bool] */;
  %394 = shape_of(%var_19481, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%var_19481, dtype="bool") /* ty=Tensor[(4, 4, 14), bool] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%395, %396) /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_1250() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %397 = @func_751() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %398 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %399 = @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %400 = %397.0;
  %401 = %398.0;
  %402 = %399.1;
  (%400, %401, %402)
}

def @func_8194() -> (Tensor[(8, 11, 13), int8],) {
  %403 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %404 = %403.0;
  (%404,)
}

def @func_17623() -> Tensor[(3, 14, 14), uint8] {
  %405 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 14, 14), float64] */, dtype="float64") /* ty=Tensor[(3, 14, 14), float64] */;
  %406 = asin(%405) /* ty=Tensor[(3, 14, 14), float64] */;
  %407 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 14, 14), float64] */, dtype="uint8") /* ty=Tensor[(3, 14, 14), uint8] */;
  %408 = shape_of(%406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%406, dtype="uint8") /* ty=Tensor[(3, 14, 14), uint8] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  minimum(%409, %410) /* ty=Tensor[(3, 14, 14), uint8] */
}

def @func_14211(%var_14190: Tensor[(1, 195), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(3, 13, 5), float64], Tensor[(1, 195), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %411 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %412 = cast(%var_14190, dtype="float64") /* ty=Tensor[(1, 195), float64] */;
  %413 = cast(%var_14190, dtype="float64") /* ty=Tensor[(1, 195), float64] */;
  %414 = reshape(%412, newshape=[3, 13, 5]) /* ty=Tensor[(3, 13, 5), float64] */;
  %415 = reshape(%413, newshape=[3, 13, 5]) /* ty=Tensor[(3, 13, 5), float64] */;
  %416 = @func_10349(%414, %415) /* ty=(Tensor[(3, 13, 5), float64],) */;
  %417 = @func_3410() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %418 = %411.3;
  %419 = %416.0;
  %420 = %417.1;
  %421 = @func_8329() /* ty=Tensor[(8, 11, 13), int8] */;
  (%418, %419, %var_14190, %420, %421)
}

def @func_19355() -> (Tensor[(8, 11, 13), float32],) {
  %422 = @func_2421() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %423 = %422.1;
  (%423,)
}

def @func_3682() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %424 = @func_1637() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %425 = %424.0;
  %426 = @func_2695() /* ty=Tensor[(8, 11, 13), int8] */;
  (%425, %426)
}

def @func_17577() -> (Tensor[(8, 11, 13), uint32],) {
  %427 = @func_2956() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %428 = %427.0;
  (%428,)
}

def @func_13625() -> Tensor[(8, 11, 13), float32] {
  @func_9676() /* ty=Tensor[(8, 11, 13), float32] */
}

def @func_6145() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1, 750), float64], Tensor[(8, 11, 13), int8]) {
  %429 = @func_4794() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %430 = @func_4905() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %431 = @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %432 = @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %433 = @func_4631() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %434 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 750), uint64] */, dtype="uint64") /* ty=Tensor[(1, 750), uint64] */;
  %435 = reshape(%434, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), uint64] */;
  %436 = @func_5626(%435) /* ty=(Tensor[(5, 10, 15), uint64], Tensor[(8, 11, 13), int8], Tensor[(9, 8, 3), float32], Tensor[(36, 6), float32]) */;
  %437 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 750), uint64] */, dtype="float64") /* ty=Tensor[(1, 750), float64] */;
  %438 = @func_3507() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %439 = %429.1;
  %440 = %430.0;
  %441 = %431.1;
  %442 = %432.0;
  %443 = %433.1;
  %444 = %436.1;
  %445 = tan(%437) /* ty=Tensor[(1, 750), float64] */;
  %446 = %438.0;
  (%439, %440, %441, %442, %443, %444, %445, %446)
}

def @func_9895() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(117), float64]) {
  %447 = cast(meta[relay.Constant][15] /* ty=Tensor[(117), float64] */, dtype="float64") /* ty=Tensor[(117), float64] */;
  %448 = reshape(%447, newshape=[13, 9, 1]) /* ty=Tensor[(13, 9, 1), float64] */;
  %449 = @func_2746(%448) /* ty=(Tensor[(13, 9, 1), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %450 = @func_2443() /* ty=Tensor[(8, 11, 13), int8] */;
  %451 = %449.2;
  (%450, %451, meta[relay.Constant][15] /* ty=Tensor[(117), float64] */)
}

def @func_19173() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float32], Tensor[(8, 11, 13), int8], Tensor[(195), float64]) {
  %452 = @func_1467() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %453 = @func_6493() /* ty=(Tensor[(1664), float32],) */;
  %454 = cast(meta[relay.Constant][16] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
  %455 = reshape(%454, newshape=[1, 195]) /* ty=Tensor[(1, 195), float64] */;
  %456 = @func_14211(%455) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(3, 13, 5), float64], Tensor[(1, 195), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %457 = %452.0;
  %458 = %453.0;
  %459 = %456.4;
  (%457, %458, %459, meta[relay.Constant][16] /* ty=Tensor[(195), float64] */)
}

def @func_3021() -> Tensor[(8, 11, 13), float64] {
  %460 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %460.0
}

def @func_13071() -> (Tensor[(8, 11, 13), int8],) {
  %461 = @func_4265() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %462 = %461.4;
  (%462,)
}

def @func_14824() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %463 = @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %464 = @func_8886() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %465 = @func_4007() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %466 = %463.0;
  %467 = @func_10425() /* ty=Tensor[(8, 11, 13), float32] */;
  %468 = %464.3;
  %469 = %465.0;
  (%466, %467, %468, %469)
}

def @func_10483(%var_10451: Tensor[(1664), float64]) -> Tensor[(1664), uint32] {
  %470 = @func_7906() /* ty=(Tensor[(1664), float64],) */;
  %471 = %470.0;
  %472 = cast(%var_10451, dtype="uint32") /* ty=Tensor[(1664), uint32] */;
  %473 = shape_of(%471, dtype="int32") /* ty=Tensor[(1), int32] */;
  %474 = cast(%471, dtype="uint32") /* ty=Tensor[(1664), uint32] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?), uint32] */;
  logical_xor(%474, %475) /* ty=Tensor[(1664), uint32] */
}

def @func_9960() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %476 = @func_7492() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %477 = @func_2421() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %478 = %476.2;
  %479 = %477.0;
  (%478, %479)
}

def @func_12437() -> Tensor[(8, 11, 13), float32] {
  @func_10425() /* ty=Tensor[(8, 11, 13), float32] */
}

def @func_14330() -> (Tensor[(8, 11, 13), int8], Tensor[(10, 8, 15), float64]) {
  %480 = @func_11289() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %481 = %480.0;
  %482 = @func_7038() /* ty=Tensor[(10, 8, 15), float64] */;
  (%481, %482)
}

def @func_8297() -> Tensor[(8, 11, 13), int8] {
  %483 = @func_3682() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %483.1
}

def @func_18624() -> Tensor[(8, 11, 13), float64] {
  %484 = @func_2591() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %484.0
}

def @func_12825() -> Tensor[(8, 11, 13), int8] {
  %485 = @func_6229() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %485.1
}

def @func_15747() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %486 = @func_2525() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %487 = @func_6213() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(4, 64), int64]) */;
  %488 = %486.0;
  %489 = %487.0;
  (%488, %489)
}

def @func_2384() -> (Tensor[(8, 11, 13), int8],) {
  %490 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %491 = %490.0;
  (%491,)
}

def @func_15512(%var_15506: Tensor[(13, 1, 5), uint32], %var_15507: Tensor[(13, 16, 5), uint32]) -> (Tensor[(13, 16, 5), uint32],) {
  %492 = cast(%var_15506, dtype="uint32") /* ty=Tensor[(13, 1, 5), uint32] */;
  %493 = cast(%var_15507, dtype="uint32") /* ty=Tensor[(13, 16, 5), uint32] */;
  %494 = left_shift(%492, %493) /* ty=Tensor[(13, 16, 5), uint32] */;
  (%494,)
}

def @func_9676() -> Tensor[(8, 11, 13), float32] {
  %495 = @func_5541() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %495.0
}

def @func_14260(%var_14241: Tensor[(4, 11, 2), float32]) -> (Tensor[(4, 11, 2), float32],) {
  %496 = cast(%var_14241, dtype="float32") /* ty=Tensor[(4, 11, 2), float32] */;
  %497 = erf(%496) /* ty=Tensor[(4, 11, 2), float32] */;
  (%497,)
}

def @func_7548(%var_7518: Tensor[(1664), float64]) -> (Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %498 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %499 = %498.2;
  %500 = cast(%var_7518, dtype="float64") /* ty=Tensor[(1664), float64] */;
  %501 = shape_of(%499, dtype="int32") /* ty=Tensor[(1), int32] */;
  %502 = cast(%499, dtype="float64") /* ty=Tensor[(1664), float64] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?), float64] */;
  %504 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %505 = @func_2591() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %506 = divide(%502, %503) /* ty=Tensor[(1664), float64] */;
  %507 = %504.1;
  %508 = %505.2;
  (%506, %507, %508)
}

def @func_7855() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %509 = @func_4265() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %510 = @func_7679() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 7, 8), float64], Tensor[(448), float64]) */;
  %511 = %509.3;
  %512 = %510.0;
  (%511, %512)
}

def @func_13776() -> (Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  %513 = @func_9863() /* ty=(Tensor[(8, 11, 13), uint32],) */;
  %514 = @func_5966() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %515 = @func_11237() /* ty=Tensor[(8, 11, 13), bool] */;
  %516 = @func_6249() /* ty=Tensor[(8, 11, 13), int8] */;
  %517 = %513.0;
  %518 = %514.0;
  (%515, %516, %517, %518)
}

def @func_18514(%var_18509: Tensor[(672), bool]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(12, 14, 4), float32], Tensor[(672), bool]) {
  %519 = @func_12691() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %520 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %521 = cast(%var_18509, dtype="bool") /* ty=Tensor[(672), bool] */;
  %522 = cast(%var_18509, dtype="bool") /* ty=Tensor[(672), bool] */;
  %523 = reshape(%521, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), bool] */;
  %524 = reshape(%522, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), bool] */;
  %525 = @func_11558(%523, %524) /* ty=(Tensor[(12, 14, 4), float32],) */;
  %526 = @func_3004() /* ty=Tensor[(8, 11, 13), int8] */;
  %527 = %519.0;
  %528 = %520.0;
  %529 = %525.0;
  (%526, %527, %528, %529, %var_18509)
}

def @func_883() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
  %530 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %531 = @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %532 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %533 = %530.0;
  %534 = %531.0;
  %535 = %532.3;
  (%533, %534, %535)
}

def @func_6736() -> (Tensor[(8, 11, 13), int8],) {
  %536 = @func_4007() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %537 = %536.0;
  (%537,)
}

def @func_11345() -> (Tensor[(8, 11, 13), float64], Tensor[(1664), bool], Tensor[(1664), float32]) {
  %538 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %539 = cast(meta[relay.Constant][17] /* ty=Tensor[(1664), float32] */, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %540 = reshape(%539, newshape=[1664]) /* ty=Tensor[(1664), float32] */;
  %541 = @func_5326(%540) /* ty=(Tensor[(1664), bool], Tensor[(8, 11, 13), int8]) */;
  %542 = %538.0;
  %543 = %541.0;
  (%542, %543, meta[relay.Constant][17] /* ty=Tensor[(1664), float32] */)
}

def @func_3410() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %544 = @func_2283() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1664), float64]) */;
  %545 = @func_2525() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %546 = %544.0;
  %547 = %545.0;
  (%546, %547)
}

def @func_13155(%var_13153: Tensor[(270), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(270), int64]) {
  %548 = @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %549 = cast(%var_13153, dtype="int64") /* ty=Tensor[(270), int64] */;
  %550 = reshape(%549, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %551 = @func_10879(%550) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(900), uint8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) */;
  %552 = %548.1;
  %553 = @func_7722() /* ty=Tensor[(8, 11, 13), int8] */;
  %554 = @func_9149() /* ty=Tensor[(8, 11, 13), float64] */;
  %555 = %551.3;
  (%552, %553, %554, %555, %var_13153)
}

def @func_18907(%var_18902: Tensor[(12, 11, 14), float64]) -> Tensor[(12, 11, 14), float64] {
  %556 = cast(%var_18902, dtype="float64") /* ty=Tensor[(12, 11, 14), float64] */;
  tan(%556) /* ty=Tensor[(12, 11, 14), float64] */
}

def @func_16922() -> Tensor[(8, 11, 13), float32] {
  @func_3604() /* ty=Tensor[(8, 11, 13), float32] */
}

def @func_8808(%var_8765: Tensor[(2, 8, 9), bool], %var_8766: Tensor[(2, 8, 9), bool]) -> (Tensor[(2, 8, 9), bool], Tensor[(8, 11, 13), int8], Tensor[(2, 8, 9), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) {
  %557 = cast(%var_8766, dtype="bool") /* ty=Tensor[(2, 8, 9), bool] */;
  %558 = shape_of(%var_8765, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(%var_8765, dtype="bool") /* ty=Tensor[(2, 8, 9), bool] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %561 = @func_6631() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %562 = cast(%var_8766, dtype="float32") /* ty=Tensor[(2, 8, 9), float32] */;
  %563 = @func_3640() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %564 = @func_7802() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), int8]) */;
  %565 = logical_and(%559, %560) /* ty=Tensor[(2, 8, 9), bool] */;
  %566 = %561.0;
  %567 = atanh(%562) /* ty=Tensor[(2, 8, 9), float32] */;
  %568 = %563.0;
  %569 = %564.0;
  (%565, %566, %567, %568, %569)
}

def @func_14995() -> Tensor[(8, 11, 13), uint32] {
  @func_9375() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_3211() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  %570 = @func_423() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %571 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
  %572 = %570.0;
  (%571, %572)
}

def @func_13834() -> (Tensor[(8, 11, 13), int8],) {
  %573 = @func_2283() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1664), float64]) */;
  %574 = %573.0;
  (%574,)
}

def @func_16931() -> Tensor[(8, 11, 13), int8] {
  %575 = @func_11753() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %575.1
}

def @func_3835(%var_3827: Tensor[(9, 8, 3), float32]) -> Tensor[(9, 8, 3), float32] {
  %576 = cast(%var_3827, dtype="float32") /* ty=Tensor[(9, 8, 3), float32] */;
  %577 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(9, 8, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 8, 3), float32] */, dtype="float32") /* ty=Tensor[(9, 8, 3), float32] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%578, %579) /* ty=Tensor[(9, 8, 3), float32] */
}

def @func_17671() -> (Tensor[(8, 11, 13), int8],) {
  %580 = @func_2856() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %581 = %580.0;
  (%581,)
}

def @func_2856() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) {
  %582 = @func_1295() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %583 = @func_632() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %584 = %582.0;
  %585 = @func_1706() /* ty=Tensor[(8, 11, 13), int8] */;
  %586 = %583.1;
  (%584, %585, %586)
}

def @func_10125() -> (Tensor[(8, 11, 13), float32], Tensor[(2240), uint64]) {
  %587 = cast(meta[relay.Constant][19] /* ty=Tensor[(2240), int8] */, dtype="int8") /* ty=Tensor[(2240), int8] */;
  %588 = cast(meta[relay.Constant][19] /* ty=Tensor[(2240), int8] */, dtype="int8") /* ty=Tensor[(2240), int8] */;
  %589 = reshape(%587, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int8] */;
  %590 = reshape(%588, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int8] */;
  %591 = @func_3979(%589, %590) /* ty=(Tensor[(10, 14, 16), bool], Tensor[(8, 11, 13), int8]) */;
  %592 = %591.0;
  %593 = cast(%592, dtype="uint64") /* ty=Tensor[(10, 14, 16), uint64] */;
  %594 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(2240), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %595 = cast(meta[relay.Constant][19] /* ty=Tensor[(2240), int8] */, dtype="uint64") /* ty=Tensor[(2240), uint64] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %597 = @func_3604() /* ty=Tensor[(8, 11, 13), float32] */;
  %598 = multiply(%595, %596) /* ty=Tensor[(2240), uint64] */;
  (%597, %598)
}

def @func_797() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
  %599 = @func_423() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %600 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %601 = cast(meta[relay.Constant][20] /* ty=Tensor[(1664), float64] */, dtype="float64") /* ty=Tensor[(1664), float64] */;
  %602 = reshape(%601, newshape=[13, 16, 8]) /* ty=Tensor[(13, 16, 8), float64] */;
  %603 = @func_765(%602) /* ty=(Tensor[(13, 16, 8), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %604 = %599.0;
  %605 = %600.0;
  %606 = %603.2;
  (%604, %605, %606, meta[relay.Constant][20] /* ty=Tensor[(1664), float64] */)
}

def @func_11622() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %607 = @func_3720() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */;
  %608 = @func_954() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %609 = %607.1;
  %610 = %608.1;
  %611 = @func_3315() /* ty=Tensor[(8, 11, 13), int8] */;
  (%609, %610, %611)
}

def @func_16029() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %612 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %613 = @func_6145() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1, 750), float64], Tensor[(8, 11, 13), int8]) */;
  %614 = %612.0;
  %615 = %613.4;
  (%614, %615)
}

def @func_19278(%var_19270: Tensor[(4, 16, 15), float32]) -> (Tensor[(4, 16, 15), float32],) {
  %616 = cast(%var_19270, dtype="float32") /* ty=Tensor[(4, 16, 15), float32] */;
  %617 = asin(%616) /* ty=Tensor[(4, 16, 15), float32] */;
  (%617,)
}

def @func_1777() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) {
  %618 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %619 = %618.1;
  %620 = cast(%619, dtype="int8") /* ty=Tensor[(8, 11, 13), int8] */;
  %621 = reshape(%620, newshape=[8, 11, 13]) /* ty=Tensor[(8, 11, 13), int8] */;
  %622 = @func_1513(%621) /* ty=(Tensor[(8, 11, 13), bool],) */;
  %623 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
  %624 = %622.0;
  (%623, %619, %624)
}

def @func_17945() -> Tensor[(8, 11, 13), int8] {
  %625 = @func_7409() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %625.0
}

def @func_18421() -> Tensor[(8, 11, 13), int8] {
  %626 = @func_14330() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(10, 8, 15), float64]) */;
  %626.0
}

def @func_10635(%var_10574: Tensor[(9, 8, 3), uint32]) -> (Tensor[(8, 11, 13), float32], Tensor[(9, 8, 3), bool]) {
  %627 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 8, 3), uint32] */, dtype="uint32") /* ty=Tensor[(9, 8, 3), uint32] */;
  %628 = shape_of(%var_10574, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%var_10574, dtype="uint32") /* ty=Tensor[(9, 8, 3), uint32] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %631 = bitwise_xor(%629, %630) /* ty=Tensor[(9, 8, 3), uint32] */;
  %632 = cast(%631, dtype="uint32") /* ty=Tensor[(9, 8, 3), uint32] */;
  %633 = shape_of(%var_10574, dtype="int32") /* ty=Tensor[(3), int32] */;
  %634 = cast(%var_10574, dtype="uint32") /* ty=Tensor[(9, 8, 3), uint32] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %636 = bitwise_or(%634, %635) /* ty=Tensor[(9, 8, 3), uint32] */;
  %637 = cast(%636, dtype="bool") /* ty=Tensor[(9, 8, 3), bool] */;
  %638 = shape_of(%631, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%631, dtype="bool") /* ty=Tensor[(9, 8, 3), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %641 = @func_6349() /* ty=Tensor[(8, 11, 13), float32] */;
  %642 = greater_equal(%639, %640) /* ty=Tensor[(9, 8, 3), bool] */;
  (%641, %642)
}

def @func_3545() -> (Tensor[(8, 11, 13), int8],) {
  %643 = @func_179() /* ty=Tensor[(8, 11, 13), int8] */;
  (%643,)
}

def @func_9863() -> (Tensor[(8, 11, 13), uint32],) {
  %644 = @func_8459() /* ty=(Tensor[(8, 11, 13), uint32],) */;
  %645 = %644.0;
  (%645,)
}

def @func_11270() -> (Tensor[(8, 11, 13), int8],) {
  %646 = @func_3410() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %647 = %646.1;
  (%647,)
}

def @func_13395(%var_13269: Tensor[(1664), float64], %var_13317: Tensor[(256), int64], %var_13390: Tensor[(1664), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), uint8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(256), int64], Tensor[(8, 11, 13), int8], Tensor[(2, 8, 9), float32], Tensor[(144), bool], Tensor[(1664), float32], Tensor[(448), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(5, 4, 15), int32], Tensor[(300), int32], Tensor[(1008, 2), bool], Tensor[(2016), uint16], Tensor[(1664), bool]) {
  %648 = @func_6754() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %649 = @func_9895() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(117), float64]) */;
  %650 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %651 = %650.2;
  %652 = cast(%var_13269, dtype="uint8") /* ty=Tensor[(1664), uint8] */;
  %653 = shape_of(%651, dtype="int32") /* ty=Tensor[(1), int32] */;
  %654 = cast(%651, dtype="uint8") /* ty=Tensor[(1664), uint8] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %656 = @func_1088() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %657 = @func_4945() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %658 = cast(%var_13317, dtype="int64") /* ty=Tensor[(256), int64] */;
  %659 = cast(%var_13317, dtype="bool") /* ty=Tensor[(256), bool] */;
  %660 = reshape(%658, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), int64] */;
  %661 = reshape(%659, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), bool] */;
  %662 = @func_1615(%660, %661) /* ty=(Tensor[(8, 8, 4), uint32],) */;
  %663 = @func_7409() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %664 = cast(meta[relay.Constant][22] /* ty=Tensor[(144), bool] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %665 = cast(meta[relay.Constant][22] /* ty=Tensor[(144), bool] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %666 = reshape(%664, newshape=[2, 8, 9]) /* ty=Tensor[(2, 8, 9), bool] */;
  %667 = reshape(%665, newshape=[2, 8, 9]) /* ty=Tensor[(2, 8, 9), bool] */;
  %668 = @func_8808(%666, %667) /* ty=(Tensor[(2, 8, 9), bool], Tensor[(8, 11, 13), int8], Tensor[(2, 8, 9), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %669 = cast(%var_13269, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %670 = shape_of(%651, dtype="int32") /* ty=Tensor[(1), int32] */;
  %671 = cast(%651, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?), float32] */;
  %673 = @func_7679() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 7, 8), float64], Tensor[(448), float64]) */;
  %674 = @func_10220() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8]) */;
  %675 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %676 = cast(meta[relay.Constant][23] /* ty=Tensor[(300), int32] */, dtype="int32") /* ty=Tensor[(300), int32] */;
  %677 = reshape(%676, newshape=[5, 4, 15]) /* ty=Tensor[(5, 4, 15), int32] */;
  %678 = @func_12969(%677) /* ty=(Tensor[(5, 4, 15), int32], Tensor[(14, 7, 6), int16], Tensor[(588), int16]) */;
  %679 = cast(meta[relay.Constant][24] /* ty=Tensor[(2016), uint16] */, dtype="uint16") /* ty=Tensor[(2016), uint16] */;
  %680 = reshape(%679, newshape=[1008, 2]) /* ty=Tensor[(1008, 2), uint16] */;
  %681 = @func_12517(%680) /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), bool], Tensor[(160), float64], uint16, Tensor[(1008, 2), bool]) */;
  %682 = cast(%var_13269, dtype="float64") /* ty=Tensor[(1664), float64] */;
  %683 = sinh(%682) /* ty=Tensor[(1664), float64] */;
  %684 = cast(%var_13390, dtype="bool") /* ty=Tensor[(1664), bool] */;
  %685 = shape_of(%683, dtype="int32") /* ty=Tensor[(1), int32] */;
  %686 = cast(%683, dtype="bool") /* ty=Tensor[(1664), bool] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?), bool] */;
  %688 = %648.0;
  %689 = %649.0;
  %690 = left_shift(%654, %655) /* ty=Tensor[(1664), uint8] */;
  %691 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
  %692 = %656.1;
  %693 = %657.0;
  %694 = %662.0;
  %695 = %663.0;
  %696 = %668.2;
  %697 = floor_mod(%671, %672) /* ty=Tensor[(1664), float32] */;
  %698 = %673.3;
  %699 = %674.2;
  %700 = %675.0;
  %701 = %678.0;
  %702 = %681.4;
  %703 = logical_or(%686, %687) /* ty=Tensor[(1664), bool] */;
  (%688, %689, %690, %691, %692, %693, %694, %var_13317, %695, %696, meta[relay.Constant][22] /* ty=Tensor[(144), bool] */, %697, %698, %699, %700, %701, meta[relay.Constant][23] /* ty=Tensor[(300), int32] */, %702, meta[relay.Constant][24] /* ty=Tensor[(2016), uint16] */, %703)
}

def @func_16054() -> (Tensor[(8, 11, 13), int8],) {
  %704 = @func_6631() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %705 = %704.0;
  (%705,)
}

def @func_3821() -> (Tensor[(8, 11, 13), int8],) {
  %706 = @func_1088() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %707 = %706.0;
  (%707,)
}

def @func_3188() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  %708 = @func_2490() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %709 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %710 = %708.1;
  %711 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
  %712 = %709.0;
  (%710, %711, %712)
}

def @func_3361() -> (Tensor[(8, 11, 13), float64],) {
  %713 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %714 = %713.1;
  (%714,)
}

def @func_18563() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %715 = @func_6518() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %716 = @func_7943() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(270), int64]) */;
  %717 = @func_7855() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %718 = %715.1;
  %719 = %716.1;
  %720 = %717.0;
  (%718, %719, %720)
}

def @func_3139() -> Tensor[(8, 11, 13), int8] {
  %721 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
  %721.1
}

def @func_8269() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) {
  %722 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %723 = @func_423() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %724 = @func_954() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %725 = %722.0;
  %726 = %723.0;
  %727 = %724.2;
  (%725, %726, %727)
}

def @func_10349(%var_10317: Tensor[(3, 13, 5), float64], %var_10318: Tensor[(3, 13, 5), float64]) -> (Tensor[(3, 13, 5), float64],) {
  %728 = cast(%var_10318, dtype="float64") /* ty=Tensor[(3, 13, 5), float64] */;
  %729 = shape_of(%var_10317, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%var_10317, dtype="float64") /* ty=Tensor[(3, 13, 5), float64] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %732 = mod(%730, %731) /* ty=Tensor[(3, 13, 5), float64] */;
  (%732,)
}

def @func_1637() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %733 = @func_179() /* ty=Tensor[(8, 11, 13), int8] */;
  %734 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
  (%733, %734)
}

def @func_4403() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %735 = @func_3188() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */;
  %736 = @func_1352() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %737 = %735.2;
  %738 = %736.0;
  (%737, %738)
}

def @func_3979(%var_3954: Tensor[(10, 14, 16), int8], %var_3955: Tensor[(10, 14, 16), int8]) -> (Tensor[(10, 14, 16), bool], Tensor[(8, 11, 13), int8]) {
  %739 = cast(%var_3955, dtype="bool") /* ty=Tensor[(10, 14, 16), bool] */;
  %740 = shape_of(%var_3954, dtype="int32") /* ty=Tensor[(3), int32] */;
  %741 = cast(%var_3954, dtype="bool") /* ty=Tensor[(10, 14, 16), bool] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %743 = @func_3507() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %744 = greater_equal(%741, %742) /* ty=Tensor[(10, 14, 16), bool] */;
  %745 = %743.0;
  (%744, %745)
}

def @func_16251() -> (Tensor[(1664), float64],) {
  %746 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %747 = %746.3;
  (%747,)
}

def @func_17075() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
  %748 = @func_2384() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %749 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %750 = @func_640() /* ty=Tensor[(8, 11, 13), int8] */;
  %751 = %748.0;
  %752 = @func_8329() /* ty=Tensor[(8, 11, 13), int8] */;
  %753 = %749.2;
  (%750, %751, %752, %753)
}

def @func_12742() -> Tensor[(4, 64), int64] {
  %754 = @func_6213() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(4, 64), int64]) */;
  %754.2
}

def @func_18759() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
  %755 = @func_3155() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %756 = @func_1938() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8]) */;
  %757 = %755.0;
  %758 = %756.4;
  (%757, %758)
}

def @func_14038() -> (Tensor[(8, 11, 13), uint32], Tensor[(1664), float64]) {
  %759 = @func_2646() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */;
  %760 = @func_12869() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(52, 32), float64]) */;
  %761 = %759.1;
  %762 = %760.1;
  (%761, %762)
}

def @func_4265() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %763 = @func_1637() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %764 = @func_3545() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %765 = @func_3782() /* ty=Tensor[(8, 11, 13), uint32] */;
  %766 = %763.1;
  %767 = @func_3604() /* ty=Tensor[(8, 11, 13), float32] */;
  %768 = %764.0;
  %769 = @func_640() /* ty=Tensor[(8, 11, 13), int8] */;
  (%765, %766, %767, %768, %769)
}

def @func_18174() -> Tensor[(8, 11, 13), uint32] {
  @func_9375() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_1352() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %770 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %771 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %772 = %770.0;
  %773 = %771.2;
  (%772, %773)
}

def @func_13809(%var_13804: uint64, %var_13805: Tensor[(6, 1, 9), uint64]) -> Tensor[(6, 1, 9), uint64] {
  %774 = cast(%var_13804, dtype="uint64") /* ty=uint64 */;
  %775 = cast(%var_13805, dtype="uint64") /* ty=Tensor[(6, 1, 9), uint64] */;
  bitwise_or(%774, %775) /* ty=Tensor[(6, 1, 9), uint64] */
}

def @func_13931() -> (Tensor[(8, 11, 13), uint32],) {
  %776 = @func_2646() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */;
  %777 = %776.1;
  (%777,)
}

def @func_3720() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  %778 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %779 = @func_3264() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %780 = %778.0;
  %781 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
  %782 = %779.0;
  (%780, %781, %782)
}

def @func_12969(%var_12951: Tensor[(5, 4, 15), int32]) -> (Tensor[(5, 4, 15), int32], Tensor[(14, 7, 6), int16], Tensor[(588), int16]) {
  %783 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 4, 15), int32] */, dtype="int32") /* ty=Tensor[(5, 4, 15), int32] */;
  %784 = shape_of(%var_12951, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%var_12951, dtype="int32") /* ty=Tensor[(5, 4, 15), int32] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %787 = cast(meta[relay.Constant][26] /* ty=Tensor[(588), int16] */, dtype="int16") /* ty=Tensor[(588), int16] */;
  %788 = cast(meta[relay.Constant][26] /* ty=Tensor[(588), int16] */, dtype="int16") /* ty=Tensor[(588), int16] */;
  %789 = reshape(%787, newshape=[14, 7, 6]) /* ty=Tensor[(14, 7, 6), int16] */;
  %790 = reshape(%788, newshape=[14, 7, 6]) /* ty=Tensor[(14, 7, 6), int16] */;
  %791 = @func_9138(%789, %790) /* ty=(Tensor[(14, 7, 6), int16], Tensor[(8, 11, 13), int8], Tensor[(900), uint8]) */;
  %792 = add(%785, %786) /* ty=Tensor[(5, 4, 15), int32] */;
  %793 = %791.0;
  (%792, %793, meta[relay.Constant][26] /* ty=Tensor[(588), int16] */)
}

def @func_11237() -> Tensor[(8, 11, 13), bool] {
  %794 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
  %794.2
}

def @func_19432() -> Tensor[(8, 11, 13), float64] {
  %795 = @func_9021() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %795.1
}

def @func_2823() -> (Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) {
  %796 = @func_954() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %797 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %798 = %797.0;
  %799 = cast(%798, dtype="float64") /* ty=Tensor[(8, 11, 13), float64] */;
  %800 = @func_632() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %801 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %802 = %796.2;
  %803 = cos(%799) /* ty=Tensor[(8, 11, 13), float64] */;
  %804 = %800.1;
  %805 = %801.1;
  (%802, %803, %804, %805)
}

def @func_17122() -> Tensor[(8, 11, 13), int8] {
  %806 = @func_16563() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %806.1
}

def @func_2956() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %807 = @func_2646() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */;
  %808 = @func_2525() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %809 = %807.1;
  %810 = %808.0;
  %811 = @func_2759() /* ty=Tensor[(8, 11, 13), int8] */;
  (%809, %810, %811)
}

def @func_15886(%var_15829: Tensor[(11, 8, 5), int16], %var_15843: Tensor[(11, 8, 5), int8]) -> (Tensor[(11, 8, 5), float64], Tensor[(11, 8, 5), float32], Tensor[(8, 11, 13), int8]) {
  %812 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 8, 5), int16] */, dtype="float32") /* ty=Tensor[(11, 8, 5), float32] */;
  %813 = asinh(%812) /* ty=Tensor[(11, 8, 5), float32] */;
  %814 = cast(%var_15829, dtype="int16") /* ty=Tensor[(11, 8, 5), int16] */;
  %815 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(11, 8, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %816 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 8, 5), int16] */, dtype="int16") /* ty=Tensor[(11, 8, 5), int16] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %818 = bitwise_or(%816, %817) /* ty=Tensor[(11, 8, 5), int16] */;
  %819 = cast(%818, dtype="int8") /* ty=Tensor[(11, 8, 5), int8] */;
  %820 = shape_of(%813, dtype="int32") /* ty=Tensor[(3), int32] */;
  %821 = cast(%813, dtype="int8") /* ty=Tensor[(11, 8, 5), int8] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %823 = bitwise_and(%821, %822) /* ty=Tensor[(11, 8, 5), int8] */;
  %824 = cast(%var_15843, dtype="float64") /* ty=Tensor[(11, 8, 5), float64] */;
  %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%823, dtype="float64") /* ty=Tensor[(11, 8, 5), float64] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %828 = cast(%var_15829, dtype="float32") /* ty=Tensor[(11, 8, 5), float32] */;
  %829 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %830 = divide(%826, %827) /* ty=Tensor[(11, 8, 5), float64] */;
  %831 = log10(%828) /* ty=Tensor[(11, 8, 5), float32] */;
  %832 = %829.0;
  (%830, %831, %832)
}

def @func_3891(%var_3888: Tensor[(1, 256), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(1, 256), int64]) {
  %833 = @func_2283() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1664), float64]) */;
  %834 = cast(%var_3888, dtype="int64") /* ty=Tensor[(1, 256), int64] */;
  %835 = cast(%var_3888, dtype="bool") /* ty=Tensor[(1, 256), bool] */;
  %836 = reshape(%834, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), int64] */;
  %837 = reshape(%835, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), bool] */;
  %838 = @func_1615(%836, %837) /* ty=(Tensor[(8, 8, 4), uint32],) */;
  %839 = %833.0;
  %840 = %838.0;
  (%839, %840, %var_3888)
}

def @func_640() -> Tensor[(8, 11, 13), int8] {
  %841 = @func_239() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %841.1
}

def @func_2236() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %842 = @func_1250() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %843 = @func_1706() /* ty=Tensor[(8, 11, 13), int8] */;
  %844 = %842.1;
  (%843, %844)
}

def @func_15604() -> Tensor[(8, 11, 13), int8] {
  %845 = @func_14824() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %845.2
}

def @func_17113() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  %846 = @func_2525() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %847 = @func_9657() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %848 = @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %849 = %846.0;
  %850 = @func_14995() /* ty=Tensor[(8, 11, 13), uint32] */;
  %851 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
  %852 = %847.4;
  %853 = %848.1;
  (%849, %850, %851, %852, %853)
}

def @func_12072() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) {
  %854 = @func_2490() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %855 = @func_6604() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32]) */;
  %856 = %854.2;
  %857 = %855.3;
  (%856, %857)
}

def @func_2283() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1664), float64]) {
  %858 = @func_1295() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %859 = @func_2077() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %860 = @func_2077() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %861 = %858.0;
  %862 = %859.1;
  %863 = %860.1;
  (%861, %862, %863)
}

def @func_15448() -> Tensor[(8, 11, 13), int8] {
  %864 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
  %864.1
}

def @func_15501() -> (Tensor[(8, 11, 13), float32],) {
  %865 = @func_9676() /* ty=Tensor[(8, 11, 13), float32] */;
  (%865,)
}

def @func_16526() -> (Tensor[(8, 11, 13), int8],) {
  %866 = @func_2856() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %867 = %866.0;
  (%867,)
}

def @func_17604() -> Tensor[(8, 11, 13), uint32] {
  @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_9823(%var_9820: Tensor[(4, 64), int64]) -> (Tensor[(13, 6, 8), uint64], Tensor[(8, 11, 13), int8], Tensor[(4, 64), int64]) {
  %868 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 6, 8), uint64] */, dtype="uint64") /* ty=Tensor[(13, 6, 8), uint64] */;
  %869 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(13, 6, 8), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %870 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 6, 8), uint64] */, dtype="uint64") /* ty=Tensor[(13, 6, 8), uint64] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %872 = cast(%var_9820, dtype="int64") /* ty=Tensor[(4, 64), int64] */;
  %873 = reshape(%872, newshape=[4, 64]) /* ty=Tensor[(4, 64), int64] */;
  %874 = @func_8029(%873) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1, 256), int64], Tensor[(4, 64), int64]) */;
  %875 = left_shift(%870, %871) /* ty=Tensor[(13, 6, 8), uint64] */;
  %876 = %874.0;
  (%875, %876, %var_9820)
}

def @func_5742() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %877 = @func_2956() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %878 = @func_3264() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %879 = @func_4794() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %880 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %881 = @func_1467() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %882 = @func_1250() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %883 = %877.1;
  %884 = %878.1;
  %885 = %879.0;
  %886 = %880.1;
  %887 = %881.1;
  %888 = %882.2;
  (%883, %884, %885, %886, %887, %888)
}

def @func_6648(%var_6643: Tensor[(10, 10, 8), bool], %var_6644: Tensor[(10, 10, 8), bool]) -> Tensor[(10, 10, 8), bool] {
  %889 = cast(%var_6644, dtype="bool") /* ty=Tensor[(10, 10, 8), bool] */;
  %890 = shape_of(%var_6643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %891 = cast(%var_6643, dtype="bool") /* ty=Tensor[(10, 10, 8), bool] */;
  %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%891, %892) /* ty=Tensor[(10, 10, 8), bool] */
}

def @func_17940() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8]) {
  %893 = @func_14917() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %894 = @func_13864() /* ty=(Tensor[(8, 11, 13), float64],) */;
  %895 = %893.0;
  %896 = %894.0;
  %897 = @func_15448() /* ty=Tensor[(8, 11, 13), int8] */;
  (%895, %896, %897)
}

def @func_18068() -> Tensor[(8, 11, 13), float32] {
  %898 = @func_15501() /* ty=(Tensor[(8, 11, 13), float32],) */;
  %898.0
}

def @func_11065() -> (Tensor[(8, 11, 13), int8],) {
  %899 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %900 = %899.0;
  (%900,)
}

def @func_2759() -> Tensor[(8, 11, 13), int8] {
  %901 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %901.1
}

def @func_16270() -> (Tensor[(8, 11, 13), int8],) {
  %902 = @func_3640() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %903 = %902.0;
  (%903,)
}

def @func_3782() -> Tensor[(8, 11, 13), uint32] {
  @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_6349() -> Tensor[(8, 11, 13), float32] {
  %904 = @func_4794() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %904.2
}

def @func_6229() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %905 = @func_2283() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1664), float64]) */;
  %906 = %905.0;
  %907 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
  (%906, %907)
}

def @func_11558(%var_11540: Tensor[(12, 14, 4), bool], %var_11541: Tensor[(12, 14, 4), bool]) -> (Tensor[(12, 14, 4), float32],) {
  %908 = cast(%var_11541, dtype="bool") /* ty=Tensor[(12, 14, 4), bool] */;
  %909 = shape_of(%var_11540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %910 = cast(%var_11540, dtype="bool") /* ty=Tensor[(12, 14, 4), bool] */;
  %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %912 = logical_and(%910, %911) /* ty=Tensor[(12, 14, 4), bool] */;
  %913 = cast(%912, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
  %914 = sin(%913) /* ty=Tensor[(12, 14, 4), float32] */;
  (%914,)
}

def @func_8727() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %915 = @func_1637() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %916 = @func_5867() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %917 = %915.0;
  %918 = %916.0;
  (%917, %918)
}

def @func_11931() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %919 = @func_1467() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %920 = @func_1467() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %921 = %919.1;
  %922 = %920.0;
  (%921, %922)
}

def @func_7983() -> Tensor[(8, 11, 13), int8] {
  %923 = @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %923.0
}

def @func_7492() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %924 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %925 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %926 = @func_1637() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %927 = %924.3;
  %928 = %925.3;
  %929 = %926.0;
  (%927, %928, %929)
}

def @func_334() -> (Tensor[(8, 11, 13), int8],) {
  %930 = @func_179() /* ty=Tensor[(8, 11, 13), int8] */;
  (%930,)
}

def @func_1417() -> Tensor[(8, 11, 13), uint32] {
  %931 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %932 = %931.1;
  %933 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %934 = %933.0;
  %935 = cast(%934, dtype="uint32") /* ty=Tensor[(8, 11, 13), uint32] */;
  %936 = shape_of(%932, dtype="int32") /* ty=Tensor[(3), int32] */;
  %937 = cast(%932, dtype="uint32") /* ty=Tensor[(8, 11, 13), uint32] */;
  %938 = dyn.reshape(%935, %936, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_and(%937, %938) /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_14917() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
  %939 = @func_3188() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */;
  %940 = @func_4905() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %941 = @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %942 = %939.2;
  %943 = %940.0;
  %944 = %941.0;
  (%942, %943, %944)
}

def @func_8605() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %945 = @func_2525() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %946 = @func_6687() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %947 = %945.0;
  %948 = %946.0;
  (%947, %948)
}

def @func_9533() -> (Tensor[(8, 11, 13), int8],) {
  %949 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %950 = %949.1;
  (%950,)
}

def @func_13732() -> (Tensor[(8, 11, 13), int8],) {
  %951 = @func_7855() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %952 = %951.1;
  (%952,)
}

def @func_7000() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) {
  %953 = @func_2856() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %954 = @func_1295() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %955 = %953.2;
  %956 = %954.0;
  (%955, %956)
}

def @func_17995() -> (Tensor[(8, 11, 13), float64],) {
  %957 = @func_10181() /* ty=Tensor[(8, 11, 13), float64] */;
  (%957,)
}

def @func_13895() -> Tensor[(8, 11, 13), float32] {
  @func_3604() /* ty=Tensor[(8, 11, 13), float32] */
}

def @func_1088() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) {
  %958 = @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %959 = @func_751() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %960 = %959.0;
  %961 = cast(%960, dtype="float32") /* ty=Tensor[(8, 11, 13), float32] */;
  %962 = rsqrt(%961) /* ty=Tensor[(8, 11, 13), float32] */;
  %963 = cast(%962, dtype="float32") /* ty=Tensor[(8, 11, 13), float32] */;
  %964 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %965 = %958.0;
  %966 = erf(%963) /* ty=Tensor[(8, 11, 13), float32] */;
  %967 = %964.0;
  (%965, %966, %967)
}

def @func_7722() -> Tensor[(8, 11, 13), int8] {
  %968 = @func_6631() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %968.0
}

def @func_8340() -> (Tensor[(8, 11, 13), int8],) {
  %969 = @func_4905() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %970 = %969.0;
  (%970,)
}

def @func_6851(%var_6834: Tensor[(3, 12, 10), uint8]) -> Tensor[(3, 12, 10), uint8] {
  %971 = cast(meta[relay.Constant][30] /* ty=Tensor[(3, 12, 10), uint8] */, dtype="uint8") /* ty=Tensor[(3, 12, 10), uint8] */;
  %972 = shape_of(%var_6834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %973 = cast(%var_6834, dtype="uint8") /* ty=Tensor[(3, 12, 10), uint8] */;
  %974 = dyn.reshape(%971, %972, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%973, %974) /* ty=Tensor[(3, 12, 10), uint8] */
}

def @func_6213() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(4, 64), int64]) {
  %975 = @func_1352() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %976 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 64), int64] */, dtype="int64") /* ty=Tensor[(4, 64), int64] */;
  %977 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 64), int64] */, dtype="bool") /* ty=Tensor[(4, 64), bool] */;
  %978 = reshape(%976, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), int64] */;
  %979 = reshape(%977, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), bool] */;
  %980 = @func_1615(%978, %979) /* ty=(Tensor[(8, 8, 4), uint32],) */;
  %981 = %975.1;
  %982 = %980.0;
  (%981, %982, meta[relay.Constant][31] /* ty=Tensor[(4, 64), int64] */)
}

def @func_4905() -> (Tensor[(8, 11, 13), int8],) {
  %983 = @func_4209() /* ty=Tensor[(8, 11, 13), int8] */;
  (%983,)
}

def @func_4163(%var_4126: Tensor[(15, 10, 6), uint8], %var_4151: Tensor[(1144, 1), int8]) -> (Tensor[(15, 10, 6), uint8], Tensor[(6, 3, 15), int64], Tensor[(15, 10, 6), float32], Tensor[(8, 11, 13), bool], Tensor[(1144, 1), int8], Tensor[(8, 11, 13), int8]) {
  %984 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 10, 6), uint8] */, dtype="uint8") /* ty=Tensor[(15, 10, 6), uint8] */;
  %985 = shape_of(%var_4126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %986 = cast(%var_4126, dtype="uint8") /* ty=Tensor[(15, 10, 6), uint8] */;
  %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %988 = @func_3085() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) */;
  %989 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 10, 6), uint8] */, dtype="float64") /* ty=Tensor[(15, 10, 6), float64] */;
  %990 = atan(%989) /* ty=Tensor[(15, 10, 6), float64] */;
  %991 = cast(%990, dtype="float32") /* ty=Tensor[(15, 10, 6), float32] */;
  %992 = cast(%var_4151, dtype="int8") /* ty=Tensor[(1144, 1), int8] */;
  %993 = reshape(%992, newshape=[8, 11, 13]) /* ty=Tensor[(8, 11, 13), int8] */;
  %994 = @func_1513(%993) /* ty=(Tensor[(8, 11, 13), bool],) */;
  %995 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %996 = right_shift(%986, %987) /* ty=Tensor[(15, 10, 6), uint8] */;
  %997 = %988.2;
  %998 = sin(%991) /* ty=Tensor[(15, 10, 6), float32] */;
  %999 = %994.0;
  %1000 = %995.0;
  (%996, %997, %998, %999, %var_4151, %1000)
}

def @func_12199(%var_12181: Tensor[(2, 7, 12), float64]) -> (Tensor[(2, 7, 12), float64], Tensor[(8, 11, 13), int8]) {
  %1001 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 7, 12), float64] */, dtype="float64") /* ty=Tensor[(2, 7, 12), float64] */;
  %1002 = shape_of(%var_12181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1003 = cast(%var_12181, dtype="float64") /* ty=Tensor[(2, 7, 12), float64] */;
  %1004 = dyn.reshape(%1001, %1002, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1005 = @func_7492() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1006 = floor_mod(%1003, %1004) /* ty=Tensor[(2, 7, 12), float64] */;
  %1007 = %1005.2;
  (%1006, %1007)
}

def @func_4209() -> Tensor[(8, 11, 13), int8] {
  %1008 = @func_1685() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1008.3
}

def @func_16563() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1009 = @func_3410() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1010 = %1009.1;
  %1011 = @func_15195() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1010, %1011)
}

def @func_1938() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8]) {
  %1012 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1013 = @func_632() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %1014 = @func_1250() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1015 = %1014.0;
  %1016 = cast(%1015, dtype="float32") /* ty=Tensor[(8, 11, 13), float32] */;
  %1017 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1018 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1019 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1020 = %1012.1;
  %1021 = %1013.0;
  %1022 = acosh(%1016) /* ty=Tensor[(8, 11, 13), float32] */;
  %1023 = %1017.1;
  %1024 = %1018.3;
  %1025 = %1019.0;
  (%1020, %1021, %1022, %1023, %1024, %1025)
}

def @func_4445() -> (Tensor[(8, 11, 13), int8],) {
  %1026 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1027 = %1026.1;
  (%1027,)
}

def @func_539() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1028 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1029 = @func_423() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1030 = %1028.1;
  %1031 = @func_179() /* ty=Tensor[(8, 11, 13), int8] */;
  %1032 = %1029.0;
  (%1030, %1031, %1032)
}

def @func_5867() -> (Tensor[(8, 11, 13), int8],) {
  %1033 = @func_2668() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1033,)
}

def @func_6897() -> Tensor[(8, 11, 13), int8] {
  %1034 = @func_3507() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1034.0
}

def @func_632() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) {
  %1035 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1036 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
  %1037 = @func_179() /* ty=Tensor[(8, 11, 13), int8] */;
  %1038 = cast(%1037, dtype="float32") /* ty=Tensor[(8, 11, 13), float32] */;
  %1039 = shape_of(%1036, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1040 = cast(%1036, dtype="float32") /* ty=Tensor[(8, 11, 13), float32] */;
  %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1042 = %1035.1;
  %1043 = divide(%1040, %1041) /* ty=Tensor[(8, 11, 13), float32] */;
  (%1042, %1043)
}

def @func_12649() -> Tensor[(8, 11, 13), uint32] {
  %1044 = @func_2646() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */;
  %1044.1
}

def @func_3604() -> Tensor[(8, 11, 13), float32] {
  %1045 = @func_2421() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %1045.1
}

def @func_15930() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1046 = @func_3640() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1047 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1048 = @func_9334() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1049 = %1046.0;
  %1050 = %1047.0;
  %1051 = %1048.0;
  (%1049, %1050, %1051)
}

def @func_13232() -> (Tensor[(8, 11, 13), int8], Tensor[(10, 8, 15), float64]) {
  %1052 = @func_11825() /* ty=(Tensor[(10, 8, 15), float64],) */;
  %1053 = @func_10547() /* ty=Tensor[(8, 11, 13), int8] */;
  %1054 = %1052.0;
  (%1053, %1054)
}

def @func_2646() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) {
  %1055 = @func_1295() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1056 = %1055.0;
  %1057 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
  (%1056, %1057)
}

def @func_3880(%var_3857: Tensor[(4, 5, 8), float64], %var_3858: Tensor[(4, 5, 8), float64]) -> (Tensor[(4, 5, 8), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1058 = cast(%var_3858, dtype="float64") /* ty=Tensor[(4, 5, 8), float64] */;
  %1059 = shape_of(%var_3857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1060 = cast(%var_3857, dtype="float64") /* ty=Tensor[(4, 5, 8), float64] */;
  %1061 = dyn.reshape(%1058, %1059, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1062 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1063 = divide(%1060, %1061) /* ty=Tensor[(4, 5, 8), float64] */;
  %1064 = @func_2695() /* ty=Tensor[(8, 11, 13), int8] */;
  %1065 = %1062.0;
  (%1063, %1064, %1065)
}

def @func_9334() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1066 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
  %1067 = @func_3507() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1068 = %1066.1;
  %1069 = %1067.0;
  (%1068, %1069)
}

def @func_9970(%var_9964: Tensor[(12, 5, 7), float64]) -> (Tensor[(12, 5, 7), float64], Tensor[(12, 5, 7), float64]) {
  %1070 = cast(%var_9964, dtype="float64") /* ty=Tensor[(12, 5, 7), float64] */;
  %1071 = cast(%var_9964, dtype="float64") /* ty=Tensor[(12, 5, 7), float64] */;
  %1072 = atan(%1070) /* ty=Tensor[(12, 5, 7), float64] */;
  %1073 = asinh(%1071) /* ty=Tensor[(12, 5, 7), float64] */;
  (%1072, %1073)
}

def @func_1806() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) {
  %1074 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
  %1075 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
  (%1074, %1075)
}

def @func_13562() -> (Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1076 = @func_11345() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(1664), bool], Tensor[(1664), float32]) */;
  %1077 = @func_6687() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1078 = @func_8727() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1079 = %1076.0;
  %1080 = %1077.0;
  %1081 = %1078.0;
  (%1079, %1080, %1081)
}

def @func_12045(%var_12023: Tensor[(8, 16, 7), float32], %var_12024: Tensor[(8, 16, 7), float32]) -> (Tensor[(8, 16, 7), float32],) {
  %1082 = cast(%var_12024, dtype="float32") /* ty=Tensor[(8, 16, 7), float32] */;
  %1083 = shape_of(%var_12023, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1084 = cast(%var_12023, dtype="float32") /* ty=Tensor[(8, 16, 7), float32] */;
  %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1086 = floor_divide(%1084, %1085) /* ty=Tensor[(8, 16, 7), float32] */;
  (%1086,)
}

def @func_16897() -> Tensor[(8, 11, 13), int8] {
  %1087 = @func_9289() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1087.1
}

def @func_7943() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(270), int64]) {
  %1088 = @func_6687() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1089 = @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1090 = @func_3085() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) */;
  %1091 = %1088.0;
  %1092 = %1089.2;
  %1093 = %1090.3;
  (%1091, %1092, %1093)
}

def @func_3264() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1094 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1095 = @func_632() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %1096 = @func_1088() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %1097 = %1094.0;
  %1098 = %1095.0;
  %1099 = %1096.2;
  (%1097, %1098, %1099)
}

def @func_15073() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(588), int16], Tensor[(150, 2), int32], Tensor[(8, 11, 13), int8]) {
  %1100 = @func_4945() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1101 = @func_13834() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1102 = cast(meta[relay.Constant][34] /* ty=Tensor[(150, 2), int32] */, dtype="int32") /* ty=Tensor[(150, 2), int32] */;
  %1103 = reshape(%1102, newshape=[5, 4, 15]) /* ty=Tensor[(5, 4, 15), int32] */;
  %1104 = @func_12969(%1103) /* ty=(Tensor[(5, 4, 15), int32], Tensor[(14, 7, 6), int16], Tensor[(588), int16]) */;
  %1105 = @func_6145() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1, 750), float64], Tensor[(8, 11, 13), int8]) */;
  %1106 = @func_2668() /* ty=Tensor[(8, 11, 13), int8] */;
  %1107 = %1100.0;
  %1108 = %1101.0;
  %1109 = %1104.2;
  %1110 = %1105.2;
  (%1106, %1107, %1108, %1109, meta[relay.Constant][34] /* ty=Tensor[(150, 2), int32] */, %1110)
}

def @func_5541() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) {
  %1111 = @func_2856() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %1112 = @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1113 = %1111.2;
  %1114 = %1112.2;
  (%1113, %1114)
}

def @func_11993() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(256), int64]) {
  %1115 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1116 = cast(meta[relay.Constant][35] /* ty=Tensor[(256), int64] */, dtype="int64") /* ty=Tensor[(256), int64] */;
  %1117 = reshape(%1116, newshape=[4, 64]) /* ty=Tensor[(4, 64), int64] */;
  %1118 = @func_8029(%1117) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1, 256), int64], Tensor[(4, 64), int64]) */;
  %1119 = %1115.0;
  %1120 = %1118.0;
  (%1119, %1120, meta[relay.Constant][35] /* ty=Tensor[(256), int64] */)
}

def @func_6604() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32]) {
  %1121 = @func_3754() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1122 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1123 = @func_3361() /* ty=(Tensor[(8, 11, 13), float64],) */;
  %1124 = %1121.1;
  %1125 = @func_2443() /* ty=Tensor[(8, 11, 13), int8] */;
  %1126 = %1122.1;
  %1127 = %1123.0;
  %1128 = @func_3604() /* ty=Tensor[(8, 11, 13), float32] */;
  (%1124, %1125, %1126, %1127, %1128)
}

def @func_3754() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1129 = @func_1295() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1130 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1131 = @func_632() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %1132 = %1129.0;
  %1133 = %1130.1;
  %1134 = %1131.0;
  (%1132, %1133, %1134)
}

def @func_3085() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) {
  %1135 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1136 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1137 = cast(meta[relay.Constant][36] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %1138 = cast(meta[relay.Constant][36] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %1139 = reshape(%1137, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), int64] */;
  %1140 = reshape(%1138, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), int64] */;
  %1141 = @func_1171(%1139, %1140) /* ty=(Tensor[(6, 3, 15), int64],) */;
  %1142 = %1135.0;
  %1143 = %1136.0;
  %1144 = %1141.0;
  (%1142, %1143, %1144, meta[relay.Constant][36] /* ty=Tensor[(270), int64] */)
}

def @func_18669() -> Tensor[(8, 11, 13), int8] {
  %1145 = @func_17290() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1145.0
}

def @func_16997() -> (Tensor[(8, 11, 13), int8],) {
  %1146 = @func_9960() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1147 = %1146.1;
  (%1147,)
}

def @func_19057(%var_19051: uint16, %var_19052: Tensor[(2016), uint16]) -> (Tensor[(8, 11, 13), int8], Tensor[(14, 9, 16), uint16], uint16, Tensor[(2016), uint16]) {
  %1148 = @func_3545() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1149 = cast(%var_19051, dtype="uint16") /* ty=uint16 */;
  %1150 = cast(%var_19052, dtype="uint16") /* ty=Tensor[(2016), uint16] */;
  %1151 = reshape(%1149, newshape=[]) /* ty=uint16 */;
  %1152 = reshape(%1150, newshape=[14, 9, 16]) /* ty=Tensor[(14, 9, 16), uint16] */;
  %1153 = @func_8513(%1151, %1152) /* ty=(Tensor[(14, 9, 16), uint16], Tensor[(14, 9, 16), float32], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(160), float64]) */;
  %1154 = %1148.0;
  %1155 = %1153.0;
  (%1154, %1155, %var_19051, %var_19052)
}

def @func_6754() -> (Tensor[(8, 11, 13), int8],) {
  %1156 = @func_6736() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1157 = %1156.0;
  (%1157,)
}

def @func_6287(%var_6254: Tensor[(6, 7, 2), float32]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(6, 7, 2), bool], Tensor[(8, 11, 13), int8]) {
  %1158 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1159 = cast(%var_6254, dtype="float32") /* ty=Tensor[(6, 7, 2), float32] */;
  %1160 = cos(%1159) /* ty=Tensor[(6, 7, 2), float32] */;
  %1161 = cast(%var_6254, dtype="bool") /* ty=Tensor[(6, 7, 2), bool] */;
  %1162 = shape_of(%1160, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1163 = cast(%1160, dtype="bool") /* ty=Tensor[(6, 7, 2), bool] */;
  %1164 = dyn.reshape(%1161, %1162, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1165 = @func_5098() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1166 = %1158.2;
  %1167 = @func_3604() /* ty=Tensor[(8, 11, 13), float32] */;
  %1168 = greater_equal(%1163, %1164) /* ty=Tensor[(6, 7, 2), bool] */;
  %1169 = %1165.0;
  (%1166, %1167, %1168, %1169)
}

def @func_7906() -> (Tensor[(1664), float64],) {
  %1170 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1171 = %1170.3;
  (%1171,)
}

def @func_4462() -> (Tensor[(8, 11, 13), int8],) {
  %1172 = @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1173 = %1172.1;
  (%1173,)
}

def @func_16496() -> (Tensor[(8, 11, 13), int8],) {
  %1174 = @func_2384() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1175 = %1174.0;
  (%1175,)
}

def @func_5254(%var_5231: int64) -> (Tensor[(8, 11, 12), float32],) {
  %1176 = cast(%var_5231, dtype="int64") /* ty=int64 */;
  %1177 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 11, 12), int64] */, dtype="int64") /* ty=Tensor[(8, 11, 12), int64] */;
  %1178 = minimum(%1176, %1177) /* ty=Tensor[(8, 11, 12), int64] */;
  %1179 = cast(%1178, dtype="float32") /* ty=Tensor[(8, 11, 12), float32] */;
  %1180 = cosh(%1179) /* ty=Tensor[(8, 11, 12), float32] */;
  (%1180,)
}

def @func_7184(%var_7175: Tensor[(10, 8, 15), float64]) -> Tensor[(10, 8, 15), float32] {
  %1181 = @func_7038() /* ty=Tensor[(10, 8, 15), float64] */;
  %1182 = cast(%var_7175, dtype="float32") /* ty=Tensor[(10, 8, 15), float32] */;
  %1183 = shape_of(%1181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1184 = cast(%1181, dtype="float32") /* ty=Tensor[(10, 8, 15), float32] */;
  %1185 = dyn.reshape(%1182, %1183, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  multiply(%1184, %1185) /* ty=Tensor[(10, 8, 15), float32] */
}

def @func_6249() -> Tensor[(8, 11, 13), int8] {
  %1186 = @func_1295() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1186.0
}

def @func_9149() -> Tensor[(8, 11, 13), float64] {
  %1187 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %1187.0
}

def @func_16218() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1188 = @func_8424() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1189 = @func_6631() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1190 = @func_10941() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1191 = %1188.0;
  %1192 = %1189.0;
  %1193 = %1190.0;
  (%1191, %1192, %1193)
}

def @func_16843() -> (Tensor[(8, 11, 13), int8],) {
  %1194 = @func_8659() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1195 = %1194.0;
  (%1195,)
}

def @func_9468() -> Tensor[(8, 11, 13), int8] {
  %1196 = @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1196.1
}

def @func_2746(%var_2700: Tensor[(13, 9, 1), float64]) -> (Tensor[(13, 9, 1), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1197 = cast(%var_2700, dtype="float64") /* ty=Tensor[(13, 9, 1), float64] */;
  %1198 = @func_2490() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1199 = @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1200 = asinh(%1197) /* ty=Tensor[(13, 9, 1), float64] */;
  %1201 = %1198.2;
  %1202 = @func_2695() /* ty=Tensor[(8, 11, 13), int8] */;
  %1203 = %1199.1;
  (%1200, %1201, %1202, %1203)
}

def @func_6631() -> (Tensor[(8, 11, 13), int8],) {
  %1204 = @func_3315() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1204,)
}

def @func_17278() -> (Tensor[(8, 11, 13), int8], Tensor[(12, 14, 4), float32], Tensor[(672, 1), bool]) {
  %1205 = cast(meta[relay.Constant][38] /* ty=Tensor[(672, 1), bool] */, dtype="bool") /* ty=Tensor[(672, 1), bool] */;
  %1206 = cast(meta[relay.Constant][38] /* ty=Tensor[(672, 1), bool] */, dtype="bool") /* ty=Tensor[(672, 1), bool] */;
  %1207 = reshape(%1205, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), bool] */;
  %1208 = reshape(%1206, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), bool] */;
  %1209 = @func_11558(%1207, %1208) /* ty=(Tensor[(12, 14, 4), float32],) */;
  %1210 = @func_3139() /* ty=Tensor[(8, 11, 13), int8] */;
  %1211 = %1209.0;
  (%1210, %1211, meta[relay.Constant][38] /* ty=Tensor[(672, 1), bool] */)
}

def @func_12332(%var_12328: Tensor[(1, 11, 4), float32]) -> (Tensor[(1, 11, 4), float32],) {
  %1212 = cast(%var_12328, dtype="float32") /* ty=Tensor[(1, 11, 4), float32] */;
  %1213 = log2(%1212) /* ty=Tensor[(1, 11, 4), float32] */;
  (%1213,)
}

def @func_751() -> (Tensor[(8, 11, 13), int8],) {
  %1214 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1215 = %1214.2;
  (%1215,)
}

def @func_7602() -> (Tensor[(8, 11, 13), int8],) {
  %1216 = @func_3821() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1217 = %1216.0;
  (%1217,)
}

def @func_11825() -> (Tensor[(10, 8, 15), float64],) {
  %1218 = @func_7038() /* ty=Tensor[(10, 8, 15), float64] */;
  (%1218,)
}

def @func_19444(%var_19440: Tensor[(5, 8, 12), float64]) -> Tensor[(5, 8, 12), float64] {
  %1219 = cast(%var_19440, dtype="float64") /* ty=Tensor[(5, 8, 12), float64] */;
  asinh(%1219) /* ty=Tensor[(5, 8, 12), float64] */
}

def @func_179() -> Tensor[(8, 11, 13), int8] {
  %1220 = cast(meta[relay.Constant][40] /* ty=Tensor[(8, 11, 13), int8] */, dtype="int8") /* ty=Tensor[(8, 11, 13), int8] */;
  %1221 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(8, 11, 13), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1222 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 11, 13), int8] */, dtype="int8") /* ty=Tensor[(8, 11, 13), int8] */;
  %1223 = dyn.reshape(%1220, %1221, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  add(%1222, %1223) /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_8684() -> (Tensor[(8, 11, 13), int8],) {
  %1224 = @func_4007() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1225 = %1224.0;
  (%1225,)
}

def @func_7276() -> (Tensor[(8, 11, 13), int8],) {
  %1226 = @func_4403() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1227 = %1226.0;
  (%1227,)
}

def @func_510() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1228 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1229 = @func_179() /* ty=Tensor[(8, 11, 13), int8] */;
  %1230 = %1228.0;
  (%1229, %1230)
}

def @func_1295() -> (Tensor[(8, 11, 13), int8],) {
  %1231 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1232 = %1231.0;
  (%1232,)
}

def @func_4794() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1233 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1234 = @func_1352() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1235 = @func_1938() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8]) */;
  %1236 = @func_3264() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1237 = %1233.2;
  %1238 = %1234.0;
  %1239 = %1235.2;
  %1240 = %1236.0;
  %1241 = @func_2668() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1237, %1238, %1239, %1240, %1241)
}

def @func_5491() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float32]) {
  %1242 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
  %1243 = @func_2283() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1664), float64]) */;
  %1244 = %1243.1;
  %1245 = cast(%1244, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %1246 = %1242.1;
  %1247 = acos(%1245) /* ty=Tensor[(1664), float32] */;
  (%1246, %1247)
}

def @func_8513(%var_8469: uint16, %var_8470: Tensor[(14, 9, 16), uint16]) -> (Tensor[(14, 9, 16), uint16], Tensor[(14, 9, 16), float32], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(160), float64]) {
  %1248 = cast(%var_8469, dtype="uint16") /* ty=uint16 */;
  %1249 = cast(%var_8470, dtype="uint16") /* ty=Tensor[(14, 9, 16), uint16] */;
  %1250 = cast(%var_8470, dtype="uint32") /* ty=Tensor[(14, 9, 16), uint32] */;
  %1251 = cast(%var_8469, dtype="uint32") /* ty=uint32 */;
  %1252 = minimum(%1250, %1251) /* ty=Tensor[(14, 9, 16), uint32] */;
  %1253 = cast(%1252, dtype="float32") /* ty=Tensor[(14, 9, 16), float32] */;
  %1254 = @func_7077() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), uint32]) */;
  %1255 = cast(meta[relay.Constant][41] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %1256 = cast(meta[relay.Constant][41] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %1257 = reshape(%1255, newshape=[4, 5, 8]) /* ty=Tensor[(4, 5, 8), float64] */;
  %1258 = reshape(%1256, newshape=[4, 5, 8]) /* ty=Tensor[(4, 5, 8), float64] */;
  %1259 = @func_3880(%1257, %1258) /* ty=(Tensor[(4, 5, 8), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1260 = multiply(%1248, %1249) /* ty=Tensor[(14, 9, 16), uint16] */;
  %1261 = atan(%1253) /* ty=Tensor[(14, 9, 16), float32] */;
  %1262 = %1254.2;
  %1263 = %1259.1;
  (%1260, %1261, %1262, %1263, meta[relay.Constant][41] /* ty=Tensor[(160), float64] */)
}

def @func_16299() -> Tensor[(8, 11, 13), int8] {
  %1264 = @func_8424() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1264.1
}

def @func_9179() -> (Tensor[(8, 11, 13), float32],) {
  %1265 = @func_5229() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), uint32]) */;
  %1266 = %1265.0;
  (%1266,)
}

def @func_17837() -> (Tensor[(8, 11, 13), int8],) {
  %1267 = @func_6754() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1268 = %1267.0;
  (%1268,)
}

def @func_9657() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1269 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1270 = @func_1938() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8]) */;
  %1271 = @func_3640() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1272 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1273 = %1269.1;
  %1274 = @func_9149() /* ty=Tensor[(8, 11, 13), float64] */;
  %1275 = %1270.5;
  %1276 = @func_3004() /* ty=Tensor[(8, 11, 13), int8] */;
  %1277 = @func_3782() /* ty=Tensor[(8, 11, 13), uint32] */;
  %1278 = %1271.0;
  %1279 = %1272.0;
  (%1273, %1274, %1275, %1276, %1277, %1278, %1279)
}

def @func_10286() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1280 = @func_6604() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32]) */;
  %1281 = @func_3640() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1282 = @func_7602() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1283 = %1280.1;
  %1284 = %1281.0;
  %1285 = %1282.0;
  %1286 = @func_640() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1283, %1284, %1285, %1286)
}

def @func_7162(%var_7107: Tensor[(10, 13, 3), float32], %var_7108: Tensor[(10, 13, 3), float32]) -> (Tensor[(10, 13, 3), float32], Tensor[(8, 11, 13), uint32]) {
  %1287 = cast(%var_7108, dtype="float32") /* ty=Tensor[(10, 13, 3), float32] */;
  %1288 = shape_of(%var_7107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1289 = cast(%var_7107, dtype="float32") /* ty=Tensor[(10, 13, 3), float32] */;
  %1290 = dyn.reshape(%1287, %1288, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1291 = divide(%1289, %1290) /* ty=Tensor[(10, 13, 3), float32] */;
  %1292 = @func_3782() /* ty=Tensor[(8, 11, 13), uint32] */;
  (%1291, %1292)
}

def @func_10181() -> Tensor[(8, 11, 13), float64] {
  %1293 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %1293.1
}

def @func_15562(%var_15528: Tensor[(1664), float64], %var_15535: Tensor[(44), float32]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1, 11, 4), float32], Tensor[(44), float32], Tensor[(8, 11, 13), int8], Tensor[(3, 12, 10), bool], Tensor[(8, 11, 13), int8]) {
  %1294 = @func_1685() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1295 = cast(%var_15528, dtype="float64") /* ty=Tensor[(1664), float64] */;
  %1296 = reshape(%1295, newshape=[1664]) /* ty=Tensor[(1664), float64] */;
  %1297 = @func_4369(%1296) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), uint64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1298 = cast(%var_15535, dtype="float32") /* ty=Tensor[(44), float32] */;
  %1299 = reshape(%1298, newshape=[1, 11, 4]) /* ty=Tensor[(1, 11, 4), float32] */;
  %1300 = @func_12332(%1299) /* ty=(Tensor[(1, 11, 4), float32],) */;
  %1301 = @func_3720() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */;
  %1302 = cast(meta[relay.Constant][42] /* ty=Tensor[(360), uint8] */, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %1303 = reshape(%1302, newshape=[3, 12, 10]) /* ty=Tensor[(3, 12, 10), uint8] */;
  %1304 = @func_6851(%1303) /* ty=Tensor[(3, 12, 10), uint8] */;
  %1305 = cast(meta[relay.Constant][42] /* ty=Tensor[(360), uint8] */, dtype="bool") /* ty=Tensor[(360), bool] */;
  %1306 = shape_of(%1304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1307 = cast(%1304, dtype="bool") /* ty=Tensor[(3, 12, 10), bool] */;
  %1308 = dyn.reshape(%1305, %1306, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1309 = %1294.1;
  %1310 = %1297.4;
  %1311 = %1300.0;
  %1312 = %1301.2;
  %1313 = logical_and(%1307, %1308) /* ty=Tensor[(3, 12, 10), bool] */;
  %1314 = @func_4209() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1309, %1310, %var_15528, %1311, %var_15535, %1312, %1313, %1314)
}

def @func_8083() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), float32]) {
  %1315 = @func_5670() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1316 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
  %1317 = %1315.1;
  (%1316, %1317)
}

def @func_13662() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1318 = @func_6518() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1319 = @func_1938() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8]) */;
  %1320 = @func_8424() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1321 = @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1322 = %1318.1;
  %1323 = %1319.4;
  %1324 = %1320.3;
  %1325 = %1321.1;
  (%1322, %1323, %1324, %1325)
}

def @func_2167() -> (Tensor[(8, 11, 13), int8],) {
  %1326 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1327 = %1326.0;
  (%1327,)
}

def @func_18238() -> (Tensor[(8, 11, 13), int8], Tensor[(90, 10), uint8], Tensor[(432), float64]) {
  %1328 = cast(meta[relay.Constant][43] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %1329 = reshape(%1328, newshape=[9, 16, 3]) /* ty=Tensor[(9, 16, 3), float64] */;
  %1330 = @func_13524(%1329) /* ty=(Tensor[(9, 16, 3), float64], Tensor[(900), uint8], Tensor[(90, 10), uint8]) */;
  %1331 = @func_9468() /* ty=Tensor[(8, 11, 13), int8] */;
  %1332 = %1330.2;
  (%1331, %1332, meta[relay.Constant][43] /* ty=Tensor[(432), float64] */)
}

def @func_5425(%var_5403: Tensor[(8, 11, 13), int8]) -> (Tensor[(8, 11, 13), bool], Tensor[(1664), float32], Tensor[(8, 11, 13), int8]) {
  %1333 = @func_2077() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1334 = %1333.0;
  %1335 = cast(%var_5403, dtype="bool") /* ty=Tensor[(8, 11, 13), bool] */;
  %1336 = shape_of(%1334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1337 = cast(%1334, dtype="bool") /* ty=Tensor[(8, 11, 13), bool] */;
  %1338 = dyn.reshape(%1335, %1336, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1339 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1340 = %1339.2;
  %1341 = cast(%1340, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %1342 = @func_239() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1343 = less_equal(%1337, %1338) /* ty=Tensor[(8, 11, 13), bool] */;
  %1344 = rsqrt(%1341) /* ty=Tensor[(1664), float32] */;
  %1345 = %1342.1;
  (%1343, %1344, %1345)
}

def @func_17878() -> (Tensor[(6, 9, 10), float32], Tensor[(8, 11, 13), int8], Tensor[(6, 9, 10), uint16]) {
  %1346 = cast(meta[relay.Constant][45] /* ty=Tensor[(6, 9, 10), float32] */, dtype="float32") /* ty=Tensor[(6, 9, 10), float32] */;
  %1347 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(6, 9, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1348 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 9, 10), float32] */, dtype="float32") /* ty=Tensor[(6, 9, 10), float32] */;
  %1349 = dyn.reshape(%1346, %1347, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1350 = @func_13662() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1351 = cast(meta[relay.Constant][45] /* ty=Tensor[(6, 9, 10), float32] */, dtype="uint16") /* ty=Tensor[(6, 9, 10), uint16] */;
  %1352 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(6, 9, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1353 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 9, 10), float32] */, dtype="uint16") /* ty=Tensor[(6, 9, 10), uint16] */;
  %1354 = dyn.reshape(%1351, %1352, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1355 = floor_divide(%1348, %1349) /* ty=Tensor[(6, 9, 10), float32] */;
  %1356 = %1350.3;
  %1357 = minimum(%1353, %1354) /* ty=Tensor[(6, 9, 10), uint16] */;
  (%1355, %1356, %1357)
}

def @func_5768() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), float64]) {
  %1358 = @func_5670() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1359 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
  %1360 = %1358.2;
  %1361 = %1359.2;
  %1362 = @func_3021() /* ty=Tensor[(8, 11, 13), float64] */;
  (%1360, %1361, %1362)
}

def @func_9138(%var_9120: Tensor[(14, 7, 6), int16], %var_9121: Tensor[(14, 7, 6), int16]) -> (Tensor[(14, 7, 6), int16], Tensor[(8, 11, 13), int8], Tensor[(900), uint8]) {
  %1363 = cast(%var_9121, dtype="int16") /* ty=Tensor[(14, 7, 6), int16] */;
  %1364 = shape_of(%var_9120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1365 = cast(%var_9120, dtype="int16") /* ty=Tensor[(14, 7, 6), int16] */;
  %1366 = dyn.reshape(%1363, %1364, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1367 = cast(meta[relay.Constant][46] /* ty=Tensor[(900), uint8] */, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %1368 = reshape(%1367, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %1369 = @func_6461(%1368) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(15, 10, 6), float32], Tensor[(900), uint8], Tensor[(8, 11, 13), int8]) */;
  %1370 = right_shift(%1365, %1366) /* ty=Tensor[(14, 7, 6), int16] */;
  %1371 = %1369.0;
  (%1370, %1371, meta[relay.Constant][46] /* ty=Tensor[(900), uint8] */)
}

def @func_10758() -> (Tensor[(8, 11, 13), int8], Tensor[(12, 5, 7), float64], Tensor[(420), float64]) {
  %1372 = @func_1352() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1373 = cast(meta[relay.Constant][47] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1374 = reshape(%1373, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
  %1375 = @func_9970(%1374) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(12, 5, 7), float64]) */;
  %1376 = %1372.0;
  %1377 = %1375.0;
  (%1376, %1377, meta[relay.Constant][47] /* ty=Tensor[(420), float64] */)
}

def @func_9289() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1378 = @func_3410() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1379 = @func_3545() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1380 = %1378.1;
  %1381 = %1379.0;
  (%1380, %1381)
}

def @func_3444() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1382 = @func_3004() /* ty=Tensor[(8, 11, 13), int8] */;
  %1383 = @func_640() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1382, %1383)
}

def @func_9981(%var_9978: Tensor[(13, 7, 1), float64]) -> (Tensor[(13, 7, 1), float64],) {
  %1384 = cast(%var_9978, dtype="float64") /* ty=Tensor[(13, 7, 1), float64] */;
  %1385 = log2(%1384) /* ty=Tensor[(13, 7, 1), float64] */;
  (%1385,)
}

def @func_13864() -> (Tensor[(8, 11, 13), float64],) {
  %1386 = @func_10181() /* ty=Tensor[(8, 11, 13), float64] */;
  (%1386,)
}

def @func_11684() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1387 = @func_4007() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1388 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1389 = @func_6349() /* ty=Tensor[(8, 11, 13), float32] */;
  %1390 = %1387.0;
  %1391 = %1388.2;
  (%1389, %1390, %1391)
}

def @func_14425() -> Tensor[(8, 11, 13), int8] {
  %1392 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1392.0
}

def @func_2421() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) {
  %1393 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1394 = @func_632() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %1395 = %1393.1;
  %1396 = %1394.1;
  (%1395, %1396)
}

def @func_15244() -> Tensor[(8, 11, 13), int8] {
  %1397 = @func_11289() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %1397.1
}

def @func_15195() -> Tensor[(8, 11, 13), int8] {
  %1398 = @func_1352() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1398.1
}

def @func_8029(%var_8015: Tensor[(4, 64), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(1, 256), int64], Tensor[(4, 64), int64]) {
  %1399 = @func_3444() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1400 = cast(%var_8015, dtype="int64") /* ty=Tensor[(4, 64), int64] */;
  %1401 = reshape(%1400, newshape=[1, 256]) /* ty=Tensor[(1, 256), int64] */;
  %1402 = @func_3891(%1401) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(1, 256), int64]) */;
  %1403 = %1399.1;
  %1404 = %1402.2;
  (%1403, %1404, %var_8015)
}

def @func_8107(%var_8102: Tensor[(2, 11, 12), float64]) -> (Tensor[(2, 11, 12), float64],) {
  %1405 = cast(%var_8102, dtype="float64") /* ty=Tensor[(2, 11, 12), float64] */;
  %1406 = sin(%1405) /* ty=Tensor[(2, 11, 12), float64] */;
  (%1406,)
}

def @func_5098() -> (Tensor[(8, 11, 13), int8],) {
  %1407 = @func_2443() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1407,)
}

def @func_12997() -> (Tensor[(8, 11, 13), int8],) {
  %1408 = @func_6229() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1409 = %1408.0;
  (%1409,)
}

def @func_10237(%var_10228: Tensor[(15, 1, 10), float32]) -> Tensor[(15, 1, 10), float32] {
  %1410 = cast(%var_10228, dtype="float32") /* ty=Tensor[(15, 1, 10), float32] */;
  atan(%1410) /* ty=Tensor[(15, 1, 10), float32] */
}

def @func_17556() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8]) {
  %1411 = @func_9289() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1412 = @func_2591() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1413 = %1411.0;
  %1414 = %1412.1;
  %1415 = @func_6377() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1413, %1414, %1415)
}

def @func_6493() -> (Tensor[(1664), float32],) {
  %1416 = @func_5491() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float32]) */;
  %1417 = %1416.1;
  (%1417,)
}

def @func_15480(%var_15451: Tensor[(16, 10, 10), int16]) -> (Tensor[(16, 10, 10), int16],) {
  %1418 = cast(%var_15451, dtype="int16") /* ty=Tensor[(16, 10, 10), int16] */;
  %1419 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(16, 10, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1420 = cast(meta[relay.Constant][48] /* ty=Tensor[(16, 10, 10), int16] */, dtype="int16") /* ty=Tensor[(16, 10, 10), int16] */;
  %1421 = dyn.reshape(%1418, %1419, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1422 = bitwise_or(%1420, %1421) /* ty=Tensor[(16, 10, 10), int16] */;
  (%1422,)
}

def @func_18034() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(3, 28), float32]) {
  %1423 = cast(meta[relay.Constant][49] /* ty=Tensor[(3, 28), float32] */, dtype="float32") /* ty=Tensor[(3, 28), float32] */;
  %1424 = reshape(%1423, newshape=[6, 7, 2]) /* ty=Tensor[(6, 7, 2), float32] */;
  %1425 = @func_6287(%1424) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(6, 7, 2), bool], Tensor[(8, 11, 13), int8]) */;
  %1426 = @func_7722() /* ty=Tensor[(8, 11, 13), int8] */;
  %1427 = %1425.3;
  (%1426, %1427, meta[relay.Constant][49] /* ty=Tensor[(3, 28), float32] */)
}

def @func_9350() -> Tensor[(8, 11, 13), int8] {
  %1428 = @func_6229() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1428.1
}

def @func_10681() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) {
  %1429 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1430 = @func_8083() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), float32]) */;
  %1431 = @func_3507() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1432 = %1429.1;
  %1433 = %1430.1;
  %1434 = %1431.0;
  (%1432, %1433, %1434)
}

def @func_3640() -> (Tensor[(8, 11, 13), int8],) {
  %1435 = @func_954() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %1436 = %1435.0;
  (%1436,)
}

def @func_4945() -> (Tensor[(8, 11, 13), int8],) {
  %1437 = @func_239() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1438 = %1437.1;
  (%1438,)
}

def @func_11289() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) {
  %1439 = @func_4265() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1440 = @func_5768() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), float64]) */;
  %1441 = @func_7983() /* ty=Tensor[(8, 11, 13), int8] */;
  %1442 = %1439.4;
  %1443 = %1440.2;
  (%1441, %1442, %1443)
}

def @func_12020() -> Tensor[(8, 11, 13), int8] {
  %1444 = @func_3754() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1444.1
}

def @func_10929() -> (Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8]) {
  %1445 = @func_2591() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1446 = @func_4221() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1447 = %1445.0;
  %1448 = %1446.1;
  (%1447, %1448)
}

def @func_3155() -> (Tensor[(8, 11, 13), int8],) {
  %1449 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1450 = %1449.0;
  (%1450,)
}

def @func_16444() -> Tensor[(8, 11, 13), int8] {
  %1451 = @func_3155() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1451.0
}

def @func_3507() -> (Tensor[(8, 11, 13), int8],) {
  %1452 = @func_2421() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %1453 = %1452.0;
  (%1453,)
}

def @func_8237(%var_8228: Tensor[(3, 1, 15), int32]) -> (Tensor[(3, 7, 15), int32], Tensor[(8, 11, 13), int8]) {
  %1454 = cast(%var_8228, dtype="int32") /* ty=Tensor[(3, 1, 15), int32] */;
  %1455 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 7, 15), int32] */, dtype="int32") /* ty=Tensor[(3, 7, 15), int32] */;
  %1456 = @func_3640() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1457 = bitwise_and(%1454, %1455) /* ty=Tensor[(3, 7, 15), int32] */;
  %1458 = %1456.0;
  (%1457, %1458)
}

def @func_17038() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  %1459 = @func_9863() /* ty=(Tensor[(8, 11, 13), uint32],) */;
  %1460 = %1459.0;
  %1461 = @func_10547() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1460, %1461)
}

def @func_8424() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1462 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1463 = @func_4445() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1464 = %1462.0;
  %1465 = @func_3315() /* ty=Tensor[(8, 11, 13), int8] */;
  %1466 = %1463.0;
  %1467 = @func_7722() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1464, %1465, %1466, %1467)
}

def @func_12143() -> (Tensor[(8, 11, 13), int8],) {
  %1468 = @func_6631() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1469 = %1468.0;
  (%1469,)
}

def @func_7679() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 7, 8), float64], Tensor[(448), float64]) {
  %1470 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1471 = @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1472 = cast(meta[relay.Constant][51] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %1473 = reshape(%1472, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), float64] */;
  %1474 = @func_4707(%1473) /* ty=(Tensor[(8, 7, 8), float64],) */;
  %1475 = %1470.0;
  %1476 = %1471.0;
  %1477 = %1474.0;
  (%1475, %1476, %1477, meta[relay.Constant][51] /* ty=Tensor[(448), float64] */)
}

def @func_8459() -> (Tensor[(8, 11, 13), uint32],) {
  %1478 = @func_5229() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), uint32]) */;
  %1479 = %1478.1;
  (%1479,)
}

def @func_18160(%var_18080: Tensor[(256), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(256), int64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), int32]) {
  %1480 = @func_7077() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), uint32]) */;
  %1481 = @func_2490() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1482 = cast(%var_18080, dtype="int64") /* ty=Tensor[(256), int64] */;
  %1483 = reshape(%1482, newshape=[1, 256]) /* ty=Tensor[(1, 256), int64] */;
  %1484 = @func_3891(%1483) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(1, 256), int64]) */;
  %1485 = %1484.1;
  %1486 = cast(%1485, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %1487 = erf(%1486) /* ty=Tensor[(8, 8, 4), float64] */;
  %1488 = cast(%1487, dtype="int32") /* ty=Tensor[(8, 8, 4), int32] */;
  %1489 = shape_of(%1485, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1490 = cast(%1485, dtype="int32") /* ty=Tensor[(8, 8, 4), int32] */;
  %1491 = dyn.reshape(%1488, %1489, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1492 = @func_15273() /* ty=Tensor[(8, 11, 13), int8] */;
  %1493 = %1480.1;
  %1494 = %1481.0;
  %1495 = add(%1490, %1491) /* ty=Tensor[(8, 8, 4), int32] */;
  (%1492, %var_18080, %1493, %1494, %1495)
}

def @func_2490() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1496 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1497 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1498 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1499 = %1496.1;
  %1500 = %1497.0;
  %1501 = %1498.0;
  (%1499, %1500, %1501)
}

def @func_17396(%var_17388: uint8, %var_17389: Tensor[(16, 11, 10), uint8]) -> (Tensor[(16, 11, 10), uint8], Tensor[(1664), float64]) {
  %1502 = cast(%var_17388, dtype="uint8") /* ty=uint8 */;
  %1503 = cast(%var_17389, dtype="uint8") /* ty=Tensor[(16, 11, 10), uint8] */;
  %1504 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1505 = right_shift(%1502, %1503) /* ty=Tensor[(16, 11, 10), uint8] */;
  %1506 = %1504.3;
  (%1505, %1506)
}

def @func_18994() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1507 = @func_2384() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1508 = @func_239() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1509 = %1507.0;
  %1510 = %1508.1;
  (%1509, %1510)
}

def @func_4007() -> (Tensor[(8, 11, 13), int8],) {
  %1511 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1512 = %1511.0;
  (%1512,)
}

def @func_1706() -> Tensor[(8, 11, 13), int8] {
  %1513 = @func_1685() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1513.0
}

def @func_3004() -> Tensor[(8, 11, 13), int8] {
  %1514 = @func_1806() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */;
  %1514.0
}

def @func_16292() -> (Tensor[(8, 11, 13), int8],) {
  %1515 = @func_9289() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1516 = %1515.1;
  (%1516,)
}

def @func_1513(%var_1503: Tensor[(8, 11, 13), int8]) -> (Tensor[(8, 11, 13), bool],) {
  %1517 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
  %1518 = cast(%var_1503, dtype="bool") /* ty=Tensor[(8, 11, 13), bool] */;
  %1519 = shape_of(%1517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1520 = cast(%1517, dtype="bool") /* ty=Tensor[(8, 11, 13), bool] */;
  %1521 = dyn.reshape(%1518, %1519, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1522 = logical_or(%1520, %1521) /* ty=Tensor[(8, 11, 13), bool] */;
  (%1522,)
}

def @func_2695() -> Tensor[(8, 11, 13), int8] {
  %1523 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1523.2
}

def @func_423() -> (Tensor[(8, 11, 13), int8],) {
  %1524 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1525 = %1524.0;
  (%1525,)
}

def @func_13169() -> (Tensor[(8, 11, 13), int8],) {
  %1526 = @func_9334() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1527 = %1526.0;
  (%1527,)
}

def @func_4631() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1528 = @func_3211() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */;
  %1529 = @func_4209() /* ty=Tensor[(8, 11, 13), int8] */;
  %1530 = %1528.1;
  (%1529, %1530)
}

def @func_11364() -> Tensor[(8, 11, 13), int8] {
  %1531 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1531.0
}

def @func_4707(%var_4687: Tensor[(8, 7, 8), float64]) -> (Tensor[(8, 7, 8), float64],) {
  %1532 = cast(%var_4687, dtype="float64") /* ty=Tensor[(8, 7, 8), float64] */;
  %1533 = asinh(%1532) /* ty=Tensor[(8, 7, 8), float64] */;
  (%1533,)
}

def @func_16964() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(900), uint8], Tensor[(1, 270), int64]) {
  %1534 = @func_16292() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1535 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 270), int64] */, dtype="int64") /* ty=Tensor[(1, 270), int64] */;
  %1536 = reshape(%1535, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %1537 = @func_10879(%1536) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(900), uint8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) */;
  %1538 = %1534.0;
  %1539 = @func_9149() /* ty=Tensor[(8, 11, 13), float64] */;
  %1540 = %1537.4;
  (%1538, %1539, %1540, meta[relay.Constant][52] /* ty=Tensor[(1, 270), int64] */)
}

def @func_18457() -> Tensor[(8, 11, 13), int8] {
  %1541 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1541.1
}

def @func_10220() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8]) {
  %1542 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %1543 = @func_7855() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1544 = @func_3604() /* ty=Tensor[(8, 11, 13), float32] */;
  %1545 = %1542.0;
  %1546 = %1543.1;
  (%1544, %1545, %1546)
}

def @func_4369(%var_4341: Tensor[(1664), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(1664), uint64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1547 = @func_2077() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1548 = %1547.1;
  %1549 = cast(%var_4341, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %1550 = shape_of(%1548, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1551 = cast(%1548, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %1552 = dyn.reshape(%1549, %1550, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %1553 = @func_3361() /* ty=(Tensor[(8, 11, 13), float64],) */;
  %1554 = @func_2490() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1555 = @func_4007() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1556 = @func_3139() /* ty=Tensor[(8, 11, 13), int8] */;
  %1557 = right_shift(%1551, %1552) /* ty=Tensor[(1664), uint64] */;
  %1558 = %1553.0;
  %1559 = %1554.2;
  %1560 = %1555.0;
  (%1556, %1557, %1558, %1559, %1560)
}

def @func_6377() -> Tensor[(8, 11, 13), int8] {
  %1561 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1561.0
}

def @func_16575() -> Tensor[(1664), float64] {
  %1562 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1562.3
}

def @func_18291() -> (int64,) {
  %1563 = @func_11817() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 12), float32], int64) */;
  %1564 = %1563.2;
  (%1564,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11817() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 12), float32], int64) {
  %0 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1 = reshape(%0, newshape=[]) /* ty=int64 */;
  %2 = @func_5254(%1) /* ty=(Tensor[(8, 11, 12), float32],) */;
  %3 = @func_3004() /* ty=Tensor[(8, 11, 13), int8] */;
  %4 = %2.0;
  (%3, %4, -1 /* ty=int64 */)
}

def @func_799() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
  @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */
}

def @func_4631() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %5 = @func_3211() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */;
  %6 = @func_4209() /* ty=Tensor[(8, 11, 13), int8] */;
  %7 = %5.1;
  (%6, %7)
}

def @func_12971(%var_12970: Tensor[(5, 4, 15), int32]) -> (Tensor[(5, 4, 15), int32], Tensor[(14, 7, 6), int16], Tensor[(588), int16]) {
  %19 = fn (%var_12951: Tensor[(5, 4, 15), int32]) -> (Tensor[(5, 4, 15), int32], Tensor[(14, 7, 6), int16], Tensor[(588), int16]) {
    %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 4, 15), int32] */, dtype="int32") /* ty=Tensor[(5, 4, 15), int32] */;
    %9 = shape_of(%var_12951, dtype="int32") /* ty=Tensor[(3), int32] */;
    %10 = cast(%var_12951, dtype="int32") /* ty=Tensor[(5, 4, 15), int32] */;
    %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(588), int16] */, dtype="int16") /* ty=Tensor[(588), int16] */;
    %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(588), int16] */, dtype="int16") /* ty=Tensor[(588), int16] */;
    %14 = reshape(%12, newshape=[14, 7, 6]) /* ty=Tensor[(14, 7, 6), int16] */;
    %15 = reshape(%13, newshape=[14, 7, 6]) /* ty=Tensor[(14, 7, 6), int16] */;
    %16 = @func_9138(%14, %15) /* ty=(Tensor[(14, 7, 6), int16], Tensor[(8, 11, 13), int8], Tensor[(900), uint8]) */;
    %17 = add(%10, %11) /* ty=Tensor[(5, 4, 15), int32] */;
    %18 = %16.0;
    (%17, %18, meta[relay.Constant][1] /* ty=Tensor[(588), int16] */)
  };
  %19(%var_12970) /* ty=(Tensor[(5, 4, 15), int32], Tensor[(14, 7, 6), int16], Tensor[(588), int16]) */
}

def @func_1446() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %20 = @func_1352() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %21 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %22 = %20.0;
  %23 = %21.0;
  (%22, %23)
}

def @func_8728() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %28 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %24 = @func_1637() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %25 = @func_5867() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %26 = %24.0;
    %27 = %25.0;
    (%26, %27)
  };
  %28() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_10486(%var_10484: Tensor[(1664), float64]) -> Tensor[(1664), uint32] {
  @func_10483(%var_10484) /* ty=Tensor[(1664), uint32] */
}

def @func_10772() -> (Tensor[(8, 11, 13), int8],) {
  %29 = @func_10681() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %30 = %29.0;
  (%30,)
}

def @func_221() -> Tensor[(8, 11, 13), int8] {
  @func_219() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_17996() -> (Tensor[(8, 11, 13), float64],) {
  %32 = fn () -> (Tensor[(8, 11, 13), float64],) {
    %31 = @func_10181() /* ty=Tensor[(8, 11, 13), float64] */;
    (%31,)
  };
  %32() /* ty=(Tensor[(8, 11, 13), float64],) */
}

def @func_2492() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_2490() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_8029(%var_8015: Tensor[(4, 64), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(1, 256), int64], Tensor[(4, 64), int64]) {
  %33 = @func_3444() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %34 = cast(%var_8015, dtype="int64") /* ty=Tensor[(4, 64), int64] */;
  %35 = reshape(%34, newshape=[1, 256]) /* ty=Tensor[(1, 256), int64] */;
  %36 = @func_3891(%35) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(1, 256), int64]) */;
  %37 = %33.1;
  %38 = %36.2;
  (%37, %38, %var_8015)
}

def @func_2857() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) {
  %44 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) {
    %39 = @func_1295() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %40 = @func_632() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
    %41 = %39.0;
    %42 = @func_1706() /* ty=Tensor[(8, 11, 13), int8] */;
    %43 = %40.1;
    (%41, %42, %43)
  };
  %44() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */
}

def @func_16392() -> Tensor[(8, 11, 13), float64] {
  %45 = @func_954() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %45.2
}

def @func_17945() -> Tensor[(8, 11, 13), int8] {
  %46 = @func_7409() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %46.0
}

def @func_7002() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) {
  @func_7000() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */
}

def @func_7679() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 7, 8), float64], Tensor[(448), float64]) {
  %47 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %48 = @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %49 = cast(meta[relay.Constant][2] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %50 = reshape(%49, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), float64] */;
  %51 = @func_4707(%50) /* ty=(Tensor[(8, 7, 8), float64],) */;
  %52 = %47.0;
  %53 = %48.0;
  %54 = %51.0;
  (%52, %53, %54, meta[relay.Constant][2] /* ty=Tensor[(448), float64] */)
}

def @func_18239() -> (Tensor[(8, 11, 13), int8], Tensor[(90, 10), uint8], Tensor[(432), float64]) {
  %60 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(90, 10), uint8], Tensor[(432), float64]) {
    %55 = cast(meta[relay.Constant][3] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
    %56 = reshape(%55, newshape=[9, 16, 3]) /* ty=Tensor[(9, 16, 3), float64] */;
    %57 = @func_13524(%56) /* ty=(Tensor[(9, 16, 3), float64], Tensor[(900), uint8], Tensor[(90, 10), uint8]) */;
    %58 = @func_9468() /* ty=Tensor[(8, 11, 13), int8] */;
    %59 = %57.2;
    (%58, %59, meta[relay.Constant][3] /* ty=Tensor[(432), float64] */)
  };
  %60() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(90, 10), uint8], Tensor[(432), float64]) */
}

def @func_19433() -> Tensor[(8, 11, 13), float64] {
  %62 = fn () -> Tensor[(8, 11, 13), float64] {
    %61 = @func_9021() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
    %61.1
  };
  %62() /* ty=Tensor[(8, 11, 13), float64] */
}

def @func_3023() -> Tensor[(8, 11, 13), float64] {
  @func_3021() /* ty=Tensor[(8, 11, 13), float64] */
}

def @func_3188() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  %63 = @func_2490() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %64 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %65 = %63.1;
  %66 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
  %67 = %64.0;
  (%65, %66, %67)
}

def @func_8196() -> (Tensor[(8, 11, 13), int8],) {
  @func_8194() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_7078() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), uint32]) {
  %73 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), uint32]) {
    %68 = @func_4462() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %69 = @func_2646() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */;
    %70 = %68.0;
    %71 = @func_3021() /* ty=Tensor[(8, 11, 13), float64] */;
    %72 = %69.1;
    (%70, %71, %72)
  };
  %73() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), uint32]) */
}

def @func_1808() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) {
  @func_1806() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */
}

def @func_16965() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(900), uint8], Tensor[(1, 270), int64]) {
  %81 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(900), uint8], Tensor[(1, 270), int64]) {
    %74 = @func_16292() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %75 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 270), int64] */, dtype="int64") /* ty=Tensor[(1, 270), int64] */;
    %76 = reshape(%75, newshape=[270]) /* ty=Tensor[(270), int64] */;
    %77 = @func_10879(%76) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(900), uint8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) */;
    %78 = %74.0;
    %79 = @func_9149() /* ty=Tensor[(8, 11, 13), float64] */;
    %80 = %77.4;
    (%78, %79, %80, meta[relay.Constant][4] /* ty=Tensor[(1, 270), int64] */)
  };
  %81() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(900), uint8], Tensor[(1, 270), int64]) */
}

def @func_15275() -> Tensor[(8, 11, 13), int8] {
  @func_15273() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_7908() -> (Tensor[(1664), float64],) {
  @func_7906() /* ty=(Tensor[(1664), float64],) */
}

def @func_13524(%var_13508: Tensor[(9, 16, 3), float64]) -> (Tensor[(9, 16, 3), float64], Tensor[(900), uint8], Tensor[(90, 10), uint8]) {
  %82 = cast(meta[relay.Constant][5] /* ty=Tensor[(9, 16, 3), float64] */, dtype="float64") /* ty=Tensor[(9, 16, 3), float64] */;
  %83 = shape_of(%var_13508, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%var_13508, dtype="float64") /* ty=Tensor[(9, 16, 3), float64] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %86 = cast(meta[relay.Constant][6] /* ty=Tensor[(90, 10), uint8] */, dtype="uint8") /* ty=Tensor[(90, 10), uint8] */;
  %87 = reshape(%86, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %88 = @func_6461(%87) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(15, 10, 6), float32], Tensor[(900), uint8], Tensor[(8, 11, 13), int8]) */;
  %89 = mod(%84, %85) /* ty=Tensor[(9, 16, 3), float64] */;
  %90 = %88.2;
  (%89, %90, meta[relay.Constant][6] /* ty=Tensor[(90, 10), uint8] */)
}

def @func_13834() -> (Tensor[(8, 11, 13), int8],) {
  %91 = @func_2283() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1664), float64]) */;
  %92 = %91.0;
  (%92,)
}

def @func_15719() -> Tensor[(8, 11, 13), int8] {
  %93 = @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %93.1
}

def @func_6648(%var_6643: Tensor[(10, 10, 8), bool], %var_6644: Tensor[(10, 10, 8), bool]) -> Tensor[(10, 10, 8), bool] {
  %94 = cast(%var_6644, dtype="bool") /* ty=Tensor[(10, 10, 8), bool] */;
  %95 = shape_of(%var_6643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(%var_6643, dtype="bool") /* ty=Tensor[(10, 10, 8), bool] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%96, %97) /* ty=Tensor[(10, 10, 8), bool] */
}

def @func_10759() -> (Tensor[(8, 11, 13), int8], Tensor[(12, 5, 7), float64], Tensor[(420), float64]) {
  %104 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(12, 5, 7), float64], Tensor[(420), float64]) {
    %98 = @func_1352() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %99 = cast(meta[relay.Constant][7] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %100 = reshape(%99, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), float64] */;
    %101 = @func_9970(%100) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(12, 5, 7), float64]) */;
    %102 = %98.0;
    %103 = %101.0;
    (%102, %103, meta[relay.Constant][7] /* ty=Tensor[(420), float64] */)
  };
  %104() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(12, 5, 7), float64], Tensor[(420), float64]) */
}

def @func_12045(%var_12023: Tensor[(8, 16, 7), float32], %var_12024: Tensor[(8, 16, 7), float32]) -> (Tensor[(8, 16, 7), float32],) {
  %105 = cast(%var_12024, dtype="float32") /* ty=Tensor[(8, 16, 7), float32] */;
  %106 = shape_of(%var_12023, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%var_12023, dtype="float32") /* ty=Tensor[(8, 16, 7), float32] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %109 = floor_divide(%107, %108) /* ty=Tensor[(8, 16, 7), float32] */;
  (%109,)
}

def @func_15410(%var_15409: Tensor[(168), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(168), float64], Tensor[(420), float64]) {
  %125 = fn (%var_15377: Tensor[(168), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(168), float64], Tensor[(420), float64]) {
    %110 = @func_9334() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %111 = @func_7679() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 7, 8), float64], Tensor[(448), float64]) */;
    %112 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %113 = cast(%var_15377, dtype="float64") /* ty=Tensor[(168), float64] */;
    %114 = reshape(%113, newshape=[2, 7, 12]) /* ty=Tensor[(2, 7, 12), float64] */;
    %115 = @func_12199(%114) /* ty=(Tensor[(2, 7, 12), float64], Tensor[(8, 11, 13), int8]) */;
    %116 = @func_10758() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(12, 5, 7), float64], Tensor[(420), float64]) */;
    %117 = @func_6377() /* ty=Tensor[(8, 11, 13), int8] */;
    %118 = %110.1;
    %119 = @func_14425() /* ty=Tensor[(8, 11, 13), int8] */;
    %120 = %111.0;
    %121 = @func_9676() /* ty=Tensor[(8, 11, 13), float32] */;
    %122 = %112.0;
    %123 = %115.1;
    %124 = %116.2;
    (%117, %118, %119, %120, %121, %122, %123, %var_15377, %124)
  };
  %125(%var_15409) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(168), float64], Tensor[(420), float64]) */
}

def @func_14211(%var_14190: Tensor[(1, 195), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(3, 13, 5), float64], Tensor[(1, 195), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %126 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %127 = cast(%var_14190, dtype="float64") /* ty=Tensor[(1, 195), float64] */;
  %128 = cast(%var_14190, dtype="float64") /* ty=Tensor[(1, 195), float64] */;
  %129 = reshape(%127, newshape=[3, 13, 5]) /* ty=Tensor[(3, 13, 5), float64] */;
  %130 = reshape(%128, newshape=[3, 13, 5]) /* ty=Tensor[(3, 13, 5), float64] */;
  %131 = @func_10349(%129, %130) /* ty=(Tensor[(3, 13, 5), float64],) */;
  %132 = @func_3410() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %133 = %126.3;
  %134 = %131.0;
  %135 = %132.1;
  %136 = @func_8329() /* ty=Tensor[(8, 11, 13), int8] */;
  (%133, %134, %var_14190, %135, %136)
}

def @func_2527() -> (Tensor[(8, 11, 13), int8],) {
  @func_2525() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_14167() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) {
  %137 = @func_8269() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %138 = @func_8727() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %139 = @func_2421() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %140 = %137.0;
  %141 = %138.1;
  %142 = %139.1;
  (%140, %141, %142)
}

def @func_6463(%var_6462: Tensor[(900), uint8]) -> (Tensor[(8, 11, 13), int8], Tensor[(15, 10, 6), float32], Tensor[(900), uint8], Tensor[(8, 11, 13), int8]) {
  %153 = fn (%var_6436: Tensor[(900), uint8]) -> (Tensor[(8, 11, 13), int8], Tensor[(15, 10, 6), float32], Tensor[(900), uint8], Tensor[(8, 11, 13), int8]) {
    %143 = @func_2856() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
    %144 = cast(%var_6436, dtype="uint8") /* ty=Tensor[(900), uint8] */;
    %145 = %143.1;
    %146 = cast(%145, dtype="int8") /* ty=Tensor[(8, 11, 13), int8] */;
    %147 = reshape(%144, newshape=[15, 10, 6]) /* ty=Tensor[(15, 10, 6), uint8] */;
    %148 = reshape(%146, newshape=[1144, 1]) /* ty=Tensor[(1144, 1), int8] */;
    %149 = @func_4163(%147, %148) /* ty=(Tensor[(15, 10, 6), uint8], Tensor[(6, 3, 15), int64], Tensor[(15, 10, 6), float32], Tensor[(8, 11, 13), bool], Tensor[(1144, 1), int8], Tensor[(8, 11, 13), int8]) */;
    %150 = @func_5742() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %151 = %149.2;
    %152 = %150.3;
    (%145, %151, %var_6436, %152)
  };
  %153(%var_6462) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(15, 10, 6), float32], Tensor[(900), uint8], Tensor[(8, 11, 13), int8]) */
}

def @func_17292() -> (Tensor[(8, 11, 13), int8],) {
  @func_17290() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_16292() -> (Tensor[(8, 11, 13), int8],) {
  %154 = @func_9289() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %155 = %154.1;
  (%155,)
}

def @func_17947() -> Tensor[(8, 11, 13), int8] {
  @func_17945() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_3412() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_3410() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_7906() -> (Tensor[(1664), float64],) {
  %156 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %157 = %156.3;
  (%157,)
}

def @func_3893(%var_3892: Tensor[(1, 256), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(1, 256), int64]) {
  %166 = fn (%var_3888: Tensor[(1, 256), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(1, 256), int64]) {
    %158 = @func_2283() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1664), float64]) */;
    %159 = cast(%var_3888, dtype="int64") /* ty=Tensor[(1, 256), int64] */;
    %160 = cast(%var_3888, dtype="bool") /* ty=Tensor[(1, 256), bool] */;
    %161 = reshape(%159, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), int64] */;
    %162 = reshape(%160, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), bool] */;
    %163 = @func_1615(%161, %162) /* ty=(Tensor[(8, 8, 4), uint32],) */;
    %164 = %158.0;
    %165 = %163.0;
    (%164, %165, %var_3888)
  };
  %166(%var_3892) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(1, 256), int64]) */
}

def @func_12020() -> Tensor[(8, 11, 13), int8] {
  %167 = @func_3754() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %167.1
}

def @func_15890(%var_15888: Tensor[(11, 8, 5), int16], %var_15889: Tensor[(11, 8, 5), int8]) -> (Tensor[(11, 8, 5), float64], Tensor[(11, 8, 5), float32], Tensor[(8, 11, 13), int8]) {
  @func_15886(%var_15888, %var_15889) /* ty=(Tensor[(11, 8, 5), float64], Tensor[(11, 8, 5), float32], Tensor[(8, 11, 13), int8]) */
}

def @func_9678() -> Tensor[(8, 11, 13), float32] {
  @func_9676() /* ty=Tensor[(8, 11, 13), float32] */
}

def @func_13438() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), uint32]) {
  @func_13436() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), uint32]) */
}

def @func_16444() -> Tensor[(8, 11, 13), int8] {
  %168 = @func_3155() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %168.0
}

def @func_11562(%var_11560: Tensor[(12, 14, 4), bool], %var_11561: Tensor[(12, 14, 4), bool]) -> (Tensor[(12, 14, 4), float32],) {
  @func_11558(%var_11560, %var_11561) /* ty=(Tensor[(12, 14, 4), float32],) */
}

def @func_1467() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %169 = @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %170 = @func_239() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %171 = %169.0;
  %172 = %170.1;
  (%171, %172)
}

def @func_11365() -> Tensor[(8, 11, 13), int8] {
  %174 = fn () -> Tensor[(8, 11, 13), int8] {
    %173 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %173.0
  };
  %174() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_2445() -> Tensor[(8, 11, 13), int8] {
  @func_2443() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_19307() -> (Tensor[(8, 11, 13), int8],) {
  %177 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %175 = @func_9960() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %176 = %175.0;
    (%176,)
  };
  %177() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_12624(%var_12622: Tensor[(10, 7, 4), uint16], %var_12623: Tensor[(10, 7, 4), uint16]) -> (Tensor[(10, 7, 4), bool], Tensor[(1664), float64]) {
  %185 = fn (%var_12593: Tensor[(10, 7, 4), uint16], %var_12594: Tensor[(10, 7, 4), uint16]) -> (Tensor[(10, 7, 4), bool], Tensor[(1664), float64]) {
    %178 = cast(%var_12594, dtype="bool") /* ty=Tensor[(10, 7, 4), bool] */;
    %179 = shape_of(%var_12593, dtype="int32") /* ty=Tensor[(3), int32] */;
    %180 = cast(%var_12593, dtype="bool") /* ty=Tensor[(10, 7, 4), bool] */;
    %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %182 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
    %183 = less(%180, %181) /* ty=Tensor[(10, 7, 4), bool] */;
    %184 = %182.3;
    (%183, %184)
  };
  %185(%var_12622, %var_12623) /* ty=(Tensor[(10, 7, 4), bool], Tensor[(1664), float64]) */
}

def @func_10425() -> Tensor[(8, 11, 13), float32] {
  %186 = @func_5541() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %186.0
}

def @func_15197() -> Tensor[(8, 11, 13), int8] {
  @func_15195() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_17838() -> (Tensor[(8, 11, 13), int8],) {
  %189 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %187 = @func_6754() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %188 = %187.0;
    (%188,)
  };
  %189() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_4008() -> (Tensor[(8, 11, 13), int8],) {
  %192 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %190 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %191 = %190.0;
    (%191,)
  };
  %192() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_12175() -> (Tensor[(8, 11, 13), int8],) {
  %193 = @func_10547() /* ty=Tensor[(8, 11, 13), int8] */;
  (%193,)
}

def @func_14331() -> (Tensor[(8, 11, 13), int8], Tensor[(10, 8, 15), float64]) {
  %197 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(10, 8, 15), float64]) {
    %194 = @func_11289() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
    %195 = %194.0;
    %196 = @func_7038() /* ty=Tensor[(10, 8, 15), float64] */;
    (%195, %196)
  };
  %197() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(10, 8, 15), float64]) */
}

def @func_19446(%var_19445: Tensor[(5, 8, 12), float64]) -> Tensor[(5, 8, 12), float64] {
  %199 = fn (%var_19440: Tensor[(5, 8, 12), float64]) -> Tensor[(5, 8, 12), float64] {
    %198 = cast(%var_19440, dtype="float64") /* ty=Tensor[(5, 8, 12), float64] */;
    asinh(%198) /* ty=Tensor[(5, 8, 12), float64] */
  };
  %199(%var_19445) /* ty=Tensor[(5, 8, 12), float64] */
}

def @func_797() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
  %200 = @func_423() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %201 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %202 = cast(meta[relay.Constant][8] /* ty=Tensor[(1664), float64] */, dtype="float64") /* ty=Tensor[(1664), float64] */;
  %203 = reshape(%202, newshape=[13, 16, 8]) /* ty=Tensor[(13, 16, 8), float64] */;
  %204 = @func_765(%203) /* ty=(Tensor[(13, 16, 8), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %205 = %200.0;
  %206 = %201.0;
  %207 = %204.2;
  (%205, %206, %207, meta[relay.Constant][8] /* ty=Tensor[(1664), float64] */)
}

def @func_13400(%var_13397: Tensor[(1664), float64], %var_13398: Tensor[(256), int64], %var_13399: Tensor[(1664), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), uint8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(256), int64], Tensor[(8, 11, 13), int8], Tensor[(2, 8, 9), float32], Tensor[(144), bool], Tensor[(1664), float32], Tensor[(448), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(5, 4, 15), int32], Tensor[(300), int32], Tensor[(1008, 2), bool], Tensor[(2016), uint16], Tensor[(1664), bool]) {
  @func_13395(%var_13397, %var_13398, %var_13399) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), uint8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(256), int64], Tensor[(8, 11, 13), int8], Tensor[(2, 8, 9), float32], Tensor[(144), bool], Tensor[(1664), float32], Tensor[(448), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(5, 4, 15), int32], Tensor[(300), int32], Tensor[(1008, 2), bool], Tensor[(2016), uint16], Tensor[(1664), bool]) */
}

def @func_2422() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) {
  %212 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) {
    %208 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %209 = @func_632() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
    %210 = %208.1;
    %211 = %209.1;
    (%210, %211)
  };
  %212() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */
}

def @func_12177() -> (Tensor[(8, 11, 13), int8],) {
  @func_12175() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_8299() -> Tensor[(8, 11, 13), int8] {
  @func_8297() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_18761() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
  @func_18759() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */
}

def @func_8516(%var_8514: uint16, %var_8515: Tensor[(14, 9, 16), uint16]) -> (Tensor[(14, 9, 16), uint16], Tensor[(14, 9, 16), float32], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(160), float64]) {
  %229 = fn (%var_8469: uint16, %var_8470: Tensor[(14, 9, 16), uint16]) -> (Tensor[(14, 9, 16), uint16], Tensor[(14, 9, 16), float32], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(160), float64]) {
    %213 = cast(%var_8469, dtype="uint16") /* ty=uint16 */;
    %214 = cast(%var_8470, dtype="uint16") /* ty=Tensor[(14, 9, 16), uint16] */;
    %215 = cast(%var_8470, dtype="uint32") /* ty=Tensor[(14, 9, 16), uint32] */;
    %216 = cast(%var_8469, dtype="uint32") /* ty=uint32 */;
    %217 = minimum(%215, %216) /* ty=Tensor[(14, 9, 16), uint32] */;
    %218 = cast(%217, dtype="float32") /* ty=Tensor[(14, 9, 16), float32] */;
    %219 = @func_7077() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), uint32]) */;
    %220 = cast(meta[relay.Constant][9] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
    %221 = cast(meta[relay.Constant][9] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
    %222 = reshape(%220, newshape=[4, 5, 8]) /* ty=Tensor[(4, 5, 8), float64] */;
    %223 = reshape(%221, newshape=[4, 5, 8]) /* ty=Tensor[(4, 5, 8), float64] */;
    %224 = @func_3880(%222, %223) /* ty=(Tensor[(4, 5, 8), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %225 = multiply(%213, %214) /* ty=Tensor[(14, 9, 16), uint16] */;
    %226 = atan(%218) /* ty=Tensor[(14, 9, 16), float32] */;
    %227 = %219.2;
    %228 = %224.1;
    (%225, %226, %227, %228, meta[relay.Constant][9] /* ty=Tensor[(160), float64] */)
  };
  %229(%var_8514, %var_8515) /* ty=(Tensor[(14, 9, 16), uint16], Tensor[(14, 9, 16), float32], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(160), float64]) */
}

def @func_5329(%var_5327: Tensor[(1664), float32]) -> (Tensor[(1664), bool], Tensor[(8, 11, 13), int8]) {
  @func_5326(%var_5327) /* ty=(Tensor[(1664), bool], Tensor[(8, 11, 13), int8]) */
}

def @func_12520(%var_12518: Tensor[(1008, 2), uint16]) -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), bool], Tensor[(160), float64], uint16, Tensor[(1008, 2), bool]) {
  @func_12517(%var_12518) /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), bool], Tensor[(160), float64], uint16, Tensor[(1008, 2), bool]) */
}

def @func_5966() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %230 = @func_2525() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %231 = @func_1637() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %232 = %230.0;
  %233 = %231.1;
  (%232, %233)
}

def @func_9676() -> Tensor[(8, 11, 13), float32] {
  %234 = @func_5541() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %234.0
}

def @func_11133(%var_11132: Tensor[(91), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(91), float64], Tensor[(13, 7, 1), float32]) {
  %246 = fn (%var_11116: Tensor[(91), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(91), float64], Tensor[(13, 7, 1), float32]) {
    %235 = @func_9960() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %236 = @func_6145() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1, 750), float64], Tensor[(8, 11, 13), int8]) */;
    %237 = cast(%var_11116, dtype="float64") /* ty=Tensor[(91), float64] */;
    %238 = reshape(%237, newshape=[13, 7, 1]) /* ty=Tensor[(13, 7, 1), float64] */;
    %239 = @func_9981(%238) /* ty=(Tensor[(13, 7, 1), float64],) */;
    %240 = %239.0;
    %241 = cast(%240, dtype="float32") /* ty=Tensor[(13, 7, 1), float32] */;
    %242 = %235.0;
    %243 = @func_1706() /* ty=Tensor[(8, 11, 13), int8] */;
    %244 = %236.4;
    %245 = cos(%241) /* ty=Tensor[(13, 7, 1), float32] */;
    (%242, %243, %244, %var_11116, %245)
  };
  %246(%var_11132) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(91), float64], Tensor[(13, 7, 1), float32]) */
}

def @func_16564() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %250 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %247 = @func_3410() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %248 = %247.1;
    %249 = @func_15195() /* ty=Tensor[(8, 11, 13), int8] */;
    (%248, %249)
  };
  %250() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_14039() -> (Tensor[(8, 11, 13), uint32], Tensor[(1664), float64]) {
  %255 = fn () -> (Tensor[(8, 11, 13), uint32], Tensor[(1664), float64]) {
    %251 = @func_2646() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */;
    %252 = @func_12869() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(52, 32), float64]) */;
    %253 = %251.1;
    %254 = %252.1;
    (%253, %254)
  };
  %255() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(1664), float64]) */
}

def @func_15932() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_15930() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_955() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) {
  %263 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) {
    %256 = @func_632() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
    %257 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %258 = %257.0;
    %259 = cast(%258, dtype="float64") /* ty=Tensor[(8, 11, 13), float64] */;
    %260 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
    %261 = %256.0;
    %262 = tan(%259) /* ty=Tensor[(8, 11, 13), float64] */;
    (%260, %261, %262)
  };
  %263() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */
}

def @func_8297() -> Tensor[(8, 11, 13), int8] {
  %264 = @func_3682() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %264.1
}

def @func_12691() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %265 = @func_2646() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */;
  %266 = @func_11270() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %267 = %265.1;
  %268 = %266.0;
  %269 = @func_640() /* ty=Tensor[(8, 11, 13), int8] */;
  (%267, %268, %269)
}

def @func_11933() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_11931() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_18458() -> Tensor[(8, 11, 13), int8] {
  %271 = fn () -> Tensor[(8, 11, 13), int8] {
    %270 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %270.1
  };
  %271() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_8607() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_8605() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_11622() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %272 = @func_3720() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */;
  %273 = @func_954() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %274 = %272.1;
  %275 = %273.1;
  %276 = @func_3315() /* ty=Tensor[(8, 11, 13), int8] */;
  (%274, %275, %276)
}

def @func_3641() -> (Tensor[(8, 11, 13), int8],) {
  %279 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %277 = @func_954() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
    %278 = %277.0;
    (%278,)
  };
  %279() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_15515(%var_15513: Tensor[(13, 1, 5), uint32], %var_15514: Tensor[(13, 16, 5), uint32]) -> (Tensor[(13, 16, 5), uint32],) {
  %283 = fn (%var_15506: Tensor[(13, 1, 5), uint32], %var_15507: Tensor[(13, 16, 5), uint32]) -> (Tensor[(13, 16, 5), uint32],) {
    %280 = cast(%var_15506, dtype="uint32") /* ty=Tensor[(13, 1, 5), uint32] */;
    %281 = cast(%var_15507, dtype="uint32") /* ty=Tensor[(13, 16, 5), uint32] */;
    %282 = left_shift(%280, %281) /* ty=Tensor[(13, 16, 5), uint32] */;
    (%282,)
  };
  %283(%var_15513, %var_15514) /* ty=(Tensor[(13, 16, 5), uint32],) */
}

def @func_4945() -> (Tensor[(8, 11, 13), int8],) {
  %284 = @func_239() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %285 = %284.1;
  (%285,)
}

def @func_9021() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) {
  %286 = @func_4007() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %287 = @func_954() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %288 = %286.0;
  %289 = %287.2;
  (%288, %289)
}

def @func_12870() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(52, 32), float64]) {
  %296 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(52, 32), float64]) {
    %290 = @func_6631() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %291 = cast(meta[relay.Constant][10] /* ty=Tensor[(52, 32), float64] */, dtype="float64") /* ty=Tensor[(52, 32), float64] */;
    %292 = reshape(%291, newshape=[1664]) /* ty=Tensor[(1664), float64] */;
    %293 = @func_7548(%292) /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %294 = %290.0;
    %295 = %293.0;
    (%294, %295, meta[relay.Constant][10] /* ty=Tensor[(52, 32), float64] */)
  };
  %296() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(52, 32), float64]) */
}

def @func_16933() -> Tensor[(8, 11, 13), int8] {
  @func_16931() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_17880() -> (Tensor[(6, 9, 10), float32], Tensor[(8, 11, 13), int8], Tensor[(6, 9, 10), uint16]) {
  @func_17878() /* ty=(Tensor[(6, 9, 10), float32], Tensor[(8, 11, 13), int8], Tensor[(6, 9, 10), uint16]) */
}

def @func_7855() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %297 = @func_4265() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %298 = @func_7679() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 7, 8), float64], Tensor[(448), float64]) */;
  %299 = %297.3;
  %300 = %298.0;
  (%299, %300)
}

def @func_5769() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), float64]) {
  %306 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), float64]) {
    %301 = @func_5670() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %302 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
    %303 = %301.2;
    %304 = %302.2;
    %305 = @func_3021() /* ty=Tensor[(8, 11, 13), float64] */;
    (%303, %304, %305)
  };
  %306() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), float64]) */
}

def @func_8605() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %307 = @func_2525() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %308 = @func_6687() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %309 = %307.0;
  %310 = %308.0;
  (%309, %310)
}

def @func_11931() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %311 = @func_1467() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %312 = @func_1467() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %313 = %311.1;
  %314 = %312.0;
  (%313, %314)
}

def @func_9658() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %326 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %315 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %316 = @func_1938() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8]) */;
    %317 = @func_3640() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %318 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %319 = %315.1;
    %320 = @func_9149() /* ty=Tensor[(8, 11, 13), float64] */;
    %321 = %316.5;
    %322 = @func_3004() /* ty=Tensor[(8, 11, 13), int8] */;
    %323 = @func_3782() /* ty=Tensor[(8, 11, 13), uint32] */;
    %324 = %317.0;
    %325 = %318.0;
    (%319, %320, %321, %322, %323, %324, %325)
  };
  %326() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_18759() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
  %327 = @func_3155() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %328 = @func_1938() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8]) */;
  %329 = %327.0;
  %330 = %328.4;
  (%329, %330)
}

def @func_1352() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %331 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %332 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %333 = %331.0;
  %334 = %332.2;
  (%333, %334)
}

def @func_9023() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) {
  @func_9021() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */
}

def @func_18709() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %335 = @func_16218() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %336 = @func_3188() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */;
  %337 = %335.1;
  %338 = %336.0;
  (%337, %338)
}

def @func_15073() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(588), int16], Tensor[(150, 2), int32], Tensor[(8, 11, 13), int8]) {
  %339 = @func_4945() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %340 = @func_13834() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %341 = cast(meta[relay.Constant][11] /* ty=Tensor[(150, 2), int32] */, dtype="int32") /* ty=Tensor[(150, 2), int32] */;
  %342 = reshape(%341, newshape=[5, 4, 15]) /* ty=Tensor[(5, 4, 15), int32] */;
  %343 = @func_12969(%342) /* ty=(Tensor[(5, 4, 15), int32], Tensor[(14, 7, 6), int16], Tensor[(588), int16]) */;
  %344 = @func_6145() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1, 750), float64], Tensor[(8, 11, 13), int8]) */;
  %345 = @func_2668() /* ty=Tensor[(8, 11, 13), int8] */;
  %346 = %339.0;
  %347 = %340.0;
  %348 = %343.2;
  %349 = %344.2;
  (%345, %346, %347, %348, meta[relay.Constant][11] /* ty=Tensor[(150, 2), int32] */, %349)
}

def @func_17124() -> Tensor[(8, 11, 13), int8] {
  @func_17122() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_16446() -> Tensor[(8, 11, 13), int8] {
  @func_16444() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_14469() -> Tensor[(8, 11, 13), int8] {
  %351 = fn () -> Tensor[(8, 11, 13), int8] {
    %350 = @func_9334() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %350.0
  };
  %351() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_17942() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8]) {
  @func_17940() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8]) */
}

def @func_18711() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_18709() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_883() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
  %352 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %353 = @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %354 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %355 = %352.0;
  %356 = %353.0;
  %357 = %354.3;
  (%355, %356, %357)
}

def @func_1175(%var_1173: Tensor[(6, 3, 15), int64], %var_1174: Tensor[(6, 3, 15), int64]) -> (Tensor[(6, 3, 15), int64],) {
  @func_1171(%var_1173, %var_1174) /* ty=(Tensor[(6, 3, 15), int64],) */
}

def @func_3720() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  %358 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %359 = @func_3264() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %360 = %358.0;
  %361 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
  %362 = %359.0;
  (%360, %361, %362)
}

def @func_2525() -> (Tensor[(8, 11, 13), int8],) {
  %363 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %364 = %363.1;
  (%364,)
}

def @func_4794() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %365 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %366 = @func_1352() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %367 = @func_1938() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8]) */;
  %368 = @func_3264() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %369 = %365.2;
  %370 = %366.0;
  %371 = %367.2;
  %372 = %368.0;
  %373 = @func_2668() /* ty=Tensor[(8, 11, 13), int8] */;
  (%369, %370, %371, %372, %373)
}

def @func_1469() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_1467() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_3265() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %380 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %374 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %375 = @func_632() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
    %376 = @func_1088() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
    %377 = %374.0;
    %378 = %375.0;
    %379 = %376.2;
    (%377, %378, %379)
  };
  %380() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_1448() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_5099() -> (Tensor[(8, 11, 13), int8],) {
  %382 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %381 = @func_2443() /* ty=Tensor[(8, 11, 13), int8] */;
    (%381,)
  };
  %382() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_7492() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %383 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %384 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %385 = @func_1637() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %386 = %383.3;
  %387 = %384.3;
  %388 = %385.0;
  (%386, %387, %388)
}

def @func_19091() -> Tensor[(8, 11, 13), uint32] {
  @func_19089() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_7494() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_7492() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_14997() -> Tensor[(8, 11, 13), uint32] {
  @func_14995() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_6349() -> Tensor[(8, 11, 13), float32] {
  %389 = @func_4794() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %389.2
}

def @func_6520() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_6518() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_6604() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32]) {
  %390 = @func_3754() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %391 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %392 = @func_3361() /* ty=(Tensor[(8, 11, 13), float64],) */;
  %393 = %390.1;
  %394 = @func_2443() /* ty=Tensor[(8, 11, 13), int8] */;
  %395 = %391.1;
  %396 = %392.0;
  %397 = @func_3604() /* ty=Tensor[(8, 11, 13), float32] */;
  (%393, %394, %395, %396, %397)
}

def @func_13809(%var_13804: uint64, %var_13805: Tensor[(6, 1, 9), uint64]) -> Tensor[(6, 1, 9), uint64] {
  %398 = cast(%var_13804, dtype="uint64") /* ty=uint64 */;
  %399 = cast(%var_13805, dtype="uint64") /* ty=Tensor[(6, 1, 9), uint64] */;
  bitwise_or(%398, %399) /* ty=Tensor[(6, 1, 9), uint64] */
}

def @func_18624() -> Tensor[(8, 11, 13), float64] {
  %400 = @func_2591() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %400.0
}

def @func_6854(%var_6852: Tensor[(3, 12, 10), uint8]) -> Tensor[(3, 12, 10), uint8] {
  @func_6851(%var_6852) /* ty=Tensor[(3, 12, 10), uint8] */
}

def @func_16899() -> Tensor[(8, 11, 13), int8] {
  @func_16897() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_12270() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %401 = @func_1088() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %402 = @func_9021() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %403 = @func_751() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %404 = %401.2;
  %405 = %402.0;
  %406 = %403.0;
  (%404, %405, %406)
}

def @func_334() -> (Tensor[(8, 11, 13), int8],) {
  %407 = @func_179() /* ty=Tensor[(8, 11, 13), int8] */;
  (%407,)
}

def @func_15674(%var_15673: Tensor[(270), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(6, 3, 15), int64], Tensor[(270), int64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %423 = fn (%var_15625: Tensor[(270), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(6, 3, 15), int64], Tensor[(270), int64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %408 = @func_9334() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %409 = @func_7802() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), int8]) */;
    %410 = cast(%var_15625, dtype="int64") /* ty=Tensor[(270), int64] */;
    %411 = cast(%var_15625, dtype="int64") /* ty=Tensor[(270), int64] */;
    %412 = reshape(%410, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), int64] */;
    %413 = reshape(%411, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), int64] */;
    %414 = @func_1171(%412, %413) /* ty=(Tensor[(6, 3, 15), int64],) */;
    %415 = @func_3410() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %416 = @func_4221() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %417 = %408.1;
    %418 = %409.0;
    %419 = %414.0;
    %420 = %415.0;
    %421 = @func_2668() /* ty=Tensor[(8, 11, 13), int8] */;
    %422 = %416.0;
    (%417, %418, %419, %var_15625, %420, %421, %422)
  };
  %423(%var_15673) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(6, 3, 15), int64], Tensor[(270), int64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_768(%var_766: Tensor[(13, 16, 8), float64]) -> (Tensor[(13, 16, 8), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_765(%var_766) /* ty=(Tensor[(13, 16, 8), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_15721() -> Tensor[(8, 11, 13), int8] {
  @func_15719() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_4167(%var_4165: Tensor[(15, 10, 6), uint8], %var_4166: Tensor[(1144, 1), int8]) -> (Tensor[(15, 10, 6), uint8], Tensor[(6, 3, 15), int64], Tensor[(15, 10, 6), float32], Tensor[(8, 11, 13), bool], Tensor[(1144, 1), int8], Tensor[(8, 11, 13), int8]) {
  @func_4163(%var_4165, %var_4166) /* ty=(Tensor[(15, 10, 6), uint8], Tensor[(6, 3, 15), int64], Tensor[(15, 10, 6), float32], Tensor[(8, 11, 13), bool], Tensor[(1144, 1), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_17604() -> Tensor[(8, 11, 13), uint32] {
  @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_4709(%var_4708: Tensor[(8, 7, 8), float64]) -> (Tensor[(8, 7, 8), float64],) {
  %426 = fn (%var_4687: Tensor[(8, 7, 8), float64]) -> (Tensor[(8, 7, 8), float64],) {
    %424 = cast(%var_4687, dtype="float64") /* ty=Tensor[(8, 7, 8), float64] */;
    %425 = asinh(%424) /* ty=Tensor[(8, 7, 8), float64] */;
    (%425,)
  };
  %426(%var_4708) /* ty=(Tensor[(8, 7, 8), float64],) */
}

def @func_15449() -> Tensor[(8, 11, 13), int8] {
  %428 = fn () -> Tensor[(8, 11, 13), int8] {
    %427 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
    %427.1
  };
  %428() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_8886() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %429 = @func_4945() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %430 = @func_3188() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */;
  %431 = @func_4403() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %432 = @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %433 = @func_2668() /* ty=Tensor[(8, 11, 13), int8] */;
  %434 = %429.0;
  %435 = %430.0;
  %436 = %431.1;
  %437 = %432.2;
  (%433, %434, %435, %436, %437)
}

def @func_16385() -> (Tensor[(8, 11, 13), float32],) {
  @func_16383() /* ty=(Tensor[(8, 11, 13), float32],) */
}

def @func_13157(%var_13156: Tensor[(270), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(270), int64]) {
  %446 = fn (%var_13153: Tensor[(270), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(270), int64]) {
    %438 = @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %439 = cast(%var_13153, dtype="int64") /* ty=Tensor[(270), int64] */;
    %440 = reshape(%439, newshape=[270]) /* ty=Tensor[(270), int64] */;
    %441 = @func_10879(%440) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(900), uint8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) */;
    %442 = %438.1;
    %443 = @func_7722() /* ty=Tensor[(8, 11, 13), int8] */;
    %444 = @func_9149() /* ty=Tensor[(8, 11, 13), float64] */;
    %445 = %441.3;
    (%442, %443, %444, %445, %var_13153)
  };
  %446(%var_13156) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(270), int64]) */
}

def @func_5744() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_5742() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_6493() -> (Tensor[(1664), float32],) {
  %447 = @func_5491() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float32]) */;
  %448 = %447.1;
  (%448,)
}

def @func_16922() -> Tensor[(8, 11, 13), float32] {
  @func_3604() /* ty=Tensor[(8, 11, 13), float32] */
}

def @func_3156() -> (Tensor[(8, 11, 13), int8],) {
  %451 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %449 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %450 = %449.0;
    (%450,)
  };
  %451() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_9983(%var_9982: Tensor[(13, 7, 1), float64]) -> (Tensor[(13, 7, 1), float64],) {
  %454 = fn (%var_9978: Tensor[(13, 7, 1), float64]) -> (Tensor[(13, 7, 1), float64],) {
    %452 = cast(%var_9978, dtype="float64") /* ty=Tensor[(13, 7, 1), float64] */;
    %453 = log2(%452) /* ty=Tensor[(13, 7, 1), float64] */;
    (%453,)
  };
  %454(%var_9982) /* ty=(Tensor[(13, 7, 1), float64],) */
}

def @func_13813(%var_13811: uint64, %var_13812: Tensor[(6, 1, 9), uint64]) -> Tensor[(6, 1, 9), uint64] {
  @func_13809(%var_13811, %var_13812) /* ty=Tensor[(6, 1, 9), uint64] */
}

def @func_2761() -> Tensor[(8, 11, 13), int8] {
  @func_2759() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_15246() -> Tensor[(8, 11, 13), int8] {
  @func_15244() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_6378() -> Tensor[(8, 11, 13), int8] {
  %456 = fn () -> Tensor[(8, 11, 13), int8] {
    %455 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %455.0
  };
  %456() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_7186(%var_7185: Tensor[(10, 8, 15), float64]) -> Tensor[(10, 8, 15), float32] {
  %462 = fn (%var_7175: Tensor[(10, 8, 15), float64]) -> Tensor[(10, 8, 15), float32] {
    %457 = @func_7038() /* ty=Tensor[(10, 8, 15), float64] */;
    %458 = cast(%var_7175, dtype="float32") /* ty=Tensor[(10, 8, 15), float32] */;
    %459 = shape_of(%457, dtype="int32") /* ty=Tensor[(3), int32] */;
    %460 = cast(%457, dtype="float32") /* ty=Tensor[(10, 8, 15), float32] */;
    %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    multiply(%460, %461) /* ty=Tensor[(10, 8, 15), float32] */
  };
  %462(%var_7185) /* ty=Tensor[(10, 8, 15), float32] */
}

def @func_6851(%var_6834: Tensor[(3, 12, 10), uint8]) -> Tensor[(3, 12, 10), uint8] {
  %463 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 12, 10), uint8] */, dtype="uint8") /* ty=Tensor[(3, 12, 10), uint8] */;
  %464 = shape_of(%var_6834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %465 = cast(%var_6834, dtype="uint8") /* ty=Tensor[(3, 12, 10), uint8] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%465, %466) /* ty=Tensor[(3, 12, 10), uint8] */
}

def @func_11995() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(256), int64]) {
  @func_11993() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(256), int64]) */
}

def @func_10774() -> (Tensor[(8, 11, 13), int8],) {
  @func_10772() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_10683() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) {
  @func_10681() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */
}

def @func_8239(%var_8238: Tensor[(3, 1, 15), int32]) -> (Tensor[(3, 7, 15), int32], Tensor[(8, 11, 13), int8]) {
  %472 = fn (%var_8228: Tensor[(3, 1, 15), int32]) -> (Tensor[(3, 7, 15), int32], Tensor[(8, 11, 13), int8]) {
    %467 = cast(%var_8228, dtype="int32") /* ty=Tensor[(3, 1, 15), int32] */;
    %468 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 7, 15), int32] */, dtype="int32") /* ty=Tensor[(3, 7, 15), int32] */;
    %469 = @func_3640() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %470 = bitwise_and(%467, %468) /* ty=Tensor[(3, 7, 15), int32] */;
    %471 = %469.0;
    (%470, %471)
  };
  %472(%var_8238) /* ty=(Tensor[(3, 7, 15), int32], Tensor[(8, 11, 13), int8]) */
}

def @func_18514(%var_18509: Tensor[(672), bool]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(12, 14, 4), float32], Tensor[(672), bool]) {
  %473 = @func_12691() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %474 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %475 = cast(%var_18509, dtype="bool") /* ty=Tensor[(672), bool] */;
  %476 = cast(%var_18509, dtype="bool") /* ty=Tensor[(672), bool] */;
  %477 = reshape(%475, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), bool] */;
  %478 = reshape(%476, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), bool] */;
  %479 = @func_11558(%477, %478) /* ty=(Tensor[(12, 14, 4), float32],) */;
  %480 = @func_3004() /* ty=Tensor[(8, 11, 13), int8] */;
  %481 = %473.0;
  %482 = %474.0;
  %483 = %479.0;
  (%480, %481, %482, %483, %var_18509)
}

def @func_7040() -> Tensor[(10, 8, 15), float64] {
  @func_7038() /* ty=Tensor[(10, 8, 15), float64] */
}

def @func_13662() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %484 = @func_6518() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %485 = @func_1938() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8]) */;
  %486 = @func_8424() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %487 = @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %488 = %484.1;
  %489 = %485.4;
  %490 = %486.3;
  %491 = %487.1;
  (%488, %489, %490, %491)
}

def @func_18957() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %496 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %492 = @func_4445() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %493 = @func_10286() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %494 = %492.0;
    %495 = %493.0;
    (%494, %495)
  };
  %496() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_2593() -> (Tensor[(8, 11, 13), float64], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_2591() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_11558(%var_11540: Tensor[(12, 14, 4), bool], %var_11541: Tensor[(12, 14, 4), bool]) -> (Tensor[(12, 14, 4), float32],) {
  %497 = cast(%var_11541, dtype="bool") /* ty=Tensor[(12, 14, 4), bool] */;
  %498 = shape_of(%var_11540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %499 = cast(%var_11540, dtype="bool") /* ty=Tensor[(12, 14, 4), bool] */;
  %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %501 = logical_and(%499, %500) /* ty=Tensor[(12, 14, 4), bool] */;
  %502 = cast(%501, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
  %503 = sin(%502) /* ty=Tensor[(12, 14, 4), float32] */;
  (%503,)
}

def @func_14214(%var_14212: Tensor[(1, 195), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(3, 13, 5), float64], Tensor[(1, 195), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_14211(%var_14212) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(3, 13, 5), float64], Tensor[(1, 195), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_11754() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %508 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %504 = @func_3264() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %505 = @func_4445() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %506 = %504.1;
    %507 = %505.0;
    (%506, %507)
  };
  %508() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_16383() -> (Tensor[(8, 11, 13), float32],) {
  %509 = @func_6349() /* ty=Tensor[(8, 11, 13), float32] */;
  (%509,)
}

def @func_13170() -> (Tensor[(8, 11, 13), int8],) {
  %512 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %510 = @func_9334() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %511 = %510.0;
    (%511,)
  };
  %512() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_8083() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), float32]) {
  %513 = @func_5670() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %514 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
  %515 = %513.1;
  (%514, %515)
}

def @func_510() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %516 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %517 = @func_179() /* ty=Tensor[(8, 11, 13), int8] */;
  %518 = %516.0;
  (%517, %518)
}

def @func_18994() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %519 = @func_2384() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %520 = @func_239() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %521 = %519.0;
  %522 = %520.1;
  (%521, %522)
}

def @func_359() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_3605() -> Tensor[(8, 11, 13), float32] {
  %524 = fn () -> Tensor[(8, 11, 13), float32] {
    %523 = @func_2421() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
    %523.1
  };
  %524() /* ty=Tensor[(8, 11, 13), float32] */
}

def @func_8331() -> Tensor[(8, 11, 13), int8] {
  @func_8329() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_9896() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(117), float64]) {
  %530 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(117), float64]) {
    %525 = cast(meta[relay.Constant][14] /* ty=Tensor[(117), float64] */, dtype="float64") /* ty=Tensor[(117), float64] */;
    %526 = reshape(%525, newshape=[13, 9, 1]) /* ty=Tensor[(13, 9, 1), float64] */;
    %527 = @func_2746(%526) /* ty=(Tensor[(13, 9, 1), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %528 = @func_2443() /* ty=Tensor[(8, 11, 13), int8] */;
    %529 = %527.2;
    (%528, %529, meta[relay.Constant][14] /* ty=Tensor[(117), float64] */)
  };
  %530() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(117), float64]) */
}

def @func_18069() -> Tensor[(8, 11, 13), float32] {
  %532 = fn () -> Tensor[(8, 11, 13), float32] {
    %531 = @func_15501() /* ty=(Tensor[(8, 11, 13), float32],) */;
    %531.0
  };
  %532() /* ty=Tensor[(8, 11, 13), float32] */
}

def @func_9334() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %533 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
  %534 = @func_3507() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %535 = %533.1;
  %536 = %534.0;
  (%535, %536)
}

def @func_4796() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_4794() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_10287() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %544 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %537 = @func_6604() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32]) */;
    %538 = @func_3640() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %539 = @func_7602() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %540 = %537.1;
    %541 = %538.0;
    %542 = %539.0;
    %543 = @func_640() /* ty=Tensor[(8, 11, 13), int8] */;
    (%540, %541, %542, %543)
  };
  %544() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_16527() -> (Tensor[(8, 11, 13), int8],) {
  %547 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %545 = @func_2856() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
    %546 = %545.0;
    (%546,)
  };
  %547() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_18670() -> Tensor[(8, 11, 13), int8] {
  %549 = fn () -> Tensor[(8, 11, 13), int8] {
    %548 = @func_17290() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %548.0
  };
  %549() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_12334(%var_12333: Tensor[(1, 11, 4), float32]) -> (Tensor[(1, 11, 4), float32],) {
  %552 = fn (%var_12328: Tensor[(1, 11, 4), float32]) -> (Tensor[(1, 11, 4), float32],) {
    %550 = cast(%var_12328, dtype="float32") /* ty=Tensor[(1, 11, 4), float32] */;
    %551 = log2(%550) /* ty=Tensor[(1, 11, 4), float32] */;
    (%551,)
  };
  %552(%var_12333) /* ty=(Tensor[(1, 11, 4), float32],) */
}

def @func_10483(%var_10451: Tensor[(1664), float64]) -> Tensor[(1664), uint32] {
  %553 = @func_7906() /* ty=(Tensor[(1664), float64],) */;
  %554 = %553.0;
  %555 = cast(%var_10451, dtype="uint32") /* ty=Tensor[(1664), uint32] */;
  %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(1), int32] */;
  %557 = cast(%554, dtype="uint32") /* ty=Tensor[(1664), uint32] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?), uint32] */;
  logical_xor(%557, %558) /* ty=Tensor[(1664), uint32] */
}

def @func_7943() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(270), int64]) {
  %559 = @func_6687() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %560 = @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %561 = @func_3085() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) */;
  %562 = %559.0;
  %563 = %560.2;
  %564 = %561.3;
  (%562, %563, %564)
}

def @func_2824() -> (Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) {
  %575 = fn () -> (Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) {
    %565 = @func_954() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
    %566 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %567 = %566.0;
    %568 = cast(%567, dtype="float64") /* ty=Tensor[(8, 11, 13), float64] */;
    %569 = @func_632() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
    %570 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %571 = %565.2;
    %572 = cos(%568) /* ty=Tensor[(8, 11, 13), float64] */;
    %573 = %569.1;
    %574 = %570.1;
    (%571, %572, %573, %574)
  };
  %575() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */
}

def @func_13933() -> (Tensor[(8, 11, 13), uint32],) {
  @func_13931() /* ty=(Tensor[(8, 11, 13), uint32],) */
}

def @func_6214() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(4, 64), int64]) {
  %584 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(4, 64), int64]) {
    %576 = @func_1352() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %577 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 64), int64] */, dtype="int64") /* ty=Tensor[(4, 64), int64] */;
    %578 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 64), int64] */, dtype="bool") /* ty=Tensor[(4, 64), bool] */;
    %579 = reshape(%577, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), int64] */;
    %580 = reshape(%578, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), bool] */;
    %581 = @func_1615(%579, %580) /* ty=(Tensor[(8, 8, 4), uint32],) */;
    %582 = %576.1;
    %583 = %581.0;
    (%582, %583, meta[relay.Constant][15] /* ty=Tensor[(4, 64), int64] */)
  };
  %584() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(4, 64), int64]) */
}

def @func_16844() -> (Tensor[(8, 11, 13), int8],) {
  %587 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %585 = @func_8659() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %586 = %585.0;
    (%586,)
  };
  %587() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_14918() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
  %594 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
    %588 = @func_3188() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */;
    %589 = @func_4905() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %590 = @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %591 = %588.2;
    %592 = %589.0;
    %593 = %590.0;
    (%591, %592, %593)
  };
  %594() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */
}

def @func_18563() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %595 = @func_6518() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %596 = @func_7943() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(270), int64]) */;
  %597 = @func_7855() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %598 = %595.1;
  %599 = %596.1;
  %600 = %597.0;
  (%598, %599, %600)
}

def @func_3190() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  @func_3188() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */
}

def @func_12309() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %604 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %601 = @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %602 = @func_179() /* ty=Tensor[(8, 11, 13), int8] */;
    %603 = %601.0;
    (%602, %603)
  };
  %604() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_18176() -> Tensor[(8, 11, 13), uint32] {
  @func_18174() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_11272() -> (Tensor[(8, 11, 13), int8],) {
  @func_11270() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_18422() -> Tensor[(8, 11, 13), int8] {
  %606 = fn () -> Tensor[(8, 11, 13), int8] {
    %605 = @func_14330() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(10, 8, 15), float64]) */;
    %605.0
  };
  %606() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_16897() -> Tensor[(8, 11, 13), int8] {
  %607 = @func_9289() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %607.1
}

def @func_15886(%var_15829: Tensor[(11, 8, 5), int16], %var_15843: Tensor[(11, 8, 5), int8]) -> (Tensor[(11, 8, 5), float64], Tensor[(11, 8, 5), float32], Tensor[(8, 11, 13), int8]) {
  %608 = cast(meta[relay.Constant][16] /* ty=Tensor[(11, 8, 5), int16] */, dtype="float32") /* ty=Tensor[(11, 8, 5), float32] */;
  %609 = asinh(%608) /* ty=Tensor[(11, 8, 5), float32] */;
  %610 = cast(%var_15829, dtype="int16") /* ty=Tensor[(11, 8, 5), int16] */;
  %611 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(11, 8, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(meta[relay.Constant][16] /* ty=Tensor[(11, 8, 5), int16] */, dtype="int16") /* ty=Tensor[(11, 8, 5), int16] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %614 = bitwise_or(%612, %613) /* ty=Tensor[(11, 8, 5), int16] */;
  %615 = cast(%614, dtype="int8") /* ty=Tensor[(11, 8, 5), int8] */;
  %616 = shape_of(%609, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(%609, dtype="int8") /* ty=Tensor[(11, 8, 5), int8] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %619 = bitwise_and(%617, %618) /* ty=Tensor[(11, 8, 5), int8] */;
  %620 = cast(%var_15843, dtype="float64") /* ty=Tensor[(11, 8, 5), float64] */;
  %621 = shape_of(%619, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(%619, dtype="float64") /* ty=Tensor[(11, 8, 5), float64] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %624 = cast(%var_15829, dtype="float32") /* ty=Tensor[(11, 8, 5), float32] */;
  %625 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %626 = divide(%622, %623) /* ty=Tensor[(11, 8, 5), float64] */;
  %627 = log10(%624) /* ty=Tensor[(11, 8, 5), float32] */;
  %628 = %625.0;
  (%626, %627, %628)
}

def @func_5628(%var_5627: Tensor[(5, 10, 15), uint64]) -> (Tensor[(5, 10, 15), uint64], Tensor[(8, 11, 13), int8], Tensor[(9, 8, 3), float32], Tensor[(36, 6), float32]) {
  %639 = fn (%var_5596: Tensor[(5, 10, 15), uint64]) -> (Tensor[(5, 10, 15), uint64], Tensor[(8, 11, 13), int8], Tensor[(9, 8, 3), float32], Tensor[(36, 6), float32]) {
    %629 = cast(%var_5596, dtype="uint64") /* ty=Tensor[(5, 10, 15), uint64] */;
    %630 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(5, 10, 15), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %631 = cast(meta[relay.Constant][17] /* ty=Tensor[(5, 10, 15), uint64] */, dtype="uint64") /* ty=Tensor[(5, 10, 15), uint64] */;
    %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %633 = @func_5541() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
    %634 = cast(meta[relay.Constant][18] /* ty=Tensor[(36, 6), float32] */, dtype="float32") /* ty=Tensor[(36, 6), float32] */;
    %635 = reshape(%634, newshape=[9, 8, 3]) /* ty=Tensor[(9, 8, 3), float32] */;
    %636 = bitwise_or(%631, %632) /* ty=Tensor[(5, 10, 15), uint64] */;
    %637 = %633.1;
    %638 = @func_3835(%635) /* ty=Tensor[(9, 8, 3), float32] */;
    (%636, %637, %638, meta[relay.Constant][18] /* ty=Tensor[(36, 6), float32] */)
  };
  %639(%var_5627) /* ty=(Tensor[(5, 10, 15), uint64], Tensor[(8, 11, 13), int8], Tensor[(9, 8, 3), float32], Tensor[(36, 6), float32]) */
}

def @func_9336() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_9334() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_6145() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1, 750), float64], Tensor[(8, 11, 13), int8]) {
  %640 = @func_4794() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %641 = @func_4905() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %642 = @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %643 = @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %644 = @func_4631() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %645 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 750), uint64] */, dtype="uint64") /* ty=Tensor[(1, 750), uint64] */;
  %646 = reshape(%645, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), uint64] */;
  %647 = @func_5626(%646) /* ty=(Tensor[(5, 10, 15), uint64], Tensor[(8, 11, 13), int8], Tensor[(9, 8, 3), float32], Tensor[(36, 6), float32]) */;
  %648 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 750), uint64] */, dtype="float64") /* ty=Tensor[(1, 750), float64] */;
  %649 = @func_3507() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %650 = %640.1;
  %651 = %641.0;
  %652 = %642.1;
  %653 = %643.0;
  %654 = %644.1;
  %655 = %647.1;
  %656 = tan(%648) /* ty=Tensor[(1, 750), float64] */;
  %657 = %649.0;
  (%650, %651, %652, %653, %654, %655, %656, %657)
}

def @func_16576() -> Tensor[(1664), float64] {
  %659 = fn () -> Tensor[(1664), float64] {
    %658 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
    %658.3
  };
  %659() /* ty=Tensor[(1664), float64] */
}

def @func_10930() -> (Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8]) {
  %664 = fn () -> (Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8]) {
    %660 = @func_2591() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %661 = @func_4221() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %662 = %660.0;
    %663 = %661.1;
    (%662, %663)
  };
  %664() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8]) */
}

def @func_13931() -> (Tensor[(8, 11, 13), uint32],) {
  %665 = @func_2646() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */;
  %666 = %665.1;
  (%666,)
}

def @func_12272() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_12270() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_1513(%var_1503: Tensor[(8, 11, 13), int8]) -> (Tensor[(8, 11, 13), bool],) {
  %667 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
  %668 = cast(%var_1503, dtype="bool") /* ty=Tensor[(8, 11, 13), bool] */;
  %669 = shape_of(%667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%667, dtype="bool") /* ty=Tensor[(8, 11, 13), bool] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %672 = logical_or(%670, %671) /* ty=Tensor[(8, 11, 13), bool] */;
  (%672,)
}

def @func_13626() -> Tensor[(8, 11, 13), float32] {
  %673 = fn () -> Tensor[(8, 11, 13), float32] {
    @func_9676() /* ty=Tensor[(8, 11, 13), float32] */
  };
  %673() /* ty=Tensor[(8, 11, 13), float32] */
}

def @func_9826(%var_9824: Tensor[(4, 64), int64]) -> (Tensor[(13, 6, 8), uint64], Tensor[(8, 11, 13), int8], Tensor[(4, 64), int64]) {
  @func_9823(%var_9824) /* ty=(Tensor[(13, 6, 8), uint64], Tensor[(8, 11, 13), int8], Tensor[(4, 64), int64]) */
}

def @func_11239() -> Tensor[(8, 11, 13), bool] {
  @func_11237() /* ty=Tensor[(8, 11, 13), bool] */
}

def @func_10879(%var_10874: Tensor[(270), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(900), uint8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) {
  %674 = @func_2384() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %675 = @func_3507() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %676 = @func_6604() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32]) */;
  %677 = cast(meta[relay.Constant][20] /* ty=Tensor[(900), uint8] */, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %678 = %676.1;
  %679 = cast(%678, dtype="int8") /* ty=Tensor[(8, 11, 13), int8] */;
  %680 = reshape(%677, newshape=[15, 10, 6]) /* ty=Tensor[(15, 10, 6), uint8] */;
  %681 = reshape(%679, newshape=[1144, 1]) /* ty=Tensor[(1144, 1), int8] */;
  %682 = @func_4163(%680, %681) /* ty=(Tensor[(15, 10, 6), uint8], Tensor[(6, 3, 15), int64], Tensor[(15, 10, 6), float32], Tensor[(8, 11, 13), bool], Tensor[(1144, 1), int8], Tensor[(8, 11, 13), int8]) */;
  %683 = cast(%var_10874, dtype="int64") /* ty=Tensor[(270), int64] */;
  %684 = cast(%var_10874, dtype="int64") /* ty=Tensor[(270), int64] */;
  %685 = reshape(%683, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), int64] */;
  %686 = reshape(%684, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), int64] */;
  %687 = @func_1171(%685, %686) /* ty=(Tensor[(6, 3, 15), int64],) */;
  %688 = %674.0;
  %689 = %675.0;
  %690 = %682.5;
  %691 = %687.0;
  (%688, %689, %678, %690, meta[relay.Constant][20] /* ty=Tensor[(900), uint8] */, %691, %var_10874)
}

def @func_10349(%var_10317: Tensor[(3, 13, 5), float64], %var_10318: Tensor[(3, 13, 5), float64]) -> (Tensor[(3, 13, 5), float64],) {
  %692 = cast(%var_10318, dtype="float64") /* ty=Tensor[(3, 13, 5), float64] */;
  %693 = shape_of(%var_10317, dtype="int32") /* ty=Tensor[(3), int32] */;
  %694 = cast(%var_10317, dtype="float64") /* ty=Tensor[(3, 13, 5), float64] */;
  %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %696 = mod(%694, %695) /* ty=Tensor[(3, 13, 5), float64] */;
  (%696,)
}

def @func_13865() -> (Tensor[(8, 11, 13), float64],) {
  %698 = fn () -> (Tensor[(8, 11, 13), float64],) {
    %697 = @func_10181() /* ty=Tensor[(8, 11, 13), float64] */;
    (%697,)
  };
  %698() /* ty=(Tensor[(8, 11, 13), float64],) */
}

def @func_11345() -> (Tensor[(8, 11, 13), float64], Tensor[(1664), bool], Tensor[(1664), float32]) {
  %699 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %700 = cast(meta[relay.Constant][21] /* ty=Tensor[(1664), float32] */, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %701 = reshape(%700, newshape=[1664]) /* ty=Tensor[(1664), float32] */;
  %702 = @func_5326(%701) /* ty=(Tensor[(1664), bool], Tensor[(8, 11, 13), int8]) */;
  %703 = %699.0;
  %704 = %702.0;
  (%703, %704, meta[relay.Constant][21] /* ty=Tensor[(1664), float32] */)
}

def @func_6642() -> (Tensor[(8, 11, 13), float32],) {
  %706 = fn () -> (Tensor[(8, 11, 13), float32],) {
    %705 = @func_3604() /* ty=Tensor[(8, 11, 13), float32] */;
    (%705,)
  };
  %706() /* ty=(Tensor[(8, 11, 13), float32],) */
}

def @func_7550(%var_7549: Tensor[(1664), float64]) -> (Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %718 = fn (%var_7518: Tensor[(1664), float64]) -> (Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %707 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
    %708 = %707.2;
    %709 = cast(%var_7518, dtype="float64") /* ty=Tensor[(1664), float64] */;
    %710 = shape_of(%708, dtype="int32") /* ty=Tensor[(1), int32] */;
    %711 = cast(%708, dtype="float64") /* ty=Tensor[(1664), float64] */;
    %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?), float64] */;
    %713 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %714 = @func_2591() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %715 = divide(%711, %712) /* ty=Tensor[(1664), float64] */;
    %716 = %713.1;
    %717 = %714.2;
    (%715, %716, %717)
  };
  %718(%var_7549) /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_2147() -> (Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_10353(%var_10351: Tensor[(3, 13, 5), float64], %var_10352: Tensor[(3, 13, 5), float64]) -> (Tensor[(3, 13, 5), float64],) {
  @func_10349(%var_10351, %var_10352) /* ty=(Tensor[(3, 13, 5), float64],) */
}

def @func_8110(%var_8108: Tensor[(2, 11, 12), float64]) -> (Tensor[(2, 11, 12), float64],) {
  @func_8107(%var_8108) /* ty=(Tensor[(2, 11, 12), float64],) */
}

def @func_18909(%var_18908: Tensor[(12, 11, 14), float64]) -> Tensor[(12, 11, 14), float64] {
  %720 = fn (%var_18902: Tensor[(12, 11, 14), float64]) -> Tensor[(12, 11, 14), float64] {
    %719 = cast(%var_18902, dtype="float64") /* ty=Tensor[(12, 11, 14), float64] */;
    tan(%719) /* ty=Tensor[(12, 11, 14), float64] */
  };
  %720(%var_18908) /* ty=Tensor[(12, 11, 14), float64] */
}

def @func_3141() -> Tensor[(8, 11, 13), int8] {
  @func_3139() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_1686() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %731 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %721 = @func_239() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %722 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %723 = @func_423() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %724 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %725 = @func_423() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %726 = %721.1;
    %727 = %722.0;
    %728 = %723.0;
    %729 = %724.0;
    %730 = %725.0;
    (%726, %727, %728, %729, %730)
  };
  %731() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_4210() -> Tensor[(8, 11, 13), int8] {
  %733 = fn () -> Tensor[(8, 11, 13), int8] {
    %732 = @func_1685() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %732.3
  };
  %733() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_15606() -> Tensor[(8, 11, 13), int8] {
  @func_15604() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_19280(%var_19279: Tensor[(4, 16, 15), float32]) -> (Tensor[(4, 16, 15), float32],) {
  %736 = fn (%var_19270: Tensor[(4, 16, 15), float32]) -> (Tensor[(4, 16, 15), float32],) {
    %734 = cast(%var_19270, dtype="float32") /* ty=Tensor[(4, 16, 15), float32] */;
    %735 = asin(%734) /* ty=Tensor[(4, 16, 15), float32] */;
    (%735,)
  };
  %736(%var_19279) /* ty=(Tensor[(4, 16, 15), float32],) */
}

def @func_6230() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %740 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %737 = @func_2283() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1664), float64]) */;
    %738 = %737.0;
    %739 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
    (%738, %739)
  };
  %740() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_13527(%var_13525: Tensor[(9, 16, 3), float64]) -> (Tensor[(9, 16, 3), float64], Tensor[(900), uint8], Tensor[(90, 10), uint8]) {
  @func_13524(%var_13525) /* ty=(Tensor[(9, 16, 3), float64], Tensor[(900), uint8], Tensor[(90, 10), uint8]) */
}

def @func_2285() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1664), float64]) {
  @func_2283() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1664), float64]) */
}

def @func_19174() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float32], Tensor[(8, 11, 13), int8], Tensor[(195), float64]) {
  %749 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float32], Tensor[(8, 11, 13), int8], Tensor[(195), float64]) {
    %741 = @func_1467() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %742 = @func_6493() /* ty=(Tensor[(1664), float32],) */;
    %743 = cast(meta[relay.Constant][22] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
    %744 = reshape(%743, newshape=[1, 195]) /* ty=Tensor[(1, 195), float64] */;
    %745 = @func_14211(%744) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(3, 13, 5), float64], Tensor[(1, 195), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %746 = %741.0;
    %747 = %742.0;
    %748 = %745.4;
    (%746, %747, %748, meta[relay.Constant][22] /* ty=Tensor[(195), float64] */)
  };
  %749() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float32], Tensor[(8, 11, 13), int8], Tensor[(195), float64]) */
}

def @func_7681() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 7, 8), float64], Tensor[(448), float64]) {
  @func_7679() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 7, 8), float64], Tensor[(448), float64]) */
}

def @func_17122() -> Tensor[(8, 11, 13), int8] {
  %750 = @func_16563() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %750.1
}

def @func_7604() -> (Tensor[(8, 11, 13), int8],) {
  @func_7602() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_1251() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %757 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %751 = @func_751() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %752 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
    %753 = @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %754 = %751.0;
    %755 = %752.0;
    %756 = %753.1;
    (%754, %755, %756)
  };
  %757() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_12049(%var_12047: Tensor[(8, 16, 7), float32], %var_12048: Tensor[(8, 16, 7), float32]) -> (Tensor[(8, 16, 7), float32],) {
  @func_12045(%var_12047, %var_12048) /* ty=(Tensor[(8, 16, 7), float32],) */
}

def @func_4221() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %758 = @func_1706() /* ty=Tensor[(8, 11, 13), int8] */;
  %759 = @func_2443() /* ty=Tensor[(8, 11, 13), int8] */;
  (%758, %759)
}

def @func_18877() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(270), int64]) {
  @func_18875() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(270), int64]) */
}

def @func_14954() -> Tensor[(8, 11, 13), float64] {
  @func_14952() /* ty=Tensor[(8, 11, 13), float64] */
}

def @func_6287(%var_6254: Tensor[(6, 7, 2), float32]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(6, 7, 2), bool], Tensor[(8, 11, 13), int8]) {
  %760 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %761 = cast(%var_6254, dtype="float32") /* ty=Tensor[(6, 7, 2), float32] */;
  %762 = cos(%761) /* ty=Tensor[(6, 7, 2), float32] */;
  %763 = cast(%var_6254, dtype="bool") /* ty=Tensor[(6, 7, 2), bool] */;
  %764 = shape_of(%762, dtype="int32") /* ty=Tensor[(3), int32] */;
  %765 = cast(%762, dtype="bool") /* ty=Tensor[(6, 7, 2), bool] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %767 = @func_5098() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %768 = %760.2;
  %769 = @func_3604() /* ty=Tensor[(8, 11, 13), float32] */;
  %770 = greater_equal(%765, %766) /* ty=Tensor[(6, 7, 2), bool] */;
  %771 = %767.0;
  (%768, %769, %770, %771)
}

def @func_10637(%var_10636: Tensor[(9, 8, 3), uint32]) -> (Tensor[(8, 11, 13), float32], Tensor[(9, 8, 3), bool]) {
  %788 = fn (%var_10574: Tensor[(9, 8, 3), uint32]) -> (Tensor[(8, 11, 13), float32], Tensor[(9, 8, 3), bool]) {
    %772 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 8, 3), uint32] */, dtype="uint32") /* ty=Tensor[(9, 8, 3), uint32] */;
    %773 = shape_of(%var_10574, dtype="int32") /* ty=Tensor[(3), int32] */;
    %774 = cast(%var_10574, dtype="uint32") /* ty=Tensor[(9, 8, 3), uint32] */;
    %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %776 = bitwise_xor(%774, %775) /* ty=Tensor[(9, 8, 3), uint32] */;
    %777 = cast(%776, dtype="uint32") /* ty=Tensor[(9, 8, 3), uint32] */;
    %778 = shape_of(%var_10574, dtype="int32") /* ty=Tensor[(3), int32] */;
    %779 = cast(%var_10574, dtype="uint32") /* ty=Tensor[(9, 8, 3), uint32] */;
    %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %781 = bitwise_or(%779, %780) /* ty=Tensor[(9, 8, 3), uint32] */;
    %782 = cast(%781, dtype="bool") /* ty=Tensor[(9, 8, 3), bool] */;
    %783 = shape_of(%776, dtype="int32") /* ty=Tensor[(3), int32] */;
    %784 = cast(%776, dtype="bool") /* ty=Tensor[(9, 8, 3), bool] */;
    %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %786 = @func_6349() /* ty=Tensor[(8, 11, 13), float32] */;
    %787 = greater_equal(%784, %785) /* ty=Tensor[(9, 8, 3), bool] */;
    (%786, %787)
  };
  %788(%var_10636) /* ty=(Tensor[(8, 11, 13), float32], Tensor[(9, 8, 3), bool]) */
}

def @func_11993() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(256), int64]) {
  %789 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %790 = cast(meta[relay.Constant][24] /* ty=Tensor[(256), int64] */, dtype="int64") /* ty=Tensor[(256), int64] */;
  %791 = reshape(%790, newshape=[4, 64]) /* ty=Tensor[(4, 64), int64] */;
  %792 = @func_8029(%791) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1, 256), int64], Tensor[(4, 64), int64]) */;
  %793 = %789.0;
  %794 = %792.0;
  (%793, %794, meta[relay.Constant][24] /* ty=Tensor[(256), int64] */)
}

def @func_1354() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_1352() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_8460() -> (Tensor[(8, 11, 13), uint32],) {
  %797 = fn () -> (Tensor[(8, 11, 13), uint32],) {
    %795 = @func_5229() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), uint32]) */;
    %796 = %795.1;
    (%796,)
  };
  %797() /* ty=(Tensor[(8, 11, 13), uint32],) */
}

def @func_5742() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %798 = @func_2956() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %799 = @func_3264() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %800 = @func_4794() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %801 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %802 = @func_1467() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %803 = @func_1250() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %804 = %798.1;
  %805 = %799.1;
  %806 = %800.0;
  %807 = %801.1;
  %808 = %802.1;
  %809 = %803.2;
  (%804, %805, %806, %807, %808, %809)
}

def @func_13732() -> (Tensor[(8, 11, 13), int8],) {
  %810 = @func_7855() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %811 = %810.1;
  (%811,)
}

def @func_16300() -> Tensor[(8, 11, 13), int8] {
  %813 = fn () -> Tensor[(8, 11, 13), int8] {
    %812 = @func_8424() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %812.1
  };
  %813() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_13395(%var_13269: Tensor[(1664), float64], %var_13317: Tensor[(256), int64], %var_13390: Tensor[(1664), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), uint8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(256), int64], Tensor[(8, 11, 13), int8], Tensor[(2, 8, 9), float32], Tensor[(144), bool], Tensor[(1664), float32], Tensor[(448), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(5, 4, 15), int32], Tensor[(300), int32], Tensor[(1008, 2), bool], Tensor[(2016), uint16], Tensor[(1664), bool]) {
  %814 = @func_6754() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %815 = @func_9895() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(117), float64]) */;
  %816 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %817 = %816.2;
  %818 = cast(%var_13269, dtype="uint8") /* ty=Tensor[(1664), uint8] */;
  %819 = shape_of(%817, dtype="int32") /* ty=Tensor[(1), int32] */;
  %820 = cast(%817, dtype="uint8") /* ty=Tensor[(1664), uint8] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %822 = @func_1088() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %823 = @func_4945() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %824 = cast(%var_13317, dtype="int64") /* ty=Tensor[(256), int64] */;
  %825 = cast(%var_13317, dtype="bool") /* ty=Tensor[(256), bool] */;
  %826 = reshape(%824, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), int64] */;
  %827 = reshape(%825, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), bool] */;
  %828 = @func_1615(%826, %827) /* ty=(Tensor[(8, 8, 4), uint32],) */;
  %829 = @func_7409() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %830 = cast(meta[relay.Constant][25] /* ty=Tensor[(144), bool] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %831 = cast(meta[relay.Constant][25] /* ty=Tensor[(144), bool] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %832 = reshape(%830, newshape=[2, 8, 9]) /* ty=Tensor[(2, 8, 9), bool] */;
  %833 = reshape(%831, newshape=[2, 8, 9]) /* ty=Tensor[(2, 8, 9), bool] */;
  %834 = @func_8808(%832, %833) /* ty=(Tensor[(2, 8, 9), bool], Tensor[(8, 11, 13), int8], Tensor[(2, 8, 9), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %835 = cast(%var_13269, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %836 = shape_of(%817, dtype="int32") /* ty=Tensor[(1), int32] */;
  %837 = cast(%817, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?), float32] */;
  %839 = @func_7679() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 7, 8), float64], Tensor[(448), float64]) */;
  %840 = @func_10220() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8]) */;
  %841 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %842 = cast(meta[relay.Constant][26] /* ty=Tensor[(300), int32] */, dtype="int32") /* ty=Tensor[(300), int32] */;
  %843 = reshape(%842, newshape=[5, 4, 15]) /* ty=Tensor[(5, 4, 15), int32] */;
  %844 = @func_12969(%843) /* ty=(Tensor[(5, 4, 15), int32], Tensor[(14, 7, 6), int16], Tensor[(588), int16]) */;
  %845 = cast(meta[relay.Constant][27] /* ty=Tensor[(2016), uint16] */, dtype="uint16") /* ty=Tensor[(2016), uint16] */;
  %846 = reshape(%845, newshape=[1008, 2]) /* ty=Tensor[(1008, 2), uint16] */;
  %847 = @func_12517(%846) /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), bool], Tensor[(160), float64], uint16, Tensor[(1008, 2), bool]) */;
  %848 = cast(%var_13269, dtype="float64") /* ty=Tensor[(1664), float64] */;
  %849 = sinh(%848) /* ty=Tensor[(1664), float64] */;
  %850 = cast(%var_13390, dtype="bool") /* ty=Tensor[(1664), bool] */;
  %851 = shape_of(%849, dtype="int32") /* ty=Tensor[(1), int32] */;
  %852 = cast(%849, dtype="bool") /* ty=Tensor[(1664), bool] */;
  %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?), bool] */;
  %854 = %814.0;
  %855 = %815.0;
  %856 = left_shift(%820, %821) /* ty=Tensor[(1664), uint8] */;
  %857 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
  %858 = %822.1;
  %859 = %823.0;
  %860 = %828.0;
  %861 = %829.0;
  %862 = %834.2;
  %863 = floor_mod(%837, %838) /* ty=Tensor[(1664), float32] */;
  %864 = %839.3;
  %865 = %840.2;
  %866 = %841.0;
  %867 = %844.0;
  %868 = %847.4;
  %869 = logical_or(%852, %853) /* ty=Tensor[(1664), bool] */;
  (%854, %855, %856, %857, %858, %859, %860, %var_13317, %861, %862, meta[relay.Constant][25] /* ty=Tensor[(144), bool] */, %863, %864, %865, %866, %867, meta[relay.Constant][26] /* ty=Tensor[(300), int32] */, %868, meta[relay.Constant][27] /* ty=Tensor[(2016), uint16] */, %869)
}

def @func_12517(%var_12505: Tensor[(1008, 2), uint16]) -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), bool], Tensor[(160), float64], uint16, Tensor[(1008, 2), bool]) {
  %870 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
  %871 = cast(meta[relay.Constant][28] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %872 = cast(meta[relay.Constant][29] /* ty=Tensor[(1008, 2), uint16] */, dtype="uint16") /* ty=Tensor[(1008, 2), uint16] */;
  %873 = reshape(%871, newshape=[]) /* ty=uint16 */;
  %874 = reshape(%872, newshape=[14, 9, 16]) /* ty=Tensor[(14, 9, 16), uint16] */;
  %875 = @func_8513(%873, %874) /* ty=(Tensor[(14, 9, 16), uint16], Tensor[(14, 9, 16), float32], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(160), float64]) */;
  %876 = cast(%var_12505, dtype="bool") /* ty=Tensor[(1008, 2), bool] */;
  %877 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(1008, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %878 = cast(meta[relay.Constant][29] /* ty=Tensor[(1008, 2), uint16] */, dtype="bool") /* ty=Tensor[(1008, 2), bool] */;
  %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %880 = @func_9676() /* ty=Tensor[(8, 11, 13), float32] */;
  %881 = %870.2;
  %882 = %875.4;
  %883 = less(%878, %879) /* ty=Tensor[(1008, 2), bool] */;
  (%880, %881, %882, meta[relay.Constant][28] /* ty=uint16 */, %883)
}

def @func_7803() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), int8]) {
  %890 = fn () -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), int8]) {
    %884 = @func_2856() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
    %885 = @func_5768() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), float64]) */;
    %886 = @func_3264() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %887 = %884.2;
    %888 = %885.1;
    %889 = %886.0;
    (%887, %888, %889)
  };
  %890() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), int8]) */
}

def @func_6737() -> (Tensor[(8, 11, 13), int8],) {
  %893 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %891 = @func_4007() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %892 = %891.0;
    (%892,)
  };
  %893() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_3755() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %900 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %894 = @func_1295() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %895 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %896 = @func_632() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
    %897 = %894.0;
    %898 = %895.1;
    %899 = %896.0;
    (%897, %898, %899)
  };
  %900() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_5670() -> (Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %901 = @func_3361() /* ty=(Tensor[(8, 11, 13), float64],) */;
  %902 = @func_632() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %903 = @func_3545() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %904 = @func_4905() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %905 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %906 = %901.0;
  %907 = %902.1;
  %908 = %903.0;
  %909 = %904.0;
  %910 = %905.0;
  (%906, %907, %908, %909, %910)
}

def @func_11510() -> (Tensor[(7, 16, 9), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %916 = fn () -> (Tensor[(7, 16, 9), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %911 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 16, 9), float32] */, dtype="float32") /* ty=Tensor[(7, 16, 9), float32] */;
    %912 = @func_7602() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %913 = exp(%911) /* ty=Tensor[(7, 16, 9), float32] */;
    %914 = %912.0;
    %915 = @func_7983() /* ty=Tensor[(8, 11, 13), int8] */;
    (%913, %914, %915)
  };
  %916() /* ty=(Tensor[(7, 16, 9), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_13071() -> (Tensor[(8, 11, 13), int8],) {
  %917 = @func_4265() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %918 = %917.4;
  (%918,)
}

def @func_18034() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(3, 28), float32]) {
  %919 = cast(meta[relay.Constant][31] /* ty=Tensor[(3, 28), float32] */, dtype="float32") /* ty=Tensor[(3, 28), float32] */;
  %920 = reshape(%919, newshape=[6, 7, 2]) /* ty=Tensor[(6, 7, 2), float32] */;
  %921 = @func_6287(%920) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(6, 7, 2), bool], Tensor[(8, 11, 13), int8]) */;
  %922 = @func_7722() /* ty=Tensor[(8, 11, 13), int8] */;
  %923 = %921.3;
  (%922, %923, meta[relay.Constant][31] /* ty=Tensor[(3, 28), float32] */)
}

def @func_9245() -> Tensor[(8, 11, 13), int8] {
  @func_9243() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_17039() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  %927 = fn () -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
    %924 = @func_9863() /* ty=(Tensor[(8, 11, 13), uint32],) */;
    %925 = %924.0;
    %926 = @func_10547() /* ty=Tensor[(8, 11, 13), int8] */;
    (%925, %926)
  };
  %927() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */
}

def @func_15781() -> Tensor[(8, 11, 13), int8] {
  %929 = fn () -> Tensor[(8, 11, 13), int8] {
    %928 = @func_3410() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %928.1
  };
  %929() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_13734() -> (Tensor[(8, 11, 13), int8],) {
  @func_13732() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_15984() -> (Tensor[(8, 11, 13), int8], Tensor[(588), int16]) {
  %930 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %931 = @func_15073() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(588), int16], Tensor[(150, 2), int32], Tensor[(8, 11, 13), int8]) */;
  %932 = %930.0;
  %933 = %931.3;
  (%932, %933)
}

def @func_8684() -> (Tensor[(8, 11, 13), int8],) {
  %934 = @func_4007() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %935 = %934.0;
  (%935,)
}

def @func_336() -> (Tensor[(8, 11, 13), int8],) {
  @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_8107(%var_8102: Tensor[(2, 11, 12), float64]) -> (Tensor[(2, 11, 12), float64],) {
  %936 = cast(%var_8102, dtype="float64") /* ty=Tensor[(2, 11, 12), float64] */;
  %937 = sin(%936) /* ty=Tensor[(2, 11, 12), float64] */;
  (%937,)
}

def @func_9735() -> Tensor[(8, 11, 13), int8] {
  %938 = @func_7492() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %938.1
}

def @func_9823(%var_9820: Tensor[(4, 64), int64]) -> (Tensor[(13, 6, 8), uint64], Tensor[(8, 11, 13), int8], Tensor[(4, 64), int64]) {
  %939 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 6, 8), uint64] */, dtype="uint64") /* ty=Tensor[(13, 6, 8), uint64] */;
  %940 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(13, 6, 8), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %941 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 6, 8), uint64] */, dtype="uint64") /* ty=Tensor[(13, 6, 8), uint64] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %943 = cast(%var_9820, dtype="int64") /* ty=Tensor[(4, 64), int64] */;
  %944 = reshape(%943, newshape=[4, 64]) /* ty=Tensor[(4, 64), int64] */;
  %945 = @func_8029(%944) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1, 256), int64], Tensor[(4, 64), int64]) */;
  %946 = left_shift(%941, %942) /* ty=Tensor[(13, 6, 8), uint64] */;
  %947 = %945.0;
  (%946, %947, %var_9820)
}

def @func_2167() -> (Tensor[(8, 11, 13), int8],) {
  %948 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %949 = %948.0;
  (%949,)
}

def @func_15604() -> Tensor[(8, 11, 13), int8] {
  %950 = @func_14824() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %950.2
}

def @func_17238() -> (Tensor[(8, 11, 13), int8], Tensor[(10, 8, 15), float32], Tensor[(1200), float64], Tensor[(8, 11, 13), int8], Tensor[(2240, ?), float64]) {
  %971 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(10, 8, 15), float32], Tensor[(1200), float64], Tensor[(8, 11, 13), int8], Tensor[(2240, ?), float64]) {
    %951 = @func_3821() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %952 = cast(meta[relay.Constant][34] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %953 = reshape(%952, newshape=[10, 8, 15]) /* ty=Tensor[(10, 8, 15), float64] */;
    %954 = @func_10772() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %955 = cast(meta[relay.Constant][35] /* ty=Tensor[(2240, 1), int8] */, dtype="int8") /* ty=Tensor[(2240, 1), int8] */;
    %956 = cast(meta[relay.Constant][35] /* ty=Tensor[(2240, 1), int8] */, dtype="int8") /* ty=Tensor[(2240, 1), int8] */;
    %957 = reshape(%955, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int8] */;
    %958 = reshape(%956, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int8] */;
    %959 = @func_3979(%957, %958) /* ty=(Tensor[(10, 14, 16), bool], Tensor[(8, 11, 13), int8]) */;
    %960 = %959.0;
    %961 = cast(%960, dtype="int64") /* ty=Tensor[(10, 14, 16), int64] */;
    %962 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(2240, 1), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %963 = cast(meta[relay.Constant][35] /* ty=Tensor[(2240, 1), int8] */, dtype="int64") /* ty=Tensor[(2240, 1), int64] */;
    %964 = dyn.reshape(%961, %962, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %965 = bitwise_or(%963, %964) /* ty=Tensor[(2240, ?), int64] */;
    %966 = cast(%965, dtype="float64") /* ty=Tensor[(2240, ?), float64] */;
    %967 = %951.0;
    %968 = @func_7184(%953) /* ty=Tensor[(10, 8, 15), float32] */;
    %969 = %954.0;
    %970 = asinh(%966) /* ty=Tensor[(2240, ?), float64] */;
    (%967, %968, meta[relay.Constant][34] /* ty=Tensor[(1200), float64] */, %969, %970)
  };
  %971() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(10, 8, 15), float32], Tensor[(1200), float64], Tensor[(8, 11, 13), int8], Tensor[(2240, ?), float64]) */
}

def @func_18036() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(3, 28), float32]) {
  @func_18034() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(3, 28), float32]) */
}

def @func_3362() -> (Tensor[(8, 11, 13), float64],) {
  %974 = fn () -> (Tensor[(8, 11, 13), float64],) {
    %972 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
    %973 = %972.1;
    (%973,)
  };
  %974() /* ty=(Tensor[(8, 11, 13), float64],) */
}

def @func_1639() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_1637() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_14426() -> Tensor[(8, 11, 13), int8] {
  %976 = fn () -> Tensor[(8, 11, 13), int8] {
    %975 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %975.0
  };
  %976() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_6632() -> (Tensor[(8, 11, 13), int8],) {
  %978 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %977 = @func_3315() /* ty=Tensor[(8, 11, 13), int8] */;
    (%977,)
  };
  %978() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_18626() -> Tensor[(8, 11, 13), float64] {
  @func_18624() /* ty=Tensor[(8, 11, 13), float64] */
}

def @func_3837(%var_3836: Tensor[(9, 8, 3), float32]) -> Tensor[(9, 8, 3), float32] {
  %983 = fn (%var_3827: Tensor[(9, 8, 3), float32]) -> Tensor[(9, 8, 3), float32] {
    %979 = cast(%var_3827, dtype="float32") /* ty=Tensor[(9, 8, 3), float32] */;
    %980 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(9, 8, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %981 = cast(meta[relay.Constant][36] /* ty=Tensor[(9, 8, 3), float32] */, dtype="float32") /* ty=Tensor[(9, 8, 3), float32] */;
    %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%981, %982) /* ty=Tensor[(9, 8, 3), float32] */
  };
  %983(%var_3836) /* ty=Tensor[(9, 8, 3), float32] */
}

def @func_17114() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  %992 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
    %984 = @func_2525() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %985 = @func_9657() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %986 = @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %987 = %984.0;
    %988 = @func_14995() /* ty=Tensor[(8, 11, 13), uint32] */;
    %989 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
    %990 = %985.4;
    %991 = %986.1;
    (%987, %988, %989, %990, %991)
  };
  %992() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */
}

def @func_7000() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) {
  %993 = @func_2856() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %994 = @func_1295() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %995 = %993.2;
  %996 = %994.0;
  (%995, %996)
}

def @func_6606() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32]) {
  @func_6604() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32]) */
}

def @func_5427(%var_5426: Tensor[(8, 11, 13), int8]) -> (Tensor[(8, 11, 13), bool], Tensor[(1664), float32], Tensor[(8, 11, 13), int8]) {
  %1010 = fn (%var_5403: Tensor[(8, 11, 13), int8]) -> (Tensor[(8, 11, 13), bool], Tensor[(1664), float32], Tensor[(8, 11, 13), int8]) {
    %997 = @func_2077() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
    %998 = %997.0;
    %999 = cast(%var_5403, dtype="bool") /* ty=Tensor[(8, 11, 13), bool] */;
    %1000 = shape_of(%998, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1001 = cast(%998, dtype="bool") /* ty=Tensor[(8, 11, 13), bool] */;
    %1002 = dyn.reshape(%999, %1000, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1003 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
    %1004 = %1003.2;
    %1005 = cast(%1004, dtype="float32") /* ty=Tensor[(1664), float32] */;
    %1006 = @func_239() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1007 = less_equal(%1001, %1002) /* ty=Tensor[(8, 11, 13), bool] */;
    %1008 = rsqrt(%1005) /* ty=Tensor[(1664), float32] */;
    %1009 = %1006.1;
    (%1007, %1008, %1009)
  };
  %1010(%var_5426) /* ty=(Tensor[(8, 11, 13), bool], Tensor[(1664), float32], Tensor[(8, 11, 13), int8]) */
}

def @func_633() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) {
  %1020 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) {
    %1011 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1012 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
    %1013 = @func_179() /* ty=Tensor[(8, 11, 13), int8] */;
    %1014 = cast(%1013, dtype="float32") /* ty=Tensor[(8, 11, 13), float32] */;
    %1015 = shape_of(%1012, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1016 = cast(%1012, dtype="float32") /* ty=Tensor[(8, 11, 13), float32] */;
    %1017 = dyn.reshape(%1014, %1015, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1018 = %1011.1;
    %1019 = divide(%1016, %1017) /* ty=Tensor[(8, 11, 13), float32] */;
    (%1018, %1019)
  };
  %1020() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */
}

def @func_2957() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1026 = fn () -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1021 = @func_2646() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */;
    %1022 = @func_2525() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1023 = %1021.1;
    %1024 = %1022.0;
    %1025 = @func_2759() /* ty=Tensor[(8, 11, 13), int8] */;
    (%1023, %1024, %1025)
  };
  %1026() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_13073() -> (Tensor[(8, 11, 13), int8],) {
  @func_13071() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_12099() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  %1033 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
    %1027 = @func_4462() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1028 = @func_9863() /* ty=(Tensor[(8, 11, 13), uint32],) */;
    %1029 = @func_2384() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1030 = %1027.0;
    %1031 = %1028.0;
    %1032 = %1029.0;
    (%1030, %1031, %1032)
  };
  %1033() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */
}

def @func_2236() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1034 = @func_1250() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1035 = @func_1706() /* ty=Tensor[(8, 11, 13), int8] */;
  %1036 = %1034.1;
  (%1035, %1036)
}

def @func_7602() -> (Tensor[(8, 11, 13), int8],) {
  %1037 = @func_3821() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1038 = %1037.0;
  (%1038,)
}

def @func_5254(%var_5231: int64) -> (Tensor[(8, 11, 12), float32],) {
  %1039 = cast(%var_5231, dtype="int64") /* ty=int64 */;
  %1040 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 11, 12), int64] */, dtype="int64") /* ty=Tensor[(8, 11, 12), int64] */;
  %1041 = minimum(%1039, %1040) /* ty=Tensor[(8, 11, 12), int64] */;
  %1042 = cast(%1041, dtype="float32") /* ty=Tensor[(8, 11, 12), float32] */;
  %1043 = cosh(%1042) /* ty=Tensor[(8, 11, 12), float32] */;
  (%1043,)
}

def @func_3086() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) {
  %1054 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) {
    %1044 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1045 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
    %1046 = cast(meta[relay.Constant][38] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
    %1047 = cast(meta[relay.Constant][38] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
    %1048 = reshape(%1046, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), int64] */;
    %1049 = reshape(%1047, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), int64] */;
    %1050 = @func_1171(%1048, %1049) /* ty=(Tensor[(6, 3, 15), int64],) */;
    %1051 = %1044.0;
    %1052 = %1045.0;
    %1053 = %1050.0;
    (%1051, %1052, %1053, meta[relay.Constant][38] /* ty=Tensor[(270), int64] */)
  };
  %1054() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) */
}

def @func_4266() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1062 = fn () -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1055 = @func_1637() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1056 = @func_3545() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1057 = @func_3782() /* ty=Tensor[(8, 11, 13), uint32] */;
    %1058 = %1055.1;
    %1059 = @func_3604() /* ty=Tensor[(8, 11, 13), float32] */;
    %1060 = %1056.0;
    %1061 = @func_640() /* ty=Tensor[(8, 11, 13), int8] */;
    (%1057, %1058, %1059, %1060, %1061)
  };
  %1062() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_385() -> (Tensor[(8, 11, 13), int8],) {
  %1063 = @func_179() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1063,)
}

def @func_6652(%var_6650: Tensor[(10, 10, 8), bool], %var_6651: Tensor[(10, 10, 8), bool]) -> Tensor[(10, 10, 8), bool] {
  @func_6648(%var_6650, %var_6651) /* ty=Tensor[(10, 10, 8), bool] */
}

def @func_7945() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(270), int64]) {
  @func_7943() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(270), int64]) */
}

def @func_357() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1064 = @func_239() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1065 = %1064.1;
  %1066 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1065, %1066)
}

def @func_1088() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) {
  %1067 = @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1068 = @func_751() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1069 = %1068.0;
  %1070 = cast(%1069, dtype="float32") /* ty=Tensor[(8, 11, 13), float32] */;
  %1071 = rsqrt(%1070) /* ty=Tensor[(8, 11, 13), float32] */;
  %1072 = cast(%1071, dtype="float32") /* ty=Tensor[(8, 11, 13), float32] */;
  %1073 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1074 = %1067.0;
  %1075 = erf(%1072) /* ty=Tensor[(8, 11, 13), float32] */;
  %1076 = %1073.0;
  (%1074, %1075, %1076)
}

def @func_12742() -> Tensor[(4, 64), int64] {
  %1077 = @func_6213() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(4, 64), int64]) */;
  %1077.2
}

def @func_8425() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1084 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1078 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1079 = @func_4445() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1080 = %1078.0;
    %1081 = @func_3315() /* ty=Tensor[(8, 11, 13), int8] */;
    %1082 = %1079.0;
    %1083 = @func_7722() /* ty=Tensor[(8, 11, 13), int8] */;
    (%1080, %1081, %1082, %1083)
  };
  %1084() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_752() -> (Tensor[(8, 11, 13), int8],) {
  %1087 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %1085 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1086 = %1085.2;
    (%1086,)
  };
  %1087() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_2169() -> (Tensor[(8, 11, 13), int8],) {
  @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_7857() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_7855() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_641() -> Tensor[(8, 11, 13), int8] {
  %1089 = fn () -> Tensor[(8, 11, 13), int8] {
    %1088 = @func_239() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1088.1
  };
  %1089() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_11827() -> (Tensor[(10, 8, 15), float64],) {
  @func_11825() /* ty=(Tensor[(10, 8, 15), float64],) */
}

def @func_15930() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1090 = @func_3640() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1091 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1092 = @func_9334() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1093 = %1090.0;
  %1094 = %1091.0;
  %1095 = %1092.0;
  (%1093, %1094, %1095)
}

def @func_16251() -> (Tensor[(1664), float64],) {
  %1096 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1097 = %1096.3;
  (%1097,)
}

def @func_9535() -> (Tensor[(8, 11, 13), int8],) {
  @func_9533() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_1516(%var_1514: Tensor[(8, 11, 13), int8]) -> (Tensor[(8, 11, 13), bool],) {
  @func_1513(%var_1514) /* ty=(Tensor[(8, 11, 13), bool],) */
}

def @func_4546() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1103 = fn () -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1098 = @func_3545() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1099 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
    %1100 = @func_3604() /* ty=Tensor[(8, 11, 13), float32] */;
    %1101 = %1098.0;
    %1102 = %1099.1;
    (%1100, %1101, %1102)
  };
  %1103() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_12827() -> Tensor[(8, 11, 13), int8] {
  @func_12825() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_1777() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) {
  %1104 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1105 = %1104.1;
  %1106 = cast(%1105, dtype="int8") /* ty=Tensor[(8, 11, 13), int8] */;
  %1107 = reshape(%1106, newshape=[8, 11, 13]) /* ty=Tensor[(8, 11, 13), int8] */;
  %1108 = @func_1513(%1107) /* ty=(Tensor[(8, 11, 13), bool],) */;
  %1109 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
  %1110 = %1108.0;
  (%1109, %1105, %1110)
}

def @func_2238() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_5326(%var_5309: Tensor[(1664), float32]) -> (Tensor[(1664), bool], Tensor[(8, 11, 13), int8]) {
  %1111 = @func_2591() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1112 = %1111.1;
  %1113 = cast(%1112, dtype="float32") /* ty=Tensor[(1664), float32] */;
  %1114 = log2(%1113) /* ty=Tensor[(1664), float32] */;
  %1115 = cast(%var_5309, dtype="bool") /* ty=Tensor[(1664), bool] */;
  %1116 = shape_of(%1114, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1117 = cast(%1114, dtype="bool") /* ty=Tensor[(1664), bool] */;
  %1118 = dyn.reshape(%1115, %1116, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1119 = equal(%1117, %1118) /* ty=Tensor[(1664), bool] */;
  %1120 = @func_2759() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1119, %1120)
}

def @func_7277() -> (Tensor[(8, 11, 13), int8],) {
  %1123 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %1121 = @func_4403() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1122 = %1121.0;
    (%1122,)
  };
  %1123() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_18160(%var_18080: Tensor[(256), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(256), int64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), int32]) {
  %1124 = @func_7077() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), uint32]) */;
  %1125 = @func_2490() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1126 = cast(%var_18080, dtype="int64") /* ty=Tensor[(256), int64] */;
  %1127 = reshape(%1126, newshape=[1, 256]) /* ty=Tensor[(1, 256), int64] */;
  %1128 = @func_3891(%1127) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(1, 256), int64]) */;
  %1129 = %1128.1;
  %1130 = cast(%1129, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %1131 = erf(%1130) /* ty=Tensor[(8, 8, 4), float64] */;
  %1132 = cast(%1131, dtype="int32") /* ty=Tensor[(8, 8, 4), int32] */;
  %1133 = shape_of(%1129, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1134 = cast(%1129, dtype="int32") /* ty=Tensor[(8, 8, 4), int32] */;
  %1135 = dyn.reshape(%1132, %1133, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1136 = @func_15273() /* ty=Tensor[(8, 11, 13), int8] */;
  %1137 = %1124.1;
  %1138 = %1125.0;
  %1139 = add(%1134, %1135) /* ty=Tensor[(8, 8, 4), int32] */;
  (%1136, %var_18080, %1137, %1138, %1139)
}

def @func_8686() -> (Tensor[(8, 11, 13), int8],) {
  @func_8684() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_12744() -> Tensor[(4, 64), int64] {
  @func_12742() /* ty=Tensor[(4, 64), int64] */
}

def @func_765(%var_753: Tensor[(13, 16, 8), float64]) -> (Tensor[(13, 16, 8), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1140 = cast(%var_753, dtype="float64") /* ty=Tensor[(13, 16, 8), float64] */;
  %1141 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1142 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1143 = atanh(%1140) /* ty=Tensor[(13, 16, 8), float64] */;
  %1144 = %1141.1;
  %1145 = %1142.0;
  (%1143, %1144, %1145)
}

def @func_6351() -> Tensor[(8, 11, 13), float32] {
  @func_6349() /* ty=Tensor[(8, 11, 13), float32] */
}

def @func_6495() -> (Tensor[(1664), float32],) {
  @func_6493() /* ty=(Tensor[(1664), float32],) */
}

def @func_3722() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  @func_3720() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */
}

def @func_13664() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_13662() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_16997() -> (Tensor[(8, 11, 13), int8],) {
  %1146 = @func_9960() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1147 = %1146.1;
  (%1147,)
}

def @func_16751() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(1664), float64]) {
  @func_16749() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(1664), float64]) */
}

def @func_4163(%var_4126: Tensor[(15, 10, 6), uint8], %var_4151: Tensor[(1144, 1), int8]) -> (Tensor[(15, 10, 6), uint8], Tensor[(6, 3, 15), int64], Tensor[(15, 10, 6), float32], Tensor[(8, 11, 13), bool], Tensor[(1144, 1), int8], Tensor[(8, 11, 13), int8]) {
  %1148 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 10, 6), uint8] */, dtype="uint8") /* ty=Tensor[(15, 10, 6), uint8] */;
  %1149 = shape_of(%var_4126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1150 = cast(%var_4126, dtype="uint8") /* ty=Tensor[(15, 10, 6), uint8] */;
  %1151 = dyn.reshape(%1148, %1149, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1152 = @func_3085() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) */;
  %1153 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 10, 6), uint8] */, dtype="float64") /* ty=Tensor[(15, 10, 6), float64] */;
  %1154 = atan(%1153) /* ty=Tensor[(15, 10, 6), float64] */;
  %1155 = cast(%1154, dtype="float32") /* ty=Tensor[(15, 10, 6), float32] */;
  %1156 = cast(%var_4151, dtype="int8") /* ty=Tensor[(1144, 1), int8] */;
  %1157 = reshape(%1156, newshape=[8, 11, 13]) /* ty=Tensor[(8, 11, 13), int8] */;
  %1158 = @func_1513(%1157) /* ty=(Tensor[(8, 11, 13), bool],) */;
  %1159 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1160 = right_shift(%1150, %1151) /* ty=Tensor[(15, 10, 6), uint8] */;
  %1161 = %1152.2;
  %1162 = sin(%1155) /* ty=Tensor[(15, 10, 6), float32] */;
  %1163 = %1158.0;
  %1164 = %1159.0;
  (%1160, %1161, %1162, %1163, %var_4151, %1164)
}

def @func_5230() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), uint32]) {
  %1168 = fn () -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), uint32]) {
    %1165 = @func_4794() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1166 = %1165.2;
    %1167 = @func_3782() /* ty=Tensor[(8, 11, 13), uint32] */;
    (%1166, %1167)
  };
  %1168() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), uint32]) */
}

def @func_13436() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), uint32]) {
  %1169 = @func_5541() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %1170 = %1169.0;
  %1171 = @func_3782() /* ty=Tensor[(8, 11, 13), uint32] */;
  (%1170, %1171)
}

def @func_2696() -> Tensor[(8, 11, 13), int8] {
  %1173 = fn () -> Tensor[(8, 11, 13), int8] {
    %1172 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1172.2
  };
  %1173() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_10547() -> Tensor[(8, 11, 13), int8] {
  @func_6897() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_12199(%var_12181: Tensor[(2, 7, 12), float64]) -> (Tensor[(2, 7, 12), float64], Tensor[(8, 11, 13), int8]) {
  %1174 = cast(meta[relay.Constant][40] /* ty=Tensor[(2, 7, 12), float64] */, dtype="float64") /* ty=Tensor[(2, 7, 12), float64] */;
  %1175 = shape_of(%var_12181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1176 = cast(%var_12181, dtype="float64") /* ty=Tensor[(2, 7, 12), float64] */;
  %1177 = dyn.reshape(%1174, %1175, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1178 = @func_7492() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1179 = floor_mod(%1176, %1177) /* ty=Tensor[(2, 7, 12), float64] */;
  %1180 = %1178.2;
  (%1179, %1180)
}

def @func_2145() -> (Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1181 = @func_2077() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1182 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1183 = @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1184 = %1181.1;
  %1185 = %1182.0;
  %1186 = %1183.0;
  (%1184, %1185, %1186)
}

def @func_424() -> (Tensor[(8, 11, 13), int8],) {
  %1189 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %1187 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1188 = %1187.0;
    (%1188,)
  };
  %1189() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_18996() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_18994() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_9961() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1194 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1190 = @func_7492() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1191 = @func_2421() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
    %1192 = %1190.2;
    %1193 = %1191.0;
    (%1192, %1193)
  };
  %1194() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_17075() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
  %1195 = @func_2384() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1196 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1197 = @func_640() /* ty=Tensor[(8, 11, 13), int8] */;
  %1198 = %1195.0;
  %1199 = @func_8329() /* ty=Tensor[(8, 11, 13), int8] */;
  %1200 = %1196.2;
  (%1197, %1198, %1199, %1200)
}

def @func_240() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1203 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1201 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
    %1202 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
    (%1201, %1202)
  };
  %1203() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_12202(%var_12200: Tensor[(2, 7, 12), float64]) -> (Tensor[(2, 7, 12), float64], Tensor[(8, 11, 13), int8]) {
  @func_12199(%var_12200) /* ty=(Tensor[(2, 7, 12), float64], Tensor[(8, 11, 13), int8]) */
}

def @func_18163(%var_18161: Tensor[(256), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(256), int64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), int32]) {
  @func_18160(%var_18161) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(256), int64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), int32]) */
}

def @func_12998() -> (Tensor[(8, 11, 13), int8],) {
  %1206 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %1204 = @func_6229() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1205 = %1204.0;
    (%1205,)
  };
  %1206() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_18517(%var_18515: Tensor[(672), bool]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(12, 14, 4), float32], Tensor[(672), bool]) {
  @func_18514(%var_18515) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(12, 14, 4), float32], Tensor[(672), bool]) */
}

def @func_4463() -> (Tensor[(8, 11, 13), int8],) {
  %1209 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %1207 = @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1208 = %1207.1;
    (%1208,)
  };
  %1209() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_7983() -> Tensor[(8, 11, 13), int8] {
  %1210 = @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1210.0
}

def @func_5968() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_5966() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_2283() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1664), float64]) {
  %1211 = @func_1295() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1212 = @func_2077() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1213 = @func_2077() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1214 = %1211.0;
  %1215 = %1212.1;
  %1216 = %1213.1;
  (%1214, %1215, %1216)
}

def @func_4905() -> (Tensor[(8, 11, 13), int8],) {
  %1217 = @func_4209() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1217,)
}

def @func_8085() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), float32]) {
  @func_8083() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), float32]) */
}

def @func_1417() -> Tensor[(8, 11, 13), uint32] {
  %1218 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1219 = %1218.1;
  %1220 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1221 = %1220.0;
  %1222 = cast(%1221, dtype="uint32") /* ty=Tensor[(8, 11, 13), uint32] */;
  %1223 = shape_of(%1219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1224 = cast(%1219, dtype="uint32") /* ty=Tensor[(8, 11, 13), uint32] */;
  %1225 = dyn.reshape(%1222, %1223, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_and(%1224, %1225) /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_16749() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(1664), float64]) {
  %1226 = @func_8424() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1227 = @func_4545() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1228 = @func_7906() /* ty=(Tensor[(1664), float64],) */;
  %1229 = %1226.0;
  %1230 = %1227.0;
  %1231 = %1228.0;
  (%1229, %1230, %1231)
}

def @func_3783() -> Tensor[(8, 11, 13), uint32] {
  %1232 = fn () -> Tensor[(8, 11, 13), uint32] {
    @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */
  };
  %1232() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_16931() -> Tensor[(8, 11, 13), int8] {
  %1233 = @func_11753() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1233.1
}

def @func_15986() -> (Tensor[(8, 11, 13), int8], Tensor[(588), int16]) {
  @func_15984() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(588), int16]) */
}

def @func_2078() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
  %1238 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
    %1234 = @func_423() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1235 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
    %1236 = %1234.0;
    %1237 = %1235.3;
    (%1236, %1237)
  };
  %1238() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */
}

def @func_1619(%var_1617: Tensor[(8, 8, 4), int64], %var_1618: Tensor[(8, 8, 4), bool]) -> (Tensor[(8, 8, 4), uint32],) {
  @func_1615(%var_1617, %var_1618) /* ty=(Tensor[(8, 8, 4), uint32],) */
}

def @func_17077() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
  @func_17075() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */
}

def @func_17671() -> (Tensor[(8, 11, 13), int8],) {
  %1239 = @func_2856() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %1240 = %1239.0;
  (%1240,)
}

def @func_17624() -> Tensor[(3, 14, 14), uint8] {
  %1247 = fn () -> Tensor[(3, 14, 14), uint8] {
    %1241 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 14, 14), float64] */, dtype="float64") /* ty=Tensor[(3, 14, 14), float64] */;
    %1242 = asin(%1241) /* ty=Tensor[(3, 14, 14), float64] */;
    %1243 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 14, 14), float64] */, dtype="uint8") /* ty=Tensor[(3, 14, 14), uint8] */;
    %1244 = shape_of(%1242, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1245 = cast(%1242, dtype="uint8") /* ty=Tensor[(3, 14, 14), uint8] */;
    %1246 = dyn.reshape(%1243, %1244, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    minimum(%1245, %1246) /* ty=Tensor[(3, 14, 14), uint8] */
  };
  %1247() /* ty=Tensor[(3, 14, 14), uint8] */
}

def @func_7985() -> Tensor[(8, 11, 13), int8] {
  @func_7983() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_10239(%var_10238: Tensor[(15, 1, 10), float32]) -> Tensor[(15, 1, 10), float32] {
  %1249 = fn (%var_10228: Tensor[(15, 1, 10), float32]) -> Tensor[(15, 1, 10), float32] {
    %1248 = cast(%var_10228, dtype="float32") /* ty=Tensor[(15, 1, 10), float32] */;
    atan(%1248) /* ty=Tensor[(15, 1, 10), float32] */
  };
  %1249(%var_10238) /* ty=Tensor[(15, 1, 10), float32] */
}

def @func_9802() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1253 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1250 = @func_5966() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1251 = %1250.0;
    %1252 = @func_4209() /* ty=Tensor[(8, 11, 13), int8] */;
    (%1251, %1252)
  };
  %1253() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_4907() -> (Tensor[(8, 11, 13), int8],) {
  @func_4905() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_14262(%var_14261: Tensor[(4, 11, 2), float32]) -> (Tensor[(4, 11, 2), float32],) {
  %1256 = fn (%var_14241: Tensor[(4, 11, 2), float32]) -> (Tensor[(4, 11, 2), float32],) {
    %1254 = cast(%var_14241, dtype="float32") /* ty=Tensor[(4, 11, 2), float32] */;
    %1255 = erf(%1254) /* ty=Tensor[(4, 11, 2), float32] */;
    (%1255,)
  };
  %1256(%var_14261) /* ty=(Tensor[(4, 11, 2), float32],) */
}

def @func_14952() -> Tensor[(8, 11, 13), float64] {
  %1257 = @func_13562() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1257.0
}

def @func_15273() -> Tensor[(8, 11, 13), int8] {
  %1258 = @func_14167() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %1258.1
}

def @func_18875() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(270), int64]) {
  %1259 = @func_6229() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1260 = @func_3085() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) */;
  %1261 = %1259.1;
  %1262 = @func_2759() /* ty=Tensor[(8, 11, 13), int8] */;
  %1263 = %1260.3;
  (%1261, %1262, %1263)
}

def @func_10681() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) {
  %1264 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1265 = @func_8083() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), float32]) */;
  %1266 = @func_3507() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1267 = %1264.1;
  %1268 = %1265.1;
  %1269 = %1266.0;
  (%1267, %1268, %1269)
}

def @func_3139() -> Tensor[(8, 11, 13), int8] {
  %1270 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
  %1270.1
}

def @func_15565(%var_15563: Tensor[(1664), float64], %var_15564: Tensor[(44), float32]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1, 11, 4), float32], Tensor[(44), float32], Tensor[(8, 11, 13), int8], Tensor[(3, 12, 10), bool], Tensor[(8, 11, 13), int8]) {
  %1292 = fn (%var_15528: Tensor[(1664), float64], %var_15535: Tensor[(44), float32]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1, 11, 4), float32], Tensor[(44), float32], Tensor[(8, 11, 13), int8], Tensor[(3, 12, 10), bool], Tensor[(8, 11, 13), int8]) {
    %1271 = @func_1685() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1272 = cast(%var_15528, dtype="float64") /* ty=Tensor[(1664), float64] */;
    %1273 = reshape(%1272, newshape=[1664]) /* ty=Tensor[(1664), float64] */;
    %1274 = @func_4369(%1273) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), uint64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1275 = cast(%var_15535, dtype="float32") /* ty=Tensor[(44), float32] */;
    %1276 = reshape(%1275, newshape=[1, 11, 4]) /* ty=Tensor[(1, 11, 4), float32] */;
    %1277 = @func_12332(%1276) /* ty=(Tensor[(1, 11, 4), float32],) */;
    %1278 = @func_3720() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */;
    %1279 = cast(meta[relay.Constant][42] /* ty=Tensor[(360), uint8] */, dtype="uint8") /* ty=Tensor[(360), uint8] */;
    %1280 = reshape(%1279, newshape=[3, 12, 10]) /* ty=Tensor[(3, 12, 10), uint8] */;
    %1281 = @func_6851(%1280) /* ty=Tensor[(3, 12, 10), uint8] */;
    %1282 = cast(meta[relay.Constant][42] /* ty=Tensor[(360), uint8] */, dtype="bool") /* ty=Tensor[(360), bool] */;
    %1283 = shape_of(%1281, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1284 = cast(%1281, dtype="bool") /* ty=Tensor[(3, 12, 10), bool] */;
    %1285 = dyn.reshape(%1282, %1283, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1286 = %1271.1;
    %1287 = %1274.4;
    %1288 = %1277.0;
    %1289 = %1278.2;
    %1290 = logical_and(%1284, %1285) /* ty=Tensor[(3, 12, 10), bool] */;
    %1291 = @func_4209() /* ty=Tensor[(8, 11, 13), int8] */;
    (%1286, %1287, %var_15528, %1288, %var_15535, %1289, %1290, %1291)
  };
  %1292(%var_15563, %var_15564) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1, 11, 4), float32], Tensor[(44), float32], Tensor[(8, 11, 13), int8], Tensor[(3, 12, 10), bool], Tensor[(8, 11, 13), int8]) */
}

def @func_10183() -> Tensor[(8, 11, 13), float64] {
  @func_10181() /* ty=Tensor[(8, 11, 13), float64] */
}

def @func_8329() -> Tensor[(8, 11, 13), int8] {
  %1293 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1293.0
}

def @func_19356() -> (Tensor[(8, 11, 13), float32],) {
  %1296 = fn () -> (Tensor[(8, 11, 13), float32],) {
    %1294 = @func_2421() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
    %1295 = %1294.1;
    (%1295,)
  };
  %1296() /* ty=(Tensor[(8, 11, 13), float32],) */
}

def @func_1171(%var_1166: Tensor[(6, 3, 15), int64], %var_1167: Tensor[(6, 3, 15), int64]) -> (Tensor[(6, 3, 15), int64],) {
  %1297 = cast(%var_1167, dtype="int64") /* ty=Tensor[(6, 3, 15), int64] */;
  %1298 = shape_of(%var_1166, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1299 = cast(%var_1166, dtype="int64") /* ty=Tensor[(6, 3, 15), int64] */;
  %1300 = dyn.reshape(%1297, %1298, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1301 = bitwise_or(%1299, %1300) /* ty=Tensor[(6, 3, 15), int64] */;
  (%1301,)
}

def @func_9181() -> (Tensor[(8, 11, 13), float32],) {
  @func_9179() /* ty=(Tensor[(8, 11, 13), float32],) */
}

def @func_3213() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  @func_3211() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */
}

def @func_3211() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  %1302 = @func_423() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1303 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
  %1304 = %1302.0;
  (%1303, %1304)
}

def @func_6147() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1, 750), float64], Tensor[(8, 11, 13), int8]) {
  @func_6145() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1, 750), float64], Tensor[(8, 11, 13), int8]) */
}

def @func_14825() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1312 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1305 = @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1306 = @func_8886() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1307 = @func_4007() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1308 = %1305.0;
    %1309 = @func_10425() /* ty=Tensor[(8, 11, 13), float32] */;
    %1310 = %1306.3;
    %1311 = %1307.0;
    (%1308, %1309, %1310, %1311)
  };
  %1312() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_12022() -> Tensor[(8, 11, 13), int8] {
  @func_12020() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_7723() -> Tensor[(8, 11, 13), int8] {
  %1314 = fn () -> Tensor[(8, 11, 13), int8] {
    %1313 = @func_6631() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1313.0
  };
  %1314() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_9291() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_9289() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_8888() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_8886() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_7582() -> Tensor[(8, 11, 13), int8] {
  @func_219() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_11066() -> (Tensor[(8, 11, 13), int8],) {
  %1317 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %1315 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1316 = %1315.0;
    (%1316,)
  };
  %1317() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_8340() -> (Tensor[(8, 11, 13), int8],) {
  %1318 = @func_4905() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1319 = %1318.0;
  (%1319,)
}

def @func_17165(%var_17163: Tensor[(195), float64], %var_17164: Tensor[(264), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(195), float64], Tensor[(264), float64], Tensor[(8, 11, 13), int8], Tensor[(2, 11, 12), float64]) {
  %1333 = fn (%var_17136: Tensor[(195), float64], %var_17142: Tensor[(264), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(195), float64], Tensor[(264), float64], Tensor[(8, 11, 13), int8], Tensor[(2, 11, 12), float64]) {
    %1320 = @func_10758() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(12, 5, 7), float64], Tensor[(420), float64]) */;
    %1321 = cast(%var_17136, dtype="float64") /* ty=Tensor[(195), float64] */;
    %1322 = reshape(%1321, newshape=[1, 195]) /* ty=Tensor[(1, 195), float64] */;
    %1323 = @func_14211(%1322) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(3, 13, 5), float64], Tensor[(1, 195), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1324 = cast(%var_17142, dtype="float64") /* ty=Tensor[(264), float64] */;
    %1325 = reshape(%1324, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), float64] */;
    %1326 = @func_8107(%1325) /* ty=(Tensor[(2, 11, 12), float64],) */;
    %1327 = %1326.0;
    %1328 = cast(%1327, dtype="float64") /* ty=Tensor[(2, 11, 12), float64] */;
    %1329 = %1320.0;
    %1330 = %1323.3;
    %1331 = @func_16931() /* ty=Tensor[(8, 11, 13), int8] */;
    %1332 = log(%1328) /* ty=Tensor[(2, 11, 12), float64] */;
    (%1329, %1330, %var_17136, %var_17142, %1331, %1332)
  };
  %1333(%var_17163, %var_17164) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(195), float64], Tensor[(264), float64], Tensor[(8, 11, 13), int8], Tensor[(2, 11, 12), float64]) */
}

def @func_18593() -> Tensor[(8, 11, 13), int8] {
  @func_18591() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_5492() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float32]) {
  %1340 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float32]) {
    %1334 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
    %1335 = @func_2283() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1664), float64]) */;
    %1336 = %1335.1;
    %1337 = cast(%1336, dtype="float32") /* ty=Tensor[(1664), float32] */;
    %1338 = %1334.1;
    %1339 = acos(%1337) /* ty=Tensor[(1664), float32] */;
    (%1338, %1339)
  };
  %1340() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float32]) */
}

def @func_17940() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8]) {
  %1341 = @func_14917() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1342 = @func_13864() /* ty=(Tensor[(8, 11, 13), float64],) */;
  %1343 = %1341.0;
  %1344 = %1342.0;
  %1345 = @func_15448() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1343, %1344, %1345)
}

def @func_3822() -> (Tensor[(8, 11, 13), int8],) {
  %1348 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %1346 = @func_1088() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
    %1347 = %1346.0;
    (%1347,)
  };
  %1348() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_2384() -> (Tensor[(8, 11, 13), int8],) {
  %1349 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1350 = %1349.0;
  (%1350,)
}

def @func_9141(%var_9139: Tensor[(14, 7, 6), int16], %var_9140: Tensor[(14, 7, 6), int16]) -> (Tensor[(14, 7, 6), int16], Tensor[(8, 11, 13), int8], Tensor[(900), uint8]) {
  %1360 = fn (%var_9120: Tensor[(14, 7, 6), int16], %var_9121: Tensor[(14, 7, 6), int16]) -> (Tensor[(14, 7, 6), int16], Tensor[(8, 11, 13), int8], Tensor[(900), uint8]) {
    %1351 = cast(%var_9121, dtype="int16") /* ty=Tensor[(14, 7, 6), int16] */;
    %1352 = shape_of(%var_9120, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1353 = cast(%var_9120, dtype="int16") /* ty=Tensor[(14, 7, 6), int16] */;
    %1354 = dyn.reshape(%1351, %1352, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1355 = cast(meta[relay.Constant][43] /* ty=Tensor[(900), uint8] */, dtype="uint8") /* ty=Tensor[(900), uint8] */;
    %1356 = reshape(%1355, newshape=[900]) /* ty=Tensor[(900), uint8] */;
    %1357 = @func_6461(%1356) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(15, 10, 6), float32], Tensor[(900), uint8], Tensor[(8, 11, 13), int8]) */;
    %1358 = right_shift(%1353, %1354) /* ty=Tensor[(14, 7, 6), int16] */;
    %1359 = %1357.0;
    (%1358, %1359, meta[relay.Constant][43] /* ty=Tensor[(900), uint8] */)
  };
  %1360(%var_9139, %var_9140) /* ty=(Tensor[(14, 7, 6), int16], Tensor[(8, 11, 13), int8], Tensor[(900), uint8]) */
}

def @func_6290(%var_6288: Tensor[(6, 7, 2), float32]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(6, 7, 2), bool], Tensor[(8, 11, 13), int8]) {
  @func_6287(%var_6288) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(6, 7, 2), bool], Tensor[(8, 11, 13), int8]) */
}

def @func_13896() -> Tensor[(8, 11, 13), float32] {
  %1361 = fn () -> Tensor[(8, 11, 13), float32] {
    @func_3604() /* ty=Tensor[(8, 11, 13), float32] */
  };
  %1361() /* ty=Tensor[(8, 11, 13), float32] */
}

def @func_3982(%var_3980: Tensor[(10, 14, 16), int8], %var_3981: Tensor[(10, 14, 16), int8]) -> (Tensor[(10, 14, 16), bool], Tensor[(8, 11, 13), int8]) {
  %1369 = fn (%var_3954: Tensor[(10, 14, 16), int8], %var_3955: Tensor[(10, 14, 16), int8]) -> (Tensor[(10, 14, 16), bool], Tensor[(8, 11, 13), int8]) {
    %1362 = cast(%var_3955, dtype="bool") /* ty=Tensor[(10, 14, 16), bool] */;
    %1363 = shape_of(%var_3954, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1364 = cast(%var_3954, dtype="bool") /* ty=Tensor[(10, 14, 16), bool] */;
    %1365 = dyn.reshape(%1362, %1363, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1366 = @func_3507() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1367 = greater_equal(%1364, %1365) /* ty=Tensor[(10, 14, 16), bool] */;
    %1368 = %1366.0;
    (%1367, %1368)
  };
  %1369(%var_3980, %var_3981) /* ty=(Tensor[(10, 14, 16), bool], Tensor[(8, 11, 13), int8]) */
}

def @func_16394() -> Tensor[(8, 11, 13), float64] {
  @func_16392() /* ty=Tensor[(8, 11, 13), float64] */
}

def @func_9737() -> Tensor[(8, 11, 13), int8] {
  @func_9735() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_2669() -> Tensor[(8, 11, 13), int8] {
  %1371 = fn () -> Tensor[(8, 11, 13), int8] {
    %1370 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1370.0
  };
  %1371() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_7410() -> (Tensor[(8, 11, 13), int8],) {
  %1373 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %1372 = @func_6377() /* ty=Tensor[(8, 11, 13), int8] */;
    (%1372,)
  };
  %1373() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_2647() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) {
  %1377 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) {
    %1374 = @func_1295() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1375 = %1374.0;
    %1376 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
    (%1375, %1376)
  };
  %1377() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */
}

def @func_540() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1383 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1378 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1379 = @func_423() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1380 = %1378.1;
    %1381 = @func_179() /* ty=Tensor[(8, 11, 13), int8] */;
    %1382 = %1379.0;
    (%1380, %1381, %1382)
  };
  %1383() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_6250() -> Tensor[(8, 11, 13), int8] {
  %1385 = fn () -> Tensor[(8, 11, 13), int8] {
    %1384 = @func_1295() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1384.0
  };
  %1385() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_19089() -> Tensor[(8, 11, 13), uint32] {
  @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_885() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) {
  @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */
}

def @func_3021() -> Tensor[(8, 11, 13), float64] {
  %1386 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %1386.0
}

def @func_12145() -> (Tensor[(8, 11, 13), int8],) {
  @func_12143() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_8270() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) {
  %1393 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) {
    %1387 = @func_2167() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1388 = @func_423() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1389 = @func_954() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
    %1390 = %1387.0;
    %1391 = %1388.0;
    %1392 = %1389.2;
    (%1390, %1391, %1392)
  };
  %1393() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */
}

def @func_11825() -> (Tensor[(10, 8, 15), float64],) {
  %1394 = @func_7038() /* ty=Tensor[(10, 8, 15), float64] */;
  (%1394,)
}

def @func_9864() -> (Tensor[(8, 11, 13), uint32],) {
  %1397 = fn () -> (Tensor[(8, 11, 13), uint32],) {
    %1395 = @func_8459() /* ty=(Tensor[(8, 11, 13), uint32],) */;
    %1396 = %1395.0;
    (%1396,)
  };
  %1397() /* ty=(Tensor[(8, 11, 13), uint32],) */
}

def @func_10181() -> Tensor[(8, 11, 13), float64] {
  %1398 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
  %1398.1
}

def @func_11624() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_11622() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_11289() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) {
  %1399 = @func_4265() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1400 = @func_5768() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), float64]) */;
  %1401 = @func_7983() /* ty=Tensor[(8, 11, 13), int8] */;
  %1402 = %1399.4;
  %1403 = %1400.2;
  (%1401, %1402, %1403)
}

def @func_17278() -> (Tensor[(8, 11, 13), int8], Tensor[(12, 14, 4), float32], Tensor[(672, 1), bool]) {
  %1404 = cast(meta[relay.Constant][44] /* ty=Tensor[(672, 1), bool] */, dtype="bool") /* ty=Tensor[(672, 1), bool] */;
  %1405 = cast(meta[relay.Constant][44] /* ty=Tensor[(672, 1), bool] */, dtype="bool") /* ty=Tensor[(672, 1), bool] */;
  %1406 = reshape(%1404, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), bool] */;
  %1407 = reshape(%1405, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), bool] */;
  %1408 = @func_11558(%1406, %1407) /* ty=(Tensor[(12, 14, 4), float32],) */;
  %1409 = @func_3139() /* ty=Tensor[(8, 11, 13), int8] */;
  %1410 = %1408.0;
  (%1409, %1410, meta[relay.Constant][44] /* ty=Tensor[(672, 1), bool] */)
}

def @func_18565() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_18563() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @main(%var_19481: Tensor[(4, 4, 14), uint64], %var_19482: Tensor[(4, 4, 14), uint64]) -> Tensor[(4, 4, 14), bool] {
  %1411 = cast(%var_19482, dtype="bool") /* ty=Tensor[(4, 4, 14), bool] */;
  %1412 = shape_of(%var_19481, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1413 = cast(%var_19481, dtype="bool") /* ty=Tensor[(4, 4, 14), bool] */;
  %1414 = dyn.reshape(%1411, %1412, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1413, %1414) /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_1707() -> Tensor[(8, 11, 13), int8] {
  %1416 = fn () -> Tensor[(8, 11, 13), int8] {
    %1415 = @func_1685() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1415.0
  };
  %1416() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_6754() -> (Tensor[(8, 11, 13), int8],) {
  %1417 = @func_6736() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1418 = %1417.0;
  (%1418,)
}

def @func_180() -> Tensor[(8, 11, 13), int8] {
  %1423 = fn () -> Tensor[(8, 11, 13), int8] {
    %1419 = cast(meta[relay.Constant][46] /* ty=Tensor[(8, 11, 13), int8] */, dtype="int8") /* ty=Tensor[(8, 11, 13), int8] */;
    %1420 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(8, 11, 13), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1421 = cast(meta[relay.Constant][45] /* ty=Tensor[(8, 11, 13), int8] */, dtype="int8") /* ty=Tensor[(8, 11, 13), int8] */;
    %1422 = dyn.reshape(%1419, %1420, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    add(%1421, %1422) /* ty=Tensor[(8, 11, 13), int8] */
  };
  %1423() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_3509() -> (Tensor[(8, 11, 13), int8],) {
  @func_3507() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_13777() -> (Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
  %1430 = fn () -> (Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) {
    %1424 = @func_9863() /* ty=(Tensor[(8, 11, 13), uint32],) */;
    %1425 = @func_5966() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1426 = @func_11237() /* ty=Tensor[(8, 11, 13), bool] */;
    %1427 = @func_6249() /* ty=Tensor[(8, 11, 13), int8] */;
    %1428 = %1424.0;
    %1429 = %1425.0;
    (%1426, %1427, %1428, %1429)
  };
  %1430() /* ty=(Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */
}

def @func_4372(%var_4370: Tensor[(1664), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(1664), uint64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_4369(%var_4370) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), uint64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_15748() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1435 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1431 = @func_2525() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1432 = @func_6213() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 8, 4), uint32], Tensor[(4, 64), int64]) */;
    %1433 = %1431.0;
    %1434 = %1432.0;
    (%1433, %1434)
  };
  %1435() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_6756() -> (Tensor[(8, 11, 13), int8],) {
  @func_6754() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_3445() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1438 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1436 = @func_3004() /* ty=Tensor[(8, 11, 13), int8] */;
    %1437 = @func_640() /* ty=Tensor[(8, 11, 13), int8] */;
    (%1436, %1437)
  };
  %1438() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_17606() -> Tensor[(8, 11, 13), uint32] {
  @func_17604() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_11237() -> Tensor[(8, 11, 13), bool] {
  %1439 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
  %1439.2
}

def @func_10427() -> Tensor[(8, 11, 13), float32] {
  @func_10425() /* ty=Tensor[(8, 11, 13), float32] */
}

def @func_12825() -> Tensor[(8, 11, 13), int8] {
  %1440 = @func_6229() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1440.1
}

def @func_16031() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_16029() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_13563() -> (Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1447 = fn () -> (Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1441 = @func_11345() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(1664), bool], Tensor[(1664), float32]) */;
    %1442 = @func_6687() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1443 = @func_8727() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1444 = %1441.0;
    %1445 = %1442.0;
    %1446 = %1443.0;
    (%1444, %1445, %1446)
  };
  %1447() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_5868() -> (Tensor[(8, 11, 13), int8],) {
  %1449 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %1448 = @func_2668() /* ty=Tensor[(8, 11, 13), int8] */;
    (%1448,)
  };
  %1449() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_13233() -> (Tensor[(8, 11, 13), int8], Tensor[(10, 8, 15), float64]) {
  %1453 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(10, 8, 15), float64]) {
    %1450 = @func_11825() /* ty=(Tensor[(10, 8, 15), float64],) */;
    %1451 = @func_10547() /* ty=Tensor[(8, 11, 13), int8] */;
    %1452 = %1450.0;
    (%1451, %1452)
  };
  %1453() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(10, 8, 15), float64]) */
}

def @func_17453() -> (Tensor[(8, 11, 13), int8],) {
  %1456 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %1454 = @func_16054() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1455 = %1454.0;
    (%1455,)
  };
  %1456() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_16924() -> Tensor[(8, 11, 13), float32] {
  @func_16922() /* ty=Tensor[(8, 11, 13), float32] */
}

def @func_6897() -> Tensor[(8, 11, 13), int8] {
  %1457 = @func_3507() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1457.0
}

def @func_12073() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) {
  %1462 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) {
    %1458 = @func_2490() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1459 = @func_6604() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32]) */;
    %1460 = %1458.2;
    %1461 = %1459.3;
    (%1460, %1461)
  };
  %1462() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */
}

def @func_1419() -> Tensor[(8, 11, 13), uint32] {
  @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_5257(%var_5255: int64) -> (Tensor[(8, 11, 12), float32],) {
  @func_5254(%var_5255) /* ty=(Tensor[(8, 11, 12), float32],) */
}

def @func_11347() -> (Tensor[(8, 11, 13), float64], Tensor[(1664), bool], Tensor[(1664), float32]) {
  @func_11345() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(1664), bool], Tensor[(1664), float32]) */
}

def @func_1779() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) {
  @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */
}

def @func_4404() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1467 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1463 = @func_3188() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8]) */;
    %1464 = @func_1352() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1465 = %1463.2;
    %1466 = %1464.0;
    (%1465, %1466)
  };
  %1467() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_512() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_510() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_3316() -> Tensor[(8, 11, 13), int8] {
  %1469 = fn () -> Tensor[(8, 11, 13), int8] {
    %1468 = @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1468.1
  };
  %1469() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_3545() -> (Tensor[(8, 11, 13), int8],) {
  %1470 = @func_179() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1470,)
}

def @func_3005() -> Tensor[(8, 11, 13), int8] {
  %1472 = fn () -> Tensor[(8, 11, 13), int8] {
    %1471 = @func_1806() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */;
    %1471.0
  };
  %1472() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_17557() -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8]) {
  %1478 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8]) {
    %1473 = @func_9289() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1474 = @func_2591() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1475 = %1473.0;
    %1476 = %1474.1;
    %1477 = @func_6377() /* ty=Tensor[(8, 11, 13), int8] */;
    (%1475, %1476, %1477)
  };
  %1478() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8]) */
}

def @func_15502() -> (Tensor[(8, 11, 13), float32],) {
  %1480 = fn () -> (Tensor[(8, 11, 13), float32],) {
    %1479 = @func_9676() /* ty=Tensor[(8, 11, 13), float32] */;
    (%1479,)
  };
  %1480() /* ty=(Tensor[(8, 11, 13), float32],) */
}

def @func_9533() -> (Tensor[(8, 11, 13), int8],) {
  %1481 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1482 = %1481.1;
  (%1482,)
}

def @func_14169() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) {
  @func_14167() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */
}

def @func_1939() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8]) {
  %1497 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8]) {
    %1483 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1484 = @func_632() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
    %1485 = @func_1250() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1486 = %1485.0;
    %1487 = cast(%1486, dtype="float32") /* ty=Tensor[(8, 11, 13), float32] */;
    %1488 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
    %1489 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
    %1490 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1491 = %1483.1;
    %1492 = %1484.0;
    %1493 = acosh(%1487) /* ty=Tensor[(8, 11, 13), float32] */;
    %1494 = %1488.1;
    %1495 = %1489.3;
    %1496 = %1490.0;
    (%1491, %1492, %1493, %1494, %1495, %1496)
  };
  %1497() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8]) */
}

def @func_10126() -> (Tensor[(8, 11, 13), float32], Tensor[(2240), uint64]) {
  %1510 = fn () -> (Tensor[(8, 11, 13), float32], Tensor[(2240), uint64]) {
    %1498 = cast(meta[relay.Constant][47] /* ty=Tensor[(2240), int8] */, dtype="int8") /* ty=Tensor[(2240), int8] */;
    %1499 = cast(meta[relay.Constant][47] /* ty=Tensor[(2240), int8] */, dtype="int8") /* ty=Tensor[(2240), int8] */;
    %1500 = reshape(%1498, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int8] */;
    %1501 = reshape(%1499, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int8] */;
    %1502 = @func_3979(%1500, %1501) /* ty=(Tensor[(10, 14, 16), bool], Tensor[(8, 11, 13), int8]) */;
    %1503 = %1502.0;
    %1504 = cast(%1503, dtype="uint64") /* ty=Tensor[(10, 14, 16), uint64] */;
    %1505 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(2240), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1506 = cast(meta[relay.Constant][47] /* ty=Tensor[(2240), int8] */, dtype="uint64") /* ty=Tensor[(2240), uint64] */;
    %1507 = dyn.reshape(%1504, %1505, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %1508 = @func_3604() /* ty=Tensor[(8, 11, 13), float32] */;
    %1509 = multiply(%1506, %1507) /* ty=Tensor[(2240), uint64] */;
    (%1508, %1509)
  };
  %1510() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(2240), uint64]) */
}

def @func_7038() -> Tensor[(10, 8, 15), float64] {
  %1511 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 8, 15), float64] */, dtype="float64") /* ty=Tensor[(10, 8, 15), float64] */;
  atanh(%1511) /* ty=Tensor[(10, 8, 15), float64] */
}

def @func_12693() -> (Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_12691() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_17673() -> (Tensor[(8, 11, 13), int8],) {
  @func_17671() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_13836() -> (Tensor[(8, 11, 13), int8],) {
  @func_13834() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_4447() -> (Tensor[(8, 11, 13), int8],) {
  @func_4445() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_9970(%var_9964: Tensor[(12, 5, 7), float64]) -> (Tensor[(12, 5, 7), float64], Tensor[(12, 5, 7), float64]) {
  %1512 = cast(%var_9964, dtype="float64") /* ty=Tensor[(12, 5, 7), float64] */;
  %1513 = cast(%var_9964, dtype="float64") /* ty=Tensor[(12, 5, 7), float64] */;
  %1514 = atan(%1512) /* ty=Tensor[(12, 5, 7), float64] */;
  %1515 = asinh(%1513) /* ty=Tensor[(12, 5, 7), float64] */;
  (%1514, %1515)
}

def @func_12650() -> Tensor[(8, 11, 13), uint32] {
  %1517 = fn () -> Tensor[(8, 11, 13), uint32] {
    %1516 = @func_2646() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */;
    %1516.1
  };
  %1517() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_9973(%var_9971: Tensor[(12, 5, 7), float64]) -> (Tensor[(12, 5, 7), float64], Tensor[(12, 5, 7), float64]) {
  @func_9970(%var_9971) /* ty=(Tensor[(12, 5, 7), float64], Tensor[(12, 5, 7), float64]) */
}

def @func_13454() -> (Tensor[(8, 11, 13), int8],) {
  @func_13452() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_19060(%var_19058: uint16, %var_19059: Tensor[(2016), uint16]) -> (Tensor[(8, 11, 13), int8], Tensor[(14, 9, 16), uint16], uint16, Tensor[(2016), uint16]) {
  %1526 = fn (%var_19051: uint16, %var_19052: Tensor[(2016), uint16]) -> (Tensor[(8, 11, 13), int8], Tensor[(14, 9, 16), uint16], uint16, Tensor[(2016), uint16]) {
    %1518 = @func_3545() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1519 = cast(%var_19051, dtype="uint16") /* ty=uint16 */;
    %1520 = cast(%var_19052, dtype="uint16") /* ty=Tensor[(2016), uint16] */;
    %1521 = reshape(%1519, newshape=[]) /* ty=uint16 */;
    %1522 = reshape(%1520, newshape=[14, 9, 16]) /* ty=Tensor[(14, 9, 16), uint16] */;
    %1523 = @func_8513(%1521, %1522) /* ty=(Tensor[(14, 9, 16), uint16], Tensor[(14, 9, 16), float32], Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(160), float64]) */;
    %1524 = %1518.0;
    %1525 = %1523.0;
    (%1524, %1525, %var_19051, %var_19052)
  };
  %1526(%var_19058, %var_19059) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(14, 9, 16), uint16], uint16, Tensor[(2016), uint16]) */
}

def @func_10882(%var_10880: Tensor[(270), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(900), uint8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) {
  @func_10879(%var_10880) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(900), uint8], Tensor[(6, 3, 15), int64], Tensor[(270), int64]) */
}

def @func_16294() -> (Tensor[(8, 11, 13), int8],) {
  @func_16292() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_1806() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) {
  %1527 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
  %1528 = @func_1417() /* ty=Tensor[(8, 11, 13), uint32] */;
  (%1527, %1528)
}

def @func_17577() -> (Tensor[(8, 11, 13), uint32],) {
  %1529 = @func_2956() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1530 = %1529.0;
  (%1530,)
}

def @func_3883(%var_3881: Tensor[(4, 5, 8), float64], %var_3882: Tensor[(4, 5, 8), float64]) -> (Tensor[(4, 5, 8), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1539 = fn (%var_3857: Tensor[(4, 5, 8), float64], %var_3858: Tensor[(4, 5, 8), float64]) -> (Tensor[(4, 5, 8), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1531 = cast(%var_3858, dtype="float64") /* ty=Tensor[(4, 5, 8), float64] */;
    %1532 = shape_of(%var_3857, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1533 = cast(%var_3857, dtype="float64") /* ty=Tensor[(4, 5, 8), float64] */;
    %1534 = dyn.reshape(%1531, %1532, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1535 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1536 = divide(%1533, %1534) /* ty=Tensor[(4, 5, 8), float64] */;
    %1537 = @func_2695() /* ty=Tensor[(8, 11, 13), int8] */;
    %1538 = %1535.0;
    (%1536, %1537, %1538)
  };
  %1539(%var_3881, %var_3882) /* ty=(Tensor[(4, 5, 8), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_8342() -> (Tensor[(8, 11, 13), int8],) {
  @func_8340() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_4445() -> (Tensor[(8, 11, 13), int8],) {
  %1540 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1541 = %1540.1;
  (%1541,)
}

def @func_12438() -> Tensor[(8, 11, 13), float32] {
  %1542 = fn () -> Tensor[(8, 11, 13), float32] {
    @func_10425() /* ty=Tensor[(8, 11, 13), float32] */
  };
  %1542() /* ty=Tensor[(8, 11, 13), float32] */
}

def @func_15482(%var_15481: Tensor[(16, 10, 10), int16]) -> (Tensor[(16, 10, 10), int16],) {
  %1548 = fn (%var_15451: Tensor[(16, 10, 10), int16]) -> (Tensor[(16, 10, 10), int16],) {
    %1543 = cast(%var_15451, dtype="int16") /* ty=Tensor[(16, 10, 10), int16] */;
    %1544 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(16, 10, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1545 = cast(meta[relay.Constant][49] /* ty=Tensor[(16, 10, 10), int16] */, dtype="int16") /* ty=Tensor[(16, 10, 10), int16] */;
    %1546 = dyn.reshape(%1543, %1544, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1547 = bitwise_or(%1545, %1546) /* ty=Tensor[(16, 10, 10), int16] */;
    (%1547,)
  };
  %1548(%var_15481) /* ty=(Tensor[(16, 10, 10), int16],) */
}

def @func_17328() -> (Tensor[(8, 11, 13), float32],) {
  %1551 = fn () -> (Tensor[(8, 11, 13), float32],) {
    %1549 = @func_5541() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
    %1550 = %1549.0;
    (%1550,)
  };
  %1551() /* ty=(Tensor[(8, 11, 13), float32],) */
}

def @func_17290() -> (Tensor[(8, 11, 13), int8],) {
  %1552 = @func_3315() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1552,)
}

def @func_2748(%var_2747: Tensor[(13, 9, 1), float64]) -> (Tensor[(13, 9, 1), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1560 = fn (%var_2700: Tensor[(13, 9, 1), float64]) -> (Tensor[(13, 9, 1), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1553 = cast(%var_2700, dtype="float64") /* ty=Tensor[(13, 9, 1), float64] */;
    %1554 = @func_2490() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1555 = @func_1446() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1556 = asinh(%1553) /* ty=Tensor[(13, 9, 1), float64] */;
    %1557 = %1554.2;
    %1558 = @func_2695() /* ty=Tensor[(8, 11, 13), int8] */;
    %1559 = %1555.1;
    (%1556, %1557, %1558, %1559)
  };
  %1560(%var_2747) /* ty=(Tensor[(13, 9, 1), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_15075() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(588), int16], Tensor[(150, 2), int32], Tensor[(8, 11, 13), int8]) {
  @func_15073() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(588), int16], Tensor[(150, 2), int32], Tensor[(8, 11, 13), int8]) */
}

def @func_17399(%var_17397: uint8, %var_17398: Tensor[(16, 11, 10), uint8]) -> (Tensor[(16, 11, 10), uint8], Tensor[(1664), float64]) {
  %1566 = fn (%var_17388: uint8, %var_17389: Tensor[(16, 11, 10), uint8]) -> (Tensor[(16, 11, 10), uint8], Tensor[(1664), float64]) {
    %1561 = cast(%var_17388, dtype="uint8") /* ty=uint8 */;
    %1562 = cast(%var_17389, dtype="uint8") /* ty=Tensor[(16, 11, 10), uint8] */;
    %1563 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
    %1564 = right_shift(%1561, %1562) /* ty=Tensor[(16, 11, 10), uint8] */;
    %1565 = %1563.3;
    (%1564, %1565)
  };
  %1566(%var_17397, %var_17398) /* ty=(Tensor[(16, 11, 10), uint8], Tensor[(1664), float64]) */
}

def @func_2759() -> Tensor[(8, 11, 13), int8] {
  %1567 = @func_357() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1567.1
}

def @func_10942() -> (Tensor[(8, 11, 13), int8],) {
  %1569 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %1568 = @func_7983() /* ty=Tensor[(8, 11, 13), int8] */;
    (%1568,)
  };
  %1569() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_11819() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 12), float32], int64) {
  @func_11817() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 12), float32], int64) */
}

def @func_1296() -> (Tensor[(8, 11, 13), int8],) {
  %1572 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %1570 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1571 = %1570.0;
    (%1571,)
  };
  %1572() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_4369(%var_4341: Tensor[(1664), float64]) -> (Tensor[(8, 11, 13), int8], Tensor[(1664), uint64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1573 = @func_2077() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1574 = %1573.1;
  %1575 = cast(%var_4341, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %1576 = shape_of(%1574, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1577 = cast(%1574, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %1578 = dyn.reshape(%1575, %1576, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %1579 = @func_3361() /* ty=(Tensor[(8, 11, 13), float64],) */;
  %1580 = @func_2490() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1581 = @func_4007() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1582 = @func_3139() /* ty=Tensor[(8, 11, 13), int8] */;
  %1583 = right_shift(%1577, %1578) /* ty=Tensor[(1664), uint64] */;
  %1584 = %1579.0;
  %1585 = %1580.2;
  %1586 = %1581.0;
  (%1582, %1583, %1584, %1585, %1586)
}

def @func_4223() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_4221() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_9376() -> Tensor[(8, 11, 13), uint32] {
  %1588 = fn () -> Tensor[(8, 11, 13), uint32] {
    %1587 = @func_8083() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), float32]) */;
    %1587.0
  };
  %1588() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_8194() -> (Tensor[(8, 11, 13), int8],) {
  %1589 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1590 = %1589.0;
  (%1590,)
}

def @func_17878() -> (Tensor[(6, 9, 10), float32], Tensor[(8, 11, 13), int8], Tensor[(6, 9, 10), uint16]) {
  %1591 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 9, 10), float32] */, dtype="float32") /* ty=Tensor[(6, 9, 10), float32] */;
  %1592 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(6, 9, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1593 = cast(meta[relay.Constant][50] /* ty=Tensor[(6, 9, 10), float32] */, dtype="float32") /* ty=Tensor[(6, 9, 10), float32] */;
  %1594 = dyn.reshape(%1591, %1592, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1595 = @func_13662() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1596 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 9, 10), float32] */, dtype="uint16") /* ty=Tensor[(6, 9, 10), uint16] */;
  %1597 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(6, 9, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1598 = cast(meta[relay.Constant][50] /* ty=Tensor[(6, 9, 10), float32] */, dtype="uint16") /* ty=Tensor[(6, 9, 10), uint16] */;
  %1599 = dyn.reshape(%1596, %1597, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1600 = floor_divide(%1593, %1594) /* ty=Tensor[(6, 9, 10), float32] */;
  %1601 = %1595.3;
  %1602 = minimum(%1598, %1599) /* ty=Tensor[(6, 9, 10), uint16] */;
  (%1600, %1601, %1602)
}

def @func_10549() -> Tensor[(8, 11, 13), int8] {
  @func_10547() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_6688() -> (Tensor[(8, 11, 13), int8],) {
  %1605 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %1603 = @func_5098() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1604 = %1603.0;
    (%1604,)
  };
  %1605() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_8032(%var_8030: Tensor[(4, 64), int64]) -> (Tensor[(8, 11, 13), int8], Tensor[(1, 256), int64], Tensor[(4, 64), int64]) {
  @func_8029(%var_8030) /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1, 256), int64], Tensor[(4, 64), int64]) */
}

def @func_16272() -> (Tensor[(8, 11, 13), int8],) {
  @func_16270() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_4633() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_4631() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_17280() -> (Tensor[(8, 11, 13), int8], Tensor[(12, 14, 4), float32], Tensor[(672, 1), bool]) {
  @func_17278() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(12, 14, 4), float32], Tensor[(672, 1), bool]) */
}

def @func_14995() -> Tensor[(8, 11, 13), uint32] {
  @func_9375() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_9179() -> (Tensor[(8, 11, 13), float32],) {
  %1606 = @func_5229() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), uint32]) */;
  %1607 = %1606.0;
  (%1607,)
}

def @func_18591() -> Tensor[(8, 11, 13), int8] {
  %1608 = @func_13732() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1608.0
}

def @func_16055() -> (Tensor[(8, 11, 13), int8],) {
  %1611 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %1609 = @func_6631() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1610 = %1609.0;
    (%1610,)
  };
  %1611() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_219() -> Tensor[(8, 11, 13), int8] {
  @func_179() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_3547() -> (Tensor[(8, 11, 13), int8],) {
  @func_3545() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_18292() -> (int64,) {
  %1614 = fn () -> (int64,) {
    %1612 = @func_11817() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 12), float32], int64) */;
    %1613 = %1612.2;
    (%1613,)
  };
  %1614() /* ty=(int64,) */
}

def @func_2490() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1615 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1616 = @func_2236() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1617 = @func_797() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1618 = %1615.1;
  %1619 = %1616.0;
  %1620 = %1617.0;
  (%1618, %1619, %1620)
}

def @func_16497() -> (Tensor[(8, 11, 13), int8],) {
  %1623 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %1621 = @func_2384() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1622 = %1621.0;
    (%1622,)
  };
  %1623() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_9289() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1624 = @func_3410() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1625 = @func_3545() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1626 = %1624.1;
  %1627 = %1625.0;
  (%1626, %1627)
}

def @func_8660() -> (Tensor[(8, 11, 13), int8],) {
  %1629 = fn () -> (Tensor[(8, 11, 13), int8],) {
    %1628 = @func_7722() /* ty=Tensor[(8, 11, 13), int8] */;
    (%1628,)
  };
  %1629() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_16270() -> (Tensor[(8, 11, 13), int8],) {
  %1630 = @func_3640() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1631 = %1630.0;
  (%1631,)
}

def @func_1637() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1632 = @func_179() /* ty=Tensor[(8, 11, 13), int8] */;
  %1633 = @func_219() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1632, %1633)
}

def @func_7165(%var_7163: Tensor[(10, 13, 3), float32], %var_7164: Tensor[(10, 13, 3), float32]) -> (Tensor[(10, 13, 3), float32], Tensor[(8, 11, 13), uint32]) {
  %1640 = fn (%var_7107: Tensor[(10, 13, 3), float32], %var_7108: Tensor[(10, 13, 3), float32]) -> (Tensor[(10, 13, 3), float32], Tensor[(8, 11, 13), uint32]) {
    %1634 = cast(%var_7108, dtype="float32") /* ty=Tensor[(10, 13, 3), float32] */;
    %1635 = shape_of(%var_7107, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1636 = cast(%var_7107, dtype="float32") /* ty=Tensor[(10, 13, 3), float32] */;
    %1637 = dyn.reshape(%1634, %1635, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1638 = divide(%1636, %1637) /* ty=Tensor[(10, 13, 3), float32] */;
    %1639 = @func_3782() /* ty=Tensor[(8, 11, 13), uint32] */;
    (%1638, %1639)
  };
  %1640(%var_7163, %var_7164) /* ty=(Tensor[(10, 13, 3), float32], Tensor[(8, 11, 13), uint32]) */
}

def @func_11686() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_11684() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_2443() -> Tensor[(8, 11, 13), int8] {
  %1641 = @func_1467() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1641.1
}

def @func_3507() -> (Tensor[(8, 11, 13), int8],) {
  %1642 = @func_2421() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
  %1643 = %1642.0;
  (%1643,)
}

def @func_13452() -> (Tensor[(8, 11, 13), int8],) {
  %1644 = @func_9350() /* ty=Tensor[(8, 11, 13), int8] */;
  (%1644,)
}

def @func_16999() -> (Tensor[(8, 11, 13), int8],) {
  @func_16997() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_9469() -> Tensor[(8, 11, 13), int8] {
  %1646 = fn () -> Tensor[(8, 11, 13), int8] {
    %1645 = @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1645.1
  };
  %1646() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_3683() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1650 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1647 = @func_1637() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1648 = %1647.0;
    %1649 = @func_2695() /* ty=Tensor[(8, 11, 13), int8] */;
    (%1648, %1649)
  };
  %1650() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_11291() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) {
  @func_11289() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */
}

def @func_2591() -> (Tensor[(8, 11, 13), float64], Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1651 = @func_640() /* ty=Tensor[(8, 11, 13), int8] */;
  %1652 = cast(%1651, dtype="float64") /* ty=Tensor[(8, 11, 13), float64] */;
  %1653 = @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1654 = @func_239() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1655 = @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1656 = sigmoid(%1652) /* ty=Tensor[(8, 11, 13), float64] */;
  %1657 = %1653.0;
  %1658 = %1654.1;
  %1659 = %1655.0;
  (%1656, %1657, %1658, %1659)
}

def @func_9243() -> Tensor[(8, 11, 13), int8] {
  %1660 = @func_334() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1660.0
}

def @func_17579() -> (Tensor[(8, 11, 13), uint32],) {
  @func_17577() /* ty=(Tensor[(8, 11, 13), uint32],) */
}

def @func_18174() -> Tensor[(8, 11, 13), uint32] {
  @func_9375() /* ty=Tensor[(8, 11, 13), uint32] */
}

def @func_4947() -> (Tensor[(8, 11, 13), int8],) {
  @func_4945() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_2386() -> (Tensor[(8, 11, 13), int8],) {
  @func_2384() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_15195() -> Tensor[(8, 11, 13), int8] {
  %1661 = @func_1352() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1661.1
}

def @func_8819() -> Tensor[(8, 11, 13), int8] {
  %1663 = fn () -> Tensor[(8, 11, 13), int8] {
    %1662 = @func_2646() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), uint32]) */;
    %1662.0
  };
  %1663() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_15244() -> Tensor[(8, 11, 13), int8] {
  %1664 = @func_11289() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float64]) */;
  %1664.1
}

def @func_7584() -> Tensor[(8, 11, 13), int8] {
  @func_7582() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_8811(%var_8809: Tensor[(2, 8, 9), bool], %var_8810: Tensor[(2, 8, 9), bool]) -> (Tensor[(2, 8, 9), bool], Tensor[(8, 11, 13), int8], Tensor[(2, 8, 9), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) {
  %1678 = fn (%var_8765: Tensor[(2, 8, 9), bool], %var_8766: Tensor[(2, 8, 9), bool]) -> (Tensor[(2, 8, 9), bool], Tensor[(8, 11, 13), int8], Tensor[(2, 8, 9), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) {
    %1665 = cast(%var_8766, dtype="bool") /* ty=Tensor[(2, 8, 9), bool] */;
    %1666 = shape_of(%var_8765, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1667 = cast(%var_8765, dtype="bool") /* ty=Tensor[(2, 8, 9), bool] */;
    %1668 = dyn.reshape(%1665, %1666, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1669 = @func_6631() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1670 = cast(%var_8766, dtype="float32") /* ty=Tensor[(2, 8, 9), float32] */;
    %1671 = @func_3640() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1672 = @func_7802() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), bool], Tensor[(8, 11, 13), int8]) */;
    %1673 = logical_and(%1667, %1668) /* ty=Tensor[(2, 8, 9), bool] */;
    %1674 = %1669.0;
    %1675 = atanh(%1670) /* ty=Tensor[(2, 8, 9), float32] */;
    %1676 = %1671.0;
    %1677 = %1672.0;
    (%1673, %1674, %1675, %1676, %1677)
  };
  %1678(%var_8809, %var_8810) /* ty=(Tensor[(2, 8, 9), bool], Tensor[(8, 11, 13), int8], Tensor[(2, 8, 9), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */
}

def @func_9150() -> Tensor[(8, 11, 13), float64] {
  %1680 = fn () -> Tensor[(8, 11, 13), float64] {
    %1679 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
    %1679.0
  };
  %1680() /* ty=Tensor[(8, 11, 13), float64] */
}

def @func_11270() -> (Tensor[(8, 11, 13), int8],) {
  %1681 = @func_3410() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1682 = %1681.1;
  (%1682,)
}

def @func_9351() -> Tensor[(8, 11, 13), int8] {
  %1684 = fn () -> Tensor[(8, 11, 13), int8] {
    %1683 = @func_6229() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1683.1
  };
  %1684() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_16253() -> (Tensor[(1664), float64],) {
  @func_16251() /* ty=(Tensor[(1664), float64],) */
}

def @func_10221() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8]) {
  %1690 = fn () -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8]) {
    %1685 = @func_2823() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */;
    %1686 = @func_7855() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1687 = @func_3604() /* ty=Tensor[(8, 11, 13), float32] */;
    %1688 = %1685.0;
    %1689 = %1686.1;
    (%1687, %1688, %1689)
  };
  %1690() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), int8]) */
}

def @func_16029() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1691 = @func_883() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1664), float64]) */;
  %1692 = @func_6145() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(1, 750), float64], Tensor[(8, 11, 13), int8]) */;
  %1693 = %1691.0;
  %1694 = %1692.4;
  (%1693, %1694)
}

def @func_1615(%var_1592: Tensor[(8, 8, 4), int64], %var_1600: Tensor[(8, 8, 4), bool]) -> (Tensor[(8, 8, 4), uint32],) {
  %1695 = cast(%var_1592, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
  %1696 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(8, 8, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1697 = cast(meta[relay.Constant][52] /* ty=Tensor[(8, 8, 4), int64] */, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
  %1698 = dyn.reshape(%1695, %1696, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1699 = greater_equal(%1697, %1698) /* ty=Tensor[(8, 8, 4), bool] */;
  %1700 = cast(%var_1600, dtype="uint32") /* ty=Tensor[(8, 8, 4), uint32] */;
  %1701 = shape_of(%1699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1702 = cast(%1699, dtype="uint32") /* ty=Tensor[(8, 8, 4), uint32] */;
  %1703 = dyn.reshape(%1700, %1701, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1704 = logical_xor(%1702, %1703) /* ty=Tensor[(8, 8, 4), uint32] */;
  (%1704,)
}

def @func_387() -> (Tensor[(8, 11, 13), int8],) {
  @func_385() /* ty=(Tensor[(8, 11, 13), int8],) */
}

def @func_1090() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) {
  @func_1088() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */
}

def @func_6899() -> Tensor[(8, 11, 13), int8] {
  @func_6897() /* ty=Tensor[(8, 11, 13), int8] */
}

def @func_12143() -> (Tensor[(8, 11, 13), int8],) {
  %1705 = @func_6631() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1706 = %1705.0;
  (%1706,)
}

def @func_3410() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1707 = @func_2283() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(1664), float64], Tensor[(1664), float64]) */;
  %1708 = @func_2525() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1709 = %1707.0;
  %1710 = %1708.0;
  (%1709, %1710)
}

def @func_5542() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) {
  %1715 = fn () -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) {
    %1711 = @func_2856() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), float32]) */;
    %1712 = @func_2145() /* ty=(Tensor[(1664), float64], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1713 = %1711.2;
    %1714 = %1712.2;
    (%1713, %1714)
  };
  %1715() /* ty=(Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8]) */
}

def @func_16219() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1722 = fn () -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
    %1716 = @func_8424() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
    %1717 = @func_6631() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1718 = @func_10941() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1719 = %1716.0;
    %1720 = %1717.0;
    %1721 = %1718.0;
    (%1719, %1720, %1721)
  };
  %1722() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_5672() -> (Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  @func_5670() /* ty=(Tensor[(8, 11, 13), float64], Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */
}

def @func_6518() -> (Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1723 = @func_1250() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1724 = @func_1777() /* ty=(Tensor[(8, 11, 13), uint32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), bool]) */;
  %1725 = %1723.0;
  %1726 = %1724.1;
  (%1725, %1726)
}

def @func_11684() -> (Tensor[(8, 11, 13), float32], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) {
  %1727 = @func_4007() /* ty=(Tensor[(8, 11, 13), int8],) */;
  %1728 = @func_539() /* ty=(Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8], Tensor[(8, 11, 13), int8]) */;
  %1729 = @func_6349() /* ty=Tensor[(8, 11, 13), float32] */;
  %1730 = %1727.0;
  %1731 = %1728.2;
  (%1729, %1730, %1731)
}

def @func_14375(%var_14374: Tensor[(13, 9, 13), float32]) -> (Tensor[(13, 9, 13), float32], Tensor[(8, 11, 13), int8]) {
  %1738 = fn (%var_14358: Tensor[(13, 9, 13), float32]) -> (Tensor[(13, 9, 13), float32], Tensor[(8, 11, 13), int8]) {
    %1732 = cast(%var_14358, dtype="float32") /* ty=Tensor[(13, 9, 13), float32] */;
    %1733 = cos(%1732) /* ty=Tensor[(13, 9, 13), float32] */;
    %1734 = cast(%1733, dtype="float32") /* ty=Tensor[(13, 9, 13), float32] */;
    %1735 = @func_3545() /* ty=(Tensor[(8, 11, 13), int8],) */;
    %1736 = log(%1734) /* ty=Tensor[(13, 9, 13), float32] */;
    %1737 = %1735.0;
    (%1736, %1737)
  };
  %1738(%var_14374) /* ty=(Tensor[(13, 9, 13), float32], Tensor[(8, 11, 13), int8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen674/build/output.py:6814: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen674/build/output.py", line 6819, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(224) tvmgen_default_fused_cast_cast_reshape_equal_kernel0(signed char* __restrict__ T_equal, uint64_t* __restrict__ placeholder, uint64_t* __restrict__ placeholder1) {
  T_equal[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) == ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


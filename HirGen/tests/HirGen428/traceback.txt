==========mod==========
#[version = "0.0.5"]
def @func_1457(%var_1452: uint64, %var_1453: Tensor[(3, 16, 1), uint64]) -> Tensor[(3, 16, 1), uint64] {
  %0 = cast(%var_1452, dtype="uint64") /* ty=uint64 */;
  %1 = cast(%var_1453, dtype="uint64") /* ty=Tensor[(3, 16, 1), uint64] */;
  add(%0, %1) /* ty=Tensor[(3, 16, 1), uint64] */
}

def @func_7489() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %2 = @func_4688() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(1320), float64], Tensor[(144), int64]) */;
  %3 = @func_6622() /* ty=Tensor[(12, 13, 5), float32] */;
  %4 = %2.0;
  (%3, %4)
}

def @func_2017(%var_2004: Tensor[(12, 13, 5), float32]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
  %5 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
  %6 = cast(%5, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %7 = atan(%6) /* ty=Tensor[(12, 13, 5), float32] */;
  %8 = cast(%5, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %9 = shape_of(%7, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(%7, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %12 = cast(%var_2004, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %13 = shape_of(%7, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%7, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %18 = reshape(%16, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %19 = reshape(%17, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %20 = power(%10, %11) /* ty=Tensor[(12, 13, 5), float32] */;
  %21 = logical_or(%14, %15) /* ty=Tensor[(12, 13, 5), bool] */;
  %22 = @func_820(%18, %19) /* ty=Tensor[(3, 12, 4), float64] */;
  (%20, %21, %22, meta[relay.Constant][0] /* ty=Tensor[(144), int64] */)
}

def @func_11697(%var_11677: Tensor[(7, 9, 8), bool]) -> (Tensor[(7, 9, 8), bool], Tensor[(12, 13, 5), float32], Tensor[(300), float32]) {
  %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 9, 8), bool] */, dtype="bool") /* ty=Tensor[(7, 9, 8), bool] */;
  %24 = shape_of(%var_11677, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%var_11677, dtype="bool") /* ty=Tensor[(7, 9, 8), bool] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %27 = @func_9525() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %28 = @func_8110() /* ty=(Tensor[(300), float32],) */;
  %29 = logical_or(%25, %26) /* ty=Tensor[(7, 9, 8), bool] */;
  %30 = %27.0;
  %31 = %28.0;
  (%29, %30, %31)
}

def @func_12218() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %32 = @func_8801() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %33 = @func_3079() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %34 = %32.0;
  %35 = %33.0;
  (%34, %35)
}

def @func_6198(%var_6127: Tensor[(11, 195), float32], %var_6136: Tensor[(300), float32], %var_6194: Tensor[(2, 616), float64]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), bool], Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(11, 195), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), int64], Tensor[(48), uint64], uint64, Tensor[(7, 16, 11), float32], Tensor[(2, 616), float64]) {
  %36 = @func_4471() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %37 = %36.1;
  %38 = cast(%37, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %39 = reshape(%38, newshape=[12, 13, 5]) /* ty=Tensor[(12, 13, 5), float32] */;
  %40 = cast(%var_6127, dtype="float32") /* ty=Tensor[(11, 195), float32] */;
  %41 = reshape(%40, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %42 = @func_3180(%41) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) */;
  %43 = cast(%var_6127, dtype="float32") /* ty=Tensor[(11, 195), float32] */;
  %44 = reshape(%43, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %45 = @func_5353(%44) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) */;
  %46 = cast(%var_6136, dtype="float32") /* ty=Tensor[(300), float32] */;
  %47 = reshape(%46, newshape=[15, 5, 4]) /* ty=Tensor[(15, 5, 4), float32] */;
  %48 = @func_3958(%47) /* ty=(Tensor[(15, 5, 4), float32],) */;
  %49 = %48.0;
  %50 = cast(%var_6136, dtype="int64") /* ty=Tensor[(300), int64] */;
  %51 = shape_of(%49, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(%49, dtype="int64") /* ty=Tensor[(15, 5, 4), int64] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %54 = cast(meta[relay.Constant][2] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %55 = reshape(%54, newshape=[]) /* ty=uint64 */;
  %56 = @func_4098(%55) /* ty=(Tensor[(12, 13, 5), float64], Tensor[(3, 16, 1), uint64], uint64, Tensor[(48), uint64]) */;
  %57 = cast(%var_6194, dtype="float64") /* ty=Tensor[(2, 616), float64] */;
  %58 = reshape(%57, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %59 = @func_3497(%39) /* ty=Tensor[(12, 13, 5), bool] */;
  %60 = @func_3688() /* ty=Tensor[(12, 13, 5), float32] */;
  %61 = %42.1;
  %62 = @func_3366() /* ty=Tensor[(12, 13, 5), float32] */;
  %63 = %45.1;
  %64 = subtract(%52, %53) /* ty=Tensor[(15, 5, 4), int64] */;
  %65 = %56.3;
  %66 = @func_2939(%58) /* ty=Tensor[(7, 16, 11), float32] */;
  (%37, %59, %60, %61, %var_6127, %62, %63, %64, %65, meta[relay.Constant][2] /* ty=uint64 */, %66, %var_6194)
}

def @func_9852() -> (Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64]) {
  %67 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
  %68 = @func_7619() /* ty=(Tensor[(4, 36), bool], Tensor[(4, 36), float32], Tensor[(10, 12, 2), float64], Tensor[(4, 60), float64], Tensor[(4, 36), float32]) */;
  %69 = %67.1;
  %70 = %68.2;
  (%69, %70)
}

def @func_9982() -> Tensor[(12, 13, 5), float32] {
  @func_7735() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_12017() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %71 = @func_9525() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %72 = @func_6081() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) */;
  %73 = %71.0;
  %74 = %72.3;
  (%73, %74)
}

def @func_11573() -> (Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) {
  %75 = @func_4808() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %76 = @func_7506() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(715, 3), float32], Tensor[(504), float64], Tensor[(504), float64]) */;
  %77 = @func_8471() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %78 = cast(meta[relay.Constant][3] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %79 = reshape(%78, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %80 = @func_2534(%79) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
  %81 = @func_11129() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %82 = %75.0;
  %83 = %76.4;
  %84 = @func_6291() /* ty=Tensor[(12, 13, 5), float32] */;
  %85 = @func_3290() /* ty=Tensor[(12, 13, 5), float32] */;
  %86 = %77.0;
  %87 = %80.0;
  %88 = %81.0;
  (%82, %83, %84, %85, %86, %87, meta[relay.Constant][3] /* ty=Tensor[(144), int64] */, %88)
}

def @main(%var_12254: Tensor[(6, 2, 11), float64]) -> Tensor[(6, 2, 11), bool] {
  %89 = cast(%var_12254, dtype="float64") /* ty=Tensor[(6, 2, 11), float64] */;
  %90 = sigmoid(%89) /* ty=Tensor[(6, 2, 11), float64] */;
  %91 = cast(%var_12254, dtype="float64") /* ty=Tensor[(6, 2, 11), float64] */;
  %92 = sinh(%91) /* ty=Tensor[(6, 2, 11), float64] */;
  %93 = cast(%92, dtype="bool") /* ty=Tensor[(6, 2, 11), bool] */;
  %94 = shape_of(%90, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(%90, dtype="bool") /* ty=Tensor[(6, 2, 11), bool] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%95, %96) /* ty=Tensor[(6, 2, 11), bool] */
}

def @func_4153() -> (Tensor[(12, 13, 5), float32],) {
  %97 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
  (%97,)
}

def @func_9421() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %98 = @func_4166() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %99 = %98.0;
  %100 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
  (%99, %100)
}

def @func_1842(%var_1817: Tensor[(144), int64]) -> (Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(9, 9, 16), float32], Tensor[(9, 9, 16), float64]) {
  %101 = cast(%var_1817, dtype="int64") /* ty=Tensor[(144), int64] */;
  %102 = cast(%var_1817, dtype="int64") /* ty=Tensor[(144), int64] */;
  %103 = reshape(%101, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %104 = reshape(%102, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %105 = cast(meta[relay.Constant][4] /* ty=Tensor[(9, 9, 16), float64] */, dtype="float64") /* ty=Tensor[(9, 9, 16), float64] */;
  %106 = sigmoid(%105) /* ty=Tensor[(9, 9, 16), float64] */;
  %107 = cast(%106, dtype="float32") /* ty=Tensor[(9, 9, 16), float32] */;
  %108 = cast(%106, dtype="float64") /* ty=Tensor[(9, 9, 16), float64] */;
  %109 = @func_820(%103, %104) /* ty=Tensor[(3, 12, 4), float64] */;
  %110 = cosh(%107) /* ty=Tensor[(9, 9, 16), float32] */;
  %111 = erf(%108) /* ty=Tensor[(9, 9, 16), float64] */;
  (%109, %var_1817, %110, %111)
}

def @func_8110() -> (Tensor[(300), float32],) {
  %112 = @func_6532() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(300), float32]) */;
  %113 = %112.3;
  (%113,)
}

def @func_9816() -> (Tensor[(10, 30), float32],) {
  %114 = @func_5970() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(10, 30), float32]) */;
  %115 = %114.2;
  (%115,)
}

def @func_5251() -> Tensor[(12, 13, 5), float32] {
  %116 = @func_4166() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %116.0
}

def @func_4808() -> (Tensor[(12, 13, 5), float32],) {
  %117 = @func_3079() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %118 = %117.0;
  (%118,)
}

def @func_6730(%var_6700: Tensor[(448), uint8]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(448), uint8], Tensor[(448), uint8], Tensor[(12, 13, 5), float64], uint64, Tensor[(12, 13, 5), float32], Tensor[(448), uint8]) {
  %119 = cast(%var_6700, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %120 = @func_6346() /* ty=Tensor[(12, 13, 5), float32] */;
  %121 = cast(%120, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
  %122 = reshape(%119, newshape=[448]) /* ty=Tensor[(448), uint8] */;
  %123 = reshape(%121, newshape=[12, 13, 5]) /* ty=Tensor[(12, 13, 5), float64] */;
  %124 = @func_2970(%122, %123) /* ty=(Tensor[(4, 14, 8), int64], Tensor[(4, 2), uint8], Tensor[(448), uint8], Tensor[(12, 13, 5), float64]) */;
  %125 = cast(meta[relay.Constant][5] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %126 = reshape(%125, newshape=[]) /* ty=uint64 */;
  %127 = @func_4098(%126) /* ty=(Tensor[(12, 13, 5), float64], Tensor[(3, 16, 1), uint64], uint64, Tensor[(48), uint64]) */;
  %128 = @func_5094() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %129 = cast(%var_6700, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %130 = reshape(%129, newshape=[448]) /* ty=Tensor[(448), uint8] */;
  %131 = @func_2566(%130) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(4, 14, 8), bool], Tensor[(8), uint8], Tensor[(448), uint8]) */;
  %132 = @func_5719() /* ty=Tensor[(12, 13, 5), float32] */;
  %133 = %124.2;
  %134 = %127.0;
  %135 = %128.0;
  %136 = %131.3;
  (%132, %120, %133, %var_6700, %134, meta[relay.Constant][5] /* ty=uint64 */, %135, %136)
}

def @func_7251() -> (Tensor[(12, 13, 5), float64],) {
  %137 = @func_3749() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %138 = %137.0;
  %139 = cast(%138, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
  %140 = tan(%139) /* ty=Tensor[(12, 13, 5), float64] */;
  (%140,)
}

def @func_5094() -> (Tensor[(12, 13, 5), float32],) {
  %141 = @func_4808() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %142 = %141.0;
  (%142,)
}

def @func_3236(%var_3222: Tensor[(13, 1, 16), float32], %var_3226: Tensor[(24, 6), int64]) -> (Tensor[(13, 1, 16), float32], Tensor[(3, 12, 4), float64], Tensor[(24, 6), int64], Tensor[(12, 13, 5), float32]) {
  %143 = cast(%var_3222, dtype="float32") /* ty=Tensor[(13, 1, 16), float32] */;
  %144 = cast(%var_3226, dtype="int64") /* ty=Tensor[(24, 6), int64] */;
  %145 = cast(%var_3226, dtype="int64") /* ty=Tensor[(24, 6), int64] */;
  %146 = reshape(%144, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %147 = reshape(%145, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %148 = @func_3079() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %149 = sinh(%143) /* ty=Tensor[(13, 1, 16), float32] */;
  %150 = @func_820(%146, %147) /* ty=Tensor[(3, 12, 4), float64] */;
  %151 = %148.0;
  (%149, %150, %var_3226, %151)
}

def @func_6594() -> (Tensor[(12, 13, 5), float32],) {
  %152 = @func_2985() /* ty=Tensor[(12, 13, 5), float32] */;
  (%152,)
}

def @func_5100() -> (Tensor[(11, 8, 7), float64],) {
  %153 = cast(meta[relay.Constant][6] /* ty=Tensor[(11, 8, 7), float64] */, dtype="float64") /* ty=Tensor[(11, 8, 7), float64] */;
  %154 = sqrt(%153) /* ty=Tensor[(11, 8, 7), float64] */;
  (%154,)
}

def @func_3407() -> Tensor[(12, 13, 5), float32] {
  @func_1978() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_4726() -> Tensor[(12, 13, 5), float32] {
  @func_3688() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_8182() -> (Tensor[(11, 8, 7), float64], Tensor[(12, 13, 5), float32]) {
  %155 = @func_5100() /* ty=(Tensor[(11, 8, 7), float64],) */;
  %156 = @func_8145() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %157 = %155.0;
  %158 = %156.0;
  (%157, %158)
}

def @func_9803() -> (Tensor[(12, 13, 5), float32], Tensor[(6, 6, 12), bool], Tensor[(432), bool]) {
  %159 = @func_4808() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %160 = cast(meta[relay.Constant][7] /* ty=Tensor[(432), bool] */, dtype="bool") /* ty=Tensor[(432), bool] */;
  %161 = %159.0;
  %162 = cast(%161, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %163 = reshape(%160, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), bool] */;
  %164 = reshape(%162, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %165 = @func_9084(%163, %164) /* ty=(Tensor[(6, 6, 12), bool], Tensor[(780), float32], Tensor[(3, 12, 4), float64]) */;
  %166 = %165.0;
  (%161, %166, meta[relay.Constant][7] /* ty=Tensor[(432), bool] */)
}

def @func_6906() -> (Tensor[(12, 13, 5), float32],) {
  %167 = @func_3727() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %168 = %167.0;
  (%168,)
}

def @func_10877() -> Tensor[(11, 8, 7), float64] {
  %169 = @func_8872() /* ty=(Tensor[(11, 8, 7), float64],) */;
  %169.0
}

def @func_7735() -> Tensor[(12, 13, 5), float32] {
  @func_3290() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_11129() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %170 = @func_7874() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %171 = @func_9368() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %172 = %170.0;
  %173 = %171.0;
  (%172, %173)
}

def @func_4876(%var_4858: Tensor[(10, 6, 8), float32], %var_4859: Tensor[(10, 6, 8), float32], %var_4868: Tensor[(8), uint8]) -> (Tensor[(10, 6, 8), float32], Tensor[(448), uint8], Tensor[(8), uint8]) {
  %174 = cast(%var_4859, dtype="float32") /* ty=Tensor[(10, 6, 8), float32] */;
  %175 = shape_of(%var_4858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%var_4858, dtype="float32") /* ty=Tensor[(10, 6, 8), float32] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %178 = cast(%var_4868, dtype="uint8") /* ty=Tensor[(8), uint8] */;
  %179 = reshape(%178, newshape=[8]) /* ty=Tensor[(8), uint8] */;
  %180 = @func_2416(%179) /* ty=(Tensor[(12, 13, 5), float64], Tensor[(4, 14, 8), int64], Tensor[(8), uint8], Tensor[(448), uint8]) */;
  %181 = power(%176, %177) /* ty=Tensor[(10, 6, 8), float32] */;
  %182 = %180.3;
  (%181, %182, %var_4868)
}

def @func_5226() -> Tensor[(4, 36), int64] {
  %183 = @func_4430() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(4, 36), int64]) */;
  %183.2
}

def @func_5480() -> Tensor[(12, 13, 5), float32] {
  %184 = @func_3658() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %184.0
}

def @func_2970(%var_2957: Tensor[(448), uint8], %var_2960: Tensor[(12, 13, 5), float64]) -> (Tensor[(4, 14, 8), int64], Tensor[(4, 2), uint8], Tensor[(448), uint8], Tensor[(12, 13, 5), float64]) {
  %185 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 2), uint8] */, dtype="uint8") /* ty=Tensor[(4, 2), uint8] */;
  %186 = cast(%var_2957, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %187 = reshape(%185, newshape=[1, 1, 8]) /* ty=Tensor[(1, 1, 8), uint8] */;
  %188 = reshape(%186, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), uint8] */;
  %189 = @func_2138(%187, %188) /* ty=(Tensor[(4, 14, 8), bool], Tensor[(4, 14, 8), int64]) */;
  %190 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
  %191 = %190.0;
  %192 = cast(%var_2960, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
  %193 = shape_of(%191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%191, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %196 = %189.1;
  %197 = minimum(%194, %195) /* ty=Tensor[(12, 13, 5), float64] */;
  (%196, meta[relay.Constant][8] /* ty=Tensor[(4, 2), uint8] */, %var_2957, %197)
}

def @func_2416(%var_2409: Tensor[(8), uint8]) -> (Tensor[(12, 13, 5), float64], Tensor[(4, 14, 8), int64], Tensor[(8), uint8], Tensor[(448), uint8]) {
  %198 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
  %199 = cast(%198, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
  %200 = cast(%var_2409, dtype="uint8") /* ty=Tensor[(8), uint8] */;
  %201 = cast(meta[relay.Constant][9] /* ty=Tensor[(448), uint8] */, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %202 = reshape(%200, newshape=[1, 1, 8]) /* ty=Tensor[(1, 1, 8), uint8] */;
  %203 = reshape(%201, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), uint8] */;
  %204 = @func_2138(%202, %203) /* ty=(Tensor[(4, 14, 8), bool], Tensor[(4, 14, 8), int64]) */;
  %205 = asinh(%199) /* ty=Tensor[(12, 13, 5), float64] */;
  %206 = %204.1;
  (%205, %206, %var_2409, meta[relay.Constant][9] /* ty=Tensor[(448), uint8] */)
}

def @func_5825() -> (Tensor[(12, 13, 5), uint8], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) {
  %207 = @func_2118() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %208 = %207.0;
  %209 = @func_3749() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %210 = %209.0;
  %211 = cast(%210, dtype="uint8") /* ty=Tensor[(12, 13, 5), uint8] */;
  %212 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%208, dtype="uint8") /* ty=Tensor[(12, 13, 5), uint8] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %215 = @func_4166() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %216 = cast(%210, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %217 = cast(meta[relay.Constant][10] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %218 = reshape(%216, newshape=[12, 13, 5]) /* ty=Tensor[(12, 13, 5), float32] */;
  %219 = reshape(%217, newshape=[24, 6]) /* ty=Tensor[(24, 6), int64] */;
  %220 = @func_3920(%218, %219) /* ty=(Tensor[(12, 13, 5), uint16], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(9, 9, 16), float64], Tensor[(24, 6), int64]) */;
  %221 = cast(%208, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %222 = bitwise_and(%213, %214) /* ty=Tensor[(12, 13, 5), uint8] */;
  %223 = %215.0;
  %224 = %220.3;
  %225 = erf(%221) /* ty=Tensor[(12, 13, 5), float32] */;
  (%222, %223, %224, meta[relay.Constant][10] /* ty=Tensor[(144), int64] */, %225)
}

def @func_8843(%var_8825: Tensor[(588), float64], %var_8826: Tensor[(448), uint8]) -> (Tensor[(715, 3), bool], Tensor[(12, 13, 5), float64], Tensor[(448), uint8], Tensor[(588), uint32]) {
  %226 = @func_7506() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(715, 3), float32], Tensor[(504), float64], Tensor[(504), float64]) */;
  %227 = %226.2;
  %228 = cast(%227, dtype="float32") /* ty=Tensor[(715, 3), float32] */;
  %229 = sinh(%228) /* ty=Tensor[(715, 3), float32] */;
  %230 = cast(%229, dtype="bool") /* ty=Tensor[(715, 3), bool] */;
  %231 = shape_of(%227, dtype="int32") /* ty=Tensor[(2), int32] */;
  %232 = cast(%227, dtype="bool") /* ty=Tensor[(715, 3), bool] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %234 = cast(%var_8825, dtype="float64") /* ty=Tensor[(588), float64] */;
  %235 = cast(%var_8826, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %236 = reshape(%234, newshape=[3, 14, 14]) /* ty=Tensor[(3, 14, 14), float64] */;
  %237 = reshape(%235, newshape=[56, 8]) /* ty=Tensor[(56, 8), uint8] */;
  %238 = @func_3380(%236, %237) /* ty=(Tensor[(3, 14, 14), float64], Tensor[(12, 13, 5), float64], Tensor[(56, 8), uint8], Tensor[(780), float64]) */;
  %239 = cast(meta[relay.Constant][11] /* ty=Tensor[(588), float64] */, dtype="uint32") /* ty=Tensor[(588), uint32] */;
  %240 = shape_of(%var_8825, dtype="int32") /* ty=Tensor[(1), int32] */;
  %241 = cast(%var_8825, dtype="uint32") /* ty=Tensor[(588), uint32] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %243 = logical_or(%232, %233) /* ty=Tensor[(715, 3), bool] */;
  %244 = %238.1;
  %245 = logical_xor(%241, %242) /* ty=Tensor[(588), uint32] */;
  (%243, %244, %var_8826, %245)
}

def @func_9084(%var_9046: Tensor[(6, 6, 12), bool], %var_9053: Tensor[(780), float32]) -> (Tensor[(6, 6, 12), bool], Tensor[(780), float32], Tensor[(3, 12, 4), float64]) {
  %246 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 6, 12), bool] */, dtype="bool") /* ty=Tensor[(6, 6, 12), bool] */;
  %247 = shape_of(%var_9046, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%var_9046, dtype="bool") /* ty=Tensor[(6, 6, 12), bool] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %250 = cast(%var_9053, dtype="float32") /* ty=Tensor[(780), float32] */;
  %251 = reshape(%250, newshape=[12, 13, 5]) /* ty=Tensor[(12, 13, 5), float32] */;
  %252 = @func_2017(%251) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
  %253 = %252.2;
  %254 = cast(%253, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %255 = sinh(%254) /* ty=Tensor[(3, 12, 4), float64] */;
  %256 = cast(%255, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %257 = logical_and(%248, %249) /* ty=Tensor[(6, 6, 12), bool] */;
  %258 = log(%256) /* ty=Tensor[(3, 12, 4), float64] */;
  (%257, %var_9053, %258)
}

def @func_7367() -> (Tensor[(12, 13, 5), float32], Tensor[(448), uint8], Tensor[(8), uint8]) {
  %259 = cast(meta[relay.Constant][13] /* ty=Tensor[(8), uint8] */, dtype="uint8") /* ty=Tensor[(8), uint8] */;
  %260 = reshape(%259, newshape=[8]) /* ty=Tensor[(8), uint8] */;
  %261 = @func_2416(%260) /* ty=(Tensor[(12, 13, 5), float64], Tensor[(4, 14, 8), int64], Tensor[(8), uint8], Tensor[(448), uint8]) */;
  %262 = @func_6346() /* ty=Tensor[(12, 13, 5), float32] */;
  %263 = %261.3;
  (%262, %263, meta[relay.Constant][13] /* ty=Tensor[(8), uint8] */)
}

def @func_8421(%var_8414: Tensor[(12, 13, 5), float32]) -> (Tensor[(12, 13, 5), bool], Tensor[(12, 13, 5), float32]) {
  %264 = @func_3019() /* ty=Tensor[(12, 13, 5), float32] */;
  %265 = cast(%var_8414, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %266 = shape_of(%264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %267 = cast(%264, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %269 = @func_7723() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %270 = less(%267, %268) /* ty=Tensor[(12, 13, 5), bool] */;
  %271 = %269.0;
  (%270, %271)
}

def @func_11826(%var_11823: Tensor[(8), uint8]) -> (Tensor[(11, 8, 7), float32], Tensor[(12, 13, 5), float32], Tensor[(2, 8, 14), bool], Tensor[(224), uint32], Tensor[(8), uint8]) {
  %272 = @func_6227() /* ty=(Tensor[(11, 8, 7), float64],) */;
  %273 = %272.0;
  %274 = cast(%273, dtype="float32") /* ty=Tensor[(11, 8, 7), float32] */;
  %275 = @func_11218() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %276 = cast(meta[relay.Constant][14] /* ty=Tensor[(224), uint32] */, dtype="uint32") /* ty=Tensor[(224), uint32] */;
  %277 = cast(%var_11823, dtype="uint8") /* ty=Tensor[(8), uint8] */;
  %278 = reshape(%276, newshape=[2, 8, 14]) /* ty=Tensor[(2, 8, 14), uint32] */;
  %279 = reshape(%277, newshape=[1, 8]) /* ty=Tensor[(1, 8), uint8] */;
  %280 = @func_2878(%278, %279) /* ty=(Tensor[(8), uint8], Tensor[(1, 8), uint8], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(260), float64], Tensor[(12, 13, 5), float32], Tensor[(2, 8, 14), bool]) */;
  %281 = tan(%274) /* ty=Tensor[(11, 8, 7), float32] */;
  %282 = %275.0;
  %283 = %280.6;
  (%281, %282, %283, meta[relay.Constant][14] /* ty=Tensor[(224), uint32] */, %var_11823)
}

def @func_10089() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %284 = @func_4808() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %285 = @func_7735() /* ty=Tensor[(12, 13, 5), float32] */;
  %286 = %284.0;
  %287 = @func_3407() /* ty=Tensor[(12, 13, 5), float32] */;
  (%285, %286, %287)
}

def @func_11192(%var_11185: Tensor[(6, 8, 15), uint8]) -> Tensor[(6, 8, 15), uint8] {
  %288 = cast(meta[relay.Constant][15] /* ty=Tensor[(6, 8, 15), uint8] */, dtype="uint8") /* ty=Tensor[(6, 8, 15), uint8] */;
  %289 = shape_of(%var_11185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(%var_11185, dtype="uint8") /* ty=Tensor[(6, 8, 15), uint8] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  right_shift(%290, %291) /* ty=Tensor[(6, 8, 15), uint8] */
}

def @func_8406() -> (Tensor[(12, 13, 5), float32],) {
  %292 = @func_6532() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(300), float32]) */;
  %293 = %292.1;
  (%293,)
}

def @func_10691(%var_10678: Tensor[(3, 12, 6), uint64], %var_10679: Tensor[(3, 12, 6), uint64]) -> (Tensor[(3, 12, 6), float64], Tensor[(12, 13, 5), float32]) {
  %294 = cast(%var_10679, dtype="uint64") /* ty=Tensor[(3, 12, 6), uint64] */;
  %295 = shape_of(%var_10678, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%var_10678, dtype="uint64") /* ty=Tensor[(3, 12, 6), uint64] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %298 = right_shift(%296, %297) /* ty=Tensor[(3, 12, 6), uint64] */;
  %299 = cast(%298, dtype="float64") /* ty=Tensor[(3, 12, 6), float64] */;
  %300 = acos(%299) /* ty=Tensor[(3, 12, 6), float64] */;
  %301 = @func_9982() /* ty=Tensor[(12, 13, 5), float32] */;
  (%300, %301)
}

def @func_6227() -> (Tensor[(11, 8, 7), float64],) {
  %302 = @func_5100() /* ty=(Tensor[(11, 8, 7), float64],) */;
  %303 = %302.0;
  (%303,)
}

def @func_9761() -> (Tensor[(12, 13, 5), float32], Tensor[(10, 30), float32]) {
  %304 = @func_7723() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %305 = @func_5970() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(10, 30), float32]) */;
  %306 = %304.0;
  %307 = %305.2;
  (%306, %307)
}

def @func_3727() -> (Tensor[(12, 13, 5), float32],) {
  %308 = @func_3366() /* ty=Tensor[(12, 13, 5), float32] */;
  %309 = cast(%308, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %310 = atanh(%309) /* ty=Tensor[(12, 13, 5), float32] */;
  (%310,)
}

def @func_6877() -> (Tensor[(12, 13, 5), float32], Tensor[(448), uint8], Tensor[(8), uint8], Tensor[(11, 8, 7), float64]) {
  %311 = cast(meta[relay.Constant][16] /* ty=Tensor[(8), uint8] */, dtype="uint8") /* ty=Tensor[(8), uint8] */;
  %312 = reshape(%311, newshape=[8]) /* ty=Tensor[(8), uint8] */;
  %313 = @func_2416(%312) /* ty=(Tensor[(12, 13, 5), float64], Tensor[(4, 14, 8), int64], Tensor[(8), uint8], Tensor[(448), uint8]) */;
  %314 = @func_6227() /* ty=(Tensor[(11, 8, 7), float64],) */;
  %315 = @func_4940() /* ty=Tensor[(12, 13, 5), float32] */;
  %316 = %313.3;
  %317 = %314.0;
  (%315, %316, meta[relay.Constant][16] /* ty=Tensor[(8), uint8] */, %317)
}

def @func_3380(%var_3371: Tensor[(3, 14, 14), float64], %var_3376: Tensor[(56, 8), uint8]) -> (Tensor[(3, 14, 14), float64], Tensor[(12, 13, 5), float64], Tensor[(56, 8), uint8], Tensor[(780), float64]) {
  %318 = cast(%var_3371, dtype="float64") /* ty=Tensor[(3, 14, 14), float64] */;
  %319 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(3, 14, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 14, 14), float64] */, dtype="float64") /* ty=Tensor[(3, 14, 14), float64] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %322 = cast(%var_3376, dtype="uint8") /* ty=Tensor[(56, 8), uint8] */;
  %323 = cast(meta[relay.Constant][18] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %324 = reshape(%322, newshape=[448]) /* ty=Tensor[(448), uint8] */;
  %325 = reshape(%323, newshape=[12, 13, 5]) /* ty=Tensor[(12, 13, 5), float64] */;
  %326 = @func_2970(%324, %325) /* ty=(Tensor[(4, 14, 8), int64], Tensor[(4, 2), uint8], Tensor[(448), uint8], Tensor[(12, 13, 5), float64]) */;
  %327 = floor_mod(%320, %321) /* ty=Tensor[(3, 14, 14), float64] */;
  %328 = %326.3;
  (%327, %328, %var_3376, meta[relay.Constant][18] /* ty=Tensor[(780), float64] */)
}

def @func_8697() -> Tensor[(12, 13, 5), float32] {
  @func_5265() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_7874() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %329 = @func_4430() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(4, 36), int64]) */;
  %330 = @func_3600() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %331 = %329.1;
  %332 = %330.2;
  (%331, %332)
}

def @func_4688() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(1320), float64], Tensor[(144), int64]) {
  %333 = @func_3600() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %334 = cast(meta[relay.Constant][19] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %335 = cast(meta[relay.Constant][20] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %336 = reshape(%334, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), float64] */;
  %337 = reshape(%335, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %338 = @func_2928(%336, %337) /* ty=(Tensor[(12, 11, 10), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
  %339 = @func_3019() /* ty=Tensor[(12, 13, 5), float32] */;
  %340 = %333.4;
  %341 = %338.1;
  (%339, %340, %341, meta[relay.Constant][19] /* ty=Tensor[(1320), float64] */, meta[relay.Constant][20] /* ty=Tensor[(144), int64] */)
}

def @func_9221(%var_9197: Tensor[(11, 4, 13), float32], %var_9213: Tensor[(12, 42), float64]) -> (Tensor[(11, 4, 13), float32], Tensor[(14, 5, 15), float64], Tensor[(1050), float64], Tensor[(12, 13, 5), float32], Tensor[(11, 4, 13), float64], Tensor[(2, 72), int64], Tensor[(12, 42), float64], Tensor[(12, 13, 5), float32]) {
  %342 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 1, 13), float32] */, dtype="float32") /* ty=Tensor[(11, 1, 13), float32] */;
  %343 = cast(%var_9197, dtype="float32") /* ty=Tensor[(11, 4, 13), float32] */;
  %344 = cast(meta[relay.Constant][22] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %345 = reshape(%344, newshape=[14, 5, 15]) /* ty=Tensor[(14, 5, 15), float64] */;
  %346 = @func_4764(%345) /* ty=(Tensor[(14, 5, 15), float64],) */;
  %347 = @func_6675() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %348 = cast(%var_9197, dtype="float64") /* ty=Tensor[(11, 4, 13), float64] */;
  %349 = cast(%var_9213, dtype="float64") /* ty=Tensor[(12, 42), float64] */;
  %350 = reshape(%349, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %351 = @func_7292(%350) /* ty=(Tensor[(4, 36), int64], Tensor[(2, 72), int64], Tensor[(504), float64]) */;
  %352 = @func_3658() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %353 = divide(%342, %343) /* ty=Tensor[(11, 4, 13), float32] */;
  %354 = %346.0;
  %355 = %347.0;
  %356 = atan(%348) /* ty=Tensor[(11, 4, 13), float64] */;
  %357 = %351.1;
  %358 = %352.0;
  (%353, %354, meta[relay.Constant][22] /* ty=Tensor[(1050), float64] */, %355, %356, %357, %var_9213, %358)
}

def @func_11218() -> (Tensor[(12, 13, 5), float32],) {
  %359 = @func_5265() /* ty=Tensor[(12, 13, 5), float32] */;
  (%359,)
}

def @func_8145() -> (Tensor[(12, 13, 5), float32],) {
  %360 = @func_7129() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %361 = %360.0;
  (%361,)
}

def @func_11288() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %362 = @func_7723() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %363 = %362.0;
  %364 = @func_4726() /* ty=Tensor[(12, 13, 5), float32] */;
  (%363, %364)
}

def @func_2744(%var_2739: Tensor[(12, 13, 5), float64]) -> Tensor[(12, 13, 5), bool] {
  %365 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
  %366 = %365.0;
  %367 = cast(%var_2739, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %369 = cast(%366, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%369, %370) /* ty=Tensor[(12, 13, 5), bool] */
}

def @func_6841(%var_6829: Tensor[(2145), float32]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2145), float32]) {
  %371 = @func_4446() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %372 = @func_3658() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %373 = cast(%var_6829, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %374 = reshape(%373, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %375 = @func_5353(%374) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) */;
  %376 = %371.0;
  %377 = %372.1;
  %378 = %375.1;
  (%376, %377, %378, %var_6829)
}

def @func_12237(%var_12233: Tensor[(448), uint8]) -> (Tensor[(12, 13, 5), float32], Tensor[(8), uint8], Tensor[(448), uint8]) {
  %379 = @func_7859() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %380 = cast(%var_12233, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %381 = reshape(%380, newshape=[448]) /* ty=Tensor[(448), uint8] */;
  %382 = @func_2566(%381) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(4, 14, 8), bool], Tensor[(8), uint8], Tensor[(448), uint8]) */;
  %383 = %379.0;
  %384 = %382.2;
  (%383, %384, %var_12233)
}

def @func_5946() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %385 = @func_3749() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %386 = %385.0;
  %387 = @func_4726() /* ty=Tensor[(12, 13, 5), float32] */;
  (%386, %387)
}

def @func_6313(%var_6294: Tensor[(4, 1, 6), int8], %var_6295: Tensor[(4, 7, 6), int8], %var_6309: Tensor[(4, 7, 6), bool]) -> Tensor[(4, 7, 6), bool] {
  %388 = cast(%var_6294, dtype="bool") /* ty=Tensor[(4, 1, 6), bool] */;
  %389 = cast(%var_6295, dtype="bool") /* ty=Tensor[(4, 7, 6), bool] */;
  %390 = equal(%388, %389) /* ty=Tensor[(4, 7, 6), bool] */;
  %391 = cast(%var_6309, dtype="bool") /* ty=Tensor[(4, 7, 6), bool] */;
  %392 = shape_of(%390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%390, dtype="bool") /* ty=Tensor[(4, 7, 6), bool] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%393, %394) /* ty=Tensor[(4, 7, 6), bool] */
}

def @func_7569() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %395 = @func_3079() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %396 = @func_4471() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %397 = %395.0;
  %398 = %396.0;
  (%397, %398)
}

def @func_10209() -> Tensor[(10, 12, 2), float64] {
  %399 = @func_9852() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64]) */;
  %399.1
}

def @func_6803(%var_6798: Tensor[(4, 36), float32]) -> (Tensor[(4, 36), int8],) {
  %400 = @func_4430() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(4, 36), int64]) */;
  %401 = %400.2;
  %402 = cast(%401, dtype="float32") /* ty=Tensor[(4, 36), float32] */;
  %403 = sigmoid(%402) /* ty=Tensor[(4, 36), float32] */;
  %404 = cast(%var_6798, dtype="int8") /* ty=Tensor[(4, 36), int8] */;
  %405 = shape_of(%403, dtype="int32") /* ty=Tensor[(2), int32] */;
  %406 = cast(%403, dtype="int8") /* ty=Tensor[(4, 36), int8] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %408 = bitwise_xor(%406, %407) /* ty=Tensor[(4, 36), int8] */;
  (%408,)
}

def @func_7776() -> (Tensor[(12, 13, 5), float32],) {
  %409 = @func_5745() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %410 = %409.0;
  (%410,)
}

def @func_3688() -> Tensor[(12, 13, 5), float32] {
  @func_3407() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_2666() -> (Tensor[(12, 13, 5), float32],) {
  %411 = @func_2364() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %412 = %411.0;
  %413 = cast(%412, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %414 = acosh(%413) /* ty=Tensor[(12, 13, 5), float32] */;
  (%414,)
}

def @func_4446() -> (Tensor[(12, 13, 5), float32],) {
  %415 = @func_3079() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %416 = %415.0;
  (%416,)
}

def @func_4430() -> (Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(4, 36), int64]) {
  %417 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %418 = @func_4224() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %419 = %418.0;
  %420 = cast(%419, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
  %421 = shape_of(%417, dtype="int32") /* ty=Tensor[(3), int32] */;
  %422 = cast(%417, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
  %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %424 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 36), int64] */, dtype="int64") /* ty=Tensor[(4, 36), int64] */;
  %425 = reshape(%424, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %426 = @func_4323(%425) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(144), int64], Tensor[(1320), float64], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) */;
  %427 = floor_divide(%422, %423) /* ty=Tensor[(12, 13, 5), float64] */;
  %428 = %426.0;
  (%427, %428, meta[relay.Constant][23] /* ty=Tensor[(4, 36), int64] */)
}

def @func_10615(%var_10559: Tensor[(2, 16, 7), float32], %var_10577: Tensor[(2145), float32]) -> (Tensor[(13, 11, 15), float32], Tensor[(2145), float32], Tensor[(12, 13, 5), float32], Tensor[(2, 16, 7), float64], Tensor[(2, 16, 7), bool]) {
  %429 = cast(%var_10577, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %430 = reshape(%429, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %431 = @func_3180(%430) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) */;
  %432 = @func_7489() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %433 = cast(%var_10559, dtype="float64") /* ty=Tensor[(2, 16, 7), float64] */;
  %434 = asinh(%433) /* ty=Tensor[(2, 16, 7), float64] */;
  %435 = cast(%434, dtype="float64") /* ty=Tensor[(2, 16, 7), float64] */;
  %436 = cast(-2.40337f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %437 = cast(%var_10559, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %438 = floor_mod(%436, %437) /* ty=Tensor[(2, 16, 7), float32] */;
  %439 = cast(%438, dtype="bool") /* ty=Tensor[(2, 16, 7), bool] */;
  %440 = shape_of(%434, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%434, dtype="bool") /* ty=Tensor[(2, 16, 7), bool] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %443 = %431.1;
  %444 = %432.1;
  %445 = tan(%435) /* ty=Tensor[(2, 16, 7), float64] */;
  %446 = equal(%441, %442) /* ty=Tensor[(2, 16, 7), bool] */;
  (%443, %var_10577, %444, %445, %446)
}

def @func_6662() -> Tensor[(12, 13, 5), float32] {
  @func_5265() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_7010(%var_7003: Tensor[(11, 15, 7), float32], %var_7004: Tensor[(11, 15, 7), float32]) -> Tensor[(11, 15, 7), float32] {
  %447 = cast(%var_7004, dtype="float32") /* ty=Tensor[(11, 15, 7), float32] */;
  %448 = shape_of(%var_7003, dtype="int32") /* ty=Tensor[(3), int32] */;
  %449 = cast(%var_7003, dtype="float32") /* ty=Tensor[(11, 15, 7), float32] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  subtract(%449, %450) /* ty=Tensor[(11, 15, 7), float32] */
}

def @func_10127(%var_10120: int8, %var_10121: Tensor[(5, 1, 1), int8]) -> (Tensor[(5, 1, 1), int8], Tensor[(5, 1, 1), float64]) {
  %451 = cast(%var_10120, dtype="int8") /* ty=int8 */;
  %452 = cast(%var_10121, dtype="int8") /* ty=Tensor[(5, 1, 1), int8] */;
  %453 = cast(%var_10121, dtype="float64") /* ty=Tensor[(5, 1, 1), float64] */;
  %454 = minimum(%451, %452) /* ty=Tensor[(5, 1, 1), int8] */;
  %455 = exp(%453) /* ty=Tensor[(5, 1, 1), float64] */;
  (%454, %455)
}

def @func_10550() -> Tensor[(12, 13, 5), float32] {
  @func_6662() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_10380() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %456 = @func_7895() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %457 = @func_4471() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %458 = %456.0;
  %459 = %457.1;
  %460 = @func_7385() /* ty=Tensor[(12, 13, 5), float32] */;
  (%458, %459, %460)
}

def @func_10480() -> (Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(504), float64]) {
  %461 = @func_6426() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %462 = cast(meta[relay.Constant][24] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %463 = reshape(%462, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %464 = @func_9921(%463) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(12, 13, 5), float32]) */;
  %465 = %461.0;
  %466 = %464.3;
  (%465, %466, meta[relay.Constant][24] /* ty=Tensor[(504), float64] */)
}

def @func_11846() -> (Tensor[(11, 8, 7), float64], Tensor[(12, 13, 5), float32]) {
  %467 = @func_10089() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %468 = @func_10877() /* ty=Tensor[(11, 8, 7), float64] */;
  %469 = %467.1;
  (%468, %469)
}

def @func_7947(%var_7935: Tensor[(1, 10, 11), float32]) -> Tensor[(?, 10, 11), uint32] {
  %470 = cast(%var_7935, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %471 = log(%470) /* ty=Tensor[(1, 10, 11), float32] */;
  %472 = cast(%471, dtype="uint32") /* ty=Tensor[(1, 10, 11), uint32] */;
  %473 = shape_of(%var_7935, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%var_7935, dtype="uint32") /* ty=Tensor[(1, 10, 11), uint32] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  maximum(%474, %475) /* ty=Tensor[(?, 10, 11), uint32] */
}

def @func_2364() -> (Tensor[(12, 13, 5), float32],) {
  %476 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
  (%476,)
}

def @func_7859() -> (Tensor[(12, 13, 5), float32],) {
  %477 = @func_3407() /* ty=Tensor[(12, 13, 5), float32] */;
  (%477,)
}

def @func_8801() -> (Tensor[(12, 13, 5), float32],) {
  %478 = @func_4166() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %479 = %478.0;
  (%479,)
}

def @func_10115() -> Tensor[(12, 13, 5), float32] {
  %480 = @func_7895() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %480.0
}

def @func_10456() -> Tensor[(12, 13, 5), float32] {
  %481 = @func_6532() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(300), float32]) */;
  %481.1
}

def @func_5159(%var_5154: Tensor[(224), uint32], %var_5155: Tensor[(8), uint8]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2, 8, 14), bool], Tensor[(224), uint32], Tensor[(8), uint8]) {
  %482 = @func_4808() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %483 = @func_2364() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %484 = cast(%var_5154, dtype="uint32") /* ty=Tensor[(224), uint32] */;
  %485 = cast(%var_5155, dtype="uint8") /* ty=Tensor[(8), uint8] */;
  %486 = reshape(%484, newshape=[2, 8, 14]) /* ty=Tensor[(2, 8, 14), uint32] */;
  %487 = reshape(%485, newshape=[1, 8]) /* ty=Tensor[(1, 8), uint8] */;
  %488 = @func_2878(%486, %487) /* ty=(Tensor[(8), uint8], Tensor[(1, 8), uint8], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(260), float64], Tensor[(12, 13, 5), float32], Tensor[(2, 8, 14), bool]) */;
  %489 = %482.0;
  %490 = %483.0;
  %491 = %488.6;
  (%489, %490, %491, %var_5154, %var_5155)
}

def @func_4528() -> (Tensor[(12, 13, 5), float32], Tensor[(4, 14, 8), int64], Tensor[(224, 2), uint8]) {
  %492 = @func_2666() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %493 = cast(meta[relay.Constant][25] /* ty=Tensor[(224, 2), uint8] */, dtype="uint8") /* ty=Tensor[(224, 2), uint8] */;
  %494 = %492.0;
  %495 = cast(%494, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
  %496 = reshape(%493, newshape=[448]) /* ty=Tensor[(448), uint8] */;
  %497 = reshape(%495, newshape=[12, 13, 5]) /* ty=Tensor[(12, 13, 5), float64] */;
  %498 = @func_2970(%496, %497) /* ty=(Tensor[(4, 14, 8), int64], Tensor[(4, 2), uint8], Tensor[(448), uint8], Tensor[(12, 13, 5), float64]) */;
  %499 = %498.0;
  (%494, %499, meta[relay.Constant][25] /* ty=Tensor[(224, 2), uint8] */)
}

def @func_6291() -> Tensor[(12, 13, 5), float32] {
  @func_3407() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_11384() -> (Tensor[(12, 13, 5), float32], Tensor[(300), bool], Tensor[(12, 13, 5), float32]) {
  %500 = @func_7874() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %501 = cast(meta[relay.Constant][26] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %502 = reshape(%501, newshape=[15, 5, 4]) /* ty=Tensor[(15, 5, 4), float32] */;
  %503 = @func_3958(%502) /* ty=(Tensor[(15, 5, 4), float32],) */;
  %504 = %503.0;
  %505 = cast(%504, dtype="bool") /* ty=Tensor[(15, 5, 4), bool] */;
  %506 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(300), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %507 = cast(meta[relay.Constant][26] /* ty=Tensor[(300), float32] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?), bool] */;
  %509 = @func_4224() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %510 = %500.1;
  %511 = less_equal(%507, %508) /* ty=Tensor[(300), bool] */;
  %512 = %509.0;
  (%510, %511, %512)
}

def @func_3366() -> Tensor[(12, 13, 5), float32] {
  %513 = @func_2666() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %513.0
}

def @func_3749() -> (Tensor[(12, 13, 5), float32],) {
  %514 = @func_3600() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %515 = %514.4;
  (%515,)
}

def @func_8219(%var_8213: Tensor[(1232), float64]) -> (Tensor[(448), uint8], Tensor[(7, 16, 11), float32], Tensor[(1232), float64]) {
  %516 = @func_6877() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(448), uint8], Tensor[(8), uint8], Tensor[(11, 8, 7), float64]) */;
  %517 = cast(%var_8213, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %518 = reshape(%517, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %519 = %516.1;
  %520 = @func_2939(%518) /* ty=Tensor[(7, 16, 11), float32] */;
  (%519, %520, %var_8213)
}

def @func_7682() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64]) {
  %521 = @func_5094() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %522 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
  %523 = %521.0;
  %524 = %522.0;
  (%523, %524)
}

def @func_5864(%var_5859: float64, %var_5860: Tensor[(2, 1, 12), float64]) -> (Tensor[(2, 1, 12), float64],) {
  %525 = cast(%var_5859, dtype="float64") /* ty=float64 */;
  %526 = cast(%var_5860, dtype="float64") /* ty=Tensor[(2, 1, 12), float64] */;
  %527 = divide(%525, %526) /* ty=Tensor[(2, 1, 12), float64] */;
  (%527,)
}

def @func_5265() -> Tensor[(12, 13, 5), float32] {
  @func_3407() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_6346() -> Tensor[(12, 13, 5), float32] {
  %528 = @func_6038() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %528.0
}

def @func_5719() -> Tensor[(12, 13, 5), float32] {
  %529 = @func_2666() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %529.0
}

def @func_9368() -> (Tensor[(12, 13, 5), float32],) {
  %530 = @func_6357() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
  %531 = %530.0;
  (%531,)
}

def @func_7723() -> (Tensor[(12, 13, 5), float32],) {
  %532 = @func_4430() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(4, 36), int64]) */;
  %533 = %532.1;
  (%533,)
}

def @func_8872() -> (Tensor[(11, 8, 7), float64],) {
  %534 = @func_6227() /* ty=(Tensor[(11, 8, 7), float64],) */;
  %535 = %534.0;
  (%535,)
}

def @func_6260(%var_6255: Tensor[(12, 13, 5), float32]) -> (Tensor[(12, 13, 5), bool],) {
  %536 = @func_5069() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %537 = %536.0;
  %538 = cast(%var_6255, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %539 = shape_of(%537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %540 = cast(%537, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %542 = equal(%540, %541) /* ty=Tensor[(12, 13, 5), bool] */;
  (%542,)
}

def @func_8583() -> (Tensor[(144), int64],) {
  %543 = @func_4688() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(1320), float64], Tensor[(144), int64]) */;
  %544 = %543.4;
  (%544,)
}

def @func_3600() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %545 = @func_2666() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %546 = @func_3102() /* ty=Tensor[(12, 13, 5), float32] */;
  %547 = %545.0;
  %548 = @func_3407() /* ty=Tensor[(12, 13, 5), float32] */;
  %549 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %550 = @func_3290() /* ty=Tensor[(12, 13, 5), float32] */;
  (%546, %547, %548, %549, %550)
}

def @func_8287() -> (Tensor[(12, 13, 5), float32], Tensor[(504), float64]) {
  %551 = @func_7506() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(715, 3), float32], Tensor[(504), float64], Tensor[(504), float64]) */;
  %552 = @func_5265() /* ty=Tensor[(12, 13, 5), float32] */;
  %553 = %551.4;
  (%552, %553)
}

def @func_6622() -> Tensor[(12, 13, 5), float32] {
  %554 = @func_3658() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %554.1
}

def @func_2878(%var_2808: Tensor[(2, 8, 14), uint32], %var_2814: Tensor[(1, 8), uint8]) -> (Tensor[(8), uint8], Tensor[(1, 8), uint8], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(260), float64], Tensor[(12, 13, 5), float32], Tensor[(2, 8, 14), bool]) {
  %555 = cast(%var_2814, dtype="uint8") /* ty=Tensor[(1, 8), uint8] */;
  %556 = reshape(%555, newshape=[8]) /* ty=Tensor[(8), uint8] */;
  %557 = @func_2416(%556) /* ty=(Tensor[(12, 13, 5), float64], Tensor[(4, 14, 8), int64], Tensor[(8), uint8], Tensor[(448), uint8]) */;
  %558 = cast(meta[relay.Constant][27] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %559 = cast(meta[relay.Constant][27] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %560 = reshape(%558, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %561 = reshape(%559, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %562 = cast(meta[relay.Constant][27] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %563 = reshape(%562, newshape=[8, 18]) /* ty=Tensor[(8, 18), int64] */;
  %564 = @func_2467(%563) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(260), float64], Tensor[(12, 13, 5), float32], Tensor[(13, 10, 2), float64], Tensor[(8, 18), int32]) */;
  %565 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
  %566 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 8, 14), uint32] */, dtype="bool") /* ty=Tensor[(2, 8, 14), bool] */;
  %567 = shape_of(%var_2808, dtype="int32") /* ty=Tensor[(3), int32] */;
  %568 = cast(%var_2808, dtype="bool") /* ty=Tensor[(2, 8, 14), bool] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %570 = greater_equal(%568, %569) /* ty=Tensor[(2, 8, 14), bool] */;
  %571 = cast(%570, dtype="float32") /* ty=Tensor[(2, 8, 14), float32] */;
  %572 = sqrt(%571) /* ty=Tensor[(2, 8, 14), float32] */;
  %573 = cast(%570, dtype="bool") /* ty=Tensor[(2, 8, 14), bool] */;
  %574 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %575 = cast(%572, dtype="bool") /* ty=Tensor[(2, 8, 14), bool] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %577 = %557.2;
  %578 = @func_820(%560, %561) /* ty=Tensor[(3, 12, 4), float64] */;
  %579 = %564.2;
  %580 = %565.1;
  %581 = logical_or(%575, %576) /* ty=Tensor[(2, 8, 14), bool] */;
  (%577, %var_2814, %578, meta[relay.Constant][27] /* ty=Tensor[(144), int64] */, %579, %580, %581)
}

def @func_7385() -> Tensor[(12, 13, 5), float32] {
  %582 = @func_5069() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %582.0
}

def @func_2939(%var_2933: Tensor[(7, 16, 11), float64]) -> Tensor[(7, 16, 11), float32] {
  %583 = cast(%var_2933, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %584 = asinh(%583) /* ty=Tensor[(7, 16, 11), float64] */;
  %585 = cast(%584, dtype="float32") /* ty=Tensor[(7, 16, 11), float32] */;
  erf(%585) /* ty=Tensor[(7, 16, 11), float32] */
}

def @func_9457() -> (Tensor[(12, 13, 5), float32],) {
  %586 = @func_8967() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %587 = %586.0;
  (%587,)
}

def @func_5618() -> Tensor[(12, 13, 5), float32] {
  %588 = @func_4166() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %588.0
}

def @func_2233(%var_2225: Tensor[(12, 13, 5), float32]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), bool]) {
  %589 = @func_2118() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %590 = %589.0;
  %591 = cast(%var_2225, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %592 = shape_of(%590, dtype="int32") /* ty=Tensor[(3), int32] */;
  %593 = cast(%590, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %595 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %596 = not_equal(%593, %594) /* ty=Tensor[(12, 13, 5), bool] */;
  (%595, %596)
}

def @func_4166() -> (Tensor[(12, 13, 5), float32],) {
  %597 = @func_2364() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %598 = %597.0;
  (%598,)
}

def @func_2985() -> Tensor[(12, 13, 5), float32] {
  @func_2059() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_8460(%var_8444: Tensor[(12, 13, 5), float32]) -> (Tensor[(12, 13, 5), int32], Tensor[(12, 13, 5), float32]) {
  %599 = @func_6532() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(300), float32]) */;
  %600 = %599.0;
  %601 = cast(%var_8444, dtype="int32") /* ty=Tensor[(12, 13, 5), int32] */;
  %602 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%600, dtype="int32") /* ty=Tensor[(12, 13, 5), int32] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %605 = add(%603, %604) /* ty=Tensor[(12, 13, 5), int32] */;
  %606 = @func_3290() /* ty=Tensor[(12, 13, 5), float32] */;
  (%605, %606)
}

def @func_9525() -> (Tensor[(12, 13, 5), float32],) {
  %607 = @func_6675() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %608 = %607.0;
  (%608,)
}

def @func_7117() -> (Tensor[(12, 13, 5), uint8], Tensor[(12, 13, 5), float64], Tensor[(8), uint8]) {
  %609 = @func_4808() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %610 = %609.0;
  %611 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 13, 5), float32] */, dtype="uint8") /* ty=Tensor[(12, 13, 5), uint8] */;
  %612 = shape_of(%610, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%610, dtype="uint8") /* ty=Tensor[(12, 13, 5), uint8] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %615 = cast(meta[relay.Constant][30] /* ty=Tensor[(8), uint8] */, dtype="uint8") /* ty=Tensor[(8), uint8] */;
  %616 = reshape(%615, newshape=[8]) /* ty=Tensor[(8), uint8] */;
  %617 = @func_2416(%616) /* ty=(Tensor[(12, 13, 5), float64], Tensor[(4, 14, 8), int64], Tensor[(8), uint8], Tensor[(448), uint8]) */;
  %618 = logical_xor(%613, %614) /* ty=Tensor[(12, 13, 5), uint8] */;
  %619 = %617.0;
  (%618, %619, meta[relay.Constant][30] /* ty=Tensor[(8), uint8] */)
}

def @func_1082(%var_1038: Tensor[(13, 10, 2), float64], %var_1045: Tensor[(24, 6), int64]) -> (Tensor[(13, 10, 2), float64], Tensor[(3, 12, 4), float64], Tensor[(24, 6), int64], Tensor[(3, 12, 4), float64], Tensor[(13, 11, 15), float32], Tensor[(2145, 1), float32]) {
  %620 = cast(%var_1038, dtype="float64") /* ty=Tensor[(13, 10, 2), float64] */;
  %621 = cast(%var_1045, dtype="int64") /* ty=Tensor[(24, 6), int64] */;
  %622 = cast(%var_1045, dtype="int64") /* ty=Tensor[(24, 6), int64] */;
  %623 = reshape(%621, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %624 = reshape(%622, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %625 = @func_820(%623, %624) /* ty=Tensor[(3, 12, 4), float64] */;
  %626 = cast(%625, dtype="int64") /* ty=Tensor[(3, 12, 4), int64] */;
  %627 = cast(%var_1045, dtype="int64") /* ty=Tensor[(24, 6), int64] */;
  %628 = reshape(%626, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %629 = reshape(%627, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %630 = cast(meta[relay.Constant][31] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %631 = reshape(%630, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float32] */;
  %632 = sin(%620) /* ty=Tensor[(13, 10, 2), float64] */;
  %633 = @func_820(%628, %629) /* ty=Tensor[(3, 12, 4), float64] */;
  %634 = @func_100(%631) /* ty=Tensor[(13, 11, 15), float32] */;
  (%632, %625, %var_1045, %633, %634, meta[relay.Constant][31] /* ty=Tensor[(2145, 1), float32] */)
}

def @func_9921(%var_9900: Tensor[(504), float64]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(12, 13, 5), float32]) {
  %635 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
  %636 = cast(%var_9900, dtype="float64") /* ty=Tensor[(504), float64] */;
  %637 = reshape(%636, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %638 = @func_5550(%637) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2145), float32], Tensor[(504), float64], Tensor[(2145), float32], Tensor[(2, 72), int64], Tensor[(12, 13, 5), float32]) */;
  %639 = %635.1;
  %640 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %641 = %638.6;
  %642 = @func_7385() /* ty=Tensor[(12, 13, 5), float32] */;
  (%639, %640, %641, %var_9900, %642)
}

def @func_2138(%var_2123: Tensor[(1, 1, 8), uint8], %var_2124: Tensor[(4, 14, 8), uint8]) -> (Tensor[(4, 14, 8), bool], Tensor[(4, 14, 8), int64]) {
  %643 = cast(%var_2123, dtype="bool") /* ty=Tensor[(1, 1, 8), bool] */;
  %644 = cast(%var_2124, dtype="bool") /* ty=Tensor[(4, 14, 8), bool] */;
  %645 = cast(%var_2123, dtype="int64") /* ty=Tensor[(1, 1, 8), int64] */;
  %646 = cast(%var_2124, dtype="int64") /* ty=Tensor[(4, 14, 8), int64] */;
  %647 = equal(%643, %644) /* ty=Tensor[(4, 14, 8), bool] */;
  %648 = subtract(%645, %646) /* ty=Tensor[(4, 14, 8), int64] */;
  (%647, %648)
}

def @func_10402() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), uint8]) {
  %649 = @func_4471() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %650 = @func_7117() /* ty=(Tensor[(12, 13, 5), uint8], Tensor[(12, 13, 5), float64], Tensor[(8), uint8]) */;
  %651 = %649.1;
  %652 = @func_6346() /* ty=Tensor[(12, 13, 5), float32] */;
  %653 = %650.0;
  (%651, %652, %653)
}

def @func_6407(%var_6383: Tensor[(4, 7, 12), float64]) -> (Tensor[(4, 7, 12), bool], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) {
  %654 = cast(meta[relay.Constant][32] /* ty=Tensor[(4, 7, 12), float64] */, dtype="bool") /* ty=Tensor[(4, 7, 12), bool] */;
  %655 = shape_of(%var_6383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %656 = cast(%var_6383, dtype="bool") /* ty=Tensor[(4, 7, 12), bool] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %658 = cast(meta[relay.Constant][33] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %659 = reshape(%658, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float32] */;
  %660 = equal(%656, %657) /* ty=Tensor[(4, 7, 12), bool] */;
  %661 = @func_100(%659) /* ty=Tensor[(13, 11, 15), float32] */;
  (%660, %661, meta[relay.Constant][33] /* ty=Tensor[(2145), float32] */)
}

def @func_8744() -> Tensor[(12, 13, 5), float32] {
  @func_4940() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_9670() -> Tensor[(12, 13, 5), float32] {
  %662 = @func_3727() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %662.0
}

def @func_11178() -> Tensor[(12, 13, 5), float32] {
  %663 = @func_7776() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %663.0
}

def @func_2534(%var_2530: Tensor[(144), int64]) -> (Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
  %664 = @func_2118() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %665 = cast(%var_2530, dtype="int64") /* ty=Tensor[(144), int64] */;
  %666 = reshape(%665, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %667 = @func_1842(%666) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(9, 9, 16), float32], Tensor[(9, 9, 16), float64]) */;
  %668 = %664.0;
  %669 = %667.0;
  (%668, %669, %var_2530)
}

def @func_10199() -> (Tensor[(12, 13, 5), float64],) {
  %670 = @func_7251() /* ty=(Tensor[(12, 13, 5), float64],) */;
  %671 = %670.0;
  (%671,)
}

def @func_6038() -> (Tensor[(12, 13, 5), float32],) {
  %672 = @func_5745() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %673 = %672.0;
  (%673,)
}

def @func_11013(%var_10993: Tensor[(432), bool]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(6, 6, 12), bool], Tensor[(432), bool], Tensor[(12, 13, 5), float32]) {
  %674 = @func_6675() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %675 = @func_5094() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %676 = cast(%var_10993, dtype="bool") /* ty=Tensor[(432), bool] */;
  %677 = %674.0;
  %678 = cast(%677, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %679 = reshape(%676, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), bool] */;
  %680 = reshape(%678, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %681 = @func_9084(%679, %680) /* ty=(Tensor[(6, 6, 12), bool], Tensor[(780), float32], Tensor[(3, 12, 4), float64]) */;
  %682 = @func_8801() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %683 = %675.0;
  %684 = %681.0;
  %685 = %682.0;
  (%677, %683, %684, %var_10993, %685)
}

def @func_1978() -> Tensor[(12, 13, 5), float32] {
  %686 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 13, 5), float32] */, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  sqrt(%686) /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_11730() -> Tensor[(12, 13, 5), float32] {
  %687 = @func_7895() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %687.0
}

def @func_2467(%var_2457: Tensor[(8, 18), int64]) -> (Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(260), float64], Tensor[(12, 13, 5), float32], Tensor[(13, 10, 2), float64], Tensor[(8, 18), int32]) {
  %688 = cast(meta[relay.Constant][35] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %689 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 18), int64] */, dtype="int64") /* ty=Tensor[(8, 18), int64] */;
  %690 = reshape(%688, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), float64] */;
  %691 = reshape(%689, newshape=[24, 6]) /* ty=Tensor[(24, 6), int64] */;
  %692 = @func_1082(%690, %691) /* ty=(Tensor[(13, 10, 2), float64], Tensor[(3, 12, 4), float64], Tensor[(24, 6), int64], Tensor[(3, 12, 4), float64], Tensor[(13, 11, 15), float32], Tensor[(2145, 1), float32]) */;
  %693 = cast(meta[relay.Constant][35] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %694 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 18), int64] */, dtype="int64") /* ty=Tensor[(8, 18), int64] */;
  %695 = reshape(%693, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), float64] */;
  %696 = reshape(%694, newshape=[24, 6]) /* ty=Tensor[(24, 6), int64] */;
  %697 = @func_1082(%695, %696) /* ty=(Tensor[(13, 10, 2), float64], Tensor[(3, 12, 4), float64], Tensor[(24, 6), int64], Tensor[(3, 12, 4), float64], Tensor[(13, 11, 15), float32], Tensor[(2145, 1), float32]) */;
  %698 = cast(%var_2457, dtype="int32") /* ty=Tensor[(8, 18), int32] */;
  %699 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(8, 18), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %700 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 18), int64] */, dtype="int32") /* ty=Tensor[(8, 18), int32] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %702 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %703 = %692.4;
  %704 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %705 = %697.0;
  %706 = right_shift(%700, %701) /* ty=Tensor[(8, 18), int32] */;
  (%702, %703, meta[relay.Constant][35] /* ty=Tensor[(260), float64] */, %704, %705, %706)
}

def @func_6675() -> (Tensor[(12, 13, 5), float32],) {
  %707 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
  (%707,)
}

def @func_11795() -> (Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64], Tensor[(2, 72), int64], Tensor[(504), float64], Tensor[(12, 13, 5), float32], Tensor[(1320), float64]) {
  %708 = @func_9803() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(6, 6, 12), bool], Tensor[(432), bool]) */;
  %709 = @func_9852() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64]) */;
  %710 = cast(meta[relay.Constant][37] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %711 = reshape(%710, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %712 = @func_7292(%711) /* ty=(Tensor[(4, 36), int64], Tensor[(2, 72), int64], Tensor[(504), float64]) */;
  %713 = @func_4688() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(1320), float64], Tensor[(144), int64]) */;
  %714 = %708.0;
  %715 = %709.1;
  %716 = %712.1;
  %717 = @func_6662() /* ty=Tensor[(12, 13, 5), float32] */;
  %718 = %713.3;
  (%714, %715, %716, meta[relay.Constant][37] /* ty=Tensor[(504), float64] */, %717, %718)
}

def @func_12103() -> Tensor[(12, 13, 5), float32] {
  %719 = @func_11573() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) */;
  %719.5
}

def @func_11893(%var_11849: Tensor[(7, 6, 14), float64], %var_11862: Tensor[(7, 6, 14), float64]) -> (Tensor[(7, 6, 14), uint8], Tensor[(7, 6, 14), float64]) {
  %720 = cast(%var_11849, dtype="float64") /* ty=Tensor[(7, 6, 14), float64] */;
  %721 = exp(%720) /* ty=Tensor[(7, 6, 14), float64] */;
  %722 = cast(%var_11862, dtype="float32") /* ty=Tensor[(7, 6, 14), float32] */;
  %723 = shape_of(%721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %724 = cast(%721, dtype="float32") /* ty=Tensor[(7, 6, 14), float32] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %726 = power(%724, %725) /* ty=Tensor[(7, 6, 14), float32] */;
  %727 = cast(%721, dtype="uint8") /* ty=Tensor[(7, 6, 14), uint8] */;
  %728 = shape_of(%726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%726, dtype="uint8") /* ty=Tensor[(7, 6, 14), uint8] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %731 = cast(%726, dtype="float64") /* ty=Tensor[(7, 6, 14), float64] */;
  %732 = subtract(%729, %730) /* ty=Tensor[(7, 6, 14), uint8] */;
  %733 = acosh(%731) /* ty=Tensor[(7, 6, 14), float64] */;
  (%732, %733)
}

def @func_11602() -> (Tensor[(12, 13, 5), float32],) {
  %734 = @func_8471() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %735 = %734.0;
  (%735,)
}

def @func_12082() -> Tensor[(504), float64] {
  %736 = @func_11795() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64], Tensor[(2, 72), int64], Tensor[(504), float64], Tensor[(12, 13, 5), float32], Tensor[(1320), float64]) */;
  %737 = %736.3;
  %738 = cast(%737, dtype="float64") /* ty=Tensor[(504), float64] */;
  cos(%738) /* ty=Tensor[(504), float64] */
}

def @func_7506() -> (Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(715, 3), float32], Tensor[(504), float64], Tensor[(504), float64]) {
  %739 = @func_3658() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %740 = cast(meta[relay.Constant][38] /* ty=Tensor[(715, 3), float32] */, dtype="float32") /* ty=Tensor[(715, 3), float32] */;
  %741 = reshape(%740, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %742 = @func_5353(%741) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) */;
  %743 = cast(meta[relay.Constant][39] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %744 = reshape(%743, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %745 = @func_5550(%744) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2145), float32], Tensor[(504), float64], Tensor[(2145), float32], Tensor[(2, 72), int64], Tensor[(12, 13, 5), float32]) */;
  %746 = %739.0;
  %747 = %742.2;
  %748 = %745.3;
  (%746, %747, meta[relay.Constant][38] /* ty=Tensor[(715, 3), float32] */, %748, meta[relay.Constant][39] /* ty=Tensor[(504), float64] */)
}

def @func_7129() -> (Tensor[(12, 13, 5), float32],) {
  %749 = @func_6594() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %750 = %749.0;
  (%750,)
}

def @func_2059() -> Tensor[(12, 13, 5), float32] {
  @func_1978() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_10804(%var_10772: Tensor[(7, 14, 15), float64]) -> (Tensor[(7, 14, 15), float64], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(7, 14, 15), float64]) {
  %751 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 14, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 14, 15), float64] */;
  %752 = shape_of(%var_10772, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%var_10772, dtype="float64") /* ty=Tensor[(7, 14, 15), float64] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %755 = @func_8019() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(7, 16, 11), float32], Tensor[(1232), float64]) */;
  %756 = cast(%var_10772, dtype="float64") /* ty=Tensor[(7, 14, 15), float64] */;
  %757 = divide(%753, %754) /* ty=Tensor[(7, 14, 15), float64] */;
  %758 = @func_6662() /* ty=Tensor[(12, 13, 5), float32] */;
  %759 = %755.0;
  %760 = cosh(%756) /* ty=Tensor[(7, 14, 15), float64] */;
  (%757, %758, %759, %760)
}

def @func_8765() -> (Tensor[(12, 13, 5), float32],) {
  %761 = @func_7682() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64]) */;
  %762 = %761.0;
  (%762,)
}

def @func_10954() -> Tensor[(12, 13, 5), float32] {
  %763 = @func_6038() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %763.0
}

def @func_3958(%var_3955: Tensor[(15, 5, 4), float32]) -> (Tensor[(15, 5, 4), float32],) {
  %764 = cast(%var_3955, dtype="float32") /* ty=Tensor[(15, 5, 4), float32] */;
  %765 = atanh(%764) /* ty=Tensor[(15, 5, 4), float32] */;
  (%765,)
}

def @func_2118() -> (Tensor[(12, 13, 5), float32],) {
  %766 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  (%766,)
}

def @func_6532() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(300), float32]) {
  %767 = @func_6426() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %768 = cast(meta[relay.Constant][41] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %769 = reshape(%768, newshape=[15, 5, 4]) /* ty=Tensor[(15, 5, 4), float32] */;
  %770 = @func_3958(%769) /* ty=(Tensor[(15, 5, 4), float32],) */;
  %771 = %767.0;
  %772 = @func_5618() /* ty=Tensor[(12, 13, 5), float32] */;
  %773 = %770.0;
  (%771, %772, %773, meta[relay.Constant][41] /* ty=Tensor[(300), float32] */)
}

def @func_11973() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %774 = @func_5970() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(10, 30), float32]) */;
  %775 = @func_7859() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %776 = %774.0;
  %777 = %775.0;
  (%776, %777)
}

def @func_11480() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64]) {
  %778 = @func_10402() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), uint8]) */;
  %779 = @func_8801() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %780 = @func_10199() /* ty=(Tensor[(12, 13, 5), float64],) */;
  %781 = @func_11178() /* ty=Tensor[(12, 13, 5), float32] */;
  %782 = %778.1;
  %783 = @func_9670() /* ty=Tensor[(12, 13, 5), float32] */;
  %784 = %779.0;
  %785 = %780.0;
  (%781, %782, %783, %784, %785)
}

def @func_3497(%var_3486: Tensor[(12, 13, 5), float32]) -> Tensor[(12, 13, 5), bool] {
  %786 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %787 = cast(%var_3486, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %788 = shape_of(%786, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%786, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%789, %790) /* ty=Tensor[(12, 13, 5), bool] */
}

def @func_7638() -> Tensor[(12, 13, 5), float32] {
  %791 = @func_4446() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %791.0
}

def @func_3290() -> Tensor[(12, 13, 5), float32] {
  %792 = @func_2985() /* ty=Tensor[(12, 13, 5), float32] */;
  %793 = cast(%792, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  log(%793) /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_8019() -> (Tensor[(12, 13, 5), float32], Tensor[(7, 16, 11), float32], Tensor[(1232), float64]) {
  %794 = @func_6426() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %795 = cast(meta[relay.Constant][42] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %796 = reshape(%795, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %797 = %794.0;
  %798 = @func_2939(%796) /* ty=Tensor[(7, 16, 11), float32] */;
  (%797, %798, meta[relay.Constant][42] /* ty=Tensor[(1232), float64] */)
}

def @func_3814(%var_3773: Tensor[(1, 448), uint8], %var_3804: Tensor[(14, 448), uint8]) -> (Tensor[(12, 13, 5), float32], Tensor[(8), uint8], Tensor[(12, 13, 5), float32], Tensor[(14, 448), float32]) {
  %799 = cast(%var_3773, dtype="uint8") /* ty=Tensor[(1, 448), uint8] */;
  %800 = reshape(%799, newshape=[448]) /* ty=Tensor[(448), uint8] */;
  %801 = @func_2566(%800) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(4, 14, 8), bool], Tensor[(8), uint8], Tensor[(448), uint8]) */;
  %802 = @func_3749() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %803 = cast(%var_3773, dtype="float32") /* ty=Tensor[(1, 448), float32] */;
  %804 = cast(%var_3804, dtype="float32") /* ty=Tensor[(14, 448), float32] */;
  %805 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %806 = %801.2;
  %807 = %802.0;
  %808 = mod(%803, %804) /* ty=Tensor[(14, 448), float32] */;
  (%805, %806, %807, %808)
}

def @func_4224() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %809 = @func_2364() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %810 = @func_4166() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %811 = %809.0;
  %812 = %810.0;
  (%811, %812)
}

def @func_8651() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %813 = @func_5069() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %814 = @func_4224() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %815 = %813.0;
  %816 = %814.1;
  (%815, %816)
}

def @func_4098(%var_4081: uint64) -> (Tensor[(12, 13, 5), float64], Tensor[(3, 16, 1), uint64], uint64, Tensor[(48), uint64]) {
  %817 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
  %818 = cast(%var_4081, dtype="uint64") /* ty=uint64 */;
  %819 = cast(meta[relay.Constant][43] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %820 = reshape(%818, newshape=[]) /* ty=uint64 */;
  %821 = reshape(%819, newshape=[3, 16, 1]) /* ty=Tensor[(3, 16, 1), uint64] */;
  %822 = %817.0;
  %823 = @func_1457(%820, %821) /* ty=Tensor[(3, 16, 1), uint64] */;
  (%822, %823, %var_4081, meta[relay.Constant][43] /* ty=Tensor[(48), uint64] */)
}

def @func_4323(%var_4300: Tensor[(144), int64]) -> (Tensor[(12, 13, 5), float32], Tensor[(144), int64], Tensor[(1320), float64], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) {
  %824 = @func_3079() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %825 = cast(meta[relay.Constant][44] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %826 = cast(%var_4300, dtype="int64") /* ty=Tensor[(144), int64] */;
  %827 = reshape(%825, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), float64] */;
  %828 = reshape(%826, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %829 = @func_2928(%827, %828) /* ty=(Tensor[(12, 11, 10), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
  %830 = @func_2364() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %831 = %824.0;
  %832 = %829.2;
  %833 = %830.0;
  (%831, %832, meta[relay.Constant][44] /* ty=Tensor[(1320), float64] */, %var_4300, %833)
}

def @func_7619() -> (Tensor[(4, 36), bool], Tensor[(4, 36), float32], Tensor[(10, 12, 2), float64], Tensor[(4, 60), float64], Tensor[(4, 36), float32]) {
  %834 = @func_5226() /* ty=Tensor[(4, 36), int64] */;
  %835 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 36), int64] */, dtype="bool") /* ty=Tensor[(4, 36), bool] */;
  %836 = shape_of(%834, dtype="int32") /* ty=Tensor[(2), int32] */;
  %837 = cast(%834, dtype="bool") /* ty=Tensor[(4, 36), bool] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %839 = cast(meta[relay.Constant][46] /* ty=Tensor[(4, 36), int64] */, dtype="float32") /* ty=Tensor[(4, 36), float32] */;
  %840 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(4, 36), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %841 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 36), int64] */, dtype="float32") /* ty=Tensor[(4, 36), float32] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %843 = cast(meta[relay.Constant][47] /* ty=Tensor[(4, 60), float64] */, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %844 = reshape(%843, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), float64] */;
  %845 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 36), int64] */, dtype="float32") /* ty=Tensor[(4, 36), float32] */;
  %846 = equal(%837, %838) /* ty=Tensor[(4, 36), bool] */;
  %847 = divide(%841, %842) /* ty=Tensor[(4, 36), float32] */;
  %848 = @func_5590(%844) /* ty=Tensor[(10, 12, 2), float64] */;
  %849 = log2(%845) /* ty=Tensor[(4, 36), float32] */;
  (%846, %847, %848, meta[relay.Constant][47] /* ty=Tensor[(4, 60), float64] */, %849)
}

def @func_10753() -> Tensor[(12, 13, 5), float32] {
  @func_6291() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_4910(%var_4902: Tensor[(144), int64]) -> (Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
  %850 = @func_4153() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %851 = cast(%var_4902, dtype="int64") /* ty=Tensor[(144), int64] */;
  %852 = cast(%var_4902, dtype="int64") /* ty=Tensor[(144), int64] */;
  %853 = reshape(%851, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %854 = reshape(%852, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %855 = %850.0;
  %856 = @func_820(%853, %854) /* ty=Tensor[(3, 12, 4), float64] */;
  (%855, %856, %var_4902)
}

def @func_12145() -> (Tensor[(12, 13, 5), float32], Tensor[(11, 8, 7), float64], Tensor[(12, 13, 5), float32]) {
  %857 = @func_11129() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %858 = @func_5100() /* ty=(Tensor[(11, 8, 7), float64],) */;
  %859 = %857.0;
  %860 = %858.0;
  %861 = @func_6622() /* ty=Tensor[(12, 13, 5), float32] */;
  (%859, %860, %861)
}

def @func_9028() -> Tensor[(12, 13, 5), float32] {
  %862 = @func_3749() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %862.0
}

def @func_3180(%var_3151: Tensor[(2145), float32]) -> (Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) {
  %863 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
  %864 = cast(%var_3151, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %865 = reshape(%864, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float32] */;
  %866 = %863.1;
  %867 = @func_100(%865) /* ty=Tensor[(13, 11, 15), float32] */;
  (%866, %867, %var_3151)
}

def @func_3658() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %868 = @func_3019() /* ty=Tensor[(12, 13, 5), float32] */;
  %869 = @func_3019() /* ty=Tensor[(12, 13, 5), float32] */;
  %870 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
  (%868, %869, %870)
}

def @func_6357() -> (Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
  %871 = @func_5094() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %872 = cast(meta[relay.Constant][48] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %873 = reshape(%872, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %874 = @func_1842(%873) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(9, 9, 16), float32], Tensor[(9, 9, 16), float64]) */;
  %875 = %871.0;
  %876 = %874.0;
  (%875, %876, meta[relay.Constant][48] /* ty=Tensor[(144), int64] */)
}

def @func_2928(%var_2913: Tensor[(12, 11, 10), float64], %var_2924: Tensor[(144), int64]) -> (Tensor[(12, 11, 10), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
  %877 = cast(%var_2913, dtype="float64") /* ty=Tensor[(12, 11, 10), float64] */;
  %878 = tan(%877) /* ty=Tensor[(12, 11, 10), float64] */;
  %879 = cast(%var_2913, dtype="bool") /* ty=Tensor[(12, 11, 10), bool] */;
  %880 = shape_of(%878, dtype="int32") /* ty=Tensor[(3), int32] */;
  %881 = cast(%878, dtype="bool") /* ty=Tensor[(12, 11, 10), bool] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %883 = cast(%var_2924, dtype="int64") /* ty=Tensor[(144), int64] */;
  %884 = reshape(%883, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %885 = @func_2534(%884) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
  %886 = not_equal(%881, %882) /* ty=Tensor[(12, 11, 10), bool] */;
  %887 = %885.1;
  (%886, %887, %var_2924)
}

def @func_3920(%var_3872: Tensor[(12, 13, 5), float32], %var_3913: Tensor[(24, 6), int64]) -> (Tensor[(12, 13, 5), uint16], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(9, 9, 16), float64], Tensor[(24, 6), int64]) {
  %888 = @func_3102() /* ty=Tensor[(12, 13, 5), float32] */;
  %889 = cast(%var_3872, dtype="uint16") /* ty=Tensor[(12, 13, 5), uint16] */;
  %890 = shape_of(%888, dtype="int32") /* ty=Tensor[(3), int32] */;
  %891 = cast(%888, dtype="uint16") /* ty=Tensor[(12, 13, 5), uint16] */;
  %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %893 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
  %894 = cast(%888, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %895 = acos(%894) /* ty=Tensor[(12, 13, 5), float32] */;
  %896 = cast(%895, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
  %897 = @func_3727() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %898 = cast(%var_3913, dtype="int64") /* ty=Tensor[(24, 6), int64] */;
  %899 = reshape(%898, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %900 = @func_1842(%899) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(9, 9, 16), float32], Tensor[(9, 9, 16), float64]) */;
  %901 = multiply(%891, %892) /* ty=Tensor[(12, 13, 5), uint16] */;
  %902 = %893.1;
  %903 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %904 = cosh(%896) /* ty=Tensor[(12, 13, 5), float64] */;
  %905 = %897.0;
  %906 = %900.3;
  (%901, %902, %903, %904, %905, %906, %var_3913)
}

def @func_4940() -> Tensor[(12, 13, 5), float32] {
  %907 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
  %907.1
}

def @func_3102() -> Tensor[(12, 13, 5), float32] {
  %908 = @func_2118() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %908.0
}

def @func_9134() -> Tensor[(12, 13, 5), float32] {
  %909 = @func_7506() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(715, 3), float32], Tensor[(504), float64], Tensor[(504), float64]) */;
  %909.0
}

def @func_3019() -> Tensor[(12, 13, 5), float32] {
  %910 = @func_2666() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %910.0
}

def @func_11609() -> Tensor[(12, 13, 5), float32] {
  %911 = @func_11573() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) */;
  %911.2
}

def @func_7895() -> (Tensor[(12, 13, 5), float32],) {
  %912 = @func_7874() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %913 = %912.1;
  (%913,)
}

def @func_8967() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %914 = @func_8182() /* ty=(Tensor[(11, 8, 7), float64], Tensor[(12, 13, 5), float32]) */;
  %915 = %914.1;
  %916 = @func_3688() /* ty=Tensor[(12, 13, 5), float32] */;
  (%915, %916)
}

def @func_5590(%var_5576: Tensor[(10, 12, 2), float64]) -> Tensor[(10, 12, 2), float64] {
  %917 = cast(%var_5576, dtype="float64") /* ty=Tensor[(10, 12, 2), float64] */;
  sinh(%917) /* ty=Tensor[(10, 12, 2), float64] */
}

def @func_968(%var_901: Tensor[(7, 9, 8), float64], %var_908: Tensor[(2145), float32], %var_962: Tensor[(144), int64]) -> (Tensor[(13, 11, 15), float32], Tensor[(2145), float32], Tensor[(7, 9, 8), float32], Tensor[(7, 9, 8), int32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
  %918 = cast(%var_908, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %919 = reshape(%918, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float32] */;
  %920 = cast(%var_901, dtype="float64") /* ty=Tensor[(7, 9, 8), float64] */;
  %921 = cos(%920) /* ty=Tensor[(7, 9, 8), float64] */;
  %922 = cast(%921, dtype="float32") /* ty=Tensor[(7, 9, 8), float32] */;
  %923 = cast(%var_901, dtype="int32") /* ty=Tensor[(7, 9, 8), int32] */;
  %924 = shape_of(%921, dtype="int32") /* ty=Tensor[(3), int32] */;
  %925 = cast(%921, dtype="int32") /* ty=Tensor[(7, 9, 8), int32] */;
  %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %927 = cast(%var_962, dtype="int64") /* ty=Tensor[(144), int64] */;
  %928 = cast(%var_962, dtype="int64") /* ty=Tensor[(144), int64] */;
  %929 = reshape(%927, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %930 = reshape(%928, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %931 = @func_100(%919) /* ty=Tensor[(13, 11, 15), float32] */;
  %932 = sin(%922) /* ty=Tensor[(7, 9, 8), float32] */;
  %933 = right_shift(%925, %926) /* ty=Tensor[(7, 9, 8), int32] */;
  %934 = @func_820(%929, %930) /* ty=Tensor[(3, 12, 4), float64] */;
  (%931, %var_908, %932, %933, %934, %var_962)
}

def @func_4245(%var_4239: Tensor[(300), float32]) -> (Tensor[(15, 5, 4), float32], Tensor[(300), float32], Tensor[(12, 13, 5), float64]) {
  %935 = cast(%var_4239, dtype="float32") /* ty=Tensor[(300), float32] */;
  %936 = reshape(%935, newshape=[15, 5, 4]) /* ty=Tensor[(15, 5, 4), float32] */;
  %937 = @func_3958(%936) /* ty=(Tensor[(15, 5, 4), float32],) */;
  %938 = @func_3290() /* ty=Tensor[(12, 13, 5), float32] */;
  %939 = cast(%938, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
  %940 = %937.0;
  %941 = sin(%939) /* ty=Tensor[(12, 13, 5), float64] */;
  (%940, %var_4239, %941)
}

def @func_6081() -> (Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) {
  %942 = @func_4808() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %943 = cast(meta[relay.Constant][49] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %944 = reshape(%943, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %945 = @func_4910(%944) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
  %946 = %942.0;
  %947 = %945.1;
  %948 = @func_5265() /* ty=Tensor[(12, 13, 5), float32] */;
  (%946, %947, meta[relay.Constant][49] /* ty=Tensor[(144), int64] */, %948)
}

def @func_5069() -> (Tensor[(12, 13, 5), float32],) {
  %949 = @func_3019() /* ty=Tensor[(12, 13, 5), float32] */;
  (%949,)
}

def @func_10265() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %950 = @func_8321() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %951 = %950.0;
  %952 = @func_9670() /* ty=Tensor[(12, 13, 5), float32] */;
  (%951, %952)
}

def @func_7292(%var_7288: Tensor[(504), float64]) -> (Tensor[(4, 36), int64], Tensor[(2, 72), int64], Tensor[(504), float64]) {
  %953 = @func_4430() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(4, 36), int64]) */;
  %954 = cast(%var_7288, dtype="float64") /* ty=Tensor[(504), float64] */;
  %955 = reshape(%954, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %956 = @func_5550(%955) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2145), float32], Tensor[(504), float64], Tensor[(2145), float32], Tensor[(2, 72), int64], Tensor[(12, 13, 5), float32]) */;
  %957 = %953.2;
  %958 = %956.5;
  (%957, %958, %var_7288)
}

def @func_10177() -> Tensor[(12, 13, 5), float32] {
  %959 = @func_5946() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %959.0
}

def @func_3079() -> (Tensor[(12, 13, 5), float32],) {
  %960 = @func_2118() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %961 = %960.0;
  (%961,)
}

def @func_8321() -> (Tensor[(12, 13, 5), float32],) {
  %962 = @func_7776() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %963 = %962.0;
  (%963,)
}

def @func_2566(%var_2562: Tensor[(448), uint8]) -> (Tensor[(12, 13, 5), float32], Tensor[(4, 14, 8), bool], Tensor[(8), uint8], Tensor[(448), uint8]) {
  %964 = cast(meta[relay.Constant][50] /* ty=Tensor[(8), uint8] */, dtype="uint8") /* ty=Tensor[(8), uint8] */;
  %965 = cast(%var_2562, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %966 = reshape(%964, newshape=[1, 1, 8]) /* ty=Tensor[(1, 1, 8), uint8] */;
  %967 = reshape(%965, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), uint8] */;
  %968 = @func_2138(%966, %967) /* ty=(Tensor[(4, 14, 8), bool], Tensor[(4, 14, 8), int64]) */;
  %969 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
  %970 = %968.0;
  (%969, %970, meta[relay.Constant][50] /* ty=Tensor[(8), uint8] */, %var_2562)
}

def @func_6426() -> (Tensor[(12, 13, 5), float32],) {
  %971 = @func_3600() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %972 = %971.2;
  (%972,)
}

def @func_5970() -> (Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(10, 30), float32]) {
  %973 = @func_3749() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %974 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 30), float32] */, dtype="float32") /* ty=Tensor[(10, 30), float32] */;
  %975 = reshape(%974, newshape=[15, 5, 4]) /* ty=Tensor[(15, 5, 4), float32] */;
  %976 = @func_3958(%975) /* ty=(Tensor[(15, 5, 4), float32],) */;
  %977 = %973.0;
  %978 = %976.0;
  (%977, %978, meta[relay.Constant][51] /* ty=Tensor[(10, 30), float32] */)
}

def @func_820(%var_804: Tensor[(3, 12, 4), int64], %var_805: Tensor[(3, 12, 4), int64]) -> Tensor[(3, 12, 4), float64] {
  %979 = cast(%var_805, dtype="int64") /* ty=Tensor[(3, 12, 4), int64] */;
  %980 = shape_of(%var_804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %981 = cast(%var_804, dtype="int64") /* ty=Tensor[(3, 12, 4), int64] */;
  %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %983 = bitwise_xor(%981, %982) /* ty=Tensor[(3, 12, 4), int64] */;
  %984 = cast(%983, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  asinh(%984) /* ty=Tensor[(3, 12, 4), float64] */
}

def @func_100(%var_32: Tensor[(13, 11, 15), float32]) -> Tensor[(13, 11, 15), float32] {
  %985 = cast(%var_32, dtype="float32") /* ty=Tensor[(13, 11, 15), float32] */;
  tan(%985) /* ty=Tensor[(13, 11, 15), float32] */
}

def @func_4764(%var_4759: Tensor[(14, 5, 15), float64]) -> (Tensor[(14, 5, 15), float64],) {
  %986 = cast(%var_4759, dtype="float64") /* ty=Tensor[(14, 5, 15), float64] */;
  %987 = asin(%986) /* ty=Tensor[(14, 5, 15), float64] */;
  (%987,)
}

def @func_5550(%var_5511: Tensor[(504), float64]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2145), float32], Tensor[(504), float64], Tensor[(2145), float32], Tensor[(2, 72), int64], Tensor[(12, 13, 5), float32]) {
  %988 = @func_2118() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %989 = @func_2666() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %990 = cast(%var_5511, dtype="float64") /* ty=Tensor[(504), float64] */;
  %991 = cast(meta[relay.Constant][52] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %992 = cast(meta[relay.Constant][53] /* ty=Tensor[(2, 72), int64] */, dtype="int64") /* ty=Tensor[(2, 72), int64] */;
  %993 = reshape(%990, newshape=[7, 9, 8]) /* ty=Tensor[(7, 9, 8), float64] */;
  %994 = reshape(%991, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %995 = reshape(%992, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %996 = @func_968(%993, %994, %995) /* ty=(Tensor[(13, 11, 15), float32], Tensor[(2145), float32], Tensor[(7, 9, 8), float32], Tensor[(7, 9, 8), int32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
  %997 = %988.0;
  %998 = %989.0;
  %999 = %996.1;
  %1000 = @func_3469() /* ty=Tensor[(12, 13, 5), float32] */;
  (%997, %998, %999, %var_5511, meta[relay.Constant][52] /* ty=Tensor[(2145), float32] */, meta[relay.Constant][53] /* ty=Tensor[(2, 72), int64] */, %1000)
}

def @func_5353(%var_5335: Tensor[(2145), float32]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) {
  %1001 = @func_3079() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %1002 = cast(%var_5335, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %1003 = reshape(%1002, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float32] */;
  %1004 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
  %1005 = %1001.0;
  %1006 = @func_100(%1003) /* ty=Tensor[(13, 11, 15), float32] */;
  (%1004, %1005, %1006, %var_5335)
}

def @func_8471() -> (Tensor[(12, 13, 5), float32],) {
  %1007 = @func_6622() /* ty=Tensor[(12, 13, 5), float32] */;
  (%1007,)
}

def @func_4471() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %1008 = @func_3079() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %1009 = %1008.0;
  %1010 = cast(%1009, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %1011 = reshape(%1010, newshape=[12, 13, 5]) /* ty=Tensor[(12, 13, 5), float32] */;
  %1012 = @func_2233(%1011) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), bool]) */;
  %1013 = %1012.0;
  (%1009, %1013)
}

def @func_2715() -> (Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) {
  %1014 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %1015 = cast(%1014, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
  %1016 = @func_2364() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %1017 = log2(%1015) /* ty=Tensor[(12, 13, 5), float64] */;
  %1018 = %1016.0;
  (%1017, %1018)
}

def @func_5745() -> (Tensor[(12, 13, 5), float32],) {
  %1019 = @func_2985() /* ty=Tensor[(12, 13, 5), float32] */;
  (%1019,)
}

def @func_11928() -> Tensor[(12, 13, 5), float32] {
  %1020 = @func_2118() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %1020.0
}

def @func_10343() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %1021 = @func_8651() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %1022 = @func_6906() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %1023 = %1021.0;
  %1024 = %1022.0;
  (%1023, %1024)
}

def @func_3469() -> Tensor[(12, 13, 5), float32] {
  @func_2059() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_1341(%var_1215: Tensor[(13, 14, 15), float32], %var_1216: Tensor[(13, 14, 15), float32], %var_1271: Tensor[(2145), float32]) -> (Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(13, 11, 15), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), bool], Tensor[(144), int64], Tensor[(36, 14), float64], Tensor[(7, 9, 8), int32]) {
  %1025 = cast(%var_1216, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
  %1026 = shape_of(%var_1215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1027 = cast(%var_1215, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
  %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1029 = cast(%var_1216, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
  %1030 = shape_of(%var_1215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1031 = cast(%var_1215, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
  %1032 = dyn.reshape(%1029, %1030, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1033 = cast(meta[relay.Constant][54] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %1034 = cast(meta[relay.Constant][54] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %1035 = reshape(%1033, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %1036 = reshape(%1034, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %1037 = cast(meta[relay.Constant][55] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %1038 = reshape(%1037, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float32] */;
  %1039 = @func_100(%1038) /* ty=Tensor[(13, 11, 15), float32] */;
  %1040 = cast(%1039, dtype="float32") /* ty=Tensor[(13, 11, 15), float32] */;
  %1041 = reshape(%1040, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float32] */;
  %1042 = cast(%var_1271, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %1043 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(2145), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1044 = cast(meta[relay.Constant][55] /* ty=Tensor[(2145), float32] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %1045 = dyn.reshape(%1042, %1043, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1046 = cast(meta[relay.Constant][56] /* ty=Tensor[(36, 14), float64] */, dtype="float64") /* ty=Tensor[(36, 14), float64] */;
  %1047 = @func_100(%1041) /* ty=Tensor[(13, 11, 15), float32] */;
  %1048 = cast(%1047, dtype="float32") /* ty=Tensor[(13, 11, 15), float32] */;
  %1049 = @func_820(%1035, %1036) /* ty=Tensor[(3, 12, 4), float64] */;
  %1050 = cast(%1049, dtype="int64") /* ty=Tensor[(3, 12, 4), int64] */;
  %1051 = reshape(%1046, newshape=[7, 9, 8]) /* ty=Tensor[(7, 9, 8), float64] */;
  %1052 = reshape(%1048, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %1053 = reshape(%1050, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %1054 = @func_968(%1051, %1052, %1053) /* ty=(Tensor[(13, 11, 15), float32], Tensor[(2145), float32], Tensor[(7, 9, 8), float32], Tensor[(7, 9, 8), int32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
  %1055 = cast(meta[relay.Constant][56] /* ty=Tensor[(36, 14), float64] */, dtype="float64") /* ty=Tensor[(36, 14), float64] */;
  %1056 = cast(%1047, dtype="float32") /* ty=Tensor[(13, 11, 15), float32] */;
  %1057 = %1054.5;
  %1058 = cast(%1057, dtype="int64") /* ty=Tensor[(144), int64] */;
  %1059 = reshape(%1055, newshape=[7, 9, 8]) /* ty=Tensor[(7, 9, 8), float64] */;
  %1060 = reshape(%1056, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %1061 = reshape(%1058, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %1062 = @func_968(%1059, %1060, %1061) /* ty=(Tensor[(13, 11, 15), float32], Tensor[(2145), float32], Tensor[(7, 9, 8), float32], Tensor[(7, 9, 8), int32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
  %1063 = floor_mod(%1027, %1028) /* ty=Tensor[(13, 14, 15), float32] */;
  %1064 = less(%1031, %1032) /* ty=Tensor[(13, 14, 15), bool] */;
  %1065 = less_equal(%1044, %1045) /* ty=Tensor[(2145), bool] */;
  %1066 = %1062.3;
  (%1063, %1064, %1049, meta[relay.Constant][54] /* ty=Tensor[(144), int64] */, %1039, %1047, %1065, %1057, meta[relay.Constant][56] /* ty=Tensor[(36, 14), float64] */, %1066)
}

def @func_11263(%var_11250: Tensor[(240), float64]) -> (Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64], Tensor[(240), float64], Tensor[(14, 5, 15), float64], Tensor[(1050), float64]) {
  %1067 = cast(%var_11250, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1068 = reshape(%1067, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), float64] */;
  %1069 = cast(meta[relay.Constant][57] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %1070 = reshape(%1069, newshape=[14, 5, 15]) /* ty=Tensor[(14, 5, 15), float64] */;
  %1071 = @func_4764(%1070) /* ty=(Tensor[(14, 5, 15), float64],) */;
  %1072 = @func_6662() /* ty=Tensor[(12, 13, 5), float32] */;
  %1073 = @func_5590(%1068) /* ty=Tensor[(10, 12, 2), float64] */;
  %1074 = %1071.0;
  (%1072, %1073, %var_11250, %1074, meta[relay.Constant][57] /* ty=Tensor[(1050), float64] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10130(%var_10128: int8, %var_10129: Tensor[(5, 1, 1), int8]) -> (Tensor[(5, 1, 1), int8], Tensor[(5, 1, 1), float64]) {
  %5 = fn (%var_10120: int8, %var_10121: Tensor[(5, 1, 1), int8]) -> (Tensor[(5, 1, 1), int8], Tensor[(5, 1, 1), float64]) {
    %0 = cast(%var_10120, dtype="int8") /* ty=int8 */;
    %1 = cast(%var_10121, dtype="int8") /* ty=Tensor[(5, 1, 1), int8] */;
    %2 = cast(%var_10121, dtype="float64") /* ty=Tensor[(5, 1, 1), float64] */;
    %3 = minimum(%0, %1) /* ty=Tensor[(5, 1, 1), int8] */;
    %4 = exp(%2) /* ty=Tensor[(5, 1, 1), float64] */;
    (%3, %4)
  };
  %5(%var_10128, %var_10129) /* ty=(Tensor[(5, 1, 1), int8], Tensor[(5, 1, 1), float64]) */
}

def @func_10481() -> (Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(504), float64]) {
  %12 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(504), float64]) {
    %6 = @func_6426() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
    %8 = reshape(%7, newshape=[504]) /* ty=Tensor[(504), float64] */;
    %9 = @func_9921(%8) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(12, 13, 5), float32]) */;
    %10 = %6.0;
    %11 = %9.3;
    (%10, %11, meta[relay.Constant][0] /* ty=Tensor[(504), float64] */)
  };
  %12() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(504), float64]) */
}

def @func_4471() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %13 = @func_3079() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %14 = %13.0;
  %15 = cast(%14, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %16 = reshape(%15, newshape=[12, 13, 5]) /* ty=Tensor[(12, 13, 5), float32] */;
  %17 = @func_2233(%16) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), bool]) */;
  %18 = %17.0;
  (%14, %18)
}

def @func_8423(%var_8422: Tensor[(12, 13, 5), float32]) -> (Tensor[(12, 13, 5), bool], Tensor[(12, 13, 5), float32]) {
  %27 = fn (%var_8414: Tensor[(12, 13, 5), float32]) -> (Tensor[(12, 13, 5), bool], Tensor[(12, 13, 5), float32]) {
    %19 = @func_3019() /* ty=Tensor[(12, 13, 5), float32] */;
    %20 = cast(%var_8414, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
    %21 = shape_of(%19, dtype="int32") /* ty=Tensor[(3), int32] */;
    %22 = cast(%19, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
    %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %24 = @func_7723() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %25 = less(%22, %23) /* ty=Tensor[(12, 13, 5), bool] */;
    %26 = %24.0;
    (%25, %26)
  };
  %27(%var_8422) /* ty=(Tensor[(12, 13, 5), bool], Tensor[(12, 13, 5), float32]) */
}

def @func_2667() -> (Tensor[(12, 13, 5), float32],) {
  %32 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %28 = @func_2364() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %29 = %28.0;
    %30 = cast(%29, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
    %31 = acosh(%30) /* ty=Tensor[(12, 13, 5), float32] */;
    (%31,)
  };
  %32() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_6534() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(300), float32]) {
  @func_6532() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(300), float32]) */
}

def @func_5265() -> Tensor[(12, 13, 5), float32] {
  @func_3407() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_6878() -> (Tensor[(12, 13, 5), float32], Tensor[(448), uint8], Tensor[(8), uint8], Tensor[(11, 8, 7), float64]) {
  %40 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(448), uint8], Tensor[(8), uint8], Tensor[(11, 8, 7), float64]) {
    %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(8), uint8] */, dtype="uint8") /* ty=Tensor[(8), uint8] */;
    %34 = reshape(%33, newshape=[8]) /* ty=Tensor[(8), uint8] */;
    %35 = @func_2416(%34) /* ty=(Tensor[(12, 13, 5), float64], Tensor[(4, 14, 8), int64], Tensor[(8), uint8], Tensor[(448), uint8]) */;
    %36 = @func_6227() /* ty=(Tensor[(11, 8, 7), float64],) */;
    %37 = @func_4940() /* ty=Tensor[(12, 13, 5), float32] */;
    %38 = %35.3;
    %39 = %36.0;
    (%37, %38, meta[relay.Constant][1] /* ty=Tensor[(8), uint8] */, %39)
  };
  %40() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(448), uint8], Tensor[(8), uint8], Tensor[(11, 8, 7), float64]) */
}

def @func_10091() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  @func_10089() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_12019() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  @func_12017() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_7010(%var_7003: Tensor[(11, 15, 7), float32], %var_7004: Tensor[(11, 15, 7), float32]) -> Tensor[(11, 15, 7), float32] {
  %41 = cast(%var_7004, dtype="float32") /* ty=Tensor[(11, 15, 7), float32] */;
  %42 = shape_of(%var_7003, dtype="int32") /* ty=Tensor[(3), int32] */;
  %43 = cast(%var_7003, dtype="float32") /* ty=Tensor[(11, 15, 7), float32] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  subtract(%43, %44) /* ty=Tensor[(11, 15, 7), float32] */
}

def @func_7640() -> Tensor[(12, 13, 5), float32] {
  @func_7638() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_3292() -> Tensor[(12, 13, 5), float32] {
  @func_3290() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_8583() -> (Tensor[(144), int64],) {
  %45 = @func_4688() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(1320), float64], Tensor[(144), int64]) */;
  %46 = %45.4;
  (%46,)
}

def @func_3602() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  @func_3600() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_2537(%var_2535: Tensor[(144), int64]) -> (Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
  @func_2534(%var_2535) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */
}

def @func_5620() -> Tensor[(12, 13, 5), float32] {
  @func_5618() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_5719() -> Tensor[(12, 13, 5), float32] {
  %47 = @func_2666() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %47.0
}

def @func_6623() -> Tensor[(12, 13, 5), float32] {
  %49 = fn () -> Tensor[(12, 13, 5), float32] {
    %48 = @func_3658() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
    %48.1
  };
  %49() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_5590(%var_5576: Tensor[(10, 12, 2), float64]) -> Tensor[(10, 12, 2), float64] {
  %50 = cast(%var_5576, dtype="float64") /* ty=Tensor[(10, 12, 2), float64] */;
  sinh(%50) /* ty=Tensor[(10, 12, 2), float64] */
}

def @func_4690() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(1320), float64], Tensor[(144), int64]) {
  @func_4688() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(1320), float64], Tensor[(144), int64]) */
}

def @func_5827() -> (Tensor[(12, 13, 5), uint8], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) {
  @func_5825() /* ty=(Tensor[(12, 13, 5), uint8], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) */
}

def @func_11828(%var_11827: Tensor[(8), uint8]) -> (Tensor[(11, 8, 7), float32], Tensor[(12, 13, 5), float32], Tensor[(2, 8, 14), bool], Tensor[(224), uint32], Tensor[(8), uint8]) {
  %63 = fn (%var_11823: Tensor[(8), uint8]) -> (Tensor[(11, 8, 7), float32], Tensor[(12, 13, 5), float32], Tensor[(2, 8, 14), bool], Tensor[(224), uint32], Tensor[(8), uint8]) {
    %51 = @func_6227() /* ty=(Tensor[(11, 8, 7), float64],) */;
    %52 = %51.0;
    %53 = cast(%52, dtype="float32") /* ty=Tensor[(11, 8, 7), float32] */;
    %54 = @func_11218() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %55 = cast(meta[relay.Constant][2] /* ty=Tensor[(224), uint32] */, dtype="uint32") /* ty=Tensor[(224), uint32] */;
    %56 = cast(%var_11823, dtype="uint8") /* ty=Tensor[(8), uint8] */;
    %57 = reshape(%55, newshape=[2, 8, 14]) /* ty=Tensor[(2, 8, 14), uint32] */;
    %58 = reshape(%56, newshape=[1, 8]) /* ty=Tensor[(1, 8), uint8] */;
    %59 = @func_2878(%57, %58) /* ty=(Tensor[(8), uint8], Tensor[(1, 8), uint8], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(260), float64], Tensor[(12, 13, 5), float32], Tensor[(2, 8, 14), bool]) */;
    %60 = tan(%53) /* ty=Tensor[(11, 8, 7), float32] */;
    %61 = %54.0;
    %62 = %59.6;
    (%60, %61, %62, meta[relay.Constant][2] /* ty=Tensor[(224), uint32] */, %var_11823)
  };
  %63(%var_11827) /* ty=(Tensor[(11, 8, 7), float32], Tensor[(12, 13, 5), float32], Tensor[(2, 8, 14), bool], Tensor[(224), uint32], Tensor[(8), uint8]) */
}

def @func_11796() -> (Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64], Tensor[(2, 72), int64], Tensor[(504), float64], Tensor[(12, 13, 5), float32], Tensor[(1320), float64]) {
  %75 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64], Tensor[(2, 72), int64], Tensor[(504), float64], Tensor[(12, 13, 5), float32], Tensor[(1320), float64]) {
    %64 = @func_9803() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(6, 6, 12), bool], Tensor[(432), bool]) */;
    %65 = @func_9852() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64]) */;
    %66 = cast(meta[relay.Constant][3] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
    %67 = reshape(%66, newshape=[504]) /* ty=Tensor[(504), float64] */;
    %68 = @func_7292(%67) /* ty=(Tensor[(4, 36), int64], Tensor[(2, 72), int64], Tensor[(504), float64]) */;
    %69 = @func_4688() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(1320), float64], Tensor[(144), int64]) */;
    %70 = %64.0;
    %71 = %65.1;
    %72 = %68.1;
    %73 = @func_6662() /* ty=Tensor[(12, 13, 5), float32] */;
    %74 = %69.3;
    (%70, %71, %72, meta[relay.Constant][3] /* ty=Tensor[(504), float64] */, %73, %74)
  };
  %75() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64], Tensor[(2, 72), int64], Tensor[(504), float64], Tensor[(12, 13, 5), float32], Tensor[(1320), float64]) */
}

def @func_1844(%var_1843: Tensor[(144), int64]) -> (Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(9, 9, 16), float32], Tensor[(9, 9, 16), float64]) {
  %87 = fn (%var_1817: Tensor[(144), int64]) -> (Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(9, 9, 16), float32], Tensor[(9, 9, 16), float64]) {
    %76 = cast(%var_1817, dtype="int64") /* ty=Tensor[(144), int64] */;
    %77 = cast(%var_1817, dtype="int64") /* ty=Tensor[(144), int64] */;
    %78 = reshape(%76, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
    %79 = reshape(%77, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
    %80 = cast(meta[relay.Constant][4] /* ty=Tensor[(9, 9, 16), float64] */, dtype="float64") /* ty=Tensor[(9, 9, 16), float64] */;
    %81 = sigmoid(%80) /* ty=Tensor[(9, 9, 16), float64] */;
    %82 = cast(%81, dtype="float32") /* ty=Tensor[(9, 9, 16), float32] */;
    %83 = cast(%81, dtype="float64") /* ty=Tensor[(9, 9, 16), float64] */;
    %84 = @func_820(%78, %79) /* ty=Tensor[(3, 12, 4), float64] */;
    %85 = cosh(%82) /* ty=Tensor[(9, 9, 16), float32] */;
    %86 = erf(%83) /* ty=Tensor[(9, 9, 16), float64] */;
    (%84, %var_1817, %85, %86)
  };
  %87(%var_1843) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(9, 9, 16), float32], Tensor[(9, 9, 16), float64]) */
}

def @func_2364() -> (Tensor[(12, 13, 5), float32],) {
  %88 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
  (%88,)
}

def @func_5159(%var_5154: Tensor[(224), uint32], %var_5155: Tensor[(8), uint8]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2, 8, 14), bool], Tensor[(224), uint32], Tensor[(8), uint8]) {
  %89 = @func_4808() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %90 = @func_2364() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %91 = cast(%var_5154, dtype="uint32") /* ty=Tensor[(224), uint32] */;
  %92 = cast(%var_5155, dtype="uint8") /* ty=Tensor[(8), uint8] */;
  %93 = reshape(%91, newshape=[2, 8, 14]) /* ty=Tensor[(2, 8, 14), uint32] */;
  %94 = reshape(%92, newshape=[1, 8]) /* ty=Tensor[(1, 8), uint8] */;
  %95 = @func_2878(%93, %94) /* ty=(Tensor[(8), uint8], Tensor[(1, 8), uint8], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(260), float64], Tensor[(12, 13, 5), float32], Tensor[(2, 8, 14), bool]) */;
  %96 = %89.0;
  %97 = %90.0;
  %98 = %95.6;
  (%96, %97, %98, %var_5154, %var_5155)
}

def @func_7387() -> Tensor[(12, 13, 5), float32] {
  @func_7385() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_2141(%var_2139: Tensor[(1, 1, 8), uint8], %var_2140: Tensor[(4, 14, 8), uint8]) -> (Tensor[(4, 14, 8), bool], Tensor[(4, 14, 8), int64]) {
  %105 = fn (%var_2123: Tensor[(1, 1, 8), uint8], %var_2124: Tensor[(4, 14, 8), uint8]) -> (Tensor[(4, 14, 8), bool], Tensor[(4, 14, 8), int64]) {
    %99 = cast(%var_2123, dtype="bool") /* ty=Tensor[(1, 1, 8), bool] */;
    %100 = cast(%var_2124, dtype="bool") /* ty=Tensor[(4, 14, 8), bool] */;
    %101 = cast(%var_2123, dtype="int64") /* ty=Tensor[(1, 1, 8), int64] */;
    %102 = cast(%var_2124, dtype="int64") /* ty=Tensor[(4, 14, 8), int64] */;
    %103 = equal(%99, %100) /* ty=Tensor[(4, 14, 8), bool] */;
    %104 = subtract(%101, %102) /* ty=Tensor[(4, 14, 8), int64] */;
    (%103, %104)
  };
  %105(%var_2139, %var_2140) /* ty=(Tensor[(4, 14, 8), bool], Tensor[(4, 14, 8), int64]) */
}

def @func_6317(%var_6314: Tensor[(4, 1, 6), int8], %var_6315: Tensor[(4, 7, 6), int8], %var_6316: Tensor[(4, 7, 6), bool]) -> Tensor[(4, 7, 6), bool] {
  %113 = fn (%var_6294: Tensor[(4, 1, 6), int8], %var_6295: Tensor[(4, 7, 6), int8], %var_6309: Tensor[(4, 7, 6), bool]) -> Tensor[(4, 7, 6), bool] {
    %106 = cast(%var_6294, dtype="bool") /* ty=Tensor[(4, 1, 6), bool] */;
    %107 = cast(%var_6295, dtype="bool") /* ty=Tensor[(4, 7, 6), bool] */;
    %108 = equal(%106, %107) /* ty=Tensor[(4, 7, 6), bool] */;
    %109 = cast(%var_6309, dtype="bool") /* ty=Tensor[(4, 7, 6), bool] */;
    %110 = shape_of(%108, dtype="int32") /* ty=Tensor[(3), int32] */;
    %111 = cast(%108, dtype="bool") /* ty=Tensor[(4, 7, 6), bool] */;
    %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%111, %112) /* ty=Tensor[(4, 7, 6), bool] */
  };
  %113(%var_6314, %var_6315, %var_6316) /* ty=Tensor[(4, 7, 6), bool] */
}

def @func_8322() -> (Tensor[(12, 13, 5), float32],) {
  %116 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %114 = @func_7776() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %115 = %114.0;
    (%115,)
  };
  %116() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_2534(%var_2530: Tensor[(144), int64]) -> (Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
  %117 = @func_2118() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %118 = cast(%var_2530, dtype="int64") /* ty=Tensor[(144), int64] */;
  %119 = reshape(%118, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %120 = @func_1842(%119) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(9, 9, 16), float32], Tensor[(9, 9, 16), float64]) */;
  %121 = %117.0;
  %122 = %120.0;
  (%121, %122, %var_2530)
}

def @func_4876(%var_4858: Tensor[(10, 6, 8), float32], %var_4859: Tensor[(10, 6, 8), float32], %var_4868: Tensor[(8), uint8]) -> (Tensor[(10, 6, 8), float32], Tensor[(448), uint8], Tensor[(8), uint8]) {
  %123 = cast(%var_4859, dtype="float32") /* ty=Tensor[(10, 6, 8), float32] */;
  %124 = shape_of(%var_4858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %125 = cast(%var_4858, dtype="float32") /* ty=Tensor[(10, 6, 8), float32] */;
  %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %127 = cast(%var_4868, dtype="uint8") /* ty=Tensor[(8), uint8] */;
  %128 = reshape(%127, newshape=[8]) /* ty=Tensor[(8), uint8] */;
  %129 = @func_2416(%128) /* ty=(Tensor[(12, 13, 5), float64], Tensor[(4, 14, 8), int64], Tensor[(8), uint8], Tensor[(448), uint8]) */;
  %130 = power(%125, %126) /* ty=Tensor[(10, 6, 8), float32] */;
  %131 = %129.3;
  (%130, %131, %var_4868)
}

def @func_6263(%var_6261: Tensor[(12, 13, 5), float32]) -> (Tensor[(12, 13, 5), bool],) {
  @func_6260(%var_6261) /* ty=(Tensor[(12, 13, 5), bool],) */
}

def @func_5094() -> (Tensor[(12, 13, 5), float32],) {
  %132 = @func_4808() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %133 = %132.0;
  (%133,)
}

def @func_8184() -> (Tensor[(11, 8, 7), float64], Tensor[(12, 13, 5), float32]) {
  @func_8182() /* ty=(Tensor[(11, 8, 7), float64], Tensor[(12, 13, 5), float32]) */
}

def @func_2986() -> Tensor[(12, 13, 5), float32] {
  %134 = fn () -> Tensor[(12, 13, 5), float32] {
    @func_2059() /* ty=Tensor[(12, 13, 5), float32] */
  };
  %134() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_3471() -> Tensor[(12, 13, 5), float32] {
  @func_3469() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_4166() -> (Tensor[(12, 13, 5), float32],) {
  %135 = @func_2364() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %136 = %135.0;
  (%136,)
}

def @func_4155() -> (Tensor[(12, 13, 5), float32],) {
  @func_4153() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_8585() -> (Tensor[(144), int64],) {
  @func_8583() /* ty=(Tensor[(144), int64],) */
}

def @func_8967() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %137 = @func_8182() /* ty=(Tensor[(11, 8, 7), float64], Tensor[(12, 13, 5), float32]) */;
  %138 = %137.1;
  %139 = @func_3688() /* ty=Tensor[(12, 13, 5), float32] */;
  (%138, %139)
}

def @func_9670() -> Tensor[(12, 13, 5), float32] {
  %140 = @func_3727() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %140.0
}

def @func_11848() -> (Tensor[(11, 8, 7), float64], Tensor[(12, 13, 5), float32]) {
  @func_11846() /* ty=(Tensor[(11, 8, 7), float64], Tensor[(12, 13, 5), float32]) */
}

def @func_1345(%var_1342: Tensor[(13, 14, 15), float32], %var_1343: Tensor[(13, 14, 15), float32], %var_1344: Tensor[(2145), float32]) -> (Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(13, 11, 15), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), bool], Tensor[(144), int64], Tensor[(36, 14), float64], Tensor[(7, 9, 8), int32]) {
  %183 = fn (%var_1215: Tensor[(13, 14, 15), float32], %var_1216: Tensor[(13, 14, 15), float32], %var_1271: Tensor[(2145), float32]) -> (Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(13, 11, 15), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), bool], Tensor[(144), int64], Tensor[(36, 14), float64], Tensor[(7, 9, 8), int32]) {
    %141 = cast(%var_1216, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
    %142 = shape_of(%var_1215, dtype="int32") /* ty=Tensor[(3), int32] */;
    %143 = cast(%var_1215, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
    %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %145 = cast(%var_1216, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
    %146 = shape_of(%var_1215, dtype="int32") /* ty=Tensor[(3), int32] */;
    %147 = cast(%var_1215, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
    %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %149 = cast(meta[relay.Constant][5] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
    %150 = cast(meta[relay.Constant][5] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
    %151 = reshape(%149, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
    %152 = reshape(%150, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
    %153 = cast(meta[relay.Constant][6] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %154 = reshape(%153, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float32] */;
    %155 = @func_100(%154) /* ty=Tensor[(13, 11, 15), float32] */;
    %156 = cast(%155, dtype="float32") /* ty=Tensor[(13, 11, 15), float32] */;
    %157 = reshape(%156, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float32] */;
    %158 = cast(%var_1271, dtype="bool") /* ty=Tensor[(2145), bool] */;
    %159 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(2145), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %160 = cast(meta[relay.Constant][6] /* ty=Tensor[(2145), float32] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
    %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?), bool] */;
    %162 = cast(meta[relay.Constant][7] /* ty=Tensor[(36, 14), float64] */, dtype="float64") /* ty=Tensor[(36, 14), float64] */;
    %163 = @func_100(%157) /* ty=Tensor[(13, 11, 15), float32] */;
    %164 = cast(%163, dtype="float32") /* ty=Tensor[(13, 11, 15), float32] */;
    %165 = @func_820(%151, %152) /* ty=Tensor[(3, 12, 4), float64] */;
    %166 = cast(%165, dtype="int64") /* ty=Tensor[(3, 12, 4), int64] */;
    %167 = reshape(%162, newshape=[7, 9, 8]) /* ty=Tensor[(7, 9, 8), float64] */;
    %168 = reshape(%164, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
    %169 = reshape(%166, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %170 = @func_968(%167, %168, %169) /* ty=(Tensor[(13, 11, 15), float32], Tensor[(2145), float32], Tensor[(7, 9, 8), float32], Tensor[(7, 9, 8), int32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
    %171 = cast(meta[relay.Constant][7] /* ty=Tensor[(36, 14), float64] */, dtype="float64") /* ty=Tensor[(36, 14), float64] */;
    %172 = cast(%163, dtype="float32") /* ty=Tensor[(13, 11, 15), float32] */;
    %173 = %170.5;
    %174 = cast(%173, dtype="int64") /* ty=Tensor[(144), int64] */;
    %175 = reshape(%171, newshape=[7, 9, 8]) /* ty=Tensor[(7, 9, 8), float64] */;
    %176 = reshape(%172, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
    %177 = reshape(%174, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %178 = @func_968(%175, %176, %177) /* ty=(Tensor[(13, 11, 15), float32], Tensor[(2145), float32], Tensor[(7, 9, 8), float32], Tensor[(7, 9, 8), int32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
    %179 = floor_mod(%143, %144) /* ty=Tensor[(13, 14, 15), float32] */;
    %180 = less(%147, %148) /* ty=Tensor[(13, 14, 15), bool] */;
    %181 = less_equal(%160, %161) /* ty=Tensor[(2145), bool] */;
    %182 = %178.3;
    (%179, %180, %165, meta[relay.Constant][5] /* ty=Tensor[(144), int64] */, %155, %163, %181, %173, meta[relay.Constant][7] /* ty=Tensor[(36, 14), float64] */, %182)
  };
  %183(%var_1342, %var_1343, %var_1344) /* ty=(Tensor[(13, 14, 15), float32], Tensor[(13, 14, 15), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(13, 11, 15), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), bool], Tensor[(144), int64], Tensor[(36, 14), float64], Tensor[(7, 9, 8), int32]) */
}

def @func_2931(%var_2929: Tensor[(12, 11, 10), float64], %var_2930: Tensor[(144), int64]) -> (Tensor[(12, 11, 10), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
  %195 = fn (%var_2913: Tensor[(12, 11, 10), float64], %var_2924: Tensor[(144), int64]) -> (Tensor[(12, 11, 10), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
    %184 = cast(%var_2913, dtype="float64") /* ty=Tensor[(12, 11, 10), float64] */;
    %185 = tan(%184) /* ty=Tensor[(12, 11, 10), float64] */;
    %186 = cast(%var_2913, dtype="bool") /* ty=Tensor[(12, 11, 10), bool] */;
    %187 = shape_of(%185, dtype="int32") /* ty=Tensor[(3), int32] */;
    %188 = cast(%185, dtype="bool") /* ty=Tensor[(12, 11, 10), bool] */;
    %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %190 = cast(%var_2924, dtype="int64") /* ty=Tensor[(144), int64] */;
    %191 = reshape(%190, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %192 = @func_2534(%191) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
    %193 = not_equal(%188, %189) /* ty=Tensor[(12, 11, 10), bool] */;
    %194 = %192.1;
    (%193, %194, %var_2924)
  };
  %195(%var_2929, %var_2930) /* ty=(Tensor[(12, 11, 10), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */
}

def @func_3021() -> Tensor[(12, 13, 5), float32] {
  @func_3019() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_7896() -> (Tensor[(12, 13, 5), float32],) {
  %198 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %196 = @func_7874() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
    %197 = %196.1;
    (%197,)
  };
  %198() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_12017() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %199 = @func_9525() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %200 = @func_6081() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) */;
  %201 = %199.0;
  %202 = %200.3;
  (%201, %202)
}

def @func_10804(%var_10772: Tensor[(7, 14, 15), float64]) -> (Tensor[(7, 14, 15), float64], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(7, 14, 15), float64]) {
  %203 = cast(meta[relay.Constant][8] /* ty=Tensor[(7, 14, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 14, 15), float64] */;
  %204 = shape_of(%var_10772, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%var_10772, dtype="float64") /* ty=Tensor[(7, 14, 15), float64] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %207 = @func_8019() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(7, 16, 11), float32], Tensor[(1232), float64]) */;
  %208 = cast(%var_10772, dtype="float64") /* ty=Tensor[(7, 14, 15), float64] */;
  %209 = divide(%205, %206) /* ty=Tensor[(7, 14, 15), float64] */;
  %210 = @func_6662() /* ty=Tensor[(12, 13, 5), float32] */;
  %211 = %207.0;
  %212 = cosh(%208) /* ty=Tensor[(7, 14, 15), float64] */;
  (%209, %210, %211, %212)
}

def @func_10382() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  @func_10380() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_5267() -> Tensor[(12, 13, 5), float32] {
  @func_5265() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_4224() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %213 = @func_2364() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %214 = @func_4166() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %215 = %213.0;
  %216 = %214.0;
  (%215, %216)
}

def @func_4726() -> Tensor[(12, 13, 5), float32] {
  @func_3688() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_5825() -> (Tensor[(12, 13, 5), uint8], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) {
  %217 = @func_2118() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %218 = %217.0;
  %219 = @func_3749() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %220 = %219.0;
  %221 = cast(%220, dtype="uint8") /* ty=Tensor[(12, 13, 5), uint8] */;
  %222 = shape_of(%218, dtype="int32") /* ty=Tensor[(3), int32] */;
  %223 = cast(%218, dtype="uint8") /* ty=Tensor[(12, 13, 5), uint8] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %225 = @func_4166() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %226 = cast(%220, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %227 = cast(meta[relay.Constant][9] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %228 = reshape(%226, newshape=[12, 13, 5]) /* ty=Tensor[(12, 13, 5), float32] */;
  %229 = reshape(%227, newshape=[24, 6]) /* ty=Tensor[(24, 6), int64] */;
  %230 = @func_3920(%228, %229) /* ty=(Tensor[(12, 13, 5), uint16], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(9, 9, 16), float64], Tensor[(24, 6), int64]) */;
  %231 = cast(%218, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %232 = bitwise_and(%223, %224) /* ty=Tensor[(12, 13, 5), uint8] */;
  %233 = %225.0;
  %234 = %230.3;
  %235 = erf(%231) /* ty=Tensor[(12, 13, 5), float32] */;
  (%232, %233, %234, meta[relay.Constant][9] /* ty=Tensor[(144), int64] */, %235)
}

def @func_7490() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %239 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
    %236 = @func_4688() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(1320), float64], Tensor[(144), int64]) */;
    %237 = @func_6622() /* ty=Tensor[(12, 13, 5), float32] */;
    %238 = %236.0;
    (%237, %238)
  };
  %239() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_5947() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %243 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
    %240 = @func_3749() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %241 = %240.0;
    %242 = @func_4726() /* ty=Tensor[(12, 13, 5), float32] */;
    (%241, %242)
  };
  %243() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_10177() -> Tensor[(12, 13, 5), float32] {
  %244 = @func_5946() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %244.0
}

def @func_6409(%var_6408: Tensor[(4, 7, 12), float64]) -> (Tensor[(4, 7, 12), bool], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) {
  %253 = fn (%var_6383: Tensor[(4, 7, 12), float64]) -> (Tensor[(4, 7, 12), bool], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) {
    %245 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 7, 12), float64] */, dtype="bool") /* ty=Tensor[(4, 7, 12), bool] */;
    %246 = shape_of(%var_6383, dtype="int32") /* ty=Tensor[(3), int32] */;
    %247 = cast(%var_6383, dtype="bool") /* ty=Tensor[(4, 7, 12), bool] */;
    %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %249 = cast(meta[relay.Constant][11] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %250 = reshape(%249, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float32] */;
    %251 = equal(%247, %248) /* ty=Tensor[(4, 7, 12), bool] */;
    %252 = @func_100(%250) /* ty=Tensor[(13, 11, 15), float32] */;
    (%251, %252, meta[relay.Constant][11] /* ty=Tensor[(2145), float32] */)
  };
  %253(%var_6408) /* ty=(Tensor[(4, 7, 12), bool], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) */
}

def @func_2882(%var_2880: Tensor[(2, 8, 14), uint32], %var_2881: Tensor[(1, 8), uint8]) -> (Tensor[(8), uint8], Tensor[(1, 8), uint8], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(260), float64], Tensor[(12, 13, 5), float32], Tensor[(2, 8, 14), bool]) {
  @func_2878(%var_2880, %var_2881) /* ty=(Tensor[(8), uint8], Tensor[(1, 8), uint8], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(260), float64], Tensor[(12, 13, 5), float32], Tensor[(2, 8, 14), bool]) */
}

def @func_6202(%var_6199: Tensor[(11, 195), float32], %var_6200: Tensor[(300), float32], %var_6201: Tensor[(2, 616), float64]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), bool], Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(11, 195), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), int64], Tensor[(48), uint64], uint64, Tensor[(7, 16, 11), float32], Tensor[(2, 616), float64]) {
  %285 = fn (%var_6127: Tensor[(11, 195), float32], %var_6136: Tensor[(300), float32], %var_6194: Tensor[(2, 616), float64]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), bool], Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(11, 195), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), int64], Tensor[(48), uint64], uint64, Tensor[(7, 16, 11), float32], Tensor[(2, 616), float64]) {
    %254 = @func_4471() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
    %255 = %254.1;
    %256 = cast(%255, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
    %257 = reshape(%256, newshape=[12, 13, 5]) /* ty=Tensor[(12, 13, 5), float32] */;
    %258 = cast(%var_6127, dtype="float32") /* ty=Tensor[(11, 195), float32] */;
    %259 = reshape(%258, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
    %260 = @func_3180(%259) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) */;
    %261 = cast(%var_6127, dtype="float32") /* ty=Tensor[(11, 195), float32] */;
    %262 = reshape(%261, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
    %263 = @func_5353(%262) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) */;
    %264 = cast(%var_6136, dtype="float32") /* ty=Tensor[(300), float32] */;
    %265 = reshape(%264, newshape=[15, 5, 4]) /* ty=Tensor[(15, 5, 4), float32] */;
    %266 = @func_3958(%265) /* ty=(Tensor[(15, 5, 4), float32],) */;
    %267 = %266.0;
    %268 = cast(%var_6136, dtype="int64") /* ty=Tensor[(300), int64] */;
    %269 = shape_of(%267, dtype="int32") /* ty=Tensor[(3), int32] */;
    %270 = cast(%267, dtype="int64") /* ty=Tensor[(15, 5, 4), int64] */;
    %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %272 = cast(meta[relay.Constant][12] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %273 = reshape(%272, newshape=[]) /* ty=uint64 */;
    %274 = @func_4098(%273) /* ty=(Tensor[(12, 13, 5), float64], Tensor[(3, 16, 1), uint64], uint64, Tensor[(48), uint64]) */;
    %275 = cast(%var_6194, dtype="float64") /* ty=Tensor[(2, 616), float64] */;
    %276 = reshape(%275, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
    %277 = @func_3497(%257) /* ty=Tensor[(12, 13, 5), bool] */;
    %278 = @func_3688() /* ty=Tensor[(12, 13, 5), float32] */;
    %279 = %260.1;
    %280 = @func_3366() /* ty=Tensor[(12, 13, 5), float32] */;
    %281 = %263.1;
    %282 = subtract(%270, %271) /* ty=Tensor[(15, 5, 4), int64] */;
    %283 = %274.3;
    %284 = @func_2939(%276) /* ty=Tensor[(7, 16, 11), float32] */;
    (%255, %277, %278, %279, %var_6127, %280, %281, %282, %283, meta[relay.Constant][12] /* ty=uint64 */, %284, %var_6194)
  };
  %285(%var_6199, %var_6200, %var_6201) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), bool], Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(11, 195), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), int64], Tensor[(48), uint64], uint64, Tensor[(7, 16, 11), float32], Tensor[(2, 616), float64]) */
}

def @func_7638() -> Tensor[(12, 13, 5), float32] {
  %286 = @func_4446() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %286.0
}

def @func_10550() -> Tensor[(12, 13, 5), float32] {
  @func_6662() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_3236(%var_3222: Tensor[(13, 1, 16), float32], %var_3226: Tensor[(24, 6), int64]) -> (Tensor[(13, 1, 16), float32], Tensor[(3, 12, 4), float64], Tensor[(24, 6), int64], Tensor[(12, 13, 5), float32]) {
  %287 = cast(%var_3222, dtype="float32") /* ty=Tensor[(13, 1, 16), float32] */;
  %288 = cast(%var_3226, dtype="int64") /* ty=Tensor[(24, 6), int64] */;
  %289 = cast(%var_3226, dtype="int64") /* ty=Tensor[(24, 6), int64] */;
  %290 = reshape(%288, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %291 = reshape(%289, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %292 = @func_3079() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %293 = sinh(%287) /* ty=Tensor[(13, 1, 16), float32] */;
  %294 = @func_820(%290, %291) /* ty=Tensor[(3, 12, 4), float64] */;
  %295 = %292.0;
  (%293, %294, %var_3226, %295)
}

def @func_7723() -> (Tensor[(12, 13, 5), float32],) {
  %296 = @func_4430() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(4, 36), int64]) */;
  %297 = %296.1;
  (%297,)
}

def @func_9136() -> Tensor[(12, 13, 5), float32] {
  @func_9134() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_1082(%var_1038: Tensor[(13, 10, 2), float64], %var_1045: Tensor[(24, 6), int64]) -> (Tensor[(13, 10, 2), float64], Tensor[(3, 12, 4), float64], Tensor[(24, 6), int64], Tensor[(3, 12, 4), float64], Tensor[(13, 11, 15), float32], Tensor[(2145, 1), float32]) {
  %298 = cast(%var_1038, dtype="float64") /* ty=Tensor[(13, 10, 2), float64] */;
  %299 = cast(%var_1045, dtype="int64") /* ty=Tensor[(24, 6), int64] */;
  %300 = cast(%var_1045, dtype="int64") /* ty=Tensor[(24, 6), int64] */;
  %301 = reshape(%299, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %302 = reshape(%300, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %303 = @func_820(%301, %302) /* ty=Tensor[(3, 12, 4), float64] */;
  %304 = cast(%303, dtype="int64") /* ty=Tensor[(3, 12, 4), int64] */;
  %305 = cast(%var_1045, dtype="int64") /* ty=Tensor[(24, 6), int64] */;
  %306 = reshape(%304, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %307 = reshape(%305, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %308 = cast(meta[relay.Constant][13] /* ty=Tensor[(2145, 1), float32] */, dtype="float32") /* ty=Tensor[(2145, 1), float32] */;
  %309 = reshape(%308, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float32] */;
  %310 = sin(%298) /* ty=Tensor[(13, 10, 2), float64] */;
  %311 = @func_820(%306, %307) /* ty=Tensor[(3, 12, 4), float64] */;
  %312 = @func_100(%309) /* ty=Tensor[(13, 11, 15), float32] */;
  (%310, %303, %var_1045, %311, %312, meta[relay.Constant][13] /* ty=Tensor[(2145, 1), float32] */)
}

def @func_3500(%var_3498: Tensor[(12, 13, 5), float32]) -> Tensor[(12, 13, 5), bool] {
  @func_3497(%var_3498) /* ty=Tensor[(12, 13, 5), bool] */
}

def @func_11610() -> Tensor[(12, 13, 5), float32] {
  %314 = fn () -> Tensor[(12, 13, 5), float32] {
    %313 = @func_11573() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) */;
    %313.2
  };
  %314() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_8652() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %319 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
    %315 = @func_5069() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %316 = @func_4224() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
    %317 = %315.0;
    %318 = %316.1;
    (%317, %318)
  };
  %319() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_8801() -> (Tensor[(12, 13, 5), float32],) {
  %320 = @func_4166() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %321 = %320.0;
  (%321,)
}

def @func_2715() -> (Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) {
  %322 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %323 = cast(%322, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
  %324 = @func_2364() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %325 = log2(%323) /* ty=Tensor[(12, 13, 5), float64] */;
  %326 = %324.0;
  (%325, %326)
}

def @func_5480() -> Tensor[(12, 13, 5), float32] {
  %327 = @func_3658() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %327.0
}

def @func_7385() -> Tensor[(12, 13, 5), float32] {
  %328 = @func_5069() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %328.0
}

def @func_4168() -> (Tensor[(12, 13, 5), float32],) {
  @func_4166() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_3383(%var_3381: Tensor[(3, 14, 14), float64], %var_3382: Tensor[(56, 8), uint8]) -> (Tensor[(3, 14, 14), float64], Tensor[(12, 13, 5), float64], Tensor[(56, 8), uint8], Tensor[(780), float64]) {
  %340 = fn (%var_3371: Tensor[(3, 14, 14), float64], %var_3376: Tensor[(56, 8), uint8]) -> (Tensor[(3, 14, 14), float64], Tensor[(12, 13, 5), float64], Tensor[(56, 8), uint8], Tensor[(780), float64]) {
    %329 = cast(%var_3371, dtype="float64") /* ty=Tensor[(3, 14, 14), float64] */;
    %330 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(3, 14, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %331 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 14, 14), float64] */, dtype="float64") /* ty=Tensor[(3, 14, 14), float64] */;
    %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %333 = cast(%var_3376, dtype="uint8") /* ty=Tensor[(56, 8), uint8] */;
    %334 = cast(meta[relay.Constant][15] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
    %335 = reshape(%333, newshape=[448]) /* ty=Tensor[(448), uint8] */;
    %336 = reshape(%334, newshape=[12, 13, 5]) /* ty=Tensor[(12, 13, 5), float64] */;
    %337 = @func_2970(%335, %336) /* ty=(Tensor[(4, 14, 8), int64], Tensor[(4, 2), uint8], Tensor[(448), uint8], Tensor[(12, 13, 5), float64]) */;
    %338 = floor_mod(%331, %332) /* ty=Tensor[(3, 14, 14), float64] */;
    %339 = %337.3;
    (%338, %339, %var_3376, meta[relay.Constant][15] /* ty=Tensor[(780), float64] */)
  };
  %340(%var_3381, %var_3382) /* ty=(Tensor[(3, 14, 14), float64], Tensor[(12, 13, 5), float64], Tensor[(56, 8), uint8], Tensor[(780), float64]) */
}

def @func_9761() -> (Tensor[(12, 13, 5), float32], Tensor[(10, 30), float32]) {
  %341 = @func_7723() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %342 = @func_5970() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(10, 30), float32]) */;
  %343 = %341.0;
  %344 = %342.2;
  (%343, %344)
}

def @func_2566(%var_2562: Tensor[(448), uint8]) -> (Tensor[(12, 13, 5), float32], Tensor[(4, 14, 8), bool], Tensor[(8), uint8], Tensor[(448), uint8]) {
  %345 = cast(meta[relay.Constant][16] /* ty=Tensor[(8), uint8] */, dtype="uint8") /* ty=Tensor[(8), uint8] */;
  %346 = cast(%var_2562, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %347 = reshape(%345, newshape=[1, 1, 8]) /* ty=Tensor[(1, 1, 8), uint8] */;
  %348 = reshape(%346, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), uint8] */;
  %349 = @func_2138(%347, %348) /* ty=(Tensor[(4, 14, 8), bool], Tensor[(4, 14, 8), int64]) */;
  %350 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
  %351 = %349.0;
  (%350, %351, meta[relay.Constant][16] /* ty=Tensor[(8), uint8] */, %var_2562)
}

def @func_4910(%var_4902: Tensor[(144), int64]) -> (Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
  %352 = @func_4153() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %353 = cast(%var_4902, dtype="int64") /* ty=Tensor[(144), int64] */;
  %354 = cast(%var_4902, dtype="int64") /* ty=Tensor[(144), int64] */;
  %355 = reshape(%353, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %356 = reshape(%354, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %357 = %352.0;
  %358 = @func_820(%355, %356) /* ty=Tensor[(3, 12, 4), float64] */;
  (%357, %358, %var_4902)
}

def @func_6039() -> (Tensor[(12, 13, 5), float32],) {
  %361 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %359 = @func_5745() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %360 = %359.0;
    (%360,)
  };
  %361() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_7294(%var_7293: Tensor[(504), float64]) -> (Tensor[(4, 36), int64], Tensor[(2, 72), int64], Tensor[(504), float64]) {
  %368 = fn (%var_7288: Tensor[(504), float64]) -> (Tensor[(4, 36), int64], Tensor[(2, 72), int64], Tensor[(504), float64]) {
    %362 = @func_4430() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(4, 36), int64]) */;
    %363 = cast(%var_7288, dtype="float64") /* ty=Tensor[(504), float64] */;
    %364 = reshape(%363, newshape=[504]) /* ty=Tensor[(504), float64] */;
    %365 = @func_5550(%364) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2145), float32], Tensor[(504), float64], Tensor[(2145), float32], Tensor[(2, 72), int64], Tensor[(12, 13, 5), float32]) */;
    %366 = %362.2;
    %367 = %365.5;
    (%366, %367, %var_7288)
  };
  %368(%var_7293) /* ty=(Tensor[(4, 36), int64], Tensor[(2, 72), int64], Tensor[(504), float64]) */
}

def @func_11731() -> Tensor[(12, 13, 5), float32] {
  %370 = fn () -> Tensor[(12, 13, 5), float32] {
    %369 = @func_7895() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %369.0
  };
  %370() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_6359() -> (Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
  @func_6357() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */
}

def @func_8699() -> Tensor[(12, 13, 5), float32] {
  @func_8697() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_10403() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), uint8]) {
  %376 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), uint8]) {
    %371 = @func_4471() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
    %372 = @func_7117() /* ty=(Tensor[(12, 13, 5), uint8], Tensor[(12, 13, 5), float64], Tensor[(8), uint8]) */;
    %373 = %371.1;
    %374 = @func_6346() /* ty=Tensor[(12, 13, 5), float32] */;
    %375 = %372.0;
    (%373, %374, %375)
  };
  %376() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), uint8]) */
}

def @func_7129() -> (Tensor[(12, 13, 5), float32],) {
  %377 = @func_6594() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %378 = %377.0;
  (%378,)
}

def @func_9221(%var_9197: Tensor[(11, 4, 13), float32], %var_9213: Tensor[(12, 42), float64]) -> (Tensor[(11, 4, 13), float32], Tensor[(14, 5, 15), float64], Tensor[(1050), float64], Tensor[(12, 13, 5), float32], Tensor[(11, 4, 13), float64], Tensor[(2, 72), int64], Tensor[(12, 42), float64], Tensor[(12, 13, 5), float32]) {
  %379 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 1, 13), float32] */, dtype="float32") /* ty=Tensor[(11, 1, 13), float32] */;
  %380 = cast(%var_9197, dtype="float32") /* ty=Tensor[(11, 4, 13), float32] */;
  %381 = cast(meta[relay.Constant][18] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %382 = reshape(%381, newshape=[14, 5, 15]) /* ty=Tensor[(14, 5, 15), float64] */;
  %383 = @func_4764(%382) /* ty=(Tensor[(14, 5, 15), float64],) */;
  %384 = @func_6675() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %385 = cast(%var_9197, dtype="float64") /* ty=Tensor[(11, 4, 13), float64] */;
  %386 = cast(%var_9213, dtype="float64") /* ty=Tensor[(12, 42), float64] */;
  %387 = reshape(%386, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %388 = @func_7292(%387) /* ty=(Tensor[(4, 36), int64], Tensor[(2, 72), int64], Tensor[(504), float64]) */;
  %389 = @func_3658() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %390 = divide(%379, %380) /* ty=Tensor[(11, 4, 13), float32] */;
  %391 = %383.0;
  %392 = %384.0;
  %393 = atan(%385) /* ty=Tensor[(11, 4, 13), float64] */;
  %394 = %388.1;
  %395 = %389.0;
  (%390, %391, meta[relay.Constant][18] /* ty=Tensor[(1050), float64] */, %392, %393, %394, %var_9213, %395)
}

def @func_3408() -> Tensor[(12, 13, 5), float32] {
  %396 = fn () -> Tensor[(12, 13, 5), float32] {
    @func_1978() /* ty=Tensor[(12, 13, 5), float32] */
  };
  %396() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_6663() -> Tensor[(12, 13, 5), float32] {
  %397 = fn () -> Tensor[(12, 13, 5), float32] {
    @func_5265() /* ty=Tensor[(12, 13, 5), float32] */
  };
  %397() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_9672() -> Tensor[(12, 13, 5), float32] {
  @func_9670() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_10116() -> Tensor[(12, 13, 5), float32] {
  %399 = fn () -> Tensor[(12, 13, 5), float32] {
    %398 = @func_7895() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %398.0
  };
  %399() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_10343() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %400 = @func_8651() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %401 = @func_6906() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %402 = %400.0;
  %403 = %401.0;
  (%402, %403)
}

def @func_6733(%var_6731: Tensor[(448), uint8]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(448), uint8], Tensor[(448), uint8], Tensor[(12, 13, 5), float64], uint64, Tensor[(12, 13, 5), float32], Tensor[(448), uint8]) {
  @func_6730(%var_6731) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(448), uint8], Tensor[(448), uint8], Tensor[(12, 13, 5), float64], uint64, Tensor[(12, 13, 5), float32], Tensor[(448), uint8]) */
}

def @func_5972() -> (Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(10, 30), float32]) {
  @func_5970() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(10, 30), float32]) */
}

def @func_8020() -> (Tensor[(12, 13, 5), float32], Tensor[(7, 16, 11), float32], Tensor[(1232), float64]) {
  %409 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(7, 16, 11), float32], Tensor[(1232), float64]) {
    %404 = @func_6426() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %405 = cast(meta[relay.Constant][19] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %406 = reshape(%405, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
    %407 = %404.0;
    %408 = @func_2939(%406) /* ty=Tensor[(7, 16, 11), float32] */;
    (%407, %408, meta[relay.Constant][19] /* ty=Tensor[(1232), float64] */)
  };
  %409() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(7, 16, 11), float32], Tensor[(1232), float64]) */
}

def @func_6291() -> Tensor[(12, 13, 5), float32] {
  @func_3407() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_11973() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %410 = @func_5970() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(10, 30), float32]) */;
  %411 = @func_7859() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %412 = %410.0;
  %413 = %411.0;
  (%412, %413)
}

def @func_10618(%var_10616: Tensor[(2, 16, 7), float32], %var_10617: Tensor[(2145), float32]) -> (Tensor[(13, 11, 15), float32], Tensor[(2145), float32], Tensor[(12, 13, 5), float32], Tensor[(2, 16, 7), float64], Tensor[(2, 16, 7), bool]) {
  %432 = fn (%var_10559: Tensor[(2, 16, 7), float32], %var_10577: Tensor[(2145), float32]) -> (Tensor[(13, 11, 15), float32], Tensor[(2145), float32], Tensor[(12, 13, 5), float32], Tensor[(2, 16, 7), float64], Tensor[(2, 16, 7), bool]) {
    %414 = cast(%var_10577, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %415 = reshape(%414, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
    %416 = @func_3180(%415) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) */;
    %417 = @func_7489() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
    %418 = cast(%var_10559, dtype="float64") /* ty=Tensor[(2, 16, 7), float64] */;
    %419 = asinh(%418) /* ty=Tensor[(2, 16, 7), float64] */;
    %420 = cast(%419, dtype="float64") /* ty=Tensor[(2, 16, 7), float64] */;
    %421 = cast(-2.40337f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %422 = cast(%var_10559, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
    %423 = floor_mod(%421, %422) /* ty=Tensor[(2, 16, 7), float32] */;
    %424 = cast(%423, dtype="bool") /* ty=Tensor[(2, 16, 7), bool] */;
    %425 = shape_of(%419, dtype="int32") /* ty=Tensor[(3), int32] */;
    %426 = cast(%419, dtype="bool") /* ty=Tensor[(2, 16, 7), bool] */;
    %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %428 = %416.1;
    %429 = %417.1;
    %430 = tan(%420) /* ty=Tensor[(2, 16, 7), float64] */;
    %431 = equal(%426, %427) /* ty=Tensor[(2, 16, 7), bool] */;
    (%428, %var_10577, %429, %430, %431)
  };
  %432(%var_10616, %var_10617) /* ty=(Tensor[(13, 11, 15), float32], Tensor[(2145), float32], Tensor[(12, 13, 5), float32], Tensor[(2, 16, 7), float64], Tensor[(2, 16, 7), bool]) */
}

def @func_2878(%var_2808: Tensor[(2, 8, 14), uint32], %var_2814: Tensor[(1, 8), uint8]) -> (Tensor[(8), uint8], Tensor[(1, 8), uint8], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(260), float64], Tensor[(12, 13, 5), float32], Tensor[(2, 8, 14), bool]) {
  %433 = cast(%var_2814, dtype="uint8") /* ty=Tensor[(1, 8), uint8] */;
  %434 = reshape(%433, newshape=[8]) /* ty=Tensor[(8), uint8] */;
  %435 = @func_2416(%434) /* ty=(Tensor[(12, 13, 5), float64], Tensor[(4, 14, 8), int64], Tensor[(8), uint8], Tensor[(448), uint8]) */;
  %436 = cast(meta[relay.Constant][20] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %437 = cast(meta[relay.Constant][20] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %438 = reshape(%436, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %439 = reshape(%437, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %440 = cast(meta[relay.Constant][20] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %441 = reshape(%440, newshape=[8, 18]) /* ty=Tensor[(8, 18), int64] */;
  %442 = @func_2467(%441) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(260), float64], Tensor[(12, 13, 5), float32], Tensor[(13, 10, 2), float64], Tensor[(8, 18), int32]) */;
  %443 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
  %444 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 8, 14), uint32] */, dtype="bool") /* ty=Tensor[(2, 8, 14), bool] */;
  %445 = shape_of(%var_2808, dtype="int32") /* ty=Tensor[(3), int32] */;
  %446 = cast(%var_2808, dtype="bool") /* ty=Tensor[(2, 8, 14), bool] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %448 = greater_equal(%446, %447) /* ty=Tensor[(2, 8, 14), bool] */;
  %449 = cast(%448, dtype="float32") /* ty=Tensor[(2, 8, 14), float32] */;
  %450 = sqrt(%449) /* ty=Tensor[(2, 8, 14), float32] */;
  %451 = cast(%448, dtype="bool") /* ty=Tensor[(2, 8, 14), bool] */;
  %452 = shape_of(%450, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(%450, dtype="bool") /* ty=Tensor[(2, 8, 14), bool] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %455 = %435.2;
  %456 = @func_820(%438, %439) /* ty=Tensor[(3, 12, 4), float64] */;
  %457 = %442.2;
  %458 = %443.1;
  %459 = logical_or(%453, %454) /* ty=Tensor[(2, 8, 14), bool] */;
  (%455, %var_2814, %456, meta[relay.Constant][20] /* ty=Tensor[(144), int64] */, %457, %458, %459)
}

def @func_3367() -> Tensor[(12, 13, 5), float32] {
  %461 = fn () -> Tensor[(12, 13, 5), float32] {
    %460 = @func_2666() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %460.0
  };
  %461() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_4100(%var_4099: uint64) -> (Tensor[(12, 13, 5), float64], Tensor[(3, 16, 1), uint64], uint64, Tensor[(48), uint64]) {
  %469 = fn (%var_4081: uint64) -> (Tensor[(12, 13, 5), float64], Tensor[(3, 16, 1), uint64], uint64, Tensor[(48), uint64]) {
    %462 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
    %463 = cast(%var_4081, dtype="uint64") /* ty=uint64 */;
    %464 = cast(meta[relay.Constant][22] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
    %465 = reshape(%463, newshape=[]) /* ty=uint64 */;
    %466 = reshape(%464, newshape=[3, 16, 1]) /* ty=Tensor[(3, 16, 1), uint64] */;
    %467 = %462.0;
    %468 = @func_1457(%465, %466) /* ty=Tensor[(3, 16, 1), uint64] */;
    (%467, %468, %var_4081, meta[relay.Constant][22] /* ty=Tensor[(48), uint64] */)
  };
  %469(%var_4099) /* ty=(Tensor[(12, 13, 5), float64], Tensor[(3, 16, 1), uint64], uint64, Tensor[(48), uint64]) */
}

def @func_8472() -> (Tensor[(12, 13, 5), float32],) {
  %471 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %470 = @func_6622() /* ty=Tensor[(12, 13, 5), float32] */;
    (%470,)
  };
  %471() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_9982() -> Tensor[(12, 13, 5), float32] {
  @func_7735() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_10457() -> Tensor[(12, 13, 5), float32] {
  %473 = fn () -> Tensor[(12, 13, 5), float32] {
    %472 = @func_6532() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(300), float32]) */;
    %472.1
  };
  %473() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_6081() -> (Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) {
  %474 = @func_4808() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %475 = cast(meta[relay.Constant][23] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %476 = reshape(%475, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %477 = @func_4910(%476) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
  %478 = %474.0;
  %479 = %477.1;
  %480 = @func_5265() /* ty=Tensor[(12, 13, 5), float32] */;
  (%478, %479, meta[relay.Constant][23] /* ty=Tensor[(144), int64] */, %480)
}

def @func_1978() -> Tensor[(12, 13, 5), float32] {
  %481 = cast(meta[relay.Constant][24] /* ty=Tensor[(12, 13, 5), float32] */, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  sqrt(%481) /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_12147() -> (Tensor[(12, 13, 5), float32], Tensor[(11, 8, 7), float64], Tensor[(12, 13, 5), float32]) {
  @func_12145() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(11, 8, 7), float64], Tensor[(12, 13, 5), float32]) */
}

def @func_2119() -> (Tensor[(12, 13, 5), float32],) {
  %483 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %482 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
    (%482,)
  };
  %483() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_8697() -> Tensor[(12, 13, 5), float32] {
  @func_5265() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_8407() -> (Tensor[(12, 13, 5), float32],) {
  %486 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %484 = @func_6532() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(300), float32]) */;
    %485 = %484.1;
    (%485,)
  };
  %486() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_5970() -> (Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(10, 30), float32]) {
  %487 = @func_3749() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %488 = cast(meta[relay.Constant][25] /* ty=Tensor[(10, 30), float32] */, dtype="float32") /* ty=Tensor[(10, 30), float32] */;
  %489 = reshape(%488, newshape=[15, 5, 4]) /* ty=Tensor[(15, 5, 4), float32] */;
  %490 = @func_3958(%489) /* ty=(Tensor[(15, 5, 4), float32],) */;
  %491 = %487.0;
  %492 = %490.0;
  (%491, %492, meta[relay.Constant][25] /* ty=Tensor[(10, 30), float32] */)
}

def @func_4767(%var_4765: Tensor[(14, 5, 15), float64]) -> (Tensor[(14, 5, 15), float64],) {
  @func_4764(%var_4765) /* ty=(Tensor[(14, 5, 15), float64],) */
}

def @func_7777() -> (Tensor[(12, 13, 5), float32],) {
  %495 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %493 = @func_5745() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %494 = %493.0;
    (%494,)
  };
  %495() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_5746() -> (Tensor[(12, 13, 5), float32],) {
  %497 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %496 = @func_2985() /* ty=Tensor[(12, 13, 5), float32] */;
    (%496,)
  };
  %497() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_9084(%var_9046: Tensor[(6, 6, 12), bool], %var_9053: Tensor[(780), float32]) -> (Tensor[(6, 6, 12), bool], Tensor[(780), float32], Tensor[(3, 12, 4), float64]) {
  %498 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 6, 12), bool] */, dtype="bool") /* ty=Tensor[(6, 6, 12), bool] */;
  %499 = shape_of(%var_9046, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%var_9046, dtype="bool") /* ty=Tensor[(6, 6, 12), bool] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %502 = cast(%var_9053, dtype="float32") /* ty=Tensor[(780), float32] */;
  %503 = reshape(%502, newshape=[12, 13, 5]) /* ty=Tensor[(12, 13, 5), float32] */;
  %504 = @func_2017(%503) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
  %505 = %504.2;
  %506 = cast(%505, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %507 = sinh(%506) /* ty=Tensor[(3, 12, 4), float64] */;
  %508 = cast(%507, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %509 = logical_and(%500, %501) /* ty=Tensor[(6, 6, 12), bool] */;
  %510 = log(%508) /* ty=Tensor[(3, 12, 4), float64] */;
  (%509, %var_9053, %510)
}

def @func_972(%var_969: Tensor[(7, 9, 8), float64], %var_970: Tensor[(2145), float32], %var_971: Tensor[(144), int64]) -> (Tensor[(13, 11, 15), float32], Tensor[(2145), float32], Tensor[(7, 9, 8), float32], Tensor[(7, 9, 8), int32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
  %528 = fn (%var_901: Tensor[(7, 9, 8), float64], %var_908: Tensor[(2145), float32], %var_962: Tensor[(144), int64]) -> (Tensor[(13, 11, 15), float32], Tensor[(2145), float32], Tensor[(7, 9, 8), float32], Tensor[(7, 9, 8), int32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
    %511 = cast(%var_908, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %512 = reshape(%511, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float32] */;
    %513 = cast(%var_901, dtype="float64") /* ty=Tensor[(7, 9, 8), float64] */;
    %514 = cos(%513) /* ty=Tensor[(7, 9, 8), float64] */;
    %515 = cast(%514, dtype="float32") /* ty=Tensor[(7, 9, 8), float32] */;
    %516 = cast(%var_901, dtype="int32") /* ty=Tensor[(7, 9, 8), int32] */;
    %517 = shape_of(%514, dtype="int32") /* ty=Tensor[(3), int32] */;
    %518 = cast(%514, dtype="int32") /* ty=Tensor[(7, 9, 8), int32] */;
    %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %520 = cast(%var_962, dtype="int64") /* ty=Tensor[(144), int64] */;
    %521 = cast(%var_962, dtype="int64") /* ty=Tensor[(144), int64] */;
    %522 = reshape(%520, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
    %523 = reshape(%521, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
    %524 = @func_100(%512) /* ty=Tensor[(13, 11, 15), float32] */;
    %525 = sin(%515) /* ty=Tensor[(7, 9, 8), float32] */;
    %526 = right_shift(%518, %519) /* ty=Tensor[(7, 9, 8), int32] */;
    %527 = @func_820(%522, %523) /* ty=Tensor[(3, 12, 4), float64] */;
    (%524, %var_908, %525, %526, %527, %var_962)
  };
  %528(%var_969, %var_970, %var_971) /* ty=(Tensor[(13, 11, 15), float32], Tensor[(2145), float32], Tensor[(7, 9, 8), float32], Tensor[(7, 9, 8), int32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */
}

def @func_3497(%var_3486: Tensor[(12, 13, 5), float32]) -> Tensor[(12, 13, 5), bool] {
  %529 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %530 = cast(%var_3486, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %531 = shape_of(%529, dtype="int32") /* ty=Tensor[(3), int32] */;
  %532 = cast(%529, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%532, %533) /* ty=Tensor[(12, 13, 5), bool] */
}

def @func_4728() -> Tensor[(12, 13, 5), float32] {
  @func_4726() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_6677() -> (Tensor[(12, 13, 5), float32],) {
  @func_6675() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_2061() -> Tensor[(12, 13, 5), float32] {
  @func_2059() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_4764(%var_4759: Tensor[(14, 5, 15), float64]) -> (Tensor[(14, 5, 15), float64],) {
  %534 = cast(%var_4759, dtype="float64") /* ty=Tensor[(14, 5, 15), float64] */;
  %535 = asin(%534) /* ty=Tensor[(14, 5, 15), float64] */;
  (%535,)
}

def @func_4325(%var_4324: Tensor[(144), int64]) -> (Tensor[(12, 13, 5), float32], Tensor[(144), int64], Tensor[(1320), float64], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) {
  %546 = fn (%var_4300: Tensor[(144), int64]) -> (Tensor[(12, 13, 5), float32], Tensor[(144), int64], Tensor[(1320), float64], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) {
    %536 = @func_3079() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %537 = cast(meta[relay.Constant][27] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
    %538 = cast(%var_4300, dtype="int64") /* ty=Tensor[(144), int64] */;
    %539 = reshape(%537, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), float64] */;
    %540 = reshape(%538, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %541 = @func_2928(%539, %540) /* ty=(Tensor[(12, 11, 10), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
    %542 = @func_2364() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %543 = %536.0;
    %544 = %541.2;
    %545 = %542.0;
    (%543, %544, meta[relay.Constant][27] /* ty=Tensor[(1320), float64] */, %var_4300, %545)
  };
  %546(%var_4324) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(144), int64], Tensor[(1320), float64], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) */
}

def @func_8112() -> (Tensor[(300), float32],) {
  @func_8110() /* ty=(Tensor[(300), float32],) */
}

def @func_8969() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  @func_8967() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_6426() -> (Tensor[(12, 13, 5), float32],) {
  %547 = @func_3600() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %548 = %547.2;
  (%548,)
}

def @func_3180(%var_3151: Tensor[(2145), float32]) -> (Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) {
  %549 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
  %550 = cast(%var_3151, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %551 = reshape(%550, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float32] */;
  %552 = %549.1;
  %553 = @func_100(%551) /* ty=Tensor[(13, 11, 15), float32] */;
  (%552, %553, %var_3151)
}

def @func_4432() -> (Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(4, 36), int64]) {
  @func_4430() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(4, 36), int64]) */
}

def @func_10089() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %554 = @func_4808() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %555 = @func_7735() /* ty=Tensor[(12, 13, 5), float32] */;
  %556 = %554.0;
  %557 = @func_3407() /* ty=Tensor[(12, 13, 5), float32] */;
  (%555, %556, %557)
}

def @func_7014(%var_7012: Tensor[(11, 15, 7), float32], %var_7013: Tensor[(11, 15, 7), float32]) -> Tensor[(11, 15, 7), float32] {
  @func_7010(%var_7012, %var_7013) /* ty=Tensor[(11, 15, 7), float32] */
}

def @func_11602() -> (Tensor[(12, 13, 5), float32],) {
  %558 = @func_8471() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %559 = %558.0;
  (%559,)
}

def @func_2747(%var_2745: Tensor[(12, 13, 5), float64]) -> Tensor[(12, 13, 5), bool] {
  @func_2744(%var_2745) /* ty=Tensor[(12, 13, 5), bool] */
}

def @func_5096() -> (Tensor[(12, 13, 5), float32],) {
  @func_5094() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_9763() -> (Tensor[(12, 13, 5), float32], Tensor[(10, 30), float32]) {
  @func_9761() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(10, 30), float32]) */
}

def @func_10878() -> Tensor[(11, 8, 7), float64] {
  %561 = fn () -> Tensor[(11, 8, 7), float64] {
    %560 = @func_8872() /* ty=(Tensor[(11, 8, 7), float64],) */;
    %560.0
  };
  %561() /* ty=Tensor[(11, 8, 7), float64] */
}

def @func_10345() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  @func_10343() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_5101() -> (Tensor[(11, 8, 7), float64],) {
  %564 = fn () -> (Tensor[(11, 8, 7), float64],) {
    %562 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 8, 7), float64] */, dtype="float64") /* ty=Tensor[(11, 8, 7), float64] */;
    %563 = sqrt(%562) /* ty=Tensor[(11, 8, 7), float64] */;
    (%563,)
  };
  %564() /* ty=(Tensor[(11, 8, 7), float64],) */
}

def @func_7874() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %565 = @func_4430() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(4, 36), int64]) */;
  %566 = @func_3600() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %567 = %565.1;
  %568 = %566.2;
  (%567, %568)
}

def @func_12145() -> (Tensor[(12, 13, 5), float32], Tensor[(11, 8, 7), float64], Tensor[(12, 13, 5), float32]) {
  %569 = @func_11129() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %570 = @func_5100() /* ty=(Tensor[(11, 8, 7), float64],) */;
  %571 = %569.0;
  %572 = %570.0;
  %573 = @func_6622() /* ty=Tensor[(12, 13, 5), float32] */;
  (%571, %572, %573)
}

def @func_10211() -> Tensor[(10, 12, 2), float64] {
  @func_10209() /* ty=Tensor[(10, 12, 2), float64] */
}

def @func_4245(%var_4239: Tensor[(300), float32]) -> (Tensor[(15, 5, 4), float32], Tensor[(300), float32], Tensor[(12, 13, 5), float64]) {
  %574 = cast(%var_4239, dtype="float32") /* ty=Tensor[(300), float32] */;
  %575 = reshape(%574, newshape=[15, 5, 4]) /* ty=Tensor[(15, 5, 4), float32] */;
  %576 = @func_3958(%575) /* ty=(Tensor[(15, 5, 4), float32],) */;
  %577 = @func_3290() /* ty=Tensor[(12, 13, 5), float32] */;
  %578 = cast(%577, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
  %579 = %576.0;
  %580 = sin(%578) /* ty=Tensor[(12, 13, 5), float64] */;
  (%579, %var_4239, %580)
}

def @func_4226() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  @func_4224() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_2017(%var_2004: Tensor[(12, 13, 5), float32]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
  %581 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
  %582 = cast(%581, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %583 = atan(%582) /* ty=Tensor[(12, 13, 5), float32] */;
  %584 = cast(%581, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %585 = shape_of(%583, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(%583, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %588 = cast(%var_2004, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %589 = shape_of(%583, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%583, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %592 = cast(meta[relay.Constant][29] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %593 = cast(meta[relay.Constant][29] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %594 = reshape(%592, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %595 = reshape(%593, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), int64] */;
  %596 = power(%586, %587) /* ty=Tensor[(12, 13, 5), float32] */;
  %597 = logical_or(%590, %591) /* ty=Tensor[(12, 13, 5), bool] */;
  %598 = @func_820(%594, %595) /* ty=Tensor[(3, 12, 4), float64] */;
  (%596, %597, %598, meta[relay.Constant][29] /* ty=Tensor[(144), int64] */)
}

def @func_9088(%var_9086: Tensor[(6, 6, 12), bool], %var_9087: Tensor[(780), float32]) -> (Tensor[(6, 6, 12), bool], Tensor[(780), float32], Tensor[(3, 12, 4), float64]) {
  @func_9084(%var_9086, %var_9087) /* ty=(Tensor[(6, 6, 12), bool], Tensor[(780), float32], Tensor[(3, 12, 4), float64]) */
}

def @func_4809() -> (Tensor[(12, 13, 5), float32],) {
  %601 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %599 = @func_3079() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %600 = %599.0;
    (%600,)
  };
  %601() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_4153() -> (Tensor[(12, 13, 5), float32],) {
  %602 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
  (%602,)
}

def @func_6532() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(300), float32]) {
  %603 = @func_6426() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %604 = cast(meta[relay.Constant][30] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %605 = reshape(%604, newshape=[15, 5, 4]) /* ty=Tensor[(15, 5, 4), float32] */;
  %606 = @func_3958(%605) /* ty=(Tensor[(15, 5, 4), float32],) */;
  %607 = %603.0;
  %608 = @func_5618() /* ty=Tensor[(12, 13, 5), float32] */;
  %609 = %606.0;
  (%607, %608, %609, meta[relay.Constant][30] /* ty=Tensor[(300), float32] */)
}

def @func_6428() -> (Tensor[(12, 13, 5), float32],) {
  @func_6426() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_9028() -> Tensor[(12, 13, 5), float32] {
  %610 = @func_3749() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %610.0
}

def @func_7683() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64]) {
  %615 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64]) {
    %611 = @func_5094() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %612 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
    %613 = %611.0;
    %614 = %612.0;
    (%613, %614)
  };
  %615() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64]) */
}

def @func_2973(%var_2971: Tensor[(448), uint8], %var_2972: Tensor[(12, 13, 5), float64]) -> (Tensor[(4, 14, 8), int64], Tensor[(4, 2), uint8], Tensor[(448), uint8], Tensor[(12, 13, 5), float64]) {
  %629 = fn (%var_2957: Tensor[(448), uint8], %var_2960: Tensor[(12, 13, 5), float64]) -> (Tensor[(4, 14, 8), int64], Tensor[(4, 2), uint8], Tensor[(448), uint8], Tensor[(12, 13, 5), float64]) {
    %616 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 2), uint8] */, dtype="uint8") /* ty=Tensor[(4, 2), uint8] */;
    %617 = cast(%var_2957, dtype="uint8") /* ty=Tensor[(448), uint8] */;
    %618 = reshape(%616, newshape=[1, 1, 8]) /* ty=Tensor[(1, 1, 8), uint8] */;
    %619 = reshape(%617, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), uint8] */;
    %620 = @func_2138(%618, %619) /* ty=(Tensor[(4, 14, 8), bool], Tensor[(4, 14, 8), int64]) */;
    %621 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
    %622 = %621.0;
    %623 = cast(%var_2960, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
    %624 = shape_of(%622, dtype="int32") /* ty=Tensor[(3), int32] */;
    %625 = cast(%622, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
    %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %627 = %620.1;
    %628 = minimum(%625, %626) /* ty=Tensor[(12, 13, 5), float64] */;
    (%627, meta[relay.Constant][31] /* ty=Tensor[(4, 2), uint8] */, %var_2957, %628)
  };
  %629(%var_2971, %var_2972) /* ty=(Tensor[(4, 14, 8), int64], Tensor[(4, 2), uint8], Tensor[(448), uint8], Tensor[(12, 13, 5), float64]) */
}

def @func_11930() -> Tensor[(12, 13, 5), float32] {
  @func_11928() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_6803(%var_6798: Tensor[(4, 36), float32]) -> (Tensor[(4, 36), int8],) {
  %630 = @func_4430() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(4, 36), int64]) */;
  %631 = %630.2;
  %632 = cast(%631, dtype="float32") /* ty=Tensor[(4, 36), float32] */;
  %633 = sigmoid(%632) /* ty=Tensor[(4, 36), float32] */;
  %634 = cast(%var_6798, dtype="int8") /* ty=Tensor[(4, 36), int8] */;
  %635 = shape_of(%633, dtype="int32") /* ty=Tensor[(2), int32] */;
  %636 = cast(%633, dtype="int8") /* ty=Tensor[(4, 36), int8] */;
  %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %638 = bitwise_xor(%636, %637) /* ty=Tensor[(4, 36), int8] */;
  (%638,)
}

def @func_8846(%var_8844: Tensor[(588), float64], %var_8845: Tensor[(448), uint8]) -> (Tensor[(715, 3), bool], Tensor[(12, 13, 5), float64], Tensor[(448), uint8], Tensor[(588), uint32]) {
  %659 = fn (%var_8825: Tensor[(588), float64], %var_8826: Tensor[(448), uint8]) -> (Tensor[(715, 3), bool], Tensor[(12, 13, 5), float64], Tensor[(448), uint8], Tensor[(588), uint32]) {
    %639 = @func_7506() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(715, 3), float32], Tensor[(504), float64], Tensor[(504), float64]) */;
    %640 = %639.2;
    %641 = cast(%640, dtype="float32") /* ty=Tensor[(715, 3), float32] */;
    %642 = sinh(%641) /* ty=Tensor[(715, 3), float32] */;
    %643 = cast(%642, dtype="bool") /* ty=Tensor[(715, 3), bool] */;
    %644 = shape_of(%640, dtype="int32") /* ty=Tensor[(2), int32] */;
    %645 = cast(%640, dtype="bool") /* ty=Tensor[(715, 3), bool] */;
    %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %647 = cast(%var_8825, dtype="float64") /* ty=Tensor[(588), float64] */;
    %648 = cast(%var_8826, dtype="uint8") /* ty=Tensor[(448), uint8] */;
    %649 = reshape(%647, newshape=[3, 14, 14]) /* ty=Tensor[(3, 14, 14), float64] */;
    %650 = reshape(%648, newshape=[56, 8]) /* ty=Tensor[(56, 8), uint8] */;
    %651 = @func_3380(%649, %650) /* ty=(Tensor[(3, 14, 14), float64], Tensor[(12, 13, 5), float64], Tensor[(56, 8), uint8], Tensor[(780), float64]) */;
    %652 = cast(meta[relay.Constant][32] /* ty=Tensor[(588), float64] */, dtype="uint32") /* ty=Tensor[(588), uint32] */;
    %653 = shape_of(%var_8825, dtype="int32") /* ty=Tensor[(1), int32] */;
    %654 = cast(%var_8825, dtype="uint32") /* ty=Tensor[(588), uint32] */;
    %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %656 = logical_or(%645, %646) /* ty=Tensor[(715, 3), bool] */;
    %657 = %651.1;
    %658 = logical_xor(%654, %655) /* ty=Tensor[(588), uint32] */;
    (%656, %657, %var_8826, %658)
  };
  %659(%var_8844, %var_8845) /* ty=(Tensor[(715, 3), bool], Tensor[(12, 13, 5), float64], Tensor[(448), uint8], Tensor[(588), uint32]) */
}

def @func_102(%var_101: Tensor[(13, 11, 15), float32]) -> Tensor[(13, 11, 15), float32] {
  %661 = fn (%var_32: Tensor[(13, 11, 15), float32]) -> Tensor[(13, 11, 15), float32] {
    %660 = cast(%var_32, dtype="float32") /* ty=Tensor[(13, 11, 15), float32] */;
    tan(%660) /* ty=Tensor[(13, 11, 15), float32] */
  };
  %661(%var_101) /* ty=Tensor[(13, 11, 15), float32] */
}

def @func_6293() -> Tensor[(12, 13, 5), float32] {
  @func_6291() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_11289() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %665 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
    %662 = @func_7723() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %663 = %662.0;
    %664 = @func_4726() /* ty=Tensor[(12, 13, 5), float32] */;
    (%663, %664)
  };
  %665() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_4430() -> (Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(4, 36), int64]) {
  %666 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %667 = @func_4224() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %668 = %667.0;
  %669 = cast(%668, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
  %670 = shape_of(%666, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(%666, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %673 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 36), int64] */, dtype="int64") /* ty=Tensor[(4, 36), int64] */;
  %674 = reshape(%673, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %675 = @func_4323(%674) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(144), int64], Tensor[(1320), float64], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) */;
  %676 = floor_divide(%671, %672) /* ty=Tensor[(12, 13, 5), float64] */;
  %677 = %675.0;
  (%676, %677, meta[relay.Constant][33] /* ty=Tensor[(4, 36), int64] */)
}

def @func_2717() -> (Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) {
  @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */
}

def @func_3688() -> Tensor[(12, 13, 5), float32] {
  @func_3407() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_9817() -> (Tensor[(10, 30), float32],) {
  %680 = fn () -> (Tensor[(10, 30), float32],) {
    %678 = @func_5970() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(10, 30), float32]) */;
    %679 = %678.2;
    (%679,)
  };
  %680() /* ty=(Tensor[(10, 30), float32],) */
}

def @func_4529() -> (Tensor[(12, 13, 5), float32], Tensor[(4, 14, 8), int64], Tensor[(224, 2), uint8]) {
  %689 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(4, 14, 8), int64], Tensor[(224, 2), uint8]) {
    %681 = @func_2666() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %682 = cast(meta[relay.Constant][34] /* ty=Tensor[(224, 2), uint8] */, dtype="uint8") /* ty=Tensor[(224, 2), uint8] */;
    %683 = %681.0;
    %684 = cast(%683, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
    %685 = reshape(%682, newshape=[448]) /* ty=Tensor[(448), uint8] */;
    %686 = reshape(%684, newshape=[12, 13, 5]) /* ty=Tensor[(12, 13, 5), float64] */;
    %687 = @func_2970(%685, %686) /* ty=(Tensor[(4, 14, 8), int64], Tensor[(4, 2), uint8], Tensor[(448), uint8], Tensor[(12, 13, 5), float64]) */;
    %688 = %687.0;
    (%683, %688, meta[relay.Constant][34] /* ty=Tensor[(224, 2), uint8] */)
  };
  %689() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(4, 14, 8), int64], Tensor[(224, 2), uint8]) */
}

def @func_10954() -> Tensor[(12, 13, 5), float32] {
  %690 = @func_6038() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %690.0
}

def @func_9924(%var_9922: Tensor[(504), float64]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(12, 13, 5), float32]) {
  @func_9921(%var_9922) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(12, 13, 5), float32]) */
}

def @func_2569(%var_2567: Tensor[(448), uint8]) -> (Tensor[(12, 13, 5), float32], Tensor[(4, 14, 8), bool], Tensor[(8), uint8], Tensor[(448), uint8]) {
  @func_2566(%var_2567) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(4, 14, 8), bool], Tensor[(8), uint8], Tensor[(448), uint8]) */
}

def @func_11481() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64]) {
  %699 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64]) {
    %691 = @func_10402() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), uint8]) */;
    %692 = @func_8801() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %693 = @func_10199() /* ty=(Tensor[(12, 13, 5), float64],) */;
    %694 = @func_11178() /* ty=Tensor[(12, 13, 5), float32] */;
    %695 = %691.1;
    %696 = @func_9670() /* ty=Tensor[(12, 13, 5), float32] */;
    %697 = %692.0;
    %698 = %693.0;
    (%694, %695, %696, %697, %698)
  };
  %699() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64]) */
}

def @func_12220() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  @func_12218() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_7118() -> (Tensor[(12, 13, 5), uint8], Tensor[(12, 13, 5), float64], Tensor[(8), uint8]) {
  %711 = fn () -> (Tensor[(12, 13, 5), uint8], Tensor[(12, 13, 5), float64], Tensor[(8), uint8]) {
    %700 = @func_4808() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %701 = %700.0;
    %702 = cast(meta[relay.Constant][35] /* ty=Tensor[(12, 13, 5), float32] */, dtype="uint8") /* ty=Tensor[(12, 13, 5), uint8] */;
    %703 = shape_of(%701, dtype="int32") /* ty=Tensor[(3), int32] */;
    %704 = cast(%701, dtype="uint8") /* ty=Tensor[(12, 13, 5), uint8] */;
    %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %706 = cast(meta[relay.Constant][36] /* ty=Tensor[(8), uint8] */, dtype="uint8") /* ty=Tensor[(8), uint8] */;
    %707 = reshape(%706, newshape=[8]) /* ty=Tensor[(8), uint8] */;
    %708 = @func_2416(%707) /* ty=(Tensor[(12, 13, 5), float64], Tensor[(4, 14, 8), int64], Tensor[(8), uint8], Tensor[(448), uint8]) */;
    %709 = logical_xor(%704, %705) /* ty=Tensor[(12, 13, 5), uint8] */;
    %710 = %708.0;
    (%709, %710, meta[relay.Constant][36] /* ty=Tensor[(8), uint8] */)
  };
  %711() /* ty=(Tensor[(12, 13, 5), uint8], Tensor[(12, 13, 5), float64], Tensor[(8), uint8]) */
}

def @func_7570() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %716 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
    %712 = @func_3079() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %713 = @func_4471() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
    %714 = %712.0;
    %715 = %713.0;
    (%714, %715)
  };
  %716() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_6347() -> Tensor[(12, 13, 5), float32] {
  %718 = fn () -> Tensor[(12, 13, 5), float32] {
    %717 = @func_6038() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %717.0
  };
  %718() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_5867(%var_5865: float64, %var_5866: Tensor[(2, 1, 12), float64]) -> (Tensor[(2, 1, 12), float64],) {
  %722 = fn (%var_5859: float64, %var_5860: Tensor[(2, 1, 12), float64]) -> (Tensor[(2, 1, 12), float64],) {
    %719 = cast(%var_5859, dtype="float64") /* ty=float64 */;
    %720 = cast(%var_5860, dtype="float64") /* ty=Tensor[(2, 1, 12), float64] */;
    %721 = divide(%719, %720) /* ty=Tensor[(2, 1, 12), float64] */;
    (%721,)
  };
  %722(%var_5865, %var_5866) /* ty=(Tensor[(2, 1, 12), float64],) */
}

def @func_3750() -> (Tensor[(12, 13, 5), float32],) {
  %725 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %723 = @func_3600() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
    %724 = %723.4;
    (%724,)
  };
  %725() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_6083() -> (Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) {
  @func_6081() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) */
}

def @func_6260(%var_6255: Tensor[(12, 13, 5), float32]) -> (Tensor[(12, 13, 5), bool],) {
  %726 = @func_5069() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %727 = %726.0;
  %728 = cast(%var_6255, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %729 = shape_of(%727, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%727, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %732 = equal(%730, %731) /* ty=Tensor[(12, 13, 5), bool] */;
  (%732,)
}

def @func_8745() -> Tensor[(12, 13, 5), float32] {
  %733 = fn () -> Tensor[(12, 13, 5), float32] {
    @func_4940() /* ty=Tensor[(12, 13, 5), float32] */
  };
  %733() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_10956() -> Tensor[(12, 13, 5), float32] {
  @func_10954() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_12105() -> Tensor[(12, 13, 5), float32] {
  @func_12103() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_9225(%var_9223: Tensor[(11, 4, 13), float32], %var_9224: Tensor[(12, 42), float64]) -> (Tensor[(11, 4, 13), float32], Tensor[(14, 5, 15), float64], Tensor[(1050), float64], Tensor[(12, 13, 5), float32], Tensor[(11, 4, 13), float64], Tensor[(2, 72), int64], Tensor[(12, 42), float64], Tensor[(12, 13, 5), float32]) {
  @func_9221(%var_9223, %var_9224) /* ty=(Tensor[(11, 4, 13), float32], Tensor[(14, 5, 15), float64], Tensor[(1050), float64], Tensor[(12, 13, 5), float32], Tensor[(11, 4, 13), float64], Tensor[(2, 72), int64], Tensor[(12, 42), float64], Tensor[(12, 13, 5), float32]) */
}

def @func_5593(%var_5591: Tensor[(10, 12, 2), float64]) -> Tensor[(10, 12, 2), float64] {
  @func_5590(%var_5591) /* ty=Tensor[(10, 12, 2), float64] */
}

def @func_7368() -> (Tensor[(12, 13, 5), float32], Tensor[(448), uint8], Tensor[(8), uint8]) {
  %739 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(448), uint8], Tensor[(8), uint8]) {
    %734 = cast(meta[relay.Constant][37] /* ty=Tensor[(8), uint8] */, dtype="uint8") /* ty=Tensor[(8), uint8] */;
    %735 = reshape(%734, newshape=[8]) /* ty=Tensor[(8), uint8] */;
    %736 = @func_2416(%735) /* ty=(Tensor[(12, 13, 5), float64], Tensor[(4, 14, 8), int64], Tensor[(8), uint8], Tensor[(448), uint8]) */;
    %737 = @func_6346() /* ty=Tensor[(12, 13, 5), float32] */;
    %738 = %736.3;
    (%737, %738, meta[relay.Constant][37] /* ty=Tensor[(8), uint8] */)
  };
  %739() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(448), uint8], Tensor[(8), uint8]) */
}

def @func_2020(%var_2018: Tensor[(12, 13, 5), float32]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
  @func_2017(%var_2018) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */
}

def @func_4940() -> Tensor[(12, 13, 5), float32] {
  %740 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
  %740.1
}

def @func_6595() -> (Tensor[(12, 13, 5), float32],) {
  %742 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %741 = @func_2985() /* ty=Tensor[(12, 13, 5), float32] */;
    (%741,)
  };
  %742() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_3728() -> (Tensor[(12, 13, 5), float32],) {
  %746 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %743 = @func_3366() /* ty=Tensor[(12, 13, 5), float32] */;
    %744 = cast(%743, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
    %745 = atanh(%744) /* ty=Tensor[(12, 13, 5), float32] */;
    (%745,)
  };
  %746() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_7949(%var_7948: Tensor[(1, 10, 11), float32]) -> Tensor[(?, 10, 11), uint32] {
  %753 = fn (%var_7935: Tensor[(1, 10, 11), float32]) -> Tensor[(?, 10, 11), uint32] {
    %747 = cast(%var_7935, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
    %748 = log(%747) /* ty=Tensor[(1, 10, 11), float32] */;
    %749 = cast(%748, dtype="uint32") /* ty=Tensor[(1, 10, 11), uint32] */;
    %750 = shape_of(%var_7935, dtype="int32") /* ty=Tensor[(3), int32] */;
    %751 = cast(%var_7935, dtype="uint32") /* ty=Tensor[(1, 10, 11), uint32] */;
    %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    maximum(%751, %752) /* ty=Tensor[(?, 10, 11), uint32] */
  };
  %753(%var_7948) /* ty=Tensor[(?, 10, 11), uint32] */
}

def @func_9984() -> Tensor[(12, 13, 5), float32] {
  @func_9982() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_7508() -> (Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(715, 3), float32], Tensor[(504), float64], Tensor[(504), float64]) {
  @func_7506() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(715, 3), float32], Tensor[(504), float64], Tensor[(504), float64]) */
}

def @func_10200() -> (Tensor[(12, 13, 5), float64],) {
  %756 = fn () -> (Tensor[(12, 13, 5), float64],) {
    %754 = @func_7251() /* ty=(Tensor[(12, 13, 5), float64],) */;
    %755 = %754.0;
    (%755,)
  };
  %756() /* ty=(Tensor[(12, 13, 5), float64],) */
}

def @func_3659() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %760 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
    %757 = @func_3019() /* ty=Tensor[(12, 13, 5), float32] */;
    %758 = @func_3019() /* ty=Tensor[(12, 13, 5), float32] */;
    %759 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
    (%757, %758, %759)
  };
  %760() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_2467(%var_2457: Tensor[(8, 18), int64]) -> (Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(260), float64], Tensor[(12, 13, 5), float32], Tensor[(13, 10, 2), float64], Tensor[(8, 18), int32]) {
  %761 = cast(meta[relay.Constant][38] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %762 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 18), int64] */, dtype="int64") /* ty=Tensor[(8, 18), int64] */;
  %763 = reshape(%761, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), float64] */;
  %764 = reshape(%762, newshape=[24, 6]) /* ty=Tensor[(24, 6), int64] */;
  %765 = @func_1082(%763, %764) /* ty=(Tensor[(13, 10, 2), float64], Tensor[(3, 12, 4), float64], Tensor[(24, 6), int64], Tensor[(3, 12, 4), float64], Tensor[(13, 11, 15), float32], Tensor[(2145, 1), float32]) */;
  %766 = cast(meta[relay.Constant][38] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %767 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 18), int64] */, dtype="int64") /* ty=Tensor[(8, 18), int64] */;
  %768 = reshape(%766, newshape=[13, 10, 2]) /* ty=Tensor[(13, 10, 2), float64] */;
  %769 = reshape(%767, newshape=[24, 6]) /* ty=Tensor[(24, 6), int64] */;
  %770 = @func_1082(%768, %769) /* ty=(Tensor[(13, 10, 2), float64], Tensor[(3, 12, 4), float64], Tensor[(24, 6), int64], Tensor[(3, 12, 4), float64], Tensor[(13, 11, 15), float32], Tensor[(2145, 1), float32]) */;
  %771 = cast(%var_2457, dtype="int32") /* ty=Tensor[(8, 18), int32] */;
  %772 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(8, 18), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %773 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 18), int64] */, dtype="int32") /* ty=Tensor[(8, 18), int32] */;
  %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %775 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %776 = %765.4;
  %777 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %778 = %770.0;
  %779 = right_shift(%773, %774) /* ty=Tensor[(8, 18), int32] */;
  (%775, %776, meta[relay.Constant][38] /* ty=Tensor[(260), float64] */, %777, %778, %779)
}

def @func_6907() -> (Tensor[(12, 13, 5), float32],) {
  %782 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %780 = @func_3727() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %781 = %780.0;
    (%781,)
  };
  %782() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_3290() -> Tensor[(12, 13, 5), float32] {
  %783 = @func_2985() /* ty=Tensor[(12, 13, 5), float32] */;
  %784 = cast(%783, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  log(%784) /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_11846() -> (Tensor[(11, 8, 7), float64], Tensor[(12, 13, 5), float32]) {
  %785 = @func_10089() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %786 = @func_10877() /* ty=Tensor[(11, 8, 7), float64] */;
  %787 = %785.1;
  (%786, %787)
}

def @func_7859() -> (Tensor[(12, 13, 5), float32],) {
  %788 = @func_3407() /* ty=Tensor[(12, 13, 5), float32] */;
  (%788,)
}

def @func_8145() -> (Tensor[(12, 13, 5), float32],) {
  %789 = @func_7129() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %790 = %789.0;
  (%790,)
}

def @func_5252() -> Tensor[(12, 13, 5), float32] {
  %792 = fn () -> Tensor[(12, 13, 5), float32] {
    %791 = @func_4166() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %791.0
  };
  %792() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_3818(%var_3816: Tensor[(1, 448), uint8], %var_3817: Tensor[(14, 448), uint8]) -> (Tensor[(12, 13, 5), float32], Tensor[(8), uint8], Tensor[(12, 13, 5), float32], Tensor[(14, 448), float32]) {
  @func_3814(%var_3816, %var_3817) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(8), uint8], Tensor[(12, 13, 5), float32], Tensor[(14, 448), float32]) */
}

def @func_4447() -> (Tensor[(12, 13, 5), float32],) {
  %795 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %793 = @func_3079() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %794 = %793.0;
    (%794,)
  };
  %795() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_1980() -> Tensor[(12, 13, 5), float32] {
  @func_1978() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_2470(%var_2468: Tensor[(8, 18), int64]) -> (Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(260), float64], Tensor[(12, 13, 5), float32], Tensor[(13, 10, 2), float64], Tensor[(8, 18), int32]) {
  @func_2467(%var_2468) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(260), float64], Tensor[(12, 13, 5), float32], Tensor[(13, 10, 2), float64], Tensor[(8, 18), int32]) */
}

def @func_10179() -> Tensor[(12, 13, 5), float32] {
  @func_10177() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_11386() -> (Tensor[(12, 13, 5), float32], Tensor[(300), bool], Tensor[(12, 13, 5), float32]) {
  @func_11384() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(300), bool], Tensor[(12, 13, 5), float32]) */
}

def @func_9805() -> (Tensor[(12, 13, 5), float32], Tensor[(6, 6, 12), bool], Tensor[(432), bool]) {
  @func_9803() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(6, 6, 12), bool], Tensor[(432), bool]) */
}

def @func_4913(%var_4911: Tensor[(144), int64]) -> (Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
  @func_4910(%var_4911) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */
}

def @func_7506() -> (Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(715, 3), float32], Tensor[(504), float64], Tensor[(504), float64]) {
  %796 = @func_3658() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %797 = cast(meta[relay.Constant][40] /* ty=Tensor[(715, 3), float32] */, dtype="float32") /* ty=Tensor[(715, 3), float32] */;
  %798 = reshape(%797, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %799 = @func_5353(%798) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) */;
  %800 = cast(meta[relay.Constant][41] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %801 = reshape(%800, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %802 = @func_5550(%801) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2145), float32], Tensor[(504), float64], Tensor[(2145), float32], Tensor[(2, 72), int64], Tensor[(12, 13, 5), float32]) */;
  %803 = %796.0;
  %804 = %799.2;
  %805 = %802.3;
  (%803, %804, meta[relay.Constant][40] /* ty=Tensor[(715, 3), float32] */, %805, meta[relay.Constant][41] /* ty=Tensor[(504), float64] */)
}

def @func_11384() -> (Tensor[(12, 13, 5), float32], Tensor[(300), bool], Tensor[(12, 13, 5), float32]) {
  %806 = @func_7874() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %807 = cast(meta[relay.Constant][42] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %808 = reshape(%807, newshape=[15, 5, 4]) /* ty=Tensor[(15, 5, 4), float32] */;
  %809 = @func_3958(%808) /* ty=(Tensor[(15, 5, 4), float32],) */;
  %810 = %809.0;
  %811 = cast(%810, dtype="bool") /* ty=Tensor[(15, 5, 4), bool] */;
  %812 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(300), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %813 = cast(meta[relay.Constant][42] /* ty=Tensor[(300), float32] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?), bool] */;
  %815 = @func_4224() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %816 = %806.1;
  %817 = less_equal(%813, %814) /* ty=Tensor[(300), bool] */;
  %818 = %815.0;
  (%816, %817, %818)
}

def @func_3080() -> (Tensor[(12, 13, 5), float32],) {
  %821 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %819 = @func_2118() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %820 = %819.0;
    (%820,)
  };
  %821() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_6357() -> (Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) {
  %822 = @func_5094() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %823 = cast(meta[relay.Constant][43] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %824 = reshape(%823, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %825 = @func_1842(%824) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(9, 9, 16), float32], Tensor[(9, 9, 16), float64]) */;
  %826 = %822.0;
  %827 = %825.0;
  (%826, %827, meta[relay.Constant][43] /* ty=Tensor[(144), int64] */)
}

def @func_8766() -> (Tensor[(12, 13, 5), float32],) {
  %830 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %828 = @func_7682() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64]) */;
    %829 = %828.0;
    (%829,)
  };
  %830() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_11893(%var_11849: Tensor[(7, 6, 14), float64], %var_11862: Tensor[(7, 6, 14), float64]) -> (Tensor[(7, 6, 14), uint8], Tensor[(7, 6, 14), float64]) {
  %831 = cast(%var_11849, dtype="float64") /* ty=Tensor[(7, 6, 14), float64] */;
  %832 = exp(%831) /* ty=Tensor[(7, 6, 14), float64] */;
  %833 = cast(%var_11862, dtype="float32") /* ty=Tensor[(7, 6, 14), float32] */;
  %834 = shape_of(%832, dtype="int32") /* ty=Tensor[(3), int32] */;
  %835 = cast(%832, dtype="float32") /* ty=Tensor[(7, 6, 14), float32] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %837 = power(%835, %836) /* ty=Tensor[(7, 6, 14), float32] */;
  %838 = cast(%832, dtype="uint8") /* ty=Tensor[(7, 6, 14), uint8] */;
  %839 = shape_of(%837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %840 = cast(%837, dtype="uint8") /* ty=Tensor[(7, 6, 14), uint8] */;
  %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %842 = cast(%837, dtype="float64") /* ty=Tensor[(7, 6, 14), float64] */;
  %843 = subtract(%840, %841) /* ty=Tensor[(7, 6, 14), uint8] */;
  %844 = acosh(%842) /* ty=Tensor[(7, 6, 14), float64] */;
  (%843, %844)
}

def @func_9803() -> (Tensor[(12, 13, 5), float32], Tensor[(6, 6, 12), bool], Tensor[(432), bool]) {
  %845 = @func_4808() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %846 = cast(meta[relay.Constant][44] /* ty=Tensor[(432), bool] */, dtype="bool") /* ty=Tensor[(432), bool] */;
  %847 = %845.0;
  %848 = cast(%847, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
  %849 = reshape(%846, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), bool] */;
  %850 = reshape(%848, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %851 = @func_9084(%849, %850) /* ty=(Tensor[(6, 6, 12), bool], Tensor[(780), float32], Tensor[(3, 12, 4), float64]) */;
  %852 = %851.0;
  (%847, %852, meta[relay.Constant][44] /* ty=Tensor[(432), bool] */)
}

def @func_10209() -> Tensor[(10, 12, 2), float64] {
  %853 = @func_9852() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64]) */;
  %853.1
}

def @func_10754() -> Tensor[(12, 13, 5), float32] {
  %854 = fn () -> Tensor[(12, 13, 5), float32] {
    @func_6291() /* ty=Tensor[(12, 13, 5), float32] */
  };
  %854() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_2366() -> (Tensor[(12, 13, 5), float32],) {
  @func_2364() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_8872() -> (Tensor[(11, 8, 7), float64],) {
  %855 = @func_6227() /* ty=(Tensor[(11, 8, 7), float64],) */;
  %856 = %855.0;
  (%856,)
}

def @func_5226() -> Tensor[(4, 36), int64] {
  %857 = @func_4430() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(4, 36), int64]) */;
  %857.2
}

def @func_7252() -> (Tensor[(12, 13, 5), float64],) {
  %862 = fn () -> (Tensor[(12, 13, 5), float64],) {
    %858 = @func_3749() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %859 = %858.0;
    %860 = cast(%859, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
    %861 = tan(%860) /* ty=Tensor[(12, 13, 5), float64] */;
    (%861,)
  };
  %862() /* ty=(Tensor[(12, 13, 5), float64],) */
}

def @func_823(%var_821: Tensor[(3, 12, 4), int64], %var_822: Tensor[(3, 12, 4), int64]) -> Tensor[(3, 12, 4), float64] {
  %869 = fn (%var_804: Tensor[(3, 12, 4), int64], %var_805: Tensor[(3, 12, 4), int64]) -> Tensor[(3, 12, 4), float64] {
    %863 = cast(%var_805, dtype="int64") /* ty=Tensor[(3, 12, 4), int64] */;
    %864 = shape_of(%var_804, dtype="int32") /* ty=Tensor[(3), int32] */;
    %865 = cast(%var_804, dtype="int64") /* ty=Tensor[(3, 12, 4), int64] */;
    %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %867 = bitwise_xor(%865, %866) /* ty=Tensor[(3, 12, 4), int64] */;
    %868 = cast(%867, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
    asinh(%868) /* ty=Tensor[(3, 12, 4), float64] */
  };
  %869(%var_821, %var_822) /* ty=Tensor[(3, 12, 4), float64] */
}

def @func_11928() -> Tensor[(12, 13, 5), float32] {
  %870 = @func_2118() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %870.0
}

def @func_3814(%var_3773: Tensor[(1, 448), uint8], %var_3804: Tensor[(14, 448), uint8]) -> (Tensor[(12, 13, 5), float32], Tensor[(8), uint8], Tensor[(12, 13, 5), float32], Tensor[(14, 448), float32]) {
  %871 = cast(%var_3773, dtype="uint8") /* ty=Tensor[(1, 448), uint8] */;
  %872 = reshape(%871, newshape=[448]) /* ty=Tensor[(448), uint8] */;
  %873 = @func_2566(%872) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(4, 14, 8), bool], Tensor[(8), uint8], Tensor[(448), uint8]) */;
  %874 = @func_3749() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %875 = cast(%var_3773, dtype="float32") /* ty=Tensor[(1, 448), float32] */;
  %876 = cast(%var_3804, dtype="float32") /* ty=Tensor[(14, 448), float32] */;
  %877 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %878 = %873.2;
  %879 = %874.0;
  %880 = mod(%875, %876) /* ty=Tensor[(14, 448), float32] */;
  (%877, %878, %879, %880)
}

def @func_11218() -> (Tensor[(12, 13, 5), float32],) {
  %881 = @func_5265() /* ty=Tensor[(12, 13, 5), float32] */;
  (%881,)
}

def @func_5228() -> Tensor[(4, 36), int64] {
  @func_5226() /* ty=Tensor[(4, 36), int64] */
}

def @func_4881(%var_4878: Tensor[(10, 6, 8), float32], %var_4879: Tensor[(10, 6, 8), float32], %var_4880: Tensor[(8), uint8]) -> (Tensor[(10, 6, 8), float32], Tensor[(448), uint8], Tensor[(8), uint8]) {
  @func_4876(%var_4878, %var_4879, %var_4880) /* ty=(Tensor[(10, 6, 8), float32], Tensor[(448), uint8], Tensor[(8), uint8]) */
}

def @func_5721() -> Tensor[(12, 13, 5), float32] {
  @func_5719() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_7725() -> (Tensor[(12, 13, 5), float32],) {
  @func_7723() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @main(%var_12254: Tensor[(6, 2, 11), float64]) -> Tensor[(6, 2, 11), bool] {
  %882 = cast(%var_12254, dtype="float64") /* ty=Tensor[(6, 2, 11), float64] */;
  %883 = sigmoid(%882) /* ty=Tensor[(6, 2, 11), float64] */;
  %884 = cast(%var_12254, dtype="float64") /* ty=Tensor[(6, 2, 11), float64] */;
  %885 = sinh(%884) /* ty=Tensor[(6, 2, 11), float64] */;
  %886 = cast(%885, dtype="bool") /* ty=Tensor[(6, 2, 11), bool] */;
  %887 = shape_of(%883, dtype="int32") /* ty=Tensor[(3), int32] */;
  %888 = cast(%883, dtype="bool") /* ty=Tensor[(6, 2, 11), bool] */;
  %889 = dyn.reshape(%886, %887, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%888, %889) /* ty=Tensor[(6, 2, 11), bool] */
}

def @func_5163(%var_5161: Tensor[(224), uint32], %var_5162: Tensor[(8), uint8]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2, 8, 14), bool], Tensor[(224), uint32], Tensor[(8), uint8]) {
  @func_5159(%var_5161, %var_5162) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2, 8, 14), bool], Tensor[(224), uint32], Tensor[(8), uint8]) */
}

def @func_12218() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %890 = @func_8801() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %891 = @func_3079() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %892 = %890.0;
  %893 = %891.0;
  (%892, %893)
}

def @func_8462(%var_8461: Tensor[(12, 13, 5), float32]) -> (Tensor[(12, 13, 5), int32], Tensor[(12, 13, 5), float32]) {
  %902 = fn (%var_8444: Tensor[(12, 13, 5), float32]) -> (Tensor[(12, 13, 5), int32], Tensor[(12, 13, 5), float32]) {
    %894 = @func_6532() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(300), float32]) */;
    %895 = %894.0;
    %896 = cast(%var_8444, dtype="int32") /* ty=Tensor[(12, 13, 5), int32] */;
    %897 = shape_of(%895, dtype="int32") /* ty=Tensor[(3), int32] */;
    %898 = cast(%895, dtype="int32") /* ty=Tensor[(12, 13, 5), int32] */;
    %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %900 = add(%898, %899) /* ty=Tensor[(12, 13, 5), int32] */;
    %901 = @func_3290() /* ty=Tensor[(12, 13, 5), float32] */;
    (%900, %901)
  };
  %902(%var_8461) /* ty=(Tensor[(12, 13, 5), int32], Tensor[(12, 13, 5), float32]) */
}

def @func_9368() -> (Tensor[(12, 13, 5), float32],) {
  %903 = @func_6357() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
  %904 = %903.0;
  (%904,)
}

def @func_6228() -> (Tensor[(11, 8, 7), float64],) {
  %907 = fn () -> (Tensor[(11, 8, 7), float64],) {
    %905 = @func_5100() /* ty=(Tensor[(11, 8, 7), float64],) */;
    %906 = %905.0;
    (%906,)
  };
  %907() /* ty=(Tensor[(11, 8, 7), float64],) */
}

def @func_11179() -> Tensor[(12, 13, 5), float32] {
  %909 = fn () -> Tensor[(12, 13, 5), float32] {
    %908 = @func_7776() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %908.0
  };
  %909() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_3469() -> Tensor[(12, 13, 5), float32] {
  @func_2059() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_11897(%var_11895: Tensor[(7, 6, 14), float64], %var_11896: Tensor[(7, 6, 14), float64]) -> (Tensor[(7, 6, 14), uint8], Tensor[(7, 6, 14), float64]) {
  @func_11893(%var_11895, %var_11896) /* ty=(Tensor[(7, 6, 14), uint8], Tensor[(7, 6, 14), float64]) */
}

def @func_3183(%var_3181: Tensor[(2145), float32]) -> (Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) {
  @func_3180(%var_3181) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) */
}

def @func_2418(%var_2417: Tensor[(8), uint8]) -> (Tensor[(12, 13, 5), float64], Tensor[(4, 14, 8), int64], Tensor[(8), uint8], Tensor[(448), uint8]) {
  %919 = fn (%var_2409: Tensor[(8), uint8]) -> (Tensor[(12, 13, 5), float64], Tensor[(4, 14, 8), int64], Tensor[(8), uint8], Tensor[(448), uint8]) {
    %910 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
    %911 = cast(%910, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
    %912 = cast(%var_2409, dtype="uint8") /* ty=Tensor[(8), uint8] */;
    %913 = cast(meta[relay.Constant][45] /* ty=Tensor[(448), uint8] */, dtype="uint8") /* ty=Tensor[(448), uint8] */;
    %914 = reshape(%912, newshape=[1, 1, 8]) /* ty=Tensor[(1, 1, 8), uint8] */;
    %915 = reshape(%913, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), uint8] */;
    %916 = @func_2138(%914, %915) /* ty=(Tensor[(4, 14, 8), bool], Tensor[(4, 14, 8), int64]) */;
    %917 = asinh(%911) /* ty=Tensor[(12, 13, 5), float64] */;
    %918 = %916.1;
    (%917, %918, %var_2409, meta[relay.Constant][45] /* ty=Tensor[(448), uint8] */)
  };
  %919(%var_2417) /* ty=(Tensor[(12, 13, 5), float64], Tensor[(4, 14, 8), int64], Tensor[(8), uint8], Tensor[(448), uint8]) */
}

def @func_8803() -> (Tensor[(12, 13, 5), float32],) {
  @func_8801() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_10694(%var_10692: Tensor[(3, 12, 6), uint64], %var_10693: Tensor[(3, 12, 6), uint64]) -> (Tensor[(3, 12, 6), float64], Tensor[(12, 13, 5), float32]) {
  %928 = fn (%var_10678: Tensor[(3, 12, 6), uint64], %var_10679: Tensor[(3, 12, 6), uint64]) -> (Tensor[(3, 12, 6), float64], Tensor[(12, 13, 5), float32]) {
    %920 = cast(%var_10679, dtype="uint64") /* ty=Tensor[(3, 12, 6), uint64] */;
    %921 = shape_of(%var_10678, dtype="int32") /* ty=Tensor[(3), int32] */;
    %922 = cast(%var_10678, dtype="uint64") /* ty=Tensor[(3, 12, 6), uint64] */;
    %923 = dyn.reshape(%920, %921, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %924 = right_shift(%922, %923) /* ty=Tensor[(3, 12, 6), uint64] */;
    %925 = cast(%924, dtype="float64") /* ty=Tensor[(3, 12, 6), float64] */;
    %926 = acos(%925) /* ty=Tensor[(3, 12, 6), float64] */;
    %927 = @func_9982() /* ty=Tensor[(12, 13, 5), float32] */;
    (%926, %927)
  };
  %928(%var_10692, %var_10693) /* ty=(Tensor[(3, 12, 6), float64], Tensor[(12, 13, 5), float32]) */
}

def @func_2235(%var_2234: Tensor[(12, 13, 5), float32]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), bool]) {
  %937 = fn (%var_2225: Tensor[(12, 13, 5), float32]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), bool]) {
    %929 = @func_2118() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %930 = %929.0;
    %931 = cast(%var_2225, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
    %932 = shape_of(%930, dtype="int32") /* ty=Tensor[(3), int32] */;
    %933 = cast(%930, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
    %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %935 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
    %936 = not_equal(%933, %934) /* ty=Tensor[(12, 13, 5), bool] */;
    (%935, %936)
  };
  %937(%var_2234) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), bool]) */
}

def @func_9921(%var_9900: Tensor[(504), float64]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(12, 13, 5), float32]) {
  %938 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
  %939 = cast(%var_9900, dtype="float64") /* ty=Tensor[(504), float64] */;
  %940 = reshape(%939, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %941 = @func_5550(%940) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2145), float32], Tensor[(504), float64], Tensor[(2145), float32], Tensor[(2, 72), int64], Tensor[(12, 13, 5), float32]) */;
  %942 = %938.1;
  %943 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %944 = %941.6;
  %945 = @func_7385() /* ty=Tensor[(12, 13, 5), float32] */;
  (%942, %943, %944, %var_9900, %945)
}

def @func_6841(%var_6829: Tensor[(2145), float32]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2145), float32]) {
  %946 = @func_4446() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %947 = @func_3658() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %948 = cast(%var_6829, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %949 = reshape(%948, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
  %950 = @func_5353(%949) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) */;
  %951 = %946.0;
  %952 = %947.1;
  %953 = %950.1;
  (%951, %952, %953, %var_6829)
}

def @func_12103() -> Tensor[(12, 13, 5), float32] {
  %954 = @func_11573() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) */;
  %954.5
}

def @func_6844(%var_6842: Tensor[(2145), float32]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2145), float32]) {
  @func_6841(%var_6842) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2145), float32]) */
}

def @func_11015(%var_11014: Tensor[(432), bool]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(6, 6, 12), bool], Tensor[(432), bool], Tensor[(12, 13, 5), float32]) {
  %967 = fn (%var_10993: Tensor[(432), bool]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(6, 6, 12), bool], Tensor[(432), bool], Tensor[(12, 13, 5), float32]) {
    %955 = @func_6675() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %956 = @func_5094() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %957 = cast(%var_10993, dtype="bool") /* ty=Tensor[(432), bool] */;
    %958 = %955.0;
    %959 = cast(%958, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
    %960 = reshape(%957, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), bool] */;
    %961 = reshape(%959, newshape=[780]) /* ty=Tensor[(780), float32] */;
    %962 = @func_9084(%960, %961) /* ty=(Tensor[(6, 6, 12), bool], Tensor[(780), float32], Tensor[(3, 12, 4), float64]) */;
    %963 = @func_8801() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %964 = %956.0;
    %965 = %962.0;
    %966 = %963.0;
    (%958, %964, %965, %var_10993, %966)
  };
  %967(%var_11014) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(6, 6, 12), bool], Tensor[(432), bool], Tensor[(12, 13, 5), float32]) */
}

def @func_2939(%var_2933: Tensor[(7, 16, 11), float64]) -> Tensor[(7, 16, 11), float32] {
  %968 = cast(%var_2933, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %969 = asinh(%968) /* ty=Tensor[(7, 16, 11), float64] */;
  %970 = cast(%969, dtype="float32") /* ty=Tensor[(7, 16, 11), float32] */;
  erf(%970) /* ty=Tensor[(7, 16, 11), float32] */
}

def @func_2744(%var_2739: Tensor[(12, 13, 5), float64]) -> Tensor[(12, 13, 5), bool] {
  %971 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
  %972 = %971.0;
  %973 = cast(%var_2739, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %974 = shape_of(%972, dtype="int32") /* ty=Tensor[(3), int32] */;
  %975 = cast(%972, dtype="bool") /* ty=Tensor[(12, 13, 5), bool] */;
  %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%975, %976) /* ty=Tensor[(12, 13, 5), bool] */
}

def @func_5070() -> (Tensor[(12, 13, 5), float32],) {
  %978 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %977 = @func_3019() /* ty=Tensor[(12, 13, 5), float32] */;
    (%977,)
  };
  %978() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_12083() -> Tensor[(504), float64] {
  %982 = fn () -> Tensor[(504), float64] {
    %979 = @func_11795() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64], Tensor[(2, 72), int64], Tensor[(504), float64], Tensor[(12, 13, 5), float32], Tensor[(1320), float64]) */;
    %980 = %979.3;
    %981 = cast(%980, dtype="float64") /* ty=Tensor[(504), float64] */;
    cos(%981) /* ty=Tensor[(504), float64] */
  };
  %982() /* ty=Tensor[(504), float64] */
}

def @func_2059() -> Tensor[(12, 13, 5), float32] {
  @func_1978() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_9458() -> (Tensor[(12, 13, 5), float32],) {
  %985 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %983 = @func_8967() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
    %984 = %983.0;
    (%984,)
  };
  %985() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_9030() -> Tensor[(12, 13, 5), float32] {
  @func_9028() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_3103() -> Tensor[(12, 13, 5), float32] {
  %987 = fn () -> Tensor[(12, 13, 5), float32] {
    %986 = @func_2118() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %986.0
  };
  %987() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_11194(%var_11193: Tensor[(6, 8, 15), uint8]) -> Tensor[(6, 8, 15), uint8] {
  %992 = fn (%var_11185: Tensor[(6, 8, 15), uint8]) -> Tensor[(6, 8, 15), uint8] {
    %988 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 8, 15), uint8] */, dtype="uint8") /* ty=Tensor[(6, 8, 15), uint8] */;
    %989 = shape_of(%var_11185, dtype="int32") /* ty=Tensor[(3), int32] */;
    %990 = cast(%var_11185, dtype="uint8") /* ty=Tensor[(6, 8, 15), uint8] */;
    %991 = dyn.reshape(%988, %989, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    right_shift(%990, %991) /* ty=Tensor[(6, 8, 15), uint8] */
  };
  %992(%var_11193) /* ty=Tensor[(6, 8, 15), uint8] */
}

def @func_3600() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %993 = @func_2666() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %994 = @func_3102() /* ty=Tensor[(12, 13, 5), float32] */;
  %995 = %993.0;
  %996 = @func_3407() /* ty=Tensor[(12, 13, 5), float32] */;
  %997 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
  %998 = @func_3290() /* ty=Tensor[(12, 13, 5), float32] */;
  (%994, %995, %996, %997, %998)
}

def @func_8288() -> (Tensor[(12, 13, 5), float32], Tensor[(504), float64]) {
  %1002 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(504), float64]) {
    %999 = @func_7506() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(715, 3), float32], Tensor[(504), float64], Tensor[(504), float64]) */;
    %1000 = @func_5265() /* ty=Tensor[(12, 13, 5), float32] */;
    %1001 = %999.4;
    (%1000, %1001)
  };
  %1002() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(504), float64]) */
}

def @func_8182() -> (Tensor[(11, 8, 7), float64], Tensor[(12, 13, 5), float32]) {
  %1003 = @func_5100() /* ty=(Tensor[(11, 8, 7), float64],) */;
  %1004 = @func_8145() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %1005 = %1003.0;
  %1006 = %1004.0;
  (%1005, %1006)
}

def @func_6675() -> (Tensor[(12, 13, 5), float32],) {
  %1007 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
  (%1007,)
}

def @func_7861() -> (Tensor[(12, 13, 5), float32],) {
  @func_7859() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_5618() -> Tensor[(12, 13, 5), float32] {
  %1008 = @func_4166() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %1008.0
}

def @func_4248(%var_4246: Tensor[(300), float32]) -> (Tensor[(15, 5, 4), float32], Tensor[(300), float32], Tensor[(12, 13, 5), float64]) {
  @func_4245(%var_4246) /* ty=(Tensor[(15, 5, 4), float32], Tensor[(300), float32], Tensor[(12, 13, 5), float64]) */
}

def @func_7876() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  @func_7874() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_11699(%var_11698: Tensor[(7, 9, 8), bool]) -> (Tensor[(7, 9, 8), bool], Tensor[(12, 13, 5), float32], Tensor[(300), float32]) {
  %1018 = fn (%var_11677: Tensor[(7, 9, 8), bool]) -> (Tensor[(7, 9, 8), bool], Tensor[(12, 13, 5), float32], Tensor[(300), float32]) {
    %1009 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 9, 8), bool] */, dtype="bool") /* ty=Tensor[(7, 9, 8), bool] */;
    %1010 = shape_of(%var_11677, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1011 = cast(%var_11677, dtype="bool") /* ty=Tensor[(7, 9, 8), bool] */;
    %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1013 = @func_9525() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %1014 = @func_8110() /* ty=(Tensor[(300), float32],) */;
    %1015 = logical_or(%1011, %1012) /* ty=Tensor[(7, 9, 8), bool] */;
    %1016 = %1013.0;
    %1017 = %1014.0;
    (%1015, %1016, %1017)
  };
  %1018(%var_11698) /* ty=(Tensor[(7, 9, 8), bool], Tensor[(12, 13, 5), float32], Tensor[(300), float32]) */
}

def @func_4473() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  @func_4471() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_10807(%var_10805: Tensor[(7, 14, 15), float64]) -> (Tensor[(7, 14, 15), float64], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(7, 14, 15), float64]) {
  @func_10804(%var_10805) /* ty=(Tensor[(7, 14, 15), float64], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(7, 14, 15), float64]) */
}

def @func_12239(%var_12238: Tensor[(448), uint8]) -> (Tensor[(12, 13, 5), float32], Tensor[(8), uint8], Tensor[(448), uint8]) {
  %1025 = fn (%var_12233: Tensor[(448), uint8]) -> (Tensor[(12, 13, 5), float32], Tensor[(8), uint8], Tensor[(448), uint8]) {
    %1019 = @func_7859() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %1020 = cast(%var_12233, dtype="uint8") /* ty=Tensor[(448), uint8] */;
    %1021 = reshape(%1020, newshape=[448]) /* ty=Tensor[(448), uint8] */;
    %1022 = @func_2566(%1021) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(4, 14, 8), bool], Tensor[(8), uint8], Tensor[(448), uint8]) */;
    %1023 = %1019.0;
    %1024 = %1022.2;
    (%1023, %1024, %var_12233)
  };
  %1025(%var_12238) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(8), uint8], Tensor[(448), uint8]) */
}

def @func_3923(%var_3921: Tensor[(12, 13, 5), float32], %var_3922: Tensor[(24, 6), int64]) -> (Tensor[(12, 13, 5), uint16], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(9, 9, 16), float64], Tensor[(24, 6), int64]) {
  %1045 = fn (%var_3872: Tensor[(12, 13, 5), float32], %var_3913: Tensor[(24, 6), int64]) -> (Tensor[(12, 13, 5), uint16], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(9, 9, 16), float64], Tensor[(24, 6), int64]) {
    %1026 = @func_3102() /* ty=Tensor[(12, 13, 5), float32] */;
    %1027 = cast(%var_3872, dtype="uint16") /* ty=Tensor[(12, 13, 5), uint16] */;
    %1028 = shape_of(%1026, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1029 = cast(%1026, dtype="uint16") /* ty=Tensor[(12, 13, 5), uint16] */;
    %1030 = dyn.reshape(%1027, %1028, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1031 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
    %1032 = cast(%1026, dtype="float32") /* ty=Tensor[(12, 13, 5), float32] */;
    %1033 = acos(%1032) /* ty=Tensor[(12, 13, 5), float32] */;
    %1034 = cast(%1033, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
    %1035 = @func_3727() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %1036 = cast(%var_3913, dtype="int64") /* ty=Tensor[(24, 6), int64] */;
    %1037 = reshape(%1036, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %1038 = @func_1842(%1037) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), int64], Tensor[(9, 9, 16), float32], Tensor[(9, 9, 16), float64]) */;
    %1039 = multiply(%1029, %1030) /* ty=Tensor[(12, 13, 5), uint16] */;
    %1040 = %1031.1;
    %1041 = @func_2059() /* ty=Tensor[(12, 13, 5), float32] */;
    %1042 = cosh(%1034) /* ty=Tensor[(12, 13, 5), float64] */;
    %1043 = %1035.0;
    %1044 = %1038.3;
    (%1039, %1040, %1041, %1042, %1043, %1044, %var_3913)
  };
  %1045(%var_3921, %var_3922) /* ty=(Tensor[(12, 13, 5), uint16], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32], Tensor[(9, 9, 16), float64], Tensor[(24, 6), int64]) */
}

def @func_6806(%var_6804: Tensor[(4, 36), float32]) -> (Tensor[(4, 36), int8],) {
  @func_6803(%var_6804) /* ty=(Tensor[(4, 36), int8],) */
}

def @func_4688() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(1320), float64], Tensor[(144), int64]) {
  %1046 = @func_3600() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %1047 = cast(meta[relay.Constant][48] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %1048 = cast(meta[relay.Constant][49] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %1049 = reshape(%1047, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), float64] */;
  %1050 = reshape(%1048, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %1051 = @func_2928(%1049, %1050) /* ty=(Tensor[(12, 11, 10), bool], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
  %1052 = @func_3019() /* ty=Tensor[(12, 13, 5), float32] */;
  %1053 = %1046.4;
  %1054 = %1051.1;
  (%1052, %1053, %1054, meta[relay.Constant][48] /* ty=Tensor[(1320), float64] */, meta[relay.Constant][49] /* ty=Tensor[(144), int64] */)
}

def @func_8110() -> (Tensor[(300), float32],) {
  %1055 = @func_6532() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(15, 5, 4), float32], Tensor[(300), float32]) */;
  %1056 = %1055.3;
  (%1056,)
}

def @func_11130() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %1061 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
    %1057 = @func_7874() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
    %1058 = @func_9368() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %1059 = %1057.0;
    %1060 = %1058.0;
    (%1059, %1060)
  };
  %1061() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_1086(%var_1084: Tensor[(13, 10, 2), float64], %var_1085: Tensor[(24, 6), int64]) -> (Tensor[(13, 10, 2), float64], Tensor[(3, 12, 4), float64], Tensor[(24, 6), int64], Tensor[(3, 12, 4), float64], Tensor[(13, 11, 15), float32], Tensor[(2145, 1), float32]) {
  @func_1082(%var_1084, %var_1085) /* ty=(Tensor[(13, 10, 2), float64], Tensor[(3, 12, 4), float64], Tensor[(24, 6), int64], Tensor[(3, 12, 4), float64], Tensor[(13, 11, 15), float32], Tensor[(2145, 1), float32]) */
}

def @func_7736() -> Tensor[(12, 13, 5), float32] {
  %1062 = fn () -> Tensor[(12, 13, 5), float32] {
    @func_3290() /* ty=Tensor[(12, 13, 5), float32] */
  };
  %1062() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_9854() -> (Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64]) {
  @func_9852() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64]) */
}

def @func_7131() -> (Tensor[(12, 13, 5), float32],) {
  @func_7129() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_8221(%var_8220: Tensor[(1232), float64]) -> (Tensor[(448), uint8], Tensor[(7, 16, 11), float32], Tensor[(1232), float64]) {
  %1068 = fn (%var_8213: Tensor[(1232), float64]) -> (Tensor[(448), uint8], Tensor[(7, 16, 11), float32], Tensor[(1232), float64]) {
    %1063 = @func_6877() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(448), uint8], Tensor[(8), uint8], Tensor[(11, 8, 7), float64]) */;
    %1064 = cast(%var_8213, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %1065 = reshape(%1064, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
    %1066 = %1063.1;
    %1067 = @func_2939(%1065) /* ty=Tensor[(7, 16, 11), float32] */;
    (%1066, %1067, %var_8213)
  };
  %1068(%var_8220) /* ty=(Tensor[(448), uint8], Tensor[(7, 16, 11), float32], Tensor[(1232), float64]) */
}

def @func_6730(%var_6700: Tensor[(448), uint8]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(448), uint8], Tensor[(448), uint8], Tensor[(12, 13, 5), float64], uint64, Tensor[(12, 13, 5), float32], Tensor[(448), uint8]) {
  %1069 = cast(%var_6700, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %1070 = @func_6346() /* ty=Tensor[(12, 13, 5), float32] */;
  %1071 = cast(%1070, dtype="float64") /* ty=Tensor[(12, 13, 5), float64] */;
  %1072 = reshape(%1069, newshape=[448]) /* ty=Tensor[(448), uint8] */;
  %1073 = reshape(%1071, newshape=[12, 13, 5]) /* ty=Tensor[(12, 13, 5), float64] */;
  %1074 = @func_2970(%1072, %1073) /* ty=(Tensor[(4, 14, 8), int64], Tensor[(4, 2), uint8], Tensor[(448), uint8], Tensor[(12, 13, 5), float64]) */;
  %1075 = cast(meta[relay.Constant][50] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1076 = reshape(%1075, newshape=[]) /* ty=uint64 */;
  %1077 = @func_4098(%1076) /* ty=(Tensor[(12, 13, 5), float64], Tensor[(3, 16, 1), uint64], uint64, Tensor[(48), uint64]) */;
  %1078 = @func_5094() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %1079 = cast(%var_6700, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %1080 = reshape(%1079, newshape=[448]) /* ty=Tensor[(448), uint8] */;
  %1081 = @func_2566(%1080) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(4, 14, 8), bool], Tensor[(8), uint8], Tensor[(448), uint8]) */;
  %1082 = @func_5719() /* ty=Tensor[(12, 13, 5), float32] */;
  %1083 = %1074.2;
  %1084 = %1077.0;
  %1085 = %1078.0;
  %1086 = %1081.3;
  (%1082, %1070, %1083, %var_6700, %1084, meta[relay.Constant][50] /* ty=uint64 */, %1085, %1086)
}

def @func_10552() -> Tensor[(12, 13, 5), float32] {
  @func_10550() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_11266(%var_11264: Tensor[(240), float64]) -> (Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64], Tensor[(240), float64], Tensor[(14, 5, 15), float64], Tensor[(1050), float64]) {
  @func_11263(%var_11264) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64], Tensor[(240), float64], Tensor[(14, 5, 15), float64], Tensor[(1050), float64]) */
}

def @func_5482() -> Tensor[(12, 13, 5), float32] {
  @func_5480() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_11604() -> (Tensor[(12, 13, 5), float32],) {
  @func_11602() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_11975() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  @func_11973() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_3960(%var_3959: Tensor[(15, 5, 4), float32]) -> (Tensor[(15, 5, 4), float32],) {
  %1089 = fn (%var_3955: Tensor[(15, 5, 4), float32]) -> (Tensor[(15, 5, 4), float32],) {
    %1087 = cast(%var_3955, dtype="float32") /* ty=Tensor[(15, 5, 4), float32] */;
    %1088 = atanh(%1087) /* ty=Tensor[(15, 5, 4), float32] */;
    (%1088,)
  };
  %1089(%var_3959) /* ty=(Tensor[(15, 5, 4), float32],) */
}

def @func_9370() -> (Tensor[(12, 13, 5), float32],) {
  @func_9368() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_5552(%var_5551: Tensor[(504), float64]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2145), float32], Tensor[(504), float64], Tensor[(2145), float32], Tensor[(2, 72), int64], Tensor[(12, 13, 5), float32]) {
  %1103 = fn (%var_5511: Tensor[(504), float64]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2145), float32], Tensor[(504), float64], Tensor[(2145), float32], Tensor[(2, 72), int64], Tensor[(12, 13, 5), float32]) {
    %1090 = @func_2118() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %1091 = @func_2666() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %1092 = cast(%var_5511, dtype="float64") /* ty=Tensor[(504), float64] */;
    %1093 = cast(meta[relay.Constant][51] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %1094 = cast(meta[relay.Constant][52] /* ty=Tensor[(2, 72), int64] */, dtype="int64") /* ty=Tensor[(2, 72), int64] */;
    %1095 = reshape(%1092, newshape=[7, 9, 8]) /* ty=Tensor[(7, 9, 8), float64] */;
    %1096 = reshape(%1093, newshape=[2145]) /* ty=Tensor[(2145), float32] */;
    %1097 = reshape(%1094, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %1098 = @func_968(%1095, %1096, %1097) /* ty=(Tensor[(13, 11, 15), float32], Tensor[(2145), float32], Tensor[(7, 9, 8), float32], Tensor[(7, 9, 8), int32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
    %1099 = %1090.0;
    %1100 = %1091.0;
    %1101 = %1098.1;
    %1102 = @func_3469() /* ty=Tensor[(12, 13, 5), float32] */;
    (%1099, %1100, %1101, %var_5511, meta[relay.Constant][51] /* ty=Tensor[(2145), float32] */, meta[relay.Constant][52] /* ty=Tensor[(2, 72), int64] */, %1102)
  };
  %1103(%var_5551) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(2145), float32], Tensor[(504), float64], Tensor[(2145), float32], Tensor[(2, 72), int64], Tensor[(12, 13, 5), float32]) */
}

def @func_11263(%var_11250: Tensor[(240), float64]) -> (Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64], Tensor[(240), float64], Tensor[(14, 5, 15), float64], Tensor[(1050), float64]) {
  %1104 = cast(%var_11250, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1105 = reshape(%1104, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), float64] */;
  %1106 = cast(meta[relay.Constant][53] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %1107 = reshape(%1106, newshape=[14, 5, 15]) /* ty=Tensor[(14, 5, 15), float64] */;
  %1108 = @func_4764(%1107) /* ty=(Tensor[(14, 5, 15), float64],) */;
  %1109 = @func_6662() /* ty=Tensor[(12, 13, 5), float32] */;
  %1110 = @func_5590(%1105) /* ty=Tensor[(10, 12, 2), float64] */;
  %1111 = %1108.0;
  (%1109, %1110, %var_11250, %1111, meta[relay.Constant][53] /* ty=Tensor[(1050), float64] */)
}

def @func_5355(%var_5354: Tensor[(2145), float32]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) {
  %1118 = fn (%var_5335: Tensor[(2145), float32]) -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) {
    %1112 = @func_3079() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %1113 = cast(%var_5335, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %1114 = reshape(%1113, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float32] */;
    %1115 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
    %1116 = %1112.0;
    %1117 = @func_100(%1114) /* ty=Tensor[(13, 11, 15), float32] */;
    (%1115, %1116, %1117, %var_5335)
  };
  %1118(%var_5354) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(2145), float32]) */
}

def @func_11574() -> (Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) {
  %1133 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) {
    %1119 = @func_4808() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %1120 = @func_7506() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(715, 3), float32], Tensor[(504), float64], Tensor[(504), float64]) */;
    %1121 = @func_8471() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %1122 = cast(meta[relay.Constant][54] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
    %1123 = reshape(%1122, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %1124 = @func_2534(%1123) /* ty=(Tensor[(12, 13, 5), float32], Tensor[(3, 12, 4), float64], Tensor[(144), int64]) */;
    %1125 = @func_11129() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
    %1126 = %1119.0;
    %1127 = %1120.4;
    %1128 = @func_6291() /* ty=Tensor[(12, 13, 5), float32] */;
    %1129 = @func_3290() /* ty=Tensor[(12, 13, 5), float32] */;
    %1130 = %1121.0;
    %1131 = %1124.0;
    %1132 = %1125.0;
    (%1126, %1127, %1128, %1129, %1130, %1131, meta[relay.Constant][54] /* ty=Tensor[(144), int64] */, %1132)
  };
  %1133() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(504), float64], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(144), int64], Tensor[(12, 13, 5), float32]) */
}

def @func_9852() -> (Tensor[(12, 13, 5), float32], Tensor[(10, 12, 2), float64]) {
  %1134 = @func_2715() /* ty=(Tensor[(12, 13, 5), float64], Tensor[(12, 13, 5), float32]) */;
  %1135 = @func_7619() /* ty=(Tensor[(4, 36), bool], Tensor[(4, 36), float32], Tensor[(10, 12, 2), float64], Tensor[(4, 60), float64], Tensor[(4, 36), float32]) */;
  %1136 = %1134.1;
  %1137 = %1135.2;
  (%1136, %1137)
}

def @func_1457(%var_1452: uint64, %var_1453: Tensor[(3, 16, 1), uint64]) -> Tensor[(3, 16, 1), uint64] {
  %1138 = cast(%var_1452, dtype="uint64") /* ty=uint64 */;
  %1139 = cast(%var_1453, dtype="uint64") /* ty=Tensor[(3, 16, 1), uint64] */;
  add(%1138, %1139) /* ty=Tensor[(3, 16, 1), uint64] */
}

def @func_1461(%var_1459: uint64, %var_1460: Tensor[(3, 16, 1), uint64]) -> Tensor[(3, 16, 1), uint64] {
  @func_1457(%var_1459, %var_1460) /* ty=Tensor[(3, 16, 1), uint64] */
}

def @func_4942() -> Tensor[(12, 13, 5), float32] {
  @func_4940() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_3019() -> Tensor[(12, 13, 5), float32] {
  %1140 = @func_2666() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %1140.0
}

def @func_2942(%var_2940: Tensor[(7, 16, 11), float64]) -> Tensor[(7, 16, 11), float32] {
  @func_2939(%var_2940) /* ty=Tensor[(7, 16, 11), float32] */
}

def @func_10380() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %1141 = @func_7895() /* ty=(Tensor[(12, 13, 5), float32],) */;
  %1142 = @func_4471() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */;
  %1143 = %1141.0;
  %1144 = %1142.1;
  %1145 = @func_7385() /* ty=Tensor[(12, 13, 5), float32] */;
  (%1143, %1144, %1145)
}

def @func_9134() -> Tensor[(12, 13, 5), float32] {
  %1146 = @func_7506() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(13, 11, 15), float32], Tensor[(715, 3), float32], Tensor[(504), float64], Tensor[(504), float64]) */;
  %1146.0
}

def @func_9526() -> (Tensor[(12, 13, 5), float32],) {
  %1149 = fn () -> (Tensor[(12, 13, 5), float32],) {
    %1147 = @func_6675() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %1148 = %1147.0;
    (%1148,)
  };
  %1149() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_9422() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %1153 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
    %1150 = @func_4166() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %1151 = %1150.0;
    %1152 = @func_1978() /* ty=Tensor[(12, 13, 5), float32] */;
    (%1151, %1152)
  };
  %1153() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_3690() -> Tensor[(12, 13, 5), float32] {
  @func_3688() /* ty=Tensor[(12, 13, 5), float32] */
}

def @func_7620() -> (Tensor[(4, 36), bool], Tensor[(4, 36), float32], Tensor[(10, 12, 2), float64], Tensor[(4, 60), float64], Tensor[(4, 36), float32]) {
  %1170 = fn () -> (Tensor[(4, 36), bool], Tensor[(4, 36), float32], Tensor[(10, 12, 2), float64], Tensor[(4, 60), float64], Tensor[(4, 36), float32]) {
    %1154 = @func_5226() /* ty=Tensor[(4, 36), int64] */;
    %1155 = cast(meta[relay.Constant][55] /* ty=Tensor[(4, 36), int64] */, dtype="bool") /* ty=Tensor[(4, 36), bool] */;
    %1156 = shape_of(%1154, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1157 = cast(%1154, dtype="bool") /* ty=Tensor[(4, 36), bool] */;
    %1158 = dyn.reshape(%1155, %1156, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1159 = cast(meta[relay.Constant][56] /* ty=Tensor[(4, 36), int64] */, dtype="float32") /* ty=Tensor[(4, 36), float32] */;
    %1160 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(4, 36), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1161 = cast(meta[relay.Constant][55] /* ty=Tensor[(4, 36), int64] */, dtype="float32") /* ty=Tensor[(4, 36), float32] */;
    %1162 = dyn.reshape(%1159, %1160, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %1163 = cast(meta[relay.Constant][57] /* ty=Tensor[(4, 60), float64] */, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
    %1164 = reshape(%1163, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), float64] */;
    %1165 = cast(meta[relay.Constant][55] /* ty=Tensor[(4, 36), int64] */, dtype="float32") /* ty=Tensor[(4, 36), float32] */;
    %1166 = equal(%1157, %1158) /* ty=Tensor[(4, 36), bool] */;
    %1167 = divide(%1161, %1162) /* ty=Tensor[(4, 36), float32] */;
    %1168 = @func_5590(%1164) /* ty=Tensor[(10, 12, 2), float64] */;
    %1169 = log2(%1165) /* ty=Tensor[(4, 36), float32] */;
    (%1166, %1167, %1168, meta[relay.Constant][57] /* ty=Tensor[(4, 60), float64] */, %1169)
  };
  %1170() /* ty=(Tensor[(4, 36), bool], Tensor[(4, 36), float32], Tensor[(10, 12, 2), float64], Tensor[(4, 60), float64], Tensor[(4, 36), float32]) */
}

def @func_3240(%var_3238: Tensor[(13, 1, 16), float32], %var_3239: Tensor[(24, 6), int64]) -> (Tensor[(13, 1, 16), float32], Tensor[(3, 12, 4), float64], Tensor[(24, 6), int64], Tensor[(12, 13, 5), float32]) {
  @func_3236(%var_3238, %var_3239) /* ty=(Tensor[(13, 1, 16), float32], Tensor[(3, 12, 4), float64], Tensor[(24, 6), int64], Tensor[(12, 13, 5), float32]) */
}

def @func_10266() -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
  %1174 = fn () -> (Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) {
    %1171 = @func_8321() /* ty=(Tensor[(12, 13, 5), float32],) */;
    %1172 = %1171.0;
    %1173 = @func_9670() /* ty=Tensor[(12, 13, 5), float32] */;
    (%1172, %1173)
  };
  %1174() /* ty=(Tensor[(12, 13, 5), float32], Tensor[(12, 13, 5), float32]) */
}

def @func_8147() -> (Tensor[(12, 13, 5), float32],) {
  @func_8145() /* ty=(Tensor[(12, 13, 5), float32],) */
}

def @func_8874() -> (Tensor[(11, 8, 7), float64],) {
  @func_8872() /* ty=(Tensor[(11, 8, 7), float64],) */
}

def @func_11220() -> (Tensor[(12, 13, 5), float32],) {
  @func_11218() /* ty=(Tensor[(12, 13, 5), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen428/build/output.py:3970: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen428/build/output.py", line 3975, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(132) tvmgen_default_fused_sigmoid_cast_sinh_cast_reshape_greater_equal_kernel0(signed char* __restrict__ T_greater_equal, double* __restrict__ placeholder) {
  T_greater_equal[(((int)threadIdx.x))] = ((signed char)(((bool)sinh(placeholder[(((int)threadIdx.x))])) <= ((bool)(1.000000e+00 / (1.000000e+00 + exp((0.000000e+00 - placeholder[(((int)threadIdx.x))])))))));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_32 = relay.var("var_32", dtype = "float32", shape = (13, 11, 15))#candidate|32|(13, 11, 15)|var|float32
uop_33 = relay.tan(var_32.astype('float32')) # shape=(13, 11, 15)
output = uop_33
output2 = uop_33
func_100 = relay.Function([var_32,], output)
mod['func_100'] = func_100
mod = relay.transform.InferType()(mod)
var_101 = relay.var("var_101", dtype = "float32", shape = (13, 11, 15))#candidate|101|(13, 11, 15)|var|float32
output = func_100(var_101)
func_102 = relay.Function([var_101], output)
mutated_mod['func_102'] = func_102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_804 = relay.var("var_804", dtype = "int64", shape = (3, 12, 4))#candidate|804|(3, 12, 4)|var|int64
var_805 = relay.var("var_805", dtype = "int64", shape = (3, 12, 4))#candidate|805|(3, 12, 4)|var|int64
bop_806 = relay.bitwise_xor(var_804.astype('int64'), relay.reshape(var_805.astype('int64'), relay.shape_of(var_804))) # shape=(3, 12, 4)
uop_818 = relay.asinh(bop_806.astype('float64')) # shape=(3, 12, 4)
output = uop_818
output2 = uop_818
func_820 = relay.Function([var_804,var_805,], output)
mod['func_820'] = func_820
mod = relay.transform.InferType()(mod)
var_821 = relay.var("var_821", dtype = "int64", shape = (3, 12, 4))#candidate|821|(3, 12, 4)|var|int64
var_822 = relay.var("var_822", dtype = "int64", shape = (3, 12, 4))#candidate|822|(3, 12, 4)|var|int64
output = func_820(var_821,var_822,)
func_823 = relay.Function([var_821,var_822,], output)
mutated_mod['func_823'] = func_823
mutated_mod = relay.transform.InferType()(mutated_mod)
var_901 = relay.var("var_901", dtype = "float64", shape = (7, 9, 8))#candidate|901|(7, 9, 8)|var|float64
uop_902 = relay.cos(var_901.astype('float64')) # shape=(7, 9, 8)
func_100_call = mod.get_global_var('func_100')
func_102_call = mutated_mod.get_global_var('func_102')
var_908 = relay.var("var_908", dtype = "float32", shape = (2145,))#candidate|908|(2145,)|var|float32
call_907 = func_100_call(relay.reshape(var_908.astype('float32'), [13, 11, 15]))
call_909 = func_100_call(relay.reshape(var_908.astype('float32'), [13, 11, 15]))
uop_919 = relay.sin(uop_902.astype('float32')) # shape=(7, 9, 8)
bop_938 = relay.right_shift(uop_902.astype('int32'), relay.reshape(var_901.astype('int32'), relay.shape_of(uop_902))) # shape=(7, 9, 8)
func_820_call = mod.get_global_var('func_820')
func_823_call = mutated_mod.get_global_var('func_823')
var_962 = relay.var("var_962", dtype = "int64", shape = (144,))#candidate|962|(144,)|var|int64
call_961 = func_820_call(relay.reshape(var_962.astype('int64'), [3, 12, 4]), relay.reshape(var_962.astype('int64'), [3, 12, 4]), )
call_963 = func_820_call(relay.reshape(var_962.astype('int64'), [3, 12, 4]), relay.reshape(var_962.astype('int64'), [3, 12, 4]), )
output = relay.Tuple([call_907,var_908,uop_919,bop_938,call_961,var_962,])
output2 = relay.Tuple([call_909,var_908,uop_919,bop_938,call_963,var_962,])
func_968 = relay.Function([var_901,var_908,var_962,], output)
mod['func_968'] = func_968
mod = relay.transform.InferType()(mod)
var_969 = relay.var("var_969", dtype = "float64", shape = (7, 9, 8))#candidate|969|(7, 9, 8)|var|float64
var_970 = relay.var("var_970", dtype = "float32", shape = (2145,))#candidate|970|(2145,)|var|float32
var_971 = relay.var("var_971", dtype = "int64", shape = (144,))#candidate|971|(144,)|var|int64
output = func_968(var_969,var_970,var_971,)
func_972 = relay.Function([var_969,var_970,var_971,], output)
mutated_mod['func_972'] = func_972
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1038 = relay.var("var_1038", dtype = "float64", shape = (13, 10, 2))#candidate|1038|(13, 10, 2)|var|float64
uop_1039 = relay.sin(var_1038.astype('float64')) # shape=(13, 10, 2)
func_820_call = mod.get_global_var('func_820')
func_823_call = mutated_mod.get_global_var('func_823')
var_1045 = relay.var("var_1045", dtype = "int64", shape = (24, 6))#candidate|1045|(24, 6)|var|int64
call_1044 = func_820_call(relay.reshape(var_1045.astype('int64'), [3, 12, 4]), relay.reshape(var_1045.astype('int64'), [3, 12, 4]), )
call_1046 = func_820_call(relay.reshape(var_1045.astype('int64'), [3, 12, 4]), relay.reshape(var_1045.astype('int64'), [3, 12, 4]), )
func_820_call = mod.get_global_var('func_820')
func_823_call = mutated_mod.get_global_var('func_823')
call_1057 = func_820_call(relay.reshape(call_1044.astype('int64'), [3, 12, 4]), relay.reshape(var_1045.astype('int64'), [3, 12, 4]), )
call_1058 = func_820_call(relay.reshape(call_1044.astype('int64'), [3, 12, 4]), relay.reshape(var_1045.astype('int64'), [3, 12, 4]), )
func_100_call = mod.get_global_var('func_100')
func_102_call = mutated_mod.get_global_var('func_102')
const_1061 = relay.const([[8.445107],[-8.574246],[-3.028047],[7.302820],[-9.522528],[-8.451512],[-4.059307],[-5.264516],[8.298452],[4.932512],[9.619800],[4.194105],[4.552272],[-7.842496],[-7.456790],[9.532445],[-2.036713],[5.042943],[5.857756],[1.404042],[-0.350302],[5.303238],[2.644269],[5.553971],[-7.093095],[0.896739],[1.722157],[-6.897786],[8.001507],[-7.310916],[-6.072301],[-4.053642],[-2.049961],[9.506081],[-5.305427],[3.224123],[-4.941016],[0.168637],[-1.316388],[4.817297],[5.582083],[-3.618082],[0.792349],[2.775075],[4.683053],[-0.407232],[-8.647015],[8.698434],[5.536783],[-5.111127],[6.963623],[-1.299371],[-8.077983],[1.080583],[-3.778330],[8.557389],[-4.738016],[0.798953],[-4.592108],[-4.917397],[-7.449615],[1.326539],[6.326490],[3.679251],[9.031205],[-4.051642],[2.396640],[1.651139],[1.169753],[6.729860],[6.323560],[9.569967],[-6.687542],[6.943261],[-9.204329],[1.489307],[3.858493],[8.733800],[9.999813],[0.409323],[-5.785778],[3.271546],[-2.846337],[1.650567],[1.757213],[-5.742187],[1.609483],[-8.026372],[-2.622772],[-3.618529],[-4.638613],[7.606994],[-7.951819],[-1.360711],[-7.005083],[-7.990984],[-4.749151],[-5.173334],[-2.765878],[-7.198757],[-9.883629],[-8.644246],[-9.779238],[-8.637378],[8.209015],[4.189548],[-6.445521],[6.683347],[1.127881],[-6.852392],[2.774959],[-8.966228],[-0.332190],[-4.466021],[-1.287563],[-5.535949],[0.381164],[-0.745335],[-3.490700],[-9.385175],[7.172203],[8.668325],[0.073596],[-0.606013],[-0.457028],[-4.688647],[-1.422031],[7.433067],[4.428160],[1.732013],[-0.681622],[8.102683],[1.520567],[-2.135624],[-1.878884],[3.090355],[-5.844003],[9.492197],[8.128095],[1.098034],[-5.369246],[9.746128],[-8.859745],[5.071665],[-3.931087],[-8.561240],[-7.559252],[2.592655],[0.256229],[1.820832],[-1.986801],[-5.038328],[7.790976],[-1.650151],[1.061736],[6.936246],[7.348586],[-6.637134],[4.427641],[-4.284471],[5.780588],[9.720106],[-1.498670],[4.098175],[-5.251198],[7.009864],[8.869107],[9.741175],[5.572084],[9.952461],[6.233653],[-0.173205],[7.401774],[0.182469],[-5.975974],[-6.009773],[-9.932580],[5.869956],[-2.397177],[-3.905630],[-5.618244],[-9.342426],[7.473760],[-6.413394],[4.232935],[-8.264513],[-0.366400],[-3.292273],[6.612700],[2.042189],[9.622752],[1.421277],[2.610969],[-0.422991],[8.195327],[-5.391575],[-6.232805],[2.323552],[-3.096758],[-2.561472],[4.361082],[7.378411],[3.709912],[3.950603],[6.803069],[-1.993975],[8.829664],[-6.554025],[-7.505735],[-4.002541],[7.985904],[9.150460],[2.289396],[-2.991405],[6.302120],[-1.744928],[7.477387],[-4.203868],[1.891908],[9.468405],[-2.408056],[8.096469],[-2.313358],[-8.680180],[-7.475764],[-2.994338],[7.121754],[3.939115],[9.720503],[5.222945],[-0.419247],[9.521897],[0.756821],[-8.976416],[-8.499019],[5.243301],[0.784086],[-3.450684],[-8.269492],[-2.122459],[9.841869],[-4.705994],[7.909070],[-0.080721],[8.734812],[1.220547],[1.495851],[3.776695],[-3.124545],[0.142505],[-9.383833],[-1.185880],[2.696554],[6.201914],[9.679504],[-6.923248],[-2.482618],[-8.203386],[-8.470663],[-7.608339],[-8.830525],[3.605197],[9.046809],[-6.341171],[-8.692377],[-0.100975],[-2.710782],[-3.693661],[6.578310],[1.989405],[1.215871],[1.758564],[-1.011444],[2.033600],[-3.366957],[9.281539],[8.971594],[-3.017677],[4.436332],[5.915417],[-7.724749],[-7.148135],[-9.787407],[-6.190122],[-4.066034],[-3.469100],[9.473805],[-0.767578],[1.463717],[-6.069438],[4.279055],[-2.362932],[-2.357585],[8.177670],[9.227561],[0.141287],[-9.312515],[-2.227740],[-1.279623],[-7.463939],[-5.214074],[9.779809],[0.811845],[-2.115842],[0.816820],[-1.961777],[-8.551340],[-1.646900],[-8.943434],[-9.133498],[-7.584387],[2.302359],[-0.479260],[5.016651],[3.787522],[8.142517],[-8.734128],[7.118291],[-2.934694],[2.762843],[5.299586],[0.811873],[-4.043931],[-3.459349],[6.179066],[2.814561],[6.803546],[5.282266],[-7.482735],[-2.446754],[-1.546888],[-7.905744],[-4.691841],[-0.622710],[9.474080],[4.117894],[-7.461140],[-1.026321],[-4.214022],[3.468648],[9.119594],[5.813604],[0.393256],[-6.963864],[5.360870],[6.632977],[9.550396],[-3.116380],[-0.462718],[-0.473903],[-4.400305],[-6.036635],[-1.000472],[-3.990571],[9.502023],[9.613109],[-4.882876],[9.132949],[4.410323],[9.071160],[2.931077],[-8.816903],[-1.612607],[-1.999747],[-7.833624],[-1.458722],[-8.732408],[3.419718],[1.109074],[7.926702],[4.581399],[-6.580517],[6.539603],[2.542109],[5.200493],[7.371639],[-8.103484],[5.030253],[0.478299],[4.635037],[9.396656],[-1.265120],[-6.279807],[-1.833243],[4.231404],[-9.472977],[-9.475245],[-0.441804],[5.544238],[-7.194894],[1.805991],[0.454093],[-8.970907],[-3.060013],[-4.312765],[6.820281],[-7.443238],[-5.073862],[7.323975],[-0.162458],[-0.189870],[2.096897],[4.766120],[9.418694],[4.912711],[-6.267344],[0.217005],[-0.935227],[-5.350156],[1.759509],[-8.660242],[-9.288439],[5.828700],[5.390349],[-3.317643],[4.064788],[5.045172],[1.210012],[7.166856],[3.704670],[1.181850],[2.510950],[0.193755],[-2.024005],[-7.222446],[-9.316018],[-4.826775],[0.108698],[3.677084],[-5.594309],[0.663499],[4.980281],[-3.590198],[3.338783],[0.276089],[-7.605780],[-3.745932],[6.308779],[-4.892188],[-7.631543],[-8.639825],[9.921582],[3.571320],[-2.388880],[-8.436560],[-1.877754],[-0.573056],[-0.963858],[3.156665],[-5.444445],[-7.591122],[8.579484],[-2.065881],[-2.736651],[-0.440909],[-5.409125],[4.374455],[5.552443],[-1.426713],[-7.248886],[-8.043486],[-9.864923],[-0.314324],[3.218942],[1.710190],[-0.725056],[-7.597098],[-2.593951],[-2.945429],[2.220807],[8.188195],[9.195176],[-3.621042],[-8.991006],[-8.545876],[4.270889],[6.326066],[-4.910227],[-1.417933],[9.183512],[3.298947],[0.544013],[3.152689],[8.635499],[-1.844268],[-5.418625],[-2.962616],[-9.409939],[-8.732677],[5.616231],[7.198159],[5.441224],[6.766516],[-9.636097],[4.426276],[9.318313],[7.522457],[0.003994],[-3.481734],[3.199841],[7.374488],[7.703857],[0.251489],[-1.134371],[-1.508389],[2.112072],[-3.305132],[-3.292867],[-9.243895],[3.477774],[6.802113],[-8.940333],[7.518142],[0.992817],[-2.237739],[-6.549950],[0.232004],[7.307992],[-4.035018],[-2.454978],[-9.188272],[-2.228560],[6.724752],[-9.820447],[-1.513282],[6.816707],[-7.855045],[-5.711999],[5.525164],[7.920035],[-1.412225],[-2.777296],[6.754999],[7.695626],[6.530116],[-1.926612],[5.600184],[7.380888],[-2.306179],[-2.756605],[3.410243],[-2.640388],[8.197891],[-5.311054],[-6.314347],[0.711206],[1.739755],[-4.053303],[6.483117],[-2.145749],[-3.432504],[-9.845057],[-9.731995],[-0.797487],[8.235838],[9.636955],[-8.563360],[-6.311982],[-2.499743],[8.031283],[3.139142],[-0.370551],[-8.893490],[0.613429],[-9.698171],[-9.639551],[4.841203],[-7.127821],[-8.167060],[-7.571906],[2.411128],[6.393404],[2.474339],[5.055083],[-2.556784],[-0.067305],[0.259422],[-9.380569],[-9.911460],[-8.251429],[-1.402529],[7.696959],[4.976558],[6.948292],[-5.289175],[-8.193767],[1.865443],[9.137603],[4.466863],[-4.360583],[7.276968],[2.276971],[7.296589],[-3.947657],[-8.809909],[-3.236379],[-6.062078],[-7.298308],[6.949513],[6.941590],[3.279039],[5.938813],[6.793858],[6.875197],[-3.169257],[-8.572712],[-5.744176],[-5.619778],[-3.131066],[1.700093],[9.978530],[2.430884],[3.536416],[-5.507939],[9.602760],[-4.212426],[0.405484],[1.907533],[7.669388],[6.551756],[-0.689136],[0.173334],[-6.803177],[0.850801],[2.754520],[7.557348],[-9.854524],[-9.360641],[-6.355403],[8.721969],[-5.497637],[-6.740451],[7.614685],[1.592252],[-6.670309],[-9.133419],[-1.136341],[6.485003],[-0.243402],[0.912187],[-4.101946],[-7.891707],[2.913324],[-9.526123],[6.399655],[8.909903],[-1.297584],[0.480690],[6.727323],[-9.589124],[-5.359018],[2.549084],[-0.393837],[2.130928],[2.978606],[-6.864720],[9.079501],[-7.610466],[7.803018],[-8.757678],[-1.331775],[6.454615],[9.469607],[2.864551],[5.350698],[-4.898482],[-1.195183],[-5.203949],[-4.167094],[7.476694],[2.501307],[0.963269],[9.470167],[2.099273],[8.712322],[5.072301],[-8.850838],[-0.639286],[-5.549745],[-6.645365],[5.315018],[5.290166],[-1.935307],[-6.456724],[8.244984],[-5.591443],[-2.377180],[1.813246],[-2.220310],[-0.750464],[-4.373073],[3.101775],[-2.343561],[-2.531028],[3.632921],[-0.173743],[4.795079],[6.883447],[-1.239273],[-9.642025],[4.193891],[-2.572197],[4.814090],[1.503411],[-7.784885],[8.987343],[-8.434199],[3.785370],[-1.773524],[3.001701],[5.608387],[-9.336475],[7.759561],[-6.061114],[4.670974],[6.719321],[-3.782602],[-0.341224],[3.947663],[7.456562],[-1.231384],[-5.451563],[1.048436],[3.505318],[9.438179],[-2.114693],[2.784551],[1.980993],[-5.533483],[-2.084514],[-4.706620],[-8.655837],[9.048822],[-2.329990],[6.362181],[-3.999930],[-9.237845],[-6.001692],[3.741546],[3.106256],[-0.772185],[3.695494],[-7.183960],[-6.771740],[-6.561359],[9.468557],[-0.016593],[0.818504],[-5.904782],[-7.398741],[8.853588],[4.324478],[8.595358],[-9.307069],[-7.422050],[2.296630],[1.031160],[-0.070278],[0.372906],[-4.562585],[1.887202],[-9.730958],[3.023526],[5.873232],[-8.668985],[7.744369],[-8.450268],[7.102109],[-4.842687],[-1.778457],[-5.948188],[2.712841],[-5.854581],[7.260236],[-7.193893],[-7.842372],[5.551576],[4.827870],[-5.342632],[9.217682],[-3.071560],[2.884649],[6.001065],[-1.089037],[-2.962786],[-7.270598],[-3.695943],[-1.070412],[8.325384],[-7.613764],[7.830396],[0.892063],[-1.681330],[0.959283],[8.452819],[7.395633],[-8.949813],[8.101507],[2.906109],[7.562984],[-5.561107],[-2.012312],[-9.290945],[-8.554199],[7.202814],[9.660753],[7.214764],[3.742312],[-3.338084],[-9.859001],[4.747425],[3.283925],[-3.157725],[-0.725692],[8.982450],[8.783261],[4.984059],[-5.637227],[-8.818858],[-5.094825],[-6.937054],[-1.887743],[-6.491320],[4.431003],[0.052956],[3.994468],[3.696351],[-9.295480],[5.296568],[4.578232],[-6.186871],[-7.240567],[4.094445],[8.362019],[2.943039],[3.517584],[-1.982033],[4.053264],[3.534126],[5.674174],[3.283671],[-6.811512],[6.025648],[-8.928015],[3.278272],[0.581863],[5.826394],[3.814297],[4.230657],[-0.715704],[-6.906874],[-1.080384],[-8.808343],[-8.159986],[-2.590093],[-3.667628],[-2.901032],[-1.414941],[6.359235],[-7.547710],[-1.360152],[-7.951705],[8.820425],[-6.178094],[8.698586],[-2.001521],[-2.565123],[-9.383526],[-7.540220],[7.767634],[-0.174332],[-6.211473],[-8.397764],[-4.419448],[-5.514925],[-6.564567],[5.536728],[-7.640290],[-2.875042],[7.371443],[8.380595],[-0.414567],[-1.608518],[-5.993314],[4.117234],[1.895396],[6.700760],[-7.102518],[-6.312030],[1.725958],[6.448974],[7.340413],[9.801066],[4.639910],[6.926401],[6.044072],[-6.657944],[-6.935840],[-1.568863],[-2.104943],[-4.021946],[3.743128],[5.931473],[9.421573],[-5.053746],[-7.970977],[-3.399440],[-6.973355],[6.356799],[-4.439701],[-2.821598],[-4.393792],[1.112896],[2.449271],[1.796321],[2.379768],[9.189008],[-4.345171],[-6.473181],[-7.682103],[-4.431935],[-6.522757],[4.183901],[-1.942108],[-6.157635],[4.715163],[-6.885124],[-4.573477],[-2.655956],[6.502878],[0.306842],[-3.977246],[3.641301],[5.151389],[-6.809655],[4.554418],[8.126911],[-5.451484],[-1.966564],[0.151213],[6.757200],[-4.879480],[-7.348615],[0.619817],[-5.451931],[5.205325],[0.663438],[9.320134],[-2.136518],[-9.110741],[-3.301279],[6.265375],[6.578341],[-5.576749],[3.310737],[-4.694768],[-3.393863],[-9.796655],[5.744608],[-6.375950],[3.336303],[0.490011],[2.163121],[1.202693],[-7.625687],[-4.500700],[4.178448],[-6.628861],[2.739777],[1.255164],[-2.382692],[3.466729],[-2.942895],[-7.525631],[3.674851],[5.402054],[-6.914090],[4.297536],[7.671709],[6.046133],[-2.059888],[3.966041],[8.151085],[-6.850669],[-3.343866],[1.124575],[-3.477640],[-2.539503],[7.095438],[-2.703985],[1.537608],[0.051493],[9.145538],[7.073327],[5.052023],[-2.311787],[-2.207638],[-8.670445],[6.094568],[2.489262],[-0.347507],[-9.846340],[6.982272],[4.564630],[4.672666],[-1.138929],[6.903116],[-2.682429],[-6.623680],[-0.136806],[-0.580215],[-4.616156],[-4.254874],[5.101452],[9.514112],[0.169239],[4.718611],[-8.449817],[-2.842479],[1.631766],[-5.637682],[-4.250414],[1.011001],[-3.665075],[-0.765882],[-5.888256],[3.369962],[-2.054910],[3.464811],[3.428655],[-1.187759],[-7.427950],[-3.195771],[-0.920396],[-6.724694],[1.221155],[1.465798],[-1.198791],[-2.044118],[9.523824],[5.648717],[-8.471529],[-9.016237],[-9.825313],[-6.123440],[-2.822123],[9.018799],[-1.081201],[-7.257446],[-5.946318],[0.667833],[2.497346],[-3.727778],[0.539507],[-9.955299],[2.318081],[-4.658506],[-2.677772],[-1.079254],[-1.344977],[-5.613970],[4.763348],[2.803045],[1.773312],[8.722270],[-3.180378],[6.945832],[6.177898],[-5.953646],[2.473610],[3.261454],[-9.114434],[-9.487864],[-2.678027],[-7.331101],[9.435246],[-3.477333],[-4.011041],[-9.053137],[5.295352],[7.493278],[-9.200623],[5.903907],[-0.304407],[9.346074],[-3.626540],[7.335331],[-3.749235],[3.226827],[-5.649867],[-0.142748],[-5.471263],[2.197042],[-1.337876],[-3.656450],[8.369979],[-9.671192],[0.235855],[8.355275],[2.694546],[4.844427],[-8.726140],[-2.744653],[-9.128744],[2.154003],[1.670649],[-3.706613],[-6.460325],[-5.416952],[1.077570],[-8.110800],[6.189459],[4.160216],[-5.798086],[-5.040119],[8.711863],[9.323954],[-9.577162],[-5.437653],[6.856636],[-0.436581],[0.762314],[-2.730265],[-9.987660],[1.931613],[-0.120324],[-3.950693],[-6.696300],[-5.229633],[-2.903059],[-3.917953],[-1.505531],[9.628362],[6.936190],[1.163631],[-2.662554],[-8.659069],[-1.923996],[6.678491],[2.340866],[-5.982791],[0.090504],[2.334221],[-2.191749],[-7.087178],[2.267047],[-6.931431],[7.520828],[-7.119701],[-6.850736],[6.185323],[2.095532],[-5.073503],[5.446654],[-5.244238],[-2.402659],[-0.356388],[5.622267],[9.847974],[3.758584],[9.821079],[-6.692996],[-5.641840],[3.452789],[7.680253],[-6.900623],[-0.348181],[-0.206278],[9.613709],[2.639789],[-3.220968],[-8.014670],[2.370165],[0.330140],[-2.232833],[-6.155033],[7.767527],[6.449190],[-8.509924],[-4.256922],[-6.354900],[6.970787],[4.965821],[-8.655204],[0.213535],[-4.063257],[9.260317],[-2.596449],[6.649377],[-8.279926],[-6.763015],[7.431709],[7.928051],[9.277030],[5.539359],[2.179794],[-2.768575],[4.316940],[-9.996323],[-4.137267],[4.621397],[-5.533104],[3.965918],[9.822131],[-6.454032],[-6.511757],[-9.111146],[-1.667737],[0.850590],[-7.980350],[4.767530],[-9.791789],[-7.508064],[2.921220],[4.123598],[-7.409359],[9.796132],[-7.688296],[4.219216],[0.288452],[8.344077],[-0.167601],[2.815082],[2.349300],[-6.826713],[1.069159],[-3.550937],[1.091219],[1.003762],[5.756513],[-9.789975],[3.284410],[-1.357092],[-7.688084],[0.859891],[5.399212],[-9.271412],[4.933019],[-8.629451],[-5.076193],[-3.191307],[5.074682],[5.530420],[5.601377],[9.308605],[-9.881118],[-2.192046],[7.135812],[1.616410],[-2.881649],[6.838102],[7.045778],[8.300027],[2.879054],[9.387091],[-8.675712],[-4.454391],[-1.728327],[-6.525933],[-4.352418],[1.392472],[5.109352],[6.875880],[-4.463308],[-8.378394],[8.467967],[1.201621],[1.677476],[7.385949],[-2.296116],[-9.336054],[-3.411923],[-2.555869],[6.005406],[-1.722579],[9.062019],[-9.660638],[0.136099],[4.533536],[-2.630697],[-3.814930],[-2.592793],[-5.006566],[-2.746918],[-1.054313],[-3.865864],[3.916335],[1.397102],[-8.551267],[-4.342430],[9.318692],[-5.802550],[-3.594266],[2.020304],[5.981742],[-1.668655],[3.469810],[8.672139],[-1.176849],[-9.032343],[4.195485],[-4.177086],[3.364613],[-6.414459],[-4.536577],[1.227293],[-4.555038],[5.559743],[3.934062],[6.784690],[-1.489935],[4.443832],[-5.358752],[1.486950],[-8.802813],[9.697756],[-1.746421],[0.141126],[-8.422590],[2.943780],[-0.423503],[-9.440144],[-9.324374],[-3.207150],[-3.865003],[1.026291],[7.845013],[-4.237271],[2.627846],[-0.137074],[5.012688],[3.641637],[5.880863],[-9.459749],[1.276691],[-7.541249],[-5.148858],[-2.197115],[-8.801994],[-1.425931],[-0.468840],[3.225064],[-3.269478],[7.371732],[9.102326],[-8.138072],[-5.424668],[4.702633],[-6.650311],[6.773022],[7.990283],[4.290121],[-3.011651],[2.687137],[-1.351122],[1.178678],[2.546269],[-4.770150],[-0.858337],[6.044784],[-2.630882],[2.649198],[-7.628785],[-6.708855],[-0.614244],[-5.452204],[-1.519517],[1.188806],[7.439129],[6.142173],[-3.417657],[9.074050],[-3.078363],[-8.817413],[2.824868],[-6.752340],[6.972117],[-1.896707],[-2.541978],[-0.316657],[-1.713653],[0.695806],[-1.941149],[7.233057],[9.717063],[-5.675415],[5.500495],[4.153361],[0.827380],[7.457702],[0.708630],[-1.612579],[2.629442],[-8.131437],[-6.616210],[-5.407771],[4.476516],[5.223239],[-9.614890],[-2.952852],[2.953427],[0.964325],[-0.350716],[-3.705712],[-9.142759],[-2.878271],[-3.124850],[-2.432432],[-7.003148],[2.158034],[5.848273],[5.137727],[1.698265],[5.742432],[-7.530067],[5.955150],[-1.681241],[-4.648955],[6.448005],[-3.828661],[-3.558069],[-6.484666],[-0.842631],[-1.414358],[4.722104],[3.066193],[5.113640],[-9.958035],[4.100592],[-3.745904],[0.449214],[1.383053],[1.005989],[-0.204388],[9.660293],[-9.220063],[4.721857],[-8.094478],[-7.657360],[-4.188661],[-5.735365],[-3.753396],[0.446238],[8.976341],[-2.108290],[-0.796874],[6.936991],[0.477989],[5.632531],[-0.291385],[8.957146],[5.489725],[8.630583],[-6.903740],[-9.065466],[8.925936],[-9.159637],[6.097424],[-7.795775],[-9.569680],[-5.439049],[-0.209066],[-2.006322],[-2.688900],[1.083841],[-2.557011],[-1.759125],[-0.725152],[7.122112],[9.021320],[8.060205],[6.200157],[-7.801214],[7.425715],[6.565221],[-7.147810],[-2.842022],[0.399525],[-4.105728],[1.696812],[-4.933866],[-3.761367],[0.762673],[-1.118941],[4.605411],[-8.526472],[0.680097],[-7.528950],[-1.774058],[-7.042662],[4.106162],[-5.028991],[-0.657263],[8.729485],[1.761670],[-0.834619],[-5.535344],[-4.085525],[4.315214],[9.721609],[-6.721756],[-7.565349],[7.323055],[-7.925370],[-0.505400],[7.189950],[4.426967],[-7.528037],[4.971179],[-5.437192],[-8.540963],[5.473217],[-6.554339],[-9.016664],[-5.961647],[-2.469294],[7.759473],[-1.627330],[-1.789785],[5.407886],[-4.243505],[-2.902003],[-5.617399],[9.179539],[-9.801829],[-9.678003],[-7.479103],[-6.466494],[-9.056138],[7.939968],[-2.977116],[2.972432],[-2.961555],[-4.764304],[-0.524953],[8.305553],[-4.919503],[-8.781447],[-7.053746],[-0.771090],[-3.912362],[7.416213],[-2.471430],[3.854640],[-2.245514],[-4.257694],[-6.907951],[7.252421],[8.746556],[1.098125],[5.005698],[-4.613913],[8.237358],[-4.563742],[-4.394057],[-4.049246],[4.292623],[-9.192997],[9.309979],[-8.539064],[-7.504839],[-7.932163],[8.666965],[9.953764],[4.676146],[-2.809126],[7.126550],[-4.185151],[-9.862703],[6.976566],[-3.243342],[1.515070],[9.666427],[4.635755],[9.193272],[1.198451],[-3.466614],[-9.961025],[5.169560],[7.310523],[3.800900],[9.329493],[-9.239727],[2.526466],[-2.311368],[-3.536042],[-5.321093],[-5.789362],[9.815111],[8.767717],[-4.822509],[-9.454526],[-9.653240],[-2.177693],[-6.795200],[6.354830],[0.392511],[-5.033508],[-5.869061],[-1.828291],[-5.074727],[5.355879],[-1.950028],[9.004070],[-8.935137],[-7.001912],[0.130498],[1.151454],[-7.665498],[8.478746],[8.701196],[-5.775745],[7.822101],[6.189030],[-0.848619],[-8.018697],[-6.934286],[0.102579],[6.893601],[-3.459648],[4.433423],[-1.662296],[7.719628],[4.244184],[9.073917],[-8.638586],[1.990578],[-8.181740],[3.817372],[-0.652128],[0.059499],[8.975665],[9.499118],[1.161536],[8.901825],[-7.442773],[-9.355624],[1.506705],[-4.268800],[4.686625],[5.691083],[8.907042],[-6.323500],[5.980768],[4.062941],[5.883313],[-6.608674],[-3.757086],[-4.198453],[-8.602084],[5.392757],[-1.662182],[-5.692719],[8.496269],[-6.453337],[-7.491095],[-5.407527],[-9.656746],[8.026679],[-8.330826],[-2.185824],[-3.382387],[-1.322141],[-7.120408],[-5.962520],[-7.198742],[8.799012],[3.799785],[-4.375746],[-5.891305],[-2.911589],[-8.186030],[-6.481731],[8.807020],[-8.780274],[-9.646784],[-2.341229],[3.312285],[2.039867],[3.394097],[8.759432],[4.192658],[-7.378196],[-3.796642],[7.261613],[-4.477850],[1.261618],[-9.836833],[5.633181],[-4.552530],[-7.218727],[-1.980804],[6.567965],[1.070093],[5.959801],[-0.797498],[6.105630],[2.358291],[-0.234334],[-7.127419],[5.577516],[1.995868],[-3.670964],[-0.797195],[-0.944079],[2.721492],[-7.710723],[1.088977],[-6.111544],[-7.923231],[8.927356],[-1.730510],[1.347129],[-8.456388],[3.764252],[8.090398],[0.106364],[2.993797],[5.735902],[-0.356236],[-9.378058],[-4.040080],[4.753788],[-9.387415],[-2.145460],[-8.346262],[7.218927],[-4.189850],[-6.596946],[7.377148],[-2.507121],[-4.587284],[2.816479],[5.046289],[-3.106729],[-0.089480],[4.586313],[1.498337],[-0.138697],[-4.158945],[-6.334871],[-0.906623],[8.294859],[-4.626119],[-9.680884],[3.313871],[6.429155],[-1.521389],[-1.460385],[6.364752],[3.971702],[2.176942],[-4.051772],[-6.921412],[5.058954],[2.448202],[6.582238],[8.196163],[2.723041],[-3.457219],[9.954205],[-9.541390],[-0.563388],[-4.060862],[-1.833058],[8.502320],[8.861775],[-9.452282],[8.888751],[6.981484],[-5.733051],[-7.853071],[-8.825020],[-1.375706],[-5.780168],[6.236746],[2.787881],[-8.179082],[3.270470],[-1.872730],[-7.031303],[4.833065],[-6.218248],[3.381684],[-0.573105],[-0.298507],[6.180840],[-4.206424],[9.826988],[8.053005],[-0.660521],[3.182469],[-0.944203],[7.032790],[-4.470444],[0.132542],[1.582687],[6.201350],[0.389727],[6.508117],[4.298146],[-6.610887],[-4.464044],[-2.038992],[7.629168],[7.335043],[4.488308],[1.145909],[-0.425660],[0.471876],[-1.408180],[8.130844],[1.409335],[-5.792241],[4.540452],[1.773171],[6.594510],[-1.521378],[-8.776898],[2.395564],[-6.999555],[4.137850],[-0.498782],[-6.888306],[3.272147],[5.262743],[-3.539850],[8.945439],[6.443624],[-5.095322],[1.679991],[0.303649],[1.360936],[2.442185],[3.626304],[-1.820229],[6.330888],[9.681297],[-6.790853],[7.205774],[8.114823],[-5.201793],[1.448269],[3.205189],[0.092961],[-6.272114],[4.261633],[0.418123],[6.488125],[7.739991],[-0.877707],[-9.225905],[0.847037],[6.393421],[8.969985],[-4.850235],[2.830932],[4.227506],[-8.264284],[-3.818771],[-0.518944],[2.457352],[-4.354186],[2.757844],[8.254026],[-0.289702],[-0.268962],[7.550002],[-1.654714],[4.732784],[6.453672],[-0.173874],[-6.900569],[-2.574846],[5.288868],[-8.158431],[6.438325],[1.326745],[8.140557],[6.878232],[6.578628],[-4.212376],[-0.970756],[-7.656492],[-6.853465],[3.111603],[7.925878],[-4.421365],[3.521149],[-9.629476],[1.128043],[-4.527604],[-5.169689],[4.257128],[-8.599436],[-0.334379],[-5.067065],[2.526627],[0.372260],[-8.945667],[-1.546221],[3.347014],[3.225338],[8.483124],[-1.826415],[6.704881],[5.992076],[-2.020873],[-9.022973],[3.168086],[-0.710480],[-5.675772],[-3.277375],[-2.667341],[1.003388],[7.173593],[-2.399679],[2.891129],[-5.987857],[-7.926284],[9.837773],[5.713648],[2.720368],[-6.217837],[5.752592],[8.894844],[-5.942484],[-2.905067],[4.460952],[-7.660896],[9.662380],[-0.297166],[-5.938120],[-1.105903],[9.955875],[-9.358836],[-9.624067],[7.964538],[4.887703],[6.736727],[5.486557],[6.717258],[9.327825],[-8.944790],[-0.828248],[2.038906],[-7.650912],[6.022083],[-8.894400],[6.035304],[-4.759527],[-7.880315],[5.894555],[-5.596485],[4.805968],[2.277054],[-1.303140],[-9.743012],[6.668042],[8.832940],[0.739380],[9.190344],[-8.203604],[3.412052],[-8.155434],[-5.346024],[-8.259153],[-5.447604],[-6.978351],[-4.499177],[-3.297137],[-7.620841],[-5.172169],[-3.365222],[8.830835],[5.164445],[4.221051],[-8.486925],[8.808993],[-0.819759],[6.161719],[-6.126887],[6.202577],[0.286921],[-6.862897],[1.082798],[-6.764148],[7.955832],[1.017473],[-5.727565],[0.369121],[4.505749],[-5.673465],[4.244951],[2.851008],[-4.376156],[-3.663030],[-1.211438],[0.846751],[-3.153303],[-3.944490],[-7.570264],[3.164003],[9.714343],[-3.725162],[-4.901224],[-9.716978],[-9.244049],[8.668958],[-2.952766],[7.897345],[5.447410],[-4.112616],[4.383886],[-6.529793],[4.859231],[0.517641],[5.489505],[4.719479],[7.101816],[-4.532910],[-1.626753],[-4.064718],[7.599115],[-8.794417],[-0.769748],[-5.750003],[7.922993],[-0.686872],[-8.425498],[-3.889374],[8.943150],[-2.538004],[8.302799],[0.275660],[8.165010],[-4.028595],[-5.914926],[-3.706310],[-6.541853],[-2.471356],[-0.018337],[3.052738],[9.079976],[-8.907622],[-3.813338],[5.538752],[-1.996387],[-4.913876],[4.048164],[8.695478],[5.553779],[-3.468984],[-9.913511],[1.285637],[7.805816],[1.144546],[6.577483],[-7.148779],[-3.994538],[-0.789559],[3.147441],[-6.332474],[2.363867],[1.548285],[1.559312],[8.588650],[-9.997215],[-0.818431],[-6.422066],[-7.181183],[2.171124],[5.793182],[-1.717062],[1.824001],[-1.444273],[7.019360],[0.979284],[-4.587639],[-7.438609],[-6.184901],[-7.919413],[-3.025991],[3.280165],[0.906823],[-3.426799],[-7.594202],[2.353627],[-7.545918],[7.671592],[9.366577],[-5.046040],[7.621706],[-7.828159],[-5.550852],[-7.318330],[-7.851671],[2.889223],[7.294380],[-1.850243],[-8.997245],[-2.098555],[-7.663594],[6.128601],[8.244154],[9.190471],[-6.043908],[0.404681],[4.156972],[6.851347],[-9.604587],[-7.524946],[-8.643185],[6.974188],[0.581945],[-8.539280],[3.743147],[-0.678929],[9.205723],[-5.261337],[-0.994105],[4.125616],[8.611737],[-5.031120],[-5.431737],[9.801212],[7.561130],[-1.848659],[0.221219],[-6.402913],[0.396671],[-9.812128],[7.817486],[-6.466837],[-8.795557],[-0.203236],[-4.013077],[-9.964531],[-8.061988],[6.332112],[-1.334922],[-9.204946],[-6.585832],[-7.003390],[-1.730115]], dtype = "float32")#candidate|1061|(2145, 1)|const|float32
call_1060 = func_100_call(relay.reshape(const_1061.astype('float32'), [13, 11, 15]))
call_1062 = func_100_call(relay.reshape(const_1061.astype('float32'), [13, 11, 15]))
output = relay.Tuple([uop_1039,call_1044,var_1045,call_1057,call_1060,const_1061,])
output2 = relay.Tuple([uop_1039,call_1046,var_1045,call_1058,call_1062,const_1061,])
func_1082 = relay.Function([var_1038,var_1045,], output)
mod['func_1082'] = func_1082
mod = relay.transform.InferType()(mod)
mutated_mod['func_1082'] = func_1082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1082_call = mutated_mod.get_global_var('func_1082')
var_1084 = relay.var("var_1084", dtype = "float64", shape = (13, 10, 2))#candidate|1084|(13, 10, 2)|var|float64
var_1085 = relay.var("var_1085", dtype = "int64", shape = (24, 6))#candidate|1085|(24, 6)|var|int64
call_1083 = func_1082_call(var_1084,var_1085,)
output = call_1083
func_1086 = relay.Function([var_1084,var_1085,], output)
mutated_mod['func_1086'] = func_1086
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1215 = relay.var("var_1215", dtype = "float32", shape = (13, 14, 15))#candidate|1215|(13, 14, 15)|var|float32
var_1216 = relay.var("var_1216", dtype = "float32", shape = (13, 14, 15))#candidate|1216|(13, 14, 15)|var|float32
bop_1217 = relay.floor_mod(var_1215.astype('float32'), relay.reshape(var_1216.astype('float32'), relay.shape_of(var_1215))) # shape=(13, 14, 15)
bop_1221 = relay.less(var_1215.astype('bool'), relay.reshape(var_1216.astype('bool'), relay.shape_of(var_1215))) # shape=(13, 14, 15)
func_820_call = mod.get_global_var('func_820')
func_823_call = mutated_mod.get_global_var('func_823')
const_1225 = relay.const([-6,6,2,-5,6,-4,-1,2,7,-10,-7,-4,6,5,6,-3,-7,-6,-10,-1,-9,3,-1,-3,-1,1,-5,4,-10,-1,7,1,-4,-2,-2,-3,7,-4,-10,-7,1,-6,-2,-6,-9,1,5,-9,-10,5,3,-4,1,9,4,2,-3,-2,1,7,6,-6,-1,10,-6,-7,1,9,9,3,3,9,-6,-1,8,4,8,-5,-7,-4,7,3,-3,2,-2,5,2,3,4,2,-4,8,-8,-4,-5,9,-10,-2,7,-4,8,-6,5,6,-5,-3,-5,-4,-3,8,-7,-10,9,9,-3,-7,-4,1,4,1,4,-10,-5,1,-3,6,6,-6,-9,1,1,4,2,-7,1,-6,3,3,2,-6,3,-4,9,3], dtype = "int64")#candidate|1225|(144,)|const|int64
call_1224 = func_820_call(relay.reshape(const_1225.astype('int64'), [3, 12, 4]), relay.reshape(const_1225.astype('int64'), [3, 12, 4]), )
call_1226 = func_820_call(relay.reshape(const_1225.astype('int64'), [3, 12, 4]), relay.reshape(const_1225.astype('int64'), [3, 12, 4]), )
func_100_call = mod.get_global_var('func_100')
func_102_call = mutated_mod.get_global_var('func_102')
const_1230 = relay.const([7.389393,7.488945,-0.540379,4.762864,-6.683666,8.680219,-5.818927,-1.829923,5.112644,-0.515278,7.915871,8.626333,-3.586065,8.332131,9.837445,-6.412677,-4.913008,0.681105,-7.684366,-0.149858,-7.586892,-7.754893,-5.906559,-3.926925,-1.535175,4.151927,0.481609,-1.493712,0.508995,-3.097491,-6.577783,-6.929649,-3.592644,5.513463,-1.676364,2.490986,8.378405,5.298753,-5.956049,8.708612,-1.355343,-9.265091,0.181533,-2.386665,2.716891,6.303019,7.872757,-6.509071,9.595976,-5.310653,4.552064,7.090602,8.224470,2.888435,-8.802660,-1.346667,1.257334,-6.755285,5.642092,-6.360490,8.622010,-9.097113,6.447860,1.769814,1.759639,-6.122869,8.141513,9.159400,-9.238370,7.364958,-2.120898,-5.836864,-5.339523,-0.724244,9.441838,-6.982679,8.236260,1.774267,7.359384,1.690554,-3.957068,-5.443869,2.554581,-5.008047,-4.970381,-8.387298,9.926315,-4.975947,-4.589788,2.588511,0.817028,-7.508242,-7.249028,8.791247,-7.985385,-0.060775,-4.166170,2.914116,8.552462,-5.403880,4.726629,-4.538241,3.540644,-0.591484,6.110453,7.045181,-9.602076,9.825144,7.655078,-4.659622,-1.105391,-9.272309,4.340456,-3.153029,0.178690,-3.610664,-8.907074,6.497008,-5.467294,8.413756,4.416096,-7.720224,-5.498538,-7.015027,5.250841,-7.529589,-7.363595,-4.604170,-3.740545,-7.729941,1.006300,-4.034314,8.154519,2.098627,9.278237,3.670128,8.281310,-9.772388,-1.742840,6.184069,-7.741367,5.843170,-3.410861,-7.370840,-3.775906,-3.322915,-5.149774,8.771615,-7.470110,4.301309,5.046620,-5.468343,-4.477061,0.775375,-5.738749,-1.915393,-6.443476,3.085416,-0.582141,5.578355,-1.143025,-1.177072,-5.676451,-9.668252,1.138848,-4.919558,-1.666225,7.067803,-1.451107,0.706202,-1.362055,9.994776,2.048584,7.496366,-3.844961,9.177572,1.979791,3.233025,0.155550,-9.288886,3.275589,-5.563261,-8.279435,3.874782,-5.203205,2.833665,-1.996157,9.930397,6.453943,9.806814,5.897189,-6.633859,7.861023,-9.460215,3.492884,1.219422,7.383931,-9.329313,8.171705,-5.780849,6.176143,-9.991820,-6.278993,8.242270,8.106033,-8.709338,6.854240,4.813795,-8.960686,-2.068746,-3.690381,8.983838,6.216213,4.579230,8.820463,-3.558634,8.594219,-5.390327,-7.871922,9.806823,8.652163,-3.260462,-6.792165,1.364933,5.711295,-2.503353,9.578446,1.609678,-7.665473,0.499637,3.843289,-1.526126,3.012533,-1.404341,-8.545085,7.553818,9.835636,0.032985,4.313082,3.252357,-0.665535,-7.576992,0.462074,-9.099484,8.547506,0.930845,0.851840,2.051426,-8.213953,-4.872697,-8.392946,-7.259687,3.172362,0.423435,-9.947749,8.162641,7.054174,-6.743883,4.374823,-4.250384,5.698676,1.302919,6.394959,1.531809,6.218930,-6.830678,8.643838,6.438033,-9.742011,4.974659,4.639659,3.584022,-3.752222,4.952836,-2.257426,-4.931407,4.829415,-6.566211,8.274019,6.685656,4.980703,-7.383986,-9.938482,1.788318,-9.522397,-5.670448,4.257099,-7.348327,7.885032,-2.975501,6.448470,5.282785,-9.678667,6.617019,3.887413,-8.067509,4.345483,8.770278,4.688641,-4.408482,1.848235,2.718240,1.041260,7.975719,-4.175625,-1.191915,-2.690512,-0.582326,-6.351293,-0.948514,-5.840775,-4.410166,7.621108,-8.638871,4.546755,3.369253,9.784288,4.431178,-4.439860,2.409478,-3.327787,3.632046,-2.888721,-4.415728,3.718942,-4.221364,3.340619,5.940708,9.989152,2.084978,0.327256,5.682057,-3.097470,5.805606,0.228446,8.411565,-9.561579,0.534709,-6.210360,3.188582,-9.954205,-8.588188,0.041907,5.908046,9.468227,1.305373,0.927560,5.487202,0.233137,-1.775376,8.522944,6.181472,-2.335581,-5.859781,-9.938523,5.468557,-2.665101,-6.581747,0.346678,-8.128400,7.365893,2.308251,-6.240257,-2.462229,0.112321,7.819535,-8.277931,5.864066,7.901985,5.180599,9.360645,-1.258822,-9.703595,6.956325,-8.181851,-0.844886,6.298558,-3.702517,-2.266999,-6.992994,-7.804110,0.976014,-7.738461,5.789423,-6.130834,8.535607,4.750737,5.053667,-4.457077,-5.014507,-4.737679,-2.058379,-1.971615,-2.425333,7.113055,9.918659,-5.848025,-1.727123,5.133836,-2.730206,8.329861,9.129810,1.424228,-1.227011,-7.490816,8.728977,-4.629198,-7.351897,-7.116733,4.172971,4.932365,7.027929,8.588741,-7.483319,-6.716781,0.320783,-0.135290,-5.575843,5.743568,-1.497318,2.687204,9.748237,1.199680,8.946925,-7.451130,-9.035873,1.005287,3.767365,0.623634,3.073468,-8.421602,9.448949,4.992491,-9.868252,0.595103,-0.156841,-7.348556,-5.301581,-9.656905,-1.368463,-5.092013,-9.423207,-5.709381,6.204395,-2.578641,0.560604,3.057166,8.344950,1.962000,1.361628,-2.195905,8.434164,1.287550,0.314472,8.838669,-1.212905,-5.264346,6.651108,-6.495597,-5.510219,4.953705,8.846348,7.786286,-6.385708,1.162761,6.581831,0.414281,-9.879230,-6.385530,-3.007494,1.880023,9.463936,-3.279758,4.697118,2.359549,7.982437,1.017381,8.737085,9.384311,8.491373,-5.821598,6.280952,-2.896762,-6.164182,0.138764,-2.116955,-2.286967,-1.600320,2.296616,6.148441,0.606244,2.079206,-0.091899,3.898904,-4.829280,-4.307626,9.107000,4.693288,5.047985,-1.001374,-9.894145,-8.126245,0.517120,4.704767,-8.676165,1.504527,0.353901,-3.224159,-0.149413,-8.752914,3.277616,4.045915,-0.099690,-0.396248,-8.565577,-9.921643,9.724338,7.069693,5.017875,4.709954,-1.592335,0.001507,-3.235305,8.843355,-4.845502,2.371862,-4.442212,-3.307424,9.146228,-6.872301,-4.393902,0.078384,3.169707,-6.136263,9.265480,-4.111476,-8.379986,-8.248884,-5.153125,6.911535,3.849813,-8.354897,8.555607,-1.396211,8.817833,4.800416,9.542159,2.648593,9.040062,4.190504,-2.570096,-9.264325,4.605632,2.566235,-2.898829,-0.384934,7.044217,4.976626,-8.055949,-4.672322,4.546901,5.793010,-7.417197,7.358732,-0.407813,-5.274024,4.475195,2.343345,6.020594,-7.587634,-1.204256,2.803323,1.205687,-9.722836,-6.428233,9.681258,-8.252663,-8.327449,8.880749,8.632007,-9.933688,-7.345368,-4.501894,2.339486,-2.564795,-6.624931,-3.365605,2.551251,-6.414935,4.335689,-6.851249,-5.624240,9.812614,2.400967,0.367002,-3.665395,-4.830842,3.858229,8.977347,2.023369,-2.900671,-8.427362,3.404060,-9.364017,1.790594,3.898177,-1.164309,3.274727,-4.279702,-6.198918,0.829040,-6.247126,-9.422501,-2.704619,-3.287680,6.630680,2.932995,1.848462,2.142316,1.514041,-2.830676,-8.159280,-8.718128,-1.747494,-5.754893,-1.764108,-8.750270,-2.888730,-0.521066,-6.550683,-1.855424,4.156301,0.724357,-0.851175,-4.804410,1.715248,-9.676031,7.021483,1.771657,-5.805800,4.430291,4.727146,4.957931,-2.143013,1.511119,-6.138560,-4.659959,7.998347,-8.482792,1.938344,6.138304,3.570733,-8.416542,8.357341,0.562151,-7.682246,-0.229786,-6.105061,7.818514,-1.478260,9.758103,-2.914381,-8.096018,1.532383,2.766416,-5.752383,7.733665,4.089644,-2.194532,-0.623991,-2.694471,-4.207659,-3.584421,-7.292129,7.091490,-2.451570,7.191646,3.205497,5.787364,-5.421189,1.513623,8.662014,2.015346,-3.052863,7.587499,3.254933,2.584944,3.367780,-2.475460,7.133688,-8.679604,-3.106983,-0.654051,1.553756,-2.814193,3.297726,-4.631036,-9.525710,5.531026,-9.227415,3.213320,-7.478660,8.786312,8.869972,0.317134,-8.848459,-7.130686,3.089949,-0.400280,-9.136367,-7.613627,-5.862533,2.234640,-9.180367,6.879588,5.860189,-4.132904,-4.956189,1.076989,8.455442,-6.178713,-9.555965,-1.817356,-2.718248,8.884550,5.908418,-3.377324,-2.656128,7.888612,-7.616685,9.471240,2.606571,9.498714,-9.282937,2.064384,1.535583,0.624724,9.275551,1.394202,-8.645649,-1.946472,-4.156495,6.282858,-1.832549,-8.103564,2.073867,7.624489,5.303822,-7.390851,4.448154,-6.523543,-1.701186,0.281152,6.308783,9.832062,5.230960,-8.992906,-1.464100,-2.664902,-2.861793,5.556261,0.142432,-2.617175,6.712630,-8.127252,0.701463,6.281446,-5.329492,7.239813,3.534357,1.150778,-8.249865,-2.612583,4.265909,-9.809307,3.303995,6.622633,-7.943043,-4.004015,0.117541,-6.448566,8.266688,-7.183957,-1.172263,2.383897,-2.234051,-6.726792,-4.973719,1.713759,-9.171441,4.173724,3.320706,-5.861600,0.089403,6.786672,7.030561,3.410872,8.222196,-7.584654,7.166869,3.976691,-9.554228,-0.118135,-1.691687,-9.852364,4.762590,5.862640,-2.777373,-9.418873,-1.403222,-7.122974,-5.979683,-8.901981,6.121640,2.725420,-9.884895,-8.399414,9.599167,-5.048419,-4.826703,-7.127437,-9.660230,-0.439859,8.982057,-9.224086,-5.304837,5.735688,-6.679409,-5.841979,-3.028877,-6.344134,-7.602006,3.993467,-0.948248,-5.364670,-6.539776,-3.949742,-3.846044,1.394468,-3.110827,8.362802,6.926740,7.379363,-3.262603,6.335644,0.534159,9.284415,8.522726,0.510670,-2.337216,-5.392204,-6.914478,-5.147331,-9.624194,-3.043310,8.199529,8.401105,-3.775962,5.304294,8.046649,3.624319,-3.326831,-6.164358,8.167824,0.776395,5.549661,-6.322043,5.814727,-3.049702,5.388502,-6.756497,-8.693154,0.560742,-8.775978,8.145845,0.218142,-8.491407,-0.679653,8.554013,3.940372,4.770042,8.567600,-3.476872,-9.124191,-5.737633,-9.094024,3.362119,-0.799660,3.540264,7.157976,-8.004870,-1.274596,-6.952370,-0.291667,-4.109542,0.144522,-6.870960,-4.247843,8.801509,-2.811259,-9.755317,-1.260005,2.645439,-2.502661,9.908855,-9.060814,-6.829344,-9.321955,3.435203,7.468444,-3.198437,0.077727,5.412357,-1.330184,7.965199,-3.680340,7.632487,3.247177,8.570198,2.196831,5.462293,2.978863,-8.880727,-8.040914,-6.865202,-3.749930,-6.725588,7.250639,9.506296,-3.868829,-0.999227,-7.873001,8.714348,6.313028,0.046406,8.764656,-2.551814,-7.006712,2.553747,-4.717020,-8.696359,-2.687187,-8.374979,-3.757092,1.409743,-5.897518,6.671971,0.348294,-1.421656,-8.681040,-1.441090,-2.893892,-8.891050,3.753423,-9.592234,1.632591,-2.849047,6.772643,2.109332,-4.393012,5.244515,1.422182,4.302705,5.367925,8.690113,6.923077,-3.615529,-1.140960,3.081422,-9.225977,9.034592,-1.234160,1.454931,-7.636281,-8.306542,-2.849121,-1.393045,-7.237511,-0.616574,6.423295,1.173288,9.978317,9.159136,-0.261371,-9.319091,-0.014009,-9.315168,4.908037,-2.667864,4.497142,3.828544,-9.232973,5.306023,6.316496,8.792230,8.195155,-2.268868,-8.820189,-7.871113,-6.983757,2.285129,-9.325318,2.952643,0.703320,6.132373,-3.211882,-2.858040,-7.469368,-3.152561,-7.838763,6.666484,-8.729436,-3.698528,8.273153,-2.722164,4.313134,-7.317998,2.239353,-4.688112,9.641295,6.815292,-0.286110,8.707333,8.019267,-3.462386,8.625744,6.208461,2.293150,-9.893326,-4.946651,-1.188929,-0.337549,9.745987,7.627361,-7.668062,-7.852575,-1.969729,-5.133637,8.138150,2.818058,6.534329,9.683008,6.105350,-5.301717,0.616921,-7.778819,3.543651,-6.338476,-0.627120,-7.988031,9.716409,6.253858,6.172845,5.618617,3.056566,-4.960759,7.338555,-6.928046,5.556603,-8.397052,6.719367,-4.752284,5.083395,-9.077457,-1.792435,-2.045127,8.440112,-6.746861,5.192878,5.688060,-2.388124,5.396927,-8.940060,-1.075755,3.046051,-5.932055,4.086975,1.684663,-3.211055,4.498974,-4.284700,-4.700770,0.881131,-0.337387,-6.879276,8.472260,5.105791,-9.638862,-8.183113,8.398733,3.101260,5.592748,6.059367,5.331766,-8.647458,-7.350552,-0.743954,-7.910205,0.135357,3.967059,-2.320229,6.365336,2.496170,7.857498,-5.894379,2.572519,3.611816,2.813159,3.693688,-6.644641,9.490913,-0.187738,9.383558,0.639985,8.966444,-9.308885,0.831050,-1.180175,0.188412,3.843025,-9.565586,2.077505,6.936054,-7.425061,9.048913,-8.706648,-0.275723,-9.838017,6.007077,-8.723502,-1.018049,-7.358269,-4.431154,8.392440,7.277577,-8.624073,0.183514,1.612307,-6.172894,-5.495745,-0.842510,-3.273929,0.632173,-4.013530,-0.831607,-8.711138,0.631196,-7.635831,1.936500,8.069244,-9.712986,-9.225671,7.607547,-2.124062,-0.638059,8.905980,8.795163,3.799033,-7.165453,4.073768,-0.901590,-5.842998,2.639118,-5.265364,-6.198873,8.571722,8.992704,-1.383673,1.086537,-3.903879,3.518396,-1.778924,2.274626,-4.941132,5.309611,-5.950790,3.685573,6.850191,5.423063,1.072457,3.534233,3.411344,-6.748463,4.513086,-3.572567,5.232704,1.291046,6.327099,8.732775,-1.339613,9.174867,4.658133,3.878861,9.275645,-1.681281,-4.483654,5.318065,-3.553597,-5.495304,3.722778,1.509022,-4.701370,-3.354871,5.058228,8.726752,-2.025605,-9.785287,0.900646,-4.133774,-2.882353,4.101123,-6.883259,-1.052735,5.320417,-9.103229,-5.477916,1.959252,-4.017655,-0.373350,-2.214642,-0.172284,-3.864160,-0.770948,-1.102497,8.416405,1.519467,-8.015340,8.606694,-3.965117,6.693066,-9.164314,-3.495172,-3.059605,4.018805,-9.568903,4.494745,0.108520,0.896803,1.343077,-3.005907,-9.810717,-2.808829,-8.431105,-1.677787,-2.195763,0.935745,7.842772,-2.585767,6.983487,-0.103691,6.525514,-2.512393,4.286739,-9.914611,6.964512,4.406124,-9.535486,-3.751078,-1.284637,5.540387,-6.265437,9.671460,-1.035390,-6.173947,1.445799,4.617563,-4.302035,7.179105,2.240941,-5.684938,1.541590,9.430671,3.292502,-2.708994,-1.759972,-4.334533,-7.631627,-0.244384,-3.890903,-2.502077,4.302532,-1.202274,1.337767,4.430749,-5.442162,-9.653006,-4.127285,5.752639,0.087653,0.481672,-6.356037,3.584568,7.738092,7.670255,-3.944356,1.167406,-0.894856,8.831266,-5.490055,-5.620969,-1.530611,-9.691627,-5.139246,7.196059,9.723941,6.230472,-2.899968,-5.960689,-9.875752,4.130121,-6.219949,-2.334211,7.834653,-2.305552,1.471498,-1.768278,8.054852,-0.941516,-0.619505,-0.478213,-2.443741,4.698731,-6.141279,-7.234240,-3.537500,6.859079,-7.874153,8.094375,9.297408,3.256068,-6.715512,-2.818640,-1.951106,-2.220552,-0.186733,-7.597330,-4.290786,-6.290673,-4.172218,-5.908631,-1.462313,0.713701,8.725000,-5.499251,-9.139719,2.720147,7.361302,4.396662,-8.028657,7.049563,-8.077256,2.156905,6.872878,6.499261,-5.457863,-3.112183,7.786563,-5.861798,-0.480971,8.198192,-1.179121,-3.160461,-0.991338,-1.914809,8.866839,-9.654413,0.752658,-5.459770,1.651855,-5.720835,1.017003,-5.580853,-9.974476,-9.052742,-0.202230,-3.866384,-7.790283,-4.636706,-8.836310,-1.564144,-8.923563,6.660527,-2.122660,7.732132,2.517891,-3.833053,-5.655539,0.617525,2.600124,-5.443418,7.016688,-1.701117,5.867450,-7.603894,9.258322,9.670784,9.517071,-7.962851,-4.624716,4.341703,7.611609,5.805691,5.531253,7.577888,-1.173483,-2.174909,-1.405710,7.318298,4.371507,4.789651,-1.621676,1.319918,7.361488,-3.518333,4.297430,9.697147,6.882762,-1.339836,5.334069,4.822713,0.476102,9.017467,-8.330781,3.341152,-9.733019,8.664690,0.386191,9.077226,-3.047908,1.864197,2.030851,-7.683744,9.362747,6.244443,-8.843766,-9.187435,-2.090283,5.991163,-2.986222,2.032332,4.071700,-8.120390,7.842003,0.798840,9.945491,2.103917,6.271172,6.634052,-2.707064,5.745108,2.427787,7.561238,3.241171,-8.271442,1.081084,5.600614,-9.782831,-0.284615,4.825811,4.232262,-9.135966,7.105317,2.185306,-5.097852,-6.736969,-8.393864,8.178476,3.679720,6.843790,-6.321391,3.209133,0.291582,2.229787,9.260844,-4.595729,4.919769,3.866042,-2.820983,9.578270,8.464416,6.912723,4.187465,0.956070,1.725479,7.144441,8.005375,6.735988,-1.543962,-8.053526,7.467634,5.581288,6.407274,-4.358286,2.770512,-5.342586,8.420674,-8.501074,-6.682756,0.463077,-7.759696,-9.091888,-1.975666,6.966774,-7.776166,-9.003824,-8.294468,2.273941,5.956209,6.138886,3.821920,5.600973,2.349958,-8.556098,6.446125,-7.696784,-5.591339,7.451770,-7.281852,3.323041,2.044649,3.591125,0.357806,1.670735,-2.172133,8.113731,3.862724,-1.887604,9.043320,-9.927038,-2.870999,-2.998198,9.078978,5.787942,-5.510705,0.236764,1.247687,5.057914,0.906757,0.067315,-5.631046,3.431616,5.300579,-1.042316,-3.503985,2.266970,4.512632,1.548330,5.902524,4.314526,-0.554236,1.812042,9.548847,-1.888365,-0.003862,-3.154786,4.624026,-8.865423,3.742735,6.490923,4.385962,-3.891744,-5.556349,-8.652627,4.850433,-9.587743,-5.083988,7.611958,-5.472178,-5.131012,7.037171,0.928498,-2.578722,4.093163,0.648863,-6.137382,1.315429,3.517287,-8.845475,6.819585,3.612363,7.393327,-6.937816,6.654717,2.111391,0.625276,-8.395742,1.427327,-6.100230,-2.102110,5.963263,-9.385784,-2.977598,-5.292716,5.311453,-4.306907,5.898584,-2.519815,-2.860178,6.600934,4.417659,-7.885474,2.194947,4.058389,-2.424607,2.521123,-2.836614,-1.646492,-3.139395,5.069432,-4.966695,-9.041987,-4.745012,1.170067,2.324854,-3.137591,0.067272,-9.311738,-3.686026,-7.761952,-5.570641,-7.445900,-6.684368,9.027393,7.231748,-3.690583,-2.104507,-1.252213,-9.013378,0.041592,-6.844739,-7.686942,-6.636593,-2.321450,-0.230163,9.429458,8.801118,9.660653,-2.978569,-6.665108,-1.662138,6.821173,7.488207,2.146348,-6.048056,8.871632,-8.269517,-4.233043,4.481798,2.008396,-4.368883,-8.655634,-7.050645,5.471246,-3.086745,-5.098339,-7.844527,7.526275,7.816005,8.852524,0.882034,-4.749614,7.736132,-2.588630,-6.397437,-3.556061,-0.150952,-2.891932,4.532403,8.824642,4.477681,-8.709170,7.258178,6.019710,-6.898047,-9.050170,-4.323336,3.595810,-1.665355,-0.270140,1.236312,0.559513,1.672861,-2.006897,8.960782,-6.279629,0.278442,-0.676830,-9.511682,-2.070713,7.066887,-6.065192,1.289114,1.915320,7.066621,-8.656139,-2.842635,-0.398286,7.539195,-2.913910,-9.954454,6.637818,7.347256,-7.057247,-3.058333,-3.219778,-8.900113,3.855531,-7.628791,4.621883,-9.141600,-5.039175,8.113692,-8.590257,7.564215,7.063782,5.547628,-1.807951,-9.978968,-7.228878,7.870204,-2.042475,4.914817,0.341161,-8.324244,7.711100,5.279466,-8.628566,-0.573120,5.785418,0.014394,2.993927,-8.024182,-9.600202,-4.039875,3.096755,2.075709,3.103759,8.608999,6.615801,7.021938,-1.945356,-7.254823,7.269926,7.086634,1.102381,7.916997,0.735404,-6.665044,4.809376,-2.261966,-2.887491,-4.362255,-1.617553,-2.240810,-3.929955,-0.228757,-8.418615,1.725741,3.538520,0.160299,8.616521,7.360567,-2.808254,-9.481429,-0.116113,-6.810668,3.651516,9.958932,-5.605345,7.409647,8.891175,1.913340,-3.659892,-1.663164,5.146955,-5.159619,-5.437592,5.982873,0.451530,-6.556450,-4.957077,-5.907109,-7.294651,0.690632,-8.998873,3.795764,-6.675219,9.170884,9.165564,-0.560857,5.552065,1.117408,-1.616365,-9.707587,0.377956,8.796870,8.133648,5.458421,5.797536,-1.061307,0.204627,-6.525408,-7.898736,-2.700644,8.276145,-1.751173,-4.413874,-6.246871,-8.132962,-8.906192,-6.624965,2.889122,-3.016646,9.415944,8.994266,1.041388,5.463441,-7.743721,3.444066,4.638878,5.052905,-3.127887,7.893774,-5.792141,4.359222,3.613499,4.840716,-8.050076,4.578436,8.768390,9.474446,7.060648,-4.724461,5.824088,0.920758,-5.830838,-2.500781,-1.019797,-6.430369,-5.966383,3.685055,0.052498,-5.584215,-3.926440,2.060768,1.519302,-5.897353,6.474280,-4.029519,5.964413,1.728951,0.103401,-7.167993,5.709337,-4.581762,-4.432476,-3.486769,-3.655175,8.960578,-0.292419,8.632553,-4.981068,9.987687,-6.905705,-6.659061,0.643835,-9.025119,1.213889,-3.964397,8.450445,-3.980576,-1.152849,0.610660,-4.999629,-1.433942,2.796957,-1.224286,2.588794,0.320545,9.049515,8.422010,4.366603,8.026916,-9.665793,3.729560,8.926138,-4.363901,-8.712683,-0.415114,-7.733616,-1.317618,-6.296376,2.598916,-3.627813,-1.277923,-3.618072,-5.832119,5.186016,9.677430,0.014313,4.675599,-4.131556,-1.065604,3.268449,0.181496,4.045308,7.448882,-0.870472,-8.092448,3.393002,8.675866,-8.119288,8.815903,3.064460,-6.332639,7.411963,3.640930,0.775439,5.830853,8.955153,-3.839872,-0.787656,-8.233595,1.336559,6.760550,2.268167,-9.779008,-0.660271,3.582382,-2.134153,-2.974111,3.917740,-7.498268,1.785615,1.652050,-8.895375,-4.625248,0.584407,-8.758130,0.914476,8.867193,-4.380698,-4.366737,5.253818,-6.398675,9.621126,-4.049601,2.290712,9.876675,-7.275488,2.252607,9.055418,8.413398,-2.177790,6.023890,1.387716,4.039776,-6.831915,-8.715712,8.042469,-2.183739,0.627366,-6.299619,2.143763,1.489176,-1.094326,-6.868559,-2.246826,8.004019,4.628590,-3.280606,4.152075,-6.443201,-7.046717,-0.926889,-4.602914,-7.231895,5.275547,-1.953623,0.789374,-5.965566,-3.174968,2.688881,-3.970841,2.460966,3.830245,-2.234900,3.300199,-7.049957,7.975125,-7.502502,8.562183,1.839129,5.351903,7.042667,8.976622,-4.454804,7.260848,4.500748,-7.562791,0.707238,-8.173266,6.790434,5.822395,3.307761,-4.228498,-3.655468,8.834931,-5.174576,2.583536,1.471528,1.146190,-7.537114,6.927084,-6.030150,-0.338233,7.938973,4.708792,8.898747,-8.961165,4.844644,-2.027926,2.134830,0.058521,-7.933511,7.749875,0.155394,9.340534,5.836649,2.961551,6.228949,-5.863819,9.995344,5.127087,-4.770932,9.476544,-5.629370,7.167392,6.112148,2.196794,3.878960,0.762410,7.457746,-4.466740,1.915803,-0.176091,0.411594,1.611504,-0.343791,7.735137,2.102722,-8.435149,-0.942660,6.310691,-6.439389,5.745158,7.362712,-2.993411,-2.560086,-5.119434,7.757174,-4.393272,7.875447,4.638598,-4.535826,-0.302691,1.797046,4.799553,-3.440170,-9.931867,6.680592,-6.858730,-4.219960,9.319969,3.176781,3.876654,-9.207347,2.146005,3.445498,2.236582,-7.065879,5.592901,-8.313007,3.836265,1.492213,1.126820,-5.407486,-2.189887,-2.854259,4.409292,1.269950,-5.785028,-2.118567,3.156069,-5.721613,2.656208,-7.035468,3.904300,1.208840,3.907721,-6.844894,2.772112,-4.719166,0.472097,2.705630,-3.945380,5.644048,-9.223988,-1.656459,-9.761312,-8.958898,0.130954,-5.018680,8.649096,-9.902688,7.444393,5.538696,0.388272,-9.839513,-6.562559,4.703534,-0.482414,-2.141770,-9.350725,-5.417732,8.372811,-0.604994,0.915929,0.654589,-6.884802,9.386034,-2.728668,-2.194719,-0.111916,5.090850,-1.071016,9.338118,6.243783,5.100881,-8.755706,-6.022713,-8.711560,0.432550,-5.309205,-5.278275], dtype = "float32")#candidate|1230|(2145,)|const|float32
call_1229 = func_100_call(relay.reshape(const_1230.astype('float32'), [13, 11, 15]))
call_1231 = func_100_call(relay.reshape(const_1230.astype('float32'), [13, 11, 15]))
func_100_call = mod.get_global_var('func_100')
func_102_call = mutated_mod.get_global_var('func_102')
call_1240 = func_100_call(relay.reshape(call_1229.astype('float32'), [13, 11, 15]))
call_1241 = func_100_call(relay.reshape(call_1229.astype('float32'), [13, 11, 15]))
var_1271 = relay.var("var_1271", dtype = "float32", shape = (2145,))#candidate|1271|(2145,)|var|float32
bop_1272 = relay.less_equal(const_1230.astype('bool'), relay.reshape(var_1271.astype('bool'), relay.shape_of(const_1230))) # shape=(2145,)
func_968_call = mod.get_global_var('func_968')
func_972_call = mutated_mod.get_global_var('func_972')
const_1335 = relay.const([[-1.802867,6.704374,-9.489142,8.999009,9.260057,-1.363833,0.776263,-5.715174,9.559587,-0.026418,7.977778,1.244000,-9.718307,-8.722946],[-6.969901,8.606144,-3.188696,8.588284,-2.838004,-2.744539,2.366516,5.801775,4.980398,-8.289484,-4.618803,2.865029,-6.387979,9.456015],[2.868522,-6.329482,8.426001,1.391119,-9.304516,8.349130,2.230685,-6.397581,-0.844833,8.383496,6.721422,-4.859374,3.926340,8.183119],[-0.430819,-6.274701,-9.471496,6.553394,-4.222380,-3.434792,6.202647,-3.187275,8.078035,3.490160,-2.913310,0.364019,5.970058,1.808616],[-9.216039,-7.280462,1.842312,-2.511162,7.546939,-7.162005,-4.822000,-6.513989,-4.578133,2.001430,-8.581796,8.941339,9.599717,-9.516597],[-0.047122,8.731842,0.315839,1.304146,-5.785768,-6.462968,5.126171,-2.077691,2.211139,-2.228348,9.436019,1.728830,-6.988589,-1.629351],[-8.669184,-0.693047,-7.208900,5.591520,-5.126653,-7.323337,-7.672473,-4.882106,0.984083,-8.963703,-8.173425,-9.937480,-8.341967,1.369273],[-4.446622,-5.084659,-7.547327,9.141211,6.503562,-3.015524,9.092754,-7.161849,-0.077041,-8.960807,3.191127,-4.840339,4.069824,7.162041],[3.971522,-3.983992,-7.199014,-0.193089,-0.127432,6.598865,-8.607695,1.567388,7.285230,1.171628,-4.448121,3.319669,-6.590295,2.623424],[2.364608,8.654013,9.839384,-0.739896,6.790133,2.661324,9.446492,0.958182,-0.026546,2.131463,-6.715838,0.727407,-0.958648,7.408954],[4.735936,-5.795997,6.051264,1.122683,-4.759864,5.017245,-3.202785,0.656040,3.274905,9.141058,9.237218,1.505744,4.559476,-4.995877],[-5.354529,8.412074,5.946659,-2.104561,9.935610,0.855418,5.479242,3.085421,9.864835,8.391441,8.799245,1.753230,-9.878376,3.247604],[3.280697,3.166798,6.661187,1.647926,7.346875,9.701604,3.511251,-9.097939,9.364644,-6.435419,-0.916587,-6.570813,-1.522503,-0.812569],[-4.336806,6.509403,0.480581,7.339809,4.089158,3.594021,-5.175981,1.424648,-3.851507,6.459129,-2.366403,-6.120938,7.679128,-1.882866],[-1.484917,-4.020428,-3.982299,3.746666,6.893110,-5.728750,6.020095,7.360475,2.036229,-1.957875,-8.888128,3.579496,5.926995,3.107150],[-6.947167,0.330498,-9.112721,-3.219334,1.304432,-9.819401,-4.041962,4.022521,3.874981,-6.297262,5.775034,-2.137338,-6.403340,-9.871778],[0.706779,-4.896096,-2.713877,9.162479,-1.567675,0.604537,0.711347,-0.983047,8.140717,7.287379,-3.783384,1.196260,-1.971681,7.598093],[9.948675,5.998644,7.655173,5.799062,0.705016,-1.128217,-9.720500,1.451862,3.447173,7.152280,3.664380,9.773457,-1.480125,9.300561],[-3.954049,4.986192,3.401264,1.813695,5.324953,-0.624337,5.521254,-7.565144,-0.797552,7.868909,7.250894,-7.397426,4.278720,-6.466642],[-3.861349,2.253359,-8.054897,7.940789,6.612269,-1.596652,4.451390,3.088823,4.616149,-0.027673,5.187610,4.414920,-6.750399,2.684323],[-6.457921,-1.885434,9.703265,1.287796,-9.021943,1.461399,9.713080,-8.987970,-1.641929,0.432195,7.783259,-5.695941,8.462361,0.662518],[9.832645,-5.030539,-0.265980,1.205650,-5.472130,6.072203,2.886757,-4.255203,-6.116778,0.327920,-7.419306,-7.704683,-9.014691,-9.425975],[1.307451,0.756159,-3.672380,-5.182138,-9.031667,-7.905196,-8.567749,-2.269196,8.011680,8.735045,6.334829,-7.690001,7.772718,-2.050108],[3.966471,-8.508579,-4.867600,-8.058825,0.345737,-6.655386,-7.044103,-6.330032,-9.993766,-8.899729,4.932597,-5.559523,-6.779744,-7.129401],[4.228564,6.276640,9.386246,2.252832,2.695781,-9.066923,-1.971881,1.950368,7.696632,-8.930241,-1.861299,4.335279,-9.316573,-7.228715],[6.437421,-7.218694,0.756719,8.816893,2.299585,0.835490,-5.638473,9.110594,-3.092804,5.024734,-8.584923,5.878358,-2.720439,-5.214848],[-7.111238,3.670852,8.479181,7.743145,3.725699,5.129187,3.448787,-8.627876,-7.437236,6.763493,-2.914304,5.626977,-4.556852,2.786269],[8.585433,0.856197,-0.348453,0.683580,-4.107087,9.827711,-7.859539,8.266900,0.392292,2.155052,7.607201,-7.651696,-8.100338,2.068581],[-2.108726,3.927336,-5.698115,-6.137844,-0.400645,9.149718,-3.461194,-0.517573,2.845866,-7.604632,5.547831,6.865084,-4.994026,-6.261875],[5.396775,5.476948,-3.711379,5.501606,4.331774,-4.417221,-0.316711,7.805839,-7.203395,7.320097,8.655161,-1.163713,6.245960,1.319744],[0.108195,-5.300409,5.331580,-0.884316,3.878100,4.398983,2.275220,-6.486419,9.021038,-6.958383,0.225541,6.271614,-9.371253,-7.433964],[3.468073,5.737284,4.942009,1.561062,-8.151931,8.098560,-5.591228,-6.123531,-8.071812,7.313953,-7.912863,8.396925,6.357576,-2.203676],[-7.916936,5.743011,0.157104,-3.437012,3.970822,1.461048,6.011316,6.687326,7.067466,-1.919676,-0.575370,9.166120,9.644729,-3.645691],[-3.568170,-8.148608,5.312423,-5.153504,9.470929,-1.036764,4.201927,-0.780715,-7.657063,-4.143035,2.601293,8.048325,-9.117639,1.710539],[6.074756,-4.168741,-5.070458,-8.178302,-8.501088,-9.816206,7.143074,-5.825875,4.376003,9.312601,-4.134125,4.718747,-4.294657,1.544486],[-7.095878,4.747923,9.099948,4.073023,-1.484599,4.435853,-5.143716,-9.069387,-6.786430,-4.354643,4.486800,9.822129,4.337073,-9.140865]], dtype = "float64")#candidate|1335|(36, 14)|const|float64
call_1334 = relay.TupleGetItem(func_968_call(relay.reshape(const_1335.astype('float64'), [7, 9, 8]), relay.reshape(call_1240.astype('float32'), [2145,]), relay.reshape(call_1224.astype('int64'), [144,]), ), 5)
call_1336 = relay.TupleGetItem(func_972_call(relay.reshape(const_1335.astype('float64'), [7, 9, 8]), relay.reshape(call_1240.astype('float32'), [2145,]), relay.reshape(call_1224.astype('int64'), [144,]), ), 5)
func_968_call = mod.get_global_var('func_968')
func_972_call = mutated_mod.get_global_var('func_972')
call_1339 = relay.TupleGetItem(func_968_call(relay.reshape(const_1335.astype('float64'), [7, 9, 8]), relay.reshape(call_1240.astype('float32'), [2145,]), relay.reshape(call_1334.astype('int64'), [144,]), ), 3)
call_1340 = relay.TupleGetItem(func_972_call(relay.reshape(const_1335.astype('float64'), [7, 9, 8]), relay.reshape(call_1240.astype('float32'), [2145,]), relay.reshape(call_1334.astype('int64'), [144,]), ), 3)
output = relay.Tuple([bop_1217,bop_1221,call_1224,const_1225,call_1229,call_1240,bop_1272,call_1334,const_1335,call_1339,])
output2 = relay.Tuple([bop_1217,bop_1221,call_1226,const_1225,call_1231,call_1241,bop_1272,call_1336,const_1335,call_1340,])
func_1341 = relay.Function([var_1215,var_1216,var_1271,], output)
mod['func_1341'] = func_1341
mod = relay.transform.InferType()(mod)
var_1342 = relay.var("var_1342", dtype = "float32", shape = (13, 14, 15))#candidate|1342|(13, 14, 15)|var|float32
var_1343 = relay.var("var_1343", dtype = "float32", shape = (13, 14, 15))#candidate|1343|(13, 14, 15)|var|float32
var_1344 = relay.var("var_1344", dtype = "float32", shape = (2145,))#candidate|1344|(2145,)|var|float32
output = func_1341(var_1342,var_1343,var_1344,)
func_1345 = relay.Function([var_1342,var_1343,var_1344,], output)
mutated_mod['func_1345'] = func_1345
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1452 = relay.var("var_1452", dtype = "uint64", shape = ())#candidate|1452|()|var|uint64
var_1453 = relay.var("var_1453", dtype = "uint64", shape = (3, 16, 1))#candidate|1453|(3, 16, 1)|var|uint64
bop_1454 = relay.add(var_1452.astype('uint64'), var_1453.astype('uint64')) # shape=(3, 16, 1)
output = bop_1454
output2 = bop_1454
func_1457 = relay.Function([var_1452,var_1453,], output)
mod['func_1457'] = func_1457
mod = relay.transform.InferType()(mod)
mutated_mod['func_1457'] = func_1457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1457_call = mutated_mod.get_global_var('func_1457')
var_1459 = relay.var("var_1459", dtype = "uint64", shape = ())#candidate|1459|()|var|uint64
var_1460 = relay.var("var_1460", dtype = "uint64", shape = (3, 16, 1))#candidate|1460|(3, 16, 1)|var|uint64
call_1458 = func_1457_call(var_1459,var_1460,)
output = call_1458
func_1461 = relay.Function([var_1459,var_1460,], output)
mutated_mod['func_1461'] = func_1461
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1812 = relay.const([[[4.249843,2.173137,0.870188,2.771441,-5.948580,0.535178,-4.152439,9.171419,-6.410919,3.799948,7.797807,8.459338,1.326747,-6.509976,9.034558,5.640368],[6.215447,4.427891,-3.998752,9.449966,-3.357253,1.338251,-7.805093,4.719354,1.055228,-3.074440,-5.212482,7.251419,0.916975,8.905269,4.681412,8.613827],[1.330546,-2.506024,-3.216046,-6.031564,-4.580420,9.086489,-2.009197,4.611649,-0.601149,-2.450227,4.493022,-4.657470,-0.066548,0.279798,-8.525435,-0.321811],[9.811770,-4.882837,-5.182633,5.086809,-5.881209,9.909911,9.525994,-3.743491,9.443574,-1.415355,5.835178,5.336148,-3.995278,1.972610,3.743375,-9.635706],[-1.266353,-5.059760,-1.512781,-0.659010,1.715796,2.213984,-1.022457,-1.409732,0.009698,3.759680,8.533563,-9.565542,7.427895,4.148480,6.650423,-2.100168],[-4.532560,6.458329,-5.822031,2.634584,1.772831,-9.108522,-5.224131,1.178356,6.932742,-3.556636,3.835140,-0.794501,4.906533,-6.530915,0.811410,-0.519204],[0.397256,-9.559435,5.531939,3.563639,6.239577,6.475804,-3.976781,3.927788,7.394338,5.563837,-5.621933,0.217253,1.606358,-2.850456,-1.741895,-5.944795],[-3.940846,3.195981,-5.782960,2.694566,-5.099262,0.382122,7.988835,-5.531067,8.665040,-9.308661,8.733928,0.856204,9.663620,-1.021297,-8.787143,3.966797],[6.566271,2.872678,-1.870098,2.985310,3.181004,3.291327,8.642998,8.288331,3.650138,-6.300910,6.103100,6.860882,-0.277255,5.601770,-5.526898,5.443240]],[[3.997968,7.746479,5.460176,2.214090,-0.882051,-2.089500,-9.101063,-5.059272,3.166260,9.769517,-2.165269,0.106176,-0.602826,6.840461,7.502016,-1.536349],[4.585756,-0.006910,8.791176,4.362860,8.787403,2.959994,4.389053,8.071976,1.249717,-4.624183,-0.070666,-4.975181,-0.174384,9.772370,-4.604556,-1.374491],[-3.121241,9.377177,-3.803365,1.510408,-8.512538,-2.716176,-1.875264,-4.057997,-9.567635,4.279293,-9.779798,1.383196,7.479529,-0.378758,-0.979044,-3.114191],[-5.976446,-8.509548,-5.665528,-0.769026,5.156821,2.293822,-0.541286,8.837067,-6.788883,4.534715,-9.198825,9.562534,-8.869577,9.748196,-6.763422,0.361334],[8.219385,-9.841585,6.339982,-9.002811,7.861061,-1.545064,7.152062,-2.874897,-5.265102,-6.941934,-7.287448,-2.183326,-2.649831,2.884898,2.696156,0.073550],[9.293881,9.211538,-6.176692,8.660116,2.995346,2.454659,3.283567,-2.756516,-4.658946,-1.869385,-7.062142,1.335909,-4.104033,8.893536,3.744889,6.662787],[-6.096808,8.876857,-5.809967,-1.804535,-0.787666,7.453064,5.570564,4.234846,-9.251906,-1.680539,-0.040621,3.059581,1.369970,6.840171,1.026284,3.674828],[4.310136,-0.824768,8.321025,1.187754,1.421883,6.007654,-3.812777,-3.410577,-5.138347,5.103008,-2.875105,0.115523,0.515299,-4.202306,8.207478,1.634406],[-1.518919,7.529308,-6.936485,5.568901,0.278814,4.114206,9.613880,-6.471547,-2.214707,-9.594157,3.406863,-3.990921,-5.263816,8.549968,-0.106301,-5.016520]],[[5.490024,-5.763063,-6.688780,1.452107,-7.746777,4.944128,-0.388116,6.730391,9.531073,5.164156,-1.484088,-4.443208,-4.250689,-9.400443,-4.894276,2.804800],[-6.243287,4.622320,7.484221,-3.291238,9.932188,5.097647,-4.054941,1.090662,-7.167045,-8.286248,-1.886524,-3.980153,-2.195674,-4.716290,9.799936,-4.341750],[5.805719,0.266568,-9.530059,0.007960,6.043929,5.466718,4.292803,-8.734691,6.269971,-8.679973,9.285636,-4.158273,-5.721773,-1.246539,-9.128312,6.522755],[-1.045901,-2.224252,1.617289,9.727679,-9.661918,-1.209064,4.312170,-6.089883,2.791832,-0.352222,9.062905,-8.180809,1.364543,7.392746,-6.118502,-7.028738],[0.927825,7.539924,-6.750189,-8.033614,-5.365168,-0.632608,5.936103,-4.232596,-6.350311,9.365628,-2.174207,3.637516,-9.539288,0.392138,5.801121,6.699892],[8.164824,0.902553,1.546753,-9.991013,-6.642413,4.618902,9.251951,-1.524472,3.504489,5.084397,-2.279271,9.160182,-2.682970,3.824080,-1.715345,-9.100386],[5.872614,2.925144,8.944079,-6.486207,9.887593,1.009306,-8.260389,-2.754620,2.552178,8.280069,-3.765246,-8.641575,6.878012,-9.788132,2.091834,0.045709],[3.872351,3.599915,4.920401,-6.626732,-3.752086,5.325644,-5.175832,-6.724637,-0.006549,4.994400,-5.686042,5.189480,3.509518,-2.319171,-7.895075,2.199662],[-8.918373,0.634889,5.605423,-0.749577,5.924048,-2.981158,1.820799,-7.466345,-7.199327,-2.099085,4.438262,-6.559456,-2.591993,1.146854,1.790780,-3.232708]],[[-9.207443,2.647331,0.625552,5.292472,4.728961,-1.978121,-2.114020,-4.792630,-5.778994,5.845480,-4.727545,-9.407035,-4.593042,-1.829868,2.876282,-8.035540],[-0.335153,3.913135,1.771230,-8.547854,-2.564679,-0.112061,4.610781,6.397169,7.830340,-0.162078,-0.806410,-8.567724,-2.032164,-8.773365,0.001564,9.387109],[-4.543930,-7.280792,0.940226,0.415418,6.516709,-9.854229,-5.269762,2.948490,9.429161,-3.381870,-5.812888,-4.437013,7.818637,-4.262392,3.648715,-4.019444],[-5.996878,-6.156806,8.723384,9.203430,9.395685,-5.585352,6.411716,4.664362,0.409416,3.810559,1.197353,-8.905290,-2.086315,8.184397,8.686173,-8.790916],[-7.744807,5.051896,-2.275095,1.951865,1.676836,5.332125,0.887319,5.242479,-3.079443,-3.783528,-9.363698,-2.539716,-2.678230,9.141558,5.734071,4.083342],[-3.333122,-8.433231,-0.317659,-9.501205,2.472992,-8.547160,-9.872711,2.655891,-7.130329,-7.973028,-4.998258,-5.568500,1.265156,-4.248984,1.082375,-2.555139],[0.905930,-3.796902,-3.412985,8.427521,-5.852031,-7.243539,1.220080,-2.580112,-4.671886,-5.024071,8.763555,8.821954,-8.896382,-4.657127,9.756928,7.028951],[6.815132,-1.012164,-7.410609,6.523565,-1.753555,-9.704612,9.976232,1.196364,1.934282,-7.278613,-1.575475,4.775600,-4.695918,-8.650698,9.893223,-6.123116],[7.665447,-9.421954,-3.964923,4.517614,-8.859853,-5.677200,-3.935984,6.686555,0.416900,-3.229252,3.167200,8.341340,5.398654,1.278651,4.560050,3.929745]],[[1.766331,5.740861,6.942601,-6.092713,-8.146762,7.558994,-3.503651,-2.679823,5.366574,-9.280707,0.479603,-6.722588,2.660760,9.126486,7.459393,-1.456768],[-9.651489,-1.021911,-5.348830,4.828389,5.039215,2.610595,8.650317,3.684331,-1.866533,4.758715,0.690711,6.939420,-5.278951,-7.643401,7.527276,-4.128740],[-4.562690,-3.127016,6.559393,3.872574,-8.127319,-0.315914,-6.906123,-5.190098,9.359823,-8.397990,9.009902,-4.471896,-8.672708,3.110495,3.342104,-1.911819],[-8.545336,-4.368709,-8.380244,-4.417560,-9.464695,5.242042,8.102166,9.904289,4.733436,9.224216,2.191764,-9.879043,-2.161125,-7.142250,2.404619,5.573752],[4.301883,8.157250,5.794641,-7.767735,5.069375,7.602158,-7.626516,3.796047,-4.763688,-5.973455,-1.409806,-9.787503,4.210434,-8.720235,2.736700,-4.424551],[8.581441,-1.227765,-5.236521,-0.942921,-2.639028,-2.563516,3.883914,2.700809,-4.318601,8.432019,-9.348100,-9.499187,-9.070872,0.526951,-6.177183,-7.105073],[6.893196,3.667150,-2.195056,2.836413,3.070947,1.020785,-4.798685,-6.082017,-7.765893,2.228834,4.210002,-4.666094,6.632357,1.024184,-7.650332,3.010969],[3.652247,9.314868,0.578118,-9.861707,-2.015760,7.671263,-7.986367,5.220187,5.404350,-0.942151,-1.974565,7.617749,-7.449364,-8.360057,-9.937960,-1.611957],[-3.856565,0.908302,0.403896,-0.960242,9.183712,-0.151641,4.114602,0.496814,-8.702656,-4.532103,-6.013103,-7.113584,-2.248602,9.104663,5.520336,-6.982391]],[[4.727471,7.390465,-1.103153,-1.786234,3.231840,0.115324,7.606135,6.957159,-8.699591,-3.376427,3.648238,6.872329,7.675443,8.335616,3.392181,-9.776851],[8.775296,8.120587,6.603650,-2.916904,-1.710710,-7.954404,-0.712067,0.440309,2.535744,6.230594,0.747828,-4.691697,-1.753192,6.743052,-6.332581,-0.823535],[6.406126,0.885866,-6.423700,5.803748,3.992629,-1.681647,6.067539,5.368746,7.755984,-2.198363,6.237905,-8.780069,-8.453574,5.013479,5.190619,-6.410255],[6.925776,-2.789950,7.042634,-2.712515,6.080980,-9.515336,2.528827,0.074576,3.450263,9.909501,-6.083440,-1.984455,4.811568,8.859087,7.481150,2.511017],[2.303573,-5.187289,4.339434,-0.725754,1.668865,2.830614,-5.784441,-3.841999,-4.462846,-3.320469,7.979803,8.838047,5.238548,4.355693,6.296896,1.956842],[-8.293378,1.280026,7.069410,-9.135543,4.476445,3.298034,-6.687222,0.937078,5.104872,-9.138785,-3.604043,1.257150,-4.076814,-2.327834,2.761900,7.256307],[-8.686593,9.740463,-8.167847,-6.842907,9.998626,8.049159,1.492554,1.579316,-5.848072,5.231231,1.375971,-1.455691,-0.244019,6.277124,8.937590,0.357672],[-9.817302,2.068886,4.588624,-3.496750,1.562207,-3.818933,-6.846671,1.248319,8.229380,6.356463,0.865869,7.497425,-5.004887,7.940660,8.816466,7.926855],[4.421169,-3.862474,4.620337,5.445453,-4.440295,6.985788,0.878201,9.219806,-0.951931,-5.284581,3.601822,1.144013,-7.491863,8.533952,7.950290,0.909067]],[[8.905680,8.013423,-9.253467,7.064908,5.804479,7.110153,5.489332,0.887259,2.508309,4.422831,4.897004,9.421905,7.894682,0.561339,1.622956,2.211957],[-7.113934,9.142250,3.927798,8.545925,-4.493090,-6.382466,-2.687791,5.320261,6.269842,-1.557241,9.048130,-6.238278,-2.878806,7.109721,4.353024,-5.358303],[-9.556502,-5.785452,-6.410147,-5.871649,2.286409,-0.918384,-3.262438,5.833246,-2.346356,8.714145,1.817357,-7.889492,2.174915,-6.458744,-1.507562,4.647239],[-5.402357,-9.202263,6.804771,4.229354,2.680514,-8.590955,8.835500,8.407870,2.273149,2.219496,9.600854,-4.552249,-8.554971,4.688408,1.906106,3.904597],[-2.833218,-9.391159,-2.102906,-1.300215,2.405235,6.829482,0.998561,-0.634971,3.290382,2.157745,5.735817,-4.713394,-2.464300,-5.095754,-6.918542,-2.672690],[-3.239647,-1.371697,-0.563814,-7.111210,-2.418580,3.160133,8.259787,-5.151908,3.355358,6.670260,-0.212050,-7.165126,1.649305,-7.792139,-1.635778,-2.047991],[-7.226695,1.342677,-1.515574,-4.346814,-8.637488,-8.229509,-5.138252,-5.236169,-5.579658,-8.657081,0.868361,-8.232274,-8.097052,-2.385123,4.670494,3.372988],[-9.942170,-6.677061,-4.184878,7.848815,-0.436429,-9.010788,-6.450875,3.143981,-4.382314,6.440954,-0.026189,-7.422221,2.388566,-4.713366,-5.694092,-9.115548],[-2.235013,7.833911,5.712940,6.627945,-1.050263,-1.744804,6.224108,8.405844,-3.297550,7.170544,-2.662853,7.457570,3.513363,-5.934827,3.295200,-5.184683]],[[-9.832850,-8.137552,-6.414341,0.203923,-3.614394,2.255961,5.334039,2.319049,-9.758684,7.680800,0.436229,-2.396541,-9.509857,-9.423969,5.896750,8.478319],[-2.159176,4.448341,-2.729801,1.455550,8.500371,-2.063760,7.833824,-7.539762,-0.986481,5.151689,-7.764256,-1.326891,-6.532939,-7.530490,9.984352,0.373138],[8.996669,-2.780412,-2.398294,-6.097484,9.300332,-7.005879,3.566764,-7.496355,-2.770688,7.412597,4.450278,5.945029,-4.427799,4.155074,-1.227153,9.556496],[6.672564,1.852615,6.251638,2.772715,-8.863639,4.508861,-1.093664,8.327383,7.909765,4.644630,6.238092,7.879642,-4.031786,8.592725,5.760087,3.596924],[7.534565,-9.667212,-7.968355,5.148613,-7.804341,-8.132355,-9.475578,8.531260,-6.989992,-4.075580,-1.319422,3.972616,-2.707069,7.820208,2.066600,-5.296158],[6.038452,7.866119,7.209826,-8.492966,-8.953954,-2.372761,-3.019686,-8.421190,1.879661,-6.276709,-4.313063,-5.168004,0.575374,0.508483,-4.244411,3.620536],[-9.121239,-4.327809,3.589362,4.162269,7.115943,-5.215352,-1.318283,6.526984,0.070621,0.870053,2.722273,-4.545178,9.369832,-3.524173,3.254490,0.843191],[-2.610892,1.968513,-6.775411,8.552735,8.857650,4.951651,1.886690,2.091335,9.399040,-8.024425,-7.425024,8.009633,-9.265874,-6.077128,5.591140,-7.093294],[2.842101,9.626127,-3.295896,2.551498,-2.003802,5.938049,8.808483,-2.766226,6.956967,-7.091725,9.542287,7.124610,0.081180,5.658988,6.345017,-5.707532]],[[-5.817349,-8.554470,1.944695,-4.775824,8.702176,6.576482,-8.071605,5.940752,-3.151357,2.900995,9.858337,-2.112757,-1.185371,9.438443,9.883952,-0.487571],[0.101454,-4.019519,9.669445,-3.050412,9.175398,9.177074,9.702472,3.460584,-9.257532,7.918498,-6.140935,-0.310968,6.004460,-9.428715,-5.645042,-9.023587],[-7.942207,-1.670569,0.386956,-0.771826,-2.765215,-5.628122,-6.937264,3.882295,3.537513,-5.112967,-2.300153,-4.584406,-3.718442,-3.321702,-9.101621,-4.156211],[-2.488909,-2.747786,5.377043,-4.763976,-3.492124,8.849968,-5.623350,-4.183331,9.373465,9.296522,9.733022,7.785732,9.739666,-2.507033,4.431604,-6.927479],[7.716447,3.990296,3.970246,-9.117395,2.944133,-5.690398,3.867464,6.250712,3.618120,-2.152676,-3.262521,-2.781022,-4.504679,7.781029,4.710245,1.256196],[-6.510793,2.337141,-4.837169,-1.248403,4.285963,3.389316,7.642690,5.509206,-5.701475,5.392237,9.896584,-2.850122,4.267813,1.015327,0.116118,8.064363],[-6.622404,7.615316,6.480977,-5.454197,-6.277239,6.214942,-7.159932,-3.261727,-7.670120,4.194215,4.875426,2.679148,-2.558025,2.468447,4.210762,4.179072],[6.708116,-6.727788,-0.572774,2.673859,3.752173,-0.581764,2.604398,-2.764682,2.785224,9.819480,2.574463,3.858036,-7.224969,7.200200,7.640680,0.483649],[3.507923,7.638182,-5.591608,-8.242101,9.366001,8.734613,6.479773,5.502693,1.544040,9.358008,2.769477,-2.471504,6.380976,-2.132567,1.312636,6.654853]]], dtype = "float64")#candidate|1812|(9, 9, 16)|const|float64
uop_1813 = relay.sigmoid(const_1812.astype('float64')) # shape=(9, 9, 16)
func_820_call = mod.get_global_var('func_820')
func_823_call = mutated_mod.get_global_var('func_823')
var_1817 = relay.var("var_1817", dtype = "int64", shape = (144,))#candidate|1817|(144,)|var|int64
call_1816 = func_820_call(relay.reshape(var_1817.astype('int64'), [3, 12, 4]), relay.reshape(var_1817.astype('int64'), [3, 12, 4]), )
call_1818 = func_820_call(relay.reshape(var_1817.astype('int64'), [3, 12, 4]), relay.reshape(var_1817.astype('int64'), [3, 12, 4]), )
uop_1819 = relay.cosh(uop_1813.astype('float32')) # shape=(9, 9, 16)
uop_1830 = relay.erf(uop_1813.astype('float64')) # shape=(9, 9, 16)
output = relay.Tuple([call_1816,var_1817,uop_1819,uop_1830,])
output2 = relay.Tuple([call_1818,var_1817,uop_1819,uop_1830,])
func_1842 = relay.Function([var_1817,], output)
mod['func_1842'] = func_1842
mod = relay.transform.InferType()(mod)
var_1843 = relay.var("var_1843", dtype = "int64", shape = (144,))#candidate|1843|(144,)|var|int64
output = func_1842(var_1843)
func_1844 = relay.Function([var_1843], output)
mutated_mod['func_1844'] = func_1844
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1975 = relay.const([[[-9.425247,6.025733,-0.610381,9.523705,0.311799],[4.159697,-3.810543,7.535828,4.875898,-5.968855],[8.540265,-4.930245,3.718460,4.092132,-7.423488],[4.405881,9.813851,1.564156,-1.376810,5.077805],[8.085245,5.110611,-9.820769,8.389350,-0.269934],[4.423936,-8.111382,8.558645,6.894053,-7.644427],[-4.727991,7.788896,7.661526,9.805707,0.406009],[2.843350,5.532216,-9.641461,4.036857,-4.253733],[6.929312,-6.335962,9.752691,0.087606,-9.780087],[-3.203109,6.054648,-8.711299,-6.595998,4.633764],[-4.342494,-8.995392,5.119760,-1.070004,-2.153337],[4.702651,-2.817533,0.454107,6.714553,0.463254],[2.188898,-6.412939,2.166421,2.215286,-9.537277]],[[8.274028,8.017141,5.572276,8.544699,2.638581],[-6.353064,4.830621,-6.741708,-2.543994,-9.101181],[-1.389677,6.983339,-2.710891,9.236765,-6.525971],[-6.239385,1.156407,-5.980932,6.411127,-9.963676],[8.427702,6.623734,9.564308,-0.738962,0.145556],[0.552703,-0.984004,3.958781,6.014446,-1.643030],[-5.555010,-8.150767,-5.618851,-4.613616,-5.783420],[-9.546242,9.558650,-8.197196,-1.686274,-4.268122],[4.636904,2.476063,-6.841536,6.258968,0.120938],[-3.568881,-6.452788,1.167906,4.253439,-6.701045],[-7.247888,8.918193,-5.472374,2.739673,-0.002953],[4.326508,6.047033,6.147092,2.737388,-1.688943],[-5.772403,-8.587697,5.747449,0.754423,-2.404287]],[[-7.375566,8.658613,-6.003236,1.880536,-8.709015],[-1.764845,-3.301634,-0.279684,0.652201,-5.739985],[-8.836179,-8.790662,7.073815,7.194432,-9.963771],[7.015893,-3.979211,9.667217,-5.706997,-7.170391],[-3.906770,-0.590617,9.578335,2.637732,-8.005174],[-0.584108,-8.340194,-6.122019,-8.287542,2.185799],[8.381629,1.950865,9.944706,-3.315678,4.839334],[-5.192313,5.741225,-0.931250,1.328158,-1.913763],[2.652138,-7.818741,8.914806,-3.401919,-2.779164],[8.776177,-6.045662,-4.190046,9.720850,8.912903],[5.266514,-5.514609,1.089273,2.680619,-7.314187],[-4.554313,-7.674867,-6.583649,8.693420,2.847255],[-9.776443,0.709521,7.826356,-7.478108,9.439647]],[[-4.926173,8.215843,2.968660,3.505535,0.246655],[-2.235321,-1.168479,-4.043878,7.901217,3.919633],[-8.842607,8.187257,-6.244662,3.632176,2.190281],[-2.410925,0.739813,-2.834296,-0.380756,-8.321302],[-1.575077,-1.413691,7.084751,8.796728,-6.869159],[-0.976972,-9.805817,3.251904,-8.860397,9.105135],[5.602524,5.358130,6.669411,3.127441,-6.231114],[7.931875,6.753259,9.928459,-0.942456,9.034754],[6.690436,9.381174,3.572952,-2.119167,3.398494],[2.526565,3.071210,-8.411770,-5.969660,3.919526],[4.982377,5.198996,-5.749516,0.156755,8.897486],[9.255191,-9.637317,-8.887373,2.510382,-3.704498],[-1.916647,4.513423,-2.975727,-2.600091,-5.470417]],[[2.045368,-0.783267,-5.197823,7.621227,-7.208234],[-6.669107,6.378961,-7.117665,-3.650032,-7.468313],[4.871020,-4.618938,4.014388,-4.017245,1.882385],[6.921143,-0.605410,-8.867002,-2.826222,-1.979633],[-3.391511,-0.773323,-5.942321,-3.800571,9.915757],[0.209487,0.973813,3.643947,-4.316775,7.728510],[-0.468606,6.137562,-7.227721,5.878682,4.747982],[7.993861,-7.291753,-5.526422,5.224339,1.984098],[3.910737,1.135311,-3.172513,2.531257,-0.854615],[0.361928,6.175100,1.437188,-8.785152,-8.669835],[-7.284792,5.870789,-6.784127,8.518625,-7.877262],[-0.473247,9.397929,9.352221,-8.478120,5.949051],[3.417452,-7.538667,7.328773,-5.266366,-6.930794]],[[3.918919,7.381547,-3.331526,-3.916007,8.844383],[-1.097164,7.659003,3.829215,-9.327935,8.514445],[-6.497308,-7.983045,-4.670226,-7.532107,0.647588],[3.904608,9.373423,4.517832,-5.281969,-8.504842],[6.748188,8.923240,-9.809415,4.033477,6.342262],[-6.136705,3.736575,-4.652801,-3.089320,-8.488927],[3.212306,3.008199,-5.767313,-0.726875,-7.854352],[-6.007036,-4.919419,-5.057903,-8.248745,0.424964],[5.572401,2.429466,-5.705713,-3.607149,-0.470931],[-2.546982,-2.792972,5.853209,-8.896141,-9.107201],[-1.623684,-7.019893,-5.158136,4.248840,-3.215595],[-5.553111,7.211903,-8.096571,4.062042,-4.940883],[-8.501616,-7.932291,-9.435671,2.431114,0.043255]],[[-4.641276,1.884367,-2.229241,3.944099,-2.643129],[-0.745277,2.892957,5.855058,6.088529,-0.775913],[-5.281710,-4.189549,-3.205066,-0.824259,-2.403743],[0.003706,5.437011,4.651953,-8.591571,-8.869784],[5.352905,-4.122059,-5.239692,-2.283594,-6.002675],[6.158704,6.014599,4.170362,9.183640,-1.800043],[-6.193101,-4.018993,-7.819894,1.627562,-0.379177],[2.288126,3.084215,2.866581,7.340931,4.285359],[-5.673103,6.038293,8.898899,7.151366,-6.460970],[-2.249239,0.401089,6.338182,-1.977087,2.514012],[-2.684203,-8.817501,-7.126265,7.179385,-9.749462],[5.721943,9.455399,-8.279537,-7.618110,4.460504],[5.775326,4.333583,-0.046763,-9.583112,2.480653]],[[-2.478843,7.298039,1.189935,-2.284588,9.241425],[-9.267448,7.804672,7.713774,-1.631758,-9.227271],[8.744375,8.638473,-6.511427,3.116026,-3.636788],[-3.570228,-4.656343,-2.040558,4.315780,-6.034864],[9.340859,-1.831166,-4.284061,-7.878354,5.864837],[5.670425,4.907184,5.620678,-8.860268,-4.720061],[1.538258,3.350612,-3.733666,-4.042075,-5.289290],[7.547115,0.733331,0.459560,3.378173,-3.982169],[-5.066452,7.681081,-6.098351,0.663130,1.440129],[3.980427,4.866237,-0.817183,-4.787939,9.133893],[1.968338,-5.324561,-7.574425,4.777885,-9.961088],[-1.889517,7.996540,-4.386463,-3.181231,-9.020976],[2.687315,4.123574,1.791104,4.447304,-3.500526]],[[-2.809855,3.556211,-3.247295,-3.365080,0.961645],[9.220910,4.575894,-3.715627,-9.237568,-2.071327],[-0.286937,-5.167332,-2.579987,-4.486179,-9.293209],[-7.607912,-2.167618,2.155844,-1.941523,-8.179267],[-5.095031,2.102490,-9.822879,1.084768,8.570416],[-8.035914,-6.310186,7.793451,-8.353167,-2.482176],[-5.986473,0.203347,-6.608997,9.843079,3.455827],[-8.394299,0.381628,1.121183,6.782269,-8.538460],[-0.033081,4.596413,2.813069,5.315716,-8.664177],[-4.647468,3.448551,0.790638,1.070587,-6.272524],[0.906305,-1.770242,-5.223955,-6.531647,2.049890],[-6.514105,4.488892,-7.867174,-1.763317,-5.011388],[3.256613,8.771304,3.783353,-0.619234,1.640956]],[[2.029154,2.758813,7.933204,3.294356,-4.360922],[-5.514799,0.458031,-4.206948,4.828641,7.248451],[2.874718,-3.339901,2.622268,6.422017,-8.119791],[-3.422395,7.006411,-1.653910,-8.604479,6.677491],[-0.586318,1.092390,3.532192,6.606659,7.263098],[5.170942,8.408933,2.071893,3.315274,-5.625773],[-4.745753,6.198912,-3.794041,-7.375617,2.275917],[7.373725,-2.609707,3.084331,-4.624671,-2.633839],[-3.865984,-9.229829,6.826520,-9.478379,1.874651],[5.496840,-7.123151,4.360275,-2.622467,0.853488],[2.426196,8.822335,5.785257,-7.472361,0.381094],[9.852322,-4.426505,7.078801,-1.295303,-0.151281],[-3.419101,3.530184,-8.823671,0.679230,-5.609701]],[[-8.383899,-5.958585,8.046878,6.223399,2.021918],[-6.337411,-7.540443,6.723510,2.266252,3.210120],[2.543311,3.494124,-7.095103,4.221616,-9.400279],[-8.237449,-6.479639,-4.368770,4.556671,9.898084],[-9.415008,8.101174,-3.144556,-6.950811,-0.289519],[0.534551,0.503858,-6.783098,-3.456038,6.849900],[-9.431696,5.325943,-3.821969,-4.355163,2.455519],[3.024247,-5.998646,-3.445177,4.202626,-4.104801],[4.564114,3.746351,-5.961276,-4.860176,4.737209],[6.852524,-6.683199,-5.036393,-3.876901,-5.537297],[-2.922140,7.295594,-9.549162,6.146902,-7.581686],[-3.496904,1.728007,-7.929919,7.855467,-5.240805],[-3.052612,-4.778868,9.532884,-9.595816,-9.407603]],[[9.222672,-3.691039,8.917552,7.810590,-3.402290],[-8.632520,7.609170,-6.394540,1.425309,-5.545849],[-4.774324,0.494867,9.887854,-4.043750,-2.385586],[-8.403587,4.209559,-3.031962,-7.199004,-6.260882],[1.476272,0.671605,-8.360000,-5.395060,4.219784],[-8.784597,2.555402,2.787408,-9.433941,-3.978666],[-3.693017,-9.078710,7.848187,-7.370357,-7.908279],[-5.614059,6.160879,-2.198078,8.290850,7.364335],[-7.141709,4.519633,9.878216,-4.904215,-2.144709],[-0.624021,-7.260760,-3.664719,9.657019,2.655360],[8.134607,4.487461,3.954311,3.321879,-7.354478],[4.304952,-1.897274,-8.800588,2.309744,4.577751],[-1.009812,-1.726094,-7.083706,-8.128458,9.573243]]], dtype = "float32")#candidate|1975|(12, 13, 5)|const|float32
uop_1976 = relay.sqrt(const_1975.astype('float32')) # shape=(12, 13, 5)
output = uop_1976
output2 = uop_1976
func_1978 = relay.Function([], output)
mod['func_1978'] = func_1978
mod = relay.transform.InferType()(mod)
mutated_mod['func_1978'] = func_1978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1978_call = mutated_mod.get_global_var('func_1978')
call_1979 = func_1978_call()
output = call_1979
func_1980 = relay.Function([], output)
mutated_mod['func_1980'] = func_1980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_1981 = func_1978_call()
call_1982 = func_1978_call()
uop_1989 = relay.atan(call_1981.astype('float32')) # shape=(12, 13, 5)
uop_1991 = relay.atan(call_1982.astype('float32')) # shape=(12, 13, 5)
bop_1992 = relay.power(uop_1989.astype('float32'), relay.reshape(call_1981.astype('float32'), relay.shape_of(uop_1989))) # shape=(12, 13, 5)
bop_1995 = relay.power(uop_1991.astype('float32'), relay.reshape(call_1982.astype('float32'), relay.shape_of(uop_1991))) # shape=(12, 13, 5)
var_2004 = relay.var("var_2004", dtype = "float32", shape = (12, 13, 5))#candidate|2004|(12, 13, 5)|var|float32
bop_2005 = relay.logical_or(uop_1989.astype('bool'), relay.reshape(var_2004.astype('bool'), relay.shape_of(uop_1989))) # shape=(12, 13, 5)
bop_2008 = relay.logical_or(uop_1991.astype('bool'), relay.reshape(var_2004.astype('bool'), relay.shape_of(uop_1991))) # shape=(12, 13, 5)
func_820_call = mod.get_global_var('func_820')
func_823_call = mutated_mod.get_global_var('func_823')
const_2010 = relay.const([10,-9,3,-6,10,4,-4,-10,5,7,8,-6,3,-7,6,3,-5,8,4,8,-1,-1,-5,-1,7,-10,9,1,3,-10,10,-8,6,3,-1,5,3,-4,-6,-9,-2,-9,4,-4,-8,7,-6,2,-10,-3,6,-4,3,-9,4,4,-8,10,3,-10,-8,10,1,-7,7,-5,-7,5,-6,9,-6,-9,-5,8,-1,-8,7,-5,10,-3,-2,-3,5,7,4,-5,-10,-5,-1,1,-3,-3,9,-1,9,-7,2,10,-7,1,4,10,-10,8,-9,-7,10,-3,9,-9,9,9,-7,1,7,-5,-9,4,-9,-3,3,-1,10,-3,9,7,-1,1,5,-10,-5,-3,10,-6,-10,-9,8,6,-5,9,5,6,-2,2], dtype = "int64")#candidate|2010|(144,)|const|int64
call_2009 = func_820_call(relay.reshape(const_2010.astype('int64'), [3, 12, 4]), relay.reshape(const_2010.astype('int64'), [3, 12, 4]), )
call_2011 = func_820_call(relay.reshape(const_2010.astype('int64'), [3, 12, 4]), relay.reshape(const_2010.astype('int64'), [3, 12, 4]), )
output = relay.Tuple([bop_1992,bop_2005,call_2009,const_2010,])
output2 = relay.Tuple([bop_1995,bop_2008,call_2011,const_2010,])
func_2017 = relay.Function([var_2004,], output)
mod['func_2017'] = func_2017
mod = relay.transform.InferType()(mod)
mutated_mod['func_2017'] = func_2017
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2018 = relay.var("var_2018", dtype = "float32", shape = (12, 13, 5))#candidate|2018|(12, 13, 5)|var|float32
func_2017_call = mutated_mod.get_global_var('func_2017')
call_2019 = func_2017_call(var_2018)
output = call_2019
func_2020 = relay.Function([var_2018], output)
mutated_mod['func_2020'] = func_2020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_2045 = func_1978_call()
call_2046 = func_1978_call()
output = call_2045
output2 = call_2046
func_2059 = relay.Function([], output)
mod['func_2059'] = func_2059
mod = relay.transform.InferType()(mod)
mutated_mod['func_2059'] = func_2059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2059_call = mutated_mod.get_global_var('func_2059')
call_2060 = func_2059_call()
output = call_2060
func_2061 = relay.Function([], output)
mutated_mod['func_2061'] = func_2061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2059_call = mod.get_global_var('func_2059')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_2110 = func_2059_call()
call_2111 = func_2059_call()
output = relay.Tuple([call_2110,])
output2 = relay.Tuple([call_2111,])
func_2118 = relay.Function([], output)
mod['func_2118'] = func_2118
mod = relay.transform.InferType()(mod)
output = func_2118()
func_2119 = relay.Function([], output)
mutated_mod['func_2119'] = func_2119
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2123 = relay.var("var_2123", dtype = "uint8", shape = (1, 1, 8))#candidate|2123|(1, 1, 8)|var|uint8
var_2124 = relay.var("var_2124", dtype = "uint8", shape = (4, 14, 8))#candidate|2124|(4, 14, 8)|var|uint8
bop_2125 = relay.equal(var_2123.astype('bool'), var_2124.astype('bool')) # shape=(4, 14, 8)
bop_2135 = relay.subtract(var_2123.astype('int64'), var_2124.astype('int64')) # shape=(4, 14, 8)
output = relay.Tuple([bop_2125,bop_2135,])
output2 = relay.Tuple([bop_2125,bop_2135,])
func_2138 = relay.Function([var_2123,var_2124,], output)
mod['func_2138'] = func_2138
mod = relay.transform.InferType()(mod)
var_2139 = relay.var("var_2139", dtype = "uint8", shape = (1, 1, 8))#candidate|2139|(1, 1, 8)|var|uint8
var_2140 = relay.var("var_2140", dtype = "uint8", shape = (4, 14, 8))#candidate|2140|(4, 14, 8)|var|uint8
output = func_2138(var_2139,var_2140,)
func_2141 = relay.Function([var_2139,var_2140,], output)
mutated_mod['func_2141'] = func_2141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2119_call = mutated_mod.get_global_var('func_2119')
call_2195 = relay.TupleGetItem(func_2118_call(), 0)
call_2196 = relay.TupleGetItem(func_2119_call(), 0)
func_2059_call = mod.get_global_var('func_2059')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_2221 = func_2059_call()
call_2222 = func_2059_call()
var_2225 = relay.var("var_2225", dtype = "float32", shape = (12, 13, 5))#candidate|2225|(12, 13, 5)|var|float32
bop_2226 = relay.not_equal(call_2195.astype('bool'), relay.reshape(var_2225.astype('bool'), relay.shape_of(call_2195))) # shape=(12, 13, 5)
bop_2229 = relay.not_equal(call_2196.astype('bool'), relay.reshape(var_2225.astype('bool'), relay.shape_of(call_2196))) # shape=(12, 13, 5)
output = relay.Tuple([call_2221,bop_2226,])
output2 = relay.Tuple([call_2222,bop_2229,])
func_2233 = relay.Function([var_2225,], output)
mod['func_2233'] = func_2233
mod = relay.transform.InferType()(mod)
var_2234 = relay.var("var_2234", dtype = "float32", shape = (12, 13, 5))#candidate|2234|(12, 13, 5)|var|float32
output = func_2233(var_2234)
func_2235 = relay.Function([var_2234], output)
mutated_mod['func_2235'] = func_2235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_2358 = func_1978_call()
call_2359 = func_1978_call()
output = relay.Tuple([call_2358,])
output2 = relay.Tuple([call_2359,])
func_2364 = relay.Function([], output)
mod['func_2364'] = func_2364
mod = relay.transform.InferType()(mod)
mutated_mod['func_2364'] = func_2364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2364_call = mutated_mod.get_global_var('func_2364')
call_2365 = func_2364_call()
output = call_2365
func_2366 = relay.Function([], output)
mutated_mod['func_2366'] = func_2366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_2389 = func_1978_call()
call_2390 = func_1978_call()
uop_2394 = relay.asinh(call_2389.astype('float64')) # shape=(12, 13, 5)
uop_2396 = relay.asinh(call_2390.astype('float64')) # shape=(12, 13, 5)
func_2138_call = mod.get_global_var('func_2138')
func_2141_call = mutated_mod.get_global_var('func_2141')
var_2409 = relay.var("var_2409", dtype = "uint8", shape = (8,))#candidate|2409|(8,)|var|uint8
const_2410 = relay.const([7,-8,8,10,1,5,-1,-9,-1,10,-2,10,3,6,8,-1,-5,-5,6,7,9,9,8,7,-4,5,-3,1,2,3,7,6,-4,-7,6,8,-7,-7,4,6,-10,-6,-5,-1,6,-8,8,9,5,-2,1,8,6,2,-1,10,9,-6,-2,-3,1,-3,7,2,-7,3,-4,-5,6,2,8,-9,-5,3,-4,-10,-8,-5,-5,7,1,2,-10,-6,6,6,-10,-3,1,-6,4,9,9,9,1,7,-5,-7,-10,3,-3,-2,-5,-9,2,-1,-1,8,-6,-3,-2,-1,3,-4,-5,9,-8,-2,-5,-9,-8,3,3,-9,-10,-8,-5,1,-8,-1,4,2,10,-6,7,-1,-8,-6,6,1,-10,-8,9,4,-4,2,-4,1,8,-8,5,-2,4,5,3,-7,7,9,5,-7,8,-9,6,8,-7,1,-6,4,-10,9,7,6,1,3,-9,-7,2,1,5,-1,6,6,-4,-9,1,8,3,-5,-9,10,-9,-5,2,8,-5,-4,1,-2,-2,1,-10,3,-5,8,7,2,-5,-6,2,6,4,-6,-8,2,-9,3,-2,-3,-5,10,8,-9,-8,-8,10,6,4,9,-2,1,-1,-3,1,1,8,9,3,7,-2,2,10,5,1,5,-2,7,1,10,7,-9,3,10,-5,-9,-5,10,-10,9,-9,-7,3,6,-5,7,8,-6,5,6,3,10,6,-3,-4,-10,-9,4,10,-5,6,8,1,4,-9,7,-8,2,-6,10,9,3,-8,1,6,-4,9,8,-3,-5,5,-6,10,4,-5,6,-8,-4,-5,-4,-1,7,8,2,-8,-8,1,-3,-4,-5,-5,2,1,8,1,8,10,-5,-9,-2,4,-9,3,-3,10,5,10,-9,-5,8,-8,-9,-10,-9,-1,-9,2,-7,-1,-4,-10,-8,-8,3,3,1,-6,2,-7,8,-3,-1,4,-1,-10,-5,4,1,10,5,-3,-7,-9,6,3,3,10,10,-4,8,6,4,-9,-1,-1,4,-7,5,-1,1,7,-9,-8,3,-10,7,8,-5,8,-8,6,-5,3,8,-2,-8,-3,-8,-8,4,-3,5,6,-10,7,5,8,-8,-9,6,5,10,3,-8,10,8,-7,-7,-2,-9,-3,-4,-6,3,-1,7,-5,4,7,-8,8,-2,-8,9,-8,-10,-5,-3,9,6], dtype = "uint8")#candidate|2410|(448,)|const|uint8
call_2408 = relay.TupleGetItem(func_2138_call(relay.reshape(var_2409.astype('uint8'), [1, 1, 8]), relay.reshape(const_2410.astype('uint8'), [4, 14, 8]), ), 1)
call_2411 = relay.TupleGetItem(func_2141_call(relay.reshape(var_2409.astype('uint8'), [1, 1, 8]), relay.reshape(const_2410.astype('uint8'), [4, 14, 8]), ), 1)
output = relay.Tuple([uop_2394,call_2408,var_2409,const_2410,])
output2 = relay.Tuple([uop_2396,call_2411,var_2409,const_2410,])
func_2416 = relay.Function([var_2409,], output)
mod['func_2416'] = func_2416
mod = relay.transform.InferType()(mod)
var_2417 = relay.var("var_2417", dtype = "uint8", shape = (8,))#candidate|2417|(8,)|var|uint8
output = func_2416(var_2417)
func_2418 = relay.Function([var_2417], output)
mutated_mod['func_2418'] = func_2418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2059_call = mod.get_global_var('func_2059')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_2420 = func_2059_call()
call_2421 = func_2059_call()
func_1082_call = mod.get_global_var('func_1082')
func_1086_call = mutated_mod.get_global_var('func_1086')
const_2437 = relay.const([-0.420148,2.818261,6.962875,2.463967,3.997773,7.598198,-2.778736,-8.053508,3.592698,7.992033,-7.499356,1.816189,5.619523,-0.784510,-2.899561,-4.529916,6.257768,3.794759,-9.400057,-7.580526,-9.495555,-4.120421,-2.227885,-9.414165,-4.565903,-8.785710,-8.834725,3.298970,0.902709,2.090410,0.922412,-8.848914,7.157933,6.382521,2.866441,1.500238,8.296791,-1.393912,-8.769825,5.207703,3.893307,4.407851,5.875426,9.477983,9.434592,-8.597521,-3.781432,8.160212,-9.587033,8.390917,-2.801059,-6.575889,4.667024,9.576337,9.473833,-0.890686,-1.993874,3.593811,-1.218104,-8.630236,5.441163,-3.290005,-0.527587,6.719305,-1.393435,-1.038558,-2.928506,8.491067,3.420920,8.402079,3.131351,4.404497,-4.650333,-8.166086,2.405489,-5.544258,4.316364,3.365764,-9.258517,5.391588,4.943156,2.398798,-6.650579,6.448104,7.082878,-4.376291,-9.518336,-4.185266,-6.296049,2.906666,-3.274171,-2.730197,-4.889996,5.399798,4.291310,-0.267501,-9.577425,-3.774391,-5.644995,-3.271030,-4.806207,-9.153577,0.986769,3.409800,4.198153,1.094342,-2.817800,-0.094848,1.709103,0.712533,-7.314544,-1.965847,1.342354,8.705000,-8.678190,6.219652,-9.402400,-4.502940,0.846160,-0.904522,-3.654128,-9.341079,3.126888,-8.193336,-2.860654,1.172682,8.160235,7.061743,-8.921863,-1.621119,-9.214160,-7.450109,6.759199,-6.453792,-4.333473,-3.055580,5.844585,-2.059676,4.566559,5.982656,-7.748693,-5.002351,-0.460572,7.864641,-1.759496,-4.861698,8.346735,9.606229,3.774008,1.566481,-6.173800,-8.064719,-9.619701,3.005053,4.298318,0.333997,8.020033,1.755144,7.085893,1.803988,-9.931269,8.716682,-1.323962,2.539204,-5.880048,1.522449,-8.049097,-8.019934,-8.414697,-6.273513,9.179817,-5.437165,1.181318,-1.679268,-1.351411,-2.222031,0.049578,-4.488619,-7.423259,5.072676,0.246460,-0.659664,8.028289,-9.126754,-4.198509,5.448281,9.389337,-7.735180,-2.506966,4.082119,-4.384977,5.590128,7.243286,5.009558,4.630561,7.956995,-0.163548,-4.372874,-3.306425,5.792928,5.677045,-0.385159,-6.295355,3.888576,-7.236947,9.040261,-0.923084,-9.273031,7.669601,-2.773659,6.428966,7.315690,1.045542,5.786159,-8.833446,-8.274372,4.994231,-2.640548,8.977666,-1.314159,3.511361,9.370051,8.328841,1.941864,6.927061,0.594290,3.441600,-2.413116,5.427061,8.160964,6.881837,8.075821,-2.636936,-5.336261,-5.179026,2.300798,0.630051,3.172496,1.822476,3.548014,-2.274592,1.081127,5.330329,-1.677556,2.305348,-2.000897,2.488316,3.827746,-5.308829,-7.164774,5.260701,-3.538948,-6.059221,4.865445,-1.265641,-6.076707,7.272653,1.710782,-1.890963,7.831144], dtype = "float64")#candidate|2437|(260,)|const|float64
const_2438 = relay.const([[8,9,7,7,9,-7,7,5,-8,1,7,-2,-2,-5,-6,-3,7,6],[-4,-2,-4,-5,8,4,4,-7,9,-8,-8,-8,-10,-9,-3,-4,7,-1],[7,-3,-4,5,2,9,-1,4,9,-6,-3,9,9,4,-1,10,-10,5],[9,4,-1,-5,-9,4,1,1,4,-9,-3,-10,7,-4,-4,-1,-8,6],[-7,4,10,-5,7,-2,-6,-3,-5,3,4,10,-6,-2,-7,4,1,-9],[-7,1,-10,4,-5,5,1,-3,5,6,6,6,6,7,-1,8,3,-9],[-4,9,1,1,-3,-8,10,10,1,9,-9,5,-5,5,2,-2,-8,-8],[-6,2,5,-8,5,3,7,1,10,-5,9,-4,-7,-7,-7,5,-4,-1]], dtype = "int64")#candidate|2438|(8, 18)|const|int64
call_2436 = relay.TupleGetItem(func_1082_call(relay.reshape(const_2437.astype('float64'), [13, 10, 2]), relay.reshape(const_2438.astype('int64'), [24, 6]), ), 4)
call_2439 = relay.TupleGetItem(func_1086_call(relay.reshape(const_2437.astype('float64'), [13, 10, 2]), relay.reshape(const_2438.astype('int64'), [24, 6]), ), 4)
func_2059_call = mod.get_global_var('func_2059')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_2451 = func_2059_call()
call_2452 = func_2059_call()
func_1082_call = mod.get_global_var('func_1082')
func_1086_call = mutated_mod.get_global_var('func_1086')
call_2455 = relay.TupleGetItem(func_1082_call(relay.reshape(const_2437.astype('float64'), [13, 10, 2]), relay.reshape(const_2438.astype('int64'), [24, 6]), ), 0)
call_2456 = relay.TupleGetItem(func_1086_call(relay.reshape(const_2437.astype('float64'), [13, 10, 2]), relay.reshape(const_2438.astype('int64'), [24, 6]), ), 0)
var_2457 = relay.var("var_2457", dtype = "int64", shape = (8, 18))#candidate|2457|(8, 18)|var|int64
bop_2458 = relay.right_shift(const_2438.astype('int32'), relay.reshape(var_2457.astype('int32'), relay.shape_of(const_2438))) # shape=(8, 18)
output = relay.Tuple([call_2420,call_2436,const_2437,call_2451,call_2455,bop_2458,])
output2 = relay.Tuple([call_2421,call_2439,const_2437,call_2452,call_2456,bop_2458,])
func_2467 = relay.Function([var_2457,], output)
mod['func_2467'] = func_2467
mod = relay.transform.InferType()(mod)
mutated_mod['func_2467'] = func_2467
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2468 = relay.var("var_2468", dtype = "int64", shape = (8, 18))#candidate|2468|(8, 18)|var|int64
func_2467_call = mutated_mod.get_global_var('func_2467')
call_2469 = func_2467_call(var_2468)
output = call_2469
func_2470 = relay.Function([var_2468], output)
mutated_mod['func_2470'] = func_2470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2119_call = mutated_mod.get_global_var('func_2119')
call_2523 = relay.TupleGetItem(func_2118_call(), 0)
call_2524 = relay.TupleGetItem(func_2119_call(), 0)
func_1842_call = mod.get_global_var('func_1842')
func_1844_call = mutated_mod.get_global_var('func_1844')
var_2530 = relay.var("var_2530", dtype = "int64", shape = (144,))#candidate|2530|(144,)|var|int64
call_2529 = relay.TupleGetItem(func_1842_call(relay.reshape(var_2530.astype('int64'), [144,])), 0)
call_2531 = relay.TupleGetItem(func_1844_call(relay.reshape(var_2530.astype('int64'), [144,])), 0)
output = relay.Tuple([call_2523,call_2529,var_2530,])
output2 = relay.Tuple([call_2524,call_2531,var_2530,])
func_2534 = relay.Function([var_2530,], output)
mod['func_2534'] = func_2534
mod = relay.transform.InferType()(mod)
mutated_mod['func_2534'] = func_2534
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2535 = relay.var("var_2535", dtype = "int64", shape = (144,))#candidate|2535|(144,)|var|int64
func_2534_call = mutated_mod.get_global_var('func_2534')
call_2536 = func_2534_call(var_2535)
output = call_2536
func_2537 = relay.Function([var_2535], output)
mutated_mod['func_2537'] = func_2537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_2554 = func_1978_call()
call_2555 = func_1978_call()
func_2138_call = mod.get_global_var('func_2138')
func_2141_call = mutated_mod.get_global_var('func_2141')
const_2561 = relay.const([-7,6,6,10,-7,-5,-5,3], dtype = "uint8")#candidate|2561|(8,)|const|uint8
var_2562 = relay.var("var_2562", dtype = "uint8", shape = (448,))#candidate|2562|(448,)|var|uint8
call_2560 = relay.TupleGetItem(func_2138_call(relay.reshape(const_2561.astype('uint8'), [1, 1, 8]), relay.reshape(var_2562.astype('uint8'), [4, 14, 8]), ), 0)
call_2563 = relay.TupleGetItem(func_2141_call(relay.reshape(const_2561.astype('uint8'), [1, 1, 8]), relay.reshape(var_2562.astype('uint8'), [4, 14, 8]), ), 0)
output = relay.Tuple([call_2554,call_2560,const_2561,var_2562,])
output2 = relay.Tuple([call_2555,call_2563,const_2561,var_2562,])
func_2566 = relay.Function([var_2562,], output)
mod['func_2566'] = func_2566
mod = relay.transform.InferType()(mod)
mutated_mod['func_2566'] = func_2566
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2567 = relay.var("var_2567", dtype = "uint8", shape = (448,))#candidate|2567|(448,)|var|uint8
func_2566_call = mutated_mod.get_global_var('func_2566')
call_2568 = func_2566_call(var_2567)
output = call_2568
func_2569 = relay.Function([var_2567], output)
mutated_mod['func_2569'] = func_2569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2364_call = mod.get_global_var('func_2364')
func_2366_call = mutated_mod.get_global_var('func_2366')
call_2628 = relay.TupleGetItem(func_2364_call(), 0)
call_2629 = relay.TupleGetItem(func_2366_call(), 0)
uop_2663 = relay.acosh(call_2628.astype('float32')) # shape=(12, 13, 5)
uop_2665 = relay.acosh(call_2629.astype('float32')) # shape=(12, 13, 5)
output = relay.Tuple([uop_2663,])
output2 = relay.Tuple([uop_2665,])
func_2666 = relay.Function([], output)
mod['func_2666'] = func_2666
mod = relay.transform.InferType()(mod)
output = func_2666()
func_2667 = relay.Function([], output)
mutated_mod['func_2667'] = func_2667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2059_call = mod.get_global_var('func_2059')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_2678 = func_2059_call()
call_2679 = func_2059_call()
uop_2688 = relay.log2(call_2678.astype('float64')) # shape=(12, 13, 5)
uop_2690 = relay.log2(call_2679.astype('float64')) # shape=(12, 13, 5)
func_2364_call = mod.get_global_var('func_2364')
func_2366_call = mutated_mod.get_global_var('func_2366')
call_2699 = relay.TupleGetItem(func_2364_call(), 0)
call_2700 = relay.TupleGetItem(func_2366_call(), 0)
output = relay.Tuple([uop_2688,call_2699,])
output2 = relay.Tuple([uop_2690,call_2700,])
func_2715 = relay.Function([], output)
mod['func_2715'] = func_2715
mod = relay.transform.InferType()(mod)
mutated_mod['func_2715'] = func_2715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mutated_mod.get_global_var('func_2715')
call_2716 = func_2715_call()
output = call_2716
func_2717 = relay.Function([], output)
mutated_mod['func_2717'] = func_2717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mod.get_global_var('func_2715')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_2737 = relay.TupleGetItem(func_2715_call(), 0)
call_2738 = relay.TupleGetItem(func_2717_call(), 0)
var_2739 = relay.var("var_2739", dtype = "float64", shape = (12, 13, 5))#candidate|2739|(12, 13, 5)|var|float64
bop_2740 = relay.greater(call_2737.astype('bool'), relay.reshape(var_2739.astype('bool'), relay.shape_of(call_2737))) # shape=(12, 13, 5)
bop_2743 = relay.greater(call_2738.astype('bool'), relay.reshape(var_2739.astype('bool'), relay.shape_of(call_2738))) # shape=(12, 13, 5)
output = bop_2740
output2 = bop_2743
func_2744 = relay.Function([var_2739,], output)
mod['func_2744'] = func_2744
mod = relay.transform.InferType()(mod)
mutated_mod['func_2744'] = func_2744
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2745 = relay.var("var_2745", dtype = "float64", shape = (12, 13, 5))#candidate|2745|(12, 13, 5)|var|float64
func_2744_call = mutated_mod.get_global_var('func_2744')
call_2746 = func_2744_call(var_2745)
output = call_2746
func_2747 = relay.Function([var_2745], output)
mutated_mod['func_2747'] = func_2747
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2808 = relay.var("var_2808", dtype = "uint32", shape = (2, 8, 14))#candidate|2808|(2, 8, 14)|var|uint32
const_2809 = relay.const([[[-6,-1,5,2,-2,-2,10,-6,7,-8,-9,-4,10,5],[6,1,-4,-10,6,6,-6,6,6,-5,-3,-6,7,7],[-8,3,-10,-10,9,-3,6,2,10,2,-2,-8,1,7],[-6,7,-9,-9,-5,3,-1,-10,6,8,1,-1,-6,-6],[-3,-5,7,2,-2,-5,10,-4,2,5,-5,-5,3,-7],[-5,8,-6,-6,4,-1,8,7,3,8,-3,-7,-8,-3],[8,-1,-5,-2,1,7,7,6,-5,-5,4,6,-8,8],[-5,10,2,-6,-10,9,-8,9,-6,1,9,10,1,3]],[[-10,9,1,-9,-1,-4,-3,4,-1,7,9,-9,-7,-2],[-6,2,-5,1,10,-10,5,4,7,1,1,5,9,-6],[4,7,-2,-8,-9,2,-1,10,8,-5,-2,-5,6,2],[-6,4,-8,-2,9,7,2,-9,4,8,5,-9,10,9],[3,-3,-2,1,-7,10,4,6,-7,-9,-6,4,-10,8],[6,6,-9,-10,-6,-10,-5,-9,-8,-5,9,7,-10,-7],[-4,10,2,-9,7,-1,2,5,4,4,-10,8,-6,-7],[7,-9,-8,-1,7,1,-1,6,-8,9,-9,-5,-6,10]]], dtype = "uint32")#candidate|2809|(2, 8, 14)|const|uint32
bop_2810 = relay.greater_equal(var_2808.astype('bool'), relay.reshape(const_2809.astype('bool'), relay.shape_of(var_2808))) # shape=(2, 8, 14)
func_2416_call = mod.get_global_var('func_2416')
func_2418_call = mutated_mod.get_global_var('func_2418')
var_2814 = relay.var("var_2814", dtype = "uint8", shape = (1, 8))#candidate|2814|(1, 8)|var|uint8
call_2813 = relay.TupleGetItem(func_2416_call(relay.reshape(var_2814.astype('uint8'), [8,])), 2)
call_2815 = relay.TupleGetItem(func_2418_call(relay.reshape(var_2814.astype('uint8'), [8,])), 2)
uop_2816 = relay.sqrt(bop_2810.astype('float32')) # shape=(2, 8, 14)
func_820_call = mod.get_global_var('func_820')
func_823_call = mutated_mod.get_global_var('func_823')
const_2820 = relay.const([6,4,-3,-6,5,6,8,-6,9,3,-3,-9,-3,9,-7,-2,-8,5,-1,10,-2,-9,8,-5,5,-6,-4,-9,8,-6,6,-10,-4,-8,7,9,2,8,-5,-6,2,1,7,-6,7,1,-9,10,5,-6,-5,2,3,9,4,8,-9,5,-8,2,2,-1,-4,2,-10,-2,5,6,5,-6,3,6,-5,-8,1,-8,-1,3,1,-7,-6,-8,4,-9,-1,7,-10,-4,3,8,9,-8,-7,8,-8,1,-3,-7,4,5,2,7,-4,-7,-2,10,2,-4,10,-7,8,-6,-8,9,8,5,-5,-4,-5,5,-7,-7,-4,8,-4,6,-4,2,-5,3,-4,-5,-3,7,1,5,6,9,-4,5,5,-9,-2,-2], dtype = "int64")#candidate|2820|(144,)|const|int64
call_2819 = func_820_call(relay.reshape(const_2820.astype('int64'), [3, 12, 4]), relay.reshape(const_2820.astype('int64'), [3, 12, 4]), )
call_2821 = func_820_call(relay.reshape(const_2820.astype('int64'), [3, 12, 4]), relay.reshape(const_2820.astype('int64'), [3, 12, 4]), )
func_2467_call = mod.get_global_var('func_2467')
func_2470_call = mutated_mod.get_global_var('func_2470')
call_2827 = relay.TupleGetItem(func_2467_call(relay.reshape(const_2820.astype('int64'), [8, 18])), 2)
call_2828 = relay.TupleGetItem(func_2470_call(relay.reshape(const_2820.astype('int64'), [8, 18])), 2)
func_2715_call = mod.get_global_var('func_2715')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_2864 = relay.TupleGetItem(func_2715_call(), 1)
call_2865 = relay.TupleGetItem(func_2717_call(), 1)
bop_2869 = relay.logical_or(uop_2816.astype('bool'), relay.reshape(bop_2810.astype('bool'), relay.shape_of(uop_2816))) # shape=(2, 8, 14)
output = relay.Tuple([call_2813,var_2814,call_2819,const_2820,call_2827,call_2864,bop_2869,])
output2 = relay.Tuple([call_2815,var_2814,call_2821,const_2820,call_2828,call_2865,bop_2869,])
func_2878 = relay.Function([var_2808,var_2814,], output)
mod['func_2878'] = func_2878
mod = relay.transform.InferType()(mod)
mutated_mod['func_2878'] = func_2878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2878_call = mutated_mod.get_global_var('func_2878')
var_2880 = relay.var("var_2880", dtype = "uint32", shape = (2, 8, 14))#candidate|2880|(2, 8, 14)|var|uint32
var_2881 = relay.var("var_2881", dtype = "uint8", shape = (1, 8))#candidate|2881|(1, 8)|var|uint8
call_2879 = func_2878_call(var_2880,var_2881,)
output = call_2879
func_2882 = relay.Function([var_2880,var_2881,], output)
mutated_mod['func_2882'] = func_2882
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2913 = relay.var("var_2913", dtype = "float64", shape = (12, 11, 10))#candidate|2913|(12, 11, 10)|var|float64
uop_2914 = relay.tan(var_2913.astype('float64')) # shape=(12, 11, 10)
bop_2919 = relay.not_equal(uop_2914.astype('bool'), relay.reshape(var_2913.astype('bool'), relay.shape_of(uop_2914))) # shape=(12, 11, 10)
func_2534_call = mod.get_global_var('func_2534')
func_2537_call = mutated_mod.get_global_var('func_2537')
var_2924 = relay.var("var_2924", dtype = "int64", shape = (144,))#candidate|2924|(144,)|var|int64
call_2923 = relay.TupleGetItem(func_2534_call(relay.reshape(var_2924.astype('int64'), [144,])), 1)
call_2925 = relay.TupleGetItem(func_2537_call(relay.reshape(var_2924.astype('int64'), [144,])), 1)
output = relay.Tuple([bop_2919,call_2923,var_2924,])
output2 = relay.Tuple([bop_2919,call_2925,var_2924,])
func_2928 = relay.Function([var_2913,var_2924,], output)
mod['func_2928'] = func_2928
mod = relay.transform.InferType()(mod)
var_2929 = relay.var("var_2929", dtype = "float64", shape = (12, 11, 10))#candidate|2929|(12, 11, 10)|var|float64
var_2930 = relay.var("var_2930", dtype = "int64", shape = (144,))#candidate|2930|(144,)|var|int64
output = func_2928(var_2929,var_2930,)
func_2931 = relay.Function([var_2929,var_2930,], output)
mutated_mod['func_2931'] = func_2931
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2933 = relay.var("var_2933", dtype = "float64", shape = (7, 16, 11))#candidate|2933|(7, 16, 11)|var|float64
uop_2934 = relay.asinh(var_2933.astype('float64')) # shape=(7, 16, 11)
uop_2937 = relay.erf(uop_2934.astype('float32')) # shape=(7, 16, 11)
output = uop_2937
output2 = uop_2937
func_2939 = relay.Function([var_2933,], output)
mod['func_2939'] = func_2939
mod = relay.transform.InferType()(mod)
mutated_mod['func_2939'] = func_2939
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2940 = relay.var("var_2940", dtype = "float64", shape = (7, 16, 11))#candidate|2940|(7, 16, 11)|var|float64
func_2939_call = mutated_mod.get_global_var('func_2939')
call_2941 = func_2939_call(var_2940)
output = call_2941
func_2942 = relay.Function([var_2940], output)
mutated_mod['func_2942'] = func_2942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mod.get_global_var('func_2715')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_2951 = relay.TupleGetItem(func_2715_call(), 0)
call_2952 = relay.TupleGetItem(func_2717_call(), 0)
func_2138_call = mod.get_global_var('func_2138')
func_2141_call = mutated_mod.get_global_var('func_2141')
const_2956 = relay.const([[8,4],[-3,9],[6,7],[3,-10]], dtype = "uint8")#candidate|2956|(4, 2)|const|uint8
var_2957 = relay.var("var_2957", dtype = "uint8", shape = (448,))#candidate|2957|(448,)|var|uint8
call_2955 = relay.TupleGetItem(func_2138_call(relay.reshape(const_2956.astype('uint8'), [1, 1, 8]), relay.reshape(var_2957.astype('uint8'), [4, 14, 8]), ), 1)
call_2958 = relay.TupleGetItem(func_2141_call(relay.reshape(const_2956.astype('uint8'), [1, 1, 8]), relay.reshape(var_2957.astype('uint8'), [4, 14, 8]), ), 1)
var_2960 = relay.var("var_2960", dtype = "float64", shape = (12, 13, 5))#candidate|2960|(12, 13, 5)|var|float64
bop_2961 = relay.minimum(call_2951.astype('float64'), relay.reshape(var_2960.astype('float64'), relay.shape_of(call_2951))) # shape=(12, 13, 5)
bop_2964 = relay.minimum(call_2952.astype('float64'), relay.reshape(var_2960.astype('float64'), relay.shape_of(call_2952))) # shape=(12, 13, 5)
output = relay.Tuple([call_2955,const_2956,var_2957,bop_2961,])
output2 = relay.Tuple([call_2958,const_2956,var_2957,bop_2964,])
func_2970 = relay.Function([var_2957,var_2960,], output)
mod['func_2970'] = func_2970
mod = relay.transform.InferType()(mod)
var_2971 = relay.var("var_2971", dtype = "uint8", shape = (448,))#candidate|2971|(448,)|var|uint8
var_2972 = relay.var("var_2972", dtype = "float64", shape = (12, 13, 5))#candidate|2972|(12, 13, 5)|var|float64
output = func_2970(var_2971,var_2972,)
func_2973 = relay.Function([var_2971,var_2972,], output)
mutated_mod['func_2973'] = func_2973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2059_call = mod.get_global_var('func_2059')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_2977 = func_2059_call()
call_2978 = func_2059_call()
output = call_2977
output2 = call_2978
func_2985 = relay.Function([], output)
mod['func_2985'] = func_2985
mod = relay.transform.InferType()(mod)
output = func_2985()
func_2986 = relay.Function([], output)
mutated_mod['func_2986'] = func_2986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2666_call = mod.get_global_var('func_2666')
func_2667_call = mutated_mod.get_global_var('func_2667')
call_2997 = relay.TupleGetItem(func_2666_call(), 0)
call_2998 = relay.TupleGetItem(func_2667_call(), 0)
output = call_2997
output2 = call_2998
func_3019 = relay.Function([], output)
mod['func_3019'] = func_3019
mod = relay.transform.InferType()(mod)
mutated_mod['func_3019'] = func_3019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3019_call = mutated_mod.get_global_var('func_3019')
call_3020 = func_3019_call()
output = call_3020
func_3021 = relay.Function([], output)
mutated_mod['func_3021'] = func_3021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2119_call = mutated_mod.get_global_var('func_2119')
call_3077 = relay.TupleGetItem(func_2118_call(), 0)
call_3078 = relay.TupleGetItem(func_2119_call(), 0)
output = relay.Tuple([call_3077,])
output2 = relay.Tuple([call_3078,])
func_3079 = relay.Function([], output)
mod['func_3079'] = func_3079
mod = relay.transform.InferType()(mod)
output = func_3079()
func_3080 = relay.Function([], output)
mutated_mod['func_3080'] = func_3080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2119_call = mutated_mod.get_global_var('func_2119')
call_3093 = relay.TupleGetItem(func_2118_call(), 0)
call_3094 = relay.TupleGetItem(func_2119_call(), 0)
output = call_3093
output2 = call_3094
func_3102 = relay.Function([], output)
mod['func_3102'] = func_3102
mod = relay.transform.InferType()(mod)
output = func_3102()
func_3103 = relay.Function([], output)
mutated_mod['func_3103'] = func_3103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mod.get_global_var('func_2715')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_3143 = relay.TupleGetItem(func_2715_call(), 1)
call_3144 = relay.TupleGetItem(func_2717_call(), 1)
func_100_call = mod.get_global_var('func_100')
func_102_call = mutated_mod.get_global_var('func_102')
var_3151 = relay.var("var_3151", dtype = "float32", shape = (2145,))#candidate|3151|(2145,)|var|float32
call_3150 = func_100_call(relay.reshape(var_3151.astype('float32'), [13, 11, 15]))
call_3152 = func_100_call(relay.reshape(var_3151.astype('float32'), [13, 11, 15]))
output = relay.Tuple([call_3143,call_3150,var_3151,])
output2 = relay.Tuple([call_3144,call_3152,var_3151,])
func_3180 = relay.Function([var_3151,], output)
mod['func_3180'] = func_3180
mod = relay.transform.InferType()(mod)
mutated_mod['func_3180'] = func_3180
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3181 = relay.var("var_3181", dtype = "float32", shape = (2145,))#candidate|3181|(2145,)|var|float32
func_3180_call = mutated_mod.get_global_var('func_3180')
call_3182 = func_3180_call(var_3181)
output = call_3182
func_3183 = relay.Function([var_3181], output)
mutated_mod['func_3183'] = func_3183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3222 = relay.var("var_3222", dtype = "float32", shape = (13, 1, 16))#candidate|3222|(13, 1, 16)|var|float32
uop_3223 = relay.sinh(var_3222.astype('float32')) # shape=(13, 1, 16)
func_820_call = mod.get_global_var('func_820')
func_823_call = mutated_mod.get_global_var('func_823')
var_3226 = relay.var("var_3226", dtype = "int64", shape = (24, 6))#candidate|3226|(24, 6)|var|int64
call_3225 = func_820_call(relay.reshape(var_3226.astype('int64'), [3, 12, 4]), relay.reshape(var_3226.astype('int64'), [3, 12, 4]), )
call_3227 = func_820_call(relay.reshape(var_3226.astype('int64'), [3, 12, 4]), relay.reshape(var_3226.astype('int64'), [3, 12, 4]), )
func_3079_call = mod.get_global_var('func_3079')
func_3080_call = mutated_mod.get_global_var('func_3080')
call_3230 = relay.TupleGetItem(func_3079_call(), 0)
call_3231 = relay.TupleGetItem(func_3080_call(), 0)
output = relay.Tuple([uop_3223,call_3225,var_3226,call_3230,])
output2 = relay.Tuple([uop_3223,call_3227,var_3226,call_3231,])
func_3236 = relay.Function([var_3222,var_3226,], output)
mod['func_3236'] = func_3236
mod = relay.transform.InferType()(mod)
mutated_mod['func_3236'] = func_3236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3236_call = mutated_mod.get_global_var('func_3236')
var_3238 = relay.var("var_3238", dtype = "float32", shape = (13, 1, 16))#candidate|3238|(13, 1, 16)|var|float32
var_3239 = relay.var("var_3239", dtype = "int64", shape = (24, 6))#candidate|3239|(24, 6)|var|int64
call_3237 = func_3236_call(var_3238,var_3239,)
output = call_3237
func_3240 = relay.Function([var_3238,var_3239,], output)
mutated_mod['func_3240'] = func_3240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2985_call = mod.get_global_var('func_2985')
func_2986_call = mutated_mod.get_global_var('func_2986')
call_3270 = func_2985_call()
call_3271 = func_2985_call()
uop_3274 = relay.log(call_3270.astype('float32')) # shape=(12, 13, 5)
uop_3276 = relay.log(call_3271.astype('float32')) # shape=(12, 13, 5)
output = uop_3274
output2 = uop_3276
func_3290 = relay.Function([], output)
mod['func_3290'] = func_3290
mod = relay.transform.InferType()(mod)
mutated_mod['func_3290'] = func_3290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3290_call = mutated_mod.get_global_var('func_3290')
call_3291 = func_3290_call()
output = call_3291
func_3292 = relay.Function([], output)
mutated_mod['func_3292'] = func_3292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2666_call = mod.get_global_var('func_2666')
func_2667_call = mutated_mod.get_global_var('func_2667')
call_3357 = relay.TupleGetItem(func_2666_call(), 0)
call_3358 = relay.TupleGetItem(func_2667_call(), 0)
output = call_3357
output2 = call_3358
func_3366 = relay.Function([], output)
mod['func_3366'] = func_3366
mod = relay.transform.InferType()(mod)
output = func_3366()
func_3367 = relay.Function([], output)
mutated_mod['func_3367'] = func_3367
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3370 = relay.const([[[-4.630961,-3.327890,-5.388590,-0.267422,1.781738,-6.124949,-4.966856,-8.349971,7.957753,6.885916,2.181311,0.653575,5.489486,2.308817],[8.550899,2.079128,0.485731,-0.772849,1.546173,-6.801286,-7.398325,-8.941966,7.566221,5.637536,4.044555,3.855218,-3.985204,5.360320],[-6.686000,1.808028,-2.629046,8.401140,-0.762026,1.481543,8.194099,-6.450463,-0.499281,-4.147986,-8.204859,5.055187,1.388115,-5.698600],[0.860002,5.979233,-2.711839,8.755431,-9.950242,1.630790,4.552134,-9.886964,-9.668676,-5.713619,5.061713,3.297414,-2.916416,3.079641],[4.142261,8.220856,-8.107669,8.497910,8.186948,9.164516,6.704197,2.905378,1.514402,6.164834,-1.696304,-7.098167,8.967044,2.816991],[-6.729333,0.522551,-6.415929,2.370744,3.536799,-5.652267,1.852621,-9.095887,-5.029791,9.629118,5.910850,2.995657,6.549303,-9.344948],[5.986253,-7.411845,-9.109132,-9.226033,2.627591,2.518935,-0.687680,0.464867,1.006938,-7.225841,0.168179,1.174082,7.167394,9.899227],[9.289051,7.010982,4.005054,-0.790886,3.977640,4.561944,-0.189131,9.951559,-2.392251,8.219853,4.642584,9.946461,9.391489,6.485145],[3.000631,9.156812,-0.765263,-5.521865,9.248815,-2.209006,3.906635,0.310967,-3.593598,-9.906834,7.042238,8.701317,5.110603,-7.073071],[5.014008,2.361365,-3.238356,5.964529,3.583799,-2.605390,1.174252,3.268361,-2.904674,-5.496590,-2.534407,0.108388,-6.207956,-6.286114],[0.306579,5.116608,-1.339207,-1.150938,4.542143,-8.636614,8.830691,7.850305,1.809706,4.369634,0.811878,-2.203233,-6.856282,-5.297771],[-2.557427,-8.213525,5.996398,0.942293,3.565940,-2.967846,8.867781,3.251584,3.040139,5.287302,-8.232863,3.402418,6.657058,8.268239],[6.121072,-5.950813,-2.169140,-9.223994,-2.049934,8.488245,5.417612,6.245901,-4.050898,1.799046,3.114269,-8.751394,7.121305,-2.887755],[-7.474227,-4.792227,8.606221,9.097164,6.589097,1.058788,0.231673,3.709577,-0.397347,-0.504958,-4.489188,-7.643106,-2.311692,1.458987]],[[-4.285568,-5.568674,1.033044,0.840628,-0.539392,-2.340294,-5.669519,8.495042,-3.861333,-4.808189,2.673912,-8.013219,-3.503388,-6.362162],[4.776632,-8.625129,9.665678,-7.891891,3.160942,6.380986,8.825979,3.942424,7.171537,7.564087,-1.837179,-6.983008,-1.924888,2.231243],[8.445410,-4.615933,3.214341,2.422698,2.379330,5.271489,0.937279,-3.864318,-8.189661,-8.935345,3.379366,1.224665,0.579574,9.880653],[-6.800975,-5.214982,-5.577072,1.851365,4.528459,-2.786121,-4.777431,0.715158,-1.146458,-6.414307,4.109363,-6.039290,9.153295,-8.170575],[5.153945,-6.911917,-6.867273,-9.939708,2.733698,-2.839850,-4.298893,-1.937457,-7.901042,-6.343019,4.693807,8.367266,3.205851,2.992877],[-2.208223,4.039788,-8.629253,5.236838,-4.528545,9.237612,1.504994,-1.017009,5.204705,5.777838,-0.134881,-9.739700,-4.153984,-9.443901],[-5.310466,-2.229278,-6.903792,-4.691066,-6.217520,8.239579,8.419957,-6.865307,4.835257,-4.934829,1.647279,-3.581333,3.209658,-3.105782],[9.341553,4.036745,-0.940111,-5.368971,8.171412,3.713709,-6.945903,-9.681355,-2.347848,5.612523,4.433664,-0.138763,1.145480,-9.208892],[3.882758,-8.047735,-4.148414,-2.554822,-9.458653,4.762091,-0.141652,7.794201,3.926245,-4.585190,-1.223740,2.882363,-7.249854,4.266379],[6.690011,-2.897346,-9.277875,7.788190,1.585282,7.131468,-6.964180,6.903451,-2.348539,4.439693,2.858311,3.014001,9.603308,3.969412],[-2.859167,6.191864,1.068930,-9.835774,2.084882,-0.021008,-2.062366,-7.284087,-7.804333,0.408809,-9.631613,-8.996248,-2.821469,9.871215],[6.750128,8.391151,0.093917,4.424495,0.041498,-2.017989,2.196548,8.273746,4.263633,-0.538181,4.681092,-7.009795,-4.643457,6.523239],[-2.985400,2.406395,-4.959462,3.493839,5.188436,-1.692075,-0.524843,0.389580,4.446410,4.910865,-3.855868,-9.910237,0.788850,0.987212],[2.896951,6.886856,-7.290954,3.134259,8.267053,-6.218708,9.084056,4.628559,-7.036223,8.501229,3.978297,-7.273303,-1.494622,-6.218904]],[[5.582069,-7.012970,-3.493247,-5.836794,-6.330557,9.716444,-1.004096,-3.161381,-2.758386,5.665697,4.430343,-8.679067,-6.001497,-1.424838],[9.172511,-9.085983,3.092441,-3.857540,-2.047230,-4.769633,-9.391534,2.993828,8.505509,8.033646,8.322354,-3.232762,0.460707,-1.992446],[5.740242,0.685287,8.612581,1.882787,-1.322078,-1.184336,-7.992412,3.939463,3.041199,0.560679,-3.053612,-5.030632,-2.445595,-8.531934],[-7.926159,4.872921,-7.944230,-3.629551,-5.558267,-5.765063,5.495552,-3.244015,7.543373,6.793929,-8.775594,1.836217,1.311060,-0.679240],[7.926422,8.880544,7.060364,4.939362,1.853087,7.725648,-7.128426,-1.401038,1.526329,0.991285,-6.654183,7.218920,-1.556742,-7.907942],[-0.568695,8.024198,2.156797,2.367604,9.816094,-9.661047,5.370709,-1.831764,3.354676,6.899281,1.047592,9.639383,6.549027,-3.082060],[-5.411194,3.720399,-6.915557,-2.819607,-7.382379,-3.886388,-8.067642,-5.119624,6.807874,2.206315,-0.905731,6.765541,-9.460044,1.589911],[1.351576,3.701906,-9.528256,-5.665367,7.545083,5.837560,6.419385,1.616788,-9.808068,1.653255,-8.055816,4.917698,4.160964,4.261218],[7.068793,-8.822865,-0.269985,-4.560735,-5.041071,4.798903,0.055050,9.549950,8.847741,9.158242,0.890026,2.698181,4.548938,-7.348723],[7.207535,-5.900701,-5.445584,3.163205,-3.554179,-6.317436,-4.609576,-8.136153,-1.663541,-2.578532,-5.744808,1.635943,-1.661955,-9.647722],[4.087430,2.922163,-9.791312,-7.326792,-5.318138,1.936861,4.659405,6.188569,-7.861608,-0.196440,-7.956068,-5.089038,-2.772200,-7.748319],[-6.694698,-0.803071,6.186525,-0.430259,-0.214507,-0.770711,-5.810951,7.387761,9.043060,7.538032,5.817541,-9.772543,8.886895,-8.784289],[3.848657,-2.306345,5.868751,4.195017,-9.863476,-8.794004,-1.208350,4.812254,9.062777,6.038430,-8.264997,-0.026957,-4.267289,0.018932],[6.641820,1.892128,-8.454934,-6.300936,-5.262797,-6.308499,0.947654,0.360541,6.973759,-9.720783,-2.389161,-7.679952,-1.402251,-2.173211]]], dtype = "float64")#candidate|3370|(3, 14, 14)|const|float64
var_3371 = relay.var("var_3371", dtype = "float64", shape = (3, 14, 14))#candidate|3371|(3, 14, 14)|var|float64
bop_3372 = relay.floor_mod(const_3370.astype('float64'), relay.reshape(var_3371.astype('float64'), relay.shape_of(const_3370))) # shape=(3, 14, 14)
func_2970_call = mod.get_global_var('func_2970')
func_2973_call = mutated_mod.get_global_var('func_2973')
var_3376 = relay.var("var_3376", dtype = "uint8", shape = (56, 8))#candidate|3376|(56, 8)|var|uint8
const_3377 = relay.const([-3.693531,6.538768,7.170150,2.635108,-6.006276,-6.720709,2.229422,-5.940158,-2.428072,-8.157381,2.175908,-3.721699,0.687558,1.417972,-4.091229,0.814603,-5.537346,6.159462,-1.056098,-4.729979,-0.825583,3.591093,3.128592,4.363118,4.001738,-8.306998,-9.184318,-4.027764,8.087302,-4.156994,8.163559,-1.663771,9.234402,6.458739,-5.839993,-8.911773,8.220263,-1.653397,-4.317566,-9.021717,1.582774,-0.905445,0.981897,3.624389,6.571016,3.022223,0.440438,-0.133730,0.616736,7.256594,3.797323,7.957524,0.224087,-7.920406,8.302729,5.497108,6.401738,-7.130829,3.201069,9.683503,4.506144,6.963292,-0.896037,3.715981,7.249963,0.049234,2.638975,6.386867,-0.712692,-8.242826,0.291799,-5.918485,9.645551,6.621290,-8.457780,6.060188,8.747221,7.686099,1.006844,-0.484221,9.286480,2.975706,-2.518680,1.774450,-6.693215,-4.657579,5.382916,8.238680,6.468838,6.999191,6.235002,2.419383,7.586711,7.678379,-3.118486,-3.745642,3.338484,-8.390883,-6.977123,9.373413,3.426421,-5.537788,-5.819840,7.734363,6.572694,-9.950560,-4.688923,4.786850,-4.662968,-4.383521,-2.189704,-2.445733,-2.518381,1.940898,-2.790018,-8.413774,-1.624210,-9.869327,-8.421538,-7.718566,2.836047,-2.451960,2.237305,5.927178,-5.594246,-9.787692,-9.249767,2.558422,5.780433,-6.350767,7.089262,9.121864,4.475012,-9.546056,9.054047,8.352615,6.001585,-3.756778,-2.188626,-5.366598,9.769831,2.766829,6.945039,0.730265,-2.099101,-3.366613,-4.582955,7.960503,-3.721904,7.735814,1.496506,-5.286091,-0.008782,6.388932,-7.603135,-7.788480,-6.765279,-6.329796,-5.841418,-2.289376,5.227337,-4.030324,-3.466520,1.232128,8.129919,-7.590022,-7.825190,-4.257994,-5.927286,5.541078,1.891153,-8.087954,5.614827,-1.413351,-8.552603,-8.070430,6.542040,8.017467,9.506918,-4.298236,6.474074,9.894066,5.641419,1.614808,3.559893,2.177464,-5.100656,-7.480457,-2.630174,4.248292,9.570668,-0.558840,-6.602622,-8.927157,-3.170123,-1.481589,1.417419,3.027632,1.027124,-8.458979,6.823430,-9.765182,-0.926560,-0.960804,2.238827,1.414627,9.742281,0.017332,-3.652876,5.527205,0.209429,-7.650196,4.840569,3.516154,-7.954992,2.126686,0.451960,6.462498,-1.553756,-9.636365,9.257521,-6.331303,3.525814,-6.965356,1.817185,9.801349,-3.668354,-4.669622,3.232842,-2.221683,4.273291,-2.833630,0.010176,-4.938964,7.558152,9.752097,8.322998,4.439520,-3.226307,-4.824762,-0.210113,-1.517454,8.040679,-4.889014,-0.974288,6.617571,4.310485,6.645287,7.002153,-8.256981,-4.438546,-7.802093,-8.809396,2.015283,9.174896,-4.433584,8.176728,-0.632803,1.241690,6.892713,-6.547654,-9.701406,-5.725627,-5.165934,6.862654,-9.164526,5.244249,9.749752,6.608265,-8.891201,-7.727064,-1.685747,6.286222,3.084216,7.812127,-1.228182,7.930153,8.546895,-5.300516,0.510543,5.856731,-3.264284,-5.221970,-0.546981,-7.435686,4.652728,7.579102,-2.196972,-0.475061,-9.257360,-2.568822,9.682466,6.894890,-0.251665,6.033632,4.094020,5.537703,4.721311,-7.590156,8.483885,-0.286069,1.043025,-8.021941,-8.349411,8.068594,5.781717,2.024828,4.846029,1.286846,7.830068,-8.168422,1.671127,-5.132671,5.825263,-4.396690,6.061105,4.843491,1.034164,-6.435556,3.723193,-3.394925,9.512330,8.421420,-9.132206,-3.508256,6.990642,-0.637287,4.645490,5.893888,1.044808,3.806608,-7.513032,-5.191259,9.397953,2.310955,-0.324613,9.129263,-8.597706,7.179800,4.990900,-8.145471,-9.808969,-0.337553,7.608187,-1.862809,8.755058,2.813591,0.344506,1.571278,-3.961101,9.742407,-2.999053,-4.130614,8.166033,1.602522,-3.041168,-1.245043,0.348835,-4.744343,-6.737093,6.947265,-8.302720,-3.202318,-6.101465,-8.394209,-3.733395,-0.661234,-4.396405,0.732210,-5.589470,9.416095,-2.339324,3.035913,-9.081477,-4.880198,-9.320718,-4.397759,-3.639336,-9.300054,3.992656,1.134847,-2.821997,-9.766841,4.478562,4.152493,1.461530,-8.673035,-6.269689,8.138440,5.209648,1.906857,3.979174,-8.599095,-6.235201,6.444259,-2.867278,-5.969172,-8.012906,5.017804,-2.668783,0.518552,7.266414,-5.736813,9.126918,-8.073107,7.674947,-7.357504,-4.937946,7.509315,-3.324825,-1.004172,1.894123,2.793981,2.951262,5.955118,6.744962,6.353213,-1.535652,-0.689947,6.100013,-7.375645,7.149814,-0.134368,-6.375816,-0.117194,-2.257520,2.865970,7.754286,4.732938,6.908757,8.654691,1.003823,-9.181766,-8.741445,4.770099,9.303309,-6.215619,-4.913340,-1.097572,-7.907460,1.664511,6.450745,4.982609,-5.308798,-0.675693,9.110352,-7.048864,-0.396411,2.142628,-1.990400,3.830974,-4.780801,-9.634101,-5.957304,1.596112,9.157527,7.257443,4.797140,-3.848970,8.001297,-1.338346,-5.419492,2.479244,2.103124,3.276548,8.424893,7.466137,-8.820938,-0.054887,1.709134,-3.387953,9.987897,2.282278,-2.505358,-4.662787,-0.555211,-4.245071,4.981158,-4.957129,-5.195485,-9.084100,-9.766648,-8.780467,2.099487,3.883879,-5.578619,-7.877837,5.836096,6.648925,5.794385,8.072212,-0.517541,-8.625079,6.054666,-6.092447,-7.579371,5.840823,-7.832885,3.379787,-8.386528,-9.877691,-7.334464,-1.697391,6.160210,2.200019,6.811181,-6.462868,0.812930,-7.675382,2.686986,-0.180783,3.767941,-9.725652,8.453501,-1.607705,-7.306170,1.589116,9.575976,-3.707070,3.844107,9.619650,-8.316451,-9.421169,-7.858491,-2.600902,6.949474,6.196462,-6.176891,-7.275027,8.779602,-3.047551,-3.667936,6.830496,6.399871,-0.877773,9.983285,-3.511994,2.870061,3.026465,9.353446,-2.054171,4.349076,0.579084,8.356581,8.368222,-3.127962,8.723627,4.292826,-0.821431,-9.778958,9.450801,-5.987600,-3.145740,-2.201504,1.799608,3.593016,-2.959326,7.822841,8.599867,-5.798500,-6.819668,-2.010076,5.091299,-2.182652,-5.073780,-9.173607,-1.530752,2.514680,-3.970003,4.193260,9.544134,7.400173,8.115443,-7.854466,-2.114109,1.177655,6.584430,-3.127746,-3.416251,6.113123,9.924789,-1.906168,-8.962397,-4.567055,-3.726909,0.403033,1.039028,2.534476,5.366505,4.432100,-3.609831,-5.441456,-0.843314,-9.504729,3.540310,8.882527,8.514948,9.060463,-3.447226,4.279017,2.415298,-8.389173,5.117915,4.577012,0.317562,-0.701588,1.222556,-3.032702,2.938733,-6.021190,-6.193282,-6.682244,-8.941460,3.523622,2.270956,5.020053,0.133940,0.821654,2.301042,-8.211655,8.977764,3.703133,5.572597,-7.002098,-2.285395,-7.576425,6.020146,2.336775,-7.788985,-4.106919,3.869651,-9.254527,6.232487,6.857931,-1.572881,-9.919638,7.615982,-3.704574,3.929311,8.305396,-4.984615,-5.420160,-6.658443,6.433875,-5.683101,3.957020,0.632286,0.895886,2.383822,6.954521,-5.724260,-0.342443,5.176450,-9.498114,4.662451,3.122171,6.235969,4.069722,2.185090,-7.224969,-0.127268,7.038762,2.418850,8.788844,0.752489,-5.636470,-4.956834,6.273357,-3.288320,-9.183857,-2.818574,8.670852,3.483534,5.011414,0.622392,-7.915141,4.793791,9.870256,-6.952077,-8.266481,5.784165,7.440419,9.290858,-1.984820,1.429417,3.953093,-5.324682,4.487564,-8.607867,-6.818064,6.463042,1.752943,-4.271729,5.008536,5.536972,-8.625350,9.784339,-9.159689,8.123939,-1.584924,6.582422,-3.631985,-3.700451,5.617668,-1.460472,-0.226160,1.032433,0.601855,-4.479543,-2.075397,-5.604680,-5.139321,6.241448,-4.287121,3.734736,1.779492,-1.016373,-6.119828,4.067490,3.693370,0.441010,5.720784,-2.831112,-9.361393,-7.831130,-7.518179,-8.364534,-1.635922,-3.901178,-7.685786,3.480833,-9.398832,9.485092,-7.619141,2.532386,-2.219122,2.418024,0.725639,-1.031633,-8.486725,-7.520661,4.700779,8.526277,-3.889007,-0.544007,-2.436237,-9.058301,-5.261016,6.193767,5.282993,-9.352037,-0.547341,3.046417,8.597799,9.767750,-8.424779,6.872231,-1.613408,0.539075,-0.357244,9.126562,7.919759,5.441570,9.173188,-7.117692,2.428550,6.419349,-0.777928,6.943663,-2.088184,1.960760,2.532992,1.106801,-9.153219,-4.548785,-4.967948,7.422851,-7.742282,4.207654,1.715860], dtype = "float64")#candidate|3377|(780,)|const|float64
call_3375 = relay.TupleGetItem(func_2970_call(relay.reshape(var_3376.astype('uint8'), [448,]), relay.reshape(const_3377.astype('float64'), [12, 13, 5]), ), 3)
call_3378 = relay.TupleGetItem(func_2973_call(relay.reshape(var_3376.astype('uint8'), [448,]), relay.reshape(const_3377.astype('float64'), [12, 13, 5]), ), 3)
output = relay.Tuple([bop_3372,call_3375,var_3376,const_3377,])
output2 = relay.Tuple([bop_3372,call_3378,var_3376,const_3377,])
func_3380 = relay.Function([var_3371,var_3376,], output)
mod['func_3380'] = func_3380
mod = relay.transform.InferType()(mod)
var_3381 = relay.var("var_3381", dtype = "float64", shape = (3, 14, 14))#candidate|3381|(3, 14, 14)|var|float64
var_3382 = relay.var("var_3382", dtype = "uint8", shape = (56, 8))#candidate|3382|(56, 8)|var|uint8
output = func_3380(var_3381,var_3382,)
func_3383 = relay.Function([var_3381,var_3382,], output)
mutated_mod['func_3383'] = func_3383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_3396 = func_1978_call()
call_3397 = func_1978_call()
output = call_3396
output2 = call_3397
func_3407 = relay.Function([], output)
mod['func_3407'] = func_3407
mod = relay.transform.InferType()(mod)
output = func_3407()
func_3408 = relay.Function([], output)
mutated_mod['func_3408'] = func_3408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2059_call = mod.get_global_var('func_2059')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_3467 = func_2059_call()
call_3468 = func_2059_call()
output = call_3467
output2 = call_3468
func_3469 = relay.Function([], output)
mod['func_3469'] = func_3469
mod = relay.transform.InferType()(mod)
mutated_mod['func_3469'] = func_3469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3469_call = mutated_mod.get_global_var('func_3469')
call_3470 = func_3469_call()
output = call_3470
func_3471 = relay.Function([], output)
mutated_mod['func_3471'] = func_3471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2059_call = mod.get_global_var('func_2059')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_3478 = func_2059_call()
call_3479 = func_2059_call()
var_3486 = relay.var("var_3486", dtype = "float32", shape = (12, 13, 5))#candidate|3486|(12, 13, 5)|var|float32
bop_3487 = relay.less_equal(call_3478.astype('bool'), relay.reshape(var_3486.astype('bool'), relay.shape_of(call_3478))) # shape=(12, 13, 5)
bop_3490 = relay.less_equal(call_3479.astype('bool'), relay.reshape(var_3486.astype('bool'), relay.shape_of(call_3479))) # shape=(12, 13, 5)
output = bop_3487
output2 = bop_3490
func_3497 = relay.Function([var_3486,], output)
mod['func_3497'] = func_3497
mod = relay.transform.InferType()(mod)
mutated_mod['func_3497'] = func_3497
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3498 = relay.var("var_3498", dtype = "float32", shape = (12, 13, 5))#candidate|3498|(12, 13, 5)|var|float32
func_3497_call = mutated_mod.get_global_var('func_3497')
call_3499 = func_3497_call(var_3498)
output = call_3499
func_3500 = relay.Function([var_3498], output)
mutated_mod['func_3500'] = func_3500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3102_call = mod.get_global_var('func_3102')
func_3103_call = mutated_mod.get_global_var('func_3103')
call_3537 = func_3102_call()
call_3538 = func_3102_call()
func_2666_call = mod.get_global_var('func_2666')
func_2667_call = mutated_mod.get_global_var('func_2667')
call_3547 = relay.TupleGetItem(func_2666_call(), 0)
call_3548 = relay.TupleGetItem(func_2667_call(), 0)
func_3407_call = mod.get_global_var('func_3407')
func_3408_call = mutated_mod.get_global_var('func_3408')
call_3561 = func_3407_call()
call_3562 = func_3407_call()
func_2059_call = mod.get_global_var('func_2059')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_3579 = func_2059_call()
call_3580 = func_2059_call()
func_3290_call = mod.get_global_var('func_3290')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_3591 = func_3290_call()
call_3592 = func_3290_call()
output = relay.Tuple([call_3537,call_3547,call_3561,call_3579,call_3591,])
output2 = relay.Tuple([call_3538,call_3548,call_3562,call_3580,call_3592,])
func_3600 = relay.Function([], output)
mod['func_3600'] = func_3600
mod = relay.transform.InferType()(mod)
mutated_mod['func_3600'] = func_3600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3600_call = mutated_mod.get_global_var('func_3600')
call_3601 = func_3600_call()
output = call_3601
func_3602 = relay.Function([], output)
mutated_mod['func_3602'] = func_3602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3019_call = mod.get_global_var('func_3019')
func_3021_call = mutated_mod.get_global_var('func_3021')
call_3647 = func_3019_call()
call_3648 = func_3019_call()
func_3019_call = mod.get_global_var('func_3019')
func_3021_call = mutated_mod.get_global_var('func_3021')
call_3649 = func_3019_call()
call_3650 = func_3019_call()
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_3655 = func_1978_call()
call_3656 = func_1978_call()
output = relay.Tuple([call_3647,call_3649,call_3655,])
output2 = relay.Tuple([call_3648,call_3650,call_3656,])
func_3658 = relay.Function([], output)
mod['func_3658'] = func_3658
mod = relay.transform.InferType()(mod)
output = func_3658()
func_3659 = relay.Function([], output)
mutated_mod['func_3659'] = func_3659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3407_call = mod.get_global_var('func_3407')
func_3408_call = mutated_mod.get_global_var('func_3408')
call_3670 = func_3407_call()
call_3671 = func_3407_call()
output = call_3670
output2 = call_3671
func_3688 = relay.Function([], output)
mod['func_3688'] = func_3688
mod = relay.transform.InferType()(mod)
mutated_mod['func_3688'] = func_3688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3688_call = mutated_mod.get_global_var('func_3688')
call_3689 = func_3688_call()
output = call_3689
func_3690 = relay.Function([], output)
mutated_mod['func_3690'] = func_3690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3366_call = mod.get_global_var('func_3366')
func_3367_call = mutated_mod.get_global_var('func_3367')
call_3707 = func_3366_call()
call_3708 = func_3366_call()
uop_3711 = relay.atanh(call_3707.astype('float32')) # shape=(12, 13, 5)
uop_3713 = relay.atanh(call_3708.astype('float32')) # shape=(12, 13, 5)
output = relay.Tuple([uop_3711,])
output2 = relay.Tuple([uop_3713,])
func_3727 = relay.Function([], output)
mod['func_3727'] = func_3727
mod = relay.transform.InferType()(mod)
output = func_3727()
func_3728 = relay.Function([], output)
mutated_mod['func_3728'] = func_3728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3600_call = mod.get_global_var('func_3600')
func_3602_call = mutated_mod.get_global_var('func_3602')
call_3747 = relay.TupleGetItem(func_3600_call(), 4)
call_3748 = relay.TupleGetItem(func_3602_call(), 4)
output = relay.Tuple([call_3747,])
output2 = relay.Tuple([call_3748,])
func_3749 = relay.Function([], output)
mod['func_3749'] = func_3749
mod = relay.transform.InferType()(mod)
output = func_3749()
func_3750 = relay.Function([], output)
mutated_mod['func_3750'] = func_3750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2059_call = mod.get_global_var('func_2059')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_3762 = func_2059_call()
call_3763 = func_2059_call()
func_2566_call = mod.get_global_var('func_2566')
func_2569_call = mutated_mod.get_global_var('func_2569')
var_3773 = relay.var("var_3773", dtype = "uint8", shape = (1, 448))#candidate|3773|(1, 448)|var|uint8
call_3772 = relay.TupleGetItem(func_2566_call(relay.reshape(var_3773.astype('uint8'), [448,])), 2)
call_3774 = relay.TupleGetItem(func_2569_call(relay.reshape(var_3773.astype('uint8'), [448,])), 2)
func_3749_call = mod.get_global_var('func_3749')
func_3750_call = mutated_mod.get_global_var('func_3750')
call_3799 = relay.TupleGetItem(func_3749_call(), 0)
call_3800 = relay.TupleGetItem(func_3750_call(), 0)
var_3804 = relay.var("var_3804", dtype = "uint8", shape = (14, 448))#candidate|3804|(14, 448)|var|uint8
bop_3805 = relay.mod(var_3773.astype('float32'), var_3804.astype('float32')) # shape=(14, 448)
output = relay.Tuple([call_3762,call_3772,call_3799,bop_3805,])
output2 = relay.Tuple([call_3763,call_3774,call_3800,bop_3805,])
func_3814 = relay.Function([var_3773,var_3804,], output)
mod['func_3814'] = func_3814
mod = relay.transform.InferType()(mod)
mutated_mod['func_3814'] = func_3814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3814_call = mutated_mod.get_global_var('func_3814')
var_3816 = relay.var("var_3816", dtype = "uint8", shape = (1, 448))#candidate|3816|(1, 448)|var|uint8
var_3817 = relay.var("var_3817", dtype = "uint8", shape = (14, 448))#candidate|3817|(14, 448)|var|uint8
call_3815 = func_3814_call(var_3816,var_3817,)
output = call_3815
func_3818 = relay.Function([var_3816,var_3817,], output)
mutated_mod['func_3818'] = func_3818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3102_call = mod.get_global_var('func_3102')
func_3103_call = mutated_mod.get_global_var('func_3103')
call_3845 = func_3102_call()
call_3846 = func_3102_call()
var_3872 = relay.var("var_3872", dtype = "float32", shape = (12, 13, 5))#candidate|3872|(12, 13, 5)|var|float32
bop_3873 = relay.multiply(call_3845.astype('uint16'), relay.reshape(var_3872.astype('uint16'), relay.shape_of(call_3845))) # shape=(12, 13, 5)
bop_3876 = relay.multiply(call_3846.astype('uint16'), relay.reshape(var_3872.astype('uint16'), relay.shape_of(call_3846))) # shape=(12, 13, 5)
uop_3890 = relay.acos(call_3845.astype('float32')) # shape=(12, 13, 5)
uop_3892 = relay.acos(call_3846.astype('float32')) # shape=(12, 13, 5)
func_2715_call = mod.get_global_var('func_2715')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_3893 = relay.TupleGetItem(func_2715_call(), 1)
call_3894 = relay.TupleGetItem(func_2717_call(), 1)
func_2059_call = mod.get_global_var('func_2059')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_3896 = func_2059_call()
call_3897 = func_2059_call()
uop_3901 = relay.cosh(uop_3890.astype('float64')) # shape=(12, 13, 5)
uop_3903 = relay.cosh(uop_3892.astype('float64')) # shape=(12, 13, 5)
func_3727_call = mod.get_global_var('func_3727')
func_3728_call = mutated_mod.get_global_var('func_3728')
call_3910 = relay.TupleGetItem(func_3727_call(), 0)
call_3911 = relay.TupleGetItem(func_3728_call(), 0)
func_1842_call = mod.get_global_var('func_1842')
func_1844_call = mutated_mod.get_global_var('func_1844')
var_3913 = relay.var("var_3913", dtype = "int64", shape = (24, 6))#candidate|3913|(24, 6)|var|int64
call_3912 = relay.TupleGetItem(func_1842_call(relay.reshape(var_3913.astype('int64'), [144,])), 3)
call_3914 = relay.TupleGetItem(func_1844_call(relay.reshape(var_3913.astype('int64'), [144,])), 3)
output = relay.Tuple([bop_3873,call_3893,call_3896,uop_3901,call_3910,call_3912,var_3913,])
output2 = relay.Tuple([bop_3876,call_3894,call_3897,uop_3903,call_3911,call_3914,var_3913,])
func_3920 = relay.Function([var_3872,var_3913,], output)
mod['func_3920'] = func_3920
mod = relay.transform.InferType()(mod)
var_3921 = relay.var("var_3921", dtype = "float32", shape = (12, 13, 5))#candidate|3921|(12, 13, 5)|var|float32
var_3922 = relay.var("var_3922", dtype = "int64", shape = (24, 6))#candidate|3922|(24, 6)|var|int64
output = func_3920(var_3921,var_3922,)
func_3923 = relay.Function([var_3921,var_3922,], output)
mutated_mod['func_3923'] = func_3923
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3955 = relay.var("var_3955", dtype = "float32", shape = (15, 5, 4))#candidate|3955|(15, 5, 4)|var|float32
uop_3956 = relay.atanh(var_3955.astype('float32')) # shape=(15, 5, 4)
output = relay.Tuple([uop_3956,])
output2 = relay.Tuple([uop_3956,])
func_3958 = relay.Function([var_3955,], output)
mod['func_3958'] = func_3958
mod = relay.transform.InferType()(mod)
var_3959 = relay.var("var_3959", dtype = "float32", shape = (15, 5, 4))#candidate|3959|(15, 5, 4)|var|float32
output = func_3958(var_3959)
func_3960 = relay.Function([var_3959], output)
mutated_mod['func_3960'] = func_3960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mod.get_global_var('func_2715')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_4068 = relay.TupleGetItem(func_2715_call(), 0)
call_4069 = relay.TupleGetItem(func_2717_call(), 0)
func_1457_call = mod.get_global_var('func_1457')
func_1461_call = mutated_mod.get_global_var('func_1461')
var_4081 = relay.var("var_4081", dtype = "uint64", shape = ())#candidate|4081|()|var|uint64
const_4082 = relay.const([-5,5,-4,2,-10,-1,-10,-1,6,4,-3,-3,-10,4,5,7,-10,3,9,5,4,8,-1,-10,10,-2,-6,-3,-1,8,-4,8,-9,-9,-6,-10,10,-2,-6,7,6,-8,-6,1,-9,3,-7,-7], dtype = "uint64")#candidate|4082|(48,)|const|uint64
call_4080 = func_1457_call(relay.reshape(var_4081.astype('uint64'), []), relay.reshape(const_4082.astype('uint64'), [3, 16, 1]), )
call_4083 = func_1457_call(relay.reshape(var_4081.astype('uint64'), []), relay.reshape(const_4082.astype('uint64'), [3, 16, 1]), )
output = relay.Tuple([call_4068,call_4080,var_4081,const_4082,])
output2 = relay.Tuple([call_4069,call_4083,var_4081,const_4082,])
func_4098 = relay.Function([var_4081,], output)
mod['func_4098'] = func_4098
mod = relay.transform.InferType()(mod)
var_4099 = relay.var("var_4099", dtype = "uint64", shape = ())#candidate|4099|()|var|uint64
output = func_4098(var_4099)
func_4100 = relay.Function([var_4099], output)
mutated_mod['func_4100'] = func_4100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_4150 = func_1978_call()
call_4151 = func_1978_call()
output = relay.Tuple([call_4150,])
output2 = relay.Tuple([call_4151,])
func_4153 = relay.Function([], output)
mod['func_4153'] = func_4153
mod = relay.transform.InferType()(mod)
mutated_mod['func_4153'] = func_4153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4153_call = mutated_mod.get_global_var('func_4153')
call_4154 = func_4153_call()
output = call_4154
func_4155 = relay.Function([], output)
mutated_mod['func_4155'] = func_4155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2364_call = mod.get_global_var('func_2364')
func_2366_call = mutated_mod.get_global_var('func_2366')
call_4162 = relay.TupleGetItem(func_2364_call(), 0)
call_4163 = relay.TupleGetItem(func_2366_call(), 0)
output = relay.Tuple([call_4162,])
output2 = relay.Tuple([call_4163,])
func_4166 = relay.Function([], output)
mod['func_4166'] = func_4166
mod = relay.transform.InferType()(mod)
mutated_mod['func_4166'] = func_4166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4166_call = mutated_mod.get_global_var('func_4166')
call_4167 = func_4166_call()
output = call_4167
func_4168 = relay.Function([], output)
mutated_mod['func_4168'] = func_4168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2364_call = mod.get_global_var('func_2364')
func_2366_call = mutated_mod.get_global_var('func_2366')
call_4195 = relay.TupleGetItem(func_2364_call(), 0)
call_4196 = relay.TupleGetItem(func_2366_call(), 0)
func_4166_call = mod.get_global_var('func_4166')
func_4168_call = mutated_mod.get_global_var('func_4168')
call_4212 = relay.TupleGetItem(func_4166_call(), 0)
call_4213 = relay.TupleGetItem(func_4168_call(), 0)
output = relay.Tuple([call_4195,call_4212,])
output2 = relay.Tuple([call_4196,call_4213,])
func_4224 = relay.Function([], output)
mod['func_4224'] = func_4224
mod = relay.transform.InferType()(mod)
mutated_mod['func_4224'] = func_4224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4224_call = mutated_mod.get_global_var('func_4224')
call_4225 = func_4224_call()
output = call_4225
func_4226 = relay.Function([], output)
mutated_mod['func_4226'] = func_4226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3290_call = mod.get_global_var('func_3290')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_4232 = func_3290_call()
call_4233 = func_3290_call()
func_3958_call = mod.get_global_var('func_3958')
func_3960_call = mutated_mod.get_global_var('func_3960')
var_4239 = relay.var("var_4239", dtype = "float32", shape = (300,))#candidate|4239|(300,)|var|float32
call_4238 = relay.TupleGetItem(func_3958_call(relay.reshape(var_4239.astype('float32'), [15, 5, 4])), 0)
call_4240 = relay.TupleGetItem(func_3960_call(relay.reshape(var_4239.astype('float32'), [15, 5, 4])), 0)
uop_4241 = relay.sin(call_4232.astype('float64')) # shape=(12, 13, 5)
uop_4243 = relay.sin(call_4233.astype('float64')) # shape=(12, 13, 5)
output = relay.Tuple([call_4238,var_4239,uop_4241,])
output2 = relay.Tuple([call_4240,var_4239,uop_4243,])
func_4245 = relay.Function([var_4239,], output)
mod['func_4245'] = func_4245
mod = relay.transform.InferType()(mod)
mutated_mod['func_4245'] = func_4245
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4246 = relay.var("var_4246", dtype = "float32", shape = (300,))#candidate|4246|(300,)|var|float32
func_4245_call = mutated_mod.get_global_var('func_4245')
call_4247 = func_4245_call(var_4246)
output = call_4247
func_4248 = relay.Function([var_4246], output)
mutated_mod['func_4248'] = func_4248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3079_call = mod.get_global_var('func_3079')
func_3080_call = mutated_mod.get_global_var('func_3080')
call_4288 = relay.TupleGetItem(func_3079_call(), 0)
call_4289 = relay.TupleGetItem(func_3080_call(), 0)
func_2928_call = mod.get_global_var('func_2928')
func_2931_call = mutated_mod.get_global_var('func_2931')
const_4299 = relay.const([7.956752,-5.967473,3.868280,6.202201,1.875740,7.643036,-7.400401,8.960715,-2.277931,4.578367,-0.368254,-7.986778,-9.789021,-5.992616,4.592153,-6.484783,6.590091,-6.572698,3.602052,6.148360,-6.980267,6.013692,2.474409,2.011351,1.689382,1.365118,8.500588,-1.177579,-5.625232,-8.708486,-8.041628,-4.021743,0.653540,-0.289503,-8.830736,9.342711,-3.053849,-1.045794,-2.092887,4.397141,-2.012852,9.563457,6.072127,2.967075,-4.609917,2.537766,-2.488406,-4.334862,-7.448648,-6.581793,-4.412670,-3.224658,8.386434,-2.744200,-0.904981,7.371390,7.380045,2.827594,-2.936319,-4.237628,-5.481505,6.640786,8.687737,-3.441023,7.064079,7.200418,5.803602,-3.146483,-3.909716,-5.752587,2.323547,1.708967,-7.102254,3.634539,-2.973711,1.449812,8.576245,6.660781,-0.249937,-4.495120,3.261789,8.945108,6.823051,2.761474,-7.280714,7.442179,1.449199,-2.668916,6.136510,9.122498,3.849778,-1.704807,9.855251,-0.560963,3.266339,7.125035,-7.998409,0.931823,2.750987,4.976699,-3.202372,9.576359,3.710669,6.184478,7.808310,-9.089562,8.208909,3.283670,8.515809,-1.960943,-0.103015,7.583284,-5.290318,1.028831,2.251177,-8.312556,2.534198,5.223751,4.537546,3.288794,2.479494,-8.317536,-8.390162,-2.158685,1.550178,-8.733116,-9.986661,-3.734547,5.554946,-2.843716,-5.378754,-7.391823,-1.668549,-3.256770,1.848054,-6.993703,-4.349744,2.513824,-3.378502,-6.113067,1.061754,-4.409262,-3.334558,-8.732368,-7.027399,-3.319132,7.649864,-9.695845,-5.163979,-1.983485,-3.093819,9.146396,0.397367,0.557121,-7.113199,8.668954,-4.901980,1.739489,-8.860918,-3.344332,0.721163,3.902744,-0.644877,-4.112468,-8.753142,-3.731899,-4.593063,4.839494,-8.995642,2.389321,-5.981215,-1.764697,-4.803375,1.474055,-5.441714,6.033273,-7.625349,-6.883252,-5.241610,-6.355448,7.593284,0.495885,-1.341879,9.731315,2.306055,2.530254,5.376506,7.593474,9.715127,-6.072798,-4.768688,1.608050,-5.363764,1.352105,5.985502,-7.651281,-3.095469,-2.729311,-9.068123,-8.480047,-1.450615,-9.428454,5.151559,-7.462199,-2.481588,-5.398939,-4.462585,-0.273756,-1.928335,-3.129210,4.536450,-1.192991,-1.478124,-0.539684,8.164652,5.468811,-3.613370,9.309122,6.278023,-4.819225,4.719147,-1.059071,0.269332,-4.308095,1.193316,8.941326,2.874557,-0.624659,-6.193529,0.084504,0.725743,1.746463,-7.345261,-9.730793,-9.184490,7.885906,0.608678,-6.296671,-1.299388,-4.050936,4.373148,-4.700020,-2.308680,-2.786084,1.602504,-9.195830,-9.156747,-8.748920,-5.968145,-3.637011,-1.842907,-4.210618,-5.378704,-9.995122,-2.344445,-3.478363,-4.408708,-4.779686,4.389432,8.537610,-3.781998,-6.494021,9.322313,5.561079,1.508037,9.309114,-1.173985,2.385090,-2.705805,2.505842,4.813621,-8.041599,0.645053,-3.418593,4.853833,0.693748,4.752776,6.418219,5.990232,-8.295811,-9.961159,-3.836868,-5.702663,8.947244,0.078087,5.425111,-1.671353,-0.116016,-7.550738,8.694245,-4.119779,-5.314390,-3.832966,-9.332939,-9.057872,-0.668644,-4.759420,1.753387,-4.197760,5.468350,-7.901145,-1.086381,-5.722610,-9.571787,2.128812,3.635184,-6.160772,3.199058,7.169848,-5.232481,1.265895,-5.161425,5.063132,-2.342626,6.831844,1.412342,-7.864204,-7.507677,-6.857993,9.898853,-8.066600,8.876355,-7.956669,1.261825,3.791185,-1.708778,-0.051190,-3.704020,-7.183105,-0.873858,4.316024,8.328022,0.486853,-3.823196,-5.461670,-7.258135,-0.936173,-8.950440,-7.681301,-8.312229,9.075136,-5.287469,-5.338827,-7.598606,1.046066,-5.982885,-1.791451,-7.596973,0.286997,-4.962861,4.277044,5.429821,-5.099882,-0.575617,8.562753,-7.565121,0.041450,7.629001,-2.866299,5.385165,-9.809260,-1.014945,3.141818,-2.094446,4.669166,0.116020,9.133522,8.528172,-8.867291,1.316867,-1.065092,-2.761290,-2.389909,6.605192,4.836706,7.171570,-0.787998,2.883821,-9.820533,6.077448,-4.533936,-5.527382,0.727509,8.994883,-5.744889,6.819697,7.243082,-1.228235,5.405852,-9.611244,-8.156404,-8.211965,8.267913,9.558788,-7.025325,8.960730,4.286863,-0.196163,1.316936,-8.714659,-7.634840,4.758197,1.761986,-1.698595,3.794399,-1.420251,-4.722336,0.784170,-9.730657,1.032019,6.802345,3.214317,0.583009,7.189094,8.363345,-8.783621,8.623728,4.262410,6.102753,-1.872598,-4.714340,6.866085,6.744930,-3.022008,9.111788,-8.497788,9.413632,0.892608,-8.358135,8.841020,-1.225971,1.325353,6.755267,-5.061113,-1.675160,-8.030715,1.767573,9.080742,-7.599749,-6.450154,-8.248741,-1.371015,-4.717761,-4.892645,-7.762733,1.201733,9.320972,-6.742350,7.027535,5.511102,2.463322,1.789158,0.213982,-4.930658,-4.329504,1.858637,1.434329,-1.474263,9.871737,-0.505205,0.865081,-2.609315,7.225886,2.334475,-0.419001,-1.698522,-8.101513,-2.257561,6.827077,8.824169,-5.153445,-0.777992,-0.645159,9.734527,4.055556,5.258939,3.876952,5.101694,2.470632,-8.970286,2.722165,8.415212,-6.406754,-8.224095,-4.149421,7.486006,-5.504614,0.862302,4.634201,3.518977,-3.114360,0.060476,-3.165282,-7.275477,0.558555,6.402846,-3.066368,2.803433,1.051735,-7.287629,2.613651,-9.620213,8.665718,0.086390,-9.770348,5.418961,1.465810,9.065797,0.003315,7.558613,-7.636053,7.473453,-0.082149,2.276513,-9.636161,5.952277,9.786188,-7.011485,4.018778,4.377993,-1.058514,2.254690,5.700027,9.437506,-8.079279,-0.034896,-0.376497,5.329498,-1.510478,-9.328274,-0.488709,-7.821909,5.119350,-8.812734,-9.411117,-0.891699,-6.205430,0.856920,-5.164090,-6.219957,8.450720,0.670461,8.664319,-7.063579,7.922139,-5.031880,5.020272,-1.518885,3.296619,7.867583,-3.220775,-9.377398,5.899295,6.610361,7.415371,3.852776,-8.011557,-7.947849,3.958383,7.388912,5.236633,9.101348,-1.519258,9.408908,-1.623971,-9.115731,-0.956944,-7.620986,-2.432266,-5.342126,7.670330,-7.318702,-9.150966,5.870246,-3.314545,8.409534,6.389656,-7.112515,-6.555732,6.787319,-0.474240,0.683185,2.968294,3.760032,0.622289,4.296999,5.827354,-6.806431,-8.810135,0.130459,-9.659747,-4.092644,4.759467,-0.509611,-8.520026,0.873496,3.470793,4.472280,-5.957897,-5.284897,-9.375990,-3.819353,7.088603,-7.300973,9.868186,-1.327556,-9.364461,8.858873,8.396623,2.813791,2.741308,3.265025,4.373320,1.884618,6.147478,-2.155597,3.504631,4.304161,8.799389,-1.315374,9.371501,7.621330,2.671930,-6.663546,-4.306398,-7.797501,-1.125397,-7.167481,4.340413,4.107884,3.565543,-6.176214,-5.670664,7.037510,3.927060,-3.593263,5.101771,-7.375075,-2.548248,5.953680,-8.327455,5.172580,2.954959,5.834801,4.596062,9.634978,-4.954903,-1.933290,2.987685,-4.618052,5.509365,-6.953080,-0.753589,-7.653608,2.227827,4.822265,4.764249,-4.309077,-5.417395,0.693245,-1.814922,-9.511300,8.575067,4.931886,4.592606,5.087681,6.193948,0.738008,9.566821,-5.233974,5.326367,-6.508432,-0.708923,-9.989347,-0.657633,0.346354,-0.749109,0.001048,-8.084218,2.174407,6.433646,-4.002894,-7.013784,-0.941477,2.495401,-0.271028,8.187868,-2.522374,9.751823,-9.729687,-3.002402,-1.384965,-7.033660,-7.438062,-6.691273,-1.539552,9.365846,-3.451114,-0.644427,3.491452,-3.881636,-3.727421,-0.412332,2.909426,8.865864,-2.062115,4.253280,3.566544,-7.283819,-3.982446,0.099114,-7.551186,-7.952535,-8.767041,-8.827300,-7.321767,0.220841,-9.869749,2.848051,4.312821,1.116945,1.317390,-1.436389,-6.071604,-8.388574,0.995655,4.274713,-5.107366,3.312797,-7.735325,-6.714633,-0.888986,-0.720625,-9.587971,-9.246761,-6.332084,3.666133,8.134654,-8.386286,-0.741539,-3.665027,-8.772154,-7.473442,1.399521,0.718676,1.900301,2.211804,1.285662,-5.747516,8.670272,0.251077,-0.021053,9.762487,-9.235174,-1.918294,9.326976,2.576357,-8.788571,-0.491337,3.187363,-6.059708,-6.095575,-1.836700,7.660075,7.567096,0.163624,-3.546444,9.417807,8.401662,-6.412394,-2.105820,2.169874,6.206434,5.131521,5.657984,-2.005725,5.962779,6.437964,-1.125465,-3.333981,-3.984938,0.990856,-1.891316,-5.241330,-4.406079,4.253841,-7.408947,-0.841862,-4.355607,-4.050928,-9.999789,8.006563,3.698122,1.935934,7.541172,5.176368,-3.536312,6.097395,9.658245,-7.241152,-2.337967,-9.391443,-6.202723,-3.537882,3.384955,5.664716,8.503208,3.533314,9.848217,2.618088,7.370429,-0.368248,1.438781,-7.892490,-0.534610,-6.935538,-8.678941,9.998104,-9.969533,0.566800,-9.148192,1.256355,-5.070976,-5.223208,-5.213339,-8.121814,-1.567026,6.948804,-5.110593,-2.947422,-4.582618,2.675317,-2.366281,-0.641460,4.018489,-3.274522,-0.352011,1.223483,-0.684027,-5.695418,0.002025,-3.305111,-5.268151,0.583708,3.786781,4.786690,6.631106,-7.991032,4.440455,-3.467587,4.466525,1.092513,-8.174374,-4.299224,-1.034497,5.817887,7.018674,-3.714177,7.699559,0.515032,0.011650,3.701473,9.459222,-8.885573,-1.794183,2.663272,8.265304,7.477359,-6.186904,2.350978,-4.692932,-4.475378,-3.353822,3.115871,4.144672,2.033425,4.436666,8.908835,-8.405287,-3.470933,-6.314926,-7.376411,-9.730213,9.540268,6.142008,4.934865,-2.735199,-1.490708,-8.335977,-3.899237,-7.243454,0.282120,-9.765020,-1.717907,-3.610783,8.597924,2.850652,4.426642,5.344518,-7.760691,6.372742,5.559991,6.522222,-5.980143,0.784666,1.666541,-6.757087,-0.700034,2.337582,-3.370629,9.653063,-5.526960,0.689080,-8.167822,7.478788,-9.046376,-8.626025,-4.470742,5.330869,-5.057689,0.017546,-3.597770,-5.595515,2.580625,2.877541,8.187801,1.822566,2.538125,9.597649,-0.293796,-8.940475,9.082420,-3.892986,8.326318,6.252989,-5.496568,5.718019,-8.366365,4.500388,-7.657453,7.758902,4.775250,7.999329,-1.092274,-1.997886,6.561253,4.889627,-6.274468,-2.261858,8.877291,9.170010,4.129604,-5.641399,-0.505649,2.753973,-6.154910,-8.166418,6.143284,9.693457,7.958932,-9.130145,-9.459397,8.100593,3.457137,-1.942549,9.227439,0.392717,9.669983,9.382802,9.629451,-6.780035,3.754377,-5.166011,-3.928849,-4.781002,4.515456,8.340462,-8.870114,-3.832024,-4.204071,-7.425558,-6.006391,-0.247213,3.320458,8.327164,-3.348654,3.253326,4.990913,9.698430,9.175865,8.860292,-3.483537,-9.320500,1.171216,8.141849,-4.012487,-3.686736,2.137375,-5.733549,-8.979646,7.759625,1.666661,-8.528606,-6.195259,-6.981038,-8.203344,4.235877,-1.395874,7.752101,-5.055919,-8.581206,6.538729,-3.582214,1.022266,8.163343,-6.612644,3.315007,8.886378,-9.876453,6.228434,6.780129,-4.331827,-7.173083,4.060647,4.984632,-8.499450,-7.166852,-8.959711,-3.755268,8.321090,0.443522,1.129830,2.211742,-5.747975,-5.909357,-9.271715,0.271165,-7.376950,-4.015798,-6.220796,-6.797932,1.819535,-6.492134,0.630433,1.397823,-8.143448,-3.298862,4.179296,8.122800,-7.384016,0.808306,2.227837,1.648705,6.022031,5.926979,0.512221,-5.549038,-4.005722,-4.297789,-4.998017,-0.430344,-7.436384,-8.961352,-8.383625,-6.783003,0.925900,-3.476083,-7.260571,6.893182,7.208036,8.922071,-2.337126,5.734693,-6.967059,-0.952195,4.734562,-1.306518,1.832791,-1.896333,-0.729996,-8.643978,-6.572072,-6.108257,2.837908,-1.873359,3.047683,5.833578,-3.178257,-9.222740,3.333546,2.309035,-5.235987,-1.783674,-5.996518,4.416945,4.874835,-7.773170,-0.298314,0.106507,-8.335222,-2.449849,0.637668,4.294423,-2.396945,7.120995,-0.092062,1.294447,-4.259046,6.983438,-2.590058,0.701183,-3.734634,9.977444,-8.787011,-5.238333,5.324458,-8.228164,3.682433,-6.809221,-4.704243,1.562710,-2.361028,2.532989,-7.412479,4.813486,0.274109,8.044129,-1.786866,1.193829,9.337766,-5.978947,-3.135087,2.476940,-9.811371,-9.155302,0.021199,-0.595743,-3.066503,-6.150803,-2.049939,5.572262,-3.244331,9.426212,0.836721,-8.844898,5.202899,8.281101,1.706290,6.626443,-7.278037,-4.290320,9.806917,9.830715,-1.736105,-1.265119,5.846469,6.624086,-4.668637,3.535408,5.262574,-7.174161,-1.136244,-7.863580,2.292910,9.871952,9.211497,9.341556,-9.289107,-1.655411,7.328886,3.178940,-5.612609,-7.363966,-3.253925,2.389288,1.625542,-4.317798,7.949632,-9.234036,-1.324741,8.596505,6.545663,-8.274820,8.477545,4.599139,7.441490,-2.559708,3.798549,0.138736,-2.082251,3.648137,-3.976801,7.413777,-1.229098,-4.850434,0.203094,1.779905,7.570654,7.056822,-1.778431,6.322043,0.216200,-9.973716,-3.764550,-0.770484,-4.314179,2.577891,0.706109,-1.350335,-9.387749,-8.454209,-0.245519,-5.708304,1.681671,2.182982,-7.609734,-0.157722,-2.331301,-7.455811,-3.149035,2.446267,-6.423762,7.863921,5.938335,-3.666137,9.691487,7.437125,-3.983111,3.142662,5.038945,7.680930,0.526540,-5.332137,-8.551820,-9.426483,1.089604,5.319809,-2.072798,-2.438620,3.364514,6.651713,5.156598,-0.301856,8.247153,-6.378611,-1.932412,-4.232362,7.885009,9.646698,-7.211722,-6.690324,3.771264,4.499244,-6.162194,4.522859,-8.480134,-2.391899,-6.708703,6.683728,-5.692367,-8.496397,-0.855298,-3.106066,2.187872,5.524223,-3.550971,-8.724055,-0.515364,9.310665,4.571481,-6.290528,-7.066190,6.561068,4.909425,-6.874437,-2.162182,2.605073,7.910757,-1.820255,9.809053,-4.867853,1.096946,-5.229565,9.404383,9.414693,-0.350690,-3.402530,-5.843318,7.365967,1.074971,-6.721887,5.109361,-3.608351,4.376844,4.131036,-3.988969,-3.509707,-5.847106,1.687862,8.294910,-2.857612,-6.952482,-2.346686,0.550303,0.569252,9.550279,-2.967954,0.290879,5.001025,-5.925777,7.725147,5.998782,-8.868607,-5.136216,0.771637,-3.258511,-7.347246,-5.841602,-8.467446,-8.654318], dtype = "float64")#candidate|4299|(1320,)|const|float64
var_4300 = relay.var("var_4300", dtype = "int64", shape = (144,))#candidate|4300|(144,)|var|int64
call_4298 = relay.TupleGetItem(func_2928_call(relay.reshape(const_4299.astype('float64'), [12, 11, 10]), relay.reshape(var_4300.astype('int64'), [144,]), ), 2)
call_4301 = relay.TupleGetItem(func_2931_call(relay.reshape(const_4299.astype('float64'), [12, 11, 10]), relay.reshape(var_4300.astype('int64'), [144,]), ), 2)
func_2364_call = mod.get_global_var('func_2364')
func_2366_call = mutated_mod.get_global_var('func_2366')
call_4311 = relay.TupleGetItem(func_2364_call(), 0)
call_4312 = relay.TupleGetItem(func_2366_call(), 0)
output = relay.Tuple([call_4288,call_4298,const_4299,var_4300,call_4311,])
output2 = relay.Tuple([call_4289,call_4301,const_4299,var_4300,call_4312,])
func_4323 = relay.Function([var_4300,], output)
mod['func_4323'] = func_4323
mod = relay.transform.InferType()(mod)
var_4324 = relay.var("var_4324", dtype = "int64", shape = (144,))#candidate|4324|(144,)|var|int64
output = func_4323(var_4324)
func_4325 = relay.Function([var_4324], output)
mutated_mod['func_4325'] = func_4325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2059_call = mod.get_global_var('func_2059')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_4376 = func_2059_call()
call_4377 = func_2059_call()
func_4224_call = mod.get_global_var('func_4224')
func_4226_call = mutated_mod.get_global_var('func_4226')
call_4378 = relay.TupleGetItem(func_4224_call(), 0)
call_4379 = relay.TupleGetItem(func_4226_call(), 0)
bop_4408 = relay.floor_divide(call_4376.astype('float64'), relay.reshape(call_4378.astype('float64'), relay.shape_of(call_4376))) # shape=(12, 13, 5)
bop_4411 = relay.floor_divide(call_4377.astype('float64'), relay.reshape(call_4379.astype('float64'), relay.shape_of(call_4377))) # shape=(12, 13, 5)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
const_4421 = relay.const([[-1,8,-2,-6,6,1,-3,-9,9,-3,9,-10,3,5,-8,-5,-1,-7,-7,-7,5,9,1,8,-1,2,-2,5,8,7,2,9,4,-6,6,-5],[1,8,9,-6,6,-10,-10,-4,-6,-6,-2,2,10,-8,-1,-9,5,8,5,6,-10,10,3,10,-4,10,3,3,-9,-2,-3,5,-8,2,5,-5],[-6,6,-10,9,-7,9,8,-5,-2,-7,10,1,-5,3,4,-4,4,8,-10,-5,5,-7,7,-1,-3,-4,-2,-10,1,-6,3,3,-2,9,-9,7],[2,6,9,8,6,4,-6,-5,-10,-2,-1,-8,6,-2,-4,9,-4,5,2,7,5,8,-8,10,3,10,-7,-6,-8,9,9,7,-3,-9,6,-3]], dtype = "int64")#candidate|4421|(4, 36)|const|int64
call_4420 = relay.TupleGetItem(func_4323_call(relay.reshape(const_4421.astype('int64'), [144,])), 0)
call_4422 = relay.TupleGetItem(func_4325_call(relay.reshape(const_4421.astype('int64'), [144,])), 0)
output = relay.Tuple([bop_4408,call_4420,const_4421,])
output2 = relay.Tuple([bop_4411,call_4422,const_4421,])
func_4430 = relay.Function([], output)
mod['func_4430'] = func_4430
mod = relay.transform.InferType()(mod)
mutated_mod['func_4430'] = func_4430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4430_call = mutated_mod.get_global_var('func_4430')
call_4431 = func_4430_call()
output = call_4431
func_4432 = relay.Function([], output)
mutated_mod['func_4432'] = func_4432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3079_call = mod.get_global_var('func_3079')
func_3080_call = mutated_mod.get_global_var('func_3080')
call_4433 = relay.TupleGetItem(func_3079_call(), 0)
call_4434 = relay.TupleGetItem(func_3080_call(), 0)
output = relay.Tuple([call_4433,])
output2 = relay.Tuple([call_4434,])
func_4446 = relay.Function([], output)
mod['func_4446'] = func_4446
mod = relay.transform.InferType()(mod)
output = func_4446()
func_4447 = relay.Function([], output)
mutated_mod['func_4447'] = func_4447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3079_call = mod.get_global_var('func_3079')
func_3080_call = mutated_mod.get_global_var('func_3080')
call_4454 = relay.TupleGetItem(func_3079_call(), 0)
call_4455 = relay.TupleGetItem(func_3080_call(), 0)
func_2233_call = mod.get_global_var('func_2233')
func_2235_call = mutated_mod.get_global_var('func_2235')
call_4469 = relay.TupleGetItem(func_2233_call(relay.reshape(call_4454.astype('float32'), [12, 13, 5])), 0)
call_4470 = relay.TupleGetItem(func_2235_call(relay.reshape(call_4454.astype('float32'), [12, 13, 5])), 0)
output = relay.Tuple([call_4454,call_4469,])
output2 = relay.Tuple([call_4455,call_4470,])
func_4471 = relay.Function([], output)
mod['func_4471'] = func_4471
mod = relay.transform.InferType()(mod)
mutated_mod['func_4471'] = func_4471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4471_call = mutated_mod.get_global_var('func_4471')
call_4472 = func_4471_call()
output = call_4472
func_4473 = relay.Function([], output)
mutated_mod['func_4473'] = func_4473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2666_call = mod.get_global_var('func_2666')
func_2667_call = mutated_mod.get_global_var('func_2667')
call_4506 = relay.TupleGetItem(func_2666_call(), 0)
call_4507 = relay.TupleGetItem(func_2667_call(), 0)
func_2970_call = mod.get_global_var('func_2970')
func_2973_call = mutated_mod.get_global_var('func_2973')
const_4523 = relay.const([[-6,6],[-3,1],[7,4],[6,4],[4,-8],[8,-4],[-9,10],[-10,-4],[1,-4],[-7,6],[1,-3],[-2,6],[-10,-7],[-10,-5],[-6,2],[9,-4],[6,-5],[-1,6],[-2,10],[-7,2],[-1,-6],[-1,-1],[-5,-3],[-9,-3],[5,9],[-2,9],[-5,2],[5,7],[-4,-8],[-3,-2],[-2,-3],[1,9],[7,-1],[2,-4],[7,6],[9,-10],[8,10],[7,-2],[-6,-3],[2,-3],[7,-7],[-2,-5],[-7,4],[6,-1],[-2,-10],[2,9],[8,6],[-3,10],[-3,-8],[-9,5],[-5,4],[-1,-10],[7,-3],[1,-8],[3,10],[3,5],[-8,-8],[-7,3],[-1,3],[-5,6],[-2,-2],[10,-5],[-5,8],[-4,1],[-7,9],[3,-6],[-10,-6],[-4,8],[3,3],[3,6],[-3,-4],[-1,-9],[6,-4],[1,-5],[3,-7],[-6,-4],[-8,-2],[-5,8],[7,4],[-9,-6],[-2,-7],[-2,-5],[4,1],[10,8],[-2,-8],[-1,4],[-10,-3],[1,7],[-2,8],[7,-7],[7,10],[5,5],[8,-6],[-2,6],[9,3],[1,-5],[4,-4],[-9,1],[-3,1],[-9,-5],[10,6],[2,-3],[1,2],[6,4],[-3,3],[1,5],[-3,2],[-3,-8],[10,4],[-8,-2],[-3,-3],[-2,-10],[-5,-4],[-5,2],[7,1],[-3,-2],[5,-5],[-3,3],[1,-6],[3,7],[-7,8],[-4,-1],[6,-9],[-10,-2],[-9,9],[-5,-9],[-10,-1],[-8,-3],[-1,-6],[-1,4],[-8,-6],[5,5],[-6,5],[9,-8],[-6,-2],[-7,-1],[3,-3],[-6,-2],[3,-5],[8,2],[6,-3],[-1,2],[10,-4],[-8,-5],[-4,-7],[-7,-5],[7,-1],[-9,8],[10,8],[4,3],[-5,-9],[1,6],[-2,6],[-10,-4],[-10,-3],[-5,4],[-4,-9],[6,10],[-8,-4],[3,-6],[3,-8],[2,1],[4,3],[-6,-9],[9,7],[-9,-7],[-8,-9],[3,7],[7,10],[-9,3],[6,7],[3,2],[-3,7],[8,10],[-7,8],[-4,5],[-2,3],[5,-7],[2,-2],[-7,6],[5,-1],[-7,8],[1,5],[1,-7],[4,-8],[-7,-1],[8,-5],[8,-6],[-7,6],[1,-10],[-10,-8],[-5,-7],[6,-10],[-10,-4],[-6,7],[2,-7],[-2,3],[-8,6],[9,10],[8,5],[-3,-6],[7,3],[-1,-7],[4,10],[-6,-1],[-7,2],[-10,10],[-2,-1],[1,9],[-9,1],[-5,-1],[-2,-8],[5,3],[-6,-9],[-1,-6],[3,9],[-5,4],[-3,4],[-1,10],[7,4],[-5,5],[3,-10],[5,7],[-3,4]], dtype = "uint8")#candidate|4523|(224, 2)|const|uint8
call_4522 = relay.TupleGetItem(func_2970_call(relay.reshape(const_4523.astype('uint8'), [448,]), relay.reshape(call_4506.astype('float64'), [12, 13, 5]), ), 0)
call_4524 = relay.TupleGetItem(func_2973_call(relay.reshape(const_4523.astype('uint8'), [448,]), relay.reshape(call_4506.astype('float64'), [12, 13, 5]), ), 0)
output = relay.Tuple([call_4506,call_4522,const_4523,])
output2 = relay.Tuple([call_4507,call_4524,const_4523,])
func_4528 = relay.Function([], output)
mod['func_4528'] = func_4528
mod = relay.transform.InferType()(mod)
output = func_4528()
func_4529 = relay.Function([], output)
mutated_mod['func_4529'] = func_4529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3019_call = mod.get_global_var('func_3019')
func_3021_call = mutated_mod.get_global_var('func_3021')
call_4617 = func_3019_call()
call_4618 = func_3019_call()
func_3600_call = mod.get_global_var('func_3600')
func_3602_call = mutated_mod.get_global_var('func_3602')
call_4648 = relay.TupleGetItem(func_3600_call(), 4)
call_4649 = relay.TupleGetItem(func_3602_call(), 4)
func_2928_call = mod.get_global_var('func_2928')
func_2931_call = mutated_mod.get_global_var('func_2931')
const_4665 = relay.const([-8.747022,7.461337,1.591404,1.773310,7.668437,9.465623,1.548686,5.585215,-8.824877,-5.247358,-0.758138,-4.847908,5.843446,1.819266,-2.320089,-4.700066,-3.316340,-2.048015,1.065763,-3.631095,-4.860366,-3.999533,-7.854967,-3.861845,0.457740,-1.336410,4.644394,-8.112437,-2.308159,1.978126,-9.808374,0.538936,1.167762,-2.646415,-3.377232,-0.288028,8.424904,-5.526478,-0.089941,-7.699681,-7.077312,3.751184,4.445397,-6.519101,5.401783,-9.212631,-8.843963,-4.934722,-0.054561,-7.799718,9.159774,9.447034,7.748549,-8.992461,-1.616248,-8.266870,5.535854,-6.198024,6.359962,-7.628131,6.510583,-4.679030,0.732884,2.046953,-0.424474,-1.413598,-1.738695,-5.518934,1.369679,2.590159,3.829487,-4.362143,7.853278,1.108451,-6.589052,6.094850,-0.881231,0.797468,-4.997546,5.025275,-5.535590,-5.660682,9.799218,-6.279114,0.447728,-0.705015,9.220613,-2.731223,-8.495979,4.517482,1.589666,-6.327380,5.223008,3.110134,-0.272127,-4.675641,-0.753254,-0.237724,3.464164,2.354214,-3.386529,8.301843,-0.469391,7.642255,5.239990,4.550837,7.838645,-5.559320,1.763065,8.225801,7.855546,-0.703779,-4.143342,4.952743,-2.657190,2.344459,8.654545,-5.511892,-9.502217,-1.383997,2.208003,-1.254984,5.020388,9.895849,4.949227,-5.735309,-7.213382,-2.136586,5.506087,-8.404093,-3.916881,0.757016,-7.591829,-8.295010,0.314712,-5.274221,-3.207944,9.615771,6.781447,5.605747,4.043745,5.556970,-9.826373,8.993318,-6.098716,4.426136,5.556052,-7.781703,7.830796,-0.038508,5.532987,8.258158,8.436122,0.379532,1.534322,1.408291,-9.816553,-7.779023,9.648149,0.684428,9.094231,-3.903924,3.088421,-0.495398,5.819241,3.111070,9.023817,7.753878,4.301168,6.623392,7.027622,-2.532013,-1.027201,-1.250134,-0.583867,2.796189,9.594281,-9.578210,-1.929987,5.334029,4.752515,-5.214814,2.602391,4.013696,-7.823703,0.188461,-6.656819,4.957711,-0.214935,-6.949344,7.406004,-1.342679,6.721246,7.659413,9.259199,-4.726348,0.755132,7.318004,-1.847287,-2.418391,8.403142,-6.106358,6.166203,-1.587026,0.840554,-0.310541,-8.540416,1.350974,9.358954,0.988235,5.231714,0.552758,-5.242012,4.686385,7.852560,5.994399,3.598401,-3.765351,-0.894243,-8.847030,6.933717,-4.910853,8.069861,-1.469912,5.612573,9.696989,0.961188,2.291615,0.739892,-1.263714,-6.584761,-1.906747,4.791892,-4.553854,4.090822,8.158658,2.552546,2.039011,-1.802972,8.690070,8.923963,-0.062027,6.422803,0.645549,3.652965,-3.426346,6.610969,7.634282,8.912867,-5.019905,5.169420,-5.423860,-1.400770,0.832027,0.088064,-4.945733,-2.483407,9.221787,-5.556739,-1.624972,-3.147108,-6.285854,5.319447,-3.613802,5.896457,-5.447174,-8.511847,-1.584911,-3.577792,5.332123,-1.303799,-1.515184,4.014707,6.393185,-2.596350,2.321424,-7.596646,8.075617,4.943517,-1.666691,-6.354349,4.562642,7.255216,9.022020,-3.639691,2.820017,-4.752498,5.487514,1.661622,-8.919539,-0.463632,-3.979571,5.667890,3.567947,3.607729,8.134532,-5.722511,8.350268,-7.748591,7.598395,5.267239,-4.955241,-6.585801,1.813625,-6.211079,-4.078395,4.909934,3.451021,-9.001355,-7.455848,-2.401305,0.338539,-8.848751,2.249277,-8.836766,4.365064,1.870202,2.089792,9.547094,-5.482274,-7.467270,7.000699,5.793538,-2.126155,4.466674,-6.198308,8.189278,-1.334501,-5.559763,-4.934414,-5.071143,-1.707496,0.971253,2.350383,4.395998,-2.882083,-1.064819,4.959183,-5.025327,9.684911,-2.017528,-9.768604,-0.632071,-7.765246,-1.911083,8.746964,-6.239196,-2.239901,9.334989,4.514590,4.305633,0.512220,4.684982,-7.146736,-5.326986,9.785061,1.133327,-6.773778,-1.442066,-6.349891,-2.631927,0.349019,0.578709,-8.864704,6.105520,3.809549,-2.011571,1.694976,-6.156701,5.221265,9.867805,7.934875,-4.428166,-9.492833,-7.472362,5.217503,-5.183045,-9.999624,9.559671,5.833003,-8.370363,9.188313,2.712567,-9.803172,-2.714944,-1.340086,-7.670492,-7.441061,-0.784588,5.555769,0.907913,1.205049,1.912431,-6.719875,-7.564142,6.463264,-7.564996,2.375937,6.506908,4.793201,-3.750358,-8.233172,-5.796452,9.449265,4.362877,5.983841,-1.317606,7.772648,-5.398199,-8.708603,3.333797,9.552511,-7.703427,0.037995,-3.319221,-5.628121,-4.627876,0.005464,4.677596,8.796928,6.300483,-2.750015,6.059021,7.562032,7.435670,0.382969,-4.117138,-0.804374,1.781108,-2.212847,2.412709,-6.484822,0.896541,-9.355634,6.505480,-7.762272,-6.606355,-8.859848,-3.376944,-8.642767,7.840780,-0.531971,-6.595039,-6.775835,-4.439759,-6.242143,0.092602,7.915797,-3.714042,-0.261393,-8.639179,7.737700,3.052565,-6.599813,3.855389,0.082284,-6.575038,-8.284151,-8.865049,9.031164,-9.848047,-2.654367,-8.893358,-8.929692,3.052099,-4.655620,7.055673,6.836498,6.043543,-3.557020,-3.886526,4.982997,8.939079,2.619306,1.875901,-6.063211,-1.906221,7.785712,1.106994,-8.205529,-0.867229,-3.177850,-1.609543,-0.506828,7.445848,-7.163185,-8.696957,7.856951,-5.028233,-5.303530,4.493134,7.230965,1.431985,-6.924021,-4.425394,-0.416016,-2.305818,9.364614,-8.390502,-3.548338,-2.710766,0.883438,4.598994,1.693346,2.317345,8.260939,-2.743921,5.960956,2.811286,-1.820853,-1.366502,6.344303,3.122030,4.363876,-7.500316,-0.658515,-0.822932,-4.959004,-2.172642,9.653225,7.770825,-2.008057,7.920690,1.831420,3.101712,2.645234,-6.950695,-7.300751,3.035729,3.066228,-6.137654,-8.222247,7.765232,-9.083680,-1.158586,-1.787002,-4.684813,-5.696751,-3.103839,-8.805908,6.993328,9.329896,-7.596966,-9.950871,9.001003,-9.436265,9.370710,-7.229209,1.760367,-9.744080,7.920037,4.136985,2.052493,5.429435,7.428145,3.898183,8.500427,0.635820,0.610274,6.654316,9.400399,-1.657135,0.703033,-6.103789,1.499910,-8.585267,9.954929,-5.268982,9.431818,-8.002456,3.499784,-3.363170,-5.199449,1.853468,2.505011,-1.647241,-1.228267,4.026684,3.057208,-4.525677,-9.383958,6.813173,-6.786236,-9.562402,-7.723474,-0.502779,-5.715027,-0.342824,-2.701339,-1.894093,8.616900,3.475978,6.822410,0.215782,-9.829123,8.427861,-8.466614,-9.730142,-7.926171,3.112814,1.172490,6.242043,-8.442382,-6.206198,0.304493,-7.290636,5.666457,-0.159181,-2.643279,3.632683,8.069233,3.114310,-4.678268,-2.586303,-5.801904,2.839341,8.549975,1.556384,-8.832511,7.723608,9.934716,-6.598450,8.013509,0.909201,-4.917163,-9.288547,-4.018514,-0.484786,2.103804,2.080276,-3.046227,5.798500,4.441312,5.225321,-7.675204,3.138111,-8.068787,-3.356457,-1.690917,1.696387,-5.566147,-8.783423,8.092715,1.170940,2.808399,-1.112736,8.700916,-9.421116,-9.455045,3.990338,-5.867594,-5.928883,-2.979955,-5.804374,1.861633,-1.163964,7.523847,-7.970401,1.084029,6.614640,-8.964278,-9.638334,1.772253,9.960661,-0.041997,-7.058608,3.566291,4.334132,9.204839,4.077741,4.431699,-5.987265,-4.739864,4.641357,0.158146,8.802322,-0.430706,7.874862,-1.380826,9.358321,8.064540,1.233615,8.222169,5.495562,-6.418649,9.219105,-7.023542,-9.043114,-6.659887,-8.467627,-0.254388,1.446448,8.111769,-9.342020,7.366315,-1.770144,9.778602,-5.743722,-8.818059,9.072180,-7.688732,-6.951160,-2.619083,1.611226,-1.722025,-5.629368,0.238376,5.719177,3.571554,-4.159372,0.726299,6.377125,-0.193091,0.925520,6.575357,3.136270,9.221150,-6.363979,-3.458166,-8.530855,3.121629,6.445184,5.771085,3.489122,-5.979813,6.445080,-6.895282,-1.631307,-8.767776,0.341661,-5.168867,3.602754,-8.681883,-4.110544,-3.084791,2.947770,9.242773,-0.831329,2.666932,8.369095,-8.435814,-2.075434,-6.720107,3.566967,-8.778135,-3.003558,-8.319974,6.859387,-1.238049,1.902099,-5.252778,-6.890588,-7.808068,-9.281772,0.234161,0.039649,0.704278,-9.485233,8.022441,-3.351650,3.925047,-5.922213,1.284219,-1.355507,0.757312,-5.962866,3.727394,-5.152636,2.165693,6.626176,-6.827804,-3.536783,-1.055169,7.852342,9.265593,-6.859503,8.072204,-8.004070,-9.513837,-5.023958,-6.162652,1.472444,5.819648,5.223141,6.538631,0.971949,-9.106560,6.382154,9.336380,-1.572200,-2.158597,8.553394,3.889143,-5.141549,-6.639789,-5.979831,6.066108,-9.000068,7.542421,-5.079374,7.904917,-7.343271,2.046625,-1.536724,5.126039,5.843280,8.236776,3.605139,-7.575164,-5.724343,-1.567064,-9.610044,5.429119,-9.975693,-7.898264,5.981978,3.189648,0.255391,2.247013,0.802341,-9.755729,-2.013178,3.906401,0.870672,-4.860996,-8.359666,-6.448916,-9.624787,-6.213976,-7.118532,9.041390,-5.617721,8.110229,-4.572099,6.133169,6.323762,-1.647901,-0.717789,4.730910,-1.667582,5.839876,-2.527922,3.052278,2.215698,-4.456945,-2.913157,5.305758,-7.989802,9.208590,5.159862,-7.279621,-8.569255,4.103814,-8.716007,-1.908994,-8.823305,2.188867,8.106842,7.027036,-3.187640,-4.768598,-3.891080,7.773901,6.966094,1.759895,-4.299454,3.144621,-8.024639,7.012902,-1.708587,1.424141,1.445067,6.796735,8.284087,-1.335768,-0.820529,1.641713,-7.321448,3.428768,8.064694,9.386787,-5.724428,-3.462377,7.261950,1.740758,-0.049181,-9.161945,-9.546568,-1.444280,-8.138877,2.811024,-6.633095,8.458576,-9.297199,-5.130492,5.916575,5.045870,-4.190884,7.688085,0.993069,9.390058,2.393081,1.458055,-0.360331,-5.034342,-3.865728,3.912548,-5.055850,-2.649937,-5.951635,-8.052496,-0.183889,7.835021,3.846842,-2.055108,-3.325752,-3.752884,8.421668,0.034989,-9.933738,-8.825993,7.235802,6.650242,6.117932,-6.518586,-5.652495,0.099123,-0.002255,0.536053,3.892772,-3.327896,-4.527254,-4.379438,7.521772,6.538531,0.663942,-9.390560,2.852171,-2.245279,6.689153,-7.153659,5.669200,-3.550568,5.917327,0.984244,1.420308,-0.206380,4.588172,9.745115,-7.780320,-3.201043,7.570004,-5.717405,-8.478255,3.048621,-6.675854,6.806135,6.330905,3.989095,5.791851,-6.351506,4.935044,-6.745486,9.415409,3.207885,-1.974973,9.962626,-8.385562,3.559444,-8.175028,5.872524,-6.718320,-5.490646,-7.587742,-3.637715,-1.221130,6.021678,5.629676,-1.741497,3.743020,-3.457973,4.080704,3.541621,-3.514760,-1.244648,4.679516,0.057629,-0.368294,-6.821172,6.293359,2.923867,3.490979,8.051949,-4.000863,6.757862,4.869488,-7.408500,4.639096,5.257509,-8.523186,-1.050124,4.271625,7.224703,4.723321,-5.787043,2.051611,-4.582165,-7.310755,5.330890,-5.944042,1.591447,6.936210,-3.303004,4.380466,-4.641133,-9.193555,-7.376752,-5.610842,2.452060,3.973904,-0.662884,2.292968,3.937838,3.164699,9.832421,6.179072,3.851779,-0.411740,9.572005,2.700702,2.210805,-2.954645,8.639698,2.222058,-7.354179,3.093910,3.142637,0.533991,-3.562263,-8.535523,-3.207925,-7.952311,-2.837071,-9.251916,6.610123,4.886254,6.982417,-5.130668,-5.583676,7.467080,-7.144591,4.067402,-3.779455,-0.692226,3.893600,-6.190894,-4.568325,-7.789503,1.810609,-9.085720,-2.085317,3.167705,7.981888,0.755024,3.274562,-9.046872,5.564261,-6.332726,-1.877729,-1.518422,3.336828,-5.064731,-3.644879,-9.810717,1.909908,-5.031740,-3.235269,7.348543,5.912940,8.552604,9.657897,-4.701371,5.857613,-1.587999,0.996776,-3.731958,5.254252,-5.701382,2.973375,6.575982,5.837594,-1.177706,4.845475,0.148217,-7.150801,-0.888689,-6.645516,-5.695320,5.014717,4.427446,-0.736705,0.682082,-1.877157,1.125211,-1.272046,-7.783735,-7.825205,5.033155,-9.424076,-1.296922,6.121808,0.122480,9.133658,8.927066,-7.067922,1.806972,-8.758330,9.366574,-4.532296,-3.217097,8.364954,-8.246541,-1.655849,-2.191735,-9.611572,7.581692,9.056756,5.140812,8.312809,6.934142,2.716591,-7.587017,0.621692,0.063865,-1.999608,-6.084951,-5.163211,9.353861,-9.704306,-0.546451,-5.116625,-3.056114,-0.376900,-0.962572,-0.317627,0.314257,-3.325376,-9.515761,2.797995,5.324433,1.096364,-3.723161,-3.364401,-2.373091,9.671245,2.633026,1.678618,9.432394,0.239629,8.710215,2.016525,5.528114,-5.195891,5.143434,0.221123,0.169050,-0.583518,4.341032,6.573337,3.916412,-0.346128,-3.182315,-1.506543,9.735413,1.690420,1.001125,2.246993,-4.509245,-9.381473,-2.406053,-4.637904,9.598205,9.002983,8.723067,-4.298522,2.000291,9.731897,-5.402899,4.408240,5.490202,-3.302675,9.195635,4.619222,7.146602,8.131536,-0.232930,5.746005,-5.205995,-0.859921,5.140332,-7.301393,3.242924,-6.455061,9.042557,2.488543,-1.834212,6.207980,7.740571,5.525123,2.577839,-6.679275,-8.476540,1.329979,-3.437755,-1.134568,-3.971636,-0.836812,-4.029527,-5.357643,-3.984144,-9.724790,8.315882,-3.144964,6.267228,-2.145941,-7.007411,-8.514264,-0.244562,7.189337,9.584285,5.505240,-7.466170,2.351424,-0.110662,-7.208855,3.256901,-0.530048,3.234428,3.892111,-6.271691,0.278729,0.235256,-4.198346,6.576012,-9.917270,6.580680,-1.649515,-2.537828,3.406053,3.796434,4.136574,-7.488315,-3.301658,5.739732,-7.890663,1.072034,-3.321197,1.299711,-7.335818,4.053898,9.799618,-6.166375,-1.921141,4.883118,-3.832924,-8.943797,1.925817,3.365417,-4.286903,-4.246141,-2.145954,-6.824690,-7.784756,6.007806,-3.463396,7.915654,-3.678995,2.124167,-7.416678,-0.783775,-9.824111,3.338173,5.679997,0.023839,5.125113,2.686848,7.347478,-3.957818,9.028696,-2.680927,-4.457892,-8.344596,-0.259273,-5.174347,-0.867727,2.489143,1.957647,3.240690,0.420214,-0.659309,-8.193155,-4.152604,0.133162,3.314317,1.888651,-1.556230,7.040464,-4.405399,-1.923094,3.278261,0.527647,0.103128,1.279863,1.333732,1.275192,1.724882,3.941378,7.245450,-2.945439,-8.516500], dtype = "float64")#candidate|4665|(1320,)|const|float64
const_4666 = relay.const([-5,-3,6,-2,8,-3,5,-7,-8,-6,-5,1,4,2,-10,-6,-1,-10,6,7,2,-10,-10,3,-4,-5,1,-6,7,3,-8,-4,6,5,8,8,2,6,5,-1,10,5,-3,-6,-9,-10,6,6,-8,5,-3,-7,-1,6,-4,-4,-5,6,9,10,9,-5,-6,8,-3,3,6,-10,2,-4,3,9,-6,-7,6,-3,9,-9,-2,-10,-8,1,-2,-10,7,9,1,-7,4,1,1,-5,5,-7,1,-2,-2,-4,3,9,9,9,7,-8,-2,-2,-7,5,-3,1,-2,6,5,10,-7,6,-6,-7,-1,-5,5,5,-4,-4,-5,-4,7,2,-9,7,-9,1,8,-8,2,1,1,-9,-8,-4,9,1,6,-7], dtype = "int64")#candidate|4666|(144,)|const|int64
call_4664 = relay.TupleGetItem(func_2928_call(relay.reshape(const_4665.astype('float64'), [12, 11, 10]), relay.reshape(const_4666.astype('int64'), [144,]), ), 1)
call_4667 = relay.TupleGetItem(func_2931_call(relay.reshape(const_4665.astype('float64'), [12, 11, 10]), relay.reshape(const_4666.astype('int64'), [144,]), ), 1)
output = relay.Tuple([call_4617,call_4648,call_4664,const_4665,const_4666,])
output2 = relay.Tuple([call_4618,call_4649,call_4667,const_4665,const_4666,])
func_4688 = relay.Function([], output)
mod['func_4688'] = func_4688
mod = relay.transform.InferType()(mod)
mutated_mod['func_4688'] = func_4688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4688_call = mutated_mod.get_global_var('func_4688')
call_4689 = func_4688_call()
output = call_4689
func_4690 = relay.Function([], output)
mutated_mod['func_4690'] = func_4690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3688_call = mod.get_global_var('func_3688')
func_3690_call = mutated_mod.get_global_var('func_3690')
call_4696 = func_3688_call()
call_4697 = func_3688_call()
output = call_4696
output2 = call_4697
func_4726 = relay.Function([], output)
mod['func_4726'] = func_4726
mod = relay.transform.InferType()(mod)
mutated_mod['func_4726'] = func_4726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4726_call = mutated_mod.get_global_var('func_4726')
call_4727 = func_4726_call()
output = call_4727
func_4728 = relay.Function([], output)
mutated_mod['func_4728'] = func_4728
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4759 = relay.var("var_4759", dtype = "float64", shape = (14, 5, 15))#candidate|4759|(14, 5, 15)|var|float64
uop_4760 = relay.asin(var_4759.astype('float64')) # shape=(14, 5, 15)
output = relay.Tuple([uop_4760,])
output2 = relay.Tuple([uop_4760,])
func_4764 = relay.Function([var_4759,], output)
mod['func_4764'] = func_4764
mod = relay.transform.InferType()(mod)
mutated_mod['func_4764'] = func_4764
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4765 = relay.var("var_4765", dtype = "float64", shape = (14, 5, 15))#candidate|4765|(14, 5, 15)|var|float64
func_4764_call = mutated_mod.get_global_var('func_4764')
call_4766 = func_4764_call(var_4765)
output = call_4766
func_4767 = relay.Function([var_4765], output)
mutated_mod['func_4767'] = func_4767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3079_call = mod.get_global_var('func_3079')
func_3080_call = mutated_mod.get_global_var('func_3080')
call_4793 = relay.TupleGetItem(func_3079_call(), 0)
call_4794 = relay.TupleGetItem(func_3080_call(), 0)
output = relay.Tuple([call_4793,])
output2 = relay.Tuple([call_4794,])
func_4808 = relay.Function([], output)
mod['func_4808'] = func_4808
mod = relay.transform.InferType()(mod)
output = func_4808()
func_4809 = relay.Function([], output)
mutated_mod['func_4809'] = func_4809
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4858 = relay.var("var_4858", dtype = "float32", shape = (10, 6, 8))#candidate|4858|(10, 6, 8)|var|float32
var_4859 = relay.var("var_4859", dtype = "float32", shape = (10, 6, 8))#candidate|4859|(10, 6, 8)|var|float32
bop_4860 = relay.power(var_4858.astype('float32'), relay.reshape(var_4859.astype('float32'), relay.shape_of(var_4858))) # shape=(10, 6, 8)
func_2416_call = mod.get_global_var('func_2416')
func_2418_call = mutated_mod.get_global_var('func_2418')
var_4868 = relay.var("var_4868", dtype = "uint8", shape = (8,))#candidate|4868|(8,)|var|uint8
call_4867 = relay.TupleGetItem(func_2416_call(relay.reshape(var_4868.astype('uint8'), [8,])), 3)
call_4869 = relay.TupleGetItem(func_2418_call(relay.reshape(var_4868.astype('uint8'), [8,])), 3)
output = relay.Tuple([bop_4860,call_4867,var_4868,])
output2 = relay.Tuple([bop_4860,call_4869,var_4868,])
func_4876 = relay.Function([var_4858,var_4859,var_4868,], output)
mod['func_4876'] = func_4876
mod = relay.transform.InferType()(mod)
mutated_mod['func_4876'] = func_4876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4876_call = mutated_mod.get_global_var('func_4876')
var_4878 = relay.var("var_4878", dtype = "float32", shape = (10, 6, 8))#candidate|4878|(10, 6, 8)|var|float32
var_4879 = relay.var("var_4879", dtype = "float32", shape = (10, 6, 8))#candidate|4879|(10, 6, 8)|var|float32
var_4880 = relay.var("var_4880", dtype = "uint8", shape = (8,))#candidate|4880|(8,)|var|uint8
call_4877 = func_4876_call(var_4878,var_4879,var_4880,)
output = call_4877
func_4881 = relay.Function([var_4878,var_4879,var_4880,], output)
mutated_mod['func_4881'] = func_4881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4153_call = mod.get_global_var('func_4153')
func_4155_call = mutated_mod.get_global_var('func_4155')
call_4888 = relay.TupleGetItem(func_4153_call(), 0)
call_4889 = relay.TupleGetItem(func_4155_call(), 0)
func_820_call = mod.get_global_var('func_820')
func_823_call = mutated_mod.get_global_var('func_823')
var_4902 = relay.var("var_4902", dtype = "int64", shape = (144,))#candidate|4902|(144,)|var|int64
call_4901 = func_820_call(relay.reshape(var_4902.astype('int64'), [3, 12, 4]), relay.reshape(var_4902.astype('int64'), [3, 12, 4]), )
call_4903 = func_820_call(relay.reshape(var_4902.astype('int64'), [3, 12, 4]), relay.reshape(var_4902.astype('int64'), [3, 12, 4]), )
output = relay.Tuple([call_4888,call_4901,var_4902,])
output2 = relay.Tuple([call_4889,call_4903,var_4902,])
func_4910 = relay.Function([var_4902,], output)
mod['func_4910'] = func_4910
mod = relay.transform.InferType()(mod)
mutated_mod['func_4910'] = func_4910
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4911 = relay.var("var_4911", dtype = "int64", shape = (144,))#candidate|4911|(144,)|var|int64
func_4910_call = mutated_mod.get_global_var('func_4910')
call_4912 = func_4910_call(var_4911)
output = call_4912
func_4913 = relay.Function([var_4911], output)
mutated_mod['func_4913'] = func_4913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mod.get_global_var('func_2715')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_4927 = relay.TupleGetItem(func_2715_call(), 1)
call_4928 = relay.TupleGetItem(func_2717_call(), 1)
output = call_4927
output2 = call_4928
func_4940 = relay.Function([], output)
mod['func_4940'] = func_4940
mod = relay.transform.InferType()(mod)
mutated_mod['func_4940'] = func_4940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4940_call = mutated_mod.get_global_var('func_4940')
call_4941 = func_4940_call()
output = call_4941
func_4942 = relay.Function([], output)
mutated_mod['func_4942'] = func_4942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3019_call = mod.get_global_var('func_3019')
func_3021_call = mutated_mod.get_global_var('func_3021')
call_5066 = func_3019_call()
call_5067 = func_3019_call()
output = relay.Tuple([call_5066,])
output2 = relay.Tuple([call_5067,])
func_5069 = relay.Function([], output)
mod['func_5069'] = func_5069
mod = relay.transform.InferType()(mod)
output = func_5069()
func_5070 = relay.Function([], output)
mutated_mod['func_5070'] = func_5070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4808_call = mod.get_global_var('func_4808')
func_4809_call = mutated_mod.get_global_var('func_4809')
call_5082 = relay.TupleGetItem(func_4808_call(), 0)
call_5083 = relay.TupleGetItem(func_4809_call(), 0)
output = relay.Tuple([call_5082,])
output2 = relay.Tuple([call_5083,])
func_5094 = relay.Function([], output)
mod['func_5094'] = func_5094
mod = relay.transform.InferType()(mod)
mutated_mod['func_5094'] = func_5094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5094_call = mutated_mod.get_global_var('func_5094')
call_5095 = func_5094_call()
output = call_5095
func_5096 = relay.Function([], output)
mutated_mod['func_5096'] = func_5096
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5097 = relay.const([[[7.973133,1.870299,2.579345,-7.806159,-8.616959,7.573663,4.429753],[8.399837,-8.820103,7.786503,0.394868,-8.208675,-5.502641,8.284819],[4.498414,-1.446745,-7.136505,4.212724,2.109822,-8.186076,5.697413],[8.503624,5.757126,-6.748045,1.569220,1.143994,0.526669,2.176082],[-4.201788,1.888758,0.293207,-9.953907,6.045474,8.358294,-0.122352],[-1.162917,2.515005,-1.414473,-0.913006,0.657660,-0.408654,-1.351922],[-1.700657,3.608316,-8.934909,-7.725613,-6.469619,-5.330095,-4.756031],[0.496467,8.333543,-4.318767,5.683629,9.790577,2.178057,8.869587]],[[4.058027,0.890401,0.008148,-9.702329,3.660966,4.605499,-5.917148],[0.480683,2.807212,8.852157,-7.593603,-3.713158,-5.171881,9.750119],[-8.131439,3.700537,4.815687,9.595464,-1.284468,-7.020464,-5.878356],[2.907530,8.076227,9.210050,8.962687,9.629734,-8.928837,7.071441],[0.868386,7.402655,9.679835,5.277770,2.248829,0.810647,1.664197],[-2.443073,8.930688,-9.114548,-3.217798,-7.684264,-5.173734,-5.388129],[4.190152,7.113516,-8.452201,-6.586446,5.017475,-4.792898,-7.163053],[-7.069083,-7.723006,6.479845,5.849549,-4.402250,6.131419,8.478937]],[[6.251885,-8.289561,-5.115695,7.945262,-0.690413,-7.220349,-5.629025],[3.190879,5.848098,-7.426194,-5.827737,1.374187,2.926947,9.715183],[-5.187853,-6.098593,-1.049569,-1.184059,-1.445059,-4.610466,5.217111],[-6.899444,2.800585,-8.960183,-3.341331,-4.527934,-4.704229,-4.087526],[-1.419725,-0.982972,-4.819359,-6.382557,-9.996531,1.510802,-2.933370],[2.724000,3.743119,0.171047,9.997619,3.137612,-0.971043,-4.303841],[4.200391,-3.114115,6.206844,1.173033,0.805878,-0.478223,-1.646558],[-1.451027,2.767873,3.372010,-3.001552,-7.106579,-2.893805,6.606292]],[[7.615547,-6.556214,-9.059661,-8.813810,5.627332,6.413561,0.661032],[-1.706910,-2.399051,8.720121,5.745701,-9.570791,8.526029,7.354971],[-0.947444,4.950966,9.544325,-1.757893,-5.830818,5.228793,-8.787939],[4.468338,-3.864624,-7.754922,-6.693339,7.202999,-4.276924,0.075402],[-3.329718,7.281535,7.361517,-5.484903,-9.459590,-5.528072,-0.215422],[2.921778,9.996376,-0.489489,-3.078727,-3.843303,-2.817521,-2.095293],[8.249999,6.658064,5.039199,-4.093084,9.923803,0.575154,7.864619],[-4.380573,6.514316,8.308625,-1.176264,-0.165352,-3.397592,-0.011293]],[[-2.563270,4.029225,-2.218204,8.988105,5.690668,5.376589,1.257256],[7.431275,-4.687628,-9.700096,9.883226,-6.823572,2.093726,-5.741921],[0.393799,7.261045,-9.032872,5.230395,3.406114,-9.946631,-8.965338],[6.651355,-0.884782,9.806625,-5.647196,-6.503074,0.016640,-5.178456],[3.366175,-0.044092,3.461965,5.317629,-4.371830,-0.676058,5.190531],[-8.780492,-8.931231,8.385061,-6.404983,-8.049195,-4.591232,-9.564853],[2.954859,8.906966,-0.082910,-2.224313,9.710304,6.486542,-1.728463],[1.081420,-0.043618,-3.028395,1.804734,0.477587,-7.594092,-6.984692]],[[-0.661085,-9.070754,9.987470,-5.783460,5.125673,0.161570,-4.746190],[-8.795620,5.443411,8.407170,5.144305,-6.449034,5.847634,3.626578],[9.047269,8.711660,-6.413071,-1.807091,2.697673,7.500362,4.774052],[1.987286,4.869086,-2.531373,7.349127,-1.386675,7.765003,0.047774],[-3.880066,-3.186497,-3.872941,0.299212,4.888113,4.088302,6.881836],[5.281665,9.964312,-9.163716,-3.847930,3.952356,-4.375989,0.305091],[9.685694,9.609971,9.478860,6.265234,7.577812,-7.642028,-9.387591],[1.533638,6.175531,-2.768160,8.790997,1.730623,-6.423384,1.060149]],[[4.662961,-2.636322,2.059500,-1.939595,-4.975870,-7.619466,4.837764],[-3.188988,-5.569601,8.004370,6.511316,4.350474,-7.893421,-3.571276],[6.084484,-1.468889,-7.906649,4.501577,-6.816435,-6.343095,-6.150256],[-9.801744,-4.534734,5.260933,-3.102813,-8.292057,6.974272,-5.324789],[-7.006861,-8.328632,-5.573788,-2.101031,3.969416,-9.955985,-2.373543],[-8.988716,3.695429,-6.926840,-0.835109,8.541281,-9.982088,-8.778490],[3.113504,6.134222,8.252973,6.005102,-2.022951,3.645691,-9.116025],[4.343944,-3.599818,0.191436,-9.146398,5.822939,3.897211,3.658691]],[[-5.136525,4.976353,-0.751860,-4.426306,-4.482581,0.747891,8.711317],[0.442880,-0.701606,-0.118403,-7.212118,7.120895,9.604259,0.427746],[3.584169,-1.904952,-7.238329,0.728072,5.713819,6.414748,0.565060],[-7.951027,9.522961,-1.173079,4.196039,-7.361730,-7.532082,-3.606026],[1.011979,5.241753,3.522953,-4.566649,1.828104,-1.740570,7.559777],[5.832285,6.561037,-5.421529,6.566439,-6.695236,6.162533,-0.194453],[-3.187677,-0.645770,8.974507,-5.833636,9.974070,-0.710712,-0.479785],[7.668782,-2.853815,3.681546,5.973307,-7.313217,-7.721776,2.447131]],[[-4.529087,-0.700042,-3.768747,-7.501320,-8.593757,-5.311598,2.950338],[-6.669690,-7.205032,-8.508085,-4.287934,-6.923532,4.561775,-8.624631],[1.359742,4.074436,-6.825266,3.709224,-7.934651,-9.687395,-2.262641],[0.929260,2.958631,-4.134122,2.821216,7.351499,-7.402924,7.864167],[-2.320974,3.532964,1.552587,5.552050,-3.974802,7.027941,-2.206373],[9.487114,-8.612677,4.615186,8.926734,6.083985,-6.737050,-5.941872],[-1.703813,-5.735184,-2.520700,9.530936,-0.830058,7.667281,9.080797],[-6.270601,-5.241310,-1.792748,-1.106575,-5.409121,4.748462,-5.743889]],[[-3.799384,-6.658384,9.907770,-5.632908,0.908350,9.085464,-9.429338],[-2.607612,1.960771,-8.191761,8.073488,8.355468,-9.149486,3.025073],[8.035472,5.175011,-8.643678,0.774954,-3.839248,2.050216,9.132100],[1.039436,0.805960,7.451113,-2.043805,-7.366550,-5.336923,0.414107],[-2.607743,8.106244,1.134743,6.813946,-4.115789,1.820433,-6.228029],[-4.148280,4.818620,-8.676518,-8.842863,-0.664579,6.746739,-6.818956],[-3.274646,-3.177959,-1.445677,-6.228957,-2.199626,9.530672,-9.760104],[2.722371,-5.199837,-9.846981,4.322374,-0.623590,-0.011436,8.261003]],[[-2.844319,-4.305766,6.257589,4.887275,-2.257042,1.774489,5.603061],[4.944881,6.258902,5.751065,9.328803,-8.015564,-8.113538,-4.685154],[9.565350,-2.028936,4.352587,-8.891385,5.530761,-2.682568,5.330869],[-7.860342,-1.690248,6.567269,-9.571805,6.319421,-7.046271,-4.199259],[1.620411,-1.012529,-1.001078,-0.521331,4.356259,4.771713,-9.049295],[-1.801881,1.902305,-6.143184,-0.621004,-7.158678,-1.881857,-1.270896],[7.104373,7.302845,3.155861,6.974419,-1.001470,6.196991,-1.749084],[-8.253286,-7.301370,-5.248803,4.864308,-2.651978,-7.428843,-6.038624]]], dtype = "float64")#candidate|5097|(11, 8, 7)|const|float64
uop_5098 = relay.sqrt(const_5097.astype('float64')) # shape=(11, 8, 7)
output = relay.Tuple([uop_5098,])
output2 = relay.Tuple([uop_5098,])
func_5100 = relay.Function([], output)
mod['func_5100'] = func_5100
mod = relay.transform.InferType()(mod)
output = func_5100()
func_5101 = relay.Function([], output)
mutated_mod['func_5101'] = func_5101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4808_call = mod.get_global_var('func_4808')
func_4809_call = mutated_mod.get_global_var('func_4809')
call_5131 = relay.TupleGetItem(func_4808_call(), 0)
call_5132 = relay.TupleGetItem(func_4809_call(), 0)
func_2364_call = mod.get_global_var('func_2364')
func_2366_call = mutated_mod.get_global_var('func_2366')
call_5137 = relay.TupleGetItem(func_2364_call(), 0)
call_5138 = relay.TupleGetItem(func_2366_call(), 0)
func_2878_call = mod.get_global_var('func_2878')
func_2882_call = mutated_mod.get_global_var('func_2882')
var_5154 = relay.var("var_5154", dtype = "uint32", shape = (224,))#candidate|5154|(224,)|var|uint32
var_5155 = relay.var("var_5155", dtype = "uint8", shape = (8,))#candidate|5155|(8,)|var|uint8
call_5153 = relay.TupleGetItem(func_2878_call(relay.reshape(var_5154.astype('uint32'), [2, 8, 14]), relay.reshape(var_5155.astype('uint8'), [1, 8]), ), 6)
call_5156 = relay.TupleGetItem(func_2882_call(relay.reshape(var_5154.astype('uint32'), [2, 8, 14]), relay.reshape(var_5155.astype('uint8'), [1, 8]), ), 6)
output = relay.Tuple([call_5131,call_5137,call_5153,var_5154,var_5155,])
output2 = relay.Tuple([call_5132,call_5138,call_5156,var_5154,var_5155,])
func_5159 = relay.Function([var_5154,var_5155,], output)
mod['func_5159'] = func_5159
mod = relay.transform.InferType()(mod)
mutated_mod['func_5159'] = func_5159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5159_call = mutated_mod.get_global_var('func_5159')
var_5161 = relay.var("var_5161", dtype = "uint32", shape = (224,))#candidate|5161|(224,)|var|uint32
var_5162 = relay.var("var_5162", dtype = "uint8", shape = (8,))#candidate|5162|(8,)|var|uint8
call_5160 = func_5159_call(var_5161,var_5162,)
output = call_5160
func_5163 = relay.Function([var_5161,var_5162,], output)
mutated_mod['func_5163'] = func_5163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4430_call = mod.get_global_var('func_4430')
func_4432_call = mutated_mod.get_global_var('func_4432')
call_5217 = relay.TupleGetItem(func_4430_call(), 2)
call_5218 = relay.TupleGetItem(func_4432_call(), 2)
output = call_5217
output2 = call_5218
func_5226 = relay.Function([], output)
mod['func_5226'] = func_5226
mod = relay.transform.InferType()(mod)
mutated_mod['func_5226'] = func_5226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5226_call = mutated_mod.get_global_var('func_5226')
call_5227 = func_5226_call()
output = call_5227
func_5228 = relay.Function([], output)
mutated_mod['func_5228'] = func_5228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4166_call = mod.get_global_var('func_4166')
func_4168_call = mutated_mod.get_global_var('func_4168')
call_5233 = relay.TupleGetItem(func_4166_call(), 0)
call_5234 = relay.TupleGetItem(func_4168_call(), 0)
output = call_5233
output2 = call_5234
func_5251 = relay.Function([], output)
mod['func_5251'] = func_5251
mod = relay.transform.InferType()(mod)
output = func_5251()
func_5252 = relay.Function([], output)
mutated_mod['func_5252'] = func_5252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3407_call = mod.get_global_var('func_3407')
func_3408_call = mutated_mod.get_global_var('func_3408')
call_5253 = func_3407_call()
call_5254 = func_3407_call()
output = call_5253
output2 = call_5254
func_5265 = relay.Function([], output)
mod['func_5265'] = func_5265
mod = relay.transform.InferType()(mod)
mutated_mod['func_5265'] = func_5265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5265_call = mutated_mod.get_global_var('func_5265')
call_5266 = func_5265_call()
output = call_5266
func_5267 = relay.Function([], output)
mutated_mod['func_5267'] = func_5267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_5293 = func_1978_call()
call_5294 = func_1978_call()
func_3079_call = mod.get_global_var('func_3079')
func_3080_call = mutated_mod.get_global_var('func_3080')
call_5323 = relay.TupleGetItem(func_3079_call(), 0)
call_5324 = relay.TupleGetItem(func_3080_call(), 0)
func_100_call = mod.get_global_var('func_100')
func_102_call = mutated_mod.get_global_var('func_102')
var_5335 = relay.var("var_5335", dtype = "float32", shape = (2145,))#candidate|5335|(2145,)|var|float32
call_5334 = func_100_call(relay.reshape(var_5335.astype('float32'), [13, 11, 15]))
call_5336 = func_100_call(relay.reshape(var_5335.astype('float32'), [13, 11, 15]))
output = relay.Tuple([call_5293,call_5323,call_5334,var_5335,])
output2 = relay.Tuple([call_5294,call_5324,call_5336,var_5335,])
func_5353 = relay.Function([var_5335,], output)
mod['func_5353'] = func_5353
mod = relay.transform.InferType()(mod)
var_5354 = relay.var("var_5354", dtype = "float32", shape = (2145,))#candidate|5354|(2145,)|var|float32
output = func_5353(var_5354)
func_5355 = relay.Function([var_5354], output)
mutated_mod['func_5355'] = func_5355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_5477 = relay.TupleGetItem(func_3658_call(), 0)
call_5478 = relay.TupleGetItem(func_3659_call(), 0)
output = call_5477
output2 = call_5478
func_5480 = relay.Function([], output)
mod['func_5480'] = func_5480
mod = relay.transform.InferType()(mod)
mutated_mod['func_5480'] = func_5480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5480_call = mutated_mod.get_global_var('func_5480')
call_5481 = func_5480_call()
output = call_5481
func_5482 = relay.Function([], output)
mutated_mod['func_5482'] = func_5482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2119_call = mutated_mod.get_global_var('func_2119')
call_5499 = relay.TupleGetItem(func_2118_call(), 0)
call_5500 = relay.TupleGetItem(func_2119_call(), 0)
func_2666_call = mod.get_global_var('func_2666')
func_2667_call = mutated_mod.get_global_var('func_2667')
call_5507 = relay.TupleGetItem(func_2666_call(), 0)
call_5508 = relay.TupleGetItem(func_2667_call(), 0)
func_968_call = mod.get_global_var('func_968')
func_972_call = mutated_mod.get_global_var('func_972')
var_5511 = relay.var("var_5511", dtype = "float64", shape = (504,))#candidate|5511|(504,)|var|float64
const_5512 = relay.const([3.109260,9.884447,1.309647,-9.268124,1.349462,6.520784,-2.597808,8.332806,1.023016,6.967523,-5.532938,-7.978262,-4.836290,-1.468986,-8.017428,9.207739,-9.619586,-0.558474,2.810930,8.757295,-2.035420,-3.213477,-7.855753,4.479897,-9.811962,-3.196207,-7.819204,6.024208,-3.800535,-4.281468,8.114718,6.558076,9.212317,-0.722651,-7.259457,9.152519,-6.990056,1.816361,1.084188,-7.835199,-8.765554,-1.956322,-4.013346,6.955939,9.248473,9.077022,9.173731,9.575023,-1.026496,-9.308266,6.204694,5.349532,1.134274,-8.761732,2.907624,-6.389693,6.241466,7.489873,-1.184624,7.689514,-0.630571,1.188100,9.924583,-3.369132,-9.456508,-9.190902,-2.072210,6.151866,3.284987,1.845291,4.753042,-6.016521,-0.509287,-1.940231,-6.746164,7.554786,-1.184777,4.547537,9.203473,9.531415,-4.179843,4.668391,-8.971418,-4.269990,3.082522,-1.983804,6.861203,5.829033,-5.935380,-0.577977,5.195669,-9.911581,-6.915908,5.059102,4.403386,0.806202,6.524760,3.714593,-3.232133,5.964158,5.913002,-2.333452,-2.872367,-6.401375,6.670752,1.346283,-8.443090,-5.929999,0.055689,-9.279073,-0.310127,-1.751278,6.823297,0.189270,5.978856,8.989441,8.736359,8.954428,4.061035,-9.233376,5.341481,-5.624010,3.994117,-4.794892,-9.952307,-2.591427,1.646379,-3.203030,-0.873084,-5.209553,-1.813739,-9.066544,2.662069,1.089916,7.626195,0.160813,-6.263240,7.005355,-4.025750,-7.310015,-1.367516,3.086820,-3.258381,-6.475169,-5.647610,-7.051392,-4.565529,-4.210647,4.386038,2.439978,2.726790,6.615564,-7.619048,-5.820578,-9.629690,1.964662,2.769180,-1.256526,3.026252,-0.205141,4.330411,-7.417711,7.645900,4.266759,5.894234,1.558628,1.102413,-4.638341,5.532947,-0.362502,9.610068,1.753766,8.616548,-7.605489,-5.326321,-1.087543,-8.624210,-7.533599,0.812150,-6.686949,-1.994634,4.369258,-3.565040,9.484058,-8.847244,3.625578,4.363661,-2.706511,8.074995,5.378379,6.347213,8.503681,6.634419,8.591831,-6.693733,3.652260,-9.348406,-6.499013,-1.153599,-3.127239,-4.819294,-7.566617,-9.566052,-8.045738,-3.498541,-4.854500,8.173302,3.329101,2.246530,9.689271,-3.057873,-0.824075,0.407718,8.795132,-9.755383,9.286382,1.830546,-5.425675,-2.284432,9.177574,2.665259,6.445995,-8.011046,6.354282,2.119984,5.738831,9.295565,-2.568722,-0.295850,-1.891152,-8.538915,1.851410,5.554356,8.634326,-1.365623,-6.683715,-4.508578,-6.840419,-1.400808,-4.622214,-5.060248,8.474635,3.294242,5.279768,1.645833,-6.084287,4.305219,-6.246454,-5.286642,-8.081878,-2.954583,-3.444249,-6.495401,7.953623,-6.017200,9.010213,5.603217,-3.299603,-5.290759,2.177244,6.256652,9.866985,4.582319,8.312527,-1.664851,9.198394,1.862978,5.383939,-8.494872,-6.208772,6.456577,-5.318055,8.169215,1.590631,-1.788770,7.165166,0.510749,-4.991500,-6.220094,-9.469268,9.397283,-5.506947,6.842222,7.988332,-6.176575,-4.060994,5.750554,4.041164,2.239571,-6.538967,0.165575,4.515551,9.469623,5.815828,2.721607,-4.525047,2.337965,0.154236,-4.120217,5.229792,5.567163,-0.107019,-0.172482,4.759287,7.842789,7.551172,3.567565,3.780810,-5.817143,0.385489,-3.241741,-9.183438,-5.419531,-6.028514,-9.056609,8.290732,3.309853,-6.625503,2.924319,6.300119,-6.120954,1.141752,9.289148,-5.420738,-6.305984,0.194824,5.410136,-5.115962,-9.770696,-4.099209,-7.206852,-1.507501,-4.600578,5.950916,-3.907026,-7.931836,3.195989,-7.205241,-0.474912,-1.652505,-2.781655,0.226015,-6.397574,1.590010,-9.915911,5.158431,-8.347407,-6.201077,9.728438,-8.532431,-8.034949,-0.159249,8.201798,-4.019021,0.330222,-6.384622,-2.410395,2.778852,7.959714,7.332350,-8.312605,4.363456,-6.749008,7.514193,4.117718,3.367425,-4.664847,-3.876901,7.183855,6.736710,8.735355,-6.534439,3.178151,-4.967118,8.244820,-4.151854,9.112022,-5.147467,3.629040,9.099022,1.916424,-4.676652,-7.336897,5.648757,1.682984,-1.755157,-9.850645,0.391244,-8.033382,0.329318,2.078609,2.314639,7.715303,8.087686,-2.975212,7.716731,1.133463,4.479882,-8.862599,4.558580,-9.853396,3.880444,6.838609,-9.181417,-4.255767,3.805881,-0.457938,-8.105262,-6.707430,-5.228084,-9.725827,-3.621065,-0.867003,2.552974,5.258571,-2.892731,-8.416968,-5.011603,-2.091372,2.975475,-9.464587,3.834247,-8.127696,-6.735730,3.832837,7.250218,6.629852,3.985855,7.915691,-7.533290,-7.917138,-6.854543,-9.450991,-9.089640,-2.019072,-3.545021,-6.819729,1.061031,4.476218,1.817549,-3.170975,5.969101,-6.728410,6.006732,8.761522,-1.365305,0.288281,7.026235,-8.912031,-8.123301,1.572119,1.649041,-6.788655,-9.297163,5.941146,-6.843642,-8.269891,6.499529,6.675874,0.883117,-6.258847,-5.873527,-6.124406,-7.126561,0.943033,4.398479,2.313191,-3.491560,3.645139,3.278974,-6.420441,4.275981,8.300000,5.052014,2.840277,-7.250331,3.842717,3.818270,-5.098706,-5.606399,1.999715,-8.290485,-8.935186,-4.702812,-4.074728,-0.526597,-0.387374,5.489165,-4.770069,-4.221299,3.226894,-9.697588,8.816410,7.091889,3.736489,2.705539,5.517142,6.453218,-4.344061,-8.865040,1.794184,1.532689,-7.902513,-6.118436,7.374019,-3.664183,7.145277,6.285938,5.814715,-0.603927,-2.040608,3.315768,6.973302,-1.845210,-0.915826,-8.526008,7.635353,1.931823,2.745228,7.783184,-9.512312,6.003084,-3.673665,-9.326522,4.481015,-6.248618,-8.517278,-0.344432,-1.978720,4.652377,3.994413,-3.192872,8.266665,-9.891882,9.283037,-2.129274,0.299460,8.527943,-2.139845,6.601581,-9.052275,-1.443835,4.913288,3.534769,6.955850,7.380425,-2.711325,2.938606,8.611693,-0.879378,1.764001,4.764430,7.728152,-7.954481,-7.788971,3.060123,1.904747,-0.653290,-4.401903,-9.778355,-7.607422,-3.253096,-8.962355,6.262791,9.869781,-5.832667,-7.263482,-3.136036,9.029407,0.938434,-9.845642,-9.762215,-5.179573,8.542900,-5.117561,-2.629563,0.773694,-2.324285,1.513516,0.626015,6.319793,3.374857,0.757181,7.478918,1.178803,2.724663,-9.119978,7.394971,-4.827293,0.838825,5.181582,8.748233,2.034264,-1.014471,5.949255,5.725517,7.300734,-8.948885,-8.190513,0.691671,3.023244,-1.265026,4.003257,-7.077387,-0.947738,-8.527000,-1.855155,-4.736426,5.875677,-0.612314,-1.243541,-0.926923,-2.940746,7.837782,-8.164815,-1.267981,5.241282,2.651502,8.667183,-3.096274,-5.437152,4.241309,-3.649066,-5.565472,-1.347764,7.084502,-0.632593,-9.692061,-9.919763,-7.855386,7.599522,-9.988633,3.582439,2.306923,-2.315042,-0.632586,-8.292130,0.402366,7.165952,5.477479,-7.733190,-0.547245,-3.997203,7.676094,-0.484973,9.473135,7.511533,-5.954544,-5.529405,2.484460,8.084722,6.321858,0.340910,5.502692,-7.741666,-7.191271,4.602617,4.767177,3.095857,-4.999903,-7.991617,7.078776,-0.913330,-6.021018,7.715561,0.033749,7.279468,4.012414,3.738975,0.584591,3.989518,-0.783914,3.820991,-6.716636,-9.931609,-7.156462,-7.706267,-1.863461,-8.559766,4.165972,-7.642014,-1.884822,8.916349,-9.334803,-0.814614,-1.385191,2.070062,-4.074483,9.172181,-5.602128,-4.320627,-5.037095,-5.670725,9.291123,-1.646178,4.858443,2.571727,-6.566008,5.792618,7.045860,4.578188,5.636041,-8.327861,6.326997,-5.841879,1.503236,-1.282524,7.037044,0.010565,3.734193,-9.879054,-9.740227,1.959324,-9.659818,-5.338032,-0.986271,-9.340253,-0.886072,-6.851598,-1.737463,6.908222,4.112667,8.091117,9.240656,0.375112,-5.722437,7.853686,9.586826,-3.016491,7.401048,7.583385,-6.475598,3.344496,-5.373942,-1.368305,-2.829789,-2.051931,8.232210,-3.205066,-1.941830,-6.115596,5.044910,-7.654128,-7.016741,0.012750,5.493009,6.681053,-6.032787,-7.698999,-1.687376,3.454262,8.617900,-7.253129,7.259501,5.535324,-1.671949,2.514803,1.938046,-5.158992,-3.703055,8.356140,-6.214016,5.402175,3.114142,9.164765,-3.764305,-7.221948,8.604131,-9.339853,6.310607,-5.729064,9.578710,-6.508316,6.205010,-6.864298,-9.406545,4.689404,1.983086,8.479914,2.807581,-8.452413,7.780404,1.067992,-0.847597,5.655314,7.396176,0.947596,2.958170,4.302434,3.852960,-3.251594,9.728604,-7.229538,-7.181511,7.057215,8.094634,9.422940,-1.018121,2.068579,8.096934,-9.340502,-2.501777,4.874414,2.457908,9.878567,9.593535,-1.974406,8.472243,7.344475,-5.572757,9.861690,-4.287280,-8.428790,6.082592,3.571072,7.102212,7.778699,-5.486028,7.197551,4.471297,-6.679085,3.080518,3.004890,2.190059,-2.721083,9.600898,3.368804,1.058036,-9.437319,5.575673,6.012355,-8.949209,5.448946,5.757287,-8.664221,2.722041,0.038560,-5.129067,9.178633,8.924212,0.088963,-5.793451,8.317166,0.268611,-5.430647,8.681433,5.595744,3.337086,-1.254454,4.382125,3.184205,1.804485,5.465088,-0.649516,-3.015874,9.801197,-5.663287,-1.188126,5.095022,-2.960998,7.598536,3.811505,3.591287,3.536964,2.941981,-1.019723,4.774428,-6.414633,4.295855,6.715528,-0.927163,-3.967024,-1.005708,-7.154623,-3.351162,-8.463550,4.834899,-8.935371,-6.222613,-6.034966,-1.115705,-5.507753,3.150546,9.783202,3.399077,-7.172279,5.776407,1.739853,7.033174,5.543959,-9.397388,1.576871,4.872441,-8.229226,1.872990,9.593351,3.338475,1.204533,-5.801376,-3.113426,-6.912244,-9.873545,2.806226,7.517282,8.689283,-3.498024,-2.162828,9.644041,8.782775,7.452873,3.164653,-3.598280,7.835009,2.423548,-1.248929,0.031757,-7.291732,-9.990745,4.197490,-8.515801,-9.062783,-9.107055,7.666032,-2.085025,0.174571,3.630226,4.331309,-5.056908,-9.931485,-6.333722,9.800940,2.211816,2.472820,9.554559,5.075669,-1.177897,-6.324895,9.263728,-3.809245,-7.948030,1.218550,-1.184966,0.930671,4.312841,-2.164758,7.733029,-1.469556,0.904861,-1.773038,-0.767887,0.885667,-9.809909,-8.142306,3.912259,9.512119,-3.474303,5.129516,9.912264,9.682651,-7.079576,5.016956,8.865388,-3.441964,8.049148,4.980449,9.346231,-4.125107,-6.633803,3.811202,-7.411531,7.865837,1.680302,1.789509,-5.197351,-5.838227,4.043083,-0.497726,6.997786,2.824771,1.441523,-5.377460,4.269551,-8.794597,3.631560,6.404590,4.122949,3.054973,-0.430278,7.720830,0.271765,4.430058,1.180383,-6.332868,6.199085,-9.365128,-8.793179,7.015580,0.828153,-6.845796,4.946389,-9.395568,-4.671706,3.302588,4.607698,1.197513,-8.020348,8.627595,-3.160101,-4.054507,2.023886,6.736064,-4.203379,-8.146903,-5.030083,-1.172339,-3.215677,-6.511006,-4.870177,1.251926,4.470833,7.470951,-7.097861,8.970855,-3.407145,-3.708444,-6.127870,0.742304,-7.596380,6.970130,-4.181913,-3.558219,-3.013314,-6.429392,-6.554960,-9.401201,-8.383871,-3.183046,-5.643026,-2.483192,4.453277,3.930399,-1.278819,-6.614266,-3.777732,4.707399,-6.213040,7.798245,9.261977,3.514889,-0.449458,0.073271,8.995522,0.461674,5.509639,-6.136164,-7.217760,0.527352,1.105343,1.825748,8.291762,-4.419357,-4.659592,-6.797984,1.732098,7.872424,-8.322278,1.789532,-9.218502,3.743483,-9.592566,6.236259,7.035213,0.218903,-4.367044,-9.054205,6.823380,1.339645,1.255604,1.555571,-5.364691,-7.634873,4.872608,-7.834861,-1.491541,-4.485854,-2.768949,7.119205,-7.639888,-9.579982,8.134342,-5.353263,3.023701,-6.902980,4.352728,-9.556763,-7.835279,-1.812003,-9.127859,-1.038577,3.566101,7.503499,-9.398331,6.754355,6.420250,6.921401,0.051920,6.200017,-5.705180,6.768914,-3.353021,0.941805,-7.189484,-5.204053,-2.733466,1.860035,3.182816,2.575659,3.793456,-2.513121,-5.304638,6.494404,7.048008,0.671461,-2.812576,-0.414047,-4.961594,9.714726,6.489863,1.421290,-1.398413,9.041573,9.264379,4.926055,-8.454031,7.772283,-9.217945,-0.159485,5.319355,6.903675,-0.675717,-5.623192,1.355372,6.163240,-4.749669,-0.076358,0.135896,-0.848341,1.892040,2.607647,-6.069551,-6.730908,4.719853,-5.170228,-6.100335,-2.282259,7.763615,3.934590,-5.129613,-0.516428,6.826034,-7.192549,-7.420752,3.918632,-0.109396,2.460252,0.217773,4.787212,-0.988977,-2.782080,4.806951,8.031655,1.182317,7.277893,4.970908,-9.581367,6.805251,7.953819,-4.401146,0.211974,4.060013,4.994230,-5.600625,3.521735,-1.794645,-6.999945,-8.727311,2.216483,-4.800554,-8.597706,-3.565059,2.320044,3.397184,1.293223,2.726420,-4.271803,-4.699545,-2.422934,2.687991,0.134347,3.004566,3.572457,-7.234215,1.759373,-5.292789,-3.479154,5.966464,-1.500239,6.406396,-2.950023,-7.383833,9.978911,-3.612233,0.398736,-7.495211,7.392780,-5.471454,6.087481,5.210826,-1.813618,-1.570384,-0.261542,-7.150724,-0.327128,4.008380,-5.908328,-2.952942,-7.372314,5.712783,-3.340471,-4.344378,7.784411,-0.799410,3.435274,-0.375648,1.607194,9.621670,-5.143441,-6.769445,9.352933,0.047054,4.880469,5.517513,-0.442222,-4.659531,-8.717895,-8.657018,2.199087,4.766570,2.163926,-4.196052,-7.245775,-8.728800,4.764695,-3.064898,-6.001670,1.337645,5.446722,7.807736,7.100482,-8.391718,1.802482,-3.723574,9.556762,6.478979,7.013045,-9.482711,2.226486,-4.980445,7.140736,0.929553,-9.338176,-9.834265,-3.276642,2.726818,4.464997,1.020978,-2.796062,0.575835,3.437598,-1.314970,9.851536,9.422815,-1.778287,4.420288,-6.601910,0.035061,3.944051,-4.333323,-5.023737,-0.259377,0.839810,-0.130080,2.118782,3.660088,-4.216061,1.329587,-5.719004,0.914779,-1.755392,2.772039,1.951573,2.413439,-2.515885,-0.542811,3.451507,-1.243649,9.902667,-6.087861,-3.352842,6.001711,-9.080208,-3.233092,2.592858,9.901730,7.280237,-7.572373,8.370857,2.671267,3.785996,-8.145653,-6.406442,2.771170,9.223256,-2.100254,-3.617302,2.695144,-6.217529,6.022458,9.441141,6.808677,3.796194,1.724286,5.918355,-0.839141,6.579639,4.743985,5.078985,6.719407,5.874714,1.296547,1.960795,-4.322680,-8.807120,-1.133721,-3.147401,-1.289940,3.296918,-6.970012,4.513221,-5.172285,-1.688445,-7.029249,-0.521499,-6.255507,-8.155530,3.866614,-4.043722,2.899701,-1.030902,-0.205289,-8.570016,-8.965770,9.420251,-6.061687,-0.963466,8.265545,1.740215,-9.337716,6.366661,3.382650,-3.429907,3.167309,-6.364774,-6.588717,-2.784531,5.963192,6.309524,0.319383,-6.643810,3.576758,-6.527662,1.401369,3.986833,5.419733,2.908376,-1.122493,-0.304844,-8.502225,-1.204035,8.052025,-2.697943,5.059707,-8.212002,-5.468983,5.412543,6.203830,-5.773993,2.816109,6.778509,-4.289715,5.598717,-7.573110,-0.778095,-5.765864,2.565598,-5.412943,-0.258691,-5.166230,-5.965918,4.408431,-6.079710,2.355062,-2.383473,-1.035200,5.985365,-9.640758,5.021113,-9.129488,0.688119,2.051216,-4.939003,-7.383819,1.870748,-4.399509,4.404909,6.180817,-5.994845,-5.180717,7.114615,-6.339710,7.915033,4.205805,-7.626304,7.703657,-0.167355,-3.877825,-3.670435,7.100778,8.181004,9.639946,-5.756463,4.347250,5.536957,0.701169,-7.794047,9.798154,-6.530628,0.685953,2.374253,-8.126371,6.216096,-0.116522,-5.225412,1.351313,4.622313,-1.080438,-5.694971,1.993068,-5.341862,-9.549256,-8.610052,-1.492568,2.791331,4.819653,-6.880476,-0.476207,2.512364,7.456455,1.981259,2.687123,9.005458,-8.755493,3.235710,7.873833,-4.226298,2.295061,-1.509901,2.589717,4.370771,-6.420588,-2.330220,4.026520,1.274547,2.051020,8.255799,-9.641398,0.893061,-1.448949,-3.031157,-0.283853,-7.984101,9.001750,2.350736,-5.861339,-4.937779,8.652514,6.130780,-0.859491,1.077700,4.515639,-0.991783,-1.622664,-3.467996,2.754951,-0.161407,7.136553,1.519928,6.038233,8.631160,4.302554,-0.508105,6.673244,2.360687,1.996805,8.891011,9.804629,-6.706357,8.435657,4.397477,8.085936,-4.502046,-8.452295,0.661545,1.262081,9.927608,-9.459086,9.136113,4.856285,3.871891,2.146966,-4.859323,9.635822,-7.399095,2.341057,1.092311,-7.825713,-2.803859,6.133893,-2.936342,-8.338415,2.083429,-9.559295,-8.683287,2.592830,-6.895630,9.688882,2.312004,4.533594,7.270248,3.491673,9.893562,2.754449,-6.871917,2.506482,8.341424,-0.501018,4.017530,9.926767,5.065707,3.459564,7.942548,-1.541319,8.979647,2.931183,-8.191611,6.577001,-4.078928,3.084868,0.130087,7.831886,3.560669,9.944544,-3.900125,-6.657454,2.689817,6.336286,-6.756238,-7.139207,6.998631,4.919602,-2.404587,7.680535,1.880280,-5.502420,-1.031842,1.904467,9.653687,-0.261775,7.623249,1.881744,-3.877890,5.782723,-2.591299,7.380314,8.946593,-6.150025,9.874204,-7.107837,-7.338251,-2.108945,2.649282,-3.693152,-8.492779,-9.144790,-5.288838,2.862550,3.000687,8.379990,-5.511539,8.429568,2.935718,0.009997,-5.880999,2.765743,-1.292885,6.402336,2.672936,2.601971,-5.291832,0.126675,7.669678,0.007939,-9.990931,7.166387,3.358684,-8.052392,-1.631900,-9.289804,-7.349785,1.619592,9.318983,-7.664413,3.126524,-8.746076,3.491512,-2.137446,-5.211742,0.116996,-9.356934,0.487467,-1.094626,2.537996,-3.587909,0.532999,5.789216,8.692282,8.867483,-9.562903,1.270526,-4.182495,-5.133085,-7.015433,-2.209661,3.664204,-3.432530,1.663720,7.967056,3.132845,-5.142532,-3.274611,3.835511,-0.422642,5.901351,5.658512,4.120567,3.768316,-8.510135,7.467977,-1.582761,-8.052385,1.923242,3.485611,-9.594437,-2.525700,9.584629,-5.274858,2.733545,0.118296,1.105863,0.982485,-7.384986,8.711340,-9.005920,7.120978,5.380926,8.568056,1.969154,5.125415,2.861301,-8.381371,-2.588244,-3.170156,6.320161,-2.230672,-7.707737,-3.676730,4.879683,-7.887103,-3.455846,-0.207047,0.295125,-5.259350,-0.207098,-9.186472,-0.825797,-4.186860,1.491924,-8.741507,-1.969300,-4.646181,-8.196279,6.348356,-7.046936,-4.427906,6.056899,-4.532582,-2.704182,-2.497515,3.228851,8.476447,6.951123,-8.149849,-6.020102,-0.166059,-0.429135,4.084770,4.727557,-2.041352,-0.108096,-9.368841,4.071714,-8.480456,3.362603,-6.234780,3.468483,-3.612876,2.770720,-1.193686,8.919480,-6.960400,7.194983,7.783178,-6.338950,-4.000063,-8.566157,-6.253790,0.469410,1.005064,7.172025,0.886882,0.316400,-9.458582,1.702789,-2.484652,5.322985,-8.631183,4.661685,1.391460,4.921985,-9.175301,-7.862492,3.217499,-9.001975,-9.755924,-4.555413,-8.922408,-3.548194,-0.435212,1.993987,-5.824776,7.678576,8.275689,-3.924534,-5.112819,-0.869134,4.193254,0.667734,9.030184,-0.730218,-3.265849,8.662790,-2.115881,9.833504,5.864693,-0.499008,9.108492,-0.553094,-8.564884,7.007167,-5.801427,7.454796,-2.785930,-3.127107,-8.158754,0.122953,8.729521,-5.009002,-9.659795,-4.846266,-0.129605,-0.818016,-0.271076,8.746501,4.507377,7.292691,-1.983455,-1.110109,-0.499707,-9.455280,9.842509,7.212384,6.783976,-9.448273,4.359901,8.804790,8.730110,6.421589,8.345170,-1.792516,6.423152,-4.801413,4.748770,-1.326971,-8.053102,-7.067335,-9.564626,-6.235394,2.607067,-6.476797,-9.834531,7.891226,2.719201,4.901919,3.703790,0.647149,-8.789033,-6.100046,-3.888496,5.587433,-1.826166,-4.248590,8.325164,-4.580429,-7.469587,0.998124,-9.666147,-9.898030,3.337409,-9.730070,-3.076005,3.673577,-6.990587,-4.742648,-4.713504,0.624529,7.255610,5.749240,-7.802170,-2.087695,-8.631963,4.517153,-6.716252,-9.354343,-2.869956,-4.545237,0.829286,5.754656,5.834249,-4.696459,2.710501,-2.782853,-6.429272,4.437491,2.817339,6.438561,3.392469,6.494256,-5.398523,8.458980,-9.643220,7.706907,2.192019,1.639484,-7.263349,-0.487719,4.834964,9.804330,-9.382659,7.278451,-8.208308,-0.558270,3.729887,8.692567,5.083401,-7.029622,-2.283538,5.032683,-6.027746,-9.885845,4.294632,-6.613183,-8.833590,-6.649895,-8.518740,-9.075071,-6.725188,-6.106531,-4.489398,7.673001,-5.925105,-4.049190,-7.813515,-5.016013,-3.013962,8.035479,0.626890,5.090775,6.288852,9.933413,4.302683,-7.370891,-7.612068,1.906449,-0.210982,-4.346821,8.087603,9.716135,0.525469,-6.985974,1.977717,9.165945,-7.666091,-9.483182,-6.798266,3.523590,0.793310,1.219474,4.731051,4.135712,0.782411,-3.377063,-6.689573,-5.455278,-7.520013,5.536620,4.065524,-3.869813,4.886726,1.368516,-5.662263,2.280897,0.409729,9.479904,-5.661454,-1.701142,8.153168,-0.313031,8.330651,8.217487,3.774031,8.947678,7.711009,-2.348402,-8.074623,-1.241386,2.766542,-7.338180,-7.886979,3.230835,-4.029185,-9.247002,-0.073470,5.769347,-7.173383,0.811230,-0.530405,-5.844905,6.697195,-6.525269,-2.546004,-6.683780,5.619660,-1.595488,6.109504,-5.471428,-6.044665,6.409664,3.006100,-3.693458,8.782001,4.257600,-6.590933,6.997309,2.770835,4.119142,-9.673658,9.644586,-2.746232,9.669985,7.689959,-6.779017,-8.120791,-3.588635,-1.210647,0.322920,5.877179,0.958884,-2.251787,2.536301,1.801961,-1.091426,-3.253403,4.522166,7.404809,-2.637780,-3.948726,-4.929444,-6.813616,-0.586856,3.557378,-0.208467,-0.040199,-3.515413,-8.359073,-4.806119,-9.402060,4.320817,-0.474103,-6.601295,3.544468,-9.965501,4.701188,5.549534,-0.204130,-2.650763,9.698608,-2.446683,0.570718,9.239941,-1.204315,9.870096,-0.967365,8.403423,7.061382,-4.218490,2.139368,-5.316974,-2.413468,-8.149466,1.668382,-8.579890,-9.424569,-1.098140,-7.622142,7.299539,-8.040326,4.302446,-9.070357,9.130549,-7.216552,-2.802334,1.590207,-6.140572,-1.287809,-9.648111,-0.126813,3.402461,5.240014,-9.146538,1.501918,-0.250245,-6.165988,-2.463862,-1.511224,-2.361473,8.759284,-9.476301,6.262079,-7.127276,-3.220050,8.834695,-5.434950,7.602419,-9.831618,5.323851,7.956614,4.489428,0.451559,-2.991773,-9.755673,8.428126,-7.033867,-3.047790,-8.702661,4.188407,0.703853,1.107636,5.486820,1.610270,-9.670639,8.257354,-4.698012,8.140687,-9.067785,3.663985,-4.703805,5.058838,0.832482,-4.434215,-0.657593,-0.757449,-0.395190,9.489265,-9.087130,-7.097031,3.709923,-5.297646,-9.410797,-0.916614,-7.665426,5.754875,-8.065510,6.014850,-6.248130,9.468433,2.223153,-8.504445,-2.549259,-9.160405,-2.180093,6.632856,-4.338242,2.120721,-6.981270,-6.921581,-7.837681,3.712879,-0.030547,-3.041498,9.958555,6.148083,4.733132,-4.715262,-7.986724,-5.208072], dtype = "float32")#candidate|5512|(2145,)|const|float32
const_5513 = relay.const([[5,10,-10,9,-3,-8,-4,-3,-5,-9,-9,-4,6,5,-10,-10,7,-4,-3,10,2,10,-5,4,4,-2,4,-1,6,10,3,4,10,-10,-1,-10,8,-2,6,7,-9,3,5,-6,2,-8,6,6,1,2,6,-6,3,-9,4,-9,5,8,9,-10,10,3,-3,5,-5,-6,10,-5,-2,3,2,-10],[-5,-6,4,5,-5,3,9,2,6,5,3,-10,6,-10,-7,-5,1,-7,7,-1,2,10,2,3,1,-4,8,9,7,-2,8,-7,1,5,7,10,-10,9,4,9,-2,10,-9,5,8,10,-9,6,2,5,7,-9,8,8,3,-7,-2,-6,8,7,-3,2,6,9,9,-9,1,-5,9,-9,3,-9]], dtype = "int64")#candidate|5513|(2, 72)|const|int64
call_5510 = relay.TupleGetItem(func_968_call(relay.reshape(var_5511.astype('float64'), [7, 9, 8]), relay.reshape(const_5512.astype('float32'), [2145,]), relay.reshape(const_5513.astype('int64'), [144,]), ), 1)
call_5514 = relay.TupleGetItem(func_972_call(relay.reshape(var_5511.astype('float64'), [7, 9, 8]), relay.reshape(const_5512.astype('float32'), [2145,]), relay.reshape(const_5513.astype('int64'), [144,]), ), 1)
func_3469_call = mod.get_global_var('func_3469')
func_3471_call = mutated_mod.get_global_var('func_3471')
call_5548 = func_3469_call()
call_5549 = func_3469_call()
output = relay.Tuple([call_5499,call_5507,call_5510,var_5511,const_5512,const_5513,call_5548,])
output2 = relay.Tuple([call_5500,call_5508,call_5514,var_5511,const_5512,const_5513,call_5549,])
func_5550 = relay.Function([var_5511,], output)
mod['func_5550'] = func_5550
mod = relay.transform.InferType()(mod)
var_5551 = relay.var("var_5551", dtype = "float64", shape = (504,))#candidate|5551|(504,)|var|float64
output = func_5550(var_5551)
func_5552 = relay.Function([var_5551], output)
mutated_mod['func_5552'] = func_5552
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5576 = relay.var("var_5576", dtype = "float64", shape = (10, 12, 2))#candidate|5576|(10, 12, 2)|var|float64
uop_5577 = relay.sinh(var_5576.astype('float64')) # shape=(10, 12, 2)
output = uop_5577
output2 = uop_5577
func_5590 = relay.Function([var_5576,], output)
mod['func_5590'] = func_5590
mod = relay.transform.InferType()(mod)
mutated_mod['func_5590'] = func_5590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5591 = relay.var("var_5591", dtype = "float64", shape = (10, 12, 2))#candidate|5591|(10, 12, 2)|var|float64
func_5590_call = mutated_mod.get_global_var('func_5590')
call_5592 = func_5590_call(var_5591)
output = call_5592
func_5593 = relay.Function([var_5591], output)
mutated_mod['func_5593'] = func_5593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4166_call = mod.get_global_var('func_4166')
func_4168_call = mutated_mod.get_global_var('func_4168')
call_5616 = relay.TupleGetItem(func_4166_call(), 0)
call_5617 = relay.TupleGetItem(func_4168_call(), 0)
output = call_5616
output2 = call_5617
func_5618 = relay.Function([], output)
mod['func_5618'] = func_5618
mod = relay.transform.InferType()(mod)
mutated_mod['func_5618'] = func_5618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5618_call = mutated_mod.get_global_var('func_5618')
call_5619 = func_5618_call()
output = call_5619
func_5620 = relay.Function([], output)
mutated_mod['func_5620'] = func_5620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2666_call = mod.get_global_var('func_2666')
func_2667_call = mutated_mod.get_global_var('func_2667')
call_5712 = relay.TupleGetItem(func_2666_call(), 0)
call_5713 = relay.TupleGetItem(func_2667_call(), 0)
output = call_5712
output2 = call_5713
func_5719 = relay.Function([], output)
mod['func_5719'] = func_5719
mod = relay.transform.InferType()(mod)
mutated_mod['func_5719'] = func_5719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5719_call = mutated_mod.get_global_var('func_5719')
call_5720 = func_5719_call()
output = call_5720
func_5721 = relay.Function([], output)
mutated_mod['func_5721'] = func_5721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2985_call = mod.get_global_var('func_2985')
func_2986_call = mutated_mod.get_global_var('func_2986')
call_5739 = func_2985_call()
call_5740 = func_2985_call()
output = relay.Tuple([call_5739,])
output2 = relay.Tuple([call_5740,])
func_5745 = relay.Function([], output)
mod['func_5745'] = func_5745
mod = relay.transform.InferType()(mod)
output = func_5745()
func_5746 = relay.Function([], output)
mutated_mod['func_5746'] = func_5746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3749_call = mod.get_global_var('func_3749')
func_3750_call = mutated_mod.get_global_var('func_3750')
call_5782 = relay.TupleGetItem(func_3749_call(), 0)
call_5783 = relay.TupleGetItem(func_3750_call(), 0)
func_2118_call = mod.get_global_var('func_2118')
func_2119_call = mutated_mod.get_global_var('func_2119')
call_5792 = relay.TupleGetItem(func_2118_call(), 0)
call_5793 = relay.TupleGetItem(func_2119_call(), 0)
bop_5797 = relay.bitwise_and(call_5792.astype('uint8'), relay.reshape(call_5782.astype('uint8'), relay.shape_of(call_5792))) # shape=(12, 13, 5)
bop_5800 = relay.bitwise_and(call_5793.astype('uint8'), relay.reshape(call_5783.astype('uint8'), relay.shape_of(call_5793))) # shape=(12, 13, 5)
func_4166_call = mod.get_global_var('func_4166')
func_4168_call = mutated_mod.get_global_var('func_4168')
call_5806 = relay.TupleGetItem(func_4166_call(), 0)
call_5807 = relay.TupleGetItem(func_4168_call(), 0)
func_3920_call = mod.get_global_var('func_3920')
func_3923_call = mutated_mod.get_global_var('func_3923')
const_5810 = relay.const([5,-1,-1,-8,-4,-2,-7,-4,-6,-4,10,3,9,-2,1,-2,1,1,-8,-6,4,-5,-5,-3,-7,10,-10,-7,7,6,1,2,-3,5,2,4,-3,8,-7,-1,-10,6,-3,1,-2,-8,4,6,5,-9,-5,4,1,8,-2,4,1,4,-3,-6,9,-2,5,2,-1,10,3,8,5,4,4,-1,-10,-10,7,1,-9,-1,-3,8,-6,-2,2,5,-5,-5,10,5,-1,6,1,6,-2,-6,-3,-9,-3,-8,-2,-2,-3,-9,5,3,-8,-5,-8,-1,-1,-3,1,1,-4,1,-1,6,-10,-7,8,-10,-10,-7,8,-7,5,3,-4,2,-3,-6,3,-8,-7,-9,-6,-1,-6,5,4,-2,1,-5,-10,-5], dtype = "int64")#candidate|5810|(144,)|const|int64
call_5809 = relay.TupleGetItem(func_3920_call(relay.reshape(call_5782.astype('float32'), [12, 13, 5]), relay.reshape(const_5810.astype('int64'), [24, 6]), ), 3)
call_5811 = relay.TupleGetItem(func_3923_call(relay.reshape(call_5782.astype('float32'), [12, 13, 5]), relay.reshape(const_5810.astype('int64'), [24, 6]), ), 3)
uop_5815 = relay.erf(call_5792.astype('float32')) # shape=(12, 13, 5)
uop_5817 = relay.erf(call_5793.astype('float32')) # shape=(12, 13, 5)
output = relay.Tuple([bop_5797,call_5806,call_5809,const_5810,uop_5815,])
output2 = relay.Tuple([bop_5800,call_5807,call_5811,const_5810,uop_5817,])
func_5825 = relay.Function([], output)
mod['func_5825'] = func_5825
mod = relay.transform.InferType()(mod)
mutated_mod['func_5825'] = func_5825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5825_call = mutated_mod.get_global_var('func_5825')
call_5826 = func_5825_call()
output = call_5826
func_5827 = relay.Function([], output)
mutated_mod['func_5827'] = func_5827
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5859 = relay.var("var_5859", dtype = "float64", shape = ())#candidate|5859|()|var|float64
var_5860 = relay.var("var_5860", dtype = "float64", shape = (2, 1, 12))#candidate|5860|(2, 1, 12)|var|float64
bop_5861 = relay.divide(var_5859.astype('float64'), var_5860.astype('float64')) # shape=(2, 1, 12)
output = relay.Tuple([bop_5861,])
output2 = relay.Tuple([bop_5861,])
func_5864 = relay.Function([var_5859,var_5860,], output)
mod['func_5864'] = func_5864
mod = relay.transform.InferType()(mod)
var_5865 = relay.var("var_5865", dtype = "float64", shape = ())#candidate|5865|()|var|float64
var_5866 = relay.var("var_5866", dtype = "float64", shape = (2, 1, 12))#candidate|5866|(2, 1, 12)|var|float64
output = func_5864(var_5865,var_5866,)
func_5867 = relay.Function([var_5865,var_5866,], output)
mutated_mod['func_5867'] = func_5867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3749_call = mod.get_global_var('func_3749')
func_3750_call = mutated_mod.get_global_var('func_3750')
call_5929 = relay.TupleGetItem(func_3749_call(), 0)
call_5930 = relay.TupleGetItem(func_3750_call(), 0)
func_4726_call = mod.get_global_var('func_4726')
func_4728_call = mutated_mod.get_global_var('func_4728')
call_5932 = func_4726_call()
call_5933 = func_4726_call()
output = relay.Tuple([call_5929,call_5932,])
output2 = relay.Tuple([call_5930,call_5933,])
func_5946 = relay.Function([], output)
mod['func_5946'] = func_5946
mod = relay.transform.InferType()(mod)
output = func_5946()
func_5947 = relay.Function([], output)
mutated_mod['func_5947'] = func_5947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3749_call = mod.get_global_var('func_3749')
func_3750_call = mutated_mod.get_global_var('func_3750')
call_5957 = relay.TupleGetItem(func_3749_call(), 0)
call_5958 = relay.TupleGetItem(func_3750_call(), 0)
func_3958_call = mod.get_global_var('func_3958')
func_3960_call = mutated_mod.get_global_var('func_3960')
const_5967 = relay.const([[-0.609951,7.964808,6.605530,-1.674384,6.896406,3.845362,-3.178875,-7.919872,-8.854069,-6.788704,8.693762,-7.803703,2.058863,5.978262,8.541645,3.283081,5.584982,5.447989,6.438576,-1.545745,-2.570056,-8.578905,-3.749600,9.919214,-1.838698,-7.134982,-2.597522,-1.526849,3.869837,0.510044],[-2.410604,-6.930928,-8.072497,-6.377432,0.271873,-6.528338,6.512070,-2.131413,8.543386,-2.702019,0.459895,-3.185379,-3.634073,-8.381122,-6.600023,-4.972208,-7.293049,-4.973902,-8.917894,-1.490574,9.901516,-1.444664,-9.060638,-4.804159,-2.577337,6.437152,-4.334940,7.222709,-7.717357,-5.514088],[0.413629,3.474213,4.701431,-6.064560,-4.691283,-0.754881,5.930754,-9.560952,6.816623,-3.161970,-4.459808,-8.335742,1.881155,2.625524,1.307303,-1.131035,-4.245057,-8.563987,-3.789805,3.725846,-8.286810,-8.908190,-0.996467,4.966645,-3.238781,5.586186,8.834895,9.724189,4.215287,-2.421516],[-7.147097,-2.793761,-3.839302,-7.678428,7.111695,9.153825,7.005177,-2.182382,5.513602,-4.274771,9.671327,-9.618843,4.765400,5.797439,-1.609138,5.238806,-8.983226,7.105288,-3.893366,3.566439,3.986681,8.274730,6.287938,2.124435,2.811670,-3.010709,8.532906,5.978612,-5.274590,-8.182770],[-5.735343,3.742256,1.683089,8.341699,-1.192873,4.009488,-6.871344,2.789011,-3.089273,-7.486399,-0.361932,-4.875732,1.806799,-4.741045,-8.156419,-3.598422,-1.754536,-8.418042,-4.221973,4.515316,-8.960491,-0.168692,-8.518537,-6.091026,-2.579295,-2.029511,8.737510,4.012779,4.682667,-0.262811],[-1.795464,-0.042658,-8.901633,-3.912422,7.784533,-3.362370,-7.769827,-6.071148,-2.510456,-7.504222,1.758129,6.944511,3.192289,5.400333,-8.352162,4.816556,-1.910871,5.966142,-8.689603,2.865808,7.452428,1.601332,-9.001174,-1.836404,9.736656,-4.281326,-8.105283,2.064273,-8.811599,-0.985720],[0.339386,2.324919,5.544156,-5.317526,-7.959740,4.776903,0.414470,7.925584,-6.366036,-5.494696,-2.633818,-9.134023,-9.419680,2.304538,-1.336783,5.550012,7.994851,8.594285,6.355189,-3.710922,5.837585,-5.615412,-1.964405,0.882801,0.891410,-3.478132,-4.658316,-6.129063,9.395391,2.223559],[7.090872,6.922395,2.654753,-8.448580,-3.550955,-9.486175,-0.073143,1.592903,-1.245522,-8.847529,-9.251199,-2.237839,4.237794,-4.650485,-6.364630,1.729898,-8.595137,-1.471052,6.050836,7.727190,8.911969,-4.991115,-2.581920,-5.791104,-6.604544,-6.393336,-5.584684,3.997787,-3.059763,-7.712027],[4.171735,-8.250515,-3.656396,2.007245,3.908329,1.494777,-5.768928,7.635446,1.574933,9.284626,-4.864827,4.397011,-3.050578,-0.605928,-7.364815,1.890628,-0.663377,7.990547,-3.412268,6.744280,6.981662,-4.908447,-4.454408,-7.257886,-2.302318,5.974641,-4.889052,2.809915,5.855829,1.817729],[-0.793427,3.141433,-3.896094,3.329990,4.992832,7.497960,3.279956,-3.715326,1.077808,-8.723849,-1.370679,-5.997609,-7.986610,-2.588534,3.005876,1.133283,-4.765989,0.862558,4.006651,-6.700214,5.733394,-4.271219,3.298372,-2.420089,2.240748,-8.107169,-7.850887,-8.964994,-2.627913,-1.705631]], dtype = "float32")#candidate|5967|(10, 30)|const|float32
call_5966 = relay.TupleGetItem(func_3958_call(relay.reshape(const_5967.astype('float32'), [15, 5, 4])), 0)
call_5968 = relay.TupleGetItem(func_3960_call(relay.reshape(const_5967.astype('float32'), [15, 5, 4])), 0)
output = relay.Tuple([call_5957,call_5966,const_5967,])
output2 = relay.Tuple([call_5958,call_5968,const_5967,])
func_5970 = relay.Function([], output)
mod['func_5970'] = func_5970
mod = relay.transform.InferType()(mod)
mutated_mod['func_5970'] = func_5970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5970_call = mutated_mod.get_global_var('func_5970')
call_5971 = func_5970_call()
output = call_5971
func_5972 = relay.Function([], output)
mutated_mod['func_5972'] = func_5972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5745_call = mod.get_global_var('func_5745')
func_5746_call = mutated_mod.get_global_var('func_5746')
call_6030 = relay.TupleGetItem(func_5745_call(), 0)
call_6031 = relay.TupleGetItem(func_5746_call(), 0)
output = relay.Tuple([call_6030,])
output2 = relay.Tuple([call_6031,])
func_6038 = relay.Function([], output)
mod['func_6038'] = func_6038
mod = relay.transform.InferType()(mod)
output = func_6038()
func_6039 = relay.Function([], output)
mutated_mod['func_6039'] = func_6039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4808_call = mod.get_global_var('func_4808')
func_4809_call = mutated_mod.get_global_var('func_4809')
call_6042 = relay.TupleGetItem(func_4808_call(), 0)
call_6043 = relay.TupleGetItem(func_4809_call(), 0)
func_4910_call = mod.get_global_var('func_4910')
func_4913_call = mutated_mod.get_global_var('func_4913')
const_6063 = relay.const([2,3,-3,3,-1,2,8,9,-2,6,-9,9,-8,5,10,3,8,-5,1,4,2,-1,5,4,3,3,-2,9,-5,6,-4,5,-5,5,-2,-1,5,5,-2,-9,-8,6,-5,2,1,3,-8,-9,3,-2,-5,7,3,-9,-2,9,-1,2,9,-5,-3,-6,-1,8,1,6,3,5,7,2,-4,-9,-5,10,6,-4,8,-2,7,2,9,5,3,-7,-5,10,-7,4,-2,8,2,9,-4,-10,10,-2,-1,-1,8,-7,-5,4,-7,-8,3,-9,7,-8,8,5,-9,8,-3,-4,-5,6,9,-5,-8,-7,8,7,-3,-8,10,-10,-10,7,-7,6,2,-5,-2,7,-3,1,2,7,-3,-8,-8,-2,-9,2], dtype = "int64")#candidate|6063|(144,)|const|int64
call_6062 = relay.TupleGetItem(func_4910_call(relay.reshape(const_6063.astype('int64'), [144,])), 1)
call_6064 = relay.TupleGetItem(func_4913_call(relay.reshape(const_6063.astype('int64'), [144,])), 1)
func_5265_call = mod.get_global_var('func_5265')
func_5267_call = mutated_mod.get_global_var('func_5267')
call_6076 = func_5265_call()
call_6077 = func_5265_call()
output = relay.Tuple([call_6042,call_6062,const_6063,call_6076,])
output2 = relay.Tuple([call_6043,call_6064,const_6063,call_6077,])
func_6081 = relay.Function([], output)
mod['func_6081'] = func_6081
mod = relay.transform.InferType()(mod)
mutated_mod['func_6081'] = func_6081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6081_call = mutated_mod.get_global_var('func_6081')
call_6082 = func_6081_call()
output = call_6082
func_6083 = relay.Function([], output)
mutated_mod['func_6083'] = func_6083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4471_call = mod.get_global_var('func_4471')
func_4473_call = mutated_mod.get_global_var('func_4473')
call_6097 = relay.TupleGetItem(func_4471_call(), 1)
call_6098 = relay.TupleGetItem(func_4473_call(), 1)
func_3497_call = mod.get_global_var('func_3497')
func_3500_call = mutated_mod.get_global_var('func_3500')
call_6106 = func_3497_call(relay.reshape(call_6097.astype('float32'), [12, 13, 5]))
call_6107 = func_3497_call(relay.reshape(call_6097.astype('float32'), [12, 13, 5]))
func_3688_call = mod.get_global_var('func_3688')
func_3690_call = mutated_mod.get_global_var('func_3690')
call_6108 = func_3688_call()
call_6109 = func_3688_call()
func_3180_call = mod.get_global_var('func_3180')
func_3183_call = mutated_mod.get_global_var('func_3183')
var_6127 = relay.var("var_6127", dtype = "float32", shape = (11, 195))#candidate|6127|(11, 195)|var|float32
call_6126 = relay.TupleGetItem(func_3180_call(relay.reshape(var_6127.astype('float32'), [2145,])), 1)
call_6128 = relay.TupleGetItem(func_3183_call(relay.reshape(var_6127.astype('float32'), [2145,])), 1)
func_3366_call = mod.get_global_var('func_3366')
func_3367_call = mutated_mod.get_global_var('func_3367')
call_6133 = func_3366_call()
call_6134 = func_3366_call()
func_3958_call = mod.get_global_var('func_3958')
func_3960_call = mutated_mod.get_global_var('func_3960')
var_6136 = relay.var("var_6136", dtype = "float32", shape = (300,))#candidate|6136|(300,)|var|float32
call_6135 = relay.TupleGetItem(func_3958_call(relay.reshape(var_6136.astype('float32'), [15, 5, 4])), 0)
call_6137 = relay.TupleGetItem(func_3960_call(relay.reshape(var_6136.astype('float32'), [15, 5, 4])), 0)
func_5353_call = mod.get_global_var('func_5353')
func_5355_call = mutated_mod.get_global_var('func_5355')
call_6144 = relay.TupleGetItem(func_5353_call(relay.reshape(var_6127.astype('float32'), [2145,])), 1)
call_6145 = relay.TupleGetItem(func_5355_call(relay.reshape(var_6127.astype('float32'), [2145,])), 1)
bop_6150 = relay.subtract(call_6135.astype('int64'), relay.reshape(var_6136.astype('int64'), relay.shape_of(call_6135))) # shape=(15, 5, 4)
bop_6153 = relay.subtract(call_6137.astype('int64'), relay.reshape(var_6136.astype('int64'), relay.shape_of(call_6137))) # shape=(15, 5, 4)
func_4098_call = mod.get_global_var('func_4098')
func_4100_call = mutated_mod.get_global_var('func_4100')
const_6185 = relay.const(2, dtype = "uint64")#candidate|6185|()|const|uint64
call_6184 = relay.TupleGetItem(func_4098_call(relay.reshape(const_6185.astype('uint64'), [])), 3)
call_6186 = relay.TupleGetItem(func_4100_call(relay.reshape(const_6185.astype('uint64'), [])), 3)
func_2939_call = mod.get_global_var('func_2939')
func_2942_call = mutated_mod.get_global_var('func_2942')
var_6194 = relay.var("var_6194", dtype = "float64", shape = (2, 616))#candidate|6194|(2, 616)|var|float64
call_6193 = func_2939_call(relay.reshape(var_6194.astype('float64'), [7, 16, 11]))
call_6195 = func_2939_call(relay.reshape(var_6194.astype('float64'), [7, 16, 11]))
output = relay.Tuple([call_6097,call_6106,call_6108,call_6126,var_6127,call_6133,call_6144,bop_6150,call_6184,const_6185,call_6193,var_6194,])
output2 = relay.Tuple([call_6098,call_6107,call_6109,call_6128,var_6127,call_6134,call_6145,bop_6153,call_6186,const_6185,call_6195,var_6194,])
func_6198 = relay.Function([var_6127,var_6136,var_6194,], output)
mod['func_6198'] = func_6198
mod = relay.transform.InferType()(mod)
var_6199 = relay.var("var_6199", dtype = "float32", shape = (11, 195))#candidate|6199|(11, 195)|var|float32
var_6200 = relay.var("var_6200", dtype = "float32", shape = (300,))#candidate|6200|(300,)|var|float32
var_6201 = relay.var("var_6201", dtype = "float64", shape = (2, 616))#candidate|6201|(2, 616)|var|float64
output = func_6198(var_6199,var_6200,var_6201,)
func_6202 = relay.Function([var_6199,var_6200,var_6201,], output)
mutated_mod['func_6202'] = func_6202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5100_call = mod.get_global_var('func_5100')
func_5101_call = mutated_mod.get_global_var('func_5101')
call_6219 = relay.TupleGetItem(func_5100_call(), 0)
call_6220 = relay.TupleGetItem(func_5101_call(), 0)
output = relay.Tuple([call_6219,])
output2 = relay.Tuple([call_6220,])
func_6227 = relay.Function([], output)
mod['func_6227'] = func_6227
mod = relay.transform.InferType()(mod)
output = func_6227()
func_6228 = relay.Function([], output)
mutated_mod['func_6228'] = func_6228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5069_call = mod.get_global_var('func_5069')
func_5070_call = mutated_mod.get_global_var('func_5070')
call_6245 = relay.TupleGetItem(func_5069_call(), 0)
call_6246 = relay.TupleGetItem(func_5070_call(), 0)
var_6255 = relay.var("var_6255", dtype = "float32", shape = (12, 13, 5))#candidate|6255|(12, 13, 5)|var|float32
bop_6256 = relay.equal(call_6245.astype('bool'), relay.reshape(var_6255.astype('bool'), relay.shape_of(call_6245))) # shape=(12, 13, 5)
bop_6259 = relay.equal(call_6246.astype('bool'), relay.reshape(var_6255.astype('bool'), relay.shape_of(call_6246))) # shape=(12, 13, 5)
output = relay.Tuple([bop_6256,])
output2 = relay.Tuple([bop_6259,])
func_6260 = relay.Function([var_6255,], output)
mod['func_6260'] = func_6260
mod = relay.transform.InferType()(mod)
mutated_mod['func_6260'] = func_6260
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6261 = relay.var("var_6261", dtype = "float32", shape = (12, 13, 5))#candidate|6261|(12, 13, 5)|var|float32
func_6260_call = mutated_mod.get_global_var('func_6260')
call_6262 = func_6260_call(var_6261)
output = call_6262
func_6263 = relay.Function([var_6261], output)
mutated_mod['func_6263'] = func_6263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3407_call = mod.get_global_var('func_3407')
func_3408_call = mutated_mod.get_global_var('func_3408')
call_6285 = func_3407_call()
call_6286 = func_3407_call()
output = call_6285
output2 = call_6286
func_6291 = relay.Function([], output)
mod['func_6291'] = func_6291
mod = relay.transform.InferType()(mod)
mutated_mod['func_6291'] = func_6291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6291_call = mutated_mod.get_global_var('func_6291')
call_6292 = func_6291_call()
output = call_6292
func_6293 = relay.Function([], output)
mutated_mod['func_6293'] = func_6293
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6294 = relay.var("var_6294", dtype = "int8", shape = (4, 1, 6))#candidate|6294|(4, 1, 6)|var|int8
var_6295 = relay.var("var_6295", dtype = "int8", shape = (4, 7, 6))#candidate|6295|(4, 7, 6)|var|int8
bop_6296 = relay.equal(var_6294.astype('bool'), var_6295.astype('bool')) # shape=(4, 7, 6)
var_6309 = relay.var("var_6309", dtype = "bool", shape = (4, 7, 6))#candidate|6309|(4, 7, 6)|var|bool
bop_6310 = relay.not_equal(bop_6296.astype('bool'), relay.reshape(var_6309.astype('bool'), relay.shape_of(bop_6296))) # shape=(4, 7, 6)
output = bop_6310
output2 = bop_6310
func_6313 = relay.Function([var_6294,var_6295,var_6309,], output)
mod['func_6313'] = func_6313
mod = relay.transform.InferType()(mod)
var_6314 = relay.var("var_6314", dtype = "int8", shape = (4, 1, 6))#candidate|6314|(4, 1, 6)|var|int8
var_6315 = relay.var("var_6315", dtype = "int8", shape = (4, 7, 6))#candidate|6315|(4, 7, 6)|var|int8
var_6316 = relay.var("var_6316", dtype = "bool", shape = (4, 7, 6))#candidate|6316|(4, 7, 6)|var|bool
output = func_6313(var_6314,var_6315,var_6316,)
func_6317 = relay.Function([var_6314,var_6315,var_6316,], output)
mutated_mod['func_6317'] = func_6317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6038_call = mod.get_global_var('func_6038')
func_6039_call = mutated_mod.get_global_var('func_6039')
call_6341 = relay.TupleGetItem(func_6038_call(), 0)
call_6342 = relay.TupleGetItem(func_6039_call(), 0)
output = call_6341
output2 = call_6342
func_6346 = relay.Function([], output)
mod['func_6346'] = func_6346
mod = relay.transform.InferType()(mod)
output = func_6346()
func_6347 = relay.Function([], output)
mutated_mod['func_6347'] = func_6347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5094_call = mod.get_global_var('func_5094')
func_5096_call = mutated_mod.get_global_var('func_5096')
call_6348 = relay.TupleGetItem(func_5094_call(), 0)
call_6349 = relay.TupleGetItem(func_5096_call(), 0)
func_1842_call = mod.get_global_var('func_1842')
func_1844_call = mutated_mod.get_global_var('func_1844')
const_6355 = relay.const([-9,9,7,3,-2,-6,3,3,-5,-7,-8,1,-8,-1,8,-10,-4,-8,1,-10,-4,-1,-8,-8,9,-3,10,10,-6,1,-1,-1,-2,-8,10,5,-2,3,-3,6,-8,-8,-3,-6,-1,3,10,1,-4,-6,-6,-10,-7,2,-4,3,5,10,-4,-9,5,-1,9,-8,10,7,5,6,-2,6,-7,10,2,2,-6,3,6,-8,-5,-5,-2,-4,-2,9,-1,10,3,9,-1,3,3,-1,-1,1,-7,2,-1,-4,-7,6,9,-3,7,-2,-5,6,-3,7,5,-10,8,-2,8,-1,1,10,-5,-4,7,1,-1,1,5,7,-8,4,9,-5,2,-10,5,-10,-7,5,10,-7,4,-2,6,8,-6,-9,8,10], dtype = "int64")#candidate|6355|(144,)|const|int64
call_6354 = relay.TupleGetItem(func_1842_call(relay.reshape(const_6355.astype('int64'), [144,])), 0)
call_6356 = relay.TupleGetItem(func_1844_call(relay.reshape(const_6355.astype('int64'), [144,])), 0)
output = relay.Tuple([call_6348,call_6354,const_6355,])
output2 = relay.Tuple([call_6349,call_6356,const_6355,])
func_6357 = relay.Function([], output)
mod['func_6357'] = func_6357
mod = relay.transform.InferType()(mod)
mutated_mod['func_6357'] = func_6357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6357_call = mutated_mod.get_global_var('func_6357')
call_6358 = func_6357_call()
output = call_6358
func_6359 = relay.Function([], output)
mutated_mod['func_6359'] = func_6359
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6383 = relay.var("var_6383", dtype = "float64", shape = (4, 7, 12))#candidate|6383|(4, 7, 12)|var|float64
const_6384 = relay.const([[[-5.438668,9.672702,2.917630,6.548163,-0.130188,4.264200,9.080802,9.399202,1.541920,-5.757609,6.892739,-5.337246],[-7.655764,-5.679397,1.612292,-4.541494,-4.871112,2.403143,1.893472,2.116046,7.609754,-7.983457,-2.704825,0.302630],[-0.760293,6.412604,-9.679117,-8.062974,-8.698268,-1.350816,-7.444733,5.866738,-3.810204,-0.975882,1.678698,0.568131],[-1.903354,0.172308,6.970693,0.869491,-3.867311,3.785361,-4.613926,-3.756654,-2.693663,2.043358,9.331287,-5.385552],[0.570769,1.104447,-9.126175,-1.729231,-7.673847,6.518811,-7.124242,-3.582731,-2.511079,-1.795290,3.306720,6.221640],[7.226952,6.051487,-3.868203,-4.315141,-6.537794,-4.710872,-4.877610,-6.875330,1.667523,4.131102,-1.619300,-7.889115],[2.189364,4.880979,9.049524,1.545486,1.083954,8.829311,-5.692791,-5.443473,8.287711,5.411134,2.905354,6.994569]],[[9.872397,-6.360370,-9.336618,-0.563892,5.994210,-0.290941,7.217572,7.089599,-4.579243,-1.543638,-3.203480,-9.131311],[9.330599,-5.894265,4.823326,6.803752,-2.844898,-2.419005,9.202881,-8.099270,-9.479709,2.033240,-8.005097,2.212306],[-3.973063,2.703155,-0.226238,-1.964508,2.188735,-3.825983,-1.520119,-4.318601,6.700930,5.429497,5.907801,-6.965102],[8.728391,6.345996,-1.124844,-2.311910,-4.049661,-2.901559,8.744926,8.398774,8.531880,3.389773,9.142777,-7.548027],[-6.194567,3.395961,8.399949,-1.552076,-8.022728,4.627117,-0.535797,8.468528,2.087342,7.533511,-5.923860,-4.509394],[-3.615592,-1.580253,4.079138,-9.888062,-3.021033,6.285334,1.427352,-3.033023,-4.613329,3.410946,-1.139672,2.672661],[-2.550053,-6.828018,3.180278,-4.986444,8.673041,-1.468481,8.801925,-9.427406,-9.062715,4.812223,5.574169,9.245472]],[[3.917637,-7.921848,4.303290,-5.637419,-7.660473,1.508520,1.788732,2.838327,-9.492420,1.756700,4.622716,7.324508],[7.573770,0.104527,7.676602,-1.856016,3.651186,-3.292264,7.390460,-7.953161,9.198277,7.479837,2.534238,2.797858],[-8.630221,1.907187,9.610660,-7.454194,-6.081022,0.549799,-8.878990,-4.071894,2.480507,6.058317,0.606067,-1.448565],[4.025985,6.006436,0.830165,-3.264062,5.172067,0.783848,-8.396448,-4.056980,8.430920,-3.961915,8.264180,-7.663041],[8.332738,9.166114,0.858189,-7.913447,-9.812320,-7.281583,-9.346817,2.613975,-9.818836,-3.724910,-3.365620,5.814531],[9.417684,-4.804405,0.087741,0.545774,-2.604605,3.353859,-3.299218,-4.499821,-7.874625,-3.718419,7.391808,-6.544331],[-9.262706,-8.821486,0.247866,6.099346,-6.636213,-4.971505,-4.136801,-4.745208,-0.820245,-7.927065,0.604648,2.476233]],[[1.290941,1.536690,-3.943358,1.070640,-4.083056,3.212495,8.178793,-7.201631,-4.597714,2.351829,-9.535209,1.211538],[-1.271927,-4.637546,-8.811689,2.278519,8.958908,-2.394629,-0.297765,7.837091,-8.389625,0.160440,2.682664,3.824560],[-3.363157,-2.909169,-4.151612,0.052118,8.701173,5.193094,-2.477419,-3.319113,0.860370,0.124814,-1.060176,-5.708632],[9.916408,-7.388467,-6.616552,6.721234,8.493806,2.013678,2.896288,-2.079929,-3.029654,5.959280,-0.082514,9.369237],[-8.462745,2.523425,4.864289,9.686809,3.356699,2.801726,7.048610,-7.491898,-3.496121,0.519971,6.029904,-6.983763],[0.065547,-6.394484,1.179233,9.953573,-5.071299,-6.650576,-3.796213,-0.981555,-5.699581,9.669427,-1.653403,-6.940092],[-5.778632,6.369784,6.123582,6.273352,6.594871,-4.661658,3.347366,-1.314166,-1.738730,1.150455,5.878187,4.867836]]], dtype = "float64")#candidate|6384|(4, 7, 12)|const|float64
bop_6385 = relay.equal(var_6383.astype('bool'), relay.reshape(const_6384.astype('bool'), relay.shape_of(var_6383))) # shape=(4, 7, 12)
func_100_call = mod.get_global_var('func_100')
func_102_call = mutated_mod.get_global_var('func_102')
const_6400 = relay.const([4.731677,-7.265300,-7.795299,2.067303,-4.175273,4.568287,7.647664,-2.367859,8.490953,0.600340,-9.676743,-1.656538,9.616693,7.611176,5.940196,9.599600,-7.099212,-2.658818,-6.123993,-9.107024,6.027890,0.210203,8.936473,-4.074029,1.092546,3.258576,-8.193313,3.039782,-2.134502,-2.237721,-5.859218,5.874690,6.787079,0.621568,9.606178,6.372959,-8.697385,7.356191,-5.526112,-7.470452,3.481063,7.472982,-1.462759,-8.488212,7.983850,-3.486565,-5.494221,-6.184476,3.403538,6.511871,6.821683,-3.027943,1.855042,-7.586093,8.681997,9.042708,-1.984123,-1.198943,-7.729503,-9.424561,6.084957,9.119914,-6.428040,9.511420,4.890358,-1.719423,0.592705,-1.342985,-4.283641,-0.435676,-5.079803,6.127693,-0.280093,3.440819,-5.166630,-3.016813,-1.098786,7.010911,-9.654251,4.271922,-8.833944,-0.899345,-0.752040,-6.835777,1.414407,-0.446731,3.438011,9.093805,6.954285,-3.455904,-5.651127,9.574058,-6.298400,6.476523,4.345508,-5.944031,-0.026982,-4.102344,-4.568925,2.692417,5.039683,4.804260,5.034815,4.153683,7.976146,-1.767795,-6.213518,-1.036424,2.175836,4.656516,-2.908430,-4.733493,1.020596,9.417339,7.391826,0.249219,-2.093165,9.318010,9.966670,-5.490846,-8.037848,-1.594744,-4.025946,0.703797,-3.612352,4.487430,1.833624,7.364501,-9.702272,-4.241431,-0.370581,-7.901011,-7.102770,-2.998618,-2.058767,-5.351582,-6.145569,-8.584841,6.652919,-2.394190,-4.606462,6.414003,4.166135,-1.560581,4.062456,2.650210,2.555486,9.594028,-3.806620,2.476957,-9.953818,8.591520,9.594854,-0.950726,-4.693516,-0.890679,-6.171663,-7.841777,6.652602,1.837047,1.697196,-1.945891,-1.137705,-6.224396,1.748330,-5.934733,5.579729,-9.832817,3.474444,3.384769,6.845558,-0.647032,6.267080,3.203232,-0.849710,-8.747659,-4.739718,-8.276666,-8.274119,4.344943,-4.966397,1.166046,4.534104,-7.137373,-6.819492,-7.424751,-7.051998,2.540846,2.446499,-2.590725,6.481024,8.056204,2.850974,9.097727,-9.204001,9.899261,-0.675502,-9.119746,3.306227,-5.249950,5.250596,2.013411,6.803493,5.295216,-7.442851,-3.469757,-3.271213,8.730201,0.712011,7.205950,7.950072,5.097592,-4.393840,2.078724,-6.446068,8.533967,8.790762,3.446115,-4.491624,7.809137,-1.203721,-5.234207,-5.939209,-5.852842,-8.172796,5.129551,4.525216,5.701776,1.399001,5.867975,-6.872792,3.157770,8.702935,5.436797,6.472397,-9.173225,-0.248690,6.118592,-1.477468,6.245882,7.504158,-7.781894,4.630756,-0.410925,0.298410,-6.999753,9.593993,8.929072,8.127959,-1.419701,7.777941,-3.915267,6.579272,-8.552469,-2.170787,4.209822,7.149025,-0.106364,2.145059,3.116921,-3.178026,1.386143,5.413369,-4.597033,6.717628,7.251138,-9.748611,-1.299840,9.121263,5.665849,-9.263873,-6.268316,4.200893,-5.514332,7.201929,8.368766,-6.782650,1.434218,7.360233,-9.406663,-8.748842,5.308794,1.112948,4.261422,8.916371,-3.080784,9.997348,3.136800,1.540914,5.247409,8.281036,-8.873322,0.790779,2.552546,-8.870880,7.295742,0.102098,9.428577,8.734746,-2.716086,1.788121,-9.488509,8.421742,6.666128,-0.570328,3.260446,3.514862,3.264786,-6.984314,1.349600,-3.542963,6.173071,-0.200056,-5.207861,4.546002,-9.901776,-1.992707,9.151859,-4.920766,-0.741627,-1.489352,-8.603062,-1.926988,-8.769962,-2.403691,7.351695,3.162748,-3.536373,8.226460,8.008570,8.044212,3.028210,-0.149868,5.437139,-1.173442,5.299492,-9.198862,-6.959579,0.133331,7.201850,9.719985,-8.975190,2.247881,-6.283803,-5.050548,-4.500722,0.730863,9.195213,-5.744985,-3.517921,-1.770753,4.917020,5.948552,7.482760,6.746663,-1.910978,9.575083,8.780884,0.793496,6.381646,7.892385,-6.032467,-4.502783,-3.972031,-2.664213,4.025454,4.522666,5.253359,-8.697436,2.409448,0.424308,-4.315313,2.836485,-0.552517,4.982900,-2.818786,6.751034,2.136544,-6.109563,-5.620962,-7.359384,9.250591,7.762198,-3.741472,-9.328982,4.155210,0.227456,-5.987169,6.271443,-9.965184,3.035718,3.431735,2.604643,-0.946188,-4.801640,-7.741019,-0.986025,-4.948166,4.198821,9.555680,3.376532,1.243875,4.969279,0.743737,-3.796085,5.263554,-6.224710,-7.834786,-7.472616,2.819612,-4.148464,3.458599,5.182437,-3.101018,3.369350,-7.694730,-0.559543,6.509164,-8.517990,-3.100843,-8.765975,-9.302556,-5.658876,-9.158502,5.801821,1.165626,-5.586907,-9.997408,0.239496,-0.925034,-2.668849,4.194573,-7.380478,-0.669494,8.151088,-8.799353,5.687028,-6.903099,4.089539,-4.648022,-8.025700,-6.647552,-1.855551,-2.694244,3.203903,-3.305790,-1.064508,-6.976660,9.729979,4.562145,9.313707,-8.600103,-0.346994,-5.867840,-5.573876,-4.442816,7.058203,1.525466,1.476287,2.044247,-3.455608,-2.640325,1.175308,9.679054,-5.025976,3.805359,-3.099251,-9.606513,-0.661043,3.589467,7.510792,1.704405,-2.481828,-9.650633,-6.837475,5.614114,-6.962267,6.380526,-0.986418,-5.558774,5.773014,4.831241,0.341642,-9.639428,-8.256681,-8.348398,0.408613,-6.610236,-1.147555,5.817727,-0.002955,3.467249,2.164034,-3.074028,-5.506072,-0.038643,-7.826425,7.253217,3.226996,1.929418,9.050423,2.104271,1.429247,1.085677,-1.455086,6.774050,8.776475,9.162902,0.803346,-7.827522,-2.779065,-1.571301,-7.094469,7.220299,1.381038,-0.136305,-0.436543,-0.390604,1.726216,-9.283040,-3.186559,9.103076,-8.494653,-1.411701,-2.009210,6.218143,2.705482,-4.709646,-5.515542,4.513715,-5.203925,-4.474390,9.009388,3.134310,-1.164159,1.747678,5.065860,-2.246779,4.106323,5.763687,-3.904977,3.622327,-4.121476,0.933711,3.393672,1.859221,-3.567018,-4.832025,-2.502733,2.894353,4.999085,9.161287,4.416390,5.992528,6.413582,-9.196982,6.567081,4.094865,4.660767,-7.392470,-8.277940,9.135533,-7.662356,-1.974820,9.634417,5.937841,-5.270955,3.619641,6.525393,8.132445,5.369691,-7.732710,1.152618,4.231877,-6.305544,3.071137,6.805017,-2.982971,-5.748956,-1.693463,-8.231457,9.410534,-4.557947,-9.761530,8.737838,-8.905890,9.978921,3.941366,6.609962,-9.295799,4.616318,-4.884581,-6.151157,-4.335986,7.138653,-5.517234,-4.184614,7.830108,-9.719932,-5.509903,0.368508,-5.253121,5.211786,7.718981,-2.571384,5.379513,6.900493,-9.697038,-8.831807,-6.642520,6.051086,4.598701,-4.991410,2.157864,-3.427905,-8.341911,-7.723396,-9.542558,9.294811,-7.291982,7.023148,8.460062,7.965541,-4.019037,-0.840731,-5.692320,7.779138,6.781018,-0.522979,-0.072412,3.891368,-4.906799,-0.658378,5.071722,-9.348600,2.378702,2.537703,-4.902757,7.695654,-7.708690,8.480190,7.682163,-8.373959,7.922585,0.947117,9.206938,-6.219194,8.681234,5.410759,-9.067431,-8.915117,5.615162,-9.754179,2.438755,8.910129,4.523592,-3.345235,0.731681,-0.273044,1.443523,4.395348,-2.130439,-0.413513,-3.411784,-6.971406,1.805861,-8.478973,9.847717,-3.276615,-9.913568,-3.596373,-4.640237,1.962795,-9.369342,-4.589677,5.573486,-3.624097,-9.080996,3.499712,-8.296083,9.537049,0.026331,4.691904,7.754069,2.067655,5.611843,8.649130,-6.473771,9.485420,-0.365215,-3.584694,8.050439,6.408357,4.076346,-5.736630,9.450191,5.310388,-3.690269,2.376010,-9.409990,6.299724,-7.522391,8.996792,8.090486,7.840787,9.320651,-8.796376,0.394905,-7.378421,-8.312334,-8.706114,-9.864124,-2.037029,-8.241019,-3.206466,-3.455307,-4.330058,0.981421,4.566853,4.730952,-7.338892,-4.926193,7.080290,9.013017,-9.306700,6.320112,6.031989,-0.967314,-4.384312,0.277188,1.652517,-2.403840,-2.141288,-9.759320,0.127898,8.997472,-0.957936,-3.456259,7.367158,8.681762,0.048660,-8.685993,-2.378617,7.854194,-5.396974,-8.828411,-9.603741,0.242766,-6.149580,8.789135,4.491822,2.414264,-4.773132,-7.549449,9.642496,-7.231784,-8.412872,9.482846,9.694635,9.564734,1.314890,-0.460716,-9.492274,1.478441,3.775611,-1.232914,7.826594,-3.755530,2.764588,9.159680,-8.466987,-8.369373,-7.028618,5.771986,-5.628282,5.858090,-1.462968,2.992866,-0.492774,0.903114,0.345291,-4.312668,-4.341845,5.382635,9.330353,-7.487819,-5.574440,-4.714043,2.891071,-8.072942,-2.489487,1.789510,8.829331,-0.350625,9.223743,3.779296,1.735778,1.639783,-8.365499,-6.149650,8.618319,8.612249,1.914048,0.266116,-1.953714,-3.493028,5.462199,3.894752,-2.954556,-8.476565,-9.179209,2.668700,-9.088609,3.700045,9.958271,-3.579332,-5.703100,-7.724871,-8.126449,-8.705943,3.301722,3.330390,8.120684,-2.079533,-8.242722,0.843394,-3.343738,3.940299,-0.286733,-2.532886,-3.012597,-9.879522,-5.947502,-8.795638,-6.631906,8.643428,3.694027,2.086549,-7.152313,-7.148426,-8.761109,7.619764,-0.744512,0.566483,9.244378,-1.573699,5.683310,-3.243757,1.147838,-4.411686,-8.927911,-1.363303,-2.793782,-3.324908,6.708300,-5.271344,-3.774808,-8.210903,-7.341910,5.840501,1.910825,6.067911,5.028330,9.552508,-8.689210,-1.956049,9.143271,-7.775903,-8.969730,-2.035109,8.378350,-2.511765,-3.351027,2.783510,-0.238542,-3.093635,-4.576165,-6.308982,-4.175818,8.615046,6.027048,9.404505,-3.679253,3.351401,-3.545799,-7.476046,-3.470008,2.748244,8.446882,7.886982,-2.419460,-9.107333,3.247894,-0.784869,-9.959120,-8.616701,7.302812,-4.851270,9.270511,4.859760,-8.503484,7.869522,-3.796170,8.373009,3.392988,6.263640,9.690786,5.967874,2.790913,-2.652152,8.205950,0.426433,-7.536434,-4.515708,9.883679,5.556445,0.743026,-0.744862,4.645072,6.510535,-9.218403,-4.209957,-8.089858,-6.364422,5.017982,2.107010,0.321606,-8.608891,7.367428,8.546911,-3.829766,-4.202999,-4.614595,0.959534,-9.327435,-7.020871,8.215485,-8.718079,-3.322871,3.090433,8.064079,-9.486929,-8.924194,-1.370743,7.993993,-2.277122,-2.989652,8.579215,-7.424928,3.230046,-6.062713,8.702686,-1.355519,2.841941,7.830504,5.481769,-5.975217,1.591832,-0.598613,-0.223648,-7.904826,2.738556,7.816417,1.245246,3.509502,-8.650686,-0.470053,6.067724,-6.857309,-4.355791,-6.516629,-2.363914,6.945022,4.078821,-3.739454,-5.819792,-2.917883,9.685901,-7.613580,1.684367,4.020218,9.478935,-3.027669,5.190221,-8.749262,-0.635667,5.137374,7.662915,-1.940962,-3.159840,-4.306979,2.637121,-1.862017,-4.099845,1.058845,-1.874470,8.428606,2.058215,-4.976043,-0.710605,-5.232599,4.665481,-0.308955,-4.499728,1.801310,1.739474,4.231227,0.617565,3.374891,7.714553,8.237305,-2.418635,0.651939,-0.599913,-7.927383,-3.751779,5.963631,-4.950932,-5.441089,3.495175,8.191287,2.365972,4.377017,-5.443682,-6.606099,-5.051259,1.255959,9.089918,-5.005500,-4.122402,-3.939376,0.181121,0.278400,5.973417,-3.192582,7.416314,0.839556,3.618850,7.705592,-1.348988,4.305698,-5.517031,8.386722,6.983359,0.735161,-6.925111,6.519574,-3.864304,0.068317,-5.429990,-2.974988,8.324882,5.744056,-4.491824,-6.671702,-8.978966,2.110933,-9.085116,-0.160041,-4.266456,2.313532,-7.167235,-2.922096,7.627429,-6.249942,-1.014666,-0.568136,7.756781,-5.557358,-0.936022,-4.697758,-0.347495,6.243892,-7.317089,-4.730634,-7.433963,7.527131,-7.582668,7.606888,9.121856,-8.934665,-3.667748,3.359414,-5.294096,6.017174,-5.461645,3.680772,-1.074018,3.007023,1.303551,6.281103,8.484977,-3.611553,4.211849,-3.287483,0.543165,-2.217631,1.538987,8.471069,7.976504,-5.639877,-7.792592,-2.458773,9.560626,6.820769,3.548305,-6.309369,8.914836,3.847028,-4.500465,3.940457,-9.136402,4.918238,0.550562,9.274558,5.990305,-2.280685,2.080463,-8.506368,-3.271725,6.386823,2.207318,9.489798,-2.617540,9.874921,-8.825348,5.736072,-9.629049,-0.569610,3.150262,-1.147100,0.194420,2.764775,9.662070,4.150633,5.422596,7.833750,-7.716706,-2.297549,5.665168,6.898156,-6.664085,-2.896340,7.035942,0.104215,-1.428044,-0.191630,-5.462901,6.107647,6.893361,-2.967905,1.520861,4.649077,-3.435153,9.490972,8.820037,2.824123,6.471968,-8.711329,-6.249757,8.819587,0.765670,-2.296217,4.877053,9.605166,8.653685,-9.004391,-3.324427,-7.065107,7.902027,-8.238490,8.483965,-6.861090,-4.157047,4.996455,-6.017435,4.303930,-9.322871,-4.171870,0.041151,7.253150,5.786401,-9.039242,4.195125,-8.619193,-8.196709,-5.209428,-4.341480,-9.565861,7.539474,2.928455,-8.334684,-3.222206,-2.044052,2.247295,-6.440720,-0.558330,-5.476516,9.778087,-9.526136,-2.142181,6.165075,-9.597026,7.481431,-4.918584,-8.685873,1.334011,-9.057683,-6.964828,-0.003207,1.325590,-5.155995,-1.079053,-8.952259,-8.698056,2.618823,2.102465,3.282511,-2.552600,-4.419801,-4.984744,-7.427731,2.716927,8.231548,4.962217,4.300217,-2.761410,0.419041,-4.447155,1.131841,-8.756518,7.667707,8.338601,7.913172,-2.184823,-9.061643,-7.745146,-9.949313,6.250916,9.789954,2.689498,1.365693,-8.612029,-1.297409,-6.120872,-3.859771,-0.014972,-9.383023,-7.535050,8.744101,3.335452,0.277541,-9.424962,-8.839496,4.789997,-2.910302,-4.524807,7.214567,-0.334920,-1.314585,4.023066,3.484730,-8.890368,3.596784,2.093026,9.684546,-2.645035,6.309298,-5.478077,-8.512371,5.937335,-4.009129,8.009688,6.322131,6.069280,-9.915123,-3.654631,-7.387704,-2.612960,2.037880,-4.109552,-3.032738,-9.397048,3.190599,5.753081,-5.388039,5.998200,3.069695,-2.964828,-2.468783,-3.395733,-5.856971,1.049719,7.676517,-7.374663,4.597930,-6.772099,8.689886,0.976686,5.226613,8.477781,-2.076298,6.590557,8.389601,-7.512554,6.063566,-3.240769,1.667052,7.871928,4.842092,9.125331,-4.813345,5.763444,-3.678982,3.519632,9.081701,-3.397350,7.730693,1.714510,9.870192,-5.100009,-8.678556,7.607294,-9.403268,1.737552,-4.719844,3.717191,-5.133298,5.587814,2.018728,-7.707974,7.436019,-3.467535,-5.859530,6.919403,2.986479,8.104004,-4.800406,4.144923,6.686365,4.687712,-1.484836,-4.999477,7.270829,1.611740,-3.956176,7.445158,-7.643130,-3.778751,-6.375744,2.022513,-3.280420,0.419937,6.495231,6.922432,9.973513,-9.834648,0.296358,-1.348002,-3.900419,-2.759710,-0.226619,-8.740859,0.114619,0.678985,-7.997103,-3.115684,4.935980,-2.336252,-2.500275,5.368969,-9.677093,1.132149,0.917298,-3.223410,-8.087013,-9.536376,-6.464354,8.326806,-2.126610,6.368262,6.930600,8.668613,-7.501029,4.891219,0.892820,-1.759800,4.253912,-2.375771,-8.945931,-4.791289,6.612591,6.423955,-8.232168,1.686253,7.612468,4.251821,-0.653404,-8.988114,-7.301185,-1.844942,-2.646618,8.040412,-3.239923,-0.606049,-9.583209,8.794402,-2.801746,-6.578308,-5.055350,2.192230,-7.051777,-6.489501,0.247931,4.777041,1.887460,9.684685,3.959173,6.438377,-2.478705,-9.777447,-5.629842,-8.100207,-6.197685,4.491696,8.474015,-1.557161,-8.808865,-1.934798,5.600164,3.553663,7.288379,0.599539,-9.425984,9.849370,-8.978529,5.363074,8.683877,0.404682,-4.747222,-4.961695,8.848651,-5.674658,-4.341449,2.571971,-0.441354,-8.522019,-7.697791,-2.008723,-7.935477,9.122276,4.722422,8.854304,5.984135,-5.988398,-0.201028,5.294354,-8.470643,2.447124,-3.042148,-9.708510,7.732750,9.898895,-3.671519,-8.219929,4.682977,-2.170131,3.446355,2.599097,-9.184596,-0.034180,3.739363,9.104373,3.722721,-4.616260,5.523201,2.311730,5.481809,-4.175968,-2.390104,-9.718332,1.725682,4.795066,-0.380555,7.436465,-3.511629,8.771849,8.485346,9.427174,9.483978,-8.325228,1.903827,-6.643669,-8.719537,-6.732702,0.046649,-1.895578,8.353804,6.983400,9.341370,6.629264,8.393075,3.800844,7.947479,5.007233,-1.893993,3.622157,4.846496,-0.300120,6.514255,5.156625,1.916377,1.596329,4.428215,-7.075022,6.071492,-9.151953,2.969922,3.173167,2.035499,2.219336,-9.936268,3.260596,-7.802840,-0.720999,-9.834775,0.936453,1.106414,1.813991,0.319754,0.354642,3.640825,6.883393,2.084900,3.653025,-8.461203,-5.243185,6.147678,-6.816898,2.333387,2.308410,-1.055470,0.852173,0.775662,-2.322161,2.714393,0.339561,-0.790964,3.419327,2.776268,-8.430633,8.463727,4.602223,-2.602900,1.849102,-0.723295,0.419050,4.814260,-4.560984,7.745271,3.209616,9.911162,8.735406,-5.633899,7.584536,8.128721,0.084211,0.482270,-9.133736,-9.766015,7.578942,-0.218058,-4.186564,-7.756848,3.488546,1.354866,-0.025205,2.178721,-3.235051,-9.975246,-0.948955,3.717098,-0.526892,-6.816700,-9.724612,-6.771227,2.313925,8.822785,-2.582362,-5.446882,7.144042,1.407222,-1.467827,-9.505617,-1.087169,1.727894,-5.278090,-1.988553,5.197249,4.261094,5.993959,7.342938,0.521425,-1.081202,-2.386318,3.147542,7.568216,2.273664,5.455025,-9.725727,-6.081462,-7.594925,9.160445,-2.282697,3.869109,-4.034036,7.253488,2.944240,-4.341006,0.800636,3.402471,1.459226,8.533628,-9.672465,-3.042815,-1.297394,-1.786923,2.990523,0.034208,-5.165983,-4.587243,0.561815,2.992380,-1.276346,9.359390,-8.126501,-0.381389,8.490297,2.223122,-8.696450,-1.698555,-2.653378,-2.398919,-5.912053,4.080965,-5.063787,-5.639860,-7.269558,4.294238,6.689671,-3.629659,8.448500,7.928314,-8.662813,-3.531342,-7.214117,6.960734,-8.003940,7.343965,1.732417,5.898164,-0.724132,3.148292,2.525847,7.974147,4.664832,3.469731,-9.632966,8.760392,1.135850,1.506541,8.074084,-1.436805,-1.768180,-3.724182,0.251540,-5.261541,6.722020,-6.807317,-8.283642,-7.289569,2.207181,-9.677705,-5.536231,-6.083560,2.946991,-3.402635,-6.183513,-5.365546,-1.240336,-4.332525,9.849427,2.285598,-2.457754,3.595659,2.211646,9.654815,1.320199,-6.773459,8.651537,8.514945,-9.014262,2.935902,8.040356,-5.859325,2.259976,9.349263,2.155452,8.343890,-2.650302,-7.744143,-1.678727,-6.291959,3.090059,-3.051438,2.553727,4.544007,3.467591,-5.672895,1.663923,-9.456070,3.370534,8.871155,-9.306985,-3.774537,8.137285,-7.418971,-2.507842,-7.128888,2.414381,1.340099,-2.749487,-0.932202,1.732045,-0.879054,8.357979,1.011897,-6.851322,4.641764,-7.657975,7.017192,-9.891342,0.211122,-7.562755,-5.459302,-4.108738,-6.968731,3.419178,-2.215233,8.491557,7.977879,9.949929,1.744476,6.900248,-7.121704,8.841314,0.447052,7.935976,-4.241018,-9.639162,8.653048,-1.188070,-9.105755,3.795855,9.828569,4.905501,4.685170,0.857012,8.153373,-8.311533,-3.177310,6.067512,4.660122,1.709275,7.206400,4.971716,-1.430111,-6.192054,3.999042,-8.900010,4.753183,8.419135,-6.485799,8.723906,6.685191,-0.759842,5.707700,8.685922,-8.825868,2.088012,4.048067,2.325043,-7.704162,-4.947878,1.481810,-6.365801,-4.411164,9.837006,2.937303,-2.755092,-9.734119,-4.716863,4.567801,9.318260,-3.826531,9.073827,1.389772,-3.434134,-2.783367,2.740493,2.109363,-6.458738,7.247708,-1.348615,4.092615,9.836450,7.013429,3.477542,1.961908,3.474167,5.286984,0.989847,9.732490,9.233762,-2.295655,3.938804,-2.380186,-6.885574,5.989496,-2.907931,2.027478,0.474483,-0.344191,3.507352,5.208649,4.787043,3.242502,4.635293,-4.496730,2.464862,4.372928,-9.726811,-3.178598,4.545381,-9.900257,-8.262969,8.770082,-8.045099,4.667064,2.059786,-4.095150,8.044326,-6.761236,-2.625534,3.899031,6.493327,-1.263013,5.106408,-6.099308,9.535938,-7.333864,2.555280,6.315734,5.080355,2.878981,5.589677,-6.302578,-8.254409,4.774648,5.263415,-0.597866,4.090660,7.301196,3.476393,0.340177,-9.929720,9.632959,1.185783,2.910803,0.345079,1.046749,8.565398,4.033292,-3.928042,-0.906369,-4.577807,9.824740,-3.510832,-6.906622,-0.757750,-1.875980,8.983738,-8.619374,-1.292997,-9.827125,7.948538,-9.164559,6.551222,-1.900028,-9.657057,5.123135,6.206451,-2.794148,4.857120,7.473379,-0.929067,-4.016534,8.157503,-0.401180,2.043298,8.109737,-5.137841,2.545540,-8.342210,-1.208148,-2.708673,4.157982,-5.804642,0.686007,-2.192489,9.139303,-6.471111,-2.750648,2.330162,2.662904,1.108135,2.977090,-3.620130,6.334655,-2.872072,2.181348,-5.573744,-5.775540,-1.556937,-0.519956,-8.957358,1.566391,-9.673698,0.649374,-1.800263,-7.506528,6.282610,-6.827166,-9.049812,-6.992490,5.728538,5.399670,-4.404128,-2.622248,-9.228752,8.347892,-8.092531,4.095401,4.191183,-9.449631,-6.602409,3.025483,-1.875455,8.783194,-3.098631,9.125961,-3.452605,3.187748,-8.932492,0.241400,-3.092512,-6.553011,-9.265630,5.063507,-2.629237,7.958638,-3.906773,-3.449649,-6.557463,5.976507,-1.437804,-9.653134,-4.027112,6.091009,7.245088,7.560053,-7.282213,5.743548,0.350083,-7.622347,-5.820372,-5.627794,-5.694084,-2.215667,0.084029,9.749314,-2.611728,-8.935018,4.994253,-1.114968,-7.104110,3.933946,4.054244,3.447689,5.456669,-5.767044,-8.360339,9.235427,0.720757,9.495658,9.117267,-1.517741,3.144103,-8.986508,0.234483,2.666362,-9.215809,-1.781402,0.925444,7.446753,0.573792,3.198221,-4.592040,-6.726961,-0.346074,-8.456411,5.182560,7.193827,7.314274,4.804681,-6.691938,6.471599,2.820008,-2.691533,6.571190,-3.225283,0.322683,-7.292258,-1.214017,-1.436361,8.546098,-2.354420,2.526221,0.990150,-6.715802,1.676352,3.808162,7.463665,-8.856753,-6.219771,5.737909,-9.549770,-7.045649,1.126603,-6.078969,0.317639,-6.703305,-1.162213,2.918072,6.656235,-1.956471,2.952455,7.281431,8.132473,-6.277034,7.271518,-5.469551,8.967846,2.966504,9.566598,-0.039866,2.205829,-0.573685,-3.526450,6.732131,8.248925,2.083101,7.425862,-9.134702,-6.167969,-8.199068,-0.100935,-9.867414,3.161302,-2.622194,8.070828,0.533750,-4.148476,-6.932063,-2.499596,-4.945696,4.753021,-6.271152,-5.037283,4.972958,0.077506,-3.404272,-1.737260,5.676219,-9.331268,-7.075945,-3.799786,-7.122442,-5.455609,-4.917727,-8.403676,-5.301788,-3.574252,5.002083,7.028087,3.209683,-2.957618,3.986367,-6.461517,6.136537,-6.179511,-1.923124,3.618167,3.037079,0.144728,-9.785662,-9.324101,-1.052436,1.419919,4.501453,-5.740914,-6.508318,5.767485,-0.165628,-3.395625,-3.845255,1.424032,-3.764431,-5.923469,-3.992322,4.263492,0.176531,-3.062057,-7.916220,9.027064,-3.889637,-7.197181,9.730798,-5.161391,-1.474185,3.889993,-0.281001,9.097723,3.179890,-4.981325], dtype = "float32")#candidate|6400|(2145,)|const|float32
call_6399 = func_100_call(relay.reshape(const_6400.astype('float32'), [13, 11, 15]))
call_6401 = func_100_call(relay.reshape(const_6400.astype('float32'), [13, 11, 15]))
output = relay.Tuple([bop_6385,call_6399,const_6400,])
output2 = relay.Tuple([bop_6385,call_6401,const_6400,])
func_6407 = relay.Function([var_6383,], output)
mod['func_6407'] = func_6407
mod = relay.transform.InferType()(mod)
var_6408 = relay.var("var_6408", dtype = "float64", shape = (4, 7, 12))#candidate|6408|(4, 7, 12)|var|float64
output = func_6407(var_6408)
func_6409 = relay.Function([var_6408], output)
mutated_mod['func_6409'] = func_6409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3600_call = mod.get_global_var('func_3600')
func_3602_call = mutated_mod.get_global_var('func_3602')
call_6411 = relay.TupleGetItem(func_3600_call(), 2)
call_6412 = relay.TupleGetItem(func_3602_call(), 2)
output = relay.Tuple([call_6411,])
output2 = relay.Tuple([call_6412,])
func_6426 = relay.Function([], output)
mod['func_6426'] = func_6426
mod = relay.transform.InferType()(mod)
mutated_mod['func_6426'] = func_6426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6426_call = mutated_mod.get_global_var('func_6426')
call_6427 = func_6426_call()
output = call_6427
func_6428 = relay.Function([], output)
mutated_mod['func_6428'] = func_6428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6426_call = mod.get_global_var('func_6426')
func_6428_call = mutated_mod.get_global_var('func_6428')
call_6491 = relay.TupleGetItem(func_6426_call(), 0)
call_6492 = relay.TupleGetItem(func_6428_call(), 0)
func_5618_call = mod.get_global_var('func_5618')
func_5620_call = mutated_mod.get_global_var('func_5620')
call_6497 = func_5618_call()
call_6498 = func_5618_call()
func_3958_call = mod.get_global_var('func_3958')
func_3960_call = mutated_mod.get_global_var('func_3960')
const_6522 = relay.const([-0.353526,-3.511070,-0.510985,3.796840,-0.549990,-8.533421,-9.189482,-6.705409,0.482616,6.428921,-5.292446,0.084444,-5.619843,9.762299,6.318120,3.281144,-4.552510,1.338106,-7.967953,4.624177,-0.812566,8.134382,7.742708,6.127598,-9.382116,-2.759120,-1.261409,0.645190,-7.772969,-3.747578,5.544471,3.413207,3.096265,-6.322381,-0.701326,-5.926897,9.401882,6.952715,9.608653,7.539202,8.305743,-5.900301,1.588285,-9.843355,-3.171552,3.508254,-4.208653,4.627890,-7.485341,5.910968,2.837554,8.646139,-9.141101,2.401779,2.750411,0.888637,-0.990769,-9.237421,1.079635,-7.005345,2.470203,2.435781,-4.430750,9.497220,9.750284,2.865063,-0.053787,7.024989,8.278691,6.026874,-1.606609,4.001109,-7.969043,-9.151488,6.174391,-6.256918,7.238823,-1.330105,-2.595123,-6.947977,9.417368,4.772939,-1.178989,-7.206093,6.423281,0.647917,-0.973187,6.538016,-2.885295,-9.223629,-3.226330,3.888111,-2.175800,4.045584,3.041523,-6.180899,-4.358435,0.015371,2.917541,-5.166777,7.365824,-2.805053,1.176508,-1.372047,0.504212,5.285607,3.011877,6.782953,-8.285654,4.228691,-6.039820,-4.310827,1.760386,-1.593197,1.003355,2.165521,-1.998096,-7.553202,3.792608,1.545066,0.179402,-1.931327,8.042741,4.829778,8.731558,-8.416525,-2.265635,-0.278885,-6.141340,-9.500153,0.054278,-5.141787,7.481605,2.800385,1.727793,-5.607579,4.976213,-0.906442,-7.689079,4.065584,-7.609172,-4.118994,-3.056962,-9.141071,5.516220,2.476718,-2.259113,-4.384903,-7.286572,9.791247,-9.258973,1.248565,-1.628501,0.223662,3.172350,-3.702583,-5.728926,-9.344840,1.165039,5.660850,-6.356174,-0.892508,-6.643159,-0.901091,-4.771664,-4.800591,3.248563,1.026733,8.199504,2.809505,9.999596,-8.327565,-6.993363,-3.962042,3.265425,-4.425168,-4.459489,4.982247,8.279152,-4.228989,9.407575,-8.035568,-0.413835,-6.500588,-5.254521,-2.694894,-7.866173,0.629200,8.455525,-3.370142,4.582339,-9.973461,7.044034,-4.546935,-8.986241,8.371473,-0.384728,-2.632186,9.688034,-1.795427,-6.277868,3.382462,-2.731554,3.087585,-7.431504,-0.519004,-9.905267,-4.334305,-3.011913,-6.783308,7.331832,-9.558181,-4.309805,-5.876904,-5.575724,4.493740,2.777096,1.227237,-1.552459,9.764171,-3.018928,-2.129835,6.244432,0.348203,-7.415477,-0.225607,0.562289,4.820614,5.745969,2.310188,-1.069321,8.902802,0.345750,1.464618,1.400719,-8.541773,9.967835,1.485784,5.757967,-5.360158,-4.918251,1.595336,-1.306880,1.098665,-6.935123,4.724545,-9.840320,-0.968725,2.775993,1.533409,6.111527,-3.201993,-5.663623,6.399302,-4.955125,1.246372,-8.834423,-9.479702,1.632481,-0.885489,-1.695642,8.216474,-6.550808,-4.091108,8.142451,7.768119,-2.807234,2.306543,6.464409,-2.965042,8.607474,-4.925003,8.751574,-6.279836,7.201561,-8.882289,-7.732200,-9.926263,-7.148246,-6.677603,-3.372968,-1.479642,2.604927,7.507691,-9.661911,8.974274,-7.239292,0.935334,-4.715185,-4.820312,-0.159580,-2.315202,-6.940618,-0.299595,4.054437,3.984161,-1.579304,-5.577768,1.798587,-5.770646], dtype = "float32")#candidate|6522|(300,)|const|float32
call_6521 = relay.TupleGetItem(func_3958_call(relay.reshape(const_6522.astype('float32'), [15, 5, 4])), 0)
call_6523 = relay.TupleGetItem(func_3960_call(relay.reshape(const_6522.astype('float32'), [15, 5, 4])), 0)
output = relay.Tuple([call_6491,call_6497,call_6521,const_6522,])
output2 = relay.Tuple([call_6492,call_6498,call_6523,const_6522,])
func_6532 = relay.Function([], output)
mod['func_6532'] = func_6532
mod = relay.transform.InferType()(mod)
mutated_mod['func_6532'] = func_6532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6532_call = mutated_mod.get_global_var('func_6532')
call_6533 = func_6532_call()
output = call_6533
func_6534 = relay.Function([], output)
mutated_mod['func_6534'] = func_6534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2985_call = mod.get_global_var('func_2985')
func_2986_call = mutated_mod.get_global_var('func_2986')
call_6578 = func_2985_call()
call_6579 = func_2985_call()
output = relay.Tuple([call_6578,])
output2 = relay.Tuple([call_6579,])
func_6594 = relay.Function([], output)
mod['func_6594'] = func_6594
mod = relay.transform.InferType()(mod)
output = func_6594()
func_6595 = relay.Function([], output)
mutated_mod['func_6595'] = func_6595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_6609 = relay.TupleGetItem(func_3658_call(), 1)
call_6610 = relay.TupleGetItem(func_3659_call(), 1)
output = call_6609
output2 = call_6610
func_6622 = relay.Function([], output)
mod['func_6622'] = func_6622
mod = relay.transform.InferType()(mod)
output = func_6622()
func_6623 = relay.Function([], output)
mutated_mod['func_6623'] = func_6623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5265_call = mod.get_global_var('func_5265')
func_5267_call = mutated_mod.get_global_var('func_5267')
call_6648 = func_5265_call()
call_6649 = func_5265_call()
output = call_6648
output2 = call_6649
func_6662 = relay.Function([], output)
mod['func_6662'] = func_6662
mod = relay.transform.InferType()(mod)
output = func_6662()
func_6663 = relay.Function([], output)
mutated_mod['func_6663'] = func_6663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_6666 = func_1978_call()
call_6667 = func_1978_call()
output = relay.Tuple([call_6666,])
output2 = relay.Tuple([call_6667,])
func_6675 = relay.Function([], output)
mod['func_6675'] = func_6675
mod = relay.transform.InferType()(mod)
mutated_mod['func_6675'] = func_6675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6675_call = mutated_mod.get_global_var('func_6675')
call_6676 = func_6675_call()
output = call_6676
func_6677 = relay.Function([], output)
mutated_mod['func_6677'] = func_6677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5719_call = mod.get_global_var('func_5719')
func_5721_call = mutated_mod.get_global_var('func_5721')
call_6681 = func_5719_call()
call_6682 = func_5719_call()
func_6346_call = mod.get_global_var('func_6346')
func_6347_call = mutated_mod.get_global_var('func_6347')
call_6686 = func_6346_call()
call_6687 = func_6346_call()
func_2970_call = mod.get_global_var('func_2970')
func_2973_call = mutated_mod.get_global_var('func_2973')
var_6700 = relay.var("var_6700", dtype = "uint8", shape = (448,))#candidate|6700|(448,)|var|uint8
call_6699 = relay.TupleGetItem(func_2970_call(relay.reshape(var_6700.astype('uint8'), [448,]), relay.reshape(call_6686.astype('float64'), [12, 13, 5]), ), 2)
call_6701 = relay.TupleGetItem(func_2973_call(relay.reshape(var_6700.astype('uint8'), [448,]), relay.reshape(call_6686.astype('float64'), [12, 13, 5]), ), 2)
func_4098_call = mod.get_global_var('func_4098')
func_4100_call = mutated_mod.get_global_var('func_4100')
const_6706 = relay.const(-2, dtype = "uint64")#candidate|6706|()|const|uint64
call_6705 = relay.TupleGetItem(func_4098_call(relay.reshape(const_6706.astype('uint64'), [])), 0)
call_6707 = relay.TupleGetItem(func_4100_call(relay.reshape(const_6706.astype('uint64'), [])), 0)
func_5094_call = mod.get_global_var('func_5094')
func_5096_call = mutated_mod.get_global_var('func_5096')
call_6708 = relay.TupleGetItem(func_5094_call(), 0)
call_6709 = relay.TupleGetItem(func_5096_call(), 0)
func_2566_call = mod.get_global_var('func_2566')
func_2569_call = mutated_mod.get_global_var('func_2569')
call_6711 = relay.TupleGetItem(func_2566_call(relay.reshape(var_6700.astype('uint8'), [448,])), 3)
call_6712 = relay.TupleGetItem(func_2569_call(relay.reshape(var_6700.astype('uint8'), [448,])), 3)
output = relay.Tuple([call_6681,call_6686,call_6699,var_6700,call_6705,const_6706,call_6708,call_6711,])
output2 = relay.Tuple([call_6682,call_6687,call_6701,var_6700,call_6707,const_6706,call_6709,call_6712,])
func_6730 = relay.Function([var_6700,], output)
mod['func_6730'] = func_6730
mod = relay.transform.InferType()(mod)
mutated_mod['func_6730'] = func_6730
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6731 = relay.var("var_6731", dtype = "uint8", shape = (448,))#candidate|6731|(448,)|var|uint8
func_6730_call = mutated_mod.get_global_var('func_6730')
call_6732 = func_6730_call(var_6731)
output = call_6732
func_6733 = relay.Function([var_6731], output)
mutated_mod['func_6733'] = func_6733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4430_call = mod.get_global_var('func_4430')
func_4432_call = mutated_mod.get_global_var('func_4432')
call_6789 = relay.TupleGetItem(func_4430_call(), 2)
call_6790 = relay.TupleGetItem(func_4432_call(), 2)
uop_6791 = relay.sigmoid(call_6789.astype('float32')) # shape=(4, 36)
uop_6793 = relay.sigmoid(call_6790.astype('float32')) # shape=(4, 36)
var_6798 = relay.var("var_6798", dtype = "float32", shape = (4, 36))#candidate|6798|(4, 36)|var|float32
bop_6799 = relay.bitwise_xor(uop_6791.astype('int8'), relay.reshape(var_6798.astype('int8'), relay.shape_of(uop_6791))) # shape=(4, 36)
bop_6802 = relay.bitwise_xor(uop_6793.astype('int8'), relay.reshape(var_6798.astype('int8'), relay.shape_of(uop_6793))) # shape=(4, 36)
output = relay.Tuple([bop_6799,])
output2 = relay.Tuple([bop_6802,])
func_6803 = relay.Function([var_6798,], output)
mod['func_6803'] = func_6803
mod = relay.transform.InferType()(mod)
mutated_mod['func_6803'] = func_6803
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6804 = relay.var("var_6804", dtype = "float32", shape = (4, 36))#candidate|6804|(4, 36)|var|float32
func_6803_call = mutated_mod.get_global_var('func_6803')
call_6805 = func_6803_call(var_6804)
output = call_6805
func_6806 = relay.Function([var_6804], output)
mutated_mod['func_6806'] = func_6806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4446_call = mod.get_global_var('func_4446')
func_4447_call = mutated_mod.get_global_var('func_4447')
call_6819 = relay.TupleGetItem(func_4446_call(), 0)
call_6820 = relay.TupleGetItem(func_4447_call(), 0)
func_3658_call = mod.get_global_var('func_3658')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_6825 = relay.TupleGetItem(func_3658_call(), 1)
call_6826 = relay.TupleGetItem(func_3659_call(), 1)
func_5353_call = mod.get_global_var('func_5353')
func_5355_call = mutated_mod.get_global_var('func_5355')
var_6829 = relay.var("var_6829", dtype = "float32", shape = (2145,))#candidate|6829|(2145,)|var|float32
call_6828 = relay.TupleGetItem(func_5353_call(relay.reshape(var_6829.astype('float32'), [2145,])), 1)
call_6830 = relay.TupleGetItem(func_5355_call(relay.reshape(var_6829.astype('float32'), [2145,])), 1)
output = relay.Tuple([call_6819,call_6825,call_6828,var_6829,])
output2 = relay.Tuple([call_6820,call_6826,call_6830,var_6829,])
func_6841 = relay.Function([var_6829,], output)
mod['func_6841'] = func_6841
mod = relay.transform.InferType()(mod)
mutated_mod['func_6841'] = func_6841
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6842 = relay.var("var_6842", dtype = "float32", shape = (2145,))#candidate|6842|(2145,)|var|float32
func_6841_call = mutated_mod.get_global_var('func_6841')
call_6843 = func_6841_call(var_6842)
output = call_6843
func_6844 = relay.Function([var_6842], output)
mutated_mod['func_6844'] = func_6844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4940_call = mod.get_global_var('func_4940')
func_4942_call = mutated_mod.get_global_var('func_4942')
call_6851 = func_4940_call()
call_6852 = func_4940_call()
func_2416_call = mod.get_global_var('func_2416')
func_2418_call = mutated_mod.get_global_var('func_2418')
const_6856 = relay.const([-7,-5,1,4,-7,-10,7,5], dtype = "uint8")#candidate|6856|(8,)|const|uint8
call_6855 = relay.TupleGetItem(func_2416_call(relay.reshape(const_6856.astype('uint8'), [8,])), 3)
call_6857 = relay.TupleGetItem(func_2418_call(relay.reshape(const_6856.astype('uint8'), [8,])), 3)
func_6227_call = mod.get_global_var('func_6227')
func_6228_call = mutated_mod.get_global_var('func_6228')
call_6870 = relay.TupleGetItem(func_6227_call(), 0)
call_6871 = relay.TupleGetItem(func_6228_call(), 0)
output = relay.Tuple([call_6851,call_6855,const_6856,call_6870,])
output2 = relay.Tuple([call_6852,call_6857,const_6856,call_6871,])
func_6877 = relay.Function([], output)
mod['func_6877'] = func_6877
mod = relay.transform.InferType()(mod)
output = func_6877()
func_6878 = relay.Function([], output)
mutated_mod['func_6878'] = func_6878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3727_call = mod.get_global_var('func_3727')
func_3728_call = mutated_mod.get_global_var('func_3728')
call_6904 = relay.TupleGetItem(func_3727_call(), 0)
call_6905 = relay.TupleGetItem(func_3728_call(), 0)
output = relay.Tuple([call_6904,])
output2 = relay.Tuple([call_6905,])
func_6906 = relay.Function([], output)
mod['func_6906'] = func_6906
mod = relay.transform.InferType()(mod)
output = func_6906()
func_6907 = relay.Function([], output)
mutated_mod['func_6907'] = func_6907
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7003 = relay.var("var_7003", dtype = "float32", shape = (11, 15, 7))#candidate|7003|(11, 15, 7)|var|float32
var_7004 = relay.var("var_7004", dtype = "float32", shape = (11, 15, 7))#candidate|7004|(11, 15, 7)|var|float32
bop_7005 = relay.subtract(var_7003.astype('float32'), relay.reshape(var_7004.astype('float32'), relay.shape_of(var_7003))) # shape=(11, 15, 7)
output = bop_7005
output2 = bop_7005
func_7010 = relay.Function([var_7003,var_7004,], output)
mod['func_7010'] = func_7010
mod = relay.transform.InferType()(mod)
mutated_mod['func_7010'] = func_7010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7010_call = mutated_mod.get_global_var('func_7010')
var_7012 = relay.var("var_7012", dtype = "float32", shape = (11, 15, 7))#candidate|7012|(11, 15, 7)|var|float32
var_7013 = relay.var("var_7013", dtype = "float32", shape = (11, 15, 7))#candidate|7013|(11, 15, 7)|var|float32
call_7011 = func_7010_call(var_7012,var_7013,)
output = call_7011
func_7014 = relay.Function([var_7012,var_7013,], output)
mutated_mod['func_7014'] = func_7014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4808_call = mod.get_global_var('func_4808')
func_4809_call = mutated_mod.get_global_var('func_4809')
call_7074 = relay.TupleGetItem(func_4808_call(), 0)
call_7075 = relay.TupleGetItem(func_4809_call(), 0)
const_7078 = relay.const([[[-5.158524,-7.801762,-2.379349,3.149153,2.510757],[-4.434858,-3.844185,7.772349,-0.476490,-8.797116],[5.688144,-0.229994,-4.945003,5.508464,-2.637544],[1.664854,-1.377254,-9.545836,8.291917,-1.579371],[-2.252123,0.070514,3.611165,-3.033991,-7.370158],[3.844794,8.683707,-4.410349,-5.754445,5.106193],[-5.380274,4.304247,-0.409895,-9.828830,5.805570],[-7.372133,1.707775,-8.447860,4.389369,-5.053689],[-2.988023,4.372219,0.253625,3.906488,3.136186],[-7.543193,6.709572,7.269922,2.307592,-8.062155],[-0.356324,-2.077879,-5.004693,3.163086,5.137530],[8.318931,8.391526,2.803145,-9.824865,-3.068190],[6.364370,-8.697829,7.855777,3.988145,2.078215]],[[5.571933,-6.678292,6.674346,6.520769,-7.447427],[-0.189020,-9.878410,9.028306,-7.429816,-3.401707],[1.190382,3.724590,9.995892,4.339483,8.327838],[-6.253333,4.870392,-3.381923,2.442436,4.694697],[-2.084646,-7.639124,5.378462,-4.891691,4.625766],[-8.152524,-5.787039,-0.040427,-8.658691,-4.663831],[-5.168369,9.295746,-5.777960,-4.976720,0.008782],[8.324039,1.559373,-6.160852,0.434480,-1.472305],[2.346273,-5.396637,-1.691810,4.567343,-4.072324],[-5.525819,-9.640988,-9.219939,3.516475,9.378030],[-7.528056,-3.677631,-0.711548,-2.982337,9.903418],[-8.027979,-4.642927,4.011610,-7.533335,9.244906],[-2.698388,9.192505,5.241299,1.987266,4.095112]],[[9.750639,-8.032049,5.227481,-3.867614,-9.651278],[9.309349,6.936984,2.568787,-6.524222,3.001408],[7.689035,-5.764508,1.353457,-0.190986,-9.660714],[1.886044,-8.142662,-3.449187,-1.488231,5.740596],[-1.932491,5.485879,-5.960478,-8.788262,-6.154543],[1.588725,-7.977238,2.067106,2.476489,-7.826983],[1.121872,-4.983881,9.986177,5.087989,2.997080],[7.962958,2.283690,1.206545,9.056751,7.276914],[-8.521695,2.597621,-4.799059,-0.132101,9.034957],[8.519413,-1.320021,-6.467992,-0.298138,1.079592],[-5.215904,-4.606870,2.166040,-6.953098,4.793108],[8.991015,-8.528168,-3.618129,0.233940,-4.394139],[-3.685209,7.393740,5.346926,-9.969781,1.386112]],[[-8.573786,-9.910183,-3.362267,-6.064328,1.183057],[-0.495823,9.432733,2.333159,5.334378,-1.846021],[4.169709,7.645601,7.821057,-1.187071,7.003422],[5.408885,-8.795307,-5.169212,-9.230290,0.473021],[-7.775960,-3.784100,-2.452205,-5.849189,-8.562403],[8.777611,5.196017,-2.584393,-6.765166,-8.287948],[-5.182990,3.508586,-4.302744,8.793288,-5.660401],[-7.518062,-9.328079,9.272187,-9.193429,-0.999934],[-0.810402,3.251333,4.640562,8.785496,-1.207164],[5.721929,2.119847,9.473631,-2.435382,-7.040175],[5.621201,0.968543,8.181036,-7.141742,-6.249015],[-2.171649,4.229002,-0.582848,7.872765,-1.069630],[-2.033683,6.395808,-0.496114,2.146536,5.379586]],[[0.024952,-6.266049,1.645180,5.774565,8.689647],[-4.097435,7.802091,7.820362,-8.571708,6.358386],[8.903880,-2.292526,0.722580,9.062554,3.500179],[5.759213,-0.863435,-2.623954,6.393298,7.927008],[8.112791,4.950426,9.933557,8.876655,1.308336],[-2.305091,-2.917032,8.407068,2.628330,-6.025068],[-7.007646,-8.695927,1.187613,-8.768285,-7.803355],[4.750944,0.244348,-8.313354,-4.764107,5.092159],[-3.203563,-5.394253,-7.439560,7.616295,-5.722599],[2.803145,0.500252,0.170404,-6.181374,2.772079],[-8.260880,-5.835666,3.711502,-7.975520,-1.661467],[-4.027284,-3.075302,9.503507,-4.479141,-4.992399],[-8.011647,1.709537,5.756948,-1.484168,-7.971137]],[[2.708200,0.854156,5.428688,-6.621343,-0.315344],[3.050076,-6.277064,3.199475,-3.016543,-0.809842],[-9.227151,-8.978576,-8.739917,8.175288,0.276120],[-9.339456,-3.460210,0.915558,2.074203,6.691310],[-0.399097,-4.040146,-6.537845,1.684008,7.420455],[-3.518207,-2.402965,-2.220085,-3.407224,-4.909841],[5.785977,-6.472306,-6.986014,4.505140,-3.963594],[1.620743,4.399185,5.797610,2.446413,9.483867],[-0.684800,-8.243623,-8.476639,8.539908,-9.079613],[0.122424,-8.186283,5.947002,0.115453,-4.775082],[-2.685857,-8.378524,9.227233,9.160009,-7.580953],[-8.489480,-9.667808,-1.181571,7.786346,-0.965273],[4.626954,2.323994,8.199571,-1.024575,-8.349533]],[[-5.347549,-7.479123,-9.135282,-2.267594,-8.351056],[-1.220986,4.964303,4.359761,-5.592228,0.274941],[2.574301,-5.036811,7.159983,3.645918,-4.607485],[-9.777732,-4.509022,1.764370,4.076178,3.395913],[2.878694,-3.560825,-2.588558,-2.441773,-2.571439],[3.727236,-2.686357,-8.845026,-8.310846,5.110963],[7.357016,3.127749,-5.499277,8.874490,8.659948],[0.763652,-7.120399,9.790574,6.286019,0.982788],[-5.413630,4.489675,-0.245043,-0.915380,-7.917808],[9.085901,5.196585,5.670994,-9.254297,2.413483],[8.656167,-7.743422,-9.793878,0.723532,9.236417],[7.312149,4.077798,-5.337015,0.372313,-2.240668],[-4.403010,6.012175,2.042794,2.723456,2.772412]],[[4.685775,5.893786,6.395840,8.965425,8.939744],[5.860350,-5.751485,-4.676868,8.243890,3.209246],[4.831681,1.958286,-9.723433,1.719014,-1.449791],[-8.551731,-6.049938,2.068986,-3.280036,-2.591483],[5.789789,-2.007869,-5.026679,-1.984822,-7.163259],[-8.132404,9.917746,1.225881,-3.856922,1.439767],[1.662084,-7.511857,2.430072,8.730808,-3.796816],[-3.926468,-9.603018,-6.204982,8.529108,-7.589344],[-9.505301,9.885126,-9.586032,5.751701,4.389472],[-8.158173,7.955981,-9.774926,-9.491261,-7.017522],[8.175620,2.807212,8.315370,1.135369,-9.505886],[8.178674,-6.965122,9.771053,5.326110,1.554652],[6.942009,1.602601,-6.770128,-0.074708,-8.000479]],[[9.227968,2.207220,9.491769,-4.947092,3.334884],[-8.030580,-3.903588,7.237778,7.286735,-6.612758],[8.898474,-2.634631,-0.853934,9.930505,-6.824265],[5.944292,9.068588,-1.100483,-9.001513,5.493529],[9.076141,-3.734713,-0.990883,1.517146,-2.775171],[-5.633176,-0.255985,-5.349432,8.828901,7.205194],[9.030932,-4.034260,1.001727,5.389010,9.803186],[8.705466,-7.776602,-4.944968,6.530049,7.499557],[-3.106577,7.557388,-3.063652,2.566961,3.892495],[2.486411,-9.197420,-1.016722,-0.457173,0.860828],[-6.233334,2.246427,-2.769836,-2.608765,4.358215],[4.054834,7.662500,-2.475011,-7.882353,-0.537967],[-2.838338,4.752197,1.946104,-2.993918,0.046684]],[[4.670437,-1.627572,8.013778,5.481841,-1.072879],[1.036327,-5.411816,7.454267,-2.745753,-6.087318],[4.714552,5.304954,4.123261,-8.499483,-8.429356],[7.104776,-2.850158,-0.419434,-0.050741,1.184480],[6.641166,-3.820156,2.508118,-7.586725,-9.658003],[-6.883392,-9.253841,-9.792869,-6.485100,0.902681],[-6.957011,6.445443,0.592728,-0.288915,6.566987],[-7.613404,-9.021231,-3.174665,-0.101244,-2.180452],[7.424371,0.645508,-1.924454,-4.805729,-8.373337],[8.803031,-6.485474,2.312093,4.131235,-1.318941],[2.810461,0.791899,1.377040,-5.592087,-0.043014],[-8.246039,4.239829,6.065709,5.662425,4.453715],[-5.830838,4.516851,3.807276,-5.226361,-7.137462]],[[4.437563,3.266118,-5.045845,-8.577727,7.215472],[1.077440,-9.886005,7.481437,-1.864584,5.394161],[-3.570250,-3.111453,0.094060,4.443900,-8.844060],[-8.619920,4.546276,-6.235761,-7.445102,-8.454481],[-5.086099,-9.657456,2.293043,-9.824918,-9.609787],[0.405358,4.818727,-3.093141,8.960972,-5.630567],[-1.819400,6.852992,1.341264,2.175898,-1.483731],[7.324634,7.942096,8.768369,6.414065,-9.348132],[-0.514797,-3.429565,7.503303,-2.758665,-8.366433],[5.678718,2.448078,4.429896,-0.892408,-5.421164],[-4.260505,4.415738,6.898763,-8.080800,0.716214],[2.416618,-8.721036,1.147220,-8.157932,-2.321399],[9.434032,2.021007,-9.022891,1.482245,0.518626]],[[3.344580,4.986764,0.238584,-4.822931,4.228524],[-3.985579,4.403111,-7.983475,4.294025,-5.852677],[-0.016115,5.011090,-1.229833,-9.882681,-9.009628],[2.341850,4.943914,5.509888,-2.217211,8.373301],[1.618276,-2.927843,-5.546385,7.703346,6.247000],[-6.003108,1.658803,-0.238536,5.751719,5.527440],[-6.249268,-0.349154,9.910114,5.154837,3.266704],[3.071649,-0.229268,0.952357,2.336073,-8.407126],[-2.193779,-5.834333,-1.307847,9.286766,1.268506],[-9.569951,5.232679,5.586960,-1.563021,-3.389284],[5.680177,-2.831678,5.937391,8.677195,-1.185672],[-1.203141,-0.555673,8.963631,0.646862,-1.043326],[2.240232,-1.437524,5.093966,-8.817285,-6.892419]]], dtype = "float32")#candidate|7078|(12, 13, 5)|const|float32
bop_7079 = relay.logical_xor(call_7074.astype('uint8'), relay.reshape(const_7078.astype('uint8'), relay.shape_of(call_7074))) # shape=(12, 13, 5)
bop_7082 = relay.logical_xor(call_7075.astype('uint8'), relay.reshape(const_7078.astype('uint8'), relay.shape_of(call_7075))) # shape=(12, 13, 5)
func_2416_call = mod.get_global_var('func_2416')
func_2418_call = mutated_mod.get_global_var('func_2418')
const_7115 = relay.const([3,-3,-3,4,10,10,-2,9], dtype = "uint8")#candidate|7115|(8,)|const|uint8
call_7114 = relay.TupleGetItem(func_2416_call(relay.reshape(const_7115.astype('uint8'), [8,])), 0)
call_7116 = relay.TupleGetItem(func_2418_call(relay.reshape(const_7115.astype('uint8'), [8,])), 0)
output = relay.Tuple([bop_7079,call_7114,const_7115,])
output2 = relay.Tuple([bop_7082,call_7116,const_7115,])
func_7117 = relay.Function([], output)
mod['func_7117'] = func_7117
mod = relay.transform.InferType()(mod)
output = func_7117()
func_7118 = relay.Function([], output)
mutated_mod['func_7118'] = func_7118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6594_call = mod.get_global_var('func_6594')
func_6595_call = mutated_mod.get_global_var('func_6595')
call_7127 = relay.TupleGetItem(func_6594_call(), 0)
call_7128 = relay.TupleGetItem(func_6595_call(), 0)
output = relay.Tuple([call_7127,])
output2 = relay.Tuple([call_7128,])
func_7129 = relay.Function([], output)
mod['func_7129'] = func_7129
mod = relay.transform.InferType()(mod)
mutated_mod['func_7129'] = func_7129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7129_call = mutated_mod.get_global_var('func_7129')
call_7130 = func_7129_call()
output = call_7130
func_7131 = relay.Function([], output)
mutated_mod['func_7131'] = func_7131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3749_call = mod.get_global_var('func_3749')
func_3750_call = mutated_mod.get_global_var('func_3750')
call_7242 = relay.TupleGetItem(func_3749_call(), 0)
call_7243 = relay.TupleGetItem(func_3750_call(), 0)
uop_7244 = relay.tan(call_7242.astype('float64')) # shape=(12, 13, 5)
uop_7246 = relay.tan(call_7243.astype('float64')) # shape=(12, 13, 5)
output = relay.Tuple([uop_7244,])
output2 = relay.Tuple([uop_7246,])
func_7251 = relay.Function([], output)
mod['func_7251'] = func_7251
mod = relay.transform.InferType()(mod)
output = func_7251()
func_7252 = relay.Function([], output)
mutated_mod['func_7252'] = func_7252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4430_call = mod.get_global_var('func_4430')
func_4432_call = mutated_mod.get_global_var('func_4432')
call_7270 = relay.TupleGetItem(func_4430_call(), 2)
call_7271 = relay.TupleGetItem(func_4432_call(), 2)
func_5550_call = mod.get_global_var('func_5550')
func_5552_call = mutated_mod.get_global_var('func_5552')
var_7288 = relay.var("var_7288", dtype = "float64", shape = (504,))#candidate|7288|(504,)|var|float64
call_7287 = relay.TupleGetItem(func_5550_call(relay.reshape(var_7288.astype('float64'), [504,])), 5)
call_7289 = relay.TupleGetItem(func_5552_call(relay.reshape(var_7288.astype('float64'), [504,])), 5)
output = relay.Tuple([call_7270,call_7287,var_7288,])
output2 = relay.Tuple([call_7271,call_7289,var_7288,])
func_7292 = relay.Function([var_7288,], output)
mod['func_7292'] = func_7292
mod = relay.transform.InferType()(mod)
var_7293 = relay.var("var_7293", dtype = "float64", shape = (504,))#candidate|7293|(504,)|var|float64
output = func_7292(var_7293)
func_7294 = relay.Function([var_7293], output)
mutated_mod['func_7294'] = func_7294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6346_call = mod.get_global_var('func_6346')
func_6347_call = mutated_mod.get_global_var('func_6347')
call_7323 = func_6346_call()
call_7324 = func_6346_call()
func_2416_call = mod.get_global_var('func_2416')
func_2418_call = mutated_mod.get_global_var('func_2418')
const_7364 = relay.const([-1,-4,-4,-7,-5,3,2,10], dtype = "uint8")#candidate|7364|(8,)|const|uint8
call_7363 = relay.TupleGetItem(func_2416_call(relay.reshape(const_7364.astype('uint8'), [8,])), 3)
call_7365 = relay.TupleGetItem(func_2418_call(relay.reshape(const_7364.astype('uint8'), [8,])), 3)
output = relay.Tuple([call_7323,call_7363,const_7364,])
output2 = relay.Tuple([call_7324,call_7365,const_7364,])
func_7367 = relay.Function([], output)
mod['func_7367'] = func_7367
mod = relay.transform.InferType()(mod)
output = func_7367()
func_7368 = relay.Function([], output)
mutated_mod['func_7368'] = func_7368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5069_call = mod.get_global_var('func_5069')
func_5070_call = mutated_mod.get_global_var('func_5070')
call_7376 = relay.TupleGetItem(func_5069_call(), 0)
call_7377 = relay.TupleGetItem(func_5070_call(), 0)
output = call_7376
output2 = call_7377
func_7385 = relay.Function([], output)
mod['func_7385'] = func_7385
mod = relay.transform.InferType()(mod)
mutated_mod['func_7385'] = func_7385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7385_call = mutated_mod.get_global_var('func_7385')
call_7386 = func_7385_call()
output = call_7386
func_7387 = relay.Function([], output)
mutated_mod['func_7387'] = func_7387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6622_call = mod.get_global_var('func_6622')
func_6623_call = mutated_mod.get_global_var('func_6623')
call_7434 = func_6622_call()
call_7435 = func_6622_call()
func_4688_call = mod.get_global_var('func_4688')
func_4690_call = mutated_mod.get_global_var('func_4690')
call_7473 = relay.TupleGetItem(func_4688_call(), 0)
call_7474 = relay.TupleGetItem(func_4690_call(), 0)
output = relay.Tuple([call_7434,call_7473,])
output2 = relay.Tuple([call_7435,call_7474,])
func_7489 = relay.Function([], output)
mod['func_7489'] = func_7489
mod = relay.transform.InferType()(mod)
output = func_7489()
func_7490 = relay.Function([], output)
mutated_mod['func_7490'] = func_7490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_7496 = relay.TupleGetItem(func_3658_call(), 0)
call_7497 = relay.TupleGetItem(func_3659_call(), 0)
func_5353_call = mod.get_global_var('func_5353')
func_5355_call = mutated_mod.get_global_var('func_5355')
const_7501 = relay.const([[4.155503,1.445836,3.326064],[0.352254,4.797155,8.511467],[-9.235329,4.989259,-7.159458],[1.914349,-9.038017,-5.535746],[1.910241,-3.837948,8.608742],[-5.583557,-0.707227,-5.797871],[-5.620881,0.810347,-3.766218],[0.116831,7.797265,-0.641762],[-9.022267,-8.244411,0.228127],[-6.269235,-5.488129,-3.111672],[-2.371760,-0.766416,0.275873],[8.027529,-0.695929,2.655184],[5.171769,1.537881,2.337617],[-1.962395,6.373373,-0.260668],[7.902496,-0.639292,-8.679439],[-4.572887,4.899574,3.165893],[6.225494,0.275165,8.895688],[-7.590333,9.896591,-8.791628],[3.047550,-3.021265,2.411293],[-8.554340,5.150790,7.821137],[4.412889,3.037596,-5.962450],[5.609392,2.831228,-6.950586],[-7.200022,0.500015,-4.215179],[-1.008929,-3.396746,7.397579],[-4.531958,-3.480813,-5.442370],[8.495384,0.947440,-0.720299],[9.590161,-4.496163,-3.352276],[8.213074,8.903932,-3.619074],[-0.712724,-3.474254,6.147980],[2.345196,9.220296,-9.017367],[9.599979,4.168670,-6.913747],[-1.706512,-4.657637,-0.226121],[9.945764,8.298047,-6.152028],[7.287777,-7.002235,5.048559],[1.355673,7.022943,-1.550109],[-2.998936,3.943388,7.371278],[3.453603,5.592047,-8.341087],[7.475788,-5.146355,-6.851195],[-6.491685,4.761721,4.409954],[4.912470,1.154561,6.362545],[-1.072324,9.709391,-4.356240],[8.071496,6.511800,6.368863],[-2.109286,6.872591,1.976578],[7.053601,5.493843,-7.273267],[7.969407,5.847569,9.288075],[-2.186920,-4.981970,8.615312],[-5.721676,1.574803,-8.697694],[0.575909,5.272651,2.521126],[7.893316,-8.520082,4.323096],[6.143552,-5.657064,-6.723400],[-4.806896,6.498690,-5.183775],[8.566076,3.130674,-7.239705],[3.465215,-7.468494,8.987281],[8.159360,-9.865089,5.302773],[-9.059490,-3.756579,-4.731195],[-7.357286,-8.584608,4.589483],[5.445097,5.640600,4.321851],[-0.612965,-5.538374,0.010090],[-5.858787,-3.153352,6.305915],[-2.500243,-3.724836,-5.205917],[9.784092,0.937893,8.158552],[2.782960,8.742904,6.087529],[-4.105169,0.551601,8.109240],[-5.381268,1.751918,-0.263500],[2.276098,9.401288,-9.499093],[-6.726515,-8.789737,7.787296],[-4.103345,-4.588666,5.611874],[9.572907,4.915194,-9.541325],[5.829379,-3.294296,7.755758],[5.217028,-9.526199,0.667324],[1.825430,-5.420863,8.266178],[9.247184,-4.023634,-8.842244],[9.000313,-1.917733,-7.037746],[2.349109,6.101052,4.463795],[1.773116,7.699270,2.409887],[-9.384882,-7.503417,-9.401237],[-8.462236,-2.445603,-6.947868],[-0.227819,-8.473220,-2.812973],[-3.769799,-7.491674,-1.606917],[-2.003714,4.432011,8.206632],[-2.729111,2.136638,-2.176606],[0.128186,4.453247,-2.325789],[-6.657874,7.150793,1.756396],[7.710221,-3.864097,0.916694],[5.797961,-2.075231,-6.650113],[4.513226,8.166303,1.917318],[5.553946,-4.075863,-9.885965],[-4.618792,9.535536,7.367319],[1.747314,-0.036883,2.903588],[-1.886634,-5.946063,3.444278],[-1.776251,0.477730,5.363391],[-4.583892,0.491371,8.856654],[2.544491,-6.398112,6.488044],[1.435040,2.302591,-6.050050],[6.283018,9.823213,9.817494],[-8.846916,-6.499967,9.079325],[1.449140,-9.868043,-0.512886],[-0.127608,8.878336,2.952781],[7.064558,8.598690,-5.571420],[4.813361,5.696949,6.931166],[5.240692,-6.233883,-4.269159],[9.673851,1.334108,-7.705677],[2.140838,2.011925,-9.175832],[6.922501,4.939881,-7.483482],[1.326018,-8.829252,-3.046263],[6.342545,4.403433,7.414760],[-4.951196,9.976790,-4.636325],[2.123386,8.664273,-5.776520],[7.050296,2.401379,5.943943],[2.482858,1.054465,0.635809],[7.564561,6.872227,-8.564532],[-0.948470,1.575272,3.920581],[-4.139292,5.461225,0.816335],[5.028454,7.650389,-5.089832],[-2.891576,1.354060,1.620822],[3.992027,-0.133962,3.531232],[-9.074902,6.597697,-7.138991],[0.064864,4.214016,-3.292288],[0.316215,-4.509079,-7.054947],[3.699006,-2.809241,-5.805890],[2.773284,-4.859964,-5.631018],[-0.841228,-8.529880,-1.379715],[-8.505749,6.109190,-6.703574],[3.161758,9.085907,-9.237626],[-0.001718,-2.727407,7.201003],[-3.565947,-7.168089,-4.355662],[-2.287300,6.688395,-7.227375],[6.950601,-7.376293,-8.877426],[-1.560347,-2.705815,5.538314],[9.822529,-3.542472,-9.792146],[-4.033805,-1.118690,-6.423498],[3.378843,6.240811,9.276477],[-9.724481,9.288046,3.804698],[4.262439,9.882898,5.707123],[9.544047,-8.664409,-9.944790],[0.531035,4.233269,1.834176],[-9.279851,-6.382437,-4.733196],[6.788783,4.473138,4.700859],[-7.205244,-0.871462,-1.784373],[5.491111,7.756125,2.064022],[-2.088595,-4.756826,-8.211702],[2.076379,7.289878,-6.499754],[3.914089,-2.606268,-0.195959],[7.294901,7.889871,-8.250017],[8.209279,2.828058,0.703552],[-1.930369,3.152600,1.519069],[9.228666,-4.655656,1.071605],[-0.685038,-6.667613,9.133785],[-6.672169,3.462670,-7.719857],[8.792410,5.136864,-3.346674],[1.454435,5.760573,-2.428063],[-3.837209,4.079096,-2.284320],[8.876948,-5.446678,8.355961],[4.937698,-3.979389,0.395899],[-3.468436,7.651547,1.136327],[7.905374,-3.616918,8.984384],[2.597350,-9.935237,-9.365231],[2.331592,0.526910,2.483859],[2.967439,-8.535306,-3.168579],[6.941104,-9.030659,-0.822748],[-2.073634,-2.245657,-2.536201],[0.339567,1.612059,0.538095],[-7.530592,-2.251569,-5.403622],[0.089786,-6.388632,4.141764],[7.781083,6.510939,9.413671],[-6.201219,4.528036,3.149351],[-2.543676,-6.841255,-1.309986],[-8.112557,-4.492193,8.504927],[-4.114245,8.652445,-1.449403],[2.352401,8.198523,-6.178482],[5.324631,-0.787563,9.545474],[-4.147283,7.622498,-1.001554],[-8.523062,-1.631454,9.578480],[4.051807,-3.957686,-0.148100],[-3.860453,7.375497,-9.136507],[-5.311039,-9.679391,6.180124],[-2.316676,2.330303,-1.586858],[-5.580390,-4.076842,1.209493],[-1.312564,-0.474671,3.460553],[0.017862,-8.488259,9.799230],[-1.283832,-3.151137,3.916501],[6.569765,-3.542855,5.162247],[-5.419862,9.618131,-4.104650],[-4.843071,-7.539392,-7.480476],[8.241269,4.456548,-8.825604],[-4.271099,-0.205105,5.047149],[-8.899111,-9.159108,7.264463],[1.047294,9.807195,4.898848],[-1.339471,-6.224433,-1.838641],[-4.013089,-3.305708,4.870918],[3.452450,-3.780111,5.130168],[0.909892,-0.310268,-8.499345],[8.635641,9.635987,-9.810746],[-2.556810,-0.017318,2.734224],[1.349645,-4.357998,8.777953],[-9.195397,2.787012,6.799669],[-8.467546,4.318802,-7.039101],[8.230213,6.971534,-2.856388],[2.129637,-8.795886,3.466971],[-6.773570,-8.404289,-3.812464],[-0.774535,-5.304189,7.508509],[-8.959373,-2.122994,-7.786070],[5.418059,-9.529356,-1.901116],[0.401328,8.222292,3.495869],[7.335987,-9.872593,-3.287841],[-5.458790,2.509239,5.765147],[-6.967440,9.872939,2.549573],[2.812634,1.109868,4.570216],[-6.355886,3.959952,6.989231],[-3.310972,-1.530817,-0.761288],[2.029224,8.181735,6.862741],[-9.466878,7.395666,-8.990154],[7.312622,9.805556,7.480450],[3.993164,5.547320,6.891284],[1.037304,-1.068456,-2.236032],[3.785676,8.029069,0.746979],[6.636113,-9.240742,2.682399],[6.171330,-8.753717,6.117913],[9.830509,2.536648,6.793720],[5.110987,-1.659288,-1.273911],[-3.026765,-1.358562,-2.556761],[-6.604850,6.549267,-3.277803],[6.865951,-0.804280,2.944012],[7.428209,-1.703610,5.217292],[-7.111842,-1.174031,-5.777623],[6.338143,-0.893521,-4.121783],[7.676435,-8.903182,2.272138],[8.246734,-9.808528,-7.968204],[3.754066,3.402791,-7.571032],[1.407584,9.527010,2.697266],[-4.359888,8.749501,1.228413],[-1.030584,-9.354396,0.045151],[6.759014,8.012441,-1.667675],[8.926996,3.475954,9.516231],[-6.892016,-3.817863,8.388891],[9.431254,7.175820,-0.697271],[1.428030,1.824442,-0.873049],[9.633163,-0.309378,6.532298],[2.010795,-3.077766,7.167850],[-9.708049,8.997437,-9.456579],[0.030561,-0.308516,-2.424137],[0.712261,8.187476,7.490087],[6.576845,-9.744214,9.151185],[4.624031,-3.029095,-4.253622],[7.744530,9.257349,2.994313],[3.931814,-4.995633,8.347157],[8.895945,-3.858156,-4.952626],[-3.336290,-4.096845,9.527980],[-7.146935,-5.696441,-0.032641],[9.981545,-6.956233,-5.862942],[-2.513539,-5.773944,-8.052881],[1.964977,-8.647574,-5.952438],[2.533973,-0.334546,6.378591],[-0.443749,-5.258852,9.801491],[8.229412,5.447507,7.677468],[3.505771,9.293874,-0.906186],[-8.112337,7.506451,0.925957],[1.245711,-5.115231,5.034439],[4.329045,-9.787096,-9.551718],[-2.072884,-0.291948,7.618865],[-6.136835,1.823626,-1.419004],[6.784973,0.728374,1.960724],[-3.801688,2.596179,4.517078],[5.530336,-4.100648,-2.407484],[6.245402,-1.523984,-5.562458],[9.355596,0.925299,3.479669],[6.509866,-7.896032,6.065789],[8.025201,-3.251911,3.970030],[2.100279,-8.359979,-3.387715],[0.794108,5.265283,6.460390],[8.595045,-0.131023,8.702041],[7.670831,-1.658779,5.164846],[3.635654,-2.250486,2.159169],[2.698735,-2.945977,6.616788],[5.820188,-1.085511,-4.106879],[-2.056912,-2.381396,-6.597198],[-5.556981,-8.191372,3.234464],[3.723364,6.155730,-2.766454],[9.198561,2.353229,2.919989],[-8.849328,0.097790,-9.174649],[-6.392356,-5.818991,0.798855],[-8.620661,-1.286615,5.101871],[-5.514125,-5.401176,-2.354326],[-5.693207,6.895843,2.215774],[-8.435566,7.692958,-5.934721],[-1.552114,-0.375248,3.525334],[3.613306,-0.180364,6.634606],[-5.138173,-3.331276,7.219051],[7.061275,-2.897490,7.271860],[-1.861547,2.568455,-8.976612],[3.346596,-0.659745,0.445901],[7.575476,1.328286,-3.931654],[4.180575,-9.872174,6.534667],[-8.062758,0.483797,2.823124],[-5.261528,4.230143,5.697951],[9.122464,-9.797786,0.778621],[-0.047657,-2.417817,-7.293217],[-9.230969,8.673909,6.825613],[-1.171845,-8.750291,-9.053593],[-8.191404,7.126746,-9.364202],[8.761218,9.704513,9.316172],[1.062892,6.755054,7.053376],[-7.385380,-1.905254,-6.053820],[7.309679,7.021051,-3.754690],[4.497459,9.257961,-8.017472],[-4.022036,6.886229,3.525450],[-7.210577,-8.376892,5.827403],[3.417802,7.295784,0.965382],[1.015962,-8.107765,-9.074125],[-3.218661,-8.211567,-6.039695],[2.945707,-8.314236,-3.088164],[8.737385,7.656699,8.221985],[7.649518,-8.287431,-5.662588],[-0.335403,-9.340726,-8.834438],[0.154518,0.118027,-7.960353],[8.724924,-2.374711,0.817211],[9.053514,6.709800,-1.635457],[5.549885,2.725547,0.355460],[-7.974970,5.424881,-8.932747],[3.890808,-7.459511,0.087927],[7.156423,-1.233911,7.414006],[-9.279531,-2.985516,4.803340],[-5.583142,-5.449012,-4.250225],[1.797932,8.552743,-5.949881],[2.494913,8.022433,-0.782224],[-3.663802,4.204817,5.496524],[-9.908112,-5.828088,3.475261],[-9.632037,-3.072764,0.607889],[-3.562864,8.086177,4.071986],[3.036536,-0.279148,-6.971429],[-0.865220,-9.467136,4.607821],[-9.971722,2.413333,-2.954269],[-1.113663,6.551698,8.321098],[6.043556,7.030291,5.281451],[-0.489845,1.397800,1.931218],[8.444631,9.543364,-8.490145],[6.487781,-1.799506,8.425463],[4.586224,0.355068,-8.904798],[1.719862,-5.015627,4.806764],[6.532584,4.245912,-9.550233],[-1.094163,-7.988040,1.632394],[-9.130739,6.579330,7.957368],[4.687552,-2.172264,3.700635],[6.468988,-6.496803,-5.158293],[0.660138,-2.007965,-6.105466],[-2.278353,-5.036981,-7.612496],[7.443226,8.278219,-9.450273],[7.772767,1.348405,-5.851254],[-3.277867,-5.245491,-1.985566],[-9.280214,-9.140176,-8.168049],[2.166349,-1.671183,6.837113],[8.936476,4.578418,5.514096],[-6.713320,-7.087099,-5.587312],[-6.393297,-3.098436,4.287286],[2.477839,7.330320,-0.336552],[0.883774,-7.771977,-6.960939],[-9.876390,-3.162270,-7.559151],[3.268996,-3.326269,-2.898878],[2.336159,1.911265,0.670737],[-4.749669,7.386940,2.916261],[9.610536,1.928559,-7.462539],[9.990231,-8.306196,-5.804143],[8.560433,1.212413,5.005692],[-1.638451,-8.180801,1.601132],[-1.491372,4.546711,8.510095],[-7.101084,6.871154,-5.666255],[4.261279,-2.630966,2.579204],[-3.323961,8.324066,-4.682869],[7.038009,1.398070,-8.252207],[-0.453810,-8.022035,-1.872112],[-2.935763,-2.183496,1.506556],[2.228896,-4.195278,-4.080075],[-1.851634,-5.581841,-3.579701],[6.920003,3.829450,7.253403],[2.888490,-7.145891,6.699606],[8.698234,4.266729,1.070618],[-6.815797,1.643801,9.540283],[-3.383118,-6.027263,6.215530],[7.656402,3.423906,0.836909],[-2.641514,-9.766024,-2.008683],[-0.802798,9.180811,3.522001],[-4.480939,2.283763,-7.980795],[6.905847,-1.397930,1.359363],[-8.481447,-9.700881,4.071741],[-9.285485,-1.978161,-3.847338],[4.734717,-1.756531,6.888700],[4.249071,8.423166,3.731445],[6.440856,-7.960306,9.297432],[0.352868,-6.721471,6.001621],[2.531830,-8.720159,-5.429951],[-3.432088,0.464226,-9.106221],[-0.534590,-0.599824,-7.852212],[6.294497,-6.348493,5.643125],[1.614470,6.459267,8.631208],[3.163849,-8.444058,-8.598494],[0.034033,-1.444165,-3.162840],[4.710165,6.386913,-9.115830],[1.711992,6.111249,-6.781390],[6.934402,-6.173708,0.487394],[4.358386,-2.579946,-0.535691],[-0.742264,-2.548270,-6.973119],[0.290720,3.889929,9.982648],[-2.571065,-5.494945,-3.050370],[0.656783,-6.412595,-0.581558],[1.602237,9.833882,-1.701225],[-1.917680,0.353903,6.258365],[7.251356,3.970477,4.297913],[6.355130,4.201604,-0.250709],[-0.082548,-3.477486,6.292896],[-0.313162,-6.110824,-2.431619],[-9.279467,-9.501356,1.112340],[9.880062,-3.832775,-0.646476],[-4.527312,-6.369688,3.909435],[3.814895,-0.951674,-3.518405],[6.690860,-1.985940,-5.611129],[-1.159660,0.299432,-4.967623],[-6.391160,-4.233822,-2.497674],[2.372295,-6.481705,1.095584],[-4.349338,1.997396,-6.243036],[-6.368646,-6.518210,0.696277],[0.246918,2.744888,-7.247751],[-4.867171,-9.810742,-0.365511],[2.915362,6.951142,8.457885],[7.034641,5.986075,-1.508650],[-5.456568,6.055365,5.295677],[-5.737150,-3.177543,6.497044],[0.860838,-6.840055,-2.144694],[9.154116,-6.258584,5.000204],[7.677167,8.873192,2.196576],[-2.230760,-4.055409,0.804476],[-7.354936,-1.736442,9.599449],[-0.064819,2.583225,-6.587365],[3.436767,5.896929,-3.414224],[9.072984,7.557978,7.539165],[-3.497118,6.658996,2.788659],[-4.170626,-3.182870,9.357815],[-4.035479,-8.039104,-5.320990],[-4.119522,-7.489851,4.012215],[-3.977125,-3.404805,2.331593],[2.574309,8.209992,-2.198724],[6.443501,6.012228,3.281495],[2.477493,-1.769704,-3.881704],[1.412680,-4.785244,-3.500054],[-6.328057,-5.154682,2.873283],[-6.935438,9.506993,5.828583],[1.838272,-4.261937,-2.889762],[5.179784,7.822123,6.106859],[-7.719100,-8.501763,5.373416],[-9.327443,-3.580316,-7.960182],[-1.985831,-2.093627,1.421292],[3.016170,-5.021236,8.333508],[1.681472,-4.253079,-6.631739],[-7.535009,-6.754699,7.489221],[-6.124597,-9.862275,-7.346227],[-0.798301,0.768786,-0.242018],[-7.353907,7.974723,3.051412],[2.664597,0.840990,8.835434],[5.577690,-7.210053,5.476565],[1.648483,0.679902,-8.636788],[3.982811,-9.101883,2.558048],[0.288957,-2.866666,-7.489762],[3.366261,8.130968,4.685871],[-1.404345,-5.288737,1.015333],[-6.252411,9.221201,-0.380725],[8.595001,-1.152139,-4.525722],[-4.075154,8.164876,6.908609],[-0.606536,7.014761,9.347295],[-6.148727,-6.069572,6.920628],[-0.158216,-4.479845,1.284203],[3.765541,-2.665948,0.025582],[4.902817,-7.450201,-4.750471],[-9.117972,-3.830858,-1.973975],[2.179468,0.722431,-9.049459],[4.184185,-1.128335,-0.464306],[-1.791891,-4.099153,-6.042562],[0.857855,2.988517,-2.137185],[6.056640,-2.442004,4.760341],[-7.379264,-8.060578,-7.339678],[-7.349979,8.691434,3.027500],[-1.264175,-8.328867,4.894808],[-5.144796,-8.461351,-0.061932],[-3.257828,-6.500492,-7.211655],[9.630256,-1.577700,-0.187808],[-9.481001,-5.607545,-6.792205],[-7.318456,8.498870,6.455357],[0.456693,5.606758,-8.939402],[-2.083092,-8.712737,0.841046],[-3.423297,2.908124,-2.034084],[6.433220,-0.686305,5.196980],[-1.331145,9.430695,-4.337008],[-8.819502,6.712801,5.754490],[6.174262,-4.056766,-3.822658],[-7.382530,-3.652704,0.207913],[-5.078922,-3.810142,-5.457167],[2.197814,8.325782,-6.645938],[3.864417,7.528281,2.934319],[-5.658226,-8.442728,-0.993154],[1.106234,-9.192412,-3.186262],[-6.657659,-9.944579,5.233793],[-6.970079,3.437991,6.447718],[3.935390,-9.434698,8.479552],[-1.453159,4.225220,-4.997396],[2.747741,-2.312895,-4.069364],[-7.033839,6.948227,3.434884],[4.971676,7.795235,3.334736],[1.384090,-6.266222,4.469363],[2.449403,6.112070,-8.307512],[-5.472301,8.865805,2.228490],[9.899768,8.076852,6.820147],[6.278463,-5.909025,3.126343],[8.368772,6.237313,5.892540],[-0.111893,-8.017412,5.735828],[0.228817,-8.047865,-3.721289],[-3.034112,8.793917,7.936277],[-7.189853,-0.687292,8.586942],[-2.965985,-6.114651,-8.413647],[-7.291531,-4.892246,4.128423],[-3.836667,0.005799,1.985555],[-3.443917,7.352464,2.572838],[-7.391457,6.735053,7.104176],[9.093870,8.315782,6.728980],[8.220216,-1.360441,-9.043531],[5.424531,6.326769,2.053502],[-0.412187,-8.830787,-8.458031],[-4.762680,-0.189842,5.421783],[5.963973,4.837065,-5.636396],[-2.200633,8.085093,8.017931],[-0.347859,-6.235103,5.310365],[1.985284,4.577644,8.895088],[3.167888,7.893575,5.740767],[4.214681,2.630800,0.015118],[9.672539,2.070990,7.572570],[-3.251138,7.435105,3.084472],[9.851576,-6.311319,-0.079166],[-2.026801,-4.368837,7.946737],[-8.114082,-6.867838,-8.597944],[7.242822,5.080799,-0.690000],[1.738353,1.078630,6.690752],[1.499724,2.013161,2.060691],[2.836154,8.330253,2.425595],[9.608679,-5.594356,9.120096],[1.376932,-2.888855,3.820580],[5.302416,-5.587256,2.610900],[0.587093,-1.451112,7.018940],[9.781223,6.299452,-0.814447],[9.200872,-9.070528,3.404080],[-5.600471,-9.732124,9.196567],[3.315525,-0.411143,6.398705],[1.995291,-0.990602,1.477807],[-6.272466,-9.824803,-7.807280],[-2.959343,-1.810676,2.463728],[0.508120,-0.443827,-8.808616],[8.792297,3.862779,2.591515],[-1.864894,1.804118,-4.039218],[-4.379919,3.225728,-3.425603],[2.589555,-6.663779,1.355737],[4.425110,7.215446,-1.463274],[6.663329,-7.388616,2.513166],[-7.084896,-1.882585,-5.165761],[-2.553876,9.199594,0.481221],[8.531509,7.402798,-0.435143],[5.339088,2.986378,-8.540108],[2.332205,5.131314,-8.660286],[0.353366,-2.895931,-2.808542],[2.114459,7.781293,2.526823],[-0.298023,3.705610,-7.098290],[4.073872,8.249891,-9.073522],[-1.796642,-8.741480,7.846094],[0.230466,8.852097,5.887829],[-7.762887,-5.909066,9.797592],[3.412770,8.842597,1.028188],[-9.106213,5.432253,6.079683],[4.675651,1.383476,-1.516397],[-4.135271,-3.988572,8.165978],[-6.793780,-9.908041,-3.986852],[-5.754871,6.155262,-4.293047],[4.939618,2.761117,4.181538],[-1.862820,2.015748,-2.884507],[6.877119,3.722584,-6.914879],[3.423207,-5.352547,7.140593],[1.533808,-2.072687,0.378685],[-9.770483,-1.061182,-9.694574],[-2.684757,-3.091269,-7.411810],[1.419977,-8.084587,8.057842],[-1.004838,4.954977,-2.009743],[3.172449,-3.900631,2.333926],[-4.362321,-4.808736,8.016910],[-6.517703,0.668426,0.774101],[5.882691,2.257779,7.688055],[-1.416941,1.773937,8.408331],[5.062027,-8.310080,-5.777091],[2.347273,2.875013,5.111485],[-6.375675,-3.211984,8.579505],[-6.102950,2.018481,-9.855186],[-2.203748,-4.049902,-0.309530],[-2.510445,-8.352771,5.665211],[-2.283550,7.123591,-5.435619],[-0.927459,1.408498,-5.232333],[7.706531,2.817406,4.425157],[4.602532,4.922535,6.574071],[5.755257,0.151043,-0.708141],[6.258873,5.704785,-6.979053],[0.526816,7.588629,-3.045503],[9.831733,-1.867268,-0.220728],[-4.090893,1.765069,6.682993],[7.255992,-6.513994,-9.239073],[7.651626,8.933307,-5.332300],[-1.171606,8.316006,-4.252554],[-0.041644,8.411670,4.000048],[-2.413674,5.120227,0.668549],[-8.221598,-7.746038,6.246895],[-5.157392,-9.909536,8.338124],[1.520696,-1.386947,4.926255],[-7.812902,1.117455,-0.919135],[9.054749,-2.569691,6.867911],[7.447881,2.552884,-5.272246],[-3.839892,0.146466,7.256945],[-0.141461,1.124265,6.383655],[5.649096,-6.173569,3.128434],[9.246317,5.406539,1.160230],[7.569691,-4.181776,-9.691873],[2.497703,9.652883,2.954873],[-0.589431,-9.843926,6.376816],[-9.118977,2.867060,3.139376],[-0.673617,-4.270583,-4.509104],[-0.398343,-1.642939,-7.345787],[7.261625,-5.369640,9.085751],[1.218657,5.310822,5.199726],[8.733768,3.833232,-0.224608],[2.703207,-7.829800,-9.054230],[-4.896570,-5.838031,6.440614],[6.336351,4.860566,-2.113497],[-2.518763,-1.853755,6.465634],[-7.030636,3.763479,3.465476],[-3.137440,-4.411553,-2.361950],[7.665425,0.749252,-1.469738],[7.538037,-9.443363,4.207783],[0.520226,-0.860119,3.085620],[7.432071,6.608681,5.708912],[-8.001389,0.929197,-6.491442],[3.452473,-6.208787,-0.394712],[7.730331,7.067029,-7.223215],[-0.625101,-8.695111,9.474083],[-3.577724,5.755117,7.539378],[6.957232,-5.473959,1.385014],[-1.533586,-1.590981,3.684113],[1.907094,-4.032707,-7.613033],[1.644792,-4.396016,-4.029356],[5.625971,-5.822486,-6.517326],[-4.191417,6.476421,-8.441060],[9.814762,8.829258,-9.528451],[-9.684809,-3.104808,-8.143453],[0.739002,2.908380,9.795508],[1.969424,0.724190,3.442128],[-9.454808,1.905120,-6.592968],[-3.236917,-1.309634,2.647871],[-0.265434,6.128240,8.935289],[-0.269536,5.304063,-6.424505],[1.729934,-9.544854,-3.428155],[-5.088075,0.869177,-6.099762],[6.350025,0.043092,2.040499],[-8.686015,8.758232,-0.719016],[9.779042,8.227289,-2.803164],[6.600142,-9.845420,-6.309333],[1.295500,9.634569,-7.807894],[-8.778634,-0.910638,-5.682771],[4.628923,7.427120,-2.148918],[4.904335,-0.250722,-2.840182],[-7.044907,-7.825338,4.323756],[2.175185,8.985037,2.424628],[2.931352,-7.238805,-2.065144],[6.497863,5.906497,-6.507513],[-9.768668,-7.043576,-5.953194],[2.670125,-9.257416,4.624117],[3.079538,8.451225,7.710705],[-2.099943,-7.212072,-5.818249],[4.219861,-9.669309,5.020031],[-3.938840,-4.403478,-5.266974],[-7.898013,-4.075872,-2.892012],[-6.032560,-1.266733,-9.834582],[8.399955,-1.061150,0.475000],[-0.370088,-7.110573,-3.950999],[0.556974,0.781447,2.697821],[-9.037396,-9.504553,-2.198170],[9.941800,-2.278923,-0.853454],[6.263498,6.254260,-7.598220],[6.295515,-6.124400,4.385845],[0.989063,0.860471,7.084147],[-3.927870,-3.480675,-3.000313],[1.789189,-2.590951,2.727169],[5.445690,-2.018711,7.909617],[3.068857,1.909762,-7.146770],[-4.669207,9.439694,6.914053],[-5.886418,-2.323445,-9.037905],[-9.690320,-2.926044,1.097212],[4.711937,5.327387,8.999430],[-5.249263,9.310333,-4.187362],[5.437316,9.522535,7.695501],[7.529536,-0.535995,-4.208835],[-8.934633,1.619377,5.221838],[-6.267890,2.526125,-2.350888],[-1.796570,1.254114,-7.015663],[-4.843185,0.382242,-4.898747],[-4.520864,-3.556414,-2.060853],[0.483044,2.683201,2.225129],[7.842455,-7.382771,3.862133],[3.290115,2.623406,8.086336],[8.694352,2.120037,3.990417],[7.004300,4.195002,5.325244],[-6.501506,-3.493617,7.892819],[8.680034,-2.829783,9.785893],[-5.116810,9.091354,2.737230],[-7.033660,-4.792653,1.057836],[1.272153,7.606466,6.907719],[-3.671008,9.983165,7.076582]], dtype = "float32")#candidate|7501|(715, 3)|const|float32
call_7500 = relay.TupleGetItem(func_5353_call(relay.reshape(const_7501.astype('float32'), [2145,])), 2)
call_7502 = relay.TupleGetItem(func_5355_call(relay.reshape(const_7501.astype('float32'), [2145,])), 2)
func_5550_call = mod.get_global_var('func_5550')
func_5552_call = mutated_mod.get_global_var('func_5552')
const_7504 = relay.const([5.493333,-3.312635,-4.534068,9.807226,-3.660146,-8.742253,-1.047316,-2.152688,7.922968,1.370022,-2.056167,7.211708,-6.058061,-7.548134,7.264123,4.257956,6.944284,-8.674505,-5.695822,5.508409,-0.805289,2.923928,4.160569,-3.144405,7.245415,-6.104089,-4.438780,-1.808957,1.400645,-3.911502,2.566940,1.795111,7.505250,-7.215686,-3.184934,4.297272,3.643926,0.679922,-3.014931,5.688490,7.391637,-8.381090,-4.940206,6.029183,9.487312,-7.956125,6.301447,8.040081,7.440015,-5.902188,-3.694263,-2.102919,-3.813795,-0.868138,8.772883,9.409323,6.131807,-9.704547,-1.013949,-3.023492,-8.248468,-8.256127,-4.311068,-5.404542,7.335201,5.594655,-1.780457,4.280453,5.749473,-5.647397,4.151320,-9.016876,5.106874,-9.862616,-6.365619,4.885165,6.258288,-1.169973,-6.220327,7.331582,0.159156,5.413841,9.284822,2.308144,-6.198435,2.316649,6.028720,4.588040,3.788522,-0.465129,-7.211978,-7.335581,1.060062,1.568125,8.300679,4.157631,-7.755037,2.601748,4.473819,-0.063390,-1.762304,5.160730,5.664230,-9.440386,0.637318,-9.566057,-5.338887,4.436239,7.232982,0.494467,-8.985167,-3.631455,3.516379,-6.779008,-8.070105,0.675187,-2.332115,-5.331990,4.203996,-7.569806,7.257853,-7.513090,3.688558,7.777002,-7.713070,-7.625227,2.712433,7.621245,-9.520615,4.936134,0.918516,6.959729,9.300140,9.419626,-2.883018,7.185189,2.494903,6.721496,-5.967036,7.249363,-5.494196,0.505862,-2.645056,-1.037537,-0.210620,2.372482,-5.760317,3.969934,-7.359299,-7.515427,3.330028,-0.775999,8.307671,0.161375,-4.246391,5.523950,-1.874593,-7.038644,9.417512,2.676453,-4.936970,3.915569,2.100614,1.702303,-3.833159,-8.727082,3.987813,-4.327855,9.566848,-7.788477,-4.062241,-0.666195,-5.766032,-7.116763,6.161702,0.572749,-2.721044,4.953030,-5.512413,-0.618204,-1.812467,-5.025668,4.491293,2.025874,-7.345682,9.575082,7.618088,-3.531431,-0.835253,4.366621,-4.437493,-3.311323,-4.821577,3.090376,-5.570985,7.189436,-2.926603,-8.199241,-9.052705,-6.789442,-1.347757,6.709285,2.689384,3.948573,-9.675630,-4.589710,-5.475091,-6.088798,-4.239059,7.435865,8.349901,0.543226,-2.007591,6.807955,8.448251,9.165347,4.807403,8.268433,-4.817918,7.948815,-8.461940,-3.724274,-0.757480,7.297039,-9.576377,4.987940,1.312319,7.170198,-0.894464,-8.013357,8.905422,2.503940,-7.872540,4.053702,-9.094318,-5.986575,-9.967993,7.278489,8.824991,9.155915,9.878330,8.343813,-8.459158,-0.710616,8.549646,-6.644705,-0.250964,-6.910496,1.935981,-0.365461,-6.507640,-5.205825,7.666294,7.141780,-4.411037,-3.763787,6.437119,-1.227546,-5.875038,-4.005380,6.937127,-4.993762,6.781549,-9.246391,0.776898,-4.760434,1.373315,-4.172766,-8.728603,5.601485,1.763805,-2.102751,9.513751,-4.564327,1.399759,-4.202272,3.632779,-9.202329,4.630960,1.350901,2.881288,-4.415412,-7.091164,8.076570,-9.011776,2.036097,-7.139977,-3.127860,-2.841974,-7.679451,4.344116,-6.076203,6.515143,7.789061,-3.273424,1.400532,-4.958902,-6.799948,6.851818,4.793979,3.625041,9.548834,-9.834105,0.147681,-3.183539,-4.267533,-7.994038,-3.283636,-9.219400,-8.091582,6.116299,-4.708788,6.171219,-5.964758,5.093287,-5.657446,2.492628,-7.295467,2.021419,-3.864740,0.880223,-2.095979,-4.010094,-7.230927,-3.071430,0.933879,-9.636958,-0.350080,-5.524987,-0.487033,-1.392748,-1.969904,-4.220792,-9.418592,0.654260,2.626964,4.546689,-9.674618,5.820386,-0.705309,-9.016398,4.115892,-4.341257,-4.493128,-3.719053,-6.768985,-2.757889,-7.480679,0.324737,-5.961222,-2.152350,-8.787830,3.901655,8.101409,8.318192,3.465964,3.777463,-7.539680,-1.091216,-6.317620,-6.173803,3.522681,-0.523169,6.934024,-8.076541,-5.207489,-1.226331,0.342900,9.819208,-4.470895,-6.711873,-7.641666,-8.040165,4.348356,-6.329045,1.258497,-3.879161,5.547407,3.061714,5.403955,-1.862450,-0.227166,-9.310176,9.618464,-4.197001,-3.632719,6.509827,-5.375249,7.030226,-4.596036,8.947966,-6.806316,-2.146310,-0.803503,2.564656,-1.764522,2.916498,-6.275708,-5.492247,-1.266667,9.339200,3.651995,2.186151,-8.039091,-5.452201,-2.265895,-4.817959,0.983903,-0.293853,-4.425361,5.836917,-6.506886,8.740931,-0.491009,-3.632903,-8.431789,4.126791,-8.899107,6.979980,-0.331677,5.912744,-6.338150,2.154056,-7.005030,0.567468,6.482777,5.741364,-6.529397,-4.805005,-1.839091,1.741844,-2.182986,3.107607,5.895623,6.653470,-1.031417,1.355782,3.899962,-5.864466,-5.555526,-0.610453,4.610929,0.692496,5.249993,-0.442150,-1.981571,-9.990111,5.161978,8.768913,1.437303,-3.463474,8.225357,-6.561770,-7.416399,3.977580,-9.518773,6.016342,4.271325,4.829925,-3.316355,9.037072,0.359771,-7.085310,6.906156,-0.254678,-7.729192,-8.077302,-1.197814,-9.828369,7.732964,8.441561,-4.571892,0.030328,-4.817472,-1.128332,5.351505,5.688982,3.848238,4.035783,-6.273292,2.294746,-9.570230,-7.525818,-5.112139,6.366369,-8.839343,-3.358723,5.934680,1.359238,-4.194128,6.651306,4.991660,1.616237,-4.988618,0.438313,-1.227278,0.120370,-3.480248,7.117814,1.271350,-9.032632,7.299690,-9.521950,3.017518], dtype = "float64")#candidate|7504|(504,)|const|float64
call_7503 = relay.TupleGetItem(func_5550_call(relay.reshape(const_7504.astype('float64'), [504,])), 3)
call_7505 = relay.TupleGetItem(func_5552_call(relay.reshape(const_7504.astype('float64'), [504,])), 3)
output = relay.Tuple([call_7496,call_7500,const_7501,call_7503,const_7504,])
output2 = relay.Tuple([call_7497,call_7502,const_7501,call_7505,const_7504,])
func_7506 = relay.Function([], output)
mod['func_7506'] = func_7506
mod = relay.transform.InferType()(mod)
mutated_mod['func_7506'] = func_7506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7506_call = mutated_mod.get_global_var('func_7506')
call_7507 = func_7506_call()
output = call_7507
func_7508 = relay.Function([], output)
mutated_mod['func_7508'] = func_7508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3079_call = mod.get_global_var('func_3079')
func_3080_call = mutated_mod.get_global_var('func_3080')
call_7529 = relay.TupleGetItem(func_3079_call(), 0)
call_7530 = relay.TupleGetItem(func_3080_call(), 0)
func_4471_call = mod.get_global_var('func_4471')
func_4473_call = mutated_mod.get_global_var('func_4473')
call_7556 = relay.TupleGetItem(func_4471_call(), 0)
call_7557 = relay.TupleGetItem(func_4473_call(), 0)
output = relay.Tuple([call_7529,call_7556,])
output2 = relay.Tuple([call_7530,call_7557,])
func_7569 = relay.Function([], output)
mod['func_7569'] = func_7569
mod = relay.transform.InferType()(mod)
output = func_7569()
func_7570 = relay.Function([], output)
mutated_mod['func_7570'] = func_7570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5226_call = mod.get_global_var('func_5226')
func_5228_call = mutated_mod.get_global_var('func_5228')
call_7593 = func_5226_call()
call_7594 = func_5226_call()
const_7600 = relay.const([[9,-1,6,9,-1,-6,-1,-7,-8,-3,4,-9,-2,3,3,-7,1,3,2,-1,5,7,10,4,-3,-6,-6,-1,8,-8,9,-3,-3,-8,-8,-7],[-4,-10,-10,-6,-1,10,-7,-8,7,6,-1,-8,7,9,-5,-8,-3,-5,5,6,4,-7,-8,-8,1,3,-6,8,7,7,-6,-10,7,1,-9,-10],[-4,-7,-2,-9,10,-4,-3,10,-2,1,-5,-6,-10,-6,6,5,-5,-6,7,9,-7,6,7,-1,4,-6,7,-1,1,-6,-3,10,-3,-4,-2,-10],[10,-1,3,-6,4,-3,-6,-7,-2,-5,-6,-3,-1,-9,-2,2,-6,-8,2,5,-8,8,3,-10,-2,9,9,-7,9,-1,-7,-10,5,4,-2,7]], dtype = "int64")#candidate|7600|(4, 36)|const|int64
bop_7601 = relay.equal(call_7593.astype('bool'), relay.reshape(const_7600.astype('bool'), relay.shape_of(call_7593))) # shape=(4, 36)
bop_7604 = relay.equal(call_7594.astype('bool'), relay.reshape(const_7600.astype('bool'), relay.shape_of(call_7594))) # shape=(4, 36)
const_7606 = relay.const([[9,-9,3,-1,-3,3,-3,2,1,9,6,-5,-1,2,-10,-1,10,10,-5,-8,7,8,10,-1,-7,-4,-8,10,9,-7,8,9,-7,5,1,-2],[5,-8,7,-7,-2,1,-1,3,4,2,-7,2,-2,-8,10,-1,2,-9,9,-7,-8,-4,9,10,7,-5,-3,-10,4,7,-2,9,8,-4,6,1],[-8,-5,-2,8,7,4,10,6,-6,10,-3,-1,-6,7,4,8,-3,-7,-7,4,10,-5,-4,4,8,-7,2,-10,-2,-2,7,10,-2,4,-4,3],[-6,4,-3,-1,4,-10,7,9,-8,-8,3,-2,-7,-4,5,-4,-10,-3,9,-2,4,-1,1,-4,3,4,2,-2,-4,-9,-6,10,-1,6,6,5]], dtype = "int64")#candidate|7606|(4, 36)|const|int64
bop_7607 = relay.divide(const_7600.astype('float32'), relay.reshape(const_7606.astype('float32'), relay.shape_of(const_7600))) # shape=(4, 36)
func_5590_call = mod.get_global_var('func_5590')
func_5593_call = mutated_mod.get_global_var('func_5593')
const_7611 = relay.const([[4.258682,-3.051058,2.223338,-6.694951,-3.525123,-5.973183,-1.835813,7.065247,1.735130,-6.785270,-6.111122,2.247154,8.992378,9.732095,-1.204574,-0.197401,1.743163,9.185128,9.515876,8.815389,2.084513,4.642184,8.673170,8.573419,7.685674,-8.757666,-9.031841,3.733061,-9.103069,6.423350,7.423317,-0.802725,-4.174194,1.872310,2.064199,7.674725,-1.535154,2.003349,5.948523,-2.228824,-1.256405,0.093428,-4.550723,-3.315817,8.072978,1.590490,-9.195631,-2.071726,6.304262,-7.850069,-8.881418,-4.559035,-6.254622,-2.351535,-2.549354,9.492254,9.537486,3.070350,4.706927,9.157086],[9.436730,9.726570,-2.123329,-8.506733,1.730572,6.509032,-2.745561,-5.658591,9.333209,6.400833,5.366802,-6.138639,1.665359,-6.886734,4.894445,3.906521,5.302131,-9.176221,-0.499603,6.917919,-3.038388,8.567793,-4.927899,4.600740,6.782621,-6.766299,6.180190,8.712029,-1.815238,-1.224653,5.409432,2.765146,-3.512375,5.839903,-0.454614,5.145425,3.549207,-1.943796,-0.017544,7.816735,-4.179494,3.474529,-5.295710,-5.944603,-8.088612,-1.442768,-1.563743,-0.660667,-3.265263,-2.063847,9.768522,8.485101,-0.066823,-4.851594,2.931609,-2.231502,1.107607,-1.742392,3.603323,1.896276],[5.521205,1.924714,7.610283,-6.618413,9.933508,-2.760158,-6.386923,9.536350,7.680268,-2.150377,9.689565,-5.828124,-3.103177,-2.853208,4.733644,8.925744,-4.774756,7.174682,3.824549,4.654212,-2.839519,9.768592,5.598700,8.368834,-7.966434,6.679164,7.502327,5.224885,-5.812521,2.107624,8.349986,-3.359720,4.589725,2.177134,-7.857956,-0.227428,-1.959646,4.308378,-6.764987,5.766725,-2.469724,1.428109,-2.625749,1.532272,-4.270877,6.559886,-7.811551,8.182175,1.585114,-6.341967,0.378841,-7.254956,-9.421889,5.903820,-2.973936,9.424481,-6.475864,-7.422264,3.586337,8.119827],[-4.715684,0.889913,9.149442,5.490167,4.396604,-8.646734,-8.752599,7.809946,-0.970561,5.751638,7.967113,-1.741092,2.665078,-3.940317,-3.013358,5.946073,-8.772988,9.019582,5.142135,-6.253145,-4.786444,-2.963240,6.331195,0.360552,-2.241544,3.406636,-5.865816,4.750959,-8.370563,-0.265603,-1.229064,-8.648491,9.159524,-2.819489,-8.407657,7.113404,4.367877,0.374953,7.481094,-5.043778,8.149677,9.761021,3.638758,-7.145494,9.448517,6.110985,-3.745613,-2.300395,9.102752,-6.061696,-5.534697,0.601929,4.066850,-6.447972,7.140096,0.621677,-0.309786,-5.752816,8.439144,-4.287936]], dtype = "float64")#candidate|7611|(4, 60)|const|float64
call_7610 = func_5590_call(relay.reshape(const_7611.astype('float64'), [10, 12, 2]))
call_7612 = func_5590_call(relay.reshape(const_7611.astype('float64'), [10, 12, 2]))
uop_7617 = relay.log2(const_7600.astype('float32')) # shape=(4, 36)
output = relay.Tuple([bop_7601,bop_7607,call_7610,const_7611,uop_7617,])
output2 = relay.Tuple([bop_7604,bop_7607,call_7612,const_7611,uop_7617,])
func_7619 = relay.Function([], output)
mod['func_7619'] = func_7619
mod = relay.transform.InferType()(mod)
output = func_7619()
func_7620 = relay.Function([], output)
mutated_mod['func_7620'] = func_7620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4446_call = mod.get_global_var('func_4446')
func_4447_call = mutated_mod.get_global_var('func_4447')
call_7628 = relay.TupleGetItem(func_4446_call(), 0)
call_7629 = relay.TupleGetItem(func_4447_call(), 0)
output = call_7628
output2 = call_7629
func_7638 = relay.Function([], output)
mod['func_7638'] = func_7638
mod = relay.transform.InferType()(mod)
mutated_mod['func_7638'] = func_7638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7638_call = mutated_mod.get_global_var('func_7638')
call_7639 = func_7638_call()
output = call_7639
func_7640 = relay.Function([], output)
mutated_mod['func_7640'] = func_7640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5094_call = mod.get_global_var('func_5094')
func_5096_call = mutated_mod.get_global_var('func_5096')
call_7652 = relay.TupleGetItem(func_5094_call(), 0)
call_7653 = relay.TupleGetItem(func_5096_call(), 0)
func_2715_call = mod.get_global_var('func_2715')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_7654 = relay.TupleGetItem(func_2715_call(), 0)
call_7655 = relay.TupleGetItem(func_2717_call(), 0)
output = relay.Tuple([call_7652,call_7654,])
output2 = relay.Tuple([call_7653,call_7655,])
func_7682 = relay.Function([], output)
mod['func_7682'] = func_7682
mod = relay.transform.InferType()(mod)
output = func_7682()
func_7683 = relay.Function([], output)
mutated_mod['func_7683'] = func_7683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4430_call = mod.get_global_var('func_4430')
func_4432_call = mutated_mod.get_global_var('func_4432')
call_7720 = relay.TupleGetItem(func_4430_call(), 1)
call_7721 = relay.TupleGetItem(func_4432_call(), 1)
output = relay.Tuple([call_7720,])
output2 = relay.Tuple([call_7721,])
func_7723 = relay.Function([], output)
mod['func_7723'] = func_7723
mod = relay.transform.InferType()(mod)
mutated_mod['func_7723'] = func_7723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7723_call = mutated_mod.get_global_var('func_7723')
call_7724 = func_7723_call()
output = call_7724
func_7725 = relay.Function([], output)
mutated_mod['func_7725'] = func_7725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3290_call = mod.get_global_var('func_3290')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_7733 = func_3290_call()
call_7734 = func_3290_call()
output = call_7733
output2 = call_7734
func_7735 = relay.Function([], output)
mod['func_7735'] = func_7735
mod = relay.transform.InferType()(mod)
output = func_7735()
func_7736 = relay.Function([], output)
mutated_mod['func_7736'] = func_7736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5745_call = mod.get_global_var('func_5745')
func_5746_call = mutated_mod.get_global_var('func_5746')
call_7771 = relay.TupleGetItem(func_5745_call(), 0)
call_7772 = relay.TupleGetItem(func_5746_call(), 0)
output = relay.Tuple([call_7771,])
output2 = relay.Tuple([call_7772,])
func_7776 = relay.Function([], output)
mod['func_7776'] = func_7776
mod = relay.transform.InferType()(mod)
output = func_7776()
func_7777 = relay.Function([], output)
mutated_mod['func_7777'] = func_7777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3407_call = mod.get_global_var('func_3407')
func_3408_call = mutated_mod.get_global_var('func_3408')
call_7836 = func_3407_call()
call_7837 = func_3407_call()
output = relay.Tuple([call_7836,])
output2 = relay.Tuple([call_7837,])
func_7859 = relay.Function([], output)
mod['func_7859'] = func_7859
mod = relay.transform.InferType()(mod)
mutated_mod['func_7859'] = func_7859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7859_call = mutated_mod.get_global_var('func_7859')
call_7860 = func_7859_call()
output = call_7860
func_7861 = relay.Function([], output)
mutated_mod['func_7861'] = func_7861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4430_call = mod.get_global_var('func_4430')
func_4432_call = mutated_mod.get_global_var('func_4432')
call_7867 = relay.TupleGetItem(func_4430_call(), 1)
call_7868 = relay.TupleGetItem(func_4432_call(), 1)
func_3600_call = mod.get_global_var('func_3600')
func_3602_call = mutated_mod.get_global_var('func_3602')
call_7872 = relay.TupleGetItem(func_3600_call(), 2)
call_7873 = relay.TupleGetItem(func_3602_call(), 2)
output = relay.Tuple([call_7867,call_7872,])
output2 = relay.Tuple([call_7868,call_7873,])
func_7874 = relay.Function([], output)
mod['func_7874'] = func_7874
mod = relay.transform.InferType()(mod)
mutated_mod['func_7874'] = func_7874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mutated_mod.get_global_var('func_7874')
call_7875 = func_7874_call()
output = call_7875
func_7876 = relay.Function([], output)
mutated_mod['func_7876'] = func_7876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mod.get_global_var('func_7874')
func_7876_call = mutated_mod.get_global_var('func_7876')
call_7893 = relay.TupleGetItem(func_7874_call(), 1)
call_7894 = relay.TupleGetItem(func_7876_call(), 1)
output = relay.Tuple([call_7893,])
output2 = relay.Tuple([call_7894,])
func_7895 = relay.Function([], output)
mod['func_7895'] = func_7895
mod = relay.transform.InferType()(mod)
output = func_7895()
func_7896 = relay.Function([], output)
mutated_mod['func_7896'] = func_7896
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7935 = relay.var("var_7935", dtype = "float32", shape = (1, 10, 11))#candidate|7935|(1, 10, 11)|var|float32
uop_7936 = relay.log(var_7935.astype('float32')) # shape=(1, 10, 11)
bop_7943 = relay.maximum(var_7935.astype('uint32'), relay.reshape(uop_7936.astype('uint32'), relay.shape_of(var_7935))) # shape=(1, 10, 11)
output = bop_7943
output2 = bop_7943
func_7947 = relay.Function([var_7935,], output)
mod['func_7947'] = func_7947
mod = relay.transform.InferType()(mod)
var_7948 = relay.var("var_7948", dtype = "float32", shape = (1, 10, 11))#candidate|7948|(1, 10, 11)|var|float32
output = func_7947(var_7948)
func_7949 = relay.Function([var_7948], output)
mutated_mod['func_7949'] = func_7949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6426_call = mod.get_global_var('func_6426')
func_6428_call = mutated_mod.get_global_var('func_6428')
call_7992 = relay.TupleGetItem(func_6426_call(), 0)
call_7993 = relay.TupleGetItem(func_6428_call(), 0)
func_2939_call = mod.get_global_var('func_2939')
func_2942_call = mutated_mod.get_global_var('func_2942')
const_8002 = relay.const([-2.727100,-2.401895,5.688729,2.821197,-5.764708,5.021437,-9.611013,-3.090894,1.969884,-9.187807,0.459117,-5.005742,-5.609637,2.121105,5.038532,-1.409702,7.393577,0.612629,4.086262,9.444958,-1.245673,8.224406,-3.506250,-1.512229,0.988570,8.584219,-9.487878,6.768094,-3.661267,-0.029011,-3.830700,8.103002,-9.821793,-6.171518,2.806339,5.170500,-8.395892,2.931844,-0.789803,-3.069924,-1.768400,-0.460488,8.268587,0.054329,5.565681,9.495282,-6.264129,8.947971,1.296058,-2.205927,8.511364,4.820822,-4.990510,7.819554,-1.630637,6.683534,1.840702,0.750428,3.910769,-2.786031,-3.412417,-2.821947,-6.792775,6.283456,7.447549,0.051689,-2.562839,-7.681171,2.117999,1.186003,-7.236143,-8.018877,1.088562,-0.166763,3.081815,4.225786,4.062781,-5.120782,4.670200,6.868179,-6.569104,7.360330,4.768757,7.696057,8.459948,-2.809230,9.784285,2.799814,-9.130477,-5.087298,-0.978053,-0.302193,8.028435,-2.710892,-2.583452,-2.460848,-2.679080,0.658993,7.065413,-7.268231,-8.628322,-7.457724,7.648968,-7.507868,-2.802812,7.954033,-5.635929,-3.768008,9.702561,-3.328526,-3.369134,-6.176159,-0.226229,9.821752,-5.580619,3.535180,-7.175868,0.807297,7.236382,-2.871316,-3.792754,3.346458,4.625359,-9.287177,-6.724948,-8.931526,8.200078,3.053185,9.421151,-9.356573,-7.173932,-4.275643,3.439048,-7.978592,6.935337,-6.115872,8.406671,-5.472771,1.172762,6.886374,8.339222,0.131059,-8.851016,-0.180229,9.737769,9.064762,-0.163450,-5.311866,9.148253,4.077248,4.850642,-1.466695,6.255289,4.676390,-3.071993,-7.451428,4.573503,-3.607571,-1.390917,8.422921,3.817451,2.324218,-6.665404,-8.016930,-2.359685,-5.085603,0.820537,-3.461316,7.543479,-9.294210,-8.072580,7.114684,-9.791089,4.831910,-2.604992,-8.465541,-3.251218,-2.872447,5.962595,-6.331274,-7.574748,-8.613251,-8.711333,-7.212080,-8.078017,0.777318,8.999580,-3.245591,-7.869141,-4.450123,-5.386110,8.852622,-7.990119,3.584540,-9.067982,0.456785,-0.612833,-4.397965,3.772650,-1.053551,4.915876,-2.038008,-1.686274,-7.302303,6.999054,-4.192473,4.562954,-8.843235,9.954968,-6.761663,4.940389,-2.020004,4.207188,-2.266240,0.457664,-5.961803,-0.956480,2.271410,-6.826669,-4.449544,-3.576785,7.633041,-4.496735,7.131881,-2.664796,9.953873,1.714083,8.992505,-4.585831,2.227685,8.184172,1.700032,0.301351,-9.042139,-8.888338,5.368089,5.543585,8.198803,-7.243836,4.094568,-7.640244,-2.289490,-6.176768,-1.874416,-3.099636,-9.149408,2.522500,8.302075,-0.894009,-4.572168,-6.054699,4.411035,8.937248,0.869541,2.955036,-7.723578,6.069679,-9.952844,-1.773301,1.215743,-9.685316,-3.214762,5.582751,-9.576159,-7.487388,-7.457023,-2.546100,-2.109727,-3.003749,4.923690,3.317570,6.525276,7.947921,-0.950983,-6.613149,-5.310084,-1.186473,1.800066,-3.149777,4.634905,-2.466336,-8.287301,-8.550738,-6.709473,-0.523443,-2.712899,8.929891,5.713175,4.291885,5.668005,6.171145,1.374469,-4.516260,9.849025,-7.099648,5.541784,-9.502133,-3.669988,8.556736,-7.907229,-0.376189,8.871435,-4.776292,-1.989502,-3.796400,-4.415561,3.702579,5.905136,-2.123001,5.192306,-5.949721,2.467294,-0.377746,0.748420,0.580154,4.088815,-8.143728,3.391998,1.311941,1.393000,2.215263,7.269262,7.110887,0.441316,2.708103,-9.740772,2.266429,5.129371,7.263793,7.586958,-7.540886,7.793052,6.431304,9.720623,-1.897156,7.796421,-1.877920,6.144428,8.169601,0.802835,5.865648,-9.366055,-4.169035,-9.742355,-5.941948,-2.315290,-4.069576,-7.071821,-1.330176,8.307580,-0.952905,7.336755,6.271260,-4.611264,2.525566,-6.706918,7.225842,1.723771,-2.725609,-7.862121,-0.597635,3.087960,-1.555004,-1.947730,5.797468,7.295574,-2.246003,7.590614,6.057351,0.669560,3.298907,8.949623,-9.179477,-2.695590,-0.434064,-2.313262,7.456266,-7.963902,0.187276,8.132402,-6.316875,-2.019917,6.367649,-0.738052,2.557293,3.239297,9.117310,9.087738,4.881244,-4.013384,-3.555854,-4.246610,-1.930313,4.669856,-8.703675,2.989357,-8.197110,8.525328,4.756640,-9.843136,3.985922,5.239309,8.367704,6.316185,3.345990,-0.465273,-3.248293,8.764705,2.567058,-2.800998,4.626951,-9.542162,7.322386,4.448339,-2.993501,6.854306,1.170381,-7.290397,7.964476,-1.756712,-4.857077,6.908764,2.459215,9.957263,9.537152,-7.905164,2.832278,-1.017050,8.297900,5.312818,-6.690335,7.381373,-7.507131,-8.787932,0.005111,-6.453028,3.489651,-7.012940,-1.957358,-3.289877,5.449975,8.481453,7.493761,3.427820,6.673708,-7.444183,9.285280,-2.384053,-5.066791,-5.613654,8.992186,1.467240,-0.231411,7.648647,3.285336,-6.793951,4.064072,-1.302865,-3.939604,5.562818,-4.336600,9.144071,2.125994,0.034818,-0.336532,-7.645132,-3.158612,-1.191207,3.682041,-1.357780,4.341270,-1.087471,-7.489098,-7.639263,-9.165132,-1.075408,1.958020,9.026837,3.862710,-0.736266,-7.792415,6.489781,-6.757901,9.993539,-3.553593,1.465417,-9.196964,-2.885456,-2.205531,7.924471,-8.517109,6.526986,9.681830,-7.745713,-7.209884,-8.181351,2.794609,9.392402,-4.269637,-3.756484,-2.895446,-2.722577,2.504455,5.863384,0.923993,-1.942279,4.115221,-6.499997,-4.390121,4.366172,1.116992,6.144786,-4.002158,3.487284,4.191192,0.056601,8.115703,0.951801,-9.010484,-2.744942,4.449742,2.989578,-1.715016,-5.065396,-4.232011,6.313839,6.703706,9.957494,-9.323849,-3.116653,-3.613720,6.163948,-1.705503,-7.732946,-3.457126,-1.111108,9.259993,-5.568250,1.677589,6.681450,-9.299283,-7.880016,3.815829,8.709127,-8.916428,-7.463737,6.509831,-7.945504,-7.235124,-5.763328,3.398933,-1.523591,-4.558278,-9.731250,8.800296,-8.535488,4.203262,-1.503699,-1.084586,-6.849929,1.775812,5.149539,-0.706748,-6.857913,-3.531700,7.032692,-9.006180,-1.027511,-4.443475,-9.942524,-5.008683,-0.192856,8.110812,3.597125,-6.046727,-7.438556,-5.806014,6.564213,2.690503,6.383520,-9.784703,1.114819,-9.456664,-1.938551,7.378848,8.908021,7.937922,1.111232,-0.982090,-0.546872,-6.123664,-3.724859,-8.584885,2.193124,-7.857345,6.020218,-3.476461,1.152856,-4.001468,2.861663,-2.788384,-1.950615,-2.450147,3.076909,-7.659290,-4.960010,-9.944795,3.989962,-3.428011,1.929399,2.720549,6.741324,5.247126,-5.629440,-0.107497,3.968013,-6.549171,-8.879931,7.744044,3.516349,0.154303,-5.073409,6.735632,-3.900616,9.088205,-7.827055,-8.943298,-8.178761,-0.584415,-8.157188,-8.309117,2.414736,2.718216,-2.881205,3.395825,-4.981685,7.462913,7.866081,-9.601470,-5.373792,7.879033,-2.145762,-2.757663,9.866597,0.527213,-6.460754,-2.195845,7.420281,3.844651,-2.541553,5.578346,-8.136219,-7.417685,1.884306,0.286814,-2.568726,-3.215496,7.835828,9.675919,8.966149,-8.262000,-3.808344,-5.770516,-3.511484,7.794847,-6.689774,0.806934,0.003200,-2.047008,-3.719332,-2.077319,-0.488212,5.724592,-4.565609,8.650330,6.310594,6.872458,-8.083949,2.289762,3.523404,6.059807,-5.610308,-4.773616,-9.791037,-2.694315,7.465163,4.778792,-0.825990,5.326837,3.079061,-1.811564,-0.715416,8.156501,4.272640,3.553745,7.636387,1.251526,7.997204,-3.208279,-8.996988,-8.811284,2.007036,-7.844313,-1.461999,-6.167118,-3.698479,-1.914059,-8.164661,3.986979,7.128795,6.499473,6.220409,-5.815940,-3.553578,6.348294,1.631058,-3.219502,1.916580,-5.912790,-1.962073,-7.109806,-5.563628,1.414217,-5.883552,-2.409110,1.627238,-3.824806,-7.820707,7.053088,6.558699,-7.951011,-0.462447,-4.385707,2.169187,5.195147,0.658858,-8.150667,0.195696,1.258305,-2.250154,7.981645,8.139483,-1.155276,-6.802725,-2.526723,-7.569309,-8.180523,-2.631883,4.908404,-8.494380,0.356081,-2.584781,7.557511,-1.147644,8.288244,-6.871470,-0.427512,-5.722490,-7.192204,2.238424,7.560576,4.236597,-7.125558,-6.473176,1.544167,3.143679,-6.417432,-7.720048,0.338042,-4.232985,4.753615,2.478748,-0.644633,-7.685870,-3.022155,-6.721453,-3.953199,5.629098,4.559508,-0.155388,-0.043712,4.602350,6.971487,-2.413277,-1.104589,7.351428,-5.974319,-5.351164,-2.340320,3.169565,-3.177572,-0.408315,3.472724,5.419447,9.956004,2.076213,8.559951,1.961733,-1.457088,1.430202,-0.524516,-6.397111,0.260945,-9.917399,4.664282,-4.111979,1.650580,-4.480370,8.537279,2.304076,5.006745,-9.235640,5.261269,8.660299,-9.867144,1.767975,4.213935,0.629389,-7.458916,3.935662,1.717324,6.975351,-5.796580,2.035529,5.840947,1.055948,8.937902,-3.641636,3.379535,-3.542838,-6.218786,-7.020081,8.868172,6.839702,0.450985,1.481844,-8.626870,3.824247,6.721129,-3.586552,2.211318,0.711449,-3.753266,-1.683264,-2.103069,0.855235,-4.610402,-3.144346,4.754474,7.377775,-1.498837,4.387599,5.589230,-9.959561,9.380379,4.304696,-3.234551,9.144490,-1.966169,-9.625689,-1.584875,-2.037203,3.754041,-5.616297,-3.692959,-8.714863,-2.558504,1.231750,-4.692243,-9.979341,7.301310,2.985045,3.887223,-9.844671,-0.425013,-0.040514,-5.739992,3.528385,1.064968,-4.018064,8.040601,1.023976,-6.322429,7.376876,-1.263112,-9.209691,0.024333,5.443725,-8.940535,7.405211,-3.909583,5.355697,-9.322379,-2.824762,-7.805029,4.562758,5.942576,1.658774,8.995267,4.485585,5.799621,6.428196,4.556533,7.389291,-9.204674,-4.793968,-7.720561,9.121407,-1.213103,-2.240270,-8.777596,-3.628831,-7.295830,2.756349,-8.571270,7.891574,-5.390871,-0.487167,1.125561,9.051948,-2.283133,-8.969168,1.455136,6.273699,-0.310395,-0.501032,0.698696,-1.057265,0.808268,-8.151809,-3.450104,8.948684,-3.708136,-5.732939,6.647906,-1.074564,1.687133,-1.217214,-8.866673,-4.480180,2.699753,-5.976000,1.010536,2.104259,-7.394797,-8.865300,5.856984,-8.621205,-5.940727,-4.533688,-2.164644,0.520111,6.818842,3.263077,-5.993929,-3.684522,-5.983296,-3.004394,-0.184420,-3.053439,4.783546,5.021745,-8.502090,4.609154,9.743207,-3.373239,-7.887546,0.400286,5.153192,9.889066,8.334164,-2.703878,-4.955951,9.762224,-3.064894,-0.150017,8.529284,-2.805944,2.788666,-2.135325,0.386931,-0.501965,-1.133714,-7.662712,-1.207404,2.243331,7.358207,-2.822434,2.829688,-3.016920,0.518187,0.949123,9.390105,5.661738,0.169788,4.708975,-8.732451,-7.592476,7.966654,8.594393,4.159866,7.003999,-6.866307,-3.024762,-8.990251,5.104004,3.651325,-8.961977,-9.262947,7.299868,5.588967,5.439662,2.235928,-2.079344,-1.112662,-3.525214,3.814014,-3.080009,5.112370,7.688219,-4.028398,-2.538161,0.087330,-0.444809,-6.761089,-8.410371,-5.477614,4.090675,1.242292,-3.372500,1.518715,3.663633,2.011043,-6.461063,5.416304,-0.590657,-9.561644,0.536289,7.544577,-0.339200,-4.709933,8.287823,-6.979794,-7.053861,-7.915786,5.960222,2.767967,-7.887938,-5.139049,-6.952754,-0.205222,7.362072,5.247714,9.250201,-3.063978,-5.648443,-6.256825,6.037413,-0.697712,-2.376845,3.802891,1.001242,0.714019,4.962479,-4.699923,8.675019,-8.578542,-4.939050,3.770242,-8.530151,7.147851,-3.531704,-7.562887,-4.676284,0.423939,9.032936,-5.073046,-7.973389,7.724733,4.903889,6.127515,-1.552354,-7.591998,3.124603,-3.979249,2.445404,-4.060121,7.055670,-6.489224,3.178879,7.808727,-5.295622,2.698006,4.127022,-5.209066,1.182085,1.632683,8.023739,-5.511709,3.461977,-1.065214,-7.418460,0.730185,1.527083,6.063369,6.169113,3.326764,-4.812952,-2.344324,7.251755,-8.323546,-0.815209,9.710995,5.735746,-7.293357,-2.848658,-9.457766,5.744930,4.545291,9.316794,-1.319295,7.547548,-5.864881,-9.031222,4.355568,9.689606,-8.136071,3.542951,8.516809,5.389595,8.529207,-8.635329,-1.505067,3.053017,-1.578654,-4.182060,-2.580436,-3.860124,9.802568,1.872916,3.294432,2.297548,0.561765,7.361888,5.442865,-2.640694,-2.466301,-8.281452,3.509614,-3.553154,-0.519084,-8.348937,-0.164524,5.299168,4.400037,-9.193117,8.221149,3.267317,-1.115946,0.382447,9.529852,8.354126,-2.243175,7.934789,2.867737,8.328457,-0.108263,-6.128979,7.745796,6.760988,7.126629,1.913374,6.675119,9.001410,1.935288,4.857795,-8.356859,-3.799976,7.652599,-8.840245,-3.995989,-6.882508,7.440066,9.438580,5.449787,-3.665305,0.948135,3.747524,-4.069501,-5.348887,-9.923932,-7.374708,-2.512831,0.053597,-6.750374,3.583100,-2.139229,-6.885877,-9.190026,-5.561771,-3.265276,-9.847201,-3.429984,-1.009867,-4.886839,-9.926389,-3.328167,-0.300257,3.442264,-1.365327,7.468966,-8.458584,-3.320458,-6.563732,9.115256,-8.886821,8.304067,4.463758,-6.021586,-7.765348,-7.754035,7.540716,1.836155,-8.850890,-0.416908,3.143205,-5.293877,9.869530,-4.120271,1.308041,-8.222356,7.967471], dtype = "float64")#candidate|8002|(1232,)|const|float64
call_8001 = func_2939_call(relay.reshape(const_8002.astype('float64'), [7, 16, 11]))
call_8003 = func_2939_call(relay.reshape(const_8002.astype('float64'), [7, 16, 11]))
output = relay.Tuple([call_7992,call_8001,const_8002,])
output2 = relay.Tuple([call_7993,call_8003,const_8002,])
func_8019 = relay.Function([], output)
mod['func_8019'] = func_8019
mod = relay.transform.InferType()(mod)
output = func_8019()
func_8020 = relay.Function([], output)
mutated_mod['func_8020'] = func_8020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6532_call = mod.get_global_var('func_6532')
func_6534_call = mutated_mod.get_global_var('func_6534')
call_8097 = relay.TupleGetItem(func_6532_call(), 3)
call_8098 = relay.TupleGetItem(func_6534_call(), 3)
output = relay.Tuple([call_8097,])
output2 = relay.Tuple([call_8098,])
func_8110 = relay.Function([], output)
mod['func_8110'] = func_8110
mod = relay.transform.InferType()(mod)
mutated_mod['func_8110'] = func_8110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8110_call = mutated_mod.get_global_var('func_8110')
call_8111 = func_8110_call()
output = call_8111
func_8112 = relay.Function([], output)
mutated_mod['func_8112'] = func_8112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7129_call = mod.get_global_var('func_7129')
func_7131_call = mutated_mod.get_global_var('func_7131')
call_8127 = relay.TupleGetItem(func_7129_call(), 0)
call_8128 = relay.TupleGetItem(func_7131_call(), 0)
output = relay.Tuple([call_8127,])
output2 = relay.Tuple([call_8128,])
func_8145 = relay.Function([], output)
mod['func_8145'] = func_8145
mod = relay.transform.InferType()(mod)
mutated_mod['func_8145'] = func_8145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8145_call = mutated_mod.get_global_var('func_8145')
call_8146 = func_8145_call()
output = call_8146
func_8147 = relay.Function([], output)
mutated_mod['func_8147'] = func_8147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5100_call = mod.get_global_var('func_5100')
func_5101_call = mutated_mod.get_global_var('func_5101')
call_8159 = relay.TupleGetItem(func_5100_call(), 0)
call_8160 = relay.TupleGetItem(func_5101_call(), 0)
func_8145_call = mod.get_global_var('func_8145')
func_8147_call = mutated_mod.get_global_var('func_8147')
call_8167 = relay.TupleGetItem(func_8145_call(), 0)
call_8168 = relay.TupleGetItem(func_8147_call(), 0)
output = relay.Tuple([call_8159,call_8167,])
output2 = relay.Tuple([call_8160,call_8168,])
func_8182 = relay.Function([], output)
mod['func_8182'] = func_8182
mod = relay.transform.InferType()(mod)
mutated_mod['func_8182'] = func_8182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8182_call = mutated_mod.get_global_var('func_8182')
call_8183 = func_8182_call()
output = call_8183
func_8184 = relay.Function([], output)
mutated_mod['func_8184'] = func_8184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6877_call = mod.get_global_var('func_6877')
func_6878_call = mutated_mod.get_global_var('func_6878')
call_8204 = relay.TupleGetItem(func_6877_call(), 1)
call_8205 = relay.TupleGetItem(func_6878_call(), 1)
func_2939_call = mod.get_global_var('func_2939')
func_2942_call = mutated_mod.get_global_var('func_2942')
var_8213 = relay.var("var_8213", dtype = "float64", shape = (1232,))#candidate|8213|(1232,)|var|float64
call_8212 = func_2939_call(relay.reshape(var_8213.astype('float64'), [7, 16, 11]))
call_8214 = func_2939_call(relay.reshape(var_8213.astype('float64'), [7, 16, 11]))
output = relay.Tuple([call_8204,call_8212,var_8213,])
output2 = relay.Tuple([call_8205,call_8214,var_8213,])
func_8219 = relay.Function([var_8213,], output)
mod['func_8219'] = func_8219
mod = relay.transform.InferType()(mod)
var_8220 = relay.var("var_8220", dtype = "float64", shape = (1232,))#candidate|8220|(1232,)|var|float64
output = func_8219(var_8220)
func_8221 = relay.Function([var_8220], output)
mutated_mod['func_8221'] = func_8221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5265_call = mod.get_global_var('func_5265')
func_5267_call = mutated_mod.get_global_var('func_5267')
call_8263 = func_5265_call()
call_8264 = func_5265_call()
func_7506_call = mod.get_global_var('func_7506')
func_7508_call = mutated_mod.get_global_var('func_7508')
call_8285 = relay.TupleGetItem(func_7506_call(), 4)
call_8286 = relay.TupleGetItem(func_7508_call(), 4)
output = relay.Tuple([call_8263,call_8285,])
output2 = relay.Tuple([call_8264,call_8286,])
func_8287 = relay.Function([], output)
mod['func_8287'] = func_8287
mod = relay.transform.InferType()(mod)
output = func_8287()
func_8288 = relay.Function([], output)
mutated_mod['func_8288'] = func_8288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7776_call = mod.get_global_var('func_7776')
func_7777_call = mutated_mod.get_global_var('func_7777')
call_8315 = relay.TupleGetItem(func_7776_call(), 0)
call_8316 = relay.TupleGetItem(func_7777_call(), 0)
output = relay.Tuple([call_8315,])
output2 = relay.Tuple([call_8316,])
func_8321 = relay.Function([], output)
mod['func_8321'] = func_8321
mod = relay.transform.InferType()(mod)
output = func_8321()
func_8322 = relay.Function([], output)
mutated_mod['func_8322'] = func_8322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6532_call = mod.get_global_var('func_6532')
func_6534_call = mutated_mod.get_global_var('func_6534')
call_8399 = relay.TupleGetItem(func_6532_call(), 1)
call_8400 = relay.TupleGetItem(func_6534_call(), 1)
output = relay.Tuple([call_8399,])
output2 = relay.Tuple([call_8400,])
func_8406 = relay.Function([], output)
mod['func_8406'] = func_8406
mod = relay.transform.InferType()(mod)
output = func_8406()
func_8407 = relay.Function([], output)
mutated_mod['func_8407'] = func_8407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3019_call = mod.get_global_var('func_3019')
func_3021_call = mutated_mod.get_global_var('func_3021')
call_8410 = func_3019_call()
call_8411 = func_3019_call()
var_8414 = relay.var("var_8414", dtype = "float32", shape = (12, 13, 5))#candidate|8414|(12, 13, 5)|var|float32
bop_8415 = relay.less(call_8410.astype('bool'), relay.reshape(var_8414.astype('bool'), relay.shape_of(call_8410))) # shape=(12, 13, 5)
bop_8418 = relay.less(call_8411.astype('bool'), relay.reshape(var_8414.astype('bool'), relay.shape_of(call_8411))) # shape=(12, 13, 5)
func_7723_call = mod.get_global_var('func_7723')
func_7725_call = mutated_mod.get_global_var('func_7725')
call_8419 = relay.TupleGetItem(func_7723_call(), 0)
call_8420 = relay.TupleGetItem(func_7725_call(), 0)
output = relay.Tuple([bop_8415,call_8419,])
output2 = relay.Tuple([bop_8418,call_8420,])
func_8421 = relay.Function([var_8414,], output)
mod['func_8421'] = func_8421
mod = relay.transform.InferType()(mod)
var_8422 = relay.var("var_8422", dtype = "float32", shape = (12, 13, 5))#candidate|8422|(12, 13, 5)|var|float32
output = func_8421(var_8422)
func_8423 = relay.Function([var_8422], output)
mutated_mod['func_8423'] = func_8423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6532_call = mod.get_global_var('func_6532')
func_6534_call = mutated_mod.get_global_var('func_6534')
call_8440 = relay.TupleGetItem(func_6532_call(), 0)
call_8441 = relay.TupleGetItem(func_6534_call(), 0)
var_8444 = relay.var("var_8444", dtype = "float32", shape = (12, 13, 5))#candidate|8444|(12, 13, 5)|var|float32
bop_8445 = relay.add(call_8440.astype('int32'), relay.reshape(var_8444.astype('int32'), relay.shape_of(call_8440))) # shape=(12, 13, 5)
bop_8448 = relay.add(call_8441.astype('int32'), relay.reshape(var_8444.astype('int32'), relay.shape_of(call_8441))) # shape=(12, 13, 5)
func_3290_call = mod.get_global_var('func_3290')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_8452 = func_3290_call()
call_8453 = func_3290_call()
output = relay.Tuple([bop_8445,call_8452,])
output2 = relay.Tuple([bop_8448,call_8453,])
func_8460 = relay.Function([var_8444,], output)
mod['func_8460'] = func_8460
mod = relay.transform.InferType()(mod)
var_8461 = relay.var("var_8461", dtype = "float32", shape = (12, 13, 5))#candidate|8461|(12, 13, 5)|var|float32
output = func_8460(var_8461)
func_8462 = relay.Function([var_8461], output)
mutated_mod['func_8462'] = func_8462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6622_call = mod.get_global_var('func_6622')
func_6623_call = mutated_mod.get_global_var('func_6623')
call_8469 = func_6622_call()
call_8470 = func_6622_call()
output = relay.Tuple([call_8469,])
output2 = relay.Tuple([call_8470,])
func_8471 = relay.Function([], output)
mod['func_8471'] = func_8471
mod = relay.transform.InferType()(mod)
output = func_8471()
func_8472 = relay.Function([], output)
mutated_mod['func_8472'] = func_8472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4688_call = mod.get_global_var('func_4688')
func_4690_call = mutated_mod.get_global_var('func_4690')
call_8551 = relay.TupleGetItem(func_4688_call(), 4)
call_8552 = relay.TupleGetItem(func_4690_call(), 4)
output = relay.Tuple([call_8551,])
output2 = relay.Tuple([call_8552,])
func_8583 = relay.Function([], output)
mod['func_8583'] = func_8583
mod = relay.transform.InferType()(mod)
mutated_mod['func_8583'] = func_8583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8583_call = mutated_mod.get_global_var('func_8583')
call_8584 = func_8583_call()
output = call_8584
func_8585 = relay.Function([], output)
mutated_mod['func_8585'] = func_8585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5069_call = mod.get_global_var('func_5069')
func_5070_call = mutated_mod.get_global_var('func_5070')
call_8609 = relay.TupleGetItem(func_5069_call(), 0)
call_8610 = relay.TupleGetItem(func_5070_call(), 0)
func_4224_call = mod.get_global_var('func_4224')
func_4226_call = mutated_mod.get_global_var('func_4226')
call_8649 = relay.TupleGetItem(func_4224_call(), 1)
call_8650 = relay.TupleGetItem(func_4226_call(), 1)
output = relay.Tuple([call_8609,call_8649,])
output2 = relay.Tuple([call_8610,call_8650,])
func_8651 = relay.Function([], output)
mod['func_8651'] = func_8651
mod = relay.transform.InferType()(mod)
output = func_8651()
func_8652 = relay.Function([], output)
mutated_mod['func_8652'] = func_8652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5265_call = mod.get_global_var('func_5265')
func_5267_call = mutated_mod.get_global_var('func_5267')
call_8655 = func_5265_call()
call_8656 = func_5265_call()
output = call_8655
output2 = call_8656
func_8697 = relay.Function([], output)
mod['func_8697'] = func_8697
mod = relay.transform.InferType()(mod)
mutated_mod['func_8697'] = func_8697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8697_call = mutated_mod.get_global_var('func_8697')
call_8698 = func_8697_call()
output = call_8698
func_8699 = relay.Function([], output)
mutated_mod['func_8699'] = func_8699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4940_call = mod.get_global_var('func_4940')
func_4942_call = mutated_mod.get_global_var('func_4942')
call_8742 = func_4940_call()
call_8743 = func_4940_call()
output = call_8742
output2 = call_8743
func_8744 = relay.Function([], output)
mod['func_8744'] = func_8744
mod = relay.transform.InferType()(mod)
output = func_8744()
func_8745 = relay.Function([], output)
mutated_mod['func_8745'] = func_8745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7682_call = mod.get_global_var('func_7682')
func_7683_call = mutated_mod.get_global_var('func_7683')
call_8759 = relay.TupleGetItem(func_7682_call(), 0)
call_8760 = relay.TupleGetItem(func_7683_call(), 0)
output = relay.Tuple([call_8759,])
output2 = relay.Tuple([call_8760,])
func_8765 = relay.Function([], output)
mod['func_8765'] = func_8765
mod = relay.transform.InferType()(mod)
output = func_8765()
func_8766 = relay.Function([], output)
mutated_mod['func_8766'] = func_8766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4166_call = mod.get_global_var('func_4166')
func_4168_call = mutated_mod.get_global_var('func_4168')
call_8799 = relay.TupleGetItem(func_4166_call(), 0)
call_8800 = relay.TupleGetItem(func_4168_call(), 0)
output = relay.Tuple([call_8799,])
output2 = relay.Tuple([call_8800,])
func_8801 = relay.Function([], output)
mod['func_8801'] = func_8801
mod = relay.transform.InferType()(mod)
mutated_mod['func_8801'] = func_8801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8801_call = mutated_mod.get_global_var('func_8801')
call_8802 = func_8801_call()
output = call_8802
func_8803 = relay.Function([], output)
mutated_mod['func_8803'] = func_8803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7506_call = mod.get_global_var('func_7506')
func_7508_call = mutated_mod.get_global_var('func_7508')
call_8807 = relay.TupleGetItem(func_7506_call(), 2)
call_8808 = relay.TupleGetItem(func_7508_call(), 2)
uop_8816 = relay.sinh(call_8807.astype('float32')) # shape=(715, 3)
uop_8818 = relay.sinh(call_8808.astype('float32')) # shape=(715, 3)
bop_8820 = relay.logical_or(call_8807.astype('bool'), relay.reshape(uop_8816.astype('bool'), relay.shape_of(call_8807))) # shape=(715, 3)
bop_8823 = relay.logical_or(call_8808.astype('bool'), relay.reshape(uop_8818.astype('bool'), relay.shape_of(call_8808))) # shape=(715, 3)
func_3380_call = mod.get_global_var('func_3380')
func_3383_call = mutated_mod.get_global_var('func_3383')
var_8825 = relay.var("var_8825", dtype = "float64", shape = (588,))#candidate|8825|(588,)|var|float64
var_8826 = relay.var("var_8826", dtype = "uint8", shape = (448,))#candidate|8826|(448,)|var|uint8
call_8824 = relay.TupleGetItem(func_3380_call(relay.reshape(var_8825.astype('float64'), [3, 14, 14]), relay.reshape(var_8826.astype('uint8'), [56, 8]), ), 1)
call_8827 = relay.TupleGetItem(func_3383_call(relay.reshape(var_8825.astype('float64'), [3, 14, 14]), relay.reshape(var_8826.astype('uint8'), [56, 8]), ), 1)
const_8838 = relay.const([-3.529809,2.672902,1.641239,1.836114,3.084722,-1.932649,4.078632,-7.452530,9.860835,9.623169,1.984042,9.449309,7.880488,5.497058,0.178215,-6.213050,7.984287,3.122781,2.054081,-1.684106,6.484026,1.937709,1.285609,9.874143,-2.873684,-9.608450,-0.629499,4.605249,3.569715,1.595214,-1.113835,3.538630,2.613452,-3.457633,7.845630,-2.692740,8.313856,4.409399,5.556390,-2.009907,8.278226,-9.395437,-7.812432,-0.062925,-9.402346,-1.113171,8.530119,-2.923231,3.352688,-1.351266,3.135066,5.210837,-0.980389,-3.820895,6.985597,6.811167,2.330802,6.351834,-0.260589,2.919866,4.651998,5.826429,9.249753,3.342276,-5.827286,0.195967,-2.552555,5.263329,-2.894597,7.474292,-4.103557,-3.264548,-2.212922,4.336515,3.031431,7.108346,0.853797,-5.026667,-4.933873,8.822520,5.863930,-0.338978,4.854559,-4.284660,7.391712,1.084188,-9.947637,8.144023,9.765940,4.925076,-2.161908,4.668608,3.217104,-6.380519,-0.530749,4.591134,5.849206,9.626780,6.295365,-0.856939,7.454415,-0.349293,2.374639,-8.433883,-0.639246,-6.049225,-3.652201,-7.444648,6.945447,1.698506,-8.561417,5.401859,0.104848,-3.535302,-8.602956,7.638967,0.766161,6.393767,-5.236698,0.855520,-5.520259,9.445709,-1.938296,-6.616353,-5.510403,4.771957,-9.418651,-6.060193,7.585309,-4.862234,2.234714,-2.598261,3.910582,-1.648857,8.657710,2.768744,9.244526,8.713016,-5.301622,6.218895,8.971736,-8.991892,3.832593,3.366045,9.377512,-4.710457,-1.240306,5.324052,-4.681060,6.346451,-5.479248,0.710294,7.802864,3.720298,2.630226,-1.925467,9.328334,-4.961350,-9.482309,4.755510,-2.993195,-9.221726,-2.143411,-0.452323,5.958163,2.117295,-5.234444,1.386319,2.421726,-8.751018,4.890489,2.772455,7.209621,1.065720,-5.895346,5.838701,-9.916053,8.136354,-6.057374,-9.161823,4.630632,1.349968,-0.166318,8.594226,8.487212,-8.263468,-2.353802,5.158921,-0.775518,1.940912,6.756103,0.346649,2.627709,8.368273,-7.976994,0.281442,4.939564,-5.160389,-9.377542,2.029642,7.847668,-2.595498,4.358689,0.562195,2.269075,-0.400708,1.537540,-6.447886,-9.734796,-6.763316,8.049795,-8.392529,-7.460694,4.372144,-7.446398,-0.430117,-5.495902,-6.791844,-5.116475,2.638545,-2.624954,3.618907,1.310334,-4.034876,0.380403,7.267610,3.093792,4.804384,-3.803969,-9.367849,4.173148,-3.891702,3.324694,7.220022,-3.564313,4.435220,9.506736,-3.234396,4.865095,-1.964440,-9.984897,9.977140,-5.432961,3.082587,9.741060,4.342749,8.296907,1.040207,-7.978161,-7.897475,1.343475,-7.983933,-9.995770,-6.853903,1.354037,-1.346292,-5.191072,6.444680,-2.894216,9.614352,-1.560114,-4.596156,-2.881071,1.310519,9.473633,8.703718,6.110832,1.546772,-5.437199,7.961176,-6.948295,0.213970,-4.488249,8.620970,-6.418371,-9.120238,-8.864356,-0.799423,-1.152951,5.931334,5.316870,5.601376,-8.696541,5.504015,-6.718541,6.849106,-9.592545,3.102689,7.589375,-0.370472,1.774349,1.727596,8.559060,-8.368360,4.164723,2.054709,-7.588212,8.654698,7.481775,5.693131,-1.265179,5.058096,-9.082513,6.100263,0.886644,4.040367,-5.228426,-7.257928,-1.443699,-4.915989,4.924910,-1.484752,-8.305973,-1.288044,-1.845500,9.902048,-1.535719,-0.555768,1.056933,4.726667,0.704881,3.815048,8.634549,9.470355,-9.565930,1.049965,-3.058068,1.715010,1.054797,-1.244696,5.452970,-6.133022,-9.708153,-2.740746,-4.267272,5.025684,-6.915930,-1.022699,-6.662739,3.008003,3.848907,-1.448550,5.562785,-4.121857,-2.613819,-1.117912,-4.947299,6.544278,9.836594,-5.981293,9.174143,7.664172,-4.269025,3.000657,-8.658692,4.367557,4.502598,5.373958,1.415490,-6.992541,-6.973499,3.237467,5.313438,-4.061692,8.979124,1.316384,-1.539096,-3.135488,-8.377446,3.713576,2.330041,-1.530922,4.730562,2.384481,8.590328,-1.442399,-3.357595,-8.609559,-7.131051,3.391985,4.342149,8.103865,1.644357,-2.316087,0.786908,-9.680153,-0.634770,-4.428684,-0.743743,-4.539022,1.416600,-3.833828,-3.945922,0.731574,4.309904,-3.539711,6.590550,-3.427152,-5.110873,-8.730447,-9.380179,-7.855168,4.797302,-6.738789,-8.158902,2.537586,5.562997,5.154789,-0.855825,9.919009,0.854072,-1.269430,9.788024,-2.536810,7.956932,8.307996,5.173512,-1.557696,-6.925970,9.586061,6.889487,-9.930391,-4.780189,3.577014,8.715026,-6.954764,-7.977219,8.876635,4.473970,5.350089,9.887326,-0.089424,-5.980544,3.267838,-5.334796,9.106965,-9.956318,-2.208666,-2.088348,3.590578,-2.894357,-9.060465,2.637998,-3.598771,6.662277,7.051530,2.683866,-7.155318,3.104838,-8.690786,-7.718195,6.692377,-5.490420,8.465500,7.175333,-3.731075,-5.466373,1.168901,-4.075721,-3.759864,6.925509,-0.210266,2.497570,5.653475,0.351384,-2.178443,9.194121,-0.370783,-9.490526,-6.917974,-5.880247,5.006118,-3.196261,-7.316993,4.178664,-3.593117,0.707649,3.158461,8.611405,4.469777,-2.372097,-1.298685,4.657450,5.741352,-9.267360,-6.027070,-6.439863,1.928342,-0.948531,-3.505485,-3.451719,-6.639583,6.085376,1.575930,-7.425999,9.271433,-9.116986,8.468589,-6.316660,5.817987,-5.953411,-7.394942,-8.004173,3.298993,7.062936,-3.997421,2.356769,2.661235,-8.668164,7.335466,9.296444,6.604788,4.981704,-2.201301,-3.723326,-2.679438,3.706023,1.874609,7.264938,-8.698950,-0.294142,-1.288201,7.177576,5.907777,-0.668278,4.193287,6.182674,-4.028018,6.983776,4.322405,-5.740115,-1.435911,-3.807529,7.530748,3.815971,-5.113165,-9.771473,0.709137,0.201029,2.074209,4.702667,1.515392,-0.168637,9.456357,-7.207698,9.484713,3.877128,-1.369976,7.363434,7.144687,4.167101,1.628790,-1.709607,-7.700960,5.143633,-0.892469,-2.177707,3.116949,6.275976,-4.620680,3.217172,-5.956571,1.941091,-2.154215,3.610730,3.630445,-9.240381,-6.297448,5.836628,-1.873823,4.089737,-1.918148,-2.179814,-2.626156,-2.838698,-1.634505,-9.040781,-7.361524,6.125311,-7.100961,-4.014736,-5.663268,-9.439586,-3.597462,8.571150,-4.227170,3.543902,-4.821003], dtype = "float64")#candidate|8838|(588,)|const|float64
bop_8839 = relay.logical_xor(var_8825.astype('uint32'), relay.reshape(const_8838.astype('uint32'), relay.shape_of(var_8825))) # shape=(588,)
output = relay.Tuple([bop_8820,call_8824,var_8826,bop_8839,])
output2 = relay.Tuple([bop_8823,call_8827,var_8826,bop_8839,])
func_8843 = relay.Function([var_8825,var_8826,], output)
mod['func_8843'] = func_8843
mod = relay.transform.InferType()(mod)
var_8844 = relay.var("var_8844", dtype = "float64", shape = (588,))#candidate|8844|(588,)|var|float64
var_8845 = relay.var("var_8845", dtype = "uint8", shape = (448,))#candidate|8845|(448,)|var|uint8
output = func_8843(var_8844,var_8845,)
func_8846 = relay.Function([var_8844,var_8845,], output)
mutated_mod['func_8846'] = func_8846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6227_call = mod.get_global_var('func_6227')
func_6228_call = mutated_mod.get_global_var('func_6228')
call_8864 = relay.TupleGetItem(func_6227_call(), 0)
call_8865 = relay.TupleGetItem(func_6228_call(), 0)
output = relay.Tuple([call_8864,])
output2 = relay.Tuple([call_8865,])
func_8872 = relay.Function([], output)
mod['func_8872'] = func_8872
mod = relay.transform.InferType()(mod)
mutated_mod['func_8872'] = func_8872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8872_call = mutated_mod.get_global_var('func_8872')
call_8873 = func_8872_call()
output = call_8873
func_8874 = relay.Function([], output)
mutated_mod['func_8874'] = func_8874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8182_call = mod.get_global_var('func_8182')
func_8184_call = mutated_mod.get_global_var('func_8184')
call_8939 = relay.TupleGetItem(func_8182_call(), 1)
call_8940 = relay.TupleGetItem(func_8184_call(), 1)
func_3688_call = mod.get_global_var('func_3688')
func_3690_call = mutated_mod.get_global_var('func_3690')
call_8965 = func_3688_call()
call_8966 = func_3688_call()
output = relay.Tuple([call_8939,call_8965,])
output2 = relay.Tuple([call_8940,call_8966,])
func_8967 = relay.Function([], output)
mod['func_8967'] = func_8967
mod = relay.transform.InferType()(mod)
mutated_mod['func_8967'] = func_8967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8967_call = mutated_mod.get_global_var('func_8967')
call_8968 = func_8967_call()
output = call_8968
func_8969 = relay.Function([], output)
mutated_mod['func_8969'] = func_8969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3749_call = mod.get_global_var('func_3749')
func_3750_call = mutated_mod.get_global_var('func_3750')
call_9013 = relay.TupleGetItem(func_3749_call(), 0)
call_9014 = relay.TupleGetItem(func_3750_call(), 0)
output = call_9013
output2 = call_9014
func_9028 = relay.Function([], output)
mod['func_9028'] = func_9028
mod = relay.transform.InferType()(mod)
mutated_mod['func_9028'] = func_9028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9028_call = mutated_mod.get_global_var('func_9028')
call_9029 = func_9028_call()
output = call_9029
func_9030 = relay.Function([], output)
mutated_mod['func_9030'] = func_9030
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9046 = relay.var("var_9046", dtype = "bool", shape = (6, 6, 12))#candidate|9046|(6, 6, 12)|var|bool
const_9047 = relay.const([[[True,True,False,False,True,False,False,False,False,True,True,False],[True,True,False,True,True,False,False,False,False,False,True,True],[True,False,False,False,True,False,False,False,True,False,True,False],[False,True,False,True,False,False,True,True,True,True,False,True],[True,True,True,False,True,False,True,False,False,True,True,True],[True,True,True,False,False,False,False,False,True,True,True,True]],[[True,False,False,False,False,True,True,True,False,False,True,True],[False,False,False,False,False,True,True,True,False,True,False,False],[True,False,True,True,True,False,False,False,True,True,True,True],[False,False,False,False,True,False,True,True,False,True,False,False],[False,True,False,True,False,False,True,False,False,False,True,False],[True,True,False,False,False,True,True,False,False,True,False,True]],[[True,False,False,False,True,False,False,False,False,False,True,False],[False,False,False,True,True,True,True,False,True,True,False,True],[True,True,False,True,False,False,False,False,False,False,False,False],[True,False,False,True,True,True,True,True,True,False,False,False],[True,True,False,False,True,False,False,False,True,False,True,False],[False,True,False,True,True,False,True,False,False,True,True,True]],[[False,True,True,True,True,True,False,False,True,False,True,False],[True,True,False,False,True,True,False,True,False,False,False,True],[False,True,False,True,False,True,False,False,False,True,False,True],[True,False,False,False,False,True,False,True,False,False,False,True],[True,False,False,True,True,True,False,True,False,False,False,True],[False,True,True,False,False,True,False,True,True,False,True,False]],[[True,True,True,True,True,True,False,False,False,False,True,True],[True,False,False,False,False,True,True,False,False,False,True,False],[False,True,False,True,True,True,True,False,True,True,True,False],[False,True,True,False,True,False,True,True,False,False,True,True],[True,False,True,True,False,False,True,False,True,True,False,False],[True,True,False,False,False,True,False,True,False,True,True,False]],[[False,True,True,False,True,False,True,False,False,True,True,False],[True,False,True,True,False,True,True,True,False,False,True,True],[True,True,False,False,True,True,False,True,False,True,True,True],[True,True,True,True,False,False,True,True,True,False,False,True],[True,False,False,False,False,True,True,True,False,True,True,True],[False,True,False,True,False,False,False,True,True,False,False,True]]], dtype = "bool")#candidate|9047|(6, 6, 12)|const|bool
bop_9048 = relay.logical_and(var_9046.astype('bool'), relay.reshape(const_9047.astype('bool'), relay.shape_of(var_9046))) # shape=(6, 6, 12)
func_2017_call = mod.get_global_var('func_2017')
func_2020_call = mutated_mod.get_global_var('func_2020')
var_9053 = relay.var("var_9053", dtype = "float32", shape = (780,))#candidate|9053|(780,)|var|float32
call_9052 = relay.TupleGetItem(func_2017_call(relay.reshape(var_9053.astype('float32'), [12, 13, 5])), 2)
call_9054 = relay.TupleGetItem(func_2020_call(relay.reshape(var_9053.astype('float32'), [12, 13, 5])), 2)
uop_9056 = relay.sinh(call_9052.astype('float64')) # shape=(3, 12, 4)
uop_9058 = relay.sinh(call_9054.astype('float64')) # shape=(3, 12, 4)
uop_9063 = relay.log(uop_9056.astype('float64')) # shape=(3, 12, 4)
uop_9065 = relay.log(uop_9058.astype('float64')) # shape=(3, 12, 4)
output = relay.Tuple([bop_9048,var_9053,uop_9063,])
output2 = relay.Tuple([bop_9048,var_9053,uop_9065,])
func_9084 = relay.Function([var_9046,var_9053,], output)
mod['func_9084'] = func_9084
mod = relay.transform.InferType()(mod)
mutated_mod['func_9084'] = func_9084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9084_call = mutated_mod.get_global_var('func_9084')
var_9086 = relay.var("var_9086", dtype = "bool", shape = (6, 6, 12))#candidate|9086|(6, 6, 12)|var|bool
var_9087 = relay.var("var_9087", dtype = "float32", shape = (780,))#candidate|9087|(780,)|var|float32
call_9085 = func_9084_call(var_9086,var_9087,)
output = call_9085
func_9088 = relay.Function([var_9086,var_9087,], output)
mutated_mod['func_9088'] = func_9088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7506_call = mod.get_global_var('func_7506')
func_7508_call = mutated_mod.get_global_var('func_7508')
call_9124 = relay.TupleGetItem(func_7506_call(), 0)
call_9125 = relay.TupleGetItem(func_7508_call(), 0)
output = call_9124
output2 = call_9125
func_9134 = relay.Function([], output)
mod['func_9134'] = func_9134
mod = relay.transform.InferType()(mod)
mutated_mod['func_9134'] = func_9134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9134_call = mutated_mod.get_global_var('func_9134')
call_9135 = func_9134_call()
output = call_9135
func_9136 = relay.Function([], output)
mutated_mod['func_9136'] = func_9136
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9196 = relay.const([[[1.166542,-7.539898,4.376993,3.281832,-1.605641,4.743559,-5.141973,1.687921,-5.536904,7.634687,1.727486,5.018431,6.430579]],[[3.350799,-2.855619,5.238951,-3.360908,0.566146,1.252623,-0.246606,-6.862905,3.340062,7.971463,1.574479,3.570803,-1.695291]],[[-9.382516,6.075387,6.159036,7.315351,-4.286218,0.114436,-7.003702,-4.050051,-1.586885,1.314089,-7.690143,9.005502,-0.324849]],[[-0.902309,-2.831651,-8.212538,-3.559014,-6.457966,9.029281,-6.752327,-5.599965,-5.756446,-5.724599,-8.324439,3.431344,8.525400]],[[-2.151239,7.614243,-5.489802,4.616625,8.401506,6.931936,7.727469,0.356502,3.665241,-4.445525,7.624990,-4.984683,-5.184016]],[[-7.001981,8.830809,1.056122,9.703845,-3.044900,-2.518202,-1.412794,7.919570,-4.567346,3.357526,2.324821,5.789749,-2.598995]],[[-0.023345,-8.889726,1.675354,-8.335608,9.353158,7.571878,0.418845,-8.511835,7.628384,3.124519,-8.535947,1.610727,7.974166]],[[6.809597,3.829174,8.063961,-2.927590,-9.668984,6.664864,-2.807372,-2.125369,1.249845,3.591033,-7.293012,-1.691533,-5.185152]],[[7.129536,-8.619841,-3.466304,5.343540,9.747186,-3.448494,-1.232787,4.722871,6.225277,-4.681312,0.955590,9.514038,3.687148]],[[3.097188,1.849776,3.004851,-0.223102,8.830085,2.924429,-9.147396,-5.368346,-8.350929,7.739711,-9.527301,-1.513774,-3.850812]],[[-8.843163,-7.310911,5.152253,3.922367,6.058622,1.432825,-9.722591,5.861425,3.790397,-2.549290,-7.364869,7.101867,-3.040876]]], dtype = "float32")#candidate|9196|(11, 1, 13)|const|float32
var_9197 = relay.var("var_9197", dtype = "float32", shape = (11, 4, 13))#candidate|9197|(11, 4, 13)|var|float32
bop_9198 = relay.divide(const_9196.astype('float32'), var_9197.astype('float32')) # shape=(11, 4, 13)
func_4764_call = mod.get_global_var('func_4764')
func_4767_call = mutated_mod.get_global_var('func_4767')
const_9204 = relay.const([7.216823,4.259352,3.333749,6.058424,-5.671361,-2.421227,9.445515,-9.420250,6.854747,-8.633910,-1.731814,-3.590487,-5.899223,-4.449943,-9.118988,-1.288740,-4.676208,2.052023,-4.231096,-7.329540,-4.962907,7.336549,-8.339887,8.632603,1.609044,7.872578,8.698006,-4.746165,-8.585132,1.102290,-5.833949,-3.765342,-7.612786,-9.415427,-3.482885,8.689673,5.324525,7.052140,-3.739946,8.179587,-0.897774,-2.104969,1.022850,7.195352,6.129310,-7.308583,-0.275003,-2.421177,-4.801518,-9.083293,4.934943,-3.339655,-3.569869,-1.562576,-8.976687,8.754228,-3.730131,-6.353112,-0.334180,5.515247,4.090663,-9.901108,-2.115406,-6.409980,0.764724,-1.669926,-0.576109,-8.915555,-3.934903,6.755700,-1.025995,7.822731,-5.081011,-3.767383,-1.933148,-0.612264,-2.181819,0.606129,1.758675,6.220216,-7.530902,3.320816,-0.814393,-5.764982,-1.450852,0.482315,-1.023013,-8.350300,4.705306,2.381622,-4.309162,5.408130,-8.781225,-5.866516,-0.140800,3.179136,7.042246,7.319884,-5.446258,-2.106395,1.552655,9.617570,-1.299326,2.184862,1.459889,4.256269,-8.546120,-4.966996,-9.420667,6.492254,-5.432375,6.495833,1.534383,-3.294806,-9.083958,6.280079,-5.414277,3.720712,-2.931408,-0.583738,-7.803700,1.232182,-4.264698,3.752063,-4.795334,6.862123,1.553879,-9.523381,8.144264,-0.603259,6.848001,-7.944685,3.699859,6.318122,-0.956415,5.239114,0.200488,3.132564,-4.090058,-0.443428,4.323565,8.299669,8.588022,-0.353608,-3.717370,-3.167637,-3.223095,-7.793019,1.324013,7.553464,1.720441,-7.616260,9.384478,2.941068,-0.962290,6.557723,9.968323,0.497841,-1.274678,-3.163516,-0.249807,2.810950,2.229768,-8.502464,2.256879,-3.420527,-0.778429,6.669358,-2.398807,1.969932,9.036623,2.817894,-6.347298,2.646153,-5.182369,6.279767,-4.819627,2.407068,-3.956624,-9.653415,3.092556,9.812739,7.718893,3.322124,9.353329,7.780625,6.905006,9.217403,5.507396,7.423178,-7.213136,-0.168364,3.669642,-8.959497,-0.933731,9.258634,7.019661,1.706008,4.038725,3.493660,-1.866324,7.750139,0.412799,8.760119,0.602187,-2.434067,4.468180,1.567443,-6.311402,0.218633,-8.799001,-8.662403,0.194529,9.747756,-6.438558,1.159520,7.602235,9.779860,7.134105,4.542929,5.840710,3.283289,-7.733633,7.130733,-6.611975,4.220992,2.982704,9.595644,-5.063077,7.363358,6.718568,9.831577,-5.217763,5.445452,2.002377,-0.917682,-1.882599,2.412114,-3.310313,5.026310,6.883296,-2.640662,-6.200182,4.616993,-7.509095,3.122506,0.315856,-3.316083,7.067615,-4.607838,-4.703751,0.891324,-6.529374,1.232037,9.760026,9.607981,-0.115179,9.722101,3.815725,0.442936,-3.870039,0.909786,2.353477,2.693038,2.061241,5.124211,-9.783278,-2.238204,4.346792,-3.047828,-0.672420,-6.869170,1.261918,8.725858,-5.372558,-5.179600,-1.152386,6.648449,3.818009,-6.605042,-3.278263,-9.869262,6.625327,3.919076,-2.130378,4.452247,5.803558,1.397532,-4.879071,-7.490996,8.553903,5.134226,-8.146256,2.877096,2.501144,7.286320,8.047593,-6.497666,-2.677952,-5.155859,2.419653,-7.651613,3.265386,4.621405,-9.553296,-5.996244,-1.761213,9.749976,-1.392351,-7.350714,5.892701,0.719978,8.957528,7.958307,6.041468,3.795728,1.846364,-3.274940,4.041172,-8.608642,2.509610,-6.415613,-0.211773,-3.078771,-0.920226,-8.142895,-9.374458,7.702631,-6.606614,-0.695140,-3.520872,-1.739738,8.729836,-5.464501,3.413967,-9.537265,3.795356,-6.338462,9.153760,2.170665,-7.648761,2.205925,9.116774,-1.417632,7.136888,-2.412227,-1.907211,1.885005,4.290220,1.340742,7.412843,5.938793,-5.269495,-9.314969,-8.639889,3.621199,-9.490373,-9.215702,9.081646,0.269672,5.067081,-5.639215,-1.205366,8.734088,9.543711,-6.954997,-0.799922,-7.615779,-0.035471,-4.235875,-6.391834,1.256939,-9.495553,-7.011704,-9.194159,-4.098960,1.045518,-4.875261,8.062346,3.083562,-6.225252,3.404045,9.645051,3.445106,-4.568982,0.140741,4.291974,1.085073,-0.834537,-6.134638,8.319560,-7.599994,5.651253,4.566645,-8.711629,-0.509621,-7.697224,3.597367,3.733800,2.681946,8.336732,-0.781024,0.159629,-3.206446,6.160333,6.899003,-2.873387,-7.661334,-9.112767,-8.630283,-1.860721,0.743267,-2.889128,1.018368,7.801562,0.684478,5.560933,9.558557,-3.942197,-6.557549,-9.613625,-9.332480,6.153321,1.350382,-1.641412,-6.399768,-3.501491,-2.475991,-6.194506,-8.513161,-0.762046,-4.826339,2.121456,8.559416,-6.225472,9.210582,6.625970,4.760367,-6.538183,-7.075590,-3.429984,-9.061823,-3.036025,4.861636,-3.497596,-4.398781,6.137008,-1.118917,-1.013962,-7.599450,4.104307,-8.000144,-3.361422,2.252216,-6.102805,9.792148,-0.718860,4.227181,-2.473364,1.552077,-4.653584,-1.341696,6.714026,-5.789733,-7.840273,-3.939524,-0.977993,-2.593534,-8.630842,-7.353072,1.392912,1.671705,7.653486,-7.350878,2.741232,-4.100696,4.896680,5.968503,9.694744,-4.166851,5.931257,4.171287,5.187494,-3.572650,6.249151,-2.028941,-4.552318,-5.022047,-7.190985,-4.625008,-2.926604,0.257332,4.999356,-9.424658,-1.039214,-3.046981,2.084379,-9.204282,6.100228,-2.741624,2.470749,2.363342,-4.787293,3.046694,-9.085524,-4.868841,-8.311443,-8.743191,4.343830,-3.213599,2.633088,7.828958,-4.446479,-5.462047,-9.790560,-6.667930,5.235635,6.951973,8.529161,1.156775,-3.323827,-3.273119,2.034865,-0.081055,-3.185078,9.018724,4.080766,-1.933165,-9.635250,1.672295,-7.588616,-6.737071,5.920656,5.461241,-3.723482,-9.521967,4.963554,7.476156,6.750597,2.160595,-0.854714,-3.106006,2.972485,6.911796,6.526534,-9.322893,-6.627159,8.151307,-2.589891,-8.159120,4.460087,-4.187446,8.509310,-3.238174,1.567590,-7.650159,-5.791851,-7.271666,-8.716373,2.182139,-6.008507,9.411859,-5.618471,4.295938,7.777305,2.923007,-5.448188,1.124529,5.629934,0.624257,6.593921,-3.624498,-5.212331,1.460691,-1.980990,-6.204638,-9.026296,2.303276,-4.348948,-7.559316,-4.268538,2.693988,4.936644,-4.528656,-0.165133,8.935436,-2.049438,1.527990,-6.201792,6.890566,6.783354,-0.251980,1.293603,-0.942439,-3.251597,4.480947,-6.392033,8.730378,-4.060402,-3.619495,3.251360,-7.648111,2.938505,-0.761321,7.966530,-0.678456,9.249824,-9.538571,-3.243005,1.447592,5.230206,2.763939,6.500749,8.355120,-6.760577,-4.301983,-7.663204,1.332539,-5.692504,6.234920,4.427182,-2.838928,-6.937280,1.107645,2.809966,6.039499,-6.015014,-3.390469,-4.183349,6.490505,9.270587,-1.693494,-4.758703,9.198243,-3.871583,-2.724599,-7.003706,-4.538170,-1.419405,6.218771,-2.758046,-9.627942,3.476030,-8.272197,5.000827,-4.797448,9.210484,-7.348271,9.613351,-0.608288,-5.797233,0.482180,6.281319,-3.343613,-4.915834,2.220458,-7.993808,5.496901,-9.650763,2.730324,2.866967,-5.846230,8.613904,-9.994462,-0.707070,-0.069311,-6.204554,3.285176,8.278504,2.007399,9.873833,8.068850,-7.080191,4.789933,-8.814045,-5.061648,5.960290,5.018718,2.157439,2.889180,-2.895352,1.395296,1.537399,7.362051,-5.038063,-5.769614,7.722041,2.659357,-3.994368,5.099654,-5.429866,-5.286860,-7.656443,-3.883272,-8.991986,-4.710301,5.815965,7.689904,-6.907267,1.813641,6.310017,4.656073,0.791368,-4.978176,4.818111,4.578136,-3.527796,2.898588,8.358247,-6.551664,5.567706,-1.030354,-7.772534,-2.302575,-7.912794,6.437300,1.419453,6.623722,-0.919909,0.733100,2.105787,9.246359,-2.078567,-0.224577,-9.494893,2.948018,1.051331,-9.305894,0.366116,6.791166,-6.953576,4.642424,7.650600,6.716725,3.338248,4.838104,9.241256,-4.008720,-9.548453,1.894569,5.146521,-8.080106,-0.091467,7.620619,4.741877,-6.495747,5.248546,-1.490496,-4.551216,-3.387227,-5.399136,-6.361996,-2.244953,4.555185,7.283365,5.806529,-5.577208,-3.222104,-2.212544,-6.049291,-0.771313,-4.425888,1.996324,-9.205638,-5.123228,9.581972,-1.053000,-8.480901,-2.875438,5.874956,-4.044899,-1.113693,8.581879,5.899710,-6.295882,4.707790,-0.002337,7.229385,-9.913152,3.854318,-4.091284,6.914383,-8.630934,-1.794455,-4.253764,6.244644,-1.496209,6.265590,-0.166983,-4.344185,-8.410449,0.497438,2.141743,-9.711337,-9.603942,-7.484217,-5.310659,0.726504,8.860041,5.800441,-1.503488,-4.125443,1.521351,-7.651201,-5.670734,-7.017529,-7.291137,-1.073290,-3.960206,-6.195800,-4.957355,-0.295549,-3.360203,-8.065841,7.894257,4.394853,-2.919698,-1.688369,6.791295,3.830807,2.953921,2.933675,2.208873,9.867872,-2.041649,-0.354848,-1.883408,-7.295024,-2.745037,-2.363310,-5.536058,1.755707,5.132229,-7.181501,-9.959945,7.014952,-2.303546,-5.622948,-8.515161,2.531912,0.201293,3.662605,-1.863402,-7.369520,-2.227643,-4.107844,2.947329,9.050851,-3.593410,5.095079,6.489639,-0.376914,0.609045,2.518252,3.909746,0.036533,-0.359604,-1.621918,-7.122210,-3.868951,-8.814937,2.051410,-1.919047,-0.797845,2.753086,-4.875654,-8.109634,-4.785987,6.603022,3.258154,-0.699643,8.949540,-7.149414,-9.247409,-9.028965,3.146944,5.346463,-2.760844,-2.012640,-6.268902,2.607507,-7.845956,-5.532044,4.419497,0.027235,-1.276463,1.020174,-3.540036,0.639374,-3.484580,6.428602,-1.956687,8.407645,2.862530,-4.028858,6.479973,-9.064713,1.934565,-9.871550,-1.405456,-4.052920,4.953843,-5.486606,8.954568,-9.581021,4.240119,9.271446,1.279624,1.078524,-0.295534,-0.707234,1.259407,-8.442275,5.428167,3.140556,-6.078972,-7.804555,-2.237356,2.226461,7.910360,5.814880,-3.537126,-4.038910,7.274779,-8.467017,3.231376,6.540985,8.080814,-2.778451,-9.434772,-8.766711,6.020932,2.897246,7.931346,3.354333,-3.399347,7.859467,4.634259,-8.668426,9.512186,4.118888,-4.110800,7.006997,-9.351179,-2.523220,-2.673226,2.604100,-2.150490,0.423281,5.730660,-4.496455,8.883625,-7.947678,3.882384,-3.006019,9.577271,-9.993168,-7.301345,5.083342,3.360693,-3.770851,-7.465195,0.568416,-1.744213,-8.660495,3.461865,1.182955,6.118448,3.221471,1.491734,6.065343,2.560656,-8.033166,-0.438125,-6.107876,8.308689,7.177694,-3.595348,-8.678314,7.121225,8.916245,1.622824,6.469932,-9.885622,-9.811582,-4.589004,9.586709,9.716636,-1.258202,2.435173,7.970110,2.946286,9.554006,0.386909,-1.942487,-5.351755,6.643876,-3.274067,-6.476072,1.349298,-4.153468,0.998416,-6.285899,8.469254,-1.168484,7.617121,-6.025687,-7.969723,3.696466,6.428791,-9.701467,7.623793,-1.670585,-4.324295,-2.666300,1.513391,-3.540719,-6.898401,7.282716,1.012157,7.792061,2.635138,0.469525,6.745819,3.073801,-6.222911,-3.735405,6.244471,9.485548,-7.443501,5.935885,6.642833,-5.081287,-9.973334,7.720907,9.974286,1.230670,-8.500834,-8.933666,6.399595,2.432246,0.637158,1.261800,-5.827698,-0.796952,-9.597960,-4.621658,7.278750,-0.650642,-1.747010], dtype = "float64")#candidate|9204|(1050,)|const|float64
call_9203 = relay.TupleGetItem(func_4764_call(relay.reshape(const_9204.astype('float64'), [14, 5, 15])), 0)
call_9205 = relay.TupleGetItem(func_4767_call(relay.reshape(const_9204.astype('float64'), [14, 5, 15])), 0)
func_6675_call = mod.get_global_var('func_6675')
func_6677_call = mutated_mod.get_global_var('func_6677')
call_9207 = relay.TupleGetItem(func_6675_call(), 0)
call_9208 = relay.TupleGetItem(func_6677_call(), 0)
uop_9210 = relay.atan(var_9197.astype('float64')) # shape=(11, 4, 13)
func_7292_call = mod.get_global_var('func_7292')
func_7294_call = mutated_mod.get_global_var('func_7294')
var_9213 = relay.var("var_9213", dtype = "float64", shape = (12, 42))#candidate|9213|(12, 42)|var|float64
call_9212 = relay.TupleGetItem(func_7292_call(relay.reshape(var_9213.astype('float64'), [504,])), 1)
call_9214 = relay.TupleGetItem(func_7294_call(relay.reshape(var_9213.astype('float64'), [504,])), 1)
func_3658_call = mod.get_global_var('func_3658')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_9217 = relay.TupleGetItem(func_3658_call(), 0)
call_9218 = relay.TupleGetItem(func_3659_call(), 0)
output = relay.Tuple([bop_9198,call_9203,const_9204,call_9207,uop_9210,call_9212,var_9213,call_9217,])
output2 = relay.Tuple([bop_9198,call_9205,const_9204,call_9208,uop_9210,call_9214,var_9213,call_9218,])
func_9221 = relay.Function([var_9197,var_9213,], output)
mod['func_9221'] = func_9221
mod = relay.transform.InferType()(mod)
mutated_mod['func_9221'] = func_9221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9221_call = mutated_mod.get_global_var('func_9221')
var_9223 = relay.var("var_9223", dtype = "float32", shape = (11, 4, 13))#candidate|9223|(11, 4, 13)|var|float32
var_9224 = relay.var("var_9224", dtype = "float64", shape = (12, 42))#candidate|9224|(12, 42)|var|float64
call_9222 = func_9221_call(var_9223,var_9224,)
output = call_9222
func_9225 = relay.Function([var_9223,var_9224,], output)
mutated_mod['func_9225'] = func_9225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6357_call = mod.get_global_var('func_6357')
func_6359_call = mutated_mod.get_global_var('func_6359')
call_9364 = relay.TupleGetItem(func_6357_call(), 0)
call_9365 = relay.TupleGetItem(func_6359_call(), 0)
output = relay.Tuple([call_9364,])
output2 = relay.Tuple([call_9365,])
func_9368 = relay.Function([], output)
mod['func_9368'] = func_9368
mod = relay.transform.InferType()(mod)
mutated_mod['func_9368'] = func_9368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9368_call = mutated_mod.get_global_var('func_9368')
call_9369 = func_9368_call()
output = call_9369
func_9370 = relay.Function([], output)
mutated_mod['func_9370'] = func_9370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4166_call = mod.get_global_var('func_4166')
func_4168_call = mutated_mod.get_global_var('func_4168')
call_9415 = relay.TupleGetItem(func_4166_call(), 0)
call_9416 = relay.TupleGetItem(func_4168_call(), 0)
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
call_9419 = func_1978_call()
call_9420 = func_1978_call()
output = relay.Tuple([call_9415,call_9419,])
output2 = relay.Tuple([call_9416,call_9420,])
func_9421 = relay.Function([], output)
mod['func_9421'] = func_9421
mod = relay.transform.InferType()(mod)
output = func_9421()
func_9422 = relay.Function([], output)
mutated_mod['func_9422'] = func_9422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8967_call = mod.get_global_var('func_8967')
func_8969_call = mutated_mod.get_global_var('func_8969')
call_9428 = relay.TupleGetItem(func_8967_call(), 0)
call_9429 = relay.TupleGetItem(func_8969_call(), 0)
output = relay.Tuple([call_9428,])
output2 = relay.Tuple([call_9429,])
func_9457 = relay.Function([], output)
mod['func_9457'] = func_9457
mod = relay.transform.InferType()(mod)
output = func_9457()
func_9458 = relay.Function([], output)
mutated_mod['func_9458'] = func_9458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6675_call = mod.get_global_var('func_6675')
func_6677_call = mutated_mod.get_global_var('func_6677')
call_9477 = relay.TupleGetItem(func_6675_call(), 0)
call_9478 = relay.TupleGetItem(func_6677_call(), 0)
output = relay.Tuple([call_9477,])
output2 = relay.Tuple([call_9478,])
func_9525 = relay.Function([], output)
mod['func_9525'] = func_9525
mod = relay.transform.InferType()(mod)
output = func_9525()
func_9526 = relay.Function([], output)
mutated_mod['func_9526'] = func_9526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3727_call = mod.get_global_var('func_3727')
func_3728_call = mutated_mod.get_global_var('func_3728')
call_9637 = relay.TupleGetItem(func_3727_call(), 0)
call_9638 = relay.TupleGetItem(func_3728_call(), 0)
output = call_9637
output2 = call_9638
func_9670 = relay.Function([], output)
mod['func_9670'] = func_9670
mod = relay.transform.InferType()(mod)
mutated_mod['func_9670'] = func_9670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9670_call = mutated_mod.get_global_var('func_9670')
call_9671 = func_9670_call()
output = call_9671
func_9672 = relay.Function([], output)
mutated_mod['func_9672'] = func_9672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7723_call = mod.get_global_var('func_7723')
func_7725_call = mutated_mod.get_global_var('func_7725')
call_9752 = relay.TupleGetItem(func_7723_call(), 0)
call_9753 = relay.TupleGetItem(func_7725_call(), 0)
func_5970_call = mod.get_global_var('func_5970')
func_5972_call = mutated_mod.get_global_var('func_5972')
call_9755 = relay.TupleGetItem(func_5970_call(), 2)
call_9756 = relay.TupleGetItem(func_5972_call(), 2)
output = relay.Tuple([call_9752,call_9755,])
output2 = relay.Tuple([call_9753,call_9756,])
func_9761 = relay.Function([], output)
mod['func_9761'] = func_9761
mod = relay.transform.InferType()(mod)
mutated_mod['func_9761'] = func_9761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9761_call = mutated_mod.get_global_var('func_9761')
call_9762 = func_9761_call()
output = call_9762
func_9763 = relay.Function([], output)
mutated_mod['func_9763'] = func_9763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4808_call = mod.get_global_var('func_4808')
func_4809_call = mutated_mod.get_global_var('func_4809')
call_9783 = relay.TupleGetItem(func_4808_call(), 0)
call_9784 = relay.TupleGetItem(func_4809_call(), 0)
func_9084_call = mod.get_global_var('func_9084')
func_9088_call = mutated_mod.get_global_var('func_9088')
const_9792 = relay.const([True,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False,True,True,True,True,True,True,True,True,True,True,True,True,True,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,True,False,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,True,True,False,True,False,True,True,False,True,True,False,False,False,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False,False,False,True,True,True,True,False,False,False,True,False,True,False,False,False,True,True,False,False,False,False,True,True,True,True,False,True,False,True,True,False,True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,True,True,True,False,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,False,False,False,False,False,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,True,True,False,True,True,True,True,True,True,True,True,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,True,True,False,True,False,True,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,False,False], dtype = "bool")#candidate|9792|(432,)|const|bool
call_9791 = relay.TupleGetItem(func_9084_call(relay.reshape(const_9792.astype('bool'), [6, 6, 12]), relay.reshape(call_9783.astype('float32'), [780,]), ), 0)
call_9793 = relay.TupleGetItem(func_9088_call(relay.reshape(const_9792.astype('bool'), [6, 6, 12]), relay.reshape(call_9783.astype('float32'), [780,]), ), 0)
output = relay.Tuple([call_9783,call_9791,const_9792,])
output2 = relay.Tuple([call_9784,call_9793,const_9792,])
func_9803 = relay.Function([], output)
mod['func_9803'] = func_9803
mod = relay.transform.InferType()(mod)
mutated_mod['func_9803'] = func_9803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9803_call = mutated_mod.get_global_var('func_9803')
call_9804 = func_9803_call()
output = call_9804
func_9805 = relay.Function([], output)
mutated_mod['func_9805'] = func_9805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5970_call = mod.get_global_var('func_5970')
func_5972_call = mutated_mod.get_global_var('func_5972')
call_9810 = relay.TupleGetItem(func_5970_call(), 2)
call_9811 = relay.TupleGetItem(func_5972_call(), 2)
output = relay.Tuple([call_9810,])
output2 = relay.Tuple([call_9811,])
func_9816 = relay.Function([], output)
mod['func_9816'] = func_9816
mod = relay.transform.InferType()(mod)
output = func_9816()
func_9817 = relay.Function([], output)
mutated_mod['func_9817'] = func_9817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mod.get_global_var('func_2715')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_9827 = relay.TupleGetItem(func_2715_call(), 1)
call_9828 = relay.TupleGetItem(func_2717_call(), 1)
func_7619_call = mod.get_global_var('func_7619')
func_7620_call = mutated_mod.get_global_var('func_7620')
call_9836 = relay.TupleGetItem(func_7619_call(), 2)
call_9837 = relay.TupleGetItem(func_7620_call(), 2)
output = relay.Tuple([call_9827,call_9836,])
output2 = relay.Tuple([call_9828,call_9837,])
func_9852 = relay.Function([], output)
mod['func_9852'] = func_9852
mod = relay.transform.InferType()(mod)
mutated_mod['func_9852'] = func_9852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9852_call = mutated_mod.get_global_var('func_9852')
call_9853 = func_9852_call()
output = call_9853
func_9854 = relay.Function([], output)
mutated_mod['func_9854'] = func_9854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mod.get_global_var('func_2715')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_9880 = relay.TupleGetItem(func_2715_call(), 1)
call_9881 = relay.TupleGetItem(func_2717_call(), 1)
func_2059_call = mod.get_global_var('func_2059')
func_2061_call = mutated_mod.get_global_var('func_2061')
call_9895 = func_2059_call()
call_9896 = func_2059_call()
func_5550_call = mod.get_global_var('func_5550')
func_5552_call = mutated_mod.get_global_var('func_5552')
var_9900 = relay.var("var_9900", dtype = "float64", shape = (504,))#candidate|9900|(504,)|var|float64
call_9899 = relay.TupleGetItem(func_5550_call(relay.reshape(var_9900.astype('float64'), [504,])), 6)
call_9901 = relay.TupleGetItem(func_5552_call(relay.reshape(var_9900.astype('float64'), [504,])), 6)
func_7385_call = mod.get_global_var('func_7385')
func_7387_call = mutated_mod.get_global_var('func_7387')
call_9919 = func_7385_call()
call_9920 = func_7385_call()
output = relay.Tuple([call_9880,call_9895,call_9899,var_9900,call_9919,])
output2 = relay.Tuple([call_9881,call_9896,call_9901,var_9900,call_9920,])
func_9921 = relay.Function([var_9900,], output)
mod['func_9921'] = func_9921
mod = relay.transform.InferType()(mod)
mutated_mod['func_9921'] = func_9921
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9922 = relay.var("var_9922", dtype = "float64", shape = (504,))#candidate|9922|(504,)|var|float64
func_9921_call = mutated_mod.get_global_var('func_9921')
call_9923 = func_9921_call(var_9922)
output = call_9923
func_9924 = relay.Function([var_9922], output)
mutated_mod['func_9924'] = func_9924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7735_call = mod.get_global_var('func_7735')
func_7736_call = mutated_mod.get_global_var('func_7736')
call_9969 = func_7735_call()
call_9970 = func_7735_call()
output = call_9969
output2 = call_9970
func_9982 = relay.Function([], output)
mod['func_9982'] = func_9982
mod = relay.transform.InferType()(mod)
mutated_mod['func_9982'] = func_9982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9982_call = mutated_mod.get_global_var('func_9982')
call_9983 = func_9982_call()
output = call_9983
func_9984 = relay.Function([], output)
mutated_mod['func_9984'] = func_9984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7735_call = mod.get_global_var('func_7735')
func_7736_call = mutated_mod.get_global_var('func_7736')
call_10078 = func_7735_call()
call_10079 = func_7735_call()
func_4808_call = mod.get_global_var('func_4808')
func_4809_call = mutated_mod.get_global_var('func_4809')
call_10080 = relay.TupleGetItem(func_4808_call(), 0)
call_10081 = relay.TupleGetItem(func_4809_call(), 0)
func_3407_call = mod.get_global_var('func_3407')
func_3408_call = mutated_mod.get_global_var('func_3408')
call_10085 = func_3407_call()
call_10086 = func_3407_call()
output = relay.Tuple([call_10078,call_10080,call_10085,])
output2 = relay.Tuple([call_10079,call_10081,call_10086,])
func_10089 = relay.Function([], output)
mod['func_10089'] = func_10089
mod = relay.transform.InferType()(mod)
mutated_mod['func_10089'] = func_10089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10089_call = mutated_mod.get_global_var('func_10089')
call_10090 = func_10089_call()
output = call_10090
func_10091 = relay.Function([], output)
mutated_mod['func_10091'] = func_10091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7895_call = mod.get_global_var('func_7895')
func_7896_call = mutated_mod.get_global_var('func_7896')
call_10108 = relay.TupleGetItem(func_7895_call(), 0)
call_10109 = relay.TupleGetItem(func_7896_call(), 0)
output = call_10108
output2 = call_10109
func_10115 = relay.Function([], output)
mod['func_10115'] = func_10115
mod = relay.transform.InferType()(mod)
output = func_10115()
func_10116 = relay.Function([], output)
mutated_mod['func_10116'] = func_10116
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10120 = relay.var("var_10120", dtype = "int8", shape = ())#candidate|10120|()|var|int8
var_10121 = relay.var("var_10121", dtype = "int8", shape = (5, 1, 1))#candidate|10121|(5, 1, 1)|var|int8
bop_10122 = relay.minimum(var_10120.astype('int8'), var_10121.astype('int8')) # shape=(5, 1, 1)
uop_10125 = relay.exp(var_10121.astype('float64')) # shape=(5, 1, 1)
output = relay.Tuple([bop_10122,uop_10125,])
output2 = relay.Tuple([bop_10122,uop_10125,])
func_10127 = relay.Function([var_10120,var_10121,], output)
mod['func_10127'] = func_10127
mod = relay.transform.InferType()(mod)
var_10128 = relay.var("var_10128", dtype = "int8", shape = ())#candidate|10128|()|var|int8
var_10129 = relay.var("var_10129", dtype = "int8", shape = (5, 1, 1))#candidate|10129|(5, 1, 1)|var|int8
output = func_10127(var_10128,var_10129,)
func_10130 = relay.Function([var_10128,var_10129,], output)
mutated_mod['func_10130'] = func_10130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5946_call = mod.get_global_var('func_5946')
func_5947_call = mutated_mod.get_global_var('func_5947')
call_10154 = relay.TupleGetItem(func_5946_call(), 0)
call_10155 = relay.TupleGetItem(func_5947_call(), 0)
output = call_10154
output2 = call_10155
func_10177 = relay.Function([], output)
mod['func_10177'] = func_10177
mod = relay.transform.InferType()(mod)
mutated_mod['func_10177'] = func_10177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10177_call = mutated_mod.get_global_var('func_10177')
call_10178 = func_10177_call()
output = call_10178
func_10179 = relay.Function([], output)
mutated_mod['func_10179'] = func_10179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7251_call = mod.get_global_var('func_7251')
func_7252_call = mutated_mod.get_global_var('func_7252')
call_10197 = relay.TupleGetItem(func_7251_call(), 0)
call_10198 = relay.TupleGetItem(func_7252_call(), 0)
output = relay.Tuple([call_10197,])
output2 = relay.Tuple([call_10198,])
func_10199 = relay.Function([], output)
mod['func_10199'] = func_10199
mod = relay.transform.InferType()(mod)
output = func_10199()
func_10200 = relay.Function([], output)
mutated_mod['func_10200'] = func_10200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9852_call = mod.get_global_var('func_9852')
func_9854_call = mutated_mod.get_global_var('func_9854')
call_10201 = relay.TupleGetItem(func_9852_call(), 1)
call_10202 = relay.TupleGetItem(func_9854_call(), 1)
output = call_10201
output2 = call_10202
func_10209 = relay.Function([], output)
mod['func_10209'] = func_10209
mod = relay.transform.InferType()(mod)
mutated_mod['func_10209'] = func_10209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10209_call = mutated_mod.get_global_var('func_10209')
call_10210 = func_10209_call()
output = call_10210
func_10211 = relay.Function([], output)
mutated_mod['func_10211'] = func_10211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8321_call = mod.get_global_var('func_8321')
func_8322_call = mutated_mod.get_global_var('func_8322')
call_10254 = relay.TupleGetItem(func_8321_call(), 0)
call_10255 = relay.TupleGetItem(func_8322_call(), 0)
func_9670_call = mod.get_global_var('func_9670')
func_9672_call = mutated_mod.get_global_var('func_9672')
call_10259 = func_9670_call()
call_10260 = func_9670_call()
output = relay.Tuple([call_10254,call_10259,])
output2 = relay.Tuple([call_10255,call_10260,])
func_10265 = relay.Function([], output)
mod['func_10265'] = func_10265
mod = relay.transform.InferType()(mod)
output = func_10265()
func_10266 = relay.Function([], output)
mutated_mod['func_10266'] = func_10266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8651_call = mod.get_global_var('func_8651')
func_8652_call = mutated_mod.get_global_var('func_8652')
call_10334 = relay.TupleGetItem(func_8651_call(), 0)
call_10335 = relay.TupleGetItem(func_8652_call(), 0)
func_6906_call = mod.get_global_var('func_6906')
func_6907_call = mutated_mod.get_global_var('func_6907')
call_10340 = relay.TupleGetItem(func_6906_call(), 0)
call_10341 = relay.TupleGetItem(func_6907_call(), 0)
output = relay.Tuple([call_10334,call_10340,])
output2 = relay.Tuple([call_10335,call_10341,])
func_10343 = relay.Function([], output)
mod['func_10343'] = func_10343
mod = relay.transform.InferType()(mod)
mutated_mod['func_10343'] = func_10343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10343_call = mutated_mod.get_global_var('func_10343')
call_10344 = func_10343_call()
output = call_10344
func_10345 = relay.Function([], output)
mutated_mod['func_10345'] = func_10345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7895_call = mod.get_global_var('func_7895')
func_7896_call = mutated_mod.get_global_var('func_7896')
call_10357 = relay.TupleGetItem(func_7895_call(), 0)
call_10358 = relay.TupleGetItem(func_7896_call(), 0)
func_4471_call = mod.get_global_var('func_4471')
func_4473_call = mutated_mod.get_global_var('func_4473')
call_10361 = relay.TupleGetItem(func_4471_call(), 1)
call_10362 = relay.TupleGetItem(func_4473_call(), 1)
func_7385_call = mod.get_global_var('func_7385')
func_7387_call = mutated_mod.get_global_var('func_7387')
call_10371 = func_7385_call()
call_10372 = func_7385_call()
output = relay.Tuple([call_10357,call_10361,call_10371,])
output2 = relay.Tuple([call_10358,call_10362,call_10372,])
func_10380 = relay.Function([], output)
mod['func_10380'] = func_10380
mod = relay.transform.InferType()(mod)
mutated_mod['func_10380'] = func_10380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10380_call = mutated_mod.get_global_var('func_10380')
call_10381 = func_10380_call()
output = call_10381
func_10382 = relay.Function([], output)
mutated_mod['func_10382'] = func_10382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4471_call = mod.get_global_var('func_4471')
func_4473_call = mutated_mod.get_global_var('func_4473')
call_10383 = relay.TupleGetItem(func_4471_call(), 1)
call_10384 = relay.TupleGetItem(func_4473_call(), 1)
func_6346_call = mod.get_global_var('func_6346')
func_6347_call = mutated_mod.get_global_var('func_6347')
call_10389 = func_6346_call()
call_10390 = func_6346_call()
func_7117_call = mod.get_global_var('func_7117')
func_7118_call = mutated_mod.get_global_var('func_7118')
call_10395 = relay.TupleGetItem(func_7117_call(), 0)
call_10396 = relay.TupleGetItem(func_7118_call(), 0)
output = relay.Tuple([call_10383,call_10389,call_10395,])
output2 = relay.Tuple([call_10384,call_10390,call_10396,])
func_10402 = relay.Function([], output)
mod['func_10402'] = func_10402
mod = relay.transform.InferType()(mod)
output = func_10402()
func_10403 = relay.Function([], output)
mutated_mod['func_10403'] = func_10403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6532_call = mod.get_global_var('func_6532')
func_6534_call = mutated_mod.get_global_var('func_6534')
call_10444 = relay.TupleGetItem(func_6532_call(), 1)
call_10445 = relay.TupleGetItem(func_6534_call(), 1)
output = call_10444
output2 = call_10445
func_10456 = relay.Function([], output)
mod['func_10456'] = func_10456
mod = relay.transform.InferType()(mod)
output = func_10456()
func_10457 = relay.Function([], output)
mutated_mod['func_10457'] = func_10457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6426_call = mod.get_global_var('func_6426')
func_6428_call = mutated_mod.get_global_var('func_6428')
call_10463 = relay.TupleGetItem(func_6426_call(), 0)
call_10464 = relay.TupleGetItem(func_6428_call(), 0)
func_9921_call = mod.get_global_var('func_9921')
func_9924_call = mutated_mod.get_global_var('func_9924')
const_10477 = relay.const([9.658171,-3.111228,-1.214792,4.642584,-1.721284,7.716112,7.604113,6.770500,-4.714143,-4.120594,-5.140976,5.115591,-5.396800,3.163435,6.840265,9.810414,6.736737,4.583279,2.111130,5.904479,-7.195615,-3.383869,1.281079,9.076598,9.253926,-1.037787,-7.440485,4.534943,-3.074151,-0.624127,2.495490,-4.891320,4.023281,-9.467735,-2.596622,9.102094,0.043762,-7.229026,4.867022,-6.113045,-8.735099,-0.723701,-5.645839,7.479969,0.776036,-1.334021,3.378520,0.819586,8.836143,-2.585891,-1.140659,-2.785208,3.251365,-4.980827,4.983568,4.142253,1.292206,-6.789477,6.253512,1.592238,7.848340,8.352630,-0.905773,-4.404558,9.461087,-2.044431,-2.216966,2.237318,2.085712,-3.434240,-4.789546,-3.830220,-8.226594,-9.240068,-3.357767,-5.337554,1.886750,1.640044,-8.366571,0.973064,-1.189229,9.295399,9.017932,-3.971616,5.436316,1.174603,-1.042675,5.966001,-9.750258,5.965799,4.673299,-8.221224,0.418723,6.755840,8.090901,6.191745,-6.822619,-5.469946,5.430028,-9.147116,-5.458856,5.146049,-6.500094,0.959811,-7.133798,6.773784,-3.412327,-7.354149,6.226777,5.474325,1.613808,-8.909659,-3.411549,1.452211,3.202346,-6.726674,5.890115,8.744362,-8.495327,-8.197017,2.729838,4.297888,6.743079,9.505179,6.316324,-7.346178,-5.971207,-2.806029,4.325975,-8.344172,5.374880,-9.995248,-7.896374,-6.913541,-6.083207,8.224252,3.278941,0.932530,2.386548,9.886069,-9.505520,1.157880,8.170890,2.195015,3.331714,4.101682,-6.776594,5.570400,8.013905,1.261438,-2.694444,7.638706,1.670373,-2.894370,-6.647429,8.816576,8.854240,2.744078,-2.643223,-1.176597,-0.599953,7.200909,7.801163,-9.599315,-9.766034,8.297485,-2.163627,-8.908970,6.377172,-7.784936,4.783935,-2.902952,-0.875640,1.672246,-4.071251,-4.194419,9.487544,2.484986,-8.276466,-3.072758,-9.070490,9.271745,-4.430786,-9.114620,9.723157,0.726486,0.246058,2.468997,9.343014,-8.379893,-4.843729,6.980766,-4.968618,4.609686,-6.112402,-9.152877,6.319264,8.960629,1.448799,7.997631,2.548346,2.279019,2.990699,-7.460575,4.080697,-6.075908,-2.323635,-0.503813,0.172881,7.684040,7.944862,-6.222432,-7.237047,-8.609798,3.324201,-8.100141,8.655060,1.339902,-7.103747,4.058539,8.197562,-5.338014,7.686092,-8.038799,-7.531150,-4.516232,4.881215,-7.221980,2.901373,-1.974931,-7.964270,7.002577,-7.638582,-4.380863,-4.159242,4.043739,-8.760175,3.868628,-1.601570,-9.731566,-6.767372,-5.741008,1.642555,5.003026,1.656317,5.368636,-9.742826,8.092766,-9.435876,8.593629,-9.534218,-6.935806,-7.395759,-2.204267,7.164084,9.921833,-3.794188,-2.788731,-1.312086,-7.325078,0.219690,-3.331969,-5.701790,-2.468985,2.265332,7.706813,-2.981828,-3.094526,-6.842148,5.481402,7.436075,8.242120,-9.873532,1.783577,0.265959,5.813303,-6.361298,-1.399564,0.272273,6.045967,-5.090916,-9.611768,-5.683745,-5.418582,-2.696246,-6.110312,-0.203943,5.606651,5.853731,-3.065714,-3.985691,2.505469,5.900943,2.746776,1.576842,8.836061,2.760929,-9.954777,8.990337,-0.304745,9.452808,0.526534,-8.572340,-5.044279,-6.527630,-6.457396,-1.882264,3.683562,4.357322,9.143741,0.139844,2.388260,-1.455766,-7.390779,-7.877682,0.733995,5.565517,1.889212,0.730683,-7.098442,-9.966549,-1.772414,-8.172705,-5.403979,-2.794895,-8.625522,5.273863,8.978755,-5.531196,1.385420,-2.377344,-0.590822,0.732634,-7.725921,3.266172,-2.893521,0.904313,0.905088,-8.519074,-9.651304,4.396868,-2.100667,-0.940493,-0.997357,6.158195,9.645368,0.937061,-8.394009,8.086108,6.100791,8.390040,5.386627,5.629838,-0.414657,-0.531850,-4.991881,-7.638312,-4.357925,-7.501776,8.281807,-8.479822,-5.525629,-5.912566,4.115555,4.976030,-4.747459,-9.229084,2.894957,-3.344158,-7.566122,-4.550712,-7.508344,1.210859,5.082704,-9.545110,-7.376900,5.010930,-4.066429,6.991921,-9.777361,-0.647534,7.202703,-6.576499,-7.273759,-5.672717,7.170952,-5.314597,5.996976,1.799745,0.353479,4.567778,-6.524105,-7.008867,-7.467446,-2.232962,-2.410432,-3.096628,-1.550089,5.736389,1.958872,2.445777,-4.808466,5.700108,4.083624,9.641403,-9.900920,-9.316352,3.243964,9.315147,-5.200851,-6.016531,-4.267235,-9.788869,3.380398,-5.883003,-0.394575,-9.387267,8.598701,-2.735367,-1.399717,2.080808,9.380367,3.062070,4.376961,-9.837766,6.924540,-1.183075,6.210214,-4.001241,-2.318729,-6.324092,-4.971802,-8.302632,-9.179169,-8.470075,-9.330303,4.205282,-4.224780,-7.775834,7.687309,6.148970,-5.954282,-5.671491,8.948191,-1.300257,8.612037,-2.939873,7.825998,7.851098,2.340360,-0.941852,-7.527785,4.095231,3.270576,-3.456822,4.810742,4.662265,6.375840,2.361679,-6.859693,5.546160,-7.762525,8.882945,-6.755810,5.641487,-8.618234,9.693151,7.625966,8.701168,-0.269591,1.944940,-7.977597,4.441516,7.506582,-4.624502,0.844125,1.832022,2.935992,9.744000,-7.802490,2.945645,0.484909,9.374144,-6.228907,1.090242,-2.430086,-5.360295,9.968747,-6.184512,-1.593581,-7.689565,-8.781931,-9.696286,-7.857049,0.396183,-7.320656,6.353553,6.997014,1.378868,-0.165448,3.175315,7.135100,7.974503,3.556777], dtype = "float64")#candidate|10477|(504,)|const|float64
call_10476 = relay.TupleGetItem(func_9921_call(relay.reshape(const_10477.astype('float64'), [504,])), 3)
call_10478 = relay.TupleGetItem(func_9924_call(relay.reshape(const_10477.astype('float64'), [504,])), 3)
output = relay.Tuple([call_10463,call_10476,const_10477,])
output2 = relay.Tuple([call_10464,call_10478,const_10477,])
func_10480 = relay.Function([], output)
mod['func_10480'] = func_10480
mod = relay.transform.InferType()(mod)
output = func_10480()
func_10481 = relay.Function([], output)
mutated_mod['func_10481'] = func_10481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6662_call = mod.get_global_var('func_6662')
func_6663_call = mutated_mod.get_global_var('func_6663')
call_10542 = func_6662_call()
call_10543 = func_6662_call()
output = call_10542
output2 = call_10543
func_10550 = relay.Function([], output)
mod['func_10550'] = func_10550
mod = relay.transform.InferType()(mod)
mutated_mod['func_10550'] = func_10550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10550_call = mutated_mod.get_global_var('func_10550')
call_10551 = func_10550_call()
output = call_10551
func_10552 = relay.Function([], output)
mutated_mod['func_10552'] = func_10552
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10558 = relay.const(-2.403374, dtype = "float32")#candidate|10558|()|const|float32
var_10559 = relay.var("var_10559", dtype = "float32", shape = (2, 16, 7))#candidate|10559|(2, 16, 7)|var|float32
bop_10560 = relay.floor_mod(const_10558.astype('float32'), var_10559.astype('float32')) # shape=(2, 16, 7)
uop_10570 = relay.asinh(var_10559.astype('float64')) # shape=(2, 16, 7)
func_3180_call = mod.get_global_var('func_3180')
func_3183_call = mutated_mod.get_global_var('func_3183')
var_10577 = relay.var("var_10577", dtype = "float32", shape = (2145,))#candidate|10577|(2145,)|var|float32
call_10576 = relay.TupleGetItem(func_3180_call(relay.reshape(var_10577.astype('float32'), [2145,])), 1)
call_10578 = relay.TupleGetItem(func_3183_call(relay.reshape(var_10577.astype('float32'), [2145,])), 1)
func_7489_call = mod.get_global_var('func_7489')
func_7490_call = mutated_mod.get_global_var('func_7490')
call_10590 = relay.TupleGetItem(func_7489_call(), 1)
call_10591 = relay.TupleGetItem(func_7490_call(), 1)
uop_10593 = relay.tan(uop_10570.astype('float64')) # shape=(2, 16, 7)
bop_10596 = relay.equal(uop_10570.astype('bool'), relay.reshape(bop_10560.astype('bool'), relay.shape_of(uop_10570))) # shape=(2, 16, 7)
output = relay.Tuple([call_10576,var_10577,call_10590,uop_10593,bop_10596,])
output2 = relay.Tuple([call_10578,var_10577,call_10591,uop_10593,bop_10596,])
func_10615 = relay.Function([var_10559,var_10577,], output)
mod['func_10615'] = func_10615
mod = relay.transform.InferType()(mod)
var_10616 = relay.var("var_10616", dtype = "float32", shape = (2, 16, 7))#candidate|10616|(2, 16, 7)|var|float32
var_10617 = relay.var("var_10617", dtype = "float32", shape = (2145,))#candidate|10617|(2145,)|var|float32
output = func_10615(var_10616,var_10617,)
func_10618 = relay.Function([var_10616,var_10617,], output)
mutated_mod['func_10618'] = func_10618
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10678 = relay.var("var_10678", dtype = "uint64", shape = (3, 12, 6))#candidate|10678|(3, 12, 6)|var|uint64
var_10679 = relay.var("var_10679", dtype = "uint64", shape = (3, 12, 6))#candidate|10679|(3, 12, 6)|var|uint64
bop_10680 = relay.right_shift(var_10678.astype('uint64'), relay.reshape(var_10679.astype('uint64'), relay.shape_of(var_10678))) # shape=(3, 12, 6)
uop_10684 = relay.acos(bop_10680.astype('float64')) # shape=(3, 12, 6)
func_9982_call = mod.get_global_var('func_9982')
func_9984_call = mutated_mod.get_global_var('func_9984')
call_10686 = func_9982_call()
call_10687 = func_9982_call()
output = relay.Tuple([uop_10684,call_10686,])
output2 = relay.Tuple([uop_10684,call_10687,])
func_10691 = relay.Function([var_10678,var_10679,], output)
mod['func_10691'] = func_10691
mod = relay.transform.InferType()(mod)
var_10692 = relay.var("var_10692", dtype = "uint64", shape = (3, 12, 6))#candidate|10692|(3, 12, 6)|var|uint64
var_10693 = relay.var("var_10693", dtype = "uint64", shape = (3, 12, 6))#candidate|10693|(3, 12, 6)|var|uint64
output = func_10691(var_10692,var_10693,)
func_10694 = relay.Function([var_10692,var_10693,], output)
mutated_mod['func_10694'] = func_10694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6291_call = mod.get_global_var('func_6291')
func_6293_call = mutated_mod.get_global_var('func_6293')
call_10743 = func_6291_call()
call_10744 = func_6291_call()
output = call_10743
output2 = call_10744
func_10753 = relay.Function([], output)
mod['func_10753'] = func_10753
mod = relay.transform.InferType()(mod)
output = func_10753()
func_10754 = relay.Function([], output)
mutated_mod['func_10754'] = func_10754
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10772 = relay.var("var_10772", dtype = "float64", shape = (7, 14, 15))#candidate|10772|(7, 14, 15)|var|float64
const_10773 = relay.const([[[7.356312,8.769234,0.847830,1.172539,-2.616026,6.647922,3.921800,-9.357130,2.798286,9.941984,7.096952,8.373590,-3.158815,5.753602,-2.978065],[-7.574205,1.333802,2.161657,-4.562353,2.191898,-1.692567,-9.359792,1.747195,-6.125006,-0.709960,-1.428102,-1.585265,5.356106,6.048735,-6.692149],[9.762537,7.488660,-6.614093,-1.189956,0.992864,4.458357,-4.224981,2.580006,-9.114928,-6.920073,6.058239,-9.325966,8.595702,8.082440,-8.542969],[-9.345934,-2.281826,6.571958,-9.846797,6.503092,0.069346,9.918990,-3.479098,5.255366,-1.913826,0.904860,7.747910,0.282428,4.511302,5.010173],[-9.658239,-9.797166,5.641499,-5.956207,2.818197,-8.211806,-1.548842,-0.776284,-4.262911,-2.720540,-8.302067,7.229107,9.744881,-9.352845,5.148368],[7.846218,2.450717,-3.449123,1.544538,-6.205427,7.562713,4.893203,4.944770,-7.973065,-2.720309,-9.033307,0.638669,-7.860768,2.650965,0.973020],[-8.424354,-5.748876,-0.082542,-2.888820,9.922521,-6.313257,3.119340,9.074272,-4.554399,8.028576,-4.034005,0.500974,6.293450,-8.083099,-2.643986],[2.567914,-0.808913,-6.046062,-1.135675,-1.755045,7.231786,-1.874112,6.020113,9.589031,-6.080132,-9.104643,9.236252,-1.858084,7.556628,3.018447],[-1.011817,-0.423731,-7.438631,-9.186296,3.892253,5.867477,2.226634,-9.093593,7.857927,-0.405808,-1.684797,-0.763165,-6.664954,-6.347982,8.999780],[3.154765,-2.503344,3.978179,-0.539189,5.161499,-0.722321,4.807735,0.034364,-5.212552,8.082345,-0.600983,1.637069,2.852453,9.693207,9.026738],[9.355557,-1.212213,-7.907677,6.806526,1.742564,2.677973,1.020032,-1.144451,-1.259128,5.800515,4.830632,8.345841,-7.088932,2.695166,-4.695012],[-1.215351,6.783310,1.596604,-4.414725,5.190279,8.062470,-1.811035,5.632483,3.532168,0.948755,7.031690,-8.917812,-2.109360,-1.333145,-9.711633],[-6.649892,-5.507752,-3.231813,-4.109641,-5.308558,-8.885325,-3.429066,-7.696527,3.596192,8.427422,-3.491895,-2.944077,2.053354,3.330254,-0.190174],[-1.727442,1.906248,-0.010339,-1.554784,-8.459389,-3.949439,-7.567960,3.933446,-0.010728,4.660622,-5.404074,1.273603,-4.665765,0.590507,-5.790052]],[[-5.286478,-2.642208,2.892665,6.285595,3.790978,4.874735,-7.602730,-1.225503,-9.280069,9.334068,-6.915046,-2.712037,-3.185009,-8.006168,-2.100140],[6.897268,5.403051,-2.881831,-2.543155,-3.060954,-1.117796,-5.158284,-4.270240,-8.822136,8.948574,-2.927973,0.144668,3.214202,9.751882,7.881809],[-8.210272,-5.037032,7.080845,3.672799,-8.273373,5.336571,0.406420,-0.895165,0.604811,-7.455909,-4.431048,-1.987719,2.933379,6.152601,-5.595353],[2.443572,7.715419,-6.176448,-7.864462,-2.609816,-2.887683,7.190849,8.283970,0.601110,9.141008,-2.514408,-6.952530,9.600249,-9.959379,-5.205036],[-8.712270,-9.596676,-0.048578,-1.365423,-3.130931,1.869225,-1.234798,-6.326138,-8.934297,-5.541591,0.415907,0.901306,-5.677284,-7.500722,5.698173],[8.310454,-2.446928,8.994423,-3.473203,4.011591,9.685547,9.026886,-4.753744,0.769526,2.645778,-0.086904,-5.656083,-2.070255,-0.446605,-0.575625],[-5.326622,2.940761,0.451885,9.385773,-5.464490,-7.026399,8.091501,-4.079153,5.884198,8.168126,7.197894,5.969561,8.552881,-9.415050,-0.804785],[-7.021832,-3.763439,5.385294,-2.513408,-1.737112,-6.689733,-7.779941,-1.224728,0.240362,2.223057,5.482043,-7.825254,-6.169067,-9.146518,9.472693],[6.680171,9.607876,-0.681134,8.392290,7.063190,7.760902,-8.670350,-8.172241,-9.020846,-9.987142,-2.039386,2.691600,4.914459,-7.076057,-9.209334],[-4.469734,8.724139,-7.429627,3.778765,2.727359,5.648868,-0.435158,-5.850761,-4.234021,-5.768088,-1.130751,-2.642698,5.603482,-9.451649,-5.814701],[8.682877,-7.638777,-8.456343,-3.987915,0.182596,1.836727,8.422576,-2.393621,-0.690658,-1.677147,-2.756555,4.217213,-5.354890,-2.898351,-7.728191],[-2.164208,3.117332,8.526131,5.575939,2.440476,6.112474,4.017219,-9.504128,-9.901674,-6.059901,8.263800,-8.056949,-1.946384,8.953159,5.180639],[0.676014,-1.207672,-7.370337,-6.788847,1.289686,-2.693057,-3.796825,8.373011,-6.420455,8.311793,7.772276,3.249893,2.195882,-6.277532,-2.802476],[9.662022,4.049614,-2.954480,0.459302,7.080623,9.811598,8.912688,7.070284,-6.219344,-4.467455,4.057858,4.291598,1.082682,-1.953761,7.608850]],[[7.039879,-8.114920,-6.883955,6.207077,2.809564,2.753416,-2.707372,0.959091,5.478517,4.988952,5.944547,3.368415,0.632525,-4.487001,7.343850],[-3.563429,-1.716486,9.258227,-6.138548,-2.040157,-9.800284,-4.618128,-7.832039,-2.854491,1.439875,6.584548,-9.300074,2.564598,-7.185936,8.955230],[-0.132153,-9.847708,-2.036939,2.488211,-7.085536,4.180016,3.666678,-8.890529,2.840535,-6.293072,-2.704853,8.340228,-4.287842,6.831093,-4.982542],[-4.502585,-9.353387,6.662960,7.693204,6.507284,-6.767858,-3.800377,-3.158964,9.242441,7.921936,7.939011,-6.634810,2.732099,1.907131,5.226461],[3.272412,-2.610217,-2.674871,6.245677,8.178988,-2.482442,0.550244,7.119995,6.080383,5.595272,-9.970400,-6.936309,0.776202,-9.073543,-7.988477],[2.638644,6.725822,-1.798092,6.247018,1.908169,-6.627159,0.489982,-7.218980,-2.796795,8.861283,6.924125,-5.531815,-9.893791,1.961057,-6.243873],[-2.778955,2.421180,-2.116654,-4.914553,8.636474,-6.632075,1.095806,0.579751,-5.041957,0.794127,7.708363,-2.415551,-1.742426,-3.432480,0.608381],[-2.306678,-9.578822,7.350977,9.329961,-4.555150,-3.128793,-6.715261,-6.780160,9.432815,8.235656,4.376745,4.400371,-1.407367,-4.163075,7.701899],[-1.484065,-3.247190,-3.073674,2.028828,7.671462,-0.427695,-4.688105,9.993878,2.577058,1.304748,4.434647,8.742498,-8.583993,-0.803078,-1.605761],[-2.495309,6.174269,9.760676,7.544678,4.583253,2.786436,-6.625931,9.759062,-1.786264,-9.951214,0.354928,-7.420989,0.942723,6.844326,-3.413236],[2.182733,-3.187655,6.600684,-7.518030,-1.175244,7.773691,-3.345175,7.528671,2.886010,-3.060966,6.006699,7.763290,-0.923337,7.383980,-2.414054],[-0.374135,-2.350995,0.891662,-5.455604,-6.291034,3.638717,-2.848998,2.275901,7.583161,-1.183073,7.196072,-0.423385,6.918235,0.355821,-6.493495],[-6.142879,1.796885,1.462307,-1.697041,9.552010,-0.310977,-3.261356,-9.994491,-6.772982,-4.361194,6.444002,-9.566443,-2.279008,-8.338238,-6.291904],[-0.957103,5.031194,-2.113005,-5.212864,7.197544,6.403241,-5.643655,-6.217943,-6.298272,7.612532,7.600453,-3.367044,-3.908296,-7.873726,-6.601157]],[[1.422404,9.629529,-2.636254,1.852053,5.941217,-6.218906,-0.493327,-0.349456,4.564653,1.842087,-4.897679,0.415608,-9.085653,6.361952,1.941922],[-9.380067,-4.441634,6.871284,5.350493,9.961093,5.173053,7.107887,4.234870,5.168821,-6.899078,6.865568,9.787413,5.962964,-3.042508,-8.489272],[-7.887954,-5.768642,0.100040,-0.922250,-7.322037,2.951865,4.063221,8.150878,-1.463752,-6.042176,4.566260,3.549240,-8.456830,-5.729672,-2.079175],[-8.341142,6.923568,1.070014,2.525572,6.293144,-9.691510,6.272372,-3.798244,-9.638714,4.529353,2.397254,-3.489945,-4.350926,-2.240971,7.693983],[7.165801,3.081544,-5.049924,8.823760,-8.684449,4.503769,0.568244,0.395701,0.403777,9.093478,-9.185228,4.590837,7.895475,3.598781,-6.044565],[-9.384730,8.980565,5.270513,3.942155,4.883410,4.785115,-8.873452,2.441343,-3.108471,4.685167,-0.075058,8.562600,-4.856319,7.527112,-0.419778],[-9.623766,2.784969,-3.960359,8.361087,-1.342725,-0.076954,4.982099,-8.952018,-2.584850,4.438004,-9.161987,0.220888,2.169950,3.919539,7.935937],[-7.754686,-1.777760,1.718243,-9.090376,-9.901704,0.854950,2.099483,6.744480,-6.483553,-8.264241,8.177254,5.930294,-1.179284,-4.787274,7.151968],[6.733420,3.618723,0.484893,5.915999,8.719646,-3.228857,-3.470128,8.867083,-3.789967,1.789160,3.997361,8.414197,4.064570,5.784829,1.564988],[9.393299,0.867095,5.225170,-3.034431,-6.814331,-9.184193,-8.578895,-0.410964,9.835020,5.720040,-6.484526,1.373485,1.661999,4.918777,4.650240],[5.126291,-2.820225,1.171640,-6.733275,-0.994730,-2.225531,7.553049,6.962490,-4.467666,-8.529265,9.971074,2.415165,4.342754,9.303120,0.337527],[1.139725,8.211063,7.460959,0.683218,-9.131343,0.204518,8.449193,-7.115497,-2.686368,3.543088,-7.051920,4.446118,7.366981,0.141871,-9.961894],[2.318211,2.995025,9.300198,-1.490266,-0.741207,-0.266259,3.162245,0.879926,-0.053839,-8.004452,-6.787476,-5.069734,-1.910205,-1.380435,-0.667372],[8.998054,0.694541,-9.226354,4.969531,2.656118,-4.980261,3.052869,8.728415,7.804243,0.973562,4.292681,-7.176283,3.316586,-6.848765,-1.851420]],[[-2.331289,-1.545426,9.114673,-4.507702,1.729117,-7.380437,5.817587,4.924027,-5.925332,-1.654130,3.390756,-5.766282,3.662793,-9.454165,2.057962],[-3.228218,-7.199334,0.055296,-5.829703,0.861899,-2.005750,9.624629,3.063726,-0.568278,8.331897,0.473775,1.324314,-9.648243,-0.289214,-9.047064],[-5.761253,9.236445,9.757284,-6.567606,4.690219,-2.284424,3.368563,3.328405,-0.154340,5.149599,1.273836,-2.947089,-1.512685,9.651716,-9.659518],[-9.727998,0.105168,0.223641,4.027850,-5.218937,5.551922,-9.207413,-9.671596,-5.216682,2.368008,-0.357948,-3.366387,9.944355,1.746080,9.819597],[-1.199349,-3.388422,-5.856978,0.167187,2.317646,-9.457520,-1.934635,-6.841130,-1.271468,4.748449,-4.786675,-8.595973,1.499178,1.048524,5.298608],[-5.005996,-8.592651,4.648035,-5.461176,-6.490568,-8.976946,0.201808,4.908962,8.802066,-7.303005,-9.676146,-4.957596,0.749803,-6.463611,-5.918563],[-7.793807,-0.076754,-1.802669,2.468023,-2.827638,-7.310469,-5.676574,8.652708,7.696023,7.331244,6.847602,-9.468485,6.313128,3.910861,-8.536563],[8.414172,-2.099096,-3.757186,1.896849,-7.118431,2.318340,-5.735854,-8.098781,-0.693095,-8.801317,0.770423,4.030168,7.863971,1.122658,-8.347313],[-5.881942,-2.779833,1.973294,9.158926,-4.531742,-1.877262,8.534214,8.722726,-2.754298,5.280696,-2.572719,9.376377,4.065941,-1.443626,1.148296],[-2.871053,-5.121692,8.470330,4.423217,-3.918618,-1.290491,-6.942846,7.784435,0.806755,3.243066,-9.646102,2.084599,0.310408,-9.639207,8.674188],[-3.624862,5.254735,6.500749,2.243024,-8.778025,-6.928809,-2.666563,-1.127664,4.935603,-3.774176,-0.427283,-6.471789,-2.890884,-7.834841,1.064818],[-0.790128,-4.956902,-0.759326,-4.697038,-9.730342,6.200733,0.829104,2.905799,2.463226,5.833126,4.857252,-6.890206,9.668369,7.462353,5.980995],[-4.020686,2.065919,7.421933,-3.572596,9.445092,-9.883475,0.966201,-2.246018,4.750956,7.456691,2.098768,3.111349,-7.891744,-7.104384,-1.872290],[-6.663244,-9.136675,8.685017,7.137751,2.065161,0.019012,4.046058,-2.835381,3.655324,5.080490,-5.996101,-9.509452,-8.706326,5.181303,-1.741270]],[[-5.563997,-7.830269,-5.913512,8.408692,3.034823,-9.647564,-0.997835,0.494220,-5.595165,2.679306,-7.771397,-7.369416,4.318319,9.810537,-4.810970],[-5.848953,2.581293,0.139612,0.548562,9.090217,9.575330,8.058716,-3.806626,-6.132807,0.448444,-5.639496,-6.131465,-8.298230,-6.358995,-3.093671],[-2.390572,7.110215,1.864901,2.817450,4.471312,1.465132,4.729717,8.801183,4.092576,-2.508517,0.909546,-4.209636,4.507454,3.893105,9.480884],[-7.311318,-5.514014,0.620647,-4.666262,-9.419811,0.944819,8.116800,-4.956202,-1.844531,-3.736795,3.710850,-0.993398,7.354009,-7.708954,6.215357],[-4.564222,1.568858,5.695924,-9.706046,-4.275044,-1.984162,-3.434590,-5.833397,-6.033091,7.049450,3.998629,-9.022168,-7.441845,6.681403,-2.963111],[-1.608934,1.010184,6.609321,-3.474767,-3.816460,5.067978,3.414774,-6.748742,-4.744661,-3.770522,-0.933127,-2.222603,9.979070,-9.625683,-5.001464],[4.044609,-5.352655,-4.110838,-3.435290,4.256916,5.305148,4.784418,0.729129,-4.827089,-8.950572,8.628717,-0.376082,9.391718,-7.002443,4.607693],[-3.432465,-9.316277,4.127090,-6.987167,6.412767,-9.969263,-0.255018,9.862970,-5.358873,-8.411566,4.430703,2.835006,6.078108,8.986137,-3.695733],[-5.795019,-6.993295,0.152323,-2.915764,2.766697,-1.787060,-3.727889,9.042473,-8.207887,-4.995551,-2.618412,-4.348080,4.086212,-7.947605,4.097604],[1.201999,6.101914,-6.945806,0.207268,-2.845863,3.538756,9.916005,-6.457149,0.362273,-7.260804,0.308058,8.408873,-6.707465,3.156377,-1.175413],[0.383401,8.596157,1.183483,-9.983415,-9.984829,7.199994,3.676325,3.042763,6.078591,-0.240216,-3.698282,-7.133964,0.923060,7.944051,9.039255],[2.361795,1.985373,9.532370,4.161529,-2.025427,-2.990733,0.828204,-3.383763,7.508350,0.477953,4.590981,5.370807,-0.176388,-2.982891,-0.705591],[0.837290,-5.418994,-5.900323,6.427391,1.623974,2.946651,1.637955,2.268396,9.086852,8.616203,-2.882882,2.161067,-8.757193,-7.530697,8.574910],[-9.475364,8.937001,9.928139,-7.296709,3.498765,-0.076466,4.114223,3.080234,3.782514,-8.855574,8.999218,2.678190,-8.709686,-1.002768,-4.993353]],[[6.160085,-5.339977,-1.664373,-3.100071,-3.842821,-1.426102,-1.743630,-7.444901,7.027574,8.656104,-4.895814,-5.474797,1.077637,1.575873,-2.427906],[9.423001,-5.124136,-3.550054,7.902730,9.002836,-1.491590,9.654905,-1.608666,-5.110603,9.439965,1.640333,-1.983491,-1.387140,-5.959616,-6.529473],[2.777144,8.105050,9.544050,-4.714154,-6.729860,8.085308,-5.369913,-3.774135,-3.981898,-0.622953,-0.715641,-5.108402,9.852996,-0.538566,-4.890603],[-4.643337,-7.759057,-1.070708,8.274166,-0.426063,-9.429111,-1.855936,-8.716043,6.603690,3.513224,2.565999,9.697342,2.964874,-3.901846,6.101852],[-9.888425,-9.784983,3.119600,-0.130117,-2.277000,-6.149287,-9.740063,1.544243,7.390346,-9.027479,-4.280025,-1.441764,4.612466,-0.386596,7.191427],[-9.097659,-7.385638,-5.632096,6.005974,-6.047501,-1.390513,5.046051,-1.294990,1.318994,9.619968,-1.318697,0.471501,-4.108753,-3.562972,-8.724889],[-8.343042,4.209454,-3.012261,-8.570764,7.084750,8.610020,2.950530,-0.734389,3.071484,-3.302497,5.072984,-0.891276,7.316840,9.872177,6.527587],[-9.344567,1.740342,-2.950980,6.406898,6.275198,-7.634739,-9.555033,1.316619,7.400704,6.604035,-9.742781,-3.167182,7.134117,6.394900,-4.792977],[7.763001,-6.137409,-6.674666,-1.391576,1.133127,-5.650172,-4.535687,8.911903,-4.819607,-5.694013,-8.684285,-2.386343,8.728322,6.755259,5.109942],[2.201118,-1.062656,5.883397,6.294232,-0.438199,1.295459,-7.699963,-8.074441,-9.323927,-1.818360,-8.354026,6.459699,1.822495,-9.251017,0.772045],[-9.631544,-7.036267,-7.225777,-6.507573,3.242382,-4.812284,0.669006,-6.335509,-1.803202,-6.952102,9.287438,-0.526976,-5.042924,2.098188,-0.092959],[-5.742441,-6.148794,9.934147,-6.084819,-9.852406,-4.801613,-7.998751,4.940168,1.198951,1.291456,-5.541431,-7.771391,8.284868,-1.115206,-1.933490],[7.214331,-6.649932,5.127483,-3.379615,8.736102,-5.109879,2.555157,4.477391,7.832805,2.912352,3.499875,-5.332605,-3.419321,-9.913145,-0.613396],[4.174185,4.885174,8.814193,0.481640,-5.608618,-5.796936,-5.202699,7.068150,-3.893648,6.821559,-3.937097,9.083472,-5.572876,-2.193906,1.904697]]], dtype = "float64")#candidate|10773|(7, 14, 15)|const|float64
bop_10774 = relay.divide(var_10772.astype('float64'), relay.reshape(const_10773.astype('float64'), relay.shape_of(var_10772))) # shape=(7, 14, 15)
func_6662_call = mod.get_global_var('func_6662')
func_6663_call = mutated_mod.get_global_var('func_6663')
call_10783 = func_6662_call()
call_10784 = func_6662_call()
func_8019_call = mod.get_global_var('func_8019')
func_8020_call = mutated_mod.get_global_var('func_8020')
call_10785 = relay.TupleGetItem(func_8019_call(), 0)
call_10786 = relay.TupleGetItem(func_8020_call(), 0)
uop_10789 = relay.cosh(var_10772.astype('float64')) # shape=(7, 14, 15)
output = relay.Tuple([bop_10774,call_10783,call_10785,uop_10789,])
output2 = relay.Tuple([bop_10774,call_10784,call_10786,uop_10789,])
func_10804 = relay.Function([var_10772,], output)
mod['func_10804'] = func_10804
mod = relay.transform.InferType()(mod)
mutated_mod['func_10804'] = func_10804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10805 = relay.var("var_10805", dtype = "float64", shape = (7, 14, 15))#candidate|10805|(7, 14, 15)|var|float64
func_10804_call = mutated_mod.get_global_var('func_10804')
call_10806 = func_10804_call(var_10805)
output = call_10806
func_10807 = relay.Function([var_10805], output)
mutated_mod['func_10807'] = func_10807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8872_call = mod.get_global_var('func_8872')
func_8874_call = mutated_mod.get_global_var('func_8874')
call_10867 = relay.TupleGetItem(func_8872_call(), 0)
call_10868 = relay.TupleGetItem(func_8874_call(), 0)
output = call_10867
output2 = call_10868
func_10877 = relay.Function([], output)
mod['func_10877'] = func_10877
mod = relay.transform.InferType()(mod)
output = func_10877()
func_10878 = relay.Function([], output)
mutated_mod['func_10878'] = func_10878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6038_call = mod.get_global_var('func_6038')
func_6039_call = mutated_mod.get_global_var('func_6039')
call_10928 = relay.TupleGetItem(func_6038_call(), 0)
call_10929 = relay.TupleGetItem(func_6039_call(), 0)
output = call_10928
output2 = call_10929
func_10954 = relay.Function([], output)
mod['func_10954'] = func_10954
mod = relay.transform.InferType()(mod)
mutated_mod['func_10954'] = func_10954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10954_call = mutated_mod.get_global_var('func_10954')
call_10955 = func_10954_call()
output = call_10955
func_10956 = relay.Function([], output)
mutated_mod['func_10956'] = func_10956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6675_call = mod.get_global_var('func_6675')
func_6677_call = mutated_mod.get_global_var('func_6677')
call_10983 = relay.TupleGetItem(func_6675_call(), 0)
call_10984 = relay.TupleGetItem(func_6677_call(), 0)
func_5094_call = mod.get_global_var('func_5094')
func_5096_call = mutated_mod.get_global_var('func_5096')
call_10990 = relay.TupleGetItem(func_5094_call(), 0)
call_10991 = relay.TupleGetItem(func_5096_call(), 0)
func_9084_call = mod.get_global_var('func_9084')
func_9088_call = mutated_mod.get_global_var('func_9088')
var_10993 = relay.var("var_10993", dtype = "bool", shape = (432,))#candidate|10993|(432,)|var|bool
call_10992 = relay.TupleGetItem(func_9084_call(relay.reshape(var_10993.astype('bool'), [6, 6, 12]), relay.reshape(call_10983.astype('float32'), [780,]), ), 0)
call_10994 = relay.TupleGetItem(func_9088_call(relay.reshape(var_10993.astype('bool'), [6, 6, 12]), relay.reshape(call_10983.astype('float32'), [780,]), ), 0)
func_8801_call = mod.get_global_var('func_8801')
func_8803_call = mutated_mod.get_global_var('func_8803')
call_10996 = relay.TupleGetItem(func_8801_call(), 0)
call_10997 = relay.TupleGetItem(func_8803_call(), 0)
output = relay.Tuple([call_10983,call_10990,call_10992,var_10993,call_10996,])
output2 = relay.Tuple([call_10984,call_10991,call_10994,var_10993,call_10997,])
func_11013 = relay.Function([var_10993,], output)
mod['func_11013'] = func_11013
mod = relay.transform.InferType()(mod)
var_11014 = relay.var("var_11014", dtype = "bool", shape = (432,))#candidate|11014|(432,)|var|bool
output = func_11013(var_11014)
func_11015 = relay.Function([var_11014], output)
mutated_mod['func_11015'] = func_11015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mod.get_global_var('func_7874')
func_7876_call = mutated_mod.get_global_var('func_7876')
call_11066 = relay.TupleGetItem(func_7874_call(), 0)
call_11067 = relay.TupleGetItem(func_7876_call(), 0)
func_9368_call = mod.get_global_var('func_9368')
func_9370_call = mutated_mod.get_global_var('func_9370')
call_11100 = relay.TupleGetItem(func_9368_call(), 0)
call_11101 = relay.TupleGetItem(func_9370_call(), 0)
output = relay.Tuple([call_11066,call_11100,])
output2 = relay.Tuple([call_11067,call_11101,])
func_11129 = relay.Function([], output)
mod['func_11129'] = func_11129
mod = relay.transform.InferType()(mod)
output = func_11129()
func_11130 = relay.Function([], output)
mutated_mod['func_11130'] = func_11130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7776_call = mod.get_global_var('func_7776')
func_7777_call = mutated_mod.get_global_var('func_7777')
call_11168 = relay.TupleGetItem(func_7776_call(), 0)
call_11169 = relay.TupleGetItem(func_7777_call(), 0)
output = call_11168
output2 = call_11169
func_11178 = relay.Function([], output)
mod['func_11178'] = func_11178
mod = relay.transform.InferType()(mod)
output = func_11178()
func_11179 = relay.Function([], output)
mutated_mod['func_11179'] = func_11179
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11185 = relay.var("var_11185", dtype = "uint8", shape = (6, 8, 15))#candidate|11185|(6, 8, 15)|var|uint8
const_11186 = relay.const([[[-1,7,-5,2,9,-8,-2,-3,8,-2,2,2,-6,1,-8],[-8,-3,4,7,8,5,1,5,-2,9,5,10,5,2,6],[10,10,6,3,-7,9,9,7,7,-4,-1,-8,-8,7,-9],[-1,-4,4,2,-3,-8,-1,4,10,7,-8,7,-1,8,-5],[10,4,7,-6,-5,8,-3,2,-6,1,-10,-2,-4,2,-1],[-7,-4,-7,-10,8,1,-1,-4,4,-9,1,-3,-6,8,-8],[-6,-3,7,1,-2,5,6,10,10,8,-10,-9,-6,9,-3],[-4,-4,-9,-7,-10,-9,4,2,-5,-9,-2,-4,1,5,3]],[[-1,-5,5,7,4,3,-4,-1,3,1,-1,-3,3,4,-6],[-4,-7,1,2,-6,-7,10,-7,8,-6,-4,-1,1,-10,1],[-5,2,-3,4,1,4,8,-9,-6,5,-5,9,5,-9,-9],[1,-7,-6,6,-8,9,-2,7,-1,8,6,-4,-1,-9,4],[-3,9,-7,-2,4,-9,3,9,-5,-4,-6,-8,7,7,-2],[-1,-7,-6,-5,7,-8,2,10,-1,4,7,8,-8,7,-9],[8,5,-10,10,-9,7,-5,-9,2,9,-7,-6,4,-8,-9],[9,6,-3,-4,4,-9,-1,1,1,-1,-9,-9,-5,-9,3]],[[1,7,7,-4,2,6,-10,-8,-8,4,9,10,-10,-2,-8],[-9,8,-6,6,6,9,-9,-9,-10,8,-6,7,9,-1,-8],[-4,7,1,-7,-5,-4,6,-5,-4,4,7,1,6,-3,8],[5,8,-6,-5,-5,5,-7,5,-6,5,1,9,-9,-1,-3],[4,5,-2,-1,1,7,7,8,4,-1,3,-4,-3,1,-5],[-6,-4,1,9,1,7,-9,2,6,-1,-8,8,-9,4,6],[-4,-8,-3,-2,-10,6,3,-4,3,4,9,-8,-3,-8,7],[-6,-8,9,1,8,8,-1,-9,7,-6,-6,4,-2,3,6]],[[5,2,6,5,-5,-1,6,4,-10,9,-6,1,-1,1,-2],[-5,-10,-10,-8,-6,-7,8,10,1,4,5,5,2,-10,1],[1,-1,-2,-7,-8,-5,-9,-10,-4,-10,1,10,3,3,6],[-9,1,-8,-3,-5,-8,-5,3,6,6,-8,1,-2,-2,2],[-8,-3,-3,4,-5,-6,-9,-10,6,-4,1,-7,9,-9,-4],[-9,1,1,-2,-9,-4,-10,6,9,-5,4,4,10,-1,-6],[-1,-5,-6,8,3,-7,-2,2,-6,-2,2,6,-5,9,7],[-1,8,-3,-6,4,-10,-6,7,-2,7,-3,8,-4,8,-1]],[[9,-3,1,5,9,-5,-10,3,1,2,9,-8,5,-2,-7],[7,-8,-5,10,-4,-9,8,-2,-7,-8,10,4,-4,9,-3],[-10,2,-5,-5,-9,4,10,9,4,-4,7,-10,3,2,-10],[8,-7,10,-1,7,-5,-10,-6,8,5,4,7,2,8,2],[9,9,-4,10,-3,-7,-9,-3,6,-6,-3,-2,2,10,6],[-7,-6,10,5,-7,-8,-7,3,-3,1,-9,-10,5,-5,-4],[-9,-5,-9,-6,7,-3,2,-4,-9,-4,-6,5,6,-10,6],[-1,4,1,2,-6,-5,-8,8,-9,-8,-5,10,2,9,6]],[[-3,10,4,1,-1,9,-7,-10,-8,1,-6,2,-6,1,-8],[3,-3,-9,6,-4,-8,-2,9,-1,5,-3,-8,-6,-3,4],[-3,1,9,4,3,-2,-3,7,8,-9,9,1,-8,4,3],[1,4,-3,-5,6,-7,8,-3,-1,4,-4,-1,10,4,-3],[1,-3,7,8,3,9,-4,-9,5,-10,10,-1,8,2,-7],[-9,8,-3,-5,6,-5,-7,5,6,6,8,9,-4,-3,9],[1,10,9,2,-4,-4,-7,-10,7,-2,-1,8,2,-6,-10],[6,-4,-9,-10,9,-3,-5,-3,3,-10,-4,7,-10,4,5]]], dtype = "uint8")#candidate|11186|(6, 8, 15)|const|uint8
bop_11187 = relay.right_shift(var_11185.astype('uint8'), relay.reshape(const_11186.astype('uint8'), relay.shape_of(var_11185))) # shape=(6, 8, 15)
output = bop_11187
output2 = bop_11187
func_11192 = relay.Function([var_11185,], output)
mod['func_11192'] = func_11192
mod = relay.transform.InferType()(mod)
var_11193 = relay.var("var_11193", dtype = "uint8", shape = (6, 8, 15))#candidate|11193|(6, 8, 15)|var|uint8
output = func_11192(var_11193)
func_11194 = relay.Function([var_11193], output)
mutated_mod['func_11194'] = func_11194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5265_call = mod.get_global_var('func_5265')
func_5267_call = mutated_mod.get_global_var('func_5267')
call_11208 = func_5265_call()
call_11209 = func_5265_call()
output = relay.Tuple([call_11208,])
output2 = relay.Tuple([call_11209,])
func_11218 = relay.Function([], output)
mod['func_11218'] = func_11218
mod = relay.transform.InferType()(mod)
mutated_mod['func_11218'] = func_11218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11218_call = mutated_mod.get_global_var('func_11218')
call_11219 = func_11218_call()
output = call_11219
func_11220 = relay.Function([], output)
mutated_mod['func_11220'] = func_11220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6662_call = mod.get_global_var('func_6662')
func_6663_call = mutated_mod.get_global_var('func_6663')
call_11224 = func_6662_call()
call_11225 = func_6662_call()
func_5590_call = mod.get_global_var('func_5590')
func_5593_call = mutated_mod.get_global_var('func_5593')
var_11250 = relay.var("var_11250", dtype = "float64", shape = (240,))#candidate|11250|(240,)|var|float64
call_11249 = func_5590_call(relay.reshape(var_11250.astype('float64'), [10, 12, 2]))
call_11251 = func_5590_call(relay.reshape(var_11250.astype('float64'), [10, 12, 2]))
func_4764_call = mod.get_global_var('func_4764')
func_4767_call = mutated_mod.get_global_var('func_4767')
const_11257 = relay.const([-0.776122,5.479732,-1.204956,1.824305,-6.502515,3.172259,5.418789,0.459241,6.315342,-2.146711,-0.853611,8.681008,-8.839563,6.864555,8.794219,-1.768019,0.961882,9.071405,9.481159,6.122124,-2.105649,-5.564111,-3.840434,-6.726936,-8.293163,-2.692677,-7.878646,-2.821408,3.195245,-5.268407,-5.853028,-3.677670,7.558636,4.757475,-8.299076,-6.209892,6.164694,1.451430,-7.625752,9.432113,-8.062875,-8.904556,-9.421263,9.833423,-3.222869,-5.584332,-3.197513,2.740109,-3.256003,-4.795067,6.323395,1.985383,2.998363,6.271027,7.582268,4.552443,-8.947821,-8.896449,-4.712437,-8.060826,9.613863,9.106386,6.489967,5.198823,6.521446,2.143790,-1.607421,4.221499,8.516577,-5.677996,-8.793893,-9.014710,3.440202,9.643099,-3.958048,-7.750708,-7.795756,0.803015,-1.361610,-0.020305,0.793473,7.183832,-7.454897,4.469571,5.908138,-2.959510,0.534926,-5.826897,6.647505,-9.797835,-8.183570,-3.377787,-8.495317,-4.141428,-2.837458,-4.653978,-2.333368,-1.609143,3.412476,-0.120618,2.761762,-1.331367,0.488425,6.723844,-2.463554,-1.615000,-4.831191,7.437603,9.515684,-9.713216,-2.982508,6.229060,-2.141868,-6.070238,1.708104,-2.933773,0.739679,-4.460303,7.531947,-1.479997,7.679343,-9.654907,7.761522,9.882314,-4.799407,-2.094423,-0.348411,2.615634,8.721785,-0.175445,3.506398,0.721539,5.087327,1.449991,1.872734,-5.487371,3.797952,4.556019,6.006448,8.123446,-0.074667,-3.834313,3.929439,6.443609,4.731741,3.280566,-7.326173,-9.304323,-1.041712,-1.344397,6.318131,2.990338,-8.515904,0.627482,3.414375,2.559934,-1.921866,-7.044435,6.508138,6.145536,-1.535174,8.374465,8.497611,-3.900333,-9.321710,-3.430154,-0.875015,-2.066864,-8.564802,-7.510911,-2.301223,0.937719,3.457910,-1.668706,4.281071,-5.473208,-1.228894,-3.854602,8.742649,-5.530920,3.123666,0.664029,-7.222233,-4.933255,5.241586,-6.567948,-7.702209,-7.816377,5.721251,5.899218,-1.366979,-7.744490,5.868473,2.512900,-1.740296,-0.217668,-3.122390,2.004881,3.034332,2.429916,-8.856873,-6.955357,6.659008,-2.868940,0.142270,2.257650,7.317536,7.126168,-3.421655,5.112532,-3.788558,-5.040619,3.119931,6.782447,-2.993725,7.977419,-3.449924,6.576597,8.601841,-0.099003,9.580660,-7.787750,-6.871340,-0.316398,-9.812842,8.270338,6.618920,8.315974,2.232777,-9.539919,1.491702,-4.838304,1.479574,6.353659,5.285886,-0.476928,4.344715,-0.241007,-7.846114,-8.106371,-0.899822,0.702657,-0.066537,4.138138,4.328923,6.828598,5.338661,-9.768325,0.653571,7.634388,4.714470,-5.013169,5.405059,-0.961549,4.486609,-3.144159,-5.180245,7.338261,6.834477,-3.334008,-6.838468,4.103978,1.636234,4.557191,-0.684215,-3.227940,-6.647497,-3.520839,3.589415,8.192961,-0.906355,-6.160452,3.424428,8.239680,-9.428966,8.348926,2.997856,5.784300,-9.086840,3.676673,7.067383,-9.130267,-9.191612,3.691650,-7.267891,-4.796022,5.427180,2.208186,5.373622,4.214739,6.252495,-7.494127,4.964194,1.043525,-1.547509,-9.518078,-6.296391,7.767124,-3.828766,-0.771886,0.169097,9.765065,-2.837373,8.746342,2.655517,3.773074,0.565604,9.132846,6.431142,-4.419935,9.016919,-0.658774,-2.420721,2.351485,-8.206671,8.705899,-1.536081,-7.888492,2.750555,-1.243383,-4.194627,5.685898,-5.607277,7.491834,-6.794753,8.561613,-3.884393,0.850166,-3.040491,2.065607,0.002220,-5.321768,2.627711,-5.340662,9.162364,8.325846,-7.824454,7.575646,0.311890,7.938739,5.146919,-9.447285,-8.060085,-3.450374,-4.173143,0.001668,-6.085605,7.829594,0.455931,-3.021278,5.938962,-2.795505,5.074976,-2.210850,-8.846999,-0.728582,-5.278694,-6.756626,-3.619411,7.688104,-6.156441,-8.904131,8.969631,7.416188,7.808894,9.284843,6.880467,9.779298,6.127813,-2.642574,2.637732,2.464123,3.168041,-7.579348,-7.801942,-7.432797,-8.653494,3.839944,-0.028723,-1.083566,4.874984,-9.487731,-1.071703,8.233910,4.183469,2.274274,-3.501314,7.425696,-0.930788,7.290965,9.929565,-3.725744,4.811379,2.341331,-1.263026,4.696389,2.871095,-8.119110,0.742744,-9.710250,7.084058,7.491280,-3.896911,1.246939,-6.577037,-7.296638,-2.450870,-6.947133,-3.504053,-0.343682,9.718889,-1.328137,2.319428,-9.758990,-1.017114,-3.863174,1.387744,7.208586,-4.530249,-6.529405,-7.406194,-7.737881,1.796182,-1.094705,1.577192,-9.901237,-0.317832,0.252258,-4.250655,6.260207,-6.710529,-0.742029,0.770551,-5.760799,6.164441,8.841957,0.821826,-2.672282,-7.698975,-7.885389,0.176116,-9.125854,-3.455293,-3.214076,-0.770495,8.647642,1.508846,-8.854700,-7.423877,-0.708613,9.105985,6.866774,4.670754,-9.842228,-8.294023,6.217278,8.826616,7.847566,-2.269728,-0.759463,5.845923,0.146332,-5.756540,-5.511104,-9.533905,-7.039843,-8.109936,-6.318947,8.319050,9.718565,-5.222537,-2.452062,-4.584368,0.784681,0.333270,5.968081,4.549001,5.946559,-3.456366,-8.413550,-7.457934,6.353292,-4.734078,-3.062291,-3.769608,8.863922,2.102811,-8.864281,-2.432774,-5.784144,-3.676865,-4.260333,-7.890401,8.758878,2.405128,-4.088375,-9.711418,-4.917535,1.152806,-6.223924,-1.078091,-7.807781,2.781983,-4.115818,-9.785051,5.835388,-6.645904,4.344811,8.772976,-9.041024,-4.190566,-0.159310,-4.655087,-6.690688,-1.119330,1.395712,-7.155498,-1.883950,-7.377550,1.957943,8.030589,7.771993,1.322757,-7.938652,6.244757,4.495794,3.620163,-4.122896,2.632715,-1.086744,-9.242542,-5.106847,2.851383,-3.714519,3.819013,4.403362,6.725910,5.948169,4.956581,1.656996,-8.049172,-2.920933,7.570574,8.184012,7.186478,-2.253093,7.570741,9.819213,5.669765,-3.547348,0.278944,6.413213,8.797613,0.390974,-2.729174,1.936408,-4.520067,2.673167,4.315828,-6.522677,-1.120991,-1.013163,7.066767,-6.344299,9.641242,-3.423834,-9.176721,4.879191,-3.569749,-9.538842,-9.223414,2.635975,-9.465464,-7.351148,0.332540,-6.015464,2.895505,2.049684,-7.261886,1.028912,-2.891731,0.611495,8.158107,-3.219498,0.197601,-6.427786,2.265256,-7.421763,-7.702900,1.407490,6.245498,8.655097,-4.923615,-6.307145,1.235461,-5.380522,5.374773,-9.152406,0.969122,-9.515260,-8.716760,-2.199717,-6.399857,7.525150,5.022165,-4.373419,-6.774117,5.045479,-2.337393,-2.678830,6.582382,0.979922,-4.886647,7.059318,2.027033,-3.416505,-5.840716,3.261465,-9.446954,-7.767712,4.201780,-3.655331,-4.516012,-6.988441,8.163621,-1.823370,2.122401,1.782162,-1.104906,3.870981,-9.270594,0.611592,-4.927387,8.859009,3.271932,-2.328484,-5.001597,-7.935989,-1.299988,5.617759,6.311654,-8.658234,-3.212101,-3.138184,-9.614968,-5.979580,-6.350434,-3.371343,-8.163071,8.628434,5.492366,-2.647213,-8.574769,-1.595903,8.320407,2.128478,-5.111484,0.871121,0.005656,3.046072,-6.692576,7.976753,6.244076,0.819910,0.698967,3.787697,2.118722,5.862271,-6.739061,-5.328402,3.378375,1.439998,-1.987356,-7.994411,-5.100419,9.218964,6.355985,5.196211,-9.746262,-7.381492,2.934610,-5.962431,2.072740,6.943765,-3.811665,8.910403,7.176005,6.558304,-9.495364,5.502908,5.037150,6.505242,8.103527,9.521348,6.381287,-6.011948,8.875774,8.280610,-4.015958,-5.884786,2.893540,-0.856902,-3.609001,-9.598946,-9.222981,-7.687229,-5.199759,-8.647489,-6.413477,-5.135320,-3.341385,3.311067,3.926388,-0.997810,3.167760,-4.061855,1.500829,0.578563,-3.269262,-2.645075,5.359979,-6.841319,-0.849111,-5.058245,-7.835263,-1.406837,1.264505,-5.261899,3.647446,-7.892424,-2.618742,5.468573,4.550712,8.578100,-1.373252,-7.137327,-4.505380,5.256566,-3.542142,-0.329318,-2.573125,0.369135,-2.434999,8.361879,-3.365944,-6.805902,-8.624875,-4.602688,-7.128402,-4.777904,5.190793,-0.975747,3.531513,-3.258084,4.557578,6.342527,-2.348709,8.139403,-0.383038,-0.488677,-8.644260,6.025492,-6.471876,8.425028,-5.063101,8.253488,-5.898661,6.391914,8.366609,4.944222,-3.432089,1.323287,5.462836,0.620721,2.370928,7.103141,-1.454315,-8.556476,-3.847073,0.390550,7.062479,1.777872,0.387561,-5.953428,-7.887020,0.755094,-4.123361,4.813669,-5.407844,3.820353,-7.502266,4.593590,-3.833348,4.059306,6.584428,5.147601,9.366932,8.251603,4.839480,-5.652352,5.049147,0.628212,-2.840096,-0.105412,1.440131,-4.973049,-3.185640,6.142293,6.852014,5.691521,7.622411,-8.580583,7.302285,2.857413,4.516112,8.386915,-6.112996,-8.268317,0.638322,5.020454,-8.944241,0.081987,2.037150,0.252630,2.264882,-5.828880,6.593909,-7.837581,-6.540893,-7.144801,3.073792,-4.328866,-9.937033,-5.408175,0.591522,-5.124560,4.130438,-6.808193,-6.110514,6.256635,8.814931,0.283249,-0.807898,9.363858,4.597628,-1.852416,0.583921,-7.749185,7.876753,-1.861287,-0.040114,6.093492,-3.071799,7.147568,4.492796,-2.554698,-3.777538,-9.119854,4.148180,6.425434,7.902274,3.206246,-8.666993,-6.069090,-1.484153,8.682998,8.590551,-1.057954,-1.737721,5.573596,7.003436,-1.991600,5.700805,-8.583243,9.805722,2.632175,-8.882864,2.931201,8.082793,-1.240369,-2.707238,-1.882457,-0.485871,7.514271,-0.962018,0.635747,1.757800,3.152203,-7.549380,7.466496,6.055692,-9.904211,-3.057421,8.311529,9.037329,1.523926,0.593352,8.845425,7.614762,-2.808399,1.863906,4.241582,-1.940475,9.852413,-2.917781,-7.574016,-9.441769,2.211417,-2.309829,-3.090553,7.107100,-6.568441,9.442743,-1.204671,-8.386832,3.701939,-4.636920,-0.191423,7.474235,6.362269,6.265996,-4.895422,-3.579130,-2.340905,-7.504821,-2.439779,-5.442768,-9.957338,5.865624,-2.090649,9.158805,3.068780,-6.677431,-9.433930,-0.914985,-6.770745,0.394153,2.067316,-5.343711,0.392801,-4.826416,-8.836797,-6.960482,-6.871425,-0.691302,3.493951,-0.608660,1.454816,2.539483,4.745053,-4.184761,3.512991,-1.102751,4.254952,-1.257038,3.197662,1.435134,7.073715,-7.978023,0.185780,3.628833,-3.122496,9.261480,-1.939960,-4.569671,-5.414819,3.993253,-1.077917,-6.414962,7.151877,-8.510885,0.648353,-6.059996,2.051304,0.740500,4.860856,-3.592345,-6.883995,-0.598660,-1.087882,-6.654423,5.667281,-6.650378,7.258743,6.944134,7.725326,1.909114,8.172829,8.028454,-5.152732,9.679970,6.167265,-2.982663,-2.378491,6.913836,2.128520,9.881562,4.455263,-3.472519,5.097094,5.833723,-5.576713,3.774099,4.474744,-8.630862,3.780258,3.035887,3.871989,5.990342,-7.424324,-8.823826,-5.535886,-8.351571,3.277932,6.475418,8.027832,9.068424,4.383429,0.958639,-9.578737,7.578463,-6.116329,-4.225454,-5.320947,0.809403,-9.479631,-6.434443,7.190031,6.673988,8.761908,9.796634,6.363888,-4.269749,-5.620100,9.977735,-3.393303,-3.346817,-1.696102,-4.145601,-0.680714,1.728430,-4.422402,-1.339721,1.094261,-6.713142,-7.832511,1.226725,1.428496,-2.992340,4.832854], dtype = "float64")#candidate|11257|(1050,)|const|float64
call_11256 = relay.TupleGetItem(func_4764_call(relay.reshape(const_11257.astype('float64'), [14, 5, 15])), 0)
call_11258 = relay.TupleGetItem(func_4767_call(relay.reshape(const_11257.astype('float64'), [14, 5, 15])), 0)
output = relay.Tuple([call_11224,call_11249,var_11250,call_11256,const_11257,])
output2 = relay.Tuple([call_11225,call_11251,var_11250,call_11258,const_11257,])
func_11263 = relay.Function([var_11250,], output)
mod['func_11263'] = func_11263
mod = relay.transform.InferType()(mod)
mutated_mod['func_11263'] = func_11263
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11264 = relay.var("var_11264", dtype = "float64", shape = (240,))#candidate|11264|(240,)|var|float64
func_11263_call = mutated_mod.get_global_var('func_11263')
call_11265 = func_11263_call(var_11264)
output = call_11265
func_11266 = relay.Function([var_11264], output)
mutated_mod['func_11266'] = func_11266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7723_call = mod.get_global_var('func_7723')
func_7725_call = mutated_mod.get_global_var('func_7725')
call_11279 = relay.TupleGetItem(func_7723_call(), 0)
call_11280 = relay.TupleGetItem(func_7725_call(), 0)
func_4726_call = mod.get_global_var('func_4726')
func_4728_call = mutated_mod.get_global_var('func_4728')
call_11283 = func_4726_call()
call_11284 = func_4726_call()
output = relay.Tuple([call_11279,call_11283,])
output2 = relay.Tuple([call_11280,call_11284,])
func_11288 = relay.Function([], output)
mod['func_11288'] = func_11288
mod = relay.transform.InferType()(mod)
output = func_11288()
func_11289 = relay.Function([], output)
mutated_mod['func_11289'] = func_11289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mod.get_global_var('func_7874')
func_7876_call = mutated_mod.get_global_var('func_7876')
call_11358 = relay.TupleGetItem(func_7874_call(), 1)
call_11359 = relay.TupleGetItem(func_7876_call(), 1)
func_3958_call = mod.get_global_var('func_3958')
func_3960_call = mutated_mod.get_global_var('func_3960')
const_11369 = relay.const([-1.230842,-9.337379,-5.082261,2.469024,0.716728,3.458201,-1.010236,-2.743502,4.607470,-8.833115,-7.880050,-7.557828,1.286613,-7.099908,-4.569357,-6.990189,9.215299,6.363303,-6.874335,-7.030545,5.511494,-2.113988,-6.014716,-0.804152,1.551090,-2.119790,9.887369,2.587715,-1.721987,1.375380,-0.515273,-0.755477,0.114067,-8.864830,-4.859500,6.299808,-6.232064,1.446345,9.697216,-6.275663,9.406176,-9.233154,1.228592,3.005498,6.525860,-7.667432,7.215646,-3.280371,-8.906221,-0.953008,7.945631,9.069235,7.184278,-2.982667,-4.687287,-0.055801,-9.825419,-1.300250,-2.720277,3.141107,3.621070,-8.517043,-2.589840,6.732828,9.534245,8.374273,6.805519,-5.263272,-2.179901,8.443215,2.967895,-0.841071,1.594946,6.142473,-9.424134,2.325796,-2.933036,-5.099250,-0.267632,-5.551082,-5.651035,-1.484878,-1.841051,-3.689252,-7.555555,3.978904,7.304712,9.638108,-1.901892,1.436469,1.841640,-6.078759,-6.450513,0.929367,-7.365944,-4.551799,0.498325,9.583987,7.843530,-0.932462,9.832317,6.837443,9.483920,2.955311,4.271971,8.762047,-1.359069,-5.402551,-0.974868,8.566598,0.610544,4.704313,3.707004,-1.265472,2.451394,-7.145686,-3.045049,2.358431,-3.510646,-4.005845,4.422630,-6.001538,6.581687,-1.481741,-5.391636,4.544205,1.327801,2.843652,5.937249,9.458549,-0.802233,8.264124,9.259642,3.780561,-0.637309,8.167399,2.031817,8.777344,1.667964,-0.363566,7.036795,7.993632,9.616629,6.943075,1.014031,3.900857,-4.479987,-5.715024,4.757043,8.224403,9.198853,-8.854771,4.570117,-7.000731,2.985711,-1.321046,-6.496428,-3.195083,-6.607027,-1.268031,-7.016692,-7.486910,-3.735504,8.686929,-8.001957,7.998006,8.855256,-8.448650,7.623698,7.487934,0.227207,-9.342374,-7.186691,3.479475,-4.497150,-9.024452,7.691231,-8.444372,3.977460,-8.130924,-4.180640,-0.748162,7.553632,-3.077612,2.683070,1.444884,-9.280000,-7.497817,-1.951490,4.936249,2.152719,-4.570262,-0.132464,-7.741939,-4.505030,6.427881,4.357525,-8.057316,-2.882884,9.778511,2.402956,5.504067,-5.070129,-3.886123,0.781520,-9.527492,9.145671,-8.170753,8.477787,4.529278,2.667162,-4.129782,-9.953138,6.979721,-5.259707,-8.451586,5.871280,0.242802,5.540388,8.813735,7.782132,1.368606,-9.097227,7.969103,7.745231,1.091730,7.496574,7.060926,-1.594785,3.503043,9.442456,-3.508922,0.122216,1.072896,8.280407,0.011466,-8.187299,3.148605,-0.790350,-8.686498,-9.502781,-3.286645,4.272630,2.590913,-7.872745,-2.626693,3.274949,9.401098,-0.683493,9.342214,6.658788,4.372016,-7.465565,-3.143388,7.075350,-3.687655,-1.232711,4.809783,-9.208330,1.018670,8.381950,-6.739076,3.974747,8.219602,-2.776871,5.840145,-4.396448,5.282952,-1.180382,5.384745,-3.815044,3.146844,3.151211,2.907683,6.792225,-7.502797,-8.084337,7.623995,-0.694640,-9.614620,-9.799482,-2.622878,-0.527879,1.951840,5.552958,-1.595198,-1.528384,-3.121705,-0.455498,8.532537,6.730155,8.600154,-0.568649,4.274440,9.903786,-0.776486,1.292491,-5.799285,-7.865442,-7.191900], dtype = "float32")#candidate|11369|(300,)|const|float32
call_11368 = relay.TupleGetItem(func_3958_call(relay.reshape(const_11369.astype('float32'), [15, 5, 4])), 0)
call_11370 = relay.TupleGetItem(func_3960_call(relay.reshape(const_11369.astype('float32'), [15, 5, 4])), 0)
bop_11376 = relay.less_equal(const_11369.astype('bool'), relay.reshape(call_11368.astype('bool'), relay.shape_of(const_11369))) # shape=(300,)
bop_11379 = relay.less_equal(const_11369.astype('bool'), relay.reshape(call_11370.astype('bool'), relay.shape_of(const_11369))) # shape=(300,)
func_4224_call = mod.get_global_var('func_4224')
func_4226_call = mutated_mod.get_global_var('func_4226')
call_11380 = relay.TupleGetItem(func_4224_call(), 0)
call_11381 = relay.TupleGetItem(func_4226_call(), 0)
output = relay.Tuple([call_11358,bop_11376,call_11380,])
output2 = relay.Tuple([call_11359,bop_11379,call_11381,])
func_11384 = relay.Function([], output)
mod['func_11384'] = func_11384
mod = relay.transform.InferType()(mod)
mutated_mod['func_11384'] = func_11384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11384_call = mutated_mod.get_global_var('func_11384')
call_11385 = func_11384_call()
output = call_11385
func_11386 = relay.Function([], output)
mutated_mod['func_11386'] = func_11386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11178_call = mod.get_global_var('func_11178')
func_11179_call = mutated_mod.get_global_var('func_11179')
call_11424 = func_11178_call()
call_11425 = func_11178_call()
func_10402_call = mod.get_global_var('func_10402')
func_10403_call = mutated_mod.get_global_var('func_10403')
call_11451 = relay.TupleGetItem(func_10402_call(), 1)
call_11452 = relay.TupleGetItem(func_10403_call(), 1)
func_9670_call = mod.get_global_var('func_9670')
func_9672_call = mutated_mod.get_global_var('func_9672')
call_11453 = func_9670_call()
call_11454 = func_9670_call()
func_8801_call = mod.get_global_var('func_8801')
func_8803_call = mutated_mod.get_global_var('func_8803')
call_11469 = relay.TupleGetItem(func_8801_call(), 0)
call_11470 = relay.TupleGetItem(func_8803_call(), 0)
func_10199_call = mod.get_global_var('func_10199')
func_10200_call = mutated_mod.get_global_var('func_10200')
call_11474 = relay.TupleGetItem(func_10199_call(), 0)
call_11475 = relay.TupleGetItem(func_10200_call(), 0)
output = relay.Tuple([call_11424,call_11451,call_11453,call_11469,call_11474,])
output2 = relay.Tuple([call_11425,call_11452,call_11454,call_11470,call_11475,])
func_11480 = relay.Function([], output)
mod['func_11480'] = func_11480
mod = relay.transform.InferType()(mod)
output = func_11480()
func_11481 = relay.Function([], output)
mutated_mod['func_11481'] = func_11481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4808_call = mod.get_global_var('func_4808')
func_4809_call = mutated_mod.get_global_var('func_4809')
call_11490 = relay.TupleGetItem(func_4808_call(), 0)
call_11491 = relay.TupleGetItem(func_4809_call(), 0)
func_7506_call = mod.get_global_var('func_7506')
func_7508_call = mutated_mod.get_global_var('func_7508')
call_11515 = relay.TupleGetItem(func_7506_call(), 4)
call_11516 = relay.TupleGetItem(func_7508_call(), 4)
func_6291_call = mod.get_global_var('func_6291')
func_6293_call = mutated_mod.get_global_var('func_6293')
call_11520 = func_6291_call()
call_11521 = func_6291_call()
func_3290_call = mod.get_global_var('func_3290')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_11547 = func_3290_call()
call_11548 = func_3290_call()
func_8471_call = mod.get_global_var('func_8471')
func_8472_call = mutated_mod.get_global_var('func_8472')
call_11553 = relay.TupleGetItem(func_8471_call(), 0)
call_11554 = relay.TupleGetItem(func_8472_call(), 0)
func_2534_call = mod.get_global_var('func_2534')
func_2537_call = mutated_mod.get_global_var('func_2537')
const_11566 = relay.const([5,-7,5,-7,-8,-5,4,9,-4,3,8,6,3,-9,10,-4,8,-8,-3,6,-7,-10,-6,5,6,1,-1,-3,2,1,-10,9,-8,2,3,5,-2,2,-4,5,7,3,-4,-4,-2,8,-2,1,5,1,3,7,1,-1,-8,-6,-4,-5,-9,5,-4,3,-2,-5,-8,-5,2,-6,3,9,-4,6,-6,-6,-2,4,6,3,2,4,-6,-2,-1,3,-6,5,7,-9,6,8,8,3,1,-3,4,4,-6,-10,5,-3,6,-2,-3,8,6,-5,-9,-8,2,5,9,-8,8,-6,-1,-5,-8,10,5,9,3,8,2,-2,7,4,7,-5,-10,-9,9,-6,8,-8,-5,6,5,-7,10,-3,7,7,9,-10], dtype = "int64")#candidate|11566|(144,)|const|int64
call_11565 = relay.TupleGetItem(func_2534_call(relay.reshape(const_11566.astype('int64'), [144,])), 0)
call_11567 = relay.TupleGetItem(func_2537_call(relay.reshape(const_11566.astype('int64'), [144,])), 0)
func_11129_call = mod.get_global_var('func_11129')
func_11130_call = mutated_mod.get_global_var('func_11130')
call_11569 = relay.TupleGetItem(func_11129_call(), 0)
call_11570 = relay.TupleGetItem(func_11130_call(), 0)
output = relay.Tuple([call_11490,call_11515,call_11520,call_11547,call_11553,call_11565,const_11566,call_11569,])
output2 = relay.Tuple([call_11491,call_11516,call_11521,call_11548,call_11554,call_11567,const_11566,call_11570,])
func_11573 = relay.Function([], output)
mod['func_11573'] = func_11573
mod = relay.transform.InferType()(mod)
output = func_11573()
func_11574 = relay.Function([], output)
mutated_mod['func_11574'] = func_11574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8471_call = mod.get_global_var('func_8471')
func_8472_call = mutated_mod.get_global_var('func_8472')
call_11600 = relay.TupleGetItem(func_8471_call(), 0)
call_11601 = relay.TupleGetItem(func_8472_call(), 0)
output = relay.Tuple([call_11600,])
output2 = relay.Tuple([call_11601,])
func_11602 = relay.Function([], output)
mod['func_11602'] = func_11602
mod = relay.transform.InferType()(mod)
mutated_mod['func_11602'] = func_11602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11602_call = mutated_mod.get_global_var('func_11602')
call_11603 = func_11602_call()
output = call_11603
func_11604 = relay.Function([], output)
mutated_mod['func_11604'] = func_11604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11573_call = mod.get_global_var('func_11573')
func_11574_call = mutated_mod.get_global_var('func_11574')
call_11607 = relay.TupleGetItem(func_11573_call(), 2)
call_11608 = relay.TupleGetItem(func_11574_call(), 2)
output = call_11607
output2 = call_11608
func_11609 = relay.Function([], output)
mod['func_11609'] = func_11609
mod = relay.transform.InferType()(mod)
output = func_11609()
func_11610 = relay.Function([], output)
mutated_mod['func_11610'] = func_11610
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11677 = relay.var("var_11677", dtype = "bool", shape = (7, 9, 8))#candidate|11677|(7, 9, 8)|var|bool
const_11678 = relay.const([[[False,False,True,False,True,True,False,False],[True,False,False,True,True,False,False,False],[True,True,True,False,True,False,False,False],[True,True,False,True,False,True,True,True],[True,True,True,True,False,True,True,True],[True,True,False,True,False,True,True,True],[False,False,True,True,True,True,True,False],[False,False,True,False,True,False,True,True],[True,False,False,True,False,True,False,True]],[[False,True,False,False,False,True,True,False],[False,False,True,True,True,True,True,True],[True,False,False,False,False,True,True,False],[False,True,True,False,False,False,True,True],[True,False,True,True,True,True,True,True],[True,False,False,True,True,True,False,False],[True,False,True,False,False,False,False,False],[False,True,False,False,True,True,True,False],[True,True,True,True,False,False,False,True]],[[True,True,False,False,False,True,True,False],[True,False,False,True,False,False,True,False],[True,True,True,True,True,False,True,False],[True,True,True,True,True,False,True,False],[True,True,True,True,False,False,True,False],[False,True,True,False,True,True,True,True],[False,False,False,True,False,True,False,False],[False,True,True,False,True,False,False,False],[False,True,False,False,True,True,False,True]],[[True,False,False,False,True,True,True,True],[True,True,True,True,True,True,True,True],[False,True,True,False,True,False,False,True],[True,False,False,True,False,False,False,True],[False,False,True,True,True,True,True,False],[False,False,False,True,True,True,True,True],[False,False,True,False,False,False,True,False],[False,True,True,False,False,True,True,False],[False,True,False,True,False,True,False,False]],[[True,False,False,False,True,True,True,False],[True,True,False,False,True,True,False,True],[True,True,False,True,False,True,True,False],[False,True,False,False,False,False,True,True],[False,True,True,True,False,True,True,True],[False,True,True,True,True,True,False,False],[False,False,True,True,False,False,True,False],[False,True,True,False,True,False,False,True],[True,True,True,True,False,False,False,False]],[[False,False,True,True,True,False,True,False],[False,False,True,False,False,False,True,False],[False,False,True,True,False,True,True,True],[False,False,False,True,False,False,True,False],[False,True,True,False,True,False,False,True],[False,True,False,True,True,True,True,True],[True,False,True,True,True,False,False,False],[False,False,True,False,False,False,True,True],[True,False,True,False,True,True,False,True]],[[False,False,False,True,True,False,True,False],[False,False,True,False,False,True,False,False],[True,True,False,True,True,True,False,True],[False,True,True,True,False,True,False,False],[True,True,False,False,True,True,False,True],[True,True,True,True,False,True,True,True],[False,True,True,False,True,True,True,True],[True,False,False,True,False,False,False,True],[True,False,False,False,True,False,False,False]]], dtype = "bool")#candidate|11678|(7, 9, 8)|const|bool
bop_11679 = relay.logical_or(var_11677.astype('bool'), relay.reshape(const_11678.astype('bool'), relay.shape_of(var_11677))) # shape=(7, 9, 8)
func_9525_call = mod.get_global_var('func_9525')
func_9526_call = mutated_mod.get_global_var('func_9526')
call_11684 = relay.TupleGetItem(func_9525_call(), 0)
call_11685 = relay.TupleGetItem(func_9526_call(), 0)
func_8110_call = mod.get_global_var('func_8110')
func_8112_call = mutated_mod.get_global_var('func_8112')
call_11687 = relay.TupleGetItem(func_8110_call(), 0)
call_11688 = relay.TupleGetItem(func_8112_call(), 0)
output = relay.Tuple([bop_11679,call_11684,call_11687,])
output2 = relay.Tuple([bop_11679,call_11685,call_11688,])
func_11697 = relay.Function([var_11677,], output)
mod['func_11697'] = func_11697
mod = relay.transform.InferType()(mod)
var_11698 = relay.var("var_11698", dtype = "bool", shape = (7, 9, 8))#candidate|11698|(7, 9, 8)|var|bool
output = func_11697(var_11698)
func_11699 = relay.Function([var_11698], output)
mutated_mod['func_11699'] = func_11699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7895_call = mod.get_global_var('func_7895')
func_7896_call = mutated_mod.get_global_var('func_7896')
call_11716 = relay.TupleGetItem(func_7895_call(), 0)
call_11717 = relay.TupleGetItem(func_7896_call(), 0)
output = call_11716
output2 = call_11717
func_11730 = relay.Function([], output)
mod['func_11730'] = func_11730
mod = relay.transform.InferType()(mod)
output = func_11730()
func_11731 = relay.Function([], output)
mutated_mod['func_11731'] = func_11731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9803_call = mod.get_global_var('func_9803')
func_9805_call = mutated_mod.get_global_var('func_9805')
call_11745 = relay.TupleGetItem(func_9803_call(), 0)
call_11746 = relay.TupleGetItem(func_9805_call(), 0)
func_9852_call = mod.get_global_var('func_9852')
func_9854_call = mutated_mod.get_global_var('func_9854')
call_11755 = relay.TupleGetItem(func_9852_call(), 1)
call_11756 = relay.TupleGetItem(func_9854_call(), 1)
func_7292_call = mod.get_global_var('func_7292')
func_7294_call = mutated_mod.get_global_var('func_7294')
const_11769 = relay.const([2.814235,6.995453,6.083382,1.865793,-5.108901,-9.290540,-3.157048,-5.182823,-8.742932,-2.242980,3.534998,7.029775,-5.708838,-7.002230,3.784566,2.059725,3.874876,-7.063642,-5.128314,-9.634151,5.151043,9.086989,3.646940,3.909634,-4.013810,-8.663273,-1.735111,7.501754,6.512494,-8.055555,-2.267025,-5.253135,-8.071683,4.481420,-8.022642,-2.289021,-0.543600,6.272512,5.006246,6.374432,7.790615,8.061839,9.741733,-4.534108,-2.826481,3.451000,-4.830905,2.395035,-9.686199,3.452360,-2.002194,-4.716873,6.823227,-4.971212,-1.426247,-9.003972,-8.689755,8.411230,8.724450,-2.827235,-1.274962,-2.312713,3.230649,-1.083700,-9.833283,0.637612,0.206113,1.927859,3.109759,9.276637,0.777692,5.633383,9.034321,3.826389,-0.955037,-5.799668,8.616396,9.659021,-7.240649,9.331910,0.939471,-8.440735,-4.055923,8.862822,0.321578,-1.468004,8.598907,-5.018441,-3.088201,1.279467,-7.163027,-4.274871,-4.758465,-6.309640,5.980825,-4.082983,-9.672498,1.011380,-7.040406,5.182595,5.006116,6.573805,6.113187,7.934596,8.089161,6.576138,-7.162013,-8.132063,0.719571,-6.772777,-6.461277,-5.877101,6.915506,9.796871,-9.759006,6.531720,-8.898324,-5.069477,9.313828,-5.034574,-9.747291,-5.092002,3.603056,-5.646579,8.765493,4.497243,4.017208,1.556828,0.314472,-0.631074,6.616112,9.208304,-7.303419,3.721518,9.103449,2.606850,1.712011,-6.546638,-8.822388,-1.646484,6.090218,2.100446,0.121051,3.798138,6.878443,-0.737653,-2.825668,4.966079,-0.798603,-3.123411,-4.649094,9.457969,9.612962,-5.152458,-0.360256,9.370074,-0.549284,-7.579923,9.921952,-2.574588,-4.702055,1.150062,-6.117083,7.294942,-1.355173,-5.639437,6.655849,-7.316706,5.549355,-8.118027,6.800428,-0.685019,-0.350023,1.329883,-8.325049,8.254986,4.215511,7.107179,5.309190,-4.366388,-3.154367,-7.563337,-1.341408,-9.486224,7.671268,-2.092436,9.384452,-6.065049,9.936505,7.409255,2.187465,-0.453453,-9.898803,-9.530465,2.493170,1.045104,6.241878,0.131465,-4.919862,0.745524,9.540891,3.975433,-4.450916,-1.950925,6.882190,-6.871332,-8.631866,6.923698,-3.796990,-8.103774,-2.945355,-4.794184,8.769211,-1.705735,8.020737,7.683050,8.043739,9.426938,-0.360124,4.072989,-6.882720,-5.122894,0.584214,5.686867,3.391016,2.774794,6.684997,5.397485,1.891227,-9.712961,-5.866877,2.856450,-4.447341,1.216326,5.285555,1.024130,-1.818983,-5.514284,0.031549,-9.855912,-9.969869,3.773825,9.423881,-1.630174,-1.899682,5.405590,7.480157,-4.357308,-5.637855,-4.755743,-0.695869,4.889400,-7.901861,-6.599729,0.173063,-6.283349,-1.352698,4.640414,2.586401,6.865892,-1.957842,-8.064386,3.435553,-5.209693,-2.524285,8.381374,-8.566400,-5.930410,4.153724,-3.804502,8.411047,-8.143243,-3.176281,4.444959,4.447550,3.944120,8.930968,4.418455,-8.277006,-3.743900,4.073333,-2.238545,-2.364098,-8.167424,6.448567,-7.245462,3.852552,7.108349,-0.426064,3.251183,3.795083,-9.217467,-0.975443,0.620618,0.199932,-0.653656,-2.655944,-0.519766,9.583865,-4.913699,4.754619,8.117686,8.574604,5.755004,5.430361,0.215869,1.226869,6.081988,-5.940140,5.958765,5.980526,-4.936420,-9.239093,-0.933964,6.073077,-4.395074,-7.361911,9.758790,-0.597975,5.970477,-7.939265,-8.509720,-7.632767,7.558817,8.977004,-7.850657,-5.450547,-4.401783,8.189756,-6.955018,5.119891,-0.906847,-8.601163,8.353622,-3.288038,-3.876239,6.027699,-6.066282,1.102416,-5.980041,-8.502334,8.741923,5.406144,0.671526,-6.595056,5.113097,7.333073,6.521183,-6.683243,-9.945491,-9.270191,1.303733,-3.842640,0.439464,2.324979,-9.182236,3.713435,0.737727,7.988524,9.809823,-3.420378,5.654560,-3.821100,-4.845458,9.315860,6.715663,5.868491,3.514899,2.161163,0.840084,6.900370,-1.113530,3.592464,4.290064,5.927108,9.715768,-6.497674,8.768877,6.389128,8.176659,-7.623638,-6.149830,5.100109,0.813304,4.536221,2.613937,-9.910472,6.452193,1.262961,-1.739391,8.562474,5.974247,-9.967354,8.968231,-5.848642,-5.383684,8.828970,-3.875386,4.089019,3.342076,0.951459,1.656859,1.546529,1.925821,8.755654,8.319570,2.790015,-6.961633,3.849760,-9.070735,-3.649911,-2.585793,6.482251,-9.315637,1.482072,4.487468,6.558466,-7.921358,5.673464,6.291142,-5.107036,-6.656178,0.489911,6.511104,-2.647531,-2.089513,7.130699,-7.218492,-1.978027,2.521358,3.100218,-3.821113,7.452988,8.422099,-9.545395,3.698218,5.044491,2.773097,0.384306,6.238411,-1.335177,-6.881562,-8.607937,-6.414968,-0.660094,-7.992828,9.590523,-3.465346,-4.997995,2.447306,-0.915209,5.707379,-5.005695,5.029890,4.915875,1.368474,-4.833427,8.618498,7.829966,4.898560,7.568532,9.308042,-3.923192,5.129908,6.543928,-0.587852,-4.564217,6.165502,-6.606077,-6.777297,6.821061,9.099716,9.670022,-2.293361,-6.852167,-9.730297,-9.141567,-3.749733,6.200138,4.640649,3.126451,2.493169,8.454213,-0.855136,8.235139,8.335101,6.604216,-8.248566,-2.941019,4.828610,2.193910,-3.730783,1.497172,-1.754893,2.641332,4.692789,2.106213,-4.611695,1.630703,-4.538376,4.889923,7.590239,-3.008827,6.697305], dtype = "float64")#candidate|11769|(504,)|const|float64
call_11768 = relay.TupleGetItem(func_7292_call(relay.reshape(const_11769.astype('float64'), [504,])), 1)
call_11770 = relay.TupleGetItem(func_7294_call(relay.reshape(const_11769.astype('float64'), [504,])), 1)
func_6662_call = mod.get_global_var('func_6662')
func_6663_call = mutated_mod.get_global_var('func_6663')
call_11773 = func_6662_call()
call_11774 = func_6662_call()
func_4688_call = mod.get_global_var('func_4688')
func_4690_call = mutated_mod.get_global_var('func_4690')
call_11793 = relay.TupleGetItem(func_4688_call(), 3)
call_11794 = relay.TupleGetItem(func_4690_call(), 3)
output = relay.Tuple([call_11745,call_11755,call_11768,const_11769,call_11773,call_11793,])
output2 = relay.Tuple([call_11746,call_11756,call_11770,const_11769,call_11774,call_11794,])
func_11795 = relay.Function([], output)
mod['func_11795'] = func_11795
mod = relay.transform.InferType()(mod)
output = func_11795()
func_11796 = relay.Function([], output)
mutated_mod['func_11796'] = func_11796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6227_call = mod.get_global_var('func_6227')
func_6228_call = mutated_mod.get_global_var('func_6228')
call_11810 = relay.TupleGetItem(func_6227_call(), 0)
call_11811 = relay.TupleGetItem(func_6228_call(), 0)
uop_11815 = relay.tan(call_11810.astype('float32')) # shape=(11, 8, 7)
uop_11817 = relay.tan(call_11811.astype('float32')) # shape=(11, 8, 7)
func_11218_call = mod.get_global_var('func_11218')
func_11220_call = mutated_mod.get_global_var('func_11220')
call_11818 = relay.TupleGetItem(func_11218_call(), 0)
call_11819 = relay.TupleGetItem(func_11220_call(), 0)
func_2878_call = mod.get_global_var('func_2878')
func_2882_call = mutated_mod.get_global_var('func_2882')
const_11822 = relay.const([5,5,-7,-7,5,-5,7,-1,-9,-1,-5,-3,9,-1,10,1,4,-7,8,3,-3,4,-10,-5,9,-5,6,1,2,8,2,9,7,10,4,-1,-2,9,3,-9,9,9,2,3,-5,-7,-2,2,-4,7,6,3,6,-7,5,3,10,1,3,-9,7,-3,2,-10,-10,2,-8,1,8,-3,4,1,8,-9,8,-9,-1,5,10,10,6,-3,9,-8,-1,-4,-7,-10,-6,7,-4,8,9,-1,-1,-8,-2,-9,4,-10,10,-10,8,3,-7,-6,9,6,-7,8,7,5,6,2,3,4,7,-10,2,-7,-8,-9,4,6,2,9,1,-1,-8,-8,5,4,-4,7,10,6,-4,6,10,-1,-7,4,-6,6,7,7,-3,-6,-7,-6,6,4,5,-9,-1,9,-3,-7,-9,-3,4,2,10,8,-10,4,-6,-7,-10,8,-9,1,-4,-10,-1,1,2,-7,-1,2,9,9,-8,-8,5,4,-5,-5,-3,-1,-8,2,-6,-6,3,-10,8,10,8,-6,4,-4,-5,9,3,-4,6,3,-4,1,-9,-10,2,4,-7,-2,10,-3,4,5,-4,10,-5,-2], dtype = "uint32")#candidate|11822|(224,)|const|uint32
var_11823 = relay.var("var_11823", dtype = "uint8", shape = (8,))#candidate|11823|(8,)|var|uint8
call_11821 = relay.TupleGetItem(func_2878_call(relay.reshape(const_11822.astype('uint32'), [2, 8, 14]), relay.reshape(var_11823.astype('uint8'), [1, 8]), ), 6)
call_11824 = relay.TupleGetItem(func_2882_call(relay.reshape(const_11822.astype('uint32'), [2, 8, 14]), relay.reshape(var_11823.astype('uint8'), [1, 8]), ), 6)
output = relay.Tuple([uop_11815,call_11818,call_11821,const_11822,var_11823,])
output2 = relay.Tuple([uop_11817,call_11819,call_11824,const_11822,var_11823,])
func_11826 = relay.Function([var_11823,], output)
mod['func_11826'] = func_11826
mod = relay.transform.InferType()(mod)
var_11827 = relay.var("var_11827", dtype = "uint8", shape = (8,))#candidate|11827|(8,)|var|uint8
output = func_11826(var_11827)
func_11828 = relay.Function([var_11827], output)
mutated_mod['func_11828'] = func_11828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10877_call = mod.get_global_var('func_10877')
func_10878_call = mutated_mod.get_global_var('func_10878')
call_11830 = func_10877_call()
call_11831 = func_10877_call()
func_10089_call = mod.get_global_var('func_10089')
func_10091_call = mutated_mod.get_global_var('func_10091')
call_11842 = relay.TupleGetItem(func_10089_call(), 1)
call_11843 = relay.TupleGetItem(func_10091_call(), 1)
output = relay.Tuple([call_11830,call_11842,])
output2 = relay.Tuple([call_11831,call_11843,])
func_11846 = relay.Function([], output)
mod['func_11846'] = func_11846
mod = relay.transform.InferType()(mod)
mutated_mod['func_11846'] = func_11846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11846_call = mutated_mod.get_global_var('func_11846')
call_11847 = func_11846_call()
output = call_11847
func_11848 = relay.Function([], output)
mutated_mod['func_11848'] = func_11848
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11849 = relay.var("var_11849", dtype = "float64", shape = (7, 6, 14))#candidate|11849|(7, 6, 14)|var|float64
uop_11850 = relay.exp(var_11849.astype('float64')) # shape=(7, 6, 14)
var_11862 = relay.var("var_11862", dtype = "float64", shape = (7, 6, 14))#candidate|11862|(7, 6, 14)|var|float64
bop_11863 = relay.power(uop_11850.astype('float32'), relay.reshape(var_11862.astype('float32'), relay.shape_of(uop_11850))) # shape=(7, 6, 14)
bop_11883 = relay.subtract(bop_11863.astype('uint8'), relay.reshape(uop_11850.astype('uint8'), relay.shape_of(bop_11863))) # shape=(7, 6, 14)
uop_11890 = relay.acosh(bop_11863.astype('float64')) # shape=(7, 6, 14)
output = relay.Tuple([bop_11883,uop_11890,])
output2 = relay.Tuple([bop_11883,uop_11890,])
func_11893 = relay.Function([var_11849,var_11862,], output)
mod['func_11893'] = func_11893
mod = relay.transform.InferType()(mod)
mutated_mod['func_11893'] = func_11893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11893_call = mutated_mod.get_global_var('func_11893')
var_11895 = relay.var("var_11895", dtype = "float64", shape = (7, 6, 14))#candidate|11895|(7, 6, 14)|var|float64
var_11896 = relay.var("var_11896", dtype = "float64", shape = (7, 6, 14))#candidate|11896|(7, 6, 14)|var|float64
call_11894 = func_11893_call(var_11895,var_11896,)
output = call_11894
func_11897 = relay.Function([var_11895,var_11896,], output)
mutated_mod['func_11897'] = func_11897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2118_call = mod.get_global_var('func_2118')
func_2119_call = mutated_mod.get_global_var('func_2119')
call_11912 = relay.TupleGetItem(func_2118_call(), 0)
call_11913 = relay.TupleGetItem(func_2119_call(), 0)
output = call_11912
output2 = call_11913
func_11928 = relay.Function([], output)
mod['func_11928'] = func_11928
mod = relay.transform.InferType()(mod)
mutated_mod['func_11928'] = func_11928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11928_call = mutated_mod.get_global_var('func_11928')
call_11929 = func_11928_call()
output = call_11929
func_11930 = relay.Function([], output)
mutated_mod['func_11930'] = func_11930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5970_call = mod.get_global_var('func_5970')
func_5972_call = mutated_mod.get_global_var('func_5972')
call_11961 = relay.TupleGetItem(func_5970_call(), 0)
call_11962 = relay.TupleGetItem(func_5972_call(), 0)
func_7859_call = mod.get_global_var('func_7859')
func_7861_call = mutated_mod.get_global_var('func_7861')
call_11971 = relay.TupleGetItem(func_7859_call(), 0)
call_11972 = relay.TupleGetItem(func_7861_call(), 0)
output = relay.Tuple([call_11961,call_11971,])
output2 = relay.Tuple([call_11962,call_11972,])
func_11973 = relay.Function([], output)
mod['func_11973'] = func_11973
mod = relay.transform.InferType()(mod)
mutated_mod['func_11973'] = func_11973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11973_call = mutated_mod.get_global_var('func_11973')
call_11974 = func_11973_call()
output = call_11974
func_11975 = relay.Function([], output)
mutated_mod['func_11975'] = func_11975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9525_call = mod.get_global_var('func_9525')
func_9526_call = mutated_mod.get_global_var('func_9526')
call_12002 = relay.TupleGetItem(func_9525_call(), 0)
call_12003 = relay.TupleGetItem(func_9526_call(), 0)
func_6081_call = mod.get_global_var('func_6081')
func_6083_call = mutated_mod.get_global_var('func_6083')
call_12009 = relay.TupleGetItem(func_6081_call(), 3)
call_12010 = relay.TupleGetItem(func_6083_call(), 3)
output = relay.Tuple([call_12002,call_12009,])
output2 = relay.Tuple([call_12003,call_12010,])
func_12017 = relay.Function([], output)
mod['func_12017'] = func_12017
mod = relay.transform.InferType()(mod)
mutated_mod['func_12017'] = func_12017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12017_call = mutated_mod.get_global_var('func_12017')
call_12018 = func_12017_call()
output = call_12018
func_12019 = relay.Function([], output)
mutated_mod['func_12019'] = func_12019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11795_call = mod.get_global_var('func_11795')
func_11796_call = mutated_mod.get_global_var('func_11796')
call_12042 = relay.TupleGetItem(func_11795_call(), 3)
call_12043 = relay.TupleGetItem(func_11796_call(), 3)
uop_12075 = relay.cos(call_12042.astype('float64')) # shape=(504,)
uop_12077 = relay.cos(call_12043.astype('float64')) # shape=(504,)
output = uop_12075
output2 = uop_12077
func_12082 = relay.Function([], output)
mod['func_12082'] = func_12082
mod = relay.transform.InferType()(mod)
output = func_12082()
func_12083 = relay.Function([], output)
mutated_mod['func_12083'] = func_12083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11573_call = mod.get_global_var('func_11573')
func_11574_call = mutated_mod.get_global_var('func_11574')
call_12093 = relay.TupleGetItem(func_11573_call(), 5)
call_12094 = relay.TupleGetItem(func_11574_call(), 5)
output = call_12093
output2 = call_12094
func_12103 = relay.Function([], output)
mod['func_12103'] = func_12103
mod = relay.transform.InferType()(mod)
mutated_mod['func_12103'] = func_12103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12103_call = mutated_mod.get_global_var('func_12103')
call_12104 = func_12103_call()
output = call_12104
func_12105 = relay.Function([], output)
mutated_mod['func_12105'] = func_12105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11129_call = mod.get_global_var('func_11129')
func_11130_call = mutated_mod.get_global_var('func_11130')
call_12106 = relay.TupleGetItem(func_11129_call(), 0)
call_12107 = relay.TupleGetItem(func_11130_call(), 0)
func_5100_call = mod.get_global_var('func_5100')
func_5101_call = mutated_mod.get_global_var('func_5101')
call_12116 = relay.TupleGetItem(func_5100_call(), 0)
call_12117 = relay.TupleGetItem(func_5101_call(), 0)
func_6622_call = mod.get_global_var('func_6622')
func_6623_call = mutated_mod.get_global_var('func_6623')
call_12141 = func_6622_call()
call_12142 = func_6622_call()
output = relay.Tuple([call_12106,call_12116,call_12141,])
output2 = relay.Tuple([call_12107,call_12117,call_12142,])
func_12145 = relay.Function([], output)
mod['func_12145'] = func_12145
mod = relay.transform.InferType()(mod)
mutated_mod['func_12145'] = func_12145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12145_call = mutated_mod.get_global_var('func_12145')
call_12146 = func_12145_call()
output = call_12146
func_12147 = relay.Function([], output)
mutated_mod['func_12147'] = func_12147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8801_call = mod.get_global_var('func_8801')
func_8803_call = mutated_mod.get_global_var('func_8803')
call_12197 = relay.TupleGetItem(func_8801_call(), 0)
call_12198 = relay.TupleGetItem(func_8803_call(), 0)
func_3079_call = mod.get_global_var('func_3079')
func_3080_call = mutated_mod.get_global_var('func_3080')
call_12216 = relay.TupleGetItem(func_3079_call(), 0)
call_12217 = relay.TupleGetItem(func_3080_call(), 0)
output = relay.Tuple([call_12197,call_12216,])
output2 = relay.Tuple([call_12198,call_12217,])
func_12218 = relay.Function([], output)
mod['func_12218'] = func_12218
mod = relay.transform.InferType()(mod)
mutated_mod['func_12218'] = func_12218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12218_call = mutated_mod.get_global_var('func_12218')
call_12219 = func_12218_call()
output = call_12219
func_12220 = relay.Function([], output)
mutated_mod['func_12220'] = func_12220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7859_call = mod.get_global_var('func_7859')
func_7861_call = mutated_mod.get_global_var('func_7861')
call_12221 = relay.TupleGetItem(func_7859_call(), 0)
call_12222 = relay.TupleGetItem(func_7861_call(), 0)
func_2566_call = mod.get_global_var('func_2566')
func_2569_call = mutated_mod.get_global_var('func_2569')
var_12233 = relay.var("var_12233", dtype = "uint8", shape = (448,))#candidate|12233|(448,)|var|uint8
call_12232 = relay.TupleGetItem(func_2566_call(relay.reshape(var_12233.astype('uint8'), [448,])), 2)
call_12234 = relay.TupleGetItem(func_2569_call(relay.reshape(var_12233.astype('uint8'), [448,])), 2)
output = relay.Tuple([call_12221,call_12232,var_12233,])
output2 = relay.Tuple([call_12222,call_12234,var_12233,])
func_12237 = relay.Function([var_12233,], output)
mod['func_12237'] = func_12237
mod = relay.transform.InferType()(mod)
var_12238 = relay.var("var_12238", dtype = "uint8", shape = (448,))#candidate|12238|(448,)|var|uint8
output = func_12237(var_12238)
func_12239 = relay.Function([var_12238], output)
mutated_mod['func_12239'] = func_12239
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12254 = relay.var("var_12254", dtype = "float64", shape = (6, 2, 11))#candidate|12254|(6, 2, 11)|var|float64
uop_12255 = relay.sigmoid(var_12254.astype('float64')) # shape=(6, 2, 11)
uop_12269 = relay.sinh(var_12254.astype('float64')) # shape=(6, 2, 11)
bop_12285 = relay.greater_equal(uop_12255.astype('bool'), relay.reshape(uop_12269.astype('bool'), relay.shape_of(uop_12255))) # shape=(6, 2, 11)
output = bop_12285
output2 = bop_12285
F = relay.Function([var_12254,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_12254,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

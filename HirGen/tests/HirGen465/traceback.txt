==========mod==========
#[version = "0.0.5"]
def @func_6760() -> Tensor[(12), float64] {
  %0 = @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */;
  %0.2
}

def @main() -> (Tensor[(588, 2), float64],) {
  %1 = @func_5818() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(1, 4, 3), float64], Tensor[(588, 2), float64], Tensor[(12), float64]) */;
  %2 = %1.2;
  %3 = cast(%2, dtype="float64") /* ty=Tensor[(588, 2), float64] */;
  %4 = cosh(%3) /* ty=Tensor[(588, 2), float64] */;
  (%4,)
}

def @func_5512() -> (Tensor[(8, 10, 16), float64],) {
  %5 = @func_5142() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */;
  %6 = %5.3;
  (%6,)
}

def @func_5664(%var_5638: Tensor[(5, 9, 11), bool], %var_5639: Tensor[(5, 9, 11), bool]) -> (Tensor[(5, 9, 11), bool], Tensor[(5, 9, 11), float32]) {
  %7 = cast(%var_5639, dtype="bool") /* ty=Tensor[(5, 9, 11), bool] */;
  %8 = shape_of(%var_5638, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%var_5638, dtype="bool") /* ty=Tensor[(5, 9, 11), bool] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %11 = cast(%var_5639, dtype="float32") /* ty=Tensor[(5, 9, 11), float32] */;
  %12 = logical_or(%9, %10) /* ty=Tensor[(5, 9, 11), bool] */;
  %13 = sqrt(%11) /* ty=Tensor[(5, 9, 11), float32] */;
  (%12, %13)
}

def @func_8413() -> Tensor[(12), float64] {
  @func_6760() /* ty=Tensor[(12), float64] */
}

def @func_8697() -> Tensor[(7), int64] {
  %14 = @func_8163() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(3, 11, 11), float64], Tensor[(9, 6, 7), float64], Tensor[(378), uint32], Tensor[(560), int64], Tensor[(7), int64]) */;
  %14.5
}

def @func_8894(%var_8864: Tensor[(15, 7, 4), uint16], %var_8865: Tensor[(15, 7, 4), uint16]) -> (Tensor[(15, 7, 4), uint16], Tensor[(15, 7, 4), float64]) {
  %15 = cast(%var_8865, dtype="uint16") /* ty=Tensor[(15, 7, 4), uint16] */;
  %16 = shape_of(%var_8864, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(%var_8864, dtype="uint16") /* ty=Tensor[(15, 7, 4), uint16] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %19 = cast(%var_8864, dtype="float64") /* ty=Tensor[(15, 7, 4), float64] */;
  %20 = subtract(%17, %18) /* ty=Tensor[(15, 7, 4), uint16] */;
  %21 = atanh(%19) /* ty=Tensor[(15, 7, 4), float64] */;
  (%20, %21)
}

def @func_5054(%var_5049: Tensor[(1, 8, 16), uint8]) -> Tensor[(9, 8, 16), uint8] {
  %22 = cast(%var_5049, dtype="uint8") /* ty=Tensor[(1, 8, 16), uint8] */;
  %23 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 8, 16), uint8] */, dtype="uint8") /* ty=Tensor[(9, 8, 16), uint8] */;
  logical_xor(%22, %23) /* ty=Tensor[(9, 8, 16), uint8] */
}

def @func_5941() -> Tensor[(3, 11, 11), float64] {
  %24 = @func_5729() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(8, 10, 16), float64]) */;
  %24.1
}

def @func_4679(%var_4623: Tensor[(9, 15, 15), float64], %var_4633: Tensor[(208), float32], %var_4645: Tensor[(525), float32], %var_4647: Tensor[(12), float64], %var_4661: Tensor[(990), float32]) -> (Tensor[(9, 15, 15), float64], Tensor[(1144), float32], Tensor[(1144), float32], Tensor[(196), float64], Tensor[(208), float32], Tensor[(1176), float64], Tensor[(525), float32], Tensor[(1176), float64], Tensor[(12), float64], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(12), float64]) {
  %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(9, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(9, 15, 15), float64] */;
  %26 = shape_of(%var_4623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(%var_4623, dtype="float64") /* ty=Tensor[(9, 15, 15), float64] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %29 = cast(meta[relay.Constant][2] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %30 = cast(meta[relay.Constant][3] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %31 = cast(%var_4633, dtype="float32") /* ty=Tensor[(208), float32] */;
  %32 = cast(meta[relay.Constant][2] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %33 = reshape(%29, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
  %34 = reshape(%30, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float64] */;
  %35 = reshape(%31, newshape=[104, 2]) /* ty=Tensor[(104, 2), float32] */;
  %36 = reshape(%32, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
  %37 = @func_3075(%33, %34, %35, %36) /* ty=(Tensor[(1568), float64], Tensor[(2, 14, 7), float64], Tensor[(1144), float32], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(1144), float64], Tensor[(9, 8, 6), float64]) */;
  %38 = cast(%var_4645, dtype="float32") /* ty=Tensor[(525), float32] */;
  %39 = cast(meta[relay.Constant][4] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %40 = cast(%var_4647, dtype="float64") /* ty=Tensor[(12), float64] */;
  %41 = reshape(%38, newshape=[7, 5, 15]) /* ty=Tensor[(7, 5, 15), float32] */;
  %42 = reshape(%39, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %43 = reshape(%40, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %44 = @func_4077(%41, %42, %43) /* ty=(Tensor[(7, 5, 15), float32], Tensor[(8, 14, 14), float64], Tensor[(1568), float64], Tensor[(7, 5, 15), float64], Tensor[(12), float64], Tensor[(1176), float64], Tensor[(12), float64]) */;
  %45 = cast(%var_4661, dtype="float32") /* ty=Tensor[(990), float32] */;
  %46 = reshape(%45, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float32] */;
  %47 = cast(meta[relay.Constant][4] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %48 = cast(%var_4647, dtype="float64") /* ty=Tensor[(12), float64] */;
  %49 = reshape(%47, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float64] */;
  %50 = reshape(%48, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %51 = @func_3867(%49, %50) /* ty=(Tensor[(6, 14, 14), float64], Tensor[(1, 4, 3), float64], Tensor[(12), float64]) */;
  %52 = power(%27, %28) /* ty=Tensor[(9, 15, 15), float64] */;
  %53 = %37.2;
  %54 = %44.5;
  %55 = @func_273(%46) /* ty=Tensor[(10, 11, 9), float32] */;
  %56 = %51.2;
  (%52, %53, meta[relay.Constant][2] /* ty=Tensor[(1144), float32] */, meta[relay.Constant][3] /* ty=Tensor[(196), float64] */, %var_4633, %54, %var_4645, meta[relay.Constant][4] /* ty=Tensor[(1176), float64] */, %var_4647, %55, %var_4661, %56)
}

def @func_6082() -> Tensor[(1, 16, 15), float32] {
  @func_5502() /* ty=Tensor[(1, 16, 15), float32] */
}

def @func_5316() -> (Tensor[(3, 11, 11), float64],) {
  %57 = @func_5240() /* ty=Tensor[(3, 11, 11), float64] */;
  (%57,)
}

def @func_5927() -> (Tensor[(3, 11, 11), bool], Tensor[(3, 11, 11), float32]) {
  %58 = @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */;
  %59 = %58.0;
  %60 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 11, 11), float64] */, dtype="bool") /* ty=Tensor[(3, 11, 11), bool] */;
  %61 = shape_of(%59, dtype="int32") /* ty=Tensor[(3), int32] */;
  %62 = cast(%59, dtype="bool") /* ty=Tensor[(3, 11, 11), bool] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %64 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 11, 11), float64] */, dtype="float32") /* ty=Tensor[(3, 11, 11), float32] */;
  %65 = shape_of(%59, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%59, dtype="float32") /* ty=Tensor[(3, 11, 11), float32] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %68 = not_equal(%62, %63) /* ty=Tensor[(3, 11, 11), bool] */;
  %69 = floor_mod(%66, %67) /* ty=Tensor[(3, 11, 11), float32] */;
  (%68, %69)
}

def @func_6280() -> (Tensor[(12), float64], Tensor[(4, 2, 5), uint8], Tensor[(2, 20), int16], Tensor[(3, 11, 11), float64]) {
  %70 = @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */;
  %71 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 20), int16] */, dtype="int16") /* ty=Tensor[(2, 20), int16] */;
  %72 = reshape(%71, newshape=[4, 2, 5]) /* ty=Tensor[(4, 2, 5), int16] */;
  %73 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %74 = %70.2;
  %75 = @func_3727(%72) /* ty=Tensor[(4, 2, 5), uint8] */;
  %76 = %73.0;
  (%74, %75, meta[relay.Constant][7] /* ty=Tensor[(2, 20), int16] */, %76)
}

def @func_7493(%var_7471: Tensor[(6, 4, 7), float64]) -> (Tensor[(6, 4, 7), float64], Tensor[(8, 10, 16), float64]) {
  %77 = cast(%var_7471, dtype="float64") /* ty=Tensor[(6, 4, 7), float64] */;
  %78 = @func_5512() /* ty=(Tensor[(8, 10, 16), float64],) */;
  %79 = cos(%77) /* ty=Tensor[(6, 4, 7), float64] */;
  %80 = %78.0;
  (%79, %80)
}

def @func_6936() -> Tensor[(2, 3, 14), float64] {
  %81 = @func_6389() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(2, 3, 14), float64]) */;
  %81.1
}

def @func_8163() -> (Tensor[(1, 16, 15), float32], Tensor[(3, 11, 11), float64], Tensor[(9, 6, 7), float64], Tensor[(378), uint32], Tensor[(560), int64], Tensor[(7), int64]) {
  %82 = @func_5729() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(8, 10, 16), float64]) */;
  %83 = cast(meta[relay.Constant][8] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %84 = cast(meta[relay.Constant][8] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %85 = cast(meta[relay.Constant][9] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %86 = reshape(%83, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
  %87 = reshape(%84, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
  %88 = reshape(%85, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %89 = @func_4240(%86, %87, %88) /* ty=(Tensor[(9, 6, 7), uint32], Tensor[(9, 6, 7), float64], Tensor[(5, 16, 7), bool], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64]) */;
  %90 = %89.1;
  %91 = cast(%90, dtype="uint32") /* ty=Tensor[(9, 6, 7), uint32] */;
  %92 = cast(%90, dtype="uint32") /* ty=Tensor[(9, 6, 7), uint32] */;
  %93 = cast(meta[relay.Constant][9] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %94 = reshape(%91, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
  %95 = reshape(%92, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
  %96 = reshape(%93, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %97 = @func_4240(%94, %95, %96) /* ty=(Tensor[(9, 6, 7), uint32], Tensor[(9, 6, 7), float64], Tensor[(5, 16, 7), bool], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64]) */;
  %98 = @func_6082() /* ty=Tensor[(1, 16, 15), float32] */;
  %99 = %82.0;
  %100 = %97.3;
  (%98, %99, %90, meta[relay.Constant][8] /* ty=Tensor[(378), uint32] */, meta[relay.Constant][9] /* ty=Tensor[(560), int64] */, %100)
}

def @func_3647(%var_3637: Tensor[(1, 1, 7), int64], %var_3638: Tensor[(5, 6, 7), int64], %var_3642: Tensor[(5, 16, 7), int64]) -> (Tensor[(5, 6, 7), int64], Tensor[(5, 16, 7), bool]) {
  %101 = cast(%var_3637, dtype="int64") /* ty=Tensor[(1, 1, 7), int64] */;
  %102 = cast(%var_3638, dtype="int64") /* ty=Tensor[(5, 6, 7), int64] */;
  %103 = cast(%var_3637, dtype="bool") /* ty=Tensor[(1, 1, 7), bool] */;
  %104 = cast(%var_3642, dtype="bool") /* ty=Tensor[(5, 16, 7), bool] */;
  %105 = logical_xor(%101, %102) /* ty=Tensor[(5, 6, 7), int64] */;
  %106 = less_equal(%103, %104) /* ty=Tensor[(5, 16, 7), bool] */;
  (%105, %106)
}

def @func_8573() -> Tensor[(8, 10, 16), float64] {
  %107 = @func_7128() /* ty=(Tensor[(8, 10, 16), float64],) */;
  %107.0
}

def @func_2585(%var_2560: Tensor[(11, 13, 8), float32], %var_2561: Tensor[(11, 13, 8), float32], %var_2565: Tensor[(11, 13, 8), float32]) -> (Tensor[(11, 13, 8), bool], Tensor[(11, 13, 8), int8], Tensor[(9, 8, 6), float64], Tensor[(1568), float64]) {
  %108 = cast(%var_2561, dtype="bool") /* ty=Tensor[(11, 13, 8), bool] */;
  %109 = shape_of(%var_2560, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(%var_2560, dtype="bool") /* ty=Tensor[(11, 13, 8), bool] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %112 = cast(%var_2565, dtype="int8") /* ty=Tensor[(11, 13, 8), int8] */;
  %113 = shape_of(%var_2561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(%var_2561, dtype="int8") /* ty=Tensor[(11, 13, 8), int8] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %116 = cast(meta[relay.Constant][10] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %117 = cast(meta[relay.Constant][10] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %118 = reshape(%116, newshape=[8, 14, 14]) /* ty=Tensor[(8, 14, 14), float64] */;
  %119 = reshape(%117, newshape=[8, 14, 14]) /* ty=Tensor[(8, 14, 14), float64] */;
  %120 = @func_2520(%118, %119) /* ty=(Tensor[(8, 14, 14), float64], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(9, 8, 6), float64]) */;
  %121 = equal(%110, %111) /* ty=Tensor[(11, 13, 8), bool] */;
  %122 = multiply(%114, %115) /* ty=Tensor[(11, 13, 8), int8] */;
  %123 = %120.3;
  (%121, %122, %123, meta[relay.Constant][10] /* ty=Tensor[(1568), float64] */)
}

def @func_5839() -> Tensor[(3, 11, 11), float64] {
  %124 = @func_5729() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(8, 10, 16), float64]) */;
  %124.0
}

def @func_5066(%var_5058: Tensor[(7, 7, 4), float32]) -> (Tensor[(7, 7, 4), float32],) {
  %125 = cast(%var_5058, dtype="float32") /* ty=Tensor[(7, 7, 4), float32] */;
  %126 = cos(%125) /* ty=Tensor[(7, 7, 4), float32] */;
  (%126,)
}

def @func_5223(%var_5176: Tensor[(7, 4, 8), uint16], %var_5177: Tensor[(7, 4, 8), uint16]) -> (Tensor[(3, 11, 11), float64], Tensor[(7, 4, 8), float64], Tensor[(1, 16, 15), float32]) {
  %127 = @func_5092() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %128 = cast(%var_5177, dtype="bool") /* ty=Tensor[(7, 4, 8), bool] */;
  %129 = shape_of(%var_5176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %130 = cast(%var_5176, dtype="bool") /* ty=Tensor[(7, 4, 8), bool] */;
  %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %132 = less_equal(%130, %131) /* ty=Tensor[(7, 4, 8), bool] */;
  %133 = cast(%var_5176, dtype="float64") /* ty=Tensor[(7, 4, 8), float64] */;
  %134 = shape_of(%132, dtype="int32") /* ty=Tensor[(3), int32] */;
  %135 = cast(%132, dtype="float64") /* ty=Tensor[(7, 4, 8), float64] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %137 = @func_5142() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */;
  %138 = %127.0;
  %139 = floor_divide(%135, %136) /* ty=Tensor[(7, 4, 8), float64] */;
  %140 = %137.0;
  (%138, %139, %140)
}

def @func_6090() -> (Tensor[(2, 3, 14), float64],) {
  %141 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 3, 14), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 14), float64] */;
  %142 = asinh(%141) /* ty=Tensor[(2, 3, 14), float64] */;
  (%142,)
}

def @func_5875() -> (Tensor[(12), float64],) {
  %143 = @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */;
  %144 = %143.2;
  (%144,)
}

def @func_7606(%var_7587: Tensor[(16, 16, 10), int32], %var_7588: Tensor[(16, 16, 10), int32]) -> (Tensor[(16, 16, 10), bool],) {
  %145 = cast(%var_7588, dtype="bool") /* ty=Tensor[(16, 16, 10), bool] */;
  %146 = shape_of(%var_7587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %147 = cast(%var_7587, dtype="bool") /* ty=Tensor[(16, 16, 10), bool] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %149 = not_equal(%147, %148) /* ty=Tensor[(16, 16, 10), bool] */;
  %150 = cast(%var_7588, dtype="bool") /* ty=Tensor[(16, 16, 10), bool] */;
  %151 = shape_of(%149, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(%149, dtype="bool") /* ty=Tensor[(16, 16, 10), bool] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %154 = less_equal(%152, %153) /* ty=Tensor[(16, 16, 10), bool] */;
  (%154,)
}

def @func_1804(%var_1777: Tensor[(13, 4, 4), float32]) -> (Tensor[(13, 4, 4), float32], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(13, 4, 4), float64], Tensor[(9, 8, 6), float64]) {
  %155 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 4, 4), float32] */, dtype="float32") /* ty=Tensor[(13, 4, 4), float32] */;
  %156 = shape_of(%var_1777, dtype="int32") /* ty=Tensor[(3), int32] */;
  %157 = cast(%var_1777, dtype="float32") /* ty=Tensor[(13, 4, 4), float32] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %159 = cast(meta[relay.Constant][13] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %160 = reshape(%159, newshape=[9, 8, 6]) /* ty=Tensor[(9, 8, 6), float64] */;
  %161 = @func_1047(%160) /* ty=(Tensor[(9, 8, 6), float64],) */;
  %162 = cast(%var_1777, dtype="float64") /* ty=Tensor[(13, 4, 4), float64] */;
  %163 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(13, 4, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 4, 4), float32] */, dtype="float64") /* ty=Tensor[(13, 4, 4), float64] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %166 = %161.0;
  %167 = cast(%166, dtype="float64") /* ty=Tensor[(9, 8, 6), float64] */;
  %168 = reshape(%167, newshape=[9, 8, 6]) /* ty=Tensor[(9, 8, 6), float64] */;
  %169 = @func_1047(%168) /* ty=(Tensor[(9, 8, 6), float64],) */;
  %170 = divide(%157, %158) /* ty=Tensor[(13, 4, 4), float32] */;
  %171 = power(%164, %165) /* ty=Tensor[(13, 4, 4), float64] */;
  %172 = %169.0;
  (%170, %166, meta[relay.Constant][13] /* ty=Tensor[(432), float64] */, %171, %172)
}

def @func_7466(%var_7432: Tensor[(882), float64], %var_7438: Tensor[(196), float32]) -> (Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(7, 7, 4), float64], Tensor[(196), float32], Tensor[(1568), float64], Tensor[(882), int64]) {
  %173 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %174 = cast(%var_7438, dtype="float32") /* ty=Tensor[(196), float32] */;
  %175 = cast(meta[relay.Constant][14] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %176 = reshape(%174, newshape=[196]) /* ty=Tensor[(196), float32] */;
  %177 = reshape(%175, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %178 = @func_6045(%176, %177) /* ty=(Tensor[(3, 11, 11), float64], Tensor[(196), float32], Tensor[(7, 7, 4), float64], Tensor[(104, 2), float32], Tensor[(1568), float64]) */;
  %179 = cast(%var_7432, dtype="float64") /* ty=Tensor[(882), float64] */;
  %180 = reshape(%179, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float64] */;
  %181 = @func_332(%180) /* ty=Tensor[(9, 7, 14), uint64] */;
  %182 = cast(%181, dtype="int64") /* ty=Tensor[(9, 7, 14), int64] */;
  %183 = shape_of(%var_7432, dtype="int32") /* ty=Tensor[(1), int32] */;
  %184 = cast(%var_7432, dtype="int64") /* ty=Tensor[(882), int64] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?), int64] */;
  %186 = @func_6187() /* ty=Tensor[(3, 11, 11), float64] */;
  %187 = %173.0;
  %188 = %178.2;
  %189 = right_shift(%184, %185) /* ty=Tensor[(882), int64] */;
  (%186, %187, %188, %var_7438, meta[relay.Constant][14] /* ty=Tensor[(1568), float64] */, %189)
}

def @func_7808(%var_7718: Tensor[(10, 14, 1), float64], %var_7738: Tensor[(10, 14, 16), float64], %var_7750: Tensor[(10, 14, 6), float64], %var_7754: Tensor[(10, 14, 16), bool]) -> (Tensor[(2, 3, 14), float64], Tensor[(10, 14, 6), float32], Tensor[(10, 14, 16), uint32], Tensor[(3, 11, 11), float64], Tensor[(10, 14, ?), float64]) {
  %190 = cast(%var_7718, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %191 = log(%190) /* ty=Tensor[(10, 14, 1), float64] */;
  %192 = cast(%191, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %193 = cast(%var_7750, dtype="float32") /* ty=Tensor[(10, 14, 6), float32] */;
  %194 = cast(%var_7718, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %195 = cast(%var_7738, dtype="bool") /* ty=Tensor[(10, 14, 16), bool] */;
  %196 = logical_or(%194, %195) /* ty=Tensor[(10, 14, 16), bool] */;
  %197 = cast(%var_7754, dtype="uint32") /* ty=Tensor[(10, 14, 16), uint32] */;
  %198 = shape_of(%196, dtype="int32") /* ty=Tensor[(3), int32] */;
  %199 = cast(%196, dtype="uint32") /* ty=Tensor[(10, 14, 16), uint32] */;
  %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %201 = @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */;
  %202 = cast(%var_7718, dtype="int16") /* ty=Tensor[(10, 14, 1), int16] */;
  %203 = shape_of(%191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %204 = cast(%191, dtype="int16") /* ty=Tensor[(10, 14, 1), int16] */;
  %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %206 = right_shift(%204, %205) /* ty=Tensor[(10, 14, ?), int16] */;
  %207 = cast(%206, dtype="float64") /* ty=Tensor[(10, 14, ?), float64] */;
  %208 = @func_6679() /* ty=Tensor[(2, 3, 14), float64] */;
  %209 = power(%192, %193) /* ty=Tensor[(10, 14, 6), float32] */;
  %210 = multiply(%199, %200) /* ty=Tensor[(10, 14, 16), uint32] */;
  %211 = %201.0;
  %212 = atanh(%207) /* ty=Tensor[(10, 14, ?), float64] */;
  (%208, %209, %210, %211, %212)
}

def @func_3948(%var_3923: Tensor[(12, 1), float64]) -> (Tensor[(1, 4, 3), float64], Tensor[(12, 1), float64], Tensor[(5, 6, 7), int64], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64], Tensor[(2, 13, 3), float32]) {
  %213 = cast(%var_3923, dtype="float64") /* ty=Tensor[(12, 1), float64] */;
  %214 = reshape(%213, newshape=[1, 4, 3]) /* ty=Tensor[(1, 4, 3), float64] */;
  %215 = @func_1337(%214) /* ty=(Tensor[(?, 4, 3), float64], Tensor[(1, 4, 3), float64]) */;
  %216 = cast(meta[relay.Constant][15] /* ty=Tensor[(7), int64] */, dtype="int64") /* ty=Tensor[(7), int64] */;
  %217 = cast(meta[relay.Constant][16] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %218 = cast(meta[relay.Constant][17] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %219 = reshape(%216, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), int64] */;
  %220 = reshape(%217, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), int64] */;
  %221 = reshape(%218, newshape=[5, 16, 7]) /* ty=Tensor[(5, 16, 7), int64] */;
  %222 = @func_3647(%219, %220, %221) /* ty=(Tensor[(5, 6, 7), int64], Tensor[(5, 16, 7), bool]) */;
  %223 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 13, 3), uint32] */, dtype="float64") /* ty=Tensor[(2, 13, 3), float64] */;
  %224 = sigmoid(%223) /* ty=Tensor[(2, 13, 3), float64] */;
  %225 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 13, 3), uint32] */, dtype="uint32") /* ty=Tensor[(1, 13, 3), uint32] */;
  %226 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 13, 3), uint32] */, dtype="uint32") /* ty=Tensor[(2, 13, 3), uint32] */;
  %227 = bitwise_xor(%225, %226) /* ty=Tensor[(2, 13, 3), uint32] */;
  %228 = cast(%227, dtype="bool") /* ty=Tensor[(2, 13, 3), bool] */;
  %229 = shape_of(%224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%224, dtype="bool") /* ty=Tensor[(2, 13, 3), bool] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %232 = logical_or(%230, %231) /* ty=Tensor[(2, 13, 3), bool] */;
  %233 = cast(%232, dtype="float32") /* ty=Tensor[(2, 13, 3), float32] */;
  %234 = %215.1;
  %235 = %222.0;
  %236 = sqrt(%233) /* ty=Tensor[(2, 13, 3), float32] */;
  (%234, %var_3923, %235, meta[relay.Constant][15] /* ty=Tensor[(7), int64] */, meta[relay.Constant][16] /* ty=Tensor[(210), int64] */, meta[relay.Constant][17] /* ty=Tensor[(560), int64] */, %236)
}

def @func_3834(%var_3811: Tensor[(8, 2, 11), float32]) -> (Tensor[(14, 5, 12), bool], Tensor[(420, 2), bool], Tensor[(8, 2, 11), float64]) {
  %237 = cast(meta[relay.Constant][20] /* ty=Tensor[(420, 2), bool] */, dtype="bool") /* ty=Tensor[(420, 2), bool] */;
  %238 = cast(meta[relay.Constant][20] /* ty=Tensor[(420, 2), bool] */, dtype="bool") /* ty=Tensor[(420, 2), bool] */;
  %239 = reshape(%237, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), bool] */;
  %240 = reshape(%238, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), bool] */;
  %241 = @func_3139(%239, %240) /* ty=(Tensor[(14, 5, 12), bool],) */;
  %242 = cast(%var_3811, dtype="float32") /* ty=Tensor[(8, 2, 11), float32] */;
  %243 = tan(%242) /* ty=Tensor[(8, 2, 11), float32] */;
  %244 = cast(%243, dtype="float64") /* ty=Tensor[(8, 2, 11), float64] */;
  %245 = %241.0;
  %246 = sqrt(%244) /* ty=Tensor[(8, 2, 11), float64] */;
  (%245, meta[relay.Constant][20] /* ty=Tensor[(420, 2), bool] */, %246)
}

def @func_6328() -> Tensor[(8, 10, 16), float64] {
  %247 = @func_5729() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(8, 10, 16), float64]) */;
  %247.2
}

def @func_8840() -> Tensor[(5, 9, 11), float32] {
  %248 = @func_7552() /* ty=(Tensor[(12), float64], Tensor[(5, 9, 11), float32], Tensor[(1, 495), bool]) */;
  %248.1
}

def @func_7088(%var_7072: Tensor[(10, 13, 2), float64], %var_7081: Tensor[(990), float32], %var_7082: Tensor[(525), float32]) -> (Tensor[(10, 13, 2), float64], Tensor[(14, 16, 15), uint64], Tensor[(3360), float32], Tensor[(12), float64], Tensor[(990), float32], Tensor[(525), float32]) {
  %249 = cast(%var_7072, dtype="float64") /* ty=Tensor[(10, 13, 2), float64] */;
  %250 = cast(meta[relay.Constant][21] /* ty=Tensor[(3360), float32] */, dtype="float32") /* ty=Tensor[(3360), float32] */;
  %251 = cast(meta[relay.Constant][22] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %252 = cast(%var_7081, dtype="float32") /* ty=Tensor[(990), float32] */;
  %253 = cast(%var_7082, dtype="float32") /* ty=Tensor[(525), float32] */;
  %254 = reshape(%250, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float32] */;
  %255 = reshape(%251, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %256 = reshape(%252, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %257 = reshape(%253, newshape=[35, 15]) /* ty=Tensor[(35, 15), float32] */;
  %258 = @func_5776(%254, %255, %256, %257) /* ty=(Tensor[(14, 16, 15), uint64], Tensor[(1144), float32], Tensor[(2025), float64], Tensor[(208), float32], Tensor[(12), float64], Tensor[(990), float32], Tensor[(14, 5, 12), bool], Tensor[(840), bool], Tensor[(35, 15), uint16]) */;
  %259 = sin(%249) /* ty=Tensor[(10, 13, 2), float64] */;
  %260 = %258.0;
  (%259, %260, meta[relay.Constant][21] /* ty=Tensor[(3360), float32] */, meta[relay.Constant][22] /* ty=Tensor[(12), float64] */, %var_7081, %var_7082)
}

def @func_8100() -> (Tensor[(1, 4, 3), float64],) {
  %261 = @func_5818() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(1, 4, 3), float64], Tensor[(588, 2), float64], Tensor[(12), float64]) */;
  %262 = %261.1;
  %263 = cast(%262, dtype="float64") /* ty=Tensor[(1, 4, 3), float64] */;
  %264 = tan(%263) /* ty=Tensor[(1, 4, 3), float64] */;
  (%264,)
}

def @func_8296(%var_8292: Tensor[(10, 5, 16), float32]) -> (Tensor[(10, 5, 16), float32],) {
  %265 = cast(%var_8292, dtype="float32") /* ty=Tensor[(10, 5, 16), float32] */;
  %266 = sin(%265) /* ty=Tensor[(10, 5, 16), float32] */;
  (%266,)
}

def @func_6045(%var_6020: Tensor[(196), float32], %var_6035: Tensor[(1568), float64]) -> (Tensor[(3, 11, 11), float64], Tensor[(196), float32], Tensor[(7, 7, 4), float64], Tensor[(104, 2), float32], Tensor[(1568), float64]) {
  %267 = @func_5156() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %268 = cast(%var_6020, dtype="float32") /* ty=Tensor[(196), float32] */;
  %269 = reshape(%268, newshape=[7, 7, 4]) /* ty=Tensor[(7, 7, 4), float32] */;
  %270 = @func_5066(%269) /* ty=(Tensor[(7, 7, 4), float32],) */;
  %271 = %270.0;
  %272 = cast(%271, dtype="float64") /* ty=Tensor[(7, 7, 4), float64] */;
  %273 = cast(%var_6035, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %274 = cast(%var_6035, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %275 = reshape(%273, newshape=[8, 14, 14]) /* ty=Tensor[(8, 14, 14), float64] */;
  %276 = reshape(%274, newshape=[8, 14, 14]) /* ty=Tensor[(8, 14, 14), float64] */;
  %277 = @func_2520(%275, %276) /* ty=(Tensor[(8, 14, 14), float64], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(9, 8, 6), float64]) */;
  %278 = %267.0;
  %279 = exp(%272) /* ty=Tensor[(7, 7, 4), float64] */;
  %280 = %277.2;
  (%278, %var_6020, %279, %280, %var_6035)
}

def @func_5358(%var_5343: Tensor[(324, 1), float32], %var_5356: Tensor[(784, 2), float64]) -> (Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(6, 6, 9), float32], Tensor[(324, 1), float32], Tensor[(630), float64], Tensor[(7, 126), float64], Tensor[(9, 8, 6), float64], Tensor[(784, 2), float64]) {
  %281 = @func_5092() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %282 = @func_5156() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %283 = cast(%var_5343, dtype="float32") /* ty=Tensor[(324, 1), float32] */;
  %284 = cast(meta[relay.Constant][23] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %285 = cast(meta[relay.Constant][24] /* ty=Tensor[(7, 126), float64] */, dtype="float64") /* ty=Tensor[(7, 126), float64] */;
  %286 = reshape(%283, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
  %287 = reshape(%284, newshape=[630]) /* ty=Tensor[(630), float64] */;
  %288 = reshape(%285, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %289 = @func_4432(%286, %287, %288) /* ty=(Tensor[(6, 6, 9), float32], Tensor[(9, 7, 14), uint64], Tensor[(630), float64], Tensor[(882), float64]) */;
  %290 = cast(%var_5356, dtype="float64") /* ty=Tensor[(784, 2), float64] */;
  %291 = cast(%var_5356, dtype="float64") /* ty=Tensor[(784, 2), float64] */;
  %292 = reshape(%290, newshape=[8, 14, 14]) /* ty=Tensor[(8, 14, 14), float64] */;
  %293 = reshape(%291, newshape=[8, 14, 14]) /* ty=Tensor[(8, 14, 14), float64] */;
  %294 = @func_2520(%292, %293) /* ty=(Tensor[(8, 14, 14), float64], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(9, 8, 6), float64]) */;
  %295 = %281.0;
  %296 = %282.0;
  %297 = %289.0;
  %298 = %294.1;
  (%295, %296, %297, %var_5343, meta[relay.Constant][23] /* ty=Tensor[(630), float64] */, meta[relay.Constant][24] /* ty=Tensor[(7, 126), float64] */, %298, %var_5356)
}

def @func_3139(%var_3134: Tensor[(14, 5, 12), bool], %var_3135: Tensor[(14, 5, 12), bool]) -> (Tensor[(14, 5, 12), bool],) {
  %299 = cast(%var_3135, dtype="bool") /* ty=Tensor[(14, 5, 12), bool] */;
  %300 = shape_of(%var_3134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(%var_3134, dtype="bool") /* ty=Tensor[(14, 5, 12), bool] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %303 = logical_or(%301, %302) /* ty=Tensor[(14, 5, 12), bool] */;
  (%303,)
}

def @func_5031() -> (Tensor[(3, 11, 11), float64],) {
  %304 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 11, 11), float64] */, dtype="float64") /* ty=Tensor[(3, 11, 11), float64] */;
  %305 = asin(%304) /* ty=Tensor[(3, 11, 11), float64] */;
  (%305,)
}

def @func_4175(%var_4095: Tensor[(8, 2, 7), uint32], %var_4101: Tensor[(8, 2, 7), uint32], %var_4126: Tensor[(40), int16], %var_4130: Tensor[(78), float32], %var_4131: Tensor[(882), float64], %var_4145: Tensor[(432), float64]) -> (Tensor[(8, 2, 7), uint32], Tensor[(4, 2, 5), uint8], Tensor[(40), int16], Tensor[(630), float64], Tensor[(78), float32], Tensor[(882), float64], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(9, 8, 6), float64], Tensor[(8, 2, 7), float32], Tensor[(9, 8, 6), float64], Tensor[(1144), float32]) {
  %306 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 2, 1), uint32] */, dtype="uint32") /* ty=Tensor[(8, 2, 1), uint32] */;
  %307 = cast(%var_4095, dtype="uint32") /* ty=Tensor[(8, 2, 7), uint32] */;
  %308 = cast(%var_4126, dtype="int16") /* ty=Tensor[(40), int16] */;
  %309 = reshape(%308, newshape=[4, 2, 5]) /* ty=Tensor[(4, 2, 5), int16] */;
  %310 = cast(%var_4130, dtype="float32") /* ty=Tensor[(78), float32] */;
  %311 = cast(%var_4131, dtype="float64") /* ty=Tensor[(882), float64] */;
  %312 = reshape(%310, newshape=[2, 3, 13]) /* ty=Tensor[(2, 3, 13), float32] */;
  %313 = reshape(%311, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %314 = @func_3471(%312, %313) /* ty=(Tensor[(2, 3, 13), float32], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(990), float32], Tensor[(630), float64], Tensor[(882), float64]) */;
  %315 = cast(%var_4145, dtype="float64") /* ty=Tensor[(432), float64] */;
  %316 = reshape(%315, newshape=[9, 8, 6]) /* ty=Tensor[(9, 8, 6), float64] */;
  %317 = @func_1047(%316) /* ty=(Tensor[(9, 8, 6), float64],) */;
  %318 = %317.0;
  %319 = cast(%318, dtype="float64") /* ty=Tensor[(9, 8, 6), float64] */;
  %320 = reshape(%319, newshape=[9, 8, 6]) /* ty=Tensor[(9, 8, 6), float64] */;
  %321 = @func_1047(%320) /* ty=(Tensor[(9, 8, 6), float64],) */;
  %322 = cast(%var_4101, dtype="float64") /* ty=Tensor[(8, 2, 7), float64] */;
  %323 = atanh(%322) /* ty=Tensor[(8, 2, 7), float64] */;
  %324 = cast(%var_4101, dtype="bool") /* ty=Tensor[(8, 2, 7), bool] */;
  %325 = shape_of(%323, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(%323, dtype="bool") /* ty=Tensor[(8, 2, 7), bool] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %328 = not_equal(%326, %327) /* ty=Tensor[(8, 2, 7), bool] */;
  %329 = cast(%328, dtype="float32") /* ty=Tensor[(8, 2, 7), float32] */;
  %330 = log2(%329) /* ty=Tensor[(8, 2, 7), float32] */;
  %331 = cast(%328, dtype="bool") /* ty=Tensor[(8, 2, 7), bool] */;
  %332 = shape_of(%330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%330, dtype="bool") /* ty=Tensor[(8, 2, 7), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %335 = less(%333, %334) /* ty=Tensor[(8, 2, 7), bool] */;
  %336 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 2, 1), uint32] */, dtype="float64") /* ty=Tensor[(8, 2, 1), float64] */;
  %337 = cast(%var_4101, dtype="float64") /* ty=Tensor[(8, 2, 7), float64] */;
  %338 = floor_divide(%336, %337) /* ty=Tensor[(8, 2, 7), float64] */;
  %339 = cast(%338, dtype="float32") /* ty=Tensor[(8, 2, 7), float32] */;
  %340 = shape_of(%335, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%335, dtype="float32") /* ty=Tensor[(8, 2, 7), float32] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %343 = cast(meta[relay.Constant][27] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %344 = cast(meta[relay.Constant][27] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %345 = cast(meta[relay.Constant][27] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %346 = reshape(%343, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %347 = reshape(%344, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %348 = reshape(%345, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %349 = @func_2585(%346, %347, %348) /* ty=(Tensor[(11, 13, 8), bool], Tensor[(11, 13, 8), int8], Tensor[(9, 8, 6), float64], Tensor[(1568), float64]) */;
  %350 = right_shift(%306, %307) /* ty=Tensor[(8, 2, 7), uint32] */;
  %351 = @func_3727(%309) /* ty=Tensor[(4, 2, 5), uint8] */;
  %352 = %314.4;
  %353 = %321.0;
  %354 = mod(%341, %342) /* ty=Tensor[(8, 2, 7), float32] */;
  %355 = %349.2;
  (%350, %351, %var_4126, %352, %var_4130, %var_4131, %318, %var_4145, %353, %354, %355, meta[relay.Constant][27] /* ty=Tensor[(1144), float32] */)
}

def @func_7419(%var_7416: Tensor[(10, 16, 15), float32]) -> Tensor[(10, 16, 15), float32] {
  %356 = cast(%var_7416, dtype="float32") /* ty=Tensor[(10, 16, 15), float32] */;
  sqrt(%356) /* ty=Tensor[(10, 16, 15), float32] */
}

def @func_3471(%var_3447: Tensor[(2, 3, 13), float32], %var_3465: Tensor[(882), float64]) -> (Tensor[(2, 3, 13), float32], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(990), float32], Tensor[(630), float64], Tensor[(882), float64]) {
  %357 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 3, 13), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 13), float32] */;
  %358 = shape_of(%var_3447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%var_3447, dtype="float32") /* ty=Tensor[(2, 3, 13), float32] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %361 = cast(meta[relay.Constant][29] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %362 = reshape(%361, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float32] */;
  %363 = cast(meta[relay.Constant][30] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %364 = cast(%var_3465, dtype="float64") /* ty=Tensor[(882), float64] */;
  %365 = reshape(%363, newshape=[10, 7, 9]) /* ty=Tensor[(10, 7, 9), float64] */;
  %366 = reshape(%364, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %367 = @func_388(%365, %366) /* ty=(Tensor[(10, 7, 9), float64], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(9, 7, 14), uint64], Tensor[(882), float64]) */;
  %368 = divide(%359, %360) /* ty=Tensor[(2, 3, 13), float32] */;
  %369 = @func_273(%362) /* ty=Tensor[(10, 11, 9), float32] */;
  %370 = %367.2;
  (%368, %369, meta[relay.Constant][29] /* ty=Tensor[(990), float32] */, %370, meta[relay.Constant][30] /* ty=Tensor[(630), float64] */, %var_3465)
}

def @func_6734(%var_6717: Tensor[(3, 11, 11), float64], %var_6730: Tensor[(96), float64]) -> (Tensor[(3, 11, 11), float32], Tensor[(2, 6, 8), int32], Tensor[(96), float64]) {
  %371 = @func_6445() /* ty=Tensor[(3, 11, 11), float64] */;
  %372 = cast(%var_6717, dtype="float32") /* ty=Tensor[(3, 11, 11), float32] */;
  %373 = shape_of(%371, dtype="int32") /* ty=Tensor[(3), int32] */;
  %374 = cast(%371, dtype="float32") /* ty=Tensor[(3, 11, 11), float32] */;
  %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %376 = cast(%var_6730, dtype="float64") /* ty=Tensor[(96), float64] */;
  %377 = cast(%var_6730, dtype="float64") /* ty=Tensor[(96), float64] */;
  %378 = reshape(%376, newshape=[2, 6, 8]) /* ty=Tensor[(2, 6, 8), float64] */;
  %379 = reshape(%377, newshape=[2, 6, 8]) /* ty=Tensor[(2, 6, 8), float64] */;
  %380 = @func_2182(%378, %379) /* ty=(Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(2, 6, 8), int32]) */;
  %381 = floor_divide(%374, %375) /* ty=Tensor[(3, 11, 11), float32] */;
  %382 = %380.2;
  (%381, %382, %var_6730)
}

def @func_2182(%var_2161: Tensor[(2, 6, 8), float64], %var_2170: Tensor[(2, 6, 8), float64]) -> (Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(2, 6, 8), int32]) {
  %383 = cast(meta[relay.Constant][31] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %384 = reshape(%383, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float32] */;
  %385 = cast(%var_2161, dtype="float64") /* ty=Tensor[(2, 6, 8), float64] */;
  %386 = asinh(%385) /* ty=Tensor[(2, 6, 8), float64] */;
  %387 = cast(%var_2170, dtype="int32") /* ty=Tensor[(2, 6, 8), int32] */;
  %388 = shape_of(%386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%386, dtype="int32") /* ty=Tensor[(2, 6, 8), int32] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %391 = @func_273(%384) /* ty=Tensor[(10, 11, 9), float32] */;
  %392 = left_shift(%389, %390) /* ty=Tensor[(2, 6, 8), int32] */;
  (%391, meta[relay.Constant][31] /* ty=Tensor[(990), float32] */, %392)
}

def @func_6140() -> (Tensor[(8, 10, 16), float64],) {
  %393 = @func_5142() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */;
  %394 = %393.3;
  (%394,)
}

def @func_7288(%var_7270: Tensor[(3, 11, 11), float64]) -> Tensor[(3, 11, 11), bool] {
  %395 = @func_5941() /* ty=Tensor[(3, 11, 11), float64] */;
  %396 = cast(%var_7270, dtype="bool") /* ty=Tensor[(3, 11, 11), bool] */;
  %397 = shape_of(%395, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%395, dtype="bool") /* ty=Tensor[(3, 11, 11), bool] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%398, %399) /* ty=Tensor[(3, 11, 11), bool] */
}

def @func_8011() -> Tensor[(2, 3, 14), float64] {
  %400 = @func_6389() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(2, 3, 14), float64]) */;
  %400.0
}

def @func_3180(%var_3159: Tensor[(8, 6, 12), bool], %var_3174: Tensor[(882), float64]) -> (Tensor[(8, 6, 12), bool], Tensor[(9, 7, 14), uint64], Tensor[(882), float64]) {
  %401 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 6, 12), bool] */, dtype="bool") /* ty=Tensor[(8, 6, 12), bool] */;
  %402 = shape_of(%var_3159, dtype="int32") /* ty=Tensor[(3), int32] */;
  %403 = cast(%var_3159, dtype="bool") /* ty=Tensor[(8, 6, 12), bool] */;
  %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %405 = cast(%var_3174, dtype="float64") /* ty=Tensor[(882), float64] */;
  %406 = reshape(%405, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float64] */;
  %407 = logical_and(%403, %404) /* ty=Tensor[(8, 6, 12), bool] */;
  %408 = @func_332(%406) /* ty=Tensor[(9, 7, 14), uint64] */;
  (%407, %408, %var_3174)
}

def @func_5969(%var_5951: Tensor[(1144), float32]) -> (Tensor[(3, 11, 11), float64], Tensor[(9, 8, 6), float64], Tensor[(1144), float32]) {
  %409 = @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */;
  %410 = cast(%var_5951, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %411 = cast(%var_5951, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %412 = cast(%var_5951, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %413 = reshape(%410, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %414 = reshape(%411, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %415 = reshape(%412, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %416 = @func_2585(%413, %414, %415) /* ty=(Tensor[(11, 13, 8), bool], Tensor[(11, 13, 8), int8], Tensor[(9, 8, 6), float64], Tensor[(1568), float64]) */;
  %417 = %409.0;
  %418 = %416.2;
  (%417, %418, %var_5951)
}

def @func_8716() -> Tensor[(3, 11, 11), float64] {
  %419 = @func_5156() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %419.0
}

def @func_3727(%var_3683: Tensor[(4, 2, 5), int16]) -> Tensor[(4, 2, 5), uint8] {
  %420 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 2, 5), int16] */, dtype="float32") /* ty=Tensor[(4, 2, 5), float32] */;
  %421 = asin(%420) /* ty=Tensor[(4, 2, 5), float32] */;
  %422 = cast(%var_3683, dtype="bool") /* ty=Tensor[(4, 2, 5), bool] */;
  %423 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(4, 2, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 2, 5), int16] */, dtype="bool") /* ty=Tensor[(4, 2, 5), bool] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %426 = greater(%424, %425) /* ty=Tensor[(4, 2, 5), bool] */;
  %427 = cast(%426, dtype="uint8") /* ty=Tensor[(4, 2, 5), uint8] */;
  %428 = shape_of(%421, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%421, dtype="uint8") /* ty=Tensor[(4, 2, 5), uint8] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_and(%429, %430) /* ty=Tensor[(4, 2, 5), uint8] */
}

def @func_6148() -> (Tensor[(12), float64],) {
  %431 = @func_5875() /* ty=(Tensor[(12), float64],) */;
  %432 = %431.0;
  (%432,)
}

def @func_8749() -> Tensor[(2, 3, 14), float64] {
  %433 = @func_6090() /* ty=(Tensor[(2, 3, 14), float64],) */;
  %433.0
}

def @func_3898(%var_3874: Tensor[(8, 3, 4), int32]) -> (Tensor[(8, 3, 4), int32],) {
  %434 = cast(%var_3874, dtype="int32") /* ty=Tensor[(8, 3, 4), int32] */;
  %435 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(8, 3, 4), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(meta[relay.Constant][34] /* ty=Tensor[(8, 3, 4), int32] */, dtype="int32") /* ty=Tensor[(8, 3, 4), int32] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %438 = bitwise_and(%436, %437) /* ty=Tensor[(8, 3, 4), int32] */;
  (%438,)
}

def @func_388(%var_374: Tensor[(10, 7, 9), float64], %var_384: Tensor[(882), float64]) -> (Tensor[(10, 7, 9), float64], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(9, 7, 14), uint64], Tensor[(882), float64]) {
  %439 = cast(%var_374, dtype="float64") /* ty=Tensor[(10, 7, 9), float64] */;
  %440 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(10, 7, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(meta[relay.Constant][35] /* ty=Tensor[(10, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(10, 7, 9), float64] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %443 = cast(meta[relay.Constant][36] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %444 = reshape(%443, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float32] */;
  %445 = cast(%var_384, dtype="float64") /* ty=Tensor[(882), float64] */;
  %446 = reshape(%445, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float64] */;
  %447 = mod(%441, %442) /* ty=Tensor[(10, 7, 9), float64] */;
  %448 = @func_273(%444) /* ty=Tensor[(10, 11, 9), float32] */;
  %449 = @func_332(%446) /* ty=Tensor[(9, 7, 14), uint64] */;
  (%447, %448, meta[relay.Constant][36] /* ty=Tensor[(990), float32] */, %449, %var_384)
}

def @func_5818() -> (Tensor[(3, 11, 11), float64], Tensor[(1, 4, 3), float64], Tensor[(588, 2), float64], Tensor[(12), float64]) {
  %450 = @func_5316() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %451 = cast(meta[relay.Constant][37] /* ty=Tensor[(588, 2), float64] */, dtype="float64") /* ty=Tensor[(588, 2), float64] */;
  %452 = cast(meta[relay.Constant][38] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %453 = reshape(%451, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float64] */;
  %454 = reshape(%452, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %455 = @func_3867(%453, %454) /* ty=(Tensor[(6, 14, 14), float64], Tensor[(1, 4, 3), float64], Tensor[(12), float64]) */;
  %456 = %450.0;
  %457 = %455.1;
  (%456, %457, meta[relay.Constant][37] /* ty=Tensor[(588, 2), float64] */, meta[relay.Constant][38] /* ty=Tensor[(12), float64] */)
}

def @func_7385(%var_7337: Tensor[(1144), float32]) -> (Tensor[(3, 11, 11), float64], Tensor[(1568), float64], Tensor[(1144), float32], Tensor[(3, 11, 11), float64], Tensor[(2, 3, 14), float64]) {
  %458 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %459 = cast(%var_7337, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %460 = cast(%var_7337, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %461 = cast(%var_7337, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %462 = reshape(%459, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %463 = reshape(%460, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %464 = reshape(%461, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %465 = @func_2585(%462, %463, %464) /* ty=(Tensor[(11, 13, 8), bool], Tensor[(11, 13, 8), int8], Tensor[(9, 8, 6), float64], Tensor[(1568), float64]) */;
  %466 = @func_6389() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(2, 3, 14), float64]) */;
  %467 = %458.0;
  %468 = %465.3;
  %469 = @func_6187() /* ty=Tensor[(3, 11, 11), float64] */;
  %470 = %466.0;
  (%467, %468, %var_7337, %469, %470)
}

def @func_3867(%var_3859: Tensor[(6, 14, 14), float64], %var_3865: Tensor[(12), float64]) -> (Tensor[(6, 14, 14), float64], Tensor[(1, 4, 3), float64], Tensor[(12), float64]) {
  %471 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 14, 1), float64] */, dtype="float64") /* ty=Tensor[(6, 14, 1), float64] */;
  %472 = cast(%var_3859, dtype="float64") /* ty=Tensor[(6, 14, 14), float64] */;
  %473 = cast(%var_3865, dtype="float64") /* ty=Tensor[(12), float64] */;
  %474 = reshape(%473, newshape=[1, 4, 3]) /* ty=Tensor[(1, 4, 3), float64] */;
  %475 = @func_1337(%474) /* ty=(Tensor[(?, 4, 3), float64], Tensor[(1, 4, 3), float64]) */;
  %476 = mod(%471, %472) /* ty=Tensor[(6, 14, 14), float64] */;
  %477 = %475.1;
  (%476, %477, %var_3865)
}

def @func_4240(%var_4200: Tensor[(9, 6, 7), uint32], %var_4201: Tensor[(9, 6, 7), uint32], %var_4238: Tensor[(560), int64]) -> (Tensor[(9, 6, 7), uint32], Tensor[(9, 6, 7), float64], Tensor[(5, 16, 7), bool], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64]) {
  %478 = cast(%var_4201, dtype="uint32") /* ty=Tensor[(9, 6, 7), uint32] */;
  %479 = shape_of(%var_4200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %480 = cast(%var_4200, dtype="uint32") /* ty=Tensor[(9, 6, 7), uint32] */;
  %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %482 = cast(%var_4201, dtype="float64") /* ty=Tensor[(9, 6, 7), float64] */;
  %483 = cast(meta[relay.Constant][40] /* ty=Tensor[(7), int64] */, dtype="int64") /* ty=Tensor[(7), int64] */;
  %484 = cast(meta[relay.Constant][41] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %485 = cast(%var_4238, dtype="int64") /* ty=Tensor[(560), int64] */;
  %486 = reshape(%483, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), int64] */;
  %487 = reshape(%484, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), int64] */;
  %488 = reshape(%485, newshape=[5, 16, 7]) /* ty=Tensor[(5, 16, 7), int64] */;
  %489 = @func_3647(%486, %487, %488) /* ty=(Tensor[(5, 6, 7), int64], Tensor[(5, 16, 7), bool]) */;
  %490 = subtract(%480, %481) /* ty=Tensor[(9, 6, 7), uint32] */;
  %491 = log2(%482) /* ty=Tensor[(9, 6, 7), float64] */;
  %492 = %489.1;
  (%490, %491, %492, meta[relay.Constant][40] /* ty=Tensor[(7), int64] */, meta[relay.Constant][41] /* ty=Tensor[(210), int64] */, %var_4238)
}

def @func_5502() -> Tensor[(1, 16, 15), float32] {
  %493 = @func_5142() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */;
  %493.1
}

def @func_7981() -> (Tensor[(12), float64],) {
  %494 = @func_5875() /* ty=(Tensor[(12), float64],) */;
  %495 = %494.0;
  (%495,)
}

def @func_6823(%var_6791: Tensor[(96), float64], %var_6813: Tensor[(78), float32], %var_6814: Tensor[(882), float64]) -> (Tensor[(8, 10, 16), float64], Tensor[(10, 11, 9), float32], Tensor[(96), float64], Tensor[(2, 3, 13), float32], Tensor[(78), float32], Tensor[(882), float64], Tensor[(1, 16, 15), float64]) {
  %496 = @func_6140() /* ty=(Tensor[(8, 10, 16), float64],) */;
  %497 = cast(%var_6791, dtype="float64") /* ty=Tensor[(96), float64] */;
  %498 = cast(%var_6791, dtype="float64") /* ty=Tensor[(96), float64] */;
  %499 = reshape(%497, newshape=[2, 6, 8]) /* ty=Tensor[(2, 6, 8), float64] */;
  %500 = reshape(%498, newshape=[2, 6, 8]) /* ty=Tensor[(2, 6, 8), float64] */;
  %501 = @func_2182(%499, %500) /* ty=(Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(2, 6, 8), int32]) */;
  %502 = cast(%var_6813, dtype="float32") /* ty=Tensor[(78), float32] */;
  %503 = cast(%var_6814, dtype="float64") /* ty=Tensor[(882), float64] */;
  %504 = reshape(%502, newshape=[2, 3, 13]) /* ty=Tensor[(2, 3, 13), float32] */;
  %505 = reshape(%503, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %506 = @func_3471(%504, %505) /* ty=(Tensor[(2, 3, 13), float32], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(990), float32], Tensor[(630), float64], Tensor[(882), float64]) */;
  %507 = @func_6082() /* ty=Tensor[(1, 16, 15), float32] */;
  %508 = cast(%507, dtype="float64") /* ty=Tensor[(1, 16, 15), float64] */;
  %509 = acos(%508) /* ty=Tensor[(1, 16, 15), float64] */;
  %510 = cast(%509, dtype="float64") /* ty=Tensor[(1, 16, 15), float64] */;
  %511 = %496.0;
  %512 = %501.0;
  %513 = %506.0;
  %514 = acosh(%510) /* ty=Tensor[(1, 16, 15), float64] */;
  (%511, %512, %var_6791, %513, %var_6813, %var_6814, %514)
}

def @func_8600(%var_8596: Tensor[(3, 126), uint32]) -> (Tensor[(8, 10, 16), float64], Tensor[(9, 6, 7), uint32], Tensor[(3, 126), uint32], Tensor[(1, 560), int64]) {
  %515 = @func_6140() /* ty=(Tensor[(8, 10, 16), float64],) */;
  %516 = cast(%var_8596, dtype="uint32") /* ty=Tensor[(3, 126), uint32] */;
  %517 = cast(%var_8596, dtype="uint32") /* ty=Tensor[(3, 126), uint32] */;
  %518 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 560), int64] */, dtype="int64") /* ty=Tensor[(1, 560), int64] */;
  %519 = reshape(%516, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
  %520 = reshape(%517, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
  %521 = reshape(%518, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %522 = @func_4240(%519, %520, %521) /* ty=(Tensor[(9, 6, 7), uint32], Tensor[(9, 6, 7), float64], Tensor[(5, 16, 7), bool], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64]) */;
  %523 = %515.0;
  %524 = %522.0;
  (%523, %524, %var_8596, meta[relay.Constant][42] /* ty=Tensor[(1, 560), int64] */)
}

def @func_8356() -> Tensor[(12), float64] {
  %525 = @func_7981() /* ty=(Tensor[(12), float64],) */;
  %525.0
}

def @func_6445() -> Tensor[(3, 11, 11), float64] {
  %526 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %526.0
}

def @func_4355(%var_4340: Tensor[(8, 4, 6), float32]) -> (Tensor[(8, 4, 6), float32], Tensor[(9, 8, 6), float64], Tensor[(208), float32]) {
  %527 = cast(%var_4340, dtype="float32") /* ty=Tensor[(8, 4, 6), float32] */;
  %528 = cast(meta[relay.Constant][43] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %529 = reshape(%528, newshape=[13, 4, 4]) /* ty=Tensor[(13, 4, 4), float32] */;
  %530 = @func_1804(%529) /* ty=(Tensor[(13, 4, 4), float32], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(13, 4, 4), float64], Tensor[(9, 8, 6), float64]) */;
  %531 = asin(%527) /* ty=Tensor[(8, 4, 6), float32] */;
  %532 = %530.1;
  (%531, %532, meta[relay.Constant][43] /* ty=Tensor[(208), float32] */)
}

def @func_6187() -> Tensor[(3, 11, 11), float64] {
  %533 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %533.0
}

def @func_7128() -> (Tensor[(8, 10, 16), float64],) {
  %534 = @func_5142() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */;
  %535 = %534.3;
  (%535,)
}

def @func_7671(%var_7651: Tensor[(572, 2), float32]) -> (Tensor[(12), float64], Tensor[(3, 11, 11), float64], Tensor[(572, 2), bool]) {
  %536 = @func_6148() /* ty=(Tensor[(12), float64],) */;
  %537 = cast(meta[relay.Constant][44] /* ty=Tensor[(572, 2), float32] */, dtype="float32") /* ty=Tensor[(572, 2), float32] */;
  %538 = reshape(%537, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
  %539 = @func_5969(%538) /* ty=(Tensor[(3, 11, 11), float64], Tensor[(9, 8, 6), float64], Tensor[(1144), float32]) */;
  %540 = cast(%var_7651, dtype="bool") /* ty=Tensor[(572, 2), bool] */;
  %541 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(572, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %542 = cast(meta[relay.Constant][44] /* ty=Tensor[(572, 2), float32] */, dtype="bool") /* ty=Tensor[(572, 2), bool] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %544 = %536.0;
  %545 = %539.0;
  %546 = greater_equal(%542, %543) /* ty=Tensor[(572, 2), bool] */;
  (%544, %545, %546)
}

def @func_5776(%var_5742: Tensor[(14, 16, 15), float32], %var_5753: Tensor[(12), float64], %var_5754: Tensor[(990), float32], %var_5772: Tensor[(35, 15), float32]) -> (Tensor[(14, 16, 15), uint64], Tensor[(1144), float32], Tensor[(2025), float64], Tensor[(208), float32], Tensor[(12), float64], Tensor[(990), float32], Tensor[(14, 5, 12), bool], Tensor[(840), bool], Tensor[(35, 15), uint16]) {
  %547 = @func_5502() /* ty=Tensor[(1, 16, 15), float32] */;
  %548 = cast(%547, dtype="uint64") /* ty=Tensor[(1, 16, 15), uint64] */;
  %549 = cast(%var_5742, dtype="uint64") /* ty=Tensor[(14, 16, 15), uint64] */;
  %550 = cast(meta[relay.Constant][45] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
  %551 = cast(meta[relay.Constant][46] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %552 = cast(meta[relay.Constant][47] /* ty=Tensor[(35, 15), float32] */, dtype="float32") /* ty=Tensor[(35, 15), float32] */;
  %553 = cast(%var_5753, dtype="float64") /* ty=Tensor[(12), float64] */;
  %554 = cast(%var_5754, dtype="float32") /* ty=Tensor[(990), float32] */;
  %555 = reshape(%550, newshape=[9, 15, 15]) /* ty=Tensor[(9, 15, 15), float64] */;
  %556 = reshape(%551, newshape=[208]) /* ty=Tensor[(208), float32] */;
  %557 = reshape(%552, newshape=[525]) /* ty=Tensor[(525), float32] */;
  %558 = reshape(%553, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %559 = reshape(%554, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %560 = @func_4679(%555, %556, %557, %558, %559) /* ty=(Tensor[(9, 15, 15), float64], Tensor[(1144), float32], Tensor[(1144), float32], Tensor[(196), float64], Tensor[(208), float32], Tensor[(1176), float64], Tensor[(525), float32], Tensor[(1176), float64], Tensor[(12), float64], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(12), float64]) */;
  %561 = cast(meta[relay.Constant][48] /* ty=Tensor[(840), bool] */, dtype="bool") /* ty=Tensor[(840), bool] */;
  %562 = cast(meta[relay.Constant][48] /* ty=Tensor[(840), bool] */, dtype="bool") /* ty=Tensor[(840), bool] */;
  %563 = reshape(%561, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), bool] */;
  %564 = reshape(%562, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), bool] */;
  %565 = @func_3139(%563, %564) /* ty=(Tensor[(14, 5, 12), bool],) */;
  %566 = cast(%var_5772, dtype="uint16") /* ty=Tensor[(35, 15), uint16] */;
  %567 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(35, 15), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %568 = cast(meta[relay.Constant][47] /* ty=Tensor[(35, 15), float32] */, dtype="uint16") /* ty=Tensor[(35, 15), uint16] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %570 = minimum(%548, %549) /* ty=Tensor[(14, 16, 15), uint64] */;
  %571 = %560.1;
  %572 = %565.0;
  %573 = bitwise_xor(%568, %569) /* ty=Tensor[(35, 15), uint16] */;
  (%570, %571, meta[relay.Constant][45] /* ty=Tensor[(2025), float64] */, meta[relay.Constant][46] /* ty=Tensor[(208), float32] */, %var_5753, %var_5754, %572, meta[relay.Constant][48] /* ty=Tensor[(840), bool] */, %573)
}

def @func_5240() -> Tensor[(3, 11, 11), float64] {
  %574 = @func_5092() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %574.0
}

def @func_6901(%var_6886: Tensor[(112), uint32], %var_6889: Tensor[(224), uint16], %var_6898: Tensor[(196), float32]) -> (Tensor[(1, 16, 15), float32], Tensor[(12), float64], Tensor[(112), uint32], Tensor[(40), int16], Tensor[(882), float64], Tensor[(224), uint16], Tensor[(12), float64], Tensor[(7, 7, 4), float32], Tensor[(196), float32]) {
  %575 = @func_5142() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */;
  %576 = cast(%var_6886, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %577 = cast(meta[relay.Constant][49] /* ty=Tensor[(40), int16] */, dtype="int16") /* ty=Tensor[(40), int16] */;
  %578 = cast(meta[relay.Constant][50] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %579 = cast(%var_6889, dtype="uint16") /* ty=Tensor[(224), uint16] */;
  %580 = cast(meta[relay.Constant][51] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %581 = reshape(%576, newshape=[1, 112]) /* ty=Tensor[(1, 112), uint32] */;
  %582 = reshape(%577, newshape=[40]) /* ty=Tensor[(40), int16] */;
  %583 = reshape(%578, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %584 = reshape(%579, newshape=[8, 28]) /* ty=Tensor[(8, 28), uint16] */;
  %585 = reshape(%580, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %586 = @func_6626(%581, %582, %583, %584, %585) /* ty=(Tensor[(9, 8, 6), float64], Tensor[(1, 112), uint32], Tensor[(40), int16], Tensor[(78), float32], Tensor[(882), float64], Tensor[(432), float64], Tensor[(8, 28), float32], Tensor[(?, 4, 3), float64], Tensor[(12), float64], Tensor[(8, 10, 16), int8]) */;
  %587 = cast(%var_6898, dtype="float32") /* ty=Tensor[(196), float32] */;
  %588 = reshape(%587, newshape=[7, 7, 4]) /* ty=Tensor[(7, 7, 4), float32] */;
  %589 = @func_5066(%588) /* ty=(Tensor[(7, 7, 4), float32],) */;
  %590 = %575.1;
  %591 = %586.8;
  %592 = %589.0;
  (%590, %591, %var_6886, meta[relay.Constant][49] /* ty=Tensor[(40), int16] */, meta[relay.Constant][50] /* ty=Tensor[(882), float64] */, %var_6889, meta[relay.Constant][51] /* ty=Tensor[(12), float64] */, %592, %var_6898)
}

def @func_7552() -> (Tensor[(12), float64], Tensor[(5, 9, 11), float32], Tensor[(1, 495), bool]) {
  %593 = @func_6148() /* ty=(Tensor[(12), float64],) */;
  %594 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 495), bool] */, dtype="bool") /* ty=Tensor[(1, 495), bool] */;
  %595 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 495), bool] */, dtype="bool") /* ty=Tensor[(1, 495), bool] */;
  %596 = reshape(%594, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), bool] */;
  %597 = reshape(%595, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), bool] */;
  %598 = @func_5664(%596, %597) /* ty=(Tensor[(5, 9, 11), bool], Tensor[(5, 9, 11), float32]) */;
  %599 = %593.0;
  %600 = %598.1;
  (%599, %600, meta[relay.Constant][52] /* ty=Tensor[(1, 495), bool] */)
}

def @func_6482() -> Tensor[(3, 11, 11), float32] {
  %601 = @func_5927() /* ty=(Tensor[(3, 11, 11), bool], Tensor[(3, 11, 11), float32]) */;
  %601.1
}

def @func_7844(%var_7829: Tensor[(7), int64]) -> (Tensor[(3, 11, 11), float64], Tensor[(5, 16, 7), bool], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64]) {
  %602 = @func_5729() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(8, 10, 16), float64]) */;
  %603 = cast(%var_7829, dtype="int64") /* ty=Tensor[(7), int64] */;
  %604 = cast(meta[relay.Constant][53] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %605 = cast(meta[relay.Constant][54] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %606 = reshape(%603, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), int64] */;
  %607 = reshape(%604, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), int64] */;
  %608 = reshape(%605, newshape=[5, 16, 7]) /* ty=Tensor[(5, 16, 7), int64] */;
  %609 = @func_3647(%606, %607, %608) /* ty=(Tensor[(5, 6, 7), int64], Tensor[(5, 16, 7), bool]) */;
  %610 = %602.1;
  %611 = %609.1;
  (%610, %611, %var_7829, meta[relay.Constant][53] /* ty=Tensor[(210), int64] */, meta[relay.Constant][54] /* ty=Tensor[(560), int64] */)
}

def @func_7006(%var_6945: Tensor[(840), bool], %var_6953: Tensor[(432, 1), float64], %var_6959: Tensor[(432, 10), float64], %var_6987: Tensor[(1568), float64], %var_6997: Tensor[(3360), float32], %var_7000: Tensor[(525), float32]) -> (Tensor[(3, 11, 11), float64], Tensor[(14, 5, 12), bool], Tensor[(840), bool], Tensor[(9, 8, 6), float64], Tensor[(3, 11, 11), float64], Tensor[(432, 10), int16], Tensor[(324, 1), float32], Tensor[(324), float32], Tensor[(1568), float64], Tensor[(14, 5, 12), bool], Tensor[(3360), float32], Tensor[(12), float64], Tensor[(5, 198), float32], Tensor[(525), float32]) {
  %612 = @func_6280() /* ty=(Tensor[(12), float64], Tensor[(4, 2, 5), uint8], Tensor[(2, 20), int16], Tensor[(3, 11, 11), float64]) */;
  %613 = cast(%var_6945, dtype="bool") /* ty=Tensor[(840), bool] */;
  %614 = cast(%var_6945, dtype="bool") /* ty=Tensor[(840), bool] */;
  %615 = reshape(%613, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), bool] */;
  %616 = reshape(%614, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), bool] */;
  %617 = @func_3139(%615, %616) /* ty=(Tensor[(14, 5, 12), bool],) */;
  %618 = cast(%var_6953, dtype="float64") /* ty=Tensor[(432, 1), float64] */;
  %619 = reshape(%618, newshape=[9, 8, 6]) /* ty=Tensor[(9, 8, 6), float64] */;
  %620 = @func_1047(%619) /* ty=(Tensor[(9, 8, 6), float64],) */;
  %621 = @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */;
  %622 = cast(%var_6953, dtype="float64") /* ty=Tensor[(432, 1), float64] */;
  %623 = cosh(%622) /* ty=Tensor[(432, 1), float64] */;
  %624 = cast(%623, dtype="float32") /* ty=Tensor[(432, 1), float32] */;
  %625 = cast(%var_6959, dtype="float32") /* ty=Tensor[(432, 10), float32] */;
  %626 = power(%624, %625) /* ty=Tensor[(432, 10), float32] */;
  %627 = cast(%626, dtype="int16") /* ty=Tensor[(432, 10), int16] */;
  %628 = cast(%var_6953, dtype="int16") /* ty=Tensor[(432, 1), int16] */;
  %629 = cast(meta[relay.Constant][55] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
  %630 = cast(%var_6987, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %631 = reshape(%629, newshape=[324, 1]) /* ty=Tensor[(324, 1), float32] */;
  %632 = reshape(%630, newshape=[784, 2]) /* ty=Tensor[(784, 2), float64] */;
  %633 = @func_5358(%631, %632) /* ty=(Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(6, 6, 9), float32], Tensor[(324, 1), float32], Tensor[(630), float64], Tensor[(7, 126), float64], Tensor[(9, 8, 6), float64], Tensor[(784, 2), float64]) */;
  %634 = cast(%var_6997, dtype="float32") /* ty=Tensor[(3360), float32] */;
  %635 = cast(meta[relay.Constant][56] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %636 = cast(meta[relay.Constant][57] /* ty=Tensor[(5, 198), float32] */, dtype="float32") /* ty=Tensor[(5, 198), float32] */;
  %637 = cast(%var_7000, dtype="float32") /* ty=Tensor[(525), float32] */;
  %638 = reshape(%634, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float32] */;
  %639 = reshape(%635, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %640 = reshape(%636, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %641 = reshape(%637, newshape=[35, 15]) /* ty=Tensor[(35, 15), float32] */;
  %642 = @func_5776(%638, %639, %640, %641) /* ty=(Tensor[(14, 16, 15), uint64], Tensor[(1144), float32], Tensor[(2025), float64], Tensor[(208), float32], Tensor[(12), float64], Tensor[(990), float32], Tensor[(14, 5, 12), bool], Tensor[(840), bool], Tensor[(35, 15), uint16]) */;
  %643 = %612.3;
  %644 = %617.0;
  %645 = %620.0;
  %646 = %621.0;
  %647 = bitwise_xor(%627, %628) /* ty=Tensor[(432, 10), int16] */;
  %648 = %633.3;
  %649 = %642.6;
  (%643, %644, %var_6945, %645, %646, %647, %648, meta[relay.Constant][55] /* ty=Tensor[(324), float32] */, %var_6987, %649, %var_6997, meta[relay.Constant][56] /* ty=Tensor[(12), float64] */, meta[relay.Constant][57] /* ty=Tensor[(5, 198), float32] */, %var_7000)
}

def @func_8794(%var_8776: Tensor[(882), float64]) -> (Tensor[(2, 3, 14), float64], Tensor[(8, 10, 16), bool], Tensor[(1280), float64], Tensor[(1, 16, 15), float32], Tensor[(882), bool], Tensor[(8, 6, 12), bool], Tensor[(576), bool]) {
  %650 = cast(meta[relay.Constant][58] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %651 = reshape(%650, newshape=[8, 10, 16]) /* ty=Tensor[(8, 10, 16), float64] */;
  %652 = cast(%var_8776, dtype="float64") /* ty=Tensor[(882), float64] */;
  %653 = reshape(%652, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float64] */;
  %654 = @func_332(%653) /* ty=Tensor[(9, 7, 14), uint64] */;
  %655 = cast(%654, dtype="bool") /* ty=Tensor[(9, 7, 14), bool] */;
  %656 = shape_of(%var_8776, dtype="int32") /* ty=Tensor[(1), int32] */;
  %657 = cast(%var_8776, dtype="bool") /* ty=Tensor[(882), bool] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?), bool] */;
  %659 = cast(meta[relay.Constant][59] /* ty=Tensor[(576), bool] */, dtype="bool") /* ty=Tensor[(576), bool] */;
  %660 = less(%657, %658) /* ty=Tensor[(882), bool] */;
  %661 = cast(%660, dtype="float64") /* ty=Tensor[(882), float64] */;
  %662 = reshape(%659, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), bool] */;
  %663 = reshape(%661, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %664 = @func_3180(%662, %663) /* ty=(Tensor[(8, 6, 12), bool], Tensor[(9, 7, 14), uint64], Tensor[(882), float64]) */;
  %665 = @func_6936() /* ty=Tensor[(2, 3, 14), float64] */;
  %666 = @func_4732(%651) /* ty=Tensor[(8, 10, 16), bool] */;
  %667 = @func_5502() /* ty=Tensor[(1, 16, 15), float32] */;
  %668 = %664.0;
  (%665, %666, meta[relay.Constant][58] /* ty=Tensor[(1280), float64] */, %667, %660, %668, meta[relay.Constant][59] /* ty=Tensor[(576), bool] */)
}

def @func_5142() -> (Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) {
  %669 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 16, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 16, 15), float32] */;
  %670 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 16, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 16, 15), float32] */;
  %671 = cast(meta[relay.Constant][61] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %672 = reshape(%671, newshape=[8, 10, 16]) /* ty=Tensor[(8, 10, 16), float64] */;
  %673 = @func_4732(%672) /* ty=Tensor[(8, 10, 16), bool] */;
  %674 = cast(%673, dtype="float64") /* ty=Tensor[(8, 10, 16), float64] */;
  %675 = log2(%669) /* ty=Tensor[(1, 16, 15), float32] */;
  %676 = sqrt(%670) /* ty=Tensor[(1, 16, 15), float32] */;
  %677 = atanh(%674) /* ty=Tensor[(8, 10, 16), float64] */;
  (%675, %676, meta[relay.Constant][61] /* ty=Tensor[(1280), float64] */, %677)
}

def @func_2520(%var_2498: Tensor[(8, 14, 14), float64], %var_2499: Tensor[(8, 14, 14), float64]) -> (Tensor[(8, 14, 14), float64], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(9, 8, 6), float64]) {
  %678 = cast(%var_2499, dtype="float64") /* ty=Tensor[(8, 14, 14), float64] */;
  %679 = shape_of(%var_2498, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(%var_2498, dtype="float64") /* ty=Tensor[(8, 14, 14), float64] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %682 = cast(meta[relay.Constant][62] /* ty=Tensor[(104, 2), float32] */, dtype="float32") /* ty=Tensor[(104, 2), float32] */;
  %683 = reshape(%682, newshape=[13, 4, 4]) /* ty=Tensor[(13, 4, 4), float32] */;
  %684 = @func_1804(%683) /* ty=(Tensor[(13, 4, 4), float32], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(13, 4, 4), float64], Tensor[(9, 8, 6), float64]) */;
  %685 = cast(meta[relay.Constant][62] /* ty=Tensor[(104, 2), float32] */, dtype="float32") /* ty=Tensor[(104, 2), float32] */;
  %686 = reshape(%685, newshape=[13, 4, 4]) /* ty=Tensor[(13, 4, 4), float32] */;
  %687 = @func_1804(%686) /* ty=(Tensor[(13, 4, 4), float32], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(13, 4, 4), float64], Tensor[(9, 8, 6), float64]) */;
  %688 = floor_divide(%680, %681) /* ty=Tensor[(8, 14, 14), float64] */;
  %689 = %684.4;
  %690 = %687.4;
  (%688, %689, meta[relay.Constant][62] /* ty=Tensor[(104, 2), float32] */, %690)
}

def @func_5092() -> (Tensor[(3, 11, 11), float64],) {
  %691 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %692 = %691.0;
  (%692,)
}

def @func_4732(%var_4721: Tensor[(8, 10, 16), float64]) -> Tensor[(8, 10, 16), bool] {
  %693 = cast(meta[relay.Constant][63] /* ty=Tensor[(8, 10, 16), float64] */, dtype="bool") /* ty=Tensor[(8, 10, 16), bool] */;
  %694 = shape_of(%var_4721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%var_4721, dtype="bool") /* ty=Tensor[(8, 10, 16), bool] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%695, %696) /* ty=Tensor[(8, 10, 16), bool] */
}

def @func_4077(%var_4045: Tensor[(7, 5, 15), float32], %var_4071: Tensor[(1176), float64], %var_4072: Tensor[(12), float64]) -> (Tensor[(7, 5, 15), float32], Tensor[(8, 14, 14), float64], Tensor[(1568), float64], Tensor[(7, 5, 15), float64], Tensor[(12), float64], Tensor[(1176), float64], Tensor[(12), float64]) {
  %697 = cast(meta[relay.Constant][64] /* ty=Tensor[(7, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(7, 5, 15), float32] */;
  %698 = shape_of(%var_4045, dtype="int32") /* ty=Tensor[(3), int32] */;
  %699 = cast(%var_4045, dtype="float32") /* ty=Tensor[(7, 5, 15), float32] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %701 = cast(meta[relay.Constant][65] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %702 = cast(meta[relay.Constant][65] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %703 = reshape(%701, newshape=[8, 14, 14]) /* ty=Tensor[(8, 14, 14), float64] */;
  %704 = reshape(%702, newshape=[8, 14, 14]) /* ty=Tensor[(8, 14, 14), float64] */;
  %705 = @func_2520(%703, %704) /* ty=(Tensor[(8, 14, 14), float64], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(9, 8, 6), float64]) */;
  %706 = cast(meta[relay.Constant][64] /* ty=Tensor[(7, 5, 15), float32] */, dtype="float64") /* ty=Tensor[(7, 5, 15), float64] */;
  %707 = cast(%var_4071, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %708 = cast(%var_4072, dtype="float64") /* ty=Tensor[(12), float64] */;
  %709 = reshape(%707, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float64] */;
  %710 = reshape(%708, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %711 = @func_3867(%709, %710) /* ty=(Tensor[(6, 14, 14), float64], Tensor[(1, 4, 3), float64], Tensor[(12), float64]) */;
  %712 = mod(%699, %700) /* ty=Tensor[(7, 5, 15), float32] */;
  %713 = %705.0;
  %714 = sinh(%706) /* ty=Tensor[(7, 5, 15), float64] */;
  %715 = %711.2;
  (%712, %713, meta[relay.Constant][65] /* ty=Tensor[(1568), float64] */, %714, %715, %var_4071, %var_4072)
}

def @func_1047(%var_1035: Tensor[(9, 8, 6), float64]) -> (Tensor[(9, 8, 6), float64],) {
  %716 = cast(%var_1035, dtype="float64") /* ty=Tensor[(9, 8, 6), float64] */;
  %717 = exp(%716) /* ty=Tensor[(9, 8, 6), float64] */;
  (%717,)
}

def @func_332(%var_300: Tensor[(9, 7, 14), float64]) -> Tensor[(9, 7, 14), uint64] {
  %718 = cast(%var_300, dtype="float64") /* ty=Tensor[(9, 7, 14), float64] */;
  %719 = cosh(%718) /* ty=Tensor[(9, 7, 14), float64] */;
  %720 = cast(%var_300, dtype="uint8") /* ty=Tensor[(9, 7, 14), uint8] */;
  %721 = shape_of(%719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %722 = cast(%719, dtype="uint8") /* ty=Tensor[(9, 7, 14), uint8] */;
  %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %724 = left_shift(%722, %723) /* ty=Tensor[(9, 7, 14), uint8] */;
  %725 = cast(%719, dtype="uint64") /* ty=Tensor[(9, 7, 14), uint64] */;
  %726 = shape_of(%724, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%724, dtype="uint64") /* ty=Tensor[(9, 7, 14), uint64] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%727, %728) /* ty=Tensor[(9, 7, 14), uint64] */
}

def @func_5598(%var_5549: Tensor[(378), uint32], %var_5577: Tensor[(5, 198), float32]) -> (Tensor[(1, 16, 15), float32], Tensor[(378), uint32], Tensor[(40, 14), float32], Tensor[(10, 11, 9), float32], Tensor[(5, 198), float32], Tensor[(3, 11, 11), float64], Tensor[(7, 7, 4), float32], Tensor[(196, 1), float32]) {
  %729 = @func_5142() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */;
  %730 = cast(%var_5549, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %731 = cast(%var_5549, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %732 = cast(meta[relay.Constant][66] /* ty=Tensor[(40, 14), int64] */, dtype="int64") /* ty=Tensor[(40, 14), int64] */;
  %733 = reshape(%730, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
  %734 = reshape(%731, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
  %735 = reshape(%732, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %736 = @func_4240(%733, %734, %735) /* ty=(Tensor[(9, 6, 7), uint32], Tensor[(9, 6, 7), float64], Tensor[(5, 16, 7), bool], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64]) */;
  %737 = %736.5;
  %738 = cast(%737, dtype="float32") /* ty=Tensor[(560), float32] */;
  %739 = shape_of(meta[relay.Constant][66] /* ty=Tensor[(40, 14), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %740 = cast(meta[relay.Constant][66] /* ty=Tensor[(40, 14), int64] */, dtype="float32") /* ty=Tensor[(40, 14), float32] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %742 = cast(%var_5577, dtype="float32") /* ty=Tensor[(5, 198), float32] */;
  %743 = reshape(%742, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float32] */;
  %744 = @func_5092() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %745 = cast(meta[relay.Constant][67] /* ty=Tensor[(196, 1), float32] */, dtype="float32") /* ty=Tensor[(196, 1), float32] */;
  %746 = reshape(%745, newshape=[7, 7, 4]) /* ty=Tensor[(7, 7, 4), float32] */;
  %747 = @func_5066(%746) /* ty=(Tensor[(7, 7, 4), float32],) */;
  %748 = %729.1;
  %749 = floor_mod(%740, %741) /* ty=Tensor[(40, 14), float32] */;
  %750 = @func_273(%743) /* ty=Tensor[(10, 11, 9), float32] */;
  %751 = %744.0;
  %752 = %747.0;
  (%748, %var_5549, %749, %750, %var_5577, %751, %752, meta[relay.Constant][67] /* ty=Tensor[(196, 1), float32] */)
}

def @func_7523() -> (Tensor[(8, 10, 16), float64],) {
  %753 = @func_7128() /* ty=(Tensor[(8, 10, 16), float64],) */;
  %754 = %753.0;
  (%754,)
}

def @func_6679() -> Tensor[(2, 3, 14), float64] {
  %755 = @func_6090() /* ty=(Tensor[(2, 3, 14), float64],) */;
  %755.0
}

def @func_6229() -> (Tensor[(1, 16, 15), float64], Tensor[(1, 16, 15), float32], Tensor[(8, 28), uint16]) {
  %756 = @func_6082() /* ty=Tensor[(1, 16, 15), float32] */;
  %757 = cast(%756, dtype="float64") /* ty=Tensor[(1, 16, 15), float64] */;
  %758 = cast(meta[relay.Constant][68] /* ty=Tensor[(8, 28), uint16] */, dtype="uint16") /* ty=Tensor[(8, 28), uint16] */;
  %759 = cast(meta[relay.Constant][68] /* ty=Tensor[(8, 28), uint16] */, dtype="uint16") /* ty=Tensor[(8, 28), uint16] */;
  %760 = reshape(%758, newshape=[7, 4, 8]) /* ty=Tensor[(7, 4, 8), uint16] */;
  %761 = reshape(%759, newshape=[7, 4, 8]) /* ty=Tensor[(7, 4, 8), uint16] */;
  %762 = @func_5223(%760, %761) /* ty=(Tensor[(3, 11, 11), float64], Tensor[(7, 4, 8), float64], Tensor[(1, 16, 15), float32]) */;
  %763 = cosh(%757) /* ty=Tensor[(1, 16, 15), float64] */;
  %764 = %762.2;
  (%763, %764, meta[relay.Constant][68] /* ty=Tensor[(8, 28), uint16] */)
}

def @func_6389() -> (Tensor[(2, 3, 14), float64], Tensor[(2, 3, 14), float64]) {
  %765 = @func_6090() /* ty=(Tensor[(2, 3, 14), float64],) */;
  %766 = @func_6090() /* ty=(Tensor[(2, 3, 14), float64],) */;
  %767 = %765.0;
  %768 = %766.0;
  (%767, %768)
}

def @func_5156() -> (Tensor[(3, 11, 11), float64],) {
  %769 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %770 = %769.0;
  (%770,)
}

def @func_5425() -> (Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) {
  %771 = @func_5092() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %772 = cast(meta[relay.Constant][69] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %773 = reshape(%772, newshape=[1, 4, 3]) /* ty=Tensor[(1, 4, 3), float64] */;
  %774 = @func_1337(%773) /* ty=(Tensor[(?, 4, 3), float64], Tensor[(1, 4, 3), float64]) */;
  %775 = %771.0;
  %776 = %774.0;
  (%775, %776, meta[relay.Constant][69] /* ty=Tensor[(12), float64] */)
}

def @func_273(%var_242: Tensor[(10, 11, 9), float32]) -> Tensor[(10, 11, 9), float32] {
  %777 = cast(%var_242, dtype="float32") /* ty=Tensor[(10, 11, 9), float32] */;
  sinh(%777) /* ty=Tensor[(10, 11, 9), float32] */
}

def @func_5729() -> (Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(8, 10, 16), float64]) {
  %778 = @func_5156() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %779 = @func_5240() /* ty=Tensor[(3, 11, 11), float64] */;
  %780 = cast(%779, dtype="float64") /* ty=Tensor[(3, 11, 11), float64] */;
  %781 = @func_5142() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */;
  %782 = %778.0;
  %783 = sin(%780) /* ty=Tensor[(3, 11, 11), float64] */;
  %784 = %781.3;
  (%782, %783, %784)
}

def @func_7883() -> Tensor[(3, 11, 11), float32] {
  %785 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %786 = %785.0;
  %787 = cast(%786, dtype="float32") /* ty=Tensor[(3, 11, 11), float32] */;
  tan(%787) /* ty=Tensor[(3, 11, 11), float32] */
}

def @func_8179() -> (Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64]) {
  %788 = @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */;
  %789 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %790 = %788.0;
  %791 = %789.0;
  (%790, %791)
}

def @func_3075(%var_3014: Tensor[(1144), float32], %var_3023: Tensor[(2, 14, 7), float64], %var_3039: Tensor[(104, 2), float32], %var_3043: Tensor[(1144), float32]) -> (Tensor[(1568), float64], Tensor[(2, 14, 7), float64], Tensor[(1144), float32], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(1144), float64], Tensor[(9, 8, 6), float64]) {
  %792 = cast(%var_3014, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %793 = cast(%var_3014, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %794 = cast(%var_3014, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %795 = reshape(%792, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %796 = reshape(%793, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %797 = reshape(%794, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %798 = @func_2585(%795, %796, %797) /* ty=(Tensor[(11, 13, 8), bool], Tensor[(11, 13, 8), int8], Tensor[(9, 8, 6), float64], Tensor[(1568), float64]) */;
  %799 = cast(meta[relay.Constant][70] /* ty=Tensor[(2, 14, 7), float64] */, dtype="float64") /* ty=Tensor[(2, 14, 7), float64] */;
  %800 = sin(%799) /* ty=Tensor[(2, 14, 7), float64] */;
  %801 = cast(%var_3023, dtype="float64") /* ty=Tensor[(2, 14, 7), float64] */;
  %802 = shape_of(%800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %803 = cast(%800, dtype="float64") /* ty=Tensor[(2, 14, 7), float64] */;
  %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %805 = cast(%var_3014, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %806 = cast(%var_3039, dtype="float32") /* ty=Tensor[(104, 2), float32] */;
  %807 = reshape(%806, newshape=[13, 4, 4]) /* ty=Tensor[(13, 4, 4), float32] */;
  %808 = @func_1804(%807) /* ty=(Tensor[(13, 4, 4), float32], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(13, 4, 4), float64], Tensor[(9, 8, 6), float64]) */;
  %809 = cast(%var_3043, dtype="bool") /* ty=Tensor[(1144), bool] */;
  %810 = shape_of(%var_3014, dtype="int32") /* ty=Tensor[(1), int32] */;
  %811 = cast(%var_3014, dtype="bool") /* ty=Tensor[(1144), bool] */;
  %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?), bool] */;
  %813 = less_equal(%811, %812) /* ty=Tensor[(1144), bool] */;
  %814 = cast(%813, dtype="float64") /* ty=Tensor[(1144), float64] */;
  %815 = cast(%var_3043, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %816 = cast(%813, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %817 = cast(%var_3014, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %818 = reshape(%815, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %819 = reshape(%816, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %820 = reshape(%817, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %821 = @func_2585(%818, %819, %820) /* ty=(Tensor[(11, 13, 8), bool], Tensor[(11, 13, 8), int8], Tensor[(9, 8, 6), float64], Tensor[(1568), float64]) */;
  %822 = %798.3;
  %823 = power(%803, %804) /* ty=Tensor[(2, 14, 7), float64] */;
  %824 = acos(%805) /* ty=Tensor[(1144), float32] */;
  %825 = %808.4;
  %826 = asin(%814) /* ty=Tensor[(1144), float64] */;
  %827 = %821.2;
  (%822, %823, %824, %825, %var_3039, %826, %827)
}

def @func_6626(%var_6585: Tensor[(1, 112), uint32], %var_6586: Tensor[(40), int16], %var_6588: Tensor[(882), float64], %var_6602: Tensor[(8, 28), uint16], %var_6608: Tensor[(12), float64]) -> (Tensor[(9, 8, 6), float64], Tensor[(1, 112), uint32], Tensor[(40), int16], Tensor[(78), float32], Tensor[(882), float64], Tensor[(432), float64], Tensor[(8, 28), float32], Tensor[(?, 4, 3), float64], Tensor[(12), float64], Tensor[(8, 10, 16), int8]) {
  %828 = cast(%var_6585, dtype="uint32") /* ty=Tensor[(1, 112), uint32] */;
  %829 = cast(%var_6585, dtype="uint32") /* ty=Tensor[(1, 112), uint32] */;
  %830 = cast(%var_6586, dtype="int16") /* ty=Tensor[(40), int16] */;
  %831 = cast(meta[relay.Constant][71] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %832 = cast(%var_6588, dtype="float64") /* ty=Tensor[(882), float64] */;
  %833 = cast(meta[relay.Constant][72] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %834 = reshape(%828, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), uint32] */;
  %835 = reshape(%829, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), uint32] */;
  %836 = reshape(%830, newshape=[40]) /* ty=Tensor[(40), int16] */;
  %837 = reshape(%831, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %838 = reshape(%832, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %839 = reshape(%833, newshape=[432]) /* ty=Tensor[(432), float64] */;
  %840 = @func_4175(%834, %835, %836, %837, %838, %839) /* ty=(Tensor[(8, 2, 7), uint32], Tensor[(4, 2, 5), uint8], Tensor[(40), int16], Tensor[(630), float64], Tensor[(78), float32], Tensor[(882), float64], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(9, 8, 6), float64], Tensor[(8, 2, 7), float32], Tensor[(9, 8, 6), float64], Tensor[(1144), float32]) */;
  %841 = @func_6229() /* ty=(Tensor[(1, 16, 15), float64], Tensor[(1, 16, 15), float32], Tensor[(8, 28), uint16]) */;
  %842 = %841.2;
  %843 = cast(%var_6602, dtype="float32") /* ty=Tensor[(8, 28), float32] */;
  %844 = shape_of(%842, dtype="int32") /* ty=Tensor[(2), int32] */;
  %845 = cast(%842, dtype="float32") /* ty=Tensor[(8, 28), float32] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %847 = cast(%var_6608, dtype="float64") /* ty=Tensor[(12), float64] */;
  %848 = reshape(%847, newshape=[1, 4, 3]) /* ty=Tensor[(1, 4, 3), float64] */;
  %849 = @func_1337(%848) /* ty=(Tensor[(?, 4, 3), float64], Tensor[(1, 4, 3), float64]) */;
  %850 = @func_6328() /* ty=Tensor[(8, 10, 16), float64] */;
  %851 = cast(meta[relay.Constant][73] /* ty=Tensor[(8, 10, 16), float64] */, dtype="int8") /* ty=Tensor[(8, 10, 16), int8] */;
  %852 = shape_of(%850, dtype="int32") /* ty=Tensor[(3), int32] */;
  %853 = cast(%850, dtype="int8") /* ty=Tensor[(8, 10, 16), int8] */;
  %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %855 = %840.10;
  %856 = floor_mod(%845, %846) /* ty=Tensor[(8, 28), float32] */;
  %857 = %849.0;
  %858 = add(%853, %854) /* ty=Tensor[(8, 10, 16), int8] */;
  (%855, %var_6585, %var_6586, meta[relay.Constant][71] /* ty=Tensor[(78), float32] */, %var_6588, meta[relay.Constant][72] /* ty=Tensor[(432), float64] */, %856, %857, %var_6608, %858)
}

def @func_4432(%var_4404: Tensor[(6, 6, 9), float32], %var_4428: Tensor[(630), float64], %var_4429: Tensor[(882), float64]) -> (Tensor[(6, 6, 9), float32], Tensor[(9, 7, 14), uint64], Tensor[(630), float64], Tensor[(882), float64]) {
  %859 = cast(%var_4404, dtype="float32") /* ty=Tensor[(6, 6, 9), float32] */;
  %860 = cast(%var_4428, dtype="float64") /* ty=Tensor[(630), float64] */;
  %861 = cast(%var_4429, dtype="float64") /* ty=Tensor[(882), float64] */;
  %862 = reshape(%860, newshape=[10, 7, 9]) /* ty=Tensor[(10, 7, 9), float64] */;
  %863 = reshape(%861, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %864 = @func_388(%862, %863) /* ty=(Tensor[(10, 7, 9), float64], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(9, 7, 14), uint64], Tensor[(882), float64]) */;
  %865 = acosh(%859) /* ty=Tensor[(6, 6, 9), float32] */;
  %866 = %864.3;
  (%865, %866, %var_4428, %var_4429)
}

def @func_1337(%var_1321: Tensor[(1, 4, 3), float64]) -> (Tensor[(?, 4, 3), float64], Tensor[(1, 4, 3), float64]) {
  %867 = cast(%var_1321, dtype="float64") /* ty=Tensor[(1, 4, 3), float64] */;
  %868 = cos(%867) /* ty=Tensor[(1, 4, 3), float64] */;
  %869 = cast(%var_1321, dtype="float64") /* ty=Tensor[(1, 4, 3), float64] */;
  %870 = shape_of(%868, dtype="int32") /* ty=Tensor[(3), int32] */;
  %871 = cast(%868, dtype="float64") /* ty=Tensor[(1, 4, 3), float64] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %873 = cast(%868, dtype="float64") /* ty=Tensor[(1, 4, 3), float64] */;
  %874 = minimum(%871, %872) /* ty=Tensor[(?, 4, 3), float64] */;
  %875 = rsqrt(%873) /* ty=Tensor[(1, 4, 3), float64] */;
  (%874, %875)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6938() -> Tensor[(2, 3, 14), float64] {
  @func_6936() /* ty=Tensor[(2, 3, 14), float64] */
}

def @func_5157() -> (Tensor[(3, 11, 11), float64],) {
  %2 = fn () -> (Tensor[(3, 11, 11), float64],) {
    %0 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
    %1 = %0.0;
    (%1,)
  };
  %2() /* ty=(Tensor[(3, 11, 11), float64],) */
}

def @func_8164() -> (Tensor[(1, 16, 15), float32], Tensor[(3, 11, 11), float64], Tensor[(9, 6, 7), float64], Tensor[(378), uint32], Tensor[(560), int64], Tensor[(7), int64]) {
  %22 = fn () -> (Tensor[(1, 16, 15), float32], Tensor[(3, 11, 11), float64], Tensor[(9, 6, 7), float64], Tensor[(378), uint32], Tensor[(560), int64], Tensor[(7), int64]) {
    %3 = @func_5729() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(8, 10, 16), float64]) */;
    %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
    %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
    %6 = cast(meta[relay.Constant][1] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
    %7 = reshape(%4, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
    %8 = reshape(%5, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
    %9 = reshape(%6, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %10 = @func_4240(%7, %8, %9) /* ty=(Tensor[(9, 6, 7), uint32], Tensor[(9, 6, 7), float64], Tensor[(5, 16, 7), bool], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64]) */;
    %11 = %10.1;
    %12 = cast(%11, dtype="uint32") /* ty=Tensor[(9, 6, 7), uint32] */;
    %13 = cast(%11, dtype="uint32") /* ty=Tensor[(9, 6, 7), uint32] */;
    %14 = cast(meta[relay.Constant][1] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
    %15 = reshape(%12, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
    %16 = reshape(%13, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
    %17 = reshape(%14, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %18 = @func_4240(%15, %16, %17) /* ty=(Tensor[(9, 6, 7), uint32], Tensor[(9, 6, 7), float64], Tensor[(5, 16, 7), bool], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64]) */;
    %19 = @func_6082() /* ty=Tensor[(1, 16, 15), float32] */;
    %20 = %3.0;
    %21 = %18.3;
    (%19, %20, %11, meta[relay.Constant][0] /* ty=Tensor[(378), uint32] */, meta[relay.Constant][1] /* ty=Tensor[(560), int64] */, %21)
  };
  %22() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(3, 11, 11), float64], Tensor[(9, 6, 7), float64], Tensor[(378), uint32], Tensor[(560), int64], Tensor[(7), int64]) */
}

def @func_6901(%var_6886: Tensor[(112), uint32], %var_6889: Tensor[(224), uint16], %var_6898: Tensor[(196), float32]) -> (Tensor[(1, 16, 15), float32], Tensor[(12), float64], Tensor[(112), uint32], Tensor[(40), int16], Tensor[(882), float64], Tensor[(224), uint16], Tensor[(12), float64], Tensor[(7, 7, 4), float32], Tensor[(196), float32]) {
  %23 = @func_5142() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */;
  %24 = cast(%var_6886, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %25 = cast(meta[relay.Constant][2] /* ty=Tensor[(40), int16] */, dtype="int16") /* ty=Tensor[(40), int16] */;
  %26 = cast(meta[relay.Constant][3] /* ty=Tensor[(882), float64] */, dtype="float64") /* ty=Tensor[(882), float64] */;
  %27 = cast(%var_6889, dtype="uint16") /* ty=Tensor[(224), uint16] */;
  %28 = cast(meta[relay.Constant][4] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %29 = reshape(%24, newshape=[1, 112]) /* ty=Tensor[(1, 112), uint32] */;
  %30 = reshape(%25, newshape=[40]) /* ty=Tensor[(40), int16] */;
  %31 = reshape(%26, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %32 = reshape(%27, newshape=[8, 28]) /* ty=Tensor[(8, 28), uint16] */;
  %33 = reshape(%28, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %34 = @func_6626(%29, %30, %31, %32, %33) /* ty=(Tensor[(9, 8, 6), float64], Tensor[(1, 112), uint32], Tensor[(40), int16], Tensor[(78), float32], Tensor[(882), float64], Tensor[(432), float64], Tensor[(8, 28), float32], Tensor[(?, 4, 3), float64], Tensor[(12), float64], Tensor[(8, 10, 16), int8]) */;
  %35 = cast(%var_6898, dtype="float32") /* ty=Tensor[(196), float32] */;
  %36 = reshape(%35, newshape=[7, 7, 4]) /* ty=Tensor[(7, 7, 4), float32] */;
  %37 = @func_5066(%36) /* ty=(Tensor[(7, 7, 4), float32],) */;
  %38 = %23.1;
  %39 = %34.8;
  %40 = %37.0;
  (%38, %39, %var_6886, meta[relay.Constant][2] /* ty=Tensor[(40), int16] */, meta[relay.Constant][3] /* ty=Tensor[(882), float64] */, %var_6889, meta[relay.Constant][4] /* ty=Tensor[(12), float64] */, %40, %var_6898)
}

def @main() -> (Tensor[(588, 2), float64],) {
  %41 = @func_5819() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(1, 4, 3), float64], Tensor[(588, 2), float64], Tensor[(12), float64]) */;
  %42 = %41.2;
  %43 = cast(%42, dtype="float64") /* ty=Tensor[(588, 2), float64] */;
  %44 = cosh(%43) /* ty=Tensor[(588, 2), float64] */;
  (%44,)
}

def @func_5094() -> (Tensor[(3, 11, 11), float64],) {
  @func_5092() /* ty=(Tensor[(3, 11, 11), float64],) */
}

def @func_4437(%var_4434: Tensor[(6, 6, 9), float32], %var_4435: Tensor[(630), float64], %var_4436: Tensor[(882), float64]) -> (Tensor[(6, 6, 9), float32], Tensor[(9, 7, 14), uint64], Tensor[(630), float64], Tensor[(882), float64]) {
  @func_4432(%var_4434, %var_4435, %var_4436) /* ty=(Tensor[(6, 6, 9), float32], Tensor[(9, 7, 14), uint64], Tensor[(630), float64], Tensor[(882), float64]) */
}

def @func_5068(%var_5067: Tensor[(7, 7, 4), float32]) -> (Tensor[(7, 7, 4), float32],) {
  %47 = fn (%var_5058: Tensor[(7, 7, 4), float32]) -> (Tensor[(7, 7, 4), float32],) {
    %45 = cast(%var_5058, dtype="float32") /* ty=Tensor[(7, 7, 4), float32] */;
    %46 = cos(%45) /* ty=Tensor[(7, 7, 4), float32] */;
    (%46,)
  };
  %47(%var_5067) /* ty=(Tensor[(7, 7, 4), float32],) */
}

def @func_5667(%var_5665: Tensor[(5, 9, 11), bool], %var_5666: Tensor[(5, 9, 11), bool]) -> (Tensor[(5, 9, 11), bool], Tensor[(5, 9, 11), float32]) {
  %55 = fn (%var_5638: Tensor[(5, 9, 11), bool], %var_5639: Tensor[(5, 9, 11), bool]) -> (Tensor[(5, 9, 11), bool], Tensor[(5, 9, 11), float32]) {
    %48 = cast(%var_5639, dtype="bool") /* ty=Tensor[(5, 9, 11), bool] */;
    %49 = shape_of(%var_5638, dtype="int32") /* ty=Tensor[(3), int32] */;
    %50 = cast(%var_5638, dtype="bool") /* ty=Tensor[(5, 9, 11), bool] */;
    %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %52 = cast(%var_5639, dtype="float32") /* ty=Tensor[(5, 9, 11), float32] */;
    %53 = logical_or(%50, %51) /* ty=Tensor[(5, 9, 11), bool] */;
    %54 = sqrt(%52) /* ty=Tensor[(5, 9, 11), float32] */;
    (%53, %54)
  };
  %55(%var_5665, %var_5666) /* ty=(Tensor[(5, 9, 11), bool], Tensor[(5, 9, 11), float32]) */
}

def @func_5877() -> (Tensor[(12), float64],) {
  @func_5875() /* ty=(Tensor[(12), float64],) */
}

def @func_6906(%var_6903: Tensor[(112), uint32], %var_6904: Tensor[(224), uint16], %var_6905: Tensor[(196), float32]) -> (Tensor[(1, 16, 15), float32], Tensor[(12), float64], Tensor[(112), uint32], Tensor[(40), int16], Tensor[(882), float64], Tensor[(224), uint16], Tensor[(12), float64], Tensor[(7, 7, 4), float32], Tensor[(196), float32]) {
  @func_6901(%var_6903, %var_6904, %var_6905) /* ty=(Tensor[(1, 16, 15), float32], Tensor[(12), float64], Tensor[(112), uint32], Tensor[(40), int16], Tensor[(882), float64], Tensor[(224), uint16], Tensor[(12), float64], Tensor[(7, 7, 4), float32], Tensor[(196), float32]) */
}

def @func_1806(%var_1805: Tensor[(13, 4, 4), float32]) -> (Tensor[(13, 4, 4), float32], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(13, 4, 4), float64], Tensor[(9, 8, 6), float64]) {
  %74 = fn (%var_1777: Tensor[(13, 4, 4), float32]) -> (Tensor[(13, 4, 4), float32], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(13, 4, 4), float64], Tensor[(9, 8, 6), float64]) {
    %56 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 4, 4), float32] */, dtype="float32") /* ty=Tensor[(13, 4, 4), float32] */;
    %57 = shape_of(%var_1777, dtype="int32") /* ty=Tensor[(3), int32] */;
    %58 = cast(%var_1777, dtype="float32") /* ty=Tensor[(13, 4, 4), float32] */;
    %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %60 = cast(meta[relay.Constant][6] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
    %61 = reshape(%60, newshape=[9, 8, 6]) /* ty=Tensor[(9, 8, 6), float64] */;
    %62 = @func_1047(%61) /* ty=(Tensor[(9, 8, 6), float64],) */;
    %63 = cast(%var_1777, dtype="float64") /* ty=Tensor[(13, 4, 4), float64] */;
    %64 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(13, 4, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %65 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 4, 4), float32] */, dtype="float64") /* ty=Tensor[(13, 4, 4), float64] */;
    %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %67 = %62.0;
    %68 = cast(%67, dtype="float64") /* ty=Tensor[(9, 8, 6), float64] */;
    %69 = reshape(%68, newshape=[9, 8, 6]) /* ty=Tensor[(9, 8, 6), float64] */;
    %70 = @func_1047(%69) /* ty=(Tensor[(9, 8, 6), float64],) */;
    %71 = divide(%58, %59) /* ty=Tensor[(13, 4, 4), float32] */;
    %72 = power(%65, %66) /* ty=Tensor[(13, 4, 4), float64] */;
    %73 = %70.0;
    (%71, %67, meta[relay.Constant][6] /* ty=Tensor[(432), float64] */, %72, %73)
  };
  %74(%var_1805) /* ty=(Tensor[(13, 4, 4), float32], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(13, 4, 4), float64], Tensor[(9, 8, 6), float64]) */
}

def @func_6091() -> (Tensor[(2, 3, 14), float64],) {
  %77 = fn () -> (Tensor[(2, 3, 14), float64],) {
    %75 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 3, 14), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 14), float64] */;
    %76 = asinh(%75) /* ty=Tensor[(2, 3, 14), float64] */;
    (%76,)
  };
  %77() /* ty=(Tensor[(2, 3, 14), float64],) */
}

def @func_8358() -> Tensor[(12), float64] {
  @func_8356() /* ty=Tensor[(12), float64] */
}

def @func_6188() -> Tensor[(3, 11, 11), float64] {
  %79 = fn () -> Tensor[(3, 11, 11), float64] {
    %78 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
    %78.0
  };
  %79() /* ty=Tensor[(3, 11, 11), float64] */
}

def @func_3871(%var_3869: Tensor[(6, 14, 14), float64], %var_3870: Tensor[(12), float64]) -> (Tensor[(6, 14, 14), float64], Tensor[(1, 4, 3), float64], Tensor[(12), float64]) {
  @func_3867(%var_3869, %var_3870) /* ty=(Tensor[(6, 14, 14), float64], Tensor[(1, 4, 3), float64], Tensor[(12), float64]) */
}

def @func_6230() -> (Tensor[(1, 16, 15), float64], Tensor[(1, 16, 15), float32], Tensor[(8, 28), uint16]) {
  %89 = fn () -> (Tensor[(1, 16, 15), float64], Tensor[(1, 16, 15), float32], Tensor[(8, 28), uint16]) {
    %80 = @func_6082() /* ty=Tensor[(1, 16, 15), float32] */;
    %81 = cast(%80, dtype="float64") /* ty=Tensor[(1, 16, 15), float64] */;
    %82 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 28), uint16] */, dtype="uint16") /* ty=Tensor[(8, 28), uint16] */;
    %83 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 28), uint16] */, dtype="uint16") /* ty=Tensor[(8, 28), uint16] */;
    %84 = reshape(%82, newshape=[7, 4, 8]) /* ty=Tensor[(7, 4, 8), uint16] */;
    %85 = reshape(%83, newshape=[7, 4, 8]) /* ty=Tensor[(7, 4, 8), uint16] */;
    %86 = @func_5223(%84, %85) /* ty=(Tensor[(3, 11, 11), float64], Tensor[(7, 4, 8), float64], Tensor[(1, 16, 15), float32]) */;
    %87 = cosh(%81) /* ty=Tensor[(1, 16, 15), float64] */;
    %88 = %86.2;
    (%87, %88, meta[relay.Constant][8] /* ty=Tensor[(8, 28), uint16] */)
  };
  %89() /* ty=(Tensor[(1, 16, 15), float64], Tensor[(1, 16, 15), float32], Tensor[(8, 28), uint16]) */
}

def @func_7006(%var_6945: Tensor[(840), bool], %var_6953: Tensor[(432, 1), float64], %var_6959: Tensor[(432, 10), float64], %var_6987: Tensor[(1568), float64], %var_6997: Tensor[(3360), float32], %var_7000: Tensor[(525), float32]) -> (Tensor[(3, 11, 11), float64], Tensor[(14, 5, 12), bool], Tensor[(840), bool], Tensor[(9, 8, 6), float64], Tensor[(3, 11, 11), float64], Tensor[(432, 10), int16], Tensor[(324, 1), float32], Tensor[(324), float32], Tensor[(1568), float64], Tensor[(14, 5, 12), bool], Tensor[(3360), float32], Tensor[(12), float64], Tensor[(5, 198), float32], Tensor[(525), float32]) {
  %90 = @func_6280() /* ty=(Tensor[(12), float64], Tensor[(4, 2, 5), uint8], Tensor[(2, 20), int16], Tensor[(3, 11, 11), float64]) */;
  %91 = cast(%var_6945, dtype="bool") /* ty=Tensor[(840), bool] */;
  %92 = cast(%var_6945, dtype="bool") /* ty=Tensor[(840), bool] */;
  %93 = reshape(%91, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), bool] */;
  %94 = reshape(%92, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), bool] */;
  %95 = @func_3139(%93, %94) /* ty=(Tensor[(14, 5, 12), bool],) */;
  %96 = cast(%var_6953, dtype="float64") /* ty=Tensor[(432, 1), float64] */;
  %97 = reshape(%96, newshape=[9, 8, 6]) /* ty=Tensor[(9, 8, 6), float64] */;
  %98 = @func_1047(%97) /* ty=(Tensor[(9, 8, 6), float64],) */;
  %99 = @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */;
  %100 = cast(%var_6953, dtype="float64") /* ty=Tensor[(432, 1), float64] */;
  %101 = cosh(%100) /* ty=Tensor[(432, 1), float64] */;
  %102 = cast(%101, dtype="float32") /* ty=Tensor[(432, 1), float32] */;
  %103 = cast(%var_6959, dtype="float32") /* ty=Tensor[(432, 10), float32] */;
  %104 = power(%102, %103) /* ty=Tensor[(432, 10), float32] */;
  %105 = cast(%104, dtype="int16") /* ty=Tensor[(432, 10), int16] */;
  %106 = cast(%var_6953, dtype="int16") /* ty=Tensor[(432, 1), int16] */;
  %107 = cast(meta[relay.Constant][9] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
  %108 = cast(%var_6987, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %109 = reshape(%107, newshape=[324, 1]) /* ty=Tensor[(324, 1), float32] */;
  %110 = reshape(%108, newshape=[784, 2]) /* ty=Tensor[(784, 2), float64] */;
  %111 = @func_5358(%109, %110) /* ty=(Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(6, 6, 9), float32], Tensor[(324, 1), float32], Tensor[(630), float64], Tensor[(7, 126), float64], Tensor[(9, 8, 6), float64], Tensor[(784, 2), float64]) */;
  %112 = cast(%var_6997, dtype="float32") /* ty=Tensor[(3360), float32] */;
  %113 = cast(meta[relay.Constant][10] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %114 = cast(meta[relay.Constant][11] /* ty=Tensor[(5, 198), float32] */, dtype="float32") /* ty=Tensor[(5, 198), float32] */;
  %115 = cast(%var_7000, dtype="float32") /* ty=Tensor[(525), float32] */;
  %116 = reshape(%112, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float32] */;
  %117 = reshape(%113, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %118 = reshape(%114, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %119 = reshape(%115, newshape=[35, 15]) /* ty=Tensor[(35, 15), float32] */;
  %120 = @func_5776(%116, %117, %118, %119) /* ty=(Tensor[(14, 16, 15), uint64], Tensor[(1144), float32], Tensor[(2025), float64], Tensor[(208), float32], Tensor[(12), float64], Tensor[(990), float32], Tensor[(14, 5, 12), bool], Tensor[(840), bool], Tensor[(35, 15), uint16]) */;
  %121 = %90.3;
  %122 = %95.0;
  %123 = %98.0;
  %124 = %99.0;
  %125 = bitwise_xor(%105, %106) /* ty=Tensor[(432, 10), int16] */;
  %126 = %111.3;
  %127 = %120.6;
  (%121, %122, %var_6945, %123, %124, %125, %126, meta[relay.Constant][9] /* ty=Tensor[(324), float32] */, %var_6987, %127, %var_6997, meta[relay.Constant][10] /* ty=Tensor[(12), float64] */, meta[relay.Constant][11] /* ty=Tensor[(5, 198), float32] */, %var_7000)
}

def @func_2523(%var_2521: Tensor[(8, 14, 14), float64], %var_2522: Tensor[(8, 14, 14), float64]) -> (Tensor[(8, 14, 14), float64], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(9, 8, 6), float64]) {
  %141 = fn (%var_2498: Tensor[(8, 14, 14), float64], %var_2499: Tensor[(8, 14, 14), float64]) -> (Tensor[(8, 14, 14), float64], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(9, 8, 6), float64]) {
    %128 = cast(%var_2499, dtype="float64") /* ty=Tensor[(8, 14, 14), float64] */;
    %129 = shape_of(%var_2498, dtype="int32") /* ty=Tensor[(3), int32] */;
    %130 = cast(%var_2498, dtype="float64") /* ty=Tensor[(8, 14, 14), float64] */;
    %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %132 = cast(meta[relay.Constant][12] /* ty=Tensor[(104, 2), float32] */, dtype="float32") /* ty=Tensor[(104, 2), float32] */;
    %133 = reshape(%132, newshape=[13, 4, 4]) /* ty=Tensor[(13, 4, 4), float32] */;
    %134 = @func_1804(%133) /* ty=(Tensor[(13, 4, 4), float32], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(13, 4, 4), float64], Tensor[(9, 8, 6), float64]) */;
    %135 = cast(meta[relay.Constant][12] /* ty=Tensor[(104, 2), float32] */, dtype="float32") /* ty=Tensor[(104, 2), float32] */;
    %136 = reshape(%135, newshape=[13, 4, 4]) /* ty=Tensor[(13, 4, 4), float32] */;
    %137 = @func_1804(%136) /* ty=(Tensor[(13, 4, 4), float32], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(13, 4, 4), float64], Tensor[(9, 8, 6), float64]) */;
    %138 = floor_divide(%130, %131) /* ty=Tensor[(8, 14, 14), float64] */;
    %139 = %134.4;
    %140 = %137.4;
    (%138, %139, meta[relay.Constant][12] /* ty=Tensor[(104, 2), float32] */, %140)
  };
  %141(%var_2521, %var_2522) /* ty=(Tensor[(8, 14, 14), float64], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(9, 8, 6), float64]) */
}

def @func_8603(%var_8601: Tensor[(3, 126), uint32]) -> (Tensor[(8, 10, 16), float64], Tensor[(9, 6, 7), uint32], Tensor[(3, 126), uint32], Tensor[(1, 560), int64]) {
  @func_8600(%var_8601) /* ty=(Tensor[(8, 10, 16), float64], Tensor[(9, 6, 7), uint32], Tensor[(3, 126), uint32], Tensor[(1, 560), int64]) */
}

def @func_3184(%var_3182: Tensor[(8, 6, 12), bool], %var_3183: Tensor[(882), float64]) -> (Tensor[(8, 6, 12), bool], Tensor[(9, 7, 14), uint64], Tensor[(882), float64]) {
  @func_3180(%var_3182, %var_3183) /* ty=(Tensor[(8, 6, 12), bool], Tensor[(9, 7, 14), uint64], Tensor[(882), float64]) */
}

def @func_3651(%var_3648: Tensor[(1, 1, 7), int64], %var_3649: Tensor[(5, 6, 7), int64], %var_3650: Tensor[(5, 16, 7), int64]) -> (Tensor[(5, 6, 7), int64], Tensor[(5, 16, 7), bool]) {
  %148 = fn (%var_3637: Tensor[(1, 1, 7), int64], %var_3638: Tensor[(5, 6, 7), int64], %var_3642: Tensor[(5, 16, 7), int64]) -> (Tensor[(5, 6, 7), int64], Tensor[(5, 16, 7), bool]) {
    %142 = cast(%var_3637, dtype="int64") /* ty=Tensor[(1, 1, 7), int64] */;
    %143 = cast(%var_3638, dtype="int64") /* ty=Tensor[(5, 6, 7), int64] */;
    %144 = cast(%var_3637, dtype="bool") /* ty=Tensor[(1, 1, 7), bool] */;
    %145 = cast(%var_3642, dtype="bool") /* ty=Tensor[(5, 16, 7), bool] */;
    %146 = logical_xor(%142, %143) /* ty=Tensor[(5, 6, 7), int64] */;
    %147 = less_equal(%144, %145) /* ty=Tensor[(5, 16, 7), bool] */;
    (%146, %147)
  };
  %148(%var_3648, %var_3649, %var_3650) /* ty=(Tensor[(5, 6, 7), int64], Tensor[(5, 16, 7), bool]) */
}

def @func_7674(%var_7672: Tensor[(572, 2), float32]) -> (Tensor[(12), float64], Tensor[(3, 11, 11), float64], Tensor[(572, 2), bool]) {
  @func_7671(%var_7672) /* ty=(Tensor[(12), float64], Tensor[(3, 11, 11), float64], Tensor[(572, 2), bool]) */
}

def @func_6681() -> Tensor[(2, 3, 14), float64] {
  @func_6679() /* ty=Tensor[(2, 3, 14), float64] */
}

def @func_6282() -> (Tensor[(12), float64], Tensor[(4, 2, 5), uint8], Tensor[(2, 20), int16], Tensor[(3, 11, 11), float64]) {
  @func_6280() /* ty=(Tensor[(12), float64], Tensor[(4, 2, 5), uint8], Tensor[(2, 20), int16], Tensor[(3, 11, 11), float64]) */
}

def @func_8751() -> Tensor[(2, 3, 14), float64] {
  @func_8749() /* ty=Tensor[(2, 3, 14), float64] */
}

def @func_6626(%var_6585: Tensor[(1, 112), uint32], %var_6586: Tensor[(40), int16], %var_6588: Tensor[(882), float64], %var_6602: Tensor[(8, 28), uint16], %var_6608: Tensor[(12), float64]) -> (Tensor[(9, 8, 6), float64], Tensor[(1, 112), uint32], Tensor[(40), int16], Tensor[(78), float32], Tensor[(882), float64], Tensor[(432), float64], Tensor[(8, 28), float32], Tensor[(?, 4, 3), float64], Tensor[(12), float64], Tensor[(8, 10, 16), int8]) {
  %149 = cast(%var_6585, dtype="uint32") /* ty=Tensor[(1, 112), uint32] */;
  %150 = cast(%var_6585, dtype="uint32") /* ty=Tensor[(1, 112), uint32] */;
  %151 = cast(%var_6586, dtype="int16") /* ty=Tensor[(40), int16] */;
  %152 = cast(meta[relay.Constant][13] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %153 = cast(%var_6588, dtype="float64") /* ty=Tensor[(882), float64] */;
  %154 = cast(meta[relay.Constant][14] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %155 = reshape(%149, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), uint32] */;
  %156 = reshape(%150, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), uint32] */;
  %157 = reshape(%151, newshape=[40]) /* ty=Tensor[(40), int16] */;
  %158 = reshape(%152, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %159 = reshape(%153, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %160 = reshape(%154, newshape=[432]) /* ty=Tensor[(432), float64] */;
  %161 = @func_4175(%155, %156, %157, %158, %159, %160) /* ty=(Tensor[(8, 2, 7), uint32], Tensor[(4, 2, 5), uint8], Tensor[(40), int16], Tensor[(630), float64], Tensor[(78), float32], Tensor[(882), float64], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(9, 8, 6), float64], Tensor[(8, 2, 7), float32], Tensor[(9, 8, 6), float64], Tensor[(1144), float32]) */;
  %162 = @func_6229() /* ty=(Tensor[(1, 16, 15), float64], Tensor[(1, 16, 15), float32], Tensor[(8, 28), uint16]) */;
  %163 = %162.2;
  %164 = cast(%var_6602, dtype="float32") /* ty=Tensor[(8, 28), float32] */;
  %165 = shape_of(%163, dtype="int32") /* ty=Tensor[(2), int32] */;
  %166 = cast(%163, dtype="float32") /* ty=Tensor[(8, 28), float32] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %168 = cast(%var_6608, dtype="float64") /* ty=Tensor[(12), float64] */;
  %169 = reshape(%168, newshape=[1, 4, 3]) /* ty=Tensor[(1, 4, 3), float64] */;
  %170 = @func_1337(%169) /* ty=(Tensor[(?, 4, 3), float64], Tensor[(1, 4, 3), float64]) */;
  %171 = @func_6328() /* ty=Tensor[(8, 10, 16), float64] */;
  %172 = cast(meta[relay.Constant][15] /* ty=Tensor[(8, 10, 16), float64] */, dtype="int8") /* ty=Tensor[(8, 10, 16), int8] */;
  %173 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%171, dtype="int8") /* ty=Tensor[(8, 10, 16), int8] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %176 = %161.10;
  %177 = floor_mod(%166, %167) /* ty=Tensor[(8, 28), float32] */;
  %178 = %170.0;
  %179 = add(%174, %175) /* ty=Tensor[(8, 10, 16), int8] */;
  (%176, %var_6585, %var_6586, meta[relay.Constant][13] /* ty=Tensor[(78), float32] */, %var_6588, meta[relay.Constant][14] /* ty=Tensor[(432), float64] */, %177, %178, %var_6608, %179)
}

def @func_7808(%var_7718: Tensor[(10, 14, 1), float64], %var_7738: Tensor[(10, 14, 16), float64], %var_7750: Tensor[(10, 14, 6), float64], %var_7754: Tensor[(10, 14, 16), bool]) -> (Tensor[(2, 3, 14), float64], Tensor[(10, 14, 6), float32], Tensor[(10, 14, 16), uint32], Tensor[(3, 11, 11), float64], Tensor[(10, 14, ?), float64]) {
  %180 = cast(%var_7718, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %181 = log(%180) /* ty=Tensor[(10, 14, 1), float64] */;
  %182 = cast(%181, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %183 = cast(%var_7750, dtype="float32") /* ty=Tensor[(10, 14, 6), float32] */;
  %184 = cast(%var_7718, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %185 = cast(%var_7738, dtype="bool") /* ty=Tensor[(10, 14, 16), bool] */;
  %186 = logical_or(%184, %185) /* ty=Tensor[(10, 14, 16), bool] */;
  %187 = cast(%var_7754, dtype="uint32") /* ty=Tensor[(10, 14, 16), uint32] */;
  %188 = shape_of(%186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(%186, dtype="uint32") /* ty=Tensor[(10, 14, 16), uint32] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %191 = @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */;
  %192 = cast(%var_7718, dtype="int16") /* ty=Tensor[(10, 14, 1), int16] */;
  %193 = shape_of(%181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%181, dtype="int16") /* ty=Tensor[(10, 14, 1), int16] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %196 = right_shift(%194, %195) /* ty=Tensor[(10, 14, ?), int16] */;
  %197 = cast(%196, dtype="float64") /* ty=Tensor[(10, 14, ?), float64] */;
  %198 = @func_6679() /* ty=Tensor[(2, 3, 14), float64] */;
  %199 = power(%182, %183) /* ty=Tensor[(10, 14, 6), float32] */;
  %200 = multiply(%189, %190) /* ty=Tensor[(10, 14, 16), uint32] */;
  %201 = %191.0;
  %202 = atanh(%197) /* ty=Tensor[(10, 14, ?), float64] */;
  (%198, %199, %200, %201, %202)
}

def @func_5969(%var_5951: Tensor[(1144), float32]) -> (Tensor[(3, 11, 11), float64], Tensor[(9, 8, 6), float64], Tensor[(1144), float32]) {
  %203 = @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */;
  %204 = cast(%var_5951, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %205 = cast(%var_5951, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %206 = cast(%var_5951, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %207 = reshape(%204, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %208 = reshape(%205, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %209 = reshape(%206, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %210 = @func_2585(%207, %208, %209) /* ty=(Tensor[(11, 13, 8), bool], Tensor[(11, 13, 8), int8], Tensor[(9, 8, 6), float64], Tensor[(1568), float64]) */;
  %211 = %203.0;
  %212 = %210.2;
  (%211, %212, %var_5951)
}

def @func_8842() -> Tensor[(5, 9, 11), float32] {
  @func_8840() /* ty=Tensor[(5, 9, 11), float32] */
}

def @func_6049(%var_6047: Tensor[(196), float32], %var_6048: Tensor[(1568), float64]) -> (Tensor[(3, 11, 11), float64], Tensor[(196), float32], Tensor[(7, 7, 4), float64], Tensor[(104, 2), float32], Tensor[(1568), float64]) {
  @func_6045(%var_6047, %var_6048) /* ty=(Tensor[(3, 11, 11), float64], Tensor[(196), float32], Tensor[(7, 7, 4), float64], Tensor[(104, 2), float32], Tensor[(1568), float64]) */
}

def @func_5875() -> (Tensor[(12), float64],) {
  %213 = @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */;
  %214 = %213.2;
  (%214,)
}

def @func_5819() -> (Tensor[(3, 11, 11), float64], Tensor[(1, 4, 3), float64], Tensor[(588, 2), float64], Tensor[(12), float64]) {
  %223 = fn () -> (Tensor[(3, 11, 11), float64], Tensor[(1, 4, 3), float64], Tensor[(588, 2), float64], Tensor[(12), float64]) {
    %215 = @func_5316() /* ty=(Tensor[(3, 11, 11), float64],) */;
    %216 = cast(meta[relay.Constant][16] /* ty=Tensor[(588, 2), float64] */, dtype="float64") /* ty=Tensor[(588, 2), float64] */;
    %217 = cast(meta[relay.Constant][17] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
    %218 = reshape(%216, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float64] */;
    %219 = reshape(%217, newshape=[12]) /* ty=Tensor[(12), float64] */;
    %220 = @func_3867(%218, %219) /* ty=(Tensor[(6, 14, 14), float64], Tensor[(1, 4, 3), float64], Tensor[(12), float64]) */;
    %221 = %215.0;
    %222 = %220.1;
    (%221, %222, meta[relay.Constant][16] /* ty=Tensor[(588, 2), float64] */, meta[relay.Constant][17] /* ty=Tensor[(12), float64] */)
  };
  %223() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(1, 4, 3), float64], Tensor[(588, 2), float64], Tensor[(12), float64]) */
}

def @func_5316() -> (Tensor[(3, 11, 11), float64],) {
  %224 = @func_5240() /* ty=Tensor[(3, 11, 11), float64] */;
  (%224,)
}

def @func_5513() -> (Tensor[(8, 10, 16), float64],) {
  %227 = fn () -> (Tensor[(8, 10, 16), float64],) {
    %225 = @func_5142() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */;
    %226 = %225.3;
    (%226,)
  };
  %227() /* ty=(Tensor[(8, 10, 16), float64],) */
}

def @func_276(%var_274: Tensor[(10, 11, 9), float32]) -> Tensor[(10, 11, 9), float32] {
  @func_273(%var_274) /* ty=Tensor[(10, 11, 9), float32] */
}

def @func_3867(%var_3859: Tensor[(6, 14, 14), float64], %var_3865: Tensor[(12), float64]) -> (Tensor[(6, 14, 14), float64], Tensor[(1, 4, 3), float64], Tensor[(12), float64]) {
  %228 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 14, 1), float64] */, dtype="float64") /* ty=Tensor[(6, 14, 1), float64] */;
  %229 = cast(%var_3859, dtype="float64") /* ty=Tensor[(6, 14, 14), float64] */;
  %230 = cast(%var_3865, dtype="float64") /* ty=Tensor[(12), float64] */;
  %231 = reshape(%230, newshape=[1, 4, 3]) /* ty=Tensor[(1, 4, 3), float64] */;
  %232 = @func_1337(%231) /* ty=(Tensor[(?, 4, 3), float64], Tensor[(1, 4, 3), float64]) */;
  %233 = mod(%228, %229) /* ty=Tensor[(6, 14, 14), float64] */;
  %234 = %232.1;
  (%233, %234, %var_3865)
}

def @func_6738(%var_6736: Tensor[(3, 11, 11), float64], %var_6737: Tensor[(96), float64]) -> (Tensor[(3, 11, 11), float32], Tensor[(2, 6, 8), int32], Tensor[(96), float64]) {
  @func_6734(%var_6736, %var_6737) /* ty=(Tensor[(3, 11, 11), float32], Tensor[(2, 6, 8), int32], Tensor[(96), float64]) */
}

def @func_5504() -> Tensor[(1, 16, 15), float32] {
  @func_5502() /* ty=Tensor[(1, 16, 15), float32] */
}

def @func_7610(%var_7608: Tensor[(16, 16, 10), int32], %var_7609: Tensor[(16, 16, 10), int32]) -> (Tensor[(16, 16, 10), bool],) {
  @func_7606(%var_7608, %var_7609) /* ty=(Tensor[(16, 16, 10), bool],) */
}

def @func_3139(%var_3134: Tensor[(14, 5, 12), bool], %var_3135: Tensor[(14, 5, 12), bool]) -> (Tensor[(14, 5, 12), bool],) {
  %235 = cast(%var_3135, dtype="bool") /* ty=Tensor[(14, 5, 12), bool] */;
  %236 = shape_of(%var_3134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(%var_3134, dtype="bool") /* ty=Tensor[(14, 5, 12), bool] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %239 = logical_or(%237, %238) /* ty=Tensor[(14, 5, 12), bool] */;
  (%239,)
}

def @func_5942() -> Tensor[(3, 11, 11), float64] {
  %241 = fn () -> Tensor[(3, 11, 11), float64] {
    %240 = @func_5729() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(8, 10, 16), float64]) */;
    %240.1
  };
  %241() /* ty=Tensor[(3, 11, 11), float64] */
}

def @func_8749() -> Tensor[(2, 3, 14), float64] {
  %242 = @func_6090() /* ty=(Tensor[(2, 3, 14), float64],) */;
  %242.0
}

def @func_7291(%var_7289: Tensor[(3, 11, 11), float64]) -> Tensor[(3, 11, 11), bool] {
  @func_7288(%var_7289) /* ty=Tensor[(3, 11, 11), bool] */
}

def @func_7884() -> Tensor[(3, 11, 11), float32] {
  %246 = fn () -> Tensor[(3, 11, 11), float32] {
    %243 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
    %244 = %243.0;
    %245 = cast(%244, dtype="float32") /* ty=Tensor[(3, 11, 11), float32] */;
    tan(%245) /* ty=Tensor[(3, 11, 11), float32] */
  };
  %246() /* ty=Tensor[(3, 11, 11), float32] */
}

def @func_5840() -> Tensor[(3, 11, 11), float64] {
  %248 = fn () -> Tensor[(3, 11, 11), float64] {
    %247 = @func_5729() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(8, 10, 16), float64]) */;
    %247.0
  };
  %248() /* ty=Tensor[(3, 11, 11), float64] */
}

def @func_6484() -> Tensor[(3, 11, 11), float32] {
  @func_6482() /* ty=Tensor[(3, 11, 11), float32] */
}

def @func_7606(%var_7587: Tensor[(16, 16, 10), int32], %var_7588: Tensor[(16, 16, 10), int32]) -> (Tensor[(16, 16, 10), bool],) {
  %249 = cast(%var_7588, dtype="bool") /* ty=Tensor[(16, 16, 10), bool] */;
  %250 = shape_of(%var_7587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%var_7587, dtype="bool") /* ty=Tensor[(16, 16, 10), bool] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %253 = not_equal(%251, %252) /* ty=Tensor[(16, 16, 10), bool] */;
  %254 = cast(%var_7588, dtype="bool") /* ty=Tensor[(16, 16, 10), bool] */;
  %255 = shape_of(%253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(%253, dtype="bool") /* ty=Tensor[(16, 16, 10), bool] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %258 = less_equal(%256, %257) /* ty=Tensor[(16, 16, 10), bool] */;
  (%258,)
}

def @func_1340(%var_1338: Tensor[(1, 4, 3), float64]) -> (Tensor[(?, 4, 3), float64], Tensor[(1, 4, 3), float64]) {
  @func_1337(%var_1338) /* ty=(Tensor[(?, 4, 3), float64], Tensor[(1, 4, 3), float64]) */
}

def @func_5425() -> (Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) {
  %259 = @func_5092() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %260 = cast(meta[relay.Constant][19] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %261 = reshape(%260, newshape=[1, 4, 3]) /* ty=Tensor[(1, 4, 3), float64] */;
  %262 = @func_1337(%261) /* ty=(Tensor[(?, 4, 3), float64], Tensor[(1, 4, 3), float64]) */;
  %263 = %259.0;
  %264 = %262.0;
  (%263, %264, meta[relay.Constant][19] /* ty=Tensor[(12), float64] */)
}

def @func_3729(%var_3728: Tensor[(4, 2, 5), int16]) -> Tensor[(4, 2, 5), uint8] {
  %276 = fn (%var_3683: Tensor[(4, 2, 5), int16]) -> Tensor[(4, 2, 5), uint8] {
    %265 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 2, 5), int16] */, dtype="float32") /* ty=Tensor[(4, 2, 5), float32] */;
    %266 = asin(%265) /* ty=Tensor[(4, 2, 5), float32] */;
    %267 = cast(%var_3683, dtype="bool") /* ty=Tensor[(4, 2, 5), bool] */;
    %268 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(4, 2, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %269 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 2, 5), int16] */, dtype="bool") /* ty=Tensor[(4, 2, 5), bool] */;
    %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %271 = greater(%269, %270) /* ty=Tensor[(4, 2, 5), bool] */;
    %272 = cast(%271, dtype="uint8") /* ty=Tensor[(4, 2, 5), uint8] */;
    %273 = shape_of(%266, dtype="int32") /* ty=Tensor[(3), int32] */;
    %274 = cast(%266, dtype="uint8") /* ty=Tensor[(4, 2, 5), uint8] */;
    %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    bitwise_and(%274, %275) /* ty=Tensor[(4, 2, 5), uint8] */
  };
  %276(%var_3728) /* ty=Tensor[(4, 2, 5), uint8] */
}

def @func_4358(%var_4356: Tensor[(8, 4, 6), float32]) -> (Tensor[(8, 4, 6), float32], Tensor[(9, 8, 6), float64], Tensor[(208), float32]) {
  @func_4355(%var_4356) /* ty=(Tensor[(8, 4, 6), float32], Tensor[(9, 8, 6), float64], Tensor[(208), float32]) */
}

def @func_6823(%var_6791: Tensor[(96), float64], %var_6813: Tensor[(78), float32], %var_6814: Tensor[(882), float64]) -> (Tensor[(8, 10, 16), float64], Tensor[(10, 11, 9), float32], Tensor[(96), float64], Tensor[(2, 3, 13), float32], Tensor[(78), float32], Tensor[(882), float64], Tensor[(1, 16, 15), float64]) {
  %277 = @func_6140() /* ty=(Tensor[(8, 10, 16), float64],) */;
  %278 = cast(%var_6791, dtype="float64") /* ty=Tensor[(96), float64] */;
  %279 = cast(%var_6791, dtype="float64") /* ty=Tensor[(96), float64] */;
  %280 = reshape(%278, newshape=[2, 6, 8]) /* ty=Tensor[(2, 6, 8), float64] */;
  %281 = reshape(%279, newshape=[2, 6, 8]) /* ty=Tensor[(2, 6, 8), float64] */;
  %282 = @func_2182(%280, %281) /* ty=(Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(2, 6, 8), int32]) */;
  %283 = cast(%var_6813, dtype="float32") /* ty=Tensor[(78), float32] */;
  %284 = cast(%var_6814, dtype="float64") /* ty=Tensor[(882), float64] */;
  %285 = reshape(%283, newshape=[2, 3, 13]) /* ty=Tensor[(2, 3, 13), float32] */;
  %286 = reshape(%284, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %287 = @func_3471(%285, %286) /* ty=(Tensor[(2, 3, 13), float32], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(990), float32], Tensor[(630), float64], Tensor[(882), float64]) */;
  %288 = @func_6082() /* ty=Tensor[(1, 16, 15), float32] */;
  %289 = cast(%288, dtype="float64") /* ty=Tensor[(1, 16, 15), float64] */;
  %290 = acos(%289) /* ty=Tensor[(1, 16, 15), float64] */;
  %291 = cast(%290, dtype="float64") /* ty=Tensor[(1, 16, 15), float64] */;
  %292 = %277.0;
  %293 = %282.0;
  %294 = %287.0;
  %295 = acosh(%291) /* ty=Tensor[(1, 16, 15), float64] */;
  (%292, %293, %var_6791, %294, %var_6813, %var_6814, %295)
}

def @func_6142() -> (Tensor[(8, 10, 16), float64],) {
  @func_6140() /* ty=(Tensor[(8, 10, 16), float64],) */
}

def @func_6149() -> (Tensor[(12), float64],) {
  %298 = fn () -> (Tensor[(12), float64],) {
    %296 = @func_5875() /* ty=(Tensor[(12), float64],) */;
    %297 = %296.0;
    (%297,)
  };
  %298() /* ty=(Tensor[(12), float64],) */
}

def @func_7554() -> (Tensor[(12), float64], Tensor[(5, 9, 11), float32], Tensor[(1, 495), bool]) {
  @func_7552() /* ty=(Tensor[(12), float64], Tensor[(5, 9, 11), float32], Tensor[(1, 495), bool]) */
}

def @func_7552() -> (Tensor[(12), float64], Tensor[(5, 9, 11), float32], Tensor[(1, 495), bool]) {
  %299 = @func_6148() /* ty=(Tensor[(12), float64],) */;
  %300 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 495), bool] */, dtype="bool") /* ty=Tensor[(1, 495), bool] */;
  %301 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 495), bool] */, dtype="bool") /* ty=Tensor[(1, 495), bool] */;
  %302 = reshape(%300, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), bool] */;
  %303 = reshape(%301, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), bool] */;
  %304 = @func_5664(%302, %303) /* ty=(Tensor[(5, 9, 11), bool], Tensor[(5, 9, 11), float32]) */;
  %305 = %299.0;
  %306 = %304.1;
  (%305, %306, meta[relay.Constant][21] /* ty=Tensor[(1, 495), bool] */)
}

def @func_4686(%var_4681: Tensor[(9, 15, 15), float64], %var_4682: Tensor[(208), float32], %var_4683: Tensor[(525), float32], %var_4684: Tensor[(12), float64], %var_4685: Tensor[(990), float32]) -> (Tensor[(9, 15, 15), float64], Tensor[(1144), float32], Tensor[(1144), float32], Tensor[(196), float64], Tensor[(208), float32], Tensor[(1176), float64], Tensor[(525), float32], Tensor[(1176), float64], Tensor[(12), float64], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(12), float64]) {
  @func_4679(%var_4681, %var_4682, %var_4683, %var_4684, %var_4685) /* ty=(Tensor[(9, 15, 15), float64], Tensor[(1144), float32], Tensor[(1144), float32], Tensor[(196), float64], Tensor[(208), float32], Tensor[(1176), float64], Tensor[(525), float32], Tensor[(1176), float64], Tensor[(12), float64], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(12), float64]) */
}

def @func_8298(%var_8297: Tensor[(10, 5, 16), float32]) -> (Tensor[(10, 5, 16), float32],) {
  %309 = fn (%var_8292: Tensor[(10, 5, 16), float32]) -> (Tensor[(10, 5, 16), float32],) {
    %307 = cast(%var_8292, dtype="float32") /* ty=Tensor[(10, 5, 16), float32] */;
    %308 = sin(%307) /* ty=Tensor[(10, 5, 16), float32] */;
    (%308,)
  };
  %309(%var_8297) /* ty=(Tensor[(10, 5, 16), float32],) */
}

def @func_1049(%var_1048: Tensor[(9, 8, 6), float64]) -> (Tensor[(9, 8, 6), float64],) {
  %312 = fn (%var_1035: Tensor[(9, 8, 6), float64]) -> (Tensor[(9, 8, 6), float64],) {
    %310 = cast(%var_1035, dtype="float64") /* ty=Tensor[(9, 8, 6), float64] */;
    %311 = exp(%310) /* ty=Tensor[(9, 8, 6), float64] */;
    (%311,)
  };
  %312(%var_1048) /* ty=(Tensor[(9, 8, 6), float64],) */
}

def @func_7495(%var_7494: Tensor[(6, 4, 7), float64]) -> (Tensor[(6, 4, 7), float64], Tensor[(8, 10, 16), float64]) {
  %317 = fn (%var_7471: Tensor[(6, 4, 7), float64]) -> (Tensor[(6, 4, 7), float64], Tensor[(8, 10, 16), float64]) {
    %313 = cast(%var_7471, dtype="float64") /* ty=Tensor[(6, 4, 7), float64] */;
    %314 = @func_5512() /* ty=(Tensor[(8, 10, 16), float64],) */;
    %315 = cos(%313) /* ty=Tensor[(6, 4, 7), float64] */;
    %316 = %314.0;
    (%315, %316)
  };
  %317(%var_7494) /* ty=(Tensor[(6, 4, 7), float64], Tensor[(8, 10, 16), float64]) */
}

def @func_4432(%var_4404: Tensor[(6, 6, 9), float32], %var_4428: Tensor[(630), float64], %var_4429: Tensor[(882), float64]) -> (Tensor[(6, 6, 9), float32], Tensor[(9, 7, 14), uint64], Tensor[(630), float64], Tensor[(882), float64]) {
  %318 = cast(%var_4404, dtype="float32") /* ty=Tensor[(6, 6, 9), float32] */;
  %319 = cast(%var_4428, dtype="float64") /* ty=Tensor[(630), float64] */;
  %320 = cast(%var_4429, dtype="float64") /* ty=Tensor[(882), float64] */;
  %321 = reshape(%319, newshape=[10, 7, 9]) /* ty=Tensor[(10, 7, 9), float64] */;
  %322 = reshape(%320, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %323 = @func_388(%321, %322) /* ty=(Tensor[(10, 7, 9), float64], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(9, 7, 14), uint64], Tensor[(882), float64]) */;
  %324 = acosh(%318) /* ty=Tensor[(6, 6, 9), float32] */;
  %325 = %323.3;
  (%324, %325, %var_4428, %var_4429)
}

def @func_5092() -> (Tensor[(3, 11, 11), float64],) {
  %326 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %327 = %326.0;
  (%327,)
}

def @func_7288(%var_7270: Tensor[(3, 11, 11), float64]) -> Tensor[(3, 11, 11), bool] {
  %328 = @func_5941() /* ty=Tensor[(3, 11, 11), float64] */;
  %329 = cast(%var_7270, dtype="bool") /* ty=Tensor[(3, 11, 11), bool] */;
  %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%328, dtype="bool") /* ty=Tensor[(3, 11, 11), bool] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%331, %332) /* ty=Tensor[(3, 11, 11), bool] */
}

def @func_6447() -> Tensor[(3, 11, 11), float64] {
  @func_6445() /* ty=Tensor[(3, 11, 11), float64] */
}

def @func_8013() -> Tensor[(2, 3, 14), float64] {
  @func_8011() /* ty=Tensor[(2, 3, 14), float64] */
}

def @func_5781(%var_5777: Tensor[(14, 16, 15), float32], %var_5778: Tensor[(12), float64], %var_5779: Tensor[(990), float32], %var_5780: Tensor[(35, 15), float32]) -> (Tensor[(14, 16, 15), uint64], Tensor[(1144), float32], Tensor[(2025), float64], Tensor[(208), float32], Tensor[(12), float64], Tensor[(990), float32], Tensor[(14, 5, 12), bool], Tensor[(840), bool], Tensor[(35, 15), uint16]) {
  %360 = fn (%var_5742: Tensor[(14, 16, 15), float32], %var_5753: Tensor[(12), float64], %var_5754: Tensor[(990), float32], %var_5772: Tensor[(35, 15), float32]) -> (Tensor[(14, 16, 15), uint64], Tensor[(1144), float32], Tensor[(2025), float64], Tensor[(208), float32], Tensor[(12), float64], Tensor[(990), float32], Tensor[(14, 5, 12), bool], Tensor[(840), bool], Tensor[(35, 15), uint16]) {
    %333 = @func_5502() /* ty=Tensor[(1, 16, 15), float32] */;
    %334 = cast(%333, dtype="uint64") /* ty=Tensor[(1, 16, 15), uint64] */;
    %335 = cast(%var_5742, dtype="uint64") /* ty=Tensor[(14, 16, 15), uint64] */;
    %336 = cast(meta[relay.Constant][22] /* ty=Tensor[(2025), float64] */, dtype="float64") /* ty=Tensor[(2025), float64] */;
    %337 = cast(meta[relay.Constant][23] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
    %338 = cast(meta[relay.Constant][24] /* ty=Tensor[(35, 15), float32] */, dtype="float32") /* ty=Tensor[(35, 15), float32] */;
    %339 = cast(%var_5753, dtype="float64") /* ty=Tensor[(12), float64] */;
    %340 = cast(%var_5754, dtype="float32") /* ty=Tensor[(990), float32] */;
    %341 = reshape(%336, newshape=[9, 15, 15]) /* ty=Tensor[(9, 15, 15), float64] */;
    %342 = reshape(%337, newshape=[208]) /* ty=Tensor[(208), float32] */;
    %343 = reshape(%338, newshape=[525]) /* ty=Tensor[(525), float32] */;
    %344 = reshape(%339, newshape=[12]) /* ty=Tensor[(12), float64] */;
    %345 = reshape(%340, newshape=[990]) /* ty=Tensor[(990), float32] */;
    %346 = @func_4679(%341, %342, %343, %344, %345) /* ty=(Tensor[(9, 15, 15), float64], Tensor[(1144), float32], Tensor[(1144), float32], Tensor[(196), float64], Tensor[(208), float32], Tensor[(1176), float64], Tensor[(525), float32], Tensor[(1176), float64], Tensor[(12), float64], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(12), float64]) */;
    %347 = cast(meta[relay.Constant][25] /* ty=Tensor[(840), bool] */, dtype="bool") /* ty=Tensor[(840), bool] */;
    %348 = cast(meta[relay.Constant][25] /* ty=Tensor[(840), bool] */, dtype="bool") /* ty=Tensor[(840), bool] */;
    %349 = reshape(%347, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), bool] */;
    %350 = reshape(%348, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), bool] */;
    %351 = @func_3139(%349, %350) /* ty=(Tensor[(14, 5, 12), bool],) */;
    %352 = cast(%var_5772, dtype="uint16") /* ty=Tensor[(35, 15), uint16] */;
    %353 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(35, 15), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %354 = cast(meta[relay.Constant][24] /* ty=Tensor[(35, 15), float32] */, dtype="uint16") /* ty=Tensor[(35, 15), uint16] */;
    %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %356 = minimum(%334, %335) /* ty=Tensor[(14, 16, 15), uint64] */;
    %357 = %346.1;
    %358 = %351.0;
    %359 = bitwise_xor(%354, %355) /* ty=Tensor[(35, 15), uint16] */;
    (%356, %357, meta[relay.Constant][22] /* ty=Tensor[(2025), float64] */, meta[relay.Constant][23] /* ty=Tensor[(208), float32] */, %var_5753, %var_5754, %358, meta[relay.Constant][25] /* ty=Tensor[(840), bool] */, %359)
  };
  %360(%var_5777, %var_5778, %var_5779, %var_5780) /* ty=(Tensor[(14, 16, 15), uint64], Tensor[(1144), float32], Tensor[(2025), float64], Tensor[(208), float32], Tensor[(12), float64], Tensor[(990), float32], Tensor[(14, 5, 12), bool], Tensor[(840), bool], Tensor[(35, 15), uint16]) */
}

def @func_5928() -> (Tensor[(3, 11, 11), bool], Tensor[(3, 11, 11), float32]) {
  %373 = fn () -> (Tensor[(3, 11, 11), bool], Tensor[(3, 11, 11), float32]) {
    %361 = @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */;
    %362 = %361.0;
    %363 = cast(meta[relay.Constant][26] /* ty=Tensor[(3, 11, 11), float64] */, dtype="bool") /* ty=Tensor[(3, 11, 11), bool] */;
    %364 = shape_of(%362, dtype="int32") /* ty=Tensor[(3), int32] */;
    %365 = cast(%362, dtype="bool") /* ty=Tensor[(3, 11, 11), bool] */;
    %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %367 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 11, 11), float64] */, dtype="float32") /* ty=Tensor[(3, 11, 11), float32] */;
    %368 = shape_of(%362, dtype="int32") /* ty=Tensor[(3), int32] */;
    %369 = cast(%362, dtype="float32") /* ty=Tensor[(3, 11, 11), float32] */;
    %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %371 = not_equal(%365, %366) /* ty=Tensor[(3, 11, 11), bool] */;
    %372 = floor_mod(%369, %370) /* ty=Tensor[(3, 11, 11), float32] */;
    (%371, %372)
  };
  %373() /* ty=(Tensor[(3, 11, 11), bool], Tensor[(3, 11, 11), float32]) */
}

def @func_3950(%var_3949: Tensor[(12, 1), float64]) -> (Tensor[(1, 4, 3), float64], Tensor[(12, 1), float64], Tensor[(5, 6, 7), int64], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64], Tensor[(2, 13, 3), float32]) {
  %398 = fn (%var_3923: Tensor[(12, 1), float64]) -> (Tensor[(1, 4, 3), float64], Tensor[(12, 1), float64], Tensor[(5, 6, 7), int64], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64], Tensor[(2, 13, 3), float32]) {
    %374 = cast(%var_3923, dtype="float64") /* ty=Tensor[(12, 1), float64] */;
    %375 = reshape(%374, newshape=[1, 4, 3]) /* ty=Tensor[(1, 4, 3), float64] */;
    %376 = @func_1337(%375) /* ty=(Tensor[(?, 4, 3), float64], Tensor[(1, 4, 3), float64]) */;
    %377 = cast(meta[relay.Constant][28] /* ty=Tensor[(7), int64] */, dtype="int64") /* ty=Tensor[(7), int64] */;
    %378 = cast(meta[relay.Constant][29] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
    %379 = cast(meta[relay.Constant][30] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
    %380 = reshape(%377, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), int64] */;
    %381 = reshape(%378, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), int64] */;
    %382 = reshape(%379, newshape=[5, 16, 7]) /* ty=Tensor[(5, 16, 7), int64] */;
    %383 = @func_3647(%380, %381, %382) /* ty=(Tensor[(5, 6, 7), int64], Tensor[(5, 16, 7), bool]) */;
    %384 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 13, 3), uint32] */, dtype="float64") /* ty=Tensor[(2, 13, 3), float64] */;
    %385 = sigmoid(%384) /* ty=Tensor[(2, 13, 3), float64] */;
    %386 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 13, 3), uint32] */, dtype="uint32") /* ty=Tensor[(1, 13, 3), uint32] */;
    %387 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 13, 3), uint32] */, dtype="uint32") /* ty=Tensor[(2, 13, 3), uint32] */;
    %388 = bitwise_xor(%386, %387) /* ty=Tensor[(2, 13, 3), uint32] */;
    %389 = cast(%388, dtype="bool") /* ty=Tensor[(2, 13, 3), bool] */;
    %390 = shape_of(%385, dtype="int32") /* ty=Tensor[(3), int32] */;
    %391 = cast(%385, dtype="bool") /* ty=Tensor[(2, 13, 3), bool] */;
    %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %393 = logical_or(%391, %392) /* ty=Tensor[(2, 13, 3), bool] */;
    %394 = cast(%393, dtype="float32") /* ty=Tensor[(2, 13, 3), float32] */;
    %395 = %376.1;
    %396 = %383.0;
    %397 = sqrt(%394) /* ty=Tensor[(2, 13, 3), float32] */;
    (%395, %var_3923, %396, meta[relay.Constant][28] /* ty=Tensor[(7), int64] */, meta[relay.Constant][29] /* ty=Tensor[(210), int64] */, meta[relay.Constant][30] /* ty=Tensor[(560), int64] */, %397)
  };
  %398(%var_3949) /* ty=(Tensor[(1, 4, 3), float64], Tensor[(12, 1), float64], Tensor[(5, 6, 7), int64], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64], Tensor[(2, 13, 3), float32]) */
}

def @func_6828(%var_6825: Tensor[(96), float64], %var_6826: Tensor[(78), float32], %var_6827: Tensor[(882), float64]) -> (Tensor[(8, 10, 16), float64], Tensor[(10, 11, 9), float32], Tensor[(96), float64], Tensor[(2, 3, 13), float32], Tensor[(78), float32], Tensor[(882), float64], Tensor[(1, 16, 15), float64]) {
  @func_6823(%var_6825, %var_6826, %var_6827) /* ty=(Tensor[(8, 10, 16), float64], Tensor[(10, 11, 9), float32], Tensor[(96), float64], Tensor[(2, 3, 13), float32], Tensor[(78), float32], Tensor[(882), float64], Tensor[(1, 16, 15), float64]) */
}

def @func_8356() -> Tensor[(12), float64] {
  %399 = @func_7981() /* ty=(Tensor[(12), float64],) */;
  %399.0
}

def @func_7814(%var_7810: Tensor[(10, 14, 1), float64], %var_7811: Tensor[(10, 14, 16), float64], %var_7812: Tensor[(10, 14, 6), float64], %var_7813: Tensor[(10, 14, 16), bool]) -> (Tensor[(2, 3, 14), float64], Tensor[(10, 14, 6), float32], Tensor[(10, 14, 16), uint32], Tensor[(3, 11, 11), float64], Tensor[(10, 14, ?), float64]) {
  @func_7808(%var_7810, %var_7811, %var_7812, %var_7813) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(10, 14, 6), float32], Tensor[(10, 14, 16), uint32], Tensor[(3, 11, 11), float64], Tensor[(10, 14, ?), float64]) */
}

def @func_7419(%var_7416: Tensor[(10, 16, 15), float32]) -> Tensor[(10, 16, 15), float32] {
  %400 = cast(%var_7416, dtype="float32") /* ty=Tensor[(10, 16, 15), float32] */;
  sqrt(%400) /* ty=Tensor[(10, 16, 15), float32] */
}

def @func_7671(%var_7651: Tensor[(572, 2), float32]) -> (Tensor[(12), float64], Tensor[(3, 11, 11), float64], Tensor[(572, 2), bool]) {
  %401 = @func_6148() /* ty=(Tensor[(12), float64],) */;
  %402 = cast(meta[relay.Constant][33] /* ty=Tensor[(572, 2), float32] */, dtype="float32") /* ty=Tensor[(572, 2), float32] */;
  %403 = reshape(%402, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
  %404 = @func_5969(%403) /* ty=(Tensor[(3, 11, 11), float64], Tensor[(9, 8, 6), float64], Tensor[(1144), float32]) */;
  %405 = cast(%var_7651, dtype="bool") /* ty=Tensor[(572, 2), bool] */;
  %406 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(572, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %407 = cast(meta[relay.Constant][33] /* ty=Tensor[(572, 2), float32] */, dtype="bool") /* ty=Tensor[(572, 2), bool] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %409 = %401.0;
  %410 = %404.0;
  %411 = greater_equal(%407, %408) /* ty=Tensor[(572, 2), bool] */;
  (%409, %410, %411)
}

def @func_6045(%var_6020: Tensor[(196), float32], %var_6035: Tensor[(1568), float64]) -> (Tensor[(3, 11, 11), float64], Tensor[(196), float32], Tensor[(7, 7, 4), float64], Tensor[(104, 2), float32], Tensor[(1568), float64]) {
  %412 = @func_5156() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %413 = cast(%var_6020, dtype="float32") /* ty=Tensor[(196), float32] */;
  %414 = reshape(%413, newshape=[7, 7, 4]) /* ty=Tensor[(7, 7, 4), float32] */;
  %415 = @func_5066(%414) /* ty=(Tensor[(7, 7, 4), float32],) */;
  %416 = %415.0;
  %417 = cast(%416, dtype="float64") /* ty=Tensor[(7, 7, 4), float64] */;
  %418 = cast(%var_6035, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %419 = cast(%var_6035, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %420 = reshape(%418, newshape=[8, 14, 14]) /* ty=Tensor[(8, 14, 14), float64] */;
  %421 = reshape(%419, newshape=[8, 14, 14]) /* ty=Tensor[(8, 14, 14), float64] */;
  %422 = @func_2520(%420, %421) /* ty=(Tensor[(8, 14, 14), float64], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(9, 8, 6), float64]) */;
  %423 = %412.0;
  %424 = exp(%417) /* ty=Tensor[(7, 7, 4), float64] */;
  %425 = %422.2;
  (%423, %var_6020, %424, %425, %var_6035)
}

def @func_7981() -> (Tensor[(12), float64],) {
  %426 = @func_5875() /* ty=(Tensor[(12), float64],) */;
  %427 = %426.0;
  (%427,)
}

def @func_4679(%var_4623: Tensor[(9, 15, 15), float64], %var_4633: Tensor[(208), float32], %var_4645: Tensor[(525), float32], %var_4647: Tensor[(12), float64], %var_4661: Tensor[(990), float32]) -> (Tensor[(9, 15, 15), float64], Tensor[(1144), float32], Tensor[(1144), float32], Tensor[(196), float64], Tensor[(208), float32], Tensor[(1176), float64], Tensor[(525), float32], Tensor[(1176), float64], Tensor[(12), float64], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(12), float64]) {
  %428 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(9, 15, 15), float64] */;
  %429 = shape_of(%var_4623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(%var_4623, dtype="float64") /* ty=Tensor[(9, 15, 15), float64] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %432 = cast(meta[relay.Constant][35] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %433 = cast(meta[relay.Constant][36] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %434 = cast(%var_4633, dtype="float32") /* ty=Tensor[(208), float32] */;
  %435 = cast(meta[relay.Constant][35] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %436 = reshape(%432, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
  %437 = reshape(%433, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float64] */;
  %438 = reshape(%434, newshape=[104, 2]) /* ty=Tensor[(104, 2), float32] */;
  %439 = reshape(%435, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
  %440 = @func_3075(%436, %437, %438, %439) /* ty=(Tensor[(1568), float64], Tensor[(2, 14, 7), float64], Tensor[(1144), float32], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(1144), float64], Tensor[(9, 8, 6), float64]) */;
  %441 = cast(%var_4645, dtype="float32") /* ty=Tensor[(525), float32] */;
  %442 = cast(meta[relay.Constant][37] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %443 = cast(%var_4647, dtype="float64") /* ty=Tensor[(12), float64] */;
  %444 = reshape(%441, newshape=[7, 5, 15]) /* ty=Tensor[(7, 5, 15), float32] */;
  %445 = reshape(%442, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %446 = reshape(%443, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %447 = @func_4077(%444, %445, %446) /* ty=(Tensor[(7, 5, 15), float32], Tensor[(8, 14, 14), float64], Tensor[(1568), float64], Tensor[(7, 5, 15), float64], Tensor[(12), float64], Tensor[(1176), float64], Tensor[(12), float64]) */;
  %448 = cast(%var_4661, dtype="float32") /* ty=Tensor[(990), float32] */;
  %449 = reshape(%448, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float32] */;
  %450 = cast(meta[relay.Constant][37] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %451 = cast(%var_4647, dtype="float64") /* ty=Tensor[(12), float64] */;
  %452 = reshape(%450, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float64] */;
  %453 = reshape(%451, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %454 = @func_3867(%452, %453) /* ty=(Tensor[(6, 14, 14), float64], Tensor[(1, 4, 3), float64], Tensor[(12), float64]) */;
  %455 = power(%430, %431) /* ty=Tensor[(9, 15, 15), float64] */;
  %456 = %440.2;
  %457 = %447.5;
  %458 = @func_273(%449) /* ty=Tensor[(10, 11, 9), float32] */;
  %459 = %454.2;
  (%455, %456, meta[relay.Constant][35] /* ty=Tensor[(1144), float32] */, meta[relay.Constant][36] /* ty=Tensor[(196), float64] */, %var_4633, %457, %var_4645, meta[relay.Constant][37] /* ty=Tensor[(1176), float64] */, %var_4647, %458, %var_4661, %459)
}

def @func_8600(%var_8596: Tensor[(3, 126), uint32]) -> (Tensor[(8, 10, 16), float64], Tensor[(9, 6, 7), uint32], Tensor[(3, 126), uint32], Tensor[(1, 560), int64]) {
  %460 = @func_6140() /* ty=(Tensor[(8, 10, 16), float64],) */;
  %461 = cast(%var_8596, dtype="uint32") /* ty=Tensor[(3, 126), uint32] */;
  %462 = cast(%var_8596, dtype="uint32") /* ty=Tensor[(3, 126), uint32] */;
  %463 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 560), int64] */, dtype="int64") /* ty=Tensor[(1, 560), int64] */;
  %464 = reshape(%461, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
  %465 = reshape(%462, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
  %466 = reshape(%463, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %467 = @func_4240(%464, %465, %466) /* ty=(Tensor[(9, 6, 7), uint32], Tensor[(9, 6, 7), float64], Tensor[(5, 16, 7), bool], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64]) */;
  %468 = %460.0;
  %469 = %467.0;
  (%468, %469, %var_8596, meta[relay.Constant][38] /* ty=Tensor[(1, 560), int64] */)
}

def @func_1337(%var_1321: Tensor[(1, 4, 3), float64]) -> (Tensor[(?, 4, 3), float64], Tensor[(1, 4, 3), float64]) {
  %470 = cast(%var_1321, dtype="float64") /* ty=Tensor[(1, 4, 3), float64] */;
  %471 = cos(%470) /* ty=Tensor[(1, 4, 3), float64] */;
  %472 = cast(%var_1321, dtype="float64") /* ty=Tensor[(1, 4, 3), float64] */;
  %473 = shape_of(%471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%471, dtype="float64") /* ty=Tensor[(1, 4, 3), float64] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %476 = cast(%471, dtype="float64") /* ty=Tensor[(1, 4, 3), float64] */;
  %477 = minimum(%474, %475) /* ty=Tensor[(?, 4, 3), float64] */;
  %478 = rsqrt(%476) /* ty=Tensor[(1, 4, 3), float64] */;
  (%477, %478)
}

def @func_7014(%var_7008: Tensor[(840), bool], %var_7009: Tensor[(432, 1), float64], %var_7010: Tensor[(432, 10), float64], %var_7011: Tensor[(1568), float64], %var_7012: Tensor[(3360), float32], %var_7013: Tensor[(525), float32]) -> (Tensor[(3, 11, 11), float64], Tensor[(14, 5, 12), bool], Tensor[(840), bool], Tensor[(9, 8, 6), float64], Tensor[(3, 11, 11), float64], Tensor[(432, 10), int16], Tensor[(324, 1), float32], Tensor[(324), float32], Tensor[(1568), float64], Tensor[(14, 5, 12), bool], Tensor[(3360), float32], Tensor[(12), float64], Tensor[(5, 198), float32], Tensor[(525), float32]) {
  @func_7006(%var_7008, %var_7009, %var_7010, %var_7011, %var_7012, %var_7013) /* ty=(Tensor[(3, 11, 11), float64], Tensor[(14, 5, 12), bool], Tensor[(840), bool], Tensor[(9, 8, 6), float64], Tensor[(3, 11, 11), float64], Tensor[(432, 10), int16], Tensor[(324, 1), float32], Tensor[(324), float32], Tensor[(1568), float64], Tensor[(14, 5, 12), bool], Tensor[(3360), float32], Tensor[(12), float64], Tensor[(5, 198), float32], Tensor[(525), float32]) */
}

def @func_7844(%var_7829: Tensor[(7), int64]) -> (Tensor[(3, 11, 11), float64], Tensor[(5, 16, 7), bool], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64]) {
  %479 = @func_5729() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(8, 10, 16), float64]) */;
  %480 = cast(%var_7829, dtype="int64") /* ty=Tensor[(7), int64] */;
  %481 = cast(meta[relay.Constant][39] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %482 = cast(meta[relay.Constant][40] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %483 = reshape(%480, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), int64] */;
  %484 = reshape(%481, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), int64] */;
  %485 = reshape(%482, newshape=[5, 16, 7]) /* ty=Tensor[(5, 16, 7), int64] */;
  %486 = @func_3647(%483, %484, %485) /* ty=(Tensor[(5, 6, 7), int64], Tensor[(5, 16, 7), bool]) */;
  %487 = %479.1;
  %488 = %486.1;
  (%487, %488, %var_7829, meta[relay.Constant][39] /* ty=Tensor[(210), int64] */, meta[relay.Constant][40] /* ty=Tensor[(560), int64] */)
}

def @func_5730() -> (Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(8, 10, 16), float64]) {
  %496 = fn () -> (Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(8, 10, 16), float64]) {
    %489 = @func_5156() /* ty=(Tensor[(3, 11, 11), float64],) */;
    %490 = @func_5240() /* ty=Tensor[(3, 11, 11), float64] */;
    %491 = cast(%490, dtype="float64") /* ty=Tensor[(3, 11, 11), float64] */;
    %492 = @func_5142() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */;
    %493 = %489.0;
    %494 = sin(%491) /* ty=Tensor[(3, 11, 11), float64] */;
    %495 = %492.3;
    (%493, %494, %495)
  };
  %496() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(8, 10, 16), float64]) */
}

def @func_6280() -> (Tensor[(12), float64], Tensor[(4, 2, 5), uint8], Tensor[(2, 20), int16], Tensor[(3, 11, 11), float64]) {
  %497 = @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */;
  %498 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 20), int16] */, dtype="int16") /* ty=Tensor[(2, 20), int16] */;
  %499 = reshape(%498, newshape=[4, 2, 5]) /* ty=Tensor[(4, 2, 5), int16] */;
  %500 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %501 = %497.2;
  %502 = @func_3727(%499) /* ty=Tensor[(4, 2, 5), uint8] */;
  %503 = %500.0;
  (%501, %502, meta[relay.Constant][41] /* ty=Tensor[(2, 20), int16] */, %503)
}

def @func_7385(%var_7337: Tensor[(1144), float32]) -> (Tensor[(3, 11, 11), float64], Tensor[(1568), float64], Tensor[(1144), float32], Tensor[(3, 11, 11), float64], Tensor[(2, 3, 14), float64]) {
  %504 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %505 = cast(%var_7337, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %506 = cast(%var_7337, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %507 = cast(%var_7337, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %508 = reshape(%505, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %509 = reshape(%506, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %510 = reshape(%507, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %511 = @func_2585(%508, %509, %510) /* ty=(Tensor[(11, 13, 8), bool], Tensor[(11, 13, 8), int8], Tensor[(9, 8, 6), float64], Tensor[(1568), float64]) */;
  %512 = @func_6389() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(2, 3, 14), float64]) */;
  %513 = %504.0;
  %514 = %511.3;
  %515 = @func_6187() /* ty=Tensor[(3, 11, 11), float64] */;
  %516 = %512.0;
  (%513, %514, %var_7337, %515, %516)
}

def @func_6761() -> Tensor[(12), float64] {
  %518 = fn () -> Tensor[(12), float64] {
    %517 = @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */;
    %517.2
  };
  %518() /* ty=Tensor[(12), float64] */
}

def @func_7088(%var_7072: Tensor[(10, 13, 2), float64], %var_7081: Tensor[(990), float32], %var_7082: Tensor[(525), float32]) -> (Tensor[(10, 13, 2), float64], Tensor[(14, 16, 15), uint64], Tensor[(3360), float32], Tensor[(12), float64], Tensor[(990), float32], Tensor[(525), float32]) {
  %519 = cast(%var_7072, dtype="float64") /* ty=Tensor[(10, 13, 2), float64] */;
  %520 = cast(meta[relay.Constant][42] /* ty=Tensor[(3360), float32] */, dtype="float32") /* ty=Tensor[(3360), float32] */;
  %521 = cast(meta[relay.Constant][43] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %522 = cast(%var_7081, dtype="float32") /* ty=Tensor[(990), float32] */;
  %523 = cast(%var_7082, dtype="float32") /* ty=Tensor[(525), float32] */;
  %524 = reshape(%520, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float32] */;
  %525 = reshape(%521, newshape=[12]) /* ty=Tensor[(12), float64] */;
  %526 = reshape(%522, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %527 = reshape(%523, newshape=[35, 15]) /* ty=Tensor[(35, 15), float32] */;
  %528 = @func_5776(%524, %525, %526, %527) /* ty=(Tensor[(14, 16, 15), uint64], Tensor[(1144), float32], Tensor[(2025), float64], Tensor[(208), float32], Tensor[(12), float64], Tensor[(990), float32], Tensor[(14, 5, 12), bool], Tensor[(840), bool], Tensor[(35, 15), uint16]) */;
  %529 = sin(%519) /* ty=Tensor[(10, 13, 2), float64] */;
  %530 = %528.0;
  (%529, %530, meta[relay.Constant][42] /* ty=Tensor[(3360), float32] */, meta[relay.Constant][43] /* ty=Tensor[(12), float64] */, %var_7081, %var_7082)
}

def @func_3080(%var_3076: Tensor[(1144), float32], %var_3077: Tensor[(2, 14, 7), float64], %var_3078: Tensor[(104, 2), float32], %var_3079: Tensor[(1144), float32]) -> (Tensor[(1568), float64], Tensor[(2, 14, 7), float64], Tensor[(1144), float32], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(1144), float64], Tensor[(9, 8, 6), float64]) {
  %567 = fn (%var_3014: Tensor[(1144), float32], %var_3023: Tensor[(2, 14, 7), float64], %var_3039: Tensor[(104, 2), float32], %var_3043: Tensor[(1144), float32]) -> (Tensor[(1568), float64], Tensor[(2, 14, 7), float64], Tensor[(1144), float32], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(1144), float64], Tensor[(9, 8, 6), float64]) {
    %531 = cast(%var_3014, dtype="float32") /* ty=Tensor[(1144), float32] */;
    %532 = cast(%var_3014, dtype="float32") /* ty=Tensor[(1144), float32] */;
    %533 = cast(%var_3014, dtype="float32") /* ty=Tensor[(1144), float32] */;
    %534 = reshape(%531, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
    %535 = reshape(%532, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
    %536 = reshape(%533, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
    %537 = @func_2585(%534, %535, %536) /* ty=(Tensor[(11, 13, 8), bool], Tensor[(11, 13, 8), int8], Tensor[(9, 8, 6), float64], Tensor[(1568), float64]) */;
    %538 = cast(meta[relay.Constant][44] /* ty=Tensor[(2, 14, 7), float64] */, dtype="float64") /* ty=Tensor[(2, 14, 7), float64] */;
    %539 = sin(%538) /* ty=Tensor[(2, 14, 7), float64] */;
    %540 = cast(%var_3023, dtype="float64") /* ty=Tensor[(2, 14, 7), float64] */;
    %541 = shape_of(%539, dtype="int32") /* ty=Tensor[(3), int32] */;
    %542 = cast(%539, dtype="float64") /* ty=Tensor[(2, 14, 7), float64] */;
    %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %544 = cast(%var_3014, dtype="float32") /* ty=Tensor[(1144), float32] */;
    %545 = cast(%var_3039, dtype="float32") /* ty=Tensor[(104, 2), float32] */;
    %546 = reshape(%545, newshape=[13, 4, 4]) /* ty=Tensor[(13, 4, 4), float32] */;
    %547 = @func_1804(%546) /* ty=(Tensor[(13, 4, 4), float32], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(13, 4, 4), float64], Tensor[(9, 8, 6), float64]) */;
    %548 = cast(%var_3043, dtype="bool") /* ty=Tensor[(1144), bool] */;
    %549 = shape_of(%var_3014, dtype="int32") /* ty=Tensor[(1), int32] */;
    %550 = cast(%var_3014, dtype="bool") /* ty=Tensor[(1144), bool] */;
    %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?), bool] */;
    %552 = less_equal(%550, %551) /* ty=Tensor[(1144), bool] */;
    %553 = cast(%552, dtype="float64") /* ty=Tensor[(1144), float64] */;
    %554 = cast(%var_3043, dtype="float32") /* ty=Tensor[(1144), float32] */;
    %555 = cast(%552, dtype="float32") /* ty=Tensor[(1144), float32] */;
    %556 = cast(%var_3014, dtype="float32") /* ty=Tensor[(1144), float32] */;
    %557 = reshape(%554, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
    %558 = reshape(%555, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
    %559 = reshape(%556, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
    %560 = @func_2585(%557, %558, %559) /* ty=(Tensor[(11, 13, 8), bool], Tensor[(11, 13, 8), int8], Tensor[(9, 8, 6), float64], Tensor[(1568), float64]) */;
    %561 = %537.3;
    %562 = power(%542, %543) /* ty=Tensor[(2, 14, 7), float64] */;
    %563 = acos(%544) /* ty=Tensor[(1144), float32] */;
    %564 = %547.4;
    %565 = asin(%553) /* ty=Tensor[(1144), float64] */;
    %566 = %560.2;
    (%561, %562, %563, %564, %var_3039, %565, %566)
  };
  %567(%var_3076, %var_3077, %var_3078, %var_3079) /* ty=(Tensor[(1568), float64], Tensor[(2, 14, 7), float64], Tensor[(1144), float32], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(1144), float64], Tensor[(9, 8, 6), float64]) */
}

def @func_5972(%var_5970: Tensor[(1144), float32]) -> (Tensor[(3, 11, 11), float64], Tensor[(9, 8, 6), float64], Tensor[(1144), float32]) {
  @func_5969(%var_5970) /* ty=(Tensor[(3, 11, 11), float64], Tensor[(9, 8, 6), float64], Tensor[(1144), float32]) */
}

def @func_8102() -> (Tensor[(1, 4, 3), float64],) {
  @func_8100() /* ty=(Tensor[(1, 4, 3), float64],) */
}

def @func_8840() -> Tensor[(5, 9, 11), float32] {
  %568 = @func_7552() /* ty=(Tensor[(12), float64], Tensor[(5, 9, 11), float32], Tensor[(1, 495), bool]) */;
  %568.1
}

def @func_7983() -> (Tensor[(12), float64],) {
  @func_7981() /* ty=(Tensor[(12), float64],) */
}

def @func_5598(%var_5549: Tensor[(378), uint32], %var_5577: Tensor[(5, 198), float32]) -> (Tensor[(1, 16, 15), float32], Tensor[(378), uint32], Tensor[(40, 14), float32], Tensor[(10, 11, 9), float32], Tensor[(5, 198), float32], Tensor[(3, 11, 11), float64], Tensor[(7, 7, 4), float32], Tensor[(196, 1), float32]) {
  %569 = @func_5142() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */;
  %570 = cast(%var_5549, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %571 = cast(%var_5549, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %572 = cast(meta[relay.Constant][45] /* ty=Tensor[(40, 14), int64] */, dtype="int64") /* ty=Tensor[(40, 14), int64] */;
  %573 = reshape(%570, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
  %574 = reshape(%571, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
  %575 = reshape(%572, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %576 = @func_4240(%573, %574, %575) /* ty=(Tensor[(9, 6, 7), uint32], Tensor[(9, 6, 7), float64], Tensor[(5, 16, 7), bool], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64]) */;
  %577 = %576.5;
  %578 = cast(%577, dtype="float32") /* ty=Tensor[(560), float32] */;
  %579 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(40, 14), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %580 = cast(meta[relay.Constant][45] /* ty=Tensor[(40, 14), int64] */, dtype="float32") /* ty=Tensor[(40, 14), float32] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %582 = cast(%var_5577, dtype="float32") /* ty=Tensor[(5, 198), float32] */;
  %583 = reshape(%582, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float32] */;
  %584 = @func_5092() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %585 = cast(meta[relay.Constant][46] /* ty=Tensor[(196, 1), float32] */, dtype="float32") /* ty=Tensor[(196, 1), float32] */;
  %586 = reshape(%585, newshape=[7, 7, 4]) /* ty=Tensor[(7, 7, 4), float32] */;
  %587 = @func_5066(%586) /* ty=(Tensor[(7, 7, 4), float32],) */;
  %588 = %569.1;
  %589 = floor_mod(%580, %581) /* ty=Tensor[(40, 14), float32] */;
  %590 = @func_273(%583) /* ty=Tensor[(10, 11, 9), float32] */;
  %591 = %584.0;
  %592 = %587.0;
  (%588, %var_5549, %589, %590, %var_5577, %591, %592, meta[relay.Constant][46] /* ty=Tensor[(196, 1), float32] */)
}

def @func_273(%var_242: Tensor[(10, 11, 9), float32]) -> Tensor[(10, 11, 9), float32] {
  %593 = cast(%var_242, dtype="float32") /* ty=Tensor[(10, 11, 9), float32] */;
  sinh(%593) /* ty=Tensor[(10, 11, 9), float32] */
}

def @func_5056(%var_5055: Tensor[(1, 8, 16), uint8]) -> Tensor[(9, 8, 16), uint8] {
  %596 = fn (%var_5049: Tensor[(1, 8, 16), uint8]) -> Tensor[(9, 8, 16), uint8] {
    %594 = cast(%var_5049, dtype="uint8") /* ty=Tensor[(1, 8, 16), uint8] */;
    %595 = cast(meta[relay.Constant][47] /* ty=Tensor[(9, 8, 16), uint8] */, dtype="uint8") /* ty=Tensor[(9, 8, 16), uint8] */;
    logical_xor(%594, %595) /* ty=Tensor[(9, 8, 16), uint8] */
  };
  %596(%var_5055) /* ty=Tensor[(9, 8, 16), uint8] */
}

def @func_5502() -> Tensor[(1, 16, 15), float32] {
  %597 = @func_5142() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */;
  %597.1
}

def @func_5143() -> (Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) {
  %607 = fn () -> (Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) {
    %598 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 16, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 16, 15), float32] */;
    %599 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 16, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 16, 15), float32] */;
    %600 = cast(meta[relay.Constant][49] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
    %601 = reshape(%600, newshape=[8, 10, 16]) /* ty=Tensor[(8, 10, 16), float64] */;
    %602 = @func_4732(%601) /* ty=Tensor[(8, 10, 16), bool] */;
    %603 = cast(%602, dtype="float64") /* ty=Tensor[(8, 10, 16), float64] */;
    %604 = log2(%598) /* ty=Tensor[(1, 16, 15), float32] */;
    %605 = sqrt(%599) /* ty=Tensor[(1, 16, 15), float32] */;
    %606 = atanh(%603) /* ty=Tensor[(8, 10, 16), float64] */;
    (%604, %605, meta[relay.Constant][49] /* ty=Tensor[(1280), float64] */, %606)
  };
  %607() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */
}

def @func_5033() -> (Tensor[(3, 11, 11), float64],) {
  @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */
}

def @func_2585(%var_2560: Tensor[(11, 13, 8), float32], %var_2561: Tensor[(11, 13, 8), float32], %var_2565: Tensor[(11, 13, 8), float32]) -> (Tensor[(11, 13, 8), bool], Tensor[(11, 13, 8), int8], Tensor[(9, 8, 6), float64], Tensor[(1568), float64]) {
  %608 = cast(%var_2561, dtype="bool") /* ty=Tensor[(11, 13, 8), bool] */;
  %609 = shape_of(%var_2560, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(%var_2560, dtype="bool") /* ty=Tensor[(11, 13, 8), bool] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %612 = cast(%var_2565, dtype="int8") /* ty=Tensor[(11, 13, 8), int8] */;
  %613 = shape_of(%var_2561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(%var_2561, dtype="int8") /* ty=Tensor[(11, 13, 8), int8] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %616 = cast(meta[relay.Constant][50] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %617 = cast(meta[relay.Constant][50] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %618 = reshape(%616, newshape=[8, 14, 14]) /* ty=Tensor[(8, 14, 14), float64] */;
  %619 = reshape(%617, newshape=[8, 14, 14]) /* ty=Tensor[(8, 14, 14), float64] */;
  %620 = @func_2520(%618, %619) /* ty=(Tensor[(8, 14, 14), float64], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(9, 8, 6), float64]) */;
  %621 = equal(%610, %611) /* ty=Tensor[(11, 13, 8), bool] */;
  %622 = multiply(%614, %615) /* ty=Tensor[(11, 13, 8), int8] */;
  %623 = %620.3;
  (%621, %622, %623, meta[relay.Constant][50] /* ty=Tensor[(1568), float64] */)
}

def @func_3474(%var_3472: Tensor[(2, 3, 13), float32], %var_3473: Tensor[(882), float64]) -> (Tensor[(2, 3, 13), float32], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(990), float32], Tensor[(630), float64], Tensor[(882), float64]) {
  %638 = fn (%var_3447: Tensor[(2, 3, 13), float32], %var_3465: Tensor[(882), float64]) -> (Tensor[(2, 3, 13), float32], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(990), float32], Tensor[(630), float64], Tensor[(882), float64]) {
    %624 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 3, 13), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 13), float32] */;
    %625 = shape_of(%var_3447, dtype="int32") /* ty=Tensor[(3), int32] */;
    %626 = cast(%var_3447, dtype="float32") /* ty=Tensor[(2, 3, 13), float32] */;
    %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %628 = cast(meta[relay.Constant][52] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
    %629 = reshape(%628, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float32] */;
    %630 = cast(meta[relay.Constant][53] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
    %631 = cast(%var_3465, dtype="float64") /* ty=Tensor[(882), float64] */;
    %632 = reshape(%630, newshape=[10, 7, 9]) /* ty=Tensor[(10, 7, 9), float64] */;
    %633 = reshape(%631, newshape=[882]) /* ty=Tensor[(882), float64] */;
    %634 = @func_388(%632, %633) /* ty=(Tensor[(10, 7, 9), float64], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(9, 7, 14), uint64], Tensor[(882), float64]) */;
    %635 = divide(%626, %627) /* ty=Tensor[(2, 3, 13), float32] */;
    %636 = @func_273(%629) /* ty=Tensor[(10, 11, 9), float32] */;
    %637 = %634.2;
    (%635, %636, meta[relay.Constant][52] /* ty=Tensor[(990), float32] */, %637, meta[relay.Constant][53] /* ty=Tensor[(630), float64] */, %var_3465)
  };
  %638(%var_3472, %var_3473) /* ty=(Tensor[(2, 3, 13), float32], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(990), float32], Tensor[(630), float64], Tensor[(882), float64]) */
}

def @func_7422(%var_7420: Tensor[(10, 16, 15), float32]) -> Tensor[(10, 16, 15), float32] {
  @func_7419(%var_7420) /* ty=Tensor[(10, 16, 15), float32] */
}

def @func_5361(%var_5359: Tensor[(324, 1), float32], %var_5360: Tensor[(784, 2), float64]) -> (Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(6, 6, 9), float32], Tensor[(324, 1), float32], Tensor[(630), float64], Tensor[(7, 126), float64], Tensor[(9, 8, 6), float64], Tensor[(784, 2), float64]) {
  %657 = fn (%var_5343: Tensor[(324, 1), float32], %var_5356: Tensor[(784, 2), float64]) -> (Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(6, 6, 9), float32], Tensor[(324, 1), float32], Tensor[(630), float64], Tensor[(7, 126), float64], Tensor[(9, 8, 6), float64], Tensor[(784, 2), float64]) {
    %639 = @func_5092() /* ty=(Tensor[(3, 11, 11), float64],) */;
    %640 = @func_5156() /* ty=(Tensor[(3, 11, 11), float64],) */;
    %641 = cast(%var_5343, dtype="float32") /* ty=Tensor[(324, 1), float32] */;
    %642 = cast(meta[relay.Constant][54] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
    %643 = cast(meta[relay.Constant][55] /* ty=Tensor[(7, 126), float64] */, dtype="float64") /* ty=Tensor[(7, 126), float64] */;
    %644 = reshape(%641, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
    %645 = reshape(%642, newshape=[630]) /* ty=Tensor[(630), float64] */;
    %646 = reshape(%643, newshape=[882]) /* ty=Tensor[(882), float64] */;
    %647 = @func_4432(%644, %645, %646) /* ty=(Tensor[(6, 6, 9), float32], Tensor[(9, 7, 14), uint64], Tensor[(630), float64], Tensor[(882), float64]) */;
    %648 = cast(%var_5356, dtype="float64") /* ty=Tensor[(784, 2), float64] */;
    %649 = cast(%var_5356, dtype="float64") /* ty=Tensor[(784, 2), float64] */;
    %650 = reshape(%648, newshape=[8, 14, 14]) /* ty=Tensor[(8, 14, 14), float64] */;
    %651 = reshape(%649, newshape=[8, 14, 14]) /* ty=Tensor[(8, 14, 14), float64] */;
    %652 = @func_2520(%650, %651) /* ty=(Tensor[(8, 14, 14), float64], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(9, 8, 6), float64]) */;
    %653 = %639.0;
    %654 = %640.0;
    %655 = %647.0;
    %656 = %652.1;
    (%653, %654, %655, %var_5343, meta[relay.Constant][54] /* ty=Tensor[(630), float64] */, meta[relay.Constant][55] /* ty=Tensor[(7, 126), float64] */, %656, %var_5356)
  };
  %657(%var_5359, %var_5360) /* ty=(Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(6, 6, 9), float32], Tensor[(324, 1), float32], Tensor[(630), float64], Tensor[(7, 126), float64], Tensor[(9, 8, 6), float64], Tensor[(784, 2), float64]) */
}

def @func_8180() -> (Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64]) {
  %662 = fn () -> (Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64]) {
    %658 = @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */;
    %659 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
    %660 = %658.0;
    %661 = %659.0;
    (%660, %661)
  };
  %662() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64]) */
}

def @func_335(%var_333: Tensor[(9, 7, 14), float64]) -> Tensor[(9, 7, 14), uint64] {
  @func_332(%var_333) /* ty=Tensor[(9, 7, 14), uint64] */
}

def @func_6482() -> Tensor[(3, 11, 11), float32] {
  %663 = @func_5927() /* ty=(Tensor[(3, 11, 11), bool], Tensor[(3, 11, 11), float32]) */;
  %663.1
}

def @func_7524() -> (Tensor[(8, 10, 16), float64],) {
  %666 = fn () -> (Tensor[(8, 10, 16), float64],) {
    %664 = @func_7128() /* ty=(Tensor[(8, 10, 16), float64],) */;
    %665 = %664.0;
    (%665,)
  };
  %666() /* ty=(Tensor[(8, 10, 16), float64],) */
}

def @func_7388(%var_7386: Tensor[(1144), float32]) -> (Tensor[(3, 11, 11), float64], Tensor[(1568), float64], Tensor[(1144), float32], Tensor[(3, 11, 11), float64], Tensor[(2, 3, 14), float64]) {
  @func_7385(%var_7386) /* ty=(Tensor[(3, 11, 11), float64], Tensor[(1568), float64], Tensor[(1144), float32], Tensor[(3, 11, 11), float64], Tensor[(2, 3, 14), float64]) */
}

def @func_5241() -> Tensor[(3, 11, 11), float64] {
  %668 = fn () -> Tensor[(3, 11, 11), float64] {
    %667 = @func_5092() /* ty=(Tensor[(3, 11, 11), float64],) */;
    %667.0
  };
  %668() /* ty=Tensor[(3, 11, 11), float64] */
}

def @func_8414() -> Tensor[(12), float64] {
  %669 = fn () -> Tensor[(12), float64] {
    @func_6760() /* ty=Tensor[(12), float64] */
  };
  %669() /* ty=Tensor[(12), float64] */
}

def @func_8717() -> Tensor[(3, 11, 11), float64] {
  %671 = fn () -> Tensor[(3, 11, 11), float64] {
    %670 = @func_5156() /* ty=(Tensor[(3, 11, 11), float64],) */;
    %670.0
  };
  %671() /* ty=Tensor[(3, 11, 11), float64] */
}

def @func_4175(%var_4095: Tensor[(8, 2, 7), uint32], %var_4101: Tensor[(8, 2, 7), uint32], %var_4126: Tensor[(40), int16], %var_4130: Tensor[(78), float32], %var_4131: Tensor[(882), float64], %var_4145: Tensor[(432), float64]) -> (Tensor[(8, 2, 7), uint32], Tensor[(4, 2, 5), uint8], Tensor[(40), int16], Tensor[(630), float64], Tensor[(78), float32], Tensor[(882), float64], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(9, 8, 6), float64], Tensor[(8, 2, 7), float32], Tensor[(9, 8, 6), float64], Tensor[(1144), float32]) {
  %672 = cast(meta[relay.Constant][56] /* ty=Tensor[(8, 2, 1), uint32] */, dtype="uint32") /* ty=Tensor[(8, 2, 1), uint32] */;
  %673 = cast(%var_4095, dtype="uint32") /* ty=Tensor[(8, 2, 7), uint32] */;
  %674 = cast(%var_4126, dtype="int16") /* ty=Tensor[(40), int16] */;
  %675 = reshape(%674, newshape=[4, 2, 5]) /* ty=Tensor[(4, 2, 5), int16] */;
  %676 = cast(%var_4130, dtype="float32") /* ty=Tensor[(78), float32] */;
  %677 = cast(%var_4131, dtype="float64") /* ty=Tensor[(882), float64] */;
  %678 = reshape(%676, newshape=[2, 3, 13]) /* ty=Tensor[(2, 3, 13), float32] */;
  %679 = reshape(%677, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %680 = @func_3471(%678, %679) /* ty=(Tensor[(2, 3, 13), float32], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(990), float32], Tensor[(630), float64], Tensor[(882), float64]) */;
  %681 = cast(%var_4145, dtype="float64") /* ty=Tensor[(432), float64] */;
  %682 = reshape(%681, newshape=[9, 8, 6]) /* ty=Tensor[(9, 8, 6), float64] */;
  %683 = @func_1047(%682) /* ty=(Tensor[(9, 8, 6), float64],) */;
  %684 = %683.0;
  %685 = cast(%684, dtype="float64") /* ty=Tensor[(9, 8, 6), float64] */;
  %686 = reshape(%685, newshape=[9, 8, 6]) /* ty=Tensor[(9, 8, 6), float64] */;
  %687 = @func_1047(%686) /* ty=(Tensor[(9, 8, 6), float64],) */;
  %688 = cast(%var_4101, dtype="float64") /* ty=Tensor[(8, 2, 7), float64] */;
  %689 = atanh(%688) /* ty=Tensor[(8, 2, 7), float64] */;
  %690 = cast(%var_4101, dtype="bool") /* ty=Tensor[(8, 2, 7), bool] */;
  %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%689, dtype="bool") /* ty=Tensor[(8, 2, 7), bool] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %694 = not_equal(%692, %693) /* ty=Tensor[(8, 2, 7), bool] */;
  %695 = cast(%694, dtype="float32") /* ty=Tensor[(8, 2, 7), float32] */;
  %696 = log2(%695) /* ty=Tensor[(8, 2, 7), float32] */;
  %697 = cast(%694, dtype="bool") /* ty=Tensor[(8, 2, 7), bool] */;
  %698 = shape_of(%696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %699 = cast(%696, dtype="bool") /* ty=Tensor[(8, 2, 7), bool] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %701 = less(%699, %700) /* ty=Tensor[(8, 2, 7), bool] */;
  %702 = cast(meta[relay.Constant][56] /* ty=Tensor[(8, 2, 1), uint32] */, dtype="float64") /* ty=Tensor[(8, 2, 1), float64] */;
  %703 = cast(%var_4101, dtype="float64") /* ty=Tensor[(8, 2, 7), float64] */;
  %704 = floor_divide(%702, %703) /* ty=Tensor[(8, 2, 7), float64] */;
  %705 = cast(%704, dtype="float32") /* ty=Tensor[(8, 2, 7), float32] */;
  %706 = shape_of(%701, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(%701, dtype="float32") /* ty=Tensor[(8, 2, 7), float32] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %709 = cast(meta[relay.Constant][57] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %710 = cast(meta[relay.Constant][57] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %711 = cast(meta[relay.Constant][57] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %712 = reshape(%709, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %713 = reshape(%710, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %714 = reshape(%711, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float32] */;
  %715 = @func_2585(%712, %713, %714) /* ty=(Tensor[(11, 13, 8), bool], Tensor[(11, 13, 8), int8], Tensor[(9, 8, 6), float64], Tensor[(1568), float64]) */;
  %716 = right_shift(%672, %673) /* ty=Tensor[(8, 2, 7), uint32] */;
  %717 = @func_3727(%675) /* ty=Tensor[(4, 2, 5), uint8] */;
  %718 = %680.4;
  %719 = %687.0;
  %720 = mod(%707, %708) /* ty=Tensor[(8, 2, 7), float32] */;
  %721 = %715.2;
  (%716, %717, %var_4126, %718, %var_4130, %var_4131, %684, %var_4145, %719, %720, %721, meta[relay.Constant][57] /* ty=Tensor[(1144), float32] */)
}

def @func_332(%var_300: Tensor[(9, 7, 14), float64]) -> Tensor[(9, 7, 14), uint64] {
  %722 = cast(%var_300, dtype="float64") /* ty=Tensor[(9, 7, 14), float64] */;
  %723 = cosh(%722) /* ty=Tensor[(9, 7, 14), float64] */;
  %724 = cast(%var_300, dtype="uint8") /* ty=Tensor[(9, 7, 14), uint8] */;
  %725 = shape_of(%723, dtype="int32") /* ty=Tensor[(3), int32] */;
  %726 = cast(%723, dtype="uint8") /* ty=Tensor[(9, 7, 14), uint8] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %728 = left_shift(%726, %727) /* ty=Tensor[(9, 7, 14), uint8] */;
  %729 = cast(%723, dtype="uint64") /* ty=Tensor[(9, 7, 14), uint64] */;
  %730 = shape_of(%728, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(%728, dtype="uint64") /* ty=Tensor[(9, 7, 14), uint64] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%731, %732) /* ty=Tensor[(9, 7, 14), uint64] */
}

def @func_8796(%var_8795: Tensor[(882), float64]) -> (Tensor[(2, 3, 14), float64], Tensor[(8, 10, 16), bool], Tensor[(1280), float64], Tensor[(1, 16, 15), float32], Tensor[(882), bool], Tensor[(8, 6, 12), bool], Tensor[(576), bool]) {
  %752 = fn (%var_8776: Tensor[(882), float64]) -> (Tensor[(2, 3, 14), float64], Tensor[(8, 10, 16), bool], Tensor[(1280), float64], Tensor[(1, 16, 15), float32], Tensor[(882), bool], Tensor[(8, 6, 12), bool], Tensor[(576), bool]) {
    %733 = cast(meta[relay.Constant][58] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
    %734 = reshape(%733, newshape=[8, 10, 16]) /* ty=Tensor[(8, 10, 16), float64] */;
    %735 = cast(%var_8776, dtype="float64") /* ty=Tensor[(882), float64] */;
    %736 = reshape(%735, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float64] */;
    %737 = @func_332(%736) /* ty=Tensor[(9, 7, 14), uint64] */;
    %738 = cast(%737, dtype="bool") /* ty=Tensor[(9, 7, 14), bool] */;
    %739 = shape_of(%var_8776, dtype="int32") /* ty=Tensor[(1), int32] */;
    %740 = cast(%var_8776, dtype="bool") /* ty=Tensor[(882), bool] */;
    %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?), bool] */;
    %742 = cast(meta[relay.Constant][59] /* ty=Tensor[(576), bool] */, dtype="bool") /* ty=Tensor[(576), bool] */;
    %743 = less(%740, %741) /* ty=Tensor[(882), bool] */;
    %744 = cast(%743, dtype="float64") /* ty=Tensor[(882), float64] */;
    %745 = reshape(%742, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), bool] */;
    %746 = reshape(%744, newshape=[882]) /* ty=Tensor[(882), float64] */;
    %747 = @func_3180(%745, %746) /* ty=(Tensor[(8, 6, 12), bool], Tensor[(9, 7, 14), uint64], Tensor[(882), float64]) */;
    %748 = @func_6936() /* ty=Tensor[(2, 3, 14), float64] */;
    %749 = @func_4732(%734) /* ty=Tensor[(8, 10, 16), bool] */;
    %750 = @func_5502() /* ty=Tensor[(1, 16, 15), float32] */;
    %751 = %747.0;
    (%748, %749, meta[relay.Constant][58] /* ty=Tensor[(1280), float64] */, %750, %743, %751, meta[relay.Constant][59] /* ty=Tensor[(576), bool] */)
  };
  %752(%var_8795) /* ty=(Tensor[(2, 3, 14), float64], Tensor[(8, 10, 16), bool], Tensor[(1280), float64], Tensor[(1, 16, 15), float32], Tensor[(882), bool], Tensor[(8, 6, 12), bool], Tensor[(576), bool]) */
}

def @func_5226(%var_5224: Tensor[(7, 4, 8), uint16], %var_5225: Tensor[(7, 4, 8), uint16]) -> (Tensor[(3, 11, 11), float64], Tensor[(7, 4, 8), float64], Tensor[(1, 16, 15), float32]) {
  %767 = fn (%var_5176: Tensor[(7, 4, 8), uint16], %var_5177: Tensor[(7, 4, 8), uint16]) -> (Tensor[(3, 11, 11), float64], Tensor[(7, 4, 8), float64], Tensor[(1, 16, 15), float32]) {
    %753 = @func_5092() /* ty=(Tensor[(3, 11, 11), float64],) */;
    %754 = cast(%var_5177, dtype="bool") /* ty=Tensor[(7, 4, 8), bool] */;
    %755 = shape_of(%var_5176, dtype="int32") /* ty=Tensor[(3), int32] */;
    %756 = cast(%var_5176, dtype="bool") /* ty=Tensor[(7, 4, 8), bool] */;
    %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %758 = less_equal(%756, %757) /* ty=Tensor[(7, 4, 8), bool] */;
    %759 = cast(%var_5176, dtype="float64") /* ty=Tensor[(7, 4, 8), float64] */;
    %760 = shape_of(%758, dtype="int32") /* ty=Tensor[(3), int32] */;
    %761 = cast(%758, dtype="float64") /* ty=Tensor[(7, 4, 8), float64] */;
    %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %763 = @func_5142() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */;
    %764 = %753.0;
    %765 = floor_divide(%761, %762) /* ty=Tensor[(7, 4, 8), float64] */;
    %766 = %763.0;
    (%764, %765, %766)
  };
  %767(%var_5224, %var_5225) /* ty=(Tensor[(3, 11, 11), float64], Tensor[(7, 4, 8), float64], Tensor[(1, 16, 15), float32]) */
}

def @func_4355(%var_4340: Tensor[(8, 4, 6), float32]) -> (Tensor[(8, 4, 6), float32], Tensor[(9, 8, 6), float64], Tensor[(208), float32]) {
  %768 = cast(%var_4340, dtype="float32") /* ty=Tensor[(8, 4, 6), float32] */;
  %769 = cast(meta[relay.Constant][60] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %770 = reshape(%769, newshape=[13, 4, 4]) /* ty=Tensor[(13, 4, 4), float32] */;
  %771 = @func_1804(%770) /* ty=(Tensor[(13, 4, 4), float32], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(13, 4, 4), float64], Tensor[(9, 8, 6), float64]) */;
  %772 = asin(%768) /* ty=Tensor[(8, 4, 6), float32] */;
  %773 = %771.1;
  (%772, %773, meta[relay.Constant][60] /* ty=Tensor[(208), float32] */)
}

def @func_4734(%var_4733: Tensor[(8, 10, 16), float64]) -> Tensor[(8, 10, 16), bool] {
  %778 = fn (%var_4721: Tensor[(8, 10, 16), float64]) -> Tensor[(8, 10, 16), bool] {
    %774 = cast(meta[relay.Constant][61] /* ty=Tensor[(8, 10, 16), float64] */, dtype="bool") /* ty=Tensor[(8, 10, 16), bool] */;
    %775 = shape_of(%var_4721, dtype="int32") /* ty=Tensor[(3), int32] */;
    %776 = cast(%var_4721, dtype="bool") /* ty=Tensor[(8, 10, 16), bool] */;
    %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%776, %777) /* ty=Tensor[(8, 10, 16), bool] */
  };
  %778(%var_4733) /* ty=Tensor[(8, 10, 16), bool] */
}

def @func_6329() -> Tensor[(8, 10, 16), float64] {
  %780 = fn () -> Tensor[(8, 10, 16), float64] {
    %779 = @func_5729() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(8, 10, 16), float64]) */;
    %779.2
  };
  %780() /* ty=Tensor[(8, 10, 16), float64] */
}

def @func_8897(%var_8895: Tensor[(15, 7, 4), uint16], %var_8896: Tensor[(15, 7, 4), uint16]) -> (Tensor[(15, 7, 4), uint16], Tensor[(15, 7, 4), float64]) {
  %788 = fn (%var_8864: Tensor[(15, 7, 4), uint16], %var_8865: Tensor[(15, 7, 4), uint16]) -> (Tensor[(15, 7, 4), uint16], Tensor[(15, 7, 4), float64]) {
    %781 = cast(%var_8865, dtype="uint16") /* ty=Tensor[(15, 7, 4), uint16] */;
    %782 = shape_of(%var_8864, dtype="int32") /* ty=Tensor[(3), int32] */;
    %783 = cast(%var_8864, dtype="uint16") /* ty=Tensor[(15, 7, 4), uint16] */;
    %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %785 = cast(%var_8864, dtype="float64") /* ty=Tensor[(15, 7, 4), float64] */;
    %786 = subtract(%783, %784) /* ty=Tensor[(15, 7, 4), uint16] */;
    %787 = atanh(%785) /* ty=Tensor[(15, 7, 4), float64] */;
    (%786, %787)
  };
  %788(%var_8895, %var_8896) /* ty=(Tensor[(15, 7, 4), uint16], Tensor[(15, 7, 4), float64]) */
}

def @func_8011() -> Tensor[(2, 3, 14), float64] {
  %789 = @func_6389() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(2, 3, 14), float64]) */;
  %789.0
}

def @func_7128() -> (Tensor[(8, 10, 16), float64],) {
  %790 = @func_5142() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */;
  %791 = %790.3;
  (%791,)
}

def @func_6445() -> Tensor[(3, 11, 11), float64] {
  %792 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
  %792.0
}

def @func_3900(%var_3899: Tensor[(8, 3, 4), int32]) -> (Tensor[(8, 3, 4), int32],) {
  %798 = fn (%var_3874: Tensor[(8, 3, 4), int32]) -> (Tensor[(8, 3, 4), int32],) {
    %793 = cast(%var_3874, dtype="int32") /* ty=Tensor[(8, 3, 4), int32] */;
    %794 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(8, 3, 4), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %795 = cast(meta[relay.Constant][62] /* ty=Tensor[(8, 3, 4), int32] */, dtype="int32") /* ty=Tensor[(8, 3, 4), int32] */;
    %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %797 = bitwise_and(%795, %796) /* ty=Tensor[(8, 3, 4), int32] */;
    (%797,)
  };
  %798(%var_3899) /* ty=(Tensor[(8, 3, 4), int32],) */
}

def @func_5031() -> (Tensor[(3, 11, 11), float64],) {
  %799 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 11, 11), float64] */, dtype="float64") /* ty=Tensor[(3, 11, 11), float64] */;
  %800 = asin(%799) /* ty=Tensor[(3, 11, 11), float64] */;
  (%800,)
}

def @func_6936() -> Tensor[(2, 3, 14), float64] {
  %801 = @func_6389() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(2, 3, 14), float64]) */;
  %801.1
}

def @func_7847(%var_7845: Tensor[(7), int64]) -> (Tensor[(3, 11, 11), float64], Tensor[(5, 16, 7), bool], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64]) {
  @func_7844(%var_7845) /* ty=(Tensor[(3, 11, 11), float64], Tensor[(5, 16, 7), bool], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64]) */
}

def @func_6390() -> (Tensor[(2, 3, 14), float64], Tensor[(2, 3, 14), float64]) {
  %806 = fn () -> (Tensor[(2, 3, 14), float64], Tensor[(2, 3, 14), float64]) {
    %802 = @func_6090() /* ty=(Tensor[(2, 3, 14), float64],) */;
    %803 = @func_6090() /* ty=(Tensor[(2, 3, 14), float64],) */;
    %804 = %802.0;
    %805 = %803.0;
    (%804, %805)
  };
  %806() /* ty=(Tensor[(2, 3, 14), float64], Tensor[(2, 3, 14), float64]) */
}

def @func_3143(%var_3141: Tensor[(14, 5, 12), bool], %var_3142: Tensor[(14, 5, 12), bool]) -> (Tensor[(14, 5, 12), bool],) {
  @func_3139(%var_3141, %var_3142) /* ty=(Tensor[(14, 5, 12), bool],) */
}

def @func_4240(%var_4200: Tensor[(9, 6, 7), uint32], %var_4201: Tensor[(9, 6, 7), uint32], %var_4238: Tensor[(560), int64]) -> (Tensor[(9, 6, 7), uint32], Tensor[(9, 6, 7), float64], Tensor[(5, 16, 7), bool], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64]) {
  %807 = cast(%var_4201, dtype="uint32") /* ty=Tensor[(9, 6, 7), uint32] */;
  %808 = shape_of(%var_4200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %809 = cast(%var_4200, dtype="uint32") /* ty=Tensor[(9, 6, 7), uint32] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %811 = cast(%var_4201, dtype="float64") /* ty=Tensor[(9, 6, 7), float64] */;
  %812 = cast(meta[relay.Constant][64] /* ty=Tensor[(7), int64] */, dtype="int64") /* ty=Tensor[(7), int64] */;
  %813 = cast(meta[relay.Constant][65] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %814 = cast(%var_4238, dtype="int64") /* ty=Tensor[(560), int64] */;
  %815 = reshape(%812, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), int64] */;
  %816 = reshape(%813, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), int64] */;
  %817 = reshape(%814, newshape=[5, 16, 7]) /* ty=Tensor[(5, 16, 7), int64] */;
  %818 = @func_3647(%815, %816, %817) /* ty=(Tensor[(5, 6, 7), int64], Tensor[(5, 16, 7), bool]) */;
  %819 = subtract(%809, %810) /* ty=Tensor[(9, 6, 7), uint32] */;
  %820 = log2(%811) /* ty=Tensor[(9, 6, 7), float64] */;
  %821 = %818.1;
  (%819, %820, %821, meta[relay.Constant][64] /* ty=Tensor[(7), int64] */, meta[relay.Constant][65] /* ty=Tensor[(210), int64] */, %var_4238)
}

def @func_7469(%var_7467: Tensor[(882), float64], %var_7468: Tensor[(196), float32]) -> (Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(7, 7, 4), float64], Tensor[(196), float32], Tensor[(1568), float64], Tensor[(882), int64]) {
  %839 = fn (%var_7432: Tensor[(882), float64], %var_7438: Tensor[(196), float32]) -> (Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(7, 7, 4), float64], Tensor[(196), float32], Tensor[(1568), float64], Tensor[(882), int64]) {
    %822 = @func_5031() /* ty=(Tensor[(3, 11, 11), float64],) */;
    %823 = cast(%var_7438, dtype="float32") /* ty=Tensor[(196), float32] */;
    %824 = cast(meta[relay.Constant][66] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
    %825 = reshape(%823, newshape=[196]) /* ty=Tensor[(196), float32] */;
    %826 = reshape(%824, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
    %827 = @func_6045(%825, %826) /* ty=(Tensor[(3, 11, 11), float64], Tensor[(196), float32], Tensor[(7, 7, 4), float64], Tensor[(104, 2), float32], Tensor[(1568), float64]) */;
    %828 = cast(%var_7432, dtype="float64") /* ty=Tensor[(882), float64] */;
    %829 = reshape(%828, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float64] */;
    %830 = @func_332(%829) /* ty=Tensor[(9, 7, 14), uint64] */;
    %831 = cast(%830, dtype="int64") /* ty=Tensor[(9, 7, 14), int64] */;
    %832 = shape_of(%var_7432, dtype="int32") /* ty=Tensor[(1), int32] */;
    %833 = cast(%var_7432, dtype="int64") /* ty=Tensor[(882), int64] */;
    %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?), int64] */;
    %835 = @func_6187() /* ty=Tensor[(3, 11, 11), float64] */;
    %836 = %822.0;
    %837 = %827.2;
    %838 = right_shift(%833, %834) /* ty=Tensor[(882), int64] */;
    (%835, %836, %837, %var_7438, meta[relay.Constant][66] /* ty=Tensor[(1568), float64] */, %838)
  };
  %839(%var_7467, %var_7468) /* ty=(Tensor[(3, 11, 11), float64], Tensor[(3, 11, 11), float64], Tensor[(7, 7, 4), float64], Tensor[(196), float32], Tensor[(1568), float64], Tensor[(882), int64]) */
}

def @func_8574() -> Tensor[(8, 10, 16), float64] {
  %841 = fn () -> Tensor[(8, 10, 16), float64] {
    %840 = @func_7128() /* ty=(Tensor[(8, 10, 16), float64],) */;
    %840.0
  };
  %841() /* ty=Tensor[(8, 10, 16), float64] */
}

def @func_6140() -> (Tensor[(8, 10, 16), float64],) {
  %842 = @func_5142() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(1, 16, 15), float32], Tensor[(1280), float64], Tensor[(8, 10, 16), float64]) */;
  %843 = %842.3;
  (%843,)
}

def @func_5602(%var_5600: Tensor[(378), uint32], %var_5601: Tensor[(5, 198), float32]) -> (Tensor[(1, 16, 15), float32], Tensor[(378), uint32], Tensor[(40, 14), float32], Tensor[(10, 11, 9), float32], Tensor[(5, 198), float32], Tensor[(3, 11, 11), float64], Tensor[(7, 7, 4), float32], Tensor[(196, 1), float32]) {
  @func_5598(%var_5600, %var_5601) /* ty=(Tensor[(1, 16, 15), float32], Tensor[(378), uint32], Tensor[(40, 14), float32], Tensor[(10, 11, 9), float32], Tensor[(5, 198), float32], Tensor[(3, 11, 11), float64], Tensor[(7, 7, 4), float32], Tensor[(196, 1), float32]) */
}

def @func_391(%var_389: Tensor[(10, 7, 9), float64], %var_390: Tensor[(882), float64]) -> (Tensor[(10, 7, 9), float64], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(9, 7, 14), uint64], Tensor[(882), float64]) {
  %855 = fn (%var_374: Tensor[(10, 7, 9), float64], %var_384: Tensor[(882), float64]) -> (Tensor[(10, 7, 9), float64], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(9, 7, 14), uint64], Tensor[(882), float64]) {
    %844 = cast(%var_374, dtype="float64") /* ty=Tensor[(10, 7, 9), float64] */;
    %845 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(10, 7, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %846 = cast(meta[relay.Constant][67] /* ty=Tensor[(10, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(10, 7, 9), float64] */;
    %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %848 = cast(meta[relay.Constant][68] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
    %849 = reshape(%848, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float32] */;
    %850 = cast(%var_384, dtype="float64") /* ty=Tensor[(882), float64] */;
    %851 = reshape(%850, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float64] */;
    %852 = mod(%846, %847) /* ty=Tensor[(10, 7, 9), float64] */;
    %853 = @func_273(%849) /* ty=Tensor[(10, 11, 9), float32] */;
    %854 = @func_332(%851) /* ty=Tensor[(9, 7, 14), uint64] */;
    (%852, %853, meta[relay.Constant][68] /* ty=Tensor[(990), float32] */, %854, %var_384)
  };
  %855(%var_389, %var_390) /* ty=(Tensor[(10, 7, 9), float64], Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(9, 7, 14), uint64], Tensor[(882), float64]) */
}

def @func_6083() -> Tensor[(1, 16, 15), float32] {
  %856 = fn () -> Tensor[(1, 16, 15), float32] {
    @func_5502() /* ty=Tensor[(1, 16, 15), float32] */
  };
  %856() /* ty=Tensor[(1, 16, 15), float32] */
}

def @func_6734(%var_6717: Tensor[(3, 11, 11), float64], %var_6730: Tensor[(96), float64]) -> (Tensor[(3, 11, 11), float32], Tensor[(2, 6, 8), int32], Tensor[(96), float64]) {
  %857 = @func_6445() /* ty=Tensor[(3, 11, 11), float64] */;
  %858 = cast(%var_6717, dtype="float32") /* ty=Tensor[(3, 11, 11), float32] */;
  %859 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %860 = cast(%857, dtype="float32") /* ty=Tensor[(3, 11, 11), float32] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %862 = cast(%var_6730, dtype="float64") /* ty=Tensor[(96), float64] */;
  %863 = cast(%var_6730, dtype="float64") /* ty=Tensor[(96), float64] */;
  %864 = reshape(%862, newshape=[2, 6, 8]) /* ty=Tensor[(2, 6, 8), float64] */;
  %865 = reshape(%863, newshape=[2, 6, 8]) /* ty=Tensor[(2, 6, 8), float64] */;
  %866 = @func_2182(%864, %865) /* ty=(Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(2, 6, 8), int32]) */;
  %867 = floor_divide(%860, %861) /* ty=Tensor[(3, 11, 11), float32] */;
  %868 = %866.2;
  (%867, %868, %var_6730)
}

def @func_7130() -> (Tensor[(8, 10, 16), float64],) {
  @func_7128() /* ty=(Tensor[(8, 10, 16), float64],) */
}

def @func_2185(%var_2183: Tensor[(2, 6, 8), float64], %var_2184: Tensor[(2, 6, 8), float64]) -> (Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(2, 6, 8), int32]) {
  %879 = fn (%var_2161: Tensor[(2, 6, 8), float64], %var_2170: Tensor[(2, 6, 8), float64]) -> (Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(2, 6, 8), int32]) {
    %869 = cast(meta[relay.Constant][69] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
    %870 = reshape(%869, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float32] */;
    %871 = cast(%var_2161, dtype="float64") /* ty=Tensor[(2, 6, 8), float64] */;
    %872 = asinh(%871) /* ty=Tensor[(2, 6, 8), float64] */;
    %873 = cast(%var_2170, dtype="int32") /* ty=Tensor[(2, 6, 8), int32] */;
    %874 = shape_of(%872, dtype="int32") /* ty=Tensor[(3), int32] */;
    %875 = cast(%872, dtype="int32") /* ty=Tensor[(2, 6, 8), int32] */;
    %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %877 = @func_273(%870) /* ty=Tensor[(10, 11, 9), float32] */;
    %878 = left_shift(%875, %876) /* ty=Tensor[(2, 6, 8), int32] */;
    (%877, meta[relay.Constant][69] /* ty=Tensor[(990), float32] */, %878)
  };
  %879(%var_2183, %var_2184) /* ty=(Tensor[(10, 11, 9), float32], Tensor[(990), float32], Tensor[(2, 6, 8), int32]) */
}

def @func_5427() -> (Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) {
  @func_5425() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(?, 4, 3), float64], Tensor[(12), float64]) */
}

def @func_4081(%var_4078: Tensor[(7, 5, 15), float32], %var_4079: Tensor[(1176), float64], %var_4080: Tensor[(12), float64]) -> (Tensor[(7, 5, 15), float32], Tensor[(8, 14, 14), float64], Tensor[(1568), float64], Tensor[(7, 5, 15), float64], Tensor[(12), float64], Tensor[(1176), float64], Tensor[(12), float64]) {
  %899 = fn (%var_4045: Tensor[(7, 5, 15), float32], %var_4071: Tensor[(1176), float64], %var_4072: Tensor[(12), float64]) -> (Tensor[(7, 5, 15), float32], Tensor[(8, 14, 14), float64], Tensor[(1568), float64], Tensor[(7, 5, 15), float64], Tensor[(12), float64], Tensor[(1176), float64], Tensor[(12), float64]) {
    %880 = cast(meta[relay.Constant][70] /* ty=Tensor[(7, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(7, 5, 15), float32] */;
    %881 = shape_of(%var_4045, dtype="int32") /* ty=Tensor[(3), int32] */;
    %882 = cast(%var_4045, dtype="float32") /* ty=Tensor[(7, 5, 15), float32] */;
    %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %884 = cast(meta[relay.Constant][71] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
    %885 = cast(meta[relay.Constant][71] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
    %886 = reshape(%884, newshape=[8, 14, 14]) /* ty=Tensor[(8, 14, 14), float64] */;
    %887 = reshape(%885, newshape=[8, 14, 14]) /* ty=Tensor[(8, 14, 14), float64] */;
    %888 = @func_2520(%886, %887) /* ty=(Tensor[(8, 14, 14), float64], Tensor[(9, 8, 6), float64], Tensor[(104, 2), float32], Tensor[(9, 8, 6), float64]) */;
    %889 = cast(meta[relay.Constant][70] /* ty=Tensor[(7, 5, 15), float32] */, dtype="float64") /* ty=Tensor[(7, 5, 15), float64] */;
    %890 = cast(%var_4071, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %891 = cast(%var_4072, dtype="float64") /* ty=Tensor[(12), float64] */;
    %892 = reshape(%890, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float64] */;
    %893 = reshape(%891, newshape=[12]) /* ty=Tensor[(12), float64] */;
    %894 = @func_3867(%892, %893) /* ty=(Tensor[(6, 14, 14), float64], Tensor[(1, 4, 3), float64], Tensor[(12), float64]) */;
    %895 = mod(%882, %883) /* ty=Tensor[(7, 5, 15), float32] */;
    %896 = %888.0;
    %897 = sinh(%889) /* ty=Tensor[(7, 5, 15), float64] */;
    %898 = %894.2;
    (%895, %896, meta[relay.Constant][71] /* ty=Tensor[(1568), float64] */, %897, %898, %var_4071, %var_4072)
  };
  %899(%var_4078, %var_4079, %var_4080) /* ty=(Tensor[(7, 5, 15), float32], Tensor[(8, 14, 14), float64], Tensor[(1568), float64], Tensor[(7, 5, 15), float64], Tensor[(12), float64], Tensor[(1176), float64], Tensor[(12), float64]) */
}

def @func_4183(%var_4177: Tensor[(8, 2, 7), uint32], %var_4178: Tensor[(8, 2, 7), uint32], %var_4179: Tensor[(40), int16], %var_4180: Tensor[(78), float32], %var_4181: Tensor[(882), float64], %var_4182: Tensor[(432), float64]) -> (Tensor[(8, 2, 7), uint32], Tensor[(4, 2, 5), uint8], Tensor[(40), int16], Tensor[(630), float64], Tensor[(78), float32], Tensor[(882), float64], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(9, 8, 6), float64], Tensor[(8, 2, 7), float32], Tensor[(9, 8, 6), float64], Tensor[(1144), float32]) {
  @func_4175(%var_4177, %var_4178, %var_4179, %var_4180, %var_4181, %var_4182) /* ty=(Tensor[(8, 2, 7), uint32], Tensor[(4, 2, 5), uint8], Tensor[(40), int16], Tensor[(630), float64], Tensor[(78), float32], Tensor[(882), float64], Tensor[(9, 8, 6), float64], Tensor[(432), float64], Tensor[(9, 8, 6), float64], Tensor[(8, 2, 7), float32], Tensor[(9, 8, 6), float64], Tensor[(1144), float32]) */
}

def @func_6633(%var_6628: Tensor[(1, 112), uint32], %var_6629: Tensor[(40), int16], %var_6630: Tensor[(882), float64], %var_6631: Tensor[(8, 28), uint16], %var_6632: Tensor[(12), float64]) -> (Tensor[(9, 8, 6), float64], Tensor[(1, 112), uint32], Tensor[(40), int16], Tensor[(78), float32], Tensor[(882), float64], Tensor[(432), float64], Tensor[(8, 28), float32], Tensor[(?, 4, 3), float64], Tensor[(12), float64], Tensor[(8, 10, 16), int8]) {
  @func_6626(%var_6628, %var_6629, %var_6630, %var_6631, %var_6632) /* ty=(Tensor[(9, 8, 6), float64], Tensor[(1, 112), uint32], Tensor[(40), int16], Tensor[(78), float32], Tensor[(882), float64], Tensor[(432), float64], Tensor[(8, 28), float32], Tensor[(?, 4, 3), float64], Tensor[(12), float64], Tensor[(8, 10, 16), int8]) */
}

def @func_2590(%var_2587: Tensor[(11, 13, 8), float32], %var_2588: Tensor[(11, 13, 8), float32], %var_2589: Tensor[(11, 13, 8), float32]) -> (Tensor[(11, 13, 8), bool], Tensor[(11, 13, 8), int8], Tensor[(9, 8, 6), float64], Tensor[(1568), float64]) {
  @func_2585(%var_2587, %var_2588, %var_2589) /* ty=(Tensor[(11, 13, 8), bool], Tensor[(11, 13, 8), int8], Tensor[(9, 8, 6), float64], Tensor[(1568), float64]) */
}

def @func_8100() -> (Tensor[(1, 4, 3), float64],) {
  %900 = @func_5818() /* ty=(Tensor[(3, 11, 11), float64], Tensor[(1, 4, 3), float64], Tensor[(588, 2), float64], Tensor[(12), float64]) */;
  %901 = %900.1;
  %902 = cast(%901, dtype="float64") /* ty=Tensor[(1, 4, 3), float64] */;
  %903 = tan(%902) /* ty=Tensor[(1, 4, 3), float64] */;
  (%903,)
}

def @func_4245(%var_4242: Tensor[(9, 6, 7), uint32], %var_4243: Tensor[(9, 6, 7), uint32], %var_4244: Tensor[(560), int64]) -> (Tensor[(9, 6, 7), uint32], Tensor[(9, 6, 7), float64], Tensor[(5, 16, 7), bool], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64]) {
  @func_4240(%var_4242, %var_4243, %var_4244) /* ty=(Tensor[(9, 6, 7), uint32], Tensor[(9, 6, 7), float64], Tensor[(5, 16, 7), bool], Tensor[(7), int64], Tensor[(210), int64], Tensor[(560), int64]) */
}

def @func_6679() -> Tensor[(2, 3, 14), float64] {
  %904 = @func_6090() /* ty=(Tensor[(2, 3, 14), float64],) */;
  %904.0
}

def @func_7093(%var_7090: Tensor[(10, 13, 2), float64], %var_7091: Tensor[(990), float32], %var_7092: Tensor[(525), float32]) -> (Tensor[(10, 13, 2), float64], Tensor[(14, 16, 15), uint64], Tensor[(3360), float32], Tensor[(12), float64], Tensor[(990), float32], Tensor[(525), float32]) {
  @func_7088(%var_7090, %var_7091, %var_7092) /* ty=(Tensor[(10, 13, 2), float64], Tensor[(14, 16, 15), uint64], Tensor[(3360), float32], Tensor[(12), float64], Tensor[(990), float32], Tensor[(525), float32]) */
}

def @func_8698() -> Tensor[(7), int64] {
  %906 = fn () -> Tensor[(7), int64] {
    %905 = @func_8163() /* ty=(Tensor[(1, 16, 15), float32], Tensor[(3, 11, 11), float64], Tensor[(9, 6, 7), float64], Tensor[(378), uint32], Tensor[(560), int64], Tensor[(7), int64]) */;
    %905.5
  };
  %906() /* ty=Tensor[(7), int64] */
}

def @func_3836(%var_3835: Tensor[(8, 2, 11), float32]) -> (Tensor[(14, 5, 12), bool], Tensor[(420, 2), bool], Tensor[(8, 2, 11), float64]) {
  %917 = fn (%var_3811: Tensor[(8, 2, 11), float32]) -> (Tensor[(14, 5, 12), bool], Tensor[(420, 2), bool], Tensor[(8, 2, 11), float64]) {
    %907 = cast(meta[relay.Constant][72] /* ty=Tensor[(420, 2), bool] */, dtype="bool") /* ty=Tensor[(420, 2), bool] */;
    %908 = cast(meta[relay.Constant][72] /* ty=Tensor[(420, 2), bool] */, dtype="bool") /* ty=Tensor[(420, 2), bool] */;
    %909 = reshape(%907, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), bool] */;
    %910 = reshape(%908, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), bool] */;
    %911 = @func_3139(%909, %910) /* ty=(Tensor[(14, 5, 12), bool],) */;
    %912 = cast(%var_3811, dtype="float32") /* ty=Tensor[(8, 2, 11), float32] */;
    %913 = tan(%912) /* ty=Tensor[(8, 2, 11), float32] */;
    %914 = cast(%913, dtype="float64") /* ty=Tensor[(8, 2, 11), float64] */;
    %915 = %911.0;
    %916 = sqrt(%914) /* ty=Tensor[(8, 2, 11), float64] */;
    (%915, meta[relay.Constant][72] /* ty=Tensor[(420, 2), bool] */, %916)
  };
  %917(%var_3835) /* ty=(Tensor[(14, 5, 12), bool], Tensor[(420, 2), bool], Tensor[(8, 2, 11), float64]) */
}

def @func_3180(%var_3159: Tensor[(8, 6, 12), bool], %var_3174: Tensor[(882), float64]) -> (Tensor[(8, 6, 12), bool], Tensor[(9, 7, 14), uint64], Tensor[(882), float64]) {
  %918 = cast(meta[relay.Constant][73] /* ty=Tensor[(8, 6, 12), bool] */, dtype="bool") /* ty=Tensor[(8, 6, 12), bool] */;
  %919 = shape_of(%var_3159, dtype="int32") /* ty=Tensor[(3), int32] */;
  %920 = cast(%var_3159, dtype="bool") /* ty=Tensor[(8, 6, 12), bool] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %922 = cast(%var_3174, dtype="float64") /* ty=Tensor[(882), float64] */;
  %923 = reshape(%922, newshape=[9, 7, 14]) /* ty=Tensor[(9, 7, 14), float64] */;
  %924 = logical_and(%920, %921) /* ty=Tensor[(8, 6, 12), bool] */;
  %925 = @func_332(%923) /* ty=Tensor[(9, 7, 14), uint64] */;
  (%924, %925, %var_3174)
}

def @func_5318() -> (Tensor[(3, 11, 11), float64],) {
  @func_5316() /* ty=(Tensor[(3, 11, 11), float64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

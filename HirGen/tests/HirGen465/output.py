import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_242 = relay.var("var_242", dtype = "float32", shape = (10, 11, 9))#candidate|242|(10, 11, 9)|var|float32
uop_243 = relay.sinh(var_242.astype('float32')) # shape=(10, 11, 9)
output = uop_243
output2 = uop_243
func_273 = relay.Function([var_242,], output)
mod['func_273'] = func_273
mod = relay.transform.InferType()(mod)
mutated_mod['func_273'] = func_273
mutated_mod = relay.transform.InferType()(mutated_mod)
var_274 = relay.var("var_274", dtype = "float32", shape = (10, 11, 9))#candidate|274|(10, 11, 9)|var|float32
func_273_call = mutated_mod.get_global_var('func_273')
call_275 = func_273_call(var_274)
output = call_275
func_276 = relay.Function([var_274], output)
mutated_mod['func_276'] = func_276
mutated_mod = relay.transform.InferType()(mutated_mod)
var_300 = relay.var("var_300", dtype = "float64", shape = (9, 7, 14))#candidate|300|(9, 7, 14)|var|float64
uop_301 = relay.cosh(var_300.astype('float64')) # shape=(9, 7, 14)
bop_308 = relay.left_shift(uop_301.astype('uint8'), relay.reshape(var_300.astype('uint8'), relay.shape_of(uop_301))) # shape=(9, 7, 14)
bop_314 = relay.bitwise_or(bop_308.astype('uint64'), relay.reshape(uop_301.astype('uint64'), relay.shape_of(bop_308))) # shape=(9, 7, 14)
output = bop_314
output2 = bop_314
func_332 = relay.Function([var_300,], output)
mod['func_332'] = func_332
mod = relay.transform.InferType()(mod)
mutated_mod['func_332'] = func_332
mutated_mod = relay.transform.InferType()(mutated_mod)
var_333 = relay.var("var_333", dtype = "float64", shape = (9, 7, 14))#candidate|333|(9, 7, 14)|var|float64
func_332_call = mutated_mod.get_global_var('func_332')
call_334 = func_332_call(var_333)
output = call_334
func_335 = relay.Function([var_333], output)
mutated_mod['func_335'] = func_335
mutated_mod = relay.transform.InferType()(mutated_mod)
const_373 = relay.const([[[2.395149,9.510565,7.546508,9.575940,-3.138617,4.863344,6.672955,1.053455,-1.390219],[1.013969,2.269936,-2.955036,8.205983,-3.893697,2.456603,8.602471,7.791857,-0.068657],[3.115681,9.746466,-8.133240,-5.656318,-6.439965,3.123417,7.167075,-2.711002,-5.720147],[-2.799296,9.136500,2.517335,-3.078460,8.570619,2.525035,-3.564279,8.070730,-0.482576],[-4.916209,-0.508732,9.876840,6.613351,-1.341600,0.799176,-4.943915,-4.705555,-0.521038],[-0.875939,4.675825,-0.215736,7.564114,2.804943,6.500909,7.158548,-4.658637,-0.189289],[1.428126,-9.135213,-7.433383,-7.782082,1.608921,-7.998782,-9.112180,-0.809311,-5.941713]],[[-2.393619,-6.989394,-0.619443,-6.694908,9.875121,9.280513,-4.432000,-6.736843,-8.287020],[-2.819470,7.859939,-6.373881,3.914330,0.197236,-0.783322,-8.827557,2.426743,-8.100682],[-3.676771,5.406968,-6.767161,-9.408617,6.236765,1.829885,4.995972,4.632065,-8.322665],[-3.509195,-8.586984,6.221426,6.546401,-7.562919,-2.094801,-5.395942,8.640175,5.548711],[0.935748,-7.730020,-0.486853,-9.450172,2.169997,-0.321489,1.392450,7.691811,-6.051725],[-1.924489,-8.707870,2.500747,-9.609682,-0.694944,3.168832,0.801134,1.392595,-7.624904],[3.370608,3.125582,-5.619236,-0.223012,-7.899178,9.392744,3.562545,-6.656086,-6.667456]],[[-4.761922,4.474765,-9.193185,-2.254720,3.064111,7.873011,2.459308,6.425669,5.481066],[6.831084,7.902680,0.692788,-4.207948,4.817384,8.002301,-2.004164,-4.205215,-4.962607],[2.599715,-2.733478,-3.326973,-3.023958,-1.328123,-9.062831,9.499102,-1.121009,5.474925],[3.003558,-0.149386,-7.421739,8.640886,0.324586,-3.210755,-3.706275,5.169768,9.548909],[8.919067,4.605738,1.196686,8.476035,7.372029,7.096863,-4.778239,8.297313,7.803993],[-8.876494,-9.988855,-3.938901,8.559518,-5.961935,2.237485,-2.812420,1.348408,9.590458],[5.261838,9.070626,-9.108359,0.062583,-2.826020,1.715095,-4.653832,-2.823754,2.095234]],[[0.419626,6.691158,2.534244,3.358662,9.406839,-3.536254,8.678346,-7.903303,-4.419288],[-7.322653,1.411200,-2.624571,-1.891705,-4.006095,-5.365125,-1.771793,-3.064062,1.539408],[-8.078450,0.035643,-2.176423,-1.864714,6.639132,-5.450144,7.282451,4.061246,5.598384],[5.211073,-2.983824,-8.215168,-1.521492,-3.979818,0.953689,-2.388837,1.046045,6.267179],[3.952071,1.245478,-6.505676,3.096606,-3.581271,-4.237835,-7.580507,-2.316432,7.808220],[6.842662,8.368855,-0.673617,-4.433096,-9.428651,-2.188675,4.593012,-0.558058,-0.321984],[-6.825877,-6.929521,-0.744033,3.236580,5.733841,3.745318,-3.667466,-4.931026,0.900523]],[[-9.384142,1.314278,6.443159,2.387932,-7.225074,9.025449,-0.726925,-1.805029,7.763653],[-5.578595,3.399829,-7.462188,-8.467551,-1.787641,-1.819981,-4.406536,8.695275,7.767871],[4.059849,1.537368,-1.389261,8.489367,-4.887241,-1.220997,-8.262971,-4.203085,-3.316458],[8.621123,-6.506283,1.392011,7.043775,4.178695,6.121161,4.093026,6.433697,-3.885653],[2.027440,7.576207,9.159200,7.247244,-3.663243,-2.994552,-6.455289,3.088013,9.620679],[4.652924,-5.035357,2.304896,-3.838008,8.449368,5.096869,6.971931,0.565538,-9.306060],[-8.717578,-8.222708,-8.865638,4.380702,-1.051644,5.059404,5.857198,-0.978703,5.919067]],[[-0.650453,-4.244418,-3.381545,7.107569,2.746143,-1.689113,-2.840553,4.373948,1.079328],[8.972626,0.638662,1.052660,5.087606,1.970439,8.602611,0.153016,-9.982739,3.217417],[7.405231,7.188179,2.432742,-2.823436,-5.078516,-6.355847,6.666787,1.547198,-5.040209],[6.188403,4.912378,9.245228,-0.056949,-4.573538,7.886368,2.098953,3.764898,0.910159],[-4.752565,-3.115984,3.753633,-2.372755,-5.594520,5.963874,-3.762331,-7.621364,-6.760790],[-1.839562,-3.413361,8.897127,-7.322635,-3.212774,0.247410,-1.886928,5.411131,5.508224],[-1.459842,-9.659687,8.375092,4.706728,-9.479772,2.385922,9.981588,2.393479,7.737123]],[[1.865580,1.417913,1.653638,7.505488,-9.550933,-5.239492,-6.267423,8.021166,1.337469],[-4.429241,3.906438,-1.543280,3.126960,-0.855815,9.302345,-3.484740,-1.680876,-9.421102],[-3.465993,0.064319,-0.931301,-5.756293,-4.231374,5.179469,-2.105272,-3.447918,9.118794],[8.043282,3.014780,6.824127,6.995186,6.156569,-4.586930,4.963720,-5.902527,1.901385],[-3.002864,4.836562,-4.812855,-2.475680,-4.997005,-2.244557,5.503172,6.454221,4.310610],[0.625859,-3.414198,-8.306942,-9.578615,0.346586,3.500717,8.836215,3.463773,-3.868733],[-1.950284,-2.614567,-4.893707,-1.708358,-8.697182,-6.192780,-5.399959,-3.821114,-4.769887]],[[2.784095,-0.397717,4.539458,-5.669410,3.801752,3.812051,4.489009,-9.294010,3.239842],[-1.957031,-7.498486,2.426356,-4.800108,-4.499518,-1.310679,-7.139960,0.338838,-7.360400],[-6.420076,-4.925557,-9.739287,7.964852,2.779751,-7.697121,-6.134402,-3.216985,4.739921],[6.180709,4.928188,5.854839,8.295347,-1.233383,-1.288238,3.704007,5.753994,8.398633],[-7.046469,2.256372,-5.605992,-4.760526,-1.616461,-2.860152,-9.661178,2.377939,0.370274],[0.443176,-9.905416,-7.509694,-1.308158,8.895419,4.338511,-0.738444,-2.821067,0.510828],[5.818720,4.722828,-8.454977,2.060938,-7.086457,-6.720998,7.968980,-9.963255,1.914786]],[[1.565668,-6.410454,0.163787,3.821959,4.939163,9.394019,-9.346131,-8.735647,-6.637360],[8.845714,0.120453,9.826739,-0.124302,2.995823,-0.293911,9.290524,9.964386,3.348625],[7.371579,-7.528781,-2.045598,5.848242,-2.457948,-7.245788,-1.599641,-8.186503,1.725955],[4.456768,6.348442,-4.530949,-3.928016,8.636760,-0.695282,-4.943572,0.151658,-9.586519],[0.872365,-3.415591,-1.212244,-7.744648,0.061116,-5.862218,-4.499709,-4.104735,1.291268],[-1.996837,-9.097837,9.174162,-4.170902,-2.172071,-9.606849,7.906096,-0.891178,7.548075],[-2.675648,4.627045,-4.594275,1.559993,0.227339,-8.237532,-8.201647,-4.240498,-3.644771]],[[0.963581,-9.236225,-8.159130,9.196501,-8.568785,-3.086399,-4.820141,6.821898,-4.328954],[8.535370,5.126367,1.818946,1.887273,-7.876773,-9.952291,0.989247,1.922099,4.563126],[-3.431780,5.136436,-3.776689,-9.120017,-9.621739,-6.297428,-2.817030,-1.456650,-5.834135],[0.285758,-5.182237,-5.523768,3.848372,-9.012871,3.848970,-1.861464,-7.022342,-1.014879],[1.599941,4.058321,-9.917052,-2.023715,-5.718325,-0.160082,-1.435893,-3.529776,1.262427],[3.177186,5.377343,1.743424,6.303672,-5.976253,3.565807,-3.910008,-9.816209,3.622161],[9.723848,3.124977,-5.115614,6.054299,4.770378,0.774571,-1.369685,1.371956,0.003803]]], dtype = "float64")#candidate|373|(10, 7, 9)|const|float64
var_374 = relay.var("var_374", dtype = "float64", shape = (10, 7, 9))#candidate|374|(10, 7, 9)|var|float64
bop_375 = relay.mod(const_373.astype('float64'), relay.reshape(var_374.astype('float64'), relay.shape_of(const_373))) # shape=(10, 7, 9)
func_273_call = mod.get_global_var('func_273')
func_276_call = mutated_mod.get_global_var('func_276')
const_379 = relay.const([-1.915967,6.090349,-3.804910,-2.435529,-1.401373,0.650378,-4.041975,0.263779,2.169908,7.672922,4.117852,6.971724,4.178643,6.979478,-6.314267,8.831656,5.646573,-3.500966,6.551675,0.758516,-9.375533,7.828965,-5.293849,2.317537,5.877176,5.249211,5.488235,4.828378,8.455627,6.230489,9.491001,8.377263,7.065293,-7.498737,-3.386788,4.688479,-5.430078,3.633166,7.450724,3.604529,5.291347,2.761139,3.319672,-4.700610,2.942736,-4.750504,-8.348251,-2.398819,1.985508,-7.979799,-4.378219,-6.818523,0.567732,-5.140122,-4.747182,2.839331,-1.355519,-4.946675,7.539609,0.511172,9.257667,0.941488,1.136138,6.620994,-9.629871,-2.773708,3.035755,-0.386902,-4.454799,7.538442,-3.777195,6.721393,-3.624146,-9.205119,-3.120847,-6.943554,7.153993,7.487649,0.987997,0.075527,3.887480,0.825775,-7.201997,6.370858,-0.650304,-9.167851,7.235957,5.976696,9.111630,-2.036942,6.886109,3.876316,-6.130663,8.795454,-0.858285,-8.537707,-2.726122,-6.622519,3.604597,-8.899924,2.497477,-6.026821,-4.586966,-7.938096,4.523631,4.698099,0.511472,9.427068,6.551735,-5.321022,4.766310,4.486550,-4.874513,-7.672534,5.892309,1.984287,1.015359,-2.814808,1.644526,-9.064851,3.496514,-5.725984,-7.044778,-2.487951,-3.455370,6.091739,6.854820,-7.485669,1.872526,3.394377,1.264391,1.718624,-3.111414,-6.852069,-0.913412,-4.987476,-0.197647,-8.495450,-3.365658,-9.871752,6.368873,-1.230425,7.575589,-8.331741,-8.918014,9.927471,-2.617864,-7.449522,-7.908129,4.602183,9.410245,-5.224807,-5.955554,0.196189,-5.406579,6.080857,4.179305,-9.949859,-8.759530,1.185072,5.472958,-6.103233,3.715686,-2.134310,4.929556,-6.701986,-3.613071,-1.045970,-5.662367,5.595308,-5.204671,-1.274090,3.664094,-4.603703,-5.258059,-7.463688,-5.809565,8.642279,4.993789,-9.802394,6.462381,-2.167451,4.760800,-3.252015,-1.439917,-9.130168,8.609363,-7.452082,-3.657932,-4.290856,2.290863,-5.539559,-4.151346,7.017479,2.463785,-1.409607,7.749187,-0.640004,-0.730952,-0.860760,3.933461,4.088666,2.120175,1.269673,-8.923391,-9.491179,-7.177749,4.108963,6.251017,-2.855674,-2.646857,5.096049,5.387102,1.383742,0.657917,-2.042153,-2.398961,2.643162,-3.333355,2.248181,-3.008399,-0.674776,-4.265240,6.361351,-2.781300,7.774206,5.050486,-2.133670,-5.850358,-0.328500,7.240868,-5.570681,-1.279665,-7.021386,-9.717344,3.692981,7.056727,8.474279,4.726836,8.982283,7.123709,2.020894,-4.897363,1.617505,5.234045,-7.437478,7.349942,-5.064895,-4.690023,-4.735685,8.495948,0.665856,6.407355,-9.262035,-3.114816,-4.233477,-9.551314,-6.194386,-7.550282,-7.053291,3.343831,-9.547763,5.323508,-5.876071,9.998698,0.981919,-6.265906,-0.914442,8.760272,-2.792497,-1.655835,9.298398,-6.472362,9.738760,-3.607256,-8.171260,-0.982526,-3.132284,-5.389368,9.538499,3.910453,-4.154552,-4.390271,3.427387,3.242410,8.962088,-2.718037,4.964703,-0.672034,9.145794,-4.346299,-0.129332,1.384028,-0.953142,0.170169,5.650276,-6.430148,-6.580560,-4.359160,5.072702,2.785409,-9.005669,7.598700,5.326240,-0.662239,-4.388733,-9.033413,-9.445498,0.608671,7.479554,-1.057284,3.135667,-6.027794,2.210263,2.440849,1.893361,5.319154,0.368956,3.701689,-8.642072,1.280749,-1.940555,8.416012,2.741158,6.259483,3.974317,-8.407137,4.064316,-9.456998,8.218079,1.730624,8.289315,-6.043943,5.875450,3.120507,-1.831014,7.023523,-1.010925,3.878508,0.296705,9.230127,-3.071090,-2.252402,-4.581441,5.890481,-3.225170,-4.415753,5.503314,-1.751734,-7.192200,6.503876,2.619878,5.475873,6.323412,2.052376,-4.202324,-5.191810,-2.071780,-5.565865,6.976919,8.224217,-4.506926,5.579586,-9.593627,-0.907021,6.292948,8.134221,-2.809053,9.912689,1.066163,6.717795,1.658889,1.323903,-8.962327,-9.402236,6.233457,6.232431,-2.443940,9.606558,4.623544,4.411285,9.526817,9.903240,-9.231763,-5.233399,5.005229,1.390944,6.990703,7.457555,-7.964183,0.856127,6.905705,8.623970,-5.708973,-6.330274,-5.979010,-1.475271,7.244344,-0.917784,-1.007499,0.934826,-7.671824,-6.674554,6.873368,2.279940,-1.283437,5.057126,4.855540,5.588256,-3.627224,4.732454,1.606835,-9.084613,7.613747,-7.510454,7.806629,-8.158670,-9.055572,6.564295,-4.272268,9.879621,-4.957842,-9.690829,6.005275,8.488995,4.569301,0.844702,-1.833119,2.224047,-9.704029,-8.945402,-2.218964,6.066472,4.345662,-7.126987,0.906267,-1.059752,1.426062,6.937444,-3.764447,-0.199096,-2.825029,2.165271,5.819339,-3.352680,-9.318577,-4.361265,5.676281,-8.763743,-4.348600,-0.549945,-7.718702,2.629924,2.992222,1.772237,1.738562,-2.319782,5.860399,7.399342,-1.738338,-0.019428,-3.564662,4.338534,-4.836611,-7.780918,5.328885,-7.642704,-8.663892,7.804828,-7.972111,6.500500,-3.121899,8.521613,0.249940,-8.364716,9.465120,5.117857,1.169644,7.449147,-9.699129,1.886789,0.041724,8.849756,7.068996,2.593919,0.371582,-3.397778,-3.863935,4.113404,-9.522421,-9.545394,-7.727008,7.110642,-6.732633,3.837028,-1.622340,-6.982779,-9.454075,7.413108,-0.917214,-2.213184,-8.576209,6.880094,-2.612349,-9.607464,4.459254,-6.626596,-1.994953,9.136144,3.543926,0.052699,6.385715,0.566121,-9.861661,-5.606343,3.528545,-0.888487,8.274225,8.992632,4.005402,-1.271324,-8.809499,-0.470924,-8.287547,8.460802,7.096325,1.641823,3.093117,-7.010893,-5.314336,-5.429531,2.250515,0.676064,9.634146,2.059153,-1.564076,4.624419,-6.100906,-1.486537,2.603087,-7.403194,-0.584264,-7.963295,-8.068943,1.304065,8.972950,5.286069,6.357079,3.457918,7.527552,3.940329,-8.157409,-7.693245,-4.751937,8.653338,-8.912459,-9.438803,8.534054,-0.198103,-6.301435,-9.860463,-6.367434,-7.288443,-5.693702,-6.218924,-8.836385,-3.925718,-8.791210,-7.812776,6.081664,-4.084408,0.197605,-5.926508,8.038384,1.919378,6.639744,4.128158,3.659207,5.952009,1.941051,6.281282,6.913171,-2.105994,-7.579401,-6.811893,-4.155326,4.047244,-0.111281,7.754763,8.415916,7.953166,-9.387912,-8.932690,-6.469046,-4.339109,8.962954,-0.617181,3.229639,-4.408355,8.402285,3.935255,2.728589,9.268202,-2.316679,-7.452622,8.468971,-2.410669,-8.400577,7.335619,-2.213510,2.541318,2.292147,-7.188863,-0.852518,-7.389173,-7.219340,-4.860460,5.871311,5.732368,-9.651206,3.199854,5.250388,9.883963,-8.112666,-6.319701,-1.561151,-2.949918,9.037548,-8.095201,3.016796,5.677290,-6.752860,7.395770,-0.487513,-5.931352,-8.944942,-7.189564,8.333624,-1.742451,3.047209,3.958800,-7.474285,1.467113,-2.415969,5.250813,8.142291,7.263437,-5.200234,1.112469,8.549981,5.010572,8.386543,8.802514,-3.502905,-6.943057,3.779849,6.110582,1.465003,2.289366,0.949154,3.134869,-9.846723,-0.464531,3.594525,4.956321,1.871925,6.524334,-2.876681,-2.717093,-0.096182,-6.494305,-3.533400,4.703838,6.901148,0.159283,1.915628,6.127876,-1.262815,4.653791,2.140300,-0.464059,4.007628,4.089122,1.096145,-5.855904,-5.845068,6.189685,4.309985,-6.232796,7.416084,6.609131,-1.324137,-9.261756,-8.259319,-6.551604,-8.009301,0.843306,-3.264337,-3.920900,-7.624313,9.906924,3.024744,8.331233,9.957575,3.922665,8.090378,-6.540180,6.058645,-7.057657,-1.807096,8.677629,-4.369093,-0.135495,6.364273,-6.267586,-2.292915,-2.246362,-0.164500,-4.967077,0.512647,-1.643223,-1.064188,-0.522017,-4.436062,3.598159,-4.372778,4.750478,0.983405,4.871753,-7.107177,-9.220528,-6.091304,7.155740,-5.237343,-8.460714,7.136691,7.319823,6.624615,-3.887555,-5.410642,-4.480360,-3.489302,9.371078,-3.353145,2.897495,-8.123041,5.236480,-0.092228,7.015595,-5.069702,9.301135,1.048243,1.648981,-0.041830,-3.576328,7.024520,0.099046,-7.638823,-1.784914,-4.713308,-4.683205,5.136243,5.863134,-5.962558,8.737568,-2.145787,-4.381800,7.601152,1.002376,7.078869,-2.295777,-3.594859,6.190388,6.056937,5.933106,0.569162,-5.824226,7.767635,-8.499790,9.821003,-6.738859,-7.965919,7.819603,-7.327170,-3.426301,-6.493482,1.453655,-0.547094,1.132291,-8.686970,4.386652,-8.550773,-2.643120,4.830051,7.726496,-7.898049,4.541332,0.805347,-0.508491,7.205509,4.529635,-8.979124,-2.776939,8.015985,-8.711392,1.741783,0.055211,0.905095,6.986428,7.378967,5.718626,5.945862,-8.339673,6.080658,-1.726903,9.797152,-8.668920,-0.535493,5.951845,4.237075,7.937394,7.823373,-3.289316,6.348277,-5.140119,8.917775,-6.407142,-6.689071,7.615848,-4.328657,-8.327105,6.849263,0.194820,2.506047,-3.019547,-3.833569,8.174246,-0.122855,-0.660501,-4.817916,-0.662934,1.689733,-8.421211,-8.370950,8.741989,0.979929,-0.847883,4.535853,0.381111,-3.037718,5.740157,0.201296,1.856045,-9.612470,9.859285,-7.889488,-5.909856,8.582913,4.982780,-6.987465,-3.568190,-0.404225,8.731281,-0.406090,-5.313105,-0.367146,4.496398,3.694318,6.035807,-5.757168,-8.429654,9.475800,-2.631912,0.315020,-1.983645,3.052514,3.340553,7.164087,8.689752,4.087754,6.109249,2.559353,-8.461723,0.695578,-4.543062,-3.756710,-1.276654,-7.227433,-1.131208,-2.352077,3.507950,7.885626,4.659331,0.733233,-1.519996,-7.079773,-5.755731,-1.917221,-0.921486,1.133311,-3.895672,6.482000,1.390574,3.785479,8.697396,-7.988511,9.965940,-8.952993,-9.366223,0.157763,-7.568391,-0.666476,2.363223,2.304621,-5.042241,5.672796,1.222373,1.623724,-1.211150,-5.326308,-0.232370,-7.704450,6.839280,-5.899205,0.388896,-6.208478,-5.767560,-0.591804,-5.714031,4.843576,-9.390411,2.462078,-3.813825,-1.571577,0.345660,-1.080169,9.055225,-7.157371,5.282200,1.529353,-5.711888,2.412127,-3.051697,6.892507,8.634015,-7.392456,8.106811,8.516377,-8.382058,-3.257831,5.465398,-1.519946,7.641140,6.382839,5.317172,3.075576,-3.443682,-0.368369,4.800109,4.679546,7.398218,-5.474649,1.286952,-0.084422,-4.318782,-9.755964,7.458756,-0.186435,0.665178,-5.570553,-4.131991,-2.999556,-4.513593,-3.554641,-9.491309,-6.798600,3.614449,-0.967378,1.164873,-2.399028,4.413676,6.780018,0.123572,-3.133500,2.940614,-6.911063,-0.716161,-4.122693,2.794852,-7.671609], dtype = "float32")#candidate|379|(990,)|const|float32
call_378 = func_273_call(relay.reshape(const_379.astype('float32'), [10, 11, 9]))
call_380 = func_273_call(relay.reshape(const_379.astype('float32'), [10, 11, 9]))
func_332_call = mod.get_global_var('func_332')
func_335_call = mutated_mod.get_global_var('func_335')
var_384 = relay.var("var_384", dtype = "float64", shape = (882,))#candidate|384|(882,)|var|float64
call_383 = func_332_call(relay.reshape(var_384.astype('float64'), [9, 7, 14]))
call_385 = func_332_call(relay.reshape(var_384.astype('float64'), [9, 7, 14]))
output = relay.Tuple([bop_375,call_378,const_379,call_383,var_384,])
output2 = relay.Tuple([bop_375,call_380,const_379,call_385,var_384,])
func_388 = relay.Function([var_374,var_384,], output)
mod['func_388'] = func_388
mod = relay.transform.InferType()(mod)
var_389 = relay.var("var_389", dtype = "float64", shape = (10, 7, 9))#candidate|389|(10, 7, 9)|var|float64
var_390 = relay.var("var_390", dtype = "float64", shape = (882,))#candidate|390|(882,)|var|float64
output = func_388(var_389,var_390,)
func_391 = relay.Function([var_389,var_390,], output)
mutated_mod['func_391'] = func_391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1035 = relay.var("var_1035", dtype = "float64", shape = (9, 8, 6))#candidate|1035|(9, 8, 6)|var|float64
uop_1036 = relay.exp(var_1035.astype('float64')) # shape=(9, 8, 6)
output = relay.Tuple([uop_1036,])
output2 = relay.Tuple([uop_1036,])
func_1047 = relay.Function([var_1035,], output)
mod['func_1047'] = func_1047
mod = relay.transform.InferType()(mod)
var_1048 = relay.var("var_1048", dtype = "float64", shape = (9, 8, 6))#candidate|1048|(9, 8, 6)|var|float64
output = func_1047(var_1048)
func_1049 = relay.Function([var_1048], output)
mutated_mod['func_1049'] = func_1049
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1321 = relay.var("var_1321", dtype = "float64", shape = (1, 4, 3))#candidate|1321|(1, 4, 3)|var|float64
uop_1322 = relay.cos(var_1321.astype('float64')) # shape=(1, 4, 3)
bop_1324 = relay.minimum(uop_1322.astype('float64'), relay.reshape(var_1321.astype('float64'), relay.shape_of(uop_1322))) # shape=(1, 4, 3)
uop_1335 = relay.rsqrt(uop_1322.astype('float64')) # shape=(1, 4, 3)
output = relay.Tuple([bop_1324,uop_1335,])
output2 = relay.Tuple([bop_1324,uop_1335,])
func_1337 = relay.Function([var_1321,], output)
mod['func_1337'] = func_1337
mod = relay.transform.InferType()(mod)
mutated_mod['func_1337'] = func_1337
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1338 = relay.var("var_1338", dtype = "float64", shape = (1, 4, 3))#candidate|1338|(1, 4, 3)|var|float64
func_1337_call = mutated_mod.get_global_var('func_1337')
call_1339 = func_1337_call(var_1338)
output = call_1339
func_1340 = relay.Function([var_1338], output)
mutated_mod['func_1340'] = func_1340
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1777 = relay.var("var_1777", dtype = "float32", shape = (13, 4, 4))#candidate|1777|(13, 4, 4)|var|float32
const_1778 = relay.const([[[4.857661,-3.010378,8.686190,-2.454247],[-2.356862,-7.274361,-4.464454,8.057994],[-4.857301,-2.901405,0.409729,-3.550569],[4.098228,5.402983,-1.818955,-9.780809]],[[7.195394,-2.830431,6.726571,1.980102],[5.994646,0.513531,6.036802,6.177257],[-5.656050,9.860272,-1.807177,-3.064575],[-6.457862,5.557709,-5.776765,-9.135201]],[[-3.405789,-3.613933,-1.478926,0.508878],[-1.022576,6.331684,-1.145326,9.119418],[-4.831537,-1.598643,-8.370574,3.487333],[-4.135214,-9.770754,-5.640484,-8.118027]],[[7.756524,3.392375,4.948294,5.365339],[4.665064,3.151753,-6.030291,-5.126527],[8.731965,8.229792,9.151830,2.877449],[5.086381,-7.085715,-2.672626,7.680843]],[[-9.950181,3.203306,8.412471,9.644945],[3.045233,-7.013631,9.354903,0.836688],[8.191572,-1.296378,6.437527,-8.921776],[8.162189,-9.968761,-8.150882,-2.005466]],[[-0.607975,-5.665025,-1.528936,-5.246215],[-0.457043,9.228002,-8.101065,9.291595],[0.175551,-4.438520,3.944956,-7.003519],[-5.047871,-1.878749,-5.885980,0.194764]],[[1.371334,-0.407014,7.054056,4.155142],[-5.178326,0.639574,4.890292,-1.035895],[-4.332744,6.526719,-9.335936,6.224125],[4.038464,6.798072,-5.612657,-8.679882]],[[-4.868637,7.849395,-7.046942,1.492465],[-0.387591,9.937121,8.804626,-7.231478],[-5.114078,5.419653,8.810956,5.712984],[9.364128,-6.908228,2.840817,8.486282]],[[-6.372290,2.181388,1.517743,3.708777],[9.933854,-1.264043,-1.354418,2.727575],[-4.422941,8.003002,7.853015,-5.010972],[7.859343,-3.302234,-3.858252,-9.803429]],[[-8.399330,5.459617,5.095846,8.786883],[0.640473,0.855672,8.145593,-6.726044],[-8.266891,0.058257,2.107423,-2.530816],[5.027692,7.075722,-9.536837,-1.356185]],[[-5.569408,-2.738093,-5.809623,-6.507847],[9.685404,1.711988,-8.245169,8.467479],[-1.408008,-3.078581,-4.428303,-9.531091],[9.252045,3.625226,-4.841865,1.849559]],[[1.807760,-8.765081,5.116457,5.506916],[-2.004365,5.108719,6.442790,5.861885],[-5.880966,2.219563,-5.380865,-3.286995],[7.929879,6.841876,8.594225,-8.141690]],[[8.491666,-7.224950,-9.405917,6.707795],[-9.173774,9.171549,6.732819,6.800645],[0.097710,5.815425,6.140377,2.304813],[7.654776,-1.020271,8.223585,-4.958189]]], dtype = "float32")#candidate|1778|(13, 4, 4)|const|float32
bop_1779 = relay.divide(var_1777.astype('float32'), relay.reshape(const_1778.astype('float32'), relay.shape_of(var_1777))) # shape=(13, 4, 4)
func_1047_call = mod.get_global_var('func_1047')
func_1049_call = mutated_mod.get_global_var('func_1049')
const_1788 = relay.const([-6.674091,0.206829,-8.670291,5.698296,-3.503249,-3.640440,-2.356877,-4.261979,7.950596,0.572231,-5.360138,7.856851,0.396546,2.756383,5.870266,6.203518,-0.947023,-2.695886,8.369911,8.993801,5.344397,-9.729058,-7.704961,-2.560166,-6.001140,0.297594,2.679746,-3.288471,9.150784,-1.099922,1.718282,-3.285378,-5.783494,-2.937973,7.057734,4.769852,2.394252,-2.583763,-1.012037,-3.294815,-0.455521,1.341480,-2.543491,-6.796896,-5.892321,3.393740,0.830384,8.045624,-5.128780,8.637579,3.833741,-8.464426,-3.045075,-7.051178,3.706825,-4.131778,-9.850021,2.173582,5.643264,8.493806,-0.092560,2.404052,-5.839387,1.790970,0.060397,-9.637175,-5.116479,0.447297,1.600973,5.434810,-4.619593,0.285117,-8.253642,-5.672448,-5.670269,1.165100,-4.975896,-7.240152,9.682122,7.780087,8.662968,2.217803,-4.725139,-5.802357,-2.663117,-2.668273,3.621962,3.862032,-2.089398,0.551977,3.473876,-8.329510,-1.413128,3.766558,-8.600983,-3.847329,-9.432934,2.516428,-0.808536,2.522448,-1.736068,-4.261523,3.657035,2.748622,0.039416,-0.286430,3.926042,-3.349037,-6.288401,8.845530,-6.263843,-0.187084,5.720863,0.916607,3.122320,-1.061760,-4.256541,-8.417426,-8.219574,0.230078,-2.867560,6.509484,-9.530372,2.421210,8.300099,-7.001599,-3.689931,-3.626396,-4.505607,-3.011544,-4.790289,8.161642,0.079441,-9.556222,7.153563,1.219903,-8.238307,5.485796,-2.443140,1.251514,3.238138,4.605347,-3.385409,0.359757,3.480124,-4.721258,-1.417469,-1.271374,3.098529,-1.017945,-2.118408,1.709481,-4.177260,-1.160149,0.779013,-4.778992,3.730340,8.022816,9.658379,-9.793691,-0.873885,0.671470,1.062004,-5.546297,-2.672495,5.860467,-1.156917,6.620694,-6.732696,3.369954,2.631307,-9.194032,7.172647,-7.571950,9.609866,0.309119,-2.728986,-7.537857,-6.102168,-6.837333,9.084899,5.950643,-2.405664,-5.265383,-0.027071,8.384991,1.394981,-1.851681,2.790001,-3.117053,-0.517073,-8.944551,-1.268047,-1.524598,9.345341,7.175773,-0.139520,-2.143749,-2.986958,9.407170,-4.189356,-0.594953,4.435101,-8.552372,-5.589044,4.074972,-8.816930,9.285043,-3.611080,3.799578,-6.397828,4.175218,1.387870,-5.701882,-7.071370,7.978203,-4.569793,3.143679,-0.745777,-6.149253,-9.198429,2.621637,7.888955,9.465544,-0.215645,3.686927,9.087894,-8.386385,-2.149325,-5.603348,-6.600074,9.351484,-4.856723,-0.970273,-9.581063,4.776693,-3.667725,8.141188,3.378300,-7.402233,2.091647,-6.135183,-8.018896,3.398673,4.274240,9.781806,3.340356,-2.295644,5.991142,1.436523,3.013940,-7.852963,9.603955,2.921437,-9.123409,0.937258,9.442870,5.956948,-4.186946,-9.264260,-0.060552,1.045865,-0.604487,5.534356,0.134323,0.944365,9.963722,-1.944242,4.135139,6.580866,2.557209,6.919279,6.262325,-7.061619,-8.326220,2.170641,1.474583,-6.888194,8.577289,9.397301,-3.924566,5.208355,7.113546,0.529359,-9.174126,-2.447132,3.604720,-3.977934,-9.740406,-9.005119,-4.205232,-5.882218,-5.995104,0.877380,-9.356000,-2.790789,-2.387263,0.285668,-1.343038,-4.555886,0.533862,-2.482013,6.646719,4.635475,-0.057211,-0.007045,-6.434370,-8.429210,8.767574,-3.089552,-6.303078,0.900968,-2.663268,-7.243377,4.981000,0.953337,-0.270564,5.130160,4.523538,8.563893,-9.381855,-5.680199,-9.577235,9.401373,-8.928201,-6.124749,4.849187,9.462416,-1.236803,-0.278261,0.274321,-1.395645,6.717024,1.111293,1.244392,-6.742070,-9.281269,-2.354490,8.409291,-1.962944,8.926943,6.524243,-4.789797,-1.364826,-4.455907,-0.083256,2.966713,9.818777,-8.209815,2.765305,-8.107551,7.847823,-0.382739,2.625522,-4.616142,6.115914,-5.209919,-7.481648,-4.877089,0.436164,6.952436,-8.542514,1.857093,5.231796,-0.185088,7.128131,8.076315,0.533333,-2.159719,3.257284,-9.770281,-0.639910,4.937446,-0.037172,7.724606,7.417486,5.906615,0.086892,4.202757,3.123435,2.173007,-3.697602,0.278741,-2.118698,4.568546,-9.605583,5.703043,-3.836474,7.034173,-4.881757,0.839978,0.761510,8.994666,0.626394,-2.107766,-7.590634,7.444742,-1.526555,-7.317705,-3.100569,-5.359160,5.710936,6.777435,2.804657,-9.484129,7.997015,3.446904,0.976664,-9.777861,4.015256,8.010751,-6.690380,6.154201,6.604277,-3.820532,1.231333,3.217519,-0.081272,-1.527335,2.725863,6.476475,-3.321716,-4.067712,6.405436,-0.061148,7.629340,-6.431477,-3.360633,-7.052310,8.580370,7.689990,3.959352], dtype = "float64")#candidate|1788|(432,)|const|float64
call_1787 = relay.TupleGetItem(func_1047_call(relay.reshape(const_1788.astype('float64'), [9, 8, 6])), 0)
call_1789 = relay.TupleGetItem(func_1049_call(relay.reshape(const_1788.astype('float64'), [9, 8, 6])), 0)
bop_1793 = relay.power(const_1778.astype('float64'), relay.reshape(var_1777.astype('float64'), relay.shape_of(const_1778))) # shape=(13, 4, 4)
func_1047_call = mod.get_global_var('func_1047')
func_1049_call = mutated_mod.get_global_var('func_1049')
call_1798 = relay.TupleGetItem(func_1047_call(relay.reshape(call_1787.astype('float64'), [9, 8, 6])), 0)
call_1799 = relay.TupleGetItem(func_1049_call(relay.reshape(call_1787.astype('float64'), [9, 8, 6])), 0)
output = relay.Tuple([bop_1779,call_1787,const_1788,bop_1793,call_1798,])
output2 = relay.Tuple([bop_1779,call_1789,const_1788,bop_1793,call_1799,])
func_1804 = relay.Function([var_1777,], output)
mod['func_1804'] = func_1804
mod = relay.transform.InferType()(mod)
var_1805 = relay.var("var_1805", dtype = "float32", shape = (13, 4, 4))#candidate|1805|(13, 4, 4)|var|float32
output = func_1804(var_1805)
func_1806 = relay.Function([var_1805], output)
mutated_mod['func_1806'] = func_1806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2161 = relay.var("var_2161", dtype = "float64", shape = (2, 6, 8))#candidate|2161|(2, 6, 8)|var|float64
uop_2162 = relay.asinh(var_2161.astype('float64')) # shape=(2, 6, 8)
func_273_call = mod.get_global_var('func_273')
func_276_call = mutated_mod.get_global_var('func_276')
const_2168 = relay.const([7.690529,8.532810,2.849540,1.295110,8.163738,9.475033,-7.476718,-8.413730,5.532725,1.265049,-3.271045,7.488069,1.930410,-6.074228,-2.383833,0.242028,2.571451,2.398012,-9.746923,-9.112915,-1.502205,-1.193349,3.076473,4.720980,7.166796,-4.057166,7.152711,6.371425,-6.867059,1.212203,-5.279201,0.600848,9.083142,1.449895,0.686117,3.475300,6.786601,4.514220,1.288148,2.524169,7.185333,-2.885000,-1.449576,3.190341,3.355240,5.404810,1.550554,-2.632991,5.046487,0.878341,3.062229,-3.690991,-0.209555,7.983098,-1.919469,-6.548393,-3.247712,-7.600674,-3.751677,-6.845092,-5.699537,-7.352070,-1.084360,9.221338,-0.440936,-1.017531,3.092965,-9.314693,-4.062004,0.886547,-4.913616,-5.814555,8.926994,1.028397,2.675965,7.208330,6.227492,4.161672,-0.374272,-8.125036,7.758202,9.894028,1.675753,5.559367,7.970472,4.045067,-7.685547,5.928857,-2.424939,-1.542481,-9.871391,-3.085512,1.434373,5.644946,-6.038777,-9.105387,-5.893545,-5.461540,6.516598,-4.550887,4.460108,-2.617722,2.888120,4.704235,3.981373,7.400362,2.018595,9.872016,-6.708260,7.142589,-1.091988,-4.725700,4.682414,8.344040,-3.213523,0.459076,9.339403,-8.828493,5.865830,-7.245477,1.270572,-7.245313,7.243000,8.365111,-7.578859,-8.208697,-2.944410,-7.092623,-6.758787,-2.887850,0.312208,-0.575645,1.898978,4.232420,-4.561998,3.525809,-0.124671,-7.854840,-8.750442,8.753390,-6.246749,4.860319,-0.037751,-9.597619,0.848883,-0.281229,2.531870,1.120885,5.608562,5.546352,2.607167,9.495250,1.074183,9.872960,7.815831,-4.284675,8.023395,-1.927065,0.600105,-1.282576,0.589894,5.766520,8.582195,8.212872,-9.542305,-7.555929,-6.241006,5.010899,0.436215,7.303672,0.104350,3.960796,6.094866,-7.460886,-7.532960,-4.881804,5.376749,-9.049201,-9.627475,3.673573,8.985750,-7.194485,6.360894,5.883183,9.919366,4.536491,-3.426104,1.049549,-2.125315,5.448660,-7.001766,-1.964780,8.765938,-0.677999,4.600553,-6.611599,4.717769,-5.989192,-6.908016,2.402447,-1.842018,-4.513720,7.475970,-9.928537,-0.703982,2.191291,8.785120,-7.978698,-8.502167,7.058400,4.849192,-7.785331,-8.426453,0.010330,-4.570294,-4.283197,-3.394749,-7.900580,-8.954253,2.685172,-6.297821,6.467302,1.854321,-9.393755,-5.990346,7.007797,-9.611575,-8.142518,-5.215747,3.530231,0.374214,4.816059,8.440894,9.721661,-1.189716,-2.734350,1.412193,2.633483,0.014260,9.022515,4.093134,4.710638,-0.137740,-1.186648,-4.442263,-1.898891,-9.159590,0.714267,0.715842,1.799506,8.326413,-6.895039,-4.394944,0.704472,3.347401,3.069901,0.421482,-8.360238,9.863097,-5.557329,7.328388,5.278449,-3.028146,0.783779,5.698589,-8.490662,-7.063625,-9.769143,-3.880284,-2.951780,-9.798188,-1.116273,6.957359,7.932652,3.409008,-2.289432,-1.182499,-9.462219,-6.696242,-7.913227,6.342634,-8.661501,4.829000,-1.220819,0.883006,-3.154385,-8.002107,0.796685,7.219683,-5.257276,7.649160,8.749411,-1.587668,-3.452977,4.769933,5.792965,7.605242,-9.252282,-8.459895,-6.380072,-6.762084,7.928986,3.466010,-9.906889,7.062409,-5.447881,6.975030,1.707592,9.396605,-7.670466,-9.704767,4.278249,6.661046,6.935695,-3.047901,7.734918,-4.731261,-7.965223,-2.474262,-4.493789,3.115235,-1.253628,8.650050,5.989642,6.930620,3.764743,7.193710,-2.041939,3.866044,-5.013449,2.642952,-1.654372,-8.705652,-5.876189,2.418099,-1.182749,7.088216,1.977331,-8.113291,0.478593,-9.054381,-3.843391,-5.025206,-1.837939,-6.984826,2.377181,6.282094,4.500174,-1.200559,-9.350426,-3.533507,6.622404,7.181847,-1.394136,4.779778,9.235227,7.415142,7.017193,-7.991264,1.513559,-3.413557,7.839247,-5.861088,3.429635,-9.286969,-9.599709,-8.137058,-0.889618,-5.966850,-4.949927,-4.585296,4.582960,2.920982,9.364509,-2.176843,-2.137960,-9.814509,-2.647389,-4.068011,4.536861,3.051293,4.323316,5.386723,1.598812,3.335414,0.572754,-2.686293,9.469906,6.649426,0.628585,7.604242,-6.098751,5.211500,-8.852079,-7.326346,-4.903374,3.993411,-4.129769,8.022661,-1.873344,1.759239,8.285057,-2.771659,3.496501,5.781560,5.292154,-4.449425,-5.746439,3.805486,7.503294,8.781970,6.724877,4.108707,8.236738,-7.688257,7.612351,-8.555446,1.049584,2.750064,-8.469439,4.232119,5.381813,-7.021149,-4.342443,-6.881997,5.434625,1.439925,-1.697704,-2.489889,-6.347984,1.926512,-9.887573,-6.860643,-6.943800,-1.101016,-7.636211,9.644005,6.321743,-5.411437,8.312106,7.344008,-8.600355,6.095574,-8.026357,-9.716959,-2.135922,-1.912063,3.955155,-8.089069,9.427094,5.575689,1.294868,5.558556,-5.055623,-2.811930,6.224739,-7.721220,-4.535002,-7.796208,-2.701256,5.715169,0.838031,3.304899,-0.871459,-7.405473,9.261441,-1.798239,-3.531187,0.366276,6.372496,-3.234651,-1.084493,-5.980892,7.739791,8.848795,1.605991,-6.166660,-2.398598,-8.762507,-3.912297,-2.971873,-4.434174,-2.265812,6.349846,2.784835,7.998726,3.427147,-9.914968,-0.662327,-6.830567,4.062077,6.333552,-5.232602,-2.757546,-4.934293,-2.937589,-7.092584,0.307132,5.233594,-6.252113,2.651593,2.364964,5.011901,-7.669199,8.791400,4.671924,4.474082,-3.079792,4.777437,-1.149043,8.249072,-1.443704,3.458046,-3.886256,-4.230695,8.110903,-6.189142,-7.710715,-9.322316,-8.006736,-6.243579,0.412712,-5.499797,3.670380,-5.271049,8.199326,-1.530474,8.740326,-8.544011,5.291657,-8.608179,-8.747112,2.663721,8.807656,-8.204079,0.451024,5.865351,-7.084737,-1.221945,9.746364,8.004810,0.332035,2.766846,0.246695,-7.409866,-5.603555,6.234276,-0.755872,-5.817284,-4.032242,9.931788,1.635941,-5.415262,-5.697228,1.882556,1.274627,-3.586561,4.808751,0.720456,3.524665,8.977530,0.765781,5.685433,6.471377,2.057549,-8.419907,5.590727,3.376760,7.951020,-3.969261,-2.952213,9.992786,-1.959831,-4.706541,1.748849,-4.742930,8.942324,5.744448,7.206226,-5.086271,-1.454944,6.993125,-2.909335,-0.885102,-7.900541,4.060512,-6.243165,3.458710,5.456854,3.361526,-8.261119,0.393583,2.240744,-7.512997,2.843979,6.684705,8.493034,9.764479,8.373730,6.470900,-8.528076,-4.725435,1.549009,-6.335278,2.395092,4.908617,0.502183,-4.470149,3.132742,9.871425,6.944644,-5.913351,8.880836,0.862593,2.852004,-2.906816,0.946312,4.426378,-6.963246,7.312310,6.099824,4.745099,4.999980,2.390788,-1.065204,8.342574,8.131391,-7.271363,4.868525,8.349280,-6.537305,-1.063135,8.922860,-6.491358,1.155393,8.755680,-5.726274,3.423632,-7.103959,-1.597064,8.749554,8.281547,-3.729407,0.735127,5.101940,-4.844197,-0.329664,5.187460,-2.705064,-5.960019,6.796337,-0.899301,-5.694246,5.576624,-1.163484,-4.738789,2.806257,-1.943889,3.810512,4.043745,8.490540,1.709886,-0.658820,0.444680,-2.953177,9.894825,6.054072,-5.366593,5.325143,8.471929,8.977768,-6.977601,7.623851,-2.296058,-7.120492,8.964227,-4.839387,-2.047303,6.333072,2.560221,5.338492,7.854769,9.736400,-9.750347,6.472951,-4.384049,7.684884,6.731280,-5.535262,-0.476136,2.457528,-5.846550,-2.054587,-9.937881,-0.211990,0.685010,-9.215260,-3.319513,-3.475310,0.779686,-6.450726,4.140897,-8.203261,-3.629176,-6.993911,1.571443,-9.547378,5.426864,-6.169576,-3.156360,-0.954809,-7.822098,-9.017471,-9.035997,-2.449968,-4.173353,2.538664,-6.020112,-2.059566,-2.780466,9.087038,-2.868461,7.718186,-4.025529,-6.453253,-6.543642,9.892463,2.716491,-3.144581,-8.827689,8.600407,7.247941,-2.338532,-1.218563,7.049893,-5.700172,5.613389,-8.342377,-9.983776,-0.973925,-7.005803,8.023697,-2.327476,4.501647,-3.231643,3.184521,5.525292,7.052308,-7.232114,-2.242284,-5.680140,4.659804,-8.211582,9.242157,-1.673361,0.344570,-8.485495,-8.819557,9.909243,2.537157,-9.906136,-7.736954,-6.384921,9.318035,3.789402,-5.047129,-2.224334,5.774964,3.894479,-2.715508,8.408758,-4.206411,-3.167596,-0.652123,3.593318,-3.143585,-7.034658,0.868867,-4.275520,1.609862,-6.385414,0.320517,9.779991,7.275078,6.691249,6.483619,8.853438,9.446804,-5.231812,-7.458283,2.505480,5.192997,6.570851,-6.462085,-7.616518,7.582136,2.175896,9.821704,-9.499712,-2.245350,-8.393357,-9.388433,6.265333,-8.046941,3.103780,8.569075,9.899000,-5.411336,2.400766,-7.751442,-8.676487,7.636173,-7.952684,4.025280,8.391136,6.371727,5.234745,-6.930285,4.182502,-6.706529,7.354607,0.929772,0.838659,2.871575,8.673057,-0.259444,4.791164,2.326188,-0.474224,-8.931762,-8.550337,-7.752435,3.768950,8.945838,7.675915,6.090135,8.715219,8.219904,-6.687381,-4.537965,-0.857594,-5.169614,-0.579244,8.842307,-4.221045,-8.581212,1.164424,-9.750353,0.193735,5.898234,1.578216,7.189218,-8.024909,7.182650,0.846813,-2.569387,-9.068253,-7.605242,-7.581135,-8.656778,3.584233,-6.839874,4.334825,-3.479639,-3.154394,6.790556,-0.607026,-4.048819,2.306380,-6.910146,9.846717,-5.040486,7.410441,-4.653948,-6.682397,-6.434938,-6.893442,9.192347,0.476407,-4.010739,4.622116,0.529331,4.950197,-0.794188,-9.768179,4.294522,0.424234,1.334454,-2.670557,1.070560,-2.268813,2.522878,-9.895793,-4.116960,-2.575320,0.486857,-6.949399,0.662043,-0.263794,-7.331642,-6.404453,4.495209,9.068877,-7.632122,-6.705977,1.169290,7.593113,0.179540,7.215862,7.091787,3.018185,8.493379,-0.848635,3.766823,2.122935,3.825639,3.020710,4.614234,6.473434,6.430955,3.748121,0.262169,5.826503,-8.406116,-6.471384,-7.519244,-7.656363,-2.333029,-6.039504,-5.778538,2.902707,-3.491792,-6.765386,-4.021924,5.104214,1.381086,-5.957187,-9.122377,-2.502452,-5.912396,-9.696334,-0.103358,-0.440550,5.840271,-9.269723,-9.344282,4.650398,-9.928199,8.607924,-9.380133,-3.589501,7.701740,-4.604065,-9.906716,2.447880,4.413361,8.752585,-9.742828,-6.418326,5.487142,8.569127,9.201264,-9.910512,-2.403033,-2.194305,-8.009247,8.056081,8.522867,3.374449,-2.817332,-7.603460,6.726635,9.017630,0.157948,9.945195,-5.369746,4.286591,-1.023504,3.894507,9.947581,4.555792,9.652255,1.569712,-7.366699,-2.151468,0.414664,-5.733797,0.985987,6.948687,-6.647041], dtype = "float32")#candidate|2168|(990,)|const|float32
call_2167 = func_273_call(relay.reshape(const_2168.astype('float32'), [10, 11, 9]))
call_2169 = func_273_call(relay.reshape(const_2168.astype('float32'), [10, 11, 9]))
var_2170 = relay.var("var_2170", dtype = "float64", shape = (2, 6, 8))#candidate|2170|(2, 6, 8)|var|float64
bop_2171 = relay.left_shift(uop_2162.astype('int32'), relay.reshape(var_2170.astype('int32'), relay.shape_of(uop_2162))) # shape=(2, 6, 8)
output = relay.Tuple([call_2167,const_2168,bop_2171,])
output2 = relay.Tuple([call_2169,const_2168,bop_2171,])
func_2182 = relay.Function([var_2161,var_2170,], output)
mod['func_2182'] = func_2182
mod = relay.transform.InferType()(mod)
var_2183 = relay.var("var_2183", dtype = "float64", shape = (2, 6, 8))#candidate|2183|(2, 6, 8)|var|float64
var_2184 = relay.var("var_2184", dtype = "float64", shape = (2, 6, 8))#candidate|2184|(2, 6, 8)|var|float64
output = func_2182(var_2183,var_2184,)
func_2185 = relay.Function([var_2183,var_2184,], output)
mutated_mod['func_2185'] = func_2185
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2498 = relay.var("var_2498", dtype = "float64", shape = (8, 14, 14))#candidate|2498|(8, 14, 14)|var|float64
var_2499 = relay.var("var_2499", dtype = "float64", shape = (8, 14, 14))#candidate|2499|(8, 14, 14)|var|float64
bop_2500 = relay.floor_divide(var_2498.astype('float64'), relay.reshape(var_2499.astype('float64'), relay.shape_of(var_2498))) # shape=(8, 14, 14)
func_1804_call = mod.get_global_var('func_1804')
func_1806_call = mutated_mod.get_global_var('func_1806')
const_2508 = relay.const([[8.995460,8.313522],[4.882779,9.931484],[-4.492048,7.706603],[-9.470576,-6.498756],[-9.707549,9.064705],[-9.471935,-5.149392],[8.456616,4.448098],[-3.628028,6.265052],[-0.318190,6.888645],[-8.182171,-9.313280],[8.792662,-6.883754],[-0.603017,-0.865209],[-0.563088,6.548604],[2.756534,-8.045989],[2.953303,-7.920652],[-6.066248,6.952500],[-7.310100,3.839668],[2.715809,-1.283260],[3.991974,-6.213576],[2.836030,-4.262939],[8.852212,-1.365768],[1.551194,3.547625],[6.681270,-1.421278],[3.368122,-9.060031],[-7.608194,-3.159206],[3.293840,-6.652610],[5.964233,-3.268650],[9.263653,9.257528],[8.665033,1.914438],[-8.324534,6.223718],[-2.352392,-0.419368],[-1.342847,-8.720939],[-9.593500,-4.583398],[8.478999,-6.609402],[-3.459993,4.924003],[2.917427,-9.553231],[-7.576252,6.362841],[-8.496966,-5.872814],[-7.114241,-9.663447],[1.875250,6.661862],[-9.030312,8.861480],[5.565433,-9.899906],[8.055101,5.854186],[-9.647516,5.605862],[-1.763054,-7.153683],[1.181447,7.925741],[8.703138,-2.519807],[-0.082761,-7.096856],[-3.307489,-9.247893],[2.311740,1.636963],[-5.935248,4.518693],[-5.291384,-8.069238],[9.658873,9.484913],[9.882759,-3.962795],[-0.465726,-7.100841],[-0.300725,5.002496],[-1.306764,-4.344084],[9.501336,-1.784624],[3.803949,-3.826542],[-0.233102,-7.960877],[8.727203,7.375855],[-2.403835,5.584910],[-2.424844,-5.477973],[-2.991020,0.446057],[3.927804,-5.604950],[9.138081,0.179124],[-9.695106,-4.387761],[-4.423789,-3.213283],[-9.680954,-6.581272],[5.298570,-9.777860],[3.165575,2.671289],[-2.452621,2.518933],[-1.299134,-2.903306],[-1.698237,-5.284254],[-7.635420,-7.092864],[0.086287,-1.436691],[-4.934002,7.889174],[9.622079,8.220964],[-8.446661,-6.048483],[-0.218592,-0.700392],[-7.675625,-7.370295],[-0.049031,6.720887],[-2.109704,6.285120],[7.888536,7.034202],[5.557768,6.752972],[-0.484677,7.636340],[9.751070,-5.838132],[4.994125,6.811236],[9.187359,4.649613],[-2.006384,-8.787393],[-7.752941,8.686437],[-6.790278,4.261768],[8.805612,-9.568495],[9.256547,-6.023534],[6.945300,-1.100132],[1.029783,-8.869869],[-1.982776,0.837649],[4.223710,2.625495],[6.679269,2.017756],[0.782869,2.392473],[7.807621,0.238215],[-1.421244,-7.343658],[-6.376688,-4.360302],[-6.788388,-8.619418]], dtype = "float32")#candidate|2508|(104, 2)|const|float32
call_2507 = relay.TupleGetItem(func_1804_call(relay.reshape(const_2508.astype('float32'), [13, 4, 4])), 4)
call_2509 = relay.TupleGetItem(func_1806_call(relay.reshape(const_2508.astype('float32'), [13, 4, 4])), 4)
func_1804_call = mod.get_global_var('func_1804')
func_1806_call = mutated_mod.get_global_var('func_1806')
call_2510 = relay.TupleGetItem(func_1804_call(relay.reshape(const_2508.astype('float32'), [13, 4, 4])), 4)
call_2511 = relay.TupleGetItem(func_1806_call(relay.reshape(const_2508.astype('float32'), [13, 4, 4])), 4)
output = relay.Tuple([bop_2500,call_2507,const_2508,call_2510,])
output2 = relay.Tuple([bop_2500,call_2509,const_2508,call_2511,])
func_2520 = relay.Function([var_2498,var_2499,], output)
mod['func_2520'] = func_2520
mod = relay.transform.InferType()(mod)
var_2521 = relay.var("var_2521", dtype = "float64", shape = (8, 14, 14))#candidate|2521|(8, 14, 14)|var|float64
var_2522 = relay.var("var_2522", dtype = "float64", shape = (8, 14, 14))#candidate|2522|(8, 14, 14)|var|float64
output = func_2520(var_2521,var_2522,)
func_2523 = relay.Function([var_2521,var_2522,], output)
mutated_mod['func_2523'] = func_2523
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2560 = relay.var("var_2560", dtype = "float32", shape = (11, 13, 8))#candidate|2560|(11, 13, 8)|var|float32
var_2561 = relay.var("var_2561", dtype = "float32", shape = (11, 13, 8))#candidate|2561|(11, 13, 8)|var|float32
bop_2562 = relay.equal(var_2560.astype('bool'), relay.reshape(var_2561.astype('bool'), relay.shape_of(var_2560))) # shape=(11, 13, 8)
var_2565 = relay.var("var_2565", dtype = "float32", shape = (11, 13, 8))#candidate|2565|(11, 13, 8)|var|float32
bop_2566 = relay.multiply(var_2561.astype('int8'), relay.reshape(var_2565.astype('int8'), relay.shape_of(var_2561))) # shape=(11, 13, 8)
func_2520_call = mod.get_global_var('func_2520')
func_2523_call = mutated_mod.get_global_var('func_2523')
const_2573 = relay.const([-2.317755,8.778089,9.179938,3.656455,-8.081008,6.641629,-3.762419,7.190591,-9.120993,-9.427318,3.335868,-3.536062,-2.658968,0.573611,-0.500414,-6.959600,9.288021,-2.008625,-3.970175,-7.413893,8.188202,-8.759055,3.032897,0.333751,0.277478,1.421080,1.240107,9.831183,-8.470181,-4.915886,2.252788,-4.633210,-5.669441,4.773537,-6.261358,9.242745,-1.313709,6.685560,6.576128,9.120689,-8.167251,-3.622169,-7.022344,0.873917,-5.542549,9.310730,-1.405494,-0.354907,6.987295,-7.431203,-4.450028,4.549064,2.160059,-5.225543,-4.677953,-6.473700,4.508511,-2.497814,-6.170193,-8.086220,3.216728,-9.079880,2.268720,-0.950825,-6.026929,-5.160333,0.245454,7.915505,9.298206,9.428870,8.763256,-4.725709,-5.113579,6.992802,7.328852,5.318457,6.562419,-9.615609,6.582198,5.825201,2.673521,-9.698292,-5.275878,-3.189067,6.871537,0.775111,5.846897,6.006446,-2.905142,-0.607341,1.197185,3.363553,4.028741,5.293168,-6.632267,-5.395991,2.344335,-2.469414,7.216942,3.680654,4.745717,3.465967,-5.232177,-5.092384,9.082411,-5.654919,3.210724,-0.104077,-8.214994,3.801432,-4.779021,-9.270414,-2.192380,9.037030,8.084364,-2.244222,9.713464,8.136463,2.387238,1.178108,-8.909634,4.211665,1.706290,-3.444808,3.687147,-9.935360,-4.380936,1.578263,-6.026097,-3.055526,5.723385,-8.428228,-1.078945,1.801890,6.130033,6.642294,-3.399504,8.875566,-2.547875,7.676920,7.773998,8.499975,4.863258,-7.460372,-2.738706,9.276464,-2.943372,-7.555106,-3.476045,-4.515580,-6.658551,7.969776,-9.092759,-9.268961,5.893219,-1.041422,-6.716697,-2.698981,6.836808,5.477635,7.004373,9.489241,-6.013174,-4.358684,3.900436,-9.558204,-9.006446,9.993493,2.722594,8.322829,3.674260,3.834408,-8.525260,3.336374,7.332588,1.242939,-5.801999,-3.495793,-3.552230,4.721371,7.829324,-0.815646,6.762481,-5.081266,5.258290,2.368181,1.200927,-7.838073,-7.266611,0.621588,-1.768764,-4.500984,-7.216390,7.978569,-4.985314,-4.958537,3.585368,4.505307,-6.180147,3.128269,-9.140797,4.384772,8.326511,8.033282,7.285155,0.503815,0.020035,-5.163816,-7.526328,-7.215700,-0.611347,-4.518911,9.223860,7.204902,2.836132,-1.241502,8.466616,-0.831169,6.125117,7.754607,-4.044921,3.455303,-4.818355,1.652807,2.102650,4.193282,4.328610,8.405653,-5.113120,-9.735534,4.488686,9.051246,-1.335432,-6.146708,6.016145,3.334603,-8.252093,6.073781,-2.926512,-6.734391,-9.531155,-8.665524,5.867538,0.056058,-3.217707,-7.791183,-8.767838,-8.181333,8.792905,-5.481757,-7.034431,-8.819963,-0.388257,-6.041101,2.865532,8.947676,-9.891212,6.411233,1.071663,4.680278,-0.765641,-9.985981,3.711857,-7.221955,9.325655,2.923470,-4.352312,-2.258106,1.621856,0.114524,1.353087,9.848597,-3.451222,-3.294171,4.767275,3.365856,7.273978,-3.745828,6.333135,4.339590,9.245053,-3.007065,-0.667375,9.467399,3.945969,-9.213820,9.012921,4.986277,-2.211716,7.277983,2.915159,-7.104759,-7.015302,-7.438206,8.957913,-6.636491,-8.182231,-3.795980,-7.497626,7.229603,-2.916569,-7.331795,7.397692,-0.222267,9.384879,8.308282,-4.783610,0.449345,-6.407848,-3.557080,8.895396,-3.368893,-4.389473,1.403964,-7.218293,-1.989055,-1.244872,-7.665752,-4.173800,-1.818539,5.242926,9.438807,5.067929,-7.861296,-9.431624,9.893135,-3.474019,6.443242,-9.815205,2.825784,6.397692,9.199714,-1.736730,8.256868,-2.172876,2.400635,8.827437,-2.544892,7.010345,-7.544040,3.552112,-2.866022,-5.800623,-7.773944,-4.794175,4.434803,-0.200365,2.947171,5.899930,3.175833,-4.883984,6.821254,1.322519,-0.606474,-4.621167,-6.773496,-3.434572,9.249993,5.979490,6.537327,2.757717,6.801912,-5.013717,3.791577,-7.088302,6.694830,8.853129,-4.239804,-7.547256,6.771803,-2.234059,8.327472,-0.437885,5.464317,-1.775907,9.757411,9.087458,5.933644,-9.183272,0.120253,-8.022656,0.992476,2.943935,-7.875683,4.039714,5.711143,-8.959018,-9.387676,3.406809,-6.842758,5.028504,-7.095329,-6.287901,-2.479338,-9.845812,3.166056,-0.954784,-6.441658,4.128618,-6.174343,-8.249423,-9.032436,-2.528180,-4.045885,-9.307445,8.572447,-6.928541,-2.110491,-2.726142,6.955726,4.231143,6.713584,-9.820671,6.293005,-5.985757,-5.892121,2.574593,8.043687,2.936033,-4.452981,-4.002961,7.935307,4.049384,-8.460633,-1.367754,-2.566534,-2.562014,-7.755667,3.626857,-6.012701,6.237357,-1.221043,7.440611,-5.181574,3.265933,-2.307951,-9.383560,3.331871,-7.072967,4.753805,8.530409,-0.697678,8.145221,-2.712824,-1.770173,5.504979,6.411732,3.689112,6.356268,-4.670792,-7.741832,9.214212,-0.825602,-3.984541,-2.706244,-7.506479,8.606912,8.802129,0.111550,4.934157,6.774266,8.522001,-7.270623,8.112051,-2.198593,1.810551,4.792232,4.726022,0.126908,-1.949686,-4.408050,8.067719,7.150379,-9.686070,6.306106,-4.528317,-7.011444,3.143798,-2.893673,1.985466,-2.477915,5.932120,3.432540,-6.576649,-6.961602,-5.743801,3.978139,-9.285901,-3.672053,9.587876,-3.277994,-3.811597,6.161944,-3.338265,5.783747,-4.073485,-3.936308,0.107127,-0.148729,-4.878414,-9.849799,8.701903,-7.006241,-1.405764,2.918469,-0.711980,3.048916,-1.182935,2.567468,6.576456,-6.804524,-6.883780,0.860737,-9.661526,1.558125,0.329194,9.595530,6.715710,-6.607039,4.693398,8.252099,-7.467123,-0.029996,1.289395,6.197784,-2.723352,-5.604937,-6.589930,-2.175354,-0.722152,3.930602,1.991439,-7.581870,-0.540001,-9.813772,-0.813878,-9.309807,6.121522,-3.202079,-3.995173,9.616451,2.223536,0.761240,2.663906,9.145243,-6.413575,9.680517,6.658325,-1.090853,2.005182,6.605366,8.227568,-1.218576,9.268452,5.926899,-9.524965,-5.785444,6.184230,6.650663,-4.481600,-6.707640,1.429173,-1.160700,5.271558,-3.847140,-3.318392,0.936382,7.272149,-8.213253,-0.049460,-4.704876,-5.720431,-5.340387,5.682520,-1.112248,-0.837441,-3.808766,9.565329,1.034269,8.207841,9.414378,8.687461,7.974137,-0.007124,2.008853,-1.229369,1.553507,2.180172,-4.908377,0.646019,-5.022129,4.629928,4.601104,6.640137,2.348494,-3.221180,-7.033227,8.658996,7.990742,8.529705,-3.180687,-2.038773,-8.538156,-6.074612,-4.278823,-4.480700,1.011596,8.120648,-1.866704,9.966460,-0.849107,-2.001643,-2.411183,-9.437155,8.782144,-3.199221,7.505386,0.239085,-3.518363,-3.832204,6.614259,3.076311,-9.426340,9.428923,-3.280001,8.575234,-0.004474,2.920470,2.402974,-7.015869,-3.586443,3.324611,-2.124409,0.768135,-7.078333,1.961078,-5.726748,-4.604151,-8.009628,4.745390,8.460019,6.033451,-4.879875,-2.975005,-2.164233,-3.716763,8.815873,7.282023,-7.480691,9.405649,-6.741126,-8.595193,7.142390,-5.823676,-9.384859,-0.425247,-3.027539,-1.468904,2.959090,-8.851106,8.208329,-2.891296,-1.169855,-1.389369,-9.413776,3.928536,8.971896,-2.107685,0.140211,-3.346182,-9.939652,6.604207,-9.008990,-3.105082,-7.638012,8.985991,0.044690,-5.300140,3.655242,5.033858,-4.380119,0.975785,-7.787373,5.404851,-4.866065,-8.006011,-6.004507,5.915975,7.263954,-0.492897,-5.694338,7.141899,8.269041,-8.784433,7.336401,8.166829,-6.117475,9.930101,-6.203053,-1.767994,-6.464135,7.643064,-2.883352,2.330387,-6.899051,7.110411,0.537493,8.398418,7.572525,-6.375758,1.872115,-9.748924,-3.404696,-3.436958,-9.357776,9.500100,3.163291,-0.382633,8.495738,0.397201,6.855082,-5.868651,-4.902663,-0.822655,8.383400,-5.717044,-8.859367,2.763312,-7.604654,4.978262,-3.474098,7.942217,9.200262,-5.865543,0.766448,5.625869,-9.175199,2.976655,9.615860,-7.770896,-8.247431,2.528755,-3.277088,7.910471,-8.776071,6.838572,4.654642,3.106950,-6.847836,8.521996,9.587726,8.111086,7.807391,-6.577616,-6.485990,8.860358,1.663914,8.212344,6.927250,-8.209692,6.884129,1.018315,-7.696713,5.985926,-5.458567,-0.457008,8.428503,3.121620,6.530839,4.452994,7.979213,-7.174097,9.257425,-4.069114,2.263650,6.502180,-6.686512,8.396891,9.685409,-5.919686,-3.078924,9.075677,-4.215430,-1.596181,2.485173,4.013636,-1.138279,7.492724,4.093073,9.630235,6.616878,3.984383,8.367598,-6.470227,5.046317,-7.702450,-5.587666,-8.351122,-6.372027,-1.771158,-5.691467,-0.434515,8.444538,7.208513,6.547058,3.800170,7.526963,3.135234,-5.253452,1.567425,-9.838513,1.250023,8.286086,9.525102,-9.206221,6.570616,5.101260,3.085101,-6.383909,3.021498,9.910599,-9.085517,0.875662,1.521057,6.433877,7.138201,-2.389038,-3.380657,-1.332958,-4.912225,5.694161,-7.435861,7.356379,-3.602241,-5.444087,-5.097498,-9.316977,-6.752909,-8.787699,6.304738,-7.575462,9.904691,3.564194,-5.075370,7.088949,-0.154036,4.174816,7.272006,8.955020,-2.130525,9.940690,8.835927,3.558051,2.423916,-4.626527,6.319213,4.249777,6.483240,7.092880,1.085605,-8.892502,3.951648,-4.024576,2.881953,-0.020541,1.831388,-3.314248,-8.157132,-2.455029,9.982168,-3.632422,4.990819,9.137104,1.588201,-0.021820,4.520651,-1.513453,-2.760178,4.063826,-6.595014,6.152246,1.501990,6.029289,9.851175,2.800224,-3.422080,-5.456122,6.653491,-5.761085,-2.052467,4.869591,-5.347437,-4.348188,-4.366856,-6.007945,-7.291161,-4.917831,6.097448,1.559987,6.212839,7.397258,-9.893522,0.524086,9.610153,-0.416201,4.793922,1.864123,-3.915831,-6.541112,8.747061,4.366737,0.622968,9.606279,4.180138,6.831505,0.959476,-9.447617,-1.010703,5.613247,-5.423666,6.672383,-6.653007,7.414188,8.580122,2.641237,-5.230033,-6.769380,2.339567,-0.514515,-7.048899,7.911121,-5.341014,7.743650,-0.370638,-1.709113,9.351088,-0.402603,-6.422407,-8.281946,7.240836,-2.769411,-3.167664,7.316389,-9.219643,1.310955,-9.077372,-5.182873,-8.522728,9.597267,-8.777680,9.755451,-6.717127,7.556928,7.284539,-2.334026,-5.185786,-8.255261,2.301882,-1.936577,9.346020,-1.964757,-7.552947,-4.712980,-3.144491,9.211630,4.653407,-4.270779,-0.509350,-2.147959,8.099791,1.049983,3.241921,8.778440,4.316458,-4.617922,7.159279,-5.573985,5.332963,-3.543619,2.985620,2.908231,2.783073,-6.883092,3.978909,0.919118,2.824819,-3.792976,0.349032,0.895353,6.201062,9.238521,-6.882293,7.181033,6.558293,4.015379,1.289626,0.483119,1.032945,4.045195,7.944151,8.268623,4.549570,2.408180,0.803442,0.987701,7.462349,4.584297,8.162416,1.864191,7.485122,5.622520,3.278982,0.276495,-5.035521,-0.953684,5.904038,-7.498871,4.590739,0.075712,-0.715980,-4.558692,-8.896823,4.659993,-1.977664,-6.047666,0.400157,-3.833558,-2.716012,6.339476,-3.859804,-6.245716,-7.982892,-3.991373,4.096565,-7.969322,7.957951,4.109468,1.655423,1.939436,5.366478,5.620408,8.864875,-1.098316,1.783172,-0.600550,5.222275,1.493491,2.959102,8.964440,-7.020360,-1.472670,-3.847151,1.002555,-7.570580,8.559830,-5.554172,-6.669383,9.602577,4.073884,9.846002,-3.279208,6.980181,-6.347801,-4.605435,0.896087,9.913902,-7.485873,3.055762,6.388029,-3.517509,9.402471,5.235373,-9.545589,-1.250546,5.848003,7.741401,-6.500288,-6.709197,3.972215,7.313364,9.479429,-2.346482,-8.646760,2.183819,7.922162,7.522643,-1.015931,-3.591861,2.196580,-5.069053,-0.909738,-3.778101,-2.331685,0.134768,3.928386,-1.888712,-0.238734,-9.971900,-6.227743,-5.863749,7.599122,8.675902,0.523057,-1.255060,-7.090218,0.923786,-2.991196,-8.460116,-8.420584,-8.126960,-3.131562,-1.279776,1.445361,2.699148,-3.640243,1.671439,6.264929,1.310651,8.648003,7.428638,7.676142,-6.753541,2.970866,-6.950799,2.192470,9.327309,-7.746952,-3.031174,0.742989,5.950745,1.326685,1.461720,0.416642,7.429834,9.920876,3.558947,-5.928552,-4.720442,-0.394712,2.552269,-7.081372,8.753597,2.473258,-3.861441,3.781596,-7.802072,1.928601,-1.916075,2.531651,4.417145,-3.619780,5.580600,-0.692911,-2.183717,-9.834480,-4.281917,2.817484,5.170150,3.037044,4.477999,-8.393928,-7.655273,3.900902,-0.336749,-8.384000,0.424877,-6.416424,6.108585,0.317783,3.529403,-8.482280,-0.499763,0.290601,-7.813149,4.201104,-2.321708,8.435054,6.327061,2.492750,0.992790,0.925222,-2.577768,5.487849,2.071250,-4.054609,1.552316,-3.046059,-2.894349,4.283899,2.460560,-8.934622,-1.398456,-9.421876,-9.839497,-7.353453,5.775377,0.483483,0.448066,-2.888883,1.319846,-3.203044,9.842437,-8.228575,-9.079588,-5.181504,-8.476004,0.774187,-2.670193,4.079675,5.422842,8.838320,1.194964,2.076226,7.880243,7.879030,-3.663098,1.112206,8.050801,2.583618,-2.986738,5.170198,-8.690163,5.633678,-1.195109,0.926445,-1.336865,-0.133547,3.673239,2.447006,1.884486,6.925066,-9.478025,8.074894,-0.618530,0.133354,-2.447841,-6.707805,-8.292531,-9.941251,-0.713244,-0.503320,-4.035072,-2.129081,-3.040623,-3.823743,9.746007,9.352893,8.614391,4.007167,1.221638,-1.688776,2.676790,-3.376732,-7.378868,-4.786389,4.462796,-3.700990,8.853776,1.720124,-2.624232,-5.016801,-7.822971,2.572147,-4.998016,0.257490,4.125008,-2.363239,-8.774202,-9.525118,1.588335,8.643533,-6.588439,-3.440491,1.190562,4.312364,5.340676,9.584943,-8.848729,7.768278,5.700454,-2.092454,-4.418708,8.767993,-8.754202,-5.294209,-9.854215,-8.247960,9.224736,-7.149177,-4.401900,-4.528101,2.585862,7.846907,-3.301194,9.918452,-0.536005,-4.484313,-2.658827,3.884904,-2.634246,-9.318030,-1.692954,4.010603,9.491608,-4.992529,6.738728,9.667270,-1.266561,-9.237628,-3.681705,-9.655387,-5.453000,7.135995,-0.035232,7.273588,-9.143065,5.442047,-3.634536,-1.075863,-8.771980,7.848947,5.064460,2.502453,-3.483282,-5.876458,5.030725,0.017793,-7.373231,-5.305890,3.269754,7.983058,7.706556,-9.240599,5.700285,5.752335,9.545021,7.380687,7.663616,-0.496534,0.583763,-6.403123,7.132925,-5.039336,9.974435,-5.430779,-5.464749,-0.893390,-6.279742,6.545112,-3.273443,-1.684820,4.634997,-8.390631,-3.585709,-3.224331,-0.594975,-7.163253,-6.710467,7.863773,2.689857,8.613164,2.767743,4.738492,-8.297379,0.445710,7.032801,3.837355,8.127126,8.898623,-3.736338,7.878837,6.461314,1.889896,-7.257096,8.924894,-5.955987,7.020209,-6.771893,-2.608578,2.181035,8.629060,0.236300,-8.566512,2.925861,-4.478100,5.058054,-7.755401,7.442428,7.420947,-2.667051,4.949371,2.538253,-7.701171,9.439541,-5.362413,-2.545468,7.248241,-0.680550,-6.169669,9.536757,-7.805377,9.935153,7.611140,-2.517179,-8.124779,2.358841,0.788568,9.015659,2.117027,-1.574583,0.403114,2.253576,-9.764180,-4.555474,3.101421,3.291646,0.394366,-9.187095,2.660350,6.352525,6.384301,1.535835,9.956698,-1.941969,6.909309,-7.359785,9.852542,8.009048,-9.636822,1.835851,-7.014393,7.719425,3.266224,-0.612189,-0.261285,-9.211694,0.756432,-7.984601,-7.977971,4.195598,-0.582781,8.678364,5.712012,3.353381,-1.691976,-2.783893,-0.272596,-9.784971,7.752519,-9.718986,-3.911210,-8.969138,3.786808,-4.030332,4.641195,5.819944,-2.681964,-8.826408,-5.058510,5.366363,-1.665258,4.518849,3.278929,-6.285339,-4.421315,-7.818848,6.845403,-6.098746,6.952914,3.022000,-4.411640,-2.605910,9.544989,1.968367,1.660847,-9.847251,-8.201883,-1.323921,-8.976337,-3.796652,7.026095,8.580300,3.037663,7.670872,9.275731,-1.921619,-4.087270,-3.761545,4.672578,5.278330,-9.470356,-0.815009,4.869106,-4.771576,2.425109,-1.275939,6.176631,7.835415,-1.417299,5.289826,1.119840,1.248493,9.578837,8.519072,3.670866,7.347062,5.044602,-0.389570,-5.669712,-4.167840,-5.664574,-2.294084,-2.937501,-2.759360,5.985178,-2.557727,3.629316,-4.529664,0.659408,8.420761,-1.838179,-9.383816,-3.661248,-5.698764,8.848581,-5.672568,2.623611,0.717343,8.198463,-5.238924,-5.507257,2.065271,9.684226,-7.136512,-5.508645,5.915284,-2.770880,-6.427757,3.445480,0.058538,8.263744,-2.999026,-9.483910,-4.839400,5.556612,-0.394008,-6.398653,-0.927214,0.004121,-5.251802,-0.195167,-7.209364,-5.410927,-7.546970,6.091119,-8.812642,2.578850,-0.061359,1.401940,2.307840,7.963840,-5.859982,-1.456128,1.047535,2.991141,6.875139,-9.289039,-5.259278], dtype = "float64")#candidate|2573|(1568,)|const|float64
call_2572 = relay.TupleGetItem(func_2520_call(relay.reshape(const_2573.astype('float64'), [8, 14, 14]), relay.reshape(const_2573.astype('float64'), [8, 14, 14]), ), 3)
call_2574 = relay.TupleGetItem(func_2523_call(relay.reshape(const_2573.astype('float64'), [8, 14, 14]), relay.reshape(const_2573.astype('float64'), [8, 14, 14]), ), 3)
output = relay.Tuple([bop_2562,bop_2566,call_2572,const_2573,])
output2 = relay.Tuple([bop_2562,bop_2566,call_2574,const_2573,])
func_2585 = relay.Function([var_2560,var_2561,var_2565,], output)
mod['func_2585'] = func_2585
mod = relay.transform.InferType()(mod)
mutated_mod['func_2585'] = func_2585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2585_call = mutated_mod.get_global_var('func_2585')
var_2587 = relay.var("var_2587", dtype = "float32", shape = (11, 13, 8))#candidate|2587|(11, 13, 8)|var|float32
var_2588 = relay.var("var_2588", dtype = "float32", shape = (11, 13, 8))#candidate|2588|(11, 13, 8)|var|float32
var_2589 = relay.var("var_2589", dtype = "float32", shape = (11, 13, 8))#candidate|2589|(11, 13, 8)|var|float32
call_2586 = func_2585_call(var_2587,var_2588,var_2589,)
output = call_2586
func_2590 = relay.Function([var_2587,var_2588,var_2589,], output)
mutated_mod['func_2590'] = func_2590
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3010 = relay.const([[[-6.311392,-1.288200,0.836964,-0.520165,-7.811844,-3.177427,5.263581],[-6.708286,-4.452994,-8.412914,-8.995273,-0.092653,3.822798,-0.656603],[8.543740,7.077057,-6.012057,-3.050532,5.090725,8.512904,-5.472090],[-9.702557,-4.570407,0.175870,7.522164,-1.142156,-6.862397,2.101193],[6.129712,-9.665192,1.829765,-3.339014,-0.053428,7.848130,3.323497],[0.800547,5.356093,-2.244036,-0.622172,-6.082613,1.585721,4.029747],[4.728389,-8.851224,-7.342139,0.724922,-6.271244,-0.581210,-5.843150],[-0.072939,-6.864804,8.673228,-4.090712,7.824772,8.371399,-8.129996],[-4.135113,-9.802950,-5.432638,3.233376,-6.622175,-5.824279,-2.579615],[8.290991,5.463459,7.466829,8.018188,4.073385,-7.217738,4.664347],[-4.164710,-4.911947,7.769980,-7.057337,7.159035,6.842063,-2.134968],[-2.783493,-8.157084,9.396503,-3.886364,9.583679,7.485093,0.673081],[-4.175473,6.508499,-5.445280,8.178242,-5.411306,-6.639648,2.999422],[5.416809,7.433158,1.464011,0.110861,1.829418,2.148613,-5.573013]],[[5.738916,-8.092952,-4.458505,-8.076003,1.186108,-7.183155,3.116885],[-1.986701,-9.706673,-6.170094,0.268362,8.409490,-1.778929,-7.316608],[-6.526957,-9.585609,-9.729186,0.133092,-2.541791,-0.251389,3.654922],[-2.176112,9.099803,-0.309537,-7.695666,3.102031,-6.979258,4.394859],[-3.050799,-3.714072,-0.237804,-1.785804,4.822801,3.910511,-9.092366],[7.770775,-9.133460,-2.174116,-9.271058,-0.360132,-4.347161,4.071958],[-1.725143,0.138510,-0.513205,0.967070,8.489948,-4.641542,1.652957],[-9.242482,8.935651,-2.631240,4.325721,5.761607,2.775591,4.296687],[0.985416,-0.180241,4.915394,-6.171597,5.984660,-4.884184,-2.025639],[6.514535,-8.311167,2.125375,1.987568,0.938112,-7.322796,9.190473],[-3.966050,2.110361,9.471625,-1.072072,-2.335473,-6.791835,-0.960803],[-5.819950,9.629899,3.773806,6.299241,0.914830,-5.572177,-6.872734],[4.598859,-1.311907,-9.120563,-1.338829,4.679451,-6.688590,0.710015],[8.285473,4.230317,-9.813974,5.230810,-4.572581,-5.413142,1.362915]]], dtype = "float64")#candidate|3010|(2, 14, 7)|const|float64
uop_3011 = relay.sin(const_3010.astype('float64')) # shape=(2, 14, 7)
func_2585_call = mod.get_global_var('func_2585')
func_2590_call = mutated_mod.get_global_var('func_2590')
var_3014 = relay.var("var_3014", dtype = "float32", shape = (1144,))#candidate|3014|(1144,)|var|float32
call_3013 = relay.TupleGetItem(func_2585_call(relay.reshape(var_3014.astype('float32'), [11, 13, 8]), relay.reshape(var_3014.astype('float32'), [11, 13, 8]), relay.reshape(var_3014.astype('float32'), [11, 13, 8]), ), 3)
call_3015 = relay.TupleGetItem(func_2590_call(relay.reshape(var_3014.astype('float32'), [11, 13, 8]), relay.reshape(var_3014.astype('float32'), [11, 13, 8]), relay.reshape(var_3014.astype('float32'), [11, 13, 8]), ), 3)
var_3023 = relay.var("var_3023", dtype = "float64", shape = (2, 14, 7))#candidate|3023|(2, 14, 7)|var|float64
bop_3024 = relay.power(uop_3011.astype('float64'), relay.reshape(var_3023.astype('float64'), relay.shape_of(uop_3011))) # shape=(2, 14, 7)
uop_3035 = relay.acos(var_3014.astype('float32')) # shape=(1144,)
func_1804_call = mod.get_global_var('func_1804')
func_1806_call = mutated_mod.get_global_var('func_1806')
var_3039 = relay.var("var_3039", dtype = "float32", shape = (104, 2))#candidate|3039|(104, 2)|var|float32
call_3038 = relay.TupleGetItem(func_1804_call(relay.reshape(var_3039.astype('float32'), [13, 4, 4])), 4)
call_3040 = relay.TupleGetItem(func_1806_call(relay.reshape(var_3039.astype('float32'), [13, 4, 4])), 4)
var_3043 = relay.var("var_3043", dtype = "float32", shape = (1144,))#candidate|3043|(1144,)|var|float32
bop_3044 = relay.less_equal(var_3014.astype('bool'), relay.reshape(var_3043.astype('bool'), relay.shape_of(var_3014))) # shape=(1144,)
uop_3058 = relay.asin(bop_3044.astype('float64')) # shape=(1144,)
func_2585_call = mod.get_global_var('func_2585')
func_2590_call = mutated_mod.get_global_var('func_2590')
call_3070 = relay.TupleGetItem(func_2585_call(relay.reshape(var_3043.astype('float32'), [11, 13, 8]), relay.reshape(bop_3044.astype('float32'), [11, 13, 8]), relay.reshape(var_3014.astype('float32'), [11, 13, 8]), ), 2)
call_3071 = relay.TupleGetItem(func_2590_call(relay.reshape(var_3043.astype('float32'), [11, 13, 8]), relay.reshape(bop_3044.astype('float32'), [11, 13, 8]), relay.reshape(var_3014.astype('float32'), [11, 13, 8]), ), 2)
output = relay.Tuple([call_3013,bop_3024,uop_3035,call_3038,var_3039,uop_3058,call_3070,])
output2 = relay.Tuple([call_3015,bop_3024,uop_3035,call_3040,var_3039,uop_3058,call_3071,])
func_3075 = relay.Function([var_3014,var_3023,var_3039,var_3043,], output)
mod['func_3075'] = func_3075
mod = relay.transform.InferType()(mod)
var_3076 = relay.var("var_3076", dtype = "float32", shape = (1144,))#candidate|3076|(1144,)|var|float32
var_3077 = relay.var("var_3077", dtype = "float64", shape = (2, 14, 7))#candidate|3077|(2, 14, 7)|var|float64
var_3078 = relay.var("var_3078", dtype = "float32", shape = (104, 2))#candidate|3078|(104, 2)|var|float32
var_3079 = relay.var("var_3079", dtype = "float32", shape = (1144,))#candidate|3079|(1144,)|var|float32
output = func_3075(var_3076,var_3077,var_3078,var_3079,)
func_3080 = relay.Function([var_3076,var_3077,var_3078,var_3079,], output)
mutated_mod['func_3080'] = func_3080
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3134 = relay.var("var_3134", dtype = "bool", shape = (14, 5, 12))#candidate|3134|(14, 5, 12)|var|bool
var_3135 = relay.var("var_3135", dtype = "bool", shape = (14, 5, 12))#candidate|3135|(14, 5, 12)|var|bool
bop_3136 = relay.logical_or(var_3134.astype('bool'), relay.reshape(var_3135.astype('bool'), relay.shape_of(var_3134))) # shape=(14, 5, 12)
output = relay.Tuple([bop_3136,])
output2 = relay.Tuple([bop_3136,])
func_3139 = relay.Function([var_3134,var_3135,], output)
mod['func_3139'] = func_3139
mod = relay.transform.InferType()(mod)
mutated_mod['func_3139'] = func_3139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3139_call = mutated_mod.get_global_var('func_3139')
var_3141 = relay.var("var_3141", dtype = "bool", shape = (14, 5, 12))#candidate|3141|(14, 5, 12)|var|bool
var_3142 = relay.var("var_3142", dtype = "bool", shape = (14, 5, 12))#candidate|3142|(14, 5, 12)|var|bool
call_3140 = func_3139_call(var_3141,var_3142,)
output = call_3140
func_3143 = relay.Function([var_3141,var_3142,], output)
mutated_mod['func_3143'] = func_3143
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3159 = relay.var("var_3159", dtype = "bool", shape = (8, 6, 12))#candidate|3159|(8, 6, 12)|var|bool
const_3160 = relay.const([[[False,True,False,False,False,True,True,False,True,True,True,False],[True,False,True,True,True,True,False,False,True,True,False,False],[True,True,False,True,True,True,True,True,True,True,False,True],[False,True,False,False,False,True,False,False,True,False,True,True],[True,True,True,False,False,False,True,False,True,True,True,False],[False,False,False,True,True,False,True,False,True,True,False,False]],[[False,False,False,False,False,True,True,False,True,False,False,True],[False,True,True,False,False,False,False,True,False,False,False,False],[False,True,False,False,False,False,False,True,False,False,True,True],[True,False,True,False,False,True,False,True,True,True,True,True],[False,True,False,False,False,True,False,False,False,False,False,True],[False,False,False,True,False,True,False,False,True,True,False,True]],[[False,False,False,True,False,True,True,False,True,True,False,True],[False,True,True,True,True,False,False,False,False,False,True,True],[True,True,True,False,False,True,True,False,False,False,False,False],[True,True,False,False,False,False,True,True,True,True,False,True],[True,False,True,True,False,False,False,True,True,True,True,True],[True,False,True,True,False,True,True,False,False,True,False,True]],[[True,False,False,True,True,False,False,False,False,True,True,False],[True,False,True,False,True,False,True,False,False,False,True,True],[False,False,True,False,True,True,True,True,True,True,False,False],[True,False,False,True,True,False,True,False,False,False,False,True],[False,True,False,True,True,True,False,True,False,True,False,True],[False,True,False,False,True,False,False,False,False,True,False,True]],[[True,True,True,True,False,True,False,False,False,False,True,False],[False,True,True,False,False,True,True,True,True,False,True,False],[False,True,False,True,False,False,False,True,False,False,False,False],[True,True,False,False,True,False,False,True,True,True,True,False],[True,True,True,False,True,False,False,True,True,False,False,False],[True,True,True,True,True,False,True,False,True,True,False,False]],[[True,False,False,True,False,True,True,True,False,False,True,True],[False,True,True,True,True,True,True,False,False,True,True,True],[True,False,False,False,False,False,False,True,True,False,False,True],[False,True,False,False,True,True,False,True,False,True,True,True],[False,False,False,True,True,True,False,False,False,False,False,False],[True,True,True,False,True,False,True,True,True,True,False,True]],[[False,False,False,False,True,True,True,True,False,True,False,True],[True,True,False,True,True,False,True,False,True,False,False,True],[False,True,False,False,False,False,True,False,False,True,False,True],[True,False,True,True,True,True,False,False,False,False,True,False],[True,False,False,False,True,True,True,True,False,False,True,True],[False,False,True,True,False,False,False,True,False,True,False,True]],[[True,False,False,True,True,True,True,False,False,False,False,True],[True,False,False,True,False,False,False,False,False,False,True,False],[False,False,True,False,True,True,True,False,False,True,False,True],[True,True,True,True,True,True,False,False,True,False,False,True],[False,False,False,True,False,True,True,False,True,True,False,True],[False,False,True,False,True,True,True,False,True,False,True,False]]], dtype = "bool")#candidate|3160|(8, 6, 12)|const|bool
bop_3161 = relay.logical_and(var_3159.astype('bool'), relay.reshape(const_3160.astype('bool'), relay.shape_of(var_3159))) # shape=(8, 6, 12)
func_332_call = mod.get_global_var('func_332')
func_335_call = mutated_mod.get_global_var('func_335')
var_3174 = relay.var("var_3174", dtype = "float64", shape = (882,))#candidate|3174|(882,)|var|float64
call_3173 = func_332_call(relay.reshape(var_3174.astype('float64'), [9, 7, 14]))
call_3175 = func_332_call(relay.reshape(var_3174.astype('float64'), [9, 7, 14]))
output = relay.Tuple([bop_3161,call_3173,var_3174,])
output2 = relay.Tuple([bop_3161,call_3175,var_3174,])
func_3180 = relay.Function([var_3159,var_3174,], output)
mod['func_3180'] = func_3180
mod = relay.transform.InferType()(mod)
mutated_mod['func_3180'] = func_3180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3180_call = mutated_mod.get_global_var('func_3180')
var_3182 = relay.var("var_3182", dtype = "bool", shape = (8, 6, 12))#candidate|3182|(8, 6, 12)|var|bool
var_3183 = relay.var("var_3183", dtype = "float64", shape = (882,))#candidate|3183|(882,)|var|float64
call_3181 = func_3180_call(var_3182,var_3183,)
output = call_3181
func_3184 = relay.Function([var_3182,var_3183,], output)
mutated_mod['func_3184'] = func_3184
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3447 = relay.var("var_3447", dtype = "float32", shape = (2, 3, 13))#candidate|3447|(2, 3, 13)|var|float32
const_3448 = relay.const([[[-7.066417,7.284592,-9.688441,-9.065407,-1.790206,2.380307,-1.676275,3.115177,3.094482,2.612136,8.042369,-5.659772,9.733004],[-9.582271,-7.683776,5.293140,-8.872567,0.649105,9.463691,-3.617318,0.272114,2.934745,-7.001830,-1.376147,-6.715422,1.063185],[-4.824461,7.794013,1.367653,7.512432,8.406945,-5.056119,9.794107,-6.579605,-5.782094,-6.357024,9.063799,8.840075,8.902409]],[[1.387944,5.265596,2.708629,7.227722,-6.228811,-1.849449,-4.865497,-3.142182,3.911076,4.587210,-4.912912,8.205828,8.572741],[1.916577,-6.287455,8.647074,-9.097533,4.793051,-0.872478,-7.499585,0.172448,-5.468209,-0.343411,0.349077,-6.429048,-2.486184],[-7.203279,6.067387,-8.053115,-7.687066,5.141527,-5.725259,8.397095,3.686245,-9.565103,-6.439140,4.025059,-3.869937,8.929293]]], dtype = "float32")#candidate|3448|(2, 3, 13)|const|float32
bop_3449 = relay.divide(var_3447.astype('float32'), relay.reshape(const_3448.astype('float32'), relay.shape_of(var_3447))) # shape=(2, 3, 13)
func_273_call = mod.get_global_var('func_273')
func_276_call = mutated_mod.get_global_var('func_276')
const_3453 = relay.const([1.904135,7.093523,-0.369411,-0.756709,4.405935,1.737331,-1.389178,5.974208,-6.723316,0.269181,8.680598,5.173786,-2.280225,-5.309657,-8.697030,2.611061,-3.997276,-1.147863,3.213035,-6.258546,2.537826,-4.954242,8.312854,9.432125,9.836582,9.451701,3.047616,-9.762467,2.896728,-7.309443,-6.104646,1.492982,-6.726413,7.369497,7.587531,-6.829956,-5.900257,-4.656404,-8.444065,1.950269,-2.490250,3.432097,-8.117420,-7.823950,-8.061655,5.550310,-1.765955,2.901925,-0.174190,-0.443805,-2.192153,-4.986553,-0.197242,-8.812310,-6.901615,-8.212321,1.139759,5.149658,-2.817688,8.435354,-8.197298,1.012200,-1.737922,7.037172,2.440406,-7.588754,-5.448430,-6.838348,7.423771,9.022993,7.527459,-5.962496,1.197370,-5.678922,1.409021,9.163157,-6.813185,6.663691,6.193556,6.824388,-0.851154,4.374931,9.676556,6.202473,-7.201340,-6.013315,6.669714,-4.048700,-6.620582,-8.275677,7.285408,5.964896,-9.736260,-1.660538,3.082974,-7.966824,0.420851,-8.266269,-3.194621,3.481261,3.431135,-9.176994,-8.072433,7.358997,5.735443,4.922290,9.903562,-9.026340,8.918766,-9.047971,-9.845334,-9.867300,-8.462649,-3.656893,2.540429,3.420380,-5.459437,1.976048,7.911959,9.772888,-8.104757,3.971094,-6.996459,4.161671,-9.035864,-3.715494,-7.577347,-6.504481,-9.458737,9.691161,-9.147585,-6.430554,-2.281154,7.877182,-8.128493,-6.112892,3.233134,8.778678,1.491277,7.802890,-2.250738,6.350632,8.468638,0.121181,-1.898319,8.889061,0.198403,6.915878,3.039677,4.702959,-3.560986,-4.170903,6.707068,3.244260,-1.055830,-8.642975,-9.687389,4.322996,7.361634,8.329797,-5.969418,-2.142711,-7.134830,8.666428,5.678318,-2.655140,9.075894,0.060107,-3.359457,9.070194,-0.751965,9.479814,7.014332,-8.720311,1.810342,8.143180,-8.975068,8.000152,6.223378,-5.361891,-9.220127,-6.407484,6.237367,-9.609360,-0.506959,-0.801402,-5.221358,-1.471459,-4.270428,-5.771972,-2.933120,6.389594,-2.221855,-1.553247,-9.732631,-3.648200,8.845822,-6.481042,-2.635858,-4.524718,-2.187231,1.126465,-6.719668,8.399455,-5.599828,-2.986704,3.982298,2.700339,-5.717690,2.371162,-3.613165,5.683813,2.139394,-9.576926,8.766941,-1.290858,4.029341,-4.970726,8.517671,7.088600,5.297856,7.288620,5.835307,-6.111043,-0.582485,-8.022039,5.262149,-3.925611,8.681614,3.636867,9.636902,8.312159,6.758395,-9.754649,5.248208,7.720996,6.830972,8.185368,2.228243,-8.069437,0.562713,5.378396,3.991123,4.711853,-2.830468,3.462162,5.917629,0.653892,-0.022949,9.669580,6.804972,-7.073301,0.369642,2.745172,-2.507783,-7.932259,5.392279,-8.640175,1.789792,9.807487,-5.097551,1.972955,9.389399,5.458353,-1.920835,3.402274,0.472124,-2.688547,6.630084,0.176273,-7.122881,-3.615768,8.897122,-1.258859,-9.246483,7.475471,-7.841468,-1.013190,1.190410,7.294959,4.482512,0.557208,-1.097507,9.557762,2.190911,3.251858,4.312855,2.125957,6.032174,3.606907,-0.129543,-4.727549,-7.983886,-3.305647,-5.216424,5.077679,1.406475,-3.096142,1.180000,6.909730,0.884322,-1.957252,-2.060778,3.117675,3.117676,-4.591346,1.090079,-0.325010,5.671899,0.700559,-4.488851,8.946195,3.342491,4.771756,-1.414002,-9.389562,-3.324151,-8.116583,-8.067479,-5.383948,-1.979276,0.940914,7.865773,4.397189,0.617031,1.841879,-4.411286,7.483646,-8.464004,-7.093911,2.578006,-7.069092,5.276964,2.910137,7.071483,4.519938,-6.516704,8.942857,-4.603551,-0.084108,-1.601503,5.615592,9.249959,-3.689009,9.181253,-8.274586,0.073609,-6.879425,5.530844,5.726690,1.823553,-8.940763,2.289165,-8.739067,1.527544,0.323503,-4.654665,-5.923642,8.581813,2.353011,6.314900,-4.025928,1.786515,7.204303,-9.976128,6.433165,6.636424,7.333727,8.032631,-8.980603,-2.856599,-6.140822,-7.325253,-7.871346,-5.847652,-5.193184,5.003564,-9.838496,-3.514129,6.931603,-8.645602,-5.836661,2.304741,1.481592,2.836064,1.033327,8.995614,-9.333485,-3.002816,-0.046025,3.752445,-2.924689,6.329839,8.829155,-6.621965,-7.610783,1.342554,-7.743258,-8.384191,7.051352,4.516272,5.760629,0.613964,-8.113807,1.320424,-8.386569,1.108587,4.892744,7.969762,-8.332865,-5.307853,7.614440,-8.532696,-4.695255,7.414844,-9.525210,-1.168770,0.276677,-4.277981,5.928358,-0.711646,-2.791643,-5.857292,-4.809625,-1.138054,3.543679,5.420046,-5.667698,-6.801772,-0.888857,-2.852576,-8.422659,7.525082,-9.806361,2.610297,4.870808,6.490227,5.959053,7.563079,-4.951838,3.627766,-3.342126,-3.097896,-0.956990,8.124805,-5.110326,4.146862,-3.839708,-3.207955,-8.896289,-3.796846,-3.635638,5.125282,7.832849,8.200185,-8.628834,2.765328,-7.507881,8.657315,-4.478532,2.521420,4.918151,3.852960,0.463697,-3.063897,2.289465,3.231430,8.010114,-0.046541,-5.672426,-9.714536,-3.776797,2.008658,5.679824,0.274397,-7.023206,-4.194468,2.733000,2.581321,0.095897,4.155812,7.957927,-3.948510,4.209264,3.213680,1.111335,5.188897,-9.726156,-4.378397,3.481170,3.598670,-7.516459,3.722790,-5.076092,0.812102,5.697571,-4.345635,2.974423,9.386941,4.242866,-1.242401,-7.712854,-8.001867,3.597598,-1.209588,-5.068146,-8.361578,8.334502,5.828908,-9.252620,8.785702,9.074599,-9.113155,9.553953,7.856852,6.851720,6.403327,7.764143,-0.122454,-7.143669,-7.641422,-6.374347,4.157770,-5.691335,0.509601,2.600744,-2.096692,6.581176,-9.566663,-4.341562,8.557662,1.986209,8.760569,8.811349,0.518803,-3.916638,-8.548185,-2.638286,-5.540554,-8.587659,-5.679584,4.475858,-5.067421,9.384599,1.698619,8.571734,9.575158,3.841287,4.482381,-3.795761,-8.734576,-1.668911,-2.777671,-8.580456,-8.230225,-0.535757,3.689628,8.654061,-8.669974,-1.607942,2.216254,9.505839,-5.893166,0.667603,7.733334,0.605544,2.180947,-4.113659,-2.502032,-6.055556,-8.461936,1.971525,-9.334193,3.856203,-2.287431,-1.614537,5.928881,-2.790924,-9.797510,-0.982211,-8.220006,8.014931,3.794793,5.383265,6.641453,-3.406538,-9.003741,2.222951,6.254689,-7.625962,-9.742497,4.276562,-2.867577,6.942571,7.810078,-7.005172,2.787435,4.863041,2.014625,1.748358,0.454438,-7.447305,0.375092,-6.058851,6.061527,-1.851733,-5.933533,7.225705,-3.813462,5.606075,-9.602104,4.648915,-1.032902,7.402441,8.812965,-1.940564,-0.523780,-1.321997,-5.730717,-7.721099,5.335254,8.322566,-0.653756,-6.528730,7.189209,2.824626,5.126818,-2.573450,5.294055,-6.084294,-9.816572,4.631861,0.331251,-8.620325,6.704365,4.271029,-0.098589,-1.449419,-6.005517,0.335658,-2.110577,3.442807,3.413998,3.519819,2.606042,3.546657,-1.158384,3.029784,-2.881763,8.856838,-5.181217,5.686335,6.168599,-0.013279,-2.377265,-7.640143,-2.652065,6.559040,5.875173,-5.295803,-9.271547,-6.722087,1.318287,-2.498265,8.945047,2.588508,7.580195,-2.232686,-9.431277,-0.774071,-4.027855,4.579273,-7.409710,-9.405563,-2.735214,4.297589,-0.654096,6.552145,8.605653,-6.697909,-7.030683,-7.416401,-9.917430,-8.580634,5.719634,1.068423,3.252679,-9.325459,8.382891,1.024772,-0.673644,-7.105954,-6.882870,-5.482942,-3.800834,8.325954,-5.298739,-1.050675,-6.833281,8.643559,6.347904,-4.706592,7.742138,-3.028778,3.361816,-6.225570,-7.817493,8.451844,4.954114,-4.720004,-3.758285,-7.753051,-4.416179,7.584932,8.274423,-4.619432,2.066405,-1.243505,-8.629461,-5.969410,-5.496546,1.573546,8.926145,-0.245386,-0.943818,-3.310009,-3.928236,6.535923,1.324894,3.078216,6.202681,8.543224,-2.343410,4.854138,5.466634,7.743016,6.839800,-3.760152,0.488483,1.591878,-0.882271,-2.426947,-8.211575,7.259656,-4.608999,-6.221725,-9.649071,-0.705769,4.112729,1.766056,4.372132,1.495848,9.485057,-1.780161,-7.570255,-8.148286,0.353601,5.661976,-0.670226,-7.008237,1.990672,-5.636250,-0.960478,8.019308,7.202697,-8.184664,3.201810,7.796077,-0.699001,8.720523,5.978457,6.629265,-3.442466,-1.903200,3.564994,3.979012,8.182326,-7.857252,-9.710890,-2.102190,1.341466,9.175610,-9.758524,2.816092,-4.431911,7.988386,0.597100,-0.221660,3.877789,-4.685371,5.678760,5.550545,-5.172968,8.525622,0.537527,-5.035668,-7.187075,8.641356,-4.222420,0.508337,9.678156,-1.451300,0.701486,-9.443615,0.431159,4.275115,-2.674164,5.721964,4.971086,-6.948173,-4.603369,6.761557,-2.735332,6.981070,4.119486,7.789168,6.476971,6.858825,-0.312046,2.201226,3.471276,5.547683,-3.461510,-5.409800,9.778613,-6.172914,4.160337,-3.152245,9.049520,-6.994578,4.169408,5.403008,4.507112,9.773460,7.009012,3.427894,-1.374436,-5.159944,3.360612,-3.662704,8.498689,7.670327,-2.955426,-0.839923,1.968218,-1.024619,-0.080795,-1.288923,8.406476,-2.821117,-5.027858,2.610503,-5.902158,5.438888,-5.286181,-5.073199,3.081815,-8.183713,7.259896,5.105172,6.488809,9.904030,8.940825,7.613898,-7.279756,5.790099,9.519309,3.387044,3.383911,5.654286,-0.032618,6.510437,5.668130,9.176743,4.093183,-9.191053,-7.450570,-9.727892,6.836830,-3.355921,3.433092,-9.341459,-5.622049,-1.128858,9.932161,5.276131,2.917724,8.736271,-8.437214,-6.701928,2.524302,-3.365291,-3.477969,1.773657,-1.609456,0.491458,-9.734885,-4.305245,1.796539,-3.267517,5.193063,-7.452566,-3.523438,4.177775,-2.174558,-9.875831,-3.848800,-7.517305,-7.929049,-3.209513,9.708631,-8.183389,-7.921120,3.770795,-2.540155,-0.861795,9.131605,-1.021355,-2.452911,9.782841,7.131084,-4.601182,-6.833716,5.645061,-3.343538,-9.294200,7.056245,0.042547,8.628156,-4.433434,-3.171063,4.516213,6.608954,-3.752393,-5.611255,3.394507,3.917898,3.791737,-2.140884,-2.273891,1.758080,-9.877738,-4.970207,-9.433439,-7.082341,6.298804,0.967403,3.714730,-4.970299,-9.535702,4.740183,4.662825,8.089443,-8.584267,6.321304,-8.516926,2.514129,3.296286,0.702008,-3.580611,-3.494006,-7.281874,-7.524298,8.934372,0.031295,6.608616,2.179201,-3.589206,-6.728109,-1.323754,8.685653,-3.441490,0.065437,-3.521998,5.149182,8.973294,-0.741228,2.297738,2.072736,-4.622640,-9.499270,9.738395,-9.400464,-9.041143,-0.390393,-7.205441,4.392053,1.265157,-9.626502,7.080535], dtype = "float32")#candidate|3453|(990,)|const|float32
call_3452 = func_273_call(relay.reshape(const_3453.astype('float32'), [10, 11, 9]))
call_3454 = func_273_call(relay.reshape(const_3453.astype('float32'), [10, 11, 9]))
func_388_call = mod.get_global_var('func_388')
func_391_call = mutated_mod.get_global_var('func_391')
const_3464 = relay.const([6.118973,3.602745,4.991017,-1.489592,-4.556553,-8.005810,9.472661,-2.939373,8.531582,-6.301860,5.218409,2.163519,-2.520811,3.795523,-6.957025,4.629530,3.969177,-4.215175,2.201625,7.150204,-8.435327,2.272503,-0.245139,-2.424986,0.561826,-5.008695,-0.970216,8.867019,-8.926586,-0.997079,8.023808,3.750138,1.745150,6.469933,-6.159814,-1.771943,2.375643,7.079932,5.797520,1.493225,-6.240763,3.329447,-5.234910,-8.684906,-6.233442,1.358637,-8.350526,-5.439881,7.710090,-3.382980,2.065082,-6.992009,-2.907125,-1.131533,9.594142,-0.718723,6.637273,-3.536611,8.452215,3.536627,-9.430546,3.978235,8.098136,-9.482246,-1.078802,-0.235907,5.097952,-4.236902,-1.490327,8.533359,-1.899413,-7.596022,-6.040687,3.237149,1.001484,4.368300,-5.409729,-9.270014,-3.450259,-3.224097,-6.675086,-8.158214,7.408184,8.450431,-1.133212,7.326875,8.056908,-7.969739,4.746811,6.562708,-3.807791,-7.123653,3.615485,-6.142759,8.605612,-2.313104,-8.043383,9.755026,8.450069,9.977797,8.204947,7.482745,-4.248037,-8.138335,3.612381,-0.489673,-3.852015,-6.801083,-1.845370,-6.146352,3.967437,5.313286,4.884812,3.849412,9.945921,-8.919816,-0.105006,0.768905,-9.138693,-3.959631,7.742160,3.755828,3.455420,-6.312427,5.112618,1.857233,0.799116,-0.965002,5.509425,-9.151807,-8.688319,0.983022,-8.126622,-5.450276,4.135761,-0.961912,7.350520,-2.655094,-1.926185,-4.750152,1.016534,-4.031685,-8.767437,-1.615881,0.879489,1.532839,4.441381,-2.757187,7.661026,-2.994757,7.513265,-4.068925,0.414888,7.493130,7.175790,8.378970,8.576194,1.031709,-7.319756,3.513213,-9.307093,9.250954,9.968006,7.308676,-1.932831,9.211940,1.481157,4.126425,5.649543,-4.196117,-0.178087,0.041127,6.007859,-7.006305,-1.019856,2.936090,-9.587760,2.990894,-2.167745,-2.941532,-1.538879,-5.720433,6.150144,-5.094213,-0.058463,7.588057,-1.248513,-6.624765,-8.877561,8.247398,-3.465819,2.811052,-8.467098,2.815684,-4.649344,2.787334,6.666337,-8.513440,0.982159,5.859628,1.790259,0.341711,-7.027640,9.096608,-2.979577,7.288818,-5.501836,3.764032,6.295635,0.057394,-8.928800,7.007542,6.266168,6.628809,-9.700387,-2.970226,7.706298,-3.585277,-3.519156,-0.390855,-0.347572,2.749763,7.743323,4.952343,3.132096,-2.199044,-6.123428,-5.999858,9.752761,-9.195407,-4.951381,9.401529,-0.891042,7.913170,7.432245,6.335894,-6.496908,-6.752021,4.757658,-6.205054,5.162297,3.315060,-2.483563,1.288563,6.689687,-8.154525,-0.598803,8.800668,3.151109,1.305442,3.169212,-3.752307,-5.300627,4.370906,9.471145,-6.287256,-0.005420,-6.086166,2.999999,-7.291418,5.412467,3.382642,-9.448575,9.440866,8.160071,-8.883628,6.325806,-7.826758,-0.042603,-9.537455,-2.031463,-5.812298,-9.919401,7.659008,-8.175520,-9.937727,-8.803888,7.797770,-2.933822,-6.630716,-2.674578,-5.284261,-8.452655,8.850659,-9.503543,-5.107619,-6.102686,2.110713,8.263607,0.015767,-7.023559,8.489312,9.751983,1.680005,0.360083,0.659713,2.516377,-2.743229,5.484899,-1.630197,8.752762,-3.396021,7.916543,-7.220802,-5.124903,-6.206262,4.939675,-6.919130,-2.046707,-2.816483,4.298912,0.955910,-5.690582,-4.278406,4.543673,9.282841,3.079621,7.265882,-9.636900,3.850320,6.771237,3.638583,-0.815780,6.289160,-5.985204,-7.044404,5.785018,-7.874794,2.720069,9.436189,7.948887,1.217408,-4.623493,7.924143,-8.229701,-8.070274,-8.260812,-9.341568,0.961839,9.970416,-1.729031,8.344520,-8.725038,6.805616,3.794226,-7.128534,0.087695,3.544290,-9.366604,-7.296646,-1.836077,-7.456727,4.854358,2.380055,-5.453084,-2.115178,-1.204723,6.568713,0.307898,1.981974,7.741748,4.619107,1.869935,7.095096,4.148432,0.688561,-8.911925,-7.680203,-6.433784,-1.598885,-0.223187,8.693998,-9.352827,5.266531,9.487448,-6.694527,7.802287,-8.368699,9.578611,-7.700674,0.252367,-6.764954,-5.717868,2.543525,-7.702882,3.522700,-0.341832,7.915870,3.045499,-9.443427,5.807734,-0.381658,-7.082445,-2.467906,-4.523733,-1.412156,-9.344430,2.309558,5.234902,8.776950,-5.972128,6.054695,-5.772329,2.034760,3.288774,-6.256539,0.128198,8.107196,4.481684,9.796188,3.920432,-8.347467,-0.080490,-8.971960,-9.441209,9.339752,-2.122116,-4.136634,2.159613,1.349549,8.257776,-8.575405,-7.640455,5.460268,1.246731,0.934951,-2.484849,-9.837839,2.851652,6.607054,-4.730717,-7.142273,1.788017,8.846199,-0.485931,5.392152,8.677680,-8.502334,-6.238043,6.962944,-0.127458,-4.603099,-7.246269,6.464057,7.343653,-5.606486,4.978712,-6.843735,9.750050,-9.210126,-2.589745,2.792173,5.827794,4.154166,9.050292,0.969218,2.125667,6.050635,-8.114560,2.617422,1.518387,1.500914,-0.102506,4.560959,-9.268714,-0.698931,4.560828,-4.403572,1.663584,-2.987850,-2.978550,8.491663,1.395763,-0.326795,1.624172,7.942417,4.492485,-2.257438,9.093171,3.082951,2.044139,-4.348200,3.587748,6.046847,0.234630,-6.565207,8.727030,4.617952,-2.246120,-9.980699,-8.467042,-4.526582,-3.762295,7.518884,-0.380671,3.298419,-9.924875,-7.487821,-4.777682,5.532618,-9.994469,-5.454275,9.502315,-3.975723,4.521296,9.958083,4.073259,8.416287,-7.998069,3.994248,6.665762,-2.089777,-1.516291,8.210744,-0.747797,-9.827611,-9.469189,-4.587806,2.299002,4.848870,3.984852,-6.717010,-5.306754,0.379352,-9.565671,0.498851,4.799471,-6.654858,9.584101,0.841960,-0.728837,-8.244883,-9.098978,-9.485066,0.871814,-0.781859,-4.983394,7.970760,-3.770610,-3.713743,5.685396,-4.525410,4.713378,1.363105,-5.584298,9.934651,-0.071019,-6.448109,-1.456241,-4.498316,-7.642666,2.761717,0.629070,-3.905923,1.535697,3.006114,-5.140149,9.659625,-8.813946,-6.990451,5.312694,0.335269,3.814989,-9.890697,-6.900040,-3.259119,3.790575,2.626240,-6.107892,-6.960969,-2.196707,3.323594,2.027316,1.471913,2.678622,9.919702,6.543587,-1.818369,-3.967583,-4.430383,-0.711588,2.579125,-0.714519,-1.097954,-9.969739,-3.502613,-8.913376,-2.025808,8.490658,9.413155,5.304974,0.613794,0.935952,-3.194124,0.964616,-7.798740,7.322614,2.919069,4.532977,-5.169422,4.057092,-6.880258,-7.565722,4.533445,-1.663220,-2.231222,6.960342,-2.101534,-6.808840,-8.818320,-8.550550,9.579541,8.596033,2.893219,-3.418588,-0.751966,1.297429,-1.744075,0.318581,7.494555,-4.269298,-1.249435,7.629282,2.951534,3.147063,9.132237,-8.515749,8.395755,-4.924179,-2.228836], dtype = "float64")#candidate|3464|(630,)|const|float64
var_3465 = relay.var("var_3465", dtype = "float64", shape = (882,))#candidate|3465|(882,)|var|float64
call_3463 = relay.TupleGetItem(func_388_call(relay.reshape(const_3464.astype('float64'), [10, 7, 9]), relay.reshape(var_3465.astype('float64'), [882,]), ), 2)
call_3466 = relay.TupleGetItem(func_391_call(relay.reshape(const_3464.astype('float64'), [10, 7, 9]), relay.reshape(var_3465.astype('float64'), [882,]), ), 2)
output = relay.Tuple([bop_3449,call_3452,const_3453,call_3463,const_3464,var_3465,])
output2 = relay.Tuple([bop_3449,call_3454,const_3453,call_3466,const_3464,var_3465,])
func_3471 = relay.Function([var_3447,var_3465,], output)
mod['func_3471'] = func_3471
mod = relay.transform.InferType()(mod)
var_3472 = relay.var("var_3472", dtype = "float32", shape = (2, 3, 13))#candidate|3472|(2, 3, 13)|var|float32
var_3473 = relay.var("var_3473", dtype = "float64", shape = (882,))#candidate|3473|(882,)|var|float64
output = func_3471(var_3472,var_3473,)
func_3474 = relay.Function([var_3472,var_3473,], output)
mutated_mod['func_3474'] = func_3474
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3637 = relay.var("var_3637", dtype = "int64", shape = (1, 1, 7))#candidate|3637|(1, 1, 7)|var|int64
var_3638 = relay.var("var_3638", dtype = "int64", shape = (5, 6, 7))#candidate|3638|(5, 6, 7)|var|int64
bop_3639 = relay.logical_xor(var_3637.astype('int64'), var_3638.astype('int64')) # shape=(5, 6, 7)
var_3642 = relay.var("var_3642", dtype = "int64", shape = (5, 16, 7))#candidate|3642|(5, 16, 7)|var|int64
bop_3643 = relay.less_equal(var_3637.astype('bool'), var_3642.astype('bool')) # shape=(5, 16, 7)
output = relay.Tuple([bop_3639,bop_3643,])
output2 = relay.Tuple([bop_3639,bop_3643,])
func_3647 = relay.Function([var_3637,var_3638,var_3642,], output)
mod['func_3647'] = func_3647
mod = relay.transform.InferType()(mod)
var_3648 = relay.var("var_3648", dtype = "int64", shape = (1, 1, 7))#candidate|3648|(1, 1, 7)|var|int64
var_3649 = relay.var("var_3649", dtype = "int64", shape = (5, 6, 7))#candidate|3649|(5, 6, 7)|var|int64
var_3650 = relay.var("var_3650", dtype = "int64", shape = (5, 16, 7))#candidate|3650|(5, 16, 7)|var|int64
output = func_3647(var_3648,var_3649,var_3650,)
func_3651 = relay.Function([var_3648,var_3649,var_3650,], output)
mutated_mod['func_3651'] = func_3651
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3682 = relay.const([[[2,4,2,6,-3],[7,-1,10,2,-8]],[[-1,6,-3,-4,-5],[-8,4,9,-7,10]],[[-7,-5,-5,-6,9],[5,-4,-9,3,5]],[[-10,-6,-6,10,2],[-3,-6,-9,-3,9]]], dtype = "int16")#candidate|3682|(4, 2, 5)|const|int16
var_3683 = relay.var("var_3683", dtype = "int16", shape = (4, 2, 5))#candidate|3683|(4, 2, 5)|var|int16
bop_3684 = relay.greater(const_3682.astype('bool'), relay.reshape(var_3683.astype('bool'), relay.shape_of(const_3682))) # shape=(4, 2, 5)
uop_3712 = relay.asin(const_3682.astype('float32')) # shape=(4, 2, 5)
bop_3715 = relay.bitwise_and(uop_3712.astype('uint8'), relay.reshape(bop_3684.astype('uint8'), relay.shape_of(uop_3712))) # shape=(4, 2, 5)
output = bop_3715
output2 = bop_3715
func_3727 = relay.Function([var_3683,], output)
mod['func_3727'] = func_3727
mod = relay.transform.InferType()(mod)
var_3728 = relay.var("var_3728", dtype = "int16", shape = (4, 2, 5))#candidate|3728|(4, 2, 5)|var|int16
output = func_3727(var_3728)
func_3729 = relay.Function([var_3728], output)
mutated_mod['func_3729'] = func_3729
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3811 = relay.var("var_3811", dtype = "float32", shape = (8, 2, 11))#candidate|3811|(8, 2, 11)|var|float32
uop_3812 = relay.tan(var_3811.astype('float32')) # shape=(8, 2, 11)
func_3139_call = mod.get_global_var('func_3139')
func_3143_call = mutated_mod.get_global_var('func_3143')
const_3815 = relay.const([[False,True],[True,False],[True,False],[False,True],[True,False],[True,True],[True,False],[True,False],[False,True],[True,False],[True,False],[False,False],[False,False],[False,True],[False,False],[False,False],[True,True],[True,True],[True,True],[False,False],[True,True],[False,False],[True,True],[False,False],[False,True],[False,True],[True,False],[False,False],[False,False],[True,False],[False,True],[False,False],[False,True],[True,True],[False,True],[False,True],[True,False],[True,False],[True,True],[False,True],[False,False],[True,False],[False,True],[False,False],[True,True],[False,False],[True,True],[False,True],[False,True],[True,True],[False,True],[False,True],[True,False],[False,False],[True,False],[True,False],[True,False],[False,True],[True,False],[False,True],[True,False],[True,False],[True,True],[False,False],[False,True],[True,False],[False,True],[False,True],[True,False],[True,True],[False,False],[True,True],[True,True],[True,False],[True,True],[True,False],[True,False],[True,True],[True,True],[True,True],[False,False],[False,False],[True,False],[True,True],[False,False],[False,False],[False,True],[False,True],[False,True],[False,True],[False,True],[True,True],[False,False],[False,True],[True,True],[True,True],[True,True],[True,True],[True,False],[False,True],[False,False],[True,True],[True,True],[False,True],[False,False],[False,False],[False,True],[False,False],[False,False],[True,True],[False,False],[True,True],[True,False],[False,False],[True,False],[True,True],[False,True],[False,True],[False,True],[False,True],[True,False],[True,True],[False,True],[True,False],[False,True],[True,False],[True,False],[True,True],[True,False],[True,False],[False,True],[True,True],[False,False],[False,False],[True,True],[True,False],[True,True],[False,True],[False,True],[True,False],[False,True],[False,False],[True,False],[True,False],[False,False],[False,False],[True,False],[True,True],[False,False],[False,True],[True,True],[True,False],[False,True],[False,True],[True,True],[True,True],[False,False],[True,False],[False,False],[False,False],[True,True],[False,False],[True,False],[False,True],[False,False],[False,True],[True,True],[True,False],[True,True],[True,False],[True,False],[True,True],[False,True],[True,False],[True,False],[False,False],[True,True],[True,False],[True,True],[True,True],[True,True],[False,False],[False,True],[False,True],[True,True],[True,False],[False,True],[True,False],[False,True],[True,True],[True,True],[False,False],[False,True],[False,True],[False,True],[False,True],[False,False],[True,False],[False,False],[False,True],[True,True],[True,True],[False,False],[False,False],[True,True],[False,False],[False,False],[False,True],[True,False],[False,True],[True,True],[False,True],[True,True],[False,True],[True,False],[False,True],[True,True],[False,False],[False,False],[False,True],[True,False],[False,False],[False,False],[True,True],[True,True],[False,False],[False,False],[False,False],[False,False],[True,True],[False,False],[False,True],[True,True],[True,True],[True,False],[True,True],[False,True],[True,True],[True,False],[False,False],[True,True],[True,False],[True,True],[False,True],[True,True],[True,True],[True,True],[False,True],[False,False],[False,False],[False,True],[True,False],[False,False],[True,False],[False,False],[False,True],[True,True],[True,False],[False,True],[False,True],[True,True],[False,False],[False,True],[True,True],[True,False],[True,True],[True,False],[True,False],[False,True],[False,False],[True,False],[True,False],[False,True],[False,False],[False,False],[False,True],[True,False],[False,False],[True,True],[True,False],[True,False],[True,True],[False,True],[True,False],[False,True],[False,True],[True,True],[True,True],[False,True],[False,True],[False,False],[False,True],[False,False],[True,False],[False,False],[False,True],[False,False],[False,False],[True,True],[False,True],[False,False],[False,False],[False,True],[True,False],[False,True],[True,False],[True,False],[False,False],[False,True],[False,False],[False,False],[False,False],[False,False],[True,True],[False,True],[False,False],[False,False],[False,False],[True,False],[False,False],[True,False],[False,True],[False,False],[True,False],[False,True],[True,False],[True,True],[False,False],[True,True],[True,True],[True,False],[False,True],[False,False],[True,False],[False,True],[False,False],[True,False],[True,True],[True,False],[False,True],[True,True],[True,False],[False,True],[False,True],[True,False],[True,False],[False,True],[True,False],[True,False],[False,False],[True,False],[False,True],[True,True],[False,False],[True,False],[True,False],[True,False],[False,True],[True,True],[True,False],[True,False],[False,True],[True,True],[True,False],[True,False],[False,True],[False,False],[False,True],[True,False],[True,False],[True,False],[False,False],[False,True],[False,False],[False,True],[False,True],[True,True],[False,False],[False,True],[False,False],[True,True],[True,False],[True,True],[True,True],[True,True],[True,False],[True,False],[True,False],[True,True],[False,True],[False,False],[False,True],[True,False],[True,False],[True,True],[False,True],[False,True],[True,False],[False,False],[True,True],[True,False],[False,True],[False,True],[True,True],[False,True],[False,False],[True,False],[True,True],[False,False],[True,False],[True,True],[True,False],[False,False],[False,False],[False,True],[True,False],[True,True],[True,False],[False,False],[True,False]], dtype = "bool")#candidate|3815|(420, 2)|const|bool
call_3814 = relay.TupleGetItem(func_3139_call(relay.reshape(const_3815.astype('bool'), [14, 5, 12]), relay.reshape(const_3815.astype('bool'), [14, 5, 12]), ), 0)
call_3816 = relay.TupleGetItem(func_3143_call(relay.reshape(const_3815.astype('bool'), [14, 5, 12]), relay.reshape(const_3815.astype('bool'), [14, 5, 12]), ), 0)
uop_3831 = relay.sqrt(uop_3812.astype('float64')) # shape=(8, 2, 11)
output = relay.Tuple([call_3814,const_3815,uop_3831,])
output2 = relay.Tuple([call_3816,const_3815,uop_3831,])
func_3834 = relay.Function([var_3811,], output)
mod['func_3834'] = func_3834
mod = relay.transform.InferType()(mod)
var_3835 = relay.var("var_3835", dtype = "float32", shape = (8, 2, 11))#candidate|3835|(8, 2, 11)|var|float32
output = func_3834(var_3835)
func_3836 = relay.Function([var_3835], output)
mutated_mod['func_3836'] = func_3836
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3858 = relay.const([[[-6.056851],[2.101431],[-1.107435],[0.900123],[-1.785406],[5.765423],[2.005421],[-9.400183],[-9.803153],[9.770757],[-9.205912],[1.673541],[-7.687284],[-8.832286]],[[9.552985],[-6.010333],[2.210066],[-3.283560],[-8.231747],[1.242890],[-1.524149],[3.685789],[-3.454816],[0.810788],[-4.657359],[-4.936771],[4.116204],[8.582464]],[[1.228626],[7.878739],[7.680871],[7.670492],[7.272975],[-9.383529],[0.443472],[-8.237312],[3.875586],[6.538239],[-3.018797],[-3.637236],[4.285216],[2.043244]],[[-4.889560],[-4.462080],[-3.585291],[-2.485002],[7.394849],[-2.751248],[0.355144],[-6.968634],[3.863739],[-3.481684],[-1.017696],[-5.314439],[0.863169],[7.616664]],[[1.125351],[1.848901],[-9.653754],[8.208667],[3.931319],[-0.485561],[1.966556],[8.169699],[-5.388392],[3.130090],[1.473542],[-5.917708],[4.570290],[-6.417846]],[[3.543551],[0.171908],[-6.746742],[-1.689198],[-3.252532],[2.805284],[-0.131593],[-3.049281],[4.060965],[-5.359722],[7.657940],[2.804277],[-3.684717],[-2.218738]]], dtype = "float64")#candidate|3858|(6, 14, 1)|const|float64
var_3859 = relay.var("var_3859", dtype = "float64", shape = (6, 14, 14))#candidate|3859|(6, 14, 14)|var|float64
bop_3860 = relay.mod(const_3858.astype('float64'), var_3859.astype('float64')) # shape=(6, 14, 14)
func_1337_call = mod.get_global_var('func_1337')
func_1340_call = mutated_mod.get_global_var('func_1340')
var_3865 = relay.var("var_3865", dtype = "float64", shape = (12,))#candidate|3865|(12,)|var|float64
call_3864 = relay.TupleGetItem(func_1337_call(relay.reshape(var_3865.astype('float64'), [1, 4, 3])), 1)
call_3866 = relay.TupleGetItem(func_1340_call(relay.reshape(var_3865.astype('float64'), [1, 4, 3])), 1)
output = relay.Tuple([bop_3860,call_3864,var_3865,])
output2 = relay.Tuple([bop_3860,call_3866,var_3865,])
func_3867 = relay.Function([var_3859,var_3865,], output)
mod['func_3867'] = func_3867
mod = relay.transform.InferType()(mod)
mutated_mod['func_3867'] = func_3867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3867_call = mutated_mod.get_global_var('func_3867')
var_3869 = relay.var("var_3869", dtype = "float64", shape = (6, 14, 14))#candidate|3869|(6, 14, 14)|var|float64
var_3870 = relay.var("var_3870", dtype = "float64", shape = (12,))#candidate|3870|(12,)|var|float64
call_3868 = func_3867_call(var_3869,var_3870,)
output = call_3868
func_3871 = relay.Function([var_3869,var_3870,], output)
mutated_mod['func_3871'] = func_3871
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3873 = relay.const([[[2,5,10,2],[4,7,-8,2],[-3,-5,-7,-9]],[[3,-7,-3,-8],[-7,-1,-10,6],[1,-7,2,-1]],[[4,-8,-6,-3],[-2,10,1,2],[-1,-4,-8,-7]],[[8,7,5,7],[-3,10,9,-8],[6,-10,-6,-5]],[[-7,-9,1,-5],[-10,-9,2,4],[-8,-7,-10,9]],[[5,-2,-4,-7],[6,-8,-4,8],[-9,10,-2,9]],[[1,-10,-2,-4],[8,7,3,-3],[-2,9,-5,-1]],[[-5,-8,-7,8],[2,6,7,-3],[8,-9,6,3]]], dtype = "int32")#candidate|3873|(8, 3, 4)|const|int32
var_3874 = relay.var("var_3874", dtype = "int32", shape = (8, 3, 4))#candidate|3874|(8, 3, 4)|var|int32
bop_3875 = relay.bitwise_and(const_3873.astype('int32'), relay.reshape(var_3874.astype('int32'), relay.shape_of(const_3873))) # shape=(8, 3, 4)
output = relay.Tuple([bop_3875,])
output2 = relay.Tuple([bop_3875,])
func_3898 = relay.Function([var_3874,], output)
mod['func_3898'] = func_3898
mod = relay.transform.InferType()(mod)
var_3899 = relay.var("var_3899", dtype = "int32", shape = (8, 3, 4))#candidate|3899|(8, 3, 4)|var|int32
output = func_3898(var_3899)
func_3900 = relay.Function([var_3899], output)
mutated_mod['func_3900'] = func_3900
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3909 = relay.const([[[-9,9,-3],[-6,4,-2],[-5,5,-6],[-10,-10,-6],[8,1,3],[5,6,7],[-7,-6,4],[-9,8,-10],[7,-7,-9],[-3,-6,-10],[-4,-8,-1],[10,7,-10],[-6,7,-3]]], dtype = "uint32")#candidate|3909|(1, 13, 3)|const|uint32
const_3910 = relay.const([[[-9,8,-3],[-6,-7,5],[-1,2,9],[1,-1,-6],[-2,-3,-2],[-4,4,-8],[2,4,-10],[1,-4,-5],[-8,-1,-9],[-4,-10,5],[-1,-4,10],[-10,3,2],[-6,7,7]],[[-5,10,1],[-2,10,3],[-5,-4,-9],[-10,7,-6],[-7,1,4],[-5,2,-4],[-5,-10,-8],[4,-9,-2],[-3,1,6],[-10,-10,8],[-10,3,-10],[-6,3,4],[1,7,-6]]], dtype = "uint32")#candidate|3910|(2, 13, 3)|const|uint32
bop_3911 = relay.bitwise_xor(const_3909.astype('uint32'), const_3910.astype('uint32')) # shape=(2, 13, 3)
uop_3915 = relay.sigmoid(const_3910.astype('float64')) # shape=(2, 13, 3)
bop_3919 = relay.logical_or(uop_3915.astype('bool'), relay.reshape(bop_3911.astype('bool'), relay.shape_of(uop_3915))) # shape=(2, 13, 3)
func_1337_call = mod.get_global_var('func_1337')
func_1340_call = mutated_mod.get_global_var('func_1340')
var_3923 = relay.var("var_3923", dtype = "float64", shape = (12, 1))#candidate|3923|(12, 1)|var|float64
call_3922 = relay.TupleGetItem(func_1337_call(relay.reshape(var_3923.astype('float64'), [1, 4, 3])), 1)
call_3924 = relay.TupleGetItem(func_1340_call(relay.reshape(var_3923.astype('float64'), [1, 4, 3])), 1)
func_3647_call = mod.get_global_var('func_3647')
func_3651_call = mutated_mod.get_global_var('func_3651')
const_3935 = relay.const([-6,-5,7,-8,3,-8,8], dtype = "int64")#candidate|3935|(7,)|const|int64
const_3936 = relay.const([-9,-3,7,9,10,1,-7,2,-1,2,9,7,-7,-7,4,4,-2,2,6,1,-7,9,5,7,-10,-1,10,-3,5,-4,5,-2,-4,6,8,-7,2,-10,7,2,-8,-6,-3,7,-10,-6,-6,2,5,-1,9,-9,-6,-9,-6,-10,-4,-3,7,4,1,-4,10,-9,6,-9,8,6,-5,-6,-6,5,3,8,10,-9,3,7,1,-10,6,2,7,9,-4,3,1,1,-8,6,-2,6,-8,3,-1,-6,2,10,-7,1,3,-3,-4,8,7,7,-9,-7,7,6,-2,-4,2,6,-2,3,3,-8,2,8,-10,-9,9,7,7,-6,8,3,-4,3,6,-1,-4,7,-7,-7,1,5,3,7,-7,-9,3,-9,1,-2,8,9,4,-7,-10,-7,10,2,-6,-3,4,-10,-4,-5,-8,3,2,-7,-7,-7,-9,-9,-6,2,1,-5,-9,-1,3,-9,5,-9,3,3,-10,-6,-3,-8,7,-1,9,-3,-2,-3,-2,-9,4,6,-4,7,9,3,-8,3,10,4,-3,-8,-3,3,3,4,2,7], dtype = "int64")#candidate|3936|(210,)|const|int64
const_3937 = relay.const([1,7,4,-4,-1,-2,-6,3,-1,6,4,5,-1,10,-4,9,-8,9,2,-8,2,1,6,-3,-2,10,10,-6,2,-6,4,2,-4,4,6,10,-4,3,4,-7,-7,-2,2,-8,3,-3,-1,-1,-5,10,8,7,-10,-4,-8,-3,-7,2,5,4,-3,-7,1,9,4,7,-1,6,9,-10,-10,-2,9,6,3,4,-6,-2,8,5,3,3,-8,-7,-8,4,9,-5,-1,2,1,-1,6,6,-5,5,-2,-1,-9,7,-5,-5,10,-1,-9,6,9,-6,3,9,2,-7,4,7,8,1,9,-8,-6,-10,3,6,5,7,4,5,3,4,-10,3,9,3,-1,-4,1,-3,-10,-8,-1,-1,2,4,-8,5,1,7,-1,7,3,-1,5,-1,-3,8,-6,8,6,5,10,3,-5,1,-3,10,-10,-10,-4,-10,10,8,6,3,-8,6,-8,1,-1,1,-3,-8,1,9,-1,-2,-6,6,-6,6,9,4,-2,1,9,7,-3,4,5,1,10,-6,4,10,4,6,7,1,6,3,5,7,7,4,-5,-7,-6,3,6,2,9,-3,9,-8,-7,-10,2,-10,9,10,-7,-8,9,-5,-5,7,6,-2,4,-9,10,-3,7,3,7,7,-10,1,8,-6,-4,7,-3,-2,-9,-9,-10,-3,-8,-2,-10,3,8,3,1,-9,2,-4,4,-1,-10,-4,-7,-7,5,-3,2,7,1,4,-9,8,8,6,9,9,-2,-10,-9,-3,10,-9,2,-10,8,-5,-6,10,-7,10,-6,7,-9,6,-6,4,4,8,-1,-9,2,-8,8,-4,4,1,2,-7,-5,-3,-1,8,-10,1,5,-2,3,5,10,6,-5,6,-7,2,-8,-2,10,4,6,-3,5,-8,-7,-2,4,3,-7,1,-3,-5,-8,8,8,-9,-7,-5,-8,-3,-8,4,-2,-3,7,10,-7,-9,-1,2,-10,4,-3,-10,-4,10,7,-3,-2,-6,2,-6,-1,3,-1,3,-8,-1,-6,4,3,1,7,-8,2,-7,-2,-3,-8,-6,3,-2,-4,2,3,1,7,7,8,2,-1,-8,1,-3,10,-2,9,-4,9,5,1,2,-10,3,-6,1,5,8,1,-7,-3,3,-4,-4,-4,-7,-7,-2,-7,6,-9,9,-6,-2,-10,-7,-9,-4,-9,6,-9,8,-1,4,5,-9,9,-8,7,-4,-10,-10,3,-4,4,8,4,-9,4,10,5,4,9,1,-6,5,-5,-5,-8,-3,-8,6,-4,-6,10,10,7,-1,9,-4,-4,9,3,8,-4,4,1,-3,-8,-3,-6,6,-8,2,9,-10,-7,4,4,1,-4,-1,6,-10,-4,-5,-8,6,7,3,5,3,-2,-10,-3,-8,8,4,3,10,-8,10,5,-2,-3,2,-8,-8,4,-1,-8,3,-6,2,10,-9,-9,6,4,-10,-3,-2,7,-3,7,7,-3,-5,-7,10,-1,8,9,-5], dtype = "int64")#candidate|3937|(560,)|const|int64
call_3934 = relay.TupleGetItem(func_3647_call(relay.reshape(const_3935.astype('int64'), [1, 1, 7]), relay.reshape(const_3936.astype('int64'), [5, 6, 7]), relay.reshape(const_3937.astype('int64'), [5, 16, 7]), ), 0)
call_3938 = relay.TupleGetItem(func_3651_call(relay.reshape(const_3935.astype('int64'), [1, 1, 7]), relay.reshape(const_3936.astype('int64'), [5, 6, 7]), relay.reshape(const_3937.astype('int64'), [5, 16, 7]), ), 0)
uop_3941 = relay.sqrt(bop_3919.astype('float32')) # shape=(2, 13, 3)
output = relay.Tuple([call_3922,var_3923,call_3934,const_3935,const_3936,const_3937,uop_3941,])
output2 = relay.Tuple([call_3924,var_3923,call_3938,const_3935,const_3936,const_3937,uop_3941,])
func_3948 = relay.Function([var_3923,], output)
mod['func_3948'] = func_3948
mod = relay.transform.InferType()(mod)
var_3949 = relay.var("var_3949", dtype = "float64", shape = (12, 1))#candidate|3949|(12, 1)|var|float64
output = func_3948(var_3949)
func_3950 = relay.Function([var_3949], output)
mutated_mod['func_3950'] = func_3950
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4045 = relay.var("var_4045", dtype = "float32", shape = (7, 5, 15))#candidate|4045|(7, 5, 15)|var|float32
const_4046 = relay.const([[[7.755823,5.617703,-5.649322,-7.534473,-2.102521,4.323381,7.871629,-2.659532,4.803839,8.895539,0.500732,6.702195,8.629239,0.440566,-4.923965],[7.790172,-3.270723,3.988114,-7.785804,6.862748,-0.555394,7.063636,-4.536465,7.096363,3.250980,8.133006,9.204966,5.016911,7.661509,9.027059],[6.191614,9.001344,6.035367,-7.462206,-4.740397,0.380285,-8.416637,8.569773,-8.797796,-9.688638,2.344890,-2.159350,-4.902451,-4.263148,7.140924],[8.931779,-0.243792,-5.804082,-4.697025,0.013793,-9.623068,5.372147,-8.890705,9.632725,-4.768475,-3.651531,-0.250714,-6.603570,-6.634527,-0.149045],[-7.340214,-9.074668,9.285780,9.001084,6.661614,-2.708337,1.215041,2.044120,-7.130147,-1.932448,-3.914215,0.086676,-8.937815,-8.603751,-0.830571]],[[-4.600065,-8.901338,6.063263,5.142061,1.351382,8.814121,9.697752,-9.714593,-3.603837,8.509405,4.428716,3.251031,-9.585068,-2.810528,-2.861407],[-4.493300,-4.241539,7.381891,-0.303121,-7.360542,-2.936106,9.907768,-7.894576,-7.097287,3.082778,4.036924,8.860692,3.098558,-5.200337,-6.281139],[-0.056398,6.279474,-3.732062,-4.285688,-6.133762,-2.816157,-9.904838,-2.129895,8.721295,-6.655425,-7.481526,4.514109,-4.889412,-2.106719,6.046173],[-0.685845,9.774381,-7.063922,-6.133480,-4.632861,3.972697,4.307344,-3.865844,-4.956056,-4.584594,-7.578171,-3.230760,9.540599,-4.613012,-2.968649],[-1.635567,7.599690,-1.583348,5.541974,-6.731749,7.440002,9.280623,-9.386519,-9.831209,4.812897,0.837899,-6.407050,-4.652009,-9.019556,1.448333]],[[-0.830270,4.695942,7.693502,7.031586,0.593065,-1.362740,2.927199,8.084464,0.998268,-0.032341,1.505215,2.316071,0.717066,8.754023,-3.315122],[-6.045495,-4.421712,2.582458,-6.165303,1.355663,-2.443838,-7.594934,2.158501,9.959724,-4.438479,9.317040,4.490813,3.559265,-3.793850,8.334238],[8.940687,8.407901,3.829274,6.888401,9.495452,3.096450,-3.567825,3.053485,-0.633038,-2.713456,-7.529435,-2.520318,-4.429546,8.771235,-2.028378],[-1.388507,-6.060671,8.316999,-0.145759,1.063224,9.122786,8.568941,0.491710,6.763232,-9.545773,-1.583169,-2.771440,-8.179791,-7.299235,5.968142],[-5.857066,-3.822901,-8.968459,9.488161,-4.568499,-6.510120,7.806210,7.559088,5.852789,-1.435979,-9.156107,-7.557549,1.812783,-0.800320,-5.176080]],[[-6.832241,2.566455,-0.975849,1.296985,-2.796817,-6.545384,6.518112,-6.002005,-5.007952,-1.509376,0.668674,5.219973,9.161725,9.903479,-4.263036],[1.055848,-9.949005,7.729421,-4.585610,-0.585877,-2.370964,-6.107943,3.604835,-9.675135,-1.540935,-3.516723,-7.026311,9.409473,8.970638,6.794013],[1.902973,-0.295089,4.806272,-3.166612,-2.718804,-1.738934,7.618098,8.707076,6.038142,2.790349,-5.681670,-5.975479,3.729392,-1.889812,-0.920524],[8.245853,-1.615869,7.232777,7.240349,-8.359113,3.392095,9.860019,1.323662,7.447162,-8.698702,-2.384636,-9.315004,2.664274,-8.448549,-1.834719],[8.716303,-5.828404,-9.872829,6.017239,4.106601,7.493283,-8.717646,-5.975069,4.269939,6.156877,-4.701047,-4.324108,-8.072990,-6.512496,2.450601]],[[4.511022,-9.363375,4.402141,0.656786,4.455849,-1.064005,4.292534,6.952864,-2.781426,4.392771,-1.486125,5.673488,3.534583,9.264879,-1.260547],[-0.229584,0.280168,-9.377007,5.268410,-7.933316,-6.870561,-6.113051,2.921717,3.184087,-5.496570,5.763062,-7.848651,-5.543043,-8.970147,-1.471070],[-3.130178,-6.045787,2.858897,-1.002967,8.966001,9.460846,0.467491,8.403171,8.813068,-5.125314,-6.091011,5.967303,-6.531005,-8.621529,8.682940],[-1.678140,4.522254,5.172035,8.921050,-5.483215,-0.095899,-7.168658,4.477606,3.589381,6.405088,-3.192286,0.960672,-3.874028,7.184920,2.189923],[8.495018,8.673884,-7.646204,-2.073425,-4.771067,-4.189124,-3.897747,4.254002,9.921184,1.257889,-0.081412,-3.122716,5.961968,-2.670226,9.140170]],[[2.440140,2.505894,6.927078,9.391282,8.412024,-4.631882,7.371685,-6.719515,-8.060387,2.002389,-9.307096,-5.343804,7.797688,-8.038688,-4.130421],[7.670160,-3.459028,-4.455335,5.700941,4.208354,-5.260143,-7.452441,7.849345,-7.316196,-7.730424,3.519920,0.948097,1.909764,5.965959,-4.884141],[8.416030,7.740271,-5.850317,-0.408367,2.112797,-8.705767,9.741901,6.483304,-4.391701,2.601212,6.126896,8.628767,-5.659595,-3.904746,-1.494474],[6.431918,-9.357782,-6.196288,4.141975,-1.237861,-2.051527,-1.619792,-6.411392,-2.897675,7.095232,4.890482,-7.240322,1.216926,-5.450603,-4.867026],[3.567167,-9.076975,-1.505408,-1.750151,7.291008,6.798668,-4.690561,-3.249319,8.056542,9.982815,-0.604838,-5.022409,2.806160,3.666577,9.936418]],[[9.651632,4.721461,-2.604872,-5.677487,3.705496,-1.125728,2.233966,-6.568591,1.731354,3.380662,-9.626298,8.828498,-0.389429,9.225674,-9.175725],[-8.156418,3.396469,-7.408445,9.914062,-9.287482,-3.000589,2.621404,3.424821,2.854659,-9.748003,7.565980,-6.271507,0.885140,-8.015216,-1.737865],[1.101062,-3.984266,1.286072,-7.836306,4.069063,6.415982,8.456851,9.907158,1.585431,2.208957,3.125508,-7.714437,-7.761902,0.408992,-7.874333],[5.951038,-6.751070,-7.808432,-6.120330,-9.789773,-4.140593,-7.214101,2.272885,-4.948053,-5.908281,-4.075326,9.230377,-4.771015,-8.058979,-8.046756],[7.266152,-5.586483,8.911256,2.237466,6.859892,1.957456,-0.616622,-1.965369,4.221422,-9.504708,-2.410220,-3.122341,0.185513,6.304496,-2.404117]]], dtype = "float32")#candidate|4046|(7, 5, 15)|const|float32
bop_4047 = relay.mod(var_4045.astype('float32'), relay.reshape(const_4046.astype('float32'), relay.shape_of(var_4045))) # shape=(7, 5, 15)
func_2520_call = mod.get_global_var('func_2520')
func_2523_call = mutated_mod.get_global_var('func_2523')
const_4053 = relay.const([-0.635194,5.469653,8.604363,-7.342460,-7.494868,-8.054798,-7.130148,2.518996,8.715662,-5.266649,-1.770187,-6.448096,8.539115,-4.295688,5.334776,-8.350372,-9.752656,-4.536518,-5.291085,-2.009938,-3.903580,-5.822388,-9.446031,-8.867984,8.027158,-9.972124,0.261099,-4.942596,-5.338727,2.576823,6.599717,6.900130,7.657163,-0.174911,-5.769925,-7.581944,2.710277,6.315096,-4.537358,1.768895,4.105172,5.341672,-3.962737,0.860205,1.342406,-5.095728,3.655135,-8.401480,9.006633,-1.791793,7.028471,0.548000,9.237142,4.570380,-1.801137,-5.572234,-8.594492,-7.876923,2.762196,-8.149321,-4.432222,4.591967,-9.027839,-5.166821,-1.444092,-2.966250,-0.230020,-7.650194,-4.683060,2.186130,-7.615756,-8.373634,-4.700567,-3.516666,6.250715,-8.691568,9.865850,6.772874,8.496732,-7.642693,-1.269768,-7.717361,-7.000238,1.006106,-3.461507,4.324706,-1.973437,8.055814,-4.788169,-3.981653,-2.332616,9.142183,-9.209671,-6.792275,-5.345243,-7.379574,0.772063,8.608955,9.989314,-5.123224,-4.002913,9.378156,-4.672283,3.089748,-1.300532,-2.941610,-9.091967,-8.898472,-6.417703,-3.719458,1.146195,7.581498,9.059688,-8.000531,9.149363,-6.941305,-2.800338,-9.473014,5.615879,3.380085,6.064374,-5.539265,1.638029,5.497148,4.058871,7.300992,-2.371367,9.478355,6.962177,-1.510753,9.127264,-0.606005,-3.562512,-8.247970,-2.655372,8.022622,8.773164,2.978166,1.337921,-4.969609,5.094498,7.626379,-7.297165,8.601943,0.121739,7.511863,3.738943,-2.311316,-4.594117,2.243683,6.467753,0.989884,-2.074228,7.081686,5.908861,5.584329,0.214858,-5.260116,0.705044,-7.864542,1.054265,1.386690,7.786142,0.447511,-8.435139,3.392785,2.093040,-7.473007,1.638286,3.382413,8.748980,3.785358,-2.155944,7.613465,-7.490922,-6.952786,7.353686,-1.576064,7.689138,-0.028521,-4.140489,1.175083,-7.227677,5.367986,-1.757091,-1.782133,0.727100,-1.344288,7.127132,-8.377367,7.236618,-5.354717,-6.442717,-4.162687,-6.727228,-9.132906,-0.829688,-0.440998,4.042239,-4.843834,9.510674,-4.628635,3.352612,-1.446532,-2.518823,-0.719759,3.871409,-0.100828,6.517656,1.238724,1.217696,-4.097766,-3.953516,1.612717,-1.818975,9.560024,-0.687590,0.793803,-1.196070,8.398007,-2.270178,3.680438,-3.505588,7.247527,-0.525542,8.614738,-3.083136,7.143329,-9.322419,2.654423,-1.694329,-7.256279,-3.225028,-4.862867,7.029972,9.955208,9.156368,6.932684,-2.141894,8.662605,-1.001480,-1.545978,-0.291671,6.362634,-1.519075,-8.977809,2.722551,-5.159921,-8.907574,-4.541483,-3.560741,8.024133,-1.476225,1.605136,8.627116,4.279810,5.543944,0.026649,2.317066,-5.813509,3.633414,0.192591,-9.647427,-8.710953,-2.573783,-2.497987,-1.739114,2.496560,2.997955,4.583342,6.982566,-1.038631,-7.111129,2.414860,-5.251889,-6.685840,-3.386911,-5.513709,9.461340,5.032212,4.390847,-5.508212,6.197133,2.856651,-1.381872,6.695448,7.054669,-5.633805,9.987200,-4.225158,6.420807,2.000991,-6.726749,-3.539185,-7.639125,3.298800,-1.249980,3.003589,5.402290,-3.342357,8.650312,-1.253098,8.512543,1.774313,-9.589548,-4.990727,-7.040636,0.388073,7.441219,-3.942754,8.738756,7.151564,5.612004,2.433613,9.764872,-2.564814,0.584427,-9.785552,0.667338,-2.325853,7.264237,7.318638,-0.048302,-9.774581,7.838401,-0.870112,-7.039870,-3.388283,-8.067142,6.851522,5.235779,4.365984,-1.801749,5.242522,9.970446,2.486491,-4.063033,-7.526772,3.328167,-4.560392,7.417020,0.609884,-7.070598,3.126176,2.212300,5.937771,-1.757099,6.051607,-5.114502,-2.071917,-3.933815,-1.978623,-3.929286,-5.100283,2.404666,-6.961102,4.200394,-4.243305,7.627749,-2.134149,-3.436569,4.704662,-7.446207,6.303672,9.317131,-9.630007,9.959279,-8.392509,6.532727,5.913485,0.151105,6.020995,0.059884,1.442528,9.140428,7.702989,6.242328,-3.491846,-1.948834,-2.554195,4.571724,5.322155,7.412099,3.779000,-9.781898,2.192648,-8.607437,-9.709008,-6.895614,8.830579,-6.037099,-1.994221,4.800734,1.620305,-3.168984,-8.458797,7.811291,9.584974,7.116421,4.016693,8.929714,-7.411870,-2.968192,-0.289289,-3.512933,-5.779440,-1.022437,-9.503241,-9.519371,4.532098,3.590741,-8.319609,-0.763011,9.702781,-7.718807,4.518864,4.255638,-0.183690,0.425480,-7.328318,-2.378172,-5.152903,5.665444,-2.629511,-6.034067,9.803315,8.020445,-0.353366,0.172771,-2.897054,5.531235,5.228773,1.419630,-2.258475,-1.325020,-4.298041,0.346703,-5.362242,8.656947,-5.646935,-6.380233,1.884676,-2.716442,7.915231,6.143195,0.199480,-4.158617,2.151084,-9.051439,-1.932382,-9.851431,7.942579,4.181189,5.043936,8.148919,-0.912200,1.182981,3.906769,-2.826831,7.168088,-4.867019,-7.698642,3.010244,-9.727113,7.984294,7.123180,1.882288,4.470938,-8.211781,6.119055,6.433588,1.716725,2.300520,-4.072212,-0.054999,4.453859,-1.995560,2.232870,9.821098,-1.504680,-1.799209,8.348431,-9.912608,-6.996883,4.490932,-3.988764,5.026348,4.708810,1.490005,-6.410977,8.064866,-9.605769,6.055946,5.243810,-7.313118,9.785944,4.691067,-2.188429,-0.820868,-1.693190,6.445030,-7.128705,4.141199,0.947944,9.823306,-0.514035,-1.226943,-7.399282,-1.204988,-2.050022,8.160413,7.264761,-2.174362,5.702513,-3.025496,-6.742924,-2.076472,-5.923198,-3.410629,-5.135981,-5.074000,-0.549216,-1.648103,-5.703106,0.350930,1.808732,3.287246,5.258569,-0.431443,-3.552215,5.069956,-4.271795,2.875337,7.715410,6.079367,1.129664,-4.148063,-6.776892,-9.364158,1.747783,4.177288,4.362451,4.465647,3.450598,4.907605,-9.109592,-8.897902,-2.449355,8.374160,-4.328586,-7.333068,-8.441922,8.215932,2.652215,-4.690655,3.858142,6.894622,-0.170618,-7.215354,-9.066445,2.651081,-4.393610,-7.090233,4.271486,-4.657672,-5.826687,5.088986,0.612666,9.801031,-4.146590,0.565132,8.153258,-2.707412,0.850348,5.366901,-6.112996,-3.162519,8.870235,-0.447962,-9.651259,-2.233576,4.745482,-9.218463,-7.045504,5.672810,9.196232,7.038323,4.293767,-6.253781,-2.140003,-7.604129,-1.077598,9.563571,3.742400,-9.502894,-3.221841,-4.165399,-1.250551,-2.327323,-1.919288,5.461221,-7.949461,5.738691,7.191955,-4.073409,4.794238,-6.985771,0.051997,3.850935,0.424491,-0.167768,-2.480514,4.001540,1.351049,-3.569045,3.496651,0.304020,-9.349947,5.699303,-7.461515,8.194442,5.171991,5.013913,0.942484,7.213462,-0.709693,-1.789869,3.779950,7.832939,1.783315,-3.848314,-8.443231,-1.551604,-4.145359,-3.303214,9.433465,4.098173,6.597734,9.524401,3.064007,-8.973950,-7.098737,2.530564,-3.379990,1.991622,-9.947536,6.740239,6.995677,6.161156,3.491393,4.458345,2.773983,7.129724,2.440701,2.047135,-6.138564,2.261995,-4.850449,-3.518075,4.855403,-0.970586,2.213810,-7.035025,2.006712,9.789227,6.805749,0.531662,4.239413,-5.931559,1.842042,9.203715,5.376068,-8.276678,8.627723,-7.351907,-5.570717,-0.348150,-2.295243,1.618314,-2.585331,4.242012,6.628563,-7.243461,0.774681,1.025865,-0.261424,-6.140899,4.581743,9.337068,6.838378,-6.675011,-1.349569,-5.674046,4.925223,-6.110348,-3.083767,-0.528412,-4.924622,-4.691953,1.097901,-1.088844,-7.408379,7.947468,-4.190495,9.671687,-1.650516,8.666142,-5.287156,-5.171882,4.374191,-4.486749,-5.702646,7.224006,7.259754,-4.199628,-6.879244,7.463201,-5.664329,-7.836725,8.948276,-6.841018,4.078026,4.392820,3.725325,-0.028368,-8.252622,-8.308448,7.285732,-8.778397,4.223161,6.574041,9.114932,0.777470,1.447372,-4.317116,9.070521,-6.129378,4.143694,-9.905965,4.562690,5.789739,4.782692,-1.203824,-4.030739,-0.802375,-4.970180,8.432932,-2.294216,8.411453,-3.305364,-1.557081,-2.184306,7.818242,-0.584529,7.857258,-6.736895,-1.830786,-2.195692,-6.380101,4.780682,6.238286,-9.989407,4.655703,6.269606,-0.423958,8.024756,3.984091,7.463433,7.376228,-8.383561,-7.955832,3.037994,5.137339,8.549165,-9.773153,-4.919530,-8.087010,-9.504126,5.601585,-3.911017,-1.089168,-3.983037,-9.749610,-3.883646,-0.848174,-7.981273,2.780971,9.736563,8.558703,-5.299371,9.036635,2.435060,7.785444,9.390136,9.747935,-7.129754,8.387356,6.680324,-0.463881,6.547089,7.815906,3.581987,-5.295159,2.711204,-3.324665,1.916853,-6.916414,4.724249,4.983887,-9.916084,6.903373,-9.858634,2.082674,-0.655981,4.797054,-6.600614,2.116219,5.833756,-4.292071,3.080703,-4.507471,-1.722588,-7.125399,-7.745856,1.386246,-1.462868,6.499816,6.854789,1.002511,-3.842551,-0.325674,8.261711,5.697199,2.831500,9.272506,-2.304372,6.821631,-3.127634,-0.098318,1.018675,4.953915,-0.668072,-9.817565,5.446923,1.825984,-0.909566,3.564128,6.221761,-7.503477,-9.268524,-1.745995,9.591356,-8.357012,3.636592,-9.955674,-2.541216,-6.608498,-8.866677,-5.831436,-3.515375,-6.649235,0.463064,-1.581448,-9.503166,1.421866,-2.956495,6.217327,-6.610162,9.882458,-6.988052,-1.452017,8.694695,-1.696156,-6.748081,-2.932257,-7.737129,0.860787,-2.528263,8.515695,8.416567,2.324473,-7.141593,0.842519,-2.333142,-1.424221,3.519832,0.380466,3.239632,-5.434435,3.979432,9.651459,0.116271,7.217513,-0.966035,-6.388661,-6.842859,-0.015362,-2.763757,2.465537,-9.703558,-5.455586,-2.359073,6.964185,9.001242,7.626725,-1.083904,-0.907789,-8.885818,5.736318,-4.385366,-2.867747,3.529782,6.927502,-6.669169,7.976619,-7.333706,-7.750104,6.390262,9.758411,-5.356365,3.044137,2.167962,-1.428907,-3.394330,-4.491731,-5.074835,2.487310,7.968939,5.026210,5.642428,0.527284,-8.056930,-6.052857,6.519851,-4.250125,0.146866,-2.010141,-7.752229,-6.583993,-8.771582,9.651866,9.406083,-5.558422,-0.933498,-5.554996,-4.049781,0.472902,-2.590506,9.130089,6.086137,6.894311,3.400323,7.773681,-1.539938,-7.686045,8.013681,3.969395,-7.337398,7.340158,-0.753714,-2.869080,7.439438,2.073003,-4.556843,1.007847,6.638607,-7.926567,-4.157305,-0.739746,2.728822,9.732491,-9.844520,5.344008,0.237236,7.188814,-5.875029,-2.233767,-9.844676,3.601087,-1.640294,-7.797343,7.714414,1.731400,1.483333,7.961335,-9.687775,8.610061,9.009702,-3.759102,2.209584,-6.013491,8.070164,-9.560054,8.460071,-3.741748,-1.687648,2.751116,3.362814,-2.614682,-3.888634,0.540721,-7.952227,3.287758,2.611011,-9.596306,-0.312817,7.333544,-8.886244,4.899668,0.283636,9.924889,-7.775661,-7.113324,4.794327,-7.271917,-4.512807,3.058328,-6.716252,-2.866086,-3.651116,8.896291,-7.822423,-1.679064,-9.139268,-6.011248,-4.753743,7.574520,-0.491738,-2.436599,-6.394598,5.479514,6.373718,-6.788205,4.731691,2.268806,8.180369,-2.621439,3.216185,-5.696281,-9.027634,-2.471585,9.165069,-4.489593,5.028842,4.358550,0.349904,-7.272001,6.947982,7.965218,6.966182,-7.796177,4.797042,-0.879349,-0.832544,-2.306867,4.472233,2.571355,-0.489896,-4.796007,-2.653570,-0.982261,-1.603668,-1.354208,5.586791,4.445725,2.365131,2.285392,-3.772054,7.010067,1.557077,-2.677533,-4.664923,3.916872,1.551029,-3.184906,3.017513,3.991197,6.206451,-1.985397,7.628603,-2.351641,2.632389,0.251468,5.154468,-3.576163,-3.417099,-5.325512,-3.463327,-9.486836,4.151818,-3.111217,3.736301,9.644246,4.848855,0.565151,7.210400,8.805737,4.342263,-7.418033,-2.446059,4.767245,9.911177,7.014945,2.920454,5.642777,8.615544,-9.639341,-2.412758,3.933963,6.577429,-6.506987,-7.965598,5.022354,6.040036,3.362863,3.559889,-4.168351,-2.320031,-9.462613,2.726974,-6.237405,6.973896,7.108267,-8.833565,-9.305817,9.615730,-9.145120,-3.624629,-5.481601,-9.758182,0.794419,-1.862083,-0.274827,-8.678796,3.697936,5.760497,-8.581871,-7.783549,-9.891392,-1.781880,-1.169446,5.559755,-5.566097,-5.404248,6.981131,-2.469385,-6.170322,5.988544,6.079970,-4.226922,5.392330,-2.195753,-8.163702,-3.804633,-4.811812,1.202359,-7.400300,4.905751,9.619267,6.737989,-0.666639,1.704164,1.106890,-3.328938,-9.449569,6.043578,-9.918277,8.542870,-8.568405,9.426310,6.066751,8.975411,0.747990,-6.891309,-0.586648,-4.043907,8.067972,-5.617177,-9.974011,1.482676,2.447451,-3.778906,-6.936318,-9.121625,8.824125,8.325067,8.744179,6.560802,-3.547700,1.903024,3.555087,4.912153,5.687681,1.038732,-4.909534,7.925329,1.396142,4.507085,8.081309,-6.181274,0.276163,7.125144,-4.929498,-3.525253,-6.725885,-5.037914,3.379550,-5.848693,0.373640,-4.660486,-4.969969,0.021992,0.285050,-1.986429,-1.750658,-3.181244,-1.742699,-5.788227,-4.964762,2.694441,-2.688996,-8.318081,-4.290496,5.149127,8.067640,8.088893,1.234554,3.915627,-2.112882,8.549198,1.708403,-5.568616,-4.258834,-1.970904,2.581377,4.218361,9.883237,3.233085,8.146517,0.407073,-3.900246,-6.284828,4.759874,6.944257,5.311103,9.562317,-5.200152,5.994959,-8.648601,0.720687,3.136418,-5.946781,-9.296110,-0.066074,-4.517917,-1.414798,0.128298,-0.521610,0.807808,-0.221382,-7.637524,0.914980,2.177904,0.327768,-9.675033,-6.318003,-5.156580,2.144090,-3.364562,-8.074417,4.558523,-7.565249,9.496958,-7.149181,-9.297700,-8.683872,-0.850869,5.248155,-8.920726,3.355822,3.463665,-6.127546,-2.408374,-7.764912,-0.081859,3.624738,-4.755545,-7.678108,-3.713871,-2.237290,5.022117,-8.331275,-7.796534,6.942770,-6.002221,2.075928,-9.509926,2.216249,1.845578,-1.139259,-1.511284,-7.274088,7.731453,6.699213,8.526801,-5.035385,-8.013158,-0.941562,-7.635827,8.755502,-0.946817,-0.660193,-1.727300,-8.286741,2.731212,0.824361,-1.053740,-3.340662,-0.627412,-9.253773,8.854386,-5.908000,7.870311,-8.820978,2.380427,-3.179357,8.956278,-7.255213,4.526518,8.111721,4.336131,-8.514262,-2.876753,0.914284,-1.026934,-9.376016,-0.786115,8.481806,7.640771,8.325920,2.898770,0.013164,-2.988468,4.179566,-1.483462,8.786148,0.248591,5.220616,-0.281391,6.279320,-1.879264,9.702362,-6.651836,-3.032164,-6.701548,-5.049452,-6.059262,-8.764429,-3.077351,-7.772177,3.030216,-2.389045,5.333376,-6.122326,3.443212,0.259730,-5.934937,-1.515909,0.265977,-1.732080,2.341344,-0.277226,-8.177259,-2.658153,-0.259160,0.335666,-6.786422,-8.177806,-4.991312,-6.658607,-9.562150,7.808895,-7.974341,-3.641632,3.675647,4.932084,6.944219,-1.590787,2.844954,-3.616917,2.109711,1.126721,-8.021469,5.410033,-2.224296,-6.469028,0.863905,5.797753,8.411385,-3.212522,5.438641,0.270684,6.788428,-2.585004,0.864494,-6.876575,6.594507,-0.624899,0.380025,-2.472351,1.168081,2.784467,-2.824707,-5.457636,-3.170673,-7.315457,3.637911,-6.669872,0.759020,1.524365,-3.387428,1.953508,5.025786,7.483445,-8.193871,-5.838814,-4.293193,-1.869801,9.393519,-5.968513,1.362851,4.375720,8.970430,9.984494,-4.593547,5.289684,-4.829280,-6.005848,-3.388653,1.770635,4.747271,1.310923,2.224621,7.129921,-5.796951,-7.948862,-0.806481,-7.149117,1.719653,5.750934,-5.083798,-1.805514,8.214649,-9.554475,-0.988083,-7.461080,-4.476024,0.583260,-5.999347,-7.205461,5.696784,-6.634113,-4.053867,6.774814,9.137296,6.709003,5.424658,-3.769958,2.866947,-6.968687,-6.294329,7.718911,-6.093500,-6.003909,1.194805,-4.114083,3.644937,6.661685,2.922477,-8.379474,7.647901,2.157360,6.570264,5.209132,-9.734126,7.155155,8.190930,4.410085,4.049697,-3.590220,-3.841576,3.456459,7.692647,5.606649,9.574628,5.710938,-2.781974,6.953785,3.449997,-7.926519,5.513135,-9.631278,-5.413021,-9.368696,-3.510598,4.839272,4.166139,-1.970956,1.505856,-0.562952,0.352570,1.493599,-9.724087,-9.167304,0.879198,9.914774,-9.176292,8.335408,-4.859619,-9.055462,-0.086200,8.921069,1.960567,4.660231,-0.557537,1.988362,0.037087,1.268431,-0.203021,6.456371,-7.448995,-1.649142,3.714750,6.694340,9.750492,-8.050163,8.087690,-1.406158,8.204339,0.683649,8.966252,-8.797515,6.918157,-5.468731,7.474706,-7.147605,-9.882955,-2.906788,-1.634008,8.392383,6.174402,-9.780911,-1.394590,6.205382,-5.891233,6.175461,-0.367311,-3.002798,1.466526,6.340752,1.388366,-9.419856,-8.584317,8.910291,-9.408500,-0.504085,-7.097071,8.770081], dtype = "float64")#candidate|4053|(1568,)|const|float64
call_4052 = relay.TupleGetItem(func_2520_call(relay.reshape(const_4053.astype('float64'), [8, 14, 14]), relay.reshape(const_4053.astype('float64'), [8, 14, 14]), ), 0)
call_4054 = relay.TupleGetItem(func_2523_call(relay.reshape(const_4053.astype('float64'), [8, 14, 14]), relay.reshape(const_4053.astype('float64'), [8, 14, 14]), ), 0)
uop_4064 = relay.sinh(const_4046.astype('float64')) # shape=(7, 5, 15)
func_3867_call = mod.get_global_var('func_3867')
func_3871_call = mutated_mod.get_global_var('func_3871')
var_4071 = relay.var("var_4071", dtype = "float64", shape = (1176,))#candidate|4071|(1176,)|var|float64
var_4072 = relay.var("var_4072", dtype = "float64", shape = (12,))#candidate|4072|(12,)|var|float64
call_4070 = relay.TupleGetItem(func_3867_call(relay.reshape(var_4071.astype('float64'), [6, 14, 14]), relay.reshape(var_4072.astype('float64'), [12,]), ), 2)
call_4073 = relay.TupleGetItem(func_3871_call(relay.reshape(var_4071.astype('float64'), [6, 14, 14]), relay.reshape(var_4072.astype('float64'), [12,]), ), 2)
output = relay.Tuple([bop_4047,call_4052,const_4053,uop_4064,call_4070,var_4071,var_4072,])
output2 = relay.Tuple([bop_4047,call_4054,const_4053,uop_4064,call_4073,var_4071,var_4072,])
func_4077 = relay.Function([var_4045,var_4071,var_4072,], output)
mod['func_4077'] = func_4077
mod = relay.transform.InferType()(mod)
var_4078 = relay.var("var_4078", dtype = "float32", shape = (7, 5, 15))#candidate|4078|(7, 5, 15)|var|float32
var_4079 = relay.var("var_4079", dtype = "float64", shape = (1176,))#candidate|4079|(1176,)|var|float64
var_4080 = relay.var("var_4080", dtype = "float64", shape = (12,))#candidate|4080|(12,)|var|float64
output = func_4077(var_4078,var_4079,var_4080,)
func_4081 = relay.Function([var_4078,var_4079,var_4080,], output)
mutated_mod['func_4081'] = func_4081
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4094 = relay.const([[[-7],[4]],[[3],[8]],[[-6],[6]],[[-8],[6]],[[4],[-7]],[[-5],[1]],[[-10],[8]],[[-10],[-6]]], dtype = "uint32")#candidate|4094|(8, 2, 1)|const|uint32
var_4095 = relay.var("var_4095", dtype = "uint32", shape = (8, 2, 7))#candidate|4095|(8, 2, 7)|var|uint32
bop_4096 = relay.right_shift(const_4094.astype('uint32'), var_4095.astype('uint32')) # shape=(8, 2, 7)
var_4101 = relay.var("var_4101", dtype = "uint32", shape = (8, 2, 7))#candidate|4101|(8, 2, 7)|var|uint32
bop_4102 = relay.floor_divide(const_4094.astype('float64'), var_4101.astype('float64')) # shape=(8, 2, 7)
uop_4120 = relay.atanh(var_4101.astype('float64')) # shape=(8, 2, 7)
func_3727_call = mod.get_global_var('func_3727')
func_3729_call = mutated_mod.get_global_var('func_3729')
var_4126 = relay.var("var_4126", dtype = "int16", shape = (40,))#candidate|4126|(40,)|var|int16
call_4125 = func_3727_call(relay.reshape(var_4126.astype('int16'), [4, 2, 5]))
call_4127 = func_3727_call(relay.reshape(var_4126.astype('int16'), [4, 2, 5]))
func_3471_call = mod.get_global_var('func_3471')
func_3474_call = mutated_mod.get_global_var('func_3474')
var_4130 = relay.var("var_4130", dtype = "float32", shape = (78,))#candidate|4130|(78,)|var|float32
var_4131 = relay.var("var_4131", dtype = "float64", shape = (882,))#candidate|4131|(882,)|var|float64
call_4129 = relay.TupleGetItem(func_3471_call(relay.reshape(var_4130.astype('float32'), [2, 3, 13]), relay.reshape(var_4131.astype('float64'), [882,]), ), 4)
call_4132 = relay.TupleGetItem(func_3474_call(relay.reshape(var_4130.astype('float32'), [2, 3, 13]), relay.reshape(var_4131.astype('float64'), [882,]), ), 4)
func_1047_call = mod.get_global_var('func_1047')
func_1049_call = mutated_mod.get_global_var('func_1049')
var_4145 = relay.var("var_4145", dtype = "float64", shape = (432,))#candidate|4145|(432,)|var|float64
call_4144 = relay.TupleGetItem(func_1047_call(relay.reshape(var_4145.astype('float64'), [9, 8, 6])), 0)
call_4146 = relay.TupleGetItem(func_1049_call(relay.reshape(var_4145.astype('float64'), [9, 8, 6])), 0)
func_1047_call = mod.get_global_var('func_1047')
func_1049_call = mutated_mod.get_global_var('func_1049')
call_4147 = relay.TupleGetItem(func_1047_call(relay.reshape(call_4144.astype('float64'), [9, 8, 6])), 0)
call_4148 = relay.TupleGetItem(func_1049_call(relay.reshape(call_4144.astype('float64'), [9, 8, 6])), 0)
bop_4150 = relay.not_equal(uop_4120.astype('bool'), relay.reshape(var_4101.astype('bool'), relay.shape_of(uop_4120))) # shape=(8, 2, 7)
uop_4155 = relay.log2(bop_4150.astype('float32')) # shape=(8, 2, 7)
bop_4158 = relay.less(uop_4155.astype('bool'), relay.reshape(bop_4150.astype('bool'), relay.shape_of(uop_4155))) # shape=(8, 2, 7)
bop_4163 = relay.mod(bop_4158.astype('float32'), relay.reshape(bop_4102.astype('float32'), relay.shape_of(bop_4158))) # shape=(8, 2, 7)
func_2585_call = mod.get_global_var('func_2585')
func_2590_call = mutated_mod.get_global_var('func_2590')
const_4173 = relay.const([-1.863762,-4.981776,-8.319474,-5.593290,8.044263,-7.884297,-9.943219,7.139630,4.872095,8.321830,-2.838905,-0.846881,-6.830751,-7.269425,6.287967,5.361163,8.591532,-3.901188,-7.075154,9.237156,-4.268220,4.530391,4.615809,0.217882,-1.967079,-0.659363,-0.097952,-2.841725,-7.932908,1.338515,-0.259705,-1.384602,-7.916165,-5.598248,8.921351,-1.789099,2.136461,-0.095108,-7.618219,6.563711,8.449286,1.702080,9.799168,-8.316350,-8.179620,7.233320,-6.221299,-8.900385,-7.952269,-4.924544,-3.001183,-8.555100,-3.988411,-2.925141,-4.481702,1.059475,3.327052,-5.925743,0.472938,1.731693,-8.757221,-2.551033,-7.922523,9.702140,2.740403,-0.237629,-0.622391,8.128196,-7.470381,4.159764,-4.929085,-6.377651,2.921863,-7.825513,6.703637,-6.305875,-2.181673,-5.968411,1.983056,8.180879,6.503841,3.970329,-7.971110,-1.179838,-2.482090,-1.800081,9.109730,9.397490,0.751387,7.621358,8.429348,-6.207824,-9.800350,-6.657807,-6.766981,8.271294,7.960135,2.092184,1.130894,-2.728412,6.863124,-2.305240,5.947122,2.742232,5.710718,3.803060,-0.333605,-4.279856,3.714210,-4.286812,5.686414,2.781783,-5.979420,-5.443942,2.846635,-8.514400,2.883128,2.073312,-6.696622,5.216695,6.801606,-5.024109,-1.960339,-9.793047,9.026475,1.045819,-2.156180,8.024905,0.411169,2.156643,1.203227,1.144711,-3.225318,4.262032,9.126208,3.978825,-8.465444,-7.200676,-2.643652,-5.609881,-8.079330,-3.529174,-7.848480,4.844372,-7.123956,-6.398338,-2.359601,-1.323921,-3.645610,8.670386,2.985045,-2.869752,-9.273230,-3.326134,-4.316777,-2.701301,2.121215,6.681603,7.939812,8.407940,7.677934,3.547706,-8.287616,0.129218,0.848398,-1.918787,8.368945,-2.556286,-5.466653,-1.045950,0.028633,4.734993,-3.201410,3.351926,3.384691,4.419842,-6.536603,7.040145,-3.617048,-3.903344,5.789070,-3.917422,1.902822,5.477167,-2.193633,-9.633783,-4.162328,-6.901656,4.516438,-1.338420,-2.899484,0.684297,-1.632564,3.891480,5.400756,2.127422,5.781057,9.424833,-9.789072,-6.257746,5.923096,7.669248,-4.802255,-1.152485,6.457272,-4.327519,-4.890415,-1.668575,-2.505874,8.093439,4.944654,2.462571,3.031388,-5.837713,0.643638,-3.987927,0.665865,-9.425134,7.857774,8.450780,-1.921132,-6.750074,-9.762592,2.904574,8.321412,-6.521226,9.371774,4.471384,0.823236,9.229738,-8.990368,8.669832,0.420562,6.221164,-9.424760,3.873961,-1.067966,1.321649,-0.894713,-5.436350,1.635711,5.366360,-3.324403,4.111722,-0.900740,-5.061011,-8.007664,-6.078091,8.773648,-8.497222,9.253938,-1.089840,-3.189957,-7.885856,7.792805,-4.872279,9.002095,3.264029,-2.981912,8.944931,8.594569,7.089455,3.557615,2.330367,7.242706,-9.896632,8.387115,-4.368327,-4.659944,1.456861,5.987310,3.896478,8.267152,-7.290947,9.241513,-3.470105,4.825916,5.954076,9.126009,-4.275509,-5.010655,3.663527,4.071735,9.267395,-7.360902,3.972332,-6.721453,9.800773,-8.915221,0.801727,1.895662,-5.204860,1.658777,-3.737604,1.124724,6.175375,7.256949,9.926180,6.791888,0.390279,6.200655,4.535345,6.549805,1.512983,6.883441,2.722802,-0.781940,5.561509,1.528599,4.165560,-2.898782,9.435512,6.979728,8.062364,4.932718,8.537195,3.419839,2.116644,4.465188,-9.904887,1.914989,4.183562,-1.913560,-3.849757,-7.507380,-3.895768,-7.058717,7.923127,-4.934145,-6.343678,0.580770,9.551254,2.302410,4.048309,9.498253,0.140872,7.399253,5.401841,2.012356,-4.032551,5.010938,5.826723,-0.702879,0.358609,0.459051,-7.461944,7.035236,4.983098,-8.407065,5.989934,5.279546,9.134654,-1.187432,-0.730062,-2.734437,1.694533,9.289148,8.496628,1.882172,-8.134165,3.839531,0.146878,-2.856440,9.968014,0.836733,2.085064,1.317107,-3.157010,0.446779,8.918272,6.953735,5.266658,3.576298,-7.496728,2.152690,5.245839,3.733746,-5.823488,-8.200869,2.857316,-4.407527,-8.105021,3.329232,2.094669,8.910661,-9.860332,-8.217088,5.898499,-0.452692,-1.119974,-3.830545,-5.443415,8.097804,-2.702771,-4.995021,5.174378,-7.232012,-0.249564,-4.795479,-2.856922,0.826702,-8.835773,-2.039732,5.842165,6.350186,-4.225880,-6.557718,-4.126456,7.146454,2.069423,-5.149655,3.829380,-3.437903,-9.548008,5.283469,-4.149151,0.411226,-3.750932,-1.031589,-3.717283,-2.841682,2.077508,-4.076463,-3.452593,-0.747043,1.439737,-1.837203,3.244242,0.246533,-1.136456,-6.540396,5.285530,7.314539,0.245551,8.997154,-0.834689,2.805996,-6.894139,5.636246,2.659834,-4.948188,-5.837968,2.801423,3.812981,1.522738,-5.116588,-9.479268,4.081533,0.866746,6.317340,-8.112449,-4.320179,-0.116456,3.002772,7.704222,2.313232,-7.621851,7.356404,-8.488701,-6.836380,-7.824253,6.218937,-1.493788,-5.775604,-3.111724,-5.675598,8.945628,-3.150201,-2.894358,3.166017,-1.868366,8.511028,-2.229166,8.697690,-0.695523,-4.689838,-6.366100,2.944072,-6.205897,-2.849679,-9.627225,-3.946209,-8.753261,2.910115,-2.354907,-4.066003,0.073659,9.049049,-2.677419,-1.962731,-1.685228,7.573920,3.432938,5.034149,9.100484,-5.238612,9.990370,1.882710,8.567849,-1.889647,-7.164105,-3.311264,-2.392597,5.358084,-7.964841,2.686090,5.548774,3.474400,-3.948198,-7.896982,1.786941,6.742844,7.054236,-5.464502,1.581267,5.527958,0.021918,3.984782,0.078336,6.423238,4.215127,7.927124,3.722309,6.636889,6.726861,0.470805,-0.209061,2.925704,-2.468734,-1.591404,-6.663951,5.523637,2.103200,-7.674079,6.773726,0.257854,-0.400397,7.802943,7.458548,4.138670,6.934836,6.909850,6.723894,8.776542,-2.464703,8.498844,4.028828,4.026342,-1.180643,-8.975065,7.961480,-4.343166,-3.384779,7.265733,-4.123822,-4.140205,-4.053663,4.476432,1.752056,5.949681,-4.689184,-0.703705,7.943597,-2.066703,0.584943,6.119985,-7.614863,2.083016,-7.639751,0.933170,7.771397,-1.085136,7.170409,-6.041709,-9.975977,4.417872,-7.206542,1.337936,6.442807,6.737834,-1.075201,6.626044,-8.715159,2.943232,2.142788,3.854247,-6.748156,-2.601984,2.797463,-1.601960,-8.749375,-4.229044,-1.835283,-1.939588,-1.754267,-4.970944,9.602759,2.271927,-4.388349,-6.081450,4.613065,6.365373,6.808732,-2.928440,-6.309419,-1.157462,-7.758297,8.898099,-5.665649,-3.618526,-1.211012,4.285423,-8.089929,6.748489,3.998238,-8.676087,-5.737848,3.157554,-7.934901,-8.998852,-8.095961,1.878669,-3.162045,3.251756,0.628030,8.854822,5.764640,0.966049,1.595267,-6.139568,-0.349897,-4.125219,-9.543691,-6.616044,4.133299,5.588548,4.577216,-7.919176,-2.557211,5.534215,9.744385,4.519584,0.529275,-6.774496,2.818510,-6.756844,3.353437,-9.937938,-5.944300,-9.701256,-9.395217,2.078244,2.224801,7.400788,-8.365928,7.736922,5.628348,-5.357919,7.432703,2.428459,2.034457,-2.263021,-7.840608,8.836565,5.373583,-3.127892,4.497362,9.395806,9.214199,-9.888163,9.702525,9.906202,-5.056219,-8.445757,-0.155531,3.806172,7.018791,3.737762,-6.146358,-3.217120,-3.759987,6.186692,-7.945131,-1.766679,3.115039,2.499049,-1.816043,0.440814,-7.668240,-3.143252,-8.352095,8.362442,9.715283,9.670499,8.602734,8.733271,0.051636,6.348098,-3.812773,3.518172,1.081620,-8.960437,-6.619743,-3.808167,7.200803,2.237260,-3.703216,5.408630,3.668316,-0.540849,-8.064079,8.742692,-2.242559,-8.075023,-8.373604,7.513809,-3.825774,-6.560478,2.469106,-8.851593,2.562751,-6.283814,-0.421386,-9.982310,8.959994,-2.399932,-9.408384,9.553794,-3.569807,3.305540,1.168981,-7.265628,7.871693,-9.900189,-4.515471,3.745502,8.973739,9.140494,-0.865584,2.237311,-0.200418,6.008915,4.701338,-9.324088,-5.131940,3.554986,-1.010793,-7.343505,-9.557332,-9.026143,6.788458,-7.040558,-5.961524,-6.458804,3.129981,-9.174153,2.336548,6.234112,-6.235492,-8.031644,9.766397,-5.507038,-9.807266,6.235337,-2.234155,0.244309,-4.080417,-1.242964,8.082254,3.964727,-5.710287,7.051315,3.008273,5.195467,-3.350297,7.547843,8.549074,5.476960,-9.202214,-1.400051,-7.095461,-3.245413,9.084603,3.008003,0.968762,-8.128750,-4.075504,0.660076,-9.035456,0.214418,-0.795485,-1.382930,9.395158,6.478437,4.248501,-2.004347,3.769808,-2.036169,9.356599,-1.464703,-7.297002,-2.099702,-1.926530,-7.007214,-6.479195,5.170830,-7.428821,-1.937228,3.075202,0.061821,2.867269,-6.255814,-9.048854,-8.777021,8.144695,-2.333170,7.251038,-9.652780,-1.717282,-3.698127,2.332417,-6.248893,7.016810,8.345653,-0.514916,7.379872,-7.986085,1.335878,-4.029061,-5.805932,-0.902993,8.403526,6.784688,0.250487,8.963343,2.242470,5.064703,-5.213107,-0.572747,0.951471,2.642949,7.749479,-5.364811,-6.851929,-7.984540,-7.359264,-0.228509,-9.821425,-1.314518,7.626803,7.403599,-0.053571,-1.143314,9.424450,-9.091662,-2.699926,-1.345393,0.018326,-5.987771,7.613091,-4.201532,7.229194,-2.792856,-4.012868,1.007216,-4.743963,-3.042484,0.940715,0.938237,-9.937172,4.974064,3.467372,-3.437798,-3.655747,6.000473,5.062701,-4.320661,-5.064761,-6.272242,4.692122,-8.621987,-9.423714,-0.262318,-5.002901,-4.010325,4.998992,7.442037,9.182725,9.654147,-9.757566,-3.357166,-8.309395,-2.649966,9.987152,9.845795,-7.344715,-7.969413,3.535678,-6.621426,-0.309643,-9.273695,-9.598854,9.912657,0.685079,1.832591,9.777765,0.843949,-1.367713,-9.645074,-8.178332,-7.391847,9.698521,8.075463,0.830228,-7.768971,-9.921785,6.716550,-2.043142,1.484138,8.305838,2.908199,-8.029472,-1.508312,-0.762425,-4.964999,4.055805,1.689992,0.981905,8.086330,-0.014667,-8.716982,-5.108133,8.242974,-7.398007,-5.516666,-5.878499,-2.916718,-9.805649,1.772749,4.452905,8.391592,3.976578,-7.074850,3.490604,0.419564,5.651793,-3.007450,-0.007272,5.564013,-3.391214,-1.100923,5.702747,3.209453,-3.171480,6.997061,-3.140193,-1.599086,3.750962,-0.537557,-1.464605,8.840518,-1.723390,5.825047,7.793781,1.926141,-4.375424,-3.318083,2.324368,6.332386,7.869279,1.936836,1.449475,0.156370,-6.177257,4.543704,5.246242,9.643115,-6.563552,-7.978554,0.950124,-3.763683,-8.354980,9.303245,-2.408918,2.404270,5.673496,-1.431863,-9.970921,-4.855126,4.795352,7.314718,-7.777896,-7.707785,5.041559,-0.114165,8.661925,-9.157236,-0.839531,9.898298,-4.826903,-3.467802,9.003769,-6.742985,-2.401757,6.612892,-4.126472,-9.051993,2.286177,3.559860,-2.874041,9.210183,-6.770307,4.178372,5.204997,-5.897784,8.516882,-4.462561,9.755141,-3.419027,6.942759,0.874713,-6.580332,-4.016853,9.944864,-1.735874,9.685298,5.371072,2.974308,-2.598903,0.312623,-5.431874,2.294502,7.823885,2.520164,-4.570748,5.900848,-2.834805,-1.232691,2.208891,-6.266493,9.720444,1.538436,-6.135789,3.117623,-3.478170,4.606759,5.405418,3.005801,2.926155,-0.940798,1.628645,9.571346,1.465689,-5.894894,6.730946,-9.707458,-7.157837,5.187463,-9.359737,-8.519873,3.433223,4.921235,-7.862653,-7.116545,6.796991,-7.447980,-1.617157,-2.613291,4.313104,3.558845,1.109693,6.547952,9.091732,-7.645111,5.886427,-0.621085,-8.466119,3.465999,-9.740866,-4.922629,-2.201210,-4.775906,4.992937,-1.152495,8.595976,4.452680,0.984588,9.665174,-6.460458,-3.412494,-5.096527,-6.312366,-8.854330,3.720963,0.471931,-8.207761,-4.217450,1.180188,0.158565,-6.441955,2.932360,8.544291,-4.084594,5.958701,6.316412,-0.337329,0.332775,-7.415912,-6.111674,-5.236280,-4.536125,3.918891,-8.003401,-6.896103,-6.317288,-7.548870,-4.321623,-6.925962,-9.773918,5.872048,5.037809,0.706508,2.511937,-5.088932,-7.420229,4.758776,6.845286,6.740905,9.251941,6.610241,6.198528,6.439139,-1.990138,-1.139396,-0.748886,-0.262323,-8.918128,-3.475724,3.363718,2.376726,9.453587,-7.508745,-3.949146,-1.401087], dtype = "float32")#candidate|4173|(1144,)|const|float32
call_4172 = relay.TupleGetItem(func_2585_call(relay.reshape(const_4173.astype('float32'), [11, 13, 8]), relay.reshape(const_4173.astype('float32'), [11, 13, 8]), relay.reshape(const_4173.astype('float32'), [11, 13, 8]), ), 2)
call_4174 = relay.TupleGetItem(func_2590_call(relay.reshape(const_4173.astype('float32'), [11, 13, 8]), relay.reshape(const_4173.astype('float32'), [11, 13, 8]), relay.reshape(const_4173.astype('float32'), [11, 13, 8]), ), 2)
output = relay.Tuple([bop_4096,call_4125,var_4126,call_4129,var_4130,var_4131,call_4144,var_4145,call_4147,bop_4163,call_4172,const_4173,])
output2 = relay.Tuple([bop_4096,call_4127,var_4126,call_4132,var_4130,var_4131,call_4146,var_4145,call_4148,bop_4163,call_4174,const_4173,])
func_4175 = relay.Function([var_4095,var_4101,var_4126,var_4130,var_4131,var_4145,], output)
mod['func_4175'] = func_4175
mod = relay.transform.InferType()(mod)
mutated_mod['func_4175'] = func_4175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4175_call = mutated_mod.get_global_var('func_4175')
var_4177 = relay.var("var_4177", dtype = "uint32", shape = (8, 2, 7))#candidate|4177|(8, 2, 7)|var|uint32
var_4178 = relay.var("var_4178", dtype = "uint32", shape = (8, 2, 7))#candidate|4178|(8, 2, 7)|var|uint32
var_4179 = relay.var("var_4179", dtype = "int16", shape = (40,))#candidate|4179|(40,)|var|int16
var_4180 = relay.var("var_4180", dtype = "float32", shape = (78,))#candidate|4180|(78,)|var|float32
var_4181 = relay.var("var_4181", dtype = "float64", shape = (882,))#candidate|4181|(882,)|var|float64
var_4182 = relay.var("var_4182", dtype = "float64", shape = (432,))#candidate|4182|(432,)|var|float64
call_4176 = func_4175_call(var_4177,var_4178,var_4179,var_4180,var_4181,var_4182,)
output = call_4176
func_4183 = relay.Function([var_4177,var_4178,var_4179,var_4180,var_4181,var_4182,], output)
mutated_mod['func_4183'] = func_4183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4200 = relay.var("var_4200", dtype = "uint32", shape = (9, 6, 7))#candidate|4200|(9, 6, 7)|var|uint32
var_4201 = relay.var("var_4201", dtype = "uint32", shape = (9, 6, 7))#candidate|4201|(9, 6, 7)|var|uint32
bop_4202 = relay.subtract(var_4200.astype('uint32'), relay.reshape(var_4201.astype('uint32'), relay.shape_of(var_4200))) # shape=(9, 6, 7)
uop_4215 = relay.log2(var_4201.astype('float64')) # shape=(9, 6, 7)
func_3647_call = mod.get_global_var('func_3647')
func_3651_call = mutated_mod.get_global_var('func_3651')
const_4236 = relay.const([-10,-7,-4,-9,-5,2,9], dtype = "int64")#candidate|4236|(7,)|const|int64
const_4237 = relay.const([4,-5,6,-1,-4,8,-2,9,10,4,-5,10,7,-5,10,10,-9,-8,7,-2,2,6,7,-7,-1,2,5,-5,6,3,-3,1,7,7,-1,-9,-10,-7,2,5,-7,1,-9,-8,-8,10,-3,-3,10,-8,-8,-4,-4,5,-6,-9,-7,9,-9,-2,8,-8,5,-3,3,8,8,10,-6,6,-7,-7,5,4,-10,1,-10,-9,4,2,3,1,-3,-1,-9,-10,-4,-3,-2,-5,5,10,-8,-2,3,2,-5,7,-5,6,-7,-10,-3,2,-4,-8,6,6,-1,6,4,9,-10,-7,7,9,-10,-7,-4,8,9,-6,-8,-6,-3,-2,-10,-6,9,7,7,-10,-5,-9,9,4,7,-2,2,-3,-2,-4,8,-5,3,1,-6,-6,1,9,-5,7,-4,-7,8,-3,-5,-3,5,9,9,-8,2,-7,7,2,-8,-4,-7,1,10,-4,-9,9,-6,-3,-8,-2,-3,3,5,-4,2,7,10,7,-10,-7,9,-4,-4,-1,-6,-5,2,-2,3,1,-5,-7,6,7,4,-6,1,9,7,-2,-3,-5], dtype = "int64")#candidate|4237|(210,)|const|int64
var_4238 = relay.var("var_4238", dtype = "int64", shape = (560,))#candidate|4238|(560,)|var|int64
call_4235 = relay.TupleGetItem(func_3647_call(relay.reshape(const_4236.astype('int64'), [1, 1, 7]), relay.reshape(const_4237.astype('int64'), [5, 6, 7]), relay.reshape(var_4238.astype('int64'), [5, 16, 7]), ), 1)
call_4239 = relay.TupleGetItem(func_3651_call(relay.reshape(const_4236.astype('int64'), [1, 1, 7]), relay.reshape(const_4237.astype('int64'), [5, 6, 7]), relay.reshape(var_4238.astype('int64'), [5, 16, 7]), ), 1)
output = relay.Tuple([bop_4202,uop_4215,call_4235,const_4236,const_4237,var_4238,])
output2 = relay.Tuple([bop_4202,uop_4215,call_4239,const_4236,const_4237,var_4238,])
func_4240 = relay.Function([var_4200,var_4201,var_4238,], output)
mod['func_4240'] = func_4240
mod = relay.transform.InferType()(mod)
mutated_mod['func_4240'] = func_4240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4240_call = mutated_mod.get_global_var('func_4240')
var_4242 = relay.var("var_4242", dtype = "uint32", shape = (9, 6, 7))#candidate|4242|(9, 6, 7)|var|uint32
var_4243 = relay.var("var_4243", dtype = "uint32", shape = (9, 6, 7))#candidate|4243|(9, 6, 7)|var|uint32
var_4244 = relay.var("var_4244", dtype = "int64", shape = (560,))#candidate|4244|(560,)|var|int64
call_4241 = func_4240_call(var_4242,var_4243,var_4244,)
output = call_4241
func_4245 = relay.Function([var_4242,var_4243,var_4244,], output)
mutated_mod['func_4245'] = func_4245
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4340 = relay.var("var_4340", dtype = "float32", shape = (8, 4, 6))#candidate|4340|(8, 4, 6)|var|float32
uop_4341 = relay.asin(var_4340.astype('float32')) # shape=(8, 4, 6)
func_1804_call = mod.get_global_var('func_1804')
func_1806_call = mutated_mod.get_global_var('func_1806')
const_4348 = relay.const([-8.721488,4.142844,-2.290153,3.479833,7.416623,7.403968,-7.628518,3.364172,-5.181431,7.013128,0.257394,5.453206,-7.494673,-4.044844,-0.262783,9.757606,-6.573688,-3.530339,8.550631,-5.712474,-3.107714,-3.655403,3.000358,-4.045113,5.759616,3.418874,-8.755276,-1.949596,-7.098786,-0.983532,-0.725172,8.004428,1.877016,8.306759,7.678489,6.346175,7.163771,4.300943,-4.294187,8.118922,8.944948,-2.485938,1.407719,2.639565,2.229361,-0.317978,2.050459,7.567916,6.142797,6.611527,-0.631356,-7.273356,-0.785950,-3.506400,9.625502,-2.580975,-6.485487,-9.659111,2.919176,-6.983843,-8.446330,-4.851938,-2.009833,-2.470128,8.442716,5.214469,-7.312980,5.477038,8.303723,0.993183,7.739089,9.840314,1.601809,-2.586227,2.566674,3.784622,3.716388,0.976135,8.332947,-6.168541,1.943862,-7.237583,0.288837,-2.269608,-1.782624,-3.501277,1.362207,3.585742,0.318769,6.661055,-0.932500,-3.978039,0.274973,-3.025874,7.447970,7.761447,-5.841157,5.337256,3.901384,-0.456926,9.270773,-9.057524,-6.354635,1.853116,6.023306,2.103489,-4.067530,8.484922,9.666974,-8.516105,-0.902352,-6.324073,-6.718330,0.603765,9.045306,5.758719,-7.446395,-2.657131,3.808734,-9.040078,-2.181095,3.657349,-6.339202,-4.194989,-7.012135,-2.460164,-2.920026,3.255607,-8.071800,9.552414,-1.638463,8.539295,-2.907281,1.855460,8.452894,-5.016071,8.372044,-6.027347,-8.494803,-3.533302,-4.355417,-9.444210,9.452769,9.358348,-5.793991,0.591568,8.098275,2.251670,-7.165876,9.153153,-0.820021,-7.628578,8.327831,9.547080,2.518927,-4.774739,8.054025,8.585043,-3.908618,-9.503177,9.623601,0.479940,-5.593053,-7.465583,-1.012547,1.299824,9.895853,-4.783086,-5.911259,-0.839379,0.667064,1.638667,5.171285,6.936510,0.883456,-6.006394,-5.515847,2.294989,-9.564661,7.726009,-3.758213,-5.132706,-8.124462,-6.098631,-6.070969,4.992089,-4.269640,-2.549372,0.053091,7.242547,-3.820716,3.337244,-5.183016,7.245537,-8.465916,4.379977,8.190703,-6.489493,-2.525683,4.009935,6.885428,3.131056,5.360447,-2.778888,3.583782,-6.823433,7.580785,-4.861451], dtype = "float32")#candidate|4348|(208,)|const|float32
call_4347 = relay.TupleGetItem(func_1804_call(relay.reshape(const_4348.astype('float32'), [13, 4, 4])), 1)
call_4349 = relay.TupleGetItem(func_1806_call(relay.reshape(const_4348.astype('float32'), [13, 4, 4])), 1)
output = relay.Tuple([uop_4341,call_4347,const_4348,])
output2 = relay.Tuple([uop_4341,call_4349,const_4348,])
func_4355 = relay.Function([var_4340,], output)
mod['func_4355'] = func_4355
mod = relay.transform.InferType()(mod)
mutated_mod['func_4355'] = func_4355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4356 = relay.var("var_4356", dtype = "float32", shape = (8, 4, 6))#candidate|4356|(8, 4, 6)|var|float32
func_4355_call = mutated_mod.get_global_var('func_4355')
call_4357 = func_4355_call(var_4356)
output = call_4357
func_4358 = relay.Function([var_4356], output)
mutated_mod['func_4358'] = func_4358
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4404 = relay.var("var_4404", dtype = "float32", shape = (6, 6, 9))#candidate|4404|(6, 6, 9)|var|float32
uop_4405 = relay.acosh(var_4404.astype('float32')) # shape=(6, 6, 9)
func_388_call = mod.get_global_var('func_388')
func_391_call = mutated_mod.get_global_var('func_391')
var_4428 = relay.var("var_4428", dtype = "float64", shape = (630,))#candidate|4428|(630,)|var|float64
var_4429 = relay.var("var_4429", dtype = "float64", shape = (882,))#candidate|4429|(882,)|var|float64
call_4427 = relay.TupleGetItem(func_388_call(relay.reshape(var_4428.astype('float64'), [10, 7, 9]), relay.reshape(var_4429.astype('float64'), [882,]), ), 3)
call_4430 = relay.TupleGetItem(func_391_call(relay.reshape(var_4428.astype('float64'), [10, 7, 9]), relay.reshape(var_4429.astype('float64'), [882,]), ), 3)
output = relay.Tuple([uop_4405,call_4427,var_4428,var_4429,])
output2 = relay.Tuple([uop_4405,call_4430,var_4428,var_4429,])
func_4432 = relay.Function([var_4404,var_4428,var_4429,], output)
mod['func_4432'] = func_4432
mod = relay.transform.InferType()(mod)
mutated_mod['func_4432'] = func_4432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4432_call = mutated_mod.get_global_var('func_4432')
var_4434 = relay.var("var_4434", dtype = "float32", shape = (6, 6, 9))#candidate|4434|(6, 6, 9)|var|float32
var_4435 = relay.var("var_4435", dtype = "float64", shape = (630,))#candidate|4435|(630,)|var|float64
var_4436 = relay.var("var_4436", dtype = "float64", shape = (882,))#candidate|4436|(882,)|var|float64
call_4433 = func_4432_call(var_4434,var_4435,var_4436,)
output = call_4433
func_4437 = relay.Function([var_4434,var_4435,var_4436,], output)
mutated_mod['func_4437'] = func_4437
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4623 = relay.var("var_4623", dtype = "float64", shape = (9, 15, 15))#candidate|4623|(9, 15, 15)|var|float64
const_4624 = relay.const([[[2.969742,-2.309433,0.338432,-9.720416,6.563396,-2.072745,-8.371291,-7.459167,9.791884,4.815166,3.764476,8.739071,0.307310,-5.474204,7.653264],[9.826269,5.958140,-1.360893,9.975426,-3.062721,-7.906672,9.237063,5.522459,-4.457104,-6.987148,-4.166074,-7.896629,-4.659382,-1.980594,-6.304038],[1.426437,7.781995,4.021613,5.064713,-2.132347,5.616769,-8.486573,4.755438,-3.534709,5.049459,-8.937039,-6.000672,9.151981,-7.523325,-4.870685],[-2.239157,2.042652,-7.938265,7.757880,5.275450,4.530391,-7.805226,-6.113689,6.714601,7.019332,8.291843,2.745625,-6.755041,-2.655345,-9.483243],[5.118130,-7.473367,-7.112388,-6.516703,4.284320,6.218819,-9.882071,-2.037183,-2.879010,-1.502214,-5.478217,8.959110,7.734269,4.419906,-4.364455],[-9.526775,-7.932082,-4.583525,9.906402,-4.072863,4.761924,1.100299,5.992051,-9.172473,-4.725570,2.470901,-1.085473,-2.562357,-5.547227,9.285022],[2.572414,0.454390,3.190651,6.520255,-2.539784,2.023289,5.492236,6.835286,-9.831703,-2.765911,-6.676088,-8.516456,-1.674478,5.967085,-5.159286],[-2.664306,-9.684788,5.233290,3.343828,1.311252,-3.085558,7.304492,8.677472,-7.866596,-7.052988,-7.247625,-8.041687,4.295824,3.608830,3.673771],[-1.858813,-1.603889,0.980696,-9.476514,-7.528188,-3.135131,-1.157149,-5.658007,6.827246,1.129752,-6.541954,-6.623535,-1.675177,3.476856,-1.686095],[1.015809,-0.320625,-9.962650,2.793488,7.162291,-2.719407,-5.310461,3.443115,-5.370568,5.217770,5.917638,-8.991861,-4.790596,4.116170,-5.384210],[9.560581,-8.359438,7.850270,1.462032,3.291207,-9.584838,9.636957,-4.665316,-5.049743,2.711152,7.656246,5.578714,-9.488863,-8.641383,5.718094],[-0.683014,3.295426,3.878090,1.563216,9.337891,1.723810,-5.285846,3.364621,9.463391,3.676999,9.612362,5.929872,-5.508926,5.711322,-8.716322],[-2.959884,2.369787,7.616376,-6.573519,8.967379,-2.888720,-2.550934,5.850460,1.491292,4.633481,9.130248,4.961719,7.747148,8.832650,8.432590],[9.544555,-2.421881,5.664871,1.498197,-6.318509,6.115509,7.625082,5.075546,0.635726,-0.496980,1.045730,-1.704260,-3.781164,0.553082,-9.584856],[2.442149,-6.118857,-1.547164,-0.402740,7.196240,-3.254686,4.300256,-7.222257,3.035880,0.772931,-3.934724,8.342251,-7.602921,-6.749085,3.999457]],[[-3.885597,3.854498,-0.465207,-4.883515,6.384077,7.091962,-2.835313,-1.353653,6.121793,0.505991,0.986901,-9.622973,-1.704063,-7.287763,-2.463817],[8.883995,7.573166,9.487666,-4.979792,-5.000139,9.932461,7.311989,-4.478657,0.149410,5.253749,-6.646249,-0.437722,-8.090881,1.184557,-2.184341],[-9.650442,-6.860074,-4.822438,-5.634937,1.701987,-2.536345,-8.758624,3.166729,2.221459,0.251029,1.314291,2.642627,-0.714415,-5.230817,3.535261],[9.461816,-9.165231,0.402392,5.476782,4.699416,-6.303202,6.894969,9.951751,3.443090,9.557555,-9.608089,-9.904465,7.431817,9.047903,0.446852],[-1.445062,-5.589798,-4.300654,4.051579,3.712730,3.927878,-7.881237,1.741406,1.577360,9.724487,7.470663,9.357130,5.448173,-2.675397,-1.424421],[7.233835,-8.992501,6.116938,1.479777,-9.239556,5.860928,-1.276723,-4.798297,1.740991,-2.305094,1.805654,-0.996860,-2.973243,2.917240,-3.808022],[-3.674275,-8.688425,-7.097384,5.798990,-6.366972,-4.396163,7.510418,5.789471,-6.287562,6.481707,0.449473,-9.230926,1.735182,-8.384742,7.431679],[-5.877442,-0.985036,-4.802095,-6.462905,9.142228,9.071252,-9.827104,-0.544089,6.531583,5.217054,-3.255941,4.043771,-4.468928,2.855879,6.347848],[-8.664390,-1.603203,-9.344971,1.217252,-5.022080,9.797523,-4.016443,5.646779,3.153621,-8.987971,2.643957,-2.685027,4.558618,-1.089357,0.411373],[-1.843601,7.973353,-0.739484,0.593005,6.766178,-4.945286,-0.364000,-4.771121,-1.981514,-5.286285,-6.447565,2.842876,-3.271282,-3.742684,3.609227],[-0.667530,6.409534,-3.306492,8.846110,8.996031,7.576806,9.301428,-3.378417,0.452039,0.909342,1.791675,-2.837817,-3.126349,-6.805277,9.083214],[-2.021410,7.299870,9.666630,-3.128682,4.426514,1.239063,7.007808,-4.727181,5.265703,-2.131569,9.733648,-2.933421,-2.456736,-7.978842,8.155477],[-9.981783,6.483375,7.166699,3.708909,7.835030,7.315801,-9.986219,0.538833,1.302234,-9.956732,-9.713060,8.431179,6.742465,6.450798,-1.334099],[3.571303,0.630168,-4.468960,-2.419111,-5.012095,8.601181,-3.966548,-9.164347,-9.478978,-3.814317,-9.057436,0.308960,-2.410044,6.089969,-9.932487],[-1.592487,8.991690,8.361225,9.069528,8.911677,9.870905,8.929002,-8.148645,-3.868125,2.087151,-9.369468,8.680889,-8.243556,-2.935906,8.250592]],[[0.817751,3.767516,5.355052,8.013835,-6.025805,-9.139793,5.525760,0.077635,-0.268364,-9.568426,5.692847,9.137127,-3.866782,-3.171244,3.695619],[-3.094732,6.771540,6.689427,-3.698741,3.028390,-1.939706,-5.572575,-2.098699,9.910635,1.398310,-5.968464,-2.708690,4.265289,8.761598,-2.437303],[-6.272455,-4.459517,-4.034733,-0.426951,-2.475704,3.279404,-8.464385,-5.918152,7.693640,2.425752,4.276500,0.662582,4.309911,2.462777,-8.673837],[3.620294,-8.569218,9.157753,-5.219790,4.805465,8.296942,7.782125,-0.122201,-4.791745,8.831898,4.483515,-8.771893,6.708529,0.901828,-6.589354],[-8.019198,-6.262288,0.945986,9.681992,-3.405148,-1.478297,3.480687,6.167078,0.033658,9.835990,3.026038,-7.955022,-1.311418,4.352529,-8.680689],[0.525330,7.853518,1.244686,7.498308,-0.003938,2.674720,-5.685359,-1.514405,-0.077256,6.146789,7.207458,-7.555256,-8.910984,9.955934,9.063018],[-8.155384,-9.178867,-4.403547,-8.997805,-1.617532,4.109626,-1.030177,-4.139754,4.291264,-1.141073,-8.773325,2.866066,1.241580,8.413443,3.549455],[-1.178884,-9.696192,-6.459389,-1.628077,-6.129733,4.420553,-0.010699,8.419861,2.822448,-0.759327,-0.049720,9.720379,7.066463,2.549969,7.609814],[8.705309,-8.401547,-8.731716,6.749486,-1.744261,1.997782,7.432046,7.128603,-5.333088,-9.662847,-0.928888,3.276174,-6.492508,5.996996,-8.776793],[3.724984,-9.280383,4.275786,-7.941829,-4.324720,-4.403309,-2.755552,7.838587,8.245599,-1.306294,-9.932629,-9.180660,-5.575974,9.847964,-3.916368],[-6.204565,5.408228,-4.887335,5.169196,9.263050,5.669423,8.820642,-8.821071,9.121747,-3.216887,9.995788,-5.673654,8.451583,-8.563596,-3.854469],[-3.883495,-2.521901,-1.700196,-7.537907,7.630517,4.059259,6.322294,9.984683,8.962581,6.986483,-3.738857,9.663883,-2.327277,-0.940405,3.176760],[-4.285982,9.999181,0.959074,5.353038,-3.319819,-5.980325,8.178538,-0.357171,6.041274,1.908100,-9.211166,8.495157,-8.553665,-1.220827,-2.233343],[-2.659660,6.566071,-9.674922,6.325370,-1.591575,-2.260715,0.701342,-9.994318,-3.830236,8.556916,5.493803,-0.125161,1.843111,-7.388928,7.319354],[6.963261,0.498670,2.244822,-5.510266,1.567311,-6.398001,0.949349,9.904630,-5.558807,2.939885,2.134436,4.569670,0.737468,6.499192,-8.912518]],[[-4.233792,-7.056214,-0.696366,7.100989,-1.988551,0.617212,6.601582,-1.441160,-6.583056,-8.124726,-4.954129,-9.504830,5.640721,0.590693,-3.282509],[2.248872,9.623651,-4.840155,-8.883358,-2.082630,7.349803,1.298425,-1.214581,2.900691,-9.701081,-3.988021,-8.939753,-1.886212,-5.845884,-0.121378],[6.976576,-7.270762,4.428187,-6.244563,-9.273944,-7.144018,-4.308907,-0.502711,0.494511,-7.302413,-3.634944,-4.991690,6.026998,-5.873632,-9.493610],[-9.121373,2.416207,2.896819,-5.695393,-6.789420,-5.033082,-6.541459,-1.638156,-5.032052,-6.286080,-7.426961,9.455856,2.005139,9.123754,3.876071],[-6.614201,-8.484329,-8.808620,-1.578260,5.708651,1.067399,3.335380,2.319811,5.921727,1.594064,-0.377286,-7.411849,5.895611,-3.592797,6.808888],[-7.537533,-3.295112,3.601921,-9.604979,3.591710,-6.449441,-1.579695,-3.848776,-8.782001,9.908513,3.317366,9.993143,8.032906,-0.487298,7.483946],[9.938258,6.033147,-1.549654,-0.751489,8.254697,2.924335,9.239608,1.753740,9.879337,8.217854,-8.436275,-6.391246,-6.856563,-4.933759,2.401283],[-1.048799,8.453684,-0.829915,2.943370,4.056440,-4.691218,-7.101068,-5.533126,1.915198,1.355407,-7.724755,-8.154911,4.410082,-6.215611,4.860296],[-0.477707,9.339440,9.239072,7.285815,-8.777581,3.547655,5.513415,-8.481480,-6.308305,0.445226,-8.972981,4.365595,-6.368892,4.135257,-6.844437],[7.728746,3.515595,-9.731568,-3.898232,0.125221,-5.694638,-8.033713,-2.139769,6.100032,-3.123489,4.568269,-5.070723,7.503269,5.291534,-4.960362],[1.216899,-0.416040,-1.562400,-1.477461,7.244058,7.300489,-0.707569,2.003202,5.668200,0.052150,-1.042527,-9.150680,1.567219,1.390798,6.893832],[-7.615079,4.040629,7.462649,-9.274438,0.725837,8.120075,1.847897,-1.589964,-4.741701,-8.252455,4.024002,-8.954578,2.178919,-2.738850,8.616651],[-8.767690,-5.088979,-9.472346,5.307790,9.128429,-3.881103,-4.026163,3.930093,6.655014,-3.565279,6.987601,-0.199147,0.358492,-0.421483,-3.443208],[4.840709,3.344067,1.831865,6.513775,-8.375236,5.381502,5.632451,6.193495,-6.778367,0.699110,-8.916058,-6.633374,-2.079085,-6.324178,1.377573],[-0.364097,-9.354645,4.404306,-1.638159,-7.261293,3.256247,9.552227,0.444967,3.726798,4.273791,-4.010456,-6.919471,-5.481979,8.478610,3.745232]],[[-4.234616,5.227762,1.361233,-0.461723,-0.294111,0.235294,-1.060737,-6.942192,8.746032,1.718376,-1.566795,-5.280556,-2.788588,-6.489678,5.781926],[2.759702,4.726004,-6.215173,8.626083,-1.720357,-7.931007,4.651690,5.782633,-0.171822,-1.298571,1.833211,-6.638488,8.882553,9.369194,-7.043621],[9.709804,-9.683794,-6.030492,1.183568,8.519674,6.245033,9.177679,-9.006442,5.853120,9.409940,-7.739628,-3.367356,-0.397660,8.906456,9.130196],[9.631978,2.154965,-1.553123,-1.972133,4.436050,0.490093,0.283450,-3.058429,6.913171,0.365083,3.705779,-5.689887,-7.003082,2.964798,-9.361602],[0.585512,9.458001,3.040384,-1.094059,4.894098,3.151758,6.778809,-9.640352,-4.431678,1.734811,-3.506327,2.706771,-3.875059,-4.950276,9.715777],[4.658210,-7.228185,-7.823767,-1.500637,2.979932,-4.045581,-1.555817,-1.557216,6.704271,7.445412,-1.229135,9.862530,-3.798054,8.069972,6.087087],[5.831819,2.839263,0.708618,5.263062,-3.172380,-7.645640,7.385625,-5.681025,7.271741,-9.242252,-8.252588,-5.457115,-1.979517,-9.935588,3.423590],[-4.532359,-9.663683,-4.234461,9.355387,0.039553,6.965091,3.088032,-9.326250,-0.455459,0.519232,-9.210920,9.924967,-8.377834,1.834420,0.845142],[-5.501410,3.568103,1.491414,8.387166,2.873188,-5.886804,-4.246508,0.489724,-6.693392,-6.266842,-1.234322,0.010304,9.799899,1.988250,-3.245734],[-9.117055,1.035491,3.543933,1.875166,2.214680,0.018097,1.310723,2.862537,6.919119,-4.687860,-7.173324,-3.863829,-8.085786,9.847159,8.360990],[-4.992398,-2.985307,7.880076,-8.243141,-1.292077,-3.845938,-6.836477,1.480070,-4.967355,2.506924,-3.302423,-2.007139,7.655896,6.702358,-7.473895],[6.432171,-1.741098,-1.855533,3.877678,-0.408124,4.922444,-2.871018,9.254851,0.329974,-7.413516,-5.690903,-5.371557,4.287817,-3.302963,-1.363309],[8.578764,3.170957,-8.443387,-6.208339,7.960536,4.163416,0.907812,-4.622027,-9.603874,-6.469608,-9.601788,5.077150,7.341383,-9.606371,2.068999],[9.899915,-6.343217,-4.822956,-0.290195,3.969770,-6.260854,-1.734069,-5.158059,-4.052579,3.957232,2.497193,7.678674,-3.060560,6.127345,-2.711815],[-9.956739,-2.638224,0.410760,7.899206,4.977244,2.737103,3.255212,6.897928,-5.573352,-0.749704,-4.632201,6.473463,9.391375,7.583099,-1.968420]],[[2.222815,1.924276,-9.437052,4.903501,-2.468173,-9.630790,-8.046167,-1.658855,3.994616,2.158198,-8.021285,3.566893,9.569891,4.434673,4.066368],[7.001487,-7.084863,-7.969043,2.243135,-4.101401,-4.454588,2.518615,3.689513,-5.524918,-1.258518,-5.528646,-7.818677,-8.294060,-3.874919,-8.890919],[0.225937,3.798583,-0.675875,-9.294972,9.723154,1.407968,1.699999,-2.634587,-9.449080,0.384369,-2.579376,4.044069,6.004281,-6.884707,-2.690904],[-8.138881,-9.799308,3.517716,8.974825,-6.278249,9.364342,1.098907,-6.847656,7.390208,-3.316140,1.334233,-1.848158,0.130431,-8.837380,-4.056296],[-2.633460,7.879601,-5.731750,0.002474,-7.530189,-1.637918,-6.157412,0.352213,6.522739,4.228919,1.413190,-2.415761,-1.700577,-0.347627,6.455726],[6.754237,4.429312,3.610320,4.306449,1.143965,-9.308353,9.972175,2.846226,-7.298138,8.682983,6.359100,-7.166219,1.150588,6.404168,-9.509088],[-8.437937,4.331310,-0.335313,7.955958,3.124253,1.975437,-8.736565,-9.865653,5.266973,-1.853343,5.171892,-8.945361,5.967557,-1.664896,6.028227],[4.715795,-4.982683,9.978977,0.815680,-6.404539,3.279714,9.308683,0.315094,-1.466143,-1.028106,9.456244,-4.071749,7.390683,8.750185,-6.716408],[-9.163598,-8.087953,-2.662949,6.944758,-8.145528,2.710244,-6.413922,3.102627,-0.056203,-8.961484,-8.539131,-7.113599,7.895959,-9.892763,7.673901],[0.983872,9.792140,-6.911762,7.475192,7.059638,-0.946560,-4.863950,0.349273,-2.981133,0.401642,-9.384567,-5.045907,-3.545782,1.948700,9.380922],[6.921941,-1.459360,-1.808098,9.525983,2.356423,-9.271885,4.658821,-2.393407,-1.318453,-7.985798,2.136839,-4.312305,-9.287073,-6.204933,9.416761],[-6.769335,-0.022654,0.166123,-3.347204,0.727239,-5.733829,3.598159,-7.185935,-4.475292,-2.140992,-7.013537,-7.675317,2.626902,5.732693,-6.362642],[5.958920,8.513472,1.501164,0.939473,1.232920,4.885479,-5.950721,2.742639,-7.961942,1.537090,6.949662,3.006711,-3.615075,-2.528417,-7.295652],[5.988926,2.458097,1.079346,9.684003,-3.736732,9.438548,-2.553167,-1.109460,-3.350204,-0.062517,1.194467,1.690592,4.054999,-6.145747,7.314686],[-3.999862,-8.284423,-0.658098,-1.215309,-2.512811,-3.569150,9.430816,3.104384,2.858494,-8.768347,-2.399394,6.527387,-4.822334,3.251030,-5.747511]],[[4.039806,4.543161,-7.161470,-5.599412,-2.184805,-9.655850,-6.612328,2.420424,1.629602,-1.641541,-8.668211,-6.816145,-8.538080,-1.902894,4.770133],[7.920921,0.560749,-4.889834,-7.129749,3.366488,-0.981890,1.015064,3.765616,-8.322108,2.221457,-2.080549,6.377560,0.106084,-3.161978,-8.289122],[-5.754621,-0.928823,-0.553963,-1.072505,3.826419,3.760193,3.843090,1.385386,-3.031705,1.716442,-9.673504,5.121955,-3.908592,0.507558,0.302989],[-6.382504,9.446841,1.557173,-8.877134,-6.897204,9.292024,4.892617,2.694739,6.428418,-4.811901,8.208146,0.759473,7.826903,-6.615152,-5.609806],[-5.936099,3.898828,3.419955,9.824943,-2.279671,-0.166501,-5.950588,-2.322359,-5.320319,3.178465,5.842602,5.785182,3.922435,-0.406775,1.252734],[3.663238,-5.852381,-2.354062,-8.061888,1.986874,2.144614,-5.297620,3.259504,0.091737,5.485825,-5.440810,-4.831929,2.475197,-2.803986,1.998736],[-9.920347,8.953360,1.738007,-1.927805,-4.469828,1.436026,3.565947,8.485367,-0.470597,-3.155825,5.954303,-2.194442,-2.780361,0.816883,-1.557439],[5.318243,-8.237083,9.868261,-7.383239,5.565182,9.589131,-0.131000,-7.957222,7.812666,2.490177,-0.264269,-3.405951,-3.336445,-4.231045,-7.462684],[-0.585502,3.478159,-6.767028,-3.304293,9.826189,8.067836,-2.653927,0.570868,5.092979,-7.951702,8.374228,6.997958,7.588931,-1.087617,-4.351850],[-3.098635,-9.580661,4.589954,-5.067127,8.002796,8.270104,-0.162787,7.314268,-3.193658,-6.763850,0.383276,-5.184980,-1.673711,-1.366221,8.079242],[8.265136,0.523011,-5.150472,-3.447596,-2.752654,-6.699405,2.264018,-5.582304,-7.973099,9.924959,8.292975,-6.242448,-8.220805,9.668500,-5.619404],[5.809755,7.662066,9.844571,0.273885,-0.282323,-0.502668,8.363298,-3.808616,-3.876517,-1.772199,3.235265,-4.028148,0.494690,-6.753640,9.695687],[-3.183094,-8.850097,2.461504,6.082437,-6.739284,-2.144076,-2.008401,-4.550181,9.519333,8.690735,-6.023425,9.088522,9.056733,0.201080,-4.564129],[-1.254301,2.793842,-1.675559,-9.950959,0.851234,9.502590,5.556154,2.428940,-6.822717,-9.184552,2.414758,7.351570,7.215318,1.055834,-0.713980],[7.420026,-9.240750,-5.027043,6.976268,-1.356002,4.390099,0.298446,8.354538,-5.418153,2.236795,-0.976472,2.160515,-8.403298,-4.706723,-0.918322]],[[4.816643,5.422865,-2.474795,-9.101520,-3.697875,4.995395,-5.416629,4.242796,9.873030,-5.871189,-4.992628,8.283675,-3.922812,1.076961,-4.224775],[7.026230,3.349317,8.784445,-1.956641,-7.931592,7.211730,-0.915605,-5.692608,7.828282,7.048087,-8.573476,-4.248830,-0.128792,6.884015,9.849270],[0.644996,2.201008,4.314331,-6.280240,-1.096499,5.409815,-7.401849,-6.707658,0.985148,3.046600,7.471405,-5.014517,6.697109,-1.526200,-0.083955],[-2.924758,-1.221842,2.384471,4.181551,-4.070283,-7.649978,8.678445,8.946130,4.834183,7.478029,-0.175361,-4.016603,8.826860,8.569419,1.491872],[6.501956,1.445170,1.989385,-8.006586,-4.579858,2.710289,-9.729112,-1.911833,-9.748555,-3.905493,-8.735836,-4.841515,0.803055,-1.957557,8.779666],[4.483388,-3.515407,-1.541847,7.135943,-2.898531,8.258263,-6.857484,-6.316653,-6.511138,-5.068245,-7.885428,8.612332,8.951763,-4.473712,7.948972],[4.874942,7.255258,8.051551,-8.507579,-7.189235,-9.228876,-4.352229,7.767362,2.887579,4.183043,-5.608709,-3.111134,-4.195323,-6.154332,-2.151776],[-2.113488,-0.508425,6.099103,7.678494,-8.358821,-7.895504,-2.004488,8.603229,6.467339,9.532207,-9.499553,-3.921746,5.810606,3.589047,-8.494492],[7.176273,5.754157,-9.848577,1.256673,-4.896177,1.128265,-6.121238,9.115856,1.196103,8.427317,1.070581,-1.323859,-3.581081,-4.277212,5.630738],[2.639928,4.004959,8.926354,5.828428,-0.839464,-9.868418,-6.125793,2.661866,6.097450,-5.782556,6.338374,-2.896522,-1.244233,3.991457,-6.785458],[0.166552,3.619828,7.721437,-2.725511,8.852294,-1.611667,-4.567606,-3.144885,2.672009,-8.654038,-9.531041,8.878735,4.014839,-8.257593,5.223507],[9.958754,-9.088849,0.200447,4.691081,5.452859,-2.660556,7.328164,-2.334311,-4.846521,7.211075,-4.141290,-9.577713,-6.794902,2.155725,-8.088408],[-4.132695,0.926613,-3.138253,-8.414319,-9.972879,-7.199923,6.917066,9.655325,-8.642858,7.789301,-2.927442,7.563168,-2.481923,-9.715778,-0.359007],[-2.642727,-4.132031,-4.056704,-2.993033,2.875769,-3.284914,-3.558748,1.173485,2.513505,1.655585,9.537204,-8.451165,7.329083,-1.286508,-9.393021],[-8.887964,5.039994,-1.592230,-0.707347,-9.464401,3.133813,3.042391,0.309840,9.257693,-1.539943,7.222526,-3.319666,4.396317,-1.687721,8.194609]],[[-5.703038,5.654617,1.028424,2.845087,5.988592,2.903691,-1.490259,-4.125267,8.775205,9.087305,-3.405251,1.280016,-1.234956,-5.987386,-5.585247],[-1.917546,-3.881800,6.189150,6.290757,7.426196,-7.229814,-7.759828,6.734110,-1.079728,-3.244817,2.753927,5.569848,-9.851420,1.601746,-8.920808],[-7.430656,-9.932960,4.583979,-0.200562,6.029567,8.744352,-8.194758,-6.537183,-4.474186,-6.017622,-5.794766,3.042047,-5.084780,-7.261587,2.340557],[-8.188205,9.934423,-4.138204,-7.842448,0.200951,-2.532293,2.879277,-7.183182,-4.085514,1.650057,-0.429195,-6.473583,0.061906,7.734851,-1.585034],[-9.479137,-4.970496,-2.213770,-3.257993,-3.528362,-5.733195,-7.095068,2.150975,9.113845,6.871520,2.945554,2.195075,-0.742557,-3.487955,-4.421378],[-6.440436,9.856830,-9.020560,3.974617,-2.803176,-8.412817,-4.436071,7.443395,-2.117633,4.017920,1.445779,5.878988,5.878077,2.658536,7.883896],[-3.691878,-0.763385,-4.515657,9.589235,-1.139987,4.017426,-3.621284,5.598797,-9.757805,0.155341,-9.635439,-8.802533,6.078110,1.106612,3.363281],[-0.768459,-3.662237,-4.588422,9.842759,-7.604412,0.142116,-2.188512,9.127824,2.059706,5.957485,8.933765,6.339810,6.958351,2.505396,9.794198],[1.289893,0.989330,4.547175,1.592886,8.495173,-2.203059,1.965493,6.032681,-1.725444,-3.524769,3.351201,5.037514,6.575958,2.391310,6.288857],[-1.677466,-9.527431,-1.478401,9.390883,-4.476284,2.744330,5.310926,5.885957,4.695006,-1.182049,-5.263830,-8.817050,-7.318386,-7.706837,-4.258064],[3.385032,2.486198,-7.205793,1.041457,8.047489,9.760184,-7.104849,8.779182,6.902226,8.716547,2.004164,2.428327,-9.883926,8.412974,6.887211],[-4.124020,-5.856715,-7.184244,-6.678109,-6.685675,6.452503,-2.500203,4.391576,3.436923,9.156857,-6.078916,-9.232409,-0.459459,0.660746,-8.512266],[8.690839,1.950442,-8.820005,3.733285,6.227723,-4.670899,3.826509,-5.270274,-1.326061,0.624318,3.249289,-9.533690,5.255699,-4.778772,6.464727],[8.464030,8.062846,-6.471082,-7.664718,-1.833233,-0.022315,-5.204084,-3.731982,-6.772302,-3.156928,-4.373838,6.388959,-6.284515,9.849628,2.943694],[0.790184,1.772245,-9.582728,-8.096391,2.818037,-8.465152,2.179855,9.001739,-0.831867,-2.154722,5.363853,-7.156842,-7.349134,3.174731,8.874097]]], dtype = "float64")#candidate|4624|(9, 15, 15)|const|float64
bop_4625 = relay.power(var_4623.astype('float64'), relay.reshape(const_4624.astype('float64'), relay.shape_of(var_4623))) # shape=(9, 15, 15)
func_3075_call = mod.get_global_var('func_3075')
func_3080_call = mutated_mod.get_global_var('func_3080')
const_4631 = relay.const([8.211145,-6.819456,-0.576748,2.909344,-3.152564,6.385053,-4.885459,3.947051,-8.455845,8.071441,2.606542,-0.723668,-0.197567,-7.369624,0.783879,0.970071,8.797849,5.241778,-3.169607,-8.519300,-9.582569,5.344176,-5.424690,-3.395768,4.606891,9.015541,-6.936910,-1.191330,-4.823881,-6.758751,-2.822528,-2.378690,8.765238,-2.370114,-3.212099,9.879288,-4.032562,1.994203,4.243561,-8.186685,-4.871261,5.944286,7.390199,0.769426,-5.513903,6.114930,9.873842,7.555726,9.045501,2.301239,-6.985138,-2.587844,2.098203,9.003273,5.491352,8.579340,1.421981,-5.803327,1.350699,-1.284098,-5.904017,-7.305533,3.901800,-2.896021,1.650531,-1.107597,-3.774024,4.628927,-8.100900,-8.651837,-9.973422,0.186332,8.385868,-4.308292,-5.563527,-4.215061,6.043322,-4.966425,-5.000886,6.529030,-1.715930,9.965068,3.076806,-9.146995,6.998157,9.204567,5.837841,5.776958,0.196171,6.154614,-0.628076,-1.592207,-0.928236,-6.276179,1.560679,1.531787,6.082515,6.031600,3.658182,5.157645,-9.004198,-6.048678,6.177173,-1.031735,4.289940,-1.434924,-5.771694,2.175995,-4.550459,3.438294,-2.373135,3.254383,-9.788091,-2.061568,4.317950,-0.957037,-9.504743,1.382727,2.663610,-7.169948,4.044679,-3.092857,7.639571,-9.185704,-9.751890,-8.178257,-7.511067,-8.786563,-6.070908,-5.728046,-3.715077,3.724049,7.562686,7.289559,5.543013,-7.551604,-8.730937,-3.820437,-0.263366,6.731447,-0.652826,8.687818,-1.711048,9.179534,-6.596603,-7.499081,4.510208,-9.639383,-7.276256,6.023802,5.385940,-5.904851,-8.071478,-7.068732,4.731110,8.917736,2.407885,4.558025,5.774751,-1.524556,-5.434328,-2.065883,-6.098256,0.644420,-3.956950,-6.424073,-6.381572,-7.293483,2.686220,5.295472,-4.193602,7.449487,-0.906319,2.931659,9.639740,7.933275,-1.957405,0.207858,-4.598012,5.350665,9.162532,1.427919,-8.007700,1.980996,-0.740545,4.710768,1.274287,-3.403989,5.719856,5.157557,6.852989,-7.991348,8.557647,-0.890145,-3.820529,-3.709368,-5.024112,7.352774,2.729607,-4.051988,-3.465776,9.995217,-9.159348,7.814287,8.740395,4.513291,8.316344,4.792352,6.785156,4.043375,3.740072,-6.651666,3.685193,9.201330,-1.087699,-9.917269,2.748385,-8.055495,9.187892,5.418731,6.146441,8.418643,-2.416716,9.637917,-1.706861,-1.284893,-5.980943,7.642591,-6.869243,1.405718,7.931077,5.262530,4.777087,-6.365889,2.123644,1.995480,-0.823256,-6.415112,4.365834,7.938550,-7.584056,-3.673374,-8.030245,-8.776549,-2.854770,3.188315,6.369510,-1.931933,-3.483469,3.024302,-6.215428,-8.574222,0.028480,0.444237,-4.056666,-7.705235,-0.765138,-4.847635,6.097359,-4.533459,-3.856379,3.851084,-1.522526,-4.584454,-9.466590,6.178241,-9.801882,-2.810740,-0.554834,8.621823,-9.307176,6.537359,-4.989653,4.731423,-6.002264,9.134110,7.606656,-0.943729,-7.393442,-5.268640,-3.954908,2.990082,-5.267440,-6.156940,6.367701,6.435797,9.784455,4.713291,-1.729125,6.164746,-2.778320,5.439965,5.663092,2.965450,-8.577376,6.455288,0.365436,-7.911471,-0.701183,-7.292850,-3.267065,5.038678,-1.489339,1.030231,4.046988,1.899705,8.166303,3.058216,-7.934206,-4.442426,-9.371006,1.539504,-1.098676,6.448283,-7.333755,-0.843696,-8.685536,5.374051,-2.784468,5.137580,4.221911,6.475938,-3.643247,-0.087784,-8.490643,3.219126,-1.032315,-8.818357,-5.697338,0.786620,-3.877641,7.200884,9.740371,7.960268,4.508653,0.829806,-5.267493,1.413901,3.132371,4.264615,-2.648014,-0.158150,-7.662102,3.517478,0.551690,2.337085,8.338132,-2.189199,1.157172,-4.423119,-1.038664,-5.170835,1.935544,0.651436,7.567079,-2.202106,-1.765868,-2.546140,2.648553,0.825319,-9.270187,-4.523466,-9.526908,-2.598606,9.782772,-2.848663,-8.052048,-1.170980,1.229745,-4.653246,-9.369147,-5.103171,9.169688,9.002176,9.596234,3.026796,-9.526807,4.345524,-6.858124,-7.032520,-5.422424,-1.205116,3.777433,-4.964260,-1.697130,1.870423,6.334986,9.459114,-1.729697,-9.325585,-8.672971,5.334177,6.039521,2.814564,-6.962373,7.849859,-4.537572,8.485087,-7.809103,-7.714618,-2.710850,-0.833178,-0.589887,7.995654,-6.418301,-9.457310,7.363244,4.573035,-4.942652,6.769186,0.073167,5.706150,-6.084947,8.504859,3.879867,9.679236,-9.880096,3.995029,-3.843274,5.642099,-9.349665,1.018411,-4.131309,3.723025,9.211706,2.892794,5.899180,-5.473250,-1.684848,0.092938,-2.731843,3.820478,-4.975894,5.258807,4.767692,2.786485,-9.530818,-0.164572,-1.079898,5.758619,-8.825432,-3.878135,0.354872,7.048524,-4.771218,9.671178,6.886462,9.178921,-7.109104,-8.595865,-8.228952,5.380545,-4.117264,2.162518,5.302962,-7.545555,8.849853,-8.882510,-5.631478,-1.651146,-2.508745,5.592547,8.188984,3.414128,2.511638,7.532307,9.873649,-6.464826,-3.905222,-6.981025,-4.435239,2.248548,2.529222,-9.725995,3.860974,2.311627,1.446060,-2.797159,0.615494,-8.396087,1.668536,-9.269148,-1.617674,5.510591,-6.800938,5.461816,-8.089460,3.842158,-9.988456,3.385097,-7.188299,8.353506,4.404171,-1.931514,2.961836,7.451038,2.065982,0.052229,-6.021730,-8.059471,5.656119,0.375188,3.440315,1.937463,0.121928,8.048977,1.023249,5.873292,-5.461692,-3.429112,-7.265740,0.227324,1.142642,9.097091,8.201024,2.877317,3.651845,-2.143521,0.506742,-7.456208,3.389598,-3.884469,-0.221401,4.427060,-3.916554,-0.360773,-8.507818,-3.822816,6.256150,2.206254,8.210822,3.128045,-9.365219,3.851207,8.172047,-6.279724,-1.094563,-6.514810,-0.200772,6.041087,8.507924,9.269175,4.610216,9.685640,5.175172,1.887595,5.508656,-5.244072,2.074522,1.411109,4.309951,2.323523,3.771683,9.488325,1.423576,-0.677634,-6.945481,-1.165682,3.409325,-9.140426,4.220029,1.109898,-6.904572,-1.951933,-9.667001,0.882896,0.598111,6.817918,-1.607554,-2.678599,3.581507,-8.748478,-7.893966,-7.924577,-6.377470,-6.737554,-7.884690,8.139087,1.283294,-9.330569,2.554934,-1.952870,-0.941450,1.823515,-3.852870,2.052112,-8.850147,0.503260,-3.910293,-5.263755,7.529171,-9.770411,9.000008,-0.668925,1.504472,-4.833502,-1.780057,8.360573,-3.427879,9.913551,-7.378923,-0.804580,-0.672988,8.516496,3.521515,-3.459095,5.091920,7.885346,-1.303220,3.363100,-5.555759,-5.840627,-7.615912,-7.687251,7.688379,9.140669,-0.682134,-5.267825,-0.520321,3.060458,-3.466413,-0.427966,6.372876,-1.471165,3.377750,1.774109,8.473366,8.809187,-5.374811,-5.203219,4.415196,1.754879,9.032160,4.424882,-2.245747,-1.921724,-7.584245,-5.491413,-1.123086,9.745206,-0.363400,5.397717,-6.928800,-1.498773,-7.823679,-6.876198,-9.462469,2.681448,-9.647881,9.196732,-5.015806,2.889338,-8.265525,-5.963654,-2.787302,7.317102,-7.803065,-5.879099,3.135988,1.909131,3.919650,6.465237,-3.073300,4.697233,7.039309,8.010548,-1.204419,-1.753779,-5.291915,7.934454,-3.202773,5.748336,-0.919657,-8.863877,-7.286537,1.280549,7.929310,-2.135867,-2.275104,-0.339730,-3.820283,9.072963,-8.960158,-8.777816,-9.867454,9.315776,-7.943262,4.786693,-2.996885,-4.332938,-5.748409,-8.250863,-1.348926,1.666863,8.235165,1.020687,7.519087,-9.379161,-5.181645,-8.245513,2.984024,-8.445113,-4.768279,-2.189541,4.756793,-5.555895,-1.087020,9.250966,5.404701,8.853739,7.935443,-8.150084,0.071663,-0.057264,4.375261,-0.565055,5.695006,-5.898855,7.226582,-5.399768,4.150857,-8.457305,-3.891796,7.634312,-3.605064,-3.962311,9.396594,-4.155999,0.853696,-8.265478,5.124990,1.320496,7.176729,-9.058130,-8.378978,1.952699,4.511194,-3.205135,-3.092642,3.134554,-2.587215,-5.969459,6.953198,7.156548,0.090337,1.490164,-0.425934,1.303006,1.981662,-4.629545,5.284474,3.738507,8.885025,-5.654495,5.418487,-9.603091,0.646853,9.356925,5.106552,2.902009,7.462778,9.346411,-7.939584,7.812850,5.783263,4.423642,-6.861486,2.150305,-3.643273,4.167571,-4.152079,-7.780771,-1.113947,-7.184241,-5.856606,-7.901876,-0.627720,0.497828,5.935655,-7.026411,9.516618,0.603141,9.516544,7.296062,-1.841968,3.160223,8.060675,-7.933645,-2.741272,5.721148,-3.321675,-0.952895,-7.250225,8.618307,-0.569139,-0.683362,-9.016822,3.987372,-8.583543,5.619416,5.722067,1.923106,-2.286136,-1.630642,-9.447807,9.515211,-3.616197,-7.031634,-0.735330,-9.646197,0.923695,-8.881551,-1.995816,9.497438,-4.319820,6.027209,-1.535460,-0.086365,-3.525903,2.189875,9.087597,6.982009,-8.353358,-5.160498,-3.004327,6.304147,6.552993,3.290498,-1.179828,-1.441801,4.525724,-6.329407,0.296342,3.378960,-5.382802,-5.546455,1.304103,5.841653,6.741232,-7.753359,-8.447783,-1.114673,6.076888,7.119410,-7.498002,0.744745,8.294502,2.951459,-0.837920,-8.831458,0.581143,-8.588079,-0.873493,-0.428302,1.073261,4.116728,4.296667,8.884075,6.012156,-2.439934,8.269701,-1.231665,0.766179,5.627656,-4.208581,-3.878081,-5.979211,-8.538608,-8.464728,6.908471,-4.747166,9.703350,-5.456519,-1.659539,7.621158,8.082861,-3.678066,1.951230,-5.301491,-9.188702,-0.923314,-5.224730,7.941667,-6.601969,-7.152464,-2.339218,-3.317492,-5.854006,-5.572283,6.939706,1.356281,-1.735679,-7.564925,7.300429,-4.791321,9.682544,3.805086,-9.696526,-5.532817,-0.419505,-0.300491,1.778840,5.039639,3.555822,0.059115,8.849702,7.198005,-7.514231,-7.751379,-8.277692,2.260399,8.922261,-6.863851,-0.533635,-5.959068,6.995435,3.071559,-1.645658,-1.804163,-7.269995,-0.871595,-5.285884,-6.026343,8.675444,-1.999182,5.458528,2.115616,-2.362461,-7.467466,-2.525305,-7.625923,2.903653,2.357399,-1.943585,7.173124,6.061520,-2.313739,-5.630981,-4.930667,2.144995,4.437891,3.466306,-4.299133,-6.484720,-8.579368,1.777358,-1.728930,-8.615460,-6.410137,8.666792,0.271765,7.102564,-4.977847,-6.813625,9.251783,-4.599894,1.305446,0.986249,9.162214,-3.600365,5.245755,-2.451853,2.203243,5.509850,9.728602,6.763350,3.178530,7.566296,-0.997913,-6.139203,9.406181,9.587580,-4.908912,-2.514927,-0.942282,4.271424,9.493545,-2.644248,-6.482532,-2.757620,-9.853783,6.077884,7.216867,-6.784288,-4.108760,4.415501,2.908929,-7.967611,-0.716328,6.511694,-6.785623,-7.595035,7.284752,-2.091968,-3.161664,3.417896,-5.372470,-9.122144,3.996959,-2.979255,1.897220,-7.252980,-7.148848,7.283576,2.203611,6.798075,2.034906,3.624760,-9.667361,6.889758,1.102555,-8.847321,4.528810,8.131388,5.962498,-4.803895,7.509962,6.048501,-0.990452,-6.055568,5.479746,2.932704,4.610563,3.999517,-8.794713,-2.990773,-5.247355,2.736782,4.357218,-5.022700,-4.885104,-3.022932,2.845422,9.911330,-8.728658,-1.371053,-7.998844,-5.113594,-7.472259,9.039435,-4.543319,-7.872439,-4.186891,-2.138490,-3.125745,-0.418952,-8.009663,1.985735,-8.886018,5.664517,-8.166729,2.074119,3.535701,7.290936,2.188134,-8.051567,-6.576010,-8.216738,-4.960918,6.518348,-7.251930,-2.022015,-9.189211,-8.692851,-4.780386,1.957526,2.566472,4.908389,-2.565648,3.110266,-6.042570,-5.209434,-1.752667,7.720150,0.272084,-4.730273,0.152016,-2.624536,-7.713450,-9.414767,-6.125923,4.381403,-1.919359,-4.232923,1.295274,7.580220,4.453315,2.564495,-4.365992,7.379594,6.601827,6.723971,-5.630616,-7.686455,5.039343,2.051094,-4.870706,7.936148,-5.963835,3.141530,3.084441,8.586968,-5.537405,3.276827,7.156022,6.980789,-4.107444,8.022206,-8.735102,8.265195,8.481308,-3.083987,1.796029,-4.639825,9.640888,-3.365343,-4.104294,-8.302971,-7.150917,-1.302186,-7.817751,-3.146966,-4.807399,8.930895,9.863238,-9.168164,0.833710,-3.071639,2.356913,-7.228892,-4.421509,7.837279,-6.716117,-8.534773,7.610304,0.492012,-6.785718,-2.725468,8.077802,9.400298,-6.925402,6.043756,-1.201961,2.652590], dtype = "float32")#candidate|4631|(1144,)|const|float32
const_4632 = relay.const([-4.446469,-3.717601,-8.377518,4.751539,6.326064,9.570777,-4.970755,3.343310,0.555368,-1.328773,-8.798290,6.421694,2.015803,-7.271124,2.307307,-1.060281,8.582241,-7.763415,9.723910,1.177387,-2.662059,-7.948696,4.458451,8.153691,1.206721,-0.444294,6.462707,-3.391021,-5.654420,6.083494,-0.050340,5.533701,0.025931,7.335912,7.128729,9.632679,8.365460,-9.851007,1.574218,8.586537,2.908944,7.091745,-0.976779,7.780567,-2.550780,-1.418342,5.959193,-4.945062,2.606890,7.074582,6.747457,2.479684,7.141519,9.388435,9.199449,6.243305,-0.538515,4.282907,-4.367930,-9.706282,-9.058349,-8.838331,-1.061134,-8.675880,-7.165529,8.414559,-1.401586,9.221082,-9.898669,6.326311,5.466553,1.534680,0.572898,-4.428123,9.446538,-3.585961,1.870014,8.129225,-5.637452,-5.111184,-2.238579,-8.431364,-3.111884,-5.019695,-8.514948,-9.461971,-7.694414,1.225218,-8.513389,6.519307,-3.704946,4.020720,-0.243310,-7.153673,-7.093191,-0.122226,-8.581823,-8.140076,-4.313217,6.336769,-6.159785,-8.058148,3.627947,-2.251695,-4.227166,-6.089644,5.884844,-2.069165,-0.443122,-6.854955,7.828604,6.926547,4.492235,-1.392707,-2.087321,-3.887264,9.713883,7.997772,2.035676,7.801578,-2.952740,-3.400348,0.110528,2.502453,3.725853,4.708147,-7.539839,-2.389134,-2.401117,5.784534,7.232810,7.799626,4.805276,8.741247,-7.215538,-0.379343,-9.714298,-0.964811,8.027916,-6.272604,-2.107399,-2.501054,-0.611087,-8.367755,3.532517,-9.640015,-0.025724,-8.780849,-3.786866,-2.599361,-4.924356,5.509245,9.354104,-1.177575,-6.485187,-1.002557,-2.203401,3.670189,2.699648,5.058367,-5.181286,2.144023,2.950507,-4.132032,-8.867250,-5.929330,2.863621,3.264426,-3.396083,9.859958,-2.493572,7.784409,-6.457179,-9.847087,-8.208235,6.597366,0.722683,0.967896,-6.107550,-8.511568,-9.418663,3.506246,3.529595,6.236779,-3.423103,-0.506116,-1.486761,-8.885219,-6.069593,-8.516947,-2.270551,5.762330,5.936942,9.998930,-5.750780,-7.497364], dtype = "float64")#candidate|4632|(196,)|const|float64
var_4633 = relay.var("var_4633", dtype = "float32", shape = (208,))#candidate|4633|(208,)|var|float32
call_4630 = relay.TupleGetItem(func_3075_call(relay.reshape(const_4631.astype('float32'), [1144,]), relay.reshape(const_4632.astype('float64'), [2, 14, 7]), relay.reshape(var_4633.astype('float32'), [104, 2]), relay.reshape(const_4631.astype('float32'), [1144,]), ), 2)
call_4634 = relay.TupleGetItem(func_3080_call(relay.reshape(const_4631.astype('float32'), [1144,]), relay.reshape(const_4632.astype('float64'), [2, 14, 7]), relay.reshape(var_4633.astype('float32'), [104, 2]), relay.reshape(const_4631.astype('float32'), [1144,]), ), 2)
func_4077_call = mod.get_global_var('func_4077')
func_4081_call = mutated_mod.get_global_var('func_4081')
var_4645 = relay.var("var_4645", dtype = "float32", shape = (525,))#candidate|4645|(525,)|var|float32
const_4646 = relay.const([-3.123889,3.564185,-0.385574,-8.842124,-0.251668,-3.085040,8.262820,6.942317,9.048051,8.694853,8.337322,-9.034801,2.637857,1.413481,9.068080,5.947298,-6.726238,-0.650127,-6.832951,-4.353043,-6.112158,-7.650733,-6.726150,-9.165651,8.621696,0.474458,7.788031,4.518766,5.983556,4.114146,9.476836,-1.974410,-1.228918,-2.771316,4.750540,8.073773,-6.427359,0.716643,-6.567651,-4.618836,6.618818,-9.590721,2.776818,8.424771,4.794593,-7.273824,-3.574257,-7.534907,2.471215,4.518671,8.901219,-6.436977,-7.822491,6.868557,8.322927,9.619576,6.108618,-2.876022,7.216168,-7.576697,-6.333891,2.621549,4.138646,2.689383,-9.666093,-1.221149,-1.721403,7.089536,-0.599921,8.520969,-9.694279,6.388308,-4.115261,6.882785,9.730401,-7.446121,-9.490222,-0.581519,-6.898233,-3.091814,7.045963,-6.789951,-4.730854,-9.424694,-6.066084,-0.898396,-4.026452,1.590769,9.957979,-8.603034,-6.345862,3.613359,-9.480396,-9.527511,5.112700,-6.007814,5.982847,-9.883746,-1.823528,5.611293,-5.911417,-5.808438,1.474008,-5.553487,-9.829187,3.933849,0.598440,1.240959,9.272887,-5.434024,-5.025437,6.771324,-8.584281,0.504927,-8.915465,2.835016,9.549682,-0.908045,9.752114,2.354352,2.872166,-7.748689,6.672359,9.638415,-9.819992,-2.967103,-0.600677,-8.114983,6.850393,1.899129,-4.242916,3.164298,-9.435691,-9.777725,-5.507552,3.409709,2.477034,-8.181030,4.519920,9.093881,-9.129543,0.947611,2.170587,4.534757,4.529340,-8.782209,0.032661,5.044734,0.111795,-9.774710,-2.759948,-0.413815,0.052244,-1.285832,-2.534770,-2.823938,7.363103,5.080907,-1.932799,-1.020836,4.728069,3.051519,-4.973056,4.462056,5.283320,6.916005,5.725619,4.225212,-9.677076,-1.703905,1.249984,7.334511,-2.429079,3.605454,9.329433,-2.571608,-9.488402,-7.298121,5.310632,5.205032,7.149579,-6.067255,-5.579097,4.565184,9.898483,3.017359,5.228795,-1.728504,3.839232,-1.791451,3.734182,7.214136,-5.999407,-8.943356,2.446457,-7.500665,-7.745893,-0.236564,-6.205569,9.550292,6.380212,-7.289910,-3.786030,-0.359299,-1.421163,-0.997119,8.325427,-7.405220,9.951690,6.303997,-8.734829,8.287528,-7.046740,5.029815,-6.237893,3.142118,5.127098,-2.257089,-1.112616,1.345527,4.064759,-7.239217,2.621616,-9.494765,1.302862,-3.467136,-2.508967,-5.634739,6.435678,9.473713,-1.627256,2.778285,4.103067,0.962737,-0.052535,-9.856055,6.513014,-2.802858,7.419630,8.152520,1.146844,-4.966537,-2.073298,-2.146641,-4.473597,6.136276,-5.867549,-2.999331,-2.791778,8.730741,-0.609976,-2.296444,-7.995746,1.558401,2.180841,-8.079910,-7.861441,-8.781107,6.539200,-8.822877,1.555302,4.753047,-6.150997,4.253385,4.521928,7.879691,-8.380527,8.377047,-9.340998,4.449377,-5.616636,-6.286416,-0.402627,7.295411,-6.899092,-1.430345,3.891855,4.087992,2.862729,-8.429924,-6.957470,7.709298,3.288221,1.803710,9.163402,1.073156,4.645827,-3.757631,7.445062,8.325438,0.599575,8.341085,6.225324,-4.611195,5.720254,-5.387626,-0.958258,-0.757036,-3.141310,0.323995,-2.684952,8.710726,7.392655,-1.723076,6.840101,-1.363970,3.559407,5.594984,-1.835076,4.796577,-8.310440,4.596541,0.107183,-2.490814,-9.188629,5.392090,6.204889,-5.243337,-5.385549,4.793590,-4.245418,-6.388957,1.255859,3.668399,2.692819,3.066884,-5.490709,-5.875650,-4.179067,6.783500,6.108797,-5.430127,-5.986794,6.339549,4.544920,-0.670133,-1.838561,3.919302,5.287419,5.077657,9.720355,-8.400219,-9.608944,-8.790577,-2.121794,8.716201,-2.385073,-0.309106,-8.497801,-1.615052,-1.245165,1.603909,3.245861,-6.218493,5.315520,-4.917225,-7.168500,-3.412414,3.304602,9.525143,7.134888,9.274717,-7.339759,-8.107555,6.916528,-2.907743,4.575583,-4.597099,-0.073190,7.964962,4.725465,9.256568,5.333274,-1.081685,-9.929322,-8.850058,-9.849265,1.651048,2.805563,7.852756,-5.120336,-6.726366,3.460700,0.316182,8.970675,-6.407582,-5.956311,-1.660654,4.126749,-3.574446,-2.635461,3.167545,4.112896,-5.711247,-7.344028,2.722681,3.313966,8.207870,3.552391,7.164083,9.280081,0.296619,5.871488,0.300947,-4.724587,-3.981064,-7.990422,0.312837,-7.109640,-6.727842,1.348087,-7.495048,8.667765,5.006544,-3.178885,6.228582,-7.072941,2.987339,-4.156032,5.490345,-9.422223,-5.288762,3.803688,-8.705338,0.647250,7.273008,7.977481,3.922267,8.617192,4.281237,3.618972,3.241326,2.024217,8.741693,-4.829465,-2.476734,-0.092452,1.694129,-2.242879,-8.510221,9.622224,-3.001203,3.698300,2.018262,-6.641984,-7.598093,-3.267896,-5.299254,-9.429898,2.450048,-3.276491,5.262986,-4.587256,-6.957355,1.602197,-4.278239,-8.599227,0.502752,9.263310,-8.140628,0.938186,0.559804,8.133222,7.614575,-7.486231,-8.422754,-6.514149,9.375793,-4.096051,2.865500,-4.004993,-8.275351,-2.695529,-3.444153,8.828362,8.077234,6.174617,-4.844488,-7.501149,-4.453544,-8.645956,9.026818,2.735233,-9.213598,8.749455,6.439165,0.715984,-7.675840,6.708161,5.036762,-5.141893,6.387275,-0.322071,-9.827371,1.638161,0.126106,3.533194,-3.147786,8.685318,-6.358145,-3.206004,5.437024,-6.620489,4.529588,-9.155934,-0.361465,2.269379,8.909057,2.396188,3.649053,-8.391752,-3.716199,9.184117,-4.006967,4.670322,2.652305,-4.301855,-3.227348,8.638708,-7.583615,-2.512941,-5.491553,-5.315509,9.852962,9.044702,-9.052809,0.890750,6.788476,7.897318,-3.490561,-4.004298,-6.634247,-2.097824,1.771547,-9.832884,2.873983,-9.142725,1.536029,5.418482,-8.615191,5.386644,8.672116,-3.732011,5.161563,-5.280470,-4.734088,-9.403284,-5.580363,4.259796,-1.081637,0.466282,8.550824,7.017004,8.210680,5.975544,7.954305,-4.538093,-3.396696,7.110133,2.741131,3.782796,-6.729531,-7.187708,-4.834557,4.275123,-8.373901,-3.897310,-8.336670,-0.085589,1.471545,-0.856513,-0.201233,3.021188,0.467157,-6.704600,-5.924097,-0.966465,0.439916,8.610388,7.971321,-9.735440,-6.260354,8.199771,-6.522783,-0.401018,9.221643,-2.787675,1.316591,-7.210983,-6.710288,4.262827,-1.397773,-3.476345,0.994335,6.250173,-2.695743,-4.929501,2.894846,1.789522,9.107369,0.960262,-1.922476,-4.658166,7.293421,-0.628033,9.033425,-7.353455,-9.640829,-4.387561,5.382555,-0.262534,3.643648,-7.206491,-1.926544,0.628772,4.125343,-7.848954,-6.979218,5.745585,-2.788521,-1.959217,-2.994357,5.533743,0.292192,-9.069420,-9.040999,-0.828043,9.977672,-9.471804,-2.253042,2.384488,-6.228252,-9.835732,-4.683653,-0.912523,6.236261,-3.755004,2.593023,-0.476852,8.663158,6.363194,8.187388,-1.135155,-9.303102,-6.026746,-0.049450,-2.305784,-5.547511,0.632382,2.221613,0.698846,-4.144012,-3.638780,1.472275,-5.718621,4.823011,-8.756349,1.077599,5.523191,0.998172,4.570686,5.073259,-4.930184,-3.269547,-5.971626,7.535688,-1.385654,1.283820,-5.062632,-6.724579,-0.929109,-1.136950,-1.953539,1.649739,-3.011382,-7.945435,-3.061672,0.764522,9.434237,-2.161925,1.534620,5.770852,-9.099614,-7.523745,5.668074,5.083759,-3.923980,6.634987,-9.572036,-5.015958,4.616326,-3.477308,-5.369728,9.577070,2.237239,7.184631,4.226419,-4.582576,-0.427965,-8.692827,0.540785,3.945796,-3.287263,6.406352,7.718412,3.641559,-9.375642,-1.006866,1.545643,-5.805323,0.847596,-9.532071,-2.040045,-6.199735,6.389071,-7.845625,1.458338,7.258515,-1.584324,-3.449172,-6.994257,9.808550,3.681054,-1.568349,9.780359,9.488399,-8.772722,7.274376,-8.940669,4.042709,8.062992,3.374355,0.954374,-4.771370,0.328994,3.871483,-5.264010,-3.964719,-0.283433,-6.053926,1.460211,4.521727,6.297834,-8.428080,-3.809821,-1.983300,1.411283,-4.414237,-9.211675,9.299005,2.135114,8.160789,3.093012,7.461988,-4.177247,0.904518,1.667618,-4.205733,3.899266,6.327734,-9.773011,8.852334,2.838478,7.961088,-7.217917,7.230254,7.643445,9.965854,-5.975295,5.342660,4.033082,-0.222798,8.403053,0.169111,7.214066,-8.319151,-3.043684,4.487694,-5.149091,5.206767,1.868916,-3.161650,-7.789644,6.536742,8.783898,0.017372,0.576779,8.851080,-4.938567,-5.270230,4.464007,-1.156028,-3.713843,0.380502,-0.431225,-7.008637,1.661032,-3.117209,-3.968374,-0.993667,-1.681238,-2.106766,8.286779,-6.798057,4.872734,8.417248,-9.160729,-3.851666,-8.833188,5.730634,7.564756,-2.856250,-9.147343,-4.431711,6.222216,-5.491638,-2.750683,2.414549,9.138005,-0.352583,-1.847774,2.485983,5.458704,-3.849505,-1.385014,-7.507392,8.137614,-1.415490,7.379483,-7.243720,-5.558432,1.308576,-5.877235,-9.200801,-2.686727,-6.193176,2.807875,0.252752,4.012642,-6.029053,6.372673,9.366327,6.717667,4.534161,-1.904002,8.604689,-4.827684,-3.595203,-2.160662,-0.796438,3.561066,8.764678,7.578900,6.854835,-9.273707,-9.243893,-5.289670,-5.591703,7.790019,-2.411436,-9.740743,-3.661288,-2.579313,0.587513,-5.310120,-2.913144,-9.948857,-5.685487,-2.908472,-2.783153,2.107688,4.511961,3.232914,7.691795,1.254144,-1.083274,-6.604253,-2.839104,7.656658,3.525411,-2.772755,2.937628,3.322728,-2.611418,2.786160,1.219172,5.643344,-3.413324,-3.696482,7.829802,-4.779887,0.182786,3.331810,3.871778,5.289916,-0.663335,-0.563636,-0.018346,4.698926,-3.790320,-4.051175,9.191850,-9.656866,-8.701941,8.431964,-8.220538,1.332169,-6.094991,3.349859,-5.650232,-7.826123,-7.709392,-6.024492,7.124897,6.247998,4.799273,0.118401,3.608025,-9.727086,-7.739904,-6.287125,4.774556,3.391718,-2.160277,-9.837174,1.200639,3.921240,0.576178,8.678727,7.719661,-5.221929,-6.453969,0.541323,0.670570,9.247194,2.140659,-5.608602,5.663233,7.274843,9.584883,-1.337161,-4.097599,-3.081964,-9.800270,-6.973403,2.021437,-1.170904,-2.833919,1.652127,8.161327,-4.807322,-3.737044,-3.202884,-2.735805,6.235103,7.412251,-7.421188,5.521539,4.350507,-0.359695,1.532338,3.239489,5.471029,7.028496,3.886490,4.652571,-2.459681,1.349346,-1.286660,-4.890439,3.637203,1.951788,0.657341,-6.627192,-7.274250,6.338838,-5.684397,9.859811,-1.598934,2.292296,-6.758235,8.971673,-8.714430,6.225119,-9.142762,6.080193,0.823059,-1.630981,8.831500,5.382971,7.542694,-3.811871,5.323719,-5.343298,-8.927236,-7.979767,-4.750299,7.783199,-0.128414,5.262375,-0.473241,-1.284159,-8.226011,6.420409,4.351357,9.199366,6.052592,8.912561,-5.956380,-6.181041,6.169014,4.527407,0.412490,-2.336699,3.068579,-1.807870,-7.243251,6.993135,5.816739,7.054180,8.393280,-2.886859,-8.733755,-6.654656,5.882528,9.876305,3.818337,-3.005984,-6.577172,-2.711307,2.617005,3.968193,8.067503,-0.160249,5.453156,8.913814,-3.874061,7.266055,0.912335,5.592750,7.119468,8.936990,9.089406,6.488081,7.663130,1.223831,-3.900630,-9.925818,4.532896,6.278261,-5.740865,-0.730567,-6.991964,8.100978,1.886873,-8.430772,-1.148119,3.016282,4.862690,5.939025,-3.838771,0.943404,1.105631,-3.976220,-6.490176,-2.799614,-8.932269,-9.201815,-4.220527,2.707688,-9.478641,-5.729106,7.818273,4.342779,-5.971065,2.953857,4.024802,-0.800058,2.344496,-6.829702,-0.449070,-8.667518,0.862035,2.621931,8.142582,9.976117,-1.746570,-8.120185,6.039255,-7.675351,-9.781360,-8.273894,3.709904,-0.455435,9.044684,-6.105200,7.900411,-4.635713,0.308554,9.503373,-6.057808,9.606269,-9.209151,9.221735,0.855648,-5.967183,6.389026,5.536797,6.002227,9.232403,-7.426473,-7.931307,6.668561,-4.184181,-8.860481,7.406688,-5.117505,4.947560,-5.072068,-6.775178,-1.588695,8.750690,2.417568,-6.395145,-6.641266,3.783796,-7.361443,2.515101,9.754275,-1.770980,8.899279,-3.707253,-0.343648,-8.394826,-1.820335,-6.387873,9.646764,0.481145,1.830408,6.830124,8.028058,-8.440318,-0.819163,9.091153,-2.852031,9.654063,9.825683,7.002519,2.066019,-9.732604,4.553984,1.792875,-8.825258,0.121646,-7.795561,-1.603546,-8.623026,1.034489,-6.097594,-1.049401,2.716731,-1.120861,5.963975,-9.453183,1.692343,7.411447,-7.117980,-8.649956,0.645694,-3.613355,-5.789983,6.774399,7.580641,-4.220115,-9.994728,-2.574676], dtype = "float64")#candidate|4646|(1176,)|const|float64
var_4647 = relay.var("var_4647", dtype = "float64", shape = (12,))#candidate|4647|(12,)|var|float64
call_4644 = relay.TupleGetItem(func_4077_call(relay.reshape(var_4645.astype('float32'), [7, 5, 15]), relay.reshape(const_4646.astype('float64'), [1176,]), relay.reshape(var_4647.astype('float64'), [12,]), ), 5)
call_4648 = relay.TupleGetItem(func_4081_call(relay.reshape(var_4645.astype('float32'), [7, 5, 15]), relay.reshape(const_4646.astype('float64'), [1176,]), relay.reshape(var_4647.astype('float64'), [12,]), ), 5)
func_273_call = mod.get_global_var('func_273')
func_276_call = mutated_mod.get_global_var('func_276')
var_4661 = relay.var("var_4661", dtype = "float32", shape = (990,))#candidate|4661|(990,)|var|float32
call_4660 = func_273_call(relay.reshape(var_4661.astype('float32'), [10, 11, 9]))
call_4662 = func_273_call(relay.reshape(var_4661.astype('float32'), [10, 11, 9]))
func_3867_call = mod.get_global_var('func_3867')
func_3871_call = mutated_mod.get_global_var('func_3871')
call_4663 = relay.TupleGetItem(func_3867_call(relay.reshape(const_4646.astype('float64'), [6, 14, 14]), relay.reshape(var_4647.astype('float64'), [12,]), ), 2)
call_4664 = relay.TupleGetItem(func_3871_call(relay.reshape(const_4646.astype('float64'), [6, 14, 14]), relay.reshape(var_4647.astype('float64'), [12,]), ), 2)
output = relay.Tuple([bop_4625,call_4630,const_4631,const_4632,var_4633,call_4644,var_4645,const_4646,var_4647,call_4660,var_4661,call_4663,])
output2 = relay.Tuple([bop_4625,call_4634,const_4631,const_4632,var_4633,call_4648,var_4645,const_4646,var_4647,call_4662,var_4661,call_4664,])
func_4679 = relay.Function([var_4623,var_4633,var_4645,var_4647,var_4661,], output)
mod['func_4679'] = func_4679
mod = relay.transform.InferType()(mod)
mutated_mod['func_4679'] = func_4679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4679_call = mutated_mod.get_global_var('func_4679')
var_4681 = relay.var("var_4681", dtype = "float64", shape = (9, 15, 15))#candidate|4681|(9, 15, 15)|var|float64
var_4682 = relay.var("var_4682", dtype = "float32", shape = (208,))#candidate|4682|(208,)|var|float32
var_4683 = relay.var("var_4683", dtype = "float32", shape = (525,))#candidate|4683|(525,)|var|float32
var_4684 = relay.var("var_4684", dtype = "float64", shape = (12,))#candidate|4684|(12,)|var|float64
var_4685 = relay.var("var_4685", dtype = "float32", shape = (990,))#candidate|4685|(990,)|var|float32
call_4680 = func_4679_call(var_4681,var_4682,var_4683,var_4684,var_4685,)
output = call_4680
func_4686 = relay.Function([var_4681,var_4682,var_4683,var_4684,var_4685,], output)
mutated_mod['func_4686'] = func_4686
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4721 = relay.var("var_4721", dtype = "float64", shape = (8, 10, 16))#candidate|4721|(8, 10, 16)|var|float64
const_4722 = relay.const([[[-0.225610,-2.766469,6.545320,-7.408284,-2.572503,-3.589711,1.819425,4.132285,-5.849988,-7.826157,-1.026123,-9.461195,-7.384630,-8.942491,4.596403,0.943096],[0.936213,9.596745,-9.613115,-3.843009,-4.420803,4.651055,3.214902,5.311509,7.977952,7.488590,1.270140,3.566163,-0.751039,-2.066720,7.219303,2.969143],[9.582252,5.221634,2.799050,-2.419989,-5.178586,4.487275,-4.087837,6.305320,-3.390090,-4.971424,8.009976,7.158368,8.557748,5.329344,5.014247,2.285068],[6.301102,-1.728686,2.410938,2.626931,8.091957,4.356606,2.845409,3.068355,0.220133,9.844165,3.354196,-7.513315,-2.191550,5.039711,5.466895,-3.751788],[9.302181,5.892295,-8.383059,3.027509,3.129582,4.129378,8.760125,-9.812213,-6.043657,4.633384,8.255954,-7.590503,5.510782,0.926699,8.081478,-0.862605],[7.323909,9.913262,-6.100806,8.874450,5.705504,-9.465765,3.249802,-4.168667,1.809234,-0.401170,7.020279,-4.614495,-4.673976,1.347259,-9.715202,0.124805],[6.329273,5.202280,1.700472,6.829149,5.252676,8.939073,0.929185,0.397425,-2.077968,3.923102,-2.903372,-0.704792,3.765869,-5.108625,4.493187,1.867071],[-8.416420,-2.793520,7.468873,4.764518,-7.365450,-0.674360,-0.549520,-6.039670,5.687169,-8.721310,1.481495,-2.125594,0.844842,-3.160572,-6.269279,7.441727],[-2.173815,-9.741160,-3.706003,6.114758,2.500805,-9.393898,5.387165,-4.580378,-8.420450,-6.078908,5.997976,-5.756845,-7.421709,-8.149034,6.654181,9.161072],[8.193843,9.428181,1.089706,-8.423906,-6.294426,-5.920108,9.929940,-0.839275,-1.169707,-8.159869,-1.199266,-1.759406,8.573671,7.263132,-8.208861,2.049590]],[[9.408765,9.635783,9.311083,5.593499,-6.319883,0.036525,-7.602508,5.225003,-6.128932,-7.243845,8.316271,8.762424,5.782349,2.392568,-5.395978,-6.073761],[3.527544,-8.319195,7.249586,7.397900,-7.630843,-0.280476,-6.196753,8.153676,3.752687,3.061084,-9.015928,5.018612,-5.708986,6.127905,9.261199,-6.976036],[-3.962039,1.635840,-8.054952,5.677387,8.409804,7.948723,-1.383955,6.042571,-6.986858,-1.662085,2.695055,5.349807,-5.510486,-1.210318,-3.691206,-6.665829],[-0.678028,-5.359669,-1.174994,5.984461,1.263025,-2.695690,6.521338,0.119915,-4.453653,-1.707357,-6.807944,8.928244,-3.361252,-3.838443,-6.195519,9.952227],[2.310267,5.517076,-9.823428,4.207919,4.456453,4.008663,3.518655,1.678482,-1.405533,-6.730382,8.980905,0.832522,2.780866,-7.490888,-2.835939,-0.958233],[8.630202,-0.460657,-4.517240,-6.688870,7.013913,-9.789326,-9.623135,-7.948163,5.574598,1.152650,4.169414,5.004599,4.439520,-9.327744,6.599221,6.502612],[3.758099,-8.096303,8.620331,9.133718,-0.901439,-6.834028,4.875063,4.712228,3.861459,6.141795,4.800859,6.352069,-3.594969,3.195267,2.573869,5.547315],[-9.855981,-9.585159,-5.227950,-7.451681,-2.488716,4.441632,5.618371,-3.783075,-1.636231,0.836617,-3.367131,-5.030989,4.743048,6.776258,-5.297628,5.369993],[-6.568879,-8.758115,3.680470,-5.598090,3.490005,-5.608570,-5.094557,3.992341,-0.716136,6.716449,-6.338603,-2.334341,7.457083,-3.915861,-4.877706,-8.106596],[0.840832,1.420369,8.105471,-0.313445,6.049262,3.528914,-5.004025,-8.037138,-5.784295,4.248903,7.081029,-4.050550,6.916449,-3.663591,-7.597314,5.360502]],[[-5.334208,-8.566315,-8.855798,-4.949063,5.519159,1.269846,3.486867,4.240685,5.684928,-2.903928,-9.043484,5.240464,6.009504,9.783045,-0.776015,7.817357],[3.280790,-7.202821,6.326712,6.160209,5.619084,-0.953443,7.546973,-6.724600,-1.407698,7.389028,3.745800,6.438555,0.240628,-9.628492,1.419518,-5.013016],[3.005389,-1.036698,0.090895,-0.835990,-6.348824,5.832354,-6.381584,6.212322,-1.318185,8.718221,9.804824,-4.602032,7.583684,6.178745,7.990744,5.089752],[-5.419909,6.794361,6.124409,-6.157373,-2.715888,7.703033,1.725533,8.173290,-3.966986,1.555409,5.031301,-9.070223,-2.787828,6.015056,6.994997,8.125395],[-2.772428,4.134612,-4.461464,-7.923994,-2.273030,8.886468,-9.458342,5.030058,0.691542,-9.734152,1.782627,0.113672,-2.115189,0.083473,1.308823,-5.679687],[6.264708,0.900468,8.154078,-9.261135,-6.153119,-4.893852,-4.104393,4.281277,-9.184721,1.052036,-3.223051,-6.062087,9.149839,-0.603078,-0.245886,2.980484],[-2.023255,4.381649,-6.729124,6.166546,2.529284,0.278568,-7.825470,5.060363,-8.734766,-7.714147,0.983663,-9.054256,-3.059429,8.223482,5.604949,-6.965263],[0.874730,3.176018,3.492714,-6.138187,-2.684759,-6.984234,-5.177370,-0.422476,-3.660923,8.367879,9.421728,7.117460,-0.023399,-5.485662,1.028387,-7.412744],[-1.933403,-5.587146,-9.032192,-5.583218,-9.739462,9.627848,-0.678348,5.847141,-5.918968,-5.265546,-2.483021,7.833032,-2.187688,-7.075434,-5.047363,-6.760350],[9.914439,-7.202166,-7.188022,-4.534168,-0.408975,2.497268,8.852194,0.799203,-6.974637,7.256486,4.716481,1.427937,-5.475785,5.285725,-5.807851,4.934466]],[[-3.025957,-9.355804,-4.193525,0.580452,-4.984335,9.104149,-3.323530,-0.592136,-7.295557,4.800655,-0.404580,5.548023,4.821720,-8.029851,2.588279,2.457620],[3.149779,-7.646469,-2.835488,-0.356799,-1.384197,4.535754,5.046564,2.018076,5.042069,0.738356,-0.502422,7.794920,-5.137797,3.302749,3.669669,3.667613],[-2.461353,1.865925,-4.202102,-4.991519,2.477080,6.483211,9.038357,7.571539,8.675107,-7.229435,7.217461,3.719644,2.515203,7.518649,1.668078,-0.970541],[-3.866465,0.765401,6.919758,-9.027769,1.271222,5.532940,-7.934598,5.979710,-0.645771,5.528099,9.900349,6.272734,-7.762823,-0.730931,3.275554,3.334495],[-9.331825,-2.203132,-7.453420,-7.635283,-9.412136,-1.426085,-2.731056,3.734476,-9.539928,7.275377,3.436525,-5.895507,4.013976,-9.197651,3.690323,7.391667],[-4.651927,-1.098144,-1.562338,-9.170637,-9.628046,3.551121,-2.317173,2.725962,-8.303252,6.281100,5.330643,2.012380,-7.773084,-5.879731,5.291361,2.706852],[5.747739,5.397799,-0.765521,8.264172,-0.967666,-1.636136,8.969078,2.590483,-6.706953,2.901524,0.175210,-3.201307,-8.352742,7.558190,-0.886215,4.484305],[-4.792155,7.951411,-9.569386,-0.919151,-1.315796,-7.652102,-4.389448,9.610731,-5.007642,1.432314,1.478574,5.812409,-5.958027,5.706286,8.805901,-2.278075],[1.574337,-8.582622,-1.068450,2.003081,4.924954,-5.157499,3.014909,-6.955865,0.793172,6.687781,-5.402560,-1.540409,-3.693323,3.175256,8.930131,3.522257],[-2.193345,-4.010702,-5.484120,3.270543,9.185844,-6.232201,1.321598,-7.752369,-4.494703,0.246719,-1.858794,1.538188,9.317460,-7.438387,-7.703197,-4.343622]],[[-3.945292,-5.872554,-6.220282,-6.256169,6.996978,-9.448280,-3.646977,3.552060,4.826126,0.135849,8.640122,-7.229634,7.587709,1.518946,-1.960100,-3.692051],[-1.748792,-9.218688,-3.640138,3.770944,0.882836,-5.547202,-3.389220,-4.648513,-2.783644,-8.181058,-2.868413,1.639227,7.922861,4.516134,-6.373114,-6.263136],[-3.528607,0.434486,-2.916336,2.034435,-6.220401,1.644550,4.198040,-7.401067,4.212781,2.215347,0.360622,5.985574,6.655318,0.313485,7.845135,8.024472],[-5.785519,-1.566617,6.402945,-3.461724,-5.440615,-3.589280,8.074977,7.020400,9.457155,-4.761241,5.908341,-7.559079,-3.158514,-0.300618,0.835799,-1.171932],[-6.873715,-7.233618,-0.198710,-7.614896,-4.869159,-9.459751,9.282171,-7.373742,3.388221,-8.398589,0.948771,2.785758,-8.403830,6.296692,4.836330,7.172322],[-9.914548,4.583865,-6.520055,8.914291,8.362651,-3.114582,-9.427284,4.981677,9.612303,-2.490756,-2.969333,-5.086856,-3.913323,8.379544,9.507762,6.537032],[-4.100341,-0.479898,-5.010819,-6.064984,-5.490875,0.595300,7.551828,-2.005986,-7.278289,9.015410,-8.029405,9.745938,6.881222,7.247534,8.754971,3.704939],[8.106179,-6.007880,2.656869,9.259410,4.541818,-0.912286,-6.325821,1.894463,-5.960276,5.321129,-9.288240,9.490417,8.033247,3.166160,6.848637,8.975143],[-5.262557,7.588343,-5.781731,4.443446,9.939719,-2.643380,-6.674015,-4.923865,9.478519,-3.748514,-1.371165,2.284549,-0.347897,-3.097334,2.016562,-4.641704],[0.421677,-1.485975,7.718950,3.847701,0.620635,-2.776150,8.815611,-6.412851,-1.141441,-8.040667,-4.374826,9.838548,-7.240944,8.877177,5.086878,-8.862636]],[[1.353313,-7.573541,-8.262216,9.197208,8.000568,-6.128438,-8.609449,7.759850,8.982300,7.878283,-8.594962,-2.604384,-8.714974,-7.250516,7.754308,-7.043658],[1.000098,6.335280,-6.050011,-1.725459,-3.176615,-5.246812,2.296863,-8.088354,5.856696,7.263221,-6.549959,4.497723,3.154350,-6.127320,-2.118054,2.954322],[4.595397,5.097532,6.112937,3.291966,-7.450357,-5.969524,-3.668966,-4.527240,-4.763792,4.774834,6.008117,1.839580,-8.262151,-0.818345,-7.217702,7.398956],[-4.261602,3.400682,-7.595996,-9.657888,-2.338604,-5.179414,9.850032,-2.793986,-7.425609,-3.714536,-9.618217,-2.661132,7.831077,9.612501,-9.570313,0.150619],[-3.697799,-7.293251,9.557790,5.008348,5.002247,-8.342864,0.227601,-5.768205,-3.937384,8.954156,-7.540034,-4.822406,-3.601074,4.820759,-3.613922,-0.630531],[9.870205,4.002561,4.728673,-4.142721,-0.779130,2.180597,-0.327998,-8.101209,-7.017105,2.949594,7.337592,-9.173533,-9.135068,8.808083,-0.244500,1.527243],[-5.832104,-3.661997,2.385114,0.105524,-9.524724,3.477650,-2.987122,0.876969,-6.151710,-1.702880,-1.255908,8.584639,-4.892861,0.687195,-8.980243,9.222539],[0.592203,-1.673997,-4.744795,8.802028,-9.112088,4.779377,-0.448215,4.619194,-3.453558,-1.688436,-1.899530,2.457220,-3.201079,6.720423,0.180488,-0.306005],[4.771518,7.366891,-5.251868,-6.127941,-0.440051,3.874016,-7.833926,5.002540,-0.316527,-2.777548,8.801124,-9.940107,-6.926519,2.754500,-3.531879,4.715667],[-3.305681,9.281616,7.820783,-6.995521,-5.079963,-2.893883,-5.825726,4.832397,8.605494,-4.452222,5.780201,2.061651,-0.956656,5.351432,-4.391262,-1.396011]],[[7.360478,8.776863,6.579278,-6.013129,3.378685,1.591668,-5.409962,1.108517,-7.832204,0.504268,-3.698854,3.146831,1.049766,5.353488,1.390733,-6.611997],[3.342706,1.958242,9.094061,-5.119680,-7.011890,5.651379,-7.842724,3.857256,-0.442671,-3.318480,6.560400,0.490404,-4.837049,-6.121755,8.557887,4.618207],[-7.909305,0.591230,-4.231909,-7.549791,6.878547,-1.019869,-9.683038,-6.923979,-0.340911,5.826964,3.560627,-3.886800,8.220108,5.558383,5.032140,-1.448953],[-8.508977,-0.758279,8.114317,1.342920,-7.005417,5.218222,9.676930,3.086644,-9.160202,1.294323,0.083111,-5.618500,-2.363498,8.752297,-4.221846,6.015003],[-1.876272,6.584582,0.947599,-9.850703,-7.720899,-1.659408,-8.935797,6.826514,8.146056,-2.143192,-0.183683,6.953293,-5.958430,4.231606,-4.690344,3.554601],[-2.817854,6.851134,-9.651972,0.309560,4.340926,-1.234821,6.945612,-5.265903,8.343295,8.159654,4.231664,-9.776734,-6.309800,-6.409449,1.296370,6.478713],[2.286104,8.919930,-7.802647,-0.480762,-1.430024,4.352705,2.622354,-2.594969,-9.907584,-3.644742,7.879786,-4.597579,-5.129291,-5.855242,-8.801049,3.821324],[-1.834244,7.015555,2.663131,-9.277925,4.640845,2.502587,-4.240626,6.714621,-2.040207,-7.006415,-9.733589,8.188676,-0.163751,-7.885607,0.693798,-9.574389],[-8.764528,-2.929716,7.278763,-6.422253,4.325034,5.844727,9.091196,-5.406616,4.576718,0.872093,2.909468,-6.222401,1.935906,5.919149,8.516173,-8.730447],[9.280137,1.910798,-5.681323,5.807253,-7.841832,7.089852,8.746374,4.510903,-5.819438,5.617525,8.186886,9.851994,-0.524139,1.393910,-5.567289,-6.355699]],[[-1.175045,4.359274,4.247395,-6.041322,2.233851,5.327625,-8.763269,9.817451,-6.423798,-3.525607,3.585649,-9.593354,-0.062975,9.532133,7.239402,9.511884],[6.881202,-8.272395,7.993097,-5.435616,-4.036049,-5.057615,-9.164326,-5.006756,-9.272522,-2.438423,-3.536039,3.926649,-3.679816,-5.910609,-3.919749,-7.066228],[-5.315117,-8.470673,2.721525,-7.483886,6.547498,-7.294765,2.097274,-1.880410,-6.609753,7.109754,2.908401,9.134640,5.400625,7.872957,9.552425,5.970704],[0.286528,-0.028946,6.841702,-6.315611,2.178714,-9.920244,5.389256,-7.680027,-3.492693,2.475586,-8.934719,6.270187,-2.080084,-9.329491,-3.032254,9.891000],[4.786208,9.633694,-6.161108,1.923882,-1.121400,-1.233967,-6.666793,8.094123,-8.981975,-1.457574,-4.497893,-2.771158,4.718417,-6.414817,8.267754,0.377792],[3.215695,5.505250,-1.453519,4.928112,-1.711576,3.107175,-1.876419,5.887869,7.728115,-8.461732,-0.286214,-0.691483,7.302120,4.318042,-9.304998,8.671302],[3.420993,0.295653,-8.416723,7.142840,7.835373,1.372566,2.463611,-2.386922,1.383486,-4.039902,-6.804231,5.095029,-7.063742,-8.886738,4.844637,-3.783253],[-6.513649,-7.893860,7.553791,9.387961,-3.551824,-7.743364,-8.513414,-6.289111,1.333028,1.482977,9.212050,4.722942,0.805945,-0.871283,-4.549631,-2.037378],[7.532100,6.120492,-6.541516,3.111019,9.334314,-4.512753,-0.011131,1.891759,-0.299251,7.346741,6.497545,0.689220,-8.094337,3.463866,-3.659952,1.729697],[5.352212,-2.445362,-8.864434,-3.990611,-2.483988,2.630020,-1.062742,-6.955038,0.943233,-0.555999,0.635451,0.452479,-8.314845,-6.972423,-2.530262,-9.913485]]], dtype = "float64")#candidate|4722|(8, 10, 16)|const|float64
bop_4723 = relay.equal(var_4721.astype('bool'), relay.reshape(const_4722.astype('bool'), relay.shape_of(var_4721))) # shape=(8, 10, 16)
output = bop_4723
output2 = bop_4723
func_4732 = relay.Function([var_4721,], output)
mod['func_4732'] = func_4732
mod = relay.transform.InferType()(mod)
var_4733 = relay.var("var_4733", dtype = "float64", shape = (8, 10, 16))#candidate|4733|(8, 10, 16)|var|float64
output = func_4732(var_4733)
func_4734 = relay.Function([var_4733], output)
mutated_mod['func_4734'] = func_4734
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5027 = relay.const([[[6.823440,-4.500083,-0.874869,1.492293,7.643715,8.062527,-4.781211,-1.099614,2.070087,-9.179683,7.652854],[5.688052,-0.471913,-0.062216,-7.039836,7.313139,-5.309718,6.866588,-2.940096,9.935509,3.996470,4.898280],[-2.959348,0.776305,8.333999,-2.548366,2.837603,3.354559,-7.100023,4.614856,-9.396447,-4.394964,-8.514927],[5.069299,8.265644,9.240706,3.057811,-7.993971,-0.314801,8.890054,6.579999,-7.559266,-5.059804,-5.044313],[2.255550,0.167328,1.373634,0.744459,3.671382,-2.827209,6.778654,-3.882105,-5.850613,-3.445249,-3.125024],[-8.578030,0.769913,-2.295627,8.175303,-0.826187,3.956681,-0.499879,2.172053,-2.246430,-4.110341,5.970360],[-0.306089,-6.478232,-8.134065,-5.185086,5.740473,4.327419,5.504155,-8.098995,-2.749206,-9.199367,-9.593647],[-3.243641,-6.804061,8.287612,3.767366,-8.167131,-8.344122,2.479538,5.068257,6.909227,-2.374589,5.394310],[3.789690,-0.464286,-1.269794,0.602603,8.840362,-5.672569,-7.761191,-2.880085,0.561697,-5.361882,-3.161521],[-2.919604,6.926514,-5.090794,-6.997749,5.299422,7.467336,-7.305476,-9.753807,-7.118214,7.209720,0.214909],[-3.648996,-9.397751,-4.716759,8.707886,-5.979638,-1.519101,-8.657478,1.939375,-2.316300,-6.042643,9.486433]],[[4.769689,-2.219787,7.697383,1.122375,3.637775,9.887036,4.840395,-7.116707,-0.916316,-7.832542,-2.559536],[1.411848,-2.123349,5.336629,0.735098,5.479027,-7.027980,-9.481200,5.026335,0.838108,-2.601241,-7.592926],[-5.250970,-7.639666,2.409700,-6.428915,3.810930,-8.221359,4.140806,-6.062281,-5.331719,-6.341822,5.201676],[-1.107784,-2.195990,-5.303481,-6.344210,-8.868380,0.893045,4.946521,9.423800,3.501247,6.115444,-0.091012],[8.489802,3.400991,-3.665211,-5.050411,7.886305,3.220297,-9.131183,-0.605795,-8.284363,-5.141627,8.362816],[3.758870,4.525074,-1.650352,-6.596466,9.958304,4.773825,5.216238,-5.743697,-3.530420,-3.539583,4.795919],[6.054494,-9.763670,-2.182584,4.377933,-1.085815,4.583203,7.884914,1.488326,-5.162067,3.518061,9.030669],[-1.174103,0.863044,7.071831,-6.980460,-5.200265,-1.965580,2.427176,9.780100,3.219219,9.948512,9.360613],[-2.858119,-3.119231,-9.853091,-9.140389,-6.701880,5.871920,7.969399,-2.328894,-1.630277,7.261951,5.923942],[3.236302,-7.457928,-0.567297,3.994081,-7.510838,-2.464971,5.195715,2.493005,3.847460,-3.827977,8.798855],[3.225411,4.443762,-5.113012,8.146069,4.576834,9.997931,4.968812,-8.557904,3.775536,-4.898549,3.129869]],[[-7.404432,3.866781,2.789172,7.033889,-5.484494,-0.061148,-4.014754,-7.262047,-1.274788,-7.836836,3.409967],[9.139649,7.284139,0.624906,7.851904,9.325687,9.442990,8.300451,-1.422246,2.191648,0.771826,-0.199594],[-4.961117,6.522131,-6.709658,-9.177739,3.496503,3.369606,1.725723,-7.543312,-2.769120,-8.270556,8.262921],[-3.017513,-1.633241,-1.489648,2.373481,0.073299,3.836169,-1.495060,1.587464,-9.680492,-3.774741,7.253165],[-8.115440,-2.484790,7.943939,-7.400306,-3.266923,-5.861443,-3.409131,1.907515,1.390326,3.913435,8.194263],[-5.245468,9.083883,-2.464980,2.721434,5.889942,2.321819,-5.582034,-6.463482,0.671731,9.724998,-0.521052],[-7.896958,6.149375,-1.929315,2.414111,-8.633948,-5.233636,-5.044226,3.264093,-2.340965,9.047429,1.887256],[-5.918411,-1.866459,-1.535301,4.184322,3.754179,-9.910668,6.147202,8.390758,0.844636,3.769454,2.777509],[-7.909638,7.125970,2.797273,-9.018250,-2.878225,4.529089,3.509659,-4.273006,-3.423249,-3.949088,-0.013909],[3.404668,-9.714300,5.877529,5.200131,4.627598,9.645315,-2.045317,2.188707,1.273296,-8.888183,-1.170733],[2.381998,-3.822263,-0.883258,-5.027008,8.899640,5.963977,-1.967073,9.080673,0.120804,9.800708,0.212839]]], dtype = "float64")#candidate|5027|(3, 11, 11)|const|float64
uop_5028 = relay.asin(const_5027.astype('float64')) # shape=(3, 11, 11)
output = relay.Tuple([uop_5028,])
output2 = relay.Tuple([uop_5028,])
func_5031 = relay.Function([], output)
mod['func_5031'] = func_5031
mod = relay.transform.InferType()(mod)
mutated_mod['func_5031'] = func_5031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5031_call = mutated_mod.get_global_var('func_5031')
call_5032 = func_5031_call()
output = call_5032
func_5033 = relay.Function([], output)
mutated_mod['func_5033'] = func_5033
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5049 = relay.var("var_5049", dtype = "uint8", shape = (1, 8, 16))#candidate|5049|(1, 8, 16)|var|uint8
const_5050 = relay.const([[[-6,1,-1,-2,-6,9,-1,-6,8,7,-1,-2,-5,-5,-10,-3],[7,-2,6,3,8,-7,-9,-5,4,-10,-7,9,-1,1,1,10],[9,-6,-5,-6,-3,3,-3,-8,-2,-4,-5,3,9,9,-9,8],[10,-2,5,7,-10,-9,-1,-1,-9,2,-8,-2,-8,-9,-10,2],[2,-5,1,-4,-4,-5,2,-8,3,-5,-4,9,7,-6,8,-7],[3,7,3,6,-6,2,10,-9,9,-5,-10,-2,4,-4,-7,3],[10,-5,-3,2,-5,7,4,8,9,-4,-8,6,4,6,-10,3],[-1,6,-9,-3,-3,-10,6,10,-1,-4,3,-3,-1,-10,10,-2]],[[-2,-6,7,5,-2,8,-5,3,5,7,9,-6,-2,3,10,2],[-6,-10,10,4,2,-9,-2,-5,2,-4,-5,-5,-7,-7,-4,6],[9,-2,5,8,7,4,-2,8,-2,-6,5,2,-10,8,9,-5],[-3,-5,4,-6,3,-2,-1,-8,5,10,5,-1,-2,-10,-4,-9],[-1,-5,-10,-8,3,9,-10,-8,2,4,-1,-4,-3,-4,-9,-6],[-9,-9,-2,-3,7,-10,10,-4,8,-2,3,2,2,5,-10,4],[-1,-10,10,-9,-5,5,-1,-10,9,7,-7,9,6,-1,-4,6],[7,-10,1,-3,-2,-4,9,9,-3,9,-7,9,4,-10,2,4]],[[3,-6,7,1,-8,-10,8,-5,10,-10,4,-8,9,5,-5,-3],[-6,1,6,1,-8,1,4,6,9,9,-7,-10,-7,10,-7,-10],[-1,4,-4,3,8,7,-9,-6,-3,4,3,8,10,-4,4,9],[5,-5,2,3,4,-4,7,3,-6,-1,2,1,-9,10,8,-1],[7,-4,-5,-9,-10,-4,-10,6,6,4,-9,2,9,1,3,2],[7,-7,6,-3,-6,5,8,3,-9,3,-4,-5,-5,2,-10,8],[-2,-4,-8,5,6,1,1,7,2,9,-5,9,-5,-9,-7,6],[9,-8,-7,-2,-2,8,-8,-7,-4,-6,-3,8,8,-4,-2,2]],[[10,-10,-2,-1,-7,2,-3,8,5,6,-9,-5,4,9,2,1],[1,9,6,-2,1,8,10,3,10,-3,-6,5,10,9,-5,-1],[10,2,4,-8,-5,-8,4,10,1,-2,-4,10,-9,3,7,-2],[8,2,-9,6,9,-1,-7,9,-6,8,6,-3,5,2,-2,9],[-10,1,-5,5,4,9,1,-9,6,7,5,10,-6,2,-5,-7],[5,-6,8,4,-9,1,-10,-9,10,-10,-5,-5,-1,8,-7,2],[-4,2,-2,-4,-9,3,7,-6,5,2,-6,-1,-1,4,-6,1],[7,-4,8,-1,4,6,3,8,8,2,-4,-3,-3,-4,3,3]],[[-7,-8,4,3,3,-9,1,-8,7,7,2,8,-4,6,-8,-9],[3,-1,9,9,5,-10,-7,-7,6,-8,1,4,8,7,7,2],[-7,1,9,8,7,-10,6,-9,-1,-1,-2,-2,-2,-8,-6,1],[5,9,-1,10,7,-2,-9,-5,7,5,-10,-10,7,-3,6,8],[5,7,-6,-4,5,6,-5,6,-7,-1,-9,9,-7,-1,-6,6],[6,-7,-8,-5,-7,9,-2,-3,-6,-5,-5,3,9,-5,-4,-8],[2,-5,8,-5,3,-6,9,-3,6,-9,6,-1,9,10,6,-6],[-5,1,4,-8,-10,-1,4,3,4,10,-8,-5,-6,-10,4,3]],[[10,-3,-9,-1,-5,-9,4,10,-6,8,-1,10,-7,-10,-10,-2],[-4,-5,6,-6,-6,-4,7,-10,4,8,2,-3,-2,-2,3,-3],[9,-3,-3,7,-2,-2,7,-3,-2,6,-2,-3,-1,7,8,-2],[7,1,-4,9,-1,4,-5,-9,-9,2,-6,-6,-1,3,-2,-6],[10,-10,8,-10,-10,-7,3,-3,4,6,10,9,6,1,-4,-8],[4,9,-7,1,3,-4,5,-1,-3,-9,2,6,-7,-5,-6,7],[2,2,-7,7,-10,-8,-8,-3,9,-4,9,8,-9,-9,7,6],[6,-7,10,4,-4,-6,3,-1,-1,-3,9,8,-4,4,7,-1]],[[8,5,-3,-2,1,-7,-9,-9,7,3,-3,3,-2,-1,7,-1],[9,6,6,8,8,-4,-6,-7,6,9,3,-9,7,3,1,10],[1,-3,-6,6,8,8,4,-9,5,10,-7,2,-10,-9,-8,-2],[-9,-8,7,8,4,9,1,-8,5,-4,-8,8,3,8,10,-2],[4,3,-4,5,7,3,4,-6,-9,3,9,5,1,-3,1,10],[-5,-7,4,-4,9,-8,-1,4,-5,9,-8,-5,-8,-10,6,-6],[-4,10,6,8,-5,10,1,8,-3,-1,1,-10,8,10,1,-5],[-1,-3,-2,4,-7,3,-10,-7,8,-4,8,10,7,8,-5,2]],[[-9,-5,-8,-8,5,5,2,8,2,1,-9,3,-8,-1,5,1],[10,7,-4,3,6,-7,-1,-8,-1,2,9,-4,-8,2,-10,-9],[8,10,-1,-5,4,3,9,10,-2,7,-10,10,8,3,-6,10],[-10,-8,-7,6,-5,7,-4,-3,9,-10,1,-7,4,6,-4,-4],[9,5,-6,-5,2,4,-9,2,7,9,4,6,7,7,-8,-8],[-6,-3,4,3,2,-1,4,-2,-9,-8,8,2,4,9,-2,-1],[1,-1,3,-2,3,9,1,8,-2,-3,-8,8,-4,-8,-3,7],[2,-9,-3,-2,-6,-4,4,-5,8,-9,-2,-2,3,7,6,1]],[[3,5,-3,-2,9,6,-10,2,-10,8,-9,10,-8,-7,10,-4],[-10,-9,-7,-1,-1,-4,7,-10,-8,-9,-9,-8,-8,5,4,1],[10,4,4,-8,2,7,9,-4,-8,-3,-4,5,-7,-9,10,5],[-3,1,-6,-2,10,-6,1,-5,5,-7,10,-8,-2,10,-9,6],[-7,9,4,2,5,3,9,2,-8,2,10,-7,-9,8,3,9],[-1,-3,-2,-10,-4,10,1,-9,2,6,-3,6,-9,9,-8,-2],[-7,-5,10,7,-8,-9,-10,9,10,-5,10,3,8,3,-10,-5],[2,7,5,7,-10,2,3,-3,-9,-5,10,8,10,3,8,9]]], dtype = "uint8")#candidate|5050|(9, 8, 16)|const|uint8
bop_5051 = relay.logical_xor(var_5049.astype('uint8'), const_5050.astype('uint8')) # shape=(9, 8, 16)
output = bop_5051
output2 = bop_5051
func_5054 = relay.Function([var_5049,], output)
mod['func_5054'] = func_5054
mod = relay.transform.InferType()(mod)
var_5055 = relay.var("var_5055", dtype = "uint8", shape = (1, 8, 16))#candidate|5055|(1, 8, 16)|var|uint8
output = func_5054(var_5055)
func_5056 = relay.Function([var_5055], output)
mutated_mod['func_5056'] = func_5056
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5058 = relay.var("var_5058", dtype = "float32", shape = (7, 7, 4))#candidate|5058|(7, 7, 4)|var|float32
uop_5059 = relay.cos(var_5058.astype('float32')) # shape=(7, 7, 4)
output = relay.Tuple([uop_5059,])
output2 = relay.Tuple([uop_5059,])
func_5066 = relay.Function([var_5058,], output)
mod['func_5066'] = func_5066
mod = relay.transform.InferType()(mod)
var_5067 = relay.var("var_5067", dtype = "float32", shape = (7, 7, 4))#candidate|5067|(7, 7, 4)|var|float32
output = func_5066(var_5067)
func_5068 = relay.Function([var_5067], output)
mutated_mod['func_5068'] = func_5068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5031_call = mod.get_global_var('func_5031')
func_5033_call = mutated_mod.get_global_var('func_5033')
call_5090 = relay.TupleGetItem(func_5031_call(), 0)
call_5091 = relay.TupleGetItem(func_5033_call(), 0)
output = relay.Tuple([call_5090,])
output2 = relay.Tuple([call_5091,])
func_5092 = relay.Function([], output)
mod['func_5092'] = func_5092
mod = relay.transform.InferType()(mod)
mutated_mod['func_5092'] = func_5092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5092_call = mutated_mod.get_global_var('func_5092')
call_5093 = func_5092_call()
output = call_5093
func_5094 = relay.Function([], output)
mutated_mod['func_5094'] = func_5094
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5105 = relay.const([[[5.941000,-3.725684,7.963830,4.073387,1.481800,-9.966596,-6.166415,3.947158,2.738190,6.394720,0.831870,8.174815,3.818632,-2.999928,-0.508553],[-0.959293,2.834954,2.720493,6.587695,9.870570,2.495034,4.788021,-3.972314,-2.493068,-3.743838,2.849164,-4.313468,-5.991305,-2.283488,-0.708856],[-8.912261,2.123404,9.448002,-8.607544,1.855711,5.517358,-3.091615,-3.914376,8.390989,-0.873441,-2.193530,-8.862624,-3.248140,3.096278,2.282289],[6.614724,-1.138148,-1.698881,1.536199,-1.400245,-2.801341,9.104918,-0.488496,9.632204,0.562310,7.201783,0.520847,-7.925060,-9.732902,4.833815],[5.853493,9.878493,2.628611,4.099151,2.399195,2.728954,2.675891,-1.646304,5.853667,7.560786,4.505227,-0.108949,-2.826050,5.082384,-0.955596],[5.567932,9.680710,8.672664,-5.420763,-3.453356,6.132602,6.287611,-7.459859,-7.592958,4.373409,-7.912101,8.449375,4.672324,3.976571,-8.509317],[5.757564,9.624077,0.260631,7.089808,3.420106,9.167402,-0.523911,5.862395,-1.998044,-3.983634,-5.778428,-3.415007,6.124804,3.531796,-3.118322],[1.795943,4.731138,1.990032,0.553901,-6.858180,-4.975104,4.689281,-8.381862,3.997034,5.787989,-1.662951,2.548637,7.369838,0.154674,2.573832],[-9.627139,1.067603,-7.855015,-1.497324,-8.856854,-0.515146,-4.133093,5.663643,0.181216,3.144289,-3.094681,-0.772814,9.503680,-1.155768,-9.300259],[-1.985199,-4.097007,4.751569,-5.360158,8.258813,-6.157348,3.247139,6.440507,-5.056297,-7.625263,9.190418,0.009358,-3.209227,1.599697,2.222045],[-5.130772,6.067540,-9.973033,4.196239,-9.580930,1.283732,4.461385,-4.313806,7.637012,4.522833,-9.363909,-4.007638,-4.335033,-1.198827,9.393461],[2.492952,-8.282714,6.307510,0.847438,1.486473,0.951305,2.191813,-8.909218,9.873221,-1.381289,5.906696,-7.798743,-1.119434,-7.989901,-5.524286],[0.910991,5.434872,-1.129177,-7.970209,-4.182864,-3.347521,-0.613190,-7.086539,1.018040,-0.574687,-0.101505,-4.602108,3.351814,4.464953,-7.686544],[3.513042,2.408677,1.533927,1.204077,-5.270382,0.200695,5.815038,-5.400602,-9.188389,-6.592414,0.196874,-5.652636,1.790431,-2.547315,2.262901],[-6.298073,-1.116475,-6.926756,-2.215366,8.081416,4.315089,0.563029,-1.941362,-7.593596,6.684887,4.568260,2.125130,-4.057584,3.740948,0.461641],[5.859807,-0.925378,0.828502,0.147432,-1.081143,-9.623484,-3.224037,0.617849,8.485186,3.497766,-0.029630,5.516175,3.245089,-4.645306,8.169066]]], dtype = "float32")#candidate|5105|(1, 16, 15)|const|float32
uop_5106 = relay.log2(const_5105.astype('float32')) # shape=(1, 16, 15)
uop_5115 = relay.sqrt(const_5105.astype('float32')) # shape=(1, 16, 15)
func_4732_call = mod.get_global_var('func_4732')
func_4734_call = mutated_mod.get_global_var('func_4734')
const_5121 = relay.const([-7.221914,0.097824,1.375350,1.985715,2.573212,-1.251603,-2.666271,5.400613,4.851827,1.181961,-1.810897,1.103733,7.018580,4.946716,2.477766,1.290300,-6.171416,1.158903,-1.138740,-4.963835,-3.351429,-4.959554,-6.314299,-4.137613,-6.768450,-6.967709,0.669189,6.591654,6.107989,5.124330,4.301755,-2.416731,7.087978,-5.643959,-9.625391,7.570665,5.708147,9.590789,-0.435285,4.798432,7.162230,7.339935,7.114186,-3.521114,6.969830,-7.761981,-7.452476,-9.558403,-8.810309,5.563496,-2.786934,5.730174,-4.423879,6.415227,-1.508151,5.188618,-2.260191,-1.362370,-5.212941,-7.378737,-4.971106,-3.843452,5.986386,-1.070041,9.069089,4.208641,5.562410,-3.002594,6.918626,-3.811613,-0.218868,-2.111366,-7.548526,0.883295,6.622806,-4.450658,-5.495843,-2.521158,5.053458,2.899182,7.047982,-0.967237,3.832476,-1.721603,6.097284,-4.543033,2.980035,-8.752997,-3.700509,-3.722902,-2.537903,6.255370,2.270896,-0.443823,5.749637,-4.960278,-3.313373,4.519102,5.057520,1.563127,-1.298551,-1.528009,-4.240395,6.759396,-2.593515,-3.010902,-7.888823,8.589985,2.527496,-6.036674,0.901719,5.313564,-8.908477,2.295593,7.980723,-4.717683,0.221527,7.629533,4.233854,-8.572956,-3.833461,-7.611767,-8.117975,-5.970015,-0.294427,-4.948493,0.800184,3.477963,-5.551795,8.752543,1.978838,9.469980,3.820279,-3.164824,7.085302,-4.793203,7.716016,-0.323003,9.810795,-7.153251,-8.046592,4.757138,-3.251813,4.122912,-3.171590,-6.637380,-3.265235,-6.809706,-4.154238,-6.990638,7.070508,0.499863,-9.037177,-1.241094,0.599245,2.222521,-1.875370,4.280886,7.672197,2.860886,-0.939641,-9.411924,-3.643344,-2.913932,2.336123,-2.790328,3.374172,-0.133554,-6.715675,3.237969,7.365209,8.741328,-5.969634,-5.979591,4.848806,2.472270,-3.699843,-3.282714,-6.410591,6.916618,2.420750,-8.247117,-0.733400,-4.722254,0.420174,-4.205866,-9.540716,-4.852046,-0.993885,1.434601,9.019294,4.334861,-6.445889,-3.818967,-7.962532,-9.424267,1.747466,3.164420,3.172648,-7.046699,7.748569,4.953928,-7.914520,-8.680364,5.836527,-0.109595,-0.257815,-5.440470,8.346988,3.051771,-0.124324,-1.944451,-6.985389,5.195584,4.005478,1.961023,-1.389282,9.106109,-1.331926,-9.716177,2.223881,-0.535903,-3.174272,-4.272404,1.869996,-9.322508,0.195303,-2.748175,-9.896800,-1.609586,8.138701,-5.044445,-1.264689,4.579823,-2.727373,-9.957902,-8.466136,5.898714,0.748100,4.406283,-1.918048,5.082536,-0.006265,7.367692,2.147047,-3.679613,4.091235,5.864671,-5.957341,2.279103,-8.114952,-2.802067,-4.161784,2.237553,2.052328,7.270556,-1.409409,-1.856678,-9.999547,1.151224,2.785019,-9.709120,4.215493,-3.711028,-2.027906,-6.219003,-4.980159,-0.737254,-2.568726,-5.090121,-2.901113,4.270390,-0.442814,0.682305,-7.888419,4.771650,-7.665970,-6.814627,1.788525,-3.615961,-7.836056,-3.467855,6.306421,-8.145343,-9.904823,-6.427843,-9.845586,-7.771979,7.628088,3.018580,-2.672387,6.092155,-1.507716,-6.857202,-8.182922,-3.691949,6.398365,9.550444,9.354734,9.642488,8.542435,-9.968255,2.827547,-3.776952,-3.768076,-6.478346,-5.251167,2.757638,-0.273297,-4.639081,-6.554669,9.852820,1.378388,2.864286,-4.528899,1.735590,-1.205008,7.118288,-5.047870,-1.727613,7.879765,9.701817,-0.366257,9.889868,6.515926,1.651852,-7.542967,8.451762,-2.692839,-2.384174,3.319289,-7.505620,6.497908,-9.696407,6.540185,-2.793914,2.612790,6.810181,-4.902279,-7.019448,-5.067721,-0.079230,8.244612,9.767426,-4.780800,-1.800239,7.055266,0.712085,2.363452,-2.896688,-6.387602,7.209935,-1.629674,0.913381,1.790375,-4.521762,3.332914,-6.756724,8.572951,-7.980404,2.152446,8.185824,8.350468,3.455503,-5.517029,-8.787728,-6.741385,6.788363,-5.606091,-4.394936,-8.400735,5.573173,6.755115,-7.526907,4.915055,-8.854557,-2.161936,0.042873,-4.585558,-2.655990,-8.163892,8.531823,-8.065437,-2.689324,3.079096,4.296983,6.150702,6.265488,-5.992108,3.743194,4.905896,5.038168,-2.656252,4.474315,8.871698,0.775814,-8.937511,4.395789,0.490616,1.508441,-7.218865,3.380693,-1.893508,-5.307967,-0.403276,-5.465704,3.483151,8.810018,3.810320,-3.183384,-6.325511,-0.140072,-7.128804,-4.406938,7.373326,-2.261764,-5.640120,-2.356118,-9.709566,2.587280,-8.539468,-1.852118,8.700846,7.826749,5.904926,-8.450430,-0.849282,-4.878866,-8.296989,-1.317737,2.469938,8.308490,-4.398719,-3.771400,-9.515003,-8.657146,3.341803,-2.361088,-1.484786,1.862332,6.440010,-1.033347,3.564325,-5.590822,0.792091,3.187280,1.871603,-2.616815,-2.662567,-3.423191,-6.854812,-4.016267,-3.769413,9.134828,-5.670830,-7.981098,-4.215449,6.001864,1.764511,3.380081,6.164819,8.883847,2.891667,-6.706709,-6.648572,-7.392846,5.073408,2.708479,9.736935,1.698773,5.721881,4.337109,-1.924307,5.950991,-6.729281,-1.878894,-6.795225,-8.235981,6.461958,9.056748,6.435881,-0.794885,-6.055363,-8.677250,-7.750864,-8.532267,7.559015,6.830982,-4.389234,-8.554789,7.733201,-3.995882,-3.251513,2.199451,-1.660879,-8.264681,-4.632260,-7.474920,-1.708097,-6.646805,-7.900540,-7.988299,-9.989296,2.598580,7.723141,4.507113,-0.363288,-2.331150,-5.786008,-1.904975,-7.909726,6.172946,-9.691485,-9.943483,-5.478645,9.297258,7.559084,8.039905,-4.595437,-0.867837,-3.736059,-7.191315,-7.715273,9.142232,6.772773,4.949636,-0.296741,-3.924967,-1.330426,0.927636,-7.459347,-1.017608,3.467862,2.797589,-9.612294,2.486495,-1.948704,-0.441641,-4.284667,8.532767,5.291458,4.064590,8.279954,-1.883038,-6.287812,5.763576,5.914556,-2.677264,0.056226,-9.136733,-4.117987,-2.290324,0.488406,3.121631,-7.962997,1.715306,5.562523,-3.985034,6.278578,-4.110410,-4.534101,-8.140838,1.844500,-1.116511,-0.575921,1.336937,-0.634157,3.804367,-0.325319,5.056758,-5.871295,-9.091090,-6.812240,-2.682956,-8.209779,0.823913,-8.170245,-1.739805,8.159507,-6.160040,6.638168,-4.726777,8.508412,3.038682,-3.595292,1.310624,-3.712727,-7.306043,-8.693293,-7.679211,5.698300,2.381759,6.124357,-3.263350,0.428876,-6.306243,-7.084023,-5.577056,8.271274,8.329962,0.447898,-4.483472,-7.579547,-5.759812,9.590335,6.745925,-7.006825,4.132184,-0.199821,-0.739244,-1.115439,-9.314326,5.873374,9.485255,2.440845,-8.668901,3.968283,-5.788365,5.966302,-4.634657,6.619738,-8.611760,-1.653693,6.209306,5.678443,-5.732637,-4.149119,-2.252388,-8.853728,-5.871426,-3.533505,-0.719817,8.050245,3.229773,5.147276,-5.230919,-2.473142,-7.506184,-7.640595,5.961329,-6.144010,9.219793,3.418506,-7.965140,6.248802,3.379383,-2.975881,3.171473,-6.965270,-3.527133,-6.742626,-2.274231,2.125752,-6.803430,-5.567636,9.736032,2.900205,0.547727,-6.796194,-0.211523,8.157320,3.454701,0.552549,1.792697,-9.434462,5.823873,-4.054449,5.263986,8.128715,4.446902,0.414670,-2.101924,-8.936641,1.445262,2.696743,-4.965034,4.298750,-8.744277,9.162009,-6.507023,-1.085958,-8.327396,4.403006,-2.342974,3.194894,-1.888037,4.220671,-8.641862,6.575498,-1.920196,5.248722,7.048730,6.944111,-0.263248,7.218431,-0.990581,-2.744296,3.028990,-8.285104,-9.579176,4.968564,-6.526180,0.599908,-2.086331,5.052187,-3.744013,-9.169774,2.892763,0.203459,-8.748427,6.579621,-2.772525,2.299661,2.993519,-5.184675,-8.664112,8.326932,-0.082794,0.302929,6.422540,3.258762,9.555265,9.374062,4.191593,-9.769198,2.441966,-4.935723,-8.983256,4.082937,1.593470,7.872873,-0.736797,1.331542,-9.607101,5.665138,4.260112,3.860763,-5.869839,3.924461,7.647294,1.458129,4.216356,2.629541,-2.144089,-7.803406,-4.740369,9.301137,-0.135569,5.437567,0.408619,-3.752075,4.622048,6.123019,-1.586182,-8.819845,0.943932,-1.186068,3.057358,-2.470124,6.849195,-6.970320,-3.743580,-9.773538,-4.253247,3.394443,-8.245809,-5.003245,4.339723,-7.737962,-9.854271,-5.453583,-4.273056,7.624555,-0.150575,0.929673,-2.235955,2.478153,0.069890,3.148404,4.658786,0.282591,-6.682842,5.764675,-7.670782,0.864797,-4.158318,-5.965001,-1.960959,7.070179,8.317535,-0.419585,-1.919055,-9.119940,6.307590,2.199632,5.866480,5.608606,-9.610044,1.722122,-2.373955,5.911504,-0.745146,7.896553,1.308041,8.558232,-6.434323,-1.771396,7.935551,-4.472922,-7.121769,6.282077,5.230425,3.102886,-8.180143,-4.015900,1.850440,6.294555,4.033066,5.544776,0.246810,2.540790,-2.261147,-4.279638,-4.190999,0.841845,-3.262226,-9.076573,7.205999,2.950747,1.894681,-3.254236,-1.546797,-4.937483,-2.938919,-9.709520,9.057096,5.804714,-1.767607,3.316568,0.105904,3.361685,-9.644454,8.512894,-7.362392,8.932620,-3.279260,-9.981445,7.957345,-2.085236,-0.177086,-7.176094,-3.419035,-6.177482,1.467353,5.091595,-1.716702,1.007067,8.044185,-3.613800,2.410412,5.060142,4.750062,-0.321561,-5.179517,-6.883155,-6.218346,-2.823275,4.677964,6.233554,8.516871,9.294282,0.340640,-5.660118,7.567942,-0.695394,-1.731402,-7.140743,-1.509255,-0.563561,6.077694,6.385482,0.068290,-9.899298,-4.417588,-4.654369,-5.486354,0.417740,-1.553819,-9.833172,-6.159607,-6.234449,-3.351710,-4.255827,-1.681006,-0.194589,-1.087087,4.541218,1.899408,-2.918756,8.196037,3.856143,-1.631031,7.575473,-1.864068,-1.492343,7.213146,7.474997,0.770399,-7.027753,4.072744,9.730583,-9.159416,1.968479,-7.609031,-5.740222,-9.911582,5.557656,-7.077558,5.345786,9.446716,-5.821598,1.465317,-5.693715,7.341027,-5.021306,7.307619,-9.834224,-4.556511,-8.928841,3.071888,-3.359573,-1.796354,-2.979262,-6.791157,-5.547044,5.779779,-1.337863,-2.087211,7.700762,4.948670,-5.892010,2.556540,3.061943,7.766850,-3.010398,-1.147596,-9.479961,9.277541,7.273198,4.908646,1.971391,-4.643442,7.758830,-4.082075,0.242431,-6.166925,6.984401,-0.187783,2.948479,-1.493998,7.742377,-6.400485,2.562583,-5.644189,3.301049,-5.912309,3.528222,9.111190,-8.748817,0.564382,5.289164,1.273360,-9.232562,9.608688,7.615267,8.714751,-9.964539,8.110467,4.249738,5.345931,6.787205,3.610763,-4.265768,1.810928,8.460434,-8.646682,-4.807618,3.699101,-7.208435,-1.622743,-0.451773,-4.028836,1.980908,-7.225071,0.773011,4.748945,-6.568468,6.080247,5.004659,2.242012,-2.738682,-6.264802,9.222113,5.362689,-9.937942,-1.625383,9.830968,-0.526579,-0.368774,-5.154964,-5.644509,-8.241427,-8.170436,0.593282,-3.253890,-9.376744,4.231265,2.358068,-7.137690,-2.005889,-4.885267,4.022073,1.177918,-7.061663,2.585745,6.591051,-9.820317,-1.138147,-5.007308,7.135464,-8.267556,3.118864,-2.791827,-3.056289,3.688434,8.130117,5.702935,2.245846,-5.090776,-6.608912,-0.690132,7.767744,6.062135,-0.249821,-3.470752,-1.598111,7.287853,-1.081395,-9.093430,8.081608,8.669871,2.298238,1.039325,0.948167,-4.566578,7.580717,0.429678,-1.348190,-5.217267,-3.366169,-0.490501,9.758196,-1.147322,0.129343,6.321447,-8.681072,9.297649,8.121267,4.697853,8.011287,3.394424,-1.153888,7.239560,7.155390,3.059853,-4.552596,9.680597,-9.278089,2.176014,-9.531585,-6.001876,1.830815,8.225615,-0.837050,5.873069,-8.294592,8.235312,-9.496339,3.110350,-2.942686,4.103273,-7.347323,1.233370,8.259633,-9.186396,1.837537,-6.715267,5.237302,3.522185,-0.765136,5.121951,4.953259,-7.332997,9.275249,-0.224242,-2.704116,5.820994,-7.473262,8.357430,9.296534,5.621091,-0.959376,-0.282313,2.561690,-3.277451,-3.596911,4.435018,-0.220007,4.298895,7.823340,4.807683,-5.593358,5.723547,0.405508,-8.051645,-7.839215,1.020047,4.589375,-9.102961,-6.702503,1.859186,-2.365362,-7.486872,-4.584448,8.625193,7.118830,3.552213,2.309342,-6.632749,-0.472808,4.162198,9.870536,9.366926,-7.610285,1.228345,-5.198751,-9.435375,0.600776,4.185405,-0.821042,-0.594367,-9.412535,8.283435,-8.065506,-8.716575,-5.718927,8.873049,2.914620,8.966724,6.866375,-8.030675,8.968671,-5.354213,9.711947,-4.825823,-7.008470,-2.186692,-4.686298,-5.551435,3.585894,7.774858,7.501605,0.925951,-1.823494,-5.504140,-4.354799,4.059165,6.328398,-6.062386,-1.974678,2.009955,7.414149,3.184206,1.014618,-8.058904,-4.568409,3.812702,5.120154,-4.444501,0.558063,5.592617,0.930914,2.349220,-1.276005,-7.787772,-8.834017,-0.079256,4.187767,3.023492,7.587914,8.844841,-5.554065,9.292040,-9.540520,5.947298,0.518574,9.604041,9.124244,1.977517,-6.427296,-2.013270,0.684226,4.989971,-7.329545,-2.850556,-2.613417,-2.274326,-9.153320,-9.920007,4.926452,-8.401183,-3.507721,-6.770309,-7.193658,-7.848177,4.909274,9.394520,8.990044,8.510086,9.053063,2.506421,4.727296,-5.285031,-9.354198,-4.496208,-0.994549,-8.137082,-0.942848,9.523929,-7.122969,-3.229268,-6.535146,5.950678,-7.166415,-3.913880,-8.394288,7.163131,0.205347,4.254206,7.526977,4.398254,-3.701584,-7.578289,-8.098678,3.760586,6.769094,-5.803571,3.671392,5.120625,-3.208275,9.408557,-0.830089,1.888965,6.410408,4.617270,-7.283363,-0.235030,-0.342690,-3.947645,-6.280305,5.453834,1.925425,-2.010278,0.253359,-3.696447,7.980747,-2.294606,-2.024269,5.766661,-4.881945], dtype = "float64")#candidate|5121|(1280,)|const|float64
call_5120 = func_4732_call(relay.reshape(const_5121.astype('float64'), [8, 10, 16]))
call_5122 = func_4732_call(relay.reshape(const_5121.astype('float64'), [8, 10, 16]))
uop_5124 = relay.atanh(call_5120.astype('float64')) # shape=(8, 10, 16)
uop_5126 = relay.atanh(call_5122.astype('float64')) # shape=(8, 10, 16)
output = relay.Tuple([uop_5106,uop_5115,const_5121,uop_5124,])
output2 = relay.Tuple([uop_5106,uop_5115,const_5121,uop_5126,])
func_5142 = relay.Function([], output)
mod['func_5142'] = func_5142
mod = relay.transform.InferType()(mod)
output = func_5142()
func_5143 = relay.Function([], output)
mutated_mod['func_5143'] = func_5143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5031_call = mod.get_global_var('func_5031')
func_5033_call = mutated_mod.get_global_var('func_5033')
call_5150 = relay.TupleGetItem(func_5031_call(), 0)
call_5151 = relay.TupleGetItem(func_5033_call(), 0)
output = relay.Tuple([call_5150,])
output2 = relay.Tuple([call_5151,])
func_5156 = relay.Function([], output)
mod['func_5156'] = func_5156
mod = relay.transform.InferType()(mod)
output = func_5156()
func_5157 = relay.Function([], output)
mutated_mod['func_5157'] = func_5157
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5176 = relay.var("var_5176", dtype = "uint16", shape = (7, 4, 8))#candidate|5176|(7, 4, 8)|var|uint16
var_5177 = relay.var("var_5177", dtype = "uint16", shape = (7, 4, 8))#candidate|5177|(7, 4, 8)|var|uint16
bop_5178 = relay.less_equal(var_5176.astype('bool'), relay.reshape(var_5177.astype('bool'), relay.shape_of(var_5176))) # shape=(7, 4, 8)
func_5092_call = mod.get_global_var('func_5092')
func_5094_call = mutated_mod.get_global_var('func_5094')
call_5190 = relay.TupleGetItem(func_5092_call(), 0)
call_5191 = relay.TupleGetItem(func_5094_call(), 0)
bop_5210 = relay.floor_divide(bop_5178.astype('float64'), relay.reshape(var_5176.astype('float64'), relay.shape_of(bop_5178))) # shape=(7, 4, 8)
func_5142_call = mod.get_global_var('func_5142')
func_5143_call = mutated_mod.get_global_var('func_5143')
call_5221 = relay.TupleGetItem(func_5142_call(), 0)
call_5222 = relay.TupleGetItem(func_5143_call(), 0)
output = relay.Tuple([call_5190,bop_5210,call_5221,])
output2 = relay.Tuple([call_5191,bop_5210,call_5222,])
func_5223 = relay.Function([var_5176,var_5177,], output)
mod['func_5223'] = func_5223
mod = relay.transform.InferType()(mod)
var_5224 = relay.var("var_5224", dtype = "uint16", shape = (7, 4, 8))#candidate|5224|(7, 4, 8)|var|uint16
var_5225 = relay.var("var_5225", dtype = "uint16", shape = (7, 4, 8))#candidate|5225|(7, 4, 8)|var|uint16
output = func_5223(var_5224,var_5225,)
func_5226 = relay.Function([var_5224,var_5225,], output)
mutated_mod['func_5226'] = func_5226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5092_call = mod.get_global_var('func_5092')
func_5094_call = mutated_mod.get_global_var('func_5094')
call_5237 = relay.TupleGetItem(func_5092_call(), 0)
call_5238 = relay.TupleGetItem(func_5094_call(), 0)
output = call_5237
output2 = call_5238
func_5240 = relay.Function([], output)
mod['func_5240'] = func_5240
mod = relay.transform.InferType()(mod)
output = func_5240()
func_5241 = relay.Function([], output)
mutated_mod['func_5241'] = func_5241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5240_call = mod.get_global_var('func_5240')
func_5241_call = mutated_mod.get_global_var('func_5241')
call_5295 = func_5240_call()
call_5296 = func_5240_call()
output = relay.Tuple([call_5295,])
output2 = relay.Tuple([call_5296,])
func_5316 = relay.Function([], output)
mod['func_5316'] = func_5316
mod = relay.transform.InferType()(mod)
mutated_mod['func_5316'] = func_5316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5316_call = mutated_mod.get_global_var('func_5316')
call_5317 = func_5316_call()
output = call_5317
func_5318 = relay.Function([], output)
mutated_mod['func_5318'] = func_5318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5092_call = mod.get_global_var('func_5092')
func_5094_call = mutated_mod.get_global_var('func_5094')
call_5319 = relay.TupleGetItem(func_5092_call(), 0)
call_5320 = relay.TupleGetItem(func_5094_call(), 0)
func_5156_call = mod.get_global_var('func_5156')
func_5157_call = mutated_mod.get_global_var('func_5157')
call_5322 = relay.TupleGetItem(func_5156_call(), 0)
call_5323 = relay.TupleGetItem(func_5157_call(), 0)
func_4432_call = mod.get_global_var('func_4432')
func_4437_call = mutated_mod.get_global_var('func_4437')
var_5343 = relay.var("var_5343", dtype = "float32", shape = (324, 1))#candidate|5343|(324, 1)|var|float32
const_5344 = relay.const([3.541863,6.617636,-1.764906,1.154151,-7.150208,-0.459628,-8.211094,3.653715,8.310367,4.091894,7.976096,-7.668372,-6.044642,-0.141196,1.514228,4.905213,0.808686,-4.247180,-6.988072,-7.216971,-8.530361,8.407837,-4.971225,7.003610,-9.608283,-1.972783,-5.600697,4.196081,-7.189753,3.790774,0.808034,0.743859,9.854184,1.874328,8.439188,-5.803711,-9.833950,-1.326213,6.859670,-5.364318,-7.558904,0.714417,5.919880,-1.560576,-1.161310,-6.367821,-9.608888,-8.572152,9.024009,8.589266,3.332056,-3.040129,2.488466,-5.972598,-4.374493,-4.013880,-3.952365,-5.258231,-5.340003,2.015908,-9.597248,-6.461863,1.499633,-0.762596,-1.676645,-9.377568,1.662765,1.300070,5.593830,8.795354,5.299848,8.718622,7.746360,5.472936,-0.336860,-1.978391,-1.736672,5.566869,6.838172,-2.390926,5.381205,-3.196546,4.223936,4.277951,5.369891,2.304270,-7.384191,-4.869562,-6.307367,2.371268,1.292351,8.453952,-7.477637,6.591110,-3.520791,-6.495670,-5.695790,-2.202535,-5.944011,5.665065,5.147718,-8.217759,7.569355,4.110206,8.957001,-3.880481,7.072696,-4.411067,-1.131080,1.398202,-9.796158,-9.797793,-8.908522,-7.743782,-2.179706,6.168986,-0.630204,4.663389,-0.069828,1.512855,5.483568,-3.797360,0.096629,-0.867018,9.440301,-6.014180,7.449275,-6.222867,-9.157329,7.776912,-8.331446,-1.931619,-3.678485,-1.841677,-4.860625,-0.790860,3.556561,-8.058511,-1.983517,-6.695462,6.179749,0.104671,0.934588,-7.672320,-6.599749,-8.700984,-0.104012,-6.787480,-3.859999,-8.037009,-9.371176,-9.442698,7.339224,9.409978,-7.007097,0.772407,-5.067388,-7.975618,0.386188,0.308287,-1.861968,-2.063281,-3.803068,-4.837639,-6.036261,-6.399318,9.481062,-2.169691,1.286541,-9.621336,-3.520667,4.121355,-3.278799,-4.802436,3.111068,-4.244739,-9.256324,-3.239150,1.089756,7.653053,8.684948,-1.760577,9.435359,-5.265842,-9.428038,-8.596634,-7.290661,-4.764020,5.346580,-3.271463,-5.501882,3.458286,-9.076379,-9.926440,-9.338828,7.103624,1.627795,-3.909152,-3.974030,3.907384,-3.312672,5.794180,-3.471677,6.467498,7.916305,-5.531723,-8.628772,-7.374268,2.107869,-0.409354,-2.609525,-8.581308,-5.136024,-8.652051,2.191318,3.768372,5.166052,-0.045434,-9.996925,-4.099964,-5.645595,-2.336746,-2.560122,6.366267,2.721594,9.259235,1.545689,3.493604,-7.539711,-1.469111,2.334698,4.231543,5.434813,-8.422753,-3.161165,9.405775,4.508906,2.561129,-3.033470,-9.488670,8.283169,5.657327,0.915550,-2.490951,3.100167,7.120004,-4.325260,5.373292,-6.675259,-1.831799,-9.093383,5.411893,2.996420,3.751633,3.510263,1.178189,1.555269,6.352798,9.539565,3.394624,2.193979,3.675330,1.870894,1.365463,3.679860,-7.289817,7.759226,0.696146,1.049770,-9.574271,-9.324031,2.641640,-5.473957,-2.745682,-0.910281,-5.743664,-5.929639,0.181034,7.222825,-3.654772,-6.062724,-8.708912,-5.433371,-1.927551,5.994246,5.841127,-2.968916,2.538452,6.892185,-5.148523,5.081071,3.154635,7.163020,-5.328135,9.807812,6.487191,5.160410,5.925564,0.184828,4.248829,-2.803125,5.592321,3.577584,-2.211615,-3.778024,-7.995583,4.699296,-5.750728,4.271901,9.364041,3.617858,-0.423231,3.408785,-4.925142,-4.997630,9.180619,-8.056535,2.974886,6.203604,0.506391,8.246076,-4.483189,2.419030,6.695595,5.512005,-5.408041,2.144444,2.083486,-0.677907,5.433461,-9.339572,-3.300983,6.199843,-4.058528,5.226791,1.055037,-2.395482,3.488231,-9.715431,-4.107690,-5.189773,-4.576007,2.761125,-1.812152,4.935514,-7.516726,-7.297040,1.110480,6.303431,-9.963348,8.653060,1.897810,2.903680,8.336653,5.758471,1.589883,-0.001148,1.179953,-5.433697,-5.381403,6.427899,3.506654,8.746221,-8.363388,-0.189933,4.853047,-0.332726,9.555625,6.441451,5.672058,-8.903914,-4.908400,-1.491614,0.100652,6.734019,-7.402633,-1.569051,-4.278929,-0.237553,-6.483781,-4.915374,-9.855292,-0.693571,-8.227494,9.229582,-6.055890,7.833851,-2.871588,-3.955449,-3.120976,0.088929,4.387703,-7.187472,9.689943,-5.095025,3.373969,7.880289,4.655158,-3.420112,-7.013977,3.285418,5.781382,1.842541,-8.617041,8.136268,-6.808984,1.134151,0.476274,0.577688,0.162152,-5.347353,-9.177038,-7.227877,-1.333682,-3.322460,-1.997496,1.481758,-7.774917,-5.029083,1.357142,2.600299,-7.175450,2.951598,-8.818376,3.601740,-6.270587,-4.869227,3.966246,-0.524385,7.979172,-0.543322,-4.153150,-6.540294,9.597706,6.362093,-8.844593,-4.535920,9.955066,-2.623332,-7.025439,4.148087,-1.858531,-4.259602,5.187734,4.371273,0.036647,-1.931294,8.361563,-2.251882,3.555580,0.496725,-2.669129,7.704313,9.181378,2.584806,8.291760,-1.247060,-2.884842,9.790401,3.062790,4.767202,1.488753,-7.102742,-1.678468,0.745317,-5.578713,6.490074,-7.771353,0.669558,0.765652,9.472067,0.094649,-3.866949,-2.478844,1.560880,-0.295642,-8.096498,9.355096,-8.946377,7.794964,7.352768,6.922195,-5.176500,7.377191,5.642934,-2.477041,0.647081,8.250638,-7.084251,-2.456362,8.609144,-0.389693,-0.421082,8.111929,0.614677,-8.244752,-0.815076,2.809025,5.807474,-0.249679,9.281107,2.021513,6.935144,-2.605314,3.340276,4.915417,9.881482,-7.286605,6.083681,0.599078,8.291739,-9.751197,3.473286,-7.305275,-9.613540,2.516798,-8.863831,1.529260,7.857465,4.385373,-8.760086,-4.233678,-9.295657,0.357663,-7.723261,-4.391518,-9.623855,3.072301,-8.309262,-2.064610,3.091526,7.384937,-0.885503,2.388211,-2.684452,-4.132345,8.347193,2.675390,-1.595618,-8.885271,0.743689,-3.641556,3.598049,8.212562,1.004976,-6.032688,1.729335,-1.575460,-4.931505,-9.888763,-8.894613,2.623711,3.384889,8.599067,0.492176,-4.592022,-4.436929,-6.330089,-7.847276,-6.585908,4.327567,-5.771060,-3.149237,5.168609,-6.342056,7.970164,-4.187374,2.715788,5.682057,6.084939,-3.490393,9.209472,-1.282752,-7.495232,5.640739,4.678009,4.843116,-6.221632,-5.846642,3.840996,0.428959,-2.981428,0.226618,3.583194,-0.009392,-2.857876,-5.489169,-2.490960,8.013680,4.130441,5.497883,-9.574273,5.053428,-3.025759,-7.374487,-8.230535,-6.701723,7.065371,-7.201332,9.657540,-9.976655,2.456776,8.889016,6.787146,-7.177900,-4.732237,2.914212,2.528302,5.586603,0.622815,8.596467,9.765818,-7.527476,0.012026,0.278751,6.836032,-9.755071,-3.479556,-8.344915,5.297923,-8.703754,-4.980467,-0.873566,-0.718696,2.605069,6.492710,-3.559965,8.362290,6.384511,5.716705], dtype = "float64")#candidate|5344|(630,)|const|float64
const_5345 = relay.const([[7.166121,3.552534,9.831147,-2.700662,9.653867,4.311443,-9.770313,1.300656,6.628232,-6.020682,-3.446614,-4.985814,-6.545489,4.861478,2.127422,0.647039,-7.796190,9.429195,3.758778,-1.491754,-6.375422,-3.882846,-7.100928,-7.137308,9.972721,-5.317025,3.507136,-9.724040,-5.552196,-3.222920,9.506472,6.903015,-1.615264,1.586370,-9.376375,6.561279,-9.971997,-8.719256,9.676912,-9.339124,8.884552,8.384040,0.713389,6.079898,0.242624,-9.410925,6.022947,-2.523314,-8.017910,0.791278,4.881426,-8.965776,6.135572,0.218044,0.551854,0.863933,-2.144971,8.789277,-7.107313,-6.100148,3.875080,-9.141756,-9.565989,-3.753823,3.802971,6.952355,-3.719912,-4.781111,-9.867853,4.859370,9.111733,2.986125,9.050229,-4.048872,4.610326,8.128615,2.307575,0.326889,-8.252863,-9.844569,-9.320887,0.811523,1.475764,-6.257564,2.102064,-6.132816,-6.975324,-7.545979,-4.055994,-1.177472,5.114652,-7.644791,2.152082,-9.163588,-8.522766,5.361887,3.228463,6.756340,-3.090235,-6.340328,1.231192,5.504139,-5.324511,5.228886,-9.928635,-6.049188,5.546863,-8.593023,5.733339,6.241710,2.117164,-9.844952,0.738696,-1.501986,8.243334,2.968223,1.055934,-4.995732,-7.622501,-7.208576,7.258187,4.194404,-3.417973,-8.698921,-8.167582,8.018715],[-8.791646,-1.207974,6.476686,-9.494389,-4.886468,-3.431666,-4.800115,8.970184,-8.443751,6.660285,4.076703,2.390137,-5.718543,3.837655,3.176613,-5.656331,-4.335980,8.371252,0.430549,-1.252676,4.673750,6.499183,1.885469,-7.629058,0.357885,-8.254030,-3.019449,-6.393692,1.764188,-4.325561,-1.894538,-2.105644,6.975276,-0.081602,0.148127,-2.404839,8.337135,-7.891618,2.260789,8.550309,-6.237486,3.442788,9.111563,7.097370,8.452207,3.589808,8.478762,-1.402752,9.985137,5.399945,6.932216,1.755767,-8.996970,3.249865,-5.780493,-8.044019,-7.734426,-9.684745,8.335455,-1.878973,8.903051,-7.049783,-0.283636,2.122059,6.113776,-8.125281,0.828806,-9.200772,-7.566977,2.008340,-2.841546,4.052203,6.758408,-8.917344,-7.523439,9.104578,-5.758320,-8.093163,-0.278751,-9.981786,-0.529784,-3.751166,-2.026408,4.411411,-0.202350,1.757047,-4.433650,-8.508822,-1.802434,-2.601266,6.539687,-1.422785,6.071884,-7.667287,4.071137,-1.757022,-0.531326,6.551365,7.923021,4.602960,6.482491,-0.601034,2.440615,0.262318,6.909471,-7.077513,2.500703,-4.456959,4.863040,-3.673882,9.350470,9.533116,9.107171,-6.391858,4.704893,-6.068187,-4.017441,7.696849,4.313782,-6.179939,-8.587446,-9.643648,9.709407,4.439614,6.962923,4.956286],[-5.724565,-9.348033,7.662357,-1.400718,-3.513355,6.751739,5.877487,4.006061,4.878931,1.106901,-5.444255,2.972953,-0.978161,3.085254,-7.773086,-3.359318,1.613884,-8.190206,7.567716,5.440965,-6.674200,-5.509564,2.737332,-9.653841,2.377478,2.125600,4.975151,-4.154764,7.820060,-6.826216,-8.161127,-3.044170,0.558349,4.357172,8.104821,1.933867,5.749577,1.170636,2.003555,-9.761890,8.037349,-5.199776,-1.880357,-0.728420,-2.314826,-8.689249,4.706711,-9.043245,2.129576,3.220892,3.976437,-6.868878,-7.777214,1.164493,-3.466976,5.299575,8.717519,-9.412686,-2.278786,5.640301,9.361453,3.307368,-2.752647,-7.118130,0.804023,-6.682434,-8.745776,-0.227088,-1.731788,-8.241088,0.647455,-0.037032,1.969062,-9.821463,8.364609,2.937821,4.466160,0.458528,-5.863631,-0.631484,5.690661,-3.987458,4.818466,4.502538,6.979259,-6.595154,2.224398,9.138282,-5.968086,-5.483235,-0.584574,-4.263719,-0.110240,3.027211,1.548877,8.980801,1.499029,-5.266133,-0.546403,-6.393231,5.441780,-3.974768,-1.389557,-1.854995,0.396201,-6.053015,-9.948953,-5.077725,6.137431,4.368574,5.903295,2.068016,9.254585,4.839400,8.301280,3.046431,9.317067,5.877908,4.856800,-0.631980,-8.612334,-8.223303,0.607849,-2.118897,8.477834,-1.045648],[-7.509796,6.883946,3.292502,3.023101,-4.576838,-8.291510,-8.571298,3.987482,1.288673,-1.009744,9.619696,-4.501298,0.707225,0.236700,-9.902329,1.779540,9.517735,-4.341570,-6.902104,-1.119226,-6.965797,-9.588752,-3.541590,7.555856,0.355477,-8.643044,-8.763436,7.625036,1.698830,-0.740984,-7.279858,-6.168455,-6.998282,7.707386,-6.112675,-2.051769,-5.208702,1.909510,-3.231136,-6.139776,-9.827587,-9.159307,2.438411,6.653305,-2.916038,-2.732122,2.603051,5.586351,-5.860084,-6.876241,-9.785275,3.528992,2.337022,2.498281,2.276082,7.316365,-2.485458,9.796763,-0.296452,-8.343701,-3.572660,8.055586,0.942489,-9.270228,4.354130,-0.658004,7.381425,-5.330020,-1.648136,-5.274517,4.326081,-3.037038,-5.925228,8.688662,-4.541901,9.871199,3.673479,-5.079483,4.723766,-2.359628,-1.002943,-2.977935,-8.945253,-1.766383,3.713557,0.056349,6.906999,-7.805264,3.111641,-1.836242,-1.146030,-0.886319,-0.638291,-0.164599,3.308849,0.989725,-0.505738,8.639085,-4.866785,5.200294,1.203866,8.458836,-1.636068,-1.039820,5.849259,7.885749,-2.228848,9.748087,8.821584,6.617058,-3.889929,-4.538227,-9.620603,-1.203969,5.164402,-5.596761,-8.965180,3.477538,-6.305249,-2.105220,-9.913525,7.827891,2.259991,-1.249042,-8.792125,-7.920724],[-3.188221,8.848443,-7.690462,1.368262,-0.866920,-9.232695,8.722912,3.813603,5.423205,-1.162899,-5.406662,1.200719,-4.390238,-6.887359,6.716666,-9.685937,6.530807,-2.605604,4.320600,3.025230,-5.117186,-2.977950,-5.889843,4.506411,1.859385,0.193863,4.692551,1.995193,-8.200271,-2.088294,-8.770085,3.101406,6.345845,-1.764474,-9.041449,-9.517281,2.988984,-4.397680,-9.087828,-6.726626,9.862667,7.110784,-8.581788,2.746615,-0.779266,-5.613552,-6.036609,-3.711904,5.085587,-7.653583,3.661128,-3.209479,0.739699,-1.737743,-9.357141,1.804919,-5.235771,-5.545902,8.437766,-7.656888,-2.611892,8.557855,-0.781338,-3.404502,-7.110142,5.309189,3.771737,-1.875114,8.460497,-8.133691,6.414456,5.937405,8.735174,-5.833114,8.684542,-6.339476,0.081059,-3.382595,-2.497944,-5.461726,5.615217,-0.729073,9.326284,7.126690,9.741183,6.373345,2.463117,-8.520577,-4.826920,-2.291483,9.849085,5.191602,-1.862161,7.033462,-7.051827,7.454258,3.734659,-6.389690,-3.966360,2.795507,-2.651078,4.618966,-5.232663,-1.119561,-7.398722,-8.436699,6.518009,3.454712,-8.969143,-1.751322,-6.312179,-5.999510,0.750262,-9.350504,4.417982,7.687777,-1.790727,2.994803,5.022210,-9.679511,-4.758033,7.548798,-3.683475,4.439621,4.650269,-6.947329],[2.509730,-6.385946,9.757108,1.672353,-8.487777,-9.855924,9.473772,7.384797,2.770712,-3.586994,0.626927,-7.359584,-1.997877,-7.723849,1.871484,2.164640,2.475796,-8.871702,3.709250,7.697309,-3.634765,-9.867568,-9.141953,-1.755227,8.176736,7.234469,1.459146,4.881552,-3.583503,7.204369,-2.655726,-3.986961,-8.525596,-0.364999,-7.738007,-3.101617,-5.207337,-9.296598,-2.358516,-2.335818,-0.411235,-3.818346,2.187196,5.200501,5.465321,-3.767504,-2.837232,-4.353768,3.642014,-5.978496,-9.233174,-4.762226,8.907982,5.949082,-5.877593,-0.587818,-7.347371,-3.706770,-4.087800,5.031302,-3.379724,1.728522,-4.028670,-8.451581,-1.737953,-4.649524,1.453843,7.208679,6.900526,-9.175956,0.735383,-5.523340,-3.231730,6.428775,8.885326,-7.029898,-5.071460,-9.379630,4.974793,-5.843069,5.652204,3.149401,-3.819610,9.231703,5.135301,3.898723,-4.448034,-6.991414,-3.950822,2.825234,-9.194533,5.264699,8.889458,-4.453636,-1.863074,6.318000,6.789133,-4.785452,1.007135,0.837073,-3.819263,0.047697,2.923555,7.955336,-6.993287,8.730626,-1.442408,8.644059,-7.012250,2.195197,4.760337,-4.462715,4.137171,-5.709019,-8.548952,5.404322,-5.503366,-7.894369,4.935708,8.744714,-7.055190,-5.410262,8.223738,3.302936,8.087674,4.985438],[9.028217,8.892758,-7.737251,2.032599,-1.651890,2.644773,-9.364430,-3.519632,1.236944,9.200167,-4.553203,7.570418,4.803070,6.430089,6.484912,5.529785,-6.636151,6.269731,-4.176119,3.705791,0.478917,7.385609,-1.510502,4.258266,6.556635,-7.922784,2.518185,-0.079581,-9.809897,5.032255,-3.181181,-4.634430,-8.900481,8.963469,-3.717011,9.518370,-9.610166,6.844137,-8.015699,-7.604222,2.710561,7.370758,-9.139908,-0.949343,5.178439,-8.685693,-8.729803,-4.601263,-9.610750,-4.090655,-7.415936,5.987387,-8.012074,-3.843666,2.244735,0.317085,3.104035,3.690043,-3.823394,-9.756854,-5.128675,9.640900,9.928565,1.501345,3.651275,-3.606842,3.289136,-5.399817,7.116302,-4.688043,-0.661271,5.010526,-2.489996,8.132267,-4.816847,-9.308251,8.851323,-0.711624,7.585242,-1.271671,0.427488,-9.371722,-9.035580,-3.333462,4.393284,0.461122,-1.652905,5.738631,2.591916,0.098959,-7.551944,-6.393619,2.455348,-1.814777,-0.240244,-8.847965,-8.857251,-2.138753,0.339702,-8.626080,4.988807,-6.015341,-0.220186,-6.437264,8.774637,-8.155450,3.692554,0.989258,4.514945,6.637145,-6.144596,9.332097,0.878559,-9.497290,-9.007232,9.025909,-6.404657,-7.203194,-3.567988,-1.537874,-0.993707,4.556019,-9.235827,3.792949,7.182856,9.819865]], dtype = "float64")#candidate|5345|(7, 126)|const|float64
call_5342 = relay.TupleGetItem(func_4432_call(relay.reshape(var_5343.astype('float32'), [6, 6, 9]), relay.reshape(const_5344.astype('float64'), [630,]), relay.reshape(const_5345.astype('float64'), [882,]), ), 0)
call_5346 = relay.TupleGetItem(func_4437_call(relay.reshape(var_5343.astype('float32'), [6, 6, 9]), relay.reshape(const_5344.astype('float64'), [630,]), relay.reshape(const_5345.astype('float64'), [882,]), ), 0)
func_2520_call = mod.get_global_var('func_2520')
func_2523_call = mutated_mod.get_global_var('func_2523')
var_5356 = relay.var("var_5356", dtype = "float64", shape = (784, 2))#candidate|5356|(784, 2)|var|float64
call_5355 = relay.TupleGetItem(func_2520_call(relay.reshape(var_5356.astype('float64'), [8, 14, 14]), relay.reshape(var_5356.astype('float64'), [8, 14, 14]), ), 1)
call_5357 = relay.TupleGetItem(func_2523_call(relay.reshape(var_5356.astype('float64'), [8, 14, 14]), relay.reshape(var_5356.astype('float64'), [8, 14, 14]), ), 1)
output = relay.Tuple([call_5319,call_5322,call_5342,var_5343,const_5344,const_5345,call_5355,var_5356,])
output2 = relay.Tuple([call_5320,call_5323,call_5346,var_5343,const_5344,const_5345,call_5357,var_5356,])
func_5358 = relay.Function([var_5343,var_5356,], output)
mod['func_5358'] = func_5358
mod = relay.transform.InferType()(mod)
var_5359 = relay.var("var_5359", dtype = "float32", shape = (324, 1))#candidate|5359|(324, 1)|var|float32
var_5360 = relay.var("var_5360", dtype = "float64", shape = (784, 2))#candidate|5360|(784, 2)|var|float64
output = func_5358(var_5359,var_5360,)
func_5361 = relay.Function([var_5359,var_5360,], output)
mutated_mod['func_5361'] = func_5361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5092_call = mod.get_global_var('func_5092')
func_5094_call = mutated_mod.get_global_var('func_5094')
call_5402 = relay.TupleGetItem(func_5092_call(), 0)
call_5403 = relay.TupleGetItem(func_5094_call(), 0)
func_1337_call = mod.get_global_var('func_1337')
func_1340_call = mutated_mod.get_global_var('func_1340')
const_5414 = relay.const([2.395014,-6.989191,-3.473625,9.483613,-3.752674,4.054176,2.807139,-0.043617,2.297061,-1.679744,9.221072,8.592243], dtype = "float64")#candidate|5414|(12,)|const|float64
call_5413 = relay.TupleGetItem(func_1337_call(relay.reshape(const_5414.astype('float64'), [1, 4, 3])), 0)
call_5415 = relay.TupleGetItem(func_1340_call(relay.reshape(const_5414.astype('float64'), [1, 4, 3])), 0)
output = relay.Tuple([call_5402,call_5413,const_5414,])
output2 = relay.Tuple([call_5403,call_5415,const_5414,])
func_5425 = relay.Function([], output)
mod['func_5425'] = func_5425
mod = relay.transform.InferType()(mod)
mutated_mod['func_5425'] = func_5425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5425_call = mutated_mod.get_global_var('func_5425')
call_5426 = func_5425_call()
output = call_5426
func_5427 = relay.Function([], output)
mutated_mod['func_5427'] = func_5427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mod.get_global_var('func_5142')
func_5143_call = mutated_mod.get_global_var('func_5143')
call_5494 = relay.TupleGetItem(func_5142_call(), 1)
call_5495 = relay.TupleGetItem(func_5143_call(), 1)
output = call_5494
output2 = call_5495
func_5502 = relay.Function([], output)
mod['func_5502'] = func_5502
mod = relay.transform.InferType()(mod)
mutated_mod['func_5502'] = func_5502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5502_call = mutated_mod.get_global_var('func_5502')
call_5503 = func_5502_call()
output = call_5503
func_5504 = relay.Function([], output)
mutated_mod['func_5504'] = func_5504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mod.get_global_var('func_5142')
func_5143_call = mutated_mod.get_global_var('func_5143')
call_5505 = relay.TupleGetItem(func_5142_call(), 3)
call_5506 = relay.TupleGetItem(func_5143_call(), 3)
output = relay.Tuple([call_5505,])
output2 = relay.Tuple([call_5506,])
func_5512 = relay.Function([], output)
mod['func_5512'] = func_5512
mod = relay.transform.InferType()(mod)
output = func_5512()
func_5513 = relay.Function([], output)
mutated_mod['func_5513'] = func_5513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mod.get_global_var('func_5142')
func_5143_call = mutated_mod.get_global_var('func_5143')
call_5544 = relay.TupleGetItem(func_5142_call(), 1)
call_5545 = relay.TupleGetItem(func_5143_call(), 1)
func_4240_call = mod.get_global_var('func_4240')
func_4245_call = mutated_mod.get_global_var('func_4245')
var_5549 = relay.var("var_5549", dtype = "uint32", shape = (378,))#candidate|5549|(378,)|var|uint32
const_5550 = relay.const([[3,-7,4,-10,-5,1,-5,5,-9,4,-7,3,-9,-7],[-8,2,-8,4,8,-4,5,10,10,-6,6,3,2,-3],[8,5,-2,-9,3,-2,-5,5,6,10,1,-5,5,-10],[-1,-7,2,-6,8,-7,-7,5,7,-4,3,9,1,3],[-1,4,-6,2,6,6,-3,6,-2,-6,10,10,-5,9],[2,-3,-5,-6,1,-10,-7,-10,9,-4,8,8,9,3],[-6,1,4,-10,2,-9,3,9,-6,-2,-4,6,6,2],[-1,-1,-7,6,6,-8,1,1,-9,-7,7,1,-8,7],[-8,-1,-2,-7,-5,-10,-8,-9,-8,-4,9,1,1,-1],[-9,-2,5,-8,-6,-8,8,1,-8,5,-9,2,-10,-5],[-7,9,3,2,7,-9,-5,-3,6,-8,-4,-2,-4,2],[9,7,4,-1,7,6,-5,6,-1,4,-5,-2,9,-4],[8,7,3,-5,-9,-3,4,-2,-2,9,-9,1,-9,-5],[-6,-9,4,2,-1,-4,5,-9,-5,-8,-9,-2,-3,-6],[-7,9,1,8,8,-3,-8,9,2,-4,9,6,10,10],[-5,4,-7,-5,-2,4,-4,-9,3,10,8,-4,6,8],[-10,-9,-7,6,7,2,6,-9,2,5,-10,3,-6,6],[7,-10,-4,-3,-4,-5,-2,-10,5,-9,1,-4,-8,8],[4,-8,10,9,8,7,2,-5,-10,-3,6,4,7,-8],[-7,-8,2,1,7,10,-1,-9,10,9,9,-7,-5,4],[-2,-6,-1,-7,2,7,-9,7,5,-5,8,-6,-6,-1],[7,1,-8,-6,3,1,3,-7,8,-2,-7,-7,1,-1],[-8,5,10,5,-5,8,-6,3,9,-4,1,-10,-5,5],[-2,-10,-3,-10,-5,2,5,7,-8,-3,-2,6,2,-4],[-4,-10,7,1,-9,2,3,3,3,1,4,-10,8,-2],[3,7,6,6,-9,5,7,1,3,-9,-8,10,4,-8],[8,-5,7,8,9,-9,2,-8,3,-10,7,-5,-2,7],[-4,10,-9,3,-5,1,9,-4,-6,-2,4,-7,3,-6],[-6,-5,-9,2,-10,-4,-8,-10,-5,-7,-7,-1,-3,1],[-2,-5,9,-9,-4,6,8,8,-5,4,-3,2,-10,-2],[-5,10,-10,-6,-2,-9,7,-8,-7,2,7,1,-7,-1],[-10,-9,-7,-10,4,8,-10,10,-4,2,-9,3,-10,-5],[9,-3,2,-2,3,-6,10,10,-2,-9,3,8,-8,5],[5,-3,9,-5,-10,-7,-1,-7,-8,-10,9,7,-1,-1],[5,-6,-9,7,7,-8,9,9,10,-10,4,9,1,5],[-2,-2,-4,9,7,3,10,-10,-7,-10,6,-5,1,-4],[-1,-6,-5,10,-7,5,7,-10,9,3,-1,-3,2,-7],[-2,-9,10,-6,4,-6,-4,-8,1,5,10,-6,-2,9],[-6,1,7,-3,-5,-2,4,1,9,9,7,-9,-6,7],[-1,4,-3,7,4,7,-8,10,4,-2,-1,2,6,5]], dtype = "int64")#candidate|5550|(40, 14)|const|int64
call_5548 = relay.TupleGetItem(func_4240_call(relay.reshape(var_5549.astype('uint32'), [9, 6, 7]), relay.reshape(var_5549.astype('uint32'), [9, 6, 7]), relay.reshape(const_5550.astype('int64'), [560,]), ), 5)
call_5551 = relay.TupleGetItem(func_4245_call(relay.reshape(var_5549.astype('uint32'), [9, 6, 7]), relay.reshape(var_5549.astype('uint32'), [9, 6, 7]), relay.reshape(const_5550.astype('int64'), [560,]), ), 5)
bop_5555 = relay.floor_mod(const_5550.astype('float32'), relay.reshape(call_5548.astype('float32'), relay.shape_of(const_5550))) # shape=(40, 14)
bop_5558 = relay.floor_mod(const_5550.astype('float32'), relay.reshape(call_5551.astype('float32'), relay.shape_of(const_5550))) # shape=(40, 14)
func_273_call = mod.get_global_var('func_273')
func_276_call = mutated_mod.get_global_var('func_276')
var_5577 = relay.var("var_5577", dtype = "float32", shape = (5, 198))#candidate|5577|(5, 198)|var|float32
call_5576 = func_273_call(relay.reshape(var_5577.astype('float32'), [10, 11, 9]))
call_5578 = func_273_call(relay.reshape(var_5577.astype('float32'), [10, 11, 9]))
func_5092_call = mod.get_global_var('func_5092')
func_5094_call = mutated_mod.get_global_var('func_5094')
call_5579 = relay.TupleGetItem(func_5092_call(), 0)
call_5580 = relay.TupleGetItem(func_5094_call(), 0)
func_5066_call = mod.get_global_var('func_5066')
func_5068_call = mutated_mod.get_global_var('func_5068')
const_5588 = relay.const([[-7.309530],[6.302054],[-0.772838],[7.811268],[-3.272685],[-8.432165],[6.255377],[6.400689],[-4.386046],[-7.592794],[-5.441605],[-0.155555],[-3.740652],[5.795282],[6.985251],[5.655514],[-6.770684],[-9.508000],[5.710151],[-6.163663],[0.867470],[-2.247305],[-8.770044],[0.935325],[5.770860],[-6.603696],[8.106674],[2.861836],[-0.739200],[8.882714],[-4.982895],[-8.997406],[1.967751],[7.203801],[-1.627513],[-8.320997],[-2.857412],[-9.884567],[6.887230],[-7.391037],[5.560282],[-8.273023],[8.749222],[-5.350915],[8.951137],[3.008470],[2.871869],[-9.066395],[-6.255280],[4.994342],[3.831203],[-5.685101],[-1.426747],[6.722572],[9.921347],[-5.913989],[-4.978162],[1.929373],[-7.449618],[8.306767],[6.691702],[5.311614],[-1.337036],[-0.709732],[5.546419],[-1.033700],[0.299529],[0.389081],[5.006248],[8.904360],[-7.195523],[-1.522445],[5.381297],[-4.108559],[1.348061],[1.037140],[-2.321495],[5.093635],[-1.854878],[6.462096],[-9.967994],[6.089874],[-9.872700],[9.610412],[4.256738],[-9.450746],[2.582569],[-7.770838],[7.297425],[-3.186857],[-3.268307],[7.407310],[3.407865],[-2.565140],[-3.304275],[6.896061],[2.459590],[9.296315],[2.059287],[7.870031],[0.621700],[-9.578324],[-5.585888],[9.218509],[1.345523],[2.814015],[1.765731],[-0.806368],[7.347981],[8.949636],[-3.023946],[-7.284394],[1.681969],[-5.891773],[3.916999],[8.762092],[7.926948],[0.885348],[-4.011106],[8.643394],[-4.884921],[1.636074],[-6.763263],[-9.665202],[-3.324671],[2.399652],[8.348234],[-0.909172],[0.936766],[6.298558],[4.060996],[-3.701173],[0.507019],[-0.643394],[-9.748865],[8.461843],[-2.328667],[2.889357],[3.419968],[4.066292],[6.893375],[-3.785170],[-7.929417],[5.979391],[3.606498],[-8.410754],[6.269148],[-0.736980],[-7.531454],[-7.466732],[-7.658666],[-8.637984],[-4.848265],[3.819872],[2.797838],[-0.987364],[-2.426116],[3.097658],[3.108252],[-0.374421],[-6.825794],[1.897810],[6.356186],[-4.032540],[9.902529],[0.757524],[-3.262557],[-6.697753],[0.507343],[-1.352858],[-9.898616],[3.167664],[-4.090877],[-5.733150],[0.500778],[-3.060787],[8.354879],[8.836556],[7.615237],[3.907337],[-9.626639],[6.189791],[-5.813585],[8.490539],[1.779700],[-3.519253],[-2.311332],[-6.240520],[4.828097],[3.587922],[-6.749137],[-1.741181],[3.351844],[-9.397857],[7.160699],[9.623503]], dtype = "float32")#candidate|5588|(196, 1)|const|float32
call_5587 = relay.TupleGetItem(func_5066_call(relay.reshape(const_5588.astype('float32'), [7, 7, 4])), 0)
call_5589 = relay.TupleGetItem(func_5068_call(relay.reshape(const_5588.astype('float32'), [7, 7, 4])), 0)
output = relay.Tuple([call_5544,var_5549,bop_5555,call_5576,var_5577,call_5579,call_5587,const_5588,])
output2 = relay.Tuple([call_5545,var_5549,bop_5558,call_5578,var_5577,call_5580,call_5589,const_5588,])
func_5598 = relay.Function([var_5549,var_5577,], output)
mod['func_5598'] = func_5598
mod = relay.transform.InferType()(mod)
mutated_mod['func_5598'] = func_5598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5598_call = mutated_mod.get_global_var('func_5598')
var_5600 = relay.var("var_5600", dtype = "uint32", shape = (378,))#candidate|5600|(378,)|var|uint32
var_5601 = relay.var("var_5601", dtype = "float32", shape = (5, 198))#candidate|5601|(5, 198)|var|float32
call_5599 = func_5598_call(var_5600,var_5601,)
output = call_5599
func_5602 = relay.Function([var_5600,var_5601,], output)
mutated_mod['func_5602'] = func_5602
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5638 = relay.var("var_5638", dtype = "bool", shape = (5, 9, 11))#candidate|5638|(5, 9, 11)|var|bool
var_5639 = relay.var("var_5639", dtype = "bool", shape = (5, 9, 11))#candidate|5639|(5, 9, 11)|var|bool
bop_5640 = relay.logical_or(var_5638.astype('bool'), relay.reshape(var_5639.astype('bool'), relay.shape_of(var_5638))) # shape=(5, 9, 11)
uop_5650 = relay.sqrt(var_5639.astype('float32')) # shape=(5, 9, 11)
output = relay.Tuple([bop_5640,uop_5650,])
output2 = relay.Tuple([bop_5640,uop_5650,])
func_5664 = relay.Function([var_5638,var_5639,], output)
mod['func_5664'] = func_5664
mod = relay.transform.InferType()(mod)
var_5665 = relay.var("var_5665", dtype = "bool", shape = (5, 9, 11))#candidate|5665|(5, 9, 11)|var|bool
var_5666 = relay.var("var_5666", dtype = "bool", shape = (5, 9, 11))#candidate|5666|(5, 9, 11)|var|bool
output = func_5664(var_5665,var_5666,)
func_5667 = relay.Function([var_5665,var_5666,], output)
mutated_mod['func_5667'] = func_5667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5240_call = mod.get_global_var('func_5240')
func_5241_call = mutated_mod.get_global_var('func_5241')
call_5709 = func_5240_call()
call_5710 = func_5240_call()
func_5156_call = mod.get_global_var('func_5156')
func_5157_call = mutated_mod.get_global_var('func_5157')
call_5711 = relay.TupleGetItem(func_5156_call(), 0)
call_5712 = relay.TupleGetItem(func_5157_call(), 0)
uop_5719 = relay.sin(call_5709.astype('float64')) # shape=(3, 11, 11)
uop_5721 = relay.sin(call_5710.astype('float64')) # shape=(3, 11, 11)
func_5142_call = mod.get_global_var('func_5142')
func_5143_call = mutated_mod.get_global_var('func_5143')
call_5722 = relay.TupleGetItem(func_5142_call(), 3)
call_5723 = relay.TupleGetItem(func_5143_call(), 3)
output = relay.Tuple([call_5711,uop_5719,call_5722,])
output2 = relay.Tuple([call_5712,uop_5721,call_5723,])
func_5729 = relay.Function([], output)
mod['func_5729'] = func_5729
mod = relay.transform.InferType()(mod)
output = func_5729()
func_5730 = relay.Function([], output)
mutated_mod['func_5730'] = func_5730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5502_call = mod.get_global_var('func_5502')
func_5504_call = mutated_mod.get_global_var('func_5504')
call_5739 = func_5502_call()
call_5740 = func_5502_call()
var_5742 = relay.var("var_5742", dtype = "float32", shape = (14, 16, 15))#candidate|5742|(14, 16, 15)|var|float32
bop_5743 = relay.minimum(call_5739.astype('uint64'), var_5742.astype('uint64')) # shape=(14, 16, 15)
bop_5746 = relay.minimum(call_5740.astype('uint64'), var_5742.astype('uint64')) # shape=(14, 16, 15)
func_4679_call = mod.get_global_var('func_4679')
func_4686_call = mutated_mod.get_global_var('func_4686')
const_5750 = relay.const([7.249726,-0.308290,-9.533240,-3.318750,-0.694042,5.450323,-7.665196,-7.216113,6.157188,4.642421,-7.062613,3.504537,-7.956729,9.616635,-1.602807,-8.834191,-0.162309,-6.499735,-9.372309,-2.035086,-5.315540,3.005199,6.225881,-0.677654,-1.866412,9.487755,-4.723432,7.442543,-7.056877,-6.661232,8.007034,-8.794535,8.313234,-5.639106,-8.164046,-2.998509,7.547428,6.302039,4.122057,4.447105,1.794571,0.077798,5.197764,7.031359,3.108292,6.015074,-8.778565,-0.898551,-7.445299,7.015895,8.182486,7.834933,6.116349,8.448632,-2.193754,4.701207,-0.407788,4.319514,6.979026,1.426551,-9.144507,7.349291,2.619849,-5.663742,-1.874135,-5.130847,-7.168207,-8.104149,-8.533694,-0.861474,-3.195137,3.069490,-2.049708,9.005761,9.304425,-8.002334,1.378459,-5.045685,4.335609,-4.706593,-3.400328,-2.571957,-4.256073,-9.948306,-9.169019,-3.929619,-5.675524,2.889523,-1.217732,-6.932998,-6.476569,-1.859008,-9.488044,-8.871873,7.982436,-4.217376,6.949288,-5.409913,1.985782,-4.807166,-6.338577,2.049858,-7.854157,0.574583,5.511022,-0.692579,0.894556,4.607513,7.779648,9.034279,-4.168467,-9.467179,-8.057087,7.783379,-5.927300,-2.123136,-4.243312,9.660017,-9.570423,-7.007110,5.304047,0.036309,5.141883,-2.491746,-1.573038,0.089763,2.023368,-2.664314,9.246406,-7.197712,-3.056998,-8.917668,-4.793621,5.958637,-7.115682,-6.431540,5.046133,-8.544802,-0.173795,8.206128,7.037255,6.576754,6.505488,-6.472492,9.893235,-0.921964,6.139030,0.242518,-7.460880,1.849577,-6.476007,-0.939986,7.293600,-7.870600,-9.314044,8.575728,-2.478235,-5.786912,-4.148243,-0.002044,5.925317,6.330070,5.437994,-5.685962,-8.126837,7.769346,0.587935,-9.953440,-2.653657,-3.877819,-9.812316,-4.702986,-8.688340,-1.968829,-4.031052,5.372333,4.684902,-8.109979,9.370256,9.998460,-8.017954,-1.756705,-0.143140,1.227951,8.593415,9.092876,8.369317,-1.423028,1.693481,-7.654185,-3.835537,9.609122,0.724577,-8.078345,8.031527,-4.617513,-9.667269,0.184704,3.300560,-8.248578,0.213258,-3.963212,6.505456,-5.976243,-9.030132,-4.818754,-8.742120,-6.571854,-8.244578,-8.418394,-4.902898,2.539632,7.579346,-3.473987,1.611282,3.691597,-6.814062,4.793428,3.833095,-0.833971,2.154946,-1.803404,6.487181,6.137787,3.146062,9.803079,-3.973306,8.064211,6.646055,-4.541345,-1.484777,4.675228,9.779241,-6.305621,1.644095,-3.308566,-3.456179,-2.081696,-2.923271,6.492957,-9.450687,5.562204,2.274335,-8.193303,-5.588435,-5.976062,0.114777,-1.718297,-4.530294,7.169868,6.191457,-6.948406,-4.485374,9.551558,-6.286433,-0.069853,5.056029,9.961158,-1.096507,-0.497501,-9.100364,2.981406,-6.739759,6.460357,3.831830,-1.886302,-4.363832,-8.883342,-0.416704,2.012915,-3.433254,0.833265,-7.296427,-3.726729,-6.563355,8.341211,5.153152,-3.230225,-4.832725,1.252833,-0.543232,5.345029,-5.865859,3.100816,4.445382,-1.670494,1.391964,-2.052700,-0.441526,-3.109304,2.150321,-3.751685,4.103790,-7.288771,-2.818306,3.086395,-6.142628,6.499322,-2.443251,1.645549,-6.712319,8.926528,3.276211,9.827469,-8.677606,-3.295147,3.168865,5.465357,-2.387644,5.910956,3.048165,4.168270,9.739273,-7.686273,-1.369971,8.166392,7.880895,-3.743968,-7.095714,2.820217,3.414876,-5.540085,-8.293043,8.672126,-7.768009,2.512343,9.678662,4.687305,1.237409,-6.574409,5.678551,-7.227904,-2.695725,5.237469,-4.621343,-5.158744,-1.081544,5.807981,-9.393809,0.098372,6.612932,-9.330705,-8.569831,6.876281,4.332457,3.389689,8.403241,-7.544401,-2.768563,1.948446,-1.163548,-4.840518,-3.983271,5.835054,6.222768,1.182720,7.880837,7.838677,5.138979,7.647500,0.203873,7.802373,6.829877,-0.161363,9.761322,-2.751148,4.992964,8.539602,-9.273230,-5.478009,2.617568,-5.059954,2.819716,-9.234162,-5.098784,-9.451123,-2.703817,3.582161,3.662869,1.462725,9.936465,-9.551104,4.686046,-6.931228,-5.607179,8.322110,0.591809,-4.534076,1.553407,4.274017,-4.396659,2.041185,-3.001466,-9.252362,5.255044,-8.366877,-5.182522,8.432350,-0.408584,6.863635,3.634649,7.954550,9.355573,0.592738,-5.827841,-8.500089,-5.218023,-0.299472,-7.926782,-3.218850,-0.184599,-8.726871,2.365165,-4.001698,-2.093416,-6.646360,-8.625090,-8.795540,6.732754,7.635742,-3.403032,9.001348,1.335753,9.355937,-2.157184,0.620325,8.449990,9.448250,-7.036839,-4.832336,-3.966232,-5.399300,-6.969277,-8.037627,-9.215749,-1.769474,7.939740,-0.659881,1.854608,2.717651,3.748271,-9.663678,-6.312691,-1.159758,-5.387039,1.143573,1.154914,1.711604,-1.852668,-0.145711,1.183102,-4.950512,-6.780676,-1.683556,-2.601330,7.039041,-6.219699,-9.267870,-2.572780,5.105636,-5.687869,5.060306,-3.121091,8.761143,-2.306812,-0.279383,-7.454618,-5.949762,3.431494,-4.849292,-8.275773,4.091614,-6.561290,-6.948778,-7.831595,0.113560,-6.130703,8.925659,6.144152,-7.582980,-3.132735,-6.400544,5.772732,9.147478,3.629608,-8.963665,5.931086,-9.942499,-3.123257,-6.969216,2.667439,7.250465,-6.309241,-9.420630,8.253779,7.064790,3.404498,8.115697,4.063270,4.296626,-3.910628,-0.036630,-0.337547,4.597544,9.728879,0.277932,3.700950,1.416999,6.589674,-2.623071,-5.977761,-5.564048,0.007537,-0.535344,-2.031312,0.088932,3.621618,8.640755,-4.795089,-7.787533,-6.911832,-0.028228,-3.853013,-5.692334,-3.893173,2.415820,-5.204728,-1.369256,2.731916,-2.092951,7.668281,-0.867283,-8.480527,-7.902384,6.492569,-6.563007,-8.422498,4.578607,-4.619229,7.248309,-8.142713,5.200765,-3.814024,-2.712041,-9.661199,-4.424013,-9.247962,3.301062,-4.559259,-6.373065,-8.429375,7.619810,6.846316,-3.136044,-0.644285,-4.853886,-5.674664,-1.378403,-9.319370,-9.363112,2.122113,-1.612836,8.216079,-9.857181,3.070824,8.102824,-7.283321,-3.872590,-3.075827,1.196455,-0.744411,1.224042,-3.223250,-5.321758,3.637940,5.523141,9.596737,-8.607818,9.813085,-9.761636,6.508642,3.229761,-8.008330,-4.940321,-0.218523,-2.866312,0.477362,5.787090,8.527464,-4.259925,-4.445184,5.493970,2.762407,-3.047561,2.855218,2.172240,9.491893,-4.074619,0.816372,-6.349612,-2.910140,-1.501611,-2.745599,5.506947,1.896743,-1.416035,-7.742111,2.957195,-9.380495,-6.289039,-2.233658,-6.169078,-5.253150,-7.413813,9.916632,9.579679,5.405854,-6.629939,9.935404,9.212303,3.000786,-9.534016,7.584396,-3.808768,-4.766931,3.946887,-8.216842,-9.403527,-6.615846,-4.217884,3.623572,-5.041568,-6.193055,-0.256707,-0.429154,-7.433716,-7.220389,1.071840,1.125107,9.256582,2.463118,-7.278121,-3.625865,-6.329040,6.238227,5.921412,8.169371,3.889769,-9.702038,0.390215,3.822801,-5.732258,5.000494,-4.224623,4.360409,-3.742028,-9.440452,5.967656,8.614008,-3.847106,-5.442199,2.723017,3.956075,3.189837,-4.791236,-1.789727,0.562176,6.694198,3.817019,9.183220,7.138052,7.261638,-6.072573,1.017775,-9.144378,8.202097,5.455846,-5.406718,3.644015,-0.732048,4.746199,-2.898005,6.445675,3.439916,3.630017,-0.070286,-1.333347,-1.188652,-1.409736,-6.030107,7.661592,2.247970,-9.857038,2.976753,-4.988138,0.734878,6.984979,-5.007981,-6.588075,2.422206,-8.225518,-3.915978,7.630597,9.967064,-5.058510,-8.862296,8.516237,-0.699976,-2.387998,-7.391157,5.583581,-4.385635,1.530360,-6.923748,-4.088130,9.654097,2.142556,8.691946,-0.180632,-4.702216,-6.406157,5.811870,-5.586294,5.014045,7.251377,0.656677,4.914249,9.256694,-3.238876,-2.957641,2.352617,0.714798,-2.224582,3.901039,-0.882245,2.016466,0.864649,-0.224564,1.364571,-7.292025,4.528173,3.840069,3.393390,3.581120,-2.807197,-0.508291,6.252376,-4.878029,-5.917312,8.338130,0.450596,4.528187,5.330124,5.697378,0.591444,7.296366,3.933363,0.570263,-2.652786,8.152923,6.067109,-4.271488,9.628069,-3.353898,6.913984,-5.357735,-2.679328,9.017435,-1.578605,-2.145407,-5.598736,-3.977857,2.331225,-4.311468,2.610660,-2.971876,4.150474,3.886237,-3.405761,-1.145223,8.651685,-3.848085,-1.545705,5.161971,-5.976159,-7.559400,-2.102317,4.784842,-0.106353,9.957625,0.702047,-6.527201,-9.540390,3.131367,5.665773,-4.531579,6.347461,8.966670,-5.737140,-3.556475,-4.172317,5.327745,1.510517,-0.042377,-0.729318,3.612525,-2.866033,-5.291242,-4.960452,9.420763,1.645848,-2.982846,-6.618036,-3.064297,2.092521,-0.253543,2.402396,-5.807816,-1.384775,2.714415,-9.685076,-6.388953,-1.943923,3.985607,-7.414938,2.215338,2.749178,-3.112971,7.236804,-5.185406,3.057981,-3.012866,8.432935,-3.923643,-6.735216,-2.542351,-4.812461,5.288695,-5.230097,7.105901,0.729272,-0.286259,2.925214,-1.167554,-3.319668,5.692965,7.616694,-9.747392,-0.312327,-9.338544,-1.138539,4.161021,8.722198,-2.140459,4.592147,2.420772,-7.217023,5.060234,-0.940050,-4.277683,1.110262,5.823947,0.342425,9.944530,-4.269724,-6.750677,-6.123951,7.123883,-9.521889,2.711974,-8.768749,-1.161719,2.132162,-1.413364,-9.524065,-5.732422,-6.567133,-8.773882,2.853634,7.898743,-1.300314,6.344586,5.514026,-5.756632,-1.497005,2.990921,-1.144949,7.089547,-9.864235,-2.859864,-0.400877,-9.099075,-3.677195,-2.037741,-7.588407,5.430967,-6.635172,5.470161,4.456078,3.939704,-3.801502,-6.505116,7.367886,-2.603455,9.780580,-3.926692,4.869536,-3.733845,6.253782,5.609111,-8.232514,-3.748041,9.379232,-8.106718,-4.190789,-6.739223,8.763092,8.382350,-1.380040,-1.678097,-1.636364,0.843321,9.663342,1.013607,1.854602,-8.775991,2.098189,-3.445590,-7.941259,-1.410471,-6.396293,8.617725,4.731087,-7.781683,-5.231297,-0.560899,0.920676,-1.859051,8.930490,-7.557693,7.679398,6.767744,7.821591,8.802221,-8.363157,-2.203795,7.936587,-5.481021,0.880462,-2.667403,7.536505,-7.667584,2.280840,1.364068,8.888983,6.299282,-6.174158,6.698219,-1.347616,-7.149307,-2.372200,1.258274,-5.805608,2.293807,6.983672,-9.866616,-2.823211,3.993388,5.605635,-9.017717,-3.879569,4.964394,-0.996467,6.277865,-4.305240,-3.085192,-9.665456,-7.657060,8.951765,-5.988465,2.431038,-7.917243,-5.217393,6.030926,-6.465187,-2.353715,5.607626,-7.869429,-6.326194,-4.644360,0.133306,-0.284593,0.800383,-5.491947,-2.781636,6.924580,9.421966,0.265909,4.485169,-1.418713,-2.629009,4.696435,-0.820112,-2.580130,5.931481,9.098324,0.695951,-1.455090,-2.310632,2.988786,-2.873765,6.866857,-4.620332,8.292116,5.880222,-2.582860,-3.981454,-3.799438,3.754270,3.932108,8.714123,6.476575,-2.250697,0.936654,-0.444410,0.059003,7.322044,9.137709,6.844858,-8.280952,-7.208702,7.173373,-6.271349,1.953145,-8.668903,-5.842570,-7.660906,-8.371727,0.864310,4.945827,-5.636583,-5.961880,1.376314,-1.235412,-4.064158,-2.736241,6.980811,3.619034,1.490632,1.917852,-3.662990,2.655414,8.607038,4.243394,-1.872920,-0.424909,-2.767735,-9.653848,-4.520020,-8.262191,1.434828,5.936007,-0.536943,-4.206240,-9.856397,6.889883,4.197995,9.383562,-2.183135,-1.600141,8.874516,-1.954600,8.214872,-5.181712,9.483830,8.713982,0.677393,3.485054,5.439869,5.661426,9.449738,-8.126398,0.388819,9.231800,0.415975,-1.624968,-6.797172,-5.851658,-8.251871,-1.076363,7.190187,-3.317431,-2.755339,9.405562,-7.578051,6.350495,1.466811,-8.074826,9.711837,4.939768,5.778380,-4.608649,-3.325049,-1.900722,1.211398,-0.531356,-3.609468,7.439173,-5.424541,-0.407792,9.806784,-2.567320,-2.758145,8.036353,-2.160290,-2.660383,2.398771,7.966908,1.977905,-5.523471,-3.316579,7.081249,4.654578,-3.729211,8.280844,-9.102454,-4.734176,-4.979811,-2.038661,0.598386,-0.604376,-7.586034,-1.060737,5.796777,0.990654,-8.445976,-9.340914,-3.225488,-0.664737,6.313351,-8.867751,-0.732113,-1.532515,8.211384,-2.009681,8.904665,-2.200054,-7.561931,0.431181,-0.095713,3.843860,4.987849,-6.085026,-8.752323,-5.891625,0.014579,2.426794,0.637621,-6.034095,-5.717577,8.363251,0.353856,-6.857696,-5.352747,0.838119,-7.116801,4.020214,-4.622897,-1.378539,-6.302619,-1.620139,2.097151,8.493847,4.500525,0.094389,0.477312,7.202353,-1.533848,-3.366343,4.328674,9.134613,3.630600,4.105997,-5.537945,-2.186308,-6.682278,-1.993448,-8.780930,3.471371,4.665694,-4.463594,9.632227,8.706181,2.855212,6.019013,6.690433,-0.236164,4.399265,-5.796881,9.666531,2.451851,1.548403,5.413939,0.241565,5.948918,6.453727,0.881053,3.620890,-3.459682,7.537596,-3.125927,-2.566041,7.062529,-1.819629,-2.935170,-2.024659,-8.163655,4.601413,9.126557,-1.856011,-3.252422,-6.496240,-9.248985,-8.753756,-9.649651,-9.041176,6.149200,-7.147375,2.764361,-6.514830,-4.849299,2.098530,6.802791,1.340485,7.632890,3.921548,4.323302,-6.888704,-7.088572,4.757179,-0.311535,7.080262,-5.520533,-9.992231,-6.416524,1.739335,2.278244,7.582384,-7.728182,2.910454,-2.426145,5.826720,5.297846,-5.868522,-5.429675,-9.521468,4.285055,-9.818983,3.377370,2.520923,-0.936043,5.530997,1.835236,-1.628928,2.782582,-9.044355,-6.057632,9.926579,9.634296,5.284251,2.363430,-4.155911,8.509738,7.509284,6.104745,2.305626,3.414243,2.181722,8.273100,-2.213588,2.186528,3.760971,-1.837227,0.293412,-1.493580,-1.308818,4.577478,-5.817517,9.343999,4.540478,3.651687,-0.059714,3.006314,1.452653,7.553811,4.936618,-9.621906,6.832843,-0.188236,-3.027602,5.535775,-9.125027,3.620931,-9.507674,-9.510917,5.472681,-9.697740,7.309550,4.095107,-5.522793,-4.275160,-4.477126,-5.468518,-1.502580,-7.207306,4.567958,5.927217,-7.616860,0.917043,8.973595,3.523567,0.967709,5.383515,0.485983,5.865698,7.571054,-4.012248,4.296978,3.228312,0.957564,-8.782363,-1.045691,-7.038877,0.666497,8.535119,-2.280406,8.262185,-6.194321,-9.311268,-9.366094,8.625593,4.427368,3.409020,1.783176,-4.564794,-6.716134,6.171182,-7.282087,-7.739427,8.942554,6.343404,-8.944316,1.533926,0.193549,-2.789616,-0.996136,3.304814,5.189040,-8.154913,-3.252249,4.353680,5.342478,0.159667,7.394871,2.050765,6.195145,-2.781762,-6.791280,-7.543907,1.510211,4.131840,-4.672233,2.782063,1.844144,-8.543324,2.042994,-1.404194,7.840349,-1.411139,7.360391,5.142062,-9.634217,-6.086416,-2.878622,-9.562462,-5.236950,1.120436,6.974807,-1.166628,-4.368866,-7.871144,2.553665,-5.082736,-8.237207,8.084683,7.579116,-0.526115,-8.978927,-8.371352,7.818786,-9.612867,-4.898580,-5.288109,-8.819574,-7.394976,-9.725996,-2.975638,5.151629,-5.763781,-9.623130,-6.678483,-7.939941,9.824873,7.140093,6.446448,9.598770,-6.584864,1.793326,5.698517,-3.545870,-5.192988,-8.108801,-8.561044,-7.275848,2.951242,-4.701251,-1.546146,-2.480125,5.947656,0.128801,-7.436684,-6.871678,-2.338091,9.719129,7.809194,3.710573,-5.808672,3.249199,8.111708,6.873603,-2.683885,-9.152285,9.445791,-5.182819,8.714365,6.189346,-2.702706,-9.917002,-1.572691,-0.638376,3.126593,6.045214,3.895427,-1.551116,-0.451792,0.175914,1.328871,0.272180,-2.924573,7.287919,7.627356,3.532824,-5.398401,-6.563160,-2.866340,8.546004,-1.331806,2.040291,0.150279,4.811553,-6.392690,-1.073881,-0.864686,-2.139733,3.583496,-9.172500,-4.363213,1.462859,-6.607147,6.831768,-1.019215,-8.269524,-2.582059,1.837271,-5.885262,7.847050,3.865796,-2.456321,-1.620935,4.646591,9.532734,-5.191008,0.755449,-0.358656,-4.329566,-6.600744,-5.936917,0.597467,2.907958,-1.448915,9.510498,-1.482426,4.342558,6.473452,1.568857,-7.115031,-4.510087,-7.603630,-4.840113,4.536135,3.139523,8.307623,4.775865,-3.123893,3.949759,-0.765633,-7.305713,-2.295239,6.178279,5.510378,-1.480223,6.510557,9.066263,-2.597980,9.450408,-6.832219,-4.936622,-1.745838,-0.698259,-7.502096,-6.302707,2.337399,5.180545,-6.957202,2.175268,6.359490,3.603665,-3.884267,-6.663009,-2.403107,1.744772,-4.362992,6.235128,5.418976,6.678089,7.000170,-2.784643,3.691640,-2.444562,-4.484339,9.188210,1.244140,3.471791,9.130594,3.211020,5.105309,-8.572833,-2.010609,-4.996816,-9.784023,8.142421,6.392994,-3.156638,2.068633,0.253910,-3.174793,4.927271,2.855565,7.023866,-2.234949,6.561541,8.115421,-6.934473,6.630509,1.489781,-9.009260,7.228294,-1.993649,-6.586770,1.529891,-5.449086,4.497987,1.051175,-8.266066,1.622716,2.820369,-6.761554,2.766429,-4.413846,8.810201,-9.293397,-1.827188,-6.670125,3.965246,-7.096558,-6.858593,-9.320706,-9.598113,-3.717275,-7.204469,-1.564322,-5.958431,8.906984,3.650464,-1.372498,1.248409,-2.490068,0.342047,9.923660,-0.830127,4.681053,-0.661132,-7.237379,0.819335,3.309333,-6.597534,-8.890874,-6.420566,-5.162163,3.217653,-7.119119,5.564845,8.524311,4.529213,3.922960,-9.957498,-1.426729,-5.973017,-5.153057,-3.997016,-5.925705,2.899056,9.808814,-5.363811,8.211547,8.462009,-0.948339,-0.431567,1.440303,-7.233593,3.931653,0.419056,0.712628,-6.781480,3.116077,7.947606,-3.028416,-2.915676,-2.610790,8.778543,9.117992,-1.611270,-3.178047,4.928726,-9.151114,-3.578892,-9.982390,-4.910995,-9.175077,1.238246,9.997921,2.494038,0.891460,5.993587,-3.896724,6.309328,7.501029,8.212749,1.700613,6.672573,2.419133,1.407029,3.629640,5.802860,6.707154,-0.419354,-2.436151,-9.786070,2.583203,1.574057,-2.256784,1.873097,-2.730968,5.438978,5.119169,-3.913468,8.688863,1.246128,2.511245,-1.217100,8.014113,7.757960,-1.766502,-8.431920,4.403360,4.840966,-7.550670,-2.563805,4.761793,-0.239795,-3.606170,4.926166,5.847231,6.010270,-6.085398,1.887529,-2.980430,1.345827,-4.010528,-9.000555,5.338072,1.729161,8.781663,5.370353,-8.794144,5.979540,-2.824462,-0.050371,2.292704,-4.776885,4.497553,-1.279230,-9.469631,-8.096906,2.067041,-8.499183,-8.738671,-4.108865,6.622263,-1.371759,-2.900643,5.670761,5.213749,-5.063260,9.432429,-5.165984,-8.783268,-1.988710,-7.535683,1.325146,2.544496,-4.358107,5.746251,7.388994,-7.473852,-5.917589,-8.021912,6.079067,2.295293,-9.874923,-6.293814,4.855555,9.951569,7.071050,-8.471995,8.108314,1.735380,1.042536,1.001992,4.498989,4.867075,-0.925025,3.449154,6.108495,3.894869,9.971973,-2.947848,-0.115655,-2.736358,5.545510,-9.514072,9.904999,-3.984868,-4.053412,1.372990,-5.333017,-9.233326,-9.639156,-9.357699,-5.819723,-7.433355,-6.200644,7.293168,-1.431680,-3.616994,-2.788352,5.943684,-0.431329,1.105788,8.168284,9.775420,0.116063,-6.631121,1.537711,4.428770,-0.318493,-8.633766,-8.184119,0.252573,3.889978,-4.879346,-8.225175,3.154152,4.061210,4.124406,-1.505160,-3.877755,-0.132745,8.273576,-4.653873,-5.764374,-9.860561,9.081361,-4.590213,-5.145088,-4.881787,8.300949,-1.858130,-6.455165,3.883932,-1.678777,-0.456824,9.947251,9.404978,-9.666136,2.321639,-3.868117,4.581354,-9.922884,-4.571359,-1.085692,4.362538,2.022775,-3.078504,-0.271087,5.166108,9.086692,1.209004,5.766106,-6.350857,-6.438040,-6.273838,8.984546,-1.277426,6.643885,-3.484141,-9.326074,1.153835,2.244228,3.365200,-4.144511,-3.044976,-1.906388,-8.412000,-6.803227,6.151396,6.456496,6.786189,-4.090276,-7.350187,-1.710932,9.605433,1.300658,-9.639423,-8.129813,-6.801752,8.601668,9.435985,-6.611483,8.409461,-3.313792,-1.986400,-4.652402,-4.530925,9.791545,-1.171225,-6.604329,-2.919434,-9.869737,-1.735614,-4.858017,7.659944,-1.032919,5.217210,9.137381,6.090583,-0.137303,7.585053,-6.004973,4.513523,-2.032047,6.875688,5.046304,-0.859901,4.027086,-4.020480,6.990942,6.811639,-7.826065,7.588020,8.213711,7.722735,-6.608006,-7.354894,2.844243,-6.120679,0.693217,-1.398887,-7.982752,-4.736159,9.730054,4.735166,7.462920,-5.093958,-6.380836,5.053068,3.550438,3.468294,1.059209,-1.718195,0.600023,-8.050617,-3.674581,1.691740,-3.392217,-6.658572,-7.292238,-5.334947,-4.373747,-4.209785,-3.507287,-3.160679,-4.651463,9.619607,1.910841,-4.269101,7.084849,3.514361,6.542337,-1.589720,7.378605,-9.776484,-2.465991,8.293116,6.991934,6.350350,8.931081,5.787634,7.483329,7.790529,-6.768900,9.161023,-4.090810,-9.718765,7.211981,5.338478,5.784130,0.609193,1.513548,7.587206,-0.370302,-0.534956,-8.284841,2.655231,4.752761,5.711112,7.631863,0.531480,5.631033,2.878253,-6.095061,9.883091,-4.718491,5.733512,0.226330,8.820676,-4.439659,8.328404,1.910623,-3.041240,1.938182,1.419721,3.578348,1.856772,-0.050796,0.300595,3.272276,-7.806555,6.574816,9.889258,-3.949308,-2.780861,7.620300,-5.858304,5.803499,2.856451,-6.440421,9.620655,4.194859,-9.311593,5.246051,-1.232040,0.189512,8.435850,-7.237560,1.026971,6.723479,3.415239,-9.422987,8.777571,8.649921,-7.999762,2.133940,8.841277,-9.691383,-5.608018,6.265290,8.309344,-8.317394,-0.910783,3.714310,8.180280,2.025626,3.995128,-9.292495], dtype = "float64")#candidate|5750|(2025,)|const|float64
const_5751 = relay.const([2.546595,4.775294,4.793619,0.535812,-8.035398,-6.505525,1.466760,-9.215642,-9.389445,7.197485,-9.776997,-9.778218,-1.101409,-3.650846,-5.501109,-4.893903,9.886934,-6.256184,6.753828,-3.391527,3.793228,2.779173,1.267331,-8.150036,-9.752284,-3.448789,-1.965530,-7.146632,1.063649,6.104784,2.268174,-8.627049,4.512944,8.508737,-2.346611,-5.394114,2.310433,-0.251948,6.335297,-0.449514,-4.745175,-5.881899,5.141126,-4.764490,-4.775821,5.896292,4.969106,-4.317466,-8.812241,4.106534,2.188258,-3.914275,-9.676679,-9.935323,9.228078,5.816112,5.606823,0.524379,-4.589073,0.973874,4.142612,-7.324871,-9.037436,3.024017,5.194201,8.708826,8.466723,4.586299,-0.771401,8.221122,-2.238898,-8.339281,8.717497,-2.946807,3.395265,-6.661303,-5.565047,7.717581,2.757926,-7.079377,4.068501,6.093059,8.497321,-4.147032,-4.496205,-3.360304,-7.739322,-9.910689,-5.619483,-7.232651,3.961102,-4.818466,8.105100,-5.344054,-6.709964,8.878807,8.949298,-4.185647,6.205362,-9.108580,7.134910,-6.640715,1.443264,3.191863,-6.396342,8.872939,-2.080893,7.949669,7.202336,-7.664460,-4.102501,-9.731784,-5.108656,5.488486,2.667583,-4.264900,-5.091020,1.746018,5.934614,2.990281,-1.045484,1.879328,-1.153438,-7.335793,0.017689,5.359594,4.380700,1.325363,4.515832,3.910391,-8.527530,0.433471,0.988039,3.228623,9.341611,-1.260478,7.310182,-6.052200,-6.920367,-9.422813,6.441278,-8.323839,6.534213,-2.077859,-8.004924,4.903793,1.131386,2.872939,8.510211,-4.037423,2.774878,-3.356727,-8.926268,-3.831447,-2.191574,-6.598444,-6.127046,-7.495246,-1.549345,-8.348272,-6.621164,-7.167215,-9.578908,-1.358266,-4.395081,-6.368425,9.374018,-3.876039,6.349486,0.018658,1.285040,4.790290,-3.072704,0.011566,4.029731,6.917213,-1.435419,9.174135,5.168290,-0.835693,-9.201964,3.534489,-7.402786,-7.313301,-8.929306,4.542799,6.296256,2.857011,-1.548995,4.155445,8.341111,1.774736,-6.562645,-8.935120,5.752792,5.716741,-7.503952,8.021598,-6.067382,-4.642053,6.996437,1.419951,2.121355,-2.674521,0.933369,8.587352,-0.826232,-9.491963], dtype = "float32")#candidate|5751|(208,)|const|float32
const_5752 = relay.const([[0.200202,-7.581102,6.805701,-8.080537,1.927168,1.645783,-3.932170,-0.244249,-7.837561,-0.260045,-8.369486,-6.252429,9.061989,7.065738,-5.462813],[4.043216,-2.661443,4.844584,4.984783,-4.562431,9.408579,6.090946,-5.837652,6.699980,5.965847,-4.130807,-3.592547,7.466016,-6.834684,-0.961580],[-8.180933,-2.900438,5.188583,-1.094300,0.049858,-5.129123,-4.017429,1.248634,6.569045,5.115549,-0.708642,-4.910358,-1.267812,6.196915,-0.571814],[-7.432356,8.310071,-0.269704,-6.547750,2.106473,5.194443,-7.066255,9.219966,-0.787392,-8.881358,-7.972214,4.466571,-4.435661,-0.522320,-7.308403],[3.485027,9.337974,-8.540661,2.690683,-3.133129,-4.289993,-2.875728,5.735830,-6.563150,-5.661015,0.918927,-6.600515,6.792353,-6.883712,-4.286102],[7.171144,4.449568,-3.397906,-9.395920,-2.067533,8.545188,-8.942486,-9.157512,3.274001,6.590685,0.342990,-5.780924,0.972896,-2.558536,6.953522],[-3.662409,-6.524616,4.231097,7.519957,6.818544,-9.624445,1.250719,-2.939820,-5.927411,-4.800201,-9.013254,-7.506464,9.276172,-7.696272,-9.885540],[-4.962323,-9.346133,-3.460082,-3.940938,0.412798,-9.641328,-0.295596,-5.436718,7.846141,-5.941879,-9.948730,4.295291,-4.566690,-7.011103,0.917114],[-5.614967,-0.425028,-9.105314,6.758897,-3.264158,-1.987244,-9.428698,-3.891509,-2.783813,-6.101447,-5.230862,3.015850,0.415153,-1.215914,-8.838911],[-3.720611,-9.272053,-6.865846,-7.919759,3.309084,-4.338009,3.929972,-8.147860,-8.389950,4.002122,2.536872,4.223964,8.950045,-3.557678,3.202559],[2.233881,-1.753152,-8.708501,9.317177,-5.994841,4.470368,-7.306493,6.257380,5.824490,0.114551,-0.633084,-3.852953,6.685520,6.085591,8.426224],[5.558521,-2.969036,-1.831176,-8.625752,6.229773,-0.285825,5.427261,7.842787,9.022532,-5.117316,5.320067,-8.541867,2.268824,-1.389621,3.007143],[7.493249,-7.312296,-6.446840,-7.419782,-3.647048,2.395781,-4.820636,-3.770382,-2.508190,-7.995222,-9.649855,1.820024,9.509312,3.365168,6.154025],[-6.772103,0.357911,9.621975,8.701690,-3.144989,7.097842,7.618198,-7.040423,-6.675780,7.110046,-3.885903,-6.633062,-5.670319,-8.744725,7.924095],[1.576035,-7.379543,7.878589,-9.361147,8.757805,-7.016920,7.733527,-4.524895,4.219251,-7.133752,-5.263124,6.861645,-7.074083,-8.170905,3.863594],[6.405839,7.951453,4.305706,7.967526,-2.714047,-1.779125,9.639181,-0.369705,8.299934,-5.498603,-5.410038,-5.670288,-0.229097,-8.043522,6.112596],[-0.464981,-5.396230,-2.919932,-2.077481,0.624014,-1.044204,-6.626668,9.840984,-4.420581,-3.117493,-9.053319,9.742069,-9.986202,-9.713834,-2.635489],[-4.526254,-8.265049,4.111911,-8.613727,-9.942131,-3.979211,0.853697,-4.886884,5.538273,-7.775227,-8.445186,-5.788847,0.406253,4.884684,0.711417],[-7.575775,-3.480679,-8.645681,9.320814,-2.026114,6.986744,9.280733,8.005017,3.410135,-1.712853,-8.222475,3.487439,-4.110316,-1.754446,-0.461266],[6.339317,5.108466,8.887154,5.758825,3.562349,-2.354301,-6.350110,6.612029,7.869225,-4.527404,-8.409949,-8.535819,-5.934406,9.293485,-6.188401],[-2.236538,-6.373788,-6.901105,-7.809285,-9.641478,0.333899,-8.187715,-5.953549,2.749085,-9.477434,7.071720,-7.662819,-2.186927,-2.726036,1.131702],[2.443824,1.914431,-4.456818,5.579818,1.388941,-3.544077,-4.442618,9.530933,-3.134492,1.441634,-3.558364,-2.317571,-3.518478,8.309146,-1.501806],[-3.594902,1.984660,2.284455,3.123174,-9.172063,-5.447227,4.180774,6.829490,-6.951761,5.824197,-6.598940,-0.466004,-8.961158,-2.797541,-9.979563],[1.762446,-0.412215,-2.838717,-5.756057,7.807653,-1.117933,8.092051,-9.724348,-2.063134,-2.231648,-0.337706,-7.810143,9.155511,-1.678731,-3.847532],[-3.962403,8.643651,-7.364430,-8.721079,2.090261,4.972933,-0.378590,5.340895,4.364298,3.503648,3.769565,8.995589,-8.677791,-1.753770,-9.444858],[0.630749,-8.407288,1.988173,-4.519848,5.630476,2.324444,-8.790708,3.155209,2.318719,4.990384,2.130399,-1.848360,-1.717667,1.998547,0.383276],[-4.925738,2.261226,3.044249,7.304536,-8.149889,4.318777,-8.110715,7.309681,4.046903,-6.151221,9.593613,5.294415,-7.306234,8.922920,2.013627],[4.827236,0.954993,-2.981911,-0.273313,4.680551,8.202045,-2.290004,-1.777763,7.008239,-2.354054,-1.820698,0.657773,-8.440849,-2.930697,-3.993074],[-3.270757,5.105896,-4.610549,2.142991,7.864312,1.970141,3.382418,-3.958993,-3.979427,-7.529913,-8.570966,-7.896974,-9.272522,4.812873,-3.184761],[-3.802348,-8.884199,5.319005,-4.991101,1.921436,3.623018,-7.287898,-7.140313,-0.780232,-0.632670,-8.775581,1.723763,6.199736,3.785040,-9.331569],[-0.899543,-3.556957,-5.349637,8.328851,-6.539039,0.755784,4.227120,4.999893,-1.182668,-9.028040,-7.857330,9.585621,-2.894488,7.454970,-2.606682],[3.494183,5.941864,1.777065,1.837675,-9.518181,8.473465,0.721519,0.766282,-1.205509,-6.317928,-8.634126,7.094723,3.086814,-2.429613,6.085201],[-7.668982,2.203058,6.512812,-3.187942,9.855441,-1.788778,-0.880528,-4.600597,-3.350722,5.080941,3.295868,3.343408,-3.079651,-7.706578,-8.784923],[1.364549,8.225349,-3.165530,4.538982,2.346058,3.562861,8.530798,-5.836691,4.991734,-9.620462,6.211845,-3.125918,0.320680,4.762490,-4.468375],[2.718296,6.425559,-5.987600,4.256167,-2.009551,3.867326,4.176563,9.512564,-9.607384,-4.362884,3.774748,-5.270840,5.267565,-1.849378,-5.949640]], dtype = "float32")#candidate|5752|(35, 15)|const|float32
var_5753 = relay.var("var_5753", dtype = "float64", shape = (12,))#candidate|5753|(12,)|var|float64
var_5754 = relay.var("var_5754", dtype = "float32", shape = (990,))#candidate|5754|(990,)|var|float32
call_5749 = relay.TupleGetItem(func_4679_call(relay.reshape(const_5750.astype('float64'), [9, 15, 15]), relay.reshape(const_5751.astype('float32'), [208,]), relay.reshape(const_5752.astype('float32'), [525,]), relay.reshape(var_5753.astype('float64'), [12,]), relay.reshape(var_5754.astype('float32'), [990,]), ), 1)
call_5755 = relay.TupleGetItem(func_4686_call(relay.reshape(const_5750.astype('float64'), [9, 15, 15]), relay.reshape(const_5751.astype('float32'), [208,]), relay.reshape(const_5752.astype('float32'), [525,]), relay.reshape(var_5753.astype('float64'), [12,]), relay.reshape(var_5754.astype('float32'), [990,]), ), 1)
func_3139_call = mod.get_global_var('func_3139')
func_3143_call = mutated_mod.get_global_var('func_3143')
const_5769 = relay.const([True,True,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,False,False,True,True,True,True,True,False,True,True,False,True,True,True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,False,True,True,True,True,False,False,True,True,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,True,False,True,True,True,True,True,True,False,True,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,True,False,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,True,True,False,False,True,False,True,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,False,False,True,True,True,False,True,False,True,False,False,False,False,True,False,True,True,False,True,True,True,True,True,False,True,True,True,False,True,True,True,True,True,True,False,False,True,True,True,False,False,True,False,False,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,True,True,False,True,True,True,True,True,False,True,False,False,True,True,True,True,True,False,True,False,True,True,False,False,False,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,True,True,False,True,True,True,False,True,True,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True,False,False,False,False,True,False,True,True,False,False,True,True,False,True,True,False,False,True,False,False,True,False,False,True,True,True,True,False,False,True,True,False,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False,False,False,False,False,True,False,True,False,False,False,True,False,True,False,True,False,False,True,False,True,True,False,True,False,True,False,False,True,False,False,True,False,False,False,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,True,False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,False,False,False,True,False,True,False,False,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,True,True,False,False,True,False,False,True,True,False,True,True,True,False,True,True,True,True,True,True,True,True,False,False,True,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,True,True,False,False,True,False,False,False,True,True,True,True,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,True,True,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,True,False,True,False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,True,True,False], dtype = "bool")#candidate|5769|(840,)|const|bool
call_5768 = relay.TupleGetItem(func_3139_call(relay.reshape(const_5769.astype('bool'), [14, 5, 12]), relay.reshape(const_5769.astype('bool'), [14, 5, 12]), ), 0)
call_5770 = relay.TupleGetItem(func_3143_call(relay.reshape(const_5769.astype('bool'), [14, 5, 12]), relay.reshape(const_5769.astype('bool'), [14, 5, 12]), ), 0)
var_5772 = relay.var("var_5772", dtype = "float32", shape = (35, 15))#candidate|5772|(35, 15)|var|float32
bop_5773 = relay.bitwise_xor(const_5752.astype('uint16'), relay.reshape(var_5772.astype('uint16'), relay.shape_of(const_5752))) # shape=(35, 15)
output = relay.Tuple([bop_5743,call_5749,const_5750,const_5751,var_5753,var_5754,call_5768,const_5769,bop_5773,])
output2 = relay.Tuple([bop_5746,call_5755,const_5750,const_5751,var_5753,var_5754,call_5770,const_5769,bop_5773,])
func_5776 = relay.Function([var_5742,var_5753,var_5754,var_5772,], output)
mod['func_5776'] = func_5776
mod = relay.transform.InferType()(mod)
var_5777 = relay.var("var_5777", dtype = "float32", shape = (14, 16, 15))#candidate|5777|(14, 16, 15)|var|float32
var_5778 = relay.var("var_5778", dtype = "float64", shape = (12,))#candidate|5778|(12,)|var|float64
var_5779 = relay.var("var_5779", dtype = "float32", shape = (990,))#candidate|5779|(990,)|var|float32
var_5780 = relay.var("var_5780", dtype = "float32", shape = (35, 15))#candidate|5780|(35, 15)|var|float32
output = func_5776(var_5777,var_5778,var_5779,var_5780,)
func_5781 = relay.Function([var_5777,var_5778,var_5779,var_5780,], output)
mutated_mod['func_5781'] = func_5781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5316_call = mod.get_global_var('func_5316')
func_5318_call = mutated_mod.get_global_var('func_5318')
call_5788 = relay.TupleGetItem(func_5316_call(), 0)
call_5789 = relay.TupleGetItem(func_5318_call(), 0)
func_3867_call = mod.get_global_var('func_3867')
func_3871_call = mutated_mod.get_global_var('func_3871')
const_5808 = relay.const([[-6.402137,9.249962],[5.475289,5.648490],[-3.808744,9.841131],[-9.743646,3.963543],[-3.686856,7.002850],[-9.461177,2.167987],[8.560665,-6.517933],[0.718888,6.278434],[-0.930948,0.559403],[-8.254615,6.485009],[4.694648,5.142707],[-5.671951,-4.224053],[2.556693,-4.044714],[0.738581,3.638723],[-0.615767,-5.540882],[-3.441525,0.291649],[0.314086,-8.556850],[4.578175,-5.558683],[-1.054721,-5.192327],[-1.592917,4.710541],[-9.001889,2.289004],[7.411365,-5.096409],[-8.674533,7.310750],[-1.289636,4.867238],[-6.530122,0.056979],[0.745026,-2.152364],[0.795589,6.979890],[0.712662,6.894958],[-3.175786,-4.349604],[4.688530,2.171230],[7.556491,-1.209976],[4.803760,0.052611],[3.103636,-3.413564],[-4.773522,5.936833],[6.183092,6.271647],[7.787000,3.985463],[-7.234028,-8.621395],[-0.275550,6.330044],[-0.693344,-9.727417],[-2.907961,6.896037],[-5.770699,-7.904710],[-8.354995,0.922870],[-1.902690,6.457652],[4.039924,4.949219],[-2.151660,-1.523890],[7.739139,-5.394708],[7.604507,-9.641123],[9.454953,-0.880739],[6.192945,-0.996043],[-7.034258,5.482274],[1.522682,-0.837300],[8.769723,-6.215263],[2.348055,7.578551],[-0.202749,3.624602],[-6.806246,7.530266],[3.557729,8.618750],[0.490528,1.293353],[4.409353,-6.463998],[1.796746,-4.576703],[8.885841,-8.214191],[1.801001,6.362509],[7.318604,3.905847],[-9.471917,6.938042],[-3.263148,-6.748680],[3.832285,2.862562],[7.259628,6.045543],[6.800696,8.126818],[-1.357476,0.598926],[5.661763,2.107897],[8.592133,-2.334008],[-9.478210,-6.218582],[8.675570,-5.463581],[-9.784981,6.671473],[7.246996,-3.652195],[-0.581831,7.594847],[1.477973,-4.718883],[-6.074012,7.978379],[6.300221,7.578341],[-8.408216,-1.934617],[2.849034,-0.985926],[3.716063,9.381727],[-0.736467,4.541961],[7.169268,5.667032],[5.094796,-3.707611],[4.773598,-8.604309],[7.380146,-2.502298],[4.653704,7.154544],[0.594869,-3.944701],[-4.358892,-9.084752],[3.255477,4.046084],[-2.218864,5.006126],[3.215633,8.568386],[5.944446,9.359949],[-3.585914,-5.812305],[-8.255605,-7.955166],[7.324807,-9.261811],[-9.608820,-4.413064],[-7.535271,-9.705547],[-0.837975,2.920147],[6.689731,9.049552],[-8.867845,-3.263985],[-3.651337,-6.103220],[-4.445609,9.043986],[6.398135,8.234687],[-7.227937,7.780601],[-1.466567,3.820702],[4.782793,-6.013765],[-8.895125,8.858649],[-0.288983,2.397980],[5.864655,8.741715],[-4.279267,1.965125],[8.823704,4.031169],[8.809470,-4.911583],[-7.553859,-1.260706],[-8.473156,4.085421],[-1.395493,8.156648],[-8.670613,-6.000019],[-4.439160,4.524254],[-4.713651,-5.552953],[-6.596021,8.107994],[-3.291157,6.341379],[0.627315,-8.015252],[-4.148731,-9.404292],[4.634512,7.117381],[-0.212969,3.707399],[8.009279,6.763789],[3.138178,5.932690],[6.486322,5.078056],[3.010236,9.608733],[6.699068,-9.877650],[4.859464,-2.657759],[7.349165,-5.537428],[3.485013,-2.811236],[-8.747126,-9.984901],[-0.887315,2.780263],[-3.517728,9.749065],[0.086501,2.941733],[7.327016,-6.496858],[-9.765409,6.173378],[-8.784210,-6.185491],[4.729986,7.388723],[-6.953340,3.476366],[1.369416,3.147604],[-5.063371,0.127133],[5.503840,-2.330469],[9.755443,9.649592],[5.804584,4.477544],[-2.336444,-0.509362],[-8.921768,6.377819],[0.435354,1.019826],[-7.959199,5.592708],[-7.629745,-5.174681],[3.952722,-2.492777],[-7.192017,-3.826004],[-5.550391,8.204726],[6.577559,-1.759192],[4.031583,8.071375],[-4.696350,-4.253371],[7.168523,1.045094],[-2.212671,3.492570],[-3.283454,-2.471013],[3.111763,0.225515],[-6.059700,-2.452571],[-7.085467,-6.877843],[-6.526946,-8.767699],[-0.061822,6.097503],[-3.074800,2.204054],[3.828289,-1.673169],[-3.596974,-5.569557],[-5.475259,7.678778],[-3.356038,-9.458141],[-8.975305,0.046220],[-5.760156,-5.961366],[-8.543002,-3.338661],[-5.993570,4.191032],[-6.083107,-4.926560],[4.659787,-7.695714],[-8.225540,-5.328939],[5.685137,2.217789],[2.436219,2.265793],[-3.926933,6.541522],[6.602756,-0.065571],[6.200359,0.752437],[8.738883,8.472416],[-9.046003,-7.995410],[7.106784,-1.272757],[-5.598123,2.482859],[-7.606230,5.249120],[-1.992332,5.894553],[6.298449,8.671449],[9.164347,-5.800774],[-2.252344,3.112430],[-4.585062,4.577154],[7.948677,-5.440991],[9.489530,2.623493],[-9.610172,4.835569],[4.014059,5.613670],[-4.674746,-6.669200],[6.778532,-2.251361],[-0.524698,4.936219],[-1.588255,-4.318309],[-5.784073,8.936889],[-7.648248,5.144815],[3.028748,9.108379],[0.075900,6.571332],[-0.724577,7.391956],[1.504903,8.429215],[-9.034752,-7.982097],[-3.026339,-2.394589],[8.137806,-5.375377],[-7.539722,1.504481],[-0.043995,9.658225],[6.944228,5.645885],[-8.122083,7.504051],[2.173656,3.747283],[8.681047,-3.905795],[-0.957768,-2.065164],[-9.065251,-6.255819],[-7.935868,-4.503961],[-8.045664,-0.762963],[4.960718,1.442197],[0.071027,5.880954],[-0.867301,-0.626722],[-5.911067,9.647934],[3.757331,-1.710440],[-8.342738,-8.240742],[-6.145843,-1.562800],[-3.172869,-0.583153],[-8.617148,7.499516],[2.469730,-2.565379],[3.487555,4.621933],[2.152127,6.106102],[0.335664,-6.574984],[-3.549802,-9.465927],[-0.565111,7.470505],[-0.897297,-1.974780],[-0.504500,-9.959635],[-7.731676,0.279809],[8.020883,8.962195],[3.185784,0.187819],[-8.981348,-0.428802],[-4.025400,-2.401911],[5.853120,-8.794291],[9.394069,8.685172],[-7.958120,8.749841],[-6.724390,9.398068],[-9.271069,5.247173],[5.637993,-3.226934],[-8.043218,-3.464956],[8.611565,0.403603],[-5.847117,-6.121553],[-0.931857,6.856031],[1.954165,7.568285],[6.065436,2.385909],[9.739866,7.154818],[5.020235,9.655144],[1.713979,1.934157],[-9.951720,1.887203],[-7.152057,-3.415565],[7.863931,6.254398],[3.655506,7.602648],[1.440466,-9.304856],[8.464716,1.311034],[9.946560,-6.772128],[-3.415230,1.089281],[4.549373,-5.413123],[8.681134,-7.421377],[-6.462748,2.582136],[8.265140,2.116598],[-7.578468,6.181461],[7.559925,-2.109755],[7.004193,2.109527],[-4.366714,-6.212048],[-0.350005,3.736269],[-3.884753,-7.122930],[-0.120663,-1.117278],[-8.083438,-3.868828],[9.644649,-1.549934],[5.479045,1.300833],[-6.639032,-2.185686],[8.193725,-5.622307],[0.804397,0.023490],[8.006205,4.784067],[-2.802101,3.775021],[1.802309,3.865208],[-3.826413,7.428463],[-6.332009,-5.633049],[-7.608040,-4.682728],[-0.412231,3.402870],[-0.103741,0.399441],[-7.587565,8.336194],[-6.405939,-5.513569],[6.228365,-8.176025],[1.180834,4.313444],[-4.532535,-6.171197],[-5.260926,-8.006580],[4.712346,7.303004],[6.212497,-9.373134],[3.464397,-6.633593],[-4.646219,7.073230],[-8.137915,2.562200],[4.478113,6.064061],[7.747717,-4.552191],[-8.023540,-2.667648],[-5.410434,-7.502629],[-9.473978,-3.865544],[-9.916464,7.383004],[2.972320,-8.075976],[-2.495700,5.520751],[-9.338979,8.161047],[6.410258,-4.111727],[-4.920000,2.942537],[-5.174318,-4.267729],[-9.821953,-0.460478],[5.502656,-4.635449],[-8.014430,-9.607319],[-4.030200,-5.949094],[6.137192,-4.728916],[-7.911900,-0.029253],[1.452425,8.594197],[4.072849,-2.956232],[-6.849629,6.096613],[-1.461710,-7.351971],[-8.767969,8.318326],[2.025157,-4.371860],[1.422376,6.674219],[8.588042,9.131584],[7.384434,-2.765579],[-3.187791,5.328773],[1.653081,0.892499],[-8.562541,-9.548907],[-6.062003,7.110527],[3.328916,-4.531117],[0.049341,-5.778806],[-5.006366,1.877809],[7.929520,-9.107716],[7.975333,-1.159906],[-2.787477,-0.679233],[-9.673423,-4.168667],[3.486290,-9.344210],[6.907052,8.914385],[-5.314803,4.736562],[2.892943,-1.154179],[-2.660938,8.369162],[-5.562579,-8.796361],[7.711464,9.803028],[1.678023,-6.651130],[-3.127554,5.853445],[-3.477001,-8.557304],[0.784431,9.656339],[-0.584102,3.875606],[-1.979765,-2.413912],[-0.019943,-1.138079],[-3.982314,0.764342],[7.097974,-5.309686],[-1.518216,4.369387],[-3.028916,0.463751],[9.942962,4.731066],[2.953204,-8.742365],[4.539963,-8.603776],[5.430663,0.329179],[3.037652,4.429019],[-2.006958,-4.650939],[3.215616,4.302990],[2.145075,9.574958],[5.934435,-6.862192],[1.440531,2.121266],[-7.876672,4.185999],[-7.764517,4.422648],[4.195309,-0.269360],[-2.265005,4.543950],[-4.948295,0.485656],[3.798607,-1.657117],[2.268662,1.164416],[9.516494,8.272673],[6.488190,1.779734],[1.922450,6.541316],[4.803982,4.168842],[-1.265759,6.198612],[4.080829,-0.843146],[-8.023620,-8.402763],[1.179677,-8.073330],[-1.960659,-6.358759],[-4.862877,0.228194],[-5.681042,7.100459],[-6.012051,4.545280],[5.639976,2.304315],[-8.737595,5.597991],[-8.632418,-8.882698],[-2.138417,-2.381357],[0.515778,-4.275777],[-6.564108,3.860584],[-3.818086,-2.432343],[4.208353,6.453413],[-1.591958,-1.195887],[-2.238359,5.179469],[3.928041,-8.413383],[2.329450,-1.002913],[-4.786017,-0.408866],[-5.226359,5.970030],[-7.772624,7.896341],[-4.012901,-0.475451],[9.151250,3.085082],[1.788548,-5.387386],[-0.360043,-4.970959],[4.191969,-8.282587],[2.685512,-6.385700],[6.307905,-7.206549],[0.602630,7.626360],[-8.611282,-5.543217],[-0.207320,5.352177],[1.563041,-6.923872],[-3.522043,9.618069],[0.307548,4.750719],[-5.418344,-2.697836],[-0.784304,-4.434243],[-9.247978,3.506239],[3.609878,-4.815879],[1.015893,1.737397],[8.149349,-8.444294],[-6.527014,2.909917],[-8.174806,-7.935208],[-1.334842,-4.555948],[7.132082,-2.070391],[-1.721044,-8.627809],[-0.288630,-8.278265],[-3.123786,-2.254278],[1.083464,-7.957552],[-1.998606,-0.492301],[-8.239559,8.673768],[8.778981,9.098648],[-8.695852,8.682996],[9.722620,0.845367],[-8.135111,0.390819],[2.611953,5.075032],[8.979777,8.989423],[2.730324,-1.750262],[-0.112848,0.562966],[5.319421,8.235779],[-6.039781,-6.118644],[-6.503112,6.143658],[5.724009,-5.287645],[-2.436344,-6.960116],[6.177029,4.174425],[0.467989,-2.632778],[-2.869247,8.589633],[6.086513,6.236216],[5.103551,2.004501],[6.675063,0.986457],[-4.578051,-4.917702],[5.558654,-4.677474],[-1.156871,5.986902],[7.015283,2.620220],[4.370915,3.038179],[2.503649,2.315051],[-7.782193,1.067562],[6.701731,5.941923],[-2.992921,5.758572],[-7.075041,-1.763734],[3.748375,-4.150680],[5.182599,-9.953036],[-1.104039,2.436426],[8.489332,5.804064],[-7.661527,2.397216],[1.999115,1.879347],[-4.621787,1.886584],[-2.656364,7.884964],[0.504380,-9.134613],[-0.255472,-1.699541],[-8.911580,-4.326197],[-1.780930,0.323560],[-7.729989,-9.731642],[8.555211,2.578690],[-3.390460,-7.434065],[-5.657602,6.452295],[5.749560,8.867902],[-2.413016,0.522031],[9.396582,-7.296195],[1.205762,-4.600812],[6.591551,1.610725],[-1.206130,-8.292483],[7.202891,4.592307],[9.385425,0.963690],[-4.211336,-4.827823],[-9.161738,5.644962],[0.090656,8.301995],[-7.497967,6.123115],[0.522396,-2.941610],[4.102312,-6.724924],[-7.752168,1.510923],[-5.680492,-0.733338],[4.521236,-3.791230],[-2.391453,4.355142],[5.393797,-9.077484],[5.381065,2.982000],[-9.575287,-1.410264],[8.797769,-1.310956],[7.241541,8.594977],[7.103069,-4.351884],[-6.938493,-0.048115],[7.337004,-8.823510],[7.484641,-5.745386],[-3.276007,3.147292],[5.925405,1.665513],[-6.139084,-4.113789],[7.158143,-4.636403],[-4.107874,6.552439],[7.051028,3.989367],[7.671610,1.789112],[8.283435,6.420150],[-7.517827,-3.224544],[7.740080,-0.264916],[-2.895368,5.571809],[-2.307661,-0.617793],[-5.487295,7.109748],[1.525768,-5.013382],[-5.369673,3.618837],[7.330997,-7.595307],[8.452791,-5.539030],[-8.006079,8.295974],[0.041642,-8.781338],[-1.025924,-5.259450],[-5.640499,-2.080747],[5.232613,-5.645389],[-1.553178,3.199949],[1.211503,3.659143],[-8.000206,0.926967],[-0.661341,9.061768],[3.375532,0.989117],[-7.983664,-7.410527],[3.744698,7.227898],[-3.176079,0.564680],[0.883350,-1.263058],[-4.476208,-7.984462],[3.008346,3.498457],[-5.032368,-6.628741],[-3.957686,3.536083],[4.144203,0.751899],[-3.654788,5.037215],[-9.982898,6.117732],[6.516100,-0.099233],[-7.122085,6.536461],[-9.827452,6.688340],[7.806494,-1.275815],[-3.038660,4.716386],[-7.694148,-7.709961],[4.896040,3.234901],[-1.351437,3.029754],[-6.172485,8.020517],[-6.051324,9.104542],[6.178871,7.176065],[-9.071822,-9.568314],[0.221177,-6.821389],[-9.995847,-8.897524],[5.860719,-2.547799],[8.707552,1.301397],[4.996765,-7.738623],[5.744500,6.344680],[-4.050977,-9.516974],[-6.947018,6.053333],[-0.103149,0.273295],[6.510315,-2.213653],[9.398004,-9.355137],[-4.494391,5.493093],[7.923082,-0.463370],[0.680444,0.857215],[-0.829338,-5.152293],[4.250865,2.837757],[2.135971,-0.935405],[-8.234206,0.593053],[0.913740,-4.380218],[-3.689238,-1.250808],[3.980183,-4.017391],[-4.710451,3.037562],[3.106041,9.095270],[8.654069,-2.042864],[-7.905365,9.540062],[8.761703,-0.250704],[6.153789,8.940764],[-6.870763,8.175916],[-7.676132,-0.609579],[6.338652,5.088352],[8.023666,5.828087],[3.696694,-5.433796],[2.813763,4.038475],[-0.511016,5.360273],[-5.741768,4.502492],[-1.466861,6.954573]], dtype = "float64")#candidate|5808|(588, 2)|const|float64
const_5809 = relay.const([4.915921,1.630377,-5.500556,9.423506,3.941725,0.807189,-0.492826,1.915815,-9.337033,-5.234897,1.821716,-0.587210], dtype = "float64")#candidate|5809|(12,)|const|float64
call_5807 = relay.TupleGetItem(func_3867_call(relay.reshape(const_5808.astype('float64'), [6, 14, 14]), relay.reshape(const_5809.astype('float64'), [12,]), ), 1)
call_5810 = relay.TupleGetItem(func_3871_call(relay.reshape(const_5808.astype('float64'), [6, 14, 14]), relay.reshape(const_5809.astype('float64'), [12,]), ), 1)
output = relay.Tuple([call_5788,call_5807,const_5808,const_5809,])
output2 = relay.Tuple([call_5789,call_5810,const_5808,const_5809,])
func_5818 = relay.Function([], output)
mod['func_5818'] = func_5818
mod = relay.transform.InferType()(mod)
output = func_5818()
func_5819 = relay.Function([], output)
mutated_mod['func_5819'] = func_5819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5729_call = mod.get_global_var('func_5729')
func_5730_call = mutated_mod.get_global_var('func_5730')
call_5829 = relay.TupleGetItem(func_5729_call(), 0)
call_5830 = relay.TupleGetItem(func_5730_call(), 0)
output = call_5829
output2 = call_5830
func_5839 = relay.Function([], output)
mod['func_5839'] = func_5839
mod = relay.transform.InferType()(mod)
output = func_5839()
func_5840 = relay.Function([], output)
mutated_mod['func_5840'] = func_5840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5425_call = mod.get_global_var('func_5425')
func_5427_call = mutated_mod.get_global_var('func_5427')
call_5856 = relay.TupleGetItem(func_5425_call(), 2)
call_5857 = relay.TupleGetItem(func_5427_call(), 2)
output = relay.Tuple([call_5856,])
output2 = relay.Tuple([call_5857,])
func_5875 = relay.Function([], output)
mod['func_5875'] = func_5875
mod = relay.transform.InferType()(mod)
mutated_mod['func_5875'] = func_5875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5875_call = mutated_mod.get_global_var('func_5875')
call_5876 = func_5875_call()
output = call_5876
func_5877 = relay.Function([], output)
mutated_mod['func_5877'] = func_5877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5425_call = mod.get_global_var('func_5425')
func_5427_call = mutated_mod.get_global_var('func_5427')
call_5904 = relay.TupleGetItem(func_5425_call(), 0)
call_5905 = relay.TupleGetItem(func_5427_call(), 0)
const_5912 = relay.const([[[-2.654408,-4.422432,7.187668,8.689230,-3.578437,2.490586,2.307393,-2.582149,4.746319,5.012826,0.066942],[3.744682,-2.354981,6.483283,2.058315,-9.407099,5.473682,-0.241488,5.141210,3.383734,-2.829281,-0.523287],[-6.092478,-8.378980,6.129939,-5.579670,0.836526,-4.550889,-4.743110,-2.996058,-4.940774,1.620855,9.332417],[-9.663151,-4.689730,-9.372339,9.889160,-4.644169,7.905805,2.840978,4.410284,8.009918,8.444939,-4.415962],[-7.982762,5.299840,9.235391,-9.504355,2.411403,-6.490210,-7.950960,-5.588612,7.470757,6.130437,1.440926],[-9.036783,3.452724,3.219583,7.697033,-4.418573,-9.483208,0.279106,-4.029438,-8.038788,-9.822801,7.163369],[1.802668,-8.070060,2.533710,-6.051471,-0.799985,5.392578,-1.092485,4.383144,-1.416597,7.542238,3.228086],[2.870416,-0.031266,3.635200,-3.608164,9.275681,-4.051220,-9.702024,-8.177876,-8.100857,1.135175,-3.161949],[-8.176825,-3.156180,0.266744,5.184248,-8.541797,-5.818735,-7.837328,3.861544,1.797707,7.385680,1.564858],[3.907156,-4.792555,-1.978846,9.760566,3.973046,-5.494211,-2.076720,-0.753939,1.929577,-7.817719,1.262216],[7.504899,9.584266,-4.164732,8.302418,6.998102,6.626524,-0.475800,1.110983,-4.542088,-1.941430,-4.259995]],[[-1.736275,-1.614154,7.296589,8.994294,-6.209470,-7.857541,9.560076,-4.053051,-3.144993,0.426148,1.651303],[3.120590,1.776351,2.009185,2.845836,4.099029,-4.685046,8.552299,-6.637353,0.831322,2.813947,8.125372],[-4.496185,3.213696,6.975816,-7.192417,5.459032,6.682560,0.915993,-5.141422,8.653793,-0.017315,4.612099],[2.236167,-6.671071,-7.383349,-9.535410,5.444863,8.921936,5.118047,5.536260,8.107474,-2.675131,-6.910857],[-4.607480,-8.352323,-7.535513,7.908764,-3.242505,6.486848,5.540851,-3.713838,9.198375,-2.511536,0.286670],[1.083615,8.684883,1.324556,-2.910657,4.821928,-3.682675,-3.735783,-7.600887,-0.562851,-9.117812,-1.841286],[-4.353313,-6.031772,-5.722227,-3.359225,-8.017989,-7.761906,7.514698,0.233894,9.129024,-6.248112,-2.486078],[-7.972553,-6.020766,1.972561,3.995333,9.213073,6.369449,7.980911,-5.690871,6.918338,-2.512490,0.005862],[2.623131,0.221538,6.712753,-5.116410,-7.736781,3.982811,5.129575,5.899813,-2.815804,-1.141027,-4.381994],[6.200663,-4.540399,-3.055751,-0.005211,-6.395399,-3.610213,1.638917,5.843537,-9.851504,-2.878469,-6.043444],[-0.497018,-1.644343,-0.440324,-7.086730,0.240863,-9.150316,-4.254348,-1.622665,-8.226742,-5.935932,-4.784743]],[[-3.824647,4.925471,5.035738,-7.282500,-1.614742,5.018462,3.928718,3.591644,5.614274,6.585088,-2.450365],[-6.395074,1.717319,9.017640,3.762010,1.463109,6.399687,-2.084839,-3.227986,0.271537,-2.269483,-0.935414],[-5.013083,3.175866,-8.017373,9.656698,1.895817,3.969057,-7.372669,-3.191474,-9.149844,-1.208022,0.150523],[-7.536543,1.289696,-0.885839,-6.785845,-5.191895,-9.940533,-9.523472,-2.666498,-6.960313,4.365952,-3.164729],[-8.023342,-2.928621,-1.622843,9.205767,1.125281,-1.404979,8.212668,-0.003950,4.231642,-0.253066,2.101501],[-1.973523,1.192321,0.861826,-0.207863,-1.920655,-1.047984,5.751243,4.558648,-5.486801,-3.380329,-8.259455],[8.601369,5.523278,5.574830,0.054504,4.477005,-9.905841,-7.545056,9.261533,-8.975671,7.951914,-7.218809],[1.244258,9.101473,7.456098,-2.972648,2.598276,-4.821970,-1.559273,6.692309,-2.363688,5.085784,0.644607],[-3.374701,-1.893454,-6.238302,-7.345891,-3.785482,5.191740,6.151372,3.224957,-5.233334,-7.412880,-7.454722],[-7.694081,-4.659660,-0.243492,1.489601,6.148180,-1.628473,-9.001963,0.115011,-3.588799,9.102887,-0.181130],[-8.250040,-5.438047,-3.971410,7.648174,-1.392454,-5.619153,6.937510,-0.497393,-3.395463,-7.458046,-5.017053]]], dtype = "float64")#candidate|5912|(3, 11, 11)|const|float64
bop_5913 = relay.not_equal(call_5904.astype('bool'), relay.reshape(const_5912.astype('bool'), relay.shape_of(call_5904))) # shape=(3, 11, 11)
bop_5916 = relay.not_equal(call_5905.astype('bool'), relay.reshape(const_5912.astype('bool'), relay.shape_of(call_5905))) # shape=(3, 11, 11)
const_5921 = relay.const([[[-1.309809,-4.297922,-2.247244,-7.069124,-8.158657,-5.606178,5.269130,0.249542,8.510656,-2.425168,0.061611],[-9.721208,0.111416,-2.760739,-4.463208,7.849286,-9.740393,5.427149,-9.651053,6.340116,-9.074446,1.597257],[-4.623452,6.805301,-1.216766,4.619879,-6.507503,0.816840,-2.210165,0.350065,1.180096,9.676229,-6.375145],[-9.900795,-6.254183,6.072324,6.858894,-7.256517,7.990554,8.513171,8.068576,-4.885849,-5.993178,0.743386],[6.826731,5.515848,7.492944,9.290221,7.974412,-8.629630,6.669257,0.429216,-7.373682,-0.198561,3.880301],[-4.207638,6.743016,6.625758,-6.785401,-0.717228,2.548976,-7.724195,-5.493481,-7.347212,0.594589,4.474182],[0.828660,-5.405144,-3.065079,0.577881,-7.831093,1.435164,-9.816779,-6.901921,0.375946,5.644487,-4.279260],[-5.077762,8.216395,6.006269,7.911009,4.028630,7.576504,5.004109,1.986215,3.214911,-4.683351,0.798502],[4.991784,7.808316,-6.696046,5.390470,-9.690086,9.283355,6.051522,-7.530103,8.138304,6.315222,2.128329],[-1.524426,1.648143,1.073894,-9.861994,1.769777,-9.630800,1.300547,3.195304,3.376851,-9.716576,0.842094],[7.113992,-3.203522,8.817011,4.551346,-5.422089,4.268800,-2.508113,0.828264,5.221999,-9.032922,4.194199]],[[-6.328012,7.768167,-6.640547,-3.296697,5.639467,-2.695792,-3.096980,6.658083,-7.241145,-1.520917,4.733197],[-4.003863,1.872335,4.018481,0.679881,7.344127,9.968041,-7.193138,-6.841241,8.369285,-4.362352,-8.406764],[-3.051785,1.280473,2.750652,-6.685055,-3.229132,-2.853786,8.432517,0.878253,-4.933211,-2.979659,3.731174],[-5.069177,-0.088854,5.351196,5.325067,1.221176,1.704569,-5.895280,-2.272818,-2.157494,-7.878712,7.789852],[-0.484947,-6.331644,4.108532,3.283618,8.708958,4.812393,8.552268,8.260321,-3.041409,-5.866744,8.650833],[-8.874056,-0.239258,-6.040512,5.217824,-9.590777,-5.434161,3.848438,5.045022,3.605661,-4.886372,-4.460728],[0.367899,-9.267419,5.023895,-8.616289,8.812352,-4.190403,6.866430,-1.938929,-7.061473,-9.943680,-6.908101],[6.278297,-5.080052,-1.411952,2.398958,1.460380,-3.090779,-9.907158,-3.066410,-9.583523,4.289233,7.418334],[5.198898,-4.429179,-6.338690,4.370355,-8.434514,1.562086,3.953213,7.088431,-8.051800,9.213301,-7.330967],[-3.884490,-3.679014,-3.729564,-3.129838,-8.301297,-2.802429,9.889377,-8.120514,5.544300,0.590066,0.848143],[-8.372760,2.396588,5.166200,-0.680808,-8.909340,9.355678,9.429702,4.728725,2.743844,-8.079955,-6.276309]],[[9.754673,-7.932512,5.297259,6.897032,-2.402190,0.335290,-4.258514,-8.679185,-7.043760,-3.264164,-1.832831],[7.360000,3.129525,8.988937,-8.834744,0.881182,-5.014182,-6.592784,-1.193072,7.409507,-3.903845,-2.252479],[4.672444,4.749979,-0.632377,8.177840,2.208004,-2.984213,-1.751906,-7.865389,0.826940,-7.172608,0.711365],[1.428469,-7.047075,-5.901197,3.271943,4.425627,-8.934784,-8.348743,-5.711540,0.205876,-1.756168,-9.375479],[5.643310,-8.071293,5.200651,9.509758,7.756189,-1.545289,6.062175,-1.829487,9.819467,3.090501,-3.376810],[-7.285766,-9.252944,1.923547,4.571870,9.300360,-1.602392,6.964174,-5.275314,2.005590,7.321368,4.984933],[-3.471972,4.470901,7.462743,5.867699,-7.775044,3.133762,0.532623,-0.672704,-4.836163,-2.103360,5.420256],[-0.539154,-9.305411,3.706888,6.589060,-7.618741,9.464510,-2.103036,-8.982300,-3.376062,0.015489,4.670524],[-1.645935,-3.995438,1.793957,-1.976259,-0.775171,-9.529702,-3.919745,4.733129,-3.934476,6.298830,1.405866],[2.750001,-9.188277,6.755659,2.180010,-4.561405,-1.430337,-8.436644,5.161678,-9.639334,-3.892127,-5.061586],[-4.344293,-2.053807,8.093118,-8.485548,3.455299,4.266575,-0.147074,-0.694806,9.197550,3.045021,8.269197]]], dtype = "float64")#candidate|5921|(3, 11, 11)|const|float64
bop_5922 = relay.floor_mod(call_5904.astype('float32'), relay.reshape(const_5921.astype('float32'), relay.shape_of(call_5904))) # shape=(3, 11, 11)
bop_5925 = relay.floor_mod(call_5905.astype('float32'), relay.reshape(const_5921.astype('float32'), relay.shape_of(call_5905))) # shape=(3, 11, 11)
output = relay.Tuple([bop_5913,bop_5922,])
output2 = relay.Tuple([bop_5916,bop_5925,])
func_5927 = relay.Function([], output)
mod['func_5927'] = func_5927
mod = relay.transform.InferType()(mod)
output = func_5927()
func_5928 = relay.Function([], output)
mutated_mod['func_5928'] = func_5928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5729_call = mod.get_global_var('func_5729')
func_5730_call = mutated_mod.get_global_var('func_5730')
call_5938 = relay.TupleGetItem(func_5729_call(), 1)
call_5939 = relay.TupleGetItem(func_5730_call(), 1)
output = call_5938
output2 = call_5939
func_5941 = relay.Function([], output)
mod['func_5941'] = func_5941
mod = relay.transform.InferType()(mod)
output = func_5941()
func_5942 = relay.Function([], output)
mutated_mod['func_5942'] = func_5942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5425_call = mod.get_global_var('func_5425')
func_5427_call = mutated_mod.get_global_var('func_5427')
call_5946 = relay.TupleGetItem(func_5425_call(), 0)
call_5947 = relay.TupleGetItem(func_5427_call(), 0)
func_2585_call = mod.get_global_var('func_2585')
func_2590_call = mutated_mod.get_global_var('func_2590')
var_5951 = relay.var("var_5951", dtype = "float32", shape = (1144,))#candidate|5951|(1144,)|var|float32
call_5950 = relay.TupleGetItem(func_2585_call(relay.reshape(var_5951.astype('float32'), [11, 13, 8]), relay.reshape(var_5951.astype('float32'), [11, 13, 8]), relay.reshape(var_5951.astype('float32'), [11, 13, 8]), ), 2)
call_5952 = relay.TupleGetItem(func_2590_call(relay.reshape(var_5951.astype('float32'), [11, 13, 8]), relay.reshape(var_5951.astype('float32'), [11, 13, 8]), relay.reshape(var_5951.astype('float32'), [11, 13, 8]), ), 2)
output = relay.Tuple([call_5946,call_5950,var_5951,])
output2 = relay.Tuple([call_5947,call_5952,var_5951,])
func_5969 = relay.Function([var_5951,], output)
mod['func_5969'] = func_5969
mod = relay.transform.InferType()(mod)
mutated_mod['func_5969'] = func_5969
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5970 = relay.var("var_5970", dtype = "float32", shape = (1144,))#candidate|5970|(1144,)|var|float32
func_5969_call = mutated_mod.get_global_var('func_5969')
call_5971 = func_5969_call(var_5970)
output = call_5971
func_5972 = relay.Function([var_5970], output)
mutated_mod['func_5972'] = func_5972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5156_call = mod.get_global_var('func_5156')
func_5157_call = mutated_mod.get_global_var('func_5157')
call_6012 = relay.TupleGetItem(func_5156_call(), 0)
call_6013 = relay.TupleGetItem(func_5157_call(), 0)
func_5066_call = mod.get_global_var('func_5066')
func_5068_call = mutated_mod.get_global_var('func_5068')
var_6020 = relay.var("var_6020", dtype = "float32", shape = (196,))#candidate|6020|(196,)|var|float32
call_6019 = relay.TupleGetItem(func_5066_call(relay.reshape(var_6020.astype('float32'), [7, 7, 4])), 0)
call_6021 = relay.TupleGetItem(func_5068_call(relay.reshape(var_6020.astype('float32'), [7, 7, 4])), 0)
uop_6024 = relay.exp(call_6019.astype('float64')) # shape=(7, 7, 4)
uop_6026 = relay.exp(call_6021.astype('float64')) # shape=(7, 7, 4)
func_2520_call = mod.get_global_var('func_2520')
func_2523_call = mutated_mod.get_global_var('func_2523')
var_6035 = relay.var("var_6035", dtype = "float64", shape = (1568,))#candidate|6035|(1568,)|var|float64
call_6034 = relay.TupleGetItem(func_2520_call(relay.reshape(var_6035.astype('float64'), [8, 14, 14]), relay.reshape(var_6035.astype('float64'), [8, 14, 14]), ), 2)
call_6036 = relay.TupleGetItem(func_2523_call(relay.reshape(var_6035.astype('float64'), [8, 14, 14]), relay.reshape(var_6035.astype('float64'), [8, 14, 14]), ), 2)
output = relay.Tuple([call_6012,var_6020,uop_6024,call_6034,var_6035,])
output2 = relay.Tuple([call_6013,var_6020,uop_6026,call_6036,var_6035,])
func_6045 = relay.Function([var_6020,var_6035,], output)
mod['func_6045'] = func_6045
mod = relay.transform.InferType()(mod)
mutated_mod['func_6045'] = func_6045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6045_call = mutated_mod.get_global_var('func_6045')
var_6047 = relay.var("var_6047", dtype = "float32", shape = (196,))#candidate|6047|(196,)|var|float32
var_6048 = relay.var("var_6048", dtype = "float64", shape = (1568,))#candidate|6048|(1568,)|var|float64
call_6046 = func_6045_call(var_6047,var_6048,)
output = call_6046
func_6049 = relay.Function([var_6047,var_6048,], output)
mutated_mod['func_6049'] = func_6049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5502_call = mod.get_global_var('func_5502')
func_5504_call = mutated_mod.get_global_var('func_5504')
call_6077 = func_5502_call()
call_6078 = func_5502_call()
output = call_6077
output2 = call_6078
func_6082 = relay.Function([], output)
mod['func_6082'] = func_6082
mod = relay.transform.InferType()(mod)
output = func_6082()
func_6083 = relay.Function([], output)
mutated_mod['func_6083'] = func_6083
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6084 = relay.const([[[2.951686,-5.752275,8.619114,6.669138,-9.228802,-2.975328,9.665728,4.407238,1.924966,-5.500242,5.373847,8.804680,2.430757,1.305631],[6.737352,-9.864411,-3.147940,2.992584,3.004712,9.831213,-6.962459,-4.662155,2.822640,-1.859857,8.901684,2.754842,2.241177,-1.685514],[5.414652,-1.210798,-2.246871,-5.834450,1.063080,-8.412511,-2.382181,1.574591,-5.038849,-1.100687,9.393098,-9.987116,6.942941,6.975483]],[[-3.821382,-2.722470,6.863071,-8.858392,0.822837,1.088093,2.173917,6.261875,7.288360,-6.355049,-5.626026,8.606810,6.154979,-6.147706],[5.812582,1.441100,-9.255453,3.960039,-1.140385,2.897703,-5.222440,7.747087,0.833092,8.860703,6.953649,-4.008319,-7.768579,1.595554],[7.326188,9.632364,-9.378008,-5.345072,-1.287872,-5.438620,-3.445034,-9.854423,-9.548352,-2.713012,-7.455083,-1.534005,1.566345,-9.085301]]], dtype = "float64")#candidate|6084|(2, 3, 14)|const|float64
uop_6085 = relay.asinh(const_6084.astype('float64')) # shape=(2, 3, 14)
output = relay.Tuple([uop_6085,])
output2 = relay.Tuple([uop_6085,])
func_6090 = relay.Function([], output)
mod['func_6090'] = func_6090
mod = relay.transform.InferType()(mod)
output = func_6090()
func_6091 = relay.Function([], output)
mutated_mod['func_6091'] = func_6091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mod.get_global_var('func_5142')
func_5143_call = mutated_mod.get_global_var('func_5143')
call_6125 = relay.TupleGetItem(func_5142_call(), 3)
call_6126 = relay.TupleGetItem(func_5143_call(), 3)
output = relay.Tuple([call_6125,])
output2 = relay.Tuple([call_6126,])
func_6140 = relay.Function([], output)
mod['func_6140'] = func_6140
mod = relay.transform.InferType()(mod)
mutated_mod['func_6140'] = func_6140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6140_call = mutated_mod.get_global_var('func_6140')
call_6141 = func_6140_call()
output = call_6141
func_6142 = relay.Function([], output)
mutated_mod['func_6142'] = func_6142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5875_call = mod.get_global_var('func_5875')
func_5877_call = mutated_mod.get_global_var('func_5877')
call_6143 = relay.TupleGetItem(func_5875_call(), 0)
call_6144 = relay.TupleGetItem(func_5877_call(), 0)
output = relay.Tuple([call_6143,])
output2 = relay.Tuple([call_6144,])
func_6148 = relay.Function([], output)
mod['func_6148'] = func_6148
mod = relay.transform.InferType()(mod)
output = func_6148()
func_6149 = relay.Function([], output)
mutated_mod['func_6149'] = func_6149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5031_call = mod.get_global_var('func_5031')
func_5033_call = mutated_mod.get_global_var('func_5033')
call_6174 = relay.TupleGetItem(func_5031_call(), 0)
call_6175 = relay.TupleGetItem(func_5033_call(), 0)
output = call_6174
output2 = call_6175
func_6187 = relay.Function([], output)
mod['func_6187'] = func_6187
mod = relay.transform.InferType()(mod)
output = func_6187()
func_6188 = relay.Function([], output)
mutated_mod['func_6188'] = func_6188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6082_call = mod.get_global_var('func_6082')
func_6083_call = mutated_mod.get_global_var('func_6083')
call_6213 = func_6082_call()
call_6214 = func_6082_call()
uop_6215 = relay.cosh(call_6213.astype('float64')) # shape=(1, 16, 15)
uop_6217 = relay.cosh(call_6214.astype('float64')) # shape=(1, 16, 15)
func_5223_call = mod.get_global_var('func_5223')
func_5226_call = mutated_mod.get_global_var('func_5226')
const_6219 = relay.const([[8,6,-3,3,5,-9,-3,2,10,-8,-4,-6,-3,-8,1,-9,-3,-7,8,-10,-1,3,-10,3,6,-8,6,-7],[3,4,-7,-4,-7,-7,-3,9,6,8,-6,-7,2,-5,9,5,-7,-7,1,-5,4,-3,-8,9,-6,-1,-9,7],[6,-8,-3,-9,4,-7,9,5,-3,-10,-3,-5,7,-1,8,8,1,-1,10,9,9,-3,7,2,6,-8,-3,8],[-3,-8,9,7,1,6,-1,9,10,-8,8,4,-4,-3,-9,8,-1,5,2,4,3,7,7,-3,8,2,3,-9],[2,7,6,5,2,1,-5,7,5,1,-10,8,8,-3,8,10,-6,3,-2,1,-10,8,-5,3,-9,-1,9,-6],[-9,-9,-2,9,6,2,-8,-2,5,-4,-4,-2,9,1,-3,6,7,9,4,9,-9,8,6,-8,9,-1,6,6],[-7,5,6,-1,7,-4,9,-1,-4,6,8,-1,3,-1,-5,6,4,1,-5,2,-2,2,-10,8,3,-6,-7,9],[-8,10,-7,-5,-10,-2,-7,-6,3,-10,3,8,3,9,10,-1,10,2,-10,2,-3,4,1,1,-7,8,9,8]], dtype = "uint16")#candidate|6219|(8, 28)|const|uint16
call_6218 = relay.TupleGetItem(func_5223_call(relay.reshape(const_6219.astype('uint16'), [7, 4, 8]), relay.reshape(const_6219.astype('uint16'), [7, 4, 8]), ), 2)
call_6220 = relay.TupleGetItem(func_5226_call(relay.reshape(const_6219.astype('uint16'), [7, 4, 8]), relay.reshape(const_6219.astype('uint16'), [7, 4, 8]), ), 2)
output = relay.Tuple([uop_6215,call_6218,const_6219,])
output2 = relay.Tuple([uop_6217,call_6220,const_6219,])
func_6229 = relay.Function([], output)
mod['func_6229'] = func_6229
mod = relay.transform.InferType()(mod)
output = func_6229()
func_6230 = relay.Function([], output)
mutated_mod['func_6230'] = func_6230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5425_call = mod.get_global_var('func_5425')
func_5427_call = mutated_mod.get_global_var('func_5427')
call_6236 = relay.TupleGetItem(func_5425_call(), 2)
call_6237 = relay.TupleGetItem(func_5427_call(), 2)
func_3727_call = mod.get_global_var('func_3727')
func_3729_call = mutated_mod.get_global_var('func_3729')
const_6239 = relay.const([[-5,-8,4,2,-6,-3,-3,-10,8,2,8,10,-8,-7,-4,9,-7,4,5,-3],[-6,-7,-1,-7,-7,-2,-10,-3,3,-5,-4,-6,1,4,7,1,6,-4,7,3]], dtype = "int16")#candidate|6239|(2, 20)|const|int16
call_6238 = func_3727_call(relay.reshape(const_6239.astype('int16'), [4, 2, 5]))
call_6240 = func_3727_call(relay.reshape(const_6239.astype('int16'), [4, 2, 5]))
func_5031_call = mod.get_global_var('func_5031')
func_5033_call = mutated_mod.get_global_var('func_5033')
call_6273 = relay.TupleGetItem(func_5031_call(), 0)
call_6274 = relay.TupleGetItem(func_5033_call(), 0)
output = relay.Tuple([call_6236,call_6238,const_6239,call_6273,])
output2 = relay.Tuple([call_6237,call_6240,const_6239,call_6274,])
func_6280 = relay.Function([], output)
mod['func_6280'] = func_6280
mod = relay.transform.InferType()(mod)
mutated_mod['func_6280'] = func_6280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6280_call = mutated_mod.get_global_var('func_6280')
call_6281 = func_6280_call()
output = call_6281
func_6282 = relay.Function([], output)
mutated_mod['func_6282'] = func_6282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5729_call = mod.get_global_var('func_5729')
func_5730_call = mutated_mod.get_global_var('func_5730')
call_6320 = relay.TupleGetItem(func_5729_call(), 2)
call_6321 = relay.TupleGetItem(func_5730_call(), 2)
output = call_6320
output2 = call_6321
func_6328 = relay.Function([], output)
mod['func_6328'] = func_6328
mod = relay.transform.InferType()(mod)
output = func_6328()
func_6329 = relay.Function([], output)
mutated_mod['func_6329'] = func_6329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6090_call = mod.get_global_var('func_6090')
func_6091_call = mutated_mod.get_global_var('func_6091')
call_6368 = relay.TupleGetItem(func_6090_call(), 0)
call_6369 = relay.TupleGetItem(func_6091_call(), 0)
func_6090_call = mod.get_global_var('func_6090')
func_6091_call = mutated_mod.get_global_var('func_6091')
call_6379 = relay.TupleGetItem(func_6090_call(), 0)
call_6380 = relay.TupleGetItem(func_6091_call(), 0)
output = relay.Tuple([call_6368,call_6379,])
output2 = relay.Tuple([call_6369,call_6380,])
func_6389 = relay.Function([], output)
mod['func_6389'] = func_6389
mod = relay.transform.InferType()(mod)
output = func_6389()
func_6390 = relay.Function([], output)
mutated_mod['func_6390'] = func_6390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5031_call = mod.get_global_var('func_5031')
func_5033_call = mutated_mod.get_global_var('func_5033')
call_6437 = relay.TupleGetItem(func_5031_call(), 0)
call_6438 = relay.TupleGetItem(func_5033_call(), 0)
output = call_6437
output2 = call_6438
func_6445 = relay.Function([], output)
mod['func_6445'] = func_6445
mod = relay.transform.InferType()(mod)
mutated_mod['func_6445'] = func_6445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6445_call = mutated_mod.get_global_var('func_6445')
call_6446 = func_6445_call()
output = call_6446
func_6447 = relay.Function([], output)
mutated_mod['func_6447'] = func_6447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5927_call = mod.get_global_var('func_5927')
func_5928_call = mutated_mod.get_global_var('func_5928')
call_6451 = relay.TupleGetItem(func_5927_call(), 1)
call_6452 = relay.TupleGetItem(func_5928_call(), 1)
output = call_6451
output2 = call_6452
func_6482 = relay.Function([], output)
mod['func_6482'] = func_6482
mod = relay.transform.InferType()(mod)
mutated_mod['func_6482'] = func_6482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6482_call = mutated_mod.get_global_var('func_6482')
call_6483 = func_6482_call()
output = call_6483
func_6484 = relay.Function([], output)
mutated_mod['func_6484'] = func_6484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6328_call = mod.get_global_var('func_6328')
func_6329_call = mutated_mod.get_global_var('func_6329')
call_6563 = func_6328_call()
call_6564 = func_6328_call()
func_4175_call = mod.get_global_var('func_4175')
func_4183_call = mutated_mod.get_global_var('func_4183')
var_6585 = relay.var("var_6585", dtype = "uint32", shape = (1, 112))#candidate|6585|(1, 112)|var|uint32
var_6586 = relay.var("var_6586", dtype = "int16", shape = (40,))#candidate|6586|(40,)|var|int16
const_6587 = relay.const([-7.415569,3.685702,-4.908480,-9.108734,6.072920,-8.135316,7.736458,-2.495722,-3.870970,7.081298,-0.032590,3.151537,-2.652317,-0.970838,9.855479,-3.518643,1.557900,0.866473,-4.099381,0.065348,-0.646460,-2.258927,7.605097,7.654572,6.673119,4.015603,6.860588,2.965677,-4.062475,-5.117294,7.230699,8.867645,-6.560454,-6.565894,-8.185708,-1.873143,0.678132,-8.276747,5.777903,-6.003225,6.815631,-9.985224,-2.979979,-1.513423,-2.502753,-0.457677,-5.897236,-4.587936,4.968161,5.273623,-7.156267,-8.152210,-7.546618,-1.009243,-6.735412,5.760737,-6.177330,3.184158,2.832957,5.554880,-5.256711,1.085313,1.602344,7.317032,-4.741215,3.537766,-2.848102,-2.240058,-7.101453,-9.840782,-4.735769,-2.650322,-5.542873,5.693551,-8.057778,9.640185,7.178765,6.430132], dtype = "float32")#candidate|6587|(78,)|const|float32
var_6588 = relay.var("var_6588", dtype = "float64", shape = (882,))#candidate|6588|(882,)|var|float64
const_6589 = relay.const([-3.963029,-4.555907,1.285123,9.047788,-5.244967,1.057883,4.806881,-5.257919,9.071803,-8.681216,-9.494815,-4.273987,-1.000953,6.143975,-7.840653,2.356964,6.609932,2.973088,7.513695,-1.080007,4.765828,-4.539611,-9.813754,-1.608358,-2.789464,-6.360834,-8.707548,2.427072,-2.753250,-7.030127,-4.764752,9.990744,9.607972,7.220372,-8.017344,9.553861,1.321507,-6.670493,-2.973435,1.349813,-9.329057,-3.698222,-9.901577,7.540163,-9.185875,5.702743,-3.771459,-8.262190,-1.001586,-5.698683,0.604697,-2.099112,7.066872,6.466042,9.491355,-5.074942,-2.567576,-2.080797,-0.753553,-5.611105,4.659409,-5.091119,-3.876271,6.502076,-9.659273,7.068202,0.061355,-3.323833,0.172973,9.813969,-3.142232,-3.002798,-9.185837,-8.340134,-3.182875,5.649661,-9.842727,5.858647,5.646264,8.466651,-3.746603,9.285662,-6.052190,-2.885259,5.002644,-9.866458,0.423833,4.471524,8.123919,6.211639,-4.003390,6.787779,-8.010851,3.741915,-9.345670,5.657243,-5.600730,-7.524054,-0.877998,-7.697231,-3.226424,8.491192,3.038042,6.884444,-2.938023,-5.056410,-5.339457,-4.981346,2.889001,-0.742117,-6.020163,-8.709946,-0.095450,-0.319869,-2.504570,6.735925,3.126874,-4.786213,4.589296,-8.346907,-6.112627,-0.206088,-2.136299,5.424012,-8.519453,8.322653,7.039472,0.685863,7.686083,-3.166916,-2.811939,-9.896757,1.550195,-8.849283,2.359973,-3.455710,-1.895675,-6.339216,1.456700,-9.709689,2.349356,2.177436,0.709595,-1.998656,-8.635116,-6.831897,-2.769793,-1.495633,-5.288413,-6.648196,0.653163,3.032402,7.728666,0.236884,-0.458748,1.186696,2.608192,-5.449335,7.087470,7.474178,-9.777631,8.093136,2.705844,-5.768322,-1.753296,2.271911,8.411687,4.202136,-2.192810,-6.154007,-0.706113,-9.367200,-1.716003,7.105164,9.056616,1.808645,-9.222776,6.150631,-8.537374,2.538626,-1.110585,5.211344,-2.213666,7.721926,6.539643,2.274725,4.253519,3.409564,-2.284796,7.528343,-2.515989,0.594835,5.320892,-1.141700,-9.095345,4.446311,-6.012416,9.262126,3.580575,2.841074,-8.028703,4.741997,-6.773412,8.437567,9.736633,-4.583483,8.731389,-7.834321,-4.802510,-2.748406,6.035976,-1.047374,-7.649623,-7.819691,-9.690857,-9.910940,-1.611548,-6.370602,1.574480,4.813323,-9.152775,-8.371583,-9.806067,8.845137,7.225393,5.863173,0.582531,-7.507777,6.824314,8.400625,-7.278381,-4.368897,0.189021,5.559564,-9.199441,0.824354,-5.880263,-0.261834,1.459150,-6.000030,-2.495684,2.772775,2.127007,7.008001,-3.207550,-5.090747,6.079543,1.169199,4.150693,2.797881,6.884091,-0.880248,-5.847590,-4.931572,-4.071680,-2.868933,3.087676,-2.963835,2.408043,1.334571,2.062078,-1.878847,7.790372,7.227128,-1.413398,-0.088928,-8.406458,6.922428,-1.910916,-9.324115,-6.346668,9.798404,-2.584896,-3.392560,0.088103,7.115563,5.120357,7.820886,8.013845,9.401879,1.985060,1.025713,9.894144,-6.929456,0.162197,-7.488668,3.405242,7.116483,-1.123478,3.303738,2.782854,-5.518055,-9.587713,4.155007,-6.075444,9.708821,1.192091,6.955432,-6.115445,-1.672312,-5.112920,9.869692,-8.272847,1.104698,9.535415,-2.606185,9.367509,4.352398,9.848091,2.525405,-2.743164,2.336526,-3.920309,-7.145089,6.224463,-9.079155,5.137544,8.509724,-6.842690,-6.791521,-9.681203,-5.677615,0.486253,8.270302,4.220006,6.953335,-3.967979,2.252818,6.661818,1.860277,-3.614703,1.644700,8.572822,6.055365,2.248874,0.263437,-8.650748,-1.859472,-5.055522,-6.685204,-9.301851,6.963842,3.933740,6.936267,-0.331568,1.702651,-6.564353,-1.357646,1.186597,4.612687,-9.377575,-3.854542,8.108333,-2.221007,0.600765,6.806546,-9.880758,-6.809858,6.507304,5.198235,-4.140915,-9.333221,6.432304,-9.120367,-6.179758,9.110303,1.047058,3.696298,-5.074565,-1.714595,4.635976,-3.150574,-9.946958,2.955414,-8.299261,6.231323,6.292972,-7.872497,-8.157920,1.772339,-8.068270,4.107198,1.813773,-0.015505,6.063395,8.145825,-8.048020,-6.929112,-5.301993,-8.678853,-3.071711,6.552398,5.102224,-2.786523,-9.540717,-4.450987,7.135616,-3.242408,0.090965,-5.410158,6.699473,6.781243,0.442580,-9.463815,5.407458,6.859704,-7.341355,2.415098,-5.067657,-6.899228,6.444140,6.861825,-6.689609,0.746289,7.274835,-8.862070,2.999741,-4.537366,-3.411648,-5.365331,-3.425491,3.573758,-4.176968,-7.659446,1.340577,-2.879839,-6.855454,1.503591,3.072445,-0.079334,-4.618794,-6.963610], dtype = "float64")#candidate|6589|(432,)|const|float64
call_6584 = relay.TupleGetItem(func_4175_call(relay.reshape(var_6585.astype('uint32'), [8, 2, 7]), relay.reshape(var_6585.astype('uint32'), [8, 2, 7]), relay.reshape(var_6586.astype('int16'), [40,]), relay.reshape(const_6587.astype('float32'), [78,]), relay.reshape(var_6588.astype('float64'), [882,]), relay.reshape(const_6589.astype('float64'), [432,]), ), 10)
call_6590 = relay.TupleGetItem(func_4183_call(relay.reshape(var_6585.astype('uint32'), [8, 2, 7]), relay.reshape(var_6585.astype('uint32'), [8, 2, 7]), relay.reshape(var_6586.astype('int16'), [40,]), relay.reshape(const_6587.astype('float32'), [78,]), relay.reshape(var_6588.astype('float64'), [882,]), relay.reshape(const_6589.astype('float64'), [432,]), ), 10)
func_6229_call = mod.get_global_var('func_6229')
func_6230_call = mutated_mod.get_global_var('func_6230')
call_6593 = relay.TupleGetItem(func_6229_call(), 2)
call_6594 = relay.TupleGetItem(func_6230_call(), 2)
var_6602 = relay.var("var_6602", dtype = "uint16", shape = (8, 28))#candidate|6602|(8, 28)|var|uint16
bop_6603 = relay.floor_mod(call_6593.astype('float32'), relay.reshape(var_6602.astype('float32'), relay.shape_of(call_6593))) # shape=(8, 28)
bop_6606 = relay.floor_mod(call_6594.astype('float32'), relay.reshape(var_6602.astype('float32'), relay.shape_of(call_6594))) # shape=(8, 28)
func_1337_call = mod.get_global_var('func_1337')
func_1340_call = mutated_mod.get_global_var('func_1340')
var_6608 = relay.var("var_6608", dtype = "float64", shape = (12,))#candidate|6608|(12,)|var|float64
call_6607 = relay.TupleGetItem(func_1337_call(relay.reshape(var_6608.astype('float64'), [1, 4, 3])), 0)
call_6609 = relay.TupleGetItem(func_1340_call(relay.reshape(var_6608.astype('float64'), [1, 4, 3])), 0)
const_6612 = relay.const([[[-8.938132,4.068316,9.698312,1.814625,2.539021,4.324815,4.570780,9.040311,1.966901,4.841970,-1.552073,5.391725,1.650114,-8.787668,-6.155877,-5.410933],[-8.557098,-2.515122,-2.563425,8.994028,-4.473785,-5.974364,4.695267,-1.816924,-4.232228,5.288733,-1.338552,1.983125,8.952482,-4.640585,3.253409,-3.790533],[-1.404429,-8.693656,-2.786133,1.536236,-3.688615,-4.833622,0.980917,-2.601894,-5.918835,-0.360849,-7.604968,7.157978,2.835952,4.044411,-2.017025,-9.592895],[-7.914631,6.861860,-1.134939,-9.791292,-9.001551,9.067702,0.969958,5.873740,1.103553,-5.536897,-8.984053,5.954323,4.625757,-3.165045,-7.088480,7.078806],[2.375383,-0.806723,8.025788,-6.801348,5.789934,8.865461,0.191931,5.163689,-3.878117,-3.273038,2.062968,-8.025104,-5.305502,-8.310604,0.214691,-2.934580],[-9.927986,-9.182241,0.642303,3.632995,-3.398122,6.439689,-1.811989,-9.239700,-7.161275,5.966681,-3.577806,7.757066,-6.408106,-4.318172,0.770023,7.323928],[6.523744,7.490183,-7.021287,3.328971,3.486348,4.773247,4.152484,-3.898734,-1.568814,6.450312,8.469798,-5.914070,-3.926503,8.046424,1.411711,0.912644],[-5.308559,6.119974,-8.012469,-4.837071,4.674624,2.511107,8.725842,-7.542908,9.310424,2.590354,-0.569324,-9.545569,-9.121575,-6.391814,-1.967756,-1.519506],[-5.465868,-5.260295,-0.780171,-9.056430,-9.114884,9.255711,7.113205,1.390358,8.249926,1.184229,-6.688953,3.139216,3.884392,-2.025799,9.464980,7.564186],[-1.493651,-6.268186,-8.643152,-4.638646,-1.989373,-9.548987,-6.551696,-1.510183,-6.031163,2.378561,-4.422216,7.566419,1.160444,5.990166,-7.523243,-5.751993]],[[-3.801626,-0.004941,-9.953000,0.526519,-6.756391,-2.535919,-2.849024,-3.290495,8.385681,3.047273,-8.850431,5.864341,4.327263,7.184977,4.777465,-1.885918],[-0.189874,-6.487052,-6.842556,-7.455866,-2.937635,5.055416,3.419068,4.464205,2.910148,-8.297972,-2.230871,8.177766,5.845280,0.490747,0.351673,-7.465841],[-7.803428,-9.360531,9.561867,1.090175,1.995427,-6.708538,5.050486,4.559581,-4.580868,-4.946154,-3.034431,-8.672705,-2.845925,-6.343411,-0.069207,-7.650777],[-0.164963,6.056250,5.843533,3.834264,2.251491,5.961398,7.365438,2.292145,1.450973,-7.321375,-5.320250,2.609496,7.074631,-1.472717,-0.869139,-4.101043],[0.508084,-6.793138,7.030158,2.078708,5.168436,2.650676,-7.201191,9.630767,-6.794079,9.005973,-8.555256,-7.430041,-5.174156,2.878302,5.052991,5.240992],[3.867114,8.020640,7.048089,3.660555,9.876853,-8.009648,-0.995708,1.206589,5.908744,0.179457,5.913480,5.399965,-9.541743,6.146523,6.282424,-9.316908],[-0.139177,4.142468,-7.148732,1.829738,4.958346,2.618104,1.844614,-8.582912,5.775271,-1.456031,7.160744,2.239889,3.232226,9.923105,6.710702,6.610639],[1.832851,-6.322568,-5.804493,-6.507874,3.419929,4.446815,-1.786471,9.888156,5.782553,4.781277,-2.772905,-3.944603,2.907466,-5.901192,7.633668,-4.570332],[-4.763922,-2.492066,-1.458817,-3.915881,5.511272,-6.767814,4.740308,2.010825,-4.003375,-5.630030,9.951006,-4.068252,-4.331736,-8.991801,-3.879669,2.865667],[0.787103,2.067238,-4.150794,9.644964,8.463090,9.080553,1.962872,5.316068,4.592727,-7.382299,-6.225654,2.932485,5.222453,-2.950805,3.819921,-7.309768]],[[-6.604360,-4.275215,9.548750,-0.910922,-0.816825,-1.819104,-1.173241,0.724308,6.062311,5.706865,-0.685721,-2.421591,-2.306532,8.639732,-2.436974,-8.673440],[-7.039830,9.564842,-1.155029,-2.886758,-5.734536,-0.734358,4.839366,-7.854541,-1.664601,-0.226712,9.004845,-3.601069,-8.932159,6.054806,-0.680581,2.236096],[-3.670200,-1.954047,-8.539447,6.286622,2.488279,9.803881,3.875593,6.318653,9.951819,-4.675904,8.695023,-5.771289,0.713055,-5.853087,5.464678,-4.404395],[9.389910,-6.833291,1.208281,-9.047110,-5.133134,2.373408,8.209113,4.985468,8.682856,1.504119,-7.766952,-0.892888,6.127614,6.988084,-6.306332,0.480326],[5.598987,9.019634,9.861936,5.978536,1.601597,-7.941635,-9.800773,-6.034384,5.859889,-2.371112,5.243059,5.348579,7.836715,-0.680320,-9.287249,2.529860],[7.073295,7.466354,-2.230971,-0.117384,7.485700,2.424746,-4.362003,9.570170,5.915394,-0.136179,-4.514719,-1.402637,-7.320158,0.369202,-3.150327,-6.583537],[1.428060,-8.553311,4.003243,-4.185409,8.509627,-5.316764,1.311291,-9.769101,1.219863,0.923452,-2.555593,3.822350,-5.371515,-5.155656,-2.004694,6.061037],[-4.473575,8.593075,-5.701356,-6.332575,1.429888,-4.882308,5.121788,-0.194797,9.519368,-2.976820,0.115032,-5.836818,4.221898,-6.217149,-9.288350,1.869867],[7.823767,-6.708699,-9.509420,-1.120132,5.943886,-0.672063,5.848143,9.913469,4.367566,-9.756882,3.109200,-8.313814,2.974050,-4.256499,-8.418299,-4.668372],[9.995486,-5.511094,-1.876298,1.965383,3.821028,-6.719192,-5.930376,5.400567,0.965514,-7.781622,-2.315021,4.668926,8.985175,6.838461,-2.274420,-0.576124]],[[-8.221321,0.851927,2.842659,-1.143126,4.568616,1.646333,-6.304143,2.855477,-4.075628,8.021779,-5.963111,8.073162,-2.396936,-4.460090,-1.463136,-0.452427],[5.749661,7.702946,6.769857,7.228846,-2.228497,-4.500550,8.366333,2.226800,-0.855852,-8.587077,1.208521,-9.299990,0.792251,-4.826978,2.501354,-6.895505],[6.611579,0.901432,-6.027480,8.494522,8.752047,4.712808,0.344359,9.355711,2.937630,-5.392827,7.658991,4.279985,0.620693,-5.950429,-2.284265,1.857370],[1.717390,-7.369692,3.614481,-5.258460,-7.682826,3.842231,-0.885216,0.345078,7.794303,2.164807,-6.205901,6.786622,-1.502967,9.879576,-7.833837,-1.287283],[9.381200,9.025339,-0.248905,-5.983313,-1.798625,-5.584858,-3.397244,-4.403641,-3.036230,-7.347398,-5.715969,-0.271110,6.478020,-6.337955,2.335782,2.656700],[8.258214,0.028734,4.500079,-9.337296,-2.059365,-4.080311,-0.640516,-3.701375,-6.162809,-3.252129,-0.283873,-8.470632,-0.060939,2.634559,0.410087,-4.776280],[-9.883841,6.348113,6.251250,6.445117,-5.974361,-8.765977,-1.646398,5.338120,8.233178,-6.012686,9.268585,-6.654840,5.652188,5.660539,-7.805259,7.052791],[2.940345,-3.949308,2.866076,-4.206829,-9.486678,-0.998421,5.131312,5.817666,2.419107,-3.033455,-8.064414,-9.440628,3.388149,4.052621,-5.818971,-2.127560],[5.780367,-4.628896,-7.628374,-7.936536,-2.907789,3.576197,7.901274,-7.453122,-2.179109,5.689949,1.005562,-6.602401,5.780272,7.519901,2.014947,5.761382],[-0.804414,6.458208,1.555473,3.746132,-4.222214,9.729158,-6.886025,3.255038,6.600738,2.813253,-4.555415,0.844683,2.035670,1.180421,-0.048023,3.738820]],[[8.013087,0.729576,1.789155,-3.123134,2.643772,1.355545,3.082577,0.393510,5.601249,-1.991755,-4.754648,4.086969,-1.289337,-1.952417,7.682915,4.976980],[-8.392286,7.601485,-8.261818,-5.846095,-0.385094,1.993213,-0.924395,-5.826012,5.436163,0.371164,-0.273384,-4.869051,-4.770944,5.660044,-3.275695,-7.850358],[6.286340,-3.560613,7.482518,9.913613,-7.369795,7.470137,1.081162,-0.760090,-3.066954,3.806156,-0.603499,9.101567,-9.744886,2.626617,-0.786884,-9.353370],[0.853108,2.918897,7.562193,-5.483765,3.062165,-1.165250,4.358825,7.473295,-2.901249,-1.182684,-6.513972,6.675683,-2.377650,-9.229624,-9.263156,-3.285647],[5.142911,-1.625717,1.776405,3.318845,4.821286,9.886127,-2.766187,-1.443979,6.701096,-4.009934,1.158629,6.302875,-0.735136,-0.298442,-2.779766,-8.828909],[-3.827000,-6.337621,-6.036519,-4.916993,0.929614,-5.636949,-3.976925,-6.518494,-4.627338,-5.553842,1.923678,5.435264,8.127314,-5.645819,4.399428,7.237794],[-7.689925,8.787487,0.805221,-8.943240,9.626156,1.039569,3.166393,-5.224186,-7.219305,7.267706,-5.733328,1.460539,-9.862176,6.061680,-8.953818,5.580432],[-1.713225,7.172530,-0.684882,-7.877485,6.164239,-3.341259,4.362534,-7.950990,6.414949,9.019403,-9.158088,6.382873,1.386956,-9.196215,2.539421,-0.411739],[-5.773318,-2.610560,1.664488,3.477855,-9.273786,0.574517,-6.092532,6.229258,-5.474751,4.994012,3.470857,6.453038,0.227393,-1.775422,-6.191367,-0.535032],[0.805156,8.433009,7.426913,3.447181,-4.200850,5.097036,-2.855684,-2.669626,-3.152813,0.853275,-8.660563,-1.495051,3.155595,8.525586,9.101700,-7.355037]],[[-5.964826,8.686026,-4.547629,4.635278,3.187593,2.244123,0.705993,-6.614635,5.295724,1.045599,3.379694,0.046854,-7.788648,-4.774986,-3.707755,-2.825852],[-3.781737,-3.824346,-2.722235,-1.707010,1.453436,8.751855,2.906031,-3.664633,-7.326297,0.915772,3.321378,-3.799961,3.576778,0.789351,8.483821,-6.094933],[8.181852,0.715345,-9.522697,7.794777,6.655974,-8.992561,8.318820,-1.190177,-6.863731,0.142907,-2.137334,4.746033,-9.640255,-0.073777,9.168315,9.028348],[4.283933,-5.299109,-2.566050,4.129724,5.629604,5.716504,-3.117497,-2.779833,3.735267,-8.367241,8.040883,8.593383,-5.215385,0.469660,-0.724821,-5.345692],[5.474769,8.997589,7.165026,-7.914821,-6.914677,7.078939,6.289146,6.625816,5.404290,-7.251261,5.091634,-3.417626,8.463793,2.527806,-4.937050,-2.124670],[3.190595,-0.120999,-6.474824,0.627801,-2.105833,-9.337672,-2.229920,-1.606121,7.870793,-0.708144,-4.494403,0.769268,-3.332343,6.623774,-7.709735,9.728553],[5.866997,-4.697265,-8.608560,-9.193687,-4.082775,-8.575861,-8.941832,-4.327372,5.266042,-8.582016,4.686013,-4.520721,4.342134,4.695326,8.885433,5.456155],[-5.920738,-9.448801,2.737235,2.250526,9.809650,-3.963448,-1.390884,-5.727412,1.095919,0.577918,-9.288552,-2.467753,4.544027,9.934686,-1.305604,0.069662],[5.052418,0.860781,-4.593632,-5.053534,-9.312679,1.419202,-3.814463,6.577438,-4.874453,-4.272643,-0.050514,-8.007279,-0.049642,-2.763714,-3.960650,2.834018],[4.506314,-6.871922,1.067594,-1.720486,4.907184,-0.866929,6.293364,1.497994,-9.726410,-1.909851,4.660023,-4.290037,-9.588511,-9.941379,-3.498552,-6.897021]],[[9.313070,5.264374,-6.206082,-7.898542,6.332426,8.440449,-9.426646,9.216580,-4.825788,7.105132,-4.258890,-7.171089,-6.078361,-9.958830,-2.804446,5.431622],[3.333639,1.513326,-8.154119,-1.925157,-3.679741,-8.573116,-6.763197,-4.326415,7.174735,-8.249283,6.805502,-6.475623,-7.203442,0.095303,-8.278415,-2.470628],[4.511977,5.176625,7.241508,-3.216565,1.322575,1.838950,-1.185983,-3.552867,9.091249,0.498780,0.829393,7.748524,-4.501226,7.775731,5.212013,8.001025],[5.901215,-7.981686,-9.133156,-3.691994,3.743021,9.335036,7.390422,1.878193,5.718831,-9.354636,-2.483470,-0.763088,-3.512629,8.882396,1.137373,-0.720862],[4.542812,0.347109,6.568191,7.844336,9.300476,-0.456411,8.946642,-6.854483,3.930177,3.501756,-4.921148,-1.992581,2.296075,-5.181649,-3.729270,7.763159],[1.352156,7.613915,7.184382,3.260767,-2.637418,6.994160,9.030762,-6.920061,-8.608791,-0.538786,3.164312,2.856813,4.827672,3.881688,7.110716,0.508580],[4.450685,1.285828,-2.430920,-0.090919,5.448641,-5.953061,1.245641,3.627679,-3.909671,-3.071821,-3.293136,3.692718,9.656948,-4.965631,1.605685,5.288563],[-4.212968,6.556500,4.304455,9.850308,-6.507409,4.015842,-7.891266,2.770765,-9.026795,-1.684685,-5.296982,-4.586659,-6.993413,-3.942298,0.155678,1.230476],[-7.287370,-8.494717,-9.934343,-9.525886,9.563827,-6.524782,-5.583333,-5.922547,5.191323,-0.471038,-2.948829,1.810494,1.902214,6.310186,8.495289,-5.914474],[3.291051,0.546230,8.571677,-3.477910,2.269434,-5.912817,8.270293,-9.353398,-4.391629,-6.585476,-6.887273,9.717377,3.717220,-7.543556,7.696582,-7.770018]],[[7.953514,-3.685836,-7.216048,5.163400,9.345690,9.103661,-1.105497,3.758859,-7.228626,-6.108892,7.650390,-0.600189,-9.261992,0.277312,-8.829090,-7.746260],[7.698190,-3.506091,-1.554835,8.583976,6.268311,-3.787333,5.599510,-6.269116,9.367112,-7.962706,6.383239,0.207411,8.744997,8.507169,-5.842139,0.264459],[2.306687,7.064361,2.387982,5.498790,-8.433989,-3.449941,-2.607248,8.169130,7.664233,-1.248258,1.744848,-9.633045,3.909909,-6.439180,-8.736179,9.638623],[9.811499,6.223912,-6.399519,8.018948,-3.396803,-9.014849,9.827081,-0.752048,6.123463,3.517687,-0.497685,5.557814,1.356531,5.484289,6.532446,7.567848],[-6.790266,7.510743,-1.754660,6.680131,-4.167302,3.424659,2.920524,2.769566,-6.223769,1.740203,-0.885618,-5.096982,-3.983980,5.784538,3.525618,-3.579017],[5.024054,-1.352190,1.706517,-4.490717,0.887479,4.759907,1.665944,3.283453,1.532904,-0.971928,4.543168,3.349488,3.757625,1.508897,-0.864072,-0.489461],[2.178144,8.720097,-1.912492,-1.252500,6.159212,-6.805681,-5.851542,-5.704281,3.900324,-4.215011,-7.548803,-2.981114,-9.753508,-1.969412,-8.179185,2.415058],[2.237495,-8.295662,-5.234611,7.332603,-1.947129,2.582754,8.760620,-1.402321,-6.442206,7.452609,-1.719964,-8.331161,3.204576,3.266039,2.371586,0.052390],[8.188110,-3.062502,-0.172805,4.698455,-8.725803,-4.503705,6.083372,-5.835083,7.059811,-8.166040,5.853811,-8.243257,3.859292,-4.716789,-1.881213,6.852419],[9.525080,-0.872257,5.445954,-7.838270,-3.704120,8.670532,0.106121,2.178048,3.547880,7.402671,3.426249,0.593869,7.193483,4.768361,2.061831,-1.382785]]], dtype = "float64")#candidate|6612|(8, 10, 16)|const|float64
bop_6613 = relay.add(call_6563.astype('int8'), relay.reshape(const_6612.astype('int8'), relay.shape_of(call_6563))) # shape=(8, 10, 16)
bop_6616 = relay.add(call_6564.astype('int8'), relay.reshape(const_6612.astype('int8'), relay.shape_of(call_6564))) # shape=(8, 10, 16)
output = relay.Tuple([call_6584,var_6585,var_6586,const_6587,var_6588,const_6589,bop_6603,call_6607,var_6608,bop_6613,])
output2 = relay.Tuple([call_6590,var_6585,var_6586,const_6587,var_6588,const_6589,bop_6606,call_6609,var_6608,bop_6616,])
func_6626 = relay.Function([var_6585,var_6586,var_6588,var_6602,var_6608,], output)
mod['func_6626'] = func_6626
mod = relay.transform.InferType()(mod)
mutated_mod['func_6626'] = func_6626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6626_call = mutated_mod.get_global_var('func_6626')
var_6628 = relay.var("var_6628", dtype = "uint32", shape = (1, 112))#candidate|6628|(1, 112)|var|uint32
var_6629 = relay.var("var_6629", dtype = "int16", shape = (40,))#candidate|6629|(40,)|var|int16
var_6630 = relay.var("var_6630", dtype = "float64", shape = (882,))#candidate|6630|(882,)|var|float64
var_6631 = relay.var("var_6631", dtype = "uint16", shape = (8, 28))#candidate|6631|(8, 28)|var|uint16
var_6632 = relay.var("var_6632", dtype = "float64", shape = (12,))#candidate|6632|(12,)|var|float64
call_6627 = func_6626_call(var_6628,var_6629,var_6630,var_6631,var_6632,)
output = call_6627
func_6633 = relay.Function([var_6628,var_6629,var_6630,var_6631,var_6632,], output)
mutated_mod['func_6633'] = func_6633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6090_call = mod.get_global_var('func_6090')
func_6091_call = mutated_mod.get_global_var('func_6091')
call_6664 = relay.TupleGetItem(func_6090_call(), 0)
call_6665 = relay.TupleGetItem(func_6091_call(), 0)
output = call_6664
output2 = call_6665
func_6679 = relay.Function([], output)
mod['func_6679'] = func_6679
mod = relay.transform.InferType()(mod)
mutated_mod['func_6679'] = func_6679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6679_call = mutated_mod.get_global_var('func_6679')
call_6680 = func_6679_call()
output = call_6680
func_6681 = relay.Function([], output)
mutated_mod['func_6681'] = func_6681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6445_call = mod.get_global_var('func_6445')
func_6447_call = mutated_mod.get_global_var('func_6447')
call_6709 = func_6445_call()
call_6710 = func_6445_call()
var_6717 = relay.var("var_6717", dtype = "float64", shape = (3, 11, 11))#candidate|6717|(3, 11, 11)|var|float64
bop_6718 = relay.floor_divide(call_6709.astype('float32'), relay.reshape(var_6717.astype('float32'), relay.shape_of(call_6709))) # shape=(3, 11, 11)
bop_6721 = relay.floor_divide(call_6710.astype('float32'), relay.reshape(var_6717.astype('float32'), relay.shape_of(call_6710))) # shape=(3, 11, 11)
func_2182_call = mod.get_global_var('func_2182')
func_2185_call = mutated_mod.get_global_var('func_2185')
var_6730 = relay.var("var_6730", dtype = "float64", shape = (96,))#candidate|6730|(96,)|var|float64
call_6729 = relay.TupleGetItem(func_2182_call(relay.reshape(var_6730.astype('float64'), [2, 6, 8]), relay.reshape(var_6730.astype('float64'), [2, 6, 8]), ), 2)
call_6731 = relay.TupleGetItem(func_2185_call(relay.reshape(var_6730.astype('float64'), [2, 6, 8]), relay.reshape(var_6730.astype('float64'), [2, 6, 8]), ), 2)
output = relay.Tuple([bop_6718,call_6729,var_6730,])
output2 = relay.Tuple([bop_6721,call_6731,var_6730,])
func_6734 = relay.Function([var_6717,var_6730,], output)
mod['func_6734'] = func_6734
mod = relay.transform.InferType()(mod)
mutated_mod['func_6734'] = func_6734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6734_call = mutated_mod.get_global_var('func_6734')
var_6736 = relay.var("var_6736", dtype = "float64", shape = (3, 11, 11))#candidate|6736|(3, 11, 11)|var|float64
var_6737 = relay.var("var_6737", dtype = "float64", shape = (96,))#candidate|6737|(96,)|var|float64
call_6735 = func_6734_call(var_6736,var_6737,)
output = call_6735
func_6738 = relay.Function([var_6736,var_6737,], output)
mutated_mod['func_6738'] = func_6738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5425_call = mod.get_global_var('func_5425')
func_5427_call = mutated_mod.get_global_var('func_5427')
call_6742 = relay.TupleGetItem(func_5425_call(), 2)
call_6743 = relay.TupleGetItem(func_5427_call(), 2)
output = call_6742
output2 = call_6743
func_6760 = relay.Function([], output)
mod['func_6760'] = func_6760
mod = relay.transform.InferType()(mod)
output = func_6760()
func_6761 = relay.Function([], output)
mutated_mod['func_6761'] = func_6761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6140_call = mod.get_global_var('func_6140')
func_6142_call = mutated_mod.get_global_var('func_6142')
call_6776 = relay.TupleGetItem(func_6140_call(), 0)
call_6777 = relay.TupleGetItem(func_6142_call(), 0)
func_6082_call = mod.get_global_var('func_6082')
func_6083_call = mutated_mod.get_global_var('func_6083')
call_6778 = func_6082_call()
call_6779 = func_6082_call()
func_2182_call = mod.get_global_var('func_2182')
func_2185_call = mutated_mod.get_global_var('func_2185')
var_6791 = relay.var("var_6791", dtype = "float64", shape = (96,))#candidate|6791|(96,)|var|float64
call_6790 = relay.TupleGetItem(func_2182_call(relay.reshape(var_6791.astype('float64'), [2, 6, 8]), relay.reshape(var_6791.astype('float64'), [2, 6, 8]), ), 0)
call_6792 = relay.TupleGetItem(func_2185_call(relay.reshape(var_6791.astype('float64'), [2, 6, 8]), relay.reshape(var_6791.astype('float64'), [2, 6, 8]), ), 0)
uop_6796 = relay.acos(call_6778.astype('float64')) # shape=(1, 16, 15)
uop_6798 = relay.acos(call_6779.astype('float64')) # shape=(1, 16, 15)
func_3471_call = mod.get_global_var('func_3471')
func_3474_call = mutated_mod.get_global_var('func_3474')
var_6813 = relay.var("var_6813", dtype = "float32", shape = (78,))#candidate|6813|(78,)|var|float32
var_6814 = relay.var("var_6814", dtype = "float64", shape = (882,))#candidate|6814|(882,)|var|float64
call_6812 = relay.TupleGetItem(func_3471_call(relay.reshape(var_6813.astype('float32'), [2, 3, 13]), relay.reshape(var_6814.astype('float64'), [882,]), ), 0)
call_6815 = relay.TupleGetItem(func_3474_call(relay.reshape(var_6813.astype('float32'), [2, 3, 13]), relay.reshape(var_6814.astype('float64'), [882,]), ), 0)
uop_6820 = relay.acosh(uop_6796.astype('float64')) # shape=(1, 16, 15)
uop_6822 = relay.acosh(uop_6798.astype('float64')) # shape=(1, 16, 15)
output = relay.Tuple([call_6776,call_6790,var_6791,call_6812,var_6813,var_6814,uop_6820,])
output2 = relay.Tuple([call_6777,call_6792,var_6791,call_6815,var_6813,var_6814,uop_6822,])
func_6823 = relay.Function([var_6791,var_6813,var_6814,], output)
mod['func_6823'] = func_6823
mod = relay.transform.InferType()(mod)
mutated_mod['func_6823'] = func_6823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6823_call = mutated_mod.get_global_var('func_6823')
var_6825 = relay.var("var_6825", dtype = "float64", shape = (96,))#candidate|6825|(96,)|var|float64
var_6826 = relay.var("var_6826", dtype = "float32", shape = (78,))#candidate|6826|(78,)|var|float32
var_6827 = relay.var("var_6827", dtype = "float64", shape = (882,))#candidate|6827|(882,)|var|float64
call_6824 = func_6823_call(var_6825,var_6826,var_6827,)
output = call_6824
func_6828 = relay.Function([var_6825,var_6826,var_6827,], output)
mutated_mod['func_6828'] = func_6828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mod.get_global_var('func_5142')
func_5143_call = mutated_mod.get_global_var('func_5143')
call_6879 = relay.TupleGetItem(func_5142_call(), 1)
call_6880 = relay.TupleGetItem(func_5143_call(), 1)
func_6626_call = mod.get_global_var('func_6626')
func_6633_call = mutated_mod.get_global_var('func_6633')
var_6886 = relay.var("var_6886", dtype = "uint32", shape = (112,))#candidate|6886|(112,)|var|uint32
const_6887 = relay.const([7,2,-6,-3,-4,3,-8,-10,-6,7,4,6,10,10,-9,7,-8,9,-10,10,-9,-7,3,-3,2,3,-1,-5,-2,-10,1,-4,6,5,-6,-9,-8,-3,2,10], dtype = "int16")#candidate|6887|(40,)|const|int16
const_6888 = relay.const([2.310246,2.424060,4.470241,4.288747,-2.346471,-9.427789,0.078628,8.043821,8.480984,4.961080,6.195613,-8.569246,7.623649,1.579039,-5.741327,1.564822,9.167544,4.016586,-9.683277,-0.480802,-9.015120,7.151017,2.046391,-1.036003,1.133033,-6.412468,-1.415992,-5.358297,-8.319052,-0.232781,8.569459,-5.109786,-8.814033,3.863835,-0.405936,5.443663,-7.399390,-8.763490,-5.143410,-7.991812,8.145807,-4.881559,5.577820,4.656719,-4.712264,7.417103,8.979164,5.261647,1.459151,-3.152757,-4.383806,0.880308,1.185782,-4.244470,-3.245170,9.592199,5.042950,-8.858243,-8.915780,-0.394367,5.106468,-2.241321,3.402856,0.850703,-1.903092,-8.490473,7.616687,0.480627,-3.695005,-1.666359,-5.363006,-3.109227,-5.554100,-0.518443,-2.587749,9.306178,-9.896679,-6.596344,0.416009,9.854574,5.720007,-5.939723,5.062815,5.965346,6.187234,-6.036363,3.100559,9.748277,8.140593,-2.413800,-8.958887,-8.879087,2.127751,-8.499970,-4.669622,-1.166817,-0.876664,-8.059872,-3.308420,2.348720,-7.930536,5.958145,-2.281136,4.213946,4.397027,1.094927,1.258775,-5.422390,-1.404843,-2.427849,-1.852664,-9.677673,4.128478,-1.092753,1.466318,-1.725035,-2.493593,0.824740,-8.944340,-8.033280,1.345407,-0.802079,4.859643,8.157296,5.630901,-4.246377,5.421559,-8.746805,-7.662394,-3.367265,-3.409750,8.731914,6.746836,0.037799,7.795064,1.044639,9.015566,9.031167,-8.879142,-9.009870,-3.538018,-6.817618,-7.232944,9.196571,3.663061,-4.752828,-9.222110,-9.027316,-5.530217,7.383589,-6.306489,-2.324039,-3.861399,-9.411125,9.347574,1.136773,-0.478192,4.300390,-4.477042,0.995602,-9.554633,-4.552087,9.327565,-3.983726,-4.242985,2.788508,-4.937812,9.146780,9.725709,-5.634715,-8.675056,8.896245,4.878499,4.549382,3.294502,8.618455,-7.604749,-7.859292,0.641335,-3.427076,-1.654142,-4.589284,6.957429,-0.822994,1.167461,8.831525,-4.633630,-4.416176,2.842458,7.917871,-2.459203,3.791997,-8.302177,-0.476463,-8.928933,-7.369875,-2.090489,-2.193482,-4.246040,2.138554,9.412424,2.032653,7.243106,3.601474,-0.541525,6.615819,0.729351,5.609029,-3.854255,9.554369,-0.193826,8.612499,-2.220179,3.111663,-8.011148,2.047190,3.398043,1.667299,-4.471612,-9.951620,-0.772451,-2.381749,-8.493609,9.049766,1.016006,3.768980,-2.347304,8.707234,-0.332333,8.029172,3.185183,-4.103021,-6.431900,0.291439,-6.495185,9.188344,1.805746,8.002667,2.980227,-3.070505,2.081215,2.839774,-4.408587,0.336948,1.400875,-1.821877,9.345000,0.849654,-3.184329,-3.798744,-7.554765,7.523363,1.227832,0.328818,-1.424873,-5.457702,-0.532468,1.114017,-7.108036,1.621860,-9.038829,-9.274118,8.488040,7.177703,-8.977630,-5.584048,7.153319,-1.134729,-9.539960,0.896985,5.686390,7.029330,1.230791,-5.542298,0.255571,1.978632,5.357743,1.779415,-8.221032,2.253498,-8.470551,7.600380,8.606203,1.720805,-6.760855,-6.277421,-4.590059,8.743457,9.201308,0.474306,1.332786,-1.482142,-7.923128,2.354482,-1.987860,9.496099,8.162482,-3.259235,-8.445892,-3.609887,-9.886576,-5.045682,-9.876747,5.517172,7.194128,-2.802062,2.074093,-9.983921,-5.096613,-8.165124,-1.825203,-5.634365,9.999877,-0.444273,-8.056458,-2.435096,-7.259649,1.015766,-2.270064,-7.876924,9.576245,-2.058294,8.957823,-8.248665,6.090860,-6.908733,-3.336930,1.259352,1.086690,2.261102,-2.731325,-3.267602,-8.011800,-0.499031,-7.470431,-4.731640,5.228377,5.675506,6.108844,9.873992,-8.086276,-9.726311,-8.258551,-7.376083,-5.332870,1.773639,7.211993,0.913560,3.764718,-0.922955,-1.437527,9.900774,-7.582613,-5.220141,-7.618319,-6.190094,5.633613,6.474500,-1.522523,5.833144,7.402466,5.919928,-7.566099,-4.400899,-2.263091,-3.213954,6.200706,6.093742,-6.392838,-5.995831,6.235102,5.269386,6.711419,-0.514758,0.364956,-5.148534,-3.332544,7.771964,-6.812799,-3.094175,9.591538,5.781968,-5.279944,-3.416519,-6.854918,7.094896,0.005915,-3.190517,2.378054,-7.266088,-0.894726,2.172825,-3.468673,-0.516691,-1.736413,-6.189401,3.294481,-7.257718,-3.997321,-7.620529,2.328664,-2.788826,-7.227145,-8.451886,1.902855,-3.612457,3.326632,-1.287769,4.153486,9.876603,8.661245,7.707471,4.227561,-1.357475,-0.503923,6.530725,-4.091617,-8.883113,-8.177635,-5.494901,6.342424,-7.441665,-9.237979,-9.882885,8.804890,9.532219,4.743239,1.913863,-4.958481,-7.166346,-2.268279,1.921517,4.232455,5.140863,-2.741365,5.651385,8.269913,-9.265859,-8.461469,2.518792,-8.041716,-1.606614,8.145115,8.959746,3.555414,-9.190371,3.842410,-8.633036,5.631466,-3.657422,8.957814,6.249322,4.923489,-5.771776,-1.496891,5.608833,-4.224561,3.780922,7.520571,-6.495341,-6.115221,-4.133805,-0.215891,4.783598,9.098379,3.153476,1.064587,0.248301,-9.604273,5.637358,8.021303,-6.672971,-4.882661,7.112769,-2.229935,3.723054,-1.580102,-2.891286,-7.954408,-7.426116,0.620114,1.998275,-2.132141,-4.315489,-4.987927,4.775559,-8.051603,-4.669741,5.490487,6.254069,2.977419,3.761250,-7.935958,-2.156913,2.493859,-5.064633,-9.077269,5.750741,-4.262826,9.304339,0.441975,-3.906239,-0.448362,1.779634,-8.662893,0.420054,6.820419,1.105789,-6.393221,-6.667207,-4.493449,1.054783,-7.955305,4.829233,-2.047975,-5.750221,-3.840746,6.251303,8.086441,-4.777310,4.338308,2.203041,-0.421966,1.288387,-9.714098,-4.245869,-8.352661,2.922101,6.122818,-5.433639,7.568854,4.591795,0.008032,4.912331,2.005075,8.342843,3.277810,7.433467,1.945013,2.640486,0.763142,1.516688,8.127197,-6.372755,8.294422,-5.359357,8.536237,-3.569581,-0.884716,8.732968,-9.200352,1.137328,8.803314,1.440384,2.216924,-8.425843,6.989450,-6.575736,-4.288801,1.482245,9.839037,9.027149,5.055129,-2.328131,8.596386,-8.683030,-4.185312,8.805116,-2.510683,-2.740573,7.554079,-8.860265,-0.147266,2.989826,-5.494371,4.149255,-0.902989,-6.827366,-2.531960,-7.109481,4.587806,0.790004,-8.460339,0.381913,-2.889867,-5.593401,5.866721,-3.993314,2.050680,-3.482292,-4.600445,-0.383256,-2.180914,-2.731778,3.526450,-3.970375,7.098774,-0.843101,2.751483,2.676148,8.340485,8.954872,-4.228572,7.446306,-4.151682,0.844607,7.773793,4.636140,4.540654,-6.162555,-6.015391,2.775938,1.826168,2.335716,1.563740,-3.586518,-5.676195,5.713872,4.183814,4.346614,4.261936,-1.114898,-1.022751,-4.443721,6.722869,-3.702995,-1.246808,-4.131322,8.458087,-7.499717,-1.272399,6.364620,-2.080777,7.397496,1.703908,5.895027,-6.320597,0.314981,-8.122137,-6.879599,3.410167,6.510644,-8.679615,6.567055,-6.342418,-5.711785,-8.937877,0.704939,5.263677,-9.403387,4.523581,7.121346,3.120744,-3.901622,-2.364895,1.755456,7.170766,3.794110,-5.970342,4.238722,-4.465547,7.093297,-0.853526,-7.872635,-7.221511,-9.610130,-7.223072,8.483578,0.028505,9.646781,-6.479712,4.839184,-0.996193,9.743148,9.854532,3.293432,-1.514260,-1.275763,7.040610,-2.186834,4.666675,-0.486039,-4.968072,5.271396,3.609984,-3.413488,2.495178,-9.527284,-5.044498,6.784902,-5.294302,-6.484025,3.684234,6.491441,8.381888,-7.625279,1.050297,-9.201580,-7.935983,7.024014,4.991882,4.303508,4.024927,-4.214567,0.818759,1.103138,-8.177843,4.840686,-2.611234,-4.810634,-4.835960,-2.317959,1.618516,-9.339730,-6.220611,-3.597341,9.875071,-1.017748,5.121899,-0.429421,-4.771148,-1.783049,7.106892,5.279992,8.582825,8.621680,-3.151040,4.096161,3.222167,-1.039227,7.338821,5.790314,-5.489577,7.789064,-4.977217,2.821331,4.499919,1.051704,4.941380,-8.449945,-5.210222,-7.739626,2.569718,6.746576,2.801999,-5.861416,-9.133789,1.267129,3.527145,-9.247637,9.218307,3.238876,1.462488,2.246112,0.117943,4.115528,-0.667659,-5.047932,1.907202,-7.351124,2.460930,1.097099,-7.971189,7.702116,1.191823,7.104110,5.795806,6.449317,9.035194,3.422109,-4.930698,-0.724279,-2.111741,-6.499646,-1.826483,5.485967,7.156650,2.156048,5.280525,-4.251190,-0.365468,2.300929,-7.950926,3.286551,-0.332262,-9.885552,6.157835,3.411031,1.994438,-0.142203,-0.470731,-7.071644,-1.022172,2.392450,-8.491753,5.782880,8.177426,-5.672658,0.109920,2.609297,-7.265668,5.909575,-7.597556,7.805622,-2.288108,-7.782715,5.724983,7.150068,-8.458282,-0.993101,-0.957295,-2.464330,-0.685708,9.932920,-8.394761,4.497838,-0.339803,-1.787375,1.522942,-9.620871,7.547798,-2.271256,2.550884,2.666953,-5.463360,-6.251925,6.286811,-8.470787,7.931445,7.404380,-8.720891,-0.273881,3.557551,-1.688269,0.580656,5.567312,2.617231,9.061338,0.044430,-6.246685,-6.035093,-1.045131,7.306364,-3.530329,-2.525708,-1.221978,-6.019158,2.994281,-8.409847,8.766672,-7.275679,-2.491913,-7.418509,5.428186,-9.982781,-8.049529,-2.849867,-7.156568,1.152347,4.774397,1.417053,3.094041,-1.389216,1.728188,-6.427305,-5.473118,5.647840,-3.169879,1.880932,4.669900,8.232032,-6.511267,-6.888828,-7.929049,2.303693,3.519060,6.784696,6.587176,1.042209,-1.701372,3.121066,9.001489], dtype = "float64")#candidate|6888|(882,)|const|float64
var_6889 = relay.var("var_6889", dtype = "uint16", shape = (224,))#candidate|6889|(224,)|var|uint16
const_6890 = relay.const([5.647270,-8.260700,0.842054,-4.955877,-5.311963,1.870278,-3.262513,-9.599424,9.160230,0.933305,9.503910,-8.419942], dtype = "float64")#candidate|6890|(12,)|const|float64
call_6885 = relay.TupleGetItem(func_6626_call(relay.reshape(var_6886.astype('uint32'), [1, 112]), relay.reshape(const_6887.astype('int16'), [40,]), relay.reshape(const_6888.astype('float64'), [882,]), relay.reshape(var_6889.astype('uint16'), [8, 28]), relay.reshape(const_6890.astype('float64'), [12,]), ), 8)
call_6891 = relay.TupleGetItem(func_6633_call(relay.reshape(var_6886.astype('uint32'), [1, 112]), relay.reshape(const_6887.astype('int16'), [40,]), relay.reshape(const_6888.astype('float64'), [882,]), relay.reshape(var_6889.astype('uint16'), [8, 28]), relay.reshape(const_6890.astype('float64'), [12,]), ), 8)
func_5066_call = mod.get_global_var('func_5066')
func_5068_call = mutated_mod.get_global_var('func_5068')
var_6898 = relay.var("var_6898", dtype = "float32", shape = (196,))#candidate|6898|(196,)|var|float32
call_6897 = relay.TupleGetItem(func_5066_call(relay.reshape(var_6898.astype('float32'), [7, 7, 4])), 0)
call_6899 = relay.TupleGetItem(func_5068_call(relay.reshape(var_6898.astype('float32'), [7, 7, 4])), 0)
output = relay.Tuple([call_6879,call_6885,var_6886,const_6887,const_6888,var_6889,const_6890,call_6897,var_6898,])
output2 = relay.Tuple([call_6880,call_6891,var_6886,const_6887,const_6888,var_6889,const_6890,call_6899,var_6898,])
func_6901 = relay.Function([var_6886,var_6889,var_6898,], output)
mod['func_6901'] = func_6901
mod = relay.transform.InferType()(mod)
mutated_mod['func_6901'] = func_6901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6901_call = mutated_mod.get_global_var('func_6901')
var_6903 = relay.var("var_6903", dtype = "uint32", shape = (112,))#candidate|6903|(112,)|var|uint32
var_6904 = relay.var("var_6904", dtype = "uint16", shape = (224,))#candidate|6904|(224,)|var|uint16
var_6905 = relay.var("var_6905", dtype = "float32", shape = (196,))#candidate|6905|(196,)|var|float32
call_6902 = func_6901_call(var_6903,var_6904,var_6905,)
output = call_6902
func_6906 = relay.Function([var_6903,var_6904,var_6905,], output)
mutated_mod['func_6906'] = func_6906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6389_call = mod.get_global_var('func_6389')
func_6390_call = mutated_mod.get_global_var('func_6390')
call_6908 = relay.TupleGetItem(func_6389_call(), 1)
call_6909 = relay.TupleGetItem(func_6390_call(), 1)
output = call_6908
output2 = call_6909
func_6936 = relay.Function([], output)
mod['func_6936'] = func_6936
mod = relay.transform.InferType()(mod)
mutated_mod['func_6936'] = func_6936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6936_call = mutated_mod.get_global_var('func_6936')
call_6937 = func_6936_call()
output = call_6937
func_6938 = relay.Function([], output)
mutated_mod['func_6938'] = func_6938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6280_call = mod.get_global_var('func_6280')
func_6282_call = mutated_mod.get_global_var('func_6282')
call_6942 = relay.TupleGetItem(func_6280_call(), 3)
call_6943 = relay.TupleGetItem(func_6282_call(), 3)
func_3139_call = mod.get_global_var('func_3139')
func_3143_call = mutated_mod.get_global_var('func_3143')
var_6945 = relay.var("var_6945", dtype = "bool", shape = (840,))#candidate|6945|(840,)|var|bool
call_6944 = relay.TupleGetItem(func_3139_call(relay.reshape(var_6945.astype('bool'), [14, 5, 12]), relay.reshape(var_6945.astype('bool'), [14, 5, 12]), ), 0)
call_6946 = relay.TupleGetItem(func_3143_call(relay.reshape(var_6945.astype('bool'), [14, 5, 12]), relay.reshape(var_6945.astype('bool'), [14, 5, 12]), ), 0)
func_1047_call = mod.get_global_var('func_1047')
func_1049_call = mutated_mod.get_global_var('func_1049')
var_6953 = relay.var("var_6953", dtype = "float64", shape = (432, 1))#candidate|6953|(432, 1)|var|float64
call_6952 = relay.TupleGetItem(func_1047_call(relay.reshape(var_6953.astype('float64'), [9, 8, 6])), 0)
call_6954 = relay.TupleGetItem(func_1049_call(relay.reshape(var_6953.astype('float64'), [9, 8, 6])), 0)
uop_6957 = relay.cosh(var_6953.astype('float64')) # shape=(432, 1)
var_6959 = relay.var("var_6959", dtype = "float64", shape = (432, 10))#candidate|6959|(432, 10)|var|float64
bop_6960 = relay.power(uop_6957.astype('float32'), var_6959.astype('float32')) # shape=(432, 10)
func_5425_call = mod.get_global_var('func_5425')
func_5427_call = mutated_mod.get_global_var('func_5427')
call_6967 = relay.TupleGetItem(func_5425_call(), 0)
call_6968 = relay.TupleGetItem(func_5427_call(), 0)
bop_6972 = relay.bitwise_xor(bop_6960.astype('int16'), var_6953.astype('int16')) # shape=(432, 10)
func_5358_call = mod.get_global_var('func_5358')
func_5361_call = mutated_mod.get_global_var('func_5361')
const_6986 = relay.const([-6.257777,2.485387,2.827072,-4.498266,7.909212,-5.146006,3.556038,7.726569,-2.479963,0.634965,-4.914490,6.672719,8.248790,3.858402,2.799284,0.088159,-3.075591,-6.143329,-1.587431,6.804996,0.464222,-1.195366,5.511825,2.024576,7.615537,-9.066934,-4.779258,-2.567541,-7.886723,-5.956883,5.479763,3.736712,-3.415159,9.538294,-4.594717,-4.401354,-5.835567,-0.754535,2.694726,4.297363,-8.565442,-4.105916,-8.559426,-3.084482,-9.304750,-2.274711,4.979535,6.181157,6.362732,-0.655579,8.905373,-5.418972,-0.020869,5.165855,-3.842432,-0.722235,4.943144,-1.792393,-5.831910,-8.637781,4.544302,-6.018268,-1.071273,2.120185,3.797747,5.329177,-6.006678,-9.577982,-2.689902,-0.129143,2.724758,1.823803,8.662109,-9.176198,-8.878691,-4.719622,5.097443,-9.109949,7.615502,-1.747343,-3.643494,3.420128,2.490861,2.955675,-7.847086,-3.288444,-5.854502,-8.086994,1.454727,5.858930,1.542822,-3.963330,4.130206,-7.724867,-1.263879,3.529742,-0.922140,4.181579,-9.444946,6.160620,7.879982,-1.887073,1.644563,2.116470,2.596193,-7.866123,0.788071,-8.003146,-7.417222,4.920681,0.639761,3.962296,8.792549,7.690667,8.393904,-1.038575,-9.169350,-4.609295,3.738603,0.959211,6.154040,6.997439,-8.547954,4.948848,-7.446320,3.894557,2.804794,3.778940,0.554377,-5.517428,2.331206,1.949155,-0.095264,5.888504,-0.547623,-5.012856,4.509342,-4.507028,9.342004,-7.680265,-1.012314,7.015819,-6.365810,-2.062376,5.548727,-1.902053,-1.034711,7.014611,4.991324,-4.901546,6.027943,7.800256,7.467755,-9.197220,5.596599,-6.936162,-0.790270,9.043997,4.285242,-6.265152,5.766775,9.161887,7.748230,-6.974418,-7.925854,-6.148091,6.180558,-3.782882,1.102387,-6.264329,9.788464,-7.610166,-5.305198,-1.814838,9.143225,6.697952,6.936568,-6.664143,1.912086,0.984505,-6.461607,0.987474,-5.807092,-5.547182,-3.757340,-6.781285,5.414108,0.266776,3.681009,1.823707,-6.753010,2.063603,-7.018711,-9.478168,-5.135956,8.357012,4.866005,-9.743795,-6.551246,3.667422,2.917367,-7.345350,-8.296892,6.578930,0.151424,2.596014,0.843757,1.331197,-5.667278,3.176641,0.593747,5.021010,4.711697,-5.918905,-7.682804,-5.073290,-5.119614,5.202071,-9.243900,-4.704402,0.639287,5.799321,-8.678388,-0.073303,5.669732,8.514488,-9.607432,3.299323,-7.793501,4.033074,-9.465101,4.153823,-0.769613,4.411211,2.311191,-6.656944,1.479910,3.694685,-6.323687,9.637893,4.976043,4.100916,7.303450,2.560537,-2.372027,8.149523,-5.029276,6.334048,2.317435,3.257368,-9.087577,0.827417,3.159414,3.430791,2.555025,2.376793,6.207046,-6.457872,-2.318036,7.555688,8.143393,8.803532,2.952486,-1.451648,2.222252,4.132425,-5.142935,-5.906345,1.414519,2.795447,-7.696880,0.018256,2.617044,-9.372312,1.886350,6.810771,-4.844513,-0.640789,2.948974,-2.462905,-3.788588,3.156216,2.339509,-7.954502,5.735529,9.614557,6.881414,-2.085359,-3.786907,-0.988725,-6.517700,-2.085700,-8.623863,-5.689397,-2.931466,-1.331908,-1.943392,2.576614,8.966293,-3.319084,4.644506,-5.708470,-0.061814,-5.074912,-1.139310,-6.582928,-2.069866,0.156107,4.492564,-1.804493,7.193909,-0.624185,-6.780315,5.426611,3.244934,1.949886,6.166936,5.095886,-2.868276,-6.245459,-8.563129,6.239811,-1.290383,6.159063], dtype = "float32")#candidate|6986|(324,)|const|float32
var_6987 = relay.var("var_6987", dtype = "float64", shape = (1568,))#candidate|6987|(1568,)|var|float64
call_6985 = relay.TupleGetItem(func_5358_call(relay.reshape(const_6986.astype('float32'), [324, 1]), relay.reshape(var_6987.astype('float64'), [784, 2]), ), 3)
call_6988 = relay.TupleGetItem(func_5361_call(relay.reshape(const_6986.astype('float32'), [324, 1]), relay.reshape(var_6987.astype('float64'), [784, 2]), ), 3)
func_5776_call = mod.get_global_var('func_5776')
func_5781_call = mutated_mod.get_global_var('func_5781')
var_6997 = relay.var("var_6997", dtype = "float32", shape = (3360,))#candidate|6997|(3360,)|var|float32
const_6998 = relay.const([-7.365354,-1.630825,7.750907,5.501522,9.093015,-9.964929,4.739288,4.208876,-3.636103,-6.402233,1.192309,-9.153324], dtype = "float64")#candidate|6998|(12,)|const|float64
const_6999 = relay.const([[4.549065,0.178212,3.197518,-2.440605,4.858140,2.920777,9.293335,3.835747,6.734289,6.710878,1.129591,-0.417364,-5.373730,-5.228433,-0.285106,5.763853,6.384851,2.585439,-6.508991,5.987101,7.259411,5.313714,1.959504,-2.772345,0.368442,8.273886,-2.303117,-2.512798,7.198146,3.080480,-8.788817,8.446678,5.285592,-6.215819,0.095858,-3.388921,-1.722930,2.247862,-7.824618,-3.648966,5.196005,-0.368567,8.688219,-5.576079,1.200401,-0.783448,1.770710,9.908109,4.729676,-3.808289,7.971027,7.956447,-9.071175,-7.437353,-5.508676,-1.851669,-7.958058,0.013479,-8.617351,-3.223491,-3.393757,3.801435,3.801976,-9.781031,-3.438403,3.214782,3.368909,5.923219,2.973099,-6.865835,-8.592676,5.152138,-7.396258,9.211066,-7.264143,-3.985654,-6.568245,-1.392531,0.799670,-8.062532,0.345508,7.869600,4.895565,3.343603,-5.594484,-9.569599,-7.282699,8.854722,9.098877,8.816148,0.880560,-4.597453,7.900935,0.679571,8.879554,-5.969041,3.327202,-0.218143,-7.230523,8.570107,4.275394,-4.179062,0.252203,-8.850670,-6.496266,-4.579679,-6.365983,5.548967,-4.191397,-8.170452,7.409911,-6.550845,-9.604693,2.887561,-6.489835,-8.250469,-9.576784,-4.295621,-9.224432,-5.701231,-1.102716,-1.976445,3.293564,9.391790,-9.930763,-8.577100,-5.052129,-1.312142,2.194451,-4.265659,-1.830956,3.490185,7.399519,-5.922358,4.025449,-8.799818,-4.790822,-2.351210,-4.605744,1.484997,1.467734,-3.740134,-2.775572,-7.713365,-3.298329,-5.977355,1.959638,-4.615157,3.073578,1.787981,6.063083,-9.249587,-2.668015,-4.857340,-9.196163,-3.624641,8.866534,-1.906492,1.733669,6.205720,9.108055,0.187355,9.234100,6.073698,-5.392342,0.863294,-7.283777,8.722401,-7.197386,7.588171,6.823519,-8.229651,2.415485,7.281309,-4.818365,-8.537612,-7.792826,-9.633983,5.674363,-1.606379,-6.981656,-8.086077,2.707118,-8.589646,0.944227,2.743834,0.057273,6.931519,-6.607914,1.413193,4.182573,-8.605572,0.582312,3.148132,-1.200385,7.891924,-2.322367,8.256683],[9.944095,8.752857,1.020426,-3.353492,8.329835,7.837846,-1.114455,-8.959378,6.324903,8.093226,9.511118,2.086794,-3.109692,3.898347,-6.579125,-0.610366,-9.069264,-6.464689,-3.690158,-8.801471,-1.570542,6.486991,-2.170462,-0.683533,-3.295980,4.495690,4.566973,9.150476,1.067550,-8.893826,1.925649,1.220230,-7.859588,-6.529211,-0.868405,-2.101880,-9.008490,1.412030,6.233656,-6.577613,2.498024,-0.066734,3.890396,-6.989663,-2.657900,-5.771529,-3.858562,8.303742,-2.288980,2.212812,-8.017367,2.371098,-4.610693,9.857606,4.690007,8.922292,7.368554,8.055528,-5.087756,1.162643,-9.864642,-2.343744,-4.616154,2.097211,9.361459,0.216808,6.604481,3.980141,-4.386974,3.830704,-1.501394,-9.646387,-4.885597,-4.300341,-7.078715,1.399648,-5.622870,7.387467,5.903143,1.821620,7.281409,-4.671705,4.957839,-3.005157,3.813144,6.619583,8.125428,3.924389,3.311601,-8.988830,-7.521908,-3.950929,5.430536,4.218942,6.874116,-6.497729,0.219033,1.520750,-2.890130,-1.151725,3.788639,3.090012,-2.859319,2.381153,3.764361,6.901997,9.437969,-9.512773,1.307791,-2.547676,-2.081195,7.283832,8.633783,-3.827481,0.079054,4.337672,1.478075,4.297030,-7.223605,7.427683,-9.565323,3.007376,4.936184,-5.628658,4.130942,5.869168,9.549181,6.227981,7.295701,-8.173439,3.149776,9.826237,5.027516,-7.119408,5.962088,7.689140,-1.325391,-5.106509,-2.671040,-9.395829,1.738140,1.325659,-9.715345,6.415326,-5.453513,-9.993301,-2.439979,-6.547438,-5.125817,3.604203,7.732426,5.339722,9.334406,1.805371,5.070302,9.236498,5.470448,2.389679,7.874273,4.100169,9.998613,5.356741,6.148190,3.100421,-8.236795,-2.804301,1.904974,3.178096,3.734111,-4.887551,-3.223068,4.355210,-2.176409,-5.560680,0.801372,2.097356,7.999125,-2.724314,4.097003,6.683540,-7.173927,9.482097,5.770964,-1.543577,3.296245,9.386277,-8.839821,9.314418,-5.668917,9.256947,7.733283,-8.137345,8.017116,2.272920,-6.973143,5.044924,-1.568909,-0.511826],[9.761992,-6.696917,6.360714,4.735768,-9.752206,-6.582144,-7.897225,2.629518,-4.474862,-5.135570,-3.834146,-8.249200,-1.316549,-6.885616,-4.069145,2.754926,9.450429,-1.237860,8.338612,8.846036,-9.668611,-3.704203,2.393953,-2.375672,3.451959,0.108217,9.271423,-3.302470,3.171479,-3.290638,5.663162,-0.557034,-6.486957,5.620941,-9.009475,7.615481,-8.210466,5.394273,6.609220,-6.038985,-1.124116,0.266902,1.358743,-0.021839,-0.475549,7.706592,-5.467368,-1.616671,-2.110884,-3.661151,-9.983217,-0.369336,-1.423314,-3.451246,1.999228,-9.398438,7.798006,7.559275,-4.829803,5.077434,3.990666,-6.238105,-2.683199,-3.822776,5.754871,8.662291,-7.002755,-2.255003,0.464360,2.005882,7.373646,4.676658,4.369635,-7.859439,-8.283376,-0.543982,-9.548121,7.732879,7.702776,2.139920,-3.838687,4.527508,-8.515027,0.587322,-5.980178,3.002663,6.625085,-4.933384,9.525185,-7.232780,4.830033,1.720442,0.422136,-7.412193,-4.406489,7.930599,6.503848,-3.650019,3.980152,2.442545,-4.766341,3.795213,9.380820,-7.389607,-6.099936,-5.229307,6.396416,1.829532,-4.773306,7.094697,-3.150888,-0.010239,7.660206,6.123472,-8.780316,2.433144,5.088209,-3.660038,-7.033827,-0.595835,2.172245,-9.015191,-4.405001,-5.494613,-0.243038,-9.320030,-2.730778,-2.705312,5.464786,-8.399908,-0.820963,-6.507917,0.449587,4.327273,2.860024,-0.180726,-1.134504,3.060210,3.660699,-9.119686,5.729503,-6.317503,9.049191,-6.879490,-3.294688,-5.693105,-8.880471,7.408093,-3.462393,4.244071,-3.754995,-8.253061,7.424916,4.856712,0.888164,-0.650797,-1.136490,0.582472,6.240056,-4.547084,-3.414679,-2.878702,3.329444,-3.025651,-9.237331,8.839245,-2.069373,-4.161775,2.458295,-7.300489,7.427379,-2.949201,6.835498,2.533624,7.015578,-7.246081,-3.987490,-3.529276,-5.906192,0.844926,-8.744307,3.441788,6.232830,-1.935619,-8.151943,1.479636,2.911478,3.737481,5.395899,3.773009,6.887999,2.526038,0.208013,9.436849,-4.889928,-3.949640,-3.825443,7.433408],[4.154652,-6.110414,-3.094780,8.340299,8.809091,-6.355561,8.032705,3.453719,-1.108559,9.916736,-9.839398,8.818500,6.252100,-4.399567,-9.845484,0.395930,1.080734,0.776539,-9.023417,-2.841176,9.159022,-9.609311,-1.431930,3.909711,-1.947428,-1.938409,-3.477376,-2.506292,-6.562541,4.828669,-7.526130,-2.064367,-2.008690,-0.225907,1.896458,6.450056,4.289480,1.706305,4.295590,-3.496807,0.167538,7.689443,7.378950,-0.973556,-6.031048,-8.630872,-0.168633,-8.158677,-7.660113,0.593334,1.512327,-0.772460,0.530271,2.450892,9.135542,-8.286310,-0.229478,-5.046576,0.987773,6.375143,-5.483840,4.816459,5.348838,5.999104,-7.433899,6.819721,9.802570,-1.267325,1.525460,-1.973831,-6.442792,-9.341698,-6.117509,-4.490965,7.628213,0.180675,6.390272,-6.213140,-8.287809,-2.428571,0.757506,0.044370,0.385034,0.774701,2.504303,8.547077,-3.001554,-4.482191,-3.313559,1.361200,9.837614,5.037335,6.584317,8.193966,-3.984138,-6.346090,0.129419,-8.429258,1.610688,4.883866,7.541256,-2.854625,-4.305181,-5.202335,0.277377,-0.339247,-8.161490,1.197776,-8.361051,-2.740725,-8.469422,-4.049918,-1.904834,0.977418,-8.352365,-4.613973,1.366952,1.843100,4.732990,9.981370,0.375894,3.103422,2.495343,0.014048,3.950863,-8.393865,-9.210327,5.938167,-5.698583,1.865524,-7.692309,-2.486382,-8.992145,7.821777,-3.780427,4.828595,8.523185,2.940230,4.944339,-8.761870,-2.370350,4.062846,6.057332,8.189408,9.959419,-1.252727,-2.715338,6.492957,-1.958905,7.652783,0.119010,6.435578,9.247934,-6.207640,8.135687,-6.380186,2.726590,8.979293,-3.412459,-5.957043,3.301235,7.981836,-2.578664,-0.236980,-9.051633,8.552767,-8.783550,-7.151118,3.279968,5.856215,1.852184,9.051372,9.567519,1.597595,0.305185,3.653605,-2.706053,5.025719,4.393551,5.219401,8.982917,-4.652244,0.146451,9.419255,0.038097,-8.431587,-5.100992,0.380420,-7.497892,-0.613009,8.212415,-1.124124,-6.354640,-6.754367,6.535858,5.943001,-1.119448,1.446568],[-6.780901,-2.887921,0.987779,-8.864775,-2.593346,4.125726,-3.675867,2.170540,6.318301,2.174367,4.765070,6.276990,-0.614363,8.189830,-5.956559,-7.756951,7.404941,-0.507454,7.268769,0.647644,4.542730,-8.391171,-9.537288,2.970382,5.859183,7.452010,-2.007386,-7.753832,-6.906483,2.252123,-3.469903,6.979817,-0.216870,-2.922911,3.076368,-8.470985,-2.630947,-5.614744,-7.844759,-3.000973,0.800210,-9.466772,-1.878989,-5.514769,-5.473363,-0.591136,7.944247,-7.545510,7.847884,-4.735763,-9.849961,8.912530,6.465636,5.242094,8.304943,-8.861130,-7.323744,-0.688650,4.093002,5.738913,-0.808869,-9.210649,1.326318,-7.592996,7.590518,8.550423,9.403701,-8.644002,2.289378,-4.480331,6.660586,9.169508,2.471181,-1.469961,-0.895497,-7.493117,2.640784,-1.808439,9.039420,-5.675916,4.927385,3.384178,-5.921942,-0.457426,1.634707,4.602283,4.646643,-0.594304,-2.510028,0.045183,-4.086062,-2.626752,-5.660533,5.990256,1.639704,-1.033814,3.473745,9.717143,0.633232,1.267197,-2.728978,5.645833,5.298198,-6.442599,-3.136945,-8.456776,8.839211,7.930678,-4.920343,5.500445,-6.357508,-9.703406,8.379978,4.720904,2.865586,-7.140586,3.547401,0.968695,2.686141,7.049862,0.628253,7.787478,-8.052777,-8.403918,7.366697,-5.711778,8.014702,6.528290,-1.084905,0.717436,-7.930535,0.100680,6.932616,-8.360207,-6.919497,3.971452,-3.920041,-9.515321,1.823205,6.192706,-8.819463,-4.093037,-2.801832,1.476212,-0.094306,7.382212,-1.246804,2.297398,1.380809,-9.599429,2.189348,-7.133588,-2.608982,-4.763038,1.905715,-1.972909,2.530106,-8.074167,1.277017,-8.397620,-4.398927,-7.737084,-2.551187,6.979286,6.369792,8.490317,6.666338,-1.029810,-4.281252,6.336765,-1.921727,9.017268,-4.161609,-8.833877,7.655327,9.557517,-1.277230,-5.837506,4.416685,-5.077476,-4.811436,2.965287,5.505726,2.543076,-4.949451,-9.654305,7.961909,-8.478196,7.381447,4.867479,6.424970,-6.081577,-5.058304,-6.429985,-3.689014,-8.142614,-0.589912,-5.461088]], dtype = "float32")#candidate|6999|(5, 198)|const|float32
var_7000 = relay.var("var_7000", dtype = "float32", shape = (525,))#candidate|7000|(525,)|var|float32
call_6996 = relay.TupleGetItem(func_5776_call(relay.reshape(var_6997.astype('float32'), [14, 16, 15]), relay.reshape(const_6998.astype('float64'), [12,]), relay.reshape(const_6999.astype('float32'), [990,]), relay.reshape(var_7000.astype('float32'), [35, 15]), ), 6)
call_7001 = relay.TupleGetItem(func_5781_call(relay.reshape(var_6997.astype('float32'), [14, 16, 15]), relay.reshape(const_6998.astype('float64'), [12,]), relay.reshape(const_6999.astype('float32'), [990,]), relay.reshape(var_7000.astype('float32'), [35, 15]), ), 6)
output = relay.Tuple([call_6942,call_6944,var_6945,call_6952,call_6967,bop_6972,call_6985,const_6986,var_6987,call_6996,var_6997,const_6998,const_6999,var_7000,])
output2 = relay.Tuple([call_6943,call_6946,var_6945,call_6954,call_6968,bop_6972,call_6988,const_6986,var_6987,call_7001,var_6997,const_6998,const_6999,var_7000,])
func_7006 = relay.Function([var_6945,var_6953,var_6959,var_6987,var_6997,var_7000,], output)
mod['func_7006'] = func_7006
mod = relay.transform.InferType()(mod)
mutated_mod['func_7006'] = func_7006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7006_call = mutated_mod.get_global_var('func_7006')
var_7008 = relay.var("var_7008", dtype = "bool", shape = (840,))#candidate|7008|(840,)|var|bool
var_7009 = relay.var("var_7009", dtype = "float64", shape = (432, 1))#candidate|7009|(432, 1)|var|float64
var_7010 = relay.var("var_7010", dtype = "float64", shape = (432, 10))#candidate|7010|(432, 10)|var|float64
var_7011 = relay.var("var_7011", dtype = "float64", shape = (1568,))#candidate|7011|(1568,)|var|float64
var_7012 = relay.var("var_7012", dtype = "float32", shape = (3360,))#candidate|7012|(3360,)|var|float32
var_7013 = relay.var("var_7013", dtype = "float32", shape = (525,))#candidate|7013|(525,)|var|float32
call_7007 = func_7006_call(var_7008,var_7009,var_7010,var_7011,var_7012,var_7013,)
output = call_7007
func_7014 = relay.Function([var_7008,var_7009,var_7010,var_7011,var_7012,var_7013,], output)
mutated_mod['func_7014'] = func_7014
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7072 = relay.var("var_7072", dtype = "float64", shape = (10, 13, 2))#candidate|7072|(10, 13, 2)|var|float64
uop_7073 = relay.sin(var_7072.astype('float64')) # shape=(10, 13, 2)
func_5776_call = mod.get_global_var('func_5776')
func_5781_call = mutated_mod.get_global_var('func_5781')
const_7079 = relay.const([-1.950021,3.327750,9.418270,1.716815,6.080166,-5.413924,-6.708882,9.115071,8.429349,-5.879038,-7.237923,4.976938,2.573202,3.427524,-2.255969,-9.143263,-7.097152,-6.505932,5.383876,3.937783,-2.528038,-7.723302,-9.435557,4.718014,-0.489827,1.701519,0.592388,8.518530,2.347899,2.369603,-4.088452,-5.467034,9.586308,-0.824000,7.799796,2.062923,0.301315,-5.802502,-9.332321,-4.636434,0.352241,4.099516,-8.913770,-3.328317,-9.550527,-4.849575,8.695760,5.259709,7.465263,-2.812944,0.598040,-7.502768,4.907644,7.046651,-2.211891,3.488746,4.805884,-4.409741,5.905864,1.256082,6.350076,4.210808,-7.513536,0.240888,-5.703830,-4.637338,-2.209865,2.681424,-9.400609,5.623397,-7.869719,-7.226261,1.433366,1.498176,7.528768,-1.279848,-2.272555,-3.571213,0.992394,-8.113794,7.324151,1.289167,-8.969495,3.198268,5.524107,7.890340,5.940688,0.124884,3.912135,-4.618577,5.078094,6.164139,-7.695427,7.285582,8.898071,4.310949,-5.680248,-6.033950,0.820926,5.163006,-9.121965,-2.925010,3.140906,5.524829,7.529672,8.499266,-9.361720,-3.728769,-0.321736,-5.875923,-6.149155,-8.060099,7.160509,4.675454,9.751105,6.484748,2.614132,8.187007,-4.929586,3.209992,-7.159741,-7.502142,5.688983,7.320060,-4.286230,-7.669559,-9.985259,-3.816346,9.357376,-9.934758,-0.295364,0.563727,-0.106156,-3.514123,2.077018,-2.877184,8.552734,-4.366457,9.797839,-2.279732,-5.702076,-4.886748,-1.632073,-0.270567,-9.355424,-9.072359,-1.461057,3.567299,-1.092652,4.910116,1.136436,-5.895886,5.082770,-8.800929,-8.316455,-8.065657,4.274411,2.717189,2.496785,0.923878,5.402139,5.296391,0.948991,-0.197610,-8.677498,3.367919,4.761495,-4.790103,2.197119,5.325782,-1.014009,-0.589209,6.787354,1.787658,8.436649,-5.694117,-9.877107,-2.611487,-3.884560,9.429169,9.197163,0.864766,-1.789455,7.517755,-5.861129,-6.096973,-1.725692,-4.496899,-2.033943,1.362836,-3.810705,-4.791755,1.024926,6.558103,6.375364,-1.994728,3.779226,6.696032,-9.836394,4.423045,-8.521602,2.930841,-5.245155,-9.877466,1.181628,-7.864771,2.021234,-1.634717,-6.816132,8.307731,-1.421678,-0.874868,6.094387,-7.710502,-5.713291,-7.501056,2.563102,0.288065,2.512631,-5.961978,5.001827,-1.436790,-6.662531,9.616147,-5.477084,-2.921929,3.587209,9.178260,5.051767,-5.851040,7.294878,-0.266550,-0.724868,5.498759,8.993832,-7.004247,-7.953925,2.532203,6.665528,3.650372,1.927418,-6.045881,-1.242673,7.204295,5.609092,3.796068,-8.872498,8.783088,-4.585772,-4.362992,2.127552,-7.651947,-1.926353,-8.831851,5.037726,5.406710,1.825554,5.135779,4.060045,6.377278,-3.468526,-7.896832,-6.232336,6.048496,-2.635312,-5.605117,-4.278295,5.633148,8.800216,-8.336821,-7.205038,8.033703,1.014865,0.710891,-4.835000,-3.150823,-5.168291,7.644540,-6.687991,4.659471,1.532555,-9.432840,-8.669471,-5.017206,2.461368,-7.770832,-1.640706,-3.001930,-9.067547,2.090897,-4.662018,7.282666,-8.376467,-2.858260,1.401616,7.118351,2.508324,-9.709197,6.028640,9.784150,1.460641,-0.538986,-2.523093,-3.807946,7.411543,3.500161,9.863836,-2.957001,6.817961,-8.346049,-8.389313,7.990346,-5.754771,2.851263,-6.754470,-1.988751,1.845254,-4.170846,7.070482,-1.307706,-2.350532,0.581462,0.222001,8.845197,-9.286988,1.906976,4.829979,-9.181057,4.748059,1.794330,9.927760,1.102293,1.665252,-5.137300,-3.794638,7.045364,-1.177170,-7.239014,-9.512548,-0.006766,-3.276571,2.118751,9.046400,7.936126,2.193238,-0.820152,-1.377594,3.661673,2.938636,2.650072,5.422324,-0.140068,5.700725,4.614760,-8.824494,-5.062392,8.262322,-3.887967,0.108466,9.758027,5.128178,0.584749,-4.074361,3.201659,-5.455918,3.469896,3.508544,0.670444,8.787765,-2.172913,0.809097,-5.603888,-3.807065,6.514539,-3.802388,-7.866883,-4.483301,2.988461,1.871438,5.087464,9.987166,0.967067,-4.674406,9.490388,3.383828,-6.144404,-7.571724,6.454330,1.660270,9.989640,-5.812500,2.355784,5.264467,6.405045,8.465627,5.514062,1.501596,7.404832,2.030254,1.652897,-7.942763,1.863408,-2.124255,0.530726,0.713208,2.418154,1.225833,6.445241,-7.915961,3.272654,9.329698,-9.421834,0.872891,-7.881379,6.766747,1.294090,3.140620,-5.157965,3.765303,-3.753137,-4.378021,-2.330857,-7.694677,7.172545,-6.547473,3.042625,2.727154,6.915068,6.314305,5.235097,0.346077,3.856974,-3.027890,7.779386,5.144658,-7.876595,6.322485,5.835785,-7.445077,-0.829524,6.497280,-0.050210,-7.167590,3.140111,-7.979696,-8.185800,7.821886,-3.960845,2.051749,-1.101077,9.755065,5.346730,9.005667,3.050802,0.566307,8.284545,5.085170,5.317372,1.172803,1.641845,0.933955,8.026012,8.264177,-7.656529,6.145309,-1.990826,-3.560643,-9.235827,-1.345603,3.482473,8.856884,9.587697,7.288746,-2.168578,7.407807,-0.298142,7.204137,-4.425885,7.597294,-8.248870,1.156481,-5.926490,-1.895011,5.160971,-0.314566,-5.027840,5.348951,-6.810165,-7.729554,4.571892,-0.026502,-5.120957,-1.186838,8.774209,-3.973859,-6.500234,-4.466354,5.667200,3.456205,4.919010,9.800953,-8.151131,6.748309,1.897876,1.853527,-8.695863,-3.285217,-5.312951,9.365564,0.134953,8.820921,2.909674,-0.054770,-8.715441,4.067078,0.314336,5.255869,-9.821544,-6.157553,-6.592927,-0.409391,6.293788,6.911199,3.420606,2.341149,-6.383516,7.964619,-7.631984,-7.407025,4.307834,9.561068,4.797642,-9.741578,0.922133,8.623561,4.761858,-4.520838,7.413014,-6.251468,-5.311382,9.300201,-5.401394,-7.723927,-0.851745,3.597622,9.417827,-6.513511,6.011586,-1.871046,1.804280,-4.565278,7.342979,6.689821,-1.367992,-7.433778,-7.499370,-9.367664,-5.263284,2.137678,5.414602,-6.967358,5.856014,3.000168,-5.377348,-4.545661,-9.795492,-5.589240,0.757927,-1.757421,3.480037,1.643755,-7.412072,-2.675771,-4.110383,9.986874,-3.319486,-8.035533,-8.234906,-0.392365,8.557590,-6.600344,9.828131,-7.517897,-7.301765,-6.207254,2.318815,1.334576,9.567651,-6.671466,-4.648552,-4.103655,9.420666,-4.729971,-2.854594,-7.868585,1.083003,5.491829,8.500749,-3.138691,-7.553117,2.056851,-3.339793,3.769823,-4.066748,3.047079,2.155155,3.417894,4.046266,-4.221690,-5.607579,5.990142,5.886448,-4.879247,-1.221512,3.300262,-6.430689,-2.996980,7.569492,-2.320453,5.158033,-0.689706,7.434821,-8.697926,-3.170595,0.657311,0.374816,-3.338266,3.346348,-7.333397,4.338875,9.696927,-1.385618,-8.279150,8.494733,-2.371313,4.304436,-0.982353,-6.310053,7.231932,6.201153,-7.313512,3.435468,-3.845757,9.901580,8.939242,-1.494815,-4.925692,-3.316109,-4.994079,-9.223725,6.047446,-4.571088,-0.429612,-2.126630,7.830341,-2.503906,-1.864971,-7.946631,8.064357,0.996548,1.045144,5.427868,2.599808,-8.065921,7.918495,-0.770130,-1.632658,-2.528530,7.231253,-7.611641,9.179173,-8.675987,9.059646,-1.702733,2.201758,7.148754,5.476407,-0.998774,-2.662392,-0.992416,0.950265,-3.092238,2.457091,1.432175,6.057223,1.937682,-6.778502,0.229009,3.981272,-5.386542,4.091930,2.341071,-2.159066,0.605411,-6.802695,0.297398,-0.967665,-1.855660,-9.833228,2.048925,5.325046,-1.373765,-0.382401,9.638974,3.051362,-4.951084,3.372702,8.187401,-2.328894,4.879673,7.048409,-0.376494,-1.043644,6.377535,-0.176666,5.505180,-6.145786,-8.214157,5.881552,-5.244649,1.249950,9.855463,-6.611522,5.908801,-7.032906,9.188117,9.650831,0.113239,-0.395288,-3.009211,2.554846,2.799017,-8.768220,0.629109,2.805370,-7.559003,-5.026586,-7.633800,3.818908,1.664868,-2.618775,4.877475,9.755134,2.285256,0.055258,-6.012267,8.431416,-2.190897,6.579368,9.999771,2.377881,-9.273095,-4.849167,-5.204783,-4.187031,6.004199,4.658709,-5.414416,5.291449,-6.842960,1.493743,-7.648512,-8.326374,-7.345280,-6.160289,6.370547,-1.605944,0.168860,-7.060013,-1.357316,-6.803750,9.165179,-8.006988,-6.790935,9.784049,-5.262072,5.236649,-2.326014,-5.848173,-2.852712,-6.846301,-9.991543,8.484591,4.228216,-4.555504,-8.898202,3.416102,-6.859737,3.700833,-1.616122,9.612761,1.976953,1.532439,6.076194,0.493323,-4.470648,8.955630,-6.030698,-2.491913,-6.561905,7.904737,2.198181,-2.176269,-2.546389,-4.294285,-1.771644,3.087771,6.270779,4.116906,-1.384008,-4.628178,1.835166,-2.436754,-0.297320,3.410408,7.410312,2.739682,-4.248193,-3.976852,8.873277,3.714119,-1.800308,2.076915,4.744300,-9.825409,9.778038,-1.525464,-8.402995,-8.690741,8.511928,8.599207,-7.684845,-0.974788,-6.122243,4.183125,6.017001,-0.407899,-4.284124,3.516482,-7.506046,5.426262,-5.228826,-1.500704,-4.078792,4.752164,0.155372,-1.859187,4.071872,-0.109868,4.888924,1.063857,-3.574835,0.969132,-0.334552,-9.924132,-2.244080,-4.489091,3.941001,-5.360519,-8.284231,5.323378,-7.408971,5.530473,-6.366116,-9.550740,-9.633823,4.843097,9.638067,3.097024,4.728401,-7.067199,3.033725,3.758858,-3.684339,6.912065,2.355053,-7.530538,-0.348462,-8.324127,8.553832,9.181400,-2.357098,-2.268222,2.118528,5.095961,9.987780,-5.839046,8.751798,9.936703,5.313120,-8.866764,4.986923,3.946032,-8.102691,9.330064,-0.716177,2.628524,1.674426,-7.264989,2.809509,2.926833,3.740578,-0.629972,2.743144,-4.568127,-6.366499,-1.923604,6.866978,8.502664,4.656568,3.354235,4.545132,-3.879775,-1.925245,0.035113,9.578481,-2.893692,8.747891,0.757874,-2.145161,3.246746,-5.684047,3.929136,1.649542,2.692711,7.638513,-1.703286,-3.999182,8.900059,0.764654,-1.325671,2.137752,-8.419231,9.821523,-3.280274,9.687175,-4.000273,1.339155,-5.781382,1.355415,2.184907,-4.792278,5.667301,-9.241166,-6.371251,-9.988548,-5.986981,2.115812,-9.659631,-3.554038,4.826924,-1.120898,5.085028,3.389682,7.884196,-7.650543,4.055565,-1.562427,7.977677,9.454063,2.020772,-5.471310,7.471474,-0.973413,9.242639,-0.902670,-5.113721,-3.925563,-6.569768,9.541840,-5.416305,-0.981331,0.418870,3.732506,-7.499607,-9.725005,-9.357880,7.614628,-2.869690,9.039767,2.406087,-1.725229,-8.935859,3.291333,-4.913452,-1.381137,-3.848608,-6.555607,-4.852992,-8.628328,-8.643824,-8.938512,-9.562183,5.921051,0.628270,-3.812230,-1.595286,-8.432295,0.762621,-0.060801,0.686170,6.295282,7.303753,3.108635,5.838964,-7.558451,-2.294185,-2.388613,5.146308,5.569762,-6.492978,8.050428,6.730308,9.120548,9.699178,-6.501729,4.903256,5.493486,-0.717381,-6.898385,-7.767667,5.437347,1.043151,9.577126,1.588021,0.959496,-9.754623,6.620920,-7.150679,1.312565,-4.733536,-9.336190,9.236650,-5.994645,-9.147253,2.326572,-0.214818,0.037680,-7.883444,-1.487701,-7.097365,7.773238,-7.390619,-9.970017,0.955860,-7.462843,5.505021,1.268942,-4.013160,-7.802655,-7.781649,-2.236496,1.041705,-6.341260,-8.688017,4.393138,-7.184496,-1.084671,2.451220,-0.830184,-9.637316,-5.195321,0.845581,-3.987314,-1.377150,1.037007,-8.479681,8.575467,3.733587,0.672611,-8.039047,-5.390993,6.962889,3.252239,4.190955,0.039873,-3.455133,-5.082155,-5.314493,-0.263513,4.823194,2.132381,0.363198,3.933686,7.253847,-2.162649,-0.835832,-9.163220,1.351665,-8.357419,5.565589,-6.052450,-0.793441,-3.972177,7.046606,6.406705,-0.795138,-7.910271,0.287522,-5.411398,-2.242695,-5.849180,-9.217614,-9.092544,-4.062808,-7.751751,0.410599,2.289574,4.034464,-6.155397,-6.677066,-8.039007,-7.076313,-7.204716,-1.612999,-7.851150,-3.949282,6.688582,-4.342130,-8.820538,1.617357,-4.983081,-1.993228,-9.735626,0.725239,-2.373636,-3.805564,-5.392015,-0.789759,-8.175179,-8.375274,8.996984,7.906213,6.483363,3.968070,-3.576356,-6.430155,0.159880,-0.501053,7.514151,-1.230232,-1.232355,-9.544934,8.797479,3.694939,4.262474,5.206311,-0.125136,-1.208868,-7.794294,-1.133561,-0.988565,1.683951,9.658814,9.501020,-3.993775,-2.041027,-5.885547,7.705419,0.088307,4.106370,-0.198590,-5.694017,0.763095,-3.721794,-5.173584,-6.520315,-3.580522,-3.972142,3.495496,-5.424353,2.710275,-9.941303,5.799245,5.414130,2.288402,7.827447,6.566057,-6.207360,-1.312612,-8.745981,5.976981,1.301032,9.961569,2.893107,2.994021,-6.272951,7.983141,-0.651502,-6.856927,5.812078,-2.959500,-5.070748,-2.884321,-6.592543,4.339168,0.184223,8.928612,-8.643003,-3.936122,-1.155511,6.308404,-4.555021,5.166178,6.255146,3.548529,0.059133,-5.736269,5.227064,1.955057,8.018738,2.932953,0.227629,-1.422725,5.618373,-7.154558,-4.121998,-2.069134,-6.060144,-0.447331,8.177541,-6.926780,9.689061,-2.460822,-2.447334,3.909784,0.175098,-4.864153,8.616975,-4.966540,-1.993532,-9.390397,4.134685,5.814329,2.018140,6.660432,4.885108,8.854948,-3.638582,-4.649388,4.626660,2.647129,-5.179105,-6.789237,-0.314757,-4.131827,8.120959,4.943694,9.134940,-6.323692,-6.103391,5.623901,9.585868,6.829726,8.822805,-0.562151,8.187446,4.849196,-7.010847,9.133443,-4.221922,6.039925,5.632853,-5.663316,4.875336,3.202749,8.203429,-3.147542,3.038248,-0.741220,4.943015,-3.285624,-6.164879,-9.116643,0.567129,4.932349,0.419486,8.288361,-4.851367,1.677999,-9.837891,8.500738,9.259919,-8.853810,4.893328,3.389184,-7.281697,8.160383,3.523774,4.720936,-4.787793,9.740918,5.181270,-5.451043,-8.470949,4.231570,-0.551383,-0.555985,-6.152678,-9.427347,-8.350310,-8.399853,3.489351,0.528510,3.703093,0.455457,-2.082093,4.975054,0.318972,7.960289,1.086038,-6.384960,3.868677,-0.194937,-9.228186,-4.982838,-0.064080,7.728988,-8.468976,5.532509,0.656057,8.209526,5.233384,2.274489,-6.177334,-6.128603,3.603308,9.394658,-8.575112,9.537679,8.708287,6.299729,-0.236721,2.682575,7.502462,1.437609,-4.618160,-4.854804,0.690476,-0.462062,-8.277592,-0.205846,-8.969618,7.365684,5.276834,6.564301,-2.054299,-5.723887,5.864730,0.369986,-2.394441,5.719067,-5.919885,-2.518064,4.608236,9.393029,-9.004861,0.522581,-2.267462,6.310480,9.032045,-8.142496,8.822194,6.994197,-9.063169,5.720558,9.864791,2.025793,7.632335,4.178802,1.416637,-9.513796,-3.840780,-8.151672,-6.731260,-5.821360,-9.535207,3.077249,-7.455085,-0.927960,-5.621151,6.628871,-5.251499,5.154210,9.682211,-9.607619,8.667675,-3.926009,-6.889977,-4.208153,-1.353832,4.537705,6.365838,-2.844909,3.747714,9.809194,-3.564427,0.331248,8.447019,-2.332675,7.096371,5.507255,-9.291507,1.405765,-4.958122,4.784096,-4.248299,9.392043,-2.514858,4.268712,-9.406583,6.640031,-4.203497,3.825144,5.367287,-4.098604,-1.695356,6.505874,7.854341,-6.980824,6.184370,-6.263650,-7.507865,9.851390,3.706831,-4.986717,6.827153,-8.324574,-7.214150,-9.924051,-2.973487,-3.373790,-1.488111,9.942296,-8.305584,-7.657538,0.225258,-9.180540,-1.957551,-3.569045,-7.066989,-3.283351,-1.332957,5.255545,-3.201561,-4.403400,-8.308048,-2.158858,9.402651,-8.497849,3.555936,5.597520,5.247537,-9.424151,4.165876,0.475813,8.588680,-0.760190,7.907968,-3.015011,1.788280,-0.006485,1.619455,-8.171247,-0.415710,9.201899,2.867848,-1.130432,-6.614336,8.772290,-7.975408,3.111220,-3.272870,6.594739,-6.301576,8.256705,4.041477,0.914596,-9.378154,8.837727,6.651773,-3.525755,7.418860,2.058980,1.329100,8.240897,-2.389847,5.631555,-2.805410,-7.846547,-3.756605,-1.099088,7.353800,1.295774,-1.528929,-6.968640,5.952624,-4.108925,7.934191,-7.045472,-6.480571,-4.933958,-9.873349,1.222537,3.552091,9.548027,-3.546820,1.195303,-6.689997,1.867094,2.810977,-1.949376,8.953633,1.468240,-1.375580,2.019335,8.492625,6.363591,-4.914618,0.220209,-9.623808,9.571298,-7.134547,-9.885514,4.296231,7.005164,8.468477,9.166772,5.644675,-9.642981,-1.372976,-2.571761,7.344496,-7.545054,3.512814,9.550956,-8.124704,-2.561025,5.888565,0.508915,-5.855993,6.601172,-5.409205,-7.201560,5.877112,-2.752609,9.774880,-0.205451,-7.115159,-9.757119,-9.141248,-8.360627,-5.625466,1.618821,2.050017,4.515743,-8.705816,-8.112240,8.479310,-6.147545,0.491356,5.258846,0.539010,1.366601,-6.156473,8.124439,-5.539419,7.478660,-8.876925,-8.307721,-6.088858,-7.094435,2.408407,3.042204,4.001005,7.181207,-2.825383,5.608910,-2.218675,-0.011802,-1.428527,4.506861,0.678374,-6.003214,-7.460047,4.470796,-8.913901,2.336075,-3.089484,-3.910771,-9.222205,-3.972948,-1.294832,-9.246980,1.913550,3.969407,7.621023,-3.755006,-2.275343,-9.774455,5.521185,9.476653,1.911209,0.377196,4.890062,-8.955425,-1.879650,9.794252,-8.664131,3.359475,-1.576511,-8.632386,-2.144171,-0.988313,7.161716,2.474216,-5.445991,-7.141199,5.975725,-3.856382,0.263963,-6.646146,2.201367,5.965145,2.719393,3.174892,5.321983,2.720526,-2.956828,-9.062194,3.501561,2.233402,-0.756537,5.538165,3.245984,2.633341,-3.709424,-1.656571,8.800936,-5.683411,0.255068,-9.686417,7.065034,-6.808502,4.786231,2.260389,-8.387955,-5.719521,-9.948841,-0.094093,1.345132,-8.998603,5.448296,-1.917659,-3.505519,5.144621,-8.526490,9.025705,-5.076149,-8.898638,-7.109789,-6.149758,-5.050365,-8.160745,-3.620785,-3.828547,-9.658322,-7.332082,-9.093163,-9.851368,7.486326,-2.369623,9.883111,3.773233,9.035049,0.305549,1.595030,-7.039056,-2.378800,-9.276410,4.380171,0.855512,5.665355,6.580028,-1.858582,3.751300,8.164073,6.859666,9.061556,-8.316524,-5.642254,-0.724341,9.260533,5.851125,5.687960,8.593659,3.698521,-4.284975,-9.991485,-5.827585,9.575369,-1.378172,9.739423,8.350691,-6.355246,5.441937,1.307327,-1.397313,-2.863830,7.442063,8.513254,-0.081184,4.682924,6.469317,-4.780676,-3.092365,9.532076,-5.280479,-8.119001,6.468270,-2.586994,-3.355788,1.485691,-7.358323,-9.535144,1.460678,-4.630653,-2.451921,7.226571,5.680913,7.586544,3.823127,-6.418667,8.810876,-1.169308,6.617152,5.732466,-0.283051,-9.492708,-4.372106,-0.898432,-1.484018,3.432483,-1.815711,2.849741,-7.691216,0.585881,4.252349,-6.383809,3.373649,-1.700791,6.039835,-6.945382,-8.864022,-6.760043,4.306578,-3.252582,-2.021208,0.651480,-9.717539,-1.080278,6.148044,5.316385,-0.939136,-2.758782,-5.115276,-3.855081,-6.438082,0.740732,-4.082260,-9.573405,3.207180,5.900050,-7.176572,-3.248856,1.208014,-7.885438,2.448600,-9.567695,5.837879,5.849547,4.292026,6.331704,-0.016170,-4.651142,-2.925529,-6.114355,4.807804,0.220804,-0.429544,0.691475,8.716755,6.544428,1.317711,-2.649524,-1.833753,-6.577087,4.742548,6.656718,-2.572499,-9.195167,-3.971170,-0.355683,4.570479,-8.008785,-4.854039,5.333103,2.702335,-5.136772,-0.214533,5.617669,-6.437472,-9.795189,3.480100,7.084430,0.001773,-0.202464,-1.070037,-5.611146,5.839870,-3.023318,-5.166117,6.422463,-2.126040,-6.342759,-1.380539,9.990107,5.303225,-0.503547,5.857725,-0.756253,-2.044138,3.109834,-3.935329,-3.917225,-3.026539,2.509069,-0.692439,-3.651589,-8.790481,-7.469541,-0.613089,2.544640,8.306106,-9.031963,5.170683,-1.242727,6.409877,-0.927570,2.099326,8.456013,4.291193,-4.925622,7.880195,-3.916845,7.300086,-7.390896,-0.077477,0.745790,-2.290162,0.919536,-4.662153,1.443043,2.907008,6.636705,-4.580155,-1.228474,8.013198,6.649507,4.541685,-7.930772,-7.143032,-6.992998,-3.629573,7.940808,9.522662,-4.937494,-4.110838,2.071783,-9.404458,-1.743521,-9.593610,-3.387718,7.858606,-5.130903,-0.296811,5.993512,-6.132580,9.437627,0.268856,4.287708,5.630793,-9.793160,8.210288,6.283860,2.871252,-4.664272,-7.795740,8.221479,-2.606780,-1.795384,9.768607,-8.855963,5.097310,-4.122975,-4.436053,7.898408,-5.137733,1.171791,-4.930410,0.779937,-6.624179,0.734260,-6.004006,-3.049414,-2.260880,3.379107,-3.176351,0.111586,-1.756112,-3.283731,9.588437,-8.991329,3.763747,5.008220,9.563674,3.776719,-4.276907,-9.953447,-1.908246,-5.389684,-3.396085,-3.993489,9.810361,-8.572527,2.423061,-8.543272,5.276032,-8.332725,-8.591135,-5.351229,-9.090778,2.476587,-1.447875,-7.308718,-0.179464,9.424329,-3.133064,0.414227,-6.903975,3.940398,-1.926104,-8.862425,3.719197,-7.046229,4.360546,2.267332,7.464245,-9.146695,-4.698587,-1.125150,1.856373,9.797196,3.569463,7.128717,0.541277,6.860107,-6.553390,0.486054,0.418840,3.223505,-2.426157,-1.861123,5.642982,9.297598,7.829720,-8.707619,8.874238,8.029829,-3.806454,-1.877647,1.302686,6.501761,-5.237305,1.380656,1.994612,-2.117788,1.255892,5.514870,6.361347,0.997508,-7.895014,-1.678943,1.813469,-6.568977,-6.567618,5.344000,-8.216417,-6.972732,3.463334,-3.814793,-7.185347,-8.829038,-2.260226,4.176429,-0.659410,-4.586149,-0.897037,3.533730,-2.675785,-6.630154,-0.074098,6.196917,-2.957184,9.802077,0.685678,-0.425041,-7.624744,-1.174524,-9.139663,2.088822,-9.583919,0.675124,-1.637812,-5.610278,-0.765402,5.398877,8.249710,-2.888996,-8.350934,6.727424,3.201192,-3.112755,0.802670,-1.635175,-0.547857,-0.848757,-1.961930,3.093812,-6.040189,1.272936,-5.094470,-9.338769,2.671944,-2.685908,-3.859732,-6.463426,1.258845,-0.843714,8.947117,2.041357,-6.568432,-1.355408,9.140807,4.587911,6.127313,7.584942,0.104059,7.114846,-8.196146,6.267700,-0.575614,-7.906990,-2.474170,-3.474086,-9.676424,2.366070,4.476245,4.690230,9.019848,6.971673,9.619549,3.112827,-1.965988,-7.760170,-1.300475,5.082283,9.036512,-8.555687,-3.611186,1.808328,-1.872743,3.608660,-7.649653,2.387436,8.023094,-3.701458,3.431148,-1.905642,3.770914,-4.756206,-8.297210,-8.108626,3.955762,3.957239,9.524880,-4.575115,5.656396,6.545496,-4.773118,9.678022,0.268360,4.376006,0.822309,-0.656957,-8.825426,-4.818290,1.988328,-7.062772,-6.156933,-5.882244,-9.862340,3.638144,9.714966,2.771759,9.479732,4.527841,-5.690979,3.350518,-7.638515,-4.496562,-4.562295,6.263440,0.506340,3.088390,0.114786,9.611900,-7.686240,7.117660,-3.370288,-6.698645,-5.847973,-4.697068,-4.805316,-8.108512,-7.150921,6.471350,-0.258535,-8.283779,-4.393181,9.826990,2.856846,0.709940,7.534885,7.675874,5.388634,-8.485937,-9.227135,-1.614307,-8.863214,3.524521,-8.841795,-7.221067,-8.386637,-8.531127,-4.414593,-6.536100,1.058810,9.962683,4.296508,-3.248284,-7.326172,-0.889196,1.767820,2.113383,7.651727,-1.423650,3.769475,-3.094128,1.313879,-7.427864,-0.488955,-8.991522,-5.331651,5.457647,-8.975769,-7.478524,-8.271414,6.386294,-3.839278,7.050728,-9.087395,6.097752,-8.396432,2.610724,-0.294201,5.988312,-3.359443,-0.688239,-8.667921,-2.942634,8.235058,7.304382,8.853162,-6.640669,-2.503128,-8.221843,8.526905,-0.777923,0.652333,-3.188991,-5.807576,4.639689,9.327645,0.529647,1.733887,-8.954492,5.129452,-8.720070,2.481742,-6.487842,-7.392536,-4.596778,-4.082680,-9.754196,-1.152593,5.254204,-2.364355,7.393423,8.099138,6.406766,1.633329,9.651239,-2.383114,9.215475,-4.045253,0.226748,-2.761289,0.235376,-5.235852,1.791254,-2.716090,9.152521,3.175059,-2.594048,-6.069303,3.044569,8.625177,-5.199567,-7.339358,2.418381,7.402478,5.206513,-2.225273,-6.873111,-3.053466,8.377151,-5.157284,-0.254092,-5.931807,-1.023353,-0.204427,-7.700728,1.924626,1.234742,-8.419944,-9.287765,3.120670,-2.546519,-3.527766,5.921812,-8.687707,8.170092,3.047885,-4.871352,-3.986685,-5.298502,-8.065466,9.526381,4.404202,8.453034,0.554043,6.756367,0.257942,7.194936,-8.739185,5.294234,1.705740,-3.290171,-9.148418,-6.627421,5.978083,5.837023,8.186009,0.096958,-5.665727,3.419284,6.356778,-7.542703,-3.372528,-7.171416,-6.331667,7.510792,7.040298,1.440530,-0.212933,-6.793383,-2.369202,6.818546,-5.584421,5.981929,1.396924,3.751799,5.557384,8.388768,7.810414,1.764853,7.513844,0.707426,-8.488277,-2.838630,0.193582,-7.058748,2.574575,5.284807,9.081047,-3.411622,4.793297,1.217292,6.535613,-8.287022,-9.027606,6.967958,-9.490711,-8.095805,0.627446,0.104941,-6.634238,-7.933433,0.746828,5.059427,-5.911313,9.404006,4.543807,6.940516,-3.145654,1.862512,7.597367,-3.054062,-6.833883,-9.280001,-6.075106,-2.203127,3.543474,-6.485127,-5.970136,1.522100,6.121553,3.576137,7.602154,6.790735,-9.416993,4.985648,1.685171,-1.238493,-1.892128,8.415134,-7.655800,4.915283,2.432689,5.550039,-0.303601,-8.321237,0.410274,-4.504966,-1.004036,-1.728430,6.437354,-7.523977,-7.996839,-6.396447,3.403054,0.247750,3.635607,-9.137371,-3.439835,-1.832358,-7.943238,-7.075244,-6.233037,8.707433,-9.474040,-2.270946,5.369450,5.469623,3.739281,-7.381753,2.947221,-1.121002,3.711733,3.878494,-9.690620,-3.323956,9.442803,9.566737,8.941683,-2.562643,-4.372951,3.460763,-7.649042,7.610642,-0.668348,-8.824480,4.537493,-7.679848,3.607379,-8.407180,-2.421583,3.752291,1.264387,3.496708,3.429866,3.365367,-1.495097,3.668522,8.976285,-9.504121,-5.439359,2.994948,-0.883545,-8.083014,-2.003007,1.972660,7.536604,-8.963272,5.921305,-5.605498,9.437283,9.189122,-2.997365,-2.889444,6.514683,-2.044346,-1.903257,-3.495830,7.006059,-1.270510,6.505796,-6.962709,-1.431127,-4.218975,0.246062,-2.978878,-4.482882,-6.593217,-2.768383,-0.385722,-5.837053,-5.729524,-2.579841,2.936403,0.482760,7.772725,3.873766,-8.074059,-3.937529,-6.675323,1.634886,7.494032,-4.149979,-0.515580,-6.652771,-2.834546,9.652885,5.903281,3.812950,-2.255870,7.606277,-4.914152,1.138501,-1.418948,6.693202,3.866655,-1.674044,-0.039841,2.918331,4.073752,7.806727,-5.370469,-4.193674,-7.444531,-7.466064,1.994131,3.583834,-2.288666,-1.964733,-2.800745,9.110346,-6.078104,-3.707639,-9.643715,9.027811,-0.131100,-1.216273,-0.974814,-1.895974,-2.848829,9.258796,-2.126200,9.363934,0.355364,-8.170310,2.612234,-0.182634,0.167786,-4.244219,-2.490683,3.521997,-0.459748,4.498422,4.612913,-2.953161,-0.102008,3.554114,-2.663285,0.859593,-1.000947,4.649477,-0.523015,6.258829,6.625724,4.991735,0.050547,-7.199909,-2.087815,-3.128229,2.990339,-2.048219,-9.447177,2.724029,-2.123841,7.611132,-7.095294,2.302725,-3.338225,-9.058828,-2.643738,5.200638,-9.755282,-9.491377,5.661664,-9.065730,3.178200,-9.465995,-3.398403,-4.453530,-6.207656,8.210904,-2.020816,6.003933,1.944901,-0.140903,-1.432362,-9.922799,4.606585,5.811151,2.519648,-1.951263,-0.261853,6.399252,-5.013548,-0.134825,6.266171,5.643267,-9.045172,-1.747317,-5.808928,9.954182,-2.293250,1.902242,-6.755307,-8.192591,8.179925,-2.385413,6.218418,-0.651543,8.570920,-5.029974,2.398867,3.262229,0.189687,4.678960,-6.669748,-2.320880,-4.583235,4.105443,-6.129550,6.291892,-0.190018,-2.100202,2.174583,1.868219,2.411767,7.862617,0.360049,-1.247312,-3.988354,-6.461719,-1.588442,8.911380,-9.565323,-4.483229,-8.454584,-7.321625,2.165088,-0.912073,-9.991404,-8.555921,6.318740,-0.951016,-9.751055,8.795391,-2.824448,3.722808,-0.057132,-2.620472,9.446707,-8.133287,-0.432765,-0.965341,1.088242,-0.184957,-8.287205,7.773663,-6.811591,-0.718356,-9.440789,6.470999,1.846865,5.246784,1.582399,4.448492,-3.904620,-0.927305,-7.944087,2.831382,1.102768,0.088906,-9.025898,8.153443,-5.635781,2.956299,-9.274858,-5.995120,3.012632,9.289781,2.243351,-4.822388,-4.505434,-0.811764,0.035020,-5.462204,5.996866,2.518349,-0.887600,-1.658713,-5.035736,8.178852,-9.828151,1.549258,-8.740228,-4.472785,1.928602,0.341774,4.413253,-6.302560,6.180919,8.715176,1.568067,-8.818234,5.917757,-6.151822,-0.103891,-9.524339,3.825160,9.758238,6.455638,2.020660,-2.138757,-3.672054,-9.446026,-5.821015,-1.099861,-3.644019,-8.466392,6.538458,2.871728,-1.717258,-3.177640,-7.478864,-8.503191,7.318206,4.459330,-2.069396,9.792165,9.788533,0.988463,-5.460824,8.154599,0.778837,6.928618,-8.295485,6.798087,9.270831,5.583096,8.297134,0.651096,6.081572,-2.935284,-3.885189,5.452606,3.300449,2.647242,-6.795070,5.310563,4.606835,-2.947878,2.325912,-9.947126,3.479213,9.762070,1.374242,6.614259,4.831707,-6.480977,-7.739415,-0.724636,-7.026157,7.855044,-9.160498,0.800479,3.226257,5.707757,2.357274,7.160142,-1.957636,6.819693,3.675672,-4.590058,-6.311308,-5.908665,-0.270662,2.026451,8.588309,3.029238,3.090799,8.886148,7.240905,2.988127,-3.048169,0.330515,6.131605,-5.319735,-9.358904,-0.152702,3.273663,7.713264,0.831481,-7.271850,0.706178,-8.754518,-8.067338,7.825931,6.497053,-4.039836,-5.615628,-8.391902,8.889671,-3.243838,8.156136,-1.173157,-7.230530,9.492761,-3.574644,-2.765611,6.061072,-8.222791,-8.505736,6.026728,5.231913,1.232393,-4.191274,4.806204,-7.837031,4.741745,-7.060229,-4.182448,2.513826,-6.403041,3.250828,4.549553,-1.579944,8.035726,7.933944,-9.744978,-0.269296,-1.568495,9.177829,-0.003167,-4.694416,6.743633,-9.298445,6.838940,3.781068,9.921265,-9.600880,-9.743555,6.341152,3.166531,-4.250477,9.291095,8.254732,5.041391,3.394107,-7.700083,2.656186,6.558705,0.198068,3.389415,-6.017701,7.396893,8.710259,8.527118,0.442514,-7.442694,-8.580873,3.935581,8.528301,-2.791184,-5.137480,-1.053704,5.752973,0.040488,-5.448027,7.599174,-4.853959,1.287216,-6.688584,-0.174980,7.051768,-5.809452,-0.929955,7.588721,-1.437206,-4.546472,-0.286183,6.221942,-7.338326,-5.891153,6.364401,-0.585391,2.337212,-9.064426,-0.814364,4.904413,8.473315,-0.777234,5.930484,4.239797,4.617086,7.670014,4.931969,3.058109,3.332304,-5.365770,-9.843746,-6.683689,8.255889,3.227332,1.591145,1.250334,-5.303064,-9.069866,-4.091324,-0.815749,-6.186130,7.619614,-5.516230,6.650267,1.514945,-6.165551,-6.019025,2.567333,6.301002,-9.593665,9.939206,6.387239,7.874617,-8.753675,-1.143701,3.752447,-1.222076,-9.534416,-8.038415,-3.303466,3.878188,3.194750,-2.134698,1.440642,3.503921,-6.806958,-9.488241,2.415525,-6.014019,7.202381,-4.838682,0.220012,1.331676,4.046642,8.057400,8.034627,-8.832891,7.380276,1.441469,7.110225,-9.299921,-1.709011,9.255334,-0.068930,0.411016,-6.577892,-7.752456,-3.137743,2.456688,5.391372,3.911190,-7.246066,7.280303,-0.020209,-5.296074,-1.084000,-4.426961,3.195670,-5.216236,9.532834,2.709981,5.637646,3.060558,-3.261783,8.038005,4.435633,-9.522275,-7.227458,9.271166,1.136463,-2.537719,-1.567101,-7.405864,7.570931,6.662687,-8.965249,-6.028535,8.348979,8.831761,8.561623,4.505622,6.914467,-2.854877,-5.670828,1.674075,0.904071,3.787230,-1.995728,-5.824642,-8.081703,-9.520646,-9.678834,-4.112376,-6.683738,7.460178,-4.452293,-2.778217,8.966528,3.426401,3.080260,6.796613,1.441495,-3.922424,-3.050329,2.415172,6.397491,0.148235,-2.226324,8.581190,9.911813,-7.426532,9.141354,3.095840,8.434037,-5.897360,0.433653,-4.197061,-2.184908,-7.973746,8.036827,3.724710,4.637072,-2.889465,-9.573657,-3.916110,5.528450,7.134437,-7.396651,3.120846,-7.966191,-0.732993,2.617027,-4.128042,1.539692,-9.244119,-2.085810,1.760925,-8.476640,0.777335,6.571238,-7.536682,0.919263,-9.473410,-6.910608,2.286144,5.026844,5.426907,-7.373257,2.656212,-7.203225,-5.813406,3.225115,1.261069,-3.318059,4.256924,-3.787196,-3.272533,9.514977,0.766822,-5.439669,-7.667157,-3.127230,-8.099651,5.007156,4.884367,1.276559,-0.447834,6.696300,-3.090563,0.403861,-8.450700,1.784862,6.990942,0.193665,-9.632613,9.724211,7.899100,-3.513931,5.921129,2.006440,-5.311404,-6.323438,-0.558026,-8.179453,6.755254,-0.056117,0.960096,-2.761745,-7.946226,-2.239396,9.176189,-4.194878,5.716879,-9.233065,-3.793266,8.175092,-4.337553,-0.884070,-3.847119,0.998364,-0.135933,1.825016,8.567555,-4.526546,0.975800,6.911400,-1.977731,1.622869,-4.478031,-2.534699,-3.146608,1.783598,-6.121481,9.243648,-1.247718,-8.228134,-8.397775,1.581490,-1.117626,1.112998,-3.530423,-5.994297,-9.328222,-7.178427,-5.670185,-1.998525,2.627145,9.689977,7.148742,-5.627484,-6.315205,-0.453264,-5.957782,-4.942197,5.606111,-5.082323,-9.538183,-1.065878,-5.730732,-3.183722,-8.192916,2.286483,-8.355257,7.697252,7.230224,-8.870564,-6.869126,-5.253173,-3.718487,0.913233,2.046206,7.224298,3.247215,-7.131480,-6.048521,-4.324476,9.179455,-7.199094,-1.233804,4.604653,8.386283,7.408695,-1.896294,-4.817740,0.884513,-9.822673,0.792784,-3.316513,-6.120514,6.875868,5.260681,8.287829,3.198200,1.963263,1.271823,-4.571621,-1.567792,-7.222883,2.920457,3.390001,6.212140,7.393669,9.976830,8.664181,4.734460,-4.131728,-1.069232,0.538018,-0.176645,9.235549,-7.825739,-5.366799,-7.088807,0.876690,-9.616637,-0.993474,5.862008,-5.981630,0.989528,-6.763333,-6.863026,-6.479490,-4.851317,8.420195,-2.982176,-1.256824,-9.232708,1.222917,1.001418,-6.037837,5.391456,9.460031,8.734668,6.116560,8.567416,9.573604,-2.193542,-2.852583,0.264014,7.037938,0.734606,-4.739664,9.161888,-2.989542,4.580212,-6.801716,2.534897,5.615789,9.937288,1.601692,-4.891658,6.871649,-8.123205,6.619050,6.904927,9.720477,-6.736628,-3.735531,1.258559,-4.785769,9.738329,3.024710,6.841729,8.277863,2.089995,2.756433,4.095233,4.377839,4.827717,-0.306374,5.495851,1.046280,5.894756,2.566234,-8.277814,7.907966,-4.318875,-2.024589,8.819501,7.117824,-4.957806,-6.552772,4.368222,-5.840967,-7.965905,2.728330,-7.704745,8.011471,-6.941723,8.859488,7.449757,-8.845666,6.971038,8.478791,5.573744,-3.720402,6.146778,7.901874,-5.498166,9.716692,-1.213904,-8.220057,4.401208,5.580022,4.947634,-3.953931,8.048135,-1.584848,7.603572,-1.460494,-5.337867,6.580297,2.761464,-8.649088,-6.461073,0.873226,-1.576665,3.145705,0.907023,4.348487,1.945443,7.991683,6.717809,-7.445740,4.218977,0.991667,9.820846,-8.830999,0.858143,-1.631873,-9.781343,3.481858,6.619057,4.047757,4.603290,0.844664,-8.761148,7.370841,9.180097,1.006248,-7.791540,-0.840898,9.751802,3.508915,-7.581970,-3.602578,0.702767,6.075474,-6.454530,5.881485,-0.448478,0.393642,-8.844416,-6.270245,-4.497791,-8.929697,-0.230911,-0.252547,6.821263,-6.327117,7.624066,1.053660,-3.629061,5.975211,0.340016,-5.011826,-9.830472,-0.193437,6.316956,-8.363472,-4.988569,-0.345517,6.521701,-2.327012,-6.035712,-6.086683,8.658218,-2.765450,2.797348,9.204158,4.174204,-4.084721,0.337939,-5.005021,6.460553,-0.663810,6.930359,-8.028853,9.148825,-8.949553,7.570573,0.693021,-7.403393,5.352540,7.166934,-7.136461,-7.639349,-3.453911,5.747581,-9.827991,0.630685,5.369767,-0.598356,-7.943334,-7.284943], dtype = "float32")#candidate|7079|(3360,)|const|float32
const_7080 = relay.const([7.129118,0.209474,0.213280,8.874040,3.835671,-9.427811,2.128293,-6.793592,-4.833341,-7.327555,-3.145393,1.026363], dtype = "float64")#candidate|7080|(12,)|const|float64
var_7081 = relay.var("var_7081", dtype = "float32", shape = (990,))#candidate|7081|(990,)|var|float32
var_7082 = relay.var("var_7082", dtype = "float32", shape = (525,))#candidate|7082|(525,)|var|float32
call_7078 = relay.TupleGetItem(func_5776_call(relay.reshape(const_7079.astype('float32'), [14, 16, 15]), relay.reshape(const_7080.astype('float64'), [12,]), relay.reshape(var_7081.astype('float32'), [990,]), relay.reshape(var_7082.astype('float32'), [35, 15]), ), 0)
call_7083 = relay.TupleGetItem(func_5781_call(relay.reshape(const_7079.astype('float32'), [14, 16, 15]), relay.reshape(const_7080.astype('float64'), [12,]), relay.reshape(var_7081.astype('float32'), [990,]), relay.reshape(var_7082.astype('float32'), [35, 15]), ), 0)
output = relay.Tuple([uop_7073,call_7078,const_7079,const_7080,var_7081,var_7082,])
output2 = relay.Tuple([uop_7073,call_7083,const_7079,const_7080,var_7081,var_7082,])
func_7088 = relay.Function([var_7072,var_7081,var_7082,], output)
mod['func_7088'] = func_7088
mod = relay.transform.InferType()(mod)
mutated_mod['func_7088'] = func_7088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7088_call = mutated_mod.get_global_var('func_7088')
var_7090 = relay.var("var_7090", dtype = "float64", shape = (10, 13, 2))#candidate|7090|(10, 13, 2)|var|float64
var_7091 = relay.var("var_7091", dtype = "float32", shape = (990,))#candidate|7091|(990,)|var|float32
var_7092 = relay.var("var_7092", dtype = "float32", shape = (525,))#candidate|7092|(525,)|var|float32
call_7089 = func_7088_call(var_7090,var_7091,var_7092,)
output = call_7089
func_7093 = relay.Function([var_7090,var_7091,var_7092,], output)
mutated_mod['func_7093'] = func_7093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mod.get_global_var('func_5142')
func_5143_call = mutated_mod.get_global_var('func_5143')
call_7095 = relay.TupleGetItem(func_5142_call(), 3)
call_7096 = relay.TupleGetItem(func_5143_call(), 3)
output = relay.Tuple([call_7095,])
output2 = relay.Tuple([call_7096,])
func_7128 = relay.Function([], output)
mod['func_7128'] = func_7128
mod = relay.transform.InferType()(mod)
mutated_mod['func_7128'] = func_7128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7128_call = mutated_mod.get_global_var('func_7128')
call_7129 = func_7128_call()
output = call_7129
func_7130 = relay.Function([], output)
mutated_mod['func_7130'] = func_7130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5941_call = mod.get_global_var('func_5941')
func_5942_call = mutated_mod.get_global_var('func_5942')
call_7264 = func_5941_call()
call_7265 = func_5941_call()
var_7270 = relay.var("var_7270", dtype = "float64", shape = (3, 11, 11))#candidate|7270|(3, 11, 11)|var|float64
bop_7271 = relay.equal(call_7264.astype('bool'), relay.reshape(var_7270.astype('bool'), relay.shape_of(call_7264))) # shape=(3, 11, 11)
bop_7274 = relay.equal(call_7265.astype('bool'), relay.reshape(var_7270.astype('bool'), relay.shape_of(call_7265))) # shape=(3, 11, 11)
output = bop_7271
output2 = bop_7274
func_7288 = relay.Function([var_7270,], output)
mod['func_7288'] = func_7288
mod = relay.transform.InferType()(mod)
mutated_mod['func_7288'] = func_7288
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7289 = relay.var("var_7289", dtype = "float64", shape = (3, 11, 11))#candidate|7289|(3, 11, 11)|var|float64
func_7288_call = mutated_mod.get_global_var('func_7288')
call_7290 = func_7288_call(var_7289)
output = call_7290
func_7291 = relay.Function([var_7289], output)
mutated_mod['func_7291'] = func_7291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5031_call = mod.get_global_var('func_5031')
func_5033_call = mutated_mod.get_global_var('func_5033')
call_7316 = relay.TupleGetItem(func_5031_call(), 0)
call_7317 = relay.TupleGetItem(func_5033_call(), 0)
func_2585_call = mod.get_global_var('func_2585')
func_2590_call = mutated_mod.get_global_var('func_2590')
var_7337 = relay.var("var_7337", dtype = "float32", shape = (1144,))#candidate|7337|(1144,)|var|float32
call_7336 = relay.TupleGetItem(func_2585_call(relay.reshape(var_7337.astype('float32'), [11, 13, 8]), relay.reshape(var_7337.astype('float32'), [11, 13, 8]), relay.reshape(var_7337.astype('float32'), [11, 13, 8]), ), 3)
call_7338 = relay.TupleGetItem(func_2590_call(relay.reshape(var_7337.astype('float32'), [11, 13, 8]), relay.reshape(var_7337.astype('float32'), [11, 13, 8]), relay.reshape(var_7337.astype('float32'), [11, 13, 8]), ), 3)
func_6187_call = mod.get_global_var('func_6187')
func_6188_call = mutated_mod.get_global_var('func_6188')
call_7343 = func_6187_call()
call_7344 = func_6187_call()
func_6389_call = mod.get_global_var('func_6389')
func_6390_call = mutated_mod.get_global_var('func_6390')
call_7348 = relay.TupleGetItem(func_6389_call(), 0)
call_7349 = relay.TupleGetItem(func_6390_call(), 0)
output = relay.Tuple([call_7316,call_7336,var_7337,call_7343,call_7348,])
output2 = relay.Tuple([call_7317,call_7338,var_7337,call_7344,call_7349,])
func_7385 = relay.Function([var_7337,], output)
mod['func_7385'] = func_7385
mod = relay.transform.InferType()(mod)
mutated_mod['func_7385'] = func_7385
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7386 = relay.var("var_7386", dtype = "float32", shape = (1144,))#candidate|7386|(1144,)|var|float32
func_7385_call = mutated_mod.get_global_var('func_7385')
call_7387 = func_7385_call(var_7386)
output = call_7387
func_7388 = relay.Function([var_7386], output)
mutated_mod['func_7388'] = func_7388
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7416 = relay.var("var_7416", dtype = "float32", shape = (10, 16, 15))#candidate|7416|(10, 16, 15)|var|float32
uop_7417 = relay.sqrt(var_7416.astype('float32')) # shape=(10, 16, 15)
output = uop_7417
output2 = uop_7417
func_7419 = relay.Function([var_7416,], output)
mod['func_7419'] = func_7419
mod = relay.transform.InferType()(mod)
mutated_mod['func_7419'] = func_7419
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7420 = relay.var("var_7420", dtype = "float32", shape = (10, 16, 15))#candidate|7420|(10, 16, 15)|var|float32
func_7419_call = mutated_mod.get_global_var('func_7419')
call_7421 = func_7419_call(var_7420)
output = call_7421
func_7422 = relay.Function([var_7420], output)
mutated_mod['func_7422'] = func_7422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6187_call = mod.get_global_var('func_6187')
func_6188_call = mutated_mod.get_global_var('func_6188')
call_7427 = func_6187_call()
call_7428 = func_6187_call()
func_332_call = mod.get_global_var('func_332')
func_335_call = mutated_mod.get_global_var('func_335')
var_7432 = relay.var("var_7432", dtype = "float64", shape = (882,))#candidate|7432|(882,)|var|float64
call_7431 = func_332_call(relay.reshape(var_7432.astype('float64'), [9, 7, 14]))
call_7433 = func_332_call(relay.reshape(var_7432.astype('float64'), [9, 7, 14]))
func_5031_call = mod.get_global_var('func_5031')
func_5033_call = mutated_mod.get_global_var('func_5033')
call_7434 = relay.TupleGetItem(func_5031_call(), 0)
call_7435 = relay.TupleGetItem(func_5033_call(), 0)
func_6045_call = mod.get_global_var('func_6045')
func_6049_call = mutated_mod.get_global_var('func_6049')
var_7438 = relay.var("var_7438", dtype = "float32", shape = (196,))#candidate|7438|(196,)|var|float32
const_7439 = relay.const([-9.138916,5.638616,-8.229834,0.569102,-0.065261,-9.687804,-6.302829,-3.602998,-8.100052,-6.830105,2.102520,-0.298740,3.360914,-8.350025,-2.985317,-9.954831,-8.919220,-7.297199,1.098091,-8.563340,-2.643392,2.213410,7.654374,-7.661281,6.627349,-3.782893,3.741236,7.672736,-6.434991,9.442275,-4.152053,3.942669,6.921011,9.469086,-1.667056,4.158469,0.083731,1.727702,-5.489041,-7.239181,-3.126680,-2.206190,0.102607,2.717413,-3.931854,-2.162634,-9.410051,8.376525,-3.307269,1.808105,-4.610193,8.899127,0.973039,-1.752109,-7.009662,-8.604716,6.604977,-3.255895,-4.784879,1.081536,-6.591109,8.187252,8.554259,0.686579,8.685080,-3.503920,1.142346,9.795385,8.561446,-1.717904,4.326909,-4.667140,1.195294,7.097617,-6.721202,-0.755731,9.958028,-3.120211,1.346399,-1.222082,-7.623831,-2.640297,-9.192763,-9.132714,-9.465960,-3.215254,5.995374,-1.429250,3.903363,-5.291022,-7.128990,6.111854,-6.487991,2.061851,0.971069,2.449763,-8.223827,5.229629,6.032743,-9.482173,-8.956488,7.928771,-8.549475,-2.516364,-5.091232,3.504658,-7.919577,-8.342570,-3.031795,-6.776209,6.019271,8.747176,6.751818,-9.260053,7.767559,-2.593379,0.423363,3.691171,-6.520771,-6.762215,2.519099,3.564481,-9.026535,-6.105934,7.804850,-5.741390,-6.138531,8.962268,-9.697202,7.620220,-9.070041,2.287271,0.635394,8.665327,-7.308008,-2.340261,-4.865016,0.376541,9.284030,2.964504,-1.687555,1.335555,-7.443621,4.760192,6.601475,-8.728283,-4.388564,6.626948,-0.763261,9.063278,-7.147197,-8.399510,-6.102750,3.021069,-1.325042,-2.011506,-3.514313,8.561303,-4.287927,9.998389,6.975342,-2.824893,8.330275,-5.680946,-3.184017,0.574595,1.451603,6.333799,0.490384,-8.628342,-6.382034,6.680365,-4.529357,3.401605,5.332875,-6.860512,-5.402681,-0.895817,5.267651,4.362125,1.479051,-9.640182,7.478818,-4.833834,9.107101,-2.540346,1.375931,-8.686317,-8.653497,8.496186,9.638499,6.534699,-8.546574,8.786074,-6.211951,7.627571,7.319219,-6.177310,-3.917903,-2.103076,8.837352,1.668426,-8.586355,9.432181,9.840238,-6.394912,-6.697256,-0.473038,1.877061,-3.420956,-6.246251,6.854595,-8.795429,-2.989752,-2.022090,-3.617864,0.777114,9.827725,0.370187,6.900678,3.053294,2.745700,4.919955,-8.384232,-3.819888,-7.884885,-7.241264,-6.040811,9.152108,1.055826,5.267344,-0.199939,4.028442,-4.164944,-1.786007,3.615004,1.940831,0.051729,-3.373836,-0.466343,9.116047,-6.235200,-9.003641,-9.702076,7.324102,-3.377707,2.415573,-3.495996,-3.223653,3.414477,-0.479960,-2.684257,-8.960852,-4.517563,5.361509,7.485564,5.291026,-6.666291,-8.123596,1.896563,4.001713,7.681242,-3.788364,6.637221,-6.933349,6.189123,-9.764529,0.380677,-1.493609,3.975535,-6.093372,-8.043553,-6.451344,3.296077,0.363175,3.504762,-4.925893,5.112181,-4.417798,8.500565,9.553672,7.897460,-8.151298,-2.595632,-9.390262,-7.659445,-5.281583,-1.390308,-7.555789,-4.155476,-1.919493,-9.403092,-9.842435,-8.712824,-5.035751,2.359410,-1.481063,7.898963,4.345818,5.195740,-6.798123,-7.273542,-8.546423,6.287899,0.636008,-9.019908,6.522976,-8.677723,-2.048436,-5.995013,7.348222,3.655707,-9.860247,-8.892143,-1.075512,6.086642,-4.469425,-5.340546,-1.253035,8.725572,4.605056,-3.379173,-7.687403,-3.524070,7.896737,9.450196,-8.630158,-6.368663,-5.968871,5.445443,5.206070,7.346816,-9.054307,-3.848683,1.921965,-5.267300,-3.170093,-2.959181,-9.909499,9.891071,8.110062,-6.075255,4.871539,5.784796,4.336474,6.570660,3.534672,-8.101019,-7.151760,9.923605,-9.950556,-6.725568,-1.538008,8.267129,8.505514,-3.070395,-8.408811,-0.531253,0.431281,1.643441,-7.214869,4.093586,9.175372,-7.823245,6.656200,5.032511,4.493801,-6.606518,-8.434071,-5.547180,-9.435629,4.013489,0.112944,0.232079,1.168463,-3.747757,2.413199,7.768882,3.329087,-5.755158,1.955920,8.292637,9.664457,-5.588083,9.840141,8.774930,2.960599,-4.760636,-2.946432,-8.220782,-2.070485,-2.805192,-9.791076,-5.267404,4.315075,-3.356550,7.385101,4.177203,7.769848,-7.330640,6.749484,4.246557,-8.830252,3.610859,3.057263,-8.524814,-4.613284,7.509064,7.556488,5.818266,-5.131125,7.942294,4.098403,-1.094270,4.510628,1.715501,-1.811275,0.411090,6.129179,7.597297,-3.676965,-9.026683,-0.443090,-5.262069,-5.370478,-5.994338,9.935974,-7.138613,2.570213,-8.297058,4.320869,8.940955,-8.773802,0.448085,2.602630,-6.698391,-2.444092,5.551300,-6.344314,-8.678962,9.774776,6.583697,3.448957,7.407670,-7.557728,1.545372,8.104747,4.981970,5.106787,2.381513,6.235430,2.097013,0.797484,8.525630,-1.017377,-8.831821,-1.297505,-6.156067,1.161729,-4.697070,2.935208,3.082471,-3.698018,-6.518061,6.307069,3.413320,8.303933,3.881971,1.370603,-0.555369,-5.019261,7.783429,-7.903572,-1.845481,0.941795,3.992488,-3.986342,4.759419,0.119511,9.958038,-4.642765,-8.572978,0.027373,-1.159015,-4.346494,-1.098975,4.636543,1.295142,2.807754,4.544280,6.256202,-7.960521,1.013172,-3.433392,9.725880,-4.487139,-1.591795,-0.940736,-9.521151,-9.026500,0.428590,7.498833,-8.676853,1.840210,2.928694,-8.247845,9.139554,-9.095811,3.571238,-6.249119,-1.256486,-5.925563,4.044384,-6.315511,3.851125,-3.854474,9.572168,8.982718,-7.373339,-1.839545,5.213856,-0.363930,9.156387,7.893866,-2.010646,8.427550,-4.517913,7.169453,-1.331628,6.659673,6.057030,7.007534,-5.719481,-9.110851,9.798246,-6.239457,-9.377974,7.171494,5.955967,-9.742248,-4.329036,8.418615,4.447722,-7.633142,-7.354652,4.136937,5.342423,9.825383,5.648367,1.244310,-1.876097,7.283988,-6.868068,-6.146394,6.264920,6.828121,-3.916166,8.465175,-7.245248,-9.172375,1.865345,-8.449357,-1.621753,-0.944389,0.124049,-6.482362,2.421228,-1.527787,-9.809935,-5.403955,5.972414,-1.659759,-3.089545,1.838046,9.001258,7.239235,8.924518,-3.812808,9.532749,6.737468,-3.526237,-8.915448,1.907307,5.036648,1.179341,-1.465721,-4.387735,6.876552,-4.546947,6.911888,-8.312507,-7.049243,-4.341715,4.687631,-0.236466,-1.887520,-2.333078,-6.552932,-7.872435,8.099301,4.862398,-4.806436,-3.674926,-0.324844,3.380755,9.383521,9.150603,3.524288,-6.605184,6.163273,-1.998761,0.052533,9.278121,-8.863365,9.286152,6.444730,2.631142,-4.923618,8.509104,-8.314773,-9.026949,-0.978400,-0.386564,4.080087,-4.736195,5.549956,2.847144,9.296271,-1.674453,-0.055829,-4.584799,2.387602,4.141562,2.247623,-9.478023,7.250620,7.122085,-7.533524,-1.793338,-9.636393,0.236592,1.401633,-0.056294,2.376945,-7.163295,2.313427,4.532819,0.875026,-6.878008,-5.418549,-8.529595,-6.647506,1.860296,9.364008,-8.631878,5.012485,6.918063,-8.647973,2.683725,7.272619,7.523063,-4.670196,5.643995,-0.027712,0.637986,-3.003968,-3.698759,6.910009,-5.347137,5.511978,1.933483,-5.497664,6.392240,-3.748044,-3.346050,5.836813,-6.540603,-8.455541,8.605210,-2.451078,1.232942,-0.115526,9.692866,-2.514160,7.023304,-3.467859,-5.366240,7.418926,-7.328683,-5.206049,4.507315,-3.099756,-8.310952,0.655038,9.462560,-5.218619,2.263070,4.573849,-6.103309,-8.175757,9.877361,-5.510131,5.939313,-2.269797,-0.269546,-3.457028,-3.835854,9.695813,0.879329,-5.386407,-4.002877,-4.218423,9.795488,-8.175797,0.096886,0.796518,-5.077885,-0.563195,-3.509328,3.653365,4.440680,-6.882088,-1.073837,-1.597550,4.535223,1.752143,6.568202,9.132018,3.059472,9.112360,-6.532212,9.677599,-6.488295,-9.872306,-3.967976,2.525558,8.938847,4.183695,-6.341589,8.493812,-2.462863,3.715978,-0.778239,4.249292,7.715549,-7.602184,3.004008,-2.893709,7.041680,-5.771704,-2.894832,-0.286952,-2.308845,7.547761,4.055908,-5.539562,8.318646,-9.637585,-3.630782,0.838820,-9.404743,6.023942,-2.556141,3.325546,-8.292738,8.775654,-8.607970,-8.962524,-7.018310,1.877894,-1.789509,1.144272,5.130188,-2.810740,8.892572,0.862534,5.275200,-7.476929,-7.008228,-1.480009,7.077745,5.340399,7.945215,-2.199325,-9.544133,9.634731,8.308334,-7.074440,-1.617627,-0.045070,9.956946,2.769563,-4.882699,-3.791968,-2.542327,2.804186,-4.595317,4.942612,-7.255296,9.495337,7.575503,-0.398343,-8.702028,8.463379,8.796068,-6.697527,-8.929499,3.687864,3.744182,3.251783,-9.575582,-8.729917,-9.902994,-2.126895,1.141681,2.673245,6.658133,-4.626289,-5.507505,-0.005768,3.795764,-4.824311,3.822308,8.006919,5.466589,-6.588759,9.636261,9.022703,-1.237359,1.960015,0.200107,-2.165348,-7.386012,-3.132843,-9.871353,-7.888140,-5.648749,9.768829,-4.146999,-1.118213,-8.949271,-1.064646,5.628776,5.932047,9.879721,-7.745861,5.858462,2.921625,8.142084,-3.421594,1.714766,5.205135,-8.405973,6.402925,5.898747,-6.701557,-1.950181,-4.040555,-1.838209,1.090616,-1.193569,4.189567,-7.869272,6.439918,-8.063504,2.235697,-8.710526,9.614220,-1.538756,1.688626,4.968733,6.692487,-1.064113,9.411463,4.332197,3.316753,-2.174796,6.148786,1.386661,-6.239559,-4.825104,4.714151,1.370065,5.126612,6.424275,6.040610,0.318803,-7.021015,-6.463346,-5.551050,-4.314112,2.623109,-8.366317,7.572930,8.862220,-3.752861,-6.211530,-4.817272,-4.735581,1.468801,4.686669,-4.678845,0.825716,-7.595449,3.407730,7.274416,-7.505100,-5.113261,9.268562,0.044316,-6.670433,-3.293939,3.091534,-9.122526,7.842790,-0.794819,-0.478861,5.248246,8.800316,-7.094243,-1.760978,1.054538,-2.741879,-0.594053,3.851872,6.478281,3.230156,-1.467191,-4.880264,-4.363815,-3.507706,-9.599904,-6.246453,-7.503827,-6.729914,-6.738256,-5.800648,7.547426,4.139925,-1.607993,5.173622,-6.595528,-5.952704,-6.963265,5.077776,-2.691081,6.593296,5.663554,-4.023718,7.345260,-5.314940,3.202325,5.106923,9.712003,-0.754482,-8.559687,8.828908,-9.376528,7.140086,3.167494,-8.057219,3.903871,-6.600313,8.344962,-5.278381,5.556862,-2.612627,-1.337239,-6.526409,-3.322422,2.394340,-9.101545,-6.948111,-2.749150,8.265112,-8.441613,4.628671,6.767484,-8.672930,-4.869097,-9.625835,7.561855,4.519394,-0.100322,-3.530573,-3.388441,8.435456,-0.231505,-5.401998,-9.824260,-9.432826,5.311172,-5.590144,-2.833810,5.126648,7.000030,-8.255108,-8.290780,-7.833841,7.686685,4.993580,8.295886,4.387431,-1.930918,-1.653964,8.585658,-2.867409,9.079005,-3.812820,9.777854,-5.487206,2.951921,-8.555068,-5.976772,-5.285288,0.856528,-9.279387,7.897170,-0.141583,8.093994,-7.960532,-9.638136,8.444190,1.819982,7.656155,6.802378,6.333127,-6.158805,-0.967141,2.869616,7.201132,-2.035629,3.228073,1.828358,-2.477461,-3.151199,3.961606,0.698340,-5.962921,-0.337910,9.520038,-1.282005,-1.598058,-4.295243,9.751789,-7.452257,-1.343318,-5.320759,-7.862402,-4.975766,-6.494105,8.868089,7.214994,-5.231945,4.267504,7.354141,-9.964091,9.853205,-2.812055,3.807997,0.291500,-3.857503,2.474029,3.786951,-3.524137,-6.759021,1.224532,7.842233,-8.138736,-1.288725,-0.916075,-5.316284,2.565935,-0.654024,-7.546293,-2.309598,8.282563,4.679861,1.154357,-7.092018,-0.168216,2.164905,-2.732751,-6.169317,-1.426951,-6.047686,-0.741422,-7.804041,-1.793004,-6.939484,-2.655712,9.273317,5.619547,-0.177505,4.692325,4.643586,6.474349,6.434627,5.389606,-9.001117,7.716337,-2.714913,-6.283984,8.556813,0.617886,2.519925,-6.752388,4.118396,0.690646,0.485001,-7.382556,3.879917,3.380494,5.523313,-7.772002,-5.276448,-9.902094,-9.691887,9.651592,-9.438253,6.629611,2.012535,-5.482234,4.961480,-1.902646,-6.080017,3.884754,9.740906,6.010807,9.596245,-4.592428,8.613082,1.884513,5.209009,1.657907,0.984662,6.583062,3.394399,-5.895691,-3.837658,0.135103,6.673914,-2.338852,1.536829,-5.777756,4.604577,-7.835531,6.349505,-3.097132,2.405284,-2.700746,-0.611654,9.867766,5.783282,4.550929,-7.131165,7.021448,2.103666,-5.046637,7.643256,-3.646235,-2.830343,4.082743,-9.784859,-1.848929,0.063879,-2.113396,4.388816,6.517610,9.190589,-2.544313,8.366090,-8.983454,2.403183,3.473729,6.239367,9.043241,2.763747,1.872190,3.091270,1.997181,4.284630,-3.034182,3.266241,6.535979,-2.930056,-5.510547,8.499361,2.364619,-6.451727,0.535664,-8.343913,4.484683,5.528273,1.485818,-8.048363,-0.076025,-8.829775,-9.592067,-0.327818,5.509569,7.875708,4.873048,-3.354640,0.703802,0.566733,-5.039791,-7.269503,7.813232,-9.386811,-6.943915,6.355251,-9.181321,1.553366,8.068098,7.830234,7.894295,2.019753,4.630980,4.422881,-9.391158,-8.164883,-3.052466,-2.792504,-9.438170,-3.874025,8.063143,5.203507,4.127000,0.308847,3.485716,0.801374,8.168161,0.795297,-1.617574,-7.219378,2.031186,0.849809,9.237360,-5.092678,2.561442,-8.589536,-4.693256,-5.889901,-3.062852,9.613303,-7.273992,-3.382503,2.008992,5.264786,-5.595267,-5.102852,-3.133664,3.860869,7.129717,3.289999,-8.403752,9.662967,-2.772875,4.097122,2.552643,-0.155132,8.651303,-7.351617,-8.765398,7.992694,9.097584,-7.741460,4.182980,0.944667,6.865662,4.277884,-9.464361,0.787876,1.129524,1.411766,1.812108,-9.461385,7.288741,3.703888,-9.799788,-0.778142,-3.601724,2.222488,1.174631,-7.764336,-6.165307,-3.503186,-3.585526,5.735173,-0.605852,6.849611,-4.155192,2.837640,-1.624794,8.508964,6.037309,-0.899742,-7.228114,5.117466,-8.783830,1.428260,-4.080948,3.197517,9.281203,-7.815435,3.358779,8.618458,0.288084,3.025622,0.748352,8.754355,7.296541,-9.630114,2.335216,0.886959,5.730363,-8.116540,-6.235446,-7.110620,-5.128620,-4.165288,-1.909753,2.059668,-3.313042,9.460143,7.381789,-0.281168,-4.413555,6.798302,-7.138804,7.736973,4.274313,6.723854,2.629581,1.475781,-0.453612,-3.363592,6.698081,0.015264,-1.097145,3.898165,3.496833,-6.497546,-4.901885,4.625082,-8.871132,-4.212626,9.170880,-7.954929,7.457338,-8.617007,9.516895,7.243253,8.190576,-9.588627,6.270945,5.986746,6.813863,9.244584,5.429803,-9.475709,8.247994,5.108623,8.152940,-4.696341,4.855931,-9.122453,7.849160,5.115780,-5.334875,-2.182801,9.897611,-6.875928,-8.029497,-8.178187,4.376774,4.574823,9.691635,7.319339,-4.249303,-3.427884,-6.958182,-0.002865,-8.494936,-2.484711,5.835751,-9.585885,1.538655,6.955356,-2.199538,6.221267,1.530115,5.754234,-6.731912,7.972769,-3.309167,-0.949229,-6.785761,-3.612966,8.779409,-5.488972,8.264698,1.197238,1.927098,-4.329663,7.214936,6.291186,8.291864,2.729451,8.571731,-1.144150,-3.343174,0.519651,-7.861722,0.937473,-7.164960,-9.283258,0.342171,-7.941283,0.623829,-0.387531,9.506660,8.024005,-6.662933,-0.572828,0.529757,2.511423,7.706717,-7.508568,-7.507702,6.332619,2.545261,6.711295,-0.494089,-5.208327,-9.993069,-4.061327,-7.580139,-5.749406,-6.947975,3.814972,-9.552861,-6.587504,9.957709,0.951571,-8.189184,-1.364965,-2.469614,-5.998268,-7.365969,-2.726527,-2.454377,-4.403788,-0.516966,7.558476,2.443717,-8.074153,-8.679785,9.440907,-2.684693,2.351157,-0.112697,-0.873927,9.310442,3.148853,1.849636,8.565450,-4.729634,1.476428,-3.256606,7.439555,7.801997,5.484644,-9.527678,4.571139,2.103123,-8.829357,-8.050707,1.155702,6.678304,0.650067,-1.158694,-6.815502,-2.888167,-4.778154,2.736156,-8.037763,0.660332,-3.983618,9.596343,-5.460650,-8.479491,-2.488197,-1.587861,1.876120,-7.832068,-0.655057,5.453750,0.772936,-3.899869,-9.834707,6.304513,-0.726848,4.598377,8.633557,-3.699640,7.957069,-4.195355,-0.489799,3.328196,-8.585038,-6.810978,5.551236,-4.548942,-0.489039,-5.621432,-6.039736,7.242551,-7.433194,3.820969,9.950489,-7.472325,-1.499811,-5.297636,3.370254,-2.764634,1.382157,-9.431043,-7.702114,7.117075,-8.744673,-1.876709,-9.633858,0.318831,-3.283974,-6.440688,5.507463,-2.919372,5.196536,-9.789212,9.247057,-3.863585,4.616579,5.574358,4.876216,-0.563406,-3.717990,-0.155365,5.327651,1.766972,-9.357087,5.329366,-0.961081,-0.170925,2.003906,-9.676837,1.591911,4.301994,-6.015026,9.342570,-6.459513,2.294209,-5.584248,7.835477,7.694746,5.854538,-0.977921], dtype = "float64")#candidate|7439|(1568,)|const|float64
call_7437 = relay.TupleGetItem(func_6045_call(relay.reshape(var_7438.astype('float32'), [196,]), relay.reshape(const_7439.astype('float64'), [1568,]), ), 2)
call_7440 = relay.TupleGetItem(func_6049_call(relay.reshape(var_7438.astype('float32'), [196,]), relay.reshape(const_7439.astype('float64'), [1568,]), ), 2)
bop_7449 = relay.right_shift(var_7432.astype('int64'), relay.reshape(call_7431.astype('int64'), relay.shape_of(var_7432))) # shape=(882,)
bop_7452 = relay.right_shift(var_7432.astype('int64'), relay.reshape(call_7433.astype('int64'), relay.shape_of(var_7432))) # shape=(882,)
output = relay.Tuple([call_7427,call_7434,call_7437,var_7438,const_7439,bop_7449,])
output2 = relay.Tuple([call_7428,call_7435,call_7440,var_7438,const_7439,bop_7452,])
func_7466 = relay.Function([var_7432,var_7438,], output)
mod['func_7466'] = func_7466
mod = relay.transform.InferType()(mod)
var_7467 = relay.var("var_7467", dtype = "float64", shape = (882,))#candidate|7467|(882,)|var|float64
var_7468 = relay.var("var_7468", dtype = "float32", shape = (196,))#candidate|7468|(196,)|var|float32
output = func_7466(var_7467,var_7468,)
func_7469 = relay.Function([var_7467,var_7468,], output)
mutated_mod['func_7469'] = func_7469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7471 = relay.var("var_7471", dtype = "float64", shape = (6, 4, 7))#candidate|7471|(6, 4, 7)|var|float64
uop_7472 = relay.cos(var_7471.astype('float64')) # shape=(6, 4, 7)
func_5512_call = mod.get_global_var('func_5512')
func_5513_call = mutated_mod.get_global_var('func_5513')
call_7479 = relay.TupleGetItem(func_5512_call(), 0)
call_7480 = relay.TupleGetItem(func_5513_call(), 0)
output = relay.Tuple([uop_7472,call_7479,])
output2 = relay.Tuple([uop_7472,call_7480,])
func_7493 = relay.Function([var_7471,], output)
mod['func_7493'] = func_7493
mod = relay.transform.InferType()(mod)
var_7494 = relay.var("var_7494", dtype = "float64", shape = (6, 4, 7))#candidate|7494|(6, 4, 7)|var|float64
output = func_7493(var_7494)
func_7495 = relay.Function([var_7494], output)
mutated_mod['func_7495'] = func_7495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7128_call = mod.get_global_var('func_7128')
func_7130_call = mutated_mod.get_global_var('func_7130')
call_7515 = relay.TupleGetItem(func_7128_call(), 0)
call_7516 = relay.TupleGetItem(func_7130_call(), 0)
output = relay.Tuple([call_7515,])
output2 = relay.Tuple([call_7516,])
func_7523 = relay.Function([], output)
mod['func_7523'] = func_7523
mod = relay.transform.InferType()(mod)
output = func_7523()
func_7524 = relay.Function([], output)
mutated_mod['func_7524'] = func_7524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6148_call = mod.get_global_var('func_6148')
func_6149_call = mutated_mod.get_global_var('func_6149')
call_7546 = relay.TupleGetItem(func_6148_call(), 0)
call_7547 = relay.TupleGetItem(func_6149_call(), 0)
func_5664_call = mod.get_global_var('func_5664')
func_5667_call = mutated_mod.get_global_var('func_5667')
const_7549 = relay.const([[False,True,False,False,True,True,True,False,False,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,False,False,False,False,False,False,True,True,False,False,True,True,True,False,True,False,False,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True,False,True,True,False,True,False,True,False,True,False,True,False,False,False,False,False,True,False,False,True,False,True,False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,True,False,False,True,False,True,True,True,True,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,True,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,True,False,True,False,True,True,False,False,False,True,True,True,True,False,True,True,True,True,True,False,False,True,False,False,False,True,False,False,True,False,False,False,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,True,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,False,False,True,True,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,True,True,True,False,False,False,True,False,False,True,True,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,False,True,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,False,True,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False,True,True,False,False]], dtype = "bool")#candidate|7549|(1, 495)|const|bool
call_7548 = relay.TupleGetItem(func_5664_call(relay.reshape(const_7549.astype('bool'), [5, 9, 11]), relay.reshape(const_7549.astype('bool'), [5, 9, 11]), ), 1)
call_7550 = relay.TupleGetItem(func_5667_call(relay.reshape(const_7549.astype('bool'), [5, 9, 11]), relay.reshape(const_7549.astype('bool'), [5, 9, 11]), ), 1)
output = relay.Tuple([call_7546,call_7548,const_7549,])
output2 = relay.Tuple([call_7547,call_7550,const_7549,])
func_7552 = relay.Function([], output)
mod['func_7552'] = func_7552
mod = relay.transform.InferType()(mod)
mutated_mod['func_7552'] = func_7552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7552_call = mutated_mod.get_global_var('func_7552')
call_7553 = func_7552_call()
output = call_7553
func_7554 = relay.Function([], output)
mutated_mod['func_7554'] = func_7554
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7587 = relay.var("var_7587", dtype = "int32", shape = (16, 16, 10))#candidate|7587|(16, 16, 10)|var|int32
var_7588 = relay.var("var_7588", dtype = "int32", shape = (16, 16, 10))#candidate|7588|(16, 16, 10)|var|int32
bop_7589 = relay.not_equal(var_7587.astype('bool'), relay.reshape(var_7588.astype('bool'), relay.shape_of(var_7587))) # shape=(16, 16, 10)
bop_7592 = relay.less_equal(bop_7589.astype('bool'), relay.reshape(var_7588.astype('bool'), relay.shape_of(bop_7589))) # shape=(16, 16, 10)
output = relay.Tuple([bop_7592,])
output2 = relay.Tuple([bop_7592,])
func_7606 = relay.Function([var_7587,var_7588,], output)
mod['func_7606'] = func_7606
mod = relay.transform.InferType()(mod)
mutated_mod['func_7606'] = func_7606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7606_call = mutated_mod.get_global_var('func_7606')
var_7608 = relay.var("var_7608", dtype = "int32", shape = (16, 16, 10))#candidate|7608|(16, 16, 10)|var|int32
var_7609 = relay.var("var_7609", dtype = "int32", shape = (16, 16, 10))#candidate|7609|(16, 16, 10)|var|int32
call_7607 = func_7606_call(var_7608,var_7609,)
output = call_7607
func_7610 = relay.Function([var_7608,var_7609,], output)
mutated_mod['func_7610'] = func_7610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6148_call = mod.get_global_var('func_6148')
func_6149_call = mutated_mod.get_global_var('func_6149')
call_7619 = relay.TupleGetItem(func_6148_call(), 0)
call_7620 = relay.TupleGetItem(func_6149_call(), 0)
func_5969_call = mod.get_global_var('func_5969')
func_5972_call = mutated_mod.get_global_var('func_5972')
const_7625 = relay.const([[2.802598,9.461763],[-8.866794,3.613295],[-2.488620,5.000454],[-4.283049,-1.076419],[8.847124,4.123311],[-4.609799,-4.636844],[-9.066756,2.743554],[-4.597146,-1.078131],[-1.453346,-4.120691],[-5.263395,4.895130],[7.419985,6.078010],[-4.672849,2.060046],[-1.399615,-8.315618],[2.804416,1.647789],[-7.075023,-0.782756],[-8.181314,-4.064786],[4.335604,4.226607],[-3.929712,-2.905123],[-3.709011,1.861202],[3.794635,-4.206944],[9.300700,8.169670],[4.095491,6.964495],[1.254733,8.513351],[-8.505731,-9.982214],[-6.055855,-1.578302],[-1.263241,-0.822737],[-8.976186,-9.590401],[9.938575,9.843543],[4.496483,8.627483],[-9.285304,-1.505434],[6.598393,8.888173],[3.903900,9.350881],[6.083319,7.276573],[-6.652124,-3.078176],[0.456212,7.960715],[2.159870,-1.010112],[4.277662,-6.191952],[-7.519648,4.915944],[-0.091532,4.285480],[8.364739,1.306576],[-6.336088,-6.472505],[-9.848489,-1.734972],[3.258270,-8.465440],[-0.608338,8.780888],[3.704959,1.144545],[-6.595526,7.104006],[7.123869,3.411253],[7.330295,-6.167378],[5.475623,-7.608932],[3.479932,2.940327],[-3.509791,-1.237165],[-6.238002,-5.417956],[5.887141,2.171019],[2.065921,-9.095624],[-4.216425,8.162426],[-1.972510,8.012448],[-9.615680,0.799137],[-4.570636,5.620081],[5.475021,-1.740968],[4.097510,3.476325],[-7.323901,3.907574],[5.489617,6.382667],[1.808131,7.115340],[-6.927149,3.599510],[-0.664982,-2.340202],[3.294142,-6.317362],[7.970000,2.729038],[2.508602,1.115303],[1.908618,4.368078],[-8.368506,-3.424824],[2.710061,2.971644],[7.919842,5.362239],[-3.779498,-6.609281],[4.098211,-5.891694],[5.057760,9.362328],[-1.329043,7.363422],[0.241489,-3.402938],[7.407820,2.394434],[-6.175713,-9.106571],[6.727237,1.567635],[7.381973,-3.873473],[-1.406430,-8.799895],[-2.381693,0.513533],[-5.956749,-8.369183],[7.137851,-7.781110],[-1.856027,-4.972393],[-5.934113,-5.698945],[-7.417885,9.681099],[7.614585,-9.193868],[-5.684324,-4.008291],[-2.973738,1.746656],[-7.481511,0.596955],[-3.255906,-7.955985],[9.875484,3.486856],[6.099116,-3.125433],[-3.987498,2.442720],[9.251547,1.917572],[-5.507990,-3.146972],[6.454630,-4.810648],[4.821035,-7.197205],[8.978393,-8.449032],[6.843840,-7.652854],[0.343615,-1.477177],[4.347713,-9.705299],[1.476598,-5.725540],[6.440503,-6.530519],[9.429828,-2.022659],[-2.638668,-6.745831],[2.742883,2.216859],[5.898464,2.224331],[-7.282891,-1.005383],[6.870534,-2.339946],[-6.250969,9.516683],[3.362907,9.223626],[-7.245631,8.668260],[-1.166034,-4.186064],[7.151620,-3.503061],[5.425144,4.382592],[3.265627,5.033268],[-7.535482,7.816525],[4.356897,-8.321032],[-1.880752,4.268849],[4.036012,-5.357308],[-6.882968,4.368265],[-0.289288,-5.300296],[5.572055,5.360362],[9.685261,-4.813681],[-5.149596,7.007902],[-7.773657,-0.426327],[7.588893,3.483649],[-6.512508,-2.204306],[-9.753713,-8.514013],[8.200810,-7.221882],[6.163849,4.194204],[4.018588,-5.720298],[9.792005,7.296618],[-3.590500,-7.221949],[9.765839,-1.215536],[1.856804,-0.688940],[2.230705,-4.933509],[-2.995114,4.158545],[-7.915090,-4.788295],[-0.017037,9.932639],[-7.039779,4.565171],[-4.573193,-4.793167],[0.509843,-2.163108],[2.814869,-2.989833],[5.860771,2.652402],[-5.702350,3.407096],[8.744770,-7.395626],[8.376308,0.796123],[-2.733141,-7.035659],[2.221820,-1.467516],[4.791158,9.482409],[3.867907,1.437510],[5.502844,-4.360071],[-7.965888,-3.054815],[-9.466456,2.843585],[9.413542,0.660264],[-7.137844,-8.972653],[4.886720,-3.388015],[7.512780,1.233643],[-5.840016,-6.970173],[-6.595673,8.583385],[-6.031183,-8.001434],[-9.177295,-2.187802],[8.159540,6.445403],[0.073606,2.629053],[-7.770961,-3.830681],[0.901229,-9.592936],[-5.913997,6.358505],[-6.275493,0.686289],[6.629553,7.035173],[-3.244042,1.320660],[5.015568,7.883060],[-1.675647,0.160914],[-0.251304,7.659102],[-6.989558,8.454377],[-6.134235,4.594516],[2.467353,9.021207],[-7.285535,-0.960217],[0.836855,-7.761508],[-4.786826,3.400867],[-5.490416,0.130744],[-2.860396,1.203802],[1.348572,-1.415370],[8.614456,-6.166230],[-7.069343,6.003080],[-2.537713,1.059615],[5.233462,-6.656441],[6.394438,6.578048],[7.224325,0.960357],[3.265896,-8.754975],[1.581071,-2.219979],[-2.465788,-0.572832],[-1.028740,6.015595],[5.267680,-5.022283],[7.259354,2.724578],[9.528823,-5.253397],[0.957003,-4.974083],[-3.899816,3.157487],[8.482973,6.812640],[-7.348823,2.791148],[1.885412,2.833128],[1.561654,-2.052645],[7.214194,-0.815265],[-9.803357,5.429320],[-9.138561,-9.753124],[-0.748277,-9.841261],[7.265333,2.012450],[7.795452,-2.090061],[4.976522,-8.444413],[-2.224404,6.647685],[-6.495747,-0.897294],[2.010145,-4.925989],[6.348867,-6.150557],[9.779481,-0.307744],[-3.475743,-6.137400],[-7.593929,7.539907],[4.602281,-8.808634],[-2.098489,0.032025],[0.296576,0.125539],[9.896009,-9.175621],[-7.897156,-3.677573],[-4.413748,-7.153366],[-3.498141,-3.014170],[9.790022,-0.126269],[8.942215,-2.673298],[5.301001,-2.860802],[6.278178,3.912681],[-6.127541,-9.617968],[-6.773763,-0.984824],[5.434799,-4.619981],[3.677494,-7.501051],[-6.151805,7.400114],[2.132695,4.956791],[6.208226,-7.016754],[5.661804,9.407578],[6.769840,-4.529740],[-9.287267,-1.035282],[2.283323,9.722669],[-2.315840,1.807016],[6.094776,-7.506903],[6.965746,5.743132],[-3.775894,5.195926],[2.971015,3.566842],[-8.874273,-3.728817],[-4.779868,-8.445873],[4.452584,-8.789234],[9.154552,-3.156086],[1.590608,-4.381265],[-2.993071,3.899536],[1.730631,-5.666864],[-4.581538,2.761955],[0.613084,2.465844],[7.724212,1.035088],[-8.242036,-7.507195],[-5.227628,-5.017847],[7.480239,-3.465979],[-1.661549,-3.945229],[-7.919650,-9.690828],[-0.423790,-8.782440],[2.778636,6.311188],[1.124086,-0.762380],[1.092618,-7.147820],[2.418811,4.123967],[0.956724,4.276912],[3.872339,5.315192],[-3.925297,-9.797982],[0.561851,6.205898],[8.569546,7.760684],[2.714125,-0.130868],[-2.328764,-1.044412],[4.639458,0.106841],[2.291495,-6.353150],[-1.282149,2.643350],[4.584368,-4.371050],[-7.504126,6.089829],[-3.754179,-8.072983],[-8.768544,-6.977159],[6.302638,6.373101],[-5.227582,5.306563],[8.655220,1.394990],[0.900275,-0.627668],[-2.071829,-7.650215],[-9.874502,-2.627322],[-5.745986,8.595866],[6.278717,-5.607714],[-2.393909,1.880853],[-1.582335,3.263822],[-9.631256,4.829292],[6.910698,-0.298894],[-4.423310,-4.786070],[1.795496,-1.166100],[9.392385,-2.906968],[6.650393,-2.925469],[-8.472766,7.589100],[-4.719608,-7.690513],[4.465428,2.931202],[-2.774777,-3.084780],[-7.955299,5.948713],[-9.925313,2.168473],[9.929174,-8.866717],[-6.287044,0.413538],[6.530241,5.307847],[5.238900,-5.349731],[-1.953979,0.232542],[-1.248234,3.703730],[-8.036191,-1.706897],[-6.896037,-9.211404],[2.829067,2.766786],[8.423216,5.563652],[9.840312,5.652882],[-3.891777,6.143432],[3.493258,7.468354],[-3.300426,-9.625449],[-9.962280,9.372044],[-9.129479,-1.479075],[2.077973,-5.119592],[-1.439369,1.034889],[-1.784621,-8.938037],[-9.660841,7.994740],[-6.906166,5.644890],[-4.351018,1.431349],[-8.533026,7.076536],[5.716928,3.348252],[4.732317,8.283280],[2.166546,4.403717],[2.759968,-1.011720],[7.957952,0.547343],[3.749434,0.922648],[-8.670006,-3.718836],[4.968513,-5.494913],[1.273941,6.359692],[5.513073,2.504648],[9.200303,-0.155480],[-2.344133,9.856125],[7.551999,-6.445959],[1.137794,-7.737258],[-0.299627,9.837738],[-3.494231,-0.007868],[4.107211,4.984463],[8.148621,5.140240],[9.645392,6.654434],[-8.404952,-0.375258],[-1.862736,-0.922541],[-3.785131,9.390993],[9.303181,-7.626014],[-6.970355,-5.758751],[9.885785,-7.930269],[-0.441178,0.414524],[-0.746798,2.172168],[1.453903,-6.711736],[-2.125289,-7.077797],[1.631684,-3.844001],[-0.924650,-6.164200],[1.986148,-5.291417],[-8.672849,7.040614],[-9.648282,7.690645],[-2.256692,4.157913],[-7.062717,7.891558],[3.596795,0.860410],[3.271924,7.235898],[-1.568354,8.442060],[-5.137690,-8.303669],[-7.974089,8.848195],[9.601284,3.653540],[-8.528279,6.706266],[-6.195383,4.146090],[-7.027463,-8.882261],[-5.073622,0.328007],[-0.220214,6.124357],[-3.511103,9.147465],[4.226262,1.665194],[0.138185,-9.781348],[-5.369795,-9.707983],[-9.958248,-8.572819],[-2.003501,3.558297],[-3.533774,-1.192806],[2.161281,-9.778289],[9.786919,-4.005472],[-0.322576,8.836557],[2.130643,6.211420],[-4.928570,-9.353176],[-4.251285,0.400535],[-4.565217,7.281734],[-8.131921,7.750006],[2.530863,6.878317],[8.157403,-4.457395],[-7.041110,-2.241160],[8.175268,5.625229],[8.081329,8.334709],[-0.014605,4.366741],[2.805838,7.214194],[-3.958361,1.286044],[-2.714131,-6.158606],[-5.171570,-2.504233],[8.978853,-5.595871],[-1.426727,-6.572285],[-8.385082,4.881646],[-7.058100,1.988858],[-0.836927,7.544567],[2.756151,-7.919122],[-3.197819,2.331292],[4.300581,7.003091],[-2.173189,-8.811166],[5.062661,6.305869],[-3.725398,-3.662090],[5.658236,-2.842217],[-9.309886,-9.544900],[-4.902205,-0.710294],[2.263759,0.108471],[0.464453,9.856004],[1.312018,-1.950262],[-4.422735,-1.053989],[4.551326,-6.530832],[-0.334329,-5.170009],[-0.865972,-8.196487],[8.468793,2.067571],[-7.661444,-8.157124],[8.535429,-8.455857],[6.902097,3.877726],[-8.227006,-2.395251],[-7.105688,-1.571206],[1.533387,-1.893056],[6.413547,-6.223287],[5.497671,4.771787],[-9.635534,0.430214],[-1.426240,-0.121460],[-6.778514,7.229270],[6.593349,-5.002370],[-3.554196,-8.705053],[3.017253,-2.980606],[4.329050,-4.010769],[-4.494293,5.097484],[9.420802,4.246974],[-3.103514,6.718259],[1.755598,0.534146],[-6.010009,4.580838],[-4.364378,-3.186349],[-9.783861,-2.191825],[1.478358,-7.883294],[-5.909436,-7.701795],[-4.997706,5.385983],[-7.019026,4.540115],[-1.199412,-1.545796],[0.094990,7.746071],[-3.479559,7.499837],[-7.554335,-9.174455],[-3.021221,-2.914429],[-4.258362,-5.158306],[-0.234465,4.710321],[-5.344678,-2.035615],[1.205365,9.194636],[-2.988109,-9.664658],[-3.690882,6.805313],[8.993724,-9.405908],[-0.226061,5.372825],[-0.006790,4.026491],[4.912348,5.805434],[-2.325828,-2.202032],[-3.883332,-3.079975],[3.072642,7.475024],[-5.468419,-2.917444],[4.285479,-7.842909],[4.865563,-9.730032],[4.494831,-8.878415],[8.623452,6.229540],[-8.371898,3.909193],[2.219754,0.298249],[1.904808,0.815901],[-6.431052,9.978528],[-5.036261,8.510200],[6.198735,5.876833],[-0.420412,-4.911033],[9.120447,1.228645],[9.315517,3.626913],[-5.019125,6.402075],[1.710554,1.745816],[8.262180,8.625664],[-9.873148,0.020524],[3.491057,4.856271],[0.614438,1.259990],[4.160357,-7.610886],[2.673020,4.345290],[-8.284553,7.776225],[7.831598,6.943506],[-7.943651,3.521788],[-9.714547,-9.719997],[8.207081,9.817379],[1.522601,-0.291926],[0.828547,-0.987480],[-0.340612,-6.375843],[-4.132711,-3.646831],[-8.396284,-1.981480],[0.815800,-5.033340],[8.286000,4.766979],[-3.903392,5.427780],[1.544887,-1.210059],[-3.433658,3.788669],[-4.085676,6.626770],[-9.081049,0.017704],[-3.841281,2.348040],[3.356751,5.766656],[-0.977741,4.169093],[9.885169,7.737227],[-4.835442,5.832140],[-4.930649,2.218087],[-2.714304,7.096149],[9.467567,2.511019],[1.263941,9.341229],[-7.861117,8.640738],[5.493766,6.909986],[8.719927,7.658109],[-3.882534,-5.533384],[3.697665,-8.206760],[-7.298344,-3.693382],[-0.592575,6.471281],[-6.178663,-6.154911],[7.456558,-4.817685],[-4.878835,2.017944],[-2.861758,-6.899028],[6.406966,0.593128],[-9.568919,-6.935281],[9.914875,-0.894255],[8.970086,1.112146],[-0.877350,-1.010353],[3.856883,-4.903193],[3.141247,6.865073],[-1.181932,-1.005960],[-4.705967,0.580011],[7.227954,-0.733856],[-7.072340,-5.789230],[-7.239141,-3.041169],[1.206642,7.222635],[7.524056,5.348649],[5.913803,-6.894796],[-0.380909,-6.851373],[-3.417164,3.284549],[1.348397,-1.452459],[9.083257,9.957131],[3.847825,-2.385077],[1.692886,8.584973],[-8.946939,6.287941],[-4.652358,6.127916],[-5.233880,4.406547],[4.986090,7.808756],[-2.857393,9.561338],[-2.303811,-2.935520],[-8.041634,5.062410],[-2.548789,-7.495523],[9.707057,-4.260711],[3.970575,-6.895290],[0.713841,-1.809089],[-5.594565,-0.758285],[7.143482,-6.260196],[-0.305638,6.731537],[-0.383540,-6.675530],[-8.748887,2.652648],[-2.625753,5.167999],[8.610748,-2.417470],[1.242467,-6.852732],[-1.444968,4.421991],[-3.046030,6.671219],[-3.305024,3.071241],[8.726280,1.861131],[-0.637830,0.492666],[-5.596876,-0.603293],[-6.891065,7.804366],[8.868231,-2.731805],[-3.652462,6.695426],[3.420618,2.478314]], dtype = "float32")#candidate|7625|(572, 2)|const|float32
call_7624 = relay.TupleGetItem(func_5969_call(relay.reshape(const_7625.astype('float32'), [1144,])), 0)
call_7626 = relay.TupleGetItem(func_5972_call(relay.reshape(const_7625.astype('float32'), [1144,])), 0)
var_7651 = relay.var("var_7651", dtype = "float32", shape = (572, 2))#candidate|7651|(572, 2)|var|float32
bop_7652 = relay.greater_equal(const_7625.astype('bool'), relay.reshape(var_7651.astype('bool'), relay.shape_of(const_7625))) # shape=(572, 2)
output = relay.Tuple([call_7619,call_7624,bop_7652,])
output2 = relay.Tuple([call_7620,call_7626,bop_7652,])
func_7671 = relay.Function([var_7651,], output)
mod['func_7671'] = func_7671
mod = relay.transform.InferType()(mod)
mutated_mod['func_7671'] = func_7671
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7672 = relay.var("var_7672", dtype = "float32", shape = (572, 2))#candidate|7672|(572, 2)|var|float32
func_7671_call = mutated_mod.get_global_var('func_7671')
call_7673 = func_7671_call(var_7672)
output = call_7673
func_7674 = relay.Function([var_7672], output)
mutated_mod['func_7674'] = func_7674
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7718 = relay.var("var_7718", dtype = "float64", shape = (10, 14, 1))#candidate|7718|(10, 14, 1)|var|float64
uop_7719 = relay.log(var_7718.astype('float64')) # shape=(10, 14, 1)
var_7738 = relay.var("var_7738", dtype = "float64", shape = (10, 14, 16))#candidate|7738|(10, 14, 16)|var|float64
bop_7739 = relay.logical_or(var_7718.astype('bool'), var_7738.astype('bool')) # shape=(10, 14, 16)
func_6679_call = mod.get_global_var('func_6679')
func_6681_call = mutated_mod.get_global_var('func_6681')
call_7747 = func_6679_call()
call_7748 = func_6679_call()
var_7750 = relay.var("var_7750", dtype = "float64", shape = (10, 14, 6))#candidate|7750|(10, 14, 6)|var|float64
bop_7751 = relay.power(uop_7719.astype('float32'), var_7750.astype('float32')) # shape=(10, 14, 6)
var_7754 = relay.var("var_7754", dtype = "bool", shape = (10, 14, 16))#candidate|7754|(10, 14, 16)|var|bool
bop_7755 = relay.multiply(bop_7739.astype('uint32'), relay.reshape(var_7754.astype('uint32'), relay.shape_of(bop_7739))) # shape=(10, 14, 16)
func_5425_call = mod.get_global_var('func_5425')
func_5427_call = mutated_mod.get_global_var('func_5427')
call_7761 = relay.TupleGetItem(func_5425_call(), 0)
call_7762 = relay.TupleGetItem(func_5427_call(), 0)
bop_7772 = relay.right_shift(uop_7719.astype('int16'), relay.reshape(var_7718.astype('int16'), relay.shape_of(uop_7719))) # shape=(10, 14, 1)
uop_7806 = relay.atanh(bop_7772.astype('float64')) # shape=(10, 14, 1)
output = relay.Tuple([call_7747,bop_7751,bop_7755,call_7761,uop_7806,])
output2 = relay.Tuple([call_7748,bop_7751,bop_7755,call_7762,uop_7806,])
func_7808 = relay.Function([var_7718,var_7738,var_7750,var_7754,], output)
mod['func_7808'] = func_7808
mod = relay.transform.InferType()(mod)
mutated_mod['func_7808'] = func_7808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7808_call = mutated_mod.get_global_var('func_7808')
var_7810 = relay.var("var_7810", dtype = "float64", shape = (10, 14, 1))#candidate|7810|(10, 14, 1)|var|float64
var_7811 = relay.var("var_7811", dtype = "float64", shape = (10, 14, 16))#candidate|7811|(10, 14, 16)|var|float64
var_7812 = relay.var("var_7812", dtype = "float64", shape = (10, 14, 6))#candidate|7812|(10, 14, 6)|var|float64
var_7813 = relay.var("var_7813", dtype = "bool", shape = (10, 14, 16))#candidate|7813|(10, 14, 16)|var|bool
call_7809 = func_7808_call(var_7810,var_7811,var_7812,var_7813,)
output = call_7809
func_7814 = relay.Function([var_7810,var_7811,var_7812,var_7813,], output)
mutated_mod['func_7814'] = func_7814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5729_call = mod.get_global_var('func_5729')
func_5730_call = mutated_mod.get_global_var('func_5730')
call_7826 = relay.TupleGetItem(func_5729_call(), 1)
call_7827 = relay.TupleGetItem(func_5730_call(), 1)
func_3647_call = mod.get_global_var('func_3647')
func_3651_call = mutated_mod.get_global_var('func_3651')
var_7829 = relay.var("var_7829", dtype = "int64", shape = (7,))#candidate|7829|(7,)|var|int64
const_7830 = relay.const([-4,-4,9,5,-5,8,-7,-3,-4,-10,-3,7,4,-10,-1,10,9,4,9,5,6,-7,10,10,2,-2,-6,2,-3,2,9,-7,5,6,3,-5,5,-2,5,-10,1,-3,10,-8,-10,-7,2,9,7,9,-7,1,-10,8,6,-2,1,-3,-3,-6,-3,5,-4,3,8,-3,8,-6,6,2,1,8,-1,2,4,-10,10,-10,-8,8,-7,-2,5,-3,-1,5,-1,5,-6,10,7,-4,-5,-1,-9,10,10,-1,9,7,1,3,5,-7,-5,8,7,6,8,5,-6,1,7,2,8,-6,-9,2,-7,6,4,-1,-6,4,-6,-1,-6,-2,-6,10,2,-2,5,7,-3,-3,9,-9,-2,-8,4,5,-4,4,1,-4,10,-6,-2,-6,-7,3,2,10,-4,4,-10,7,-8,-3,-5,-10,7,-7,-10,-5,1,-1,-9,-8,-9,-1,3,-2,1,10,6,-8,-5,-1,9,1,1,6,3,3,8,3,-3,4,2,-7,-3,1,-1,4,8,3,-7,1,1,-4,-9,-2,-3,6,8,6,-2,1], dtype = "int64")#candidate|7830|(210,)|const|int64
const_7831 = relay.const([5,-9,9,5,6,4,-7,-8,-5,3,6,9,-3,9,4,7,5,8,-4,4,9,1,-10,2,7,9,7,7,10,-5,-4,-4,10,5,-4,-3,6,10,-2,1,10,-5,9,8,-10,6,5,6,-3,-9,-9,-2,6,-9,6,10,-2,-4,8,2,5,5,7,7,-2,9,-9,-4,-4,-5,-5,-6,-1,9,2,-1,-9,-9,8,8,-2,-1,9,10,-2,-4,2,-3,-10,-4,4,-1,10,3,10,9,-10,5,-10,3,-1,-9,6,-8,4,1,5,-5,6,6,1,7,10,1,8,1,10,6,2,2,-6,-6,-7,-10,8,8,-3,-1,7,-2,7,-8,-5,-2,-8,5,-1,5,-3,-2,10,2,-5,6,-6,-8,-4,-1,1,-8,-10,-3,5,9,-4,2,-1,7,7,7,-2,8,3,4,3,-5,6,-3,9,-2,-5,6,7,1,5,-1,4,2,9,3,10,6,-9,9,-5,10,-5,5,8,-8,-3,-9,-10,-4,6,4,7,-2,-3,6,-1,-7,1,-10,7,3,9,-6,-2,10,8,-4,6,-5,8,-4,-6,-5,4,-9,3,10,1,-3,-6,10,8,1,1,-10,7,-8,-6,3,8,10,1,7,8,6,-4,-10,-2,4,-8,10,10,-8,1,-6,-1,-4,8,6,-1,10,9,-6,10,4,-6,-1,4,-3,-3,8,5,8,-5,-7,-7,2,6,8,-9,4,-9,-2,-6,-2,3,-5,-1,-10,-9,3,-6,1,4,-10,4,-10,10,-7,-8,7,8,10,7,8,-10,2,-7,-10,4,5,5,-2,9,1,-10,-1,-2,-10,4,9,-10,-10,5,7,1,9,9,-8,3,-10,-10,9,-3,-5,6,10,4,-2,-1,10,3,5,3,4,7,-8,4,-10,-8,-5,8,2,-5,-1,-5,8,2,-4,9,10,-10,2,6,3,7,-10,-3,-5,7,5,-8,-2,6,-5,1,-2,6,7,6,-5,7,-7,8,-9,9,4,4,-8,-1,-7,10,3,3,-7,-1,-1,-10,9,2,10,1,-9,-2,-7,-9,5,-4,-5,-10,6,-7,-10,-7,4,8,-1,1,-3,-6,-6,-5,-6,9,3,-8,-3,-8,-1,-3,-4,-2,-9,4,6,2,-9,-2,5,-8,3,9,-10,-8,-2,9,-3,3,-4,5,9,1,-6,2,-6,-8,-8,-2,4,1,-10,-1,1,-6,1,4,-9,-9,-10,4,3,3,-1,-2,-7,-10,-5,-2,7,3,9,9,4,3,-8,10,-3,5,-9,8,9,-5,-10,-3,2,4,-3,9,10,-3,-1,10,-9,-7,-1,6,-4,6,-5,1,-3,9,8,5,-10,-4,1,-6,-10,-9,-9,-3,-6,-6,-6,-8,-2,6,3,-5,10,-5,-5,1,5,6,-7,-6,8,1,7,-6,4,-8,-3,-3,4,4,-10,-7,-7,8,4,6,-4,-7,-6,-1,-2,1,-3,8,4,-9,7], dtype = "int64")#candidate|7831|(560,)|const|int64
call_7828 = relay.TupleGetItem(func_3647_call(relay.reshape(var_7829.astype('int64'), [1, 1, 7]), relay.reshape(const_7830.astype('int64'), [5, 6, 7]), relay.reshape(const_7831.astype('int64'), [5, 16, 7]), ), 1)
call_7832 = relay.TupleGetItem(func_3651_call(relay.reshape(var_7829.astype('int64'), [1, 1, 7]), relay.reshape(const_7830.astype('int64'), [5, 6, 7]), relay.reshape(const_7831.astype('int64'), [5, 16, 7]), ), 1)
output = relay.Tuple([call_7826,call_7828,var_7829,const_7830,const_7831,])
output2 = relay.Tuple([call_7827,call_7832,var_7829,const_7830,const_7831,])
func_7844 = relay.Function([var_7829,], output)
mod['func_7844'] = func_7844
mod = relay.transform.InferType()(mod)
mutated_mod['func_7844'] = func_7844
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7845 = relay.var("var_7845", dtype = "int64", shape = (7,))#candidate|7845|(7,)|var|int64
func_7844_call = mutated_mod.get_global_var('func_7844')
call_7846 = func_7844_call(var_7845)
output = call_7846
func_7847 = relay.Function([var_7845], output)
mutated_mod['func_7847'] = func_7847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5031_call = mod.get_global_var('func_5031')
func_5033_call = mutated_mod.get_global_var('func_5033')
call_7859 = relay.TupleGetItem(func_5031_call(), 0)
call_7860 = relay.TupleGetItem(func_5033_call(), 0)
uop_7874 = relay.tan(call_7859.astype('float32')) # shape=(3, 11, 11)
uop_7876 = relay.tan(call_7860.astype('float32')) # shape=(3, 11, 11)
output = uop_7874
output2 = uop_7876
func_7883 = relay.Function([], output)
mod['func_7883'] = func_7883
mod = relay.transform.InferType()(mod)
output = func_7883()
func_7884 = relay.Function([], output)
mutated_mod['func_7884'] = func_7884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5875_call = mod.get_global_var('func_5875')
func_5877_call = mutated_mod.get_global_var('func_5877')
call_7966 = relay.TupleGetItem(func_5875_call(), 0)
call_7967 = relay.TupleGetItem(func_5877_call(), 0)
output = relay.Tuple([call_7966,])
output2 = relay.Tuple([call_7967,])
func_7981 = relay.Function([], output)
mod['func_7981'] = func_7981
mod = relay.transform.InferType()(mod)
mutated_mod['func_7981'] = func_7981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7981_call = mutated_mod.get_global_var('func_7981')
call_7982 = func_7981_call()
output = call_7982
func_7983 = relay.Function([], output)
mutated_mod['func_7983'] = func_7983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6389_call = mod.get_global_var('func_6389')
func_6390_call = mutated_mod.get_global_var('func_6390')
call_7992 = relay.TupleGetItem(func_6389_call(), 0)
call_7993 = relay.TupleGetItem(func_6390_call(), 0)
output = call_7992
output2 = call_7993
func_8011 = relay.Function([], output)
mod['func_8011'] = func_8011
mod = relay.transform.InferType()(mod)
mutated_mod['func_8011'] = func_8011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8011_call = mutated_mod.get_global_var('func_8011')
call_8012 = func_8011_call()
output = call_8012
func_8013 = relay.Function([], output)
mutated_mod['func_8013'] = func_8013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5818_call = mod.get_global_var('func_5818')
func_5819_call = mutated_mod.get_global_var('func_5819')
call_8058 = relay.TupleGetItem(func_5818_call(), 1)
call_8059 = relay.TupleGetItem(func_5819_call(), 1)
uop_8085 = relay.tan(call_8058.astype('float64')) # shape=(1, 4, 3)
uop_8087 = relay.tan(call_8059.astype('float64')) # shape=(1, 4, 3)
output = relay.Tuple([uop_8085,])
output2 = relay.Tuple([uop_8087,])
func_8100 = relay.Function([], output)
mod['func_8100'] = func_8100
mod = relay.transform.InferType()(mod)
mutated_mod['func_8100'] = func_8100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8100_call = mutated_mod.get_global_var('func_8100')
call_8101 = func_8100_call()
output = call_8101
func_8102 = relay.Function([], output)
mutated_mod['func_8102'] = func_8102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6082_call = mod.get_global_var('func_6082')
func_6083_call = mutated_mod.get_global_var('func_6083')
call_8118 = func_6082_call()
call_8119 = func_6082_call()
func_5729_call = mod.get_global_var('func_5729')
func_5730_call = mutated_mod.get_global_var('func_5730')
call_8130 = relay.TupleGetItem(func_5729_call(), 0)
call_8131 = relay.TupleGetItem(func_5730_call(), 0)
func_4240_call = mod.get_global_var('func_4240')
func_4245_call = mutated_mod.get_global_var('func_4245')
const_8144 = relay.const([8,3,-7,-5,8,-9,-10,10,-2,8,-10,9,-8,8,-4,2,-7,5,3,10,-7,-6,4,8,-6,5,-3,3,-9,-3,-6,-2,-1,-6,8,-8,5,-3,2,6,-6,-6,-7,-10,2,9,2,10,10,-2,9,3,-5,-6,8,7,-5,4,-3,-10,2,2,1,-9,-5,-9,-10,2,-9,-6,-10,-10,7,-9,-10,5,8,-6,-7,-2,-6,9,-3,3,7,8,4,6,-4,2,-4,8,2,5,-10,4,-7,-4,-1,-2,-8,-10,8,4,1,-6,10,-8,-7,-6,9,-5,-10,-7,-7,1,-9,8,7,9,-7,-2,10,-3,-3,6,-6,8,-9,9,4,-3,-3,10,4,-7,-6,-10,-8,-5,-2,3,-1,6,-6,10,-6,-2,-6,8,-4,1,-1,6,5,-2,-4,7,-8,7,-7,-3,-10,2,9,-3,5,3,-8,7,2,-2,-4,2,-3,7,6,5,-7,9,8,-9,10,1,10,-1,9,9,-6,7,-7,-1,4,-8,-4,-9,1,-7,9,-8,8,-3,5,-10,10,10,2,10,-7,7,7,6,-3,8,-1,-2,6,-3,5,1,1,-5,-1,8,-5,-9,-10,-10,-8,-6,-5,-7,2,-1,5,6,-1,8,-6,-2,-3,3,8,8,-4,-4,-3,-9,10,5,1,-1,10,6,8,-9,9,-6,-7,-2,1,9,6,8,-7,-9,-2,-3,-2,10,-7,2,-1,4,5,1,1,-9,-10,-2,9,7,2,6,1,5,-5,7,-5,7,8,-7,8,5,-2,6,8,5,-5,5,8,-5,7,2,4,2,-7,-10,-5,-4,-2,10,-4,-4,-7,7,1,2,-4,9,-2,-10,2,-6,5,-3,8,10,8,3,3,3,-1,-1,7,-3,-1,-2,2,-9,5,5,3,9,9,7,1,-5,4,7,8,-4,4,-1,3,-3,-1,-4,-4,-8,-5,5,6,8,8,5,7,4,-7,-8,-6,-9,-9,-5,-5,4,-9,-6], dtype = "uint32")#candidate|8144|(378,)|const|uint32
const_8145 = relay.const([7,1,8,-6,8,5,-10,-7,-5,-2,-4,1,-4,-2,-10,-6,-7,-9,-9,-3,9,-6,-4,-7,3,-6,-6,2,10,10,3,6,-5,6,-2,-2,8,1,-2,-1,-10,1,5,-7,9,4,-5,1,-7,-3,-5,-9,-4,5,9,-8,4,-4,-3,4,10,4,-10,5,-4,-4,3,4,-6,-3,4,5,-3,6,1,9,-2,9,10,9,10,4,9,-1,6,1,7,9,6,-7,-9,-10,-9,-3,1,-2,-5,6,-4,-2,-5,4,10,2,-1,3,-3,-1,2,-3,5,-7,2,8,-2,-10,-3,9,-8,-9,9,-10,-7,-9,6,3,7,-4,3,7,-2,4,-1,-3,5,-9,6,-1,10,-1,9,-8,1,-5,5,2,3,7,1,5,1,-2,-5,9,10,2,3,-6,-5,1,-7,9,10,-3,5,-7,-4,-3,-10,2,10,1,-7,10,-8,-2,-5,-4,-7,6,-5,-8,1,-5,2,3,3,-9,-9,-2,1,3,-5,3,-3,3,1,4,3,-3,9,8,7,4,-6,6,-8,-5,7,-4,6,-8,-9,7,2,-8,3,4,-3,8,5,-9,3,8,2,8,-1,3,9,-3,-9,3,-7,3,-7,3,3,5,-8,3,6,7,10,-7,-1,1,9,3,-2,8,-7,1,3,-5,-10,-10,-4,2,-9,2,-9,-2,-6,6,3,-5,-5,2,2,-10,8,9,-6,-5,-9,-5,-9,-7,-1,-2,7,5,-6,3,-4,2,-2,5,9,-3,8,-7,4,-3,6,-9,5,-8,-1,-8,-5,-1,1,-7,10,1,9,-7,1,-7,-7,4,2,-4,-5,10,-5,7,8,6,-5,8,-6,-8,-6,6,1,7,3,8,6,-8,-8,-6,-8,-6,1,8,8,-4,10,10,-9,-7,-10,10,1,-6,-2,9,7,4,9,5,7,4,9,-1,10,-1,-10,-8,-9,-4,-9,3,-10,3,-9,7,-8,-5,4,5,3,8,-9,8,1,10,-7,-7,10,-4,-10,8,3,-3,9,-3,-6,-8,7,4,8,-9,9,-9,8,9,-8,4,-10,10,-8,4,6,-10,7,-1,10,-7,-8,9,2,1,-4,-1,5,6,6,7,3,5,3,-5,7,-3,10,10,9,2,-8,2,6,-9,9,6,-5,-1,8,1,-8,2,-4,10,6,1,-8,-9,10,-1,-6,-2,-10,9,-9,-5,3,-6,2,4,-9,3,-5,-4,-4,5,-1,-1,10,-9,8,-5,-5,-2,7,6,1,5,-4,3,5,-8,-3,-5,10,-1,10,-1,-6,-4,9,3,1,-5,9,3,-4,-8,1,-1,1,-9,-9,-8,5,10,-1,-1,-10,-7,4,3,-2,-8,-8,6,-10,-10,7,-6,9,-6,8,3,6,9,10,10,4,-9,-7,-10,1,-8,10,-3,-9,-9,8,4,-2,6,4,-5,1,1,-8,7,-10,8,-6,-9,7,1,-10,1,-10,5], dtype = "int64")#candidate|8145|(560,)|const|int64
call_8143 = relay.TupleGetItem(func_4240_call(relay.reshape(const_8144.astype('uint32'), [9, 6, 7]), relay.reshape(const_8144.astype('uint32'), [9, 6, 7]), relay.reshape(const_8145.astype('int64'), [560,]), ), 1)
call_8146 = relay.TupleGetItem(func_4245_call(relay.reshape(const_8144.astype('uint32'), [9, 6, 7]), relay.reshape(const_8144.astype('uint32'), [9, 6, 7]), relay.reshape(const_8145.astype('int64'), [560,]), ), 1)
func_4240_call = mod.get_global_var('func_4240')
func_4245_call = mutated_mod.get_global_var('func_4245')
call_8153 = relay.TupleGetItem(func_4240_call(relay.reshape(call_8143.astype('uint32'), [9, 6, 7]), relay.reshape(call_8143.astype('uint32'), [9, 6, 7]), relay.reshape(const_8145.astype('int64'), [560,]), ), 3)
call_8154 = relay.TupleGetItem(func_4245_call(relay.reshape(call_8143.astype('uint32'), [9, 6, 7]), relay.reshape(call_8143.astype('uint32'), [9, 6, 7]), relay.reshape(const_8145.astype('int64'), [560,]), ), 3)
output = relay.Tuple([call_8118,call_8130,call_8143,const_8144,const_8145,call_8153,])
output2 = relay.Tuple([call_8119,call_8131,call_8146,const_8144,const_8145,call_8154,])
func_8163 = relay.Function([], output)
mod['func_8163'] = func_8163
mod = relay.transform.InferType()(mod)
output = func_8163()
func_8164 = relay.Function([], output)
mutated_mod['func_8164'] = func_8164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5425_call = mod.get_global_var('func_5425')
func_5427_call = mutated_mod.get_global_var('func_5427')
call_8170 = relay.TupleGetItem(func_5425_call(), 0)
call_8171 = relay.TupleGetItem(func_5427_call(), 0)
func_5031_call = mod.get_global_var('func_5031')
func_5033_call = mutated_mod.get_global_var('func_5033')
call_8176 = relay.TupleGetItem(func_5031_call(), 0)
call_8177 = relay.TupleGetItem(func_5033_call(), 0)
output = relay.Tuple([call_8170,call_8176,])
output2 = relay.Tuple([call_8171,call_8177,])
func_8179 = relay.Function([], output)
mod['func_8179'] = func_8179
mod = relay.transform.InferType()(mod)
output = func_8179()
func_8180 = relay.Function([], output)
mutated_mod['func_8180'] = func_8180
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8292 = relay.var("var_8292", dtype = "float32", shape = (10, 5, 16))#candidate|8292|(10, 5, 16)|var|float32
uop_8293 = relay.sin(var_8292.astype('float32')) # shape=(10, 5, 16)
output = relay.Tuple([uop_8293,])
output2 = relay.Tuple([uop_8293,])
func_8296 = relay.Function([var_8292,], output)
mod['func_8296'] = func_8296
mod = relay.transform.InferType()(mod)
var_8297 = relay.var("var_8297", dtype = "float32", shape = (10, 5, 16))#candidate|8297|(10, 5, 16)|var|float32
output = func_8296(var_8297)
func_8298 = relay.Function([var_8297], output)
mutated_mod['func_8298'] = func_8298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7981_call = mod.get_global_var('func_7981')
func_7983_call = mutated_mod.get_global_var('func_7983')
call_8344 = relay.TupleGetItem(func_7981_call(), 0)
call_8345 = relay.TupleGetItem(func_7983_call(), 0)
output = call_8344
output2 = call_8345
func_8356 = relay.Function([], output)
mod['func_8356'] = func_8356
mod = relay.transform.InferType()(mod)
mutated_mod['func_8356'] = func_8356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8356_call = mutated_mod.get_global_var('func_8356')
call_8357 = func_8356_call()
output = call_8357
func_8358 = relay.Function([], output)
mutated_mod['func_8358'] = func_8358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6760_call = mod.get_global_var('func_6760')
func_6761_call = mutated_mod.get_global_var('func_6761')
call_8399 = func_6760_call()
call_8400 = func_6760_call()
output = call_8399
output2 = call_8400
func_8413 = relay.Function([], output)
mod['func_8413'] = func_8413
mod = relay.transform.InferType()(mod)
output = func_8413()
func_8414 = relay.Function([], output)
mutated_mod['func_8414'] = func_8414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7128_call = mod.get_global_var('func_7128')
func_7130_call = mutated_mod.get_global_var('func_7130')
call_8557 = relay.TupleGetItem(func_7128_call(), 0)
call_8558 = relay.TupleGetItem(func_7130_call(), 0)
output = call_8557
output2 = call_8558
func_8573 = relay.Function([], output)
mod['func_8573'] = func_8573
mod = relay.transform.InferType()(mod)
output = func_8573()
func_8574 = relay.Function([], output)
mutated_mod['func_8574'] = func_8574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6140_call = mod.get_global_var('func_6140')
func_6142_call = mutated_mod.get_global_var('func_6142')
call_8585 = relay.TupleGetItem(func_6140_call(), 0)
call_8586 = relay.TupleGetItem(func_6142_call(), 0)
func_4240_call = mod.get_global_var('func_4240')
func_4245_call = mutated_mod.get_global_var('func_4245')
var_8596 = relay.var("var_8596", dtype = "uint32", shape = (3, 126))#candidate|8596|(3, 126)|var|uint32
const_8597 = relay.const([[3,-7,-3,8,9,6,-1,-3,2,-2,-2,9,-3,4,6,-8,5,9,-2,-4,3,8,8,2,7,-6,-4,-2,-5,9,-10,2,10,7,-10,-5,-10,-9,-6,-8,-5,-4,1,-10,-2,-10,5,2,-3,9,10,6,-7,-6,-8,-8,1,3,-7,8,1,-6,10,-2,-6,8,-7,4,1,-6,6,-3,-5,-7,-1,-4,1,-1,-7,-5,5,9,-8,-5,4,-10,-5,-5,9,-5,-7,5,10,-10,-8,-1,10,7,2,-9,-3,-5,1,-9,4,-3,2,10,5,-10,-6,-7,3,-4,-4,-1,3,-5,8,9,7,-4,1,2,3,-8,-7,5,9,-4,6,1,-5,-6,-10,6,6,-8,-1,2,6,-5,6,-2,-1,9,-6,-7,-9,-4,7,-8,-10,-1,-9,-7,4,10,1,-7,10,2,-10,-7,-1,8,10,2,-4,-1,7,-10,9,10,-3,4,7,-1,4,-4,8,-4,1,6,-10,-8,4,-7,7,-5,-6,-6,-5,-10,3,-6,9,9,8,5,4,-5,1,-5,1,1,-9,2,1,2,7,7,8,6,-5,5,2,2,-4,-6,-5,4,-3,7,-10,2,-7,-3,-6,2,-8,3,-7,-7,-9,5,9,9,8,8,7,3,-10,10,5,-9,6,-7,4,5,-9,9,-2,2,6,-7,-1,-6,9,6,7,9,7,8,1,7,4,8,6,-5,1,7,2,-2,1,-5,5,-2,3,4,-1,-4,8,-10,-1,1,7,-3,-1,-10,-4,9,-10,-2,10,6,8,8,-1,4,-5,3,1,1,-4,-2,-7,-8,3,1,-7,-7,-7,10,-3,-10,-7,10,-3,-10,3,5,-5,8,-4,-3,6,-3,3,8,10,-6,-3,7,-7,-2,8,-2,-2,-5,9,-5,-8,-7,6,8,-3,2,-1,3,5,10,-3,-10,-5,1,-1,-9,9,-9,-1,-10,1,2,3,10,1,3,4,-8,6,-1,6,-7,5,-9,-5,1,-10,-10,8,-1,9,4,-7,10,-2,2,2,2,-7,6,-9,-2,1,4,-9,10,-8,3,7,-9,-8,-6,2,10,8,-5,-2,-7,-8,-2,-5,7,7,9,5,2,10,-4,7,-6,-9,-1,8,5,7,3,2,-5,1,-4,3,8,5,10,7,6,-6,8,-4,-10,-10,5,2,-2,8,-9,-3,6,10,-9,-1,2,1,1,-1,-10,-3,-5,-7,-10,-5,7,6,6,-1,-3,-8,-10,-3,6,-2,-8,-1,2,2,-4,10,4,5,4,-3,-8,1,1,1,-9,4,-9,-2,5,-2,-10,-8,-10,4,-9,-2,9,-7,9,-10,2,-6,8,-2,2,2,10,-6,-5,6,-7,-2,-2,-7,-6,9,-10,9,-5,-3,-8,-8,-8,-1,-5,6,-5,-6,-7,10,-9,-3,6,-9,6,-9,-8,3,3,9,-10,10,5,-4,1,10,-3,-1,5,-3,3,-5,10,8,-1,1,-4]], dtype = "int64")#candidate|8597|(1, 560)|const|int64
call_8595 = relay.TupleGetItem(func_4240_call(relay.reshape(var_8596.astype('uint32'), [9, 6, 7]), relay.reshape(var_8596.astype('uint32'), [9, 6, 7]), relay.reshape(const_8597.astype('int64'), [560,]), ), 0)
call_8598 = relay.TupleGetItem(func_4245_call(relay.reshape(var_8596.astype('uint32'), [9, 6, 7]), relay.reshape(var_8596.astype('uint32'), [9, 6, 7]), relay.reshape(const_8597.astype('int64'), [560,]), ), 0)
output = relay.Tuple([call_8585,call_8595,var_8596,const_8597,])
output2 = relay.Tuple([call_8586,call_8598,var_8596,const_8597,])
func_8600 = relay.Function([var_8596,], output)
mod['func_8600'] = func_8600
mod = relay.transform.InferType()(mod)
mutated_mod['func_8600'] = func_8600
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8601 = relay.var("var_8601", dtype = "uint32", shape = (3, 126))#candidate|8601|(3, 126)|var|uint32
func_8600_call = mutated_mod.get_global_var('func_8600')
call_8602 = func_8600_call(var_8601)
output = call_8602
func_8603 = relay.Function([var_8601], output)
mutated_mod['func_8603'] = func_8603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8163_call = mod.get_global_var('func_8163')
func_8164_call = mutated_mod.get_global_var('func_8164')
call_8695 = relay.TupleGetItem(func_8163_call(), 5)
call_8696 = relay.TupleGetItem(func_8164_call(), 5)
output = call_8695
output2 = call_8696
func_8697 = relay.Function([], output)
mod['func_8697'] = func_8697
mod = relay.transform.InferType()(mod)
output = func_8697()
func_8698 = relay.Function([], output)
mutated_mod['func_8698'] = func_8698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5156_call = mod.get_global_var('func_5156')
func_5157_call = mutated_mod.get_global_var('func_5157')
call_8704 = relay.TupleGetItem(func_5156_call(), 0)
call_8705 = relay.TupleGetItem(func_5157_call(), 0)
output = call_8704
output2 = call_8705
func_8716 = relay.Function([], output)
mod['func_8716'] = func_8716
mod = relay.transform.InferType()(mod)
output = func_8716()
func_8717 = relay.Function([], output)
mutated_mod['func_8717'] = func_8717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6090_call = mod.get_global_var('func_6090')
func_6091_call = mutated_mod.get_global_var('func_6091')
call_8747 = relay.TupleGetItem(func_6090_call(), 0)
call_8748 = relay.TupleGetItem(func_6091_call(), 0)
output = call_8747
output2 = call_8748
func_8749 = relay.Function([], output)
mod['func_8749'] = func_8749
mod = relay.transform.InferType()(mod)
mutated_mod['func_8749'] = func_8749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8749_call = mutated_mod.get_global_var('func_8749')
call_8750 = func_8749_call()
output = call_8750
func_8751 = relay.Function([], output)
mutated_mod['func_8751'] = func_8751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6936_call = mod.get_global_var('func_6936')
func_6938_call = mutated_mod.get_global_var('func_6938')
call_8755 = func_6936_call()
call_8756 = func_6936_call()
func_4732_call = mod.get_global_var('func_4732')
func_4734_call = mutated_mod.get_global_var('func_4734')
const_8767 = relay.const([-6.162446,-7.789496,-1.140287,-4.782474,-3.614069,9.974868,-2.127029,1.878419,-9.483473,8.001734,-2.378893,-1.258382,2.898684,8.742549,7.895557,-3.781089,8.642074,-1.981620,-7.290899,-9.545802,1.738916,-7.960950,-6.073974,-8.941483,-5.875245,5.974864,-3.652726,5.146663,-2.300915,-9.257337,-8.250293,-5.030618,4.834155,7.266961,9.376410,-4.233805,-6.650075,-5.214780,1.058238,8.362134,-9.776097,-5.310534,6.103252,-1.151419,-8.986853,1.851052,8.462067,-7.772097,-0.011966,6.946100,-4.958946,1.197535,-8.510716,9.666411,-7.642368,6.803390,3.345429,8.937625,-0.130771,-3.424762,8.377249,6.081866,8.685808,9.279608,0.155446,3.047552,5.528497,-2.134597,-2.686863,4.729161,6.769205,8.950514,-7.536051,9.452900,7.326473,-9.993725,3.113982,9.268629,3.807851,-3.233918,1.647785,-3.375558,-4.086877,-6.883344,-1.331539,4.962960,9.813162,-1.955425,-2.666040,-7.131767,-8.848843,-3.928333,-7.450586,-7.515737,-7.381310,-7.842017,3.141084,-6.495643,-9.044466,-8.503075,-4.374186,-1.195787,3.513112,-3.977242,-7.484083,6.738829,5.096164,-2.311145,9.281892,9.272148,0.579202,-6.908996,9.272492,2.093273,1.152928,-1.436267,6.701766,8.948798,-2.424230,-4.259089,-3.459667,2.593487,3.910386,6.719676,-1.425387,9.051323,3.344861,-5.159036,-6.626358,-0.399954,-0.489949,-8.215024,2.375858,-2.026337,1.553805,-5.762615,-9.307485,6.416046,3.311292,-9.667000,4.917286,1.769944,3.739230,4.910580,9.735658,-2.518601,7.025136,-6.815584,-1.965197,-0.020345,6.931450,-6.391656,-8.896345,-7.796639,-2.041502,7.609397,-7.240291,-0.888766,1.125803,9.081318,2.806673,-8.491726,-5.130744,1.690607,2.376976,-3.236748,-6.779445,-3.408510,-1.102226,-9.602690,1.259286,1.868982,8.158614,-0.198970,2.627606,4.268387,3.089308,3.849022,-3.677238,-3.008848,-4.022099,7.875521,9.416965,2.316912,-9.252726,8.370446,-2.098536,5.452285,-5.270415,-2.585565,0.164665,6.296552,0.195391,3.787243,1.681961,9.976773,-4.586634,3.624691,-0.631939,-2.667750,-5.565521,-3.222165,-0.203279,-1.520966,1.839382,-5.533042,7.519175,4.262499,4.632481,-5.701832,2.640511,-7.770425,-6.358016,9.981196,9.662264,4.657224,1.679828,-2.665398,6.698794,5.289575,7.317776,-0.564912,7.203444,5.729589,-6.914685,7.983594,9.389004,6.689264,4.373488,-4.041725,-7.250913,8.688612,7.727073,2.262692,-8.521072,-4.139939,0.270858,-9.386542,-8.986849,2.163760,-4.063953,-9.509648,-3.075119,5.827674,0.600289,-3.001077,-1.205707,5.953135,1.154675,-5.389740,5.390927,0.452128,2.930137,9.814249,2.714285,-6.417339,-8.788735,9.313523,5.922347,-9.904877,-7.800639,-1.842813,-8.405993,8.819261,4.514056,-5.606128,-9.541288,4.599339,0.623548,2.500319,2.868029,-0.865131,2.869598,-2.773483,6.144111,4.503307,-0.800316,-7.262584,1.595258,-9.379307,2.206655,-8.188625,3.815824,-9.471154,-7.514259,4.907449,1.168508,6.186814,-5.198035,8.084615,3.915109,2.894044,9.630585,-7.548416,7.085642,5.479310,1.073419,-2.969881,3.571664,-4.513423,4.125135,8.203861,9.245064,0.880136,-4.902526,5.262303,5.027163,2.357550,-9.650532,2.479705,7.671671,6.614916,-8.724306,9.325475,-5.574926,-9.977434,0.645200,-7.673233,-8.618172,-4.833766,9.845126,-1.978622,7.174552,0.453125,-2.808970,6.957139,1.869333,-5.923612,6.760951,2.298821,3.441217,3.842206,7.229661,-0.727674,9.701651,-9.754936,-1.190777,1.341546,2.848185,-6.868844,9.458826,4.512098,-2.938803,0.241831,6.288462,8.970175,-7.417158,6.828886,-2.537020,9.923113,8.497838,-3.260329,2.862829,1.800950,-9.574967,-9.984693,3.829969,-9.927832,4.854721,3.774175,-7.869760,-8.788599,4.880148,-4.409563,3.510106,5.151553,-4.688264,-7.156154,8.285264,-5.404239,0.992550,-4.856178,-3.285828,-5.783195,-8.403409,-1.986124,-9.259193,4.067806,-1.109133,-5.019347,1.631809,-9.470693,0.307828,0.508211,-9.715368,1.103608,-7.756769,8.976183,-3.341170,3.532712,8.520564,-3.502850,-2.739324,-3.513912,5.173293,-1.869478,-4.676969,-7.854224,7.888116,3.515003,8.732312,-2.300785,-1.656556,-8.275486,2.121068,8.077825,8.183813,0.915531,9.995376,5.550517,-2.372790,7.659227,-9.740967,-2.076487,-0.343023,-2.283781,-6.220333,0.767073,-2.237486,-8.211993,7.369131,-7.594540,5.662499,-3.086087,3.416952,2.280559,3.969037,9.485302,2.144490,-4.695707,5.339853,4.279653,8.667349,-0.781205,8.731178,4.573723,-0.816842,9.030839,0.655154,-2.705964,3.713754,-8.934683,-2.110690,2.123419,-6.824193,4.183898,-3.283172,1.129955,-7.250998,5.847533,-2.890087,-9.721540,-0.627974,-5.413219,-0.713512,1.984212,5.676380,-8.966529,2.907842,4.584098,5.598365,9.918801,6.871759,2.998162,-4.590250,7.979928,-6.895780,7.723409,-7.783834,-2.544962,-3.022738,-8.348226,-1.620236,0.081092,-6.569208,7.931547,-3.313214,9.387154,5.352657,5.783218,9.807158,8.373617,-4.993216,5.047800,-7.995185,8.874123,7.124863,-5.818417,2.142945,4.110367,-4.040270,7.959754,7.076614,1.890180,-0.379973,-9.375136,7.544121,7.690328,-3.528432,-3.838057,-2.293751,5.267256,-9.372340,4.949420,8.371689,7.026075,6.462163,-9.682169,-3.623671,-9.426028,-8.743417,-3.970952,-4.844486,-4.310336,-4.921571,0.711548,-0.974367,-7.157753,8.153693,-4.453236,-3.279114,-2.967363,1.730835,-7.667575,-7.127097,-3.911446,3.817193,2.840191,-0.654110,-0.833309,-5.400226,1.047820,-4.715376,9.817889,-6.420008,6.545915,-8.389458,-4.872214,-9.322203,4.024822,5.462852,-4.828477,-7.217107,-2.910727,7.637889,-7.448235,1.479813,-9.011404,8.968361,1.930650,-0.551266,8.010519,-8.066155,-6.084883,-6.678151,-9.803890,0.828754,1.067806,-9.327396,-4.279745,-2.722047,0.680988,-8.386183,-1.547652,-4.258881,4.949469,-6.485049,8.821027,9.345127,7.342662,5.835571,1.009819,-1.659199,-1.756128,3.880046,-0.018031,7.961177,8.863958,-2.507768,-5.931359,2.049455,3.755626,-3.908447,-3.801991,-0.760238,9.198131,5.192136,-6.367736,9.787484,-6.422410,8.202815,8.076569,8.171471,-7.138797,-3.598350,-1.104514,1.666155,9.386669,-3.120700,2.358704,5.658785,-0.779613,3.103536,6.506729,9.898412,1.712500,-2.930889,-7.054357,7.031948,5.207599,2.941095,1.927628,8.086105,-7.068871,9.593637,-3.125512,-8.964823,4.713112,9.920179,3.342967,2.298127,2.903550,2.485254,6.282433,6.580979,-7.627048,-9.429432,3.757602,-5.769567,2.032454,3.173660,-0.343276,-3.519397,7.089101,-8.591103,-0.985655,-6.234499,-1.422747,7.469698,-5.244107,-2.395083,7.849651,1.338399,6.946926,-9.582738,7.233438,-3.460676,-0.298304,6.008553,8.875643,-0.386129,5.103676,9.077588,-4.267108,4.828569,6.028776,6.337884,-0.077483,4.876730,-9.793362,-4.931619,2.108234,1.977819,9.533989,-8.583809,8.503518,1.373752,1.781989,-9.365149,4.551108,-9.479485,7.902357,-8.165177,-0.835160,1.653157,7.660223,-8.433850,2.637882,-1.957449,4.800990,1.701653,8.991310,7.010107,4.518490,-6.285030,-7.883362,-2.444621,-7.678793,1.038942,-8.389308,5.314506,5.470670,6.317617,-7.092691,2.350672,-7.270456,-8.356605,5.910409,-5.936296,4.332562,-2.942317,5.029829,5.678291,3.170870,2.694915,-1.635272,9.075416,-9.205192,-8.154585,4.724546,-3.072271,-4.056716,0.626744,3.331646,-7.588367,9.590357,-3.970093,7.817373,-9.895592,-0.782375,7.888261,7.943799,-5.142276,0.732465,-5.271147,7.272061,-6.275565,4.775238,9.233833,4.218399,2.843255,-4.181781,6.121629,3.925589,-2.909320,1.732411,-1.905896,5.286318,5.052494,4.146712,9.506702,-9.375082,-7.210476,1.208128,-6.130564,-4.297206,2.953048,5.197131,-4.609955,6.150983,2.092379,-2.024485,5.834532,-8.688084,-2.672374,-9.911115,-3.244604,5.083783,-9.553297,0.499599,0.310510,-0.201996,-8.341201,-4.577037,-5.478308,-0.901354,-6.686274,-8.668985,-1.782324,-3.343604,-5.599938,-5.789829,-5.590322,-2.124854,-3.828599,3.047303,1.756795,9.204555,-5.427922,-2.410346,4.935329,-2.904362,-5.002128,3.405412,3.146405,0.039155,-3.637703,2.134159,-2.599869,1.101778,2.200722,-2.503555,-7.555070,-0.763278,5.299156,9.970337,4.216949,9.318612,-1.833452,-0.149867,-8.037223,-3.255942,2.470854,2.134156,1.248715,2.488720,-5.839582,7.067243,7.060131,1.748787,-1.484402,9.319269,-7.392550,9.546449,7.697410,-2.194313,-2.372090,-7.280071,-5.907383,9.914980,-8.623692,-6.194666,-6.365261,1.028805,-2.035325,5.536815,7.365615,-1.073651,9.713236,0.419359,-9.253193,-9.653554,-7.652458,-3.286875,7.360667,-6.477308,-8.110794,-8.248037,-0.954802,-3.360625,-2.964225,6.163932,-8.202313,8.555850,-6.931421,-8.323512,-0.092413,7.322448,1.232035,-8.924558,1.296849,-9.418057,9.231693,-3.113712,-8.587175,-1.840407,-4.773432,9.195981,-1.879710,-1.664236,4.624480,4.581050,-3.565006,-5.669426,-7.439285,-5.698214,9.200363,-5.187029,6.516597,-7.020244,7.442216,-3.305454,-8.257267,2.016044,-5.719493,0.272110,-2.298760,2.879704,0.811185,3.799028,-0.515337,6.947700,-6.466146,7.099028,3.424541,-6.331786,-2.314647,-8.660205,-9.297398,9.348080,-0.791079,-3.105565,8.966525,2.253421,8.858059,9.800461,-7.833119,0.386048,-2.710442,-3.350674,-2.135708,-2.317163,6.900234,9.785394,-3.045902,-3.750092,-8.290025,-7.085081,-5.053118,-0.649544,-1.050653,-6.951108,6.874448,1.212389,-9.415416,2.750274,-9.299996,3.047362,-9.496627,8.202636,-3.517163,8.980604,-7.588068,-9.704992,7.135921,-4.391989,-8.042224,-2.524951,-5.769100,0.792571,0.060055,9.989672,7.522863,0.109014,-0.280505,-0.657537,-9.572183,3.745010,9.221435,-9.381182,-6.483938,-5.941859,3.570647,-3.829925,7.069145,-8.185745,-8.662104,-6.652301,-6.540258,-3.963821,8.952228,8.402713,-9.237872,-0.686398,2.614713,6.343212,-1.535240,-3.863729,-2.900339,2.096347,1.910129,6.128164,-1.124050,0.902710,4.811643,9.775961,-3.292196,4.868437,5.969757,1.029462,-6.152008,-4.919896,-3.778518,-6.706288,-8.394488,-9.585461,7.234488,8.020908,-0.889099,-1.424338,-1.192852,-3.870794,1.408529,-8.948400,8.086589,4.850438,-9.307940,-4.235386,-3.506493,8.736859,0.839689,-6.139256,9.726511,-3.377054,-0.977492,-9.214430,-2.962040,-3.955911,-4.464766,-7.176262,-4.719126,2.684197,2.690958,3.055174,-3.752639,-9.862811,9.047048,-2.795611,6.193865,-4.583470,7.950277,-3.317009,4.413573,8.068536,6.391721,6.779989,7.922159,-8.254986,6.405913,3.669074,7.908832,9.198353,-1.951883,0.518899,-6.121457,-9.610928,-7.741691,3.750703,8.538600,0.312187,-9.361665,-3.419405,1.335279,-5.128220,-3.612434,-2.809991,-7.606202,-9.484959,9.861784,-8.975032,2.771902,-1.025851,6.720232,4.969318,-3.590078,-2.513349,-0.644209,4.930744,9.421696,-1.037547,0.153883,8.061441,-0.493022,-5.106978,-0.930469,5.265882,6.200420,3.984493,4.749493,1.661594,-1.812212,-8.856547,-0.150030,-5.923067,6.055960,-7.773647,-9.888399,-0.207358,2.822397,-6.726575,1.809845,-3.450020,5.292310,-8.130081,-1.450901,6.133824,2.811284,5.009066,5.488339,6.130979,-9.604352,8.742451,-8.261089,1.070219,-3.962949,8.513251,6.747933,2.210752,3.060770,5.474504,2.853236,-1.524371,-7.271419,7.990380,-9.843781,7.346555,-8.770444,7.689703,-6.043309,-2.695161,-2.853261,8.658461,4.513102,8.077996,-3.122703,3.359368,8.560831,-6.317504,1.041699,4.015619,-1.955903,3.090427,9.287227,2.380553,7.818703,-6.266364,7.712793,-7.142306,-0.804202,-7.815518,-9.513903,4.171581,0.966578,-8.820339,6.868145,-6.608302,-0.267000,-6.191915,-0.150178,8.741276,9.655593,-9.872571,1.741055,-2.762456,-6.748612,-0.770525,-0.452609,-8.824495,9.410677,-7.892196,-3.770874,7.776114,-3.706775,-8.905379,2.514928,7.786556,7.955841,-0.793273,-8.439308,4.679550,6.743158,2.595205,3.991787,9.004237,-5.442018,0.329203,1.498532,4.891165,-9.052434,-2.221970,-6.518225,-9.560143,5.735011,-6.683350,8.594110,-1.214533,-2.749276,-2.217413,5.696030,-6.507203,-8.930671,-7.617024,-1.730370,4.018893,3.470949,3.697729,3.829773,-9.651248,-3.181166,-4.853322,-0.741209,-8.698529,9.153922,-7.412325,-2.147116,-7.758965,-3.488373,-4.059533,1.707795,7.141111,-7.395899,-6.046402,-9.466368,-2.925869,2.122797,6.800699,-2.435557,-7.612184,-2.511410,-5.878718,-2.644745,8.172697,-8.528689,3.851746,-3.848831,-9.902459,1.792615,-2.950636,0.046910,-7.325529,-9.265441,-6.467431,5.173636,-7.003377,6.538438,0.076134,6.913510,-0.130303,-7.958074,0.598072,-5.893729,1.904025,-0.336118,-3.239618,0.663378,5.063277,-5.519061,-6.355480,-6.883471,0.410797,2.722620,2.841856,-2.308991,-9.015391,-2.341483,4.390067,-1.870913,-4.380567,-2.980017,-6.997827,-2.550360,0.870718,-0.575654,-0.003507,-6.697586,-4.509703,-7.855074,0.962860,-2.001987,-6.275035,4.357430,2.700044,-4.382932,2.946316,-1.412784,-3.043222,4.486421,6.375367,9.967515,-5.603731,-9.839300,-3.018718,7.300150,4.582912,0.182708,-8.665033,0.345474,-2.555094,9.673207,-8.767158,-2.404590,-6.938973,2.387930,2.736443,-2.343988,-0.146398,-8.104086,3.135469,-9.822751,9.604127], dtype = "float64")#candidate|8767|(1280,)|const|float64
call_8766 = func_4732_call(relay.reshape(const_8767.astype('float64'), [8, 10, 16]))
call_8768 = func_4732_call(relay.reshape(const_8767.astype('float64'), [8, 10, 16]))
func_332_call = mod.get_global_var('func_332')
func_335_call = mutated_mod.get_global_var('func_335')
var_8776 = relay.var("var_8776", dtype = "float64", shape = (882,))#candidate|8776|(882,)|var|float64
call_8775 = func_332_call(relay.reshape(var_8776.astype('float64'), [9, 7, 14]))
call_8777 = func_332_call(relay.reshape(var_8776.astype('float64'), [9, 7, 14]))
func_5502_call = mod.get_global_var('func_5502')
func_5504_call = mutated_mod.get_global_var('func_5504')
call_8781 = func_5502_call()
call_8782 = func_5502_call()
bop_8783 = relay.less(var_8776.astype('bool'), relay.reshape(call_8775.astype('bool'), relay.shape_of(var_8776))) # shape=(882,)
bop_8786 = relay.less(var_8776.astype('bool'), relay.reshape(call_8777.astype('bool'), relay.shape_of(var_8776))) # shape=(882,)
func_3180_call = mod.get_global_var('func_3180')
func_3184_call = mutated_mod.get_global_var('func_3184')
const_8788 = relay.const([True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,True,True,False,True,False,True,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,False,False,True,True,True,False,True,True,False,False,True,True,False,False,True,False,True,False,False,True,False,True,True,True,True,False,False,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,True,True,True,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,False,True,True,False,True,True,False,True,False,False,True,True,True,True,False,False,False,True,False,True,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,False,False,False,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,False,True,False,False,False,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,False,False,True,False,True,False,False,True,False,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,False,False,False,False,True,True,False,False,True,False,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,True,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,False,True,True,False,True,True,True,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,True,False,False], dtype = "bool")#candidate|8788|(576,)|const|bool
call_8787 = relay.TupleGetItem(func_3180_call(relay.reshape(const_8788.astype('bool'), [8, 6, 12]), relay.reshape(bop_8783.astype('float64'), [882,]), ), 0)
call_8789 = relay.TupleGetItem(func_3184_call(relay.reshape(const_8788.astype('bool'), [8, 6, 12]), relay.reshape(bop_8783.astype('float64'), [882,]), ), 0)
output = relay.Tuple([call_8755,call_8766,const_8767,call_8781,bop_8783,call_8787,const_8788,])
output2 = relay.Tuple([call_8756,call_8768,const_8767,call_8782,bop_8786,call_8789,const_8788,])
func_8794 = relay.Function([var_8776,], output)
mod['func_8794'] = func_8794
mod = relay.transform.InferType()(mod)
var_8795 = relay.var("var_8795", dtype = "float64", shape = (882,))#candidate|8795|(882,)|var|float64
output = func_8794(var_8795)
func_8796 = relay.Function([var_8795], output)
mutated_mod['func_8796'] = func_8796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7552_call = mod.get_global_var('func_7552')
func_7554_call = mutated_mod.get_global_var('func_7554')
call_8815 = relay.TupleGetItem(func_7552_call(), 1)
call_8816 = relay.TupleGetItem(func_7554_call(), 1)
output = call_8815
output2 = call_8816
func_8840 = relay.Function([], output)
mod['func_8840'] = func_8840
mod = relay.transform.InferType()(mod)
mutated_mod['func_8840'] = func_8840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8840_call = mutated_mod.get_global_var('func_8840')
call_8841 = func_8840_call()
output = call_8841
func_8842 = relay.Function([], output)
mutated_mod['func_8842'] = func_8842
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8864 = relay.var("var_8864", dtype = "uint16", shape = (15, 7, 4))#candidate|8864|(15, 7, 4)|var|uint16
var_8865 = relay.var("var_8865", dtype = "uint16", shape = (15, 7, 4))#candidate|8865|(15, 7, 4)|var|uint16
bop_8866 = relay.subtract(var_8864.astype('uint16'), relay.reshape(var_8865.astype('uint16'), relay.shape_of(var_8864))) # shape=(15, 7, 4)
uop_8877 = relay.atanh(var_8864.astype('float64')) # shape=(15, 7, 4)
output = relay.Tuple([bop_8866,uop_8877,])
output2 = relay.Tuple([bop_8866,uop_8877,])
func_8894 = relay.Function([var_8864,var_8865,], output)
mod['func_8894'] = func_8894
mod = relay.transform.InferType()(mod)
var_8895 = relay.var("var_8895", dtype = "uint16", shape = (15, 7, 4))#candidate|8895|(15, 7, 4)|var|uint16
var_8896 = relay.var("var_8896", dtype = "uint16", shape = (15, 7, 4))#candidate|8896|(15, 7, 4)|var|uint16
output = func_8894(var_8895,var_8896,)
func_8897 = relay.Function([var_8895,var_8896,], output)
mutated_mod['func_8897'] = func_8897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5818_call = mod.get_global_var('func_5818')
func_5819_call = mutated_mod.get_global_var('func_5819')
call_8931 = relay.TupleGetItem(func_5818_call(), 2)
call_8932 = relay.TupleGetItem(func_5819_call(), 2)
uop_8935 = relay.cosh(call_8931.astype('float64')) # shape=(588, 2)
uop_8937 = relay.cosh(call_8932.astype('float64')) # shape=(588, 2)
output = relay.Tuple([uop_8935,])
output2 = relay.Tuple([uop_8937,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_81 = relay.var("var_81", dtype = "uint16", shape = (7, 2, 2))#candidate|81|(7, 2, 2)|var|uint16
const_82 = relay.const([[[5,-4],[-2,-4]],[[10,-8],[6,-3]],[[-10,-2],[-5,-5]],[[10,8],[-4,7]],[[-2,4],[5,8]],[[10,2],[-1,4]],[[-1,8],[-7,-2]]], dtype = "uint16")#candidate|82|(7, 2, 2)|const|uint16
bop_83 = relay.bitwise_xor(var_81.astype('uint16'), relay.reshape(const_82.astype('uint16'), relay.shape_of(var_81))) # shape=(7, 2, 2)
bop_93 = relay.floor_mod(var_81.astype('float64'), relay.reshape(bop_83.astype('float64'), relay.shape_of(var_81))) # shape=(7, 2, 2)
uop_102 = relay.acos(bop_93.astype('float64')) # shape=(7, 2, 2)
output = uop_102
output2 = uop_102
func_129 = relay.Function([var_81,], output)
mod['func_129'] = func_129
mod = relay.transform.InferType()(mod)
mutated_mod['func_129'] = func_129
mutated_mod = relay.transform.InferType()(mutated_mod)
var_130 = relay.var("var_130", dtype = "uint16", shape = (7, 2, 2))#candidate|130|(7, 2, 2)|var|uint16
func_129_call = mutated_mod.get_global_var('func_129')
call_131 = func_129_call(var_130)
output = call_131
func_132 = relay.Function([var_130], output)
mutated_mod['func_132'] = func_132
mutated_mod = relay.transform.InferType()(mutated_mod)
var_174 = relay.var("var_174", dtype = "float32", shape = (12, 14, 10))#candidate|174|(12, 14, 10)|var|float32
uop_175 = relay.sinh(var_174.astype('float32')) # shape=(12, 14, 10)
func_129_call = mod.get_global_var('func_129')
func_132_call = mutated_mod.get_global_var('func_132')
var_182 = relay.var("var_182", dtype = "uint16", shape = (28,))#candidate|182|(28,)|var|uint16
call_181 = func_129_call(relay.reshape(var_182.astype('uint16'), [7, 2, 2]))
call_183 = func_129_call(relay.reshape(var_182.astype('uint16'), [7, 2, 2]))
output = relay.Tuple([uop_175,call_181,var_182,])
output2 = relay.Tuple([uop_175,call_183,var_182,])
func_188 = relay.Function([var_174,var_182,], output)
mod['func_188'] = func_188
mod = relay.transform.InferType()(mod)
var_189 = relay.var("var_189", dtype = "float32", shape = (12, 14, 10))#candidate|189|(12, 14, 10)|var|float32
var_190 = relay.var("var_190", dtype = "uint16", shape = (28,))#candidate|190|(28,)|var|uint16
output = func_188(var_189,var_190,)
func_191 = relay.Function([var_189,var_190,], output)
mutated_mod['func_191'] = func_191
mutated_mod = relay.transform.InferType()(mutated_mod)
var_641 = relay.var("var_641", dtype = "uint8", shape = (4, 8, 14))#candidate|641|(4, 8, 14)|var|uint8
var_642 = relay.var("var_642", dtype = "uint8", shape = (4, 8, 14))#candidate|642|(4, 8, 14)|var|uint8
bop_643 = relay.greater(var_641.astype('bool'), relay.reshape(var_642.astype('bool'), relay.shape_of(var_641))) # shape=(4, 8, 14)
bop_652 = relay.bitwise_and(bop_643.astype('int64'), relay.reshape(var_641.astype('int64'), relay.shape_of(bop_643))) # shape=(4, 8, 14)
func_129_call = mod.get_global_var('func_129')
func_132_call = mutated_mod.get_global_var('func_132')
const_656 = relay.const([-4,6,9,3,5,6,-6,-4,10,-1,8,-1,-10,-4,-4,3,-10,-10,-5,8,6,1,-7,-4,-4,-9,-3,-9], dtype = "uint16")#candidate|656|(28,)|const|uint16
call_655 = func_129_call(relay.reshape(const_656.astype('uint16'), [7, 2, 2]))
call_657 = func_129_call(relay.reshape(const_656.astype('uint16'), [7, 2, 2]))
bop_677 = relay.floor_mod(var_641.astype('float32'), relay.reshape(bop_652.astype('float32'), relay.shape_of(var_641))) # shape=(4, 8, 14)
bop_687 = relay.multiply(bop_677.astype('uint32'), relay.reshape(bop_652.astype('uint32'), relay.shape_of(bop_677))) # shape=(4, 8, 14)
output = relay.Tuple([call_655,const_656,bop_687,])
output2 = relay.Tuple([call_657,const_656,bop_687,])
func_693 = relay.Function([var_641,var_642,], output)
mod['func_693'] = func_693
mod = relay.transform.InferType()(mod)
var_694 = relay.var("var_694", dtype = "uint8", shape = (4, 8, 14))#candidate|694|(4, 8, 14)|var|uint8
var_695 = relay.var("var_695", dtype = "uint8", shape = (4, 8, 14))#candidate|695|(4, 8, 14)|var|uint8
output = func_693(var_694,var_695,)
func_696 = relay.Function([var_694,var_695,], output)
mutated_mod['func_696'] = func_696
mutated_mod = relay.transform.InferType()(mutated_mod)
const_973 = relay.const([[[-6.061622,6.216619,9.451496,6.160336,-4.977775],[-5.848117,6.966060,3.958690,3.317306,4.234302],[-5.695160,4.930533,9.318459,-7.628624,-4.117961],[7.792353,2.600447,-5.567118,2.854962,-0.173211]],[[5.585134,-1.305908,-3.947701,-7.067002,8.539812],[5.232123,2.581667,-1.433971,-0.671131,2.905568],[6.626883,-7.374499,-3.193447,5.401819,-1.322414],[2.200608,-1.388995,-9.542532,1.679236,-4.136281]],[[-8.899010,-8.671537,-7.551992,-3.993290,4.316109],[7.173661,7.311151,-1.995152,2.512610,3.356156],[5.328742,9.281719,-4.284872,9.203626,-8.168288],[-4.158917,1.134816,-4.453265,-4.323090,-7.403436]],[[7.146051,-2.428721,3.338832,-7.760481,-0.857758],[-0.546077,-4.657139,5.239838,2.336134,-3.952115],[-4.672382,-0.394040,5.713778,2.086907,-4.898207],[-8.289251,-1.599555,-1.559325,4.308709,-8.220451]],[[-3.952825,0.495087,-6.992440,6.878210,8.904627],[-3.229836,-0.588684,4.845188,5.957023,0.988329],[1.618222,7.072731,-0.595909,4.856943,-2.763130],[4.587427,3.611801,3.191687,4.366352,6.029737]],[[-6.272492,-2.837603,8.613729,4.462939,1.935605],[-0.510459,-2.600770,-0.517885,4.550096,-9.912661],[6.819274,-8.551690,-0.312792,-1.907615,-9.281199],[1.352479,3.351678,4.338369,3.641934,-3.444937]],[[-4.953145,3.656979,-4.120083,0.813535,-7.214211],[-6.936124,-0.692522,-2.177419,-6.217463,-1.267011],[-0.023553,-4.076456,-9.732632,-0.479310,-3.654090],[-3.405825,6.232669,6.054794,6.088047,1.570138]],[[-7.284176,8.184360,-7.360931,6.141296,-4.010211],[6.375053,1.418878,7.438743,-7.532232,-7.118279],[-6.740691,2.062568,-5.272559,7.412321,4.022389],[3.161217,-2.240046,-8.547644,-5.991847,-5.174647]]], dtype = "float64")#candidate|973|(8, 4, 5)|const|float64
uop_974 = relay.asinh(const_973.astype('float64')) # shape=(8, 4, 5)
func_693_call = mod.get_global_var('func_693')
func_696_call = mutated_mod.get_global_var('func_696')
var_981 = relay.var("var_981", dtype = "uint8", shape = (448,))#candidate|981|(448,)|var|uint8
call_980 = relay.TupleGetItem(func_693_call(relay.reshape(var_981.astype('uint8'), [4, 8, 14]), relay.reshape(var_981.astype('uint8'), [4, 8, 14]), ), 2)
call_982 = relay.TupleGetItem(func_696_call(relay.reshape(var_981.astype('uint8'), [4, 8, 14]), relay.reshape(var_981.astype('uint8'), [4, 8, 14]), ), 2)
uop_984 = relay.cos(uop_974.astype('float32')) # shape=(8, 4, 5)
output = relay.Tuple([call_980,var_981,uop_984,])
output2 = relay.Tuple([call_982,var_981,uop_984,])
func_998 = relay.Function([var_981,], output)
mod['func_998'] = func_998
mod = relay.transform.InferType()(mod)
var_999 = relay.var("var_999", dtype = "uint8", shape = (448,))#candidate|999|(448,)|var|uint8
output = func_998(var_999)
func_1000 = relay.Function([var_999], output)
mutated_mod['func_1000'] = func_1000
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1235 = relay.var("var_1235", dtype = "float64", shape = (13, 5, 12))#candidate|1235|(13, 5, 12)|var|float64
uop_1236 = relay.cosh(var_1235.astype('float64')) # shape=(13, 5, 12)
uop_1256 = relay.exp(uop_1236.astype('float32')) # shape=(13, 5, 12)
func_129_call = mod.get_global_var('func_129')
func_132_call = mutated_mod.get_global_var('func_132')
const_1285 = relay.const([10,-10,-9,-9,-8,6,7,-4,4,5,1,-7,-8,-3,6,1,-8,-8,3,-2,10,2,5,-8,-4,-9,9,-3], dtype = "uint16")#candidate|1285|(28,)|const|uint16
call_1284 = func_129_call(relay.reshape(const_1285.astype('uint16'), [7, 2, 2]))
call_1286 = func_129_call(relay.reshape(const_1285.astype('uint16'), [7, 2, 2]))
func_693_call = mod.get_global_var('func_693')
func_696_call = mutated_mod.get_global_var('func_696')
var_1294 = relay.var("var_1294", dtype = "uint8", shape = (448,))#candidate|1294|(448,)|var|uint8
call_1293 = relay.TupleGetItem(func_693_call(relay.reshape(var_1294.astype('uint8'), [4, 8, 14]), relay.reshape(var_1294.astype('uint8'), [4, 8, 14]), ), 1)
call_1295 = relay.TupleGetItem(func_696_call(relay.reshape(var_1294.astype('uint8'), [4, 8, 14]), relay.reshape(var_1294.astype('uint8'), [4, 8, 14]), ), 1)
func_998_call = mod.get_global_var('func_998')
func_1000_call = mutated_mod.get_global_var('func_1000')
call_1296 = relay.TupleGetItem(func_998_call(relay.reshape(var_1294.astype('uint8'), [448,])), 0)
call_1297 = relay.TupleGetItem(func_1000_call(relay.reshape(var_1294.astype('uint8'), [448,])), 0)
uop_1298 = relay.sinh(uop_1236.astype('float32')) # shape=(13, 5, 12)
func_129_call = mod.get_global_var('func_129')
func_132_call = mutated_mod.get_global_var('func_132')
call_1301 = func_129_call(relay.reshape(call_1284.astype('uint16'), [7, 2, 2]))
call_1302 = func_129_call(relay.reshape(call_1284.astype('uint16'), [7, 2, 2]))
func_998_call = mod.get_global_var('func_998')
func_1000_call = mutated_mod.get_global_var('func_1000')
call_1311 = relay.TupleGetItem(func_998_call(relay.reshape(var_1294.astype('uint8'), [448,])), 0)
call_1312 = relay.TupleGetItem(func_1000_call(relay.reshape(var_1294.astype('uint8'), [448,])), 0)
output = relay.Tuple([uop_1256,call_1284,const_1285,call_1293,var_1294,call_1296,uop_1298,call_1301,call_1311,])
output2 = relay.Tuple([uop_1256,call_1286,const_1285,call_1295,var_1294,call_1297,uop_1298,call_1302,call_1312,])
func_1317 = relay.Function([var_1235,var_1294,], output)
mod['func_1317'] = func_1317
mod = relay.transform.InferType()(mod)
mutated_mod['func_1317'] = func_1317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1317_call = mutated_mod.get_global_var('func_1317')
var_1319 = relay.var("var_1319", dtype = "float64", shape = (13, 5, 12))#candidate|1319|(13, 5, 12)|var|float64
var_1320 = relay.var("var_1320", dtype = "uint8", shape = (448,))#candidate|1320|(448,)|var|uint8
call_1318 = func_1317_call(var_1319,var_1320,)
output = call_1318
func_1321 = relay.Function([var_1319,var_1320,], output)
mutated_mod['func_1321'] = func_1321
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1323 = relay.const([[[-4.478134,7.662189],[-3.997587,-9.101808],[-2.637744,1.298489],[7.570646,-5.933440]],[[-7.083902,6.826485],[0.935737,-8.086138],[-4.025540,-3.805085],[-2.340506,-2.400653]],[[9.028765,-6.092173],[-6.793425,-7.326288],[9.137941,-0.682923],[-2.001115,-8.643977]],[[1.499359,-3.200503],[2.522741,2.580513],[1.282719,-6.503901],[-5.668582,3.960680]],[[2.001386,8.211799],[-9.599527,-7.932955],[4.766894,-7.326142],[4.479415,-8.587842]],[[-0.191069,3.056594],[-7.340635,0.495580],[-0.153197,7.892652],[-6.034306,-5.345314]],[[1.465581,7.540817],[-6.366213,8.236409],[-6.754025,0.311947],[-7.984439,-0.013457]],[[-8.160481,1.032680],[7.914231,6.614853],[-7.480977,-2.662379],[5.766140,-1.277524]],[[-0.643812,-1.550490],[-9.516249,-5.693343],[-2.717841,-3.410008],[3.685006,6.593120]],[[2.778084,-6.579688],[-1.983358,-9.444980],[4.595642,7.058901],[-8.029897,5.150723]],[[-8.204134,5.951365],[4.920265,4.702578],[7.121283,3.864450],[3.510251,2.566556]]], dtype = "float32")#candidate|1323|(11, 4, 2)|const|float32
uop_1324 = relay.log(const_1323.astype('float32')) # shape=(11, 4, 2)
var_1338 = relay.var("var_1338", dtype = "float32", shape = (11, 4, 2))#candidate|1338|(11, 4, 2)|var|float32
bop_1339 = relay.multiply(uop_1324.astype('int64'), relay.reshape(var_1338.astype('int64'), relay.shape_of(uop_1324))) # shape=(11, 4, 2)
uop_1343 = relay.tan(bop_1339.astype('float64')) # shape=(11, 4, 2)
output = uop_1343
output2 = uop_1343
func_1350 = relay.Function([var_1338,], output)
mod['func_1350'] = func_1350
mod = relay.transform.InferType()(mod)
var_1351 = relay.var("var_1351", dtype = "float32", shape = (11, 4, 2))#candidate|1351|(11, 4, 2)|var|float32
output = func_1350(var_1351)
func_1352 = relay.Function([var_1351], output)
mutated_mod['func_1352'] = func_1352
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1520 = relay.const([[[9.072194,0.125168,-8.616451,2.308349,-6.615957,-0.317079,-2.188634,-6.928859,8.721392,-8.905573],[-9.490132,-2.454928,-4.499943,-9.534536,3.538021,-0.132705,8.846340,9.947177,3.258317,6.109259],[2.012191,0.390675,2.814755,-5.979646,7.740852,7.599293,3.530483,9.445840,4.765056,6.793012],[-9.616960,2.196457,8.537271,1.033437,-9.111979,-7.614971,-1.748183,8.295642,9.487911,-5.356503],[-7.755468,-4.708899,5.892563,-5.292753,1.501313,0.850126,0.877156,3.968869,-3.901017,5.675409],[3.261806,-1.765974,3.781882,6.022253,8.897770,4.763581,2.929424,-2.714087,-1.028986,1.368071],[-7.753173,2.810784,-5.202699,-4.661720,3.963307,2.055801,4.847025,-4.383606,5.721474,9.706132]],[[8.785486,0.696923,-2.736648,3.708625,-1.134245,-7.376727,5.394235,-7.721214,-7.161514,-0.356912],[-1.151253,-8.154689,-6.375300,-7.698837,-1.776468,-5.845346,-1.796619,-5.831788,6.852132,7.688666],[-8.422671,-3.547983,7.146424,5.710690,3.726494,9.416255,3.475631,0.030921,-7.954544,-0.256781],[5.882966,-3.533262,-8.776695,-7.298060,-0.823269,7.122277,3.720647,9.859637,-8.966381,-2.550174],[-0.316091,4.165732,0.070706,2.688518,-1.248334,-4.967302,7.100785,9.181231,5.332865,7.236846],[-1.404218,6.675695,0.040121,-4.619117,6.775382,9.102348,3.037294,-3.075931,-0.796300,-5.598235],[7.668304,-7.278555,-2.169690,-7.361553,-5.896850,1.421751,-3.510722,-3.671860,1.803633,0.126541]],[[-9.239576,5.249113,4.865895,-2.926348,6.069631,-6.298670,-7.002729,8.811356,-3.369644,-4.978081],[-0.903542,8.848618,-3.808010,-8.832333,9.253701,0.036065,-3.751930,7.183249,-1.226261,8.919098],[-8.477690,-9.357406,9.236962,2.974179,1.562212,-1.959659,-7.291701,-8.754769,0.777538,-6.914812],[-9.139092,-5.114790,-8.594091,-4.380036,-0.902456,4.757224,3.219220,8.313937,4.202906,-5.743412],[-8.665706,-0.199998,0.832039,-6.310611,4.000778,0.856661,-7.991989,2.490302,4.942142,5.844587],[6.981177,-3.421561,-0.301843,5.630183,6.977573,-7.541401,-0.884979,-3.513837,7.136921,3.843431],[3.699125,-9.829626,-1.460841,8.674195,5.177418,8.542206,0.121408,3.880201,1.013878,3.371600]],[[-9.879614,5.618414,1.431520,-2.573586,-3.460624,1.323011,-8.919114,5.470335,5.054501,-1.229618],[0.148982,-9.657453,-0.137341,-7.590655,-5.106141,-1.313419,7.692029,-0.955602,4.938199,8.277820],[-2.168555,5.119973,-4.908174,9.801182,3.114740,-6.592129,-3.416268,7.721664,-5.035533,-3.107475],[-2.125613,2.708891,-9.227913,-1.600446,3.914801,6.835371,-7.474984,-6.991610,7.384271,2.402827],[-8.705417,8.788470,-4.704279,5.443672,-1.488668,4.072512,-3.469183,-0.912430,-5.011038,-9.578774],[-3.646510,3.725478,-8.908875,6.024695,-0.586952,8.435229,-6.524524,0.909136,0.355282,9.448080],[-5.615086,-8.655966,-8.318182,-6.619863,6.497781,-0.002827,-2.256407,0.647572,4.420922,4.687044]],[[7.012641,-1.083072,9.244902,-3.150601,-3.348471,8.026720,-8.979621,8.377501,-0.723191,-5.736423],[-9.664347,-7.578726,-2.042629,-3.001528,-2.249083,7.394209,-4.360689,-1.333680,4.799236,-9.258709],[-4.745170,6.583947,-7.158636,1.986462,-5.445099,-3.911047,-4.133301,9.492429,-0.431860,9.295943],[8.356423,-6.357673,-6.916997,-9.890614,3.240814,-3.323695,-9.205903,2.532755,-4.195676,8.349634],[-6.238295,-4.732627,-1.272718,2.226681,2.897808,-4.474135,-9.419587,-3.403700,5.874255,-7.038139],[1.960685,-8.897584,-1.904541,-6.394230,9.772631,2.449183,-2.622040,-9.402916,-3.283617,1.743876],[-9.577809,-8.146174,0.166407,-7.991748,5.851014,6.046263,4.877179,-8.108258,9.936929,-4.939099]],[[8.293452,-1.185520,4.852968,-1.612222,9.474388,4.104356,6.321264,-1.836608,-9.706961,8.342841],[9.543965,0.654177,2.021589,3.027912,-5.394785,1.656300,4.645301,2.842789,-0.214953,-8.485857],[-6.637137,-5.095003,-0.959352,-8.055790,5.042828,-3.421160,-2.198281,1.211049,-7.788126,8.120509],[-9.943648,-0.907561,-9.970886,3.085146,4.486168,-7.236928,4.240645,-9.674543,1.082126,3.244487],[-0.513581,-9.056123,0.577587,-6.056743,-9.586341,-5.831713,-0.639330,-2.717889,2.283886,-0.160877],[-8.823438,-2.980507,3.656317,7.141508,8.849616,3.842470,-7.021090,-2.694506,7.842501,2.622576],[-1.197017,-8.507337,-1.515688,-4.573052,-6.422457,8.569693,8.268533,2.118552,-9.467476,-8.783841]],[[1.858352,4.263601,3.216604,7.696898,1.423918,-4.986851,-2.983790,-1.909680,2.221469,-3.524391],[1.254992,-6.923974,0.825249,5.394021,-7.638505,9.343395,7.900998,-2.875855,2.714737,5.517131],[-0.090720,-5.801232,2.822875,-5.998103,3.343115,-1.127607,-6.077086,-3.737450,-3.134122,1.524591],[0.933105,-5.471750,8.404827,3.965106,-1.520060,9.123183,-3.666347,-4.324448,0.342181,-5.786857],[6.706792,4.850247,-6.301490,-6.949291,-2.120374,9.480771,-1.082116,-3.274169,-7.423756,-8.485967],[8.651860,-3.415521,-6.498025,3.254530,5.130649,-1.480878,-6.775394,-1.749860,0.880976,-0.674775],[-7.238169,5.176437,4.322904,-4.240363,9.597639,0.254800,6.345707,-7.137097,-1.168863,5.622512]],[[-0.739486,-7.927510,2.181936,3.656056,1.704613,-5.817859,7.875946,9.669581,-8.097632,3.595000],[-4.336074,-8.263501,-7.272627,2.328689,-8.825330,-7.710837,5.796840,3.964598,1.114722,8.777936],[-3.744385,-9.444786,-3.952268,0.235101,1.807384,-2.743007,3.997040,8.653780,-8.872263,-5.245572],[8.592781,9.626700,6.201416,-9.136992,4.553098,-5.026370,0.566120,3.946064,-2.391168,-4.565870],[9.731800,9.164520,6.617351,-2.046260,-7.149716,-4.070069,0.144342,-6.636692,3.118124,9.352866],[-5.847475,-3.453239,-9.714139,9.296715,-5.376700,6.154682,1.471315,-8.573518,8.693660,-8.152264],[5.730572,-3.457307,-2.851430,-3.035663,5.548888,-9.700433,2.479086,0.730670,-0.984543,-7.077665]],[[0.240454,0.097841,-3.378188,4.392649,-7.918908,7.683894,6.181435,5.344000,-3.087816,0.848736],[4.694616,-3.953501,-2.858481,7.899778,-5.527108,-5.719066,7.595671,-1.729836,4.689869,7.152300],[7.800335,-0.376335,-5.324990,-8.125652,7.325109,-7.346550,4.782234,4.181589,9.318416,9.313935],[-1.747287,9.444876,4.258265,7.955132,6.134176,-5.321708,-5.689952,9.052767,-3.482352,3.666216],[7.844084,6.271267,-3.654299,1.837827,7.051505,-2.382124,-0.871897,5.801822,6.541522,-7.807739],[6.141801,-5.546320,8.157158,8.360879,2.738464,1.715070,-0.113810,-2.526179,5.585847,-6.888205],[-9.061504,-7.234840,-6.973185,-6.317306,4.216082,9.914722,1.332615,-1.182180,2.606374,7.192614]],[[-4.228230,-3.088498,2.786158,-2.097086,-7.480545,5.029045,0.918093,5.205818,8.441516,5.616339],[-0.263993,8.994873,-6.710653,0.622842,6.803420,0.924013,9.632740,7.721625,-0.234687,-8.768231],[-3.373619,3.501964,2.951711,-7.449046,-7.482343,7.927537,-0.384825,-6.287567,-0.634769,-4.839533],[-2.048182,-1.976392,8.422519,-1.146191,7.263286,-5.920128,-8.322212,8.249006,-5.996240,-1.427626],[6.368010,-4.100138,5.595698,8.390286,-1.361337,0.618808,3.168909,-0.566569,2.725210,-9.148450],[1.047619,3.816087,-0.727829,-1.213912,-8.925888,8.372464,-0.781104,5.422267,-7.223381,-4.448285],[-3.005140,-9.121185,6.058833,7.194086,9.409110,9.723674,-3.495816,4.383422,6.124628,-7.339292]],[[-0.607268,1.049697,7.361279,-5.414685,7.726605,-9.404815,0.396437,0.149725,9.568691,0.087230],[-6.202183,-4.507785,0.787702,4.009685,3.015585,-7.609231,0.799802,-9.373939,-7.192134,3.353602],[2.789935,-5.938212,-3.075302,3.414307,-0.207824,-2.381445,7.646228,9.275560,-0.490846,4.234523],[-5.027624,-9.323275,-0.826934,-5.683497,1.012129,-2.988375,2.679720,7.906219,6.855481,-9.493929],[-0.650188,-2.070143,1.856786,-1.494122,8.444848,9.913608,-9.448365,1.967258,-8.494013,2.844235],[7.580309,0.858900,-4.660674,-4.960426,9.544666,2.773910,-7.141776,-0.586023,-4.433844,6.223144],[-7.121885,0.793994,-1.199064,6.398160,4.781371,8.270430,2.385211,6.769240,1.968641,0.108974]],[[-0.222135,-9.920031,-1.014484,-3.295524,-1.615475,-7.967104,-6.162251,4.828695,6.008151,-3.635951],[7.853774,5.143783,-4.224011,5.367654,7.252581,-7.146005,1.077825,-5.202600,5.439388,-9.846096],[-2.402272,2.938728,0.590518,-4.567746,1.214951,3.698762,-3.844510,3.949706,8.382594,-4.875605],[5.375890,4.232991,-7.532373,9.256683,-7.956760,0.029616,-4.497881,-7.032730,2.824605,-2.569747],[1.053728,9.692944,0.063051,-5.684375,3.831189,5.306675,4.105429,-8.862397,-9.615993,-2.061708],[4.163045,4.645868,-4.711047,5.273083,-6.047765,-9.437323,3.421956,4.184941,8.236092,-6.033004],[4.698457,4.743874,-7.402127,-1.251960,6.890756,1.089050,-1.971890,9.989264,-8.607410,-2.968288]],[[-9.892807,-1.555264,-6.456698,-5.550305,2.247172,4.656958,-8.072883,-8.714594,-7.391951,7.358702],[2.475383,-1.347223,-9.339281,-6.877696,7.842215,1.827965,7.441350,0.952716,-5.962764,8.162780],[-0.108804,-1.495750,-5.592349,9.487866,2.094826,-9.055507,-4.023187,-9.020102,-2.496143,3.649439],[0.639871,-7.576822,8.748060,-2.911035,6.402754,2.427805,-2.534299,7.298607,-5.819485,5.562092],[5.429972,-4.229491,3.524062,-5.849476,0.230407,8.992517,0.869321,-9.599195,9.100218,-3.346276],[-7.376529,2.054255,6.225039,5.605930,4.198075,5.431188,4.680949,-5.502314,-7.942874,-0.832637],[6.077994,-7.164063,6.689276,1.938762,9.674784,-7.645710,7.253413,1.765474,-1.709336,1.372570]]], dtype = "float64")#candidate|1520|(13, 7, 10)|const|float64
uop_1521 = relay.exp(const_1520.astype('float64')) # shape=(13, 7, 10)
bop_1523 = relay.not_equal(const_1520.astype('bool'), relay.reshape(uop_1521.astype('bool'), relay.shape_of(const_1520))) # shape=(13, 7, 10)
func_1317_call = mod.get_global_var('func_1317')
func_1321_call = mutated_mod.get_global_var('func_1321')
var_1531 = relay.var("var_1531", dtype = "float64", shape = (780,))#candidate|1531|(780,)|var|float64
const_1532 = relay.const([-6,10,3,4,9,-5,8,7,-4,-2,3,7,3,-4,-2,-5,-2,-2,2,7,1,-10,6,9,-2,-5,9,8,9,10,2,10,10,-1,5,8,1,-4,-3,-1,6,-1,-5,4,2,-5,-9,8,-6,-6,10,8,-1,-10,-5,-1,-6,-5,-5,5,5,2,5,-5,-1,-4,4,2,-4,2,-3,10,7,-10,-6,-10,7,5,3,4,3,-5,-2,2,1,-7,7,6,5,-8,5,4,-3,-5,-10,-10,-7,-10,6,-4,6,-3,-9,10,-9,6,10,5,8,-8,6,-1,-5,-1,3,-7,-7,5,-1,3,-5,3,9,-7,-5,5,-4,-6,7,1,-5,2,-1,1,4,-4,-10,-2,-5,6,-5,3,9,-10,9,8,-2,-5,9,-6,7,-10,7,10,5,1,-8,9,4,-4,3,-4,-4,7,-6,-6,3,3,-2,-9,6,-6,4,2,5,8,9,2,-2,9,-1,2,5,-3,6,-1,-4,9,-2,-6,8,-6,8,2,-6,10,8,-1,-7,9,10,6,-8,-4,5,-9,5,-9,5,5,-4,9,8,4,-8,-7,-4,-4,9,3,7,-6,-1,-7,10,-8,-8,-6,-8,-4,-7,7,-5,4,-7,7,-10,8,1,8,7,6,4,4,6,10,-10,-3,-8,-8,-5,-10,-9,8,4,-1,-1,-8,1,-9,-1,-10,-6,5,-1,8,7,1,-8,8,-7,5,-8,-5,9,7,10,3,10,1,-1,7,9,-6,9,3,4,3,2,-2,1,5,7,-9,-5,10,1,6,7,9,9,-3,-1,-7,-6,6,-8,-9,8,-4,10,1,-1,-1,10,-8,3,1,10,7,-7,-1,5,-2,10,5,7,-9,-4,1,-2,2,10,7,1,4,-8,-5,-9,-5,-10,-8,8,-9,8,6,-9,-5,-4,-9,-8,-5,9,9,-6,6,-7,-4,2,7,3,1,-4,1,1,-4,-2,-5,-8,9,-1,9,9,-2,7,10,5,-2,-8,-6,2,5,-7,-4,-7,9,10,-5,-1,8,6,-10,9,-9,-6,5,-3,3,-3,6,-2,7,5,8,8,-6,4,-7,-1,-10,-1,6,-5,7,5,-9,10,-8,-7,1,-2,2,-6,-9,-7,-3,-3,-4,7,8,5,-3,-3,-10,-7,8,9,-7,8,9,6,4,10,-8,7,2,-5,-7], dtype = "uint8")#candidate|1532|(448,)|const|uint8
call_1530 = relay.TupleGetItem(func_1317_call(relay.reshape(var_1531.astype('float64'), [13, 5, 12]), relay.reshape(const_1532.astype('uint8'), [448,]), ), 4)
call_1533 = relay.TupleGetItem(func_1321_call(relay.reshape(var_1531.astype('float64'), [13, 5, 12]), relay.reshape(const_1532.astype('uint8'), [448,]), ), 4)
func_1317_call = mod.get_global_var('func_1317')
func_1321_call = mutated_mod.get_global_var('func_1321')
call_1536 = relay.TupleGetItem(func_1317_call(relay.reshape(var_1531.astype('float64'), [13, 5, 12]), relay.reshape(const_1532.astype('uint8'), [448,]), ), 5)
call_1537 = relay.TupleGetItem(func_1321_call(relay.reshape(var_1531.astype('float64'), [13, 5, 12]), relay.reshape(const_1532.astype('uint8'), [448,]), ), 5)
output = relay.Tuple([bop_1523,call_1530,var_1531,const_1532,call_1536,])
output2 = relay.Tuple([bop_1523,call_1533,var_1531,const_1532,call_1537,])
func_1538 = relay.Function([var_1531,], output)
mod['func_1538'] = func_1538
mod = relay.transform.InferType()(mod)
var_1539 = relay.var("var_1539", dtype = "float64", shape = (780,))#candidate|1539|(780,)|var|float64
output = func_1538(var_1539)
func_1540 = relay.Function([var_1539], output)
mutated_mod['func_1540'] = func_1540
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1550 = relay.const([[[9.011769,0.750306,4.630679,-5.036463,-9.943613,9.920797,-6.157937,-0.677222],[-0.778946,4.871352,6.397228,-8.387307,5.131736,-8.805193,-3.466594,4.484160],[8.734070,5.712854,-0.961684,6.797268,-5.459017,5.744067,2.790106,-8.742068],[0.496358,9.625803,9.408122,8.812630,-3.502824,-9.861350,7.145807,-7.586385],[-9.258443,-1.758707,0.727250,-0.268226,-9.019932,-8.389797,8.122293,-2.418130],[-4.088562,1.711803,1.704369,-6.333777,-4.732503,-9.492955,8.354701,-5.711268],[-5.638655,-0.576185,-1.063206,8.568529,-4.988617,-2.199165,-2.781155,-6.749215],[-2.945829,-5.879139,-3.315379,1.316407,7.729943,1.543004,-5.312808,5.576163],[-0.844347,-0.740633,-1.123249,4.333631,0.634883,-8.727191,-1.820369,-2.311243],[4.084767,-6.161569,-4.083115,-5.030047,4.409163,-4.321345,-4.356374,-1.597532],[4.388581,4.884506,-9.741158,5.405851,6.185521,1.087292,-5.036306,-0.136652],[-8.700080,-2.481623,7.266093,8.708417,-9.320896,-2.495007,9.665748,1.175534],[-7.411002,-7.713523,2.859531,-8.606128,5.255750,0.905122,-3.032649,8.039287],[-7.328620,3.867336,3.547373,8.025874,-2.979399,-2.103615,-1.214220,-2.188378],[-0.908075,-0.813211,-6.867170,-1.704864,-9.604399,-8.181365,-4.376180,-1.478659],[5.320347,-2.461585,-0.846261,-9.097421,2.943884,-4.452693,-6.975038,-4.017026]],[[1.466381,-6.921786,-2.942430,4.062537,-5.995453,2.594013,-0.192189,-1.661671],[1.959879,-3.972476,-7.519222,-6.986608,6.809000,6.222390,1.771770,-0.958947],[-3.670819,2.661414,-0.927141,-9.977223,-5.971792,0.108419,7.633488,-7.334272],[-9.382172,-3.104370,6.206456,-6.528836,2.545120,-9.658463,-9.765171,6.981950],[2.248722,4.239673,7.212915,3.396246,5.405392,-5.703394,-0.794834,6.710801],[1.797561,1.663080,-3.317445,4.944111,1.451723,-7.475618,3.595021,7.729953],[-1.845670,-6.567361,-9.884377,9.718840,-0.277865,-5.404265,-5.959199,8.506805],[6.854844,-7.893752,-2.332892,4.819480,9.773466,3.226869,8.501961,-2.364177],[2.049492,5.479868,-8.832930,4.793085,5.369015,2.364571,6.666029,5.588894],[3.642944,-9.220757,-0.330402,1.394590,-3.768735,-4.220576,9.152691,4.482921],[8.770765,-2.610507,-4.353001,-6.032073,4.014508,8.209497,-5.461590,2.468815],[7.080646,2.906734,0.953672,4.443730,-8.797411,7.283871,-8.673883,-2.260260],[-9.374282,9.141762,9.862269,-3.683719,2.368902,1.128594,-6.222929,9.304959],[3.669105,6.175286,-2.104644,-5.735317,-6.106741,-3.636715,-7.105377,-0.539772],[-7.316768,2.351106,1.343951,-1.841961,-5.397834,-9.380504,2.165927,-6.643191],[1.658334,1.621212,-8.451555,-8.458892,-3.050641,-5.843994,5.349319,4.646235]],[[-9.851920,0.241567,-4.695272,8.995497,-6.159511,9.081560,5.850193,-7.432033],[-0.149927,-9.728866,3.482655,2.300702,-5.424277,-5.919195,8.324303,0.163967],[5.504304,6.563057,-6.253275,-2.500357,5.191602,-7.468509,6.993047,4.172432],[2.419712,-5.731806,-9.246948,-8.890191,0.481433,-5.172658,-6.197559,4.207727],[7.227898,6.299252,7.726011,-8.263132,5.127303,9.897302,7.209597,-2.948550],[3.116631,3.322826,9.326114,-5.863032,-0.495066,9.479168,-5.875765,-8.990144],[1.468832,1.411859,4.920724,1.114976,8.389712,4.796119,7.134399,0.391167],[7.392179,-0.411384,-1.718095,5.920010,-3.292004,3.797986,7.759881,-4.980858],[3.042849,9.579176,0.335617,2.481976,-1.887071,4.850441,9.323479,-3.439596],[3.466611,5.602868,7.914555,-1.695708,8.874072,-2.383178,-5.195799,3.904784],[-0.007626,-0.263657,-2.572568,-4.835124,7.826238,-2.963402,-0.724853,3.162026],[-3.163112,0.323636,9.711771,5.395497,6.965747,-0.883482,-3.269933,7.587369],[-2.501684,-5.562437,-1.305710,1.114548,-9.964727,-1.003305,-6.369077,-4.459305],[-4.143621,-7.024921,1.527736,-9.072012,6.114186,-2.034804,-5.751348,1.903881],[-0.277315,6.995696,-7.989366,-2.402851,6.486585,-7.848705,-5.381117,-4.874153],[-9.015493,-6.438058,-3.197743,3.607664,3.730243,4.224890,8.377153,0.381022]],[[-0.268817,-3.150424,1.856680,4.547959,2.569861,8.278405,-5.583704,-8.454381],[-2.556189,-2.416434,0.843038,6.007168,-3.521792,3.615989,1.605667,7.515373],[0.280025,-7.872179,-4.570856,8.697380,7.512809,7.306422,-3.106531,2.273457],[-7.004738,6.886658,6.497120,9.442118,9.486865,1.914753,8.671825,-3.230331],[2.412227,7.965977,-2.462260,1.053375,6.061198,6.635889,6.368326,6.480129],[1.334334,2.892873,0.793292,-0.262081,9.147053,5.200951,-2.943529,-0.593779],[-9.070723,8.664230,-4.627397,4.265822,3.310919,-0.815129,7.925323,-3.252464],[-5.917387,0.940852,-1.091119,7.611225,0.674479,-9.492825,-2.101637,9.346268],[8.666627,-6.695543,-5.632517,8.676822,-6.228621,-6.880677,6.963099,-4.223519],[-2.424572,4.892368,1.602668,7.769632,8.763770,-2.191171,-2.181703,2.189307],[-1.581003,9.943983,7.076720,-4.890487,-5.747488,1.801031,-4.645642,-3.494821],[8.526130,4.262772,-3.708098,4.898301,1.542447,3.413303,-2.989478,1.445739],[-0.077581,1.635838,0.068854,-7.517117,-6.222478,-9.858521,3.121941,2.136569],[-1.746564,-3.308589,0.863139,2.887833,2.038185,-7.041613,9.050510,2.218485],[9.464090,0.092139,-7.149890,-7.138251,5.452213,9.704919,1.044960,6.489695],[-1.717848,-4.476641,9.972315,-1.697114,9.418125,-6.485903,-6.931554,-8.976860]],[[-8.822575,-7.343315,6.884286,6.220879,7.497259,-1.910426,-7.250977,3.978394],[8.036802,-3.728788,4.634533,2.127208,-7.744238,0.676425,7.937725,-9.599656],[8.275529,3.102925,7.367584,2.857472,9.999248,-8.211341,9.556077,-9.746199],[0.454475,4.523832,7.270267,0.205212,0.915103,-9.133714,5.787291,-0.280208],[-3.078177,6.272116,0.186991,-8.138286,-3.690980,-1.151172,-4.407414,-8.739235],[7.133732,-5.000862,9.495840,-7.489635,-0.414618,0.272688,8.904261,-4.969632],[0.256799,-1.124077,-2.969481,-4.358908,8.587133,-1.427411,7.612991,3.874022],[5.755866,-6.446470,-8.110448,4.278383,3.666507,-2.580632,-0.603406,-6.267377],[-9.842928,-2.531745,-0.548446,-9.867444,0.338150,7.830760,3.739397,-7.288021],[7.254328,1.347537,2.740357,-3.694958,-0.096602,-1.230697,-4.221385,-1.087004],[0.948856,4.289238,1.748165,3.553272,1.775828,-3.297518,1.104485,6.466667],[5.021194,-2.235275,1.096758,6.003066,0.252261,-6.403400,2.204242,0.943223],[-6.721556,-2.944822,-1.464209,-5.574444,-1.947336,-9.300853,8.649038,-7.147101],[6.110490,-6.572672,-6.987214,-3.737575,8.597134,2.705377,1.599425,5.103200],[9.987516,-0.659929,7.873327,1.353290,1.632684,8.944850,0.414847,8.846185],[8.193650,5.725183,8.457360,2.874024,5.203516,8.458979,2.834030,-3.342309]],[[-5.677839,-9.728058,7.206738,-3.302155,-1.346205,-8.083324,6.436594,-0.191222],[0.169880,-6.524067,1.564132,3.209909,-0.105988,0.727987,1.859914,5.140651],[-2.271427,7.392651,5.852065,-9.596891,3.838774,-7.906797,-7.280450,7.961233],[-5.463004,3.586197,-8.336858,-4.695667,8.065575,-3.760106,1.901848,4.347121],[-3.369811,-2.718795,-9.531736,2.797373,6.928877,-1.761856,-0.860277,5.031246],[-4.463240,-1.992010,8.482662,7.494420,-8.638568,9.559537,7.757778,-6.593026],[3.977504,-7.265337,7.742171,4.215677,8.059623,3.602145,-9.632192,-5.806708],[1.694320,6.854880,-5.489581,4.357506,-4.832638,-5.425994,7.893683,5.210039],[1.520957,-6.370823,5.055051,1.548474,-0.099701,-3.435493,1.245770,3.172958],[8.766013,0.603876,9.228640,1.544900,2.622459,-3.578492,-8.197855,0.052191],[4.103920,-3.320627,-1.129867,6.076864,-5.517704,0.139940,-2.069053,-3.152483],[0.026059,4.861125,3.269766,-6.711934,8.833112,3.201864,2.587127,1.293679],[4.070552,2.265337,-4.274746,-8.214058,1.075851,-8.117937,-8.530504,8.915698],[0.021335,-3.254526,9.014335,9.684132,3.955501,-1.897130,-7.607411,3.898497],[-9.947822,1.435745,0.014920,9.309707,6.216718,0.552447,0.008674,5.849488],[3.310536,6.845286,-1.792979,4.732363,7.940730,-6.261684,-7.550219,8.537245]],[[2.020018,9.769547,-8.477361,6.309470,-8.269638,4.742177,5.011275,-8.953426],[1.007707,-6.311867,4.658083,3.811977,7.792166,-2.636983,-2.005803,-5.559295],[-3.086656,-7.041484,3.685119,-0.346186,-0.173945,4.332617,-9.178525,5.185577],[2.255815,2.568155,2.193765,3.413526,9.666780,-1.849908,-3.675143,5.818020],[-1.951638,0.318789,2.194376,-6.710357,-3.632525,4.076425,6.272421,-8.475584],[-0.393125,2.994611,-9.070235,8.831529,-1.873390,4.702815,-4.547449,3.687327],[2.896053,-9.643501,-9.780165,-5.410978,-3.686051,3.625422,-4.344008,-0.896347],[-1.006761,9.603778,8.373203,-6.806122,-1.767215,-2.366043,-9.242052,-9.208148],[-9.685189,-5.311807,1.523728,6.042472,-7.514812,4.994310,-2.967522,-1.852686],[-5.744039,-8.266439,-4.827706,3.658148,-1.775752,3.300877,-9.942514,-6.517320],[9.777611,7.585869,-7.384986,-6.590868,-2.377606,6.202810,-1.831497,9.811683],[5.962674,-1.812635,-2.928187,9.718718,6.883215,5.177129,-6.544000,-3.734078],[-7.665318,-4.162006,1.349965,2.885338,-9.445501,-6.581860,-1.025965,0.692415],[6.371839,6.322976,-7.174519,0.205460,-2.080257,8.845568,-6.830590,-8.364656],[6.406465,6.385285,9.752063,-0.199080,-0.528793,-8.676837,-9.319343,-6.622005],[2.216534,0.594191,-1.194991,9.668533,4.250189,7.835191,6.365696,-3.893730]],[[-9.099027,6.022869,9.531197,-1.654327,-0.895828,-2.906601,-3.720812,4.600081],[8.985644,1.505607,5.406236,-4.613587,2.029422,-0.643613,6.714327,-0.838811],[0.031599,5.533957,3.024103,-4.003554,8.383772,1.601000,0.016700,5.515176],[8.359537,2.392887,-7.070994,-0.274029,1.536257,-2.432420,4.426138,8.361469],[-1.856666,4.505197,-9.598769,9.348287,1.726474,0.524478,4.119382,8.087152],[-5.632851,9.868462,-9.000208,-2.908190,6.034649,-6.129462,6.982361,2.720507],[-6.918973,-2.501523,-7.485920,-9.570752,-9.496569,-5.322383,9.227492,-3.111900],[-0.159775,-8.085762,7.424615,4.208612,1.589698,-9.877366,2.822699,-6.560612],[-4.104089,-5.623584,-6.591388,-3.635252,-9.703763,2.913665,-0.153220,2.792198],[6.228543,8.752436,0.076847,1.383494,-6.676456,0.786577,2.188065,-9.153117],[-4.624128,-3.957856,5.430921,5.082519,-0.376748,6.791701,1.659939,0.640167],[-1.139732,4.628204,4.499189,-0.571135,-2.066158,1.641506,7.432311,-3.922593],[-9.371424,2.986572,0.418821,-4.885476,2.592331,0.595390,-9.299529,7.370450],[9.374028,-1.202807,-7.996181,5.019746,1.143061,-6.836855,-6.175349,-9.328194],[-4.050057,-2.729735,4.391970,4.252868,8.488563,1.603966,8.289510,-8.153561],[6.803631,-9.137300,-0.581959,5.588980,-8.647098,-1.618378,-1.893177,-0.493676]],[[-2.270693,-5.885922,1.714829,-5.047926,-7.324534,-3.445068,8.473948,0.854102],[-5.284362,-9.475361,0.849691,-4.875313,1.128376,-1.584989,1.589277,-2.565607],[8.331625,7.491716,-3.659461,5.311994,6.039085,8.821365,6.422586,-9.244953],[-5.925947,-8.550370,-2.501832,0.094210,0.168470,0.670884,-1.201679,8.031064],[-5.591651,-7.477857,-7.696561,-4.621467,-4.270366,-9.652817,-8.393572,7.969508],[4.465911,-2.298277,-6.065717,-8.741427,6.461437,-9.296564,7.144580,4.853008],[9.503909,6.041605,-6.407942,3.210605,1.966052,-4.372107,-9.710031,-9.124246],[7.282073,5.550262,-1.995738,4.592269,4.741129,-1.098753,4.385605,3.986386],[0.797373,0.153035,-6.402378,-4.259016,-9.310822,5.226148,-7.648077,3.502494],[-2.543243,8.408711,-0.602558,-6.168188,8.119824,-7.451993,-8.899243,1.853509],[-9.273743,6.058937,6.530202,-5.735103,-4.243793,1.579679,6.799578,-2.078589],[7.187180,4.733864,1.428109,-8.964905,-3.612371,2.345197,-4.646255,-7.980767],[8.342785,7.182435,-3.525860,5.153442,7.773793,3.965966,6.183097,-3.496569],[-3.128545,-7.794836,3.005295,-9.615088,2.953949,-4.655956,-5.513334,2.951990],[9.220869,-6.349067,-3.565544,-9.413687,-2.013980,8.631960,-2.052419,7.176530],[3.001904,-4.961134,-7.719710,-7.071563,-7.796083,2.378705,9.756504,4.827520]],[[2.203917,-4.436502,6.031614,8.279710,2.257632,9.397639,-5.520723,-5.998328],[-8.404439,-3.378346,6.867115,-8.832652,9.949001,-1.433241,-8.400664,1.026029],[5.871542,-8.899370,3.143935,7.470130,-0.936310,-9.652625,4.005733,-9.220679],[3.802060,-6.022763,1.909293,-7.876443,-2.607569,9.223056,-1.293604,-4.965862],[3.971573,-3.461580,-9.235168,2.967006,-3.729150,5.896523,-4.688892,8.680509],[-1.100661,-8.660375,0.359934,-2.560050,8.163900,-5.443601,1.240108,6.854432],[8.890242,8.535183,5.980620,-3.522684,-0.916827,4.696139,4.520069,-2.946411],[-4.843202,4.560542,5.999517,4.881247,-8.272340,0.619588,-4.795497,-0.118447],[-4.752708,9.978777,-0.152354,-8.557405,6.402519,7.078199,-9.895624,-9.500479],[-8.865866,-5.080438,-5.226714,-9.576846,-4.905706,-1.710367,-5.579690,-7.043392],[-6.619502,4.627323,-6.966980,0.137474,2.167184,-5.836140,-5.658736,7.646727],[9.628135,-6.230257,0.741965,-4.862803,-3.648723,9.870886,0.277421,-7.714012],[4.129973,-1.792154,7.107407,-1.297674,-4.861272,-5.245363,6.545537,2.696606],[-0.708462,-8.600475,-6.502783,4.840480,8.911597,8.898121,-0.037370,-8.623696],[3.312722,8.295813,-9.280798,-7.421309,8.326124,6.944971,-3.627694,5.981007],[3.836866,-9.885900,-9.224989,-5.277655,-6.529290,-7.802385,1.755520,3.830494]],[[3.046021,7.788543,-6.635632,-1.365460,5.910820,-1.877714,-5.372885,-2.021914],[-6.375635,2.990021,-6.840383,-6.118640,8.476447,7.740773,-3.554237,-0.700085],[-1.920606,3.316124,3.231318,-0.704953,-1.818348,-9.343344,-3.920176,-6.495627],[9.530509,8.596809,9.697261,8.736311,-9.941076,-3.144762,7.953995,-0.212530],[-0.451799,-4.625791,5.068913,-6.161330,1.129178,-9.247124,0.249244,-1.795247],[-1.851871,-4.801646,-6.265249,-4.398746,7.279614,0.568901,6.918035,-5.383348],[2.608094,4.750039,7.538032,-6.702606,-4.566148,-5.521506,8.264067,9.191060],[-4.490376,-4.509349,9.155336,9.919541,2.404531,3.789641,-9.682729,-0.267707],[-6.832618,-3.522056,-8.490103,-9.379579,3.132378,-3.110645,-2.198944,-0.910433],[-7.087299,8.262551,1.468133,-0.157244,5.034079,-5.550767,1.089904,1.180075],[-2.134012,5.635037,6.224814,-1.033885,-5.847355,0.208310,-2.338350,9.517286],[-8.795272,-0.024855,1.131301,-6.057075,-2.799118,-5.406527,-7.170639,5.958672],[8.296457,9.936437,-1.494278,5.770686,-9.821875,6.431366,-2.676618,9.176023],[7.537682,-0.697322,-8.265836,1.706461,2.408206,-7.519032,-9.612021,5.969570],[-7.736503,-8.957676,-0.715288,0.661641,-9.236790,9.015316,5.342304,-7.279166],[-2.953290,6.211205,9.041644,8.686365,-7.999067,-3.633951,9.368613,-8.773745]],[[-8.035634,-8.295934,-2.522836,-3.033070,3.885995,2.007963,-2.248838,0.507753],[5.345337,-4.747601,-8.905720,2.959424,2.915660,6.092771,2.389041,6.943912],[-7.182771,-6.065713,0.412279,6.763997,-1.781447,-1.904770,-4.961123,4.450876],[-8.722586,3.895020,6.264857,-4.404617,-6.853151,8.513686,5.936545,-9.632659],[4.592745,6.420196,0.199994,1.149226,3.232320,-7.750709,7.209134,5.890245],[2.786585,-3.430600,-5.801111,-8.314294,-7.980239,-5.845334,-3.416782,3.204210],[-9.213260,-3.006389,-3.118489,6.051707,3.187212,0.456781,-0.009480,6.481979],[4.970153,-2.871691,-4.649465,8.200804,5.598386,-8.713956,-6.315022,5.988442],[-9.884191,-6.184330,1.708186,3.659873,8.934290,7.611576,6.108541,-4.710321],[8.316015,-9.580296,2.977037,-0.186356,-8.857542,-9.210795,5.129071,7.157097],[4.930922,-6.614559,8.328811,-8.460672,-3.894520,-6.705391,-7.921404,8.101868],[-3.435936,2.562215,3.258715,-1.104402,-4.844522,-1.719810,-6.672678,-7.491713],[5.250374,-5.140146,-4.639078,1.791054,-5.075219,-7.429435,-7.741661,-9.246220],[-5.600900,-9.760914,-2.534560,8.184575,2.507450,-5.560686,5.675547,-0.642856],[0.867388,8.160998,5.191793,-2.120412,7.662017,-7.293383,-4.815932,-0.856426],[-1.720791,-8.629634,0.427224,3.662234,7.737078,-5.806795,-4.121488,0.878243]],[[2.330818,2.599949,-6.119413,-7.295249,6.018155,1.122309,-2.998684,-9.584964],[1.473270,8.366260,-9.029835,9.959817,-1.818683,-2.845755,-2.393335,-8.361568],[-1.145125,-6.017292,1.970281,-4.500689,5.191466,5.901414,3.420924,-0.563491],[-9.172521,3.067026,1.101204,2.020675,-6.819945,-9.223773,6.122369,-8.743309],[2.385883,-6.435180,-0.980602,2.011833,0.907410,8.224150,-6.740044,8.679710],[4.797500,2.906337,5.067057,-4.482634,-9.897579,4.194816,2.744446,2.657037],[-9.070402,2.557974,5.009770,5.576036,8.528049,5.348528,-0.487529,0.335386],[-3.406909,-6.414794,9.313613,2.259711,-5.890395,5.897646,4.182713,-1.856520],[4.802403,-1.515280,-2.296780,5.037707,-2.350428,6.773371,3.156001,-0.714941],[4.798193,7.694897,5.459236,-8.562244,3.037154,6.722418,-4.296377,0.866600],[5.198201,-3.131698,2.118679,-3.414466,9.066662,-8.890861,-6.761474,-4.501394],[-2.049762,-7.361003,-6.962901,2.359499,-3.058683,-4.502478,-1.000197,-6.878279],[7.029217,3.283947,-3.002171,-5.324492,3.079046,-4.434218,4.125347,3.127454],[3.802902,3.208329,-9.966513,3.754850,6.933922,6.800703,6.303710,-9.114010],[8.164241,7.501687,3.731377,9.786605,9.648973,-8.267520,-8.326219,-4.111332],[6.722657,5.295417,-4.627213,-1.974886,2.641867,6.073359,-9.955860,1.351965]]], dtype = "float64")#candidate|1550|(13, 16, 8)|const|float64
const_1551 = relay.const([[[2.697003,7.082689,3.759103,1.347224,1.489354,6.907338,9.274667,-5.981160],[-0.740571,5.138292,-5.942992,-6.753454,-4.467450,1.497714,-5.921648,-9.297268],[8.573206,-1.791778,-5.256519,-2.646575,6.361653,1.837679,-8.336138,-5.032112],[-5.213902,-0.389767,-7.707962,-3.295744,0.496902,-0.997986,-4.754519,5.771886],[-2.758793,-1.917417,2.467156,4.841093,-8.782588,0.206553,-1.290695,8.287713],[-3.421814,0.209472,4.892917,5.092553,-0.327592,-8.597953,-7.778115,-9.621104],[-3.815226,-2.984781,-1.218027,-8.973481,-2.644548,1.374508,8.909397,-3.549580],[-0.012750,-4.602480,7.703033,-8.597855,-8.641413,0.810215,9.682019,8.296406],[-6.962417,9.222174,5.566309,-2.386494,-8.728953,-6.357810,-6.118034,3.537920],[3.573470,-9.472313,6.477509,-4.221506,-6.573190,-9.326650,2.064090,7.823702],[9.996592,-8.918900,-1.350303,4.598136,6.366914,3.464552,-5.409360,-7.007674],[-5.072292,-8.222943,-5.370306,5.991267,-1.194595,-1.594640,-5.878182,-1.245618],[-0.108317,-4.404484,2.447140,3.975890,-7.426902,-7.651827,8.458742,-5.023556],[-7.201868,8.005795,4.024997,6.028536,6.812025,9.809706,6.324834,8.700363],[0.055703,-7.990017,7.289925,8.754782,-2.182210,-2.951290,-9.654384,-3.836836],[-3.199235,6.258972,-5.907848,3.583141,-2.929573,3.512082,-4.402151,-8.721364]],[[3.750851,-1.963312,-5.771852,-0.057314,-4.393085,1.201982,9.260039,5.301295],[7.385019,6.644079,6.604335,5.189877,1.408764,7.865072,-9.368520,3.038126],[-7.444681,-9.912307,3.463563,-4.290706,-4.738476,0.375935,7.069470,9.974518],[0.225627,-9.101806,9.333222,4.120774,9.898220,4.421559,-5.462443,8.809800],[-7.383533,7.665689,-6.187026,7.471460,8.251161,-8.769053,2.432148,-4.456004],[-5.669985,0.491543,-8.709593,-1.906714,8.298677,7.277619,9.464738,0.210521],[0.189112,6.572950,-5.953430,-8.529175,9.537075,-6.735346,-7.500466,-0.093497],[6.592708,-4.074262,-6.406964,3.530380,-2.049996,8.842325,7.944571,-8.671691],[3.402416,-6.990129,-1.960681,-1.323902,8.144618,7.833818,2.486402,-0.616941],[8.709164,-4.720502,-6.860165,-8.299921,1.817516,-9.473805,-9.858894,7.003704],[-7.191776,9.546622,-2.980715,8.434426,-0.867011,9.587845,-9.621211,-1.908007],[-7.736236,8.282379,4.185036,-2.283733,3.500481,8.640272,5.104207,2.216716],[7.212733,-5.022253,-6.463072,1.730774,-5.707041,-8.331657,1.727886,1.930991],[-4.126080,-6.382342,-1.448497,-1.548121,1.191395,7.584453,-9.259216,-7.716878],[8.097642,7.150033,-5.774781,-3.314468,3.652347,1.062109,7.669105,-3.805070],[3.461541,4.993032,9.865000,0.560191,-7.849642,3.965281,-3.127511,-0.847512]],[[6.630329,3.445830,-6.182234,-4.898575,4.900099,-6.898910,-7.097326,-4.938475],[0.824476,7.230383,2.827274,8.557962,7.244230,-3.986776,1.113077,2.209552],[-3.912841,-2.429135,-1.400779,-9.620008,9.496146,2.018339,7.671659,0.078452],[2.888715,-1.418035,-6.439841,-5.277657,-0.486027,2.674188,5.566568,-8.504917],[1.527525,0.149476,-5.562841,6.875888,-9.940010,9.116856,-0.100313,0.227466],[-1.769255,-7.891053,6.359049,-5.543738,8.954356,5.580743,1.302506,-6.351924],[6.585863,-2.297989,0.631640,0.678874,-0.077163,-4.852393,8.450972,0.913716],[2.265733,-6.189633,-1.735312,-2.434015,-1.735585,4.499188,-8.729375,8.530317],[6.302248,2.081068,6.110042,-5.845183,5.782836,3.140831,-7.256511,-6.759006],[-4.183572,7.667727,-6.276903,7.496370,0.067616,-8.316111,-0.746455,7.070685],[0.801914,5.445585,3.201939,0.463734,-9.915701,-9.889241,4.040695,-2.106040],[6.210400,-7.597699,9.785391,0.755942,-0.584774,-8.020432,1.217502,-4.848150],[-3.074056,2.597591,-7.902288,8.747385,3.112423,6.497654,-8.591827,1.335458],[7.764462,2.858625,6.360848,-7.304143,-4.333924,-4.646614,-6.123912,9.457083],[-2.528363,0.162225,5.434321,5.306334,-7.608096,0.589651,-0.500262,-2.063620],[-2.968433,2.662017,-4.828029,-4.948013,-8.188400,-2.445292,8.532129,-5.969793]],[[7.255496,-2.421962,-7.909143,4.248213,2.501780,4.915527,8.830974,7.226231],[-7.470621,3.452091,-2.397455,3.331918,1.196476,-6.330468,7.869501,-8.075858],[-1.126859,8.822770,7.366998,2.708019,1.307175,-2.361963,-8.091387,7.983998],[-9.977298,-9.243023,-0.284965,-7.747754,5.456864,-3.048211,6.167667,3.128656],[-6.489892,-4.281045,-8.229750,-3.082869,-4.245815,-8.831682,-8.682130,1.057029],[1.911322,-3.016712,-9.765914,5.214876,4.733963,-4.823683,-4.851420,-6.618187],[2.288353,-4.919453,-7.560975,7.562266,-9.738624,4.918737,2.357050,9.114283],[-0.770234,-3.776609,-3.964404,1.949692,-3.510294,-1.902990,5.135246,3.415661],[9.669997,-4.254412,-3.227207,6.958548,-2.823739,4.129425,8.908388,-9.050986],[-8.889651,-4.179915,-4.901475,-8.365263,-5.837051,2.890260,4.162975,-4.883751],[9.585063,-8.866088,-4.367106,-5.275816,0.481380,4.087623,-5.535321,-7.283803],[-5.547081,-6.033358,-3.158352,5.170890,4.364427,1.336311,1.374185,-3.110550],[-6.933497,-0.432504,-7.600702,2.465877,4.173049,-4.465853,-5.823462,-7.672578],[-7.357465,2.101846,-5.691111,2.386187,-1.192338,-4.089029,-1.849703,-2.915400],[-3.721793,2.420716,8.556833,-7.484530,9.029859,-3.828266,4.284750,1.959431],[5.980126,7.765281,2.147584,-2.912665,8.095026,-3.746646,0.462657,-4.463959]],[[0.121637,-0.933208,5.548615,0.815224,3.930846,-5.895957,1.114887,-7.957157],[5.619005,-4.931755,-9.732916,-6.806868,4.135975,1.825658,0.596821,-3.211323],[-8.307170,0.975148,3.786515,-5.399928,-8.193001,-3.865762,-4.572425,4.787288],[-6.399768,7.569121,-8.851201,-6.072684,-7.939951,-6.066964,7.915636,-8.622330],[9.212845,0.323181,1.929040,8.986797,5.211667,5.230002,3.480758,1.782466],[-7.475557,-1.730217,-5.666373,-1.257701,7.732218,-9.288566,-1.188956,-8.345864],[-8.248724,-6.677422,1.027468,5.274481,4.834142,7.233592,3.380139,-0.549576],[5.304815,-1.633575,8.326708,-3.052626,8.696028,-1.596028,7.368876,8.021040],[-0.365968,6.366752,-1.927445,-4.262510,7.739222,-9.983114,-0.365398,-2.435820],[5.418199,1.662607,-9.798962,6.598023,-1.595718,5.041952,-1.094839,0.425332],[-8.693465,4.079328,-3.123490,4.921491,6.182508,-2.256067,-2.078803,4.832106],[-1.144310,5.698534,-5.746487,-6.700422,-5.260186,-3.080846,5.415715,9.749536],[3.069665,-7.980374,3.247694,7.656744,6.634885,-4.718441,1.218486,4.285665],[0.862247,-1.874604,-6.652171,-9.106331,-7.454608,5.333025,2.094185,6.174933],[7.339115,-9.004469,9.384074,7.701582,7.305191,8.921069,6.021426,-9.555736],[1.874902,-7.196469,-2.426195,-0.241499,-5.691987,-6.407905,-2.404122,-8.279280]],[[7.207539,-6.920663,-4.686605,2.406981,-1.386021,-9.773304,9.823261,-6.383167],[8.348062,-0.054051,0.947407,-4.952239,7.121054,5.563233,0.373301,7.387064],[-6.511010,8.146400,-0.604769,4.468348,3.479856,-9.501276,-9.192011,5.220489],[-1.015822,0.153786,-4.616786,6.148869,-5.187884,-0.401764,-4.012064,-8.271089],[4.810221,9.662236,-3.375349,-2.216043,3.651742,3.532681,3.652413,9.727049],[-6.134886,-9.205829,6.466282,-2.126914,-8.700817,5.247590,4.321147,-1.334811],[4.817125,-8.530514,-8.455702,-6.340656,8.172618,3.339481,-7.669241,-5.089385],[-0.342806,-8.212859,-4.910461,0.501524,9.298779,0.653713,8.440746,3.016239],[-0.146516,-9.897631,5.992010,-0.317146,-2.720139,3.190453,-6.341322,-9.875568],[-9.368863,-8.638619,2.656331,-6.246253,-9.064655,3.474776,0.744735,6.762189],[-3.694171,-6.641249,-6.776288,5.077046,-1.384501,0.337656,-1.455077,7.011724],[-5.836088,-7.147575,-3.729305,-9.874748,-9.470822,-4.441044,6.274509,4.216555],[6.001536,7.499216,-4.346489,7.831629,9.558037,-0.516325,-0.198353,4.106919],[4.737929,-3.710597,-9.032880,3.188960,9.745036,-8.837107,1.478060,-1.634588],[0.362214,-8.356994,-5.378836,-7.730334,-5.913635,-7.930978,8.327873,-3.269243],[3.061595,-1.410088,3.961139,-2.101606,2.373560,1.810564,4.232298,2.783051]],[[1.772176,-4.991556,3.012644,-6.214618,1.249888,-0.529895,-9.089848,-1.602403],[-8.574792,8.444870,-4.058194,-9.730908,-0.826461,-1.226772,0.803151,-2.099769],[3.297356,8.036711,5.065304,-6.403565,-7.882221,7.174728,1.142093,-4.528430],[-8.838171,-0.448827,0.020626,-2.428042,-3.190569,8.660753,2.258981,4.817622],[8.692239,0.946953,-2.487331,9.376936,0.065068,3.915185,-8.685898,-8.501096],[6.348751,3.015030,9.949267,-6.408645,-9.373873,0.188721,4.321104,-5.732140],[2.725434,8.355465,-3.735402,-7.151651,-8.544386,-9.267941,2.816952,8.480366],[4.305976,-8.453565,3.262765,6.490105,-3.222399,9.665250,3.458986,-1.433006],[9.788168,-7.218828,6.763001,3.512489,-7.827023,-1.924434,-2.902983,-3.371442],[1.778867,-0.561801,3.613541,-6.478050,8.846431,2.902621,-8.409998,8.138193],[0.249987,5.873180,4.399508,-3.734471,-5.784276,6.333998,9.425690,2.158816],[-5.745890,7.185104,6.108094,-9.448277,5.741924,3.510963,2.948439,8.777905],[-3.750807,7.723728,-6.055774,3.763375,0.047187,2.148875,-5.808004,6.031493],[5.877775,-0.847180,-9.944910,4.826622,-4.354494,7.276953,8.588531,-9.569086],[0.400014,8.891310,-6.249276,1.496046,-5.939273,-0.660208,3.926264,2.313536],[-5.893367,3.464823,-8.755268,-3.547058,2.497503,8.105497,-8.162792,-9.481421]],[[1.725867,8.648169,-0.169655,5.952789,-7.636733,0.553175,2.254089,-9.021555],[-1.557168,8.678662,-9.313146,8.137370,5.195278,-5.452378,-9.745107,-2.069838],[8.898650,3.105083,-0.125161,-0.479619,-1.775068,-5.393476,-5.353152,4.011941],[-1.757214,-4.357398,-2.859874,-4.559495,-9.603074,-1.136017,2.445167,-1.082891],[-7.256132,-4.058606,0.670828,5.306759,-8.217578,6.595177,-2.717311,6.260291],[8.519452,8.696391,4.789712,-8.506704,9.190964,-2.264153,5.700208,2.664531],[9.762768,-0.352248,-1.914706,-2.350192,6.927045,6.665605,6.957313,-0.191440],[-8.316244,-8.913383,1.330159,8.593028,1.071253,0.108349,9.669610,3.707775],[-8.440729,2.272718,5.102354,7.213614,8.929401,7.353529,2.727768,-2.943780],[4.509877,5.185140,8.703854,9.070138,-9.265791,3.432793,7.842128,-3.010199],[-3.144093,-9.882574,-9.569333,-1.599345,0.246122,-6.049796,1.259979,-2.099846],[4.580469,4.015877,0.949336,-4.079691,5.340351,5.864749,-5.589744,-6.934967],[1.774323,-0.372671,-3.682503,4.556263,-4.329335,-5.379453,-7.181201,7.442016],[-8.531904,-1.368791,9.396035,0.745656,-7.512979,-4.569568,3.466402,1.360511],[9.846958,-8.729586,-8.586772,4.838925,4.237535,-8.488793,8.920737,2.665028],[-6.985399,2.715496,-0.288722,-2.384041,5.652560,6.054173,5.827477,2.730492]],[[5.723275,-3.013892,8.522053,-5.527984,5.000485,7.275499,-9.180343,-9.736519],[-0.044188,8.565841,9.771319,-2.045134,-0.339070,7.152094,-8.724502,-6.747043],[-4.724071,-5.009729,6.985614,-5.377508,4.167093,1.272530,-4.832986,1.454598],[4.107332,-3.783082,-1.425379,5.704324,-3.733283,4.386425,6.487010,-1.701277],[-2.073384,9.811695,-0.166175,2.938669,5.615666,3.866979,-6.045476,6.209249],[4.340262,-9.646883,-3.573072,-6.560732,-6.386218,9.211919,-6.317146,6.845147],[-8.057505,-2.019740,-5.265445,5.592192,-8.616683,-6.985101,6.325638,-1.045034],[9.389521,-7.356089,-9.125304,-0.419363,-4.270886,-9.454823,-1.497526,-6.944603],[-2.385968,0.338523,-3.218756,8.254574,9.596998,7.065091,8.851636,-5.816901],[0.155125,-6.303922,9.057470,-7.936571,-9.792124,-4.846324,9.934364,-9.642092],[9.422982,-0.792478,-8.983599,-5.489884,5.012739,-1.166936,5.312425,3.503903],[8.334990,-9.293175,2.961290,4.330754,1.105823,-1.654091,-4.928190,5.313271],[-9.872482,9.672855,0.106037,-0.478657,8.585133,5.826513,9.929686,1.069900],[-7.090069,-2.415742,5.798287,9.943925,9.873748,3.155756,-0.916440,-4.976817],[-8.136000,6.593316,6.786325,1.582481,-1.553505,-7.212300,7.269686,0.737538],[7.762171,5.020335,2.016017,-7.149067,-8.285983,-1.215837,-4.275646,5.578189]],[[-9.883022,-6.670608,7.048705,-6.683579,-7.273108,3.687929,4.188986,1.348732],[-5.201327,1.784056,9.318919,7.955289,5.273315,2.088821,-9.116129,-3.555617],[0.820948,-2.772604,-8.038461,1.172982,6.474347,0.778591,8.917204,-2.641892],[0.999242,1.504407,9.400910,1.123545,-5.598763,-2.401350,0.656014,7.063757],[3.881488,6.160087,-4.421493,-0.096691,-7.212366,-3.898275,-0.538263,4.365900],[-0.850634,-7.928932,8.228703,-4.011377,-7.894789,-7.074685,-5.150847,2.449832],[-8.008874,9.444007,4.827901,-9.457704,4.920532,5.025405,5.436811,-3.558346],[8.493108,2.292758,-5.691836,-5.270327,-0.086794,-1.291669,-2.010708,-5.924029],[6.756604,5.345632,9.899345,-2.366718,3.057494,-2.057456,-9.824649,-7.447987],[-3.593794,9.696258,-0.792096,2.090964,-3.209832,9.670760,1.997811,9.779740],[6.714409,5.865394,3.840975,-5.362410,3.343687,1.328278,2.362614,5.019374],[-2.627408,-5.109795,-3.013205,8.880390,5.531905,1.607891,5.353431,6.548521],[-8.170270,9.148443,-4.451216,-4.084001,1.987608,-3.241433,3.025390,-7.443508],[-9.562551,-1.593318,-7.407645,6.649930,-0.842337,0.106535,-9.178874,7.439463],[4.946889,-3.032222,-5.064889,-7.278781,-1.760724,-4.005771,-0.811451,0.903169],[4.680153,-4.324342,-2.366487,6.126671,-5.498865,-1.958784,-7.581239,9.084328]],[[-5.481035,3.093734,-8.241473,-3.112091,-1.731553,2.271015,0.681634,4.712809],[-6.162762,5.706487,-1.953873,-4.773898,7.365190,3.868703,-5.940915,7.443182],[-7.147467,8.544356,-7.534087,0.045528,-1.468238,-3.591746,-4.869661,-2.893377],[6.212425,1.462785,-0.846285,-8.949260,-4.153976,3.027178,5.583100,1.290515],[-6.133936,-6.784598,8.308558,1.883767,-6.070136,6.557929,-8.117828,-7.533061],[5.627821,8.532720,7.528445,1.535305,0.930062,-9.810938,-0.247423,-8.800656],[-7.533282,8.862178,-3.713551,3.676871,-0.741909,9.506152,-0.362780,-6.922068],[7.474803,2.585225,-4.331820,-4.920740,-8.393660,-2.504098,1.672605,8.237228],[6.838566,9.431352,0.563270,3.599590,6.337661,-8.193386,-6.303475,-3.971495],[-3.585267,-7.087547,-4.723421,-3.137582,4.458231,9.950959,4.078037,-3.185102],[-1.521037,5.961910,-4.607622,9.909289,8.853571,6.867837,0.894499,-7.488742],[0.256621,-7.151799,7.492292,-1.298747,0.060695,6.003464,-6.168040,5.206881],[4.486120,5.596571,7.581122,-4.389957,-2.965860,-9.448273,1.750963,-9.372771],[5.209539,-1.104532,7.657565,2.103326,0.637223,-1.492127,-9.688070,-3.759681],[-1.521568,3.755875,-8.667743,-6.813743,8.194827,-7.694417,4.253901,-5.844645],[0.228142,-3.749778,8.375997,1.781270,-9.088692,7.028812,-3.239015,9.897771]],[[4.274101,-6.683881,-1.591205,-5.301455,-9.427821,-9.441389,4.363048,-7.995753],[4.814035,-5.451068,2.841445,9.773490,1.305462,-0.294880,-5.063930,-1.008347],[4.902836,-6.551715,8.143392,8.847631,9.074898,-8.957410,-9.297382,-0.755267],[2.950202,7.070117,-7.186449,-2.355112,6.134482,9.077779,-2.397921,3.126393],[2.080155,0.625445,-1.036211,-9.353289,-7.318993,3.423186,2.847828,8.085172],[-2.734684,4.348899,4.410297,-2.554780,8.766119,7.096643,0.161234,1.314029],[-8.045075,3.843265,7.499465,-7.363112,-5.746995,1.221053,3.386378,-5.192612],[8.195198,9.164836,-5.702904,0.625459,6.478980,6.749741,9.773134,4.340941],[-2.938794,-0.870182,-4.644838,6.760387,-0.045888,3.434624,0.303505,2.413691],[5.043828,-2.948803,-2.340407,2.953996,-6.378716,-0.815935,9.161692,7.186181],[7.252934,-6.734174,-5.928383,-6.930779,-3.344001,9.287090,-4.787326,-4.012536],[1.134840,2.941615,-9.472177,8.069805,2.326444,-7.427516,-6.135436,-1.151370],[6.168684,7.558742,5.654957,5.775658,9.843011,9.042375,8.908074,-7.058456],[-6.887799,0.203941,-3.202703,7.253693,-5.836986,1.174835,5.187246,-5.381842],[-1.231924,2.039709,-1.347095,3.516922,5.947865,3.940616,-0.844640,5.101557],[4.291405,8.179980,9.138508,8.808120,-9.778277,-3.736852,2.418222,-2.122477]],[[6.936441,0.745568,-1.111780,9.067386,8.215783,7.652835,-4.664580,2.153060],[2.048593,-5.701995,0.804346,-5.681147,-2.731292,-9.144144,-9.339801,6.518603],[-8.801098,0.524551,5.596301,-0.824267,4.851141,-2.424230,-6.084159,6.718866],[-8.801864,-0.916263,7.313296,5.372156,-0.122319,0.692085,-9.228329,-5.515201],[8.375907,-8.466461,-5.913180,-4.623664,-7.081775,-9.084613,-2.366706,-3.080949],[4.355448,-1.974660,9.513777,-7.308349,5.855443,-4.824937,-7.283361,-2.134284],[-4.632717,-1.115934,2.531830,-8.369336,7.398925,-6.300726,-0.335246,-1.342304],[-2.298670,4.472131,-2.704649,7.585428,4.781771,7.168829,-6.784471,-7.228826],[-8.573431,9.623661,0.099848,1.585748,-9.717094,-1.234166,-0.059662,-5.324508],[5.719341,8.720810,9.146209,-0.584826,-6.225202,-6.421010,6.890511,-5.428189],[4.502442,-4.838704,6.328846,2.104257,3.274905,1.589920,-8.949916,-9.082173],[6.814969,1.531978,-4.429305,2.177864,-0.453790,0.629260,-7.490977,7.092715],[-3.624544,-0.784297,-1.230643,3.856292,3.382402,8.774888,9.655613,-7.363348],[4.163774,4.129392,6.219683,2.199345,2.280549,0.037564,-5.890235,1.866854],[-7.932675,-0.789674,-1.079115,3.219392,-8.039849,7.584761,-6.042515,-9.548066],[-9.494112,-6.755252,7.245313,8.036740,-7.761782,-2.921189,8.094645,3.920347]]], dtype = "float64")#candidate|1551|(13, 16, 8)|const|float64
bop_1552 = relay.multiply(const_1550.astype('float64'), relay.reshape(const_1551.astype('float64'), relay.shape_of(const_1550))) # shape=(13, 16, 8)
uop_1560 = relay.acosh(const_1550.astype('float64')) # shape=(13, 16, 8)
func_129_call = mod.get_global_var('func_129')
func_132_call = mutated_mod.get_global_var('func_132')
const_1565 = relay.const([7,-5,3,3,4,2,10,-1,-8,7,4,3,-6,9,7,8,-7,1,4,-8,6,4,-7,2,-5,-3,10,10], dtype = "uint16")#candidate|1565|(28,)|const|uint16
call_1564 = func_129_call(relay.reshape(const_1565.astype('uint16'), [7, 2, 2]))
call_1566 = func_129_call(relay.reshape(const_1565.astype('uint16'), [7, 2, 2]))
func_1538_call = mod.get_global_var('func_1538')
func_1540_call = mutated_mod.get_global_var('func_1540')
var_1580 = relay.var("var_1580", dtype = "float64", shape = (780,))#candidate|1580|(780,)|var|float64
call_1579 = relay.TupleGetItem(func_1538_call(relay.reshape(var_1580.astype('float64'), [780,])), 4)
call_1581 = relay.TupleGetItem(func_1540_call(relay.reshape(var_1580.astype('float64'), [780,])), 4)
uop_1582 = relay.cosh(uop_1560.astype('float64')) # shape=(13, 16, 8)
func_1317_call = mod.get_global_var('func_1317')
func_1321_call = mutated_mod.get_global_var('func_1321')
call_1587 = relay.TupleGetItem(func_1317_call(relay.reshape(var_1580.astype('float64'), [13, 5, 12]), relay.reshape(call_1579.astype('uint8'), [448,]), ), 0)
call_1588 = relay.TupleGetItem(func_1321_call(relay.reshape(var_1580.astype('float64'), [13, 5, 12]), relay.reshape(call_1579.astype('uint8'), [448,]), ), 0)
func_1350_call = mod.get_global_var('func_1350')
func_1352_call = mutated_mod.get_global_var('func_1352')
var_1599 = relay.var("var_1599", dtype = "float32", shape = (88,))#candidate|1599|(88,)|var|float32
call_1598 = func_1350_call(relay.reshape(var_1599.astype('float32'), [11, 4, 2]))
call_1600 = func_1350_call(relay.reshape(var_1599.astype('float32'), [11, 4, 2]))
output = relay.Tuple([bop_1552,call_1564,const_1565,call_1579,var_1580,uop_1582,call_1587,call_1598,var_1599,])
output2 = relay.Tuple([bop_1552,call_1566,const_1565,call_1581,var_1580,uop_1582,call_1588,call_1600,var_1599,])
func_1602 = relay.Function([var_1580,var_1599,], output)
mod['func_1602'] = func_1602
mod = relay.transform.InferType()(mod)
var_1603 = relay.var("var_1603", dtype = "float64", shape = (780,))#candidate|1603|(780,)|var|float64
var_1604 = relay.var("var_1604", dtype = "float32", shape = (88,))#candidate|1604|(88,)|var|float32
output = func_1602(var_1603,var_1604,)
func_1605 = relay.Function([var_1603,var_1604,], output)
mutated_mod['func_1605'] = func_1605
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1607 = relay.const([[[1.206847,-0.230699,-0.126498,1.617996,-3.153917,3.734916,-6.872910,-9.204088,9.976300,3.596059],[-5.843016,-2.086385,-5.060151,-1.556410,-8.304843,-1.283000,3.838319,-5.157087,-6.743411,-3.773242],[8.552432,-2.204791,-3.870805,8.002597,5.482555,4.495747,-8.502869,7.826048,-8.703993,0.971459],[2.088881,1.893865,-7.744442,-2.106310,3.170792,-5.696881,-1.361743,-6.875624,7.022406,-5.671778],[-8.016029,0.564631,7.504283,7.592070,-5.263034,0.600472,9.164731,-3.838993,-5.467406,-0.460132],[9.538637,-0.385169,4.779133,-9.996354,-4.057803,2.352856,-7.889310,0.105768,-9.936664,-1.699791],[-1.999655,-2.618314,-4.760053,5.142747,-6.041580,-7.981936,-6.303911,6.043658,-7.305134,2.354389],[4.829222,0.484321,3.744183,4.846221,-2.076847,-7.366877,6.236353,-2.954653,6.558793,-1.296924]],[[7.604817,3.828299,-8.146669,0.030806,-0.681408,4.719413,5.833898,-4.974436,-9.905732,-4.550425],[0.154933,5.926695,-3.635862,-0.681428,8.944103,0.301903,9.300293,4.921116,0.360707,-9.993696],[5.036128,1.711064,6.950297,1.926433,-0.215992,-6.477841,-6.337277,-4.140051,4.592844,-1.229165],[-4.289773,6.743949,-7.151812,3.944749,3.809164,8.190791,9.789727,7.818751,-3.100667,-5.805280],[0.793799,-9.836086,-2.260138,-8.585168,2.503498,9.391835,-1.256822,-1.757308,5.435613,-8.912198],[9.832398,3.776149,8.948451,3.424853,3.952391,-9.720864,-3.143971,-3.787212,6.353093,-1.546682],[4.137843,-2.461846,-5.785086,-6.901591,-9.715540,-1.661052,-6.129493,4.560224,6.554282,-9.417296],[-8.268701,8.738953,9.462631,-1.166933,-7.180247,-3.862936,-8.554169,9.990511,8.038974,-5.557907]],[[-0.766710,5.550566,-1.028228,-1.466295,-0.317912,-6.846946,5.779698,6.755501,2.608804,-3.408408],[8.579608,2.610948,3.689740,-1.369056,-5.579677,8.034944,-4.797994,7.945517,3.338840,-2.339446],[-8.384724,-5.839997,-0.468686,4.357061,3.867248,4.397782,-6.546977,-9.089022,2.880376,-4.639073],[9.784375,-0.207592,-1.910921,-0.885054,-8.516480,3.814565,8.124947,-9.310521,-8.907504,0.136931],[8.603376,-7.009905,9.706959,-2.571383,4.601593,-4.900841,-4.808743,-9.904607,4.765652,-9.259188],[6.715225,-9.806621,9.894408,-3.136832,-1.720326,-7.027241,-1.253943,2.176821,8.615053,-5.448204],[-6.941265,-2.880374,-2.671318,-2.324877,3.535427,3.569766,-8.531040,-1.496873,-9.704575,0.117403],[-0.657474,6.388741,-0.109539,6.966471,-9.877971,1.160426,-1.498837,2.275152,-9.961309,-0.048244]],[[-0.134323,8.814306,-1.575048,-7.075507,-6.328296,0.004391,3.142191,-1.842879,-5.086871,-2.109733],[2.736691,8.017004,0.708718,-1.497537,-3.274020,8.715444,-4.865011,-7.850261,-0.839697,-8.063634],[-6.109399,-0.307225,-4.875172,-8.697832,-0.071094,6.181924,-2.028807,0.868843,7.038432,7.749890],[9.539044,-6.734013,8.710202,-6.544052,6.915487,9.037091,-7.507969,-9.759714,-3.684839,7.818674],[1.517315,-8.043143,-7.465110,0.036146,-5.642024,8.503306,7.690420,0.442350,-6.305526,3.649287],[-4.620113,-4.889211,-8.309543,1.713858,8.460648,6.626259,0.355035,-9.589229,9.641078,6.721398],[-9.741247,1.304681,-5.361182,7.553036,-8.762207,9.776226,8.153107,-6.516806,-3.774952,-9.319734],[-1.287934,-0.562780,3.054127,0.147329,-1.987007,-1.535037,-9.708042,-2.562025,7.315243,9.040640]],[[-6.162334,-6.684756,-4.243243,3.678195,9.998269,-9.375741,9.564772,8.887695,5.061529,-9.767907],[-6.330061,2.458667,-5.620453,8.058851,2.062858,-2.520840,0.567944,3.045272,5.260075,-2.736519],[-6.099411,-8.760321,0.964027,-9.878185,9.060655,-6.232533,-1.333899,-0.797488,-6.606035,-9.971450],[-4.564070,8.429503,5.711372,-8.277041,-5.815268,7.048323,7.605613,-4.619943,-4.739587,-5.217017],[6.754984,8.870964,-1.218095,3.964469,6.721735,-1.279492,-7.555583,-4.144771,-0.760570,-1.883228],[2.961285,6.562443,3.668596,-6.820516,-8.570914,4.033339,9.769792,4.706151,-8.292683,-2.574016],[-4.013686,-2.793604,7.461711,6.909228,1.059827,-5.860387,8.259660,9.249636,5.125703,-5.191944],[-7.069093,-8.826209,-8.643749,1.438354,-1.632500,0.334345,-2.648532,2.128538,-0.160939,9.813687]],[[-4.507358,-8.326267,2.136390,-0.068278,9.745428,3.603323,1.548875,-9.908223,7.550428,-1.105037],[9.727707,7.166480,7.701368,4.734247,9.832890,5.808840,-5.837490,1.610176,-8.738642,0.042963],[1.033095,7.367898,-3.298026,-8.999089,-1.325964,8.326528,-9.414021,0.245916,4.236963,0.492294],[-2.823915,-1.538733,1.095900,-2.369790,7.610664,7.030358,-8.382638,3.054627,-6.251265,1.644037],[1.180859,4.553161,6.703458,7.606598,5.116078,4.891464,-0.781046,9.991921,6.162512,1.963989],[0.295663,0.683929,2.048917,-6.873761,2.575469,-0.445263,-3.802347,-4.534012,8.393520,-9.834297],[7.799239,-3.102104,3.834763,0.295494,9.198199,1.475890,9.551284,3.211128,-0.122480,3.050467],[5.333699,-0.188654,8.925016,6.566620,-8.611804,8.214033,3.422223,2.497219,1.958017,5.938375]],[[0.484991,3.122566,-3.011382,-5.551218,-7.329921,-6.511620,9.074682,3.968070,3.083165,4.123555],[-0.126973,9.513158,-3.859188,-5.264057,9.298443,8.565722,1.761139,-6.477163,6.954919,-6.429316],[-0.194617,7.017785,1.485403,-5.846677,7.066026,-6.881903,-6.358827,1.590399,6.417718,0.675100],[9.775000,0.359644,2.602187,-0.801947,-2.106886,5.749028,7.367485,7.401943,6.848828,-3.422994],[4.167734,1.232288,-6.205927,7.954113,-5.230531,6.779950,4.290677,-8.915078,-6.233884,9.212084],[7.019210,3.692563,9.772307,2.178239,-7.101984,6.762463,1.743158,9.907936,7.864756,4.997592],[3.451031,9.301635,1.618429,-1.733843,8.267471,2.376216,-7.110157,6.906386,4.353400,-2.658577],[-8.584793,1.920259,-3.696587,-4.953305,0.300459,-2.662044,-5.339149,6.513683,9.511658,6.287153]],[[3.331913,-2.979292,1.626086,4.528913,-9.289380,-4.973185,3.998868,-0.640536,-9.603785,2.355049],[-8.426206,3.378093,-2.903456,7.655489,-1.749776,-6.993579,2.195082,0.344553,-9.427862,4.104039],[-9.931332,-1.966528,7.555772,-5.593578,4.675948,-6.992248,7.738227,-0.358552,-6.153415,2.764126],[-3.431802,3.033994,-4.745996,-6.001840,2.908602,-1.123484,5.588488,-1.185048,1.329847,-3.331579],[-7.999846,9.800055,-1.276003,3.022529,4.209542,7.388167,-9.078919,8.528233,2.370328,-7.178973],[0.731432,9.632546,4.269195,9.907391,-9.032719,7.236502,-8.332927,-0.030454,-3.308784,-5.114543],[-8.196282,7.377263,-8.662498,-1.893393,-1.566540,-1.450172,9.141433,-6.365811,7.587282,6.673533],[8.795500,4.260216,7.658178,6.779685,9.798315,1.344290,2.336385,9.857540,1.245036,-7.226130]],[[-5.772137,7.719428,-8.857397,-0.052651,-0.776907,1.478594,-8.513722,3.177737,-9.454024,0.106470],[-2.740679,9.820276,2.912387,0.227095,-2.652157,-5.612713,0.714079,-8.790846,8.735815,0.869896],[9.632383,0.869612,7.489425,6.903490,2.419838,-3.422119,-0.165746,-4.062154,-2.958766,-4.932574],[0.144047,8.995783,3.899731,-4.421883,-2.458173,-8.835211,-6.330864,3.575265,-3.006565,1.366131],[4.005077,-9.341826,0.838740,6.056090,-6.908398,9.208678,-4.413760,-1.813000,-9.840263,-5.054291],[8.698826,-0.897509,-5.147164,0.642129,7.138567,2.177493,-2.442829,-0.330063,-1.559899,1.581343],[1.694700,-6.793019,0.030190,9.631684,8.914866,-1.107578,-4.161950,-0.018416,-7.955766,-9.747993],[-7.970724,-3.017320,6.463229,-7.574263,-6.675143,-7.649520,-9.249318,4.933082,-4.505178,-6.110589]],[[-2.392280,-7.281723,6.032540,-5.884292,-1.930720,8.086666,-9.524431,-8.355672,-3.708387,1.648671],[-5.411736,2.995069,-7.560502,7.650773,1.204817,-0.870347,-3.244037,0.835066,1.329587,-7.878423],[-3.717229,-9.577465,9.275317,-4.378670,7.747677,4.777593,4.399660,1.358541,2.883507,-7.780924],[-8.276381,9.415726,1.972991,-6.990098,-7.716096,3.910137,2.353075,0.166783,-1.487397,-7.507434],[3.447564,1.567638,-0.064081,-3.399293,4.432308,1.403004,9.990598,5.797233,7.259732,7.773068],[-9.006785,-0.472021,-4.166458,-4.847174,6.245580,-2.670767,-0.439468,2.392730,-7.259488,9.750677],[2.050758,7.333524,4.740380,8.284088,3.510000,-4.924037,4.053327,6.776341,-9.503802,-4.650607],[-1.373064,-1.247794,7.972938,-1.334351,1.758091,7.234213,-0.877265,6.716641,5.239979,-0.122446]],[[7.328243,-2.820518,4.449124,-0.123091,-8.966378,9.365110,3.185073,6.286344,8.135439,1.552945],[1.616838,5.714310,3.596450,1.135545,-7.026097,8.133063,-2.184390,-0.461854,4.850082,3.700150],[-8.395607,7.007510,-0.571979,-3.811682,-8.711740,-3.789830,-4.499302,1.664947,-7.124392,9.256076],[-4.769384,-2.932939,-9.430693,-4.318062,1.831335,5.506603,-8.455223,-4.243458,-3.567612,-1.397923],[-0.281692,-3.893335,6.143993,-8.627228,9.045825,-7.847768,8.307461,-5.830343,2.955958,3.311139],[2.731170,-7.259776,1.992156,-1.901532,7.280950,-3.395150,-2.860806,2.468549,-3.149739,4.372236],[9.233980,1.608332,2.106502,-0.758221,-8.390561,8.905115,7.046385,3.229154,-2.312575,-6.825374],[6.296460,2.102141,2.966692,0.515021,9.684507,6.687098,-0.839688,0.725202,2.840798,-2.563467]]], dtype = "float64")#candidate|1607|(11, 8, 10)|const|float64
uop_1608 = relay.erf(const_1607.astype('float64')) # shape=(11, 8, 10)
func_693_call = mod.get_global_var('func_693')
func_696_call = mutated_mod.get_global_var('func_696')
const_1612 = relay.const([2,-2,-9,4,4,-7,7,-2,-6,-10,-1,-9,-1,-2,-8,1,-9,10,1,-1,-7,-8,4,-1,-9,5,5,8,4,10,-3,2,3,-1,6,-9,-10,-9,7,5,10,-5,-7,-1,-4,-1,-2,-8,-6,9,-1,-5,7,7,6,7,3,1,6,-9,10,5,4,7,2,-2,-6,6,-2,7,-5,4,-6,-6,-6,3,6,10,-3,1,-4,-8,9,6,-7,1,-7,7,-1,-8,-9,-3,-8,6,9,-7,-10,7,-1,3,4,-7,1,6,1,7,4,-7,-4,-4,-2,-7,-7,2,-7,-3,10,-2,8,-3,2,8,-3,-8,10,9,2,4,10,5,-4,-8,2,7,10,10,-3,9,3,-2,-1,5,-9,-3,7,-8,-10,-5,-8,4,-4,3,-3,3,2,-9,6,-6,-4,-6,9,-2,-10,-1,9,8,10,-1,4,8,-9,8,-4,-2,5,9,-2,5,8,-8,-3,-10,-8,7,5,7,-4,-1,3,-5,1,-4,-7,-5,-7,1,9,-5,4,-8,-5,5,2,-6,-1,-3,6,-7,8,-7,-5,5,4,1,-9,-9,4,6,1,-8,4,7,9,-5,6,-2,-2,2,-6,-4,-2,1,-6,-1,-10,1,10,-8,-4,6,4,-8,6,2,5,-6,8,4,-8,-3,1,4,4,10,4,-7,-5,-7,-6,-2,-5,-9,-10,9,7,-6,-5,-10,2,-8,-8,-9,9,6,6,-6,8,6,-8,4,6,-4,10,-2,3,-1,5,6,5,-9,9,4,3,-3,-6,6,7,-2,5,-9,2,-1,-1,10,10,9,-7,7,4,10,-7,1,-8,2,7,-4,-3,-7,-4,10,-8,-3,3,-2,-10,-8,-9,-2,2,-10,7,-9,1,-5,-2,-10,4,-3,3,-6,8,-1,-3,-3,9,5,1,6,-9,-6,-6,1,-2,-6,2,10,-6,-6,-8,-7,4,2,-5,7,9,-4,2,4,-2,8,2,1,-1,-10,-7,5,-6,-7,7,-6,-9,-1,8,6,-6,3,4,-10,2,-3,5,-10,-7,6,5,10,2,7,-7,-9,7,4,7,-4,4,-8,7,1,-7,6,9,-5,7,3,5,8,-6,-3,6,2,7,8,9,6,8,-9,-7,-10,-8,-10,-6,7,1,-5,-9,5,-8,-10,4,-7,9,9,-2,-2,-3,5,3,1], dtype = "uint8")#candidate|1612|(448,)|const|uint8
call_1611 = relay.TupleGetItem(func_693_call(relay.reshape(const_1612.astype('uint8'), [4, 8, 14]), relay.reshape(const_1612.astype('uint8'), [4, 8, 14]), ), 0)
call_1613 = relay.TupleGetItem(func_696_call(relay.reshape(const_1612.astype('uint8'), [4, 8, 14]), relay.reshape(const_1612.astype('uint8'), [4, 8, 14]), ), 0)
output = relay.Tuple([uop_1608,call_1611,const_1612,])
output2 = relay.Tuple([uop_1608,call_1613,const_1612,])
func_1619 = relay.Function([], output)
mod['func_1619'] = func_1619
mod = relay.transform.InferType()(mod)
output = func_1619()
func_1620 = relay.Function([], output)
mutated_mod['func_1620'] = func_1620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1620_call = mutated_mod.get_global_var('func_1620')
call_1628 = relay.TupleGetItem(func_1619_call(), 2)
call_1629 = relay.TupleGetItem(func_1620_call(), 2)
func_1619_call = mod.get_global_var('func_1619')
func_1620_call = mutated_mod.get_global_var('func_1620')
call_1633 = relay.TupleGetItem(func_1619_call(), 1)
call_1634 = relay.TupleGetItem(func_1620_call(), 1)
var_1660 = relay.var("var_1660", dtype = "float64", shape = (7, 2, 2))#candidate|1660|(7, 2, 2)|var|float64
bop_1661 = relay.subtract(call_1633.astype('uint32'), relay.reshape(var_1660.astype('uint32'), relay.shape_of(call_1633))) # shape=(7, 2, 2)
bop_1664 = relay.subtract(call_1634.astype('uint32'), relay.reshape(var_1660.astype('uint32'), relay.shape_of(call_1634))) # shape=(7, 2, 2)
func_998_call = mod.get_global_var('func_998')
func_1000_call = mutated_mod.get_global_var('func_1000')
call_1666 = relay.TupleGetItem(func_998_call(relay.reshape(call_1628.astype('uint8'), [448,])), 2)
call_1667 = relay.TupleGetItem(func_1000_call(relay.reshape(call_1628.astype('uint8'), [448,])), 2)
func_1317_call = mod.get_global_var('func_1317')
func_1321_call = mutated_mod.get_global_var('func_1321')
var_1674 = relay.var("var_1674", dtype = "float64", shape = (130, 6))#candidate|1674|(130, 6)|var|float64
call_1673 = relay.TupleGetItem(func_1317_call(relay.reshape(var_1674.astype('float64'), [13, 5, 12]), relay.reshape(call_1628.astype('uint8'), [448,]), ), 5)
call_1675 = relay.TupleGetItem(func_1321_call(relay.reshape(var_1674.astype('float64'), [13, 5, 12]), relay.reshape(call_1628.astype('uint8'), [448,]), ), 5)
output = relay.Tuple([call_1628,bop_1661,call_1666,call_1673,var_1674,])
output2 = relay.Tuple([call_1629,bop_1664,call_1667,call_1675,var_1674,])
func_1677 = relay.Function([var_1660,var_1674,], output)
mod['func_1677'] = func_1677
mod = relay.transform.InferType()(mod)
mutated_mod['func_1677'] = func_1677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1677_call = mutated_mod.get_global_var('func_1677')
var_1679 = relay.var("var_1679", dtype = "float64", shape = (7, 2, 2))#candidate|1679|(7, 2, 2)|var|float64
var_1680 = relay.var("var_1680", dtype = "float64", shape = (130, 6))#candidate|1680|(130, 6)|var|float64
call_1678 = func_1677_call(var_1679,var_1680,)
output = call_1678
func_1681 = relay.Function([var_1679,var_1680,], output)
mutated_mod['func_1681'] = func_1681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1620_call = mutated_mod.get_global_var('func_1620')
call_1683 = relay.TupleGetItem(func_1619_call(), 2)
call_1684 = relay.TupleGetItem(func_1620_call(), 2)
uop_1688 = relay.cosh(call_1683.astype('float32')) # shape=(448,)
uop_1690 = relay.cosh(call_1684.astype('float32')) # shape=(448,)
uop_1699 = relay.sinh(call_1683.astype('float64')) # shape=(448,)
uop_1701 = relay.sinh(call_1684.astype('float64')) # shape=(448,)
var_1704 = relay.var("var_1704", dtype = "float32", shape = (448,))#candidate|1704|(448,)|var|float32
bop_1705 = relay.bitwise_xor(uop_1688.astype('int32'), relay.reshape(var_1704.astype('int32'), relay.shape_of(uop_1688))) # shape=(448,)
bop_1708 = relay.bitwise_xor(uop_1690.astype('int32'), relay.reshape(var_1704.astype('int32'), relay.shape_of(uop_1690))) # shape=(448,)
func_1538_call = mod.get_global_var('func_1538')
func_1540_call = mutated_mod.get_global_var('func_1540')
const_1710 = relay.const([0.596773,2.537600,5.029535,-4.025581,6.865650,-4.930733,-2.623045,8.070118,6.058637,9.650599,6.270222,6.130027,6.461581,6.251668,5.560145,-8.338700,-3.911521,2.655703,-3.798567,3.450386,6.122220,0.202600,0.107420,-0.368360,8.987355,4.564825,7.505564,-7.508565,2.869268,1.468188,-7.962744,3.305542,5.258106,-7.276150,-2.695626,7.189940,-7.774777,4.802233,-6.785047,-7.021040,4.411005,-1.778464,-6.747997,-4.138815,4.128929,-8.789642,4.443567,-8.099734,-2.664450,9.497306,-5.847138,6.668443,1.536776,8.006066,-8.386065,-7.161962,5.824695,-9.851846,4.715094,2.028589,-6.563026,-7.293470,5.471238,-5.492107,-4.209772,-0.082641,4.267774,8.316921,7.772361,-1.670213,-4.161891,8.899562,1.243588,0.687474,-2.497433,9.017990,-2.181885,1.227803,7.669264,-9.708767,1.244350,-1.739822,-5.580241,1.970703,-7.553536,0.226027,-9.163254,3.172196,4.197875,-1.420139,7.528880,-3.201057,-2.247666,-3.870524,-0.141185,2.714049,5.785258,-6.855199,1.521949,1.773756,1.527481,-7.795050,-0.129366,6.460807,-3.394645,2.956253,-2.959227,6.771660,9.006088,-6.632585,-3.101778,0.179602,1.292505,5.043363,-3.193803,1.180752,-8.284884,6.532805,1.776996,-4.972196,6.447322,6.893734,6.185257,-2.092957,-2.011317,-7.257966,-7.325416,7.744010,0.919064,-2.363433,1.044951,5.975910,6.966248,-0.728267,-7.675541,-4.558230,4.045077,8.781324,-3.539400,2.180126,-4.051189,-6.799958,-1.185896,-1.436314,-5.729296,8.542621,-3.780536,0.306853,3.889120,-8.299245,-9.427800,0.560243,5.161169,6.427598,-8.968822,-6.592246,-6.990068,1.510602,-5.453560,1.618022,-7.123913,3.247443,3.777649,-3.310910,-8.294727,-8.143310,8.892923,-7.277436,-9.461753,3.574365,6.476181,9.804895,-0.125498,-8.515285,5.642567,8.176652,-5.937960,-9.804520,-8.473218,-2.446446,-3.082074,6.733978,8.314553,-9.615867,5.995453,-4.213657,2.290339,1.040954,5.368459,7.858638,3.252048,-8.013721,8.877995,5.441391,-5.152631,-9.852575,5.837538,-1.618931,-3.103499,-0.528098,-6.897671,-8.898598,8.465939,5.819677,9.737075,5.148517,-0.237010,-5.469406,-5.940011,4.951266,5.863879,0.225815,7.861907,1.770289,-7.881256,-7.186711,7.495194,6.519451,-1.522731,3.178045,3.298033,-3.106947,-2.064683,6.971989,-0.645453,1.612436,-2.613172,-8.353856,9.207043,3.216143,-8.870957,-6.553710,-8.328189,-6.866821,8.622537,-4.079535,-4.185361,-7.507980,0.638527,7.530801,-7.261585,-7.011678,-2.959945,-3.452164,-8.222366,6.216897,6.003837,-7.373726,5.696666,-7.696204,-6.857536,4.450537,2.877599,-7.386679,9.024427,3.022710,-2.016567,5.141310,-8.943714,-5.466385,0.883427,6.274127,-1.468410,0.405066,-5.436772,-8.238170,-0.158510,4.571673,1.042170,0.813001,-9.960437,-7.953801,-5.697614,9.786935,4.242692,5.142517,8.120517,-2.444552,0.606397,-2.567786,6.119623,-5.524071,-5.369054,-3.376643,8.952174,0.091583,-8.521587,3.976319,8.405921,3.442371,-5.807658,2.652024,-7.694619,5.179053,0.870360,9.521300,-0.264954,8.067585,-9.513554,-9.664731,6.855817,2.974877,4.948413,-6.320073,5.300302,-7.720405,-0.336052,0.149516,6.637014,-8.605683,-3.073069,9.674781,-1.714757,-7.669661,-6.243434,-8.437987,-6.670944,9.130877,-3.533087,-4.724028,-1.852090,-7.774852,-4.125105,6.967631,-2.395210,9.563252,4.958930,-1.139207,1.213450,-3.691613,5.132777,0.833403,-5.424209,-7.402178,-3.307979,-0.299399,8.987786,2.435236,9.671415,0.505864,7.639772,-6.946424,2.638083,-6.766894,5.403369,6.556940,7.595093,-1.147988,7.834210,7.057998,7.217381,-3.079641,-5.479746,0.920618,-7.357465,3.227486,9.567161,5.286636,-7.997482,8.507566,-5.124500,2.404652,0.140096,-6.068598,-6.177658,-8.382014,1.862240,-4.243392,-4.700842,9.127478,-7.733785,-6.536909,3.492300,-0.372823,2.133944,8.781345,-2.334918,-2.933872,2.489301,6.608478,-4.449773,2.359621,-7.353915,2.328413,6.427736,-9.572458,9.258967,8.430943,-5.537433,1.635501,4.465901,9.461542,5.403778,5.763218,-7.483950,-4.311782,-9.289589,0.230430,8.088125,-3.424592,5.362410,-7.961478,3.527169,3.107525,6.953937,-8.849939,-4.605008,9.255463,6.398452,-3.120051,6.326289,-7.783642,-8.815075,-7.920897,-9.362335,0.913091,6.629607,-0.318299,1.492956,-0.901179,-4.196789,-5.804197,6.977519,-3.462962,-6.821216,-8.998382,3.953093,-2.036643,-8.463584,0.187265,3.919974,5.665743,-5.434225,6.512719,6.888379,6.147031,-2.012002,-5.570545,0.016760,-6.120267,6.342215,6.058955,2.451344,4.791931,-5.987688,-0.037593,3.777357,5.541738,-3.901200,9.662223,-9.235349,7.893748,-0.849416,-7.571352,4.888940,-4.199606,-9.097586,2.480761,6.899643,0.706587,-3.606130,2.037775,4.227922,0.776706,8.491794,-7.495115,5.503777,0.890359,9.543522,5.890788,-5.650492,-8.135712,7.379523,5.946812,-3.952935,4.522391,-2.716452,-1.748060,6.273714,0.866964,-7.535356,-0.749105,-7.210456,-3.048833,-2.755274,-8.817151,4.386847,9.644555,-4.089992,0.218358,2.805069,0.164671,4.143336,-5.667480,-8.170254,5.011953,2.571019,-0.599144,3.921272,4.106493,6.418155,0.937084,-5.292248,5.458255,2.181987,5.055381,0.006421,-4.179168,-4.074224,1.124924,2.857342,-4.928094,1.537546,-3.968395,2.634176,-8.090972,8.783373,6.003138,-9.914159,-5.180462,0.785719,-9.704155,8.986074,9.007311,0.403063,-9.570193,9.929767,3.621202,0.413623,-6.322214,-6.814968,6.956726,-9.862005,5.272022,-7.644654,-3.310444,-9.399640,-3.336409,3.476045,8.933232,2.034492,2.515378,-7.767464,7.232411,-9.034986,-1.890841,-8.038392,-4.402957,-9.492953,0.164299,-7.835970,-9.412238,-1.243229,-6.157475,-2.459546,3.399216,2.790370,2.388932,3.440218,7.926491,-2.859048,-3.775530,-7.509417,7.979653,6.186423,1.310671,-2.886462,-3.118778,-1.339843,-4.789337,-1.713608,-9.370837,3.152221,-2.041522,-2.864854,-8.718847,3.395929,8.991132,-9.880670,7.643399,5.127809,8.103161,-6.037429,5.052602,-6.456166,-6.230103,3.735654,-6.667057,-8.234378,1.621852,-2.384685,7.053974,4.129270,3.137503,1.142762,4.104544,6.005873,-7.164295,-4.328888,3.438859,8.698290,4.709117,-4.620801,0.019899,-5.727504,-4.860713,6.341300,0.759781,-2.435956,-6.804159,3.416487,2.162551,-7.167215,-8.874055,2.386522,1.967012,8.282403,3.271287,-6.175602,-9.366193,4.224572,1.960672,-2.839137,3.885665,-9.980868,-3.657674,1.008072,-0.281983,0.954488,-6.180563,-7.973923,-0.637101,3.728885,-6.160172,-3.037002,-3.226524,3.139021,-6.125820,-4.336789,-2.867793,9.358917,-2.561867,-3.964618,-2.918510,-4.260418,-2.755693,-9.505271,-9.881811,-9.892352,3.242248,-3.714843,5.494852,-4.082986,3.173092,4.066417,3.958322,1.898218,-4.062120,-2.237541,4.516651,6.032176,-6.542001,-6.132281,1.174329,9.834093,-8.039513,1.894700,8.415256,5.454997,-7.539834,-2.812114,-8.719053,-2.159119,-7.246049,0.815977,0.367791,5.315088,5.844213,-9.624957,4.161123,3.787273,6.179758,1.114443,-6.747590,-4.071960,6.547556,-6.379497,-4.681555,-4.882825,-9.709974,-8.744769,6.615632,3.240992,-2.487912,2.791423,6.010243,6.235305,5.298753,2.075098,8.572734,6.688646,-7.224417,-8.964571,-6.605937,1.941845,1.623240,-0.877193,-2.498507,0.063503,1.657546,-4.933156,7.334887,-3.750665,-1.605172,6.225522,7.739855,-7.406087,-2.305032,-4.087421,-3.090021,2.997250,1.642555,-8.053503,6.865270,-1.979849,-7.198589,8.675275,-9.682642,7.774744,4.068802,1.277193,0.759652,9.647578,-3.859066,-6.092593,1.404004,-6.853789,6.757068,-8.283375,-0.569615,3.275331,2.350075,7.105559,-2.589137,-5.957844,2.982843,-1.578159,-5.037362,-8.010173,5.630928,9.466957,2.114875,-6.883664,-6.982858,6.739944,2.378896,6.143550,-5.196551,7.716340,7.932036,-2.386191,0.247235,9.936620,-8.554961,-3.314718,-5.509448,3.885455,-3.708517,-1.740432,-5.605394,6.115541,7.876222,7.970665,6.658618,-3.065523,-5.064298,5.274132,-6.359931,4.930067,2.186296], dtype = "float64")#candidate|1710|(780,)|const|float64
call_1709 = relay.TupleGetItem(func_1538_call(relay.reshape(const_1710.astype('float64'), [780,])), 4)
call_1711 = relay.TupleGetItem(func_1540_call(relay.reshape(const_1710.astype('float64'), [780,])), 4)
output = relay.Tuple([uop_1699,bop_1705,call_1709,const_1710,])
output2 = relay.Tuple([uop_1701,bop_1708,call_1711,const_1710,])
func_1715 = relay.Function([var_1704,], output)
mod['func_1715'] = func_1715
mod = relay.transform.InferType()(mod)
var_1716 = relay.var("var_1716", dtype = "float32", shape = (448,))#candidate|1716|(448,)|var|float32
output = func_1715(var_1716)
func_1717 = relay.Function([var_1716], output)
mutated_mod['func_1717'] = func_1717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1620_call = mutated_mod.get_global_var('func_1620')
call_1757 = relay.TupleGetItem(func_1619_call(), 1)
call_1758 = relay.TupleGetItem(func_1620_call(), 1)
output = relay.Tuple([call_1757,])
output2 = relay.Tuple([call_1758,])
func_1762 = relay.Function([], output)
mod['func_1762'] = func_1762
mod = relay.transform.InferType()(mod)
mutated_mod['func_1762'] = func_1762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1762_call = mutated_mod.get_global_var('func_1762')
call_1763 = func_1762_call()
output = call_1763
func_1764 = relay.Function([], output)
mutated_mod['func_1764'] = func_1764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1620_call = mutated_mod.get_global_var('func_1620')
call_1836 = relay.TupleGetItem(func_1619_call(), 0)
call_1837 = relay.TupleGetItem(func_1620_call(), 0)
func_1602_call = mod.get_global_var('func_1602')
func_1605_call = mutated_mod.get_global_var('func_1605')
var_1840 = relay.var("var_1840", dtype = "float64", shape = (780,))#candidate|1840|(780,)|var|float64
var_1841 = relay.var("var_1841", dtype = "float32", shape = (22, 4))#candidate|1841|(22, 4)|var|float32
call_1839 = relay.TupleGetItem(func_1602_call(relay.reshape(var_1840.astype('float64'), [780,]), relay.reshape(var_1841.astype('float32'), [88,]), ), 1)
call_1842 = relay.TupleGetItem(func_1605_call(relay.reshape(var_1840.astype('float64'), [780,]), relay.reshape(var_1841.astype('float32'), [88,]), ), 1)
func_1762_call = mod.get_global_var('func_1762')
func_1764_call = mutated_mod.get_global_var('func_1764')
call_1859 = relay.TupleGetItem(func_1762_call(), 0)
call_1860 = relay.TupleGetItem(func_1764_call(), 0)
var_1878 = relay.var("var_1878", dtype = "float64", shape = (11, 8, 10))#candidate|1878|(11, 8, 10)|var|float64
bop_1879 = relay.not_equal(call_1836.astype('bool'), relay.reshape(var_1878.astype('bool'), relay.shape_of(call_1836))) # shape=(11, 8, 10)
bop_1882 = relay.not_equal(call_1837.astype('bool'), relay.reshape(var_1878.astype('bool'), relay.shape_of(call_1837))) # shape=(11, 8, 10)
func_1350_call = mod.get_global_var('func_1350')
func_1352_call = mutated_mod.get_global_var('func_1352')
call_1886 = func_1350_call(relay.reshape(var_1841.astype('float32'), [11, 4, 2]))
call_1887 = func_1350_call(relay.reshape(var_1841.astype('float32'), [11, 4, 2]))
uop_1898 = relay.erf(call_1859.astype('float32')) # shape=(7, 2, 2)
uop_1900 = relay.erf(call_1860.astype('float32')) # shape=(7, 2, 2)
func_1317_call = mod.get_global_var('func_1317')
func_1321_call = mutated_mod.get_global_var('func_1321')
const_1906 = relay.const([[10,-1,-5,8,3,3,-8,-8],[7,-6,10,7,9,2,3,7],[9,8,-2,-5,-4,8,3,2],[-4,10,6,-3,-7,-10,-6,4],[4,9,-2,5,-5,5,9,-7],[8,6,-5,10,-6,2,9,7],[-2,1,3,8,-9,5,10,10],[9,3,6,6,4,-4,-8,6],[9,1,-5,9,4,1,-8,-4],[-8,-3,-10,8,8,7,-5,5],[-4,6,-7,-5,-1,-7,-9,5],[7,4,8,-1,4,-2,5,-10],[6,-10,3,8,-2,-10,-5,10],[5,-1,-6,9,2,-6,1,-6],[2,-3,-1,-8,5,6,4,-4],[-2,2,-7,5,-2,-8,6,1],[-2,-4,5,-8,1,10,1,-6],[9,8,-9,-7,5,6,-3,-1],[3,-10,7,-9,-3,6,5,7],[-8,-1,-10,-9,-8,-6,4,-6],[3,5,5,10,5,9,8,5],[3,-4,-8,7,8,7,-1,6],[10,-7,5,2,-5,-1,9,8],[6,4,-5,-10,-4,-4,3,-2],[3,-9,-1,8,1,9,-7,-1],[-1,7,-4,10,5,7,-7,-4],[-10,-9,-3,7,8,4,-6,-8],[-8,4,1,3,1,-7,-1,-9],[3,2,-6,-10,4,2,8,7],[-5,9,-9,6,-4,-8,-4,-4],[4,-1,-4,5,-4,9,6,-10],[-9,7,-1,7,5,-10,10,-4],[-9,-5,7,-10,6,4,5,3],[3,3,-4,-1,4,8,5,-8],[-10,-7,4,9,-7,2,-7,8],[-6,7,-1,-10,10,-9,-3,-1],[-2,9,6,-6,1,6,4,1],[5,1,-6,1,3,3,8,7],[2,6,4,-10,-9,-4,-10,-2],[-2,-3,5,4,-5,-4,-3,-5],[-8,1,-10,-8,7,1,-8,-4],[-5,9,-2,-10,4,-2,-6,9],[7,-8,5,5,10,1,8,-10],[-6,-6,4,7,-1,-4,-7,3],[-7,2,-6,3,-4,6,2,6],[-5,-8,10,6,6,8,-4,-9],[3,2,10,-7,-2,8,-9,3],[7,-2,7,-8,-1,-8,9,-6],[1,-2,-3,-7,2,-10,10,-4],[5,5,5,6,-10,-10,2,-3],[-6,-5,-4,6,6,6,1,4],[-7,9,10,7,-10,1,5,-6],[-9,-9,-1,-10,3,4,5,10],[-7,-3,4,1,10,-7,-7,5],[-4,-10,1,6,5,8,10,-3],[6,-7,7,6,1,-4,6,6]], dtype = "uint8")#candidate|1906|(56, 8)|const|uint8
call_1905 = relay.TupleGetItem(func_1317_call(relay.reshape(var_1840.astype('float64'), [13, 5, 12]), relay.reshape(const_1906.astype('uint8'), [448,]), ), 7)
call_1907 = relay.TupleGetItem(func_1321_call(relay.reshape(var_1840.astype('float64'), [13, 5, 12]), relay.reshape(const_1906.astype('uint8'), [448,]), ), 7)
uop_1908 = relay.cosh(call_1905.astype('float32')) # shape=(7, 2, 2)
uop_1910 = relay.cosh(call_1907.astype('float32')) # shape=(7, 2, 2)
func_129_call = mod.get_global_var('func_129')
func_132_call = mutated_mod.get_global_var('func_132')
call_1911 = func_129_call(relay.reshape(call_1839.astype('uint16'), [7, 2, 2]))
call_1912 = func_129_call(relay.reshape(call_1839.astype('uint16'), [7, 2, 2]))
output = relay.Tuple([call_1839,var_1840,var_1841,bop_1879,call_1886,uop_1898,const_1906,uop_1908,call_1911,])
output2 = relay.Tuple([call_1842,var_1840,var_1841,bop_1882,call_1887,uop_1900,const_1906,uop_1910,call_1912,])
func_1915 = relay.Function([var_1840,var_1841,var_1878,], output)
mod['func_1915'] = func_1915
mod = relay.transform.InferType()(mod)
mutated_mod['func_1915'] = func_1915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1915_call = mutated_mod.get_global_var('func_1915')
var_1917 = relay.var("var_1917", dtype = "float64", shape = (780,))#candidate|1917|(780,)|var|float64
var_1918 = relay.var("var_1918", dtype = "float32", shape = (22, 4))#candidate|1918|(22, 4)|var|float32
var_1919 = relay.var("var_1919", dtype = "float64", shape = (11, 8, 10))#candidate|1919|(11, 8, 10)|var|float64
call_1916 = func_1915_call(var_1917,var_1918,var_1919,)
output = call_1916
func_1920 = relay.Function([var_1917,var_1918,var_1919,], output)
mutated_mod['func_1920'] = func_1920
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1935 = relay.var("var_1935", dtype = "float32", shape = (13, 3, 4))#candidate|1935|(13, 3, 4)|var|float32
const_1936 = relay.const([[[2.624629,1.967463,7.661509,-2.858783],[0.055915,-2.539397,9.889688,-9.780888],[7.961976,-8.188622,-5.033723,8.481606]],[[-0.396627,2.943050,4.641629,-6.918355],[3.234703,-7.595550,-4.580556,6.393674],[3.600055,-8.659997,-1.357581,-1.813685]],[[7.712973,5.301538,-7.806054,6.036891],[0.822409,-7.171405,3.849098,9.701119],[-6.668263,7.546271,-8.343878,8.120163]],[[3.969062,-9.018399,-3.061023,7.782181],[5.333715,-7.860173,-9.638839,1.231813],[-4.846803,-8.370392,-1.953668,-5.926378]],[[-1.264289,9.839927,9.082275,-2.868496],[-4.069142,-9.242668,-8.066270,1.783522],[3.151468,5.506916,5.755345,1.087547]],[[-4.879922,-8.390590,1.458373,-0.917365],[-3.610513,-4.452670,-7.881814,-2.686888],[6.500652,7.092836,5.074648,1.315639]],[[-5.314877,-8.405972,9.681437,-5.835075],[6.719438,-7.501674,9.693960,-2.667963],[-8.135404,1.957480,-0.284027,-1.411314]],[[7.327047,5.743137,-6.163369,0.935432],[0.637843,-5.799118,7.906351,5.831883],[0.551080,7.239875,-2.541539,5.600114]],[[-0.457482,2.022089,-3.691473,-5.247640],[6.314532,-8.239996,-2.922298,9.810214],[6.785580,8.899515,-2.585857,-5.970649]],[[-7.786566,-3.213169,2.390696,-7.316368],[6.865612,-5.316450,9.109998,6.125375],[-9.407332,-0.438073,8.388958,8.274841]],[[3.644442,5.855472,3.784058,-8.789364],[0.003668,-7.711418,-7.740839,-4.355918],[-2.825985,8.034723,8.929564,-5.321897]],[[2.003006,-0.541857,-1.842570,6.252734],[-0.442934,1.598320,-7.128750,-2.858196],[5.526479,9.875245,1.870707,2.040518]],[[-1.319111,7.117288,7.191494,-9.544761],[-1.778124,2.086468,-8.400276,-4.827480],[2.948070,-3.222559,2.214933,9.144719]]], dtype = "float32")#candidate|1936|(13, 3, 4)|const|float32
bop_1937 = relay.divide(var_1935.astype('float32'), relay.reshape(const_1936.astype('float32'), relay.shape_of(var_1935))) # shape=(13, 3, 4)
func_1602_call = mod.get_global_var('func_1602')
func_1605_call = mutated_mod.get_global_var('func_1605')
const_1947 = relay.const([3.389733,-8.556900,-0.067404,1.505354,7.859009,-0.131529,-2.267003,-1.514897,7.743907,6.558115,4.491765,0.009352,-9.734824,-2.757419,6.467976,-7.356553,-1.455312,8.569909,1.019404,9.045917,-9.392777,-0.828767,5.767989,-5.054782,5.567438,7.563543,-2.346738,-4.084924,-0.445775,-1.561093,-1.629400,-4.004300,5.351797,5.249207,-5.775028,3.306377,-2.794431,4.782852,-7.637929,-2.498012,0.304346,-6.325467,1.718523,-8.366034,7.084941,3.138182,-9.515710,8.090448,3.320550,-8.608937,3.351086,-0.739815,-4.947215,0.298566,1.928589,-0.036825,6.877923,-3.628361,0.158609,-7.813204,3.060362,-3.639398,8.884025,8.651134,-2.950751,-8.332156,-2.487097,8.077148,-1.535280,2.057092,6.542299,-8.038333,1.125805,0.064898,-7.373156,3.595315,6.836522,8.195469,8.580337,1.400923,-9.673403,1.303229,-7.160365,3.619096,6.767490,-9.923156,-9.317835,-5.001725,4.868658,0.991676,0.797572,1.520790,-6.061615,-6.654375,3.967124,-3.017650,1.111167,-4.710925,-1.045925,2.253281,2.220532,-1.916230,-2.127831,6.939113,-1.815609,4.784971,8.527000,-5.647976,1.227252,-0.031738,-0.625526,5.826941,-7.041983,6.652586,5.943450,8.748760,-2.690617,2.276915,-4.419610,-6.760498,6.556651,-3.552863,-9.297396,-3.663976,7.019533,8.838889,2.557524,-5.374821,-6.725823,3.292408,-7.168443,-5.231262,-7.379536,2.964738,-9.703125,-7.251281,-8.738191,7.552043,2.843763,-7.347719,-0.421392,3.451505,-0.418272,8.238877,9.337532,9.731220,2.458962,3.657200,4.086505,-9.074330,-0.928118,8.090721,-1.671166,-5.498357,-0.762175,-8.958379,-8.155208,0.563769,9.392705,9.410332,9.908095,-7.008244,5.348358,-8.721434,8.822284,-1.124069,9.246618,-9.127063,-9.421346,-4.227838,5.073301,8.100259,-4.157497,6.634990,-5.865479,-5.363235,5.475488,-1.272575,-6.699359,4.517065,-9.065568,-2.430692,8.240240,7.613983,3.849041,-2.651868,-3.781210,-4.027672,-3.458187,4.786318,-4.783687,-2.345757,-0.973839,-4.029427,-2.426235,-7.473915,-4.841086,-7.243898,3.183301,5.057204,4.691389,-2.000497,-6.351887,-9.691639,-6.192971,0.091781,-7.782848,-8.631312,-1.922997,0.261726,-3.649837,1.473825,-6.780322,-5.805127,9.700340,-2.592941,1.694437,8.635735,4.999416,4.830190,5.858565,2.321778,-6.568503,-8.273658,-3.746304,6.797530,-8.949994,1.497173,3.178271,-6.839190,-4.303542,7.260782,6.052349,9.305451,8.031159,-6.175509,1.791161,-2.963142,8.099396,-2.411538,-8.454743,-8.863485,0.232745,-4.738782,5.361959,2.922520,4.067743,-2.860520,2.529103,-7.036395,-2.320544,1.076350,-1.073410,8.416830,8.380149,1.461028,-8.775418,-3.115138,-4.740578,-2.690215,7.949730,5.278713,-3.968324,-1.703930,9.667181,-9.617111,5.567052,3.042258,1.520156,-7.458801,-3.984181,5.132182,0.131497,-6.374932,-3.318625,-2.230711,5.379868,-2.955956,4.791837,1.066646,5.154110,-7.881616,-2.875846,-8.423794,-6.890558,-4.492500,6.034856,0.851788,6.192631,-9.063422,-9.543270,9.719686,-8.255375,-9.400709,-9.825386,-9.731672,3.445156,0.256393,-3.592561,-8.850405,-1.740151,2.972003,-9.551919,-9.369859,5.830211,6.527734,0.383294,0.845039,-5.132149,5.316385,4.433063,1.275472,-3.495039,-1.083395,-0.399053,-0.461805,8.364903,-5.109080,-6.489612,1.835690,9.125231,-6.635553,-9.750287,-6.554657,1.461565,7.320826,1.791357,2.324082,8.481208,-9.186107,-2.127368,-6.252501,1.651089,5.498077,-4.706887,6.576942,6.896991,-7.757323,7.260298,1.893585,4.150252,5.823518,0.885303,-4.354355,8.075507,-0.411366,2.801192,1.011159,-8.163728,5.961763,-5.853063,-9.378423,-0.629031,5.694413,-0.471331,-2.346154,7.675635,-0.753392,-6.525019,-4.014308,-1.169274,-3.311857,5.118251,-9.720680,-0.653521,-4.845618,-2.984048,8.551135,-7.172797,-3.827703,6.242386,-4.331146,-2.843159,5.022620,0.491103,-6.240109,-0.152011,-0.421580,5.401188,1.109012,-0.275184,-1.398502,8.888157,7.750247,-3.061786,-6.073514,-4.817536,-3.993483,0.965238,0.113205,4.227066,-3.803155,-1.432787,-2.938349,8.123019,-9.248908,2.261782,-3.441345,-0.110824,-4.872665,8.051571,-1.086806,7.024128,7.619987,-9.969252,-8.772769,-6.779467,6.024342,8.405646,-8.271628,-3.145937,-5.006951,4.377889,-3.121347,-5.547084,-1.140622,9.898077,6.931386,-0.275231,6.415789,4.738273,-1.173262,1.090829,6.698147,2.952703,3.928104,-2.527323,-4.218341,0.302266,0.579847,2.715294,0.026840,-4.602925,-4.893122,2.786471,0.032471,5.396049,0.757146,5.579118,7.388493,-8.942620,-0.664606,-0.960519,9.432818,5.799977,6.804272,-2.843282,6.674418,1.687437,8.768547,-0.387437,8.284808,8.444647,-9.139743,0.910126,5.331829,-5.305832,-9.367779,-6.083235,-2.138974,-9.204330,5.066127,2.031716,7.028252,-8.700872,3.980713,4.343761,-6.978213,6.222762,-8.092534,-3.179836,3.057576,6.170411,6.014656,5.798216,-4.412047,1.170938,-7.832401,-1.414957,2.940953,1.904455,7.936626,0.196290,3.782902,-9.888330,-3.996537,6.787385,-6.856812,4.319210,8.628215,4.260931,5.844029,8.690747,2.884974,7.961909,-6.908846,-2.358013,-0.925736,7.721305,-5.642572,3.426324,-5.046310,-7.956528,4.385652,-2.451655,-7.713418,-6.689136,-3.653795,-3.432838,-0.384507,-5.375178,-9.148241,-0.454248,-9.241604,-4.715567,-9.214738,8.604370,-4.084023,4.413100,-0.501350,-0.553932,7.755716,-8.600321,-5.968496,-8.262112,-6.869468,6.162196,5.849414,7.778597,4.310750,-9.211864,5.403511,-3.017955,-4.067040,-2.125731,3.250154,7.668361,8.181538,-9.023443,-5.544473,-7.475055,3.635137,3.777232,-9.576656,8.208043,-9.100572,7.177397,9.862205,-7.676583,5.414973,-7.727654,4.908605,4.558625,7.045563,1.175903,-0.303407,4.559806,6.358848,-2.027164,6.291095,-1.010616,-3.572803,-4.303774,8.464828,4.052981,6.798848,-5.679996,9.298448,4.444185,2.855766,7.755506,6.590180,-4.961546,7.502136,-9.865791,-2.336327,9.692379,-7.047988,-6.926168,-8.841034,-5.639313,-4.411085,-1.368085,-9.771905,-9.950385,-2.738251,-4.621223,-2.861816,5.394751,1.680109,6.391491,-3.353434,-8.177803,-2.747006,-3.935182,-7.874838,-8.685374,8.488572,2.400533,-9.458199,-8.838596,2.226268,-9.344868,6.823296,5.449853,8.906002,-3.758277,9.268881,-5.450761,8.332320,-3.173012,5.628395,-7.327233,-5.896919,6.544643,-5.657036,7.549858,-0.089699,0.855091,2.543320,-5.024360,4.141219,-6.000053,-5.954272,-5.059854,-1.321867,0.830010,6.950136,-7.708427,4.127404,4.641709,2.440779,9.556199,-6.672429,4.771498,-1.507331,5.742658,-5.976843,-0.853232,-0.035427,5.320662,-6.024572,4.007095,-0.246420,4.233545,5.750100,6.139316,0.247181,-1.931842,-4.573171,-5.351382,0.149101,-2.168187,3.775853,-5.775536,-2.134359,-9.806250,5.443361,-5.898814,-3.070359,0.023938,-3.902564,-9.417130,-5.477047,-9.320858,0.720197,1.247354,-9.191253,-1.462129,-4.854003,1.992919,-0.729360,5.443360,1.503150,-4.840196,7.032971,1.930628,-0.609714,-6.415802,-2.531509,5.998856,9.401563,2.096669,7.394204,2.746592,-5.158620,-7.368847,2.074562,-3.886772,9.592995,-9.255180,2.965497,0.523871,3.942079,-7.548173,-9.135974,0.110319,-0.825006,3.698541,7.467085,3.109006,0.411285,-1.852342,-5.406939,-2.271155,2.428376,-9.289042,-0.723883,1.899464,3.679276,-0.049921,5.782578,1.332226,-9.275439,8.009197,-8.504145,6.356063,-3.222163,-0.200357,4.187668,8.088889,1.286167,1.473755,6.188577,0.445556,-6.482566,-1.233654,-9.562034,6.760705,-5.187029,-7.536318,3.876038,-5.253124,7.500321,-9.545973,3.287368,-4.527262,-7.346178,2.262110,-3.278323,-6.626933,-1.958394,-4.520980,5.697886,3.032635,2.605531,-0.737796,0.730943,-5.982337,6.398136,3.600328,-2.345167,3.539567,9.673933,-7.398661,9.262350,-8.963485,7.626043,-7.195662,-6.108334,-1.531306,2.925759,7.638920,-1.142484,-4.388959,-2.896769,-1.954051,9.652774,8.416787,-1.972279,-0.359495,2.178655,9.140968,3.491391,7.402466,8.996447,9.747778,-2.527209,-2.206925,4.362466], dtype = "float64")#candidate|1947|(780,)|const|float64
var_1948 = relay.var("var_1948", dtype = "float32", shape = (88,))#candidate|1948|(88,)|var|float32
call_1946 = relay.TupleGetItem(func_1602_call(relay.reshape(const_1947.astype('float64'), [780,]), relay.reshape(var_1948.astype('float32'), [88,]), ), 1)
call_1949 = relay.TupleGetItem(func_1605_call(relay.reshape(const_1947.astype('float64'), [780,]), relay.reshape(var_1948.astype('float32'), [88,]), ), 1)
var_1951 = relay.var("var_1951", dtype = "float64", shape = (7, 2, 2))#candidate|1951|(7, 2, 2)|var|float64
bop_1952 = relay.equal(call_1946.astype('bool'), relay.reshape(var_1951.astype('bool'), relay.shape_of(call_1946))) # shape=(7, 2, 2)
bop_1955 = relay.equal(call_1949.astype('bool'), relay.reshape(var_1951.astype('bool'), relay.shape_of(call_1949))) # shape=(7, 2, 2)
func_1677_call = mod.get_global_var('func_1677')
func_1681_call = mutated_mod.get_global_var('func_1681')
call_1969 = relay.TupleGetItem(func_1677_call(relay.reshape(call_1946.astype('float64'), [7, 2, 2]), relay.reshape(const_1947.astype('float64'), [130, 6]), ), 1)
call_1970 = relay.TupleGetItem(func_1681_call(relay.reshape(call_1946.astype('float64'), [7, 2, 2]), relay.reshape(const_1947.astype('float64'), [130, 6]), ), 1)
func_188_call = mod.get_global_var('func_188')
func_191_call = mutated_mod.get_global_var('func_191')
var_1972 = relay.var("var_1972", dtype = "float32", shape = (1680,))#candidate|1972|(1680,)|var|float32
call_1971 = relay.TupleGetItem(func_188_call(relay.reshape(var_1972.astype('float32'), [12, 14, 10]), relay.reshape(call_1946.astype('uint16'), [28,]), ), 1)
call_1973 = relay.TupleGetItem(func_191_call(relay.reshape(var_1972.astype('float32'), [12, 14, 10]), relay.reshape(call_1946.astype('uint16'), [28,]), ), 1)
uop_1974 = relay.rsqrt(const_1936.astype('float32')) # shape=(13, 3, 4)
output = relay.Tuple([bop_1937,const_1947,var_1948,bop_1952,call_1969,call_1971,var_1972,uop_1974,])
output2 = relay.Tuple([bop_1937,const_1947,var_1948,bop_1955,call_1970,call_1973,var_1972,uop_1974,])
func_1976 = relay.Function([var_1935,var_1948,var_1951,var_1972,], output)
mod['func_1976'] = func_1976
mod = relay.transform.InferType()(mod)
mutated_mod['func_1976'] = func_1976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1976_call = mutated_mod.get_global_var('func_1976')
var_1978 = relay.var("var_1978", dtype = "float32", shape = (13, 3, 4))#candidate|1978|(13, 3, 4)|var|float32
var_1979 = relay.var("var_1979", dtype = "float32", shape = (88,))#candidate|1979|(88,)|var|float32
var_1980 = relay.var("var_1980", dtype = "float64", shape = (7, 2, 2))#candidate|1980|(7, 2, 2)|var|float64
var_1981 = relay.var("var_1981", dtype = "float32", shape = (1680,))#candidate|1981|(1680,)|var|float32
call_1977 = func_1976_call(var_1978,var_1979,var_1980,var_1981,)
output = call_1977
func_1982 = relay.Function([var_1978,var_1979,var_1980,var_1981,], output)
mutated_mod['func_1982'] = func_1982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1620_call = mutated_mod.get_global_var('func_1620')
call_1998 = relay.TupleGetItem(func_1619_call(), 2)
call_1999 = relay.TupleGetItem(func_1620_call(), 2)
func_1538_call = mod.get_global_var('func_1538')
func_1540_call = mutated_mod.get_global_var('func_1540')
var_2007 = relay.var("var_2007", dtype = "float64", shape = (780,))#candidate|2007|(780,)|var|float64
call_2006 = relay.TupleGetItem(func_1538_call(relay.reshape(var_2007.astype('float64'), [780,])), 4)
call_2008 = relay.TupleGetItem(func_1540_call(relay.reshape(var_2007.astype('float64'), [780,])), 4)
output = relay.Tuple([call_1998,call_2006,var_2007,])
output2 = relay.Tuple([call_1999,call_2008,var_2007,])
func_2013 = relay.Function([var_2007,], output)
mod['func_2013'] = func_2013
mod = relay.transform.InferType()(mod)
mutated_mod['func_2013'] = func_2013
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2014 = relay.var("var_2014", dtype = "float64", shape = (780,))#candidate|2014|(780,)|var|float64
func_2013_call = mutated_mod.get_global_var('func_2013')
call_2015 = func_2013_call(var_2014)
output = call_2015
func_2016 = relay.Function([var_2014], output)
mutated_mod['func_2016'] = func_2016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1620_call = mutated_mod.get_global_var('func_1620')
call_2062 = relay.TupleGetItem(func_1619_call(), 1)
call_2063 = relay.TupleGetItem(func_1620_call(), 1)
func_1602_call = mod.get_global_var('func_1602')
func_1605_call = mutated_mod.get_global_var('func_1605')
const_2070 = relay.const([-8.918581,6.203016,-1.249070,7.198477,-1.694678,5.734278,4.880752,-7.700516,7.163099,7.987978,5.861363,3.108366,-2.668880,-6.240763,-4.228259,-2.617301,7.485256,-3.255797,6.502650,-8.351678,4.239987,7.179480,7.412958,9.788518,-2.353954,5.836938,8.572823,-8.806069,-7.263467,8.566585,8.012340,6.711546,-0.086641,-6.262620,-7.196041,4.005763,6.573538,-0.510233,9.692357,9.760505,-9.099125,9.769012,1.946006,-3.483802,-5.085530,-6.773923,5.908840,-7.547860,0.089247,7.908691,3.708521,-8.385759,1.135288,6.558602,-8.406368,-2.419177,8.670102,-5.273898,-2.857559,-2.100970,1.399044,-9.771501,8.341687,-1.400770,1.552908,-6.208590,-0.300688,6.575489,2.958082,-1.614494,5.960654,5.601778,-2.041949,8.961985,-6.616242,4.933465,-3.153465,-0.420183,-5.502607,8.015140,-7.701038,-1.303556,-7.114504,9.625271,-0.050263,5.827075,-8.349967,-2.524690,-6.225530,7.203609,-8.888246,-9.057269,-9.670759,-1.137788,2.186709,5.514636,4.734327,3.477000,9.578167,7.871036,-5.551687,-0.162173,6.582811,-0.697002,-8.434404,-4.118919,-6.221106,-3.632355,4.008767,-5.614027,-2.601105,1.115138,4.321781,1.848264,5.018621,4.189107,7.060491,-6.216824,-0.885549,-8.085611,1.613030,2.538094,-6.313358,-6.829556,-6.846383,-0.217747,-7.074789,-7.669019,-4.670233,5.348344,8.938502,-6.212292,-9.510903,1.278511,9.780073,1.985931,8.375512,-1.739650,-8.432922,1.537979,1.600858,0.717403,6.586956,-8.493055,8.407434,6.702059,-1.131561,7.392083,6.398847,2.660988,9.034844,9.107811,-7.850265,-5.368563,-7.103448,8.063362,9.277971,-5.837416,5.232552,6.160822,-3.707419,8.388139,-5.319066,6.100720,8.625447,-0.456415,7.146364,9.236331,5.674243,2.925950,-1.347525,-6.361392,1.457585,-7.654382,3.273217,-1.146258,4.567679,-5.119431,-7.383693,0.598029,-2.975901,-3.413502,5.952571,8.402490,8.284615,-6.086548,-9.336890,-2.202851,4.545798,-2.418593,-3.189746,-9.246469,-6.426455,4.023744,-0.239058,-9.487161,-6.559082,2.228214,5.254477,-7.558005,1.008239,-6.638736,5.329035,0.980845,3.223675,5.927126,-5.342588,7.381743,-7.103335,-6.752095,4.449394,-1.211736,4.468844,6.411271,-4.912352,-1.507275,5.093309,8.084645,4.113321,3.695665,-4.867288,-9.918358,3.567264,8.235739,-1.902188,-6.380719,9.191214,3.601453,-7.219354,5.917533,-9.206789,-5.918912,-0.790163,4.649033,3.376825,-8.975365,8.264134,-0.515893,7.481906,7.748242,6.068315,8.557302,-2.799267,-1.748286,-8.402540,7.224992,0.285678,-1.833625,-1.720360,6.684442,-5.782940,1.398241,-3.611378,-7.096956,-3.578597,7.914493,-7.597204,-4.120991,4.636888,3.882734,-2.727095,-9.152684,9.641356,0.113397,-7.702658,5.059600,-7.936231,4.408334,-1.121911,-9.490362,7.930944,3.910372,7.152007,-4.532548,-7.085752,-7.581722,-8.599455,-8.473423,4.012157,3.853563,-0.154649,-2.700006,-9.163336,2.356436,-7.618469,1.208546,3.421040,0.194874,-8.813954,0.051357,6.848006,2.507900,-4.361454,7.563331,8.668051,-6.553812,2.899074,-0.264651,-2.798392,8.692786,-4.800162,-6.824351,9.608530,-4.222695,7.751836,-2.055139,4.532090,-4.454234,3.309362,5.322468,8.616257,-0.981020,-8.946709,-4.418507,-2.819990,5.476099,-2.660507,-5.470724,4.393695,3.956703,-7.558636,-3.472338,6.187265,7.733951,-0.488174,5.274938,-0.336429,0.887460,-6.440845,9.904269,0.932365,0.562027,-5.646876,9.469812,-6.620024,-2.499470,-1.662766,-7.148199,-6.311012,-6.339340,-9.596267,-3.128791,1.985588,-4.096125,1.375437,-9.121833,-1.848039,-2.620568,2.457617,1.335138,-6.881968,-9.806161,-5.938970,-5.234388,-0.666313,9.725281,-2.959040,-0.167217,4.272885,3.725591,-4.545485,9.902411,-1.891506,-3.463165,6.253751,4.630730,9.862717,-2.909021,9.419671,-2.852738,1.437611,-6.559826,2.910865,4.925817,6.132501,0.985058,-1.153108,0.515774,-9.125613,-1.315676,7.645334,5.519446,5.183343,-3.117807,-4.685335,9.251530,-8.221896,7.772411,-0.487570,9.521908,-3.650326,0.155754,3.103813,8.664565,-6.482885,-8.677293,2.032579,7.970595,1.121948,8.377286,-3.695243,-5.213864,6.038449,4.437067,-9.100214,2.258141,0.178946,-8.565514,2.785150,9.589127,5.514611,0.063192,0.575357,-1.792499,-7.685061,7.637329,-8.979958,-8.058204,4.004809,1.055036,-4.233051,-0.554657,8.552528,-9.769681,-9.158003,8.782040,7.958118,6.543990,5.357074,-8.226141,6.194593,-3.197139,7.207693,1.611906,-5.190553,-9.652423,-0.844679,7.031415,3.674021,-8.570157,0.811188,-4.539864,8.452242,1.652057,9.124378,-3.169458,3.900852,-1.357532,1.702259,-9.880166,-7.633766,-6.050964,8.280675,-1.445581,-0.632487,6.199409,-0.213982,-5.541173,0.598301,-3.496867,6.779087,1.147370,-8.505633,8.120774,-7.488297,0.166725,3.432468,8.499342,0.146964,1.125680,-3.263531,1.131865,-2.842674,-4.397410,-7.789620,-2.538672,-7.738598,-5.039971,6.594938,-4.180974,1.374853,-6.201766,-9.872010,-0.677821,-8.183457,6.147523,-4.660242,2.099711,-8.378622,-6.784540,0.304152,0.231817,-2.680261,-8.060719,6.997202,4.095744,-0.090995,9.967819,6.345318,9.591302,-7.205163,1.357607,6.797415,8.152404,-8.583238,-1.858025,8.204348,4.993165,-6.885495,8.492566,0.426709,-9.821391,9.225336,-0.018996,2.356746,-6.880308,-4.454952,-5.767069,-2.061803,3.054451,2.657220,-2.394812,2.501302,8.791512,4.808539,-0.144527,0.228438,5.831873,-5.928018,-6.153206,9.490110,7.543505,-0.860818,2.415599,-6.225655,3.270255,0.030934,-2.909913,-9.269600,-4.244938,-9.746614,-3.119351,1.931885,-2.582851,9.655093,-7.110296,6.157736,-2.161781,6.516925,3.746588,-2.385927,-5.002845,-1.340138,3.842737,-6.397686,6.865763,-7.407062,-1.413121,7.303975,5.542970,9.269184,0.813304,-0.010167,-3.522324,5.926818,3.850459,1.814616,4.299962,-9.636229,-4.601541,-5.749062,9.485500,2.364265,4.114408,4.042749,1.808478,-9.335654,1.087200,-4.710792,-9.352602,8.574631,1.059438,8.677790,8.374053,0.409917,-1.983693,5.334408,-0.279265,-2.373786,4.816683,0.859699,-0.674952,8.143694,-5.735393,-0.225483,1.247918,-0.744406,-0.411582,-8.286182,1.227170,5.328398,7.789774,1.206741,5.389440,5.171779,6.844191,5.949155,-7.185419,-4.489721,-4.669319,-8.834794,-8.237247,-5.389999,-0.019464,-9.131148,4.661102,-8.599753,-9.133534,-5.793724,1.785192,-0.649045,-4.853442,-1.733149,-1.238412,3.046939,3.254413,4.742100,-4.331780,-1.748764,-7.403695,-6.887960,-3.122926,-2.562293,5.472567,-1.455861,4.486929,4.806447,-5.396665,-7.233905,-3.940288,6.488580,7.311968,-4.850528,8.416110,2.151954,2.005365,6.302190,-9.969765,5.760483,-4.434340,-5.059583,-8.069404,-1.673244,3.480083,-1.057790,-9.287121,-0.316944,-5.562506,-6.982433,5.953171,7.373408,4.981021,9.120329,-1.102460,6.329957,-4.888167,-3.400472,-7.561536,-6.874691,-1.838793,9.982851,-9.105383,-6.784629,-5.636100,-0.982766,-5.545806,6.258011,-6.603751,9.700870,7.506527,-8.509093,-6.092686,-8.748680,9.853042,1.113867,7.186785,-8.585832,-2.874692,-7.437032,7.126318,-0.190744,-4.273093,-5.714768,-9.481207,-5.604165,-8.794219,-8.604197,5.677690,5.794111,4.089138,-4.692360,-0.824592,-7.735763,-0.157474,3.421874,-8.773659,1.062776,9.601863,0.623749,-0.388721,6.175173,-8.711801,7.075532,1.208065,-8.855733,2.984338,9.202737,-3.600298,-7.008153,7.937177,-5.765335,-3.975785,-9.035528,7.104248,4.293220,1.598083,6.281984,-3.563286,-6.943049,8.152755,-4.661940,4.920848,-0.539439,-3.603982,-7.544014,1.105628,8.074014,3.490497,6.847794,5.199335,-0.293026,-5.261795,6.056469,-4.824699,-4.815781,-9.851428,7.178906,-4.334701,8.813031,-1.745668,-4.443558,7.200340,4.706492,-2.022102,9.688980,-8.628430,-4.486288,6.438262,7.347952,5.328854,-6.331331,6.159495,-5.991443,7.005199,-7.455013,9.619350,4.528248,-4.674786,1.583990,-6.712567,-8.576907,-0.332763,2.836890,-9.761676,-3.677949,-0.943379,-5.591551,-8.529846,0.616839,-3.588532], dtype = "float64")#candidate|2070|(780,)|const|float64
const_2071 = relay.const([-2.079546,-0.185403,-7.436362,1.770537,1.098756,1.495272,4.695939,8.799503,-3.382318,-6.256668,8.574182,2.058231,7.325024,-1.443604,4.575523,6.699845,6.325452,-5.808626,-8.618731,3.205933,6.623270,-2.478677,-3.798083,-6.652309,8.141378,1.721713,3.619724,-2.597641,6.726707,-0.814745,-9.665066,-0.673927,1.128054,0.743995,-7.557749,9.354696,1.327245,3.444797,4.101176,-1.800476,-6.270809,-2.044731,-1.332581,-9.567420,9.754240,2.629942,4.511523,-6.320227,-1.044899,-5.915559,-4.518737,-5.166846,-6.805289,2.961226,-0.713664,-1.877260,-4.119785,-7.172200,4.126517,-6.308825,1.976306,-3.003267,3.779613,3.043153,-2.205560,0.803526,6.608192,3.575612,9.127889,-7.697117,-3.834243,-4.860366,6.431025,-5.950729,-1.143608,3.020961,-8.239213,-6.204077,-7.657157,1.824760,2.178499,9.701980,-7.055944,-9.956220,-2.996517,1.714916,-9.352810,1.809804], dtype = "float32")#candidate|2071|(88,)|const|float32
call_2069 = relay.TupleGetItem(func_1602_call(relay.reshape(const_2070.astype('float64'), [780,]), relay.reshape(const_2071.astype('float32'), [88,]), ), 6)
call_2072 = relay.TupleGetItem(func_1605_call(relay.reshape(const_2070.astype('float64'), [780,]), relay.reshape(const_2071.astype('float32'), [88,]), ), 6)
output = relay.Tuple([call_2062,call_2069,const_2070,const_2071,])
output2 = relay.Tuple([call_2063,call_2072,const_2070,const_2071,])
func_2073 = relay.Function([], output)
mod['func_2073'] = func_2073
mod = relay.transform.InferType()(mod)
output = func_2073()
func_2074 = relay.Function([], output)
mutated_mod['func_2074'] = func_2074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1620_call = mutated_mod.get_global_var('func_1620')
call_2075 = relay.TupleGetItem(func_1619_call(), 1)
call_2076 = relay.TupleGetItem(func_1620_call(), 1)
func_1350_call = mod.get_global_var('func_1350')
func_1352_call = mutated_mod.get_global_var('func_1352')
const_2078 = relay.const([[5.901676,-0.631481,5.069451,5.872828],[-1.041896,3.972026,-2.933799,5.613446],[-2.474249,3.036279,-0.763062,3.075478],[5.893112,-9.762155,-0.048450,-5.147748],[-2.717069,2.725369,7.433222,3.387556],[3.969503,4.587904,-2.943421,-8.105649],[2.849934,3.509995,1.974312,-4.111516],[-6.483535,9.859957,-5.563893,-3.465306],[-4.603089,-0.831341,-5.870821,8.496000],[7.764137,8.431034,0.403602,-3.215140],[1.347265,-1.699105,-5.342815,3.092583],[-2.173111,1.946172,1.158619,7.635360],[7.278819,9.253901,1.552883,3.520545],[6.047198,-8.846080,-9.308712,5.692400],[0.011926,0.683971,8.092999,-3.778635],[9.909040,-2.803366,9.943980,-2.181480],[9.671298,0.372694,3.116348,4.143903],[7.145416,8.460339,-6.615874,-2.600176],[1.088477,-0.394128,-4.464669,-0.746918],[-8.171087,-9.369889,-3.821846,0.766085],[-4.590966,-5.352757,4.174989,-6.103178],[0.701571,9.723106,7.003106,8.541533]], dtype = "float32")#candidate|2078|(22, 4)|const|float32
call_2077 = func_1350_call(relay.reshape(const_2078.astype('float32'), [11, 4, 2]))
call_2079 = func_1350_call(relay.reshape(const_2078.astype('float32'), [11, 4, 2]))
func_1317_call = mod.get_global_var('func_1317')
func_1321_call = mutated_mod.get_global_var('func_1321')
var_2082 = relay.var("var_2082", dtype = "float64", shape = (780,))#candidate|2082|(780,)|var|float64
var_2083 = relay.var("var_2083", dtype = "uint8", shape = (448,))#candidate|2083|(448,)|var|uint8
call_2081 = relay.TupleGetItem(func_1317_call(relay.reshape(var_2082.astype('float64'), [13, 5, 12]), relay.reshape(var_2083.astype('uint8'), [448,]), ), 4)
call_2084 = relay.TupleGetItem(func_1321_call(relay.reshape(var_2082.astype('float64'), [13, 5, 12]), relay.reshape(var_2083.astype('uint8'), [448,]), ), 4)
func_1762_call = mod.get_global_var('func_1762')
func_1764_call = mutated_mod.get_global_var('func_1764')
call_2088 = relay.TupleGetItem(func_1762_call(), 0)
call_2089 = relay.TupleGetItem(func_1764_call(), 0)
func_1619_call = mod.get_global_var('func_1619')
func_1620_call = mutated_mod.get_global_var('func_1620')
call_2114 = relay.TupleGetItem(func_1619_call(), 0)
call_2115 = relay.TupleGetItem(func_1620_call(), 0)
func_188_call = mod.get_global_var('func_188')
func_191_call = mutated_mod.get_global_var('func_191')
const_2117 = relay.const([-4.497212,6.327762,8.434812,6.532890,-8.073885,2.194461,9.645472,6.401944,-4.625557,3.995622,-2.198413,0.743425,-2.315898,2.091288,-7.774888,-5.142911,8.198283,-6.001351,-4.800938,-4.432700,-2.082673,1.409326,-9.723361,-8.041967,7.067674,8.661473,-3.562797,2.000730,9.438588,-7.783426,3.528763,-9.302150,-3.602522,-1.619315,-8.164855,-5.892007,-9.328025,5.305059,-6.156534,-1.534923,6.387139,-5.633720,-0.999101,9.826209,-4.653481,4.123491,-3.398532,-4.467082,-3.918088,1.938871,3.643261,7.400146,-2.730830,3.862277,-3.584202,-7.118895,0.172021,5.002497,-8.231721,-5.765642,-2.996105,6.362552,2.492208,-0.712393,-0.393524,5.872478,0.160897,8.621420,0.593503,-7.050589,-0.447675,8.621154,2.721656,-5.856462,1.431889,6.727164,-8.970926,0.274717,-7.828405,-6.064215,8.557500,2.147013,-7.086722,-4.903168,3.018895,-5.545473,-3.737104,9.761670,-2.311261,4.633278,-8.144439,-3.967984,6.640430,4.686455,3.309227,-4.235937,1.920834,1.182598,2.611208,1.888965,-7.178993,-9.678201,3.393968,0.654099,8.202468,-2.183950,1.001013,6.890289,-8.500730,-3.252624,-7.421540,-9.177039,-9.648811,1.243789,-3.374049,-0.123285,-6.153652,3.247829,0.502301,-2.831126,8.939858,-4.900713,1.727897,-2.425940,-6.631905,3.435855,5.912893,-9.920220,1.165614,0.099073,-0.621460,-0.738949,4.060655,4.951046,-9.378146,0.848039,-6.648226,-7.834192,6.613989,7.338009,-4.768494,-8.666173,-4.491181,4.998513,2.644964,4.941793,4.929365,-0.480875,6.963320,3.817876,3.914218,-9.757602,-1.066899,8.159868,8.501004,-8.977197,0.252504,0.744512,0.240114,1.765839,-3.746302,7.114070,6.639596,-9.967537,5.291767,-6.797044,-4.395960,-7.882693,-7.798384,4.660390,-8.900749,9.228348,-2.536628,1.907563,2.202836,-5.672326,-1.628878,7.393660,-7.192976,-7.275379,6.891064,-3.356888,0.246323,5.403700,3.921914,4.817170,-0.855051,5.365909,-2.641205,-8.270143,-0.533840,5.344975,-6.173118,-9.481817,-7.613097,-6.194216,6.013768,6.540843,9.062748,-0.155690,1.295597,-6.802923,-3.370572,1.202100,9.453781,0.607266,-9.884126,-4.986887,9.764573,2.856844,4.971039,-6.924407,4.489208,-1.716689,-7.401613,9.940756,-0.864349,6.499734,1.716568,8.295610,-2.762721,-0.638624,7.885437,-7.934177,3.681747,-7.637435,4.323254,-5.116542,5.185226,-2.053759,2.199640,7.253884,4.723587,2.286445,0.692628,7.829547,4.723616,7.446945,-7.218268,1.877327,3.145228,3.300978,-6.679443,1.857785,-0.521025,5.498868,6.581740,8.245785,6.106633,-6.798265,-9.741493,0.980958,4.582671,-0.835080,-6.338575,-5.911427,-3.818997,-6.484151,6.419691,-2.299399,3.590836,6.717695,-0.489337,-0.858094,2.454835,0.433203,-1.189322,4.771703,2.185867,-8.026869,-1.752177,7.253650,-2.419689,3.669826,-1.661237,6.164602,-7.276060,-1.430977,5.832660,-3.400655,8.220664,-8.711875,-1.821047,-7.975333,-6.538204,7.740437,4.661587,1.910208,9.952997,2.564874,-6.372591,7.608183,5.014274,6.269049,-6.859865,-1.507769,4.780587,-6.689214,-4.275023,3.757822,7.655818,4.243073,-7.749705,-0.427995,-3.823257,3.320139,-6.542943,6.686120,-6.012932,-9.549582,-2.711866,5.691200,-6.156441,-1.658490,-2.228412,8.344195,-9.099578,-5.307839,1.427212,-8.823876,-5.330173,-7.840192,2.531113,-0.060536,-5.909248,-5.513102,1.296035,9.528231,6.317512,2.220106,2.292576,2.446665,0.109413,-6.955975,-6.412952,-9.102427,-7.508538,4.347920,-1.078014,-4.162363,0.877409,-4.503872,-9.346338,-5.890058,7.917687,0.123418,-8.843176,-4.644579,-1.295596,-5.156537,-4.957911,0.034801,8.860488,-1.991253,-3.760265,-7.635641,7.605409,0.106307,-5.864649,-8.304391,6.616963,2.629233,-7.206812,4.829201,-7.525571,-8.053309,7.349133,-9.409970,-7.668819,-4.146469,3.404955,-7.077743,4.922807,-6.210985,7.357048,5.689522,-1.293175,-6.591020,8.874333,7.824765,9.884533,-3.960264,3.850143,0.979355,8.038187,-4.320091,8.639608,0.834450,-4.582837,-5.012304,-6.651103,-9.358367,-1.790771,-5.996102,3.229093,-0.678402,6.896430,5.037891,6.119880,-4.411555,-5.815331,9.088429,-7.849741,5.489467,-2.663607,-4.632456,7.343580,8.234071,-6.305365,0.117078,3.020643,-1.118030,-2.817081,9.265797,5.974696,-9.904914,-0.661268,0.478871,0.193458,-8.260584,-3.475344,-1.331792,4.077404,-3.342750,7.699467,3.448258,5.441260,2.281835,8.952414,8.080258,7.519145,4.662317,9.652432,-2.900399,3.163854,-3.334716,4.003291,5.919510,-3.402520,-9.673620,-1.273743,-7.576782,-0.626521,6.060604,-0.497131,-1.035932,3.462441,2.671911,-9.411010,1.963862,-8.140241,3.499559,-4.804862,4.838737,-2.352523,1.903527,3.870722,-2.501158,0.660721,-5.399917,-9.057207,6.914183,-2.814605,-9.811361,-2.943428,-5.047565,6.380873,2.764196,-3.262025,-4.832662,-9.944677,9.123945,6.379912,6.786224,-7.870133,-1.550664,-7.934595,-7.187129,9.542601,4.269668,-4.244792,-9.752179,-1.339797,3.822640,-7.242143,4.986622,2.104684,2.075256,2.745323,-3.038418,-4.304305,-8.949673,-5.232317,7.581549,-8.476954,-6.098169,-2.078147,-7.942585,-9.509294,2.037260,-3.327954,8.473620,-6.321964,-3.314897,-6.453157,6.857767,-4.095813,4.982723,-5.138201,-8.899844,-6.767405,4.046500,6.919230,8.498511,6.571009,5.446459,3.687018,-3.331478,0.921709,1.356225,2.467267,-8.931971,1.855392,-5.602302,-4.750311,-5.354788,4.123699,7.837599,9.233033,-5.715693,6.974796,-9.484054,8.177407,-9.038432,-1.294976,-5.517152,-6.088200,8.405584,-7.840313,1.916527,-0.327717,8.483574,5.936315,-4.535791,2.325383,-0.674259,-1.986316,-2.134035,7.458147,-2.287457,-5.601917,9.604745,7.279166,-2.692511,-6.593362,-4.517927,7.647353,9.553589,-8.893162,-5.070047,-4.448216,6.041944,6.778139,-2.313835,-0.248837,-4.232939,2.607157,-3.838364,-3.222982,9.183775,-1.149186,7.799181,5.343893,1.620247,8.002154,-3.074847,-7.133967,-6.672532,6.694235,-5.425568,-0.919554,-9.093082,-3.768127,-6.282752,-5.879897,4.427564,-1.297015,-9.003636,6.840642,5.019816,7.481772,5.778135,8.345952,-2.682651,-9.671171,7.615257,6.337338,1.016532,-2.327917,3.540049,3.156181,4.184317,9.965526,2.822043,8.123032,2.916071,-5.131926,-5.693828,7.706542,-1.357534,5.881857,-7.253047,-7.090365,-8.016209,9.636274,0.764877,8.511356,-1.727969,-9.573695,4.925666,2.985461,7.626807,3.588496,8.201768,-7.627119,8.893853,8.131044,-3.639055,9.563780,-4.470956,-9.106307,9.229108,0.774121,9.861381,6.420755,1.787215,8.139864,1.653001,1.912130,2.810407,-0.460736,2.953136,-8.220924,8.213268,5.691225,4.138978,8.941241,1.303451,-5.738840,4.014530,1.527033,-0.634081,2.498429,-5.069040,2.570515,-7.041762,-2.665554,4.403463,3.876035,-9.097416,3.635663,7.973538,-1.513541,1.476467,3.158096,-3.191293,9.571357,3.327410,-2.610155,5.970579,-1.847863,-0.271408,-2.541312,0.216163,-0.461536,-0.723931,4.572753,6.315283,-5.111100,1.242310,5.988157,-1.140876,-0.968693,8.732310,9.586340,-9.830153,-9.330760,-4.555575,8.043000,-5.147848,2.963413,9.400596,-8.627469,-2.116272,2.495037,-7.442975,-3.326472,1.183482,7.195278,7.436425,-2.266503,-9.243248,-1.246515,7.934562,-2.575629,-8.817698,-2.479697,5.088021,-3.332562,1.667588,1.219314,-2.018121,-9.677025,-4.962243,-3.060563,3.949553,-3.218829,7.252913,-0.395822,-3.331101,-4.187075,8.793163,-6.590380,-3.891429,-2.597583,-3.157166,0.916688,4.213739,-1.226657,7.522602,-3.064080,9.254725,-1.004989,9.090033,3.797162,-5.393907,-2.776257,-2.241291,-6.886192,7.817298,-0.088197,-0.376620,-6.657484,-0.216974,9.161599,1.385762,-4.143300,-6.449013,5.954744,8.508372,5.878091,8.344350,7.297494,-9.824495,-0.375351,9.944582,5.215020,-4.137730,3.160991,2.720034,3.120853,-6.965037,9.419895,-6.757691,2.589050,-5.286710,7.608063,-8.754992,2.910488,-7.181290,9.165517,8.315176,6.028900,-6.371889,-9.811454,-4.967169,2.071934,3.799738,3.910759,9.115689,0.593893,-3.278906,3.080657,-8.904235,1.193356,-0.732842,-7.501387,-8.823924,-5.365061,-9.962915,-1.735668,-9.894939,-4.371645,-8.854054,7.839192,-1.447222,4.934077,-3.008310,5.557200,-0.828187,4.548084,9.649929,-5.174408,-4.747124,4.161012,4.365679,6.738372,9.448893,8.167239,3.111237,5.185355,6.654262,-8.644594,-0.688353,-4.055578,7.217499,0.226949,8.072940,-1.947859,-5.643672,2.883385,8.274825,6.623695,-2.159533,-0.836924,-0.183428,0.188014,7.799221,9.986811,4.178969,-8.374801,9.333047,-7.154974,2.514730,-2.652536,-1.575205,0.454804,-1.801575,-0.811594,5.524326,3.344282,-0.713112,1.782165,-6.881348,1.931063,5.283325,-9.401845,-7.606827,9.662808,2.146373,8.010177,3.849711,3.758507,-6.226959,-2.804004,3.333270,5.611836,-9.923252,6.028807,9.326586,5.766816,-5.094759,4.757732,-6.375530,-7.166490,2.430858,4.817861,-2.340174,-1.889774,-0.897640,-6.483330,-3.974415,2.331559,-1.542222,-1.148515,-4.146439,-5.434302,6.571530,9.360282,3.206769,-6.962476,1.836743,0.132012,-6.391198,-4.080028,4.579093,-2.637270,-8.159081,-8.160221,-5.152430,-3.528012,-8.678567,6.503427,2.743651,3.179892,-7.493571,1.757569,5.169522,2.997520,-6.462245,-2.852305,-9.208743,-2.495577,5.117308,-8.779255,8.120989,-4.681687,4.240610,6.940744,-5.920373,6.270761,-3.125638,-4.977052,-3.284057,-9.083085,-8.988200,-0.901918,2.957471,6.141465,1.143456,9.974788,4.932722,3.766555,7.823113,9.066396,1.178737,6.401407,7.925106,-8.077489,6.814577,-1.576523,0.014841,7.588178,3.475367,4.905089,-4.087285,7.455878,-7.431038,-9.641668,-0.134821,2.526691,8.208097,6.478433,3.795243,-5.654504,-3.577481,-6.652975,9.695752,4.726123,-1.391188,7.509766,5.287508,-3.795084,1.482501,9.361087,-3.115980,-4.133401,5.053038,-9.523472,2.136313,-3.279909,-0.037095,7.910682,-4.247581,-2.772611,-3.555403,3.618265,7.789710,0.072011,-0.849895,-3.751701,-7.749640,-0.409616,-8.073204,-8.569381,5.812559,-9.022036,0.286127,9.944428,-5.101899,-7.782621,-8.934624,-0.872071,-6.920185,-9.974994,-6.514639,3.060574,8.170344,1.625022,0.149998,2.243057,-8.473275,-5.726959,-8.727042,3.644329,8.397560,6.236098,5.339035,2.561531,1.941057,-8.237302,-8.451615,-2.565409,-6.552131,-4.280479,5.143693,-5.691425,6.409017,6.992559,5.258469,-0.887418,1.163080,-5.484672,1.155489,-2.672766,2.293266,-3.627642,-3.142320,-8.366473,-4.812716,-2.110928,-2.735224,7.286646,0.840579,9.381454,8.348385,-9.996903,0.434578,9.674015,-2.854208,-7.731978,0.281376,-3.829594,7.616310,-3.080584,5.000439,-6.720039,3.737861,1.759447,-9.961772,4.023592,-7.528246,-2.612878,-5.732430,-4.747484,2.063958,2.868940,0.228907,8.042413,-8.882998,2.712450,-6.598745,4.753669,2.923879,1.472769,-6.924908,-0.077995,-6.159333,-9.609074,-0.912682,1.472930,2.673386,-8.640172,-4.737690,-9.990634,5.404582,-9.428627,2.593600,-6.374479,-7.738924,-4.040869,-0.130854,7.779770,-7.427368,-1.273087,-6.391125,-4.008793,-8.056201,3.160673,-7.071175,0.810958,8.648829,-1.580069,2.010370,4.498306,-5.905077,-1.250115,-7.816089,7.616678,-2.630979,-6.800606,7.547247,-1.572086,5.985346,1.637165,3.799525,-0.768766,-6.765222,3.853391,5.199727,-4.654837,2.108709,-9.899107,-6.466561,-7.462635,2.546428,-8.999928,9.258650,-9.064612,-1.125556,2.126905,-8.728924,-3.851858,-9.417064,4.009661,-1.242249,1.271798,-3.011390,-0.563848,7.063739,7.071454,4.481217,4.897243,2.739716,4.628943,6.241471,9.785424,-0.713281,2.227745,-8.958107,-2.968646,-2.138903,-7.670479,-0.464394,7.421035,8.918886,-8.551586,-4.914325,6.972342,-8.232772,2.060341,6.493557,0.811234,-4.178468,-6.818237,5.972100,-8.570241,-9.588886,1.329129,1.168017,-2.984322,9.188601,4.451747,0.796135,4.489664,1.797863,0.121192,-7.877870,2.902951,0.255636,1.038351,-3.884583,-8.005219,-3.626159,0.713415,9.790312,-3.658918,9.200638,-7.843991,-7.442848,-1.169453,2.270628,6.138760,-9.633884,-6.202806,-1.991993,6.546094,1.466662,-3.952480,8.634829,1.525705,2.043521,9.753426,5.501722,7.918684,-6.472807,-5.414380,-2.683089,8.138594,-5.454753,-6.044924,5.736104,6.122740,-1.866868,-8.654080,-8.247813,-8.070674,4.501092,-5.740144,7.731941,-7.035072,1.716147,0.123316,-0.534094,-7.306845,8.848978,-4.554380,-1.500896,5.110595,2.797390,-9.805266,-5.739650,4.839634,1.305796,-9.987635,-1.356881,-4.414638,7.394155,3.262078,-8.262404,-0.471866,-8.072474,-9.665134,6.252538,6.402020,9.242401,-6.807644,-7.651819,5.207392,4.941443,5.470873,-0.187297,5.682434,2.152453,-5.201756,-2.058203,9.690199,1.794271,-2.933408,-9.821192,6.890604,5.740063,7.805432,0.063372,6.980321,-6.924294,-0.419052,-3.531436,7.194902,-5.699273,9.468599,-2.069606,-8.295488,-9.488266,-8.299182,-7.320378,-5.731970,9.337598,-2.924496,-1.036644,4.469534,-1.138419,-7.471378,6.129157,-2.504191,6.720066,6.197578,7.288694,7.565560,-7.645297,-9.905340,6.527180,-2.203348,-6.653623,4.396422,5.766830,2.187813,5.926287,-5.008616,2.263640,-2.133826,7.552141,3.001266,6.507201,-0.925585,-3.130412,9.729328,-9.298544,8.335499,-2.218256,4.836112,6.361140,8.988424,-8.685409,-6.144659,-8.563216,-8.481091,-1.583226,-0.698640,-6.870935,8.141035,9.930947,-7.362020,-1.746701,-8.526184,9.325706,-3.438837,9.854346,5.160444,-4.909185,7.636899,-3.247677,-7.309175,4.018153,3.885570,0.434998,5.425794,3.010801,-5.970095,1.760847,-1.886452,9.978568,1.637787,-2.782483,-9.249714,-4.502394,3.121217,-7.208141,9.142803,5.066338,3.428316,7.729736,4.057378,0.188352,0.036266,8.584134,9.997879,-4.487524,3.612645,5.455442,8.192180,9.708678,-4.500791,-4.315728,-3.685835,-4.856276,9.842927,-4.832215,-0.606799,-0.539118,-1.494035,4.155429,-1.505492,-4.879841,-8.235367,-8.768648,-7.762553,0.862935,4.295874,-1.990957,6.037073,1.350781,1.584195,6.579628,6.326568,8.229043,1.511036,0.138076,-2.989910,0.217534,6.352437,7.823874,-1.333006,4.375365,-8.496176,5.330933,-8.345798,-4.616561,-7.380346,-3.772632,-6.197637,7.116260,-5.309196,1.555435,-7.837804,-2.476011,-1.455230,9.420734,-1.911490,-0.698423,3.733082,-8.501248,0.113498,1.873439,-4.971890,6.906663,3.619901,1.129201,-5.368380,-5.526429,0.205251,-2.511647,-2.299003,-0.219096,-0.340847,-9.372843,-8.227884,-7.849278,0.599630,8.478579,2.394431,-1.957281,2.713294,-0.077277,4.288305,3.785691,5.206760,-3.377157,5.507279,-7.867227,-4.210150,3.725272,1.259774,-9.192866,4.349994,0.136282,-5.213622,3.707175,9.653997,1.627676,2.689812,5.041687,4.348687,-5.904895,1.581453,-1.175525,8.609353,-7.832362,3.655822,-6.887590,7.358920,2.841012,8.030341,2.645880,1.147078,7.168616,1.178129,0.192602,2.302080,-2.090582,2.837423,-9.090591,-3.671113,4.473271,6.795851,4.613203,4.500901,-6.793556,4.186658,8.377442,3.096787,9.373447,-8.116602,8.209291,4.676406,-4.408363,-9.080086,7.316173,1.318855,3.571752,-4.728961,8.574116,4.118608,1.342932,-8.558654,3.762853,6.108749,-6.160467,-8.107364,0.671456,6.640649,-4.154640,-9.018283,1.470496,-9.441882,-8.537883,2.879785,9.742192,-6.761247,2.366516,5.124516,-4.214832,-8.977011,-5.521474,-1.175898,-3.305950,7.533681,5.344659,-0.498888,-3.366718,6.580029,-4.809170,-8.280689,-7.676035,-9.320183,2.977545,-2.347511,-0.207266,6.696976,5.095617,1.913607,1.661606,-5.992498,-1.922673,4.516835,-6.609844,-4.253089,2.697406,-3.529941,4.591509,-6.079347,-0.328606,-1.484285,1.606931,-6.117763,3.472739,-4.627961,-3.842508,0.862806,6.965017,4.640111,-5.707288,-3.577283,8.103301,1.991435,9.145733,9.265922,-9.711595,6.694660,4.394093,2.382236,2.260408,-7.017085,-4.607773,-8.362424,-7.222537,0.712742,2.855632,2.675219,-2.316142,2.204877,-4.394489,-5.624141,-4.001557,-2.520117,8.953559,-2.060412,5.018239,-3.965727,9.439499,6.826542,5.285051,-1.954215,0.245072,7.991289,-1.151889,6.507898,5.833213,9.277470,5.228559,-3.462327,7.808552,5.186827,7.255531,9.565398,8.774908,-3.074119,6.906838,8.019832,-3.921911,8.692772,-4.345586,7.569758,-8.323707,7.796468,-0.100075,-7.297548,3.466497,-1.172535,1.732293,3.489610,0.879501,6.515056,-9.994206,9.568358,4.565941,7.167990,0.287693,-3.790688,3.083974,-5.614221,0.867515,-8.863234,-0.183508,2.549541,-5.420925,-7.968544,-9.951082,-3.070973,1.217631,-1.369309,-5.918328,-1.530753,-7.122917,5.982207,-5.605291,-6.724713,-0.578002,-1.206804,6.612910,0.661431,-7.439286,4.061125,7.738999,6.497943,6.518583,-7.182177,9.824386,-1.734896,7.124488,-0.053866,4.261940,7.923345,4.891979,-9.374364,1.438356,-2.146986,-8.458933,-4.908742,8.279853,-4.872088,4.520413,7.133454,1.567543,6.175590,0.175456,-1.747195,-2.842033,4.771910,-9.964474,-5.514839,5.933932,3.262483,4.351323,8.393461,-5.386030,1.616329,-3.433861,-1.925352,-3.242798,-5.775882,3.977430,-3.259875,-9.514364,8.725016,-3.710487,-3.845597,-4.242021,4.769988,-7.445499,7.860969,-1.961529,-1.690387,6.221972,-7.905705,-7.816770,1.809820,7.068391,5.535232,0.101716], dtype = "float32")#candidate|2117|(1680,)|const|float32
call_2116 = relay.TupleGetItem(func_188_call(relay.reshape(const_2117.astype('float32'), [12, 14, 10]), relay.reshape(call_2088.astype('uint16'), [28,]), ), 0)
call_2118 = relay.TupleGetItem(func_191_call(relay.reshape(const_2117.astype('float32'), [12, 14, 10]), relay.reshape(call_2088.astype('uint16'), [28,]), ), 0)
func_1538_call = mod.get_global_var('func_1538')
func_1540_call = mutated_mod.get_global_var('func_1540')
call_2121 = relay.TupleGetItem(func_1538_call(relay.reshape(var_2082.astype('float64'), [780,])), 3)
call_2122 = relay.TupleGetItem(func_1540_call(relay.reshape(var_2082.astype('float64'), [780,])), 3)
bop_2126 = relay.multiply(call_2116.astype('float32'), relay.reshape(const_2117.astype('float32'), relay.shape_of(call_2116))) # shape=(12, 14, 10)
bop_2129 = relay.multiply(call_2118.astype('float32'), relay.reshape(const_2117.astype('float32'), relay.shape_of(call_2118))) # shape=(12, 14, 10)
func_1619_call = mod.get_global_var('func_1619')
func_1620_call = mutated_mod.get_global_var('func_1620')
call_2134 = relay.TupleGetItem(func_1619_call(), 1)
call_2135 = relay.TupleGetItem(func_1620_call(), 1)
output = relay.Tuple([call_2075,call_2077,const_2078,call_2081,var_2082,var_2083,call_2088,call_2114,call_2121,bop_2126,call_2134,])
output2 = relay.Tuple([call_2076,call_2079,const_2078,call_2084,var_2082,var_2083,call_2089,call_2115,call_2122,bop_2129,call_2135,])
func_2158 = relay.Function([var_2082,var_2083,], output)
mod['func_2158'] = func_2158
mod = relay.transform.InferType()(mod)
var_2159 = relay.var("var_2159", dtype = "float64", shape = (780,))#candidate|2159|(780,)|var|float64
var_2160 = relay.var("var_2160", dtype = "uint8", shape = (448,))#candidate|2160|(448,)|var|uint8
output = func_2158(var_2159,var_2160,)
func_2161 = relay.Function([var_2159,var_2160,], output)
mutated_mod['func_2161'] = func_2161
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2173 = relay.var("var_2173", dtype = "int64", shape = (2, 11, 5))#candidate|2173|(2, 11, 5)|var|int64
var_2174 = relay.var("var_2174", dtype = "int64", shape = (2, 11, 5))#candidate|2174|(2, 11, 5)|var|int64
bop_2175 = relay.bitwise_or(var_2173.astype('int64'), relay.reshape(var_2174.astype('int64'), relay.shape_of(var_2173))) # shape=(2, 11, 5)
func_2073_call = mod.get_global_var('func_2073')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_2188 = relay.TupleGetItem(func_2073_call(), 3)
call_2189 = relay.TupleGetItem(func_2074_call(), 3)
output = relay.Tuple([bop_2175,call_2188,])
output2 = relay.Tuple([bop_2175,call_2189,])
func_2191 = relay.Function([var_2173,var_2174,], output)
mod['func_2191'] = func_2191
mod = relay.transform.InferType()(mod)
mutated_mod['func_2191'] = func_2191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2191_call = mutated_mod.get_global_var('func_2191')
var_2193 = relay.var("var_2193", dtype = "int64", shape = (2, 11, 5))#candidate|2193|(2, 11, 5)|var|int64
var_2194 = relay.var("var_2194", dtype = "int64", shape = (2, 11, 5))#candidate|2194|(2, 11, 5)|var|int64
call_2192 = func_2191_call(var_2193,var_2194,)
output = call_2192
func_2195 = relay.Function([var_2193,var_2194,], output)
mutated_mod['func_2195'] = func_2195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2073_call = mod.get_global_var('func_2073')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_2245 = relay.TupleGetItem(func_2073_call(), 2)
call_2246 = relay.TupleGetItem(func_2074_call(), 2)
output = relay.Tuple([call_2245,])
output2 = relay.Tuple([call_2246,])
func_2250 = relay.Function([], output)
mod['func_2250'] = func_2250
mod = relay.transform.InferType()(mod)
output = func_2250()
func_2251 = relay.Function([], output)
mutated_mod['func_2251'] = func_2251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1620_call = mutated_mod.get_global_var('func_1620')
call_2305 = relay.TupleGetItem(func_1619_call(), 2)
call_2306 = relay.TupleGetItem(func_1620_call(), 2)
func_2250_call = mod.get_global_var('func_2250')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_2311 = relay.TupleGetItem(func_2250_call(), 0)
call_2312 = relay.TupleGetItem(func_2251_call(), 0)
output = relay.Tuple([call_2305,call_2311,])
output2 = relay.Tuple([call_2306,call_2312,])
func_2322 = relay.Function([], output)
mod['func_2322'] = func_2322
mod = relay.transform.InferType()(mod)
mutated_mod['func_2322'] = func_2322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2322_call = mutated_mod.get_global_var('func_2322')
call_2323 = func_2322_call()
output = call_2323
func_2324 = relay.Function([], output)
mutated_mod['func_2324'] = func_2324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1762_call = mod.get_global_var('func_1762')
func_1764_call = mutated_mod.get_global_var('func_1764')
call_2362 = relay.TupleGetItem(func_1762_call(), 0)
call_2363 = relay.TupleGetItem(func_1764_call(), 0)
func_2191_call = mod.get_global_var('func_2191')
func_2195_call = mutated_mod.get_global_var('func_2195')
var_2369 = relay.var("var_2369", dtype = "int64", shape = (110,))#candidate|2369|(110,)|var|int64
call_2368 = relay.TupleGetItem(func_2191_call(relay.reshape(var_2369.astype('int64'), [2, 11, 5]), relay.reshape(var_2369.astype('int64'), [2, 11, 5]), ), 0)
call_2370 = relay.TupleGetItem(func_2195_call(relay.reshape(var_2369.astype('int64'), [2, 11, 5]), relay.reshape(var_2369.astype('int64'), [2, 11, 5]), ), 0)
uop_2374 = relay.asin(var_2369.astype('float32')) # shape=(110,)
output = relay.Tuple([call_2362,call_2368,uop_2374,])
output2 = relay.Tuple([call_2363,call_2370,uop_2374,])
func_2384 = relay.Function([var_2369,], output)
mod['func_2384'] = func_2384
mod = relay.transform.InferType()(mod)
var_2385 = relay.var("var_2385", dtype = "int64", shape = (110,))#candidate|2385|(110,)|var|int64
output = func_2384(var_2385)
func_2386 = relay.Function([var_2385], output)
mutated_mod['func_2386'] = func_2386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1762_call = mod.get_global_var('func_1762')
func_1764_call = mutated_mod.get_global_var('func_1764')
call_2525 = relay.TupleGetItem(func_1762_call(), 0)
call_2526 = relay.TupleGetItem(func_1764_call(), 0)
func_2158_call = mod.get_global_var('func_2158')
func_2161_call = mutated_mod.get_global_var('func_2161')
const_2531 = relay.const([-8.326919,-8.423956,0.917575,-5.152990,-1.566948,7.954739,-3.098340,-4.664626,-7.668768,-6.558257,-5.986329,-6.286901,5.433287,-2.453526,-9.128177,-2.676530,-3.917280,-2.354323,-5.092389,8.470528,2.650536,-5.082156,5.146681,4.792096,-5.917694,5.082032,3.503656,-6.889439,-2.408640,8.988679,3.396567,7.351590,1.052009,6.996643,8.216123,-4.554844,6.679783,-3.344099,0.909666,1.499983,4.648516,-8.849469,-0.708282,8.807638,-0.491715,0.638512,9.982592,4.896402,-6.142601,-0.073223,9.472971,8.846357,2.429336,4.632803,1.901201,-7.526796,7.547041,7.025472,7.031869,8.497759,-2.271489,3.240214,9.379812,-6.718115,-7.918719,6.233619,3.154770,-3.369108,5.139498,2.778238,-3.325093,9.693849,0.516396,5.526138,-7.994619,-3.811482,-7.293340,-8.045276,-6.849776,7.309598,9.522416,-0.836761,6.148632,5.957902,-5.016519,-9.691138,2.004539,7.794871,-1.652490,3.995606,5.185993,2.042413,-5.650175,9.914081,-6.278562,7.117049,-8.766736,-9.712834,-5.274268,-3.988614,4.030526,-0.801095,-5.436957,5.989625,-8.006144,0.093760,-7.436016,7.324766,-4.315088,9.045479,-4.853655,-1.798169,-2.259614,-5.382064,8.213738,7.238495,7.116464,9.070807,9.199319,5.324426,7.492726,3.405217,2.859958,-4.860304,-6.494406,5.935266,-6.142246,7.525522,-7.348398,-6.538414,-4.751052,-0.487417,1.776896,8.755991,-6.529930,-9.065393,-2.722031,8.425978,9.840421,9.424880,1.426274,-4.547034,9.154297,-6.679416,7.254797,5.517829,5.324471,-9.283265,6.088884,6.859052,-5.822614,8.987690,-9.547795,-6.804231,4.014662,2.626554,-6.460751,-5.376206,0.348730,-4.534176,7.960330,-4.996860,1.220010,5.220360,-8.934570,8.797529,5.999274,3.227600,7.224836,5.055269,-1.777604,-9.074374,-9.360667,-5.364683,5.023482,-5.588393,-6.889707,8.286476,1.237411,-4.897212,-7.645860,-3.572306,-8.695566,6.793587,-4.130581,-7.090502,2.487234,3.563476,-6.376154,0.837059,-4.497608,-7.745836,-7.031827,7.266082,0.080284,7.674468,6.167771,7.128449,-0.970322,3.940477,4.436763,5.925281,-5.703080,-9.045621,-2.803953,5.032891,8.190050,2.808341,3.244280,-4.986156,-6.531334,-5.894822,8.657304,3.571050,-7.952742,-9.466586,6.212882,-9.680100,7.064285,-2.997610,-2.118716,-5.160865,2.917680,1.894800,-6.298174,8.625776,-0.654979,-5.733598,4.796497,7.186164,2.798401,7.843456,3.336599,-2.949574,-0.777239,-6.891085,-3.088085,1.477474,-6.105417,4.053360,-4.142198,3.708950,-2.050420,-4.894002,5.950821,-2.889189,-2.157254,6.620586,3.091712,-2.889829,-5.568032,3.718979,3.933164,8.187734,5.100238,9.532787,6.293621,-0.016278,-1.280090,-5.749611,-4.476256,-3.439691,-8.919738,-1.273440,-8.524597,-0.242175,4.156412,8.416418,-6.279685,-5.531298,5.053136,6.774765,-0.868961,1.945953,-6.340091,2.635776,-5.926391,2.939765,5.832848,-6.514778,-1.472397,2.688237,-0.261170,8.776656,8.553833,1.613095,3.257932,6.043622,-3.048858,-5.356984,-1.329684,-2.683023,-1.674084,-5.257625,4.477085,7.383528,6.135885,-4.994759,1.147129,-9.221086,0.981004,-1.598806,-0.901436,6.277621,-4.441462,8.101646,3.018901,8.138781,-7.579099,3.738751,-2.898675,2.286289,7.392130,-4.183222,7.561766,1.190123,-3.706711,2.572181,-1.528032,6.858122,8.253460,4.971537,-7.226990,-7.357183,-8.155738,1.943854,-0.577840,-6.934352,-3.928172,-3.032577,9.669869,-2.630359,8.126162,-0.482910,-6.104745,-3.862178,2.668030,-9.124030,-1.866960,-7.637201,6.022208,-1.419489,-1.208915,1.502979,5.074714,8.648515,-1.696082,-1.328697,0.560324,7.022813,-5.264437,3.713384,5.205182,-7.855689,-9.433873,2.471661,-3.012896,5.885812,-9.591389,6.524217,8.655968,8.155640,-1.318330,4.454705,-1.950441,-7.890187,1.231556,-4.456966,7.946419,-9.014880,3.382247,2.242013,1.044123,3.821514,-7.050914,5.115413,2.293674,2.839120,-1.391540,3.816706,7.241175,-0.569496,-0.360893,3.017082,8.600996,8.096410,6.885041,-3.365159,-5.055905,0.503624,-8.048670,-1.332192,1.113084,0.427830,-6.632735,-2.776573,-3.795205,-0.747226,-8.816562,0.919552,-9.264279,-4.079810,3.834307,-7.307459,-7.434634,-3.125430,5.571968,-2.280052,-8.854176,-3.262394,9.514415,-5.490434,2.457389,-5.444045,0.769366,5.103898,-1.359451,8.789527,-6.908345,0.351381,6.837696,1.414889,-4.953495,7.042767,-4.146589,-0.864214,7.632643,2.569080,3.945320,-4.975669,8.328316,-7.899036,2.923794,-2.718658,-4.156367,1.988472,8.941379,-7.106984,-8.689447,2.080469,5.831984,-0.406529,-8.618972,-7.157636,8.835759,-3.881086,-8.895867,1.991302,0.930974,-1.686473,8.003654,5.380268,-4.205285,4.625430,-5.687148,2.448510,-2.125598,-2.361602,-2.126315,-9.388432,5.830991,-0.608048,-0.645905,2.759468,2.047861,1.083343,8.998246,-4.842389,-3.731169,5.779124,-8.626872,-8.940942,-9.368574,8.370060,9.795632,0.644988,8.834051,4.728190,5.388020,2.998790,-8.507585,6.378328,5.099730,1.961370,3.209463,-9.593638,-6.513674,-2.745622,3.599008,1.542342,-2.166351,1.635564,-7.710012,9.781489,-8.491351,0.237575,6.287226,-0.294975,-7.729842,-1.704764,-1.985419,7.055000,9.325897,-3.774998,9.080560,-4.597387,-7.265194,3.705724,-5.595428,-8.856557,7.167928,6.826443,-1.324266,-1.522844,6.756650,8.380945,3.154678,-5.024294,-5.514045,-0.569017,-9.711809,6.837716,-7.811342,-7.262658,0.556489,4.686274,-0.103440,8.361644,3.607028,4.824435,-1.244266,-3.445796,5.078708,8.521735,0.218329,0.416128,-1.538968,-8.130502,-3.623364,1.865546,1.463618,-7.540313,7.800848,3.505386,5.486670,9.790728,9.072472,-1.811661,5.298409,-5.036523,1.469780,-1.207653,1.057118,-0.574778,8.524343,8.589874,9.558954,-6.548468,-0.689941,2.706256,-0.310629,3.988840,-8.380533,-0.442812,0.817559,4.753947,3.669449,-1.273070,-4.457778,-3.196912,-9.549755,3.512076,8.638443,-4.151659,7.124800,-8.903771,6.599840,2.389879,9.387239,0.359681,-8.130593,2.894916,-0.994859,-2.319435,-1.787767,6.815649,5.292048,-7.941280,-9.717730,-4.534418,-3.309143,-3.690278,-5.356523,-2.681136,8.404758,3.422457,-3.579149,2.129765,-0.906901,1.514104,-6.817078,-0.734977,3.430797,9.235823,3.760476,1.994101,-6.545187,6.525671,4.647882,-8.748900,6.637853,9.335885,-8.070676,3.398249,-6.968103,0.732215,2.697930,-4.717272,2.047427,-6.902807,8.967479,-1.160327,2.066216,8.477950,8.152317,-9.373761,3.574769,-6.801528,-2.668304,-9.798256,5.762458,-2.151095,2.652905,4.000813,-9.706378,-0.725280,-3.839607,7.456947,-6.894709,-9.691190,-2.229755,4.254115,-4.438444,2.350925,7.132841,-0.533783,7.264856,4.976350,8.274696,4.730139,-6.108921,-0.826930,3.881624,4.452695,-4.748667,4.714627,-5.883715,-7.401570,7.625363,9.291656,6.474500,9.358998,-3.930536,-6.443032,3.752358,4.929660,4.305497,-7.766443,7.319455,-5.213247,-3.136418,-0.903296,-3.798629,7.624848,-9.660160,-2.382489,-9.854401,6.874886,-1.435899,0.380077,4.256662,-9.619610,-6.100033,1.205786,-2.492771,2.160968,-3.955935,0.864678,-2.270468,-8.656570,7.902704,-6.274918,-8.487854,9.530759,6.423634,-1.048563,6.699929,8.448004,-4.793064,-1.755455,2.555522,3.033792,6.181167,-2.816926,7.267369,4.316665,-2.413324,4.590278,3.064958,3.511464,2.756353,0.375848,-5.777297,-4.489465,-5.510105,6.746321,-7.889497,3.670019,8.909477,3.062478,-4.365420,-7.907076,-8.215327,2.432101,-1.168158,5.619282,-9.923487,-3.309379,4.369921,9.992889,0.051071,6.125826,5.926003,-3.119247,2.958301,-5.534939,-4.796985,-3.129701,-8.379774,-9.172925,-3.351173,-0.615778,-5.155969,-5.606479,7.898660,1.629215,-6.358548,-6.425752,5.789208,7.076140,-8.458495,-2.788622,-9.356810,9.573965,-4.899477,2.418796,8.512875,-0.341954,-3.043540,-9.936887,-6.858727,2.088234,-3.068475,6.560017,-2.283947,-4.283571,-9.325521,7.881811,1.542373,2.790571,-4.299266,0.016966,-4.337403,7.707249,-6.401124,-2.386174,-4.408726,3.265015,4.036544,-7.935733], dtype = "float64")#candidate|2531|(780,)|const|float64
const_2532 = relay.const([-2,4,4,-6,-2,2,6,1,7,-7,-5,-4,3,5,5,-10,5,-2,-1,-3,-9,-5,2,-10,-7,-3,3,5,9,9,-4,-2,-2,7,-3,6,-7,8,6,8,4,-6,-9,2,-3,-4,9,-5,10,-4,-4,4,1,9,-9,-9,-8,-9,-7,7,-1,8,-6,-3,-5,-9,5,-10,-7,-4,-6,9,-9,3,1,-8,10,4,-9,4,4,-2,-1,7,-3,-6,3,3,4,-10,5,-9,3,4,-10,5,6,-3,2,-6,-1,4,-8,8,4,-8,7,5,-1,-4,-7,-5,8,9,9,7,-6,6,9,-5,-1,1,10,-7,-4,2,-10,2,8,-2,-5,-9,-1,4,-8,-4,-3,8,-2,4,8,5,4,7,-1,1,9,8,6,3,-2,-4,1,-6,-8,7,6,-3,-1,4,-1,-9,-6,4,8,7,-2,5,-4,-8,-1,8,9,10,4,-4,-9,-7,10,7,9,-10,-7,-6,-5,-3,1,4,3,-2,7,3,-10,9,2,-2,1,1,4,-9,4,-7,-3,5,-4,4,6,7,8,8,3,-10,-1,-2,-10,5,-1,7,3,10,2,9,1,-3,-2,-8,10,-9,1,-7,-2,-5,5,7,-7,-5,2,4,-2,2,-10,10,10,-3,3,-4,-2,-8,-4,-5,5,-7,-6,10,-9,-1,-3,-1,10,-4,3,8,8,2,-2,-10,-7,-3,1,10,-8,-1,1,5,-5,4,8,3,9,-5,-2,-9,-5,1,-8,8,-1,-8,-10,-4,2,4,4,-6,-3,-6,-8,-4,-9,-9,-6,-4,5,-9,-5,-1,-3,-8,2,-9,-3,-10,2,-3,10,8,8,-5,4,-7,7,7,-3,-6,-7,10,2,2,-5,-2,9,-3,2,2,-1,6,-7,9,-7,4,2,7,-5,7,-6,-7,1,-3,-7,10,4,-8,-8,-2,4,1,2,-1,7,-9,8,-9,5,3,-5,-1,-10,1,-6,3,2,7,1,3,5,-10,-7,6,-9,3,4,6,-3,-4,-1,-10,-10,-9,4,-9,-3,5,-6,-1,10,2,5,9,-4,-8,9,-9,6,2,-1,10,9,-5,6,3,-7,-1,-2,2,-3,-10,10,-3,-9,-6,-5,-6,4,3,-7,-8,-1,9,-1,-7,3,9,1,2,7,2,-8,8,2,-4,8,-3,10,10,3,8,-9,3], dtype = "uint8")#candidate|2532|(448,)|const|uint8
call_2530 = relay.TupleGetItem(func_2158_call(relay.reshape(const_2531.astype('float64'), [780,]), relay.reshape(const_2532.astype('uint8'), [448,]), ), 9)
call_2533 = relay.TupleGetItem(func_2161_call(relay.reshape(const_2531.astype('float64'), [780,]), relay.reshape(const_2532.astype('uint8'), [448,]), ), 9)
func_2013_call = mod.get_global_var('func_2013')
func_2016_call = mutated_mod.get_global_var('func_2016')
call_2545 = relay.TupleGetItem(func_2013_call(relay.reshape(const_2531.astype('float64'), [780,])), 0)
call_2546 = relay.TupleGetItem(func_2016_call(relay.reshape(const_2531.astype('float64'), [780,])), 0)
func_129_call = mod.get_global_var('func_129')
func_132_call = mutated_mod.get_global_var('func_132')
call_2548 = func_129_call(relay.reshape(call_2525.astype('uint16'), [7, 2, 2]))
call_2549 = func_129_call(relay.reshape(call_2525.astype('uint16'), [7, 2, 2]))
output = relay.Tuple([call_2525,call_2530,const_2531,const_2532,call_2545,call_2548,])
output2 = relay.Tuple([call_2526,call_2533,const_2531,const_2532,call_2546,call_2549,])
func_2561 = relay.Function([], output)
mod['func_2561'] = func_2561
mod = relay.transform.InferType()(mod)
mutated_mod['func_2561'] = func_2561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2561_call = mutated_mod.get_global_var('func_2561')
call_2562 = func_2561_call()
output = call_2562
func_2563 = relay.Function([], output)
mutated_mod['func_2563'] = func_2563
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2572 = relay.var("var_2572", dtype = "bool", shape = ())#candidate|2572|()|var|bool
var_2573 = relay.var("var_2573", dtype = "bool", shape = (13, 4, 6))#candidate|2573|(13, 4, 6)|var|bool
bop_2574 = relay.logical_and(var_2572.astype('bool'), var_2573.astype('bool')) # shape=(13, 4, 6)
func_1538_call = mod.get_global_var('func_1538')
func_1540_call = mutated_mod.get_global_var('func_1540')
const_2580 = relay.const([[-3.493984,2.895549,5.491663,8.169427,5.365085,-2.927148,-6.978867,6.907976,-1.537243,7.480742,6.608314,-8.945311,-9.820797,-0.093070,9.865087,5.639866,8.032765,-9.328411,1.026652,-7.012528,-6.546649,-6.530371,1.474896,-6.676829,-3.380179,8.751952,-4.861285,-1.327956,7.355741,1.914886,-8.570587,-6.835251,-0.143856,-7.098995,-6.790268,-2.352814,8.137195,2.939134,-0.204425,-7.404637,3.711762,-7.578707,1.408172,6.659154,-1.939701,-4.996602,6.055784,-6.564835,4.391741,-7.549643,6.834103,-4.699120,0.198170,2.161124,5.342850,-5.221549,9.719986,-5.740273,-7.332406,0.925348,4.248457,1.003252,-5.567180,-7.278516,-7.935495,0.164677,3.060714,-4.523972,1.977380,-8.319391,0.310516,-8.937922,-6.801378,8.668685,-0.443653,1.067499,-0.963044,-1.882173,-1.880873,-4.387400,4.051232,7.363478,9.605729,-2.038880,7.386245,7.306519,6.092454,-5.869023,8.830901,-1.132192,-7.637545,5.945248,-7.478634,-7.391637,-5.232195,8.400865,-6.110594,-3.464830,-6.848795,5.080689,2.083000,-9.297840,-5.881909,-6.914292,5.285458,8.898724,-6.044058,-2.330585,-2.339551,-7.064322,-1.147838,3.657900,-4.167835,-5.817624,-4.167865,-6.065035,8.721559,-3.071337,0.476240,6.552753,-8.080479,8.281176,6.114487,0.962507,-2.069873,-3.335640,-9.054138,2.602623,8.156970,3.701470,7.528638,2.227891,4.317502,-0.331006,3.650271,8.863401,-5.822704,-9.058481,-6.937511,-1.938040,6.148326,5.820857,-7.401683,-8.361200,7.207102,4.565141,-1.027803,8.653613,-5.959476,-3.771950,2.178523,8.382170,-2.937019,4.690888,-2.985016,1.056058],[-4.059391,8.541185,-6.916336,-7.707313,4.214588,-2.931818,-2.657439,7.162204,-0.578772,-9.969668,7.669043,6.703497,-1.339231,4.954527,-9.325474,-2.295455,0.788479,3.158327,-7.999521,0.438258,6.681863,5.265695,9.732521,5.782482,-3.433671,7.355284,1.988816,-5.437676,7.287767,-1.806073,-3.204634,-7.314040,-8.261281,3.959209,5.591743,2.210445,3.615204,9.375087,7.876274,-9.331465,-0.415841,-1.267736,-9.393908,9.516523,-5.280861,-8.743829,4.809337,-0.939654,-0.773221,-8.463749,7.674014,4.835013,-5.385802,9.002697,7.702493,3.316950,-4.496690,1.960155,-5.046315,-4.982403,0.074435,-2.934445,-1.817567,-7.626186,-6.816907,-3.631151,-0.200707,-9.825359,-7.967356,2.968413,2.176389,-9.726529,-7.373847,1.161599,-4.972108,2.598703,-4.256294,-9.528439,-1.355993,7.591301,0.047295,-6.262724,5.713062,-0.186801,4.749341,3.660187,9.872909,-0.643300,-2.551137,-1.226505,2.476625,-5.075132,0.968746,-0.291528,1.300449,4.537350,-0.086551,1.252479,-6.526356,9.769064,3.453838,7.798004,-3.621938,-6.901940,7.056025,-5.087750,-4.167121,-9.191926,6.447593,9.648828,-2.228597,-1.085670,1.947446,5.453112,8.214365,2.231252,1.128178,8.616210,-5.247877,-4.643356,7.286166,-0.617296,6.866175,9.368803,-0.120546,-4.128669,7.101127,9.057729,-5.266852,5.875573,1.014917,-5.149724,2.767232,7.327017,6.767596,3.047038,-8.830129,-4.435573,-5.016163,-6.554626,-8.411513,3.092958,1.912730,-9.907444,6.690057,-0.468158,-2.398929,-1.642623,-5.367360,4.704589,2.817845,-6.144171,9.542697,-6.995021,5.039776,-1.060182],[5.097489,0.244770,-4.448953,-7.193550,7.459937,-0.658229,2.368351,9.402984,-1.340611,7.151795,6.798463,9.518762,-0.057187,-3.892200,7.519056,8.780917,6.315323,1.296173,6.063362,6.145884,-7.304618,-9.087286,-1.261793,-1.331494,3.702228,4.750939,1.419211,2.357158,-8.552254,2.857364,-7.859346,-4.269984,-5.347821,0.490098,6.386511,-5.468227,-5.912996,8.973354,8.938946,-1.097314,8.408576,4.305018,-8.407349,-1.752933,9.070733,-3.094510,-6.207979,6.847390,5.942096,-6.032723,9.480892,-7.874983,-4.744758,6.144275,9.479480,-5.444826,1.827724,-0.419361,-2.136784,-6.966368,-9.353682,0.985648,9.985903,1.211511,4.253596,9.255459,8.859040,-8.440059,2.564514,7.019221,8.834490,3.690918,4.148970,5.076785,-1.642076,1.801507,-1.514792,4.567013,7.425292,-6.917483,5.972213,-0.176091,-2.678725,-1.044847,-0.764352,-6.579203,7.920046,-6.208735,4.938582,-1.552874,1.349208,8.800472,-3.665904,7.734557,1.227706,-1.971897,2.226905,8.493324,3.177145,2.323407,9.159602,-1.955481,8.243449,-3.610472,-8.348216,-5.442194,-5.280694,6.673076,-0.303372,4.738552,8.559650,-5.877171,-6.318349,-9.695411,3.380768,4.028391,9.929582,9.630684,-1.788574,-8.209569,-5.932775,-8.691134,-8.002385,5.456961,-5.347096,-8.779775,-1.525510,-3.961188,4.853851,2.930446,-8.169228,4.564946,-1.494927,-0.799539,-6.133964,8.802440,8.391346,-6.843058,4.291872,-2.971324,-4.658755,0.907636,-1.703026,0.337943,-7.918065,-1.682418,0.244501,4.073362,3.454495,-9.182722,-3.646618,-7.045027,6.379275,4.152589,0.284100,-8.280010],[-5.516410,-7.122174,1.527675,-0.862785,-7.743812,-1.823860,6.629095,2.573281,9.458856,-9.290879,6.188559,8.052784,1.316693,-7.182046,-7.736834,-3.133731,-7.719241,9.895835,-3.096344,-4.051957,5.925308,-8.559572,-7.532205,6.709783,6.895526,0.738560,-5.915419,6.872569,2.393035,-9.572552,-1.887011,-5.157344,-5.040633,-0.028933,-7.851273,4.305247,3.949763,-2.237114,-9.895594,7.278113,0.935892,-3.002764,6.910823,-8.763603,3.804325,4.456877,9.901240,2.372887,7.347054,4.035894,-7.635319,5.945451,-8.546529,5.691975,3.115321,8.939754,6.282723,1.601711,0.985237,4.958483,-3.875270,9.053801,-9.147004,8.929568,-1.025372,2.677708,-2.805250,5.161776,-9.360134,3.226160,6.941172,0.571688,-4.778115,-3.859910,-7.202481,0.065257,-6.734868,-8.604921,9.986407,-4.107721,-2.874638,-8.599809,2.097851,-8.230377,-3.699135,0.934106,-7.932576,-9.673790,5.603960,-8.843775,-2.121638,8.990652,-5.110700,7.167974,9.369953,-8.152320,-2.096775,-5.806013,-2.815032,3.024890,-7.668018,-7.866731,0.361126,-7.436830,8.408376,-0.639717,-2.145541,-6.235543,-5.631995,-4.961713,-7.309233,0.696265,9.668294,-0.065782,-4.880598,-9.189367,-8.307634,8.584891,4.675436,5.264268,4.710338,-9.928715,4.749633,-3.059574,-6.674033,5.843718,1.794700,1.972425,8.057028,-7.657721,-8.016348,-6.117029,-1.941431,-0.191500,1.551588,-4.943268,-0.494109,-1.532124,-2.699682,4.115585,4.287279,3.576583,1.152883,5.263708,-6.771220,1.549623,-5.050017,1.157777,3.800368,-6.434496,9.650484,1.987018,6.023122,1.121903,9.549886,0.189623],[-8.702841,7.182232,7.174562,-1.936995,2.270213,-2.034796,5.795679,-6.079800,-1.108481,-6.480204,3.817161,5.949791,0.952538,-9.650588,5.337874,-3.248238,-0.313502,2.174401,-3.730995,7.137673,9.812278,-7.507374,-3.640508,-8.515644,3.001325,-8.389725,-0.829185,-9.677783,5.486908,-7.729582,-5.774608,-2.552338,4.151483,-4.790925,3.489546,6.764509,-5.528084,7.556241,-3.156016,1.808284,-4.434758,-7.697424,0.290551,4.614172,-0.617423,7.290902,-0.034686,5.221379,4.203206,5.423238,-7.644543,-3.979247,-8.872278,7.374990,4.553063,4.229565,-1.334994,-4.729930,-9.879413,-0.644449,-2.790928,7.908628,3.902138,-9.189158,-7.455856,9.019016,-9.623842,3.757824,-5.073980,1.969935,1.693005,5.504542,-6.688232,6.359252,6.987217,5.351403,6.190182,-7.289783,-5.181059,-9.457793,5.201286,6.617347,2.129414,-2.096359,0.833123,8.886049,-4.563449,-1.539810,-7.093240,2.637165,-5.520721,9.816700,2.371618,-8.981723,-4.270429,5.984294,6.203173,0.661494,2.433416,-6.568359,5.518084,-6.295670,-6.585730,5.561975,-4.061243,3.361096,2.271049,1.932254,-9.576355,-2.686920,-9.177475,-0.088969,-1.986472,-7.604081,-9.367994,-0.445732,-1.935708,2.006643,-0.978200,1.404430,-2.318975,9.574331,-9.386357,-8.799036,-6.424227,7.111577,-7.753885,-1.276485,-1.236643,2.769403,7.770971,-5.518355,-5.307773,2.702974,-2.688595,3.059417,8.671949,0.204985,9.338585,-3.468704,-2.829394,-9.366143,-8.959010,-7.952323,7.621885,4.857781,6.224126,-9.818843,1.007469,-6.200739,5.693910,-1.774529,-8.035056,-2.319490,-3.198504,-9.382536]], dtype = "float64")#candidate|2580|(5, 156)|const|float64
call_2579 = relay.TupleGetItem(func_1538_call(relay.reshape(const_2580.astype('float64'), [780,])), 0)
call_2581 = relay.TupleGetItem(func_1540_call(relay.reshape(const_2580.astype('float64'), [780,])), 0)
const_2608 = relay.const([[[False,True,True,False,False,False],[False,True,False,False,False,False],[True,False,False,True,True,False],[True,False,True,True,True,True]],[[True,True,False,False,False,False],[False,True,True,False,True,False],[False,False,True,False,False,True],[True,True,False,True,False,True]],[[True,False,False,False,True,True],[False,False,False,False,False,False],[False,True,True,False,True,True],[False,True,True,True,True,True]],[[True,False,False,True,False,True],[False,True,True,False,False,False],[True,False,False,True,False,False],[False,True,True,True,True,False]],[[False,True,True,True,False,True],[False,True,True,True,False,True],[False,True,True,True,True,True],[True,True,True,True,False,True]],[[True,False,False,True,False,True],[True,False,False,True,False,True],[False,False,False,True,True,True],[True,True,False,False,False,True]],[[True,True,False,False,False,True],[True,False,True,False,True,True],[True,False,False,False,True,False],[True,True,False,True,True,False]],[[False,False,True,False,False,False],[False,True,True,False,True,False],[True,False,False,True,False,True],[False,False,True,False,False,True]],[[False,True,False,True,False,True],[True,True,True,False,True,True],[False,True,False,False,False,True],[False,True,False,False,False,False]],[[True,True,False,False,True,False],[True,False,True,False,True,False],[True,False,True,True,False,False],[False,True,False,True,True,False]],[[False,True,True,False,True,False],[True,False,True,True,False,False],[False,False,False,True,False,True],[True,True,True,False,False,False]],[[True,True,True,True,False,False],[True,False,True,False,True,False],[False,False,False,True,True,False],[False,True,False,False,True,False]],[[False,False,False,True,True,False],[True,False,True,False,True,True],[False,False,False,True,False,True],[True,True,True,True,False,False]]], dtype = "bool")#candidate|2608|(13, 4, 6)|const|bool
bop_2609 = relay.bitwise_and(bop_2574.astype('uint8'), relay.reshape(const_2608.astype('uint8'), relay.shape_of(bop_2574))) # shape=(13, 4, 6)
output = relay.Tuple([call_2579,const_2580,bop_2609,])
output2 = relay.Tuple([call_2581,const_2580,bop_2609,])
func_2616 = relay.Function([var_2572,var_2573,], output)
mod['func_2616'] = func_2616
mod = relay.transform.InferType()(mod)
mutated_mod['func_2616'] = func_2616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2616_call = mutated_mod.get_global_var('func_2616')
var_2618 = relay.var("var_2618", dtype = "bool", shape = ())#candidate|2618|()|var|bool
var_2619 = relay.var("var_2619", dtype = "bool", shape = (13, 4, 6))#candidate|2619|(13, 4, 6)|var|bool
call_2617 = func_2616_call(var_2618,var_2619,)
output = call_2617
func_2620 = relay.Function([var_2618,var_2619,], output)
mutated_mod['func_2620'] = func_2620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2073_call = mod.get_global_var('func_2073')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_2667 = relay.TupleGetItem(func_2073_call(), 1)
call_2668 = relay.TupleGetItem(func_2074_call(), 1)
output = call_2667
output2 = call_2668
func_2679 = relay.Function([], output)
mod['func_2679'] = func_2679
mod = relay.transform.InferType()(mod)
output = func_2679()
func_2680 = relay.Function([], output)
mutated_mod['func_2680'] = func_2680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2679_call = mod.get_global_var('func_2679')
func_2680_call = mutated_mod.get_global_var('func_2680')
call_2709 = func_2679_call()
call_2710 = func_2679_call()
func_2158_call = mod.get_global_var('func_2158')
func_2161_call = mutated_mod.get_global_var('func_2161')
var_2712 = relay.var("var_2712", dtype = "uint8", shape = (448,))#candidate|2712|(448,)|var|uint8
call_2711 = relay.TupleGetItem(func_2158_call(relay.reshape(call_2709.astype('float64'), [780,]), relay.reshape(var_2712.astype('uint8'), [448,]), ), 0)
call_2713 = relay.TupleGetItem(func_2161_call(relay.reshape(call_2709.astype('float64'), [780,]), relay.reshape(var_2712.astype('uint8'), [448,]), ), 0)
func_2158_call = mod.get_global_var('func_2158')
func_2161_call = mutated_mod.get_global_var('func_2161')
call_2725 = relay.TupleGetItem(func_2158_call(relay.reshape(call_2709.astype('float64'), [780,]), relay.reshape(var_2712.astype('uint8'), [448,]), ), 8)
call_2726 = relay.TupleGetItem(func_2161_call(relay.reshape(call_2709.astype('float64'), [780,]), relay.reshape(var_2712.astype('uint8'), [448,]), ), 8)
output = relay.Tuple([call_2709,call_2711,var_2712,call_2725,])
output2 = relay.Tuple([call_2710,call_2713,var_2712,call_2726,])
func_2736 = relay.Function([var_2712,], output)
mod['func_2736'] = func_2736
mod = relay.transform.InferType()(mod)
mutated_mod['func_2736'] = func_2736
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2737 = relay.var("var_2737", dtype = "uint8", shape = (448,))#candidate|2737|(448,)|var|uint8
func_2736_call = mutated_mod.get_global_var('func_2736')
call_2738 = func_2736_call(var_2737)
output = call_2738
func_2739 = relay.Function([var_2737], output)
mutated_mod['func_2739'] = func_2739
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2748 = relay.var("var_2748", dtype = "uint32", shape = ())#candidate|2748|()|var|uint32
const_2749 = relay.const([[[-1,-4,-7,-6,-3,-9,-5,-1,-2,-10,-7,-8,10,-9,6],[-8,10,-1,10,1,8,-4,9,-4,8,-5,-6,7,10,4],[10,3,6,9,1,3,4,-4,1,-3,6,3,-10,-10,6],[6,-8,8,-3,3,-10,5,2,-6,-1,-3,6,-9,-8,-7],[-6,2,2,-9,-8,-8,9,-10,-7,5,5,5,5,8,-4],[8,9,-4,-2,5,7,6,-1,4,-5,5,8,1,-5,-7],[-5,-1,-6,3,-9,-8,4,-10,-2,-2,-5,9,9,9,1],[3,2,8,10,-8,2,5,1,2,2,-2,-2,-2,-3,3],[6,1,1,-10,3,-9,-5,2,10,1,7,-8,-6,-10,-1],[4,10,-9,-5,1,8,-2,4,1,7,3,5,4,4,-2],[-6,4,4,-8,-2,-6,9,-5,3,7,10,-5,-3,-8,-5],[-10,9,-7,-7,1,-4,-2,-4,-7,5,-8,-4,-9,3,2],[8,-9,7,-9,2,6,4,10,4,-6,1,-5,-6,-4,2],[7,9,8,-1,-2,6,1,-5,9,-8,10,10,8,10,6]],[[-7,5,-10,-2,9,-6,-4,-6,-7,10,-1,-7,-8,10,9],[1,1,-2,8,-4,9,-1,-4,-2,1,6,-2,6,10,-9],[1,4,3,-5,-1,-9,8,3,-8,-2,-7,-4,3,-3,5],[-3,10,-10,-3,-6,-5,-7,7,-4,-7,6,7,6,-8,-7],[9,-9,7,-3,-6,7,6,-6,-5,7,-9,5,1,-7,10],[-3,-4,-7,-2,3,9,-1,5,-5,-10,-2,5,4,-1,-8],[7,-10,-4,1,-5,-5,-6,7,-8,4,7,4,5,2,2],[-7,-9,-7,-3,-8,5,-3,4,4,4,-7,-6,-5,-2,9],[6,3,2,-10,-10,-3,4,8,8,1,2,5,2,8,-8],[9,4,1,4,3,10,1,-2,3,10,3,3,-9,7,-8],[-6,-1,9,-6,-3,-6,-5,-6,-5,8,-4,-9,-9,1,-6],[3,6,-2,-7,-5,-7,1,8,-2,8,-2,3,9,-10,9],[7,-9,7,-7,2,-5,3,-3,-3,7,7,4,-1,-1,3],[-8,-2,-5,-10,3,4,-1,4,-9,-10,-10,6,-6,-9,9]],[[-5,-2,5,7,-10,7,10,1,3,5,-6,10,-1,10,-1],[3,7,-6,5,-8,-6,8,-3,2,-9,-7,3,9,-4,-5],[-8,-5,-4,-7,-2,5,-10,-4,2,-8,2,-7,5,-9,5],[-5,2,9,-9,-6,-3,-1,-2,7,10,6,-3,6,-7,8],[-9,-6,-1,7,-3,-2,-4,9,-9,-1,-4,-10,-9,6,1],[9,-6,-1,2,-10,-2,1,-7,-3,9,-3,10,1,-2,-5],[-10,3,9,-5,-5,-6,-9,-3,9,1,10,10,-1,-7,-7],[-6,-7,5,4,-9,-6,5,3,-10,-4,10,-8,3,-1,-2],[5,5,6,9,9,6,6,1,-9,-2,3,-8,2,10,-4],[-2,-8,-2,-5,4,-3,-1,4,-6,10,-10,10,4,1,-5],[-6,-5,-2,-1,-10,-4,9,-1,5,8,5,-10,7,-9,10],[5,-1,-2,-9,-1,-2,-3,-10,4,2,-3,-1,6,-1,-8],[8,-8,-4,-1,5,-4,-9,-8,3,-4,-3,4,2,-3,4],[3,-3,-1,3,-3,-6,-5,-6,-3,4,-4,4,2,7,-10]],[[-5,2,-6,-8,-7,-7,-8,7,5,2,7,8,-3,9,4],[-2,-4,8,9,7,4,8,-8,5,5,3,-3,-5,-1,-8],[-6,5,-5,10,-6,-10,10,-4,1,2,-9,9,-7,-10,-1],[-3,-9,8,1,9,-4,-2,5,5,-7,3,3,10,6,-10],[10,-5,4,-4,9,2,10,-10,-10,-10,-1,5,-5,-5,6],[-8,-1,-5,6,9,3,-1,-5,-8,7,4,-1,3,5,-6],[7,9,-1,-2,6,-4,-3,9,-7,5,-5,1,9,1,-6],[-6,5,9,-2,10,-2,-4,-1,-3,2,-4,6,-2,-1,-10],[1,10,-3,-9,1,2,6,-8,-1,-7,8,7,-7,10,1],[7,-6,-6,-5,4,6,1,2,-9,10,-5,7,4,-10,-2],[-2,2,5,7,-3,-7,-6,1,8,10,-5,-8,-6,4,5],[-6,-4,-5,6,-8,4,8,-4,6,8,-9,1,-7,10,-1],[-9,1,5,4,-9,-2,10,3,-10,5,6,-3,1,-2,-1],[-5,-1,-6,6,2,4,8,-4,5,1,4,-4,-2,8,8]],[[-10,2,1,10,7,3,-5,-3,-4,-5,-10,10,-7,-1,-8],[-2,1,-10,1,-10,-3,2,-5,-7,5,6,2,-9,10,-1],[8,7,-9,-4,8,-1,-10,-8,-7,-6,8,10,-7,6,9],[-6,-3,8,1,-4,-9,-9,-7,-4,6,1,-1,4,7,3],[-9,5,-1,6,9,10,-5,5,-8,10,-8,-7,-9,-4,3],[4,-8,6,6,-9,1,10,-8,10,3,-1,-1,9,1,8],[-5,-6,5,-10,1,3,1,-8,8,7,9,6,8,10,1],[3,-4,8,-10,-8,10,-3,-5,-9,10,-8,-4,9,-10,-3],[-8,-6,5,2,4,6,-3,2,1,-3,-7,-2,-3,-5,1],[-3,-4,3,-5,-3,-7,1,-10,-8,-4,4,1,-4,-8,-7],[-9,-7,-1,10,-5,3,4,2,8,-4,2,-6,7,-7,-9],[1,-5,10,-1,2,-7,-8,8,4,-1,-10,10,5,-4,-10],[7,2,2,-9,-6,8,5,-4,-7,1,-9,-2,5,-6,-10],[-5,-2,2,-10,-6,2,-10,2,-4,-2,-9,-7,2,8,4]],[[-8,4,5,3,-7,-2,5,-9,-7,7,9,-2,9,-10,-4],[5,-3,-2,-7,4,4,-6,-9,5,10,-7,10,-7,5,-5],[4,-3,-1,5,-9,-1,-8,-1,3,-5,8,2,-9,-6,-10],[5,1,3,10,9,9,-2,8,-4,-9,-4,10,6,8,-6],[-5,2,-7,-9,3,6,-9,-8,2,-9,-2,-2,2,-4,2],[-9,-8,-2,-8,-2,10,-4,8,7,6,5,-1,-10,2,3],[1,10,5,-6,4,3,-10,4,-8,10,-9,2,1,-2,6],[-9,-9,10,-3,-6,-6,3,-5,4,8,-7,-10,-6,1,-3],[5,-7,1,8,-2,2,-1,-4,10,10,-3,-4,6,-3,7],[-5,10,-7,-9,-6,7,-1,-3,-7,-4,-2,3,-1,5,9],[1,-4,-8,-3,-4,-8,-9,1,3,-6,4,5,3,8,1],[1,1,-5,6,6,9,3,2,-9,-10,3,10,-3,5,2],[-9,9,8,-1,-2,-4,-10,8,-9,-6,-9,-4,6,-5,-9],[6,-1,9,9,-4,8,1,-5,7,-7,4,1,-6,-7,9]],[[-9,5,-10,-9,-6,-9,1,2,10,-9,-4,2,2,4,10],[-7,-8,10,7,-6,-4,-9,2,10,-1,-8,5,10,-7,-9],[8,7,8,-6,9,-8,-5,-8,8,-1,-9,2,9,3,8],[5,8,4,9,1,-1,1,-7,5,6,-4,4,-1,10,1],[6,4,9,-1,9,8,-2,6,-7,5,-6,8,-3,-5,5],[-10,3,6,-5,2,-1,-4,9,-2,-10,10,4,-3,9,1],[-5,4,9,2,10,-8,6,4,1,-4,1,-4,-3,3,7],[5,-6,-2,2,-9,-9,1,-10,-3,-1,1,-10,-8,-5,5],[4,6,1,-7,5,5,-4,1,3,4,-10,5,-1,1,3],[-8,7,9,3,5,1,-1,-8,8,4,-5,-4,-4,-3,-10],[2,5,1,1,9,1,-6,6,3,-3,-3,-3,9,3,2],[-2,9,-8,-1,-6,5,-2,-8,-4,10,1,-8,-2,2,2],[-9,2,2,-10,-1,3,2,8,4,4,-3,-9,1,-9,7],[1,-8,3,3,10,10,1,-1,-5,-10,8,5,-4,7,9]]], dtype = "uint32")#candidate|2749|(7, 14, 15)|const|uint32
bop_2750 = relay.add(var_2748.astype('uint32'), const_2749.astype('uint32')) # shape=(7, 14, 15)
bop_2755 = relay.logical_xor(bop_2750.astype('int8'), relay.reshape(const_2749.astype('int8'), relay.shape_of(bop_2750))) # shape=(7, 14, 15)
uop_2760 = relay.sin(bop_2755.astype('float64')) # shape=(7, 14, 15)
output = uop_2760
output2 = uop_2760
func_2763 = relay.Function([var_2748,], output)
mod['func_2763'] = func_2763
mod = relay.transform.InferType()(mod)
var_2764 = relay.var("var_2764", dtype = "uint32", shape = ())#candidate|2764|()|var|uint32
output = func_2763(var_2764)
func_2765 = relay.Function([var_2764], output)
mutated_mod['func_2765'] = func_2765
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2782 = relay.var("var_2782", dtype = "bool", shape = (6, 1, 4))#candidate|2782|(6, 1, 4)|var|bool
var_2783 = relay.var("var_2783", dtype = "bool", shape = (6, 5, 4))#candidate|2783|(6, 5, 4)|var|bool
bop_2784 = relay.logical_or(var_2782.astype('bool'), var_2783.astype('bool')) # shape=(6, 5, 4)
func_2158_call = mod.get_global_var('func_2158')
func_2161_call = mutated_mod.get_global_var('func_2161')
const_2789 = relay.const([-7.389121,3.503384,5.050191,0.905958,-0.220083,2.192797,5.682564,5.577177,-0.694776,9.708428,6.868214,3.492648,-9.336389,-6.875032,-2.571781,6.711588,-6.761788,-0.116587,-9.765554,9.714689,-2.253663,-1.694392,1.719648,4.859371,-4.537121,6.230170,-4.101659,7.360555,0.565369,4.718748,3.440631,-3.789665,9.262294,-6.914913,-1.613171,-9.005588,-4.219357,7.236263,-5.109242,1.173387,1.182438,-7.987573,0.208051,-5.485283,7.912192,-7.832836,-7.204085,-6.026359,6.732928,3.641498,-3.091055,-1.797032,3.329682,3.756354,-0.515166,-0.133041,3.548785,-4.719247,-5.142582,4.771048,-5.442939,0.784428,2.591534,-1.502376,-3.902685,-2.802129,5.314825,9.202022,-9.233160,-6.018060,4.435115,-1.950434,6.416796,2.754191,7.558528,-7.908992,-8.321725,2.320474,5.290089,-6.978300,7.778222,7.589112,3.398271,1.532277,1.183110,-7.145936,9.468076,9.756797,5.902214,-9.170068,-5.380560,-6.548886,-7.822487,-1.626540,5.735138,6.393695,5.547555,1.396880,3.963046,9.000287,-4.340719,7.115466,-6.783422,4.428439,1.715145,9.821178,-4.776578,-4.261384,4.083122,-0.386673,6.679204,8.423317,-1.686075,9.009545,-2.619224,-8.025769,3.750546,-5.368590,7.344479,5.506759,8.692028,-0.587547,2.164493,5.521293,2.738720,8.647144,7.213547,2.260057,-7.972282,-9.140164,8.055803,7.525183,-9.302560,2.522323,7.840818,8.799862,0.169770,-7.682034,-4.495252,7.015656,-5.847070,6.034902,4.676031,7.471431,0.718337,-0.490014,6.041304,4.904124,3.310406,4.632306,-4.802931,-6.162151,-9.031103,-8.158809,-9.073387,-8.043219,-4.099998,-0.222669,-0.425858,4.060746,8.650878,2.772529,-9.153932,3.378013,4.093191,-3.232138,2.159792,2.273565,-3.584886,-2.988079,8.849997,9.510359,-4.992731,0.396617,2.988831,6.198325,0.921722,8.838846,3.832474,9.135765,5.741840,-8.397556,-5.597302,-4.195824,8.651668,5.965885,7.385611,7.587451,6.755249,7.763981,2.874797,8.180782,1.276517,-1.173765,4.984725,9.117765,-2.935654,1.634525,5.453098,2.105858,7.083532,5.066449,8.643087,-1.150360,9.202919,5.035648,-5.028877,7.523193,-1.838169,8.852983,-6.594422,-2.210397,-5.952333,1.841323,-7.659599,5.324627,-6.338891,-5.772725,3.521854,-7.113811,-3.379870,6.158860,-7.622524,-8.506641,9.783557,6.015346,-6.081852,-8.288931,1.717251,-1.781135,-8.147208,7.714621,-0.701906,-7.567664,9.875267,9.945889,-5.622120,-5.255700,5.209427,4.974674,-9.346010,-0.354664,8.735136,-7.095395,6.794257,-6.543618,-3.925484,-5.868587,8.862091,-1.859718,1.972255,4.207444,-3.248041,-5.604196,-9.045868,-4.403206,-4.441439,-5.956664,4.880739,5.223906,3.030983,-8.068862,7.279621,6.710744,3.372885,4.215099,5.514321,5.463964,6.668972,9.047369,7.969846,-9.718064,6.483877,5.725215,7.538410,3.518721,-4.977229,-2.714997,-8.692568,2.263230,3.613964,-7.605032,9.286299,2.895636,8.924406,-6.217936,-5.002336,1.992243,2.449389,5.388134,9.114845,-1.878127,-9.355544,4.528327,-5.958200,6.900577,-3.293842,-8.324737,8.218972,-5.735286,-3.372435,3.543234,4.764585,-5.574709,-2.296613,-6.853733,-6.900977,7.578189,3.169511,4.860197,2.735920,-1.770048,-2.285518,6.311857,-3.624838,5.950303,7.528839,5.758892,4.418060,7.395056,3.838083,1.720755,-8.384689,2.354103,3.651761,1.092053,1.577947,-9.352939,-6.563677,5.393215,2.627021,-7.093156,0.219086,-8.231024,7.853292,-8.133509,8.165590,4.340130,6.841219,3.034045,3.002964,6.671250,-3.865314,9.593008,-5.083282,0.629504,8.980905,-6.230119,-3.024207,8.192753,-3.311997,-7.469053,9.048125,-7.461629,-1.369144,3.587902,-9.952034,-7.214464,5.202125,-6.899154,-1.029255,5.577188,6.993754,8.780076,-9.143035,9.078329,-1.594084,-5.965791,1.739432,-0.322563,5.594089,-4.541504,4.704710,-4.929441,-6.662579,-9.233547,2.754475,-5.202967,5.195119,-7.086646,-7.685346,-5.386148,0.322706,-1.270140,8.615088,6.550323,-6.605620,1.542439,-4.071571,-7.000453,-1.506501,-0.570360,8.584674,-3.103620,-3.457005,-5.781710,-1.410208,3.713931,-1.296176,0.934707,9.934881,-5.117323,-1.292397,2.596950,2.428639,5.394531,-8.154964,8.816335,-0.158492,-4.594953,-6.991429,0.777692,8.177112,2.019580,-2.028997,-5.718462,4.321941,6.187570,-6.849830,-0.409681,5.691748,9.642272,0.098485,2.300557,-1.538715,-5.865298,-2.240468,5.414059,8.801322,6.840396,5.074782,7.459538,-9.470303,-7.441780,1.903025,9.580980,-3.325254,-1.360777,7.866288,2.684961,1.357818,5.420275,1.201251,2.178647,6.368985,-5.288513,-9.326132,2.191824,9.818421,9.302995,-5.838356,3.133271,3.110888,7.356753,9.939341,-0.830378,-7.454975,-0.474043,1.332251,-3.290488,4.083723,4.337466,-3.946513,-1.855253,0.529020,-3.871844,-5.546194,-3.802521,6.420452,2.557698,6.237224,0.902228,8.484527,5.304586,-9.385097,3.752703,2.386307,7.724444,6.926105,3.654605,-7.765976,-0.343142,8.525508,-6.444265,-2.928509,3.095440,-5.681845,-9.306017,-8.778576,-4.415664,3.651933,-4.346704,-6.176629,9.015803,-9.938249,-6.051170,-1.362095,3.719646,-7.198822,2.619438,0.994452,-0.046486,8.053217,9.548885,-3.014351,-6.535286,9.417526,-5.513832,3.745131,5.008789,-8.447524,-3.719856,8.638315,-3.404858,6.083494,-3.756869,-6.377385,-5.632177,4.473716,-7.452687,2.645026,-8.913734,5.820356,5.582466,-2.068908,-1.689655,-5.456060,5.918108,6.942652,6.167174,7.771686,9.173774,-6.903393,-7.697763,-6.862427,-7.443199,2.709412,-9.823287,7.504813,8.300995,6.823238,0.341937,-9.025036,1.600834,-5.316095,8.538379,-3.059064,-0.027834,-5.356136,2.962746,0.761202,9.033226,-4.842875,9.735848,8.630987,0.771174,6.808117,-5.087959,8.892476,2.378660,6.190055,-8.104624,7.258089,-6.700491,0.337545,-8.994690,3.657769,5.854511,-2.486369,-4.686765,-7.540985,-9.510133,-9.476582,8.647788,-2.015624,8.772913,8.708924,6.023478,-1.433448,7.726083,2.766910,-4.442305,4.070022,-6.269777,8.164724,5.262299,-9.688192,1.221803,-1.193407,4.910512,1.964612,-5.860106,-5.075381,3.812968,-4.925158,-6.671886,4.123536,-8.499931,-1.691605,-1.965855,2.160055,7.202639,1.399157,-0.777343,-7.435027,-6.871338,6.280628,-4.613317,-3.918168,-2.856025,-4.874334,9.679372,-7.744068,-2.573217,-3.643301,-4.809189,-5.142878,-5.137953,-3.599071,-2.638038,-3.967407,-8.422756,3.012832,1.938072,-9.553801,-0.070994,-1.040949,-2.083052,-5.971017,0.439216,0.113206,-8.076603,-0.819806,0.756869,-8.251297,6.496278,-7.120180,-4.560255,-2.673675,-7.137655,0.301197,-6.317614,-1.077785,-1.307469,3.450185,8.629917,5.712175,5.912524,-8.474453,-8.173959,-7.152711,9.851311,2.318056,-6.800372,6.138348,0.951637,-5.889245,-9.000095,-0.308300,0.455846,5.943348,4.619867,-4.925125,-9.917170,3.873291,3.848721,-0.779956,2.881757,-6.849001,0.760689,-1.424772,5.339834,-0.422992,9.860660,-5.782957,8.694721,4.849263,2.414078,2.398046,0.537469,-7.003180,-2.908469,5.188107,7.553769,6.668161,-9.074866,1.133166,-5.326408,7.244953,-4.056122,-9.167508,0.721679,-8.876990,-8.597880,-3.253699,3.644927,-2.673969,5.573360,4.073921,-9.089586,-7.216885,-7.758068,-5.140538,0.263387,-2.414894,8.328628,0.470675,-0.418341,3.973239,3.339953,-6.199440,0.817037,-5.393961,4.095180,3.664390,2.628284,-4.599474,9.094573,-4.705668,-9.871293,-4.721959,-2.077758,6.552281,-7.784451,8.037047,-3.449611,-1.157861,-1.892340,8.701428,-4.613638,5.763513,-6.932504,1.128692,-9.705187,-1.781520,-1.947391,9.709220,3.198517,8.593905,1.747442,0.592840,3.173513,5.900659,5.560979,3.104568,5.445035,6.542084,-3.284457,2.540632,-3.908479,8.352882,7.978960,0.704061,7.748218,-2.669535,1.291299,4.903780,6.640476,1.822100,3.941681,-3.046467,6.309139,-1.767224,-4.153470,3.723768,6.239944,5.059623,0.840998,4.770379,6.839751,6.974238,-5.130003,0.623813,-8.824575,-3.056321,6.094462,-1.320265,-2.471751,-7.466552,9.758006], dtype = "float64")#candidate|2789|(780,)|const|float64
const_2790 = relay.const([-9,-9,10,-10,1,-9,4,-7,7,8,8,6,-1,4,2,-9,8,3,-6,-5,6,10,-1,2,6,-1,1,-6,-4,2,-10,6,-10,7,1,-1,-5,8,7,-3,-1,-9,2,3,-8,1,-9,-7,5,5,6,-4,6,-7,1,7,-4,4,-4,1,3,1,6,-1,1,-6,1,-8,-3,3,6,-6,8,6,7,5,7,4,-5,-6,-10,-3,-6,9,7,3,-9,4,9,1,-5,-9,-2,10,7,-6,-10,-5,4,-6,-5,-4,8,-4,-8,-6,-9,7,-8,-3,-3,-2,-9,-1,-3,4,6,2,6,2,9,6,4,3,10,-9,-4,10,-9,6,8,10,10,7,-8,-9,-8,8,10,-6,-9,5,-5,9,-6,6,5,-7,9,-10,-4,5,5,5,-5,8,-3,7,8,2,1,9,3,2,9,-1,2,-6,-9,6,10,-8,-7,-1,-3,10,-10,-1,-4,-6,-6,5,-3,8,-1,-6,6,-4,-10,-1,-9,-8,-1,-3,-1,-7,8,-6,-2,2,9,-4,3,10,-4,-6,-4,-1,3,-8,-5,-5,7,-3,-6,-4,-1,1,-8,-7,4,7,-10,-2,4,-1,-5,3,8,2,-9,10,-7,-5,-4,9,-10,7,-7,-4,1,2,-10,9,-1,3,-9,1,5,-1,10,8,-6,-9,6,-6,9,-4,-2,-6,-3,-2,-3,8,-9,-7,-1,-9,2,2,1,6,5,-8,2,-8,4,-9,3,3,8,-10,-4,8,7,3,-7,6,8,8,8,7,8,-7,5,4,9,-4,3,7,3,7,-1,-3,9,-1,9,-10,-3,-9,-8,-2,7,10,-8,-1,8,-3,3,10,-9,-10,8,-7,-9,-7,-9,4,5,-5,2,5,4,-1,-6,-10,3,-5,-1,9,-1,5,-7,6,-2,6,7,-5,1,-9,-8,-4,-10,-9,-3,1,9,6,6,10,4,-3,9,-5,2,7,-4,1,2,-5,10,-1,-3,-7,-10,6,-4,7,4,4,-6,8,-4,6,-8,-2,-8,-1,3,-9,-4,-9,3,-2,7,-7,-8,7,-3,-9,5,-1,-6,3,10,-2,-6,-5,-6,9,4,10,-10,-4,-9,6,-6,-6,-1,4,2,8,-7,-8,3,-10,-3,8,7,-6,7,-10,-1,7,-7,3,-9,5,5,10,-3,4,-1,9,6,-4,-9,10], dtype = "uint8")#candidate|2790|(448,)|const|uint8
call_2788 = relay.TupleGetItem(func_2158_call(relay.reshape(const_2789.astype('float64'), [780,]), relay.reshape(const_2790.astype('uint8'), [448,]), ), 9)
call_2791 = relay.TupleGetItem(func_2161_call(relay.reshape(const_2789.astype('float64'), [780,]), relay.reshape(const_2790.astype('uint8'), [448,]), ), 9)
func_1677_call = mod.get_global_var('func_1677')
func_1681_call = mutated_mod.get_global_var('func_1681')
const_2800 = relay.const([-6.293695,1.311128,9.345109,2.043541,-0.974436,-9.622289,-4.104468,-9.515352,5.852674,9.367273,7.741191,-9.620798,2.892050,-1.976623,-8.201317,0.743631,2.339443,-3.581023,-0.215591,5.702406,1.401271,1.023471,2.398954,0.835131,0.118560,2.096036,1.731239,-1.261680], dtype = "float64")#candidate|2800|(28,)|const|float64
call_2799 = relay.TupleGetItem(func_1677_call(relay.reshape(const_2800.astype('float64'), [7, 2, 2]), relay.reshape(const_2789.astype('float64'), [130, 6]), ), 3)
call_2801 = relay.TupleGetItem(func_1681_call(relay.reshape(const_2800.astype('float64'), [7, 2, 2]), relay.reshape(const_2789.astype('float64'), [130, 6]), ), 3)
output = relay.Tuple([bop_2784,call_2788,const_2789,const_2790,call_2799,const_2800,])
output2 = relay.Tuple([bop_2784,call_2791,const_2789,const_2790,call_2801,const_2800,])
func_2803 = relay.Function([var_2782,var_2783,], output)
mod['func_2803'] = func_2803
mod = relay.transform.InferType()(mod)
var_2804 = relay.var("var_2804", dtype = "bool", shape = (6, 1, 4))#candidate|2804|(6, 1, 4)|var|bool
var_2805 = relay.var("var_2805", dtype = "bool", shape = (6, 5, 4))#candidate|2805|(6, 5, 4)|var|bool
output = func_2803(var_2804,var_2805,)
func_2806 = relay.Function([var_2804,var_2805,], output)
mutated_mod['func_2806'] = func_2806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1620_call = mutated_mod.get_global_var('func_1620')
call_2838 = relay.TupleGetItem(func_1619_call(), 2)
call_2839 = relay.TupleGetItem(func_1620_call(), 2)
output = relay.Tuple([call_2838,])
output2 = relay.Tuple([call_2839,])
func_2870 = relay.Function([], output)
mod['func_2870'] = func_2870
mod = relay.transform.InferType()(mod)
mutated_mod['func_2870'] = func_2870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2870_call = mutated_mod.get_global_var('func_2870')
call_2871 = func_2870_call()
output = call_2871
func_2872 = relay.Function([], output)
mutated_mod['func_2872'] = func_2872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2073_call = mod.get_global_var('func_2073')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_3021 = relay.TupleGetItem(func_2073_call(), 3)
call_3022 = relay.TupleGetItem(func_2074_call(), 3)
func_1915_call = mod.get_global_var('func_1915')
func_1920_call = mutated_mod.get_global_var('func_1920')
const_3044 = relay.const([[-1.377481,-2.428899,3.224178,4.159295,-4.949397,-5.570420,-4.757815,-9.435665,6.090251,-9.277533,-6.305996,-9.518503,2.271874,8.777069,0.085813,5.283819,-1.406055,-2.052321,-2.276641,9.883034,5.912310,-3.127217,-8.901718,9.398259,6.164002,-1.908532,5.495192,4.645564,-2.116746,-8.288444,-7.534959,-6.556696,7.317117,1.422726,-0.956665,-3.927570,-8.516461,7.417834,-3.452429,-7.416389,-8.814261,6.438144,1.853425,-7.241939,-7.387429,0.021902,2.820047,6.970339,6.865397,-5.164482,2.036122,7.545697,-9.369525,1.662094,-2.356738,-4.362236,-5.793572,-3.390958,-7.285805,8.032774,-8.941932,7.717763,-7.128037,-4.632006,8.437953,0.700525,-7.684532,-9.635860,3.489580,5.061978,7.845982,7.833792,7.816020,-3.581975,-9.601960,-1.857870,-9.008408,-9.519875,6.038330,-6.425523,-2.622511,2.593625,5.358092,9.781889,4.363755,-9.084811,-8.169627,-5.200179,6.053213,7.770558,5.897202,-1.708415,7.489756,-1.330817,-2.456515,-3.957034,3.003593,7.719623,5.135961,8.304803,9.616215,-4.658635,3.915896,3.724582,3.804907,1.209752,3.364063,-1.223250,-4.602749,7.324835,-7.690152,1.104872,6.835922,-5.258767,0.176288,-0.634971,7.513354,-1.643504,1.232528,0.655083,-4.241400,3.464096,1.221227,4.779485,0.056284,-9.363375,-4.397773,7.107762,-4.639981,-7.937501,1.927036,-6.267376,3.213637,-3.362267,-3.374148,1.868606,-6.315607,-7.094465,0.890180,9.057375,-7.383237,-5.616481,-4.519749,7.283490,9.633181,-1.456596,-7.399068,4.257288,-1.383510,-4.432370,9.766432,4.654572,6.927156,0.117134,4.003226,1.842543],[-2.385921,-6.312615,1.670370,0.766058,-4.566079,1.485520,-0.405385,-6.200312,-5.979468,-4.637328,2.260433,2.711122,6.275181,5.281044,-3.384265,4.177957,-6.315450,5.588453,5.675822,-0.977915,-4.679586,-2.030139,-2.770151,7.560829,6.785711,-3.354120,-2.996442,0.261323,1.277295,-7.802546,2.016278,-5.899495,-7.897882,3.184061,0.358994,3.111995,-3.030005,-4.377012,-8.238011,7.472504,3.707369,-1.688213,-6.203722,-9.240183,-1.375586,0.532516,-8.329051,8.408909,3.348484,-0.640584,-8.446896,-7.672663,9.615376,0.084056,6.650980,2.186345,8.035838,-4.469623,-0.773853,0.863008,9.846931,-7.413824,-6.746329,-3.290985,6.003459,-4.761336,-4.444742,-7.992388,-7.220799,-1.981156,-8.512782,-9.248085,2.029693,9.029452,0.866557,9.287493,8.631298,-8.881631,8.948374,3.215984,6.749005,0.778151,9.421072,7.559053,8.282619,0.170122,-9.894521,7.387425,-2.643801,9.069263,3.749349,-4.935341,-3.952149,2.045546,-6.845970,-2.541126,-3.594752,0.777061,9.294774,9.785834,-1.577084,2.347890,5.666992,5.509549,0.963686,4.465337,1.550738,-1.061710,3.839327,7.408977,-7.014472,8.370680,9.764774,-0.671048,-7.528670,-7.236895,-8.613375,3.658067,-6.130739,0.145568,3.814853,8.829970,0.364651,-4.466677,6.072075,-4.913907,-2.136465,-9.446825,-9.537149,-3.277694,2.882760,-4.040951,-3.364431,3.194371,-0.609165,9.470756,4.381187,-8.854311,-0.745980,2.276920,-5.578983,5.727492,-2.698883,8.761818,0.041394,1.455508,-8.740604,-5.315680,3.413144,5.918067,9.842882,2.402464,9.137648,8.865918,-1.108317,9.526290],[-9.207810,2.731048,3.417961,9.425629,0.654542,8.307915,-0.070203,-0.044696,8.229129,3.988423,-7.345875,3.433837,-7.658346,1.870513,-6.979807,-7.606819,-3.366690,6.394058,-4.190424,-2.739738,8.220640,8.948311,4.765531,4.857946,5.844103,3.824200,0.735960,-2.245751,1.943936,-5.695378,-8.916749,-2.181238,8.452099,-8.560349,9.298800,5.262012,-0.055704,-7.009181,-4.404126,-5.405785,6.896163,-5.750567,3.245295,-5.088013,-0.962254,-8.565698,1.883330,1.177975,-3.611032,-1.308163,-3.987178,-6.467289,-3.630344,9.767022,-0.100538,1.049461,5.550029,-8.029472,-4.040281,-8.778371,5.029969,4.837478,3.736590,9.838449,6.278190,3.201791,9.955989,-6.074238,1.084858,0.106369,-0.087456,1.802785,-8.273641,-5.226729,-4.742413,2.434231,7.502640,4.885014,-8.321224,-8.369725,-3.230999,9.588971,1.773162,-0.337634,8.865098,-1.708317,-7.639775,-4.247413,2.956119,4.423178,7.623837,9.406661,8.113701,1.866561,-3.734730,0.639746,-9.201507,-2.137923,2.012765,-2.925332,-0.869631,-2.234737,-1.895031,5.143702,5.999013,4.985604,-7.707363,3.966874,2.128507,3.835763,-5.930927,0.282448,0.595981,-2.681816,-0.207052,-5.168373,8.172656,0.754927,4.185491,3.822869,8.636560,9.526550,8.195901,4.491391,5.623861,-1.468538,-1.418551,-1.186179,-6.501451,-7.426942,5.761636,1.880073,5.695044,-8.571504,-9.632244,9.196239,9.386248,7.509537,7.548737,3.837286,3.415438,-3.864252,4.221328,8.122278,8.073818,-5.019158,-6.582893,3.499244,-7.301066,-7.594432,9.783709,-8.536825,-4.568561,0.542820,4.472025,5.545186],[0.020825,-0.419186,-1.762591,-0.391470,1.881207,8.027700,-3.969757,3.224361,-3.386709,2.476265,0.435438,-7.443124,0.590927,4.596003,2.423030,1.922227,-6.844471,6.972435,-4.824069,-6.170886,5.745471,7.667648,-9.894457,-0.923786,6.415415,-7.395768,-2.946092,-1.422253,-2.395427,-1.441195,-2.399803,-5.775955,5.196617,-7.895724,5.487397,7.646100,-7.429709,1.140721,8.061578,4.778065,8.995575,6.618400,1.361002,-4.490677,5.414849,0.751348,-1.555838,-0.570004,6.887779,9.042019,8.771103,8.465055,-3.496992,-3.472620,9.089759,-3.822984,9.266499,-5.391058,9.982100,-0.636864,9.470981,2.471498,-3.564535,2.791283,-9.262676,-9.948290,8.038764,2.918588,-5.318871,2.454410,0.338545,6.321438,5.713770,7.608550,-3.835635,5.143230,5.248431,1.171287,-7.909950,-3.242284,-3.338513,-1.231030,-0.857938,1.349730,9.782607,-3.020408,-5.274604,2.767534,7.090027,-1.001618,-7.395753,1.318237,-2.053479,7.465476,5.226812,0.134342,5.010970,1.413104,7.515222,-4.479680,7.972128,-1.496185,-4.649815,9.289137,-4.401155,1.936313,6.160776,5.991433,-5.496884,-7.406851,-2.503356,5.175059,8.827962,3.715964,2.260641,7.991183,4.276328,-1.426439,7.769421,1.593328,1.844803,1.397495,-5.878386,0.340288,9.222578,-7.464802,2.216797,2.831288,7.121495,-3.829778,9.848296,2.014371,1.886465,-5.170740,-1.421254,-5.425273,3.817895,-2.240896,-0.838925,-9.453148,-4.203613,2.136809,-3.946531,-6.006259,-0.274964,-5.789128,8.021727,-5.284008,8.063366,5.619393,-5.285611,9.924855,8.409954,6.718750,1.311605,-8.082327],[7.546241,-1.073789,-0.510101,6.322997,3.184726,-2.294422,2.263752,5.241406,-0.094434,-8.827152,-4.198185,-4.901771,-2.804525,-4.271469,6.293215,5.165881,-2.454572,-6.914910,-9.154487,6.011922,0.993002,-1.877429,-0.538926,9.884660,8.951721,-1.292686,4.626404,4.367078,-1.264311,-9.621822,-5.695264,-4.173888,3.518569,-6.173266,-2.132975,0.358783,6.866059,8.510400,8.286646,-0.601545,-3.903287,-9.953417,2.396713,9.360062,9.401883,5.362658,1.207419,8.267059,-5.466525,6.222082,5.635327,-4.228553,-5.767886,5.341851,-2.498676,-5.529261,-6.991542,0.556373,5.005929,4.753665,-2.240490,-5.799662,6.116845,-6.507661,7.291988,-1.257734,-4.708012,-9.863076,-8.448565,-5.194229,0.342392,-8.452927,2.466141,-0.380197,-8.487838,-7.839329,-0.187035,9.660921,-5.851769,-0.517390,8.378032,-4.728326,1.603789,-5.888519,-6.352028,1.369654,-7.282383,3.692059,6.527384,-2.595207,-7.066697,-8.423626,6.939882,-2.319498,7.705500,-7.842394,5.601145,-9.309086,4.559890,3.478393,6.864290,0.116874,-3.064032,6.091475,-7.083842,2.234613,-3.135584,-3.627904,6.446132,2.119995,3.734938,9.983905,0.871101,3.812929,1.308736,-4.819519,7.485511,-4.856306,1.423208,4.019319,9.690038,-4.789215,-5.276281,2.356897,0.253058,-3.099341,-9.535964,0.047675,3.634748,-7.940623,3.294324,2.982033,3.900137,-8.963226,-3.475803,-4.916164,2.040006,5.876464,9.313455,6.862011,-1.675149,7.792359,-6.856597,-1.583110,-3.810097,-0.011462,5.396636,-9.519970,7.142066,7.076497,9.197446,2.362793,-2.859893,-2.387941,7.934248,-9.760122]], dtype = "float64")#candidate|3044|(5, 156)|const|float64
const_3045 = relay.const([-4.391484,-8.426434,8.028510,1.155121,-2.384401,1.012086,-1.018604,-9.889656,5.230955,-7.268554,-2.606897,5.225460,5.981790,7.771287,-3.512891,-9.729528,-9.238590,0.115868,6.985125,0.284047,5.218117,6.984403,7.368822,9.804213,9.548489,2.386747,-7.683632,-0.478318,-9.950100,-3.213539,-9.845037,0.100847,4.734495,5.312929,1.921416,8.686874,3.242924,-2.429008,-3.213561,9.717184,-3.638463,8.378355,7.898541,-0.879391,5.114738,6.735642,-0.160435,-6.430790,2.870760,-7.836999,4.547515,-0.884041,-1.998795,4.103786,-4.852858,-7.407640,5.891274,8.520759,-9.354499,-7.373865,-1.265074,3.047385,2.102729,0.158099,5.443488,7.023410,0.929941,6.080927,5.741436,-3.158148,1.200679,-5.982326,-9.826850,-7.425172,0.988289,2.501300,-7.494986,-2.748988,-0.789985,-8.452191,0.380532,-9.889230,7.190751,6.438096,4.579059,7.685838,-3.295337,0.690595,5.264767,1.684649,9.998677,2.639517,-4.664454,5.149487,5.757655,-5.534609,1.848039,5.052897,3.631242,8.897925,-8.233611,5.176007,-8.117761,9.849308,-2.715796,5.985616,2.195304,1.637452,-6.485192,7.676683,4.411833,1.718062,-5.975784,6.546113,4.836446,-2.586083,8.342152,-3.072160,5.412455,-9.931013,0.205899,2.236823,-5.293342,-5.903476,6.073721,-2.745907,7.230104,2.643210,-6.676147,9.221462,-4.286284,3.125914,-3.020970,7.368338,9.530936,6.378241,2.804618,-6.009254,-1.317587,1.623733,-7.071759,-9.408713,2.414029,1.990241,-4.832514,8.020834,8.541558,9.736379,-0.571855,8.910223,-9.474775,-0.126701,0.820479,3.678357,4.453011,3.378962,-3.170825,-5.213513,3.675541,8.136105,-1.302830,-1.157165,6.841498,5.294278,5.085613,9.799051,-8.614814,2.241391,-1.207446,1.699469,4.010247,8.889893,-0.918378,2.858733,-9.086681,5.866557,8.679712,-8.491002,7.498249,0.294108,-9.851266,-1.329279,-6.108619,-6.017808,-2.286817,8.130504,-4.910042,3.279051,-6.907092,-9.625212,9.498062,7.631496,-6.810649,8.001924,-3.687413,-9.365453,-7.513613,7.293304,-9.836794,1.109536,4.138549,8.085453,-3.856923,-0.233589,5.164239,8.839604,-4.768705,-2.034695,-5.208924,4.784791,-4.975158,0.037834,-8.944481,4.639433,-1.621701,-0.635044,0.401615,8.213845,-7.467419,-2.220240,-5.679474,5.293205,0.748156,1.611862,7.334541,-3.242952,-1.269306,-8.659914,-3.953185,-7.076139,1.638132,-1.143421,-9.676307,-6.782980,8.964846,-5.113293,-6.870030,-0.349802,2.281177,7.312582,-9.013217,-6.311023,1.708531,-9.057490,5.453794,-4.620139,4.392551,9.096704,-4.802276,-4.352034,4.997893,5.543541,-9.386292,4.371524,-0.727178,5.109241,-2.625058,5.192097,-2.347580,3.019329,-7.747432,-3.893270,-8.748150,8.905437,9.346532,-5.795342,8.617818,-0.675751,0.769352,8.582586,-3.087019,0.688087,0.554241,-9.401901,-9.629829,0.006432,9.800095,-8.876660,2.507584,-0.992702,7.523285,6.572870,6.548482,5.982560,7.841038,-9.752700,7.805486,-9.674547,-0.631507,-3.061922,-7.814517,-7.214291,-7.905875,1.856970,-1.356787,-8.034087,-5.041882,-5.601785,-6.441256,5.570805,4.542805,9.370165,7.419538,7.761546,7.152465,-0.567521,3.289676,0.842761,5.171198,8.106514,7.477920,0.803238,-7.869270,3.965732,6.088794,-3.895472,-9.750067,2.668548,-9.236637,9.061911,8.633316,9.753163,-9.855159,-6.494992,-6.797407,-2.925009,0.337177,4.174446,1.770855,-7.061987,5.211979,0.389273,7.209042,2.089050,7.216916,6.726954,-4.300094,0.017233,2.580217,-1.763743,-5.585579,4.247556,9.696731,9.747646,8.743360,3.562513,-8.702982,-8.655055,-6.644316,4.253353,0.662679,-9.229835,-0.714618,-5.008006,2.443986,9.684389,1.185586,7.239555,7.475632,-5.105684,0.697339,-1.184836,-3.354516,7.872060,-5.724714,2.049865,4.049971,-4.826057,8.644107,4.470419,8.343157,-2.153047,-2.804261,3.382553,-5.237458,-2.387302,-8.180287,-4.324756,-8.327764,2.498560,-1.818817,-1.568235,-9.913110,6.351711,4.945410,-0.351775,4.261634,-7.139229,-2.491575,-5.635990,0.470035,-5.068401,2.688884,-0.292556,-4.360884,-0.235183,-0.337366,-4.519275,3.004955,2.645760,2.775053,-8.573367,-2.726533,-6.980096,-7.084118,-2.193857,0.799861,9.232686,8.128966,-8.172606,6.570004,-0.248472,1.697127,-4.829867,5.157230,-3.933804,2.619160,6.115904,1.944055,4.279147,-2.679388,5.767677,-0.325579,-0.131573,-0.049623,-2.699455,-7.941596,-6.090559,7.942591,-1.214048,-2.790174,2.476386,5.353379,2.080229,-6.974356,9.522907,-2.671090,2.926087,8.337219,-6.616342,-5.584531,-0.329866,-2.580577,8.082879,4.573966,-9.368768,-8.645778,-3.547201,-8.329106,-5.153190,-5.040757,-2.288096,-9.144246,8.432669,2.143312,7.001434,-0.961566,-2.175488,-7.346198,7.532946,-7.763504,5.872826,2.867225,-9.687885,-1.656753,6.160742,-8.784388,4.632934,9.744590,2.379049,8.201791,-2.658898,-8.487476,-8.591529,-1.966324,-4.438603,7.286974,7.563428,9.514343,-1.546673,-1.204087,-0.283771,0.581845,1.890968,5.077497,-9.596262,-3.916996,-3.267610,4.001159,5.670183,-6.251264,-7.746576,-2.866828,6.977952,-6.174255,8.139032,0.252289,2.691825,0.768905,0.705452,1.153061,6.799109,-6.330460,-7.272498,-5.658399,-5.873291,-3.782755,-1.448904,-3.347375,-4.197805,-5.444792,-4.106894,-8.427769,-3.879744,-8.391286,-1.619324,0.106428,2.932813,3.639324,-4.355192,-4.030753,4.836327,1.602815,7.546185,6.169070,-9.900122,4.751721,0.481390,4.978571,6.474527,9.778200,3.982380,-7.085693,-3.551778,3.998309,7.484330,9.870734,-7.394697,4.570136,0.076688,0.609179,-2.135076,-8.874938,-4.818939,9.205916,3.671808,0.229916,-1.373259,-5.131248,-8.136295,4.132700,4.415280,-8.695486,3.375473,1.073097,-3.205551,6.090362,1.583813,-3.836731,0.776410,7.759881,-8.093447,5.471504,-2.611496,0.224360,3.619302,4.656320,-9.871135,-8.430780,2.279492,-0.837067,0.349526,-7.694505,7.341933,-6.150913,-4.020661,9.773634,5.673513,6.621118,-6.120184,-0.281165,4.208987,-0.986700,3.615051,-9.607616,-3.825493,-0.506097,-1.954982,-3.224988,6.827751,-3.649440,6.033458,-2.699167,-9.722498,-0.010561,-7.864622,3.010908,-5.560549,3.273540,-3.845429,-4.689089,-3.330499,-2.289311,5.728740,-7.883701,-1.784557,5.618481,3.928951,-4.825767,5.627710,-9.850694,3.098278,-0.825596,-0.430291,5.003442,5.998051,2.543095,-9.941440,-6.274424,1.771710,-1.070691,6.791265,5.222190,3.070865,-0.750388,-1.638513,-8.443608,-1.646748,-1.926602,5.032738,-8.311687,6.887894,-3.020379,0.645311,-5.471715,-6.711527,-4.890413,-5.877360,-2.219654,7.505730,-4.588214,1.036656,0.131106,3.478932,-5.382579,5.240517,6.691648,3.084221,-3.250521,-9.266908,3.517064,7.493295,-0.219790,2.059526,9.466082,-0.200757,-2.041292,2.442743,3.267576,7.195668,0.679279,-6.166082,-4.032357,-3.127689,7.542760,7.234999,7.975820,-0.032583,-7.994767,-3.011506,0.769429,3.472833,6.760255,0.739125,-7.654944,-8.537978,-6.901602,-6.947639,-4.300671,9.549064,-4.922223,-8.746580,-6.036623,4.899723,-2.539308,-1.149273,-3.835282,-4.599013,-5.983727,3.966321,-6.841331,-7.264637,-3.062756,9.299333,-3.247344,-4.647053,3.121113,-5.871526,-8.611188,-4.854518,-8.296281,-9.525594,0.838163,-4.451240,-8.236649,-5.610394,9.447356,7.369779,0.658737,5.117066,-7.034343,-7.124702,-5.810523,1.977399,2.200329,-3.627245,-0.964545,-7.058439,9.989822,-4.155054,-9.264873,-1.124205,2.279132,-9.979608,3.423427,-6.032741,5.574243,1.115544,-9.781988,-4.578835,4.836080,9.164939,4.053803,0.697844,-4.451461,3.641748,-2.442786,-4.820336,9.866746,-9.874976,-4.005766,-7.441225,-8.138323,-4.437546,-6.636192,-6.848430,0.534378,-0.709643,2.728248,9.845714,8.803084,6.457700,-5.797231,6.093066,-0.166021,-5.961849,3.245855,-0.524254,0.336253,-3.242649,-5.426940,0.440112,-2.384555,-4.903596,4.222740,8.384700,-8.899240,-7.767418,-4.876635,2.199248,4.878365,-0.684808,-6.492158,-7.501583,5.699504,-1.849004,2.785166,4.449258,2.488299,-4.717156,2.134717,1.626033,-5.486818,-2.624594,9.958293,7.311708,-1.836381,9.974309,-8.621331,-3.066947,-6.930846,7.706190,-2.275675,6.567137,7.630287,-0.414266,9.561068,-0.185068,2.065810,9.009334,-3.467982,8.137484,-2.600345,-5.047658,8.400893,-4.279027,6.478678,2.892393,-0.699794,6.195421,-0.861215,-6.054244,4.493629,3.717988,2.938329,7.555474,9.669785,-1.663433,-8.755843,6.502964,4.647026,7.618897,4.635218,-2.359196,-6.981198,1.673029,4.567188,-2.732302,8.531182,5.090118,-9.884194,-2.564995,-8.045730,9.194202,4.536313,-1.222606,-4.645253,8.919713,-1.062048,3.001797,4.455903,-1.264675,-0.719402,6.105253,-6.596046,9.947864,-5.737660,0.825024,-3.786334,4.041794,7.864054,4.097774,8.739912,2.051261,-9.413615,-6.792003,-3.290981,3.742842,-1.530822,-0.666350,9.693646,0.907887,6.766145,-1.726978,-0.555125,-7.684633,0.882082,2.762745,-3.370469,2.825084,-1.887537,3.473845,-0.778452,7.680532,5.182225,4.284060,3.226801,-2.187878,8.998589,0.268512], dtype = "float64")#candidate|3045|(880,)|const|float64
call_3043 = relay.TupleGetItem(func_1915_call(relay.reshape(const_3044.astype('float64'), [780,]), relay.reshape(call_3021.astype('float32'), [22, 4]), relay.reshape(const_3045.astype('float64'), [11, 8, 10]), ), 6)
call_3046 = relay.TupleGetItem(func_1920_call(relay.reshape(const_3044.astype('float64'), [780,]), relay.reshape(call_3021.astype('float32'), [22, 4]), relay.reshape(const_3045.astype('float64'), [11, 8, 10]), ), 6)
func_2250_call = mod.get_global_var('func_2250')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_3052 = relay.TupleGetItem(func_2250_call(), 0)
call_3053 = relay.TupleGetItem(func_2251_call(), 0)
output = relay.Tuple([call_3021,call_3043,const_3044,const_3045,call_3052,])
output2 = relay.Tuple([call_3022,call_3046,const_3044,const_3045,call_3053,])
func_3055 = relay.Function([], output)
mod['func_3055'] = func_3055
mod = relay.transform.InferType()(mod)
output = func_3055()
func_3056 = relay.Function([], output)
mutated_mod['func_3056'] = func_3056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1620_call = mutated_mod.get_global_var('func_1620')
call_3158 = relay.TupleGetItem(func_1619_call(), 2)
call_3159 = relay.TupleGetItem(func_1620_call(), 2)
output = relay.Tuple([call_3158,])
output2 = relay.Tuple([call_3159,])
func_3166 = relay.Function([], output)
mod['func_3166'] = func_3166
mod = relay.transform.InferType()(mod)
mutated_mod['func_3166'] = func_3166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3166_call = mutated_mod.get_global_var('func_3166')
call_3167 = func_3166_call()
output = call_3167
func_3168 = relay.Function([], output)
mutated_mod['func_3168'] = func_3168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2561_call = mod.get_global_var('func_2561')
func_2563_call = mutated_mod.get_global_var('func_2563')
call_3182 = relay.TupleGetItem(func_2561_call(), 4)
call_3183 = relay.TupleGetItem(func_2563_call(), 4)
func_693_call = mod.get_global_var('func_693')
func_696_call = mutated_mod.get_global_var('func_696')
call_3202 = relay.TupleGetItem(func_693_call(relay.reshape(call_3182.astype('uint8'), [4, 8, 14]), relay.reshape(call_3182.astype('uint8'), [4, 8, 14]), ), 0)
call_3203 = relay.TupleGetItem(func_696_call(relay.reshape(call_3182.astype('uint8'), [4, 8, 14]), relay.reshape(call_3182.astype('uint8'), [4, 8, 14]), ), 0)
output = relay.Tuple([call_3182,call_3202,])
output2 = relay.Tuple([call_3183,call_3203,])
func_3207 = relay.Function([], output)
mod['func_3207'] = func_3207
mod = relay.transform.InferType()(mod)
mutated_mod['func_3207'] = func_3207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3207_call = mutated_mod.get_global_var('func_3207')
call_3208 = func_3207_call()
output = call_3208
func_3209 = relay.Function([], output)
mutated_mod['func_3209'] = func_3209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3055_call = mod.get_global_var('func_3055')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_3247 = relay.TupleGetItem(func_3055_call(), 1)
call_3248 = relay.TupleGetItem(func_3056_call(), 1)
uop_3258 = relay.atanh(call_3247.astype('float32')) # shape=(56, 8)
uop_3260 = relay.atanh(call_3248.astype('float32')) # shape=(56, 8)
uop_3261 = relay.sqrt(uop_3258.astype('float64')) # shape=(56, 8)
uop_3263 = relay.sqrt(uop_3260.astype('float64')) # shape=(56, 8)
func_2073_call = mod.get_global_var('func_2073')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_3268 = relay.TupleGetItem(func_2073_call(), 3)
call_3269 = relay.TupleGetItem(func_2074_call(), 3)
func_1976_call = mod.get_global_var('func_1976')
func_1982_call = mutated_mod.get_global_var('func_1982')
const_3293 = relay.const([8.831055,-4.519462,-0.382621,-7.363493,-6.088092,-4.704040,-7.242888,0.313953,-5.267434,8.703390,-8.766478,-4.741817,-2.807862,-1.272999,4.426645,-7.847147,7.392266,-6.136563,7.648960,-8.987324,-6.940563,5.307364,-5.787395,4.428459,0.940687,7.530621,-9.837982,3.615030,-9.162456,-8.640613,8.459505,-5.077254,7.519419,-5.996310,4.719656,-9.342484,0.668662,3.675773,-1.358911,-6.324437,1.438702,3.371107,0.523516,-0.054921,-7.926856,-8.763749,1.960429,0.824883,2.793371,5.573207,-6.207760,-4.547442,9.197539,3.675905,-0.793752,7.847927,1.393777,-3.858197,-2.672930,-1.210089,2.192698,-5.139446,-0.579623,-9.298859,2.823808,-6.714221,6.650649,9.954550,-5.640769,2.760810,-2.701332,-3.274073,3.548272,9.442144,1.763994,4.605987,-7.241766,0.942694,7.624067,-8.135991,5.360218,-5.740775,4.027780,3.491739,-2.825059,6.650875,-1.402869,6.534331,-2.396528,6.398729,-8.180452,-2.679926,-1.209367,6.196883,1.962393,-9.976003,7.470804,-4.773762,-6.756941,-4.624324,-4.586611,8.103333,-1.330820,-5.523729,8.634234,-7.278445,-4.028441,-9.721952,7.753532,-7.506530,5.891020,0.194556,9.836886,-0.357193,-7.542442,3.991769,-2.783266,0.580120,4.782923,9.398523,4.158870,-9.161674,-3.116208,-7.443485,8.312249,0.846825,1.547341,0.233362,-9.928378,-5.799658,-8.347159,5.514461,-6.688179,0.230990,-6.939454,6.368552,7.961538,-2.006472,-5.781736,0.481673,6.464177,0.750469,6.717598,-7.600206,-6.004245,-7.618566,-7.863849,7.894509,-7.129870,-2.525046,9.462849,-1.753476,0.384471,-9.830926,6.872568,0.975983], dtype = "float32")#candidate|3293|(156,)|const|float32
const_3294 = relay.const([4.493411,-6.758703,8.310858,0.689448,-7.886375,4.331103,3.289689,-7.153855,4.460703,-1.415578,0.967314,7.843528,-3.293690,8.635651,-2.233628,2.010756,-1.864031,3.153289,-7.433711,-2.308937,4.874491,5.577151,-4.817599,-0.271514,-1.519840,-1.260822,4.315269,-8.585249], dtype = "float64")#candidate|3294|(28,)|const|float64
const_3295 = relay.const([9.060521,-7.620653,0.255398,8.216480,-0.874965,-9.150290,4.239448,-1.360811,5.845236,-0.455629,3.409013,0.982710,-9.216579,7.935690,-4.899431,8.139691,0.422879,0.433305,-7.043770,2.290141,3.650964,-5.010409,0.450090,-0.543389,2.436557,-8.277338,8.335091,3.117805,-6.095880,-0.436009,-0.571147,-1.444952,5.030021,-7.805351,-4.399941,-8.026179,9.629246,-5.029928,-2.587142,2.881131,9.326397,-8.580245,0.808621,7.922786,-9.463733,-0.787709,9.464975,5.900951,5.256444,-8.893123,3.489828,9.688163,7.933480,5.378631,-6.861195,-7.052810,0.669223,0.478681,-8.106235,-5.973339,-2.198253,5.456935,7.404805,-1.041610,-6.233553,-8.124534,3.016861,-1.840862,3.383017,-0.582765,-5.063176,-7.506206,-4.823483,1.513797,-6.602911,1.890893,-0.809218,-2.415739,9.046985,-7.111470,-3.633767,6.160296,-0.719957,-3.424936,-3.067634,-8.904496,6.103781,-5.883198,-1.230167,8.247749,4.035424,7.682653,6.255375,0.392850,-8.230551,8.960777,-1.140603,-7.501176,-5.485463,-2.215819,-2.936682,-3.167896,6.206764,0.374902,-1.588445,-9.339497,0.985235,0.123199,-5.355691,-1.683137,6.846488,4.724708,-0.712948,-3.614962,-9.323309,7.660661,2.599263,2.981814,-7.596218,-2.726321,3.885361,-8.404774,-0.009051,8.265221,-6.716334,2.726623,8.213181,5.370802,9.189862,3.587430,5.802643,-3.010342,-0.907025,2.039834,-0.046363,9.129223,1.018518,-4.004806,9.821370,-1.299262,4.933745,9.335336,-5.221534,4.287348,5.666492,8.619159,7.005392,5.920792,9.850837,1.244405,4.798774,6.707995,-9.689960,-1.173836,-0.567580,-4.309363,8.983975,-8.884465,-8.278855,0.851247,-7.305424,-8.583610,-2.387162,6.305109,7.165175,9.943764,8.315213,5.120213,-6.916998,-1.241798,-3.031031,7.446729,-5.318462,9.817917,1.222232,-0.880780,2.306637,7.391699,8.140852,-5.067127,8.150849,8.563593,-3.377453,3.973971,-2.793816,8.471551,-7.972777,-3.736484,7.797215,7.870375,-2.796952,-9.064304,2.786385,7.907288,5.566393,2.959306,7.657027,8.073163,3.310755,2.412734,-7.676044,-7.943926,2.896014,-5.092660,-7.908347,3.406772,3.945567,-6.874515,5.861338,6.209569,2.817743,-0.898646,8.346482,2.613218,-6.336945,0.639666,8.662723,6.937809,-3.355233,1.839145,7.667861,-7.150905,5.825262,7.971817,-0.248173,1.879290,6.653836,8.674640,4.243309,1.599023,2.092837,7.330562,-7.624140,9.694495,-2.055797,0.220572,8.806701,-3.018248,3.380905,0.170042,7.973013,7.088859,-8.125197,4.338928,8.844173,1.866035,1.194421,-2.722882,6.202646,3.211033,-1.472199,-9.505187,-9.865909,-2.739078,-5.034671,8.682049,-6.545971,2.675228,1.232661,2.520335,1.490457,2.446630,1.279459,7.039242,6.040496,-2.395392,1.944514,6.266779,4.010413,6.820186,-3.252164,2.426262,-4.832438,2.968524,-4.277406,-4.578528,-3.356558,-3.924126,4.670011,-7.159658,-2.281265,3.818829,4.746503,0.973639,-8.402068,5.690991,-3.965397,-4.384398,9.554988,-1.244063,-1.350077,3.470614,3.588033,-5.952676,7.390901,9.317520,9.877555,-4.626415,-9.568933,9.490484,-5.695374,9.107992,-4.202250,0.481185,3.473885,9.037953,3.010187,-8.641667,-2.070229,9.604333,-9.369191,-2.240984,7.622741,-3.782188,-6.187968,7.717665,-6.742505,5.706427,-7.627514,-4.728239,5.521032,6.523510,6.205320,9.684487,-2.057844,3.539345,0.863355,-1.661721,-0.838373,-2.988926,-6.662495,-8.342207,-0.341881,3.906331,-2.656356,6.668757,0.585782,-6.200660,-2.060900,2.069485,7.562372,4.157982,-2.245124,9.836591,2.700679,1.546162,9.654193,-1.896901,-3.472214,-5.828454,-3.410315,-7.566087,-4.274203,-1.437538,-9.952575,4.832061,-9.647580,-1.317854,-1.602974,-3.000828,-9.540135,-4.345440,8.394984,1.909878,-6.230145,-2.482490,3.499314,5.405754,-7.972280,8.157129,9.585870,-2.494546,9.207292,-1.958459,-4.683278,1.445563,-9.658561,4.514581,6.253433,3.869404,-8.438259,-3.913592,-7.582480,-5.551381,4.350059,6.616860,-0.927407,-9.804540,8.604519,-2.292939,3.008241,-8.244752,5.182120,1.498893,-0.451449,-6.227717,3.457686,2.338710,-0.867051,-5.731699,0.136355,-4.913194,7.283390,2.442164,3.950388,-3.613955,-2.889631,6.322661,-4.858434,-3.059504,6.898343,-5.258939,9.885567,3.377493,6.700634,1.477528,5.194693,-6.495160,-6.542614,3.081520,4.833185,0.656164,-1.463275,9.059658,1.123450,-2.007981,2.767771,6.575661,-5.485998,-9.167148,-8.535487,-1.955651,-9.170809,-9.598951,-0.693896,-9.724874,-8.852341,0.733208,-0.113613,1.169016,-8.639349,6.481386,-8.666482,-9.299162,9.537576,-8.441918,-6.998258,8.333926,-3.109467,-6.907843,-3.311383,-5.729420,-1.844770,8.899352,1.265394,-5.847153,-2.708940,7.964751,4.275052,5.562666,-3.610185,-7.793800,-8.614370,1.773625,-2.045522,-6.695389,7.719321,3.514705,-2.060828,-0.064144,7.166875,-3.841995,-1.443026,0.342462,8.212923,-8.110894,-6.202637,6.228132,3.441243,8.030928,-1.084998,-4.231039,3.843737,4.770901,-3.104036,0.534290,-3.300149,-2.901710,9.765418,-4.546495,-1.145197,-2.516453,-9.101254,-8.372106,3.203245,7.019770,9.692548,0.608332,0.634956,-2.594736,-1.074005,4.108938,5.186877,-2.715187,7.103246,-8.942567,8.190347,3.091322,-2.471341,2.630433,1.178080,5.868760,-0.844751,7.363100,9.645280,-7.769044,6.537924,-7.190352,9.010205,3.911995,-2.853062,-6.248040,2.917044,0.507120,7.874039,4.557488,1.660628,9.120036,0.962963,4.881451,2.334605,-1.031615,2.640367,0.233018,0.013813,-6.564612,-6.090258,-9.948802,-0.551695,3.684436,-2.937821,-6.137598,4.320844,-8.890955,8.773077,6.697062,2.824866,8.835987,2.932138,3.694820,-5.126819,-7.558590,-5.208569,-4.556573,-8.372291,2.923584,-6.564394,-2.976140,4.942797,-1.629338,-6.995579,5.467487,3.097635,-6.041351,-5.557316,-2.023713,0.078310,3.056027,6.424238,-3.920585,-6.917768,-6.665220,-6.106941,-2.677955,3.312021,-8.590158,3.751026,2.477934,-5.184729,1.993335,9.197183,9.731951,-2.859578,2.227103,-3.133775,4.208547,0.764684,5.568004,-2.077477,2.662159,-7.264423,8.586696,-7.991116,2.146363,-7.665491,8.338050,-1.911385,3.561259,4.048458,-5.590544,-4.065337,-9.413824,4.424421,9.885542,-2.950607,-0.610881,-9.663695,-7.129280,-4.717592,-8.163746,-0.822707,6.344285,-1.202725,4.696410,4.952057,-9.287167,4.569699,9.171981,-9.883516,-3.060076,2.918118,-3.252643,-4.704540,-7.959940,-5.448000,9.971629,-3.444521,2.313155,3.364228,2.792197,-9.736029,1.406134,-7.577604,-6.242575,4.879446,7.989561,0.104421,2.639583,-8.306772,8.459045,-7.507911,3.740355,5.697929,6.467299,4.098239,8.996434,-7.999953,7.550904,8.541490,-3.565612,-1.379365,6.132154,1.369062,3.858401,2.588658,-8.246207,-6.738048,-6.767529,-1.107061,-6.123189,-8.897912,1.472560,-3.564249,-6.423743,-2.496654,7.929275,-2.916847,2.212653,3.313933,-5.466471,4.525258,-0.455835,-4.993018,4.633561,-8.037483,6.389131,4.911456,-0.037045,7.719557,4.627381,8.423903,8.237834,4.810382,1.716235,0.719021,4.992586,-3.198432,-9.757294,4.800616,3.513911,-2.821688,-5.952612,3.857440,6.582173,8.942831,-0.632362,4.872625,3.660611,-9.452043,7.078419,-1.875208,-9.426703,-7.488459,8.925635,-6.001067,-5.400477,4.745565,-1.344491,6.856543,-2.817827,-7.117895,8.495018,-0.231897,9.099906,8.266480,-7.936326,6.309416,-9.761763,-3.678516,8.417908,-7.958690,4.767287,4.494421,-7.493545,4.309042,0.501702,6.869197,-4.592028,6.265130,4.781455,-2.970459,-6.225387,-0.744957,-7.796346,2.750095,-3.653993,4.116830,5.743044,3.213576,0.025796,-6.659445,3.110168,5.287869,2.568711,8.721210,5.728049,3.704660,2.841425,-6.744346,-8.532241,-9.484592,5.996268,-8.040259,-9.409658,-8.819585,-2.636765,-8.499637,-1.215831,2.845903,7.998321,-1.112517,5.833098,-8.674800,-1.067719,-8.725853,-8.803961,6.530372,-2.378159,2.062519,7.899491,-4.655546,-8.346944,5.579784,-1.259471,6.918636,8.190188,-6.418113,4.836685,-4.108470,0.763614,-9.568763,2.524548,0.332972,5.167066,-5.132501,-0.206309,-7.634649,2.390023,8.574226,6.079328,9.662226,1.298486,6.150882,4.531259,-1.075441,-0.913691,-1.826198,-9.161570,6.065400,-7.449892,-5.570178,-2.421046,-5.352368,9.706836,5.231193,-5.806780,3.821364,-3.299114,-5.039481,-4.231386,-1.453385,4.464986,-1.871567,-0.697199,6.843067,1.069236,7.700305,-4.323493,-7.553169,2.711547,-4.280566,-7.866689,9.644854,-5.483211,-4.312357,-4.462291,4.188270,-5.152663,6.423796,0.326748,5.824606,8.146561,-2.621629,-1.125027,3.943483,-4.606268,4.109172,2.605140,7.978531,-3.734159,5.964007,-7.601438,-6.659855,-0.766554,1.442586,-2.516361,2.815103,9.854348,-8.589572,-6.281773,-9.881653,0.515505,3.423144,-9.933772,1.497693,0.609835,-5.861828,4.403393,-5.934206,-5.393888,-8.180207,-0.731854,-7.220318,8.114629,-3.311640,-6.252603,7.486767,-5.359778,2.513005,3.707903,-7.882580,2.538181,5.139132,1.392125,-8.671207,0.856608,8.972385,-3.406828,-2.674502,-6.825337,4.801191,1.271401,-1.205402,-5.491899,-2.948327,-9.956624,-8.330521,9.786992,5.806370,8.067895,5.737555,-5.388348,-9.237125,-5.443385,-6.923474,2.755268,-8.083009,-3.915267,7.560873,-1.146353,1.940351,-2.960270,-8.310046,3.793732,-8.207523,1.052390,6.942124,-0.484961,6.465241,-1.545862,7.585113,2.203884,-1.124619,9.814583,-8.888569,-3.774713,-7.401419,0.991933,-5.947490,-2.481202,1.929711,-3.877216,8.721489,1.520302,-7.160405,3.675231,8.627756,8.386400,-4.446042,6.626750,-7.486954,-3.366872,-2.632004,2.264023,-1.172180,-2.923191,4.856924,4.871687,8.578209,3.083243,-5.581886,-0.146579,-1.502315,-8.298798,-6.837653,7.604464,7.318848,2.820043,-8.601301,-2.692694,7.959243,-7.910322,-0.719681,0.378287,-8.641081,0.422791,9.685431,5.130385,6.721902,1.953812,8.666119,-7.244839,-3.883051,5.460671,-5.029707,-3.955713,-4.286745,-4.837101,-6.262948,-4.468398,0.771128,3.617078,3.394614,-1.401706,-4.740416,-7.574613,-5.718321,-3.020310,0.690579,7.026580,-7.422550,8.635870,0.999009,5.703612,5.810756,-9.879373,1.887111,-1.195086,-7.311305,3.547717,-4.151357,2.528164,-4.961543,6.274180,4.974307,3.368136,-3.160291,-6.726063,-4.757867,9.583379,6.209442,-4.863713,-3.154229,-4.835528,0.405701,4.726315,4.425455,6.340241,3.093291,7.886208,7.799314,-6.344091,0.213302,2.276315,-2.337783,-7.983578,9.402576,-2.159148,9.322395,-8.681186,-7.631375,-2.535870,-4.242704,5.843310,-7.558327,-4.277394,6.584013,-0.358695,7.190915,-2.553208,-6.856100,-6.183512,-1.898374,1.924713,6.134130,-4.080605,-5.750760,6.866556,-9.417684,-6.310709,-7.528506,5.486393,1.214871,-9.634673,1.194515,-9.125591,1.248231,4.445256,1.034778,6.552195,6.296732,-3.630604,-7.295021,-5.483642,-6.560517,-4.616444,-9.470324,-7.657402,9.426426,-1.169338,7.576597,-5.611970,9.855083,-1.257202,8.945011,6.060467,-6.356849,-7.830380,-9.534428,4.314333,0.032487,2.188158,1.527386,3.463889,-7.214068,-6.137695,-5.003977,4.723368,-1.698328,-3.620249,0.461875,-2.594056,2.583010,8.177899,-1.942646,-2.483493,-2.415623,9.000374,0.703738,-6.455840,-0.805458,7.537861,9.167098,0.289364,6.925398,0.829988,4.121391,-1.081633,-5.558813,-4.456054,-4.113350,-0.244427,-3.538535,1.341734,-4.750334,-8.824476,-7.876952,2.563561,-3.527785,0.435301,-2.170771,-3.128756,0.161014,-2.700755,-9.968014,-1.575739,7.887211,9.694524,-2.335175,8.880109,-4.161878,4.718347,-8.457135,7.989735,5.853149,-6.151962,3.547472,-0.406169,8.211750,8.270197,1.533619,-9.829899,-6.978711,8.094921,-7.737081,-8.128006,-5.911612,7.034461,-9.854771,3.985571,-6.133513,-3.852543,-4.845093,-3.806826,7.731095,-0.784380,5.886208,-8.656459,-1.505810,-1.138102,-5.057117,-0.797124,-6.602323,4.595250,-9.285951,6.981529,-7.695395,-3.040102,-7.001052,-9.020037,-9.556393,-7.226419,-5.363666,-7.120711,-3.010796,8.557327,2.748751,6.325116,-9.741163,-8.489149,1.468356,4.774919,3.788579,1.835149,-5.549239,-8.783273,-3.790919,-7.229098,4.684316,5.834010,4.063836,-7.638277,-5.595421,-4.425811,9.418161,7.348819,-2.093290,-8.567381,7.660392,3.476556,-2.602289,-3.085590,0.374033,3.755406,7.403653,-7.220549,3.120512,6.918127,1.755345,-6.999346,9.333324,3.483471,-8.150393,8.010246,0.594181,1.139890,-8.592892,-8.391027,-1.318085,-4.813083,0.594310,-9.689752,-6.022052,-0.191845,-4.906081,-8.346106,7.445752,2.377221,8.035207,5.862616,-5.994722,-8.779030,-6.243701,-5.119360,-4.926598,1.597808,0.441592,0.965433,9.301408,9.031706,-2.398967,0.326792,-7.728454,-9.602708,-6.934916,-6.352573,-5.934353,8.335364,-7.645959,-3.433537,1.640373,-9.710513,7.467575,-7.613940,6.266817,-4.195611,9.322966,0.464033,0.076697,6.196382,9.541911,-7.131977,5.722632,6.518681,7.909130,-9.497928,9.479470,2.538486,-7.641520,7.168102,-0.172743,-7.880650,-9.769423,1.723554,1.042456,3.904263,-6.279668,-0.787032,9.901132,0.284302,9.305261,3.438093,-4.573879,-3.314600,-4.933486,3.897044,3.793124,-2.306661,3.512002,6.155017,5.207096,-7.998903,-2.729884,2.243994,-0.808077,-2.204267,-8.386778,-9.660641,8.227217,-9.767979,-6.842542,-2.207351,9.713963,8.527592,-7.835908,1.146582,2.543801,5.322740,-6.848067,-1.865049,-1.692891,3.829992,-9.131896,2.632289,-7.907494,-1.298577,8.462044,-3.979363,5.341468,-6.522493,8.317682,4.662983,3.597488,-2.187343,3.725737,-2.509082,-1.836530,8.799415,8.652922,-9.635175,-6.467563,-7.687440,4.507199,-6.501579,1.683571,-4.430379,-1.587722,3.208590,-5.520182,1.961360,-8.783277,8.868169,2.760148,-9.517654,-0.099650,-8.301257,3.819877,-6.009685,-8.197075,0.416705,5.058335,-5.987583,-5.229251,8.874498,7.918958,-2.500864,-4.543097,-4.791465,-6.345250,-1.770771,7.382029,2.255807,-2.177073,9.798508,-4.554606,-1.485138,-7.443849,4.105729,-7.359537,-5.368556,-2.599261,-4.831187,-3.857254,-9.599517,9.570465,4.275127,-1.461855,5.803301,7.775089,8.192003,4.300673,5.099768,-7.912230,-4.917861,-9.661604,-9.101967,-0.129249,9.505580,-8.132094,8.626974,4.995137,-2.134300,-9.080017,-2.149381,8.745373,5.774089,1.906089,-7.152682,-1.644030,-1.053738,6.911334,9.433630,2.125956,6.839823,-9.801089,1.702736,2.418857,3.376228,8.163660,4.706597,2.481450,-5.553128,-5.662530,-6.461497,7.231361,2.808985,-6.918243,-4.508456,6.112211,8.326881,3.477722,5.553783,-7.141756,-1.577423,-8.887809,-5.665352,-1.522546,-5.201019,-5.899938,1.603934,-7.465419,-9.519173,7.421918,-7.465559,-6.191330,9.254411,7.440286,3.270978,7.385041,5.450523,7.333680,-4.902405,-5.729270,-8.457937,0.753413,2.149520,-5.178129,-6.651212,-0.077092,0.922231,-0.009696,-4.476645,5.851671,-6.235615,7.119037,3.695574,7.382988,5.602870,-8.689940,-3.278960,9.109761,8.019702,-7.646475,-3.822248,8.526097,4.835457,-3.650666,4.890643,0.896638,-2.254736,3.964195,-0.288504,1.941526,6.447866,9.370443,-6.156135,8.746108,1.443264,4.529873,-2.625874,5.814948,3.708523,-6.188673,1.602879,-1.235423,-7.669082,3.010720,-7.206374,-1.417224,3.463467,-0.259330,2.769509,2.737816,9.212426,-8.112799,5.580512,6.461878,3.387996,8.128875,-6.730028,-0.117776,-8.985822,7.223452,7.387101,-8.463960,6.355070,-0.319280,-9.176483,1.550864,-7.375776,8.882721,5.730998,-4.194261,-7.572682,-5.579051,9.580543,-5.592484,-4.632582,7.718034,1.369364,-7.062052,-7.403595,9.414819,1.506854,-8.719245,-0.574298,1.971406,-4.044547,-0.672703,-0.418443,4.688802,-8.288939,9.257798,5.732502,-0.872716,-9.928228,-5.711261,0.222209,2.124767,-2.806906,-4.041171,1.994425,4.543449,-6.129400,3.775970,-4.380390,-9.764524,-6.895205,5.509782,-9.863114,-0.445156,5.677106,4.142284,5.349971,0.801725,-3.232231,-9.498523,0.026590,-1.980227,-7.420807,-1.596512,-5.652555,2.697342,-1.972499,3.622955,-7.931375,2.840147,-7.488172,-1.829969,0.137162,5.733223,1.110527,-6.978772,7.341977,-5.983061,-6.023706,-4.599761,-0.454511,2.033046,6.733691,4.394971,-4.167451,3.693727,-9.787184,-6.968896,6.280760,0.862276,-3.492880,0.257957,-5.589247,8.073920,3.095911,-8.434085,3.271664,-2.418805,-8.021149,-8.742431,9.169134,8.870582,8.302428,9.585019,8.060633,0.439700,-5.956402,-2.684193,8.803667,0.371824,0.441696,-3.525431,7.209196,7.361724,-1.063926,9.434694,9.270174,0.782551,-6.081427,3.655045,-8.861250,1.142283,-6.913905,0.881449,3.298343,-6.234251,-3.088821,9.251732,5.492579,8.604066,-8.776225,2.400027,6.520741,-3.144890,-5.240819,-2.918411,0.443597,7.782175,9.920886,1.144324,-7.987928,4.000544,-8.815989,-1.160515,-1.201162,7.703669,-8.873130,-5.315766,-0.456367,-5.574508,2.174030,7.749056,-3.155499,-1.175541,2.101401,9.589054,4.584132,0.844717,0.606074,8.499166,1.988592,0.018068,-9.590769,-6.907242,-8.533998,2.920290,3.431742,-4.198631,3.821267,1.081216,-3.877068,-4.264693,0.170468,9.077242,-5.113615,-3.720124,-3.386097,9.228882,-8.967829,2.096093,-0.541635,-7.500438,8.707252,-9.850872,0.632282,0.955492,-9.841948,5.648860,9.279618,-2.504357,0.320785,-7.673687,-5.344893], dtype = "float32")#candidate|3295|(1680,)|const|float32
call_3292 = relay.TupleGetItem(func_1976_call(relay.reshape(const_3293.astype('float32'), [13, 3, 4]), relay.reshape(call_3268.astype('float32'), [88,]), relay.reshape(const_3294.astype('float64'), [7, 2, 2]), relay.reshape(const_3295.astype('float32'), [1680,]), ), 1)
call_3296 = relay.TupleGetItem(func_1982_call(relay.reshape(const_3293.astype('float32'), [13, 3, 4]), relay.reshape(call_3268.astype('float32'), [88,]), relay.reshape(const_3294.astype('float64'), [7, 2, 2]), relay.reshape(const_3295.astype('float32'), [1680,]), ), 1)
uop_3302 = relay.rsqrt(uop_3258.astype('float64')) # shape=(56, 8)
uop_3304 = relay.rsqrt(uop_3260.astype('float64')) # shape=(56, 8)
output = relay.Tuple([uop_3261,call_3268,call_3292,const_3293,const_3294,const_3295,uop_3302,])
output2 = relay.Tuple([uop_3263,call_3269,call_3296,const_3293,const_3294,const_3295,uop_3304,])
func_3306 = relay.Function([], output)
mod['func_3306'] = func_3306
mod = relay.transform.InferType()(mod)
output = func_3306()
func_3307 = relay.Function([], output)
mutated_mod['func_3307'] = func_3307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3306_call = mod.get_global_var('func_3306')
func_3307_call = mutated_mod.get_global_var('func_3307')
call_3316 = relay.TupleGetItem(func_3306_call(), 5)
call_3317 = relay.TupleGetItem(func_3307_call(), 5)
output = call_3316
output2 = call_3317
func_3325 = relay.Function([], output)
mod['func_3325'] = func_3325
mod = relay.transform.InferType()(mod)
mutated_mod['func_3325'] = func_3325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3325_call = mutated_mod.get_global_var('func_3325')
call_3326 = func_3325_call()
output = call_3326
func_3327 = relay.Function([], output)
mutated_mod['func_3327'] = func_3327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3306_call = mod.get_global_var('func_3306')
func_3307_call = mutated_mod.get_global_var('func_3307')
call_3328 = relay.TupleGetItem(func_3306_call(), 2)
call_3329 = relay.TupleGetItem(func_3307_call(), 2)
output = call_3328
output2 = call_3329
func_3336 = relay.Function([], output)
mod['func_3336'] = func_3336
mod = relay.transform.InferType()(mod)
mutated_mod['func_3336'] = func_3336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3336_call = mutated_mod.get_global_var('func_3336')
call_3337 = func_3336_call()
output = call_3337
func_3338 = relay.Function([], output)
mutated_mod['func_3338'] = func_3338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2322_call = mod.get_global_var('func_2322')
func_2324_call = mutated_mod.get_global_var('func_2324')
call_3359 = relay.TupleGetItem(func_2322_call(), 0)
call_3360 = relay.TupleGetItem(func_2324_call(), 0)
func_2322_call = mod.get_global_var('func_2322')
func_2324_call = mutated_mod.get_global_var('func_2324')
call_3368 = relay.TupleGetItem(func_2322_call(), 1)
call_3369 = relay.TupleGetItem(func_2324_call(), 1)
output = relay.Tuple([call_3359,call_3368,])
output2 = relay.Tuple([call_3360,call_3369,])
func_3397 = relay.Function([], output)
mod['func_3397'] = func_3397
mod = relay.transform.InferType()(mod)
mutated_mod['func_3397'] = func_3397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3397_call = mutated_mod.get_global_var('func_3397')
call_3398 = func_3397_call()
output = call_3398
func_3399 = relay.Function([], output)
mutated_mod['func_3399'] = func_3399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2250_call = mod.get_global_var('func_2250')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_3426 = relay.TupleGetItem(func_2250_call(), 0)
call_3427 = relay.TupleGetItem(func_2251_call(), 0)
var_3428 = relay.var("var_3428", dtype = "float64", shape = (780,))#candidate|3428|(780,)|var|float64
bop_3429 = relay.minimum(call_3426.astype('uint16'), relay.reshape(var_3428.astype('uint16'), relay.shape_of(call_3426))) # shape=(780,)
bop_3432 = relay.minimum(call_3427.astype('uint16'), relay.reshape(var_3428.astype('uint16'), relay.shape_of(call_3427))) # shape=(780,)
output = bop_3429
output2 = bop_3432
func_3435 = relay.Function([var_3428,], output)
mod['func_3435'] = func_3435
mod = relay.transform.InferType()(mod)
var_3436 = relay.var("var_3436", dtype = "float64", shape = (780,))#candidate|3436|(780,)|var|float64
output = func_3435(var_3436)
func_3437 = relay.Function([var_3436], output)
mutated_mod['func_3437'] = func_3437
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3512 = relay.var("var_3512", dtype = "float32", shape = (2, 9, 3))#candidate|3512|(2, 9, 3)|var|float32
uop_3513 = relay.sqrt(var_3512.astype('float32')) # shape=(2, 9, 3)
output = uop_3513
output2 = uop_3513
func_3519 = relay.Function([var_3512,], output)
mod['func_3519'] = func_3519
mod = relay.transform.InferType()(mod)
mutated_mod['func_3519'] = func_3519
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3520 = relay.var("var_3520", dtype = "float32", shape = (2, 9, 3))#candidate|3520|(2, 9, 3)|var|float32
func_3519_call = mutated_mod.get_global_var('func_3519')
call_3521 = func_3519_call(var_3520)
output = call_3521
func_3522 = relay.Function([var_3520], output)
mutated_mod['func_3522'] = func_3522
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3536 = relay.var("var_3536", dtype = "int8", shape = (6, 6, 13))#candidate|3536|(6, 6, 13)|var|int8
var_3537 = relay.var("var_3537", dtype = "int8", shape = (6, 6, 13))#candidate|3537|(6, 6, 13)|var|int8
bop_3538 = relay.greater(var_3536.astype('bool'), relay.reshape(var_3537.astype('bool'), relay.shape_of(var_3536))) # shape=(6, 6, 13)
func_2073_call = mod.get_global_var('func_2073')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_3545 = relay.TupleGetItem(func_2073_call(), 1)
call_3546 = relay.TupleGetItem(func_2074_call(), 1)
bop_3547 = relay.bitwise_and(var_3536.astype('uint8'), relay.reshape(bop_3538.astype('uint8'), relay.shape_of(var_3536))) # shape=(6, 6, 13)
output = relay.Tuple([call_3545,bop_3547,])
output2 = relay.Tuple([call_3546,bop_3547,])
func_3553 = relay.Function([var_3536,var_3537,], output)
mod['func_3553'] = func_3553
mod = relay.transform.InferType()(mod)
var_3554 = relay.var("var_3554", dtype = "int8", shape = (6, 6, 13))#candidate|3554|(6, 6, 13)|var|int8
var_3555 = relay.var("var_3555", dtype = "int8", shape = (6, 6, 13))#candidate|3555|(6, 6, 13)|var|int8
output = func_3553(var_3554,var_3555,)
func_3556 = relay.Function([var_3554,var_3555,], output)
mutated_mod['func_3556'] = func_3556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3306_call = mod.get_global_var('func_3306')
func_3307_call = mutated_mod.get_global_var('func_3307')
call_3592 = relay.TupleGetItem(func_3306_call(), 0)
call_3593 = relay.TupleGetItem(func_3307_call(), 0)
func_2073_call = mod.get_global_var('func_2073')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_3598 = relay.TupleGetItem(func_2073_call(), 2)
call_3599 = relay.TupleGetItem(func_2074_call(), 2)
uop_3600 = relay.sigmoid(call_3592.astype('float32')) # shape=(56, 8)
uop_3602 = relay.sigmoid(call_3593.astype('float32')) # shape=(56, 8)
output = relay.Tuple([call_3598,uop_3600,])
output2 = relay.Tuple([call_3599,uop_3602,])
func_3619 = relay.Function([], output)
mod['func_3619'] = func_3619
mod = relay.transform.InferType()(mod)
output = func_3619()
func_3620 = relay.Function([], output)
mutated_mod['func_3620'] = func_3620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2679_call = mod.get_global_var('func_2679')
func_2680_call = mutated_mod.get_global_var('func_2680')
call_3621 = func_2679_call()
call_3622 = func_2679_call()
func_2870_call = mod.get_global_var('func_2870')
func_2872_call = mutated_mod.get_global_var('func_2872')
call_3634 = relay.TupleGetItem(func_2870_call(), 0)
call_3635 = relay.TupleGetItem(func_2872_call(), 0)
output = relay.Tuple([call_3621,call_3634,])
output2 = relay.Tuple([call_3622,call_3635,])
func_3638 = relay.Function([], output)
mod['func_3638'] = func_3638
mod = relay.transform.InferType()(mod)
output = func_3638()
func_3639 = relay.Function([], output)
mutated_mod['func_3639'] = func_3639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2870_call = mod.get_global_var('func_2870')
func_2872_call = mutated_mod.get_global_var('func_2872')
call_3646 = relay.TupleGetItem(func_2870_call(), 0)
call_3647 = relay.TupleGetItem(func_2872_call(), 0)
output = relay.Tuple([call_3646,])
output2 = relay.Tuple([call_3647,])
func_3654 = relay.Function([], output)
mod['func_3654'] = func_3654
mod = relay.transform.InferType()(mod)
output = func_3654()
func_3655 = relay.Function([], output)
mutated_mod['func_3655'] = func_3655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3397_call = mod.get_global_var('func_3397')
func_3399_call = mutated_mod.get_global_var('func_3399')
call_3679 = relay.TupleGetItem(func_3397_call(), 1)
call_3680 = relay.TupleGetItem(func_3399_call(), 1)
func_1350_call = mod.get_global_var('func_1350')
func_1352_call = mutated_mod.get_global_var('func_1352')
var_3684 = relay.var("var_3684", dtype = "float32", shape = (2, 44))#candidate|3684|(2, 44)|var|float32
call_3683 = func_1350_call(relay.reshape(var_3684.astype('float32'), [11, 4, 2]))
call_3685 = func_1350_call(relay.reshape(var_3684.astype('float32'), [11, 4, 2]))
bop_3693 = relay.left_shift(var_3684.astype('uint32'), relay.reshape(call_3683.astype('uint32'), relay.shape_of(var_3684))) # shape=(2, 44)
bop_3696 = relay.left_shift(var_3684.astype('uint32'), relay.reshape(call_3685.astype('uint32'), relay.shape_of(var_3684))) # shape=(2, 44)
func_2250_call = mod.get_global_var('func_2250')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_3697 = relay.TupleGetItem(func_2250_call(), 0)
call_3698 = relay.TupleGetItem(func_2251_call(), 0)
bop_3713 = relay.power(bop_3693.astype('float64'), relay.reshape(var_3684.astype('float64'), relay.shape_of(bop_3693))) # shape=(2, 44)
bop_3716 = relay.power(bop_3696.astype('float64'), relay.reshape(var_3684.astype('float64'), relay.shape_of(bop_3696))) # shape=(2, 44)
uop_3720 = relay.log(var_3684.astype('float64')) # shape=(2, 44)
bop_3722 = relay.multiply(uop_3720.astype('int8'), relay.reshape(call_3683.astype('int8'), relay.shape_of(uop_3720))) # shape=(2, 44)
bop_3725 = relay.multiply(uop_3720.astype('int8'), relay.reshape(call_3685.astype('int8'), relay.shape_of(uop_3720))) # shape=(2, 44)
bop_3727 = relay.subtract(uop_3720.astype('int8'), relay.reshape(bop_3713.astype('int8'), relay.shape_of(uop_3720))) # shape=(2, 44)
bop_3730 = relay.subtract(uop_3720.astype('int8'), relay.reshape(bop_3716.astype('int8'), relay.shape_of(uop_3720))) # shape=(2, 44)
output = relay.Tuple([call_3679,call_3697,bop_3722,bop_3727,])
output2 = relay.Tuple([call_3680,call_3698,bop_3725,bop_3730,])
func_3731 = relay.Function([var_3684,], output)
mod['func_3731'] = func_3731
mod = relay.transform.InferType()(mod)
var_3732 = relay.var("var_3732", dtype = "float32", shape = (2, 44))#candidate|3732|(2, 44)|var|float32
output = func_3731(var_3732)
func_3733 = relay.Function([var_3732], output)
mutated_mod['func_3733'] = func_3733
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3741 = relay.var("var_3741", dtype = "float32", shape = (3, 9, 4))#candidate|3741|(3, 9, 4)|var|float32
uop_3742 = relay.asinh(var_3741.astype('float32')) # shape=(3, 9, 4)
bop_3754 = relay.multiply(uop_3742.astype('int32'), relay.reshape(var_3741.astype('int32'), relay.shape_of(uop_3742))) # shape=(3, 9, 4)
func_2322_call = mod.get_global_var('func_2322')
func_2324_call = mutated_mod.get_global_var('func_2324')
call_3761 = relay.TupleGetItem(func_2322_call(), 1)
call_3762 = relay.TupleGetItem(func_2324_call(), 1)
uop_3769 = relay.asin(uop_3742.astype('float32')) # shape=(3, 9, 4)
uop_3782 = relay.erf(uop_3769.astype('float64')) # shape=(3, 9, 4)
uop_3788 = relay.exp(uop_3769.astype('float32')) # shape=(3, 9, 4)
output = relay.Tuple([bop_3754,call_3761,uop_3782,uop_3788,])
output2 = relay.Tuple([bop_3754,call_3762,uop_3782,uop_3788,])
func_3792 = relay.Function([var_3741,], output)
mod['func_3792'] = func_3792
mod = relay.transform.InferType()(mod)
mutated_mod['func_3792'] = func_3792
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3793 = relay.var("var_3793", dtype = "float32", shape = (3, 9, 4))#candidate|3793|(3, 9, 4)|var|float32
func_3792_call = mutated_mod.get_global_var('func_3792')
call_3794 = func_3792_call(var_3793)
output = call_3794
func_3795 = relay.Function([var_3793], output)
mutated_mod['func_3795'] = func_3795
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3876 = relay.var("var_3876", dtype = "bool", shape = (13, 15, 15))#candidate|3876|(13, 15, 15)|var|bool
var_3877 = relay.var("var_3877", dtype = "bool", shape = (13, 15, 15))#candidate|3877|(13, 15, 15)|var|bool
bop_3878 = relay.logical_and(var_3876.astype('bool'), relay.reshape(var_3877.astype('bool'), relay.shape_of(var_3876))) # shape=(13, 15, 15)
func_129_call = mod.get_global_var('func_129')
func_132_call = mutated_mod.get_global_var('func_132')
const_3885 = relay.const([[10],[-9],[4],[1],[6],[-10],[7],[9],[8],[5],[-7],[6],[-6],[-3],[10],[1],[-3],[-10],[8],[4],[9],[7],[1],[5],[7],[-7],[-3],[-6]], dtype = "uint16")#candidate|3885|(28, 1)|const|uint16
call_3884 = func_129_call(relay.reshape(const_3885.astype('uint16'), [7, 2, 2]))
call_3886 = func_129_call(relay.reshape(const_3885.astype('uint16'), [7, 2, 2]))
output = relay.Tuple([bop_3878,call_3884,const_3885,])
output2 = relay.Tuple([bop_3878,call_3886,const_3885,])
func_3895 = relay.Function([var_3876,var_3877,], output)
mod['func_3895'] = func_3895
mod = relay.transform.InferType()(mod)
var_3896 = relay.var("var_3896", dtype = "bool", shape = (13, 15, 15))#candidate|3896|(13, 15, 15)|var|bool
var_3897 = relay.var("var_3897", dtype = "bool", shape = (13, 15, 15))#candidate|3897|(13, 15, 15)|var|bool
output = func_3895(var_3896,var_3897,)
func_3898 = relay.Function([var_3896,var_3897,], output)
mutated_mod['func_3898'] = func_3898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3619_call = mod.get_global_var('func_3619')
func_3620_call = mutated_mod.get_global_var('func_3620')
call_3924 = relay.TupleGetItem(func_3619_call(), 1)
call_3925 = relay.TupleGetItem(func_3620_call(), 1)
var_3930 = relay.var("var_3930", dtype = "float32", shape = (56, 8))#candidate|3930|(56, 8)|var|float32
bop_3931 = relay.logical_and(call_3924.astype('bool'), relay.reshape(var_3930.astype('bool'), relay.shape_of(call_3924))) # shape=(56, 8)
bop_3934 = relay.logical_and(call_3925.astype('bool'), relay.reshape(var_3930.astype('bool'), relay.shape_of(call_3925))) # shape=(56, 8)
output = relay.Tuple([bop_3931,])
output2 = relay.Tuple([bop_3934,])
func_3936 = relay.Function([var_3930,], output)
mod['func_3936'] = func_3936
mod = relay.transform.InferType()(mod)
var_3937 = relay.var("var_3937", dtype = "float32", shape = (56, 8))#candidate|3937|(56, 8)|var|float32
output = func_3936(var_3937)
func_3938 = relay.Function([var_3937], output)
mutated_mod['func_3938'] = func_3938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3336_call = mod.get_global_var('func_3336')
func_3338_call = mutated_mod.get_global_var('func_3338')
call_3947 = func_3336_call()
call_3948 = func_3336_call()
output = relay.Tuple([call_3947,])
output2 = relay.Tuple([call_3948,])
func_3956 = relay.Function([], output)
mod['func_3956'] = func_3956
mod = relay.transform.InferType()(mod)
output = func_3956()
func_3957 = relay.Function([], output)
mutated_mod['func_3957'] = func_3957
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3963 = relay.var("var_3963", dtype = "float32", shape = (9, 13, 11))#candidate|3963|(9, 13, 11)|var|float32
uop_3964 = relay.acos(var_3963.astype('float32')) # shape=(9, 13, 11)
var_3966 = relay.var("var_3966", dtype = "float32", shape = (9, 13, 11))#candidate|3966|(9, 13, 11)|var|float32
bop_3967 = relay.less_equal(var_3963.astype('bool'), relay.reshape(var_3966.astype('bool'), relay.shape_of(var_3963))) # shape=(9, 13, 11)
uop_3970 = relay.erf(bop_3967.astype('float64')) # shape=(9, 13, 11)
uop_3972 = relay.sqrt(var_3966.astype('float32')) # shape=(9, 13, 11)
bop_3974 = relay.floor_divide(uop_3964.astype('float64'), relay.reshape(bop_3967.astype('float64'), relay.shape_of(uop_3964))) # shape=(9, 13, 11)
bop_3985 = relay.mod(var_3966.astype('float32'), relay.reshape(uop_3972.astype('float32'), relay.shape_of(var_3966))) # shape=(9, 13, 11)
func_3435_call = mod.get_global_var('func_3435')
func_3437_call = mutated_mod.get_global_var('func_3437')
var_3995 = relay.var("var_3995", dtype = "float64", shape = (780,))#candidate|3995|(780,)|var|float64
call_3994 = func_3435_call(relay.reshape(var_3995.astype('float64'), [780,]))
call_3996 = func_3435_call(relay.reshape(var_3995.astype('float64'), [780,]))
uop_3998 = relay.log10(bop_3985.astype('float64')) # shape=(9, 13, 11)
output = relay.Tuple([uop_3970,bop_3974,call_3994,var_3995,uop_3998,])
output2 = relay.Tuple([uop_3970,bop_3974,call_3996,var_3995,uop_3998,])
func_4007 = relay.Function([var_3963,var_3966,var_3995,], output)
mod['func_4007'] = func_4007
mod = relay.transform.InferType()(mod)
var_4008 = relay.var("var_4008", dtype = "float32", shape = (9, 13, 11))#candidate|4008|(9, 13, 11)|var|float32
var_4009 = relay.var("var_4009", dtype = "float32", shape = (9, 13, 11))#candidate|4009|(9, 13, 11)|var|float32
var_4010 = relay.var("var_4010", dtype = "float64", shape = (780,))#candidate|4010|(780,)|var|float64
output = func_4007(var_4008,var_4009,var_4010,)
func_4011 = relay.Function([var_4008,var_4009,var_4010,], output)
mutated_mod['func_4011'] = func_4011
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4064 = relay.var("var_4064", dtype = "float64", shape = (16, 5, 3))#candidate|4064|(16, 5, 3)|var|float64
uop_4065 = relay.sin(var_4064.astype('float64')) # shape=(16, 5, 3)
func_1350_call = mod.get_global_var('func_1350')
func_1352_call = mutated_mod.get_global_var('func_1352')
var_4068 = relay.var("var_4068", dtype = "float32", shape = (88,))#candidate|4068|(88,)|var|float32
call_4067 = func_1350_call(relay.reshape(var_4068.astype('float32'), [11, 4, 2]))
call_4069 = func_1350_call(relay.reshape(var_4068.astype('float32'), [11, 4, 2]))
func_998_call = mod.get_global_var('func_998')
func_1000_call = mutated_mod.get_global_var('func_1000')
var_4076 = relay.var("var_4076", dtype = "uint8", shape = (448,))#candidate|4076|(448,)|var|uint8
call_4075 = relay.TupleGetItem(func_998_call(relay.reshape(var_4076.astype('uint8'), [448,])), 0)
call_4077 = relay.TupleGetItem(func_1000_call(relay.reshape(var_4076.astype('uint8'), [448,])), 0)
bop_4084 = relay.not_equal(uop_4065.astype('bool'), relay.reshape(var_4064.astype('bool'), relay.shape_of(uop_4065))) # shape=(16, 5, 3)
const_4095 = relay.const([[[8.403586,9.495182],[5.002670,6.393771],[4.814421,7.522905],[-5.676122,-9.300498]],[[5.477470,7.583996],[-5.677155,-9.031952],[7.953950,6.610240],[-4.418618,4.332740]],[[-0.599319,-7.302193],[-3.128470,-1.168076],[-6.737809,-4.701763],[4.013825,-8.155872]],[[7.011616,-0.946001],[-5.999919,-3.246669],[-0.359010,-4.209560],[-2.083809,-7.395677]],[[-3.482456,-4.816640],[-5.469472,2.772839],[-0.642217,-1.043721],[-1.238743,2.585952]],[[-5.394214,8.353452],[-1.571787,-2.958547],[-1.071951,-3.280644],[4.472929,7.250592]],[[7.456028,-5.636705],[-8.549815,-0.275088],[4.064701,-4.391290],[2.060960,-1.785737]],[[5.818044,-6.447901],[7.837950,-7.779333],[4.044884,-1.749387],[9.496851,-1.305162]],[[-9.099544,-4.765819],[-2.299842,5.758677],[4.683748,-5.773583],[7.841132,-6.752074]],[[-6.346483,9.008503],[-7.976244,5.756894],[-9.405058,-2.952185],[3.489890,-0.392421]],[[8.297055,-2.149885],[6.063016,8.199317],[3.055045,2.762640],[-1.236883,5.250790]]], dtype = "float64")#candidate|4095|(11, 4, 2)|const|float64
bop_4096 = relay.maximum(call_4067.astype('uint32'), relay.reshape(const_4095.astype('uint32'), relay.shape_of(call_4067))) # shape=(11, 4, 2)
bop_4099 = relay.maximum(call_4069.astype('uint32'), relay.reshape(const_4095.astype('uint32'), relay.shape_of(call_4069))) # shape=(11, 4, 2)
func_1317_call = mod.get_global_var('func_1317')
func_1321_call = mutated_mod.get_global_var('func_1321')
const_4102 = relay.const([-7.763103,-2.758093,-9.366905,3.688519,-1.878269,4.510146,-2.070858,9.116399,-9.113778,-9.532301,-1.147705,-0.700344,-1.309639,-4.357958,-6.976855,-6.760274,-0.598241,-7.522020,9.831860,0.630751,4.581040,-4.723731,-3.652523,-7.699786,-2.507803,-4.533720,-3.756313,2.876613,-6.381670,9.268552,-3.550957,6.339486,-7.462279,5.645424,-6.367956,5.564099,0.531842,1.718424,5.418172,-9.819725,-0.757178,-1.281123,7.767506,7.289972,5.167116,4.048199,1.021710,-4.361152,-3.865948,7.454180,-5.291581,-0.926033,-8.226687,2.482925,-9.848504,1.123952,-9.067757,6.700301,2.961124,-0.308256,9.059406,7.917072,-9.337274,-4.749285,8.930480,7.644924,-6.022591,-2.031229,6.634511,-2.669550,4.167994,8.673581,8.103087,-6.521635,1.104696,9.383341,-5.309346,2.670379,-3.644168,7.083259,4.539760,5.785307,-2.149399,9.258139,5.689053,3.439121,6.538772,6.444207,-6.205554,-4.474349,-5.159510,-1.791036,-6.499572,0.438927,-2.611199,-9.063489,-0.241857,2.696491,4.978851,-3.787867,0.179278,-4.614020,-0.884328,7.915049,8.987501,3.503971,-1.833424,-5.877445,5.552659,1.076936,-3.684771,-8.784011,-3.567957,0.354173,-7.689155,-4.769715,-8.657043,-7.102576,-3.109343,5.236385,2.106150,5.154834,-6.776277,-8.719525,-8.225066,3.127192,-2.844328,2.784391,-1.807811,-5.600920,-1.566536,-8.462034,7.108063,-9.931475,-2.424305,9.309325,-2.027239,8.266529,-5.983175,-2.514950,-9.260108,5.423269,6.973563,2.065114,-2.751101,-6.307206,-7.499151,7.324494,-6.421703,-6.120730,4.683145,-6.209913,-9.229772,-9.942745,-9.151662,9.728903,3.100905,7.032400,2.984783,-9.965555,-3.409341,1.199667,6.147377,4.469333,-5.399149,-1.851149,6.693547,2.582926,0.997667,4.517704,-0.505165,-8.453670,2.785077,0.797178,-5.374769,-9.984476,-8.143138,3.516546,-5.478684,5.281216,-9.767871,-1.688845,4.255345,-2.243646,-4.328986,-7.145218,-8.607036,-4.460852,-7.298618,7.850084,2.646998,2.196536,6.430195,5.853077,5.928934,-7.798320,-5.858042,-8.513957,-2.056158,-6.100918,-1.372068,7.403070,5.666905,-2.294959,5.719834,-1.759557,-4.911749,5.813798,3.804573,7.608955,6.439826,-2.141723,9.382646,7.329400,6.687412,-8.985051,-7.554679,9.534919,7.730631,3.000572,7.395191,2.050907,-4.420057,3.375752,7.069850,-1.528418,-3.760724,-6.324533,6.479269,3.761261,-4.919491,-1.269930,1.105563,-3.715420,-4.875938,-9.053320,-1.967881,2.757076,-3.648372,-1.130853,4.808076,-5.196818,0.195371,3.946546,0.416813,-6.558621,-9.502266,-2.753258,-0.183846,-8.600165,6.953348,-9.832762,-4.300693,-9.774397,-8.950710,-1.041999,2.643519,8.573031,-0.483096,-5.312845,8.105636,1.585456,5.790484,3.883836,-3.941077,-6.141845,-9.777228,3.681114,-0.256747,2.313476,-6.947952,5.796695,5.916257,9.058548,9.899334,6.882590,-9.016735,8.141144,-8.871678,8.362591,-8.122997,-5.387778,-2.872686,-4.028453,1.205966,4.857597,3.112789,-7.249834,6.369345,-1.608908,2.351413,6.407319,-9.123998,6.474257,5.010045,-8.720610,8.586266,4.031017,-9.624300,-8.576113,9.807337,-4.708771,-2.335483,4.806664,-2.370094,5.332306,1.373504,3.104222,2.526609,1.235529,2.347266,-4.854819,-8.867475,-2.322186,7.983511,1.375892,-0.137244,-5.751798,-4.314212,-7.136139,9.277134,-1.474136,-6.312441,3.226832,-1.026022,-5.242247,-3.298658,-8.106797,-7.262760,8.364079,-0.202810,4.542611,-3.778481,0.801881,5.066132,3.255054,8.607215,-5.446993,7.378391,0.687308,-4.423916,7.622124,6.966056,0.291606,-6.953337,0.862737,8.753848,2.012381,-3.494794,-0.756369,-9.568914,7.389384,9.410926,3.597357,8.634574,1.879537,9.963565,-7.158934,-3.246303,-0.672449,-9.756088,9.113972,-7.590930,-4.888074,-7.422340,9.552848,-3.697965,-9.970702,-8.803918,0.677081,4.833115,0.521520,6.221255,8.655039,0.375727,9.515239,9.214373,-1.644288,9.813364,9.955655,4.975276,9.778701,1.800039,-7.885720,7.556276,1.662903,-4.782397,3.275041,-3.628441,3.471368,6.793319,3.133113,-2.250433,-2.643599,-2.841723,5.779650,-5.997022,-7.705006,-5.222815,6.351662,-8.949741,-3.349888,0.125728,-5.309021,-5.494792,-3.351706,-3.309386,8.350525,4.138106,5.299154,1.300578,2.600266,0.938209,5.662709,-9.431059,3.065462,7.236135,8.677452,-4.660701,-9.235429,-3.266009,-5.730842,-6.311323,1.485864,3.940540,-5.757406,4.989315,4.494212,4.634223,-1.782263,2.757298,-5.892932,-7.376046,-6.089417,2.551252,0.573437,0.647378,3.866974,2.584134,2.337508,7.739331,7.539255,1.582864,6.585146,8.183002,3.403214,5.925593,9.528353,8.731033,-2.017516,-0.723661,-3.421700,4.210025,-1.358153,-0.564015,-8.079063,0.757374,-7.408609,-8.312638,1.552327,-9.741839,-9.662045,-5.774233,1.173756,2.578832,-2.847571,8.143431,7.089053,-8.928276,-3.945638,7.950677,-9.665096,-4.963165,-9.386160,-3.012525,5.112327,-3.853122,3.481292,3.589657,-6.971248,-3.180765,1.269155,-4.219321,4.984181,-4.086179,5.037947,-9.744361,-6.070567,1.879871,7.256205,-5.110124,-6.901761,-7.311794,6.182785,-2.629306,0.226443,-9.682125,-0.782672,9.191357,-7.706202,6.424898,-6.167404,8.682689,1.976587,0.569159,3.275859,0.407694,-0.493364,3.336502,0.407225,0.411324,-3.100932,3.664519,-3.423749,-6.977811,-6.376467,0.541463,5.064289,1.118370,2.318143,9.970517,-4.373348,-1.315952,0.429273,-2.492228,9.820462,7.414793,-3.813856,-1.907389,5.015944,7.638250,0.240780,-5.447473,1.038339,5.983132,-2.454203,1.883039,5.445748,3.435428,0.630002,6.561313,-0.485365,4.486521,-3.504589,9.089545,-8.825103,4.963656,0.268871,1.802074,-5.012454,3.914065,7.194546,4.930360,-7.751643,6.014948,2.410280,-9.599130,9.098136,-2.876151,-7.839087,-1.305609,-6.394649,-2.566460,4.138741,-4.879045,-7.908747,1.132070,3.759613,-6.228142,2.867370,0.091683,-9.286536,-4.015629,8.461609,2.402636,6.131743,5.306083,-3.858888,3.126244,8.961594,9.700362,-5.973069,8.928395,4.043354,1.769629,-1.815170,0.214585,3.074837,-8.749245,-3.891571,-6.489540,9.895935,5.870124,9.355850,-9.850699,1.679511,-0.847885,-2.050346,5.549643,7.016863,-1.212141,7.893825,-6.043860,-4.036568,-6.694541,8.812527,-9.341335,-0.832907,-5.119576,-9.609736,-6.696473,-2.326063,2.396391,-1.617259,-1.080180,-1.462225,6.999002,7.797854,-1.069808,7.821209,-7.695358,0.667633,2.559770,4.576469,4.620156,-2.206031,4.786439,-8.271271,4.198929,5.127023,-6.046034,3.800345,3.828382,9.429843,-8.630349,-7.301686,5.360214,8.955457,1.315336,-6.596186,-2.090372,-1.340198,5.462326,9.394030,-9.403618,8.088537,-3.733592,-5.483711,5.261140,0.912848,-4.704911,-1.372776,9.655250,1.824188,-1.917711,6.313393,-2.631144,-1.214394,-1.728079,2.195886,-7.042270,1.817650,1.722795,8.205552,6.410829,-5.885065,-9.789365,-0.735733,-7.795453,5.612870,4.491133,8.107861,-4.986313,-8.993849,3.046801,0.743684,-2.414738,-9.346741,7.075950,-0.820895,-8.872792,-1.973334,8.198878,-1.084610,-7.808540,0.350646,-3.030943,-0.944307,-7.941847,0.411837,-0.854048,-6.287274,8.608267,-3.597922,-2.639381,-1.228539,4.639664,0.899940,6.305669,-6.525192,3.914057,4.904407,-7.909531,5.045819,-1.282103,1.601140,4.819449,2.808644,-8.415834,6.685379,-2.531198,-7.177584,6.210467,8.803593,3.497943,-1.490953,8.066473,9.242544,0.985524,-8.588883,9.699897,-1.907371,6.051951,-4.685472,3.032833,-2.651933,5.018466,7.990480,3.388562,5.465662,-1.353586,8.946759,7.747274,-8.529026,7.859545,2.012293,-9.966539,-8.580952,5.935675,5.609452,-0.170394,5.542388,-6.838981,-0.707322,1.845734,5.981615,-8.114462,7.341277,3.116657,-4.697517,-6.708687,5.192703,-5.167530,2.988621,-5.334659,-6.571768,-9.632969,-6.458158,7.664984,-7.781073,-1.177577,-2.747368,9.130294,2.916567,8.582120,7.504148,7.696610,-0.370942,-2.468699,3.472056,3.514486,-1.390504,2.970494,-5.418471,9.595211,7.095353,-4.349684,-2.135739,6.966384,-7.840859], dtype = "float64")#candidate|4102|(780,)|const|float64
call_4101 = relay.TupleGetItem(func_1317_call(relay.reshape(const_4102.astype('float64'), [13, 5, 12]), relay.reshape(call_4075.astype('uint8'), [448,]), ), 3)
call_4103 = relay.TupleGetItem(func_1321_call(relay.reshape(const_4102.astype('float64'), [13, 5, 12]), relay.reshape(call_4075.astype('uint8'), [448,]), ), 3)
func_1538_call = mod.get_global_var('func_1538')
func_1540_call = mutated_mod.get_global_var('func_1540')
call_4104 = relay.TupleGetItem(func_1538_call(relay.reshape(const_4102.astype('float64'), [780,])), 4)
call_4105 = relay.TupleGetItem(func_1540_call(relay.reshape(const_4102.astype('float64'), [780,])), 4)
uop_4119 = relay.asinh(uop_4065.astype('float64')) # shape=(16, 5, 3)
uop_4130 = relay.log(uop_4119.astype('float64')) # shape=(16, 5, 3)
func_3553_call = mod.get_global_var('func_3553')
func_3556_call = mutated_mod.get_global_var('func_3556')
const_4147 = relay.const([8,-1,-5,-1,4,-6,-3,5,-7,4,1,10,7,4,-2,-6,-2,-1,3,5,-3,-2,-6,-8,7,1,-3,-7,-10,6,3,2,10,4,5,-1,-10,7,-1,3,7,10,-2,4,10,-3,1,10,-1,5,2,6,-10,-10,-10,-10,6,8,-7,-1,4,7,3,7,2,2,7,-7,-1,-7,-1,-7,-7,6,-9,8,-1,9,4,8,9,9,-7,4,-5,-8,-9,5,2,-7,-6,-4,-2,3,-10,-2,-10,-4,1,-7,-8,5,2,3,-1,4,-5,-8,-3,5,-1,-10,-1,-2,-2,-1,3,-10,-7,-10,-3,-8,5,7,7,9,10,1,-4,4,-1,10,10,-1,-3,5,-5,6,1,6,-5,7,4,7,-10,-6,3,-5,6,-9,-6,6,-9,1,-4,-7,-4,6,-2,-8,3,3,1,-10,5,7,4,-5,4,3,7,-10,-4,-10,9,-1,3,-8,-4,-3,-8,10,-4,4,-3,9,-9,-10,5,-1,8,-7,-6,5,-5,-8,-9,-4,-5,2,-7,7,-9,-1,7,-9,4,5,-10,9,-9,8,-5,-4,5,10,8,-8,-6,-3,10,9,-7,3,5,3,-9,5,-5,6,-6,2,4,10,10,5,5,-4,-8,-10,-9,10,-5,-3,3,-10,6,2,-1,-1,8,-9,-8,7,-9,1,-9,-7,-6,-5,-10,8,7,5,6,7,10,9,10,-5,3,9,7,-8,-6,1,-8,-1,1,-2,-10,1,6,1,3,7,2,-10,3,1,3,-5,-1,5,-2,8,-6,3,8,2,-10,9,-6,-2,-9,8,4,-2,-2,8,-3,-8,-9,5,-5,-1,5,-8,1,9,2,1,-3,-3,-9,10,1,-5,9,6,-4,-8,8,-9,5,-10,-5,2,-5,4,-6,-8,-2,-5,-2,4,9,6,-9,8,-4,8,-3,-9,3,-2,10,6,-4,3,-4,-3,-1,4,-5,2,3,9,10,4,-3,-4,6,-5,5,-6,4,-5,8,3,-2,-1,6,-10,-7,-2,1,-3,8,-7,5,3,3,-2,-5,-6,-1,1,8,2,6,-8,-1,-3,-9,1,6,-1,2,-1,10,6,-4,-9,-10,10,6,-2,6,-4,-8,9,3,-2,-7,3,-2,-9,8,1,-8,4,6,8,3,-9,1,2,1,-10,-9,-6,-4,9,2,1,-10,3,-3,10,-7,7,-10,-3,-5,9,-7,-6,9,-6,7,10,-2,-5,-8,-3,7,-4], dtype = "int8")#candidate|4147|(468,)|const|int8
call_4146 = relay.TupleGetItem(func_3553_call(relay.reshape(const_4147.astype('int8'), [6, 6, 13]), relay.reshape(const_4147.astype('int8'), [6, 6, 13]), ), 1)
call_4148 = relay.TupleGetItem(func_3556_call(relay.reshape(const_4147.astype('int8'), [6, 6, 13]), relay.reshape(const_4147.astype('int8'), [6, 6, 13]), ), 1)
uop_4149 = relay.erf(uop_4130.astype('float32')) # shape=(16, 5, 3)
bop_4151 = relay.left_shift(uop_4149.astype('int16'), relay.reshape(uop_4130.astype('int16'), relay.shape_of(uop_4149))) # shape=(16, 5, 3)
func_2736_call = mod.get_global_var('func_2736')
func_2739_call = mutated_mod.get_global_var('func_2739')
call_4170 = relay.TupleGetItem(func_2736_call(relay.reshape(call_4104.astype('uint8'), [448,])), 1)
call_4171 = relay.TupleGetItem(func_2739_call(relay.reshape(call_4104.astype('uint8'), [448,])), 1)
output = relay.Tuple([var_4068,call_4075,var_4076,bop_4084,bop_4096,call_4101,const_4102,call_4104,call_4146,const_4147,bop_4151,call_4170,])
output2 = relay.Tuple([var_4068,call_4077,var_4076,bop_4084,bop_4099,call_4103,const_4102,call_4105,call_4148,const_4147,bop_4151,call_4171,])
func_4179 = relay.Function([var_4064,var_4068,var_4076,], output)
mod['func_4179'] = func_4179
mod = relay.transform.InferType()(mod)
mutated_mod['func_4179'] = func_4179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4179_call = mutated_mod.get_global_var('func_4179')
var_4181 = relay.var("var_4181", dtype = "float64", shape = (16, 5, 3))#candidate|4181|(16, 5, 3)|var|float64
var_4182 = relay.var("var_4182", dtype = "float32", shape = (88,))#candidate|4182|(88,)|var|float32
var_4183 = relay.var("var_4183", dtype = "uint8", shape = (448,))#candidate|4183|(448,)|var|uint8
call_4180 = func_4179_call(var_4181,var_4182,var_4183,)
output = call_4180
func_4184 = relay.Function([var_4181,var_4182,var_4183,], output)
mutated_mod['func_4184'] = func_4184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1762_call = mod.get_global_var('func_1762')
func_1764_call = mutated_mod.get_global_var('func_1764')
call_4201 = relay.TupleGetItem(func_1762_call(), 0)
call_4202 = relay.TupleGetItem(func_1764_call(), 0)
func_2561_call = mod.get_global_var('func_2561')
func_2563_call = mutated_mod.get_global_var('func_2563')
call_4211 = relay.TupleGetItem(func_2561_call(), 1)
call_4212 = relay.TupleGetItem(func_2563_call(), 1)
const_4217 = relay.const([[[2.611288,-7.920237,-5.991154,3.448011,-6.070140,-7.745354,5.404032,-1.090575,-1.847798,6.336666],[-9.210220,7.191431,8.544522,6.256976,0.651075,7.250564,-1.006757,0.439911,-6.089787,-6.424809],[4.793008,-4.970259,4.765155,-9.091437,5.204024,0.246973,-8.573020,9.098077,4.996575,-5.132581],[-0.866203,1.270320,1.184810,7.385831,3.893677,2.391824,-0.364547,6.965446,-0.426571,6.817033],[8.313247,2.413276,-8.173076,-8.537750,4.171527,-5.517445,-6.052900,-5.074433,-6.492271,-2.859945],[4.024905,1.920051,4.724699,5.133261,-8.551452,0.343042,-5.116044,7.159449,-1.083924,-0.443519],[-0.002080,0.638383,-0.552983,1.396546,3.170460,-4.169771,8.673436,-4.611504,-5.300642,-1.049814],[-4.405422,-1.229529,8.888376,7.454036,1.808647,0.649998,6.278825,8.295409,6.452814,-2.827549],[-4.077292,1.266951,-6.413106,-1.238571,-0.888702,8.273390,4.876790,4.101767,-0.055798,-8.338888],[-0.200154,3.032520,-1.964299,6.466209,8.973184,-1.535308,-8.356537,0.816643,5.369925,0.881340],[5.214897,-0.187399,-8.157730,9.584987,6.788784,7.793362,4.327206,1.250743,0.076874,5.729563],[-6.934799,-7.219885,-1.031745,-8.714499,1.031396,2.458450,-8.978761,8.942828,2.474283,1.320194],[-4.234328,-0.391569,-1.099774,0.032887,-4.307964,-4.046504,-3.889656,5.664082,5.920633,-0.441809],[8.836693,5.415806,-1.588884,-3.219920,3.912068,-9.364331,-5.160261,2.433725,-5.936009,-7.211313]],[[-1.701689,7.451857,0.071868,2.654694,-4.941837,-6.737305,3.993176,-1.740111,-4.327447,3.954205],[-2.794167,-5.356998,-9.132506,5.659765,-5.910088,8.208013,8.380803,-6.178658,0.210672,5.507598],[9.001587,5.145883,2.103653,-1.176964,-6.397084,3.683452,5.680572,-0.189205,8.525098,-1.483235],[0.291585,-1.492668,1.958383,-6.658363,-3.431393,-9.103445,9.230335,-2.047990,6.338358,-1.264304],[-1.879333,0.230845,7.628104,8.067190,6.666626,0.654785,6.035910,0.386256,-7.265039,9.874401],[2.917902,-5.600253,0.501838,0.053833,-0.690532,5.725275,3.762631,-2.439952,-1.069251,-0.658157],[-4.404164,-1.485806,1.066646,-2.161730,1.282587,6.720232,8.553896,0.557781,-8.938311,-0.973893],[7.349372,-3.255658,-7.865127,4.044752,-8.855187,-7.220683,9.642690,7.153183,3.062903,-3.915165],[7.540742,6.571628,-7.748476,-9.108201,-2.532500,2.038779,-7.160679,-7.495470,-0.386452,8.478489],[8.485314,4.814646,-6.926147,-8.733808,-3.823158,8.395676,-7.360077,8.009194,2.494951,4.415160],[-8.037143,7.399904,-8.615723,6.829840,-3.812301,-2.519654,-1.235789,-2.455048,-2.775510,-3.156873],[-4.294816,-6.108239,3.392262,7.982759,3.854316,-2.711635,5.318106,-3.183162,8.487085,-1.601087],[-6.686130,-5.721795,6.333085,-5.815411,9.573577,-0.112711,-5.494264,-1.979486,-3.742804,-1.054171],[-2.219562,9.980778,6.844705,-9.908170,1.085227,-8.123832,5.178412,8.548211,2.917711,-2.469296]],[[-6.006183,-4.209010,0.304461,-9.568049,-1.319542,-2.316143,4.215914,-4.482389,8.467767,-5.770471],[-3.850142,9.594305,6.471338,-8.934203,-6.589299,1.065713,2.729450,1.327032,-7.938444,7.097861],[-6.122321,6.448006,4.358714,-8.095240,-0.326092,-1.331315,2.219669,-1.269118,-5.388331,-9.380359],[2.248179,4.294013,3.343286,-5.580225,4.956500,1.641368,4.258739,0.059434,-2.963482,1.120459],[-5.769482,1.844992,1.168535,-4.400381,-2.055261,-5.641226,-5.239638,1.270297,-7.090870,2.513768],[5.178632,-0.857476,-9.848588,3.452608,3.599507,0.617914,-4.474176,-0.714321,6.025767,0.826979],[2.777098,5.407844,-5.574056,6.962876,-2.558980,-3.457055,6.425707,-7.170241,-4.789693,7.683980],[2.117916,-0.978679,9.192359,6.168815,9.068022,1.394477,0.564164,0.900056,9.966284,-8.301141],[2.922316,2.929696,0.891356,-6.030965,1.868718,-7.359889,3.614572,2.959053,1.750809,4.600636],[5.249807,6.527525,0.719428,-3.295938,4.162965,9.753072,9.812207,-3.416058,-9.725483,1.368581],[-8.692039,-1.418586,-1.869153,-8.189272,5.314463,-9.926459,-7.033928,8.223945,-1.758293,-8.409816],[-2.462498,1.392289,-9.919375,5.561881,-4.880568,7.002619,-0.317104,-6.589748,1.939372,-9.176794],[-2.357582,3.757419,-3.546047,5.863671,4.514345,-3.546929,5.121854,2.379133,1.155434,-6.100015],[6.640758,-1.130729,-2.943631,-0.030925,-8.436822,-9.126304,-4.085232,9.308234,-9.110133,4.714013]],[[0.968976,5.413902,2.728648,-2.077924,6.038051,2.219069,-9.894923,-6.700522,-0.839339,-5.739904],[0.414749,-3.788893,8.950903,-7.586414,-8.557680,8.442316,-3.369716,-4.133778,2.253083,-4.405869],[1.271720,-5.173593,-5.080784,-7.270821,8.541585,9.439315,8.846691,-2.293098,9.276503,-9.211578],[3.971327,4.972157,7.235184,7.436194,5.218649,4.854212,0.416985,-3.758490,1.791240,4.502992],[-5.363629,0.747128,-4.414108,-0.457334,6.180999,7.653778,-6.733790,-9.261348,-7.317268,-4.654933],[8.974083,-6.889134,2.873046,-2.799338,-8.798441,-6.881526,-3.815924,-5.617273,5.752172,3.621902],[-0.323024,4.336269,4.668920,-4.802484,-9.498242,5.586922,-7.166257,-8.889589,9.377166,-9.796072],[-9.866893,-3.217831,1.832586,1.388962,4.147897,2.941190,1.894640,-7.773922,-2.618534,-9.826329],[3.237812,-1.644866,-9.088671,-7.591238,-8.386541,4.449952,3.472343,7.810418,-8.265265,5.699033],[7.793032,7.642247,-5.685283,-5.598430,-9.090360,6.040292,-3.218275,-4.030025,-5.668927,-9.223071],[6.746553,-4.447422,2.122342,6.341838,-9.249323,7.338102,1.422841,9.505223,-6.186943,-7.427501],[-7.929499,6.743012,-0.438533,3.610390,-9.786815,4.829940,5.387268,-0.035234,3.390876,3.693591],[-5.648155,-4.943247,3.562209,6.176621,4.692475,0.328125,6.768258,-3.372265,-7.208867,0.076173],[-4.900429,-4.496849,-8.309050,-5.183313,4.315152,1.439629,6.110850,0.821460,3.096809,-8.789040]],[[5.512572,8.986119,-2.614589,-4.267221,4.617830,5.496502,-3.962230,-6.841645,-6.236769,-8.990972],[-2.747887,-6.860775,4.351293,-2.454054,-5.967270,2.852465,-3.301321,9.042923,8.158358,0.986161],[5.810021,-2.294472,8.375066,-5.616324,1.856193,4.172568,-1.124814,7.958060,2.550245,3.971470],[4.150484,8.073325,7.249315,-5.243498,-9.004622,6.582653,2.963654,4.486062,-5.044960,-3.702076],[6.802873,1.419303,1.276416,0.311329,7.307525,4.424439,-0.897196,-8.143201,8.295408,-4.400525],[2.095239,2.821154,2.668547,5.365539,-0.661482,0.417919,3.425610,1.773409,-3.272664,1.240972],[0.524942,-6.260974,-3.745280,6.053400,5.908980,8.817922,-5.682115,1.819625,-8.810345,4.890877],[3.942423,-0.386363,-7.059401,5.383681,-0.630668,-8.726736,1.872183,7.502018,3.134678,7.535341],[-0.667646,0.558791,5.706100,-8.013239,3.830334,-6.254718,3.224089,3.075144,0.943345,-0.350656],[-4.545647,6.352666,8.868266,6.010747,-5.959398,4.881151,2.483312,4.532535,-1.146431,-4.846497],[0.034821,-4.593282,8.583845,-0.427698,-8.534487,0.402243,3.789744,2.967907,6.671821,-0.451166],[6.764803,4.183550,-4.386520,-3.975574,-2.094664,9.408132,1.854446,-3.682307,2.786093,8.224100],[5.427922,-6.904694,-4.583762,4.959428,-1.596535,5.862658,-2.027299,2.942471,4.950105,8.567083],[-2.004843,0.515915,-1.615312,2.033249,7.420509,6.526471,0.655264,3.230516,7.849055,3.395016]],[[-9.071781,-0.117576,2.278140,-8.213362,4.001615,7.692024,-8.053883,0.100132,-1.961450,-8.280362],[-5.104991,1.704114,-1.254247,5.188602,9.261736,2.904667,0.028648,-6.259917,5.409487,4.556375],[-6.009901,4.903319,3.183085,9.515431,2.149816,8.566723,-6.492347,0.120617,-3.355171,-6.086815],[0.922917,6.112250,0.501481,-5.080849,-0.518823,5.512167,-5.043787,3.374005,-7.020471,9.101088],[2.888613,7.726752,5.011371,-9.875963,6.840243,-0.487130,-5.293248,3.395265,5.054932,3.627185],[1.365693,0.411994,8.289409,9.060688,7.591257,1.976847,-4.966198,-1.085838,3.404449,8.134281],[-1.272598,1.519603,0.675401,-1.915171,-0.060935,0.553090,1.510444,8.264767,5.194873,-0.193114],[-2.372306,6.627245,-1.410837,-3.085297,-3.026132,-0.077944,4.051709,-6.296962,-1.441368,-9.342790],[-3.352304,-2.443671,-5.304426,-2.813158,-4.686422,-9.002978,-5.815228,3.104174,-0.883147,-9.905016],[6.395604,9.499280,-9.709197,-1.910024,-5.765215,-1.074843,-9.951433,-9.279165,-0.664695,-7.927174],[8.359523,3.292855,6.298348,-1.147512,2.309320,-8.803417,9.801008,2.609426,9.410472,-4.382663],[-0.505384,-9.281002,9.765847,2.284440,2.056840,2.619855,5.949306,-7.389708,1.028583,-8.044697],[4.374688,-8.546857,-1.924891,7.846404,3.543681,6.000309,-3.028165,-7.086190,8.633472,8.665789],[3.947599,5.520266,-9.514052,6.583707,6.252041,-0.775398,8.529815,7.188290,-4.221486,1.746561]],[[3.653362,-6.582261,8.624891,5.737575,-8.092850,9.012823,9.652973,-3.425971,5.165990,-8.220643],[0.214874,0.996264,9.594546,-9.942394,4.644752,5.782161,7.631788,-7.949317,-2.619121,3.681795],[3.359016,-5.174024,4.815665,-7.800730,2.079601,0.426423,2.950571,3.720252,-2.524579,-3.141343],[8.099747,-7.621033,5.172472,8.874510,-2.647386,1.437548,-0.129290,9.724287,-1.902683,-5.123655],[-3.014024,7.901533,-4.244191,-0.821486,-2.220074,3.971052,-4.091795,-7.000694,-9.793842,2.986397],[-7.935573,-8.627697,-7.607681,8.339505,6.721951,-4.117525,1.076615,0.450739,-6.296502,-1.591339],[2.210209,3.493231,6.215281,0.554947,5.369021,3.853029,8.206210,-4.251710,7.673747,1.371908],[9.552264,-1.140935,1.763980,6.719380,4.302551,-2.212037,6.501134,-7.732760,-1.465421,-2.134488],[-6.794466,5.409113,-7.805314,9.084772,0.626261,-7.938174,8.181545,-0.368278,9.782254,-7.732508],[7.147171,4.953244,-5.291883,-4.166414,1.517440,5.809320,-4.100700,-4.471508,-8.503374,-2.406279],[-7.036516,8.469460,5.115857,-0.316697,3.869282,8.946154,3.641689,5.775491,-8.789375,-3.240444],[-1.488726,2.191312,6.376933,9.852612,5.046532,1.876357,4.676228,6.120146,-3.354980,1.564947],[9.441348,3.545886,0.488818,-4.612337,-5.528528,9.374434,-4.006147,6.500316,-2.082153,-0.557781],[-4.747213,9.380729,-6.147185,-7.613969,-5.397525,-9.395447,-3.089086,8.945467,-5.278832,4.461018]],[[-6.900513,9.798661,6.442726,-0.532861,-5.100310,6.342233,3.476934,-4.151995,-4.333150,-3.112360],[-1.402005,-4.233424,-0.185413,-3.319919,8.909711,0.976653,-2.086086,9.183485,7.012117,-8.777840],[-4.170044,-1.546918,-2.855025,2.916551,6.332410,-5.064770,-2.849121,-5.223312,-3.109164,1.183464],[-3.125749,0.014644,8.923928,-2.884017,4.237769,-4.066764,9.600963,6.352249,6.644339,-9.719214],[-5.412336,-7.668939,3.844716,-5.461378,5.612836,2.801761,-9.253778,6.669748,2.331626,4.406189],[-4.971685,-8.778038,-8.258993,5.334095,-7.588296,4.464327,-8.061117,2.071547,-4.772477,5.757498],[9.220738,-9.618840,-4.196172,-2.916442,6.759791,-9.544419,8.996755,7.577337,-4.902533,-4.350852],[-7.875121,2.880145,1.231776,-3.353395,-5.399308,-1.847687,2.272845,-7.224057,-8.077337,9.255433],[-2.778472,0.983358,0.828960,6.946802,3.592257,-3.427840,7.232971,1.742360,8.316357,1.916881],[5.079886,1.874955,-4.984138,-2.872328,-2.119884,-8.273069,1.709322,8.317704,3.666439,-4.926101],[-3.677609,-3.466929,7.898275,-3.364017,-9.478864,-5.605551,8.087961,-0.434463,7.785239,-8.728591],[-5.549194,-8.213710,-9.735903,-3.140369,5.558318,6.983859,-2.878850,9.410154,5.852574,-6.724252],[5.347028,6.478488,-8.637407,-7.102488,3.526461,-6.187285,-6.912789,6.539558,-0.577157,-5.726699],[5.106379,1.558959,2.259605,3.894122,-5.603985,-4.052194,-6.161480,7.002360,3.081936,8.599303]],[[-3.529126,1.549158,-3.421649,-6.254944,-4.923308,-3.317405,-9.770466,3.994725,0.126577,-8.735218],[-2.524088,5.724431,-9.445268,-5.122008,0.366753,-6.903813,7.000450,-9.171731,5.816670,-1.424799],[2.126212,8.960761,-7.476705,4.434289,7.651776,1.904186,0.560925,-9.721661,9.611344,8.356230],[-1.914276,5.458746,9.398359,-7.844852,-6.350205,4.155792,4.126819,3.681425,0.450207,4.239373],[-8.465797,2.951789,-1.675437,1.578652,-7.166226,-5.787096,3.501475,-3.291545,0.399140,2.261583],[6.957710,8.336060,8.805454,-3.415003,8.314718,5.286100,-3.032195,7.045795,-4.853940,4.416867],[-2.521984,-1.928571,7.415889,-6.633792,3.845479,-7.113950,-5.563882,7.537805,-3.818320,8.959886],[-0.404835,0.676986,7.592124,5.941333,3.869955,-9.257263,-6.639231,4.036729,9.588348,-0.519766],[5.479710,1.092072,-9.506155,4.533673,-5.512368,-6.561823,6.017211,3.711243,0.270023,0.372943],[8.180375,-1.336313,-1.074130,2.844560,8.384544,-8.150521,-4.588949,9.246497,-3.846964,1.497073],[8.822684,8.425382,1.624072,1.798929,8.361147,-3.693710,-7.895143,-8.315812,-5.786410,-2.815196],[0.715419,3.245348,-6.791913,-2.831616,0.731214,7.492068,-3.867924,-7.079121,3.016585,-8.501906],[-7.255323,-3.091742,3.650867,4.226658,-8.637318,2.400895,-8.935113,-2.996288,7.215810,4.715412],[-9.786989,0.333300,-1.281273,7.878296,7.897272,-5.245735,-5.507022,-7.056033,-8.375597,1.063221]],[[6.130784,-3.388577,1.693112,-8.122951,-3.243430,-7.630530,-7.041741,4.020623,9.080723,8.002154],[-9.157565,-1.671653,-4.082017,-7.901537,-3.801353,2.100915,-5.384470,6.132328,-3.216808,6.433454],[5.364507,-0.417895,2.737769,-2.632569,-9.260820,-1.419809,-8.433713,3.112839,0.595531,8.701015],[3.188969,-6.917087,-8.265240,-8.589294,9.077659,6.618114,6.036843,4.354082,3.480187,6.692273],[8.081215,-7.944145,-8.251510,-9.316736,0.345061,3.778891,-0.326936,4.268584,0.289982,-4.438154],[3.044999,3.349934,1.593419,6.906058,3.016624,-4.268201,-3.891078,-2.026987,-3.349948,1.797990],[-5.965744,-0.515966,-6.531341,2.795145,7.683882,-2.908665,-5.075687,6.624480,-6.737126,-6.220240],[4.977946,-3.086444,-1.610347,-4.564100,3.460733,-5.581720,-4.912736,4.534297,-1.122273,-3.385457],[-3.083215,-0.968891,8.066465,-4.382594,9.052316,0.369356,5.509144,-4.134622,-4.859012,-9.839969],[-2.692944,9.486673,4.210508,4.244390,6.829367,-4.465070,6.182058,-5.761077,-1.973608,-1.517338],[-9.055980,8.169371,-3.442793,1.649130,-8.610343,-8.843129,-1.566625,-4.040039,-7.573578,-2.270426],[3.848733,8.867862,3.098581,8.100088,-8.087584,6.919678,7.932313,-4.724661,6.685430,-6.946319],[0.816008,-6.577212,-7.295684,-0.677634,2.598518,4.022214,3.358835,6.688143,-3.996802,-5.665346],[-5.062073,8.026245,-1.446421,6.967754,7.149497,-6.393110,9.876492,0.656616,4.772194,-4.267729]],[[-3.362809,8.058354,7.882742,-0.491611,-2.272936,-7.642155,0.465198,-4.777305,-0.399758,2.385925],[-4.859036,-4.858995,-3.179457,8.523096,3.645276,-0.336256,2.804788,5.859164,-6.563453,3.054025],[5.015165,-2.910304,9.201975,-8.824497,-0.658290,-5.899264,3.483058,-5.038414,-2.228707,3.291420],[-6.607780,5.665285,-4.652341,-2.472026,-3.181250,2.073460,2.079972,-6.694065,-5.931701,-7.575286],[-7.742170,1.771744,-1.605754,-8.863897,-4.835890,-4.101059,7.562366,-4.109282,9.171282,7.780707],[-5.418028,1.124262,-5.470770,7.069972,-5.531852,3.130902,-1.509377,8.194311,0.293454,1.209970],[1.339686,-9.299381,1.878580,-3.563253,6.944007,-7.535679,-3.682019,2.292892,-6.267309,-9.595682],[2.555586,9.330077,-2.774813,-9.324152,-9.971723,8.178087,9.177794,4.855149,1.901754,2.175302],[4.382861,-8.452287,4.118490,-7.944084,-1.253173,5.646734,-2.785515,4.930014,2.155966,-3.531059],[1.000412,6.285172,7.188176,3.446938,5.444643,6.089107,3.389359,-3.367708,-6.879451,-4.448653],[2.720561,-3.541046,-7.042410,5.647293,1.457991,-9.922855,1.452389,0.261514,-6.862756,3.315248],[-0.491763,-7.672872,2.242384,-3.534792,5.572177,-1.742926,-0.148668,-3.445529,6.348824,-7.448445],[-4.973609,1.567589,4.249005,-6.751740,-9.563129,0.410447,1.544399,-9.749495,-0.256494,-1.527491],[0.004666,9.559800,2.007101,-1.356477,6.280258,8.540249,3.562564,7.650199,5.243309,-5.725534]],[[-3.283953,-2.142133,5.690925,-5.653114,-7.160916,9.225390,7.224184,8.381651,8.247250,4.443248],[8.886005,-0.320353,-0.385518,9.935392,2.443795,5.237214,5.515824,8.529660,-8.653693,-2.384905],[-7.263659,-9.975578,-0.306940,-9.825084,7.997487,-9.993435,-0.286545,-5.803184,5.758688,7.730065],[9.165962,-0.064837,-5.533160,-3.317743,9.675677,2.888237,-3.926862,0.744197,-6.596791,-3.884485],[-4.902201,-2.704253,1.714270,0.782223,-1.986389,-3.991053,9.374147,-2.461356,-7.249612,-4.567300],[5.378098,-2.104778,5.964743,7.148741,0.747999,2.199504,-4.926332,6.493842,-5.181095,-4.102534],[3.221791,2.079632,7.858366,-1.842150,-7.738456,4.041442,2.459991,8.483927,-6.514381,-3.773733],[2.823023,6.804164,3.101931,9.424501,3.194272,-9.310782,-1.442249,5.083857,6.675694,-4.157884],[-7.757839,3.995423,2.470236,-1.865839,6.983510,8.730144,-6.921013,5.587515,7.098021,-0.442391],[-0.666714,5.815496,-3.800497,4.026533,5.717096,2.774559,0.644661,5.075238,6.817606,-8.875588],[-0.263619,3.725927,-6.763770,-9.642359,-1.350622,-9.416872,3.584228,9.533749,-0.350582,7.394123],[-2.383139,7.154929,6.562551,-7.332197,-8.508577,-7.105671,6.587054,-5.790784,-5.607335,4.885628],[4.138384,8.854131,-0.626231,-9.868260,1.749255,-7.522383,-7.228571,-7.138827,-7.614541,-3.347947],[9.295865,9.616495,9.866513,6.397655,-4.704658,-2.634186,-6.763337,-7.197459,-8.356402,-4.563501]]], dtype = "float32")#candidate|4217|(12, 14, 10)|const|float32
bop_4218 = relay.logical_xor(call_4211.astype('int32'), relay.reshape(const_4217.astype('int32'), relay.shape_of(call_4211))) # shape=(12, 14, 10)
bop_4221 = relay.logical_xor(call_4212.astype('int32'), relay.reshape(const_4217.astype('int32'), relay.shape_of(call_4212))) # shape=(12, 14, 10)
output = relay.Tuple([call_4201,bop_4218,])
output2 = relay.Tuple([call_4202,bop_4221,])
func_4234 = relay.Function([], output)
mod['func_4234'] = func_4234
mod = relay.transform.InferType()(mod)
output = func_4234()
func_4235 = relay.Function([], output)
mutated_mod['func_4235'] = func_4235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2322_call = mod.get_global_var('func_2322')
func_2324_call = mutated_mod.get_global_var('func_2324')
call_4238 = relay.TupleGetItem(func_2322_call(), 0)
call_4239 = relay.TupleGetItem(func_2324_call(), 0)
output = relay.Tuple([call_4238,])
output2 = relay.Tuple([call_4239,])
func_4240 = relay.Function([], output)
mod['func_4240'] = func_4240
mod = relay.transform.InferType()(mod)
mutated_mod['func_4240'] = func_4240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4240_call = mutated_mod.get_global_var('func_4240')
call_4241 = func_4240_call()
output = call_4241
func_4242 = relay.Function([], output)
mutated_mod['func_4242'] = func_4242
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4270 = relay.var("var_4270", dtype = "int64", shape = ())#candidate|4270|()|var|int64
var_4271 = relay.var("var_4271", dtype = "int64", shape = (16, 1, 16))#candidate|4271|(16, 1, 16)|var|int64
bop_4272 = relay.left_shift(var_4270.astype('int64'), var_4271.astype('int64')) # shape=(16, 1, 16)
func_2191_call = mod.get_global_var('func_2191')
func_2195_call = mutated_mod.get_global_var('func_2195')
const_4285 = relay.const([8,-2,-2,2,-9,-2,-9,-5,-2,7,-4,-1,7,-4,-3,-9,10,-2,2,-4,5,1,-8,8,-1,-3,5,-5,-7,-7,-9,3,-2,2,3,4,3,9,2,-1,-4,7,10,4,-3,10,-1,-3,-10,-6,-10,8,-6,5,6,-10,-2,-2,8,-10,10,7,4,4,-3,-8,3,-8,-5,-6,1,-3,-2,5,-2,-5,6,-4,9,8,-10,-9,-2,-3,-10,-8,-6,5,-6,10,-7,10,6,-6,4,9,10,-9,4,9,-1,-6,6,7,-2,-9,3,-2,1,-3], dtype = "int64")#candidate|4285|(110,)|const|int64
call_4284 = relay.TupleGetItem(func_2191_call(relay.reshape(const_4285.astype('int64'), [2, 11, 5]), relay.reshape(const_4285.astype('int64'), [2, 11, 5]), ), 0)
call_4286 = relay.TupleGetItem(func_2195_call(relay.reshape(const_4285.astype('int64'), [2, 11, 5]), relay.reshape(const_4285.astype('int64'), [2, 11, 5]), ), 0)
func_1538_call = mod.get_global_var('func_1538')
func_1540_call = mutated_mod.get_global_var('func_1540')
var_4305 = relay.var("var_4305", dtype = "float64", shape = (780,))#candidate|4305|(780,)|var|float64
call_4304 = relay.TupleGetItem(func_1538_call(relay.reshape(var_4305.astype('float64'), [780,])), 3)
call_4306 = relay.TupleGetItem(func_1540_call(relay.reshape(var_4305.astype('float64'), [780,])), 3)
uop_4308 = relay.cos(const_4285.astype('float64')) # shape=(110,)
bop_4316 = relay.bitwise_or(uop_4308.astype('int32'), var_4270.astype('int32')) # shape=(110,)
uop_4319 = relay.log(const_4285.astype('float64')) # shape=(110,)
output = relay.Tuple([bop_4272,call_4284,call_4304,var_4305,bop_4316,uop_4319,])
output2 = relay.Tuple([bop_4272,call_4286,call_4306,var_4305,bop_4316,uop_4319,])
func_4324 = relay.Function([var_4270,var_4271,var_4305,], output)
mod['func_4324'] = func_4324
mod = relay.transform.InferType()(mod)
var_4325 = relay.var("var_4325", dtype = "int64", shape = ())#candidate|4325|()|var|int64
var_4326 = relay.var("var_4326", dtype = "int64", shape = (16, 1, 16))#candidate|4326|(16, 1, 16)|var|int64
var_4327 = relay.var("var_4327", dtype = "float64", shape = (780,))#candidate|4327|(780,)|var|float64
output = func_4324(var_4325,var_4326,var_4327,)
func_4328 = relay.Function([var_4325,var_4326,var_4327,], output)
mutated_mod['func_4328'] = func_4328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1620_call = mutated_mod.get_global_var('func_1620')
call_4362 = relay.TupleGetItem(func_1619_call(), 2)
call_4363 = relay.TupleGetItem(func_1620_call(), 2)
output = call_4362
output2 = call_4363
func_4367 = relay.Function([], output)
mod['func_4367'] = func_4367
mod = relay.transform.InferType()(mod)
mutated_mod['func_4367'] = func_4367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4367_call = mutated_mod.get_global_var('func_4367')
call_4368 = func_4367_call()
output = call_4368
func_4369 = relay.Function([], output)
mutated_mod['func_4369'] = func_4369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3055_call = mod.get_global_var('func_3055')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_4390 = relay.TupleGetItem(func_3055_call(), 3)
call_4391 = relay.TupleGetItem(func_3056_call(), 3)
output = call_4390
output2 = call_4391
func_4413 = relay.Function([], output)
mod['func_4413'] = func_4413
mod = relay.transform.InferType()(mod)
mutated_mod['func_4413'] = func_4413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4413_call = mutated_mod.get_global_var('func_4413')
call_4414 = func_4413_call()
output = call_4414
func_4415 = relay.Function([], output)
mutated_mod['func_4415'] = func_4415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2073_call = mod.get_global_var('func_2073')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_4424 = relay.TupleGetItem(func_2073_call(), 0)
call_4425 = relay.TupleGetItem(func_2074_call(), 0)
uop_4426 = relay.sinh(call_4424.astype('float32')) # shape=(7, 2, 2)
uop_4428 = relay.sinh(call_4425.astype('float32')) # shape=(7, 2, 2)
var_4443 = relay.var("var_4443", dtype = "float32", shape = (7, 2, 2))#candidate|4443|(7, 2, 2)|var|float32
bop_4444 = relay.multiply(uop_4426.astype('uint16'), relay.reshape(var_4443.astype('uint16'), relay.shape_of(uop_4426))) # shape=(7, 2, 2)
bop_4447 = relay.multiply(uop_4428.astype('uint16'), relay.reshape(var_4443.astype('uint16'), relay.shape_of(uop_4428))) # shape=(7, 2, 2)
output = relay.Tuple([bop_4444,])
output2 = relay.Tuple([bop_4447,])
func_4450 = relay.Function([var_4443,], output)
mod['func_4450'] = func_4450
mod = relay.transform.InferType()(mod)
mutated_mod['func_4450'] = func_4450
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4451 = relay.var("var_4451", dtype = "float32", shape = (7, 2, 2))#candidate|4451|(7, 2, 2)|var|float32
func_4450_call = mutated_mod.get_global_var('func_4450')
call_4452 = func_4450_call(var_4451)
output = call_4452
func_4453 = relay.Function([var_4451], output)
mutated_mod['func_4453'] = func_4453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2870_call = mod.get_global_var('func_2870')
func_2872_call = mutated_mod.get_global_var('func_2872')
call_4459 = relay.TupleGetItem(func_2870_call(), 0)
call_4460 = relay.TupleGetItem(func_2872_call(), 0)
output = call_4459
output2 = call_4460
func_4478 = relay.Function([], output)
mod['func_4478'] = func_4478
mod = relay.transform.InferType()(mod)
mutated_mod['func_4478'] = func_4478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4478_call = mutated_mod.get_global_var('func_4478')
call_4479 = func_4478_call()
output = call_4479
func_4480 = relay.Function([], output)
mutated_mod['func_4480'] = func_4480
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4594 = relay.var("var_4594", dtype = "float64", shape = (14, 10, 16))#candidate|4594|(14, 10, 16)|var|float64
uop_4595 = relay.acos(var_4594.astype('float64')) # shape=(14, 10, 16)
output = uop_4595
output2 = uop_4595
func_4599 = relay.Function([var_4594,], output)
mod['func_4599'] = func_4599
mod = relay.transform.InferType()(mod)
var_4600 = relay.var("var_4600", dtype = "float64", shape = (14, 10, 16))#candidate|4600|(14, 10, 16)|var|float64
output = func_4599(var_4600)
func_4601 = relay.Function([var_4600], output)
mutated_mod['func_4601'] = func_4601
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4617 = relay.var("var_4617", dtype = "int16", shape = (10, 5, 15))#candidate|4617|(10, 5, 15)|var|int16
var_4618 = relay.var("var_4618", dtype = "int16", shape = (10, 5, 15))#candidate|4618|(10, 5, 15)|var|int16
bop_4619 = relay.greater_equal(var_4617.astype('bool'), relay.reshape(var_4618.astype('bool'), relay.shape_of(var_4617))) # shape=(10, 5, 15)
uop_4623 = relay.acos(bop_4619.astype('float64')) # shape=(10, 5, 15)
var_4640 = relay.var("var_4640", dtype = "int16", shape = (10, 5, 15))#candidate|4640|(10, 5, 15)|var|int16
bop_4641 = relay.bitwise_and(var_4618.astype('int32'), relay.reshape(var_4640.astype('int32'), relay.shape_of(var_4618))) # shape=(10, 5, 15)
bop_4646 = relay.left_shift(bop_4619.astype('int16'), relay.reshape(var_4618.astype('int16'), relay.shape_of(bop_4619))) # shape=(10, 5, 15)
uop_4657 = relay.log2(uop_4623.astype('float32')) # shape=(10, 5, 15)
func_2561_call = mod.get_global_var('func_2561')
func_2563_call = mutated_mod.get_global_var('func_2563')
call_4660 = relay.TupleGetItem(func_2561_call(), 2)
call_4661 = relay.TupleGetItem(func_2563_call(), 2)
func_1915_call = mod.get_global_var('func_1915')
func_1920_call = mutated_mod.get_global_var('func_1920')
const_4664 = relay.const([-0.698779,-9.299379,-4.809556,8.980750,-5.755998,-9.383268,-3.131296,0.280990,-9.343523,4.582824,-5.432908,-2.467832,-6.840321,8.135405,4.701333,4.285636,-6.870897,5.944896,5.797709,-2.233906,-0.384210,-1.179603,5.273362,-2.384090,5.413279,7.855853,-1.867014,-4.015535,3.412894,-3.055536,-8.124745,8.082753,-0.210916,3.513700,6.596664,6.053958,4.608308,-6.498768,0.637104,-0.587894,-7.154236,4.496231,-4.708303,6.186034,1.268078,-9.017802,7.449867,-2.649721,-1.965424,-2.632938,0.862833,4.611806,5.188975,3.139961,-4.051485,2.966778,7.761935,1.563503,-9.580175,-9.831693,5.514385,-2.926960,-6.116089,-2.746313,-0.899488,-8.265499,-5.996568,-4.610422,4.765633,-1.221346,-9.588361,-4.178321,-7.717297,2.699647,-9.395772,-6.000908,-0.857021,2.609630,0.012677,5.092790,-7.133883,1.411414,-7.484302,-3.284165,6.790792,4.372172,-7.425667,-1.850922], dtype = "float32")#candidate|4664|(88,)|const|float32
var_4665 = relay.var("var_4665", dtype = "float64", shape = (880,))#candidate|4665|(880,)|var|float64
call_4663 = relay.TupleGetItem(func_1915_call(relay.reshape(call_4660.astype('float64'), [780,]), relay.reshape(const_4664.astype('float32'), [22, 4]), relay.reshape(var_4665.astype('float64'), [11, 8, 10]), ), 6)
call_4666 = relay.TupleGetItem(func_1920_call(relay.reshape(call_4660.astype('float64'), [780,]), relay.reshape(const_4664.astype('float32'), [22, 4]), relay.reshape(var_4665.astype('float64'), [11, 8, 10]), ), 6)
func_3519_call = mod.get_global_var('func_3519')
func_3522_call = mutated_mod.get_global_var('func_3522')
var_4669 = relay.var("var_4669", dtype = "float32", shape = (54,))#candidate|4669|(54,)|var|float32
call_4668 = func_3519_call(relay.reshape(var_4669.astype('float32'), [2, 9, 3]))
call_4670 = func_3519_call(relay.reshape(var_4669.astype('float32'), [2, 9, 3]))
output = relay.Tuple([bop_4641,bop_4646,uop_4657,call_4660,call_4663,const_4664,var_4665,call_4668,var_4669,])
output2 = relay.Tuple([bop_4641,bop_4646,uop_4657,call_4661,call_4666,const_4664,var_4665,call_4670,var_4669,])
func_4678 = relay.Function([var_4617,var_4618,var_4640,var_4665,var_4669,], output)
mod['func_4678'] = func_4678
mod = relay.transform.InferType()(mod)
mutated_mod['func_4678'] = func_4678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4678_call = mutated_mod.get_global_var('func_4678')
var_4680 = relay.var("var_4680", dtype = "int16", shape = (10, 5, 15))#candidate|4680|(10, 5, 15)|var|int16
var_4681 = relay.var("var_4681", dtype = "int16", shape = (10, 5, 15))#candidate|4681|(10, 5, 15)|var|int16
var_4682 = relay.var("var_4682", dtype = "int16", shape = (10, 5, 15))#candidate|4682|(10, 5, 15)|var|int16
var_4683 = relay.var("var_4683", dtype = "float64", shape = (880,))#candidate|4683|(880,)|var|float64
var_4684 = relay.var("var_4684", dtype = "float32", shape = (54,))#candidate|4684|(54,)|var|float32
call_4679 = func_4678_call(var_4680,var_4681,var_4682,var_4683,var_4684,)
output = call_4679
func_4685 = relay.Function([var_4680,var_4681,var_4682,var_4683,var_4684,], output)
mutated_mod['func_4685'] = func_4685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1762_call = mod.get_global_var('func_1762')
func_1764_call = mutated_mod.get_global_var('func_1764')
call_4720 = relay.TupleGetItem(func_1762_call(), 0)
call_4721 = relay.TupleGetItem(func_1764_call(), 0)
output = relay.Tuple([call_4720,])
output2 = relay.Tuple([call_4721,])
func_4727 = relay.Function([], output)
mod['func_4727'] = func_4727
mod = relay.transform.InferType()(mod)
mutated_mod['func_4727'] = func_4727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4727_call = mutated_mod.get_global_var('func_4727')
call_4728 = func_4727_call()
output = call_4728
func_4729 = relay.Function([], output)
mutated_mod['func_4729'] = func_4729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3207_call = mod.get_global_var('func_3207')
func_3209_call = mutated_mod.get_global_var('func_3209')
call_4732 = relay.TupleGetItem(func_3207_call(), 1)
call_4733 = relay.TupleGetItem(func_3209_call(), 1)
output = call_4732
output2 = call_4733
func_4752 = relay.Function([], output)
mod['func_4752'] = func_4752
mod = relay.transform.InferType()(mod)
mutated_mod['func_4752'] = func_4752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4752_call = mutated_mod.get_global_var('func_4752')
call_4753 = func_4752_call()
output = call_4753
func_4754 = relay.Function([], output)
mutated_mod['func_4754'] = func_4754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4478_call = mod.get_global_var('func_4478')
func_4480_call = mutated_mod.get_global_var('func_4480')
call_4808 = func_4478_call()
call_4809 = func_4478_call()
output = call_4808
output2 = call_4809
func_4825 = relay.Function([], output)
mod['func_4825'] = func_4825
mod = relay.transform.InferType()(mod)
output = func_4825()
func_4826 = relay.Function([], output)
mutated_mod['func_4826'] = func_4826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3619_call = mod.get_global_var('func_3619')
func_3620_call = mutated_mod.get_global_var('func_3620')
call_4871 = relay.TupleGetItem(func_3619_call(), 0)
call_4872 = relay.TupleGetItem(func_3620_call(), 0)
output = call_4871
output2 = call_4872
func_4876 = relay.Function([], output)
mod['func_4876'] = func_4876
mod = relay.transform.InferType()(mod)
output = func_4876()
func_4877 = relay.Function([], output)
mutated_mod['func_4877'] = func_4877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1762_call = mod.get_global_var('func_1762')
func_1764_call = mutated_mod.get_global_var('func_1764')
call_4889 = relay.TupleGetItem(func_1762_call(), 0)
call_4890 = relay.TupleGetItem(func_1764_call(), 0)
output = relay.Tuple([call_4889,])
output2 = relay.Tuple([call_4890,])
func_4899 = relay.Function([], output)
mod['func_4899'] = func_4899
mod = relay.transform.InferType()(mod)
output = func_4899()
func_4900 = relay.Function([], output)
mutated_mod['func_4900'] = func_4900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2250_call = mod.get_global_var('func_2250')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_4964 = relay.TupleGetItem(func_2250_call(), 0)
call_4965 = relay.TupleGetItem(func_2251_call(), 0)
func_1762_call = mod.get_global_var('func_1762')
func_1764_call = mutated_mod.get_global_var('func_1764')
call_4969 = relay.TupleGetItem(func_1762_call(), 0)
call_4970 = relay.TupleGetItem(func_1764_call(), 0)
func_3435_call = mod.get_global_var('func_3435')
func_3437_call = mutated_mod.get_global_var('func_3437')
call_4973 = func_3435_call(relay.reshape(call_4964.astype('float64'), [780,]))
call_4974 = func_3435_call(relay.reshape(call_4964.astype('float64'), [780,]))
output = relay.Tuple([call_4964,call_4969,call_4973,])
output2 = relay.Tuple([call_4965,call_4970,call_4974,])
func_4977 = relay.Function([], output)
mod['func_4977'] = func_4977
mod = relay.transform.InferType()(mod)
mutated_mod['func_4977'] = func_4977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4977_call = mutated_mod.get_global_var('func_4977')
call_4978 = func_4977_call()
output = call_4978
func_4979 = relay.Function([], output)
mutated_mod['func_4979'] = func_4979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4367_call = mod.get_global_var('func_4367')
func_4369_call = mutated_mod.get_global_var('func_4369')
call_4980 = func_4367_call()
call_4981 = func_4367_call()
output = call_4980
output2 = call_4981
func_4991 = relay.Function([], output)
mod['func_4991'] = func_4991
mod = relay.transform.InferType()(mod)
output = func_4991()
func_4992 = relay.Function([], output)
mutated_mod['func_4992'] = func_4992
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5029 = relay.var("var_5029", dtype = "float64", shape = (16, 6, 8))#candidate|5029|(16, 6, 8)|var|float64
const_5030 = relay.const([[[-9.266494,2.710378,7.714349,3.682567,-8.926594,-4.836628,-6.211018,4.144750],[-0.618741,-4.688597,9.208844,-7.787233,4.419145,8.435007,-1.149758,-0.169680],[-2.582634,7.894240,0.817685,-7.018948,8.079787,6.968684,-9.039066,-4.197445],[-8.944447,4.115464,5.540000,2.636742,-6.010979,1.018204,0.762218,-9.983100],[-4.174625,7.203897,-6.526675,0.249032,-0.352561,-0.836419,-7.597990,7.459953],[9.020514,-1.791186,-8.399563,0.822378,-2.151540,4.860780,-6.499835,1.840540]],[[-2.818187,2.800134,-7.784944,-6.343276,3.116374,7.178098,8.933073,-1.063555],[-8.765556,6.940898,-6.224670,1.555968,-4.077209,-5.247369,-4.536368,7.035114],[-4.678403,-6.387249,5.718996,3.544883,9.490816,-5.667307,5.225709,0.485080],[2.978343,8.669289,2.386448,-7.471843,8.902737,-0.577697,-5.470649,-4.284341],[-3.567519,-3.843823,3.542205,0.452446,-8.952413,5.292548,-4.604306,6.991746],[-5.406972,-6.497429,-8.430100,4.055042,2.449978,3.142386,0.271097,3.924359]],[[-2.309970,5.665784,8.243490,-0.236416,4.489132,-0.201234,-1.567062,3.635569],[-6.295847,-5.678493,3.421872,-1.474370,-8.372375,-2.531243,-9.128302,5.576939],[0.514337,-3.668028,2.167581,2.425621,8.387907,1.279609,5.110228,-0.017119],[-9.063150,-2.424784,-2.338068,-5.712489,2.706375,-5.261177,-2.821886,-4.784776],[-9.099185,2.009537,-2.713097,-8.996138,-9.108453,2.931983,6.014070,7.078621],[8.982122,9.873907,-9.267637,-5.717282,-0.127289,5.809148,-0.053768,6.816299]],[[9.212239,5.602390,7.551203,9.265407,9.086510,9.244383,-7.568777,-7.151317],[0.715134,1.659080,1.204539,6.183034,-7.220679,6.814703,-9.921498,1.088751],[7.626974,7.152259,3.370109,-1.934535,-9.915151,7.056425,-8.089495,-4.717056],[3.547522,8.366876,2.076447,-9.306984,-8.293097,-2.043977,-4.046487,-3.484380],[-7.690933,-4.780501,-6.130163,-9.742789,6.963236,0.487272,6.586891,5.863355],[8.946901,-2.197444,8.973204,-1.233424,-0.760530,-1.872392,-0.758796,-2.979770]],[[4.903783,-2.034263,7.312676,-2.289791,-2.306628,-5.564781,2.151149,-3.215290],[-8.485405,6.470990,-5.523414,8.145911,-2.324168,7.221538,-4.619236,-2.002756],[8.095986,0.911794,3.641863,6.707968,2.446505,-4.519029,3.166505,8.512026],[1.232320,6.022582,-9.476177,-8.643806,-0.217646,-7.326296,2.240192,-9.497950],[2.444837,1.038564,1.244005,1.557472,-4.983778,0.817057,-9.779883,0.185177],[1.196680,5.963281,-2.187176,9.479572,-5.305147,4.361543,-3.810334,-8.509775]],[[-6.793896,-3.720778,-7.823692,-2.697285,2.730951,-4.493397,7.816589,6.004903],[-1.286327,-0.604859,-4.664717,7.808548,2.484598,-5.836968,8.835856,-7.718572],[-5.610001,9.892757,-7.194968,7.642240,-7.742539,6.185465,-3.793426,-8.603699],[-9.925230,3.904132,-6.736182,7.405201,8.622128,0.989052,-8.725625,-0.660364],[3.126735,3.865208,-9.168683,2.715044,-4.482654,-7.790316,-9.589478,2.973924],[7.274659,5.510383,9.681689,-1.926721,8.031795,9.748410,7.519357,-0.442241]],[[-1.454660,-1.337157,5.149820,8.211038,-4.594115,-5.532364,-7.569995,2.107655],[-4.534054,-9.286601,5.650046,-4.843331,-5.544462,-1.737795,-3.370829,-9.459387],[-1.009407,2.769501,1.875364,1.684622,-5.788391,-3.386988,1.739434,-8.263779],[-3.742171,-7.542413,9.755001,-8.163114,-1.454716,7.234152,-3.233661,9.323879],[-3.940331,-2.857882,1.007758,-1.543609,4.724264,8.069343,-2.950352,-4.067113],[-1.090044,5.388896,7.350783,2.134280,-9.600023,-8.364194,1.437311,-3.329853]],[[-7.087394,9.942229,-3.799916,7.250501,-4.863915,0.666774,4.190103,0.197491],[-8.629236,4.570312,8.413886,9.193260,-4.224918,-1.272555,-5.584083,7.609189],[6.541259,-5.329634,-0.037710,9.689046,-4.275523,-2.301792,-0.375106,0.920212],[-0.006487,-1.526343,-9.262526,9.245581,-7.978298,-6.545496,-7.767057,8.780830],[-6.112708,-8.469231,-1.842473,7.887408,-8.826360,-2.250086,8.479834,8.667083],[-0.046055,8.942856,8.998804,7.613698,-0.914522,-0.199685,-2.877054,-7.743558]],[[-7.144243,2.814146,-9.865847,3.123862,-4.680175,0.482413,-6.233326,5.764538],[0.221148,9.703104,-3.607880,-4.663784,-3.671241,7.262201,-6.497346,7.741109],[-6.542055,9.362198,9.933097,0.680333,-9.284418,1.612946,3.038660,-0.909132],[-3.046136,-6.960169,-5.583273,5.919713,4.433110,8.255697,6.780984,-1.703974],[-3.153989,-6.184611,2.574182,7.808619,9.015593,-6.893152,-3.587186,8.684547],[-6.716487,0.695393,-2.693504,8.021363,9.933770,1.458259,8.029032,5.975329]],[[-1.409575,3.807546,9.925816,4.979697,1.226824,-2.898276,-5.186731,-9.096937],[6.528926,-7.551314,1.253185,4.825040,-8.937852,7.961920,3.770871,0.191708],[-9.338766,1.775035,-3.176856,-3.512791,-8.830242,3.890403,-6.830471,4.081128],[2.796013,5.156654,5.417629,7.348068,-1.553974,3.708868,7.591609,9.140180],[4.259723,-8.831711,3.189030,9.100342,0.620808,0.367650,9.049143,8.729828],[-8.945255,7.757543,7.758174,2.985624,4.085071,0.586834,-7.637286,-0.978992]],[[5.365675,2.860510,-7.354856,-9.649803,2.624271,5.513492,-2.216280,6.124149],[-5.803007,-9.849882,0.735050,7.053570,-3.350058,-6.720844,2.868986,-4.651493],[0.832728,2.947261,1.297510,8.567092,6.357753,9.647762,8.455681,-6.517002],[5.406067,3.038116,5.081987,0.309473,-7.413587,-0.488776,-6.696158,-3.959668],[-9.695442,1.353036,-7.212339,-6.110263,-8.926112,1.088524,-5.703870,6.268642],[2.954701,-2.411221,1.793306,-6.798484,6.927021,5.925943,-5.069852,0.053792]],[[9.197794,-0.433061,6.992745,-7.894734,-8.998233,3.536001,5.587235,-9.231961],[-8.197400,1.991939,-0.386132,3.642539,-0.225191,1.362401,-1.695488,2.744295],[-7.235326,0.162658,-0.528850,1.926086,-3.870222,3.672773,7.927122,-9.125963],[8.742019,3.825885,6.608198,0.392721,1.246623,-4.488469,-3.655811,8.362983],[0.124324,-3.451475,-7.783600,-6.655057,2.182605,9.339433,7.433846,-6.258322],[0.593589,-9.740271,-4.046133,9.016654,0.499307,7.644200,3.250246,-4.918113]],[[-3.220207,5.233460,-7.052133,7.258101,0.495076,-5.834999,-9.332978,3.346678],[-8.963113,-2.948566,-6.178992,-8.553434,-1.551453,0.149849,-5.748373,-9.906491],[-1.078128,-0.187792,-1.397676,-8.854359,-7.753606,-3.252398,0.231031,-8.931657],[-9.500651,-2.933127,-8.151274,-1.412487,2.886117,0.693702,1.132689,-2.431752],[7.425895,-3.735520,-1.742658,7.808653,0.793139,4.706255,-3.787869,-8.754398],[-5.861433,3.372084,1.775025,3.710515,9.875565,-3.180980,5.818261,-2.915588]],[[7.349062,-7.451981,-3.752850,-5.446288,4.211638,-0.042880,-9.678478,-9.035590],[-2.508823,8.468588,1.434277,-7.079356,1.768318,3.756763,7.562081,6.427914],[-5.241079,-2.853718,-7.923226,-3.916047,-9.883817,1.953674,9.009160,4.696783],[3.665114,0.702277,-0.183446,2.870870,5.019420,-8.059362,-5.325552,1.959718],[6.922983,4.306386,5.309968,1.108112,2.895602,-7.272037,1.972173,-8.232250],[-5.234041,9.441072,8.936042,7.562396,-4.373485,2.105733,6.032063,3.617243]],[[-7.576040,-4.905268,6.396663,8.830733,-5.036723,4.450055,5.435625,-5.554879],[-7.974228,-3.708703,-8.139773,-3.860455,3.232577,-4.073046,-1.434619,9.736577],[-1.323200,-2.780154,-0.999532,-9.806415,0.533978,-4.322285,8.217969,6.912544],[-3.721274,6.494948,0.332430,9.818046,3.976972,6.990807,-5.869123,-9.968726],[7.259223,-2.026905,-8.363035,-2.367182,-0.089896,8.409669,-5.106299,1.158336],[-5.412441,2.291736,-7.339808,7.991348,-1.655510,-5.136955,5.986777,-0.814555]],[[9.624904,-2.864750,9.278371,-6.832335,4.875772,-0.718951,-4.945770,6.206017],[-1.180237,-1.348877,3.934898,8.324858,-7.246328,-5.644181,-4.657567,-1.388454],[6.352837,-2.102451,-4.237673,5.403276,-3.730919,8.730050,1.215620,8.687240],[9.499232,4.384160,8.274485,5.598344,-9.903368,-5.928543,-6.655538,-8.736082],[5.477579,-4.879069,1.281910,-2.051167,3.410980,-6.330590,-2.900035,5.362079],[0.538580,-8.418752,3.286315,9.272250,-3.611006,-4.294731,-8.758090,-7.939736]]], dtype = "float64")#candidate|5030|(16, 6, 8)|const|float64
bop_5031 = relay.divide(var_5029.astype('float64'), relay.reshape(const_5030.astype('float64'), relay.shape_of(var_5029))) # shape=(16, 6, 8)
bop_5039 = relay.subtract(bop_5031.astype('uint8'), relay.reshape(var_5029.astype('uint8'), relay.shape_of(bop_5031))) # shape=(16, 6, 8)
func_2561_call = mod.get_global_var('func_2561')
func_2563_call = mutated_mod.get_global_var('func_2563')
call_5053 = relay.TupleGetItem(func_2561_call(), 1)
call_5054 = relay.TupleGetItem(func_2563_call(), 1)
output = relay.Tuple([bop_5039,call_5053,])
output2 = relay.Tuple([bop_5039,call_5054,])
func_5056 = relay.Function([var_5029,], output)
mod['func_5056'] = func_5056
mod = relay.transform.InferType()(mod)
mutated_mod['func_5056'] = func_5056
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5057 = relay.var("var_5057", dtype = "float64", shape = (16, 6, 8))#candidate|5057|(16, 6, 8)|var|float64
func_5056_call = mutated_mod.get_global_var('func_5056')
call_5058 = func_5056_call(var_5057)
output = call_5058
func_5059 = relay.Function([var_5057], output)
mutated_mod['func_5059'] = func_5059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2322_call = mod.get_global_var('func_2322')
func_2324_call = mutated_mod.get_global_var('func_2324')
call_5071 = relay.TupleGetItem(func_2322_call(), 0)
call_5072 = relay.TupleGetItem(func_2324_call(), 0)
func_4599_call = mod.get_global_var('func_4599')
func_4601_call = mutated_mod.get_global_var('func_4601')
var_5112 = relay.var("var_5112", dtype = "float64", shape = (2240,))#candidate|5112|(2240,)|var|float64
call_5111 = func_4599_call(relay.reshape(var_5112.astype('float64'), [14, 10, 16]))
call_5113 = func_4599_call(relay.reshape(var_5112.astype('float64'), [14, 10, 16]))
var_5118 = relay.var("var_5118", dtype = "float64", shape = (14, 10, 16))#candidate|5118|(14, 10, 16)|var|float64
bop_5119 = relay.multiply(call_5111.astype('float64'), relay.reshape(var_5118.astype('float64'), relay.shape_of(call_5111))) # shape=(14, 10, 16)
bop_5122 = relay.multiply(call_5113.astype('float64'), relay.reshape(var_5118.astype('float64'), relay.shape_of(call_5113))) # shape=(14, 10, 16)
func_3336_call = mod.get_global_var('func_3336')
func_3338_call = mutated_mod.get_global_var('func_3338')
call_5141 = func_3336_call()
call_5142 = func_3336_call()
output = relay.Tuple([call_5071,var_5112,bop_5119,call_5141,])
output2 = relay.Tuple([call_5072,var_5112,bop_5122,call_5142,])
func_5145 = relay.Function([var_5112,var_5118,], output)
mod['func_5145'] = func_5145
mod = relay.transform.InferType()(mod)
mutated_mod['func_5145'] = func_5145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5145_call = mutated_mod.get_global_var('func_5145')
var_5147 = relay.var("var_5147", dtype = "float64", shape = (2240,))#candidate|5147|(2240,)|var|float64
var_5148 = relay.var("var_5148", dtype = "float64", shape = (14, 10, 16))#candidate|5148|(14, 10, 16)|var|float64
call_5146 = func_5145_call(var_5147,var_5148,)
output = call_5146
func_5149 = relay.Function([var_5147,var_5148,], output)
mutated_mod['func_5149'] = func_5149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4478_call = mod.get_global_var('func_4478')
func_4480_call = mutated_mod.get_global_var('func_4480')
call_5162 = func_4478_call()
call_5163 = func_4478_call()
output = relay.Tuple([call_5162,])
output2 = relay.Tuple([call_5163,])
func_5180 = relay.Function([], output)
mod['func_5180'] = func_5180
mod = relay.transform.InferType()(mod)
output = func_5180()
func_5181 = relay.Function([], output)
mutated_mod['func_5181'] = func_5181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3055_call = mod.get_global_var('func_3055')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_5185 = relay.TupleGetItem(func_3055_call(), 4)
call_5186 = relay.TupleGetItem(func_3056_call(), 4)
output = relay.Tuple([call_5185,])
output2 = relay.Tuple([call_5186,])
func_5187 = relay.Function([], output)
mod['func_5187'] = func_5187
mod = relay.transform.InferType()(mod)
output = func_5187()
func_5188 = relay.Function([], output)
mutated_mod['func_5188'] = func_5188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3306_call = mod.get_global_var('func_3306')
func_3307_call = mutated_mod.get_global_var('func_3307')
call_5194 = relay.TupleGetItem(func_3306_call(), 5)
call_5195 = relay.TupleGetItem(func_3307_call(), 5)
func_4876_call = mod.get_global_var('func_4876')
func_4877_call = mutated_mod.get_global_var('func_4877')
call_5198 = func_4876_call()
call_5199 = func_4876_call()
func_3792_call = mod.get_global_var('func_3792')
func_3795_call = mutated_mod.get_global_var('func_3795')
const_5234 = relay.const([9.419219,0.353820,-7.454879,7.620093,-5.378652,6.341820,-0.874427,-3.714468,-7.654573,1.869884,7.859739,3.912896,9.472287,4.896935,1.848749,-5.471470,-4.603287,8.044259,-6.440494,6.897711,-7.339234,-2.089362,-9.302684,1.793774,3.348715,5.942662,0.162812,8.065209,-7.571453,2.705868,1.970887,0.296367,4.888706,0.936473,5.648323,7.458865,3.107373,-6.917436,-5.470093,-9.620420,9.756511,-7.687225,-3.254262,9.929074,-8.059170,-6.850113,-4.427789,-7.204916,1.897762,8.848382,-7.370864,-6.301389,-8.688231,-1.628491,-0.566188,0.040622,-9.359957,-1.007242,8.336677,-2.760912,-5.534051,-0.255773,-4.014788,7.263277,-4.198434,-9.866632,6.253730,-2.115743,-0.013304,-1.022500,1.937531,-3.318486,4.671967,-5.578375,-2.061996,2.107631,0.997126,0.840806,-3.387834,6.829643,-9.401202,2.722509,-4.528845,0.574677,-8.812844,-3.366392,2.847437,-9.120123,3.536500,-3.750840,5.393550,7.592582,2.149501,-6.862626,8.794412,-5.245804,3.079038,4.504786,4.726514,-8.328109,-9.627588,2.424589,3.073030,-4.823971,-4.747916,-7.994040,-6.046235,-0.558408], dtype = "float32")#candidate|5234|(108,)|const|float32
call_5233 = relay.TupleGetItem(func_3792_call(relay.reshape(const_5234.astype('float32'), [3, 9, 4])), 1)
call_5235 = relay.TupleGetItem(func_3795_call(relay.reshape(const_5234.astype('float32'), [3, 9, 4])), 1)
output = relay.Tuple([call_5194,call_5198,call_5233,const_5234,])
output2 = relay.Tuple([call_5195,call_5199,call_5235,const_5234,])
func_5237 = relay.Function([], output)
mod['func_5237'] = func_5237
mod = relay.transform.InferType()(mod)
mutated_mod['func_5237'] = func_5237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5237_call = mutated_mod.get_global_var('func_5237')
call_5238 = func_5237_call()
output = call_5238
func_5239 = relay.Function([], output)
mutated_mod['func_5239'] = func_5239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4991_call = mod.get_global_var('func_4991')
func_4992_call = mutated_mod.get_global_var('func_4992')
call_5358 = func_4991_call()
call_5359 = func_4991_call()
func_3895_call = mod.get_global_var('func_3895')
func_3898_call = mutated_mod.get_global_var('func_3898')
var_5362 = relay.var("var_5362", dtype = "bool", shape = (2925,))#candidate|5362|(2925,)|var|bool
call_5361 = relay.TupleGetItem(func_3895_call(relay.reshape(var_5362.astype('bool'), [13, 15, 15]), relay.reshape(var_5362.astype('bool'), [13, 15, 15]), ), 0)
call_5363 = relay.TupleGetItem(func_3898_call(relay.reshape(var_5362.astype('bool'), [13, 15, 15]), relay.reshape(var_5362.astype('bool'), [13, 15, 15]), ), 0)
output = relay.Tuple([call_5358,call_5361,var_5362,])
output2 = relay.Tuple([call_5359,call_5363,var_5362,])
func_5366 = relay.Function([var_5362,], output)
mod['func_5366'] = func_5366
mod = relay.transform.InferType()(mod)
mutated_mod['func_5366'] = func_5366
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5367 = relay.var("var_5367", dtype = "bool", shape = (2925,))#candidate|5367|(2925,)|var|bool
func_5366_call = mutated_mod.get_global_var('func_5366')
call_5368 = func_5366_call(var_5367)
output = call_5368
func_5369 = relay.Function([var_5367], output)
mutated_mod['func_5369'] = func_5369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4234_call = mod.get_global_var('func_4234')
func_4235_call = mutated_mod.get_global_var('func_4235')
call_5394 = relay.TupleGetItem(func_4234_call(), 1)
call_5395 = relay.TupleGetItem(func_4235_call(), 1)
var_5401 = relay.var("var_5401", dtype = "int32", shape = (12, 14, 10))#candidate|5401|(12, 14, 10)|var|int32
bop_5402 = relay.bitwise_and(call_5394.astype('int64'), relay.reshape(var_5401.astype('int64'), relay.shape_of(call_5394))) # shape=(12, 14, 10)
bop_5405 = relay.bitwise_and(call_5395.astype('int64'), relay.reshape(var_5401.astype('int64'), relay.shape_of(call_5395))) # shape=(12, 14, 10)
output = relay.Tuple([bop_5402,])
output2 = relay.Tuple([bop_5405,])
func_5408 = relay.Function([var_5401,], output)
mod['func_5408'] = func_5408
mod = relay.transform.InferType()(mod)
mutated_mod['func_5408'] = func_5408
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5409 = relay.var("var_5409", dtype = "int32", shape = (12, 14, 10))#candidate|5409|(12, 14, 10)|var|int32
func_5408_call = mutated_mod.get_global_var('func_5408')
call_5410 = func_5408_call(var_5409)
output = call_5410
func_5411 = relay.Function([var_5409], output)
mutated_mod['func_5411'] = func_5411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3619_call = mod.get_global_var('func_3619')
func_3620_call = mutated_mod.get_global_var('func_3620')
call_5416 = relay.TupleGetItem(func_3619_call(), 0)
call_5417 = relay.TupleGetItem(func_3620_call(), 0)
var_5430 = relay.var("var_5430", dtype = "float64", shape = (780,))#candidate|5430|(780,)|var|float64
bop_5431 = relay.logical_or(call_5416.astype('bool'), relay.reshape(var_5430.astype('bool'), relay.shape_of(call_5416))) # shape=(780,)
bop_5434 = relay.logical_or(call_5417.astype('bool'), relay.reshape(var_5430.astype('bool'), relay.shape_of(call_5417))) # shape=(780,)
var_5435 = relay.var("var_5435", dtype = "float64", shape = (780,))#candidate|5435|(780,)|var|float64
bop_5436 = relay.not_equal(var_5430.astype('bool'), relay.reshape(var_5435.astype('bool'), relay.shape_of(var_5430))) # shape=(780,)
output = relay.Tuple([bop_5431,bop_5436,])
output2 = relay.Tuple([bop_5434,bop_5436,])
func_5444 = relay.Function([var_5430,var_5435,], output)
mod['func_5444'] = func_5444
mod = relay.transform.InferType()(mod)
var_5445 = relay.var("var_5445", dtype = "float64", shape = (780,))#candidate|5445|(780,)|var|float64
var_5446 = relay.var("var_5446", dtype = "float64", shape = (780,))#candidate|5446|(780,)|var|float64
output = func_5444(var_5445,var_5446,)
func_5447 = relay.Function([var_5445,var_5446,], output)
mutated_mod['func_5447'] = func_5447
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5458 = relay.var("var_5458", dtype = "float32", shape = (16, 13, 6))#candidate|5458|(16, 13, 6)|var|float32
uop_5459 = relay.log10(var_5458.astype('float32')) # shape=(16, 13, 6)
func_3792_call = mod.get_global_var('func_3792')
func_3795_call = mutated_mod.get_global_var('func_3795')
const_5462 = relay.const([[-7.523789,6.342910,-2.591140,-6.488411,-5.207295,-1.085891,6.682943,-4.883503,7.844779,-6.779328,1.077094,-6.011530,-8.424442,4.526909,8.702046,2.630410,-3.733592,-3.962475],[-0.566026,6.937947,8.853224,8.047946,9.495701,-8.222280,-5.686460,-7.962043,8.140619,-6.865527,-8.638824,-7.659925,-8.894799,-1.423326,7.017923,-5.602774,0.361739,-1.146642],[9.613920,4.930817,1.234994,4.069056,4.455637,-6.211507,-0.856690,-2.580116,-9.073306,8.498721,-8.657046,4.842897,-2.610926,0.758771,7.632826,4.155732,6.009674,0.535767],[-9.846350,-9.472478,-9.811562,-2.480306,-7.641638,-9.043782,-7.291606,3.032450,1.144962,-5.106191,-0.224068,5.995663,6.266427,-0.754259,-5.704318,8.007886,-2.407447,-8.211953],[-7.578903,-8.726064,5.254909,6.883114,-5.344492,-6.855074,8.511060,6.895712,-6.129868,-9.636448,2.450756,3.005641,-3.854256,5.502572,-3.610718,-8.536762,-9.817637,1.119245],[9.891662,1.898549,-2.931370,8.597196,-2.145540,1.833216,9.080336,-0.463874,1.839431,-1.857327,2.677494,-2.330351,0.377304,-9.118878,7.321469,3.650953,0.566240,-2.782575]], dtype = "float32")#candidate|5462|(6, 18)|const|float32
call_5461 = relay.TupleGetItem(func_3792_call(relay.reshape(const_5462.astype('float32'), [3, 9, 4])), 2)
call_5463 = relay.TupleGetItem(func_3795_call(relay.reshape(const_5462.astype('float32'), [3, 9, 4])), 2)
output = relay.Tuple([uop_5459,call_5461,const_5462,])
output2 = relay.Tuple([uop_5459,call_5463,const_5462,])
func_5467 = relay.Function([var_5458,], output)
mod['func_5467'] = func_5467
mod = relay.transform.InferType()(mod)
var_5468 = relay.var("var_5468", dtype = "float32", shape = (16, 13, 6))#candidate|5468|(16, 13, 6)|var|float32
output = func_5467(var_5468)
func_5469 = relay.Function([var_5468], output)
mutated_mod['func_5469'] = func_5469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3207_call = mod.get_global_var('func_3207')
func_3209_call = mutated_mod.get_global_var('func_3209')
call_5474 = relay.TupleGetItem(func_3207_call(), 0)
call_5475 = relay.TupleGetItem(func_3209_call(), 0)
var_5478 = relay.var("var_5478", dtype = "uint8", shape = (448,))#candidate|5478|(448,)|var|uint8
bop_5479 = relay.floor_mod(call_5474.astype('float32'), relay.reshape(var_5478.astype('float32'), relay.shape_of(call_5474))) # shape=(448,)
bop_5482 = relay.floor_mod(call_5475.astype('float32'), relay.reshape(var_5478.astype('float32'), relay.shape_of(call_5475))) # shape=(448,)
func_3619_call = mod.get_global_var('func_3619')
func_3620_call = mutated_mod.get_global_var('func_3620')
call_5483 = relay.TupleGetItem(func_3619_call(), 1)
call_5484 = relay.TupleGetItem(func_3620_call(), 1)
uop_5487 = relay.asin(var_5478.astype('float64')) # shape=(448,)
func_3166_call = mod.get_global_var('func_3166')
func_3168_call = mutated_mod.get_global_var('func_3168')
call_5490 = relay.TupleGetItem(func_3166_call(), 0)
call_5491 = relay.TupleGetItem(func_3168_call(), 0)
output = relay.Tuple([bop_5479,call_5483,uop_5487,call_5490,])
output2 = relay.Tuple([bop_5482,call_5484,uop_5487,call_5491,])
func_5492 = relay.Function([var_5478,], output)
mod['func_5492'] = func_5492
mod = relay.transform.InferType()(mod)
var_5493 = relay.var("var_5493", dtype = "uint8", shape = (448,))#candidate|5493|(448,)|var|uint8
output = func_5492(var_5493)
func_5494 = relay.Function([var_5493], output)
mutated_mod['func_5494'] = func_5494
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5505 = relay.var("var_5505", dtype = "float32", shape = ())#candidate|5505|()|var|float32
var_5506 = relay.var("var_5506", dtype = "float32", shape = (12, 14, 7))#candidate|5506|(12, 14, 7)|var|float32
bop_5507 = relay.floor_mod(var_5505.astype('float32'), var_5506.astype('float32')) # shape=(12, 14, 7)
func_5056_call = mod.get_global_var('func_5056')
func_5059_call = mutated_mod.get_global_var('func_5059')
const_5521 = relay.const([2.466085,-6.468125,0.310415,-9.878136,7.459520,-1.974827,8.702921,-9.398734,-2.457313,-7.710368,3.037663,1.519881,8.706427,-5.600002,-4.140374,2.205758,-5.601309,-6.327499,-2.208180,6.683371,-2.746589,7.034350,-7.221529,-3.896621,8.688944,1.587233,-1.756113,1.162949,-1.051857,-8.742886,-1.414348,-1.663636,-1.976656,-1.294271,5.778017,-4.822697,4.918063,-5.351449,0.470984,-9.826022,3.417243,-1.672227,-6.410525,7.386840,3.732519,-4.261088,5.572984,-2.408198,4.897180,-6.393840,9.675175,-8.539051,7.780421,-8.261395,-4.809186,0.793953,0.447584,4.363009,1.649569,-5.166993,3.199445,-6.139437,7.682298,-0.955213,-7.779081,6.712083,6.746962,-4.939603,-6.903631,-9.151843,-1.182932,-3.474805,1.948189,8.160784,7.242636,7.555216,-5.264845,0.428146,-2.458286,-1.087617,6.576682,-5.746369,-9.924331,4.358214,-1.360634,4.196359,9.836288,-4.511014,5.813698,4.448965,0.742209,3.640111,9.553070,1.576654,-9.004293,-2.941077,9.482777,8.775049,6.483314,5.045115,-2.143108,-5.037045,-2.151326,-1.643906,5.617898,-1.152061,-8.850869,-5.310528,4.095796,0.503065,-7.962135,1.078161,8.848994,0.094605,9.218842,-7.920095,2.663952,9.791888,9.649483,4.360283,5.776188,2.017785,-0.943570,8.987339,8.849960,5.298672,-4.232963,4.410559,0.888445,2.159433,8.479823,-2.272348,-9.021813,3.038315,1.432780,-8.709370,-1.456519,-3.240740,-9.714716,-9.661866,6.936568,6.892725,-0.697821,9.983167,4.422866,-0.216805,-8.015654,1.969042,-3.410032,-5.749230,3.889627,3.267660,-3.341650,-1.485422,9.766824,-3.078055,8.626441,9.643180,-5.064989,5.176029,6.581250,7.803616,6.112325,-5.787590,3.998013,0.875740,-0.299780,-4.781239,0.250996,5.604737,-4.413858,0.524674,6.122623,9.477848,9.944380,4.456765,8.425428,-6.750332,0.564910,-2.968826,3.914981,3.984570,-9.667151,-3.906889,0.296061,0.595225,0.533322,4.327037,4.221671,-6.580069,2.186211,8.273360,-1.839357,9.728326,-4.341492,-2.637932,-9.757349,5.854322,-6.089542,-8.855410,7.781211,3.725267,-4.293906,5.493449,2.964798,-4.645657,2.362247,3.362823,0.890987,8.817847,7.161258,3.011239,-0.624516,-8.102102,-6.721603,-3.610296,-3.200737,-1.069927,-4.625349,-5.575727,0.519271,-1.916214,-7.690653,9.856959,1.256499,-5.803983,-8.262694,-5.149911,-4.371238,3.779174,7.690482,2.791987,9.961072,-1.823275,7.347917,-8.972075,6.953158,-7.826451,-9.136143,5.782564,-5.444278,-1.015607,2.102066,9.191893,-0.210964,-6.944839,-3.787389,0.539184,9.014389,4.207384,5.208396,7.170994,7.241342,-8.965666,2.116246,5.225068,6.550048,8.301518,-5.003720,8.615773,2.310780,-6.366734,0.159357,-2.743652,2.308073,3.239636,3.155815,7.527370,-6.976460,-2.841838,6.334063,-9.026085,-0.876107,7.768402,-3.014378,7.816804,-1.044522,-4.035417,7.834284,-8.950027,-5.199812,0.259073,-3.607578,-5.557863,9.121540,3.502081,-1.742257,7.224375,9.381105,4.561290,7.890397,5.962373,-0.680707,1.790806,-6.787571,-5.495930,-4.710853,-2.240205,-4.558025,9.523393,-3.216182,-4.450263,-3.246562,9.406892,-1.012369,-2.598818,7.558633,9.963010,1.040194,1.029195,-9.582501,-5.436721,-2.805054,-3.803839,-1.933423,-6.464543,-7.591941,7.531763,-9.962144,-8.485025,-5.714349,8.562187,-0.424174,4.225574,3.461720,-8.367317,0.010900,-7.270277,9.893386,-6.579124,1.364527,-5.552605,-0.122016,-7.327368,-7.229930,4.727626,6.697217,-5.517185,-7.031599,2.969974,9.842539,1.269787,2.933359,-5.190501,-9.308487,-8.936267,2.822594,9.577775,-3.685683,-0.057465,-0.297434,7.770044,-6.221376,-8.415586,-5.270612,9.641191,6.435408,-8.716360,-8.885496,4.913585,6.255725,-3.492306,8.637959,-7.298960,-9.623965,-7.580197,7.695750,-6.445988,-1.588607,-0.424126,9.920163,-8.153165,-2.708223,2.394861,3.301438,-0.352033,-3.747848,0.896163,-9.487016,8.955064,-8.039605,-4.453245,-5.409990,-0.708025,4.681310,3.967771,-9.962682,7.057917,-1.076119,3.999215,5.585816,-1.545782,5.131647,4.734807,-3.511441,-7.571478,9.792168,-6.734145,1.763831,-0.721148,4.297681,6.872991,7.257914,-1.803073,4.656770,8.523609,1.157629,-7.137461,7.020874,6.177716,5.729276,-4.703851,-3.623809,-1.031139,5.888503,-4.167050,-1.409362,-2.949301,-2.955026,1.606921,1.965448,-2.148773,-2.485426,3.435954,8.947377,3.596846,-6.832297,6.525047,-9.396167,-7.409668,-0.683975,-7.848864,1.528995,-9.995847,-2.937526,3.751812,-4.767186,-1.496290,0.300533,-9.226319,-9.034929,2.780478,2.670728,3.501504,-2.088155,-8.467860,-6.439743,5.160786,3.202466,5.905958,5.064551,2.305480,0.410120,-3.389554,2.241579,1.598410,2.185312,-5.453843,8.964781,-2.479770,-7.370291,-4.197092,-0.972470,-1.691098,2.526097,1.185093,-6.257070,-5.411254,-7.490543,-0.636077,5.654175,-6.302916,-2.545862,2.671021,-7.260691,9.830214,-1.668503,-9.915294,3.007791,9.006302,-1.278872,2.355174,1.901952,-1.971119,0.046881,-8.710117,-3.816385,8.674964,4.553654,-7.554594,-9.706197,-9.264595,9.573985,3.708537,7.485107,7.300725,4.402471,5.578096,-5.608034,1.615928,-4.732811,-3.889320,-1.245177,-2.981033,4.970278,7.378780,-8.638997,-3.522071,-4.987125,2.732599,-3.476804,-4.426318,6.068120,4.676140,5.880198,5.351437,-2.758665,9.531053,3.992879,-4.516080,-2.835370,6.747426,-9.049929,6.068287,8.106901,-2.007846,8.630134,-5.690305,-2.726784,8.678152,-2.495007,-7.176911,-9.326941,4.197333,9.786565,-7.093675,4.253108,-1.847124,-8.940480,0.702374,-0.879199,5.700912,-3.955123,4.996992,6.260202,-6.978178,5.196279,-6.466036,-6.964502,-7.226463,-4.878479,-5.590204,-8.226187,5.031592,-6.132361,-9.430346,-4.822836,-2.914772,5.616458,-3.081943,-7.674352,-5.737347,7.476829,-3.825777,-5.281167,2.602705,1.092208,6.408827,-8.097466,-5.571360,4.819938,-6.114688,9.982110,-5.445813,-1.995512,2.702951,5.121327,-7.040731,2.316127,7.569014,3.663454,-0.069175,-4.205964,-2.137073,-4.398236,5.892819,-8.977275,8.152655,-3.324800,-8.082010,-5.542463,-0.261600,-8.246898,-2.692125,9.670127,4.261714,-2.008785,6.266932,7.649155,-9.280751,6.286721,3.858178,6.850705,3.745269,-1.830152,-1.141485,0.960675,5.446815,7.787315,9.038325,3.742943,-7.864115,-4.319195,-9.056250,0.583269,0.624247,-9.156751,-0.887329,-5.823203,4.801931,-0.660734,5.245025,-3.467260,4.480944,2.440858,-7.827729,6.890189,-9.635203,3.672098,-5.149445,0.848229,6.663487,-6.484028,1.462290,6.890632,-5.523187,-2.367258,4.905949,-7.331823,8.751725,-4.837994,-3.742195,-2.090321,5.037030,4.782185,-2.075542,-2.332606,-9.557536,-9.886997,3.583065,-7.099935,6.410976,3.835962,-5.588987,8.728210,6.912270,8.024320,3.102836,8.072315,9.345190,-6.752996,2.411711,7.898013,-3.225305,-4.938789,4.148690,3.386011,0.793119,-2.685622,-2.777052,5.959337,3.695308,9.761678,-1.457653,9.697200,0.002138,-6.001027,-4.371571,-2.819402,6.220447,-4.838658,1.837744,7.096942,2.742988,-7.324503,9.136264,6.417876,9.577636,0.369370,1.919108,0.216798,1.851094,-2.934851,-8.772247,-8.249211,3.662787,-3.119364,-9.206319,7.136486,1.542015,8.772856,-7.289683,9.848902,3.338420,8.449441,-6.848238,9.946002,-9.838345,8.606975,-1.104036,-5.628281,8.554849,-9.692326,-8.864114,5.063674,-4.170060,-5.434397,8.381301,-7.188179,3.139184,-6.089870,-2.191788,2.910736,8.404261,3.836465,-5.507661,3.332496,4.452401,2.256131,7.107084,0.789226,0.774861,-5.032271,-1.145840,3.242934,7.998021,2.786887,1.120438,-9.530355,3.893346,-1.297574,-5.530396,6.002528,2.214936,9.643271,9.790854,-1.411294,2.175936,-3.528337,6.561614,8.460337,0.765026,4.746841,6.044255,7.178403,8.504861,-9.328071,3.393625,9.123866,-8.195245,1.726446,-9.226124,-8.114607,4.118311,7.057052,-2.870563,3.133108,7.263049], dtype = "float64")#candidate|5521|(768,)|const|float64
call_5520 = relay.TupleGetItem(func_5056_call(relay.reshape(const_5521.astype('float64'), [16, 6, 8])), 0)
call_5522 = relay.TupleGetItem(func_5059_call(relay.reshape(const_5521.astype('float64'), [16, 6, 8])), 0)
func_1762_call = mod.get_global_var('func_1762')
func_1764_call = mutated_mod.get_global_var('func_1764')
call_5523 = relay.TupleGetItem(func_1762_call(), 0)
call_5524 = relay.TupleGetItem(func_1764_call(), 0)
output = relay.Tuple([bop_5507,call_5520,const_5521,call_5523,])
output2 = relay.Tuple([bop_5507,call_5522,const_5521,call_5524,])
func_5535 = relay.Function([var_5505,var_5506,], output)
mod['func_5535'] = func_5535
mod = relay.transform.InferType()(mod)
var_5536 = relay.var("var_5536", dtype = "float32", shape = ())#candidate|5536|()|var|float32
var_5537 = relay.var("var_5537", dtype = "float32", shape = (12, 14, 7))#candidate|5537|(12, 14, 7)|var|float32
output = func_5535(var_5536,var_5537,)
func_5538 = relay.Function([var_5536,var_5537,], output)
mutated_mod['func_5538'] = func_5538
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5557 = relay.var("var_5557", dtype = "int32", shape = (3, 4, 4))#candidate|5557|(3, 4, 4)|var|int32
const_5558 = relay.const([[[8,-1,-10,10],[8,-5,3,7],[-10,-1,3,-6],[10,8,6,7]],[[-7,-8,-5,2],[2,8,-1,-1],[8,-5,-6,7],[1,-3,5,-1]],[[-10,1,5,3],[-1,5,8,4],[-7,-4,-9,8],[-8,7,3,-10]]], dtype = "int32")#candidate|5558|(3, 4, 4)|const|int32
bop_5559 = relay.left_shift(var_5557.astype('int32'), relay.reshape(const_5558.astype('int32'), relay.shape_of(var_5557))) # shape=(3, 4, 4)
func_3936_call = mod.get_global_var('func_3936')
func_3938_call = mutated_mod.get_global_var('func_3938')
const_5565 = relay.const([[4.345547],[3.236868],[7.931024],[-6.878064],[2.451004],[6.325320],[-2.286332],[1.597015],[1.377349],[-6.221390],[7.950171],[-3.570510],[6.929926],[8.034252],[6.078772],[2.757368],[9.145035],[6.227853],[-4.543320],[6.558258],[-2.187254],[5.188815],[8.095291],[-9.420570],[2.821160],[5.500395],[-1.106642],[7.155503],[4.695014],[-6.502333],[-0.127948],[8.880711],[-1.236089],[1.349270],[4.654358],[-0.703807],[1.000832],[-1.728959],[5.403535],[3.126542],[5.885849],[8.851974],[-9.775736],[8.478221],[2.807251],[-9.070705],[2.552861],[3.278611],[-5.644770],[4.863454],[6.517453],[-5.294234],[9.755428],[0.799427],[3.818339],[-9.037322],[9.864696],[-5.575231],[-3.825938],[-7.270997],[6.045029],[-2.146576],[-8.212325],[-0.291384],[-6.606182],[-6.104356],[-9.432014],[-0.199413],[4.332593],[-4.923676],[-3.352745],[1.880996],[-8.317634],[1.113505],[-8.659694],[2.346859],[-0.716980],[-1.571928],[9.376882],[-6.575102],[-9.727308],[-4.089985],[6.337863],[6.326865],[-0.373442],[3.444152],[-3.387551],[5.700953],[-5.684165],[5.007480],[-2.035603],[0.757035],[-7.733101],[9.024119],[-0.289460],[1.343396],[6.874859],[2.410877],[-1.958318],[5.281813],[-6.501610],[1.617775],[-4.447044],[-1.495236],[2.203902],[5.498429],[-5.711508],[9.935625],[-1.440628],[-3.422179],[-6.688482],[-4.160885],[6.637270],[-3.653517],[-9.952474],[1.232909],[-0.323480],[1.536207],[4.507420],[8.363951],[8.855032],[-4.273110],[5.088639],[8.647894],[-0.936503],[9.041824],[1.055239],[-6.133908],[2.449140],[6.180951],[2.344491],[8.978124],[8.068273],[-5.908341],[-3.619925],[-7.058160],[-3.887439],[0.898265],[-4.751403],[2.670432],[-2.970305],[6.133709],[-7.443415],[1.585885],[-3.571298],[6.306757],[0.043187],[1.977327],[2.417164],[7.633942],[7.516167],[-8.799493],[-6.456497],[-1.350847],[-3.952536],[3.673296],[-0.067267],[-7.322359],[7.549644],[-9.332845],[-1.977399],[6.162956],[-6.665677],[6.819942],[-5.000586],[9.002487],[-9.848296],[2.070575],[5.188990],[5.200054],[9.102581],[8.725734],[9.184069],[0.612677],[3.013477],[-7.259305],[2.196986],[8.048381],[-9.529776],[-2.866158],[1.616703],[-2.623657],[9.383286],[-8.260808],[9.893707],[-7.368683],[-4.778102],[-0.119341],[3.012717],[-4.355238],[-8.058956],[5.011618],[-0.554206],[5.372969],[5.917356],[1.118423],[-3.517496],[-7.044197],[0.204254],[-9.480136],[-7.452079],[-7.603583],[-9.061117],[-7.001952],[-7.452529],[-4.107809],[0.505753],[-5.111045],[-5.922179],[-6.179061],[3.305046],[-7.021474],[0.966835],[7.004133],[7.625906],[-7.593562],[-2.265875],[3.710611],[3.167656],[3.849179],[-6.665674],[-3.136254],[9.987797],[-9.512338],[7.385500],[1.923762],[-6.284952],[-4.129728],[-1.839268],[3.163081],[5.127030],[0.066591],[-8.720262],[0.139526],[-0.258996],[6.399948],[-1.256111],[-1.440144],[-3.939243],[-7.708271],[8.291482],[8.953068],[1.643750],[0.651660],[0.653311],[-7.696414],[-7.781001],[2.722303],[-9.593497],[5.287223],[2.293364],[5.967524],[-3.400130],[2.364008],[-5.771143],[-1.867028],[1.213447],[-3.722990],[0.321156],[-9.392113],[-6.205936],[-2.436196],[-6.333825],[1.184949],[-4.316848],[6.058887],[4.993142],[3.366526],[-5.810452],[-7.732898],[-8.275551],[-0.424041],[-9.977843],[1.632600],[-3.219994],[0.498812],[-5.095500],[-2.199614],[5.871035],[8.651105],[-0.905921],[4.200460],[8.289726],[5.024270],[6.938500],[1.393036],[0.930839],[7.544656],[-0.145125],[2.078213],[-2.935211],[5.230781],[-4.911715],[6.210598],[6.802703],[2.634218],[1.618977],[0.087998],[-8.853300],[-7.399490],[-0.317035],[4.913721],[8.136101],[-1.724874],[0.419103],[-0.168816],[-1.161684],[-5.803939],[4.899510],[-7.280140],[-6.682919],[-6.469066],[-1.584342],[0.931739],[1.476783],[-9.251525],[6.006825],[8.121522],[-3.786576],[-1.406318],[2.199869],[3.479186],[-5.611508],[9.728866],[7.025371],[-9.624260],[7.879605],[0.181548],[-6.025276],[-2.419875],[-0.698007],[7.719027],[0.069091],[-7.453996],[-2.219318],[4.030289],[9.651346],[7.599982],[5.538842],[-8.778766],[-5.747415],[-2.316111],[5.048858],[4.307748],[-2.535210],[0.226364],[-9.918228],[-0.348026],[3.496664],[6.793934],[3.294356],[-3.516912],[2.872071],[-2.673570],[-8.105704],[5.407161],[9.303261],[-1.514376],[8.378192],[-1.489694],[-8.109539],[-8.037978],[5.843692],[-1.773908],[1.581226],[-5.801557],[-1.255766],[-9.093907],[9.409791],[-7.137218],[1.409965],[-5.513947],[-2.103176],[3.577499],[6.299254],[0.999155],[-5.423982],[-8.504927],[9.531196],[-0.536444],[7.388631],[6.274526],[1.517393],[7.425226],[6.904834],[-1.944994],[-3.160955],[8.929836],[-0.571091],[-8.286437],[3.402594],[7.601562],[-0.804606],[8.143821],[-6.511171],[-0.467967],[-8.048377],[7.879941],[0.261384],[-2.023895],[5.624072],[5.581822],[-1.342457],[-3.364828],[-4.871066],[-1.845875],[-5.845315],[7.042669],[0.026366],[-0.102938],[-4.924819],[0.069704],[9.279294],[5.806821],[-3.211375],[4.638876],[-4.369339],[8.027495],[2.862874],[9.638664],[-1.652937],[6.931270],[3.870776],[5.001114],[5.204858],[-6.527406],[5.468474],[8.440984],[6.025246],[3.648559],[-2.014676],[2.255939],[-0.442762],[5.710071],[-3.738924],[1.053235],[-1.599233],[1.606093],[0.498779],[1.157604],[0.643600],[-8.092733],[1.111404],[2.952892],[-8.517271],[-3.297072],[2.243190],[-5.053157]], dtype = "float32")#candidate|5565|(448, 1)|const|float32
call_5564 = relay.TupleGetItem(func_3936_call(relay.reshape(const_5565.astype('float32'), [56, 8])), 0)
call_5566 = relay.TupleGetItem(func_3938_call(relay.reshape(const_5565.astype('float32'), [56, 8])), 0)
func_188_call = mod.get_global_var('func_188')
func_191_call = mutated_mod.get_global_var('func_191')
var_5571 = relay.var("var_5571", dtype = "float32", shape = (840, 2))#candidate|5571|(840, 2)|var|float32
var_5572 = relay.var("var_5572", dtype = "uint16", shape = (28,))#candidate|5572|(28,)|var|uint16
call_5570 = relay.TupleGetItem(func_188_call(relay.reshape(var_5571.astype('float32'), [12, 14, 10]), relay.reshape(var_5572.astype('uint16'), [28,]), ), 1)
call_5573 = relay.TupleGetItem(func_191_call(relay.reshape(var_5571.astype('float32'), [12, 14, 10]), relay.reshape(var_5572.astype('uint16'), [28,]), ), 1)
func_3306_call = mod.get_global_var('func_3306')
func_3307_call = mutated_mod.get_global_var('func_3307')
call_5578 = relay.TupleGetItem(func_3306_call(), 5)
call_5579 = relay.TupleGetItem(func_3307_call(), 5)
uop_5580 = relay.log2(var_5572.astype('float64')) # shape=(28,)
output = relay.Tuple([bop_5559,call_5564,const_5565,call_5570,var_5571,call_5578,uop_5580,])
output2 = relay.Tuple([bop_5559,call_5566,const_5565,call_5573,var_5571,call_5579,uop_5580,])
F = relay.Function([var_5557,var_5571,var_5572,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_5557,var_5571,var_5572,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

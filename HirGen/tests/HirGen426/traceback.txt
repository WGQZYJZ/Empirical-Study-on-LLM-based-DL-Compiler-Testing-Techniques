==========mod==========
#[version = "0.0.5"]
def @func_1888() -> Tensor[(5, 1, 2), float64] {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 1, 2), float64] */, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  sqrt(%0) /* ty=Tensor[(5, 1, 2), float64] */
}

def @func_2028() -> (Tensor[(5, 1, 2), float64],) {
  %1 = @func_1888() /* ty=Tensor[(5, 1, 2), float64] */;
  (%1,)
}

def @func_568(%var_538: uint32, %var_550: Tensor[(792), float32]) -> (Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) {
  %2 = cast(%var_538, dtype="bool") /* ty=bool */;
  %3 = cast(meta[relay.Constant][1] /* ty=Tensor[(12, 2, 4), uint32] */, dtype="bool") /* ty=Tensor[(12, 2, 4), bool] */;
  %4 = cast(%var_550, dtype="float32") /* ty=Tensor[(792), float32] */;
  %5 = reshape(%4, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float32] */;
  %6 = @func_326(%5) /* ty=(Tensor[(11, 9, 8), float32],) */;
  %7 = %6.0;
  %8 = cast(%7, dtype="float32") /* ty=Tensor[(11, 9, 8), float32] */;
  %9 = reshape(%8, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float32] */;
  %10 = @func_326(%9) /* ty=(Tensor[(11, 9, 8), float32],) */;
  %11 = equal(%2, %3) /* ty=Tensor[(12, 2, 4), bool] */;
  %12 = %10.0;
  (%11, %7, %var_550, %12)
}

def @func_3920(%var_3913: uint32) -> (Tensor[(5, 1, 2), float64], uint32, Tensor[(1456), float32], uint32) {
  %13 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %14 = cast(meta[relay.Constant][2] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %15 = cast(meta[relay.Constant][2] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %16 = cast(%var_3913, dtype="uint32") /* ty=uint32 */;
  %17 = reshape(%14, newshape=[16, 7, 13]) /* ty=Tensor[(16, 7, 13), float32] */;
  %18 = reshape(%15, newshape=[16, 7, 13]) /* ty=Tensor[(16, 7, 13), float32] */;
  %19 = reshape(%16, newshape=[]) /* ty=uint32 */;
  %20 = @func_1640(%17, %18, %19) /* ty=(Tensor[(16, 7, 13), bool], Tensor[(792), float32], uint32, Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %21 = %13.0;
  %22 = %20.2;
  (%21, %22, meta[relay.Constant][2] /* ty=Tensor[(1456), float32] */, %var_3913)
}

def @func_7019(%var_7006: Tensor[(5, 3, 2), uint16]) -> (Tensor[(5, 3, 2), bool],) {
  %23 = @func_4535() /* ty=(Tensor[(5, ?, 2), uint16],) */;
  %24 = %23.0;
  %25 = cast(%24, dtype="bool") /* ty=Tensor[(5, ?, 2), bool] */;
  %26 = cast(%var_7006, dtype="bool") /* ty=Tensor[(5, 3, 2), bool] */;
  %27 = logical_or(%25, %26) /* ty=Tensor[(5, 3, 2), bool] */;
  (%27,)
}

def @func_6514(%var_6481: Tensor[(1, 3, 4), int64], %var_6482: Tensor[(16, 3, 4), int64], %var_6488: Tensor[(300), float64]) -> (Tensor[(16, 3, 4), int64], Tensor[(5, 1, 2), float64], Tensor[(300), float64], Tensor[(16, 15, 12), bool], Tensor[(2880), uint32], Tensor[(16, 3, 4), float32]) {
  %28 = cast(%var_6481, dtype="int64") /* ty=Tensor[(1, 3, 4), int64] */;
  %29 = cast(%var_6482, dtype="int64") /* ty=Tensor[(16, 3, 4), int64] */;
  %30 = cast(%var_6488, dtype="float64") /* ty=Tensor[(300), float64] */;
  %31 = reshape(%30, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %32 = @func_4082(%31) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(300), float64]) */;
  %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(2880), uint32] */, dtype="uint32") /* ty=Tensor[(2880), uint32] */;
  %34 = cast(meta[relay.Constant][3] /* ty=Tensor[(2880), uint32] */, dtype="uint32") /* ty=Tensor[(2880), uint32] */;
  %35 = reshape(%33, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), uint32] */;
  %36 = reshape(%34, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), uint32] */;
  %37 = @func_5967(%35, %36) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(792), float32]) */;
  %38 = cast(%var_6482, dtype="float32") /* ty=Tensor[(16, 3, 4), float32] */;
  %39 = minimum(%28, %29) /* ty=Tensor[(16, 3, 4), int64] */;
  %40 = %32.0;
  %41 = %37.0;
  %42 = exp(%38) /* ty=Tensor[(16, 3, 4), float32] */;
  (%39, %40, %var_6488, %41, meta[relay.Constant][3] /* ty=Tensor[(2880), uint32] */, %42)
}

def @func_2665(%var_2631: Tensor[(432), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(90), float32]) {
  %43 = @func_2332() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %44 = cast(%var_2631, dtype="float64") /* ty=Tensor[(432), float64] */;
  %45 = reshape(%44, newshape=[9, 3, 16]) /* ty=Tensor[(9, 3, 16), float64] */;
  %46 = @func_659(%45) /* ty=(Tensor[(9, 3, 16), float32], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %47 = cast(meta[relay.Constant][4] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %48 = reshape(%47, newshape=[10, 3, 3]) /* ty=Tensor[(10, 3, 3), float32] */;
  %49 = @func_826(%48) /* ty=(Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float32], uint32, Tensor[(792), float32]) */;
  %50 = %43.0;
  %51 = %46.2;
  %52 = %49.0;
  (%50, %51, %var_2631, %52, meta[relay.Constant][4] /* ty=Tensor[(90), float32] */)
}

def @func_2432(%var_2428: Tensor[(11, 25), uint8]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(11, 25), uint8]) {
  %53 = cast(%var_2428, dtype="uint8") /* ty=Tensor[(11, 25), uint8] */;
  %54 = cast(%var_2428, dtype="uint8") /* ty=Tensor[(11, 25), uint8] */;
  %55 = reshape(%53, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
  %56 = reshape(%54, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
  %57 = @func_2222() /* ty=Tensor[(5, 1, 2), float64] */;
  %58 = @func_1686(%55, %56) /* ty=Tensor[(5, 5, 11), bool] */;
  (%57, %58, %var_2428)
}

def @func_7984(%var_7976: Tensor[(12), float64], %var_7979: uint32) -> (Tensor[(5, 1, 2), float64], Tensor[(275), uint8], Tensor[(12), float64], Tensor[(11, 9, 8), float32], uint32, Tensor[(396, 2), float32]) {
  %59 = @func_7108() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %60 = cast(%var_7976, dtype="float64") /* ty=Tensor[(12), float64] */;
  %61 = reshape(%60, newshape=[12, 1]) /* ty=Tensor[(12, 1), float64] */;
  %62 = @func_5634(%61) /* ty=(Tensor[(275), uint8], Tensor[(6, 1, 2), float64], Tensor[(12, 1), float64]) */;
  %63 = cast(%var_7979, dtype="uint32") /* ty=uint32 */;
  %64 = cast(meta[relay.Constant][5] /* ty=Tensor[(396, 2), float32] */, dtype="float32") /* ty=Tensor[(396, 2), float32] */;
  %65 = reshape(%63, newshape=[]) /* ty=uint32 */;
  %66 = reshape(%64, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %67 = @func_568(%65, %66) /* ty=(Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %68 = %59.0;
  %69 = %62.0;
  %70 = %67.1;
  (%68, %69, %var_7976, %70, %var_7979, meta[relay.Constant][5] /* ty=Tensor[(396, 2), float32] */)
}

def @func_7467(%var_7456: Tensor[(12), float64]) -> (Tensor[(5, 1, 2), float32], Tensor[(5, 1, 2), float64], Tensor[(12, 1), float64], Tensor[(12), float64], Tensor[(12, 5, 5), float32]) {
  %71 = @func_6809() /* ty=(Tensor[(5, 1, 2), float32],) */;
  %72 = @func_3125() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %73 = cast(%var_7456, dtype="float64") /* ty=Tensor[(12), float64] */;
  %74 = reshape(%73, newshape=[12, 1]) /* ty=Tensor[(12, 1), float64] */;
  %75 = @func_5634(%74) /* ty=(Tensor[(275), uint8], Tensor[(6, 1, 2), float64], Tensor[(12, 1), float64]) */;
  %76 = @func_3485() /* ty=(Tensor[(12, 5, 5), float32],) */;
  %77 = %71.0;
  %78 = %72.0;
  %79 = %75.2;
  %80 = %76.0;
  (%77, %78, %79, %var_7456, %80)
}

def @func_3943(%var_3927: Tensor[(9, 5, 12), float64], %var_3940: Tensor[(90), float32]) -> (Tensor[(9, 5, 12), float64], Tensor[(5, ?, 2), float64], Tensor[(10), float64], Tensor[(90), float32]) {
  %81 = cast(%var_3927, dtype="float64") /* ty=Tensor[(9, 5, 12), float64] */;
  %82 = cast(meta[relay.Constant][6] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
  %83 = cast(%var_3940, dtype="float32") /* ty=Tensor[(90), float32] */;
  %84 = reshape(%82, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
  %85 = reshape(%83, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %86 = @func_2483(%84, %85) /* ty=(Tensor[(5, ?, 2), float64], Tensor[(792), float32], Tensor[(90), float32], uint32) */;
  %87 = sinh(%81) /* ty=Tensor[(9, 5, 12), float64] */;
  %88 = %86.0;
  (%87, %88, meta[relay.Constant][6] /* ty=Tensor[(10), float64] */, %var_3940)
}

def @func_2853(%var_2792: Tensor[(432), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float64], Tensor[(792), float32]) {
  %89 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %90 = cast(%var_2792, dtype="float64") /* ty=Tensor[(432), float64] */;
  %91 = reshape(%90, newshape=[432]) /* ty=Tensor[(432), float64] */;
  %92 = @func_2665(%91) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(90), float32]) */;
  %93 = cast(%var_2792, dtype="float64") /* ty=Tensor[(432), float64] */;
  %94 = reshape(%93, newshape=[9, 3, 16]) /* ty=Tensor[(9, 3, 16), float64] */;
  %95 = @func_659(%94) /* ty=(Tensor[(9, 3, 16), float32], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %96 = %95.1;
  %97 = cast(%96, dtype="float64") /* ty=Tensor[(11, 9, 8), float64] */;
  %98 = cast(%var_2792, dtype="float64") /* ty=Tensor[(432), float64] */;
  %99 = reshape(%98, newshape=[9, 3, 16]) /* ty=Tensor[(9, 3, 16), float64] */;
  %100 = @func_659(%99) /* ty=(Tensor[(9, 3, 16), float32], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %101 = %89.0;
  %102 = @func_1888() /* ty=Tensor[(5, 1, 2), float64] */;
  %103 = %92.3;
  %104 = sin(%97) /* ty=Tensor[(11, 9, 8), float64] */;
  %105 = %100.2;
  (%101, %102, %var_2792, %103, %104, %105)
}

def @func_2222() -> Tensor[(5, 1, 2), float64] {
  @func_1888() /* ty=Tensor[(5, 1, 2), float64] */
}

def @func_3275(%var_3253: Tensor[(140), float64], %var_3257: Tensor[(286, 6), float64], %var_3266: Tensor[(300), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 14, 2), bool], Tensor[(140), float64], Tensor[(5, 1, 2), float64], Tensor[(286, 6), float64], uint32, Tensor[(90), float32], Tensor[(5, 5, 11), bool], Tensor[(300), float64], Tensor[(5, 1, 2), float64]) {
  %106 = cast(%var_3253, dtype="float64") /* ty=Tensor[(140), float64] */;
  %107 = reshape(%106, newshape=[5, 14, 2]) /* ty=Tensor[(5, 14, 2), float64] */;
  %108 = cast(%var_3257, dtype="float64") /* ty=Tensor[(286, 6), float64] */;
  %109 = reshape(%108, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %110 = @func_2206(%109) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */;
  %111 = cast(meta[relay.Constant][7] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %112 = reshape(%111, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %113 = @func_3195(%112) /* ty=(Tensor[(5, 1, 2), float32], uint32, Tensor[(90), float32]) */;
  %114 = cast(%var_3266, dtype="float64") /* ty=Tensor[(300), float64] */;
  %115 = reshape(%114, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), float64] */;
  %116 = @func_2001(%115) /* ty=(Tensor[(6, 10, 5), bool], Tensor[(5, 5, 11), bool], Tensor[(55, 5), uint8]) */;
  %117 = @func_2332() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %118 = @func_2356() /* ty=Tensor[(5, 1, 2), float64] */;
  %119 = @func_3229(%107) /* ty=Tensor[(5, 14, 2), bool] */;
  %120 = %110.0;
  %121 = %113.1;
  %122 = %116.1;
  %123 = %117.0;
  (%118, %119, %var_3253, %120, %var_3257, %121, meta[relay.Constant][7] /* ty=Tensor[(90), float32] */, %122, %var_3266, %123)
}

def @func_2483(%var_2452: Tensor[(5, 1, 2), float64], %var_2460: Tensor[(90), float32]) -> (Tensor[(5, ?, 2), float64], Tensor[(792), float32], Tensor[(90), float32], uint32) {
  %124 = @func_1888() /* ty=Tensor[(5, 1, 2), float64] */;
  %125 = cast(%var_2452, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %126 = shape_of(%124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%124, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %129 = cast(%var_2460, dtype="float32") /* ty=Tensor[(90), float32] */;
  %130 = reshape(%129, newshape=[10, 3, 3]) /* ty=Tensor[(10, 3, 3), float32] */;
  %131 = @func_826(%130) /* ty=(Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float32], uint32, Tensor[(792), float32]) */;
  %132 = cast(%var_2460, dtype="float32") /* ty=Tensor[(90), float32] */;
  %133 = reshape(%132, newshape=[10, 3, 3]) /* ty=Tensor[(10, 3, 3), float32] */;
  %134 = @func_826(%133) /* ty=(Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float32], uint32, Tensor[(792), float32]) */;
  %135 = maximum(%127, %128) /* ty=Tensor[(5, ?, 2), float64] */;
  %136 = %131.3;
  %137 = %134.2;
  (%135, %136, %var_2460, %137)
}

def @func_6567(%var_6549: Tensor[(9, 10, 15), int32]) -> Tensor[(9, 10, 15), bool] {
  %138 = cast(meta[relay.Constant][8] /* ty=Tensor[(9, 10, 15), int32] */, dtype="bool") /* ty=Tensor[(9, 10, 15), bool] */;
  %139 = shape_of(%var_6549, dtype="int32") /* ty=Tensor[(3), int32] */;
  %140 = cast(%var_6549, dtype="bool") /* ty=Tensor[(9, 10, 15), bool] */;
  %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%140, %141) /* ty=Tensor[(9, 10, 15), bool] */
}

def @func_4711(%var_4627: Tensor[(2, 396), float32], %var_4676: Tensor[(1716), float64]) -> (uint32, Tensor[(5, 1, 2), float64], Tensor[(11, 9, 8), float32], Tensor[(2, 396), float64], Tensor[(2, 396), bool], Tensor[(5, 1, 2), float64], Tensor[(1716), float64], Tensor[(5, 1, 2), float64], Tensor[(2, 396), float64], Tensor[(2, 396), float32], Tensor[(12, 11, 13), float32], Tensor[(20), float64], Tensor[(792), float32], Tensor[(90), float32]) {
  %142 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %143 = %142.0;
  %144 = cast(%143, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %145 = cast(%var_4627, dtype="float32") /* ty=Tensor[(2, 396), float32] */;
  %146 = reshape(%145, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float32] */;
  %147 = @func_326(%146) /* ty=(Tensor[(11, 9, 8), float32],) */;
  %148 = cast(%var_4627, dtype="float32") /* ty=Tensor[(2, 396), float32] */;
  %149 = log(%148) /* ty=Tensor[(2, 396), float32] */;
  %150 = cast(meta[relay.Constant][9] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %151 = cast(%var_4627, dtype="float32") /* ty=Tensor[(2, 396), float32] */;
  %152 = reshape(%150, newshape=[]) /* ty=uint32 */;
  %153 = reshape(%151, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %154 = @func_568(%152, %153) /* ty=(Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %155 = %154.1;
  %156 = cast(%155, dtype="int8") /* ty=Tensor[(11, 9, 8), int8] */;
  %157 = shape_of(%149, dtype="int32") /* ty=Tensor[(2), int32] */;
  %158 = cast(%149, dtype="int8") /* ty=Tensor[(2, 396), int8] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %160 = logical_xor(%158, %159) /* ty=Tensor[(2, 396), int8] */;
  %161 = cast(%160, dtype="float64") /* ty=Tensor[(2, 396), float64] */;
  %162 = cast(%var_4627, dtype="bool") /* ty=Tensor[(2, 396), bool] */;
  %163 = shape_of(%160, dtype="int32") /* ty=Tensor[(2), int32] */;
  %164 = cast(%160, dtype="bool") /* ty=Tensor[(2, 396), bool] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %166 = cast(%var_4676, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %167 = reshape(%166, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %168 = @func_1978(%167) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */;
  %169 = cast(%149, dtype="float64") /* ty=Tensor[(2, 396), float64] */;
  %170 = cast(%149, dtype="float64") /* ty=Tensor[(2, 396), float64] */;
  %171 = log2(%170) /* ty=Tensor[(2, 396), float64] */;
  %172 = cast(%171, dtype="float32") /* ty=Tensor[(2, 396), float32] */;
  %173 = %168.0;
  %174 = cast(%173, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %175 = cast(meta[relay.Constant][10] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %176 = reshape(%174, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
  %177 = reshape(%175, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float64] */;
  %178 = @func_2306(%176, %177) /* ty=(Tensor[(1716), float64], Tensor[(5, 2, 2), uint16], Tensor[(12, 11, 13), float32]) */;
  %179 = cast(meta[relay.Constant][11] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %180 = reshape(%179, newshape=[10, 3, 3]) /* ty=Tensor[(10, 3, 3), float32] */;
  %181 = @func_826(%180) /* ty=(Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float32], uint32, Tensor[(792), float32]) */;
  %182 = log10(%144) /* ty=Tensor[(5, 1, 2), float64] */;
  %183 = %147.0;
  %184 = sqrt(%161) /* ty=Tensor[(2, 396), float64] */;
  %185 = equal(%164, %165) /* ty=Tensor[(2, 396), bool] */;
  %186 = @func_1888() /* ty=Tensor[(5, 1, 2), float64] */;
  %187 = sigmoid(%169) /* ty=Tensor[(2, 396), float64] */;
  %188 = tan(%172) /* ty=Tensor[(2, 396), float32] */;
  %189 = %178.2;
  %190 = %181.3;
  (meta[relay.Constant][9] /* ty=uint32 */, %182, %183, %184, %185, %173, %var_4676, %186, %187, %188, %189, meta[relay.Constant][10] /* ty=Tensor[(20), float64] */, %190, meta[relay.Constant][11] /* ty=Tensor[(90), float32] */)
}

def @func_5634(%var_5630: Tensor[(12, 1), float64]) -> (Tensor[(275), uint8], Tensor[(6, 1, 2), float64], Tensor[(12, 1), float64]) {
  %191 = @func_2570() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */;
  %192 = cast(%var_5630, dtype="float64") /* ty=Tensor[(12, 1), float64] */;
  %193 = reshape(%192, newshape=[6, 1, 2]) /* ty=Tensor[(6, 1, 2), float64] */;
  %194 = %191.2;
  %195 = @func_1797(%193) /* ty=Tensor[(6, 1, 2), float64] */;
  (%194, %195, %var_5630)
}

def @func_3372(%var_3365: Tensor[(1, 1716), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(?, 1716), bool]) {
  %196 = cast(%var_3365, dtype="float64") /* ty=Tensor[(1, 1716), float64] */;
  %197 = reshape(%196, newshape=[12, 11, 13]) /* ty=Tensor[(12, 11, 13), float64] */;
  %198 = @func_1437(%197) /* ty=Tensor[(12, 11, 13), float64] */;
  %199 = cast(%198, dtype="bool") /* ty=Tensor[(12, 11, 13), bool] */;
  %200 = shape_of(%var_3365, dtype="int32") /* ty=Tensor[(2), int32] */;
  %201 = cast(%var_3365, dtype="bool") /* ty=Tensor[(1, 1716), bool] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %203 = @func_2356() /* ty=Tensor[(5, 1, 2), float64] */;
  %204 = greater(%201, %202) /* ty=Tensor[(?, 1716), bool] */;
  (%203, %204)
}

def @func_6075() -> (Tensor[(90), float32],) {
  %205 = @func_4789() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(792), float32], Tensor[(1716), float64], Tensor[(90), float32], Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(12, 11, 13), float64]) */;
  %206 = %205.5;
  (%206,)
}

def @func_1686(%var_1678: Tensor[(5, 5, 11), uint8], %var_1679: Tensor[(5, 5, 11), uint8]) -> Tensor[(5, 5, 11), bool] {
  %207 = cast(%var_1679, dtype="bool") /* ty=Tensor[(5, 5, 11), bool] */;
  %208 = shape_of(%var_1678, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%var_1678, dtype="bool") /* ty=Tensor[(5, 5, 11), bool] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%209, %210) /* ty=Tensor[(5, 5, 11), bool] */
}

def @func_6637() -> (Tensor[(5, 1, 2), float64],) {
  %211 = @func_3695() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %212 = %211.0;
  (%212,)
}

def @func_5967(%var_5950: Tensor[(16, 15, 12), uint32], %var_5951: Tensor[(16, 15, 12), uint32]) -> (Tensor[(16, 15, 12), bool], Tensor[(792), float32]) {
  %213 = cast(%var_5951, dtype="bool") /* ty=Tensor[(16, 15, 12), bool] */;
  %214 = shape_of(%var_5950, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(%var_5950, dtype="bool") /* ty=Tensor[(16, 15, 12), bool] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %217 = @func_3006() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(90), float32]) */;
  %218 = greater(%215, %216) /* ty=Tensor[(16, 15, 12), bool] */;
  %219 = %217.1;
  (%218, %219)
}

def @func_8081(%var_8067: Tensor[(5, 9, 2), float64]) -> (Tensor[(5, 9, 2), int64], Tensor[(11, 9, 8), float32], Tensor[(432), float64]) {
  %220 = @func_2570() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */;
  %221 = %220.0;
  %222 = cast(%221, dtype="int64") /* ty=Tensor[(5, 1, 2), int64] */;
  %223 = cast(%var_8067, dtype="int64") /* ty=Tensor[(5, 9, 2), int64] */;
  %224 = cast(meta[relay.Constant][12] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %225 = reshape(%224, newshape=[216, 2]) /* ty=Tensor[(216, 2), float64] */;
  %226 = @func_2760(%225) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(90), float32], Tensor[(10, 3, 3), float32], Tensor[(216, 2), float64], Tensor[(1716), float64], Tensor[(20), float64], Tensor[(5, ?, 2), float64], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(792), float32], Tensor[(5, 1, 2), float64]) */;
  %227 = left_shift(%222, %223) /* ty=Tensor[(5, 9, 2), int64] */;
  %228 = %226.7;
  (%227, %228, meta[relay.Constant][12] /* ty=Tensor[(432), float64] */)
}

def @main(%var_8392: Tensor[(90), float32]) -> (Tensor[(90), bool],) {
  %229 = @func_6052() /* ty=Tensor[(90), float32] */;
  %230 = cast(%var_8392, dtype="bool") /* ty=Tensor[(90), bool] */;
  %231 = shape_of(%229, dtype="int32") /* ty=Tensor[(1), int32] */;
  %232 = cast(%229, dtype="bool") /* ty=Tensor[(90), bool] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?), bool] */;
  %234 = less(%232, %233) /* ty=Tensor[(90), bool] */;
  (%234,)
}

def @func_7968() -> (Tensor[(5, 1, 2), float32],) {
  %235 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %236 = %235.0;
  %237 = cast(%236, dtype="float32") /* ty=Tensor[(5, 1, 2), float32] */;
  %238 = cosh(%237) /* ty=Tensor[(5, 1, 2), float32] */;
  (%238,)
}

def @func_7348() -> (Tensor[(5, 1, 2), float64],) {
  %239 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %240 = %239.0;
  (%240,)
}

def @func_8130() -> Tensor[(792), float32] {
  %241 = @func_4789() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(792), float32], Tensor[(1716), float64], Tensor[(90), float32], Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(12, 11, 13), float64]) */;
  %241.6
}

def @func_1640(%var_1569: Tensor[(16, 7, 13), float32], %var_1584: Tensor[(16, 7, 13), float32], %var_1632: uint32) -> (Tensor[(16, 7, 13), bool], Tensor[(792), float32], uint32, Tensor[(792), float32], Tensor[(11, 9, 8), float32]) {
  %242 = cast(%var_1569, dtype="float32") /* ty=Tensor[(16, 7, 13), float32] */;
  %243 = cos(%242) /* ty=Tensor[(16, 7, 13), float32] */;
  %244 = cast(%var_1584, dtype="bool") /* ty=Tensor[(16, 7, 13), bool] */;
  %245 = shape_of(%243, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%243, dtype="bool") /* ty=Tensor[(16, 7, 13), bool] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %248 = cast(%var_1632, dtype="uint32") /* ty=uint32 */;
  %249 = cast(meta[relay.Constant][13] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %250 = reshape(%248, newshape=[]) /* ty=uint32 */;
  %251 = reshape(%249, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %252 = @func_568(%250, %251) /* ty=(Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %253 = %252.2;
  %254 = cast(%253, dtype="float32") /* ty=Tensor[(792), float32] */;
  %255 = reshape(%254, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float32] */;
  %256 = @func_326(%255) /* ty=(Tensor[(11, 9, 8), float32],) */;
  %257 = greater_equal(%246, %247) /* ty=Tensor[(16, 7, 13), bool] */;
  %258 = %256.0;
  (%257, %253, %var_1632, meta[relay.Constant][13] /* ty=Tensor[(792), float32] */, %258)
}

def @func_4890(%var_4880: Tensor[(9, 3, 4), int8], %var_4881: Tensor[(9, 3, 4), int8]) -> (Tensor[(9, 3, 4), bool],) {
  %259 = cast(%var_4881, dtype="bool") /* ty=Tensor[(9, 3, 4), bool] */;
  %260 = shape_of(%var_4880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %261 = cast(%var_4880, dtype="bool") /* ty=Tensor[(9, 3, 4), bool] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %263 = not_equal(%261, %262) /* ty=Tensor[(9, 3, 4), bool] */;
  (%263,)
}

def @func_2001(%var_1982: Tensor[(6, 10, 5), float64]) -> (Tensor[(6, 10, 5), bool], Tensor[(5, 5, 11), bool], Tensor[(55, 5), uint8]) {
  %264 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 10, 5), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 5), float64] */;
  %265 = log10(%264) /* ty=Tensor[(6, 10, 5), float64] */;
  %266 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 10, 5), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 5), float64] */;
  %267 = shape_of(%var_1982, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(%var_1982, dtype="float64") /* ty=Tensor[(6, 10, 5), float64] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %270 = mod(%268, %269) /* ty=Tensor[(6, 10, 5), float64] */;
  %271 = cast(%270, dtype="bool") /* ty=Tensor[(6, 10, 5), bool] */;
  %272 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(%265, dtype="bool") /* ty=Tensor[(6, 10, 5), bool] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %275 = cast(meta[relay.Constant][15] /* ty=Tensor[(55, 5), uint8] */, dtype="uint8") /* ty=Tensor[(55, 5), uint8] */;
  %276 = cast(meta[relay.Constant][15] /* ty=Tensor[(55, 5), uint8] */, dtype="uint8") /* ty=Tensor[(55, 5), uint8] */;
  %277 = reshape(%275, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
  %278 = reshape(%276, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
  %279 = greater_equal(%273, %274) /* ty=Tensor[(6, 10, 5), bool] */;
  %280 = @func_1686(%277, %278) /* ty=Tensor[(5, 5, 11), bool] */;
  (%279, %280, meta[relay.Constant][15] /* ty=Tensor[(55, 5), uint8] */)
}

def @func_6351() -> Tensor[(5, 1, 2), float32] {
  %281 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %282 = %281.0;
  %283 = cast(%282, dtype="float32") /* ty=Tensor[(5, 1, 2), float32] */;
  atan(%283) /* ty=Tensor[(5, 1, 2), float32] */
}

def @func_8224() -> (Tensor[(792), float32], Tensor[(5, 2, 2), uint16]) {
  %284 = @func_7401() /* ty=(Tensor[(5, 5, 11), bool], Tensor[(5, 2, 2), uint16]) */;
  %285 = @func_3080() /* ty=Tensor[(792), float32] */;
  %286 = %284.1;
  (%285, %286)
}

def @func_2966(%var_2932: Tensor[(12), float64], %var_2959: Tensor[(432), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(6, 1, 2), float64], Tensor[(12), float64], Tensor[(792), float32], Tensor[(1456), float32], uint32, Tensor[(5, 1, 2), float64], Tensor[(432), float64], Tensor[(10, 3, 3), float32]) {
  %287 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %288 = cast(%var_2932, dtype="float64") /* ty=Tensor[(12), float64] */;
  %289 = reshape(%288, newshape=[6, 1, 2]) /* ty=Tensor[(6, 1, 2), float64] */;
  %290 = cast(meta[relay.Constant][16] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %291 = cast(meta[relay.Constant][16] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %292 = cast(meta[relay.Constant][17] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %293 = reshape(%290, newshape=[16, 7, 13]) /* ty=Tensor[(16, 7, 13), float32] */;
  %294 = reshape(%291, newshape=[16, 7, 13]) /* ty=Tensor[(16, 7, 13), float32] */;
  %295 = reshape(%292, newshape=[]) /* ty=uint32 */;
  %296 = @func_1640(%293, %294, %295) /* ty=(Tensor[(16, 7, 13), bool], Tensor[(792), float32], uint32, Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %297 = cast(%var_2959, dtype="float64") /* ty=Tensor[(432), float64] */;
  %298 = reshape(%297, newshape=[432]) /* ty=Tensor[(432), float64] */;
  %299 = @func_2853(%298) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float64], Tensor[(792), float32]) */;
  %300 = cast(%var_2959, dtype="float64") /* ty=Tensor[(432), float64] */;
  %301 = reshape(%300, newshape=[432]) /* ty=Tensor[(432), float64] */;
  %302 = @func_2665(%301) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(90), float32]) */;
  %303 = %287.0;
  %304 = @func_1797(%289) /* ty=Tensor[(6, 1, 2), float64] */;
  %305 = %296.1;
  %306 = %299.0;
  %307 = %302.3;
  (%303, %304, %var_2932, %305, meta[relay.Constant][16] /* ty=Tensor[(1456), float32] */, meta[relay.Constant][17] /* ty=uint32 */, %306, %var_2959, %307)
}

def @func_8011(%var_8004: Tensor[(5, 8, 2), float64]) -> Tensor[(5, 8, 2), int16] {
  %308 = @func_6637() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %309 = %308.0;
  %310 = cast(%309, dtype="int16") /* ty=Tensor[(5, 1, 2), int16] */;
  %311 = cast(%var_8004, dtype="int16") /* ty=Tensor[(5, 8, 2), int16] */;
  maximum(%310, %311) /* ty=Tensor[(5, 8, 2), int16] */
}

def @func_8266() -> (Tensor[(5, ?, 2), bool], Tensor[(12, 1), float64], Tensor[(12), float64]) {
  %312 = @func_4365() /* ty=Tensor[(5, 1, 2), float64] */;
  %313 = @func_7273() /* ty=Tensor[(5, 1, 2), float32] */;
  %314 = cast(%313, dtype="bool") /* ty=Tensor[(5, 1, 2), bool] */;
  %315 = shape_of(%312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(%312, dtype="bool") /* ty=Tensor[(5, 1, 2), bool] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %318 = cast(meta[relay.Constant][18] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %319 = reshape(%318, newshape=[12, 1]) /* ty=Tensor[(12, 1), float64] */;
  %320 = @func_5634(%319) /* ty=(Tensor[(275), uint8], Tensor[(6, 1, 2), float64], Tensor[(12, 1), float64]) */;
  %321 = less(%316, %317) /* ty=Tensor[(5, ?, 2), bool] */;
  %322 = %320.2;
  (%321, %322, meta[relay.Constant][18] /* ty=Tensor[(12), float64] */)
}

def @func_4927(%var_4919: Tensor[(2, 13, 9), float64]) -> Tensor[(2, 13, 9), float64] {
  %323 = cast(%var_4919, dtype="float64") /* ty=Tensor[(2, 13, 9), float64] */;
  exp(%323) /* ty=Tensor[(2, 13, 9), float64] */
}

def @func_6971(%var_6964: Tensor[(7, 11, 3), float32]) -> Tensor[(7, 11, 3), float32] {
  %324 = cast(%var_6964, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  asin(%324) /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_3394() -> (Tensor[(5, 1, 2), float64],) {
  %325 = @func_2356() /* ty=Tensor[(5, 1, 2), float64] */;
  (%325,)
}

def @func_7330() -> (Tensor[(10, 2), float64],) {
  %326 = @func_4588() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(275), uint8], Tensor[(5, 1, 2), float64], Tensor[(5, 2, 2), uint16], Tensor[(10, 2), float64]) */;
  %327 = %326.4;
  (%327,)
}

def @func_4323(%var_4164: Tensor[(15, 10, 16), float32], %var_4205: Tensor[(1716), float64], %var_4273: uint32) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(1716), float64], Tensor[(15, 10, 16), float32], Tensor[(15, 10, 16), float32], uint32, Tensor[(12, 5, 5), float32], Tensor[(6, 10, 5), bool], Tensor[(15, 10, 16), uint64]) {
  %328 = @func_3394() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %329 = cast(%var_4205, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %330 = reshape(%329, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %331 = @func_1978(%330) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */;
  %332 = cast(%var_4164, dtype="float32") /* ty=Tensor[(15, 10, 16), float32] */;
  %333 = tan(%332) /* ty=Tensor[(15, 10, 16), float32] */;
  %334 = cast(%var_4164, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
  %335 = shape_of(%333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %336 = cast(%333, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
  %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %338 = mod(%336, %337) /* ty=Tensor[(15, 10, 16), float64] */;
  %339 = cast(%var_4164, dtype="float32") /* ty=Tensor[(15, 10, 16), float32] */;
  %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%338, dtype="float32") /* ty=Tensor[(15, 10, 16), float32] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %343 = cast(%338, dtype="float32") /* ty=Tensor[(15, 10, 16), float32] */;
  %344 = log10(%343) /* ty=Tensor[(15, 10, 16), float32] */;
  %345 = cast(%344, dtype="float32") /* ty=Tensor[(15, 10, 16), float32] */;
  %346 = cast(%var_4273, dtype="uint32") /* ty=uint32 */;
  %347 = reshape(%346, newshape=[]) /* ty=uint32 */;
  %348 = @func_3920(%347) /* ty=(Tensor[(5, 1, 2), float64], uint32, Tensor[(1456), float32], uint32) */;
  %349 = @func_3485() /* ty=(Tensor[(12, 5, 5), float32],) */;
  %350 = %349.0;
  %351 = cast(%350, dtype="float64") /* ty=Tensor[(12, 5, 5), float64] */;
  %352 = reshape(%351, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), float64] */;
  %353 = @func_2001(%352) /* ty=(Tensor[(6, 10, 5), bool], Tensor[(5, 5, 11), bool], Tensor[(55, 5), uint8]) */;
  %354 = cast(%344, dtype="uint64") /* ty=Tensor[(15, 10, 16), uint64] */;
  %355 = cast(%var_4273, dtype="uint64") /* ty=uint64 */;
  %356 = @func_2356() /* ty=Tensor[(5, 1, 2), float64] */;
  %357 = %328.0;
  %358 = %331.0;
  %359 = minimum(%341, %342) /* ty=Tensor[(15, 10, 16), float32] */;
  %360 = sinh(%345) /* ty=Tensor[(15, 10, 16), float32] */;
  %361 = %348.1;
  %362 = %353.0;
  %363 = logical_xor(%354, %355) /* ty=Tensor[(15, 10, 16), uint64] */;
  (%356, %357, %358, %var_4205, %359, %360, %361, %350, %362, %363)
}

def @func_6809() -> (Tensor[(5, 1, 2), float32],) {
  %364 = @func_2356() /* ty=Tensor[(5, 1, 2), float64] */;
  %365 = cast(%364, dtype="float32") /* ty=Tensor[(5, 1, 2), float32] */;
  %366 = sin(%365) /* ty=Tensor[(5, 1, 2), float32] */;
  (%366,)
}

def @func_3195(%var_3179: Tensor[(90), float32]) -> (Tensor[(5, 1, 2), float32], uint32, Tensor[(90), float32]) {
  %367 = @func_2332() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %368 = %367.0;
  %369 = cast(%368, dtype="float32") /* ty=Tensor[(5, 1, 2), float32] */;
  %370 = cast(%368, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %371 = cast(%var_3179, dtype="float32") /* ty=Tensor[(90), float32] */;
  %372 = reshape(%370, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
  %373 = reshape(%371, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %374 = @func_2483(%372, %373) /* ty=(Tensor[(5, ?, 2), float64], Tensor[(792), float32], Tensor[(90), float32], uint32) */;
  %375 = exp(%369) /* ty=Tensor[(5, 1, 2), float32] */;
  %376 = %374.3;
  (%375, %376, %var_3179)
}

def @func_7071(%var_7069: Tensor[(286, 6), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(286, 6), float64]) {
  %377 = @func_3394() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %378 = cast(%var_7069, dtype="float64") /* ty=Tensor[(286, 6), float64] */;
  %379 = reshape(%378, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %380 = @func_1978(%379) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */;
  %381 = %377.0;
  %382 = %380.3;
  (%381, %382, %var_7069)
}

def @func_6870() -> (Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(90), float32], Tensor[(12, 2, 4), bool]) {
  %383 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %384 = reshape(%383, newshape=[]) /* ty=int64 */;
  %385 = @func_4610(%384) /* ty=(Tensor[(6, 2, 12), int64], Tensor[(792), float32]) */;
  %386 = @func_6075() /* ty=(Tensor[(90), float32],) */;
  %387 = cast(8 /* ty=int64 */, dtype="uint32") /* ty=uint32 */;
  %388 = %385.1;
  %389 = cast(%388, dtype="float32") /* ty=Tensor[(792), float32] */;
  %390 = reshape(%387, newshape=[]) /* ty=uint32 */;
  %391 = reshape(%389, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %392 = @func_568(%390, %391) /* ty=(Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %393 = @func_6202() /* ty=Tensor[(90), float32] */;
  %394 = %386.0;
  %395 = %392.0;
  (%393, %388, 8 /* ty=int64 */, %394, %395)
}

def @func_7714(%var_7605: int64, %var_7612: Tensor[(1, 160), float64]) -> (Tensor[(5, 16, 2), int32], Tensor[(1, 160), float64], Tensor[(792), bool], Tensor[(792), float32], Tensor[(2880), uint32], Tensor[(12, 5, 5), bool], Tensor[(12, 1, 16), float64], Tensor[(192), float32]) {
  %396 = cast(%var_7612, dtype="float64") /* ty=Tensor[(1, 160), float64] */;
  %397 = reshape(%396, newshape=[5, 16, 2]) /* ty=Tensor[(5, 16, 2), float64] */;
  %398 = @func_5588(%397) /* ty=(Tensor[(5, 16, 2), int32],) */;
  %399 = cast(%var_7605, dtype="int64") /* ty=int64 */;
  %400 = @func_3485() /* ty=(Tensor[(12, 5, 5), float32],) */;
  %401 = %400.0;
  %402 = cast(%401, dtype="float64") /* ty=Tensor[(12, 5, 5), float64] */;
  %403 = reshape(%399, newshape=[]) /* ty=int64 */;
  %404 = reshape(%402, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %405 = @func_5445(%403, %404) /* ty=(Tensor[(792), float32], Tensor[(792), float32], Tensor[(6, 2, 10), float64], Tensor[(120), float64], Tensor[(5, 14, 2), float32], Tensor[(300), float64], Tensor[(5, 1, 2), float64], Tensor[(6, 10, 5), bool], Tensor[(792), float32]) */;
  %406 = %405.0;
  %407 = cast(%406, dtype="bool") /* ty=Tensor[(792), bool] */;
  %408 = cast(%var_7605, dtype="bool") /* ty=bool */;
  %409 = less(%407, %408) /* ty=Tensor[(792), bool] */;
  %410 = cast(%409, dtype="bool") /* ty=Tensor[(792), bool] */;
  %411 = shape_of(%406, dtype="int32") /* ty=Tensor[(1), int32] */;
  %412 = cast(%406, dtype="bool") /* ty=Tensor[(792), bool] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?), bool] */;
  %414 = cast(meta[relay.Constant][19] /* ty=Tensor[(2880), uint32] */, dtype="uint32") /* ty=Tensor[(2880), uint32] */;
  %415 = cast(meta[relay.Constant][19] /* ty=Tensor[(2880), uint32] */, dtype="uint32") /* ty=Tensor[(2880), uint32] */;
  %416 = reshape(%414, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), uint32] */;
  %417 = reshape(%415, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), uint32] */;
  %418 = @func_5967(%416, %417) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(792), float32]) */;
  %419 = cast(%401, dtype="bool") /* ty=Tensor[(12, 5, 5), bool] */;
  %420 = cast(%var_7605, dtype="bool") /* ty=bool */;
  %421 = cast(meta[relay.Constant][20] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %422 = reshape(%421, newshape=[12, 1, 16]) /* ty=Tensor[(12, 1, 16), float32] */;
  %423 = @func_2127(%422) /* ty=(Tensor[(11, 9, 8), float32], Tensor[(90), float32], Tensor[(12, 1, 16), float64]) */;
  %424 = %398.0;
  %425 = logical_or(%412, %413) /* ty=Tensor[(792), bool] */;
  %426 = %418.1;
  %427 = greater_equal(%419, %420) /* ty=Tensor[(12, 5, 5), bool] */;
  %428 = %423.2;
  (%424, %var_7612, %425, %426, meta[relay.Constant][19] /* ty=Tensor[(2880), uint32] */, %427, %428, meta[relay.Constant][20] /* ty=Tensor[(192), float32] */)
}

def @func_7790(%var_7769: Tensor[(13, 11, 7), int32], %var_7770: Tensor[(13, 11, 7), int32]) -> (Tensor[(13, 11, 7), bool], Tensor[(5, 1, 2), float32]) {
  %429 = cast(%var_7770, dtype="bool") /* ty=Tensor[(13, 11, 7), bool] */;
  %430 = shape_of(%var_7769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%var_7769, dtype="bool") /* ty=Tensor[(13, 11, 7), bool] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %433 = not_equal(%431, %432) /* ty=Tensor[(13, 11, 7), bool] */;
  %434 = @func_7273() /* ty=Tensor[(5, 1, 2), float32] */;
  (%433, %434)
}

def @func_2127(%var_2086: Tensor[(12, 1, 16), float32]) -> (Tensor[(11, 9, 8), float32], Tensor[(90), float32], Tensor[(12, 1, 16), float64]) {
  %435 = cast(meta[relay.Constant][21] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %436 = reshape(%435, newshape=[10, 3, 3]) /* ty=Tensor[(10, 3, 3), float32] */;
  %437 = @func_826(%436) /* ty=(Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float32], uint32, Tensor[(792), float32]) */;
  %438 = cast(%var_2086, dtype="float32") /* ty=Tensor[(12, 1, 16), float32] */;
  %439 = log2(%438) /* ty=Tensor[(12, 1, 16), float32] */;
  %440 = cast(%439, dtype="float32") /* ty=Tensor[(12, 1, 16), float32] */;
  %441 = asinh(%440) /* ty=Tensor[(12, 1, 16), float32] */;
  %442 = cast(%441, dtype="float64") /* ty=Tensor[(12, 1, 16), float64] */;
  %443 = %437.1;
  %444 = exp(%442) /* ty=Tensor[(12, 1, 16), float64] */;
  (%443, meta[relay.Constant][21] /* ty=Tensor[(90), float32] */, %444)
}

def @func_5354(%var_5298: Tensor[(20), float64], %var_5303: Tensor[(54), uint8], %var_5339: uint32, %var_5348: Tensor[(1716), float32]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8], Tensor[(20), float64], Tensor[(3, 3, 6), uint8], Tensor[(54), uint8], Tensor[(90), float32], uint32, uint32, Tensor[(1716), int16]) {
  %445 = @func_3585() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64]) */;
  %446 = cast(meta[relay.Constant][22] /* ty=Tensor[(275), uint8] */, dtype="uint8") /* ty=Tensor[(275), uint8] */;
  %447 = cast(meta[relay.Constant][22] /* ty=Tensor[(275), uint8] */, dtype="uint8") /* ty=Tensor[(275), uint8] */;
  %448 = reshape(%446, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
  %449 = reshape(%447, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
  %450 = cast(%var_5303, dtype="uint8") /* ty=Tensor[(54), uint8] */;
  %451 = reshape(%450, newshape=[3, 3, 6]) /* ty=Tensor[(3, 3, 6), uint8] */;
  %452 = @func_4789() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(792), float32], Tensor[(1716), float64], Tensor[(90), float32], Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(12, 11, 13), float64]) */;
  %453 = cast(%var_5339, dtype="uint32") /* ty=uint32 */;
  %454 = reshape(%453, newshape=[]) /* ty=uint32 */;
  %455 = @func_3920(%454) /* ty=(Tensor[(5, 1, 2), float64], uint32, Tensor[(1456), float32], uint32) */;
  %456 = %445.0;
  %457 = cast(%456, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %458 = cast(%var_5298, dtype="float64") /* ty=Tensor[(20), float64] */;
  %459 = reshape(%457, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
  %460 = reshape(%458, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float64] */;
  %461 = @func_2306(%459, %460) /* ty=(Tensor[(1716), float64], Tensor[(5, 2, 2), uint16], Tensor[(12, 11, 13), float32]) */;
  %462 = %461.0;
  %463 = cast(%462, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %464 = log(%463) /* ty=Tensor[(1716), float64] */;
  %465 = cast(%462, dtype="float32") /* ty=Tensor[(1716), float32] */;
  %466 = shape_of(%464, dtype="int32") /* ty=Tensor[(1), int32] */;
  %467 = cast(%464, dtype="float32") /* ty=Tensor[(1716), float32] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?), float32] */;
  %469 = divide(%467, %468) /* ty=Tensor[(1716), float32] */;
  %470 = cast(%var_5348, dtype="int16") /* ty=Tensor[(1716), int16] */;
  %471 = shape_of(%469, dtype="int32") /* ty=Tensor[(1), int32] */;
  %472 = cast(%469, dtype="int16") /* ty=Tensor[(1716), int16] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?), int16] */;
  %474 = @func_1686(%448, %449) /* ty=Tensor[(5, 5, 11), bool] */;
  %475 = @func_2916(%451) /* ty=Tensor[(3, 3, 6), uint8] */;
  %476 = %452.4;
  %477 = %455.3;
  %478 = logical_xor(%472, %473) /* ty=Tensor[(1716), int16] */;
  (%456, %474, meta[relay.Constant][22] /* ty=Tensor[(275), uint8] */, %var_5298, %475, %var_5303, %476, %477, %var_5339, %478)
}

def @func_7108() -> (Tensor[(5, 1, 2), float64],) {
  %479 = @func_6637() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %480 = %479.0;
  (%480,)
}

def @func_2916(%var_2910: Tensor[(3, 3, 6), uint8]) -> Tensor[(3, 3, 6), uint8] {
  %481 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 3, 6), uint8] */, dtype="uint8") /* ty=Tensor[(3, 3, 6), uint8] */;
  %482 = shape_of(%var_2910, dtype="int32") /* ty=Tensor[(3), int32] */;
  %483 = cast(%var_2910, dtype="uint8") /* ty=Tensor[(3, 3, 6), uint8] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%483, %484) /* ty=Tensor[(3, 3, 6), uint8] */
}

def @func_7805() -> (Tensor[(90), float32],) {
  %485 = @func_7358() /* ty=(Tensor[(90), float32],) */;
  %486 = %485.0;
  (%486,)
}

def @func_3229(%var_3209: Tensor[(5, 14, 2), float64]) -> Tensor[(5, 14, 2), bool] {
  %487 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %488 = %487.0;
  %489 = cast(%488, dtype="bool") /* ty=Tensor[(5, 1, 2), bool] */;
  %490 = cast(%var_3209, dtype="bool") /* ty=Tensor[(5, 14, 2), bool] */;
  greater(%489, %490) /* ty=Tensor[(5, 14, 2), bool] */
}

def @func_7273() -> Tensor[(5, 1, 2), float32] {
  @func_6351() /* ty=Tensor[(5, 1, 2), float32] */
}

def @func_3783(%var_3777: Tensor[(16, 14, 15), int16]) -> Tensor[(16, 14, 15), int16] {
  %491 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 14, 15), int16] */, dtype="int16") /* ty=Tensor[(16, 14, 15), int16] */;
  %492 = shape_of(%var_3777, dtype="int32") /* ty=Tensor[(3), int32] */;
  %493 = cast(%var_3777, dtype="int16") /* ty=Tensor[(16, 14, 15), int16] */;
  %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%493, %494) /* ty=Tensor[(16, 14, 15), int16] */
}

def @func_6052() -> Tensor[(90), float32] {
  %495 = @func_3006() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(90), float32]) */;
  %495.2
}

def @func_7416(%var_7411: Tensor[(10, 2, 13), float64]) -> (Tensor[(10, 2, 13), float64], Tensor[(10, 2, 13), float32]) {
  %496 = cast(%var_7411, dtype="float64") /* ty=Tensor[(10, 2, 13), float64] */;
  %497 = cast(%var_7411, dtype="float32") /* ty=Tensor[(10, 2, 13), float32] */;
  %498 = acos(%496) /* ty=Tensor[(10, 2, 13), float64] */;
  %499 = rsqrt(%497) /* ty=Tensor[(10, 2, 13), float32] */;
  (%498, %499)
}

def @func_5124() -> (Tensor[(5, 2, 2), uint16],) {
  %500 = @func_4588() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(275), uint8], Tensor[(5, 1, 2), float64], Tensor[(5, 2, 2), uint16], Tensor[(10, 2), float64]) */;
  %501 = %500.3;
  (%501,)
}

def @func_5013() -> Tensor[(5, 1, 2), float64] {
  @func_1888() /* ty=Tensor[(5, 1, 2), float64] */
}

def @func_7920(%var_7905: Tensor[(11, 13, 2), float32], %var_7918: Tensor[(3, 30), float32]) -> (Tensor[(11, 13, 2), float32], Tensor[(5, ?, 2), float64], Tensor[(10), float64], Tensor[(3, 30), float32]) {
  %502 = cast(%var_7905, dtype="float32") /* ty=Tensor[(11, 13, 2), float32] */;
  %503 = cast(meta[relay.Constant][25] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
  %504 = cast(%var_7918, dtype="float32") /* ty=Tensor[(3, 30), float32] */;
  %505 = reshape(%503, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
  %506 = reshape(%504, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %507 = @func_2483(%505, %506) /* ty=(Tensor[(5, ?, 2), float64], Tensor[(792), float32], Tensor[(90), float32], uint32) */;
  %508 = acos(%502) /* ty=Tensor[(11, 13, 2), float32] */;
  %509 = %507.0;
  (%508, %509, meta[relay.Constant][25] /* ty=Tensor[(10), float64] */, %var_7918)
}

def @func_7759() -> Tensor[(5, 1, 2), float64] {
  %510 = @func_5982() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %510.0
}

def @func_7599() -> Tensor[(5, 1, 2), float32] {
  %511 = @func_5190() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(792), float32]) */;
  %512 = %511.1;
  %513 = cast(%512, dtype="float32") /* ty=Tensor[(5, 1, 2), float32] */;
  erf(%513) /* ty=Tensor[(5, 1, 2), float32] */
}

def @func_8309() -> Tensor[(792), float32] {
  @func_3080() /* ty=Tensor[(792), float32] */
}

def @func_4082(%var_4068: Tensor[(300), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(300), float64]) {
  %514 = @func_3695() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %515 = cast(%var_4068, dtype="float64") /* ty=Tensor[(300), float64] */;
  %516 = reshape(%515, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %517 = @func_3546(%516) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(6, 10, 5), bool], Tensor[(300), float64], Tensor[(3, 3, 6), uint8], Tensor[(54), uint8], Tensor[(140), float64], Tensor[(5, 14, 2), float32]) */;
  %518 = %514.0;
  %519 = %517.0;
  (%518, %519, %var_4068)
}

def @func_3080() -> Tensor[(792), float32] {
  %520 = @func_3006() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(90), float32]) */;
  %520.1
}

def @func_4588() -> (Tensor[(5, 1, 2), float64], Tensor[(275), uint8], Tensor[(5, 1, 2), float64], Tensor[(5, 2, 2), uint16], Tensor[(10, 2), float64]) {
  %521 = @func_3394() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %522 = @func_2570() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */;
  %523 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %524 = %521.0;
  %525 = cast(%524, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %526 = cast(meta[relay.Constant][26] /* ty=Tensor[(10, 2), float64] */, dtype="float64") /* ty=Tensor[(10, 2), float64] */;
  %527 = reshape(%525, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
  %528 = reshape(%526, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float64] */;
  %529 = @func_2306(%527, %528) /* ty=(Tensor[(1716), float64], Tensor[(5, 2, 2), uint16], Tensor[(12, 11, 13), float32]) */;
  %530 = %522.2;
  %531 = %523.0;
  %532 = %529.1;
  (%524, %530, %531, %532, meta[relay.Constant][26] /* ty=Tensor[(10, 2), float64] */)
}

def @func_2899(%var_2884: Tensor[(1716), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) {
  %533 = @func_2570() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */;
  %534 = cast(%var_2884, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %535 = reshape(%534, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %536 = @func_1978(%535) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */;
  %537 = %536.1;
  %538 = cast(%537, dtype="float64") /* ty=Tensor[(12, 11, 13), float64] */;
  %539 = %533.0;
  %540 = sigmoid(%538) /* ty=Tensor[(12, 11, 13), float64] */;
  (%539, %var_2884, %540)
}

def @func_2332() -> (Tensor[(5, 1, 2), float64],) {
  %541 = @func_2222() /* ty=Tensor[(5, 1, 2), float64] */;
  (%541,)
}

def @func_1797(%var_1785: Tensor[(6, 1, 2), float64]) -> Tensor[(6, 1, 2), float64] {
  %542 = cast(%var_1785, dtype="float64") /* ty=Tensor[(6, 1, 2), float64] */;
  exp(%542) /* ty=Tensor[(6, 1, 2), float64] */
}

def @func_5859() -> Tensor[(90), float32] {
  %543 = @func_3006() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(90), float32]) */;
  %543.2
}

def @func_2306(%var_2248: Tensor[(5, 1, 2), float64], %var_2295: Tensor[(5, 2, 2), float64]) -> (Tensor[(1716), float64], Tensor[(5, 2, 2), uint16], Tensor[(12, 11, 13), float32]) {
  %544 = @func_1888() /* ty=Tensor[(5, 1, 2), float64] */;
  %545 = cast(%544, dtype="float32") /* ty=Tensor[(5, 1, 2), float32] */;
  %546 = log2(%545) /* ty=Tensor[(5, 1, 2), float32] */;
  %547 = @func_2222() /* ty=Tensor[(5, 1, 2), float64] */;
  %548 = cast(%547, dtype="int32") /* ty=Tensor[(5, 1, 2), int32] */;
  %549 = shape_of(%546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%546, dtype="int32") /* ty=Tensor[(5, 1, 2), int32] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %552 = bitwise_xor(%550, %551) /* ty=Tensor[(5, ?, 2), int32] */;
  %553 = cast(%var_2248, dtype="int32") /* ty=Tensor[(5, 1, 2), int32] */;
  %554 = shape_of(%544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(%544, dtype="int32") /* ty=Tensor[(5, 1, 2), int32] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %557 = minimum(%555, %556) /* ty=Tensor[(5, ?, 2), int32] */;
  %558 = cast(%557, dtype="float64") /* ty=Tensor[(5, ?, 2), float64] */;
  %559 = shape_of(%552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%552, dtype="float64") /* ty=Tensor[(5, ?, 2), float64] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %562 = floor_mod(%560, %561) /* ty=Tensor[(5, ?, 2), float64] */;
  %563 = cast(%562, dtype="uint16") /* ty=Tensor[(5, ?, 2), uint16] */;
  %564 = cast(%var_2295, dtype="uint16") /* ty=Tensor[(5, 2, 2), uint16] */;
  %565 = cast(meta[relay.Constant][27] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %566 = reshape(%565, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %567 = @func_1978(%566) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */;
  %568 = %567.3;
  %569 = cast(%568, dtype="float32") /* ty=Tensor[(12, 11, 13), float32] */;
  %570 = bitwise_or(%563, %564) /* ty=Tensor[(5, 2, 2), uint16] */;
  %571 = sinh(%569) /* ty=Tensor[(12, 11, 13), float32] */;
  (meta[relay.Constant][27] /* ty=Tensor[(1716), float64] */, %570, %571)
}

def @func_3893(%var_3883: Tensor[(120), float64], %var_3890: Tensor[(5, 60), float64]) -> (Tensor[(5, ?, 2), bool], Tensor[(5, 5, 11), bool], Tensor[(275), uint8], Tensor[(6, 2, 10), float64], Tensor[(120), float64], Tensor[(5, 14, 2), bool], Tensor[(140, 1), float64], Tensor[(11, 156), float64], Tensor[(5, 60), float64]) {
  %572 = @func_2356() /* ty=Tensor[(5, 1, 2), float64] */;
  %573 = cast(meta[relay.Constant][28] /* ty=Tensor[(5, 1, 2), float64] */, dtype="bool") /* ty=Tensor[(5, 1, 2), bool] */;
  %574 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %575 = cast(%572, dtype="bool") /* ty=Tensor[(5, 1, 2), bool] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %577 = cast(meta[relay.Constant][29] /* ty=Tensor[(275), uint8] */, dtype="uint8") /* ty=Tensor[(275), uint8] */;
  %578 = cast(meta[relay.Constant][29] /* ty=Tensor[(275), uint8] */, dtype="uint8") /* ty=Tensor[(275), uint8] */;
  %579 = reshape(%577, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
  %580 = reshape(%578, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
  %581 = cast(%var_3883, dtype="float64") /* ty=Tensor[(120), float64] */;
  %582 = reshape(%581, newshape=[6, 2, 10]) /* ty=Tensor[(6, 2, 10), float64] */;
  %583 = @func_3343(%582) /* ty=(Tensor[(6, 2, 10), float64],) */;
  %584 = cast(meta[relay.Constant][30] /* ty=Tensor[(140, 1), float64] */, dtype="float64") /* ty=Tensor[(140, 1), float64] */;
  %585 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 156), float64] */, dtype="float64") /* ty=Tensor[(11, 156), float64] */;
  %586 = cast(%var_3890, dtype="float64") /* ty=Tensor[(5, 60), float64] */;
  %587 = reshape(%584, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %588 = reshape(%585, newshape=[286, 6]) /* ty=Tensor[(286, 6), float64] */;
  %589 = reshape(%586, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %590 = @func_3275(%587, %588, %589) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 14, 2), bool], Tensor[(140), float64], Tensor[(5, 1, 2), float64], Tensor[(286, 6), float64], uint32, Tensor[(90), float32], Tensor[(5, 5, 11), bool], Tensor[(300), float64], Tensor[(5, 1, 2), float64]) */;
  %591 = logical_and(%575, %576) /* ty=Tensor[(5, ?, 2), bool] */;
  %592 = @func_1686(%579, %580) /* ty=Tensor[(5, 5, 11), bool] */;
  %593 = %583.0;
  %594 = %590.1;
  (%591, %592, meta[relay.Constant][29] /* ty=Tensor[(275), uint8] */, %593, %var_3883, %594, meta[relay.Constant][30] /* ty=Tensor[(140, 1), float64] */, meta[relay.Constant][31] /* ty=Tensor[(11, 156), float64] */, %var_3890)
}

def @func_6202() -> Tensor[(90), float32] {
  @func_5859() /* ty=Tensor[(90), float32] */
}

def @func_7890(%var_7868: Tensor[(432), float64]) -> (Tensor[(5, 5, 11), bool], Tensor[(300), float64], Tensor[(1344), bool], Tensor[(432), float64], Tensor[(5, 5, 11), bool], Tensor[(5, 1, 2), float64], Tensor[(15, 12, 2), bool], uint16, Tensor[(36, 10), uint16]) {
  %595 = @func_2570() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */;
  %596 = cast(meta[relay.Constant][32] /* ty=Tensor[(1344), bool] */, dtype="bool") /* ty=Tensor[(1344), bool] */;
  %597 = cast(meta[relay.Constant][32] /* ty=Tensor[(1344), bool] */, dtype="bool") /* ty=Tensor[(1344), bool] */;
  %598 = cast(%var_7868, dtype="float64") /* ty=Tensor[(432), float64] */;
  %599 = reshape(%596, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), bool] */;
  %600 = reshape(%597, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), bool] */;
  %601 = reshape(%598, newshape=[432]) /* ty=Tensor[(432), float64] */;
  %602 = @func_4482(%599, %600, %601) /* ty=(Tensor[(300), float64], Tensor[(300, 1), float64], Tensor[(12, 14, 8), float32], Tensor[(12, 14, 8), int16], Tensor[(10, 3, 3), float32], Tensor[(432), float64]) */;
  %603 = @func_2570() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */;
  %604 = @func_5190() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(792), float32]) */;
  %605 = cast(meta[relay.Constant][33] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %606 = cast(meta[relay.Constant][34] /* ty=Tensor[(36, 10), uint16] */, dtype="uint16") /* ty=Tensor[(36, 10), uint16] */;
  %607 = reshape(%605, newshape=[]) /* ty=uint16 */;
  %608 = reshape(%606, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint16] */;
  %609 = @func_7139(%607, %608) /* ty=(Tensor[(15, 12, 2), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32]) */;
  %610 = %595.1;
  %611 = %602.0;
  %612 = %603.1;
  %613 = %604.0;
  %614 = %609.0;
  (%610, %611, meta[relay.Constant][32] /* ty=Tensor[(1344), bool] */, %var_7868, %612, %613, %614, meta[relay.Constant][33] /* ty=uint16 */, meta[relay.Constant][34] /* ty=Tensor[(36, 10), uint16] */)
}

def @func_5190() -> (Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(792), float32]) {
  %615 = @func_3695() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %616 = @func_2332() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %617 = %616.0;
  %618 = cast(%617, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %619 = %615.0;
  %620 = sinh(%618) /* ty=Tensor[(5, 1, 2), float64] */;
  %621 = @func_3080() /* ty=Tensor[(792), float32] */;
  (%619, %620, %621)
}

def @func_7401() -> (Tensor[(5, 5, 11), bool], Tensor[(5, 2, 2), uint16]) {
  %622 = @func_2570() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */;
  %623 = @func_5124() /* ty=(Tensor[(5, 2, 2), uint16],) */;
  %624 = %622.1;
  %625 = %623.0;
  (%624, %625)
}

def @func_2356() -> Tensor[(5, 1, 2), float64] {
  @func_1888() /* ty=Tensor[(5, 1, 2), float64] */
}

def @func_3585() -> (Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64]) {
  %626 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %627 = cast(meta[relay.Constant][35] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %628 = reshape(%627, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %629 = @func_1978(%628) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */;
  %630 = @func_3125() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %631 = %626.0;
  %632 = %629.3;
  %633 = %630.0;
  %634 = @func_2356() /* ty=Tensor[(5, 1, 2), float64] */;
  (%631, %632, meta[relay.Constant][35] /* ty=Tensor[(1716), float64] */, %633, %634)
}

def @func_7139(%var_7121: uint16, %var_7122: Tensor[(15, 12, 2), uint16]) -> (Tensor[(15, 12, 2), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32]) {
  %635 = cast(%var_7121, dtype="bool") /* ty=bool */;
  %636 = cast(%var_7122, dtype="bool") /* ty=Tensor[(15, 12, 2), bool] */;
  %637 = cast(meta[relay.Constant][36] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %638 = reshape(%637, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float32] */;
  %639 = @func_326(%638) /* ty=(Tensor[(11, 9, 8), float32],) */;
  %640 = greater_equal(%635, %636) /* ty=Tensor[(15, 12, 2), bool] */;
  %641 = %639.0;
  (%640, %641, meta[relay.Constant][36] /* ty=Tensor[(792), float32] */)
}

def @func_4482(%var_4449: Tensor[(12, 14, 8), bool], %var_4469: Tensor[(12, 14, 8), bool], %var_4475: Tensor[(432), float64]) -> (Tensor[(300), float64], Tensor[(300, 1), float64], Tensor[(12, 14, 8), float32], Tensor[(12, 14, 8), int16], Tensor[(10, 3, 3), float32], Tensor[(432), float64]) {
  %642 = cast(meta[relay.Constant][37] /* ty=Tensor[(300, 1), float64] */, dtype="float64") /* ty=Tensor[(300, 1), float64] */;
  %643 = reshape(%642, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %644 = @func_4082(%643) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(300), float64]) */;
  %645 = cast(meta[relay.Constant][38] /* ty=Tensor[(12, 14, 8), bool] */, dtype="bool") /* ty=Tensor[(12, 14, 8), bool] */;
  %646 = shape_of(%var_4449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %647 = cast(%var_4449, dtype="bool") /* ty=Tensor[(12, 14, 8), bool] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %649 = logical_and(%647, %648) /* ty=Tensor[(12, 14, 8), bool] */;
  %650 = cast(%var_4449, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
  %651 = shape_of(%649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %652 = cast(%649, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %654 = cast(%var_4469, dtype="int16") /* ty=Tensor[(12, 14, 8), int16] */;
  %655 = shape_of(%var_4449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %656 = cast(%var_4449, dtype="int16") /* ty=Tensor[(12, 14, 8), int16] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %658 = cast(%var_4475, dtype="float64") /* ty=Tensor[(432), float64] */;
  %659 = reshape(%658, newshape=[432]) /* ty=Tensor[(432), float64] */;
  %660 = @func_2665(%659) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(90), float32]) */;
  %661 = %644.2;
  %662 = power(%652, %653) /* ty=Tensor[(12, 14, 8), float32] */;
  %663 = maximum(%656, %657) /* ty=Tensor[(12, 14, 8), int16] */;
  %664 = %660.3;
  (%661, meta[relay.Constant][37] /* ty=Tensor[(300, 1), float64] */, %662, %663, %664, %var_4475)
}

def @func_6152(%var_6113: uint32) -> (Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(5, 1, 2), float64], Tensor[(1456), float32], uint32, Tensor[(90), float32], Tensor[(90), float32], Tensor[(90), float32], Tensor[(5, 1, 2), float64]) {
  %665 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %666 = @func_4789() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(792), float32], Tensor[(1716), float64], Tensor[(90), float32], Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(12, 11, 13), float64]) */;
  %667 = @func_3585() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64]) */;
  %668 = cast(%var_6113, dtype="uint32") /* ty=uint32 */;
  %669 = reshape(%668, newshape=[]) /* ty=uint32 */;
  %670 = @func_3920(%669) /* ty=(Tensor[(5, 1, 2), float64], uint32, Tensor[(1456), float32], uint32) */;
  %671 = @func_6075() /* ty=(Tensor[(90), float32],) */;
  %672 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %673 = %665.0;
  %674 = %666.6;
  %675 = %667.3;
  %676 = %670.2;
  %677 = @func_6052() /* ty=Tensor[(90), float32] */;
  %678 = @func_6052() /* ty=Tensor[(90), float32] */;
  %679 = %671.0;
  %680 = %672.0;
  (%673, %674, %675, %676, %var_6113, %677, %678, %679, %680)
}

def @func_6259(%var_6253: Tensor[(12, 5, 5), float32]) -> Tensor[(12, 5, 5), int64] {
  %681 = @func_3485() /* ty=(Tensor[(12, 5, 5), float32],) */;
  %682 = %681.0;
  %683 = cast(%var_6253, dtype="int64") /* ty=Tensor[(12, 5, 5), int64] */;
  %684 = shape_of(%682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%682, dtype="int64") /* ty=Tensor[(12, 5, 5), int64] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  add(%685, %686) /* ty=Tensor[(12, 5, 5), int64] */
}

def @func_4789() -> (Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(792), float32], Tensor[(1716), float64], Tensor[(90), float32], Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(12, 11, 13), float64]) {
  %687 = cast(meta[relay.Constant][39] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %688 = cast(meta[relay.Constant][40] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %689 = reshape(%687, newshape=[2, 396]) /* ty=Tensor[(2, 396), float32] */;
  %690 = reshape(%688, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %691 = @func_4711(%689, %690) /* ty=(uint32, Tensor[(5, 1, 2), float64], Tensor[(11, 9, 8), float32], Tensor[(2, 396), float64], Tensor[(2, 396), bool], Tensor[(5, 1, 2), float64], Tensor[(1716), float64], Tensor[(5, 1, 2), float64], Tensor[(2, 396), float64], Tensor[(2, 396), float32], Tensor[(12, 11, 13), float32], Tensor[(20), float64], Tensor[(792), float32], Tensor[(90), float32]) */;
  %692 = cast(meta[relay.Constant][41] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %693 = reshape(%692, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %694 = @func_4145(%693) /* ty=(Tensor[(792), float32], Tensor[(90), float32], Tensor[(540), float64], Tensor[(90), float32]) */;
  %695 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %696 = reshape(%695, newshape=[]) /* ty=int64 */;
  %697 = @func_4610(%696) /* ty=(Tensor[(6, 2, 12), int64], Tensor[(792), float32]) */;
  %698 = cast(meta[relay.Constant][40] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %699 = reshape(%698, newshape=[12, 11, 13]) /* ty=Tensor[(12, 11, 13), float64] */;
  %700 = @func_4365() /* ty=Tensor[(5, 1, 2), float64] */;
  %701 = %691.12;
  %702 = %694.1;
  %703 = %697.1;
  %704 = @func_1437(%699) /* ty=Tensor[(12, 11, 13), float64] */;
  (%700, %701, meta[relay.Constant][39] /* ty=Tensor[(792), float32] */, meta[relay.Constant][40] /* ty=Tensor[(1716), float64] */, %702, meta[relay.Constant][41] /* ty=Tensor[(90), float32] */, %703, -8 /* ty=int64 */, %704)
}

def @func_1437(%var_1431: Tensor[(12, 11, 13), float64]) -> Tensor[(12, 11, 13), float64] {
  %705 = cast(%var_1431, dtype="float64") /* ty=Tensor[(12, 11, 13), float64] */;
  erf(%705) /* ty=Tensor[(12, 11, 13), float64] */
}

def @func_2570() -> (Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) {
  %706 = @func_2332() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %707 = cast(meta[relay.Constant][42] /* ty=Tensor[(275), uint8] */, dtype="uint8") /* ty=Tensor[(275), uint8] */;
  %708 = cast(meta[relay.Constant][42] /* ty=Tensor[(275), uint8] */, dtype="uint8") /* ty=Tensor[(275), uint8] */;
  %709 = reshape(%707, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
  %710 = reshape(%708, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
  %711 = %706.0;
  %712 = @func_1686(%709, %710) /* ty=Tensor[(5, 5, 11), bool] */;
  (%711, %712, meta[relay.Constant][42] /* ty=Tensor[(275), uint8] */)
}

def @func_826(%var_810: Tensor[(10, 3, 3), float32]) -> (Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float32], uint32, Tensor[(792), float32]) {
  %713 = cast(%var_810, dtype="float32") /* ty=Tensor[(10, 3, 3), float32] */;
  %714 = cast(meta[relay.Constant][43] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %715 = cast(meta[relay.Constant][44] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %716 = reshape(%714, newshape=[]) /* ty=uint32 */;
  %717 = reshape(%715, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %718 = @func_568(%716, %717) /* ty=(Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %719 = cos(%713) /* ty=Tensor[(10, 3, 3), float32] */;
  %720 = %718.1;
  (%719, %720, meta[relay.Constant][43] /* ty=uint32 */, meta[relay.Constant][44] /* ty=Tensor[(792), float32] */)
}

def @func_5489(%var_5475: Tensor[(120), float64]) -> (Tensor[(5, 2, 2), uint16], Tensor[(120), float64], Tensor[(140, 300), bool], Tensor[(5, 14, 2), bool]) {
  %721 = @func_5124() /* ty=(Tensor[(5, 2, 2), uint16],) */;
  %722 = cast(%var_5475, dtype="float64") /* ty=Tensor[(120), float64] */;
  %723 = cast(meta[relay.Constant][45] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %724 = reshape(%722, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %725 = reshape(%723, newshape=[5, 60]) /* ty=Tensor[(5, 60), float64] */;
  %726 = @func_3893(%724, %725) /* ty=(Tensor[(5, ?, 2), bool], Tensor[(5, 5, 11), bool], Tensor[(275), uint8], Tensor[(6, 2, 10), float64], Tensor[(120), float64], Tensor[(5, 14, 2), bool], Tensor[(140, 1), float64], Tensor[(11, 156), float64], Tensor[(5, 60), float64]) */;
  %727 = %726.6;
  %728 = cast(meta[relay.Constant][45] /* ty=Tensor[(300), float64] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %729 = cast(%727, dtype="bool") /* ty=Tensor[(140, 1), bool] */;
  %730 = cast(%727, dtype="float64") /* ty=Tensor[(140, 1), float64] */;
  %731 = reshape(%730, newshape=[5, 14, 2]) /* ty=Tensor[(5, 14, 2), float64] */;
  %732 = %721.0;
  %733 = less(%728, %729) /* ty=Tensor[(140, 300), bool] */;
  %734 = @func_3229(%731) /* ty=Tensor[(5, 14, 2), bool] */;
  (%732, %var_5475, %733, %734)
}

def @func_3546(%var_3525: Tensor[(300), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(6, 10, 5), bool], Tensor[(300), float64], Tensor[(3, 3, 6), uint8], Tensor[(54), uint8], Tensor[(140), float64], Tensor[(5, 14, 2), float32]) {
  %735 = cast(%var_3525, dtype="float64") /* ty=Tensor[(300), float64] */;
  %736 = reshape(%735, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), float64] */;
  %737 = @func_2001(%736) /* ty=(Tensor[(6, 10, 5), bool], Tensor[(5, 5, 11), bool], Tensor[(55, 5), uint8]) */;
  %738 = cast(meta[relay.Constant][46] /* ty=Tensor[(54), uint8] */, dtype="uint8") /* ty=Tensor[(54), uint8] */;
  %739 = reshape(%738, newshape=[3, 3, 6]) /* ty=Tensor[(3, 3, 6), uint8] */;
  %740 = cast(meta[relay.Constant][47] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %741 = reshape(%740, newshape=[5, 14, 2]) /* ty=Tensor[(5, 14, 2), float64] */;
  %742 = @func_3229(%741) /* ty=Tensor[(5, 14, 2), bool] */;
  %743 = cast(%742, dtype="float32") /* ty=Tensor[(5, 14, 2), float32] */;
  %744 = @func_2356() /* ty=Tensor[(5, 1, 2), float64] */;
  %745 = %737.0;
  %746 = @func_2916(%739) /* ty=Tensor[(3, 3, 6), uint8] */;
  %747 = acos(%743) /* ty=Tensor[(5, 14, 2), float32] */;
  (%744, %745, %var_3525, %746, meta[relay.Constant][46] /* ty=Tensor[(54), uint8] */, meta[relay.Constant][47] /* ty=Tensor[(140), float64] */, %747)
}

def @func_2363() -> (Tensor[(5, 1, 2), float64],) {
  %748 = @func_2222() /* ty=Tensor[(5, 1, 2), float64] */;
  (%748,)
}

def @func_4535() -> (Tensor[(5, ?, 2), uint16],) {
  %749 = @func_2332() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %750 = %749.0;
  %751 = cast(%750, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %752 = asinh(%751) /* ty=Tensor[(5, 1, 2), float64] */;
  %753 = cast(%750, dtype="uint16") /* ty=Tensor[(5, 1, 2), uint16] */;
  %754 = shape_of(%752, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(%752, dtype="uint16") /* ty=Tensor[(5, 1, 2), uint16] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %757 = bitwise_and(%755, %756) /* ty=Tensor[(5, ?, 2), uint16] */;
  (%757,)
}

def @func_1978(%var_1964: Tensor[(1716), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) {
  %758 = cast(%var_1964, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %759 = reshape(%758, newshape=[12, 11, 13]) /* ty=Tensor[(12, 11, 13), float64] */;
  %760 = @func_1437(%759) /* ty=Tensor[(12, 11, 13), float64] */;
  %761 = cast(%760, dtype="float64") /* ty=Tensor[(12, 11, 13), float64] */;
  %762 = reshape(%761, newshape=[12, 11, 13]) /* ty=Tensor[(12, 11, 13), float64] */;
  %763 = @func_1888() /* ty=Tensor[(5, 1, 2), float64] */;
  %764 = @func_1437(%762) /* ty=Tensor[(12, 11, 13), float64] */;
  (%763, %760, %var_1964, %764)
}

def @func_659(%var_614: Tensor[(9, 3, 16), float64]) -> (Tensor[(9, 3, 16), float32], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) {
  %765 = cast(-8.82648f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %766 = cast(%var_614, dtype="float64") /* ty=Tensor[(9, 3, 16), float64] */;
  %767 = minimum(%765, %766) /* ty=Tensor[(9, 3, 16), float64] */;
  %768 = cast(%767, dtype="float32") /* ty=Tensor[(9, 3, 16), float32] */;
  %769 = cast(meta[relay.Constant][48] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %770 = reshape(%769, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float32] */;
  %771 = @func_326(%770) /* ty=(Tensor[(11, 9, 8), float32],) */;
  %772 = cast(-8.82648f64 /* ty=float64 */, dtype="uint32") /* ty=uint32 */;
  %773 = cast(meta[relay.Constant][48] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %774 = reshape(%772, newshape=[]) /* ty=uint32 */;
  %775 = reshape(%773, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %776 = @func_568(%774, %775) /* ty=(Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %777 = log(%768) /* ty=Tensor[(9, 3, 16), float32] */;
  %778 = %771.0;
  %779 = %776.3;
  (%777, %778, meta[relay.Constant][48] /* ty=Tensor[(792), float32] */, %779)
}

def @func_5921() -> (Tensor[(5, 1, 2), float64],) {
  %780 = @func_2222() /* ty=Tensor[(5, 1, 2), float64] */;
  (%780,)
}

def @func_5701(%var_5679: uint32) -> (Tensor[(5, 1, 2), float64], Tensor[(1456), float32], uint32) {
  %781 = @func_5190() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(792), float32]) */;
  %782 = cast(%var_5679, dtype="uint32") /* ty=uint32 */;
  %783 = reshape(%782, newshape=[]) /* ty=uint32 */;
  %784 = @func_3920(%783) /* ty=(Tensor[(5, 1, 2), float64], uint32, Tensor[(1456), float32], uint32) */;
  %785 = %781.1;
  %786 = %784.2;
  (%785, %786, %var_5679)
}

def @func_3343(%var_3334: Tensor[(6, 2, 10), float64]) -> (Tensor[(6, 2, 10), float64],) {
  %787 = cast(%var_3334, dtype="float64") /* ty=Tensor[(6, 2, 10), float64] */;
  %788 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(6, 2, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 2, 10), float64] */, dtype="float64") /* ty=Tensor[(6, 2, 10), float64] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %791 = power(%789, %790) /* ty=Tensor[(6, 2, 10), float64] */;
  (%791,)
}

def @func_5982() -> (Tensor[(5, 1, 2), float64],) {
  %792 = @func_3394() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %793 = %792.0;
  (%793,)
}

def @func_3054() -> (Tensor[(792), float32],) {
  %794 = @func_3006() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(90), float32]) */;
  %795 = %794.1;
  (%795,)
}

def @func_3695() -> (Tensor[(5, 1, 2), float64],) {
  %796 = @func_3125() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %797 = %796.0;
  (%797,)
}

def @func_4365() -> Tensor[(5, 1, 2), float64] {
  @func_1888() /* ty=Tensor[(5, 1, 2), float64] */
}

def @func_6396() -> (Tensor[(5, 1, 2), float64],) {
  %798 = @func_5013() /* ty=Tensor[(5, 1, 2), float64] */;
  (%798,)
}

def @func_7302(%var_7291: Tensor[(300), float64]) -> (Tensor[(90), float32], Tensor[(300), float64], Tensor[(300), float64]) {
  %799 = @func_6870() /* ty=(Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(90), float32], Tensor[(12, 2, 4), bool]) */;
  %800 = cast(%var_7291, dtype="float64") /* ty=Tensor[(300), float64] */;
  %801 = reshape(%800, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %802 = @func_4082(%801) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(300), float64]) */;
  %803 = %799.0;
  %804 = %802.2;
  (%803, %804, %var_7291)
}

def @func_326(%var_272: Tensor[(11, 9, 8), float32]) -> (Tensor[(11, 9, 8), float32],) {
  %805 = cast(%var_272, dtype="float32") /* ty=Tensor[(11, 9, 8), float32] */;
  %806 = acos(%805) /* ty=Tensor[(11, 9, 8), float32] */;
  (%806,)
}

def @func_3006() -> (Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(90), float32]) {
  %807 = @func_1888() /* ty=Tensor[(5, 1, 2), float64] */;
  %808 = cast(%807, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %809 = cast(meta[relay.Constant][50] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %810 = reshape(%808, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
  %811 = reshape(%809, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %812 = @func_2483(%810, %811) /* ty=(Tensor[(5, ?, 2), float64], Tensor[(792), float32], Tensor[(90), float32], uint32) */;
  %813 = %812.1;
  (%807, %813, meta[relay.Constant][50] /* ty=Tensor[(90), float32] */)
}

def @func_2760(%var_2706: Tensor[(216, 2), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(90), float32], Tensor[(10, 3, 3), float32], Tensor[(216, 2), float64], Tensor[(1716), float64], Tensor[(20), float64], Tensor[(5, ?, 2), float64], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(792), float32], Tensor[(5, 1, 2), float64]) {
  %814 = cast(%var_2706, dtype="float64") /* ty=Tensor[(216, 2), float64] */;
  %815 = reshape(%814, newshape=[432]) /* ty=Tensor[(432), float64] */;
  %816 = @func_2665(%815) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(90), float32]) */;
  %817 = @func_1888() /* ty=Tensor[(5, 1, 2), float64] */;
  %818 = cast(%817, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %819 = cast(meta[relay.Constant][52] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %820 = reshape(%818, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
  %821 = reshape(%819, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float64] */;
  %822 = @func_2306(%820, %821) /* ty=(Tensor[(1716), float64], Tensor[(5, 2, 2), uint16], Tensor[(12, 11, 13), float32]) */;
  %823 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %824 = %823.0;
  %825 = cast(%824, dtype="float32") /* ty=Tensor[(5, 1, 2), float32] */;
  %826 = sigmoid(%825) /* ty=Tensor[(5, 1, 2), float32] */;
  %827 = cast(%824, dtype="uint16") /* ty=Tensor[(5, 1, 2), uint16] */;
  %828 = shape_of(%826, dtype="int32") /* ty=Tensor[(3), int32] */;
  %829 = cast(%826, dtype="uint16") /* ty=Tensor[(5, 1, 2), uint16] */;
  %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %831 = subtract(%829, %830) /* ty=Tensor[(5, ?, 2), uint16] */;
  %832 = cast(%817, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %833 = cast(meta[relay.Constant][51] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %834 = reshape(%832, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
  %835 = reshape(%833, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %836 = @func_2483(%834, %835) /* ty=(Tensor[(5, ?, 2), float64], Tensor[(792), float32], Tensor[(90), float32], uint32) */;
  %837 = %836.3;
  %838 = cast(%831, dtype="int16") /* ty=Tensor[(5, ?, 2), int16] */;
  %839 = cast(%837, dtype="int16") /* ty=int16 */;
  %840 = multiply(%838, %839) /* ty=Tensor[(5, ?, 2), int16] */;
  %841 = cast(%840, dtype="float64") /* ty=Tensor[(5, ?, 2), float64] */;
  %842 = cast(%837, dtype="uint32") /* ty=uint32 */;
  %843 = cast(meta[relay.Constant][53] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %844 = reshape(%842, newshape=[]) /* ty=uint32 */;
  %845 = reshape(%843, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %846 = @func_568(%844, %845) /* ty=(Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %847 = %816.3;
  %848 = cast(%847, dtype="float32") /* ty=Tensor[(10, 3, 3), float32] */;
  %849 = reshape(%848, newshape=[10, 3, 3]) /* ty=Tensor[(10, 3, 3), float32] */;
  %850 = @func_826(%849) /* ty=(Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float32], uint32, Tensor[(792), float32]) */;
  %851 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %852 = %822.0;
  %853 = rsqrt(%841) /* ty=Tensor[(5, ?, 2), float64] */;
  %854 = %846.1;
  %855 = %850.3;
  %856 = %851.0;
  (%817, meta[relay.Constant][51] /* ty=Tensor[(90), float32] */, %847, %var_2706, %852, meta[relay.Constant][52] /* ty=Tensor[(20), float64] */, %853, %854, meta[relay.Constant][53] /* ty=Tensor[(792), float32] */, %855, %856)
}

def @func_3125() -> (Tensor[(5, 1, 2), float64],) {
  %857 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %858 = %857.0;
  (%858,)
}

def @func_5588(%var_5553: Tensor[(5, 16, 2), float64]) -> (Tensor[(5, 16, 2), int32],) {
  %859 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %860 = %859.0;
  %861 = cast(%860, dtype="int32") /* ty=Tensor[(5, 1, 2), int32] */;
  %862 = cast(%var_5553, dtype="int32") /* ty=Tensor[(5, 16, 2), int32] */;
  %863 = bitwise_or(%861, %862) /* ty=Tensor[(5, 16, 2), int32] */;
  (%863,)
}

def @func_3485() -> (Tensor[(12, 5, 5), float32],) {
  %864 = cast(meta[relay.Constant][54] /* ty=Tensor[(12, 5, 5), float32] */, dtype="float32") /* ty=Tensor[(12, 5, 5), float32] */;
  %865 = cos(%864) /* ty=Tensor[(12, 5, 5), float32] */;
  (%865,)
}

def @func_7539(%var_7527: Tensor[(336, 4), bool]) -> (Tensor[(5, 1, 2), float64], Tensor[(275), uint8], Tensor[(432), float64], Tensor[(336, 4), bool], Tensor[(432), float64], Tensor[(792), float64]) {
  %866 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %867 = @func_2570() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */;
  %868 = cast(%var_7527, dtype="bool") /* ty=Tensor[(336, 4), bool] */;
  %869 = cast(%var_7527, dtype="bool") /* ty=Tensor[(336, 4), bool] */;
  %870 = cast(meta[relay.Constant][55] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %871 = reshape(%868, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), bool] */;
  %872 = reshape(%869, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), bool] */;
  %873 = reshape(%870, newshape=[432]) /* ty=Tensor[(432), float64] */;
  %874 = @func_4482(%871, %872, %873) /* ty=(Tensor[(300), float64], Tensor[(300, 1), float64], Tensor[(12, 14, 8), float32], Tensor[(12, 14, 8), int16], Tensor[(10, 3, 3), float32], Tensor[(432), float64]) */;
  %875 = @func_6870() /* ty=(Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(90), float32], Tensor[(12, 2, 4), bool]) */;
  %876 = %875.1;
  %877 = cast(%876, dtype="float64") /* ty=Tensor[(792), float64] */;
  %878 = %866.0;
  %879 = %867.2;
  %880 = %874.5;
  %881 = atan(%877) /* ty=Tensor[(792), float64] */;
  (%878, %879, %880, %var_7527, meta[relay.Constant][55] /* ty=Tensor[(432), float64] */, %881)
}

def @func_4610(%var_4602: int64) -> (Tensor[(6, 2, 12), int64], Tensor[(792), float32]) {
  %882 = cast(%var_4602, dtype="int64") /* ty=int64 */;
  %883 = cast(meta[relay.Constant][56] /* ty=Tensor[(6, 2, 12), int64] */, dtype="int64") /* ty=Tensor[(6, 2, 12), int64] */;
  %884 = @func_3054() /* ty=(Tensor[(792), float32],) */;
  %885 = bitwise_or(%882, %883) /* ty=Tensor[(6, 2, 12), int64] */;
  %886 = %884.0;
  (%885, %886)
}

def @func_2206(%var_2185: Tensor[(1716), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) {
  %887 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %888 = cast(%var_2185, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %889 = reshape(%888, newshape=[12, 11, 13]) /* ty=Tensor[(12, 11, 13), float64] */;
  %890 = @func_1437(%889) /* ty=Tensor[(12, 11, 13), float64] */;
  %891 = cast(%890, dtype="float64") /* ty=Tensor[(12, 11, 13), float64] */;
  %892 = reshape(%891, newshape=[12, 11, 13]) /* ty=Tensor[(12, 11, 13), float64] */;
  %893 = %887.0;
  %894 = @func_1437(%892) /* ty=Tensor[(12, 11, 13), float64] */;
  (%893, %890, %var_2185, %894)
}

def @func_7358() -> (Tensor[(90), float32],) {
  %895 = @func_6052() /* ty=Tensor[(90), float32] */;
  (%895,)
}

def @func_6615(%var_6584: Tensor[(12), int64], %var_6606: uint32) -> (Tensor[(12, 5, 5), float64], Tensor[(2880), uint32], Tensor[(12), int64], Tensor[(192), int64], Tensor[(5, 1, 2), float64], uint32) {
  %896 = @func_3485() /* ty=(Tensor[(12, 5, 5), float32],) */;
  %897 = %896.0;
  %898 = cast(meta[relay.Constant][57] /* ty=Tensor[(12, 5, 5), float32] */, dtype="float64") /* ty=Tensor[(12, 5, 5), float64] */;
  %899 = shape_of(%897, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%897, dtype="float64") /* ty=Tensor[(12, 5, 5), float64] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %902 = cast(%var_6584, dtype="int64") /* ty=Tensor[(12), int64] */;
  %903 = cast(meta[relay.Constant][58] /* ty=Tensor[(192), int64] */, dtype="int64") /* ty=Tensor[(192), int64] */;
  %904 = cast(%897, dtype="float64") /* ty=Tensor[(12, 5, 5), float64] */;
  %905 = reshape(%902, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), int64] */;
  %906 = reshape(%903, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), int64] */;
  %907 = reshape(%904, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %908 = @func_6514(%905, %906, %907) /* ty=(Tensor[(16, 3, 4), int64], Tensor[(5, 1, 2), float64], Tensor[(300), float64], Tensor[(16, 15, 12), bool], Tensor[(2880), uint32], Tensor[(16, 3, 4), float32]) */;
  %909 = cast(%var_6606, dtype="uint32") /* ty=uint32 */;
  %910 = reshape(%909, newshape=[]) /* ty=uint32 */;
  %911 = @func_6152(%910) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(5, 1, 2), float64], Tensor[(1456), float32], uint32, Tensor[(90), float32], Tensor[(90), float32], Tensor[(90), float32], Tensor[(5, 1, 2), float64]) */;
  %912 = power(%900, %901) /* ty=Tensor[(12, 5, 5), float64] */;
  %913 = %908.4;
  %914 = %911.0;
  (%912, %913, %var_6584, meta[relay.Constant][58] /* ty=Tensor[(192), int64] */, %914, %var_6606)
}

def @func_5103(%var_5100: Tensor[(324), uint16]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, ?, 2), uint16], Tensor[(9, 6, 6), float32], Tensor[(324), uint16]) {
  %915 = @func_4535() /* ty=(Tensor[(5, ?, 2), uint16],) */;
  %916 = cast(%var_5100, dtype="uint16") /* ty=Tensor[(324), uint16] */;
  %917 = reshape(%916, newshape=[9, 6, 6]) /* ty=Tensor[(9, 6, 6), uint16] */;
  %918 = @func_4960(%917) /* ty=(Tensor[(9, 6, 6), float32], Tensor[(9, 6, 6), float64], Tensor[(9, 3, 16), float32], Tensor[(432), float64]) */;
  %919 = @func_4365() /* ty=Tensor[(5, 1, 2), float64] */;
  %920 = %915.0;
  %921 = %918.0;
  (%919, %920, %921, %var_5100)
}

def @func_5256(%var_5248: Tensor[(1, 90), float32]) -> (Tensor[(12, 5, 5), float32], uint32, Tensor[(1, 90), float32]) {
  %922 = @func_3485() /* ty=(Tensor[(12, 5, 5), float32],) */;
  %923 = %922.0;
  %924 = cast(%923, dtype="float32") /* ty=Tensor[(12, 5, 5), float32] */;
  %925 = atan(%924) /* ty=Tensor[(12, 5, 5), float32] */;
  %926 = cast(%925, dtype="float32") /* ty=Tensor[(12, 5, 5), float32] */;
  %927 = cast(%var_5248, dtype="float32") /* ty=Tensor[(1, 90), float32] */;
  %928 = reshape(%927, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %929 = @func_3195(%928) /* ty=(Tensor[(5, 1, 2), float32], uint32, Tensor[(90), float32]) */;
  %930 = rsqrt(%926) /* ty=Tensor[(12, 5, 5), float32] */;
  %931 = %929.1;
  (%930, %931, %var_5248)
}

def @func_4145(%var_4100: Tensor[(90), float32]) -> (Tensor[(792), float32], Tensor[(90), float32], Tensor[(540), float64], Tensor[(90), float32]) {
  %932 = @func_3759() /* ty=(Tensor[(792), float32],) */;
  %933 = cast(meta[relay.Constant][59] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %934 = cast(%var_4100, dtype="float32") /* ty=Tensor[(90), float32] */;
  %935 = reshape(%933, newshape=[9, 5, 12]) /* ty=Tensor[(9, 5, 12), float64] */;
  %936 = reshape(%934, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %937 = @func_3943(%935, %936) /* ty=(Tensor[(9, 5, 12), float64], Tensor[(5, ?, 2), float64], Tensor[(10), float64], Tensor[(90), float32]) */;
  %938 = %932.0;
  %939 = %937.3;
  (%938, %939, meta[relay.Constant][59] /* ty=Tensor[(540), float64] */, %var_4100)
}

def @func_6910() -> Tensor[(8, 9, 10), float32] {
  %940 = cast(meta[relay.Constant][60] /* ty=Tensor[(8, 9, 10), float32] */, dtype="float32") /* ty=Tensor[(8, 9, 10), float32] */;
  log(%940) /* ty=Tensor[(8, 9, 10), float32] */
}

def @func_3759() -> (Tensor[(792), float32],) {
  %941 = @func_3080() /* ty=Tensor[(792), float32] */;
  (%941,)
}

def @func_4960(%var_4938: Tensor[(9, 6, 6), uint16]) -> (Tensor[(9, 6, 6), float32], Tensor[(9, 6, 6), float64], Tensor[(9, 3, 16), float32], Tensor[(432), float64]) {
  %942 = cast(%var_4938, dtype="uint16") /* ty=Tensor[(9, 6, 6), uint16] */;
  %943 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(9, 6, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %944 = cast(meta[relay.Constant][61] /* ty=Tensor[(9, 6, 6), uint16] */, dtype="uint16") /* ty=Tensor[(9, 6, 6), uint16] */;
  %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %946 = bitwise_or(%944, %945) /* ty=Tensor[(9, 6, 6), uint16] */;
  %947 = cast(%946, dtype="float32") /* ty=Tensor[(9, 6, 6), float32] */;
  %948 = cast(%946, dtype="float64") /* ty=Tensor[(9, 6, 6), float64] */;
  %949 = shape_of(%var_4938, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(%var_4938, dtype="float64") /* ty=Tensor[(9, 6, 6), float64] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %952 = cast(meta[relay.Constant][62] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %953 = reshape(%952, newshape=[9, 3, 16]) /* ty=Tensor[(9, 3, 16), float64] */;
  %954 = @func_659(%953) /* ty=(Tensor[(9, 3, 16), float32], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %955 = log(%947) /* ty=Tensor[(9, 6, 6), float32] */;
  %956 = floor_divide(%950, %951) /* ty=Tensor[(9, 6, 6), float64] */;
  %957 = %954.0;
  (%955, %956, %957, meta[relay.Constant][62] /* ty=Tensor[(432), float64] */)
}

def @func_5445(%var_5371: int64, %var_5407: Tensor[(300), float64]) -> (Tensor[(792), float32], Tensor[(792), float32], Tensor[(6, 2, 10), float64], Tensor[(120), float64], Tensor[(5, 14, 2), float32], Tensor[(300), float64], Tensor[(5, 1, 2), float64], Tensor[(6, 10, 5), bool], Tensor[(792), float32]) {
  %958 = cast(%var_5371, dtype="int64") /* ty=int64 */;
  %959 = reshape(%958, newshape=[]) /* ty=int64 */;
  %960 = @func_4610(%959) /* ty=(Tensor[(6, 2, 12), int64], Tensor[(792), float32]) */;
  %961 = @func_3080() /* ty=Tensor[(792), float32] */;
  %962 = cast(%var_5371, dtype="float32") /* ty=float32 */;
  %963 = cast(%961, dtype="float32") /* ty=Tensor[(792), float32] */;
  %964 = cast(meta[relay.Constant][63] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %965 = reshape(%964, newshape=[6, 2, 10]) /* ty=Tensor[(6, 2, 10), float64] */;
  %966 = @func_3343(%965) /* ty=(Tensor[(6, 2, 10), float64],) */;
  %967 = cast(%var_5407, dtype="float64") /* ty=Tensor[(300), float64] */;
  %968 = reshape(%967, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %969 = @func_3546(%968) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(6, 10, 5), bool], Tensor[(300), float64], Tensor[(3, 3, 6), uint8], Tensor[(54), uint8], Tensor[(140), float64], Tensor[(5, 14, 2), float32]) */;
  %970 = cast(%var_5407, dtype="float64") /* ty=Tensor[(300), float64] */;
  %971 = reshape(%970, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %972 = @func_4082(%971) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(300), float64]) */;
  %973 = cast(%var_5407, dtype="float64") /* ty=Tensor[(300), float64] */;
  %974 = reshape(%973, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), float64] */;
  %975 = @func_2001(%974) /* ty=(Tensor[(6, 10, 5), bool], Tensor[(5, 5, 11), bool], Tensor[(55, 5), uint8]) */;
  %976 = @func_3054() /* ty=(Tensor[(792), float32],) */;
  %977 = %960.1;
  %978 = floor_mod(%962, %963) /* ty=Tensor[(792), float32] */;
  %979 = %966.0;
  %980 = %969.6;
  %981 = %972.1;
  %982 = %975.0;
  %983 = %976.0;
  (%977, %978, %979, meta[relay.Constant][63] /* ty=Tensor[(120), float64] */, %980, %var_5407, %981, %982, %983)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7273() -> Tensor[(5, 1, 2), float32] {
  @func_6351() /* ty=Tensor[(5, 1, 2), float32] */
}

def @func_3195(%var_3179: Tensor[(90), float32]) -> (Tensor[(5, 1, 2), float32], uint32, Tensor[(90), float32]) {
  %0 = @func_2332() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float32") /* ty=Tensor[(5, 1, 2), float32] */;
  %3 = cast(%1, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %4 = cast(%var_3179, dtype="float32") /* ty=Tensor[(90), float32] */;
  %5 = reshape(%3, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
  %6 = reshape(%4, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %7 = @func_2483(%5, %6) /* ty=(Tensor[(5, ?, 2), float64], Tensor[(792), float32], Tensor[(90), float32], uint32) */;
  %8 = exp(%2) /* ty=Tensor[(5, 1, 2), float32] */;
  %9 = %7.3;
  (%8, %9, %var_3179)
}

def @func_6202() -> Tensor[(90), float32] {
  @func_5859() /* ty=Tensor[(90), float32] */
}

def @func_5983() -> (Tensor[(5, 1, 2), float64],) {
  %12 = fn () -> (Tensor[(5, 1, 2), float64],) {
    %10 = @func_3394() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %11 = %10.0;
    (%11,)
  };
  %12() /* ty=(Tensor[(5, 1, 2), float64],) */
}

def @func_5637(%var_5635: Tensor[(12, 1), float64]) -> (Tensor[(275), uint8], Tensor[(6, 1, 2), float64], Tensor[(12, 1), float64]) {
  @func_5634(%var_5635) /* ty=(Tensor[(275), uint8], Tensor[(6, 1, 2), float64], Tensor[(12, 1), float64]) */
}

def @func_328(%var_327: Tensor[(11, 9, 8), float32]) -> (Tensor[(11, 9, 8), float32],) {
  %15 = fn (%var_272: Tensor[(11, 9, 8), float32]) -> (Tensor[(11, 9, 8), float32],) {
    %13 = cast(%var_272, dtype="float32") /* ty=Tensor[(11, 9, 8), float32] */;
    %14 = acos(%13) /* ty=Tensor[(11, 9, 8), float32] */;
    (%14,)
  };
  %15(%var_327) /* ty=(Tensor[(11, 9, 8), float32],) */
}

def @func_4148(%var_4146: Tensor[(90), float32]) -> (Tensor[(792), float32], Tensor[(90), float32], Tensor[(540), float64], Tensor[(90), float32]) {
  @func_4145(%var_4146) /* ty=(Tensor[(792), float32], Tensor[(90), float32], Tensor[(540), float64], Tensor[(90), float32]) */
}

def @func_7142(%var_7140: uint16, %var_7141: Tensor[(15, 12, 2), uint16]) -> (Tensor[(15, 12, 2), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32]) {
  %23 = fn (%var_7121: uint16, %var_7122: Tensor[(15, 12, 2), uint16]) -> (Tensor[(15, 12, 2), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32]) {
    %16 = cast(%var_7121, dtype="bool") /* ty=bool */;
    %17 = cast(%var_7122, dtype="bool") /* ty=Tensor[(15, 12, 2), bool] */;
    %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
    %19 = reshape(%18, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float32] */;
    %20 = @func_326(%19) /* ty=(Tensor[(11, 9, 8), float32],) */;
    %21 = greater_equal(%16, %17) /* ty=Tensor[(15, 12, 2), bool] */;
    %22 = %20.0;
    (%21, %22, meta[relay.Constant][0] /* ty=Tensor[(792), float32] */)
  };
  %23(%var_7140, %var_7141) /* ty=(Tensor[(15, 12, 2), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32]) */
}

def @func_4927(%var_4919: Tensor[(2, 13, 9), float64]) -> Tensor[(2, 13, 9), float64] {
  %24 = cast(%var_4919, dtype="float64") /* ty=Tensor[(2, 13, 9), float64] */;
  exp(%24) /* ty=Tensor[(2, 13, 9), float64] */
}

def @func_3081() -> Tensor[(792), float32] {
  %26 = fn () -> Tensor[(792), float32] {
    %25 = @func_3006() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(90), float32]) */;
    %25.1
  };
  %26() /* ty=Tensor[(792), float32] */
}

def @func_7984(%var_7976: Tensor[(12), float64], %var_7979: uint32) -> (Tensor[(5, 1, 2), float64], Tensor[(275), uint8], Tensor[(12), float64], Tensor[(11, 9, 8), float32], uint32, Tensor[(396, 2), float32]) {
  %27 = @func_7108() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %28 = cast(%var_7976, dtype="float64") /* ty=Tensor[(12), float64] */;
  %29 = reshape(%28, newshape=[12, 1]) /* ty=Tensor[(12, 1), float64] */;
  %30 = @func_5634(%29) /* ty=(Tensor[(275), uint8], Tensor[(6, 1, 2), float64], Tensor[(12, 1), float64]) */;
  %31 = cast(%var_7979, dtype="uint32") /* ty=uint32 */;
  %32 = cast(meta[relay.Constant][1] /* ty=Tensor[(396, 2), float32] */, dtype="float32") /* ty=Tensor[(396, 2), float32] */;
  %33 = reshape(%31, newshape=[]) /* ty=uint32 */;
  %34 = reshape(%32, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %35 = @func_568(%33, %34) /* ty=(Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %36 = %27.0;
  %37 = %30.0;
  %38 = %35.1;
  (%36, %37, %var_7976, %38, %var_7979, meta[relay.Constant][1] /* ty=Tensor[(396, 2), float32] */)
}

def @func_2667(%var_2666: Tensor[(432), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(90), float32]) {
  %49 = fn (%var_2631: Tensor[(432), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(90), float32]) {
    %39 = @func_2332() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %40 = cast(%var_2631, dtype="float64") /* ty=Tensor[(432), float64] */;
    %41 = reshape(%40, newshape=[9, 3, 16]) /* ty=Tensor[(9, 3, 16), float64] */;
    %42 = @func_659(%41) /* ty=(Tensor[(9, 3, 16), float32], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
    %43 = cast(meta[relay.Constant][2] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %44 = reshape(%43, newshape=[10, 3, 3]) /* ty=Tensor[(10, 3, 3), float32] */;
    %45 = @func_826(%44) /* ty=(Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float32], uint32, Tensor[(792), float32]) */;
    %46 = %39.0;
    %47 = %42.2;
    %48 = %45.0;
    (%46, %47, %var_2631, %48, meta[relay.Constant][2] /* ty=Tensor[(90), float32] */)
  };
  %49(%var_2666) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(90), float32]) */
}

def @func_6204() -> Tensor[(90), float32] {
  @func_6202() /* ty=Tensor[(90), float32] */
}

def @func_2901(%var_2900: Tensor[(1716), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) {
  %58 = fn (%var_2884: Tensor[(1716), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) {
    %50 = @func_2570() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */;
    %51 = cast(%var_2884, dtype="float64") /* ty=Tensor[(1716), float64] */;
    %52 = reshape(%51, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
    %53 = @func_1978(%52) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */;
    %54 = %53.1;
    %55 = cast(%54, dtype="float64") /* ty=Tensor[(12, 11, 13), float64] */;
    %56 = %50.0;
    %57 = sigmoid(%55) /* ty=Tensor[(12, 11, 13), float64] */;
    (%56, %var_2884, %57)
  };
  %58(%var_2900) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */
}

def @func_8309() -> Tensor[(792), float32] {
  @func_3080() /* ty=Tensor[(792), float32] */
}

def @func_6912() -> Tensor[(8, 9, 10), float32] {
  @func_6910() /* ty=Tensor[(8, 9, 10), float32] */
}

def @func_8131() -> Tensor[(792), float32] {
  %60 = fn () -> Tensor[(792), float32] {
    %59 = @func_4789() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(792), float32], Tensor[(1716), float64], Tensor[(90), float32], Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(12, 11, 13), float64]) */;
    %59.6
  };
  %60() /* ty=Tensor[(792), float32] */
}

def @func_8311() -> Tensor[(792), float32] {
  @func_8309() /* ty=Tensor[(792), float32] */
}

def @func_5449(%var_5447: int64, %var_5448: Tensor[(300), float64]) -> (Tensor[(792), float32], Tensor[(792), float32], Tensor[(6, 2, 10), float64], Tensor[(120), float64], Tensor[(5, 14, 2), float32], Tensor[(300), float64], Tensor[(5, 1, 2), float64], Tensor[(6, 10, 5), bool], Tensor[(792), float32]) {
  @func_5445(%var_5447, %var_5448) /* ty=(Tensor[(792), float32], Tensor[(792), float32], Tensor[(6, 2, 10), float64], Tensor[(120), float64], Tensor[(5, 14, 2), float32], Tensor[(300), float64], Tensor[(5, 1, 2), float64], Tensor[(6, 10, 5), bool], Tensor[(792), float32]) */
}

def @func_8083(%var_8082: Tensor[(5, 9, 2), float64]) -> (Tensor[(5, 9, 2), int64], Tensor[(11, 9, 8), float32], Tensor[(432), float64]) {
  %70 = fn (%var_8067: Tensor[(5, 9, 2), float64]) -> (Tensor[(5, 9, 2), int64], Tensor[(11, 9, 8), float32], Tensor[(432), float64]) {
    %61 = @func_2570() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */;
    %62 = %61.0;
    %63 = cast(%62, dtype="int64") /* ty=Tensor[(5, 1, 2), int64] */;
    %64 = cast(%var_8067, dtype="int64") /* ty=Tensor[(5, 9, 2), int64] */;
    %65 = cast(meta[relay.Constant][3] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
    %66 = reshape(%65, newshape=[216, 2]) /* ty=Tensor[(216, 2), float64] */;
    %67 = @func_2760(%66) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(90), float32], Tensor[(10, 3, 3), float32], Tensor[(216, 2), float64], Tensor[(1716), float64], Tensor[(20), float64], Tensor[(5, ?, 2), float64], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(792), float32], Tensor[(5, 1, 2), float64]) */;
    %68 = left_shift(%63, %64) /* ty=Tensor[(5, 9, 2), int64] */;
    %69 = %67.7;
    (%68, %69, meta[relay.Constant][3] /* ty=Tensor[(432), float64] */)
  };
  %70(%var_8082) /* ty=(Tensor[(5, 9, 2), int64], Tensor[(11, 9, 8), float32], Tensor[(432), float64]) */
}

def @func_8225() -> (Tensor[(792), float32], Tensor[(5, 2, 2), uint16]) {
  %74 = fn () -> (Tensor[(792), float32], Tensor[(5, 2, 2), uint16]) {
    %71 = @func_7401() /* ty=(Tensor[(5, 5, 11), bool], Tensor[(5, 2, 2), uint16]) */;
    %72 = @func_3080() /* ty=Tensor[(792), float32] */;
    %73 = %71.1;
    (%72, %73)
  };
  %74() /* ty=(Tensor[(792), float32], Tensor[(5, 2, 2), uint16]) */
}

def @func_1799(%var_1798: Tensor[(6, 1, 2), float64]) -> Tensor[(6, 1, 2), float64] {
  %76 = fn (%var_1785: Tensor[(6, 1, 2), float64]) -> Tensor[(6, 1, 2), float64] {
    %75 = cast(%var_1785, dtype="float64") /* ty=Tensor[(6, 1, 2), float64] */;
    exp(%75) /* ty=Tensor[(6, 1, 2), float64] */
  };
  %76(%var_1798) /* ty=Tensor[(6, 1, 2), float64] */
}

def @func_3232(%var_3230: Tensor[(5, 14, 2), float64]) -> Tensor[(5, 14, 2), bool] {
  @func_3229(%var_3230) /* ty=Tensor[(5, 14, 2), bool] */
}

def @func_2356() -> Tensor[(5, 1, 2), float64] {
  @func_1888() /* ty=Tensor[(5, 1, 2), float64] */
}

def @func_3054() -> (Tensor[(792), float32],) {
  %77 = @func_3006() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(90), float32]) */;
  %78 = %77.1;
  (%78,)
}

def @func_7790(%var_7769: Tensor[(13, 11, 7), int32], %var_7770: Tensor[(13, 11, 7), int32]) -> (Tensor[(13, 11, 7), bool], Tensor[(5, 1, 2), float32]) {
  %79 = cast(%var_7770, dtype="bool") /* ty=Tensor[(13, 11, 7), bool] */;
  %80 = shape_of(%var_7769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%var_7769, dtype="bool") /* ty=Tensor[(13, 11, 7), bool] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %83 = not_equal(%81, %82) /* ty=Tensor[(13, 11, 7), bool] */;
  %84 = @func_7273() /* ty=Tensor[(5, 1, 2), float32] */;
  (%83, %84)
}

def @func_6398() -> (Tensor[(5, 1, 2), float64],) {
  @func_6396() /* ty=(Tensor[(5, 1, 2), float64],) */
}

def @func_2003(%var_2002: Tensor[(6, 10, 5), float64]) -> (Tensor[(6, 10, 5), bool], Tensor[(5, 5, 11), bool], Tensor[(55, 5), uint8]) {
  %102 = fn (%var_1982: Tensor[(6, 10, 5), float64]) -> (Tensor[(6, 10, 5), bool], Tensor[(5, 5, 11), bool], Tensor[(55, 5), uint8]) {
    %85 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 10, 5), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 5), float64] */;
    %86 = log10(%85) /* ty=Tensor[(6, 10, 5), float64] */;
    %87 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 10, 5), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 5), float64] */;
    %88 = shape_of(%var_1982, dtype="int32") /* ty=Tensor[(3), int32] */;
    %89 = cast(%var_1982, dtype="float64") /* ty=Tensor[(6, 10, 5), float64] */;
    %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %91 = mod(%89, %90) /* ty=Tensor[(6, 10, 5), float64] */;
    %92 = cast(%91, dtype="bool") /* ty=Tensor[(6, 10, 5), bool] */;
    %93 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
    %94 = cast(%86, dtype="bool") /* ty=Tensor[(6, 10, 5), bool] */;
    %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %96 = cast(meta[relay.Constant][5] /* ty=Tensor[(55, 5), uint8] */, dtype="uint8") /* ty=Tensor[(55, 5), uint8] */;
    %97 = cast(meta[relay.Constant][5] /* ty=Tensor[(55, 5), uint8] */, dtype="uint8") /* ty=Tensor[(55, 5), uint8] */;
    %98 = reshape(%96, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
    %99 = reshape(%97, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
    %100 = greater_equal(%94, %95) /* ty=Tensor[(6, 10, 5), bool] */;
    %101 = @func_1686(%98, %99) /* ty=Tensor[(5, 5, 11), bool] */;
    (%100, %101, meta[relay.Constant][5] /* ty=Tensor[(55, 5), uint8] */)
  };
  %102(%var_2002) /* ty=(Tensor[(6, 10, 5), bool], Tensor[(5, 5, 11), bool], Tensor[(55, 5), uint8]) */
}

def @func_3396() -> (Tensor[(5, 1, 2), float64],) {
  @func_3394() /* ty=(Tensor[(5, 1, 2), float64],) */
}

def @func_5861() -> Tensor[(90), float32] {
  @func_5859() /* ty=Tensor[(90), float32] */
}

def @func_4890(%var_4880: Tensor[(9, 3, 4), int8], %var_4881: Tensor[(9, 3, 4), int8]) -> (Tensor[(9, 3, 4), bool],) {
  %103 = cast(%var_4881, dtype="bool") /* ty=Tensor[(9, 3, 4), bool] */;
  %104 = shape_of(%var_4880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%var_4880, dtype="bool") /* ty=Tensor[(9, 3, 4), bool] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %107 = not_equal(%105, %106) /* ty=Tensor[(9, 3, 4), bool] */;
  (%107,)
}

def @func_7970() -> (Tensor[(5, 1, 2), float32],) {
  @func_7968() /* ty=(Tensor[(5, 1, 2), float32],) */
}

def @func_6396() -> (Tensor[(5, 1, 2), float64],) {
  %108 = @func_5013() /* ty=Tensor[(5, 1, 2), float64] */;
  (%108,)
}

def @func_3696() -> (Tensor[(5, 1, 2), float64],) {
  %111 = fn () -> (Tensor[(5, 1, 2), float64],) {
    %109 = @func_3125() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %110 = %109.0;
    (%110,)
  };
  %111() /* ty=(Tensor[(5, 1, 2), float64],) */
}

def @func_6152(%var_6113: uint32) -> (Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(5, 1, 2), float64], Tensor[(1456), float32], uint32, Tensor[(90), float32], Tensor[(90), float32], Tensor[(90), float32], Tensor[(5, 1, 2), float64]) {
  %112 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %113 = @func_4789() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(792), float32], Tensor[(1716), float64], Tensor[(90), float32], Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(12, 11, 13), float64]) */;
  %114 = @func_3585() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64]) */;
  %115 = cast(%var_6113, dtype="uint32") /* ty=uint32 */;
  %116 = reshape(%115, newshape=[]) /* ty=uint32 */;
  %117 = @func_3920(%116) /* ty=(Tensor[(5, 1, 2), float64], uint32, Tensor[(1456), float32], uint32) */;
  %118 = @func_6075() /* ty=(Tensor[(90), float32],) */;
  %119 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %120 = %112.0;
  %121 = %113.6;
  %122 = %114.3;
  %123 = %117.2;
  %124 = @func_6052() /* ty=Tensor[(90), float32] */;
  %125 = @func_6052() /* ty=Tensor[(90), float32] */;
  %126 = %118.0;
  %127 = %119.0;
  (%120, %121, %122, %123, %var_6113, %124, %125, %126, %127)
}

def @func_6615(%var_6584: Tensor[(12), int64], %var_6606: uint32) -> (Tensor[(12, 5, 5), float64], Tensor[(2880), uint32], Tensor[(12), int64], Tensor[(192), int64], Tensor[(5, 1, 2), float64], uint32) {
  %128 = @func_3485() /* ty=(Tensor[(12, 5, 5), float32],) */;
  %129 = %128.0;
  %130 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 5, 5), float32] */, dtype="float64") /* ty=Tensor[(12, 5, 5), float64] */;
  %131 = shape_of(%129, dtype="int32") /* ty=Tensor[(3), int32] */;
  %132 = cast(%129, dtype="float64") /* ty=Tensor[(12, 5, 5), float64] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %134 = cast(%var_6584, dtype="int64") /* ty=Tensor[(12), int64] */;
  %135 = cast(meta[relay.Constant][7] /* ty=Tensor[(192), int64] */, dtype="int64") /* ty=Tensor[(192), int64] */;
  %136 = cast(%129, dtype="float64") /* ty=Tensor[(12, 5, 5), float64] */;
  %137 = reshape(%134, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), int64] */;
  %138 = reshape(%135, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), int64] */;
  %139 = reshape(%136, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %140 = @func_6514(%137, %138, %139) /* ty=(Tensor[(16, 3, 4), int64], Tensor[(5, 1, 2), float64], Tensor[(300), float64], Tensor[(16, 15, 12), bool], Tensor[(2880), uint32], Tensor[(16, 3, 4), float32]) */;
  %141 = cast(%var_6606, dtype="uint32") /* ty=uint32 */;
  %142 = reshape(%141, newshape=[]) /* ty=uint32 */;
  %143 = @func_6152(%142) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(5, 1, 2), float64], Tensor[(1456), float32], uint32, Tensor[(90), float32], Tensor[(90), float32], Tensor[(90), float32], Tensor[(5, 1, 2), float64]) */;
  %144 = power(%132, %133) /* ty=Tensor[(12, 5, 5), float64] */;
  %145 = %140.4;
  %146 = %143.0;
  (%144, %145, %var_6584, meta[relay.Constant][7] /* ty=Tensor[(192), int64] */, %146, %var_6606)
}

def @func_6811() -> (Tensor[(5, 1, 2), float32],) {
  @func_6809() /* ty=(Tensor[(5, 1, 2), float32],) */
}

def @func_7305(%var_7303: Tensor[(300), float64]) -> (Tensor[(90), float32], Tensor[(300), float64], Tensor[(300), float64]) {
  @func_7302(%var_7303) /* ty=(Tensor[(90), float32], Tensor[(300), float64], Tensor[(300), float64]) */
}

def @func_6054() -> Tensor[(90), float32] {
  @func_6052() /* ty=Tensor[(90), float32] */
}

def @func_2358() -> Tensor[(5, 1, 2), float64] {
  @func_2356() /* ty=Tensor[(5, 1, 2), float64] */
}

def @func_2332() -> (Tensor[(5, 1, 2), float64],) {
  %147 = @func_2222() /* ty=Tensor[(5, 1, 2), float64] */;
  (%147,)
}

def @func_3008() -> (Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(90), float32]) {
  @func_3006() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(90), float32]) */
}

def @func_5859() -> Tensor[(90), float32] {
  %148 = @func_3006() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(90), float32]) */;
  %148.2
}

def @func_2918(%var_2917: Tensor[(3, 3, 6), uint8]) -> Tensor[(3, 3, 6), uint8] {
  %153 = fn (%var_2910: Tensor[(3, 3, 6), uint8]) -> Tensor[(3, 3, 6), uint8] {
    %149 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 3, 6), uint8] */, dtype="uint8") /* ty=Tensor[(3, 3, 6), uint8] */;
    %150 = shape_of(%var_2910, dtype="int32") /* ty=Tensor[(3), int32] */;
    %151 = cast(%var_2910, dtype="uint8") /* ty=Tensor[(3, 3, 6), uint8] */;
    %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    bitwise_xor(%151, %152) /* ty=Tensor[(3, 3, 6), uint8] */
  };
  %153(%var_2917) /* ty=Tensor[(3, 3, 6), uint8] */
}

def @func_3346(%var_3344: Tensor[(6, 2, 10), float64]) -> (Tensor[(6, 2, 10), float64],) {
  @func_3343(%var_3344) /* ty=(Tensor[(6, 2, 10), float64],) */
}

def @func_6261(%var_6260: Tensor[(12, 5, 5), float32]) -> Tensor[(12, 5, 5), int64] {
  %160 = fn (%var_6253: Tensor[(12, 5, 5), float32]) -> Tensor[(12, 5, 5), int64] {
    %154 = @func_3485() /* ty=(Tensor[(12, 5, 5), float32],) */;
    %155 = %154.0;
    %156 = cast(%var_6253, dtype="int64") /* ty=Tensor[(12, 5, 5), int64] */;
    %157 = shape_of(%155, dtype="int32") /* ty=Tensor[(3), int32] */;
    %158 = cast(%155, dtype="int64") /* ty=Tensor[(12, 5, 5), int64] */;
    %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    add(%158, %159) /* ty=Tensor[(12, 5, 5), int64] */
  };
  %160(%var_6260) /* ty=Tensor[(12, 5, 5), int64] */
}

def @func_2856(%var_2854: Tensor[(432), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float64], Tensor[(792), float32]) {
  @func_2853(%var_2854) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float64], Tensor[(792), float32]) */
}

def @func_7074(%var_7072: Tensor[(286, 6), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(286, 6), float64]) {
  @func_7071(%var_7072) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(286, 6), float64]) */
}

def @func_2028() -> (Tensor[(5, 1, 2), float64],) {
  %161 = @func_1888() /* ty=Tensor[(5, 1, 2), float64] */;
  (%161,)
}

def @func_6077() -> (Tensor[(90), float32],) {
  @func_6075() /* ty=(Tensor[(90), float32],) */
}

def @func_6639() -> (Tensor[(5, 1, 2), float64],) {
  @func_6637() /* ty=(Tensor[(5, 1, 2), float64],) */
}

def @func_3487() -> (Tensor[(12, 5, 5), float32],) {
  @func_3485() /* ty=(Tensor[(12, 5, 5), float32],) */
}

def @func_6809() -> (Tensor[(5, 1, 2), float32],) {
  %162 = @func_2356() /* ty=Tensor[(5, 1, 2), float64] */;
  %163 = cast(%162, dtype="float32") /* ty=Tensor[(5, 1, 2), float32] */;
  %164 = sin(%163) /* ty=Tensor[(5, 1, 2), float32] */;
  (%164,)
}

def @func_2030() -> (Tensor[(5, 1, 2), float64],) {
  @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */
}

def @func_6075() -> (Tensor[(90), float32],) {
  %165 = @func_4789() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(792), float32], Tensor[(1716), float64], Tensor[(90), float32], Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(12, 11, 13), float64]) */;
  %166 = %165.5;
  (%166,)
}

def @func_3946(%var_3944: Tensor[(9, 5, 12), float64], %var_3945: Tensor[(90), float32]) -> (Tensor[(9, 5, 12), float64], Tensor[(5, ?, 2), float64], Tensor[(10), float64], Tensor[(90), float32]) {
  %175 = fn (%var_3927: Tensor[(9, 5, 12), float64], %var_3940: Tensor[(90), float32]) -> (Tensor[(9, 5, 12), float64], Tensor[(5, ?, 2), float64], Tensor[(10), float64], Tensor[(90), float32]) {
    %167 = cast(%var_3927, dtype="float64") /* ty=Tensor[(9, 5, 12), float64] */;
    %168 = cast(meta[relay.Constant][9] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
    %169 = cast(%var_3940, dtype="float32") /* ty=Tensor[(90), float32] */;
    %170 = reshape(%168, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
    %171 = reshape(%169, newshape=[90]) /* ty=Tensor[(90), float32] */;
    %172 = @func_2483(%170, %171) /* ty=(Tensor[(5, ?, 2), float64], Tensor[(792), float32], Tensor[(90), float32], uint32) */;
    %173 = sinh(%167) /* ty=Tensor[(9, 5, 12), float64] */;
    %174 = %172.0;
    (%173, %174, meta[relay.Constant][9] /* ty=Tensor[(10), float64] */, %var_3940)
  };
  %175(%var_3944, %var_3945) /* ty=(Tensor[(9, 5, 12), float64], Tensor[(5, ?, 2), float64], Tensor[(10), float64], Tensor[(90), float32]) */
}

def @func_5103(%var_5100: Tensor[(324), uint16]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, ?, 2), uint16], Tensor[(9, 6, 6), float32], Tensor[(324), uint16]) {
  %176 = @func_4535() /* ty=(Tensor[(5, ?, 2), uint16],) */;
  %177 = cast(%var_5100, dtype="uint16") /* ty=Tensor[(324), uint16] */;
  %178 = reshape(%177, newshape=[9, 6, 6]) /* ty=Tensor[(9, 6, 6), uint16] */;
  %179 = @func_4960(%178) /* ty=(Tensor[(9, 6, 6), float32], Tensor[(9, 6, 6), float64], Tensor[(9, 3, 16), float32], Tensor[(432), float64]) */;
  %180 = @func_4365() /* ty=Tensor[(5, 1, 2), float64] */;
  %181 = %176.0;
  %182 = %179.0;
  (%180, %181, %182, %var_5100)
}

def @func_1645(%var_1642: Tensor[(16, 7, 13), float32], %var_1643: Tensor[(16, 7, 13), float32], %var_1644: uint32) -> (Tensor[(16, 7, 13), bool], Tensor[(792), float32], uint32, Tensor[(792), float32], Tensor[(11, 9, 8), float32]) {
  @func_1640(%var_1642, %var_1643, %var_1644) /* ty=(Tensor[(16, 7, 13), bool], Tensor[(792), float32], uint32, Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */
}

def @func_5013() -> Tensor[(5, 1, 2), float64] {
  @func_1888() /* ty=Tensor[(5, 1, 2), float64] */
}

def @func_5634(%var_5630: Tensor[(12, 1), float64]) -> (Tensor[(275), uint8], Tensor[(6, 1, 2), float64], Tensor[(12, 1), float64]) {
  %183 = @func_2570() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */;
  %184 = cast(%var_5630, dtype="float64") /* ty=Tensor[(12, 1), float64] */;
  %185 = reshape(%184, newshape=[6, 1, 2]) /* ty=Tensor[(6, 1, 2), float64] */;
  %186 = %183.2;
  %187 = @func_1797(%185) /* ty=Tensor[(6, 1, 2), float64] */;
  (%186, %187, %var_5630)
}

def @func_7348() -> (Tensor[(5, 1, 2), float64],) {
  %188 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %189 = %188.0;
  (%189,)
}

def @func_3343(%var_3334: Tensor[(6, 2, 10), float64]) -> (Tensor[(6, 2, 10), float64],) {
  %190 = cast(%var_3334, dtype="float64") /* ty=Tensor[(6, 2, 10), float64] */;
  %191 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(6, 2, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 2, 10), float64] */, dtype="float64") /* ty=Tensor[(6, 2, 10), float64] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %194 = power(%192, %193) /* ty=Tensor[(6, 2, 10), float64] */;
  (%194,)
}

def @func_7892(%var_7891: Tensor[(432), float64]) -> (Tensor[(5, 5, 11), bool], Tensor[(300), float64], Tensor[(1344), bool], Tensor[(432), float64], Tensor[(5, 5, 11), bool], Tensor[(5, 1, 2), float64], Tensor[(15, 12, 2), bool], uint16, Tensor[(36, 10), uint16]) {
  %215 = fn (%var_7868: Tensor[(432), float64]) -> (Tensor[(5, 5, 11), bool], Tensor[(300), float64], Tensor[(1344), bool], Tensor[(432), float64], Tensor[(5, 5, 11), bool], Tensor[(5, 1, 2), float64], Tensor[(15, 12, 2), bool], uint16, Tensor[(36, 10), uint16]) {
    %195 = @func_2570() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */;
    %196 = cast(meta[relay.Constant][11] /* ty=Tensor[(1344), bool] */, dtype="bool") /* ty=Tensor[(1344), bool] */;
    %197 = cast(meta[relay.Constant][11] /* ty=Tensor[(1344), bool] */, dtype="bool") /* ty=Tensor[(1344), bool] */;
    %198 = cast(%var_7868, dtype="float64") /* ty=Tensor[(432), float64] */;
    %199 = reshape(%196, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), bool] */;
    %200 = reshape(%197, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), bool] */;
    %201 = reshape(%198, newshape=[432]) /* ty=Tensor[(432), float64] */;
    %202 = @func_4482(%199, %200, %201) /* ty=(Tensor[(300), float64], Tensor[(300, 1), float64], Tensor[(12, 14, 8), float32], Tensor[(12, 14, 8), int16], Tensor[(10, 3, 3), float32], Tensor[(432), float64]) */;
    %203 = @func_2570() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */;
    %204 = @func_5190() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(792), float32]) */;
    %205 = cast(meta[relay.Constant][12] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %206 = cast(meta[relay.Constant][13] /* ty=Tensor[(36, 10), uint16] */, dtype="uint16") /* ty=Tensor[(36, 10), uint16] */;
    %207 = reshape(%205, newshape=[]) /* ty=uint16 */;
    %208 = reshape(%206, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint16] */;
    %209 = @func_7139(%207, %208) /* ty=(Tensor[(15, 12, 2), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32]) */;
    %210 = %195.1;
    %211 = %202.0;
    %212 = %203.1;
    %213 = %204.0;
    %214 = %209.0;
    (%210, %211, meta[relay.Constant][11] /* ty=Tensor[(1344), bool] */, %var_7868, %212, %213, %214, meta[relay.Constant][12] /* ty=uint16 */, meta[relay.Constant][13] /* ty=Tensor[(36, 10), uint16] */)
  };
  %215(%var_7891) /* ty=(Tensor[(5, 5, 11), bool], Tensor[(300), float64], Tensor[(1344), bool], Tensor[(432), float64], Tensor[(5, 5, 11), bool], Tensor[(5, 1, 2), float64], Tensor[(15, 12, 2), bool], uint16, Tensor[(36, 10), uint16]) */
}

def @func_6910() -> Tensor[(8, 9, 10), float32] {
  %216 = cast(meta[relay.Constant][14] /* ty=Tensor[(8, 9, 10), float32] */, dtype="float32") /* ty=Tensor[(8, 9, 10), float32] */;
  log(%216) /* ty=Tensor[(8, 9, 10), float32] */
}

def @func_3229(%var_3209: Tensor[(5, 14, 2), float64]) -> Tensor[(5, 14, 2), bool] {
  %217 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %218 = %217.0;
  %219 = cast(%218, dtype="bool") /* ty=Tensor[(5, 1, 2), bool] */;
  %220 = cast(%var_3209, dtype="bool") /* ty=Tensor[(5, 14, 2), bool] */;
  greater(%219, %220) /* ty=Tensor[(5, 14, 2), bool] */
}

def @func_5125() -> (Tensor[(5, 2, 2), uint16],) {
  %223 = fn () -> (Tensor[(5, 2, 2), uint16],) {
    %221 = @func_4588() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(275), uint8], Tensor[(5, 1, 2), float64], Tensor[(5, 2, 2), uint16], Tensor[(10, 2), float64]) */;
    %222 = %221.3;
    (%222,)
  };
  %223() /* ty=(Tensor[(5, 2, 2), uint16],) */
}

def @func_3920(%var_3913: uint32) -> (Tensor[(5, 1, 2), float64], uint32, Tensor[(1456), float32], uint32) {
  %224 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %225 = cast(meta[relay.Constant][15] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %226 = cast(meta[relay.Constant][15] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %227 = cast(%var_3913, dtype="uint32") /* ty=uint32 */;
  %228 = reshape(%225, newshape=[16, 7, 13]) /* ty=Tensor[(16, 7, 13), float32] */;
  %229 = reshape(%226, newshape=[16, 7, 13]) /* ty=Tensor[(16, 7, 13), float32] */;
  %230 = reshape(%227, newshape=[]) /* ty=uint32 */;
  %231 = @func_1640(%228, %229, %230) /* ty=(Tensor[(16, 7, 13), bool], Tensor[(792), float32], uint32, Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %232 = %224.0;
  %233 = %231.2;
  (%232, %233, meta[relay.Constant][15] /* ty=Tensor[(1456), float32] */, %var_3913)
}

def @main(%var_8392: Tensor[(90), float32]) -> (Tensor[(90), bool],) {
  %234 = @func_6052() /* ty=Tensor[(90), float32] */;
  %235 = cast(%var_8392, dtype="bool") /* ty=Tensor[(90), bool] */;
  %236 = shape_of(%234, dtype="int32") /* ty=Tensor[(1), int32] */;
  %237 = cast(%234, dtype="bool") /* ty=Tensor[(90), bool] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?), bool] */;
  %239 = less(%237, %238) /* ty=Tensor[(90), bool] */;
  (%239,)
}

def @func_661(%var_660: Tensor[(9, 3, 16), float64]) -> (Tensor[(9, 3, 16), float32], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) {
  %255 = fn (%var_614: Tensor[(9, 3, 16), float64]) -> (Tensor[(9, 3, 16), float32], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) {
    %240 = cast(-8.82648f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %241 = cast(%var_614, dtype="float64") /* ty=Tensor[(9, 3, 16), float64] */;
    %242 = minimum(%240, %241) /* ty=Tensor[(9, 3, 16), float64] */;
    %243 = cast(%242, dtype="float32") /* ty=Tensor[(9, 3, 16), float32] */;
    %244 = cast(meta[relay.Constant][16] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
    %245 = reshape(%244, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float32] */;
    %246 = @func_326(%245) /* ty=(Tensor[(11, 9, 8), float32],) */;
    %247 = cast(-8.82648f64 /* ty=float64 */, dtype="uint32") /* ty=uint32 */;
    %248 = cast(meta[relay.Constant][16] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
    %249 = reshape(%247, newshape=[]) /* ty=uint32 */;
    %250 = reshape(%248, newshape=[792]) /* ty=Tensor[(792), float32] */;
    %251 = @func_568(%249, %250) /* ty=(Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
    %252 = log(%243) /* ty=Tensor[(9, 3, 16), float32] */;
    %253 = %246.0;
    %254 = %251.3;
    (%252, %253, meta[relay.Constant][16] /* ty=Tensor[(792), float32] */, %254)
  };
  %255(%var_660) /* ty=(Tensor[(9, 3, 16), float32], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */
}

def @func_3125() -> (Tensor[(5, 1, 2), float64],) {
  %256 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %257 = %256.0;
  (%257,)
}

def @func_6569(%var_6568: Tensor[(9, 10, 15), int32]) -> Tensor[(9, 10, 15), bool] {
  %262 = fn (%var_6549: Tensor[(9, 10, 15), int32]) -> Tensor[(9, 10, 15), bool] {
    %258 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 10, 15), int32] */, dtype="bool") /* ty=Tensor[(9, 10, 15), bool] */;
    %259 = shape_of(%var_6549, dtype="int32") /* ty=Tensor[(3), int32] */;
    %260 = cast(%var_6549, dtype="bool") /* ty=Tensor[(9, 10, 15), bool] */;
    %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%260, %261) /* ty=Tensor[(9, 10, 15), bool] */
  };
  %262(%var_6568) /* ty=Tensor[(9, 10, 15), bool] */
}

def @func_7109() -> (Tensor[(5, 1, 2), float64],) {
  %265 = fn () -> (Tensor[(5, 1, 2), float64],) {
    %263 = @func_6637() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %264 = %263.0;
    (%264,)
  };
  %265() /* ty=(Tensor[(5, 1, 2), float64],) */
}

def @func_5359(%var_5355: Tensor[(20), float64], %var_5356: Tensor[(54), uint8], %var_5357: uint32, %var_5358: Tensor[(1716), float32]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8], Tensor[(20), float64], Tensor[(3, 3, 6), uint8], Tensor[(54), uint8], Tensor[(90), float32], uint32, uint32, Tensor[(1716), int16]) {
  %300 = fn (%var_5298: Tensor[(20), float64], %var_5303: Tensor[(54), uint8], %var_5339: uint32, %var_5348: Tensor[(1716), float32]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8], Tensor[(20), float64], Tensor[(3, 3, 6), uint8], Tensor[(54), uint8], Tensor[(90), float32], uint32, uint32, Tensor[(1716), int16]) {
    %266 = @func_3585() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64]) */;
    %267 = cast(meta[relay.Constant][18] /* ty=Tensor[(275), uint8] */, dtype="uint8") /* ty=Tensor[(275), uint8] */;
    %268 = cast(meta[relay.Constant][18] /* ty=Tensor[(275), uint8] */, dtype="uint8") /* ty=Tensor[(275), uint8] */;
    %269 = reshape(%267, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
    %270 = reshape(%268, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
    %271 = cast(%var_5303, dtype="uint8") /* ty=Tensor[(54), uint8] */;
    %272 = reshape(%271, newshape=[3, 3, 6]) /* ty=Tensor[(3, 3, 6), uint8] */;
    %273 = @func_4789() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(792), float32], Tensor[(1716), float64], Tensor[(90), float32], Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(12, 11, 13), float64]) */;
    %274 = cast(%var_5339, dtype="uint32") /* ty=uint32 */;
    %275 = reshape(%274, newshape=[]) /* ty=uint32 */;
    %276 = @func_3920(%275) /* ty=(Tensor[(5, 1, 2), float64], uint32, Tensor[(1456), float32], uint32) */;
    %277 = %266.0;
    %278 = cast(%277, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
    %279 = cast(%var_5298, dtype="float64") /* ty=Tensor[(20), float64] */;
    %280 = reshape(%278, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
    %281 = reshape(%279, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float64] */;
    %282 = @func_2306(%280, %281) /* ty=(Tensor[(1716), float64], Tensor[(5, 2, 2), uint16], Tensor[(12, 11, 13), float32]) */;
    %283 = %282.0;
    %284 = cast(%283, dtype="float64") /* ty=Tensor[(1716), float64] */;
    %285 = log(%284) /* ty=Tensor[(1716), float64] */;
    %286 = cast(%283, dtype="float32") /* ty=Tensor[(1716), float32] */;
    %287 = shape_of(%285, dtype="int32") /* ty=Tensor[(1), int32] */;
    %288 = cast(%285, dtype="float32") /* ty=Tensor[(1716), float32] */;
    %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?), float32] */;
    %290 = divide(%288, %289) /* ty=Tensor[(1716), float32] */;
    %291 = cast(%var_5348, dtype="int16") /* ty=Tensor[(1716), int16] */;
    %292 = shape_of(%290, dtype="int32") /* ty=Tensor[(1), int32] */;
    %293 = cast(%290, dtype="int16") /* ty=Tensor[(1716), int16] */;
    %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?), int16] */;
    %295 = @func_1686(%269, %270) /* ty=Tensor[(5, 5, 11), bool] */;
    %296 = @func_2916(%272) /* ty=Tensor[(3, 3, 6), uint8] */;
    %297 = %273.4;
    %298 = %276.3;
    %299 = logical_xor(%293, %294) /* ty=Tensor[(1716), int16] */;
    (%277, %295, meta[relay.Constant][18] /* ty=Tensor[(275), uint8] */, %var_5298, %296, %var_5303, %297, %298, %var_5339, %299)
  };
  %300(%var_5355, %var_5356, %var_5357, %var_5358) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8], Tensor[(20), float64], Tensor[(3, 3, 6), uint8], Tensor[(54), uint8], Tensor[(90), float32], uint32, uint32, Tensor[(1716), int16]) */
}

def @func_572(%var_570: uint32, %var_571: Tensor[(792), float32]) -> (Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) {
  @func_568(%var_570, %var_571) /* ty=(Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */
}

def @func_3375(%var_3373: Tensor[(1, 1716), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(?, 1716), bool]) {
  @func_3372(%var_3373) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(?, 1716), bool]) */
}

def @func_7807() -> (Tensor[(90), float32],) {
  @func_7805() /* ty=(Tensor[(90), float32],) */
}

def @func_7599() -> Tensor[(5, 1, 2), float32] {
  %301 = @func_5190() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(792), float32]) */;
  %302 = %301.1;
  %303 = cast(%302, dtype="float32") /* ty=Tensor[(5, 1, 2), float32] */;
  erf(%303) /* ty=Tensor[(5, 1, 2), float32] */
}

def @func_4589() -> (Tensor[(5, 1, 2), float64], Tensor[(275), uint8], Tensor[(5, 1, 2), float64], Tensor[(5, 2, 2), uint16], Tensor[(10, 2), float64]) {
  %316 = fn () -> (Tensor[(5, 1, 2), float64], Tensor[(275), uint8], Tensor[(5, 1, 2), float64], Tensor[(5, 2, 2), uint16], Tensor[(10, 2), float64]) {
    %304 = @func_3394() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %305 = @func_2570() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */;
    %306 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %307 = %304.0;
    %308 = cast(%307, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
    %309 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 2), float64] */, dtype="float64") /* ty=Tensor[(10, 2), float64] */;
    %310 = reshape(%308, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
    %311 = reshape(%309, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float64] */;
    %312 = @func_2306(%310, %311) /* ty=(Tensor[(1716), float64], Tensor[(5, 2, 2), uint16], Tensor[(12, 11, 13), float32]) */;
    %313 = %305.2;
    %314 = %306.0;
    %315 = %312.1;
    (%307, %313, %314, %315, meta[relay.Constant][19] /* ty=Tensor[(10, 2), float64] */)
  };
  %316() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(275), uint8], Tensor[(5, 1, 2), float64], Tensor[(5, 2, 2), uint16], Tensor[(10, 2), float64]) */
}

def @func_7760() -> Tensor[(5, 1, 2), float64] {
  %318 = fn () -> Tensor[(5, 1, 2), float64] {
    %317 = @func_5982() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %317.0
  };
  %318() /* ty=Tensor[(5, 1, 2), float64] */
}

def @func_4536() -> (Tensor[(5, ?, 2), uint16],) {
  %328 = fn () -> (Tensor[(5, ?, 2), uint16],) {
    %319 = @func_2332() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %320 = %319.0;
    %321 = cast(%320, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
    %322 = asinh(%321) /* ty=Tensor[(5, 1, 2), float64] */;
    %323 = cast(%320, dtype="uint16") /* ty=Tensor[(5, 1, 2), uint16] */;
    %324 = shape_of(%322, dtype="int32") /* ty=Tensor[(3), int32] */;
    %325 = cast(%322, dtype="uint16") /* ty=Tensor[(5, 1, 2), uint16] */;
    %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %327 = bitwise_and(%325, %326) /* ty=Tensor[(5, ?, 2), uint16] */;
    (%327,)
  };
  %328() /* ty=(Tensor[(5, ?, 2), uint16],) */
}

def @func_829(%var_827: Tensor[(10, 3, 3), float32]) -> (Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float32], uint32, Tensor[(792), float32]) {
  @func_826(%var_827) /* ty=(Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float32], uint32, Tensor[(792), float32]) */
}

def @func_5106(%var_5104: Tensor[(324), uint16]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, ?, 2), uint16], Tensor[(9, 6, 6), float32], Tensor[(324), uint16]) {
  @func_5103(%var_5104) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, ?, 2), uint16], Tensor[(9, 6, 6), float32], Tensor[(324), uint16]) */
}

def @func_5922() -> (Tensor[(5, 1, 2), float64],) {
  %330 = fn () -> (Tensor[(5, 1, 2), float64],) {
    %329 = @func_2222() /* ty=Tensor[(5, 1, 2), float64] */;
    (%329,)
  };
  %330() /* ty=(Tensor[(5, 1, 2), float64],) */
}

def @func_4613(%var_4611: int64) -> (Tensor[(6, 2, 12), int64], Tensor[(792), float32]) {
  @func_4610(%var_4611) /* ty=(Tensor[(6, 2, 12), int64], Tensor[(792), float32]) */
}

def @func_6871() -> (Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(90), float32], Tensor[(12, 2, 4), bool]) {
  %344 = fn () -> (Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(90), float32], Tensor[(12, 2, 4), bool]) {
    %331 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %332 = reshape(%331, newshape=[]) /* ty=int64 */;
    %333 = @func_4610(%332) /* ty=(Tensor[(6, 2, 12), int64], Tensor[(792), float32]) */;
    %334 = @func_6075() /* ty=(Tensor[(90), float32],) */;
    %335 = cast(8 /* ty=int64 */, dtype="uint32") /* ty=uint32 */;
    %336 = %333.1;
    %337 = cast(%336, dtype="float32") /* ty=Tensor[(792), float32] */;
    %338 = reshape(%335, newshape=[]) /* ty=uint32 */;
    %339 = reshape(%337, newshape=[792]) /* ty=Tensor[(792), float32] */;
    %340 = @func_568(%338, %339) /* ty=(Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
    %341 = @func_6202() /* ty=Tensor[(90), float32] */;
    %342 = %334.0;
    %343 = %340.0;
    (%341, %336, 8 /* ty=int64 */, %342, %343)
  };
  %344() /* ty=(Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(90), float32], Tensor[(12, 2, 4), bool]) */
}

def @func_1439(%var_1438: Tensor[(12, 11, 13), float64]) -> Tensor[(12, 11, 13), float64] {
  %346 = fn (%var_1431: Tensor[(12, 11, 13), float64]) -> Tensor[(12, 11, 13), float64] {
    %345 = cast(%var_1431, dtype="float64") /* ty=Tensor[(12, 11, 13), float64] */;
    erf(%345) /* ty=Tensor[(12, 11, 13), float64] */
  };
  %346(%var_1438) /* ty=Tensor[(12, 11, 13), float64] */
}

def @func_4082(%var_4068: Tensor[(300), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(300), float64]) {
  %347 = @func_3695() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %348 = cast(%var_4068, dtype="float64") /* ty=Tensor[(300), float64] */;
  %349 = reshape(%348, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %350 = @func_3546(%349) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(6, 10, 5), bool], Tensor[(300), float64], Tensor[(3, 3, 6), uint8], Tensor[(54), uint8], Tensor[(140), float64], Tensor[(5, 14, 2), float32]) */;
  %351 = %347.0;
  %352 = %350.0;
  (%351, %352, %var_4068)
}

def @func_2762(%var_2761: Tensor[(216, 2), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(90), float32], Tensor[(10, 3, 3), float32], Tensor[(216, 2), float64], Tensor[(1716), float64], Tensor[(20), float64], Tensor[(5, ?, 2), float64], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(792), float32], Tensor[(5, 1, 2), float64]) {
  %396 = fn (%var_2706: Tensor[(216, 2), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(90), float32], Tensor[(10, 3, 3), float32], Tensor[(216, 2), float64], Tensor[(1716), float64], Tensor[(20), float64], Tensor[(5, ?, 2), float64], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(792), float32], Tensor[(5, 1, 2), float64]) {
    %353 = cast(%var_2706, dtype="float64") /* ty=Tensor[(216, 2), float64] */;
    %354 = reshape(%353, newshape=[432]) /* ty=Tensor[(432), float64] */;
    %355 = @func_2665(%354) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(90), float32]) */;
    %356 = @func_1888() /* ty=Tensor[(5, 1, 2), float64] */;
    %357 = cast(%356, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
    %358 = cast(meta[relay.Constant][21] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
    %359 = reshape(%357, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
    %360 = reshape(%358, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float64] */;
    %361 = @func_2306(%359, %360) /* ty=(Tensor[(1716), float64], Tensor[(5, 2, 2), uint16], Tensor[(12, 11, 13), float32]) */;
    %362 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %363 = %362.0;
    %364 = cast(%363, dtype="float32") /* ty=Tensor[(5, 1, 2), float32] */;
    %365 = sigmoid(%364) /* ty=Tensor[(5, 1, 2), float32] */;
    %366 = cast(%363, dtype="uint16") /* ty=Tensor[(5, 1, 2), uint16] */;
    %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(3), int32] */;
    %368 = cast(%365, dtype="uint16") /* ty=Tensor[(5, 1, 2), uint16] */;
    %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %370 = subtract(%368, %369) /* ty=Tensor[(5, ?, 2), uint16] */;
    %371 = cast(%356, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
    %372 = cast(meta[relay.Constant][20] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %373 = reshape(%371, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
    %374 = reshape(%372, newshape=[90]) /* ty=Tensor[(90), float32] */;
    %375 = @func_2483(%373, %374) /* ty=(Tensor[(5, ?, 2), float64], Tensor[(792), float32], Tensor[(90), float32], uint32) */;
    %376 = %375.3;
    %377 = cast(%370, dtype="int16") /* ty=Tensor[(5, ?, 2), int16] */;
    %378 = cast(%376, dtype="int16") /* ty=int16 */;
    %379 = multiply(%377, %378) /* ty=Tensor[(5, ?, 2), int16] */;
    %380 = cast(%379, dtype="float64") /* ty=Tensor[(5, ?, 2), float64] */;
    %381 = cast(%376, dtype="uint32") /* ty=uint32 */;
    %382 = cast(meta[relay.Constant][22] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
    %383 = reshape(%381, newshape=[]) /* ty=uint32 */;
    %384 = reshape(%382, newshape=[792]) /* ty=Tensor[(792), float32] */;
    %385 = @func_568(%383, %384) /* ty=(Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
    %386 = %355.3;
    %387 = cast(%386, dtype="float32") /* ty=Tensor[(10, 3, 3), float32] */;
    %388 = reshape(%387, newshape=[10, 3, 3]) /* ty=Tensor[(10, 3, 3), float32] */;
    %389 = @func_826(%388) /* ty=(Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float32], uint32, Tensor[(792), float32]) */;
    %390 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %391 = %361.0;
    %392 = rsqrt(%380) /* ty=Tensor[(5, ?, 2), float64] */;
    %393 = %385.1;
    %394 = %389.3;
    %395 = %390.0;
    (%356, meta[relay.Constant][20] /* ty=Tensor[(90), float32] */, %386, %var_2706, %391, meta[relay.Constant][21] /* ty=Tensor[(20), float64] */, %392, %393, meta[relay.Constant][22] /* ty=Tensor[(792), float32] */, %394, %395)
  };
  %396(%var_2761) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(90), float32], Tensor[(10, 3, 3), float32], Tensor[(216, 2), float64], Tensor[(1716), float64], Tensor[(20), float64], Tensor[(5, ?, 2), float64], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(792), float32], Tensor[(5, 1, 2), float64]) */
}

def @func_6052() -> Tensor[(90), float32] {
  %397 = @func_3006() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(90), float32]) */;
  %397.2
}

def @func_5971(%var_5969: Tensor[(16, 15, 12), uint32], %var_5970: Tensor[(16, 15, 12), uint32]) -> (Tensor[(16, 15, 12), bool], Tensor[(792), float32]) {
  @func_5967(%var_5969, %var_5970) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(792), float32]) */
}

def @func_4711(%var_4627: Tensor[(2, 396), float32], %var_4676: Tensor[(1716), float64]) -> (uint32, Tensor[(5, 1, 2), float64], Tensor[(11, 9, 8), float32], Tensor[(2, 396), float64], Tensor[(2, 396), bool], Tensor[(5, 1, 2), float64], Tensor[(1716), float64], Tensor[(5, 1, 2), float64], Tensor[(2, 396), float64], Tensor[(2, 396), float32], Tensor[(12, 11, 13), float32], Tensor[(20), float64], Tensor[(792), float32], Tensor[(90), float32]) {
  %398 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %399 = %398.0;
  %400 = cast(%399, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %401 = cast(%var_4627, dtype="float32") /* ty=Tensor[(2, 396), float32] */;
  %402 = reshape(%401, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float32] */;
  %403 = @func_326(%402) /* ty=(Tensor[(11, 9, 8), float32],) */;
  %404 = cast(%var_4627, dtype="float32") /* ty=Tensor[(2, 396), float32] */;
  %405 = log(%404) /* ty=Tensor[(2, 396), float32] */;
  %406 = cast(meta[relay.Constant][23] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %407 = cast(%var_4627, dtype="float32") /* ty=Tensor[(2, 396), float32] */;
  %408 = reshape(%406, newshape=[]) /* ty=uint32 */;
  %409 = reshape(%407, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %410 = @func_568(%408, %409) /* ty=(Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %411 = %410.1;
  %412 = cast(%411, dtype="int8") /* ty=Tensor[(11, 9, 8), int8] */;
  %413 = shape_of(%405, dtype="int32") /* ty=Tensor[(2), int32] */;
  %414 = cast(%405, dtype="int8") /* ty=Tensor[(2, 396), int8] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %416 = logical_xor(%414, %415) /* ty=Tensor[(2, 396), int8] */;
  %417 = cast(%416, dtype="float64") /* ty=Tensor[(2, 396), float64] */;
  %418 = cast(%var_4627, dtype="bool") /* ty=Tensor[(2, 396), bool] */;
  %419 = shape_of(%416, dtype="int32") /* ty=Tensor[(2), int32] */;
  %420 = cast(%416, dtype="bool") /* ty=Tensor[(2, 396), bool] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %422 = cast(%var_4676, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %423 = reshape(%422, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %424 = @func_1978(%423) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */;
  %425 = cast(%405, dtype="float64") /* ty=Tensor[(2, 396), float64] */;
  %426 = cast(%405, dtype="float64") /* ty=Tensor[(2, 396), float64] */;
  %427 = log2(%426) /* ty=Tensor[(2, 396), float64] */;
  %428 = cast(%427, dtype="float32") /* ty=Tensor[(2, 396), float32] */;
  %429 = %424.0;
  %430 = cast(%429, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %431 = cast(meta[relay.Constant][24] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %432 = reshape(%430, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
  %433 = reshape(%431, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float64] */;
  %434 = @func_2306(%432, %433) /* ty=(Tensor[(1716), float64], Tensor[(5, 2, 2), uint16], Tensor[(12, 11, 13), float32]) */;
  %435 = cast(meta[relay.Constant][25] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %436 = reshape(%435, newshape=[10, 3, 3]) /* ty=Tensor[(10, 3, 3), float32] */;
  %437 = @func_826(%436) /* ty=(Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float32], uint32, Tensor[(792), float32]) */;
  %438 = log10(%400) /* ty=Tensor[(5, 1, 2), float64] */;
  %439 = %403.0;
  %440 = sqrt(%417) /* ty=Tensor[(2, 396), float64] */;
  %441 = equal(%420, %421) /* ty=Tensor[(2, 396), bool] */;
  %442 = @func_1888() /* ty=Tensor[(5, 1, 2), float64] */;
  %443 = sigmoid(%425) /* ty=Tensor[(2, 396), float64] */;
  %444 = tan(%428) /* ty=Tensor[(2, 396), float32] */;
  %445 = %434.2;
  %446 = %437.3;
  (meta[relay.Constant][23] /* ty=uint32 */, %438, %439, %440, %441, %429, %var_4676, %442, %443, %444, %445, meta[relay.Constant][24] /* ty=Tensor[(20), float64] */, %446, meta[relay.Constant][25] /* ty=Tensor[(90), float32] */)
}

def @func_4365() -> Tensor[(5, 1, 2), float64] {
  @func_1888() /* ty=Tensor[(5, 1, 2), float64] */
}

def @func_6352() -> Tensor[(5, 1, 2), float32] {
  %450 = fn () -> Tensor[(5, 1, 2), float32] {
    %447 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %448 = %447.0;
    %449 = cast(%448, dtype="float32") /* ty=Tensor[(5, 1, 2), float32] */;
    atan(%449) /* ty=Tensor[(5, 1, 2), float32] */
  };
  %450() /* ty=Tensor[(5, 1, 2), float32] */
}

def @func_3056() -> (Tensor[(792), float32],) {
  @func_3054() /* ty=(Tensor[(792), float32],) */
}

def @func_3785(%var_3784: Tensor[(16, 14, 15), int16]) -> Tensor[(16, 14, 15), int16] {
  %455 = fn (%var_3777: Tensor[(16, 14, 15), int16]) -> Tensor[(16, 14, 15), int16] {
    %451 = cast(meta[relay.Constant][26] /* ty=Tensor[(16, 14, 15), int16] */, dtype="int16") /* ty=Tensor[(16, 14, 15), int16] */;
    %452 = shape_of(%var_3777, dtype="int32") /* ty=Tensor[(3), int32] */;
    %453 = cast(%var_3777, dtype="int16") /* ty=Tensor[(16, 14, 15), int16] */;
    %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_xor(%453, %454) /* ty=Tensor[(16, 14, 15), int16] */
  };
  %455(%var_3784) /* ty=Tensor[(16, 14, 15), int16] */
}

def @func_2486(%var_2484: Tensor[(5, 1, 2), float64], %var_2485: Tensor[(90), float32]) -> (Tensor[(5, ?, 2), float64], Tensor[(792), float32], Tensor[(90), float32], uint32) {
  %470 = fn (%var_2452: Tensor[(5, 1, 2), float64], %var_2460: Tensor[(90), float32]) -> (Tensor[(5, ?, 2), float64], Tensor[(792), float32], Tensor[(90), float32], uint32) {
    %456 = @func_1888() /* ty=Tensor[(5, 1, 2), float64] */;
    %457 = cast(%var_2452, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
    %458 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
    %459 = cast(%456, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
    %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %461 = cast(%var_2460, dtype="float32") /* ty=Tensor[(90), float32] */;
    %462 = reshape(%461, newshape=[10, 3, 3]) /* ty=Tensor[(10, 3, 3), float32] */;
    %463 = @func_826(%462) /* ty=(Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float32], uint32, Tensor[(792), float32]) */;
    %464 = cast(%var_2460, dtype="float32") /* ty=Tensor[(90), float32] */;
    %465 = reshape(%464, newshape=[10, 3, 3]) /* ty=Tensor[(10, 3, 3), float32] */;
    %466 = @func_826(%465) /* ty=(Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float32], uint32, Tensor[(792), float32]) */;
    %467 = maximum(%459, %460) /* ty=Tensor[(5, ?, 2), float64] */;
    %468 = %463.3;
    %469 = %466.2;
    (%467, %468, %var_2460, %469)
  };
  %470(%var_2484, %var_2485) /* ty=(Tensor[(5, ?, 2), float64], Tensor[(792), float32], Tensor[(90), float32], uint32) */
}

def @func_4894(%var_4892: Tensor[(9, 3, 4), int8], %var_4893: Tensor[(9, 3, 4), int8]) -> (Tensor[(9, 3, 4), bool],) {
  @func_4890(%var_4892, %var_4893) /* ty=(Tensor[(9, 3, 4), bool],) */
}

def @func_3372(%var_3365: Tensor[(1, 1716), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(?, 1716), bool]) {
  %471 = cast(%var_3365, dtype="float64") /* ty=Tensor[(1, 1716), float64] */;
  %472 = reshape(%471, newshape=[12, 11, 13]) /* ty=Tensor[(12, 11, 13), float64] */;
  %473 = @func_1437(%472) /* ty=Tensor[(12, 11, 13), float64] */;
  %474 = cast(%473, dtype="bool") /* ty=Tensor[(12, 11, 13), bool] */;
  %475 = shape_of(%var_3365, dtype="int32") /* ty=Tensor[(2), int32] */;
  %476 = cast(%var_3365, dtype="bool") /* ty=Tensor[(1, 1716), bool] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %478 = @func_2356() /* ty=Tensor[(5, 1, 2), float64] */;
  %479 = greater(%476, %477) /* ty=Tensor[(?, 1716), bool] */;
  (%478, %479)
}

def @func_1689(%var_1687: Tensor[(5, 5, 11), uint8], %var_1688: Tensor[(5, 5, 11), uint8]) -> Tensor[(5, 5, 11), bool] {
  %484 = fn (%var_1678: Tensor[(5, 5, 11), uint8], %var_1679: Tensor[(5, 5, 11), uint8]) -> Tensor[(5, 5, 11), bool] {
    %480 = cast(%var_1679, dtype="bool") /* ty=Tensor[(5, 5, 11), bool] */;
    %481 = shape_of(%var_1678, dtype="int32") /* ty=Tensor[(3), int32] */;
    %482 = cast(%var_1678, dtype="bool") /* ty=Tensor[(5, 5, 11), bool] */;
    %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%482, %483) /* ty=Tensor[(5, 5, 11), bool] */
  };
  %484(%var_1687, %var_1688) /* ty=Tensor[(5, 5, 11), bool] */
}

def @func_5015() -> Tensor[(5, 1, 2), float64] {
  @func_5013() /* ty=Tensor[(5, 1, 2), float64] */
}

def @func_6155(%var_6153: uint32) -> (Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(5, 1, 2), float64], Tensor[(1456), float32], uint32, Tensor[(90), float32], Tensor[(90), float32], Tensor[(90), float32], Tensor[(5, 1, 2), float64]) {
  @func_6152(%var_6153) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(5, 1, 2), float64], Tensor[(1456), float32], uint32, Tensor[(90), float32], Tensor[(90), float32], Tensor[(90), float32], Tensor[(5, 1, 2), float64]) */
}

def @func_4327(%var_4324: Tensor[(15, 10, 16), float32], %var_4325: Tensor[(1716), float64], %var_4326: uint32) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(1716), float64], Tensor[(15, 10, 16), float32], Tensor[(15, 10, 16), float32], uint32, Tensor[(12, 5, 5), float32], Tensor[(6, 10, 5), bool], Tensor[(15, 10, 16), uint64]) {
  %521 = fn (%var_4164: Tensor[(15, 10, 16), float32], %var_4205: Tensor[(1716), float64], %var_4273: uint32) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(1716), float64], Tensor[(15, 10, 16), float32], Tensor[(15, 10, 16), float32], uint32, Tensor[(12, 5, 5), float32], Tensor[(6, 10, 5), bool], Tensor[(15, 10, 16), uint64]) {
    %485 = @func_3394() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %486 = cast(%var_4205, dtype="float64") /* ty=Tensor[(1716), float64] */;
    %487 = reshape(%486, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
    %488 = @func_1978(%487) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */;
    %489 = cast(%var_4164, dtype="float32") /* ty=Tensor[(15, 10, 16), float32] */;
    %490 = tan(%489) /* ty=Tensor[(15, 10, 16), float32] */;
    %491 = cast(%var_4164, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
    %492 = shape_of(%490, dtype="int32") /* ty=Tensor[(3), int32] */;
    %493 = cast(%490, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
    %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %495 = mod(%493, %494) /* ty=Tensor[(15, 10, 16), float64] */;
    %496 = cast(%var_4164, dtype="float32") /* ty=Tensor[(15, 10, 16), float32] */;
    %497 = shape_of(%495, dtype="int32") /* ty=Tensor[(3), int32] */;
    %498 = cast(%495, dtype="float32") /* ty=Tensor[(15, 10, 16), float32] */;
    %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %500 = cast(%495, dtype="float32") /* ty=Tensor[(15, 10, 16), float32] */;
    %501 = log10(%500) /* ty=Tensor[(15, 10, 16), float32] */;
    %502 = cast(%501, dtype="float32") /* ty=Tensor[(15, 10, 16), float32] */;
    %503 = cast(%var_4273, dtype="uint32") /* ty=uint32 */;
    %504 = reshape(%503, newshape=[]) /* ty=uint32 */;
    %505 = @func_3920(%504) /* ty=(Tensor[(5, 1, 2), float64], uint32, Tensor[(1456), float32], uint32) */;
    %506 = @func_3485() /* ty=(Tensor[(12, 5, 5), float32],) */;
    %507 = %506.0;
    %508 = cast(%507, dtype="float64") /* ty=Tensor[(12, 5, 5), float64] */;
    %509 = reshape(%508, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), float64] */;
    %510 = @func_2001(%509) /* ty=(Tensor[(6, 10, 5), bool], Tensor[(5, 5, 11), bool], Tensor[(55, 5), uint8]) */;
    %511 = cast(%501, dtype="uint64") /* ty=Tensor[(15, 10, 16), uint64] */;
    %512 = cast(%var_4273, dtype="uint64") /* ty=uint64 */;
    %513 = @func_2356() /* ty=Tensor[(5, 1, 2), float64] */;
    %514 = %485.0;
    %515 = %488.0;
    %516 = minimum(%498, %499) /* ty=Tensor[(15, 10, 16), float32] */;
    %517 = sinh(%502) /* ty=Tensor[(15, 10, 16), float32] */;
    %518 = %505.1;
    %519 = %510.0;
    %520 = logical_xor(%511, %512) /* ty=Tensor[(15, 10, 16), uint64] */;
    (%513, %514, %515, %var_4205, %516, %517, %518, %507, %519, %520)
  };
  %521(%var_4324, %var_4325, %var_4326) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(1716), float64], Tensor[(15, 10, 16), float32], Tensor[(15, 10, 16), float32], uint32, Tensor[(12, 5, 5), float32], Tensor[(6, 10, 5), bool], Tensor[(15, 10, 16), uint64]) */
}

def @func_7988(%var_7986: Tensor[(12), float64], %var_7987: uint32) -> (Tensor[(5, 1, 2), float64], Tensor[(275), uint8], Tensor[(12), float64], Tensor[(11, 9, 8), float32], uint32, Tensor[(396, 2), float32]) {
  @func_7984(%var_7986, %var_7987) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(275), uint8], Tensor[(12), float64], Tensor[(11, 9, 8), float32], uint32, Tensor[(396, 2), float32]) */
}

def @func_8014(%var_8012: Tensor[(5, 8, 2), float64]) -> Tensor[(5, 8, 2), int16] {
  @func_8011(%var_8012) /* ty=Tensor[(5, 8, 2), int16] */
}

def @func_3587() -> (Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64]) {
  @func_3585() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64]) */
}

def @func_7717(%var_7715: int64, %var_7716: Tensor[(1, 160), float64]) -> (Tensor[(5, 16, 2), int32], Tensor[(1, 160), float64], Tensor[(792), bool], Tensor[(792), float32], Tensor[(2880), uint32], Tensor[(12, 5, 5), bool], Tensor[(12, 1, 16), float64], Tensor[(192), float32]) {
  %555 = fn (%var_7605: int64, %var_7612: Tensor[(1, 160), float64]) -> (Tensor[(5, 16, 2), int32], Tensor[(1, 160), float64], Tensor[(792), bool], Tensor[(792), float32], Tensor[(2880), uint32], Tensor[(12, 5, 5), bool], Tensor[(12, 1, 16), float64], Tensor[(192), float32]) {
    %522 = cast(%var_7612, dtype="float64") /* ty=Tensor[(1, 160), float64] */;
    %523 = reshape(%522, newshape=[5, 16, 2]) /* ty=Tensor[(5, 16, 2), float64] */;
    %524 = @func_5588(%523) /* ty=(Tensor[(5, 16, 2), int32],) */;
    %525 = cast(%var_7605, dtype="int64") /* ty=int64 */;
    %526 = @func_3485() /* ty=(Tensor[(12, 5, 5), float32],) */;
    %527 = %526.0;
    %528 = cast(%527, dtype="float64") /* ty=Tensor[(12, 5, 5), float64] */;
    %529 = reshape(%525, newshape=[]) /* ty=int64 */;
    %530 = reshape(%528, newshape=[300]) /* ty=Tensor[(300), float64] */;
    %531 = @func_5445(%529, %530) /* ty=(Tensor[(792), float32], Tensor[(792), float32], Tensor[(6, 2, 10), float64], Tensor[(120), float64], Tensor[(5, 14, 2), float32], Tensor[(300), float64], Tensor[(5, 1, 2), float64], Tensor[(6, 10, 5), bool], Tensor[(792), float32]) */;
    %532 = %531.0;
    %533 = cast(%532, dtype="bool") /* ty=Tensor[(792), bool] */;
    %534 = cast(%var_7605, dtype="bool") /* ty=bool */;
    %535 = less(%533, %534) /* ty=Tensor[(792), bool] */;
    %536 = cast(%535, dtype="bool") /* ty=Tensor[(792), bool] */;
    %537 = shape_of(%532, dtype="int32") /* ty=Tensor[(1), int32] */;
    %538 = cast(%532, dtype="bool") /* ty=Tensor[(792), bool] */;
    %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?), bool] */;
    %540 = cast(meta[relay.Constant][27] /* ty=Tensor[(2880), uint32] */, dtype="uint32") /* ty=Tensor[(2880), uint32] */;
    %541 = cast(meta[relay.Constant][27] /* ty=Tensor[(2880), uint32] */, dtype="uint32") /* ty=Tensor[(2880), uint32] */;
    %542 = reshape(%540, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), uint32] */;
    %543 = reshape(%541, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), uint32] */;
    %544 = @func_5967(%542, %543) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(792), float32]) */;
    %545 = cast(%527, dtype="bool") /* ty=Tensor[(12, 5, 5), bool] */;
    %546 = cast(%var_7605, dtype="bool") /* ty=bool */;
    %547 = cast(meta[relay.Constant][28] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
    %548 = reshape(%547, newshape=[12, 1, 16]) /* ty=Tensor[(12, 1, 16), float32] */;
    %549 = @func_2127(%548) /* ty=(Tensor[(11, 9, 8), float32], Tensor[(90), float32], Tensor[(12, 1, 16), float64]) */;
    %550 = %524.0;
    %551 = logical_or(%538, %539) /* ty=Tensor[(792), bool] */;
    %552 = %544.1;
    %553 = greater_equal(%545, %546) /* ty=Tensor[(12, 5, 5), bool] */;
    %554 = %549.2;
    (%550, %var_7612, %551, %552, meta[relay.Constant][27] /* ty=Tensor[(2880), uint32] */, %553, %554, meta[relay.Constant][28] /* ty=Tensor[(192), float32] */)
  };
  %555(%var_7715, %var_7716) /* ty=(Tensor[(5, 16, 2), int32], Tensor[(1, 160), float64], Tensor[(792), bool], Tensor[(792), float32], Tensor[(2880), uint32], Tensor[(12, 5, 5), bool], Tensor[(12, 1, 16), float64], Tensor[(192), float32]) */
}

def @func_8011(%var_8004: Tensor[(5, 8, 2), float64]) -> Tensor[(5, 8, 2), int16] {
  %556 = @func_6637() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %557 = %556.0;
  %558 = cast(%557, dtype="int16") /* ty=Tensor[(5, 1, 2), int16] */;
  %559 = cast(%var_8004, dtype="int16") /* ty=Tensor[(5, 8, 2), int16] */;
  maximum(%558, %559) /* ty=Tensor[(5, 8, 2), int16] */
}

def @func_3198(%var_3196: Tensor[(90), float32]) -> (Tensor[(5, 1, 2), float32], uint32, Tensor[(90), float32]) {
  @func_3195(%var_3196) /* ty=(Tensor[(5, 1, 2), float32], uint32, Tensor[(90), float32]) */
}

def @func_7330() -> (Tensor[(10, 2), float64],) {
  %560 = @func_4588() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(275), uint8], Tensor[(5, 1, 2), float64], Tensor[(5, 2, 2), uint16], Tensor[(10, 2), float64]) */;
  %561 = %560.4;
  (%561,)
}

def @func_7541(%var_7540: Tensor[(336, 4), bool]) -> (Tensor[(5, 1, 2), float64], Tensor[(275), uint8], Tensor[(432), float64], Tensor[(336, 4), bool], Tensor[(432), float64], Tensor[(792), float64]) {
  %578 = fn (%var_7527: Tensor[(336, 4), bool]) -> (Tensor[(5, 1, 2), float64], Tensor[(275), uint8], Tensor[(432), float64], Tensor[(336, 4), bool], Tensor[(432), float64], Tensor[(792), float64]) {
    %562 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %563 = @func_2570() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */;
    %564 = cast(%var_7527, dtype="bool") /* ty=Tensor[(336, 4), bool] */;
    %565 = cast(%var_7527, dtype="bool") /* ty=Tensor[(336, 4), bool] */;
    %566 = cast(meta[relay.Constant][29] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
    %567 = reshape(%564, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), bool] */;
    %568 = reshape(%565, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), bool] */;
    %569 = reshape(%566, newshape=[432]) /* ty=Tensor[(432), float64] */;
    %570 = @func_4482(%567, %568, %569) /* ty=(Tensor[(300), float64], Tensor[(300, 1), float64], Tensor[(12, 14, 8), float32], Tensor[(12, 14, 8), int16], Tensor[(10, 3, 3), float32], Tensor[(432), float64]) */;
    %571 = @func_6870() /* ty=(Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(90), float32], Tensor[(12, 2, 4), bool]) */;
    %572 = %571.1;
    %573 = cast(%572, dtype="float64") /* ty=Tensor[(792), float64] */;
    %574 = %562.0;
    %575 = %563.2;
    %576 = %570.5;
    %577 = atan(%573) /* ty=Tensor[(792), float64] */;
    (%574, %575, %576, %var_7527, meta[relay.Constant][29] /* ty=Tensor[(432), float64] */, %577)
  };
  %578(%var_7540) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(275), uint8], Tensor[(432), float64], Tensor[(336, 4), bool], Tensor[(432), float64], Tensor[(792), float64]) */
}

def @func_5590(%var_5589: Tensor[(5, 16, 2), float64]) -> (Tensor[(5, 16, 2), int32],) {
  %584 = fn (%var_5553: Tensor[(5, 16, 2), float64]) -> (Tensor[(5, 16, 2), int32],) {
    %579 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %580 = %579.0;
    %581 = cast(%580, dtype="int32") /* ty=Tensor[(5, 1, 2), int32] */;
    %582 = cast(%var_5553, dtype="int32") /* ty=Tensor[(5, 16, 2), int32] */;
    %583 = bitwise_or(%581, %582) /* ty=Tensor[(5, 16, 2), int32] */;
    (%583,)
  };
  %584(%var_5589) /* ty=(Tensor[(5, 16, 2), int32],) */
}

def @func_7332() -> (Tensor[(10, 2), float64],) {
  @func_7330() /* ty=(Tensor[(10, 2), float64],) */
}

def @func_5701(%var_5679: uint32) -> (Tensor[(5, 1, 2), float64], Tensor[(1456), float32], uint32) {
  %585 = @func_5190() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(792), float32]) */;
  %586 = cast(%var_5679, dtype="uint32") /* ty=uint32 */;
  %587 = reshape(%586, newshape=[]) /* ty=uint32 */;
  %588 = @func_3920(%587) /* ty=(Tensor[(5, 1, 2), float64], uint32, Tensor[(1456), float32], uint32) */;
  %589 = %585.1;
  %590 = %588.2;
  (%589, %590, %var_5679)
}

def @func_3896(%var_3894: Tensor[(120), float64], %var_3895: Tensor[(5, 60), float64]) -> (Tensor[(5, ?, 2), bool], Tensor[(5, 5, 11), bool], Tensor[(275), uint8], Tensor[(6, 2, 10), float64], Tensor[(120), float64], Tensor[(5, 14, 2), bool], Tensor[(140, 1), float64], Tensor[(11, 156), float64], Tensor[(5, 60), float64]) {
  %614 = fn (%var_3883: Tensor[(120), float64], %var_3890: Tensor[(5, 60), float64]) -> (Tensor[(5, ?, 2), bool], Tensor[(5, 5, 11), bool], Tensor[(275), uint8], Tensor[(6, 2, 10), float64], Tensor[(120), float64], Tensor[(5, 14, 2), bool], Tensor[(140, 1), float64], Tensor[(11, 156), float64], Tensor[(5, 60), float64]) {
    %591 = @func_2356() /* ty=Tensor[(5, 1, 2), float64] */;
    %592 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 1, 2), float64] */, dtype="bool") /* ty=Tensor[(5, 1, 2), bool] */;
    %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
    %594 = cast(%591, dtype="bool") /* ty=Tensor[(5, 1, 2), bool] */;
    %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %596 = cast(meta[relay.Constant][31] /* ty=Tensor[(275), uint8] */, dtype="uint8") /* ty=Tensor[(275), uint8] */;
    %597 = cast(meta[relay.Constant][31] /* ty=Tensor[(275), uint8] */, dtype="uint8") /* ty=Tensor[(275), uint8] */;
    %598 = reshape(%596, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
    %599 = reshape(%597, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
    %600 = cast(%var_3883, dtype="float64") /* ty=Tensor[(120), float64] */;
    %601 = reshape(%600, newshape=[6, 2, 10]) /* ty=Tensor[(6, 2, 10), float64] */;
    %602 = @func_3343(%601) /* ty=(Tensor[(6, 2, 10), float64],) */;
    %603 = cast(meta[relay.Constant][32] /* ty=Tensor[(140, 1), float64] */, dtype="float64") /* ty=Tensor[(140, 1), float64] */;
    %604 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 156), float64] */, dtype="float64") /* ty=Tensor[(11, 156), float64] */;
    %605 = cast(%var_3890, dtype="float64") /* ty=Tensor[(5, 60), float64] */;
    %606 = reshape(%603, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %607 = reshape(%604, newshape=[286, 6]) /* ty=Tensor[(286, 6), float64] */;
    %608 = reshape(%605, newshape=[300]) /* ty=Tensor[(300), float64] */;
    %609 = @func_3275(%606, %607, %608) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 14, 2), bool], Tensor[(140), float64], Tensor[(5, 1, 2), float64], Tensor[(286, 6), float64], uint32, Tensor[(90), float32], Tensor[(5, 5, 11), bool], Tensor[(300), float64], Tensor[(5, 1, 2), float64]) */;
    %610 = logical_and(%594, %595) /* ty=Tensor[(5, ?, 2), bool] */;
    %611 = @func_1686(%598, %599) /* ty=Tensor[(5, 5, 11), bool] */;
    %612 = %602.0;
    %613 = %609.1;
    (%610, %611, meta[relay.Constant][31] /* ty=Tensor[(275), uint8] */, %612, %var_3883, %613, meta[relay.Constant][32] /* ty=Tensor[(140, 1), float64] */, meta[relay.Constant][33] /* ty=Tensor[(11, 156), float64] */, %var_3890)
  };
  %614(%var_3894, %var_3895) /* ty=(Tensor[(5, ?, 2), bool], Tensor[(5, 5, 11), bool], Tensor[(275), uint8], Tensor[(6, 2, 10), float64], Tensor[(120), float64], Tensor[(5, 14, 2), bool], Tensor[(140, 1), float64], Tensor[(11, 156), float64], Tensor[(5, 60), float64]) */
}

def @func_3006() -> (Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(90), float32]) {
  %615 = @func_1888() /* ty=Tensor[(5, 1, 2), float64] */;
  %616 = cast(%615, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %617 = cast(meta[relay.Constant][34] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %618 = reshape(%616, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
  %619 = reshape(%617, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %620 = @func_2483(%618, %619) /* ty=(Tensor[(5, ?, 2), float64], Tensor[(792), float32], Tensor[(90), float32], uint32) */;
  %621 = %620.1;
  (%615, %621, meta[relay.Constant][34] /* ty=Tensor[(90), float32] */)
}

def @func_1890() -> Tensor[(5, 1, 2), float64] {
  @func_1888() /* ty=Tensor[(5, 1, 2), float64] */
}

def @func_2208(%var_2207: Tensor[(1716), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) {
  %630 = fn (%var_2185: Tensor[(1716), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) {
    %622 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %623 = cast(%var_2185, dtype="float64") /* ty=Tensor[(1716), float64] */;
    %624 = reshape(%623, newshape=[12, 11, 13]) /* ty=Tensor[(12, 11, 13), float64] */;
    %625 = @func_1437(%624) /* ty=Tensor[(12, 11, 13), float64] */;
    %626 = cast(%625, dtype="float64") /* ty=Tensor[(12, 11, 13), float64] */;
    %627 = reshape(%626, newshape=[12, 11, 13]) /* ty=Tensor[(12, 11, 13), float64] */;
    %628 = %622.0;
    %629 = @func_1437(%627) /* ty=Tensor[(12, 11, 13), float64] */;
    (%628, %625, %var_2185, %629)
  };
  %630(%var_2207) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */
}

def @func_3585() -> (Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64]) {
  %631 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %632 = cast(meta[relay.Constant][35] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %633 = reshape(%632, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %634 = @func_1978(%633) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */;
  %635 = @func_3125() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %636 = %631.0;
  %637 = %634.3;
  %638 = %635.0;
  %639 = @func_2356() /* ty=Tensor[(5, 1, 2), float64] */;
  (%636, %637, meta[relay.Constant][35] /* ty=Tensor[(1716), float64] */, %638, %639)
}

def @func_7402() -> (Tensor[(5, 5, 11), bool], Tensor[(5, 2, 2), uint16]) {
  %644 = fn () -> (Tensor[(5, 5, 11), bool], Tensor[(5, 2, 2), uint16]) {
    %640 = @func_2570() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */;
    %641 = @func_5124() /* ty=(Tensor[(5, 2, 2), uint16],) */;
    %642 = %640.1;
    %643 = %641.0;
    (%642, %643)
  };
  %644() /* ty=(Tensor[(5, 5, 11), bool], Tensor[(5, 2, 2), uint16]) */
}

def @func_7275() -> Tensor[(5, 1, 2), float32] {
  @func_7273() /* ty=Tensor[(5, 1, 2), float32] */
}

def @func_5191() -> (Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(792), float32]) {
  %652 = fn () -> (Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(792), float32]) {
    %645 = @func_3695() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %646 = @func_2332() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %647 = %646.0;
    %648 = cast(%647, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
    %649 = %645.0;
    %650 = sinh(%648) /* ty=Tensor[(5, 1, 2), float64] */;
    %651 = @func_3080() /* ty=Tensor[(792), float32] */;
    (%649, %650, %651)
  };
  %652() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(792), float32]) */
}

def @func_4930(%var_4928: Tensor[(2, 13, 9), float64]) -> Tensor[(2, 13, 9), float64] {
  @func_4927(%var_4928) /* ty=Tensor[(2, 13, 9), float64] */
}

def @func_1888() -> Tensor[(5, 1, 2), float64] {
  %653 = cast(meta[relay.Constant][36] /* ty=Tensor[(5, 1, 2), float64] */, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  sqrt(%653) /* ty=Tensor[(5, 1, 2), float64] */
}

def @func_5258(%var_5257: Tensor[(1, 90), float32]) -> (Tensor[(12, 5, 5), float32], uint32, Tensor[(1, 90), float32]) {
  %664 = fn (%var_5248: Tensor[(1, 90), float32]) -> (Tensor[(12, 5, 5), float32], uint32, Tensor[(1, 90), float32]) {
    %654 = @func_3485() /* ty=(Tensor[(12, 5, 5), float32],) */;
    %655 = %654.0;
    %656 = cast(%655, dtype="float32") /* ty=Tensor[(12, 5, 5), float32] */;
    %657 = atan(%656) /* ty=Tensor[(12, 5, 5), float32] */;
    %658 = cast(%657, dtype="float32") /* ty=Tensor[(12, 5, 5), float32] */;
    %659 = cast(%var_5248, dtype="float32") /* ty=Tensor[(1, 90), float32] */;
    %660 = reshape(%659, newshape=[90]) /* ty=Tensor[(90), float32] */;
    %661 = @func_3195(%660) /* ty=(Tensor[(5, 1, 2), float32], uint32, Tensor[(90), float32]) */;
    %662 = rsqrt(%658) /* ty=Tensor[(12, 5, 5), float32] */;
    %663 = %661.1;
    (%662, %663, %var_5248)
  };
  %664(%var_5257) /* ty=(Tensor[(12, 5, 5), float32], uint32, Tensor[(1, 90), float32]) */
}

def @func_2223() -> Tensor[(5, 1, 2), float64] {
  %665 = fn () -> Tensor[(5, 1, 2), float64] {
    @func_1888() /* ty=Tensor[(5, 1, 2), float64] */
  };
  %665() /* ty=Tensor[(5, 1, 2), float64] */
}

def @func_1980(%var_1979: Tensor[(1716), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) {
  %673 = fn (%var_1964: Tensor[(1716), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) {
    %666 = cast(%var_1964, dtype="float64") /* ty=Tensor[(1716), float64] */;
    %667 = reshape(%666, newshape=[12, 11, 13]) /* ty=Tensor[(12, 11, 13), float64] */;
    %668 = @func_1437(%667) /* ty=Tensor[(12, 11, 13), float64] */;
    %669 = cast(%668, dtype="float64") /* ty=Tensor[(12, 11, 13), float64] */;
    %670 = reshape(%669, newshape=[12, 11, 13]) /* ty=Tensor[(12, 11, 13), float64] */;
    %671 = @func_1888() /* ty=Tensor[(5, 1, 2), float64] */;
    %672 = @func_1437(%670) /* ty=Tensor[(12, 11, 13), float64] */;
    (%671, %668, %var_1964, %672)
  };
  %673(%var_1979) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */
}

def @func_3394() -> (Tensor[(5, 1, 2), float64],) {
  %674 = @func_2356() /* ty=Tensor[(5, 1, 2), float64] */;
  (%674,)
}

def @func_2309(%var_2307: Tensor[(5, 1, 2), float64], %var_2308: Tensor[(5, 2, 2), float64]) -> (Tensor[(1716), float64], Tensor[(5, 2, 2), uint16], Tensor[(12, 11, 13), float32]) {
  %703 = fn (%var_2248: Tensor[(5, 1, 2), float64], %var_2295: Tensor[(5, 2, 2), float64]) -> (Tensor[(1716), float64], Tensor[(5, 2, 2), uint16], Tensor[(12, 11, 13), float32]) {
    %675 = @func_1888() /* ty=Tensor[(5, 1, 2), float64] */;
    %676 = cast(%675, dtype="float32") /* ty=Tensor[(5, 1, 2), float32] */;
    %677 = log2(%676) /* ty=Tensor[(5, 1, 2), float32] */;
    %678 = @func_2222() /* ty=Tensor[(5, 1, 2), float64] */;
    %679 = cast(%678, dtype="int32") /* ty=Tensor[(5, 1, 2), int32] */;
    %680 = shape_of(%677, dtype="int32") /* ty=Tensor[(3), int32] */;
    %681 = cast(%677, dtype="int32") /* ty=Tensor[(5, 1, 2), int32] */;
    %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %683 = bitwise_xor(%681, %682) /* ty=Tensor[(5, ?, 2), int32] */;
    %684 = cast(%var_2248, dtype="int32") /* ty=Tensor[(5, 1, 2), int32] */;
    %685 = shape_of(%675, dtype="int32") /* ty=Tensor[(3), int32] */;
    %686 = cast(%675, dtype="int32") /* ty=Tensor[(5, 1, 2), int32] */;
    %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %688 = minimum(%686, %687) /* ty=Tensor[(5, ?, 2), int32] */;
    %689 = cast(%688, dtype="float64") /* ty=Tensor[(5, ?, 2), float64] */;
    %690 = shape_of(%683, dtype="int32") /* ty=Tensor[(3), int32] */;
    %691 = cast(%683, dtype="float64") /* ty=Tensor[(5, ?, 2), float64] */;
    %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %693 = floor_mod(%691, %692) /* ty=Tensor[(5, ?, 2), float64] */;
    %694 = cast(%693, dtype="uint16") /* ty=Tensor[(5, ?, 2), uint16] */;
    %695 = cast(%var_2295, dtype="uint16") /* ty=Tensor[(5, 2, 2), uint16] */;
    %696 = cast(meta[relay.Constant][37] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
    %697 = reshape(%696, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
    %698 = @func_1978(%697) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */;
    %699 = %698.3;
    %700 = cast(%699, dtype="float32") /* ty=Tensor[(12, 11, 13), float32] */;
    %701 = bitwise_or(%694, %695) /* ty=Tensor[(5, 2, 2), uint16] */;
    %702 = sinh(%700) /* ty=Tensor[(12, 11, 13), float32] */;
    (meta[relay.Constant][37] /* ty=Tensor[(1716), float64] */, %701, %702)
  };
  %703(%var_2307, %var_2308) /* ty=(Tensor[(1716), float64], Tensor[(5, 2, 2), uint16], Tensor[(12, 11, 13), float32]) */
}

def @func_3275(%var_3253: Tensor[(140), float64], %var_3257: Tensor[(286, 6), float64], %var_3266: Tensor[(300), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 14, 2), bool], Tensor[(140), float64], Tensor[(5, 1, 2), float64], Tensor[(286, 6), float64], uint32, Tensor[(90), float32], Tensor[(5, 5, 11), bool], Tensor[(300), float64], Tensor[(5, 1, 2), float64]) {
  %704 = cast(%var_3253, dtype="float64") /* ty=Tensor[(140), float64] */;
  %705 = reshape(%704, newshape=[5, 14, 2]) /* ty=Tensor[(5, 14, 2), float64] */;
  %706 = cast(%var_3257, dtype="float64") /* ty=Tensor[(286, 6), float64] */;
  %707 = reshape(%706, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %708 = @func_2206(%707) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */;
  %709 = cast(meta[relay.Constant][38] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %710 = reshape(%709, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %711 = @func_3195(%710) /* ty=(Tensor[(5, 1, 2), float32], uint32, Tensor[(90), float32]) */;
  %712 = cast(%var_3266, dtype="float64") /* ty=Tensor[(300), float64] */;
  %713 = reshape(%712, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), float64] */;
  %714 = @func_2001(%713) /* ty=(Tensor[(6, 10, 5), bool], Tensor[(5, 5, 11), bool], Tensor[(55, 5), uint8]) */;
  %715 = @func_2332() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %716 = @func_2356() /* ty=Tensor[(5, 1, 2), float64] */;
  %717 = @func_3229(%705) /* ty=Tensor[(5, 14, 2), bool] */;
  %718 = %708.0;
  %719 = %711.1;
  %720 = %714.1;
  %721 = %715.0;
  (%716, %717, %var_3253, %718, %var_3257, %719, meta[relay.Constant][38] /* ty=Tensor[(90), float32] */, %720, %var_3266, %721)
}

def @func_6518(%var_6515: Tensor[(1, 3, 4), int64], %var_6516: Tensor[(16, 3, 4), int64], %var_6517: Tensor[(300), float64]) -> (Tensor[(16, 3, 4), int64], Tensor[(5, 1, 2), float64], Tensor[(300), float64], Tensor[(16, 15, 12), bool], Tensor[(2880), uint32], Tensor[(16, 3, 4), float32]) {
  %737 = fn (%var_6481: Tensor[(1, 3, 4), int64], %var_6482: Tensor[(16, 3, 4), int64], %var_6488: Tensor[(300), float64]) -> (Tensor[(16, 3, 4), int64], Tensor[(5, 1, 2), float64], Tensor[(300), float64], Tensor[(16, 15, 12), bool], Tensor[(2880), uint32], Tensor[(16, 3, 4), float32]) {
    %722 = cast(%var_6481, dtype="int64") /* ty=Tensor[(1, 3, 4), int64] */;
    %723 = cast(%var_6482, dtype="int64") /* ty=Tensor[(16, 3, 4), int64] */;
    %724 = cast(%var_6488, dtype="float64") /* ty=Tensor[(300), float64] */;
    %725 = reshape(%724, newshape=[300]) /* ty=Tensor[(300), float64] */;
    %726 = @func_4082(%725) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(300), float64]) */;
    %727 = cast(meta[relay.Constant][39] /* ty=Tensor[(2880), uint32] */, dtype="uint32") /* ty=Tensor[(2880), uint32] */;
    %728 = cast(meta[relay.Constant][39] /* ty=Tensor[(2880), uint32] */, dtype="uint32") /* ty=Tensor[(2880), uint32] */;
    %729 = reshape(%727, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), uint32] */;
    %730 = reshape(%728, newshape=[16, 15, 12]) /* ty=Tensor[(16, 15, 12), uint32] */;
    %731 = @func_5967(%729, %730) /* ty=(Tensor[(16, 15, 12), bool], Tensor[(792), float32]) */;
    %732 = cast(%var_6482, dtype="float32") /* ty=Tensor[(16, 3, 4), float32] */;
    %733 = minimum(%722, %723) /* ty=Tensor[(16, 3, 4), int64] */;
    %734 = %726.0;
    %735 = %731.0;
    %736 = exp(%732) /* ty=Tensor[(16, 3, 4), float32] */;
    (%733, %734, %var_6488, %735, meta[relay.Constant][39] /* ty=Tensor[(2880), uint32] */, %736)
  };
  %737(%var_6515, %var_6516, %var_6517) /* ty=(Tensor[(16, 3, 4), int64], Tensor[(5, 1, 2), float64], Tensor[(300), float64], Tensor[(16, 15, 12), bool], Tensor[(2880), uint32], Tensor[(16, 3, 4), float32]) */
}

def @func_4085(%var_4083: Tensor[(300), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(300), float64]) {
  @func_4082(%var_4083) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(300), float64]) */
}

def @func_4715(%var_4713: Tensor[(2, 396), float32], %var_4714: Tensor[(1716), float64]) -> (uint32, Tensor[(5, 1, 2), float64], Tensor[(11, 9, 8), float32], Tensor[(2, 396), float64], Tensor[(2, 396), bool], Tensor[(5, 1, 2), float64], Tensor[(1716), float64], Tensor[(5, 1, 2), float64], Tensor[(2, 396), float64], Tensor[(2, 396), float32], Tensor[(12, 11, 13), float32], Tensor[(20), float64], Tensor[(792), float32], Tensor[(90), float32]) {
  @func_4711(%var_4713, %var_4714) /* ty=(uint32, Tensor[(5, 1, 2), float64], Tensor[(11, 9, 8), float32], Tensor[(2, 396), float64], Tensor[(2, 396), bool], Tensor[(5, 1, 2), float64], Tensor[(1716), float64], Tensor[(5, 1, 2), float64], Tensor[(2, 396), float64], Tensor[(2, 396), float32], Tensor[(12, 11, 13), float32], Tensor[(20), float64], Tensor[(792), float32], Tensor[(90), float32]) */
}

def @func_3761() -> (Tensor[(792), float32],) {
  @func_3759() /* ty=(Tensor[(792), float32],) */
}

def @func_5967(%var_5950: Tensor[(16, 15, 12), uint32], %var_5951: Tensor[(16, 15, 12), uint32]) -> (Tensor[(16, 15, 12), bool], Tensor[(792), float32]) {
  %738 = cast(%var_5951, dtype="bool") /* ty=Tensor[(16, 15, 12), bool] */;
  %739 = shape_of(%var_5950, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%var_5950, dtype="bool") /* ty=Tensor[(16, 15, 12), bool] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %742 = @func_3006() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(90), float32]) */;
  %743 = greater(%740, %741) /* ty=Tensor[(16, 15, 12), bool] */;
  %744 = %742.1;
  (%743, %744)
}

def @func_826(%var_810: Tensor[(10, 3, 3), float32]) -> (Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float32], uint32, Tensor[(792), float32]) {
  %745 = cast(%var_810, dtype="float32") /* ty=Tensor[(10, 3, 3), float32] */;
  %746 = cast(meta[relay.Constant][40] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %747 = cast(meta[relay.Constant][41] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %748 = reshape(%746, newshape=[]) /* ty=uint32 */;
  %749 = reshape(%747, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %750 = @func_568(%748, %749) /* ty=(Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %751 = cos(%745) /* ty=Tensor[(10, 3, 3), float32] */;
  %752 = %750.1;
  (%751, %752, meta[relay.Constant][40] /* ty=uint32 */, meta[relay.Constant][41] /* ty=Tensor[(792), float32] */)
}

def @func_7071(%var_7069: Tensor[(286, 6), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(286, 6), float64]) {
  %753 = @func_3394() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %754 = cast(%var_7069, dtype="float64") /* ty=Tensor[(286, 6), float64] */;
  %755 = reshape(%754, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %756 = @func_1978(%755) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(12, 11, 13), float64], Tensor[(1716), float64], Tensor[(12, 11, 13), float64]) */;
  %757 = %753.0;
  %758 = %756.3;
  (%757, %758, %var_7069)
}

def @func_7794(%var_7792: Tensor[(13, 11, 7), int32], %var_7793: Tensor[(13, 11, 7), int32]) -> (Tensor[(13, 11, 7), bool], Tensor[(5, 1, 2), float32]) {
  @func_7790(%var_7792, %var_7793) /* ty=(Tensor[(13, 11, 7), bool], Tensor[(5, 1, 2), float32]) */
}

def @func_2571() -> (Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) {
  %766 = fn () -> (Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) {
    %759 = @func_2332() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %760 = cast(meta[relay.Constant][42] /* ty=Tensor[(275), uint8] */, dtype="uint8") /* ty=Tensor[(275), uint8] */;
    %761 = cast(meta[relay.Constant][42] /* ty=Tensor[(275), uint8] */, dtype="uint8") /* ty=Tensor[(275), uint8] */;
    %762 = reshape(%760, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
    %763 = reshape(%761, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
    %764 = %759.0;
    %765 = @func_1686(%762, %763) /* ty=Tensor[(5, 5, 11), bool] */;
    (%764, %765, meta[relay.Constant][42] /* ty=Tensor[(275), uint8] */)
  };
  %766() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(275), uint8]) */
}

def @func_1640(%var_1569: Tensor[(16, 7, 13), float32], %var_1584: Tensor[(16, 7, 13), float32], %var_1632: uint32) -> (Tensor[(16, 7, 13), bool], Tensor[(792), float32], uint32, Tensor[(792), float32], Tensor[(11, 9, 8), float32]) {
  %767 = cast(%var_1569, dtype="float32") /* ty=Tensor[(16, 7, 13), float32] */;
  %768 = cos(%767) /* ty=Tensor[(16, 7, 13), float32] */;
  %769 = cast(%var_1584, dtype="bool") /* ty=Tensor[(16, 7, 13), bool] */;
  %770 = shape_of(%768, dtype="int32") /* ty=Tensor[(3), int32] */;
  %771 = cast(%768, dtype="bool") /* ty=Tensor[(16, 7, 13), bool] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %773 = cast(%var_1632, dtype="uint32") /* ty=uint32 */;
  %774 = cast(meta[relay.Constant][43] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %775 = reshape(%773, newshape=[]) /* ty=uint32 */;
  %776 = reshape(%774, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %777 = @func_568(%775, %776) /* ty=(Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %778 = %777.2;
  %779 = cast(%778, dtype="float32") /* ty=Tensor[(792), float32] */;
  %780 = reshape(%779, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float32] */;
  %781 = @func_326(%780) /* ty=(Tensor[(11, 9, 8), float32],) */;
  %782 = greater_equal(%771, %772) /* ty=Tensor[(16, 7, 13), bool] */;
  %783 = %781.0;
  (%782, %778, %var_1632, meta[relay.Constant][43] /* ty=Tensor[(792), float32] */, %783)
}

def @func_6973(%var_6972: Tensor[(7, 11, 3), float32]) -> Tensor[(7, 11, 3), float32] {
  %785 = fn (%var_6964: Tensor[(7, 11, 3), float32]) -> Tensor[(7, 11, 3), float32] {
    %784 = cast(%var_6964, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
    asin(%784) /* ty=Tensor[(7, 11, 3), float32] */
  };
  %785(%var_6972) /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_3759() -> (Tensor[(792), float32],) {
  %786 = @func_3080() /* ty=Tensor[(792), float32] */;
  (%786,)
}

def @func_4145(%var_4100: Tensor[(90), float32]) -> (Tensor[(792), float32], Tensor[(90), float32], Tensor[(540), float64], Tensor[(90), float32]) {
  %787 = @func_3759() /* ty=(Tensor[(792), float32],) */;
  %788 = cast(meta[relay.Constant][44] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %789 = cast(%var_4100, dtype="float32") /* ty=Tensor[(90), float32] */;
  %790 = reshape(%788, newshape=[9, 5, 12]) /* ty=Tensor[(9, 5, 12), float64] */;
  %791 = reshape(%789, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %792 = @func_3943(%790, %791) /* ty=(Tensor[(9, 5, 12), float64], Tensor[(5, ?, 2), float64], Tensor[(10), float64], Tensor[(90), float32]) */;
  %793 = %787.0;
  %794 = %792.3;
  (%793, %794, meta[relay.Constant][44] /* ty=Tensor[(540), float64] */, %var_4100)
}

def @func_4610(%var_4602: int64) -> (Tensor[(6, 2, 12), int64], Tensor[(792), float32]) {
  %795 = cast(%var_4602, dtype="int64") /* ty=int64 */;
  %796 = cast(meta[relay.Constant][45] /* ty=Tensor[(6, 2, 12), int64] */, dtype="int64") /* ty=Tensor[(6, 2, 12), int64] */;
  %797 = @func_3054() /* ty=(Tensor[(792), float32],) */;
  %798 = bitwise_or(%795, %796) /* ty=Tensor[(6, 2, 12), int64] */;
  %799 = %797.0;
  (%798, %799)
}

def @func_7021(%var_7020: Tensor[(5, 3, 2), uint16]) -> (Tensor[(5, 3, 2), bool],) {
  %805 = fn (%var_7006: Tensor[(5, 3, 2), uint16]) -> (Tensor[(5, 3, 2), bool],) {
    %800 = @func_4535() /* ty=(Tensor[(5, ?, 2), uint16],) */;
    %801 = %800.0;
    %802 = cast(%801, dtype="bool") /* ty=Tensor[(5, ?, 2), bool] */;
    %803 = cast(%var_7006, dtype="bool") /* ty=Tensor[(5, 3, 2), bool] */;
    %804 = logical_or(%802, %803) /* ty=Tensor[(5, 3, 2), bool] */;
    (%804,)
  };
  %805(%var_7020) /* ty=(Tensor[(5, 3, 2), bool],) */
}

def @func_7923(%var_7921: Tensor[(11, 13, 2), float32], %var_7922: Tensor[(3, 30), float32]) -> (Tensor[(11, 13, 2), float32], Tensor[(5, ?, 2), float64], Tensor[(10), float64], Tensor[(3, 30), float32]) {
  %814 = fn (%var_7905: Tensor[(11, 13, 2), float32], %var_7918: Tensor[(3, 30), float32]) -> (Tensor[(11, 13, 2), float32], Tensor[(5, ?, 2), float64], Tensor[(10), float64], Tensor[(3, 30), float32]) {
    %806 = cast(%var_7905, dtype="float32") /* ty=Tensor[(11, 13, 2), float32] */;
    %807 = cast(meta[relay.Constant][46] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
    %808 = cast(%var_7918, dtype="float32") /* ty=Tensor[(3, 30), float32] */;
    %809 = reshape(%807, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
    %810 = reshape(%808, newshape=[90]) /* ty=Tensor[(90), float32] */;
    %811 = @func_2483(%809, %810) /* ty=(Tensor[(5, ?, 2), float64], Tensor[(792), float32], Tensor[(90), float32], uint32) */;
    %812 = acos(%806) /* ty=Tensor[(11, 13, 2), float32] */;
    %813 = %811.0;
    (%812, %813, meta[relay.Constant][46] /* ty=Tensor[(10), float64] */, %var_7918)
  };
  %814(%var_7921, %var_7922) /* ty=(Tensor[(11, 13, 2), float32], Tensor[(5, ?, 2), float64], Tensor[(10), float64], Tensor[(3, 30), float32]) */
}

def @func_2435(%var_2433: Tensor[(11, 25), uint8]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(11, 25), uint8]) {
  @func_2432(%var_2433) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(11, 25), uint8]) */
}

def @func_7467(%var_7456: Tensor[(12), float64]) -> (Tensor[(5, 1, 2), float32], Tensor[(5, 1, 2), float64], Tensor[(12, 1), float64], Tensor[(12), float64], Tensor[(12, 5, 5), float32]) {
  %815 = @func_6809() /* ty=(Tensor[(5, 1, 2), float32],) */;
  %816 = @func_3125() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %817 = cast(%var_7456, dtype="float64") /* ty=Tensor[(12), float64] */;
  %818 = reshape(%817, newshape=[12, 1]) /* ty=Tensor[(12, 1), float64] */;
  %819 = @func_5634(%818) /* ty=(Tensor[(275), uint8], Tensor[(6, 1, 2), float64], Tensor[(12, 1), float64]) */;
  %820 = @func_3485() /* ty=(Tensor[(12, 5, 5), float32],) */;
  %821 = %815.0;
  %822 = %816.0;
  %823 = %819.2;
  %824 = %820.0;
  (%821, %822, %823, %var_7456, %824)
}

def @func_7302(%var_7291: Tensor[(300), float64]) -> (Tensor[(90), float32], Tensor[(300), float64], Tensor[(300), float64]) {
  %825 = @func_6870() /* ty=(Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(90), float32], Tensor[(12, 2, 4), bool]) */;
  %826 = cast(%var_7291, dtype="float64") /* ty=Tensor[(300), float64] */;
  %827 = reshape(%826, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %828 = @func_4082(%827) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(300), float64]) */;
  %829 = %825.0;
  %830 = %828.2;
  (%829, %830, %var_7291)
}

def @func_4367() -> Tensor[(5, 1, 2), float64] {
  @func_4365() /* ty=Tensor[(5, 1, 2), float64] */
}

def @func_3485() -> (Tensor[(12, 5, 5), float32],) {
  %831 = cast(meta[relay.Constant][47] /* ty=Tensor[(12, 5, 5), float32] */, dtype="float32") /* ty=Tensor[(12, 5, 5), float32] */;
  %832 = cos(%831) /* ty=Tensor[(12, 5, 5), float32] */;
  (%832,)
}

def @func_2969(%var_2967: Tensor[(12), float64], %var_2968: Tensor[(432), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(6, 1, 2), float64], Tensor[(12), float64], Tensor[(792), float32], Tensor[(1456), float32], uint32, Tensor[(5, 1, 2), float64], Tensor[(432), float64], Tensor[(10, 3, 3), float32]) {
  %854 = fn (%var_2932: Tensor[(12), float64], %var_2959: Tensor[(432), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(6, 1, 2), float64], Tensor[(12), float64], Tensor[(792), float32], Tensor[(1456), float32], uint32, Tensor[(5, 1, 2), float64], Tensor[(432), float64], Tensor[(10, 3, 3), float32]) {
    %833 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
    %834 = cast(%var_2932, dtype="float64") /* ty=Tensor[(12), float64] */;
    %835 = reshape(%834, newshape=[6, 1, 2]) /* ty=Tensor[(6, 1, 2), float64] */;
    %836 = cast(meta[relay.Constant][48] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
    %837 = cast(meta[relay.Constant][48] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
    %838 = cast(meta[relay.Constant][49] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %839 = reshape(%836, newshape=[16, 7, 13]) /* ty=Tensor[(16, 7, 13), float32] */;
    %840 = reshape(%837, newshape=[16, 7, 13]) /* ty=Tensor[(16, 7, 13), float32] */;
    %841 = reshape(%838, newshape=[]) /* ty=uint32 */;
    %842 = @func_1640(%839, %840, %841) /* ty=(Tensor[(16, 7, 13), bool], Tensor[(792), float32], uint32, Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
    %843 = cast(%var_2959, dtype="float64") /* ty=Tensor[(432), float64] */;
    %844 = reshape(%843, newshape=[432]) /* ty=Tensor[(432), float64] */;
    %845 = @func_2853(%844) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float64], Tensor[(792), float32]) */;
    %846 = cast(%var_2959, dtype="float64") /* ty=Tensor[(432), float64] */;
    %847 = reshape(%846, newshape=[432]) /* ty=Tensor[(432), float64] */;
    %848 = @func_2665(%847) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(90), float32]) */;
    %849 = %833.0;
    %850 = @func_1797(%835) /* ty=Tensor[(6, 1, 2), float64] */;
    %851 = %842.1;
    %852 = %845.0;
    %853 = %848.3;
    (%849, %850, %var_2932, %851, meta[relay.Constant][48] /* ty=Tensor[(1456), float32] */, meta[relay.Constant][49] /* ty=uint32 */, %852, %var_2959, %853)
  };
  %854(%var_2967, %var_2968) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(6, 1, 2), float64], Tensor[(12), float64], Tensor[(792), float32], Tensor[(1456), float32], uint32, Tensor[(5, 1, 2), float64], Tensor[(432), float64], Tensor[(10, 3, 3), float32]) */
}

def @func_5492(%var_5490: Tensor[(120), float64]) -> (Tensor[(5, 2, 2), uint16], Tensor[(120), float64], Tensor[(140, 300), bool], Tensor[(5, 14, 2), bool]) {
  @func_5489(%var_5490) /* ty=(Tensor[(5, 2, 2), uint16], Tensor[(120), float64], Tensor[(140, 300), bool], Tensor[(5, 14, 2), bool]) */
}

def @func_7805() -> (Tensor[(90), float32],) {
  %855 = @func_7358() /* ty=(Tensor[(90), float32],) */;
  %856 = %855.0;
  (%856,)
}

def @func_4789() -> (Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(792), float32], Tensor[(1716), float64], Tensor[(90), float32], Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(12, 11, 13), float64]) {
  %857 = cast(meta[relay.Constant][50] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %858 = cast(meta[relay.Constant][51] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %859 = reshape(%857, newshape=[2, 396]) /* ty=Tensor[(2, 396), float32] */;
  %860 = reshape(%858, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %861 = @func_4711(%859, %860) /* ty=(uint32, Tensor[(5, 1, 2), float64], Tensor[(11, 9, 8), float32], Tensor[(2, 396), float64], Tensor[(2, 396), bool], Tensor[(5, 1, 2), float64], Tensor[(1716), float64], Tensor[(5, 1, 2), float64], Tensor[(2, 396), float64], Tensor[(2, 396), float32], Tensor[(12, 11, 13), float32], Tensor[(20), float64], Tensor[(792), float32], Tensor[(90), float32]) */;
  %862 = cast(meta[relay.Constant][52] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %863 = reshape(%862, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %864 = @func_4145(%863) /* ty=(Tensor[(792), float32], Tensor[(90), float32], Tensor[(540), float64], Tensor[(90), float32]) */;
  %865 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %866 = reshape(%865, newshape=[]) /* ty=int64 */;
  %867 = @func_4610(%866) /* ty=(Tensor[(6, 2, 12), int64], Tensor[(792), float32]) */;
  %868 = cast(meta[relay.Constant][51] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %869 = reshape(%868, newshape=[12, 11, 13]) /* ty=Tensor[(12, 11, 13), float64] */;
  %870 = @func_4365() /* ty=Tensor[(5, 1, 2), float64] */;
  %871 = %861.12;
  %872 = %864.1;
  %873 = %867.1;
  %874 = @func_1437(%869) /* ty=Tensor[(12, 11, 13), float64] */;
  (%870, %871, meta[relay.Constant][50] /* ty=Tensor[(792), float32] */, meta[relay.Constant][51] /* ty=Tensor[(1716), float64] */, %872, meta[relay.Constant][52] /* ty=Tensor[(90), float32] */, %873, -8 /* ty=int64 */, %874)
}

def @func_2334() -> (Tensor[(5, 1, 2), float64],) {
  @func_2332() /* ty=(Tensor[(5, 1, 2), float64],) */
}

def @func_7359() -> (Tensor[(90), float32],) {
  %876 = fn () -> (Tensor[(90), float32],) {
    %875 = @func_6052() /* ty=Tensor[(90), float32] */;
    (%875,)
  };
  %876() /* ty=(Tensor[(90), float32],) */
}

def @func_2432(%var_2428: Tensor[(11, 25), uint8]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 5, 11), bool], Tensor[(11, 25), uint8]) {
  %877 = cast(%var_2428, dtype="uint8") /* ty=Tensor[(11, 25), uint8] */;
  %878 = cast(%var_2428, dtype="uint8") /* ty=Tensor[(11, 25), uint8] */;
  %879 = reshape(%877, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
  %880 = reshape(%878, newshape=[5, 5, 11]) /* ty=Tensor[(5, 5, 11), uint8] */;
  %881 = @func_2222() /* ty=Tensor[(5, 1, 2), float64] */;
  %882 = @func_1686(%879, %880) /* ty=Tensor[(5, 5, 11), bool] */;
  (%881, %882, %var_2428)
}

def @func_6619(%var_6617: Tensor[(12), int64], %var_6618: uint32) -> (Tensor[(12, 5, 5), float64], Tensor[(2880), uint32], Tensor[(12), int64], Tensor[(192), int64], Tensor[(5, 1, 2), float64], uint32) {
  @func_6615(%var_6617, %var_6618) /* ty=(Tensor[(12, 5, 5), float64], Tensor[(2880), uint32], Tensor[(12), int64], Tensor[(192), int64], Tensor[(5, 1, 2), float64], uint32) */
}

def @func_2363() -> (Tensor[(5, 1, 2), float64],) {
  %883 = @func_2222() /* ty=Tensor[(5, 1, 2), float64] */;
  (%883,)
}

def @func_4486(%var_4483: Tensor[(12, 14, 8), bool], %var_4484: Tensor[(12, 14, 8), bool], %var_4485: Tensor[(432), float64]) -> (Tensor[(300), float64], Tensor[(300, 1), float64], Tensor[(12, 14, 8), float32], Tensor[(12, 14, 8), int16], Tensor[(10, 3, 3), float32], Tensor[(432), float64]) {
  %907 = fn (%var_4449: Tensor[(12, 14, 8), bool], %var_4469: Tensor[(12, 14, 8), bool], %var_4475: Tensor[(432), float64]) -> (Tensor[(300), float64], Tensor[(300, 1), float64], Tensor[(12, 14, 8), float32], Tensor[(12, 14, 8), int16], Tensor[(10, 3, 3), float32], Tensor[(432), float64]) {
    %884 = cast(meta[relay.Constant][53] /* ty=Tensor[(300, 1), float64] */, dtype="float64") /* ty=Tensor[(300, 1), float64] */;
    %885 = reshape(%884, newshape=[300]) /* ty=Tensor[(300), float64] */;
    %886 = @func_4082(%885) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(300), float64]) */;
    %887 = cast(meta[relay.Constant][54] /* ty=Tensor[(12, 14, 8), bool] */, dtype="bool") /* ty=Tensor[(12, 14, 8), bool] */;
    %888 = shape_of(%var_4449, dtype="int32") /* ty=Tensor[(3), int32] */;
    %889 = cast(%var_4449, dtype="bool") /* ty=Tensor[(12, 14, 8), bool] */;
    %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %891 = logical_and(%889, %890) /* ty=Tensor[(12, 14, 8), bool] */;
    %892 = cast(%var_4449, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
    %893 = shape_of(%891, dtype="int32") /* ty=Tensor[(3), int32] */;
    %894 = cast(%891, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
    %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %896 = cast(%var_4469, dtype="int16") /* ty=Tensor[(12, 14, 8), int16] */;
    %897 = shape_of(%var_4449, dtype="int32") /* ty=Tensor[(3), int32] */;
    %898 = cast(%var_4449, dtype="int16") /* ty=Tensor[(12, 14, 8), int16] */;
    %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %900 = cast(%var_4475, dtype="float64") /* ty=Tensor[(432), float64] */;
    %901 = reshape(%900, newshape=[432]) /* ty=Tensor[(432), float64] */;
    %902 = @func_2665(%901) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(90), float32]) */;
    %903 = %886.2;
    %904 = power(%894, %895) /* ty=Tensor[(12, 14, 8), float32] */;
    %905 = maximum(%898, %899) /* ty=Tensor[(12, 14, 8), int16] */;
    %906 = %902.3;
    (%903, meta[relay.Constant][53] /* ty=Tensor[(300, 1), float64] */, %904, %905, %906, %var_4475)
  };
  %907(%var_4483, %var_4484, %var_4485) /* ty=(Tensor[(300), float64], Tensor[(300, 1), float64], Tensor[(12, 14, 8), float32], Tensor[(12, 14, 8), int16], Tensor[(10, 3, 3), float32], Tensor[(432), float64]) */
}

def @func_7418(%var_7417: Tensor[(10, 2, 13), float64]) -> (Tensor[(10, 2, 13), float64], Tensor[(10, 2, 13), float32]) {
  %912 = fn (%var_7411: Tensor[(10, 2, 13), float64]) -> (Tensor[(10, 2, 13), float64], Tensor[(10, 2, 13), float32]) {
    %908 = cast(%var_7411, dtype="float64") /* ty=Tensor[(10, 2, 13), float64] */;
    %909 = cast(%var_7411, dtype="float32") /* ty=Tensor[(10, 2, 13), float32] */;
    %910 = acos(%908) /* ty=Tensor[(10, 2, 13), float64] */;
    %911 = rsqrt(%909) /* ty=Tensor[(10, 2, 13), float32] */;
    (%910, %911)
  };
  %912(%var_7417) /* ty=(Tensor[(10, 2, 13), float64], Tensor[(10, 2, 13), float32]) */
}

def @func_7470(%var_7468: Tensor[(12), float64]) -> (Tensor[(5, 1, 2), float32], Tensor[(5, 1, 2), float64], Tensor[(12, 1), float64], Tensor[(12), float64], Tensor[(12, 5, 5), float32]) {
  @func_7467(%var_7468) /* ty=(Tensor[(5, 1, 2), float32], Tensor[(5, 1, 2), float64], Tensor[(12, 1), float64], Tensor[(12), float64], Tensor[(12, 5, 5), float32]) */
}

def @func_7601() -> Tensor[(5, 1, 2), float32] {
  @func_7599() /* ty=Tensor[(5, 1, 2), float32] */
}

def @func_2853(%var_2792: Tensor[(432), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float64], Tensor[(792), float32]) {
  %913 = @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %914 = cast(%var_2792, dtype="float64") /* ty=Tensor[(432), float64] */;
  %915 = reshape(%914, newshape=[432]) /* ty=Tensor[(432), float64] */;
  %916 = @func_2665(%915) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(432), float64], Tensor[(10, 3, 3), float32], Tensor[(90), float32]) */;
  %917 = cast(%var_2792, dtype="float64") /* ty=Tensor[(432), float64] */;
  %918 = reshape(%917, newshape=[9, 3, 16]) /* ty=Tensor[(9, 3, 16), float64] */;
  %919 = @func_659(%918) /* ty=(Tensor[(9, 3, 16), float32], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %920 = %919.1;
  %921 = cast(%920, dtype="float64") /* ty=Tensor[(11, 9, 8), float64] */;
  %922 = cast(%var_2792, dtype="float64") /* ty=Tensor[(432), float64] */;
  %923 = reshape(%922, newshape=[9, 3, 16]) /* ty=Tensor[(9, 3, 16), float64] */;
  %924 = @func_659(%923) /* ty=(Tensor[(9, 3, 16), float32], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
  %925 = %913.0;
  %926 = @func_1888() /* ty=Tensor[(5, 1, 2), float64] */;
  %927 = %916.3;
  %928 = sin(%921) /* ty=Tensor[(11, 9, 8), float64] */;
  %929 = %924.2;
  (%925, %926, %var_2792, %927, %928, %929)
}

def @func_4791() -> (Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(792), float32], Tensor[(1716), float64], Tensor[(90), float32], Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(12, 11, 13), float64]) {
  @func_4789() /* ty=(Tensor[(5, 1, 2), float64], Tensor[(792), float32], Tensor[(792), float32], Tensor[(1716), float64], Tensor[(90), float32], Tensor[(90), float32], Tensor[(792), float32], int64, Tensor[(12, 11, 13), float64]) */
}

def @func_2365() -> (Tensor[(5, 1, 2), float64],) {
  @func_2363() /* ty=(Tensor[(5, 1, 2), float64],) */
}

def @func_7968() -> (Tensor[(5, 1, 2), float32],) {
  %930 = @func_2028() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %931 = %930.0;
  %932 = cast(%931, dtype="float32") /* ty=Tensor[(5, 1, 2), float32] */;
  %933 = cosh(%932) /* ty=Tensor[(5, 1, 2), float32] */;
  (%933,)
}

def @func_8267() -> (Tensor[(5, ?, 2), bool], Tensor[(12, 1), float64], Tensor[(12), float64]) {
  %945 = fn () -> (Tensor[(5, ?, 2), bool], Tensor[(12, 1), float64], Tensor[(12), float64]) {
    %934 = @func_4365() /* ty=Tensor[(5, 1, 2), float64] */;
    %935 = @func_7273() /* ty=Tensor[(5, 1, 2), float32] */;
    %936 = cast(%935, dtype="bool") /* ty=Tensor[(5, 1, 2), bool] */;
    %937 = shape_of(%934, dtype="int32") /* ty=Tensor[(3), int32] */;
    %938 = cast(%934, dtype="bool") /* ty=Tensor[(5, 1, 2), bool] */;
    %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %940 = cast(meta[relay.Constant][55] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
    %941 = reshape(%940, newshape=[12, 1]) /* ty=Tensor[(12, 1), float64] */;
    %942 = @func_5634(%941) /* ty=(Tensor[(275), uint8], Tensor[(6, 1, 2), float64], Tensor[(12, 1), float64]) */;
    %943 = less(%938, %939) /* ty=Tensor[(5, ?, 2), bool] */;
    %944 = %942.2;
    (%943, %944, meta[relay.Constant][55] /* ty=Tensor[(12), float64] */)
  };
  %945() /* ty=(Tensor[(5, ?, 2), bool], Tensor[(12, 1), float64], Tensor[(12), float64]) */
}

def @func_6637() -> (Tensor[(5, 1, 2), float64],) {
  %946 = @func_3695() /* ty=(Tensor[(5, 1, 2), float64],) */;
  %947 = %946.0;
  (%947,)
}

def @func_4962(%var_4961: Tensor[(9, 6, 6), uint16]) -> (Tensor[(9, 6, 6), float32], Tensor[(9, 6, 6), float64], Tensor[(9, 3, 16), float32], Tensor[(432), float64]) {
  %964 = fn (%var_4938: Tensor[(9, 6, 6), uint16]) -> (Tensor[(9, 6, 6), float32], Tensor[(9, 6, 6), float64], Tensor[(9, 3, 16), float32], Tensor[(432), float64]) {
    %948 = cast(%var_4938, dtype="uint16") /* ty=Tensor[(9, 6, 6), uint16] */;
    %949 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(9, 6, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %950 = cast(meta[relay.Constant][56] /* ty=Tensor[(9, 6, 6), uint16] */, dtype="uint16") /* ty=Tensor[(9, 6, 6), uint16] */;
    %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %952 = bitwise_or(%950, %951) /* ty=Tensor[(9, 6, 6), uint16] */;
    %953 = cast(%952, dtype="float32") /* ty=Tensor[(9, 6, 6), float32] */;
    %954 = cast(%952, dtype="float64") /* ty=Tensor[(9, 6, 6), float64] */;
    %955 = shape_of(%var_4938, dtype="int32") /* ty=Tensor[(3), int32] */;
    %956 = cast(%var_4938, dtype="float64") /* ty=Tensor[(9, 6, 6), float64] */;
    %957 = dyn.reshape(%954, %955, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %958 = cast(meta[relay.Constant][57] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
    %959 = reshape(%958, newshape=[9, 3, 16]) /* ty=Tensor[(9, 3, 16), float64] */;
    %960 = @func_659(%959) /* ty=(Tensor[(9, 3, 16), float32], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) */;
    %961 = log(%953) /* ty=Tensor[(9, 6, 6), float32] */;
    %962 = floor_divide(%956, %957) /* ty=Tensor[(9, 6, 6), float64] */;
    %963 = %960.0;
    (%961, %962, %963, meta[relay.Constant][57] /* ty=Tensor[(432), float64] */)
  };
  %964(%var_4961) /* ty=(Tensor[(9, 6, 6), float32], Tensor[(9, 6, 6), float64], Tensor[(9, 3, 16), float32], Tensor[(432), float64]) */
}

def @func_5445(%var_5371: int64, %var_5407: Tensor[(300), float64]) -> (Tensor[(792), float32], Tensor[(792), float32], Tensor[(6, 2, 10), float64], Tensor[(120), float64], Tensor[(5, 14, 2), float32], Tensor[(300), float64], Tensor[(5, 1, 2), float64], Tensor[(6, 10, 5), bool], Tensor[(792), float32]) {
  %965 = cast(%var_5371, dtype="int64") /* ty=int64 */;
  %966 = reshape(%965, newshape=[]) /* ty=int64 */;
  %967 = @func_4610(%966) /* ty=(Tensor[(6, 2, 12), int64], Tensor[(792), float32]) */;
  %968 = @func_3080() /* ty=Tensor[(792), float32] */;
  %969 = cast(%var_5371, dtype="float32") /* ty=float32 */;
  %970 = cast(%968, dtype="float32") /* ty=Tensor[(792), float32] */;
  %971 = cast(meta[relay.Constant][58] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %972 = reshape(%971, newshape=[6, 2, 10]) /* ty=Tensor[(6, 2, 10), float64] */;
  %973 = @func_3343(%972) /* ty=(Tensor[(6, 2, 10), float64],) */;
  %974 = cast(%var_5407, dtype="float64") /* ty=Tensor[(300), float64] */;
  %975 = reshape(%974, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %976 = @func_3546(%975) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(6, 10, 5), bool], Tensor[(300), float64], Tensor[(3, 3, 6), uint8], Tensor[(54), uint8], Tensor[(140), float64], Tensor[(5, 14, 2), float32]) */;
  %977 = cast(%var_5407, dtype="float64") /* ty=Tensor[(300), float64] */;
  %978 = reshape(%977, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %979 = @func_4082(%978) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 1, 2), float64], Tensor[(300), float64]) */;
  %980 = cast(%var_5407, dtype="float64") /* ty=Tensor[(300), float64] */;
  %981 = reshape(%980, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), float64] */;
  %982 = @func_2001(%981) /* ty=(Tensor[(6, 10, 5), bool], Tensor[(5, 5, 11), bool], Tensor[(55, 5), uint8]) */;
  %983 = @func_3054() /* ty=(Tensor[(792), float32],) */;
  %984 = %967.1;
  %985 = floor_mod(%969, %970) /* ty=Tensor[(792), float32] */;
  %986 = %973.0;
  %987 = %976.6;
  %988 = %979.1;
  %989 = %982.0;
  %990 = %983.0;
  (%984, %985, %986, meta[relay.Constant][58] /* ty=Tensor[(120), float64] */, %987, %var_5407, %988, %989, %990)
}

def @func_3280(%var_3277: Tensor[(140), float64], %var_3278: Tensor[(286, 6), float64], %var_3279: Tensor[(300), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(5, 14, 2), bool], Tensor[(140), float64], Tensor[(5, 1, 2), float64], Tensor[(286, 6), float64], uint32, Tensor[(90), float32], Tensor[(5, 5, 11), bool], Tensor[(300), float64], Tensor[(5, 1, 2), float64]) {
  @func_3275(%var_3277, %var_3278, %var_3279) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(5, 14, 2), bool], Tensor[(140), float64], Tensor[(5, 1, 2), float64], Tensor[(286, 6), float64], uint32, Tensor[(90), float32], Tensor[(5, 5, 11), bool], Tensor[(300), float64], Tensor[(5, 1, 2), float64]) */
}

def @func_7350() -> (Tensor[(5, 1, 2), float64],) {
  @func_7348() /* ty=(Tensor[(5, 1, 2), float64],) */
}

def @func_5704(%var_5702: uint32) -> (Tensor[(5, 1, 2), float64], Tensor[(1456), float32], uint32) {
  @func_5701(%var_5702) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(1456), float32], uint32) */
}

def @func_3548(%var_3547: Tensor[(300), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(6, 10, 5), bool], Tensor[(300), float64], Tensor[(3, 3, 6), uint8], Tensor[(54), uint8], Tensor[(140), float64], Tensor[(5, 14, 2), float32]) {
  %1004 = fn (%var_3525: Tensor[(300), float64]) -> (Tensor[(5, 1, 2), float64], Tensor[(6, 10, 5), bool], Tensor[(300), float64], Tensor[(3, 3, 6), uint8], Tensor[(54), uint8], Tensor[(140), float64], Tensor[(5, 14, 2), float32]) {
    %991 = cast(%var_3525, dtype="float64") /* ty=Tensor[(300), float64] */;
    %992 = reshape(%991, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), float64] */;
    %993 = @func_2001(%992) /* ty=(Tensor[(6, 10, 5), bool], Tensor[(5, 5, 11), bool], Tensor[(55, 5), uint8]) */;
    %994 = cast(meta[relay.Constant][59] /* ty=Tensor[(54), uint8] */, dtype="uint8") /* ty=Tensor[(54), uint8] */;
    %995 = reshape(%994, newshape=[3, 3, 6]) /* ty=Tensor[(3, 3, 6), uint8] */;
    %996 = cast(meta[relay.Constant][60] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
    %997 = reshape(%996, newshape=[5, 14, 2]) /* ty=Tensor[(5, 14, 2), float64] */;
    %998 = @func_3229(%997) /* ty=Tensor[(5, 14, 2), bool] */;
    %999 = cast(%998, dtype="float32") /* ty=Tensor[(5, 14, 2), float32] */;
    %1000 = @func_2356() /* ty=Tensor[(5, 1, 2), float64] */;
    %1001 = %993.0;
    %1002 = @func_2916(%995) /* ty=Tensor[(3, 3, 6), uint8] */;
    %1003 = acos(%999) /* ty=Tensor[(5, 14, 2), float32] */;
    (%1000, %1001, %var_3525, %1002, meta[relay.Constant][59] /* ty=Tensor[(54), uint8] */, meta[relay.Constant][60] /* ty=Tensor[(140), float64] */, %1003)
  };
  %1004(%var_3547) /* ty=(Tensor[(5, 1, 2), float64], Tensor[(6, 10, 5), bool], Tensor[(300), float64], Tensor[(3, 3, 6), uint8], Tensor[(54), uint8], Tensor[(140), float64], Tensor[(5, 14, 2), float32]) */
}

def @func_5489(%var_5475: Tensor[(120), float64]) -> (Tensor[(5, 2, 2), uint16], Tensor[(120), float64], Tensor[(140, 300), bool], Tensor[(5, 14, 2), bool]) {
  %1005 = @func_5124() /* ty=(Tensor[(5, 2, 2), uint16],) */;
  %1006 = cast(%var_5475, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1007 = cast(meta[relay.Constant][61] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %1008 = reshape(%1006, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %1009 = reshape(%1007, newshape=[5, 60]) /* ty=Tensor[(5, 60), float64] */;
  %1010 = @func_3893(%1008, %1009) /* ty=(Tensor[(5, ?, 2), bool], Tensor[(5, 5, 11), bool], Tensor[(275), uint8], Tensor[(6, 2, 10), float64], Tensor[(120), float64], Tensor[(5, 14, 2), bool], Tensor[(140, 1), float64], Tensor[(11, 156), float64], Tensor[(5, 60), float64]) */;
  %1011 = %1010.6;
  %1012 = cast(meta[relay.Constant][61] /* ty=Tensor[(300), float64] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %1013 = cast(%1011, dtype="bool") /* ty=Tensor[(140, 1), bool] */;
  %1014 = cast(%1011, dtype="float64") /* ty=Tensor[(140, 1), float64] */;
  %1015 = reshape(%1014, newshape=[5, 14, 2]) /* ty=Tensor[(5, 14, 2), float64] */;
  %1016 = %1005.0;
  %1017 = less(%1012, %1013) /* ty=Tensor[(140, 300), bool] */;
  %1018 = @func_3229(%1015) /* ty=Tensor[(5, 14, 2), bool] */;
  (%1016, %var_5475, %1017, %1018)
}

def @func_2129(%var_2128: Tensor[(12, 1, 16), float32]) -> (Tensor[(11, 9, 8), float32], Tensor[(90), float32], Tensor[(12, 1, 16), float64]) {
  %1029 = fn (%var_2086: Tensor[(12, 1, 16), float32]) -> (Tensor[(11, 9, 8), float32], Tensor[(90), float32], Tensor[(12, 1, 16), float64]) {
    %1019 = cast(meta[relay.Constant][62] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %1020 = reshape(%1019, newshape=[10, 3, 3]) /* ty=Tensor[(10, 3, 3), float32] */;
    %1021 = @func_826(%1020) /* ty=(Tensor[(10, 3, 3), float32], Tensor[(11, 9, 8), float32], uint32, Tensor[(792), float32]) */;
    %1022 = cast(%var_2086, dtype="float32") /* ty=Tensor[(12, 1, 16), float32] */;
    %1023 = log2(%1022) /* ty=Tensor[(12, 1, 16), float32] */;
    %1024 = cast(%1023, dtype="float32") /* ty=Tensor[(12, 1, 16), float32] */;
    %1025 = asinh(%1024) /* ty=Tensor[(12, 1, 16), float32] */;
    %1026 = cast(%1025, dtype="float64") /* ty=Tensor[(12, 1, 16), float64] */;
    %1027 = %1021.1;
    %1028 = exp(%1026) /* ty=Tensor[(12, 1, 16), float64] */;
    (%1027, meta[relay.Constant][62] /* ty=Tensor[(90), float32] */, %1028)
  };
  %1029(%var_2128) /* ty=(Tensor[(11, 9, 8), float32], Tensor[(90), float32], Tensor[(12, 1, 16), float64]) */
}

def @func_3923(%var_3921: uint32) -> (Tensor[(5, 1, 2), float64], uint32, Tensor[(1456), float32], uint32) {
  @func_3920(%var_3921) /* ty=(Tensor[(5, 1, 2), float64], uint32, Tensor[(1456), float32], uint32) */
}

def @func_568(%var_538: uint32, %var_550: Tensor[(792), float32]) -> (Tensor[(12, 2, 4), bool], Tensor[(11, 9, 8), float32], Tensor[(792), float32], Tensor[(11, 9, 8), float32]) {
  %1030 = cast(%var_538, dtype="bool") /* ty=bool */;
  %1031 = cast(meta[relay.Constant][63] /* ty=Tensor[(12, 2, 4), uint32] */, dtype="bool") /* ty=Tensor[(12, 2, 4), bool] */;
  %1032 = cast(%var_550, dtype="float32") /* ty=Tensor[(792), float32] */;
  %1033 = reshape(%1032, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float32] */;
  %1034 = @func_326(%1033) /* ty=(Tensor[(11, 9, 8), float32],) */;
  %1035 = %1034.0;
  %1036 = cast(%1035, dtype="float32") /* ty=Tensor[(11, 9, 8), float32] */;
  %1037 = reshape(%1036, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float32] */;
  %1038 = @func_326(%1037) /* ty=(Tensor[(11, 9, 8), float32],) */;
  %1039 = equal(%1030, %1031) /* ty=Tensor[(12, 2, 4), bool] */;
  %1040 = %1038.0;
  (%1039, %1035, %var_550, %1040)
}

def @func_3127() -> (Tensor[(5, 1, 2), float64],) {
  @func_3125() /* ty=(Tensor[(5, 1, 2), float64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

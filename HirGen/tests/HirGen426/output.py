import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_272 = relay.var("var_272", dtype = "float32", shape = (11, 9, 8))#candidate|272|(11, 9, 8)|var|float32
uop_273 = relay.acos(var_272.astype('float32')) # shape=(11, 9, 8)
output = relay.Tuple([uop_273,])
output2 = relay.Tuple([uop_273,])
func_326 = relay.Function([var_272,], output)
mod['func_326'] = func_326
mod = relay.transform.InferType()(mod)
var_327 = relay.var("var_327", dtype = "float32", shape = (11, 9, 8))#candidate|327|(11, 9, 8)|var|float32
output = func_326(var_327)
func_328 = relay.Function([var_327], output)
mutated_mod['func_328'] = func_328
mutated_mod = relay.transform.InferType()(mutated_mod)
var_538 = relay.var("var_538", dtype = "uint32", shape = ())#candidate|538|()|var|uint32
const_539 = relay.const([[[-4,6,6,-6],[3,4,6,-4]],[[-4,2,-4,-7],[-4,7,-7,-3]],[[5,1,-3,2],[6,3,-2,4]],[[8,1,8,-2],[-10,-4,5,-8]],[[-7,2,5,-7],[3,-6,6,9]],[[6,7,-8,8],[-9,-7,-10,-5]],[[-5,6,-2,-4],[2,8,-9,-2]],[[-10,1,-8,-8],[-1,-1,1,7]],[[-4,7,-7,-1],[-8,-7,-9,-2]],[[-5,-7,-9,-10],[-9,1,-9,-5]],[[1,-7,10,7],[6,-6,10,3]],[[10,2,2,-2],[-5,10,-1,-4]]], dtype = "uint32")#candidate|539|(12, 2, 4)|const|uint32
bop_540 = relay.equal(var_538.astype('bool'), const_539.astype('bool')) # shape=(12, 2, 4)
func_326_call = mod.get_global_var('func_326')
func_328_call = mutated_mod.get_global_var('func_328')
var_550 = relay.var("var_550", dtype = "float32", shape = (792,))#candidate|550|(792,)|var|float32
call_549 = relay.TupleGetItem(func_326_call(relay.reshape(var_550.astype('float32'), [11, 9, 8])), 0)
call_551 = relay.TupleGetItem(func_328_call(relay.reshape(var_550.astype('float32'), [11, 9, 8])), 0)
func_326_call = mod.get_global_var('func_326')
func_328_call = mutated_mod.get_global_var('func_328')
call_563 = relay.TupleGetItem(func_326_call(relay.reshape(call_549.astype('float32'), [11, 9, 8])), 0)
call_564 = relay.TupleGetItem(func_328_call(relay.reshape(call_549.astype('float32'), [11, 9, 8])), 0)
output = relay.Tuple([bop_540,call_549,var_550,call_563,])
output2 = relay.Tuple([bop_540,call_551,var_550,call_564,])
func_568 = relay.Function([var_538,var_550,], output)
mod['func_568'] = func_568
mod = relay.transform.InferType()(mod)
mutated_mod['func_568'] = func_568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_568_call = mutated_mod.get_global_var('func_568')
var_570 = relay.var("var_570", dtype = "uint32", shape = ())#candidate|570|()|var|uint32
var_571 = relay.var("var_571", dtype = "float32", shape = (792,))#candidate|571|(792,)|var|float32
call_569 = func_568_call(var_570,var_571,)
output = call_569
func_572 = relay.Function([var_570,var_571,], output)
mutated_mod['func_572'] = func_572
mutated_mod = relay.transform.InferType()(mutated_mod)
const_613 = relay.const(-8.826477, dtype = "float64")#candidate|613|()|const|float64
var_614 = relay.var("var_614", dtype = "float64", shape = (9, 3, 16))#candidate|614|(9, 3, 16)|var|float64
bop_615 = relay.minimum(const_613.astype('float64'), var_614.astype('float64')) # shape=(9, 3, 16)
uop_628 = relay.log(bop_615.astype('float32')) # shape=(9, 3, 16)
func_326_call = mod.get_global_var('func_326')
func_328_call = mutated_mod.get_global_var('func_328')
const_648 = relay.const([-4.029913,4.073185,9.364522,-1.171256,5.955020,-8.262630,4.629039,1.130675,-7.660990,5.580602,-8.276841,-5.033375,5.862187,6.531555,5.571082,1.235006,1.602147,4.233030,6.267409,5.953420,-2.459815,-7.688362,8.960098,4.923692,1.369540,-2.924590,1.922410,4.361453,-4.114393,7.828231,6.889167,3.456745,-6.173242,1.422996,-6.891396,-0.277347,4.979987,-6.935269,-2.104673,-6.395619,-5.247261,1.667335,-3.932028,-4.040627,-9.612819,-7.029335,-7.504033,-1.716955,-1.663160,3.852874,2.531989,-4.784049,-3.838336,5.799248,-8.779003,-9.051634,-9.772933,-1.522700,0.345776,-4.021067,-6.031511,1.251703,-4.772788,8.910592,-5.706342,-9.674331,-2.476911,-8.756979,7.492192,-6.740681,3.343563,4.952970,-5.367080,-6.796961,-9.810254,5.339965,2.167837,-7.818586,7.474523,1.861120,-1.001426,7.023127,-7.602409,5.237820,8.935793,8.994772,-2.785452,0.419387,-8.414422,-1.669474,-9.111333,9.338354,6.507816,5.970888,-1.002053,-8.520651,-4.550768,8.975362,0.339862,1.887749,-6.924240,4.395804,6.953780,-7.007923,5.080733,-5.780582,-7.433704,6.898274,5.663988,-0.414209,3.271064,-1.843894,-0.987497,-4.333381,-0.089390,9.933019,-2.200250,-3.334829,9.076407,8.125420,5.812874,-0.892621,-4.780122,7.014824,-4.339819,1.896652,-8.944764,-5.460981,4.342214,-2.332521,-1.723440,6.817682,7.262382,-8.988067,-8.290869,8.017122,7.136959,9.134152,5.061110,-1.289128,3.696225,-0.399861,8.924036,-4.958742,4.334554,4.923365,-7.278578,7.031808,-1.282524,-2.727054,7.170049,-5.507785,2.228485,-5.069251,5.260093,9.178131,-9.894455,-9.972413,-6.137584,5.049190,-2.417148,0.215559,5.807785,-4.440051,-5.200517,-7.087814,-3.453759,-4.524298,-3.348556,-0.827766,2.838792,-3.611355,1.366940,-0.988418,-8.270017,-1.896485,-5.084059,4.838174,-7.389847,0.588045,8.046770,-8.760614,-2.578074,9.487561,-2.886923,-5.879542,8.297324,5.180062,-0.045471,-6.230889,1.970956,4.633673,-2.331678,0.369040,-2.104786,9.078892,-5.379322,0.426784,2.096836,-9.577010,-7.544297,9.038120,5.983011,0.872162,-9.349779,-2.562576,-2.343338,9.224933,3.349461,7.908948,2.701314,2.096644,-3.891086,0.769550,3.506165,9.785211,-6.550912,-4.420019,-1.108405,1.873892,5.731546,-4.774304,8.365095,9.802239,8.907515,-1.509012,7.356485,-0.607879,-0.205210,4.690631,0.342556,-0.579603,-7.179760,-2.573271,-0.587365,7.456674,1.211075,8.656547,-7.573746,2.535662,3.935286,-8.334855,2.050067,-2.834570,-4.317384,-4.536349,2.330325,-7.077208,4.634131,-6.439686,-3.047271,0.581931,5.049890,5.675508,3.494978,4.209612,-1.902873,-6.426907,6.536125,-1.304934,-9.359031,8.658346,8.152934,1.972265,-8.222353,-0.524662,-8.916144,3.885038,-5.755075,6.818579,4.112653,-7.604707,-9.772009,-9.698710,6.839324,-3.090428,7.539617,1.909906,7.450444,2.446819,-6.304892,-9.849048,2.125662,4.222325,-2.125967,-8.508721,9.255252,-1.430785,8.335621,8.976908,8.868546,-1.274924,-5.092231,0.142094,8.761571,6.861085,-5.718700,-0.906841,6.785169,1.962785,-1.845808,-4.193357,-1.650102,0.044864,1.636566,-0.887340,-0.445617,8.327708,2.570987,-9.302461,3.036413,-2.538563,-9.977276,3.611689,-8.284380,3.873682,-2.015860,4.246038,-3.811298,-6.307139,2.592395,-3.939561,-1.496141,-5.844400,-5.746361,-7.184466,1.092410,1.265338,0.888724,5.388138,3.208252,-9.831526,-2.790774,-0.535700,-9.099651,-2.560884,-0.066604,-5.359272,-9.320648,-2.373876,1.923743,-6.183806,4.161153,-7.663516,2.716046,9.608549,7.127305,-0.955795,0.303205,-8.875365,-8.158203,4.245576,-0.576949,6.088625,0.713967,9.024012,-2.198972,7.966971,-3.419987,-8.969458,1.059715,-9.432634,4.882258,1.092861,-1.924811,-1.072603,-5.941597,7.439171,2.029100,-9.046022,-7.681145,-9.858528,0.976960,-1.846184,2.942911,6.466883,-0.728809,5.573667,4.278460,-7.145292,1.258309,-0.457909,5.023277,-9.790935,-8.648878,5.055019,-8.369500,0.443255,3.501149,8.598528,-2.385300,4.137756,5.889744,-5.395177,7.877240,-9.540978,0.283218,6.198416,-3.408756,-1.274972,-7.609720,3.045104,6.810236,-1.400670,-2.630253,8.374848,7.067153,-5.023049,-2.674234,0.616951,6.740056,-0.827347,-7.977967,5.101140,6.154195,1.877799,2.167201,-0.120175,8.430930,1.303083,9.661135,-9.510586,-3.299413,2.879367,9.716068,-0.735028,-6.591388,5.492694,-0.084097,0.855446,-5.060398,2.434219,6.558104,-2.659412,8.282311,-8.807089,1.867977,7.758390,1.926732,-4.918934,3.247961,-2.704107,1.404788,-3.675790,-6.656849,7.520681,-9.284774,7.270670,-9.956603,-4.474374,2.618004,-4.032784,7.074238,-5.910272,-6.132934,5.383028,-1.026166,0.858599,0.098918,2.663299,2.301686,2.475208,-5.755410,7.344376,-9.285690,-7.008590,4.518269,-6.956927,-3.243491,2.106381,5.270637,-8.571900,-5.325077,6.018686,3.583099,-3.068797,7.043090,-2.125624,-2.938749,3.643990,2.448223,-1.703311,-0.341586,3.174282,-1.158977,-4.542841,8.981493,2.871979,-0.046422,2.794843,8.914806,9.018934,3.016591,-0.326966,9.317365,3.712058,4.946685,8.030314,-2.027504,-1.454657,-2.722669,8.068878,4.056921,6.683973,6.562526,0.988866,-5.294845,-4.879826,-4.735294,8.279464,-5.906056,-7.245816,0.664339,2.423909,-1.490108,-7.105780,-8.238733,-9.120835,-3.970087,-4.231498,3.324302,-6.774559,-4.805179,0.968777,-3.557248,-9.600514,2.317548,-3.745301,9.668175,2.766572,-5.962792,-0.737041,4.211966,-8.494629,-4.617219,9.065130,1.791478,-4.560890,-4.598633,-4.915115,-0.387829,9.155440,-6.938362,-9.476047,-0.481117,8.636335,2.978572,6.183943,3.920341,-8.719414,-0.866525,1.910913,-6.157932,9.296004,0.112772,4.675580,0.708990,-9.138195,-7.289163,3.024404,-2.762309,6.202359,-7.014182,-8.476140,4.347780,6.347104,-2.044382,5.583216,-4.438248,-8.013217,-1.901373,-4.782986,-3.782667,6.202518,3.803008,1.628911,-6.867950,-9.009160,-7.430746,-5.639688,6.366116,2.047261,-6.427612,-4.530854,-9.239076,-1.538616,-4.760613,-3.652609,6.231038,-2.535396,-9.560606,-5.624470,-4.316493,1.354141,2.204197,-3.865399,3.101623,4.527145,-6.434626,4.620406,-2.025493,-0.664992,-4.138986,8.399844,-7.581264,-2.134245,-7.446253,1.564514,4.496064,0.579341,-8.403530,-2.065449,2.000585,3.385646,8.979243,-5.799279,1.066322,5.991087,0.244892,9.481774,-9.832553,-0.087632,9.081657,9.580848,-7.204463,0.903896,3.333595,1.981420,9.331548,-0.841267,2.290999,-9.835972,6.559387,-8.774237,3.690190,7.463235,1.991237,-1.037699,3.782757,-7.507260,-0.289998,1.291468,5.043175,-0.160803,0.519316,7.671967,-7.647437,0.219721,6.575986,-1.214269,-6.706910,-6.112268,-0.217090,-2.802700,9.086062,2.167971,-6.069121,1.754655,3.957628,4.347821,-6.426003,6.386816,-1.986524,9.595724,-1.851986,-6.002106,0.974419,8.161829,7.006660,5.509533,-1.676979,-3.984983,5.512994,-9.104131,-6.450180,-5.841556,-6.024713,9.088459,-3.840309,9.228021,-0.162654,4.991475,-9.156445,7.960638,-9.731180,-2.267745,-7.357928,-2.011004,-9.733963,-0.926793,-7.160723,-6.978924,6.151698,5.117111,-3.529485,-6.086686,1.302754,-8.548966,-9.204604,5.000699,-4.398097,1.991761,9.622433,3.386983,-0.369530,-1.220882,-2.828688,-2.563576,-3.870991,8.679156,-6.968104,6.066961,-2.353904,8.381588,-7.001399,3.464043,0.073757,7.334609,-6.945864,-7.678835,-5.946031,8.837780,2.921392,-1.310976,-6.328807,-4.980198,-4.432331,-2.339622,7.638890,1.956642,-1.609629,8.144587,-6.926316,-1.446174,2.964678,5.918918,1.863966,-2.997453,-9.286049,-4.399233,-4.773104,5.112863,9.314610,4.910418,-9.950957,-5.349504,-1.490968,-9.135029,-9.294946,1.688509,0.173095,5.374620,-2.877974,-9.897956,6.847253,5.378142,1.551649,-9.649419,-9.916739,-3.810567,-6.734495,6.360905,-1.893753,7.283024,8.535753,-1.216106,-1.588281,5.644609,3.276718,7.255412,0.983093,-7.277529,-0.922357,4.856940,1.950865,1.471552,-0.060154,-1.997401,-2.005154,2.506128,-9.216345,-2.821684,0.972448,8.327438,8.970788,5.817516,5.200724,-8.156770,-6.159047,-8.150303,8.850799,-6.603869], dtype = "float32")#candidate|648|(792,)|const|float32
call_647 = relay.TupleGetItem(func_326_call(relay.reshape(const_648.astype('float32'), [11, 9, 8])), 0)
call_649 = relay.TupleGetItem(func_328_call(relay.reshape(const_648.astype('float32'), [11, 9, 8])), 0)
func_568_call = mod.get_global_var('func_568')
func_572_call = mutated_mod.get_global_var('func_572')
call_650 = relay.TupleGetItem(func_568_call(relay.reshape(const_613.astype('uint32'), []), relay.reshape(const_648.astype('float32'), [792,]), ), 3)
call_651 = relay.TupleGetItem(func_572_call(relay.reshape(const_613.astype('uint32'), []), relay.reshape(const_648.astype('float32'), [792,]), ), 3)
output = relay.Tuple([uop_628,call_647,const_648,call_650,])
output2 = relay.Tuple([uop_628,call_649,const_648,call_651,])
func_659 = relay.Function([var_614,], output)
mod['func_659'] = func_659
mod = relay.transform.InferType()(mod)
var_660 = relay.var("var_660", dtype = "float64", shape = (9, 3, 16))#candidate|660|(9, 3, 16)|var|float64
output = func_659(var_660)
func_661 = relay.Function([var_660], output)
mutated_mod['func_661'] = func_661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_810 = relay.var("var_810", dtype = "float32", shape = (10, 3, 3))#candidate|810|(10, 3, 3)|var|float32
uop_811 = relay.cos(var_810.astype('float32')) # shape=(10, 3, 3)
func_568_call = mod.get_global_var('func_568')
func_572_call = mutated_mod.get_global_var('func_572')
const_823 = relay.const(-5, dtype = "uint32")#candidate|823|()|const|uint32
const_824 = relay.const([-0.247520,-2.413901,8.462526,9.221114,6.634704,3.385977,-9.265000,-8.176759,5.244125,-1.177586,7.534722,6.311033,-7.478371,-3.573684,-6.829670,-6.624529,-8.179583,8.070486,1.714333,-1.582251,6.631902,-1.512205,-4.201308,4.295853,-3.697352,6.945885,2.715833,-7.171319,-6.847168,2.048617,8.912979,2.193629,-2.817249,-8.986258,6.966564,-0.214392,-0.712545,0.117486,-5.026171,-9.043356,-4.910088,-0.779954,-5.032594,3.295512,-3.737466,-2.959096,-1.749320,4.136497,-8.780161,-5.745641,-6.378387,-9.251367,0.605990,2.388100,-0.533204,-0.310431,9.877699,-1.837847,-2.200968,6.682395,-9.935462,-8.638875,2.281284,2.341576,2.712338,-4.672727,-4.235775,4.918774,-2.504259,7.705737,-7.202870,0.202982,3.163170,-4.998179,0.985900,-5.507606,8.255552,-9.317181,-7.473182,-3.363348,6.422919,0.358623,3.044836,-4.843200,6.394301,-3.266601,3.992663,3.512481,4.130979,-8.121091,1.551837,-1.673012,-0.223102,-9.473664,-6.224135,-9.515263,8.353228,1.734679,-7.957641,-2.058379,-2.366966,-2.690003,-7.668064,-6.699057,2.625671,-8.867167,7.132472,6.855923,1.301376,-2.299522,-1.423195,6.688117,-6.974654,-9.567002,-2.817782,-3.195406,8.629555,5.896461,-4.277107,6.486596,-7.534811,9.225198,-8.284798,3.769730,-1.023096,1.013747,1.106933,-2.646756,5.838144,-2.610808,7.083785,-8.319901,8.731708,-1.177741,1.779220,2.626290,3.010495,7.854834,4.948684,0.400761,-8.139881,-2.152234,7.825281,4.871771,0.526427,0.295565,-9.768910,2.429660,1.014983,-2.268017,5.718621,-2.463544,-4.999291,-3.539989,3.028322,0.726193,-6.005889,5.506313,-5.839051,8.516787,-0.595897,-8.746063,-2.010424,6.210477,1.055873,1.845241,9.635618,8.843897,2.830591,-9.420664,5.784833,9.356632,6.704551,7.699712,8.235787,-2.971416,6.002687,0.299893,-2.558597,6.506156,-8.394405,4.636849,7.822182,8.030402,-8.755745,7.607197,0.953146,-7.020531,5.298052,-2.019051,-8.434096,-1.891874,5.681793,5.035002,-4.170211,6.754588,5.619227,5.982917,5.910776,-7.437404,-3.817101,0.418422,-5.184406,-5.933651,8.565360,-8.780668,0.387918,-4.559397,-6.336896,5.459369,-2.253161,8.858673,3.852677,-3.408971,4.093743,-6.097216,-9.910808,6.603295,2.234380,-8.103785,-5.726909,-9.337931,-4.561175,-8.890402,6.944435,8.605296,-3.912812,0.242601,3.837493,-4.619426,-1.202197,-4.532591,-8.695019,3.603700,-9.776644,4.289038,1.037618,-7.376637,-8.828513,-3.312225,-5.199881,2.586669,1.575139,-4.007459,1.273304,5.306944,-9.253552,-3.918894,-3.526168,-4.453285,-6.064362,4.113855,-7.928348,3.256934,2.404032,-3.954645,1.312270,-6.872906,-9.911716,-7.466325,-1.946419,-8.923124,1.098497,1.011437,-1.770460,-0.426353,3.880376,-1.486943,-1.805718,-5.453567,-1.001293,6.693202,0.544245,-2.496825,6.212436,3.710323,-7.353077,-3.502291,-9.401736,4.061688,9.876700,1.180089,-9.718994,-0.031000,4.711366,-1.693254,8.186790,-6.226618,4.269120,2.518863,5.811692,-7.407715,-1.721478,5.011790,2.608607,2.600757,1.647812,3.550200,8.273129,-8.508279,2.701699,-2.128263,-7.947345,6.589798,7.414137,-6.371508,9.208305,-9.553685,9.477050,-0.116696,7.012231,-2.213326,2.762709,-6.451468,4.003076,8.848008,8.189445,-2.690666,-9.658178,1.213848,-0.426789,-0.304586,3.141552,4.015881,0.894864,5.957875,9.133600,4.898235,6.256728,8.972427,-4.938163,5.354519,-6.791110,6.925089,7.045930,-7.561084,0.728225,5.492201,-8.722227,3.314581,8.612629,-4.255840,-3.106533,5.756537,1.468821,7.482012,8.275164,9.215657,-7.975169,2.406010,7.391335,1.880574,-0.116568,4.391220,7.619300,-0.041494,0.755484,8.516357,-2.307490,-6.341771,-0.192005,2.747071,-1.041384,3.697497,-5.735706,9.528044,7.509649,-5.492189,9.007068,-9.250094,-3.664279,7.069851,8.898074,-1.861271,7.417276,9.978115,-7.808347,-1.862638,4.881967,3.325536,-2.276003,2.498533,4.018667,8.052732,-4.402319,3.673522,4.162758,-9.488716,1.262732,-0.234105,7.531768,-0.342239,3.686792,9.367973,1.196281,-6.884556,0.735257,6.651082,1.100192,4.234748,-7.953087,-4.100775,-8.862239,-4.320310,0.981260,-9.717871,-9.062773,-7.372215,7.661075,-3.316525,-1.623435,-9.580034,-2.455582,-0.651606,4.649560,5.824034,-5.114434,0.913783,4.475856,2.297437,-0.412239,2.667584,-9.340052,-7.417088,4.581370,-3.889396,2.198732,3.501966,-0.050738,9.842069,-9.387087,8.080416,4.749510,5.602465,-0.933720,4.198353,-2.142289,6.738198,8.988206,9.491928,-7.853837,-2.014986,-5.685982,-5.006630,-0.396983,-9.808286,-5.908885,3.108393,-7.068882,-8.027501,8.590610,-4.141939,7.121526,8.948872,4.632245,2.509865,-3.475017,-7.056431,-5.867186,-8.079170,-7.951065,0.954554,-4.595251,-7.191073,8.610165,-9.865216,6.408047,-8.025914,-4.561080,2.028572,-6.415213,-8.558336,-9.395918,-8.675726,1.705539,5.249515,2.655672,-5.082427,-6.876620,8.022177,-7.215293,-4.978560,-7.151522,-5.657673,-3.351602,-3.846165,-5.215620,-3.157485,8.909818,6.565735,4.870853,9.173775,2.001552,-2.535168,-8.104711,8.313383,8.579774,-8.700596,9.365514,1.734850,-3.974685,-0.080258,-5.370444,-6.350294,8.823100,-7.555927,-7.894624,-9.609756,4.499370,5.837809,-0.569000,-8.467379,5.245980,9.880703,6.666351,-3.386321,-7.546692,9.793932,6.277974,1.011504,0.595526,9.935749,7.420523,-7.442940,4.776584,-0.147880,-3.431561,1.257205,-8.470988,-4.530056,2.079798,5.383480,-9.765455,-9.433939,-7.983120,-2.741572,7.047619,-8.718594,4.987417,-6.329714,-9.033659,-8.150544,6.373366,-3.907900,-9.827339,-7.401656,-9.410349,-4.137212,-4.079651,-4.945264,-0.165426,-5.191319,3.655518,-9.735259,4.488825,6.974373,9.068792,8.571148,9.317140,-2.694897,-2.345181,-6.417257,8.759676,4.034611,7.129721,-6.776472,7.181866,-0.214997,7.105305,1.698842,6.214474,6.206633,3.106475,4.278626,-6.608734,-4.320390,-2.679701,0.221979,0.495714,7.202691,6.913300,-5.097908,1.326699,4.676119,2.506352,7.942634,4.358993,-6.829249,7.288201,1.208269,0.172025,4.148971,-4.130766,6.050971,4.127312,5.462502,8.795609,8.355746,-8.197018,7.020757,-5.487518,-2.428082,9.894117,-1.542548,-0.222956,5.756319,3.721622,-6.255421,4.717365,-8.939581,-2.962886,9.238687,5.016648,-4.276577,1.072214,-2.875850,1.464022,5.234618,7.842950,2.572585,-1.725200,0.686876,7.395050,2.592084,-4.990277,-1.746238,6.804461,-3.495332,-1.553942,-9.558143,-0.288513,6.421962,8.127035,5.509438,-1.142198,4.618159,4.986227,4.670960,-8.554446,7.250348,-7.172259,4.337634,-6.121128,-2.107977,3.696310,-5.988495,7.005065,8.514691,1.990059,1.808139,1.966460,-5.972030,-0.394354,-6.223462,-1.126556,3.216887,1.753301,2.638533,-4.196536,-4.583875,-0.754582,4.227225,0.747452,2.884870,0.412471,-9.970838,9.443473,2.922220,-4.472155,-2.464896,-1.406532,0.471524,-6.577238,6.953018,6.002132,-3.442695,-6.113844,5.072775,-2.035923,-4.787884,-9.270987,9.170618,9.975270,8.586971,-2.686344,1.294068,2.238994,-6.468046,0.970406,-6.430870,2.389353,-0.474070,-3.498015,9.029914,-1.421342,5.688510,4.934982,-7.273200,6.237142,-0.885683,8.895166,-1.355965,9.080970,7.590136,-3.515994,0.249942,-7.980781,-8.031340,9.675521,-9.575969,3.544722,-4.449793,-8.556167,-5.868251,-6.875558,0.297919,-7.632644,-9.335684,-9.284953,-4.534276,0.087715,-8.632588,0.102945,6.211598,2.868306,5.423355,4.659111,4.268927,-2.618498,6.023163,-3.257948,1.040886,5.312866,-0.658051,1.215850,-0.676705,-0.593751,-2.268549,0.421923,5.284755,1.118716,-4.659164,-7.235515,-6.521338,7.206182,-6.322445,-0.774847,-4.995638,1.628590,4.495424,5.093866,-0.360033,3.893708,4.965208,-9.690156,0.039448,8.110305,-5.914082,8.503941,9.787051,-4.077906,-8.732531,4.566956,-7.342998,-6.399461,8.906919,-8.067235,6.405889,-8.257166,-3.991105,8.631517,9.720299,7.963803,8.126938,-8.260270,6.425717,-0.953115,-2.127159,-6.681391,-5.095755,-9.069159,-6.952916,0.819080,-0.671181,8.722784,-6.931412,-3.967528,2.333255,7.785627,-3.987815,5.116134,7.426926], dtype = "float32")#candidate|824|(792,)|const|float32
call_822 = relay.TupleGetItem(func_568_call(relay.reshape(const_823.astype('uint32'), []), relay.reshape(const_824.astype('float32'), [792,]), ), 1)
call_825 = relay.TupleGetItem(func_572_call(relay.reshape(const_823.astype('uint32'), []), relay.reshape(const_824.astype('float32'), [792,]), ), 1)
output = relay.Tuple([uop_811,call_822,const_823,const_824,])
output2 = relay.Tuple([uop_811,call_825,const_823,const_824,])
func_826 = relay.Function([var_810,], output)
mod['func_826'] = func_826
mod = relay.transform.InferType()(mod)
mutated_mod['func_826'] = func_826
mutated_mod = relay.transform.InferType()(mutated_mod)
var_827 = relay.var("var_827", dtype = "float32", shape = (10, 3, 3))#candidate|827|(10, 3, 3)|var|float32
func_826_call = mutated_mod.get_global_var('func_826')
call_828 = func_826_call(var_827)
output = call_828
func_829 = relay.Function([var_827], output)
mutated_mod['func_829'] = func_829
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1431 = relay.var("var_1431", dtype = "float64", shape = (12, 11, 13))#candidate|1431|(12, 11, 13)|var|float64
uop_1432 = relay.erf(var_1431.astype('float64')) # shape=(12, 11, 13)
output = uop_1432
output2 = uop_1432
func_1437 = relay.Function([var_1431,], output)
mod['func_1437'] = func_1437
mod = relay.transform.InferType()(mod)
var_1438 = relay.var("var_1438", dtype = "float64", shape = (12, 11, 13))#candidate|1438|(12, 11, 13)|var|float64
output = func_1437(var_1438)
func_1439 = relay.Function([var_1438], output)
mutated_mod['func_1439'] = func_1439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1569 = relay.var("var_1569", dtype = "float32", shape = (16, 7, 13))#candidate|1569|(16, 7, 13)|var|float32
uop_1570 = relay.cos(var_1569.astype('float32')) # shape=(16, 7, 13)
var_1584 = relay.var("var_1584", dtype = "float32", shape = (16, 7, 13))#candidate|1584|(16, 7, 13)|var|float32
bop_1585 = relay.greater_equal(uop_1570.astype('bool'), relay.reshape(var_1584.astype('bool'), relay.shape_of(uop_1570))) # shape=(16, 7, 13)
func_568_call = mod.get_global_var('func_568')
func_572_call = mutated_mod.get_global_var('func_572')
var_1632 = relay.var("var_1632", dtype = "uint32", shape = ())#candidate|1632|()|var|uint32
const_1633 = relay.const([4.816254,2.361791,9.917841,8.050143,-0.285848,2.310258,-9.848687,-9.842792,2.251309,5.640519,-8.784807,-0.808855,6.699817,-9.896441,8.583652,5.348515,4.671234,8.372690,4.095300,3.557901,-4.177057,-2.061417,-7.199734,5.436353,-7.529382,-4.097656,7.886578,-1.258367,-4.224972,1.205955,0.604249,-5.876917,1.232309,6.390430,-6.162983,-4.199449,-4.989954,2.763721,-9.154228,-2.716763,9.822298,7.437505,2.889872,4.570722,-3.310186,1.345663,1.883633,0.069249,3.158850,3.107682,7.330923,7.468381,-4.750306,-6.146158,2.948263,-4.033156,-4.818635,-7.790735,0.504488,2.643436,-6.175505,0.505752,-1.659294,7.022221,-5.228298,7.798888,-3.016075,4.502912,7.652705,8.741413,-6.228370,6.984980,-5.203349,-2.091839,5.708979,0.788792,-4.321841,3.679785,5.956325,-9.999143,4.119476,2.473704,-9.989771,-8.446177,9.261535,5.694744,7.961339,-2.770502,-3.791342,-9.414671,-1.517448,8.994801,-8.342038,8.633600,0.267284,3.167953,8.526442,4.916736,8.093834,4.368778,7.070541,-6.016015,4.994547,-7.106405,6.181551,1.348904,0.903440,-0.015196,2.278359,7.180859,-5.914151,0.292088,-3.879109,5.469767,-8.404234,-3.365446,5.964202,5.835245,7.458887,-2.293281,-3.976709,-3.063048,9.823797,1.546465,-3.913423,1.949925,-7.779591,-5.324689,2.366836,-3.504225,-9.485254,-9.512200,-5.453817,-4.889756,6.458696,-5.523808,-0.160657,8.189321,-9.874238,-7.979823,-1.174347,1.061852,-5.320548,4.806047,6.348824,9.120162,-9.627920,-9.062602,7.675820,-6.084126,9.587184,-9.742197,5.918462,2.723294,0.397899,-5.758310,-2.913647,-6.231055,4.287733,-7.747983,2.294966,-0.757973,2.793449,-0.080005,6.167315,-5.503108,-0.104140,-5.403652,-5.297018,5.777178,1.465285,6.683165,3.503424,-8.854645,6.324194,9.466536,-2.209536,-8.227926,-2.293767,8.847823,3.615144,0.431504,-5.956100,2.329877,1.177655,-8.475085,-5.306429,-1.754052,0.135144,-9.635231,-1.797898,-6.450633,7.241820,-9.050424,6.056757,5.998404,6.449364,-7.332831,-1.974917,7.822974,-2.161504,-8.179108,0.173173,-0.282382,5.225242,-7.029447,0.064796,1.288679,3.100458,-4.670087,3.513509,-4.856919,-2.294177,-0.390419,-4.388576,3.313188,-3.898514,-6.963125,-2.983149,-1.119478,2.222569,1.110301,5.566367,-0.709324,2.440176,-8.565993,-6.031251,2.878269,5.564777,-7.589661,9.547958,2.581093,0.199662,-3.694963,-2.782429,-2.856485,3.870425,-2.210886,-6.083512,4.305377,-8.159380,-8.448039,-2.639918,5.857725,0.089147,-0.888474,1.465179,-3.066143,6.659410,2.591790,-4.105927,7.891916,3.934359,-2.892132,-9.969114,9.892299,4.300792,-3.514781,-2.509755,-4.546479,5.667529,-0.176256,-7.550274,6.273057,5.878651,8.768258,-0.586838,1.277094,0.958536,8.007260,-0.962575,-1.164475,-2.049859,0.692933,-4.280276,7.838262,-5.683222,4.987091,-7.764325,-6.897507,6.734456,0.287383,2.552377,9.834994,2.791298,-1.066760,-2.525929,2.651275,4.720563,6.443295,-0.812056,4.469757,-8.552192,8.737903,-5.506639,1.290399,-2.576674,2.597852,6.026826,-3.957681,-4.369238,-2.538725,2.298057,2.409568,9.430723,-6.492158,8.352672,-0.252362,-4.110003,8.314687,-3.005465,-6.119567,4.260493,-3.041760,8.044299,6.540809,8.537869,-3.460728,-5.319380,-9.400313,-4.002418,3.465922,-3.824617,0.874242,-3.194184,8.527997,1.450157,9.379808,-7.245362,-7.900806,-3.722813,7.287442,4.341354,-4.433984,8.408509,4.380396,9.894956,-0.078383,9.207873,9.912646,-2.593885,-8.387635,-2.044582,-4.044345,6.101104,-6.738430,3.128555,1.406677,0.010195,-6.145845,-7.736817,-4.876781,-4.331525,-1.935430,3.265492,2.009443,-5.102032,6.865279,1.947528,8.934506,-0.053528,-6.881606,0.934310,4.624372,8.268615,-5.395437,7.911885,-3.579814,9.700050,6.364750,-7.840622,-5.478202,-2.858815,2.936186,3.400128,-5.461835,0.390899,5.338972,3.162258,0.330530,-1.463108,-2.319321,7.516988,-0.893025,7.951111,7.432287,-6.073477,0.509561,2.973183,6.979799,7.183305,1.531667,-6.166024,-0.148604,5.005298,4.647021,8.244977,2.748897,-7.503903,6.262915,-3.103428,5.714550,-7.559114,8.048437,9.221167,-7.328379,7.740063,5.579975,7.628255,6.621549,-0.919884,-2.844968,-0.098131,-4.748141,7.944553,4.553841,-1.227914,4.073476,5.241562,-0.855693,3.418281,0.264282,-3.974662,-4.186600,-9.111827,-8.566758,-6.926971,-0.256824,1.810350,7.458177,-2.030049,-8.031699,4.751125,0.494589,-8.126486,-4.835492,2.078788,-5.624947,-6.693090,2.324064,-8.815114,2.001614,-8.308804,-9.698408,-3.475507,0.689533,-7.543692,6.887152,7.168886,-4.783822,0.175660,8.634351,-3.422515,-0.080773,-4.774908,-4.849808,-7.355049,-2.629165,3.584818,-2.590694,-5.621721,2.546805,2.631035,8.713120,2.223534,-5.194923,-9.960027,2.462762,-4.319074,0.509479,5.770507,3.361059,-5.571327,8.371929,-5.055886,9.482754,0.897804,9.143844,-2.855081,6.872468,-9.188744,-9.713575,2.493141,-9.946135,1.542017,-1.369181,1.644696,-7.111542,7.274355,6.678958,9.140803,4.338075,0.689788,9.559422,6.418133,-3.387945,2.436485,-6.851580,-9.549974,-3.346388,-3.868069,1.482313,-6.355082,5.027723,6.960348,-1.512836,-6.138845,4.189146,-0.951647,2.105565,5.044709,-1.435271,-6.519228,2.334248,5.824649,-4.293346,-2.259014,2.412397,-2.013328,7.873371,3.401983,-1.087531,8.314544,-1.464310,8.377761,1.923274,3.838109,2.839829,-0.729116,-8.629806,-0.700208,0.531638,-0.194652,2.268455,-5.907609,-0.507227,-5.094651,7.417985,-3.155912,-9.441082,9.742107,-1.905975,4.275280,-4.999289,-4.356503,2.796207,2.426775,-8.110310,8.217337,-3.958621,-5.986158,6.777310,-0.179622,-5.790935,-3.538265,-4.610881,-1.081231,-1.869057,-5.309078,8.599450,-7.205982,4.713495,5.966886,3.152915,6.460864,-7.910910,8.958696,5.190803,-0.510395,-5.640159,-2.854522,-8.661875,-8.333643,-0.497044,1.643575,6.945483,-8.201152,-9.714586,-4.535241,-4.882768,4.345501,4.574208,-8.384846,-5.480020,-1.599924,-2.865450,6.314963,6.854981,9.027051,-9.124670,6.280198,-6.452981,-6.485396,-2.197410,8.263990,8.553176,0.970744,6.858346,7.878361,5.483528,-9.027419,-1.716218,-7.866824,1.122852,2.451014,7.116872,-3.621664,-7.240683,-9.781594,0.005527,4.460743,-7.817449,-0.306040,-3.409046,-2.468060,8.079628,7.759234,-2.980808,-7.301860,-0.787143,-3.178095,-0.713668,9.728922,0.153611,9.323002,0.367710,7.426314,-1.428739,7.591992,7.794872,-7.285150,6.887425,-4.191155,5.830125,5.556836,-2.601700,9.917864,-0.862782,7.923389,-5.010085,0.991908,5.972493,-9.063665,-3.180583,1.204668,1.240295,-8.925275,5.581357,-7.967798,1.779361,-2.110705,7.770749,1.849666,7.539817,-8.907932,4.456540,7.718057,-2.023857,-0.653766,-9.107290,9.040844,5.621836,-9.032442,-6.113811,-8.040915,-0.343141,-6.144527,-6.724164,-9.036813,-2.539753,-6.157489,-3.974482,8.998026,1.556643,9.387508,2.230757,6.993929,-9.407859,5.394882,-9.849847,3.322476,5.435113,6.484902,6.949682,1.543017,-5.619681,9.115230,4.843767,7.824963,1.027185,-1.678455,6.739010,2.127999,6.755645,8.894443,-2.794231,0.425019,-7.668331,-7.685730,-0.851911,2.802066,6.870025,5.072619,7.824881,7.407169,5.011219,9.820275,9.317246,-1.572300,-2.807280,-5.561616,-1.302677,-1.735043,-6.696969,-0.945788,-2.444746,0.540314,9.029333,-7.826012,-0.401443,4.526775,-2.888823,-3.708792,5.493558,-4.262047,-7.906871,9.433244,-5.654982,9.153027,-2.232361,7.450411,-5.532319,-9.928193,3.137794,-0.151444,-9.236929,1.658707,0.888587,-7.881905,7.476111,-1.533976,2.257967,-1.635776,8.861990,0.179518,-9.962900,-8.078971,0.226771,-4.998988,0.700198,-4.876016,-6.708373,-9.145676,-2.186037,-9.749023,-7.702932,1.215038,-9.106087,7.984440,-8.455472,5.499037,-1.007892,2.930474,-8.337310,-2.432270,-4.406775,9.459482,0.178625,-3.610731,-4.072468,1.746967,9.300591,9.632559,-3.820272,6.407609,5.888813,9.311238,-4.318302,7.260768,-2.343915,5.921020,6.323847,2.415238,-8.955873,-9.215100,6.124034,3.340854,-8.608530,-0.465456,-8.912182,8.872729,8.665640], dtype = "float32")#candidate|1633|(792,)|const|float32
call_1631 = relay.TupleGetItem(func_568_call(relay.reshape(var_1632.astype('uint32'), []), relay.reshape(const_1633.astype('float32'), [792,]), ), 2)
call_1634 = relay.TupleGetItem(func_572_call(relay.reshape(var_1632.astype('uint32'), []), relay.reshape(const_1633.astype('float32'), [792,]), ), 2)
func_326_call = mod.get_global_var('func_326')
func_328_call = mutated_mod.get_global_var('func_328')
call_1637 = relay.TupleGetItem(func_326_call(relay.reshape(call_1631.astype('float32'), [11, 9, 8])), 0)
call_1638 = relay.TupleGetItem(func_328_call(relay.reshape(call_1631.astype('float32'), [11, 9, 8])), 0)
output = relay.Tuple([bop_1585,call_1631,var_1632,const_1633,call_1637,])
output2 = relay.Tuple([bop_1585,call_1634,var_1632,const_1633,call_1638,])
func_1640 = relay.Function([var_1569,var_1584,var_1632,], output)
mod['func_1640'] = func_1640
mod = relay.transform.InferType()(mod)
mutated_mod['func_1640'] = func_1640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1640_call = mutated_mod.get_global_var('func_1640')
var_1642 = relay.var("var_1642", dtype = "float32", shape = (16, 7, 13))#candidate|1642|(16, 7, 13)|var|float32
var_1643 = relay.var("var_1643", dtype = "float32", shape = (16, 7, 13))#candidate|1643|(16, 7, 13)|var|float32
var_1644 = relay.var("var_1644", dtype = "uint32", shape = ())#candidate|1644|()|var|uint32
call_1641 = func_1640_call(var_1642,var_1643,var_1644,)
output = call_1641
func_1645 = relay.Function([var_1642,var_1643,var_1644,], output)
mutated_mod['func_1645'] = func_1645
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1678 = relay.var("var_1678", dtype = "uint8", shape = (5, 5, 11))#candidate|1678|(5, 5, 11)|var|uint8
var_1679 = relay.var("var_1679", dtype = "uint8", shape = (5, 5, 11))#candidate|1679|(5, 5, 11)|var|uint8
bop_1680 = relay.less(var_1678.astype('bool'), relay.reshape(var_1679.astype('bool'), relay.shape_of(var_1678))) # shape=(5, 5, 11)
output = bop_1680
output2 = bop_1680
func_1686 = relay.Function([var_1678,var_1679,], output)
mod['func_1686'] = func_1686
mod = relay.transform.InferType()(mod)
var_1687 = relay.var("var_1687", dtype = "uint8", shape = (5, 5, 11))#candidate|1687|(5, 5, 11)|var|uint8
var_1688 = relay.var("var_1688", dtype = "uint8", shape = (5, 5, 11))#candidate|1688|(5, 5, 11)|var|uint8
output = func_1686(var_1687,var_1688,)
func_1689 = relay.Function([var_1687,var_1688,], output)
mutated_mod['func_1689'] = func_1689
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1785 = relay.var("var_1785", dtype = "float64", shape = (6, 1, 2))#candidate|1785|(6, 1, 2)|var|float64
uop_1786 = relay.exp(var_1785.astype('float64')) # shape=(6, 1, 2)
output = uop_1786
output2 = uop_1786
func_1797 = relay.Function([var_1785,], output)
mod['func_1797'] = func_1797
mod = relay.transform.InferType()(mod)
var_1798 = relay.var("var_1798", dtype = "float64", shape = (6, 1, 2))#candidate|1798|(6, 1, 2)|var|float64
output = func_1797(var_1798)
func_1799 = relay.Function([var_1798], output)
mutated_mod['func_1799'] = func_1799
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1856 = relay.const([[[9.508259,-9.097757]],[[3.929857,-1.213597]],[[2.669552,-4.222998]],[[2.831755,9.224534]],[[0.984460,-7.128527]]], dtype = "float64")#candidate|1856|(5, 1, 2)|const|float64
uop_1857 = relay.sqrt(const_1856.astype('float64')) # shape=(5, 1, 2)
output = uop_1857
output2 = uop_1857
func_1888 = relay.Function([], output)
mod['func_1888'] = func_1888
mod = relay.transform.InferType()(mod)
mutated_mod['func_1888'] = func_1888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1888_call = mutated_mod.get_global_var('func_1888')
call_1889 = func_1888_call()
output = call_1889
func_1890 = relay.Function([], output)
mutated_mod['func_1890'] = func_1890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1888_call = mod.get_global_var('func_1888')
func_1890_call = mutated_mod.get_global_var('func_1890')
call_1960 = func_1888_call()
call_1961 = func_1888_call()
func_1437_call = mod.get_global_var('func_1437')
func_1439_call = mutated_mod.get_global_var('func_1439')
var_1964 = relay.var("var_1964", dtype = "float64", shape = (1716,))#candidate|1964|(1716,)|var|float64
call_1963 = func_1437_call(relay.reshape(var_1964.astype('float64'), [12, 11, 13]))
call_1965 = func_1437_call(relay.reshape(var_1964.astype('float64'), [12, 11, 13]))
func_1437_call = mod.get_global_var('func_1437')
func_1439_call = mutated_mod.get_global_var('func_1439')
call_1966 = func_1437_call(relay.reshape(call_1963.astype('float64'), [12, 11, 13]))
call_1967 = func_1437_call(relay.reshape(call_1963.astype('float64'), [12, 11, 13]))
output = relay.Tuple([call_1960,call_1963,var_1964,call_1966,])
output2 = relay.Tuple([call_1961,call_1965,var_1964,call_1967,])
func_1978 = relay.Function([var_1964,], output)
mod['func_1978'] = func_1978
mod = relay.transform.InferType()(mod)
var_1979 = relay.var("var_1979", dtype = "float64", shape = (1716,))#candidate|1979|(1716,)|var|float64
output = func_1978(var_1979)
func_1980 = relay.Function([var_1979], output)
mutated_mod['func_1980'] = func_1980
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1982 = relay.var("var_1982", dtype = "float64", shape = (6, 10, 5))#candidate|1982|(6, 10, 5)|var|float64
const_1983 = relay.const([[[-8.465313,-6.270726,-0.611733,-3.144695,-1.897850],[5.122151,-9.766015,-9.407826,6.262058,3.425558],[-3.893249,5.275863,5.212043,9.245615,0.878693],[-2.717028,-6.283982,8.274327,4.107045,-1.886139],[4.827355,-6.826488,4.923653,-9.232195,-5.340311],[6.501117,3.419919,-3.816270,1.529900,-0.377247],[-6.079243,9.164493,9.118526,4.795336,-7.333604],[-2.416250,-4.912085,-5.752046,4.571075,-9.483064],[-0.304512,-4.347867,-5.270231,-5.000129,3.841934],[2.886898,5.161768,-2.598746,6.252540,4.343870]],[[4.458248,3.312189,-4.331128,8.204342,-4.941985],[5.009056,1.064604,-3.213867,-7.076810,-2.074450],[8.005342,6.692974,-1.700353,0.155176,-2.403123],[6.241120,-4.458610,5.266570,-1.557304,7.079825],[-5.418593,6.385564,-8.879109,2.389708,-0.368561],[-9.147095,4.143378,-7.058669,6.271810,-3.154687],[-3.268438,0.116387,-4.789069,7.352666,-6.404050],[-3.563695,-8.312269,-5.742650,7.739828,5.419221],[4.175404,-3.716602,-3.978767,-6.963503,-1.763275],[6.158427,7.929513,-7.000199,4.767720,-0.200926]],[[-4.319137,-8.530666,1.279927,8.396014,-1.787739],[-1.147061,4.480861,3.893477,-7.057604,6.058073],[-7.002927,4.794825,-7.147755,9.333213,-9.594342],[4.263070,-4.788262,6.508878,-9.109129,5.394716],[3.860676,7.400194,-6.776119,-4.475288,-6.662009],[5.849816,-1.107672,-4.253485,-4.669132,-2.665104],[-5.569141,9.787356,9.277454,-2.832807,-4.536744],[5.228487,2.068691,-3.999391,0.196412,-5.970315],[-3.875299,-4.475020,9.593619,8.645474,-5.806809],[-8.506868,7.025433,-5.727851,-3.019773,8.959710]],[[-7.020307,-8.674057,5.245595,5.200335,-3.220194],[-4.689323,6.813329,7.009271,-2.935027,2.211177],[3.039841,4.726449,0.033084,6.963008,-4.968746],[-9.470723,5.673301,-7.069999,3.798239,2.168972],[-6.420192,8.459145,-9.619650,-4.377713,6.755687],[-8.346783,7.328233,-5.091343,5.851754,-2.588341],[-4.843450,-8.727710,4.951483,-8.938130,-4.847001],[-2.448297,0.884243,-4.322520,5.715919,-0.632139],[-8.912351,0.520393,-6.058062,9.821858,7.614084],[9.949166,-5.286531,-4.951928,8.365750,7.597357]],[[-3.677260,-2.554455,6.639471,-0.613912,5.462958],[8.779576,3.992705,2.755562,-7.509314,0.147001],[-1.909303,7.333647,-5.485521,-9.131954,-4.408754],[3.501791,-6.185058,0.085314,-7.089194,-6.687326],[-4.237627,-4.708340,-0.568755,-6.987870,-2.611213],[-6.861169,-4.751134,2.827681,4.776530,-6.942906],[7.341678,4.312722,0.218393,5.065786,-5.832329],[7.191974,-9.625414,-3.587858,0.845995,5.874886],[-3.285524,-9.517074,-0.547757,2.791633,-9.939880],[0.773862,9.879605,5.217055,0.739129,-6.421479]],[[-9.123906,0.711220,6.792231,4.136522,-2.607454],[-2.376572,-2.236291,7.593416,4.466704,3.628267],[4.122579,3.973462,2.200649,6.547753,-1.619926],[-0.668805,-4.301255,9.560656,0.455607,-2.931608],[5.805317,-6.561481,-2.661947,-7.063533,-5.664507],[8.510762,5.746731,-3.373156,8.452994,9.371957],[0.309505,-3.658830,3.710417,-4.316021,-0.856871],[-3.366713,8.131328,1.374019,4.233683,9.414446],[0.401556,2.573596,-7.839806,4.871660,9.554179],[2.495714,-0.552175,-6.719570,3.363841,-6.590532]]], dtype = "float64")#candidate|1983|(6, 10, 5)|const|float64
bop_1984 = relay.mod(var_1982.astype('float64'), relay.reshape(const_1983.astype('float64'), relay.shape_of(var_1982))) # shape=(6, 10, 5)
uop_1987 = relay.log10(const_1983.astype('float64')) # shape=(6, 10, 5)
bop_1991 = relay.greater_equal(uop_1987.astype('bool'), relay.reshape(bop_1984.astype('bool'), relay.shape_of(uop_1987))) # shape=(6, 10, 5)
func_1686_call = mod.get_global_var('func_1686')
func_1689_call = mutated_mod.get_global_var('func_1689')
const_1997 = relay.const([[-8,2,3,7,5],[-2,10,-8,4,8],[-8,10,5,5,-7],[-10,10,-10,-7,9],[-9,-10,-6,8,4],[4,5,2,-9,3],[-9,-3,-6,-2,-10],[-7,-3,-5,-7,8],[1,5,-7,7,7],[-6,-3,-7,-3,-4],[-9,9,-7,-2,-9],[6,-4,5,2,-1],[-2,-5,-7,-3,-1],[-5,-7,-4,-1,9],[-9,-10,-9,-8,7],[-10,-8,3,9,-8],[-3,1,-9,6,-5],[8,1,-9,-2,-9],[-8,-7,6,-4,8],[-3,6,2,-3,3],[-3,-2,-8,-5,9],[1,-5,-6,10,5],[-1,-10,-6,-10,3],[7,-6,-2,-3,7],[5,1,-6,-2,-6],[-6,-7,4,9,2],[-9,7,9,2,-8],[-4,-4,-2,2,9],[-1,5,-1,1,4],[1,-2,1,-2,3],[-1,-5,-2,7,1],[3,3,1,-6,-4],[-6,6,-5,-9,-1],[9,1,-8,8,-8],[3,4,9,10,6],[10,8,1,-4,-2],[-5,8,2,-1,-3],[-3,2,4,1,-9],[-7,2,-4,1,-3],[4,6,4,-9,-10],[3,3,-1,9,1],[2,6,5,4,9],[-1,-5,-6,-4,-3],[-1,8,-6,-1,2],[10,1,-5,-5,4],[-6,8,3,10,10],[4,4,5,10,2],[9,-5,9,7,-10],[-7,-8,-8,8,10],[5,-1,-5,-10,4],[8,-5,6,-4,-7],[5,-1,-8,6,8],[6,-10,-4,-3,2],[6,1,-5,-3,-9],[3,4,-7,-2,-10]], dtype = "uint8")#candidate|1997|(55, 5)|const|uint8
call_1996 = func_1686_call(relay.reshape(const_1997.astype('uint8'), [5, 5, 11]), relay.reshape(const_1997.astype('uint8'), [5, 5, 11]), )
call_1998 = func_1686_call(relay.reshape(const_1997.astype('uint8'), [5, 5, 11]), relay.reshape(const_1997.astype('uint8'), [5, 5, 11]), )
output = relay.Tuple([bop_1991,call_1996,const_1997,])
output2 = relay.Tuple([bop_1991,call_1998,const_1997,])
func_2001 = relay.Function([var_1982,], output)
mod['func_2001'] = func_2001
mod = relay.transform.InferType()(mod)
var_2002 = relay.var("var_2002", dtype = "float64", shape = (6, 10, 5))#candidate|2002|(6, 10, 5)|var|float64
output = func_2001(var_2002)
func_2003 = relay.Function([var_2002], output)
mutated_mod['func_2003'] = func_2003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1888_call = mod.get_global_var('func_1888')
func_1890_call = mutated_mod.get_global_var('func_1890')
call_2016 = func_1888_call()
call_2017 = func_1888_call()
output = relay.Tuple([call_2016,])
output2 = relay.Tuple([call_2017,])
func_2028 = relay.Function([], output)
mod['func_2028'] = func_2028
mod = relay.transform.InferType()(mod)
mutated_mod['func_2028'] = func_2028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2028_call = mutated_mod.get_global_var('func_2028')
call_2029 = func_2028_call()
output = call_2029
func_2030 = relay.Function([], output)
mutated_mod['func_2030'] = func_2030
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2086 = relay.var("var_2086", dtype = "float32", shape = (12, 1, 16))#candidate|2086|(12, 1, 16)|var|float32
uop_2087 = relay.log2(var_2086.astype('float32')) # shape=(12, 1, 16)
func_826_call = mod.get_global_var('func_826')
func_829_call = mutated_mod.get_global_var('func_829')
const_2107 = relay.const([4.911219,-6.842368,-3.018573,-9.552599,-4.124740,8.490258,4.465293,-3.175739,1.147259,5.451415,-8.163075,7.022267,2.599436,3.604155,8.992223,-2.429404,4.240898,-6.586875,-5.603608,2.906022,6.759077,-9.717515,-0.155971,4.438806,-2.045063,1.439379,7.569924,5.799718,-3.842674,1.593964,1.055056,-8.923530,-8.384423,-1.768667,-1.747122,6.685883,3.085783,-3.588784,5.443835,1.851942,-9.898843,-8.020766,5.525064,-8.228383,-7.110557,1.082706,4.820581,9.944127,4.879316,2.445372,5.224403,1.835835,-2.893294,-7.612737,-7.970405,3.517911,-0.403724,-1.055805,-3.717800,9.941835,-2.477785,-0.497369,8.491312,-0.917726,-8.227147,-3.030812,-1.552066,-9.658492,6.770522,-9.473182,-9.435926,6.433053,-4.807485,6.725059,-5.997768,4.920666,1.579150,7.595096,5.751435,7.684404,8.903444,6.534204,-0.589713,-8.928416,-2.987187,2.564011,5.216061,3.436396,-1.374014,-6.413030], dtype = "float32")#candidate|2107|(90,)|const|float32
call_2106 = relay.TupleGetItem(func_826_call(relay.reshape(const_2107.astype('float32'), [10, 3, 3])), 1)
call_2108 = relay.TupleGetItem(func_829_call(relay.reshape(const_2107.astype('float32'), [10, 3, 3])), 1)
uop_2119 = relay.asinh(uop_2087.astype('float32')) # shape=(12, 1, 16)
uop_2123 = relay.exp(uop_2119.astype('float64')) # shape=(12, 1, 16)
output = relay.Tuple([call_2106,const_2107,uop_2123,])
output2 = relay.Tuple([call_2108,const_2107,uop_2123,])
func_2127 = relay.Function([var_2086,], output)
mod['func_2127'] = func_2127
mod = relay.transform.InferType()(mod)
var_2128 = relay.var("var_2128", dtype = "float32", shape = (12, 1, 16))#candidate|2128|(12, 1, 16)|var|float32
output = func_2127(var_2128)
func_2129 = relay.Function([var_2128], output)
mutated_mod['func_2129'] = func_2129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2028_call = mod.get_global_var('func_2028')
func_2030_call = mutated_mod.get_global_var('func_2030')
call_2179 = relay.TupleGetItem(func_2028_call(), 0)
call_2180 = relay.TupleGetItem(func_2030_call(), 0)
func_1437_call = mod.get_global_var('func_1437')
func_1439_call = mutated_mod.get_global_var('func_1439')
var_2185 = relay.var("var_2185", dtype = "float64", shape = (1716,))#candidate|2185|(1716,)|var|float64
call_2184 = func_1437_call(relay.reshape(var_2185.astype('float64'), [12, 11, 13]))
call_2186 = func_1437_call(relay.reshape(var_2185.astype('float64'), [12, 11, 13]))
func_1437_call = mod.get_global_var('func_1437')
func_1439_call = mutated_mod.get_global_var('func_1439')
call_2200 = func_1437_call(relay.reshape(call_2184.astype('float64'), [12, 11, 13]))
call_2201 = func_1437_call(relay.reshape(call_2184.astype('float64'), [12, 11, 13]))
output = relay.Tuple([call_2179,call_2184,var_2185,call_2200,])
output2 = relay.Tuple([call_2180,call_2186,var_2185,call_2201,])
func_2206 = relay.Function([var_2185,], output)
mod['func_2206'] = func_2206
mod = relay.transform.InferType()(mod)
var_2207 = relay.var("var_2207", dtype = "float64", shape = (1716,))#candidate|2207|(1716,)|var|float64
output = func_2206(var_2207)
func_2208 = relay.Function([var_2207], output)
mutated_mod['func_2208'] = func_2208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1888_call = mod.get_global_var('func_1888')
func_1890_call = mutated_mod.get_global_var('func_1890')
call_2216 = func_1888_call()
call_2217 = func_1888_call()
output = call_2216
output2 = call_2217
func_2222 = relay.Function([], output)
mod['func_2222'] = func_2222
mod = relay.transform.InferType()(mod)
output = func_2222()
func_2223 = relay.Function([], output)
mutated_mod['func_2223'] = func_2223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1888_call = mod.get_global_var('func_1888')
func_1890_call = mutated_mod.get_global_var('func_1890')
call_2246 = func_1888_call()
call_2247 = func_1888_call()
var_2248 = relay.var("var_2248", dtype = "float64", shape = (5, 1, 2))#candidate|2248|(5, 1, 2)|var|float64
bop_2249 = relay.minimum(call_2246.astype('int32'), relay.reshape(var_2248.astype('int32'), relay.shape_of(call_2246))) # shape=(5, 1, 2)
bop_2252 = relay.minimum(call_2247.astype('int32'), relay.reshape(var_2248.astype('int32'), relay.shape_of(call_2247))) # shape=(5, 1, 2)
uop_2260 = relay.log2(call_2246.astype('float32')) # shape=(5, 1, 2)
uop_2262 = relay.log2(call_2247.astype('float32')) # shape=(5, 1, 2)
func_2222_call = mod.get_global_var('func_2222')
func_2223_call = mutated_mod.get_global_var('func_2223')
call_2264 = func_2222_call()
call_2265 = func_2222_call()
bop_2267 = relay.bitwise_xor(uop_2260.astype('int32'), relay.reshape(call_2264.astype('int32'), relay.shape_of(uop_2260))) # shape=(5, 1, 2)
bop_2270 = relay.bitwise_xor(uop_2262.astype('int32'), relay.reshape(call_2265.astype('int32'), relay.shape_of(uop_2262))) # shape=(5, 1, 2)
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
const_2274 = relay.const([5.209853,6.447297,0.466782,4.625895,-6.174940,-4.244955,-9.013261,-8.000880,8.662600,-7.234614,-8.259817,-3.092636,6.325692,-9.104116,-1.079220,2.333089,-0.954977,1.928106,5.402646,6.623330,-4.415199,-7.977417,-2.629687,-3.196911,6.487094,9.085376,-0.817427,9.973893,-2.165285,-1.508673,-3.011074,8.465446,-6.620459,-9.461257,1.455320,5.545020,-4.729253,-9.406598,5.977281,-7.992824,-2.316041,-3.105765,7.449346,-7.672910,9.912954,8.611130,-4.021687,-6.494153,5.320735,7.927444,-9.941770,-7.012117,-6.561970,-2.928331,2.839944,-4.225238,-3.718547,-7.218057,-0.981304,-4.508411,5.902073,7.215605,-2.015454,9.971886,5.774391,-2.123641,8.956069,-3.501171,-9.719653,2.401824,2.244757,1.735061,-0.966221,-1.767033,-7.595381,3.548150,-4.662197,1.556629,-2.676621,-3.989114,6.212292,-5.473982,9.898558,-1.900528,0.420817,-5.524578,1.584143,-5.319964,8.219857,2.349968,3.642252,-5.875110,3.012985,-6.322152,-0.736447,1.092479,-9.381034,-1.269375,-7.214809,1.052732,8.074857,8.416746,7.656806,-4.257655,-4.719816,-3.107099,-0.501243,6.503752,-7.125732,-4.346456,-8.093211,3.974761,6.083223,-4.570098,-5.281779,7.900704,3.470133,9.306453,-2.944574,-1.997168,6.729732,1.835349,2.237772,3.584723,-4.345936,-4.350643,-5.352574,3.810778,5.063141,4.601191,3.120362,5.532472,0.200040,8.286881,5.659930,-8.575148,-9.893976,-3.523926,-9.525221,-3.101458,0.842030,8.153766,-6.978473,1.576451,9.524579,5.440349,5.744952,0.379369,3.752729,7.132397,-3.463579,8.563536,4.621295,-7.144904,-1.067529,-8.186600,7.556333,9.086598,8.951244,-4.919688,9.043754,4.645341,-1.937673,-6.623959,-4.410439,-5.103976,2.415641,7.291464,-0.429002,7.098034,-1.896901,-3.939750,4.765288,7.561236,7.004097,3.134893,-4.676673,6.677231,-5.783689,-0.571981,6.494248,6.705768,1.216473,0.377427,8.288214,-4.452152,2.455923,2.168606,-7.653962,2.267396,-8.903303,-4.972424,7.253686,-2.620155,0.808124,-2.888447,7.597063,-9.918546,1.106709,-7.467597,-9.448596,-3.918957,-3.941450,-5.488820,7.889815,-8.181981,1.405185,-6.645335,-9.126438,-1.760936,0.511362,7.713694,-9.163334,3.991795,4.208633,-8.658849,-8.226757,9.220273,6.599448,4.499314,5.615171,-5.274024,4.083629,-8.663436,0.866311,3.493957,1.134203,-2.053564,-5.851685,5.174968,4.542692,0.353806,6.264379,-4.490235,4.614255,2.797009,4.493134,0.271764,-3.634360,2.835532,-8.390581,-0.227644,7.501330,8.626316,4.733670,9.740278,6.778669,-5.181034,-5.737475,6.474032,5.784825,-1.240993,-5.414394,5.067284,6.750219,5.535624,9.864163,-8.344961,-5.519514,8.048203,-0.504280,-3.922723,6.893828,-1.817481,-1.476325,2.202513,-8.707429,-3.640290,2.531407,6.765503,-3.699685,-0.341835,5.735674,-1.764081,3.000492,5.552577,5.832361,9.645344,-8.799829,-4.677343,1.413407,-5.997091,3.114106,-5.051116,-9.610826,-7.556040,-1.440894,5.148036,1.002921,4.962398,5.372798,-3.678268,0.051841,5.113266,-2.527017,-8.606064,-8.970084,8.342171,8.569643,-9.497531,-7.883562,9.336068,-0.584215,-8.162238,-6.971706,-0.220662,-7.024209,-3.372276,-9.529260,6.857539,8.592180,-6.244042,6.499435,-4.725548,3.320067,-9.296779,4.438105,2.800740,-0.207362,7.497110,5.972994,-4.605346,-2.913183,2.500505,7.527558,1.740777,-9.042974,-2.281217,-9.075244,5.414651,3.766816,9.378355,9.761408,-9.148356,-7.559269,-2.593894,1.803774,9.908521,-4.784738,-1.089772,2.879956,-9.572486,2.094200,9.643552,1.425454,-9.071936,9.083499,9.399369,-2.017091,-0.267259,5.576258,-9.187220,-3.622303,2.179203,6.562817,-0.867728,7.422078,-3.573412,1.154429,-2.033392,-3.231868,7.414600,-9.631093,-8.992875,8.309660,7.323811,-1.412881,9.232443,9.351620,2.385947,7.783510,-7.045694,-9.757202,2.713813,-4.476720,7.002586,-5.216849,-8.318379,5.696162,8.504836,-2.086221,-7.011306,1.445585,9.754391,-7.786903,0.199585,-4.145307,-1.397604,-0.436963,-2.804095,-7.586756,-1.621565,-4.836144,2.499732,9.308519,-1.540996,-0.449638,-2.459558,5.624129,-7.138330,-8.905552,9.086865,1.169840,-8.070067,2.674784,0.579435,-7.025140,5.915479,-7.095340,-6.031689,1.925206,8.149552,5.899565,7.439909,3.463729,-2.393005,4.075788,-9.306020,-4.834574,3.318536,4.295928,7.671673,-4.550098,1.317307,2.197116,-2.590641,-3.102536,-8.545140,-8.321008,-5.220018,-4.388173,1.912842,-0.941003,-6.953590,-7.262438,8.541435,-5.165204,6.855730,6.072112,-0.253201,4.534284,8.774911,-0.041931,0.699014,-3.269597,2.059087,9.356968,-9.009973,-4.381020,-9.899694,-8.247050,2.839236,-5.343481,3.413930,9.290232,-1.613311,3.790093,-6.000491,-5.001921,-5.784260,-4.978196,9.982402,-2.612272,0.524183,-0.764344,-8.914143,4.020423,-1.446677,-0.191370,9.464636,1.196096,-7.902063,-1.627150,-6.564912,8.945785,0.438421,-3.148057,9.216533,-2.533972,-0.235782,-4.362233,-1.194945,-0.757472,2.252224,-4.080993,-0.575588,-3.922661,-8.937280,5.928089,9.374964,9.101739,-6.636791,4.431436,9.877514,3.235613,6.503163,-4.480313,4.606237,-0.990453,8.172700,-6.165235,-0.333455,0.869921,8.279207,6.003115,9.026796,0.694234,2.396691,0.145544,-1.708268,-7.347308,-1.375215,5.989220,1.533340,-9.387365,4.902683,-0.555090,7.033010,-0.471383,-7.394191,-8.167954,9.394587,-0.001776,-4.556576,5.896706,-1.090655,-9.574665,-9.061315,-9.703486,5.660379,-9.955637,0.182141,-6.428649,-1.617304,9.293917,1.997161,-9.606129,0.357338,0.673792,-8.645974,9.115271,-7.044886,9.294001,6.354490,-7.260533,-4.676207,0.120293,0.709108,2.084140,7.975794,-5.182089,-0.021354,9.251135,8.390882,1.369089,8.044308,-8.491474,2.692010,-0.003598,-3.258879,4.985700,8.249922,-4.854409,5.428690,5.018504,3.834624,1.423550,-3.812758,6.980481,5.859296,-3.865087,6.574524,-0.822962,-4.397412,-9.160129,2.619441,-3.127930,-3.190133,8.675342,-0.497988,-0.512017,-2.170022,4.806592,-4.111488,7.495310,8.095563,-7.378461,-3.476050,8.514476,7.608872,8.280104,-2.819593,-1.753407,2.494919,-7.651343,-3.194762,2.587605,-8.550695,4.519072,2.513738,-3.250685,-9.569389,-3.788654,7.524453,-8.588615,8.671466,6.818174,2.534720,-1.662305,2.851055,-0.324080,-5.843162,-7.319551,-4.772553,6.374289,-7.112337,-6.890941,2.742220,-6.536298,6.736357,7.839171,-9.474965,-6.469188,-4.921906,-8.441204,5.227791,7.440361,-5.660350,-7.870373,-5.258003,9.158155,4.056318,8.472978,-6.657646,1.483236,-6.033620,-4.758555,2.734255,-6.737156,0.867028,4.539078,6.505715,-3.154984,-6.084778,-7.719212,8.382145,-0.269659,-3.045110,8.581435,6.023539,-5.128661,0.004073,-4.873101,9.762207,6.232508,-6.638168,3.425856,2.134345,6.349145,-9.524900,-2.446725,4.876371,-0.225622,0.313010,-7.873143,-1.896061,-8.952689,2.359048,-3.223575,-5.190825,-1.311341,-7.909017,-3.701555,0.824518,8.433081,-9.044847,6.497939,-6.517094,7.005028,4.224422,-7.875092,-3.539399,-4.298806,-3.959427,-7.634881,-8.992335,1.466384,-7.926330,-2.024528,4.269612,7.662915,-4.197566,-9.897276,-6.306228,-8.053786,0.716496,5.109079,2.109256,-1.326086,-5.112490,-1.127515,3.929853,2.929028,-8.515384,1.508720,1.795402,5.813256,-4.040306,8.345377,0.012506,-1.132326,-8.074805,-4.336539,4.824261,1.123331,6.779777,-1.652053,8.475043,-0.574385,-2.920040,-7.861177,-5.066068,2.532939,4.507238,4.478599,-9.262731,3.999133,3.605149,-5.430003,-6.142565,-0.318838,-1.889282,-5.549960,-6.510211,1.660253,8.221593,-9.338314,5.387793,-1.622053,-2.907323,9.931664,7.729843,-4.716859,-2.688606,-0.974267,-7.472319,-8.067847,3.667720,4.663408,8.292037,-8.423587,-6.844130,-9.685252,-9.288988,-0.219051,-7.666797,2.196036,-5.066904,-6.684201,6.440780,-7.183571,7.837498,-1.061075,4.879538,-9.237512,-0.174393,8.611607,5.110026,-7.722076,-0.068069,1.735361,-1.331549,4.914910,-8.354018,2.104453,-0.461601,0.397937,-7.984722,-9.346805,1.588364,-7.865549,-3.363598,-5.986570,5.390993,3.745960,6.458190,-8.393712,-1.720202,4.252818,3.986601,-5.704821,-5.818311,4.703055,4.552832,-6.425396,-3.757820,-3.786818,7.393811,-1.445957,7.518438,-5.320094,-1.750453,-0.091564,-7.851300,0.487390,-3.201914,8.453890,-4.288489,6.227022,6.398257,-9.025312,-0.279819,-4.156289,-5.487406,-7.565518,-4.545149,-0.052864,7.643283,8.017655,-0.378504,4.966856,-4.639237,4.930271,2.659859,-1.268947,7.032627,-2.669731,9.990834,5.138165,6.138642,7.004305,-3.736270,2.845613,-6.364061,-9.039733,2.492154,3.899106,-1.468269,-3.381006,7.321388,-4.275322,-8.631643,-1.444881,3.074161,5.580828,2.612543,7.315903,-9.846619,1.012975,1.842235,-2.712097,0.879539,7.533088,-1.949291,8.227490,-3.371148,-1.041762,-4.024481,8.354656,-0.122711,9.046663,8.176214,-1.788135,1.290305,1.210724,3.189331,2.864607,0.770581,-2.688861,1.863733,-7.117960,-2.140301,-9.963417,0.936298,-4.182079,-7.336790,-4.036053,-2.526130,6.249997,-3.490747,9.436455,-1.977185,9.347523,9.865944,-8.976121,7.110031,-2.475143,1.021295,5.817213,-0.811560,9.573005,3.469548,3.371184,-7.422646,8.421163,6.260723,-8.663228,1.155188,7.763515,0.029342,1.854637,-4.730922,-5.973032,-4.097172,6.082479,-7.901072,3.298593,-3.311538,5.297837,-5.175594,5.756638,4.119796,5.096244,3.850588,6.871664,-4.231153,-8.159380,4.537530,3.555231,-9.613619,-8.362067,7.158569,-0.633883,-7.855404,-7.754098,-4.762080,-3.873452,5.466183,-7.196154,8.492951,6.617376,5.764812,-1.546755,9.903396,-8.782110,-3.000595,-2.630630,8.602032,8.551174,-3.547188,-5.752424,-0.550516,4.453329,-4.440312,-8.926613,6.806937,-5.550459,1.668865,7.328967,-2.186592,-4.027888,8.169616,-5.501054,8.186374,-2.885986,0.745241,-8.586987,-8.318356,0.295587,-1.606139,-5.463860,2.080946,-3.766751,6.862962,1.759472,4.264067,3.443770,-9.711482,0.750222,7.272715,-8.041522,-8.847381,-3.531490,-0.416149,-6.279171,-2.202938,-7.646090,4.932626,-8.713999,0.069027,-5.879030,-4.710827,3.100628,2.139242,-3.894168,-4.852948,0.491011,-6.628460,3.621578,9.204343,8.162240,-1.559926,5.085640,-8.581770,2.501350,-1.132742,-5.305017,2.053423,7.170700,1.227823,0.155170,-7.664991,-9.899543,2.330809,3.921676,0.861267,-5.517528,7.364862,1.168395,9.734150,0.499588,-7.434686,-4.299954,2.053676,-8.538019,-0.730551,-1.141772,-2.576629,0.097249,4.280146,-7.797827,9.867179,-6.415853,8.787116,-9.278537,-2.208093,-2.583625,4.611579,-7.963502,-2.693283,4.532901,4.621550,-1.893832,3.372352,8.921453,-8.149494,8.612344,-5.506136,-3.497051,-7.893308,-8.893172,-7.851169,0.274898,-4.112940,-3.399671,6.821516,7.283974,-6.602486,-9.374932,1.076484,-8.395029,-1.600882,8.123263,2.448754,-7.094112,-8.931137,9.439356,4.985032,-4.465890,-4.282422,-6.653417,0.136375,-2.477678,0.392781,8.043820,-5.241537,0.344213,3.682615,7.224105,-4.521955,-8.679609,2.354071,-2.756293,4.753683,-5.693483,4.184330,9.459372,-5.222586,-2.033048,-4.468083,-5.738494,0.639448,1.672054,-0.226362,-6.691476,-5.626418,4.033214,-2.078781,-2.863399,-4.083443,9.142774,-7.596487,-2.178979,9.779754,-9.759211,-7.875453,-0.532975,-4.829772,1.999655,2.738301,-3.809898,-8.041604,5.797441,3.162444,-1.182377,-3.986438,3.472744,-5.048116,5.704995,7.057849,-5.167868,-8.498292,9.628767,-7.046229,6.524713,-3.086167,-3.798748,9.148977,7.917868,9.666934,-8.359839,-3.089833,-5.304419,-5.064219,-2.900221,-3.159847,1.105365,6.703038,4.695127,6.992443,9.855941,-8.192057,6.070029,1.946715,-4.314906,-4.398649,-2.425972,6.378379,-4.889565,-5.221127,4.540065,8.385382,4.596892,4.664687,-8.539023,1.212499,1.299527,1.226021,7.910191,7.127189,-6.609920,6.259096,-6.367046,4.860340,-7.700627,5.084435,-6.662126,-4.147420,-9.157700,8.079260,6.670134,-5.393832,-6.162601,5.627465,2.535061,-9.224167,-2.448310,-5.813421,-7.685443,8.421950,-6.107633,-6.094120,9.206606,-0.565626,-9.354874,6.449956,1.353602,-6.557102,7.351772,1.202442,6.029430,-6.890098,0.457257,-6.420519,4.936733,-1.240883,2.692344,-8.609344,-0.437452,-9.183592,-5.416220,-6.918072,8.409873,-0.633730,-8.401648,0.563202,0.050821,0.575479,8.444551,-7.597306,-0.734786,-9.473782,7.138879,-9.389026,0.465003,-8.896018,-1.985549,1.921304,-1.265280,4.605581,-1.423006,-5.943313,-1.486218,-7.482541,3.777588,-7.647132,-1.399168,0.511656,-9.092212,0.439168,-1.041071,9.371965,-5.188396,9.336908,-5.415596,7.626824,6.667666,-8.959725,7.308086,3.485025,2.392657,-1.220807,-0.374965,5.802285,-5.386173,3.853412,3.411349,8.636484,0.119064,-3.687068,9.780897,-4.127843,9.685586,0.544655,-3.869107,7.094273,-2.972034,5.246996,-2.783051,6.813502,8.887236,3.256895,-7.150300,-3.656312,6.127933,7.925744,-2.961166,-9.292064,9.796672,-2.893229,-3.148006,9.527028,-2.286585,-0.857295,-8.732718,3.693485,-7.757968,-1.630084,0.823591,-6.376725,1.653603,-0.226482,-9.421846,4.719322,-5.623259,1.150092,8.845599,9.150093,4.543835,-4.913654,-1.833926,2.887645,3.408071,0.585136,-8.697639,3.135707,4.200779,8.654697,-2.269386,8.444422,-3.715473,-3.410945,-3.993340,8.155699,6.668417,3.934280,6.900850,-4.251908,-0.132540,-1.724398,0.675261,-3.395227,5.880324,-8.912057,-3.959377,-8.408410,-4.394812,-6.636528,-9.040513,-0.569397,-9.921820,6.113438,-7.505931,-9.335609,6.306081,2.849336,-5.550846,-6.090815,2.442321,-9.733444,-8.378113,7.066500,3.115409,9.648596,3.746831,6.275288,0.038574,-1.465839,-6.054089,-2.636318,5.859378,-6.325654,0.639983,2.829264,-4.470803,-7.555590,-0.963753,4.591419,-6.552686,9.849640,5.050223,5.783696,-6.372075,-1.085333,-1.684834,-2.548902,3.162209,6.990257,1.138412,9.745039,-2.505661,2.056188,0.766530,-1.942172,1.920706,-1.547039,-6.557076,-0.919822,3.693917,9.651281,3.502016,6.141299,9.906820,-9.901019,6.699932,-6.975058,3.689289,-3.290601,-5.362300,-4.859361,-5.391558,-7.965794,-2.760299,1.440532,-2.790832,5.184464,9.357968,-1.378359,-8.897264,7.540590,-8.867339,3.384758,9.992696,0.047443,6.044479,-9.838324,-0.643286,-2.912447,4.887546,-0.697837,7.502672,7.392177,-4.100560,6.757443,-5.206201,-5.154548,-5.774436,1.439457,4.382238,2.167213,-1.537738,-0.147258,2.378603,-7.320985,8.813730,-8.180328,-6.187010,7.206549,3.494504,0.104597,2.463227,-4.863707,-0.931845,-3.339230,-4.096071,-0.096126,6.415662,2.660788,5.482022,7.555061,-8.584727,6.703423,8.395608,0.181725,9.533864,4.777223,-9.882124,-5.597806,8.641509,-6.218013,5.312786,-0.680895,-3.020166,9.267491,9.896494,-6.991159,-8.189701,3.074215,-4.339241,-2.393554,2.326583,-6.402586,2.260392,-9.348582,6.526993,4.121049,2.398556,0.914675,4.345164,-6.177106,2.607699,7.883681,-2.573045,-5.562858,7.662658,2.692413,-2.262178,7.551348,-9.641478,-2.958248,-9.840651,-0.211759,0.155911,3.192130,-1.334213,-7.360612,-1.146243,3.445510,-5.676635,2.715731,-8.034042,-0.675488,9.342858,5.553121,-0.179078,0.342018,5.074719,-5.876968,-4.551665,1.924230,7.279004,-9.585482,6.742315,9.743400,5.759350,-2.807584,5.845639,-1.772707,-2.836322,-0.911203,5.635561,2.621212,-0.040245,-0.907362,-5.436255,4.934377,9.278541,0.551338,-8.906758,-2.315504,-9.308639,8.879632,1.808954,-4.705425,0.379335,-7.901661,-6.934511,0.715073,-7.728882,8.267157,-2.044571,-8.438167,3.196893,-8.550613,-7.305106,6.241254,5.703439,-2.654319,8.135696,-0.763726,-1.011174,8.340226,0.180778,6.841917,-1.133058,-5.267963,7.659474,-4.167523,-4.037369,-1.810676,1.352566,8.891116,0.484918,-5.047338,-3.534894,8.763820,7.616902,-1.360384,-0.429760,-6.208779,-5.270470,4.599125,-9.205069,-8.720759,-6.850213,4.594016,8.632449,7.859445,4.486853,5.830210,-2.002009,-1.194884,3.948834,-9.259031,-1.536474,1.790395,1.056319,-0.277717,-7.035206,1.404329,-0.621187,0.506032,0.154228,-1.540017,-7.619911,9.574466,-0.530724,-9.361447,-3.673026,0.929316,-8.135058,4.480798,7.649460,5.132826,6.367265,9.832800,9.644740,8.451407,9.865055,0.957067,0.748204,-9.402954,-6.960361,7.817242,-5.583528,5.258791,2.998489,-2.961249,5.571005,4.256681,-8.249750,-3.370206,8.715866,6.186431,6.744772,-2.209248,4.195513,-4.821778,1.108044,-5.902867,4.350653,-3.427846,-0.723114,6.525288,-5.108694,-4.950940,0.192854,9.415414,-6.457334,9.892601,6.066082,-8.948904,8.154616,7.856139,3.812945,-3.318917,4.020985,3.748855,9.927036,2.766319,6.933572,1.032979,-3.077923,8.616894,5.905545,-2.422317,-1.806505,9.406786,-6.863339,8.738025,-6.792771,-0.055094,-2.378521,1.261176,-6.426701,-5.291246,0.175026,8.202378,-7.642940,-2.265111,8.340741,-7.049259,-0.804144,4.757852,-9.426302,-2.420573,-9.895627,3.078659,-2.977337,6.971238,4.026680,2.030061,9.715271,3.430327,8.840098,1.528301,-5.888557,5.594679,1.340505,4.462153,0.884571,-4.325495,-0.394695,-6.638296,-4.083629,-8.016318,9.761039,-8.854536,-7.648891,-6.964575,-1.021647,-8.768674,-8.016943,6.607200,2.536723,7.151349,-8.842672,-4.258293,2.796537,4.831888,-9.732760,-1.771539,3.067866,-6.812088,-7.656912,-4.046307,-3.604839,8.187849,-1.859675,-1.753886,-1.597066,-9.383898,6.026631,5.935776,3.130584,1.316812,-1.299150,-9.751340,-9.878609,8.538301,8.720949,6.536525,6.350788,-5.128480,1.959063,0.818948,7.626873,-3.505308,-9.139011,0.098788,4.186414,-9.602515,-4.834196,4.992697,6.633630,7.192530], dtype = "float64")#candidate|2274|(1716,)|const|float64
call_2273 = relay.TupleGetItem(func_1978_call(relay.reshape(const_2274.astype('float64'), [1716,])), 3)
call_2275 = relay.TupleGetItem(func_1980_call(relay.reshape(const_2274.astype('float64'), [1716,])), 3)
bop_2286 = relay.floor_mod(bop_2267.astype('float64'), relay.reshape(bop_2249.astype('float64'), relay.shape_of(bop_2267))) # shape=(5, 1, 2)
bop_2289 = relay.floor_mod(bop_2270.astype('float64'), relay.reshape(bop_2252.astype('float64'), relay.shape_of(bop_2270))) # shape=(5, 1, 2)
var_2295 = relay.var("var_2295", dtype = "float64", shape = (5, 2, 2))#candidate|2295|(5, 2, 2)|var|float64
bop_2296 = relay.bitwise_or(bop_2286.astype('uint16'), var_2295.astype('uint16')) # shape=(5, 2, 2)
bop_2299 = relay.bitwise_or(bop_2289.astype('uint16'), var_2295.astype('uint16')) # shape=(5, 2, 2)
uop_2302 = relay.sinh(call_2273.astype('float32')) # shape=(12, 11, 13)
uop_2304 = relay.sinh(call_2275.astype('float32')) # shape=(12, 11, 13)
output = relay.Tuple([const_2274,bop_2296,uop_2302,])
output2 = relay.Tuple([const_2274,bop_2299,uop_2304,])
func_2306 = relay.Function([var_2248,var_2295,], output)
mod['func_2306'] = func_2306
mod = relay.transform.InferType()(mod)
var_2307 = relay.var("var_2307", dtype = "float64", shape = (5, 1, 2))#candidate|2307|(5, 1, 2)|var|float64
var_2308 = relay.var("var_2308", dtype = "float64", shape = (5, 2, 2))#candidate|2308|(5, 2, 2)|var|float64
output = func_2306(var_2307,var_2308,)
func_2309 = relay.Function([var_2307,var_2308,], output)
mutated_mod['func_2309'] = func_2309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2222_call = mod.get_global_var('func_2222')
func_2223_call = mutated_mod.get_global_var('func_2223')
call_2311 = func_2222_call()
call_2312 = func_2222_call()
output = relay.Tuple([call_2311,])
output2 = relay.Tuple([call_2312,])
func_2332 = relay.Function([], output)
mod['func_2332'] = func_2332
mod = relay.transform.InferType()(mod)
mutated_mod['func_2332'] = func_2332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2332_call = mutated_mod.get_global_var('func_2332')
call_2333 = func_2332_call()
output = call_2333
func_2334 = relay.Function([], output)
mutated_mod['func_2334'] = func_2334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1888_call = mod.get_global_var('func_1888')
func_1890_call = mutated_mod.get_global_var('func_1890')
call_2352 = func_1888_call()
call_2353 = func_1888_call()
output = call_2352
output2 = call_2353
func_2356 = relay.Function([], output)
mod['func_2356'] = func_2356
mod = relay.transform.InferType()(mod)
mutated_mod['func_2356'] = func_2356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mutated_mod.get_global_var('func_2356')
call_2357 = func_2356_call()
output = call_2357
func_2358 = relay.Function([], output)
mutated_mod['func_2358'] = func_2358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2222_call = mod.get_global_var('func_2222')
func_2223_call = mutated_mod.get_global_var('func_2223')
call_2361 = func_2222_call()
call_2362 = func_2222_call()
output = relay.Tuple([call_2361,])
output2 = relay.Tuple([call_2362,])
func_2363 = relay.Function([], output)
mod['func_2363'] = func_2363
mod = relay.transform.InferType()(mod)
mutated_mod['func_2363'] = func_2363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2363_call = mutated_mod.get_global_var('func_2363')
call_2364 = func_2363_call()
output = call_2364
func_2365 = relay.Function([], output)
mutated_mod['func_2365'] = func_2365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2222_call = mod.get_global_var('func_2222')
func_2223_call = mutated_mod.get_global_var('func_2223')
call_2375 = func_2222_call()
call_2376 = func_2222_call()
func_1686_call = mod.get_global_var('func_1686')
func_1689_call = mutated_mod.get_global_var('func_1689')
var_2428 = relay.var("var_2428", dtype = "uint8", shape = (11, 25))#candidate|2428|(11, 25)|var|uint8
call_2427 = func_1686_call(relay.reshape(var_2428.astype('uint8'), [5, 5, 11]), relay.reshape(var_2428.astype('uint8'), [5, 5, 11]), )
call_2429 = func_1686_call(relay.reshape(var_2428.astype('uint8'), [5, 5, 11]), relay.reshape(var_2428.astype('uint8'), [5, 5, 11]), )
output = relay.Tuple([call_2375,call_2427,var_2428,])
output2 = relay.Tuple([call_2376,call_2429,var_2428,])
func_2432 = relay.Function([var_2428,], output)
mod['func_2432'] = func_2432
mod = relay.transform.InferType()(mod)
mutated_mod['func_2432'] = func_2432
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2433 = relay.var("var_2433", dtype = "uint8", shape = (11, 25))#candidate|2433|(11, 25)|var|uint8
func_2432_call = mutated_mod.get_global_var('func_2432')
call_2434 = func_2432_call(var_2433)
output = call_2434
func_2435 = relay.Function([var_2433], output)
mutated_mod['func_2435'] = func_2435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1888_call = mod.get_global_var('func_1888')
func_1890_call = mutated_mod.get_global_var('func_1890')
call_2442 = func_1888_call()
call_2443 = func_1888_call()
var_2452 = relay.var("var_2452", dtype = "float64", shape = (5, 1, 2))#candidate|2452|(5, 1, 2)|var|float64
bop_2453 = relay.maximum(call_2442.astype('float64'), relay.reshape(var_2452.astype('float64'), relay.shape_of(call_2442))) # shape=(5, 1, 2)
bop_2456 = relay.maximum(call_2443.astype('float64'), relay.reshape(var_2452.astype('float64'), relay.shape_of(call_2443))) # shape=(5, 1, 2)
func_826_call = mod.get_global_var('func_826')
func_829_call = mutated_mod.get_global_var('func_829')
var_2460 = relay.var("var_2460", dtype = "float32", shape = (90,))#candidate|2460|(90,)|var|float32
call_2459 = relay.TupleGetItem(func_826_call(relay.reshape(var_2460.astype('float32'), [10, 3, 3])), 3)
call_2461 = relay.TupleGetItem(func_829_call(relay.reshape(var_2460.astype('float32'), [10, 3, 3])), 3)
func_826_call = mod.get_global_var('func_826')
func_829_call = mutated_mod.get_global_var('func_829')
call_2464 = relay.TupleGetItem(func_826_call(relay.reshape(var_2460.astype('float32'), [10, 3, 3])), 2)
call_2465 = relay.TupleGetItem(func_829_call(relay.reshape(var_2460.astype('float32'), [10, 3, 3])), 2)
output = relay.Tuple([bop_2453,call_2459,var_2460,call_2464,])
output2 = relay.Tuple([bop_2456,call_2461,var_2460,call_2465,])
func_2483 = relay.Function([var_2452,var_2460,], output)
mod['func_2483'] = func_2483
mod = relay.transform.InferType()(mod)
var_2484 = relay.var("var_2484", dtype = "float64", shape = (5, 1, 2))#candidate|2484|(5, 1, 2)|var|float64
var_2485 = relay.var("var_2485", dtype = "float32", shape = (90,))#candidate|2485|(90,)|var|float32
output = func_2483(var_2484,var_2485,)
func_2486 = relay.Function([var_2484,var_2485,], output)
mutated_mod['func_2486'] = func_2486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2332_call = mod.get_global_var('func_2332')
func_2334_call = mutated_mod.get_global_var('func_2334')
call_2539 = relay.TupleGetItem(func_2332_call(), 0)
call_2540 = relay.TupleGetItem(func_2334_call(), 0)
func_1686_call = mod.get_global_var('func_1686')
func_1689_call = mutated_mod.get_global_var('func_1689')
const_2546 = relay.const([-5,-7,-7,-6,7,-5,8,-2,-5,-7,2,-3,1,3,2,-9,-2,-7,-9,4,-2,6,7,5,3,-6,-1,-5,-6,2,-2,-8,-9,3,-6,3,8,-8,-9,8,4,-1,2,-9,-6,-8,-4,-3,9,-1,5,-5,-5,-7,-7,-8,-8,7,-5,-8,-9,-9,1,6,-10,-9,10,9,8,-10,2,5,7,9,10,4,2,-6,9,-6,-8,-5,10,6,9,-4,-5,10,3,-5,7,-6,-7,3,-2,-5,4,3,-4,-6,6,-6,9,5,7,6,-1,10,-3,-4,-2,9,6,3,-10,5,-9,7,6,1,-1,-5,9,2,10,9,4,-9,-10,2,-3,4,-5,1,2,-7,1,7,9,4,-7,1,-2,2,7,2,9,2,-8,9,7,2,6,-7,-1,4,5,9,-10,-7,-5,4,6,9,-1,1,2,7,7,5,-5,5,-8,5,-7,2,-3,5,-6,-1,-5,-6,-10,-7,5,4,-2,-9,-5,-8,-1,2,9,-3,-4,-2,1,-5,9,5,-5,5,7,-8,10,-5,-6,-5,4,10,4,-6,7,5,1,-9,8,4,8,8,-9,1,9,2,5,3,3,-6,9,6,1,10,9,-5,-7,-9,7,4,5,3,-8,-1,6,-1,9,8,-3,1,2,3,2,-8,1,7,9,-7,-6,6,-8,-8,-4,-8,5,-1,7,8,5,8,-9,-3,7,-3,-10,7,-8], dtype = "uint8")#candidate|2546|(275,)|const|uint8
call_2545 = func_1686_call(relay.reshape(const_2546.astype('uint8'), [5, 5, 11]), relay.reshape(const_2546.astype('uint8'), [5, 5, 11]), )
call_2547 = func_1686_call(relay.reshape(const_2546.astype('uint8'), [5, 5, 11]), relay.reshape(const_2546.astype('uint8'), [5, 5, 11]), )
output = relay.Tuple([call_2539,call_2545,const_2546,])
output2 = relay.Tuple([call_2540,call_2547,const_2546,])
func_2570 = relay.Function([], output)
mod['func_2570'] = func_2570
mod = relay.transform.InferType()(mod)
output = func_2570()
func_2571 = relay.Function([], output)
mutated_mod['func_2571'] = func_2571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2332_call = mod.get_global_var('func_2332')
func_2334_call = mutated_mod.get_global_var('func_2334')
call_2623 = relay.TupleGetItem(func_2332_call(), 0)
call_2624 = relay.TupleGetItem(func_2334_call(), 0)
func_659_call = mod.get_global_var('func_659')
func_661_call = mutated_mod.get_global_var('func_661')
var_2631 = relay.var("var_2631", dtype = "float64", shape = (432,))#candidate|2631|(432,)|var|float64
call_2630 = relay.TupleGetItem(func_659_call(relay.reshape(var_2631.astype('float64'), [9, 3, 16])), 2)
call_2632 = relay.TupleGetItem(func_661_call(relay.reshape(var_2631.astype('float64'), [9, 3, 16])), 2)
func_826_call = mod.get_global_var('func_826')
func_829_call = mutated_mod.get_global_var('func_829')
const_2658 = relay.const([3.677360,-2.402747,5.979673,-2.898586,-4.346468,-6.850554,-5.166994,-8.543012,-7.112257,0.322212,4.218840,-5.474150,-6.471929,-8.624583,6.541892,4.037313,1.972776,-2.742617,-0.797559,3.576705,9.320239,6.496961,-9.527825,9.345028,-1.157491,4.667783,-6.777067,-0.543348,1.070169,7.992904,-0.464098,-2.704414,-3.790069,-1.810985,0.637310,5.699999,-1.750058,-5.871179,-9.677145,1.462557,-9.900339,6.387843,-4.434062,-6.960377,-5.549264,-1.434470,-7.070955,-5.552429,-2.539420,2.447990,-4.870437,-3.527255,-1.308346,1.896848,-6.555163,9.108140,4.998451,3.844954,-5.677884,-6.230307,0.726108,4.295261,4.668021,0.973916,7.783765,4.776444,7.593002,-4.781331,-0.991230,2.607512,-1.006314,7.016729,5.099059,5.186666,-3.058863,-8.712617,-6.281620,-2.926501,8.225110,6.685939,-5.646196,-8.333112,-8.773422,6.419952,-2.502643,7.743060,-4.988896,8.756450,-7.046098,0.975597], dtype = "float32")#candidate|2658|(90,)|const|float32
call_2657 = relay.TupleGetItem(func_826_call(relay.reshape(const_2658.astype('float32'), [10, 3, 3])), 0)
call_2659 = relay.TupleGetItem(func_829_call(relay.reshape(const_2658.astype('float32'), [10, 3, 3])), 0)
output = relay.Tuple([call_2623,call_2630,var_2631,call_2657,const_2658,])
output2 = relay.Tuple([call_2624,call_2632,var_2631,call_2659,const_2658,])
func_2665 = relay.Function([var_2631,], output)
mod['func_2665'] = func_2665
mod = relay.transform.InferType()(mod)
var_2666 = relay.var("var_2666", dtype = "float64", shape = (432,))#candidate|2666|(432,)|var|float64
output = func_2665(var_2666)
func_2667 = relay.Function([var_2666], output)
mutated_mod['func_2667'] = func_2667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2028_call = mod.get_global_var('func_2028')
func_2030_call = mutated_mod.get_global_var('func_2030')
call_2672 = relay.TupleGetItem(func_2028_call(), 0)
call_2673 = relay.TupleGetItem(func_2030_call(), 0)
uop_2679 = relay.sigmoid(call_2672.astype('float32')) # shape=(5, 1, 2)
uop_2681 = relay.sigmoid(call_2673.astype('float32')) # shape=(5, 1, 2)
bop_2683 = relay.subtract(uop_2679.astype('uint16'), relay.reshape(call_2672.astype('uint16'), relay.shape_of(uop_2679))) # shape=(5, 1, 2)
bop_2686 = relay.subtract(uop_2681.astype('uint16'), relay.reshape(call_2673.astype('uint16'), relay.shape_of(uop_2681))) # shape=(5, 1, 2)
func_1888_call = mod.get_global_var('func_1888')
func_1890_call = mutated_mod.get_global_var('func_1890')
call_2694 = func_1888_call()
call_2695 = func_1888_call()
func_2483_call = mod.get_global_var('func_2483')
func_2486_call = mutated_mod.get_global_var('func_2486')
const_2697 = relay.const([9.455702,-1.771956,-2.444128,7.478831,0.227901,-4.820339,-9.856429,1.572131,-6.901828,-9.560224,6.585847,1.945074,1.063912,-8.663779,5.573576,6.863234,9.884863,7.471840,-6.959805,-3.039822,0.994324,-2.959382,0.953192,7.541680,-8.118151,2.641000,0.442356,1.729756,-1.325800,6.769846,8.696670,-5.790580,4.277881,3.020171,-9.934641,2.249283,-2.677474,-9.098361,-5.104409,7.917594,5.955521,-1.337948,-1.998003,5.830574,3.489501,-3.600265,1.561202,-4.323972,-2.342374,-8.834841,8.798723,-9.293947,-0.562118,2.417858,-6.667629,3.316063,-1.551335,4.250658,-3.831276,3.813140,0.997880,-9.153929,0.102993,1.910036,-5.693174,-4.167271,-2.647520,-0.471625,5.778112,9.485237,-9.380800,7.461803,-5.231959,9.252786,8.154704,-3.142723,2.864476,9.905112,3.951379,-6.231804,4.256779,6.485334,-6.839212,-7.266504,-5.583465,8.589946,-8.527311,6.374086,9.213440,3.885213], dtype = "float32")#candidate|2697|(90,)|const|float32
call_2696 = relay.TupleGetItem(func_2483_call(relay.reshape(call_2694.astype('float64'), [5, 1, 2]), relay.reshape(const_2697.astype('float32'), [90,]), ), 3)
call_2698 = relay.TupleGetItem(func_2486_call(relay.reshape(call_2694.astype('float64'), [5, 1, 2]), relay.reshape(const_2697.astype('float32'), [90,]), ), 3)
func_2665_call = mod.get_global_var('func_2665')
func_2667_call = mutated_mod.get_global_var('func_2667')
var_2706 = relay.var("var_2706", dtype = "float64", shape = (216, 2))#candidate|2706|(216, 2)|var|float64
call_2705 = relay.TupleGetItem(func_2665_call(relay.reshape(var_2706.astype('float64'), [432,])), 3)
call_2707 = relay.TupleGetItem(func_2667_call(relay.reshape(var_2706.astype('float64'), [432,])), 3)
func_2306_call = mod.get_global_var('func_2306')
func_2309_call = mutated_mod.get_global_var('func_2309')
const_2713 = relay.const([7.370277,9.585596,-4.633840,8.011133,-3.012468,-2.817501,-1.045547,4.384392,-0.369836,6.772841,-8.518184,-9.190522,-4.750360,5.266973,-6.003242,0.748395,-1.864875,-6.240946,-3.151275,5.601468], dtype = "float64")#candidate|2713|(20,)|const|float64
call_2712 = relay.TupleGetItem(func_2306_call(relay.reshape(call_2694.astype('float64'), [5, 1, 2]), relay.reshape(const_2713.astype('float64'), [5, 2, 2]), ), 0)
call_2714 = relay.TupleGetItem(func_2309_call(relay.reshape(call_2694.astype('float64'), [5, 1, 2]), relay.reshape(const_2713.astype('float64'), [5, 2, 2]), ), 0)
bop_2716 = relay.multiply(bop_2683.astype('int16'), call_2696.astype('int16')) # shape=(5, 1, 2)
bop_2719 = relay.multiply(bop_2686.astype('int16'), call_2698.astype('int16')) # shape=(5, 1, 2)
uop_2741 = relay.rsqrt(bop_2716.astype('float64')) # shape=(5, 1, 2)
uop_2743 = relay.rsqrt(bop_2719.astype('float64')) # shape=(5, 1, 2)
func_568_call = mod.get_global_var('func_568')
func_572_call = mutated_mod.get_global_var('func_572')
const_2745 = relay.const([7.435638,-6.148896,1.930385,-7.325572,-9.258646,-7.222909,0.192622,-0.667240,-8.586661,4.343205,1.624517,-9.653386,-6.855745,-1.518988,5.877123,0.071300,-8.565928,3.124561,-3.308830,5.583736,7.207353,-1.582134,-1.700847,4.506625,-6.489143,-3.261663,1.075453,-4.497839,-5.415207,6.968541,1.309201,2.535106,-1.331067,-9.234732,-4.644382,6.109617,6.012864,-5.583035,-6.640736,-0.154581,-0.466013,4.204080,3.948277,8.731110,-2.538458,-0.235819,6.723962,0.209662,-9.548241,-6.948042,1.286050,-7.945844,8.461444,1.446222,2.287182,-5.456395,-4.999784,5.675202,1.177959,2.658011,6.414135,-9.550078,7.596966,-1.666802,5.991901,-6.522421,5.574309,3.299149,0.422014,-1.666826,3.951363,-1.551963,-8.147465,1.273669,-2.409418,7.674856,-4.937345,-7.971138,-8.162208,-9.773510,8.366130,-2.505701,6.877913,8.854557,-2.558567,8.915532,0.700013,6.775360,0.040373,6.193678,-7.504177,2.079839,-5.770421,-0.852555,7.005154,-4.161249,-3.161028,0.742360,8.323087,-5.426361,-4.971777,9.796039,-9.383824,-8.581740,8.503672,6.503216,-2.364852,7.261461,8.806083,9.430747,-5.025298,2.809112,9.416332,-1.766803,-3.298027,-7.048075,8.138674,-3.327480,4.070071,5.382862,-9.331477,-5.920197,-0.270232,-3.560820,7.287025,-9.508901,2.884211,-1.075237,-9.258121,0.479976,-0.329714,6.211839,5.587727,4.830373,-2.408776,-6.136606,0.179299,-0.062797,-6.140590,3.138125,-5.945187,3.861662,-9.379224,-9.737832,-4.692954,2.808163,-8.356960,-7.268526,-5.802946,-6.964183,0.972272,6.241193,2.505488,-0.077993,-1.271429,2.932803,3.113624,4.986512,6.718208,-9.620046,5.409369,-0.130157,-3.847581,-4.838196,-5.868548,-5.771655,7.759424,-5.172046,9.505327,-8.513310,0.902273,-7.925614,-7.041892,-0.415884,-5.584647,6.482099,-5.463191,9.968781,7.282914,0.673149,-1.695491,5.615828,9.073234,-7.414322,-6.845543,5.629024,-4.358960,-7.582408,1.534510,-2.179155,3.136085,8.073410,2.611186,-5.658620,-1.815146,-3.078524,8.416389,-7.297142,-4.649797,3.329442,1.229042,-6.757791,8.355948,-1.760197,6.777517,-5.552545,6.355879,-3.376669,-5.419807,5.931024,-9.151929,8.582538,6.289835,-7.829988,-7.920057,-0.803258,-8.907833,9.534874,6.035557,-1.710993,3.014107,0.630273,9.039318,5.677148,-4.324516,-7.277619,8.649528,4.275599,-9.293764,-5.475606,0.636054,-0.371799,3.984102,2.511903,-5.333068,7.403894,-1.137306,-9.287975,-1.699072,1.511879,-6.338823,5.607239,3.020153,-7.754015,-8.053792,-3.083492,0.301886,-4.842799,9.679017,1.689850,4.984861,4.232899,5.586395,9.979926,3.771231,-9.974863,9.729094,7.833309,-2.012444,-6.160051,-4.477296,5.608179,9.540190,-8.989994,8.922420,-8.723431,-3.496653,1.781083,6.870098,5.833880,9.018153,-1.882097,8.164556,-0.520025,5.865547,1.511638,0.583900,9.848088,-3.365488,1.123226,7.216344,-3.659891,9.784206,4.240698,2.074304,-1.799174,2.082048,5.699874,-2.461506,-2.974006,-9.868417,-7.010242,-8.532077,-3.545613,9.317603,6.583595,-6.730765,1.212929,0.834427,-5.580628,8.617307,2.557137,-3.482606,-1.958724,-0.891118,-9.219296,-1.542893,8.297186,6.884086,9.152422,1.812058,8.677904,-4.363890,-3.825708,-9.027606,-5.976120,9.993855,-6.773705,-6.665404,-7.599938,5.239944,4.386993,0.612464,0.563057,4.102265,-3.016488,6.453792,-1.325635,-6.984885,9.142054,8.318369,-2.342568,1.390269,-5.509543,1.323370,8.529668,-5.993885,-1.288740,0.389520,-7.296368,-4.467705,8.062477,-3.237041,-5.643748,-1.797973,5.332591,0.155850,-0.756295,-7.050985,5.900258,-8.397812,5.585142,0.892835,-7.824552,7.309994,5.166758,5.462357,7.311212,-4.471122,-5.791653,8.327835,6.189498,-2.436331,8.893721,-6.817389,-9.022113,7.140401,8.870386,-7.357839,4.738345,-8.576754,0.077426,-0.622228,-2.797839,-6.014840,0.752673,-0.207979,7.095307,3.964659,-9.877062,1.348083,-0.089049,-1.497464,0.011949,7.562911,-5.776933,-7.902521,-0.182335,-4.215757,1.264397,5.334349,-3.643990,1.396288,-6.141023,-6.548836,3.020543,-9.563996,3.665107,4.125410,0.430268,3.777128,1.221400,4.420842,-0.706200,-0.099703,8.153637,0.187674,9.313887,0.544007,8.813280,-7.081915,3.537554,-6.452142,1.526587,2.221477,-3.634292,-9.328657,-4.165218,3.395279,9.086758,4.797140,-0.618008,-4.076786,1.557663,1.714371,-5.442247,7.333378,-8.041669,-8.667177,-1.639929,-5.327776,-0.306647,-0.746222,1.860255,-5.621032,4.655561,4.827832,-9.155621,6.158911,9.830508,-6.742148,6.240911,4.318234,0.989044,1.678163,1.793912,-7.915565,7.889243,7.819778,2.518046,4.784828,3.297702,-0.492710,6.711988,2.021112,-3.739101,-7.282014,-6.731256,-3.934067,3.031986,2.061495,3.553909,-8.094783,-4.272281,7.371762,8.604834,-5.707546,1.594513,-7.387700,-9.942668,5.659263,2.545312,-4.072849,0.793552,4.261999,3.373141,-4.349431,4.587759,0.059064,-0.657781,1.182587,7.337212,-4.436767,-6.443114,8.668637,-7.118410,2.281341,-1.861341,4.654683,-0.844772,-0.028650,7.527455,6.410892,-8.313008,-2.986187,9.066858,-0.968212,7.722332,-5.058546,-2.358394,8.719760,-2.350393,-3.210112,-8.139127,9.643164,4.764207,-2.997293,-1.099099,6.136280,-2.925960,5.218014,7.196421,8.175959,-3.108448,-3.919280,6.578613,6.784835,-3.214200,3.465351,-1.745788,-0.793030,-9.938852,-6.226679,-2.969349,3.527161,-7.496013,-2.927910,1.365760,-1.910453,6.558480,-1.054108,-0.131578,1.695891,8.602328,-2.965250,6.202731,7.131384,5.122131,-4.956768,7.767444,3.770640,-6.339535,7.835024,5.706953,8.785664,-5.859243,5.888341,0.855208,-9.175600,4.226533,-9.607156,7.058200,0.186161,-2.293264,-3.524027,2.728710,0.669334,1.294584,8.335884,-6.232190,-4.541645,-1.900568,-0.927095,-0.057435,5.845484,9.182673,-5.877093,4.212946,4.227182,9.023657,-5.636003,5.861628,-4.986246,-9.888542,1.598999,-3.933625,-7.864997,-3.230654,-2.251833,6.690009,-5.150674,-8.973984,1.227412,-0.461871,6.054062,-6.279555,1.575251,7.658576,-9.975393,2.911943,-3.900599,1.937992,0.841641,1.925185,-0.238978,6.881195,9.442926,3.941533,3.940123,-6.761727,8.239808,-0.021487,-4.032725,-5.014322,-4.098713,2.813888,2.216516,5.032905,-2.172418,1.329916,2.273146,3.376836,-1.753329,4.300676,2.417855,-8.024715,-6.507742,1.746622,-5.638064,4.560145,3.604623,0.143631,-8.070758,6.476151,-2.701989,4.407763,5.243338,-1.066513,-5.930789,-7.409957,6.059513,-8.459097,6.471376,8.592298,-6.316278,-9.244112,0.829795,-4.716587,-0.681146,-2.780409,-5.458155,-4.920108,-8.401970,6.124221,-3.109509,-1.665809,-2.541384,2.816840,-7.909230,9.510921,-3.619363,9.655481,-9.831790,6.419173,1.715258,8.595259,9.019677,-9.657020,-0.060818,-7.569386,4.232871,5.164697,-6.989861,2.946573,7.051550,1.053049,3.681895,4.791895,-2.371982,-3.611479,-3.101924,-3.127696,-9.183315,4.024309,-0.219646,4.820587,6.640620,-0.987761,-5.738415,-3.339317,-1.180521,3.544268,-7.403596,1.499365,5.512905,7.826842,9.675049,5.106995,-3.961755,8.893594,1.111859,-6.717427,3.325797,-5.470942,-2.397692,2.627763,-5.928100,-5.616901,4.244007,3.796020,-6.902483,-8.945343,-2.065484,4.466806,-3.939589,-5.868953,9.587307,-6.392943,7.374627,-6.768949,-8.223853,-9.434132,-4.294845,9.171682,9.296439,-0.583555,2.294602,9.847664,2.605826,-0.768657,2.437081,5.032608,5.887456,2.993352,-4.115734,1.443693,2.834182,7.823317,-2.438991,9.197279,2.293622,8.283619,-1.896754,1.827606,0.843523,-5.534836,-6.872387,-4.162704,0.093981,-0.863898,6.968970,-3.779472,9.023785,0.755863,3.578363,2.460570,-1.716578,2.821171,-7.003919,-5.052202,4.887730,-1.115974,-3.485011,7.317658,7.057110,5.152123,2.966209,1.639670,1.569999,8.208475,-5.269725,-2.572990,2.558232,5.229829,-7.012228,-0.285259,-7.295427,3.804632,0.868914,1.297912,-2.029932,2.590025,-3.432433,-5.702463,0.641139,-2.321432,8.053171,5.739012,7.211494,-3.353694,-5.899597,5.908452,5.191819,-7.196477,9.742301,3.996935,-4.532743,-4.741521,-5.802930,1.826709,-4.734640,4.639556], dtype = "float32")#candidate|2745|(792,)|const|float32
call_2744 = relay.TupleGetItem(func_568_call(relay.reshape(call_2696.astype('uint32'), []), relay.reshape(const_2745.astype('float32'), [792,]), ), 1)
call_2746 = relay.TupleGetItem(func_572_call(relay.reshape(call_2696.astype('uint32'), []), relay.reshape(const_2745.astype('float32'), [792,]), ), 1)
func_826_call = mod.get_global_var('func_826')
func_829_call = mutated_mod.get_global_var('func_829')
call_2749 = relay.TupleGetItem(func_826_call(relay.reshape(call_2705.astype('float32'), [10, 3, 3])), 3)
call_2750 = relay.TupleGetItem(func_829_call(relay.reshape(call_2705.astype('float32'), [10, 3, 3])), 3)
func_2028_call = mod.get_global_var('func_2028')
func_2030_call = mutated_mod.get_global_var('func_2030')
call_2755 = relay.TupleGetItem(func_2028_call(), 0)
call_2756 = relay.TupleGetItem(func_2030_call(), 0)
output = relay.Tuple([call_2694,const_2697,call_2705,var_2706,call_2712,const_2713,uop_2741,call_2744,const_2745,call_2749,call_2755,])
output2 = relay.Tuple([call_2695,const_2697,call_2707,var_2706,call_2714,const_2713,uop_2743,call_2746,const_2745,call_2750,call_2756,])
func_2760 = relay.Function([var_2706,], output)
mod['func_2760'] = func_2760
mod = relay.transform.InferType()(mod)
var_2761 = relay.var("var_2761", dtype = "float64", shape = (216, 2))#candidate|2761|(216, 2)|var|float64
output = func_2760(var_2761)
func_2762 = relay.Function([var_2761], output)
mutated_mod['func_2762'] = func_2762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2363_call = mod.get_global_var('func_2363')
func_2365_call = mutated_mod.get_global_var('func_2365')
call_2781 = relay.TupleGetItem(func_2363_call(), 0)
call_2782 = relay.TupleGetItem(func_2365_call(), 0)
func_1888_call = mod.get_global_var('func_1888')
func_1890_call = mutated_mod.get_global_var('func_1890')
call_2786 = func_1888_call()
call_2787 = func_1888_call()
func_659_call = mod.get_global_var('func_659')
func_661_call = mutated_mod.get_global_var('func_661')
var_2792 = relay.var("var_2792", dtype = "float64", shape = (432,))#candidate|2792|(432,)|var|float64
call_2791 = relay.TupleGetItem(func_659_call(relay.reshape(var_2792.astype('float64'), [9, 3, 16])), 1)
call_2793 = relay.TupleGetItem(func_661_call(relay.reshape(var_2792.astype('float64'), [9, 3, 16])), 1)
func_2665_call = mod.get_global_var('func_2665')
func_2667_call = mutated_mod.get_global_var('func_2667')
call_2810 = relay.TupleGetItem(func_2665_call(relay.reshape(var_2792.astype('float64'), [432,])), 3)
call_2811 = relay.TupleGetItem(func_2667_call(relay.reshape(var_2792.astype('float64'), [432,])), 3)
uop_2844 = relay.sin(call_2791.astype('float64')) # shape=(11, 9, 8)
uop_2846 = relay.sin(call_2793.astype('float64')) # shape=(11, 9, 8)
func_659_call = mod.get_global_var('func_659')
func_661_call = mutated_mod.get_global_var('func_661')
call_2847 = relay.TupleGetItem(func_659_call(relay.reshape(var_2792.astype('float64'), [9, 3, 16])), 2)
call_2848 = relay.TupleGetItem(func_661_call(relay.reshape(var_2792.astype('float64'), [9, 3, 16])), 2)
output = relay.Tuple([call_2781,call_2786,var_2792,call_2810,uop_2844,call_2847,])
output2 = relay.Tuple([call_2782,call_2787,var_2792,call_2811,uop_2846,call_2848,])
func_2853 = relay.Function([var_2792,], output)
mod['func_2853'] = func_2853
mod = relay.transform.InferType()(mod)
mutated_mod['func_2853'] = func_2853
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2854 = relay.var("var_2854", dtype = "float64", shape = (432,))#candidate|2854|(432,)|var|float64
func_2853_call = mutated_mod.get_global_var('func_2853')
call_2855 = func_2853_call(var_2854)
output = call_2855
func_2856 = relay.Function([var_2854], output)
mutated_mod['func_2856'] = func_2856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2570_call = mod.get_global_var('func_2570')
func_2571_call = mutated_mod.get_global_var('func_2571')
call_2878 = relay.TupleGetItem(func_2570_call(), 0)
call_2879 = relay.TupleGetItem(func_2571_call(), 0)
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
var_2884 = relay.var("var_2884", dtype = "float64", shape = (1716,))#candidate|2884|(1716,)|var|float64
call_2883 = relay.TupleGetItem(func_1978_call(relay.reshape(var_2884.astype('float64'), [1716,])), 1)
call_2885 = relay.TupleGetItem(func_1980_call(relay.reshape(var_2884.astype('float64'), [1716,])), 1)
uop_2894 = relay.sigmoid(call_2883.astype('float64')) # shape=(12, 11, 13)
uop_2896 = relay.sigmoid(call_2885.astype('float64')) # shape=(12, 11, 13)
output = relay.Tuple([call_2878,var_2884,uop_2894,])
output2 = relay.Tuple([call_2879,var_2884,uop_2896,])
func_2899 = relay.Function([var_2884,], output)
mod['func_2899'] = func_2899
mod = relay.transform.InferType()(mod)
var_2900 = relay.var("var_2900", dtype = "float64", shape = (1716,))#candidate|2900|(1716,)|var|float64
output = func_2899(var_2900)
func_2901 = relay.Function([var_2900], output)
mutated_mod['func_2901'] = func_2901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2910 = relay.var("var_2910", dtype = "uint8", shape = (3, 3, 6))#candidate|2910|(3, 3, 6)|var|uint8
const_2911 = relay.const([[[-3,-7,2,9,-1,-10],[-10,9,1,7,8,-4],[4,-8,-5,8,-8,10]],[[-8,3,-9,-10,3,-5],[3,-2,7,-9,8,-5],[-6,10,-9,-3,1,-6]],[[-3,1,6,-10,-9,9],[8,10,-9,10,-7,9],[-3,3,-2,-4,7,-1]]], dtype = "uint8")#candidate|2911|(3, 3, 6)|const|uint8
bop_2912 = relay.bitwise_xor(var_2910.astype('uint8'), relay.reshape(const_2911.astype('uint8'), relay.shape_of(var_2910))) # shape=(3, 3, 6)
output = bop_2912
output2 = bop_2912
func_2916 = relay.Function([var_2910,], output)
mod['func_2916'] = func_2916
mod = relay.transform.InferType()(mod)
var_2917 = relay.var("var_2917", dtype = "uint8", shape = (3, 3, 6))#candidate|2917|(3, 3, 6)|var|uint8
output = func_2916(var_2917)
func_2918 = relay.Function([var_2917], output)
mutated_mod['func_2918'] = func_2918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2363_call = mod.get_global_var('func_2363')
func_2365_call = mutated_mod.get_global_var('func_2365')
call_2929 = relay.TupleGetItem(func_2363_call(), 0)
call_2930 = relay.TupleGetItem(func_2365_call(), 0)
func_1797_call = mod.get_global_var('func_1797')
func_1799_call = mutated_mod.get_global_var('func_1799')
var_2932 = relay.var("var_2932", dtype = "float64", shape = (12,))#candidate|2932|(12,)|var|float64
call_2931 = func_1797_call(relay.reshape(var_2932.astype('float64'), [6, 1, 2]))
call_2933 = func_1797_call(relay.reshape(var_2932.astype('float64'), [6, 1, 2]))
func_1640_call = mod.get_global_var('func_1640')
func_1645_call = mutated_mod.get_global_var('func_1645')
const_2935 = relay.const([7.537718,-2.909945,7.863780,7.397526,2.559473,-7.320308,-1.471871,7.455373,-4.849419,4.494004,-4.624040,-8.969053,6.673488,5.804329,-0.134703,-4.343097,-1.280986,-3.355580,0.082158,3.277080,-0.729711,0.195607,9.393628,-6.893384,-1.974111,-6.816222,-4.842675,1.648905,3.228794,2.844508,9.931410,-6.669446,-6.117375,1.640587,-8.513404,7.707896,-3.427854,5.112213,6.772697,3.250725,-6.293279,-3.983108,2.232637,-8.800663,-3.420225,-0.662494,6.037217,7.377265,4.588500,3.151027,6.943137,-0.568165,-5.920683,7.758905,2.805538,6.792316,-0.243065,7.523216,8.902167,4.052037,3.766166,6.222189,-1.917188,-3.302051,2.549831,1.111836,-6.109408,-6.861613,8.878674,-3.640920,4.365322,-9.028818,4.646770,1.589085,4.884724,-9.319868,-6.833444,8.837643,4.625739,8.776149,-2.969028,5.622673,-9.130124,0.941254,-4.905514,1.421244,1.973867,2.326328,0.883678,-2.994820,3.790378,5.358445,-1.386637,-7.637214,-0.471137,6.320379,-4.820194,-6.278167,-5.512186,6.014383,3.804653,-9.502350,-0.079269,-3.859870,-9.817261,1.166998,5.344035,-6.183262,4.860410,9.675751,-1.408372,-6.778839,-4.638258,2.953424,-6.082513,3.665494,4.112520,4.448324,1.285896,1.293144,-2.405343,-0.242181,6.845189,4.640570,1.577388,3.527127,8.506537,2.566602,-0.494780,7.078652,3.057449,-6.068714,-0.732421,-6.810539,1.360158,-7.144748,-0.591406,-7.011366,6.652904,0.744916,-1.798826,-4.332590,-4.826631,6.773567,-0.116178,-6.676200,2.826006,7.852357,-4.219381,-6.548994,7.834706,9.249386,3.254923,-1.641215,9.935388,7.336280,-6.956404,-7.215072,4.725817,2.294828,-0.829970,8.514806,-5.396477,6.809739,2.571431,6.467994,-4.574796,-0.780766,-9.096122,-5.811060,-3.125081,1.477266,1.865491,-9.916692,-0.787558,7.047811,2.170587,-1.808414,9.419982,-5.580057,4.844170,2.688403,-2.570120,4.914122,-4.637140,-8.044863,-9.118054,4.468039,0.355021,-0.818996,2.235029,-9.481156,2.211719,1.669496,9.205218,0.947713,2.577957,-8.709573,-3.715493,-6.672570,-6.802373,-1.762311,-8.275334,-6.070633,2.481351,2.173797,-9.678798,9.786445,4.010512,-6.644484,-8.573047,3.035845,7.770771,1.055985,-3.547353,-1.166249,-9.067646,9.476840,2.383079,5.250060,-5.819116,4.564283,-8.289225,-5.565675,4.539504,-0.698911,-3.298336,6.708235,-4.864653,-7.347615,-9.415536,0.792046,9.849620,-1.861859,-2.815357,6.503458,-1.906077,-3.097265,8.898132,-2.977069,2.204010,-3.951364,5.972313,4.974469,-9.416801,-2.452828,8.445856,5.382004,-6.785319,3.382902,6.077924,5.450149,3.638499,9.977323,7.228672,-7.808939,-7.179578,-1.214590,-9.539321,4.132350,5.876282,-3.697663,8.218952,4.994536,5.391871,5.122146,1.418202,-1.411168,-2.804530,6.685232,-7.485723,-3.513919,-7.709659,-9.861174,2.662810,0.453929,4.984651,7.284652,-1.891826,-7.841432,4.982753,-7.489819,-1.862453,6.553531,-1.783494,-2.853741,-7.114447,-7.168738,-4.596519,-0.447813,-1.926624,-9.458908,0.740203,5.433055,9.229914,6.035906,3.062654,6.802253,-1.969491,-3.735726,-3.260228,4.269996,6.168418,0.433259,-4.559513,8.794150,-5.502025,-5.133903,0.820698,3.731601,1.742233,2.773773,-0.942509,8.062807,-0.390608,-9.369432,-7.401874,4.804755,5.985186,9.162573,-4.787272,-7.984246,4.503209,-0.332691,-7.612304,2.535792,-8.486372,-9.831757,5.971286,-6.411808,5.425561,-1.628219,-8.173388,-8.904451,5.369558,-6.295240,-9.009323,-9.151695,9.438007,4.166970,-9.652203,-4.925559,1.000934,5.870772,-7.635827,-9.154779,-9.333430,7.548691,1.773879,-0.389282,-4.770315,-8.166249,-4.129735,-6.359312,-9.770358,2.140974,-2.924811,0.107685,6.951730,-3.353992,-9.358894,2.879146,-2.987527,-5.859637,-7.823380,-9.132340,9.916690,-1.145142,7.933461,9.624301,-0.207272,-6.829486,-4.393822,-7.949684,-4.893461,1.364500,-4.296769,-5.042080,-1.284090,-9.847562,7.134808,8.756864,4.611812,-4.003489,-0.195111,-1.083717,6.633405,4.756510,6.548243,8.112990,-2.155762,-0.890485,9.633695,2.488248,9.056300,3.842455,-4.438685,5.599230,-8.472384,-1.507035,-2.456414,9.306675,8.877283,4.997399,-9.663636,7.974898,-5.006728,9.444264,-2.388686,9.249887,-0.792170,-8.551963,4.697385,6.223194,-5.020991,-8.705962,-5.324519,-5.898446,-7.763821,-9.785168,-5.058015,5.488134,-4.488355,-6.317407,-8.297003,-0.570129,-3.225458,1.001112,1.585312,0.626008,8.111999,-5.541063,6.048689,0.627640,-6.422522,8.568478,8.260736,3.181079,0.412117,-7.985354,0.325423,8.686665,-0.507877,4.496760,8.204279,3.161309,-0.755869,-8.395318,-4.241887,0.616157,-9.579209,4.357695,-8.805023,1.932731,-0.363144,0.921722,-3.458276,-1.501715,0.120612,-1.477704,-4.163159,2.508302,9.117525,9.178646,-5.097612,8.512971,5.067258,-4.171852,6.696771,1.036825,-1.090345,-0.226172,6.484071,4.434944,-9.342725,8.576031,3.374603,-9.596293,1.625472,-3.661234,-8.696323,-6.156838,-8.585232,1.816293,-0.773560,5.811497,6.875214,5.440015,-2.366461,-7.430762,8.494284,-0.079445,-2.030279,4.461647,-0.481656,7.754742,5.194768,-0.769849,7.290119,-0.885656,-1.308734,-8.596160,5.740120,1.325820,-0.752776,-4.392625,6.175265,-9.460712,7.750307,4.038028,2.363137,9.542259,-9.828385,-3.667147,5.261347,2.579182,-2.426785,-6.904151,-2.528083,-1.083544,0.930896,-7.520476,5.648702,-6.738278,-2.845093,-6.247841,4.619373,1.732695,2.166819,0.831069,-2.069004,-3.100033,-0.673015,-2.858438,-6.835119,1.259115,1.243199,9.691116,-8.983448,-7.621949,7.888884,-0.928608,-4.410181,3.192500,7.839785,-4.895432,1.999849,-9.764713,8.970510,-7.802567,9.530473,4.448516,1.483347,9.331048,2.758491,9.092881,-3.235203,8.347096,8.850475,-4.755001,7.259493,-3.923998,-6.982795,-2.036376,3.387325,3.664176,-4.626496,3.019512,2.456053,5.606808,-4.702506,-1.345303,-3.536008,7.603761,-6.566482,-7.581991,1.574888,-1.321419,8.397921,4.957657,-1.957680,-1.746885,-7.455471,-7.331304,-8.552250,-6.326574,-1.123699,-9.076027,-5.709683,-2.743926,3.116379,-2.602723,7.182965,-1.457475,9.793723,5.779236,2.094028,-2.463345,-7.090972,2.786479,-5.334791,0.237502,-6.917003,9.638370,-3.973947,7.819808,-8.100948,-1.436767,8.012264,-0.264688,-2.728146,-8.155485,1.705974,1.007898,0.811643,8.616768,-1.336650,3.729392,-4.134504,7.954770,-6.590859,-6.044588,-1.265312,5.412043,-6.351807,-9.271910,9.901699,-6.100898,7.694861,-4.668460,-4.814824,-6.462751,5.034252,-0.128888,-9.593889,-8.802417,-6.974702,0.087365,6.695395,-5.125829,8.295882,-1.035967,4.148396,6.285716,3.980853,-9.099985,5.051882,-1.047258,-3.463344,-2.365255,7.090494,7.471124,-6.008745,-3.131533,5.902557,5.278713,-6.706031,-9.005921,-3.083793,-4.603317,3.406798,0.113243,-0.406510,4.498738,-5.104310,8.862752,-2.937132,-5.621905,-9.611329,-4.036508,4.707272,-7.747761,-1.875644,-8.563640,-1.087531,-1.429286,8.544819,1.013156,2.186790,-9.888513,-8.030634,5.023512,-6.877674,2.798936,2.202586,4.577171,4.974348,-6.588005,-9.910735,-9.925006,0.062521,-9.931997,2.916551,-6.688917,8.998329,-5.864241,7.147416,-3.730502,2.854808,-6.322432,-1.336223,-9.983505,2.774475,0.149657,6.233614,-7.713590,-0.551776,5.482126,-0.891413,-9.680153,-0.594197,-8.499081,9.609471,4.655745,-3.625478,1.057609,6.876244,1.470097,-9.479087,-5.051611,-9.122377,-7.227363,-1.993945,-9.586409,-1.695868,-2.267497,-6.267173,-0.314055,4.261884,-9.076596,5.892964,-2.179423,4.915613,2.102219,-0.214643,7.624466,-8.677401,1.787006,5.609296,-9.912250,2.619616,-1.357218,9.872343,6.797264,4.011150,-0.368723,6.005052,9.368110,-8.348242,-0.373107,8.775743,-4.213675,5.547310,-0.821748,5.397211,-5.534671,4.334519,-6.609696,7.071262,0.081235,-4.499486,5.118224,5.628135,-5.850086,9.893027,-2.165241,2.197588,0.063438,5.977195,2.526368,-6.700568,2.503165,4.734519,-0.319955,9.470505,7.686653,8.714848,4.538348,4.502690,6.663762,-8.257348,5.559499,-5.595630,-3.475419,-9.306880,-1.810167,-9.775560,-1.633251,-6.223889,-7.473975,4.379697,7.321028,8.000935,5.974511,-2.808586,4.441305,-3.172059,-9.334187,2.464258,-8.895600,4.768989,-2.124605,-4.650965,9.222318,9.620113,-6.787163,7.680764,-6.406219,-9.621643,6.336774,-1.317429,3.685114,-0.522512,5.524792,8.501260,0.202169,-1.606706,-6.037698,2.919334,8.471479,2.061646,9.176527,8.941572,0.164634,8.287502,8.057178,-4.391926,-7.428755,-2.651025,-5.832811,-9.394919,-1.645550,-4.221344,1.426937,-9.810836,-9.485354,2.988377,-6.719903,3.108281,-5.027789,7.032720,-6.849315,6.193107,-3.502584,-9.703785,2.437168,-4.561526,-1.759843,-1.735409,-7.492449,-2.302373,-1.824257,-7.986459,5.792122,8.382612,-9.332948,8.446043,-9.958101,-5.911355,-6.291429,2.405406,6.645168,-2.935196,-9.804377,0.685894,7.303269,-4.977935,7.525861,9.809422,-1.001105,5.413189,4.504284,-4.794690,4.272665,-8.401882,3.063764,6.640190,0.657163,-7.416826,-3.363419,8.356647,-5.162722,3.763589,-4.130318,-5.774929,4.561639,-8.667752,-4.476802,-0.429659,7.772476,4.566615,4.458428,7.932277,-1.337118,-4.396225,6.456582,8.807657,0.363869,-1.304714,9.784187,1.544039,-5.629867,5.665524,-2.859959,-2.328367,-7.328228,-2.357822,-5.418667,-5.629859,-3.689892,5.462782,-7.696301,2.975208,8.795794,-8.186778,-2.622443,-3.700161,2.675820,5.306659,8.214736,2.489675,7.385307,9.997610,4.806237,4.714158,3.269028,0.623325,7.775479,3.656866,-3.171327,0.139650,1.730429,6.996006,8.265665,-1.437227,-3.998441,-5.104963,-1.598902,9.067005,4.426859,1.828638,3.664663,4.154025,2.359432,-3.407809,-1.356715,-0.294117,8.860315,-5.915564,-5.379452,3.207049,-4.097070,-4.481539,-3.724507,-2.443802,-3.984913,-1.314200,-9.655553,-0.294839,-1.798626,-1.260432,-3.614037,6.464948,-0.311982,-8.855542,-0.396277,-4.850947,6.871468,3.104547,-0.148485,-6.538326,8.356279,9.052054,-1.409129,5.065307,-9.301834,9.416614,-1.679551,-5.688123,-2.408916,0.082084,-1.192692,2.466316,8.757597,8.889624,-3.489750,-5.125449,-4.309885,7.047844,-2.906605,-0.803280,-2.296401,1.595170,-0.469184,-8.832355,8.267140,0.586099,3.002080,5.295568,-9.870960,-1.025078,-2.208772,-3.077397,-2.945891,4.014381,4.999946,6.203836,1.007252,-2.028571,-7.965323,-5.126463,4.105667,-6.772219,-7.724167,6.931601,-2.362513,2.688088,-4.089472,-1.770418,-8.868370,4.920069,5.654582,5.717203,-2.060977,-7.028403,-2.934516,-8.315112,-2.210749,-3.035008,-6.330339,2.639857,-7.722154,-8.187329,3.548857,3.999295,-4.480072,4.251982,-0.768033,8.991152,-8.573203,4.965209,-9.339178,-8.420612,-3.845275,-8.691193,-6.682475,-1.091005,-0.095826,-0.404726,9.589199,4.628732,-3.287345,2.573770,-1.803663,5.824467,-2.911575,3.884621,-8.952465,7.401484,3.906474,-3.806396,-3.958253,-8.242298,4.236166,-2.047911,-0.210402,-0.192172,-0.726779,3.701001,-6.923599,1.315999,-3.700705,-6.868334,3.785230,8.757565,6.435596,-5.857056,-7.784954,-2.818073,6.154695,-8.491214,6.431712,0.451427,-0.486061,-7.533199,4.197371,9.413349,-3.826450,3.936087,-9.773720,-3.383685,-8.748156,9.524817,1.866106,-1.687064,-8.582906,7.237279,9.001014,4.210941,9.409008,8.470044,7.841539,-0.495988,-7.160804,0.176150,0.415900,-5.212144,0.025446,-8.716727,9.306360,3.443803,-6.754837,4.264746,1.107169,9.461297,-4.194565,-6.152352,-5.379512,-1.643364,-3.528183,9.993932,8.884269,3.619644,6.183337,-4.028427,-4.323187,-8.563336,-1.905780,-9.961485,-7.198954,-8.781423,-6.040428,-0.547263,-6.518128,8.756451,9.176237,-8.980891,-2.668240,6.820015,4.421427,8.686468,0.999215,-8.308330,7.039481,-2.007364,4.936489,2.409633,2.229183,-5.527585,-6.774755,-4.511406,-5.765415,-3.322498,-1.103149,-8.708965,3.406641,8.145172,9.302781,-9.554173,-6.384800,-9.747488,-7.221743,-9.498179,7.915685,7.808224,-4.199808,7.335921,-7.691572,-4.743607,9.746537,-7.583715,-1.782438,-9.957446,-0.798462,-1.208586,9.388732,-7.307696,-7.688060,1.004861,8.006635,3.033359,-7.198584,-0.755855,0.691434,5.294522,4.303932,3.381731,3.633595,0.290363,7.440555,-5.928424,-9.652316,-1.416042,7.258539,-6.435968,-3.765336,6.767259,8.144316,1.016264,-5.237479,6.191731,-5.681409,1.325131,-8.374446,2.218195,-6.057101,-5.272665,-3.761275,-6.310392,-8.119846,-7.410139,-3.748149,8.943420,2.490536,-8.117411,9.102985,3.567629,7.673129,2.038787,1.846472,7.654034,4.624053,-4.677702,-9.393468,5.253949,-6.650736,1.411827,8.852798,-6.879036,8.776027,-9.051190,-4.444263,-5.072292,-5.668828,-3.737471,4.805638,-5.779280,3.680851,-4.076729,1.444486,1.717419,-7.029652,-9.185505,2.863978,-6.628788,-8.634820,-8.366665,7.836213,-0.762784,-7.316634,3.040009,-8.154899,-4.248740,2.090039,1.886751,8.815490,-9.226714,7.959160,2.802399,7.568259,0.157164,2.482442,-6.780045,-8.622947,-7.627613,6.117607,-4.249936,1.262047,-6.091849,-2.495079,3.647746,-8.594690,2.060722,3.766072,-9.162013,-0.565011,-3.756829,4.118078,-6.551861,7.461649,2.641466,2.517948,-3.525238,-3.285976,2.016778,-4.300038,-6.691518,-8.797311,-3.168025,8.976709,-6.470333,-2.168472,2.333825,5.856350,2.679538,-2.990616,-5.105312,0.524928,4.617449,9.724385,-6.990067,8.143769,-7.641152,-8.369110,7.255564,6.480677,9.573679,-2.353592,-1.458572,2.317339,-3.418785,-4.824008,9.146599,7.489311,1.453013,0.245928,-0.758564,3.006859,-0.762109,0.797579,9.427657,3.825799,-5.523476,0.878281,1.936929,6.594499,-9.167575,-7.836981,2.598072,-8.215603,-8.451096,-0.634417,7.033283,2.299082,4.987984,4.379969,-0.868578,5.969057,5.451268,5.383841,0.301947,-6.394821,-2.879607,6.513702,7.113458,-2.370969,4.751615,-0.078026,-1.921701,-5.245760,5.681958,-6.048871,-7.437169,-4.200890,-7.907616,5.692546,-9.078366,-6.728991,-4.335173,-6.330431,2.253757,-5.917905,3.562818,1.676510,-9.419099,0.062793,-8.350184,2.623861,-1.100268,-5.878024,8.170272,-9.336924,8.007758,-1.173195,1.362114,6.167860,-1.121376,9.026393,4.602136,6.559989,4.215148,5.176017,5.115811,-9.219313,-7.423649,-8.831524,-0.384641,-8.316261,1.040347,-4.525519,7.816664,-9.109836,3.930904,-6.690536,-7.384763,-5.426943,-4.723552,8.614021,6.381961,3.245303,-2.410902,3.008512,4.266816,5.322560,4.923285,4.270425,1.308269,-8.932772,3.828301,4.868938,-1.611838,8.962872,5.009270,-4.296745,2.267756,2.005947,-0.298203,-3.633902,-4.685848,-2.786209,5.905211,-4.626801,4.477057,6.403277,5.745829,4.691303,1.643074,4.374865,4.140037,1.432149,3.662482,4.057494,7.707684,0.049789,5.029156,4.441481,0.918060,4.325950,-8.904778,-8.079250,-3.301194,-4.375651,-0.557800,-0.290911,5.512820,-7.510756,-7.648153,-4.164431,-8.399543,1.918502,-5.562541,-4.032255,8.099263,-2.025504,0.591085,4.730244], dtype = "float32")#candidate|2935|(1456,)|const|float32
const_2936 = relay.const(5, dtype = "uint32")#candidate|2936|()|const|uint32
call_2934 = relay.TupleGetItem(func_1640_call(relay.reshape(const_2935.astype('float32'), [16, 7, 13]), relay.reshape(const_2935.astype('float32'), [16, 7, 13]), relay.reshape(const_2936.astype('uint32'), []), ), 1)
call_2937 = relay.TupleGetItem(func_1645_call(relay.reshape(const_2935.astype('float32'), [16, 7, 13]), relay.reshape(const_2935.astype('float32'), [16, 7, 13]), relay.reshape(const_2936.astype('uint32'), []), ), 1)
func_2853_call = mod.get_global_var('func_2853')
func_2856_call = mutated_mod.get_global_var('func_2856')
var_2959 = relay.var("var_2959", dtype = "float64", shape = (432,))#candidate|2959|(432,)|var|float64
call_2958 = relay.TupleGetItem(func_2853_call(relay.reshape(var_2959.astype('float64'), [432,])), 0)
call_2960 = relay.TupleGetItem(func_2856_call(relay.reshape(var_2959.astype('float64'), [432,])), 0)
func_2665_call = mod.get_global_var('func_2665')
func_2667_call = mutated_mod.get_global_var('func_2667')
call_2964 = relay.TupleGetItem(func_2665_call(relay.reshape(var_2959.astype('float64'), [432,])), 3)
call_2965 = relay.TupleGetItem(func_2667_call(relay.reshape(var_2959.astype('float64'), [432,])), 3)
output = relay.Tuple([call_2929,call_2931,var_2932,call_2934,const_2935,const_2936,call_2958,var_2959,call_2964,])
output2 = relay.Tuple([call_2930,call_2933,var_2932,call_2937,const_2935,const_2936,call_2960,var_2959,call_2965,])
func_2966 = relay.Function([var_2932,var_2959,], output)
mod['func_2966'] = func_2966
mod = relay.transform.InferType()(mod)
var_2967 = relay.var("var_2967", dtype = "float64", shape = (12,))#candidate|2967|(12,)|var|float64
var_2968 = relay.var("var_2968", dtype = "float64", shape = (432,))#candidate|2968|(432,)|var|float64
output = func_2966(var_2967,var_2968,)
func_2969 = relay.Function([var_2967,var_2968,], output)
mutated_mod['func_2969'] = func_2969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1888_call = mod.get_global_var('func_1888')
func_1890_call = mutated_mod.get_global_var('func_1890')
call_2984 = func_1888_call()
call_2985 = func_1888_call()
func_2483_call = mod.get_global_var('func_2483')
func_2486_call = mutated_mod.get_global_var('func_2486')
const_2994 = relay.const([6.125713,5.330807,-4.708646,-3.005644,-3.516880,-2.444759,8.371909,0.162436,9.810342,-7.169542,3.695738,-6.742788,-3.416916,-0.959139,4.396619,1.654517,3.968137,-0.865708,4.131103,-0.406711,-0.075417,-2.622699,-5.871967,-0.438447,8.435071,9.223669,-6.521677,-8.739018,4.632942,-0.551814,-5.953325,6.706405,-0.147965,5.306389,-1.426965,-5.222390,-5.404971,-4.715208,-1.359120,-9.271813,-7.239169,-0.449310,-4.567197,9.142228,5.492900,-0.027567,3.388529,0.399051,5.243475,0.303390,0.746738,-7.698553,-3.528157,-6.031102,7.076105,-2.469702,-0.016247,-3.401046,9.345716,-8.474543,1.410681,-7.476433,-4.238765,-0.692106,9.054287,-4.162965,2.178667,-9.904268,4.361005,-5.984392,-1.413349,-4.747863,3.750443,3.082803,-6.059397,-6.462229,-0.115625,-5.966344,-1.268115,-2.866833,6.435675,-0.620602,0.363049,-4.875688,4.597130,0.900016,-6.805585,-3.254149,-4.043980,-9.904866], dtype = "float32")#candidate|2994|(90,)|const|float32
call_2993 = relay.TupleGetItem(func_2483_call(relay.reshape(call_2984.astype('float64'), [5, 1, 2]), relay.reshape(const_2994.astype('float32'), [90,]), ), 1)
call_2995 = relay.TupleGetItem(func_2486_call(relay.reshape(call_2984.astype('float64'), [5, 1, 2]), relay.reshape(const_2994.astype('float32'), [90,]), ), 1)
output = relay.Tuple([call_2984,call_2993,const_2994,])
output2 = relay.Tuple([call_2985,call_2995,const_2994,])
func_3006 = relay.Function([], output)
mod['func_3006'] = func_3006
mod = relay.transform.InferType()(mod)
mutated_mod['func_3006'] = func_3006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3006_call = mutated_mod.get_global_var('func_3006')
call_3007 = func_3006_call()
output = call_3007
func_3008 = relay.Function([], output)
mutated_mod['func_3008'] = func_3008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3006_call = mod.get_global_var('func_3006')
func_3008_call = mutated_mod.get_global_var('func_3008')
call_3045 = relay.TupleGetItem(func_3006_call(), 1)
call_3046 = relay.TupleGetItem(func_3008_call(), 1)
output = relay.Tuple([call_3045,])
output2 = relay.Tuple([call_3046,])
func_3054 = relay.Function([], output)
mod['func_3054'] = func_3054
mod = relay.transform.InferType()(mod)
mutated_mod['func_3054'] = func_3054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3054_call = mutated_mod.get_global_var('func_3054')
call_3055 = func_3054_call()
output = call_3055
func_3056 = relay.Function([], output)
mutated_mod['func_3056'] = func_3056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3006_call = mod.get_global_var('func_3006')
func_3008_call = mutated_mod.get_global_var('func_3008')
call_3076 = relay.TupleGetItem(func_3006_call(), 1)
call_3077 = relay.TupleGetItem(func_3008_call(), 1)
output = call_3076
output2 = call_3077
func_3080 = relay.Function([], output)
mod['func_3080'] = func_3080
mod = relay.transform.InferType()(mod)
output = func_3080()
func_3081 = relay.Function([], output)
mutated_mod['func_3081'] = func_3081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2363_call = mod.get_global_var('func_2363')
func_2365_call = mutated_mod.get_global_var('func_2365')
call_3122 = relay.TupleGetItem(func_2363_call(), 0)
call_3123 = relay.TupleGetItem(func_2365_call(), 0)
output = relay.Tuple([call_3122,])
output2 = relay.Tuple([call_3123,])
func_3125 = relay.Function([], output)
mod['func_3125'] = func_3125
mod = relay.transform.InferType()(mod)
mutated_mod['func_3125'] = func_3125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3125_call = mutated_mod.get_global_var('func_3125')
call_3126 = func_3125_call()
output = call_3126
func_3127 = relay.Function([], output)
mutated_mod['func_3127'] = func_3127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2332_call = mod.get_global_var('func_2332')
func_2334_call = mutated_mod.get_global_var('func_2334')
call_3164 = relay.TupleGetItem(func_2332_call(), 0)
call_3165 = relay.TupleGetItem(func_2334_call(), 0)
uop_3171 = relay.exp(call_3164.astype('float32')) # shape=(5, 1, 2)
uop_3173 = relay.exp(call_3165.astype('float32')) # shape=(5, 1, 2)
func_2483_call = mod.get_global_var('func_2483')
func_2486_call = mutated_mod.get_global_var('func_2486')
var_3179 = relay.var("var_3179", dtype = "float32", shape = (90,))#candidate|3179|(90,)|var|float32
call_3178 = relay.TupleGetItem(func_2483_call(relay.reshape(call_3164.astype('float64'), [5, 1, 2]), relay.reshape(var_3179.astype('float32'), [90,]), ), 3)
call_3180 = relay.TupleGetItem(func_2486_call(relay.reshape(call_3164.astype('float64'), [5, 1, 2]), relay.reshape(var_3179.astype('float32'), [90,]), ), 3)
output = relay.Tuple([uop_3171,call_3178,var_3179,])
output2 = relay.Tuple([uop_3173,call_3180,var_3179,])
func_3195 = relay.Function([var_3179,], output)
mod['func_3195'] = func_3195
mod = relay.transform.InferType()(mod)
mutated_mod['func_3195'] = func_3195
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3196 = relay.var("var_3196", dtype = "float32", shape = (90,))#candidate|3196|(90,)|var|float32
func_3195_call = mutated_mod.get_global_var('func_3195')
call_3197 = func_3195_call(var_3196)
output = call_3197
func_3198 = relay.Function([var_3196], output)
mutated_mod['func_3198'] = func_3198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2028_call = mod.get_global_var('func_2028')
func_2030_call = mutated_mod.get_global_var('func_2030')
call_3203 = relay.TupleGetItem(func_2028_call(), 0)
call_3204 = relay.TupleGetItem(func_2030_call(), 0)
var_3209 = relay.var("var_3209", dtype = "float64", shape = (5, 14, 2))#candidate|3209|(5, 14, 2)|var|float64
bop_3210 = relay.greater(call_3203.astype('bool'), var_3209.astype('bool')) # shape=(5, 14, 2)
bop_3213 = relay.greater(call_3204.astype('bool'), var_3209.astype('bool')) # shape=(5, 14, 2)
output = bop_3210
output2 = bop_3213
func_3229 = relay.Function([var_3209,], output)
mod['func_3229'] = func_3229
mod = relay.transform.InferType()(mod)
mutated_mod['func_3229'] = func_3229
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3230 = relay.var("var_3230", dtype = "float64", shape = (5, 14, 2))#candidate|3230|(5, 14, 2)|var|float64
func_3229_call = mutated_mod.get_global_var('func_3229')
call_3231 = func_3229_call(var_3230)
output = call_3231
func_3232 = relay.Function([var_3230], output)
mutated_mod['func_3232'] = func_3232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_3250 = func_2356_call()
call_3251 = func_2356_call()
func_3229_call = mod.get_global_var('func_3229')
func_3232_call = mutated_mod.get_global_var('func_3232')
var_3253 = relay.var("var_3253", dtype = "float64", shape = (140,))#candidate|3253|(140,)|var|float64
call_3252 = func_3229_call(relay.reshape(var_3253.astype('float64'), [5, 14, 2]))
call_3254 = func_3229_call(relay.reshape(var_3253.astype('float64'), [5, 14, 2]))
func_2206_call = mod.get_global_var('func_2206')
func_2208_call = mutated_mod.get_global_var('func_2208')
var_3257 = relay.var("var_3257", dtype = "float64", shape = (286, 6))#candidate|3257|(286, 6)|var|float64
call_3256 = relay.TupleGetItem(func_2206_call(relay.reshape(var_3257.astype('float64'), [1716,])), 0)
call_3258 = relay.TupleGetItem(func_2208_call(relay.reshape(var_3257.astype('float64'), [1716,])), 0)
func_3195_call = mod.get_global_var('func_3195')
func_3198_call = mutated_mod.get_global_var('func_3198')
const_3260 = relay.const([-0.004866,4.465904,5.789131,1.823473,-1.323867,-3.470700,8.712296,4.911806,-5.590996,6.506391,0.575819,9.809641,7.212404,6.709630,9.613788,6.802230,5.399798,8.882731,-8.592376,0.011973,-3.905459,3.202622,-5.518972,5.480530,-4.940478,3.862718,9.286868,2.385256,1.661973,4.895418,-9.934549,7.968622,1.294184,-9.162660,7.233293,0.706860,1.429346,2.101973,4.438985,-7.148031,-8.992335,3.834528,4.252612,-6.158641,4.633986,6.127166,-6.131265,0.377003,5.756886,-3.907550,5.420179,7.212651,-3.280238,-6.461967,8.882813,-2.644106,6.936775,0.805163,-4.961422,8.773769,7.726173,4.934353,8.148983,-2.712529,-2.736153,6.886706,-0.049068,-0.660957,-3.922835,-7.675744,-4.328874,4.326309,-1.441302,-5.044133,-1.560391,-6.687119,-1.594305,1.590140,-9.695209,-2.053880,-6.045057,-4.044168,-3.389892,-6.813998,-0.492049,4.469177,5.916738,-3.302536,2.481969,-1.579200], dtype = "float32")#candidate|3260|(90,)|const|float32
call_3259 = relay.TupleGetItem(func_3195_call(relay.reshape(const_3260.astype('float32'), [90,])), 1)
call_3261 = relay.TupleGetItem(func_3198_call(relay.reshape(const_3260.astype('float32'), [90,])), 1)
func_2001_call = mod.get_global_var('func_2001')
func_2003_call = mutated_mod.get_global_var('func_2003')
var_3266 = relay.var("var_3266", dtype = "float64", shape = (300,))#candidate|3266|(300,)|var|float64
call_3265 = relay.TupleGetItem(func_2001_call(relay.reshape(var_3266.astype('float64'), [6, 10, 5])), 1)
call_3267 = relay.TupleGetItem(func_2003_call(relay.reshape(var_3266.astype('float64'), [6, 10, 5])), 1)
func_2332_call = mod.get_global_var('func_2332')
func_2334_call = mutated_mod.get_global_var('func_2334')
call_3270 = relay.TupleGetItem(func_2332_call(), 0)
call_3271 = relay.TupleGetItem(func_2334_call(), 0)
output = relay.Tuple([call_3250,call_3252,var_3253,call_3256,var_3257,call_3259,const_3260,call_3265,var_3266,call_3270,])
output2 = relay.Tuple([call_3251,call_3254,var_3253,call_3258,var_3257,call_3261,const_3260,call_3267,var_3266,call_3271,])
func_3275 = relay.Function([var_3253,var_3257,var_3266,], output)
mod['func_3275'] = func_3275
mod = relay.transform.InferType()(mod)
mutated_mod['func_3275'] = func_3275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3275_call = mutated_mod.get_global_var('func_3275')
var_3277 = relay.var("var_3277", dtype = "float64", shape = (140,))#candidate|3277|(140,)|var|float64
var_3278 = relay.var("var_3278", dtype = "float64", shape = (286, 6))#candidate|3278|(286, 6)|var|float64
var_3279 = relay.var("var_3279", dtype = "float64", shape = (300,))#candidate|3279|(300,)|var|float64
call_3276 = func_3275_call(var_3277,var_3278,var_3279,)
output = call_3276
func_3280 = relay.Function([var_3277,var_3278,var_3279,], output)
mutated_mod['func_3280'] = func_3280
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3333 = relay.const([[[-3.091449,7.734493,-3.761810,7.947554,-7.834439,2.991446,-7.595497,-8.167555,-9.316724,-8.417654],[6.308552,5.004479,-7.720408,-0.223997,4.786448,-3.008543,-3.443032,-2.267653,-4.672794,-3.802139]],[[-5.490465,-4.054571,4.918307,2.294817,6.795569,3.158405,-7.511565,6.855123,-1.963968,1.052323],[9.317848,5.098344,-5.867547,-7.828952,-1.796821,4.437697,-7.755336,4.192111,-0.168584,-7.760242]],[[-5.195532,-4.749343,-5.790497,-0.491333,-5.535681,-6.860527,8.820251,2.929174,0.427792,-7.258383],[-1.401613,-1.767362,7.080935,-1.796623,4.153905,-2.999691,8.084073,-8.464447,-7.732014,-8.781465]],[[9.796071,-3.645826,9.906176,-3.930365,6.601151,-6.030958,-2.440511,4.444621,-9.974616,-8.259646],[-9.012962,-0.201606,9.617751,7.733591,0.901283,-2.333068,0.692612,4.760965,-8.670492,3.462132]],[[4.470149,-5.642942,6.392988,8.747114,7.945157,8.513061,-6.777720,6.836942,-9.089814,3.919105],[9.833688,-8.781177,-6.058361,3.295630,8.506459,9.414940,-9.133329,5.283027,8.190303,8.179174]],[[-5.178457,-4.320389,-4.141401,-5.813943,-8.068073,-2.032181,-4.607601,-4.622283,7.385001,9.467862],[6.065495,1.042067,-7.523671,0.537160,1.714774,4.587977,6.650214,2.438983,6.983335,-7.800054]]], dtype = "float64")#candidate|3333|(6, 2, 10)|const|float64
var_3334 = relay.var("var_3334", dtype = "float64", shape = (6, 2, 10))#candidate|3334|(6, 2, 10)|var|float64
bop_3335 = relay.power(const_3333.astype('float64'), relay.reshape(var_3334.astype('float64'), relay.shape_of(const_3333))) # shape=(6, 2, 10)
output = relay.Tuple([bop_3335,])
output2 = relay.Tuple([bop_3335,])
func_3343 = relay.Function([var_3334,], output)
mod['func_3343'] = func_3343
mod = relay.transform.InferType()(mod)
mutated_mod['func_3343'] = func_3343
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3344 = relay.var("var_3344", dtype = "float64", shape = (6, 2, 10))#candidate|3344|(6, 2, 10)|var|float64
func_3343_call = mutated_mod.get_global_var('func_3343')
call_3345 = func_3343_call(var_3344)
output = call_3345
func_3346 = relay.Function([var_3344], output)
mutated_mod['func_3346'] = func_3346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_3353 = func_2356_call()
call_3354 = func_2356_call()
func_1437_call = mod.get_global_var('func_1437')
func_1439_call = mutated_mod.get_global_var('func_1439')
var_3365 = relay.var("var_3365", dtype = "float64", shape = (1, 1716))#candidate|3365|(1, 1716)|var|float64
call_3364 = func_1437_call(relay.reshape(var_3365.astype('float64'), [12, 11, 13]))
call_3366 = func_1437_call(relay.reshape(var_3365.astype('float64'), [12, 11, 13]))
bop_3367 = relay.greater(var_3365.astype('bool'), relay.reshape(call_3364.astype('bool'), relay.shape_of(var_3365))) # shape=(1, 1716)
bop_3370 = relay.greater(var_3365.astype('bool'), relay.reshape(call_3366.astype('bool'), relay.shape_of(var_3365))) # shape=(1, 1716)
output = relay.Tuple([call_3353,bop_3367,])
output2 = relay.Tuple([call_3354,bop_3370,])
func_3372 = relay.Function([var_3365,], output)
mod['func_3372'] = func_3372
mod = relay.transform.InferType()(mod)
mutated_mod['func_3372'] = func_3372
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3373 = relay.var("var_3373", dtype = "float64", shape = (1, 1716))#candidate|3373|(1, 1716)|var|float64
func_3372_call = mutated_mod.get_global_var('func_3372')
call_3374 = func_3372_call(var_3373)
output = call_3374
func_3375 = relay.Function([var_3373], output)
mutated_mod['func_3375'] = func_3375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_3391 = func_2356_call()
call_3392 = func_2356_call()
output = relay.Tuple([call_3391,])
output2 = relay.Tuple([call_3392,])
func_3394 = relay.Function([], output)
mod['func_3394'] = func_3394
mod = relay.transform.InferType()(mod)
mutated_mod['func_3394'] = func_3394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3394_call = mutated_mod.get_global_var('func_3394')
call_3395 = func_3394_call()
output = call_3395
func_3396 = relay.Function([], output)
mutated_mod['func_3396'] = func_3396
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3481 = relay.const([[[-7.265341,5.950490,-0.078131,5.912516,-9.860263],[-2.568589,-7.205256,8.544934,3.456567,-2.681440],[-5.440781,4.685329,-4.545435,5.225705,-1.265457],[8.869221,2.869097,-2.855953,-4.845527,1.756210],[0.945315,-1.876268,9.914839,2.148785,-0.256971]],[[8.896107,0.407656,-3.521105,9.186780,0.177909],[-3.564169,-3.418875,1.893215,9.001301,0.351263],[-6.649738,3.762254,-8.638504,-7.255728,2.106651],[0.839658,-2.030669,9.689658,8.250103,-0.064713],[-5.610759,7.976414,6.172911,-0.856889,-1.394921]],[[1.084325,-7.560328,-2.197852,-3.474243,-7.700175],[4.457344,-8.348533,-1.186847,-8.632550,-5.319269],[-6.505275,8.710947,-6.751980,-7.721037,-8.270842],[-4.716224,-0.108790,-3.833155,0.377886,1.301482],[-4.204650,-5.380026,-5.734187,0.934911,-7.974105]],[[-9.438786,-8.195118,-6.723039,-7.757968,5.961502],[0.088163,-6.268106,-4.929751,-8.124997,6.712929],[-0.188495,7.303907,-3.892815,0.520332,-5.545975],[-9.827753,2.369869,0.234611,2.791283,-9.879970],[-8.994617,-6.720966,1.465789,7.338567,-9.887467]],[[-5.315201,-8.209492,0.649750,3.629219,-4.820756],[-5.208720,-2.358247,-6.582752,4.057109,5.672694],[-0.172059,-1.547102,8.898575,-0.337827,6.688524],[6.643713,2.268776,4.143053,9.702299,4.755081],[9.116644,-7.300400,7.903381,8.057321,-5.540741]],[[1.580930,-9.671071,2.809420,0.987870,-2.447173],[-1.778441,-9.560240,0.677703,1.492531,1.297133],[3.459595,-3.762697,-4.751349,-0.236884,5.898364],[6.352812,1.413253,-0.984311,8.117315,-7.313924],[-4.902580,2.054851,-6.647891,4.566661,0.239518]],[[0.474459,1.696928,-8.514947,4.323768,1.022944],[6.447038,9.781029,-3.667721,0.487017,-1.062291],[2.072656,7.666018,0.652361,1.462464,8.211343],[9.199849,1.213383,-5.648273,0.352679,-2.572101],[-0.013199,5.940103,5.604789,5.246895,8.476534]],[[-5.699531,4.399851,3.426548,-1.448574,2.690450],[-9.238404,-7.655538,2.633041,0.617420,-4.383966],[6.034874,-6.834399,1.614026,-5.988344,-2.610027],[-2.698595,-8.579321,-0.033644,-9.993191,-2.257787],[-5.488791,8.886194,8.127470,-8.743432,8.682320]],[[-1.548048,7.777985,7.868381,-0.562669,-2.886729],[7.523173,-6.843120,-8.797523,7.042018,6.101142],[-4.414833,-8.552667,-9.020802,-7.608281,2.754802],[1.189408,-1.664304,-1.455247,5.788835,6.160788],[7.667880,-1.139630,-5.521782,6.971956,-7.646786]],[[5.696482,-0.875963,-9.529103,4.179188,6.405384],[-9.278513,5.725387,-3.223692,-8.038617,-8.903363],[0.316430,-6.941717,8.029640,-2.815735,-6.158641],[5.646226,8.254503,-9.625590,-0.077614,-0.010341],[-6.507312,7.684965,6.690480,7.759647,0.947118]],[[0.366700,1.916270,5.863234,-0.662272,1.177583],[-8.080980,-6.948974,6.803375,6.928904,3.844947],[6.007900,-3.203615,0.332329,-4.224309,5.230375],[-7.237852,-8.538123,-4.100613,3.651893,8.876746],[2.685319,4.297386,0.785281,-7.590196,4.792811]],[[-3.568206,8.036717,5.864414,-8.984167,6.593854],[3.622289,-6.400001,-4.503120,9.579781,4.596829],[-5.545393,-1.708758,5.202275,-5.969524,-0.280149],[0.539472,2.758863,1.688469,1.753598,-6.629295],[2.692588,-0.896138,-4.511855,-7.383168,-0.573949]]], dtype = "float32")#candidate|3481|(12, 5, 5)|const|float32
uop_3482 = relay.cos(const_3481.astype('float32')) # shape=(12, 5, 5)
output = relay.Tuple([uop_3482,])
output2 = relay.Tuple([uop_3482,])
func_3485 = relay.Function([], output)
mod['func_3485'] = func_3485
mod = relay.transform.InferType()(mod)
mutated_mod['func_3485'] = func_3485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mutated_mod.get_global_var('func_3485')
call_3486 = func_3485_call()
output = call_3486
func_3487 = relay.Function([], output)
mutated_mod['func_3487'] = func_3487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_3518 = func_2356_call()
call_3519 = func_2356_call()
func_2001_call = mod.get_global_var('func_2001')
func_2003_call = mutated_mod.get_global_var('func_2003')
var_3525 = relay.var("var_3525", dtype = "float64", shape = (300,))#candidate|3525|(300,)|var|float64
call_3524 = relay.TupleGetItem(func_2001_call(relay.reshape(var_3525.astype('float64'), [6, 10, 5])), 0)
call_3526 = relay.TupleGetItem(func_2003_call(relay.reshape(var_3525.astype('float64'), [6, 10, 5])), 0)
func_2916_call = mod.get_global_var('func_2916')
func_2918_call = mutated_mod.get_global_var('func_2918')
const_3528 = relay.const([10,-6,10,7,9,-9,5,4,9,5,6,-10,-1,1,3,-3,10,8,-3,1,-7,10,8,-9,-3,1,-4,-6,-1,-10,3,-9,-3,2,2,-9,-4,10,2,-1,6,6,10,4,-1,8,-10,-6,4,10,-3,-4,9,-3], dtype = "uint8")#candidate|3528|(54,)|const|uint8
call_3527 = func_2916_call(relay.reshape(const_3528.astype('uint8'), [3, 3, 6]))
call_3529 = func_2916_call(relay.reshape(const_3528.astype('uint8'), [3, 3, 6]))
func_3229_call = mod.get_global_var('func_3229')
func_3232_call = mutated_mod.get_global_var('func_3232')
const_3531 = relay.const([5.887016,6.345544,-6.144687,-5.417411,1.696785,-7.362802,-9.885782,3.485147,6.524973,7.159135,1.362602,-3.378008,8.234876,-8.118694,3.253693,-5.130140,8.070025,-1.928231,-5.749264,8.654023,5.095862,8.531203,4.317814,2.279767,1.939958,4.750353,-6.840243,-4.239795,7.006896,-8.631893,1.707426,3.693280,-4.644059,3.005691,-9.305694,8.970753,-3.792454,-3.897837,8.756003,-4.435510,-2.943307,-3.147600,7.897774,-0.993565,3.346889,9.916832,4.135074,6.125670,-1.133531,-2.297627,-5.311101,-2.650105,-4.111623,-2.559060,-3.073767,3.588602,-4.086391,0.812219,-7.600201,-3.054375,-1.415636,-3.422932,-7.615423,-8.967750,-8.421009,3.878365,-1.945980,2.548891,-9.014052,-9.986524,-1.998185,-3.266459,2.682756,-1.426667,5.243641,-5.324740,-9.147661,-4.786117,-1.430630,4.882056,7.049943,6.032489,-8.072971,0.802965,-0.404939,9.361025,5.302034,5.053198,7.587534,-1.697796,-6.767006,6.267200,8.589389,0.839812,-3.033940,8.268349,-9.968773,0.562436,7.343793,6.560244,-6.286680,8.558611,-1.297299,4.419732,-6.436559,2.094509,-7.898109,-6.981249,-6.224522,9.434152,-7.614758,-2.683490,-2.373323,-2.282996,-2.546656,4.203618,-5.579482,-5.956639,-9.418721,1.188066,5.903533,2.175463,2.253436,-9.826402,-3.661802,-6.211102,-1.289843,5.565068,-5.265599,-0.294040,3.008546,5.662486,-8.041301,4.319368,1.686689,-9.840442,9.678838,-9.953016,3.178462,-9.286183], dtype = "float64")#candidate|3531|(140,)|const|float64
call_3530 = func_3229_call(relay.reshape(const_3531.astype('float64'), [5, 14, 2]))
call_3532 = func_3229_call(relay.reshape(const_3531.astype('float64'), [5, 14, 2]))
uop_3538 = relay.acos(call_3530.astype('float32')) # shape=(5, 14, 2)
uop_3540 = relay.acos(call_3532.astype('float32')) # shape=(5, 14, 2)
output = relay.Tuple([call_3518,call_3524,var_3525,call_3527,const_3528,const_3531,uop_3538,])
output2 = relay.Tuple([call_3519,call_3526,var_3525,call_3529,const_3528,const_3531,uop_3540,])
func_3546 = relay.Function([var_3525,], output)
mod['func_3546'] = func_3546
mod = relay.transform.InferType()(mod)
var_3547 = relay.var("var_3547", dtype = "float64", shape = (300,))#candidate|3547|(300,)|var|float64
output = func_3546(var_3547)
func_3548 = relay.Function([var_3547], output)
mutated_mod['func_3548'] = func_3548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2363_call = mod.get_global_var('func_2363')
func_2365_call = mutated_mod.get_global_var('func_2365')
call_3550 = relay.TupleGetItem(func_2363_call(), 0)
call_3551 = relay.TupleGetItem(func_2365_call(), 0)
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
const_3567 = relay.const([2.230496,-2.963452,7.548740,1.445099,9.478284,-1.806846,3.499121,9.417489,-5.201421,1.276397,5.404080,3.363780,2.532498,3.397476,1.526409,8.893437,8.799403,9.348728,-8.809374,0.886485,3.401156,8.861939,5.364341,-2.272658,1.728105,6.900562,8.195388,5.937341,0.554217,2.517331,7.210872,4.405153,2.074000,8.143269,9.177626,9.157643,-3.789088,-9.153881,5.931990,-2.539290,-5.765468,-5.298903,-7.164184,-0.453614,-5.322790,-2.690251,3.456416,-3.124807,0.438423,-4.485116,7.592184,3.474804,-5.250718,6.884133,-7.156019,-7.845798,-1.965404,6.304109,-7.506963,-4.572218,5.915649,0.500368,-6.464477,1.399213,3.183106,-5.119158,4.032457,5.854426,0.523026,-6.402917,-9.618252,-2.221694,7.228778,0.071759,-4.342409,-3.487104,0.644208,-2.738394,-6.111317,0.061708,0.302593,-0.836891,4.542331,-0.562579,-6.879794,2.209717,9.850107,2.155617,7.684315,4.821329,-6.193821,6.607900,9.107805,9.760579,-7.463473,5.754616,2.846075,-7.205706,1.563990,9.169780,9.228670,-9.938744,3.533188,6.326361,5.586325,-0.202871,7.981860,6.707977,8.964519,-6.650008,8.095691,5.042634,5.321395,8.060526,-9.546190,-1.520698,3.553332,-0.782542,3.133502,1.263346,-9.837102,-0.620685,-4.994033,-6.859387,5.969303,9.068216,8.197234,4.247447,-4.986688,5.630710,4.974313,2.539512,5.473418,8.801545,2.622675,6.965414,-8.535008,9.445225,6.024772,-1.414884,-5.831326,7.170805,-7.379936,-2.370739,8.723526,7.032825,-8.563348,-9.231511,4.550750,-3.974201,-1.734188,-5.798638,8.829460,2.012425,-8.912333,4.782400,0.673069,-8.715714,3.093082,7.506149,-7.264531,-5.475619,6.849575,-7.687400,-4.804828,0.823329,-4.069911,-9.610994,-2.540083,-0.681934,1.115524,6.517803,-4.965355,8.899720,7.255291,1.471882,9.435105,-7.484733,-1.971903,3.402768,7.400313,7.382559,6.669894,5.907185,-2.864869,-8.445616,-7.934843,-0.659905,5.894646,-5.290743,-6.702986,-8.915882,5.149135,-6.032689,-3.328500,8.272489,9.516127,0.084603,-0.465662,-1.727939,6.035094,-1.018282,-8.560511,-0.700944,-4.825152,-4.967769,-4.842469,7.645165,4.454503,9.573448,4.762850,1.082682,-6.689718,6.049871,-2.214515,6.743002,-3.238739,2.895742,-8.023940,-0.907478,-5.197139,-7.789306,-8.181048,1.462789,3.540173,2.741554,2.843387,2.772712,7.682946,-9.307904,-5.377234,1.823265,3.087683,-2.149632,0.007542,1.966754,4.133042,-4.553634,3.101535,-4.340925,0.921271,9.498935,-5.539109,-6.905724,-4.077982,7.103154,-3.264278,2.821304,2.917502,5.109339,0.889058,7.811123,-1.857670,-1.257926,5.616954,7.393497,-7.353143,6.261763,7.381507,-0.734865,-5.146746,2.918201,7.074946,-4.091956,-4.920188,3.018999,-9.135259,-3.929100,-4.303707,-2.680426,5.188587,-9.091160,9.077905,4.691201,4.865429,-6.515295,2.482942,-1.912962,-9.907820,-7.072277,1.990704,-8.449818,-7.425701,-6.361589,7.888507,-3.067317,-2.871068,-2.235466,-1.289978,1.356184,-7.993626,7.883080,5.582390,-8.391280,-7.310177,-8.985236,-6.015341,-9.636827,2.955471,8.045506,8.487542,-8.064086,8.308093,6.488709,-7.010860,6.268241,-0.172609,-6.487739,7.162655,-4.653248,4.183045,1.998116,3.120218,-1.659369,-3.168142,-4.393167,6.724836,-0.536317,4.993365,-7.036160,-2.070242,-1.883069,-9.825770,-9.877146,8.051264,-4.913552,7.072767,-9.161748,9.367515,8.063007,5.163997,6.713140,-9.046725,3.378645,-3.052390,9.016058,2.173373,4.731777,0.363201,5.852084,-9.104682,0.053809,6.647633,8.865652,3.140905,2.066190,-8.159096,9.119522,-4.215878,-3.701520,9.091268,7.018406,-7.446864,-1.131861,-8.579973,-6.274985,4.966213,-8.407135,-7.887351,3.656744,-5.166393,-3.334118,-8.991411,-3.671365,-2.805772,6.361062,-6.084716,-0.080375,1.717731,-3.218998,3.768544,2.414475,0.073923,9.475800,1.564639,1.191864,6.072560,-6.663489,2.988218,-6.590062,9.960657,4.680190,-1.998286,-2.580917,3.210783,3.756699,-4.632637,9.428639,-7.739006,0.255983,-3.249830,-1.891165,-4.800274,9.913688,9.929382,9.559020,2.237251,-6.042148,-8.439829,3.083020,-1.257905,-1.525675,7.749619,-1.914217,2.052199,0.171157,-4.778623,6.681545,-2.539338,-4.282170,6.727266,7.591939,2.436260,-9.288708,-6.972930,5.168512,8.527785,8.754130,6.731670,-3.465642,0.039798,-1.291869,3.625682,-3.070695,-9.378861,1.069699,-3.728131,-5.826790,7.872973,-3.999025,1.155743,-1.259759,5.199362,7.125737,9.042820,2.412848,-4.572182,-6.674118,-6.017423,2.004322,7.854382,-7.564590,7.028352,3.740922,4.177709,7.095881,8.395875,5.371700,7.047472,-7.363270,8.513563,-8.470370,3.659823,1.544318,4.682619,1.866907,-3.793419,7.929888,-5.516090,-9.936194,-6.265451,-4.769347,3.858001,-2.806617,5.334813,9.076463,0.140145,-6.703334,-3.801717,-6.570049,-3.879978,-4.345915,4.672556,3.737865,0.070130,4.480945,1.486171,4.725386,-0.970168,9.451095,-8.394700,-9.726696,-0.950771,1.227635,-1.813826,6.006788,8.847534,4.483714,5.745828,-9.261251,-9.423583,-7.746396,-6.214351,-4.545330,6.632789,-3.689140,-6.606829,8.657836,7.756420,8.910630,-6.164166,-5.683846,4.071970,-1.681863,-5.109458,3.077004,7.706879,-4.996191,9.123744,-3.737585,4.513944,8.178719,9.600475,-7.591718,1.600676,-8.614798,-9.227493,4.332608,6.884325,-9.581055,-0.936965,-0.967524,3.956685,4.374252,-7.944505,-5.928486,-4.780085,3.259490,-4.617557,-5.480795,-6.434313,-4.166476,-9.158106,-2.660229,7.210585,7.356011,-5.432415,1.181786,2.707131,-6.112855,-1.775011,5.384438,-4.129385,-9.278229,-4.070632,-3.815404,-6.067121,-7.404318,-2.373573,-6.377909,2.999209,-2.228720,4.201675,-2.815996,-7.962472,-4.018153,4.061425,-6.905980,4.259195,-6.906854,1.533925,-3.781158,3.798480,-5.781973,6.518302,-2.511612,1.650695,-0.581060,-2.795767,3.590607,0.422764,-3.814929,1.347561,4.274799,3.968262,-8.559982,-8.755892,-3.615233,5.759419,-1.645638,2.794662,-4.457342,9.567283,-6.481724,6.377987,-3.990083,8.719517,4.672931,7.905501,8.777866,-9.968480,-1.633759,-2.324345,0.500582,8.603147,-9.824886,-3.420934,5.473953,9.543133,9.013831,2.108898,-2.146597,-5.391412,8.519450,-5.044442,1.574515,6.107789,7.080638,-3.877367,7.952747,-2.709769,4.201073,-4.417262,-2.097974,-3.550106,-1.444280,-0.982470,-3.872649,-1.963730,-6.490644,7.879832,-9.651091,6.744746,-7.778179,-0.538861,-5.777441,-0.261515,7.031077,-8.845258,-7.266989,8.280378,6.993362,5.274295,3.908152,4.688169,-8.241539,1.969158,2.561753,9.821182,-5.537181,-0.310555,-6.717768,-8.190592,6.126142,-1.785101,6.764655,5.612926,7.794499,3.172755,-9.438559,-8.134129,7.110709,3.024169,5.290734,-5.248902,-6.291885,-9.666103,3.863548,-4.519915,8.990380,5.668125,9.233388,4.016171,1.398395,2.713285,-3.835944,0.847995,6.989506,-8.655408,1.462149,-3.073319,0.127846,-4.416717,-2.786242,-7.661379,1.353009,-6.589276,-7.844087,3.908052,-0.232230,5.733078,9.074925,-1.822365,-6.021918,0.078206,-2.822893,0.314107,-9.021419,-3.196062,6.344669,-5.869669,-3.344885,2.195795,6.426015,6.858329,8.450841,-4.483868,8.421423,9.600162,6.937544,9.996427,-5.423149,-3.554233,-0.427927,5.673799,7.413678,0.839212,1.794179,-8.676767,4.676047,-6.447319,-5.494435,6.108094,-8.430181,7.123168,4.901243,8.128870,-7.639610,-1.230679,-9.892204,-6.736593,-7.924449,-1.440458,-4.223482,-0.035164,-3.995679,-0.557871,0.021205,-2.060354,-9.742941,4.245034,-6.918407,3.251731,-4.288373,9.922280,-2.303896,-3.880465,0.855202,-9.106938,6.124832,-0.144948,6.177090,8.914199,-7.378912,-4.478015,6.006709,6.296583,-4.549535,-1.813675,-4.693158,-5.508056,3.861641,9.088834,5.269403,-4.584766,-4.247812,-1.604430,6.070738,-5.011888,2.102157,-5.396648,3.729181,-4.087524,0.759230,-0.672009,-4.747658,-1.676735,-8.263762,5.007754,0.702239,-4.236445,-5.498345,7.721005,-0.943661,7.527908,9.297924,9.008986,3.436260,-9.030781,-6.647094,9.618440,5.607684,6.593285,5.907767,8.765000,-5.613952,5.506704,-8.283022,5.683194,-1.686474,-4.099696,-5.987221,-5.468673,9.796919,-2.337044,-7.226727,3.022908,5.863067,6.668845,6.750602,0.464897,-2.532819,-9.518790,-2.083757,-8.605423,-7.875702,-5.220460,-9.723046,0.458904,8.281674,4.087239,4.806516,-8.372069,0.218630,5.744388,-3.013055,7.348323,3.280275,-7.434557,8.025754,8.660623,9.599307,-5.086514,-9.074399,-7.721575,-9.085931,6.078539,-7.664033,-8.190234,1.283771,-8.672674,8.224531,5.770224,1.086599,-1.502894,-9.860071,-2.306913,7.153858,9.986212,-0.122814,3.594898,8.269908,-9.478345,-0.801898,-3.786130,2.245586,-8.258597,-4.208781,9.595192,8.803612,-2.774444,0.808053,5.148152,0.411173,4.606040,-6.223131,-7.555993,6.631068,7.190510,-8.013396,-4.073061,-6.511076,-8.491283,-7.027409,-8.244871,8.532154,1.120403,-0.189593,1.063091,7.102885,7.051546,1.690465,8.020860,8.926037,3.993675,-6.217563,6.146266,-7.316320,9.052513,4.043390,-1.744449,-7.365367,-9.435236,-1.630466,7.301032,-3.139265,-7.421946,-2.477516,-6.241296,-0.301541,5.570701,0.321874,-4.463138,-0.597093,-3.827891,9.205881,-5.832646,-5.853536,-5.170424,-3.105224,-9.496672,4.223996,5.899568,6.426678,4.763458,7.161772,-1.214508,0.776918,-4.495730,4.024295,0.751074,8.928866,-6.119584,-6.599474,-9.228674,-1.171869,8.749733,6.690369,-1.579868,5.069257,0.985754,-8.936149,3.251347,-9.590682,-2.501576,8.806478,-2.599821,8.789069,-1.430007,-0.243989,3.774114,-7.733649,-8.261387,3.793950,-5.814766,-7.443207,6.305733,1.663485,-1.121775,-1.068612,6.681599,-5.314182,-9.469146,7.014210,-5.325239,0.510962,-2.336040,-0.024514,-0.804871,4.828498,-1.536826,-1.958299,8.882656,9.738000,0.525141,-5.193855,4.153571,-7.772784,-8.641278,-6.846887,0.994057,-3.446958,1.467535,-1.038684,-4.129969,-7.101425,1.147822,-9.357179,5.599020,-2.691064,0.993884,2.313426,-9.222603,-9.135215,0.878703,7.138342,9.738394,3.363449,-7.801798,-7.945261,2.941175,-0.931341,0.373831,9.024535,-1.351545,0.831327,-1.412479,-4.152404,-2.041682,-0.964029,7.893239,4.398059,0.384348,-5.443279,-3.004636,1.884184,1.546303,7.976419,-5.589246,6.712975,-4.145799,1.338027,-5.672850,4.031281,-1.662241,-8.109667,1.749084,-8.107191,-7.522733,8.100964,7.394717,9.342373,-3.019800,8.568722,7.381679,5.412691,2.829953,7.832036,-3.180297,2.407879,-3.659054,-4.540169,5.139078,-0.954048,8.265741,-9.415235,-1.669188,-3.524362,-7.408478,-7.304487,-8.576764,-8.213151,-2.468062,2.059246,-0.721665,8.437452,8.106227,2.469576,5.813047,-1.783227,8.216210,8.166974,-1.579311,-8.057135,-2.572911,4.133867,-8.630482,-8.618509,7.143810,5.052735,-8.588419,-9.003760,-8.274270,-7.517348,1.133766,4.790085,-9.758936,1.382551,-0.436017,4.389681,-7.170904,0.437928,-4.001716,3.803045,-8.619738,-0.687114,8.039141,-5.128884,-0.989388,4.250859,6.341288,-1.960550,-4.438568,5.012699,6.000883,4.473970,9.570178,-1.760589,-8.818286,4.213039,-3.575401,-9.851978,-8.540781,2.886630,7.072428,-4.998204,7.543361,-9.676806,-6.401901,-3.225296,6.649012,0.590575,5.222456,-4.967370,2.202388,-0.844815,4.299130,-3.069724,4.320828,-4.032294,-5.126956,6.637114,9.833870,7.474465,2.705603,3.273835,1.460462,0.263422,-4.591230,3.026733,1.235373,9.481129,-2.798220,-0.577995,-4.707407,-3.564739,-9.231024,-2.239275,-2.783342,9.682004,-0.815728,-7.224253,-7.327576,-5.101412,9.721817,-7.569924,7.822897,-3.603009,9.171485,3.279602,4.783235,5.900320,5.265032,-5.683100,7.867478,-0.149886,-8.273859,-0.811849,-9.500159,-6.780694,-3.100873,7.201580,-3.273007,3.925351,-5.657858,4.616802,-4.472887,8.152554,3.931831,6.790981,-9.116917,-9.667292,-3.456628,7.856584,1.319921,8.088701,-7.883005,7.541391,-7.119055,6.488445,7.145312,-9.941265,5.359720,5.794866,6.259152,0.078299,-1.017067,5.305227,-8.163458,-2.987433,-5.592647,4.486303,-2.762695,1.124398,9.150492,9.275178,-8.734735,9.406679,-0.232952,-0.860591,3.496890,6.756798,6.665002,8.411181,9.165690,4.651312,9.507655,-5.524091,1.358726,-3.812290,-0.108819,9.973382,8.541324,-0.615114,3.792433,-9.583928,5.235063,8.392620,-2.538869,-1.082155,-7.030035,1.210100,5.294249,6.821611,5.343740,7.255374,7.219038,-1.367847,0.775971,-5.709529,8.921971,-0.317679,-0.594591,7.015425,-4.115149,-8.358286,6.180040,-5.456061,-8.523803,5.483261,8.753056,5.114323,6.268241,8.308692,7.921087,-1.405055,-2.809287,4.140207,-6.424114,3.958239,-6.838473,6.000887,9.621034,-4.950883,6.541131,-7.569226,3.895304,7.486775,9.717927,9.183832,3.415364,-1.041746,-6.824552,-1.997100,-2.279895,9.205059,-1.321620,6.506832,-1.998428,2.073064,3.200584,-3.337563,7.326982,-5.678578,9.058186,5.741240,1.982895,-2.370942,6.826841,-6.937988,7.482397,6.186036,-7.256202,2.547854,-7.856258,-4.652619,-0.902288,-5.327100,-9.638148,0.318043,2.360523,-2.797970,-3.354054,-4.325708,-1.415666,0.965382,4.425716,0.291997,7.132087,-2.098831,2.902251,-7.473559,-9.721341,7.904879,3.454645,-0.806621,-7.512009,4.852157,7.180106,-1.375860,-0.435632,1.191306,-7.160252,6.290959,-0.571186,-2.488851,-2.710715,7.164294,2.224895,1.365550,9.288094,7.562688,0.180615,-9.209983,6.108785,-8.400100,0.987010,6.119001,-5.347444,9.976498,-7.110999,-3.306633,-9.730270,1.409368,-5.239171,-8.187142,-2.111074,9.398176,-5.905705,2.387269,5.757993,4.148807,9.645146,-5.582644,3.108735,-3.538855,0.889076,-4.423180,0.681604,-4.532977,8.516414,2.933830,-7.319071,1.382157,4.328656,-1.224650,-7.880739,6.789512,-9.415449,5.770210,5.219657,-2.470863,-7.966230,0.002333,-4.079161,9.785812,-9.419226,-9.484146,-1.454248,-9.625637,-4.970839,-4.345273,-0.803926,-4.137665,6.077435,5.700548,-7.093847,-3.738337,-8.115640,-7.096387,1.780578,-3.123977,-9.019227,-7.875243,-1.509655,-3.233446,-3.393435,7.383865,-4.128779,8.231515,2.021681,6.957035,-3.990221,-7.582456,8.602949,-4.582356,8.830249,-9.938733,8.636601,-1.303568,7.457998,-5.629619,4.137299,2.630166,3.243792,6.624375,7.932978,-9.291959,-1.172396,-4.199584,7.708367,-1.769825,-8.204940,5.288390,-2.578141,8.616223,-8.522644,1.533226,-6.668133,-7.813109,3.543517,-7.628625,-3.338499,9.884255,-0.089289,-1.066429,-0.432069,-5.141505,3.262864,-9.530421,4.265521,-8.987171,3.025025,5.563499,-3.461542,4.865271,1.581657,-2.447267,5.505939,2.781473,9.084427,9.104332,-5.393843,-6.932242,0.689955,8.144114,5.635262,9.089568,9.400142,-8.881783,-9.716314,-7.891061,7.224344,4.464665,-0.824579,-0.793131,-9.690099,6.775035,8.741789,-9.105225,-7.169606,1.849308,2.496340,-5.002422,1.423649,-6.618178,-7.280254,-2.344994,9.638383,-3.832119,-4.409106,-7.105842,3.601396,4.441965,4.518340,0.546558,-7.584627,6.815657,0.858955,-0.221368,-4.715909,-2.739036,6.114446,1.475053,-3.273361,-1.181196,-9.131901,8.520239,-8.953166,8.232938,1.495805,6.410141,1.425055,6.745533,-6.842756,-4.950638,6.966928,-2.126918,4.624453,6.560246,1.594291,-7.594028,-4.658638,8.371511,-2.861127,5.882424,-1.932070,0.570286,4.456684,-4.127199,1.265822,0.196593,-7.994607,2.759337,8.449807,5.196751,4.798699,-3.241654,-0.679293,-2.502135,-9.870419,-5.574929,6.232143,4.839267,-9.517047,-0.864047,-1.604237,-7.747709,9.168662,-1.581487,3.682223,-2.294824,4.800626,-7.732721,-6.423816,-4.261610,-7.167018,0.830841,0.289704,5.275955,8.468960,2.241565,3.669839,-7.522730,7.392023,2.577003,-3.162469,6.507583,-8.979376,2.571671,3.867198,-7.387854,-2.325937,9.870819,-4.543649,-8.096437,-0.751239,0.173409,1.544864,2.454056,-5.199737,4.804851,-3.970579,-5.110747,0.745028,5.469619,9.386567,-4.091827,-4.459435,3.422068,-7.407911,-1.783102,6.073849,-2.251329,6.741069,-0.697791,-6.170622,-0.957740,-5.738968,-5.492487,6.403438,-3.206664,4.834502,-4.299583,-6.130776,-2.043296,0.451201,-8.360584,-6.702159,-8.263773,-1.062700,3.431265,-9.870305,6.532845,-4.544932,-9.036764,8.403611,-5.551266,-5.546019,-1.572072,5.033549,5.696706,1.510321,8.225100,2.247162,6.501823,-8.845638,-3.289012,8.164463,-4.747909,5.939296,1.162304,5.940583,1.350978,-6.938573,7.830440,-4.744099,1.315599,-4.771912,5.867465,-5.474249,7.270643,6.767136,8.461189,6.540754,-6.767939,4.974209,2.559601,-7.994782,-9.749495,0.286019,-4.407469,-3.273745,8.943584,-9.611485,-4.281098,-0.282581,-8.442849,-5.173694,-0.389984,4.376672,-8.632199,-5.680409,1.256284,4.289645,9.107965,5.399849,-5.899743,6.205306,-7.176732,0.113357,-5.376602,-5.841300,6.978137,6.489645,-4.932502,8.087844,0.861833,0.199284,-2.473750,-6.182055,6.132055,5.718649,6.261814,8.320039,-4.924526,4.700243,-2.010552,2.747823,-5.176828,5.514650,1.404022,6.254134,-9.212046,-5.253769,2.239993,6.986219,-5.210592,2.194864,5.053841,-5.602690,3.157453,2.692685,9.044624,9.763323,4.960623,1.331089,1.717834,8.824632,0.079742,-4.879578,-1.985376,7.322748,-3.468308,-2.084400,0.124139,-7.299768,-6.592195,1.724607,-8.157381,0.883089,9.771162,2.115353,-2.643104,5.628975,-4.350364,-8.944754,9.827682,6.807710,-5.144657,8.268641,-3.731605,-9.444019,3.826548,9.014058,6.557400,6.990073,6.293763,7.657706,8.132077,4.962013,6.268290,-9.682241,6.444383,-5.905001,-7.012766,8.876970,6.890961,1.309554,3.322333,3.505341,-3.699105,-1.558338,1.240960,4.051657,-6.580043], dtype = "float64")#candidate|3567|(1716,)|const|float64
call_3566 = relay.TupleGetItem(func_1978_call(relay.reshape(const_3567.astype('float64'), [1716,])), 3)
call_3568 = relay.TupleGetItem(func_1980_call(relay.reshape(const_3567.astype('float64'), [1716,])), 3)
func_3125_call = mod.get_global_var('func_3125')
func_3127_call = mutated_mod.get_global_var('func_3127')
call_3575 = relay.TupleGetItem(func_3125_call(), 0)
call_3576 = relay.TupleGetItem(func_3127_call(), 0)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_3581 = func_2356_call()
call_3582 = func_2356_call()
output = relay.Tuple([call_3550,call_3566,const_3567,call_3575,call_3581,])
output2 = relay.Tuple([call_3551,call_3568,const_3567,call_3576,call_3582,])
func_3585 = relay.Function([], output)
mod['func_3585'] = func_3585
mod = relay.transform.InferType()(mod)
mutated_mod['func_3585'] = func_3585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3585_call = mutated_mod.get_global_var('func_3585')
call_3586 = func_3585_call()
output = call_3586
func_3587 = relay.Function([], output)
mutated_mod['func_3587'] = func_3587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3125_call = mod.get_global_var('func_3125')
func_3127_call = mutated_mod.get_global_var('func_3127')
call_3673 = relay.TupleGetItem(func_3125_call(), 0)
call_3674 = relay.TupleGetItem(func_3127_call(), 0)
output = relay.Tuple([call_3673,])
output2 = relay.Tuple([call_3674,])
func_3695 = relay.Function([], output)
mod['func_3695'] = func_3695
mod = relay.transform.InferType()(mod)
output = func_3695()
func_3696 = relay.Function([], output)
mutated_mod['func_3696'] = func_3696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3080_call = mod.get_global_var('func_3080')
func_3081_call = mutated_mod.get_global_var('func_3081')
call_3746 = func_3080_call()
call_3747 = func_3080_call()
output = relay.Tuple([call_3746,])
output2 = relay.Tuple([call_3747,])
func_3759 = relay.Function([], output)
mod['func_3759'] = func_3759
mod = relay.transform.InferType()(mod)
mutated_mod['func_3759'] = func_3759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3759_call = mutated_mod.get_global_var('func_3759')
call_3760 = func_3759_call()
output = call_3760
func_3761 = relay.Function([], output)
mutated_mod['func_3761'] = func_3761
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3777 = relay.var("var_3777", dtype = "int16", shape = (16, 14, 15))#candidate|3777|(16, 14, 15)|var|int16
const_3778 = relay.const([[[-6,4,5,-10,-8,4,9,-7,-10,7,9,7,-3,2,-10],[5,-3,3,9,-9,-8,-10,-5,-1,-2,-6,-2,-8,-1,-6],[1,6,-10,-3,4,6,7,1,5,-8,2,5,-10,-1,-3],[9,-8,-1,-3,7,-8,-9,3,8,2,2,-1,-8,-1,-9],[5,2,2,4,-8,3,6,-1,-2,8,7,5,-8,-7,3],[-5,6,2,1,-5,6,2,-10,2,4,-5,9,-6,-5,8],[-3,-6,2,-6,1,9,1,-1,6,4,-5,-10,-9,3,-3],[1,6,2,-3,-9,4,-6,-1,6,2,7,9,4,-6,-1],[2,5,-9,-7,9,-9,-6,-8,3,2,3,5,-9,-9,9],[-7,2,-10,1,1,3,-3,-8,6,4,-9,9,9,4,-4],[8,6,3,8,3,-6,-3,5,-1,-3,1,3,5,-10,2],[5,-7,-9,-7,6,8,8,2,-3,6,-7,-7,7,-2,4],[-2,3,10,-10,9,-8,-8,10,-10,3,10,-3,10,-2,6],[6,5,-5,-1,1,-3,-1,-5,-10,-6,9,5,-5,-1,-7]],[[3,4,3,2,-6,-8,-3,-9,9,-1,6,-1,3,4,-2],[-2,-4,-2,8,1,-8,5,7,8,-5,1,1,2,9,-10],[7,-8,8,6,-4,10,-7,3,-8,9,2,-5,-3,8,3],[5,-10,8,2,4,2,-10,-10,2,4,3,5,-10,5,2],[-8,9,-9,7,-3,-9,-8,6,10,6,-1,-9,-7,5,-8],[1,6,-5,-6,-8,5,6,4,1,-9,-7,6,-9,6,-6],[-2,2,8,5,-2,-5,-8,-10,2,-4,10,5,9,2,7],[4,6,9,3,-2,-7,-2,7,-5,5,3,-5,5,10,1],[-5,1,1,9,-6,-9,-7,7,-2,4,6,-7,6,4,9],[-5,2,-10,-8,7,10,-8,-6,1,-9,-7,4,5,6,-6],[-9,-1,-9,-6,-10,4,8,6,-6,1,-4,10,2,10,9],[3,8,-8,7,-7,-6,6,10,-9,-1,-4,1,-6,3,1],[1,7,9,6,1,2,4,-3,-10,-3,-7,9,-2,10,-9],[5,-4,9,10,-9,9,-10,9,-9,10,-1,10,-4,5,8]],[[-5,-3,-9,-4,8,-2,5,1,-7,-5,2,-1,-8,-7,-9],[6,-9,-4,-9,-9,-2,-5,-5,4,-7,-7,7,-3,5,9],[-4,7,-3,-6,-9,-1,-6,-1,3,2,-4,-8,1,5,1],[9,8,3,-6,4,-3,-6,3,1,1,-3,4,-6,-5,10],[-7,-5,4,-8,8,6,9,2,9,6,-9,-5,-4,-10,5],[7,9,-7,-2,5,-7,1,1,7,-5,10,-6,6,7,9],[6,-4,-9,-9,-7,1,5,1,-3,8,3,-1,4,-9,5],[-2,3,7,-8,1,3,1,-1,-4,3,2,9,-7,3,3],[-3,1,3,-5,4,-6,7,-5,-2,-5,-2,-2,-2,-5,4],[-5,4,-2,3,8,3,-8,-3,-1,3,-9,4,-7,2,-5],[9,3,7,-8,3,2,2,-8,-3,2,-6,-3,4,-1,10],[-5,6,-2,-5,5,-8,4,7,9,-1,-7,3,9,8,6],[-6,8,-10,6,3,-1,-10,-5,7,8,4,-4,5,-6,3],[-2,-6,-2,-3,10,-4,8,-8,-3,-4,10,6,7,-9,-6]],[[-9,-3,3,9,-6,3,-4,3,4,4,9,-8,-9,-8,-9],[3,5,3,3,-3,3,-8,6,8,9,8,7,5,-10,-6],[-9,9,7,1,5,9,-9,4,2,5,-5,1,8,10,9],[1,7,2,-3,3,9,6,9,-5,-4,-2,1,3,-9,9],[10,-6,9,10,2,-8,5,9,5,-5,-2,10,-2,5,7],[-9,-4,-4,4,-5,-9,-7,8,-8,-8,4,2,7,8,-3],[-8,1,-1,4,-1,4,-1,-2,-5,-2,3,-6,1,-7,5],[-3,6,4,-9,3,-5,-9,7,5,-2,-8,-2,-10,-8,-1],[8,-6,8,-2,-8,6,-3,2,-4,2,4,3,-4,1,9],[-5,-6,3,-10,-8,3,4,8,-4,2,10,-5,4,-5,9],[6,5,6,-5,-7,7,-8,-4,6,1,-3,8,4,-7,-8],[7,4,-8,-1,7,8,6,6,4,-9,1,-6,1,-2,2],[-9,-6,10,1,6,1,-5,-2,8,-2,1,-8,4,-8,10],[-6,9,-9,-5,2,2,7,-10,-6,-7,3,4,6,1,-6]],[[-3,7,4,1,-10,-3,6,-8,1,7,6,7,-3,10,8],[-4,-8,-3,1,-4,-8,-1,-8,-3,7,-8,-1,-3,-9,-8],[-6,-8,-5,9,-4,7,1,-6,-9,6,8,8,-9,4,1],[5,-4,4,-1,-7,7,6,-2,-4,9,6,4,-9,-3,2],[-4,-3,-9,10,-1,6,-1,-5,3,3,-9,-1,10,-9,4],[-9,8,9,-1,9,7,2,-6,-10,-6,10,9,10,3,4],[-1,-6,-5,10,3,7,-3,-8,6,9,-9,7,2,7,7],[5,-4,-10,-5,4,10,-7,-2,3,1,10,-10,-7,-4,-10],[-6,2,-5,9,-3,-7,4,-5,7,4,9,-7,1,-1,-10],[8,5,8,-2,-9,9,7,8,-10,9,4,-10,-9,8,-7],[-3,4,5,-10,-8,4,-3,-1,-5,9,-6,4,-5,-8,2],[-9,10,-5,-7,2,3,3,8,-8,-4,7,-9,8,3,-7],[1,2,-1,-6,1,6,-5,10,2,6,-7,5,-3,10,-1],[3,-2,3,1,4,9,-5,-6,10,5,3,9,7,-3,10]],[[-3,5,-7,1,-8,-1,2,3,-3,5,9,1,5,3,-7],[3,-7,7,7,-3,10,3,-10,-9,9,2,-1,-7,-2,-6],[3,-1,10,-6,6,3,3,-8,-4,9,-1,3,-5,10,-1],[6,-8,6,-5,-4,-2,-6,6,-10,-1,6,-10,-3,9,2],[-2,6,7,9,-4,2,-1,-1,-2,-7,-1,-4,10,-6,3],[-1,-8,6,-8,-7,7,8,-8,4,9,-3,-4,1,-6,-5],[7,-5,-4,10,5,6,-7,-3,3,-6,-9,-5,8,9,5],[3,1,-6,-1,8,-4,-10,-9,9,-10,-6,-6,4,-7,7],[6,-5,-10,-1,-7,-8,5,3,3,-8,7,-6,7,6,-4],[7,5,-6,-2,7,-7,-10,5,8,5,2,2,-2,7,-4],[-3,10,2,4,-4,3,7,6,7,9,2,2,7,-2,4],[-5,6,4,1,1,-10,-9,-6,-1,10,4,1,-3,-2,5],[10,2,5,-3,-5,-2,-7,-3,7,-7,-4,-7,9,-7,7],[-8,4,-3,7,5,-8,-6,-7,9,3,-1,7,3,-9,10]],[[2,5,7,5,3,5,-7,8,1,10,-3,10,8,-9,-6],[5,4,-6,-5,6,-10,-1,1,-5,-9,8,-5,-4,-4,1],[2,7,-3,9,-3,8,-6,-2,-2,-1,1,3,-8,8,1],[-1,5,-9,3,6,2,9,5,-7,10,6,-7,-7,9,8],[-7,3,9,10,-1,-7,-10,-1,10,2,5,-3,-8,-9,8],[-6,-4,-8,-2,-4,5,-6,-8,10,4,-1,-9,-3,-5,-5],[-8,1,-2,7,-7,7,-2,5,-9,-1,-6,-3,-5,3,9],[-6,-8,10,-5,-4,-8,2,-3,10,-3,-6,-3,5,5,9],[-5,2,-1,-5,-9,-7,-1,7,-10,-7,-9,-4,-2,-2,9],[3,-8,7,-7,-6,-1,-3,3,-8,6,8,8,8,2,-9],[3,3,6,1,-4,10,-9,10,3,-7,-3,6,8,3,6],[-9,3,8,-3,5,-5,3,-9,10,-8,3,-3,-5,5,-8],[-10,-7,10,6,-4,1,9,-3,-6,2,-9,9,4,-2,-2],[9,9,8,-1,5,7,-3,1,-5,-1,2,4,4,5,-8]],[[-6,2,-10,7,5,7,7,8,-7,6,2,10,1,-3,-9],[5,7,-3,8,-10,-3,4,-6,9,-5,-5,-2,10,-8,10],[-5,5,2,1,-9,2,-8,1,9,9,-2,1,-9,7,-8],[-7,4,7,9,8,8,9,8,-10,-9,-3,5,-6,6,4],[-10,7,10,-10,1,-8,-9,3,-6,-6,-3,-7,-2,-5,-6],[-4,-9,-10,6,-9,-9,-6,-5,-8,3,7,3,-4,-4,-5],[7,7,-2,-6,-1,5,-3,10,9,8,-2,-8,8,-1,-3],[5,6,8,10,-6,1,3,-10,4,3,-3,-7,-1,3,9],[6,5,-7,10,7,10,-7,3,-8,-1,9,7,3,2,7],[1,7,-7,-9,4,7,3,9,-3,3,9,6,-7,-3,6],[-2,5,-2,-6,3,8,-3,4,-9,8,-1,-1,2,-7,-6],[-5,9,-10,6,6,3,7,-5,8,10,-5,5,-7,3,-4],[-6,-7,-10,-9,-10,-4,-9,1,-4,9,8,-4,-7,2,4],[8,4,6,-2,-8,10,-9,7,-4,-10,-6,4,-3,-10,10]],[[10,3,-3,8,3,-10,-2,-1,-9,-1,-7,-9,-6,1,-7],[7,9,3,-8,-7,-1,-6,-8,-1,2,-7,-8,10,-1,9],[2,-9,-7,-4,5,7,-10,8,-2,6,2,2,4,-5,3],[-4,1,7,-6,-4,2,-7,-6,2,-6,1,4,8,-5,2],[7,6,-9,-6,6,4,-1,2,-5,-5,-3,-9,-10,-6,9],[7,-3,-6,6,7,-1,-9,3,-2,-6,-9,3,-9,-4,8],[-4,-3,-7,-9,-8,6,9,-4,9,-9,2,7,8,8,10],[7,-2,10,9,6,-8,-9,-2,-7,8,7,6,7,1,-5],[-5,4,5,9,-7,-1,9,-2,-2,1,7,-4,-3,6,-8],[4,5,1,6,-2,-4,6,3,-6,6,-7,-7,-5,-3,6],[-4,-3,2,9,-3,-9,-5,4,-4,5,8,-5,4,-9,1],[-8,-8,5,4,-8,-8,8,3,-3,2,6,-3,-7,1,6],[5,-8,-5,-5,-9,-10,9,2,7,6,7,-9,5,9,-6],[-9,-9,4,-1,4,1,9,-1,-9,-8,8,-10,-8,-5,-2]],[[-2,-1,-7,-8,3,10,-6,-3,2,5,-6,-7,-10,-1,2],[7,4,8,3,2,5,-2,-5,-10,-7,-8,8,9,-10,6],[-6,7,-8,-3,-8,9,-9,8,5,10,3,-5,3,2,6],[5,-8,4,-7,9,2,-1,-8,-4,7,3,3,-4,3,10],[-3,-3,-9,-8,-2,2,-4,4,9,5,5,7,-7,4,6],[-9,-1,9,9,-6,6,-4,8,2,-7,5,-6,-10,3,5],[10,-6,6,2,-5,-6,-6,-1,8,6,-2,-9,-5,-3,5],[-6,2,7,-9,5,9,5,2,2,1,7,-8,2,-5,10],[5,-6,-9,-6,4,-4,-3,-8,7,8,7,9,-2,-9,-8],[-1,-4,-1,-10,3,8,-8,-6,-9,8,1,3,-1,3,-3],[8,7,1,-6,2,-8,7,-3,-4,-8,-10,-10,-10,-7,10],[7,4,-9,-9,7,-6,-6,-10,-8,3,-9,-6,3,7,-1],[10,4,-2,-10,-9,6,1,-8,1,5,1,-7,10,-3,10],[7,-1,-5,-5,-4,1,2,10,-2,6,-8,-1,6,-7,-2]],[[4,-8,-10,6,7,2,9,-1,-1,-3,10,8,6,-7,-4],[9,-8,-10,9,6,7,-5,9,5,-9,-1,-10,4,-2,7],[10,3,-3,6,1,10,-9,4,1,10,-8,2,-7,-3,5],[-4,-6,-3,-1,2,3,10,7,10,3,-9,-10,-10,9,-5],[-3,-1,9,9,5,2,3,9,-7,-7,8,3,9,4,-9],[2,9,5,7,8,5,-9,-3,8,7,10,1,3,1,8],[6,3,3,-3,-2,-2,10,-5,10,-3,-7,2,10,-8,5],[-10,5,-6,9,-9,-2,-8,-2,9,8,-1,-7,-5,-10,-10],[8,-6,3,-1,5,5,-1,-4,-8,7,5,3,2,-10,2],[9,-10,-4,9,7,-5,3,-7,-3,8,-3,9,-6,3,-3],[-6,4,9,2,3,-4,-4,-8,-4,6,-10,-6,4,-10,-7],[-1,-7,-2,-2,4,4,6,5,-8,5,-10,4,4,7,6],[-6,9,-3,2,5,-3,-4,-6,-4,-7,-2,-4,2,-6,-1],[-4,-1,-2,4,-2,-10,6,5,-4,-10,-10,9,-9,-3,1]],[[-5,-10,-6,1,-8,6,9,5,-8,4,9,10,-9,8,-2],[-3,2,3,10,7,-6,-8,-9,-8,-2,-4,-8,9,-1,-7],[-6,2,-8,5,1,-5,-6,-4,8,1,6,-10,-10,-2,-6],[6,3,-9,2,-8,7,-10,10,10,-7,7,8,8,4,1],[-2,1,6,8,-5,1,-4,9,-6,-2,-1,6,4,-9,7],[10,8,7,-3,-4,-1,-10,-9,-9,-7,-9,9,10,-1,-6],[1,-8,-7,-5,-9,-9,-5,5,8,-8,-2,5,-4,7,-4],[-4,8,5,8,-8,-10,-5,-5,-6,4,-10,-3,-8,-2,2],[7,-2,-9,-10,9,-2,-4,4,9,4,6,-10,9,-5,4],[-6,3,-5,6,-7,-5,4,8,-9,-7,-8,7,1,-7,-6],[4,-1,-1,-7,-2,-4,5,-6,-5,10,8,-5,8,-10,4],[4,-9,5,1,-8,8,2,9,6,3,-6,-6,5,-10,-8],[2,-2,-9,2,1,-7,-4,-2,-8,-9,-6,3,7,-7,2],[1,1,4,2,-4,-8,4,9,-6,-6,-8,-1,6,9,-7]],[[1,7,-3,4,9,-8,8,-10,8,3,-1,8,-2,-10,-8],[-3,4,2,3,3,-5,-8,3,-9,-3,6,-3,-4,9,-5],[-10,5,-8,-1,5,2,5,3,9,-10,4,6,2,-10,5],[-7,4,1,9,1,-4,-3,5,8,10,8,-5,1,6,8],[7,-8,-7,2,-1,-1,-8,-3,-2,8,-10,-6,-3,-2,-8],[-10,-8,-7,7,1,2,4,-6,-4,-9,-8,3,4,1,-2],[-8,6,-3,9,2,-10,1,8,-3,6,7,9,-10,-5,-8],[-1,-1,2,-2,8,2,10,-3,3,-1,6,-2,9,9,-2],[2,5,10,9,-2,-6,6,10,-4,-5,-9,-6,-7,3,-8],[-7,8,-6,-1,10,4,8,2,9,-10,-3,-5,-9,4,10],[-7,-4,9,3,5,-3,-9,-8,8,9,2,-6,2,9,9],[8,6,-3,2,-7,1,-7,-3,-3,4,1,-5,1,4,3],[-1,1,3,-6,-2,-3,3,5,-6,-8,-2,4,-6,7,9],[3,-9,1,8,8,-10,-5,2,10,-2,-8,-7,-4,-1,3]],[[8,-2,-8,-10,8,-10,-10,1,7,-4,10,-3,-6,2,-5],[7,-8,-2,-10,7,-10,-6,2,-4,1,-7,-10,9,-7,-5],[-5,8,3,-2,-2,-3,-5,-3,-10,-5,-7,-3,-5,6,5],[-8,6,-4,8,2,-4,-10,-7,4,-4,-6,3,1,-4,-4],[6,7,-10,1,-6,5,9,7,-2,3,1,-8,-1,-6,4],[3,-2,4,-3,9,9,7,9,5,-6,7,8,-6,4,5],[2,10,10,7,8,-1,7,-6,-2,10,-9,-7,-4,-7,5],[-6,10,2,-7,-1,2,-3,-10,7,-10,-3,-6,6,-3,6],[-5,-4,8,4,2,2,9,-5,4,2,3,-3,-6,-8,-3],[7,-9,-4,-7,-4,-4,-7,2,4,7,10,-1,-6,-3,10],[-1,4,9,6,-4,7,7,-5,-7,6,4,4,10,-6,6],[-7,-2,4,-6,-7,1,2,-9,6,5,10,8,7,-5,9],[7,-6,-6,8,1,6,-1,-7,-5,-10,4,10,-3,-8,-9],[10,2,3,-4,-1,8,6,-4,-4,5,1,-4,-1,-9,-7]],[[-5,-2,-1,-4,8,2,3,-9,-3,9,-7,-7,-3,-9,-7],[-1,-1,9,10,1,-1,7,-10,-2,-9,1,1,-6,8,7],[10,-8,-2,7,2,-3,-8,10,5,3,3,10,3,8,-1],[-7,-4,-4,-3,10,6,2,-4,-5,4,-4,3,-9,-10,-10],[-4,2,5,6,-6,5,10,9,10,2,2,-9,2,3,-6],[2,3,10,1,-6,-2,10,-8,5,-1,-2,-3,-9,-10,8],[9,-8,6,-2,3,6,9,-5,-5,5,-7,10,-7,-6,5],[-4,6,9,-9,-10,9,6,-2,-4,-3,-2,7,2,-4,10],[-4,6,-6,1,5,8,7,-3,6,5,-8,10,2,-9,2],[-6,6,6,6,-9,-7,7,2,-5,7,8,9,-1,1,7],[-9,-2,4,9,3,1,7,-6,-7,-9,-10,-10,-6,2,-8],[3,-2,6,-2,6,-5,7,-6,-10,3,7,-6,-6,7,2],[-5,-5,-1,-4,8,-8,8,2,8,7,1,9,-1,2,1],[5,2,-6,3,-7,10,3,-1,-10,-8,4,-2,-9,-8,-3]],[[8,8,8,-4,-3,-1,8,-9,-8,10,9,-7,7,-6,-8],[5,-8,7,-6,-8,-6,2,-2,3,-3,8,-8,-2,3,-1],[8,-1,10,2,-1,-7,-1,10,-1,5,-5,5,-10,-8,5],[-5,5,1,4,-3,6,-3,-8,-10,6,-4,-10,2,-6,-4],[10,-5,-7,-2,2,7,5,4,-5,-6,-10,9,7,-2,4],[3,-5,-2,-7,-5,-10,-8,4,-2,-6,7,-7,8,2,7],[5,-1,-10,-5,7,-5,-2,-4,5,-5,-4,-9,-1,-7,8],[-8,-5,5,1,-10,2,5,-10,-10,9,-6,-10,-6,-1,-5],[-6,-1,-3,4,-8,4,4,2,10,-7,-1,-2,5,5,8],[4,-4,-4,-3,3,-5,-9,-6,-2,-7,7,-1,1,6,3],[-6,9,4,-9,4,-6,10,-9,-8,-5,10,-3,3,-9,7],[-5,9,-5,9,-1,7,-5,5,-3,7,-8,-2,-9,4,-3],[10,-8,-2,-3,6,-8,-3,1,-9,1,-4,4,-3,-10,1],[-9,-1,-9,9,-6,7,-9,-6,-8,-5,-10,9,5,-7,8]]], dtype = "int16")#candidate|3778|(16, 14, 15)|const|int16
bop_3779 = relay.bitwise_xor(var_3777.astype('int16'), relay.reshape(const_3778.astype('int16'), relay.shape_of(var_3777))) # shape=(16, 14, 15)
output = bop_3779
output2 = bop_3779
func_3783 = relay.Function([var_3777,], output)
mod['func_3783'] = func_3783
mod = relay.transform.InferType()(mod)
var_3784 = relay.var("var_3784", dtype = "int16", shape = (16, 14, 15))#candidate|3784|(16, 14, 15)|var|int16
output = func_3783(var_3784)
func_3785 = relay.Function([var_3784], output)
mutated_mod['func_3785'] = func_3785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_3857 = func_2356_call()
call_3858 = func_2356_call()
const_3869 = relay.const([[[-9.956073,2.964349]],[[-5.314690,1.681835]],[[-2.254710,3.763273]],[[-4.430568,6.797436]],[[-8.054522,-1.945679]]], dtype = "float64")#candidate|3869|(5, 1, 2)|const|float64
bop_3870 = relay.logical_and(call_3857.astype('bool'), relay.reshape(const_3869.astype('bool'), relay.shape_of(call_3857))) # shape=(5, 1, 2)
bop_3873 = relay.logical_and(call_3858.astype('bool'), relay.reshape(const_3869.astype('bool'), relay.shape_of(call_3858))) # shape=(5, 1, 2)
func_1686_call = mod.get_global_var('func_1686')
func_1689_call = mutated_mod.get_global_var('func_1689')
const_3875 = relay.const([-10,-5,-1,-2,-3,3,4,7,4,-2,4,6,4,-5,1,-6,-6,-7,1,-2,-6,-10,-6,-4,2,-1,-9,6,-8,-10,7,-2,-9,10,10,-4,8,-7,-2,-7,6,1,-5,-1,-7,4,6,-9,-8,-5,-2,5,3,-6,-4,7,1,7,4,2,8,-9,3,1,6,10,-3,10,8,10,1,1,-7,9,-4,-5,7,9,2,3,-4,-6,7,-4,3,6,3,-5,6,2,-5,4,-10,3,-3,-10,9,-5,-5,3,2,2,-9,-6,1,6,-4,7,3,8,8,2,-7,6,-7,9,-10,-7,-8,-5,10,6,-4,-1,-4,-5,-8,-10,4,-6,4,-2,-6,3,-9,-4,10,4,4,-10,-4,-1,-2,9,6,8,-3,-2,9,-5,-4,9,1,-7,-9,-1,2,7,-2,9,-4,-6,7,-5,7,-5,1,6,-7,4,10,9,7,5,2,7,-2,2,5,6,-7,3,-6,9,10,1,9,3,6,7,-3,-6,9,4,7,-4,-4,-2,5,-6,-5,6,-7,-9,-8,-4,1,4,8,-4,10,9,6,-6,5,8,9,3,5,-2,8,-2,4,1,-5,-6,2,1,-1,10,9,5,2,-5,-1,9,-10,2,-10,7,5,-2,-3,8,-2,-9,6,10,-3,6,9,-7,8,-5,10,4,9,6,-3,-5,3,-7,-7,7,-9,6,-8,-10,-2,-5,-9,2,4,-10,-2], dtype = "uint8")#candidate|3875|(275,)|const|uint8
call_3874 = func_1686_call(relay.reshape(const_3875.astype('uint8'), [5, 5, 11]), relay.reshape(const_3875.astype('uint8'), [5, 5, 11]), )
call_3876 = func_1686_call(relay.reshape(const_3875.astype('uint8'), [5, 5, 11]), relay.reshape(const_3875.astype('uint8'), [5, 5, 11]), )
func_3343_call = mod.get_global_var('func_3343')
func_3346_call = mutated_mod.get_global_var('func_3346')
var_3883 = relay.var("var_3883", dtype = "float64", shape = (120,))#candidate|3883|(120,)|var|float64
call_3882 = relay.TupleGetItem(func_3343_call(relay.reshape(var_3883.astype('float64'), [6, 2, 10])), 0)
call_3884 = relay.TupleGetItem(func_3346_call(relay.reshape(var_3883.astype('float64'), [6, 2, 10])), 0)
func_3275_call = mod.get_global_var('func_3275')
func_3280_call = mutated_mod.get_global_var('func_3280')
const_3888 = relay.const([[2.167830],[-7.509133],[4.603442],[-7.509496],[2.213970],[0.981441],[-1.692823],[-2.451980],[-2.854422],[-7.415075],[-2.149293],[-9.006119],[0.055583],[-2.615861],[-4.583695],[7.016216],[4.601729],[-0.717803],[-2.999081],[-3.257601],[6.634705],[6.817278],[2.398348],[-4.988152],[-9.243581],[-3.593809],[-2.120548],[5.092899],[-7.391377],[6.824821],[2.964501],[4.472960],[-2.823608],[4.407715],[-9.738726],[8.758023],[7.348720],[-1.249540],[-8.560307],[-6.851134],[1.756025],[9.929399],[-8.728305],[5.003431],[-9.106100],[2.492097],[-0.780116],[6.461306],[-1.880585],[7.012732],[-5.830995],[3.727398],[-4.037755],[-3.486157],[-8.016458],[4.762142],[-9.107887],[-5.107354],[8.542339],[8.076687],[-6.801230],[5.766743],[6.159933],[-5.354144],[-8.213777],[0.573279],[-5.844180],[-0.111791],[-4.077954],[8.555215],[-8.532841],[-0.818779],[-8.954272],[3.207056],[-4.797732],[8.735925],[0.951789],[9.847315],[3.919560],[-0.355874],[-8.018215],[3.047727],[-5.638654],[8.318415],[-7.880772],[-0.981343],[2.847552],[4.812435],[7.887984],[4.034390],[-0.899158],[-5.397245],[-5.289823],[-6.777559],[2.478021],[6.422089],[-4.478006],[-5.612805],[-2.916275],[9.259545],[5.722161],[6.786066],[-2.599626],[-0.262063],[4.089529],[-0.935030],[-5.032226],[0.101967],[-5.284475],[4.790057],[0.985390],[6.683239],[4.041227],[-9.247392],[3.614292],[-4.131936],[3.044054],[7.533155],[9.551938],[6.503760],[-3.287041],[-0.358992],[3.767740],[4.473605],[1.743072],[8.381794],[8.111506],[4.374830],[4.855850],[-9.797228],[3.085382],[1.115204],[8.564487],[3.114463],[-4.700358],[4.516818],[-0.204093],[9.532353],[-8.011533],[9.749733]], dtype = "float64")#candidate|3888|(140, 1)|const|float64
const_3889 = relay.const([[6.290633,5.831041,-1.552994,6.160467,-3.854081,7.963694,6.831667,-6.101724,-7.528973,-2.427024,-9.542923,-5.593647,-7.494016,7.300559,-8.324100,-1.321974,1.837971,4.834493,9.119960,4.933951,7.627555,1.761685,-5.253582,-9.140994,-7.743285,-2.655318,9.150904,-5.027984,7.838956,-2.465299,8.184851,4.842005,-0.963108,0.248876,1.428058,3.585318,4.798772,5.684427,2.178357,-3.770278,-4.770599,-2.444865,8.989822,-1.042038,-1.273533,-1.937025,1.004444,-9.628482,-4.818011,6.395670,-6.194729,0.437408,0.247776,0.189412,-4.338863,-9.383748,9.376041,-7.201274,-6.837744,1.720637,7.689526,-5.151330,7.724672,-5.139812,-6.295062,-7.227009,6.065598,-1.827260,-3.052745,8.694562,0.286344,-2.880493,-6.718007,9.470019,6.445600,-5.962837,-0.639191,4.020726,1.708878,-6.889974,-6.096994,7.155217,-7.242926,-6.980811,5.338933,3.929216,-7.329611,5.900361,-5.014973,2.707201,1.834528,-2.885421,-2.448728,-1.185605,9.090463,-4.510494,5.373747,4.315840,5.458532,-4.165920,9.648449,-6.565381,7.864706,0.494621,-3.696032,1.988355,-6.799825,-1.661605,-2.620186,-8.097265,7.484794,8.517588,-6.570279,-3.526044,-2.216653,7.694461,-0.690528,8.409252,4.100646,6.147405,1.004063,-7.906898,-7.370827,4.231528,4.941727,-5.284704,-7.382447,6.161521,5.728898,-7.588556,-9.119953,7.411985,6.705598,6.551074,5.264643,2.186481,4.068162,-2.581296,-1.439369,-2.803350,-9.213727,-0.069571,-3.149814,7.830259,7.660133,-4.137260,8.247072,-3.388897,-1.800784,-7.930498,-2.103712,9.319331,6.155977,5.766489,3.574348,3.526366],[-7.631736,-7.426886,3.370421,-4.678379,8.921465,-0.113476,5.864453,-8.324646,-2.478132,4.047601,-4.999884,2.209416,9.092518,6.765739,-4.077294,-2.173011,-1.236895,-7.933841,-6.315105,-4.713090,0.179951,0.641003,0.580297,-1.236808,-8.366542,-1.470995,-3.948708,-6.226395,-4.535667,-7.888545,-3.534792,7.417478,8.003221,-7.657138,6.959747,-3.865008,1.384780,8.323228,2.056881,7.578224,8.981244,-5.371856,7.428798,7.008616,-7.243938,-5.477143,-8.722242,2.056267,8.893597,-3.778159,-9.742331,3.703778,-0.644789,-0.481780,1.095678,6.959711,7.282726,-5.149236,-8.400543,-9.767472,-2.843003,5.845362,-7.364435,-2.858976,-8.867352,-7.885078,9.732045,-0.006348,-6.496953,1.830708,-1.364677,3.327252,-9.236146,-1.385555,2.880587,2.657295,-4.650242,2.943884,1.023589,-8.352968,-8.816187,-8.680058,3.338215,6.765998,0.569082,2.474741,5.369041,0.694407,-0.549142,-4.271926,-9.057129,7.186606,-0.352020,-9.588404,8.478800,6.773096,3.241472,3.171620,-9.335017,5.873800,-9.089806,-5.637033,1.292034,6.797685,0.516689,5.166573,-6.859264,-3.804248,5.153411,-9.938620,-8.583304,-4.834220,-5.634485,-7.654698,-8.212451,-5.899201,-7.357293,-8.492333,5.420538,8.541019,2.232077,-1.874255,-6.575067,-0.746942,5.521883,-6.720449,-1.136987,-5.907188,-6.310433,-1.607181,-6.119214,1.319976,4.583630,-1.880692,-3.130907,9.275703,-0.652523,5.737367,9.262173,1.578770,-4.462903,-7.304646,-4.513231,0.340472,9.533383,-6.308184,7.368867,-0.544939,0.800307,8.771570,-8.234881,-1.228506,-7.812015,6.589683,7.514087,7.335299],[-8.768612,4.728892,-8.540340,-7.378110,-9.922827,7.180142,-1.388264,-9.410733,-4.171960,8.479756,-3.634846,4.611884,9.941049,-6.233584,0.150190,2.034797,2.852865,0.717079,2.925432,7.167201,-3.520010,2.965367,-8.491889,-9.351359,0.333323,-6.533078,8.032626,2.953585,-6.315513,-5.881790,5.309357,-0.285898,-9.372660,-7.830704,3.239450,7.318164,-5.696038,-8.415174,-7.558201,0.574689,8.167865,6.232239,5.426809,0.432564,4.814230,-4.811707,9.390413,6.441127,-7.728792,-9.524062,-7.704628,7.266685,-7.315225,6.530048,-6.689778,3.476707,-3.375535,3.524809,5.729277,-8.081047,-8.155020,4.756260,6.941300,5.268026,-4.773879,9.594017,1.149512,2.511228,-4.755051,-3.387078,9.476884,-4.265750,-9.178874,2.926035,9.657842,-2.704078,-5.543680,6.939503,6.482708,2.492587,-8.689136,-9.920578,7.787437,-9.451064,-7.437580,8.660319,-5.955487,-0.100236,0.408780,-7.030714,3.216819,-3.593538,-7.371562,0.097709,-2.677237,0.887900,4.214510,-5.414312,9.537811,-2.037261,3.376985,3.105802,-5.671144,-3.084491,0.611735,-3.702258,-9.201047,9.393036,-4.852549,-3.933168,6.128989,-3.508138,2.164087,-7.318267,9.991864,-8.305312,-7.938979,-1.444151,0.658819,-1.112206,5.661375,7.266847,7.694870,-0.859787,1.749830,-8.993306,-2.874804,4.414023,3.008812,-5.736236,8.612967,3.897829,-4.251473,-0.104241,-4.215274,-9.007024,6.110044,3.084485,-9.124603,-0.436397,-1.608664,5.090300,7.843241,-6.823515,-8.348544,0.577643,-0.044540,3.682344,-4.194776,-3.574548,-6.426774,-8.999145,7.697863,-6.394192,3.079987,1.904770],[1.085919,-6.994822,-4.112746,9.096415,1.608718,-4.280805,4.732830,-5.764312,3.279152,-6.127906,-8.670053,2.119638,3.846612,4.035330,-6.527655,-3.430874,3.417615,9.072775,-0.801656,-8.086640,6.939303,8.883545,-1.013908,2.940298,-1.918624,6.561496,-9.133779,-2.062139,-4.209283,1.188258,2.692720,-8.954149,-5.506912,-0.154816,-2.263316,9.749844,1.669979,-6.488784,-5.680028,1.052543,-4.976510,9.699509,0.194726,-9.697599,-7.961589,-3.656656,4.005817,-2.626945,-1.749726,-5.893841,-1.277239,6.263458,-5.468994,1.211162,2.806341,-0.198765,-7.286292,-5.175665,2.593693,0.920786,-7.714146,3.334440,6.385834,-9.875921,-7.410581,-9.103637,-6.721874,-6.509873,-8.274399,6.924008,-5.517446,4.331506,-6.794006,-9.809067,-8.310662,6.144534,-2.268876,-6.279634,-3.673503,2.816574,-6.479421,5.433612,4.508881,7.080454,-5.335165,9.386664,-5.602610,9.108911,9.268169,2.781384,1.438530,-5.735580,7.894581,2.553966,6.703299,0.471097,4.404263,-4.024829,-5.549587,-6.212839,8.283880,-5.014582,-6.855033,-0.150606,8.761412,8.600495,-9.118637,-7.194323,-0.319848,9.707498,2.533308,1.716197,-9.297368,5.219970,-5.278295,1.201111,-5.995017,7.070926,6.186975,-6.736547,3.022489,5.816609,1.735295,-3.468485,-4.038076,-2.189435,-3.985732,-6.038179,6.778014,2.103322,6.392080,3.734497,-7.236208,-7.224210,-0.807874,9.854703,-9.736339,1.340150,-4.393241,0.379977,-8.833284,-0.939826,-9.288676,9.178605,6.249757,1.866234,6.280991,-6.136435,2.724128,6.933511,8.472780,-1.198173,7.983740,8.062524,3.430706,-7.685696],[-9.966426,-5.983072,8.638191,8.436287,-7.426871,9.298176,2.051259,-4.999583,-0.786808,4.487905,-3.183314,7.468791,8.810939,2.522961,-6.245915,-8.238600,1.629288,3.257172,-2.020437,0.299060,2.166132,-3.564858,-8.799958,6.532115,-9.495220,-1.903710,-5.074619,5.356997,-9.352046,-6.081189,-2.989838,-7.674591,1.780622,1.467972,-5.594052,0.700576,2.403949,-5.678788,-5.507084,2.426913,-2.359946,3.628433,2.467490,5.003594,5.812583,-4.161453,-4.562946,3.176822,-8.585706,-8.118611,6.533192,-4.504268,2.805014,-1.179698,0.873356,6.552154,7.118843,-3.485210,2.739395,5.653557,-4.121324,-7.215381,-6.697192,-6.766221,-2.797816,6.801684,-9.901976,9.088268,-1.562492,4.488731,1.679086,-6.987165,1.936474,3.733009,-1.514438,-5.242330,7.419860,6.450964,-2.166850,-1.009017,-4.533898,3.838154,-1.200215,4.468095,-8.511437,-7.450050,3.980702,0.389782,6.817032,4.605193,9.487397,-1.335088,-6.190875,-9.333253,-1.148428,-6.017566,-2.702103,5.317273,-2.121227,3.998483,-8.694632,-3.167275,-1.094944,-1.164744,-6.010291,9.361197,7.688940,-5.267734,-9.159264,1.711589,-0.232158,5.661549,5.920970,8.376759,9.782511,-3.127290,-6.384591,0.800693,-8.205162,-3.628372,4.096929,-2.243869,-0.887646,5.751954,3.819366,6.557850,-0.291627,-9.075260,3.515811,1.330432,3.025631,-5.680568,-9.412195,-2.684022,-6.022835,7.332704,5.078433,-6.278488,6.976519,-7.671700,-4.737185,-2.501417,-7.702495,-2.899152,-9.700244,4.932921,-2.841135,6.136022,4.111857,0.031319,-3.450227,-7.765670,5.772597,9.439429,-2.900448,9.953679],[8.100417,7.864436,2.003132,-5.780670,9.808817,9.982866,7.616969,-2.102135,-3.740621,-9.785530,-5.058791,-4.171228,-1.178227,-9.977096,7.060371,0.041852,9.606210,5.903617,4.815979,-0.150331,7.765224,-0.697511,-4.259490,4.438932,-0.445893,-7.129197,-1.191976,-6.832454,-2.443368,8.886436,9.465907,6.201609,1.273664,4.785253,-9.157247,9.802028,2.169002,-9.325982,-2.163584,-3.702483,-8.278247,-6.187170,-4.452744,2.345261,1.994190,-0.331962,6.428015,-0.778133,-8.217446,7.174083,8.357434,-0.302020,-1.968671,7.236956,5.250527,-3.409682,-1.310738,-3.698074,8.070228,1.486828,7.105731,4.807858,9.744185,2.294425,2.889506,-3.611901,-2.197402,1.260019,-0.610794,6.248417,6.610385,4.113353,-3.727259,-3.575850,3.293925,7.961665,7.719139,8.779399,-6.937733,3.052211,-6.057667,-5.833270,-0.937886,7.115702,-8.941872,-6.580016,-2.427921,0.694186,-2.008021,6.484541,-9.255017,-6.044075,4.610944,-6.210903,-3.664414,-6.062622,-1.565355,8.473820,-3.070529,7.076540,-7.631334,-8.305535,1.374482,7.631654,1.463549,9.612832,3.798183,-2.299906,0.122765,-7.560846,-0.449459,-0.628073,-0.557056,4.417540,7.530637,7.767900,7.938666,-9.957505,-3.885743,-4.597428,-3.613094,4.859342,6.731708,8.875711,-5.223553,-5.699296,-2.957315,6.663119,1.549140,0.824201,7.215111,-4.489025,2.917945,7.987626,-1.731782,0.601572,3.255784,6.327793,-3.684216,-4.240274,-5.007535,8.676119,3.974866,3.881321,-1.370030,8.626172,-0.276331,-9.977914,2.708865,2.814987,5.640569,-6.247908,2.163950,7.564699,-3.334855,-4.660169],[-4.401916,8.005976,7.342008,-5.278470,-0.194827,6.786688,4.996548,-4.342402,-3.734210,1.962995,-2.831896,-0.505169,6.204224,-7.729615,9.728227,-4.703620,-6.570324,-9.461132,6.928917,0.723842,-1.491564,-4.171763,-5.048913,-3.104582,-9.072758,-0.238851,-8.035951,-7.838559,-4.735285,8.489631,1.905585,-4.839882,-4.409514,6.426958,6.107652,9.129499,-2.166985,-3.472183,-8.961983,5.396307,-1.112511,5.274544,-7.923302,-9.463246,-5.298430,9.500753,3.502843,-6.722306,-2.286321,3.484272,-6.333397,8.065110,-3.585972,-8.504582,5.341049,3.602284,1.989930,-4.595861,-6.593153,7.928012,-5.962567,4.170983,-9.476115,6.987597,9.973938,-9.933580,4.143986,-5.013875,1.649717,-5.339468,-3.614612,-1.885947,6.166897,-3.136670,0.682722,-3.767540,-7.635390,-7.952974,5.050081,1.431170,-6.025735,8.132025,0.891602,-0.748801,-9.397988,6.189303,-9.838019,-2.540026,-2.071832,-2.116890,-1.624450,-1.078465,-6.926845,9.140617,-6.599321,-6.044038,6.777672,5.495201,-6.836381,9.020128,-9.453745,4.653086,4.171085,-6.286373,-5.773313,3.483763,-8.780899,4.055129,-0.755959,-3.563491,8.693635,-8.218947,-1.081047,-2.755348,2.819350,6.084910,-0.270725,-9.059117,6.768815,-4.477506,4.776394,-3.306313,0.485917,-1.062259,7.516576,-4.993085,-0.849052,6.175886,-8.073345,0.434601,2.526383,-3.542996,9.011794,2.468097,5.512704,6.640460,-6.807824,-9.850944,6.368574,7.596579,-5.321256,-9.532745,-4.975968,8.362181,0.589874,-4.688215,-8.940137,-8.870260,-9.558811,-1.941131,8.695660,-7.459291,6.498366,3.172744,-2.195717,6.959021],[0.967427,3.381513,6.843807,-4.075971,9.182066,-6.108007,0.543625,9.211328,-8.154890,-5.820368,1.897958,0.852554,5.565131,-6.984900,-8.227189,-7.699075,4.271903,6.083782,8.518587,8.227888,1.865076,-0.717738,-1.945915,-5.758295,8.075180,0.418194,9.784274,0.417416,7.386712,-6.960583,-6.735303,2.775724,-2.522224,-5.724770,0.417622,-3.745068,6.215338,1.557047,8.698343,7.141347,-4.515014,8.660406,9.991422,8.217757,-3.316170,-4.080033,-4.692542,-8.751024,7.392941,-9.280706,-9.689346,3.675989,6.812145,-8.012292,-3.439059,6.248924,-8.343754,-1.970764,-6.312857,-4.875331,-3.046711,1.352608,5.943255,2.740649,-8.592978,0.135894,9.200821,0.873259,6.734198,4.499958,6.104058,0.641511,9.671487,0.370953,7.735213,5.178560,1.479290,-9.111700,-9.742831,3.046152,-3.082926,-7.295897,4.016675,-9.289194,4.544521,-8.288438,8.738774,-7.381006,7.675146,-5.738837,3.865325,-6.228173,-9.189783,0.899804,5.444637,8.485379,1.351107,6.950621,4.070706,-8.463465,0.086939,0.901955,-9.079793,1.911529,-0.514823,-1.853070,0.057081,-9.683310,0.433978,0.761860,-9.289150,-8.391584,-3.807321,-8.257633,-9.898569,-1.631124,1.764886,-3.517064,8.119638,2.956763,3.457766,4.794064,8.619564,-8.383263,-5.410009,5.566650,-3.421479,-3.477406,6.809087,6.087532,2.602668,7.773014,3.135699,-0.538849,1.529415,-7.204158,8.907301,-5.997801,6.341883,-8.513495,-8.087696,-0.708487,5.009203,9.604990,1.161356,-0.430493,-6.425887,1.064211,0.017024,-3.330250,-8.682816,4.622982,-3.174512,-6.257191,-4.502727,5.269624],[-5.193746,-1.322726,6.821980,-2.943022,-6.274579,0.534747,-7.422119,-0.491953,4.794692,-1.096482,-2.179159,6.700453,4.852433,-4.395480,-5.726686,-1.446560,-1.009068,1.777400,-0.427709,-1.342705,-3.620077,2.157223,6.741497,9.168939,-9.606117,-7.979669,6.398729,-4.906567,4.584966,3.384257,-5.523602,-1.497505,-5.542016,-5.145290,8.348038,6.352282,4.684533,-3.360721,-0.537391,9.093691,1.999072,4.513675,0.854769,-1.010515,8.013457,3.775364,8.123069,-0.007192,9.213444,4.456829,2.112581,-4.997996,3.759166,3.789751,-3.854975,5.521763,-1.942802,2.324994,-6.342336,-9.719159,1.621870,2.139558,1.556289,-0.774497,7.922000,8.992431,-3.919494,8.331712,-4.348647,7.176824,3.995053,9.127218,-4.558906,8.309018,-3.188417,-4.237023,5.328892,-6.057516,2.192904,5.012952,-5.979420,0.335312,6.994907,5.812986,-2.985856,-0.290419,6.615317,7.958701,-9.902824,-0.108210,6.269593,-5.493116,-8.206596,6.943450,0.717902,-9.893048,-2.206888,-4.742611,-4.761735,4.169545,1.397315,-5.797255,0.849952,-3.120798,3.576707,-4.099391,8.651030,4.365852,-2.398475,1.799697,-5.091727,4.718696,4.910464,-6.640212,5.811715,-3.900960,7.697069,7.297382,2.721328,7.660728,-6.936339,6.106211,-0.253187,-0.068406,3.338705,7.844058,5.103565,-8.541785,-6.300049,4.527029,7.510188,-6.906848,-4.430569,1.349351,4.274885,-1.744119,7.473025,1.068271,3.472279,-3.563598,4.059030,-9.211045,-7.763209,-2.157988,9.071894,6.958776,8.130110,9.765342,5.201870,7.295486,0.915776,8.848692,1.355569,1.268810,-9.106464,-7.075111],[2.725607,-0.830682,9.661567,-0.414417,-2.398004,0.119490,-2.656621,-1.970261,-8.471517,-8.275632,4.842905,-8.853451,6.465521,0.092941,0.097401,2.658249,-3.190364,-1.279131,-6.918574,-5.545843,-7.501444,5.352459,5.922865,5.387130,5.991169,5.887892,5.845483,-9.287780,1.391971,-4.742694,0.970754,3.988825,6.124286,0.986474,1.994717,0.950970,-9.433336,-6.597947,-5.351390,2.346107,3.133344,-4.471368,-8.629282,8.017372,8.455509,-9.115957,-4.529339,-1.676799,3.301653,5.302559,-9.913889,0.608646,1.587003,-6.325698,8.912567,-6.197781,-6.006194,0.841659,1.396519,5.116405,-0.815010,7.205386,5.627963,-2.672027,7.311152,3.763818,-5.923944,-1.478851,-2.653038,3.898346,-6.753385,6.162017,6.959679,8.596381,7.792496,3.691734,-7.001118,-6.035996,-6.643128,4.236975,6.589713,8.252941,9.242681,2.419628,-3.680126,3.781324,-5.724446,-4.973297,1.695237,-8.947666,-1.432590,-2.789185,-4.244283,-5.945799,9.881951,7.893903,8.622419,4.182614,-7.736030,-0.114461,0.831055,-0.783821,-0.387933,0.313831,-4.605504,0.572586,8.701887,-1.531337,-2.377111,4.921924,-9.135425,-2.083294,4.059575,-9.071953,7.173707,3.931117,-4.532540,-4.975603,-9.842446,-0.308681,-2.843760,9.919012,3.994226,9.538380,-0.309805,6.495594,5.405142,-3.984593,6.290297,6.585544,-6.047365,-5.552104,-4.064765,7.183482,-6.745964,1.805103,0.656395,2.605979,-3.852878,9.373005,2.399307,6.292606,-8.751007,5.652204,-0.572864,-0.581290,3.575828,6.523327,-3.379332,-6.067662,-9.334925,0.972103,-4.102729,-2.771977,3.414940,-0.088233],[1.764429,-9.554523,1.875477,5.691110,-5.253308,-7.614379,-8.006609,0.149001,0.002622,-2.244494,7.777586,2.694878,-0.276216,9.791200,8.176601,-8.377479,2.001195,1.403914,-6.096711,1.159256,-0.154343,5.610963,8.361988,2.381475,-7.229057,5.068495,7.238947,-8.985449,-6.872817,-7.135166,4.963845,-1.554175,3.668458,0.293301,1.554824,-9.187836,2.573789,-4.346644,-1.150100,0.909808,7.962813,-2.550911,5.194470,-3.760390,-7.836852,-8.721333,4.522128,8.363286,-4.049162,3.597051,2.204517,7.999776,3.268978,3.012396,-6.341236,-9.227527,0.608403,-8.976566,4.687319,6.577142,9.183187,4.142435,-1.382567,2.371923,-7.049914,-1.659796,-7.520708,-9.194513,-6.268531,6.342831,-6.327659,-0.254479,6.971583,-1.785927,-7.069779,-8.320368,8.609756,-1.704489,-0.801808,-3.193194,-2.193002,-2.888634,1.755774,-8.309500,1.634698,-6.548461,-2.748384,5.438734,4.947721,-2.923007,5.837081,-0.668293,6.322382,1.452274,-0.762770,-7.935347,-9.356980,-4.833117,8.947142,3.462813,-6.590098,-8.198391,4.581046,-1.022781,5.404530,-8.418030,-6.522233,-9.669276,2.286636,8.294834,3.967476,9.183171,3.532343,0.256447,-7.869800,6.686368,-1.728437,0.209168,4.644686,1.497583,4.646651,-2.842657,-0.315409,0.153020,-2.940728,1.721261,-4.000217,2.910746,-1.650781,-6.927479,-8.634337,-4.466282,4.437496,-0.103496,5.507334,6.404679,2.034561,-5.537227,-7.900148,8.664393,3.089125,0.108074,3.485538,9.058724,8.265891,6.848380,1.669578,4.204687,3.916751,2.240283,0.087350,3.708671,-0.379517,-1.222744,8.065366,3.024116]], dtype = "float64")#candidate|3889|(11, 156)|const|float64
var_3890 = relay.var("var_3890", dtype = "float64", shape = (5, 60))#candidate|3890|(5, 60)|var|float64
call_3887 = relay.TupleGetItem(func_3275_call(relay.reshape(const_3888.astype('float64'), [140,]), relay.reshape(const_3889.astype('float64'), [286, 6]), relay.reshape(var_3890.astype('float64'), [300,]), ), 1)
call_3891 = relay.TupleGetItem(func_3280_call(relay.reshape(const_3888.astype('float64'), [140,]), relay.reshape(const_3889.astype('float64'), [286, 6]), relay.reshape(var_3890.astype('float64'), [300,]), ), 1)
output = relay.Tuple([bop_3870,call_3874,const_3875,call_3882,var_3883,call_3887,const_3888,const_3889,var_3890,])
output2 = relay.Tuple([bop_3873,call_3876,const_3875,call_3884,var_3883,call_3891,const_3888,const_3889,var_3890,])
func_3893 = relay.Function([var_3883,var_3890,], output)
mod['func_3893'] = func_3893
mod = relay.transform.InferType()(mod)
var_3894 = relay.var("var_3894", dtype = "float64", shape = (120,))#candidate|3894|(120,)|var|float64
var_3895 = relay.var("var_3895", dtype = "float64", shape = (5, 60))#candidate|3895|(5, 60)|var|float64
output = func_3893(var_3894,var_3895,)
func_3896 = relay.Function([var_3894,var_3895,], output)
mutated_mod['func_3896'] = func_3896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2028_call = mod.get_global_var('func_2028')
func_2030_call = mutated_mod.get_global_var('func_2030')
call_3903 = relay.TupleGetItem(func_2028_call(), 0)
call_3904 = relay.TupleGetItem(func_2030_call(), 0)
func_1640_call = mod.get_global_var('func_1640')
func_1645_call = mutated_mod.get_global_var('func_1645')
const_3912 = relay.const([-3.572958,-4.449589,-1.890727,4.628934,2.527366,5.333809,4.499816,-6.307128,4.988948,-8.547111,2.671622,-7.442266,5.593615,5.742029,-7.255080,3.874084,-6.518582,-7.380399,-5.996430,-0.769549,9.837741,-3.543966,0.182029,-2.848318,-5.700579,-4.051065,7.152083,-8.233746,5.044220,8.110158,-7.190821,-9.970512,-5.016471,-6.868036,-6.043983,-9.351943,-2.899813,-9.510595,-5.558548,-3.259196,7.269168,-8.347916,-9.716671,3.488793,-6.622142,1.422276,-0.355532,7.684630,-8.513716,9.053536,-9.700231,-2.242395,-2.840991,-1.346474,-5.400943,-6.172078,-1.141007,-7.952708,6.714706,-3.718479,6.382956,-1.673843,-0.722459,-1.858462,2.980473,4.049155,-0.403086,9.146658,6.476911,4.815829,-6.195050,0.273647,-9.047263,5.897848,-0.230248,3.245921,-7.300408,4.617951,4.995917,1.907314,7.221757,-0.377370,5.041720,3.375771,-4.566601,-4.123567,-7.601584,2.485508,2.008782,-5.819498,-1.579582,9.653895,8.093410,3.011566,5.958656,-5.977698,-3.495285,-0.856323,-6.100183,-1.165283,-2.156122,8.028366,-8.350976,2.347259,-0.421869,3.143695,0.402157,8.904158,8.611005,1.373961,3.316232,-4.034964,-2.670596,6.494983,-0.378625,4.070702,-9.683054,1.548869,5.558286,4.662466,-9.006934,5.407418,8.873122,-1.154217,4.689555,6.042974,1.041689,-9.498103,-2.251437,-3.115440,0.227809,1.931213,0.107465,2.244688,5.063107,-7.747725,8.872463,1.355120,-3.301969,-4.152109,4.184197,-9.154873,8.090951,3.231820,8.143865,-2.556005,0.618267,-5.903381,-4.950441,-2.578532,-9.610512,7.712847,-9.318205,2.670890,-8.746124,-1.190452,2.706362,4.415362,-5.715348,6.683184,-9.084788,-7.765876,3.150897,-7.984493,-0.507028,-5.691681,7.928137,8.383278,-8.215500,-9.729524,-7.627048,3.497888,-0.745345,-5.984914,0.994760,-9.533856,9.832060,1.364914,7.923337,-5.278950,-0.295309,4.995076,-9.228452,3.022733,5.380991,1.262714,4.752359,0.495253,1.952940,-6.154348,9.559487,4.841215,9.323536,-7.721811,-6.363726,6.881147,5.997256,7.159755,3.530087,-5.581811,-1.281851,-5.800127,-3.791115,6.302988,4.099891,-1.049865,-6.207114,8.400850,9.750960,0.451727,-1.539194,-7.465265,1.109474,3.273446,2.641543,5.026612,4.489312,6.902532,3.644312,-6.841442,-8.681162,-9.206996,-7.106960,-4.900722,4.666283,4.809002,-6.264234,9.881551,8.606300,-7.784053,-8.590730,8.429986,9.004204,-2.783345,1.013370,0.755728,5.178651,7.849660,2.543635,5.471466,2.835072,-5.811120,3.671800,1.647751,-6.215767,2.812628,7.168759,0.557011,8.780487,8.535786,-5.243922,-5.889783,-8.928881,8.139109,0.951485,-3.172025,0.547954,1.173631,-3.033229,-6.685587,-2.585359,-6.523365,-4.969033,2.923804,1.024466,-2.247658,4.805250,3.215872,-2.419202,-4.222859,-9.275553,-9.692586,3.188411,-3.741070,-6.958571,8.748497,-6.288468,-9.344654,1.986837,-2.145676,2.945346,-9.148948,7.742940,-4.649284,-0.408159,2.954373,-5.856794,-4.322081,9.771853,2.233182,8.910415,7.181286,-3.404785,-5.376880,8.790704,-5.416467,-7.776380,8.220917,9.137720,6.480590,-1.124596,-4.823375,6.213961,5.245755,0.433672,-9.936027,0.339053,-2.375973,-2.822830,2.650207,7.139981,-2.124403,-6.840346,7.472392,5.850936,2.201591,9.219133,-7.544449,-8.068095,-2.408786,3.123692,7.603574,-7.907657,-9.963384,-0.900644,-0.561180,-0.690760,9.394530,-3.049710,-1.923476,-0.989708,-1.719596,5.319673,-2.831877,-6.615911,2.276290,0.329688,-0.366180,-1.091331,-7.926421,-9.491543,-1.987642,4.167339,5.922487,-7.748671,-0.311960,9.032373,-1.787418,3.980293,-3.063516,2.067740,6.494961,-0.057062,-6.176566,0.213697,-8.924175,1.025559,-7.834015,-6.665426,1.323506,4.879196,4.169887,-2.576726,2.683970,-0.698270,3.779307,6.599617,5.831000,-4.111358,-6.996829,-0.714784,4.708623,2.586311,5.173717,0.030816,-1.572265,-3.002631,9.708767,4.886243,-0.300511,-5.214088,-1.397354,8.556906,-3.852254,8.512542,2.848746,4.030074,-8.024559,-7.797197,-8.162383,-5.171147,-2.004300,2.308067,0.090485,-0.852733,-9.666474,8.981208,-6.153158,-3.077863,-1.902735,3.814691,-7.377652,-1.623909,6.739399,-9.005624,-1.645462,-0.555995,1.215096,-5.259233,-2.206150,-9.252119,0.042540,9.603372,-3.955807,-4.334528,-5.212452,-2.299217,-1.362057,7.507413,1.865298,-5.565998,-6.628651,-6.931088,-3.932738,-0.993430,8.787624,9.125031,-8.397824,-9.825316,3.458578,3.918666,-0.964922,-6.656551,-2.048218,-7.139195,0.372169,4.154148,8.107738,1.756733,-1.851286,6.836282,-7.460586,-4.256995,4.160517,-2.640717,-7.240856,-4.304272,4.293561,3.571607,-9.954755,-0.356170,-8.344036,0.139783,9.721979,3.748737,-3.011802,-5.212740,-9.461287,7.792300,6.709502,-0.012795,1.078309,4.018062,8.205786,-5.075200,-6.629560,4.593848,-0.700274,1.226392,3.513847,5.899476,9.494044,-2.801310,1.278035,6.233580,6.613811,-3.307522,8.520388,-7.186504,-2.687204,-0.923384,2.976279,-3.409412,4.873928,8.330025,-3.418288,-1.850434,-5.644836,7.397872,5.351074,3.437129,-7.028639,5.989511,9.435730,-1.993833,5.448734,-6.056206,-3.178427,-3.908087,-3.129218,-3.384624,3.505020,-6.726277,-2.123138,8.910678,4.842240,-8.750004,-5.317523,3.628829,5.711758,9.650607,-6.161343,3.596049,-3.524799,-5.827065,-0.252729,-1.058540,-6.048094,7.577819,-6.748548,-7.764321,6.822004,-1.590635,-3.905851,4.544992,1.605009,-5.446801,8.358059,1.890763,-9.855411,-3.532878,-6.234040,-7.792256,-1.143118,2.559275,-4.371363,-2.966205,6.689656,0.012222,-6.209995,4.563117,2.518744,7.690213,-4.609498,7.761262,8.313008,7.183025,-4.923360,-4.189464,0.341964,8.045802,6.792645,-1.773423,-1.726833,-7.212330,-7.997765,7.537463,-2.162891,-6.282624,8.565890,4.966225,-8.018216,-0.838168,-5.123406,6.037546,6.254629,9.185489,-2.801380,5.676976,6.080094,3.012530,8.956423,8.412482,9.729527,-2.860123,5.231512,4.989051,-4.472052,-5.397837,-3.318558,2.429687,4.297460,-6.254625,-5.419837,-6.525094,-8.944998,5.201164,-8.432421,5.962919,8.073633,-6.773244,3.862261,-3.414266,-4.408318,-9.811670,-4.196352,-0.418723,-8.464324,0.763424,-7.093063,-6.526111,5.886506,-3.707045,-6.700042,0.818049,-0.532065,4.039970,-8.050527,3.179695,-6.103142,4.456471,4.034811,-7.870274,7.859567,-5.087310,-1.147379,-1.971702,7.753964,6.582808,-7.547749,5.606710,2.489800,-5.082116,-3.300767,-3.937085,2.828276,4.467640,1.288760,-6.884350,4.875821,-1.137426,7.426315,1.971169,4.364257,-2.462778,7.584703,-7.004238,-8.420761,-4.213925,1.261097,-4.954611,8.698484,3.777490,3.871421,6.509112,6.301874,-1.531493,-7.645323,1.395994,8.847755,3.125989,3.457834,0.586195,-8.491961,-0.239937,-8.569786,-3.026387,-0.998295,-5.249579,0.794380,-3.019892,0.082567,7.256154,-0.922981,4.892036,-9.877755,-1.384488,6.116990,-8.836370,-9.867456,4.969027,7.754026,-8.674908,3.324255,8.673475,-1.821854,2.275787,7.784076,5.709694,2.719232,1.649287,3.377006,2.586018,7.552022,-4.084146,-7.635558,-5.295733,5.579943,5.556001,5.969155,2.256912,-1.662777,5.448556,5.305103,9.560620,8.501439,-0.988463,5.317251,7.959783,9.561753,-1.579244,1.342152,2.156450,0.842850,-3.525702,-6.906476,-6.812220,-8.258851,-2.398107,-2.131616,8.901927,-1.277044,-8.867361,1.936349,-7.870081,6.714465,2.445173,9.025465,6.847984,3.984146,9.746527,7.691651,8.571713,0.015476,8.718020,4.027381,4.967403,-0.901270,9.001316,-6.958769,0.358913,-5.173163,-9.962492,1.093855,-7.106344,0.034446,-8.688301,8.290672,1.238724,0.838605,-7.164371,4.605812,-9.540957,4.986195,2.064505,0.637208,0.454531,3.906907,1.861752,8.119092,-9.533555,7.109394,8.091699,-0.542710,5.141035,5.271592,-6.212298,-8.721165,1.152052,0.188965,0.821224,3.010360,-9.083370,-3.146865,8.772585,-4.874973,2.920576,4.997790,-4.666198,2.527773,6.779051,-5.107552,0.938688,1.109749,-8.398807,4.496698,6.837306,7.214411,-5.875483,-8.007276,5.344951,0.878770,-2.124050,-3.742609,-7.644998,1.330360,-5.177355,7.468361,-5.679746,-0.738044,0.835987,-5.892974,-9.541188,1.696908,4.486830,0.832453,-6.526058,9.351934,3.458417,2.090270,4.036308,8.772961,-2.671363,8.993640,2.116836,-2.056377,-9.448534,-5.945530,-9.433670,9.481625,3.348705,-1.851387,7.501454,-4.392091,3.707636,-0.921123,-8.223512,7.349927,-2.050495,2.763693,-7.195273,2.934777,-4.803037,-2.129405,7.767810,0.837361,-3.299835,-8.348681,4.812235,-7.106913,-3.941787,-7.112503,-5.824966,-8.753725,-9.532072,7.181086,3.712787,3.213941,-1.121100,-7.000386,4.567980,-8.935502,0.004714,4.050535,9.473774,-6.965995,-0.060162,3.390371,-1.437122,-4.353994,7.861207,8.755387,-2.538136,5.325995,-8.777400,-6.312957,7.436952,0.377836,6.218178,5.996171,-5.534234,-9.659146,-7.289686,-0.133811,7.918409,-6.433433,-8.892888,7.143626,-1.103127,8.382940,-9.879534,0.163358,-0.235563,4.485247,7.203471,-5.957443,-6.398789,3.813242,-3.598586,2.983372,-1.762287,8.064205,0.021781,9.987401,6.334336,6.108497,-1.731895,4.743950,4.330270,-8.195828,6.671409,1.862593,1.002343,5.854688,-9.031883,-4.085591,-7.844114,2.068825,-7.721107,8.840045,4.259805,-8.227309,4.448107,-5.342808,-6.710109,-2.234902,9.745919,3.663773,-7.073816,9.036246,4.077120,9.703877,7.798404,2.122424,3.541827,2.130854,6.874367,-0.092462,2.555936,-1.204220,1.864463,0.831860,-5.846970,1.916273,3.479189,2.458152,-2.718221,-9.388550,4.630066,-1.994363,6.952280,3.847365,6.590572,5.334785,-3.835827,-4.105455,-2.176850,-2.498632,-6.194698,4.764844,-7.010064,-5.391515,2.088218,-5.230833,-9.650237,6.212815,-8.793057,6.960939,-4.380170,-7.399533,-9.206426,-6.141446,8.284023,1.616473,4.668244,8.815002,7.380199,-2.945473,1.266165,9.628862,5.668183,2.841302,5.707202,7.645417,3.944455,-3.416847,-3.254215,4.746195,6.723409,6.207123,0.363120,0.345618,-9.974369,-3.732855,-8.967336,-2.995375,-0.370599,-9.353837,-4.507955,-0.417703,9.857699,6.160514,8.414897,3.163813,9.561731,1.646895,-8.732835,9.869905,0.735701,-8.093651,3.484072,0.213497,-2.993370,4.029699,-5.225729,-1.406812,-5.947003,6.502236,-1.942406,-1.655368,-7.282485,0.647258,-6.763543,6.451266,-6.751852,-3.335941,-3.102831,7.655933,3.021322,7.004024,-0.783113,8.899676,6.784436,9.895522,-8.224564,2.186421,5.390037,4.500555,5.587843,5.427921,-9.055428,0.763867,-5.693276,6.327224,8.766525,1.539114,-1.662774,-3.808247,6.346505,-4.556532,-7.006956,-5.153660,-9.394909,3.308192,2.646503,2.133692,-9.372502,-5.968450,5.184830,-6.830458,3.192639,6.849917,9.090088,5.992547,4.308440,-9.624295,-3.222981,3.226030,-9.254961,-3.150303,-9.075969,0.499655,3.062036,6.536712,0.782208,6.518745,4.556187,-8.286339,7.459058,6.261718,4.037612,-9.816830,8.693024,-7.006349,-8.986454,2.037612,-2.926471,-4.065650,-0.864748,7.718682,5.878879,-8.156618,0.786100,8.533215,1.025184,9.856042,-2.033561,-5.261406,9.660288,8.478201,5.914738,-9.034034,8.602025,9.824180,-1.938119,6.142217,-5.196309,-5.601411,0.619526,-1.976256,0.577843,8.857748,2.416659,5.824374,2.156103,-9.775234,4.040471,-7.661554,4.592542,-4.916093,-5.198939,-9.570075,-8.202430,-2.222830,-6.770608,-4.418020,-1.946461,-4.149175,9.657158,4.057600,-3.732267,5.212218,-3.565763,8.317576,-0.789900,-5.215084,3.117066,9.223659,6.216858,7.177971,-2.761803,5.601697,-6.748315,-5.534597,0.183578,-3.956712,0.210626,7.221109,9.675924,-7.021314,5.492411,3.936941,8.693284,-9.629716,-1.670530,-6.658498,1.412700,-1.171923,6.130038,1.987415,-2.701470,5.289635,7.753912,0.523755,3.780948,-6.004990,-8.309828,8.160168,-7.295430,4.671694,-4.217115,5.022793,4.946969,1.646833,-5.921870,-9.050806,-7.569218,5.169030,-2.968756,-5.632608,-9.636924,-4.371720,-8.397225,-6.743144,8.480483,-2.923087,9.976627,4.797009,9.994081,-6.028654,7.659720,-2.331971,-6.744742,-7.978530,-3.428509,-8.800810,9.754104,-1.222215,-5.879356,4.572973,-0.343155,0.222719,9.213813,-4.133724,9.853997,4.510373,4.980162,-5.766107,5.521364,5.248769,-7.444275,-1.882128,-5.369443,8.522897,8.375075,3.943247,-3.620620,3.496048,9.592501,-9.116790,-7.315452,-3.113307,1.007449,2.541861,9.797948,8.031674,-4.510424,0.265212,-7.940023,-2.360013,9.118766,9.116468,-2.634169,-1.038474,-1.327776,3.661872,-5.479028,3.124023,-9.075923,-6.427612,3.062808,1.561534,4.123816,-1.067278,-7.718847,0.369906,-1.037279,9.155067,9.513863,0.023870,5.117517,1.141595,-8.975128,4.424656,0.622597,-4.248806,0.524601,2.436764,-9.030688,-3.278666,-3.692787,0.140379,-4.356070,0.548673,-4.054590,-0.913146,6.110713,6.259763,-3.712151,1.512798,-8.659110,-9.462012,6.297121,-7.732914,1.824738,-4.865165,-3.163227,3.114214,5.477779,-7.004606,9.760977,2.065448,-4.070531,-3.549631,8.640563,8.068768,9.161280,-3.006242,7.660834,-5.572076,0.734379,-8.103674,-0.351712,7.618328,-9.962451,1.649325,-9.103124,1.846540,3.914029,6.289811,5.160442,-4.365944,-9.995497,3.291620,3.100217,-4.864551,1.158519,-1.832741,-2.248343,4.935887,-2.602574,-3.043451,9.051678,7.346549,6.578386,4.507982,1.081942,5.520250,-2.849889,3.195442,3.976152,4.459295,-2.290293,-1.903034,7.384746,-1.076957,9.110162,-4.917564,-0.755253,0.953202,-2.555527,-2.763209,6.195731,1.863110,-9.496560,1.878919,-2.193894,-7.575796,6.473914,-0.663804,-1.082964,-5.365945,7.205744,-2.566667,-9.304874,-7.250396,0.462220,7.680211,-9.159696,-1.451227,2.906927,-1.129129,-7.406084,4.996906,-3.797404,-8.989636,-6.141620,-0.195716,5.389368,9.451660,-3.331183,-9.458831,-9.845807,-6.376252,-1.010014,2.763971,7.135143,-9.591954,9.143962,1.700740,5.415486,-0.607595,-3.122403,7.437679,-6.203509,5.420512,-0.114680,-4.849275,5.125237,-8.894664,9.534962,-0.358105,5.146999,2.593609,-4.334656,-9.283272,-5.926148,7.205599,6.932938,0.484953,3.506052,7.605360,-4.463568,-9.704516,-2.366934,-5.618862,-6.588982,-5.005761,4.368455,-8.542949,-9.982093,8.050287,-7.520102,1.976389,0.549615,6.849561,-3.491860,7.225749,-2.576246,-9.226144,-7.766976,-5.613895,5.215707,-2.687236,-9.687947,-7.160893,-1.865810,-7.036884,-5.399148,-9.450191,-9.209931,-8.518611,-4.551105,3.414966,0.791430,-3.631335,-7.616847,3.932227,5.855798,-4.718499,-4.256576,8.135447,-3.861025,5.456538,6.699577,0.431858,3.980614,-5.471757,3.780810,-5.148571,-0.797489,-1.945017,-5.080030,-4.530355,8.708160,1.055027,-1.111557,-4.117530,-8.265052,3.708307,-2.069095,1.123797,6.794251,8.531093,-2.838684,3.887414,-1.383102,7.925433,2.695464,3.458929,1.570791,7.550333,2.268046,-8.678901,1.314553,5.286252,-3.052519,-3.624621,5.947965,-4.943503,7.870296,-9.445963,6.456971,-0.208892,3.639667,-8.613737], dtype = "float32")#candidate|3912|(1456,)|const|float32
var_3913 = relay.var("var_3913", dtype = "uint32", shape = ())#candidate|3913|()|var|uint32
call_3911 = relay.TupleGetItem(func_1640_call(relay.reshape(const_3912.astype('float32'), [16, 7, 13]), relay.reshape(const_3912.astype('float32'), [16, 7, 13]), relay.reshape(var_3913.astype('uint32'), []), ), 2)
call_3914 = relay.TupleGetItem(func_1645_call(relay.reshape(const_3912.astype('float32'), [16, 7, 13]), relay.reshape(const_3912.astype('float32'), [16, 7, 13]), relay.reshape(var_3913.astype('uint32'), []), ), 2)
output = relay.Tuple([call_3903,call_3911,const_3912,var_3913,])
output2 = relay.Tuple([call_3904,call_3914,const_3912,var_3913,])
func_3920 = relay.Function([var_3913,], output)
mod['func_3920'] = func_3920
mod = relay.transform.InferType()(mod)
mutated_mod['func_3920'] = func_3920
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3921 = relay.var("var_3921", dtype = "uint32", shape = ())#candidate|3921|()|var|uint32
func_3920_call = mutated_mod.get_global_var('func_3920')
call_3922 = func_3920_call(var_3921)
output = call_3922
func_3923 = relay.Function([var_3921], output)
mutated_mod['func_3923'] = func_3923
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3927 = relay.var("var_3927", dtype = "float64", shape = (9, 5, 12))#candidate|3927|(9, 5, 12)|var|float64
uop_3928 = relay.sinh(var_3927.astype('float64')) # shape=(9, 5, 12)
func_2483_call = mod.get_global_var('func_2483')
func_2486_call = mutated_mod.get_global_var('func_2486')
const_3939 = relay.const([9.329404,-1.845385,-9.496692,5.098719,-0.224070,2.176348,-7.794864,1.051717,6.752090,-7.309760], dtype = "float64")#candidate|3939|(10,)|const|float64
var_3940 = relay.var("var_3940", dtype = "float32", shape = (90,))#candidate|3940|(90,)|var|float32
call_3938 = relay.TupleGetItem(func_2483_call(relay.reshape(const_3939.astype('float64'), [5, 1, 2]), relay.reshape(var_3940.astype('float32'), [90,]), ), 0)
call_3941 = relay.TupleGetItem(func_2486_call(relay.reshape(const_3939.astype('float64'), [5, 1, 2]), relay.reshape(var_3940.astype('float32'), [90,]), ), 0)
output = relay.Tuple([uop_3928,call_3938,const_3939,var_3940,])
output2 = relay.Tuple([uop_3928,call_3941,const_3939,var_3940,])
func_3943 = relay.Function([var_3927,var_3940,], output)
mod['func_3943'] = func_3943
mod = relay.transform.InferType()(mod)
var_3944 = relay.var("var_3944", dtype = "float64", shape = (9, 5, 12))#candidate|3944|(9, 5, 12)|var|float64
var_3945 = relay.var("var_3945", dtype = "float32", shape = (90,))#candidate|3945|(90,)|var|float32
output = func_3943(var_3944,var_3945,)
func_3946 = relay.Function([var_3944,var_3945,], output)
mutated_mod['func_3946'] = func_3946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3695_call = mod.get_global_var('func_3695')
func_3696_call = mutated_mod.get_global_var('func_3696')
call_4062 = relay.TupleGetItem(func_3695_call(), 0)
call_4063 = relay.TupleGetItem(func_3696_call(), 0)
func_3546_call = mod.get_global_var('func_3546')
func_3548_call = mutated_mod.get_global_var('func_3548')
var_4068 = relay.var("var_4068", dtype = "float64", shape = (300,))#candidate|4068|(300,)|var|float64
call_4067 = relay.TupleGetItem(func_3546_call(relay.reshape(var_4068.astype('float64'), [300,])), 0)
call_4069 = relay.TupleGetItem(func_3548_call(relay.reshape(var_4068.astype('float64'), [300,])), 0)
output = relay.Tuple([call_4062,call_4067,var_4068,])
output2 = relay.Tuple([call_4063,call_4069,var_4068,])
func_4082 = relay.Function([var_4068,], output)
mod['func_4082'] = func_4082
mod = relay.transform.InferType()(mod)
mutated_mod['func_4082'] = func_4082
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4083 = relay.var("var_4083", dtype = "float64", shape = (300,))#candidate|4083|(300,)|var|float64
func_4082_call = mutated_mod.get_global_var('func_4082')
call_4084 = func_4082_call(var_4083)
output = call_4084
func_4085 = relay.Function([var_4083], output)
mutated_mod['func_4085'] = func_4085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3759_call = mod.get_global_var('func_3759')
func_3761_call = mutated_mod.get_global_var('func_3761')
call_4094 = relay.TupleGetItem(func_3759_call(), 0)
call_4095 = relay.TupleGetItem(func_3761_call(), 0)
func_3943_call = mod.get_global_var('func_3943')
func_3946_call = mutated_mod.get_global_var('func_3946')
const_4099 = relay.const([8.948474,4.509360,-2.991502,-8.904591,-7.270134,-6.777390,-3.080647,6.554198,5.896888,-6.258440,-5.643193,6.548995,3.019709,-3.160035,-2.438017,8.784897,1.526076,-2.049015,-0.445892,7.497399,1.938689,7.997230,7.717875,-1.713858,9.695512,-3.318176,8.922452,4.991774,6.341336,8.306686,6.823153,5.116382,4.875569,0.214758,5.357179,2.431909,-8.421604,-5.560022,0.611158,-7.261911,7.655045,-9.703559,-9.031155,-1.794973,5.237166,0.095860,-6.179477,-4.818167,-5.598097,-9.232302,-6.742721,-4.098037,-5.021136,-3.486255,7.105598,-6.543829,4.739149,2.304490,-0.297150,5.648189,-2.188230,2.354570,-7.629248,-8.832170,7.012627,-1.589952,-6.645292,-2.121823,2.818748,-7.513703,7.047618,1.892991,0.847432,-5.095649,-0.364699,-3.353666,-5.888185,-0.431263,2.083944,3.151165,2.397697,-4.288221,9.221363,-2.221447,2.621384,2.310318,9.042669,7.878982,-1.760403,-5.672253,2.140539,9.221381,-9.399482,-6.046717,-2.160004,-8.611812,5.140213,-7.138033,6.277308,5.498094,9.943483,4.421126,-5.055447,-2.943088,-0.343599,8.415842,7.754135,7.137404,-2.810874,5.193815,-9.012898,-4.544192,-5.774149,-7.349374,0.706606,-1.436750,-8.059596,3.370802,-5.759473,2.211138,9.422358,-7.363524,9.517463,-1.553327,-5.572304,4.853847,-6.642632,-4.152940,-8.241374,-9.498308,0.821181,-6.256257,5.148654,-6.272834,6.071819,-0.755516,-1.710145,6.748370,0.117674,-0.041854,5.780376,-2.184116,1.684084,-5.207634,0.731534,-9.181768,3.335777,-0.010103,-4.456068,-4.186922,5.873533,-3.644991,-6.404592,5.133740,-6.804485,1.323543,1.582603,8.173254,-9.515882,-7.483283,-6.316976,-4.653457,-4.788862,-4.458343,5.156967,-9.019688,-2.101374,3.383800,9.306683,-6.613328,-6.059276,4.602980,7.738472,-9.135666,5.619545,7.096333,0.269503,1.304839,-2.970977,0.890772,6.448643,-4.065566,-8.209428,-2.886136,1.552422,7.159009,-0.800616,9.865712,8.279554,3.351275,4.927706,8.467956,8.140196,-8.339644,-9.397474,8.339426,8.824128,9.643132,1.762873,0.116013,-4.069727,-4.159205,-5.379545,-4.664491,-1.088913,-3.313834,-1.079104,-7.547402,-7.789662,-3.266345,-0.220036,-0.235357,7.102382,-3.218926,1.264562,4.423184,-7.123273,-1.727849,-0.486397,2.868959,8.716715,-6.587230,9.402740,4.774076,4.578544,-2.419152,1.430384,1.456915,8.563759,-0.758941,-3.414659,-9.624284,2.153981,5.955219,-6.782927,-7.883459,-0.504075,9.437098,-8.260380,8.534172,-1.136541,4.551745,0.268885,6.696616,-1.240488,0.785089,4.231872,-1.340195,8.086516,-3.919848,-7.956334,1.864806,3.712473,-8.784399,1.903291,5.388621,2.788858,2.261610,-6.063671,0.570185,-8.190533,3.535120,2.856106,2.679934,3.921831,-3.091980,-2.955446,-7.425006,-4.597253,3.333451,-2.093616,-9.784637,-1.895755,-1.107028,-6.929076,1.994741,7.189620,-8.881409,-5.663077,6.637038,-9.220904,1.357134,8.117852,-6.669318,-4.953305,6.906425,3.025540,9.824031,1.170232,-6.112551,0.759780,5.436668,-8.637027,6.698047,7.232729,-7.122205,-4.123217,-9.486566,6.333764,-9.086295,5.632692,-5.255446,6.967133,-8.190996,-4.900589,-9.577114,-8.499380,-4.961957,7.562153,-2.158208,-5.495757,-6.410940,-7.426096,-9.207777,-1.993128,-9.338498,-7.596156,-3.698538,-3.193507,-3.785101,5.672552,-3.523734,-5.590118,-1.638112,7.475433,-2.349518,3.811771,-9.977381,-9.018746,8.163525,6.140527,-1.503961,-6.255669,1.376589,2.501509,1.395779,-8.764443,-5.576390,-0.119725,0.920299,9.954373,5.814872,-7.121533,3.877751,-5.834305,1.279864,-8.150423,2.354289,-3.021054,4.080345,0.957314,-1.038131,-9.018338,-0.125431,8.436784,-1.891554,-4.653768,6.305384,-7.376996,2.656284,3.662567,-5.097158,-0.320927,6.266866,5.219659,-0.161884,1.101325,-5.583170,7.254862,7.939793,-4.939629,-5.521564,1.970052,-2.226023,-3.332565,8.592098,-4.739780,0.141481,3.512581,-8.071552,7.318316,7.865779,2.663295,-0.254419,2.622515,-2.641448,-6.617068,-8.203058,-6.134952,7.538048,-6.744391,2.077115,-8.646880,1.500707,3.567680,-1.296163,-8.031566,0.297685,-2.314397,-3.885546,8.488446,9.756030,7.460245,-5.118126,-4.956980,-9.976282,-0.062138,-5.926191,-4.212592,-7.371505,1.482812,-2.559332,1.234012,1.838109,-0.435694,1.095572,-4.593570,5.047234,-9.681289,-1.066916,7.308675,3.976712,-8.297637,-3.692507,5.824867,-6.773564,-5.799990,-2.934322,-2.659623,7.831760,1.612589,2.256128,2.240209,-6.569254,-5.667840,6.770355,6.642799,3.908410,-2.467154,5.931131,-4.849973,-7.587910,-8.261922,-7.224792,-7.386215,7.751141,-2.213236,-8.525811,9.443501,0.686578,1.518728,2.848074,7.891931,-2.370672,4.527320,9.262978,5.206951,-5.197981,-2.491498,-2.220957,-2.197481,8.766257,-8.998039,-9.127660,-7.405509,8.954240,-8.275887,-6.857127,6.094478,7.351571,-3.985304,4.652165,-8.982023,-8.650786,-3.332637,-8.175986,-7.352020,-3.156241,1.880114,8.404475,-5.447232,2.539371,6.256573,9.272824,-9.189852,3.491420,9.924454,-9.339334,-1.177417,0.134442,5.520949,8.100889,9.152174,9.502421,5.316908,-7.684896,7.042380,-2.060025,0.762220,-4.707288,6.257108,6.989359,-2.687491,-2.653379,-3.617054,5.264065,5.879833,9.168211,-3.492381,1.654415,0.607093,-4.392792,9.458263,-3.520572,-6.275854,-9.571816,-3.261212,-6.675640,8.199091,-3.923995,-5.735349,-7.461552,-1.528240,-3.241335,-8.024987,-7.796205,0.798788,-0.118703,-1.963001,-0.388162,9.334618,-9.134301,-0.811778,-2.431734,7.315841,5.233789,5.646329,-4.419199,0.997852,-0.942576], dtype = "float64")#candidate|4099|(540,)|const|float64
var_4100 = relay.var("var_4100", dtype = "float32", shape = (90,))#candidate|4100|(90,)|var|float32
call_4098 = relay.TupleGetItem(func_3943_call(relay.reshape(const_4099.astype('float64'), [9, 5, 12]), relay.reshape(var_4100.astype('float32'), [90,]), ), 3)
call_4101 = relay.TupleGetItem(func_3946_call(relay.reshape(const_4099.astype('float64'), [9, 5, 12]), relay.reshape(var_4100.astype('float32'), [90,]), ), 3)
output = relay.Tuple([call_4094,call_4098,const_4099,var_4100,])
output2 = relay.Tuple([call_4095,call_4101,const_4099,var_4100,])
func_4145 = relay.Function([var_4100,], output)
mod['func_4145'] = func_4145
mod = relay.transform.InferType()(mod)
mutated_mod['func_4145'] = func_4145
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4146 = relay.var("var_4146", dtype = "float32", shape = (90,))#candidate|4146|(90,)|var|float32
func_4145_call = mutated_mod.get_global_var('func_4145')
call_4147 = func_4145_call(var_4146)
output = call_4147
func_4148 = relay.Function([var_4146], output)
mutated_mod['func_4148'] = func_4148
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4164 = relay.var("var_4164", dtype = "float32", shape = (15, 10, 16))#candidate|4164|(15, 10, 16)|var|float32
uop_4165 = relay.tan(var_4164.astype('float32')) # shape=(15, 10, 16)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_4170 = func_2356_call()
call_4171 = func_2356_call()
func_3394_call = mod.get_global_var('func_3394')
func_3396_call = mutated_mod.get_global_var('func_3396')
call_4179 = relay.TupleGetItem(func_3394_call(), 0)
call_4180 = relay.TupleGetItem(func_3396_call(), 0)
bop_4192 = relay.mod(uop_4165.astype('float64'), relay.reshape(var_4164.astype('float64'), relay.shape_of(uop_4165))) # shape=(15, 10, 16)
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
var_4205 = relay.var("var_4205", dtype = "float64", shape = (1716,))#candidate|4205|(1716,)|var|float64
call_4204 = relay.TupleGetItem(func_1978_call(relay.reshape(var_4205.astype('float64'), [1716,])), 0)
call_4206 = relay.TupleGetItem(func_1980_call(relay.reshape(var_4205.astype('float64'), [1716,])), 0)
bop_4217 = relay.minimum(bop_4192.astype('float32'), relay.reshape(var_4164.astype('float32'), relay.shape_of(bop_4192))) # shape=(15, 10, 16)
uop_4231 = relay.log10(bop_4192.astype('float32')) # shape=(15, 10, 16)
uop_4235 = relay.sinh(uop_4231.astype('float32')) # shape=(15, 10, 16)
func_3920_call = mod.get_global_var('func_3920')
func_3923_call = mutated_mod.get_global_var('func_3923')
var_4273 = relay.var("var_4273", dtype = "uint32", shape = ())#candidate|4273|()|var|uint32
call_4272 = relay.TupleGetItem(func_3920_call(relay.reshape(var_4273.astype('uint32'), [])), 1)
call_4274 = relay.TupleGetItem(func_3923_call(relay.reshape(var_4273.astype('uint32'), [])), 1)
func_3485_call = mod.get_global_var('func_3485')
func_3487_call = mutated_mod.get_global_var('func_3487')
call_4282 = relay.TupleGetItem(func_3485_call(), 0)
call_4283 = relay.TupleGetItem(func_3487_call(), 0)
func_2001_call = mod.get_global_var('func_2001')
func_2003_call = mutated_mod.get_global_var('func_2003')
call_4286 = relay.TupleGetItem(func_2001_call(relay.reshape(call_4282.astype('float64'), [6, 10, 5])), 0)
call_4287 = relay.TupleGetItem(func_2003_call(relay.reshape(call_4282.astype('float64'), [6, 10, 5])), 0)
bop_4306 = relay.logical_xor(uop_4231.astype('uint64'), var_4273.astype('uint64')) # shape=(15, 10, 16)
output = relay.Tuple([call_4170,call_4179,call_4204,var_4205,bop_4217,uop_4235,call_4272,call_4282,call_4286,bop_4306,])
output2 = relay.Tuple([call_4171,call_4180,call_4206,var_4205,bop_4217,uop_4235,call_4274,call_4283,call_4287,bop_4306,])
func_4323 = relay.Function([var_4164,var_4205,var_4273,], output)
mod['func_4323'] = func_4323
mod = relay.transform.InferType()(mod)
var_4324 = relay.var("var_4324", dtype = "float32", shape = (15, 10, 16))#candidate|4324|(15, 10, 16)|var|float32
var_4325 = relay.var("var_4325", dtype = "float64", shape = (1716,))#candidate|4325|(1716,)|var|float64
var_4326 = relay.var("var_4326", dtype = "uint32", shape = ())#candidate|4326|()|var|uint32
output = func_4323(var_4324,var_4325,var_4326,)
func_4327 = relay.Function([var_4324,var_4325,var_4326,], output)
mutated_mod['func_4327'] = func_4327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1888_call = mod.get_global_var('func_1888')
func_1890_call = mutated_mod.get_global_var('func_1890')
call_4363 = func_1888_call()
call_4364 = func_1888_call()
output = call_4363
output2 = call_4364
func_4365 = relay.Function([], output)
mod['func_4365'] = func_4365
mod = relay.transform.InferType()(mod)
mutated_mod['func_4365'] = func_4365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4365_call = mutated_mod.get_global_var('func_4365')
call_4366 = func_4365_call()
output = call_4366
func_4367 = relay.Function([], output)
mutated_mod['func_4367'] = func_4367
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4449 = relay.var("var_4449", dtype = "bool", shape = (12, 14, 8))#candidate|4449|(12, 14, 8)|var|bool
const_4450 = relay.const([[[False,False,False,True,True,False,True,True],[False,True,True,True,False,False,False,False],[True,False,False,False,True,False,False,False],[True,False,True,False,True,True,False,True],[True,False,False,False,False,False,True,True],[True,False,False,True,False,True,True,True],[True,True,True,True,True,False,True,False],[False,True,False,True,False,False,True,True],[True,True,True,True,True,False,False,False],[True,True,True,True,False,False,True,True],[True,False,False,True,False,False,True,False],[True,False,False,True,False,True,False,True],[False,True,True,False,True,True,False,False],[False,False,False,False,False,True,False,False]],[[True,False,True,False,False,False,False,True],[False,False,False,True,True,False,False,False],[True,True,False,True,True,False,True,True],[False,True,False,True,False,False,True,False],[False,False,False,True,False,False,False,True],[True,True,False,False,True,False,False,True],[False,False,False,True,True,True,False,True],[True,False,False,True,False,True,True,True],[True,True,False,False,False,False,True,True],[True,True,True,True,True,False,False,True],[False,False,False,True,True,True,True,False],[True,True,False,False,True,True,True,False],[True,True,False,True,True,True,False,True],[False,True,False,False,True,False,True,False]],[[False,False,True,True,True,False,False,False],[False,False,False,True,True,True,True,False],[False,False,True,False,True,True,True,False],[True,True,False,False,True,True,False,True],[True,False,False,False,False,False,True,False],[False,True,True,False,True,True,False,True],[True,False,True,False,True,False,False,False],[True,False,True,False,False,True,True,True],[True,False,False,False,False,True,False,True],[False,False,True,True,True,True,True,False],[True,False,False,True,True,True,True,False],[True,False,True,True,False,False,True,True],[False,True,True,True,False,False,False,False],[False,True,False,True,False,True,True,False]],[[True,True,True,False,False,False,True,False],[True,False,True,True,False,False,False,True],[True,False,False,True,False,False,False,False],[True,False,True,True,True,False,True,False],[True,False,True,False,True,False,False,False],[False,True,True,False,False,True,True,True],[True,True,True,True,True,True,True,False],[True,False,False,False,False,True,False,False],[False,True,False,True,True,False,True,True],[True,False,False,True,True,True,True,True],[True,False,False,False,True,False,True,False],[False,True,False,True,False,False,True,False],[False,True,True,True,True,False,True,False],[False,True,False,False,False,True,True,True]],[[True,True,False,False,True,True,False,False],[False,False,True,False,False,False,True,False],[True,False,False,False,True,True,False,True],[False,False,True,False,True,False,False,False],[False,False,False,True,True,False,True,True],[False,False,True,True,False,False,True,True],[True,True,True,False,False,False,True,False],[False,True,True,False,True,True,False,True],[True,True,True,False,True,False,True,False],[True,False,True,True,True,False,True,False],[False,False,False,False,False,True,True,True],[False,False,True,False,True,True,True,False],[False,False,False,False,True,True,False,False],[True,True,True,False,True,False,False,True]],[[True,False,False,True,False,True,False,False],[True,True,False,False,True,False,False,True],[False,False,True,True,True,True,True,False],[False,True,True,False,True,True,True,False],[False,True,False,False,False,False,False,True],[False,True,True,True,True,True,False,True],[True,False,True,False,True,False,True,False],[True,False,False,True,True,True,True,True],[True,True,True,True,False,False,True,False],[True,False,True,False,False,True,True,True],[True,False,False,True,True,True,True,False],[True,True,True,False,False,True,False,True],[False,True,True,False,True,False,False,False],[False,True,False,False,True,False,False,False]],[[False,False,True,True,True,False,False,False],[True,True,False,False,False,False,True,True],[False,False,True,True,False,False,False,True],[True,False,True,False,False,True,True,True],[True,False,False,False,True,False,False,False],[False,True,False,False,True,False,True,True],[False,True,True,True,True,True,False,False],[True,True,True,False,True,False,True,False],[False,True,True,True,False,True,False,False],[False,False,False,False,False,False,True,True],[True,False,False,False,True,False,False,True],[True,True,True,False,True,False,True,False],[True,False,True,True,True,True,True,False],[False,False,False,False,False,True,True,True]],[[False,True,True,True,True,True,False,True],[True,True,True,False,True,False,False,True],[False,False,False,False,True,False,False,True],[False,False,False,False,True,True,True,True],[True,False,True,False,True,True,True,False],[True,True,True,False,True,True,True,False],[True,False,False,True,False,False,False,False],[False,False,False,True,False,True,True,True],[True,False,True,False,True,True,True,False],[False,False,True,True,True,False,True,True],[False,True,False,False,True,False,False,True],[True,False,True,True,True,False,False,False],[False,True,True,True,False,False,False,False],[False,True,False,True,True,True,False,False]],[[True,False,False,False,True,True,False,False],[True,True,True,True,True,True,True,True],[False,False,False,True,False,False,True,False],[True,True,False,True,True,False,True,False],[True,True,False,False,False,False,False,False],[True,True,True,False,False,False,True,False],[True,False,True,True,False,True,False,False],[False,False,True,True,False,False,True,True],[True,False,True,False,False,True,False,False],[False,True,False,False,True,False,True,False],[False,False,False,False,True,False,False,False],[False,True,True,False,True,True,False,True],[True,True,True,True,True,True,True,True],[False,False,False,True,False,True,False,False]],[[True,False,False,True,False,True,True,False],[False,False,False,False,True,False,True,False],[False,False,False,True,True,True,False,True],[True,False,False,True,True,False,True,True],[False,False,False,False,True,True,False,True],[True,True,True,True,True,False,True,True],[False,True,False,True,True,True,False,False],[True,True,False,True,True,True,False,False],[True,False,False,False,True,True,False,False],[False,True,True,True,False,True,True,False],[False,True,False,True,False,False,False,False],[True,False,True,True,True,True,True,True],[True,True,True,False,False,True,False,False],[True,False,False,True,True,True,True,True]],[[False,True,True,True,False,True,True,True],[True,False,False,False,True,True,True,False],[True,True,False,True,False,False,False,True],[False,False,False,True,True,False,True,True],[True,False,False,True,True,True,True,False],[True,True,False,False,True,False,False,False],[True,False,True,True,True,True,True,True],[True,True,True,False,True,False,False,True],[False,False,False,True,False,True,True,True],[True,True,False,False,True,False,False,False],[True,True,False,False,True,True,True,False],[False,False,True,False,False,True,True,False],[True,True,True,True,True,False,True,False],[False,True,False,True,True,False,False,False]],[[True,False,False,False,True,False,True,True],[False,False,True,True,True,False,True,False],[False,True,False,True,True,True,True,True],[False,True,True,True,True,True,False,False],[True,False,True,False,False,False,True,True],[False,True,False,True,True,True,True,True],[False,True,False,False,False,True,True,False],[False,False,False,True,True,False,False,False],[False,True,False,True,True,False,False,True],[True,False,False,False,True,True,False,False],[True,False,False,True,False,True,False,False],[False,False,False,True,False,False,False,False],[True,False,True,False,False,True,True,True],[True,True,False,True,False,False,True,True]]], dtype = "bool")#candidate|4450|(12, 14, 8)|const|bool
bop_4451 = relay.logical_and(var_4449.astype('bool'), relay.reshape(const_4450.astype('bool'), relay.shape_of(var_4449))) # shape=(12, 14, 8)
func_4082_call = mod.get_global_var('func_4082')
func_4085_call = mutated_mod.get_global_var('func_4085')
const_4455 = relay.const([[6.818352],[-7.036282],[-5.654901],[2.537401],[-9.885262],[-4.126207],[4.161965],[-6.221339],[0.567143],[8.768483],[-1.876190],[2.910799],[-1.055901],[1.327238],[-2.156597],[6.902186],[9.250860],[0.246151],[2.136578],[-7.237561],[7.913134],[6.041229],[2.796277],[7.554438],[-7.572080],[-8.996546],[-1.501343],[-1.113559],[-8.224583],[0.133409],[2.119841],[1.411302],[-6.575584],[-5.118160],[9.559099],[4.018166],[0.974132],[1.366481],[-7.356586],[1.434308],[5.081283],[2.950429],[9.017983],[-3.204708],[-6.710690],[-8.627504],[6.869528],[-6.817544],[-7.818014],[4.149602],[9.143017],[4.661549],[-2.100571],[8.143591],[9.407502],[5.320241],[-9.228243],[-7.672241],[-2.217311],[4.060397],[-4.195634],[7.144779],[0.787720],[8.879065],[-4.315310],[3.670615],[5.546419],[4.012332],[3.696659],[-1.842839],[8.125067],[-5.889478],[0.263260],[-4.631161],[2.072109],[-8.814597],[9.884842],[2.550000],[7.751700],[0.292861],[-6.294001],[2.584574],[7.866058],[0.909865],[3.183821],[1.749718],[9.393045],[-0.580327],[-2.123093],[-9.127727],[-2.976216],[3.722156],[-5.062896],[6.636808],[3.334219],[-8.862811],[4.192663],[7.553395],[-3.837079],[-9.279582],[-3.698908],[-3.561206],[6.161415],[-7.123576],[7.621686],[9.763872],[3.411929],[-2.059567],[-2.391339],[2.375842],[-5.797813],[7.011377],[2.357970],[-5.762041],[8.857739],[6.187786],[-4.909804],[0.368107],[-2.779407],[6.611035],[-9.665266],[-7.371877],[6.789851],[-3.021444],[-9.998932],[4.223246],[6.659923],[-4.314059],[6.957212],[-2.777976],[2.438332],[-2.265313],[8.654815],[4.044342],[-3.013821],[-6.881597],[-4.259637],[-7.483496],[1.238301],[4.664101],[8.168274],[-2.347124],[0.465847],[6.624553],[4.179209],[1.807636],[-7.302026],[-2.297776],[5.221579],[2.407356],[-8.770353],[-1.498500],[-3.761758],[-1.577025],[0.794697],[3.482909],[-2.393118],[3.266285],[3.354461],[-8.347048],[-9.592591],[1.917163],[2.406171],[7.750580],[-5.157835],[-8.871162],[-4.747229],[6.635337],[-0.849809],[-2.657016],[2.176596],[-1.901008],[9.816844],[2.683884],[-6.023143],[1.372195],[1.166663],[2.091907],[-1.906763],[2.013547],[-4.629168],[7.662819],[-8.355600],[4.682419],[-6.978884],[1.450777],[-0.050413],[5.374358],[4.769493],[-9.979648],[-4.283084],[0.208759],[-3.774236],[-2.370893],[5.473000],[9.194415],[-3.349589],[-4.924325],[8.705986],[2.604327],[7.098884],[8.476382],[-9.261608],[1.015026],[4.467803],[3.462904],[9.141280],[8.737048],[-8.846754],[-3.709889],[6.693532],[4.447240],[-1.010333],[4.836357],[9.247097],[0.822910],[3.938966],[-4.866032],[8.616775],[4.755397],[1.000881],[-4.678155],[4.368328],[3.088473],[1.942501],[6.684855],[5.402447],[-1.648079],[-9.782822],[-9.583168],[-4.150039],[-0.787808],[-2.633865],[0.678385],[-5.043654],[4.657490],[-9.513994],[-8.379115],[7.386693],[7.097189],[6.253882],[-8.270184],[4.924809],[-4.509564],[-6.045565],[9.365402],[-0.753120],[-7.754743],[9.857828],[-3.995439],[-1.422796],[6.766232],[5.024792],[8.090553],[9.479870],[-4.409572],[7.528534],[-4.191333],[2.815210],[8.750290],[9.705457],[1.559299],[-2.528463],[-3.741979],[7.285019],[-4.328392],[-4.548960],[-9.448331],[9.872405],[6.429396],[-2.441331],[-2.198701],[-4.299241],[-0.565863],[5.692224],[5.328393],[8.148940],[6.418260],[-1.765296],[1.057933],[-6.875848],[5.068253],[0.255295],[0.474508],[7.198204],[-6.606677],[-9.254021],[-2.433407],[5.317454],[-8.511971],[-4.999753],[7.531896],[-0.563846],[3.968841],[-0.276381],[3.754266],[-6.244439],[-7.058342],[-8.915906],[9.513863]], dtype = "float64")#candidate|4455|(300, 1)|const|float64
call_4454 = relay.TupleGetItem(func_4082_call(relay.reshape(const_4455.astype('float64'), [300,])), 2)
call_4456 = relay.TupleGetItem(func_4085_call(relay.reshape(const_4455.astype('float64'), [300,])), 2)
bop_4460 = relay.power(bop_4451.astype('float32'), relay.reshape(var_4449.astype('float32'), relay.shape_of(bop_4451))) # shape=(12, 14, 8)
var_4469 = relay.var("var_4469", dtype = "bool", shape = (12, 14, 8))#candidate|4469|(12, 14, 8)|var|bool
bop_4470 = relay.maximum(var_4449.astype('int16'), relay.reshape(var_4469.astype('int16'), relay.shape_of(var_4449))) # shape=(12, 14, 8)
func_2665_call = mod.get_global_var('func_2665')
func_2667_call = mutated_mod.get_global_var('func_2667')
var_4475 = relay.var("var_4475", dtype = "float64", shape = (432,))#candidate|4475|(432,)|var|float64
call_4474 = relay.TupleGetItem(func_2665_call(relay.reshape(var_4475.astype('float64'), [432,])), 3)
call_4476 = relay.TupleGetItem(func_2667_call(relay.reshape(var_4475.astype('float64'), [432,])), 3)
output = relay.Tuple([call_4454,const_4455,bop_4460,bop_4470,call_4474,var_4475,])
output2 = relay.Tuple([call_4456,const_4455,bop_4460,bop_4470,call_4476,var_4475,])
func_4482 = relay.Function([var_4449,var_4469,var_4475,], output)
mod['func_4482'] = func_4482
mod = relay.transform.InferType()(mod)
var_4483 = relay.var("var_4483", dtype = "bool", shape = (12, 14, 8))#candidate|4483|(12, 14, 8)|var|bool
var_4484 = relay.var("var_4484", dtype = "bool", shape = (12, 14, 8))#candidate|4484|(12, 14, 8)|var|bool
var_4485 = relay.var("var_4485", dtype = "float64", shape = (432,))#candidate|4485|(432,)|var|float64
output = func_4482(var_4483,var_4484,var_4485,)
func_4486 = relay.Function([var_4483,var_4484,var_4485,], output)
mutated_mod['func_4486'] = func_4486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2332_call = mod.get_global_var('func_2332')
func_2334_call = mutated_mod.get_global_var('func_2334')
call_4524 = relay.TupleGetItem(func_2332_call(), 0)
call_4525 = relay.TupleGetItem(func_2334_call(), 0)
uop_4526 = relay.asinh(call_4524.astype('float64')) # shape=(5, 1, 2)
uop_4528 = relay.asinh(call_4525.astype('float64')) # shape=(5, 1, 2)
bop_4530 = relay.bitwise_and(uop_4526.astype('uint16'), relay.reshape(call_4524.astype('uint16'), relay.shape_of(uop_4526))) # shape=(5, 1, 2)
bop_4533 = relay.bitwise_and(uop_4528.astype('uint16'), relay.reshape(call_4525.astype('uint16'), relay.shape_of(uop_4528))) # shape=(5, 1, 2)
output = relay.Tuple([bop_4530,])
output2 = relay.Tuple([bop_4533,])
func_4535 = relay.Function([], output)
mod['func_4535'] = func_4535
mod = relay.transform.InferType()(mod)
output = func_4535()
func_4536 = relay.Function([], output)
mutated_mod['func_4536'] = func_4536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3394_call = mod.get_global_var('func_3394')
func_3396_call = mutated_mod.get_global_var('func_3396')
call_4557 = relay.TupleGetItem(func_3394_call(), 0)
call_4558 = relay.TupleGetItem(func_3396_call(), 0)
func_2570_call = mod.get_global_var('func_2570')
func_2571_call = mutated_mod.get_global_var('func_2571')
call_4561 = relay.TupleGetItem(func_2570_call(), 2)
call_4562 = relay.TupleGetItem(func_2571_call(), 2)
func_2028_call = mod.get_global_var('func_2028')
func_2030_call = mutated_mod.get_global_var('func_2030')
call_4564 = relay.TupleGetItem(func_2028_call(), 0)
call_4565 = relay.TupleGetItem(func_2030_call(), 0)
func_2306_call = mod.get_global_var('func_2306')
func_2309_call = mutated_mod.get_global_var('func_2309')
const_4579 = relay.const([[-2.947228,-1.055044],[3.717873,8.895739],[-0.506530,-2.941333],[8.086053,-6.109650],[2.471484,-6.621993],[2.469848,-8.930067],[1.316466,-2.056184],[1.222753,4.647096],[3.147905,8.807273],[-3.210295,5.560623]], dtype = "float64")#candidate|4579|(10, 2)|const|float64
call_4578 = relay.TupleGetItem(func_2306_call(relay.reshape(call_4557.astype('float64'), [5, 1, 2]), relay.reshape(const_4579.astype('float64'), [5, 2, 2]), ), 1)
call_4580 = relay.TupleGetItem(func_2309_call(relay.reshape(call_4557.astype('float64'), [5, 1, 2]), relay.reshape(const_4579.astype('float64'), [5, 2, 2]), ), 1)
output = relay.Tuple([call_4557,call_4561,call_4564,call_4578,const_4579,])
output2 = relay.Tuple([call_4558,call_4562,call_4565,call_4580,const_4579,])
func_4588 = relay.Function([], output)
mod['func_4588'] = func_4588
mod = relay.transform.InferType()(mod)
output = func_4588()
func_4589 = relay.Function([], output)
mutated_mod['func_4589'] = func_4589
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4602 = relay.var("var_4602", dtype = "int64", shape = ())#candidate|4602|()|var|int64
const_4603 = relay.const([[[10,8,4,4,7,9,9,-2,-8,3,-2,-6],[-10,6,3,-6,8,1,-4,-5,3,4,-4,3]],[[7,-4,10,6,8,3,-3,-4,-1,-10,10,-9],[-9,-2,-7,-5,-2,7,-8,-1,-6,10,1,10]],[[-1,-10,-8,-3,-2,-2,-2,7,-5,-4,-9,1],[-9,-5,-9,6,-5,-2,-5,-2,9,-10,-10,-5]],[[-3,-7,-5,-8,-3,7,-9,-1,-9,-9,-7,-5],[-4,9,10,-8,2,5,-6,-4,-9,-3,5,-5]],[[7,3,7,-2,1,-5,-5,5,-8,7,-7,-5],[5,5,3,6,-7,6,7,5,9,-10,-4,-2]],[[-7,-8,-1,1,2,5,9,5,-2,-10,-1,6],[8,6,3,2,-8,-4,-5,4,4,-3,3,-9]]], dtype = "int64")#candidate|4603|(6, 2, 12)|const|int64
bop_4604 = relay.bitwise_or(var_4602.astype('int64'), const_4603.astype('int64')) # shape=(6, 2, 12)
func_3054_call = mod.get_global_var('func_3054')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_4607 = relay.TupleGetItem(func_3054_call(), 0)
call_4608 = relay.TupleGetItem(func_3056_call(), 0)
output = relay.Tuple([bop_4604,call_4607,])
output2 = relay.Tuple([bop_4604,call_4608,])
func_4610 = relay.Function([var_4602,], output)
mod['func_4610'] = func_4610
mod = relay.transform.InferType()(mod)
mutated_mod['func_4610'] = func_4610
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4611 = relay.var("var_4611", dtype = "int64", shape = ())#candidate|4611|()|var|int64
func_4610_call = mutated_mod.get_global_var('func_4610')
call_4612 = func_4610_call(var_4611)
output = call_4612
func_4613 = relay.Function([var_4611], output)
mutated_mod['func_4613'] = func_4613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2028_call = mod.get_global_var('func_2028')
func_2030_call = mutated_mod.get_global_var('func_2030')
call_4622 = relay.TupleGetItem(func_2028_call(), 0)
call_4623 = relay.TupleGetItem(func_2030_call(), 0)
func_568_call = mod.get_global_var('func_568')
func_572_call = mutated_mod.get_global_var('func_572')
const_4626 = relay.const(-5, dtype = "uint32")#candidate|4626|()|const|uint32
var_4627 = relay.var("var_4627", dtype = "float32", shape = (2, 396))#candidate|4627|(2, 396)|var|float32
call_4625 = relay.TupleGetItem(func_568_call(relay.reshape(const_4626.astype('uint32'), []), relay.reshape(var_4627.astype('float32'), [792,]), ), 1)
call_4628 = relay.TupleGetItem(func_572_call(relay.reshape(const_4626.astype('uint32'), []), relay.reshape(var_4627.astype('float32'), [792,]), ), 1)
uop_4632 = relay.log(var_4627.astype('float32')) # shape=(2, 396)
bop_4640 = relay.logical_xor(uop_4632.astype('int8'), relay.reshape(call_4625.astype('int8'), relay.shape_of(uop_4632))) # shape=(2, 396)
bop_4643 = relay.logical_xor(uop_4632.astype('int8'), relay.reshape(call_4628.astype('int8'), relay.shape_of(uop_4632))) # shape=(2, 396)
uop_4644 = relay.log10(call_4622.astype('float64')) # shape=(5, 1, 2)
uop_4646 = relay.log10(call_4623.astype('float64')) # shape=(5, 1, 2)
func_326_call = mod.get_global_var('func_326')
func_328_call = mutated_mod.get_global_var('func_328')
call_4648 = relay.TupleGetItem(func_326_call(relay.reshape(var_4627.astype('float32'), [11, 9, 8])), 0)
call_4649 = relay.TupleGetItem(func_328_call(relay.reshape(var_4627.astype('float32'), [11, 9, 8])), 0)
uop_4656 = relay.sqrt(bop_4640.astype('float64')) # shape=(2, 396)
uop_4658 = relay.sqrt(bop_4643.astype('float64')) # shape=(2, 396)
bop_4669 = relay.equal(bop_4640.astype('bool'), relay.reshape(var_4627.astype('bool'), relay.shape_of(bop_4640))) # shape=(2, 396)
bop_4672 = relay.equal(bop_4643.astype('bool'), relay.reshape(var_4627.astype('bool'), relay.shape_of(bop_4643))) # shape=(2, 396)
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
var_4676 = relay.var("var_4676", dtype = "float64", shape = (1716,))#candidate|4676|(1716,)|var|float64
call_4675 = relay.TupleGetItem(func_1978_call(relay.reshape(var_4676.astype('float64'), [1716,])), 0)
call_4677 = relay.TupleGetItem(func_1980_call(relay.reshape(var_4676.astype('float64'), [1716,])), 0)
uop_4679 = relay.log2(uop_4632.astype('float64')) # shape=(2, 396)
func_1888_call = mod.get_global_var('func_1888')
func_1890_call = mutated_mod.get_global_var('func_1890')
call_4690 = func_1888_call()
call_4691 = func_1888_call()
uop_4700 = relay.sigmoid(uop_4632.astype('float64')) # shape=(2, 396)
uop_4702 = relay.tan(uop_4679.astype('float32')) # shape=(2, 396)
func_2306_call = mod.get_global_var('func_2306')
func_2309_call = mutated_mod.get_global_var('func_2309')
const_4706 = relay.const([4.477528,-7.775869,-3.159052,-9.372571,-5.791713,9.903663,9.282766,6.033550,0.189893,0.313682,1.357978,8.903799,-3.806430,-2.838377,2.430567,5.214090,-5.641880,3.976819,-8.512025,-8.420798], dtype = "float64")#candidate|4706|(20,)|const|float64
call_4705 = relay.TupleGetItem(func_2306_call(relay.reshape(call_4675.astype('float64'), [5, 1, 2]), relay.reshape(const_4706.astype('float64'), [5, 2, 2]), ), 2)
call_4707 = relay.TupleGetItem(func_2309_call(relay.reshape(call_4675.astype('float64'), [5, 1, 2]), relay.reshape(const_4706.astype('float64'), [5, 2, 2]), ), 2)
func_826_call = mod.get_global_var('func_826')
func_829_call = mutated_mod.get_global_var('func_829')
const_4709 = relay.const([9.949707,6.832520,5.394367,2.723842,-3.237594,-9.645846,3.812440,0.875694,6.283273,6.063320,-0.146029,3.014033,6.246531,-4.398809,-9.657346,9.703652,-0.366041,-7.799026,-0.970405,6.560927,-9.955998,-0.124241,-8.896010,-9.992981,-5.950676,2.618623,-5.551094,7.881327,1.893030,1.497006,7.867616,4.951301,6.020955,4.842776,6.900110,-3.330157,-4.436044,-7.107900,-2.822250,7.910320,-3.299994,-9.948594,0.928717,-0.170929,8.315599,-5.388385,-7.716094,1.431384,6.597522,6.755947,5.432017,-8.642392,-8.334399,9.828055,7.908686,0.049810,4.187102,8.790743,-5.218719,8.174505,9.518404,-0.311522,2.366431,8.550156,2.101596,-1.728374,0.834202,-7.137175,0.100827,-2.915501,-0.676471,-2.100649,3.026174,6.013248,2.648940,-3.642103,-4.112719,-8.038073,-0.616506,3.752819,-3.703989,-7.050354,-0.735464,7.167413,-3.403151,0.944604,-0.131325,0.347661,8.005697,2.030685], dtype = "float32")#candidate|4709|(90,)|const|float32
call_4708 = relay.TupleGetItem(func_826_call(relay.reshape(const_4709.astype('float32'), [10, 3, 3])), 3)
call_4710 = relay.TupleGetItem(func_829_call(relay.reshape(const_4709.astype('float32'), [10, 3, 3])), 3)
output = relay.Tuple([const_4626,uop_4644,call_4648,uop_4656,bop_4669,call_4675,var_4676,call_4690,uop_4700,uop_4702,call_4705,const_4706,call_4708,const_4709,])
output2 = relay.Tuple([const_4626,uop_4646,call_4649,uop_4658,bop_4672,call_4677,var_4676,call_4691,uop_4700,uop_4702,call_4707,const_4706,call_4710,const_4709,])
func_4711 = relay.Function([var_4627,var_4676,], output)
mod['func_4711'] = func_4711
mod = relay.transform.InferType()(mod)
mutated_mod['func_4711'] = func_4711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4711_call = mutated_mod.get_global_var('func_4711')
var_4713 = relay.var("var_4713", dtype = "float32", shape = (2, 396))#candidate|4713|(2, 396)|var|float32
var_4714 = relay.var("var_4714", dtype = "float64", shape = (1716,))#candidate|4714|(1716,)|var|float64
call_4712 = func_4711_call(var_4713,var_4714,)
output = call_4712
func_4715 = relay.Function([var_4713,var_4714,], output)
mutated_mod['func_4715'] = func_4715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4365_call = mod.get_global_var('func_4365')
func_4367_call = mutated_mod.get_global_var('func_4367')
call_4764 = func_4365_call()
call_4765 = func_4365_call()
func_4711_call = mod.get_global_var('func_4711')
func_4715_call = mutated_mod.get_global_var('func_4715')
const_4767 = relay.const([-6.033808,4.643806,5.330329,-2.414218,-1.003799,-2.027989,1.950179,9.528587,1.013178,9.252393,4.660648,-3.206236,-9.153920,1.469686,8.764705,-5.479595,-9.497706,-1.240210,-0.860216,9.593919,-7.536596,2.239442,8.906759,-2.225193,-9.513576,-1.378022,3.616941,7.475699,3.867256,3.594276,-1.778119,-3.465124,1.932055,-9.929602,2.723769,-5.513786,8.766297,2.498140,7.210900,8.505408,8.259821,3.544086,7.097934,-9.840093,2.655575,5.156467,2.210397,9.833862,-8.272555,7.217742,8.159581,-5.655610,4.229516,-1.944749,4.407532,-6.527453,6.007508,9.211943,-7.261365,9.340184,-1.003573,7.726722,6.695945,-9.661034,-7.048784,9.772708,-2.627327,-8.316492,-1.393654,-3.703756,8.757768,-6.407942,-4.905086,7.416712,-9.458897,5.896688,5.477680,-7.216935,6.428631,-4.921649,-7.612356,1.645315,8.017195,-3.804040,-2.798176,2.529792,0.905930,0.517051,-2.772551,-3.256760,0.126719,8.445783,-3.279748,0.580071,-9.548459,4.783209,-7.694561,4.514718,2.742947,7.523953,-2.515020,6.648333,-0.265743,-9.273061,9.922952,7.101464,-1.265899,4.727695,0.091606,-8.663019,-6.711718,-3.064938,-2.990254,8.997822,-5.573846,-9.894550,3.715540,-9.194035,-5.582712,-5.324416,-5.558142,-7.960029,-8.434099,3.047555,7.021796,-2.846054,-0.901741,-3.286073,-1.742919,-2.379238,-6.872248,-3.249458,-4.088844,0.574279,3.412066,-2.876523,-5.497975,-1.277137,-7.917103,-6.566382,5.255810,6.677059,1.126228,-6.800899,7.648599,-0.980973,8.308643,-7.510863,-7.117161,-9.123643,7.746962,4.565811,-2.337506,2.116183,7.673515,-0.145602,-5.111187,-9.252363,7.827092,1.518310,7.904747,-1.661648,-0.496042,-9.850952,-6.086812,-3.504187,4.717963,2.918803,6.349462,-4.397483,-3.642595,3.962642,4.541194,9.648447,5.033712,1.528944,-6.595798,2.457313,-2.156239,5.797328,1.397381,3.460010,6.502250,-0.391694,3.845756,-8.587749,2.442268,-4.959538,0.219151,0.635750,-5.112662,-9.594225,-8.065897,-4.955897,7.335428,2.154390,0.508473,-4.230477,-8.836272,-4.203008,5.843721,8.787849,-3.751487,7.030083,8.687058,-6.214411,-3.505476,3.823738,1.802291,4.155216,5.634423,8.023089,5.617279,-7.680505,-9.715587,7.668051,3.211655,-1.499925,-5.278325,8.947517,-0.771041,-3.553497,-9.225152,9.683090,6.346320,1.690913,2.079345,6.081462,-8.277549,-6.633953,-1.825879,-3.579471,0.966022,-9.530256,6.521053,2.796096,0.492372,-3.437630,9.502253,6.885221,-4.006508,-7.782448,7.132780,2.772925,9.564041,-2.722314,5.295433,3.300276,5.137083,5.721858,7.642771,-5.106115,-0.827536,2.780320,-2.570959,-4.343149,3.981167,3.241186,-5.763300,-4.057589,-3.902687,-1.369686,7.368827,-8.862016,3.980844,3.425767,6.633608,4.385233,-6.661790,9.599628,-3.642618,-3.222641,-9.535897,-9.918898,-3.504686,-8.883771,-2.922955,-2.292506,-1.702667,-6.904113,-6.923163,4.207928,-5.146464,7.764741,4.545492,6.572268,-1.981978,6.543832,5.502127,-7.616653,-2.895851,8.138206,6.213436,-0.584258,-9.203501,4.197188,0.025886,-5.004050,0.416686,-9.757711,6.792509,-9.349733,2.680889,-9.725773,-0.024575,-7.739205,-7.174233,1.569985,-2.769048,7.088050,-1.417781,9.103709,7.064945,2.752159,-8.960139,3.001010,-5.184454,6.136889,0.999460,-6.354392,-2.409285,-7.917034,-3.120997,-9.784887,-3.048112,-9.015990,-5.991380,-8.793603,1.264806,4.771127,0.984531,1.333157,-5.671653,-2.535773,9.005319,1.534364,6.742999,-3.066493,6.231107,-6.288667,-4.084713,1.573805,6.163299,0.970066,1.528001,-4.323177,4.350670,-0.963357,-8.339876,-3.195788,-0.665986,-3.535204,9.502820,5.609925,2.650557,-9.274822,-7.128125,3.852608,7.658412,8.757378,1.093458,-1.845081,3.193934,-5.889327,7.887810,1.813588,3.714545,0.862079,-0.375609,1.789751,5.795233,-8.251720,6.481389,1.948504,-7.059532,-9.623882,-4.520384,-0.541210,4.309616,2.546386,1.669010,-3.118992,-8.541041,-5.956614,8.022095,0.574853,1.119240,-7.022838,0.693731,-3.807552,-2.297203,9.342173,8.955934,2.452170,-4.457811,6.845683,1.931043,-3.653077,0.325883,0.791543,8.268763,2.474898,-1.293805,1.274809,2.658518,6.617315,-1.856744,-0.479372,-2.315522,0.785529,8.215559,0.831377,-9.882758,-2.172201,-9.330302,-5.320716,-4.228200,-7.539514,-2.847564,-7.821132,5.516846,1.343850,-3.857584,5.114182,6.517793,-4.811663,1.217055,-8.436769,5.041900,-0.671114,-8.454723,3.129311,-9.491006,5.651981,-2.243956,0.224592,9.689733,1.305313,-2.024821,-1.216314,1.133077,-8.453224,-1.868818,2.409144,-0.202449,5.397813,-8.637288,0.654811,2.160655,4.544311,8.977975,5.214183,-7.084642,-1.534117,-5.653264,-9.733060,9.058456,-0.554270,2.299889,-6.405207,2.111759,-1.759288,-8.665821,4.687066,-9.211620,9.983246,5.857461,-1.811706,-0.650812,-5.153875,-1.029404,-8.235388,-7.665864,6.435921,-8.459207,2.502906,-9.966663,-5.585748,9.492047,-4.422208,-2.804264,9.519567,-2.171085,3.670698,9.418134,4.001877,6.734532,5.338494,9.117739,9.226083,-7.245482,8.696337,5.147753,-0.630615,6.578327,-4.119708,-3.709109,4.716807,-3.516199,4.761390,3.061346,9.329316,1.682303,-8.228441,8.042650,-1.212568,-8.788701,-2.972622,5.510034,-4.053756,0.769734,4.227213,7.161752,7.916268,2.737816,4.869798,5.606391,1.369548,7.002468,1.431969,-9.315883,0.531717,-6.021930,-5.257771,-4.712797,-6.400006,6.170767,5.330709,8.012698,-7.280193,-5.591487,9.244956,-0.774536,-6.381906,-5.696331,0.768918,5.329597,0.333599,-0.575273,-7.679079,-5.076282,2.422570,-5.702195,-3.126500,7.864316,-1.517841,-0.910100,5.965926,4.268952,5.797285,-2.670674,-2.339890,5.979498,4.453231,8.838441,-8.108487,-1.620565,9.012072,-2.064565,-6.557075,5.079363,1.924842,-2.377841,-6.825680,-1.069095,3.679919,-6.192273,3.943730,6.395898,-7.713207,-5.735535,0.765493,-3.444556,3.058471,-7.065801,-7.303779,-2.469400,-6.123139,-3.852839,-4.671349,-1.864148,0.398002,1.725013,-3.898208,8.478319,5.142964,3.389187,7.959024,-5.444555,-9.868713,-9.736459,-3.219790,7.631180,-6.479273,3.048797,-6.772196,-6.019524,8.777612,-7.761981,1.857551,-1.551842,0.741763,5.123256,1.395448,6.507621,-1.411743,-8.258440,6.442688,4.089223,4.475179,-7.502633,-9.041209,-7.637932,4.200320,5.857700,-6.673656,8.501070,4.576222,-6.859083,-6.335649,8.597661,-2.739664,8.439712,3.947974,2.604364,-2.845564,-2.650361,-0.002240,-7.644975,-9.004050,-1.174155,7.316731,-2.452954,-9.946185,8.809814,0.286575,-9.449211,-4.298539,3.153237,-1.784074,-1.568497,-0.815325,-5.490269,6.255042,-1.449028,-7.390968,1.841232,4.654876,2.755149,-1.268347,-6.977528,1.311753,5.828292,9.678207,9.582281,4.141103,-1.025603,-1.240477,1.464534,5.871888,9.165888,-0.817878,6.149877,6.679267,-0.868523,8.060575,2.812199,1.003338,-1.361584,4.847807,-9.754060,0.506261,-1.922685,7.750178,-8.718942,-6.657083,3.634085,-5.185718,-4.675335,5.729315,1.762910,6.084850,3.557845,-6.159335,5.663587,4.784983,-3.438091,-7.985455,-2.559122,-0.990601,-7.295050,5.200684,-5.634129,-4.560262,7.727954,2.170656,-2.792768,5.946379,3.338886,0.964904,3.524444,-8.559440,-9.495810,-1.236778,6.456841,0.878941,8.627632,3.853011,-9.858127,-4.490371,2.186029,-5.544838,0.341914,8.072873,6.695523,2.271628,6.895335,2.996145,9.189947,-4.764835,-2.696141,-2.116790,-4.401811,9.488555,-2.271629,-4.992984,9.555740,3.345132,-8.124501,0.941403,-4.670115,-3.972671,3.677983,2.786868,-9.194256,8.338647,8.689438,-3.797396,8.136187,-0.606188,-1.783627,0.499511,6.882233,-8.173559,5.967911,-8.743370,-2.880056,2.022620,-0.327896,-7.337465,-4.081681,3.312575,-1.314806,-5.670741,-6.779484,6.172347,5.638234,-2.865521,9.265793,7.392874,6.744777,-2.922904,-8.497227,3.407099,-7.721231,0.905659,4.155672,-2.119762,2.663702,4.747761,5.085726,-9.169966,2.699994,-0.774438,2.883664,3.948531,4.151626,-6.474196,5.308214,-2.199335,-3.858967,-2.792564,-6.257633,7.017706,1.280304,7.807086,6.127135,-8.910460,1.456523,8.827027,-3.882022,0.989165], dtype = "float32")#candidate|4767|(792,)|const|float32
const_4768 = relay.const([1.940483,-9.339427,-9.746456,3.585537,-7.681526,-7.581264,1.040020,-5.728086,4.253164,8.742524,9.549984,0.152500,7.377490,7.075300,-7.837630,8.541030,-8.417136,0.361978,-3.242241,-3.609617,8.087544,5.474144,-4.278183,8.008883,-2.550038,-4.573001,-3.661241,1.307169,-0.191726,-8.607997,5.426333,-0.405186,9.971878,-5.318741,-4.729732,-7.137513,5.878345,-5.792344,-9.981018,9.113908,-6.698805,-2.591381,4.688316,-5.300258,8.368206,5.981705,-5.073142,-6.916364,4.749867,-2.777432,3.393548,-0.576306,-8.539997,6.494331,-6.224389,7.729784,-9.117848,6.671656,1.321332,-3.747572,-6.928734,8.789413,6.946773,9.619562,9.283900,6.157631,-9.573352,6.698907,-0.179682,6.658869,-1.760109,-6.176995,7.846145,-0.212534,0.974860,8.645735,-1.967461,8.110149,-4.820818,7.366768,-0.541067,0.294138,-0.557563,3.350997,7.582413,1.068293,4.520861,-3.196851,-3.961710,2.722971,9.771992,7.147909,9.827454,-8.525055,2.185748,4.633012,-3.308598,2.501375,-6.202487,5.342234,5.778249,1.215760,-4.627503,2.350890,-1.852577,6.969084,9.124670,-2.089423,1.081642,4.311729,-2.134661,-9.063654,0.526593,3.287210,-2.691952,8.929698,7.448599,-4.466025,-3.254335,-4.991384,-6.955654,3.335580,6.867925,-9.462351,-1.902044,3.992087,3.765169,4.959890,0.685806,-3.959162,2.351794,-6.718153,-3.159240,5.261561,-5.217969,7.084044,1.304206,8.706181,-7.614319,3.100884,3.498305,6.147560,-5.361851,5.540411,2.129229,4.384963,4.386599,-6.674869,-0.962797,-4.977280,0.026127,2.297268,-3.903078,1.767669,-5.984431,1.528575,-2.679606,-2.619425,7.036535,-3.984370,0.430918,-5.601822,2.733050,-6.276064,-0.922400,4.301927,7.103761,-6.622954,3.826596,-3.191369,-9.411344,1.484648,1.369178,3.949543,1.240596,0.291762,5.359376,3.114595,-0.814098,-0.105158,-6.150042,5.651970,-3.331840,-1.998753,4.053934,2.185424,-6.384007,-6.864066,1.767337,6.761464,-1.552837,7.513210,-2.372751,-0.707314,5.084479,2.917647,-0.891990,1.555982,-4.693854,-8.897735,-4.987911,6.641172,-6.774711,-8.727637,2.409923,-0.409390,1.764508,2.220496,-8.893751,-1.848574,-2.297199,-7.612325,-5.616077,2.000018,3.818222,6.638177,0.454854,-7.825804,-4.658451,5.049101,-3.897061,6.193543,-1.653356,7.001550,7.696933,-3.173636,8.147610,-1.572761,-3.470975,-2.614248,-3.831074,8.467675,-9.851558,2.429974,6.949240,-9.154839,4.796680,3.292233,-7.304331,-9.588978,-6.797349,2.534570,6.094575,-3.854633,6.952310,5.339330,-1.477826,-4.172850,2.191145,1.380881,-8.477758,-1.759473,-8.067165,0.354084,2.773682,-3.192431,-2.597302,3.399922,8.668928,3.940402,2.920054,-8.770369,-0.583284,-5.644268,3.529086,-6.384356,-8.807364,8.966553,-5.302960,5.692361,-3.425842,2.398810,-1.042711,5.806894,-9.772858,-4.280691,5.021926,4.135243,8.721640,2.923106,-2.260021,1.377362,1.745750,6.031387,6.880643,1.971272,-2.236401,9.677288,9.540896,-5.948559,9.236549,3.228429,-4.150936,-7.857073,5.628558,-1.670207,1.673037,-6.852209,-1.965036,-2.059306,-9.497920,7.502390,7.803269,6.016057,4.629090,-5.929323,7.905368,-5.172933,6.456533,9.141673,-2.623490,-9.793418,1.728630,-6.744358,-4.920834,-6.598862,-8.992280,8.817196,-1.681532,1.606490,-1.330778,-2.156612,1.641767,8.433622,-2.669449,8.397902,-6.306070,-8.699800,-3.715275,3.376089,-2.040921,-0.107686,-7.037463,-1.165974,-8.583560,-4.334320,8.819159,-8.424286,0.306551,0.366338,6.889792,0.241947,-5.016671,2.575749,-0.651635,5.245508,-6.759292,-9.486010,3.373574,2.175454,-0.882546,5.455999,6.419389,-4.324111,8.828668,-5.468701,1.595152,7.474396,8.042597,-8.152683,2.868569,-5.192490,9.214017,-3.948021,4.777207,9.670427,-0.101928,-2.016591,-6.026981,-3.173041,-7.997277,-5.211871,-5.961486,-1.391428,3.385489,-9.024132,-2.664560,-0.498480,5.893153,9.061699,9.998390,-4.502688,4.046863,4.702643,6.330776,5.480816,-5.295646,7.829268,4.363433,-0.786986,0.378586,-0.032943,-5.319376,6.484769,8.148616,-2.297808,3.896970,-1.678515,1.266366,3.182357,-0.407060,9.859041,-8.654080,9.567927,-4.108879,-7.886303,-8.170433,8.478237,-2.506635,-4.257503,1.686609,-2.949464,1.962064,1.105314,-8.631045,-4.174588,-8.707337,4.068461,-6.019885,-8.035788,-8.546633,-1.292308,7.983507,9.303561,8.569866,-6.600005,7.225938,6.605419,4.560925,9.347797,6.401600,-9.970864,3.773428,5.418686,3.507497,-1.442786,-0.736963,-7.916074,9.644874,5.844684,-7.908411,2.926429,-8.875123,-6.599432,-0.906371,6.775245,5.068338,1.299264,2.359374,0.006849,-7.099479,4.034379,-2.667564,4.529065,7.193431,-5.601092,-8.905377,0.813230,5.753613,-7.772507,-6.067943,4.274298,-6.370477,-3.285249,0.993495,-6.215187,-4.296950,5.296311,1.551455,-4.341960,7.357126,-3.664965,-5.611113,1.468676,-4.981397,4.716062,5.078300,-9.184154,6.523810,-9.471222,-9.131825,0.342432,-1.470046,-7.656132,7.481558,-7.867905,3.969257,-9.515456,8.391828,3.088391,2.485108,-3.093737,-8.541106,-8.181002,4.142523,-1.538516,9.397213,-7.770165,-0.259987,-3.534562,0.501515,1.562819,3.035157,9.967516,9.007337,-0.155417,5.622501,2.796751,-3.822653,-0.152181,-6.620947,6.236203,-5.959531,0.665599,-8.591393,-8.544406,8.302326,5.717407,7.712913,2.962050,6.349564,4.115015,-4.867861,-3.539342,3.386708,-2.307893,-1.426422,2.507828,-8.249101,5.522745,-6.345446,-6.268642,8.833544,5.276353,-7.513472,3.733235,-2.652852,6.967585,-4.956067,0.758160,-0.065504,0.615112,-0.593989,4.524640,-9.410820,7.924795,-0.876068,-2.119647,0.816625,-6.643989,-0.857782,-2.334775,-0.981020,6.761113,6.265758,-2.677225,-5.675821,-3.418817,8.331869,4.710343,1.739541,-3.509917,8.767387,6.839890,-4.404368,-0.048601,-3.452434,-2.373316,-8.151034,7.871891,-7.077847,7.489153,5.460515,8.120853,7.186671,-5.495388,-6.423554,-1.760286,8.085304,-2.120093,4.606739,-7.102684,7.105321,7.784026,-3.539386,-3.020378,-8.739295,-3.393067,8.833139,-7.312805,-8.587972,6.801833,-4.391659,-0.603213,-1.028418,4.584990,-4.381284,7.067148,-5.737531,2.964981,3.999446,-3.059881,-5.739258,7.097668,-6.279258,-9.093884,3.799421,2.318772,-1.637481,9.058507,0.506931,-0.477075,0.926887,3.392009,-1.987797,-5.204470,-0.819185,-9.167608,1.642379,3.477413,0.913190,5.878736,1.336880,-6.424779,-5.385506,-4.049112,4.177616,0.866634,-3.662037,-5.184871,-3.971404,-9.979687,1.949795,4.470145,2.721215,1.986890,-6.762891,7.359852,5.418957,8.311516,9.151592,7.823223,9.925688,8.358675,-2.013101,-5.930287,6.637993,2.828671,9.718913,1.168906,2.357261,-5.747282,9.156905,-9.425472,6.503607,7.155919,9.854539,1.947268,1.393603,7.010625,9.448801,-5.482500,-7.562161,8.720429,-8.248935,-5.582194,8.620555,-5.062443,-2.669895,-2.219236,-1.492713,9.800082,-1.333346,-7.637386,8.709761,9.658756,-6.240167,7.304821,-9.997939,-9.774885,-9.133177,-5.924371,9.480651,-0.287461,2.206911,-0.753617,-3.608964,-8.382824,-6.574232,7.475365,-8.754391,-8.716370,-0.900726,3.187412,2.367174,-3.667808,1.152175,0.127017,4.122915,-3.076383,-8.255259,-9.235949,-8.154731,-1.101024,-3.491238,9.094762,-9.317038,9.716167,4.553954,4.069712,-2.866487,-0.481481,2.442362,7.513784,-3.502582,5.636399,-2.787101,0.015873,-6.407261,6.257218,1.362985,5.711866,8.944730,4.365340,-1.544213,3.802542,-2.973803,-6.010563,5.949845,-8.834871,2.797140,6.357901,4.370130,7.251155,-0.990948,-3.131303,0.601820,8.936629,-6.912155,5.547782,-6.277933,-2.742646,7.522546,-7.041367,-4.180849,-7.198284,-3.970149,7.888030,-6.239826,-4.697922,1.347450,6.691979,-4.544819,6.889691,0.601054,5.808783,5.824289,-5.462947,-2.727178,-2.209529,2.825593,7.152417,-0.133152,6.530903,1.576142,9.574520,1.497416,8.802991,9.991498,-1.648381,2.239484,-0.812913,2.303346,3.790928,2.196705,-0.914494,-0.111556,0.128809,-7.441129,-2.040392,-1.908583,5.410726,-3.824448,9.829418,6.124158,-0.896820,-5.542365,-1.536241,3.741751,4.631714,8.147082,6.625421,5.636275,-6.068423,5.738129,6.888421,-8.238875,0.073671,7.603042,-3.268767,6.779819,-3.636877,-6.745566,9.268848,-9.661589,-3.198511,2.262553,-5.315659,-6.297984,-3.387823,8.521881,7.969475,-8.007991,-0.504708,-7.441343,6.002937,6.805112,9.934730,-0.740509,7.899289,5.288823,-4.566936,6.017760,-2.719622,6.849447,6.546840,-0.615656,-9.471565,-0.584970,6.503919,4.931918,-8.264692,-1.294362,-8.225271,-4.063439,1.978355,-0.417010,-0.017225,-8.517289,6.980574,-7.978079,-1.314479,-9.400366,0.279490,9.375391,9.109140,6.354931,0.340857,8.264282,-7.698788,0.399206,3.469572,7.067238,8.861285,-7.123887,5.466532,-0.905258,-5.009086,-4.756302,0.550176,-6.953340,3.358148,-7.081780,9.962503,-7.039615,4.342204,9.275016,8.850229,9.877471,0.751262,-9.648805,-1.604635,-1.662315,8.097889,-9.013620,4.026329,0.568774,0.620802,1.619954,9.083665,-6.145816,-3.788605,2.383438,2.183543,-3.325499,8.358766,8.975269,6.198241,-2.175964,7.142224,7.136798,3.167522,5.382154,-4.958807,0.155991,-9.474422,4.383003,3.588648,9.160278,5.590400,1.818614,-0.028282,-2.857121,9.516765,-8.050591,5.484169,0.215981,-4.660315,0.228390,0.321697,-8.258052,1.245723,-3.562607,-3.450071,0.635683,-5.714794,-5.976213,2.479085,-3.373822,6.077514,0.019593,8.199615,0.556758,7.075562,-6.422030,5.759350,4.868474,-6.869170,-3.134252,1.866091,-9.444710,-2.304556,-8.310301,9.760517,-8.178933,5.067045,-2.178691,-4.159313,-6.343296,-9.930099,4.660444,5.673486,-7.810364,-0.578835,-1.100585,-6.758231,4.300139,-7.657728,7.453534,5.543845,-8.285623,2.552335,0.831226,9.770866,-2.808364,-8.443628,3.660543,-1.173553,-6.693325,-6.865172,-9.185119,6.728741,-8.938631,7.099873,-3.127584,6.689502,4.880035,2.291557,7.215697,-9.792210,-9.741767,2.195335,-3.265969,-4.971216,-3.967177,5.768262,6.227355,0.005678,-5.027706,2.355061,9.034482,-5.343550,-0.193172,9.310973,-4.895751,8.777337,-3.997948,-5.930811,-2.689451,4.088220,-5.878208,0.203189,-4.263710,8.416696,1.260025,4.909726,9.543612,1.761596,5.587402,8.202181,-8.885163,-5.465879,4.502443,7.598507,9.242012,9.195932,5.647792,-1.080343,9.414862,5.882625,-6.309287,5.935808,-6.591371,7.785689,3.819807,7.159187,9.805421,-3.828067,-5.610053,-9.744736,0.454127,5.040672,-9.632663,-4.710456,6.051413,-0.351756,-8.209944,-9.275512,-1.243202,-7.371164,-3.344541,5.602698,7.060153,7.662108,7.935094,-8.609533,9.585460,-5.726434,3.916013,5.369980,-8.189491,-1.283062,6.461097,1.155572,7.561094,6.630071,7.588661,7.677946,-1.745600,-2.048465,1.130782,-2.343546,6.336004,-0.472515,4.215889,1.183869,-4.665930,-8.142275,-5.521894,3.267399,8.665984,-7.788939,-1.923240,-7.612154,-8.082680,-9.164680,6.245978,-6.505681,9.106243,4.978619,-7.069033,-8.667209,-7.752773,-4.334201,-0.392991,-6.301958,-3.057556,-0.681387,4.643139,7.597767,-5.916871,2.161344,2.081701,-0.640066,-2.593334,6.172735,-8.687412,9.722990,2.349823,-8.283233,-2.862114,7.967127,8.321055,6.028525,-5.247708,-7.584132,-2.589296,-9.564688,7.469066,1.194053,-8.819192,-6.807683,-5.546035,-8.072740,2.386082,-5.803472,7.931720,-6.270391,1.315378,6.717511,-3.552865,-0.148005,7.928075,-2.663066,6.850556,2.262399,4.520267,0.723287,9.018859,5.847404,-5.883164,-2.051348,0.281723,-3.824323,-9.883571,4.528912,6.696586,-5.731448,-2.400705,6.365367,-7.534869,-9.332092,-5.980139,2.344937,7.866916,-7.765126,-3.072929,7.179587,9.525277,7.378936,-7.128184,-3.988434,-1.560725,-5.778021,-5.684693,3.422218,-7.807847,-5.300640,3.014856,5.651044,-0.489662,-6.465422,-9.660949,-0.387914,3.090055,-5.087833,-4.761977,6.577885,0.268430,-8.434836,5.966002,-3.252666,9.286432,-7.285219,-6.947726,3.499899,9.790708,-7.748440,6.715377,3.753402,-7.464817,-8.720824,-3.969834,9.806814,-9.983722,8.286309,2.151299,8.216308,-0.832745,6.388671,1.860375,1.661848,-4.010265,3.660659,3.380320,-4.361738,-0.497269,-8.250326,-1.060618,-2.646433,4.895655,-9.167755,4.384818,0.323827,9.715463,-6.566780,9.457389,9.190894,1.359089,-0.324500,3.585300,-6.018517,8.244999,4.121285,3.082298,-6.947047,4.775153,7.996940,3.275354,6.149397,-5.096163,9.121213,1.142366,6.506066,0.529777,3.480285,6.530288,-2.571638,3.480083,-3.158485,0.742168,7.161515,-3.431611,4.929322,-0.358785,-2.267732,0.342453,-6.057134,0.223508,1.367669,4.937376,8.081518,4.599347,-8.964788,8.073506,1.773455,5.947936,-6.951458,3.987375,2.003624,-2.126064,-2.961054,-1.652120,-7.320615,0.793640,-0.812945,9.361973,7.564020,-5.391182,6.634813,-0.867033,-4.430345,3.257018,5.927091,4.487055,-5.716249,4.224288,7.397441,-6.533791,2.684511,2.371461,-7.082557,8.526913,2.923297,4.903386,-5.610972,3.999813,-3.153967,1.921890,-2.575947,-4.619983,-4.478463,9.154814,7.106500,5.052759,9.016525,5.279208,1.967451,7.631436,-7.224030,8.593232,8.986729,1.350634,-4.370160,1.023722,8.533265,2.274516,3.063835,0.952222,-6.121097,7.653005,-9.497030,-6.268099,-5.258629,-2.794304,-7.394102,0.795427,2.887892,8.354840,7.233997,-3.553224,8.361202,-3.606437,-7.986600,2.523574,-3.524371,9.250188,9.312647,8.991351,5.920761,-0.966998,9.777235,3.883637,0.478470,-5.754528,-8.241347,3.573718,3.268368,-9.146959,-4.549726,-9.157453,2.078891,4.069339,9.270003,-3.288361,-6.518596,9.172995,-7.744764,-3.582899,0.292599,-8.187627,7.622112,2.740712,9.873456,2.144804,-2.828557,-4.690113,4.392365,-9.650161,-0.651650,9.826039,-8.998437,9.309839,-7.117376,-6.257757,-5.145861,7.635182,-7.839654,-4.144988,-5.478954,2.852541,-2.360252,-8.465127,9.029420,-5.259267,0.419633,8.989780,-7.032314,-5.868459,-5.717218,0.324153,4.562932,6.778723,9.049448,0.697635,4.730423,-7.546561,1.632624,8.510604,-2.281144,-1.161722,2.331228,4.426163,-9.330704,-0.344143,-0.959278,-9.688561,-8.574878,7.788466,1.977549,-5.320377,-4.347456,-2.838003,7.158092,-7.451817,-8.177718,-8.881514,-4.376241,4.253744,6.863560,-3.769592,6.303728,-7.218343,-3.813664,-9.804118,-1.892162,-0.549688,9.844375,-3.509541,-3.377690,-3.090284,-9.020037,-5.884994,-3.120837,5.128626,-9.093131,9.373841,-8.708725,6.033891,-4.840355,6.049368,-4.443087,3.686925,-1.620178,7.412836,-8.503494,4.753207,-3.458881,-5.082364,-1.332010,-2.841574,6.449213,-5.839017,3.252726,-6.580041,2.874171,6.475496,7.248077,-6.258672,-3.661862,-3.230031,9.927069,6.760334,8.825498,5.979943,-3.826128,-1.772464,0.058230,0.512933,8.754058,-2.023394,0.519497,-3.604401,-8.190235,8.495962,-8.287739,-9.144616,1.613339,3.729294,1.097167,-7.919839,9.810454,2.404852,-5.096643,1.830009,-5.104799,-6.030252,2.873106,-5.728367,1.465409,3.941254,8.682504,-9.287793,5.069308,2.803841,-9.602024,-8.313552,8.452508,-1.574140,4.839167,2.525939,-8.349190,5.552424,-2.985313,7.281849,5.824022,-2.218143,-7.091308,-6.500656,-3.371364,-1.269448,8.880155,-9.889252,-9.305984,-6.842351,5.396786,0.120288,-4.846714,1.216187,-1.904046,-0.355136,6.188024,-2.336252,3.124770,-9.924932,4.402568,-8.540629,0.028840,8.993252,-6.472021,5.601504,1.594364,1.506944,-2.990309,-1.391805,8.785156,-7.012221,6.350849,2.041682,9.798137,7.336225,-9.376971,-5.114212,-6.005117,-7.675663,7.398475,-0.864369,-7.301852,-4.399185,3.985967,-5.208192,-5.471964,4.413339,2.533528,-9.119398,-5.038003,3.991879,-2.936494,8.767511,3.657811,2.369717,7.411024,3.126867,8.973216,-6.942318,6.625950,6.705668,-8.279261,4.107174,2.786029,-3.413952,8.191621,8.660136,8.006549,0.834971,-8.903653,-1.980615,-7.757449,1.123508,4.477103,-7.985868,-8.887770,-8.277746,0.343783,3.363106,-4.288406,-5.203495,3.635817,2.432693,-3.252655,-9.072000,3.536526,0.200599,-8.447972,7.797584,-5.186873,-3.119208,4.512317,8.653273,5.567888,-9.303182,9.248729,2.361299,-8.848580,6.053207,5.639641,6.571747,-0.587841,2.772882,1.243708,2.280698,-8.668132,1.462139,-4.728948,-5.962945,4.786070,3.974480,-8.676045,2.854932,0.247670,2.509211,-1.405988,4.068887,5.478655,-6.319098,9.929819,0.444028,5.662331,-5.728378,7.493732,4.403298,6.876935,4.095155,-0.471615,-9.642430,-9.034774,-0.191751,-0.766941,8.277346,-0.521436,-7.474913,3.967809,-9.184009,-7.437458,5.879410,7.389037,-9.334566,5.270719,-6.047304,0.739658,-1.522137,6.085171,-0.536094,-9.429901,3.603056,7.261266,5.758701,6.225244,-2.393533,-1.841671,-5.594193,-3.272515,-1.807813,-9.856028,1.139167,5.819160,3.280385,5.030973,-4.035879,-1.531672,-1.245864,8.557837,-3.288092,6.770334,2.280241,-0.954941,-4.228082,-1.606800,6.005842,6.191528,-4.816495,-0.896887,5.384542,-7.173775,3.209504,-6.127769,-7.272804,6.319681,-9.541458,1.670915,-3.100442,3.381057,2.398874,4.462933,7.927366,1.431352,6.519602,4.251290,3.230254,-4.152189,-0.886333,6.556539,5.570501,-7.926390,3.599157,3.377203,9.523608,-2.075716,-4.314382,3.633395,3.809412,-2.732772,-2.501685,7.408411,5.126947,9.784963,-7.050215,-3.367554,7.091092,-0.555841,9.638970,4.136688,-7.496307,3.322181,1.849042,-3.792854,6.816742,-0.812586,3.303212,-0.532502,9.817035,-6.863015,-9.280459,8.597313,9.920634,-5.288200,7.049669,-3.243726,-3.329575,9.740160,-7.024867,-1.831118,-0.075211,-7.032897,-9.424371,-8.724286], dtype = "float64")#candidate|4768|(1716,)|const|float64
call_4766 = relay.TupleGetItem(func_4711_call(relay.reshape(const_4767.astype('float32'), [2, 396]), relay.reshape(const_4768.astype('float64'), [1716,]), ), 12)
call_4769 = relay.TupleGetItem(func_4715_call(relay.reshape(const_4767.astype('float32'), [2, 396]), relay.reshape(const_4768.astype('float64'), [1716,]), ), 12)
func_4145_call = mod.get_global_var('func_4145')
func_4148_call = mutated_mod.get_global_var('func_4148')
const_4776 = relay.const([6.527808,-5.166087,-3.558446,-0.195429,-2.512820,-1.165072,-8.240897,3.213389,8.019225,6.175229,9.069312,-7.076029,-3.429321,-4.197669,1.802385,-1.796447,-1.286870,-6.953477,5.396278,-4.292351,0.255905,8.120566,-5.112912,7.731118,9.478874,0.056508,-6.669934,5.080624,-3.563387,7.775026,8.241126,2.612829,-6.472944,-9.277197,-2.925694,1.214687,0.935594,6.711703,-3.877089,-6.680576,7.666519,-7.686229,2.152954,-0.335529,-5.137766,-7.446691,6.965281,2.525493,1.763595,7.609826,-6.430419,9.775811,-4.510348,9.676056,3.641994,-2.242910,8.974984,-4.766977,-3.100828,3.742645,-2.957327,7.414054,2.987198,-6.217452,-0.646762,-9.669788,-5.017367,9.951579,-3.614327,4.970878,-5.134015,2.412488,7.929997,-5.084597,-0.638267,-4.405887,4.773046,7.118417,-2.645486,2.493029,5.264391,6.278966,9.797629,-7.361668,5.620357,6.300778,6.139784,-3.458092,1.518153,7.296720], dtype = "float32")#candidate|4776|(90,)|const|float32
call_4775 = relay.TupleGetItem(func_4145_call(relay.reshape(const_4776.astype('float32'), [90,])), 1)
call_4777 = relay.TupleGetItem(func_4148_call(relay.reshape(const_4776.astype('float32'), [90,])), 1)
func_4610_call = mod.get_global_var('func_4610')
func_4613_call = mutated_mod.get_global_var('func_4613')
const_4782 = relay.const(-8, dtype = "int64")#candidate|4782|()|const|int64
call_4781 = relay.TupleGetItem(func_4610_call(relay.reshape(const_4782.astype('int64'), [])), 1)
call_4783 = relay.TupleGetItem(func_4613_call(relay.reshape(const_4782.astype('int64'), [])), 1)
func_1437_call = mod.get_global_var('func_1437')
func_1439_call = mutated_mod.get_global_var('func_1439')
call_4786 = func_1437_call(relay.reshape(const_4768.astype('float64'), [12, 11, 13]))
call_4787 = func_1437_call(relay.reshape(const_4768.astype('float64'), [12, 11, 13]))
output = relay.Tuple([call_4764,call_4766,const_4767,const_4768,call_4775,const_4776,call_4781,const_4782,call_4786,])
output2 = relay.Tuple([call_4765,call_4769,const_4767,const_4768,call_4777,const_4776,call_4783,const_4782,call_4787,])
func_4789 = relay.Function([], output)
mod['func_4789'] = func_4789
mod = relay.transform.InferType()(mod)
mutated_mod['func_4789'] = func_4789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4789_call = mutated_mod.get_global_var('func_4789')
call_4790 = func_4789_call()
output = call_4790
func_4791 = relay.Function([], output)
mutated_mod['func_4791'] = func_4791
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4880 = relay.var("var_4880", dtype = "int8", shape = (9, 3, 4))#candidate|4880|(9, 3, 4)|var|int8
var_4881 = relay.var("var_4881", dtype = "int8", shape = (9, 3, 4))#candidate|4881|(9, 3, 4)|var|int8
bop_4882 = relay.not_equal(var_4880.astype('bool'), relay.reshape(var_4881.astype('bool'), relay.shape_of(var_4880))) # shape=(9, 3, 4)
output = relay.Tuple([bop_4882,])
output2 = relay.Tuple([bop_4882,])
func_4890 = relay.Function([var_4880,var_4881,], output)
mod['func_4890'] = func_4890
mod = relay.transform.InferType()(mod)
mutated_mod['func_4890'] = func_4890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4890_call = mutated_mod.get_global_var('func_4890')
var_4892 = relay.var("var_4892", dtype = "int8", shape = (9, 3, 4))#candidate|4892|(9, 3, 4)|var|int8
var_4893 = relay.var("var_4893", dtype = "int8", shape = (9, 3, 4))#candidate|4893|(9, 3, 4)|var|int8
call_4891 = func_4890_call(var_4892,var_4893,)
output = call_4891
func_4894 = relay.Function([var_4892,var_4893,], output)
mutated_mod['func_4894'] = func_4894
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4919 = relay.var("var_4919", dtype = "float64", shape = (2, 13, 9))#candidate|4919|(2, 13, 9)|var|float64
uop_4920 = relay.exp(var_4919.astype('float64')) # shape=(2, 13, 9)
output = uop_4920
output2 = uop_4920
func_4927 = relay.Function([var_4919,], output)
mod['func_4927'] = func_4927
mod = relay.transform.InferType()(mod)
mutated_mod['func_4927'] = func_4927
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4928 = relay.var("var_4928", dtype = "float64", shape = (2, 13, 9))#candidate|4928|(2, 13, 9)|var|float64
func_4927_call = mutated_mod.get_global_var('func_4927')
call_4929 = func_4927_call(var_4928)
output = call_4929
func_4930 = relay.Function([var_4928], output)
mutated_mod['func_4930'] = func_4930
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4937 = relay.const([[[-9,-4,4,-1,10,-6],[10,-1,-6,-4,4,-10],[7,4,10,-1,-5,-7],[5,-10,9,10,-1,-8],[-1,-7,2,-8,7,8],[-9,4,6,-3,-1,-3]],[[-8,2,3,-6,4,-9],[-3,5,2,5,2,3],[3,8,10,-8,6,10],[2,4,-9,2,2,10],[-1,-3,-6,-3,-6,-5],[-2,-5,-3,-8,10,2]],[[-4,1,-2,-2,-8,5],[5,5,9,-8,-4,-9],[-7,-3,10,-8,10,2],[2,4,-3,6,-7,9],[-2,8,9,3,6,-5],[-3,-1,-2,-6,1,6]],[[1,1,-2,5,-7,-10],[-10,-2,-2,3,2,10],[-8,-10,-8,-2,8,-6],[-4,-6,6,7,2,-4],[-10,10,2,-8,8,-1],[6,-3,7,-7,-2,3]],[[-3,-4,2,9,-7,-4],[1,-1,-9,3,-6,-10],[-8,5,3,10,8,9],[3,10,9,9,5,6],[2,9,-6,10,-7,-7],[-3,-4,-2,1,-5,7]],[[4,-1,-8,2,6,8],[2,7,-5,10,3,8],[-1,3,9,-7,10,3],[4,-9,-1,-2,7,2],[6,-9,-8,-4,-8,-2],[-9,-2,-8,8,-4,-2]],[[-4,-6,8,2,-10,2],[-9,-6,5,4,8,4],[2,-7,7,-9,-8,9],[-5,-9,-3,4,9,-7],[-9,-10,-8,4,-4,-4],[4,1,10,-7,2,-9]],[[-9,5,2,-4,-4,9],[-7,-1,4,4,-9,-10],[-7,-4,-5,4,-6,1],[4,1,8,-1,3,-7],[-5,6,6,-5,-3,1],[-1,-1,3,-5,7,-4]],[[-5,1,-7,6,-9,-8],[-6,-5,-1,6,-1,-7],[9,1,9,3,2,-4],[2,1,-10,-6,3,7],[8,-3,2,-3,-5,9],[2,10,7,3,3,3]]], dtype = "uint16")#candidate|4937|(9, 6, 6)|const|uint16
var_4938 = relay.var("var_4938", dtype = "uint16", shape = (9, 6, 6))#candidate|4938|(9, 6, 6)|var|uint16
bop_4939 = relay.bitwise_or(const_4937.astype('uint16'), relay.reshape(var_4938.astype('uint16'), relay.shape_of(const_4937))) # shape=(9, 6, 6)
uop_4943 = relay.log(bop_4939.astype('float32')) # shape=(9, 6, 6)
bop_4954 = relay.floor_divide(var_4938.astype('float64'), relay.reshape(bop_4939.astype('float64'), relay.shape_of(var_4938))) # shape=(9, 6, 6)
func_659_call = mod.get_global_var('func_659')
func_661_call = mutated_mod.get_global_var('func_661')
const_4958 = relay.const([-7.626944,2.552375,1.627298,-7.763289,-9.378107,-3.702101,1.523178,-3.104325,6.818902,1.457395,2.575339,5.414239,9.604113,-2.221805,-1.945396,-5.214837,8.063822,0.277019,1.124270,1.963945,1.192836,-8.945554,-9.098713,-1.065973,0.243336,-4.505815,-3.786178,9.717050,-6.713490,-5.539060,1.794525,9.944074,4.031230,8.264300,-5.258063,-3.416761,-0.099523,-1.879466,2.753604,3.068422,-9.625310,-9.662268,6.732976,-5.284600,6.456978,-4.568213,2.012682,5.374306,-3.018868,5.231798,9.613938,-5.998593,-1.365262,-7.456729,1.835044,8.034934,8.243763,-3.449431,7.847495,-9.099520,-7.165807,4.480606,-8.660819,-4.531736,-5.233251,0.997665,6.006268,6.908654,-9.855391,7.001838,3.187350,-0.597354,-7.966064,-8.656559,6.724598,-6.231865,3.168248,-8.944807,-9.273586,0.480957,-6.131180,-8.787845,-5.239861,-9.008300,4.357232,1.265917,-9.823904,5.067712,-5.808776,-4.644069,-3.552264,4.502009,0.092997,1.301077,-4.789706,-2.463248,0.260967,-1.276788,-4.024495,0.863406,7.598569,0.545110,-9.445004,-5.653391,-3.230424,-1.930548,-9.208270,-9.324388,4.211219,2.755450,-6.109844,8.088707,0.807110,-9.400840,-6.107649,0.511790,-6.027673,4.627821,-7.371339,3.261046,-5.855691,9.334975,-8.286310,-5.863834,-2.426787,1.676244,0.549099,-3.601917,5.311252,7.709381,-3.503470,1.617758,6.014728,8.002893,-8.252383,-9.211836,3.148017,4.597345,4.289067,6.440654,-9.427128,6.457049,6.598137,-8.676995,-7.095161,-5.078698,-0.700739,8.851675,-8.853053,5.244650,9.800556,-1.401584,-9.126559,-6.950954,7.683668,0.907511,2.128731,-7.048513,-8.254433,1.856622,-1.722960,-7.662950,0.678095,-4.250138,-3.717810,-2.948117,3.190020,-6.178894,4.089930,6.961837,3.791288,-4.481029,8.990669,2.736430,8.687158,-7.264612,9.269960,-5.006507,-4.643326,-9.904950,0.564118,6.335593,4.744633,-5.317498,-9.475611,-6.035823,-5.362707,-7.742089,0.945999,7.336318,-8.912526,-8.896614,-1.321579,-7.819452,3.848982,-4.018554,-6.688403,5.638732,0.983116,-4.701979,6.412511,5.281934,0.580405,-9.195758,-5.280028,3.695799,7.596471,-4.880669,-6.963779,3.781741,8.909755,-6.654298,4.102716,-5.791080,0.245729,-2.363959,5.688304,-2.354180,-0.256447,5.996564,7.802241,9.064669,-8.255584,-0.315367,6.255427,-6.013712,5.789215,-4.616528,-9.377941,-0.083524,9.713409,-8.932259,-4.518158,9.337386,2.820408,6.507502,1.331765,-1.149444,-9.638594,-2.358753,-8.709360,3.255377,-2.928888,-5.628992,-4.712166,-6.125955,5.549433,-0.512363,-3.526332,-8.464553,-6.814998,-8.990587,1.464829,6.923646,0.491750,5.644049,-5.271337,-5.079779,-3.888180,0.843863,6.522571,-6.055389,-9.090193,-6.593842,-3.292727,6.825260,4.669205,-9.542539,-4.219960,-4.778058,4.629221,9.618338,-9.244676,-6.622134,-3.212747,7.559919,-4.139001,-3.376159,-9.550047,6.665109,-4.004849,2.515513,-3.843285,-0.384534,2.935622,-1.796435,-6.662421,-2.373498,7.715877,6.295195,-0.240828,4.490696,-6.038847,-6.952149,8.058967,2.954113,-3.644654,8.580968,-2.774560,2.785627,-2.207612,-0.951596,4.677305,-0.627690,-5.216809,-3.797067,-8.626136,5.779695,9.508002,-5.314061,9.928602,-9.655824,-3.558855,-4.161772,8.829529,5.988537,7.015705,-1.967498,-3.710523,-3.187961,-6.239935,-4.701878,-9.986664,9.099297,8.667737,-6.643172,4.091489,-2.628372,-9.517988,-7.540018,-6.311782,-8.775828,-5.346305,-4.757886,8.323347,6.686999,1.294087,-3.094929,0.112269,6.079152,9.870515,9.132339,0.450649,9.102259,-1.446838,8.718597,8.393866,-1.062711,5.242798,-0.639333,1.334379,-1.189367,4.155011,8.962604,2.918792,4.806307,-0.679501,1.024250,-5.150519,-6.611250,8.354763,5.361665,3.188401,-2.708248,-9.691413,0.387639,-5.410881,-9.362052,-9.741461,-6.064350,2.211855,1.727349,-7.359141,0.966314,1.277579,4.700673,4.535908,2.625258,-5.563766,1.641522,-4.584991,5.534489,1.293881,0.877360,2.030507,1.386495,2.045002,-6.647413,9.918472,1.273690,9.519632,9.452987,0.285353,9.138234,-6.386445,4.432762,8.974570,4.785861,-7.996700,1.467486,-1.180786,-7.498936,3.954496,8.559309,-7.651995,0.859988,4.435359,8.088046,2.408719,6.402152,7.804756,-5.424860,6.764409,4.007622,-2.249969,6.500575,1.150454,5.426788,-8.973518,-4.141152,5.163687,2.904819,-9.916428,2.488753,1.157402,-4.234106,0.759144,-8.310248,-1.071924,6.164224,-1.115723,-7.709194], dtype = "float64")#candidate|4958|(432,)|const|float64
call_4957 = relay.TupleGetItem(func_659_call(relay.reshape(const_4958.astype('float64'), [9, 3, 16])), 0)
call_4959 = relay.TupleGetItem(func_661_call(relay.reshape(const_4958.astype('float64'), [9, 3, 16])), 0)
output = relay.Tuple([uop_4943,bop_4954,call_4957,const_4958,])
output2 = relay.Tuple([uop_4943,bop_4954,call_4959,const_4958,])
func_4960 = relay.Function([var_4938,], output)
mod['func_4960'] = func_4960
mod = relay.transform.InferType()(mod)
var_4961 = relay.var("var_4961", dtype = "uint16", shape = (9, 6, 6))#candidate|4961|(9, 6, 6)|var|uint16
output = func_4960(var_4961)
func_4962 = relay.Function([var_4961], output)
mutated_mod['func_4962'] = func_4962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1888_call = mod.get_global_var('func_1888')
func_1890_call = mutated_mod.get_global_var('func_1890')
call_5007 = func_1888_call()
call_5008 = func_1888_call()
output = call_5007
output2 = call_5008
func_5013 = relay.Function([], output)
mod['func_5013'] = func_5013
mod = relay.transform.InferType()(mod)
mutated_mod['func_5013'] = func_5013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5013_call = mutated_mod.get_global_var('func_5013')
call_5014 = func_5013_call()
output = call_5014
func_5015 = relay.Function([], output)
mutated_mod['func_5015'] = func_5015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4365_call = mod.get_global_var('func_4365')
func_4367_call = mutated_mod.get_global_var('func_4367')
call_5074 = func_4365_call()
call_5075 = func_4365_call()
func_4535_call = mod.get_global_var('func_4535')
func_4536_call = mutated_mod.get_global_var('func_4536')
call_5090 = relay.TupleGetItem(func_4535_call(), 0)
call_5091 = relay.TupleGetItem(func_4536_call(), 0)
func_4960_call = mod.get_global_var('func_4960')
func_4962_call = mutated_mod.get_global_var('func_4962')
var_5100 = relay.var("var_5100", dtype = "uint16", shape = (324,))#candidate|5100|(324,)|var|uint16
call_5099 = relay.TupleGetItem(func_4960_call(relay.reshape(var_5100.astype('uint16'), [9, 6, 6])), 0)
call_5101 = relay.TupleGetItem(func_4962_call(relay.reshape(var_5100.astype('uint16'), [9, 6, 6])), 0)
output = relay.Tuple([call_5074,call_5090,call_5099,var_5100,])
output2 = relay.Tuple([call_5075,call_5091,call_5101,var_5100,])
func_5103 = relay.Function([var_5100,], output)
mod['func_5103'] = func_5103
mod = relay.transform.InferType()(mod)
mutated_mod['func_5103'] = func_5103
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5104 = relay.var("var_5104", dtype = "uint16", shape = (324,))#candidate|5104|(324,)|var|uint16
func_5103_call = mutated_mod.get_global_var('func_5103')
call_5105 = func_5103_call(var_5104)
output = call_5105
func_5106 = relay.Function([var_5104], output)
mutated_mod['func_5106'] = func_5106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4588_call = mod.get_global_var('func_4588')
func_4589_call = mutated_mod.get_global_var('func_4589')
call_5117 = relay.TupleGetItem(func_4588_call(), 3)
call_5118 = relay.TupleGetItem(func_4589_call(), 3)
output = relay.Tuple([call_5117,])
output2 = relay.Tuple([call_5118,])
func_5124 = relay.Function([], output)
mod['func_5124'] = func_5124
mod = relay.transform.InferType()(mod)
output = func_5124()
func_5125 = relay.Function([], output)
mutated_mod['func_5125'] = func_5125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3695_call = mod.get_global_var('func_3695')
func_3696_call = mutated_mod.get_global_var('func_3696')
call_5148 = relay.TupleGetItem(func_3695_call(), 0)
call_5149 = relay.TupleGetItem(func_3696_call(), 0)
func_2332_call = mod.get_global_var('func_2332')
func_2334_call = mutated_mod.get_global_var('func_2334')
call_5164 = relay.TupleGetItem(func_2332_call(), 0)
call_5165 = relay.TupleGetItem(func_2334_call(), 0)
uop_5175 = relay.sinh(call_5164.astype('float64')) # shape=(5, 1, 2)
uop_5177 = relay.sinh(call_5165.astype('float64')) # shape=(5, 1, 2)
func_3080_call = mod.get_global_var('func_3080')
func_3081_call = mutated_mod.get_global_var('func_3081')
call_5179 = func_3080_call()
call_5180 = func_3080_call()
output = relay.Tuple([call_5148,uop_5175,call_5179,])
output2 = relay.Tuple([call_5149,uop_5177,call_5180,])
func_5190 = relay.Function([], output)
mod['func_5190'] = func_5190
mod = relay.transform.InferType()(mod)
output = func_5190()
func_5191 = relay.Function([], output)
mutated_mod['func_5191'] = func_5191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mod.get_global_var('func_3485')
func_3487_call = mutated_mod.get_global_var('func_3487')
call_5216 = relay.TupleGetItem(func_3485_call(), 0)
call_5217 = relay.TupleGetItem(func_3487_call(), 0)
uop_5225 = relay.atan(call_5216.astype('float32')) # shape=(12, 5, 5)
uop_5227 = relay.atan(call_5217.astype('float32')) # shape=(12, 5, 5)
uop_5238 = relay.rsqrt(uop_5225.astype('float32')) # shape=(12, 5, 5)
uop_5240 = relay.rsqrt(uop_5227.astype('float32')) # shape=(12, 5, 5)
func_3195_call = mod.get_global_var('func_3195')
func_3198_call = mutated_mod.get_global_var('func_3198')
var_5248 = relay.var("var_5248", dtype = "float32", shape = (1, 90))#candidate|5248|(1, 90)|var|float32
call_5247 = relay.TupleGetItem(func_3195_call(relay.reshape(var_5248.astype('float32'), [90,])), 1)
call_5249 = relay.TupleGetItem(func_3198_call(relay.reshape(var_5248.astype('float32'), [90,])), 1)
output = relay.Tuple([uop_5238,call_5247,var_5248,])
output2 = relay.Tuple([uop_5240,call_5249,var_5248,])
func_5256 = relay.Function([var_5248,], output)
mod['func_5256'] = func_5256
mod = relay.transform.InferType()(mod)
var_5257 = relay.var("var_5257", dtype = "float32", shape = (1, 90))#candidate|5257|(1, 90)|var|float32
output = func_5256(var_5257)
func_5258 = relay.Function([var_5257], output)
mutated_mod['func_5258'] = func_5258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3585_call = mod.get_global_var('func_3585')
func_3587_call = mutated_mod.get_global_var('func_3587')
call_5260 = relay.TupleGetItem(func_3585_call(), 0)
call_5261 = relay.TupleGetItem(func_3587_call(), 0)
func_1686_call = mod.get_global_var('func_1686')
func_1689_call = mutated_mod.get_global_var('func_1689')
const_5289 = relay.const([-2,-2,10,-9,-2,-6,2,4,-3,-2,-7,-10,5,7,5,-2,4,6,-8,3,-9,4,5,1,10,-2,2,-5,-1,3,-4,-4,9,-2,-7,6,4,-9,-7,6,6,8,9,6,-6,7,-4,-8,-1,1,-3,-5,-6,-5,-5,-4,-10,-10,6,10,-7,-9,6,-5,8,-8,-4,8,-7,4,-6,6,1,-5,-4,-8,-2,1,6,6,3,-5,-6,6,5,-7,10,-7,9,-9,-6,3,6,7,-1,6,-8,-10,1,8,-10,9,8,1,7,-10,7,-3,7,-4,3,-2,-8,-5,-10,9,10,10,-1,7,2,-10,-3,1,1,8,-5,4,3,-4,-4,3,-8,-6,-3,-6,-2,-4,-9,5,-10,5,5,9,-1,-3,6,3,-8,-3,-3,7,-5,-10,-6,6,2,-1,3,5,3,-10,-3,-4,-3,-3,6,-10,1,-7,9,-4,5,5,5,1,-7,10,-6,-2,-1,-3,-5,2,-7,4,4,-4,-3,-8,-9,10,-2,8,5,8,5,5,-6,-9,-5,8,10,8,-1,4,7,-7,-6,-8,-7,7,8,3,6,-9,-6,10,-9,9,-7,1,1,-3,-7,8,-7,-5,4,1,1,-10,-6,-2,1,6,-8,-3,9,6,9,7,6,1,3,1,-1,-10,3,4,5,3,-9,2,2,-1,9,-7,3,8,-1,9,-10,-10,10,9,6,-9,-8,-10,-7,3,10,-5,-9], dtype = "uint8")#candidate|5289|(275,)|const|uint8
call_5288 = func_1686_call(relay.reshape(const_5289.astype('uint8'), [5, 5, 11]), relay.reshape(const_5289.astype('uint8'), [5, 5, 11]), )
call_5290 = func_1686_call(relay.reshape(const_5289.astype('uint8'), [5, 5, 11]), relay.reshape(const_5289.astype('uint8'), [5, 5, 11]), )
func_2306_call = mod.get_global_var('func_2306')
func_2309_call = mutated_mod.get_global_var('func_2309')
var_5298 = relay.var("var_5298", dtype = "float64", shape = (20,))#candidate|5298|(20,)|var|float64
call_5297 = relay.TupleGetItem(func_2306_call(relay.reshape(call_5260.astype('float64'), [5, 1, 2]), relay.reshape(var_5298.astype('float64'), [5, 2, 2]), ), 0)
call_5299 = relay.TupleGetItem(func_2309_call(relay.reshape(call_5260.astype('float64'), [5, 1, 2]), relay.reshape(var_5298.astype('float64'), [5, 2, 2]), ), 0)
func_2916_call = mod.get_global_var('func_2916')
func_2918_call = mutated_mod.get_global_var('func_2918')
var_5303 = relay.var("var_5303", dtype = "uint8", shape = (54,))#candidate|5303|(54,)|var|uint8
call_5302 = func_2916_call(relay.reshape(var_5303.astype('uint8'), [3, 3, 6]))
call_5304 = func_2916_call(relay.reshape(var_5303.astype('uint8'), [3, 3, 6]))
uop_5322 = relay.log(call_5297.astype('float64')) # shape=(1716,)
uop_5324 = relay.log(call_5299.astype('float64')) # shape=(1716,)
func_4789_call = mod.get_global_var('func_4789')
func_4791_call = mutated_mod.get_global_var('func_4791')
call_5328 = relay.TupleGetItem(func_4789_call(), 4)
call_5329 = relay.TupleGetItem(func_4791_call(), 4)
bop_5330 = relay.divide(uop_5322.astype('float32'), relay.reshape(call_5297.astype('float32'), relay.shape_of(uop_5322))) # shape=(1716,)
bop_5333 = relay.divide(uop_5324.astype('float32'), relay.reshape(call_5299.astype('float32'), relay.shape_of(uop_5324))) # shape=(1716,)
func_3920_call = mod.get_global_var('func_3920')
func_3923_call = mutated_mod.get_global_var('func_3923')
var_5339 = relay.var("var_5339", dtype = "uint32", shape = ())#candidate|5339|()|var|uint32
call_5338 = relay.TupleGetItem(func_3920_call(relay.reshape(var_5339.astype('uint32'), [])), 3)
call_5340 = relay.TupleGetItem(func_3923_call(relay.reshape(var_5339.astype('uint32'), [])), 3)
var_5348 = relay.var("var_5348", dtype = "float32", shape = (1716,))#candidate|5348|(1716,)|var|float32
bop_5349 = relay.logical_xor(bop_5330.astype('int16'), relay.reshape(var_5348.astype('int16'), relay.shape_of(bop_5330))) # shape=(1716,)
bop_5352 = relay.logical_xor(bop_5333.astype('int16'), relay.reshape(var_5348.astype('int16'), relay.shape_of(bop_5333))) # shape=(1716,)
output = relay.Tuple([call_5260,call_5288,const_5289,var_5298,call_5302,var_5303,call_5328,call_5338,var_5339,bop_5349,])
output2 = relay.Tuple([call_5261,call_5290,const_5289,var_5298,call_5304,var_5303,call_5329,call_5340,var_5339,bop_5352,])
func_5354 = relay.Function([var_5298,var_5303,var_5339,var_5348,], output)
mod['func_5354'] = func_5354
mod = relay.transform.InferType()(mod)
var_5355 = relay.var("var_5355", dtype = "float64", shape = (20,))#candidate|5355|(20,)|var|float64
var_5356 = relay.var("var_5356", dtype = "uint8", shape = (54,))#candidate|5356|(54,)|var|uint8
var_5357 = relay.var("var_5357", dtype = "uint32", shape = ())#candidate|5357|()|var|uint32
var_5358 = relay.var("var_5358", dtype = "float32", shape = (1716,))#candidate|5358|(1716,)|var|float32
output = func_5354(var_5355,var_5356,var_5357,var_5358,)
func_5359 = relay.Function([var_5355,var_5356,var_5357,var_5358,], output)
mutated_mod['func_5359'] = func_5359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3080_call = mod.get_global_var('func_3080')
func_3081_call = mutated_mod.get_global_var('func_3081')
call_5366 = func_3080_call()
call_5367 = func_3080_call()
func_4610_call = mod.get_global_var('func_4610')
func_4613_call = mutated_mod.get_global_var('func_4613')
var_5371 = relay.var("var_5371", dtype = "int64", shape = ())#candidate|5371|()|var|int64
call_5370 = relay.TupleGetItem(func_4610_call(relay.reshape(var_5371.astype('int64'), [])), 1)
call_5372 = relay.TupleGetItem(func_4613_call(relay.reshape(var_5371.astype('int64'), [])), 1)
bop_5380 = relay.floor_mod(var_5371.astype('float32'), call_5366.astype('float32')) # shape=(792,)
bop_5383 = relay.floor_mod(var_5371.astype('float32'), call_5367.astype('float32')) # shape=(792,)
func_3343_call = mod.get_global_var('func_3343')
func_3346_call = mutated_mod.get_global_var('func_3346')
const_5396 = relay.const([-2.191716,-1.166722,7.967526,-0.339907,-9.417932,5.281327,-9.740472,-0.704959,4.535707,-9.830353,4.992001,-9.112289,-1.956821,-6.422755,-6.576042,-1.776318,0.010087,9.762028,0.094620,-7.789586,-1.930666,3.452592,-8.092940,-2.275584,-5.951448,4.071309,-9.472835,-0.742208,-3.964842,-2.069990,-2.808735,5.713469,2.837156,1.919951,-1.513854,-2.013597,1.765965,-4.494519,2.002691,5.714205,7.660994,7.651605,-3.360111,-8.844294,-0.650162,5.827929,-9.882595,-9.765159,2.032516,-5.004635,4.375285,-7.638416,-8.040374,-8.588968,5.365705,2.581388,1.857545,-5.595860,-2.199823,-4.082254,2.637401,-0.976999,4.647188,1.040569,-6.760218,-4.396225,-8.835607,-3.631457,2.618068,-0.684793,-9.488599,-6.693974,-7.000311,4.312900,8.159449,7.371790,6.730149,-6.284275,4.985715,3.443593,8.089296,2.447233,-1.940514,-4.004645,8.329213,-1.322862,3.215728,8.512996,8.666294,-2.322152,-7.188994,7.610649,5.075677,-2.242955,4.956246,-9.673887,-9.451755,-6.898626,3.517561,-1.957094,1.897067,-1.472783,4.089647,-1.047160,-5.362288,-7.651200,-8.298951,-2.181420,9.862391,-6.322898,-4.544478,-7.932714,4.280072,0.654075,9.707824,3.020608,-3.927866,4.577479,9.141022,-3.678457], dtype = "float64")#candidate|5396|(120,)|const|float64
call_5395 = relay.TupleGetItem(func_3343_call(relay.reshape(const_5396.astype('float64'), [6, 2, 10])), 0)
call_5397 = relay.TupleGetItem(func_3346_call(relay.reshape(const_5396.astype('float64'), [6, 2, 10])), 0)
func_3546_call = mod.get_global_var('func_3546')
func_3548_call = mutated_mod.get_global_var('func_3548')
var_5407 = relay.var("var_5407", dtype = "float64", shape = (300,))#candidate|5407|(300,)|var|float64
call_5406 = relay.TupleGetItem(func_3546_call(relay.reshape(var_5407.astype('float64'), [300,])), 6)
call_5408 = relay.TupleGetItem(func_3548_call(relay.reshape(var_5407.astype('float64'), [300,])), 6)
func_4082_call = mod.get_global_var('func_4082')
func_4085_call = mutated_mod.get_global_var('func_4085')
call_5412 = relay.TupleGetItem(func_4082_call(relay.reshape(var_5407.astype('float64'), [300,])), 1)
call_5413 = relay.TupleGetItem(func_4085_call(relay.reshape(var_5407.astype('float64'), [300,])), 1)
func_2001_call = mod.get_global_var('func_2001')
func_2003_call = mutated_mod.get_global_var('func_2003')
call_5419 = relay.TupleGetItem(func_2001_call(relay.reshape(var_5407.astype('float64'), [6, 10, 5])), 0)
call_5420 = relay.TupleGetItem(func_2003_call(relay.reshape(var_5407.astype('float64'), [6, 10, 5])), 0)
func_3054_call = mod.get_global_var('func_3054')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_5425 = relay.TupleGetItem(func_3054_call(), 0)
call_5426 = relay.TupleGetItem(func_3056_call(), 0)
output = relay.Tuple([call_5370,bop_5380,call_5395,const_5396,call_5406,var_5407,call_5412,call_5419,call_5425,])
output2 = relay.Tuple([call_5372,bop_5383,call_5397,const_5396,call_5408,var_5407,call_5413,call_5420,call_5426,])
func_5445 = relay.Function([var_5371,var_5407,], output)
mod['func_5445'] = func_5445
mod = relay.transform.InferType()(mod)
mutated_mod['func_5445'] = func_5445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5445_call = mutated_mod.get_global_var('func_5445')
var_5447 = relay.var("var_5447", dtype = "int64", shape = ())#candidate|5447|()|var|int64
var_5448 = relay.var("var_5448", dtype = "float64", shape = (300,))#candidate|5448|(300,)|var|float64
call_5446 = func_5445_call(var_5447,var_5448,)
output = call_5446
func_5449 = relay.Function([var_5447,var_5448,], output)
mutated_mod['func_5449'] = func_5449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5124_call = mod.get_global_var('func_5124')
func_5125_call = mutated_mod.get_global_var('func_5125')
call_5469 = relay.TupleGetItem(func_5124_call(), 0)
call_5470 = relay.TupleGetItem(func_5125_call(), 0)
func_3893_call = mod.get_global_var('func_3893')
func_3896_call = mutated_mod.get_global_var('func_3896')
var_5475 = relay.var("var_5475", dtype = "float64", shape = (120,))#candidate|5475|(120,)|var|float64
const_5476 = relay.const([9.740164,8.161020,3.051981,0.860375,1.460983,4.893658,-2.362960,2.469500,3.929610,5.255702,-4.569316,4.288992,8.857138,9.563572,-2.619633,-8.213497,-5.235575,9.336514,-3.430376,6.482165,2.602023,8.441699,-8.925621,9.483974,1.505674,2.787083,-2.645415,-5.506541,5.160802,-5.214007,4.059489,9.145864,1.695984,6.881255,6.589861,1.296082,3.798437,-5.553817,4.507121,6.730569,8.477405,-9.420091,7.503602,0.060563,-2.876608,-9.352487,-7.342468,-4.984155,-3.733530,7.394434,-7.380601,-0.123532,6.729770,5.699480,-2.789096,-2.522388,2.442051,-1.339092,7.771314,5.643768,9.279282,7.862249,2.325735,0.200689,8.739864,9.025215,0.154047,4.049226,-7.557596,-7.508913,2.805472,-1.408270,5.779582,6.418331,6.521526,2.634033,-9.953036,-7.188193,-3.502907,-2.202606,2.497614,0.426306,8.285886,4.715028,7.611070,8.413665,-4.588492,3.879899,-4.280001,6.357375,9.775051,-5.235721,4.299669,5.406206,5.623101,-4.099806,4.781653,1.774077,-6.870568,-1.145478,-4.380850,0.840841,-2.838824,1.562712,9.858956,-5.170499,4.260341,1.102521,0.661636,-9.276334,-4.108340,1.646129,-8.147383,-8.511083,-6.154016,-9.668951,-9.583135,5.422415,-7.186262,5.113570,0.119570,-7.572412,9.803430,-1.597805,-9.525418,8.409284,8.202673,-0.951020,8.406788,-9.953948,5.301011,9.356428,-5.673309,-2.192405,3.599383,9.706178,7.440102,9.768791,4.402129,-8.307791,-7.965969,-7.307883,-9.190994,3.134643,2.732972,1.157071,-5.822344,4.061038,-2.985164,5.168629,7.511050,-5.620757,-7.466681,8.875606,5.340144,5.534843,9.910627,8.311082,-8.802857,-9.843857,6.934209,-1.663582,-9.980824,-0.635649,-5.709655,-1.650994,-2.715834,-9.440059,-8.348675,-2.425210,1.401971,4.973696,4.945977,8.254185,5.137557,-7.556026,3.579284,-7.170144,-0.567944,-8.588222,-1.291542,-5.251398,-6.628346,5.906253,0.986596,-0.047524,2.461272,6.349064,2.872183,-1.616957,-3.502730,1.946499,5.047716,7.577611,-4.927739,-3.240632,-1.747164,-0.916937,-3.364729,6.127510,6.617610,-0.782235,5.316510,-4.855602,-4.027087,2.421603,9.726390,9.068530,-8.577580,-6.887248,-0.420138,6.328185,1.037938,8.555078,1.284556,5.355661,5.577026,9.590656,-0.508833,3.291392,-1.885637,2.583017,1.714162,3.653101,-5.833377,-7.672438,-1.200408,1.777054,3.641744,7.245669,-9.408815,-1.438457,5.674576,-2.179940,7.185404,-1.358424,7.468250,1.796947,-2.080326,-4.590896,-8.482886,-3.621349,1.507501,-6.076510,-2.632370,8.856641,6.595419,-8.829749,-4.236233,-7.929061,-9.846719,7.837320,-7.373920,-9.441657,1.828571,3.419808,-7.668812,5.883100,-0.432927,-9.883757,6.020210,1.893863,6.006582,1.834711,-3.858524,0.326672,1.637184,-4.234894,2.511099,-8.584224,-5.593270,-2.949250,7.888068,-0.385581,-2.404576,2.760140,-7.622063,-0.231855,-6.505814,9.035193,2.719644,-5.767895,-4.080023,-6.223583,9.733480,-4.143701,0.727428,-5.391490,-6.767196,-7.624833,-4.756163,4.844240,-9.940429,-0.525075,8.522556,4.450607,4.314870,2.600488,9.271997,4.915058], dtype = "float64")#candidate|5476|(300,)|const|float64
call_5474 = relay.TupleGetItem(func_3893_call(relay.reshape(var_5475.astype('float64'), [120,]), relay.reshape(const_5476.astype('float64'), [5, 60]), ), 6)
call_5477 = relay.TupleGetItem(func_3896_call(relay.reshape(var_5475.astype('float64'), [120,]), relay.reshape(const_5476.astype('float64'), [5, 60]), ), 6)
bop_5480 = relay.less(const_5476.astype('bool'), call_5474.astype('bool')) # shape=(140, 300)
bop_5483 = relay.less(const_5476.astype('bool'), call_5477.astype('bool')) # shape=(140, 300)
func_3229_call = mod.get_global_var('func_3229')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_5487 = func_3229_call(relay.reshape(call_5474.astype('float64'), [5, 14, 2]))
call_5488 = func_3229_call(relay.reshape(call_5474.astype('float64'), [5, 14, 2]))
output = relay.Tuple([call_5469,var_5475,bop_5480,call_5487,])
output2 = relay.Tuple([call_5470,var_5475,bop_5483,call_5488,])
func_5489 = relay.Function([var_5475,], output)
mod['func_5489'] = func_5489
mod = relay.transform.InferType()(mod)
mutated_mod['func_5489'] = func_5489
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5490 = relay.var("var_5490", dtype = "float64", shape = (120,))#candidate|5490|(120,)|var|float64
func_5489_call = mutated_mod.get_global_var('func_5489')
call_5491 = func_5489_call(var_5490)
output = call_5491
func_5492 = relay.Function([var_5490], output)
mutated_mod['func_5492'] = func_5492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2363_call = mod.get_global_var('func_2363')
func_2365_call = mutated_mod.get_global_var('func_2365')
call_5535 = relay.TupleGetItem(func_2363_call(), 0)
call_5536 = relay.TupleGetItem(func_2365_call(), 0)
var_5553 = relay.var("var_5553", dtype = "float64", shape = (5, 16, 2))#candidate|5553|(5, 16, 2)|var|float64
bop_5554 = relay.bitwise_or(call_5535.astype('int32'), var_5553.astype('int32')) # shape=(5, 16, 2)
bop_5557 = relay.bitwise_or(call_5536.astype('int32'), var_5553.astype('int32')) # shape=(5, 16, 2)
output = relay.Tuple([bop_5554,])
output2 = relay.Tuple([bop_5557,])
func_5588 = relay.Function([var_5553,], output)
mod['func_5588'] = func_5588
mod = relay.transform.InferType()(mod)
var_5589 = relay.var("var_5589", dtype = "float64", shape = (5, 16, 2))#candidate|5589|(5, 16, 2)|var|float64
output = func_5588(var_5589)
func_5590 = relay.Function([var_5589], output)
mutated_mod['func_5590'] = func_5590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2570_call = mod.get_global_var('func_2570')
func_2571_call = mutated_mod.get_global_var('func_2571')
call_5623 = relay.TupleGetItem(func_2570_call(), 2)
call_5624 = relay.TupleGetItem(func_2571_call(), 2)
func_1797_call = mod.get_global_var('func_1797')
func_1799_call = mutated_mod.get_global_var('func_1799')
var_5630 = relay.var("var_5630", dtype = "float64", shape = (12, 1))#candidate|5630|(12, 1)|var|float64
call_5629 = func_1797_call(relay.reshape(var_5630.astype('float64'), [6, 1, 2]))
call_5631 = func_1797_call(relay.reshape(var_5630.astype('float64'), [6, 1, 2]))
output = relay.Tuple([call_5623,call_5629,var_5630,])
output2 = relay.Tuple([call_5624,call_5631,var_5630,])
func_5634 = relay.Function([var_5630,], output)
mod['func_5634'] = func_5634
mod = relay.transform.InferType()(mod)
mutated_mod['func_5634'] = func_5634
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5635 = relay.var("var_5635", dtype = "float64", shape = (12, 1))#candidate|5635|(12, 1)|var|float64
func_5634_call = mutated_mod.get_global_var('func_5634')
call_5636 = func_5634_call(var_5635)
output = call_5636
func_5637 = relay.Function([var_5635], output)
mutated_mod['func_5637'] = func_5637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5190_call = mod.get_global_var('func_5190')
func_5191_call = mutated_mod.get_global_var('func_5191')
call_5668 = relay.TupleGetItem(func_5190_call(), 1)
call_5669 = relay.TupleGetItem(func_5191_call(), 1)
func_3920_call = mod.get_global_var('func_3920')
func_3923_call = mutated_mod.get_global_var('func_3923')
var_5679 = relay.var("var_5679", dtype = "uint32", shape = ())#candidate|5679|()|var|uint32
call_5678 = relay.TupleGetItem(func_3920_call(relay.reshape(var_5679.astype('uint32'), [])), 2)
call_5680 = relay.TupleGetItem(func_3923_call(relay.reshape(var_5679.astype('uint32'), [])), 2)
output = relay.Tuple([call_5668,call_5678,var_5679,])
output2 = relay.Tuple([call_5669,call_5680,var_5679,])
func_5701 = relay.Function([var_5679,], output)
mod['func_5701'] = func_5701
mod = relay.transform.InferType()(mod)
mutated_mod['func_5701'] = func_5701
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5702 = relay.var("var_5702", dtype = "uint32", shape = ())#candidate|5702|()|var|uint32
func_5701_call = mutated_mod.get_global_var('func_5701')
call_5703 = func_5701_call(var_5702)
output = call_5703
func_5704 = relay.Function([var_5702], output)
mutated_mod['func_5704'] = func_5704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3006_call = mod.get_global_var('func_3006')
func_3008_call = mutated_mod.get_global_var('func_3008')
call_5847 = relay.TupleGetItem(func_3006_call(), 2)
call_5848 = relay.TupleGetItem(func_3008_call(), 2)
output = call_5847
output2 = call_5848
func_5859 = relay.Function([], output)
mod['func_5859'] = func_5859
mod = relay.transform.InferType()(mod)
mutated_mod['func_5859'] = func_5859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5859_call = mutated_mod.get_global_var('func_5859')
call_5860 = func_5859_call()
output = call_5860
func_5861 = relay.Function([], output)
mutated_mod['func_5861'] = func_5861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2222_call = mod.get_global_var('func_2222')
func_2223_call = mutated_mod.get_global_var('func_2223')
call_5906 = func_2222_call()
call_5907 = func_2222_call()
output = relay.Tuple([call_5906,])
output2 = relay.Tuple([call_5907,])
func_5921 = relay.Function([], output)
mod['func_5921'] = func_5921
mod = relay.transform.InferType()(mod)
output = func_5921()
func_5922 = relay.Function([], output)
mutated_mod['func_5922'] = func_5922
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5950 = relay.var("var_5950", dtype = "uint32", shape = (16, 15, 12))#candidate|5950|(16, 15, 12)|var|uint32
var_5951 = relay.var("var_5951", dtype = "uint32", shape = (16, 15, 12))#candidate|5951|(16, 15, 12)|var|uint32
bop_5952 = relay.greater(var_5950.astype('bool'), relay.reshape(var_5951.astype('bool'), relay.shape_of(var_5950))) # shape=(16, 15, 12)
func_3006_call = mod.get_global_var('func_3006')
func_3008_call = mutated_mod.get_global_var('func_3008')
call_5959 = relay.TupleGetItem(func_3006_call(), 1)
call_5960 = relay.TupleGetItem(func_3008_call(), 1)
output = relay.Tuple([bop_5952,call_5959,])
output2 = relay.Tuple([bop_5952,call_5960,])
func_5967 = relay.Function([var_5950,var_5951,], output)
mod['func_5967'] = func_5967
mod = relay.transform.InferType()(mod)
mutated_mod['func_5967'] = func_5967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5967_call = mutated_mod.get_global_var('func_5967')
var_5969 = relay.var("var_5969", dtype = "uint32", shape = (16, 15, 12))#candidate|5969|(16, 15, 12)|var|uint32
var_5970 = relay.var("var_5970", dtype = "uint32", shape = (16, 15, 12))#candidate|5970|(16, 15, 12)|var|uint32
call_5968 = func_5967_call(var_5969,var_5970,)
output = call_5968
func_5971 = relay.Function([var_5969,var_5970,], output)
mutated_mod['func_5971'] = func_5971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3394_call = mod.get_global_var('func_3394')
func_3396_call = mutated_mod.get_global_var('func_3396')
call_5980 = relay.TupleGetItem(func_3394_call(), 0)
call_5981 = relay.TupleGetItem(func_3396_call(), 0)
output = relay.Tuple([call_5980,])
output2 = relay.Tuple([call_5981,])
func_5982 = relay.Function([], output)
mod['func_5982'] = func_5982
mod = relay.transform.InferType()(mod)
output = func_5982()
func_5983 = relay.Function([], output)
mutated_mod['func_5983'] = func_5983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3006_call = mod.get_global_var('func_3006')
func_3008_call = mutated_mod.get_global_var('func_3008')
call_6025 = relay.TupleGetItem(func_3006_call(), 2)
call_6026 = relay.TupleGetItem(func_3008_call(), 2)
output = call_6025
output2 = call_6026
func_6052 = relay.Function([], output)
mod['func_6052'] = func_6052
mod = relay.transform.InferType()(mod)
mutated_mod['func_6052'] = func_6052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6052_call = mutated_mod.get_global_var('func_6052')
call_6053 = func_6052_call()
output = call_6053
func_6054 = relay.Function([], output)
mutated_mod['func_6054'] = func_6054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4789_call = mod.get_global_var('func_4789')
func_4791_call = mutated_mod.get_global_var('func_4791')
call_6068 = relay.TupleGetItem(func_4789_call(), 5)
call_6069 = relay.TupleGetItem(func_4791_call(), 5)
output = relay.Tuple([call_6068,])
output2 = relay.Tuple([call_6069,])
func_6075 = relay.Function([], output)
mod['func_6075'] = func_6075
mod = relay.transform.InferType()(mod)
mutated_mod['func_6075'] = func_6075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6075_call = mutated_mod.get_global_var('func_6075')
call_6076 = func_6075_call()
output = call_6076
func_6077 = relay.Function([], output)
mutated_mod['func_6077'] = func_6077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2363_call = mod.get_global_var('func_2363')
func_2365_call = mutated_mod.get_global_var('func_2365')
call_6096 = relay.TupleGetItem(func_2363_call(), 0)
call_6097 = relay.TupleGetItem(func_2365_call(), 0)
func_4789_call = mod.get_global_var('func_4789')
func_4791_call = mutated_mod.get_global_var('func_4791')
call_6099 = relay.TupleGetItem(func_4789_call(), 6)
call_6100 = relay.TupleGetItem(func_4791_call(), 6)
func_3585_call = mod.get_global_var('func_3585')
func_3587_call = mutated_mod.get_global_var('func_3587')
call_6104 = relay.TupleGetItem(func_3585_call(), 3)
call_6105 = relay.TupleGetItem(func_3587_call(), 3)
func_3920_call = mod.get_global_var('func_3920')
func_3923_call = mutated_mod.get_global_var('func_3923')
var_6113 = relay.var("var_6113", dtype = "uint32", shape = ())#candidate|6113|()|var|uint32
call_6112 = relay.TupleGetItem(func_3920_call(relay.reshape(var_6113.astype('uint32'), [])), 2)
call_6114 = relay.TupleGetItem(func_3923_call(relay.reshape(var_6113.astype('uint32'), [])), 2)
func_6052_call = mod.get_global_var('func_6052')
func_6054_call = mutated_mod.get_global_var('func_6054')
call_6115 = func_6052_call()
call_6116 = func_6052_call()
func_6052_call = mod.get_global_var('func_6052')
func_6054_call = mutated_mod.get_global_var('func_6054')
call_6122 = func_6052_call()
call_6123 = func_6052_call()
func_6075_call = mod.get_global_var('func_6075')
func_6077_call = mutated_mod.get_global_var('func_6077')
call_6139 = relay.TupleGetItem(func_6075_call(), 0)
call_6140 = relay.TupleGetItem(func_6077_call(), 0)
func_2363_call = mod.get_global_var('func_2363')
func_2365_call = mutated_mod.get_global_var('func_2365')
call_6141 = relay.TupleGetItem(func_2363_call(), 0)
call_6142 = relay.TupleGetItem(func_2365_call(), 0)
output = relay.Tuple([call_6096,call_6099,call_6104,call_6112,var_6113,call_6115,call_6122,call_6139,call_6141,])
output2 = relay.Tuple([call_6097,call_6100,call_6105,call_6114,var_6113,call_6116,call_6123,call_6140,call_6142,])
func_6152 = relay.Function([var_6113,], output)
mod['func_6152'] = func_6152
mod = relay.transform.InferType()(mod)
mutated_mod['func_6152'] = func_6152
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6153 = relay.var("var_6153", dtype = "uint32", shape = ())#candidate|6153|()|var|uint32
func_6152_call = mutated_mod.get_global_var('func_6152')
call_6154 = func_6152_call(var_6153)
output = call_6154
func_6155 = relay.Function([var_6153], output)
mutated_mod['func_6155'] = func_6155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5859_call = mod.get_global_var('func_5859')
func_5861_call = mutated_mod.get_global_var('func_5861')
call_6189 = func_5859_call()
call_6190 = func_5859_call()
output = call_6189
output2 = call_6190
func_6202 = relay.Function([], output)
mod['func_6202'] = func_6202
mod = relay.transform.InferType()(mod)
mutated_mod['func_6202'] = func_6202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6202_call = mutated_mod.get_global_var('func_6202')
call_6203 = func_6202_call()
output = call_6203
func_6204 = relay.Function([], output)
mutated_mod['func_6204'] = func_6204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mod.get_global_var('func_3485')
func_3487_call = mutated_mod.get_global_var('func_3487')
call_6251 = relay.TupleGetItem(func_3485_call(), 0)
call_6252 = relay.TupleGetItem(func_3487_call(), 0)
var_6253 = relay.var("var_6253", dtype = "float32", shape = (12, 5, 5))#candidate|6253|(12, 5, 5)|var|float32
bop_6254 = relay.add(call_6251.astype('int64'), relay.reshape(var_6253.astype('int64'), relay.shape_of(call_6251))) # shape=(12, 5, 5)
bop_6257 = relay.add(call_6252.astype('int64'), relay.reshape(var_6253.astype('int64'), relay.shape_of(call_6252))) # shape=(12, 5, 5)
output = bop_6254
output2 = bop_6257
func_6259 = relay.Function([var_6253,], output)
mod['func_6259'] = func_6259
mod = relay.transform.InferType()(mod)
var_6260 = relay.var("var_6260", dtype = "float32", shape = (12, 5, 5))#candidate|6260|(12, 5, 5)|var|float32
output = func_6259(var_6260)
func_6261 = relay.Function([var_6260], output)
mutated_mod['func_6261'] = func_6261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2363_call = mod.get_global_var('func_2363')
func_2365_call = mutated_mod.get_global_var('func_2365')
call_6342 = relay.TupleGetItem(func_2363_call(), 0)
call_6343 = relay.TupleGetItem(func_2365_call(), 0)
uop_6344 = relay.atan(call_6342.astype('float32')) # shape=(5, 1, 2)
uop_6346 = relay.atan(call_6343.astype('float32')) # shape=(5, 1, 2)
output = uop_6344
output2 = uop_6346
func_6351 = relay.Function([], output)
mod['func_6351'] = func_6351
mod = relay.transform.InferType()(mod)
output = func_6351()
func_6352 = relay.Function([], output)
mutated_mod['func_6352'] = func_6352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5013_call = mod.get_global_var('func_5013')
func_5015_call = mutated_mod.get_global_var('func_5015')
call_6392 = func_5013_call()
call_6393 = func_5013_call()
output = relay.Tuple([call_6392,])
output2 = relay.Tuple([call_6393,])
func_6396 = relay.Function([], output)
mod['func_6396'] = func_6396
mod = relay.transform.InferType()(mod)
mutated_mod['func_6396'] = func_6396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6396_call = mutated_mod.get_global_var('func_6396')
call_6397 = func_6396_call()
output = call_6397
func_6398 = relay.Function([], output)
mutated_mod['func_6398'] = func_6398
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6481 = relay.var("var_6481", dtype = "int64", shape = (1, 3, 4))#candidate|6481|(1, 3, 4)|var|int64
var_6482 = relay.var("var_6482", dtype = "int64", shape = (16, 3, 4))#candidate|6482|(16, 3, 4)|var|int64
bop_6483 = relay.minimum(var_6481.astype('int64'), var_6482.astype('int64')) # shape=(16, 3, 4)
func_4082_call = mod.get_global_var('func_4082')
func_4085_call = mutated_mod.get_global_var('func_4085')
var_6488 = relay.var("var_6488", dtype = "float64", shape = (300,))#candidate|6488|(300,)|var|float64
call_6487 = relay.TupleGetItem(func_4082_call(relay.reshape(var_6488.astype('float64'), [300,])), 0)
call_6489 = relay.TupleGetItem(func_4085_call(relay.reshape(var_6488.astype('float64'), [300,])), 0)
func_5967_call = mod.get_global_var('func_5967')
func_5971_call = mutated_mod.get_global_var('func_5971')
const_6491 = relay.const([1,6,1,6,9,-9,-10,1,-9,-6,10,-1,-8,8,-2,-2,9,2,7,-1,-5,1,5,-9,-5,-7,5,-9,-8,5,-6,-4,-4,-6,-4,9,1,-5,6,-1,1,5,-9,-2,-1,-8,1,-5,-10,-8,-10,-4,-9,-7,2,-5,9,2,-4,6,9,-4,8,7,-2,2,4,-5,4,-9,2,-3,5,1,-10,-7,-1,-1,-10,-8,-5,-4,-8,-5,1,-3,9,-5,1,-6,-3,10,-3,2,1,-8,10,-9,-3,3,8,8,-9,-4,9,3,-2,-5,-4,-10,6,-3,-10,-5,7,-6,1,6,8,-4,9,-10,-8,8,1,1,6,2,-6,-8,6,-2,9,-8,-8,-6,10,10,1,2,-5,-7,-6,-6,7,-7,-9,9,7,-7,-2,1,-8,-1,-8,9,5,2,-7,6,-2,7,4,-1,7,-5,2,-2,9,-9,6,10,-6,-5,-1,-6,-5,-6,1,1,7,9,-6,-2,-2,-1,9,-10,-4,-7,-5,9,6,-3,5,4,-2,3,-6,2,-6,-6,4,9,2,-2,8,1,7,8,-7,-5,-9,-8,3,-3,-5,-5,9,-5,-9,10,-8,-1,4,-8,6,-2,2,-8,-2,-6,-1,5,5,9,-7,-3,-9,-2,4,5,-1,-4,1,-8,2,9,4,-1,4,-5,10,-7,-2,5,-9,5,9,5,-1,2,-8,7,5,-1,2,1,3,5,1,3,-10,3,8,-7,2,4,-10,-2,-3,-5,10,-8,-6,-10,1,-8,-10,8,9,-10,-5,-1,-7,10,-7,-4,-1,-1,5,5,-3,-7,-3,4,10,-1,10,2,6,-9,6,-3,6,-3,5,7,2,4,8,-5,2,5,-9,-9,-8,-1,2,1,-10,-10,-4,-5,-10,-2,-5,-9,5,10,3,-3,8,5,-10,9,-5,-4,-6,7,-6,-4,-6,-9,-7,6,-8,10,3,-5,6,-2,3,-9,-3,-4,-5,-1,1,1,8,-9,6,-2,7,-1,-3,3,7,6,-10,8,-1,8,8,2,-9,-2,-2,-4,-4,-1,8,-5,-8,6,1,3,4,6,1,7,10,-4,6,1,-5,-10,-8,9,-6,-2,-8,9,-6,-3,4,6,-3,-6,8,-2,-10,5,5,-4,8,10,-10,-9,5,-3,6,-4,-2,8,8,3,2,7,-4,10,6,-10,-8,-3,5,-1,7,-9,-6,9,9,-3,3,-8,-9,-1,-6,-1,3,7,-2,-8,6,8,-6,-5,2,-4,5,4,-10,-9,7,3,4,8,10,6,3,5,2,4,7,-3,-10,6,-3,8,-7,-1,-1,-8,5,5,8,9,2,-8,-1,-1,7,3,-4,-1,4,-3,-3,5,5,-7,-2,4,8,-2,2,-2,-3,-10,-7,-8,-5,3,-2,-7,10,1,-8,7,7,-7,-5,8,3,4,1,9,5,-5,2,-5,3,4,10,-9,3,4,2,-7,-1,5,5,7,7,10,-3,-2,2,10,-7,9,-5,-9,4,-4,-7,7,4,-3,-8,-8,7,-9,-6,-10,-10,-7,1,-3,-2,-2,-7,-10,-4,2,7,3,10,2,1,-10,-3,5,3,-1,-7,3,-3,-7,-9,7,8,9,-1,3,4,-2,-2,-3,7,9,8,-9,8,-7,4,-10,-5,-10,9,10,-1,-2,-1,8,-10,1,-3,-10,6,-6,5,-5,-5,9,-10,-7,3,-4,6,-10,10,-4,-2,2,4,-2,-3,1,10,2,-9,1,-2,-6,-6,5,-10,9,-5,-1,8,-8,-10,1,-9,2,-5,1,7,-6,-6,8,-1,-9,7,-5,-5,8,-2,-5,-5,10,-7,9,-8,6,-7,-1,1,-5,10,-5,-3,-10,3,5,-2,10,-5,5,4,-9,-8,-1,10,9,-4,-7,-7,-1,2,-10,10,-6,-7,-10,4,5,-2,3,10,4,-6,10,-7,6,8,6,6,-5,-2,-7,4,8,-6,-8,3,-10,-2,-4,3,10,8,9,7,8,-9,-6,6,-9,-5,9,-8,6,-1,-8,-4,6,-4,7,-9,3,-1,10,-2,-8,-9,-4,-5,-6,-5,-1,-3,-1,1,10,-5,7,1,1,-10,2,-7,-6,-9,1,9,2,-10,-10,-3,3,1,-3,-9,6,5,-7,-4,-9,7,6,-3,-7,3,3,8,-3,-6,-1,-3,2,-7,-4,-4,-4,10,-5,2,5,-1,-1,-6,8,-3,7,-8,-5,10,3,-2,-4,-1,-7,-3,8,3,-3,-4,-1,7,-2,-6,9,-8,-1,1,3,6,-7,-2,-3,4,4,-6,-4,2,8,-7,-6,-9,-5,2,-6,-6,7,6,5,-7,-8,3,-6,2,-6,10,3,-1,-4,6,9,-3,-2,-8,10,5,6,2,4,5,2,-4,-9,-3,5,-2,-1,-3,-3,9,6,-1,-1,-6,6,7,-9,5,3,10,7,-4,-7,5,-10,3,-8,10,-9,4,-8,-5,1,4,10,-4,5,9,-7,-2,-7,-4,-1,-4,-3,-8,-1,-7,-5,-6,4,-3,-8,-1,-7,5,-5,-8,-5,7,-3,8,-9,4,-5,-10,10,10,-6,-6,-1,6,8,-4,-10,-1,-7,-7,-4,-2,-3,10,6,3,2,-6,8,10,-9,1,7,-2,-10,3,-2,-3,-9,-8,6,8,3,-10,7,-9,4,4,3,-8,-5,-7,7,-1,6,3,5,7,-7,-8,-6,-1,-8,-2,2,-4,-4,-5,-4,9,-10,-1,6,-10,4,7,3,-10,4,-2,5,-5,-10,10,-9,-5,3,-3,-3,-10,-8,-6,-7,-4,2,7,-3,-4,5,8,-5,4,-8,-7,-7,-7,-5,8,3,3,7,1,-2,-4,3,10,6,5,10,-4,-10,2,5,-7,1,4,-10,9,-1,9,-6,1,-5,-3,-10,-2,7,6,-1,2,5,-9,10,6,-10,5,-6,-7,5,-7,-8,-5,-10,-6,-6,-2,-4,-3,-8,6,-6,3,1,4,-1,-1,8,3,9,-1,-10,3,6,8,6,4,-9,3,-9,4,-8,9,2,-5,1,-3,1,-5,-3,2,9,1,-5,7,-3,-5,7,8,6,-10,1,10,-3,-2,-9,8,-2,-7,-5,-4,7,-9,3,-6,3,8,3,-10,2,-3,-6,-1,1,-7,2,5,3,6,3,7,-9,-2,4,9,3,8,-4,-8,-5,-1,8,-8,10,-9,3,-1,-10,7,6,-9,-9,-8,6,-9,-5,-9,4,6,-1,-1,10,9,8,3,3,4,-10,6,-10,-10,5,10,7,7,8,2,-9,-7,8,-2,-3,-4,9,-3,-7,4,2,-1,-9,-9,-4,6,-4,4,-4,-5,-3,1,9,10,7,-5,-7,8,-5,-2,7,-6,-10,5,5,2,6,-9,-9,2,3,3,-6,-8,7,9,8,7,6,-4,9,-10,-9,-4,7,2,-3,-4,5,7,-1,-8,-4,9,-4,-2,6,1,-10,-2,9,1,-1,1,8,-10,6,10,-2,1,-1,-10,-6,4,6,-7,2,-6,-4,8,5,-10,5,-3,8,-2,9,-8,5,-3,8,5,-7,-2,8,-2,10,-3,2,4,2,-9,-10,-7,8,5,9,5,-8,8,9,-8,4,5,-7,-5,5,-1,-2,-1,10,6,3,-7,8,-7,-7,-5,-6,6,9,2,7,10,-2,2,6,-1,-1,10,-6,-8,3,4,4,-5,-1,-7,-2,2,8,6,-3,-3,-9,-6,3,6,7,-5,9,-4,-7,-1,-7,-5,-6,-9,9,-5,-4,-3,-7,2,10,7,-9,10,-1,7,3,-1,2,-9,-1,-1,-7,1,-5,10,-2,5,-7,7,5,5,5,-8,-7,10,-1,-4,-5,-4,8,4,-2,-1,-3,10,4,7,-3,-6,1,-10,-7,3,-7,-10,5,-7,4,-10,8,-8,-3,-4,9,-9,-8,-5,1,-6,-6,-5,2,-8,2,7,7,-4,10,9,10,2,-4,10,4,6,-4,-1,-3,-5,8,-6,-7,5,8,9,-1,3,-7,-3,-1,-2,-9,1,5,-8,-10,-8,-5,-6,-1,3,7,9,1,6,-2,8,3,-7,5,-1,-10,-4,6,-1,5,8,10,-6,1,4,2,7,1,-4,-9,-3,-8,7,-7,10,2,3,-7,-4,3,-2,-10,-2,4,9,-5,-4,9,6,10,7,-3,-4,9,9,-8,1,-1,-10,1,8,-4,-6,2,1,7,3,-8,10,-5,-3,1,10,7,7,-1,-1,-5,-10,-8,-10,8,-4,-8,-6,-3,-5,-3,6,-7,5,8,-3,-4,2,3,-6,3,7,-4,6,4,-2,10,-4,-1,-5,6,1,-10,-9,-3,1,-4,-9,5,-6,1,-3,-5,8,-7,-2,10,2,-6,-10,-7,7,3,-10,5,5,-5,7,-7,-4,7,-9,1,6,2,6,-8,1,-1,8,-8,-2,-3,-2,5,7,4,-10,7,2,-1,-1,3,10,6,2,3,8,4,-6,-6,10,9,6,-7,7,9,8,-1,-10,8,-10,5,-7,-8,7,-6,-7,-8,-10,1,2,7,-6,10,-7,5,9,7,-8,-7,-10,-3,-7,-10,-5,-4,3,-6,-2,-4,-5,6,8,8,-8,-2,-9,5,-5,10,-6,-6,10,9,-10,-8,-1,-9,-8,6,3,4,4,-7,-2,10,5,-8,-1,4,-1,6,-9,-10,3,4,-7,-9,8,1,-5,10,10,5,-9,3,-5,10,6,-2,-8,-9,3,-8,-6,-10,2,2,-10,-3,8,-6,5,-7,-8,1,3,2,8,8,-1,-6,10,4,7,-8,-3,9,4,10,5,9,9,-6,3,10,2,-8,-4,-2,-10,-5,9,-3,-10,-5,2,6,7,-10,-6,6,-6,2,-7,-2,-7,1,3,-6,-5,-9,-5,10,-7,-6,-1,-4,-9,9,-1,4,-8,-3,-1,3,10,-4,-8,-10,-5,9,9,4,-8,-3,-4,8,-3,2,-9,-1,10,5,2,-3,2,-4,5,-6,-3,-3,-7,8,1,-6,-8,1,-4,5,4,2,2,-4,6,-4,-10,-3,-10,-10,2,3,-5,-7,3,-5,-4,2,5,-4,9,-9,7,-7,-4,9,-3,7,7,6,-9,-6,8,-8,-5,5,2,-2,-5,-7,-5,6,-9,5,10,-5,-4,2,10,-6,-4,-8,2,-7,-10,-7,-9,5,9,-3,3,8,10,9,1,4,6,-4,-5,-5,-3,1,7,-1,6,-5,-1,-8,4,10,3,-3,-9,7,-5,-8,7,2,5,-8,9,-2,6,-1,9,8,-9,-1,7,2,-2,-2,-10,-1,-10,-8,2,-9,-1,-9,-6,-2,-5,1,3,-5,4,4,-6,10,3,6,1,-4,-8,5,-7,8,2,-7,5,-1,-1,-4,1,-2,-4,-2,4,9,8,-7,-1,-8,-6,-9,6,1,-7,2,-1,-4,3,-1,-1,-10,-2,-3,-9,5,7,6,4,-1,-2,-8,-9,9,-6,10,3,-6,4,10,-2,1,-9,-3,6,-1,-8,3,-9,1,5,5,-1,4,10,-3,9,2,-2,-8,-2,7,9,-9,-2,-6,-4,-6,-1,4,-4,-2,10,-8,2,9,6,3,-3,6,5,-4,-2,-5,1,-2,6,-6,1,-7,10,4,1,3,-10,-1,8,3,8,-5,-7,3,-3,10,-5,-7,-4,-2,8,10,2,-2,-1,-4,-3,7,6,-3,-1,4,-9,-2,4,9,7,2,3,4,9,4,-5,-1,-2,-1,-7,-10,8,1,-6,-5,-2,-6,1,10,6,-1,6,3,8,3,-10,4,-7,-3,-7,-7,5,3,-1,-7,6,9,4,10,-7,7,-7,9,-8,-8,1,2,-1,4,-8,1,3,-6,4,-6,10,-10,6,5,-2,-7,-10,-10,5,-5,9,9,-7,-6,2,4,9,2,-5,-9,10,1,6,3,5,6,-3,5,-1,-1,-5,6,-10,9,-3,-4,4,-5,5,4,3,4,-5,5,10,-9,-10,-10,3,-8,8,3,5,4,5,2,10,-3,-4,2,-4,-10,-8,-9,-2,1,-8,3,10,3,-7,-3,-10,-3,7,-10,-6,9,3,-7,4,-6,-10,-6,-8,8,-6,4,9,2,-3,-1,3,3,10,2,7,8,8,-10,5,-6,8,6,-9,7,1,9,10,1,-3,5,4,9,-7,10,6,-10,-8,-4,-5,9,9,-9,3,8,-6,7,-6,1,5,3,9,-6,10,-6,-10,-10,-4,-9,-2,2,-2,5,5,-1,-7,-2,10,7,-7,-6,7,-6,-6,5,-4,5,6,-1,-5,-9,-9,-3,8,-10,3,2,1,-1,4,6,-5,-1,-8,-9,-9,7,1,6,10,-4,1,10,-5,8,1,9,-4,6,-7,6,5,-3,-3,-6,6,-3,8,-6,8,-6,9,-2,8,-6,5,10,-5,-6,3,-3,-6,3,-2,10,-6,-9,-2,9,-1,4,6,5,6,-4,-7,-5,5,-8,-8,9,3,-8,-10,-4,3,-6,1,-4,5,3,5,5,-7,-7,1,8,5,-10,6,-6,3,9,3,10,-1,2,-2,-6,-9,-5,-10,-6,-2,9,-10,6,7,5,1,10,8,-8,8,-1,-10,9,1,6,-2,1,10,-3,-5,8,6,7,-1,-6,10,8,-6,-1,-4,10,2,8,-1,8,1,-3,6,-3,-5,-6,8,7,4,-3,-7,-4,6,-10,3,4,-3,-3,7,6,6,-8,-7,-10,-7,9,6,2,3,1,-9,2,-4,-3,-10,2,10,-10,-7,5,-1,-7,-8,-1,2,-7,-8,4,-3,-2,5,-6,-6,-1,-5,8,-3,-5,5,-9,7,-7,-6,-7,-2,-9,3,-4,-2,-3,-1,4,-5,2,4,-6,-1,6,-5,-4,9,4,1,-2,-2,1,-5,9,4,9,-5,1,-7,-3,9,1,-3,4,2,-6,-1,10,-1,-6,-2,-5,10,-5,4,-1,-7,2,7,3,-2,-6,5,-8,6,-3,1,-7,5,-7,-10,-1,1,9,9,-9,-3,3,2,-6,7,9,9,-8,10,3,-6,-8,-10,-4,1,8,-8,-1,2,1,9,7,9,-2,3,-10,-2,7,-5,10,4,-9,-1,-5,10,-4,9,6,-9,7,-6,2,-5,-1,-1,8,9,8,-8,2,-10,-6,10,-4,-4,2,8,-9,4,-3,9,10,9,-7,-2,6,9,-10,-5,7,-7,-9,-6,8,-8,-7,-4,-4,-5,-1,-4,-9,-8,2,-3,-5,10,5,-2,-6,-6,7,9,5,6,3,3,-3,-10,6,-5,-4,-5,-3,-4,7,-3,1,6,8,-4,-2,-2,7,3,5,-4,-5,10,6,-6,-5,5,-8,6,5,-6,8,-5,10,-10,-5,6,3,-5,-3,10,-7,5,-10,-3,2,1,9,-5,-3,6,9,-6,-9,1,-10,-9,10,4,9,-2,-9,9,10,-5,-10,8,4,-4,-5,-4,-8,5,10,-7,-7,8,-3,-1,4,5,-8,5,-7,4,4,10,-2,-1,2,-1,-8,-6,7,-5,5,5,10,-5,9,-10,7,8,-3,-4,-8,8,4,-8,-1,-4,-10,8,-8,-7,-2,1,-9,1,-7,-10,9,-10,10,-4,8,7,-6,8,-10,3,3,3,5,5,10,7,-1,-2,5,-4,-3,-3,-6,5,7,7,-3,4,-8,-10,-2,8,5,6,6,-5,1,-8,-8,-2,-10,-6,1,1,-7], dtype = "uint32")#candidate|6491|(2880,)|const|uint32
call_6490 = relay.TupleGetItem(func_5967_call(relay.reshape(const_6491.astype('uint32'), [16, 15, 12]), relay.reshape(const_6491.astype('uint32'), [16, 15, 12]), ), 0)
call_6492 = relay.TupleGetItem(func_5971_call(relay.reshape(const_6491.astype('uint32'), [16, 15, 12]), relay.reshape(const_6491.astype('uint32'), [16, 15, 12]), ), 0)
uop_6495 = relay.exp(var_6482.astype('float32')) # shape=(16, 3, 4)
output = relay.Tuple([bop_6483,call_6487,var_6488,call_6490,const_6491,uop_6495,])
output2 = relay.Tuple([bop_6483,call_6489,var_6488,call_6492,const_6491,uop_6495,])
func_6514 = relay.Function([var_6481,var_6482,var_6488,], output)
mod['func_6514'] = func_6514
mod = relay.transform.InferType()(mod)
var_6515 = relay.var("var_6515", dtype = "int64", shape = (1, 3, 4))#candidate|6515|(1, 3, 4)|var|int64
var_6516 = relay.var("var_6516", dtype = "int64", shape = (16, 3, 4))#candidate|6516|(16, 3, 4)|var|int64
var_6517 = relay.var("var_6517", dtype = "float64", shape = (300,))#candidate|6517|(300,)|var|float64
output = func_6514(var_6515,var_6516,var_6517,)
func_6518 = relay.Function([var_6515,var_6516,var_6517,], output)
mutated_mod['func_6518'] = func_6518
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6549 = relay.var("var_6549", dtype = "int32", shape = (9, 10, 15))#candidate|6549|(9, 10, 15)|var|int32
const_6550 = relay.const([[[10,6,-8,3,-9,7,-4,-5,-9,-7,-8,9,-7,7,-9],[-5,2,2,-4,-1,3,-5,8,-7,1,-10,-8,10,-9,5],[9,-8,3,3,6,-2,-4,9,9,1,-8,8,9,1,2],[8,8,-4,-6,8,-5,-5,7,10,-8,3,-3,3,-8,-2],[2,2,5,-9,-5,7,7,-8,5,-10,1,10,6,-8,8],[3,-1,8,-2,-9,5,-6,9,7,-2,-7,-2,-6,10,1],[3,8,10,10,-6,-9,-6,-3,9,-8,-9,-3,-2,9,3],[10,7,-2,5,-9,4,1,-6,-4,6,-7,7,-8,-1,10],[9,3,-9,3,8,4,1,-1,-10,4,-9,3,-1,6,7],[7,8,-2,-5,-1,-8,-5,8,7,-5,6,-10,-1,-9,4]],[[-4,2,10,-1,10,10,-4,-6,-2,-2,2,10,-6,-4,9],[1,-10,9,8,9,-9,3,-5,-8,1,-4,8,8,9,1],[1,-3,-6,3,2,1,8,-7,-4,-9,-6,2,1,10,-2],[-7,-2,4,-5,-9,6,2,-5,-6,-5,5,-2,-5,-7,-10],[-3,-9,-7,2,-9,-1,-2,-8,2,-5,-1,-8,7,5,-6],[2,1,-6,-6,2,-9,8,-8,8,2,-6,-6,-7,6,9],[-8,3,2,-10,8,-2,9,-10,-8,-6,6,5,-6,4,-6],[-6,-4,4,8,2,9,5,-6,6,5,-6,4,2,-6,2],[1,-6,6,-9,-7,-2,-7,-6,-2,-10,-4,10,10,6,8],[7,5,-2,-5,-5,4,-9,-4,7,-9,5,-5,-9,-4,-10]],[[4,-2,1,2,-7,-8,-4,-5,4,-6,-8,4,5,8,-2],[-4,8,-9,-1,6,-8,10,-1,-2,-6,-8,1,-10,9,8],[8,10,-9,6,-8,10,5,1,5,-1,-4,-7,-2,1,-5],[-3,-10,-1,-9,-1,-9,6,2,-2,-1,-8,-3,-7,-2,-8],[-7,1,3,-8,-1,3,9,4,5,10,10,-10,-3,-7,5],[-3,6,10,8,-4,-7,10,6,-9,1,-6,7,3,-3,8],[-8,2,7,-5,-2,-5,-8,8,1,5,-7,3,7,8,6],[1,7,10,-7,-8,-6,9,9,5,7,2,-1,1,-10,-1],[5,2,5,-5,-7,-3,-7,6,-2,-6,3,4,-2,3,4],[-8,-7,-10,-10,-5,9,1,-4,9,-10,-6,2,8,-7,-4]],[[6,-1,-10,-5,7,1,-10,9,1,-2,5,-5,-10,-1,-5],[-7,6,-4,-8,-1,9,-8,-6,6,8,-8,6,10,-6,10],[-7,-2,4,1,5,4,4,6,10,7,8,3,-1,-7,-5],[8,-3,-4,6,-8,9,-6,5,-3,2,4,-7,3,9,5],[-8,-5,3,7,-5,2,-6,-7,8,7,-3,-9,6,-8,-1],[-9,6,-1,3,10,-2,4,-1,-10,-4,-9,8,7,10,-10],[-6,4,-5,1,-3,-8,5,7,-4,5,4,4,3,-5,-7],[-8,4,-5,4,-6,8,4,-7,-1,5,-2,-1,-10,-10,-9],[-2,9,8,-4,9,1,-8,-5,3,-8,2,-1,8,1,-8],[2,9,7,-5,-2,-3,-4,-8,-7,-4,1,-7,-3,6,1]],[[-4,6,-4,9,-4,-6,3,-9,8,4,-3,10,-9,-2,-6],[-1,-6,2,-9,-1,-3,1,6,9,-8,-8,7,-8,2,1],[3,-6,6,10,10,-8,8,-3,1,-8,4,-9,-5,-7,-7],[3,-10,-10,9,-4,1,6,-3,-4,10,5,-2,-4,3,2],[-10,1,-5,6,9,5,-4,-1,-9,-3,-9,-10,5,7,-5],[-8,-5,-5,-10,-4,-3,-10,9,3,-6,-4,7,7,-10,-9],[-3,-2,-8,9,-9,6,2,-8,7,7,-10,-2,7,-8,-6],[-3,-6,9,1,-3,-9,-2,-6,1,2,1,-9,8,2,6],[-2,7,6,-5,4,-9,8,-5,2,10,-2,-5,-3,10,8],[5,6,2,-10,3,5,-6,-3,-9,-6,10,-1,-2,9,-10]],[[-9,1,-7,-9,9,10,4,-9,8,2,9,4,9,4,8],[-7,1,2,8,-6,3,-3,3,-6,3,4,1,2,2,10],[-4,-6,-2,4,10,-10,-7,4,6,10,7,3,-2,8,3],[-5,-4,3,-9,-7,-8,-4,10,4,5,7,-9,-9,-7,6],[-6,8,-2,-3,7,-10,7,-9,-1,4,6,9,4,-8,-9],[-3,-5,-3,2,-8,8,-4,-3,1,-6,3,10,7,1,7],[10,-5,10,4,3,-3,-1,5,9,-9,3,-7,3,9,1],[-6,-3,-8,8,-5,3,10,-4,-9,3,10,-9,10,-2,7],[-2,-6,5,-8,-5,2,2,3,8,-8,9,8,-4,-9,-7],[2,1,-4,2,-7,-6,7,2,-3,2,-3,9,1,10,-2]],[[8,4,-1,-6,-2,-8,-4,8,4,10,3,1,5,-7,-1],[9,2,9,-4,4,9,-6,-8,-3,-8,-10,-4,-6,10,1],[-2,-1,4,6,6,-3,4,10,-8,4,-3,10,7,8,9],[1,2,6,3,-3,1,-3,-9,-7,-3,-4,7,-6,10,-2],[-3,-8,4,-10,-5,-5,1,3,9,7,-3,8,5,-4,8],[-1,10,8,5,-10,-3,9,1,3,4,-1,3,6,-5,-10],[-6,-8,4,10,-5,2,-5,1,-4,7,-6,-4,-2,-6,9],[-2,1,-3,5,4,6,-8,-8,-1,5,2,-8,2,-5,7],[-6,-2,8,-2,1,-4,4,9,9,6,-8,5,3,8,-6],[5,-5,-9,-2,-7,-6,1,-1,4,10,5,-6,-6,10,10]],[[-6,-7,10,3,8,-9,10,-6,10,-2,10,8,10,7,-7],[-5,2,3,10,7,9,4,-4,10,-10,6,-2,8,-8,1],[1,-8,7,-6,1,-5,-9,-10,9,9,-6,9,-9,9,1],[-3,-5,-9,6,7,9,10,1,1,3,9,-4,9,-7,-1],[8,3,8,-6,-7,6,7,4,-9,9,-6,3,-9,1,1],[-4,-7,4,1,10,3,4,3,1,2,3,-8,-7,-7,5],[-10,6,-10,-3,-10,-6,10,-4,-7,-4,-5,-8,1,4,-4],[7,9,-3,6,7,2,1,-5,-6,2,-1,7,9,-5,-8],[-1,-6,10,9,-7,10,-4,-3,5,-9,-9,3,-2,-6,7],[-9,-10,-1,4,4,10,3,6,1,3,-10,2,10,8,-4]],[[-1,5,8,2,8,3,2,2,-2,-1,4,-7,3,-4,-5],[-5,-1,-8,6,1,5,-2,2,5,8,8,5,10,-5,10],[5,4,6,5,9,-8,1,-1,5,-4,-2,-6,-8,-7,-5],[2,-4,3,8,4,3,-4,-3,7,1,-4,6,9,8,-8],[5,-10,6,-1,-3,-4,8,-3,2,-2,3,-5,-5,4,2],[-6,-2,6,-2,-2,3,-5,3,5,-10,-6,2,-2,6,10],[-8,5,-5,-7,9,5,-5,-6,-8,4,7,-9,-1,-5,10],[7,4,-7,-6,-9,6,-8,2,-1,-4,-8,-5,7,9,7],[9,-7,-7,-5,3,-7,-8,1,-8,2,-9,2,-7,-2,-2],[8,-2,-6,1,9,5,-4,2,5,-8,-3,-7,-3,-3,-1]]], dtype = "int32")#candidate|6550|(9, 10, 15)|const|int32
bop_6551 = relay.less_equal(var_6549.astype('bool'), relay.reshape(const_6550.astype('bool'), relay.shape_of(var_6549))) # shape=(9, 10, 15)
output = bop_6551
output2 = bop_6551
func_6567 = relay.Function([var_6549,], output)
mod['func_6567'] = func_6567
mod = relay.transform.InferType()(mod)
var_6568 = relay.var("var_6568", dtype = "int32", shape = (9, 10, 15))#candidate|6568|(9, 10, 15)|var|int32
output = func_6567(var_6568)
func_6569 = relay.Function([var_6568], output)
mutated_mod['func_6569'] = func_6569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mod.get_global_var('func_3485')
func_3487_call = mutated_mod.get_global_var('func_3487')
call_6573 = relay.TupleGetItem(func_3485_call(), 0)
call_6574 = relay.TupleGetItem(func_3487_call(), 0)
const_6578 = relay.const([[[-6.855165,8.215298,-9.037616,3.286092,-8.045808],[3.598835,8.248851,5.493242,8.027758,-9.228170],[-4.311651,-8.887736,-6.396015,-5.604555,0.696267],[8.530842,-8.254042,-3.858266,1.444882,-6.891809],[-0.238596,-2.583338,1.199764,-3.718050,-8.322979]],[[-4.467838,-8.467735,-4.946249,-3.970573,-9.574559],[-5.512077,0.698478,-9.636380,8.434586,0.099421],[8.276324,6.410762,-8.799907,-6.310732,2.069130],[5.522970,8.648395,7.982175,-6.482428,-0.077596],[0.045031,8.561637,1.011057,1.755549,1.906489]],[[6.065826,-4.635588,-9.505580,3.470763,1.423702],[0.165849,-1.437343,-0.324632,-7.914368,4.621323],[8.933472,3.303393,-9.155289,-9.073289,6.135844],[-4.462460,1.853520,5.928362,6.535456,-4.077674],[6.093669,5.228838,-5.268920,6.853711,9.977595]],[[-4.340016,-9.696482,7.049059,-7.257917,-8.936781],[8.963224,-5.639301,7.537611,-1.824908,2.655361],[8.602365,-1.746296,-4.925419,-4.022789,9.112393],[0.187908,-4.835232,8.115536,-4.838402,4.213937],[9.199289,8.793259,2.351552,1.186217,-9.725211]],[[-0.882040,3.821656,-5.789720,-5.210736,-7.002509],[-8.707046,8.481781,6.392107,-9.956701,-2.539009],[-6.400546,-1.747601,-0.951593,-5.602258,6.927229],[-8.384006,-7.735853,-4.031523,7.847431,2.761389],[-3.960853,9.662646,-4.017293,-8.112989,-7.598204]],[[-6.461443,-0.332562,1.562277,0.870635,-5.077873],[-7.335053,-0.439148,6.641941,7.555853,5.863767],[-9.215369,8.790875,5.152645,-3.672684,-5.565831],[2.227813,3.730675,-3.269524,-6.146889,-7.504681],[-6.700914,3.077854,0.388309,-1.733344,0.435892]],[[5.399023,7.038577,-4.499223,-4.400438,8.339807],[0.117060,1.836711,-2.150103,9.534216,6.515492],[-4.851875,-6.971780,2.054507,-4.292544,4.343627],[8.103641,1.283468,2.375336,-6.175099,-2.628583],[-1.596249,-5.434616,-3.596669,8.757017,9.654609]],[[2.549273,5.356976,1.307472,5.520282,-6.337121],[1.580509,3.715577,-5.933046,-4.658406,-9.452241],[-0.004125,2.582500,-4.331911,-7.691836,1.606003],[1.471401,8.893573,5.422223,6.001732,-0.270452],[6.562957,6.391107,-6.906812,6.668179,-8.529597]],[[2.382942,-8.451986,2.230153,-4.091926,8.427816],[5.366853,-2.275456,1.647847,2.001752,-9.401675],[-5.301202,-2.243258,-0.130455,6.676430,2.685396],[0.990773,8.016316,0.500492,-7.826815,-7.506473],[-5.625855,-2.459388,-2.242893,-2.202949,-7.070132]],[[7.833030,-6.716695,7.245875,-8.408470,-0.586237],[-3.951970,-9.861451,1.943013,4.757603,4.736118],[3.056967,5.204027,-6.748010,4.074242,-2.378924],[9.304289,-3.995030,3.027075,-4.498658,3.531031],[9.260449,-5.992136,7.565948,-5.839101,4.283096]],[[-8.211758,7.371728,3.157031,3.357097,-8.963802],[-4.363286,2.296140,2.601571,-3.363493,-3.682918],[-1.832839,-8.951659,1.888846,-3.726546,-3.185587],[9.802137,7.161034,-9.768622,-8.990017,3.828576],[5.477856,-4.093370,5.374310,6.628708,1.441534]],[[9.934900,-6.082570,-4.072938,2.408538,7.668140],[-4.919267,-5.858667,4.912369,-3.143354,-6.987493],[-3.842995,-5.771225,-1.884298,-0.919374,7.057625],[4.920652,8.832932,-6.279680,7.045431,-4.798306],[6.380426,7.235689,-0.920771,2.335586,-9.449515]]], dtype = "float32")#candidate|6578|(12, 5, 5)|const|float32
bop_6579 = relay.power(call_6573.astype('float64'), relay.reshape(const_6578.astype('float64'), relay.shape_of(call_6573))) # shape=(12, 5, 5)
bop_6582 = relay.power(call_6574.astype('float64'), relay.reshape(const_6578.astype('float64'), relay.shape_of(call_6574))) # shape=(12, 5, 5)
func_6514_call = mod.get_global_var('func_6514')
func_6518_call = mutated_mod.get_global_var('func_6518')
var_6584 = relay.var("var_6584", dtype = "int64", shape = (12,))#candidate|6584|(12,)|var|int64
const_6585 = relay.const([8,9,8,7,-6,10,-6,-3,-4,-4,-4,-3,1,-10,-3,-4,-8,8,-10,1,-1,7,3,-10,8,3,7,10,1,6,8,8,2,1,1,7,2,-9,-5,-1,5,7,-9,9,-7,-7,-4,1,1,9,4,3,-1,1,9,8,-4,-5,2,-5,8,5,7,1,10,1,5,7,4,3,10,9,-6,8,-8,-6,7,2,7,-3,3,-10,5,6,5,-5,1,-8,-8,-5,-1,7,-4,1,2,8,-7,-6,8,-2,-1,8,2,-9,6,9,8,-5,-4,-4,10,4,2,10,3,-3,-10,8,-8,-10,-2,-2,-6,-3,-3,7,-10,-1,-2,-2,-2,9,5,1,6,-10,2,-9,10,9,8,9,8,10,-2,6,7,-5,5,-10,9,9,3,-2,-9,-10,-8,7,-8,7,-9,-3,10,-1,-4,-4,-2,-6,1,9,8,9,8,-3,4,8,5,-2,-9,-8,5,-6,4,-3,10,7,3,6,-3,-10,1,10], dtype = "int64")#candidate|6585|(192,)|const|int64
call_6583 = relay.TupleGetItem(func_6514_call(relay.reshape(var_6584.astype('int64'), [1, 3, 4]), relay.reshape(const_6585.astype('int64'), [16, 3, 4]), relay.reshape(call_6573.astype('float64'), [300,]), ), 4)
call_6586 = relay.TupleGetItem(func_6518_call(relay.reshape(var_6584.astype('int64'), [1, 3, 4]), relay.reshape(const_6585.astype('int64'), [16, 3, 4]), relay.reshape(call_6573.astype('float64'), [300,]), ), 4)
func_6152_call = mod.get_global_var('func_6152')
func_6155_call = mutated_mod.get_global_var('func_6155')
var_6606 = relay.var("var_6606", dtype = "uint32", shape = ())#candidate|6606|()|var|uint32
call_6605 = relay.TupleGetItem(func_6152_call(relay.reshape(var_6606.astype('uint32'), [])), 0)
call_6607 = relay.TupleGetItem(func_6155_call(relay.reshape(var_6606.astype('uint32'), [])), 0)
output = relay.Tuple([bop_6579,call_6583,var_6584,const_6585,call_6605,var_6606,])
output2 = relay.Tuple([bop_6582,call_6586,var_6584,const_6585,call_6607,var_6606,])
func_6615 = relay.Function([var_6584,var_6606,], output)
mod['func_6615'] = func_6615
mod = relay.transform.InferType()(mod)
mutated_mod['func_6615'] = func_6615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6615_call = mutated_mod.get_global_var('func_6615')
var_6617 = relay.var("var_6617", dtype = "int64", shape = (12,))#candidate|6617|(12,)|var|int64
var_6618 = relay.var("var_6618", dtype = "uint32", shape = ())#candidate|6618|()|var|uint32
call_6616 = func_6615_call(var_6617,var_6618,)
output = call_6616
func_6619 = relay.Function([var_6617,var_6618,], output)
mutated_mod['func_6619'] = func_6619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3695_call = mod.get_global_var('func_3695')
func_3696_call = mutated_mod.get_global_var('func_3696')
call_6630 = relay.TupleGetItem(func_3695_call(), 0)
call_6631 = relay.TupleGetItem(func_3696_call(), 0)
output = relay.Tuple([call_6630,])
output2 = relay.Tuple([call_6631,])
func_6637 = relay.Function([], output)
mod['func_6637'] = func_6637
mod = relay.transform.InferType()(mod)
mutated_mod['func_6637'] = func_6637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6637_call = mutated_mod.get_global_var('func_6637')
call_6638 = func_6637_call()
output = call_6638
func_6639 = relay.Function([], output)
mutated_mod['func_6639'] = func_6639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_6802 = func_2356_call()
call_6803 = func_2356_call()
uop_6806 = relay.sin(call_6802.astype('float32')) # shape=(5, 1, 2)
uop_6808 = relay.sin(call_6803.astype('float32')) # shape=(5, 1, 2)
output = relay.Tuple([uop_6806,])
output2 = relay.Tuple([uop_6808,])
func_6809 = relay.Function([], output)
mod['func_6809'] = func_6809
mod = relay.transform.InferType()(mod)
mutated_mod['func_6809'] = func_6809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6809_call = mutated_mod.get_global_var('func_6809')
call_6810 = func_6809_call()
output = call_6810
func_6811 = relay.Function([], output)
mutated_mod['func_6811'] = func_6811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6202_call = mod.get_global_var('func_6202')
func_6204_call = mutated_mod.get_global_var('func_6204')
call_6815 = func_6202_call()
call_6816 = func_6202_call()
func_4610_call = mod.get_global_var('func_4610')
func_4613_call = mutated_mod.get_global_var('func_4613')
const_6853 = relay.const(8, dtype = "int64")#candidate|6853|()|const|int64
call_6852 = relay.TupleGetItem(func_4610_call(relay.reshape(const_6853.astype('int64'), [])), 1)
call_6854 = relay.TupleGetItem(func_4613_call(relay.reshape(const_6853.astype('int64'), [])), 1)
func_6075_call = mod.get_global_var('func_6075')
func_6077_call = mutated_mod.get_global_var('func_6077')
call_6855 = relay.TupleGetItem(func_6075_call(), 0)
call_6856 = relay.TupleGetItem(func_6077_call(), 0)
func_568_call = mod.get_global_var('func_568')
func_572_call = mutated_mod.get_global_var('func_572')
call_6862 = relay.TupleGetItem(func_568_call(relay.reshape(const_6853.astype('uint32'), []), relay.reshape(call_6852.astype('float32'), [792,]), ), 0)
call_6863 = relay.TupleGetItem(func_572_call(relay.reshape(const_6853.astype('uint32'), []), relay.reshape(call_6852.astype('float32'), [792,]), ), 0)
output = relay.Tuple([call_6815,call_6852,const_6853,call_6855,call_6862,])
output2 = relay.Tuple([call_6816,call_6854,const_6853,call_6856,call_6863,])
func_6870 = relay.Function([], output)
mod['func_6870'] = func_6870
mod = relay.transform.InferType()(mod)
output = func_6870()
func_6871 = relay.Function([], output)
mutated_mod['func_6871'] = func_6871
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6902 = relay.const([[[-5.514677,-7.438611,0.413321,7.202186,-3.735090,-5.596543,-6.796130,3.225640,-9.364541,5.971734],[-3.533841,-8.899235,-8.207021,9.400018,-5.919996,-5.422800,7.639950,-8.255252,4.820918,2.190729],[9.585306,8.933828,-2.753408,-3.758937,-0.986448,3.864790,2.496199,0.674666,-1.604240,3.807108],[5.786880,6.904557,-3.529915,-4.448210,3.615995,1.827184,7.757058,-7.023325,-1.052204,0.858119],[-3.537298,2.458993,-1.079873,9.037091,1.505066,-9.427329,-6.374461,6.673674,9.452867,1.781878],[-4.143795,9.878139,9.072856,7.907256,5.577210,3.932938,6.181335,2.469519,6.373233,-5.552571],[9.546367,-2.743424,-9.758868,1.020175,3.164786,-0.990875,5.034634,2.359189,-4.160386,-8.216798],[5.429062,3.134240,-3.643187,1.916275,-1.620405,-5.089344,-9.543789,2.088505,8.485902,-4.410777],[6.860611,-4.551702,0.437152,-8.482501,-6.308827,7.222310,-9.275469,-4.587824,4.367700,-5.020843]],[[-0.912046,-8.029147,5.561857,1.947953,-3.373857,2.078839,1.858846,-3.795300,-0.823989,-6.901999],[-8.937710,-4.753714,-7.195394,7.072701,-0.542975,8.257467,8.757941,3.848912,-8.065171,3.004316],[2.934401,-3.646558,-2.310436,8.139068,4.392184,3.713468,8.413817,-0.147798,-7.140590,9.451918],[-1.571157,8.475154,-5.437039,-8.763564,-9.879995,9.631806,8.697266,-3.720851,4.349485,-1.965663],[7.060259,-4.283882,7.865495,-2.994410,-9.682214,9.633563,6.270777,-2.100682,3.342468,-8.174357],[-2.437879,3.134576,1.029868,7.799689,0.352234,-8.882157,8.804419,8.921344,2.645929,7.219466],[-7.834703,-9.888524,8.712421,5.115637,-4.061233,-8.161157,-0.808432,-4.207715,8.973957,-3.385043],[0.779244,9.471602,8.586673,6.479848,6.113811,-6.059477,7.298376,1.849675,-1.662505,-9.954032],[-6.008522,0.205477,-9.097405,-8.583001,-2.593567,3.819648,8.075081,-1.275079,4.229001,-0.036070]],[[-4.274112,-4.212638,7.202928,8.004474,7.009707,-4.831160,-2.672144,-3.426855,7.109507,9.173806],[1.581678,5.687352,2.220648,1.740235,-1.033404,5.673750,-6.928732,-2.053141,7.245417,9.534459],[7.747042,-4.632002,-5.188232,4.360253,-8.423364,5.605363,7.488064,-4.278497,-5.601296,8.335335],[0.822684,-6.517764,7.199754,-1.712119,-6.173223,8.788364,3.081050,0.710912,-2.184422,-3.092391],[1.733090,-4.706732,-1.042152,-8.330373,-8.926170,7.422500,-3.208052,5.468239,3.225285,8.858361],[-9.485882,6.131008,-0.115496,4.411954,5.189399,5.353270,4.497015,3.976736,4.414179,-3.969123],[-9.303444,3.602462,4.540760,-4.605562,-0.921339,-6.164494,-0.226986,1.935930,2.031078,2.914416],[-8.399678,7.323797,-6.118144,4.444735,-5.380177,2.027552,-8.898317,-0.211756,0.946284,-2.714334],[-1.228691,-4.856548,-8.596555,6.412380,-6.425135,2.691833,-3.857392,-6.553573,9.421150,-2.277282]],[[-5.830424,-7.028187,-9.812159,-3.758167,9.359037,-8.680634,-4.926877,-5.757415,-1.838333,-5.865549],[-1.200627,6.505539,-2.629485,2.271691,9.201955,-8.361663,9.374576,-2.630161,9.797932,-1.055138],[9.951336,-1.690091,6.905441,6.236939,-4.204133,4.252425,5.095495,4.843039,-4.104838,7.938383],[-1.375212,3.397626,2.588899,-0.089764,4.870598,3.237891,1.990539,-5.444032,2.571381,-9.643569],[8.671044,-9.541494,-4.239253,-8.363562,2.834217,-8.966183,0.014005,6.798614,-4.825472,8.394300],[-3.391383,-0.665389,-4.668550,4.739757,-6.912336,-5.330222,3.945608,-1.563785,-1.111481,-3.351201],[8.437820,-3.557532,4.445166,1.058497,9.573494,6.639854,2.350242,3.197790,-3.427788,3.226053],[-6.453973,-2.304141,0.429773,7.927240,6.777768,4.042361,-7.701994,-2.042825,9.906994,7.902070],[-4.504073,7.529349,6.230765,-1.233980,4.096293,-0.521301,7.094596,2.187627,-9.906145,-1.481665]],[[-0.556792,-6.570223,8.185108,-8.165837,-8.461417,8.873559,-5.291936,-7.214155,7.247495,9.004746],[1.654622,-5.958731,-3.737598,3.958384,-6.624561,6.718821,4.797057,-6.773224,-0.439927,9.361397],[-8.023639,4.687630,5.484121,-5.634179,-9.020671,9.111417,-1.423942,-0.847133,7.336299,3.730381],[-4.254616,8.835267,-0.507378,-5.162836,-4.751860,9.237158,4.251960,-6.811080,-2.027977,5.086842],[-6.088992,-9.179332,2.847221,-9.615157,-9.216961,-6.445933,-9.896321,-2.406963,4.218012,4.570620],[3.346028,3.356077,2.188040,7.066925,-7.528849,5.077196,-1.228276,4.024784,-9.956056,-9.719212],[8.436136,2.446858,-3.157432,-9.268734,1.343009,-4.343128,-5.231836,4.570381,5.558561,-4.141164],[6.119060,-8.899781,1.534453,7.135723,3.334543,0.460721,8.120519,-2.966489,-3.577408,6.146834],[-5.664525,-5.202692,3.815177,6.463856,3.442413,9.036721,2.744305,-1.091415,7.559590,-1.177743]],[[8.183809,-6.630027,2.006088,2.890872,9.763026,7.056031,-2.527464,7.450307,4.151050,-2.171232],[-4.017198,5.287040,7.059978,-7.412253,-6.607356,-8.010872,-1.967549,-7.645407,7.180583,-4.165484],[-7.878576,3.648754,6.633852,8.792366,0.238909,0.432654,4.752430,1.777127,-5.232286,2.414530],[-4.083938,3.921351,-8.924355,-4.361665,9.488559,2.167577,-4.686444,-5.147863,0.056209,-3.583499],[8.959032,-9.115690,1.979849,6.767335,8.688123,-1.167963,-3.857009,6.344637,6.291517,6.260424],[-4.016211,-7.611738,9.568753,-6.529654,-8.180028,2.667451,5.792182,-1.911709,8.389054,-2.209278],[4.447117,-0.691128,-8.559266,-7.048116,-8.231278,-6.857431,-4.259353,7.362011,3.419855,-3.150502],[8.934211,8.783880,1.618199,8.581429,-3.956090,-0.654652,-8.149822,1.444018,-9.480227,-3.811583],[5.275514,0.475235,2.489206,7.340588,-2.805311,3.119951,8.892946,-0.095093,-4.223272,4.987637]],[[-7.795047,-0.877255,0.885490,2.750405,-7.672632,-3.846136,0.481559,0.380543,-1.409601,8.786386],[6.740756,-2.897489,-4.810414,5.396409,-0.386623,3.499049,-5.040763,2.335384,5.264691,1.412742],[-6.297889,-4.584248,1.336886,9.215053,-0.818856,8.871809,5.541036,6.502032,-0.698176,-2.661272],[3.043451,8.520340,-1.026793,2.437805,-6.168821,0.979654,-7.340651,-4.086671,9.058721,-6.019901],[-2.667904,2.484504,4.786746,1.166597,-2.487713,6.258192,6.635347,9.244868,5.344024,-1.088074],[-5.864794,8.470927,6.419935,-5.627717,8.001981,-7.876645,-2.610051,6.918794,-8.207732,-5.457514],[-9.506540,7.285083,-1.594565,2.411955,9.887341,2.138738,5.744671,3.166394,-8.350632,-1.958437],[-7.197201,-7.935701,-8.659934,-2.919489,-7.721877,3.769395,-7.623354,8.027034,-4.423862,8.406387],[-6.164664,5.733630,8.886477,-7.110683,-1.402018,5.693991,9.036884,-0.432595,9.899149,5.631733]],[[3.854147,-7.435405,4.314789,-0.038840,6.503711,7.317031,1.370273,5.056567,1.916825,-6.823029],[-4.663154,-7.770225,3.222689,-5.302547,-1.492203,4.993772,-0.631912,6.820802,1.489413,3.123074],[8.070242,-4.912482,7.397922,3.502815,3.871016,6.100891,5.470395,4.228710,-5.611144,2.132868],[4.162731,-3.425653,6.880688,7.245418,3.403005,2.637694,-9.907068,5.701209,4.077433,-3.221787],[9.577821,6.622570,-1.179817,5.240812,-3.286849,7.308065,9.314798,8.538246,9.162700,8.096545],[-9.044938,-5.130500,-7.599211,-8.288165,-9.310673,-7.058857,-2.887466,5.673938,1.777519,1.820270],[4.315736,4.009056,-4.210442,4.286626,-8.930765,3.452793,7.895220,6.921768,2.042756,-4.111001],[-0.708322,5.618104,-3.059208,6.737044,-5.394896,8.865604,8.814174,-4.734494,3.820711,-1.180759],[2.105655,-7.498857,4.018170,-9.357975,-0.127157,-3.315649,-5.113641,6.359207,-4.409113,-4.225029]]], dtype = "float32")#candidate|6902|(8, 9, 10)|const|float32
uop_6903 = relay.log(const_6902.astype('float32')) # shape=(8, 9, 10)
output = uop_6903
output2 = uop_6903
func_6910 = relay.Function([], output)
mod['func_6910'] = func_6910
mod = relay.transform.InferType()(mod)
mutated_mod['func_6910'] = func_6910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6910_call = mutated_mod.get_global_var('func_6910')
call_6911 = func_6910_call()
output = call_6911
func_6912 = relay.Function([], output)
mutated_mod['func_6912'] = func_6912
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6964 = relay.var("var_6964", dtype = "float32", shape = (7, 11, 3))#candidate|6964|(7, 11, 3)|var|float32
uop_6965 = relay.asin(var_6964.astype('float32')) # shape=(7, 11, 3)
output = uop_6965
output2 = uop_6965
func_6971 = relay.Function([var_6964,], output)
mod['func_6971'] = func_6971
mod = relay.transform.InferType()(mod)
var_6972 = relay.var("var_6972", dtype = "float32", shape = (7, 11, 3))#candidate|6972|(7, 11, 3)|var|float32
output = func_6971(var_6972)
func_6973 = relay.Function([var_6972], output)
mutated_mod['func_6973'] = func_6973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4535_call = mod.get_global_var('func_4535')
func_4536_call = mutated_mod.get_global_var('func_4536')
call_6985 = relay.TupleGetItem(func_4535_call(), 0)
call_6986 = relay.TupleGetItem(func_4536_call(), 0)
var_7006 = relay.var("var_7006", dtype = "uint16", shape = (5, 3, 2))#candidate|7006|(5, 3, 2)|var|uint16
bop_7007 = relay.logical_or(call_6985.astype('bool'), var_7006.astype('bool')) # shape=(5, 3, 2)
bop_7010 = relay.logical_or(call_6986.astype('bool'), var_7006.astype('bool')) # shape=(5, 3, 2)
output = relay.Tuple([bop_7007,])
output2 = relay.Tuple([bop_7010,])
func_7019 = relay.Function([var_7006,], output)
mod['func_7019'] = func_7019
mod = relay.transform.InferType()(mod)
var_7020 = relay.var("var_7020", dtype = "uint16", shape = (5, 3, 2))#candidate|7020|(5, 3, 2)|var|uint16
output = func_7019(var_7020)
func_7021 = relay.Function([var_7020], output)
mutated_mod['func_7021'] = func_7021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3394_call = mod.get_global_var('func_3394')
func_3396_call = mutated_mod.get_global_var('func_3396')
call_7053 = relay.TupleGetItem(func_3394_call(), 0)
call_7054 = relay.TupleGetItem(func_3396_call(), 0)
func_1978_call = mod.get_global_var('func_1978')
func_1980_call = mutated_mod.get_global_var('func_1980')
var_7069 = relay.var("var_7069", dtype = "float64", shape = (286, 6))#candidate|7069|(286, 6)|var|float64
call_7068 = relay.TupleGetItem(func_1978_call(relay.reshape(var_7069.astype('float64'), [1716,])), 3)
call_7070 = relay.TupleGetItem(func_1980_call(relay.reshape(var_7069.astype('float64'), [1716,])), 3)
output = relay.Tuple([call_7053,call_7068,var_7069,])
output2 = relay.Tuple([call_7054,call_7070,var_7069,])
func_7071 = relay.Function([var_7069,], output)
mod['func_7071'] = func_7071
mod = relay.transform.InferType()(mod)
mutated_mod['func_7071'] = func_7071
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7072 = relay.var("var_7072", dtype = "float64", shape = (286, 6))#candidate|7072|(286, 6)|var|float64
func_7071_call = mutated_mod.get_global_var('func_7071')
call_7073 = func_7071_call(var_7072)
output = call_7073
func_7074 = relay.Function([var_7072], output)
mutated_mod['func_7074'] = func_7074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6637_call = mod.get_global_var('func_6637')
func_6639_call = mutated_mod.get_global_var('func_6639')
call_7104 = relay.TupleGetItem(func_6637_call(), 0)
call_7105 = relay.TupleGetItem(func_6639_call(), 0)
output = relay.Tuple([call_7104,])
output2 = relay.Tuple([call_7105,])
func_7108 = relay.Function([], output)
mod['func_7108'] = func_7108
mod = relay.transform.InferType()(mod)
output = func_7108()
func_7109 = relay.Function([], output)
mutated_mod['func_7109'] = func_7109
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7121 = relay.var("var_7121", dtype = "uint16", shape = ())#candidate|7121|()|var|uint16
var_7122 = relay.var("var_7122", dtype = "uint16", shape = (15, 12, 2))#candidate|7122|(15, 12, 2)|var|uint16
bop_7123 = relay.greater_equal(var_7121.astype('bool'), var_7122.astype('bool')) # shape=(15, 12, 2)
func_326_call = mod.get_global_var('func_326')
func_328_call = mutated_mod.get_global_var('func_328')
const_7128 = relay.const([1.464567,-4.190684,8.620351,8.387363,-6.694540,1.867953,3.110716,-4.311785,4.671427,0.458818,4.540897,-6.028283,-0.361426,-4.721415,3.748679,5.977154,-3.524194,-9.430344,-1.755457,8.709559,3.391093,9.957372,8.109797,3.660607,-6.990903,2.540763,6.996469,-2.341914,0.407162,7.700101,-0.845854,8.272714,8.995142,-4.803255,7.465607,-1.707312,9.854693,-4.840012,-7.737414,8.226912,-3.360316,-6.441534,-9.884449,5.307994,4.238903,7.202604,5.810667,-3.824862,-4.687934,-8.711643,-6.592457,-4.035480,-2.159162,-1.194059,0.583164,5.708188,7.416133,4.508799,0.485437,3.942055,-0.173305,-3.142510,-6.009081,-2.334671,3.619245,-2.022529,0.082620,0.157238,5.089496,-1.776924,-7.135216,-2.214367,-4.961593,7.972311,-2.365393,-6.968919,8.718305,-8.486180,-7.538372,4.626483,0.615881,2.146414,-6.817449,-5.735858,8.728010,-4.338370,5.207207,5.992467,8.758850,0.210783,6.282131,-8.058755,-1.859741,-9.195047,4.301121,-9.635340,-7.138960,3.973345,3.593330,-7.394870,9.447281,-7.497845,-5.675354,-1.759881,-8.517374,1.665555,0.855381,0.538332,4.456873,-8.988924,8.545372,6.599437,4.846098,-1.411850,9.163195,0.990997,-4.171543,0.938338,6.749229,-9.346916,6.387080,6.017572,0.681790,-8.525370,8.643452,3.607387,5.769626,-6.910382,5.265092,5.855090,7.815086,7.834725,-4.798911,-7.776269,-2.718207,-8.249472,4.849727,3.831894,-3.376418,9.351325,-6.556746,-6.653166,0.211429,-8.328723,6.325499,1.935840,-1.267882,-7.699829,4.743668,-3.679099,1.192764,9.914908,2.323285,1.105041,-3.283217,2.950099,3.488282,4.099922,-6.378465,-6.003340,8.685560,-6.558193,-2.535011,3.059268,-0.471911,-5.741638,-1.729657,-9.191376,-5.149385,9.400921,-3.986399,9.005123,-8.734545,-0.906178,3.147720,-4.019169,9.243495,-7.390813,-3.326538,9.858200,-2.759220,-3.885831,-7.918257,-9.000399,4.924937,0.198548,-5.359048,7.368124,4.361891,8.413746,-3.502121,-4.671405,-2.577490,-2.439129,-6.984545,9.298683,9.514595,9.558578,-3.711748,-8.858322,3.095312,1.536350,-0.708807,-0.733940,7.284794,-2.351098,2.982510,9.521165,-7.445308,-5.802767,5.732640,1.558370,-9.676547,-7.921777,-8.316812,-3.811476,2.164337,3.990520,-8.957359,6.614318,0.648906,-8.747445,-7.332473,-0.536296,9.886164,5.321978,1.446450,8.414236,8.507217,-4.873107,-5.419109,5.150253,5.471426,9.915887,-7.039292,8.398588,8.941505,7.727036,4.147358,-8.910114,-0.507472,4.482550,-2.631760,0.218030,2.970763,7.343663,-7.958706,1.569867,3.124636,-9.485943,9.057925,4.166654,1.343122,3.266748,-8.908853,1.814429,4.294168,-0.859601,5.997428,-2.064076,-3.922714,-1.483561,-8.242831,-9.104636,-7.544207,-9.862293,-2.526917,-5.223645,-6.857627,-1.424479,7.539804,1.653537,-3.854208,-6.676040,-8.627392,-2.342336,-8.255089,8.711448,-1.645327,-1.025178,-8.534189,8.273228,-5.179674,-7.954202,8.072998,-2.091997,-5.351096,7.960023,3.719944,-1.507764,-2.582114,-8.940327,2.069817,-5.895998,1.626947,1.692480,5.054980,-2.448284,-6.086063,-8.793893,2.450309,6.301981,-0.376973,8.536688,-5.209546,1.686820,-7.812729,-8.229409,-9.325201,-4.328135,2.939833,9.694424,-9.080949,6.387703,4.421066,-6.542406,-8.725010,-4.706930,-0.340670,-8.217884,-5.084193,-9.655431,-4.838166,-2.979399,8.791921,-6.741806,-3.077305,2.354489,-9.801416,-0.463979,-6.808297,-4.323509,-3.029045,7.279800,-7.344763,6.264901,-0.092802,-5.531385,-2.960212,3.605769,7.451758,1.814699,7.537383,-3.085466,9.840891,4.715277,4.387902,-4.147181,0.490876,-5.382301,7.101612,-5.061722,5.366950,-2.062675,9.300706,3.858744,-9.869770,9.002198,5.429035,3.197112,-2.454129,-6.158176,-7.604750,6.218736,8.191178,-0.770513,9.136048,-3.458050,2.274585,6.498001,-4.411770,6.551591,0.835090,-1.049700,-0.747864,0.312308,0.732804,-8.443729,-0.862891,0.442136,6.757367,-6.197491,-0.111164,-7.029048,-1.900462,-2.943342,-9.162818,9.807731,-7.715237,9.404237,1.962689,4.388564,-1.610706,-3.029318,1.033105,-2.019199,6.063660,-6.158406,4.536268,8.657278,-8.646875,-0.331736,5.306593,-1.527438,-5.975742,-2.001192,-0.905192,-4.661543,3.232019,6.804314,-5.620007,-1.301365,-6.656803,1.499309,1.399036,2.147452,-8.530338,-3.791410,2.232662,-3.237093,-3.560517,8.855074,-7.948334,-1.542895,5.406114,2.667921,4.263713,3.452494,-5.766236,-2.593534,-5.352354,1.926777,2.559283,-4.382092,-6.416798,-7.490873,-0.122542,2.769294,8.724230,-7.098776,8.430310,-7.342965,6.059413,-8.356298,-6.792874,9.653509,1.357931,-4.340791,8.337440,8.966562,3.597982,-9.802594,-4.807837,-6.932398,6.265904,-1.663085,-1.006013,-6.281956,-7.411120,6.338059,5.762366,9.070472,3.687809,0.756917,6.456388,-2.064415,5.706129,-4.773496,-3.247536,9.648015,6.980045,-5.678315,2.059331,-2.437855,-1.236590,-5.626084,-4.492209,-1.860821,9.188036,-8.703268,-7.496072,9.642756,-6.772155,3.067436,3.319782,-4.330919,-5.299296,-0.720225,1.030233,-3.557464,2.995700,6.631168,-3.149255,1.733399,-4.180139,-1.523467,0.114010,-8.971334,5.167812,-6.117414,-9.664628,-2.461398,-5.511229,-7.681829,9.641026,6.272323,-8.048237,-0.070509,-1.574739,-1.144502,-1.160516,6.720057,4.078044,3.104293,-1.028964,0.569617,-6.534955,0.449376,-0.488413,8.151707,-3.466399,-6.478693,9.145942,-6.026362,2.445840,-5.363928,2.099556,1.700966,0.033858,-8.226194,-4.532629,7.380513,8.668922,2.613086,-3.510904,6.475508,3.876910,3.439014,-5.815426,-8.336629,3.929279,8.099782,1.032555,7.010736,6.384602,-8.176680,0.515645,8.504341,-2.212283,-2.642904,6.282007,-0.317282,-9.649660,2.105645,3.808963,-8.162664,2.149467,0.163033,-0.222844,6.328544,-8.826393,8.851257,1.081897,-6.879537,-2.132037,2.633010,-5.937557,-6.727651,1.468607,-7.246509,-4.624249,5.670829,-1.895915,-9.187850,2.365831,4.535139,2.145556,0.502295,6.005861,-2.989829,0.050247,3.864235,4.059544,-5.738123,1.980980,9.074431,8.510819,3.376139,-6.382381,-4.362697,-8.039619,0.806141,-0.891725,-9.935680,7.073644,9.572308,-5.488038,-0.572533,6.373957,7.343273,7.064515,-0.492475,3.413321,0.448176,9.926578,-0.419805,3.237948,4.650198,-1.975975,7.605139,-4.378602,-9.752905,1.372365,5.145740,8.961205,4.557364,6.463672,5.969732,-6.352167,-2.389057,-7.825187,9.439450,2.921942,-9.457498,-7.078679,5.170095,-7.784248,-2.348914,-3.393457,-0.405025,-4.219068,3.603083,5.656664,-5.724064,3.338568,0.373953,4.011420,1.140097,0.913039,1.950696,7.626261,0.474203,-1.161929,9.279761,6.714321,5.783610,2.382333,2.609566,8.235606,-2.691766,2.378072,6.048103,-7.765862,0.346533,-9.075979,-2.406235,1.089697,7.901296,8.302986,-7.219771,7.883713,-9.962903,-8.439069,4.610177,1.054558,-4.382055,-0.917249,-4.685781,-8.916609,-6.842629,-5.603539,-8.778739,-8.616907,3.873918,-8.592475,-7.054767,3.579599,6.842144,0.763193,-6.047727,-6.840533,9.487497,-5.732843,-8.162285,5.602463,9.954685,2.243948,4.703015,7.987358,9.189136,-1.036904,6.132392,-9.496888,-4.453906,-8.658230,-7.507790,0.605188,7.133918,4.320493,3.715159,-8.117385,-5.399322,-8.611413,-1.491371,2.956082,-9.009223,0.351265,5.339952,-5.892820,1.588348,-2.893337,8.125991,1.020959,1.533048,-2.165248,5.088546,2.860635,-8.970226,3.058627,-6.846772,-2.771926,0.672526,-4.180628,8.623469,-1.117861,7.444143,9.236852,-0.396603,3.536193,5.463544,-4.471716,4.931516,3.567816,-6.845068,-9.315788,2.680414,6.931497,-9.751419,8.985117,-0.042399,5.902531,9.873508,-8.305657,1.512280,3.784004,-4.231458,-6.982672,-6.277626,2.375967,-4.195763,5.564844,4.212054,-7.312272,-5.855598,1.288822,7.877028,7.464999,7.829030,5.745173,1.716954,-4.214099,-1.396052,3.201341,-1.881906,9.027607,-4.503330,-6.675993,4.003510,-9.052590,-4.553079,-7.762424,-4.264089,-8.037335,-6.521520,-6.345701,5.431865,6.309449,4.638999,-7.416687,0.542046,3.550644,-2.384417,8.980684,-8.155168,9.897031,-9.299281,5.284564,3.171949,-3.249478,1.614228,-0.953919,6.890172], dtype = "float32")#candidate|7128|(792,)|const|float32
call_7127 = relay.TupleGetItem(func_326_call(relay.reshape(const_7128.astype('float32'), [11, 9, 8])), 0)
call_7129 = relay.TupleGetItem(func_328_call(relay.reshape(const_7128.astype('float32'), [11, 9, 8])), 0)
output = relay.Tuple([bop_7123,call_7127,const_7128,])
output2 = relay.Tuple([bop_7123,call_7129,const_7128,])
func_7139 = relay.Function([var_7121,var_7122,], output)
mod['func_7139'] = func_7139
mod = relay.transform.InferType()(mod)
var_7140 = relay.var("var_7140", dtype = "uint16", shape = ())#candidate|7140|()|var|uint16
var_7141 = relay.var("var_7141", dtype = "uint16", shape = (15, 12, 2))#candidate|7141|(15, 12, 2)|var|uint16
output = func_7139(var_7140,var_7141,)
func_7142 = relay.Function([var_7140,var_7141,], output)
mutated_mod['func_7142'] = func_7142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6351_call = mod.get_global_var('func_6351')
func_6352_call = mutated_mod.get_global_var('func_6352')
call_7262 = func_6351_call()
call_7263 = func_6351_call()
output = call_7262
output2 = call_7263
func_7273 = relay.Function([], output)
mod['func_7273'] = func_7273
mod = relay.transform.InferType()(mod)
mutated_mod['func_7273'] = func_7273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7273_call = mutated_mod.get_global_var('func_7273')
call_7274 = func_7273_call()
output = call_7274
func_7275 = relay.Function([], output)
mutated_mod['func_7275'] = func_7275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6870_call = mod.get_global_var('func_6870')
func_6871_call = mutated_mod.get_global_var('func_6871')
call_7278 = relay.TupleGetItem(func_6870_call(), 0)
call_7279 = relay.TupleGetItem(func_6871_call(), 0)
func_4082_call = mod.get_global_var('func_4082')
func_4085_call = mutated_mod.get_global_var('func_4085')
var_7291 = relay.var("var_7291", dtype = "float64", shape = (300,))#candidate|7291|(300,)|var|float64
call_7290 = relay.TupleGetItem(func_4082_call(relay.reshape(var_7291.astype('float64'), [300,])), 2)
call_7292 = relay.TupleGetItem(func_4085_call(relay.reshape(var_7291.astype('float64'), [300,])), 2)
output = relay.Tuple([call_7278,call_7290,var_7291,])
output2 = relay.Tuple([call_7279,call_7292,var_7291,])
func_7302 = relay.Function([var_7291,], output)
mod['func_7302'] = func_7302
mod = relay.transform.InferType()(mod)
mutated_mod['func_7302'] = func_7302
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7303 = relay.var("var_7303", dtype = "float64", shape = (300,))#candidate|7303|(300,)|var|float64
func_7302_call = mutated_mod.get_global_var('func_7302')
call_7304 = func_7302_call(var_7303)
output = call_7304
func_7305 = relay.Function([var_7303], output)
mutated_mod['func_7305'] = func_7305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4588_call = mod.get_global_var('func_4588')
func_4589_call = mutated_mod.get_global_var('func_4589')
call_7317 = relay.TupleGetItem(func_4588_call(), 4)
call_7318 = relay.TupleGetItem(func_4589_call(), 4)
output = relay.Tuple([call_7317,])
output2 = relay.Tuple([call_7318,])
func_7330 = relay.Function([], output)
mod['func_7330'] = func_7330
mod = relay.transform.InferType()(mod)
mutated_mod['func_7330'] = func_7330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7330_call = mutated_mod.get_global_var('func_7330')
call_7331 = func_7330_call()
output = call_7331
func_7332 = relay.Function([], output)
mutated_mod['func_7332'] = func_7332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2028_call = mod.get_global_var('func_2028')
func_2030_call = mutated_mod.get_global_var('func_2030')
call_7346 = relay.TupleGetItem(func_2028_call(), 0)
call_7347 = relay.TupleGetItem(func_2030_call(), 0)
output = relay.Tuple([call_7346,])
output2 = relay.Tuple([call_7347,])
func_7348 = relay.Function([], output)
mod['func_7348'] = func_7348
mod = relay.transform.InferType()(mod)
mutated_mod['func_7348'] = func_7348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7348_call = mutated_mod.get_global_var('func_7348')
call_7349 = func_7348_call()
output = call_7349
func_7350 = relay.Function([], output)
mutated_mod['func_7350'] = func_7350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6052_call = mod.get_global_var('func_6052')
func_6054_call = mutated_mod.get_global_var('func_6054')
call_7351 = func_6052_call()
call_7352 = func_6052_call()
output = relay.Tuple([call_7351,])
output2 = relay.Tuple([call_7352,])
func_7358 = relay.Function([], output)
mod['func_7358'] = func_7358
mod = relay.transform.InferType()(mod)
output = func_7358()
func_7359 = relay.Function([], output)
mutated_mod['func_7359'] = func_7359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2570_call = mod.get_global_var('func_2570')
func_2571_call = mutated_mod.get_global_var('func_2571')
call_7375 = relay.TupleGetItem(func_2570_call(), 1)
call_7376 = relay.TupleGetItem(func_2571_call(), 1)
func_5124_call = mod.get_global_var('func_5124')
func_5125_call = mutated_mod.get_global_var('func_5125')
call_7399 = relay.TupleGetItem(func_5124_call(), 0)
call_7400 = relay.TupleGetItem(func_5125_call(), 0)
output = relay.Tuple([call_7375,call_7399,])
output2 = relay.Tuple([call_7376,call_7400,])
func_7401 = relay.Function([], output)
mod['func_7401'] = func_7401
mod = relay.transform.InferType()(mod)
output = func_7401()
func_7402 = relay.Function([], output)
mutated_mod['func_7402'] = func_7402
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7411 = relay.var("var_7411", dtype = "float64", shape = (10, 2, 13))#candidate|7411|(10, 2, 13)|var|float64
uop_7412 = relay.acos(var_7411.astype('float64')) # shape=(10, 2, 13)
uop_7414 = relay.rsqrt(var_7411.astype('float32')) # shape=(10, 2, 13)
output = relay.Tuple([uop_7412,uop_7414,])
output2 = relay.Tuple([uop_7412,uop_7414,])
func_7416 = relay.Function([var_7411,], output)
mod['func_7416'] = func_7416
mod = relay.transform.InferType()(mod)
var_7417 = relay.var("var_7417", dtype = "float64", shape = (10, 2, 13))#candidate|7417|(10, 2, 13)|var|float64
output = func_7416(var_7417)
func_7418 = relay.Function([var_7417], output)
mutated_mod['func_7418'] = func_7418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6809_call = mod.get_global_var('func_6809')
func_6811_call = mutated_mod.get_global_var('func_6811')
call_7441 = relay.TupleGetItem(func_6809_call(), 0)
call_7442 = relay.TupleGetItem(func_6811_call(), 0)
func_3125_call = mod.get_global_var('func_3125')
func_3127_call = mutated_mod.get_global_var('func_3127')
call_7453 = relay.TupleGetItem(func_3125_call(), 0)
call_7454 = relay.TupleGetItem(func_3127_call(), 0)
func_5634_call = mod.get_global_var('func_5634')
func_5637_call = mutated_mod.get_global_var('func_5637')
var_7456 = relay.var("var_7456", dtype = "float64", shape = (12,))#candidate|7456|(12,)|var|float64
call_7455 = relay.TupleGetItem(func_5634_call(relay.reshape(var_7456.astype('float64'), [12, 1])), 2)
call_7457 = relay.TupleGetItem(func_5637_call(relay.reshape(var_7456.astype('float64'), [12, 1])), 2)
func_3485_call = mod.get_global_var('func_3485')
func_3487_call = mutated_mod.get_global_var('func_3487')
call_7461 = relay.TupleGetItem(func_3485_call(), 0)
call_7462 = relay.TupleGetItem(func_3487_call(), 0)
output = relay.Tuple([call_7441,call_7453,call_7455,var_7456,call_7461,])
output2 = relay.Tuple([call_7442,call_7454,call_7457,var_7456,call_7462,])
func_7467 = relay.Function([var_7456,], output)
mod['func_7467'] = func_7467
mod = relay.transform.InferType()(mod)
mutated_mod['func_7467'] = func_7467
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7468 = relay.var("var_7468", dtype = "float64", shape = (12,))#candidate|7468|(12,)|var|float64
func_7467_call = mutated_mod.get_global_var('func_7467')
call_7469 = func_7467_call(var_7468)
output = call_7469
func_7470 = relay.Function([var_7468], output)
mutated_mod['func_7470'] = func_7470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2363_call = mod.get_global_var('func_2363')
func_2365_call = mutated_mod.get_global_var('func_2365')
call_7506 = relay.TupleGetItem(func_2363_call(), 0)
call_7507 = relay.TupleGetItem(func_2365_call(), 0)
func_2570_call = mod.get_global_var('func_2570')
func_2571_call = mutated_mod.get_global_var('func_2571')
call_7510 = relay.TupleGetItem(func_2570_call(), 2)
call_7511 = relay.TupleGetItem(func_2571_call(), 2)
func_6870_call = mod.get_global_var('func_6870')
func_6871_call = mutated_mod.get_global_var('func_6871')
call_7513 = relay.TupleGetItem(func_6870_call(), 1)
call_7514 = relay.TupleGetItem(func_6871_call(), 1)
func_4482_call = mod.get_global_var('func_4482')
func_4486_call = mutated_mod.get_global_var('func_4486')
var_7527 = relay.var("var_7527", dtype = "bool", shape = (336, 4))#candidate|7527|(336, 4)|var|bool
const_7528 = relay.const([7.710939,7.019231,8.351795,8.601021,4.732606,8.709556,6.686147,-9.240297,8.453183,1.008625,9.410850,-8.922510,-6.849596,3.998104,8.071628,5.755517,-8.039830,-4.554234,-4.566971,-1.808968,5.229344,-1.652069,-6.794629,-8.403124,-6.895696,1.257756,-4.689395,-2.836977,-2.830496,-1.110567,-7.659390,-1.107703,-7.948142,-6.938341,-3.514152,-9.484609,-6.616208,7.393222,7.562422,-9.424830,7.659260,-9.940631,3.164988,-0.594246,-0.956006,1.661296,-6.251212,4.908929,-1.932596,5.824880,8.632327,-4.205471,5.098461,-0.628259,-9.185359,-5.913353,7.152166,0.524485,4.046714,-0.363618,-0.066318,5.754130,-6.289158,8.323553,-2.033201,5.347088,0.582304,-5.008940,7.260296,7.544165,6.550007,-8.675088,-4.495838,-0.686045,7.341888,3.237245,-2.413946,4.617838,-5.117403,-8.962733,2.941149,-6.091525,5.040964,6.183154,7.702686,-2.806866,-7.571487,8.511456,-2.703436,9.327075,3.755155,8.354526,7.756327,-3.595904,-7.552797,-6.009216,-2.769024,-5.746057,2.409611,8.734002,-1.947710,-6.837697,-0.994912,-0.825171,5.254330,-6.462803,-9.193926,-0.528915,-5.132416,6.767337,6.532626,2.168121,-8.221795,-8.098775,0.950131,9.551224,6.088434,4.383380,1.418521,3.410484,7.250157,0.769992,9.540304,4.668942,-0.415878,-5.304939,-7.129701,-9.148772,9.743155,3.721129,-1.818998,9.954570,-8.544055,6.201187,-2.244149,-0.146034,-8.120348,2.677013,0.505696,-7.172597,-0.997592,-0.274375,-1.779740,3.259827,1.395602,-9.810190,0.814731,7.421252,-3.528192,-6.038302,0.976144,-3.398920,-2.103048,-1.308676,-1.268001,-5.081321,3.334223,-3.043879,5.916073,-6.915758,-6.697791,-8.267254,-7.532051,2.282437,-7.752655,5.860020,-8.824081,4.141175,9.113429,-1.360644,-0.487039,-7.359719,3.411722,9.381416,3.923090,4.593070,4.246651,0.246976,-6.586880,-2.937062,-5.737834,-4.287967,-6.349272,-9.740607,0.823376,5.161194,4.169885,-1.689047,-2.689277,8.513574,8.341225,0.979739,-5.976385,-4.359201,0.333996,4.554738,-2.924396,-9.967940,2.155881,-4.818133,-5.449713,1.301583,-0.196228,-9.484042,7.734489,-3.405887,9.599012,8.880050,-4.393777,-5.179757,4.190836,-6.564816,1.578843,-1.004445,5.865671,-0.020441,-3.783949,4.557433,8.939022,-1.258548,1.665441,5.349110,-9.142329,-7.002262,-6.701218,1.909256,-0.889270,5.176588,-0.921253,-6.209610,-9.300755,4.834228,-8.885745,0.697967,1.208979,5.667795,-0.139804,4.100599,1.205839,-7.838405,-2.426045,1.929067,2.705942,-4.308103,-3.540478,9.613588,4.283572,-4.748023,7.909021,5.818337,0.169545,6.765841,3.764174,-2.798957,-2.226289,-5.462743,-7.977283,7.903918,-5.681308,-4.530271,-4.517689,-8.815726,-1.639417,-1.680797,-0.641228,-0.677223,-5.368565,-8.412124,-3.430647,-5.479938,4.949725,1.814951,3.111394,8.955962,2.813346,-0.964539,3.766843,2.995715,0.965830,3.025851,-5.625535,1.719044,2.240748,-8.067921,9.215028,-5.560674,-2.628786,-3.974296,-5.855666,2.047777,7.630340,1.592318,-2.018341,3.545941,-2.819088,-1.962459,-4.551693,3.787745,4.364442,-2.698732,2.412811,0.259496,-7.105982,1.235812,4.024389,-6.635825,-2.345566,2.479300,0.057722,4.999388,7.589342,-5.367642,1.002028,1.995458,4.514488,5.190198,-1.476404,-5.263439,5.763501,3.331982,1.559759,4.942781,1.088804,-7.382805,8.268207,2.593308,9.534393,5.675011,9.107693,1.767562,-3.431444,9.400642,3.949577,0.976007,1.253476,7.955797,0.788834,4.833112,5.307520,0.975062,4.802078,1.012719,-1.662364,3.386517,0.285292,-9.480234,-4.262750,-1.150279,-0.622894,-6.861581,-0.520776,-8.823621,-8.075706,2.019660,0.363365,5.725981,7.704764,-6.792450,1.883427,1.244140,-4.921996,-6.635549,-5.004705,6.888788,-5.663017,-6.966564,1.533438,-8.930126,-1.186010,-0.542577,-1.749667,-7.554006,-1.718138,6.597925,9.519390,0.715683,8.663134,-8.104496,-5.372170,-7.710587,6.940911,-1.445958,7.774330,-4.209537,-2.386439,1.803999,-3.601343,-5.018064,-3.366573,-1.648017,-9.520601,-9.457459,0.655355,2.334539,-3.011980,4.781068,2.751297,-4.875654,-1.959694,-1.586977,3.065481,-7.444022,-4.567573,6.476307,-7.553430,-0.450352,1.098631,-2.910324,4.137489,-4.246001,6.742515,4.723443,6.232216,8.169591,-7.832740,-2.398634,-4.727589,-6.270484,3.836742,0.653917,2.459722,6.816060,-7.521583,-9.297559,3.755441,4.192116,-3.071271,5.220757,1.166895,1.505057,5.027718,8.341745], dtype = "float64")#candidate|7528|(432,)|const|float64
call_7526 = relay.TupleGetItem(func_4482_call(relay.reshape(var_7527.astype('bool'), [12, 14, 8]), relay.reshape(var_7527.astype('bool'), [12, 14, 8]), relay.reshape(const_7528.astype('float64'), [432,]), ), 5)
call_7529 = relay.TupleGetItem(func_4486_call(relay.reshape(var_7527.astype('bool'), [12, 14, 8]), relay.reshape(var_7527.astype('bool'), [12, 14, 8]), relay.reshape(const_7528.astype('float64'), [432,]), ), 5)
uop_7531 = relay.atan(call_7513.astype('float64')) # shape=(792,)
uop_7533 = relay.atan(call_7514.astype('float64')) # shape=(792,)
output = relay.Tuple([call_7506,call_7510,call_7526,var_7527,const_7528,uop_7531,])
output2 = relay.Tuple([call_7507,call_7511,call_7529,var_7527,const_7528,uop_7533,])
func_7539 = relay.Function([var_7527,], output)
mod['func_7539'] = func_7539
mod = relay.transform.InferType()(mod)
var_7540 = relay.var("var_7540", dtype = "bool", shape = (336, 4))#candidate|7540|(336, 4)|var|bool
output = func_7539(var_7540)
func_7541 = relay.Function([var_7540], output)
mutated_mod['func_7541'] = func_7541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5190_call = mod.get_global_var('func_5190')
func_5191_call = mutated_mod.get_global_var('func_5191')
call_7586 = relay.TupleGetItem(func_5190_call(), 1)
call_7587 = relay.TupleGetItem(func_5191_call(), 1)
uop_7592 = relay.erf(call_7586.astype('float32')) # shape=(5, 1, 2)
uop_7594 = relay.erf(call_7587.astype('float32')) # shape=(5, 1, 2)
output = uop_7592
output2 = uop_7594
func_7599 = relay.Function([], output)
mod['func_7599'] = func_7599
mod = relay.transform.InferType()(mod)
mutated_mod['func_7599'] = func_7599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7599_call = mutated_mod.get_global_var('func_7599')
call_7600 = func_7599_call()
output = call_7600
func_7601 = relay.Function([], output)
mutated_mod['func_7601'] = func_7601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mod.get_global_var('func_3485')
func_3487_call = mutated_mod.get_global_var('func_3487')
call_7602 = relay.TupleGetItem(func_3485_call(), 0)
call_7603 = relay.TupleGetItem(func_3487_call(), 0)
func_5445_call = mod.get_global_var('func_5445')
func_5449_call = mutated_mod.get_global_var('func_5449')
var_7605 = relay.var("var_7605", dtype = "int64", shape = ())#candidate|7605|()|var|int64
call_7604 = relay.TupleGetItem(func_5445_call(relay.reshape(var_7605.astype('int64'), []), relay.reshape(call_7602.astype('float64'), [300,]), ), 0)
call_7606 = relay.TupleGetItem(func_5449_call(relay.reshape(var_7605.astype('int64'), []), relay.reshape(call_7602.astype('float64'), [300,]), ), 0)
bop_7607 = relay.less(call_7604.astype('bool'), var_7605.astype('bool')) # shape=(792,)
bop_7610 = relay.less(call_7606.astype('bool'), var_7605.astype('bool')) # shape=(792,)
func_5588_call = mod.get_global_var('func_5588')
func_5590_call = mutated_mod.get_global_var('func_5590')
var_7612 = relay.var("var_7612", dtype = "float64", shape = (1, 160))#candidate|7612|(1, 160)|var|float64
call_7611 = relay.TupleGetItem(func_5588_call(relay.reshape(var_7612.astype('float64'), [5, 16, 2])), 0)
call_7613 = relay.TupleGetItem(func_5590_call(relay.reshape(var_7612.astype('float64'), [5, 16, 2])), 0)
bop_7637 = relay.logical_or(call_7604.astype('bool'), relay.reshape(bop_7607.astype('bool'), relay.shape_of(call_7604))) # shape=(792,)
bop_7640 = relay.logical_or(call_7606.astype('bool'), relay.reshape(bop_7610.astype('bool'), relay.shape_of(call_7606))) # shape=(792,)
func_5967_call = mod.get_global_var('func_5967')
func_5971_call = mutated_mod.get_global_var('func_5971')
const_7668 = relay.const([7,8,-4,5,-6,7,-10,-9,-7,-1,-8,2,-7,-7,-10,-2,6,6,-10,7,3,-7,-4,2,-5,10,-7,-7,5,-3,-4,1,6,-10,-10,4,3,-8,10,-10,-3,10,-5,4,5,-7,2,-9,-7,7,-5,3,-2,5,-3,7,-5,3,6,-2,-5,-9,8,9,6,5,5,-7,2,-9,7,10,4,4,1,2,6,6,9,1,1,7,7,3,6,-4,-5,-6,6,-1,-5,-6,4,7,9,-1,8,-4,-1,-4,-8,-3,1,-4,-9,-7,-7,7,6,9,4,6,9,6,-7,-1,7,8,3,-6,-6,-9,7,-6,-2,8,4,-5,-6,-5,9,7,-7,-5,-8,7,7,9,-3,-7,-2,8,-1,-1,4,-9,9,3,5,-10,-3,1,2,4,-6,10,-9,6,-3,-8,-2,-2,-5,10,-4,-6,-7,5,-6,-5,-1,10,5,-10,2,5,-5,4,-3,1,-5,2,-4,1,7,4,-3,8,2,-6,3,6,-10,9,5,1,-9,-1,-4,-4,-10,-1,-3,-3,-4,-9,2,-7,8,-8,-6,-4,-5,-7,-7,10,-9,2,-7,-7,4,9,1,-10,2,3,-8,2,-10,-2,3,-6,-4,-4,-3,-3,-9,5,-10,1,5,-9,-9,-8,-3,-7,4,-7,-4,-1,-6,-2,-9,-4,-3,1,9,3,-1,6,-5,10,-10,10,-2,9,-5,2,9,3,3,2,-1,9,-7,-8,9,2,5,-3,2,4,4,-1,3,5,-5,-7,1,2,10,2,8,-3,5,1,-8,5,2,-3,10,-1,6,-3,6,6,-5,-9,2,5,6,7,2,3,7,-7,5,-2,-9,-9,2,3,4,10,2,5,3,3,3,-7,4,-5,-5,-2,-4,9,6,3,4,6,-9,5,3,5,-5,-6,10,10,8,10,-2,-8,-1,-8,4,-2,-7,3,6,-7,4,-10,5,-8,1,-9,-8,-3,7,3,-9,4,-1,-7,-9,-8,10,-7,-7,1,4,-4,6,1,-1,7,-9,-6,-10,-9,-1,-1,-6,-7,-5,2,-6,-2,-6,-8,-5,-8,7,-9,9,7,-5,-1,7,6,6,-1,-6,7,-4,-10,-3,7,2,-7,4,-3,2,-1,-1,3,7,-2,-9,-5,-5,5,-3,7,8,8,-10,2,6,5,10,-7,-3,2,-7,6,3,-1,4,4,6,6,5,-9,1,8,-1,-10,3,8,-8,5,8,10,6,5,-7,9,9,5,-10,-5,10,-9,7,5,2,9,-6,1,4,-5,9,5,9,-9,-2,4,-10,-5,10,4,-9,-1,3,-6,-2,-10,-4,8,-4,4,9,-10,-1,-8,6,-3,7,10,10,9,-9,-10,1,-6,-4,10,10,-4,6,4,-4,-7,-2,2,-2,-3,-7,4,2,-4,-2,-2,6,-7,-10,4,-9,6,7,3,-7,2,1,6,8,10,6,-6,1,-7,-6,4,4,-7,8,-2,-8,2,4,3,-10,6,6,-10,-7,8,10,9,4,4,-9,8,5,-7,8,3,-4,3,10,4,2,1,4,7,7,1,-2,-3,8,5,1,-5,-8,-2,-4,6,-10,10,-8,-3,10,10,2,-8,3,-6,3,9,10,10,10,9,-4,4,-8,6,1,-8,7,-3,9,-7,3,-4,7,-6,-9,-7,-8,4,9,1,-5,-1,5,5,5,8,7,-10,5,1,3,-6,10,6,-9,-9,8,-9,6,-6,-5,7,-6,6,3,5,7,8,1,-9,10,7,8,10,-9,2,-3,-3,8,-10,7,10,5,3,1,-8,-8,1,-10,-9,-9,2,4,3,-5,4,6,-7,-1,9,-4,4,-4,9,8,-5,-1,-1,2,-8,4,-8,5,1,10,5,-1,-6,-4,10,-5,8,-2,2,10,-9,-1,5,6,9,10,-10,4,5,-2,-9,10,4,6,-3,7,1,1,-3,3,-3,-7,3,10,9,-1,-1,-8,2,-3,10,-7,8,-8,4,-7,4,1,-7,-3,3,7,-6,8,-6,-1,9,-7,5,-1,7,-8,-2,-10,10,-5,9,4,4,-1,3,9,9,10,-3,5,-9,-3,-3,-7,-6,5,-4,-9,1,1,2,-5,-5,-7,7,10,-8,-4,6,4,-6,7,8,-10,-8,2,-10,4,-3,6,4,4,9,-5,-3,-8,9,-1,-5,-7,-10,6,-5,5,-1,8,7,7,1,-4,2,3,9,-8,5,-9,4,6,6,-7,-4,-2,6,10,3,2,-6,-7,-1,1,-10,-2,8,4,-1,2,-6,10,-6,-1,-2,6,-10,-3,10,8,6,6,9,-9,3,-8,6,2,8,-10,-6,8,-1,-4,7,-5,-3,-7,1,3,-7,-2,10,-2,-7,9,-1,9,8,-7,7,-7,2,-1,4,-6,8,4,4,-6,-10,-6,2,7,9,4,-5,-4,-9,-10,2,3,-6,8,5,-10,-1,-8,-2,-2,10,-6,-8,-3,-9,9,-3,-1,-1,8,7,1,-6,8,5,-8,-7,-3,7,4,-3,7,-7,-2,1,2,-9,5,-3,1,4,-4,-6,-6,5,10,2,1,-8,-8,4,-7,5,6,5,-6,9,-10,7,9,-5,-9,6,6,4,3,6,-8,-9,6,4,-5,-2,-1,2,-2,-8,-3,2,8,-5,-5,-10,1,9,-7,1,-7,8,1,-5,8,5,-10,5,4,-1,-3,2,-2,1,-4,-1,5,-9,3,1,-9,-5,5,9,9,8,2,-6,-3,-4,-9,-9,6,3,2,-3,10,2,-7,5,-2,6,5,6,8,6,-7,-6,-5,-4,-2,-9,-2,-8,-3,-5,-5,9,-4,9,-7,1,-2,-6,-5,3,5,10,5,8,-10,-3,5,-7,8,-1,1,-8,-1,1,5,3,-7,1,10,2,-2,7,8,4,-7,1,-9,4,-3,3,-10,8,-9,9,-8,-1,7,-10,9,-9,9,8,-8,7,7,9,-6,5,8,7,7,8,6,-7,4,-5,7,-10,-8,-8,6,-4,-6,2,-5,2,8,5,10,1,9,6,1,-3,-4,8,8,-4,1,8,4,-7,10,6,-6,-3,-5,3,4,9,-8,-7,6,-1,-9,4,-9,-8,5,-8,-3,7,9,-7,7,10,-10,-2,-2,5,1,7,-2,-8,2,-9,-8,-4,8,7,-5,1,-6,6,-7,9,10,-8,4,-1,-4,1,7,-7,7,10,-3,-1,-5,6,6,2,5,10,7,-8,-2,-3,4,-1,5,5,4,8,-1,-3,-4,-6,-4,10,10,2,-5,-8,-4,2,-4,-9,2,-8,-2,1,4,4,-4,9,2,-5,-6,-8,3,2,-6,6,6,3,4,5,1,-8,-4,8,-8,-5,-7,-5,-2,8,7,9,9,-3,-6,-3,-8,2,7,9,5,2,-6,2,3,7,-5,3,-8,7,5,-1,-2,-6,-4,-6,1,-9,-4,-5,3,5,10,-4,-4,-2,-2,3,-5,2,-6,-6,-6,-1,8,-7,2,8,10,2,-2,5,7,-7,9,-10,8,1,3,-4,10,1,-3,-5,3,-1,10,-1,5,7,-9,-8,-5,3,-1,-8,-10,4,-9,8,-4,9,6,3,9,-5,9,7,2,-1,-9,-7,-7,2,-10,8,-1,10,-8,-9,4,-5,-9,6,-2,-6,5,10,4,10,4,10,6,5,4,10,9,-1,-6,2,4,-9,-3,3,-10,-1,-2,4,-2,3,-2,-4,-8,1,-1,-4,-1,4,-1,-1,-1,-9,-5,2,-1,-3,-9,6,-1,-5,-8,-7,-1,2,9,5,6,-2,7,6,2,1,-8,1,1,-2,-5,9,2,-10,-3,-1,-8,-9,9,-3,7,-4,-10,-4,1,2,-7,-1,-2,-7,7,3,-3,2,-10,-4,-8,1,3,9,-5,9,-1,10,1,-8,7,4,6,1,1,-2,-4,-5,2,9,4,-1,8,6,-1,10,6,10,-1,7,-6,1,3,5,1,-5,3,9,7,3,-10,10,10,-1,10,-3,8,-8,-3,8,-10,10,-9,5,6,6,2,5,5,-2,-3,-5,2,-2,8,-10,1,2,-1,-5,-6,3,8,-9,-2,-8,-10,4,6,-7,-5,3,-9,7,-1,-4,-5,4,-3,-6,7,-9,-9,-7,10,9,10,-3,-6,-8,-5,3,-7,3,1,-6,3,3,2,-7,5,10,-10,6,-5,5,5,10,-7,4,2,6,9,7,3,-6,2,4,10,1,2,-5,-6,-1,-8,10,-8,5,-10,-1,-6,1,-4,1,-5,-1,-8,8,-3,-6,-5,-3,7,-2,-10,-1,-9,-8,7,9,2,3,-8,6,9,4,-2,-6,-5,-5,-1,-5,9,5,3,-8,-2,6,9,1,8,1,-2,-7,7,-4,-10,-1,10,-5,-8,7,3,1,-9,-1,10,7,2,9,-7,10,-1,6,-6,4,3,5,-9,9,1,-5,3,2,-5,7,-3,-1,5,-6,10,5,3,3,-8,-10,-4,9,6,-5,2,4,8,-10,7,-5,5,-2,2,10,10,1,4,3,3,2,-9,-1,-6,-1,-8,-1,6,1,1,-10,-1,4,2,7,5,-1,10,3,-6,8,-9,-6,4,-3,-1,3,3,-9,-3,10,-8,4,4,3,-10,-3,1,1,9,10,8,-5,-1,8,3,-3,9,-10,-5,-3,7,3,5,5,10,5,-9,9,-7,5,4,-2,7,6,-8,-6,-4,2,5,-3,-3,2,-1,1,9,9,-7,-8,6,8,-2,-6,5,6,-5,4,-1,9,1,-1,7,-6,4,9,-8,1,-1,-8,7,6,-7,2,-1,10,-1,4,5,-10,-4,9,6,-5,9,5,9,7,-4,-4,10,-6,-8,-6,-10,2,-7,-9,-10,-2,-8,-2,8,5,-10,6,-4,8,-5,-5,-3,1,7,-3,-2,6,1,7,9,1,2,7,2,-9,2,-9,2,-4,-10,6,3,-4,-9,-2,-4,8,-10,1,4,8,4,10,-9,-7,-5,-3,-6,-3,-7,-5,-9,4,-10,3,4,10,9,6,-6,7,5,-10,-4,-5,-7,1,-5,-5,-1,-9,-8,-5,-10,-4,-1,10,10,8,-2,-6,-5,-4,3,5,8,9,6,-4,2,-5,-9,-2,4,3,-2,4,8,-8,-7,-3,1,-2,5,-3,4,-3,-2,9,4,1,-3,-3,-5,1,8,-9,-7,7,-7,-2,-10,-1,9,-10,4,-1,8,-7,7,-5,2,-5,4,-3,-2,-9,8,-7,-2,2,-8,-10,-8,-1,2,9,9,3,6,2,8,10,-3,-7,-4,8,3,-2,4,-6,-7,-10,-1,-10,10,-4,-3,-6,-5,-1,3,3,-9,7,-8,10,9,4,7,-6,-3,-5,9,5,6,1,9,-9,10,-10,10,4,3,9,9,5,6,-2,-3,6,-5,3,4,-2,8,1,-3,-7,-2,-6,-2,4,-3,2,3,9,9,-4,4,7,8,-1,-4,9,5,-8,-8,-4,9,9,5,2,10,7,9,-7,4,8,-6,-4,2,-7,-4,-1,8,7,-10,5,2,-5,8,6,9,7,-2,-6,5,-5,6,-6,-8,8,-9,-9,7,-1,-5,4,-2,-9,6,-9,3,-3,-9,-5,-1,4,-6,-2,8,-7,-10,-7,5,-9,3,5,-1,5,7,-7,-3,-10,-6,1,6,7,10,-2,-1,-8,-8,-10,-1,-1,7,9,-10,8,-3,-10,-8,7,-2,-2,10,7,3,9,6,-2,-7,-2,2,-3,-8,4,-3,-3,7,-9,-5,7,6,2,5,5,-7,-10,-7,-3,-7,3,9,-6,3,-5,2,8,7,9,6,-7,1,1,10,6,-5,9,7,10,1,-8,-7,-2,-8,10,7,6,-3,-7,-5,2,2,-3,9,8,-3,6,5,-6,-10,-9,-2,-4,-6,-9,4,2,-5,4,2,-7,-8,-5,-10,10,-7,-9,-5,-7,-4,1,-8,-3,-10,8,-8,-5,7,-3,-2,10,-1,-10,2,7,-4,3,1,-6,4,3,8,-2,9,-5,-8,2,-2,6,-2,9,1,-7,-1,-5,6,10,-9,2,-8,1,-1,-7,-7,-8,-4,-2,-10,-9,-3,-7,6,4,8,3,4,3,-9,10,-3,-5,-7,4,-8,-10,1,2,3,-1,4,8,-10,-5,3,-4,-8,-7,-6,4,-6,-6,2,-2,-4,7,-9,-7,-7,-9,-2,1,2,4,-9,-3,-3,-3,7,-9,10,-10,-10,-9,1,-1,1,-2,-10,-4,-5,5,5,4,-3,4,10,4,3,8,3,9,-1,-8,7,9,10,1,-4,-9,7,-2,-9,6,-2,-10,-4,-9,-1,-8,-3,-2,3,-8,8,3,3,2,-4,6,3,-10,-4,-5,-10,-5,2,-5,9,-1,3,2,-1,-1,-3,10,-4,6,-3,-5,4,5,-5,10,-6,-3,-6,8,-9,10,-8,9,-3,2,-6,9,6,7,-6,7,9,-2,3,2,-1,-4,-5,2,8,3,10,-5,8,8,-10,-8,5,5,2,-9,-10,-3,-6,4,-9,-7,9,-7,-1,-2,2,-1,10,4,-3,-6,-8,7,-5,7,8,-5,3,5,-7,-6,-7,-5,-2,10,3,-8,6,-4,-8,7,6,-4,-3,4,6,-8,-8,-1,-1,-6,6,5,9,4,-10,-3,2,5,6,5,3,8,-6,2,7,-2,-1,-6,-4,-8,-9,3,8,-7,1,-10,-7,6,5,-1,-5,7,9,8,2,-10,-7,-4,-4,3,5,10,2,-5,3,1,-8,5,2,1,-9,6,-7,-5,5,6,3,-4,-3,4,-7,-5,-3,-4,-4,-10,-7,3,1,7,-5,-6,1,3,-10,-2,-2,-2,9,-10,1,10,-6,-4,-8,-3,-3,1,-10,10,1,-9,-10,8,8,-4,7,9,-4,2,-3,7,5,-4,4,7,7,-10,6,8,-5,-3,6,-8,6,-4,-5,6,1,-5,5,4,-7,-1,-2,6,-1,10,10,10,9,4,-7,6,-4,6,-4,-1,3,-3,-1,2,8,9,-3,-4,5,8,2,-3,-8,4,-9,2,-9,9,-6,1,-5,3,-9,2,-7,-7,8,-3,-9,8,-6,-2,-7,-4,-3,10,5,-8,2,-10,2,-8,-7,7,-2,6,5,-10,10,-9,8,3,-3,-10,2,-4,7,-7,2,2,6,1,-9,-4,-6,-4,-2,-10,9,-10,9,-5,3,-3,-3,1,5,1,-5,-3,-1,5,-3,8,4,2,1,10,-1,-1,7,6,-5,6,-5,1,7,7,1,-1,-5,-8,10,10,-10,6,6,9,-10,-3,7,8,10,-3,5,5,7,-4,-1,10,9,9,9,-9,7,3,4,8,-1,4,-5,3,2,2,-4,-7,10,10,-5,10,9,-4,7,6,2,-1,6,-10,-3,-4,-5,-2,6,-6,-9,3,-10,-10,10,4,-5,-1,-10,1,-5,4,3,-7,-8,-10,-7,-8,1,-3,-5,2,-3,10,6,-9,-6,1,9,-8,10,7,-2,-4,2,-5,4,4,2,3,7,9,6,-3,-9,-3,1,-6,-4,8,-10,2,2,-3,4,-10,-9,2,-8,-10,6,-6,3,1,-4,5,4,8,-5,-8,-9,8,9,1,5,-6,5,7,6,7,-9,-4,10,-8,-4,-6,7,1,3,3,3,8], dtype = "uint32")#candidate|7668|(2880,)|const|uint32
call_7667 = relay.TupleGetItem(func_5967_call(relay.reshape(const_7668.astype('uint32'), [16, 15, 12]), relay.reshape(const_7668.astype('uint32'), [16, 15, 12]), ), 1)
call_7669 = relay.TupleGetItem(func_5971_call(relay.reshape(const_7668.astype('uint32'), [16, 15, 12]), relay.reshape(const_7668.astype('uint32'), [16, 15, 12]), ), 1)
bop_7675 = relay.greater_equal(call_7602.astype('bool'), var_7605.astype('bool')) # shape=(12, 5, 5)
bop_7678 = relay.greater_equal(call_7603.astype('bool'), var_7605.astype('bool')) # shape=(12, 5, 5)
func_2127_call = mod.get_global_var('func_2127')
func_2129_call = mutated_mod.get_global_var('func_2129')
const_7680 = relay.const([0.732941,4.656542,-4.584624,-5.280239,9.982817,3.504431,-2.800401,-3.263386,-3.435616,-0.808378,-6.978106,-1.519379,0.110408,-7.689443,-3.812086,4.641681,-8.655237,-2.767274,-6.398258,5.705525,5.787325,-0.049854,-4.920624,8.465986,2.890519,-5.718759,2.786519,-0.103399,-9.986753,6.751205,-4.703230,-2.880052,-1.351799,-4.702405,8.764036,-6.088820,-6.816190,-0.402930,4.522491,4.747244,9.822368,-7.995240,-7.262002,-5.462090,3.429576,7.788908,-1.499908,-2.858250,9.715484,0.860053,6.116179,6.458728,0.083387,-4.486115,9.916369,8.983278,8.770126,-5.705200,-0.578926,-1.503538,-1.881067,-6.195864,0.838997,1.886121,6.345616,1.140620,-5.304334,-8.075855,-8.968423,-3.623732,5.801316,3.732682,1.226309,-5.659980,-5.518533,2.976128,3.950636,1.329609,1.196654,1.404146,-9.259044,9.424902,7.499983,-4.709075,-3.307386,-6.683214,-4.660813,-5.994262,3.468548,-2.795173,7.272463,-8.392273,9.683287,0.220860,5.476067,7.189322,8.089736,-2.758619,-7.322277,-1.184175,-3.068300,-7.100886,-9.083983,-4.140684,-8.042755,7.737287,4.890131,-0.441622,-1.734018,3.014807,-4.035870,6.447013,5.960264,-9.993581,-2.534486,-4.466847,2.769560,3.151966,1.092532,1.747816,-9.745488,1.217426,5.371796,-1.608930,1.286760,0.120779,-6.998648,8.529798,-9.481696,-5.810202,-5.612652,3.732123,9.291858,-5.688404,7.055579,-2.834263,-5.559942,1.573130,1.269071,1.810497,5.211755,-6.650607,2.488756,4.241952,-1.646236,-0.977791,-1.764414,-8.819891,0.766456,-2.293769,6.834807,-3.230041,-3.060529,8.811810,-4.783793,-3.420034,6.306133,9.383727,-4.977607,-4.894768,-7.572742,5.880537,5.133682,4.206166,-8.452104,9.157456,-2.061296,-0.638739,4.128212,5.040241,-7.573838,9.296541,-8.651696,2.180309,1.048366,9.537466,-2.835072,-0.950480,6.825864,-0.059477,6.734489,5.091780,-2.980700,-2.838701,1.631830,4.421566,1.080409,5.723964,2.746614,-8.147447,-9.644349,1.187118], dtype = "float32")#candidate|7680|(192,)|const|float32
call_7679 = relay.TupleGetItem(func_2127_call(relay.reshape(const_7680.astype('float32'), [12, 1, 16])), 2)
call_7681 = relay.TupleGetItem(func_2129_call(relay.reshape(const_7680.astype('float32'), [12, 1, 16])), 2)
output = relay.Tuple([call_7611,var_7612,bop_7637,call_7667,const_7668,bop_7675,call_7679,const_7680,])
output2 = relay.Tuple([call_7613,var_7612,bop_7640,call_7669,const_7668,bop_7678,call_7681,const_7680,])
func_7714 = relay.Function([var_7605,var_7612,], output)
mod['func_7714'] = func_7714
mod = relay.transform.InferType()(mod)
var_7715 = relay.var("var_7715", dtype = "int64", shape = ())#candidate|7715|()|var|int64
var_7716 = relay.var("var_7716", dtype = "float64", shape = (1, 160))#candidate|7716|(1, 160)|var|float64
output = func_7714(var_7715,var_7716,)
func_7717 = relay.Function([var_7715,var_7716,], output)
mutated_mod['func_7717'] = func_7717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5982_call = mod.get_global_var('func_5982')
func_5983_call = mutated_mod.get_global_var('func_5983')
call_7719 = relay.TupleGetItem(func_5982_call(), 0)
call_7720 = relay.TupleGetItem(func_5983_call(), 0)
output = call_7719
output2 = call_7720
func_7759 = relay.Function([], output)
mod['func_7759'] = func_7759
mod = relay.transform.InferType()(mod)
output = func_7759()
func_7760 = relay.Function([], output)
mutated_mod['func_7760'] = func_7760
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7769 = relay.var("var_7769", dtype = "int32", shape = (13, 11, 7))#candidate|7769|(13, 11, 7)|var|int32
var_7770 = relay.var("var_7770", dtype = "int32", shape = (13, 11, 7))#candidate|7770|(13, 11, 7)|var|int32
bop_7771 = relay.not_equal(var_7769.astype('bool'), relay.reshape(var_7770.astype('bool'), relay.shape_of(var_7769))) # shape=(13, 11, 7)
func_7273_call = mod.get_global_var('func_7273')
func_7275_call = mutated_mod.get_global_var('func_7275')
call_7779 = func_7273_call()
call_7780 = func_7273_call()
output = relay.Tuple([bop_7771,call_7779,])
output2 = relay.Tuple([bop_7771,call_7780,])
func_7790 = relay.Function([var_7769,var_7770,], output)
mod['func_7790'] = func_7790
mod = relay.transform.InferType()(mod)
mutated_mod['func_7790'] = func_7790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7790_call = mutated_mod.get_global_var('func_7790')
var_7792 = relay.var("var_7792", dtype = "int32", shape = (13, 11, 7))#candidate|7792|(13, 11, 7)|var|int32
var_7793 = relay.var("var_7793", dtype = "int32", shape = (13, 11, 7))#candidate|7793|(13, 11, 7)|var|int32
call_7791 = func_7790_call(var_7792,var_7793,)
output = call_7791
func_7794 = relay.Function([var_7792,var_7793,], output)
mutated_mod['func_7794'] = func_7794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7358_call = mod.get_global_var('func_7358')
func_7359_call = mutated_mod.get_global_var('func_7359')
call_7796 = relay.TupleGetItem(func_7358_call(), 0)
call_7797 = relay.TupleGetItem(func_7359_call(), 0)
output = relay.Tuple([call_7796,])
output2 = relay.Tuple([call_7797,])
func_7805 = relay.Function([], output)
mod['func_7805'] = func_7805
mod = relay.transform.InferType()(mod)
mutated_mod['func_7805'] = func_7805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7805_call = mutated_mod.get_global_var('func_7805')
call_7806 = func_7805_call()
output = call_7806
func_7807 = relay.Function([], output)
mutated_mod['func_7807'] = func_7807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2570_call = mod.get_global_var('func_2570')
func_2571_call = mutated_mod.get_global_var('func_2571')
call_7850 = relay.TupleGetItem(func_2570_call(), 1)
call_7851 = relay.TupleGetItem(func_2571_call(), 1)
func_4482_call = mod.get_global_var('func_4482')
func_4486_call = mutated_mod.get_global_var('func_4486')
const_7867 = relay.const([True,False,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,True,True,True,False,True,False,True,False,False,False,True,False,True,True,True,False,False,False,True,True,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,True,True,True,False,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,True,False,False,False,True,False,True,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,True,True,True,True,False,False,True,True,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,True,True,False,False,False,True,False,True,False,True,True,True,False,True,True,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,False,False,True,False,False,True,True,True,False,True,True,True,True,True,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,False,True,True,False,False,True,False,True,False,False,False,True,True,True,False,False,True,False,False,True,True,False,True,True,True,False,True,False,False,False,False,False,False,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,False,True,False,False,False,False,False,False,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,True,False,False,False,True,False,False,True,True,False,False,True,False,False,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,False,False,False,False,True,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,False,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,False,True,True,False,False,False,False,False,False,True,False,False,False,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,False,False,False,True,False,False,True,True,False,False,True,True,True,False,True,True,True,False,True,False,False,False,False,True,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,False,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,False,False,False,False,True,True,False,False,False,True,False,True,True,True,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False,True,True,True,False,True,False,False,False,False,True,False,True,False,False,True,True,False,False,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,True,False,True,True,False,False,True,True,False,False,False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,True,True,False,True,True,False,False,False,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,True,False,False,False,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,False,False,True,True,True,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,False,False,False,True,True,False,True,True,False,False,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,False,True,True,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False,True,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,False,False,True,True,True,True,True,True,True,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,True,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,True,False,False,True,True,False,True,False,True,False,True,True,True,False,True,False,False,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,False,True,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,False,True,False,True,True,True,True,True,False,False,False,True,False,True,False,True,True,True,True,False,False,True,True,False,False,True,False,False,True,False,True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,True,False,False,False,True,True,False,True,False,False,False,False,True,False,False,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,True,True,True,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False], dtype = "bool")#candidate|7867|(1344,)|const|bool
var_7868 = relay.var("var_7868", dtype = "float64", shape = (432,))#candidate|7868|(432,)|var|float64
call_7866 = relay.TupleGetItem(func_4482_call(relay.reshape(const_7867.astype('bool'), [12, 14, 8]), relay.reshape(const_7867.astype('bool'), [12, 14, 8]), relay.reshape(var_7868.astype('float64'), [432,]), ), 0)
call_7869 = relay.TupleGetItem(func_4486_call(relay.reshape(const_7867.astype('bool'), [12, 14, 8]), relay.reshape(const_7867.astype('bool'), [12, 14, 8]), relay.reshape(var_7868.astype('float64'), [432,]), ), 0)
func_2570_call = mod.get_global_var('func_2570')
func_2571_call = mutated_mod.get_global_var('func_2571')
call_7872 = relay.TupleGetItem(func_2570_call(), 1)
call_7873 = relay.TupleGetItem(func_2571_call(), 1)
func_5190_call = mod.get_global_var('func_5190')
func_5191_call = mutated_mod.get_global_var('func_5191')
call_7876 = relay.TupleGetItem(func_5190_call(), 0)
call_7877 = relay.TupleGetItem(func_5191_call(), 0)
func_7139_call = mod.get_global_var('func_7139')
func_7142_call = mutated_mod.get_global_var('func_7142')
const_7879 = relay.const(-1, dtype = "uint16")#candidate|7879|()|const|uint16
const_7880 = relay.const([[-7,9,10,4,8,6,-2,2,-9,8],[-9,-3,-1,-5,-4,-3,1,-4,-1,-9],[-8,-9,-5,6,-5,-5,-5,9,7,-4],[3,3,-1,-7,5,1,2,-2,1,2],[10,2,6,-9,7,5,3,4,-6,6],[8,3,-9,8,2,-10,7,-10,-5,-7],[4,-2,1,1,-8,7,6,5,-6,9],[-1,2,1,3,3,-8,-4,-2,-6,-10],[-9,10,10,3,8,-6,1,9,2,-7],[3,-1,-8,2,7,-10,-3,-4,-8,9],[-10,-7,6,4,1,4,9,-1,-10,10],[-4,-4,3,-10,-4,6,-5,-7,-10,-1],[-2,-5,10,-9,8,6,10,-9,-7,-3],[-9,4,-4,6,-2,5,10,7,7,-10],[5,-6,-7,9,5,4,-3,-9,1,-2],[-10,9,8,-2,3,-9,10,-7,-2,1],[-10,-1,-5,-1,6,3,2,-6,9,-5],[-9,-5,10,4,-8,-9,-1,-3,-1,-5],[10,2,10,-2,5,-5,2,3,-10,3],[-3,-6,3,3,6,2,5,-9,4,-8],[-1,-5,-1,-6,-5,-8,-1,5,6,9],[-5,9,7,-9,-1,1,-9,8,5,10],[-5,10,-5,-2,-2,-6,-2,-1,4,1],[6,-9,6,-3,-1,3,-3,2,8,2],[4,9,2,-6,-9,-4,-7,-9,10,6],[-7,7,-1,-2,4,-9,10,4,-9,10],[7,4,-9,-9,-7,2,3,5,-10,-3],[1,-3,-3,4,-9,-1,-2,-10,-7,10],[3,7,-3,2,-1,8,-8,-2,-9,-2],[-5,-3,-7,8,2,-10,-1,-3,-1,-8],[9,-4,-8,-7,-7,7,1,10,5,-3],[-7,-1,10,-1,-10,-5,6,7,10,-10],[2,-10,7,10,8,-8,6,1,7,1],[2,8,7,-9,9,1,-9,4,-1,-10],[10,3,-1,-4,-6,-6,8,4,9,-2],[7,10,4,-3,-10,3,-3,6,1,-2]], dtype = "uint16")#candidate|7880|(36, 10)|const|uint16
call_7878 = relay.TupleGetItem(func_7139_call(relay.reshape(const_7879.astype('uint16'), []), relay.reshape(const_7880.astype('uint16'), [15, 12, 2]), ), 0)
call_7881 = relay.TupleGetItem(func_7142_call(relay.reshape(const_7879.astype('uint16'), []), relay.reshape(const_7880.astype('uint16'), [15, 12, 2]), ), 0)
output = relay.Tuple([call_7850,call_7866,const_7867,var_7868,call_7872,call_7876,call_7878,const_7879,const_7880,])
output2 = relay.Tuple([call_7851,call_7869,const_7867,var_7868,call_7873,call_7877,call_7881,const_7879,const_7880,])
func_7890 = relay.Function([var_7868,], output)
mod['func_7890'] = func_7890
mod = relay.transform.InferType()(mod)
var_7891 = relay.var("var_7891", dtype = "float64", shape = (432,))#candidate|7891|(432,)|var|float64
output = func_7890(var_7891)
func_7892 = relay.Function([var_7891], output)
mutated_mod['func_7892'] = func_7892
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7905 = relay.var("var_7905", dtype = "float32", shape = (11, 13, 2))#candidate|7905|(11, 13, 2)|var|float32
uop_7906 = relay.acos(var_7905.astype('float32')) # shape=(11, 13, 2)
func_2483_call = mod.get_global_var('func_2483')
func_2486_call = mutated_mod.get_global_var('func_2486')
const_7917 = relay.const([8.514058,-0.013581,-9.425504,9.288610,-6.337499,4.372683,-0.179820,5.472794,-2.508375,-7.840651], dtype = "float64")#candidate|7917|(10,)|const|float64
var_7918 = relay.var("var_7918", dtype = "float32", shape = (3, 30))#candidate|7918|(3, 30)|var|float32
call_7916 = relay.TupleGetItem(func_2483_call(relay.reshape(const_7917.astype('float64'), [5, 1, 2]), relay.reshape(var_7918.astype('float32'), [90,]), ), 0)
call_7919 = relay.TupleGetItem(func_2486_call(relay.reshape(const_7917.astype('float64'), [5, 1, 2]), relay.reshape(var_7918.astype('float32'), [90,]), ), 0)
output = relay.Tuple([uop_7906,call_7916,const_7917,var_7918,])
output2 = relay.Tuple([uop_7906,call_7919,const_7917,var_7918,])
func_7920 = relay.Function([var_7905,var_7918,], output)
mod['func_7920'] = func_7920
mod = relay.transform.InferType()(mod)
var_7921 = relay.var("var_7921", dtype = "float32", shape = (11, 13, 2))#candidate|7921|(11, 13, 2)|var|float32
var_7922 = relay.var("var_7922", dtype = "float32", shape = (3, 30))#candidate|7922|(3, 30)|var|float32
output = func_7920(var_7921,var_7922,)
func_7923 = relay.Function([var_7921,var_7922,], output)
mutated_mod['func_7923'] = func_7923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2028_call = mod.get_global_var('func_2028')
func_2030_call = mutated_mod.get_global_var('func_2030')
call_7943 = relay.TupleGetItem(func_2028_call(), 0)
call_7944 = relay.TupleGetItem(func_2030_call(), 0)
uop_7954 = relay.cosh(call_7943.astype('float32')) # shape=(5, 1, 2)
uop_7956 = relay.cosh(call_7944.astype('float32')) # shape=(5, 1, 2)
output = relay.Tuple([uop_7954,])
output2 = relay.Tuple([uop_7956,])
func_7968 = relay.Function([], output)
mod['func_7968'] = func_7968
mod = relay.transform.InferType()(mod)
mutated_mod['func_7968'] = func_7968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7968_call = mutated_mod.get_global_var('func_7968')
call_7969 = func_7968_call()
output = call_7969
func_7970 = relay.Function([], output)
mutated_mod['func_7970'] = func_7970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7108_call = mod.get_global_var('func_7108')
func_7109_call = mutated_mod.get_global_var('func_7109')
call_7973 = relay.TupleGetItem(func_7108_call(), 0)
call_7974 = relay.TupleGetItem(func_7109_call(), 0)
func_5634_call = mod.get_global_var('func_5634')
func_5637_call = mutated_mod.get_global_var('func_5637')
var_7976 = relay.var("var_7976", dtype = "float64", shape = (12,))#candidate|7976|(12,)|var|float64
call_7975 = relay.TupleGetItem(func_5634_call(relay.reshape(var_7976.astype('float64'), [12, 1])), 0)
call_7977 = relay.TupleGetItem(func_5637_call(relay.reshape(var_7976.astype('float64'), [12, 1])), 0)
func_568_call = mod.get_global_var('func_568')
func_572_call = mutated_mod.get_global_var('func_572')
var_7979 = relay.var("var_7979", dtype = "uint32", shape = ())#candidate|7979|()|var|uint32
const_7980 = relay.const([[-2.192252,-2.064182],[5.438336,-3.098693],[4.921214,3.028844],[-3.285533,2.451178],[-6.043201,-7.451543],[-3.200554,-0.724121],[-6.121566,-5.587058],[5.650346,-5.678148],[-9.504869,4.400333],[4.835976,8.182648],[6.006492,8.710525],[-7.746237,9.905855],[-0.781894,-9.856952],[-2.418399,-1.888830],[-0.523820,1.989363],[-8.886596,3.483634],[-4.800130,-2.251841],[-0.481957,-3.148423],[-0.094727,-6.177901],[-3.174830,-8.472622],[2.561843,3.098154],[5.459714,6.331280],[-3.121927,6.935535],[-1.211148,-8.817102],[0.064216,2.207371],[-2.741898,3.568847],[4.927214,-8.099998],[7.863735,2.848265],[0.133921,-8.370495],[-0.617262,-5.695307],[-2.147542,0.317710],[0.239409,2.465507],[0.931409,-0.917995],[-1.871516,-1.830326],[4.151621,7.859156],[5.966934,-3.125073],[0.243875,-2.002582],[-3.133617,3.139123],[-4.875217,3.223334],[-5.312160,7.496069],[4.340170,9.421674],[7.561655,-2.930916],[-8.904482,-1.017798],[-4.373607,-4.329346],[7.805664,1.999588],[-9.415584,5.044389],[8.683946,-5.710535],[6.388509,6.812132],[2.697237,7.676494],[2.080514,-6.005152],[6.535175,8.866742],[3.336553,-8.982350],[-5.671658,-3.435676],[-0.549979,-6.979091],[-0.810975,8.726717],[-3.464601,2.292884],[0.765254,-4.636425],[-9.305768,0.530326],[3.009257,5.702053],[-0.629946,-0.158040],[0.647366,1.385808],[-3.373428,0.305375],[-5.453553,-6.158003],[-6.158219,7.338011],[-8.513251,-6.388923],[-8.300952,8.026149],[-9.848770,-0.043577],[-1.230058,-9.686112],[9.089834,5.221573],[7.852758,-9.933362],[1.785863,-2.396059],[-9.523691,0.358564],[2.191803,4.669202],[7.178829,-8.675852],[4.443119,5.574493],[4.881668,3.139405],[0.513230,-9.146345],[-8.523893,9.329247],[8.302649,9.394007],[9.796854,3.719888],[-4.235491,-8.518433],[6.641541,8.356392],[5.308060,-0.120543],[-7.449121,3.610715],[-6.127835,-8.187431],[-0.299921,-3.950776],[2.062606,-1.908068],[-3.902527,-6.723100],[-7.781568,6.813114],[3.442479,8.771817],[2.936687,5.409500],[9.403770,8.177211],[-4.403777,-1.016481],[5.034245,-1.097614],[-5.846663,5.727748],[-7.195942,6.006547],[-5.420509,-5.785567],[-0.770192,-5.177036],[7.758847,2.399458],[-5.942305,-5.668638],[5.891600,-5.326709],[3.240902,7.132925],[5.154078,0.023583],[-0.934137,-9.944981],[4.442962,-7.716551],[-3.764649,8.320545],[-4.059468,1.007541],[2.540908,9.605803],[-4.853039,-7.602406],[4.346332,-7.388215],[-1.077466,-4.191685],[-5.974161,-4.254551],[-5.894752,8.686010],[4.544282,-1.304306],[-4.977369,2.695796],[-6.370655,-7.754354],[-8.855219,-1.493916],[-8.734240,-5.079676],[-7.563879,-3.519511],[0.392667,-3.850461],[2.596705,2.759774],[-4.188687,3.432236],[5.320838,1.958246],[5.749838,-0.929950],[-4.346387,4.398342],[5.728339,8.535232],[6.934045,5.297145],[-4.373406,-9.329398],[0.483891,9.468783],[0.821435,-0.247349],[1.458121,-7.761908],[6.019273,-0.442097],[-9.903043,5.799679],[0.991408,1.170072],[-1.911237,6.831675],[0.630355,-7.838629],[3.019373,-7.173845],[-4.115797,5.622796],[-8.638417,2.439904],[3.779141,4.059092],[1.170536,7.080582],[-4.557658,9.871739],[8.819678,8.896343],[-5.902239,-2.908687],[4.334973,0.513345],[6.626572,6.875044],[-5.604199,-5.003396],[-1.984342,2.324878],[-0.756749,-6.864996],[-2.854086,1.286609],[2.715139,-5.345754],[-1.486499,8.707655],[0.493062,-1.092603],[-9.749222,0.728950],[-0.130891,-0.846196],[8.494999,-7.801886],[-1.586285,-9.893340],[1.102689,7.486589],[6.107197,-7.982137],[-7.086628,5.182908],[-5.616339,-9.529111],[-5.275621,-3.385246],[4.725137,0.601758],[-6.975946,-5.702742],[1.740010,4.593273],[-0.317033,1.007246],[-9.656999,-8.681446],[3.461017,1.236679],[5.802871,-4.549696],[6.815519,-2.704466],[7.204172,6.544419],[6.055296,9.995665],[8.082221,9.178108],[7.118333,3.906936],[2.304808,-5.309897],[7.246663,-1.467891],[7.084774,-6.050867],[8.959202,-7.982238],[6.464700,0.825788],[3.357569,4.937982],[2.441212,3.634744],[0.826058,8.399459],[-5.098865,9.447482],[2.266987,-3.518523],[3.750415,8.307820],[3.572357,4.310502],[9.679710,2.862335],[8.964066,4.560757],[-5.191295,0.276394],[5.885641,-9.678008],[-0.710133,-0.068446],[0.136790,1.441226],[8.729004,-7.531412],[-6.283772,1.512517],[-2.763356,-8.980511],[4.681913,-4.123359],[-8.724262,5.541393],[-2.537871,2.145630],[-6.847943,-3.116959],[-1.206932,-9.755336],[-3.931969,-5.363705],[-6.038885,7.070657],[9.853917,3.293069],[2.785084,-1.477903],[4.398793,-4.387859],[7.974199,0.749152],[9.205571,3.547818],[1.460840,7.227737],[-3.644259,-2.278581],[-9.028159,7.030115],[8.709421,-3.618737],[3.322485,1.688120],[2.084141,-3.022151],[1.720688,-0.249597],[-2.771489,4.351808],[8.637081,3.730735],[-0.919223,-4.516272],[8.750152,-2.016807],[-1.219549,-1.663442],[9.082497,8.152089],[7.506657,6.441187],[4.527079,9.165178],[-3.743745,6.533207],[2.369426,1.001236],[-4.079477,-8.598958],[-8.661997,-9.544282],[-5.199654,-5.838998],[-7.667595,-0.261326],[5.482750,9.081390],[6.841463,-2.083975],[3.487315,3.454759],[0.900846,-7.742795],[-0.197693,9.308614],[-9.614398,-5.515379],[-4.309922,-9.550605],[-2.448531,-0.780840],[0.948855,-6.055360],[-0.244567,-7.723285],[-6.351895,9.948464],[-4.300053,7.402061],[-9.645382,0.052604],[-8.667476,0.138799],[-6.332977,-3.583486],[-6.629829,5.284411],[-9.781294,-6.438353],[-4.059894,-1.644610],[-2.573038,-8.020310],[4.654001,-5.380708],[7.530058,-9.488921],[2.386678,-4.954571],[-9.595612,-6.559506],[-0.977081,-9.819517],[4.083235,0.043399],[0.822536,-5.259653],[7.129929,-9.888178],[-6.510556,6.445179],[7.716297,3.691818],[6.755810,-7.672415],[-0.125762,9.764858],[-0.786952,8.076272],[-7.921862,-4.394728],[-8.131849,-8.832501],[9.107684,6.022478],[6.084664,5.964338],[-4.109191,3.652884],[5.032620,3.837980],[-0.095786,-3.139589],[-5.893380,-4.220587],[-4.756382,-8.028973],[7.340133,8.884897],[-8.752975,-5.992221],[0.391735,-4.458842],[-9.002735,7.113622],[1.795349,-6.797217],[5.600276,3.711806],[-0.848759,8.875393],[-1.275652,-3.817379],[-5.884991,-9.467835],[-5.197766,-8.329873],[3.662171,4.238459],[-6.961052,5.338179],[-5.020796,7.578599],[-3.987595,9.899675],[-8.598134,8.972652],[0.874848,-8.760620],[4.946502,-7.505028],[1.922591,3.324255],[7.173871,-2.585245],[-1.543370,9.498835],[2.389270,-9.458241],[7.662968,7.834320],[-2.353702,-7.343091],[-8.159524,4.961735],[-5.024457,4.678481],[-6.708208,-0.315536],[2.184920,2.720224],[-0.444006,-8.703890],[3.397389,0.078577],[0.459144,-2.602595],[2.609450,0.379613],[0.347220,-6.674148],[-0.973691,7.592460],[-5.849221,-1.817717],[0.926977,5.517000],[-1.257397,9.719930],[4.471707,4.261723],[9.528128,-4.438390],[-4.555370,-3.235061],[0.994320,4.868244],[-5.052039,-8.663496],[-0.420124,0.365017],[8.368835,7.798043],[-4.772946,8.483674],[8.437112,-7.770242],[2.434682,-0.913647],[-6.065663,2.409084],[1.800572,4.607081],[-0.921711,-9.470073],[-3.342076,-3.491138],[5.277311,-4.968746],[-2.947969,9.316159],[-6.355760,3.016943],[-2.219335,2.689705],[-6.073813,-6.510556],[-8.526737,-4.638724],[-9.743389,7.228473],[-7.706439,-5.838701],[-0.661482,3.325776],[-4.674860,-6.878409],[1.673833,-4.506537],[2.609565,-3.508028],[9.340284,9.347578],[7.496787,-5.447521],[7.972495,-5.132606],[8.633752,5.940611],[8.559515,-8.999863],[7.283212,-2.458446],[-9.257580,-6.411007],[4.570515,-8.552526],[-9.202290,-8.376199],[7.220052,1.965149],[-7.876211,-9.450091],[-1.408846,9.967142],[-4.474314,6.249201],[8.312608,-4.248441],[8.013651,7.103677],[-3.030839,0.757536],[-0.840209,-0.854357],[-1.911578,-4.683668],[2.212237,-8.231073],[-8.389054,-1.809599],[2.484669,-6.573755],[1.306210,8.135830],[2.237673,9.743019],[-7.720352,-8.178107],[-3.118408,-6.431842],[-4.660501,-2.740829],[4.949837,5.969003],[-4.793000,-0.401569],[-5.316492,-9.906501],[-2.119810,-6.825891],[0.022571,2.353097],[-8.684854,-8.230941],[-5.947630,6.180080],[2.230785,-1.806078],[-3.998355,-6.476747],[2.797411,-4.615327],[3.471377,-2.758630],[-9.658827,9.519536],[-6.650674,2.165029],[2.125326,-1.419825],[-9.066623,-2.747112],[1.361215,-9.159752],[8.684201,-5.915090],[-6.113840,-3.264945],[-2.250937,9.566984],[4.438634,-7.731045],[7.336100,-1.137790],[0.114342,-7.043893],[-2.375921,3.636761],[2.982257,7.364422],[-3.672652,-8.387727],[-7.592758,-1.145850],[6.384878,-5.710357],[-2.233113,-8.987543],[-9.558662,-6.267160],[3.485598,-6.329004],[-3.150408,1.009541],[5.908069,-2.242786],[1.844820,-7.969625],[1.962428,-7.706900],[-2.373467,3.396346],[8.860832,-3.244707],[-5.942751,4.896428],[3.474835,7.721482],[7.864145,-3.425495]], dtype = "float32")#candidate|7980|(396, 2)|const|float32
call_7978 = relay.TupleGetItem(func_568_call(relay.reshape(var_7979.astype('uint32'), []), relay.reshape(const_7980.astype('float32'), [792,]), ), 1)
call_7981 = relay.TupleGetItem(func_572_call(relay.reshape(var_7979.astype('uint32'), []), relay.reshape(const_7980.astype('float32'), [792,]), ), 1)
output = relay.Tuple([call_7973,call_7975,var_7976,call_7978,var_7979,const_7980,])
output2 = relay.Tuple([call_7974,call_7977,var_7976,call_7981,var_7979,const_7980,])
func_7984 = relay.Function([var_7976,var_7979,], output)
mod['func_7984'] = func_7984
mod = relay.transform.InferType()(mod)
mutated_mod['func_7984'] = func_7984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7984_call = mutated_mod.get_global_var('func_7984')
var_7986 = relay.var("var_7986", dtype = "float64", shape = (12,))#candidate|7986|(12,)|var|float64
var_7987 = relay.var("var_7987", dtype = "uint32", shape = ())#candidate|7987|()|var|uint32
call_7985 = func_7984_call(var_7986,var_7987,)
output = call_7985
func_7988 = relay.Function([var_7986,var_7987,], output)
mutated_mod['func_7988'] = func_7988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6637_call = mod.get_global_var('func_6637')
func_6639_call = mutated_mod.get_global_var('func_6639')
call_7996 = relay.TupleGetItem(func_6637_call(), 0)
call_7997 = relay.TupleGetItem(func_6639_call(), 0)
var_8004 = relay.var("var_8004", dtype = "float64", shape = (5, 8, 2))#candidate|8004|(5, 8, 2)|var|float64
bop_8005 = relay.maximum(call_7996.astype('int16'), var_8004.astype('int16')) # shape=(5, 8, 2)
bop_8008 = relay.maximum(call_7997.astype('int16'), var_8004.astype('int16')) # shape=(5, 8, 2)
output = bop_8005
output2 = bop_8008
func_8011 = relay.Function([var_8004,], output)
mod['func_8011'] = func_8011
mod = relay.transform.InferType()(mod)
mutated_mod['func_8011'] = func_8011
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8012 = relay.var("var_8012", dtype = "float64", shape = (5, 8, 2))#candidate|8012|(5, 8, 2)|var|float64
func_8011_call = mutated_mod.get_global_var('func_8011')
call_8013 = func_8011_call(var_8012)
output = call_8013
func_8014 = relay.Function([var_8012], output)
mutated_mod['func_8014'] = func_8014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2570_call = mod.get_global_var('func_2570')
func_2571_call = mutated_mod.get_global_var('func_2571')
call_8058 = relay.TupleGetItem(func_2570_call(), 0)
call_8059 = relay.TupleGetItem(func_2571_call(), 0)
var_8067 = relay.var("var_8067", dtype = "float64", shape = (5, 9, 2))#candidate|8067|(5, 9, 2)|var|float64
bop_8068 = relay.left_shift(call_8058.astype('int64'), var_8067.astype('int64')) # shape=(5, 9, 2)
bop_8071 = relay.left_shift(call_8059.astype('int64'), var_8067.astype('int64')) # shape=(5, 9, 2)
func_2760_call = mod.get_global_var('func_2760')
func_2762_call = mutated_mod.get_global_var('func_2762')
const_8076 = relay.const([5.105283,5.545491,7.157718,-1.501190,-5.108599,-3.758677,-1.801953,-5.666592,-2.805000,-5.778650,-5.704683,7.049134,6.888848,-3.003375,8.884509,-8.908947,-6.286107,0.663869,3.455215,-7.429531,-9.797701,7.538019,-3.640357,0.851308,1.305773,-1.504797,4.034529,-9.966532,8.510256,-2.096571,5.428485,9.857636,-5.899481,-1.988223,-7.154856,5.311315,3.834046,-1.746057,-1.559110,3.808570,6.969702,5.192184,9.776163,9.731437,0.719298,6.450960,-9.771546,-5.447133,-2.398197,-9.908117,3.684405,6.857230,-8.178386,-5.786347,9.571092,-6.010441,6.665363,7.897987,1.545887,2.161774,-3.288442,-6.363077,-0.662793,8.901321,0.392081,2.307514,1.507936,9.686146,-2.739603,7.695256,8.029502,-9.698980,5.930906,0.903317,-8.093815,8.478250,-9.522483,-0.370746,-1.748028,0.582409,1.491801,-4.394805,2.835618,5.103777,-4.486721,8.422926,-0.592104,-6.926479,0.790669,5.187146,7.536095,2.067170,-2.605287,-4.447437,5.863547,-0.014263,-0.219713,-8.656810,-7.863004,-4.144437,-4.215984,7.128351,9.009581,-0.457761,5.933924,0.184029,5.243764,-0.085638,-1.996911,-1.171131,-0.302363,-2.386294,-1.803297,-8.686351,-6.963493,0.802606,-4.859212,-1.765977,-6.565173,3.254790,-0.304029,-2.410246,7.890076,1.192178,3.486349,5.523842,-8.594725,2.049002,-8.967906,5.818480,-0.886075,1.736399,7.031478,-9.658076,4.223516,-9.117693,-8.887805,1.914149,8.553752,7.726186,-4.924293,4.364512,5.866589,6.946453,-1.763818,-6.963308,0.719093,-9.166126,0.370695,5.566851,-0.984293,-5.550233,-6.474827,-8.536357,-8.534743,6.147572,-5.608570,4.270354,7.071567,-0.760910,-5.338132,-0.709418,-2.848721,-4.711753,5.522157,-4.181069,7.871528,1.982771,-6.769712,-3.501640,2.910880,-3.527144,-5.306289,3.898831,-3.607402,0.075404,5.746787,1.335917,-1.804598,8.626312,8.484939,5.793678,8.469510,-7.556143,-5.837435,-4.739390,-2.155397,-1.110500,4.831258,-2.148178,5.418210,-8.423823,8.947459,-4.126118,1.236676,-9.466847,-9.174577,-5.473682,-3.880168,1.915030,0.779315,-3.321715,-8.760983,-3.180638,7.606203,-3.748015,-9.855133,2.228574,-9.029940,-2.373640,7.383528,-8.461328,-2.815770,0.844121,8.106804,-1.597046,2.332182,1.774321,2.142371,3.040214,-6.460684,5.115084,-1.444435,5.221749,-8.289770,-8.551551,-9.014769,8.865612,1.156707,2.512941,-3.300768,7.499169,-9.359286,1.849513,-2.389231,-7.176108,-6.573252,-2.017123,-5.834553,5.748613,9.976304,0.520887,-3.470049,-9.325553,7.938253,9.557353,7.784890,1.515469,5.027571,8.606618,0.828529,-5.004371,2.422138,-9.116274,-6.613577,3.182419,-4.060057,0.255998,6.128983,-8.504442,5.521332,-4.278656,8.832918,1.317677,6.333080,-3.017389,-2.556789,-2.671676,0.105942,-4.405774,8.179831,9.461633,-9.728299,-7.986799,0.736903,-1.136178,-7.591037,8.051178,1.946560,-6.057856,-0.617641,9.267109,-8.943584,-4.817867,6.362461,0.809331,-3.547736,-4.976313,-9.458246,9.182316,4.436183,-1.216237,-8.174626,8.696096,-1.814691,-1.800315,1.270437,-5.805688,-3.256128,0.064425,8.753521,-9.409076,-6.571814,-8.999934,4.234192,-8.188571,0.135193,7.520141,-1.579952,0.461348,-4.726256,7.970981,-4.436508,2.289805,3.187157,-6.715329,-4.471630,-5.122734,2.312692,0.424616,-7.642927,0.932738,-8.973603,-1.142833,-2.465443,-6.087882,1.741984,-9.056081,1.869025,-7.247331,-7.825734,4.411157,7.720783,2.835431,-7.910560,-4.095654,-1.621612,-8.420482,-3.219237,-6.827072,2.842683,4.525971,-7.957585,-5.170636,-6.464123,-7.729128,3.454873,1.251831,-1.414019,9.809487,2.625041,6.316508,6.602501,-0.977473,-6.898959,-0.333025,1.264792,7.113512,6.815437,6.475112,-6.357157,0.653536,7.112653,0.873981,9.035420,-1.984957,-4.655883,7.796578,-3.399344,6.013010,-3.878248,-9.250451,2.090947,5.698057,4.614926,-0.126652,3.015243,9.537468,-1.804591,-0.273079,0.114409,-5.090768,-2.039429,8.733206,-9.389484,-2.075634,3.678936,-9.547391,-3.510004,5.190320,1.393654,8.524216,1.260250,2.596582,1.112376,-1.953588,3.810304,-1.325910,-6.156745,-8.389821,-6.497293,1.853542,7.161475,3.335031,6.559345,1.664345,-9.396868,2.456861,3.184215,-3.030642,-2.174888,6.701922,6.519381,-5.332247,7.072746,-3.773910,8.595904,8.719634,-7.040767,-1.720236,-9.422561,-1.868512,-8.717298,-0.010964,-1.662127,9.177287,1.699978,-3.633332,-5.689186,-2.352889,5.001776,-9.637383], dtype = "float64")#candidate|8076|(432,)|const|float64
call_8075 = relay.TupleGetItem(func_2760_call(relay.reshape(const_8076.astype('float64'), [216, 2])), 7)
call_8077 = relay.TupleGetItem(func_2762_call(relay.reshape(const_8076.astype('float64'), [216, 2])), 7)
output = relay.Tuple([bop_8068,call_8075,const_8076,])
output2 = relay.Tuple([bop_8071,call_8077,const_8076,])
func_8081 = relay.Function([var_8067,], output)
mod['func_8081'] = func_8081
mod = relay.transform.InferType()(mod)
var_8082 = relay.var("var_8082", dtype = "float64", shape = (5, 9, 2))#candidate|8082|(5, 9, 2)|var|float64
output = func_8081(var_8082)
func_8083 = relay.Function([var_8082], output)
mutated_mod['func_8083'] = func_8083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4789_call = mod.get_global_var('func_4789')
func_4791_call = mutated_mod.get_global_var('func_4791')
call_8090 = relay.TupleGetItem(func_4789_call(), 6)
call_8091 = relay.TupleGetItem(func_4791_call(), 6)
output = call_8090
output2 = call_8091
func_8130 = relay.Function([], output)
mod['func_8130'] = func_8130
mod = relay.transform.InferType()(mod)
output = func_8130()
func_8131 = relay.Function([], output)
mutated_mod['func_8131'] = func_8131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3080_call = mod.get_global_var('func_3080')
func_3081_call = mutated_mod.get_global_var('func_3081')
call_8205 = func_3080_call()
call_8206 = func_3080_call()
func_7401_call = mod.get_global_var('func_7401')
func_7402_call = mutated_mod.get_global_var('func_7402')
call_8222 = relay.TupleGetItem(func_7401_call(), 1)
call_8223 = relay.TupleGetItem(func_7402_call(), 1)
output = relay.Tuple([call_8205,call_8222,])
output2 = relay.Tuple([call_8206,call_8223,])
func_8224 = relay.Function([], output)
mod['func_8224'] = func_8224
mod = relay.transform.InferType()(mod)
output = func_8224()
func_8225 = relay.Function([], output)
mutated_mod['func_8225'] = func_8225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4365_call = mod.get_global_var('func_4365')
func_4367_call = mutated_mod.get_global_var('func_4367')
call_8237 = func_4365_call()
call_8238 = func_4365_call()
func_7273_call = mod.get_global_var('func_7273')
func_7275_call = mutated_mod.get_global_var('func_7275')
call_8241 = func_7273_call()
call_8242 = func_7273_call()
bop_8244 = relay.less(call_8237.astype('bool'), relay.reshape(call_8241.astype('bool'), relay.shape_of(call_8237))) # shape=(5, 1, 2)
bop_8247 = relay.less(call_8238.astype('bool'), relay.reshape(call_8242.astype('bool'), relay.shape_of(call_8238))) # shape=(5, 1, 2)
func_5634_call = mod.get_global_var('func_5634')
func_5637_call = mutated_mod.get_global_var('func_5637')
const_8249 = relay.const([5.906091,8.801779,-4.531397,-5.152912,7.544734,3.988743,0.481574,0.207334,-2.495786,-3.893227,8.838555,-2.116756], dtype = "float64")#candidate|8249|(12,)|const|float64
call_8248 = relay.TupleGetItem(func_5634_call(relay.reshape(const_8249.astype('float64'), [12, 1])), 2)
call_8250 = relay.TupleGetItem(func_5637_call(relay.reshape(const_8249.astype('float64'), [12, 1])), 2)
output = relay.Tuple([bop_8244,call_8248,const_8249,])
output2 = relay.Tuple([bop_8247,call_8250,const_8249,])
func_8266 = relay.Function([], output)
mod['func_8266'] = func_8266
mod = relay.transform.InferType()(mod)
output = func_8266()
func_8267 = relay.Function([], output)
mutated_mod['func_8267'] = func_8267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3080_call = mod.get_global_var('func_3080')
func_3081_call = mutated_mod.get_global_var('func_3081')
call_8297 = func_3080_call()
call_8298 = func_3080_call()
output = call_8297
output2 = call_8298
func_8309 = relay.Function([], output)
mod['func_8309'] = func_8309
mod = relay.transform.InferType()(mod)
mutated_mod['func_8309'] = func_8309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8309_call = mutated_mod.get_global_var('func_8309')
call_8310 = func_8309_call()
output = call_8310
func_8311 = relay.Function([], output)
mutated_mod['func_8311'] = func_8311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6052_call = mod.get_global_var('func_6052')
func_6054_call = mutated_mod.get_global_var('func_6054')
call_8356 = func_6052_call()
call_8357 = func_6052_call()
var_8392 = relay.var("var_8392", dtype = "float32", shape = (90,))#candidate|8392|(90,)|var|float32
bop_8393 = relay.less(call_8356.astype('bool'), relay.reshape(var_8392.astype('bool'), relay.shape_of(call_8356))) # shape=(90,)
bop_8396 = relay.less(call_8357.astype('bool'), relay.reshape(var_8392.astype('bool'), relay.shape_of(call_8357))) # shape=(90,)
output = relay.Tuple([bop_8393,])
output2 = relay.Tuple([bop_8396,])
F = relay.Function([var_8392,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8392,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
	relay.transform.InferType(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

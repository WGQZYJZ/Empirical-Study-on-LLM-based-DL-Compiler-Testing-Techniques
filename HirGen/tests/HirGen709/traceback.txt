==========mod==========
#[version = "0.0.5"]
def @func_12764() -> (Tensor[(13, 8, 5), float32],) {
  %0 = @func_5827() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1 = %0.0;
  (%1,)
}

def @func_5024() -> Tensor[(13, 8, 5), float64] {
  %2 = @func_3613() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %2.0
}

def @func_9170() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %3 = @func_4760() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %4 = @func_5186() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %5 = %3.5;
  %6 = %4.1;
  (%5, %6)
}

def @func_3958() -> Tensor[(13, 8, 5), float32] {
  %7 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %7.0
}

def @func_15974() -> (int32,) {
  %8 = @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
  %9 = %8.3;
  (%9,)
}

def @func_14435() -> Tensor[(13, 8, 5), float64] {
  %10 = @func_10030() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %10.1
}

def @func_12581() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %11 = @func_9170() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %12 = %11.1;
  %13 = @func_5648() /* ty=Tensor[(13, 8, 5), float64] */;
  (%12, %13)
}

def @func_3690() -> (Tensor[(13, 8, 5), float32],) {
  %14 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
  %15 = cast(%14, dtype="float32") /* ty=Tensor[(13, 8, 5), float32] */;
  %16 = sinh(%15) /* ty=Tensor[(13, 8, 5), float32] */;
  (%16,)
}

def @func_3908() -> (Tensor[(13, 8, 5), float64],) {
  %17 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
  (%17,)
}

def @func_12348() -> (Tensor[(13, 8, 5), float64],) {
  %18 = @func_5186() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %19 = %18.1;
  (%19,)
}

def @func_7950() -> (int32, Tensor[(13, 8, 5), float32]) {
  %20 = @func_5287() /* ty=(int32, Tensor[(13, 8, 5), float64]) */;
  %21 = %20.0;
  %22 = @func_3835() /* ty=Tensor[(13, 8, 5), float32] */;
  (%21, %22)
}

def @func_15260(%var_15251: Tensor[(180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(180), uint8], Tensor[(13, 8, 5), float32]) {
  %23 = @func_15092() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %24 = cast(%var_15251, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %25 = reshape(%24, newshape=[180]) /* ty=Tensor[(180), uint8] */;
  %26 = @func_10334(%25) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 13, 2), float64], Tensor[(180), uint8], Tensor[(1200, 1), int8], Tensor[(13, 8, 5), float64]) */;
  %27 = @func_14033() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %28 = %23.0;
  %29 = @func_11217() /* ty=Tensor[(13, 8, 5), float64] */;
  %30 = %26.4;
  %31 = %27.0;
  (%28, %29, %30, %var_15251, %31)
}

def @func_8293() -> (Tensor[(5, 10, 15), bool],) {
  %32 = @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
  %33 = %32.1;
  (%33,)
}

def @func_10252() -> (Tensor[(10, 3, 1), float32],) {
  %34 = @func_7759() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %35 = %34.0;
  (%35,)
}

def @func_18649(%var_18600: Tensor[(750), uint16]) -> (Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(750), uint16], Tensor[(13, 8, 5), float64]) {
  %36 = @func_5186() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %37 = cast(%var_18600, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %38 = reshape(%37, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %39 = @func_9404(%38) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %40 = @func_15092() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %41 = %36.0;
  %42 = %39.4;
  %43 = %40.0;
  (%41, %42, %var_18600, %43)
}

def @func_6561(%var_6551: Tensor[(270), float32]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) {
  %44 = @func_6438() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %45 = @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %46 = cast(%var_6551, dtype="float32") /* ty=Tensor[(270), float32] */;
  %47 = reshape(%46, newshape=[5, 6, 9]) /* ty=Tensor[(5, 6, 9), float32] */;
  %48 = %44.0;
  %49 = %45.0;
  %50 = @func_6381(%47) /* ty=Tensor[(5, 6, 9), float32] */;
  (%48, %49, %50, %var_6551)
}

def @func_11598() -> Tensor[(5, 10, 15), bool] {
  %51 = @func_8293() /* ty=(Tensor[(5, 10, 15), bool],) */;
  %51.0
}

def @func_9305() -> Tensor[(13, 8, 5), float32] {
  @func_5564() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_7275(%var_7251: Tensor[(270), float32]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) {
  %52 = @func_3935() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %53 = @func_4560() /* ty=(int32, Tensor[(13, 8, 5), float32]) */;
  %54 = cast(%var_7251, dtype="float32") /* ty=Tensor[(270), float32] */;
  %55 = reshape(%54, newshape=[270]) /* ty=Tensor[(270), float32] */;
  %56 = @func_6561(%55) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) */;
  %57 = %52.1;
  %58 = %53.1;
  %59 = %56.2;
  (%57, %58, %59, %var_7251)
}

def @func_11408(%var_11389: Tensor[(7, 9, 13), float64]) -> (Tensor[(7, 9, 13), float64],) {
  %60 = cast(%var_11389, dtype="float64") /* ty=Tensor[(7, 9, 13), float64] */;
  %61 = exp(%60) /* ty=Tensor[(7, 9, 13), float64] */;
  (%61,)
}

def @func_9586() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  %62 = @func_9170() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %63 = @func_9511() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %64 = %62.1;
  %65 = %63.1;
  (%64, %65)
}

def @func_13117(%var_13024: Tensor[(270), float32]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(270), float32], Tensor[(10, 3, 1), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], int32) {
  %66 = @func_9417() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %67 = cast(%var_13024, dtype="float32") /* ty=Tensor[(270), float32] */;
  %68 = reshape(%67, newshape=[270]) /* ty=Tensor[(270), float32] */;
  %69 = @func_6561(%68) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) */;
  %70 = @func_5066() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %71 = @func_4521() /* ty=(int32,) */;
  %72 = %66.0;
  %73 = %69.0;
  %74 = @func_10724() /* ty=Tensor[(10, 3, 1), float32] */;
  %75 = @func_10103() /* ty=Tensor[(10, 3, 1), float32] */;
  %76 = @func_6353() /* ty=Tensor[(13, 8, 5), float64] */;
  %77 = %70.0;
  %78 = %71.0;
  (%72, %73, %var_13024, %74, %75, %76, %77, %78)
}

def @func_2805(%var_2791: Tensor[(5, 9, 8), float32], %var_2792: Tensor[(5, 9, 8), float32]) -> (Tensor[(5, 9, 8), float32], Tensor[(7, 2, 5), float64], Tensor[(70), uint64]) {
  %79 = cast(%var_2792, dtype="float32") /* ty=Tensor[(5, 9, 8), float32] */;
  %80 = shape_of(%var_2791, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%var_2791, dtype="float32") /* ty=Tensor[(5, 9, 8), float32] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %83 = cast(meta[relay.Constant][0] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %84 = cast(meta[relay.Constant][0] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %85 = reshape(%83, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
  %86 = reshape(%84, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
  %87 = @func_1769(%85, %86) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) */;
  %88 = mod(%81, %82) /* ty=Tensor[(5, 9, 8), float32] */;
  %89 = %87.2;
  (%88, %89, meta[relay.Constant][0] /* ty=Tensor[(70), uint64] */)
}

def @func_11489() -> (Tensor[(70), uint64], Tensor[(13, 8, 5), float32]) {
  %90 = @func_7344() /* ty=(Tensor[(70), uint64], Tensor[(9, 16, 2), int64]) */;
  %91 = %90.0;
  %92 = @func_3835() /* ty=Tensor[(13, 8, 5), float32] */;
  (%91, %92)
}

def @func_15092() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %93 = @func_14234() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %94 = @func_3888() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %95 = %93.0;
  %96 = %94.0;
  (%95, %96)
}

def @func_3808(%var_3804: Tensor[(750), uint16]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) {
  %97 = cast(%var_3804, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %98 = reshape(%97, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), uint16] */;
  %99 = @func_2171(%98) /* ty=(Tensor[(5, 10, 15), bool],) */;
  %100 = @func_3771() /* ty=Tensor[(13, 8, 5), float32] */;
  %101 = %99.0;
  (%100, %101, %var_3804)
}

def @func_1590(%var_1581: Tensor[(15, 6, 5), uint8]) -> (Tensor[(15, 6, 5), bool],) {
  %102 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 6, 5), uint8] */, dtype="uint8") /* ty=Tensor[(15, 6, 5), uint8] */;
  %103 = shape_of(%var_1581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %104 = cast(%var_1581, dtype="uint8") /* ty=Tensor[(15, 6, 5), uint8] */;
  %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %106 = right_shift(%104, %105) /* ty=Tensor[(15, 6, 5), uint8] */;
  %107 = cast(%var_1581, dtype="bool") /* ty=Tensor[(15, 6, 5), bool] */;
  %108 = shape_of(%106, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%106, dtype="bool") /* ty=Tensor[(15, 6, 5), bool] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %111 = greater_equal(%109, %110) /* ty=Tensor[(15, 6, 5), bool] */;
  (%111,)
}

def @func_15443() -> (Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(360), float32]) {
  %112 = @func_12809() /* ty=(Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(360), float32]) */;
  %113 = cast(meta[relay.Constant][2] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %114 = cast(meta[relay.Constant][2] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %115 = reshape(%113, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %116 = reshape(%114, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %117 = @func_2805(%115, %116) /* ty=(Tensor[(5, 9, 8), float32], Tensor[(7, 2, 5), float64], Tensor[(70), uint64]) */;
  %118 = %112.1;
  %119 = %117.1;
  (%118, %119, meta[relay.Constant][2] /* ty=Tensor[(360), float32] */)
}

def @func_10689() -> Tensor[(13, 8, 5), float32] {
  %120 = @func_10395() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
  %120.0
}

def @func_19187() -> (Tensor[(15, 6, 5), float32],) {
  %121 = @func_16765() /* ty=Tensor[(15, 6, 5), float32] */;
  (%121,)
}

def @func_10576() -> (Tensor[(13, 8, 5), float32], Tensor[(8, 8, 6), float64], Tensor[(13, 8, 5), float32]) {
  %122 = @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
  %123 = @func_9976() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %124 = @func_7950() /* ty=(int32, Tensor[(13, 8, 5), float32]) */;
  %125 = %122.4;
  %126 = %123.0;
  %127 = %124.1;
  (%125, %126, %127)
}

def @func_5287() -> (int32, Tensor[(13, 8, 5), float64]) {
  %128 = @func_4521() /* ty=(int32,) */;
  %129 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %130 = %128.0;
  %131 = %129.0;
  (%130, %131)
}

def @func_12457() -> Tensor[(13, 8, 5), float32] {
  %132 = @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %132.0
}

def @func_5099() -> Tensor[(13, 8, 5), float32] {
  @func_3958() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_15751() -> (Tensor[(13, 8, 5), float32],) {
  %133 = @func_9511() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %134 = %133.1;
  (%134,)
}

def @func_7016() -> Tensor[(13, 8, 5), float64] {
  %135 = @func_3888() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %135.0
}

def @func_10462() -> (Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(750), uint16]) {
  %136 = @func_8151() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %137 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %138 = @func_9223() /* ty=(Tensor[(750), uint16],) */;
  %139 = %136.0;
  %140 = @func_5004() /* ty=Tensor[(750), uint16] */;
  %141 = %137.0;
  %142 = %138.0;
  (%139, %140, %141, %142)
}

def @func_9054() -> Tensor[(750), uint16] {
  %143 = @func_4390() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64]) */;
  %143.1
}

def @func_10334(%var_10315: Tensor[(180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(5, 13, 2), float64], Tensor[(180), uint8], Tensor[(1200, 1), int8], Tensor[(13, 8, 5), float64]) {
  %144 = cast(%var_10315, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %145 = cast(%var_10315, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %146 = cast(meta[relay.Constant][3] /* ty=Tensor[(1200, 1), int8] */, dtype="int8") /* ty=Tensor[(1200, 1), int8] */;
  %147 = reshape(%144, newshape=[10, 2, 9]) /* ty=Tensor[(10, 2, 9), uint8] */;
  %148 = reshape(%145, newshape=[10, 2, 9]) /* ty=Tensor[(10, 2, 9), uint8] */;
  %149 = reshape(%146, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %150 = @func_682(%147, %148, %149) /* ty=(Tensor[(10, 2, 9), bool], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(10, ?, 4), int8], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(1200), int8], Tensor[(5, 13, 2), float64]) */;
  %151 = @func_6925() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %152 = @func_3476() /* ty=Tensor[(13, 8, 5), float64] */;
  %153 = %150.1;
  %154 = %151.1;
  (%152, %153, %var_10315, meta[relay.Constant][3] /* ty=Tensor[(1200, 1), int8] */, %154)
}

def @func_7759() -> (Tensor[(10, 3, 1), float32],) {
  %155 = @func_6177() /* ty=Tensor[(10, 3, 1), float32] */;
  (%155,)
}

def @func_8934() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(560), uint64]) {
  %156 = @func_6338() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %157 = @func_3613() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %158 = cast(meta[relay.Constant][4] /* ty=Tensor[(560), uint64] */, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %159 = reshape(%158, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %160 = @func_7912(%159) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(750), uint16], Tensor[(70), float64], Tensor[(560), uint64], Tensor[(10, 3, 1), int32], int32) */;
  %161 = %156.0;
  %162 = %157.0;
  %163 = %160.3;
  (%161, %162, %163, meta[relay.Constant][4] /* ty=Tensor[(560), uint64] */)
}

def @func_18354(%var_18347: Tensor[(5, 16, 6), float64]) -> (Tensor[(5, 16, 6), float64], Tensor[(10, 3, 1), float32]) {
  %164 = cast(%var_18347, dtype="float64") /* ty=Tensor[(5, 16, 6), float64] */;
  %165 = @func_12604() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(8, 8, 6), float64], Tensor[(10, 3, 1), float32]) */;
  %166 = atanh(%164) /* ty=Tensor[(5, 16, 6), float64] */;
  %167 = %165.2;
  (%166, %167)
}

def @func_8890() -> (Tensor[(5, 10, 15), bool],) {
  %168 = @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
  %169 = %168.1;
  (%169,)
}

def @func_17254() -> (Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) {
  %170 = @func_11816() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %171 = cast(meta[relay.Constant][5] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %172 = reshape(%171, newshape=[270]) /* ty=Tensor[(270), float32] */;
  %173 = @func_7275(%172) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) */;
  %174 = %170.0;
  %175 = %173.2;
  (%174, %175, meta[relay.Constant][5] /* ty=Tensor[(270), float32] */)
}

def @func_4479(%var_4437: Tensor[(560), uint64], %var_4439: Tensor[(130), float64], %var_4440: Tensor[(70), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), float64]) {
  %176 = cast(%var_4437, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %177 = cast(meta[relay.Constant][6] /* ty=Tensor[(750), uint16] */, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %178 = cast(%var_4439, dtype="float64") /* ty=Tensor[(130), float64] */;
  %179 = cast(%var_4440, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %180 = reshape(%176, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %181 = reshape(%177, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %182 = reshape(%178, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %183 = reshape(%179, newshape=[70]) /* ty=Tensor[(70), uint64] */;
  %184 = @func_3597(%180, %181, %182, %183) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(7, 2, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64]) */;
  %185 = @func_3908() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %186 = @func_4178() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %187 = cast(meta[relay.Constant][6] /* ty=Tensor[(750), uint16] */, dtype="float32") /* ty=Tensor[(750), float32] */;
  %188 = atan(%187) /* ty=Tensor[(750), float32] */;
  %189 = cast(%188, dtype="float64") /* ty=Tensor[(750), float64] */;
  %190 = @func_4405() /* ty=Tensor[(13, 8, 5), float64] */;
  %191 = %184.0;
  %192 = %185.0;
  %193 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
  %194 = %186.0;
  %195 = acosh(%189) /* ty=Tensor[(750), float64] */;
  (%190, %191, %var_4437, %var_4439, %var_4440, %192, %193, %194, %195)
}

def @func_2489(%var_2476: int32) -> Tensor[(10, 3, 1), int32] {
  %196 = cast(%var_2476, dtype="int32") /* ty=int32 */;
  %197 = cast(meta[relay.Constant][7] /* ty=Tensor[(10, 3, 1), int32] */, dtype="int32") /* ty=Tensor[(10, 3, 1), int32] */;
  maximum(%196, %197) /* ty=Tensor[(10, 3, 1), int32] */
}

def @func_19270() -> Tensor[(10, 3, 1), float32] {
  @func_12892() /* ty=Tensor[(10, 3, 1), float32] */
}

def @func_19967(%var_19964: Tensor[(560), uint64], %var_19965: Tensor[(50, 15), uint16]) -> (Tensor[(13, 8, 5), float64], Tensor[(130), float64], Tensor[(560), uint64], Tensor[(50, 15), uint16]) {
  %198 = @func_10948() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %199 = cast(%var_19964, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %200 = cast(%var_19965, dtype="uint16") /* ty=Tensor[(50, 15), uint16] */;
  %201 = reshape(%199, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %202 = reshape(%200, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %203 = @func_15166(%201, %202) /* ty=(Tensor[(5, 13, 2), float64], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70, 1), uint64], Tensor[(10, 3, ?), int8]) */;
  %204 = %198.0;
  %205 = %203.3;
  (%204, %205, %var_19964, %var_19965)
}

def @func_18468() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(270), float32], Tensor[(1080), uint8], Tensor[(13, 8, 5), float64]) {
  %206 = @func_18422() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %207 = cast(meta[relay.Constant][8] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %208 = cast(meta[relay.Constant][9] /* ty=Tensor[(1080), uint8] */, dtype="uint8") /* ty=Tensor[(1080), uint8] */;
  %209 = reshape(%207, newshape=[10, 3, 9]) /* ty=Tensor[(10, 3, 9), float32] */;
  %210 = reshape(%208, newshape=[6, 180]) /* ty=Tensor[(6, 180), uint8] */;
  %211 = @func_15023(%209, %210) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(10, 3, 9), int64], Tensor[(3, 60), uint8], Tensor[(6, 180), bool], Tensor[(13, 8, 5), float32]) */;
  %212 = @func_15092() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %213 = %206.0;
  %214 = %211.4;
  %215 = %212.0;
  (%213, %214, meta[relay.Constant][8] /* ty=Tensor[(270), float32] */, meta[relay.Constant][9] /* ty=Tensor[(1080), uint8] */, %215)
}

def @func_4873(%var_4839: int32) -> (Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %216 = cast(%var_4839, dtype="int32") /* ty=int32 */;
  %217 = reshape(%216, newshape=[]) /* ty=int32 */;
  %218 = @func_3935() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %219 = @func_3613() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %220 = @func_4077() /* ty=Tensor[(13, 8, 5), float32] */;
  %221 = @func_2489(%217) /* ty=Tensor[(10, 3, 1), int32] */;
  %222 = %218.1;
  %223 = %219.0;
  (%220, %221, %var_4839, %222, %223)
}

def @func_8517(%var_8486: Tensor[(360), int32]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(4, 10, 9), uint16], Tensor[(360), int32], Tensor[(13, 8, 5), bool]) {
  %224 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %225 = @func_5882() /* ty=Tensor[(13, 8, 5), float64] */;
  %226 = cast(%225, dtype="float64") /* ty=Tensor[(13, 8, 5), float64] */;
  %227 = cast(%var_8486, dtype="int32") /* ty=Tensor[(360), int32] */;
  %228 = reshape(%227, newshape=[4, 10, 9]) /* ty=Tensor[(4, 10, 9), int32] */;
  %229 = cast(%225, dtype="float64") /* ty=Tensor[(13, 8, 5), float64] */;
  %230 = reshape(%229, newshape=[13, 8, 5]) /* ty=Tensor[(13, 8, 5), float64] */;
  %231 = @func_5318(%230) /* ty=(Tensor[(13, 8, 5), bool], Tensor[(13, 8, 5), float64]) */;
  %232 = %224.0;
  %233 = tan(%226) /* ty=Tensor[(13, 8, 5), float64] */;
  %234 = @func_7666(%228) /* ty=Tensor[(4, 10, 9), uint16] */;
  %235 = %231.0;
  (%232, %233, %234, %var_8486, %235)
}

def @func_5564() -> Tensor[(13, 8, 5), float32] {
  %236 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %237 = %236.0;
  %238 = cast(%237, dtype="float32") /* ty=Tensor[(13, 8, 5), float32] */;
  asinh(%238) /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_6837(%var_6821: Tensor[(560), uint64]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(70), float64]) {
  %239 = @func_5066() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %240 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %241 = cast(%var_6821, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %242 = cast(meta[relay.Constant][10] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %243 = cast(meta[relay.Constant][11] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %244 = reshape(%241, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %245 = reshape(%242, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %246 = reshape(%243, newshape=[70]) /* ty=Tensor[(70), uint64] */;
  %247 = @func_4479(%244, %245, %246) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), float64]) */;
  %248 = %247.4;
  %249 = cast(%248, dtype="float64") /* ty=Tensor[(70), float64] */;
  %250 = %239.0;
  %251 = @func_5648() /* ty=Tensor[(13, 8, 5), float64] */;
  %252 = %240.0;
  %253 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
  %254 = atanh(%249) /* ty=Tensor[(70), float64] */;
  (%250, %251, %252, %var_6821, meta[relay.Constant][10] /* ty=Tensor[(130), float64] */, meta[relay.Constant][11] /* ty=Tensor[(70), uint64] */, %253, %254)
}

def @func_8738() -> (Tensor[(13, 8, 5), float64],) {
  %255 = @func_4405() /* ty=Tensor[(13, 8, 5), float64] */;
  (%255,)
}

def @func_8801() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  %256 = @func_6633() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %257 = @func_5827() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %258 = @func_7205() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %259 = @func_6588() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %260 = %256.0;
  %261 = %257.0;
  %262 = %258.1;
  %263 = %259.0;
  (%260, %261, %262, %263)
}

def @func_14072() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) {
  %264 = @func_12408() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %265 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %266 = @func_9638() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %267 = @func_6989() /* ty=Tensor[(13, 8, 5), float64] */;
  %268 = %264.0;
  %269 = %265.0;
  %270 = %266.0;
  (%267, %268, %269, %270)
}

def @func_4760() -> (Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
  %271 = cast(meta[relay.Constant][12] /* ty=Tensor[(280, 2), uint64] */, dtype="uint64") /* ty=Tensor[(280, 2), uint64] */;
  %272 = cast(meta[relay.Constant][12] /* ty=Tensor[(280, 2), uint64] */, dtype="uint64") /* ty=Tensor[(280, 2), uint64] */;
  %273 = cast(meta[relay.Constant][13] /* ty=Tensor[(750), uint16] */, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %274 = reshape(%271, newshape=[14, 4, 10]) /* ty=Tensor[(14, 4, 10), uint64] */;
  %275 = reshape(%272, newshape=[14, 4, 10]) /* ty=Tensor[(14, 4, 10), uint64] */;
  %276 = reshape(%273, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %277 = @func_3147(%274, %275, %276) /* ty=(Tensor[(14, 4, 10), uint64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %278 = cast(meta[relay.Constant][12] /* ty=Tensor[(280, 2), uint64] */, dtype="float32") /* ty=Tensor[(280, 2), float32] */;
  %279 = rsqrt(%278) /* ty=Tensor[(280, 2), float32] */;
  %280 = cast(meta[relay.Constant][12] /* ty=Tensor[(280, 2), uint64] */, dtype="uint8") /* ty=Tensor[(280, 2), uint8] */;
  %281 = shape_of(%279, dtype="int32") /* ty=Tensor[(2), int32] */;
  %282 = cast(%279, dtype="uint8") /* ty=Tensor[(280, 2), uint8] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %284 = @func_4077() /* ty=Tensor[(13, 8, 5), float32] */;
  %285 = %277.1;
  %286 = @func_4405() /* ty=Tensor[(13, 8, 5), float64] */;
  %287 = minimum(%282, %283) /* ty=Tensor[(280, 2), uint8] */;
  %288 = @func_3958() /* ty=Tensor[(13, 8, 5), float32] */;
  %289 = @func_3958() /* ty=Tensor[(13, 8, 5), float32] */;
  (%284, %285, meta[relay.Constant][13] /* ty=Tensor[(750), uint16] */, %286, %287, %288, %289)
}

def @func_19521() -> Tensor[(13, 8, 5), float32] {
  %290 = @func_8077() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(360), float32]) */;
  %290.1
}

def @func_8844(%var_8842: Tensor[(63), uint32]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(7, ?, 9), bool], Tensor[(63), uint32]) {
  %291 = cast(%var_8842, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %292 = reshape(%291, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), uint32] */;
  %293 = @func_5995(%292) /* ty=(Tensor[(7, ?, 9), bool], Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(70), uint64], Tensor[(13, 8, 5), float32], Tensor[(360, 1), float32]) */;
  %294 = @func_5882() /* ty=Tensor[(13, 8, 5), float64] */;
  %295 = @func_6989() /* ty=Tensor[(13, 8, 5), float64] */;
  %296 = @func_3835() /* ty=Tensor[(13, 8, 5), float32] */;
  %297 = %293.0;
  (%294, %295, %296, %297, %var_8842)
}

def @func_14381() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
  %298 = @func_9511() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %299 = %298.1;
  %300 = @func_10017() /* ty=Tensor[(13, 8, 5), float32] */;
  (%299, %300)
}

def @func_11816() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %301 = @func_10111() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %302 = @func_10462() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(750), uint16]) */;
  %303 = @func_10395() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
  %304 = @func_8646() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %305 = @func_8897() /* ty=Tensor[(13, 8, 5), float64] */;
  %306 = %301.0;
  %307 = %302.1;
  %308 = %303.0;
  %309 = %304.1;
  %310 = @func_9438() /* ty=Tensor[(13, 8, 5), float64] */;
  (%305, %306, %307, %308, %309, %310)
}

def @func_16845() -> (Tensor[(13, 8, 5), float64],) {
  %311 = @func_9548() /* ty=Tensor[(13, 8, 5), float64] */;
  (%311,)
}

def @func_3613() -> (Tensor[(13, 8, 5), float64],) {
  %312 = @func_3476() /* ty=Tensor[(13, 8, 5), float64] */;
  (%312,)
}

def @func_10724() -> Tensor[(10, 3, 1), float32] {
  @func_10103() /* ty=Tensor[(10, 3, 1), float32] */
}

def @func_12276(%var_12199: float32, %var_12200: Tensor[(176), float32]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(130), float64], Tensor[(180), uint8], Tensor[(13, 8, 5), float64], float32, Tensor[(176), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %313 = @func_4760() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %314 = cast(meta[relay.Constant][14] /* ty=Tensor[(180), uint8] */, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %315 = reshape(%314, newshape=[1, 180]) /* ty=Tensor[(1, 180), uint8] */;
  %316 = @func_6688(%315) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(130), float64], Tensor[(1, 180), uint8], Tensor[(1200), int8]) */;
  %317 = cast(%var_12199, dtype="float32") /* ty=float32 */;
  %318 = cast(%var_12200, dtype="float32") /* ty=Tensor[(176), float32] */;
  %319 = reshape(%317, newshape=[]) /* ty=float32 */;
  %320 = reshape(%318, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float32] */;
  %321 = @func_9042(%319, %320) /* ty=(Tensor[(1, 16, 11), bool], Tensor[(13, 8, 5), float64]) */;
  %322 = @func_8077() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(360), float32]) */;
  %323 = @func_9438() /* ty=Tensor[(13, 8, 5), float64] */;
  %324 = %313.3;
  %325 = %316.2;
  %326 = %321.1;
  %327 = @func_5024() /* ty=Tensor[(13, 8, 5), float64] */;
  %328 = %322.1;
  %329 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
  (%323, %324, %325, meta[relay.Constant][14] /* ty=Tensor[(180), uint8] */, %326, %var_12199, %var_12200, %327, %328, %329)
}

def @func_10103() -> Tensor[(10, 3, 1), float32] {
  @func_6177() /* ty=Tensor[(10, 3, 1), float32] */
}

def @func_13801() -> (Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %330 = @func_12809() /* ty=(Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(360), float32]) */;
  %331 = @func_9861() /* ty=(Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float32]) */;
  %332 = @func_3888() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %333 = %330.0;
  %334 = %331.1;
  %335 = %332.0;
  (%333, %334, %335)
}

def @func_6132() -> Tensor[(13, 8, 5), float32] {
  %336 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %336.0
}

def @func_14033() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %337 = @func_4569() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %338 = @func_3771() /* ty=Tensor[(13, 8, 5), float32] */;
  %339 = %337.0;
  (%338, %339)
}

def @func_9349() -> (Tensor[(13, 8, 5), float32],) {
  %340 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %341 = %340.0;
  (%341,)
}

def @func_14739() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(13, 8, 5), float64]) {
  %342 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %343 = cast(meta[relay.Constant][15] /* ty=Tensor[(750), uint16] */, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %344 = reshape(%343, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %345 = @func_3808(%344) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %346 = @func_14234() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %347 = %342.0;
  %348 = %345.0;
  %349 = %346.0;
  (%347, %348, meta[relay.Constant][15] /* ty=Tensor[(750), uint16] */, %349)
}

def @func_5995(%var_5920: Tensor[(7, 1, 9), uint32]) -> (Tensor[(7, ?, 9), bool], Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(70), uint64], Tensor[(13, 8, 5), float32], Tensor[(360, 1), float32]) {
  %350 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 1, 9), uint32] */, dtype="bool") /* ty=Tensor[(7, 1, 9), bool] */;
  %351 = shape_of(%var_5920, dtype="int32") /* ty=Tensor[(3), int32] */;
  %352 = cast(%var_5920, dtype="bool") /* ty=Tensor[(7, 1, 9), bool] */;
  %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %354 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %355 = cast(meta[relay.Constant][17] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %356 = reshape(%355, newshape=[70]) /* ty=Tensor[(70), uint64] */;
  %357 = @func_4242(%356) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(5, 13, 2), float64], Tensor[(13, 8, 5), float64]) */;
  %358 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %359 = @func_5736() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(70), uint64], Tensor[(360, 1), float32]) */;
  %360 = equal(%352, %353) /* ty=Tensor[(7, ?, 9), bool] */;
  %361 = %354.0;
  %362 = %357.3;
  %363 = %358.0;
  %364 = %359.2;
  (%360, %361, %362, meta[relay.Constant][17] /* ty=Tensor[(70), uint64] */, %363, %364)
}

def @func_6381(%var_6374: Tensor[(5, 6, 9), float32]) -> Tensor[(5, 6, 9), float32] {
  %365 = cast(%var_6374, dtype="float32") /* ty=Tensor[(5, 6, 9), float32] */;
  rsqrt(%365) /* ty=Tensor[(5, 6, 9), float32] */
}

def @func_16824() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(225), float64]) {
  %366 = @func_4569() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %367 = cast(meta[relay.Constant][18] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %368 = reshape(%367, newshape=[225]) /* ty=Tensor[(225), float64] */;
  %369 = @func_15502(%368) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 5, 9), float64], Tensor[(225), float64], Tensor[(120), float64]) */;
  %370 = %366.0;
  %371 = %369.0;
  (%370, %371, meta[relay.Constant][18] /* ty=Tensor[(225), float64] */)
}

def @func_13585() -> Tensor[(13, 8, 5), float32] {
  %372 = @func_12853() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(90, 2), uint8]) */;
  %372.0
}

def @func_12892() -> Tensor[(10, 3, 1), float32] {
  @func_10724() /* ty=Tensor[(10, 3, 1), float32] */
}

def @func_16938() -> Tensor[(13, 8, 5), float64] {
  %373 = @func_11051() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %373.0
}

def @func_4129() -> (Tensor[(13, 8, 5), float32],) {
  %374 = @func_3771() /* ty=Tensor[(13, 8, 5), float32] */;
  (%374,)
}

def @func_8646() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  %375 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %376 = @func_5648() /* ty=Tensor[(13, 8, 5), float64] */;
  %377 = %375.0;
  (%376, %377)
}

def @func_18859() -> Tensor[(10, 3, 1), float32] {
  %378 = @func_17961() /* ty=(Tensor[(750), uint16], Tensor[(10, 3, 1), float32]) */;
  %378.1
}

def @func_8077() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(360), float32]) {
  %379 = @func_6633() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %380 = cast(meta[relay.Constant][19] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %381 = reshape(%380, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
  %382 = @func_4307(%381) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 9, 8), float32], Tensor[(6, 60), float32], Tensor[(13, 8, 5), float64]) */;
  %383 = %379.0;
  %384 = @func_3771() /* ty=Tensor[(13, 8, 5), float32] */;
  %385 = %382.0;
  (%383, %384, %385, meta[relay.Constant][19] /* ty=Tensor[(360), float32] */)
}

def @func_4390() -> (Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64]) {
  %386 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %387 = cast(3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %388 = reshape(%387, newshape=[]) /* ty=int32 */;
  %389 = cast(meta[relay.Constant][20] /* ty=Tensor[(750), uint16] */, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %390 = reshape(%389, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %391 = @func_3808(%390) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %392 = %391.0;
  %393 = cast(%392, dtype="float64") /* ty=Tensor[(13, 8, 5), float64] */;
  %394 = %386.0;
  %395 = @func_2489(%388) /* ty=Tensor[(10, 3, 1), int32] */;
  %396 = acos(%393) /* ty=Tensor[(13, 8, 5), float64] */;
  (%394, meta[relay.Constant][20] /* ty=Tensor[(750), uint16] */, %395, 3 /* ty=int32 */, %396)
}

def @func_10909() -> (Tensor[(750), uint16], Tensor[(13, 8, 5), float64]) {
  %397 = @func_3935() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %398 = @func_5004() /* ty=Tensor[(750), uint16] */;
  %399 = %397.1;
  (%398, %399)
}

def @func_4600() -> (Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) {
  %400 = @func_4178() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %401 = cast(meta[relay.Constant][21] /* ty=Tensor[(750), uint16] */, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %402 = reshape(%401, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %403 = @func_3808(%402) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %404 = %400.0;
  %405 = %403.1;
  (%404, %405, meta[relay.Constant][21] /* ty=Tensor[(750), uint16] */)
}

def @func_12863() -> (Tensor[(7, 11, 15), float64],) {
  %406 = @func_11026() /* ty=Tensor[(7, 11, 15), float64] */;
  (%406,)
}

def @func_4521() -> (int32,) {
  %407 = @func_4390() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64]) */;
  %408 = %407.3;
  (%408,)
}

def @func_17618() -> (Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64]) {
  %409 = @func_11378() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %410 = @func_11598() /* ty=Tensor[(5, 10, 15), bool] */;
  %411 = %409.0;
  (%410, %411)
}

def @func_13682(%var_13633: Tensor[(819), float64], %var_13659: Tensor[(78, 2), float64]) -> (Tensor[(10, 3, 1), float32], Tensor[(7, 9, 13), float64], Tensor[(819), float64], Tensor[(13, 8, 5), float64], Tensor[(10, 3, 1), float32], Tensor[(13, 4, 3), float64], Tensor[(78, 2), float64], Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), float64]) {
  %412 = @func_10818() /* ty=(Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32]) */;
  %413 = cast(%var_13633, dtype="float64") /* ty=Tensor[(819), float64] */;
  %414 = reshape(%413, newshape=[7, 9, 13]) /* ty=Tensor[(7, 9, 13), float64] */;
  %415 = @func_11408(%414) /* ty=(Tensor[(7, 9, 13), float64],) */;
  %416 = @func_10111() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %417 = @func_11150() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %418 = cast(%var_13659, dtype="float64") /* ty=Tensor[(78, 2), float64] */;
  %419 = reshape(%418, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), float64] */;
  %420 = @func_10909() /* ty=(Tensor[(750), uint16], Tensor[(13, 8, 5), float64]) */;
  %421 = @func_8992() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], int32) */;
  %422 = %421.1;
  %423 = cast(%422, dtype="float32") /* ty=Tensor[(5, 10, 15), float32] */;
  %424 = cosh(%423) /* ty=Tensor[(5, 10, 15), float32] */;
  %425 = cast(%424, dtype="float64") /* ty=Tensor[(5, 10, 15), float64] */;
  %426 = %412.0;
  %427 = %415.0;
  %428 = %416.0;
  %429 = %417.0;
  %430 = @func_10295(%419) /* ty=Tensor[(13, 4, 3), float64] */;
  %431 = %420.1;
  %432 = log2(%425) /* ty=Tensor[(5, 10, 15), float64] */;
  (%426, %427, %var_13633, %428, %429, %430, %var_13659, %431, %432)
}

def @func_6121() -> (Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) {
  %433 = @func_4760() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %434 = @func_3613() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %435 = cast(-3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %436 = reshape(%435, newshape=[]) /* ty=int32 */;
  %437 = @func_2489(%436) /* ty=Tensor[(10, 3, 1), int32] */;
  %438 = cast(%437, dtype="float32") /* ty=Tensor[(10, 3, 1), float32] */;
  %439 = @func_3476() /* ty=Tensor[(13, 8, 5), float64] */;
  %440 = %433.1;
  %441 = %434.0;
  %442 = @func_5099() /* ty=Tensor[(13, 8, 5), float32] */;
  %443 = sin(%438) /* ty=Tensor[(10, 3, 1), float32] */;
  (%439, %440, %441, -3 /* ty=int32 */, %442, %443)
}

def @func_4569() -> (Tensor[(13, 8, 5), float64],) {
  %444 = @func_4405() /* ty=Tensor[(13, 8, 5), float64] */;
  (%444,)
}

def @func_16593() -> Tensor[(13, 8, 5), float32] {
  @func_10017() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_16972(%var_16966: Tensor[(12, 3, 7), bool]) -> Tensor[(12, 3, 7), bool] {
  %445 = @func_16292() /* ty=(Tensor[(12, 3, 7), bool],) */;
  %446 = %445.0;
  %447 = cast(%var_16966, dtype="bool") /* ty=Tensor[(12, 3, 7), bool] */;
  %448 = shape_of(%446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %449 = cast(%446, dtype="bool") /* ty=Tensor[(12, 3, 7), bool] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%449, %450) /* ty=Tensor[(12, 3, 7), bool] */
}

def @func_12914(%var_12894: Tensor[(4, 10, 15), float32]) -> Tensor[(4, 10, 15), float32] {
  %451 = cast(%var_12894, dtype="float32") /* ty=Tensor[(4, 10, 15), float32] */;
  rsqrt(%451) /* ty=Tensor[(4, 10, 15), float32] */
}

def @func_15909(%var_15907: Tensor[(1200), int8]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(1200), int8]) {
  %452 = cast(%var_15907, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %453 = reshape(%452, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %454 = @func_13464(%453) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(180), uint8], Tensor[(1200), int8]) */;
  %455 = @func_6132() /* ty=Tensor[(13, 8, 5), float32] */;
  %456 = %454.1;
  (%455, %456, %var_15907)
}

def @func_18959(%var_18936: Tensor[(750), uint16]) -> (Tensor[(13, 8, 5), float64], Tensor[(250, 3), uint16], Tensor[(750), uint16], Tensor[(10, 3, 11), bool], Tensor[(330), int32]) {
  %457 = cast(%var_18936, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %458 = reshape(%457, newshape=[250, 3]) /* ty=Tensor[(250, 3), uint16] */;
  %459 = @func_18516(%458) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(250, 3), uint16], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(750), float64]) */;
  %460 = cast(meta[relay.Constant][22] /* ty=Tensor[(330), int32] */, dtype="int32") /* ty=Tensor[(330), int32] */;
  %461 = reshape(%460, newshape=[10, 3, 11]) /* ty=Tensor[(10, 3, 11), int32] */;
  %462 = @func_16318() /* ty=Tensor[(13, 8, 5), float64] */;
  %463 = %459.1;
  %464 = @func_12535(%461) /* ty=Tensor[(10, 3, 11), bool] */;
  (%462, %463, %var_18936, %464, meta[relay.Constant][22] /* ty=Tensor[(330), int32] */)
}

def @func_19253() -> Tensor[(13, 8, 5), float32] {
  %465 = @func_6438() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %465.0
}

def @func_5882() -> Tensor[(13, 8, 5), float64] {
  %466 = @func_3908() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %466.0
}

def @func_14274() -> Tensor[(10, 3, 1), float32] {
  %467 = @func_14072() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
  %467.3
}

def @func_10242() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
  %468 = @func_9170() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %469 = %468.0;
  %470 = @func_3835() /* ty=Tensor[(13, 8, 5), float32] */;
  (%469, %470)
}

def @func_9861() -> (Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float32]) {
  %471 = @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %472 = @func_9705() /* ty=Tensor[(5, 10, 15), bool] */;
  %473 = %471.0;
  (%472, %473)
}

def @func_16318() -> Tensor[(13, 8, 5), float64] {
  @func_4405() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_16219() -> (Tensor[(13, 8, 5), float32],) {
  %474 = @func_9170() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %475 = %474.0;
  (%475,)
}

def @func_19131() -> (Tensor[(70), uint64],) {
  %476 = @func_11489() /* ty=(Tensor[(70), uint64], Tensor[(13, 8, 5), float32]) */;
  %477 = %476.0;
  (%477,)
}

def @func_56(%var_5: Tensor[(10, 1, 4), float64]) -> (Tensor[(10, ?, 4), int8],) {
  %478 = cast(%var_5, dtype="float64") /* ty=Tensor[(10, 1, 4), float64] */;
  %479 = sigmoid(%478) /* ty=Tensor[(10, 1, 4), float64] */;
  %480 = cast(%var_5, dtype="int8") /* ty=Tensor[(10, 1, 4), int8] */;
  %481 = shape_of(%479, dtype="int32") /* ty=Tensor[(3), int32] */;
  %482 = cast(%479, dtype="int8") /* ty=Tensor[(10, 1, 4), int8] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %484 = right_shift(%482, %483) /* ty=Tensor[(10, ?, 4), int8] */;
  (%484,)
}

def @func_14390() -> Tensor[(13, 8, 5), float32] {
  @func_12457() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_12011() -> (Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %485 = @func_4569() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %486 = @func_5736() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(70), uint64], Tensor[(360, 1), float32]) */;
  %487 = @func_5287() /* ty=(int32, Tensor[(13, 8, 5), float64]) */;
  %488 = %485.0;
  %489 = %486.1;
  %490 = @func_5024() /* ty=Tensor[(13, 8, 5), float64] */;
  %491 = %487.1;
  (%488, %489, %490, %491)
}

def @func_10948() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %492 = @func_3908() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %493 = %492.0;
  %494 = @func_8897() /* ty=Tensor[(13, 8, 5), float64] */;
  (%493, %494)
}

def @func_17746(%var_17636: Tensor[(270), float32]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(13, 8, 5), float32], Tensor[(8, 8, 6), float64], Tensor[(270), uint64], Tensor[(13, 8, 5), float64], Tensor[(360), float32]) {
  %495 = @func_8151() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %496 = cast(%var_17636, dtype="float32") /* ty=Tensor[(270), float32] */;
  %497 = reshape(%496, newshape=[5, 6, 9]) /* ty=Tensor[(5, 6, 9), float32] */;
  %498 = @func_12604() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(8, 8, 6), float64], Tensor[(10, 3, 1), float32]) */;
  %499 = cast(%var_17636, dtype="float64") /* ty=Tensor[(270), float64] */;
  %500 = asinh(%499) /* ty=Tensor[(270), float64] */;
  %501 = cast(meta[relay.Constant][23] /* ty=Tensor[(270), float64] */, dtype="uint64") /* ty=Tensor[(270), uint64] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(1), int32] */;
  %503 = cast(%500, dtype="uint64") /* ty=Tensor[(270), uint64] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %505 = @func_15443() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(360), float32]) */;
  %506 = %495.0;
  %507 = @func_6381(%497) /* ty=Tensor[(5, 6, 9), float32] */;
  %508 = @func_6132() /* ty=Tensor[(13, 8, 5), float32] */;
  %509 = %498.1;
  %510 = multiply(%503, %504) /* ty=Tensor[(270), uint64] */;
  %511 = @func_13820() /* ty=Tensor[(13, 8, 5), float64] */;
  %512 = %505.2;
  (%506, %507, %508, %509, %510, %511, %512)
}

def @func_18243(%var_18228: Tensor[(180), uint8], %var_18234: Tensor[(270), float32]) -> (Tensor[(13, 8, 5), float64], Tensor[(10, ?, 4), int8], Tensor[(180), uint8], Tensor[(300, 4), int8], int32, Tensor[(270), float32]) {
  %513 = @func_16824() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(225), float64]) */;
  %514 = cast(%var_18228, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %515 = cast(%var_18228, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %516 = cast(meta[relay.Constant][24] /* ty=Tensor[(300, 4), int8] */, dtype="int8") /* ty=Tensor[(300, 4), int8] */;
  %517 = reshape(%514, newshape=[10, 2, 9]) /* ty=Tensor[(10, 2, 9), uint8] */;
  %518 = reshape(%515, newshape=[10, 2, 9]) /* ty=Tensor[(10, 2, 9), uint8] */;
  %519 = reshape(%516, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %520 = @func_682(%517, %518, %519) /* ty=(Tensor[(10, 2, 9), bool], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(10, ?, 4), int8], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(1200), int8], Tensor[(5, 13, 2), float64]) */;
  %521 = cast(%var_18234, dtype="float32") /* ty=Tensor[(270), float32] */;
  %522 = reshape(%521, newshape=[270]) /* ty=Tensor[(270), float32] */;
  %523 = @func_8696(%522) /* ty=(int32, Tensor[(5, 6, 9), float32], Tensor[(270), float32]) */;
  %524 = %513.0;
  %525 = %520.3;
  %526 = %523.0;
  (%524, %525, %var_18228, meta[relay.Constant][24] /* ty=Tensor[(300, 4), int8] */, %526, %var_18234)
}

def @func_3835() -> Tensor[(13, 8, 5), float32] {
  %527 = @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %527.0
}

def @func_12535(%var_12521: Tensor[(10, 3, 11), int32]) -> Tensor[(10, 3, 11), bool] {
  %528 = @func_4390() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64]) */;
  %529 = %528.2;
  %530 = cast(%529, dtype="bool") /* ty=Tensor[(10, 3, 1), bool] */;
  %531 = cast(%var_12521, dtype="bool") /* ty=Tensor[(10, 3, 11), bool] */;
  logical_or(%530, %531) /* ty=Tensor[(10, 3, 11), bool] */
}

def @func_17012() -> (Tensor[(13, 8, 5), float32],) {
  %532 = @func_10165() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %533 = %532.0;
  (%533,)
}

def @func_3147(%var_3093: Tensor[(14, 4, 10), uint64], %var_3094: Tensor[(14, 4, 10), uint64], %var_3120: Tensor[(750), uint16]) -> (Tensor[(14, 4, 10), uint64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) {
  %534 = cast(%var_3094, dtype="uint64") /* ty=Tensor[(14, 4, 10), uint64] */;
  %535 = shape_of(%var_3093, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(%var_3093, dtype="uint64") /* ty=Tensor[(14, 4, 10), uint64] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %538 = cast(%var_3120, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %539 = reshape(%538, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), uint16] */;
  %540 = @func_2171(%539) /* ty=(Tensor[(5, 10, 15), bool],) */;
  %541 = bitwise_xor(%536, %537) /* ty=Tensor[(14, 4, 10), uint64] */;
  %542 = %540.0;
  (%541, %542, %var_3120)
}

def @func_18478() -> (Tensor[(13, 8, 5), float64],) {
  %543 = @func_6293() /* ty=Tensor[(13, 8, 5), float64] */;
  (%543,)
}

def @func_4307(%var_4287: Tensor[(6, 60), float32]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 9, 8), float32], Tensor[(6, 60), float32], Tensor[(13, 8, 5), float64]) {
  %544 = @func_3613() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %545 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %546 = cast(%var_4287, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
  %547 = cast(%var_4287, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
  %548 = reshape(%546, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %549 = reshape(%547, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %550 = @func_2805(%548, %549) /* ty=(Tensor[(5, 9, 8), float32], Tensor[(7, 2, 5), float64], Tensor[(70), uint64]) */;
  %551 = %544.0;
  %552 = %545.0;
  %553 = %550.0;
  %554 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
  (%551, %552, %553, %var_4287, %554)
}

def @func_16479() -> Tensor[(13, 8, 5), float32] {
  @func_5099() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_18067() -> (Tensor[(13, 8, 5), float64],) {
  %555 = @func_9243() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %556 = %555.0;
  (%556,)
}

def @func_12437() -> (Tensor[(15, 6, 5), bool],) {
  %557 = @func_10060() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(15, 6, 5), bool], Tensor[(450), uint8]) */;
  %558 = %557.2;
  (%558,)
}

def @func_10017() -> Tensor[(13, 8, 5), float32] {
  @func_5564() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_6989() -> Tensor[(13, 8, 5), float64] {
  %559 = @func_3908() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %559.0
}

def @func_14642() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  %560 = @func_8992() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], int32) */;
  %561 = @func_5287() /* ty=(int32, Tensor[(13, 8, 5), float64]) */;
  %562 = @func_11489() /* ty=(Tensor[(70), uint64], Tensor[(13, 8, 5), float32]) */;
  %563 = %560.0;
  %564 = %561.1;
  %565 = %562.1;
  (%563, %564, %565)
}

def @func_15720(%var_15657: Tensor[(10, 3, 10), float32], %var_15671: Tensor[(600), float32]) -> (Tensor[(10, 3, 10), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(600), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(270), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %566 = @func_14274() /* ty=Tensor[(10, 3, 1), float32] */;
  %567 = cast(%566, dtype="float32") /* ty=Tensor[(10, 3, 1), float32] */;
  %568 = cast(%var_15657, dtype="float32") /* ty=Tensor[(10, 3, 10), float32] */;
  %569 = cast(%var_15671, dtype="float32") /* ty=Tensor[(600), float32] */;
  %570 = reshape(%569, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %571 = @func_13916(%570) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(4, 10, 15), float32], Tensor[(600), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %572 = @func_13297() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %573 = @func_10948() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %574 = cast(meta[relay.Constant][25] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %575 = reshape(%574, newshape=[5, 6, 9]) /* ty=Tensor[(5, 6, 9), float32] */;
  %576 = @func_6633() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %577 = minimum(%567, %568) /* ty=Tensor[(10, 3, 10), float32] */;
  %578 = @func_6353() /* ty=Tensor[(13, 8, 5), float64] */;
  %579 = %571.3;
  %580 = %572.0;
  %581 = %573.0;
  %582 = @func_6381(%575) /* ty=Tensor[(5, 6, 9), float32] */;
  %583 = %576.0;
  %584 = @func_5024() /* ty=Tensor[(13, 8, 5), float64] */;
  (%577, %578, %579, %var_15671, %580, %581, %582, meta[relay.Constant][25] /* ty=Tensor[(270), float32] */, %583, %584)
}

def @func_9769() -> (Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32]) {
  %585 = @func_8151() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %586 = @func_9692() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(1, 270), float32]) */;
  %587 = %585.0;
  %588 = %586.1;
  (%587, %588)
}

def @func_4077() -> Tensor[(13, 8, 5), float32] {
  %589 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %589.0
}

def @func_16492(%var_16483: Tensor[(11, 13, 16), int32]) -> Tensor[(11, 13, 16), bool] {
  %590 = cast(%var_16483, dtype="bool") /* ty=Tensor[(11, 13, 16), bool] */;
  %591 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(11, 13, 16), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(meta[relay.Constant][26] /* ty=Tensor[(11, 13, 16), int32] */, dtype="bool") /* ty=Tensor[(11, 13, 16), bool] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%592, %593) /* ty=Tensor[(11, 13, 16), bool] */
}

def @func_363(%var_285: Tensor[(5, 16, 15), int8], %var_292: Tensor[(40), float64], %var_351: Tensor[(5, 16, 15), bool]) -> (Tensor[(40), float64], Tensor[(10, ?, 4), float64], Tensor[(10, ?, 4), int8], Tensor[(5, 16, 15), bool], Tensor[(5, 16, 15), uint64]) {
  %594 = cast(%var_292, dtype="float64") /* ty=Tensor[(40), float64] */;
  %595 = reshape(%594, newshape=[10, 1, 4]) /* ty=Tensor[(10, 1, 4), float64] */;
  %596 = @func_56(%595) /* ty=(Tensor[(10, ?, 4), int8],) */;
  %597 = %596.0;
  %598 = cast(%597, dtype="float64") /* ty=Tensor[(10, ?, 4), float64] */;
  %599 = cast(%597, dtype="float64") /* ty=Tensor[(10, ?, 4), float64] */;
  %600 = reshape(%599, newshape=[10, 1, 4]) /* ty=Tensor[(10, 1, 4), float64] */;
  %601 = @func_56(%600) /* ty=(Tensor[(10, ?, 4), int8],) */;
  %602 = cast(%var_285, dtype="bool") /* ty=Tensor[(5, 16, 15), bool] */;
  %603 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(5, 16, 15), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %604 = cast(meta[relay.Constant][27] /* ty=Tensor[(5, 16, 15), int8] */, dtype="bool") /* ty=Tensor[(5, 16, 15), bool] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %606 = greater(%604, %605) /* ty=Tensor[(5, 16, 15), bool] */;
  %607 = cast(%606, dtype="float64") /* ty=Tensor[(5, 16, 15), float64] */;
  %608 = acos(%607) /* ty=Tensor[(5, 16, 15), float64] */;
  %609 = cast(%606, dtype="bool") /* ty=Tensor[(5, 16, 15), bool] */;
  %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%608, dtype="bool") /* ty=Tensor[(5, 16, 15), bool] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %613 = cast(%var_351, dtype="uint64") /* ty=Tensor[(5, 16, 15), uint64] */;
  %614 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %615 = cast(%606, dtype="uint64") /* ty=Tensor[(5, 16, 15), uint64] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %617 = cosh(%598) /* ty=Tensor[(10, ?, 4), float64] */;
  %618 = %601.0;
  %619 = not_equal(%611, %612) /* ty=Tensor[(5, 16, 15), bool] */;
  %620 = minimum(%615, %616) /* ty=Tensor[(5, 16, 15), uint64] */;
  (%var_292, %617, %618, %619, %620)
}

def @func_3476() -> Tensor[(13, 8, 5), float64] {
  %621 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 8, 5), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 5), float64] */;
  erf(%621) /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_10207(%var_10203: Tensor[(70), uint64]) -> (Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), uint64], Tensor[(70), uint64]) {
  %622 = @func_9270() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %623 = cast(%var_10203, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %624 = cast(%var_10203, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %625 = reshape(%623, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
  %626 = reshape(%624, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
  %627 = @func_1769(%625, %626) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) */;
  %628 = %622.0;
  %629 = %627.0;
  (%628, %629, %var_10203)
}

def @func_19168() -> (Tensor[(13, 8, 5), float64],) {
  %630 = @func_4991() /* ty=Tensor[(13, 8, 5), float64] */;
  (%630,)
}

def @func_19070() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) {
  %631 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %632 = @func_16479() /* ty=Tensor[(13, 8, 5), float32] */;
  %633 = %631.0;
  %634 = @func_18859() /* ty=Tensor[(10, 3, 1), float32] */;
  (%632, %633, %634)
}

def @func_8897() -> Tensor[(13, 8, 5), float64] {
  @func_4991() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_15895(%var_15888: Tensor[(180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(10, 3, 180), bool]) {
  %635 = cast(%var_15888, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %636 = reshape(%635, newshape=[180]) /* ty=Tensor[(180), uint8] */;
  %637 = @func_6782(%636) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(180), uint8]) */;
  %638 = @func_14274() /* ty=Tensor[(10, 3, 1), float32] */;
  %639 = cast(%638, dtype="bool") /* ty=Tensor[(10, 3, 1), bool] */;
  %640 = cast(%var_15888, dtype="bool") /* ty=Tensor[(180), bool] */;
  %641 = %637.1;
  %642 = logical_and(%639, %640) /* ty=Tensor[(10, 3, 180), bool] */;
  (%641, %642)
}

def @func_9417() -> (Tensor[(13, 8, 5), float64],) {
  %643 = @func_5648() /* ty=Tensor[(13, 8, 5), float64] */;
  (%643,)
}

def @func_12809() -> (Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(360), float32]) {
  %644 = @func_11150() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %645 = cast(meta[relay.Constant][29] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %646 = cast(meta[relay.Constant][29] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %647 = reshape(%645, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %648 = reshape(%646, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %649 = @func_2805(%647, %648) /* ty=(Tensor[(5, 9, 8), float32], Tensor[(7, 2, 5), float64], Tensor[(70), uint64]) */;
  %650 = %644.0;
  %651 = @func_4077() /* ty=Tensor[(13, 8, 5), float32] */;
  %652 = %649.1;
  (%650, %651, %652, meta[relay.Constant][29] /* ty=Tensor[(360), float32] */)
}

def @func_9243() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %653 = @func_3908() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %654 = @func_5040() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %655 = %653.0;
  %656 = %654.0;
  (%655, %656)
}

def @func_4991() -> Tensor[(13, 8, 5), float64] {
  %657 = @func_3970() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %657.0
}

def @func_10111() -> (Tensor[(13, 8, 5), float64],) {
  %658 = @func_9438() /* ty=Tensor[(13, 8, 5), float64] */;
  (%658,)
}

def @func_16194(%var_16082: Tensor[(270), float32], %var_16153: Tensor[(1200), int8], %var_16156: Tensor[(560), uint64]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(270), float32], Tensor[(13, 8, 5), float32], Tensor[(7, 11, 15), float64], Tensor[(5, 13, 2), float64], Tensor[(1200), int8], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(1, 70), uint64]) {
  %659 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %660 = @func_11378() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %661 = @func_9417() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %662 = cast(%var_16082, dtype="float32") /* ty=Tensor[(270), float32] */;
  %663 = reshape(%662, newshape=[270]) /* ty=Tensor[(270), float32] */;
  %664 = @func_8696(%663) /* ty=(int32, Tensor[(5, 6, 9), float32], Tensor[(270), float32]) */;
  %665 = @func_12863() /* ty=(Tensor[(7, 11, 15), float64],) */;
  %666 = cast(%var_16153, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %667 = reshape(%666, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %668 = @func_15909(%667) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(1200), int8]) */;
  %669 = cast(%var_16156, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %670 = %668.1;
  %671 = cast(%670, dtype="float64") /* ty=Tensor[(5, 13, 2), float64] */;
  %672 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 70), uint64] */, dtype="uint64") /* ty=Tensor[(1, 70), uint64] */;
  %673 = reshape(%669, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %674 = reshape(%671, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %675 = reshape(%672, newshape=[70]) /* ty=Tensor[(70), uint64] */;
  %676 = @func_4479(%673, %674, %675) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), float64]) */;
  %677 = %659.0;
  %678 = @func_3835() /* ty=Tensor[(13, 8, 5), float32] */;
  %679 = %660.0;
  %680 = @func_5099() /* ty=Tensor[(13, 8, 5), float32] */;
  %681 = %661.0;
  %682 = %664.1;
  %683 = @func_3771() /* ty=Tensor[(13, 8, 5), float32] */;
  %684 = %665.0;
  %685 = %676.6;
  (%677, %678, %679, %680, %681, %682, %var_16082, %683, %684, %670, %var_16153, %685, %var_16156, meta[relay.Constant][30] /* ty=Tensor[(1, 70), uint64] */)
}

def @func_10165() -> (Tensor[(13, 8, 5), float32],) {
  %686 = @func_10017() /* ty=Tensor[(13, 8, 5), float32] */;
  (%686,)
}

def @func_17163() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %687 = @func_4405() /* ty=Tensor[(13, 8, 5), float64] */;
  %688 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
  (%687, %688)
}

def @func_5318(%var_5311: Tensor[(13, 8, 5), float64]) -> (Tensor[(13, 8, 5), bool], Tensor[(13, 8, 5), float64]) {
  %689 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %690 = %689.0;
  %691 = cast(%var_5311, dtype="bool") /* ty=Tensor[(13, 8, 5), bool] */;
  %692 = shape_of(%690, dtype="int32") /* ty=Tensor[(3), int32] */;
  %693 = cast(%690, dtype="bool") /* ty=Tensor[(13, 8, 5), bool] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %695 = equal(%693, %694) /* ty=Tensor[(13, 8, 5), bool] */;
  %696 = @func_4991() /* ty=Tensor[(13, 8, 5), float64] */;
  (%695, %696)
}

def @func_19581(%var_19568: Tensor[(15, 9, 11), float64]) -> (Tensor[(15, 9, 11), float64], Tensor[(13, 8, 5), float32]) {
  %697 = cast(%var_19568, dtype="float64") /* ty=Tensor[(15, 9, 11), float64] */;
  %698 = exp(%697) /* ty=Tensor[(15, 9, 11), float64] */;
  %699 = @func_3835() /* ty=Tensor[(13, 8, 5), float32] */;
  (%698, %699)
}

def @func_3715() -> (Tensor[(13, 8, 5), float32],) {
  %700 = @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %701 = %700.0;
  (%701,)
}

def @func_6688(%var_6684: Tensor[(1, 180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(130), float64], Tensor[(1, 180), uint8], Tensor[(1200), int8]) {
  %702 = @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
  %703 = cast(%var_6684, dtype="uint8") /* ty=Tensor[(1, 180), uint8] */;
  %704 = cast(%var_6684, dtype="uint8") /* ty=Tensor[(1, 180), uint8] */;
  %705 = cast(meta[relay.Constant][31] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %706 = reshape(%703, newshape=[10, 2, 9]) /* ty=Tensor[(10, 2, 9), uint8] */;
  %707 = reshape(%704, newshape=[10, 2, 9]) /* ty=Tensor[(10, 2, 9), uint8] */;
  %708 = reshape(%705, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %709 = @func_682(%706, %707, %708) /* ty=(Tensor[(10, 2, 9), bool], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(10, ?, 4), int8], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(1200), int8], Tensor[(5, 13, 2), float64]) */;
  %710 = @func_5648() /* ty=Tensor[(13, 8, 5), float64] */;
  %711 = %702.4;
  %712 = %709.2;
  (%710, %711, %712, %var_6684, meta[relay.Constant][31] /* ty=Tensor[(1200), int8] */)
}

def @func_14850() -> (Tensor[(10, 3, 1), float32], Tensor[(5, 6, 9), float32]) {
  %713 = @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
  %714 = @func_9769() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32]) */;
  %715 = %713.5;
  %716 = %714.1;
  (%715, %716)
}

def @func_11051() -> (Tensor[(13, 8, 5), float64],) {
  %717 = @func_5024() /* ty=Tensor[(13, 8, 5), float64] */;
  (%717,)
}

def @func_8542(%var_8534: Tensor[(16, 7, 1), int16], %var_8535: Tensor[(16, 7, 1), int16]) -> (Tensor[(16, 7, ?), int16],) {
  %718 = cast(%var_8535, dtype="int16") /* ty=Tensor[(16, 7, 1), int16] */;
  %719 = shape_of(%var_8534, dtype="int32") /* ty=Tensor[(3), int32] */;
  %720 = cast(%var_8534, dtype="int16") /* ty=Tensor[(16, 7, 1), int16] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %722 = bitwise_or(%720, %721) /* ty=Tensor[(16, 7, ?), int16] */;
  (%722,)
}

def @func_12853() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(90, 2), uint8]) {
  %723 = @func_8646() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %724 = cast(meta[relay.Constant][32] /* ty=Tensor[(90, 2), uint8] */, dtype="uint8") /* ty=Tensor[(90, 2), uint8] */;
  %725 = reshape(%724, newshape=[180]) /* ty=Tensor[(180), uint8] */;
  %726 = @func_6782(%725) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(180), uint8]) */;
  %727 = %723.1;
  %728 = %726.0;
  (%727, %728, meta[relay.Constant][32] /* ty=Tensor[(90, 2), uint8] */)
}

def @func_13916(%var_13857: Tensor[(600), float32]) -> (Tensor[(13, 8, 5), float32], Tensor[(4, 10, 15), float32], Tensor[(600), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %729 = cast(%var_13857, dtype="float32") /* ty=Tensor[(600), float32] */;
  %730 = reshape(%729, newshape=[4, 10, 15]) /* ty=Tensor[(4, 10, 15), float32] */;
  %731 = @func_9349() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %732 = @func_12348() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %733 = @func_10017() /* ty=Tensor[(13, 8, 5), float32] */;
  %734 = @func_12914(%730) /* ty=Tensor[(4, 10, 15), float32] */;
  %735 = %731.0;
  %736 = %732.0;
  (%733, %734, %var_13857, %735, %736)
}

def @func_9714() -> Tensor[(10, 3, 1), float32] {
  %737 = @func_7759() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %737.0
}

def @func_17114() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %738 = @func_10818() /* ty=(Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32]) */;
  %739 = @func_10111() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %740 = %738.1;
  %741 = %739.0;
  (%740, %741)
}

def @func_5648() -> Tensor[(13, 8, 5), float64] {
  %742 = @func_4569() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %742.0
}

def @func_478(%var_473: Tensor[(5, 13, 2), float64]) -> Tensor[(5, 13, 2), float64] {
  %743 = cast(%var_473, dtype="float64") /* ty=Tensor[(5, 13, 2), float64] */;
  asin(%743) /* ty=Tensor[(5, 13, 2), float64] */
}

def @func_13701() -> (Tensor[(13, 8, 5), float64],) {
  %744 = @func_9417() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %745 = %744.0;
  (%745,)
}

def @func_19493() -> Tensor[(13, 8, 5), float32] {
  @func_17598() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_6418() -> (Tensor[(360, 16), bool], Tensor[(13, 8, 5), float64]) {
  %746 = @func_5736() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(70), uint64], Tensor[(360, 1), float32]) */;
  %747 = %746.2;
  %748 = cast(%747, dtype="bool") /* ty=Tensor[(360, 1), bool] */;
  %749 = cast(meta[relay.Constant][33] /* ty=Tensor[(360, 16), float32] */, dtype="bool") /* ty=Tensor[(360, 16), bool] */;
  %750 = @func_3970() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %751 = greater_equal(%748, %749) /* ty=Tensor[(360, 16), bool] */;
  %752 = %750.0;
  (%751, %752)
}

def @func_9976() -> (Tensor[(8, 8, 6), float64],) {
  %753 = cast(meta[relay.Constant][34] /* ty=Tensor[(8, 8, 6), float32] */, dtype="float32") /* ty=Tensor[(8, 8, 6), float32] */;
  %754 = cosh(%753) /* ty=Tensor[(8, 8, 6), float32] */;
  %755 = cast(%754, dtype="int8") /* ty=Tensor[(8, 8, 6), int8] */;
  %756 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(8, 8, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %757 = cast(meta[relay.Constant][34] /* ty=Tensor[(8, 8, 6), float32] */, dtype="int8") /* ty=Tensor[(8, 8, 6), int8] */;
  %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %759 = bitwise_and(%757, %758) /* ty=Tensor[(8, 8, 6), int8] */;
  %760 = cast(%759, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %761 = sqrt(%760) /* ty=Tensor[(8, 8, 6), float64] */;
  (%761,)
}

def @func_13820() -> Tensor[(13, 8, 5), float64] {
  %762 = @func_11378() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %762.0
}

def @func_17353() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64]) {
  %763 = @func_6338() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %764 = @func_6588() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %765 = @func_13297() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %766 = @func_10030() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %767 = %763.0;
  %768 = %764.0;
  %769 = %765.0;
  %770 = %766.1;
  (%767, %768, %769, %770)
}

def @func_6338() -> (Tensor[(13, 8, 5), float64],) {
  %771 = @func_4991() /* ty=Tensor[(13, 8, 5), float64] */;
  (%771,)
}

def @func_5066() -> (Tensor[(13, 8, 5), float32],) {
  %772 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %773 = %772.0;
  (%773,)
}

def @func_7344() -> (Tensor[(70), uint64], Tensor[(9, 16, 2), int64]) {
  %774 = @func_5736() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(70), uint64], Tensor[(360, 1), float32]) */;
  %775 = @func_4521() /* ty=(int32,) */;
  %776 = %775.0;
  %777 = cast(%776, dtype="int64") /* ty=int64 */;
  %778 = cast(meta[relay.Constant][35] /* ty=Tensor[(9, 16, 2), int32] */, dtype="int64") /* ty=Tensor[(9, 16, 2), int64] */;
  %779 = %774.1;
  %780 = maximum(%777, %778) /* ty=Tensor[(9, 16, 2), int64] */;
  (%779, %780)
}

def @func_10030() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %781 = @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %782 = @func_9417() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %783 = %781.0;
  %784 = %782.0;
  (%783, %784)
}

def @func_16292() -> (Tensor[(12, 3, 7), bool],) {
  %785 = cast(meta[relay.Constant][36] /* ty=Tensor[(12, 3, 7), float64] */, dtype="float64") /* ty=Tensor[(12, 3, 7), float64] */;
  %786 = acos(%785) /* ty=Tensor[(12, 3, 7), float64] */;
  %787 = cast(%786, dtype="bool") /* ty=Tensor[(12, 3, 7), bool] */;
  %788 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(12, 3, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(meta[relay.Constant][36] /* ty=Tensor[(12, 3, 7), float64] */, dtype="bool") /* ty=Tensor[(12, 3, 7), bool] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %791 = less(%789, %790) /* ty=Tensor[(12, 3, 7), bool] */;
  (%791,)
}

def @func_11712(%var_11683: Tensor[(10, 3, 4), float32]) -> Tensor[(10, 3, 4), uint32] {
  %792 = @func_10395() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
  %793 = %792.1;
  %794 = cast(%793, dtype="uint32") /* ty=Tensor[(10, 3, 1), uint32] */;
  %795 = cast(%var_11683, dtype="uint32") /* ty=Tensor[(10, 3, 4), uint32] */;
  logical_xor(%794, %795) /* ty=Tensor[(10, 3, 4), uint32] */
}

def @func_15806(%var_15786: Tensor[(4, 300), int8]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(4, 300), int8], Tensor[(40), float64], Tensor[(1, 16, 11), bool], float32, Tensor[(176), float32], Tensor[(13, 8, 5), float32], Tensor[(40, 1), float64]) {
  %796 = @func_8738() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %797 = cast(%var_15786, dtype="int8") /* ty=Tensor[(4, 300), int8] */;
  %798 = cast(meta[relay.Constant][37] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %799 = reshape(%797, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %800 = reshape(%798, newshape=[40, 1]) /* ty=Tensor[(40, 1), float64] */;
  %801 = @func_5419(%799, %800) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(10, ?, 4), float64], Tensor[(1200), int8], Tensor[(40, 1), float64]) */;
  %802 = cast(3.09916f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %803 = cast(meta[relay.Constant][38] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %804 = reshape(%802, newshape=[]) /* ty=float32 */;
  %805 = reshape(%803, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float32] */;
  %806 = @func_9042(%804, %805) /* ty=(Tensor[(1, 16, 11), bool], Tensor[(13, 8, 5), float64]) */;
  %807 = @func_9349() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %808 = cast(%var_15786, dtype="int8") /* ty=Tensor[(4, 300), int8] */;
  %809 = cast(meta[relay.Constant][37] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %810 = reshape(%808, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %811 = reshape(%809, newshape=[40, 1]) /* ty=Tensor[(40, 1), float64] */;
  %812 = @func_5419(%810, %811) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(10, ?, 4), float64], Tensor[(1200), int8], Tensor[(40, 1), float64]) */;
  %813 = @func_6132() /* ty=Tensor[(13, 8, 5), float32] */;
  %814 = %796.0;
  %815 = %801.0;
  %816 = %806.0;
  %817 = %807.0;
  %818 = %812.3;
  (%813, %814, %815, %var_15786, meta[relay.Constant][37] /* ty=Tensor[(40), float64] */, %816, 3.09916f /* ty=float32 */, meta[relay.Constant][38] /* ty=Tensor[(176), float32] */, %817, %818)
}

def @func_3935() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %819 = @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %820 = @func_3908() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %821 = %819.0;
  %822 = %820.0;
  (%821, %822)
}

def @func_14924(%var_14894: Tensor[(9, 16, 4), float64]) -> Tensor[(9, 16, 4), int16] {
  %823 = cast(%var_14894, dtype="float64") /* ty=Tensor[(9, 16, 4), float64] */;
  %824 = acos(%823) /* ty=Tensor[(9, 16, 4), float64] */;
  %825 = cast(%var_14894, dtype="int16") /* ty=Tensor[(9, 16, 4), int16] */;
  %826 = shape_of(%824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(%824, dtype="int16") /* ty=Tensor[(9, 16, 4), int16] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  logical_xor(%827, %828) /* ty=Tensor[(9, 16, 4), int16] */
}

def @func_8323() -> (Tensor[(10, 3, 1), float32],) {
  %829 = @func_7759() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %830 = %829.0;
  (%830,)
}

def @func_2171(%var_2163: Tensor[(5, 10, 15), uint16]) -> (Tensor[(5, 10, 15), bool],) {
  %831 = cast(%var_2163, dtype="bool") /* ty=Tensor[(5, 10, 15), bool] */;
  %832 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(5, 10, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %833 = cast(meta[relay.Constant][39] /* ty=Tensor[(5, 10, 15), uint16] */, dtype="bool") /* ty=Tensor[(5, 10, 15), bool] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %835 = less_equal(%833, %834) /* ty=Tensor[(5, 10, 15), bool] */;
  (%835,)
}

def @func_9548() -> Tensor[(13, 8, 5), float64] {
  @func_4991() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_15559() -> (Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(130), float64]) {
  %836 = @func_13701() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %837 = cast(meta[relay.Constant][40] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %838 = reshape(%837, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %839 = @func_7410(%838) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(63), uint32]) */;
  %840 = %836.0;
  %841 = %839.3;
  (%840, %841, meta[relay.Constant][40] /* ty=Tensor[(130), float64] */)
}

def @func_4028(%var_4012: int32) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64]) {
  %842 = @func_3888() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %843 = cast(%var_4012, dtype="int32") /* ty=int32 */;
  %844 = reshape(%843, newshape=[]) /* ty=int32 */;
  %845 = %842.0;
  %846 = @func_3771() /* ty=Tensor[(13, 8, 5), float32] */;
  %847 = @func_2489(%844) /* ty=Tensor[(10, 3, 1), int32] */;
  %848 = @func_3476() /* ty=Tensor[(13, 8, 5), float64] */;
  (%845, %846, %847, %var_4012, %848)
}

def @func_13297() -> (Tensor[(10, 3, 1), float32],) {
  %849 = @func_9638() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %850 = %849.0;
  (%850,)
}

def @func_18340() -> Tensor[(5, 10, 15), bool] {
  %851 = @func_4600() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %851.1
}

def @func_18823(%var_18776: Tensor[(560), uint64], %var_18807: Tensor[(750, 1), uint16], %var_18808: Tensor[(13, 10), float64]) -> (Tensor[(13, 8, 5), float64], Tensor[(10, 3, 1), int32], Tensor[(560), uint64], Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(750, 1), uint16], Tensor[(13, 10), float64], Tensor[(70), uint64]) {
  %852 = @func_4178() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %853 = cast(%var_18776, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %854 = reshape(%853, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %855 = @func_7912(%854) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(750), uint16], Tensor[(70), float64], Tensor[(560), uint64], Tensor[(10, 3, 1), int32], int32) */;
  %856 = @func_12309() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %857 = cast(%var_18776, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %858 = cast(%var_18807, dtype="uint16") /* ty=Tensor[(750, 1), uint16] */;
  %859 = cast(%var_18808, dtype="float64") /* ty=Tensor[(13, 10), float64] */;
  %860 = cast(meta[relay.Constant][41] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %861 = reshape(%857, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %862 = reshape(%858, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %863 = reshape(%859, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %864 = reshape(%860, newshape=[70]) /* ty=Tensor[(70), uint64] */;
  %865 = @func_3597(%861, %862, %863, %864) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(7, 2, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64]) */;
  %866 = %852.0;
  %867 = %855.6;
  %868 = %856.1;
  %869 = %865.7;
  (%866, %867, %var_18776, %868, %869, %var_18807, %var_18808, meta[relay.Constant][41] /* ty=Tensor[(70), uint64] */)
}

def @main(%var_20005: Tensor[(128), float64], %var_20011: Tensor[(16, 8, 3), float64]) -> (Tensor[(10, 3, 4), uint32], Tensor[(13, 8, 5), float32], Tensor[(128), float64], Tensor[(16, 8, 3), float32], Tensor[(16, 8, 5), int64]) {
  %870 = @func_12985() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(450), uint8], Tensor[(10, 3, 4), uint32], Tensor[(6, 20), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64], int32) */;
  %871 = @func_12985() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(450), uint8], Tensor[(10, 3, 4), uint32], Tensor[(6, 20), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64], int32) */;
  %872 = cast(%var_20005, dtype="float64") /* ty=Tensor[(128), float64] */;
  %873 = reshape(%872, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), float64] */;
  %874 = @func_7707(%873) /* ty=(Tensor[(16, 8, 1), float64], Tensor[(15, 6, 5), bool], Tensor[(450), uint8]) */;
  %875 = %874.0;
  %876 = cast(%875, dtype="float32") /* ty=Tensor[(16, 8, 1), float32] */;
  %877 = cast(%var_20011, dtype="float32") /* ty=Tensor[(16, 8, 3), float32] */;
  %878 = cast(%875, dtype="int64") /* ty=Tensor[(16, 8, 1), int64] */;
  %879 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 8, 5), float64] */, dtype="int64") /* ty=Tensor[(16, 8, 5), int64] */;
  %880 = %870.2;
  %881 = %871.6;
  %882 = power(%876, %877) /* ty=Tensor[(16, 8, 3), float32] */;
  %883 = right_shift(%878, %879) /* ty=Tensor[(16, 8, 5), int64] */;
  (%880, %881, %var_20005, %882, %883)
}

def @func_11350() -> Tensor[(13, 8, 5), float32] {
  @func_3835() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_3504() -> Tensor[(13, 8, 5), float64] {
  @func_3476() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_16647() -> (Tensor[(13, 8, 5), float32], Tensor[(225), float64], Tensor[(225), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %884 = cast(meta[relay.Constant][43] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %885 = reshape(%884, newshape=[225]) /* ty=Tensor[(225), float64] */;
  %886 = @func_15502(%885) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 5, 9), float64], Tensor[(225), float64], Tensor[(120), float64]) */;
  %887 = @func_4178() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %888 = @func_10948() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %889 = @func_14390() /* ty=Tensor[(13, 8, 5), float32] */;
  %890 = %886.2;
  %891 = %887.0;
  %892 = %888.0;
  (%889, %890, meta[relay.Constant][43] /* ty=Tensor[(225), float64] */, %891, %892)
}

def @func_10295(%var_10286: Tensor[(13, 4, 3), float64]) -> Tensor[(13, 4, 3), float64] {
  %893 = cast(%var_10286, dtype="float64") /* ty=Tensor[(13, 4, 3), float64] */;
  acosh(%893) /* ty=Tensor[(13, 4, 3), float64] */
}

def @func_15318(%var_15282: Tensor[(560), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(14, 4, 10), uint64], Tensor[(560), uint64], Tensor[(250, 3), int8]) {
  %894 = @func_10111() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %895 = cast(%var_15282, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %896 = cast(%var_15282, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %897 = cast(meta[relay.Constant][44] /* ty=Tensor[(250, 3), uint16] */, dtype="uint16") /* ty=Tensor[(250, 3), uint16] */;
  %898 = reshape(%895, newshape=[14, 4, 10]) /* ty=Tensor[(14, 4, 10), uint64] */;
  %899 = reshape(%896, newshape=[14, 4, 10]) /* ty=Tensor[(14, 4, 10), uint64] */;
  %900 = reshape(%897, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %901 = @func_3147(%898, %899, %900) /* ty=(Tensor[(14, 4, 10), uint64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %902 = cast(meta[relay.Constant][44] /* ty=Tensor[(250, 3), uint16] */, dtype="float32") /* ty=Tensor[(250, 3), float32] */;
  %903 = sigmoid(%902) /* ty=Tensor[(250, 3), float32] */;
  %904 = cast(meta[relay.Constant][44] /* ty=Tensor[(250, 3), uint16] */, dtype="int8") /* ty=Tensor[(250, 3), int8] */;
  %905 = shape_of(%903, dtype="int32") /* ty=Tensor[(2), int32] */;
  %906 = cast(%903, dtype="int8") /* ty=Tensor[(250, 3), int8] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %908 = %894.0;
  %909 = %901.0;
  %910 = logical_xor(%906, %907) /* ty=Tensor[(250, 3), int8] */;
  (%908, %909, %var_15282, %910)
}

def @func_18516(%var_18489: Tensor[(250, 3), uint16]) -> (Tensor[(13, 8, 5), float32], Tensor[(250, 3), uint16], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(750), float64]) {
  %911 = @func_5827() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %912 = @func_15350() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %913 = @func_9243() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %914 = cast(%var_18489, dtype="uint16") /* ty=Tensor[(250, 3), uint16] */;
  %915 = reshape(%914, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %916 = @func_9404(%915) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %917 = %916.4;
  %918 = cast(%917, dtype="float64") /* ty=Tensor[(750), float64] */;
  %919 = %911.0;
  %920 = %912.0;
  %921 = %913.1;
  %922 = asinh(%918) /* ty=Tensor[(750), float64] */;
  (%919, %var_18489, %920, %921, %922)
}

def @func_7666(%var_7659: Tensor[(4, 10, 9), int32]) -> Tensor[(4, 10, 9), uint16] {
  %923 = @func_4560() /* ty=(int32, Tensor[(13, 8, 5), float32]) */;
  %924 = %923.0;
  %925 = cast(%924, dtype="uint16") /* ty=uint16 */;
  %926 = cast(%var_7659, dtype="uint16") /* ty=Tensor[(4, 10, 9), uint16] */;
  subtract(%925, %926) /* ty=Tensor[(4, 10, 9), uint16] */
}

def @func_6293() -> Tensor[(13, 8, 5), float64] {
  %927 = @func_3935() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %927.1
}

def @func_9692() -> (Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(1, 270), float32]) {
  %928 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 270), float32] */, dtype="float32") /* ty=Tensor[(1, 270), float32] */;
  %929 = reshape(%928, newshape=[5, 6, 9]) /* ty=Tensor[(5, 6, 9), float32] */;
  %930 = @func_6989() /* ty=Tensor[(13, 8, 5), float64] */;
  %931 = @func_6381(%929) /* ty=Tensor[(5, 6, 9), float32] */;
  (%930, %931, meta[relay.Constant][45] /* ty=Tensor[(1, 270), float32] */)
}

def @func_8040() -> Tensor[(13, 8, 5), float64] {
  %932 = @func_4760() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %932.3
}

def @func_17862() -> (Tensor[(13, 8, 5), float64],) {
  %933 = @func_17114() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %934 = %933.1;
  (%934,)
}

def @func_682(%var_645: Tensor[(10, 2, 9), uint8], %var_646: Tensor[(10, 2, 9), uint8], %var_664: Tensor[(1200), int8]) -> (Tensor[(10, 2, 9), bool], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(10, ?, 4), int8], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(1200), int8], Tensor[(5, 13, 2), float64]) {
  %935 = cast(%var_646, dtype="bool") /* ty=Tensor[(10, 2, 9), bool] */;
  %936 = shape_of(%var_645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %937 = cast(%var_645, dtype="bool") /* ty=Tensor[(10, 2, 9), bool] */;
  %938 = dyn.reshape(%935, %936, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %939 = cast(meta[relay.Constant][46] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %940 = reshape(%939, newshape=[5, 13, 2]) /* ty=Tensor[(5, 13, 2), float64] */;
  %941 = cast(meta[relay.Constant][47] /* ty=Tensor[(40, 1), float64] */, dtype="float64") /* ty=Tensor[(40, 1), float64] */;
  %942 = reshape(%941, newshape=[10, 1, 4]) /* ty=Tensor[(10, 1, 4), float64] */;
  %943 = @func_56(%942) /* ty=(Tensor[(10, ?, 4), int8],) */;
  %944 = cast(%var_664, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %945 = %943.0;
  %946 = cast(%945, dtype="float64") /* ty=Tensor[(10, ?, 4), float64] */;
  %947 = cast(%var_664, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %948 = reshape(%944, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int8] */;
  %949 = reshape(%946, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %950 = reshape(%947, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), bool] */;
  %951 = @func_363(%948, %949, %950) /* ty=(Tensor[(40), float64], Tensor[(10, ?, 4), float64], Tensor[(10, ?, 4), int8], Tensor[(5, 16, 15), bool], Tensor[(5, 16, 15), uint64]) */;
  %952 = cast(meta[relay.Constant][46] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %953 = reshape(%952, newshape=[5, 13, 2]) /* ty=Tensor[(5, 13, 2), float64] */;
  %954 = less(%937, %938) /* ty=Tensor[(10, 2, 9), bool] */;
  %955 = @func_478(%940) /* ty=Tensor[(5, 13, 2), float64] */;
  %956 = %951.0;
  %957 = @func_478(%953) /* ty=Tensor[(5, 13, 2), float64] */;
  (%954, %955, meta[relay.Constant][46] /* ty=Tensor[(130), float64] */, %945, meta[relay.Constant][47] /* ty=Tensor[(40, 1), float64] */, %956, %var_664, %957)
}

def @func_8696(%var_8685: Tensor[(270), float32]) -> (int32, Tensor[(5, 6, 9), float32], Tensor[(270), float32]) {
  %958 = @func_4521() /* ty=(int32,) */;
  %959 = cast(%var_8685, dtype="float32") /* ty=Tensor[(270), float32] */;
  %960 = reshape(%959, newshape=[270]) /* ty=Tensor[(270), float32] */;
  %961 = @func_7275(%960) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) */;
  %962 = %958.0;
  %963 = %961.2;
  (%962, %963, %var_8685)
}

def @func_17883() -> Tensor[(13, 8, 5), float64] {
  %964 = @func_5186() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %964.1
}

def @func_19591() -> (int32,) {
  %965 = @func_9900() /* ty=(int32,) */;
  %966 = %965.0;
  (%966,)
}

def @func_4405() -> Tensor[(13, 8, 5), float64] {
  %967 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %967.0
}

def @func_12128() -> Tensor[(13, 8, 5), float32] {
  %968 = @func_10165() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %968.0
}

def @func_17820() -> (Tensor[(13, 8, 5), float64],) {
  %969 = @func_7609() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %970 = %969.0;
  (%970,)
}

def @func_17043() -> Tensor[(13, 8, 5), float64] {
  @func_3504() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_15623() -> (Tensor[(15, 6, 5), float32], Tensor[(13, 8, 5), float32]) {
  %971 = @func_12437() /* ty=(Tensor[(15, 6, 5), bool],) */;
  %972 = %971.0;
  %973 = cast(%972, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
  %974 = @func_9586() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %975 = acos(%973) /* ty=Tensor[(15, 6, 5), float32] */;
  %976 = %974.1;
  (%975, %976)
}

def @func_9536(%var_9520: Tensor[(12, 12, 3), int16]) -> (Tensor[(12, 12, 3), bool],) {
  %977 = cast(meta[relay.Constant][48] /* ty=Tensor[(12, 12, 3), int16] */, dtype="bool") /* ty=Tensor[(12, 12, 3), bool] */;
  %978 = shape_of(%var_9520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %979 = cast(%var_9520, dtype="bool") /* ty=Tensor[(12, 12, 3), bool] */;
  %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %981 = greater(%979, %980) /* ty=Tensor[(12, 12, 3), bool] */;
  (%981,)
}

def @func_16754() -> Tensor[(13, 8, 5), float32] {
  %982 = @func_10242() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %982.0
}

def @func_15166(%var_15144: Tensor[(560), uint64], %var_15145: Tensor[(750), uint16]) -> (Tensor[(5, 13, 2), float64], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70, 1), uint64], Tensor[(10, 3, ?), int8]) {
  %983 = cast(%var_15144, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %984 = cast(%var_15145, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %985 = cast(meta[relay.Constant][49] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %986 = cast(meta[relay.Constant][50] /* ty=Tensor[(70, 1), uint64] */, dtype="uint64") /* ty=Tensor[(70, 1), uint64] */;
  %987 = reshape(%983, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %988 = reshape(%984, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %989 = reshape(%985, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %990 = reshape(%986, newshape=[70]) /* ty=Tensor[(70), uint64] */;
  %991 = @func_3597(%987, %988, %989, %990) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(7, 2, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64]) */;
  %992 = @func_11150() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %993 = %992.0;
  %994 = @func_6177() /* ty=Tensor[(10, 3, 1), float32] */;
  %995 = cast(%994, dtype="int8") /* ty=Tensor[(10, 3, 1), int8] */;
  %996 = shape_of(%993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %997 = cast(%993, dtype="int8") /* ty=Tensor[(10, 3, 1), int8] */;
  %998 = dyn.reshape(%995, %996, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %999 = %991.4;
  %1000 = bitwise_xor(%997, %998) /* ty=Tensor[(10, 3, ?), int8] */;
  (%999, %var_15144, %var_15145, meta[relay.Constant][49] /* ty=Tensor[(130), float64] */, meta[relay.Constant][50] /* ty=Tensor[(70, 1), uint64] */, %1000)
}

def @func_17503(%var_17494: Tensor[(156), float64]) -> (Tensor[(13, 8, 5), float64], Tensor[(819), float64], Tensor[(156), float64], Tensor[(280, 2), float64]) {
  %1001 = cast(meta[relay.Constant][51] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
  %1002 = cast(%var_17494, dtype="float64") /* ty=Tensor[(156), float64] */;
  %1003 = reshape(%1001, newshape=[819]) /* ty=Tensor[(819), float64] */;
  %1004 = reshape(%1002, newshape=[78, 2]) /* ty=Tensor[(78, 2), float64] */;
  %1005 = @func_13682(%1003, %1004) /* ty=(Tensor[(10, 3, 1), float32], Tensor[(7, 9, 13), float64], Tensor[(819), float64], Tensor[(13, 8, 5), float64], Tensor[(10, 3, 1), float32], Tensor[(13, 4, 3), float64], Tensor[(78, 2), float64], Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), float64]) */;
  %1006 = @func_4760() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %1007 = %1006.4;
  %1008 = cast(%1007, dtype="float64") /* ty=Tensor[(280, 2), float64] */;
  %1009 = erf(%1008) /* ty=Tensor[(280, 2), float64] */;
  %1010 = cast(%1007, dtype="float64") /* ty=Tensor[(280, 2), float64] */;
  %1011 = shape_of(%1009, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1012 = cast(%1009, dtype="float64") /* ty=Tensor[(280, 2), float64] */;
  %1013 = dyn.reshape(%1010, %1011, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1014 = %1005.3;
  %1015 = power(%1012, %1013) /* ty=Tensor[(280, 2), float64] */;
  (%1014, meta[relay.Constant][51] /* ty=Tensor[(819), float64] */, %var_17494, %1015)
}

def @func_5827() -> (Tensor[(13, 8, 5), float32],) {
  %1016 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1017 = %1016.0;
  (%1017,)
}

def @func_12698() -> Tensor[(13, 8, 5), float64] {
  @func_6353() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_6353() -> Tensor[(13, 8, 5), float64] {
  %1018 = @func_3888() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %1018.0
}

def @func_16765() -> Tensor[(15, 6, 5), float32] {
  %1019 = @func_15623() /* ty=(Tensor[(15, 6, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %1019.0
}

def @func_12056(%var_12026: Tensor[(3, 8, 10), float64]) -> (Tensor[(3, 8, 10), float64], Tensor[(13, 8, 5), float32]) {
  %1020 = cast(%var_12026, dtype="float64") /* ty=Tensor[(3, 8, 10), float64] */;
  %1021 = cos(%1020) /* ty=Tensor[(3, 8, 10), float64] */;
  %1022 = @func_5564() /* ty=Tensor[(13, 8, 5), float32] */;
  (%1021, %1022)
}

def @func_7410(%var_7387: Tensor[(130), float64]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(63), uint32]) {
  %1023 = @func_4569() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1024 = %1023.0;
  %1025 = cast(%1024, dtype="float32") /* ty=Tensor[(13, 8, 5), float32] */;
  %1026 = cast(%var_7387, dtype="float64") /* ty=Tensor[(130), float64] */;
  %1027 = reshape(%1026, newshape=[5, 13, 2]) /* ty=Tensor[(5, 13, 2), float64] */;
  %1028 = cast(meta[relay.Constant][52] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %1029 = reshape(%1028, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), uint32] */;
  %1030 = @func_5995(%1029) /* ty=(Tensor[(7, ?, 9), bool], Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(70), uint64], Tensor[(13, 8, 5), float32], Tensor[(360, 1), float32]) */;
  %1031 = rsqrt(%1025) /* ty=Tensor[(13, 8, 5), float32] */;
  %1032 = @func_478(%1027) /* ty=Tensor[(5, 13, 2), float64] */;
  %1033 = %1030.3;
  (%1031, %1032, %var_7387, %1033, meta[relay.Constant][52] /* ty=Tensor[(63), uint32] */)
}

def @func_12794() -> (Tensor[(13, 8, 5), float64],) {
  %1034 = @func_7205() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %1035 = %1034.1;
  (%1035,)
}

def @func_19725() -> Tensor[(13, 8, 5), float64] {
  @func_17883() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_7912(%var_7860: Tensor[(560), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(750), uint16], Tensor[(70), float64], Tensor[(560), uint64], Tensor[(10, 3, 1), int32], int32) {
  %1036 = @func_6925() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %1037 = @func_5004() /* ty=Tensor[(750), uint16] */;
  %1038 = cast(%1037, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %1039 = reshape(%1038, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %1040 = @func_3808(%1039) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %1041 = cast(%var_7860, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %1042 = reshape(%1041, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %1043 = @func_6837(%1042) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(70), float64]) */;
  %1044 = cast(-4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1045 = reshape(%1044, newshape=[]) /* ty=int32 */;
  %1046 = @func_4405() /* ty=Tensor[(13, 8, 5), float64] */;
  %1047 = %1036.0;
  %1048 = %1040.2;
  %1049 = %1043.7;
  %1050 = @func_2489(%1045) /* ty=Tensor[(10, 3, 1), int32] */;
  (%1046, %1047, %1037, %1048, %1049, %var_7860, %1050, -4 /* ty=int32 */)
}

def @func_13255(%var_13251: Tensor[(63, 1), uint32]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(8, 8, 6), float64], Tensor[(7, ?, 9), bool], Tensor[(63, 1), uint32]) {
  %1051 = @func_10576() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(8, 8, 6), float64], Tensor[(13, 8, 5), float32]) */;
  %1052 = cast(%var_13251, dtype="uint32") /* ty=Tensor[(63, 1), uint32] */;
  %1053 = reshape(%1052, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), uint32] */;
  %1054 = @func_5995(%1053) /* ty=(Tensor[(7, ?, 9), bool], Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(70), uint64], Tensor[(13, 8, 5), float32], Tensor[(360, 1), float32]) */;
  %1055 = @func_10689() /* ty=Tensor[(13, 8, 5), float32] */;
  %1056 = @func_4077() /* ty=Tensor[(13, 8, 5), float32] */;
  %1057 = %1051.1;
  %1058 = %1054.0;
  (%1055, %1056, %1057, %1058, %var_13251)
}

def @func_14039() -> (Tensor[(13, 8, 5), float32],) {
  %1059 = @func_5066() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1060 = %1059.0;
  (%1060,)
}

def @func_17961() -> (Tensor[(750), uint16], Tensor[(10, 3, 1), float32]) {
  %1061 = @func_8934() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(560), uint64]) */;
  %1062 = @func_7759() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %1063 = %1061.2;
  %1064 = %1062.0;
  (%1063, %1064)
}

def @func_1769(%var_1725: Tensor[(7, 2, 5), uint64], %var_1726: Tensor[(7, 2, 5), uint64]) -> (Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) {
  %1065 = cast(%var_1726, dtype="uint64") /* ty=Tensor[(7, 2, 5), uint64] */;
  %1066 = shape_of(%var_1725, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1067 = cast(%var_1725, dtype="uint64") /* ty=Tensor[(7, 2, 5), uint64] */;
  %1068 = dyn.reshape(%1065, %1066, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1069 = cast(%var_1725, dtype="bool") /* ty=Tensor[(7, 2, 5), bool] */;
  %1070 = shape_of(%var_1726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1071 = cast(%var_1726, dtype="bool") /* ty=Tensor[(7, 2, 5), bool] */;
  %1072 = dyn.reshape(%1069, %1070, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1073 = not_equal(%1071, %1072) /* ty=Tensor[(7, 2, 5), bool] */;
  %1074 = cast(meta[relay.Constant][53] /* ty=Tensor[(7, 2, 5), bool] */, dtype="bool") /* ty=Tensor[(7, 2, 5), bool] */;
  %1075 = shape_of(%1073, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1076 = cast(%1073, dtype="bool") /* ty=Tensor[(7, 2, 5), bool] */;
  %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1078 = cast(%1073, dtype="float64") /* ty=Tensor[(7, 2, 5), float64] */;
  %1079 = bitwise_and(%1067, %1068) /* ty=Tensor[(7, 2, 5), uint64] */;
  %1080 = greater(%1076, %1077) /* ty=Tensor[(7, 2, 5), bool] */;
  %1081 = erf(%1078) /* ty=Tensor[(7, 2, 5), float64] */;
  (%1079, %1080, %1081)
}

def @func_14234() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  %1082 = @func_10462() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(750), uint16]) */;
  %1083 = @func_5736() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(70), uint64], Tensor[(360, 1), float32]) */;
  %1084 = %1082.2;
  %1085 = @func_11217() /* ty=Tensor[(13, 8, 5), float64] */;
  %1086 = %1083.0;
  (%1084, %1085, %1086)
}

def @func_4560() -> (int32, Tensor[(13, 8, 5), float32]) {
  %1087 = @func_4521() /* ty=(int32,) */;
  %1088 = @func_3935() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %1089 = %1087.0;
  %1090 = %1088.0;
  (%1089, %1090)
}

def @func_3888() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  %1091 = @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1092 = @func_3476() /* ty=Tensor[(13, 8, 5), float64] */;
  %1093 = %1091.0;
  (%1092, %1093)
}

def @func_6438() -> (Tensor[(13, 8, 5), float32],) {
  %1094 = @func_4760() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %1095 = %1094.6;
  (%1095,)
}

def @func_6782(%var_6780: Tensor[(180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(180), uint8]) {
  %1096 = cast(%var_6780, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %1097 = reshape(%1096, newshape=[1, 180]) /* ty=Tensor[(1, 180), uint8] */;
  %1098 = @func_6688(%1097) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(130), float64], Tensor[(1, 180), uint8], Tensor[(1200), int8]) */;
  %1099 = @func_6293() /* ty=Tensor[(13, 8, 5), float64] */;
  %1100 = %1098.0;
  (%1099, %1100, %var_6780)
}

def @func_7530(%var_7450: Tensor[(225), float64], %var_7505: Tensor[(10, 3, 4), float64]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 5, 9), float64], Tensor[(10, 3, 1), bool], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 4), int32], Tensor[(10, 3, 225), float64]) {
  %1101 = @func_5066() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1102 = cast(%var_7450, dtype="float64") /* ty=Tensor[(225), float64] */;
  %1103 = reshape(%1102, newshape=[5, 5, 9]) /* ty=Tensor[(5, 5, 9), float64] */;
  %1104 = @func_6246(%1103) /* ty=(Tensor[(5, 5, 9), float64], int32, Tensor[(13, 8, 5), float64], Tensor[(5, 5, 9), float64], Tensor[(13, 8, 5), float64]) */;
  %1105 = cast(9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1106 = reshape(%1105, newshape=[]) /* ty=int32 */;
  %1107 = @func_2489(%1106) /* ty=Tensor[(10, 3, 1), int32] */;
  %1108 = cast(%1107, dtype="float64") /* ty=Tensor[(10, 3, 1), float64] */;
  %1109 = atanh(%1108) /* ty=Tensor[(10, 3, 1), float64] */;
  %1110 = cast(%1109, dtype="bool") /* ty=Tensor[(10, 3, 1), bool] */;
  %1111 = cast(9 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %1112 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1113 = cast(%1109, dtype="int32") /* ty=Tensor[(10, 3, 1), int32] */;
  %1114 = cast(%var_7505, dtype="int32") /* ty=Tensor[(10, 3, 4), int32] */;
  %1115 = cast(%var_7450, dtype="uint16") /* ty=Tensor[(225), uint16] */;
  %1116 = cast(%1109, dtype="uint16") /* ty=Tensor[(10, 3, 1), uint16] */;
  %1117 = bitwise_or(%1115, %1116) /* ty=Tensor[(10, 3, 225), uint16] */;
  %1118 = cast(%1117, dtype="float64") /* ty=Tensor[(10, 3, 225), float64] */;
  %1119 = log2(%1118) /* ty=Tensor[(10, 3, 225), float64] */;
  %1120 = cast(%1119, dtype="float64") /* ty=Tensor[(10, 3, 225), float64] */;
  %1121 = %1101.0;
  %1122 = %1104.0;
  %1123 = less_equal(%1110, %1111) /* ty=Tensor[(10, 3, 1), bool] */;
  %1124 = %1112.0;
  %1125 = right_shift(%1113, %1114) /* ty=Tensor[(10, 3, 4), int32] */;
  %1126 = sinh(%1120) /* ty=Tensor[(10, 3, 225), float64] */;
  (%1121, %1122, %1123, %1124, %1125, %1126)
}

def @func_5004() -> Tensor[(750), uint16] {
  %1127 = @func_4600() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %1127.2
}

def @func_12408() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %1128 = @func_6989() /* ty=Tensor[(13, 8, 5), float64] */;
  %1129 = @func_6293() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1128, %1129)
}

def @func_10882() -> (Tensor[(10, 3, 1), float32],) {
  %1130 = @func_10724() /* ty=Tensor[(10, 3, 1), float32] */;
  (%1130,)
}

def @func_11378() -> (Tensor[(13, 8, 5), float64],) {
  %1131 = @func_9586() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %1132 = %1131.0;
  (%1132,)
}

def @func_12985() -> (Tensor[(13, 8, 5), float32], Tensor[(450), uint8], Tensor[(10, 3, 4), uint32], Tensor[(6, 20), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64], int32) {
  %1133 = @func_10060() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(15, 6, 5), bool], Tensor[(450), uint8]) */;
  %1134 = cast(meta[relay.Constant][54] /* ty=Tensor[(6, 20), float32] */, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
  %1135 = reshape(%1134, newshape=[10, 3, 4]) /* ty=Tensor[(10, 3, 4), float32] */;
  %1136 = @func_4569() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1137 = @func_4760() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %1138 = @func_12011() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %1139 = @func_4560() /* ty=(int32, Tensor[(13, 8, 5), float32]) */;
  %1140 = @func_3835() /* ty=Tensor[(13, 8, 5), float32] */;
  %1141 = %1133.3;
  %1142 = @func_11712(%1135) /* ty=Tensor[(10, 3, 4), uint32] */;
  %1143 = %1136.0;
  %1144 = @func_6989() /* ty=Tensor[(13, 8, 5), float64] */;
  %1145 = %1137.0;
  %1146 = @func_10724() /* ty=Tensor[(10, 3, 1), float32] */;
  %1147 = %1138.2;
  %1148 = %1139.0;
  (%1140, %1141, %1142, meta[relay.Constant][54] /* ty=Tensor[(6, 20), float32] */, %1143, %1144, %1145, %1146, %1147, %1148)
}

def @func_15023(%var_14977: Tensor[(10, 3, 9), float32], %var_15012: Tensor[(6, 180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(10, 3, 9), int64], Tensor[(3, 60), uint8], Tensor[(6, 180), bool], Tensor[(13, 8, 5), float32]) {
  %1149 = @func_11274() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %1150 = @func_9714() /* ty=Tensor[(10, 3, 1), float32] */;
  %1151 = cast(%1150, dtype="int64") /* ty=Tensor[(10, 3, 1), int64] */;
  %1152 = cast(%var_14977, dtype="int64") /* ty=Tensor[(10, 3, 9), int64] */;
  %1153 = cast(meta[relay.Constant][55] /* ty=Tensor[(3, 60), uint8] */, dtype="uint8") /* ty=Tensor[(3, 60), uint8] */;
  %1154 = reshape(%1153, newshape=[1, 180]) /* ty=Tensor[(1, 180), uint8] */;
  %1155 = @func_6688(%1154) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(130), float64], Tensor[(1, 180), uint8], Tensor[(1200), int8]) */;
  %1156 = %1155.3;
  %1157 = cast(%1156, dtype="bool") /* ty=Tensor[(1, 180), bool] */;
  %1158 = cast(%var_15012, dtype="bool") /* ty=Tensor[(6, 180), bool] */;
  %1159 = @func_9511() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %1160 = %1149.1;
  %1161 = logical_xor(%1151, %1152) /* ty=Tensor[(10, 3, 9), int64] */;
  %1162 = less(%1157, %1158) /* ty=Tensor[(6, 180), bool] */;
  %1163 = %1159.1;
  (%1160, %1161, meta[relay.Constant][55] /* ty=Tensor[(3, 60), uint8] */, %1162, %1163)
}

def @func_19325() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %1164 = @func_6633() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1165 = @func_6353() /* ty=Tensor[(13, 8, 5), float64] */;
  %1166 = %1164.0;
  (%1165, %1166)
}

def @func_15999(%var_15978: int16, %var_15985: Tensor[(12, 30), float32]) -> (Tensor[(13, 8, 5), float32], Tensor[(12, 30), float32], Tensor[(14, 4, 8), bool]) {
  %1167 = cast(%var_15985, dtype="float32") /* ty=Tensor[(12, 30), float32] */;
  %1168 = reshape(%1167, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
  %1169 = @func_4307(%1168) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 9, 8), float32], Tensor[(6, 60), float32], Tensor[(13, 8, 5), float64]) */;
  %1170 = cast(%var_15978, dtype="bool") /* ty=bool */;
  %1171 = cast(meta[relay.Constant][56] /* ty=Tensor[(14, 4, 8), int16] */, dtype="bool") /* ty=Tensor[(14, 4, 8), bool] */;
  %1172 = less(%1170, %1171) /* ty=Tensor[(14, 4, 8), bool] */;
  %1173 = cast(%var_15978, dtype="bool") /* ty=bool */;
  %1174 = cast(%1172, dtype="bool") /* ty=Tensor[(14, 4, 8), bool] */;
  %1175 = %1169.1;
  %1176 = equal(%1173, %1174) /* ty=Tensor[(14, 4, 8), bool] */;
  (%1175, %var_15985, %1176)
}

def @func_9270() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %1177 = @func_6588() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1178 = %1177.0;
  %1179 = @func_4405() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1178, %1179)
}

def @func_9209() -> (Tensor[(13, 8, 5), float64],) {
  %1180 = @func_8897() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1180,)
}

def @func_17282() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
  %1181 = @func_4077() /* ty=Tensor[(13, 8, 5), float32] */;
  %1182 = @func_12128() /* ty=Tensor[(13, 8, 5), float32] */;
  (%1181, %1182)
}

def @func_17598() -> Tensor[(13, 8, 5), float32] {
  %1183 = @func_17012() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1183.0
}

def @func_6246(%var_6207: Tensor[(5, 5, 9), float64]) -> (Tensor[(5, 5, 9), float64], int32, Tensor[(13, 8, 5), float64], Tensor[(5, 5, 9), float64], Tensor[(13, 8, 5), float64]) {
  %1184 = cast(meta[relay.Constant][57] /* ty=Tensor[(5, 5, 9), float64] */, dtype="float64") /* ty=Tensor[(5, 5, 9), float64] */;
  %1185 = shape_of(%var_6207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1186 = cast(%var_6207, dtype="float64") /* ty=Tensor[(5, 5, 9), float64] */;
  %1187 = dyn.reshape(%1184, %1185, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1188 = @func_5287() /* ty=(int32, Tensor[(13, 8, 5), float64]) */;
  %1189 = @func_4569() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1190 = cast(meta[relay.Constant][57] /* ty=Tensor[(5, 5, 9), float64] */, dtype="float64") /* ty=Tensor[(5, 5, 9), float64] */;
  %1191 = @func_4178() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1192 = power(%1186, %1187) /* ty=Tensor[(5, 5, 9), float64] */;
  %1193 = %1188.0;
  %1194 = %1189.0;
  %1195 = log2(%1190) /* ty=Tensor[(5, 5, 9), float64] */;
  %1196 = %1191.0;
  (%1192, %1193, %1194, %1195, %1196)
}

def @func_3970() -> (Tensor[(13, 8, 5), float64],) {
  %1197 = @func_3476() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1197,)
}

def @func_7086(%var_7056: Tensor[(11, 16, 2), int64], %var_7057: Tensor[(11, 16, 2), int64]) -> (Tensor[(11, 16, 2), int64], Tensor[(13, 8, 5), float64]) {
  %1198 = cast(%var_7057, dtype="int64") /* ty=Tensor[(11, 16, 2), int64] */;
  %1199 = shape_of(%var_7056, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1200 = cast(%var_7056, dtype="int64") /* ty=Tensor[(11, 16, 2), int64] */;
  %1201 = dyn.reshape(%1198, %1199, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1202 = multiply(%1200, %1201) /* ty=Tensor[(11, 16, 2), int64] */;
  %1203 = @func_6989() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1202, %1203)
}

def @func_13557(%var_13542: Tensor[(10, 3, 13), float32]) -> (Tensor[(13, 8, 5), float32], Tensor[(10, 3, 13), uint32]) {
  %1204 = @func_9270() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %1205 = @func_13297() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %1206 = %1205.0;
  %1207 = cast(%1206, dtype="float32") /* ty=Tensor[(10, 3, 1), float32] */;
  %1208 = exp(%1207) /* ty=Tensor[(10, 3, 1), float32] */;
  %1209 = cast(%1208, dtype="uint32") /* ty=Tensor[(10, 3, 1), uint32] */;
  %1210 = cast(%var_13542, dtype="uint32") /* ty=Tensor[(10, 3, 13), uint32] */;
  %1211 = %1204.0;
  %1212 = logical_xor(%1209, %1210) /* ty=Tensor[(10, 3, 13), uint32] */;
  (%1211, %1212)
}

def @func_6588() -> (Tensor[(13, 8, 5), float32],) {
  %1213 = @func_5564() /* ty=Tensor[(13, 8, 5), float32] */;
  (%1213,)
}

def @func_3771() -> Tensor[(13, 8, 5), float32] {
  %1214 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
  %1215 = cast(%1214, dtype="float32") /* ty=Tensor[(13, 8, 5), float32] */;
  acosh(%1215) /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_9900() -> (int32,) {
  %1216 = @func_4390() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64]) */;
  %1217 = %1216.3;
  (%1217,)
}

def @func_13464(%var_13428: Tensor[(1200), int8]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(180), uint8], Tensor[(1200), int8]) {
  %1218 = cast(meta[relay.Constant][58] /* ty=Tensor[(180), uint8] */, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %1219 = cast(meta[relay.Constant][58] /* ty=Tensor[(180), uint8] */, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %1220 = cast(%var_13428, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %1221 = reshape(%1218, newshape=[10, 2, 9]) /* ty=Tensor[(10, 2, 9), uint8] */;
  %1222 = reshape(%1219, newshape=[10, 2, 9]) /* ty=Tensor[(10, 2, 9), uint8] */;
  %1223 = reshape(%1220, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %1224 = @func_682(%1221, %1222, %1223) /* ty=(Tensor[(10, 2, 9), bool], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(10, ?, 4), int8], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(1200), int8], Tensor[(5, 13, 2), float64]) */;
  %1225 = @func_5099() /* ty=Tensor[(13, 8, 5), float32] */;
  %1226 = %1224.7;
  (%1225, %1226, meta[relay.Constant][58] /* ty=Tensor[(180), uint8] */, %var_13428)
}

def @func_9223() -> (Tensor[(750), uint16],) {
  %1227 = @func_9054() /* ty=Tensor[(750), uint16] */;
  (%1227,)
}

def @func_4242(%var_4194: Tensor[(70), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(5, 13, 2), float64], Tensor[(13, 8, 5), float64]) {
  %1228 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1229 = cast(meta[relay.Constant][59] /* ty=Tensor[(560), uint64] */, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %1230 = cast(meta[relay.Constant][60] /* ty=Tensor[(750), uint16] */, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %1231 = cast(meta[relay.Constant][61] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %1232 = cast(%var_4194, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %1233 = reshape(%1229, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %1234 = reshape(%1230, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %1235 = reshape(%1231, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %1236 = reshape(%1232, newshape=[70]) /* ty=Tensor[(70), uint64] */;
  %1237 = @func_3597(%1233, %1234, %1235, %1236) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(7, 2, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64]) */;
  %1238 = cast(meta[relay.Constant][61] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %1239 = reshape(%1238, newshape=[5, 13, 2]) /* ty=Tensor[(5, 13, 2), float64] */;
  %1240 = @func_3613() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1241 = %1228.0;
  %1242 = %1237.0;
  %1243 = @func_478(%1239) /* ty=Tensor[(5, 13, 2), float64] */;
  %1244 = %1240.0;
  (%1241, %1242, meta[relay.Constant][59] /* ty=Tensor[(560), uint64] */, meta[relay.Constant][60] /* ty=Tensor[(750), uint16] */, meta[relay.Constant][61] /* ty=Tensor[(130), float64] */, %var_4194, %1243, %1244)
}

def @func_9438() -> Tensor[(13, 8, 5), float64] {
  %1245 = @func_9243() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %1245.0
}

def @func_18422() -> (Tensor[(13, 8, 5), float64],) {
  %1246 = @func_6338() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1247 = %1246.0;
  (%1247,)
}

def @func_9705() -> Tensor[(5, 10, 15), bool] {
  %1248 = @func_8293() /* ty=(Tensor[(5, 10, 15), bool],) */;
  %1248.0
}

def @func_10060() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(15, 6, 5), bool], Tensor[(450), uint8]) {
  %1249 = @func_5287() /* ty=(int32, Tensor[(13, 8, 5), float64]) */;
  %1250 = @func_7609() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1251 = cast(meta[relay.Constant][62] /* ty=Tensor[(450), uint8] */, dtype="uint8") /* ty=Tensor[(450), uint8] */;
  %1252 = reshape(%1251, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), uint8] */;
  %1253 = @func_1590(%1252) /* ty=(Tensor[(15, 6, 5), bool],) */;
  %1254 = %1249.1;
  %1255 = %1250.0;
  %1256 = %1253.0;
  (%1254, %1255, %1256, meta[relay.Constant][62] /* ty=Tensor[(450), uint8] */)
}

def @func_7609() -> (Tensor[(13, 8, 5), float64],) {
  %1257 = @func_5024() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1257,)
}

def @func_19410() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  %1258 = @func_9417() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1259 = @func_15350() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1260 = %1258.0;
  %1261 = %1259.0;
  (%1260, %1261)
}

def @func_19437() -> (Tensor[(13, 8, 5), float64], Tensor[(225), float64], Tensor[(560), uint64], Tensor[(13, 8, 5), float64]) {
  %1262 = @func_12408() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %1263 = @func_16824() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(225), float64]) */;
  %1264 = @func_8934() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(560), uint64]) */;
  %1265 = %1262.1;
  %1266 = %1263.2;
  %1267 = %1264.3;
  %1268 = @func_9548() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1265, %1266, %1267, %1268)
}

def @func_5040() -> (Tensor[(13, 8, 5), float64],) {
  %1269 = @func_5024() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1269,)
}

def @func_15391() -> Tensor[(13, 8, 5), float32] {
  %1270 = @func_12764() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1270.0
}

def @func_14200(%var_14171: Tensor[(156), float64], %var_14193: Tensor[(819), float64]) -> (Tensor[(13, 8, 5), float64], Tensor[(450), uint8], Tensor[(128), float64], Tensor[(156), float64], Tensor[(5, 10, 15), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(819), int64]) {
  %1271 = @func_7205() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %1272 = cast(meta[relay.Constant][63] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %1273 = reshape(%1272, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), float64] */;
  %1274 = @func_7707(%1273) /* ty=(Tensor[(16, 8, 1), float64], Tensor[(15, 6, 5), bool], Tensor[(450), uint8]) */;
  %1275 = cast(meta[relay.Constant][64] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
  %1276 = cast(%var_14171, dtype="float64") /* ty=Tensor[(156), float64] */;
  %1277 = reshape(%1275, newshape=[819]) /* ty=Tensor[(819), float64] */;
  %1278 = reshape(%1276, newshape=[78, 2]) /* ty=Tensor[(78, 2), float64] */;
  %1279 = @func_13682(%1277, %1278) /* ty=(Tensor[(10, 3, 1), float32], Tensor[(7, 9, 13), float64], Tensor[(819), float64], Tensor[(13, 8, 5), float64], Tensor[(10, 3, 1), float32], Tensor[(13, 4, 3), float64], Tensor[(78, 2), float64], Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), float64]) */;
  %1280 = %1279.8;
  %1281 = cast(%1280, dtype="float32") /* ty=Tensor[(5, 10, 15), float32] */;
  %1282 = @func_6925() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %1283 = @func_13701() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1284 = cast(%var_14193, dtype="int64") /* ty=Tensor[(819), int64] */;
  %1285 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(819), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1286 = cast(meta[relay.Constant][64] /* ty=Tensor[(819), float64] */, dtype="int64") /* ty=Tensor[(819), int64] */;
  %1287 = dyn.reshape(%1284, %1285, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1288 = %1271.0;
  %1289 = %1274.2;
  %1290 = sqrt(%1281) /* ty=Tensor[(5, 10, 15), float32] */;
  %1291 = %1282.1;
  %1292 = %1283.0;
  %1293 = @func_6989() /* ty=Tensor[(13, 8, 5), float64] */;
  %1294 = right_shift(%1286, %1287) /* ty=Tensor[(819), int64] */;
  (%1288, %1289, meta[relay.Constant][63] /* ty=Tensor[(128), float64] */, %var_14171, %1290, %1291, %1292, %1293, %1294)
}

def @func_7205() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %1295 = @func_5186() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %1296 = @func_7016() /* ty=Tensor[(13, 8, 5), float64] */;
  %1297 = %1295.1;
  (%1296, %1297)
}

def @func_15350() -> (Tensor[(13, 8, 5), float32],) {
  %1298 = @func_10242() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %1299 = %1298.1;
  (%1299,)
}

def @func_9798(%var_9788: Tensor[(14, 5), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(14, 5), uint64], Tensor[(13, 8, 5), float64]) {
  %1300 = cast(%var_9788, dtype="uint64") /* ty=Tensor[(14, 5), uint64] */;
  %1301 = reshape(%1300, newshape=[70]) /* ty=Tensor[(70), uint64] */;
  %1302 = @func_4242(%1301) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(5, 13, 2), float64], Tensor[(13, 8, 5), float64]) */;
  %1303 = @func_5882() /* ty=Tensor[(13, 8, 5), float64] */;
  %1304 = %1302.5;
  %1305 = @func_9438() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1303, %1304, %var_9788, %1305)
}

def @func_10818() -> (Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32]) {
  %1306 = @func_10252() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %1307 = %1306.0;
  %1308 = @func_5099() /* ty=Tensor[(13, 8, 5), float32] */;
  (%1307, %1308)
}

def @func_17456() -> (Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64]) {
  %1309 = @func_9270() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %1310 = @func_9705() /* ty=Tensor[(5, 10, 15), bool] */;
  %1311 = %1309.1;
  (%1310, %1311)
}

def @func_15502(%var_15498: Tensor[(225), float64]) -> (Tensor[(13, 8, 5), float64], Tensor[(5, 5, 9), float64], Tensor[(225), float64], Tensor[(120), float64]) {
  %1312 = cast(%var_15498, dtype="float64") /* ty=Tensor[(225), float64] */;
  %1313 = cast(meta[relay.Constant][65] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1314 = reshape(%1312, newshape=[225]) /* ty=Tensor[(225), float64] */;
  %1315 = reshape(%1313, newshape=[10, 3, 4]) /* ty=Tensor[(10, 3, 4), float64] */;
  %1316 = @func_7530(%1314, %1315) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 5, 9), float64], Tensor[(10, 3, 1), bool], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 4), int32], Tensor[(10, 3, 225), float64]) */;
  %1317 = @func_5882() /* ty=Tensor[(13, 8, 5), float64] */;
  %1318 = %1316.1;
  (%1317, %1318, %var_15498, meta[relay.Constant][65] /* ty=Tensor[(120), float64] */)
}

def @func_19549() -> (Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64]) {
  %1319 = @func_8151() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1320 = @func_18468() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(270), float32], Tensor[(1080), uint8], Tensor[(13, 8, 5), float64]) */;
  %1321 = %1319.0;
  %1322 = @func_10724() /* ty=Tensor[(10, 3, 1), float32] */;
  %1323 = %1320.4;
  (%1321, %1322, %1323)
}

def @func_19629() -> Tensor[(13, 8, 5), float64] {
  @func_8897() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_16340() -> Tensor[(13, 8, 5), float32] {
  %1324 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1324.0
}

def @func_13146() -> (Tensor[(13, 8, 5), float64],) {
  %1325 = @func_4991() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1325,)
}

def @func_16406() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  %1326 = @func_11051() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1327 = @func_9170() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %1328 = %1326.0;
  %1329 = %1327.0;
  (%1328, %1329)
}

def @func_16714(%var_16662: Tensor[(120), float32], %var_16701: int32) -> (Tensor[(13, 8, 5), float64], Tensor[(10, 3, 4), uint32], Tensor[(120), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(10, 3, 1), int32], int32) {
  %1330 = @func_8077() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(360), float32]) */;
  %1331 = cast(%var_16662, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1332 = reshape(%1331, newshape=[10, 3, 4]) /* ty=Tensor[(10, 3, 4), float32] */;
  %1333 = @func_10030() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %1334 = @func_13701() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1335 = cast(%var_16701, dtype="int32") /* ty=int32 */;
  %1336 = reshape(%1335, newshape=[]) /* ty=int32 */;
  %1337 = %1330.0;
  %1338 = @func_11712(%1332) /* ty=Tensor[(10, 3, 4), uint32] */;
  %1339 = %1333.0;
  %1340 = %1334.0;
  %1341 = @func_2489(%1336) /* ty=Tensor[(10, 3, 1), int32] */;
  (%1337, %1338, %var_16662, %1339, %1340, %1341, %var_16701)
}

def @func_11274() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %1342 = @func_4560() /* ty=(int32, Tensor[(13, 8, 5), float32]) */;
  %1343 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1344 = %1342.1;
  %1345 = %1343.0;
  (%1344, %1345)
}

def @func_18685(%var_18680: Tensor[(360, 16), bool]) -> Tensor[(360, 16), bool] {
  %1346 = @func_6418() /* ty=(Tensor[(360, 16), bool], Tensor[(13, 8, 5), float64]) */;
  %1347 = %1346.0;
  %1348 = cast(%var_18680, dtype="bool") /* ty=Tensor[(360, 16), bool] */;
  %1349 = shape_of(%1347, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1350 = cast(%1347, dtype="bool") /* ty=Tensor[(360, 16), bool] */;
  %1351 = dyn.reshape(%1348, %1349, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  greater(%1350, %1351) /* ty=Tensor[(360, 16), bool] */
}

def @func_6925() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %1352 = @func_5882() /* ty=Tensor[(13, 8, 5), float64] */;
  %1353 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1352, %1353)
}

def @func_12604() -> (Tensor[(13, 8, 5), float64], Tensor[(8, 8, 6), float64], Tensor[(10, 3, 1), float32]) {
  %1354 = @func_9976() /* ty=(Tensor[(8, 8, 6), float64],) */;
  %1355 = @func_10252() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %1356 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
  %1357 = %1354.0;
  %1358 = %1355.0;
  (%1356, %1357, %1358)
}

def @func_5186() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %1359 = @func_3888() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %1360 = @func_3935() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %1361 = %1359.1;
  %1362 = %1360.1;
  (%1361, %1362)
}

def @func_10787(%var_10744: Tensor[(560), uint64], %var_10745: Tensor[(750), uint16]) -> (Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
  %1363 = @func_6633() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1364 = cast(%var_10744, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %1365 = cast(%var_10745, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %1366 = cast(meta[relay.Constant][66] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %1367 = cast(meta[relay.Constant][67] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %1368 = reshape(%1364, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %1369 = reshape(%1365, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %1370 = reshape(%1366, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %1371 = reshape(%1367, newshape=[70]) /* ty=Tensor[(70), uint64] */;
  %1372 = @func_3597(%1368, %1369, %1370, %1371) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(7, 2, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64]) */;
  %1373 = @func_9349() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1374 = @func_8801() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %1375 = %1363.0;
  %1376 = %1372.3;
  %1377 = %1373.0;
  %1378 = %1374.1;
  (%1375, %1376, %var_10744, %var_10745, meta[relay.Constant][66] /* ty=Tensor[(130), float64] */, meta[relay.Constant][67] /* ty=Tensor[(70), uint64] */, %1377, %1378)
}

def @func_4178() -> (Tensor[(13, 8, 5), float64],) {
  %1379 = @func_3476() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1379,)
}

def @func_8992() -> (Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], int32) {
  %1380 = @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
  %1381 = %1380.1;
  %1382 = cast(%1381, dtype="uint16") /* ty=Tensor[(5, 10, 15), uint16] */;
  %1383 = reshape(%1382, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %1384 = @func_3808(%1383) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %1385 = @func_7950() /* ty=(int32, Tensor[(13, 8, 5), float32]) */;
  %1386 = @func_6353() /* ty=Tensor[(13, 8, 5), float64] */;
  %1387 = %1384.2;
  %1388 = %1385.0;
  (%1386, %1381, %1387, %1388)
}

def @func_9638() -> (Tensor[(10, 3, 1), float32],) {
  %1389 = @func_6177() /* ty=Tensor[(10, 3, 1), float32] */;
  (%1389,)
}

def @func_11150() -> (Tensor[(10, 3, 1), float32],) {
  %1390 = @func_10252() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %1391 = %1390.0;
  (%1391,)
}

def @func_11666() -> (Tensor[(13, 8, 5), float64], Tensor[(360, 12), float64], Tensor[(360, 1), float32], int32) {
  %1392 = @func_10909() /* ty=(Tensor[(750), uint16], Tensor[(13, 8, 5), float64]) */;
  %1393 = @func_5736() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(70), uint64], Tensor[(360, 1), float32]) */;
  %1394 = %1393.2;
  %1395 = cast(%1394, dtype="float64") /* ty=Tensor[(360, 1), float64] */;
  %1396 = cast(meta[relay.Constant][68] /* ty=Tensor[(360, 12), float32] */, dtype="float64") /* ty=Tensor[(360, 12), float64] */;
  %1397 = cast(%1394, dtype="float32") /* ty=Tensor[(360, 1), float32] */;
  %1398 = @func_4521() /* ty=(int32,) */;
  %1399 = %1392.1;
  %1400 = mod(%1395, %1396) /* ty=Tensor[(360, 12), float64] */;
  %1401 = sin(%1397) /* ty=Tensor[(360, 1), float32] */;
  %1402 = %1398.0;
  (%1399, %1400, %1401, %1402)
}

def @func_9511() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
  %1403 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1404 = @func_5827() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1405 = %1403.0;
  %1406 = %1404.0;
  (%1405, %1406)
}

def @func_7707(%var_7701: Tensor[(16, 8, 1), float64]) -> (Tensor[(16, 8, 1), float64], Tensor[(15, 6, 5), bool], Tensor[(450), uint8]) {
  %1407 = cast(%var_7701, dtype="float64") /* ty=Tensor[(16, 8, 1), float64] */;
  %1408 = cast(meta[relay.Constant][69] /* ty=Tensor[(450), uint8] */, dtype="uint8") /* ty=Tensor[(450), uint8] */;
  %1409 = reshape(%1408, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), uint8] */;
  %1410 = @func_1590(%1409) /* ty=(Tensor[(15, 6, 5), bool],) */;
  %1411 = cos(%1407) /* ty=Tensor[(16, 8, 1), float64] */;
  %1412 = %1410.0;
  (%1411, %1412, meta[relay.Constant][69] /* ty=Tensor[(450), uint8] */)
}

def @func_18056(%var_18029: Tensor[(70), uint64]) -> (Tensor[(7, 2, 5), bool], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 70), bool], Tensor[(10, 3, 70), float64]) {
  %1413 = cast(%var_18029, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %1414 = cast(%var_18029, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %1415 = reshape(%1413, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
  %1416 = reshape(%1414, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
  %1417 = @func_1769(%1415, %1416) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) */;
  %1418 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1419 = @func_6177() /* ty=Tensor[(10, 3, 1), float32] */;
  %1420 = cast(%1419, dtype="uint64") /* ty=Tensor[(10, 3, 1), uint64] */;
  %1421 = cast(%var_18029, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %1422 = maximum(%1420, %1421) /* ty=Tensor[(10, 3, 70), uint64] */;
  %1423 = cast(%1422, dtype="float64") /* ty=Tensor[(10, 3, 70), float64] */;
  %1424 = sinh(%1423) /* ty=Tensor[(10, 3, 70), float64] */;
  %1425 = cast(%1424, dtype="bool") /* ty=Tensor[(10, 3, 70), bool] */;
  %1426 = cast(%1419, dtype="bool") /* ty=Tensor[(10, 3, 1), bool] */;
  %1427 = cast(%1424, dtype="float64") /* ty=Tensor[(10, 3, 70), float64] */;
  %1428 = cast(%var_18029, dtype="float64") /* ty=Tensor[(70), float64] */;
  %1429 = %1417.1;
  %1430 = %1418.0;
  %1431 = logical_and(%1425, %1426) /* ty=Tensor[(10, 3, 70), bool] */;
  %1432 = floor_divide(%1427, %1428) /* ty=Tensor[(10, 3, 70), float64] */;
  (%1429, %1430, %1431, %1432)
}

def @func_5736() -> (Tensor[(13, 8, 5), float32], Tensor[(70), uint64], Tensor[(360, 1), float32]) {
  %1433 = cast(meta[relay.Constant][70] /* ty=Tensor[(360, 1), float32] */, dtype="float32") /* ty=Tensor[(360, 1), float32] */;
  %1434 = cast(meta[relay.Constant][70] /* ty=Tensor[(360, 1), float32] */, dtype="float32") /* ty=Tensor[(360, 1), float32] */;
  %1435 = reshape(%1433, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %1436 = reshape(%1434, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %1437 = @func_2805(%1435, %1436) /* ty=(Tensor[(5, 9, 8), float32], Tensor[(7, 2, 5), float64], Tensor[(70), uint64]) */;
  %1438 = @func_5099() /* ty=Tensor[(13, 8, 5), float32] */;
  %1439 = %1437.2;
  (%1438, %1439, meta[relay.Constant][70] /* ty=Tensor[(360, 1), float32] */)
}

def @func_6633() -> (Tensor[(13, 8, 5), float64],) {
  %1440 = @func_5040() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1441 = %1440.0;
  (%1441,)
}

def @func_8151() -> (Tensor[(13, 8, 5), float32],) {
  %1442 = @func_4560() /* ty=(int32, Tensor[(13, 8, 5), float32]) */;
  %1443 = %1442.1;
  (%1443,)
}

def @func_18160() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(10, ?, 4), float64], Tensor[(1200), int8], Tensor[(40), float64]) {
  %1444 = @func_14039() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1445 = @func_5287() /* ty=(int32, Tensor[(13, 8, 5), float64]) */;
  %1446 = cast(meta[relay.Constant][71] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %1447 = cast(meta[relay.Constant][72] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %1448 = cast(meta[relay.Constant][71] /* ty=Tensor[(1200), int8] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %1449 = reshape(%1446, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int8] */;
  %1450 = reshape(%1447, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %1451 = reshape(%1448, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), bool] */;
  %1452 = @func_363(%1449, %1450, %1451) /* ty=(Tensor[(40), float64], Tensor[(10, ?, 4), float64], Tensor[(10, ?, 4), int8], Tensor[(5, 16, 15), bool], Tensor[(5, 16, 15), uint64]) */;
  %1453 = %1444.0;
  %1454 = %1445.1;
  %1455 = %1452.1;
  (%1453, %1454, %1455, meta[relay.Constant][71] /* ty=Tensor[(1200), int8] */, meta[relay.Constant][72] /* ty=Tensor[(40), float64] */)
}

def @func_4054() -> (Tensor[(13, 8, 5), float64],) {
  %1456 = @func_3888() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %1457 = %1456.0;
  (%1457,)
}

def @func_3597(%var_3569: Tensor[(560), uint64], %var_3570: Tensor[(750), uint16], %var_3575: Tensor[(130), float64], %var_3589: Tensor[(70), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(7, 2, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64]) {
  %1458 = cast(%var_3569, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %1459 = cast(%var_3569, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %1460 = cast(%var_3570, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %1461 = reshape(%1458, newshape=[14, 4, 10]) /* ty=Tensor[(14, 4, 10), uint64] */;
  %1462 = reshape(%1459, newshape=[14, 4, 10]) /* ty=Tensor[(14, 4, 10), uint64] */;
  %1463 = reshape(%1460, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %1464 = @func_3147(%1461, %1462, %1463) /* ty=(Tensor[(14, 4, 10), uint64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %1465 = cast(%var_3575, dtype="float64") /* ty=Tensor[(130), float64] */;
  %1466 = reshape(%1465, newshape=[5, 13, 2]) /* ty=Tensor[(5, 13, 2), float64] */;
  %1467 = cast(%var_3589, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %1468 = cast(%var_3589, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %1469 = reshape(%1467, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
  %1470 = reshape(%1468, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
  %1471 = @func_1769(%1469, %1470) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) */;
  %1472 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
  %1473 = %1464.1;
  %1474 = @func_478(%1466) /* ty=Tensor[(5, 13, 2), float64] */;
  %1475 = %1471.2;
  %1476 = @func_3476() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1472, %1473, %var_3569, %var_3570, %1474, %var_3575, %1475, %var_3589, %1476)
}

def @func_11830() -> (Tensor[(13, 8, 5), float64],) {
  %1477 = @func_4405() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1477,)
}

def @func_12309() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %1478 = @func_4760() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %1479 = @func_5186() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %1480 = %1478.3;
  %1481 = %1479.1;
  (%1480, %1481)
}

def @func_11026() -> Tensor[(7, 11, 15), float64] {
  %1482 = cast(meta[relay.Constant][73] /* ty=Tensor[(7, 11, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 11, 15), float64] */;
  asin(%1482) /* ty=Tensor[(7, 11, 15), float64] */
}

def @func_15882() -> Tensor[(13, 8, 5), float64] {
  %1483 = @func_12408() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %1483.0
}

def @func_5419(%var_5410: Tensor[(1200), int8], %var_5411: Tensor[(40, 1), float64]) -> (Tensor[(13, 8, 5), float64], Tensor[(10, ?, 4), float64], Tensor[(1200), int8], Tensor[(40, 1), float64]) {
  %1484 = @func_3970() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1485 = cast(%var_5410, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %1486 = cast(%var_5411, dtype="float64") /* ty=Tensor[(40, 1), float64] */;
  %1487 = cast(%var_5410, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %1488 = reshape(%1485, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int8] */;
  %1489 = reshape(%1486, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %1490 = reshape(%1487, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), bool] */;
  %1491 = @func_363(%1488, %1489, %1490) /* ty=(Tensor[(40), float64], Tensor[(10, ?, 4), float64], Tensor[(10, ?, 4), int8], Tensor[(5, 16, 15), bool], Tensor[(5, 16, 15), uint64]) */;
  %1492 = %1484.0;
  %1493 = %1491.1;
  (%1492, %1493, %var_5410, %var_5411)
}

def @func_9042(%var_9030: float32, %var_9031: Tensor[(1, 16, 11), float32]) -> (Tensor[(1, 16, 11), bool], Tensor[(13, 8, 5), float64]) {
  %1494 = cast(%var_9030, dtype="bool") /* ty=bool */;
  %1495 = cast(%var_9031, dtype="bool") /* ty=Tensor[(1, 16, 11), bool] */;
  %1496 = @func_6338() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1497 = greater_equal(%1494, %1495) /* ty=Tensor[(1, 16, 11), bool] */;
  %1498 = %1496.0;
  (%1497, %1498)
}

def @func_11217() -> Tensor[(13, 8, 5), float64] {
  %1499 = @func_8738() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1499.0
}

def @func_6177() -> Tensor[(10, 3, 1), float32] {
  %1500 = @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
  %1500.5
}

def @func_9404(%var_9390: Tensor[(750), uint16]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) {
  %1501 = @func_3970() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1502 = @func_9349() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1503 = cast(%var_9390, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %1504 = reshape(%1503, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), uint16] */;
  %1505 = @func_2171(%1504) /* ty=(Tensor[(5, 10, 15), bool],) */;
  %1506 = @func_6989() /* ty=Tensor[(13, 8, 5), float64] */;
  %1507 = %1501.0;
  %1508 = %1502.0;
  %1509 = %1505.0;
  (%1506, %1507, %1508, %1509, %var_9390)
}

def @func_10395() -> (Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) {
  %1510 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1511 = @func_9638() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %1512 = %1511.0;
  %1513 = cast(%1512, dtype="float32") /* ty=Tensor[(10, 3, 1), float32] */;
  %1514 = %1510.0;
  %1515 = sigmoid(%1513) /* ty=Tensor[(10, 3, 1), float32] */;
  (%1514, %1515)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7018() -> Tensor[(13, 8, 5), float64] {
  @func_7016() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_16492(%var_16483: Tensor[(11, 13, 16), int32]) -> Tensor[(11, 13, 16), bool] {
  %0 = cast(%var_16483, dtype="bool") /* ty=Tensor[(11, 13, 16), bool] */;
  %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(11, 13, 16), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 13, 16), int32] */, dtype="bool") /* ty=Tensor[(11, 13, 16), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%2, %3) /* ty=Tensor[(11, 13, 16), bool] */
}

def @func_6249(%var_6247: Tensor[(5, 5, 9), float64]) -> (Tensor[(5, 5, 9), float64], int32, Tensor[(13, 8, 5), float64], Tensor[(5, 5, 9), float64], Tensor[(13, 8, 5), float64]) {
  @func_6246(%var_6247) /* ty=(Tensor[(5, 5, 9), float64], int32, Tensor[(13, 8, 5), float64], Tensor[(5, 5, 9), float64], Tensor[(13, 8, 5), float64]) */
}

def @func_13587() -> Tensor[(13, 8, 5), float32] {
  @func_13585() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_14740() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(13, 8, 5), float64]) {
  %12 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(13, 8, 5), float64]) {
    %4 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(750), uint16] */, dtype="uint16") /* ty=Tensor[(750), uint16] */;
    %6 = reshape(%5, newshape=[750]) /* ty=Tensor[(750), uint16] */;
    %7 = @func_3808(%6) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
    %8 = @func_14234() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
    %9 = %4.0;
    %10 = %7.0;
    %11 = %8.0;
    (%9, %10, meta[relay.Constant][1] /* ty=Tensor[(750), uint16] */, %11)
  };
  %12() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(13, 8, 5), float64]) */
}

def @func_5883() -> Tensor[(13, 8, 5), float64] {
  %14 = fn () -> Tensor[(13, 8, 5), float64] {
    %13 = @func_3908() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %13.0
  };
  %14() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_6420() -> (Tensor[(360, 16), bool], Tensor[(13, 8, 5), float64]) {
  @func_6418() /* ty=(Tensor[(360, 16), bool], Tensor[(13, 8, 5), float64]) */
}

def @func_5649() -> Tensor[(13, 8, 5), float64] {
  %16 = fn () -> Tensor[(13, 8, 5), float64] {
    %15 = @func_4569() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %15.0
  };
  %16() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_11275() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %21 = fn () -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
    %17 = @func_4560() /* ty=(int32, Tensor[(13, 8, 5), float32]) */;
    %18 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %19 = %17.1;
    %20 = %18.0;
    (%19, %20)
  };
  %21() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */
}

def @func_17961() -> (Tensor[(750), uint16], Tensor[(10, 3, 1), float32]) {
  %22 = @func_8934() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(560), uint64]) */;
  %23 = @func_7759() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %24 = %22.2;
  %25 = %23.0;
  (%24, %25)
}

def @func_8519(%var_8518: Tensor[(360), int32]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(4, 10, 9), uint16], Tensor[(360), int32], Tensor[(13, 8, 5), bool]) {
  %38 = fn (%var_8486: Tensor[(360), int32]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(4, 10, 9), uint16], Tensor[(360), int32], Tensor[(13, 8, 5), bool]) {
    %26 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %27 = @func_5882() /* ty=Tensor[(13, 8, 5), float64] */;
    %28 = cast(%27, dtype="float64") /* ty=Tensor[(13, 8, 5), float64] */;
    %29 = cast(%var_8486, dtype="int32") /* ty=Tensor[(360), int32] */;
    %30 = reshape(%29, newshape=[4, 10, 9]) /* ty=Tensor[(4, 10, 9), int32] */;
    %31 = cast(%27, dtype="float64") /* ty=Tensor[(13, 8, 5), float64] */;
    %32 = reshape(%31, newshape=[13, 8, 5]) /* ty=Tensor[(13, 8, 5), float64] */;
    %33 = @func_5318(%32) /* ty=(Tensor[(13, 8, 5), bool], Tensor[(13, 8, 5), float64]) */;
    %34 = %26.0;
    %35 = tan(%28) /* ty=Tensor[(13, 8, 5), float64] */;
    %36 = @func_7666(%30) /* ty=Tensor[(4, 10, 9), uint16] */;
    %37 = %33.0;
    (%34, %35, %36, %var_8486, %37)
  };
  %38(%var_8518) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(4, 10, 9), uint16], Tensor[(360), int32], Tensor[(13, 8, 5), bool]) */
}

def @func_7914(%var_7913: Tensor[(560), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(750), uint16], Tensor[(70), float64], Tensor[(560), uint64], Tensor[(10, 3, 1), int32], int32) {
  %54 = fn (%var_7860: Tensor[(560), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(750), uint16], Tensor[(70), float64], Tensor[(560), uint64], Tensor[(10, 3, 1), int32], int32) {
    %39 = @func_6925() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
    %40 = @func_5004() /* ty=Tensor[(750), uint16] */;
    %41 = cast(%40, dtype="uint16") /* ty=Tensor[(750), uint16] */;
    %42 = reshape(%41, newshape=[750]) /* ty=Tensor[(750), uint16] */;
    %43 = @func_3808(%42) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
    %44 = cast(%var_7860, dtype="uint64") /* ty=Tensor[(560), uint64] */;
    %45 = reshape(%44, newshape=[560]) /* ty=Tensor[(560), uint64] */;
    %46 = @func_6837(%45) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(70), float64]) */;
    %47 = cast(-4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %48 = reshape(%47, newshape=[]) /* ty=int32 */;
    %49 = @func_4405() /* ty=Tensor[(13, 8, 5), float64] */;
    %50 = %39.0;
    %51 = %43.2;
    %52 = %46.7;
    %53 = @func_2489(%48) /* ty=Tensor[(10, 3, 1), int32] */;
    (%49, %50, %40, %51, %52, %var_7860, %53, -4 /* ty=int32 */)
  };
  %54(%var_7913) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(750), uint16], Tensor[(70), float64], Tensor[(560), uint64], Tensor[(10, 3, 1), int32], int32) */
}

def @func_14073() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) {
  %62 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) {
    %55 = @func_12408() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
    %56 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %57 = @func_9638() /* ty=(Tensor[(10, 3, 1), float32],) */;
    %58 = @func_6989() /* ty=Tensor[(13, 8, 5), float64] */;
    %59 = %55.0;
    %60 = %56.0;
    %61 = %57.0;
    (%58, %59, %60, %61)
  };
  %62() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */
}

def @func_10690() -> Tensor[(13, 8, 5), float32] {
  %64 = fn () -> Tensor[(13, 8, 5), float32] {
    %63 = @func_10395() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
    %63.0
  };
  %64() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_9714() -> Tensor[(10, 3, 1), float32] {
  %65 = @func_7759() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %65.0
}

def @func_18823(%var_18776: Tensor[(560), uint64], %var_18807: Tensor[(750, 1), uint16], %var_18808: Tensor[(13, 10), float64]) -> (Tensor[(13, 8, 5), float64], Tensor[(10, 3, 1), int32], Tensor[(560), uint64], Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(750, 1), uint16], Tensor[(13, 10), float64], Tensor[(70), uint64]) {
  %66 = @func_4178() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %67 = cast(%var_18776, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %68 = reshape(%67, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %69 = @func_7912(%68) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(750), uint16], Tensor[(70), float64], Tensor[(560), uint64], Tensor[(10, 3, 1), int32], int32) */;
  %70 = @func_12309() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %71 = cast(%var_18776, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %72 = cast(%var_18807, dtype="uint16") /* ty=Tensor[(750, 1), uint16] */;
  %73 = cast(%var_18808, dtype="float64") /* ty=Tensor[(13, 10), float64] */;
  %74 = cast(meta[relay.Constant][2] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %75 = reshape(%71, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %76 = reshape(%72, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %77 = reshape(%73, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %78 = reshape(%74, newshape=[70]) /* ty=Tensor[(70), uint64] */;
  %79 = @func_3597(%75, %76, %77, %78) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(7, 2, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64]) */;
  %80 = %66.0;
  %81 = %69.6;
  %82 = %70.1;
  %83 = %79.7;
  (%80, %81, %var_18776, %82, %83, %var_18807, %var_18808, meta[relay.Constant][2] /* ty=Tensor[(70), uint64] */)
}

def @func_9418() -> (Tensor[(13, 8, 5), float64],) {
  %85 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %84 = @func_5648() /* ty=Tensor[(13, 8, 5), float64] */;
    (%84,)
  };
  %85() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_3837() -> Tensor[(13, 8, 5), float32] {
  @func_3835() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_19270() -> Tensor[(10, 3, 1), float32] {
  @func_12892() /* ty=Tensor[(10, 3, 1), float32] */
}

def @func_11411(%var_11409: Tensor[(7, 9, 13), float64]) -> (Tensor[(7, 9, 13), float64],) {
  @func_11408(%var_11409) /* ty=(Tensor[(7, 9, 13), float64],) */
}

def @func_13119(%var_13118: Tensor[(270), float32]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(270), float32], Tensor[(10, 3, 1), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], int32) {
  %99 = fn (%var_13024: Tensor[(270), float32]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(270), float32], Tensor[(10, 3, 1), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], int32) {
    %86 = @func_9417() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %87 = cast(%var_13024, dtype="float32") /* ty=Tensor[(270), float32] */;
    %88 = reshape(%87, newshape=[270]) /* ty=Tensor[(270), float32] */;
    %89 = @func_6561(%88) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) */;
    %90 = @func_5066() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %91 = @func_4521() /* ty=(int32,) */;
    %92 = %86.0;
    %93 = %89.0;
    %94 = @func_10724() /* ty=Tensor[(10, 3, 1), float32] */;
    %95 = @func_10103() /* ty=Tensor[(10, 3, 1), float32] */;
    %96 = @func_6353() /* ty=Tensor[(13, 8, 5), float64] */;
    %97 = %90.0;
    %98 = %91.0;
    (%92, %93, %var_13024, %94, %95, %96, %97, %98)
  };
  %99(%var_13118) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(270), float32], Tensor[(10, 3, 1), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], int32) */
}

def @func_18828(%var_18825: Tensor[(560), uint64], %var_18826: Tensor[(750, 1), uint16], %var_18827: Tensor[(13, 10), float64]) -> (Tensor[(13, 8, 5), float64], Tensor[(10, 3, 1), int32], Tensor[(560), uint64], Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(750, 1), uint16], Tensor[(13, 10), float64], Tensor[(70), uint64]) {
  @func_18823(%var_18825, %var_18826, %var_18827) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(10, 3, 1), int32], Tensor[(560), uint64], Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(750, 1), uint16], Tensor[(13, 10), float64], Tensor[(70), uint64]) */
}

def @func_15883() -> Tensor[(13, 8, 5), float64] {
  %101 = fn () -> Tensor[(13, 8, 5), float64] {
    %100 = @func_12408() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
    %100.0
  };
  %101() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_367(%var_364: Tensor[(5, 16, 15), int8], %var_365: Tensor[(40), float64], %var_366: Tensor[(5, 16, 15), bool]) -> (Tensor[(40), float64], Tensor[(10, ?, 4), float64], Tensor[(10, ?, 4), int8], Tensor[(5, 16, 15), bool], Tensor[(5, 16, 15), uint64]) {
  %129 = fn (%var_285: Tensor[(5, 16, 15), int8], %var_292: Tensor[(40), float64], %var_351: Tensor[(5, 16, 15), bool]) -> (Tensor[(40), float64], Tensor[(10, ?, 4), float64], Tensor[(10, ?, 4), int8], Tensor[(5, 16, 15), bool], Tensor[(5, 16, 15), uint64]) {
    %102 = cast(%var_292, dtype="float64") /* ty=Tensor[(40), float64] */;
    %103 = reshape(%102, newshape=[10, 1, 4]) /* ty=Tensor[(10, 1, 4), float64] */;
    %104 = @func_56(%103) /* ty=(Tensor[(10, ?, 4), int8],) */;
    %105 = %104.0;
    %106 = cast(%105, dtype="float64") /* ty=Tensor[(10, ?, 4), float64] */;
    %107 = cast(%105, dtype="float64") /* ty=Tensor[(10, ?, 4), float64] */;
    %108 = reshape(%107, newshape=[10, 1, 4]) /* ty=Tensor[(10, 1, 4), float64] */;
    %109 = @func_56(%108) /* ty=(Tensor[(10, ?, 4), int8],) */;
    %110 = cast(%var_285, dtype="bool") /* ty=Tensor[(5, 16, 15), bool] */;
    %111 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(5, 16, 15), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %112 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 16, 15), int8] */, dtype="bool") /* ty=Tensor[(5, 16, 15), bool] */;
    %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %114 = greater(%112, %113) /* ty=Tensor[(5, 16, 15), bool] */;
    %115 = cast(%114, dtype="float64") /* ty=Tensor[(5, 16, 15), float64] */;
    %116 = acos(%115) /* ty=Tensor[(5, 16, 15), float64] */;
    %117 = cast(%114, dtype="bool") /* ty=Tensor[(5, 16, 15), bool] */;
    %118 = shape_of(%116, dtype="int32") /* ty=Tensor[(3), int32] */;
    %119 = cast(%116, dtype="bool") /* ty=Tensor[(5, 16, 15), bool] */;
    %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %121 = cast(%var_351, dtype="uint64") /* ty=Tensor[(5, 16, 15), uint64] */;
    %122 = shape_of(%114, dtype="int32") /* ty=Tensor[(3), int32] */;
    %123 = cast(%114, dtype="uint64") /* ty=Tensor[(5, 16, 15), uint64] */;
    %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %125 = cosh(%106) /* ty=Tensor[(10, ?, 4), float64] */;
    %126 = %109.0;
    %127 = not_equal(%119, %120) /* ty=Tensor[(5, 16, 15), bool] */;
    %128 = minimum(%123, %124) /* ty=Tensor[(5, 16, 15), uint64] */;
    (%var_292, %125, %126, %127, %128)
  };
  %129(%var_364, %var_365, %var_366) /* ty=(Tensor[(40), float64], Tensor[(10, ?, 4), float64], Tensor[(10, ?, 4), int8], Tensor[(5, 16, 15), bool], Tensor[(5, 16, 15), uint64]) */
}

def @func_10252() -> (Tensor[(10, 3, 1), float32],) {
  %130 = @func_7759() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %131 = %130.0;
  (%131,)
}

def @func_18423() -> (Tensor[(13, 8, 5), float64],) {
  %134 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %132 = @func_6338() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %133 = %132.0;
    (%133,)
  };
  %134() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_19272() -> Tensor[(10, 3, 1), float32] {
  @func_19270() /* ty=Tensor[(10, 3, 1), float32] */
}

def @func_3597(%var_3569: Tensor[(560), uint64], %var_3570: Tensor[(750), uint16], %var_3575: Tensor[(130), float64], %var_3589: Tensor[(70), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(7, 2, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64]) {
  %135 = cast(%var_3569, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %136 = cast(%var_3569, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %137 = cast(%var_3570, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %138 = reshape(%135, newshape=[14, 4, 10]) /* ty=Tensor[(14, 4, 10), uint64] */;
  %139 = reshape(%136, newshape=[14, 4, 10]) /* ty=Tensor[(14, 4, 10), uint64] */;
  %140 = reshape(%137, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %141 = @func_3147(%138, %139, %140) /* ty=(Tensor[(14, 4, 10), uint64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %142 = cast(%var_3575, dtype="float64") /* ty=Tensor[(130), float64] */;
  %143 = reshape(%142, newshape=[5, 13, 2]) /* ty=Tensor[(5, 13, 2), float64] */;
  %144 = cast(%var_3589, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %145 = cast(%var_3589, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %146 = reshape(%144, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
  %147 = reshape(%145, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
  %148 = @func_1769(%146, %147) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) */;
  %149 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
  %150 = %141.1;
  %151 = @func_478(%143) /* ty=Tensor[(5, 13, 2), float64] */;
  %152 = %148.2;
  %153 = @func_3476() /* ty=Tensor[(13, 8, 5), float64] */;
  (%149, %150, %var_3569, %var_3570, %151, %var_3575, %152, %var_3589, %153)
}

def @func_9587() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  %158 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
    %154 = @func_9170() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %155 = @func_9511() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
    %156 = %154.1;
    %157 = %155.1;
    (%156, %157)
  };
  %158() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */
}

def @func_12863() -> (Tensor[(7, 11, 15), float64],) {
  %159 = @func_11026() /* ty=Tensor[(7, 11, 15), float64] */;
  (%159,)
}

def @func_4242(%var_4194: Tensor[(70), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(5, 13, 2), float64], Tensor[(13, 8, 5), float64]) {
  %160 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %161 = cast(meta[relay.Constant][4] /* ty=Tensor[(560), uint64] */, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %162 = cast(meta[relay.Constant][5] /* ty=Tensor[(750), uint16] */, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %163 = cast(meta[relay.Constant][6] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %164 = cast(%var_4194, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %165 = reshape(%161, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %166 = reshape(%162, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %167 = reshape(%163, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %168 = reshape(%164, newshape=[70]) /* ty=Tensor[(70), uint64] */;
  %169 = @func_3597(%165, %166, %167, %168) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(7, 2, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64]) */;
  %170 = cast(meta[relay.Constant][6] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %171 = reshape(%170, newshape=[5, 13, 2]) /* ty=Tensor[(5, 13, 2), float64] */;
  %172 = @func_3613() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %173 = %160.0;
  %174 = %169.0;
  %175 = @func_478(%171) /* ty=Tensor[(5, 13, 2), float64] */;
  %176 = %172.0;
  (%173, %174, meta[relay.Constant][4] /* ty=Tensor[(560), uint64] */, meta[relay.Constant][5] /* ty=Tensor[(750), uint16] */, meta[relay.Constant][6] /* ty=Tensor[(130), float64] */, %var_4194, %175, %176)
}

def @func_14644() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  @func_14642() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */
}

def @func_12581() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %177 = @func_9170() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %178 = %177.1;
  %179 = @func_5648() /* ty=Tensor[(13, 8, 5), float64] */;
  (%178, %179)
}

def @func_15262(%var_15261: Tensor[(180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(180), uint8], Tensor[(13, 8, 5), float32]) {
  %189 = fn (%var_15251: Tensor[(180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(180), uint8], Tensor[(13, 8, 5), float32]) {
    %180 = @func_15092() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
    %181 = cast(%var_15251, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %182 = reshape(%181, newshape=[180]) /* ty=Tensor[(180), uint8] */;
    %183 = @func_10334(%182) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 13, 2), float64], Tensor[(180), uint8], Tensor[(1200, 1), int8], Tensor[(13, 8, 5), float64]) */;
    %184 = @func_14033() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %185 = %180.0;
    %186 = @func_11217() /* ty=Tensor[(13, 8, 5), float64] */;
    %187 = %183.4;
    %188 = %184.0;
    (%185, %186, %187, %var_15251, %188)
  };
  %189(%var_15261) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(180), uint8], Tensor[(13, 8, 5), float32]) */
}

def @func_17883() -> Tensor[(13, 8, 5), float64] {
  %190 = @func_5186() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %190.1
}

def @func_8738() -> (Tensor[(13, 8, 5), float64],) {
  %191 = @func_4405() /* ty=Tensor[(13, 8, 5), float64] */;
  (%191,)
}

def @func_8740() -> (Tensor[(13, 8, 5), float64],) {
  @func_8738() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_5186() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %192 = @func_3888() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %193 = @func_3935() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %194 = %192.1;
  %195 = %193.1;
  (%194, %195)
}

def @func_10060() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(15, 6, 5), bool], Tensor[(450), uint8]) {
  %196 = @func_5287() /* ty=(int32, Tensor[(13, 8, 5), float64]) */;
  %197 = @func_7609() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %198 = cast(meta[relay.Constant][7] /* ty=Tensor[(450), uint8] */, dtype="uint8") /* ty=Tensor[(450), uint8] */;
  %199 = reshape(%198, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), uint8] */;
  %200 = @func_1590(%199) /* ty=(Tensor[(15, 6, 5), bool],) */;
  %201 = %196.1;
  %202 = %197.0;
  %203 = %200.0;
  (%201, %202, %203, meta[relay.Constant][7] /* ty=Tensor[(450), uint8] */)
}

def @func_15027(%var_15025: Tensor[(10, 3, 9), float32], %var_15026: Tensor[(6, 180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(10, 3, 9), int64], Tensor[(3, 60), uint8], Tensor[(6, 180), bool], Tensor[(13, 8, 5), float32]) {
  @func_15023(%var_15025, %var_15026) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(10, 3, 9), int64], Tensor[(3, 60), uint8], Tensor[(6, 180), bool], Tensor[(13, 8, 5), float32]) */
}

def @func_18340() -> Tensor[(5, 10, 15), bool] {
  %204 = @func_4600() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %204.1
}

def @func_6563(%var_6562: Tensor[(270), float32]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) {
  %212 = fn (%var_6551: Tensor[(270), float32]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) {
    %205 = @func_6438() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %206 = @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %207 = cast(%var_6551, dtype="float32") /* ty=Tensor[(270), float32] */;
    %208 = reshape(%207, newshape=[5, 6, 9]) /* ty=Tensor[(5, 6, 9), float32] */;
    %209 = %205.0;
    %210 = %206.0;
    %211 = @func_6381(%208) /* ty=Tensor[(5, 6, 9), float32] */;
    (%209, %210, %211, %var_6551)
  };
  %212(%var_6562) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) */
}

def @func_11598() -> Tensor[(5, 10, 15), bool] {
  %213 = @func_8293() /* ty=(Tensor[(5, 10, 15), bool],) */;
  %213.0
}

def @func_11667() -> (Tensor[(13, 8, 5), float64], Tensor[(360, 12), float64], Tensor[(360, 1), float32], int32) {
  %225 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(360, 12), float64], Tensor[(360, 1), float32], int32) {
    %214 = @func_10909() /* ty=(Tensor[(750), uint16], Tensor[(13, 8, 5), float64]) */;
    %215 = @func_5736() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(70), uint64], Tensor[(360, 1), float32]) */;
    %216 = %215.2;
    %217 = cast(%216, dtype="float64") /* ty=Tensor[(360, 1), float64] */;
    %218 = cast(meta[relay.Constant][8] /* ty=Tensor[(360, 12), float32] */, dtype="float64") /* ty=Tensor[(360, 12), float64] */;
    %219 = cast(%216, dtype="float32") /* ty=Tensor[(360, 1), float32] */;
    %220 = @func_4521() /* ty=(int32,) */;
    %221 = %214.1;
    %222 = mod(%217, %218) /* ty=Tensor[(360, 12), float64] */;
    %223 = sin(%219) /* ty=Tensor[(360, 1), float32] */;
    %224 = %220.0;
    (%221, %222, %223, %224)
  };
  %225() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(360, 12), float64], Tensor[(360, 1), float32], int32) */
}

def @func_18246(%var_18244: Tensor[(180), uint8], %var_18245: Tensor[(270), float32]) -> (Tensor[(13, 8, 5), float64], Tensor[(10, ?, 4), int8], Tensor[(180), uint8], Tensor[(300, 4), int8], int32, Tensor[(270), float32]) {
  %240 = fn (%var_18228: Tensor[(180), uint8], %var_18234: Tensor[(270), float32]) -> (Tensor[(13, 8, 5), float64], Tensor[(10, ?, 4), int8], Tensor[(180), uint8], Tensor[(300, 4), int8], int32, Tensor[(270), float32]) {
    %226 = @func_16824() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(225), float64]) */;
    %227 = cast(%var_18228, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %228 = cast(%var_18228, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %229 = cast(meta[relay.Constant][9] /* ty=Tensor[(300, 4), int8] */, dtype="int8") /* ty=Tensor[(300, 4), int8] */;
    %230 = reshape(%227, newshape=[10, 2, 9]) /* ty=Tensor[(10, 2, 9), uint8] */;
    %231 = reshape(%228, newshape=[10, 2, 9]) /* ty=Tensor[(10, 2, 9), uint8] */;
    %232 = reshape(%229, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
    %233 = @func_682(%230, %231, %232) /* ty=(Tensor[(10, 2, 9), bool], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(10, ?, 4), int8], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(1200), int8], Tensor[(5, 13, 2), float64]) */;
    %234 = cast(%var_18234, dtype="float32") /* ty=Tensor[(270), float32] */;
    %235 = reshape(%234, newshape=[270]) /* ty=Tensor[(270), float32] */;
    %236 = @func_8696(%235) /* ty=(int32, Tensor[(5, 6, 9), float32], Tensor[(270), float32]) */;
    %237 = %226.0;
    %238 = %233.3;
    %239 = %236.0;
    (%237, %238, %var_18228, meta[relay.Constant][9] /* ty=Tensor[(300, 4), int8] */, %239, %var_18234)
  };
  %240(%var_18244, %var_18245) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(10, ?, 4), int8], Tensor[(180), uint8], Tensor[(300, 4), int8], int32, Tensor[(270), float32]) */
}

def @func_5068() -> (Tensor[(13, 8, 5), float32],) {
  @func_5066() /* ty=(Tensor[(13, 8, 5), float32],) */
}

def @func_8078() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(360), float32]) {
  %248 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(360), float32]) {
    %241 = @func_6633() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %242 = cast(meta[relay.Constant][10] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %243 = reshape(%242, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
    %244 = @func_4307(%243) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 9, 8), float32], Tensor[(6, 60), float32], Tensor[(13, 8, 5), float64]) */;
    %245 = %241.0;
    %246 = @func_3771() /* ty=Tensor[(13, 8, 5), float32] */;
    %247 = %244.0;
    (%245, %246, %247, meta[relay.Constant][10] /* ty=Tensor[(360), float32] */)
  };
  %248() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(360), float32]) */
}

def @func_14274() -> Tensor[(10, 3, 1), float32] {
  %249 = @func_14072() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
  %249.3
}

def @func_17821() -> (Tensor[(13, 8, 5), float64],) {
  %252 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %250 = @func_7609() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %251 = %250.0;
    (%251,)
  };
  %252() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_19549() -> (Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64]) {
  %253 = @func_8151() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %254 = @func_18468() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(270), float32], Tensor[(1080), uint8], Tensor[(13, 8, 5), float64]) */;
  %255 = %253.0;
  %256 = @func_10724() /* ty=Tensor[(10, 3, 1), float32] */;
  %257 = %254.4;
  (%255, %256, %257)
}

def @func_19584(%var_19582: Tensor[(15, 9, 11), float64]) -> (Tensor[(15, 9, 11), float64], Tensor[(13, 8, 5), float32]) {
  @func_19581(%var_19582) /* ty=(Tensor[(15, 9, 11), float64], Tensor[(13, 8, 5), float32]) */
}

def @func_10243() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
  %261 = fn () -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
    %258 = @func_9170() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %259 = %258.0;
    %260 = @func_3835() /* ty=Tensor[(13, 8, 5), float32] */;
    (%259, %260)
  };
  %261() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */
}

def @func_19967(%var_19964: Tensor[(560), uint64], %var_19965: Tensor[(50, 15), uint16]) -> (Tensor[(13, 8, 5), float64], Tensor[(130), float64], Tensor[(560), uint64], Tensor[(50, 15), uint16]) {
  %262 = @func_10948() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %263 = cast(%var_19964, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %264 = cast(%var_19965, dtype="uint16") /* ty=Tensor[(50, 15), uint16] */;
  %265 = reshape(%263, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %266 = reshape(%264, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %267 = @func_15166(%265, %266) /* ty=(Tensor[(5, 13, 2), float64], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70, 1), uint64], Tensor[(10, 3, ?), int8]) */;
  %268 = %262.0;
  %269 = %267.3;
  (%268, %269, %var_19964, %var_19965)
}

def @func_7609() -> (Tensor[(13, 8, 5), float64],) {
  %270 = @func_5024() /* ty=Tensor[(13, 8, 5), float64] */;
  (%270,)
}

def @func_3716() -> (Tensor[(13, 8, 5), float32],) {
  %273 = fn () -> (Tensor[(13, 8, 5), float32],) {
    %271 = @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %272 = %271.0;
    (%272,)
  };
  %273() /* ty=(Tensor[(13, 8, 5), float32],) */
}

def @func_15350() -> (Tensor[(13, 8, 5), float32],) {
  %274 = @func_10242() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %275 = %274.1;
  (%275,)
}

def @func_13464(%var_13428: Tensor[(1200), int8]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(180), uint8], Tensor[(1200), int8]) {
  %276 = cast(meta[relay.Constant][11] /* ty=Tensor[(180), uint8] */, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %277 = cast(meta[relay.Constant][11] /* ty=Tensor[(180), uint8] */, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %278 = cast(%var_13428, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %279 = reshape(%276, newshape=[10, 2, 9]) /* ty=Tensor[(10, 2, 9), uint8] */;
  %280 = reshape(%277, newshape=[10, 2, 9]) /* ty=Tensor[(10, 2, 9), uint8] */;
  %281 = reshape(%278, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %282 = @func_682(%279, %280, %281) /* ty=(Tensor[(10, 2, 9), bool], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(10, ?, 4), int8], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(1200), int8], Tensor[(5, 13, 2), float64]) */;
  %283 = @func_5099() /* ty=Tensor[(13, 8, 5), float32] */;
  %284 = %282.7;
  (%283, %284, meta[relay.Constant][11] /* ty=Tensor[(180), uint8] */, %var_13428)
}

def @func_9511() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
  %285 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %286 = @func_5827() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %287 = %285.0;
  %288 = %286.0;
  (%287, %288)
}

def @func_10911() -> (Tensor[(750), uint16], Tensor[(13, 8, 5), float64]) {
  @func_10909() /* ty=(Tensor[(750), uint16], Tensor[(13, 8, 5), float64]) */
}

def @func_16846() -> (Tensor[(13, 8, 5), float64],) {
  %290 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %289 = @func_9548() /* ty=Tensor[(13, 8, 5), float64] */;
    (%289,)
  };
  %290() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_4130() -> (Tensor[(13, 8, 5), float32],) {
  %292 = fn () -> (Tensor[(13, 8, 5), float32],) {
    %291 = @func_3771() /* ty=Tensor[(13, 8, 5), float32] */;
    (%291,)
  };
  %292() /* ty=(Tensor[(13, 8, 5), float32],) */
}

def @func_13585() -> Tensor[(13, 8, 5), float32] {
  %293 = @func_12853() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(90, 2), uint8]) */;
  %293.0
}

def @func_7951() -> (int32, Tensor[(13, 8, 5), float32]) {
  %297 = fn () -> (int32, Tensor[(13, 8, 5), float32]) {
    %294 = @func_5287() /* ty=(int32, Tensor[(13, 8, 5), float64]) */;
    %295 = %294.0;
    %296 = @func_3835() /* ty=Tensor[(13, 8, 5), float32] */;
    (%295, %296)
  };
  %297() /* ty=(int32, Tensor[(13, 8, 5), float32]) */
}

def @func_3476() -> Tensor[(13, 8, 5), float64] {
  %298 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 8, 5), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 5), float64] */;
  erf(%298) /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_6381(%var_6374: Tensor[(5, 6, 9), float32]) -> Tensor[(5, 6, 9), float32] {
  %299 = cast(%var_6374, dtype="float32") /* ty=Tensor[(5, 6, 9), float32] */;
  rsqrt(%299) /* ty=Tensor[(5, 6, 9), float32] */
}

def @func_9513() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
  @func_9511() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */
}

def @func_1593(%var_1591: Tensor[(15, 6, 5), uint8]) -> (Tensor[(15, 6, 5), bool],) {
  @func_1590(%var_1591) /* ty=(Tensor[(15, 6, 5), bool],) */
}

def @func_10336(%var_10335: Tensor[(180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(5, 13, 2), float64], Tensor[(180), uint8], Tensor[(1200, 1), int8], Tensor[(13, 8, 5), float64]) {
  %311 = fn (%var_10315: Tensor[(180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(5, 13, 2), float64], Tensor[(180), uint8], Tensor[(1200, 1), int8], Tensor[(13, 8, 5), float64]) {
    %300 = cast(%var_10315, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %301 = cast(%var_10315, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %302 = cast(meta[relay.Constant][13] /* ty=Tensor[(1200, 1), int8] */, dtype="int8") /* ty=Tensor[(1200, 1), int8] */;
    %303 = reshape(%300, newshape=[10, 2, 9]) /* ty=Tensor[(10, 2, 9), uint8] */;
    %304 = reshape(%301, newshape=[10, 2, 9]) /* ty=Tensor[(10, 2, 9), uint8] */;
    %305 = reshape(%302, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
    %306 = @func_682(%303, %304, %305) /* ty=(Tensor[(10, 2, 9), bool], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(10, ?, 4), int8], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(1200), int8], Tensor[(5, 13, 2), float64]) */;
    %307 = @func_6925() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
    %308 = @func_3476() /* ty=Tensor[(13, 8, 5), float64] */;
    %309 = %306.1;
    %310 = %307.1;
    (%308, %309, %var_10315, meta[relay.Constant][13] /* ty=Tensor[(1200, 1), int8] */, %310)
  };
  %311(%var_10335) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 13, 2), float64], Tensor[(180), uint8], Tensor[(1200, 1), int8], Tensor[(13, 8, 5), float64]) */
}

def @func_9539(%var_9537: Tensor[(12, 12, 3), int16]) -> (Tensor[(12, 12, 3), bool],) {
  @func_9536(%var_9537) /* ty=(Tensor[(12, 12, 3), bool],) */
}

def @func_4873(%var_4839: int32) -> (Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %312 = cast(%var_4839, dtype="int32") /* ty=int32 */;
  %313 = reshape(%312, newshape=[]) /* ty=int32 */;
  %314 = @func_3935() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %315 = @func_3613() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %316 = @func_4077() /* ty=Tensor[(13, 8, 5), float32] */;
  %317 = @func_2489(%313) /* ty=Tensor[(10, 3, 1), int32] */;
  %318 = %314.1;
  %319 = %315.0;
  (%316, %317, %var_4839, %318, %319)
}

def @func_8698(%var_8697: Tensor[(270), float32]) -> (int32, Tensor[(5, 6, 9), float32], Tensor[(270), float32]) {
  %326 = fn (%var_8685: Tensor[(270), float32]) -> (int32, Tensor[(5, 6, 9), float32], Tensor[(270), float32]) {
    %320 = @func_4521() /* ty=(int32,) */;
    %321 = cast(%var_8685, dtype="float32") /* ty=Tensor[(270), float32] */;
    %322 = reshape(%321, newshape=[270]) /* ty=Tensor[(270), float32] */;
    %323 = @func_7275(%322) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) */;
    %324 = %320.0;
    %325 = %323.2;
    (%324, %325, %var_8685)
  };
  %326(%var_8697) /* ty=(int32, Tensor[(5, 6, 9), float32], Tensor[(270), float32]) */
}

def @func_18961(%var_18960: Tensor[(750), uint16]) -> (Tensor[(13, 8, 5), float64], Tensor[(250, 3), uint16], Tensor[(750), uint16], Tensor[(10, 3, 11), bool], Tensor[(330), int32]) {
  %335 = fn (%var_18936: Tensor[(750), uint16]) -> (Tensor[(13, 8, 5), float64], Tensor[(250, 3), uint16], Tensor[(750), uint16], Tensor[(10, 3, 11), bool], Tensor[(330), int32]) {
    %327 = cast(%var_18936, dtype="uint16") /* ty=Tensor[(750), uint16] */;
    %328 = reshape(%327, newshape=[250, 3]) /* ty=Tensor[(250, 3), uint16] */;
    %329 = @func_18516(%328) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(250, 3), uint16], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(750), float64]) */;
    %330 = cast(meta[relay.Constant][14] /* ty=Tensor[(330), int32] */, dtype="int32") /* ty=Tensor[(330), int32] */;
    %331 = reshape(%330, newshape=[10, 3, 11]) /* ty=Tensor[(10, 3, 11), int32] */;
    %332 = @func_16318() /* ty=Tensor[(13, 8, 5), float64] */;
    %333 = %329.1;
    %334 = @func_12535(%331) /* ty=Tensor[(10, 3, 11), bool] */;
    (%332, %333, %var_18936, %334, meta[relay.Constant][14] /* ty=Tensor[(330), int32] */)
  };
  %335(%var_18960) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(250, 3), uint16], Tensor[(750), uint16], Tensor[(10, 3, 11), bool], Tensor[(330), int32]) */
}

def @func_8042() -> Tensor[(13, 8, 5), float64] {
  @func_8040() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_13148() -> (Tensor[(13, 8, 5), float64],) {
  @func_13146() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_5288() -> (int32, Tensor[(13, 8, 5), float64]) {
  %340 = fn () -> (int32, Tensor[(13, 8, 5), float64]) {
    %336 = @func_4521() /* ty=(int32,) */;
    %337 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %338 = %336.0;
    %339 = %337.0;
    (%338, %339)
  };
  %340() /* ty=(int32, Tensor[(13, 8, 5), float64]) */
}

def @func_9056() -> Tensor[(750), uint16] {
  @func_9054() /* ty=Tensor[(750), uint16] */
}

def @func_12699() -> Tensor[(13, 8, 5), float64] {
  %341 = fn () -> Tensor[(13, 8, 5), float64] {
    @func_6353() /* ty=Tensor[(13, 8, 5), float64] */
  };
  %341() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_19254() -> Tensor[(13, 8, 5), float32] {
  %343 = fn () -> Tensor[(13, 8, 5), float32] {
    %342 = @func_6438() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %342.0
  };
  %343() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_15624() -> (Tensor[(15, 6, 5), float32], Tensor[(13, 8, 5), float32]) {
  %350 = fn () -> (Tensor[(15, 6, 5), float32], Tensor[(13, 8, 5), float32]) {
    %344 = @func_12437() /* ty=(Tensor[(15, 6, 5), bool],) */;
    %345 = %344.0;
    %346 = cast(%345, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
    %347 = @func_9586() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
    %348 = acos(%346) /* ty=Tensor[(15, 6, 5), float32] */;
    %349 = %347.1;
    (%348, %349)
  };
  %350() /* ty=(Tensor[(15, 6, 5), float32], Tensor[(13, 8, 5), float32]) */
}

def @func_4484(%var_4481: Tensor[(560), uint64], %var_4482: Tensor[(130), float64], %var_4483: Tensor[(70), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), float64]) {
  @func_4479(%var_4481, %var_4482, %var_4483) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), float64]) */
}

def @func_8803() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  @func_8801() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */
}

def @func_18469() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(270), float32], Tensor[(1080), uint8], Tensor[(13, 8, 5), float64]) {
  %361 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(270), float32], Tensor[(1080), uint8], Tensor[(13, 8, 5), float64]) {
    %351 = @func_18422() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %352 = cast(meta[relay.Constant][15] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
    %353 = cast(meta[relay.Constant][16] /* ty=Tensor[(1080), uint8] */, dtype="uint8") /* ty=Tensor[(1080), uint8] */;
    %354 = reshape(%352, newshape=[10, 3, 9]) /* ty=Tensor[(10, 3, 9), float32] */;
    %355 = reshape(%353, newshape=[6, 180]) /* ty=Tensor[(6, 180), uint8] */;
    %356 = @func_15023(%354, %355) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(10, 3, 9), int64], Tensor[(3, 60), uint8], Tensor[(6, 180), bool], Tensor[(13, 8, 5), float32]) */;
    %357 = @func_15092() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
    %358 = %351.0;
    %359 = %356.4;
    %360 = %357.0;
    (%358, %359, meta[relay.Constant][15] /* ty=Tensor[(270), float32] */, meta[relay.Constant][16] /* ty=Tensor[(1080), uint8] */, %360)
  };
  %361() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(270), float32], Tensor[(1080), uint8], Tensor[(13, 8, 5), float64]) */
}

def @func_19726() -> Tensor[(13, 8, 5), float64] {
  %362 = fn () -> Tensor[(13, 8, 5), float64] {
    @func_17883() /* ty=Tensor[(13, 8, 5), float64] */
  };
  %362() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_8992() -> (Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], int32) {
  %363 = @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
  %364 = %363.1;
  %365 = cast(%364, dtype="uint16") /* ty=Tensor[(5, 10, 15), uint16] */;
  %366 = reshape(%365, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %367 = @func_3808(%366) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %368 = @func_7950() /* ty=(int32, Tensor[(13, 8, 5), float32]) */;
  %369 = @func_6353() /* ty=Tensor[(13, 8, 5), float64] */;
  %370 = %367.2;
  %371 = %368.0;
  (%369, %364, %370, %371)
}

def @func_12605() -> (Tensor[(13, 8, 5), float64], Tensor[(8, 8, 6), float64], Tensor[(10, 3, 1), float32]) {
  %377 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(8, 8, 6), float64], Tensor[(10, 3, 1), float32]) {
    %372 = @func_9976() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %373 = @func_10252() /* ty=(Tensor[(10, 3, 1), float32],) */;
    %374 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
    %375 = %372.0;
    %376 = %373.0;
    (%374, %375, %376)
  };
  %377() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(8, 8, 6), float64], Tensor[(10, 3, 1), float32]) */
}

def @func_9800(%var_9799: Tensor[(14, 5), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(14, 5), uint64], Tensor[(13, 8, 5), float64]) {
  %384 = fn (%var_9788: Tensor[(14, 5), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(14, 5), uint64], Tensor[(13, 8, 5), float64]) {
    %378 = cast(%var_9788, dtype="uint64") /* ty=Tensor[(14, 5), uint64] */;
    %379 = reshape(%378, newshape=[70]) /* ty=Tensor[(70), uint64] */;
    %380 = @func_4242(%379) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(5, 13, 2), float64], Tensor[(13, 8, 5), float64]) */;
    %381 = @func_5882() /* ty=Tensor[(13, 8, 5), float64] */;
    %382 = %380.5;
    %383 = @func_9438() /* ty=Tensor[(13, 8, 5), float64] */;
    (%381, %382, %var_9788, %383)
  };
  %384(%var_9799) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(14, 5), uint64], Tensor[(13, 8, 5), float64]) */
}

def @func_16495(%var_16493: Tensor[(11, 13, 16), int32]) -> Tensor[(11, 13, 16), bool] {
  @func_16492(%var_16493) /* ty=Tensor[(11, 13, 16), bool] */
}

def @func_14851() -> (Tensor[(10, 3, 1), float32], Tensor[(5, 6, 9), float32]) {
  %389 = fn () -> (Tensor[(10, 3, 1), float32], Tensor[(5, 6, 9), float32]) {
    %385 = @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
    %386 = @func_9769() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32]) */;
    %387 = %385.5;
    %388 = %386.1;
    (%387, %388)
  };
  %389() /* ty=(Tensor[(10, 3, 1), float32], Tensor[(5, 6, 9), float32]) */
}

def @func_4309(%var_4308: Tensor[(6, 60), float32]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 9, 8), float32], Tensor[(6, 60), float32], Tensor[(13, 8, 5), float64]) {
  %401 = fn (%var_4287: Tensor[(6, 60), float32]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 9, 8), float32], Tensor[(6, 60), float32], Tensor[(13, 8, 5), float64]) {
    %390 = @func_3613() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %391 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %392 = cast(%var_4287, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
    %393 = cast(%var_4287, dtype="float32") /* ty=Tensor[(6, 60), float32] */;
    %394 = reshape(%392, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
    %395 = reshape(%393, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
    %396 = @func_2805(%394, %395) /* ty=(Tensor[(5, 9, 8), float32], Tensor[(7, 2, 5), float64], Tensor[(70), uint64]) */;
    %397 = %390.0;
    %398 = %391.0;
    %399 = %396.0;
    %400 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
    (%397, %398, %399, %var_4287, %400)
  };
  %401(%var_4308) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 9, 8), float32], Tensor[(6, 60), float32], Tensor[(13, 8, 5), float64]) */
}

def @func_15320(%var_15319: Tensor[(560), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(14, 4, 10), uint64], Tensor[(560), uint64], Tensor[(250, 3), int8]) {
  %419 = fn (%var_15282: Tensor[(560), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(14, 4, 10), uint64], Tensor[(560), uint64], Tensor[(250, 3), int8]) {
    %402 = @func_10111() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %403 = cast(%var_15282, dtype="uint64") /* ty=Tensor[(560), uint64] */;
    %404 = cast(%var_15282, dtype="uint64") /* ty=Tensor[(560), uint64] */;
    %405 = cast(meta[relay.Constant][17] /* ty=Tensor[(250, 3), uint16] */, dtype="uint16") /* ty=Tensor[(250, 3), uint16] */;
    %406 = reshape(%403, newshape=[14, 4, 10]) /* ty=Tensor[(14, 4, 10), uint64] */;
    %407 = reshape(%404, newshape=[14, 4, 10]) /* ty=Tensor[(14, 4, 10), uint64] */;
    %408 = reshape(%405, newshape=[750]) /* ty=Tensor[(750), uint16] */;
    %409 = @func_3147(%406, %407, %408) /* ty=(Tensor[(14, 4, 10), uint64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
    %410 = cast(meta[relay.Constant][17] /* ty=Tensor[(250, 3), uint16] */, dtype="float32") /* ty=Tensor[(250, 3), float32] */;
    %411 = sigmoid(%410) /* ty=Tensor[(250, 3), float32] */;
    %412 = cast(meta[relay.Constant][17] /* ty=Tensor[(250, 3), uint16] */, dtype="int8") /* ty=Tensor[(250, 3), int8] */;
    %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(2), int32] */;
    %414 = cast(%411, dtype="int8") /* ty=Tensor[(250, 3), int8] */;
    %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %416 = %402.0;
    %417 = %409.0;
    %418 = logical_xor(%414, %415) /* ty=Tensor[(250, 3), int8] */;
    (%416, %417, %var_15282, %418)
  };
  %419(%var_15319) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(14, 4, 10), uint64], Tensor[(560), uint64], Tensor[(250, 3), int8]) */
}

def @func_17164() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %422 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
    %420 = @func_4405() /* ty=Tensor[(13, 8, 5), float64] */;
    %421 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
    (%420, %421)
  };
  %422() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */
}

def @func_5422(%var_5420: Tensor[(1200), int8], %var_5421: Tensor[(40, 1), float64]) -> (Tensor[(13, 8, 5), float64], Tensor[(10, ?, 4), float64], Tensor[(1200), int8], Tensor[(40, 1), float64]) {
  %433 = fn (%var_5410: Tensor[(1200), int8], %var_5411: Tensor[(40, 1), float64]) -> (Tensor[(13, 8, 5), float64], Tensor[(10, ?, 4), float64], Tensor[(1200), int8], Tensor[(40, 1), float64]) {
    %423 = @func_3970() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %424 = cast(%var_5410, dtype="int8") /* ty=Tensor[(1200), int8] */;
    %425 = cast(%var_5411, dtype="float64") /* ty=Tensor[(40, 1), float64] */;
    %426 = cast(%var_5410, dtype="bool") /* ty=Tensor[(1200), bool] */;
    %427 = reshape(%424, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int8] */;
    %428 = reshape(%425, newshape=[40]) /* ty=Tensor[(40), float64] */;
    %429 = reshape(%426, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), bool] */;
    %430 = @func_363(%427, %428, %429) /* ty=(Tensor[(40), float64], Tensor[(10, ?, 4), float64], Tensor[(10, ?, 4), int8], Tensor[(5, 16, 15), bool], Tensor[(5, 16, 15), uint64]) */;
    %431 = %423.0;
    %432 = %430.1;
    (%431, %432, %var_5410, %var_5411)
  };
  %433(%var_5420, %var_5421) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(10, ?, 4), float64], Tensor[(1200), int8], Tensor[(40, 1), float64]) */
}

def @func_4876(%var_4874: int32) -> (Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  @func_4873(%var_4874) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */
}

def @func_12794() -> (Tensor[(13, 8, 5), float64],) {
  %434 = @func_7205() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %435 = %434.1;
  (%435,)
}

def @func_17457() -> (Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64]) {
  %439 = fn () -> (Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64]) {
    %436 = @func_9270() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %437 = @func_9705() /* ty=Tensor[(5, 10, 15), bool] */;
    %438 = %436.1;
    (%437, %438)
  };
  %439() /* ty=(Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64]) */
}

def @func_6634() -> (Tensor[(13, 8, 5), float64],) {
  %442 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %440 = @func_5040() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %441 = %440.0;
    (%441,)
  };
  %442() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_17963() -> (Tensor[(750), uint16], Tensor[(10, 3, 1), float32]) {
  @func_17961() /* ty=(Tensor[(750), uint16], Tensor[(10, 3, 1), float32]) */
}

def @func_8898() -> Tensor[(13, 8, 5), float64] {
  %443 = fn () -> Tensor[(13, 8, 5), float64] {
    @func_4991() /* ty=Tensor[(13, 8, 5), float64] */
  };
  %443() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_12853() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(90, 2), uint8]) {
  %444 = @func_8646() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %445 = cast(meta[relay.Constant][18] /* ty=Tensor[(90, 2), uint8] */, dtype="uint8") /* ty=Tensor[(90, 2), uint8] */;
  %446 = reshape(%445, newshape=[180]) /* ty=Tensor[(180), uint8] */;
  %447 = @func_6782(%446) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(180), uint8]) */;
  %448 = %444.1;
  %449 = %447.0;
  (%448, %449, meta[relay.Constant][18] /* ty=Tensor[(90, 2), uint8] */)
}

def @func_14926(%var_14925: Tensor[(9, 16, 4), float64]) -> Tensor[(9, 16, 4), int16] {
  %456 = fn (%var_14894: Tensor[(9, 16, 4), float64]) -> Tensor[(9, 16, 4), int16] {
    %450 = cast(%var_14894, dtype="float64") /* ty=Tensor[(9, 16, 4), float64] */;
    %451 = acos(%450) /* ty=Tensor[(9, 16, 4), float64] */;
    %452 = cast(%var_14894, dtype="int16") /* ty=Tensor[(9, 16, 4), int16] */;
    %453 = shape_of(%451, dtype="int32") /* ty=Tensor[(3), int32] */;
    %454 = cast(%451, dtype="int16") /* ty=Tensor[(9, 16, 4), int16] */;
    %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    logical_xor(%454, %455) /* ty=Tensor[(9, 16, 4), int16] */
  };
  %456(%var_14925) /* ty=Tensor[(9, 16, 4), int16] */
}

def @func_7086(%var_7056: Tensor[(11, 16, 2), int64], %var_7057: Tensor[(11, 16, 2), int64]) -> (Tensor[(11, 16, 2), int64], Tensor[(13, 8, 5), float64]) {
  %457 = cast(%var_7057, dtype="int64") /* ty=Tensor[(11, 16, 2), int64] */;
  %458 = shape_of(%var_7056, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%var_7056, dtype="int64") /* ty=Tensor[(11, 16, 2), int64] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %461 = multiply(%459, %460) /* ty=Tensor[(11, 16, 2), int64] */;
  %462 = @func_6989() /* ty=Tensor[(13, 8, 5), float64] */;
  (%461, %462)
}

def @func_7710(%var_7708: Tensor[(16, 8, 1), float64]) -> (Tensor[(16, 8, 1), float64], Tensor[(15, 6, 5), bool], Tensor[(450), uint8]) {
  @func_7707(%var_7708) /* ty=(Tensor[(16, 8, 1), float64], Tensor[(15, 6, 5), bool], Tensor[(450), uint8]) */
}

def @func_10166() -> (Tensor[(13, 8, 5), float32],) {
  %464 = fn () -> (Tensor[(13, 8, 5), float32],) {
    %463 = @func_10017() /* ty=Tensor[(13, 8, 5), float32] */;
    (%463,)
  };
  %464() /* ty=(Tensor[(13, 8, 5), float32],) */
}

def @func_7206() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %468 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
    %465 = @func_5186() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %466 = @func_7016() /* ty=Tensor[(13, 8, 5), float64] */;
    %467 = %465.1;
    (%466, %467)
  };
  %468() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */
}

def @func_19494() -> Tensor[(13, 8, 5), float32] {
  %469 = fn () -> Tensor[(13, 8, 5), float32] {
    @func_17598() /* ty=Tensor[(13, 8, 5), float32] */
  };
  %469() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_11217() -> Tensor[(13, 8, 5), float64] {
  %470 = @func_8738() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %470.0
}

def @func_5004() -> Tensor[(750), uint16] {
  %471 = @func_4600() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %471.2
}

def @func_8325() -> (Tensor[(10, 3, 1), float32],) {
  @func_8323() /* ty=(Tensor[(10, 3, 1), float32],) */
}

def @func_18479() -> (Tensor[(13, 8, 5), float64],) {
  %473 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %472 = @func_6293() /* ty=Tensor[(13, 8, 5), float64] */;
    (%472,)
  };
  %473() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_13802() -> (Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %480 = fn () -> (Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
    %474 = @func_12809() /* ty=(Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(360), float32]) */;
    %475 = @func_9861() /* ty=(Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float32]) */;
    %476 = @func_3888() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
    %477 = %474.0;
    %478 = %475.1;
    %479 = %476.0;
    (%477, %478, %479)
  };
  %480() /* ty=(Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */
}

def @func_6293() -> Tensor[(13, 8, 5), float64] {
  %481 = @func_3935() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %481.1
}

def @func_13919(%var_13917: Tensor[(600), float32]) -> (Tensor[(13, 8, 5), float32], Tensor[(4, 10, 15), float32], Tensor[(600), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  @func_13916(%var_13917) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(4, 10, 15), float32], Tensor[(600), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */
}

def @func_14203(%var_14201: Tensor[(156), float64], %var_14202: Tensor[(819), float64]) -> (Tensor[(13, 8, 5), float64], Tensor[(450), uint8], Tensor[(128), float64], Tensor[(156), float64], Tensor[(5, 10, 15), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(819), int64]) {
  %506 = fn (%var_14171: Tensor[(156), float64], %var_14193: Tensor[(819), float64]) -> (Tensor[(13, 8, 5), float64], Tensor[(450), uint8], Tensor[(128), float64], Tensor[(156), float64], Tensor[(5, 10, 15), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(819), int64]) {
    %482 = @func_7205() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
    %483 = cast(meta[relay.Constant][19] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
    %484 = reshape(%483, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), float64] */;
    %485 = @func_7707(%484) /* ty=(Tensor[(16, 8, 1), float64], Tensor[(15, 6, 5), bool], Tensor[(450), uint8]) */;
    %486 = cast(meta[relay.Constant][20] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
    %487 = cast(%var_14171, dtype="float64") /* ty=Tensor[(156), float64] */;
    %488 = reshape(%486, newshape=[819]) /* ty=Tensor[(819), float64] */;
    %489 = reshape(%487, newshape=[78, 2]) /* ty=Tensor[(78, 2), float64] */;
    %490 = @func_13682(%488, %489) /* ty=(Tensor[(10, 3, 1), float32], Tensor[(7, 9, 13), float64], Tensor[(819), float64], Tensor[(13, 8, 5), float64], Tensor[(10, 3, 1), float32], Tensor[(13, 4, 3), float64], Tensor[(78, 2), float64], Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), float64]) */;
    %491 = %490.8;
    %492 = cast(%491, dtype="float32") /* ty=Tensor[(5, 10, 15), float32] */;
    %493 = @func_6925() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
    %494 = @func_13701() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %495 = cast(%var_14193, dtype="int64") /* ty=Tensor[(819), int64] */;
    %496 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(819), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %497 = cast(meta[relay.Constant][20] /* ty=Tensor[(819), float64] */, dtype="int64") /* ty=Tensor[(819), int64] */;
    %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?), int64] */;
    %499 = %482.0;
    %500 = %485.2;
    %501 = sqrt(%492) /* ty=Tensor[(5, 10, 15), float32] */;
    %502 = %493.1;
    %503 = %494.0;
    %504 = @func_6989() /* ty=Tensor[(13, 8, 5), float64] */;
    %505 = right_shift(%497, %498) /* ty=Tensor[(819), int64] */;
    (%499, %500, meta[relay.Constant][19] /* ty=Tensor[(128), float64] */, %var_14171, %501, %502, %503, %504, %505)
  };
  %506(%var_14201, %var_14202) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(450), uint8], Tensor[(128), float64], Tensor[(156), float64], Tensor[(5, 10, 15), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(819), int64]) */
}

def @func_2808(%var_2806: Tensor[(5, 9, 8), float32], %var_2807: Tensor[(5, 9, 8), float32]) -> (Tensor[(5, 9, 8), float32], Tensor[(7, 2, 5), float64], Tensor[(70), uint64]) {
  %518 = fn (%var_2791: Tensor[(5, 9, 8), float32], %var_2792: Tensor[(5, 9, 8), float32]) -> (Tensor[(5, 9, 8), float32], Tensor[(7, 2, 5), float64], Tensor[(70), uint64]) {
    %507 = cast(%var_2792, dtype="float32") /* ty=Tensor[(5, 9, 8), float32] */;
    %508 = shape_of(%var_2791, dtype="int32") /* ty=Tensor[(3), int32] */;
    %509 = cast(%var_2791, dtype="float32") /* ty=Tensor[(5, 9, 8), float32] */;
    %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %511 = cast(meta[relay.Constant][21] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
    %512 = cast(meta[relay.Constant][21] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
    %513 = reshape(%511, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
    %514 = reshape(%512, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
    %515 = @func_1769(%513, %514) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) */;
    %516 = mod(%509, %510) /* ty=Tensor[(5, 9, 8), float32] */;
    %517 = %515.2;
    (%516, %517, meta[relay.Constant][21] /* ty=Tensor[(70), uint64] */)
  };
  %518(%var_2806, %var_2807) /* ty=(Tensor[(5, 9, 8), float32], Tensor[(7, 2, 5), float64], Tensor[(70), uint64]) */
}

def @func_8936() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(560), uint64]) {
  @func_8934() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(560), uint64]) */
}

def @func_12129() -> Tensor[(13, 8, 5), float32] {
  %520 = fn () -> Tensor[(13, 8, 5), float32] {
    %519 = @func_10165() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %519.0
  };
  %520() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_13299() -> (Tensor[(10, 3, 1), float32],) {
  @func_13297() /* ty=(Tensor[(10, 3, 1), float32],) */
}

def @func_12410() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  @func_12408() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */
}

def @func_14390() -> Tensor[(13, 8, 5), float32] {
  @func_12457() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_6784(%var_6783: Tensor[(180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(180), uint8]) {
  %526 = fn (%var_6780: Tensor[(180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(180), uint8]) {
    %521 = cast(%var_6780, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %522 = reshape(%521, newshape=[1, 180]) /* ty=Tensor[(1, 180), uint8] */;
    %523 = @func_6688(%522) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(130), float64], Tensor[(1, 180), uint8], Tensor[(1200), int8]) */;
    %524 = @func_6293() /* ty=Tensor[(13, 8, 5), float64] */;
    %525 = %523.0;
    (%524, %525, %var_6780)
  };
  %526(%var_6783) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(180), uint8]) */
}

def @func_3936() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %531 = fn () -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
    %527 = @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %528 = @func_3908() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %529 = %527.0;
    %530 = %528.0;
    (%529, %530)
  };
  %531() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */
}

def @func_6246(%var_6207: Tensor[(5, 5, 9), float64]) -> (Tensor[(5, 5, 9), float64], int32, Tensor[(13, 8, 5), float64], Tensor[(5, 5, 9), float64], Tensor[(13, 8, 5), float64]) {
  %532 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 5, 9), float64] */, dtype="float64") /* ty=Tensor[(5, 5, 9), float64] */;
  %533 = shape_of(%var_6207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %534 = cast(%var_6207, dtype="float64") /* ty=Tensor[(5, 5, 9), float64] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %536 = @func_5287() /* ty=(int32, Tensor[(13, 8, 5), float64]) */;
  %537 = @func_4569() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %538 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 5, 9), float64] */, dtype="float64") /* ty=Tensor[(5, 5, 9), float64] */;
  %539 = @func_4178() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %540 = power(%534, %535) /* ty=Tensor[(5, 5, 9), float64] */;
  %541 = %536.0;
  %542 = %537.0;
  %543 = log2(%538) /* ty=Tensor[(5, 5, 9), float64] */;
  %544 = %539.0;
  (%540, %541, %542, %543, %544)
}

def @func_16593() -> Tensor[(13, 8, 5), float32] {
  @func_10017() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_8151() -> (Tensor[(13, 8, 5), float32],) {
  %545 = @func_4560() /* ty=(int32, Tensor[(13, 8, 5), float32]) */;
  %546 = %545.1;
  (%546,)
}

def @func_6354() -> Tensor[(13, 8, 5), float64] {
  %548 = fn () -> Tensor[(13, 8, 5), float64] {
    %547 = @func_3888() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
    %547.0
  };
  %548() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_13146() -> (Tensor[(13, 8, 5), float64],) {
  %549 = @func_4991() /* ty=Tensor[(13, 8, 5), float64] */;
  (%549,)
}

def @func_3147(%var_3093: Tensor[(14, 4, 10), uint64], %var_3094: Tensor[(14, 4, 10), uint64], %var_3120: Tensor[(750), uint16]) -> (Tensor[(14, 4, 10), uint64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) {
  %550 = cast(%var_3094, dtype="uint64") /* ty=Tensor[(14, 4, 10), uint64] */;
  %551 = shape_of(%var_3093, dtype="int32") /* ty=Tensor[(3), int32] */;
  %552 = cast(%var_3093, dtype="uint64") /* ty=Tensor[(14, 4, 10), uint64] */;
  %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %554 = cast(%var_3120, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %555 = reshape(%554, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), uint16] */;
  %556 = @func_2171(%555) /* ty=(Tensor[(5, 10, 15), bool],) */;
  %557 = bitwise_xor(%552, %553) /* ty=Tensor[(14, 4, 10), uint64] */;
  %558 = %556.0;
  (%557, %558, %var_3120)
}

def @func_15504(%var_15503: Tensor[(225), float64]) -> (Tensor[(13, 8, 5), float64], Tensor[(5, 5, 9), float64], Tensor[(225), float64], Tensor[(120), float64]) {
  %566 = fn (%var_15498: Tensor[(225), float64]) -> (Tensor[(13, 8, 5), float64], Tensor[(5, 5, 9), float64], Tensor[(225), float64], Tensor[(120), float64]) {
    %559 = cast(%var_15498, dtype="float64") /* ty=Tensor[(225), float64] */;
    %560 = cast(meta[relay.Constant][23] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %561 = reshape(%559, newshape=[225]) /* ty=Tensor[(225), float64] */;
    %562 = reshape(%560, newshape=[10, 3, 4]) /* ty=Tensor[(10, 3, 4), float64] */;
    %563 = @func_7530(%561, %562) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 5, 9), float64], Tensor[(10, 3, 1), bool], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 4), int32], Tensor[(10, 3, 225), float64]) */;
    %564 = @func_5882() /* ty=Tensor[(13, 8, 5), float64] */;
    %565 = %563.1;
    (%564, %565, %var_15498, meta[relay.Constant][23] /* ty=Tensor[(120), float64] */)
  };
  %566(%var_15503) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 5, 9), float64], Tensor[(225), float64], Tensor[(120), float64]) */
}

def @func_9901() -> (int32,) {
  %569 = fn () -> (int32,) {
    %567 = @func_4390() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64]) */;
    %568 = %567.3;
    (%568,)
  };
  %569() /* ty=(int32,) */
}

def @func_18058(%var_18057: Tensor[(70), uint64]) -> (Tensor[(7, 2, 5), bool], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 70), bool], Tensor[(10, 3, 70), float64]) {
  %590 = fn (%var_18029: Tensor[(70), uint64]) -> (Tensor[(7, 2, 5), bool], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 70), bool], Tensor[(10, 3, 70), float64]) {
    %570 = cast(%var_18029, dtype="uint64") /* ty=Tensor[(70), uint64] */;
    %571 = cast(%var_18029, dtype="uint64") /* ty=Tensor[(70), uint64] */;
    %572 = reshape(%570, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
    %573 = reshape(%571, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
    %574 = @func_1769(%572, %573) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) */;
    %575 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %576 = @func_6177() /* ty=Tensor[(10, 3, 1), float32] */;
    %577 = cast(%576, dtype="uint64") /* ty=Tensor[(10, 3, 1), uint64] */;
    %578 = cast(%var_18029, dtype="uint64") /* ty=Tensor[(70), uint64] */;
    %579 = maximum(%577, %578) /* ty=Tensor[(10, 3, 70), uint64] */;
    %580 = cast(%579, dtype="float64") /* ty=Tensor[(10, 3, 70), float64] */;
    %581 = sinh(%580) /* ty=Tensor[(10, 3, 70), float64] */;
    %582 = cast(%581, dtype="bool") /* ty=Tensor[(10, 3, 70), bool] */;
    %583 = cast(%576, dtype="bool") /* ty=Tensor[(10, 3, 1), bool] */;
    %584 = cast(%581, dtype="float64") /* ty=Tensor[(10, 3, 70), float64] */;
    %585 = cast(%var_18029, dtype="float64") /* ty=Tensor[(70), float64] */;
    %586 = %574.1;
    %587 = %575.0;
    %588 = logical_and(%582, %583) /* ty=Tensor[(10, 3, 70), bool] */;
    %589 = floor_divide(%584, %585) /* ty=Tensor[(10, 3, 70), float64] */;
    (%586, %587, %588, %589)
  };
  %590(%var_18057) /* ty=(Tensor[(7, 2, 5), bool], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 70), bool], Tensor[(10, 3, 70), float64]) */
}

def @func_17283() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
  %593 = fn () -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
    %591 = @func_4077() /* ty=Tensor[(13, 8, 5), float32] */;
    %592 = @func_12128() /* ty=Tensor[(13, 8, 5), float32] */;
    (%591, %592)
  };
  %593() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */
}

def @func_4600() -> (Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) {
  %594 = @func_4178() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %595 = cast(meta[relay.Constant][24] /* ty=Tensor[(750), uint16] */, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %596 = reshape(%595, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %597 = @func_3808(%596) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %598 = %594.0;
  %599 = %597.1;
  (%598, %599, meta[relay.Constant][24] /* ty=Tensor[(750), uint16] */)
}

def @func_3889() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  %603 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
    %600 = @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %601 = @func_3476() /* ty=Tensor[(13, 8, 5), float64] */;
    %602 = %600.0;
    (%601, %602)
  };
  %603() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */
}

def @func_19438() -> (Tensor[(13, 8, 5), float64], Tensor[(225), float64], Tensor[(560), uint64], Tensor[(13, 8, 5), float64]) {
  %611 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(225), float64], Tensor[(560), uint64], Tensor[(13, 8, 5), float64]) {
    %604 = @func_12408() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
    %605 = @func_16824() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(225), float64]) */;
    %606 = @func_8934() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(560), uint64]) */;
    %607 = %604.1;
    %608 = %605.2;
    %609 = %606.3;
    %610 = @func_9548() /* ty=Tensor[(13, 8, 5), float64] */;
    (%607, %608, %609, %610)
  };
  %611() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(225), float64], Tensor[(560), uint64], Tensor[(13, 8, 5), float64]) */
}

def @func_3808(%var_3804: Tensor[(750), uint16]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) {
  %612 = cast(%var_3804, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %613 = reshape(%612, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), uint16] */;
  %614 = @func_2171(%613) /* ty=(Tensor[(5, 10, 15), bool],) */;
  %615 = @func_3771() /* ty=Tensor[(13, 8, 5), float32] */;
  %616 = %614.0;
  (%615, %616, %var_3804)
}

def @func_17353() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64]) {
  %617 = @func_6338() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %618 = @func_6588() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %619 = @func_13297() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %620 = @func_10030() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %621 = %617.0;
  %622 = %618.0;
  %623 = %619.0;
  %624 = %620.1;
  (%621, %622, %623, %624)
}

def @func_17116() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  @func_17114() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */
}

def @func_18356(%var_18355: Tensor[(5, 16, 6), float64]) -> (Tensor[(5, 16, 6), float64], Tensor[(10, 3, 1), float32]) {
  %629 = fn (%var_18347: Tensor[(5, 16, 6), float64]) -> (Tensor[(5, 16, 6), float64], Tensor[(10, 3, 1), float32]) {
    %625 = cast(%var_18347, dtype="float64") /* ty=Tensor[(5, 16, 6), float64] */;
    %626 = @func_12604() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(8, 8, 6), float64], Tensor[(10, 3, 1), float32]) */;
    %627 = atanh(%625) /* ty=Tensor[(5, 16, 6), float64] */;
    %628 = %626.2;
    (%627, %628)
  };
  %629(%var_18355) /* ty=(Tensor[(5, 16, 6), float64], Tensor[(10, 3, 1), float32]) */
}

def @func_17503(%var_17494: Tensor[(156), float64]) -> (Tensor[(13, 8, 5), float64], Tensor[(819), float64], Tensor[(156), float64], Tensor[(280, 2), float64]) {
  %630 = cast(meta[relay.Constant][25] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
  %631 = cast(%var_17494, dtype="float64") /* ty=Tensor[(156), float64] */;
  %632 = reshape(%630, newshape=[819]) /* ty=Tensor[(819), float64] */;
  %633 = reshape(%631, newshape=[78, 2]) /* ty=Tensor[(78, 2), float64] */;
  %634 = @func_13682(%632, %633) /* ty=(Tensor[(10, 3, 1), float32], Tensor[(7, 9, 13), float64], Tensor[(819), float64], Tensor[(13, 8, 5), float64], Tensor[(10, 3, 1), float32], Tensor[(13, 4, 3), float64], Tensor[(78, 2), float64], Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), float64]) */;
  %635 = @func_4760() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %636 = %635.4;
  %637 = cast(%636, dtype="float64") /* ty=Tensor[(280, 2), float64] */;
  %638 = erf(%637) /* ty=Tensor[(280, 2), float64] */;
  %639 = cast(%636, dtype="float64") /* ty=Tensor[(280, 2), float64] */;
  %640 = shape_of(%638, dtype="int32") /* ty=Tensor[(2), int32] */;
  %641 = cast(%638, dtype="float64") /* ty=Tensor[(280, 2), float64] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %643 = %634.3;
  %644 = power(%641, %642) /* ty=Tensor[(280, 2), float64] */;
  (%643, meta[relay.Constant][25] /* ty=Tensor[(819), float64] */, %var_17494, %644)
}

def @func_18861() -> Tensor[(10, 3, 1), float32] {
  @func_18859() /* ty=Tensor[(10, 3, 1), float32] */
}

def @func_9716() -> Tensor[(10, 3, 1), float32] {
  @func_9714() /* ty=Tensor[(10, 3, 1), float32] */
}

def @func_10790(%var_10788: Tensor[(560), uint64], %var_10789: Tensor[(750), uint16]) -> (Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
  %661 = fn (%var_10744: Tensor[(560), uint64], %var_10745: Tensor[(750), uint16]) -> (Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
    %645 = @func_6633() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %646 = cast(%var_10744, dtype="uint64") /* ty=Tensor[(560), uint64] */;
    %647 = cast(%var_10745, dtype="uint16") /* ty=Tensor[(750), uint16] */;
    %648 = cast(meta[relay.Constant][26] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %649 = cast(meta[relay.Constant][27] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
    %650 = reshape(%646, newshape=[560]) /* ty=Tensor[(560), uint64] */;
    %651 = reshape(%647, newshape=[750]) /* ty=Tensor[(750), uint16] */;
    %652 = reshape(%648, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %653 = reshape(%649, newshape=[70]) /* ty=Tensor[(70), uint64] */;
    %654 = @func_3597(%650, %651, %652, %653) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(7, 2, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64]) */;
    %655 = @func_9349() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %656 = @func_8801() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
    %657 = %645.0;
    %658 = %654.3;
    %659 = %655.0;
    %660 = %656.1;
    (%657, %658, %var_10744, %var_10745, meta[relay.Constant][26] /* ty=Tensor[(130), float64] */, meta[relay.Constant][27] /* ty=Tensor[(70), uint64] */, %659, %660)
  };
  %661(%var_10788, %var_10789) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */
}

def @func_9771() -> (Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32]) {
  @func_9769() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32]) */
}

def @func_13703() -> (Tensor[(13, 8, 5), float64],) {
  @func_13701() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_19581(%var_19568: Tensor[(15, 9, 11), float64]) -> (Tensor[(15, 9, 11), float64], Tensor[(13, 8, 5), float32]) {
  %662 = cast(%var_19568, dtype="float64") /* ty=Tensor[(15, 9, 11), float64] */;
  %663 = exp(%662) /* ty=Tensor[(15, 9, 11), float64] */;
  %664 = @func_3835() /* ty=Tensor[(13, 8, 5), float32] */;
  (%663, %664)
}

def @func_8293() -> (Tensor[(5, 10, 15), bool],) {
  %665 = @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
  %666 = %665.1;
  (%666,)
}

def @func_7412(%var_7411: Tensor[(130), float64]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(63), uint32]) {
  %678 = fn (%var_7387: Tensor[(130), float64]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(63), uint32]) {
    %667 = @func_4569() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %668 = %667.0;
    %669 = cast(%668, dtype="float32") /* ty=Tensor[(13, 8, 5), float32] */;
    %670 = cast(%var_7387, dtype="float64") /* ty=Tensor[(130), float64] */;
    %671 = reshape(%670, newshape=[5, 13, 2]) /* ty=Tensor[(5, 13, 2), float64] */;
    %672 = cast(meta[relay.Constant][28] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
    %673 = reshape(%672, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), uint32] */;
    %674 = @func_5995(%673) /* ty=(Tensor[(7, ?, 9), bool], Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(70), uint64], Tensor[(13, 8, 5), float32], Tensor[(360, 1), float32]) */;
    %675 = rsqrt(%669) /* ty=Tensor[(13, 8, 5), float32] */;
    %676 = @func_478(%671) /* ty=Tensor[(5, 13, 2), float64] */;
    %677 = %674.3;
    (%675, %676, %var_7387, %677, meta[relay.Constant][28] /* ty=Tensor[(63), uint32] */)
  };
  %678(%var_7411) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(63), uint32]) */
}

def @func_4245(%var_4243: Tensor[(70), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(5, 13, 2), float64], Tensor[(13, 8, 5), float64]) {
  @func_4242(%var_4243) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(5, 13, 2), float64], Tensor[(13, 8, 5), float64]) */
}

def @func_9692() -> (Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(1, 270), float32]) {
  %679 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 270), float32] */, dtype="float32") /* ty=Tensor[(1, 270), float32] */;
  %680 = reshape(%679, newshape=[5, 6, 9]) /* ty=Tensor[(5, 6, 9), float32] */;
  %681 = @func_6989() /* ty=Tensor[(13, 8, 5), float64] */;
  %682 = @func_6381(%680) /* ty=Tensor[(5, 6, 9), float32] */;
  (%681, %682, meta[relay.Constant][29] /* ty=Tensor[(1, 270), float32] */)
}

def @func_17043() -> Tensor[(13, 8, 5), float64] {
  @func_3504() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_4180() -> (Tensor[(13, 8, 5), float64],) {
  @func_4178() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_17749(%var_17747: Tensor[(270), float32]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(13, 8, 5), float32], Tensor[(8, 8, 6), float64], Tensor[(270), uint64], Tensor[(13, 8, 5), float64], Tensor[(360), float32]) {
  @func_17746(%var_17747) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(13, 8, 5), float32], Tensor[(8, 8, 6), float64], Tensor[(270), uint64], Tensor[(13, 8, 5), float64], Tensor[(360), float32]) */
}

def @func_1590(%var_1581: Tensor[(15, 6, 5), uint8]) -> (Tensor[(15, 6, 5), bool],) {
  %683 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 6, 5), uint8] */, dtype="uint8") /* ty=Tensor[(15, 6, 5), uint8] */;
  %684 = shape_of(%var_1581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%var_1581, dtype="uint8") /* ty=Tensor[(15, 6, 5), uint8] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %687 = right_shift(%685, %686) /* ty=Tensor[(15, 6, 5), uint8] */;
  %688 = cast(%var_1581, dtype="bool") /* ty=Tensor[(15, 6, 5), bool] */;
  %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%687, dtype="bool") /* ty=Tensor[(15, 6, 5), bool] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %692 = greater_equal(%690, %691) /* ty=Tensor[(15, 6, 5), bool] */;
  (%692,)
}

def @func_10105() -> Tensor[(10, 3, 1), float32] {
  @func_10103() /* ty=Tensor[(10, 3, 1), float32] */
}

def @func_17013() -> (Tensor[(13, 8, 5), float32],) {
  %695 = fn () -> (Tensor[(13, 8, 5), float32],) {
    %693 = @func_10165() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %694 = %693.0;
    (%694,)
  };
  %695() /* ty=(Tensor[(13, 8, 5), float32],) */
}

def @func_6338() -> (Tensor[(13, 8, 5), float64],) {
  %696 = @func_4991() /* ty=Tensor[(13, 8, 5), float64] */;
  (%696,)
}

def @func_10112() -> (Tensor[(13, 8, 5), float64],) {
  %698 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %697 = @func_9438() /* ty=Tensor[(13, 8, 5), float64] */;
    (%697,)
  };
  %698() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_10017() -> Tensor[(13, 8, 5), float32] {
  @func_5564() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_3811(%var_3809: Tensor[(750), uint16]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) {
  @func_3808(%var_3809) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */
}

def @func_10462() -> (Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(750), uint16]) {
  %699 = @func_8151() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %700 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %701 = @func_9223() /* ty=(Tensor[(750), uint16],) */;
  %702 = %699.0;
  %703 = @func_5004() /* ty=Tensor[(750), uint16] */;
  %704 = %700.0;
  %705 = %701.0;
  (%702, %703, %704, %705)
}

def @func_12408() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %706 = @func_6989() /* ty=Tensor[(13, 8, 5), float64] */;
  %707 = @func_6293() /* ty=Tensor[(13, 8, 5), float64] */;
  (%706, %707)
}

def @func_3910() -> (Tensor[(13, 8, 5), float64],) {
  @func_3908() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_15724(%var_15722: Tensor[(10, 3, 10), float32], %var_15723: Tensor[(600), float32]) -> (Tensor[(10, 3, 10), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(600), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(270), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  @func_15720(%var_15722, %var_15723) /* ty=(Tensor[(10, 3, 10), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(600), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(270), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */
}

def @func_7669(%var_7667: Tensor[(4, 10, 9), int32]) -> Tensor[(4, 10, 9), uint16] {
  @func_7666(%var_7667) /* ty=Tensor[(4, 10, 9), uint16] */
}

def @func_11052() -> (Tensor[(13, 8, 5), float64],) {
  %709 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %708 = @func_5024() /* ty=Tensor[(13, 8, 5), float64] */;
    (%708,)
  };
  %709() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_3506() -> Tensor[(13, 8, 5), float64] {
  @func_3504() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_17618() -> (Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64]) {
  %710 = @func_11378() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %711 = @func_11598() /* ty=Tensor[(5, 10, 15), bool] */;
  %712 = %710.0;
  (%711, %712)
}

def @func_5321(%var_5319: Tensor[(13, 8, 5), float64]) -> (Tensor[(13, 8, 5), bool], Tensor[(13, 8, 5), float64]) {
  @func_5318(%var_5319) /* ty=(Tensor[(13, 8, 5), bool], Tensor[(13, 8, 5), float64]) */
}

def @func_3972() -> (Tensor[(13, 8, 5), float64],) {
  @func_3970() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_10909() -> (Tensor[(750), uint16], Tensor[(13, 8, 5), float64]) {
  %713 = @func_3935() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %714 = @func_5004() /* ty=Tensor[(750), uint16] */;
  %715 = %713.1;
  (%714, %715)
}

def @func_7090(%var_7088: Tensor[(11, 16, 2), int64], %var_7089: Tensor[(11, 16, 2), int64]) -> (Tensor[(11, 16, 2), int64], Tensor[(13, 8, 5), float64]) {
  @func_7086(%var_7088, %var_7089) /* ty=(Tensor[(11, 16, 2), int64], Tensor[(13, 8, 5), float64]) */
}

def @func_14383() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
  @func_14381() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */
}

def @func_10725() -> Tensor[(10, 3, 1), float32] {
  %716 = fn () -> Tensor[(10, 3, 1), float32] {
    @func_10103() /* ty=Tensor[(10, 3, 1), float32] */
  };
  %716() /* ty=Tensor[(10, 3, 1), float32] */
}

def @func_4570() -> (Tensor[(13, 8, 5), float64],) {
  %718 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %717 = @func_4405() /* ty=Tensor[(13, 8, 5), float64] */;
    (%717,)
  };
  %718() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_9172() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  @func_9170() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */
}

def @func_9054() -> Tensor[(750), uint16] {
  %719 = @func_4390() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64]) */;
  %719.1
}

def @func_6121() -> (Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) {
  %720 = @func_4760() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %721 = @func_3613() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %722 = cast(-3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %723 = reshape(%722, newshape=[]) /* ty=int32 */;
  %724 = @func_2489(%723) /* ty=Tensor[(10, 3, 1), int32] */;
  %725 = cast(%724, dtype="float32") /* ty=Tensor[(10, 3, 1), float32] */;
  %726 = @func_3476() /* ty=Tensor[(13, 8, 5), float64] */;
  %727 = %720.1;
  %728 = %721.0;
  %729 = @func_5099() /* ty=Tensor[(13, 8, 5), float32] */;
  %730 = sin(%725) /* ty=Tensor[(10, 3, 1), float32] */;
  (%726, %727, %728, -3 /* ty=int32 */, %729, %730)
}

def @func_14235() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  %736 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
    %731 = @func_10462() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(750), uint16]) */;
    %732 = @func_5736() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(70), uint64], Tensor[(360, 1), float32]) */;
    %733 = %731.2;
    %734 = @func_11217() /* ty=Tensor[(13, 8, 5), float64] */;
    %735 = %732.0;
    (%733, %734, %735)
  };
  %736() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */
}

def @func_7666(%var_7659: Tensor[(4, 10, 9), int32]) -> Tensor[(4, 10, 9), uint16] {
  %737 = @func_4560() /* ty=(int32, Tensor[(13, 8, 5), float32]) */;
  %738 = %737.0;
  %739 = cast(%738, dtype="uint16") /* ty=uint16 */;
  %740 = cast(%var_7659, dtype="uint16") /* ty=Tensor[(4, 10, 9), uint16] */;
  subtract(%739, %740) /* ty=Tensor[(4, 10, 9), uint16] */
}

def @func_9211() -> (Tensor[(13, 8, 5), float64],) {
  @func_9209() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_6990() -> Tensor[(13, 8, 5), float64] {
  %742 = fn () -> Tensor[(13, 8, 5), float64] {
    %741 = @func_3908() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %741.0
  };
  %742() /* ty=Tensor[(13, 8, 5), float64] */
}

def @main(%var_20005: Tensor[(128), float64], %var_20011: Tensor[(16, 8, 3), float64]) -> (Tensor[(10, 3, 4), uint32], Tensor[(13, 8, 5), float32], Tensor[(128), float64], Tensor[(16, 8, 3), float32], Tensor[(16, 8, 5), int64]) {
  %743 = @func_12987() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(450), uint8], Tensor[(10, 3, 4), uint32], Tensor[(6, 20), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64], int32) */;
  %744 = @func_12987() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(450), uint8], Tensor[(10, 3, 4), uint32], Tensor[(6, 20), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64], int32) */;
  %745 = cast(%var_20005, dtype="float64") /* ty=Tensor[(128), float64] */;
  %746 = reshape(%745, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), float64] */;
  %747 = @func_7710(%746) /* ty=(Tensor[(16, 8, 1), float64], Tensor[(15, 6, 5), bool], Tensor[(450), uint8]) */;
  %748 = %747.0;
  %749 = cast(%748, dtype="float32") /* ty=Tensor[(16, 8, 1), float32] */;
  %750 = cast(%var_20011, dtype="float32") /* ty=Tensor[(16, 8, 3), float32] */;
  %751 = cast(%748, dtype="int64") /* ty=Tensor[(16, 8, 1), int64] */;
  %752 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 8, 5), float64] */, dtype="int64") /* ty=Tensor[(16, 8, 5), int64] */;
  %753 = %743.2;
  %754 = %744.6;
  %755 = power(%749, %750) /* ty=Tensor[(16, 8, 3), float32] */;
  %756 = right_shift(%751, %752) /* ty=Tensor[(16, 8, 5), int64] */;
  (%753, %754, %var_20005, %755, %756)
}

def @func_16407() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  %761 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
    %757 = @func_11051() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %758 = @func_9170() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %759 = %757.0;
    %760 = %758.0;
    (%759, %760)
  };
  %761() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */
}

def @func_12538(%var_12536: Tensor[(10, 3, 11), int32]) -> Tensor[(10, 3, 11), bool] {
  @func_12535(%var_12536) /* ty=Tensor[(10, 3, 11), bool] */
}

def @func_8323() -> (Tensor[(10, 3, 1), float32],) {
  %762 = @func_7759() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %763 = %762.0;
  (%763,)
}

def @func_4077() -> Tensor[(13, 8, 5), float32] {
  %764 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %764.0
}

def @func_9170() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %765 = @func_4760() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %766 = @func_5186() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %767 = %765.5;
  %768 = %766.1;
  (%767, %768)
}

def @func_4992() -> Tensor[(13, 8, 5), float64] {
  %770 = fn () -> Tensor[(13, 8, 5), float64] {
    %769 = @func_3970() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %769.0
  };
  %770() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_12987() -> (Tensor[(13, 8, 5), float32], Tensor[(450), uint8], Tensor[(10, 3, 4), uint32], Tensor[(6, 20), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64], int32) {
  @func_12985() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(450), uint8], Tensor[(10, 3, 4), uint32], Tensor[(6, 20), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64], int32) */
}

def @func_5188() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  @func_5186() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */
}

def @func_9439() -> Tensor[(13, 8, 5), float64] {
  %772 = fn () -> Tensor[(13, 8, 5), float64] {
    %771 = @func_9243() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
    %771.0
  };
  %772() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_13701() -> (Tensor[(13, 8, 5), float64],) {
  %773 = @func_9417() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %774 = %773.0;
  (%774,)
}

def @func_16220() -> (Tensor[(13, 8, 5), float32],) {
  %777 = fn () -> (Tensor[(13, 8, 5), float32],) {
    %775 = @func_9170() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %776 = %775.0;
    (%776,)
  };
  %777() /* ty=(Tensor[(13, 8, 5), float32],) */
}

def @func_3614() -> (Tensor[(13, 8, 5), float64],) {
  %779 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %778 = @func_3476() /* ty=Tensor[(13, 8, 5), float64] */;
    (%778,)
  };
  %779() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_15975() -> (int32,) {
  %782 = fn () -> (int32,) {
    %780 = @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
    %781 = %780.3;
    (%781,)
  };
  %782() /* ty=(int32,) */
}

def @func_13559(%var_13558: Tensor[(10, 3, 13), float32]) -> (Tensor[(13, 8, 5), float32], Tensor[(10, 3, 13), uint32]) {
  %792 = fn (%var_13542: Tensor[(10, 3, 13), float32]) -> (Tensor[(13, 8, 5), float32], Tensor[(10, 3, 13), uint32]) {
    %783 = @func_9270() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %784 = @func_13297() /* ty=(Tensor[(10, 3, 1), float32],) */;
    %785 = %784.0;
    %786 = cast(%785, dtype="float32") /* ty=Tensor[(10, 3, 1), float32] */;
    %787 = exp(%786) /* ty=Tensor[(10, 3, 1), float32] */;
    %788 = cast(%787, dtype="uint32") /* ty=Tensor[(10, 3, 1), uint32] */;
    %789 = cast(%var_13542, dtype="uint32") /* ty=Tensor[(10, 3, 13), uint32] */;
    %790 = %783.0;
    %791 = logical_xor(%788, %789) /* ty=Tensor[(10, 3, 13), uint32] */;
    (%790, %791)
  };
  %792(%var_13558) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(10, 3, 13), uint32]) */
}

def @func_17114() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %793 = @func_10818() /* ty=(Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32]) */;
  %794 = @func_10111() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %795 = %793.1;
  %796 = %794.0;
  (%795, %796)
}

def @func_9769() -> (Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32]) {
  %797 = @func_8151() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %798 = @func_9692() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(1, 270), float32]) */;
  %799 = %797.0;
  %800 = %798.1;
  (%799, %800)
}

def @func_4178() -> (Tensor[(13, 8, 5), float64],) {
  %801 = @func_3476() /* ty=Tensor[(13, 8, 5), float64] */;
  (%801,)
}

def @func_10209(%var_10208: Tensor[(70), uint64]) -> (Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), uint64], Tensor[(70), uint64]) {
  %810 = fn (%var_10203: Tensor[(70), uint64]) -> (Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), uint64], Tensor[(70), uint64]) {
    %802 = @func_9270() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %803 = cast(%var_10203, dtype="uint64") /* ty=Tensor[(70), uint64] */;
    %804 = cast(%var_10203, dtype="uint64") /* ty=Tensor[(70), uint64] */;
    %805 = reshape(%803, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
    %806 = reshape(%804, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), uint64] */;
    %807 = @func_1769(%805, %806) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) */;
    %808 = %802.0;
    %809 = %807.0;
    (%808, %809, %var_10203)
  };
  %810(%var_10208) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), uint64], Tensor[(70), uint64]) */
}

def @func_3504() -> Tensor[(13, 8, 5), float64] {
  @func_3476() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_9045(%var_9043: float32, %var_9044: Tensor[(1, 16, 11), float32]) -> (Tensor[(1, 16, 11), bool], Tensor[(13, 8, 5), float64]) {
  %816 = fn (%var_9030: float32, %var_9031: Tensor[(1, 16, 11), float32]) -> (Tensor[(1, 16, 11), bool], Tensor[(13, 8, 5), float64]) {
    %811 = cast(%var_9030, dtype="bool") /* ty=bool */;
    %812 = cast(%var_9031, dtype="bool") /* ty=Tensor[(1, 16, 11), bool] */;
    %813 = @func_6338() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %814 = greater_equal(%811, %812) /* ty=Tensor[(1, 16, 11), bool] */;
    %815 = %813.0;
    (%814, %815)
  };
  %816(%var_9043, %var_9044) /* ty=(Tensor[(1, 16, 11), bool], Tensor[(13, 8, 5), float64]) */
}

def @func_15911(%var_15910: Tensor[(1200), int8]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(1200), int8]) {
  %822 = fn (%var_15907: Tensor[(1200), int8]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(1200), int8]) {
    %817 = cast(%var_15907, dtype="int8") /* ty=Tensor[(1200), int8] */;
    %818 = reshape(%817, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
    %819 = @func_13464(%818) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(180), uint8], Tensor[(1200), int8]) */;
    %820 = @func_6132() /* ty=Tensor[(13, 8, 5), float32] */;
    %821 = %819.1;
    (%820, %821, %var_15907)
  };
  %822(%var_15910) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(1200), int8]) */
}

def @func_8847(%var_8845: Tensor[(63), uint32]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(7, ?, 9), bool], Tensor[(63), uint32]) {
  @func_8844(%var_8845) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(7, ?, 9), bool], Tensor[(63), uint32]) */
}

def @func_15720(%var_15657: Tensor[(10, 3, 10), float32], %var_15671: Tensor[(600), float32]) -> (Tensor[(10, 3, 10), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(600), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(270), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %823 = @func_14274() /* ty=Tensor[(10, 3, 1), float32] */;
  %824 = cast(%823, dtype="float32") /* ty=Tensor[(10, 3, 1), float32] */;
  %825 = cast(%var_15657, dtype="float32") /* ty=Tensor[(10, 3, 10), float32] */;
  %826 = cast(%var_15671, dtype="float32") /* ty=Tensor[(600), float32] */;
  %827 = reshape(%826, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %828 = @func_13916(%827) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(4, 10, 15), float32], Tensor[(600), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %829 = @func_13297() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %830 = @func_10948() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %831 = cast(meta[relay.Constant][32] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %832 = reshape(%831, newshape=[5, 6, 9]) /* ty=Tensor[(5, 6, 9), float32] */;
  %833 = @func_6633() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %834 = minimum(%824, %825) /* ty=Tensor[(10, 3, 10), float32] */;
  %835 = @func_6353() /* ty=Tensor[(13, 8, 5), float64] */;
  %836 = %828.3;
  %837 = %829.0;
  %838 = %830.0;
  %839 = @func_6381(%832) /* ty=Tensor[(5, 6, 9), float32] */;
  %840 = %833.0;
  %841 = @func_5024() /* ty=Tensor[(13, 8, 5), float64] */;
  (%834, %835, %836, %var_15671, %837, %838, %839, meta[relay.Constant][32] /* ty=Tensor[(270), float32] */, %840, %841)
}

def @func_16826() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(225), float64]) {
  @func_16824() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(225), float64]) */
}

def @func_10295(%var_10286: Tensor[(13, 4, 3), float64]) -> Tensor[(13, 4, 3), float64] {
  %842 = cast(%var_10286, dtype="float64") /* ty=Tensor[(13, 4, 3), float64] */;
  acosh(%842) /* ty=Tensor[(13, 4, 3), float64] */
}

def @func_12535(%var_12521: Tensor[(10, 3, 11), int32]) -> Tensor[(10, 3, 11), bool] {
  %843 = @func_4390() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64]) */;
  %844 = %843.2;
  %845 = cast(%844, dtype="bool") /* ty=Tensor[(10, 3, 1), bool] */;
  %846 = cast(%var_12521, dtype="bool") /* ty=Tensor[(10, 3, 11), bool] */;
  logical_or(%845, %846) /* ty=Tensor[(10, 3, 11), bool] */
}

def @func_15169(%var_15167: Tensor[(560), uint64], %var_15168: Tensor[(750), uint16]) -> (Tensor[(5, 13, 2), float64], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70, 1), uint64], Tensor[(10, 3, ?), int8]) {
  %865 = fn (%var_15144: Tensor[(560), uint64], %var_15145: Tensor[(750), uint16]) -> (Tensor[(5, 13, 2), float64], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70, 1), uint64], Tensor[(10, 3, ?), int8]) {
    %847 = cast(%var_15144, dtype="uint64") /* ty=Tensor[(560), uint64] */;
    %848 = cast(%var_15145, dtype="uint16") /* ty=Tensor[(750), uint16] */;
    %849 = cast(meta[relay.Constant][33] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %850 = cast(meta[relay.Constant][34] /* ty=Tensor[(70, 1), uint64] */, dtype="uint64") /* ty=Tensor[(70, 1), uint64] */;
    %851 = reshape(%847, newshape=[560]) /* ty=Tensor[(560), uint64] */;
    %852 = reshape(%848, newshape=[750]) /* ty=Tensor[(750), uint16] */;
    %853 = reshape(%849, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %854 = reshape(%850, newshape=[70]) /* ty=Tensor[(70), uint64] */;
    %855 = @func_3597(%851, %852, %853, %854) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(7, 2, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64]) */;
    %856 = @func_11150() /* ty=(Tensor[(10, 3, 1), float32],) */;
    %857 = %856.0;
    %858 = @func_6177() /* ty=Tensor[(10, 3, 1), float32] */;
    %859 = cast(%858, dtype="int8") /* ty=Tensor[(10, 3, 1), int8] */;
    %860 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
    %861 = cast(%857, dtype="int8") /* ty=Tensor[(10, 3, 1), int8] */;
    %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %863 = %855.4;
    %864 = bitwise_xor(%861, %862) /* ty=Tensor[(10, 3, ?), int8] */;
    (%863, %var_15144, %var_15145, meta[relay.Constant][33] /* ty=Tensor[(130), float64] */, meta[relay.Constant][34] /* ty=Tensor[(70, 1), uint64] */, %864)
  };
  %865(%var_15167, %var_15168) /* ty=(Tensor[(5, 13, 2), float64], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70, 1), uint64], Tensor[(10, 3, ?), int8]) */
}

def @func_18687(%var_18686: Tensor[(360, 16), bool]) -> Tensor[(360, 16), bool] {
  %872 = fn (%var_18680: Tensor[(360, 16), bool]) -> Tensor[(360, 16), bool] {
    %866 = @func_6418() /* ty=(Tensor[(360, 16), bool], Tensor[(13, 8, 5), float64]) */;
    %867 = %866.0;
    %868 = cast(%var_18680, dtype="bool") /* ty=Tensor[(360, 16), bool] */;
    %869 = shape_of(%867, dtype="int32") /* ty=Tensor[(2), int32] */;
    %870 = cast(%867, dtype="bool") /* ty=Tensor[(360, 16), bool] */;
    %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    greater(%870, %871) /* ty=Tensor[(360, 16), bool] */
  };
  %872(%var_18686) /* ty=Tensor[(360, 16), bool] */
}

def @func_19326() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %876 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
    %873 = @func_6633() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %874 = @func_6353() /* ty=Tensor[(13, 8, 5), float64] */;
    %875 = %873.0;
    (%874, %875)
  };
  %876() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */
}

def @func_6840(%var_6838: Tensor[(560), uint64]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(70), float64]) {
  @func_6837(%var_6838) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(70), float64]) */
}

def @func_8153() -> (Tensor[(13, 8, 5), float32],) {
  @func_8151() /* ty=(Tensor[(13, 8, 5), float32],) */
}

def @func_8040() -> Tensor[(13, 8, 5), float64] {
  %877 = @func_4760() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %877.3
}

def @func_16755() -> Tensor[(13, 8, 5), float32] {
  %879 = fn () -> Tensor[(13, 8, 5), float32] {
    %878 = @func_10242() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
    %878.0
  };
  %879() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_6418() -> (Tensor[(360, 16), bool], Tensor[(13, 8, 5), float64]) {
  %880 = @func_5736() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(70), uint64], Tensor[(360, 1), float32]) */;
  %881 = %880.2;
  %882 = cast(%881, dtype="bool") /* ty=Tensor[(360, 1), bool] */;
  %883 = cast(meta[relay.Constant][35] /* ty=Tensor[(360, 16), float32] */, dtype="bool") /* ty=Tensor[(360, 16), bool] */;
  %884 = @func_3970() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %885 = greater_equal(%882, %883) /* ty=Tensor[(360, 16), bool] */;
  %886 = %884.0;
  (%885, %886)
}

def @func_11714(%var_11713: Tensor[(10, 3, 4), float32]) -> Tensor[(10, 3, 4), uint32] {
  %891 = fn (%var_11683: Tensor[(10, 3, 4), float32]) -> Tensor[(10, 3, 4), uint32] {
    %887 = @func_10395() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
    %888 = %887.1;
    %889 = cast(%888, dtype="uint32") /* ty=Tensor[(10, 3, 1), uint32] */;
    %890 = cast(%var_11683, dtype="uint32") /* ty=Tensor[(10, 3, 4), uint32] */;
    logical_xor(%889, %890) /* ty=Tensor[(10, 3, 4), uint32] */
  };
  %891(%var_11713) /* ty=Tensor[(10, 3, 4), uint32] */
}

def @func_19522() -> Tensor[(13, 8, 5), float32] {
  %893 = fn () -> Tensor[(13, 8, 5), float32] {
    %892 = @func_8077() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(360), float32]) */;
    %892.1
  };
  %893() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_10577() -> (Tensor[(13, 8, 5), float32], Tensor[(8, 8, 6), float64], Tensor[(13, 8, 5), float32]) {
  %900 = fn () -> (Tensor[(13, 8, 5), float32], Tensor[(8, 8, 6), float64], Tensor[(13, 8, 5), float32]) {
    %894 = @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
    %895 = @func_9976() /* ty=(Tensor[(8, 8, 6), float64],) */;
    %896 = @func_7950() /* ty=(int32, Tensor[(13, 8, 5), float32]) */;
    %897 = %894.4;
    %898 = %895.0;
    %899 = %896.1;
    (%897, %898, %899)
  };
  %900() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(8, 8, 6), float64], Tensor[(13, 8, 5), float32]) */
}

def @func_5737() -> (Tensor[(13, 8, 5), float32], Tensor[(70), uint64], Tensor[(360, 1), float32]) {
  %908 = fn () -> (Tensor[(13, 8, 5), float32], Tensor[(70), uint64], Tensor[(360, 1), float32]) {
    %901 = cast(meta[relay.Constant][36] /* ty=Tensor[(360, 1), float32] */, dtype="float32") /* ty=Tensor[(360, 1), float32] */;
    %902 = cast(meta[relay.Constant][36] /* ty=Tensor[(360, 1), float32] */, dtype="float32") /* ty=Tensor[(360, 1), float32] */;
    %903 = reshape(%901, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
    %904 = reshape(%902, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
    %905 = @func_2805(%903, %904) /* ty=(Tensor[(5, 9, 8), float32], Tensor[(7, 2, 5), float64], Tensor[(70), uint64]) */;
    %906 = @func_5099() /* ty=Tensor[(13, 8, 5), float32] */;
    %907 = %905.2;
    (%906, %907, meta[relay.Constant][36] /* ty=Tensor[(360, 1), float32] */)
  };
  %908() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(70), uint64], Tensor[(360, 1), float32]) */
}

def @func_7275(%var_7251: Tensor[(270), float32]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) {
  %909 = @func_3935() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %910 = @func_4560() /* ty=(int32, Tensor[(13, 8, 5), float32]) */;
  %911 = cast(%var_7251, dtype="float32") /* ty=Tensor[(270), float32] */;
  %912 = reshape(%911, newshape=[270]) /* ty=Tensor[(270), float32] */;
  %913 = @func_6561(%912) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) */;
  %914 = %909.1;
  %915 = %910.1;
  %916 = %913.2;
  (%914, %915, %916, %var_7251)
}

def @func_12056(%var_12026: Tensor[(3, 8, 10), float64]) -> (Tensor[(3, 8, 10), float64], Tensor[(13, 8, 5), float32]) {
  %917 = cast(%var_12026, dtype="float64") /* ty=Tensor[(3, 8, 10), float64] */;
  %918 = cos(%917) /* ty=Tensor[(3, 8, 10), float64] */;
  %919 = @func_5564() /* ty=Tensor[(13, 8, 5), float32] */;
  (%918, %919)
}

def @func_6589() -> (Tensor[(13, 8, 5), float32],) {
  %921 = fn () -> (Tensor[(13, 8, 5), float32],) {
    %920 = @func_5564() /* ty=Tensor[(13, 8, 5), float32] */;
    (%920,)
  };
  %921() /* ty=(Tensor[(13, 8, 5), float32],) */
}

def @func_3772() -> Tensor[(13, 8, 5), float32] {
  %924 = fn () -> Tensor[(13, 8, 5), float32] {
    %922 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
    %923 = cast(%922, dtype="float32") /* ty=Tensor[(13, 8, 5), float32] */;
    acosh(%923) /* ty=Tensor[(13, 8, 5), float32] */
  };
  %924() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_10019() -> Tensor[(13, 8, 5), float32] {
  @func_10017() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_16342() -> Tensor[(13, 8, 5), float32] {
  @func_16340() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_5827() -> (Tensor[(13, 8, 5), float32],) {
  %925 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %926 = %925.0;
  (%926,)
}

def @func_16972(%var_16966: Tensor[(12, 3, 7), bool]) -> Tensor[(12, 3, 7), bool] {
  %927 = @func_16292() /* ty=(Tensor[(12, 3, 7), bool],) */;
  %928 = %927.0;
  %929 = cast(%var_16966, dtype="bool") /* ty=Tensor[(12, 3, 7), bool] */;
  %930 = shape_of(%928, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(%928, dtype="bool") /* ty=Tensor[(12, 3, 7), bool] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%931, %932) /* ty=Tensor[(12, 3, 7), bool] */
}

def @func_6178() -> Tensor[(10, 3, 1), float32] {
  %934 = fn () -> Tensor[(10, 3, 1), float32] {
    %933 = @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
    %933.5
  };
  %934() /* ty=Tensor[(10, 3, 1), float32] */
}

def @func_7016() -> Tensor[(13, 8, 5), float64] {
  %935 = @func_3888() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
  %935.0
}

def @func_7534(%var_7532: Tensor[(225), float64], %var_7533: Tensor[(10, 3, 4), float64]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 5, 9), float64], Tensor[(10, 3, 1), bool], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 4), int32], Tensor[(10, 3, 225), float64]) {
  @func_7530(%var_7532, %var_7533) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 5, 9), float64], Tensor[(10, 3, 1), bool], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 4), int32], Tensor[(10, 3, 225), float64]) */
}

def @func_9549() -> Tensor[(13, 8, 5), float64] {
  %936 = fn () -> Tensor[(13, 8, 5), float64] {
    @func_4991() /* ty=Tensor[(13, 8, 5), float64] */
  };
  %936() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_10949() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %940 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
    %937 = @func_3908() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %938 = %937.0;
    %939 = @func_8897() /* ty=Tensor[(13, 8, 5), float64] */;
    (%938, %939)
  };
  %940() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */
}

def @func_5025() -> Tensor[(13, 8, 5), float64] {
  %942 = fn () -> Tensor[(13, 8, 5), float64] {
    %941 = @func_3613() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %941.0
  };
  %942() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_4561() -> (int32, Tensor[(13, 8, 5), float32]) {
  %947 = fn () -> (int32, Tensor[(13, 8, 5), float32]) {
    %943 = @func_4521() /* ty=(int32,) */;
    %944 = @func_3935() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %945 = %943.0;
    %946 = %944.0;
    (%945, %946)
  };
  %947() /* ty=(int32, Tensor[(13, 8, 5), float32]) */
}

def @func_12349() -> (Tensor[(13, 8, 5), float64],) {
  %950 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %948 = @func_5186() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %949 = %948.1;
    (%949,)
  };
  %950() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_17045() -> Tensor[(13, 8, 5), float64] {
  @func_17043() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_14392() -> Tensor[(13, 8, 5), float32] {
  @func_14390() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_19189() -> (Tensor[(15, 6, 5), float32],) {
  @func_19187() /* ty=(Tensor[(15, 6, 5), float32],) */
}

def @func_4079() -> Tensor[(13, 8, 5), float32] {
  @func_4077() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_11351() -> Tensor[(13, 8, 5), float32] {
  %951 = fn () -> Tensor[(13, 8, 5), float32] {
    @func_3835() /* ty=Tensor[(13, 8, 5), float32] */
  };
  %951() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_8892() -> (Tensor[(5, 10, 15), bool],) {
  @func_8890() /* ty=(Tensor[(5, 10, 15), bool],) */
}

def @func_11027() -> Tensor[(7, 11, 15), float64] {
  %953 = fn () -> Tensor[(7, 11, 15), float64] {
    %952 = cast(meta[relay.Constant][37] /* ty=Tensor[(7, 11, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 11, 15), float64] */;
    asin(%952) /* ty=Tensor[(7, 11, 15), float64] */
  };
  %953() /* ty=Tensor[(7, 11, 15), float64] */
}

def @func_12059(%var_12057: Tensor[(3, 8, 10), float64]) -> (Tensor[(3, 8, 10), float64], Tensor[(13, 8, 5), float32]) {
  @func_12056(%var_12057) /* ty=(Tensor[(3, 8, 10), float64], Tensor[(13, 8, 5), float32]) */
}

def @func_9706() -> Tensor[(5, 10, 15), bool] {
  %955 = fn () -> Tensor[(5, 10, 15), bool] {
    %954 = @func_8293() /* ty=(Tensor[(5, 10, 15), bool],) */;
    %954.0
  };
  %955() /* ty=Tensor[(5, 10, 15), bool] */
}

def @func_15751() -> (Tensor[(13, 8, 5), float32],) {
  %956 = @func_9511() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %957 = %956.1;
  (%957,)
}

def @func_16481() -> Tensor[(13, 8, 5), float32] {
  @func_16479() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_16648() -> (Tensor[(13, 8, 5), float32], Tensor[(225), float64], Tensor[(225), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %967 = fn () -> (Tensor[(13, 8, 5), float32], Tensor[(225), float64], Tensor[(225), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
    %958 = cast(meta[relay.Constant][38] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
    %959 = reshape(%958, newshape=[225]) /* ty=Tensor[(225), float64] */;
    %960 = @func_15502(%959) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 5, 9), float64], Tensor[(225), float64], Tensor[(120), float64]) */;
    %961 = @func_4178() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %962 = @func_10948() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
    %963 = @func_14390() /* ty=Tensor[(13, 8, 5), float32] */;
    %964 = %960.2;
    %965 = %961.0;
    %966 = %962.0;
    (%963, %964, meta[relay.Constant][38] /* ty=Tensor[(225), float64] */, %965, %966)
  };
  %967() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(225), float64], Tensor[(225), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */
}

def @func_8934() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(560), uint64]) {
  %968 = @func_6338() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %969 = @func_3613() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %970 = cast(meta[relay.Constant][39] /* ty=Tensor[(560), uint64] */, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %971 = reshape(%970, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %972 = @func_7912(%971) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(750), uint16], Tensor[(70), float64], Tensor[(560), uint64], Tensor[(10, 3, 1), int32], int32) */;
  %973 = %968.0;
  %974 = %969.0;
  %975 = %972.3;
  (%973, %974, %975, meta[relay.Constant][39] /* ty=Tensor[(560), uint64] */)
}

def @func_3959() -> Tensor[(13, 8, 5), float32] {
  %977 = fn () -> Tensor[(13, 8, 5), float32] {
    %976 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %976.0
  };
  %977() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_7345() -> (Tensor[(70), uint64], Tensor[(9, 16, 2), int64]) {
  %985 = fn () -> (Tensor[(70), uint64], Tensor[(9, 16, 2), int64]) {
    %978 = @func_5736() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(70), uint64], Tensor[(360, 1), float32]) */;
    %979 = @func_4521() /* ty=(int32,) */;
    %980 = %979.0;
    %981 = cast(%980, dtype="int64") /* ty=int64 */;
    %982 = cast(meta[relay.Constant][40] /* ty=Tensor[(9, 16, 2), int32] */, dtype="int64") /* ty=Tensor[(9, 16, 2), int64] */;
    %983 = %978.1;
    %984 = maximum(%981, %982) /* ty=Tensor[(9, 16, 2), int64] */;
    (%983, %984)
  };
  %985() /* ty=(Tensor[(70), uint64], Tensor[(9, 16, 2), int64]) */
}

def @func_15897(%var_15896: Tensor[(180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(10, 3, 180), bool]) {
  %994 = fn (%var_15888: Tensor[(180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(10, 3, 180), bool]) {
    %986 = cast(%var_15888, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %987 = reshape(%986, newshape=[180]) /* ty=Tensor[(180), uint8] */;
    %988 = @func_6782(%987) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(180), uint8]) */;
    %989 = @func_14274() /* ty=Tensor[(10, 3, 1), float32] */;
    %990 = cast(%989, dtype="bool") /* ty=Tensor[(10, 3, 1), bool] */;
    %991 = cast(%var_15888, dtype="bool") /* ty=Tensor[(180), bool] */;
    %992 = %988.1;
    %993 = logical_and(%990, %991) /* ty=Tensor[(10, 3, 180), bool] */;
    (%992, %993)
  };
  %994(%var_15896) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(10, 3, 180), bool]) */
}

def @func_9406(%var_9405: Tensor[(750), uint16]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) {
  %1004 = fn (%var_9390: Tensor[(750), uint16]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) {
    %995 = @func_3970() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %996 = @func_9349() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %997 = cast(%var_9390, dtype="uint16") /* ty=Tensor[(750), uint16] */;
    %998 = reshape(%997, newshape=[5, 10, 15]) /* ty=Tensor[(5, 10, 15), uint16] */;
    %999 = @func_2171(%998) /* ty=(Tensor[(5, 10, 15), bool],) */;
    %1000 = @func_6989() /* ty=Tensor[(13, 8, 5), float64] */;
    %1001 = %995.0;
    %1002 = %996.0;
    %1003 = %999.0;
    (%1000, %1001, %1002, %1003, %var_9390)
  };
  %1004(%var_9405) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */
}

def @func_16002(%var_16000: int16, %var_16001: Tensor[(12, 30), float32]) -> (Tensor[(13, 8, 5), float32], Tensor[(12, 30), float32], Tensor[(14, 4, 8), bool]) {
  %1015 = fn (%var_15978: int16, %var_15985: Tensor[(12, 30), float32]) -> (Tensor[(13, 8, 5), float32], Tensor[(12, 30), float32], Tensor[(14, 4, 8), bool]) {
    %1005 = cast(%var_15985, dtype="float32") /* ty=Tensor[(12, 30), float32] */;
    %1006 = reshape(%1005, newshape=[6, 60]) /* ty=Tensor[(6, 60), float32] */;
    %1007 = @func_4307(%1006) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 9, 8), float32], Tensor[(6, 60), float32], Tensor[(13, 8, 5), float64]) */;
    %1008 = cast(%var_15978, dtype="bool") /* ty=bool */;
    %1009 = cast(meta[relay.Constant][41] /* ty=Tensor[(14, 4, 8), int16] */, dtype="bool") /* ty=Tensor[(14, 4, 8), bool] */;
    %1010 = less(%1008, %1009) /* ty=Tensor[(14, 4, 8), bool] */;
    %1011 = cast(%var_15978, dtype="bool") /* ty=bool */;
    %1012 = cast(%1010, dtype="bool") /* ty=Tensor[(14, 4, 8), bool] */;
    %1013 = %1007.1;
    %1014 = equal(%1011, %1012) /* ty=Tensor[(14, 4, 8), bool] */;
    (%1013, %var_15985, %1014)
  };
  %1015(%var_16000, %var_16001) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(12, 30), float32], Tensor[(14, 4, 8), bool]) */
}

def @func_7278(%var_7276: Tensor[(270), float32]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) {
  @func_7275(%var_7276) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) */
}

def @func_12893() -> Tensor[(10, 3, 1), float32] {
  %1016 = fn () -> Tensor[(10, 3, 1), float32] {
    @func_10724() /* ty=Tensor[(10, 3, 1), float32] */
  };
  %1016() /* ty=Tensor[(10, 3, 1), float32] */
}

def @func_12865() -> (Tensor[(7, 11, 15), float64],) {
  @func_12863() /* ty=(Tensor[(7, 11, 15), float64],) */
}

def @func_16294() -> (Tensor[(12, 3, 7), bool],) {
  @func_16292() /* ty=(Tensor[(12, 3, 7), bool],) */
}

def @func_10031() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %1021 = fn () -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
    %1017 = @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1018 = @func_9417() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %1019 = %1017.0;
    %1020 = %1018.0;
    (%1019, %1020)
  };
  %1021() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */
}

def @func_17746(%var_17636: Tensor[(270), float32]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(13, 8, 5), float32], Tensor[(8, 8, 6), float64], Tensor[(270), uint64], Tensor[(13, 8, 5), float64], Tensor[(360), float32]) {
  %1022 = @func_8151() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1023 = cast(%var_17636, dtype="float32") /* ty=Tensor[(270), float32] */;
  %1024 = reshape(%1023, newshape=[5, 6, 9]) /* ty=Tensor[(5, 6, 9), float32] */;
  %1025 = @func_12604() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(8, 8, 6), float64], Tensor[(10, 3, 1), float32]) */;
  %1026 = cast(%var_17636, dtype="float64") /* ty=Tensor[(270), float64] */;
  %1027 = asinh(%1026) /* ty=Tensor[(270), float64] */;
  %1028 = cast(meta[relay.Constant][42] /* ty=Tensor[(270), float64] */, dtype="uint64") /* ty=Tensor[(270), uint64] */;
  %1029 = shape_of(%1027, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1030 = cast(%1027, dtype="uint64") /* ty=Tensor[(270), uint64] */;
  %1031 = dyn.reshape(%1028, %1029, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %1032 = @func_15443() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(360), float32]) */;
  %1033 = %1022.0;
  %1034 = @func_6381(%1024) /* ty=Tensor[(5, 6, 9), float32] */;
  %1035 = @func_6132() /* ty=Tensor[(13, 8, 5), float32] */;
  %1036 = %1025.1;
  %1037 = multiply(%1030, %1031) /* ty=Tensor[(270), uint64] */;
  %1038 = @func_13820() /* ty=Tensor[(13, 8, 5), float64] */;
  %1039 = %1032.2;
  (%1033, %1034, %1035, %1036, %1037, %1038, %1039)
}

def @func_8647() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  %1043 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
    %1040 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1041 = @func_5648() /* ty=Tensor[(13, 8, 5), float64] */;
    %1042 = %1040.0;
    (%1041, %1042)
  };
  %1043() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */
}

def @func_16824() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(225), float64]) {
  %1044 = @func_4569() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1045 = cast(meta[relay.Constant][43] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %1046 = reshape(%1045, newshape=[225]) /* ty=Tensor[(225), float64] */;
  %1047 = @func_15502(%1046) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 5, 9), float64], Tensor[(225), float64], Tensor[(120), float64]) */;
  %1048 = %1044.0;
  %1049 = %1047.0;
  (%1048, %1049, meta[relay.Constant][43] /* ty=Tensor[(225), float64] */)
}

def @func_12013() -> (Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  @func_12011() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */
}

def @func_12438() -> (Tensor[(15, 6, 5), bool],) {
  %1052 = fn () -> (Tensor[(15, 6, 5), bool],) {
    %1050 = @func_10060() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(15, 6, 5), bool], Tensor[(450), uint8]) */;
    %1051 = %1050.2;
    (%1051,)
  };
  %1052() /* ty=(Tensor[(15, 6, 5), bool],) */
}

def @func_16717(%var_16715: Tensor[(120), float32], %var_16716: int32) -> (Tensor[(13, 8, 5), float64], Tensor[(10, 3, 4), uint32], Tensor[(120), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(10, 3, 1), int32], int32) {
  %1065 = fn (%var_16662: Tensor[(120), float32], %var_16701: int32) -> (Tensor[(13, 8, 5), float64], Tensor[(10, 3, 4), uint32], Tensor[(120), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(10, 3, 1), int32], int32) {
    %1053 = @func_8077() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(360), float32]) */;
    %1054 = cast(%var_16662, dtype="float32") /* ty=Tensor[(120), float32] */;
    %1055 = reshape(%1054, newshape=[10, 3, 4]) /* ty=Tensor[(10, 3, 4), float32] */;
    %1056 = @func_10030() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %1057 = @func_13701() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %1058 = cast(%var_16701, dtype="int32") /* ty=int32 */;
    %1059 = reshape(%1058, newshape=[]) /* ty=int32 */;
    %1060 = %1053.0;
    %1061 = @func_11712(%1055) /* ty=Tensor[(10, 3, 4), uint32] */;
    %1062 = %1056.0;
    %1063 = %1057.0;
    %1064 = @func_2489(%1059) /* ty=Tensor[(10, 3, 1), int32] */;
    (%1060, %1061, %var_16662, %1062, %1063, %1064, %var_16701)
  };
  %1065(%var_16715, %var_16716) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(10, 3, 4), uint32], Tensor[(120), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(10, 3, 1), int32], int32) */
}

def @func_6926() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %1068 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
    %1066 = @func_5882() /* ty=Tensor[(13, 8, 5), float64] */;
    %1067 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
    (%1066, %1067)
  };
  %1068() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */
}

def @func_16292() -> (Tensor[(12, 3, 7), bool],) {
  %1069 = cast(meta[relay.Constant][44] /* ty=Tensor[(12, 3, 7), float64] */, dtype="float64") /* ty=Tensor[(12, 3, 7), float64] */;
  %1070 = acos(%1069) /* ty=Tensor[(12, 3, 7), float64] */;
  %1071 = cast(%1070, dtype="bool") /* ty=Tensor[(12, 3, 7), bool] */;
  %1072 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(12, 3, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1073 = cast(meta[relay.Constant][44] /* ty=Tensor[(12, 3, 7), float64] */, dtype="bool") /* ty=Tensor[(12, 3, 7), bool] */;
  %1074 = dyn.reshape(%1071, %1072, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1075 = less(%1073, %1074) /* ty=Tensor[(12, 3, 7), bool] */;
  (%1075,)
}

def @func_19630() -> Tensor[(13, 8, 5), float64] {
  %1076 = fn () -> Tensor[(13, 8, 5), float64] {
    @func_8897() /* ty=Tensor[(13, 8, 5), float64] */
  };
  %1076() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_8994() -> (Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], int32) {
  @func_8992() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], int32) */
}

def @func_16595() -> Tensor[(13, 8, 5), float32] {
  @func_16593() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_3690() -> (Tensor[(13, 8, 5), float32],) {
  %1077 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
  %1078 = cast(%1077, dtype="float32") /* ty=Tensor[(13, 8, 5), float32] */;
  %1079 = sinh(%1078) /* ty=Tensor[(13, 8, 5), float32] */;
  (%1079,)
}

def @func_10464() -> (Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(750), uint16]) {
  @func_10462() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(750), uint16]) */
}

def @func_7611() -> (Tensor[(13, 8, 5), float64],) {
  @func_7609() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_4521() -> (int32,) {
  %1080 = @func_4390() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64]) */;
  %1081 = %1080.3;
  (%1081,)
}

def @func_8546(%var_8544: Tensor[(16, 7, 1), int16], %var_8545: Tensor[(16, 7, 1), int16]) -> (Tensor[(16, 7, ?), int16],) {
  @func_8542(%var_8544, %var_8545) /* ty=(Tensor[(16, 7, ?), int16],) */
}

def @func_12310() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %1086 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
    %1082 = @func_4760() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
    %1083 = @func_5186() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %1084 = %1082.3;
    %1085 = %1083.1;
    (%1084, %1085)
  };
  %1086() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */
}

def @func_4761() -> (Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
  %1106 = fn () -> (Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
    %1087 = cast(meta[relay.Constant][45] /* ty=Tensor[(280, 2), uint64] */, dtype="uint64") /* ty=Tensor[(280, 2), uint64] */;
    %1088 = cast(meta[relay.Constant][45] /* ty=Tensor[(280, 2), uint64] */, dtype="uint64") /* ty=Tensor[(280, 2), uint64] */;
    %1089 = cast(meta[relay.Constant][46] /* ty=Tensor[(750), uint16] */, dtype="uint16") /* ty=Tensor[(750), uint16] */;
    %1090 = reshape(%1087, newshape=[14, 4, 10]) /* ty=Tensor[(14, 4, 10), uint64] */;
    %1091 = reshape(%1088, newshape=[14, 4, 10]) /* ty=Tensor[(14, 4, 10), uint64] */;
    %1092 = reshape(%1089, newshape=[750]) /* ty=Tensor[(750), uint16] */;
    %1093 = @func_3147(%1090, %1091, %1092) /* ty=(Tensor[(14, 4, 10), uint64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
    %1094 = cast(meta[relay.Constant][45] /* ty=Tensor[(280, 2), uint64] */, dtype="float32") /* ty=Tensor[(280, 2), float32] */;
    %1095 = rsqrt(%1094) /* ty=Tensor[(280, 2), float32] */;
    %1096 = cast(meta[relay.Constant][45] /* ty=Tensor[(280, 2), uint64] */, dtype="uint8") /* ty=Tensor[(280, 2), uint8] */;
    %1097 = shape_of(%1095, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1098 = cast(%1095, dtype="uint8") /* ty=Tensor[(280, 2), uint8] */;
    %1099 = dyn.reshape(%1096, %1097, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %1100 = @func_4077() /* ty=Tensor[(13, 8, 5), float32] */;
    %1101 = %1093.1;
    %1102 = @func_4405() /* ty=Tensor[(13, 8, 5), float64] */;
    %1103 = minimum(%1098, %1099) /* ty=Tensor[(280, 2), uint8] */;
    %1104 = @func_3958() /* ty=Tensor[(13, 8, 5), float32] */;
    %1105 = @func_3958() /* ty=Tensor[(13, 8, 5), float32] */;
    (%1100, %1101, meta[relay.Constant][46] /* ty=Tensor[(750), uint16] */, %1102, %1103, %1104, %1105)
  };
  %1106() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */
}

def @func_5041() -> (Tensor[(13, 8, 5), float64],) {
  %1108 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %1107 = @func_5024() /* ty=Tensor[(13, 8, 5), float64] */;
    (%1107,)
  };
  %1108() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_5099() -> Tensor[(13, 8, 5), float32] {
  @func_3958() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_17863() -> (Tensor[(13, 8, 5), float64],) {
  %1111 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %1109 = @func_17114() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %1110 = %1109.1;
    (%1110,)
  };
  %1111() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_10254() -> (Tensor[(10, 3, 1), float32],) {
  @func_10252() /* ty=(Tensor[(10, 3, 1), float32],) */
}

def @func_4030(%var_4029: int32) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64]) {
  %1119 = fn (%var_4012: int32) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64]) {
    %1112 = @func_3888() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
    %1113 = cast(%var_4012, dtype="int32") /* ty=int32 */;
    %1114 = reshape(%1113, newshape=[]) /* ty=int32 */;
    %1115 = %1112.0;
    %1116 = @func_3771() /* ty=Tensor[(13, 8, 5), float32] */;
    %1117 = @func_2489(%1114) /* ty=Tensor[(10, 3, 1), int32] */;
    %1118 = @func_3476() /* ty=Tensor[(13, 8, 5), float64] */;
    (%1115, %1116, %1117, %var_4012, %1118)
  };
  %1119(%var_4029) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64]) */
}

def @func_7707(%var_7701: Tensor[(16, 8, 1), float64]) -> (Tensor[(16, 8, 1), float64], Tensor[(15, 6, 5), bool], Tensor[(450), uint8]) {
  %1120 = cast(%var_7701, dtype="float64") /* ty=Tensor[(16, 8, 1), float64] */;
  %1121 = cast(meta[relay.Constant][47] /* ty=Tensor[(450), uint8] */, dtype="uint8") /* ty=Tensor[(450), uint8] */;
  %1122 = reshape(%1121, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), uint8] */;
  %1123 = @func_1590(%1122) /* ty=(Tensor[(15, 6, 5), bool],) */;
  %1124 = cos(%1120) /* ty=Tensor[(16, 8, 1), float64] */;
  %1125 = %1123.0;
  (%1124, %1125, meta[relay.Constant][47] /* ty=Tensor[(450), uint8] */)
}

def @func_10062() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(15, 6, 5), bool], Tensor[(450), uint8]) {
  @func_10060() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(15, 6, 5), bool], Tensor[(450), uint8]) */
}

def @func_12796() -> (Tensor[(13, 8, 5), float64],) {
  @func_12794() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_14034() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %1129 = fn () -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
    %1126 = @func_4569() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %1127 = @func_3771() /* ty=Tensor[(13, 8, 5), float32] */;
    %1128 = %1126.0;
    (%1127, %1128)
  };
  %1129() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */
}

def @func_5829() -> (Tensor[(13, 8, 5), float32],) {
  @func_5827() /* ty=(Tensor[(13, 8, 5), float32],) */
}

def @func_15753() -> (Tensor[(13, 8, 5), float32],) {
  @func_15751() /* ty=(Tensor[(13, 8, 5), float32],) */
}

def @func_7760() -> (Tensor[(10, 3, 1), float32],) {
  %1131 = fn () -> (Tensor[(10, 3, 1), float32],) {
    %1130 = @func_6177() /* ty=Tensor[(10, 3, 1), float32] */;
    (%1130,)
  };
  %1131() /* ty=(Tensor[(10, 3, 1), float32],) */
}

def @func_14642() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  %1132 = @func_8992() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], int32) */;
  %1133 = @func_5287() /* ty=(int32, Tensor[(13, 8, 5), float64]) */;
  %1134 = @func_11489() /* ty=(Tensor[(70), uint64], Tensor[(13, 8, 5), float32]) */;
  %1135 = %1132.0;
  %1136 = %1133.1;
  %1137 = %1134.1;
  (%1135, %1136, %1137)
}

def @func_6133() -> Tensor[(13, 8, 5), float32] {
  %1139 = fn () -> Tensor[(13, 8, 5), float32] {
    %1138 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1138.0
  };
  %1139() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_15445() -> (Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(360), float32]) {
  @func_15443() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(360), float32]) */
}

def @func_6340() -> (Tensor[(13, 8, 5), float64],) {
  @func_6338() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_11831() -> (Tensor[(13, 8, 5), float64],) {
  %1141 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %1140 = @func_4405() /* ty=Tensor[(13, 8, 5), float64] */;
    (%1140,)
  };
  %1141() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_16975(%var_16973: Tensor[(12, 3, 7), bool]) -> Tensor[(12, 3, 7), bool] {
  @func_16972(%var_16973) /* ty=Tensor[(12, 3, 7), bool] */
}

def @func_14436() -> Tensor[(13, 8, 5), float64] {
  %1143 = fn () -> Tensor[(13, 8, 5), float64] {
    %1142 = @func_10030() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %1142.1
  };
  %1143() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_10103() -> Tensor[(10, 3, 1), float32] {
  @func_6177() /* ty=Tensor[(10, 3, 1), float32] */
}

def @func_19133() -> (Tensor[(70), uint64],) {
  @func_19131() /* ty=(Tensor[(70), uint64],) */
}

def @func_16479() -> Tensor[(13, 8, 5), float32] {
  @func_5099() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_11219() -> Tensor[(13, 8, 5), float64] {
  @func_11217() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_17355() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64]) {
  @func_17353() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64]) */
}

def @func_8801() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  %1144 = @func_6633() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1145 = @func_5827() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1146 = @func_7205() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %1147 = @func_6588() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1148 = %1144.0;
  %1149 = %1145.0;
  %1150 = %1146.1;
  %1151 = %1147.0;
  (%1148, %1149, %1150, %1151)
}

def @func_17506(%var_17504: Tensor[(156), float64]) -> (Tensor[(13, 8, 5), float64], Tensor[(819), float64], Tensor[(156), float64], Tensor[(280, 2), float64]) {
  @func_17503(%var_17504) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(819), float64], Tensor[(156), float64], Tensor[(280, 2), float64]) */
}

def @func_9350() -> (Tensor[(13, 8, 5), float32],) {
  %1154 = fn () -> (Tensor[(13, 8, 5), float32],) {
    %1152 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1153 = %1152.0;
    (%1153,)
  };
  %1154() /* ty=(Tensor[(13, 8, 5), float32],) */
}

def @func_14040() -> (Tensor[(13, 8, 5), float32],) {
  %1157 = fn () -> (Tensor[(13, 8, 5), float32],) {
    %1155 = @func_5066() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1156 = %1155.0;
    (%1156,)
  };
  %1157() /* ty=(Tensor[(13, 8, 5), float32],) */
}

def @func_12765() -> (Tensor[(13, 8, 5), float32],) {
  %1160 = fn () -> (Tensor[(13, 8, 5), float32],) {
    %1158 = @func_5827() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1159 = %1158.0;
    (%1159,)
  };
  %1160() /* ty=(Tensor[(13, 8, 5), float32],) */
}

def @func_6837(%var_6821: Tensor[(560), uint64]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(70), float64]) {
  %1161 = @func_5066() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1162 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1163 = cast(%var_6821, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %1164 = cast(meta[relay.Constant][48] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %1165 = cast(meta[relay.Constant][49] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %1166 = reshape(%1163, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %1167 = reshape(%1164, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %1168 = reshape(%1165, newshape=[70]) /* ty=Tensor[(70), uint64] */;
  %1169 = @func_4479(%1166, %1167, %1168) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), float64]) */;
  %1170 = %1169.4;
  %1171 = cast(%1170, dtype="float64") /* ty=Tensor[(70), float64] */;
  %1172 = %1161.0;
  %1173 = @func_5648() /* ty=Tensor[(13, 8, 5), float64] */;
  %1174 = %1162.0;
  %1175 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
  %1176 = atanh(%1171) /* ty=Tensor[(70), float64] */;
  (%1172, %1173, %1174, %var_6821, meta[relay.Constant][48] /* ty=Tensor[(130), float64] */, meta[relay.Constant][49] /* ty=Tensor[(70), uint64] */, %1175, %1176)
}

def @func_58(%var_57: Tensor[(10, 1, 4), float64]) -> (Tensor[(10, ?, 4), int8],) {
  %1184 = fn (%var_5: Tensor[(10, 1, 4), float64]) -> (Tensor[(10, ?, 4), int8],) {
    %1177 = cast(%var_5, dtype="float64") /* ty=Tensor[(10, 1, 4), float64] */;
    %1178 = sigmoid(%1177) /* ty=Tensor[(10, 1, 4), float64] */;
    %1179 = cast(%var_5, dtype="int8") /* ty=Tensor[(10, 1, 4), int8] */;
    %1180 = shape_of(%1178, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1181 = cast(%1178, dtype="int8") /* ty=Tensor[(10, 1, 4), int8] */;
    %1182 = dyn.reshape(%1179, %1180, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1183 = right_shift(%1181, %1182) /* ty=Tensor[(10, ?, 4), int8] */;
    (%1183,)
  };
  %1184(%var_57) /* ty=(Tensor[(10, ?, 4), int8],) */
}

def @func_13820() -> Tensor[(13, 8, 5), float64] {
  %1185 = @func_11378() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1185.0
}

def @func_9639() -> (Tensor[(10, 3, 1), float32],) {
  %1187 = fn () -> (Tensor[(10, 3, 1), float32],) {
    %1186 = @func_6177() /* ty=Tensor[(10, 3, 1), float32] */;
    (%1186,)
  };
  %1187() /* ty=(Tensor[(10, 3, 1), float32],) */
}

def @func_16940() -> Tensor[(13, 8, 5), float64] {
  @func_16938() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_16340() -> Tensor[(13, 8, 5), float32] {
  %1188 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1188.0
}

def @func_8542(%var_8534: Tensor[(16, 7, 1), int16], %var_8535: Tensor[(16, 7, 1), int16]) -> (Tensor[(16, 7, ?), int16],) {
  %1189 = cast(%var_8535, dtype="int16") /* ty=Tensor[(16, 7, 1), int16] */;
  %1190 = shape_of(%var_8534, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1191 = cast(%var_8534, dtype="int16") /* ty=Tensor[(16, 7, 1), int16] */;
  %1192 = dyn.reshape(%1189, %1190, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1193 = bitwise_or(%1191, %1192) /* ty=Tensor[(16, 7, ?), int16] */;
  (%1193,)
}

def @func_6438() -> (Tensor[(13, 8, 5), float32],) {
  %1194 = @func_4760() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %1195 = %1194.6;
  (%1195,)
}

def @func_19592() -> (int32,) {
  %1198 = fn () -> (int32,) {
    %1196 = @func_9900() /* ty=(int32,) */;
    %1197 = %1196.0;
    (%1197,)
  };
  %1198() /* ty=(int32,) */
}

def @func_3478() -> Tensor[(13, 8, 5), float64] {
  @func_3476() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_15392() -> Tensor[(13, 8, 5), float32] {
  %1200 = fn () -> Tensor[(13, 8, 5), float32] {
    %1199 = @func_12764() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1199.0
  };
  %1200() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_12855() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(90, 2), uint8]) {
  @func_12853() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(90, 2), uint8]) */
}

def @func_10395() -> (Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) {
  %1201 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1202 = @func_9638() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %1203 = %1202.0;
  %1204 = cast(%1203, dtype="float32") /* ty=Tensor[(10, 3, 1), float32] */;
  %1205 = %1201.0;
  %1206 = sigmoid(%1204) /* ty=Tensor[(10, 3, 1), float32] */;
  (%1205, %1206)
}

def @func_5565() -> Tensor[(13, 8, 5), float32] {
  %1210 = fn () -> Tensor[(13, 8, 5), float32] {
    %1207 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1208 = %1207.0;
    %1209 = cast(%1208, dtype="float32") /* ty=Tensor[(13, 8, 5), float32] */;
    asinh(%1209) /* ty=Tensor[(13, 8, 5), float32] */
  };
  %1210() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_9536(%var_9520: Tensor[(12, 12, 3), int16]) -> (Tensor[(12, 12, 3), bool],) {
  %1211 = cast(meta[relay.Constant][50] /* ty=Tensor[(12, 12, 3), int16] */, dtype="bool") /* ty=Tensor[(12, 12, 3), bool] */;
  %1212 = shape_of(%var_9520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1213 = cast(%var_9520, dtype="bool") /* ty=Tensor[(12, 12, 3), bool] */;
  %1214 = dyn.reshape(%1211, %1212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1215 = greater(%1213, %1214) /* ty=Tensor[(12, 12, 3), bool] */;
  (%1215,)
}

def @func_13257(%var_13256: Tensor[(63, 1), uint32]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(8, 8, 6), float64], Tensor[(7, ?, 9), bool], Tensor[(63, 1), uint32]) {
  %1224 = fn (%var_13251: Tensor[(63, 1), uint32]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(8, 8, 6), float64], Tensor[(7, ?, 9), bool], Tensor[(63, 1), uint32]) {
    %1216 = @func_10576() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(8, 8, 6), float64], Tensor[(13, 8, 5), float32]) */;
    %1217 = cast(%var_13251, dtype="uint32") /* ty=Tensor[(63, 1), uint32] */;
    %1218 = reshape(%1217, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), uint32] */;
    %1219 = @func_5995(%1218) /* ty=(Tensor[(7, ?, 9), bool], Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(70), uint64], Tensor[(13, 8, 5), float32], Tensor[(360, 1), float32]) */;
    %1220 = @func_10689() /* ty=Tensor[(13, 8, 5), float32] */;
    %1221 = @func_4077() /* ty=Tensor[(13, 8, 5), float32] */;
    %1222 = %1216.1;
    %1223 = %1219.0;
    (%1220, %1221, %1222, %1223, %var_13251)
  };
  %1224(%var_13256) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(8, 8, 6), float64], Tensor[(7, ?, 9), bool], Tensor[(63, 1), uint32]) */
}

def @func_14381() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) {
  %1225 = @func_9511() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %1226 = %1225.1;
  %1227 = @func_10017() /* ty=Tensor[(13, 8, 5), float32] */;
  (%1226, %1227)
}

def @func_4602() -> (Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) {
  @func_4600() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */
}

def @func_15023(%var_14977: Tensor[(10, 3, 9), float32], %var_15012: Tensor[(6, 180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(10, 3, 9), int64], Tensor[(3, 60), uint8], Tensor[(6, 180), bool], Tensor[(13, 8, 5), float32]) {
  %1228 = @func_11274() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
  %1229 = @func_9714() /* ty=Tensor[(10, 3, 1), float32] */;
  %1230 = cast(%1229, dtype="int64") /* ty=Tensor[(10, 3, 1), int64] */;
  %1231 = cast(%var_14977, dtype="int64") /* ty=Tensor[(10, 3, 9), int64] */;
  %1232 = cast(meta[relay.Constant][51] /* ty=Tensor[(3, 60), uint8] */, dtype="uint8") /* ty=Tensor[(3, 60), uint8] */;
  %1233 = reshape(%1232, newshape=[1, 180]) /* ty=Tensor[(1, 180), uint8] */;
  %1234 = @func_6688(%1233) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(130), float64], Tensor[(1, 180), uint8], Tensor[(1200), int8]) */;
  %1235 = %1234.3;
  %1236 = cast(%1235, dtype="bool") /* ty=Tensor[(1, 180), bool] */;
  %1237 = cast(%var_15012, dtype="bool") /* ty=Tensor[(6, 180), bool] */;
  %1238 = @func_9511() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %1239 = %1228.1;
  %1240 = logical_xor(%1230, %1231) /* ty=Tensor[(10, 3, 9), int64] */;
  %1241 = less(%1236, %1237) /* ty=Tensor[(6, 180), bool] */;
  %1242 = %1238.1;
  (%1239, %1240, meta[relay.Constant][51] /* ty=Tensor[(3, 60), uint8] */, %1241, %1242)
}

def @func_15443() -> (Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(360), float32]) {
  %1243 = @func_12809() /* ty=(Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(360), float32]) */;
  %1244 = cast(meta[relay.Constant][52] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1245 = cast(meta[relay.Constant][52] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1246 = reshape(%1244, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %1247 = reshape(%1245, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
  %1248 = @func_2805(%1246, %1247) /* ty=(Tensor[(5, 9, 8), float32], Tensor[(7, 2, 5), float64], Tensor[(70), uint64]) */;
  %1249 = %1243.1;
  %1250 = %1248.1;
  (%1249, %1250, meta[relay.Constant][52] /* ty=Tensor[(360), float32] */)
}

def @func_19071() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) {
  %1255 = fn () -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) {
    %1251 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1252 = @func_16479() /* ty=Tensor[(13, 8, 5), float32] */;
    %1253 = %1251.0;
    %1254 = @func_18859() /* ty=Tensor[(10, 3, 1), float32] */;
    (%1252, %1253, %1254)
  };
  %1255() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */
}

def @func_16198(%var_16195: Tensor[(270), float32], %var_16196: Tensor[(1200), int8], %var_16197: Tensor[(560), uint64]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(270), float32], Tensor[(13, 8, 5), float32], Tensor[(7, 11, 15), float64], Tensor[(5, 13, 2), float64], Tensor[(1200), int8], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(1, 70), uint64]) {
  %1283 = fn (%var_16082: Tensor[(270), float32], %var_16153: Tensor[(1200), int8], %var_16156: Tensor[(560), uint64]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(270), float32], Tensor[(13, 8, 5), float32], Tensor[(7, 11, 15), float64], Tensor[(5, 13, 2), float64], Tensor[(1200), int8], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(1, 70), uint64]) {
    %1256 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1257 = @func_11378() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %1258 = @func_9417() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %1259 = cast(%var_16082, dtype="float32") /* ty=Tensor[(270), float32] */;
    %1260 = reshape(%1259, newshape=[270]) /* ty=Tensor[(270), float32] */;
    %1261 = @func_8696(%1260) /* ty=(int32, Tensor[(5, 6, 9), float32], Tensor[(270), float32]) */;
    %1262 = @func_12863() /* ty=(Tensor[(7, 11, 15), float64],) */;
    %1263 = cast(%var_16153, dtype="int8") /* ty=Tensor[(1200), int8] */;
    %1264 = reshape(%1263, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
    %1265 = @func_15909(%1264) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(1200), int8]) */;
    %1266 = cast(%var_16156, dtype="uint64") /* ty=Tensor[(560), uint64] */;
    %1267 = %1265.1;
    %1268 = cast(%1267, dtype="float64") /* ty=Tensor[(5, 13, 2), float64] */;
    %1269 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 70), uint64] */, dtype="uint64") /* ty=Tensor[(1, 70), uint64] */;
    %1270 = reshape(%1266, newshape=[560]) /* ty=Tensor[(560), uint64] */;
    %1271 = reshape(%1268, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %1272 = reshape(%1269, newshape=[70]) /* ty=Tensor[(70), uint64] */;
    %1273 = @func_4479(%1270, %1271, %1272) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), float64]) */;
    %1274 = %1256.0;
    %1275 = @func_3835() /* ty=Tensor[(13, 8, 5), float32] */;
    %1276 = %1257.0;
    %1277 = @func_5099() /* ty=Tensor[(13, 8, 5), float32] */;
    %1278 = %1258.0;
    %1279 = %1261.1;
    %1280 = @func_3771() /* ty=Tensor[(13, 8, 5), float32] */;
    %1281 = %1262.0;
    %1282 = %1273.6;
    (%1274, %1275, %1276, %1277, %1278, %1279, %var_16082, %1280, %1281, %1267, %var_16153, %1282, %var_16156, meta[relay.Constant][53] /* ty=Tensor[(1, 70), uint64] */)
  };
  %1283(%var_16195, %var_16196, %var_16197) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(270), float32], Tensor[(13, 8, 5), float32], Tensor[(7, 11, 15), float64], Tensor[(5, 13, 2), float64], Tensor[(1200), int8], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(1, 70), uint64]) */
}

def @func_12985() -> (Tensor[(13, 8, 5), float32], Tensor[(450), uint8], Tensor[(10, 3, 4), uint32], Tensor[(6, 20), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64], int32) {
  %1284 = @func_10060() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(15, 6, 5), bool], Tensor[(450), uint8]) */;
  %1285 = cast(meta[relay.Constant][54] /* ty=Tensor[(6, 20), float32] */, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
  %1286 = reshape(%1285, newshape=[10, 3, 4]) /* ty=Tensor[(10, 3, 4), float32] */;
  %1287 = @func_4569() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1288 = @func_4760() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %1289 = @func_12011() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
  %1290 = @func_4560() /* ty=(int32, Tensor[(13, 8, 5), float32]) */;
  %1291 = @func_3835() /* ty=Tensor[(13, 8, 5), float32] */;
  %1292 = %1284.3;
  %1293 = @func_11712(%1286) /* ty=Tensor[(10, 3, 4), uint32] */;
  %1294 = %1287.0;
  %1295 = @func_6989() /* ty=Tensor[(13, 8, 5), float64] */;
  %1296 = %1288.0;
  %1297 = @func_10724() /* ty=Tensor[(10, 3, 1), float32] */;
  %1298 = %1289.2;
  %1299 = %1290.0;
  (%1291, %1292, %1293, meta[relay.Constant][54] /* ty=Tensor[(6, 20), float32] */, %1294, %1295, %1296, %1297, %1298, %1299)
}

def @func_16765() -> Tensor[(15, 6, 5), float32] {
  %1300 = @func_15623() /* ty=(Tensor[(15, 6, 5), float32], Tensor[(13, 8, 5), float32]) */;
  %1300.0
}

def @func_3152(%var_3149: Tensor[(14, 4, 10), uint64], %var_3150: Tensor[(14, 4, 10), uint64], %var_3151: Tensor[(750), uint16]) -> (Tensor[(14, 4, 10), uint64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) {
  @func_3147(%var_3149, %var_3150, %var_3151) /* ty=(Tensor[(14, 4, 10), uint64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */
}

def @func_6384(%var_6382: Tensor[(5, 6, 9), float32]) -> Tensor[(5, 6, 9), float32] {
  @func_6381(%var_6382) /* ty=Tensor[(5, 6, 9), float32] */
}

def @func_13297() -> (Tensor[(10, 3, 1), float32],) {
  %1301 = @func_9638() /* ty=(Tensor[(10, 3, 1), float32],) */;
  %1302 = %1301.0;
  (%1302,)
}

def @func_9244() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %1307 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
    %1303 = @func_3908() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %1304 = @func_5040() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %1305 = %1303.0;
    %1306 = %1304.0;
    (%1305, %1306)
  };
  %1307() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */
}

def @func_4479(%var_4437: Tensor[(560), uint64], %var_4439: Tensor[(130), float64], %var_4440: Tensor[(70), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), float64]) {
  %1308 = cast(%var_4437, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %1309 = cast(meta[relay.Constant][55] /* ty=Tensor[(750), uint16] */, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %1310 = cast(%var_4439, dtype="float64") /* ty=Tensor[(130), float64] */;
  %1311 = cast(%var_4440, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %1312 = reshape(%1308, newshape=[560]) /* ty=Tensor[(560), uint64] */;
  %1313 = reshape(%1309, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %1314 = reshape(%1310, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %1315 = reshape(%1311, newshape=[70]) /* ty=Tensor[(70), uint64] */;
  %1316 = @func_3597(%1312, %1313, %1314, %1315) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(7, 2, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64]) */;
  %1317 = @func_3908() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1318 = @func_4178() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1319 = cast(meta[relay.Constant][55] /* ty=Tensor[(750), uint16] */, dtype="float32") /* ty=Tensor[(750), float32] */;
  %1320 = atan(%1319) /* ty=Tensor[(750), float32] */;
  %1321 = cast(%1320, dtype="float64") /* ty=Tensor[(750), float64] */;
  %1322 = @func_4405() /* ty=Tensor[(13, 8, 5), float64] */;
  %1323 = %1316.0;
  %1324 = %1317.0;
  %1325 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
  %1326 = %1318.0;
  %1327 = acosh(%1321) /* ty=Tensor[(750), float64] */;
  (%1322, %1323, %var_4437, %var_4439, %var_4440, %1324, %1325, %1326, %1327)
}

def @func_4055() -> (Tensor[(13, 8, 5), float64],) {
  %1330 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %1328 = @func_3888() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
    %1329 = %1328.0;
    (%1329,)
  };
  %1330() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_16767() -> Tensor[(15, 6, 5), float32] {
  @func_16765() /* ty=Tensor[(15, 6, 5), float32] */
}

def @func_18068() -> (Tensor[(13, 8, 5), float64],) {
  %1333 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %1331 = @func_9243() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
    %1332 = %1331.0;
    (%1332,)
  };
  %1333() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_15560() -> (Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(130), float64]) {
  %1340 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(130), float64]) {
    %1334 = @func_13701() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %1335 = cast(meta[relay.Constant][56] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %1336 = reshape(%1335, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %1337 = @func_7410(%1336) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(63), uint32]) */;
    %1338 = %1334.0;
    %1339 = %1337.3;
    (%1338, %1339, meta[relay.Constant][56] /* ty=Tensor[(130), float64] */)
  };
  %1340() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(130), float64]) */
}

def @func_8890() -> (Tensor[(5, 10, 15), bool],) {
  %1341 = @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
  %1342 = %1341.1;
  (%1342,)
}

def @func_480(%var_479: Tensor[(5, 13, 2), float64]) -> Tensor[(5, 13, 2), float64] {
  %1344 = fn (%var_473: Tensor[(5, 13, 2), float64]) -> Tensor[(5, 13, 2), float64] {
    %1343 = cast(%var_473, dtype="float64") /* ty=Tensor[(5, 13, 2), float64] */;
    asin(%1343) /* ty=Tensor[(5, 13, 2), float64] */
  };
  %1344(%var_479) /* ty=Tensor[(5, 13, 2), float64] */
}

def @func_17599() -> Tensor[(13, 8, 5), float32] {
  %1346 = fn () -> Tensor[(13, 8, 5), float32] {
    %1345 = @func_17012() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1345.0
  };
  %1346() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_15093() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %1351 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
    %1347 = @func_14234() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
    %1348 = @func_3888() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
    %1349 = %1347.0;
    %1350 = %1348.0;
    (%1349, %1350)
  };
  %1351() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */
}

def @func_19187() -> (Tensor[(15, 6, 5), float32],) {
  %1352 = @func_16765() /* ty=Tensor[(15, 6, 5), float32] */;
  (%1352,)
}

def @func_9224() -> (Tensor[(750), uint16],) {
  %1354 = fn () -> (Tensor[(750), uint16],) {
    %1353 = @func_9054() /* ty=Tensor[(750), uint16] */;
    (%1353,)
  };
  %1354() /* ty=(Tensor[(750), uint16],) */
}

def @func_6123() -> (Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) {
  @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */
}

def @func_6295() -> Tensor[(13, 8, 5), float64] {
  @func_6293() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_19170() -> (Tensor[(13, 8, 5), float64],) {
  @func_19168() /* ty=(Tensor[(13, 8, 5), float64],) */
}

def @func_19411() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
  %1359 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) {
    %1355 = @func_9417() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %1356 = @func_15350() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1357 = %1355.0;
    %1358 = %1356.0;
    (%1357, %1358)
  };
  %1359() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */
}

def @func_8295() -> (Tensor[(5, 10, 15), bool],) {
  @func_8293() /* ty=(Tensor[(5, 10, 15), bool],) */
}

def @func_19131() -> (Tensor[(70), uint64],) {
  %1360 = @func_11489() /* ty=(Tensor[(70), uint64], Tensor[(13, 8, 5), float32]) */;
  %1361 = %1360.0;
  (%1361,)
}

def @func_10397() -> (Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) {
  @func_10395() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */
}

def @func_4523() -> (int32,) {
  @func_4521() /* ty=(int32,) */
}

def @func_9271() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %1365 = fn () -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
    %1362 = @func_6588() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1363 = %1362.0;
    %1364 = @func_4405() /* ty=Tensor[(13, 8, 5), float64] */;
    (%1363, %1364)
  };
  %1365() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */
}

def @func_5318(%var_5311: Tensor[(13, 8, 5), float64]) -> (Tensor[(13, 8, 5), bool], Tensor[(13, 8, 5), float64]) {
  %1366 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1367 = %1366.0;
  %1368 = cast(%var_5311, dtype="bool") /* ty=Tensor[(13, 8, 5), bool] */;
  %1369 = shape_of(%1367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1370 = cast(%1367, dtype="bool") /* ty=Tensor[(13, 8, 5), bool] */;
  %1371 = dyn.reshape(%1368, %1369, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1372 = equal(%1370, %1371) /* ty=Tensor[(13, 8, 5), bool] */;
  %1373 = @func_4991() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1372, %1373)
}

def @func_2171(%var_2163: Tensor[(5, 10, 15), uint16]) -> (Tensor[(5, 10, 15), bool],) {
  %1374 = cast(%var_2163, dtype="bool") /* ty=Tensor[(5, 10, 15), bool] */;
  %1375 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(5, 10, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1376 = cast(meta[relay.Constant][57] /* ty=Tensor[(5, 10, 15), uint16] */, dtype="bool") /* ty=Tensor[(5, 10, 15), bool] */;
  %1377 = dyn.reshape(%1374, %1375, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1378 = less_equal(%1376, %1377) /* ty=Tensor[(5, 10, 15), bool] */;
  (%1378,)
}

def @func_4406() -> Tensor[(13, 8, 5), float64] {
  %1380 = fn () -> Tensor[(13, 8, 5), float64] {
    %1379 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %1379.0
  };
  %1380() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_18518(%var_18517: Tensor[(250, 3), uint16]) -> (Tensor[(13, 8, 5), float32], Tensor[(250, 3), uint16], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(750), float64]) {
  %1393 = fn (%var_18489: Tensor[(250, 3), uint16]) -> (Tensor[(13, 8, 5), float32], Tensor[(250, 3), uint16], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(750), float64]) {
    %1381 = @func_5827() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1382 = @func_15350() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1383 = @func_9243() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
    %1384 = cast(%var_18489, dtype="uint16") /* ty=Tensor[(250, 3), uint16] */;
    %1385 = reshape(%1384, newshape=[750]) /* ty=Tensor[(750), uint16] */;
    %1386 = @func_9404(%1385) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
    %1387 = %1386.4;
    %1388 = cast(%1387, dtype="float64") /* ty=Tensor[(750), float64] */;
    %1389 = %1381.0;
    %1390 = %1382.0;
    %1391 = %1383.1;
    %1392 = asinh(%1388) /* ty=Tensor[(750), float64] */;
    (%1389, %var_18489, %1390, %1391, %1392)
  };
  %1393(%var_18517) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(250, 3), uint16], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(750), float64]) */
}

def @func_12011() -> (Tensor[(13, 8, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  %1394 = @func_4569() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1395 = @func_5736() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(70), uint64], Tensor[(360, 1), float32]) */;
  %1396 = @func_5287() /* ty=(int32, Tensor[(13, 8, 5), float64]) */;
  %1397 = %1394.0;
  %1398 = %1395.1;
  %1399 = @func_5024() /* ty=Tensor[(13, 8, 5), float64] */;
  %1400 = %1396.1;
  (%1397, %1398, %1399, %1400)
}

def @func_3970() -> (Tensor[(13, 8, 5), float64],) {
  %1401 = @func_3476() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1401,)
}

def @func_9694() -> (Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(1, 270), float32]) {
  @func_9692() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(1, 270), float32]) */
}

def @func_9862() -> (Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float32]) {
  %1405 = fn () -> (Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float32]) {
    %1402 = @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1403 = @func_9705() /* ty=Tensor[(5, 10, 15), bool] */;
    %1404 = %1402.0;
    (%1403, %1404)
  };
  %1405() /* ty=(Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float32]) */
}

def @func_18859() -> Tensor[(10, 3, 1), float32] {
  %1406 = @func_17961() /* ty=(Tensor[(750), uint16], Tensor[(10, 3, 1), float32]) */;
  %1406.1
}

def @func_19551() -> (Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64]) {
  @func_19549() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float64]) */
}

def @func_2174(%var_2172: Tensor[(5, 10, 15), uint16]) -> (Tensor[(5, 10, 15), bool],) {
  @func_2171(%var_2172) /* ty=(Tensor[(5, 10, 15), bool],) */
}

def @func_8844(%var_8842: Tensor[(63), uint32]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(7, ?, 9), bool], Tensor[(63), uint32]) {
  %1407 = cast(%var_8842, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %1408 = reshape(%1407, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), uint32] */;
  %1409 = @func_5995(%1408) /* ty=(Tensor[(7, ?, 9), bool], Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(70), uint64], Tensor[(13, 8, 5), float32], Tensor[(360, 1), float32]) */;
  %1410 = @func_5882() /* ty=Tensor[(13, 8, 5), float64] */;
  %1411 = @func_6989() /* ty=Tensor[(13, 8, 5), float64] */;
  %1412 = @func_3835() /* ty=Tensor[(13, 8, 5), float32] */;
  %1413 = %1409.0;
  (%1410, %1411, %1412, %1413, %var_8842)
}

def @func_4392() -> (Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64]) {
  @func_4390() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64]) */
}

def @func_6690(%var_6689: Tensor[(1, 180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(130), float64], Tensor[(1, 180), uint8], Tensor[(1200), int8]) {
  %1425 = fn (%var_6684: Tensor[(1, 180), uint8]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(130), float64], Tensor[(1, 180), uint8], Tensor[(1200), int8]) {
    %1414 = @func_6121() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64], int32, Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
    %1415 = cast(%var_6684, dtype="uint8") /* ty=Tensor[(1, 180), uint8] */;
    %1416 = cast(%var_6684, dtype="uint8") /* ty=Tensor[(1, 180), uint8] */;
    %1417 = cast(meta[relay.Constant][58] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
    %1418 = reshape(%1415, newshape=[10, 2, 9]) /* ty=Tensor[(10, 2, 9), uint8] */;
    %1419 = reshape(%1416, newshape=[10, 2, 9]) /* ty=Tensor[(10, 2, 9), uint8] */;
    %1420 = reshape(%1417, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
    %1421 = @func_682(%1418, %1419, %1420) /* ty=(Tensor[(10, 2, 9), bool], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(10, ?, 4), int8], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(1200), int8], Tensor[(5, 13, 2), float64]) */;
    %1422 = @func_5648() /* ty=Tensor[(13, 8, 5), float64] */;
    %1423 = %1414.4;
    %1424 = %1421.2;
    (%1422, %1423, %1424, %var_6684, meta[relay.Constant][58] /* ty=Tensor[(1200), int8] */)
  };
  %1425(%var_6689) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(130), float64], Tensor[(1, 180), uint8], Tensor[(1200), int8]) */
}

def @func_11408(%var_11389: Tensor[(7, 9, 13), float64]) -> (Tensor[(7, 9, 13), float64],) {
  %1426 = cast(%var_11389, dtype="float64") /* ty=Tensor[(7, 9, 13), float64] */;
  %1427 = exp(%1426) /* ty=Tensor[(7, 9, 13), float64] */;
  (%1427,)
}

def @func_11600() -> Tensor[(5, 10, 15), bool] {
  @func_11598() /* ty=Tensor[(5, 10, 15), bool] */
}

def @func_16319() -> Tensor[(13, 8, 5), float64] {
  %1428 = fn () -> Tensor[(13, 8, 5), float64] {
    @func_4405() /* ty=Tensor[(13, 8, 5), float64] */
  };
  %1428() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_19971(%var_19969: Tensor[(560), uint64], %var_19970: Tensor[(50, 15), uint16]) -> (Tensor[(13, 8, 5), float64], Tensor[(130), float64], Tensor[(560), uint64], Tensor[(50, 15), uint16]) {
  @func_19967(%var_19969, %var_19970) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(130), float64], Tensor[(560), uint64], Tensor[(50, 15), uint16]) */
}

def @func_17255() -> (Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) {
  %1435 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) {
    %1429 = @func_11816() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %1430 = cast(meta[relay.Constant][59] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
    %1431 = reshape(%1430, newshape=[270]) /* ty=Tensor[(270), float32] */;
    %1432 = @func_7275(%1431) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) */;
    %1433 = %1429.0;
    %1434 = %1432.2;
    (%1433, %1434, meta[relay.Constant][59] /* ty=Tensor[(270), float32] */)
  };
  %1435() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 6, 9), float32], Tensor[(270), float32]) */
}

def @func_15352() -> (Tensor[(13, 8, 5), float32],) {
  @func_15350() /* ty=(Tensor[(13, 8, 5), float32],) */
}

def @func_11490() -> (Tensor[(70), uint64], Tensor[(13, 8, 5), float32]) {
  %1439 = fn () -> (Tensor[(70), uint64], Tensor[(13, 8, 5), float32]) {
    %1436 = @func_7344() /* ty=(Tensor[(70), uint64], Tensor[(9, 16, 2), int64]) */;
    %1437 = %1436.0;
    %1438 = @func_3835() /* ty=Tensor[(13, 8, 5), float32] */;
    (%1437, %1438)
  };
  %1439() /* ty=(Tensor[(70), uint64], Tensor[(13, 8, 5), float32]) */
}

def @func_18160() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(10, ?, 4), float64], Tensor[(1200), int8], Tensor[(40), float64]) {
  %1440 = @func_14039() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1441 = @func_5287() /* ty=(int32, Tensor[(13, 8, 5), float64]) */;
  %1442 = cast(meta[relay.Constant][60] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %1443 = cast(meta[relay.Constant][61] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %1444 = cast(meta[relay.Constant][60] /* ty=Tensor[(1200), int8] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %1445 = reshape(%1442, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int8] */;
  %1446 = reshape(%1443, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %1447 = reshape(%1444, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), bool] */;
  %1448 = @func_363(%1445, %1446, %1447) /* ty=(Tensor[(40), float64], Tensor[(10, ?, 4), float64], Tensor[(10, ?, 4), int8], Tensor[(5, 16, 15), bool], Tensor[(5, 16, 15), uint64]) */;
  %1449 = %1440.0;
  %1450 = %1441.1;
  %1451 = %1448.1;
  (%1449, %1450, %1451, meta[relay.Constant][60] /* ty=Tensor[(1200), int8] */, meta[relay.Constant][61] /* ty=Tensor[(40), float64] */)
}

def @func_14276() -> Tensor[(10, 3, 1), float32] {
  @func_14274() /* ty=Tensor[(10, 3, 1), float32] */
}

def @func_2491(%var_2490: int32) -> Tensor[(10, 3, 1), int32] {
  %1454 = fn (%var_2476: int32) -> Tensor[(10, 3, 1), int32] {
    %1452 = cast(%var_2476, dtype="int32") /* ty=int32 */;
    %1453 = cast(meta[relay.Constant][62] /* ty=Tensor[(10, 3, 1), int32] */, dtype="int32") /* ty=Tensor[(10, 3, 1), int32] */;
    maximum(%1452, %1453) /* ty=Tensor[(10, 3, 1), int32] */
  };
  %1454(%var_2490) /* ty=Tensor[(10, 3, 1), int32] */
}

def @func_18162() -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(10, ?, 4), float64], Tensor[(1200), int8], Tensor[(40), float64]) {
  @func_18160() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(10, ?, 4), float64], Tensor[(1200), int8], Tensor[(40), float64]) */
}

def @func_18342() -> Tensor[(5, 10, 15), bool] {
  @func_18340() /* ty=Tensor[(5, 10, 15), bool] */
}

def @func_10819() -> (Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32]) {
  %1458 = fn () -> (Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32]) {
    %1455 = @func_10252() /* ty=(Tensor[(10, 3, 1), float32],) */;
    %1456 = %1455.0;
    %1457 = @func_5099() /* ty=Tensor[(13, 8, 5), float32] */;
    (%1456, %1457)
  };
  %1458() /* ty=(Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32]) */
}

def @func_3908() -> (Tensor[(13, 8, 5), float64],) {
  %1459 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1459,)
}

def @func_13467(%var_13465: Tensor[(1200), int8]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(180), uint8], Tensor[(1200), int8]) {
  @func_13464(%var_13465) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 13, 2), float64], Tensor[(180), uint8], Tensor[(1200), int8]) */
}

def @func_11151() -> (Tensor[(10, 3, 1), float32],) {
  %1462 = fn () -> (Tensor[(10, 3, 1), float32],) {
    %1460 = @func_10252() /* ty=(Tensor[(10, 3, 1), float32],) */;
    %1461 = %1460.0;
    (%1461,)
  };
  %1462() /* ty=(Tensor[(10, 3, 1), float32],) */
}

def @func_4390() -> (Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(10, 3, 1), int32], int32, Tensor[(13, 8, 5), float64]) {
  %1463 = @func_4054() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1464 = cast(3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1465 = reshape(%1464, newshape=[]) /* ty=int32 */;
  %1466 = cast(meta[relay.Constant][63] /* ty=Tensor[(750), uint16] */, dtype="uint16") /* ty=Tensor[(750), uint16] */;
  %1467 = reshape(%1466, newshape=[750]) /* ty=Tensor[(750), uint16] */;
  %1468 = @func_3808(%1467) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
  %1469 = %1468.0;
  %1470 = cast(%1469, dtype="float64") /* ty=Tensor[(13, 8, 5), float64] */;
  %1471 = %1463.0;
  %1472 = @func_2489(%1465) /* ty=Tensor[(10, 3, 1), int32] */;
  %1473 = acos(%1470) /* ty=Tensor[(13, 8, 5), float64] */;
  (%1471, meta[relay.Constant][63] /* ty=Tensor[(750), uint16] */, %1472, 3 /* ty=int32 */, %1473)
}

def @func_5101() -> Tensor[(13, 8, 5), float32] {
  @func_5099() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_13685(%var_13683: Tensor[(819), float64], %var_13684: Tensor[(78, 2), float64]) -> (Tensor[(10, 3, 1), float32], Tensor[(7, 9, 13), float64], Tensor[(819), float64], Tensor[(13, 8, 5), float64], Tensor[(10, 3, 1), float32], Tensor[(13, 4, 3), float64], Tensor[(78, 2), float64], Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), float64]) {
  %1495 = fn (%var_13633: Tensor[(819), float64], %var_13659: Tensor[(78, 2), float64]) -> (Tensor[(10, 3, 1), float32], Tensor[(7, 9, 13), float64], Tensor[(819), float64], Tensor[(13, 8, 5), float64], Tensor[(10, 3, 1), float32], Tensor[(13, 4, 3), float64], Tensor[(78, 2), float64], Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), float64]) {
    %1474 = @func_10818() /* ty=(Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32]) */;
    %1475 = cast(%var_13633, dtype="float64") /* ty=Tensor[(819), float64] */;
    %1476 = reshape(%1475, newshape=[7, 9, 13]) /* ty=Tensor[(7, 9, 13), float64] */;
    %1477 = @func_11408(%1476) /* ty=(Tensor[(7, 9, 13), float64],) */;
    %1478 = @func_10111() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %1479 = @func_11150() /* ty=(Tensor[(10, 3, 1), float32],) */;
    %1480 = cast(%var_13659, dtype="float64") /* ty=Tensor[(78, 2), float64] */;
    %1481 = reshape(%1480, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), float64] */;
    %1482 = @func_10909() /* ty=(Tensor[(750), uint16], Tensor[(13, 8, 5), float64]) */;
    %1483 = @func_8992() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], int32) */;
    %1484 = %1483.1;
    %1485 = cast(%1484, dtype="float32") /* ty=Tensor[(5, 10, 15), float32] */;
    %1486 = cosh(%1485) /* ty=Tensor[(5, 10, 15), float32] */;
    %1487 = cast(%1486, dtype="float64") /* ty=Tensor[(5, 10, 15), float64] */;
    %1488 = %1474.0;
    %1489 = %1477.0;
    %1490 = %1478.0;
    %1491 = %1479.0;
    %1492 = @func_10295(%1481) /* ty=Tensor[(13, 4, 3), float64] */;
    %1493 = %1482.1;
    %1494 = log2(%1487) /* ty=Tensor[(5, 10, 15), float64] */;
    (%1488, %1489, %var_13633, %1490, %1491, %1492, %var_13659, %1493, %1494)
  };
  %1495(%var_13683, %var_13684) /* ty=(Tensor[(10, 3, 1), float32], Tensor[(7, 9, 13), float64], Tensor[(819), float64], Tensor[(13, 8, 5), float64], Tensor[(10, 3, 1), float32], Tensor[(13, 4, 3), float64], Tensor[(78, 2), float64], Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), float64]) */
}

def @func_3692() -> (Tensor[(13, 8, 5), float32],) {
  @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */
}

def @func_11817() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %1506 = fn () -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
    %1496 = @func_10111() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %1497 = @func_10462() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(750), uint16]) */;
    %1498 = @func_10395() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(10, 3, 1), float32]) */;
    %1499 = @func_8646() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
    %1500 = @func_8897() /* ty=Tensor[(13, 8, 5), float64] */;
    %1501 = %1496.0;
    %1502 = %1497.1;
    %1503 = %1498.0;
    %1504 = %1499.1;
    %1505 = @func_9438() /* ty=Tensor[(13, 8, 5), float64] */;
    (%1500, %1501, %1502, %1503, %1504, %1505)
  };
  %1506() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(750), uint16], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */
}

def @func_12583() -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) {
  @func_12581() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */
}

def @func_7530(%var_7450: Tensor[(225), float64], %var_7505: Tensor[(10, 3, 4), float64]) -> (Tensor[(13, 8, 5), float32], Tensor[(5, 5, 9), float64], Tensor[(10, 3, 1), bool], Tensor[(13, 8, 5), float32], Tensor[(10, 3, 4), int32], Tensor[(10, 3, 225), float64]) {
  %1507 = @func_5066() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1508 = cast(%var_7450, dtype="float64") /* ty=Tensor[(225), float64] */;
  %1509 = reshape(%1508, newshape=[5, 5, 9]) /* ty=Tensor[(5, 5, 9), float64] */;
  %1510 = @func_6246(%1509) /* ty=(Tensor[(5, 5, 9), float64], int32, Tensor[(13, 8, 5), float64], Tensor[(5, 5, 9), float64], Tensor[(13, 8, 5), float64]) */;
  %1511 = cast(9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1512 = reshape(%1511, newshape=[]) /* ty=int32 */;
  %1513 = @func_2489(%1512) /* ty=Tensor[(10, 3, 1), int32] */;
  %1514 = cast(%1513, dtype="float64") /* ty=Tensor[(10, 3, 1), float64] */;
  %1515 = atanh(%1514) /* ty=Tensor[(10, 3, 1), float64] */;
  %1516 = cast(%1515, dtype="bool") /* ty=Tensor[(10, 3, 1), bool] */;
  %1517 = cast(9 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %1518 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1519 = cast(%1515, dtype="int32") /* ty=Tensor[(10, 3, 1), int32] */;
  %1520 = cast(%var_7505, dtype="int32") /* ty=Tensor[(10, 3, 4), int32] */;
  %1521 = cast(%var_7450, dtype="uint16") /* ty=Tensor[(225), uint16] */;
  %1522 = cast(%1515, dtype="uint16") /* ty=Tensor[(10, 3, 1), uint16] */;
  %1523 = bitwise_or(%1521, %1522) /* ty=Tensor[(10, 3, 225), uint16] */;
  %1524 = cast(%1523, dtype="float64") /* ty=Tensor[(10, 3, 225), float64] */;
  %1525 = log2(%1524) /* ty=Tensor[(10, 3, 225), float64] */;
  %1526 = cast(%1525, dtype="float64") /* ty=Tensor[(10, 3, 225), float64] */;
  %1527 = %1507.0;
  %1528 = %1510.0;
  %1529 = less_equal(%1516, %1517) /* ty=Tensor[(10, 3, 1), bool] */;
  %1530 = %1518.0;
  %1531 = right_shift(%1519, %1520) /* ty=Tensor[(10, 3, 4), int32] */;
  %1532 = sinh(%1526) /* ty=Tensor[(10, 3, 225), float64] */;
  (%1527, %1528, %1529, %1530, %1531, %1532)
}

def @func_9306() -> Tensor[(13, 8, 5), float32] {
  %1533 = fn () -> Tensor[(13, 8, 5), float32] {
    @func_5564() /* ty=Tensor[(13, 8, 5), float32] */
  };
  %1533() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_1772(%var_1770: Tensor[(7, 2, 5), uint64], %var_1771: Tensor[(7, 2, 5), uint64]) -> (Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) {
  %1551 = fn (%var_1725: Tensor[(7, 2, 5), uint64], %var_1726: Tensor[(7, 2, 5), uint64]) -> (Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) {
    %1534 = cast(%var_1726, dtype="uint64") /* ty=Tensor[(7, 2, 5), uint64] */;
    %1535 = shape_of(%var_1725, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1536 = cast(%var_1725, dtype="uint64") /* ty=Tensor[(7, 2, 5), uint64] */;
    %1537 = dyn.reshape(%1534, %1535, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1538 = cast(%var_1725, dtype="bool") /* ty=Tensor[(7, 2, 5), bool] */;
    %1539 = shape_of(%var_1726, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1540 = cast(%var_1726, dtype="bool") /* ty=Tensor[(7, 2, 5), bool] */;
    %1541 = dyn.reshape(%1538, %1539, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1542 = not_equal(%1540, %1541) /* ty=Tensor[(7, 2, 5), bool] */;
    %1543 = cast(meta[relay.Constant][64] /* ty=Tensor[(7, 2, 5), bool] */, dtype="bool") /* ty=Tensor[(7, 2, 5), bool] */;
    %1544 = shape_of(%1542, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1545 = cast(%1542, dtype="bool") /* ty=Tensor[(7, 2, 5), bool] */;
    %1546 = dyn.reshape(%1543, %1544, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1547 = cast(%1542, dtype="float64") /* ty=Tensor[(7, 2, 5), float64] */;
    %1548 = bitwise_and(%1536, %1537) /* ty=Tensor[(7, 2, 5), uint64] */;
    %1549 = greater(%1545, %1546) /* ty=Tensor[(7, 2, 5), bool] */;
    %1550 = erf(%1547) /* ty=Tensor[(7, 2, 5), float64] */;
    (%1548, %1549, %1550)
  };
  %1551(%var_1770, %var_1771) /* ty=(Tensor[(7, 2, 5), uint64], Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) */
}

def @func_15808(%var_15807: Tensor[(4, 300), int8]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(4, 300), int8], Tensor[(40), float64], Tensor[(1, 16, 11), bool], float32, Tensor[(176), float32], Tensor[(13, 8, 5), float32], Tensor[(40, 1), float64]) {
  %1575 = fn (%var_15786: Tensor[(4, 300), int8]) -> (Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(4, 300), int8], Tensor[(40), float64], Tensor[(1, 16, 11), bool], float32, Tensor[(176), float32], Tensor[(13, 8, 5), float32], Tensor[(40, 1), float64]) {
    %1552 = @func_8738() /* ty=(Tensor[(13, 8, 5), float64],) */;
    %1553 = cast(%var_15786, dtype="int8") /* ty=Tensor[(4, 300), int8] */;
    %1554 = cast(meta[relay.Constant][65] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
    %1555 = reshape(%1553, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
    %1556 = reshape(%1554, newshape=[40, 1]) /* ty=Tensor[(40, 1), float64] */;
    %1557 = @func_5419(%1555, %1556) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(10, ?, 4), float64], Tensor[(1200), int8], Tensor[(40, 1), float64]) */;
    %1558 = cast(3.09916f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1559 = cast(meta[relay.Constant][66] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
    %1560 = reshape(%1558, newshape=[]) /* ty=float32 */;
    %1561 = reshape(%1559, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float32] */;
    %1562 = @func_9042(%1560, %1561) /* ty=(Tensor[(1, 16, 11), bool], Tensor[(13, 8, 5), float64]) */;
    %1563 = @func_9349() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1564 = cast(%var_15786, dtype="int8") /* ty=Tensor[(4, 300), int8] */;
    %1565 = cast(meta[relay.Constant][65] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
    %1566 = reshape(%1564, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
    %1567 = reshape(%1565, newshape=[40, 1]) /* ty=Tensor[(40, 1), float64] */;
    %1568 = @func_5419(%1566, %1567) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(10, ?, 4), float64], Tensor[(1200), int8], Tensor[(40, 1), float64]) */;
    %1569 = @func_6132() /* ty=Tensor[(13, 8, 5), float32] */;
    %1570 = %1552.0;
    %1571 = %1557.0;
    %1572 = %1562.0;
    %1573 = %1563.0;
    %1574 = %1568.3;
    (%1569, %1570, %1571, %var_15786, meta[relay.Constant][65] /* ty=Tensor[(40), float64] */, %1572, 3.09916f /* ty=float32 */, meta[relay.Constant][66] /* ty=Tensor[(176), float32] */, %1573, %1574)
  };
  %1575(%var_15807) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(4, 300), int8], Tensor[(40), float64], Tensor[(1, 16, 11), bool], float32, Tensor[(176), float32], Tensor[(13, 8, 5), float32], Tensor[(40, 1), float64]) */
}

def @func_19168() -> (Tensor[(13, 8, 5), float64],) {
  %1576 = @func_4991() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1576,)
}

def @func_3603(%var_3599: Tensor[(560), uint64], %var_3600: Tensor[(750), uint16], %var_3601: Tensor[(130), float64], %var_3602: Tensor[(70), uint64]) -> (Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(7, 2, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64]) {
  @func_3597(%var_3599, %var_3600, %var_3601, %var_3602) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(5, 10, 15), bool], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(7, 2, 5), float64], Tensor[(70), uint64], Tensor[(13, 8, 5), float64]) */
}

def @func_5006() -> Tensor[(750), uint16] {
  @func_5004() /* ty=Tensor[(750), uint16] */
}

def @func_9209() -> (Tensor[(13, 8, 5), float64],) {
  %1577 = @func_8897() /* ty=Tensor[(13, 8, 5), float64] */;
  (%1577,)
}

def @func_12916(%var_12915: Tensor[(4, 10, 15), float32]) -> Tensor[(4, 10, 15), float32] {
  %1579 = fn (%var_12894: Tensor[(4, 10, 15), float32]) -> Tensor[(4, 10, 15), float32] {
    %1578 = cast(%var_12894, dtype="float32") /* ty=Tensor[(4, 10, 15), float32] */;
    rsqrt(%1578) /* ty=Tensor[(4, 10, 15), float32] */
  };
  %1579(%var_12915) /* ty=Tensor[(4, 10, 15), float32] */
}

def @func_9977() -> (Tensor[(8, 8, 6), float64],) {
  %1589 = fn () -> (Tensor[(8, 8, 6), float64],) {
    %1580 = cast(meta[relay.Constant][67] /* ty=Tensor[(8, 8, 6), float32] */, dtype="float32") /* ty=Tensor[(8, 8, 6), float32] */;
    %1581 = cosh(%1580) /* ty=Tensor[(8, 8, 6), float32] */;
    %1582 = cast(%1581, dtype="int8") /* ty=Tensor[(8, 8, 6), int8] */;
    %1583 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(8, 8, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1584 = cast(meta[relay.Constant][67] /* ty=Tensor[(8, 8, 6), float32] */, dtype="int8") /* ty=Tensor[(8, 8, 6), int8] */;
    %1585 = dyn.reshape(%1582, %1583, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1586 = bitwise_and(%1584, %1585) /* ty=Tensor[(8, 8, 6), int8] */;
    %1587 = cast(%1586, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
    %1588 = sqrt(%1587) /* ty=Tensor[(8, 8, 6), float64] */;
    (%1588,)
  };
  %1589() /* ty=(Tensor[(8, 8, 6), float64],) */
}

def @func_12459() -> Tensor[(13, 8, 5), float32] {
  @func_12457() /* ty=Tensor[(13, 8, 5), float32] */
}

def @func_13822() -> Tensor[(13, 8, 5), float64] {
  @func_13820() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_10298(%var_10296: Tensor[(13, 4, 3), float64]) -> Tensor[(13, 4, 3), float64] {
  @func_10295(%var_10296) /* ty=Tensor[(13, 4, 3), float64] */
}

def @func_17885() -> Tensor[(13, 8, 5), float64] {
  @func_17883() /* ty=Tensor[(13, 8, 5), float64] */
}

def @func_12457() -> Tensor[(13, 8, 5), float32] {
  %1590 = @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1590.0
}

def @func_12279(%var_12277: float32, %var_12278: Tensor[(176), float32]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(130), float64], Tensor[(180), uint8], Tensor[(13, 8, 5), float64], float32, Tensor[(176), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %1608 = fn (%var_12199: float32, %var_12200: Tensor[(176), float32]) -> (Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(130), float64], Tensor[(180), uint8], Tensor[(13, 8, 5), float64], float32, Tensor[(176), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
    %1591 = @func_4760() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16], Tensor[(13, 8, 5), float64], Tensor[(280, 2), uint8], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float32]) */;
    %1592 = cast(meta[relay.Constant][68] /* ty=Tensor[(180), uint8] */, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %1593 = reshape(%1592, newshape=[1, 180]) /* ty=Tensor[(1, 180), uint8] */;
    %1594 = @func_6688(%1593) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(130), float64], Tensor[(1, 180), uint8], Tensor[(1200), int8]) */;
    %1595 = cast(%var_12199, dtype="float32") /* ty=float32 */;
    %1596 = cast(%var_12200, dtype="float32") /* ty=Tensor[(176), float32] */;
    %1597 = reshape(%1595, newshape=[]) /* ty=float32 */;
    %1598 = reshape(%1596, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float32] */;
    %1599 = @func_9042(%1597, %1598) /* ty=(Tensor[(1, 16, 11), bool], Tensor[(13, 8, 5), float64]) */;
    %1600 = @func_8077() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64], Tensor[(360), float32]) */;
    %1601 = @func_9438() /* ty=Tensor[(13, 8, 5), float64] */;
    %1602 = %1591.3;
    %1603 = %1594.2;
    %1604 = %1599.1;
    %1605 = @func_5024() /* ty=Tensor[(13, 8, 5), float64] */;
    %1606 = %1600.1;
    %1607 = @func_3504() /* ty=Tensor[(13, 8, 5), float64] */;
    (%1601, %1602, %1603, meta[relay.Constant][68] /* ty=Tensor[(180), uint8] */, %1604, %var_12199, %var_12200, %1605, %1606, %1607)
  };
  %1608(%var_12277, %var_12278) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(130), float64], Tensor[(180), uint8], Tensor[(13, 8, 5), float64], float32, Tensor[(176), float32], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */
}

def @func_6440() -> (Tensor[(13, 8, 5), float32],) {
  @func_6438() /* ty=(Tensor[(13, 8, 5), float32],) */
}

def @func_16938() -> Tensor[(13, 8, 5), float64] {
  %1609 = @func_11051() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1609.0
}

def @func_10882() -> (Tensor[(10, 3, 1), float32],) {
  %1610 = @func_10724() /* ty=Tensor[(10, 3, 1), float32] */;
  (%1610,)
}

def @func_5066() -> (Tensor[(13, 8, 5), float32],) {
  %1611 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1612 = %1611.0;
  (%1612,)
}

def @func_13916(%var_13857: Tensor[(600), float32]) -> (Tensor[(13, 8, 5), float32], Tensor[(4, 10, 15), float32], Tensor[(600), float32], Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) {
  %1613 = cast(%var_13857, dtype="float32") /* ty=Tensor[(600), float32] */;
  %1614 = reshape(%1613, newshape=[4, 10, 15]) /* ty=Tensor[(4, 10, 15), float32] */;
  %1615 = @func_9349() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1616 = @func_12348() /* ty=(Tensor[(13, 8, 5), float64],) */;
  %1617 = @func_10017() /* ty=Tensor[(13, 8, 5), float32] */;
  %1618 = @func_12914(%1614) /* ty=Tensor[(4, 10, 15), float32] */;
  %1619 = %1615.0;
  %1620 = %1616.0;
  (%1617, %1618, %var_13857, %1619, %1620)
}

def @func_17620() -> (Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64]) {
  @func_17618() /* ty=(Tensor[(5, 10, 15), bool], Tensor[(13, 8, 5), float64]) */
}

def @func_5997(%var_5996: Tensor[(7, 1, 9), uint32]) -> (Tensor[(7, ?, 9), bool], Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(70), uint64], Tensor[(13, 8, 5), float32], Tensor[(360, 1), float32]) {
  %1636 = fn (%var_5920: Tensor[(7, 1, 9), uint32]) -> (Tensor[(7, ?, 9), bool], Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(70), uint64], Tensor[(13, 8, 5), float32], Tensor[(360, 1), float32]) {
    %1621 = cast(meta[relay.Constant][69] /* ty=Tensor[(7, 1, 9), uint32] */, dtype="bool") /* ty=Tensor[(7, 1, 9), bool] */;
    %1622 = shape_of(%var_5920, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1623 = cast(%var_5920, dtype="bool") /* ty=Tensor[(7, 1, 9), bool] */;
    %1624 = dyn.reshape(%1621, %1622, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1625 = @func_3715() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1626 = cast(meta[relay.Constant][70] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
    %1627 = reshape(%1626, newshape=[70]) /* ty=Tensor[(70), uint64] */;
    %1628 = @func_4242(%1627) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(560), uint64], Tensor[(750), uint16], Tensor[(130), float64], Tensor[(70), uint64], Tensor[(5, 13, 2), float64], Tensor[(13, 8, 5), float64]) */;
    %1629 = @func_4129() /* ty=(Tensor[(13, 8, 5), float32],) */;
    %1630 = @func_5736() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(70), uint64], Tensor[(360, 1), float32]) */;
    %1631 = equal(%1623, %1624) /* ty=Tensor[(7, ?, 9), bool] */;
    %1632 = %1625.0;
    %1633 = %1628.3;
    %1634 = %1629.0;
    %1635 = %1630.2;
    (%1631, %1632, %1633, meta[relay.Constant][70] /* ty=Tensor[(70), uint64] */, %1634, %1635)
  };
  %1636(%var_5996) /* ty=(Tensor[(7, ?, 9), bool], Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(70), uint64], Tensor[(13, 8, 5), float32], Tensor[(360, 1), float32]) */
}

def @func_10884() -> (Tensor[(10, 3, 1), float32],) {
  @func_10882() /* ty=(Tensor[(10, 3, 1), float32],) */
}

def @func_12810() -> (Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(360), float32]) {
  %1646 = fn () -> (Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(360), float32]) {
    %1637 = @func_11150() /* ty=(Tensor[(10, 3, 1), float32],) */;
    %1638 = cast(meta[relay.Constant][71] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %1639 = cast(meta[relay.Constant][71] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %1640 = reshape(%1638, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
    %1641 = reshape(%1639, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), float32] */;
    %1642 = @func_2805(%1640, %1641) /* ty=(Tensor[(5, 9, 8), float32], Tensor[(7, 2, 5), float64], Tensor[(70), uint64]) */;
    %1643 = %1637.0;
    %1644 = @func_4077() /* ty=Tensor[(13, 8, 5), float32] */;
    %1645 = %1642.1;
    (%1643, %1644, %1645, meta[relay.Constant][71] /* ty=Tensor[(360), float32] */)
  };
  %1646() /* ty=(Tensor[(10, 3, 1), float32], Tensor[(13, 8, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(360), float32]) */
}

def @func_18651(%var_18650: Tensor[(750), uint16]) -> (Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(750), uint16], Tensor[(13, 8, 5), float64]) {
  %1655 = fn (%var_18600: Tensor[(750), uint16]) -> (Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(750), uint16], Tensor[(13, 8, 5), float64]) {
    %1647 = @func_5186() /* ty=(Tensor[(13, 8, 5), float32], Tensor[(13, 8, 5), float64]) */;
    %1648 = cast(%var_18600, dtype="uint16") /* ty=Tensor[(750), uint16] */;
    %1649 = reshape(%1648, newshape=[750]) /* ty=Tensor[(750), uint16] */;
    %1650 = @func_9404(%1649) /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32], Tensor[(5, 10, 15), bool], Tensor[(750), uint16]) */;
    %1651 = @func_15092() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float64]) */;
    %1652 = %1647.0;
    %1653 = %1650.4;
    %1654 = %1651.0;
    (%1652, %1653, %var_18600, %1654)
  };
  %1655(%var_18650) /* ty=(Tensor[(13, 8, 5), float32], Tensor[(750), uint16], Tensor[(750), uint16], Tensor[(13, 8, 5), float64]) */
}

def @func_686(%var_683: Tensor[(10, 2, 9), uint8], %var_684: Tensor[(10, 2, 9), uint8], %var_685: Tensor[(1200), int8]) -> (Tensor[(10, 2, 9), bool], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(10, ?, 4), int8], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(1200), int8], Tensor[(5, 13, 2), float64]) {
  %1679 = fn (%var_645: Tensor[(10, 2, 9), uint8], %var_646: Tensor[(10, 2, 9), uint8], %var_664: Tensor[(1200), int8]) -> (Tensor[(10, 2, 9), bool], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(10, ?, 4), int8], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(1200), int8], Tensor[(5, 13, 2), float64]) {
    %1656 = cast(%var_646, dtype="bool") /* ty=Tensor[(10, 2, 9), bool] */;
    %1657 = shape_of(%var_645, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1658 = cast(%var_645, dtype="bool") /* ty=Tensor[(10, 2, 9), bool] */;
    %1659 = dyn.reshape(%1656, %1657, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1660 = cast(meta[relay.Constant][72] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %1661 = reshape(%1660, newshape=[5, 13, 2]) /* ty=Tensor[(5, 13, 2), float64] */;
    %1662 = cast(meta[relay.Constant][73] /* ty=Tensor[(40, 1), float64] */, dtype="float64") /* ty=Tensor[(40, 1), float64] */;
    %1663 = reshape(%1662, newshape=[10, 1, 4]) /* ty=Tensor[(10, 1, 4), float64] */;
    %1664 = @func_56(%1663) /* ty=(Tensor[(10, ?, 4), int8],) */;
    %1665 = cast(%var_664, dtype="int8") /* ty=Tensor[(1200), int8] */;
    %1666 = %1664.0;
    %1667 = cast(%1666, dtype="float64") /* ty=Tensor[(10, ?, 4), float64] */;
    %1668 = cast(%var_664, dtype="bool") /* ty=Tensor[(1200), bool] */;
    %1669 = reshape(%1665, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int8] */;
    %1670 = reshape(%1667, newshape=[40]) /* ty=Tensor[(40), float64] */;
    %1671 = reshape(%1668, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), bool] */;
    %1672 = @func_363(%1669, %1670, %1671) /* ty=(Tensor[(40), float64], Tensor[(10, ?, 4), float64], Tensor[(10, ?, 4), int8], Tensor[(5, 16, 15), bool], Tensor[(5, 16, 15), uint64]) */;
    %1673 = cast(meta[relay.Constant][72] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %1674 = reshape(%1673, newshape=[5, 13, 2]) /* ty=Tensor[(5, 13, 2), float64] */;
    %1675 = less(%1658, %1659) /* ty=Tensor[(10, 2, 9), bool] */;
    %1676 = @func_478(%1661) /* ty=Tensor[(5, 13, 2), float64] */;
    %1677 = %1672.0;
    %1678 = @func_478(%1674) /* ty=Tensor[(5, 13, 2), float64] */;
    (%1675, %1676, meta[relay.Constant][72] /* ty=Tensor[(130), float64] */, %1666, meta[relay.Constant][73] /* ty=Tensor[(40, 1), float64] */, %1677, %var_664, %1678)
  };
  %1679(%var_683, %var_684, %var_685) /* ty=(Tensor[(10, 2, 9), bool], Tensor[(5, 13, 2), float64], Tensor[(130), float64], Tensor[(10, ?, 4), int8], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(1200), int8], Tensor[(5, 13, 2), float64]) */
}

def @func_3835() -> Tensor[(13, 8, 5), float32] {
  %1680 = @func_3690() /* ty=(Tensor[(13, 8, 5), float32],) */;
  %1680.0
}

def @func_11379() -> (Tensor[(13, 8, 5), float64],) {
  %1683 = fn () -> (Tensor[(13, 8, 5), float64],) {
    %1681 = @func_9586() /* ty=(Tensor[(13, 8, 5), float64], Tensor[(13, 8, 5), float32]) */;
    %1682 = %1681.0;
    (%1682,)
  };
  %1683() /* ty=(Tensor[(13, 8, 5), float64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen709/build/output.py", line 5886, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:56:35] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int

